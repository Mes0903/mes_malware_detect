
9b5c575303ca54693d306ee7a0d4a20e0e6c3a8ff2502a1deec04e29c236818c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	sbb    eax,0x3c43393
  401100:	and    BYTE PTR [esi+0x3135bf3f],bh
  401106:	clc    
  401107:	mov    ebx,0xedde3788
  40110c:	dec    ebp
  40110d:	jl     0x4010dd
  40110f:	popa   
  401110:	das    
  401111:	cmc    
  401112:	loop   0x4010e0
  401114:	mov    ecx,0xf36267ab
  401119:	in     al,0x7b
  40111b:	push   edi
  40111c:	shl    BYTE PTR [edi-0x464ab880],0x6
  401123:	mov    ch,0x12
  401125:	mov    edx,0xde5e431
  40112a:	xchg   ecx,eax
  40112b:	jp     0x401107
  40112d:	pop    edi
  40112e:	nop
  40112f:	popf   
  401130:	sbb    BYTE PTR [edi+0x28e0ea94],0x72
  401137:	cs loopne 0x401172
  40113a:	stc    
  40113b:	test   DWORD PTR [eax],0x71c30bdc
  401141:	mov    esp,0xf5f26b7b
  401146:	sahf   
  401147:	xchg   esp,eax
  401148:	fadd   QWORD PTR [ebp-0x43]
  40114b:	jmp    0x40111f
  40114d:	cmp    al,0x78
  40114f:	ins    BYTE PTR es:[edi],dx
  401150:	inc    ebx
  401151:	cmc    
  401152:	ret    0xf2a3
  401155:	mov    DWORD PTR [esi+0x41],ecx
  401158:	inc    ecx
  401159:	arpl   bp,sp
  40115b:	(bad)
  40115e:	clc    
  40115f:	sub    dh,BYTE PTR [edx+0x4d5dba24]
  401165:	std    
  401166:	xlat   BYTE PTR ds:[ebx]
  401167:	inc    edi
  401168:	mov    ah,0x6c
  40116a:	or     BYTE PTR [ebx+0x1],ch
  40116d:	vpmulhw ymm7,ymm2,YMMWORD PTR [ebp-0x458a4101]
  401175:	retf   
  401176:	fistp  QWORD PTR [eax-0x52]
  401179:	call   0xf97a2b2d
  40117e:	xor    ebx,ebx
  401180:	stos   DWORD PTR es:[edi],eax
  401181:	fild   DWORD PTR [ecx+edx*1]
  401184:	sar    DWORD PTR [ebx],1
  401186:	adc    bh,BYTE PTR [ebp-0x2ae2f553]
  40118c:	jmp    0x5b32d54c
  401191:	fsub   QWORD PTR [ebp-0x53020bef]
  401197:	call   0xc178:0x85285067
  40119e:	inc    edx
  40119f:	arpl   WORD PTR [esi+0x56],cx
  4011a2:	retf   0xdb77
  4011a5:	push   ebp
  4011a6:	imul   edx,eax,0xfffffff9
  4011a9:	adc    ecx,DWORD PTR [eax]
  4011ab:	(bad)  
  4011ac:	fidiv  WORD PTR [ebx-0x66]
  4011af:	dec    edx
  4011b0:	js     0x4011af
  4011b2:	pop    ebx
  4011b3:	lods   eax,DWORD PTR ds:[esi]
  4011b4:	xor    BYTE PTR [esi+0x2e],ah
  4011b7:	pop    es
  4011b8:	int    0x7f
  4011ba:	pop    ss
  4011bb:	push   ds
  4011bc:	jle    0xf72665d
  4011c2:	inc    ecx
  4011c3:	add    bl,ah
  4011c5:	push   ebp
  4011c6:	sbb    ecx,DWORD PTR [esi-0x3d516e5d]
  4011cc:	or     al,0x54
  4011ce:	inc    edi
  4011cf:	fwait
  4011d0:	or     BYTE PTR [eax+0x30],dl
  4011d3:	sub    eax,0x9f227571
  4011d8:	cmp    DWORD PTR [eax-0x53],edx
  4011db:	jo     0x40121e
  4011dd:	add    eax,0xa101b930
  4011e2:	jae    0x401181
  4011e4:	out    0x69,eax
  4011e6:	push   edx
  4011e7:	stos   DWORD PTR es:[edi],eax
  4011e8:	jg     0x40124e
  4011ea:	and    ch,BYTE PTR [esi+0x49428350]
  4011f0:	jb     0x401192
  4011f2:	sar    DWORD PTR [edx],cl
  4011f4:	fwait
  4011f5:	mov    bh,0xfe
  4011f7:	mov    bl,0xcf
  4011f9:	inc    ebx
  4011fa:	int3   
  4011fb:	test   eax,0x76669b2f
  401200:	or     ecx,esp
  401202:	xor    ebp,esi
  401204:	lods   al,BYTE PTR ds:[esi]
  401205:	sahf   
  401206:	sub    al,0x61
  401208:	ss jb  0x4011e6
  40120b:	mov    DWORD PTR [esi+0x20da4f9b],esi
  401211:	fwait
  401212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401213:	out    dx,al
  401214:	sbb    DWORD PTR [ebp+0x36c540b2],ebp
  40121a:	mov    fs,WORD PTR [edi+edi*1+0x9]
  40121e:	and    DWORD PTR ds:0xefc8a719,ebx
  401224:	jle    0x4011c9
  401226:	retf   0xa6ab
  401229:	sub    BYTE PTR [eax],dh
  40122b:	shl    DWORD PTR [edx-0x6397e8d7],cl
  401231:	fstp   DWORD PTR [edi]
  401233:	xchg   esp,eax
  401234:	sbb    al,al
  401236:	inc    ebx
  401237:	fsubp  st(5),st
  401239:	lds    esp,FWORD PTR [edx+0x62]
  40123c:	(bad)  
  40123d:	clc    
  40123e:	mov    ecx,0x917cd91f
  401243:	cld    
  401244:	jb     0x40127d
  401246:	js     0x4012c1
  401248:	in     al,dx
  401249:	mov    dl,0x44
  40124b:	mov    edi,0x69ab97d3
  401250:	add    dh,BYTE PTR [ecx-0x17]
  401253:	push   edx
  401254:	daa    
  401255:	gs pusha 
  401257:	and    al,0xd4
  401259:	enter  0x421e,0x77
  40125d:	jne    0x4012c9
  40125f:	or     ah,dl
  401261:	pop    ebp
  401262:	cmc    
  401263:	push   ecx
  401264:	mov    edx,0x16fcf53b
  40126a:	or     al,0x70
  40126c:	push   es
  40126d:	mov    dl,0xd3
  40126f:	cdq    
  401270:	fwait
  401271:	scas   eax,DWORD PTR es:[edi]
  401272:	retf   
  401273:	int3   
  401274:	inc    esp
  401275:	xchg   ebx,eax
  401276:	jge    0x401288
  401278:	out    dx,eax
  401279:	mov    ebp,0xad39f52b
  40127e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40127f:	in     al,dx
  401280:	ret    
  401281:	mov    esp,esi
  401283:	dec    eax
  401284:	jb     0x4012a6
  401286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401287:	xchg   ch,al
  401289:	jp     0x4012f0
  40128b:	in     eax,dx
  40128c:	sub    ebx,DWORD PTR [ebp-0x314a9046]
  401292:	cli    
  401293:	stos   BYTE PTR es:[edi],al
  401294:	test   bh,0xfc
  401297:	ret    0xa95c
  40129a:	push   esi
  40129b:	in     al,0x6a
  40129d:	paddusb mm2,QWORD PTR [esi+0x4ac37c2a]
  4012a4:	shr    BYTE PTR [eax],cl
  4012a6:	lods   eax,DWORD PTR ds:[esi]
  4012a7:	xchg   dl,cl
  4012a9:	mov    esi,ecx
  4012ab:	je     0x401289
  4012ad:	sbb    ebp,DWORD PTR [edx]
  4012af:	scas   al,BYTE PTR es:[edi]
  4012b0:	pushf  
  4012b1:	adc    ebx,DWORD PTR ds:0x8ac098aa
  4012b7:	shl    BYTE PTR [ebx-0x3f6856ed],cl
  4012bd:	sub    dl,BYTE PTR [eax+0x54]
  4012c0:	pop    ds
  4012c1:	inc    ebp
  4012c2:	mov    al,ds:0x705acadb
  4012c7:	mov    al,0xad
  4012c9:	mov    ds:0xa26111a8,eax
  4012ce:	sub    ch,ah
  4012d0:	mov    ebp,0x9f688d4
  4012d5:	cli    
  4012d6:	lds    ebx,FWORD PTR [ecx+0x0]
  4012d9:	gs sub al,0xd2
  4012dc:	(bad)  [ebx+0x5b]
  4012df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012e0:	stc    
  4012e1:	xor    DWORD PTR [edi],ebp
  4012e3:	xor    esp,DWORD PTR [eax+0x1a]
  4012e6:	dec    eax
  4012e7:	push   eax
  4012e8:	ret    0xfde7
  4012eb:	(bad)  
  4012ed:	mov    ch,0xae
  4012ef:	mov    ecx,0x5dceb490
  4012f4:	les    ebx,FWORD PTR [ecx+eiz*1+0x76caec7b]
  4012fb:	mov    esp,0x44b15b2d
  401300:	mov    bl,BYTE PTR [ecx+ecx*8+0x1]
  401304:	push   ebp
  401305:	stos   BYTE PTR es:[edi],al
  401306:	jno    0x401326
  401308:	or     dl,BYTE PTR [eax-0xc374b2f]
  40130e:	lods   eax,DWORD PTR ds:[esi]
  40130f:	idiv   bh
  401311:	daa    
  401312:	ret    
  401313:	pushf  
  401314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401315:	inc    edi
  401316:	lahf   
  401317:	nop
  401318:	and    al,0xb1
  40131a:	cmp    al,0xaf
  40131c:	cmc    
  40131d:	and    eax,0x2cd2e212
  401322:	add    eax,0x23e51d97
  401327:	push   es
  401328:	sub    al,0x0
  40132a:	in     al,0xb3
  40132c:	xchg   esi,eax
  40132d:	(bad)  
  40132e:	xchg   esp,eax
  40132f:	xor    eax,0x666c2a35
  401334:	adc    eax,0x1f5dd340
  401339:	xchg   edx,eax
  40133a:	xor    eax,0x7e8aa0ab
  40133f:	dec    esp
  401340:	stc    
  401341:	retf   
  401342:	add    BYTE PTR [esi+0x37],cl
  401345:	shr    ah,1
  401347:	stos   DWORD PTR es:[edi],eax
  401348:	and    DWORD PTR [edx],0x329bb2b5
  40134e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40134f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401350:	mov    dl,0xd2
  401352:	aas    
  401353:	push   DWORD PTR [edi-0x14]
  401356:	enter  0x8e7d,0xa5
  40135a:	jmp    0x735a:0xb2506c8b
  401361:	es inc edx
  401364:	pop    ebp
  401365:	loop   0x40130e
  401367:	sub    edi,DWORD PTR [edi-0x6d]
  40136a:	fsubr  QWORD PTR [ecx-0x1f]
  40136d:	lds    eax,FWORD PTR [eax-0x6b]
  401370:	(bad)  
  401373:	mov    esi,DWORD PTR [edx]
  401375:	pusha  
  401376:	lds    edx,FWORD PTR [esi+ebp*8+0x5f54cba1]
  40137d:	outs   dx,DWORD PTR ds:[esi]
  40137e:	adc    esi,DWORD PTR [ecx]
  401380:	(bad)  
  401382:	and    ebp,0xffffff8d
  401385:	(bad)  
  401387:	and    DWORD PTR [edx+0x52d180f4],edx
  40138d:	in     al,dx
  40138e:	rcl    cl,1
  401390:	mov    esp,DWORD PTR [eax+0x2636862a]
  401396:	xchg   ebp,eax
  401397:	push   ecx
  401398:	adc    ch,dh
  40139a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40139b:	adc    DWORD PTR [eax-0x5a],eax
  40139e:	pop    ecx
  40139f:	or     eax,0x1cec9bf
  4013a4:	cmp    eax,0xbc73c7d8
  4013a9:	rcl    ebp,0xb5
  4013ac:	scas   al,BYTE PTR es:[edi]
  4013ad:	or     ch,al
  4013af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013b0:	test   BYTE PTR [esi],ah
  4013b2:	loopne 0x401373
  4013b4:	int3   
  4013b5:	(bad)  
  4013b6:	mul    esi
  4013b8:	sub    BYTE PTR [edx+0x64b33dff],cl
  4013be:	push   edi
  4013bf:	loop   0x4013e7
  4013c1:	add    ah,BYTE PTR [ebx+edi*1]
  4013c4:	neg    al
  4013c6:	mov    esi,0xa9e3d7a6
  4013cb:	jle    0x40138a
  4013cd:	adc    DWORD PTR [edx-0x50],edx
  4013d0:	mov    eax,0xe9cad873
  4013d5:	out    0xb2,eax
  4013d7:	imul   esi,DWORD PTR [eax+0x43],0x46cf3195
  4013de:	int3   
  4013df:	dec    esi
  4013e0:	pop    ss
  4013e1:	add    eax,0xf8093957
  4013e6:	inc    ebp
  4013e7:	test   BYTE PTR [eax+ebx*1-0x57],al
  4013eb:	arpl   cx,bx
  4013ed:	lea    edi,[ecx-0x3]
  4013f0:	push   es
  4013f1:	jo     0x40137a
  4013f3:	cld    
  4013f4:	pop    es
  4013f5:	(bad)  
  4013f6:	and    al,0xf8
  4013f8:	in     eax,dx
  4013f9:	dec    esp
  4013fa:	idiv   DWORD PTR [edi+0x5d29f93b]
  401400:	sahf   
  401401:	ficom  DWORD PTR [ebx+0x23]
  401404:	fwait
  401405:	push   ds
  401406:	(bad)  
  401407:	pop    esp
  401408:	dec    ebx
  401409:	jno    0x401392
  40140b:	jle    0x401469
  40140d:	lods   eax,DWORD PTR ds:[esi]
  40140e:	cmp    edx,ebp
  401410:	xchg   esi,eax
  401411:	mov    esi,0xdcd593e4
  401416:	fnstsw WORD PTR [ebx+edx*8-0x58ce1d65]
  40141d:	pop    ebp
  40141e:	dec    esi
  40141f:	fadd   DWORD PTR ds:0xb7e23e57
  401425:	enter  0xd3e,0xfe
  401429:	fdivr  DWORD PTR [edi+0x37e93225]
  40142f:	mov    edi,0xdb7657c4
  401434:	push   eax
  401435:	inc    edx
  401436:	or     ecx,ebp
  401438:	xor    eax,0x8263fca4
  40143d:	ins    BYTE PTR es:[edi],dx
  40143e:	add    bl,bl
  401440:	rcr    DWORD PTR [ebp-0x4a],cl
  401443:	sbb    al,0x27
  401445:	add    al,bh
  401447:	adc    DWORD PTR [esi+0x724ad074],edx
  40144d:	or     dl,bh
  40144f:	mov    edx,0xa015d47e
  401454:	and    al,0x72
  401456:	mov    edi,0x1ea1f318
  40145b:	xor    al,bh
  40145d:	sahf   
  40145e:	fs jnp 0x4013ea
  401461:	dec    edi
  401462:	jbe    0x401434
  401464:	mov    esp,0x871cbd2e
  401469:	loopne 0x401478
  40146b:	jne    0x401428
  40146d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40146e:	ja     0x40144f
  401470:	pop    esi
  401471:	fwait
  401472:	xchg   esp,eax
  401473:	dec    ebp
  401474:	inc    esi
  401475:	or     edx,DWORD PTR [ecx]
  401477:	fcomp  QWORD PTR [edi+edi*8+0x35]
  40147b:	push   ecx
  40147c:	inc    ebx
  40147d:	push   0x46402921
  401482:	clc    
  401483:	retf   
  401484:	enter  0xc891,0xe7
  401488:	loop   0x4014cf
  40148a:	and    al,0x63
  40148c:	ficomp WORD PTR ds:0xf3a5dd66
  401492:	mov    dh,0x3a
  401494:	xor    esp,eax
  401496:	xor    BYTE PTR [esp+ecx*8-0x2870e79b],dl
  40149d:	ins    BYTE PTR es:[edi],dx
  40149e:	call   0xb0acd5b6
  4014a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014a4:	xchg   ebx,eax
  4014a5:	hlt    
  4014a6:	pop    ebp
  4014a7:	outs   dx,BYTE PTR ds:[si]
  4014a9:	mov    al,ds:0xdc48394b
  4014ae:	jecxz  0x4014ac
  4014b0:	fisttp WORD PTR [edx]
  4014b2:	jb     0x40152a
  4014b4:	pop    esp
  4014b5:	mov    dh,0xd5
  4014b7:	test   eax,0x263fea77
  4014bc:	lahf   
  4014bd:	and    al,0x5c
  4014bf:	push   esi
  4014c0:	mov    ebx,0x4d2cd394
  4014c5:	lods   al,BYTE PTR ds:[esi]
  4014c6:	mov    ecx,0xeb87060a
  4014cb:	and    ah,BYTE PTR [esi]
  4014cd:	fstp   TBYTE PTR [ecx+0x15366dc]
  4014d3:	jl     0x401457
  4014d5:	push   ds
  4014d6:	lods   eax,DWORD PTR ds:[esi]
  4014d7:	es nop
  4014d9:	ret    
  4014da:	cmp    ebp,ebp
  4014dc:	ficom  WORD PTR [esi-0x7f]
  4014df:	ret    
  4014e0:	push   ebx
  4014e1:	pusha  
  4014e2:	xchg   edx,eax
  4014e3:	or     eax,0xa43a348d
  4014e8:	sbb    eax,0x5ae440b8
  4014ed:	stc    
  4014ee:	mov    fs,WORD PTR es:0x830f93f
  4014f5:	cmp    al,0xac
  4014f7:	push   ebp
  4014f8:	call   0x8da0c8e
  4014fd:	retf   0xfb1d
  401500:	mov    ds:0xf8614173,al
  401505:	test   BYTE PTR [ebx],dh
  401507:	icebp  
  401508:	das    
  401509:	in     al,dx
  40150a:	push   ss
  40150b:	adc    al,0x62
  40150d:	inc    eax
  40150e:	std    
  40150f:	in     al,dx
  401510:	out    0x2d,eax
  401512:	es inc esp
  401514:	std    
  401515:	jno    0x4014eb
  401517:	rcr    DWORD PTR [ebx+0x162887af],0xd0
  40151e:	enter  0xf22d,0x24
  401522:	fneni(8087 only) 
  401524:	icebp  
  401525:	cwde   
  401526:	mov    ah,0x6f
  401528:	jo     0x401508
  40152a:	pop    ebp
  40152b:	cdq    
  40152c:	inc    edi
  40152d:	sbb    eax,0xf1c7e0e0
  401532:	pop    edx
  401533:	int    0x78
  401535:	fdiv   QWORD PTR [edi+0x64]
  401538:	lods   al,BYTE PTR ds:[esi]
  401539:	pop    ebp
  40153a:	xchg   ebp,eax
  40153b:	push   edi
  40153c:	inc    esp
  40153d:	dec    eax
  40153e:	xchg   ebp,eax
  40153f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401540:	dec    eax
  401541:	repz aaa 
  401543:	call   0xd412cd6e
  401548:	or     BYTE PTR [edx-0x7b],cl
  40154b:	sub    al,0x8e
  40154d:	adc    eax,0x5916fe85
  401552:	jmp    0xb37e:0xa50bd6ab
  401559:	in     al,dx
  40155a:	jecxz  0x40155a
  40155c:	sti    
  40155d:	scas   al,BYTE PTR es:[edi]
  40155e:	fwait
  40155f:	loop   0x401510
  401561:	xchg   BYTE PTR ds:0x3a120b34,ch
  401567:	pop    ds
  401568:	add    eax,0xc9a2e0cc
  40156d:	pop    edx
  40156e:	xor    eax,edi
  401570:	xchg   ebx,eax
  401571:	cmp    dl,BYTE PTR [esp+ebx*1-0x25138ce2]
  401578:	or     edx,edx
  40157a:	mov    edi,DWORD PTR [ebp+esi*2+0x8]
  40157e:	xchg   ebx,eax
  40157f:	xchg   eax,ebp
  401581:	(bad)  
  401582:	pop    ebx
  401583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401584:	and    eax,ebx
  401586:	cmp    DWORD PTR [edx-0x58],esp
  401589:	sbb    BYTE PTR [edi-0x2a918757],ch
  40158f:	xchg   BYTE PTR [edx+0x4aa6ec6c],dh
  401595:	pop    ss
  401596:	adc    cl,BYTE PTR [edi+0x1174b38b]
  40159c:	test   BYTE PTR [ebx+0x367d3d75],dl
  4015a2:	or     eax,0x41008535
  4015a7:	jle    0x4015ad
  4015a9:	loop   0x4015f7
  4015ab:	xchg   BYTE PTR [ecx],dl
  4015ad:	sbb    bh,BYTE PTR [esi-0x25]
  4015b0:	loopne 0x40162a
  4015b2:	rol    BYTE PTR [ebx-0x14],cl
  4015b5:	cmc    
  4015b6:	xor    al,0xa2
  4015b8:	jge    0x4015fc
  4015ba:	jp     0x40161a
  4015bc:	fcmovu st,st(5)
  4015be:	inc    esi
  4015bf:	push   es
  4015c0:	inc    esi
  4015c1:	(bad)  
  4015c2:	pop    edx
  4015c3:	xor    edx,DWORD PTR [ebx+0x497fceda]
  4015c9:	popa   
  4015ca:	sbb    dl,BYTE PTR [eax+eiz*8+0x56]
  4015ce:	mov    ebx,0x12b8bae7
  4015d3:	stos   BYTE PTR es:[edi],al
  4015d4:	jnp    0x40158c
  4015d6:	mov    ecx,0x435bee23
  4015db:	pop    edx
  4015dc:	pop    edi
  4015dd:	test   ch,ah
  4015df:	fdiv   DWORD PTR [edx]
  4015e1:	mov    edx,0x92741520
  4015e6:	dec    ebx
  4015e7:	add    al,0xf2
  4015e9:	xchg   ebx,eax
  4015ea:	clc    
  4015eb:	jo     0x401592
  4015ed:	cmp    bl,BYTE PTR [edi-0x7ae53297]
  4015f3:	fisttp DWORD PTR [ecx]
  4015f5:	ds sub eax,0x7c24debf
  4015fb:	xchg   ebx,eax
  4015fc:	out    dx,eax
  4015fd:	cmp    bh,al
  4015ff:	(bad)  
  401600:	xlat   BYTE PTR ds:[ebx]
  401601:	test   BYTE PTR [ebp+0xe8a985d],dh
  401607:	push   esp
  401608:	(bad)  
  40160a:	and    edx,DWORD PTR [esi+0x52f4076c]
  401610:	mov    ebx,0x9acfc387
  401615:	mov    esp,0xf6a45a90
  40161a:	test   al,0x7f
  40161c:	sub    al,0xb1
  40161e:	out    0xe5,al
  401620:	je     0x40161d
  401622:	jmp    0x4015c2
  401624:	mov    bl,0xde
  401626:	scas   al,BYTE PTR es:[edi]
  401627:	sbb    BYTE PTR ds:0xddee0789,dh
  40162d:	mov    al,0x4a
  40162f:	jge    0x4015d3
  401631:	jb     0x40168f
  401633:	retf   
  401634:	and    DWORD PTR ds:0xa50f31bd,ecx
  40163a:	sar    DWORD PTR [edx+0x6ab7c8bc],0x37
  401641:	js     0x4015fe
  401643:	sub    al,0xbb
  401645:	nop
  401646:	xor    esp,ecx
  401648:	cmp    edi,DWORD PTR [ebx]
  40164a:	sar    BYTE PTR [ecx+0x3b],0x51
  40164e:	sub    edx,DWORD PTR [edx]
  401650:	aam    0x3c
  401652:	push   ss
  401653:	adc    al,0xa
  401655:	cwde   
  401656:	retf   0x7a03
  401659:	or     ebp,DWORD PTR [ebx+0x35]
  40165c:	mov    DWORD PTR [esi-0x8fa30eb],esi
  401662:	mov    ebp,0x2f9ff196
  401667:	mov    bl,0x70
  401669:	ror    bl,0x2e
  40166c:	and    bl,BYTE PTR [edi+0x10de636b]
  401672:	fsub   st(6),st
  401674:	mov    ecx,0x8f4782eb
  401679:	or     DWORD PTR [edi+0x40],ebp
  40167c:	(bad)  
  40167d:	push   DWORD PTR [edx]
  40167f:	pop    ecx
  401680:	mov    ecx,0x811cb3f9
  401685:	pop    ecx
  401686:	mov    ds:0x3fb1b365,eax
  40168b:	scas   al,BYTE PTR es:[edi]
  40168c:	je     0x4016dd
  40168e:	jmp    0x5db1:0x834ec74b
  401695:	fidiv  DWORD PTR [eax-0x48]
  401698:	dec    esi
  401699:	mov    al,0x45
  40169b:	ds push edi
  40169d:	mov    ds:0xc29e4c3,al
  4016a2:	fldenv [esi-0x52c3b4c4]
  4016a8:	fwait
  4016a9:	nop
  4016aa:	mov    dh,0x94
  4016ac:	shl    BYTE PTR [edx+0x6b6a9165],1
  4016b2:	jmp    0x4016ae
  4016b4:	in     eax,dx
  4016b5:	sbb    BYTE PTR [edi-0x170baff9],0x6a
  4016bc:	and    eax,0x78f5871f
  4016c1:	pop    edx
  4016c2:	test   al,0x13
  4016c4:	jl     0x401725
  4016c6:	bound  edi,QWORD PTR [eax-0x789dfc66]
  4016cc:	cli    
  4016cd:	(bad)  
  4016ce:	fwait
  4016cf:	scas   al,BYTE PTR es:[edi]
  4016d0:	jl     0xdd04003
  4016d6:	push   esi
  4016d7:	sub    eax,0xc24f0d33
  4016dc:	xor    eax,0xa93ed492
  4016e1:	pop    ebp
  4016e2:	and    cl,BYTE PTR [ecx+ecx*4-0x325ea019]
  4016e9:	sahf   
  4016ea:	outs   dx,DWORD PTR ds:[esi]
  4016eb:	push   esi
  4016ec:	sub    al,0x3f
  4016ee:	jns    0x4016cd
  4016f0:	and    al,0x52
  4016f2:	or     DWORD PTR [esi],0x627c0ee4
  4016f8:	sub    DWORD PTR [edx],edx
  4016fa:	push   esi
  4016fb:	or     DWORD PTR [ebx+ebp*4],0x49c64074
  401702:	xchg   ecx,eax
  401703:	out    0x53,al
  401705:	loope  0x401703
  401707:	push   ecx
  401708:	int    0x5f
  40170a:	daa    
  40170b:	cld    
  40170c:	jo     0x401739
  40170e:	add    DWORD PTR [ecx+0x53179001],edi
  401714:	push   0xd
  401716:	stc    
  401717:	sar    al,1
  401719:	jp     0x4016e9
  40171b:	dec    eax
  40171c:	std    
  40171d:	shl    ch,cl
  40171f:	sbb    DWORD PTR [edi*2+0x15f4abc2],0x33
  401727:	xlat   BYTE PTR ds:[ebx]
  401728:	pop    ebx
  401729:	sbb    bx,WORD PTR [ebx+0x30]
  40172d:	pop    ds
  40172e:	and    al,0xf2
  401730:	das    
  401731:	or     esp,eax
  401733:	das    
  401734:	fcomp  QWORD PTR [edi]
  401736:	mov    WORD PTR [ecx],ds
  401738:	(bad)  
  401739:	mov    ecx,0xa1d815f1
  40173e:	mov    cl,0x32
  401740:	push   ebx
  401741:	imul   edx,DWORD PTR [edx+0x1813b5ac],0x4b
  401748:	in     al,dx
  401749:	xor    bl,dh
  40174b:	shr    BYTE PTR [ebp+0x58a5b925],cl
  401751:	push   0xffffffdb
  401753:	sbb    esi,DWORD PTR [esi-0x4d96ab95]
  401759:	fisttp WORD PTR [edx]
  40175b:	jecxz  0x401795
  40175d:	jl     0x4017bc
  40175f:	sub    DWORD PTR [esi],esp
  401761:	outs   dx,DWORD PTR ds:[esi]
  401762:	imul   ebp,DWORD PTR [edi+0x52],0xa1dc6003
  401769:	mov    bl,0x9c
  40176b:	and    BYTE PTR [eax-0x67],dh
  40176e:	out    dx,eax
  40176f:	xlat   BYTE PTR fs:[ebx]
  401771:	push   es
  401772:	fild   QWORD PTR [esi]
  401774:	sub    al,0xc5
  401776:	push   es
  401777:	mov    ds:0x7b73014f,al
  40177c:	mov    ds:0x2a98c9f2,eax
  401781:	mov    al,ds:0x69cb2a2c
  401786:	or     ah,BYTE PTR [ecx-0x1a5574ec]
  40178c:	or     ecx,DWORD PTR [ebp-0x6a]
  40178f:	sub    ebx,DWORD PTR [eax]
  401791:	test   al,0x6d
  401793:	rcl    BYTE PTR [ebx-0x72],cl
  401796:	push   eax
  401797:	add    DWORD PTR [edi+0x6b9d2cbe],ebx
  40179d:	mov    bl,0x7b
  40179f:	push   eax
  4017a0:	aad    0x45
  4017a2:	pop    ecx
  4017a3:	push   esp
  4017a4:	dec    BYTE PTR [edi-0x76]
  4017a7:	push   eax
  4017a8:	std    
  4017a9:	pop    ebx
  4017aa:	mov    esp,0x74b3a077
  4017af:	int    0xb6
  4017b1:	cmc    
  4017b2:	daa    
  4017b3:	mov    ebx,0x23736dd9
  4017b8:	shr    BYTE PTR [eax+0x6b],0x2b
  4017bc:	and    eax,0xc904d2b9
  4017c1:	sbb    al,0xec
  4017c3:	cmp    eax,0x9abe61ea
  4017c8:	bound  esi,QWORD PTR [eax]
  4017ca:	(bad)  
  4017cb:	scas   al,BYTE PTR es:[edi]
  4017cc:	cld    
  4017cd:	jmp    0x2524:0x6b1bec3d
  4017d4:	push   eax
  4017d5:	mov    eax,0xfb2cead5
  4017da:	adc    eax,0x13fe0bfb
  4017df:	loopne 0x401772
  4017e1:	sbb    al,0x5f
  4017e3:	pusha  
  4017e4:	sub    ecx,DWORD PTR [eax+0x4c]
  4017e7:	jae    0x4017e9
  4017e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ea:	adc    dl,BYTE PTR [eax]
  4017ec:	push   edi
  4017ed:	pushf  
  4017ee:	dec    edi
  4017ef:	fild   QWORD PTR [ecx-0x4cc3245d]
  4017f5:	in     eax,0xd4
  4017f7:	mov    ah,0x84
  4017f9:	xor    ecx,eax
  4017fb:	rcr    BYTE PTR [edi-0x118b0c2b],0xa5
  401802:	and    dl,BYTE PTR [esi+0x57]
  401805:	sti    
  401806:	and    eax,0x6b756158
  40180b:	retf   0x906a
  40180e:	dec    esp
  40180f:	mov    WORD PTR [ebx+0x7c],?
  401812:	(bad)  
  401813:	adc    BYTE PTR [edx+ebx*2-0x13],ch
  401817:	xchg   edi,eax
  401818:	rol    ebp,cl
  40181a:	adc    eax,0x3ac996b
  40181f:	ds jecxz 0x401855
  401822:	int    0xd4
  401824:	adc    bl,BYTE PTR [esp+edi*1-0x79]
  401828:	adc    eax,0xfb82233c
  40182d:	hlt    
  40182e:	sbb    eax,0x7ad379c1
  401833:	mov    ds:0x1341cd3a,al
  401838:	xchg   ax,ax
  40183a:	aaa    
  40183b:	or     ah,ah
  40183d:	(bad)  
  40183e:	cmp    eax,0xd7e57e17
  401843:	(bad)  
  401844:	jae    0x40183b
  401846:	or     ebp,DWORD PTR [ebx-0x48194525]
  40184c:	shl    ch,1
  40184e:	icebp  
  40184f:	pop    edi
  401850:	or     DWORD PTR [esi+ecx*2-0x17bf0e42],edi
  401857:	jnp    0x40183e
  401859:	mov    edi,0xab20918a
  40185e:	mov    ebx,0x212e29fd
  401863:	in     eax,dx
  401864:	lahf   
  401865:	xor    edx,esi
  401867:	jne    0x4017ee
  401869:	test   al,0x37
  40186b:	stos   DWORD PTR es:[edi],eax
  40186c:	ret    0xed14
  40186f:	ret    0xa8b0
  401872:	popa   
  401873:	mov    dl,0x16
  401875:	add    eax,0x3e7c8889
  40187a:	adc    ecx,edi
  40187c:	in     al,0xe
  40187e:	push   eax
  40187f:	test   DWORD PTR [ebx-0x3593705f],eax
  401885:	(bad)  
  401886:	pop    ebp
  401887:	cmp    al,0x42
  401889:	sbb    BYTE PTR [edi],ah
  40188b:	jecxz  0x40188a
  40188d:	cmp    edi,DWORD PTR [edi]
  40188f:	mov    ebx,ecx
  401891:	pop    es
  401892:	cmp    edx,DWORD PTR [edx]
  401894:	lods   eax,DWORD PTR ds:[esi]
  401895:	push   edx
  401896:	int3   
  401897:	ret    
  401898:	pop    esi
  401899:	push   ebp
  40189a:	adc    BYTE PTR ds:0x16817d7a,0x25
  4018a1:	test   eax,0x65a5d980
  4018a6:	repz and ah,BYTE PTR [edi+ebp*4+0x7a25218]
  4018ae:	mov    eax,DWORD PTR ds:0x918f751b
  4018b4:	out    dx,eax
  4018b5:	ror    DWORD PTR [ebx-0x38],0x6d
  4018b9:	jmp    0x120:0x58058c82
  4018c0:	cmp    BYTE PTR [ebx-0x68e5aaed],bh
  4018c6:	das    
  4018c7:	lods   eax,DWORD PTR ds:[esi]
  4018c8:	test   al,0x12
  4018ca:	call   0x91576786
  4018cf:	test   al,0x38
  4018d1:	sbb    BYTE PTR [ebx-0x11],0x19
  4018d5:	pop    ss
  4018d6:	and    bl,BYTE PTR [eax+0x12]
  4018d9:	xor    eax,DWORD PTR [esi+ebp*2-0x1aa04ff5]
  4018e0:	adc    BYTE PTR [ebp+0x232e87a3],cl
  4018e6:	xor    BYTE PTR [edx],0x10
  4018e9:	test   eax,0x3edb4b90
  4018ee:	js     0x4018e0
  4018f0:	stos   DWORD PTR es:[edi],eax
  4018f1:	leave  
  4018f2:	mov    ds:0x1d7cd68c,eax
  4018f7:	dec    ebp
  4018f8:	inc    esp
  4018f9:	shr    BYTE PTR [ebx+0xc4edf90],0x2
  401900:	popf   
  401901:	call   0x6c9c0175
  401906:	pop    es
  401907:	push   ss
  401908:	pusha  
  401909:	(bad)  [edi+eax*1-0x37]
  40190d:	call   0x36c33851
  401912:	jb     0x401899
  401914:	ins    DWORD PTR es:[edi],dx
  401915:	jb     0x4018da
  401917:	xchg   DWORD PTR [edx],ecx
  401919:	imul   ebp,DWORD PTR [ebp-0x6f],0x29
  40191d:	cs push es
  40191f:	xchg   edx,eax
  401920:	push   ebp
  401921:	xor    ecx,esi
  401923:	mov    eax,0xb3e9a2c9
  401928:	pop    ss
  401929:	push   edx
  40192a:	push   0x5161a276
  40192f:	call   0xfdbd:0x1c110dde
  401936:	test   al,0x5e
  401938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401939:	icebp  
  40193a:	inc    edx
  40193b:	mov    ecx,0x6d5429c0
  401940:	retf   0xc2f9
  401943:	adc    dl,BYTE PTR [ebx]
  401945:	push   esi
  401946:	xchg   bx,ax
  401948:	(bad)  
  401949:	gs push ss
  40194b:	retf   
  40194c:	sub    al,0x38
  40194e:	stos   DWORD PTR es:[edi],eax
  40194f:	int3   
  401950:	scas   al,BYTE PTR es:[edi]
  401951:	daa    
  401952:	xlat   BYTE PTR ds:[ebx]
  401953:	jg     0x4019b9
  401955:	mov    ds:0xb6854286,al
  40195a:	sub    ah,dh
  40195c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40195d:	jne    0x401919
  40195f:	aaa    
  401960:	das    
  401961:	push   eax
  401962:	fcom   DWORD PTR [ecx+0xc3805e]
  401968:	aas    
  401969:	xchg   edi,eax
  40196a:	icebp  
  40196b:	fstp   QWORD PTR [ebx-0xc]
  40196e:	mov    bh,0x53
  401970:	sti    
  401971:	test   DWORD PTR ds:0x345f828f,esi
  401977:	arpl   bp,bp
  401979:	xchg   ebx,eax
  40197a:	pop    esp
  40197b:	mov    esp,0x372ea47a
  401980:	out    dx,al
  401981:	xchg   esi,eax
  401982:	lds    esp,FWORD PTR [eax+0x75c8598b]
  401988:	sub    al,0xc4
  40198a:	adc    BYTE PTR [ecx],dh
  40198c:	test   eax,0x63944a46
  401991:	inc    edx
  401992:	push   cs
  401993:	loop   0x4019eb
  401995:	or     al,0xbb
  401997:	dec    eax
  401998:	add    eax,edx
  40199a:	or     ebx,DWORD PTR [eax]
  40199c:	jae    0x4019f0
  40199e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40199f:	jle    0x4019df
  4019a1:	pop    ecx
  4019a2:	jge    0x401a14
  4019a4:	sti    
  4019a5:	shl    BYTE PTR [esi+0x56],0x8b
  4019a9:	std    
  4019aa:	test   BYTE PTR [esi],0x51
  4019ad:	mov    ebp,0xcec2d57e
  4019b2:	pop    esp
  4019b3:	mov    bl,0x96
  4019b5:	call   edi
  4019b7:	jne    0x401981
  4019b9:	sub    DWORD PTR [eax+0xeed9b9a],ebp
  4019bf:	mov    al,ds:0xbe468f13
  4019c4:	dec    edi
  4019c5:	sub    al,0x2f
  4019c7:	out    0xf8,eax
  4019c9:	or     al,0xdc
  4019cb:	cmp    edx,DWORD PTR [ebx-0x432c8c2c]
  4019d1:	xchg   ebp,eax
  4019d2:	mov    al,0xf2
  4019d4:	(bad)  
  4019d5:	xor    dl,BYTE PTR [edi-0x58944103]
  4019db:	and    eax,0x89119e3
  4019e0:	sbb    al,0x85
  4019e2:	dec    esp
  4019e3:	mov    esi,0x97f0fb3a
  4019e8:	and    edx,DWORD PTR [esi+0x19612058]
  4019ee:	mov    eax,0x8063b9af
  4019f3:	cdq    
  4019f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f5:	jno    0x4019ec
  4019f7:	rcr    BYTE PTR [ebp-0x7],0xac
  4019fb:	enter  0x6731,0xcc
  4019ff:	imul   DWORD PTR [esi+edx*1]
  401a02:	sahf   
  401a03:	addr16 (bad) 
  401a05:	mov    edi,0x6d9c7b2a
  401a0a:	pop    ecx
  401a0b:	inc    ebp
  401a0c:	mov    ds:0xf2f54c21,eax
  401a11:	mov    edx,DWORD PTR [eax]
  401a13:	ds int 0x24
  401a16:	lods   al,BYTE PTR ds:[esi]
  401a17:	rcl    BYTE PTR ds:0x69b2d4f,0x53
  401a1e:	rcr    DWORD PTR [ecx],cl
  401a20:	adc    eax,0x66258850
  401a25:	outs   dx,BYTE PTR fs:[esi]
  401a27:	(bad)  
  401a28:	enter  0xb2cc,0xac
  401a2c:	test   al,0xb4
  401a2e:	cmp    bh,dl
  401a30:	adc    DWORD PTR [edx],0xcdf864bc
  401a36:	or     BYTE PTR [edx+0x11],0x16
  401a3a:	lds    ebp,FWORD PTR [ebx]
  401a3c:	mov    ch,0x34
  401a3e:	sti    
  401a3f:	mov    dl,0x5b
  401a41:	retf   0x23eb
  401a44:	sti    
  401a45:	add    esi,DWORD PTR [ecx-0xa1361b4]
  401a4b:	sbb    DWORD PTR [edi],ebp
  401a4d:	cdq    
  401a4e:	add    DWORD PTR [ebp-0x260af2e2],edx
  401a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a55:	(bad)  
  401a57:	lods   al,BYTE PTR fs:[esi]
  401a59:	mov    esi,0x1c2c43fc
  401a5e:	adc    bh,ch
  401a60:	dec    esi
  401a61:	retf   
  401a62:	cs mov ecx,0x61e2884f
  401a68:	ins    BYTE PTR es:[edi],dx
  401a69:	xor    esp,DWORD PTR [eax+0x293e30f4]
  401a6f:	adc    edi,ebp
  401a71:	and    ebp,DWORD PTR [ebx+0x16e2d057]
  401a77:	and    ah,BYTE PTR [ebx-0x21f62476]
  401a7d:	xor    eax,ecx
  401a7f:	je     0x401ac9
  401a81:	scas   eax,DWORD PTR es:[edi]
  401a82:	mov    DWORD PTR [ebx],edi
  401a84:	je     0x401b04
  401a86:	and    eax,0x2b70cadb
  401a8b:	mov    al,0x40
  401a8d:	adc    ah,BYTE PTR [edx]
  401a8f:	cmp    DWORD PTR [esi-0x41be07c4],0xe62d301d
  401a99:	jo     0x401a86
  401a9b:	shl    BYTE PTR [edx-0x28],0x85
  401a9f:	inc    ebx
  401aa0:	jg     0x401ae7
  401aa2:	in     al,dx
  401aa3:	dec    ecx
  401aa4:	xor    ch,BYTE PTR [edx-0x51]
  401aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aa8:	sti    
  401aa9:	inc    esp
  401aaa:	mov    ah,0x50
  401aac:	stos   DWORD PTR es:[edi],eax
  401aad:	push   edi
  401aae:	in     al,0x7b
  401ab0:	sbb    BYTE PTR [edx-0x34ad13a],0x3b
  401ab7:	xlat   BYTE PTR ds:[ebx]
  401ab8:	sbb    eax,DWORD PTR [eax-0x3c4406bf]
  401abe:	outs   dx,DWORD PTR ds:[esi]
  401abf:	mov    ebp,0xe7c5a14f
  401ac4:	lahf   
  401ac5:	(bad)  
  401ac6:	jmp    0x401abd
  401ac8:	cmp    esp,DWORD PTR [edx-0x30]
  401acb:	call   0xafc2:0xc32adf38
  401ad2:	push   0xfffffff1
  401ad4:	ins    BYTE PTR es:[edi],dx
  401ad5:	jb     0x401ab2
  401ad7:	inc    ebp
  401ad8:	out    dx,eax
  401ad9:	dec    edi
  401ada:	mov    ds:0x6f770a4f,eax
  401adf:	xor    ah,BYTE PTR [ebp+0x5e]
  401ae2:	imul   edx,DWORD PTR [edi+0x34],0xffffffcf
  401ae6:	sub    BYTE PTR [ebp+0x61686e0e],cl
  401aec:	adc    edi,DWORD PTR [ebp+0x16]
  401aef:	sub    ecx,DWORD PTR [ecx]
  401af1:	nop
  401af2:	dec    esi
  401af3:	pusha  
  401af4:	cmp    DWORD PTR [esi+edx*4+0x31],eax
  401af8:	(bad)  
  401af9:	ins    BYTE PTR es:[edi],dx
  401afa:	cmp    ah,BYTE PTR [esi+0x74]
  401afd:	pop    ds
  401afe:	sbb    bh,BYTE PTR [esi]
  401b00:	ja     0x401b4b
  401b02:	lock retf 0xb10f
  401b06:	jge    0x401b69
  401b08:	out    0xc2,eax
  401b0a:	ror    bl,1
  401b0c:	pop    ecx
  401b0d:	jp     0x401ab1
  401b0f:	xchg   BYTE PTR [ebp+0x251013c],cl
  401b15:	jnp    0x401b83
  401b17:	stc    
  401b18:	sub    al,0x9
  401b1a:	hlt    
  401b1b:	mov    ecx,0xfad5a90
  401b20:	mov    BYTE PTR [ecx-0xcff7ecd],0xcd
  401b27:	xor    al,BYTE PTR [edx-0x64e09caf]
  401b2d:	push   ecx
  401b2e:	lahf   
  401b2f:	jle    0x401b9c
  401b31:	push   cx
  401b33:	ret    0xb7ff
  401b36:	dec    eax
  401b37:	push   ecx
  401b38:	pop    edx
  401b39:	xor    esp,edi
  401b3b:	pop    ss
  401b3c:	out    dx,al
  401b3d:	fiadd  DWORD PTR [ecx+0x3c0ee23]
  401b43:	out    dx,al
  401b44:	outs   dx,BYTE PTR ds:[esi]
  401b45:	es scas al,BYTE PTR es:[edi]
  401b47:	stos   DWORD PTR es:[edi],eax
  401b48:	sub    DWORD PTR [eax+0xf],ecx
  401b4b:	div    DWORD PTR [ebx]
  401b4d:	stc    
  401b4e:	mov    ah,0x3e
  401b50:	test   al,0x50
  401b52:	push   esp
  401b53:	test   BYTE PTR [esi+0x655f1e11],0x3f
  401b5a:	sar    BYTE PTR ss:[ecx+0x45],cl
  401b5e:	jne    0x401b54
  401b60:	stos   BYTE PTR es:[edi],al
  401b61:	xchg   edx,eax
  401b62:	push   es
  401b63:	loope  0x401ba3
  401b65:	popa   
  401b66:	inc    ebp
  401b67:	rcl    DWORD PTR [edx+0x3a4d09b2],1
  401b6d:	sti    
  401b6e:	pop    edx
  401b6f:	std    
  401b70:	inc    ebp
  401b71:	mov    es,esp
  401b73:	push   0x43
  401b75:	test   BYTE PTR [ebp-0x73],cl
  401b78:	xchg   DWORD PTR [eax-0x71],eax
  401b7b:	and    esp,eax
  401b7d:	pop    ds
  401b7e:	sahf   
  401b7f:	fiadd  WORD PTR [esi-0x6]
  401b82:	jae    0x401bcd
  401b84:	test   DWORD PTR [eax+0x3],ebx
  401b87:	inc    ecx
  401b88:	or     eax,0x917b1aab
  401b8d:	cs pop edx
  401b8f:	sbb    dh,BYTE PTR [edx+0x5ea753c3]
  401b95:	or     eax,DWORD PTR [eax+0x2f]
  401b98:	push   ebp
  401b99:	stc    
  401b9a:	ret    
  401b9b:	xchg   ebx,eax
  401b9c:	lea    ebx,[eax-0x7dcf6c36]
  401ba2:	sbb    BYTE PTR [edi-0x166b8800],bh
  401ba8:	xor    esi,DWORD PTR [edi]
  401baa:	imul   edx,DWORD PTR [ebx+0x15],0x82735c74
  401bb1:	rol    edx,cl
  401bb3:	sub    ebx,DWORD PTR [ecx-0x16407b37]
  401bb9:	iret   
  401bba:	ins    DWORD PTR es:[edi],dx
  401bbb:	pusha  
  401bbc:	(bad)  
  401bbd:	mov    bh,0x98
  401bbf:	ror    eax,1
  401bc1:	(bad)  
  401bc2:	test   eax,0x21b541e9
  401bc7:	sbb    edx,DWORD PTR [esi+edi*2+0xb139232]
  401bce:	xchg   ebp,eax
  401bcf:	jmp    0x401bc2
  401bd1:	and    eax,0xeda349e0
  401bd6:	leave  
  401bd7:	and    DWORD PTR [edx-0x5fdb6b9f],ebx
  401bdd:	sub    DWORD PTR [esi+0xb],0x14a43557
  401be4:	stos   BYTE PTR es:[edi],al
  401be5:	sub    bl,BYTE PTR [ebp-0x7c]
  401be8:	out    0x48,al
  401bea:	push   eax
  401beb:	repz fs into 
  401bee:	mov    al,cl
  401bf0:	sbb    BYTE PTR [ecx+0x67d065f9],dl
  401bf6:	rcl    esp,cl
  401bf8:	clc    
  401bf9:	rcl    DWORD PTR [eax],1
  401bfb:	and    DWORD PTR [edx+edx*8-0x5614e2a3],esp
  401c02:	ficom  DWORD PTR [eax-0x6e]
  401c05:	jg     0x401bdb
  401c07:	ins    BYTE PTR es:[edi],dx
  401c08:	add    cl,ch
  401c0a:	jno    0x401bfb
  401c0c:	sbb    BYTE PTR [esi-0x38d852c],ah
  401c12:	xor    cl,dl
  401c14:	aaa    
  401c15:	ficomp DWORD PTR [eax+0x6]
  401c18:	ins    DWORD PTR es:[edi],dx
  401c19:	stc    
  401c1a:	fnsave ds:0xc5fa4002
  401c20:	sub    al,BYTE PTR [ebp+esi*4+0x28f71294]
  401c27:	pop    ss
  401c28:	mov    dl,0x51
  401c2a:	fst    QWORD PTR [ecx+0x2763f0c3]
  401c30:	cmp    esp,edx
  401c32:	push   esp
  401c33:	daa    
  401c34:	cld    
  401c35:	or     edi,eax
  401c37:	pop    ecx
  401c38:	retf   
  401c39:	scas   al,BYTE PTR es:[edi]
  401c3a:	inc    edx
  401c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c3c:	dec    ebp
  401c3d:	cmp    al,0xc9
  401c3f:	push   cs
  401c40:	cmp    DWORD PTR [ecx-0x14384aee],esi
  401c46:	sar    dh,1
  401c48:	jne    0x401be1
  401c4a:	mov    al,fs:0xdb857dd0
  401c50:	inc    esp
  401c51:	pop    edx
  401c52:	out    0xd,al
  401c54:	mov    eax,0x3b14eb52
  401c59:	push   ds
  401c5a:	inc    ebx
  401c5b:	scas   al,BYTE PTR es:[edi]
  401c5c:	cdq    
  401c5d:	ins    DWORD PTR es:[edi],dx
  401c5e:	mov    es,edx
  401c60:	js     0x401cc9
  401c62:	push   eax
  401c63:	cli    
  401c64:	cs mov eax,0x9c57f610
  401c6a:	xor    eax,0x616bb1b6
  401c6f:	or     edi,DWORD PTR [ebp+0x6]
  401c72:	push   ebx
  401c73:	stc    
  401c74:	int    0xfb
  401c76:	sub    BYTE PTR [edx],0x14
  401c79:	icebp  
  401c7a:	ret    0x4de3
  401c7d:	shl    edx,cl
  401c7f:	push   eax
  401c80:	call   0xd449:0x55004725
  401c87:	dec    eax
  401c88:	(bad)  
  401c89:	jp     0x401c1b
  401c8b:	fstp   TBYTE PTR [ebx+esi*2+0x4e905dc9]
  401c92:	lahf   
  401c93:	dec    BYTE PTR [ebx-0x1f08c38f]
  401c99:	inc    ebx
  401c9a:	sbb    eax,0x5d0129f9
  401c9f:	adc    eax,0x84926169
  401ca4:	and    eax,0xca41f38c
  401ca9:	fnstsw WORD PTR gs:[ebx-0x3b9fe459]
  401cb0:	clc    
  401cb1:	jmp    0xcd9b:0xdfc6d3e6
  401cb8:	mov    ch,0x5c
  401cba:	jae    0x401d3a
  401cbc:	adc    edx,DWORD PTR [edx-0x15]
  401cbf:	xchg   edi,eax
  401cc0:	xlat   BYTE PTR ds:[ebx]
  401cc1:	dec    esp
  401cc2:	int    0xe3
  401cc4:	jge    0x401cd3
  401cc6:	(bad)  
  401cc7:	js     0x401cef
  401cc9:	mov    edi,0x2dd84fa6
  401cce:	nop
  401ccf:	inc    ebp
  401cd0:	pushf  
  401cd1:	stos   BYTE PTR es:[edi],al
  401cd2:	push   ds
  401cd3:	add    al,0xa
  401cd5:	mov    edx,0x1312d8d6
  401cda:	jno    0x401d41
  401cdc:	mov    eax,ds:0xbde4679b
  401ce1:	cmp    eax,0x891778b
  401ce6:	out    dx,eax
  401ce7:	fwait
  401ce8:	mul    DWORD PTR [ebx]
  401cea:	inc    ecx
  401ceb:	jge    0x401cc6
  401ced:	push   ecx
  401cee:	cmp    edx,esp
  401cf0:	adc    dl,BYTE PTR [ebp-0x1d]
  401cf3:	test   ebp,ebx
  401cf5:	and    al,0x9b
  401cf7:	mov    edx,0x4ff1fae8
  401cfc:	shl    DWORD PTR [ebx+0x400e0c6d],0x85
  401d03:	outs   dx,BYTE PTR ds:[esi]
  401d04:	stc    
  401d05:	loop   0x401d3c
  401d07:	jmp    0x3b6a:0x98b1a49f
  401d0e:	jp     0x401c95
  401d10:	dec    ecx
  401d11:	outs   dx,BYTE PTR ds:[esi]
  401d12:	xor    ch,dh
  401d14:	mov    ah,0xbc
  401d16:	rcl    BYTE PTR [ebp+0x51],0x4c
  401d1a:	push   es
  401d1b:	push   esi
  401d1c:	cmp    al,0xe3
  401d1e:	push   ds
  401d1f:	and    ebp,esp
  401d21:	jb     0x401d2c
  401d23:	sar    DWORD PTR [ecx+0x57],1
  401d26:	stc    
  401d27:	xchg   edi,eax
  401d28:	pop    ecx
  401d29:	dec    eax
  401d2a:	adc    bh,BYTE PTR [edx-0x3bb0e757]
  401d30:	jge    0x401d2b
  401d32:	mov    ebx,0xef24812f
  401d37:	inc    ebp
  401d38:	cld    
  401d39:	repnz imul eax,ecx,0xceb55e53
  401d40:	inc    ebx
  401d41:	icebp  
  401d42:	mov    bl,0x5a
  401d44:	out    0xa4,eax
  401d46:	mov    cl,BYTE PTR [edx]
  401d48:	xchg   edi,eax
  401d49:	sbb    ch,al
  401d4b:	call   0x9385:0xea69ae3c
  401d52:	pop    esp
  401d53:	ds mov bl,0x26
  401d56:	add    BYTE PTR [esi+0x4e],0x12
  401d5a:	mov    ebp,0x6feae5ee
  401d5f:	push   es
  401d60:	ret    0x99ca
  401d63:	inc    ecx
  401d64:	sub    DWORD PTR [ebp-0x3408b35],ebx
  401d6a:	lock or eax,0x132e0c57
  401d70:	test   eax,0x64ef88e4
  401d75:	adc    BYTE PTR [edx],bl
  401d77:	jo     0x401da6
  401d79:	pop    ss
  401d7a:	or     al,0x54
  401d7c:	mov    dl,0x15
  401d7e:	jae    0x401d2e
  401d80:	adc    eax,DWORD PTR [ebp+ebx*8-0x7d]
  401d84:	cmp    ebx,DWORD PTR [edi]
  401d86:	mov    al,ds:0x2a57b785
  401d8b:	sbb    ecx,DWORD PTR [eax-0x27f5f1c6]
  401d91:	sbb    cl,BYTE PTR [eax-0x3e133732]
  401d97:	adc    ecx,DWORD PTR [ecx]
  401d99:	popf   
  401d9a:	lock mov edx,0xf1a64435
  401da0:	bound  ecx,QWORD PTR [edi+eiz*1+0x13]
  401da4:	ds mov eax,0xf2230106
  401daa:	xchg   BYTE PTR [edx+0x7],dl
  401dad:	dec    esp
  401dae:	gs addr16 mov eax,0x79eb91df
  401db5:	fwait
  401db6:	shl    BYTE PTR [eax-0x3a],1
  401db9:	sub    eax,0xe0b4deeb
  401dbe:	mov    dl,0x3d
  401dc0:	pop    es
  401dc1:	adc    DWORD PTR [ebx+ecx*8],0xffffffd3
  401dc5:	push   ebp
  401dc6:	lock xchg edx,eax
  401dc8:	out    0x93,al
  401dca:	xchg   edi,eax
  401dcb:	jb     0x401e20
  401dcd:	xor    DWORD PTR [edi+0x39],esi
  401dd0:	add    eax,0x30ee87e8
  401dd5:	aam    0x8f
  401dd7:	sahf   
  401dd8:	aam    0xbd
  401dda:	add    ebp,ebx
  401ddc:	sbb    esp,DWORD PTR [edi-0x1a]
  401ddf:	mov    al,ds:0xbe1d182c
  401de4:	cmc    
  401de5:	xchg   esp,eax
  401de6:	(bad)  
  401de7:	sbb    al,0x73
  401de9:	pop    es
  401dea:	xor    ecx,esp
  401dec:	ret    0xfaee
  401def:	cdq    
  401df0:	popa   
  401df1:	mov    ah,0x2a
  401df3:	cmp    BYTE PTR [edi-0x39],0x39
  401df7:	gs fwait
  401df9:	mov    esp,DWORD PTR [eax]
  401dfb:	imul   dh
  401dfd:	test   BYTE PTR [eax],bh
  401dff:	aam    0x11
  401e01:	fimul  DWORD PTR [ebx+0x29bbe676]
  401e07:	and    esi,DWORD PTR [ecx-0xe]
  401e0a:	jle    0x401deb
  401e0c:	fsubr  DWORD PTR [ecx-0x66]
  401e0f:	sbb    dl,dh
  401e11:	fsub   st(0),st
  401e13:	pop    esi
  401e14:	outs   dx,BYTE PTR ds:[esi]
  401e15:	lods   eax,DWORD PTR ds:[esi]
  401e16:	inc    ecx
  401e17:	cmp    ch,BYTE PTR [edi]
  401e19:	mov    DWORD PTR [ebp+0x36],eax
  401e1c:	jae    0x401e4b
  401e1e:	(bad)  
  401e1f:	mov    ?,WORD PTR [ecx+edx*1]
  401e22:	xor    ch,BYTE PTR [ecx+0x22adbee1]
  401e28:	cmp    DWORD PTR [ebx],0xc7e998bb
  401e2e:	fld    DWORD PTR [ebp-0x209c659e]
  401e34:	or     bl,BYTE PTR [esi+0x779dd420]
  401e3a:	mov    bl,0x73
  401e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e3d:	mov    edx,0xf64a208b
  401e42:	or     al,0x5f
  401e44:	int3   
  401e45:	mov    bl,0xee
  401e47:	mov    edi,esi
  401e49:	(bad)  
  401e4a:	(bad)  
  401e4b:	jl     0x401e76
  401e4d:	jns    0x401e78
  401e4f:	xor    bl,BYTE PTR ds:0xed6d82d4
  401e55:	fsubr  st,st(7)
  401e57:	jmp    0xade0:0x6cb8
  401e5d:	pop    es
  401e5e:	push   0x11
  401e60:	mov    BYTE PTR [ecx],ch
  401e62:	mov    ebp,0xd4463f71
  401e67:	xchg   DWORD PTR [edx-0x74460bcd],eax
  401e6d:	push   ebx
  401e6e:	xchg   BYTE PTR [edi-0x3980e232],bh
  401e74:	lods   al,BYTE PTR ds:[esi]
  401e75:	add    eax,0x1ac74884
  401e7a:	push   ecx
  401e7b:	pop    es
  401e7c:	mov    DWORD PTR [ecx-0x10c1b1b1],esp
  401e82:	push   eax
  401e83:	xchg   edi,eax
  401e84:	iret   
  401e85:	aas    
  401e86:	into   
  401e87:	xchg   edi,eax
  401e88:	sar    dl,cl
  401e8a:	mov    ?,WORD PTR [ecx+0x32]
  401e8d:	xchg   edx,eax
  401e8e:	fld    TBYTE PTR [ecx]
  401e90:	mov    ch,0x40
  401e92:	fdivr  QWORD PTR ds:0xe8ae08ad
  401e98:	test   BYTE PTR [edi-0x618ac72],dh
  401e9e:	and    eax,0xa6f98ac5
  401ea3:	cs mov dl,0xea
  401ea6:	adc    BYTE PTR [ebx+ecx*8-0x4e],0x72
  401eab:	test   eax,0x38fe2c42
  401eb0:	xchg   DWORD PTR [ecx+0x34],esp
  401eb3:	ret    
  401eb4:	mov    ebp,0x4adf6174
  401eb9:	mov    al,ds:0x4846a437
  401ebe:	lock aam 0x5c
  401ec1:	xlat   BYTE PTR ds:[ebx]
  401ec2:	mov    ebp,0x5a0aca69
  401ec7:	mov    dl,0x6c
  401ec9:	lea    ecx,[edx+0x7bf9f327]
  401ecf:	jnp    0x401e7f
  401ed1:	and    eax,0x161e9d1d
  401ed6:	scas   eax,DWORD PTR es:[edi]
  401ed7:	shr    BYTE PTR [ebx],1
  401ed9:	pop    edi
  401eda:	lods   eax,DWORD PTR ds:[esi]
  401edb:	or     bh,BYTE PTR [edx-0x10]
  401ede:	fisubr DWORD PTR [eax-0x6b9954ea]
  401ee4:	jo     0x401f44
  401ee6:	pushf  
  401ee7:	dec    DWORD PTR [eax]
  401ee9:	test   al,0xe3
  401eeb:	jle    0x401f49
  401eed:	hlt    
  401eee:	mov    bl,dh
  401ef0:	inc    esp
  401ef1:	scas   al,BYTE PTR es:[edi]
  401ef2:	xor    ebp,DWORD PTR [ebx]
  401ef4:	or     esi,DWORD PTR [esi-0x24]
  401ef7:	int3   
  401ef8:	scas   eax,DWORD PTR es:[edi]
  401ef9:	sub    DWORD PTR ds:0x29ed9c43,ecx
  401eff:	mov    ebp,0xb11f17ff
  401f04:	pushf  
  401f05:	fistp  DWORD PTR [ecx+0x29bf25cb]
  401f0b:	add    al,0xbb
  401f0d:	je     0x401f14
  401f0f:	jmp    FWORD PTR [eax-0x74]
  401f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f13:	dec    eax
  401f14:	mov    esp,0x1363670
  401f19:	call   0x8cc7369a
  401f1e:	in     al,0xd2
  401f20:	(bad)  
  401f21:	and    ecx,ebp
  401f23:	scas   al,BYTE PTR es:[edi]
  401f24:	test   eax,0xcbaf32a1
  401f29:	push   esp
  401f2a:	je     0x401f14
  401f2c:	retf   
  401f2d:	dec    edx
  401f2e:	xor    al,0xb5
  401f30:	push   ecx
  401f31:	sub    bh,BYTE PTR ds:0xfdc3437a
  401f37:	mov    WORD PTR ds:0xfa8c8542,gs
  401f3d:	in     eax,dx
  401f3e:	pop    es
  401f3f:	dec    ebx
  401f40:	rcr    ebp,1
  401f42:	hlt    
  401f43:	es jmp 0x401f81
  401f46:	pop    ecx
  401f47:	jae    0x401eea
  401f49:	push   0xe126ef73
  401f4e:	adc    BYTE PTR [edx+0x2a],cl
  401f51:	cwde   
  401f52:	out    dx,eax
  401f53:	popw   ds
  401f55:	mov    esi,DWORD PTR [eax]
  401f57:	popa   
  401f58:	inc    eax
  401f59:	sbb    DWORD PTR [ecx+0x5d],0xffffffab
  401f5d:	fwait
  401f5e:	mov    ds:0x8b10c5e0,eax
  401f63:	mov    al,ds:0x11e2104e
  401f68:	add    edx,eax
  401f6a:	jbe    0x401f29
  401f6c:	pusha  
  401f6d:	pop    ebp
  401f6e:	rcl    edi,1
  401f70:	outs   dx,DWORD PTR ds:[esi]
  401f71:	add    DWORD PTR [edx],eax
  401f73:	stc    
  401f74:	lahf   
  401f75:	es (bad) 
  401f77:	mov    ah,dl
  401f79:	hlt    
  401f7a:	mov    ch,0x59
  401f7c:	adc    BYTE PTR [ebp-0x7d],ah
  401f7f:	jns    0x401ffe
  401f81:	outs   dx,BYTE PTR ds:[esi]
  401f82:	inc    ecx
  401f83:	addr16 aad 0xfc
  401f86:	idiv   al
  401f88:	sub    eax,0xd39a2f44
  401f8d:	daa    
  401f8e:	or     al,0x48
  401f90:	int3   
  401f91:	jne    0x401f3c
  401f93:	loop   0x402010
  401f95:	jge    0x401f86
  401f97:	fstp   DWORD PTR [eax+0x7502745d]
  401f9d:	or     al,0x61
  401f9f:	or     esi,ebx
  401fa1:	dec    esi
  401fa2:	push   edx
  401fa3:	and    BYTE PTR [ebx],cl
  401fa5:	(bad)  
  401fa6:	mov    ch,0x25
  401fa8:	xchg   ecx,eax
  401fa9:	mov    esi,0x16a58261
  401fae:	xchg   edx,eax
  401faf:	shr    BYTE PTR [ebx],cl
  401fb1:	imul   ebx,DWORD PTR [edx-0xb],0xffffffb7
  401fb5:	scas   al,BYTE PTR es:[edi]
  401fb6:	pop    ecx
  401fb7:	fidiv  DWORD PTR [ecx+0x29]
  401fba:	push   es
  401fbb:	sahf   
  401fbc:	jmp    0x401fcd
  401fbe:	push   ebp
  401fbf:	jmp    0x12365674
  401fc4:	jb     0x401f98
  401fc6:	cmc    
  401fc7:	push   esi
  401fc8:	in     eax,0x98
  401fca:	lock jo 0x401fa6
  401fcd:	inc    eax
  401fce:	outs   dx,BYTE PTR ds:[esi]
  401fcf:	push   0x44
  401fd1:	jl     0x401fdc
  401fd3:	xchg   ecx,eax
  401fd4:	inc    ebx
  401fd5:	jecxz  0x401faa
  401fd7:	in     al,0xbb
  401fd9:	jb     0x401fa5
  401fdb:	sbb    al,0x17
  401fdd:	xor    DWORD PTR [ebp+0x9d33d2a],ebp
  401fe3:	mov    ah,0x61
  401fe5:	aad    0xfc
  401fe7:	jns    0x401fe9
  401fe9:	shr    BYTE PTR [ecx-0x45104ad0],cl
  401fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ff0:	out    dx,al
  401ff1:	xor    eax,0x6ab831b0
  401ff6:	cld    
  401ff7:	ds dec edx
  401ff9:	fmul   st(6),st
  401ffb:	mov    al,0x2b
  401ffd:	xchg   edi,eax
  401ffe:	je     0x401fe7
  402000:	push   edi
  402001:	out    0xc9,eax
  402003:	test   dl,ah
  402005:	ja     0x40202a
  402007:	add    ecx,DWORD PTR [eax-0x19]
  40200a:	lds    esi,FWORD PTR [eax+0x5f97391d]
  402010:	aad    0x71
  402012:	mov    al,0xf9
  402014:	rol    dl,1
  402016:	pop    esi
  402017:	push   es
  402018:	cld    
  402019:	mov    eax,0xaf635958
  40201e:	stc    
  40201f:	pusha  
  402020:	push   edi
  402021:	in     al,dx
  402022:	adc    eax,0x9ed1eefa
  402027:	(bad)  
  402028:	sub    eax,0x9ac0d049
  40202d:	in     al,dx
  40202e:	stos   DWORD PTR es:[edi],eax
  40202f:	pop    ebx
  402030:	(bad)  
  402031:	sub    ah,bl
  402033:	fisttp DWORD PTR [ebp-0x68]
  402036:	bound  edi,QWORD PTR [edi]
  402038:	push   ecx
  402039:	mov    bl,0xaa
  40203b:	mov    dl,0xae
  40203d:	adc    edi,esp
  40203f:	jmp    0x6cc633d5
  402044:	xor    al,0xbb
  402046:	aas    
  402047:	cli    
  402048:	push   esi
  402049:	stc    
  40204a:	mov    edx,0xdd6e9890
  40204f:	in     eax,0x58
  402051:	jnp    0x401fe9
  402053:	ds test eax,0x4ce443d4
  402059:	icebp  
  40205a:	jle    0x40200d
  40205c:	shl    DWORD PTR [ebx],1
  40205e:	push   edi
  40205f:	inc    ebx
  402060:	or     BYTE PTR [esi-0x70],ah
  402063:	icebp  
  402064:	or     al,0x86
  402066:	loopne 0x4020d8
  402068:	dec    esp
  402069:	ffreep st(5)
  40206b:	mov    bh,BYTE PTR [esi+0x49]
  40206e:	xor    eax,0x184061ef
  402073:	fidiv  WORD PTR [eax+ecx*8]
  402076:	in     eax,0x36
  402078:	adc    al,BYTE PTR [edi+0x10ac79d]
  40207e:	and    DWORD PTR [ebp-0xd75384f],esi
  402084:	xchg   esp,eax
  402085:	sub    ebx,DWORD PTR [eax]
  402087:	xlat   BYTE PTR ds:[ebx]
  402088:	or     BYTE PTR [edx-0x6d],dl
  40208b:	jnp    0x402040
  40208d:	arpl   WORD PTR [ebp-0x751215b4],di
  402093:	daa    
  402094:	ins    DWORD PTR es:[edi],dx
  402095:	daa    
  402096:	aas    
  402097:	push   esi
  402098:	retf   
  402099:	ins    BYTE PTR es:[edi],dx
  40209a:	(bad)
  40209e:	pusha  
  40209f:	je     0x402105
  4020a1:	add    al,0x3b
  4020a3:	inc    ebx
  4020a4:	ja     0x4020b8
  4020a6:	sbb    al,0xbb
  4020a8:	je     0x402125
  4020aa:	sub    eax,0x326664e1
  4020af:	or     BYTE PTR [edx],ah
  4020b1:	pop    ebp
  4020b2:	xor    DWORD PTR [esi+0x41],eax
  4020b5:	std    
  4020b6:	cmp    DWORD PTR [ebp+0x9],edx
  4020b9:	inc    ebp
  4020ba:	push   edi
  4020bb:	inc    ebp
  4020bc:	and    BYTE PTR [ebp+0x1a],0x0
  4020c0:	mov    al,ds:0x710723c
  4020c5:	xor    eax,0xb4201f99
  4020ca:	jb     0x402109
  4020cc:	dec    eax
  4020cd:	cmp    BYTE PTR [ebx-0x2f6d816b],bl
  4020d3:	leave  
  4020d4:	loope  0x40212f
  4020d6:	and    eax,0x300252d6
  4020db:	mov    WORD PTR [edi+0x784204e8],ds
  4020e1:	cwde   
  4020e2:	xchg   esp,eax
  4020e3:	xchg   edi,edi
  4020e5:	add    eax,0x2ca81861
  4020ea:	and    al,0x44
  4020ec:	fdivr  QWORD PTR [esi-0x1cbf305f]
  4020f2:	lea    ecx,[edx-0x263e8670]
  4020f8:	sbb    al,0xb5
  4020fa:	fisubr WORD PTR [ecx-0x11]
  4020fd:	xchg   ecx,eax
  4020fe:	jg     0x40214a
  402100:	sub    BYTE PTR [ecx],cl
  402102:	retf   0xc30a
  402105:	xchg   esi,eax
  402106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402107:	push   0xffffffa0
  402109:	out    dx,al
  40210a:	adc    BYTE PTR [eax],cl
  40210c:	xchg   DWORD PTR [ebp-0x7a],ebp
  40210f:	adc    edi,DWORD PTR es:[eax]
  402112:	fdivr  QWORD PTR ds:0x5ea12f2c
  402118:	pop    esp
  402119:	rol    DWORD PTR [eax],1
  40211b:	push   0x6b97c82d
  402120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402121:	push   esi
  402122:	aas    
  402123:	popa   
  402124:	cmp    edx,DWORD PTR [edi+0x65]
  402127:	shl    BYTE PTR [ecx-0x1b97897d],1
  40212d:	mov    cl,0x47
  40212f:	inc    BYTE PTR [eax+0x3df279ff]
  402135:	out    0x6,al
  402137:	mov    ebx,0x825cc300
  40213c:	xlat   BYTE PTR ds:[ebx]
  40213d:	xchg   DWORD PTR [ebx],ebp
  40213f:	lea    edi,[edx-0x2c6cb922]
  402145:	jle    0x40218d
  402147:	icebp  
  402148:	repz retf 
  40214a:	stc    
  40214b:	shr    dh,cl
  40214d:	loope  0x4020e3
  40214f:	imul   eax,DWORD PTR [esi+0x608543d9],0xe411f7bc
  402159:	jecxz  0x402101
  40215b:	adc    al,0x93
  40215d:	rcr    ebx,0xe6
  402160:	mov    bh,0x8a
  402162:	mov    es,WORD PTR [esi+0x24]
  402165:	aad    0xd7
  402167:	jno    0x4021ac
  402169:	mov    al,0x8e
  40216b:	fidiv  DWORD PTR [edi]
  40216d:	test   eax,0x54a7a50c
  402172:	jo     0x4020fb
  402174:	mov    esi,0x84e845a3
  402179:	sub    ebx,DWORD PTR [ebp+eiz*1+0x1a]
  40217d:	leave  
  40217e:	stc    
  40217f:	push   edi
  402180:	shr    ecx,0x10
  402183:	int3   
  402184:	iret   
  402185:	loop   0x4021e4
  402187:	imul   edx,DWORD PTR [eax],0x6d71da52
  40218d:	jno    0x402186
  40218f:	push   ecx
  402190:	mov    ebx,DWORD PTR [ecx-0x7c]
  402193:	add    al,BYTE PTR [eax+0x2b]
  402196:	mov    dh,0x9b
  402198:	sbb    BYTE PTR ds:0xa1eb6b6,ch
  40219e:	inc    ebx
  40219f:	xchg   ebx,eax
  4021a0:	or     BYTE PTR [ebp-0x39],0x8b
  4021a4:	mov    ebx,0x1f607233
  4021a9:	js     0x402228
  4021ab:	(bad)  
  4021ac:	or     al,0x75
  4021ae:	xor    al,0x32
  4021b0:	retf   0x39e
  4021b3:	mov    ebx,0xd96a98ee
  4021b8:	xor    DWORD PTR [ecx],edi
  4021ba:	xor    ebp,DWORD PTR [ecx+0x290b763f]
  4021c0:	push   es
  4021c1:	stc    
  4021c2:	xor    ah,BYTE PTR [ebx+eiz*2+0x4a8084e5]
  4021c9:	xchg   ch,al
  4021cb:	cwde   
  4021cc:	enter  0x3970,0x56
  4021d0:	dec    ebx
  4021d1:	popa   
  4021d2:	iret   
  4021d3:	mov    WORD PTR [ebx-0x1],ds
  4021d6:	ds mov edx,0x319bf493
  4021dc:	outs   dx,BYTE PTR ds:[esi]
  4021dd:	cmp    BYTE PTR [ebx-0x13],bl
  4021e0:	mov    ecx,ebx
  4021e2:	scas   eax,DWORD PTR es:[edi]
  4021e3:	dec    edi
  4021e4:	jp     0x4021a6
  4021e6:	repz or BYTE PTR [edx],cl
  4021e9:	hlt    
  4021ea:	adc    al,0x11
  4021ec:	cmp    BYTE PTR [edi-0x1174fa26],0x6c
  4021f3:	adc    dl,bh
  4021f5:	dec    ebx
  4021f6:	mov    ds:0xcb7c47f5,eax
  4021fb:	push   gs
  4021fd:	mov    edx,0x4fd9ea1b
  402202:	inc    esi
  402203:	dec    edi
  402204:	sub    ebx,DWORD PTR [eax+0x68]
  402207:	push   edi
  402208:	stos   DWORD PTR es:[edi],eax
  402209:	pop    esp
  40220a:	ret    0xac72
  40220d:	adc    DWORD PTR [eax+ebx*8-0xf],ebx
  402211:	leave  
  402212:	test   al,0x4e
  402214:	cdq    
  402215:	sub    DWORD PTR [ecx+0x22e30462],esp
  40221b:	pop    ebx
  40221c:	cmp    cl,BYTE PTR [esi+ebp*2+0x4834bfe0]
  402223:	inc    esi
  402224:	mov    DWORD PTR [edi+0x1cc5ce6f],ebx
  40222a:	aam    0x29
  40222c:	xchg   esp,eax
  40222d:	xchg   ecx,eax
  40222e:	push   cs
  40222f:	repnz repnz aas 
  402232:	ret    0x559e
  402235:	inc    edi
  402236:	aam    0x71
  402238:	les    esp,FWORD PTR [ecx]
  40223a:	mov    bl,0xde
  40223c:	movups XMMWORD PTR [edi+0x6545a616],xmm7
  402243:	jo     0x40224a
  402245:	pusha  
  402246:	and    ah,BYTE PTR [edi*1+0x760efafa]
  40224d:	inc    ebp
  40224e:	xchg   esi,eax
  40224f:	cmp    dl,BYTE PTR [edx+0x10]
  402252:	imul   esp,DWORD PTR [edi+0x67c67dff],0xffffff93
  402259:	cld    
  40225a:	jg     0x40229f
  40225c:	add    BYTE PTR [esi],bh
  40225e:	pop    ss
  40225f:	fdiv   QWORD PTR [eax+ebp*8]
  402262:	out    0x67,al
  402264:	add    ecx,DWORD PTR [ebx-0x55492467]
  40226a:	je     0x40224d
  40226c:	(bad)  
  40226d:	xchg   ebp,eax
  40226e:	jnp    0x402273
  402270:	lods   eax,DWORD PTR ds:[esi]
  402271:	retf   
  402272:	sti    
  402273:	ret    
  402274:	mov    ebp,0x7c27dd5a
  402279:	xchg   edi,eax
  40227a:	in     eax,dx
  40227b:	fs sti 
  40227d:	je     0x402273
  40227f:	ds pusha 
  402281:	iret   
  402282:	call   0x6ac3:0xa6a816c7
  402289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40228a:	out    dx,al
  40228b:	fimul  DWORD PTR [ebp-0x258ffced]
  402291:	lea    edx,[ebx]
  402293:	adc    BYTE PTR [esi+0x2b],dl
  402296:	dec    esi
  402297:	mov    ss,WORD PTR [esi-0x6b]
  40229a:	neg    eax
  40229c:	lods   eax,DWORD PTR ds:[esi]
  40229d:	mov    ah,0xff
  40229f:	cmp    eax,0xb687bd9
  4022a4:	out    0xc5,eax
  4022a6:	mov    edi,DWORD PTR [ecx+0x1f60616d]
  4022ac:	std    
  4022ad:	mov    edx,0xc41975be
  4022b2:	(bad)  
  4022b3:	loopne 0x4022e4
  4022b5:	adc    cl,bl
  4022b7:	stc    
  4022b8:	sub    ecx,DWORD PTR [esi]
  4022ba:	test   DWORD PTR [esi],0x38d4a6fc
  4022c0:	sbb    ebx,edi
  4022c2:	es (bad) 
  4022c4:	clc    
  4022c5:	pop    edx
  4022c6:	lea    eax,[ebx]
  4022c8:	adc    edx,DWORD PTR [edx-0x2ad6df4c]
  4022ce:	cvtdq2ps xmm3,xmm3
  4022d1:	xor    al,0x55
  4022d3:	xchg   edx,eax
  4022d4:	popf   
  4022d5:	(bad)  
  4022d6:	imul   ecx,DWORD PTR ds:[edi+0x3f],0x4b6c1cd2
  4022de:	or     dh,BYTE PTR gs:[ebx]
  4022e1:	cmp    eax,0x3a88bc34
  4022e6:	fucomip st,st(6)
  4022e8:	push   cs
  4022e9:	inc    edi
  4022ea:	xchg   ebp,eax
  4022eb:	xchg   ebx,eax
  4022ec:	xor    BYTE PTR [edi+ebp*4],bh
  4022ef:	into   
  4022f0:	cwde   
  4022f1:	mov    ecx,0x623915cb
  4022f6:	scas   al,BYTE PTR es:[edi]
  4022f7:	xchg   edi,eax
  4022f8:	jmp    0x402350
  4022fa:	pop    ebp
  4022fb:	std    
  4022fc:	aaa    
  4022fd:	dec    esi
  4022fe:	pop    edx
  4022ff:	sbb    esp,DWORD PTR [edi]
  402301:	pop    ss
  402302:	jg     0x40231b
  402304:	push   es
  402305:	and    DWORD PTR [ecx+0x5b],0x6cb338dd
  40230c:	push   es
  40230d:	sbb    eax,0x8648b1a2
  402312:	call   0xf74b0168
  402317:	push   ecx
  402318:	add    al,0xfe
  40231a:	fsubr  QWORD PTR [ecx-0x1e]
  40231d:	in     al,0x8c
  40231f:	sbb    eax,0xcb45a4ed
  402324:	sub    al,BYTE PTR ds:0x3bab367f
  40232a:	jno    0x402305
  40232c:	inc    edi
  40232d:	mov    al,BYTE PTR [ebp-0x50]
  402330:	test   BYTE PTR [ebx+ecx*1-0x17],dl
  402334:	ret    0xc30d
  402337:	cld    
  402338:	or     BYTE PTR [ebp+edi*4+0x28],bh
  40233c:	xor    dh,BYTE PTR [eax]
  40233e:	out    0x2c,al
  402340:	scas   eax,DWORD PTR es:[edi]
  402341:	imul   edi,DWORD PTR [eax],0xcfe05ca
  402347:	pusha  
  402348:	sbb    al,0xb4
  40234a:	aad    0xfe
  40234c:	and    BYTE PTR [eax+edi*8],0xc6
  402350:	add    edi,DWORD PTR [edx-0x1cb13d53]
  402356:	les    esi,FWORD PTR [eax+edi*1+0x2627a4eb]
  40235d:	adc    eax,0xe2239cf5
  402362:	push   es
  402363:	or     al,0x40
  402365:	in     al,dx
  402366:	pop    es
  402367:	mov    eax,0xf30557c3
  40236c:	fild   WORD PTR [ecx-0x1ca306f6]
  402372:	das    
  402373:	pop    es
  402374:	dec    ebp
  402375:	inc    esi
  402376:	xchg   DWORD PTR [edi-0x69],ebp
  402379:	leave  
  40237a:	(bad)  
  40237c:	pop    eax
  40237d:	(bad)  
  40237f:	add    al,0x7e
  402381:	pop    esi
  402382:	mov    dh,0x55
  402384:	lock mov dl,0x6f
  402387:	sub    DWORD PTR [esi-0x7d],edi
  40238a:	stos   BYTE PTR es:[edi],al
  40238b:	pop    ecx
  40238c:	xor    DWORD PTR [eax],esp
  40238e:	xchg   ecx,eax
  40238f:	inc    ebx
  402390:	mov    bh,0xcd
  402392:	adc    BYTE PTR [edi+0x58f913c],ch
  402398:	add    BYTE PTR [ebx],0x5c
  40239b:	cdq    
  40239c:	outs   dx,DWORD PTR ds:[esi]
  40239d:	out    dx,al
  40239e:	push   ss
  40239f:	push   ebx
  4023a0:	jno    0x402367
  4023a2:	daa    
  4023a3:	xlat   BYTE PTR ds:[ebx]
  4023a4:	retf   
  4023a5:	(bad)  
  4023a6:	fwait
  4023a7:	mov    ch,0x33
  4023a9:	ret    
  4023aa:	mov    ebx,0x83e28b98
  4023af:	outs   dx,DWORD PTR ds:[esi]
  4023b0:	daa    
  4023b1:	adc    DWORD PTR [edx],ebx
  4023b3:	xor    BYTE PTR [edx-0x40a9964f],bl
  4023b9:	bound  ebx,QWORD PTR [edx+0x1f6da875]
  4023bf:	icebp  
  4023c0:	add    dh,BYTE PTR [edx]
  4023c2:	mov    BYTE PTR [esp+ecx*1],bl
  4023c5:	int3   
  4023c6:	popa   
  4023c7:	addr16 ss repz aam 0x8d
  4023cc:	scas   al,BYTE PTR es:[edi]
  4023cd:	add    eax,0x191779c9
  4023d2:	(bad)  
  4023d3:	das    
  4023d4:	pop    edx
  4023d5:	dec    ecx
  4023d6:	jle    0x4023a3
  4023d8:	mov    ch,0xc6
  4023da:	jg     0x402444
  4023dc:	jb     0x4023e4
  4023de:	lods   eax,DWORD PTR ds:[esi]
  4023df:	xor    BYTE PTR [esi+0x7],al
  4023e2:	repz popa 
  4023e4:	call   0x6994:0x36027c3e
  4023eb:	mov    esi,0xe37b54f9
  4023f0:	push   ebx
  4023f1:	sbb    dl,0xac
  4023f4:	std    
  4023f5:	mov    ebp,0xc98bca5b
  4023fa:	call   FWORD PTR [ebx-0xbcbd7b5]
  402400:	push   esi
  402401:	inc    ebp
  402402:	aaa    
  402403:	push   es
  402404:	das    
  402405:	imul   esi,ebx,0x5d
  402408:	jae    0x4023a1
  40240a:	pop    eax
  40240b:	fld    st(6)
  40240d:	adc    ch,BYTE PTR [edx-0x5586af69]
  402413:	lahf   
  402414:	mov    bl,0x5f
  402416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402418:	mov    edi,0x77fc0076
  40241d:	add    DWORD PTR [edi+0x5f],edx
  402420:	fcmovnb st,st(2)
  402422:	fdiv   st,st(4)
  402424:	sbb    BYTE PTR [ebx],dh
  402426:	call   0xb0cb:0xd9ff4856
  40242d:	outs   dx,BYTE PTR ds:[esi]
  40242e:	fucomi st,st(3)
  402430:	inc    edx
  402431:	cmp    al,0x5b
  402433:	mov    ah,BYTE PTR [eax-0x546e270f]
  402439:	idiv   BYTE PTR [eax+0xa]
  40243c:	jae    0x4023ed
  40243e:	cli    
  40243f:	sahf   
  402440:	and    dl,BYTE PTR [ebx-0x21]
  402443:	fcom   QWORD PTR [esi]
  402445:	cs ret 
  402447:	fdivr  st(2),st
  402449:	into   
  40244a:	xor    ch,BYTE PTR [ecx-0x1]
  40244d:	mov    DWORD PTR ds:0x249bd49a,ebp
  402453:	dec    eax
  402454:	pop    ecx
  402455:	jo     0x402430
  402457:	pop    esp
  402458:	mov    dh,0x15
  40245a:	call   0x1a291587
  40245f:	xchg   edi,eax
  402460:	not    esi
  402462:	cdq    
  402463:	loope  0x40243c
  402465:	dec    esi
  402466:	mov    eax,0x64dd75ff
  40246b:	xor    dl,ch
  40246d:	xor    al,0xfa
  40246f:	mov    WORD PTR [eax+ebp*2-0x17],cs
  402473:	xchg   ebx,eax
  402474:	xor    cl,BYTE PTR [ebx-0x2a43ad15]
  40247a:	mov    esp,0xb857df1c
  40247f:	aaa    
  402480:	and    DWORD PTR [ecx-0x41],esi
  402483:	mov    dh,0xe8
  402485:	sbb    al,0xab
  402487:	sub    DWORD PTR [ecx],ebx
  402489:	xor    BYTE PTR [edx-0x35005f43],bl
  40248f:	icebp  
  402490:	pop    ds
  402491:	adc    edi,DWORD PTR [ebx]
  402493:	push   cs
  402494:	sub    BYTE PTR [edx-0x5e6c9cd1],ah
  40249a:	push   ebx
  40249b:	mov    esp,eax
  40249d:	mov    bl,0xe9
  40249f:	sub    al,0x72
  4024a1:	and    ecx,DWORD PTR [esi+esi*4]
  4024a4:	mov    bl,0x72
  4024a6:	and    ebx,DWORD PTR [ebx-0x76]
  4024a9:	mov    ds:0x9bc80630,al
  4024ae:	iret   
  4024af:	out    0x27,eax
  4024b1:	pop    ebx
  4024b2:	jle    0x4024c2
  4024b4:	hlt    
  4024b5:	mov    esi,DWORD PTR [ebp+ebp*8-0x613bf6df]
  4024bc:	clc    
  4024bd:	add    esp,esp
  4024bf:	in     al,0xd4
  4024c1:	or     DWORD PTR ds:0xd10ab1e2,eax
  4024c7:	(bad)  ss:0x8ab2855b
  4024ce:	mov    ebp,0x7923cccd
  4024d3:	cmp    BYTE PTR [ecx+0x5d],0xcb
  4024d7:	cmp    edi,esi
  4024d9:	add    al,0xe3
  4024db:	sbb    BYTE PTR [edi],al
  4024dd:	jmp    0x4024ea
  4024df:	mov    ecx,0x221f9ace
  4024e4:	ret    0xcb02
  4024e7:	cmp    BYTE PTR [edx+esi*8-0x7b],cl
  4024eb:	mov    esp,0xdffb3d06
  4024f0:	sbb    BYTE PTR [eax],al
  4024f2:	push   ds
  4024f3:	retf   
  4024f4:	fimul  DWORD PTR [edi+0x1f094d4f]
  4024fa:	mov    eax,ds:0x64a03dfc
  4024ff:	ja     0x402565
  402501:	imul   edi,DWORD PTR [edx+0x71],0x5e
  402505:	mov    gs:0xed8a11f1,al
  40250b:	aam    0x5b
  40250d:	test   al,0x65
  40250f:	mov    edi,0xc8563bb0
  402514:	xchg   ebx,eax
  402515:	imul   eax,DWORD PTR [edx-0x4a],0x61
  402519:	inc    esp
  40251a:	sar    DWORD PTR [edx-0x74],0xf3
  40251e:	mov    ebp,0xce77b74f
  402523:	or     eax,edx
  402525:	add    cl,dh
  402527:	dec    DWORD PTR [edx]
  402529:	pop    esp
  40252a:	fs sti 
  40252c:	jge    0x4024e1
  40252e:	cwde   
  40252f:	dec    ebx
  402530:	arpl   WORD PTR [ebp+0x48d1c9d2],bp
  402536:	push   ss
  402537:	jne    0x402572
  402539:	xor    eax,0x5f54d850
  40253e:	test   eax,0x56f0bdb1
  402543:	test   BYTE PTR [esi-0x50bcca98],ch
  402549:	and    al,0xbb
  40254b:	icebp  
  40254c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40254d:	lea    eax,[edi-0x5a]
  402550:	jmp    0xdbe165d8
  402555:	(bad)  
  402556:	inc    esp
  402557:	adc    BYTE PTR [ebx+0x3d3e7bc5],0xd0
  40255e:	mov    cl,0xc3
  402560:	mov    ah,0xe
  402562:	inc    ebp
  402563:	sub    eax,0xf86c7369
  402568:	in     al,dx
  402569:	sub    eax,0xacd06714
  40256e:	dec    esi
  40256f:	ret    
  402570:	cld    
  402571:	pop    ecx
  402572:	aam    0x8c
  402574:	adc    eax,0x3b123898
  402579:	dec    ebx
  40257a:	repnz xor DWORD PTR fs:[eax],0x8914f601
  402582:	xchg   edi,eax
  402583:	loopne 0x402587
  402585:	jo     0x402588
  402587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402588:	and    eax,0xfb1f2a5d
  40258d:	scas   eax,DWORD PTR es:[edi]
  40258e:	sub    ebp,esp
  402590:	int3   
  402591:	mov    ss,WORD PTR [eax+0x241fe039]
  402597:	loopne 0x40260c
  402599:	addr16 dec esi
  40259b:	cmp    al,BYTE PTR ds:0x16673c47
  4025a1:	call   0x6c4ed02
  4025a6:	iret   
  4025a7:	jnp    0x402568
  4025a9:	ss enter 0xbace,0xe6
  4025ae:	xlat   BYTE PTR ds:[ebx]
  4025af:	cmc    
  4025b0:	(bad)  
  4025b1:	jge    0x4025a7
  4025b3:	lods   al,BYTE PTR ds:[esi]
  4025b4:	in     eax,0xdc
  4025b6:	sbb    eax,0xd1781ca0
  4025bb:	fcmovne st,st(7)
  4025bd:	sbb    DWORD PTR [edi+0x33],0x6cb62653
  4025c4:	xchg   edi,ebx
  4025c6:	(bad)  
  4025c7:	aad    0xab
  4025c9:	and    eax,0x261559f7
  4025ce:	xor    ch,BYTE PTR [ebx]
  4025d0:	cmp    BYTE PTR [eax-0x3],ch
  4025d3:	sub    eax,0x738522ef
  4025d8:	loope  0x4025a9
  4025da:	cmp    BYTE PTR [ecx+0x29afa5e],ah
  4025e0:	cli    
  4025e1:	outs   dx,BYTE PTR ds:[esi]
  4025e2:	enter  0x11be,0xc6
  4025e6:	add    al,0x25
  4025e8:	adc    eax,edi
  4025ea:	call   0xe4fe:0x22f575cc
  4025f1:	fldcw  WORD PTR [ecx+0x6c9115e8]
  4025f7:	sub    al,0x9a
  4025f9:	pop    esi
  4025fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fb:	(bad)  
  4025fc:	sbb    edx,esi
  4025fe:	xor    dl,0x54
  402601:	arpl   WORD PTR [ebp-0x28],bx
  402604:	in     eax,0x50
  402606:	shr    BYTE PTR [eax],cl
  402608:	stc    
  402609:	out    dx,al
  40260a:	out    0x46,eax
  40260c:	call   0x1830:0x1ce4d53a
  402613:	pop    ecx
  402614:	add    al,0xa6
  402616:	adc    eax,DWORD PTR [ebp+ebx*2+0x3c370399]
  40261d:	xor    dh,cl
  40261f:	xor    al,0x4d
  402621:	cmp    BYTE PTR [eax],ah
  402623:	ficomp DWORD PTR [ebx+0x28]
  402626:	dec    ecx
  402627:	add    al,0x2f
  402629:	dec    edi
  40262a:	add    al,BYTE PTR [ebp-0x35]
  40262d:	or     eax,0x645665a7
  402632:	adc    eax,DWORD PTR [esi+0x717e0408]
  402638:	sbb    edi,DWORD PTR [edi+0x73]
  40263b:	jns    0x402681
  40263d:	mov    dh,dh
  40263f:	adc    ch,BYTE PTR [edx]
  402641:	bswap  ebx
  402643:	in     eax,0x24
  402645:	inc    eax
  402646:	push   ebp
  402647:	fwait
  402648:	and    al,0x99
  40264a:	jle    0x402616
  40264c:	(bad)  
  40264e:	aaa    
  40264f:	loope  0x402606
  402651:	scas   al,BYTE PTR es:[edi]
  402652:	mov    ch,0x14
  402654:	ja     0x402677
  402656:	std    
  402657:	loope  0x40268b
  402659:	ja     0x4025e5
  40265b:	fstp   st(7)
  40265d:	sbb    ebp,DWORD PTR [ecx-0x58]
  402660:	cli    
  402661:	popf   
  402662:	and    BYTE PTR [ebp+0x7a],al
  402665:	iret   
  402666:	pop    esi
  402667:	or     edx,ecx
  402669:	jno    0x4026a4
  40266b:	cmp    esi,DWORD PTR [ecx+ebx*4+0x5a304ee]
  402672:	sbb    esi,edi
  402674:	add    eax,0x78670a8a
  402679:	push   edx
  40267a:	ret    
  40267b:	and    DWORD PTR [edi+0x73f1c810],ebx
  402681:	mov    eax,edx
  402683:	call   0xe5e3:0x43732768
  40268a:	in     al,0xd0
  40268c:	pop    ds
  40268d:	and    eax,0x8d351f29
  402692:	jg     0x4026ac
  402694:	mov    edi,0x494644a
  402699:	test   BYTE PTR [ecx+ebp*8+0x47],dh
  40269d:	lods   al,BYTE PTR ds:[esi]
  40269e:	xchg   esi,eax
  40269f:	mov    cs,ebp
  4026a1:	retf   0x732
  4026a4:	add    edi,ebx
  4026a6:	push   ecx
  4026a7:	sbb    esp,DWORD PTR [edi+0x66]
  4026aa:	push   ebx
  4026ab:	rcl    BYTE PTR [edi],0xcc
  4026ae:	ficom  DWORD PTR [edi+edx*8-0x1ae8f852]
  4026b5:	outs   dx,BYTE PTR ds:[esi]
  4026b6:	adc    edx,edx
  4026b8:	mov    ds:0xdcdd536c,eax
  4026bd:	sbb    eax,0x1db9a5a5
  4026c2:	mov    edx,0xaa28842c
  4026c7:	sub    cl,BYTE PTR [esi]
  4026c9:	jne    0x402721
  4026cb:	dec    esp
  4026cc:	pop    ebx
  4026ce:	pop    eax
  4026cf:	fwait
  4026d0:	mov    ds,ecx
  4026d2:	dec    edx
  4026d3:	xchg   edi,eax
  4026d4:	in     al,dx
  4026d5:	jns    0x4026e4
  4026d7:	clc    
  4026d8:	gs add al,ah
  4026db:	out    dx,al
  4026dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026dd:	add    BYTE PTR [esi+eiz*2-0x43],dl
  4026e1:	or     dh,BYTE PTR [edx+eiz*1+0x48]
  4026e5:	aad    0x6d
  4026e7:	(bad)  
  4026e8:	shr    BYTE PTR [esi],cl
  4026ea:	jecxz  0x402713
  4026ec:	xchg   esi,eax
  4026ed:	scas   al,BYTE PTR es:[edi]
  4026ee:	rcr    BYTE PTR [eax+0x7b],0x2
  4026f2:	xor    BYTE PTR [edi+0x2ca3a5d9],al
  4026f8:	pop    edx
  4026f9:	jge    0x402692
  4026fb:	mov    DWORD PTR [edi],0xbf5a1cb6
  402701:	pop    es
  402702:	jno    0x4026c0
  402704:	cs adc eax,0x95a170a
  40270a:	(bad)  
  40270c:	and    esp,DWORD PTR [esi+ebp*4-0x3c502906]
  402713:	stc    
  402714:	push   eax
  402715:	clc    
  402716:	push   edx
  402718:	hlt    
  402719:	mov    edx,0xe0928c7c
  40271e:	test   DWORD PTR [esi],ebx
  402720:	jb     0x402788
  402722:	mov    ecx,0xb85e3b43
  402727:	push   eax
  402728:	gs mov dh,0xe8
  40272b:	outs   dx,DWORD PTR ds:[esi]
  40272c:	xchg   edx,eax
  40272d:	adc    ecx,ebx
  40272f:	jne    0x402765
  402731:	fsubr  QWORD PTR [esi]
  402733:	std    
  402734:	dec    ecx
  402735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402736:	mov    ebp,0xcbdb7a44
  40273b:	or     edx,ebx
  40273d:	les    ebp,FWORD PTR [ecx+0x7e8713ed]
  402743:	outs   dx,BYTE PTR ds:[esi]
  402744:	mov    al,ds:0xa0d1e53b
  402749:	popa   
  40274a:	xchg   edx,eax
  40274b:	popf   
  40274c:	loope  0x4026d0
  40274e:	mov    dl,0x1d
  402750:	test   bl,al
  402752:	jbe    0x4027d2
  402754:	ror    DWORD PTR [edi+0x73],cl
  402757:	repnz mov ah,0xbd
  40275a:	mov    esp,DWORD PTR [ecx-0xa]
  40275d:	dec    edi
  40275e:	stc    
  40275f:	cld    
  402760:	lock lods eax,DWORD PTR ds:[esi]
  402762:	out    0x67,al
  402764:	inc    ebx
  402765:	in     eax,0xae
  402767:	pop    edi
  402768:	pushf  
  402769:	fistp  DWORD PTR [ebx-0x57050377]
  40276f:	ins    BYTE PTR es:[edi],dx
  402770:	add    al,0xaa
  402772:	mov    DWORD PTR [eax-0x7b],ebp
  402775:	mov    cl,0x23
  402777:	movlps QWORD PTR [edx-0xc25d5c5],xmm5
  40277e:	sbb    al,0xf5
  402780:	icebp  
  402781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402782:	test   DWORD PTR [esi],edi
  402784:	or     esp,DWORD PTR [edx]
  402786:	xchg   edx,eax
  402787:	cwde   
  402788:	mov    ch,0x64
  40278a:	loop   0x402770
  40278c:	ficom  WORD PTR [eax]
  40278e:	cmp    eax,0x2002d328
  402793:	sub    BYTE PTR [ecx+0x1718c957],dh
  402799:	jl     0x402818
  40279b:	cmp    ch,al
  40279d:	ror    BYTE PTR [eax],cl
  40279f:	mov    edx,DWORD PTR [edi+ecx*1-0x7845804c]
  4027a6:	mov    bh,0xf1
  4027a8:	mov    dh,0xc5
  4027aa:	pop    es
  4027ab:	inc    ebp
  4027ac:	ret    
  4027ad:	(bad)
  4027b0:	mov    DWORD PTR [esi-0x588d4e03],ebx
  4027b6:	test   al,0x79
  4027b8:	std    
  4027b9:	dec    edx
  4027ba:	aaa    
  4027bb:	mov    BYTE PTR [ebx+edi*4],al
  4027be:	js     0x40276b
  4027c0:	add    ah,bh
  4027c2:	sar    DWORD PTR [esi-0x5a],cl
  4027c5:	hlt    
  4027c6:	int    0x66
  4027c8:	cli    
  4027c9:	out    dx,al
  4027ca:	sar    BYTE PTR [edi-0x47],0xe8
  4027ce:	xchg   edi,eax
  4027cf:	(bad)  
  4027d0:	cmp    BYTE PTR [edx+0x2f12cd2f],cl
  4027d6:	jle    0x4027ed
  4027d8:	add    al,0x29
  4027da:	push   DWORD PTR [ebp-0x29914e13]
  4027e0:	or     BYTE PTR [ecx+0x52],0x4b
  4027e4:	adc    bh,ch
  4027e6:	jmp    0x755:0x91525d3b
  4027ed:	shl    DWORD PTR [esi],1
  4027ef:	adc    DWORD PTR [edx],ecx
  4027f1:	mov    BYTE PTR [ecx+ebp*2+0x5e],cl
  4027f5:	dec    ecx
  4027f6:	sub    ah,BYTE PTR ds:0x146b00ca
  4027fc:	leave  
  4027fd:	xor    edi,0x4c
  402800:	sub    DWORD PTR ds:0xeba6f4c7,0xffffffa7
  402807:	xchg   DWORD PTR [ecx+0x1c],eax
  40280a:	lods   al,BYTE PTR ds:[esi]
  40280b:	push   ebx
  40280c:	enter  0x29db,0x80
  402810:	push   eax
  402811:	(bad)  
  402812:	adc    BYTE PTR ds:[esi+edx*4-0x9],bl
  402817:	adc    eax,0xbbb38dc0
  40281c:	push   ebx
  40281d:	jne    0x402846
  40281f:	mov    ebp,0x2df173f0
  402824:	dec    edx
  402825:	or     esi,DWORD PTR [esp+edx*8-0x27426c8d]
  40282c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40282d:	stos   DWORD PTR es:[edi],eax
  40282e:	out    dx,eax
  40282f:	cmp    dh,BYTE PTR [ebx+0x6bea75f1]
  402835:	addr16 push ebx
  402837:	test   ebp,0x5e25a929
  40283d:	sbb    esp,edi
  40283f:	sub    DWORD PTR [edi+ebx*8-0x6f],esp
  402843:	addr16 call 0x10d5656
  402849:	repz xchg edi,eax
  40284b:	daa    
  40284c:	xchg   bp,ax
  40284e:	in     al,0xb6
  402850:	xor    al,0x24
  402852:	dec    eax
  402853:	dec    ecx
  402854:	mov    ah,0x54
  402857:	dec    ecx
  402858:	in     al,0xdf
  40285a:	add    DWORD PTR [eax-0x4b],eax
  40285d:	js     0x4027ec
  40285f:	xchg   ebp,eax
  402860:	cmp    ebx,eax
  402862:	mov    bl,0x18
  402864:	sbb    eax,0xb293a2d0
  402869:	jmp    0x4028d9
  40286b:	cs push ds
  40286d:	in     eax,dx
  40286e:	cmp    eax,0x2a8e750b
  402873:	lods   al,BYTE PTR ds:[esi]
  402874:	push   ds
  402875:	loopne 0x402874
  402877:	sbb    dl,BYTE PTR [ebx+0x6d3638f]
  40287d:	in     eax,0x65
  40287f:	in     al,dx
  402880:	push   ebx
  402881:	pop    eax
  402882:	lea    esi,[ebx-0x51d794fa]
  402888:	mov    BYTE PTR [ecx+0x3bac18ac],ch
  40288e:	out    0x20,eax
  402890:	push   cs
  402891:	js     0x402836
  402893:	ins    BYTE PTR es:[edi],dx
  402894:	enter  0x3273,0xdb
  402898:	push   ss
  402899:	jle    0x40282f
  40289b:	jb     0x402847
  40289d:	arpl   WORD PTR [ecx],bx
  40289f:	(bad)  
  4028a0:	and    eax,0x560a3462
  4028a5:	jg     0x4028b7
  4028a7:	sub    BYTE PTR [edi-0x39],bh
  4028aa:	imul   eax,ebx,0x70d177af
  4028b0:	add    edx,ebx
  4028b2:	pop    es
  4028b3:	mov    eax,0xc186b0f9
  4028b8:	xor    BYTE PTR [edx],0xa9
  4028bb:	cmp    eax,0x74467ca5
  4028c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c1:	and    dl,0x90
  4028c4:	mov    esi,0x42df57c0
  4028c9:	imul   edx,esp,0x629017b4
  4028cf:	push   0x2336ad04
  4028d4:	sar    al,cl
  4028d6:	enter  0x8782,0xe8
  4028da:	pop    edx
  4028db:	jns    0x402945
  4028dd:	pop    ebp
  4028de:	xor    ebp,DWORD PTR [edx+0x10]
  4028e1:	lods   al,BYTE PTR ds:[esi]
  4028e2:	and    cl,bh
  4028e4:	cmc    
  4028e5:	cmp    DWORD PTR [edi+ebp*4-0x2df29f2d],edx
  4028ec:	xchg   ebx,eax
  4028ed:	xchg   ecx,eax
  4028ee:	aad    0x33
  4028f0:	and    esi,DWORD PTR [eax]
  4028f2:	ror    DWORD PTR [edx+0x32],0x9e
  4028f6:	out    dx,al
  4028f7:	int3   
  4028f8:	mov    al,BYTE PTR [ecx-0x298eaf88]
  4028fe:	mov    cl,0x77
  402900:	into   
  402901:	xor    BYTE PTR [eax-0x167be3c0],ch
  402907:	(bad)  
  402908:	cld    
  402909:	cwde   
  40290a:	call   0x371e:0x24ca781a
  402911:	jp     0x4028a3
  402913:	push   edx
  402914:	fsqrt  
  402916:	jo     0x402953
  402918:	mov    dl,0x1f
  40291a:	aas    
  40291b:	pop    eax
  40291c:	xchg   ebp,eax
  40291d:	call   DWORD PTR [esi-0x4e7e599d]
  402923:	jmp    0x4028c2
  402925:	aas    
  402926:	adc    bh,0xdf
  402929:	jmp    ecx
  40292b:	push   ecx
  40292c:	push   eax
  40292d:	mov    edi,0xaa9c15c2
  402932:	add    eax,0x6687cb2c
  402937:	push   esp
  402938:	mov    bh,0x46
  40293a:	out    dx,al
  40293b:	mov    bh,BYTE PTR [ecx+0x4e]
  40293e:	mov    edx,0xc27398ab
  402943:	mov    bh,0x26
  402945:	add    ebp,DWORD PTR [ebx-0x6dfa1239]
  40294b:	adc    BYTE PTR [ecx-0x2f],ch
  40294e:	pop    ss
  40294f:	sar    BYTE PTR [ecx-0x4bfa64d9],0xf
  402956:	loopne 0x402979
  402958:	mov    dl,0x96
  40295a:	pusha  
  40295b:	mov    eax,ds:0xbf811545
  402960:	cld    
  402961:	mov    dh,0x77
  402963:	xchg   ecx,eax
  402964:	int3   
  402965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402966:	out    0x8c,al
  402968:	adc    eax,0x8038e28d
  40296d:	pop    DWORD PTR [edx]
  40296f:	loopne 0x40294b
  402971:	xchg   esi,eax
  402972:	(bad)  
  402973:	rcl    edi,cl
  402975:	loope  0x402917
  402977:	xchg   DWORD PTR [esi],esp
  402979:	outs   dx,BYTE PTR ds:[esi]
  40297a:	inc    edi
  40297b:	in     al,0xd1
  40297d:	pushf  
  40297e:	in     al,dx
  40297f:	jno    0x40296a
  402981:	adc    DWORD PTR [edi],eax
  402983:	icebp  
  402984:	test   al,0x37
  402986:	and    BYTE PTR [edx],0x5a
  402989:	clc    
  40298a:	psubusb mm3,mm4
  40298d:	pop    eax
  40298e:	push   es
  40298f:	aam    0x9c
  402991:	test   al,0x9b
  402993:	mov    DWORD PTR [edi],esp
  402995:	orps   xmm1,XMMWORD PTR ds:0x8eb6d3b0
  40299c:	and    al,0x4
  40299e:	xor    al,0xc3
  4029a0:	retf   
  4029a1:	sub    al,0x7e
  4029a3:	jmp    0xecbb:0xf1cc6ff2
  4029aa:	inc    ebp
  4029ab:	fst    DWORD PTR [esi]
  4029ad:	out    dx,eax
  4029ae:	retf   
  4029af:	rcl    DWORD PTR [edi],0xde
  4029b2:	cmp    eax,0x1777ef6b
  4029b7:	or     al,0x42
  4029b9:	inc    esi
  4029ba:	test   BYTE PTR [eax+eax*2],dl
  4029bd:	pushf  
  4029be:	jno    0x4029b2
  4029c0:	jb     0x402988
  4029c2:	aaa    
  4029c3:	mov    dl,0xa9
  4029c5:	jmp    0x5eaffa83
  4029ca:	ret    
  4029cb:	dec    esp
  4029cc:	push   esp
  4029cd:	(bad)  
  4029ce:	aam    0x56
  4029d0:	hlt    
  4029d1:	xchg   ebp,eax
  4029d2:	or     bl,dh
  4029d4:	inc    ecx
  4029d5:	or     bl,BYTE PTR [edx-0x42af82ad]
  4029db:	mov    esp,0x3406d444
  4029e0:	retf   0x3aef
  4029e3:	fwait
  4029e4:	scas   al,BYTE PTR es:[edi]
  4029e5:	(bad)  
  4029e6:	lahf   
  4029e7:	rcl    DWORD PTR [eax-0x5],1
  4029ea:	int    0xcc
  4029ec:	out    dx,al
  4029ed:	ds scas al,BYTE PTR es:[edi]
  4029ef:	gs enter 0x3a2f,0x71
  4029f4:	cmp    al,0x29
  4029f6:	test   al,0x1e
  4029f8:	inc    ebx
  4029f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029fa:	inc    ecx
  4029fb:	xchg   ebp,eax
  4029fc:	add    ebx,0x64
  4029ff:	ds jl  0x402a75
  402a02:	ins    DWORD PTR es:[edi],dx
  402a03:	(bad)  
  402a04:	nop
  402a05:	jecxz  0x402a4d
  402a07:	lds    ecx,FWORD PTR [ebx+ecx*4+0x20]
  402a0b:	and    dl,BYTE PTR [ebp-0x5d]
  402a0e:	test   al,0xcc
  402a10:	scas   al,BYTE PTR es:[edi]
  402a11:	push   edx
  402a12:	push   esp
  402a13:	lock bnd jns 0x402a55
  402a17:	inc    edi
  402a18:	pop    edi
  402a19:	mov    eax,0xe8ac7ddc
  402a1e:	mov    al,ds:0x82acb02c
  402a23:	loop   0x4029e6
  402a25:	pop    esp
  402a26:	out    dx,eax
  402a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a28:	out    dx,eax
  402a29:	das    
  402a2a:	data16 (bad) 
  402a2c:	cs push cs
  402a2e:	jg     0x402a6d
  402a30:	aad    0xef
  402a32:	push   esp
  402a33:	or     eax,0xdf959a06
  402a38:	popf   
  402a39:	push   ecx
  402a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a3b:	jbe    0x402a49
  402a3d:	mov    cl,0x4a
  402a3f:	test   BYTE PTR [eax+ebx*4],al
  402a42:	add    ecx,esi
  402a44:	ds jns 0x4029da
  402a47:	xchg   esi,eax
  402a48:	cmp    DWORD PTR [ebp+0x37],edx
  402a4b:	fdivr  DWORD PTR [eax]
  402a4d:	push   es
  402a4e:	pop    esp
  402a4f:	xor    eax,0xfedf1fa
  402a54:	jne    0x402a21
  402a56:	ds sahf 
  402a58:	xchg   ebx,eax
  402a59:	push   eax
  402a5a:	sbb    al,0xa7
  402a5c:	pushf  
  402a5d:	pop    edi
  402a5e:	popf   
  402a5f:	push   ss
  402a60:	leave  
  402a61:	sti    
  402a62:	inc    eax
  402a63:	xlat   BYTE PTR ds:[ebx]
  402a64:	xor    al,0xa
  402a66:	dec    ecx
  402a67:	fisubr WORD PTR [ebp+0x7d]
  402a6a:	adc    BYTE PTR [ebx+eiz*1-0x5586e57f],ch
  402a71:	adc    BYTE PTR ds:0x45ad6d60,bl
  402a77:	mul    DWORD PTR [esi]
  402a79:	xchg   ebx,eax
  402a7a:	js     0x402a55
  402a7c:	pop    ebx
  402a7d:	vpslld xmm1,xmm5,XMMWORD PTR [ebp+0x6d670681]
  402a85:	xchg   edi,eax
  402a86:	scas   al,BYTE PTR es:[edi]
  402a87:	add    DWORD PTR [eax+0x5ecb9f5],0xffffffab
  402a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a8f:	cmp    al,BYTE PTR [ebx+0x5f56e3c5]
  402a95:	in     eax,dx
  402a96:	icebp  
  402a97:	ret    0xc925
  402a9a:	sub    DWORD PTR [edi+ebp*4-0x55],esp
  402a9e:	dec    ebp
  402a9f:	mov    WORD PTR [edx],?
  402aa1:	dec    edi
  402aa2:	ret    0xe67
  402aa5:	sbb    al,0x4f
  402aa7:	mov    BYTE PTR [ebp+0x6],0x65
  402aab:	(bad)  
  402aac:	int3   
  402aad:	mov    bl,bh
  402aaf:	mov    ebx,0xd43c99ff
  402ab4:	jmp    0xdc8d:0x7b0bf182
  402abb:	dec    esp
  402abc:	push   edi
  402abd:	lds    edx,FWORD PTR [eax+0x7e]
  402ac0:	jns    0x402a68
  402ac2:	jbe    0x402ae8
  402ac4:	std    
  402ac5:	ja     0x402b20
  402ac7:	out    dx,al
  402ac8:	gs int3 
  402aca:	push   esp
  402acb:	jns    0x402b20
  402acd:	pop    edx
  402ace:	sti    
  402acf:	push   esi
  402ad1:	or     bl,BYTE PTR [eax-0x542499d1]
  402ad7:	xchg   ebx,edx
  402ad9:	adc    DWORD PTR [ebp-0x50e24a59],eax
  402adf:	rol    DWORD PTR [edx],0x20
  402ae2:	mov    ds:0xe806fe60,eax
  402ae7:	pop    esi
  402ae8:	rcl    DWORD PTR [esi],1
  402aea:	cmp    bl,BYTE PTR [edx+0x69]
  402aed:	out    0x13,eax
  402aef:	sbb    al,0x9a
  402af1:	cwde   
  402af2:	and    eax,0x7e8dddb6
  402af7:	xchg   BYTE PTR [eax+ecx*4+0x3d313829],bh
  402afe:	sti    
  402aff:	jle    0x402a8f
  402b01:	push   esi
  402b02:	loope  0x402a94
  402b04:	outs   dx,BYTE PTR ds:[esi]
  402b05:	xor    DWORD PTR [ebp+0x5c],0xec0df7f1
  402b0c:	push   cs
  402b0d:	xor    BYTE PTR [edx+ecx*8-0x42],dl
  402b11:	or     ebx,DWORD PTR ds:0x1d468986
  402b17:	adc    al,0x47
  402b19:	retf   0xcd92
  402b1c:	scas   al,BYTE PTR es:[edi]
  402b1d:	sub    esi,DWORD PTR [eax]
  402b1f:	mov    ?,WORD PTR [esp+eax*1-0x4a06dbf2]
  402b26:	mov    eax,0x770c8e7b
  402b2b:	add    BYTE PTR [ebx],ah
  402b2d:	adc    BYTE PTR [esi-0x28],dh
  402b30:	loopne 0x402abb
  402b32:	adc    eax,0x40169194
  402b37:	push   edx
  402b38:	sbb    BYTE PTR [eax-0x12b34404],dh
  402b3e:	shl    ecx,cl
  402b40:	rcl    DWORD PTR [esi+0xa],0xd7
  402b44:	push   edi
  402b45:	shr    edx,0xb
  402b48:	sub    BYTE PTR [ecx+0x23],dl
  402b4b:	xor    dl,ch
  402b4d:	mov    ds:0xcd1d5317,eax
  402b52:	ss test al,0x44
  402b55:	xor    BYTE PTR [esi-0x67],al
  402b58:	data16 sub al,0x10
  402b5b:	aas    
  402b5c:	fdiv   st,st(1)
  402b5e:	xchg   esi,eax
  402b5f:	fs push esp
  402b61:	sbb    eax,0x2f596e87
  402b66:	adc    al,0x6e
  402b68:	cs sbb ebp,eax
  402b6b:	(bad)  
  402b6c:	scas   eax,DWORD PTR es:[edi]
  402b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6e:	mov    eax,0x67084681
  402b73:	loop   0x402be8
  402b75:	cs in  al,dx
  402b77:	not    DWORD PTR [esi+0x2bd6b60c]
  402b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b7e:	enter  0xef9f,0xa9
  402b82:	pop    ecx
  402b83:	imul   BYTE PTR [ebx+0x47845d70]
  402b89:	aas    
  402b8a:	bound  esp,QWORD PTR [ecx-0x57]
  402b8d:	fsubr  QWORD PTR [eax+0x70]
  402b90:	retf   0x46bc
  402b93:	xor    BYTE PTR [edi],bh
  402b95:	push   cs
  402b96:	pop    ebx
  402b97:	fidiv  WORD PTR [edi]
  402b99:	mov    al,0x92
  402b9b:	repnz stos DWORD PTR es:[edi],eax
  402b9d:	into   
  402b9e:	and    al,0xb4
  402ba0:	js     0x402c21
  402ba2:	add    eax,0x2a870be4
  402ba7:	dec    edi
  402ba8:	leave  
  402ba9:	xchg   esi,eax
  402baa:	sub    DWORD PTR [esi],ecx
  402bac:	mov    al,ds:0xde7e02c0
  402bb1:	je     0x402c0f
  402bb3:	and    eax,0x13f62ab1
  402bb8:	xchg   BYTE PTR [ebx+0x4c],al
  402bbb:	xchg   ecx,eax
  402bbc:	xor    esi,DWORD PTR [eax-0x2488e6fe]
  402bc2:	sub    edi,eax
  402bc4:	dec    esi
  402bc5:	dec    edx
  402bc6:	cmp    BYTE PTR [edx+0x3a363806],cl
  402bcc:	adc    BYTE PTR [edi-0x6f998b84],ah
  402bd2:	adc    BYTE PTR [ecx-0x24],dl
  402bd5:	cmp    BYTE PTR [ecx],al
  402bd7:	push   esp
  402bd8:	and    eax,0x4d7073
  402bdd:	repnz lea edx,[ebp+0xc]
  402be1:	pop    ss
  402be2:	mov    eax,ds:0x38bd362d
  402be7:	mov    bl,BYTE PTR [ecx+0x2f46bedb]
  402bed:	xchg   esi,eax
  402bee:	pop    ebp
  402bef:	lea    edi,fs:[esi-0x3363938b]
  402bf6:	out    0x3f,al
  402bf8:	mov    edi,DWORD PTR [ebx]
  402bfa:	mov    ah,0x2f
  402bfc:	pop    ds
  402bfd:	push   edi
  402bfe:	scas   al,BYTE PTR es:[edi]
  402bff:	les    edi,FWORD PTR [edi]
  402c01:	mov    BYTE PTR [edi-0x65],0x16
  402c05:	add    bh,BYTE PTR [ebp+0x7794ebcc]
  402c0b:	inc    esp
  402c0c:	push   eax
  402c0d:	mov    ecx,0xe8c482a7
  402c12:	xchg   ebp,eax
  402c13:	inc    ecx
  402c14:	js     0x402c5f
  402c16:	test   eax,0xa31ad7af
  402c1b:	pop    esp
  402c1c:	test   DWORD PTR [ebx],edi
  402c1e:	cmp    al,0x81
  402c20:	sar    BYTE PTR ss:[eax+0x55],cl
  402c24:	inc    ebp
  402c25:	push   cs
  402c26:	adc    esp,DWORD PTR [eax+0x4449032a]
  402c2c:	push   es
  402c2d:	das    
  402c2e:	pushf  
  402c2f:	sub    DWORD PTR [eax],ecx
  402c31:	out    0x24,eax
  402c33:	inc    edx
  402c34:	dec    ecx
  402c35:	sbb    al,0xc3
  402c37:	pop    ss
  402c38:	cmp    esi,edi
  402c3a:	(bad)  
  402c3b:	jl     0x402c60
  402c3d:	aad    0xa
  402c3f:	adc    ebx,eax
  402c41:	inc    esi
  402c42:	jecxz  0x402bcf
  402c44:	mov    cl,0x14
  402c46:	aaa    
  402c47:	mov    eax,ds:0xa15b915c
  402c4c:	cld    
  402c4d:	fmul   QWORD PTR [esp+eiz*4+0x5d58f58b]
  402c54:	push   ebp
  402c55:	pop    edi
  402c56:	sbb    dh,bh
  402c58:	push   ss
  402c59:	enter  0x9de1,0xec
  402c5d:	fcom   QWORD PTR [ebx+0x73]
  402c60:	js     0x402cd3
  402c62:	or     bh,cl
  402c64:	imul   esi,DWORD PTR [ebx],0x20
  402c67:	aad    0x88
  402c69:	adc    edi,edx
  402c6b:	repnz (bad) 
  402c6e:	retf   
  402c6f:	pop    ebp
  402c70:	add    ebp,edx
  402c72:	rol    DWORD PTR [eax+0x42],1
  402c75:	jmp    FWORD PTR [esi+0x6b]
  402c78:	mov    ds,WORD PTR [edx+0x23c3b104]
  402c7e:	in     al,dx
  402c7f:	call   0x948f:0xc310f636
  402c86:	jo     0x402c7b
  402c88:	jecxz  0x402caa
  402c8a:	cdq    
  402c8b:	int3   
  402c8c:	mov    edx,0xbd96017b
  402c91:	sbb    ebx,DWORD PTR [eax+0xf]
  402c94:	ins    BYTE PTR es:[edi],dx
  402c95:	aad    0x62
  402c97:	jge    0x402c9e
  402c99:	mov    al,ds:0xc99e445b
  402c9e:	mov    eax,0x1b99e446
  402ca3:	ins    BYTE PTR es:[edi],dx
  402ca4:	adc    esi,DWORD PTR [ecx]
  402ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ca7:	jo     0x402cef
  402ca9:	outs   dx,DWORD PTR ds:[esi]
  402caa:	mov    ebp,0x62e00982
  402caf:	sub    bl,bh
  402cb1:	rcl    eax,1
  402cb3:	xor    bl,BYTE PTR [ecx]
  402cb5:	inc    esp
  402cb6:	fwait
  402cb7:	mov    eax,ds:0x1585896f
  402cbc:	or     DWORD PTR [edi],edi
  402cbe:	jmp    0xf51784d8
  402cc3:	fwait
  402cc4:	lock jmp 0x402cf2
  402cc7:	inc    eax
  402cc8:	ss xchg ebp,eax
  402cca:	repz fwait
  402ccc:	fwait
  402ccd:	ret    0x7830
  402cd0:	dec    esi
  402cd1:	sub    eax,0x2fe7210c
  402cd6:	dec    eax
  402cd7:	out    dx,al
  402cd8:	adc    BYTE PTR [ebx],bh
  402cda:	jl     0x402d4a
  402cdc:	scas   eax,DWORD PTR es:[edi]
  402cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cde:	mov    edi,0x74d37946
  402ce3:	mov    edx,0x55507c8f
  402ce8:	loopne 0x402d15
  402cea:	call   0xe0208463
  402cef:	(bad)  
  402cf0:	cmp    al,0x3c
  402cf2:	adc    BYTE PTR [ebp+0x72ce821],ah
  402cf8:	and    al,0x36
  402cfa:	cmp    ch,BYTE PTR [edi+edx*2+0x20]
  402cfe:	cld    
  402cff:	aaa    
  402d00:	jl     0x402ce5
  402d02:	retf   
  402d03:	iret   
  402d04:	push   eax
  402d05:	out    0x1,al
  402d07:	test   ecx,ecx
  402d09:	lahf   
  402d0a:	jmp    0x402d5e
  402d0c:	mov    ds:0x8b509b91,al
  402d11:	and    DWORD PTR [edi-0x20d3d774],eax
  402d17:	iret   
  402d18:	ficom  DWORD PTR [esi+0x5]
  402d1b:	sub    bh,BYTE PTR [ebp-0x3c]
  402d1e:	sub    BYTE PTR [eax+0x61be0d1d],dl
  402d24:	pop    es
  402d25:	and    edi,DWORD PTR [eax+0x5c7545bd]
  402d2b:	or     eax,0x83c8131f
  402d30:	dec    edx
  402d31:	or     al,0x25
  402d33:	outs   dx,BYTE PTR ds:[esi]
  402d34:	icebp  
  402d35:	mov    al,0x98
  402d37:	mov    WORD PTR [ebx+0x3604c6d4],ss
  402d3d:	push   DWORD PTR [edi+ebx*1]
  402d40:	xchg   esp,eax
  402d41:	aad    0xc5
  402d43:	cmp    ebp,DWORD PTR [esi-0x592eb847]
  402d49:	adc    DWORD PTR [ecx+0x348030b9],esp
  402d4f:	xor    DWORD PTR [eax+0x641d0619],ecx
  402d55:	(bad)  
  402d56:	and    bh,BYTE PTR gs:[esi+0xc2a6879]
  402d5d:	sub    DWORD PTR [esi],ebp
  402d5f:	push   esp
  402d60:	mov    al,0xdb
  402d62:	xor    DWORD PTR [edx],edi
  402d64:	mov    bh,0xd5
  402d66:	test   DWORD PTR [esi],0xa2f44dfd
  402d6c:	mov    ebp,DWORD PTR [ebx]
  402d6e:	jb     0x402dd4
  402d70:	in     al,dx
  402d71:	push   edx
  402d72:	xchg   edi,eax
  402d73:	push   edx
  402d74:	mov    esp,0xa126753d
  402d79:	add    dl,BYTE PTR [ebp-0x7c52cbe]
  402d7f:	push   ss
  402d80:	aam    0xca
  402d82:	fcmovu st,st(7)
  402d84:	loop   0x402d4a
  402d86:	jge    0x402db9
  402d88:	test   eax,0x879e5a48
  402d8d:	adc    al,BYTE PTR [eax-0x4e]
  402d90:	push   ss
  402d91:	or     bh,cl
  402d93:	(bad)  
  402d94:	(bad)
  402d99:	jecxz  0x402de3
  402d9b:	nop
  402d9c:	je     0x402e14
  402d9e:	mov    edi,0x945a83d0
  402da3:	ja     0x402d2b
  402da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da6:	xchg   edx,eax
  402da7:	fdiv   DWORD PTR [esi-0x1a396786]
  402dad:	adc    cl,cl
  402daf:	mov    dh,0x95
  402db1:	push   ecx
  402db2:	xchg   esp,eax
  402db3:	inc    ebx
  402db4:	into   
  402db5:	stos   DWORD PTR es:[edi],eax
  402db6:	outs   dx,DWORD PTR ds:[esi]
  402db7:	add    al,0x28
  402db9:	or     DWORD PTR [esi-0x8],edi
  402dbc:	mov    ch,0x4e
  402dbe:	add    DWORD PTR [ebx+0x73029c89],0x1b
  402dc5:	iret   
  402dc6:	mov    dh,0x2d
  402dc8:	(bad)  
  402dc9:	sbb    cl,BYTE PTR [esi]
  402dcb:	jo     0x402d56
  402dcd:	mov    DWORD PTR [edx-0x4c],esp
  402dd0:	mov    al,ds:0x902c301d
  402dd5:	test   DWORD PTR [ebp-0x7d65759c],eax
  402ddb:	jge    0x402df1
  402ddd:	std    
  402dde:	mov    al,ds:0xda84122e
  402de3:	push   edx
  402de4:	mov    cl,0xae
  402de6:	cmp    bl,BYTE PTR [ebx+ebp*4]
  402de9:	xchg   esi,eax
  402dea:	jne    0x402e65
  402dec:	data16 and bh,0x49
  402df0:	inc    ebp
  402df1:	call   0x7b7927e3
  402df6:	retf   0x723
  402df9:	jmp    0x570c:0x502e1d04
  402e00:	and    eax,0x219c544b
  402e05:	jge    0x402e6d
  402e07:	adc    al,0x5d
  402e09:	shl    BYTE PTR [esi-0x647c5cc0],cl
  402e0f:	outs   dx,DWORD PTR ds:[esi]
  402e10:	stos   DWORD PTR es:[edi],eax
  402e11:	jmp    0x40bb:0xaa791a93
  402e18:	or     al,0x9b
  402e1a:	popf   
  402e1b:	mov    bh,0x52
  402e1d:	std    
  402e1e:	mov    esp,0x4ccd82ec
  402e23:	aad    0x2a
  402e25:	stos   DWORD PTR es:[edi],eax
  402e26:	inc    dl
  402e28:	pop    edx
  402e29:	jne    0x402e5e
  402e2b:	call   0x75a3:0xd6c40819
  402e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e33:	lds    edx,FWORD PTR [ebp+0x76]
  402e36:	jnp    0x402e3b
  402e38:	cmp    al,0xd1
  402e3a:	scas   al,BYTE PTR es:[edi]
  402e3b:	jle    0x402e26
  402e3d:	lods   al,BYTE PTR ds:[esi]
  402e3e:	sub    al,0xf9
  402e40:	pop    ebx
  402e41:	(bad)  
  402e42:	add    al,0x35
  402e44:	xor    DWORD PTR [ecx+0x1b],ebp
  402e47:	and    al,0x3f
  402e49:	mov    cl,0xb9
  402e4b:	scas   eax,DWORD PTR es:[edi]
  402e4c:	sbb    DWORD PTR [edx-0x1df32cf1],esp
  402e52:	outs   dx,DWORD PTR ds:[esi]
  402e53:	or     esi,esp
  402e55:	inc    esi
  402e56:	cmp    al,0x5b
  402e58:	lods   eax,DWORD PTR ds:[esi]
  402e59:	cli    
  402e5a:	pop    ecx
  402e5b:	sbb    BYTE PTR [ecx+0x62],cl
  402e5e:	fs add ebp,ecx
  402e61:	int3   
  402e62:	mov    esi,0x83ed267a
  402e67:	mov    cl,0xc
  402e69:	icebp  
  402e6a:	leave  
  402e6b:	pop    ecx
  402e6c:	mov    cl,0xc0
  402e6e:	bswap  edi
  402e70:	scas   al,BYTE PTR es:[edi]
  402e71:	fimul  WORD PTR [ecx-0x17]
  402e74:	popf   
  402e75:	or     bh,BYTE PTR [esi-0x7164afb7]
  402e7b:	fs mov ebx,0xe455e499
  402e81:	adc    DWORD PTR ds:0x2bf8a6fb,0xffffff86
  402e88:	mov    dh,0x48
  402e8a:	nop
  402e8b:	mov    dl,0xa0
  402e8d:	ins    BYTE PTR es:[edi],dx
  402e8e:	dec    ebx
  402e8f:	mov    edx,0xe47a4877
  402e94:	or     BYTE PTR [ebp+eiz*1+0x47],dl
  402e98:	mov    edx,DWORD PTR [edx+0x31]
  402e9b:	jge    0x402ea5
  402e9d:	out    dx,al
  402e9e:	and    edx,ecx
  402ea0:	shl    DWORD PTR [eax-0x52],0x32
  402ea4:	push   eax
  402ea5:	sub    cl,ch
  402ea7:	sbb    DWORD PTR [esi+0x3289070],edi
  402ead:	mov    ch,0x57
  402eaf:	gs and al,dh
  402eb2:	jmp    0x28d22cc5
  402eb7:	mul    BYTE PTR [esi]
  402eb9:	daa    
  402eba:	lahf   
  402ebb:	adc    ah,BYTE PTR [edi]
  402ebd:	mov    DWORD PTR [esi+ebx*2-0x52e91190],ebx
  402ec4:	dec    ebp
  402ec5:	mov    edx,0x5629955
  402eca:	int3   
  402ecb:	ins    BYTE PTR es:[edi],dx
  402ecc:	loop   0x402f21
  402ece:	pushf  
  402ecf:	lods   al,BYTE PTR ds:[esi]
  402ed0:	or     ecx,eax
  402ed2:	push   ebx
  402ed3:	ficom  DWORD PTR [ecx]
  402ed5:	jg     0x402e8a
  402ed7:	and    bl,BYTE PTR [esi]
  402ed9:	loopne 0x402e9a
  402edb:	shl    DWORD PTR ds:0x9f5e6cc4,cl
  402ee1:	pop    esp
  402ee2:	adc    ecx,DWORD PTR [edi]
  402ee4:	xchg   ebx,eax
  402ee5:	in     al,0x95
  402ee7:	(bad)  
  402ee8:	fsubrp st(6),st
  402eea:	sub    ebx,0x36
  402eed:	or     dl,BYTE PTR [esp+ebx*4]
  402ef0:	adc    BYTE PTR [edi*1+0x463a6c4f],bl
  402ef7:	les    ebp,FWORD PTR [ecx+0x619f2863]
  402efd:	enter  0x35d,0x54
  402f01:	cld    
  402f02:	popf   
  402f03:	jmp    0xf3d9cef9
  402f08:	sbb    DWORD PTR [edx],eax
  402f0a:	retf   
  402f0b:	cmp    cl,BYTE PTR [ebx+edx*4-0x20]
  402f0f:	cdq    
  402f10:	sahf   
  402f11:	ror    BYTE PTR [edi-0xe],cl
  402f14:	stc    
  402f15:	rol    DWORD PTR [eax-0x2f3107bd],cl
  402f1b:	pop    edi
  402f1c:	aas    
  402f1d:	mov    ch,0x76
  402f1f:	pop    esi
  402f20:	xchg   ecx,eax
  402f21:	mov    eax,0x53bd7cb6
  402f26:	xor    al,0x24
  402f28:	xor    al,0xbb
  402f2a:	sbb    eax,0x88de4481
  402f2f:	lock jmp 0x402ecb
  402f32:	push   ecx
  402f33:	cli    
  402f34:	pop    es
  402f35:	sbb    BYTE PTR [edi],0x75
  402f38:	cdq    
  402f39:	(bad)  
  402f3a:	sahf   
  402f3b:	inc    eax
  402f3c:	add    al,0x59
  402f3e:	inc    edx
  402f3f:	fild   DWORD PTR [eax+0x50a2c103]
  402f45:	pusha  
  402f46:	push   eax
  402f47:	jnp    0x402f83
  402f49:	(bad)  
  402f4a:	icebp  
  402f4b:	(bad)
  402f4e:	or     ebp,DWORD PTR [edx-0x3509c39c]
  402f54:	adc    eax,0x8a81f3e0
  402f59:	pushf  
  402f5a:	(bad)
  402f5e:	adc    DWORD PTR [edx+ecx*2-0x3731fbd0],edx
  402f65:	test   eax,0x7b04db0a
  402f6a:	(bad)  
  402f6c:	sub    al,0x19
  402f6e:	and    DWORD PTR [eax],ebp
  402f70:	adc    ah,BYTE PTR [edx+0x7f]
  402f73:	ins    BYTE PTR es:[edi],dx
  402f74:	dec    edi
  402f75:	mov    bh,0xc4
  402f77:	das    
  402f78:	push   edx
  402f79:	daa    
  402f7a:	or     DWORD PTR [ebx+0x7e],esp
  402f7d:	inc    ebp
  402f7e:	mov    ebx,0xa109aed3
  402f83:	pop    ds
  402f84:	loop   0x402fc8
  402f86:	test   BYTE PTR [edi],dl
  402f88:	imul   eax,DWORD PTR [ecx+0x792fd211],0x7d80a567
  402f92:	iret   
  402f93:	pop    eax
  402f94:	pop    eax
  402f95:	or     DWORD PTR [esi-0x1d],ecx
  402f98:	mov    eax,edx
  402f9a:	es cmp bh,0x6
  402f9e:	cmp    dl,BYTE PTR [edi]
  402fa0:	pop    ebp
  402fa1:	mul    DWORD PTR [ecx+0x28a616fd]
  402fa7:	lods   eax,DWORD PTR ds:[esi]
  402fa8:	mov    WORD PTR [ebp+edi*8+0x241b059a],cs
  402faf:	mul    DWORD PTR [edx-0x2b]
  402fb2:	lahf   
  402fb3:	mov    edi,0x5cc4703b
  402fb8:	daa    
  402fb9:	or     ebp,DWORD PTR [edi+0x68]
  402fbc:	xchg   DWORD PTR [esi],esi
  402fbe:	cmp    edx,DWORD PTR [ebx-0x77]
  402fc1:	rcl    esp,1
  402fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc4:	inc    edi
  402fc5:	clc    
  402fc6:	xor    DWORD PTR [edx+ebx*2],ebx
  402fc9:	push   ds
  402fca:	stc    
  402fcb:	leave  
  402fcc:	add    eax,0x95713fc6
  402fd1:	xor    al,0x93
  402fd3:	aad    0x89
  402fd5:	and    edi,DWORD PTR gs:[edx-0x172c5d46]
  402fdc:	fs push edx
  402fde:	shr    DWORD PTR [ebp-0x43],cl
  402fe1:	push   ecx
  402fe2:	cmc    
  402fe3:	popa   
  402fe4:	push   ds
  402fe5:	pop    esi
  402fe6:	std    
  402fe7:	sbb    eax,0xe87a2c51
  402fec:	adc    BYTE PTR [ebx-0x3a],0xdb
  402ff0:	xor    DWORD PTR [edi+0x33aa7d3a],edi
  402ff6:	add    DWORD PTR [ebp+0x3d528dbb],edi
  402ffc:	rol    DWORD PTR [ebx-0x39],cl
  402fff:	push   ebx
  403000:	mov    DWORD PTR ds:0x934f85c8,edx
  403006:	mov    ?,WORD PTR [ebp+0x28]
  403009:	aad    0x6e
  40300b:	pop    es
  40300c:	dec    esp
  40300d:	retf   
  40300e:	push   ebx
  40300f:	mov    edi,0xdc922b7d
  403015:	mov    dh,0xd0
  403017:	xchg   DWORD PTR [esi],esp
  403019:	or     ecx,0x8dbad56d
  40301f:	mov    dl,BYTE PTR [esp+eiz*2+0x3cea21ed]
  403026:	ins    BYTE PTR es:[edi],dx
  403027:	leave  
  403028:	pusha  
  403029:	fistp  WORD PTR [ebx+0x4e]
  40302c:	prefetcht0 BYTE PTR [eax-0x455db145]
  403033:	sbb    al,0x2f
  403035:	sub    bl,BYTE PTR [esi+ebx*8-0x69494229]
  40303c:	lods   eax,DWORD PTR ds:[esi]
  40303d:	(bad)  
  40303e:	stos   DWORD PTR es:[edi],eax
  40303f:	imul   esi,eax,0xfffffff1
  403042:	out    0xf1,eax
  403044:	pop    edx
  403045:	cmp    BYTE PTR [esi+ebp*4-0x5db65798],bh
  40304c:	push   eax
  40304d:	jbe    0x40307b
  40304f:	stc    
  403050:	ficom  DWORD PTR [ebx]
  403052:	push   esi
  403053:	and    ah,BYTE PTR cs:[ecx+0x51de6164]
  40305a:	ja     0x403075
  40305c:	mov    edi,0x748e965b
  403061:	cmp    ah,BYTE PTR [esi]
  403063:	sahf   
  403064:	push   esp
  403065:	test   al,0xf
  403067:	in     eax,dx
  403068:	(bad)  
  403069:	mov    cl,0xaf
  40306b:	(bad)  
  40306c:	sbb    BYTE PTR [eax-0x6d4432dd],cl
  403072:	add    eax,0x14047045
  403077:	cmp    esp,DWORD PTR [edi-0x62]
  40307a:	out    0x64,eax
  40307c:	les    ebx,FWORD PTR [edi]
  40307e:	xchg   edx,eax
  40307f:	pop    edx
  403080:	stos   BYTE PTR es:[edi],al
  403081:	adc    edi,esi
  403083:	in     eax,0x7b
  403085:	push   ebx
  403086:	data16 jge 0x403068
  403089:	clc    
  40308a:	int3   
  40308b:	add    ch,al
  40308d:	stc    
  40308e:	loop   0x4030ec
  403090:	ss inc ebp
  403092:	stos   DWORD PTR es:[edi],eax
  403093:	xor    ecx,ebp
  403095:	sub    eax,0x3c3b9527
  40309a:	add    bl,BYTE PTR [ebx+ebx*4]
  40309d:	pop    ebp
  40309e:	(bad)  
  4030a0:	test   al,0x7e
  4030a2:	dec    eax
  4030a3:	ins    BYTE PTR es:[edi],dx
  4030a4:	jae    0x4030ff
  4030a6:	mov    bl,0x5
  4030a8:	fs jb  0x403112
  4030ab:	adc    BYTE PTR [eax],ch
  4030ad:	sbb    DWORD PTR [ecx+edx*2],ecx
  4030b0:	adc    DWORD PTR [eax+0x3e],ebx
  4030b3:	mov    ebx,0x2348d6ff
  4030b8:	inc    edx
  4030b9:	xchg   ecx,eax
  4030ba:	sub    al,0xb9
  4030bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bd:	mov    dh,0x3d
  4030bf:	xor    ebx,DWORD PTR [ecx]
  4030c1:	sub    eax,DWORD PTR [edx+0x2b76db50]
  4030c7:	loop   0x4030fd
  4030c9:	mov    dl,0x86
  4030cb:	adc    al,0x84
  4030cd:	fdivr  QWORD PTR [edi+0x51]
  4030d0:	(bad)  
  4030d1:	icebp  
  4030d2:	(bad)  
  4030d3:	fnstsw WORD PTR [edi]
  4030d5:	mov    ds:0x81ef4d96,eax
  4030da:	dec    ecx
  4030db:	cwde   
  4030dc:	jmp    0x4030d0
  4030de:	loop   0x40310b
  4030e0:	jecxz  0x40306c
  4030e2:	cmp    eax,0xa4f2fbc2
  4030e7:	add    cl,BYTE PTR [esi+0x43]
  4030ea:	xchg   esi,eax
  4030eb:	clc    
  4030ec:	adc    ah,BYTE PTR ds:[ecx]
  4030ef:	mov    ebp,0x713d3c0d
  4030f4:	pop    es
  4030f5:	aad    0xb8
  4030f7:	fistp  DWORD PTR [ebp+0x677541f3]
  4030fd:	hlt    
  4030fe:	push   esp
  4030ff:	out    dx,al
  403100:	(bad)  
  403101:	xchg   ebx,eax
  403102:	stos   DWORD PTR es:[edi],eax
  403103:	(bad)  
  403105:	fdiv   st(5),st
  403107:	mov    edx,0x3638eb8a
  40310c:	xor    DWORD PTR [edi+eax*1+0x67f714bd],ecx
  403113:	fnsave [ecx-0x18]
  403116:	jb     0x40312c
  403118:	adc    DWORD PTR [eax+eax*8+0x7e1145b4],ebp
  40311f:	pushf  
  403120:	lds    edx,FWORD PTR ds:0x22e18f0d
  403126:	sbb    eax,0x337a9df0
  40312b:	mov    esp,0x39222fcd
  403130:	xor    eax,0xc428e425
  403135:	inc    edx
  403136:	dec    si
  403138:	mul    DWORD PTR [ebx]
  40313a:	scas   eax,DWORD PTR es:[edi]
  40313b:	stos   BYTE PTR es:[edi],al
  40313c:	xchg   ebp,eax
  40313d:	push   esi
  40313e:	fadd   DWORD PTR [edx-0x68]
  403141:	push   ebp
  403142:	xlat   BYTE PTR ds:[ebx]
  403143:	pop    ecx
  403144:	jns    0x40310c
  403146:	sbb    al,0x29
  403148:	fwait
  403149:	test   BYTE PTR [esi-0x7c],al
  40314c:	mov    ah,0x18
  40314e:	and    al,BYTE PTR [edx]
  403150:	xor    edi,DWORD PTR [eax+0x43]
  403153:	mov    cl,0x78
  403155:	cmp    al,0xa0
  403158:	and    DWORD PTR [edx-0x19a47bac],ebx
  40315e:	push   cs
  40315f:	repz les ebx,FWORD PTR [ebx+0x2b6d4301]
  403166:	cmp    eax,0x96796221
  40316b:	xchg   ecx,eax
  40316c:	mov    esp,0xbbf5e410
  403171:	push   ebp
  403172:	clc    
  403173:	dec    esp
  403174:	and    dl,BYTE PTR [ecx+0x60]
  403177:	hlt    
  403178:	xchg   DWORD PTR [ecx-0x57b098b7],edi
  40317e:	clc    
  40317f:	and    BYTE PTR [ebp+0x3fa1a684],cl
  403185:	addr16 icebp 
  403187:	loop   0x40312e
  403189:	mov    bl,0xeb
  40318b:	ja     0x4031ea
  40318d:	mov    eax,ds:0xc6fc7117
  403192:	mov    al,ds:0x193dfbf4
  403197:	cmp    eax,0xed2a607
  40319c:	or     ecx,eax
  40319e:	mov    cr0,esp
  4031a1:	sbb    esi,esp
  4031a3:	bound  ebx,QWORD PTR [edx]
  4031a5:	out    0x52,al
  4031a7:	dec    DWORD PTR [esi-0x6b]
  4031aa:	in     eax,0x2e
  4031ac:	retf   
  4031ad:	add    esp,DWORD PTR [ebp-0x79]
  4031b0:	fbld   TBYTE PTR [edx]
  4031b2:	cmp    DWORD PTR [edx-0x67957ef6],ebx
  4031b8:	mov    esi,0xf19f0050
  4031bd:	cld    
  4031be:	xchg   edx,eax
  4031bf:	mov    ebx,DWORD PTR [edi-0x307fc6a6]
  4031c5:	inc    eax
  4031c6:	adc    edx,edx
  4031c8:	ins    DWORD PTR es:[edi],dx
  4031c9:	fist   WORD PTR [ebp+eiz*4+0x2074aecd]
  4031d0:	sub    eax,0x25c7b7f2
  4031d5:	mov    eax,0xc920f068
  4031da:	call   0x702b:0x7fea4594
  4031e1:	cmc    
  4031e2:	sbb    esi,ebx
  4031e4:	jns    0x403177
  4031e6:	mov    ebp,0xaa31c2f7
  4031eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031ec:	inc    ebx
  4031ed:	aaa    
  4031ee:	jnp    0x4031c9
  4031f0:	(bad)  
  4031f1:	mov    edx,0xd132f87c
  4031f6:	push   es
  4031f7:	hlt    
  4031f8:	stc    
  4031f9:	aaa    
  4031fa:	dec    eax
  4031fb:	adc    DWORD PTR [ebx*1-0x5123578a],0xffffff94
  403203:	imul   esi,DWORD PTR [edx-0x64],0x4cc1de3f
  40320a:	nop
  40320b:	call   FWORD PTR [edx]
  40320d:	jp     0x40324c
  40320f:	sbb    cl,BYTE PTR [esi-0x7326a513]
  403215:	jae    0x4031dc
  403217:	push   eax
  403218:	data16 jno 0x4031f7
  40321b:	aam    0xbc
  40321d:	mov    al,ds:0x8118c3f5
  403222:	jmp    0x7ac91d72
  403227:	xlat   BYTE PTR ds:[ebx]
  403228:	dec    ebp
  403229:	lahf   
  40322a:	int    0xec
  40322c:	mov    ebp,0x46a8959
  403231:	add    esp,ebp
  403233:	mov    eax,0x32a3de4c
  403238:	pop    ebx
  403239:	sub    BYTE PTR [esi-0xa],dl
  40323c:	pop    ecx
  40323d:	out    0x4f,eax
  40323f:	mov    ch,0x6a
  403241:	mov    edi,0x758f9ba2
  403246:	std    
  403247:	in     eax,0x26
  403249:	imul   esp,DWORD PTR [ecx+0x66],0xffffff9a
  40324d:	cmp    bh,al
  40324f:	(bad)  
  403251:	hlt    
  403252:	mov    cl,ch
  403254:	adc    BYTE PTR [ecx+0x7f],cl
  403257:	out    dx,eax
  403258:	out    dx,al
  403259:	xor    BYTE PTR [ecx-0x5f],al
  40325c:	(bad)  
  40325d:	cmp    DWORD PTR [ebx-0x10],edx
  403260:	and    DWORD PTR [edx],0x5b
  403263:	sbb    eax,0xccdbd1ce
  403268:	hlt    
  403269:	mov    ah,ch
  40326b:	call   0x4869:0x944abe32
  403272:	cmp    DWORD PTR [ebx],edx
  403274:	loope  0x403261
  403276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403277:	push   ecx
  403278:	cmp    BYTE PTR [ebx-0x7d],cl
  40327b:	push   ss
  40327c:	jmp    0xe44c:0x29fbc79f
  403283:	scas   eax,DWORD PTR es:[edi]
  403284:	ret    
  403285:	mov    bl,0xc3
  403287:	(bad)  [eax-0x523d9855]
  40328d:	lea    edi,[ebp-0x77]
  403290:	jnp    0x40330e
  403292:	sub    al,0xcf
  403294:	xchg   edx,eax
  403295:	mov    cl,0x9e
  403297:	sub    al,0x1e
  403299:	outs   dx,BYTE PTR ds:[esi]
  40329a:	mov    esp,DWORD PTR [edi-0x49231c2a]
  4032a0:	cmp    BYTE PTR [ebx],0x3d
  4032a3:	repz sti 
  4032a5:	pop    ds
  4032a6:	xchg   ch,bl
  4032a8:	and    eax,0xd5501042
  4032ad:	jne    0x403292
  4032af:	push   edx
  4032b0:	outs   dx,DWORD PTR ds:[esi]
  4032b1:	ins    DWORD PTR es:[di],dx
  4032b3:	shl    DWORD PTR [edi-0x16],1
  4032b6:	jmp    0x29da:0xe0f5b4b8
  4032bd:	int3   
  4032be:	dec    edi
  4032bf:	cmp    al,0xea
  4032c1:	cld    
  4032c2:	(bad)  
  4032c3:	pusha  
  4032c4:	(bad)  
  4032c5:	out    0xdf,al
  4032c7:	add    ebx,DWORD PTR [edi+0x60]
  4032ca:	fdiv   st,st(1)
  4032cc:	sbb    al,0x94
  4032ce:	and    al,0x7f
  4032d0:	push   cs
  4032d1:	dec    edx
  4032d2:	add    al,0xd8
  4032d4:	fwait
  4032d5:	cmp    DWORD PTR [ebp-0x45],esp
  4032d8:	aad    0xec
  4032da:	lods   eax,DWORD PTR ds:[esi]
  4032db:	pusha  
  4032dc:	xor    DWORD PTR [esi-0x80],ebp
  4032df:	xchg   esp,eax
  4032e0:	cmp    edi,DWORD PTR [ecx]
  4032e2:	cwde   
  4032e3:	out    0x92,eax
  4032e5:	shl    BYTE PTR [ebx+ecx*8-0x26],cl
  4032e9:	mov    ah,BYTE PTR [edx+0x25]
  4032ec:	call   0xfdcd:0x1e6b8e2d
  4032f3:	out    0xb1,eax
  4032f5:	std    
  4032f6:	mov    DWORD PTR [edx+0x6e],ecx
  4032f9:	inc    esp
  4032fa:	jmp    0x96de033c
  4032ff:	outs   dx,BYTE PTR ds:[esi]
  403300:	push   esp
  403302:	push   edi
  403303:	ja     0x403311
  403305:	adc    esp,DWORD PTR [esi]
  403307:	paddw  mm2,QWORD PTR [ecx+ebp*8+0x5e]
  40330c:	dec    edx
  40330d:	jbe    0x403304
  40330f:	sub    BYTE PTR es:[ebp-0x7],0xa1
  403314:	jo     0x4032a5
  403316:	je     0x4032c2
  403318:	pop    eax
  403319:	leave  
  40331a:	ror    BYTE PTR [edi-0x2d497e44],0x7f
  403321:	mov    bh,0x9
  403323:	vpaddsb ymm7,ymm1,ymm6
  403327:	mov    ch,BYTE PTR [ebx-0x41]
  40332a:	fisub  DWORD PTR [edi]
  40332c:	adc    al,0xd8
  40332e:	xor    cl,BYTE PTR ds:0xacac00f7
  403334:	mov    dl,0x16
  403336:	pusha  
  403337:	inc    ecx
  403338:	lds    eax,FWORD PTR [esi]
  40333a:	cmp    DWORD PTR [ecx],edx
  40333c:	rcl    DWORD PTR [ebp-0x3e249461],cl
  403342:	pop    ebx
  403343:	pop    esi
  403344:	push   esp
  403345:	push   esi
  403346:	xchg   ebp,eax
  403347:	or     DWORD PTR [ebp+0x75],ebp
  40334a:	and    BYTE PTR [edi+0x74],cl
  40334d:	cmc    
  40334e:	mov    BYTE PTR [esi+0x24b2ce6f],ch
  403354:	test   eax,0x516da01e
  403359:	pop    ebx
  40335a:	hlt    
  40335b:	stos   BYTE PTR es:[edi],al
  40335c:	in     eax,0xa7
  40335e:	sub    ebp,DWORD PTR [ebp+0x18]
  403361:	outs   dx,BYTE PTR ds:[esi]
  403362:	int3   
  403363:	ret    0x9048
  403366:	in     eax,dx
  403367:	cwde   
  403368:	sbb    cl,ch
  40336a:	push   edi
  40336b:	cmp    al,0xe7
  40336d:	jge    0x403381
  40336f:	enter  0xb718,0xcd
  403373:	das    
  403374:	pop    ebp
  403375:	aam    0x15
  403377:	pop    edi
  403378:	call   0x4789704a
  40337d:	arpl   WORD PTR [edi-0x28],cx
  403380:	pushf  
  403381:	adc    eax,0x3cb8df9a
  403386:	xor    al,0x7d
  403388:	cdq    
  403389:	mov    ah,BYTE PTR [eax+edi*2-0x16]
  40338d:	sbb    BYTE PTR [eax+0x57f91be9],0x4a
  403394:	dec    ebx
  403395:	mov    ds:0x49f99e9a,al
  40339a:	push   0x5d
  40339c:	push   es
  40339d:	cmp    al,0x68
  40339f:	icebp  
  4033a0:	xor    ch,BYTE PTR [eax+0x3308f199]
  4033a6:	xchg   ebx,eax
  4033a7:	lods   al,BYTE PTR ds:[esi]
  4033a8:	mov    al,0x25
  4033aa:	daa    
  4033ab:	jnp    0x40336e
  4033ad:	in     eax,0xf3
  4033af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b0:	mov    WORD PTR [ebp+0x15],gs
  4033b3:	sbb    BYTE PTR [edx-0x36f9b499],dl
  4033b9:	add    esi,DWORD PTR [ecx+ebx*8+0x77]
  4033bd:	push   0x58cc309b
  4033c2:	mov    al,0x5f
  4033c4:	jge    0x403411
  4033c6:	dec    ebp
  4033c7:	rcl    BYTE PTR ds:0x4a2a07ee,0xa0
  4033ce:	ret    0x57a1
  4033d1:	adc    ebp,ecx
  4033d3:	pop    ebp
  4033d4:	pop    esi
  4033d5:	jl     0x40337a
  4033d7:	rol    DWORD PTR [ebx+0x20],1
  4033da:	icebp  
  4033db:	jns    0x403366
  4033dd:	cs push esp
  4033df:	jmp    0xf6a2:0xf9711548
  4033e6:	adc    eax,ebx
  4033e8:	sub    edi,DWORD PTR [ecx]
  4033ea:	mov    dh,0x86
  4033ec:	daa    
  4033ed:	dec    ebp
  4033ee:	mov    ecx,0x3c99a4ce
  4033f3:	repnz sbb bh,BYTE PTR [ebx+0x2a4c3da2]
  4033fa:	pop    es
  4033fb:	mov    al,0xa8
  4033fd:	cli    
  4033fe:	jbe    0x4033f7
  403400:	or     eax,0xb2b3c777
  403405:	out    0x84,eax
  403407:	data16 adc dh,BYTE PTR [esi+0x27d9f720]
  40340e:	aas    
  40340f:	and    eax,0x86588d68
  403414:	popf   
  403415:	test   BYTE PTR [edx+esi*8],dl
  403418:	test   BYTE PTR [ebx],bh
  40341a:	pop    esi
  40341b:	sbb    DWORD PTR [ecx+0x5e78a2ea],esp
  403421:	inc    ebx
  403422:	and    al,0x2
  403424:	dec    ebx
  403425:	enter  0x1144,0xaf
  403429:	mov    bh,0xfd
  40342b:	add    DWORD PTR [eax-0x4],eax
  40342e:	cmp    eax,DWORD PTR [edx]
  403430:	or     al,0xf5
  403432:	mov    gs,WORD PTR [ebp-0x19]
  403435:	sbb    DWORD PTR [esi-0x7f],ecx
  403438:	test   DWORD PTR [esi-0x3f],esp
  40343b:	add    BYTE PTR [ebx],dl
  40343d:	fdiv   QWORD PTR [ecx]
  40343f:	out    0x7c,eax
  403441:	push   es
  403442:	pop    ecx
  403443:	mov    DWORD PTR [eax-0x52],eax
  403446:	mov    bh,0xb8
  403448:	sbb    dh,dl
  40344a:	fisubr DWORD PTR [eax+edx*2+0xf]
  40344e:	mov    bl,0xcb
  403450:	inc    ecx
  403451:	ds cdq 
  403453:	lds    edx,FWORD PTR [ebp+0xf8e6245]
  403459:	mov    eax,ds:0x80dd85d0
  40345e:	loop   0x403459
  403460:	or     ebp,ebp
  403462:	aas    
  403463:	test   al,0xff
  403465:	cmp    al,0xff
  403467:	push   0x8567b23c
  40346c:	retf   
  40346d:	mov    bh,0x16
  40346f:	pop    ebp
  403470:	mov    ds:0x1ebbb0bd,al
  403475:	stos   BYTE PTR es:[edi],al
  403476:	jp     0x40348e
  403478:	es in  al,dx
  40347a:	mov    ah,0x7b
  40347c:	xor    esi,DWORD PTR [esi-0x30fd1eb8]
  403482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403483:	and    eax,0xde27e616
  403488:	cmp    DWORD PTR [esi],esi
  40348a:	dec    esp
  40348b:	mov    ebx,0x4bd77cae
  403490:	(bad)  
  403491:	mov    esi,esi
  403493:	test   al,0x40
  403495:	aam    0x80
  403497:	gs das 
  403499:	jmp    0x403446
  40349b:	pop    edi
  40349c:	push   esp
  40349d:	aaa    
  40349e:	arpl   WORD PTR [ecx+0x50],di
  4034a1:	or     BYTE PTR [ecx],ch
  4034a3:	push   edx
  4034a4:	mov    ah,0x6a
  4034a6:	fidiv  DWORD PTR [ecx]
  4034a8:	jo     0x403455
  4034aa:	mov    ebp,fs
  4034ac:	xchg   ebp,eax
  4034ad:	sub    eax,0x90288c68
  4034b2:	inc    esi
  4034b3:	lahf   
  4034b4:	es jo  0x4034aa
  4034b7:	popf   
  4034b8:	shr    DWORD PTR [esi+edx*1-0x33],0x28
  4034bd:	mov    ds:0xacf92a32,al
  4034c2:	push   ebp
  4034c3:	jae    0x403533
  4034c5:	xchg   ebx,edx
  4034c7:	or     DWORD PTR es:[edx+0x71dc4312],esp
  4034ce:	jg     0x4034b3
  4034d0:	mov    dh,0x9f
  4034d2:	stc    
  4034d3:	push   esp
  4034d4:	push   esi
  4034d5:	xor    eax,0x5512beff
  4034da:	mov    es,WORD PTR [ebx+0x32]
  4034dd:	aas    
  4034de:	loopne 0x4034ce
  4034e0:	sbb    DWORD PTR [ebx+0x51],ecx
  4034e3:	mov    bl,0x5f
  4034e6:	addr16 inc ecx
  4034e8:	mov    ds:0x70cb37b6,eax
  4034ed:	xchg   BYTE PTR [ebp+0xd3891a5],ah
  4034f3:	sub    eax,0xa6fa0ad4
  4034f8:	hlt    
  4034f9:	xor    WORD PTR [eax-0x2f],si
  4034fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034fe:	xchg   ebp,eax
  4034ff:	in     eax,0x12
  403501:	push   edi
  403502:	jne    0x4034cb
  403504:	nop
  403505:	xchg   edi,eax
  403506:	mov    ebx,0x4ca44fd9
  40350b:	push   ebp
  40350c:	jmp    0xba534332
  403511:	sbb    DWORD PTR [esi-0x1edc8a6c],esp
  403517:	hlt    
  403518:	cmp    al,cl
  40351a:	mov    ds:0xb08154d6,eax
  40351f:	loopne 0x403529
  403521:	cmp    esp,0xe6ced014
  403527:	xchg   esp,eax
  403528:	mov    ecx,0x518d120f
  40352d:	pop    edx
  40352e:	lods   eax,DWORD PTR ds:[esi]
  40352f:	fstp   QWORD PTR [eax+0x9]
  403532:	push   es
  403533:	data16 add al,0x64
  403536:	cmp    edi,ecx
  403538:	push   eax
  403539:	sub    BYTE PTR [eax+0x59],cl
  40353c:	test   al,0x1
  40353e:	(bad)  
  40353f:	jae    0x40354e
  403541:	mov    bh,0x94
  403543:	xchg   esp,eax
  403544:	sti    
  403545:	inc    ebp
  403546:	jmp    0x3cdcb569
  40354b:	push   ds
  40354c:	mov    esp,0x7a843410
  403551:	xchg   ecx,eax
  403552:	xchg   BYTE PTR [ecx-0x47],bh
  403555:	das    
  403556:	iret   
  403557:	or     dh,BYTE PTR [ecx+0x32]
  40355a:	jnp    0x4035b0
  40355c:	je     0x4035aa
  40355e:	call   0x9030:0x773eee7f
  403565:	xchg   ebx,eax
  403566:	into   
  403567:	sahf   
  403568:	aaa    
  403569:	stos   DWORD PTR es:[edi],eax
  40356a:	nop
  40356b:	mov    ch,0xe3
  40356d:	push   0xffffff91
  40356f:	inc    ebp
  403570:	in     eax,0xea
  403572:	imul   BYTE PTR [edi+ecx*4-0x2263d893]
  403579:	lock fisttp WORD PTR [esi+0x381aeb13]
  403580:	mov    ds:0xa51c25d1,al
  403585:	mov    eax,0xd9ad2254
  40358a:	stos   BYTE PTR es:[edi],al
  40358b:	pop    ss
  40358c:	mov    WORD PTR [ecx+0x7f],cs
  40358f:	or     eax,0xc68e91c8
  403594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403595:	inc    edi
  403596:	mov    esi,0x37aa9586
  40359b:	jo     0x40353c
  40359d:	push   0x519739c
  4035a2:	and    DWORD PTR [edx-0x1a],0xffffffb4
  4035a6:	ret    
  4035a7:	inc    esp
  4035a8:	jge    0x40358b
  4035aa:	rol    BYTE PTR [esi-0x788b4250],cl
  4035b0:	lds    esi,FWORD PTR ds:0x2a62e47c
  4035b6:	fisttp WORD PTR [ebx]
  4035b8:	push   DWORD PTR [ebx+0x1985bf1f]
  4035be:	push   edx
  4035bf:	push   es
  4035c0:	mov    ebp,0x159ac1d8
  4035c5:	jb     0x403558
  4035c7:	pop    eax
  4035c8:	rcr    BYTE PTR [edi-0x21],cl
  4035cb:	dec    ecx
  4035cc:	or     DWORD PTR [edx+0x2c371a1a],eax
  4035d2:	scas   eax,DWORD PTR es:[edi]
  4035d3:	scas   eax,DWORD PTR es:[edi]
  4035d4:	mov    esi,ecx
  4035d6:	repz cmp eax,0x3872a9ff
  4035dc:	xchg   ebx,eax
  4035dd:	mov    ds:0xa3f4c230,al
  4035e2:	imul   edi,DWORD PTR [edx-0x3c48ff2d],0xcd31d6cc
  4035ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ed:	mov    ds:0xc526e9e,al
  4035f2:	repnz shl BYTE PTR [ebx],1
  4035f5:	sbb    esi,esp
  4035f7:	and    DWORD PTR [ecx+0x2e6fb0a7],esi
  4035fd:	cmc    
  4035fe:	repnz xchg ecx,eax
  403600:	test   eax,ecx
  403602:	xor    eax,edx
  403604:	hlt    
  403605:	test   DWORD PTR [ecx],ebp
  403607:	push   ds
  403608:	xchg   BYTE PTR [ebx+0x71],bl
  40360b:	ror    ebp,0x99
  40360e:	lods   al,BYTE PTR ds:[esi]
  40360f:	aas    
  403610:	out    dx,al
  403611:	out    dx,al
  403612:	push   0xfffffff7
  403614:	test   BYTE PTR [ecx],ch
  403616:	leave  
  403617:	and    eax,0x1bf4746d
  40361c:	or     DWORD PTR [esi],edx
  40361e:	les    edi,FWORD PTR [eax-0x2cea6c3d]
  403624:	or     eax,0x13a790e5
  403629:	mov    ah,0xde
  40362b:	jae    0x40367c
  40362d:	xchg   DWORD PTR [esp+edx*8+0x7c],esi
  403631:	sub    ah,BYTE PTR [ecx-0x54]
  403634:	stos   BYTE PTR es:[edi],al
  403635:	fsub   QWORD PTR [eax]
  403637:	leave  
  403638:	jae    0x403636
  40363a:	nop
  40363b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40363c:	dec    edi
  40363d:	scas   eax,DWORD PTR es:[edi]
  40363e:	add    edi,DWORD PTR [ebx-0x22]
  403641:	jb     0x40361b
  403643:	add    DWORD PTR [eax+0x373218f0],0xa65211f1
  40364d:	shl    BYTE PTR [edx-0x37],1
  403650:	xlat   BYTE PTR ds:[ebx]
  403651:	cmp    DWORD PTR [edx],edi
  403653:	xor    ax,WORD PTR ss:[edi-0x5c]
  403658:	sbb    BYTE PTR [edx-0x65],dl
  40365b:	fidivr DWORD PTR [edi]
  40365d:	mov    bh,0x1
  40365f:	ds xchg dh,ah
  403662:	(bad)  
  403663:	bound  esi,QWORD PTR [eax+0xa]
  403666:	repnz push es
  403668:	setno  BYTE PTR [edx+0x51]
  40366c:	ds pusha 
  40366e:	shr    BYTE PTR [esi],cl
  403670:	push   es
  403671:	int3   
  403672:	mov    eax,0xf9e7feb0
  403677:	inc    edi
  403678:	cmp    bl,dh
  40367a:	scas   eax,DWORD PTR es:[edi]
  40367b:	adc    dl,al
  40367d:	sahf   
  40367e:	push   ecx
  40367f:	mov    bl,0xb3
  403681:	pop    edx
  403682:	and    ah,al
  403684:	xlat   BYTE PTR ds:[ebx]
  403685:	dec    edi
  403686:	pop    esi
  403687:	jne    0x40362b
  403689:	pop    edi
  40368a:	xor    al,0x22
  40368c:	int    0x7a
  40368e:	dec    edi
  40368f:	out    0x23,al
  403691:	dec    edi
  403692:	jle    0x4036cf
  403694:	and    ecx,0x21
  403697:	sbb    eax,DWORD PTR [ecx+0xe8607eb]
  40369d:	clc    
  40369e:	or     DWORD PTR [esp+ebx*1+0x17],0x1a
  4036a3:	xchg   DWORD PTR [ecx],ecx
  4036a5:	imul   esi,DWORD PTR [ecx+0xc],0x9eae5dde
  4036ac:	mov    ah,0x21
  4036ae:	sub    BYTE PTR [edi+0x3f],al
  4036b1:	add    eax,DWORD PTR [eax+ecx*8-0x592d12b2]
  4036b8:	lods   eax,DWORD PTR ds:[esi]
  4036b9:	push   ss
  4036ba:	stos   DWORD PTR es:[edi],eax
  4036bb:	mov    al,0xb7
  4036bd:	jmp    0xeda8:0xe392f755
  4036c4:	mov    eax,ds:0xe45faeef
  4036c9:	cdq    
  4036ca:	mov    ebp,0x9d2744eb
  4036cf:	repz je 0x4036bd
  4036d2:	xor    bp,WORD PTR [eax-0x31b3ce36]
  4036d9:	pop    ebp
  4036da:	fadd   DWORD PTR [eax-0x3c99303b]
  4036e0:	jnp    0x403703
  4036e2:	test   BYTE PTR [edi-0x4616419c],ah
  4036e8:	popf   
  4036e9:	pushf  
  4036ea:	cmp    ebp,edx
  4036ec:	int    0xa4
  4036ee:	out    dx,eax
  4036ef:	xchg   DWORD PTR [ecx+0x1b],eax
  4036f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f3:	pop    esi
  4036f4:	ins    DWORD PTR es:[edi],dx
  4036f5:	lea    edx,[edx-0x5b7be5eb]
  4036fb:	sub    al,0x69
  4036fd:	hlt    
  4036fe:	sbb    al,0x28
  403700:	in     eax,dx
  403701:	push   edx
  403702:	add    DWORD PTR [eax+0x6f1b29ea],esp
  403708:	or     al,0x8b
  40370a:	and    eax,0x6722aa47
  40370f:	aam    0x15
  403711:	inc    DWORD PTR [edi+ebx*2-0x7f]
  403715:	fs inc ebp
  403717:	dec    esi
  403718:	mov    WORD PTR [esi],gs
  40371a:	jp     0x40371f
  40371c:	fwait
  40371d:	cld    
  40371e:	inc    edi
  40371f:	(bad)  
  403720:	clc    
  403721:	xchg   DWORD PTR [esi+0x61],ebp
  403724:	(bad)  
  403725:	pushf  
  403726:	gs call 0x14e5cb5b
  40372c:	popf   
  40372d:	mov    esi,0xce76c7d1
  403732:	jecxz  0x40376b
  403734:	push   ebp
  403735:	(bad)  
  403737:	and    ecx,DWORD PTR [ecx-0x8]
  40373a:	enter  0x3762,0x13
  40373e:	cmc    
  40373f:	adc    ecx,eax
  403741:	std    
  403742:	cmp    cl,bl
  403744:	and    DWORD PTR [esi+0x225bbeb8],0xab1b6f19
  40374e:	jg     0x403772
  403750:	jmp    0x40379e
  403752:	fstp   TBYTE PTR [ebp-0x42e3e250]
  403758:	sub    DWORD PTR [ebp+0x7b],0x580c0fd7
  40375f:	(bad)  
  403760:	or     ebx,DWORD PTR [ebx+0x66]
  403763:	dec    edi
  403764:	lock mov eax,ds:0x499ee9b8
  40376a:	cmc    
  40376b:	leave  
  40376c:	push   0x83a9123e
  403771:	mov    al,dh
  403773:	jp     0x4036fa
  403775:	and    dh,BYTE PTR [edx-0x125f4e8d]
  40377b:	add    ebp,DWORD PTR [esi]
  40377d:	sbb    al,0x2c
  40377f:	(bad)  
  403781:	sub    al,0xa3
  403783:	test   eax,0x7a1da5e7
  403788:	lea    esp,[ecx+0x7a]
  40378b:	packssdw mm5,mm6
  40378e:	aam    0x2e
  403790:	dec    edx
  403791:	(bad)  
  403792:	int3   
  403793:	sahf   
  403794:	jmp    0x40374c
  403796:	mov    DWORD PTR [edi-0x5e],eax
  403799:	das    
  40379a:	mov    BYTE PTR [ecx],0x7c
  40379d:	mov    BYTE PTR [eax],0x9c
  4037a0:	mov    esi,0xa0223328
  4037a5:	(bad)  
  4037a6:	test   al,0xee
  4037a8:	outs   dx,BYTE PTR ds:[esi]
  4037a9:	(bad)  [ebx]
  4037ab:	xchg   esp,eax
  4037ac:	adc    eax,0x97c860ab
  4037b1:	jbe    0x40377f
  4037b3:	lock or al,0x69
  4037b6:	mov    eax,ds:0x469b7a2a
  4037bb:	dec    esi
  4037bc:	pop    edi
  4037bd:	les    esi,FWORD PTR [edi-0x2b]
  4037c0:	jmp    0x9d9f:0x2171db79
  4037c7:	out    dx,eax
  4037c8:	xadd   DWORD PTR [edi],ebp
  4037cb:	test   al,0x49
  4037cd:	xor    ecx,DWORD PTR [edx-0x59bc0e78]
  4037d3:	push   edx
  4037d4:	test   eax,0x7286caa2
  4037d9:	inc    edx
  4037da:	std    
  4037db:	sub    BYTE PTR [edi+edi*1+0x1585b9a7],0x9
  4037e3:	cmp    eax,0x6284898c
  4037e8:	push   edi
  4037e9:	mov    ebx,DWORD PTR [ecx]
  4037eb:	xor    si,WORD PTR [ecx+0x7bb19eda]
  4037f2:	push   0xde2ab6af
  4037f7:	lds    esp,FWORD PTR [ebp-0x3cc74402]
  4037fd:	mov    bh,0xb5
  4037ff:	jmp    0x221d:0x32d3cbe6
  403806:	fs jo  0x4037e6
  403809:	mov    ebx,edx
  40380b:	push   cs
  40380c:	dec    edi
  40380d:	daa    
  40380e:	inc    eax
  40380f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403810:	mov    ds:0x21b38099,al
  403815:	test   al,0xa
  403817:	mov    DWORD PTR [edx],ebp
  403819:	outs   dx,BYTE PTR ds:[esi]
  40381a:	and    dh,ch
  40381c:	dec    ecx
  40381d:	pop    eax
  40381e:	adc    eax,DWORD PTR [eax-0x27baeaa9]
  403824:	push   0x78
  403826:	lds    edi,FWORD PTR [esi-0x7adc1542]
  40382c:	mov    ebp,0x7bfd70a7
  403831:	inc    ebx
  403832:	loopne 0x4037d9
  403834:	push   ds
  403835:	sbb    DWORD PTR [edx+0x1a],esp
  403838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403839:	retf   
  40383a:	fmul   QWORD PTR [eax-0x40]
  40383d:	addr16 popf 
  40383f:	js     0x403808
  403841:	jecxz  0x403834
  403843:	outs   dx,BYTE PTR ds:[esi]
  403844:	inc    esi
  403845:	out    0x49,eax
  403847:	nop
  403848:	mov    dh,0xaf
  40384a:	adc    al,0xa7
  40384c:	mov    esp,ss
  40384e:	(bad)  
  40384f:	loope  0x403818
  403851:	popf   
  403852:	pushf  
  403853:	mov    ebx,0x3ac35425
  403858:	mov    ebx,0xe913001c
  40385d:	sbb    al,BYTE PTR [eax+0x4c]
  403860:	xchg   BYTE PTR [esi],ch
  403862:	or     BYTE PTR [edx-0x6ebbd091],0x70
  403869:	xchg   ebx,eax
  40386a:	push   eax
  40386b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40386c:	pop    edx
  40386d:	in     al,0xcb
  40386f:	inc    edi
  403870:	not    DWORD PTR cs:[ecx-0x77]
  403874:	fstp   QWORD PTR [ebx+ebp*8+0x50]
  403878:	pop    eax
  403879:	int    0xa3
  40387b:	lods   eax,DWORD PTR ds:[esi]
  40387c:	pop    ebp
  40387d:	frstor [ebx]
  40387f:	fwait
  403880:	sbb    al,0x80
  403882:	lds    esi,FWORD PTR [edi-0x65a5cf57]
  403888:	daa    
  403889:	call   0x7b2276b6
  40388e:	aam    0x81
  403890:	loopne 0x403864
  403892:	mov    ds:0x341975bf,eax
  403897:	push   ecx
  403898:	pop    es
  403899:	int    0xde
  40389b:	mov    cl,0x65
  40389d:	sub    eax,0xc2cf834b
  4038a2:	jmp    0x64c4:0xc515cd16
  4038a9:	inc    edx
  4038aa:	(bad)  
  4038ab:	mov    eax,ds:0x3e2f5674
  4038b0:	dec    ebp
  4038b1:	mov    ebx,fs
  4038b3:	int    0x59
  4038b5:	inc    ebx
  4038b6:	out    0xaf,eax
  4038b8:	cld    
  4038b9:	sbb    eax,0xf1a5fc1c
  4038be:	mov    ecx,0xca04216a
  4038c3:	mov    edi,0xf7fa70e1
  4038c8:	sbb    eax,0x81d062a2
  4038cd:	and    eax,0x78bfa04b
  4038d2:	or     eax,0xf7db914c
  4038d7:	les    esi,FWORD PTR [ecx]
  4038d9:	jno    0x4038da
  4038db:	outs   dx,DWORD PTR ds:[esi]
  4038dc:	xlat   BYTE PTR ds:[ebx]
  4038dd:	shl    DWORD PTR [edx-0x11],0xed
  4038e1:	jo     0x4038a6
  4038e3:	push   esi
  4038e4:	scas   eax,DWORD PTR es:[edi]
  4038e5:	sbb    bl,BYTE PTR [ebx-0x18]
  4038e8:	icebp  
  4038e9:	mov    bh,0x47
  4038eb:	and    eax,0x85e32ec
  4038f0:	retf   
  4038f1:	lock dec eax
  4038f3:	in     eax,0xa9
  4038f5:	in     al,dx
  4038f6:	jmp    0x609021de
  4038fb:	lods   al,BYTE PTR ds:[esi]
  4038fc:	pushf  
  4038fd:	test   DWORD PTR [edx-0x7c3ffdeb],eax
  403903:	fiadd  WORD PTR [ebx]
  403905:	dec    edx
  403906:	mov    esi,0x83eb1b74
  40390b:	mov    ah,BYTE PTR [ecx-0x3e]
  40390e:	dec    ecx
  40390f:	inc    ecx
  403910:	pop    ecx
  403911:	dec    esi
  403912:	popf   
  403913:	jle    0x4038b1
  403915:	lods   al,BYTE PTR ds:[esi]
  403916:	je     0x403905
  403918:	out    dx,eax
  403919:	or     edx,DWORD PTR ds:0xa07d7259
  40391f:	jg     0x403965
  403921:	adc    DWORD PTR ds:0xc9d81e40,ebp
  403927:	mov    cl,0x9b
  403929:	jle    0x4038ce
  40392b:	aas    
  40392c:	call   0x1028:0x9efc2655
  403933:	push   eax
  403934:	clc    
  403935:	sti    
  403936:	out    0x72,al
  403938:	sub    dl,BYTE PTR [eax+0x81347c]
  40393e:	xor    BYTE PTR [eax],0x85
  403941:	gs inc ebx
  403943:	cdq    
  403944:	imul   BYTE PTR [ebx]
  403946:	mov    eax,ds:0xc5839c0d
  40394b:	ja     0x40395f
  40394d:	fbstp  TBYTE PTR [esi-0x8]
  403950:	inc    esi
  403951:	mov    es,WORD PTR [ebx+0x310c413d]
  403957:	mov    cl,0xd2
  403959:	cmp    BYTE PTR [edx-0x46],al
  40395c:	mov    esi,0x5a09fd42
  403961:	xchg   edx,eax
  403962:	or     BYTE PTR [edi],bl
  403964:	pop    edi
  403965:	mov    edi,0x65adc64d
  40396a:	(bad)  
  40396b:	(bad)  
  40396c:	neg    DWORD PTR [esi]
  40396e:	loop   0x40399e
  403970:	add    bh,BYTE PTR [eax-0x5a8c0f2f]
  403976:	mov    cl,0x56
  403978:	outs   dx,DWORD PTR ds:[esi]
  403979:	ss mov bl,0x21
  40397c:	aad    0x99
  40397e:	clc    
  40397f:	mov    eax,ds:0xfd6ccda6
  403984:	jge    0x4039dd
  403986:	test   DWORD PTR [eax],0xe22cbe01
  40398c:	lods   al,BYTE PTR ds:[esi]
  40398d:	inc    esi
  40398e:	out    0xea,eax
  403990:	and    DWORD PTR [eax+0x46],esp
  403993:	ss xchg ecx,eax
  403995:	sahf   
  403996:	inc    edi
  403997:	xor    al,0x66
  403999:	(bad)  
  40399a:	(bad)  
  40399b:	sub    eax,0x2b34618
  4039a0:	jle    0x4039d0
  4039a2:	dec    ebx
  4039a3:	fucom  st(6)
  4039a5:	mov    edi,0x5a91173d
  4039aa:	pop    ebx
  4039ab:	pop    edi
  4039ac:	mov    fs,WORD PTR [ebp-0x61dbb829]
  4039b2:	push   cs
  4039b3:	sub    BYTE PTR [edi+0x269244a6],ch
  4039b9:	mov    bl,0xf0
  4039bb:	push   cs
  4039bc:	mov    ah,0x59
  4039be:	test   DWORD PTR [eax],esi
  4039c0:	iret   
  4039c1:	bound  ebp,QWORD PTR [edx+0x21ae0ae2]
  4039c7:	sub    BYTE PTR [ebp-0x64],dh
  4039ca:	inc    eax
  4039cb:	shl    BYTE PTR [esi+0x20],0x4b
  4039cf:	cmp    BYTE PTR [ebp-0x6e0922a1],dh
  4039d5:	push   0x4e
  4039d7:	into   
  4039d8:	pop    eax
  4039d9:	jl     0x4039ac
  4039db:	fwait
  4039dc:	cmp    BYTE PTR [eax+eax*2-0x4c086462],0xfe
  4039e4:	imul   edx,DWORD PTR [esi-0x48],0xffffffb4
  4039e8:	scas   al,BYTE PTR es:[edi]
  4039e9:	xor    bh,cl
  4039eb:	repz in al,dx
  4039ed:	xor    esp,DWORD PTR [eax+0x686657ef]
  4039f3:	add    ah,BYTE PTR [edi-0x44]
  4039f6:	shl    DWORD PTR [edi],cl
  4039f8:	fs xchg esp,eax
  4039fa:	mov    DWORD PTR [esi+esi*4-0x4e],0xf445e477
  403a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a03:	es mov edx,0x87895983
  403a09:	cwde   
  403a0a:	pushf  
  403a0b:	adc    DWORD PTR [edx-0x7c49450f],edx
  403a11:	repnz fisttp QWORD PTR [eax-0x6e2978e0]
  403a18:	adc    DWORD PTR [esi+0x51],edi
  403a1b:	sub    ah,0xad
  403a1e:	jle    0x4039dc
  403a20:	fwait
  403a21:	not    DWORD PTR [ebx-0x9929ef7]
  403a27:	das    
  403a28:	sub    eax,0x8f0bfb41
  403a2d:	scas   eax,DWORD PTR es:[edi]
  403a2e:	pop    eax
  403a2f:	mov    bl,0x81
  403a31:	cmp    ah,BYTE PTR [esi-0x165ad451]
  403a37:	iret   
  403a38:	(bad)  
  403a39:	cmp    DWORD PTR [ebp-0x2f],ecx
  403a3c:	or     cl,BYTE PTR [ebp+0x6e]
  403a3f:	push   0xffffffb8
  403a41:	dec    esp
  403a42:	mov    al,0x71
  403a44:	stos   DWORD PTR es:[edi],eax
  403a45:	test   al,0xd0
  403a47:	push   0x761a73c7
  403a4c:	adc    eax,0x81044cd6
  403a51:	enter  0x7f70,0x8d
  403a55:	ins    BYTE PTR es:[edi],dx
  403a56:	pusha  
  403a57:	loopne 0x403a24
  403a59:	pop    ds
  403a5a:	adc    BYTE PTR [ebp+0x342f4807],ah
  403a60:	mov    ds:0x6f688334,al
  403a65:	mov    eax,ds:0x675e380
  403a6a:	adc    bl,BYTE PTR [eax-0x1a51b22f]
  403a70:	xchg   BYTE PTR [ebx],bl
  403a72:	xor    ecx,DWORD PTR [ebx-0x28]
  403a75:	push   edx
  403a76:	add    al,0x8d
  403a78:	mov    ebp,0x6fa15e18
  403a7d:	in     eax,0xd8
  403a7f:	pop    edi
  403a80:	push   0x5424812c
  403a85:	xor    BYTE PTR [ebx-0x4a],al
  403a88:	stos   BYTE PTR es:[edi],al
  403a89:	push   ds
  403a8a:	add    DWORD PTR ds:0x25221f29,esp
  403a90:	and    BYTE PTR ss:[ecx+0x380b3eb3],0x67
  403a98:	mov    DWORD PTR [edx+ebp*8-0x61],ebx
  403a9c:	inc    ebx
  403a9d:	mov    dh,0xf1
  403a9f:	pop    ds
  403aa0:	test   DWORD PTR [ebp+0x1c],esi
  403aa3:	xlat   BYTE PTR ds:[ebx]
  403aa4:	stos   BYTE PTR es:[edi],al
  403aa5:	xchg   esp,eax
  403aa6:	or     ebp,0x25
  403aa9:	clc    
  403aaa:	pause  
  403aac:	adc    eax,0xdf01af80
  403ab1:	loopne 0x403ae5
  403ab3:	je     0x403a79
  403ab5:	jns    0x403a92
  403ab7:	div    BYTE PTR [edx]
  403ab9:	jge    0x403adf
  403abb:	lods   eax,DWORD PTR ds:[esi]
  403abc:	sbb    BYTE PTR [ebp+edi*8-0xe],ah
  403ac0:	sar    BYTE PTR [edi+edx*8+0x64],cl
  403ac4:	(bad)  
  403ac5:	jp     0x403a87
  403ac7:	cmp    DWORD PTR [edx+0x5f116413],edi
  403acd:	loope  0x403b36
  403acf:	dec    ecx
  403ad0:	mov    bh,0x87
  403ad2:	cmp    ecx,DWORD PTR [ecx+0x32]
  403ad5:	cmp    al,0x77
  403ad7:	mov    ah,0x98
  403ad9:	mov    al,0xd
  403adb:	fld    TBYTE PTR [ecx+0x28]
  403ade:	aam    0x2
  403ae0:	mov    al,ds:0x4f61694f
  403ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ae6:	nop
  403ae7:	push   esp
  403ae8:	mov    BYTE PTR [ebx+0x8b54724],dh
  403aee:	inc    ebp
  403aef:	jmp    0x2896:0xca8b9d9e
  403af6:	adc    bh,dh
  403af8:	pop    ebx
  403af9:	test   al,0x34
  403afb:	cmp    al,0xe8
  403afd:	xchg   edx,eax
  403afe:	dec    esi
  403aff:	idiv   DWORD PTR [edi]
  403b01:	jmp    0x4e359a0b
  403b06:	xlat   BYTE PTR ds:[ebx]
  403b07:	lods   al,BYTE PTR ds:[esi]
  403b08:	and    BYTE PTR [edx+esi*2-0x730f75ca],ch
  403b0f:	ret    
  403b10:	dec    esi
  403b11:	mov    cl,0x7a
  403b13:	xchg   edx,eax
  403b14:	shl    ecx,1
  403b16:	xor    eax,DWORD PTR [esi+ebx*1]
  403b19:	dec    ebp
  403b1a:	enter  0xbf83,0xd9
  403b1e:	sub    DWORD PTR [esi+0x7e6939e6],esi
  403b24:	mov    ebp,0x21f328cd
  403b29:	dec    esi
  403b2a:	dec    edx
  403b2b:	stc    
  403b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b2d:	(bad)  
  403b2e:	retf   0xf94b
  403b31:	sub    dl,BYTE PTR [eax]
  403b33:	push   ebp
  403b34:	sar    DWORD PTR [ecx-0x65],0xb4
  403b38:	stc    
  403b39:	xchg   ebp,eax
  403b3a:	ror    BYTE PTR [esi-0x537e6a68],1
  403b40:	shl    DWORD PTR [eax],cl
  403b42:	out    0x1c,al
  403b44:	sbb    al,0xf4
  403b46:	dec    esi
  403b47:	xchg   ebx,eax
  403b48:	ror    ah,0xf2
  403b4b:	xchg   edx,eax
  403b4c:	mov    ch,BYTE PTR [eax+0x29]
  403b4f:	clc    
  403b50:	inc    edi
  403b51:	bound  edi,QWORD PTR [eax-0xf]
  403b54:	sbb    eax,0xe63ea9df
  403b59:	ja     0x403b74
  403b5b:	pop    ss
  403b5c:	outs   dx,DWORD PTR ds:[esi]
  403b5d:	push   edi
  403b5e:	xchg   bl,ch
  403b60:	pop    esp
  403b61:	stos   BYTE PTR es:[edi],al
  403b62:	in     al,0xf
  403b64:	mov    ch,BYTE PTR [edx+0x4aff22ab]
  403b6a:	and    eax,0xcd5f25f9
  403b6f:	out    dx,al
  403b70:	dec    eax
  403b71:	out    dx,al
  403b72:	sbb    al,0x9a
  403b74:	mov    ch,BYTE PTR [ebx-0x4d42c302]
  403b7a:	loopne 0x403bd8
  403b7c:	je     0x403b88
  403b7e:	mov    edi,0x92a247b2
  403b83:	mov    edi,0xfea9decc
  403b88:	mov    ch,0xb3
  403b8a:	pop    ebx
  403b8b:	add    dh,bh
  403b8d:	jae    0x403c04
  403b8f:	inc    eax
  403b90:	mov    ds:0xbcd0fa9c,al
  403b95:	clc    
  403b96:	iret   
  403b97:	call   0xd154bf8e
  403b9c:	push   es
  403b9d:	mov    ebx,DWORD PTR [esp+eiz*2]
  403ba0:	loope  0x403bbe
  403ba2:	push   edx
  403ba3:	push   ebx
  403ba4:	add    BYTE PTR [edi+0x69],bl
  403ba7:	data16 sti 
  403ba9:	dec    esp
  403baa:	sti    
  403bab:	and    al,0x0
  403bad:	sti    
  403bae:	rcl    DWORD PTR [edi+0x5a6e595],0x8c
  403bb5:	sub    al,0x63
  403bb7:	aam    0xb6
  403bb9:	lock pop ecx
  403bbb:	hlt    
  403bbc:	mov    ecx,ecx
  403bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bbf:	loope  0x403b59
  403bc1:	imul   edx,edx,0xa9ff7ad8
  403bc7:	push   edi
  403bc8:	jmp    0x5d5c0111
  403bcd:	jb     0x403bea
  403bcf:	and    eax,0x64afd7b9
  403bd4:	jbe    0x403b5f
  403bd6:	add    edx,DWORD PTR [ebx-0x2d128055]
  403bdc:	or     BYTE PTR [ebp-0x7d],0x58
  403be0:	jne    0x403bfa
  403be2:	ja     0x403bd2
  403be4:	mov    ecx,0x11d2f57b
  403be9:	fist   DWORD PTR ds:0xc5d66605
  403bef:	ja     0x403c13
  403bf1:	jae    0x403c67
  403bf3:	test   eax,0x769ef0e3
  403bf8:	mov    edi,DWORD PTR [esi+0x5d]
  403bfb:	and    DWORD PTR [eax],edx
  403bfd:	sbb    DWORD PTR [edi+0x70],esi
  403c00:	push   ebx
  403c01:	dec    esp
  403c02:	mov    ch,0xef
  403c04:	and    DWORD PTR [edx+0x12],edx
  403c07:	or     BYTE PTR [esi],dh
  403c09:	mov    dl,0xe7
  403c0b:	mov    bh,0x57
  403c0d:	into   
  403c0e:	add    eax,0x14d3f6de
  403c13:	sub    eax,0xd29bc7a5
  403c18:	(bad)  
  403c19:	sbb    edi,ecx
  403c1b:	test   esi,ebp
  403c1d:	jp     0x403bfb
  403c1f:	adc    eax,0xf7263b97
  403c24:	xchg   BYTE PTR [eax+ebx*2],bh
  403c27:	lods   al,BYTE PTR ds:[esi]
  403c28:	das    
  403c29:	xor    ch,BYTE PTR [ebx]
  403c2b:	pop    es
  403c2c:	mov    ah,0xe6
  403c2e:	loope  0x403bbb
  403c30:	sbb    DWORD PTR [ecx+0x32],edi
  403c33:	test   esi,edx
  403c35:	into   
  403c36:	cmc    
  403c37:	out    dx,al
  403c38:	mov    edx,0xa40e35db
  403c3d:	sbb    dl,BYTE PTR ds:0x15a7ce12
  403c43:	xchg   edi,eax
  403c44:	jb     0x403c52
  403c46:	int3   
  403c47:	push   edx
  403c48:	jp     0x403c1a
  403c4a:	pushf  
  403c4b:	dec    esi
  403c4c:	out    0xff,eax
  403c4e:	sub    edx,DWORD PTR [ebp+0xa]
  403c51:	into   
  403c52:	jg     0x403c7c
  403c54:	sbb    esi,DWORD PTR [eax]
  403c56:	adc    eax,0xa7b2016c
  403c5b:	out    dx,al
  403c5c:	shr    BYTE PTR [ebp-0x3c],1
  403c5f:	xchg   DWORD PTR [edx+0x2ec11bbe],ebp
  403c65:	mov    dh,cl
  403c67:	lahf   
  403c68:	push   edi
  403c69:	pop    eax
  403c6a:	fmul   st(0),st
  403c6c:	repz mov ebx,0x784cd20b
  403c72:	(bad)  
  403c73:	mov    ch,0x97
  403c75:	or     DWORD PTR [esi-0x59],0x10
  403c79:	xor    al,0xb4
  403c7b:	cwde   
  403c7c:	lea    edx,[ebx+0x39339f73]
  403c82:	adc    BYTE PTR [esi+0x7661a684],dh
  403c88:	push   edx
  403c89:	in     al,dx
  403c8a:	idiv   DWORD PTR [esi]
  403c8c:	and    DWORD PTR [ebp-0x51ab889e],edi
  403c92:	mov    DWORD PTR [edx-0x22495344],ecx
  403c98:	sti    
  403c99:	out    0x87,eax
  403c9b:	push   cs
  403c9c:	sbb    eax,0xf47c8ed
  403ca1:	xchg   ecx,eax
  403ca2:	xchg   ebp,eax
  403ca3:	cwde   
  403ca4:	dec    ebp
  403ca5:	dec    esp
  403ca6:	mov    ds:0x8d99c6bc,eax
  403cab:	cs das 
  403cad:	xchg   esi,eax
  403cae:	dec    ebx
  403caf:	cwde   
  403cb0:	jle    0x403cc4
  403cb2:	call   0xc113:0xafdb3fc
  403cb9:	xchg   esp,eax
  403cba:	cld    
  403cbb:	icebp  
  403cbc:	cmp    al,0x51
  403cbe:	fisub  WORD PTR ds:0x6de35d2e
  403cc4:	adc    eax,0x8d2be0bd
  403cc9:	jne    0x403c60
  403ccb:	sub    edx,DWORD PTR [edx+0x1d4c2074]
  403cd1:	mov    bl,0x5b
  403cd3:	dec    edx
  403cd4:	and    eax,0x5ec84004
  403cd9:	rol    DWORD PTR [ecx+0x387aebbc],cl
  403cdf:	mov    eax,ds:0x5988bcdf
  403ce4:	test   al,0x95
  403ce6:	scas   al,BYTE PTR es:[edi]
  403ce7:	int    0xc9
  403ce9:	xchg   edx,eax
  403cea:	fnstsw WORD PTR [ebx+0x1]
  403ced:	push   ecx
  403cee:	pop    ebp
  403cef:	xor    eax,0x3bdeff2f
  403cf4:	push   cs
  403cf5:	sub    BYTE PTR [ebx+0x5d],al
  403cf8:	repz inc edx
  403cfa:	call   eax
  403cfc:	lahf   
  403cfd:	or     DWORD PTR [ecx+ebp*8-0x7f],esi
  403d01:	add    edx,DWORD PTR [ecx-0x4f]
  403d04:	cdq    
  403d05:	gs dec ebp
  403d07:	xchg   ecx,eax
  403d08:	(bad)  
  403d09:	sub    edx,esi
  403d0b:	call   0x6b39:0x6fe16453
  403d12:	inc    ebp
  403d13:	int    0x2
  403d15:	push   0x9
  403d17:	sbb    edi,DWORD PTR [ecx+ebx*2]
  403d1a:	seto   BYTE PTR [esi-0x5a]
  403d1e:	out    0xb0,al
  403d20:	mov    esi,DWORD PTR [ebp+0x63254a2f]
  403d26:	fisttp WORD PTR [ebp+0x4a]
  403d29:	pop    DWORD PTR [esi+0x77]
  403d2c:	jnp    0x403d1d
  403d2e:	mov    DWORD PTR [edi],esp
  403d30:	inc    edx
  403d31:	push   ebp
  403d32:	std    
  403d33:	cmc    
  403d34:	mov    ebx,0x7eecf354
  403d39:	jae    0x403ccf
  403d3b:	and    al,0x2a
  403d3d:	jae    0x403db7
  403d3f:	pop    edi
  403d40:	or     al,0x96
  403d42:	mov    WORD PTR [eax+ebx*4],es
  403d45:	push   ebp
  403d46:	je     0x403d42
  403d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d49:	or     ah,bh
  403d4b:	dec    eax
  403d4c:	iret   
  403d4d:	xchg   DWORD PTR [eax],ebx
  403d4f:	sbb    al,0x3b
  403d51:	add    eax,0x29c3eafb
  403d56:	push   esp
  403d57:	popf   
  403d58:	scas   eax,DWORD PTR es:[edi]
  403d59:	inc    edi
  403d5a:	mov    edi,0x9a33bf25
  403d5f:	jecxz  0x403d6d
  403d61:	or     ebp,esp
  403d63:	xor    al,0x3c
  403d65:	je     0x403dcf
  403d67:	jo     0x403d19
  403d69:	ins    BYTE PTR es:[edi],dx
  403d6a:	cld    
  403d6b:	mov    dl,0xb3
  403d6d:	pop    esi
  403d6e:	pushf  
  403d6f:	inc    ebp
  403d70:	xor    ebx,edx
  403d72:	pushf  
  403d73:	(bad)  
  403d74:	pop    ecx
  403d75:	inc    ebp
  403d76:	outs   dx,BYTE PTR ds:[esi]
  403d77:	pop    esi
  403d78:	cmc    
  403d79:	push   ss
  403d7a:	ja     0x403df0
  403d7c:	aaa    
  403d7d:	jmp    0x403ddd
  403d7f:	dec    ebx
  403d80:	pop    ds
  403d81:	dec    esp
  403d82:	xchg   BYTE PTR [ebx+0x4040a7d5],cl
  403d88:	and    esi,DWORD PTR [edi+0x59340642]
  403d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d8f:	inc    esi
  403d90:	int    0x51
  403d92:	ret    
  403d93:	scas   eax,DWORD PTR es:[edi]
  403d94:	(bad)  
  403d95:	sbb    al,0x90
  403d97:	jnp    0x403d86
  403d99:	loop   0x403d40
  403d9b:	std    
  403d9c:	cwde   
  403d9d:	mov    ecx,0x3b3aca88
  403da2:	dec    ecx
  403da3:	sub    eax,0x91f76e45
  403da8:	ja     0x403d46
  403daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dab:	jns    0x403dc1
  403dad:	add    DWORD PTR ss:[ecx+0x331729c3],ecx
  403db4:	hlt    
  403db5:	mov    ecx,0x71c845d8
  403dba:	mov    al,ds:0x24e1ad6c
  403dbf:	sbb    bl,al
  403dc1:	lahf   
  403dc2:	sbb    ebp,DWORD PTR [esp+edi*2-0x6f5ce14b]
  403dc9:	je     0x403df4
  403dcb:	call   0xecd5:0xa9337df9
  403dd2:	mov    dh,0x6f
  403dd4:	(bad)  
  403dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dd7:	sbb    al,0x3d
  403dd9:	out    0x99,al
  403ddb:	cdq    
  403ddc:	pop    ss
  403ddd:	push   esp
  403dde:	inc    edi
  403ddf:	lea    eax,[edi+0x23]
  403de2:	popa   
  403de3:	xor    eax,0xc51e6ded
  403de8:	jo     0x403d79
  403dea:	push   es
  403deb:	int3   
  403dec:	dec    ecx
  403ded:	hlt    
  403dee:	imul   ebp,ebx,0xd192d7f3
  403df4:	jbe    0x403e44
  403df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df7:	jmp    0x403e42
  403df9:	or     eax,0x96640315
  403dfe:	dec    ecx
  403dff:	repz leave 
  403e01:	jecxz  0x403d8f
  403e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e04:	push   cs
  403e05:	mov    esi,ebp
  403e07:	pop    edi
  403e08:	(bad)  
  403e09:	cmp    eax,0x2239bcca
  403e0e:	packssdw mm2,QWORD PTR [ebp-0x34]
  403e12:	add    bh,BYTE PTR [ecx+0xa284a04]
  403e18:	sbb    dl,BYTE PTR [ebp-0x2b]
  403e1b:	out    0x48,al
  403e1d:	ret    
  403e1e:	dec    esp
  403e1f:	xchg   ebp,esp
  403e21:	pop    edx
  403e22:	push   edx
  403e23:	lea    esp,[ecx]
  403e25:	test   DWORD PTR [eax+0x88e7f0c],esi
  403e2b:	clc    
  403e2c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  403e2e:	dec    edx
  403e2f:	(bad)  
  403e30:	out    dx,eax
  403e31:	jge    0x403e67
  403e33:	add    BYTE PTR [ebx],ch
  403e35:	jnp    0x403def
  403e37:	push   es
  403e38:	int    0x72
  403e3a:	out    dx,eax
  403e3b:	cmp    edi,ecx
  403e3d:	shl    edx,0x1b
  403e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e41:	loopne 0x403e85
  403e43:	lahf   
  403e44:	cli    
  403e45:	sub    cx,WORD PTR [edx+ecx*1+0x6a]
  403e4a:	into   
  403e4b:	in     eax,0xa
  403e4d:	jns    0x403ec9
  403e4f:	leave  
  403e50:	clc    
  403e51:	dec    eax
  403e53:	fs out 0xf2,al
  403e56:	dec    ebp
  403e57:	mov    ecx,DWORD PTR ds:0x7b855a7
  403e5d:	sbb    al,0x86
  403e5f:	and    BYTE PTR [eax],0x10
  403e62:	mov    al,0x20
  403e64:	mov    ebp,?
  403e66:	cmp    BYTE PTR ds:0x8f2d9047,cl
  403e6c:	sbb    eax,0x4e464f90
  403e71:	repz test al,0x33
  403e74:	(bad)  
  403e75:	int3   
  403e76:	xchg   edi,eax
  403e77:	push   eax
  403e78:	or     al,0x87
  403e7a:	mov    eax,ds:0xa46c59b1
  403e7f:	jecxz  0x403efc
  403e81:	jnp    0x403e10
  403e83:	xor    DWORD PTR [edx],ebx
  403e85:	mov    ?,WORD PTR [ebp+0x18]
  403e88:	pop    edi
  403e89:	xchg   edx,eax
  403e8a:	repz leave 
  403e8c:	outs   dx,DWORD PTR ds:[esi]
  403e8d:	or     cl,BYTE PTR [esi+edx*1]
  403e90:	push   0xbefa632d
  403e95:	cdq    
  403e96:	sbb    eax,0xf65282c
  403e9b:	sbb    DWORD PTR [ebx-0x7e],ebx
  403e9e:	fistp  WORD PTR [ecx-0x60d3746d]
  403ea4:	adc    bh,BYTE PTR [esi-0x4a760612]
  403eaa:	cwde   
  403eab:	jno    0x403eab
  403ead:	dec    esi
  403eae:	sbb    DWORD PTR [esi-0x61],ebp
  403eb1:	pop    edx
  403eb2:	mov    ch,BYTE PTR [edx]
  403eb4:	mov    cl,0x66
  403eb6:	pop    ebp
  403eb7:	xor    eax,0xab22dd8f
  403ebc:	cli    
  403ebd:	and    cl,ah
  403ebf:	adc    cl,al
  403ec1:	add    bh,0x2e
  403ec4:	push   ss
  403ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec6:	dec    esp
  403ec7:	mov    ds:0xcc9326cf,al
  403ecc:	inc    ebx
  403ecd:	pop    esp
  403ece:	xor    eax,0xcec82a25
  403ed3:	inc    ebx
  403ed4:	loopne 0x403e7b
  403ed6:	sub    eax,0xb8899e6b
  403edb:	cwde   
  403edc:	xchg   esp,eax
  403edd:	mov    WORD PTR [edi-0x5c9f88a],?
  403ee3:	test   DWORD PTR [eax-0x7e],eax
  403ee6:	enter  0x350b,0xd0
  403eea:	call   0xf187ec22
  403eef:	cmp    DWORD PTR [eax+0x4b],eax
  403ef2:	stos   DWORD PTR es:[edi],eax
  403ef3:	lods   al,BYTE PTR ds:[esi]
  403ef4:	cmp    eax,DWORD PTR [eax-0xe]
  403ef7:	fwait
  403ef8:	push   es
  403ef9:	mov    fs,ebp
  403efb:	mov    edx,0x2fb654d1
  403f00:	xchg   ebx,eax
  403f01:	jge    0x403ec5
  403f03:	mov    bh,0x77
  403f05:	sbb    DWORD PTR [ebp-0x4],esp
  403f08:	imul   bl
  403f0a:	adc    DWORD PTR [ecx-0x206e77c4],0xffffffff
  403f11:	cmp    al,0x8
  403f13:	dec    eax
  403f14:	ss std 
  403f16:	pusha  
  403f17:	or     al,0x89
  403f19:	lds    ebp,FWORD PTR [ebp-0x78]
  403f1c:	shl    bh,1
  403f1e:	fidiv  DWORD PTR [edx]
  403f20:	sbb    al,0xd6
  403f22:	stos   BYTE PTR es:[edi],al
  403f23:	xor    bl,BYTE PTR [eax]
  403f25:	repnz mov eax,0xe2cea84a
  403f2b:	or     ecx,esp
  403f2d:	dec    ebp
  403f2e:	mov    esi,0x40867bfb
  403f33:	(bad)  
  403f35:	dec    esp
  403f36:	sbb    al,0xfe
  403f38:	mov    BYTE PTR [eax+ebx*2+0x1fef2d0f],bl
  403f3f:	xchg   BYTE PTR [ebp+0xd],ch
  403f42:	adc    cl,BYTE PTR [edx-0x2925810c]
  403f48:	and    al,0xfa
  403f4a:	ds das 
  403f4c:	nop
  403f4d:	inc    esp
  403f4e:	mov    DWORD PTR [ebp-0x369fc50c],edx
  403f54:	push   esp
  403f55:	sar    BYTE PTR [ebx+0x15e06950],cl
  403f5b:	es clc 
  403f5d:	nop
  403f5e:	and    bl,bl
  403f60:	inc    ecx
  403f61:	xlat   BYTE PTR ds:[ebx]
  403f62:	fst    st(4)
  403f64:	retf   
  403f65:	int    0x97
  403f67:	in     eax,dx
  403f68:	xchg   edi,eax
  403f69:	pop    eax
  403f6a:	test   esp,edi
  403f6c:	inc    edx
  403f6d:	push   0xf6401feb
  403f72:	pop    es
  403f73:	dec    ebp
  403f74:	test   dl,bl
  403f76:	mov    ds:0x254c8a6c,eax
  403f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f7c:	(bad)  
  403f7d:	cmp    eax,0x772e4968
  403f82:	pop    esp
  403f83:	push   esp
  403f84:	dec    eax
  403f85:	mov    ah,0xa1
  403f87:	in     al,0x9b
  403f89:	sbb    bl,BYTE PTR ds:0xed96eed1
  403f8f:	mov    al,0xf4
  403f91:	pop    ebx
  403f92:	lods   al,BYTE PTR ds:[esi]
  403f93:	pop    esp
  403f94:	xchg   esp,eax
  403f95:	out    0x9e,al
  403f97:	and    eax,0x83551bfd
  403f9c:	pop    ecx
  403f9d:	or     esp,esi
  403f9f:	fstp   DWORD PTR [ebp-0x25]
  403fa2:	(bad)  
  403fa3:	adc    eax,0x5a799db7
  403fa8:	or     al,dh
  403faa:	cld    
  403fab:	xor    dh,BYTE PTR [eax]
  403fad:	in     al,0xcc
  403faf:	test   al,0xa2
  403fb1:	scas   eax,DWORD PTR es:[edi]
  403fb2:	daa    
  403fb3:	sbb    ebp,DWORD PTR [ecx+0x4c]
  403fb6:	ror    BYTE PTR [esp+edx*1+0x13],cl
  403fba:	ret    0xaf2f
  403fbd:	stc    
  403fbe:	(bad)  
  403fbf:	aad    0x6c
  403fc1:	dec    edx
  403fc2:	push   0xffffffbc
  403fc4:	test   BYTE PTR [ebp-0x77],dl
  403fc7:	mov    ah,0xe
  403fc9:	push   esi
  403fca:	push   ecx
  403fcb:	cwde   
  403fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fcd:	jo     0x403f5a
  403fcf:	sbb    edi,ebx
  403fd1:	jae    0x404002
  403fd3:	inc    ebx
  403fd4:	mov    esp,0x932e2e3c
  403fd9:	cmp    al,0xe0
  403fdb:	dec    esi
  403fdc:	adc    al,0x27
  403fde:	leave  
  403fdf:	test   al,0x6b
  403fe1:	adc    DWORD PTR [esi],eax
  403fe3:	cmc    
  403fe4:	xor    BYTE PTR [ebp+0x615c5fdf],0xca
  403feb:	jnp    0x403fc1
  403fed:	loope  0x403fc5
  403fef:	push   eax
  403ff0:	aaa    
  403ff1:	inc    ebx
  403ff2:	test   ebx,ebp
  403ff4:	bound  eax,QWORD PTR [ebx-0x43]
  403ff7:	dec    esp
  403ff8:	mov    ds:0x2ef0dbe8,al
  403ffd:	cmpxchg DWORD PTR [ebx+0x46ad4422],ebx
  404004:	stos   DWORD PTR es:[edi],eax
  404005:	jnp    0x403fda
  404007:	dec    eax
  404008:	mov    esi,0xc7d5b3ee
  40400d:	repnz inc eax
  40400f:	xchg   esi,eax
  404010:	js     0x403fb0
  404012:	mov    ecx,0x4b8cf862
  404017:	fsub   DWORD PTR [esi-0x2f]
  40401a:	sub    esp,ebx
  40401c:	sbb    DWORD PTR [edx+esi*8+0x20],edi
  404020:	addr16 pop ss
  404022:	cmp    esi,ecx
  404024:	pushf  
  404025:	lock dec esi
  404027:	in     al,0x2
  404029:	lods   al,BYTE PTR ds:[esi]
  40402a:	mov    esp,0xe34183bd
  40402f:	clc    
  404030:	add    al,0xc
  404032:	das    
  404033:	lods   al,BYTE PTR ds:[esi]
  404034:	les    esp,FWORD PTR [ecx]
  404036:	push   ebp
  404037:	pushf  
  404038:	popfw  
  40403a:	jecxz  0x404043
  40403c:	pop    ebx
  40403d:	in     al,dx
  40403e:	test   al,0x44
  404040:	adc    ebp,DWORD PTR [esi-0x21]
  404043:	mov    esp,0x8184fa22
  404048:	dec    esp
  404049:	outs   dx,DWORD PTR ds:[esi]
  40404a:	stos   BYTE PTR es:[edi],al
  40404b:	jge    0x403fde
  40404d:	adc    edi,edi
  40404f:	sub    BYTE PTR [ebx-0x31],al
  404052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404053:	mov    esp,0x80366da7
  404058:	cmp    DWORD PTR [edx+0x36cfb6de],ebp
  40405e:	stos   BYTE PTR es:[edi],al
  40405f:	in     al,dx
  404060:	cmp    cl,0x5b
  404063:	out    dx,eax
  404064:	adc    DWORD PTR [edi+0x6bc1fb58],esi
  40406a:	fs jo  0x404032
  40406d:	mov    ah,0x72
  40406f:	jl     0x4040e2
  404071:	fadd   st(7),st
  404073:	sbb    BYTE PTR [edi+ecx*8-0x43],bl
  404077:	push   0xffffffd6
  404079:	retf   
  40407a:	pusha  
  40407b:	(bad)
  40407e:	fwait
  40407f:	lods   al,BYTE PTR ds:[esi]
  404080:	addr16 dec esi
  404082:	push   edx
  404083:	outs   dx,DWORD PTR ds:[esi]
  404084:	repz (bad) 
  404086:	adc    BYTE PTR [edx],ah
  404088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404089:	sti    
  40408a:	aaa    
  40408b:	xor    edi,0x33
  40408e:	add    esp,0xffffff98
  404091:	pusha  
  404092:	sahf   
  404093:	adc    esp,DWORD PTR [ebx-0x7e94758e]
  404099:	shl    DWORD PTR [ecx+eiz*4+0x11253f5d],1
  4040a0:	imul   ebx,DWORD PTR [eax+eax*2-0x69fc9e21],0x6996b5c1
  4040ab:	xor    DWORD PTR [ecx],0x6ed31f8c
  4040b1:	mov    ?,WORD PTR [ebx]
  4040b3:	add    eax,0xfee77bd1
  4040b8:	jnp    0x40408d
  4040ba:	mov    eax,ds:0x90604a46
  4040bf:	jnp    0x4040a4
  4040c1:	addr16 sti 
  4040c3:	sbb    edi,DWORD PTR [esi+0x3051f927]
  4040c9:	xchg   al,cl
  4040cb:	adc    BYTE PTR [edi-0x106e07a4],dh
  4040d1:	inc    esp
  4040d2:	inc    esi
  4040d3:	(bad)  
  4040d4:	lahf   
  4040d5:	repnz gs mov dh,0x49
  4040d9:	mov    ecx,0xe85b7f59
  4040de:	push   es
  4040df:	inc    ebp
  4040e0:	mov    dl,0x9c
  4040e2:	xlat   BYTE PTR ds:[ebx]
  4040e3:	sbb    DWORD PTR [ebx+eax*4+0x77],edx
  4040e7:	lds    ebx,FWORD PTR [eax-0x69ea5ffe]
  4040ed:	xchg   DWORD PTR [eax+0x5e053d2],ecx
  4040f3:	retf   0xac2
  4040f6:	mov    ch,0x4e
  4040f8:	jo     0x4040da
  4040fa:	and    BYTE PTR [edx],cl
  4040fc:	xor    al,0x91
  4040fe:	cmc    
  4040ff:	out    0xfe,al
  404101:	(bad)  
  404102:	lods   eax,DWORD PTR ds:[esi]
  404103:	push   eax
  404104:	addr16 xor esp,0xb60d5633
  40410b:	call   0xe3981e6c
  404110:	lock mov eax,DWORD PTR [ecx]
  404113:	neg    DWORD PTR [ecx]
  404115:	and    al,0x95
  404117:	inc    edi
  404118:	push   ebp
  404119:	pop    edx
  40411a:	mov    dh,0x15
  40411c:	pop    ecx
  40411d:	add    al,0xf6
  40411f:	aad    0xf0
  404121:	xchg   ecx,eax
  404122:	or     DWORD PTR [ebx+0x2],0x62
  404126:	mov    dh,0x3f
  404128:	mov    ah,0x9c
  40412a:	mov    ebp,0x1dd6789d
  40412f:	fimul  WORD PTR [ebp+edi*4+0x40]
  404133:	ins    BYTE PTR es:[edi],dx
  404134:	mov    ecx,0x3146c390
  404139:	and    edx,edx
  40413b:	sar    cl,cl
  40413d:	cmp    DWORD PTR [esi-0x34],eax
  404140:	cmp    dh,BYTE PTR [edx]
  404142:	and    bl,dh
  404144:	mov    eax,ds:0x6f505bc7
  404149:	mov    eax,0xffa80fe0
  40414e:	leave  
  40414f:	pop    ebp
  404150:	pop    edx
  404151:	outs   dx,BYTE PTR ds:[esi]
  404152:	scas   eax,DWORD PTR es:[edi]
  404153:	dec    esp
  404154:	and    eax,0xf4b9f2c5
  404159:	enter  0xe1fc,0xdc
  40415d:	outs   dx,DWORD PTR ds:[esi]
  40415e:	scas   eax,DWORD PTR es:[edi]
  40415f:	xchg   eax,esp
  404161:	cmp    al,0x4e
  404163:	sub    al,0x4
  404165:	mov    edi,0x507efd90
  40416a:	dec    ecx
  40416b:	mov    WORD PTR [edx-0x65d8eaec],?
  404171:	mov    eax,0xc3730c06
  404176:	pop    eax
  404177:	test   bh,cl
  404179:	mov    eax,0x72790585
  40417e:	jecxz  0x40416a
  404180:	mov    edi,0xf6ed1ea2
  404185:	xchg   ecx,eax
  404186:	pop    ebx
  404187:	repnz dec esp
  404189:	icebp  
  40418a:	popf   
  40418b:	outs   dx,BYTE PTR ds:[esi]
  40418c:	cmp    eax,0xb7387637
  404191:	cld    
  404192:	addr16 jge 0x4041c1
  404195:	(bad)  
  404196:	into   
  404197:	aaa    
  404198:	imul   edx,DWORD PTR [ebp+0x744a9862],0x7cdebe55
  4041a2:	loop   0x4041e2
  4041a4:	inc    ebx
  4041a5:	xchg   ebp,eax
  4041a6:	dec    ebp
  4041a7:	ss inc ebp
  4041a9:	add    DWORD PTR [edx],0xc0fcf027
  4041af:	pop    ebp
  4041b0:	or     DWORD PTR [eax],ecx
  4041b2:	mov    ebp,gs
  4041b4:	mov    al,0x84
  4041b6:	mov    ds,WORD PTR [esp+edi*4]
  4041b9:	imul   ecx,edx,0xc3f98e55
  4041bf:	clc    
  4041c0:	icebp  
  4041c1:	xchg   esi,eax
  4041c2:	sub    esi,ebp
  4041c4:	(bad)  
  4041c5:	icebp  
  4041c6:	inc    esp
  4041c7:	stos   DWORD PTR es:[edi],eax
  4041c8:	inc    edx
  4041c9:	ret    0x4c85
  4041cc:	adc    ebx,esp
  4041ce:	adc    al,0x9a
  4041d0:	sub    eax,0xc64ff25f
  4041d5:	xchg   esp,ebx
  4041d7:	jnp    0x4041f4
  4041d9:	arpl   bp,sp
  4041db:	enter  0xc98e,0x66
  4041df:	sub    edx,DWORD PTR [edi+0x4]
  4041e2:	mov    WORD PTR [eax+esi*8+0x2a83137c],es
  4041e9:	(bad)  
  4041ea:	pop    ecx
  4041eb:	cmp    eax,0xe7d5520c
  4041f0:	(bad)  
  4041f1:	ins    DWORD PTR es:[edi],dx
  4041f2:	icebp  
  4041f3:	push   cs
  4041f4:	stos   BYTE PTR es:[edi],al
  4041f5:	outs   dx,BYTE PTR ds:[esi]
  4041f6:	icebp  
  4041f7:	call   0x1a8a:0x7bb662a0
  4041fe:	mov    bh,0xa2
  404200:	add    ecx,ecx
  404202:	cmp    eax,ecx
  404204:	jecxz  0x404213
  404206:	popf   
  404207:	dec    esi
  404208:	int    0xf3
  40420a:	stc    
  40420b:	jmp    0x404263
  40420d:	retf   
  40420e:	pop    ds
  40420f:	pop    ebp
  404210:	loopne 0x4041b6
  404212:	icebp  
  404213:	rcl    BYTE PTR [edx],cl
  404215:	fadd   st(4),st
  404217:	inc    ecx
  404218:	nop
  404219:	cdq    
  40421a:	(bad)  
  40421b:	xor    eax,edi
  40421d:	pop    edi
  40421e:	test   al,ch
  404220:	(bad)  
  404221:	pop    esp
  404222:	bound  edx,QWORD PTR [edi]
  404224:	cmp    al,0x5f
  404226:	ins    DWORD PTR es:[edi],dx
  404227:	add    al,0x10
  404229:	xor    BYTE PTR [edx-0x4e],0x9a
  40422d:	stc    
  40422e:	sar    DWORD PTR [ecx+0x3],1
  404231:	mov    dh,0x51
  404233:	test   DWORD PTR [eax],ebp
  404235:	fs nop
  404237:	lods   eax,DWORD PTR ds:[esi]
  404238:	loop   0x404228
  40423a:	int3   
  40423b:	stos   BYTE PTR es:[edi],al
  40423c:	scas   al,BYTE PTR es:[edi]
  40423d:	outs   dx,DWORD PTR ds:[esi]
  40423e:	mov    edi,0x94289ba0
  404243:	test   BYTE PTR [ebp+0x74b900d],0x5d
  40424a:	retf   0x1879
  40424d:	jmp    0x40424e
  40424f:	inc    edx
  404250:	stos   BYTE PTR es:[edi],al
  404251:	push   ebp
  404252:	cli    
  404253:	sar    DWORD PTR [ecx+edx*8+0x7783f7cc],0x3c
  40425b:	push   edi
  40425c:	mov    eax,DWORD PTR [eax+0x49]
  40425f:	pop    ss
  404260:	out    0xa9,al
  404262:	sbb    ebx,DWORD PTR [edi-0x8]
  404265:	inc    esp
  404266:	jmp    0x97bc:0x30fae447
  40426d:	jmp    0x97859161
  404272:	xor    eax,0x4e60dd2d
  404277:	into   
  404278:	popa   
  404279:	xor    DWORD PTR [ebx],edi
  40427b:	fiadd  DWORD PTR [eax+esi*1+0x5b328168]
  404282:	mov    ds:0x752e769e,eax
  404287:	jecxz  0x4042e5
  404289:	mov    WORD PTR [eax+edi*2+0x6e3307a1],fs
  404290:	fst    st(3)
  404292:	xchg   esp,eax
  404293:	mov    edi,0x55e5792
  404298:	les    ecx,FWORD PTR [ebx-0x3e24a5ba]
  40429e:	ret    
  40429f:	test   al,0xd
  4042a1:	sbb    eax,DWORD PTR [ebx-0x7f]
  4042a4:	icebp  
  4042a5:	mov    ecx,0x12cab4eb
  4042aa:	mov    ds:0x6b9c617,eax
  4042af:	mov    edi,0xc07b020b
  4042b4:	cdq    
  4042b5:	sti    
  4042b6:	push   0x28
  4042b8:	adc    al,0x24
  4042ba:	inc    edi
  4042bb:	aad    0x8f
  4042bd:	mov    ecx,DWORD PTR [ecx+0x49]
  4042c0:	lea    eax,[eax-0x6f]
  4042c3:	pop    esi
  4042c4:	pop    esi
  4042c5:	add    eax,0x352324d3
  4042ca:	push   0xa985cd42
  4042cf:	out    0x38,al
  4042d1:	fmul   DWORD PTR [edx]
  4042d3:	pop    ecx
  4042d4:	or     DWORD PTR [ebx-0x5d],eax
  4042d7:	fcom   DWORD PTR ds:0xcd10b20a
  4042dd:	retf   0xf5c
  4042e0:	sub    eax,0xc3a9cef0
  4042e5:	cmp    ch,BYTE PTR [ebp-0x5c]
  4042e8:	or     bh,BYTE PTR [ecx-0x4a]
  4042eb:	(bad)  
  4042ec:	mov    bh,0xde
  4042ee:	jmp    esp
  4042f0:	scas   al,BYTE PTR es:[edi]
  4042f1:	xor    cl,BYTE PTR [ecx+ebx*4+0x12d61d4e]
  4042f8:	loope  0x404331
  4042fa:	jns    0x40430e
  4042fc:	pop    es
  4042fd:	stc    
  4042fe:	push   eax
  4042ff:	add    BYTE PTR [ecx-0x21],cl
  404302:	scas   eax,DWORD PTR es:[edi]
  404303:	and    bl,ch
  404305:	aad    0x36
  404307:	fsubr  QWORD PTR [esi-0x79]
  40430a:	inc    edx
  40430b:	push   ebp
  40430c:	lock neg BYTE PTR [eax+0x1]
  404310:	test   eax,0xebda96cb
  404315:	and    eax,DWORD PTR [edx+edx*1-0x33]
  404319:	xchg   dh,al
  40431b:	mov    dh,0xc
  40431d:	xchg   ecx,eax
  40431e:	pop    eax
  40431f:	inc    eax
  404320:	mov    ah,0xb2
  404322:	mov    al,bh
  404324:	loop   0x4042e4
  404326:	stc    
  404327:	and    DWORD PTR [ebx-0x49],edi
  40432a:	cmp    dh,BYTE PTR [edi+0x2]
  40432d:	inc    edx
  40432e:	jo     0x4042db
  404330:	push   ebp
  404331:	lods   eax,DWORD PTR ds:[esi]
  404332:	and    esi,DWORD PTR [esi-0x45cbe58f]
  404338:	inc    ecx
  404339:	or     ch,BYTE PTR [esi]
  40433b:	repz xor eax,0x5cf31455
  404341:	test   al,0x65
  404343:	xor    bl,ah
  404345:	stos   DWORD PTR es:[edi],eax
  404346:	es sti 
  404348:	mov    dh,0xbd
  40434a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40434b:	pusha  
  40434c:	dec    edi
  40434d:	in     al,dx
  40434e:	into   
  40434f:	mov    edx,0xdd526246
  404354:	xchg   edi,eax
  404355:	mov    dh,0x14
  404357:	pushf  
  404358:	xor    ebp,DWORD PTR [ebx+0x65]
  40435b:	test   DWORD PTR [edi-0x3a],edx
  40435e:	call   DWORD PTR [esi-0x3d]
  404361:	ss and al,0xaa
  404364:	sbb    eax,0x2cbec132
  404369:	mov    ch,0x97
  40436b:	ficomp WORD PTR [eax-0x55]
  40436e:	icebp  
  40436f:	xchg   ebp,eax
  404370:	out    0x2,al
  404372:	pushf  
  404373:	shl    DWORD PTR [edx+0x22],1
  404376:	push   ebp
  404377:	push   0xf92d21d0
  40437c:	ss dec ebp
  40437e:	cmp    esi,ebx
  404380:	inc    edx
  404381:	(bad)  [edi]
  404383:	push   esp
  404384:	cmp    eax,0x4994daa4
  404389:	ins    BYTE PTR es:[edi],dx
  40438a:	lods   al,BYTE PTR ds:[esi]
  40438b:	sbb    ebp,esp
  40438d:	dec    esp
  40438e:	xchg   ebp,eax
  40438f:	or     DWORD PTR [eax+ebx*2],edi
  404392:	sub    DWORD PTR [esi],esp
  404394:	add    eax,0x7beddb33
  404399:	retf   
  40439a:	mov    ebx,0x519e3082
  40439f:	outs   dx,BYTE PTR ds:[esi]
  4043a0:	arpl   WORD PTR [esi+0x3ca7497e],bp
  4043a6:	sbb    al,0x60
  4043a8:	dec    eax
  4043a9:	adc    ebx,DWORD PTR [esi-0x68]
  4043ac:	or     DWORD PTR [ecx-0x68],ebp
  4043af:	sub    BYTE PTR [edi+0x7dfec287],0x84
  4043b6:	jne    0x404378
  4043b8:	sub    al,0x81
  4043ba:	push   ebp
  4043bb:	inc    edx
  4043bc:	add    bl,BYTE PTR [edx+0x43]
  4043bf:	sti    
  4043c0:	jp     0x404417
  4043c2:	(bad)  
  4043c3:	iret   
  4043c4:	push   edi
  4043c5:	pop    eax
  4043c6:	mov    esp,ebp
  4043c8:	mov    BYTE PTR [edi-0xa60ca63],bl
  4043ce:	jb     0x4043bd
  4043d0:	or     al,0xbc
  4043d3:	mov    ebp,0x1f76b171
  4043d8:	ss xchg esi,eax
  4043da:	add    eax,0x410a33dd
  4043df:	mov    WORD PTR [eax],ss
  4043e1:	nop
  4043e2:	xchg   edi,eax
  4043e3:	cmp    ecx,ebp
  4043e5:	shl    BYTE PTR [esi+0x2e],cl
  4043e8:	inc    edi
  4043e9:	lods   eax,DWORD PTR ds:[esi]
  4043ea:	retf   0x659
  4043ed:	sub    ecx,edx
  4043ef:	adc    BYTE PTR [edi],ah
  4043f1:	jae    0x4043f5
  4043f3:	lds    esp,FWORD PTR [ebx+0x64]
  4043f6:	hlt    
  4043f7:	in     al,dx
  4043f8:	sbb    bh,BYTE PTR [esi+edi*4-0x5d25cb78]
  4043ff:	xchg   BYTE PTR [ebp-0x2e],cl
  404402:	or     al,0xe8
  404404:	pop    ss
  404405:	mov    ds:0x1a31dcea,eax
  40440a:	sub    al,BYTE PTR [edx-0x6e51a3aa]
  404410:	jns    0x4043d1
  404412:	mov    ebp,DWORD PTR [esi]
  404414:	loope  0x404493
  404416:	jb     0x40444f
  404418:	push   eax
  404419:	add    BYTE PTR [ebx],0x2f
  40441c:	sbb    ecx,ecx
  40441e:	push   ecx
  40441f:	fidivr DWORD PTR [edx-0x5eef3f04]
  404425:	sbb    al,BYTE PTR [ecx+0x66]
  404428:	lds    ecx,FWORD PTR [esi]
  40442a:	xchg   edx,eax
  40442b:	dec    edx
  40442c:	cli    
  40442d:	clc    
  40442e:	pop    ebx
  40442f:	dec    edi
  404430:	cmp    al,BYTE PTR [esi+0x51]
  404433:	adc    eax,0x96fe6765
  404438:	pop    esi
  404439:	push   es
  40443a:	fadd   DWORD PTR [edx-0x5b651a50]
  404440:	dec    esp
  404441:	adc    esp,ebp
  404443:	ja     0x40444a
  404445:	cmp    BYTE PTR [edx-0x76],0x4c
  404449:	test   al,0x2c
  40444b:	xchg   esi,eax
  40444c:	mov    edi,0xc2920870
  404451:	ss mov cl,0xf9
  404454:	call   0x2edb13e1
  404459:	sahf   
  40445a:	dec    ebx
  40445b:	mov    edx,0x4fbfae83
  404460:	ret    
  404461:	arpl   WORD PTR [esi],si
  404463:	lahf   
  404464:	cdq    
  404465:	mov    dh,0x83
  404467:	push   esi
  404468:	mov    ds:0xa0ab3acf,eax
  40446d:	xchg   edi,eax
  40446e:	clc    
  40446f:	clc    
  404470:	adc    BYTE PTR [esp+edi*2],cl
  404473:	pop    ebx
  404474:	mov    cl,0xb9
  404476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404477:	jle    0x404451
  404479:	int    0x1f
  40447b:	xor    al,0x13
  40447d:	cli    
  40447e:	cmp    al,0x5b
  404480:	mov    bh,BYTE PTR es:[eax-0x2bccc459]
  404487:	or     al,0x1d
  404489:	dec    ebx
  40448a:	cs adc eax,0xf7ffebfc
  404490:	dec    esp
  404491:	addr16 mov ecx,0x1dfc31de
  404497:	and    al,0x62
  404499:	sbb    ebx,DWORD PTR [ecx+0x504e5b52]
  40449f:	cdq    
  4044a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a1:	xor    ch,BYTE PTR [edi]
  4044a3:	cmp    al,0x4c
  4044a5:	imul   BYTE PTR [ebx-0xe]
  4044a8:	aam    0xf
  4044aa:	fs and ah,ah
  4044ad:	daa    
  4044ae:	push   ss
  4044af:	sub    eax,0xaaa2d3
  4044b4:	lea    ebx,[eax]
  4044b6:	aam    0x27
  4044b8:	pushf  
  4044b9:	in     al,dx
  4044ba:	mov    edi,0xa6a629e3
  4044bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c0:	mov    edx,0x6f6cac4a
  4044c5:	ror    ebp,cl
  4044c7:	icebp  
  4044c8:	mov    eax,ds:0xb4d3c300
  4044cd:	out    0xb9,eax
  4044cf:	dec    ecx
  4044d0:	ret    0xdf75
  4044d3:	int    0x6
  4044d5:	sbb    BYTE PTR [eax+0xc],al
  4044d8:	or     al,0x4a
  4044da:	push   ecx
  4044db:	scas   al,BYTE PTR es:[edi]
  4044dc:	or     eax,0x67cbeae
  4044e1:	mov    ?,WORD PTR [eax]
  4044e3:	cwde   
  4044e4:	popa   
  4044e5:	mov    bh,0xc8
  4044e7:	in     eax,0x12
  4044e9:	sub    al,0xb2
  4044eb:	ret    
  4044ec:	ja     0x404564
  4044ee:	jge    0x40451c
  4044f0:	cmp    edi,eax
  4044f2:	push   cs
  4044f3:	pop    ds
  4044f4:	ret    
  4044f5:	sbb    esi,DWORD PTR [esi]
  4044f7:	imul   ecx,DWORD PTR [edi],0x31b39324
  4044fd:	int3   
  4044fe:	je     0x404572
  404500:	pop    ss
  404501:	or     al,0x2b
  404503:	xchg   ebx,eax
  404504:	xchg   BYTE PTR [esi-0x4a],dh
  404507:	and    ch,BYTE PTR [esi-0x1d]
  40450a:	cmp    BYTE PTR [edi],dh
  40450c:	push   0x6159e697
  404511:	mov    dl,0x62
  404513:	aad    0x7f
  404515:	dec    edx
  404516:	sub    ecx,DWORD PTR [edx+0x16b64875]
  40451c:	xchg   ebx,eax
  40451d:	les    ebx,FWORD PTR [ebx+0xd]
  404520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404521:	adc    dh,BYTE PTR [ebx]
  404523:	jmp    0x404565
  404525:	lds    ebx,FWORD PTR [edi]
  404527:	push   cs
  404528:	imul   esp,DWORD PTR fs:[esi+ecx*8+0x5c314afb],0x9b84bd76
  404534:	mov    ebx,0x489ef933
  404539:	inc    edx
  40453a:	pop    eax
  40453b:	mov    eax,0x38520f
  404540:	ss in  al,dx
  404542:	push   edx
  404543:	mov    bh,0x74
  404545:	mov    gs,WORD PTR [edx-0x5f649350]
  40454b:	jno    0x404522
  40454d:	mov    bl,0xb6
  40454f:	push   ebx
  404550:	ret    0xe919
  404553:	arpl   WORD PTR [eax+0x58],cx
  404556:	pop    ebp
  404557:	cmp    cl,bl
  404559:	and    DWORD PTR [ebp+ecx*8+0x54b4a39d],0xf7d3113f
  404564:	lods   eax,DWORD PTR ds:[esi]
  404565:	dec    eax
  404566:	jecxz  0x4045d0
  404568:	and    bl,BYTE PTR [eax*4-0x63b98d81]
  40456f:	les    edi,FWORD PTR [esi-0xd]
  404572:	jae    0x40451a
  404574:	sar    esp,cl
  404576:	in     al,0x18
  404578:	stos   BYTE PTR es:[edi],al
  404579:	add    BYTE PTR [edi+eax*1-0x9],ch
  40457d:	(bad)  
  40457e:	into   
  40457f:	aaa    
  404580:	or     ah,BYTE PTR [eax]
  404582:	icebp  
  404583:	pop    ebp
  404584:	adc    BYTE PTR [esi+0x23],0xff
  404588:	aam    0x30
  40458a:	mov    dl,0x42
  40458c:	dec    ecx
  40458d:	ret    0x8743
  404590:	dec    edi
  404591:	loopne 0x404588
  404593:	mov    ch,0x38
  404595:	ds mov edi,0x481409aa
  40459b:	sub    eax,0x3e2c2c7d
  4045a0:	jp     0x404614
  4045a2:	adc    DWORD PTR [edx+esi*2-0x14],esp
  4045a6:	jnp    0x404539
  4045a8:	xchg   esi,eax
  4045a9:	ror    BYTE PTR [edi-0x6ce9eee],0x8e
  4045b0:	push   esp
  4045b1:	push   esp
  4045b2:	int3   
  4045b3:	shr    DWORD PTR [eax],cl
  4045b5:	sub    al,0x8d
  4045b7:	fs xor al,0xeb
  4045ba:	cmp    al,0xb9
  4045bc:	add    al,0x4e
  4045be:	ins    BYTE PTR es:[edi],dx
  4045bf:	sbb    ah,ah
  4045c1:	cwde   
  4045c2:	pop    esp
  4045c3:	cmc    
  4045c4:	nop
  4045c5:	data16 aaa 
  4045c7:	lods   al,BYTE PTR ds:[esi]
  4045c8:	cmp    BYTE PTR [edi],0xa7
  4045cb:	mov    ecx,0x1fd5adda
  4045d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045d1:	xor    DWORD PTR [esi+0x79],0x57
  4045d5:	jb     0x4045dc
  4045d7:	sub    al,0x68
  4045d9:	sar    DWORD PTR [eax],1
  4045db:	push   edi
  4045dc:	icebp  
  4045dd:	repz popa 
  4045df:	sub    ch,BYTE PTR [eax+eiz*4+0x2414be5f]
  4045e6:	add    al,0xad
  4045e8:	xchg   ebx,eax
  4045e9:	mov    ds:0xcc9538bf,eax
  4045ee:	std    
  4045ef:	inc    edx
  4045f0:	xchg   ebx,eax
  4045f1:	xor    DWORD PTR [ecx+0x3d],esi
  4045f4:	inc    edx
  4045f5:	mov    ds:0xbf38843c,eax
  4045fa:	jbe    0x40463a
  4045fc:	dec    edi
  4045fd:	cmp    ebx,DWORD PTR [esi]
  4045ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404600:	fwait
  404601:	in     al,0xfe
  404603:	sbb    BYTE PTR [ebp+0x674d1dbc],bh
  404609:	sbb    dl,al
  40460b:	repz mov bl,0xde
  40460e:	clc    
  40460f:	iret   
  404610:	sbb    BYTE PTR [eax-0x74b800b7],ch
  404616:	popa   
  404617:	xchg   edx,eax
  404618:	fcomp  QWORD PTR [edi-0x15fe63e8]
  40461e:	inc    ebx
  40461f:	icebp  
  404620:	add    al,0xf6
  404622:	jno    0x404633
  404624:	arpl   WORD PTR ds:0xd2800aa0,cx
  40462a:	lea    ebx,[eax+0x74b5ebae]
  404630:	or     ebx,eax
  404632:	dec    ebp
  404633:	dec    esi
  404634:	aam    0x7b
  404636:	jg     0x40465a
  404638:	xchg   esi,eax
  404639:	popf   
  40463a:	add    al,0x95
  40463c:	daa    
  40463d:	mov    ecx,0xfb8b3f01
  404642:	push   0x44
  404644:	mov    DWORD PTR [ecx],0x24bbc22f
  40464a:	pop    edx
  40464b:	ret    
  40464c:	in     al,dx
  40464d:	push   esi
  40464e:	paddsb mm0,QWORD PTR [ecx+0x2]
  404652:	shl    BYTE PTR [ecx+edi*2],cl
  404655:	jp     0x4046cc
  404657:	xor    al,0x2c
  404659:	(bad)  [esp+eax*8-0x1ac03500]
  404660:	jle    0x4045fd
  404662:	add    edx,esp
  404664:	sub    DWORD PTR [edx-0x5f113b84],esp
  40466a:	jbe    0x4046de
  40466c:	mov    ecx,0xa082c784
  404671:	mov    ah,0xa4
  404673:	fnstenv [ebx+eiz*1]
  404676:	cmp    eax,0x3a5ffeac
  40467b:	shr    edx,0xc7
  40467e:	adc    BYTE PTR ds:[edx-0x3a29d6e6],dh
  404685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404686:	(bad)  
  404687:	push   edx
  404688:	icebp  
  404689:	jmp    0xfa878292
  40468e:	iret   
  40468f:	pop    ecx
  404690:	leave  
  404691:	ret    0x24cc
  404694:	pop    edi
  404695:	mov    DWORD PTR [ebx-0xb0ea7c1],ecx
  40469b:	icebp  
  40469c:	xor    bh,cl
  40469e:	enter  0x8a05,0x13
  4046a2:	fistp  DWORD PTR [eax+0x5436557]
  4046a8:	(bad)  
  4046a9:	aad    0x14
  4046ab:	xor    eax,0x84d5daf6
  4046b0:	std    
  4046b1:	div    BYTE PTR [edi-0x3b]
  4046b4:	es push edi
  4046b6:	stos   BYTE PTR es:[edi],al
  4046b7:	dec    edi
  4046b8:	push   ebp
  4046b9:	fadd   QWORD PTR [eax-0x2b]
  4046bc:	xor    ebp,DWORD PTR [edx]
  4046be:	pop    edi
  4046bf:	cdq    
  4046c0:	dec    eax
  4046c1:	xchg   DWORD PTR [ecx],edx
  4046c3:	cmp    eax,0x42827940
  4046c8:	sbb    dh,0xf
  4046cb:	icebp  
  4046cc:	adc    cl,bh
  4046ce:	(bad)  
  4046cf:	popa   
  4046d0:	fadd   st,st(6)
  4046d2:	loop   0x404717
  4046d4:	add    al,0xd
  4046d6:	jae    0x40474e
  4046d8:	and    DWORD PTR [ebp+0x56],edx
  4046db:	ret    0x9a4e
  4046de:	sbb    BYTE PTR fs:[eax],al
  4046e1:	sub    DWORD PTR [esi-0x6eb6dfea],ecx
  4046e7:	adc    dh,bh
  4046e9:	mov    al,BYTE PTR [edi+0x2fe6d38e]
  4046ef:	inc    ebx
  4046f0:	outs   dx,DWORD PTR ds:[esi]
  4046f1:	outs   dx,DWORD PTR ds:[esi]
  4046f2:	cdq    
  4046f3:	call   0x77a0:0xfc68af79
  4046fa:	lds    eax,FWORD PTR [eax-0x323e141d]
  404700:	stos   DWORD PTR es:[edi],eax
  404701:	popa   
  404702:	xchg   ebp,eax
  404703:	mov    ch,0x1
  404705:	vaddss xmm3,xmm3,xmm0
  404709:	out    dx,al
  40470a:	xchg   ebx,eax
  40470b:	push   es
  40470c:	mov    cl,0xba
  40470e:	loopne 0x40478d
  404710:	mov    bh,0x4f
  404712:	add    DWORD PTR [esi],esi
  404714:	imul   eax,DWORD PTR [ecx+edx*2+0x70],0xffffffac
  404719:	repnz jmp 0x82e6:0xf6ef004a
  404721:	xchg   edx,eax
  404722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404723:	scas   eax,DWORD PTR es:[edi]
  404724:	mov    BYTE PTR [edi+0x51],al
  404727:	cld    
  404728:	jl     0x40472c
  40472a:	or     al,0x4e
  40472c:	lock push cs
  40472e:	mov    ecx,0x416745d9
  404733:	cmp    eax,0x873079b3
  404738:	inc    ecx
  404739:	mov    eax,DWORD PTR [eax+0x6f0f1966]
  40473f:	mov    esp,0xd521645e
  404744:	fisttp DWORD PTR [esp+ebx*1]
  404747:	mov    WORD PTR [esi+0x34528d3],cs
  40474d:	lods   eax,DWORD PTR ds:[esi]
  40474e:	mov    ds:0xe2164917,eax
  404753:	adc    al,0xc5
  404755:	or     esi,edi
  404757:	icebp  
  404758:	outs   dx,BYTE PTR ds:[esi]
  404759:	mov    ah,0x17
  40475b:	rcr    BYTE PTR [esi+0x5c],1
  40475e:	and    dl,BYTE PTR [esi+0x77]
  404761:	or     ecx,DWORD PTR [ebp+0xe216509]
  404767:	test   DWORD PTR [edi+esi*1+0x67],ebp
  40476b:	and    al,0x90
  40476d:	popf   
  40476e:	adc    cl,0xea
  404771:	(bad)  [ecx+0x6491c3dd]
  404777:	sub    DWORD PTR [ebp+0x73],0x6c
  40477b:	scas   eax,DWORD PTR es:[edi]
  40477c:	fsub   QWORD PTR [edi-0x12]
  40477f:	xchg   ecx,eax
  404780:	pushf  
  404781:	sbb    bh,BYTE PTR [ecx+0x4446faa9]
  404787:	retf   0xa08
  40478a:	(bad)  [esi+edx*8+0x1afe5d54]
  404791:	mov    esp,0x2e819e20
  404796:	xchg   ebx,eax
  404797:	pop    ecx
  404798:	xchg   ecx,eax
  404799:	sbb    BYTE PTR [esi+0x13],al
  40479c:	dec    ebx
  40479d:	std    
  40479e:	pop    ebp
  40479f:	jne    0x40475e
  4047a1:	enter  0xac07,0x5d
  4047a5:	and    BYTE PTR [esi+0x5067339b],dh
  4047ab:	enter  0xb56,0x52
  4047af:	push   ebp
  4047b0:	and    edi,DWORD PTR ds:0x25e2a66b
  4047b6:	xor    al,0xba
  4047b8:	mov    BYTE PTR [ecx-0x294eece9],0xfb
  4047bf:	inc    esi
  4047c0:	ret    
  4047c1:	pushf  
  4047c2:	aam    0x89
  4047c4:	xor    al,0x2b
  4047c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c7:	xor    DWORD PTR [eax+0x43],esi
  4047ca:	leave  
  4047cb:	jle    0x4047a7
  4047cd:	dec    esp
  4047ce:	mov    BYTE PTR [ecx],dl
  4047d0:	mov    cl,0xd1
  4047d2:	(bad)  
  4047d3:	arpl   WORD PTR [ecx+ebx*1],dx
  4047d6:	adc    eax,0x5ff1a20b
  4047db:	fsub   QWORD PTR [ecx-0x20]
  4047de:	retf   
  4047df:	imul   eax,eax,0x73a6595b
  4047e5:	xchg   DWORD PTR [ebx-0x3379bb0b],eax
  4047eb:	or     al,BYTE PTR [eax-0x42df094d]
  4047f1:	mov    eax,0x62d9f7fb
  4047f6:	and    ecx,ebp
  4047f8:	cmp    DWORD PTR [ebx],0x407b5445
  4047fe:	sar    BYTE PTR [ebp-0x5341f928],0x18
  404805:	xor    ecx,DWORD PTR [ebp-0x765d440]
  40480b:	inc    edi
  40480c:	ficom  WORD PTR [ecx+esi*8-0x73cfc254]
  404813:	dec    ebp
  404814:	mov    WORD PTR [eax+esi*8+0x21f773b2],es
  40481b:	call   0x607a:0xe855308e
  404822:	shl    BYTE PTR [ebp+0x1f2503c0],0x12
  404829:	callw  0xc976
  40482d:	inc    esp
  40482e:	push   ebx
  40482f:	mov    ebp,0xb59ca2c7
  404834:	das    
  404835:	sbb    cl,al
  404837:	(bad)  
  404838:	push   edx
  404839:	cmp    BYTE PTR [edi],0xef
  40483c:	out    0x2f,eax
  40483e:	jmp    0x2dd5:0xdf60869a
  404845:	fistp  DWORD PTR [ebp-0x1]
  404848:	in     al,dx
  404849:	call   0xb45e:0x5d79793
  404850:	pop    edx
  404851:	or     eax,0x52abe24f
  404856:	cli    
  404857:	inc    ebx
  404858:	xchg   ch,ah
  40485a:	fidiv  WORD PTR [esi]
  40485c:	push   esi
  40485d:	push   edx
  40485e:	in     al,0x82
  404860:	dec    ecx
  404861:	xor    DWORD PTR [eax+ebp*2],0xa1850ca7
  404868:	hlt    
  404869:	or     al,0x48
  40486b:	adc    esi,DWORD PTR [esi+0x2e]
  40486e:	call   0xd86b6e27
  404873:	sbb    eax,0x8ac8454b
  404878:	sub    ch,BYTE PTR [ebx]
  40487a:	or     al,0x7e
  40487c:	pop    eax
  40487d:	jb     0x4048d6
  40487f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404880:	dec    esi
  404881:	adc    eax,0xb9266e2a
  404886:	mov    eax,0xef4235a1
  40488b:	jne    0x404906
  40488d:	mov    ebx,0x25294702
  404892:	sbb    al,0x3e
  404894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404895:	ret    0x2b8e
  404898:	lahf   
  404899:	retf   
  40489a:	je     0x404871
  40489c:	addr16 sub cl,ah
  40489f:	scas   eax,DWORD PTR es:[edi]
  4048a0:	jmp    0x4048af
  4048a2:	or     BYTE PTR [ebx-0x410452a5],ch
  4048a8:	jg     0x404914
  4048aa:	sahf   
  4048ab:	shl    edi,0xc0
  4048ae:	push   ss
  4048af:	popa   
  4048b0:	pop    edx
  4048b1:	lods   al,BYTE PTR ds:[esi]
  4048b2:	in     al,0x62
  4048b4:	mov    bl,0x91
  4048b6:	out    0x4e,al
  4048b8:	or     al,0xe3
  4048ba:	push   esi
  4048bb:	or     DWORD PTR [edx-0x5592f989],ebp
  4048c1:	sbb    esp,DWORD PTR [eax+0x1a4afe73]
  4048c7:	bound  eax,QWORD PTR [ebx]
  4048c9:	clc    
  4048ca:	nop
  4048cb:	mov    esp,0x80c327c6
  4048d0:	shl    dh,1
  4048d2:	inc    edx
  4048d3:	or     BYTE PTR ds:0xcbec56f2,bl
  4048d9:	aam    0x57
  4048db:	ja     0x4048b2
  4048dd:	jg     0x404902
  4048df:	xchg   edi,esi
  4048e1:	dec    edx
  4048e2:	ins    BYTE PTR es:[edi],dx
  4048e3:	mov    bl,0x7a
  4048e5:	das    
  4048e6:	arpl   WORD PTR [esi],sp
  4048e8:	pop    esi
  4048e9:	pushf  
  4048ea:	out    0x80,eax
  4048ec:	inc    edi
  4048ed:	and    DWORD PTR [ebx+0x38c07034],0x1b
  4048f4:	out    0x7c,eax
  4048f6:	cld    
  4048f7:	xchg   esi,eax
  4048f8:	loop   0x40493b
  4048fa:	dec    edx
  4048fb:	ins    BYTE PTR es:[edi],dx
  4048fc:	adc    BYTE PTR [eax+0x5d52afc9],0x93
  404903:	test   DWORD PTR [esi],ebx
  404905:	dec    eax
  404906:	mov    cl,0x61
  404908:	fst    st(0)
  40490a:	jmp    0xfad8f1e0
  40490f:	aas    
  404910:	or     DWORD PTR [esi+0x7f],ecx
  404913:	or     dl,BYTE PTR [ebx+0x68cc333d]
  404919:	fidivr WORD PTR [ecx]
  40491b:	jmp    0xef4124a1
  404920:	pusha  
  404921:	jmp    0x40495a
  404923:	dec    esi
  404924:	xor    bh,BYTE PTR [eax-0x21]
  404927:	or     BYTE PTR [esi],0x24
  40492a:	ds inc edi
  40492c:	xchg   ecx,eax
  40492d:	push   esp
  40492e:	push   es
  40492f:	nop
  404930:	push   ecx
  404931:	pop    ds
  404932:	and    DWORD PTR [ebp+0x6d],ebp
  404935:	in     eax,dx
  404936:	repz cmp eax,DWORD PTR [ebx-0x37]
  40493a:	(bad)  
  40493c:	in     eax,dx
  40493d:	out    0xf0,al
  40493f:	(bad)  
  404940:	aaa    
  404941:	out    0x58,al
  404943:	outs   dx,DWORD PTR ds:[esi]
  404944:	lahf   
  404945:	push   cs
  404946:	ja     0x4048cd
  404948:	fwait
  404949:	mov    dh,0x3e
  40494b:	sub    bl,dl
  40494d:	popa   
  40494e:	cli    
  40494f:	pop    ecx
  404950:	jmp    0x404913
  404952:	and    al,0x7a
  404954:	pop    ebx
  404955:	retf   0x2e57
  404958:	sahf   
  404959:	scas   al,BYTE PTR es:[edi]
  40495a:	xchg   BYTE PTR [ebp-0x29c7e406],al
  404960:	enter  0xc54b,0xbb
  404964:	sub    al,0x75
  404966:	rcr    DWORD PTR [edx+0x3aa29ada],0x5a
  40496d:	xchg   dh,cl
  40496f:	(bad)  
  404970:	pop    ebp
  404971:	fisubr DWORD PTR [eax]
  404973:	dec    ebx
  404974:	aas    
  404975:	jge    0x4049eb
  404977:	(bad)  
  404978:	int    0xe1
  40497a:	fsubr  st(3),st
  40497c:	scas   eax,DWORD PTR es:[edi]
  40497d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497e:	pop    edx
  40497f:	xor    al,0xe7
  404981:	aas    
  404982:	add    al,al
  404984:	fisttp QWORD PTR [ecx]
  404986:	inc    ecx
  404987:	jnp    0x404972
  404989:	and    esp,ebx
  40498b:	cmp    eax,0x602104d9
  404990:	xchg   BYTE PTR [ebx],ah
  404992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404993:	adc    eax,edi
  404995:	mov    al,ds:0xd886b940
  40499a:	mov    dh,0xc0
  40499c:	loop   0x404929
  40499e:	test   DWORD PTR [edi+0xe5936e0],eax
  4049a4:	fcmovnbe st,st(0)
  4049a6:	test   eax,0x3e311467
  4049ab:	push   0x5f938875
  4049b0:	ja     0x4049d2
  4049b2:	sti    
  4049b3:	iret   
  4049b4:	mov    edx,0xa9910810
  4049b9:	sbb    eax,0x963c2d16
  4049be:	arpl   WORD PTR ds:0x59669e54,cx
  4049c4:	sub    eax,0x83f53e58
  4049c9:	outs   dx,BYTE PTR ds:[esi]
  4049ca:	mov    edx,0x8938484d
  4049cf:	rcl    dh,1
  4049d1:	into   
  4049d2:	je     0x4049db
  4049d4:	or     al,0xe9
  4049d6:	ss data16 adc al,0x1e
  4049da:	jns    0x4049a6
  4049dc:	cs pop es
  4049de:	xor    eax,0x220c09aa
  4049e3:	inc    esi
  4049e4:	cmp    al,0x89
  4049e6:	push   edi
  4049e7:	icebp  
  4049e8:	push   0xffffffb9
  4049ea:	jg     0x4049f7
  4049ec:	(bad)  
  4049ee:	dec    ebp
  4049ef:	cs in  eax,0x53
  4049f2:	jmp    0x83ca:0xa2f8a110
  4049f9:	loope  0x4049ed
  4049fb:	mov    cl,0xad
  4049fd:	ret    
  4049fe:	mov    WORD PTR [ebp+ecx*2+0x29a52697],fs
  404a05:	dec    ebx
  404a06:	jo     0x404a4c
  404a08:	sbb    DWORD PTR [edi],ebp
  404a0a:	retf   0xc623
  404a0d:	and    esp,DWORD PTR [ecx+0x6c]
  404a10:	iret   
  404a11:	pop    esi
  404a12:	nop
  404a13:	dec    ebx
  404a14:	retf   
  404a15:	fild   WORD PTR [edx]
  404a17:	push   ebp
  404a18:	sbb    al,0x6e
  404a1a:	scas   al,BYTE PTR es:[edi]
  404a1b:	mov    ch,0x2b
  404a1d:	into   
  404a1e:	sbb    DWORD PTR [ecx+0x72b0b891],edx
  404a24:	cld    
  404a25:	rol    BYTE PTR [edx],cl
  404a27:	(bad)  
  404a28:	sbb    dl,BYTE PTR [ebp+eax*4-0x32]
  404a2c:	fild   WORD PTR [edi-0x29]
  404a2f:	push   ds
  404a30:	icebp  
  404a31:	xchg   DWORD PTR [ecx],edi
  404a33:	xchg   ecx,eax
  404a34:	sub    al,0x9a
  404a36:	mov    cl,0x8b
  404a38:	xor    ah,BYTE PTR [ecx+edx*8+0x19]
  404a3c:	pop    eax
  404a3d:	aam    0x2a
  404a3f:	add    DWORD PTR [ebx],esi
  404a41:	cmc    
  404a42:	mov    dl,0xb8
  404a44:	adc    bh,ch
  404a46:	push   0x28
  404a48:	dec    edx
  404a49:	xchg   esp,eax
  404a4a:	sub    cl,bl
  404a4c:	jb     0x404ab4
  404a4e:	lea    edx,[ebx+eiz*8]
  404a51:	xor    dl,ah
  404a53:	dec    edx
  404a54:	icebp  
  404a55:	fld    TBYTE PTR [ebp+0x45c22120]
  404a5b:	das    
  404a5c:	pop    ecx
  404a5d:	je     0x404a2e
  404a5f:	add    eax,0x17ff19dd
  404a64:	push   esp
  404a65:	or     ah,cl
  404a67:	setne  ch
  404a6a:	sti    
  404a6b:	fisttp WORD PTR [edi+edi*8-0x50]
  404a6f:	lea    edi,[ecx+edx*2]
  404a72:	popf   
  404a73:	cmp    BYTE PTR [edi+0x523d337d],bl
  404a79:	xchg   ecx,eax
  404a7a:	adc    al,cl
  404a7c:	xor    ebp,DWORD PTR [eax+0x3fa91c25]
  404a82:	cwde   
  404a83:	das    
  404a84:	(bad)  [edx-0x7b]
  404a87:	add    eax,0xe3b500e3
  404a8c:	in     al,0x21
  404a8e:	jl     0x404aa8
  404a90:	and    cl,BYTE PTR [edi+0x31342861]
  404a96:	push   esp
  404a97:	add    dl,ah
  404a99:	push   ebx
  404a9a:	xlat   BYTE PTR ds:[ebx]
  404a9b:	lods   al,BYTE PTR ds:[esi]
  404a9c:	(bad)  
  404a9d:	stc    
  404a9e:	dec    edx
  404a9f:	or     ah,al
  404aa1:	mov    edi,0x47931c1d
  404aa6:	inc    ebx
  404aa7:	push   esi
  404aa8:	mov    eax,0x97e213d3
  404aad:	or     al,0x1
  404aaf:	cld    
  404ab0:	fwait
  404ab1:	xor    DWORD PTR [ebp-0x4b617a90],eax
  404ab7:	jg     0x404a7f
  404ab9:	test   al,0x17
  404abb:	sbb    al,0xc9
  404abd:	sbb    BYTE PTR cs:[edx+0x26],bl
  404ac1:	outs   dx,DWORD PTR ds:[esi]
  404ac2:	jg     0x404a4a
  404ac4:	sbb    al,0xdd
  404ac6:	into   
  404ac7:	shl    DWORD PTR [ecx-0x5be650fb],1
  404acd:	test   eax,0xc785c10e
  404ad2:	xchg   ebx,eax
  404ad3:	add    eax,0x8dc0462d
  404ad8:	push   0x12
  404ada:	mov    al,0x45
  404adc:	fwait
  404add:	mov    bh,0xe2
  404adf:	jl     0x404b2e
  404ae1:	xor    al,0xf
  404ae3:	inc    edx
  404ae4:	adc    BYTE PTR [edx+0x6f],al
  404ae7:	cwde   
  404ae8:	mov    bh,0x39
  404aeb:	or     eax,0x8ce357b4
  404af0:	jge    0x404b26
  404af2:	jmp    0xf301:0x778ee6e6
  404af9:	xchg   edx,eax
  404afa:	bound  ecx,QWORD PTR [esi]
  404afc:	out    0x5,al
  404afe:	mov    cl,0xe1
  404b00:	sub    ch,BYTE PTR [ebx-0x53c7bbe4]
  404b06:	add    dh,dh
  404b08:	pop    edx
  404b09:	pop    es
  404b0a:	fcom   DWORD PTR [ecx-0x1eba57d1]
  404b10:	fld    QWORD PTR [eax+0x711907be]
  404b16:	scas   eax,DWORD PTR es:[edi]
  404b17:	stc    
  404b18:	into   
  404b19:	or     al,0xb8
  404b1b:	mov    dl,0x16
  404b1d:	xchg   esi,eax
  404b1e:	imul   esp,DWORD PTR [edx+0x2b],0xef267bc7
  404b25:	adc    bl,0x2a
  404b28:	retf   0x428d
  404b2b:	cmp    DWORD PTR [ebx-0x11270263],eax
  404b31:	outs   dx,BYTE PTR ds:[esi]
  404b32:	shr    DWORD PTR [ebp+0x3cb73ef9],cl
  404b38:	pop    eax
  404b39:	xor    DWORD PTR [ecx+0x619ab99c],eax
  404b3f:	and    al,0x1e
  404b41:	dec    esi
  404b42:	push   esi
  404b43:	iret   
  404b44:	fstp   DWORD PTR [ecx-0x665b65de]
  404b4a:	mov    ebp,0xc83c807d
  404b4f:	cmp    edi,edi
  404b51:	bound  edx,QWORD PTR [ecx-0x7afbef67]
  404b57:	jo     0x404b25
  404b59:	sbb    dl,BYTE PTR [ecx-0x3d]
  404b5c:	fisubr WORD PTR [ebp+0x558f62d8]
  404b62:	fsubrp st(7),st
  404b64:	jg     0x404b64
  404b66:	push   ss
  404b67:	adc    esp,eax
  404b69:	dec    ecx
  404b6a:	mov    eax,0x78e9511b
  404b6f:	pop    ds
  404b70:	js     0x404b80
  404b72:	ficomp DWORD PTR [ebp-0x47]
  404b75:	(bad)  
  404b76:	mov    al,0xb9
  404b78:	rcr    BYTE PTR [ecx+0x6f2d0fd5],1
  404b7e:	arpl   WORD PTR [eax],ax
  404b80:	pop    ebx
  404b81:	push   edi
  404b82:	in     al,0xb9
  404b84:	(bad)  
  404b85:	test   al,0xcc
  404b87:	pusha  
  404b88:	mov    ah,0x7b
  404b8a:	stc    
  404b8b:	pop    ebx
  404b8c:	ret    
  404b8d:	adc    eax,0x6bda9788
  404b92:	fwait
  404b93:	or     edx,esi
  404b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b96:	mov    dh,0x13
  404b98:	add    DWORD PTR [edx+0xa],ebp
  404b9b:	ins    DWORD PTR es:[edi],dx
  404b9c:	mov    ebx,0xadfe3000
  404ba1:	dec    esi
  404ba2:	mov    ebx,0xf369c8da
  404ba7:	jp     0x404c10
  404ba9:	mov    ds:0x83ffa0e9,al
  404bae:	fnstsw WORD PTR [ecx+0x23908f27]
  404bb4:	fadd   QWORD PTR [edi-0x168e5914]
  404bba:	inc    esp
  404bbb:	out    0x40,eax
  404bbd:	dec    ecx
  404bbe:	mov    edx,0x87a6b947
  404bc3:	add    ah,dl
  404bc5:	jmp    0x1a72:0x78bd2e5a
  404bcc:	dec    esi
  404bcd:	xchg   bl,dh
  404bcf:	int    0xb6
  404bd1:	iret   
  404bd2:	lods   eax,DWORD PTR ds:[esi]
  404bd3:	(bad)  
  404bd4:	int3   
  404bd5:	fistp  QWORD PTR [edi]
  404bd7:	mov    esp,0x45d8929a
  404bdc:	out    dx,eax
  404bdd:	inc    eax
  404bde:	test   eax,0xd28a47f3
  404be3:	aaa    
  404be4:	fwait
  404be5:	mov    ds:0xc475ed81,al
  404bea:	add    DWORD PTR [edx-0x53],ebp
  404bed:	dec    esp
  404bee:	pop    ecx
  404bef:	inc    ecx
  404bf0:	gs inc esi
  404bf2:	and    esi,ecx
  404bf4:	sub    dl,BYTE PTR [eax-0x48]
  404bf7:	push   ecx
  404bf8:	mov    eax,ds:0xcb5079e6
  404bfd:	popf   
  404bfe:	pusha  
  404bff:	push   esp
  404c00:	jo     0x404c43
  404c02:	out    dx,eax
  404c03:	lods   eax,DWORD PTR ds:[esi]
  404c04:	mov    esi,0x8fc9021
  404c09:	pop    ds
  404c0a:	add    DWORD PTR [edx+0x18],ebx
  404c0d:	xchg   DWORD PTR gs:[edx+ebx*4+0x30],esp
  404c12:	dec    edx
  404c13:	inc    ebp
  404c14:	add    edx,DWORD PTR [esi]
  404c16:	jmp    esp
  404c18:	fcom   QWORD PTR [esi]
  404c1a:	addr16 arpl ax,dx
  404c1d:	(bad)  
  404c1e:	addr16 inc esi
  404c20:	cmp    ebp,ebx
  404c22:	neg    DWORD PTR [edx+0x33]
  404c25:	or     edi,DWORD PTR [esi]
  404c27:	ret    0xc365
  404c2a:	xchg   esi,eax
  404c2b:	gs (bad) 
  404c2d:	and    eax,0x61663500
  404c32:	in     al,0xa6
  404c34:	nop
  404c35:	jo     0x404c8b
  404c37:	sti    
  404c38:	shl    BYTE PTR [edi+0x5b],0xd9
  404c3c:	jge    0x404c96
  404c3e:	pop    es
  404c3f:	cmp    al,0x3a
  404c41:	and    esi,eax
  404c43:	add    BYTE PTR [esp+edi*8],0xdc
  404c47:	in     al,dx
  404c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c49:	mov    WORD PTR [eax-0x3e4e366c],fs
  404c4f:	sbb    esp,DWORD PTR [esi]
  404c51:	push   0xffffffb0
  404c53:	jb     0x404c8b
  404c55:	je     0x404c94
  404c57:	push   edi
  404c58:	fmul   DWORD PTR [eax]
  404c5a:	andnps xmm6,XMMWORD PTR [edi-0x17173e3c]
  404c61:	sbb    DWORD PTR [eax-0x19ba6b89],esp
  404c67:	and    BYTE PTR [edi],al
  404c69:	jecxz  0x404c6f
  404c6b:	mov    dh,0x59
  404c6d:	sbb    cl,al
  404c6f:	add    al,0x49
  404c71:	adc    DWORD PTR [ecx-0x4168b379],eax
  404c77:	scas   al,BYTE PTR es:[edi]
  404c78:	pop    ebp
  404c79:	popa   
  404c7a:	dec    ebx
  404c7b:	mov    al,ds:0x8a607693
  404c80:	jno    0x404c3b
  404c82:	test   BYTE PTR [esi+0x62],dl
  404c85:	call   0x7031766f
  404c8a:	mov    ebx,0x2fdeb7bd
  404c8f:	cmp    cl,BYTE PTR [esi]
  404c91:	sbb    bh,cl
  404c93:	push   eax
  404c94:	jl     0x404c41
  404c96:	cdq    
  404c97:	mov    edx,0x83455ff9
  404c9c:	xchg   esp,eax
  404c9d:	das    
  404c9e:	stos   BYTE PTR es:[edi],al
  404c9f:	mov    bl,0x49
  404ca1:	in     al,0x60
  404ca3:	push   esp
  404ca4:	fmul   st(1),st
  404ca6:	pushf  
  404ca7:	scas   eax,DWORD PTR es:[edi]
  404ca8:	jmp    0x404c7d
  404caa:	loope  0x404c77
  404cac:	retf   
  404cad:	dec    edi
  404cae:	push   edx
  404caf:	xchg   eax,edi
  404cb1:	jne    0x404cb7
  404cb3:	mov    ds:0x918fb6c5,eax
  404cb8:	add    DWORD PTR [ecx+0x265668d1],edi
  404cbe:	(bad)  
  404cbf:	sub    DWORD PTR [eax-0x723dac1d],ecx
  404cc5:	pop    es
  404cc6:	sti    
  404cc7:	sub    esp,DWORD PTR [edx+edi*4-0x2fcc3923]
  404cce:	sub    al,0x19
  404cd0:	fistp  DWORD PTR [eax+0x36d5e779]
  404cd6:	fidivr WORD PTR ds:0x120f2d6
  404cdc:	int    0xfe
  404cde:	loope  0x404ce7
  404ce0:	push   esi
  404ce1:	pop    es
  404ce2:	xor    eax,0xfa535450
  404ce7:	and    eax,0xbc64298
  404cec:	and    DWORD PTR [esi-0x17aa4a5a],edx
  404cf2:	call   0x3259c0a0
  404cf7:	xchg   dl,ch
  404cf9:	imul   ecx,DWORD PTR [eax+edi*4-0x5d5891bb],0x3d
  404d01:	pop    edx
  404d02:	lahf   
  404d03:	push   esi
  404d04:	sub    BYTE PTR [esi+eax*1+0x55601db6],0x89
  404d0c:	xchg   ebx,eax
  404d0d:	(bad)  
  404d0e:	mov    WORD PTR [edx+0x61],ss
  404d11:	mov    eax,0xded9570f
  404d16:	mov    esp,0xa4aae39e
  404d1b:	shl    DWORD PTR [eax+eiz*8+0x6f],1
  404d1f:	popf   
  404d20:	outs   dx,BYTE PTR ds:[esi]
  404d21:	loope  0x404d7e
  404d23:	and    BYTE PTR [edi-0x2],cl
  404d26:	std    
  404d27:	mov    eax,0x76463415
  404d2c:	mov    es,WORD PTR [ecx]
  404d2e:	mov    edi,0xc60f6c25
  404d33:	cmp    al,0xc6
  404d35:	retf   
  404d36:	pop    esi
  404d37:	mov    eax,es:0x9418adaa
  404d3d:	mov    esp,0x313094f3
  404d42:	inc    esi
  404d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d44:	push   ebx
  404d45:	adc    esp,DWORD PTR es:[eax]
  404d48:	das    
  404d49:	rcr    BYTE PTR [edi-0xf],cl
  404d4c:	loopne 0x404d68
  404d4e:	test   DWORD PTR [ecx+0x43],ebx
  404d51:	adc    ebp,DWORD PTR [esi]
  404d53:	push   bx
  404d55:	icebp  
  404d56:	or     eax,DWORD PTR [edi-0x2f]
  404d59:	repnz pop esp
  404d5b:	lods   eax,DWORD PTR ds:[esi]
  404d5c:	xchg   DWORD PTR [ebp+ecx*1-0x7a15a94c],ebp
  404d63:	lods   al,BYTE PTR ds:[esi]
  404d64:	inc    esp
  404d65:	jl     0x404dc6
  404d67:	aad    0xcd
  404d69:	xchg   ebp,eax
  404d6a:	add    DWORD PTR [edi+eax*2],esp
  404d6d:	mov    edi,0x91b26a6e
  404d72:	adc    eax,0x3de3233f
  404d77:	adc    edx,DWORD PTR [ecx-0x4e2006d4]
  404d7d:	(bad)  
  404d7e:	call   0x3e33:0xb3bc8901
  404d85:	loop   0x404da1
  404d87:	cmovle esp,DWORD PTR [ebx+ebx*2]
  404d8b:	and    BYTE PTR [eax],0x60
  404d8e:	add    ebp,ecx
  404d90:	repz test eax,0x67cb6e32
  404d96:	xchg   edi,eax
  404d97:	push   cs
  404d98:	mov    ecx,0x5b057687
  404d9d:	sbb    bh,BYTE PTR ds:0xac469050
  404da3:	xlat   BYTE PTR ds:[ebx]
  404da4:	aam    0xd0
  404da6:	sahf   
  404da7:	hlt    
  404da8:	scas   al,BYTE PTR es:[edi]
  404da9:	inc    ebx
  404daa:	mov    eax,0x85b4794
  404daf:	jae    0x404d9e
  404db1:	lea    esi,[ebp+0x1f]
  404db4:	dec    edi
  404db5:	xchg   edx,eax
  404db6:	adc    ebp,DWORD PTR [edi]
  404db8:	xchg   esi,eax
  404db9:	inc    ebx
  404dba:	mov    bl,0xef
  404dbc:	sub    eax,0x95006820
  404dc1:	xchg   edi,eax
  404dc2:	cmp    eax,0x190efa7
  404dc7:	jo     0x404e2d
  404dc9:	add    eax,0x207dc188
  404dce:	inc    ebx
  404dcf:	mov    eax,ds:0x43b12afd
  404dd4:	cmp    dl,al
  404dd6:	js     0x404e26
  404dd8:	shr    DWORD PTR [esi-0x11ec492e],cl
  404dde:	call   0x2b6c385f
  404de3:	sbb    cl,BYTE PTR [edx*8-0x47b0e88a]
  404dea:	jb     0x404de5
  404dec:	mov    ah,0x23
  404dee:	test   al,0x46
  404df0:	cmp    DWORD PTR [eax],edi
  404df2:	xor    bh,BYTE PTR [ecx]
  404df4:	fdivr  QWORD PTR [esi+edi*2+0x58]
  404df8:	dec    edx
  404df9:	in     al,dx
  404dfa:	push   0x77338a49
  404dff:	push   esi
  404e00:	aaa    
  404e01:	icebp  
  404e02:	pop    esp
  404e03:	test   BYTE PTR [esi+0x1f88f3e8],ah
  404e09:	test   DWORD PTR [eax],edx
  404e0b:	lods   eax,DWORD PTR ds:[esi]
  404e0c:	loope  0x404e6c
  404e0e:	push   ds
  404e0f:	ins    BYTE PTR es:[edi],dx
  404e10:	xchg   ebx,eax
  404e11:	ds jo  0x404dfd
  404e14:	pop    ebx
  404e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e16:	call   0xf5c46249
  404e1b:	add    cl,BYTE PTR [esi+ecx*1]
  404e1e:	jbe    0x404e0b
  404e20:	push   edi
  404e21:	mov    al,0xc2
  404e23:	or     al,0x10
  404e25:	out    dx,al
  404e26:	fimul  DWORD PTR [ebp-0x7531e05a]
  404e2c:	gs aas 
  404e2e:	(bad)  
  404e2f:	imul   edi,DWORD PTR [edi+ecx*1+0x702612fb],0xe4510f8
  404e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e3b:	jb     0x404e37
  404e3d:	lock and edi,esp
  404e40:	sbb    eax,0xc3e390d3
  404e45:	adc    al,BYTE PTR [edx-0x2047b8d7]
  404e4b:	pop    esi
  404e4c:	mov    esp,0x8d365be
  404e51:	dec    edx
  404e52:	lds    eax,FWORD PTR [ebx]
  404e54:	mov    ah,0xdf
  404e56:	adc    BYTE PTR [ecx],0x76
  404e59:	jp     0x404ea4
  404e5b:	jnp    0x404e9d
  404e5d:	mov    ?,WORD PTR [eax-0xd1c93e0]
  404e63:	and    BYTE PTR [edi],bl
  404e65:	pop    edi
  404e66:	mov    ebx,0x5c09e3bf
  404e6b:	lea    esi,[ebx-0x55]
  404e6e:	jno    0x404e05
  404e70:	inc    ecx
  404e71:	mov    dh,0x1a
  404e73:	retf   
  404e74:	hlt    
  404e75:	jb     0x404e0e
  404e77:	ror    BYTE PTR [esp+eax*1-0x79],cl
  404e7b:	cmp    ch,al
  404e7d:	dec    ebp
  404e7e:	or     ah,BYTE PTR [edx-0x52e77051]
  404e84:	idiv   BYTE PTR [esi-0x248d0c4f]
  404e8a:	test   al,0xea
  404e8c:	test   al,0x66
  404e8e:	mov    ah,dh
  404e90:	ss dec esp
  404e92:	jbe    0x404e93
  404e94:	sub    ah,BYTE PTR [eax]
  404e96:	push   ss
  404e97:	loop   0x404ebf
  404e99:	out    0xa4,al
  404e9b:	or     eax,0x2796b06d
  404ea0:	cmp    eax,ebx
  404ea2:	jmp    0x404eb1
  404ea4:	iret   
  404ea5:	mov    ch,0x1b
  404ea7:	push   es
  404ea8:	pop    edi
  404ea9:	or     ah,BYTE PTR [ecx+0x12]
  404eac:	stos   DWORD PTR es:[edi],eax
  404ead:	push   es
  404eae:	xchg   ebx,eax
  404eaf:	pop    edx
  404eb0:	adc    al,0xdc
  404eb2:	mov    ebp,ebp
  404eb4:	call   0xb60c:0x75223b51
  404ebb:	or     bl,BYTE PTR [ebx-0x2c4e3f65]
  404ec1:	pop    es
  404ec2:	repz inc esi
  404ec4:	jmp    0x5c54b3a1
  404ec9:	cwde   
  404eca:	pushf  
  404ecb:	jge    0x404ead
  404ecd:	sub    BYTE PTR [ecx+eiz*4],bl
  404ed0:	inc    DWORD PTR [esi+0x3d]
  404ed3:	aas    
  404ed4:	mov    ebx,0xb563ca3b
  404ed9:	dec    ebx
  404eda:	cmp    DWORD PTR [ecx+0x83432ee],0xffffffab
  404ee1:	mov    ecx,0x4b4a0264
  404ee6:	sub    esi,DWORD PTR [esi-0x2ce0e039]
  404eec:	cmp    esi,DWORD PTR [ebx-0x36]
  404eef:	aam    0x68
  404ef1:	rol    DWORD PTR [edx-0x2bc5ef41],cl
  404ef7:	pop    es
  404ef8:	sub    eax,0x9267bc4a
  404efd:	push   ss
  404efe:	jge    0x404f77
  404f00:	inc    esp
  404f01:	push   0x8830339a
  404f06:	sahf   
  404f07:	setg   BYTE PTR [eax+0x7c39486f]
  404f0e:	sahf   
  404f0f:	icebp  
  404f10:	cmp    ch,BYTE PTR [esi-0x21]
  404f13:	adc    edi,0x6665963b
  404f19:	iret   
  404f1a:	outs   dx,BYTE PTR ds:[esi]
  404f1b:	or     cl,BYTE PTR [edi+0x44]
  404f1e:	cmp    al,0x2c
  404f20:	mov    ds:0x2be9b449,al
  404f25:	pop    ecx
  404f26:	xchg   ecx,eax
  404f27:	cmp    eax,DWORD PTR [ebp-0x39]
  404f2a:	add    ch,bl
  404f2c:	fist   WORD PTR [edi+0x2cea5e76]
  404f32:	out    0x22,al
  404f34:	lock mul bl
  404f37:	sub    al,cl
  404f39:	and    eax,0x2dd70119
  404f3e:	sbb    eax,0xf783a05f
  404f43:	mov    dh,0xa9
  404f45:	mov    edi,0xe48d8f1
  404f4a:	jae    0x404f0d
  404f4c:	rol    BYTE PTR [edx],cl
  404f4e:	repz sub DWORD PTR [ebp+0xf],ecx
  404f52:	ins    DWORD PTR es:[edi],dx
  404f53:	mov    edi,ecx
  404f55:	lods   eax,DWORD PTR ds:[esi]
  404f56:	sbb    al,BYTE PTR [edx+0x434b8362]
  404f5c:	mov    bl,BYTE PTR [edx-0x3f]
  404f5f:	pop    ebp
  404f60:	sub    ebp,DWORD PTR [ebp-0x60]
  404f63:	call   0xa6ca:0x566e5a12
  404f6a:	pop    ss
  404f6b:	cli    
  404f6c:	mov    bh,0x71
  404f6e:	adc    DWORD PTR [edi-0x30],ecx
  404f71:	out    dx,eax
  404f72:	aam    0x9b
  404f74:	add    eax,esi
  404f76:	aaa    
  404f77:	in     al,dx
  404f78:	call   0xd001e31c
  404f7d:	push   ecx
  404f7e:	mov    ?,WORD PTR [esi+esi*1]
  404f81:	(bad)  
  404f82:	gs cmp al,0x8f
  404f85:	fistp  DWORD PTR [ebx+0x7b]
  404f88:	out    0xfa,al
  404f8a:	nop
  404f8b:	and    DWORD PTR [eax+0xb9f9867],ecx
  404f91:	and    eax,0x63da7676
  404f96:	addr16 pop ss
  404f98:	or     ch,ah
  404f9a:	mov    ds:0x8b9f882,al
  404f9f:	or     DWORD PTR [ebx+0x38],edi
  404fa2:	(bad)  
  404fa3:	cmp    ecx,DWORD PTR [ecx-0x1e]
  404fa6:	jmp    edi
  404fa8:	mov    bh,0xbf
  404faa:	(bad)  
  404fab:	cmp    ah,BYTE PTR [ebx+0x77]
  404fae:	push   ss
  404faf:	mov    eax,ds:0xbb19be9
  404fb4:	inc    eax
  404fb5:	adc    eax,0x91bbb035
  404fba:	pop    eax
  404fbb:	inc    al
  404fbd:	ins    BYTE PTR es:[edi],dx
  404fbe:	repz mov dh,0xba
  404fc1:	rcr    DWORD PTR [edx],cl
  404fc3:	dec    edi
  404fc4:	jmp    0xeebf:0x4f608cba
  404fcb:	stc    
  404fcc:	pop    ebp
  404fcd:	push   esp
  404fce:	popa   
  404fcf:	sbb    BYTE PTR [ecx],dh
  404fd1:	xchg   edx,eax
  404fd2:	int    0xc2
  404fd4:	shl    BYTE PTR [ebp-0x4ff3f66b],cl
  404fda:	xchg   ebp,eax
  404fdb:	in     al,0x4c
  404fdd:	push   cs
  404fde:	and    DWORD PTR [esi],0xffffffa3
  404fe1:	jo     0x404fe6
  404fe3:	dec    esp
  404fe4:	inc    esp
  404fe5:	ret    
  404fe6:	icebp  
  404fe7:	setg   BYTE PTR [ecx+ebx*1+0x3a125ea8]
  404fef:	jae    0x40502c
  404ff1:	mov    cl,0x71
  404ff3:	mov    esp,?
  404ff5:	ficomp WORD PTR [esi]
  404ff7:	xor    eax,0x90332743
  404ffc:	mov    ecx,0xa8464d89
  405001:	and    eax,0xf5f518fa
  405006:	inc    ebx
  405007:	test   al,0x6a
  405009:	jbe    0x405052
  40500b:	loop   0x404fc3
  40500d:	jg     0x404fe9
  40500f:	jmp    0x49b2917c
  405014:	dec    esp
  405015:	ror    BYTE PTR [esi-0x7d],cl
  405018:	leave  
  405019:	ss hlt 
  40501b:	arpl   WORD PTR [esi],si
  40501d:	shl    BYTE PTR ds:0x3cfdcea9,1
  405023:	stos   DWORD PTR es:[edi],eax
  405024:	pop    ebp
  405025:	std    
  405026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405027:	dec    BYTE PTR [edx+0x7f1fcc4f]
  40502d:	sub    esi,DWORD PTR [ebx*4+0x6d5cf34]
  405034:	std    
  405035:	cld    
  405036:	inc    ebx
  405037:	mov    BYTE PTR [eax-0x31ebdaae],ch
  40503d:	jle    0x404ff2
  40503f:	jl     0x405005
  405041:	imul   BYTE PTR [edx-0x61]
  405044:	add    DWORD PTR [ecx+0x134464c1],ebp
  40504a:	sbb    eax,0x3c905255
  40504f:	pop    ecx
  405050:	pop    esi
  405051:	sub    eax,0x68282ddc
  405056:	mov    dh,0x7c
  405058:	mov    dl,0x42
  40505a:	push   ds
  40505b:	mov    edx,0xa7914d6b
  405060:	add    BYTE PTR [esi+eax*1+0xa],bh
  405064:	jl     0x404ff5
  405066:	mov    al,ds:0x5fd8c231
  40506b:	jbe    0x404ff8
  40506d:	jnp    0x4050b3
  40506f:	nop
  405070:	mov    eax,ds:0xe652fd7b
  405075:	push   ebp
  405076:	pop    edx
  405077:	push   ebp
  405078:	stos   BYTE PTR es:[edi],al
  405079:	adc    al,0xc5
  40507b:	sub    eax,0xfdf8db05
  405080:	cmp    DWORD PTR [edi+0x766879dc],esp
  405086:	fmul   st,st(5)
  405088:	pop    ecx
  405089:	mov    dl,0x26
  40508b:	mov    ebp,0x38853c0b
  405090:	pusha  
  405091:	add    bl,BYTE PTR ds:0x1aa64dd
  405097:	nop
  405098:	(bad)  
  405099:	int    0x88
  40509b:	aaa    
  40509c:	xchg   ah,al
  40509e:	scas   al,BYTE PTR es:[edi]
  40509f:	lds    edx,FWORD PTR [edi-0x3f]
  4050a2:	or     BYTE PTR [eax+esi*1+0x402c85b3],dl
  4050a9:	dec    edi
  4050aa:	push   eax
  4050ab:	jmp    DWORD PTR [esi-0x44]
  4050ae:	dec    eax
  4050af:	mov    al,0x6
  4050b1:	(bad)  
  4050b2:	cmp    BYTE PTR [eax],al
  4050b4:	mov    eax,ds:0xd8af7fe9
  4050b9:	ret    
  4050ba:	loope  0x405107
  4050bc:	sbb    DWORD PTR ds:0xf6e88c4c,0x47
  4050c3:	sub    al,0xb5
  4050c5:	fcomp  st(0)
  4050c7:	xchg   ebx,eax
  4050c8:	pop    edx
  4050c9:	shr    BYTE PTR [edx-0x2d427dd1],0xc3
  4050d0:	cmp    ebx,DWORD PTR [esi-0x5a0d417c]
  4050d6:	sti    
  4050d7:	push   es
  4050d8:	mov    al,ds:0xed308b9f
  4050dd:	jmp    0xca05:0xfe636cea
  4050e4:	or     eax,0xc399f319
  4050e9:	pop    ebx
  4050ea:	push   DWORD PTR [eax]
  4050ec:	push   cs
  4050ed:	dec    ecx
  4050ee:	loopne 0x405103
  4050f0:	lods   al,BYTE PTR ds:[esi]
  4050f1:	mov    dh,0x2e
  4050f3:	mov    ebx,0xd7f359cf
  4050f8:	xchg   edx,eax
  4050f9:	(bad)  
  4050fa:	fadd   DWORD PTR [edi-0xf65dc65]
  405100:	retf   
  405101:	loop   0x405141
  405103:	lods   eax,DWORD PTR ds:[esi]
  405104:	pop    esp
  405105:	adc    esp,DWORD PTR [eax-0x16]
  405108:	inc    edx
  405109:	cmp    esi,esp
  40510b:	sub    bl,BYTE PTR [edi+0x6da73362]
  405111:	ds jno 0x405114
  405114:	outs   dx,BYTE PTR ds:[esi]
  405115:	and    bh,BYTE PTR ds:0xf7225a69
  40511b:	std    
  40511c:	inc    DWORD PTR [ebx+0x62]
  40511f:	fld    TBYTE PTR ds:0xd9530ce9
  405125:	sbb    eax,0x6633b7da
  40512a:	aam    0x15
  40512c:	cli    
  40512d:	add    BYTE PTR [edi+eax*1+0x12],al
  405131:	mov    ecx,DWORD PTR [edi+0x7c]
  405134:	mov    edx,0xcb5d2c29
  405139:	lods   eax,DWORD PTR ds:[esi]
  40513a:	mov    ah,0x9a
  40513c:	test   DWORD PTR [edi],ebp
  40513e:	mov    WORD PTR [ebx+0x350d129e],es
  405144:	jle    0x405162
  405146:	pop    ss
  405147:	xor    ch,cl
  405149:	jno    0x405188
  40514b:	mov    ds:0x461ad42e,eax
  405150:	mov    ss,WORD PTR ds:0x8bce88b4
  405156:	fcomp  QWORD PTR [ecx]
  405158:	cld    
  405159:	fadd   st(5),st
  40515b:	es cs push cs
  40515e:	fst    DWORD PTR [ecx+ebp*4+0x50]
  405162:	cmp    al,0x30
  405164:	test   al,0xc2
  405166:	mov    esp,0xe4491a
  40516b:	jb     0x40515b
  40516d:	ds test al,0x64
  405170:	popf   
  405171:	push   ebp
  405172:	adc    eax,0xd35f9627
  405177:	test   cl,ah
  405179:	outs   dx,DWORD PTR ds:[esi]
  40517a:	data16 add BYTE PTR [ecx+0x68],al
  40517e:	add    al,0x72
  405180:	xchg   esp,eax
  405181:	jl     0x40510e
  405183:	repnz pop ss
  405185:	inc    edx
  405186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405188:	inc    esi
  405189:	fldcw  WORD PTR [ebx]
  40518b:	jne    0x405169
  40518d:	sub    ebp,esp
  40518f:	adc    bl,BYTE PTR [edi+0x5cee11d0]
  405195:	jecxz  0x405123
  405197:	sbb    DWORD PTR [esi+0x69],esi
  40519a:	add    al,0x8d
  40519c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519d:	imul   esi,DWORD PTR [ebp+0x2e],0x75
  4051a1:	call   0x3fc1ea30
  4051a6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4051a8:	mov    eax,0x63ff92e3
  4051ad:	or     dh,BYTE PTR [ebx]
  4051af:	jno    0x4051a6
  4051b1:	out    0x86,al
  4051b3:	ins    BYTE PTR es:[edi],dx
  4051b4:	mov    WORD PTR [edi-0x4d2def50],?
  4051ba:	mov    bl,0x0
  4051bc:	inc    esp
  4051bd:	icebp  
  4051be:	xchg   edi,eax
  4051bf:	stos   BYTE PTR es:[edi],al
  4051c0:	xor    ah,BYTE PTR [eax]
  4051c2:	mov    ds,WORD PTR [eax]
  4051c4:	add    eax,0x53b52e25
  4051c9:	xchg   edi,eax
  4051ca:	pop    esp
  4051cb:	test   eax,0xf43df94d
  4051d0:	jl     0x405167
  4051d2:	mov    ecx,0x34277a4c
  4051d7:	pop    ecx
  4051d8:	hlt    
  4051d9:	cs sbb cl,cl
  4051dc:	mov    ecx,0x9a15eda0
  4051e1:	out    dx,al
  4051e2:	mov    ah,0x54
  4051e4:	mov    edx,0xb36f19f0
  4051e9:	inc    esi
  4051ea:	scas   al,BYTE PTR es:[edi]
  4051eb:	stos   DWORD PTR es:[edi],eax
  4051ec:	sbb    DWORD PTR [eax],0xffffffa6
  4051ef:	jg     0x4051e8
  4051f1:	inc    ebp
  4051f2:	scas   eax,DWORD PTR es:[edi]
  4051f3:	ins    DWORD PTR es:[edi],dx
  4051f4:	push   ecx
  4051f5:	cmp    al,0xc3
  4051f7:	popa   
  4051f8:	ror    DWORD PTR [edx],0xb2
  4051fb:	fidivr WORD PTR [ebx]
  4051fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051fe:	add    bh,BYTE PTR [ebx]
  405200:	xor    dh,0x46
  405203:	test   eax,0x940215ad
  405208:	call   0x5654:0xa38aaec0
  40520f:	sbb    ebp,DWORD PTR [eax]
  405211:	adc    DWORD PTR [edi-0x34d47e82],ebx
  405217:	in     al,0xec
  405219:	pop    esp
  40521a:	cmp    eax,0xcdd55320
  40521f:	hlt    
  405220:	lods   al,BYTE PTR ds:[esi]
  405221:	xor    al,0x99
  405223:	push   ebp
  405224:	dec    esi
  405225:	mov    al,ds:0x931b674d
  40522a:	popf   
  40522b:	pop    edi
  40522c:	shl    DWORD PTR [esi+0x6d7df667],cl
  405232:	imul   eax
  405234:	into   
  405235:	test   eax,0x3a3b184f
  40523a:	or     dh,bh
  40523c:	ins    DWORD PTR es:[edi],dx
  40523d:	scas   al,BYTE PTR es:[edi]
  40523e:	pop    ds
  40523f:	mov    BYTE PTR [edx],dl
  405241:	sbb    DWORD PTR [edx-0x4c5ed7e8],edx
  405247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405248:	jno    0x405212
  40524a:	rol    BYTE PTR [ebp+edi*4-0xc],1
  40524e:	and    BYTE PTR [esi+edx*1-0x49d780c4],bh
  405255:	mov    eax,0x1dc1bf2c
  40525a:	inc    esi
  40525b:	aas    
  40525c:	mov    bh,0x2d
  40525e:	and    dl,BYTE PTR [eax+0x43]
  405261:	loope  0x4051fc
  405263:	or     DWORD PTR [eax-0x7f62aa03],edx
  405269:	fsubr  QWORD PTR [ebp+0x56]
  40526c:	fucomi st,st(7)
  40526e:	inc    ebp
  40526f:	jg     0x405241
  405271:	aas    
  405272:	sub    esi,esp
  405274:	or     BYTE PTR [ebp+0x10],ch
  405277:	call   0x9faa:0xb546216f
  40527e:	push   ebp
  40527f:	sbb    ebp,0x25
  405282:	in     al,dx
  405283:	fwait
  405284:	push   ecx
  405285:	sub    ebp,esi
  405287:	sar    BYTE PTR [ecx-0x51],1
  40528a:	adc    al,0x2
  40528c:	test   eax,0x4bd48d0b
  405291:	push   ss
  405292:	jge    0x405313
  405294:	mov    edx,0xd3b1f832
  405299:	or     cl,BYTE PTR ds:0x38831d82
  40529f:	sub    eax,0xda58cd4c
  4052a4:	inc    eax
  4052a5:	push   edx
  4052a6:	(bad)  
  4052a7:	pop    ebp
  4052a8:	pusha  
  4052a9:	sbb    ebx,esi
  4052ab:	add    al,0x69
  4052ad:	mov    DWORD PTR [ebx+0x19],ebp
  4052b0:	in     al,dx
  4052b1:	ins    BYTE PTR es:[edi],dx
  4052b2:	inc    edx
  4052b3:	loope  0x405299
  4052b5:	xlat   BYTE PTR ds:[ebx]
  4052b6:	dec    eax
  4052b7:	push   esp
  4052b8:	mov    bl,0x21
  4052ba:	or     edi,DWORD PTR [edi-0x6c]
  4052bd:	loop   0x4052b7
  4052bf:	xchg   ebx,eax
  4052c0:	lds    edi,FWORD PTR [edi+edx*1]
  4052c3:	dec    ebx
  4052c4:	cmp    eax,0x14378a1
  4052c9:	pusha  
  4052ca:	jmp    0x5a2d:0x9d5cabf
  4052d1:	test   al,0x43
  4052d3:	scas   eax,DWORD PTR es:[di]
  4052d5:	jbe    0x40527d
  4052d7:	add    BYTE PTR [ebx-0xf2048c6],0xd7
  4052de:	jmp    0x1d04:0xffe2e6dc
  4052e5:	in     al,0x17
  4052e7:	add    al,0x4d
  4052e9:	fild   QWORD PTR [ebp-0x9c269f2]
  4052ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f0:	sbb    eax,0xd8e31c11
  4052f5:	jmp    0x405364
  4052f7:	rcl    BYTE PTR [edx],0x42
  4052fa:	imul   ecx
  4052fc:	sub    ebx,DWORD PTR [ebp-0x6d98e5e]
  405302:	push   0x42
  405304:	push   ss
  405305:	cwde   
  405306:	or     BYTE PTR [edi-0x5e5944e9],bl
  40530c:	pop    edi
  40530d:	cmp    eax,0xdbd2f35
  405312:	push   edi
  405313:	fwait
  405314:	and    BYTE PTR [ebx],ch
  405316:	jo     0x405331
  405318:	xchg   DWORD PTR [esi-0xf96e3df],ebx
  40531e:	in     al,0x72
  405320:	sbb    edx,DWORD PTR [ebx-0x67]
  405323:	pop    ebp
  405324:	lods   eax,DWORD PTR ds:[esi]
  405325:	lds    esi,FWORD PTR [edx+edi*1+0x28]
  405329:	popf   
  40532a:	mov    al,0x9
  40532c:	mov    cs,WORD PTR [esi]
  40532e:	imul   ebx,DWORD PTR [edi+eiz*2-0x5b],0xfffffff9
  405333:	add    al,0xf3
  405335:	out    0x55,al
  405337:	das    
  405338:	xchg   ecx,eax
  405339:	or     bl,BYTE PTR [edx+0x3b]
  40533c:	adc    ebp,esi
  40533e:	aam    0x20
  405340:	sub    al,0x17
  405342:	dec    eax
  405343:	mov    ds:0xb3c8d3bd,eax
  405348:	bound  esi,QWORD PTR [esi]
  40534a:	mov    DWORD PTR [edi+0x5b],edx
  40534d:	addr16 loop 0x405341
  405350:	xor    edx,0x1ce5e49b
  405356:	xchg   edx,eax
  405357:	sbb    DWORD PTR [ecx],ebx
  405359:	add    BYTE PTR [ebp+0x62],bl
  40535c:	adc    BYTE PTR [edx+0xc691326],al
  405362:	and    DWORD PTR fs:[ecx],esi
  405365:	nop    DWORD PTR [esi+0x59]
  405369:	mov    ebx,0x174a6281
  40536e:	repnz mov esi,DWORD PTR [ebx]
  405371:	adc    eax,0x2aa91e30
  405376:	jno    0x405353
  405378:	mov    ebx,0x52c7e972
  40537d:	add    bh,bl
  40537f:	xchg   BYTE PTR [ebx],ah
  405381:	sti    
  405382:	rol    DWORD PTR [edx-0x691d156d],1
  405388:	pop    eax
  405389:	mov    cl,0x34
  40538b:	adc    DWORD PTR [edi+0x2df9153e],ebp
  405391:	and    cl,0xa6
  405394:	mov    ebx,0xf64660fd
  405399:	push   ecx
  40539a:	fnstsw WORD PTR [edx-0x78]
  40539d:	mov    ebp,0x2a2e948b
  4053a2:	mov    ah,0x1
  4053a4:	xchg   ebx,eax
  4053a5:	sti    
  4053a6:	jle    0x4053c2
  4053a8:	pop    ss
  4053a9:	popf   
  4053aa:	popf   
  4053ab:	mov    ds,WORD PTR [esi]
  4053ad:	call   DWORD PTR [edi]
  4053af:	jo     0x405350
  4053b1:	jo     0x4053db
  4053b3:	adc    al,0x58
  4053b5:	push   0x7c4873
  4053ba:	mov    ebx,0x39d9635a
  4053bf:	icebp  
  4053c0:	inc    edx
  4053c1:	mov    eax,0x509b2f60
  4053c6:	mov    esi,0xf82168f9
  4053cb:	mov    ecx,0x764f62e1
  4053d0:	cdq    
  4053d1:	xor    DWORD PTR [ebp-0x46],0x7
  4053d5:	jbe    0x405439
  4053d7:	add    bl,dh
  4053d9:	(bad)  
  4053da:	xor    al,0x55
  4053dc:	repz mov al,ds:0x349397b
  4053e2:	sub    esi,DWORD PTR [esi-0x2e]
  4053e5:	mov    ds:0xb558868b,eax
  4053ea:	cmp    al,0xc2
  4053ec:	mov    BYTE PTR [edx-0x16],0xcd
  4053f0:	xchg   ebx,ebp
  4053f2:	mov    edx,0xb532daea
  4053f7:	mov    eax,ds:0x2c36992e
  4053fc:	mov    ebp,DWORD PTR [ecx-0x2b35d462]
  405402:	xchg   ebp,eax
  405403:	cmp    ecx,edx
  405405:	test   esp,esp
  405407:	sub    esi,esp
  405409:	retf   
  40540a:	sub    al,0xd1
  40540c:	scas   eax,DWORD PTR es:[edi]
  40540d:	or     bl,BYTE PTR [esi-0x5a6369b5]
  405413:	xor    BYTE PTR [bx+di-0x36],cl
  405417:	gs push edx
  405419:	jbe    0x4053b0
  40541b:	stc    
  40541c:	push   es
  40541d:	xor    eax,0xa5d2ce6c
  405422:	sbb    eax,0xfe779b7
  405427:	mov    ds:0xab166779,eax
  40542c:	pop    ebp
  40542d:	dec    ecx
  40542e:	mov    bh,0x7a
  405430:	scas   al,BYTE PTR es:[edi]
  405431:	out    0xa8,al
  405433:	jl     0x405493
  405435:	call   0xfa6e:0x978b58f2
  40543c:	xor    BYTE PTR [ebp+0x696741a8],ch
  405442:	rcl    bh,cl
  405444:	fiadd  WORD PTR [eax+ebx*8]
  405447:	fs call 0xa4eebbed
  40544d:	mov    gs,WORD PTR [ebx]
  40544f:	je     0x405418
  405451:	add    al,BYTE PTR [edx+0x6a]
  405454:	add    DWORD PTR [edx],edi
  405456:	(bad)  
  405458:	test   BYTE PTR [edi+0x44],dh
  40545b:	add    al,0x4c
  40545d:	jmp    0x862d6336
  405462:	iret   
  405463:	pop    edx
  405464:	mov    BYTE PTR [ecx-0xea58f7a],ch
  40546a:	fwait
  40546b:	push   ds
  40546c:	(bad)  
  40546d:	sub    DWORD PTR [ebp+esi*1+0x2fcfe37],0x33
  405475:	enter  0xadc1,0xec
  405479:	neg    BYTE PTR [esi+0x22]
  40547c:	jmp    0x4054b2
  40547e:	in     eax,dx
  40547f:	inc    eax
  405480:	add    eax,0x4c657970
  405485:	js     0x4054aa
  405487:	mov    dh,0x1e
  405489:	imul   dl
  40548b:	cld    
  40548c:	popf   
  40548d:	jbe    0x4054d4
  40548f:	sbb    bl,dl
  405491:	pop    ebp
  405492:	inc    esp
  405493:	das    
  405494:	out    0xfd,al
  405496:	ss mov bl,0x7d
  405499:	and    al,0x4b
  40549b:	cmp    eax,0x844e47cf
  4054a0:	out    0x60,al
  4054a2:	dec    eax
  4054a3:	sbb    eax,0x887a2f46
  4054a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054a9:	adc    esi,ebp
  4054ab:	(bad)  
  4054ac:	push   ecx
  4054ad:	ds pusha 
  4054af:	sub    ah,bh
  4054b1:	dec    edi
  4054b2:	nop
  4054b3:	mov    eax,ds:0xa5aaa6c
  4054b8:	sbb    eax,ebx
  4054ba:	hlt    
  4054bb:	aaa    
  4054bc:	stc    
  4054bd:	jae    0x405477
  4054bf:	popa   
  4054c0:	sub    DWORD PTR [edi],0x4c70670e
  4054c6:	ficomp WORD PTR [esi]
  4054c8:	adc    BYTE PTR [esi],cl
  4054ca:	jp     0x405511
  4054cc:	call   0x5f0c:0x79b093ba
  4054d3:	sub    dh,BYTE PTR [ecx-0x36943940]
  4054d9:	mov    edx,0x3997b4a8
  4054de:	jo     0x4054fb
  4054e0:	pop    edi
  4054e1:	stos   DWORD PTR es:[edi],eax
  4054e2:	bound  ebx,QWORD PTR [eax-0x7b]
  4054e5:	or     eax,0xcc4265db
  4054ea:	lds    eax,FWORD PTR [ecx+0x22]
  4054ed:	inc    ebx
  4054ee:	aas    
  4054ef:	pop    edi
  4054f0:	sbb    DWORD PTR [eax-0x48f14cfc],esp
  4054f6:	jecxz  0x4054f5
  4054f8:	cmp    ebp,0xffffffbe
  4054fb:	(bad)  
  4054fc:	mov    esp,0xb3a69bfe
  405501:	fchs   
  405504:	push   ebx
  405505:	add    eax,0x57f2e2ef
  40550a:	in     eax,0x87
  40550c:	dec    ebp
  40550d:	fdiv   QWORD PTR [eax+0x1b3b4158]
  405513:	mov    edx,0x3a9bed9d
  405518:	mov    ch,0xc6
  40551a:	(bad)  
  40551b:	nop    DWORD PTR [ecx+0x6]
  40551f:	and    cl,BYTE PTR [ecx]
  405521:	das    
  405522:	and    DWORD PTR [ecx-0x6c86caa8],esi
  405528:	jns    0x405520
  40552a:	xor    cl,cl
  40552c:	pop    es
  40552d:	xor    al,0x2e
  40552f:	mov    eax,ss:0x9c33fc0a
  405535:	pop    edi
  405536:	sub    ch,bl
  405538:	and    al,0xfa
  40553a:	cmp    al,0xa5
  40553c:	(bad)  
  40553e:	hlt    
  40553f:	test   eax,0x1dd57f65
  405544:	gs xor eax,0x7baa8cae
  40554a:	pop    ss
  40554b:	daa    
  40554c:	and    eax,0xf5bb624c
  405551:	sti    
  405552:	scas   eax,DWORD PTR es:[edi]
  405553:	(bad)  [edi-0x71]
  405556:	or     ch,ch
  405558:	lods   al,BYTE PTR ds:[esi]
  405559:	add    eax,0x2b8336d0
  40555e:	fs xor cl,cl
  405561:	jno    0x40557d
  405563:	cmp    BYTE PTR [edx],0xde
  405566:	pop    edi
  405567:	mov    ah,0xaf
  405569:	std    
  40556a:	xchg   DWORD PTR [ecx],edx
  40556c:	sub    BYTE PTR [eax+eax*1-0x70],0x3
  405571:	mov    ebp,edx
  405573:	test   al,0x15
  405575:	cld    
  405576:	mov    ecx,0x18803b4f
  40557b:	nop
  40557c:	push   dx
  40557e:	es xchg ebx,eax
  405580:	push   ebx
  405581:	add    eax,0x3b239b1d
  405586:	xlat   BYTE PTR ds:[ebx]
  405587:	dec    edi
  405588:	jl     0x405571
  40558a:	lock loope 0x40550e
  40558d:	cmp    ebp,esi
  40558f:	ja     0x4055c0
  405591:	sar    DWORD PTR [esi],0x33
  405594:	or     eax,0x30504fb3
  405599:	or     DWORD PTR [edi-0x4f3a3c0a],ebx
  40559f:	fbld   TBYTE PTR [edx+0x58]
  4055a2:	sbb    BYTE PTR [ebx-0x12ce3309],0x41
  4055a9:	enter  0xdd87,0x62
  4055ad:	sti    
  4055ae:	in     eax,0x2f
  4055b0:	cmp    eax,0xdb19c32d
  4055b5:	test   BYTE PTR [edx-0xbc8866b],0x69
  4055bc:	popf   
  4055bd:	sbb    al,0xc3
  4055bf:	retf   0x999
  4055c2:	pop    ebx
  4055c3:	or     BYTE PTR [edx+0x4a],ch
  4055c6:	adc    bh,BYTE PTR [eax]
  4055c8:	loope  0x405629
  4055ca:	and    dl,BYTE PTR [ebp+0x7d8bb413]
  4055d0:	cmp    al,0x2e
  4055d2:	inc    edx
  4055d3:	imul   ecx,DWORD PTR [esi+edx*4-0x4347f6cd],0x54018cb5
  4055de:	jle    0x40565d
  4055e0:	cs push edi
  4055e2:	mov    ds:0x86f526fb,al
  4055e7:	jle    0x405643
  4055e9:	js     0x4055e3
  4055eb:	cdq    
  4055ec:	test   al,0xa1
  4055ee:	or     bl,0x5
  4055f1:	(bad)  
  4055f2:	test   al,0x16
  4055f4:	mov    bl,0xfd
  4055f6:	mov    ebx,0x2a945646
  4055fb:	mov    al,ds:0x830ba215
  405600:	adc    ah,BYTE PTR [edx-0x448b9a94]
  405606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405607:	adc    al,ah
  405609:	mov    ah,0xbc
  40560b:	mov    eax,0xca81e81
  405610:	or     ebp,edi
  405612:	mov    bh,0xa1
  405614:	fcmovb st,st(6)
  405616:	call   FWORD PTR [ecx+ebx*1]
  405619:	push   esp
  40561a:	dec    edi
  40561b:	mov    WORD PTR [eax+0x4e9a48ee],?
  405621:	nop
  405622:	daa    
  405623:	rol    DWORD PTR ds:0x1de13e6d,1
  405629:	or     eax,0x54bffb75
  40562e:	jecxz  0x4055e9
  405630:	pop    edx
  405631:	push   cs
  405632:	mov    eax,0x4ad1f580
  405637:	call   0xad06e443
  40563c:	lahf   
  40563d:	lahf   
  40563e:	lods   eax,DWORD PTR ds:[esi]
  40563f:	lea    esi,[eax]
  405641:	rcl    DWORD PTR [eax+ebx*2+0x415b5bda],0x4a
  405649:	mov    esp,0xf58ce519
  40564e:	rol    dh,1
  405650:	daa    
  405651:	pop    eax
  405652:	mov    bl,0xb0
  405654:	ret    0x544d
  405657:	popa   
  405658:	jno    0x405691
  40565a:	in     eax,0xe
  40565c:	pop    ebp
  40565d:	mov    al,0xde
  40565f:	(bad)  [esi]
  405661:	and    DWORD PTR [edi+0x5cc04398],ecx
  405667:	adc    bl,BYTE PTR [ebx-0x1]
  40566a:	idiv   BYTE PTR [esi+0x33e33470]
  405670:	cmp    eax,0xe3c4b863
  405675:	aad    0x20
  405677:	mov    bh,0x15
  405679:	stc    
  40567a:	and    bh,BYTE PTR [eax-0xd874e4a]
  405680:	mov    edi,0xe8eebbdc
  405685:	imul   esp,esi,0x62
  405688:	out    0xd,al
  40568a:	sbb    eax,0x3783ded7
  40568f:	fwait
  405690:	imul   ebp,DWORD PTR [eax],0x688c6087
  405696:	cmp    dh,BYTE PTR [ecx+0x1a3971d3]
  40569c:	hlt    
  40569d:	push   edx
  40569e:	dec    ebx
  40569f:	ror    DWORD PTR [esi],1
  4056a1:	fmulp  st(0),st
  4056a3:	outs   dx,DWORD PTR ds:[esi]
  4056a4:	mov    BYTE PTR [eax],cl
  4056a6:	add    DWORD PTR [ebx+edx*8+0x44],ebx
  4056aa:	xor    al,al
  4056ac:	imul   BYTE PTR [ecx-0x1616567a]
  4056b2:	mov    eax,0x11b75a83
  4056b7:	jns    0x405725
  4056b9:	js     0x4056f6
  4056bb:	ins    BYTE PTR es:[edi],dx
  4056bc:	(bad)  
  4056bd:	loop   0x405655
  4056bf:	loope  0x40564c
  4056c1:	and    dl,BYTE PTR [ebx]
  4056c3:	outs   dx,BYTE PTR ds:[esi]
  4056c4:	xchg   edi,eax
  4056c5:	loope  0x4056a8
  4056c7:	setp   BYTE PTR [ecx-0x3ab6ae5b]
  4056ce:	xchg   esi,eax
  4056cf:	push   0x68
  4056d1:	jl     0x405709
  4056d3:	lods   eax,DWORD PTR ds:[esi]
  4056d4:	lea    edi,[esi+0x7f70c063]
  4056da:	mov    cl,0xa
  4056dc:	call   0x1b53b96f
  4056e1:	or     esi,DWORD PTR [edi+ebx*1-0x41]
  4056e5:	xchg   ah,bl
  4056e7:	inc    ebx
  4056e8:	push   ds
  4056e9:	es jb  0x405701
  4056ec:	push   ebx
  4056ed:	mov    esi,0x7c7df0e3
  4056f2:	and    DWORD PTR [edx],esi
  4056f4:	cld    
  4056f5:	mov    al,0xb3
  4056f7:	fcmovne st,st(1)
  4056f9:	add    al,dh
  4056fb:	mov    ecx,ecx
  4056fd:	stos   DWORD PTR es:[edi],eax
  4056fe:	ja     0x405724
  405700:	in     al,dx
  405701:	imul   ecx,DWORD PTR [edx],0xfc813e66
  405707:	xor    BYTE PTR [ebp+0x32ffed88],bh
  40570d:	adc    BYTE PTR [ebx+0x51e545ba],dl
  405713:	mov    eax,ds:0x2bd0e29a
  405718:	std    
  405719:	mov    eax,ds:0x21beea30
  40571e:	loop   0x405746
  405720:	adc    edx,DWORD PTR [edx-0x690e1120]
  405726:	and    al,0x5
  405728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405729:	js     0x4056b8
  40572b:	or     ah,dh
  40572d:	mov    BYTE PTR [ebp+0x7ef6bc5d],0x7f
  405734:	jmp    0x4056c0
  405736:	jg     0x405794
  405738:	xchg   edx,eax
  405739:	lds    esp,FWORD PTR [ebp+0x2ffe5359]
  40573f:	jne    0x4056e2
  405741:	stos   BYTE PTR es:[edi],al
  405742:	jae    0x4056e9
  405744:	shl    esi,0x1c
  405747:	lds    eax,FWORD PTR [ecx-0x717d55e2]
  40574d:	or     eax,0xad1a8292
  405752:	popf   
  405753:	jb     0x405704
  405755:	inc    esi
  405756:	cld    
  405757:	mov    BYTE PTR [edi+0x46],bl
  40575a:	mov    ecx,DWORD PTR [ecx]
  40575c:	sub    al,BYTE PTR [ecx+eax*1]
  40575f:	xor    BYTE PTR [edi],dh
  405761:	rcr    BYTE PTR [esi+0x43],0x24
  405765:	adc    al,0x2e
  405767:	cmp    al,0x23
  405769:	xor    BYTE PTR [edi+0x59137091],ah
  40576f:	je     0x405702
  405771:	cmp    BYTE PTR [edi+0x4d],dh
  405774:	das    
  405775:	sub    eax,0x412dc3df
  40577a:	add    al,0x2b
  40577c:	jmp    edi
  40577e:	dec    ecx
  40577f:	test   al,0x91
  405781:	xchg   esp,eax
  405782:	sahf   
  405783:	adc    BYTE PTR ds:[esp+ebx*4-0x46],bh
  405788:	sbb    al,0xf6
  40578a:	mov    bl,BYTE PTR [esi]
  40578c:	mov    ch,0x32
  40578e:	fistp  QWORD PTR [ebx]
  405790:	outs   dx,DWORD PTR ds:[esi]
  405791:	mov    edi,0x911275df
  405796:	jno    0x405796
  405798:	enter  0xc0c8,0x80
  40579c:	sub    ah,BYTE PTR [edx-0x29b4a4ba]
  4057a2:	stos   BYTE PTR es:[edi],al
  4057a3:	aad    0x8a
  4057a5:	arpl   WORD PTR [ebp-0xb],ax
  4057a8:	inc    ecx
  4057a9:	and    DWORD PTR [ecx+0x25744098],edi
  4057af:	pop    edi
  4057b0:	call   0x8923:0xb778ee9f
  4057b7:	mov    cl,0x80
  4057b9:	sbb    eax,0xd88ea8d8
  4057be:	jmp    FWORD PTR [edi-0xd22f0ab]
  4057c4:	mov    esi,?
  4057c6:	scas   eax,DWORD PTR es:[edi]
  4057c7:	imul   esi,ecx,0x44dd5cef
  4057cd:	pop    ecx
  4057ce:	out    0xf8,eax
  4057d0:	jmp    FWORD PTR [edi+0x19]
  4057d3:	ss nop
  4057d5:	out    dx,al
  4057d6:	xchg   ebx,eax
  4057d7:	mov    al,0xa9
  4057d9:	test   al,0xb1
  4057db:	cmp    ch,BYTE PTR [ebx-0x78]
  4057de:	cli    
  4057df:	jle    0x4057bc
  4057e1:	lds    edi,FWORD PTR [ecx-0x6a9d236d]
  4057e7:	fs pusha 
  4057e9:	and    eax,0x73329569
  4057ee:	adc    ecx,eax
  4057f0:	retw   
  4057f2:	sub    al,0x11
  4057f4:	rcr    ebx,cl
  4057f6:	lea    ecx,[eax+0x12d288b8]
  4057fc:	sbb    BYTE PTR [ebp+0x27],al
  4057ff:	bound  ebx,QWORD PTR [edx-0x4146fe05]
  405805:	out    dx,eax
  405806:	leave  
  405807:	fiadd  WORD PTR [ebp-0x6c]
  40580a:	(bad)  
  40580b:	mov    ecx,0x74f039f8
  405810:	jecxz  0x40585e
  405812:	arpl   WORD PTR [ebx+0x3a],si
  405815:	int    0xf0
  405817:	sbb    BYTE PTR [eax],cl
  405819:	mov    bl,0x9
  40581b:	pop    esp
  40581c:	popa   
  40581d:	jnp    0x40587a
  40581f:	cmp    al,0xd6
  405821:	push   eax
  405822:	dec    ecx
  405823:	hlt    
  405824:	mov    ebp,edi
  405826:	mov    ecx,ebp
  405828:	lods   eax,DWORD PTR ds:[esi]
  405829:	xor    al,0x7b
  40582b:	add    esp,DWORD PTR [edx]
  40582d:	lods   eax,DWORD PTR ds:[esi]
  40582e:	aaa    
  40582f:	out    dx,eax
  405830:	mov    BYTE PTR [ebx+eax*8-0x26],ch
  405834:	mov    ch,0x5f
  405836:	jmp    0x4ac74bd2
  40583b:	xor    DWORD PTR [ebx],eax
  40583d:	imul   ebx,DWORD PTR [edx+0x7b],0x1b
  405841:	(bad)  
  405842:	jns    0x4057df
  405844:	pop    esi
  405845:	mov    esi,0x4f01b6a8
  40584a:	lods   eax,DWORD PTR ds:[esi]
  40584b:	popf   
  40584c:	jns    0x405870
  40584e:	sbb    DWORD PTR [ecx],ebx
  405850:	js     0x4058ba
  405852:	data16 mov ah,0x64
  405855:	pop    edi
  405856:	aam    0xd6
  405858:	inc    esi
  405859:	push   ecx
  40585a:	addr16 sub eax,0x2fa7c8ec
  405860:	sub    ebx,DWORD PTR fs:[ebx+0x4b]
  405864:	pop    eax
  405865:	out    0x7f,al
  405867:	fcom   DWORD PTR [edi]
  405869:	arpl   WORD PTR [eax],bx
  40586b:	lahf   
  40586c:	stc    
  40586d:	outs   dx,BYTE PTR ds:[esi]
  40586e:	xchg   BYTE PTR [eax+0x704fe58d],ch
  405874:	mov    dh,bh
  405876:	mov    cl,0x13
  405878:	popa   
  405879:	pop    edi
  40587a:	xor    bl,BYTE PTR [esi]
  40587c:	or     ebx,DWORD PTR [eax]
  40587e:	add    BYTE PTR [esi+0x379700f0],ch
  405884:	outs   dx,BYTE PTR ds:[esi]
  405885:	ror    BYTE PTR [esi],cl
  405887:	add    al,0xb2
  405889:	push   eax
  40588a:	out    dx,eax
  40588b:	lods   eax,DWORD PTR ds:[esi]
  40588c:	adc    eax,0x2fb50db5
  405891:	push   edx
  405892:	lahf   
  405893:	adc    DWORD PTR [ecx-0x18ad986],esi
  405899:	(bad)  
  40589a:	ja     0x4058f5
  40589c:	lods   al,BYTE PTR ds:[esi]
  40589d:	cmp    al,0x91
  40589f:	mov    eax,0x5f690390
  4058a4:	pop    ds
  4058a5:	repz xor dl,BYTE PTR [ecx]
  4058a8:	jae    0x40582f
  4058aa:	repnz xchg ebx,ebx
  4058ad:	or     ebp,DWORD PTR [ebp-0x33]
  4058b0:	adc    al,0x99
  4058b2:	adc    esi,DWORD PTR [esp+eiz*4]
  4058b5:	fisub  DWORD PTR [edi+0x7a]
  4058b8:	mov    fs,WORD PTR [esi]
  4058ba:	icebp  
  4058bb:	mov    dh,BYTE PTR [eax+0x68affbaf]
  4058c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c2:	popf   
  4058c3:	jo     0x40586d
  4058c5:	mov    ds:0xd65b0331,eax
  4058ca:	addr16 push ebp
  4058cc:	outs   dx,DWORD PTR ds:[esi]
  4058cd:	and    bl,BYTE PTR [eax+0x23]
  4058d0:	add    cl,ah
  4058d2:	retf   
  4058d3:	push   0xb7c038bb
  4058d8:	xor    DWORD PTR [esi-0x398a7136],ebx
  4058de:	mov    fs,WORD PTR [ebp-0x6f]
  4058e1:	or     bh,al
  4058e3:	xlat   BYTE PTR ds:[ebx]
  4058e4:	pop    es
  4058e5:	jb     0x405899
  4058e7:	(bad)  
  4058e8:	cmc    
  4058e9:	mov    esi,0xd0919e0d
  4058ee:	lea    ecx,[esi]
  4058f0:	mov    esi,0x2c9dfa5d
  4058f5:	sti    
  4058f6:	imul   ebx,DWORD PTR [ebp+0x39],0xfffffff7
  4058fa:	and    dh,BYTE PTR [eax]
  4058fc:	in     eax,dx
  4058fd:	push   ecx
  4058fe:	xchg   ebx,eax
  4058ff:	je     0x4058e4
  405901:	loope  0x4058b8
  405903:	or     al,0xd6
  405905:	adc    BYTE PTR [edx+0x5e],ch
  405908:	and    DWORD PTR [esi-0x788e364],ecx
  40590e:	clc    
  40590f:	sbb    bl,BYTE PTR [edi-0x226cf789]
  405915:	inc    esp
  405916:	les    edi,FWORD PTR [edi+eax*4-0x66]
  40591a:	mov    al,0x61
  40591c:	jne    0x405937
  40591e:	call   0x5600ee47
  405923:	mov    dh,0xa2
  405925:	outs   dx,BYTE PTR ds:[esi]
  405926:	test   al,0xe2
  405928:	inc    ebx
  405929:	cmp    dl,BYTE PTR [ebp-0xff24245]
  40592f:	dec    edx
  405930:	ja     0x4058cf
  405932:	adc    eax,0xf29ff27f
  405937:	int3   
  405938:	and    ecx,DWORD PTR [esi-0x65024018]
  40593e:	mov    dl,0xa2
  405940:	arpl   WORD PTR [esp+esi*8-0x6d],cx
  405944:	data16 in al,0xbc
  405947:	or     dh,bl
  405949:	mov    eax,0x9053988b
  40594e:	and    ah,BYTE PTR [eax-0x47]
  405951:	add    ecx,DWORD PTR [ebp-0x313452f9]
  405957:	sub    dl,BYTE PTR [eax-0x12]
  40595a:	js     0x40595c
  40595c:	in     al,0xf1
  40595e:	dec    edi
  40595f:	shr    DWORD PTR [ebp+ecx*4-0x2b],cl
  405963:	jl     0x405976
  405965:	leave  
  405966:	sti    
  405967:	mov    bl,0x61
  405969:	jnp    0x4059ae
  40596b:	or     ebx,DWORD PTR [edi]
  40596d:	lahf   
  40596e:	adc    dh,BYTE PTR [ebx+0x5f]
  405971:	in     al,dx
  405972:	pusha  
  405973:	xchg   esp,eax
  405974:	out    0x81,al
  405976:	call   0x91c9:0xd0966d96
  40597d:	pop    ss
  40597e:	sbb    al,dh
  405980:	cld    
  405981:	sub    esi,DWORD PTR [edi+0x6a]
  405984:	sbb    al,ah
  405986:	jo     0x40592a
  405988:	je     0x405932
  40598a:	or     al,0x4a
  40598c:	xchg   esp,eax
  40598d:	test   eax,0xba3df2b0
  405992:	xchg   edx,eax
  405993:	and    DWORD PTR ds:0xea621cd6,esp
  405999:	outs   dx,DWORD PTR ds:[esi]
  40599a:	int    0x4f
  40599c:	daa    
  40599d:	stc    
  40599e:	push   es
  40599f:	lods   al,BYTE PTR ds:[esi]
  4059a0:	mov    ch,0x61
  4059a2:	ins    DWORD PTR es:[edi],dx
  4059a3:	jl     0x4059e3
  4059a5:	push   eax
  4059a6:	sub    dl,bh
  4059a8:	test   DWORD PTR [esi],edi
  4059aa:	retf   0x23d3
  4059ad:	add    DWORD PTR [ebx],esp
  4059af:	js     0x4059df
  4059b1:	jl     0x4059c7
  4059b3:	int3   
  4059b4:	add    al,BYTE PTR [eax]
  4059b6:	or     ebx,edx
  4059b8:	jno    0x405953
  4059ba:	cmp    BYTE PTR [edi+0x4cdf1002],al
  4059c0:	ins    BYTE PTR es:[edi],dx
  4059c1:	in     al,dx
  4059c2:	push   esp
  4059c3:	jb     0x4059b4
  4059c5:	xchg   esp,eax
  4059c6:	sbb    al,0xa2
  4059c8:	bound  ebx,QWORD PTR [edi]
  4059ca:	or     edx,DWORD PTR [edx+0x2d8ac12c]
  4059d0:	sub    DWORD PTR [ebp+0x35],esp
  4059d3:	mov    ecx,0xfcf333b8
  4059d8:	sbb    eax,0x5fd6309e
  4059dd:	cmp    BYTE PTR [ecx-0x1277d5c],dh
  4059e3:	and    al,0xbe
  4059e5:	and    bh,bl
  4059e7:	(bad)  
  4059e8:	loope  0x405a5d
  4059ea:	adc    ah,BYTE PTR [ebp+0x4090c816]
  4059f0:	loopne 0x4059fa
  4059f2:	pop    eax
  4059f3:	jmp    0xa910:0x4b86b6d6
  4059fa:	pop    ebx
  4059fb:	jle    0x4059ee
  4059fd:	xchg   esp,eax
  4059fe:	inc    ecx
  4059ff:	push   edx
  405a00:	data16 je 0x405a63
  405a03:	cmp    al,0x94
  405a05:	mov    ds:0x21b5a9f8,eax
  405a0a:	jbe    0x405a53
  405a0c:	jno    0x4059c9
  405a0e:	mov    esp,esi
  405a10:	sbb    DWORD PTR [eax],esi
  405a12:	addr16 mov ah,0xc4
  405a15:	mov    al,0xcf
  405a17:	dec    edi
  405a18:	push   esp
  405a19:	sbb    al,BYTE PTR [esp+esi*1+0x40]
  405a1d:	lea    edi,[edx+0x56]
  405a20:	inc    ecx
  405a21:	(bad)  
  405a22:	pop    edx
  405a23:	sub    bh,BYTE PTR [ebx+0x2c2ed41]
  405a29:	pop    ecx
  405a2a:	or     DWORD PTR [ecx+0x34e48aeb],ebp
  405a30:	push   ebx
  405a31:	push   0x57
  405a33:	mov    ds:0xe39dc6c0,eax
  405a38:	stos   DWORD PTR es:[edi],eax
  405a39:	out    dx,al
  405a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3b:	pop    eax
  405a3c:	adc    BYTE PTR [eax+0x63eaef8c],0x8a
  405a43:	jg     0x405a5e
  405a45:	or     DWORD PTR [esi+0x7a],ebx
  405a48:	test   DWORD PTR [esi],eax
  405a4a:	jmp    0x18b871b2
  405a4f:	or     al,0x62
  405a51:	pop    ebx
  405a52:	cwde   
  405a53:	push   ebp
  405a54:	xchg   esi,eax
  405a55:	pushf  
  405a56:	xor    bh,bl
  405a58:	aaa    
  405a59:	jae    0x405a4a
  405a5b:	sub    DWORD PTR [edi],ecx
  405a5d:	add    eax,0xd68805f6
  405a62:	cs (bad) 
  405a64:	imul   edx,DWORD PTR [edi-0x1],0x9b432cef
  405a6b:	inc    esi
  405a6c:	sti    
  405a6d:	ss out 0x4f,ax
  405a71:	xchg   BYTE PTR [eax+0x7c],dl
  405a74:	jp     0x405a76
  405a76:	ror    DWORD PTR [edi+0xe839ba7],0xa0
  405a7d:	adc    eax,0x951d72e7
  405a82:	mov    cl,0xe7
  405a84:	fwait
  405a85:	out    dx,al
  405a86:	jns    0x405a7a
  405a88:	test   eax,0x98de7f4b
  405a8d:	dec    eax
  405a8e:	push   fs
  405a90:	dec    ecx
  405a91:	(bad)  
  405a92:	cdq    
  405a93:	mov    ebx,0x440af6d2
  405a98:	jle    0x405af9
  405a9a:	sbb    DWORD PTR [esp+eax*1],esp
  405a9d:	and    dl,BYTE PTR [edx+ebx*2]
  405aa0:	aam    0x5
  405aa2:	add    edx,DWORD PTR [edi+0x72d3bea1]
  405aa8:	clc    
  405aa9:	ss aas 
  405aab:	lahf   
  405aac:	aam    0xa5
  405aae:	sub    ebp,DWORD PTR [ebp*1-0x3a4a0470]
  405ab5:	std    
  405ab6:	imul   ebp,DWORD PTR [eax],0x37
  405ab9:	or     esp,DWORD PTR ds:[edx]
  405abc:	sti    
  405abd:	test   eax,0x62de9192
  405ac2:	das    
  405ac3:	in     al,dx
  405ac4:	fild   DWORD PTR [esi]
  405ac6:	push   ecx
  405ac7:	mov    ebp,0x15e2d47f
  405acc:	mov    ecx,edi
  405ace:	lods   al,BYTE PTR ds:[esi]
  405acf:	jb     0x405ad4
  405ad1:	fist   WORD PTR [ebp+edx*1+0x6ff49d7c]
  405ad8:	out    0xc6,eax
  405ada:	and    DWORD PTR [ebx],eax
  405adc:	aaa    
  405add:	lds    ebx,FWORD PTR [esp+ebp*1+0x6c346366]
  405ae4:	xchg   edi,eax
  405ae5:	lahf   
  405ae6:	and    ebp,DWORD PTR [ebp+0x880d5e6]
  405aec:	mov    ?,WORD PTR [edx-0xdaceb47]
  405af2:	and    DWORD PTR [edx-0x78],0x9adc2fe1
  405af9:	mov    bl,0x29
  405afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afc:	jmp    0x4f51682b
  405b01:	xor    BYTE PTR [edi+0x7],cl
  405b04:	idiv   BYTE PTR [ebp-0x7cdef68b]
  405b0a:	xor    DWORD PTR [edi-0x53],esi
  405b0d:	mov    eax,ds:0x39942c10
  405b12:	cld    
  405b13:	cwde   
  405b14:	call   0x305f:0xdf1457ba
  405b1b:	imul   dl
  405b1d:	int    0x64
  405b1f:	sub    al,0xdb
  405b21:	mov    ds:0xff1495a1,eax
  405b26:	push   edi
  405b27:	inc    ecx
  405b28:	imul   edx,DWORD PTR [ebp+0x4c6ee1b9],0x55
  405b2f:	fcom   DWORD PTR [ebp+0x11]
  405b32:	adc    al,0xf1
  405b34:	mov    esi,0x7a7b0b72
  405b39:	loop   0x405b00
  405b3b:	push   ecx
  405b3c:	cmp    al,0x32
  405b3e:	arpl   WORD PTR [ecx+0x6cd4d2ce],ax
  405b44:	mov    BYTE PTR [esi+0xc],bl
  405b47:	mov    ds:0xc56b08ea,al
  405b4c:	and    edi,edx
  405b4e:	mov    ecx,0xbcd02044
  405b53:	push   esi
  405b54:	imul   esp,ebx,0x5b
  405b57:	push   0xffffffa9
  405b59:	or     cl,BYTE PTR [eax-0x13]
  405b5c:	cmp    ah,BYTE PTR [edi-0x70]
  405b5f:	clc    
  405b60:	mov    DWORD PTR [edx-0x54],esp
  405b63:	outs   dx,DWORD PTR ds:[esi]
  405b64:	test   BYTE PTR [edx-0x3e],0xfd
  405b68:	ja     0x405b40
  405b6a:	popa   
  405b6b:	adc    al,0x1b
  405b6d:	add    DWORD PTR ds:0x82d5ab3e,esi
  405b73:	mov    ecx,0xd90e7aee
  405b78:	dec    edi
  405b79:	mov    dl,0xb0
  405b7b:	fnsetpm(287 only) 
  405b7d:	retf   0x5c9e
  405b80:	jmp    0x405b89
  405b82:	pushf  
  405b83:	cli    
  405b84:	sbb    DWORD PTR [eax],0x2f1640ac
  405b8a:	shl    DWORD PTR [edi+0xb],0x10
  405b8e:	jns    0x405bd2
  405b90:	pop    es
  405b91:	imul   BYTE PTR [eax]
  405b93:	hlt    
  405b94:	dec    ecx
  405b95:	add    al,0x3d
  405b97:	adc    ch,BYTE PTR [eax]
  405b99:	jmp    0x3398:0x456856b9
  405ba0:	mul    DWORD PTR [ebp-0xf]
  405ba3:	adc    al,0xaa
  405ba5:	cs pop ss
  405ba7:	mov    ch,0x3d
  405ba9:	or     ah,ch
  405bab:	mov    edi,ecx
  405bad:	inc    ebx
  405bae:	fnstenv [edx]
  405bb0:	outs   dx,BYTE PTR ds:[esi]
  405bb1:	icebp  
  405bb2:	or     DWORD PTR [ebx+0x34aebf09],ecx
  405bb8:	enter  0xc2ae,0x66
  405bbc:	cmp    al,0x24
  405bbe:	sub    eax,0x4d3e60d0
  405bc3:	dec    ebp
  405bc4:	push   edx
  405bc5:	sbb    ch,ch
  405bc7:	sub    ch,cl
  405bc9:	test   eax,0x12d02f24
  405bce:	pop    eax
  405bcf:	mov    bh,0x32
  405bd1:	dec    esi
  405bd2:	nop
  405bd3:	aaa    
  405bd4:	cmp    ch,BYTE PTR [edx-0x28ca74d4]
  405bda:	aam    0xc
  405bdc:	cmp    dl,BYTE PTR [eax-0x580e3a57]
  405be2:	adc    eax,0x4d986d29
  405be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be8:	stos   BYTE PTR es:[edi],al
  405be9:	mov    ds:0x165aa231,eax
  405bee:	pop    ds
  405bef:	aaa    
  405bf0:	mov    al,ds:0x5b3d2d9
  405bf5:	les    esi,FWORD PTR cs:[esi]
  405bf8:	jmp    0xafe31a
  405bfd:	sbb    esp,DWORD PTR [ebx]
  405bff:	ss ja  0x405b92
  405c02:	in     al,dx
  405c03:	push   edx
  405c04:	enter  0xc929,0x21
  405c08:	retf   0x1687
  405c0b:	sbb    eax,0xa963731d
  405c10:	rcl    BYTE PTR [esi+0x3c01b8d8],cl
  405c16:	or     cl,BYTE PTR [ecx+ecx*2-0x79]
  405c1a:	call   0x107e:0xdf93720b
  405c21:	shl    DWORD PTR [ecx],0x8f
  405c24:	xchg   ebp,eax
  405c25:	pop    esp
  405c26:	in     al,dx
  405c27:	adc    ah,ah
  405c29:	je     0x405c15
  405c2b:	dec    edx
  405c2c:	arpl   WORD PTR [ecx-0x57],si
  405c2f:	add    eax,0xfe80d8ce
  405c34:	jns    0x405bbc
  405c36:	mov    esi,0xcd8ad067
  405c3b:	loope  0x405c28
  405c3d:	js     0x405c9a
  405c3f:	push   esp
  405c40:	pop    eax
  405c41:	sbb    DWORD PTR [ecx-0x22d24111],eax
  405c47:	dec    ebp
  405c48:	in     al,0xe1
  405c4a:	jb     0x405c58
  405c4c:	jmp    0x7d3:0x224fdc11
  405c53:	clc    
  405c54:	outs   dx,DWORD PTR ds:[esi]
  405c55:	xchg   ebp,eax
  405c56:	xor    esi,DWORD PTR [edi-0x5f1a5386]
  405c5c:	ss push edi
  405c5e:	pop    esi
  405c5f:	mov    eax,DWORD PTR [esi+0x11]
  405c62:	outs   dx,BYTE PTR ds:[esi]
  405c63:	jno    0x405c6d
  405c65:	xchg   eax,ebx
  405c67:	mov    es,ecx
  405c69:	sub    DWORD PTR [edi-0x29ced4c6],eax
  405c6f:	jg     0x405c5d
  405c71:	mov    al,0xfc
  405c73:	mov    eax,ds:0x3ddb7923
  405c78:	dec    edi
  405c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c7a:	xchg   esp,eax
  405c7b:	adc    ah,BYTE PTR [ebx-0x3b2397f7]
  405c81:	sti    
  405c82:	(bad)  
  405c83:	mov    ah,0x59
  405c85:	mov    BYTE PTR [edx+0x7fa86140],al
  405c8b:	cwde   
  405c8c:	lds    eax,FWORD PTR ds:0xb2e377ba
  405c92:	shr    bl,0x3e
  405c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c96:	mov    al,0x7c
  405c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c99:	xchg   ebx,eax
  405c9a:	add    eax,0x62e4a4c9
  405c9f:	test   al,0xf0
  405ca1:	push   ebx
  405ca2:	jp     0x405c84
  405ca4:	jecxz  0x405c73
  405ca6:	cwde   
  405ca7:	mov    DWORD PTR [ecx+0x78],edi
  405caa:	cld    
  405cab:	cli    
  405cac:	loope  0x405c8e
  405cae:	jnp    0x405c7a
  405cb0:	add    bl,BYTE PTR [ecx+0x6f603e78]
  405cb6:	cmp    al,0x76
  405cb8:	in     eax,dx
  405cb9:	hlt    
  405cba:	sbb    al,0x72
  405cbc:	ret    0x41e0
  405cbf:	cdq    
  405cc0:	add    DWORD PTR [ebx-0x3d117915],esi
  405cc6:	loopne 0x405ce2
  405cc8:	cli    
  405cc9:	mov    ecx,DWORD PTR [edi]
  405ccb:	inc    ebx
  405ccc:	cli    
  405ccd:	stc    
  405cce:	stc    
  405ccf:	loope  0x405cdd
  405cd1:	xor    ah,ah
  405cd3:	add    eax,0xbf29e5b
  405cd8:	adc    esi,ecx
  405cda:	ins    BYTE PTR es:[edi],dx
  405cdb:	xor    eax,0x45857a60
  405ce0:	in     al,0xaa
  405ce2:	loopne 0x405d36
  405ce4:	ds popf 
  405ce6:	cmp    ecx,ecx
  405ce8:	test   BYTE PTR [edx],0xd
  405ceb:	pop    DWORD PTR [esi-0x53]
  405cee:	mov    dl,0x36
  405cf0:	cld    
  405cf1:	sub    ecx,DWORD PTR es:[eax]
  405cf4:	adc    BYTE PTR [ecx+esi*2+0x5794e5de],0x31
  405cfc:	xor    bh,ah
  405cfe:	push   0xffffffca
  405d00:	rol    DWORD PTR [edi+eiz*2+0x73fa60d4],1
  405d07:	and    dh,BYTE PTR [eax-0x1e]
  405d0a:	xchg   edx,edx
  405d0c:	imul   ecx,DWORD PTR [esi],0x6
  405d0f:	(bad)  
  405d10:	cld    
  405d11:	pop    ss
  405d12:	les    ebx,FWORD PTR [edx+0x15f2ce33]
  405d18:	pop    ebx
  405d19:	push   esi
  405d1a:	push   cs
  405d1b:	pop    ebx
  405d1c:	rol    BYTE PTR [esi],cl
  405d1e:	fs jmp 0xb768:0x7d5568a0
  405d26:	or     BYTE PTR [ecx+0xb],0x93
  405d2a:	out    0x88,eax
  405d2c:	jg     0x405d27
  405d2e:	rcl    BYTE PTR [esp+ebx*4-0x72292db0],0xdc
  405d36:	dec    esi
  405d37:	add    edi,DWORD PTR [edi+0x32]
  405d3a:	mov    edx,0x711915ac
  405d3f:	pop    esi
  405d40:	iret   
  405d41:	sbb    eax,0xad6c4bd9
  405d46:	cs pop edi
  405d48:	cli    
  405d49:	in     al,dx
  405d4a:	fist   WORD PTR [edx]
  405d4c:	push   esi
  405d4d:	loop   0x405dcc
  405d4f:	xor    ebx,ebx
  405d51:	repnz mov cl,0x2f
  405d54:	dec    esi
  405d55:	jb     0x405dbe
  405d57:	aas    
  405d58:	and    eax,0x13859da6
  405d5d:	ins    BYTE PTR es:[edi],dx
  405d5e:	leave  
  405d5f:	lds    ecx,FWORD PTR ds:0x479d3832
  405d65:	or     edx,DWORD PTR [ecx+0x628a276d]
  405d6b:	or     al,0x8c
  405d6d:	mov    DWORD PTR [ecx+0x22],esi
  405d70:	push   0xa146f0e4
  405d75:	sub    DWORD PTR [esp+ebx*2-0x5a],ecx
  405d79:	gs stos DWORD PTR es:[edi],eax
  405d7b:	js     0x405de4
  405d7d:	(bad)  
  405d7e:	stos   DWORD PTR es:[edi],eax
  405d7f:	pushf  
  405d80:	addr16 jae 0x405dd9
  405d83:	dec    ebp
  405d84:	and    eax,0xc50f6f16
  405d89:	inc    esp
  405d8a:	and    ebx,ebx
  405d8c:	mov    DWORD PTR [ebp+0xd4d9a39],ebp
  405d92:	jge    0x405e0f
  405d94:	push   esi
  405d95:	cmp    ah,BYTE PTR [esi+0x8cf3032]
  405d9b:	icebp  
  405d9c:	xor    eax,0xfd1ef556
  405da1:	xchg   DWORD PTR [esi-0x75],edx
  405da4:	xchg   DWORD PTR [edi+0x68],ebp
  405da7:	fs cdq 
  405da9:	js     0x405db5
  405dab:	jecxz  0x405d85
  405dad:	int3   
  405dae:	imul   edi,esp,0x4e
  405db1:	sar    BYTE PTR [ecx],0x5
  405db4:	xchg   BYTE PTR [esp+edx*4+0x35],bl
  405db8:	or     eax,0xd49195d5
  405dbd:	fld    QWORD PTR [esi-0x4ffce77f]
  405dc3:	xchg   ecx,eax
  405dc4:	cmp    eax,0x42348ad9
  405dc9:	or     eax,0xaba2c75e
  405dce:	mov    ecx,0x38f119fd
  405dd3:	push   edx
  405dd4:	stc    
  405dd5:	cmp    ch,BYTE PTR [ebx+0x64359b46]
  405ddb:	aam    0x27
  405ddd:	out    dx,eax
  405dde:	jp     0x405d67
  405de0:	add    al,0x83
  405de2:	mov    dl,0x8d
  405de4:	add    BYTE PTR [edx],cl
  405de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405de7:	retf   
  405de8:	pop    es
  405de9:	div    ebp
  405deb:	stos   DWORD PTR es:[edi],eax
  405dec:	push   ss
  405ded:	(bad)  
  405dee:	loop   0x405e24
  405df0:	sbb    cl,BYTE PTR [edx-0x1f]
  405df3:	cmp    ch,BYTE PTR [edx]
  405df5:	pop    esi
  405df6:	std    
  405df7:	(bad)  
  405df8:	mov    al,ds:0x761cbf5c
  405dfd:	aam    0x9b
  405dff:	push   ebx
  405e00:	cld    
  405e01:	mov    ebx,0xd6437341
  405e06:	pop    edi
  405e07:	out    dx,al
  405e08:	addr16 dec ebx
  405e0a:	ror    BYTE PTR [edi-0x1],0xe
  405e0e:	call   0xd8b8:0xca9c966
  405e15:	imul   eax,DWORD PTR [eax],0x31
  405e18:	mov    DWORD PTR [ecx],edi
  405e1a:	xchg   ebx,eax
  405e1b:	push   edi
  405e1c:	push   0x5e07397a
  405e21:	cld    
  405e22:	fidiv  WORD PTR [esi+0x47]
  405e25:	call   0xb3d6:0x5a6058a6
  405e2c:	adc    bl,BYTE PTR [edi-0xdfd1517]
  405e32:	cmp    eax,0xa57fc3d0
  405e37:	mov    edx,0x4a8ae777
  405e3c:	fdivr  st,st(2)
  405e3e:	inc    ebp
  405e3f:	dec    ecx
  405e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e41:	mov    ch,ch
  405e43:	ret    
  405e44:	mov    ebx,0x67a9f0ee
  405e49:	sahf   
  405e4a:	xor    ebp,esi
  405e4c:	loope  0x405e2e
  405e4e:	adc    BYTE PTR [ecx],bh
  405e50:	inc    ebx
  405e51:	call   0x4f329e76
  405e56:	sub    esi,ecx
  405e58:	xor    BYTE PTR [esi-0x23743abc],ah
  405e5e:	mov    al,ds:0x124894d0
  405e63:	lock outs dx,DWORD PTR fs:[esi]
  405e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e67:	push   esi
  405e68:	jl     0x405e38
  405e6a:	adc    eax,0xd3adf1ec
  405e6f:	sbb    cl,BYTE PTR [ecx+0x5f7c86c3]
  405e75:	out    0x8e,eax
  405e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e79:	dec    ecx
  405e7a:	xchg   edx,eax
  405e7b:	je     0x405eb9
  405e7d:	pop    ebp
  405e7e:	rcr    BYTE PTR [edi],1
  405e80:	xchg   esp,eax
  405e81:	or     ah,BYTE PTR [esi-0x79]
  405e84:	add    al,0x9d
  405e86:	and    DWORD PTR [esi-0x7d],esp
  405e89:	cld    
  405e8a:	fucom  st(1)
  405e8c:	cli    
  405e8d:	jne    0x405e54
  405e8f:	mov    esp,0x5c4ada5d
  405e94:	lock push eax
  405e96:	es fcmovb st,st(1)
  405e99:	aam    0xe1
  405e9b:	pop    ebp
  405e9c:	outs   dx,DWORD PTR ds:[esi]
  405e9d:	loop   0x405e6e
  405e9f:	mov    ah,0x5c
  405ea1:	mov    dl,0xb5
  405ea3:	sbb    BYTE PTR [edi],0xf2
  405ea6:	xchg   ebp,eax
  405ea7:	jmp    0x405ea8
  405ea9:	cdq    
  405eaa:	and    al,0x90
  405eac:	gs jmp 0x3de6:0x9f092a53
  405eb4:	push   cs
  405eb5:	and    al,0x59
  405eb7:	sbb    al,0xda
  405eb9:	jae    0x405f17
  405ebb:	dec    esp
  405ebc:	add    DWORD PTR [ebx],ebx
  405ebe:	popf   
  405ebf:	es push ss
  405ec1:	add    al,0xfa
  405ec3:	cld    
  405ec4:	test   al,0x3d
  405ec6:	daa    
  405ec7:	shl    eax,1
  405ec9:	or     ebx,DWORD PTR [ecx+edx*8]
  405ecc:	data16 icebp 
  405ece:	gs retf 0xd89c
  405ed2:	cdq    
  405ed3:	push   ds
  405ed4:	adc    ebp,ecx
  405ed6:	jo     0x405f24
  405ed8:	inc    eax
  405ed9:	dec    edx
  405eda:	xchg   ecx,eax
  405edb:	pushf  
  405edc:	retf   
  405edd:	push   edi
  405ede:	push   esi
  405edf:	inc    esp
  405ee0:	and    BYTE PTR [ecx-0x716a6110],0x61
  405ee7:	pop    ebx
  405ee8:	xchg   esp,eax
  405ee9:	push   0x7b
  405eeb:	cmp    edi,DWORD PTR [edi]
  405eed:	out    0xa,al
  405eef:	pop    ebp
  405ef0:	je     0x405f2d
  405ef2:	xchg   edx,eax
  405ef3:	jbe    0x405f44
  405ef5:	ins    BYTE PTR es:[edi],dx
  405ef6:	xlat   BYTE PTR ds:[ebx]
  405ef7:	jl     0x405ed0
  405ef9:	aad    0x1c
  405efb:	aas    
  405efc:	ss jl  0x405edf
  405eff:	push   edx
  405f00:	jle    0x405f07
  405f02:	xor    ebx,edx
  405f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f05:	sub    edx,DWORD PTR [edi-0x17]
  405f08:	adc    eax,0xb2d19c1d
  405f0d:	sbb    BYTE PTR [edx+eax*2+0x3c783095],bh
  405f14:	scas   al,BYTE PTR es:[edi]
  405f15:	aaa    
  405f16:	hlt    
  405f17:	gs (bad) 
  405f19:	cmp    al,0x54
  405f1b:	xchg   edi,eax
  405f1c:	(bad)
  405f1f:	mov    ebx,DWORD PTR [ecx]
  405f21:	gs jmp 0x405ec5
  405f24:	test   esi,eax
  405f26:	mov    esp,0x7a491b80
  405f2b:	add    BYTE PTR [edx-0x17df0f0b],dh
  405f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f32:	sti    
  405f33:	or     BYTE PTR [ebx-0x7b],ah
  405f36:	inc    esi
  405f37:	shr    DWORD PTR [ebx+edx*4-0x62f9a97a],cl
  405f3e:	aas    
  405f3f:	push   ebp
  405f40:	sahf   
  405f41:	es jb  0x5a13747d
  405f48:	jne    0x405fb0
  405f4a:	dec    ebx
  405f4b:	xor    al,0x5
  405f4d:	jp     0x405fba
  405f4f:	and    dl,BYTE PTR [esi+0x73dd337b]
  405f55:	push   0xffffffac
  405f57:	nop
  405f58:	xchg   ecx,eax
  405f59:	mov    ebp,0x2ac44fc0
  405f5e:	shl    edi,cl
  405f60:	mov    esp,0xa7a4fd52
  405f65:	cmp    ch,BYTE PTR [ecx+0x77]
  405f68:	cmp    DWORD PTR [eax-0x44],eax
  405f6b:	mov    ecx,0x5acd0e64
  405f70:	sbb    DWORD PTR [ecx-0x333231ca],edx
  405f76:	js     0x405f4d
  405f78:	inc    esi
  405f79:	or     BYTE PTR [edx+0x7f],ch
  405f7c:	retf   
  405f7d:	shl    BYTE PTR [ebx+0x22baaa8f],0x6f
  405f84:	repz add BYTE PTR [edx+0x6f],bh
  405f88:	jle    0x405fac
  405f8a:	pop    esp
  405f8b:	and    eax,0xed72b5c4
  405f90:	add    eax,0x62491cd1
  405f95:	mov    DWORD PTR [edx+0x6355c9a2],edi
  405f9b:	push   es
  405f9c:	xchg   ebp,eax
  405f9d:	aas    
  405f9e:	cli    
  405f9f:	mov    cl,0x18
  405fa1:	mov    bl,0xde
  405fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa4:	xor    eax,0x9598ddce
  405fa9:	sub    eax,0x8375dd04
  405fae:	mov    edx,0x72de4054
  405fb3:	inc    esi
  405fb4:	les    ebx,FWORD PTR [ecx-0x78]
  405fb7:	ror    DWORD PTR [eax+0x28],0x38
  405fbb:	aam    0x26
  405fbd:	pop    ecx
  405fbe:	fisttp DWORD PTR [ebp-0x14]
  405fc1:	test   DWORD PTR [ebx-0x1bf35a07],edx
  405fc7:	push   esi
  405fc8:	stos   BYTE PTR es:[edi],al
  405fc9:	mov    edx,0x5c745a95
  405fce:	ja     0x405fe5
  405fd0:	stos   BYTE PTR es:[edi],al
  405fd1:	retf   0xed64
  405fd4:	and    DWORD PTR [ebx-0xa],0x391ceafd
  405fdb:	inc    esi
  405fdc:	loope  0x405ff9
  405fde:	ds cwde 
  405fe0:	adc    eax,0xb9a35aab
  405fe5:	out    dx,eax
  405fe6:	cs pop esi
  405fe8:	mov    dh,0xca
  405fea:	outs   dx,BYTE PTR ds:[esi]
  405feb:	jmp    DWORD PTR [esi]
  405fed:	add    bh,BYTE PTR [ecx+ebp*1+0x17]
  405ff1:	ja     0x405fb6
  405ff3:	scas   eax,DWORD PTR es:[edi]
  405ff4:	sti    
  405ff5:	push   0x49b6dd8
  405ffa:	into   
  405ffb:	sbb    edi,DWORD PTR [ecx]
  405ffd:	dec    edx
  405ffe:	ins    BYTE PTR es:[edi],dx
  405fff:	cmc    
  406000:	add    eax,0xdef5dfa4
  406005:	sub    al,0xe7
  406007:	inc    edi
  406008:	inc    ecx
  406009:	jmp    0xb301:0x3d781aba
  406010:	dec    edi
  406011:	dec    ebx
  406012:	cld    
  406013:	sub    BYTE PTR [eax],ch
  406015:	push   cs
  406016:	fwait
  406017:	xlat   BYTE PTR ds:[ebx]
  406018:	cmp    DWORD PTR [edi+ebx*4],edi
  40601b:	dec    edx
  40601c:	imul   edx,DWORD PTR [ecx-0x75],0x5533c5a3
  406023:	scas   al,BYTE PTR es:[edi]
  406024:	dec    edi
  406025:	add    BYTE PTR [eax],0x99
  406028:	xor    al,0x59
  40602a:	push   ds
  40602b:	rol    BYTE PTR fs:[ecx+edi*8-0x60fb8df4],0x69
  406034:	pop    edi
  406035:	inc    ecx
  406036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406037:	inc    ebp
  406038:	je     0x40606e
  40603a:	sub    eax,DWORD PTR [ebp-0x5d]
  40603d:	xor    eax,DWORD PTR [eax]
  40603f:	cs pop ecx
  406041:	mov    ch,0xcb
  406043:	jl     0x406030
  406045:	shl    DWORD PTR [edx-0x2f],0x38
  406049:	out    0x0,al
  40604b:	push   ds
  40604c:	jge    0x405fef
  40604e:	jp     0x406073
  406050:	pop    es
  406051:	add    esp,DWORD PTR [ebx-0x6f7aa7d8]
  406057:	and    eax,0x41693b4e
  40605c:	in     al,dx
  40605d:	sbb    DWORD PTR [ebx+0x484ded9],ebp
  406063:	shr    DWORD PTR [edx-0x63abaefe],1
  406069:	fcomp  st(1)
  40606b:	fiadd  WORD PTR [esi-0x3fe397ed]
  406071:	or     bh,BYTE PTR gs:[edx+0x9]
  406075:	loope  0x40600e
  406077:	fwait
  406078:	pop    edx
  406079:	aad    0x11
  40607b:	repz and cl,BYTE PTR [ebx-0x2e]
  40607f:	pop    esp
  406080:	ins    BYTE PTR es:[edi],dx
  406081:	sub    al,0x3f
  406083:	or     al,0x78
  406085:	lods   al,BYTE PTR ds:[esi]
  406086:	xor    DWORD PTR [esi-0x78130555],0x7bdd0a5e
  406090:	xor    al,0xd9
  406092:	nop
  406093:	aaa    
  406094:	icebp  
  406095:	sbb    bh,cl
  406097:	test   eax,0x50273793
  40609c:	add    ecx,DWORD PTR [edi+edi*1-0x6c156963]
  4060a3:	inc    esp
  4060a4:	aaa    
  4060a5:	hlt    
  4060a6:	and    ebx,esp
  4060a8:	mov    eax,DWORD PTR [edx]
  4060aa:	and    bl,cl
  4060ac:	fbstp  TBYTE PTR [edx+0x50ed12ec]
  4060b2:	cmp    BYTE PTR [eax],bh
  4060b4:	(bad)  
  4060b5:	gs xor eax,0xb8d35994
  4060bb:	rcl    BYTE PTR [ebp+0x69],0xb
  4060bf:	cmp    eax,0xd0a37227
  4060c4:	js     0x40611d
  4060c6:	and    al,0xc5
  4060c8:	mov    esi,0x76f9982d
  4060cd:	push   ss
  4060ce:	arpl   WORD PTR [esi],sp
  4060d0:	gs test al,0x8b
  4060d3:	ss (bad) 
  4060d6:	push   eax
  4060d7:	(bad)  
  4060d8:	mov    bh,0x3a
  4060da:	pop    eax
  4060db:	test   al,0x45
  4060dd:	mov    edi,DWORD PTR [edi+0x78]
  4060e0:	shr    esi,cl
  4060e2:	sbb    eax,0x8e8d5bc5
  4060e7:	xor    DWORD PTR [edi+0x79],0x74
  4060eb:	dec    edi
  4060ec:	mov    esp,0x2200233c
  4060f1:	imul   edx,DWORD PTR es:[esi+0x62],0x1b
  4060f6:	add    ah,ah
  4060f8:	mov    ebp,0x65fa4234
  4060fd:	(bad)  [eax+0x4a]
  406100:	and    eax,0x795e8021
  406105:	and    bl,BYTE PTR [ecx+edi*4+0x75]
  406109:	adc    cl,BYTE PTR [edx]
  40610b:	pop    ds
  40610c:	out    dx,eax
  40610d:	ret    
  40610e:	xchg   BYTE PTR ds:0xff5a7dbe,al
  406114:	mov    dl,0x96
  406116:	jp     0x4060b6
  406118:	pop    ecx
  406119:	(bad)  
  40611a:	cli    
  40611b:	sub    BYTE PTR [esi+0x3bd9fe07],0x1f
  406122:	pop    es
  406123:	cmp    eax,0xe11ee1f5
  406128:	add    DWORD PTR [esi+0x4],esi
  40612b:	pusha  
  40612c:	mov    al,ds:0x8bae95e1
  406131:	lods   al,BYTE PTR ds:[esi]
  406132:	push   ds
  406133:	aaa    
  406134:	js     0x40612f
  406136:	cld    
  406137:	sub    esp,ebx
  406139:	mov    ah,0x9c
  40613b:	sub    ebx,edx
  40613d:	cmp    eax,0x6d71ba11
  406142:	cmp    BYTE PTR [ebx-0x4d],al
  406145:	int    0xf4
  406147:	data16 sbb BYTE PTR [ecx],ch
  40614a:	push   ds
  40614b:	add    DWORD PTR [ecx+0x4b],edi
  40614e:	fs jecxz 0x4061cb
  406151:	mov    ch,0xe7
  406153:	gs pop edx
  406155:	popa   
  406156:	pushf  
  406157:	cdq    
  406158:	pushf  
  406159:	cmp    DWORD PTR [edx],ebp
  40615b:	push   ecx
  40615c:	xchg   ebp,eax
  40615d:	std    
  40615e:	in     eax,0xb5
  406160:	sbb    ch,dh
  406162:	sub    DWORD PTR [ebx+eiz*8-0x77c6bb2b],ebp
  406169:	mov    eax,eax
  40616b:	jns    0x4061c5
  40616d:	jns    0x406104
  40616f:	into   
  406170:	cwde   
  406171:	dec    eax
  406172:	xlat   BYTE PTR ds:[ebx]
  406173:	pop    es
  406174:	int3   
  406175:	mov    BYTE PTR [ecx],bh
  406177:	ror    DWORD PTR [edx-0x48979740],0x7d
  40617e:	ins    BYTE PTR es:[edi],dx
  40617f:	test   al,0x34
  406181:	xchg   DWORD PTR [ecx-0x4b6e0d8d],ebp
  406187:	leave  
  406188:	sbb    cl,0xa3
  40618b:	enter  0xa11c,0x33
  40618f:	pop    edi
  406190:	or     dl,BYTE PTR [ebp+0x75]
  406193:	int3   
  406194:	jo     0x40619b
  406196:	xor    eax,0x6e56d0ca
  40619b:	jl     0x40619a
  40619d:	out    0xe4,eax
  40619f:	cmp    edx,DWORD PTR [edx+eax*8]
  4061a2:	inc    edx
  4061a3:	jnp    0x406164
  4061a5:	stc    
  4061a6:	nop
  4061a7:	retf   0x98a7
  4061aa:	addr16 das 
  4061ac:	sub    al,0xbe
  4061ae:	mov    dl,0x94
  4061b0:	scas   ax,WORD PTR es:[edi]
  4061b2:	sub    BYTE PTR [ebx+0x6be153f6],0x5a
  4061b9:	and    al,0xfd
  4061bb:	cwde   
  4061bc:	cwde   
  4061bd:	and    ax,0x423b
  4061c1:	adc    eax,0x2b954c70
  4061c6:	pop    ecx
  4061c7:	adc    esi,DWORD PTR [ebx-0x67]
  4061ca:	pop    edi
  4061cb:	fwait
  4061cc:	xchg   edx,eax
  4061cd:	push   0xffffffd6
  4061cf:	sahf   
  4061d0:	add    dl,bh
  4061d2:	repnz or al,0xb5
  4061d5:	push   0x7735dd52
  4061da:	lea    ebx,[edx]
  4061dc:	dec    ebp
  4061dd:	mov    WORD PTR [esp+ebx*4-0x1dceda6a],gs
  4061e4:	int3   
  4061e5:	fisubr WORD PTR [edi+0x3c]
  4061e8:	jmp    0x8dd29b08
  4061ed:	mov    ds:0x9ad23354,eax
  4061f2:	or     ebx,ebp
  4061f4:	dec    edx
  4061f5:	or     al,0x76
  4061f7:	js     0x406236
  4061f9:	jp     0x40622b
  4061fb:	repnz and DWORD PTR [eax],edi
  4061fe:	mov    ds:0x42819b06,eax
  406203:	(bad)  
  406204:	cmp    DWORD PTR [ebx+ecx*1+0x3c],esp
  406208:	gs adc eax,0xaac0acee
  40620e:	inc    edx
  40620f:	xchg   esp,eax
  406210:	mov    cl,0xcb
  406212:	cmc    
  406213:	les    ecx,FWORD PTR [eax+eax*2]
  406216:	arpl   WORD PTR [esi-0x2a3e253b],cx
  40621c:	test   eax,0xee35b48a
  406221:	(bad)  
  406222:	arpl   WORD PTR [edx],bx
  406224:	push   ss
  406225:	sub    BYTE PTR [ebp-0x18],cl
  406228:	test   al,0x3e
  40622a:	hlt    
  40622b:	jp     0x4061b0
  40622d:	xchg   esp,eax
  40622e:	rcr    DWORD PTR ds:0x37a16d2e,0xa5
  406235:	sbb    al,0x39
  406237:	and    BYTE PTR [esi],al
  406239:	xor    eax,0x29fae4eb
  40623e:	and    BYTE PTR [esi-0x27],ah
  406241:	jp     0x4062aa
  406243:	sub    eax,0x289876f2
  406248:	enter  0x5dd3,0x91
  40624c:	push   edi
  40624d:	xchg   ecx,eax
  40624e:	cmp    DWORD PTR [ebp+eiz*4+0x73cdcc32],eax
  406255:	pusha  
  406256:	xchg   ebx,eax
  406257:	and    edx,DWORD PTR [edx+ecx*1+0x67075423]
  40625e:	das    
  40625f:	retf   0xc34d
  406262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406263:	jnp    0xf627aa91
  406269:	add    edi,edi
  40626b:	xor    ebx,ebx
  40626d:	stc    
  40626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40626f:	fmul   st(6),st
  406271:	shl    BYTE PTR [esi-0x6e660686],1
  406277:	sbb    eax,DWORD PTR [esi]
  406279:	repz dec edi
  40627b:	inc    edx
  40627c:	mov    cl,0x3e
  40627e:	or     BYTE PTR ds:0x124ec737,al
  406284:	and    eax,0xcad3d263
  406289:	mov    dh,0xa0
  40628b:	lods   eax,DWORD PTR ds:[esi]
  40628c:	jp     0x4062d2
  40628e:	add    DWORD PTR [ebp+0x19dbfb76],esp
  406294:	mov    DWORD PTR [ebx-0x794c446e],esi
  40629a:	cmp    esi,DWORD PTR [esi]
  40629c:	push   0x1251a3a2
  4062a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062a2:	daa    
  4062a3:	iret   
  4062a4:	mov    edi,DWORD PTR [edx+0x0]
  4062a7:	inc    ebp
  4062a8:	xchg   edx,eax
  4062a9:	not    BYTE PTR [ecx-0x12]
  4062ac:	add    ebx,ebx
  4062ae:	pop    ss
  4062af:	cmp    al,0x4f
  4062b1:	sub    eax,0xc305ad86
  4062b6:	test   al,0x5
  4062b8:	mov    edi,0xaaaedd75
  4062bd:	inc    ebx
  4062be:	sbb    BYTE PTR [esi+0x62207635],bh
  4062c4:	jnp    0x406335
  4062c6:	sbb    BYTE PTR [eax+eiz*2+0x73],0x8
  4062cb:	mov    bl,0xa3
  4062cd:	clc    
  4062ce:	or     al,0xb6
  4062d0:	mov    al,BYTE PTR [edi]
  4062d2:	push   ds
  4062d3:	scas   al,BYTE PTR es:[edi]
  4062d4:	dec    ebx
  4062d5:	add    ebp,DWORD PTR [edi-0x3b]
  4062d8:	inc    ecx
  4062d9:	jnp    0x406331
  4062db:	mov    cl,0x47
  4062dd:	sbb    DWORD PTR [edi],0x66a58357
  4062e3:	daa    
  4062e4:	jg     0x4062ff
  4062e6:	ror    DWORD PTR [edx+0x29d57038],1
  4062ec:	xor    eax,0xcc648a28
  4062f1:	add    eax,0x3a0869c5
  4062f6:	bound  esi,QWORD PTR [ecx]
  4062f8:	jae    0x406348
  4062fa:	rcl    BYTE PTR [ebx+0x4],0xb3
  4062fe:	aas    
  4062ff:	pop    edi
  406300:	aas    
  406301:	adc    al,0xbc
  406303:	(bad)  
  406304:	ins    BYTE PTR es:[edi],dx
  406305:	mov    ebx,0x3ca4e7c9
  40630a:	shl    DWORD PTR [esi-0x4e3fa14c],cl
  406310:	inc    eax
  406311:	push   ecx
  406312:	out    0x84,eax
  406314:	and    BYTE PTR [esi+0x4d],dh
  406317:	xor    al,0xb9
  406319:	arpl   WORD PTR [ebx+0x7d],di
  40631c:	adc    al,0xf6
  40631e:	pusha  
  40631f:	mov    eax,ds:0x6e571bc9
  406324:	sbb    al,0x2e
  406326:	loopne 0x40637c
  406328:	add    DWORD PTR [ecx+0x2d],ecx
  40632b:	push   DWORD PTR [ecx-0x3e9f2201]
  406331:	mov    bh,0x72
  406333:	mov    ds:0xd145ab33,eax
  406338:	outs   dx,DWORD PTR ds:[esi]
  406339:	je     0x406353
  40633b:	lahf   
  40633c:	xlat   BYTE PTR ds:[ebx]
  40633d:	out    dx,al
  40633e:	mov    WORD PTR [edx+edi*2-0x2c1c28f0],ss
  406345:	pushf  
  406346:	aaa    
  406347:	cmc    
  406348:	dec    ecx
  406349:	adc    BYTE PTR [ebp-0x2bbf9398],bl
  40634f:	cmp    al,0xf3
  406351:	and    bl,bh
  406353:	(bad)  
  406355:	or     esi,DWORD PTR [edx-0x2da7b766]
  40635b:	adc    esp,DWORD PTR [ecx+0x7d]
  40635e:	add    al,0xf4
  406360:	outs   dx,BYTE PTR ds:[esi]
  406362:	es in  al,dx
  406364:	push   cs
  406365:	mov    dh,0x54
  406367:	in     eax,dx
  406368:	sbb    eax,0xe713a26e
  40636d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40636e:	pusha  
  40636f:	call   0x6da4:0x97dd2c94
  406376:	and    DWORD PTR [edi+0x817e81c],esp
  40637c:	je     0x40634c
  40637e:	inc    esp
  40637f:	or     esi,esi
  406381:	mov    al,0xd0
  406383:	xor    ebp,DWORD PTR [esi]
  406385:	adc    DWORD PTR [esi],eax
  406387:	push   eax
  406388:	xchg   esp,eax
  406389:	mov    edx,0x4df6dc98
  40638e:	sbb    al,BYTE PTR [edx-0x21]
  406391:	xchg   BYTE PTR [edi-0x5b],al
  406394:	stc    
  406395:	pop    ss
  406396:	and    BYTE PTR ds:0x99f2de42,bh
  40639c:	mov    dh,BYTE PTR [ebx+0x70]
  40639f:	mov    DWORD PTR [edx],edi
  4063a1:	cmp    DWORD PTR [esi],eax
  4063a3:	sbb    edx,0x410dbe66
  4063a9:	jge    0x4063df
  4063ab:	stos   DWORD PTR es:[edi],eax
  4063ac:	cmc    
  4063ad:	sbb    DWORD PTR [edx+0x4cb2a29e],esi
  4063b3:	dec    esp
  4063b4:	fild   DWORD PTR [ecx+0x17]
  4063b7:	cmp    dl,dh
  4063b9:	fsubr  st,st(2)
  4063bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063bc:	jmp    0x5c06:0xc37a8bc7
  4063c3:	into   
  4063c4:	pop    edx
  4063c5:	lds    edi,FWORD PTR [ebx]
  4063c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c8:	mov    eax,0x2e9785ce
  4063cd:	je     0x406366
  4063cf:	aam    0x3e
  4063d1:	xchg   edi,eax
  4063d2:	es inc ebx
  4063d4:	aaa    
  4063d5:	xchg   BYTE PTR [edx+0x50],al
  4063d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063d9:	mov    esi,DWORD PTR [eax+edi*4]
  4063dc:	sub    al,0xd2
  4063de:	outs   dx,BYTE PTR ds:[esi]
  4063df:	repnz daa 
  4063e1:	clc    
  4063e2:	pop    ds
  4063e3:	popf   
  4063e4:	jno    0x4063c9
  4063e6:	or     ah,BYTE PTR [esi]
  4063e8:	aad    0xd0
  4063ea:	xor    BYTE PTR [ebx+ecx*8+0x69],0xf4
  4063ef:	pop    dx
  4063f1:	xchg   ebp,eax
  4063f2:	or     eax,0x279a0bb9
  4063f7:	(bad)  
  4063f8:	pushw  es
  4063fa:	dec    ecx
  4063fb:	ror    cl,0x67
  4063fe:	push   ecx
  4063ff:	xor    ah,bh
  406401:	lock pop ebx
  406403:	mov    DWORD PTR [ebx+0x27adca81],eax
  406409:	and    eax,0x338f9a8b
  40640e:	lock aaa 
  406410:	add    al,0x13
  406412:	inc    ecx
  406413:	mov    edx,0x800fa740
  406418:	or     esp,esi
  40641a:	sub    ecx,esi
  40641c:	push   eax
  40641d:	lds    esp,FWORD PTR [ebx+0x13108f3d]
  406423:	stc    
  406424:	add    DWORD PTR [eax+ebx*2+0xabf7475],ebx
  40642b:	rol    DWORD PTR [ecx+0x1f0ca3e1],cl
  406431:	sub    BYTE PTR [esi-0x36],0xa2
  406435:	jnp    0x4063d4
  406437:	xchg   esi,eax
  406438:	mov    esi,0xaf241094
  40643d:	sub    ebx,DWORD PTR [ecx-0x41]
  406440:	mov    ebx,0x5ab27a3e
  406445:	adc    BYTE PTR [edi-0x10bbfc2e],al
  40644b:	out    dx,eax
  40644c:	xchg   edi,eax
  40644d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644e:	neg    dh
  406450:	push   cs
  406451:	pop    esp
  406452:	adc    ah,BYTE PTR [edi+0x54d0e457]
  406458:	lods   al,BYTE PTR ds:[esi]
  406459:	mov    al,0xb
  40645b:	(bad)  [edi+ecx*1]
  40645e:	fimul  DWORD PTR [edi]
  406460:	xor    eax,0x5a718f0f
  406465:	push   0xca7cff14
  40646a:	ret    0x8d46
  40646d:	pop    esi
  40646e:	mov    ecx,0x40a39575
  406473:	aaa    
  406474:	outs   dx,BYTE PTR ds:[esi]
  406475:	loop   0x40640b
  406477:	rol    BYTE PTR [ebx-0x148f2f6b],0x53
  40647e:	cmp    DWORD PTR [esi+0x45],ecx
  406481:	ret    0x9165
  406484:	cld    
  406485:	mov    esp,0x175b5521
  40648a:	hlt    
  40648b:	jmp    0xe7e16834
  406490:	mov    dl,0x9b
  406492:	push   ecx
  406493:	jnp    0x406416
  406495:	inc    ecx
  406496:	dec    edi
  406497:	fs aas 
  406499:	mov    al,0x47
  40649b:	aam    0x38
  40649d:	mov    edx,fs
  40649f:	pop    eax
  4064a0:	jecxz  0x4064a0
  4064a2:	jge    0x40643e
  4064a4:	fbstp  TBYTE PTR [eax]
  4064a6:	dec    ebp
  4064a7:	out    0x8e,eax
  4064a9:	mov    edi,0xd0a57933
  4064ae:	cvtdq2ps xmm3,XMMWORD PTR [ebx]
  4064b1:	xor    al,0xb1
  4064b3:	sub    BYTE PTR [esp+ebx*8],dh
  4064b6:	mov    edi,0x7a0c15bc
  4064bb:	add    eax,0x9891f0fc
  4064c0:	lahf   
  4064c1:	adc    al,BYTE PTR [eax+0x16]
  4064c4:	rcr    DWORD PTR [edx],cl
  4064c6:	xchg   BYTE PTR ds:0x7c1f9d4a,bl
  4064cc:	outs   dx,BYTE PTR ds:[esi]
  4064cd:	mov    dh,0x63
  4064cf:	mov    al,0xa3
  4064d1:	retf   
  4064d2:	xor    DWORD PTR [esi],eax
  4064d4:	call   0x4ab7582c
  4064d9:	(bad)  
  4064da:	mov    al,ds:0xbe819a65
  4064df:	cdq    
  4064e0:	mov    ah,0xda
  4064e2:	xor    al,0x30
  4064e4:	fst    QWORD PTR [ecx]
  4064e6:	mov    al,ds:0xbbcb2962
  4064eb:	push   cs
  4064ec:	jae    0x406536
  4064ee:	pop    edi
  4064ef:	leave  
  4064f0:	push   esp
  4064f1:	jge    0x40655f
  4064f3:	test   DWORD PTR [esi+0x28],esp
  4064f6:	sar    BYTE PTR [edx-0x2c],0x6d
  4064fa:	inc    esi
  4064fb:	mov    ecx,0x6d706743
  406500:	jp     0x4064b8
  406502:	inc    eax
  406503:	stos   DWORD PTR es:[edi],eax
  406504:	rcr    BYTE PTR [eax+ebp*4+0x66],0x5e
  406509:	inc    ecx
  40650a:	add    ax,0x8282
  40650e:	fsubr  QWORD PTR [ecx-0x1d65f087]
  406514:	xor    bl,BYTE PTR [edi]
  406516:	(bad)  
  406518:	mov    bh,0x45
  40651a:	jp     0x4064ab
  40651c:	adc    al,0xa6
  40651e:	mov    dh,0x1
  406520:	pop    es
  406521:	pop    ss
  406522:	leave  
  406523:	mov    esp,0x1a513e02
  406528:	mov    ecx,es
  40652a:	sub    DWORD PTR [ecx-0x52dd526a],ebx
  406530:	outs   dx,DWORD PTR ds:[esi]
  406531:	in     eax,dx
  406532:	jns    0x630c4638
  406538:	xor    DWORD PTR [ecx*2-0x363cf166],edi
  40653f:	std    
  406540:	adc    al,0x8d
  406542:	mov    eax,ds:0xb588866d
  406547:	sub    bl,BYTE PTR [ecx]
  406549:	pop    es
  40654a:	adc    esp,DWORD PTR [eax-0x5f5b61ab]
  406550:	pop    esi
  406551:	jmp    0xf1b3:0x8ada76a6
  406558:	adc    al,0x90
  40655a:	cmp    ch,dh
  40655c:	sub    ebx,DWORD PTR [ecx+0x5c]
  40655f:	and    eax,0x1689b142
  406564:	mov    ecx,0xa249b606
  406569:	pop    ebx
  40656a:	mov    eax,0x6a96fd2f
  40656f:	imul   esp,DWORD PTR [ecx+0x1549bfe2],0xfc791caa
  406579:	mov    ds,ebp
  40657b:	fist   DWORD PTR [eax]
  40657d:	imul   ecx,DWORD PTR [ebx],0xfc17484
  406583:	shl    BYTE PTR [ebx+0x35],0xa9
  406587:	test   eax,0x1815a06f
  40658c:	div    DWORD PTR ds:0x9214f4d0
  406592:	add    al,dl
  406594:	cli    
  406595:	bound  ecx,QWORD PTR [ebp+0x307b40a7]
  40659b:	jecxz  0x406576
  40659d:	rol    DWORD PTR ds:0x361a0f19,1
  4065a3:	adc    edx,DWORD PTR [esi-0x3c]
  4065a6:	pop    ebx
  4065a7:	inc    BYTE PTR [edx]
  4065a9:	xor    dh,ah
  4065ab:	cmp    BYTE PTR [eax+0x67c6326a],ah
  4065b1:	cmp    ch,BYTE PTR [edx-0xb4af4df]
  4065b7:	js     0x40661c
  4065b9:	pop    eax
  4065ba:	retf   0x2735
  4065bd:	lock rol al,0x67
  4065c1:	jmp    0x9c816409
  4065c6:	inc    ebp
  4065c7:	fcomp  QWORD PTR [eax-0x3888a8fd]
  4065cd:	ja     0x406599
  4065cf:	stos   BYTE PTR es:[edi],al
  4065d0:	leave  
  4065d1:	adc    esp,DWORD PTR [eax+0x21233666]
  4065d7:	imul   ecx,DWORD PTR [edi],0x2f85739c
  4065dd:	sbb    al,0xe0
  4065df:	jl     0x406639
  4065e1:	popa   
  4065e2:	imul   BYTE PTR [ebx+0x2af51f59]
  4065e8:	data16 daa 
  4065ea:	mov    cl,0xc5
  4065ec:	leave  
  4065ed:	retf   0x1dab
  4065f0:	jmp    0xe65a42d9
  4065f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f6:	fadd   DWORD PTR [edi-0xd9d873a]
  4065fc:	xor    esp,DWORD PTR [eax-0x7e]
  4065ff:	loope  0x406601
  406601:	shl    BYTE PTR [ebp+0x69],0x43
  406605:	jae    0x4065a1
  406607:	cmp    eax,DWORD PTR [eax-0x48]
  40660a:	jmp    0x40659c
  40660c:	rcl    BYTE PTR [edi-0x44],1
  40660f:	xlat   BYTE PTR ds:[ebx]
  406610:	sbb    al,0xd8
  406612:	mov    al,0x1f
  406614:	jmp    0x406645
  406616:	pop    esi
  406617:	int3   
  406618:	jo     0x4065a3
  40661a:	jnp    0x406642
  40661c:	jg     0x4065bd
  40661e:	popa   
  40661f:	out    0x81,eax
  406621:	popf   
  406622:	xchg   ebp,eax
  406623:	dec    ebx
  406624:	in     eax,0x3e
  406626:	adc    BYTE PTR [eax],bl
  406628:	pushf  
  406629:	push   cs
  40662a:	outs   dx,DWORD PTR gs:[esi]
  40662c:	fwait
  40662d:	or     eax,0xbe5d29a5
  406632:	pop    edx
  406633:	mov    ebp,0x24f3c82d
  406638:	fiadd  DWORD PTR [ebx-0x41]
  40663b:	mov    bh,0xa0
  40663d:	mov    ecx,0x2a4c1eea
  406642:	mov    ecx,0x7e20a6c1
  406647:	sub    DWORD PTR cs:[esp+edi*2+0x4c00a2db],eax
  40664f:	jnp    0x4066b5
  406651:	sti    
  406652:	cs xor edi,0xffffffad
  406656:	xchg   ecx,eax
  406657:	add    dl,BYTE PTR [ecx+edi*8+0x65a0592d]
  40665e:	call   0xbe31:0x2d7d6651
  406665:	out    0x73,eax
  406667:	add    edx,esi
  406669:	aas    
  40666a:	adc    eax,0x6319997a
  40666f:	fdiv   st(4),st
  406671:	xchg   ebx,eax
  406672:	dec    esp
  406673:	xchg   esi,eax
  406674:	sahf   
  406675:	mov    BYTE PTR [ecx+0x5735cb6f],dh
  40667b:	or     eax,0x1ef4c
  406680:	pop    edx
  406681:	retf   
  406682:	repz add bl,bh
  406685:	dec    ebp
  406686:	mov    esi,0x7696edcb
  40668b:	add    DWORD PTR [ebx],ebp
  40668d:	push   edi
  40668e:	add    eax,0x627ac02f
  406693:	mov    fs,WORD PTR [ebx+ebp*2-0x11]
  406697:	mov    al,BYTE PTR [ebp-0x5d015d63]
  40669d:	ss push ebx
  40669f:	repnz dec edi
  4066a1:	xchg   esi,eax
  4066a2:	inc    ebx
  4066a3:	repz mov al,0xfd
  4066a6:	cli    
  4066a7:	xchg   esi,eax
  4066a8:	inc    edi
  4066a9:	xchg   esp,eax
  4066aa:	loope  0x4066ca
  4066ac:	push   ebx
  4066ad:	push   edx
  4066ae:	or     al,0xc0
  4066b0:	dec    ebx
  4066b1:	mov    ds:0xf2b1ff1c,al
  4066b6:	adc    eax,0x964e6a81
  4066bb:	cmp    ecx,DWORD PTR [ebp-0x39]
  4066be:	inc    ebx
  4066bf:	(bad)  [esi+0x35]
  4066c2:	jp     0x406698
  4066c4:	(bad)  
  4066c5:	scas   al,BYTE PTR es:[edi]
  4066c6:	cmp    al,0x94
  4066c8:	inc    dl
  4066ca:	cmp    al,0x41
  4066cc:	imul   DWORD PTR [eax+0x5f13afe1]
  4066d2:	ret    
  4066d3:	push   0xffffffda
  4066d5:	hlt    
  4066d6:	call   0x58b4:0x22f73184
  4066dd:	dec    edx
  4066de:	loopne 0x406674
  4066e0:	mov    edi,0x68eea8fe
  4066e5:	std    
  4066e6:	out    0x9a,al
  4066e8:	nop
  4066e9:	idiv   DWORD PTR [edx+ebx*1]
  4066ec:	push   0x6b016cb0
  4066f1:	sub    ecx,DWORD PTR [edx+ebp*4]
  4066f4:	xlat   BYTE PTR ds:[ebx]
  4066f5:	fidiv  DWORD PTR [ebx-0x37]
  4066f8:	dec    eax
  4066f9:	mov    edi,0xbc604baf
  4066fe:	lea    edi,[ebx-0x21ddc5ae]
  406704:	in     al,0x2d
  406706:	cmp    al,0x34
  406708:	pop    ebx
  40670a:	lds    ebp,FWORD PTR [esi-0x6f]
  40670d:	(bad)  
  40670e:	daa    
  40670f:	sbb    bh,BYTE PTR [ebp+0xb]
  406712:	sub    eax,eax
  406714:	jo     0x40670d
  406716:	or     ecx,edi
  406718:	mov    cl,0x9f
  40671a:	sub    BYTE PTR [esi-0x6f],cl
  40671d:	sub    edi,eax
  40671f:	pop    esp
  406720:	mov    dh,0xd4
  406722:	sub    ch,dl
  406724:	cwde   
  406725:	and    eax,0x5e9905bb
  40672a:	ficom  WORD PTR [edx]
  40672c:	pop    ds
  40672d:	push   cs
  40672e:	in     al,dx
  40672f:	push   ebp
  406730:	cld    
  406731:	dec    esp
  406732:	xchg   esi,eax
  406733:	xchg   ebp,eax
  406734:	cli    
  406735:	or     al,0xaf
  406737:	sub    dl,BYTE PTR [edx+eiz*4-0x78]
  40673b:	xor    ebx,DWORD PTR ds:0xb65a7b4b
  406741:	inc    eax
  406742:	xchg   BYTE PTR [ebp+0x2],al
  406745:	aaa    
  406746:	lods   al,BYTE PTR ds:[esi]
  406747:	sbb    eax,DWORD PTR [esp+ebp*4-0x6e2d5916]
  40674e:	(bad)  
  406750:	xchg   esi,eax
  406751:	cmp    cl,bl
  406753:	ret    
  406754:	les    edi,FWORD PTR [esi]
  406756:	dec    edx
  406757:	ds push cs
  406759:	jb     0x4067a3
  40675b:	and    ch,BYTE PTR [ecx]
  40675d:	scas   al,BYTE PTR es:[edi]
  40675e:	push   eax
  40675f:	dec    edx
  406760:	rcr    edx,1
  406762:	popf   
  406763:	imul   eax,DWORD PTR [eax+0x54],0x7e69410c
  40676a:	bound  edx,QWORD PTR [ecx-0x8]
  40676d:	or     ebp,DWORD PTR [eax-0x14]
  406770:	(bad)  
  406771:	fwait
  406772:	sbb    DWORD PTR [eax-0x42],edi
  406775:	or     esp,DWORD PTR [eax+ebp*8-0x70c2c9f5]
  40677c:	fs out dx,eax
  40677e:	and    DWORD PTR [esi],ecx
  406780:	mov    ah,0x9f
  406782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406783:	mov    ecx,0xb81cf6b
  406788:	and    bl,BYTE PTR [ebx]
  40678a:	imul   DWORD PTR [ebx+eiz*8]
  40678d:	cmp    eax,0x4fb426d0
  406792:	outs   dx,DWORD PTR ds:[esi]
  406793:	nop
  406794:	fmul   st,st(5)
  406796:	stc    
  406797:	lahf   
  406798:	dec    esp
  406799:	inc    eax
  40679a:	je     0x40673f
  40679c:	adc    al,0x74
  40679e:	jecxz  0x406798
  4067a0:	out    dx,eax
  4067a1:	sub    DWORD PTR [edx+0x3e],ebp
  4067a4:	imul   esi,DWORD PTR [ebx+0x751c5c92],0xffffffc4
  4067ab:	xchg   DWORD PTR [ecx],edi
  4067ad:	cmp    al,0xca
  4067af:	mov    BYTE PTR [ebx-0x460843f6],0x1e
  4067b6:	adc    bh,dh
  4067b8:	fnstsw WORD PTR [ebx+esi*2]
  4067bb:	(bad)  
  4067bc:	dec    edi
  4067bd:	fist   DWORD PTR [esi-0x4c]
  4067c0:	hlt    
  4067c1:	xor    BYTE PTR [esi-0x4b5af413],dh
  4067c7:	mov    ds,WORD PTR ds:0x5503
  4067cc:	or     al,0x49
  4067ce:	or     al,0xc5
  4067d0:	xchg   esi,esi
  4067d2:	nop    eax
  4067d5:	push   eax
  4067d6:	jg     0x4067e0
  4067d8:	arpl   WORD PTR [ebp+0x36],ax
  4067db:	in     eax,0x7b
  4067dd:	mov    eax,0x8b2df4d2
  4067e2:	adc    al,0xb7
  4067e4:	adc    bh,ah
  4067e6:	and    ch,bl
  4067e8:	push   es
  4067e9:	mov    ds:0x290f6b5c,eax
  4067ee:	fs inc eax
  4067f0:	xchg   ebp,eax
  4067f1:	in     al,dx
  4067f2:	xor    DWORD PTR [edi-0x71],edx
  4067f5:	nop
  4067f6:	cld    
  4067f7:	jae    0x4067a1
  4067f9:	mov    bl,0xd5
  4067fb:	jae    0x4067fe
  4067fd:	(bad)  
  4067fe:	fwait
  4067ff:	test   DWORD PTR [ebx],eax
  406801:	loopne 0x40686c
  406803:	sar    BYTE PTR [edi+0x7098cb3c],cl
  406809:	arpl   bp,ax
  40680b:	cmc    
  40680c:	outs   dx,BYTE PTR ds:[esi]
  40680d:	cmc    
  40680e:	repz fbld TBYTE PTR [edx+0x57c42d7d]
  406815:	xchg   DWORD PTR [ebp-0x6e],esp
  406818:	sahf   
  406819:	daa    
  40681a:	rol    DWORD PTR [esi],cl
  40681c:	sub    BYTE PTR [ebx],dl
  40681e:	(bad)  
  40681f:	sti    
  406820:	ins    BYTE PTR es:[edi],dx
  406821:	mov    ch,cl
  406823:	sbb    BYTE PTR [ebp+0x45],dh
  406826:	mov    esi,ds
  406828:	retf   0x981a
  40682b:	and    esi,0x78
  40682e:	aaa    
  40682f:	pop    ebp
  406830:	ja     0x4068a5
  406832:	or     al,BYTE PTR [ebx]
  406834:	dec    esi
  406835:	iret   
  406836:	push   ecx
  406837:	add    eax,DWORD PTR [ebp+0x2d24dd6c]
  40683d:	mov    cl,0xce
  40683f:	xchg   eax,eax
  406841:	das    
  406842:	fmul   DWORD PTR [ebx+0x77dad437]
  406848:	push   cs
  406849:	mov    edx,0xff62206a
  40684e:	xor    BYTE PTR [ecx-0x15e46218],ah
  406854:	sub    dl,BYTE PTR ss:[eax-0x25]
  406858:	pop    ecx
  406859:	push   0xffffffc0
  40685b:	xchg   ecx,eax
  40685c:	je     0x406822
  40685e:	daa    
  40685f:	mov    ebp,0x2a795649
  406864:	in     eax,dx
  406865:	pop    ebx
  406866:	bound  edx,QWORD PTR [edx+0x4b2399eb]
  40686c:	loop   0x4068bd
  40686e:	xor    al,0xcd
  406870:	popf   
  406871:	pop    ebp
  406872:	dec    edx
  406873:	cld    
  406874:	jo     0x406800
  406876:	pop    ecx
  406877:	cmp    DWORD PTR [eax-0x7a10afb2],0xffffffaa
  40687e:	mov    dh,0x95
  406880:	dec    edx
  406881:	out    0xa6,al
  406883:	push   es
  406884:	sub    ah,BYTE PTR ds:0x67d3dab3
  40688a:	(bad)  
  40688b:	pop    esp
  40688c:	xor    eax,0xcf1e1ca5
  406891:	in     al,dx
  406892:	nop
  406893:	pop    edx
  406894:	add    al,0x78
  406896:	jbe    0x4068ee
  406898:	sub    DWORD PTR [edx],edi
  40689a:	hlt    
  40689b:	mov    esp,0xcc9b89f
  4068a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a1:	jmp    0xd3086d0d
  4068a6:	out    0x96,eax
  4068a8:	fsubr  st(1),st
  4068aa:	inc    esp
  4068ab:	adc    ch,BYTE PTR [ebx+0x3db7a689]
  4068b1:	mov    DWORD PTR [edx+0x264788d2],ecx
  4068b7:	mov    bh,0x90
  4068b9:	jg     0x4068d2
  4068bb:	pop    ebx
  4068bc:	fcomip st,st(3)
  4068be:	xor    eax,0x1c7318dc
  4068c3:	into   
  4068c4:	test   BYTE PTR [ecx-0x4c],dh
  4068c7:	mov    ds:0x5d069d1d,al
  4068cc:	sub    edx,edi
  4068ce:	addr16 xchg edi,eax
  4068d0:	dec    esp
  4068d1:	dec    eax
  4068d2:	ins    DWORD PTR es:[edi],dx
  4068d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068d4:	sbb    al,0x3c
  4068d6:	sub    dl,BYTE PTR [edi-0x3f]
  4068d9:	pop    ecx
  4068da:	loop   0x40691a
  4068dc:	cmp    BYTE PTR [ecx+0x57e8ab09],dh
  4068e2:	mov    bh,0x8a
  4068e4:	cmp    al,0xec
  4068e6:	xor    al,BYTE PTR [edx-0x39]
  4068e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ea:	mov    ch,BYTE PTR [edx-0xc]
  4068ed:	inc    esp
  4068ee:	dec    DWORD PTR [ecx-0x331a1265]
  4068f4:	das    
  4068f5:	out    0x7b,al
  4068f7:	imul   ebx,DWORD PTR [eax],0x75
  4068fa:	push   edi
  4068fb:	pusha  
  4068fc:	mov    esp,0xa889ca81
  406901:	inc    esp
  406902:	scas   eax,DWORD PTR es:[edi]
  406903:	in     al,dx
  406904:	and    DWORD PTR [ebx+0xf],eax
  406907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406908:	push   0xbe4de5dd
  40690d:	xor    al,0xaa
  40690f:	stc    
  406910:	push   ecx
  406911:	int    0x1b
  406913:	scas   eax,DWORD PTR es:[edi]
  406914:	les    ebx,FWORD PTR [edx+0x71891184]
  40691a:	and    al,ah
  40691c:	aam    0xf6
  40691e:	retf   
  40691f:	sub    eax,0x81ca9093
  406924:	stc    
  406925:	fcmovu st,st(5)
  406927:	xor    DWORD PTR [ecx],esp
  406929:	jno    0x40690f
  40692b:	int3   
  40692c:	jmp    0x9b6a:0x65ef65c4
  406933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406934:	sbb    al,0xbf
  406936:	dec    eax
  406937:	jmp    0x97bf0bc8
  40693c:	jl     0x4068f9
  40693e:	fild   DWORD PTR [edx-0x27]
  406941:	repz in eax,dx
  406943:	aam    0x6b
  406945:	xor    BYTE PTR [edi+0x1c46cbcc],0xf8
  40694c:	out    dx,eax
  40694d:	lock inc edi
  40694f:	jne    0x4068de
  406951:	pop    edi
  406952:	js     0x406915
  406954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406955:	mov    al,BYTE PTR [edx+eiz*1]
  406958:	not    ch
  40695a:	mov    bl,0x9d
  40695c:	mov    eax,0x2d465a01
  406961:	and    ecx,DWORD PTR [ebp-0x3abfb3c3]
  406967:	pop    ecx
  406968:	sub    eax,0x2f0b945f
  40696d:	cmp    BYTE PTR [ecx],cl
  40696f:	pusha  
  406970:	mov    edi,0x87a76466
  406975:	ds and al,0xbf
  406978:	mov    WORD PTR [edi+0x4e],dx
  40697c:	aam    0x8a
  40697e:	fadd   st,st(7)
  406980:	cli    
  406981:	fnstcw WORD PTR [edx]
  406983:	retf   
  406984:	rcl    DWORD PTR [ebp-0x1bc576bd],1
  40698a:	push   es
  40698b:	pop    esp
  40698c:	pop    esp
  40698d:	mov    esp,0xb7071732
  406992:	sub    ecx,DWORD PTR [eax+0x79]
  406995:	jbe    0x4069ad
  406997:	pop    ss
  406998:	jl     0x406a0d
  40699a:	les    edx,FWORD PTR [ebx-0x3169db48]
  4069a0:	jecxz  0x406992
  4069a2:	outs   dx,DWORD PTR ds:[esi]
  4069a3:	fld    QWORD PTR [ebx]
  4069a5:	push   esp
  4069a6:	mov    edx,0x4e341dec
  4069ab:	pop    esp
  4069ac:	add    BYTE PTR [ecx-0x17ec8af5],bh
  4069b2:	mov    ebx,0x3828edc1
  4069b7:	dec    edi
  4069b8:	test   al,0x15
  4069ba:	sub    al,0x31
  4069bc:	sbb    al,0xa5
  4069be:	push   esp
  4069bf:	xor    DWORD PTR [ebx-0x1ca70624],ebx
  4069c5:	jle    0x40695f
  4069c7:	cmp    dh,BYTE PTR [eax]
  4069c9:	mov    cl,0xec
  4069cb:	popa   
  4069cc:	es jb  0x406a3c
  4069cf:	(bad)  
  4069d0:	dec    esp
  4069d1:	jmp    0x40697c
  4069d3:	sahf   
  4069d4:	xchg   BYTE PTR [eax-0x693f385d],bh
  4069da:	push   ebp
  4069db:	stos   BYTE PTR es:[edi],al
  4069dc:	(bad)  
  4069dd:	mov    ecx,DWORD PTR [ebx]
  4069df:	lock jmp 0x4069c4
  4069e2:	pop    ecx
  4069e3:	mov    ecx,0x5c6674c0
  4069e8:	or     DWORD PTR [ebx],esi
  4069ea:	loopne 0x406a28
  4069ec:	jb     0x4069d8
  4069ee:	icebp  
  4069ef:	sbb    eax,DWORD PTR [ebp+0x7d3b4b1b]
  4069f5:	add    edx,DWORD PTR [eax]
  4069f7:	jle    0x4069fe
  4069f9:	xchg   ecx,eax
  4069fa:	sub    edi,DWORD PTR [edi-0x32b2a9c1]
  406a00:	gs pop es
  406a02:	mov    ecx,0xf3facf79
  406a07:	out    dx,eax
  406a08:	lock inc ecx
  406a0a:	cli    
  406a0b:	pop    ebx
  406a0c:	jae    0x4069da
  406a0e:	pusha  
  406a0f:	int3   
  406a10:	and    al,0x39
  406a12:	mov    ecx,DWORD PTR [ebx+0x411c3bdc]
  406a18:	xchg   edi,eax
  406a19:	jne    0x406a88
  406a1b:	xchg   edx,eax
  406a1c:	stos   BYTE PTR es:[edi],al
  406a1d:	jmp    0x4642:0xbd30f95d
  406a24:	xlat   BYTE PTR ds:[ebx]
  406a25:	sbb    ch,dh
  406a27:	cmp    BYTE PTR [edi+0x60],ah
  406a2a:	and    al,0x4
  406a2c:	sbb    bh,bh
  406a2e:	mov    ch,0xc8
  406a30:	imul   edx,DWORD PTR [edi],0xffffff8d
  406a33:	rcl    BYTE PTR [ebp-0x33],1
  406a36:	xor    DWORD PTR [edx-0x60],0xdc3e2238
  406a3d:	and    dh,BYTE PTR [edi+0x77]
  406a40:	jne    0x4069f8
  406a42:	in     al,dx
  406a43:	xchg   ecx,eax
  406a44:	dec    edi
  406a45:	dec    ecx
  406a46:	xchg   edx,eax
  406a47:	rol    edi,1
  406a49:	lea    ecx,[ecx]
  406a4b:	ds in  al,dx
  406a4d:	(bad)  
  406a4f:	mov    WORD PTR [esi+0xe],gs
  406a52:	stc    
  406a53:	pop    esp
  406a54:	into   
  406a55:	add    ah,ah
  406a57:	(bad)  
  406a58:	lsl    ebp,di
  406a5b:	xor    eax,0x15f8d933
  406a60:	inc    edx
  406a61:	rol    edi,0x4c
  406a64:	mov    edi,0x844b9da4
  406a69:	mov    ecx,0xeee5e598
  406a6e:	mov    bl,0x46
  406a70:	arpl   ax,ax
  406a72:	aam    0x90
  406a74:	push   eax
  406a75:	into   
  406a76:	scas   al,BYTE PTR es:[edi]
  406a77:	int3   
  406a78:	sbb    eax,0x34f544b0
  406a7d:	jp     0x406a44
  406a7f:	xor    al,0x7e
  406a81:	add    BYTE PTR [ebx+0x3c77bde2],cl
  406a87:	rcr    BYTE PTR ds:0xd32cf3c0,cl
  406a8d:	psubusb mm7,mm2
  406a90:	adc    BYTE PTR [edx],0xac
  406a93:	mov    ds:0x6ba70370,eax
  406a98:	push   es
  406a99:	mov    WORD PTR [esi],ss
  406a9b:	sbb    ebp,DWORD PTR [esi]
  406a9d:	arpl   WORD PTR [eax],bx
  406a9f:	dec    edi
  406aa0:	in     al,dx
  406aa1:	repz inc ecx
  406aa3:	jp     0x406ad2
  406aa5:	sbb    ebx,edx
  406aa7:	xchg   ebp,eax
  406aa8:	jo     0x406a31
  406aaa:	add    eax,0x3a24a460
  406aaf:	in     eax,0xec
  406ab1:	(bad)  
  406ab2:	imul   ebp,DWORD PTR [esi],0x2d363119
  406ab8:	cmc    
  406ab9:	mov    dl,BYTE PTR [edx+0x43]
  406abc:	(bad)  
  406abe:	mov    ebx,ebp
  406ac0:	push   ecx
  406ac1:	dec    edx
  406ac2:	out    0x52,al
  406ac4:	fcmovnu st,st(6)
  406ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac7:	pop    ds
  406ac8:	(bad)  
  406ac9:	lock sub eax,0xdc3b4371
  406acf:	(bad)  
  406ad0:	cdq    
  406ad1:	add    al,0xae
  406ad3:	enter  0x27ef,0xeb
  406ad7:	fwait
  406ad8:	shr    BYTE PTR [ecx-0x58f26d2],1
  406ade:	out    dx,al
  406adf:	clc    
  406ae0:	sub    DWORD PTR [eax],0xe55c1ada
  406ae6:	stos   DWORD PTR es:[edi],eax
  406ae7:	mov    al,ds:0xabab1148
  406aec:	into   
  406aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aee:	test   eax,0x26942fa5
  406af3:	stc    
  406af4:	and    dh,BYTE PTR [ebx]
  406af6:	mov    bl,0xd9
  406af8:	or     eax,0xfa380829
  406afd:	test   DWORD PTR [eax+0x3f442825],0xb99e67bd
  406b07:	sub    DWORD PTR [edi],ebx
  406b09:	push   edx
  406b0a:	add    al,0xce
  406b0c:	(bad)  
  406b0d:	cmp    BYTE PTR es:[edi],bh
  406b10:	mov    ?,WORD PTR [esp+esi*1+0x6efc687b]
  406b17:	fwait
  406b18:	dec    esi
  406b19:	repz pop ebx
  406b1c:	cli    
  406b1d:	cdq    
  406b1e:	pop    eax
  406b1f:	push   ds
  406b20:	pop    eax
  406b21:	mov    ebp,0xbea5b7b1
  406b26:	mov    dh,BYTE PTR [edx-0x33]
  406b29:	sti    
  406b2a:	in     al,0x94
  406b2c:	xchg   DWORD PTR [eax-0x28506f1f],esi
  406b32:	sbb    bh,BYTE PTR [esi+edi*2+0xc]
  406b36:	and    eax,0x661040b9
  406b3b:	std    
  406b3c:	or     BYTE PTR [eax*2+0x351a5777],bl
  406b43:	add    esi,edx
  406b45:	test   al,0x14
  406b47:	mov    esp,0x4a533258
  406b4c:	mov    BYTE PTR [ecx+0xd6742d8],dh
  406b52:	ret    0x7ee3
  406b55:	data16 das 
  406b57:	aad    0x53
  406b59:	mov    ds:0x95b4c83,eax
  406b5e:	mov    al,0x5a
  406b61:	ds rol DWORD PTR gs:[ecx],0x45
  406b66:	cmp    bl,BYTE PTR [ebx+0x3b]
  406b69:	cmp    al,0xdb
  406b6b:	(bad)  
  406b6c:	fstp   DWORD PTR [ebx-0x636470f4]
  406b72:	adc    edi,DWORD PTR [edx+0x114a2667]
  406b78:	or     ebp,DWORD PTR [ebp-0x16]
  406b7b:	pop    eax
  406b7c:	inc    ebx
  406b7d:	cmc    
  406b7e:	cwde   
  406b7f:	push   edi
  406b80:	sbb    al,bh
  406b82:	jnp    0x406b24
  406b84:	fsubr  QWORD PTR [ecx+ebp*8]
  406b87:	outs   dx,DWORD PTR ds:[esi]
  406b88:	call   0x8fb92abb
  406b8d:	(bad)  
  406b8e:	int3   
  406b8f:	daa    
  406b90:	xchg   DWORD PTR [edx-0x23],edx
  406b93:	mov    ebx,DWORD PTR [esi-0x80]
  406b96:	(bad)  
  406b97:	cmp    cl,BYTE PTR [edx-0xb]
  406b9a:	pusha  
  406b9b:	pop    ss
  406b9c:	fild   WORD PTR [edx+0x34dc0bee]
  406ba2:	mov    ch,0xf8
  406ba4:	pop    DWORD PTR [edx]
  406ba6:	pushf  
  406ba7:	xchg   esp,eax
  406ba8:	mov    ch,0x21
  406baa:	sbb    BYTE PTR [ecx],dl
  406bac:	aad    0xb1
  406bae:	and    eax,0x6170c792
  406bb3:	mov    ah,0x87
  406bb5:	inc    ecx
  406bb6:	lds    esp,FWORD PTR [edx+0x61]
  406bb9:	cmp    dl,dh
  406bbb:	dec    ecx
  406bbc:	push   ebp
  406bbd:	cmp    edx,DWORD PTR [eax]
  406bbf:	mov    ch,0x1f
  406bc1:	pop    eax
  406bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc3:	popa   
  406bc4:	(bad)  
  406bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc6:	ins    DWORD PTR es:[edi],dx
  406bc7:	out    0x80,eax
  406bc9:	xchg   ecx,eax
  406bca:	sub    ah,BYTE PTR [edi+0x4e]
  406bcd:	adc    dh,BYTE PTR [eax+esi*1+0x12]
  406bd1:	in     eax,dx
  406bd2:	js     0x406bc2
  406bd4:	add    al,0xbf
  406bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd7:	xchg   edx,eax
  406bd8:	cmp    ah,dh
  406bda:	or     al,0xb8
  406bdc:	add    DWORD PTR [edx-0x3ad08d0a],eax
  406be2:	addr16 inc ecx
  406be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be5:	aaa    
  406be6:	adc    DWORD PTR [eax],eax
  406be8:	ss dec edx
  406bea:	and    bl,BYTE PTR [ecx-0x46]
  406bed:	test   al,0x1a
  406bef:	xchg   esp,eax
  406bf0:	or     DWORD PTR [ebx+edi*1-0x20784359],esi
  406bf7:	loope  0x406bb4
  406bf9:	cdq    
  406bfa:	xor    ch,BYTE PTR [eax]
  406bfc:	inc    ebp
  406bfd:	pop    eax
  406bfe:	dec    esi
  406bff:	xchg   edx,edi
  406c01:	imul   ebx,DWORD PTR [esi-0x15b3be7f],0xffffffa1
  406c08:	add    bh,dl
  406c0a:	xchg   edx,eax
  406c0b:	mov    dh,0x64
  406c0d:	(bad)  
  406c0e:	into   
  406c0f:	push   ebp
  406c10:	xchg   edi,eax
  406c11:	sbb    al,0x31
  406c13:	and    esi,DWORD PTR [eax+esi*8+0x52]
  406c17:	or     DWORD PTR [edi],ecx
  406c19:	retf   0x287d
  406c1c:	fwait
  406c1d:	inc    ebp
  406c1e:	jmp    0x19f2:0x7835a817
  406c25:	and    dh,BYTE PTR [ecx+0x1c]
  406c28:	jmp    0x83f8:0xdacac3f2
  406c2f:	test   dh,ah
  406c31:	call   0x28a30fab
  406c36:	ins    DWORD PTR es:[edi],dx
  406c37:	sub    eax,0xed8346bb
  406c3c:	imul   eax,DWORD PTR [ebx-0x66],0xaaed6f05
  406c43:	push   0x74
  406c45:	inc    edx
  406c46:	ss ret 
  406c48:	nop
  406c49:	fcom   st(7)
  406c4b:	ffreep st(2)
  406c4d:	mov    es,esp
  406c4f:	jae    0x406be5
  406c51:	imul   eax,DWORD PTR [edi-0x6e8e8187],0x9d35b265
  406c5b:	in     al,dx
  406c5c:	enter  0x970,0xf
  406c60:	push   ds
  406c61:	jno    0x406c15
  406c63:	jae    0x406c00
  406c65:	inc    dl
  406c67:	(bad)  
  406c69:	jbe    0x406c06
  406c6b:	pop    ebp
  406c6c:	mov    edx,edx
  406c6e:	xor    al,0xb0
  406c70:	add    al,BYTE PTR [esi]
  406c72:	push   ebx
  406c73:	les    esi,FWORD PTR [edx-0x3e]
  406c76:	pop    ebx
  406c77:	shl    ch,0xa8
  406c7a:	mov    BYTE PTR [ebx-0x1fa870a8],al
  406c80:	(bad)  
  406c81:	and    dl,BYTE PTR [eax]
  406c83:	int    0xdf
  406c85:	pushf  
  406c86:	loope  0x406c22
  406c88:	dec    ebx
  406c89:	xchg   esi,eax
  406c8a:	xchg   esp,eax
  406c8b:	push   ds
  406c8c:	repnz add edi,ebp
  406c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c90:	xor    bl,bh
  406c92:	ficomp DWORD PTR [ebx]
  406c94:	xchg   BYTE PTR [ecx-0x6c270a2],ah
  406c9a:	addr16 repnz in al,dx
  406c9d:	push   ds
  406c9e:	jae    0x406cdc
  406ca0:	add    cl,BYTE PTR [ebp+0x1]
  406ca3:	sbb    DWORD PTR [ecx-0x69],0xffffffb2
  406ca7:	add    DWORD PTR [edi+0x7ebff830],edx
  406cad:	add    BYTE PTR [ebx-0x298f0a0],al
  406cb3:	sbb    eax,0x64a37a0d
  406cb8:	pop    edx
  406cb9:	enter  0xd076,0x91
  406cbd:	xchg   edi,eax
  406cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cbf:	lods   al,BYTE PTR ds:[esi]
  406cc0:	pop    edi
  406cc1:	lods   eax,DWORD PTR ds:[esi]
  406cc2:	mov    ecx,0x12e8feff
  406cc7:	std    
  406cc8:	ficom  WORD PTR ds:0xd927e655
  406cce:	xchg   esp,eax
  406ccf:	enter  0x8d03,0x96
  406cd3:	leave  
  406cd4:	xor    eax,0xe5ad0ebf
  406cd9:	sar    DWORD PTR [ecx+esi*4],1
  406cdc:	popa   
  406cdd:	dec    edi
  406cde:	(bad)  
  406cdf:	push   esp
  406ce0:	mov    cs,WORD PTR [ecx+0x16]
  406ce3:	(bad)  
  406ce4:	jecxz  0x406d28
  406ce6:	int    0xf1
  406ce8:	leave  
  406ce9:	cmp    al,0xae
  406ceb:	rcr    DWORD PTR [edi+0x5568dcda],0x37
  406cf2:	mov    fs,WORD PTR [ecx]
  406cf4:	mov    esi,0xcd2e4fc4
  406cf9:	outs   dx,DWORD PTR ds:[esi]
  406cfa:	(bad)  
  406cfb:	out    0x37,al
  406cfd:	(bad)
  406d01:	(bad)  
  406d02:	jl     0x406cbc
  406d04:	jl     0x406d4e
  406d06:	dec    ebx
  406d07:	shr    DWORD PTR [ecx+0x17],1
  406d0a:	ss jmp 0x96f94c75
  406d10:	nop
  406d11:	xor    eax,0x62389df4
  406d16:	sub    DWORD PTR [ebp-0x15],ebp
  406d19:	fcomp  QWORD PTR [ebp-0x398a957e]
  406d1f:	lea    esp,[ebx]
  406d21:	in     al,dx
  406d22:	push   ebp
  406d23:	(bad)  
  406d24:	inc    ebx
  406d25:	add    ah,BYTE PTR [esi+0x129fc54a]
  406d2b:	jle    0x406d31
  406d2d:	mov    esi,DWORD PTR [ebx-0x338a5d08]
  406d33:	sub    bl,BYTE PTR [eax]
  406d35:	mov    dl,0xe2
  406d37:	inc    ebx
  406d38:	mov    edi,0xf69511b7
  406d3d:	jecxz  0x406d56
  406d3f:	mov    DWORD PTR ds:0x149fb227,ebp
  406d45:	jno    0x406d8b
  406d47:	sahf   
  406d48:	cmp    al,0x5c
  406d4a:	int    0x72
  406d4c:	xchg   edi,eax
  406d4d:	sbb    bl,al
  406d4f:	cmp    dl,BYTE PTR [ecx+0x1b76f7e9]
  406d55:	mov    edi,0x7d00a3de
  406d5a:	jns    0x406d66
  406d5c:	les    ebx,FWORD PTR [edx]
  406d5e:	js     0x406cfd
  406d60:	or     eax,0xcf0287b2
  406d65:	outs   dx,DWORD PTR ds:[esi]
  406d66:	xchg   BYTE PTR [ebx],dl
  406d68:	retf   
  406d69:	jae    0x406cf1
  406d6b:	xchg   ebx,eax
  406d6c:	ss mov bh,0x53
  406d6f:	stos   BYTE PTR es:[edi],al
  406d70:	fild   WORD PTR [edi]
  406d72:	out    0x1b,al
  406d74:	pushf  
  406d75:	es in  eax,0xd6
  406d78:	add    bl,al
  406d7a:	pop    es
  406d7b:	(bad)  
  406d7c:	mov    dh,0x92
  406d7e:	jo     0x406dcf
  406d80:	in     eax,dx
  406d81:	popa   
  406d82:	lods   eax,DWORD PTR ds:[esi]
  406d83:	sub    bl,al
  406d85:	and    eax,0xb546ca8a
  406d8a:	mov    bh,0x93
  406d8c:	or     al,0x19
  406d8e:	cwde   
  406d8f:	push   0x31
  406d91:	clc    
  406d92:	mov    esi,0xe36a8c71
  406d97:	scas   al,BYTE PTR es:[edi]
  406d98:	push   edx
  406d99:	and    ebp,DWORD PTR [edi+0x3b206353]
  406d9f:	add    al,0xb2
  406da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da2:	enter  0xbaf,0xe5
  406da6:	cmp    ebp,DWORD PTR [esi+ecx*4-0x37422322]
  406dad:	jmp    0x9151eb3
  406db2:	inc    ecx
  406db3:	push   edi
  406db4:	pop    eax
  406db5:	pop    ebx
  406db6:	mov    bl,0x63
  406db8:	mov    esp,0xc9aab333
  406dbd:	popf   
  406dbe:	in     al,0xc3
  406dc0:	fimul  WORD PTR ds:0x923009e8
  406dc6:	mov    ds:0x6c97008f,eax
  406dcb:	pusha  
  406dcc:	fst    QWORD PTR [edi]
  406dce:	lahf   
  406dcf:	xor    ebx,DWORD PTR ss:[edx]
  406dd2:	lds    edx,FWORD PTR [ecx+0x32]
  406dd5:	jbe    0x406d7e
  406dd7:	ss xchg edi,eax
  406dd9:	imul   BYTE PTR ss:[esi+0x42]
  406ddd:	loop   0x406db1
  406ddf:	outs   dx,DWORD PTR gs:[esi]
  406de1:	out    0x74,al
  406de3:	xchg   esi,eax
  406de4:	cli    
  406de5:	add    eax,0xfffffff1
  406de8:	jnp    0x406e33
  406dea:	ja     0x406dcc
  406dec:	mov    bh,0x76
  406dee:	inc    esp
  406def:	leave  
  406df0:	pushf  
  406df1:	inc    esp
  406df2:	jmp    0x406e4d
  406df4:	(bad)  
  406df5:	in     eax,dx
  406df6:	pop    eax
  406df7:	(bad)  [ecx]
  406df9:	jge    0x406e32
  406dfb:	and    eax,0x909b5963
  406e00:	into   
  406e01:	xor    dh,cl
  406e03:	retf   
  406e04:	stos   DWORD PTR es:[edi],eax
  406e05:	pusha  
  406e06:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e08:	xor    bh,BYTE PTR [ecx]
  406e0a:	xor    BYTE PTR [edx-0x75],dl
  406e0d:	cs pushf 
  406e0f:	mov    DWORD PTR [edi],edi
  406e11:	mov    esp,0x49d2f70b
  406e16:	push   edx
  406e17:	test   BYTE PTR [ebp+0x7e],ch
  406e1a:	mov    eax,ds:0xc1bd6f6d
  406e1f:	cli    
  406e20:	call   0x373db2de
  406e25:	outs   dx,BYTE PTR ds:[esi]
  406e26:	sub    BYTE PTR [ecx-0x2d3e3834],ah
  406e2c:	pop    esp
  406e2d:	sbb    al,0xd4
  406e2f:	fdivp  st(4),st
  406e31:	scas   eax,DWORD PTR es:[edi]
  406e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e33:	dec    edi
  406e34:	in     al,0x5e
  406e36:	imul   esi,DWORD PTR [edi+0x30],0x1d24d3d
  406e3d:	imul   esp,DWORD PTR [ecx+0x2a],0x50e630b5
  406e44:	arpl   WORD PTR [ecx+eax*1-0x6d],bx
  406e48:	inc    edi
  406e49:	and    ebp,DWORD PTR [ebx]
  406e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4c:	add    BYTE PTR [edx],0x87
  406e4f:	shl    DWORD PTR ds:0x498976b1,1
  406e55:	push   DWORD PTR [eax+0x3e]
  406e58:	fwait
  406e59:	add    esp,DWORD PTR [edx+0x24b7bbd5]
  406e5f:	rol    BYTE PTR [edx+0x224ba4a],cl
  406e65:	sub    eax,0x9754a837
  406e6a:	out    0x32,al
  406e6c:	dec    edi
  406e6d:	mov    bl,0xa
  406e6f:	jg     0x406e31
  406e71:	mov    eax,0xa9ca5580
  406e76:	and    BYTE PTR [ecx+0x10],0xbc
  406e7a:	gs (bad) 
  406e7c:	loop   0x406e52
  406e7e:	inc    eax
  406e7f:	mov    eax,0x307ff7c8
  406e84:	int3   
  406e85:	mov    ch,0xa2
  406e87:	adc    edx,DWORD PTR [edx+0x13]
  406e8a:	adc    eax,0x217d6cdb
  406e8f:	sbb    dl,BYTE PTR [ebx-0x68]
  406e92:	es mov esp,0x80cc8132
  406e98:	hlt    
  406e99:	and    eax,0x8bdd6d44
  406e9e:	call   0xe7661987
  406ea3:	pop    ecx
  406ea4:	in     al,dx
  406ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea6:	mov    ch,0xf
  406ea8:	lods   al,BYTE PTR ds:[esi]
  406ea9:	mov    ebx,0xae11fab5
  406eae:	sbb    eax,ebx
  406eb0:	push   ds
  406eb1:	add    edx,DWORD PTR ss:[edi+0x3b]
  406eb5:	out    dx,eax
  406eb6:	xchg   edx,eax
  406eb7:	arpl   dx,cx
  406eb9:	(bad)  
  406eba:	nop
  406ebb:	sub    BYTE PTR [eax],ch
  406ebd:	adc    cl,bh
  406ebf:	aaa    
  406ec0:	hlt    
  406ec1:	sub    edi,DWORD PTR [esi+ebx*1+0x6a4926d8]
  406ec8:	addr16 in al,dx
  406eca:	adc    al,0xd1
  406ecc:	aam    0xf8
  406ece:	ins    BYTE PTR es:[edi],dx
  406ecf:	lods   al,BYTE PTR ds:[esi]
  406ed0:	ficom  WORD PTR [ebx]
  406ed2:	in     eax,0x4d
  406ed4:	sti    
  406ed5:	pop    eax
  406ed6:	xor    DWORD PTR [edx+ebp*4-0x67],esi
  406eda:	fldcw  WORD PTR ds:0x8d55435b
  406ee0:	retf   0x934
  406ee3:	out    dx,eax
  406ee4:	loope  0x406f5e
  406ee6:	lock iret 
  406ee8:	pop    ecx
  406ee9:	mov    eax,ds:0x70527b7d
  406eee:	mov    dl,0xbe
  406ef0:	push   ecx
  406ef1:	and    al,0x1b
  406ef3:	add    dl,0xb4
  406ef6:	in     eax,0x50
  406ef8:	xchg   esi,eax
  406ef9:	gs ins BYTE PTR es:[edi],dx
  406efb:	cmp    dl,BYTE PTR [ecx+0x6b3a0688]
  406f01:	lods   eax,DWORD PTR ds:[esi]
  406f02:	jne    0x406ef9
  406f04:	je     0x406ec0
  406f06:	loop   0x406ebc
  406f08:	xchg   DWORD PTR [ebp-0x44],ecx
  406f0b:	stc    
  406f0c:	mov    ds:0xae408e44,eax
  406f11:	(bad)  
  406f12:	fistp  DWORD PTR [eax-0x36]
  406f15:	mov    esi,0xa646eb4e
  406f1a:	mov    al,0xdd
  406f1c:	mov    al,ds:0x82d3c076
  406f21:	push   esp
  406f22:	and    edi,edi
  406f24:	pop    esp
  406f25:	aad    0x78
  406f27:	sbb    dh,cl
  406f29:	push   edx
  406f2a:	sbb    ah,ch
  406f2c:	cmp    ch,BYTE PTR [edi+0x6c]
  406f2f:	jo     0x406ed3
  406f31:	int    0x50
  406f33:	jbe    0x406ee7
  406f35:	jne    0x406f40
  406f37:	shr    BYTE PTR [ecx+0x6c22747],1
  406f3d:	mov    cl,0xb7
  406f3f:	or     BYTE PTR [edx+0x5f],ch
  406f42:	inc    ebp
  406f43:	adc    BYTE PTR [di+0x11ae],0xbe
  406f49:	rcr    esi,cl
  406f4b:	pushf  
  406f4c:	dec    BYTE PTR [ebp+0x48]
  406f4f:	push   ebx
  406f50:	dec    edi
  406f51:	test   BYTE PTR [eax-0x3dea0826],bl
  406f57:	add    DWORD PTR [ecx+0x2e04c9c2],edx
  406f5d:	jge    0x406f9f
  406f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f60:	rol    esi,1
  406f62:	cdq    
  406f63:	jg     0x406f83
  406f65:	cmp    ebp,eax
  406f67:	loope  0x406fb5
  406f69:	cmc    
  406f6a:	xchg   BYTE PTR [ebx+0x1aa1955b],dh
  406f70:	mov    cl,0xf1
  406f72:	bound  ebp,QWORD PTR [ecx+eiz*4+0x748fe189]
  406f79:	push   eax
  406f7a:	dec    esi
  406f7b:	mov    ebx,0x8b8d06a4
  406f80:	mov    edx,0x20a39a6f
  406f85:	rcl    BYTE PTR [edi],1
  406f87:	stos   BYTE PTR es:[edi],al
  406f88:	test   eax,0xd80f33de
  406f8d:	je     0x406ff4
  406f8f:	inc    esi
  406f90:	cmp    al,0x9c
  406f92:	mov    edx,0x69e586e5
  406f97:	and    eax,0x7920cf0a
  406f9c:	push   eax
  406f9d:	pop    DWORD PTR [edx+0x4c]
  406fa0:	push   cs
  406fa1:	cmp    al,ah
  406fa3:	popa   
  406fa4:	sbb    edi,DWORD PTR [edi]
  406fa6:	into   
  406fa7:	int    0x2f
  406fa9:	inc    eax
  406faa:	jp     0x10be94c9
  406fb0:	xor    al,0xb6
  406fb2:	dec    eax
  406fb3:	(bad)  
  406fb4:	sti    
  406fb5:	mov    fs,ecx
  406fb7:	cdq    
  406fb8:	push   eax
  406fb9:	jbe    0x406fc9
  406fbb:	adc    edx,0xc72110e3
  406fc1:	lds    ebx,FWORD PTR [ebp+0x5e]
  406fc4:	sub    eax,0x82b6f078
  406fc9:	push   edx
  406fca:	push   esi
  406fcb:	mov    ecx,0xa61f0974
  406fd0:	or     esp,ebp
  406fd2:	push   edx
  406fd3:	push   ds
  406fd4:	test   BYTE PTR [ecx+0x7f210822],al
  406fda:	and    BYTE PTR [ebp+0x64],ah
  406fdd:	popf   
  406fde:	sbb    eax,DWORD PTR [edi-0x1d]
  406fe1:	cmp    eax,DWORD PTR [edi-0x3dffc45a]
  406fe7:	daa    
  406fe8:	dec    dh
  406fea:	and    eax,0x5d658251
  406fef:	add    bh,bl
  406ff1:	(bad)  
  406ff2:	retf   
  406ff3:	mov    bl,0x53
  406ff5:	call   0x5d9a:0x325ddec5
  406ffc:	out    0x79,eax
  406ffe:	in     eax,0x54
  407000:	std    
  407001:	inc    esi
  407002:	mov    al,0x77
  407004:	sar    BYTE PTR [edi-0x52],0x40
  407008:	xchg   esi,eax
  407009:	lock leave 
  40700b:	or     DWORD PTR [ebx+0x7c],esp
  40700e:	mov    ecx,esp
  407010:	add    al,0x6
  407012:	xchg   ebx,eax
  407013:	push   edx
  407014:	cmp    cl,bl
  407016:	out    dx,eax
  407017:	push   edx
  407018:	jne    0x40705f
  40701a:	clc    
  40701b:	or     DWORD PTR [edi-0x2b69b45f],ecx
  407021:	pop    DWORD PTR [ebx-0x32]
  407024:	call   0x9ffc7e31
  407029:	mov    cl,0xce
  40702b:	setb   BYTE PTR [ecx]
  40702e:	fdiv   DWORD PTR [ebp+ebx*8-0x1f]
  407032:	sub    ch,BYTE PTR [eax]
  407034:	arpl   WORD PTR [ecx],bx
  407036:	sub    bh,BYTE PTR [edx]
  407038:	iret   
  407039:	xchg   ebp,eax
  40703a:	stc    
  40703b:	fwait
  40703c:	jbe    0x40707a
  40703e:	cli    
  40703f:	mov    al,ds:0x22d214b4
  407044:	call   0x24b9f025
  407049:	icebp  
  40704a:	mov    dl,dl
  40704c:	mov    cl,0xac
  40704e:	jb     0x407042
  407050:	xor    eax,0xb04156a1
  407055:	mov    ?,WORD PTR [edx-0x665a2526]
  40705b:	or     BYTE PTR [ebx+edx*8-0x1c],0x2e
  407060:	loopne 0x40708a
  407062:	fwait
  407063:	call   0x1c03:0xb4c59bad
  40706a:	sub    BYTE PTR [eax-0x7b],bh
  40706d:	jno    0x407076
  40706f:	mov    ecx,0xe28b3e89
  407074:	shr    BYTE PTR [ecx-0x2db9ec0],cl
  40707a:	push   ss
  40707b:	out    0x53,eax
  40707d:	aam    0xc6
  40707f:	jecxz  0x407069
  407081:	popa   
  407082:	repnz clc 
  407084:	push   ss
  407085:	pop    edi
  407086:	cmp    BYTE PTR [edx+0x50],bh
  407089:	dec    ebx
  40708a:	std    
  40708b:	cdq    
  40708c:	and    BYTE PTR [ecx],bh
  40708e:	mov    bh,0x88
  407090:	dec    esp
  407091:	mov    al,ds:0x1986a278
  407096:	dec    BYTE PTR [ebx+0x28]
  407099:	sbb    ebp,edx
  40709b:	repz mov ch,0xf4
  40709e:	repz (bad) 
  4070a1:	out    0x4b,al
  4070a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070a4:	fisubr WORD PTR [ebp-0x1dfebba6]
  4070aa:	dec    esp
  4070ab:	ins    DWORD PTR es:[edi],dx
  4070ac:	in     al,dx
  4070ad:	and    dh,BYTE PTR [edi*1-0x64fdc5ba]
  4070b4:	jmp    0xd02662cb
  4070b9:	jle    0x40710e
  4070bb:	addr16 mov ebp,0x674495e9
  4070c1:	rcr    DWORD PTR [ebp+eiz*2-0x481eec05],0x71
  4070c9:	mul    BYTE PTR [eax+ebp*2+0x63cd12e0]
  4070d0:	fld    TBYTE PTR [eax+0x69fbfd64]
  4070d6:	cwde   
  4070d7:	fisub  WORD PTR [ebx]
  4070d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070da:	idiv   esi
  4070dc:	and    al,0x62
  4070de:	add    BYTE PTR [esi+0x50c42b21],dh
  4070e4:	push   cs
  4070e5:	pop    eax
  4070e6:	test   DWORD PTR [edx+edx*8+0x3fce142],0x98fbf9b0
  4070f1:	xor    eax,0x614f7f8e
  4070f6:	mov    ch,0xa7
  4070f8:	pop    eax
  4070f9:	adc    ebp,DWORD PTR [ebp-0xed7eaa0]
  4070ff:	retf   
  407100:	mov    gs,WORD PTR [esi]
  407102:	add    DWORD PTR [edi+eax*2],esi
  407105:	imul   DWORD PTR [ebx-0x19cc0f73]
  40710b:	dec    edx
  40710c:	fstp   QWORD PTR [ebx-0x6b2a4a04]
  407112:	imul   edx,eax,0xdbc40fe1
  407118:	jb     0x4070a5
  40711a:	mov    edx,0xe28c9a05
  40711f:	jmp    0x40719f
  407121:	inc    edi
  407122:	scas   eax,DWORD PTR es:[edi]
  407123:	test   BYTE PTR [esi],bh
  407125:	add    cl,dh
  407127:	ret    
  407128:	stos   BYTE PTR es:[edi],al
  407129:	or     DWORD PTR [ebx],edi
  40712b:	pop    edx
  40712c:	rol    DWORD PTR cs:[edi+0x7],1
  407130:	inc    ebp
  407131:	push   edx
  407132:	mov    edi,0x1f6a3c1d
  407137:	pop    ecx
  407138:	mov    edi,0x642ca053
  40713d:	out    dx,al
  40713e:	add    eax,0x54de3555
  407143:	dec    eax
  407144:	js     0x4070fd
  407146:	lahf   
  407147:	xchg   ecx,eax
  407148:	dec    ebp
  407149:	test   al,0x78
  40714b:	pop    ebp
  40714c:	in     eax,0x93
  40714e:	cmc    
  40714f:	in     eax,0x40
  407151:	cwde   
  407152:	ds cs mov bl,0x75
  407156:	test   ebp,0x781e3ff8
  40715c:	fidivr DWORD PTR [edi-0x10]
  40715f:	add    ebp,DWORD PTR es:[edi+0xc]
  407163:	sub    DWORD PTR [eax],0xffffffc3
  407166:	cs ret 0x981a
  40716a:	aad    0xd6
  40716c:	mov    ebx,0xab4ee69
  407171:	enter  0x77ff,0x5
  407175:	ds mov esp,0x4143ae29
  40717b:	xchg   edi,eax
  40717c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40717d:	ret    0x37ca
  407180:	ja     0x40714f
  407182:	pop    eax
  407183:	or     eax,0xddbc2d66
  407188:	or     esi,DWORD PTR [edx+0x70316de]
  40718e:	push   esi
  40718f:	jge    0x4071a6
  407191:	xlat   BYTE PTR ds:[ebx]
  407192:	outs   dx,DWORD PTR ds:[esi]
  407193:	jle    0x4071cf
  407195:	in     eax,0x87
  407197:	lock mov WORD PTR [edx],gs
  40719a:	or     esi,DWORD PTR [eiz*2+0x579324a0]
  4071a1:	sbb    esp,DWORD PTR [edi+0x2119b152]
  4071a7:	sub    BYTE PTR [esi-0x698a93e7],ch
  4071ad:	adc    BYTE PTR [eax+edx*1],ah
  4071b0:	and    ecx,DWORD PTR [ebx-0x7c]
  4071b3:	xchg   DWORD PTR [ecx-0x716c0976],ebx
  4071b9:	out    0xfd,al
  4071bb:	xchg   DWORD PTR [eax-0x6814b777],ebp
  4071c1:	add    DWORD PTR [edx],eax
  4071c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c4:	lahf   
  4071c5:	shr    DWORD PTR [eax-0x27897e08],0xce
  4071cc:	shl    DWORD PTR [ebx],1
  4071ce:	call   0xa496:0xb97b2041
  4071d5:	sbb    al,0x54
  4071d7:	outs   dx,BYTE PTR ds:[esi]
  4071d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071d9:	and    eax,DWORD PTR [esi+0x55]
  4071dc:	or     BYTE PTR [esi+ebx*2+0x2e38895a],dl
  4071e3:	leave  
  4071e4:	sbb    DWORD PTR [ecx+0x27e15a99],edi
  4071ea:	aad    0xca
  4071ec:	fild   DWORD PTR [edi]
  4071ee:	push   ecx
  4071ef:	ja     0x407177
  4071f1:	jle    0x407218
  4071f3:	sbb    eax,0xb98cf865
  4071f8:	xchg   esp,eax
  4071f9:	fcmovnbe st,st(3)
  4071fb:	adc    esp,DWORD PTR [edx+ebp*4-0x66]
  4071ff:	sub    al,0x64
  407201:	jg     0x40724a
  407203:	push   cs
  407204:	ss jle 0x4071dc
  407207:	dec    ebp
  407208:	sbb    al,0x93
  40720a:	gs cmp ebx,esp
  40720d:	aaa    
  40720e:	mov    dh,0x21
  407210:	xor    eax,DWORD PTR [ebx]
  407212:	xor    edi,edi
  407214:	mov    ah,0x1d
  407216:	stos   DWORD PTR es:[edi],eax
  407217:	shl    BYTE PTR [ebx+0x5a],1
  40721a:	push   es
  40721b:	add    eax,0x9cada283
  407220:	test   DWORD PTR [ebx+0x7950a400],esi
  407226:	xor    al,0xb1
  407228:	leave  
  407229:	xchg   ebx,eax
  40722a:	and    eax,0x2f1ee099
  40722f:	aam    0x4
  407231:	jns    0x407230
  407233:	out    dx,eax
  407234:	addr16 mov dh,0x86
  407237:	mov    esi,0xf379bd28
  40723c:	fdivr  st(0),st
  40723e:	add    eax,0x61e1e89e
  407243:	xlat   BYTE PTR ds:[ebx]
  407244:	test   BYTE PTR [eax],dl
  407246:	mov    bh,dl
  407248:	jb     0x4072c0
  40724a:	push   0x79
  40724c:	clc    
  40724d:	inc    eax
  40724e:	int3   
  40724f:	rol    DWORD PTR [edi-0x4054a511],0xff
  407256:	mov    es,WORD PTR [ebx-0x2]
  407259:	aad    0xc2
  40725b:	dec    esi
  40725c:	pop    es
  40725d:	adc    eax,0xed69fa5e
  407262:	retf   
  407263:	dec    ebp
  407264:	xor    al,0x5d
  407266:	stc    
  407267:	dec    esp
  407268:	(bad)  
  407269:	xor    ebp,eax
  40726b:	sahf   
  40726c:	mov    dh,0xf1
  40726e:	ret    
  40726f:	push   edx
  407270:	and    esp,DWORD PTR [edx-0x6fe2b96c]
  407276:	fsubrp st(4),st
  407278:	gs jecxz 0x407227
  40727b:	out    0x37,al
  40727d:	(bad)  
  40727e:	push   es
  40727f:	ss pop ebp
  407281:	cwde   
  407282:	cdq    
  407283:	sbb    al,0xb4
  407285:	push   0x1878bba9
  40728a:	addr16 nop
  40728c:	je     0x40729b
  40728e:	lds    edx,FWORD PTR [esi]
  407290:	mov    ebp,0x4257bd04
  407295:	jnp    0x407283
  407297:	sub    BYTE PTR [edi],0x81
  40729a:	xlat   BYTE PTR ds:[ebx]
  40729b:	jmp    0x2d9598a3
  4072a0:	push   es
  4072a1:	(bad)
  4072a4:	mov    ss,WORD PTR [esi]
  4072a6:	lock sbb ecx,DWORD PTR [ecx]
  4072a9:	rcl    BYTE PTR [ecx+0x55b1c231],1
  4072af:	and    al,0x4d
  4072b1:	pusha  
  4072b2:	loop   0x407325
  4072b4:	pusha  
  4072b5:	lea    eax,[edx-0x6e]
  4072b8:	xlat   BYTE PTR ds:[ebx]
  4072b9:	mov    WORD PTR [ebx],?
  4072bb:	or     bl,bh
  4072bd:	in     al,dx
  4072be:	adc    eax,0xa3420cec
  4072c3:	repnz pusha 
  4072c5:	xor    ebx,ebp
  4072c7:	jo     0x40728d
  4072c9:	out    dx,eax
  4072ca:	jno    0x40728c
  4072cc:	or     BYTE PTR [edi-0x66c13146],cl
  4072d2:	and    dl,BYTE PTR [esi-0xba3959e]
  4072d8:	xchg   ebx,ecx
  4072da:	retf   
  4072db:	sbb    al,0x5
  4072dd:	pusha  
  4072de:	shr    DWORD PTR [eax-0x49],1
  4072e1:	inc    esp
  4072e2:	dec    edi
  4072e3:	popa   
  4072e4:	push   ebx
  4072e5:	add    BYTE PTR [ecx-0x99d2df2],0x4b
  4072ec:	jno    0x407281
  4072ee:	add    al,0x7d
  4072f0:	jbe    0x4072f6
  4072f2:	sub    eax,0xf4a45874
  4072f7:	shl    edx,1
  4072f9:	add    cl,BYTE PTR [edx+0x4d]
  4072fc:	neg    BYTE PTR [edi]
  4072fe:	sub    al,dh
  407300:	arpl   WORD PTR [edx],bx
  407302:	push   cs
  407303:	xchg   ebx,eax
  407304:	inc    ecx
  407305:	jbe    0x407360
  407307:	fcmove st,st(7)
  407309:	(bad)  
  40730a:	jns    0x407371
  40730c:	push   ebp
  40730d:	add    eax,0xf8f2263d
  407312:	in     al,0xd
  407314:	pop    esp
  407315:	outs   dx,DWORD PTR ds:[esi]
  407316:	rcl    BYTE PTR [eax],cl
  407318:	pop    esi
  407319:	mov    ebx,0x2c3c2f9b
  40731e:	add    esp,0xffffffab
  407321:	push   ecx
  407322:	mov    BYTE PTR [edx+eiz*2],ah
  407325:	sahf   
  407326:	push   es
  407327:	gs pop edi
  407329:	push   ecx
  40732a:	lahf   
  40732b:	push   cs
  40732c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40732d:	pop    esi
  40732e:	and    BYTE PTR [edi+0x1c],cl
  407331:	sbb    eax,0xb7d5b4d1
  407336:	aas    
  407337:	mov    ax,0x6558
  40733b:	loope  0x4072f5
  40733d:	xor    eax,0x6c5da34d
  407342:	xchg   edx,eax
  407343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407344:	mov    al,0xa4
  407346:	scas   al,BYTE PTR es:[edi]
  407347:	das    
  407348:	cmp    DWORD PTR [edx-0x2deadb0c],ecx
  40734e:	les    edi,FWORD PTR fs:[esi-0x2e]
  407352:	pusha  
  407353:	push   ds
  407354:	mov    ds,WORD PTR [ebx+esi*8]
  407357:	mov    dh,0x2b
  407359:	outs   dx,BYTE PTR ds:[esi]
  40735a:	loop   0x4073c9
  40735c:	fsub   DWORD PTR [eax+0x4c16628e]
  407362:	or     BYTE PTR [ebx-0x57],0x10
  407366:	mov    al,0x1f
  407368:	and    DWORD PTR [ebx-0x31db107f],ebx
  40736e:	(bad)  
  40736f:	and    esi,DWORD PTR [esi]
  407371:	out    dx,al
  407372:	mov    ah,bh
  407374:	scas   eax,DWORD PTR es:[edi]
  407375:	not    DWORD PTR ds:0x3a503951
  40737b:	push   0x6
  40737d:	jns    0x4073ac
  40737f:	in     eax,0xc2
  407381:	ins    DWORD PTR es:[edi],dx
  407382:	sbb    al,0x10
  407384:	mov    ds:0xc25d31ba,al
  407389:	fcmovnb st,st(2)
  40738b:	jns    0x4073ff
  40738d:	mov    bl,0x38
  40738f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407391:	fbld   TBYTE PTR [ecx+0x5256d19e]
  407397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407398:	je     0x4073f1
  40739a:	lahf   
  40739b:	mov    dh,0xf5
  40739d:	ficom  DWORD PTR [ecx-0x3a034a33]
  4073a3:	ret    
  4073a4:	cwde   
  4073a5:	inc    ebp
  4073a6:	mov    ch,0xe6
  4073a8:	imul   edx,DWORD PTR [eax+eiz*4],0xb9fd3e8b
  4073af:	sbb    eax,0x8feb8228
  4073b4:	inc    esi
  4073b5:	dec    esp
  4073b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b8:	mov    al,0x81
  4073ba:	loopne 0x407377
  4073bc:	ja     0x407374
  4073be:	jp     0x40735a
  4073c0:	sbb    edx,DWORD PTR [edi]
  4073c2:	sbb    al,0xa
  4073c4:	jle    0x4073de
  4073c6:	cs pop eax
  4073c8:	xchg   cl,dh
  4073ca:	inc    ebp
  4073cb:	and    BYTE PTR [edx-0x16],ch
  4073ce:	(bad)  
  4073cf:	adc    BYTE PTR [esi-0x296e277f],bl
  4073d5:	pop    es
  4073d6:	ja     0x407364
  4073d8:	fs cld 
  4073da:	xor    DWORD PTR [ecx],ebp
  4073dc:	ja     0x40736a
  4073de:	lds    ebp,FWORD PTR [ecx]
  4073e0:	sub    ah,BYTE PTR [edx]
  4073e2:	stos   BYTE PTR es:[edi],al
  4073e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e4:	push   esp
  4073e5:	mov    DWORD PTR [ecx],edx
  4073e7:	aam    0x52
  4073e9:	jecxz  0x407436
  4073eb:	adc    ebp,esp
  4073ed:	ins    DWORD PTR es:[edi],dx
  4073ee:	es enter 0x6438,0x4a
  4073f3:	inc    edi
  4073f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f5:	sbb    al,0x93
  4073f7:	push   eax
  4073f8:	into   
  4073f9:	mov    eax,ds:0x53ebb434
  4073fe:	rcl    edx,1
  407400:	pusha  
  407401:	loopne 0x407399
  407403:	push   0xffffff88
  407405:	test   DWORD PTR [edx],ebx
  407407:	mov    ds:0xafa99514,eax
  40740c:	fidiv  WORD PTR [esi+0x516f9ae3]
  407412:	xchg   edi,eax
  407413:	push   es
  407414:	fidivr DWORD PTR [ebx]
  407416:	(bad)  
  407417:	gs jmp 0xa6f9:0xc919
  40741e:	cwde   
  40741f:	push   esp
  407420:	jns    0x407423
  407422:	pop    edx
  407423:	or     al,0x1d
  407425:	(bad)  
  407426:	sbb    BYTE PTR [edi],bh
  407428:	jge    0x40742a
  40742a:	lds    esp,FWORD PTR [ebp+esi*8-0x4432537d]
  407431:	push   es
  407432:	sbb    cl,bh
  407434:	mov    bh,bl
  407436:	hlt    
  407437:	mov    DWORD PTR [ebp+0x7dcccbd8],edx
  40743d:	mov    DWORD PTR [ecx+0x4b9f547c],edi
  407443:	bound  edi,QWORD PTR [eax-0x5d]
  407446:	arpl   WORD PTR [edx],di
  407448:	dec    ecx
  407449:	fwait
  40744a:	out    0x83,eax
  40744c:	loop   0x407439
  40744e:	loop   0x4073e6
  407450:	inc    esp
  407451:	cld    
  407452:	sub    DWORD PTR [edx+0x4e],eax
  407455:	mov    eax,0x85ce9123
  40745a:	inc    BYTE PTR [eax+0xa2da975]
  407460:	inc    ebp
  407461:	adc    al,0xd9
  407463:	sub    al,0x9
  407465:	mov    bl,0x4a
  407467:	ins    DWORD PTR es:[edi],dx
  407468:	and    BYTE PTR [esi+ebp*4+0x78a05549],dl
  40746f:	or     ah,BYTE PTR [ecx+0x7f]
  407472:	aaa    
  407473:	aaa    
  407474:	(bad)  
  407475:	jae    0x40745a
  407477:	sbb    DWORD PTR [edx+0x65739cd7],edx
  40747d:	xchg   ecx,eax
  40747e:	gs repnz mov bl,0xba
  407482:	pop    ecx
  407483:	in     al,0x66
  407485:	and    eax,0x8709614
  40748a:	jl     0x4074e4
  40748c:	outs   dx,BYTE PTR ds:[esi]
  40748d:	stos   BYTE PTR es:[edi],al
  40748e:	stos   BYTE PTR es:[edi],al
  40748f:	mov    BYTE PTR [eax+0x5c],cl
  407492:	jne    0x407480
  407494:	int    0x39
  407496:	test   DWORD PTR [eax-0x20],edx
  407499:	test   BYTE PTR [ebx],bh
  40749b:	jecxz  0x40747d
  40749d:	in     al,0x89
  40749f:	cwde   
  4074a0:	ds jg  0x4074f8
  4074a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a4:	add    eax,0x5e9eb6c0
  4074a9:	out    0x4c,al
  4074ab:	mov    bl,0x15
  4074ad:	je     0x407521
  4074af:	push   esp
  4074b0:	(bad)  
  4074b1:	sti    
  4074b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b3:	push   cs
  4074b4:	into   
  4074b5:	stc    
  4074b6:	xchg   edi,eax
  4074b7:	sbb    eax,DWORD PTR [eax-0x17a417a1]
  4074bd:	in     al,0x59
  4074bf:	hlt    
  4074c0:	mov    DWORD PTR [esi],ebp
  4074c2:	popf   
  4074c3:	mov    eax,ds:0xea8452e2
  4074c8:	and    al,al
  4074ca:	push   es
  4074cb:	jmp    0x14ec:0x897bea28
  4074d2:	daa    
  4074d3:	shl    BYTE PTR [ecx+edi*4-0x39],1
  4074d7:	lock ret 
  4074d9:	ja     0x4074b0
  4074db:	pop    esp
  4074dc:	pop    ds
  4074dd:	iret   
  4074de:	je     0x407548
  4074e0:	das    
  4074e1:	cmc    
  4074e2:	mov    ds:0x6d197fc3,eax
  4074e7:	rcl    BYTE PTR [edx+0x709aa16],1
  4074ed:	push   ebp
  4074ee:	loopne 0x40754c
  4074f0:	scas   al,BYTE PTR es:[edi]
  4074f1:	xchg   DWORD PTR [eax],eax
  4074f3:	(bad)  
  4074f4:	lods   eax,DWORD PTR ds:[esi]
  4074f5:	lods   eax,DWORD PTR ds:[esi]
  4074f6:	push   ecx
  4074f7:	jne    0x407548
  4074f9:	(bad)  
  4074fa:	retf   
  4074fb:	mov    ch,0x71
  4074fd:	xchg   BYTE PTR [edi+0x56900915],ah
  407503:	jl     0x40751e
  407505:	ret    0x624
  407508:	loop   0x407512
  40750a:	pop    eax
  40750b:	test   eax,0x3d20c3bb
  407510:	ins    BYTE PTR es:[edi],dx
  407511:	adc    BYTE PTR [esi-0x1f],bl
  407514:	cmp    DWORD PTR [ecx],esp
  407516:	jno    0x4074b2
  407518:	mov    dl,0x65
  40751a:	jb     0x4074c7
  40751c:	jmp    0xce72ec44
  407521:	mov    ds:0x18e1403b,al
  407526:	xor    eax,0xf7fa3c2
  40752b:	pop    edx
  40752c:	lahf   
  40752d:	or     al,0xe7
  40752f:	lods   eax,DWORD PTR ds:[esi]
  407530:	or     BYTE PTR [edi],bl
  407532:	push   ds
  407533:	jl     0x40759a
  407535:	pop    DWORD PTR [esi-0x15]
  407538:	and    BYTE PTR [eax-0x2e],cl
  40753b:	mov    al,ds:0xc3228a82
  407540:	cli    
  407541:	push   esi
  407542:	out    0x46,al
  407544:	cwde   
  407545:	mov    esi,0x9c478775
  40754a:	mov    ebx,0xf3117060
  40754f:	repnz dec ebp
  407551:	repz repz in al,dx
  407554:	push   cs
  407555:	(bad)  
  407556:	and    BYTE PTR [ebp+0xe],bl
  407559:	mov    DWORD PTR [edx+ebp*4+0xdfef9c5],edi
  407560:	fwait
  407561:	add    DWORD PTR [ebx-0x51496dcf],ecx
  407567:	inc    ebx
  407568:	fidiv  DWORD PTR [ebx-0x7274dc4a]
  40756e:	inc    eax
  40756f:	add    DWORD PTR [edx-0x3fbed8ec],ecx
  407575:	mov    al,0xc3
  407577:	xor    DWORD PTR [eax+0x6b],edi
  40757a:	cmovle ebx,esi
  40757d:	fmul   st(1),st
  40757f:	sbb    eax,0x4ced142c
  407584:	pop    ds
  407585:	adc    ah,ah
  407587:	sbb    BYTE PTR [ecx],0x8e
  40758a:	je     0x407608
  40758c:	inc    edi
  40758d:	sbb    eax,0xa950b25f
  407592:	pusha  
  407593:	adc    bh,BYTE PTR [esi]
  407595:	xor    ecx,DWORD PTR [ebx-0xf]
  407598:	ins    BYTE PTR es:[edi],dx
  407599:	into   
  40759a:	dec    edx
  40759b:	push   edx
  40759c:	inc    esi
  40759d:	adc    bh,cl
  40759f:	sar    esi,0xe6
  4075a2:	test   BYTE PTR ds:0x5fc4,dl
  4075a7:	sub    BYTE PTR [edx],0xe2
  4075aa:	jecxz  0x407567
  4075ac:	stos   DWORD PTR es:[edi],eax
  4075ad:	aas    
  4075ae:	and    DWORD PTR [eax],edx
  4075b0:	xchg   esi,eax
  4075b1:	lock out dx,eax
  4075b3:	pop    ecx
  4075b4:	loope  0x4075d4
  4075b6:	sbb    eax,0x446a88b8
  4075bb:	pusha  
  4075bc:	inc    edi
  4075bd:	inc    ebx
  4075be:	xchg   edi,eax
  4075bf:	mov    ebp,0x1b287eef
  4075c4:	bound  edi,QWORD PTR [esi]
  4075c6:	or     BYTE PTR [edx+0x73],bh
  4075c9:	pop    eax
  4075ca:	push   eax
  4075cb:	push   eax
  4075cc:	push   edi
  4075cd:	or     BYTE PTR [edx],cl
  4075cf:	test   bl,ch
  4075d1:	sbb    edi,edi
  4075d3:	fadd   QWORD PTR ds:[esi+0x5c1d537f]
  4075da:	or     eax,0x62f135f3
  4075df:	dec    eax
  4075e0:	lods   eax,DWORD PTR ds:[esi]
  4075e1:	lock xchg ecx,eax
  4075e3:	xchg   edx,eax
  4075e4:	xchg   ebx,eax
  4075e5:	mov    dl,0xc6
  4075e7:	adc    al,al
  4075e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ea:	ret    
  4075eb:	mov    al,0xc1
  4075ed:	add    al,0x88
  4075ef:	out    0xa5,eax
  4075f1:	jbe    0x4075f9
  4075f3:	arpl   WORD PTR [ebx+0x3],sp
  4075f6:	xor    eax,0x303cd892
  4075fb:	(bad)  
  4075fc:	scas   al,BYTE PTR es:[edi]
  4075fd:	dec    ebx
  4075fe:	push   esi
  4075ff:	stos   DWORD PTR es:[edi],eax
  407600:	jle    0x4075fa
  407602:	push   ds
  407603:	(bad)  
  407604:	push   edi
  407605:	mov    ecx,0xd2ab450a
  40760a:	mov    esi,0x68a3bec0
  40760f:	bswap  edi
  407611:	jmp    0xbb294dd3
  407616:	(bad)  
  407617:	fdivr  st,st(4)
  407619:	push   ss
  40761a:	ins    DWORD PTR es:[edi],dx
  40761b:	std    
  40761c:	sub    ebx,ecx
  40761e:	mov    dh,BYTE PTR [eax+ecx*8-0x1c]
  407622:	xchg   DWORD PTR [edi+0x3d],edx
  407625:	lahf   
  407626:	ret    0x6ef0
  407629:	pop    ss
  40762a:	mov    DWORD PTR [edi+0x4],esp
  40762d:	cmp    ebx,DWORD PTR [edi-0x3f]
  407630:	hlt    
  407631:	clc    
  407632:	retf   
  407633:	sub    ebx,esi
  407635:	lods   al,BYTE PTR cs:[esi]
  407637:	cmp    DWORD PTR [eax-0x33],ebp
  40763a:	in     al,0x9d
  40763c:	and    eax,DWORD PTR ds:0xbc3db874
  407642:	(bad)  
  407643:	adc    eax,0x7ed61f5c
  407648:	xchg   ecx,eax
  407649:	cmp    BYTE PTR ds:[eax-0x74],0x4
  40764e:	out    dx,al
  40764f:	dec    edi
  407650:	in     eax,dx
  407651:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  407653:	aad    0x11
  407655:	lock loopne 0x407683
  407658:	pop    ecx
  407659:	inc    ebp
  40765a:	hlt    
  40765b:	mul    BYTE PTR ds:0xa871cf84
  407661:	ss xor eax,0x28423d93
  407667:	shl    DWORD PTR [edi],1
  407669:	jge    0x4076d5
  40766b:	mov    WORD PTR [eax+0x27adfb09],?
  407671:	or     BYTE PTR [edi+edi*1],bl
  407674:	jno    0x40766d
  407676:	sub    cl,BYTE PTR [ebp+edx*4+0x216cd27f]
  40767d:	out    dx,al
  40767e:	sub    al,BYTE PTR [edx+ebx*1-0x1a44f0ed]
  407685:	sbb    ah,BYTE PTR [ebx]
  407687:	aam    0x3a
  407689:	leave  
  40768a:	stos   BYTE PTR es:[edi],al
  40768b:	(bad)  
  40768c:	jo     0x4076e2
  40768e:	add    edi,DWORD PTR [eax-0x1e]
  407691:	mov    al,0xea
  407693:	icebp  
  407694:	jns    0x4076f2
  407696:	in     al,dx
  407697:	mov    esp,0x6e5b1a65
  40769c:	adc    BYTE PTR [ecx-0x5d],bl
  40769f:	jb     0x407710
  4076a1:	fdiv   DWORD PTR [edx-0x1]
  4076a4:	mov    dl,0xaa
  4076a6:	inc    eax
  4076a7:	or     BYTE PTR [ecx-0x62],ah
  4076aa:	xor    al,0x4b
  4076ac:	cmp    esi,ebp
  4076ae:	pusha  
  4076af:	push   ebp
  4076b0:	sbb    cl,BYTE PTR [ecx]
  4076b2:	(bad)  
  4076b3:	cmc    
  4076b4:	pop    ecx
  4076b5:	inc    edx
  4076b6:	xchg   esp,eax
  4076b7:	xor    dl,BYTE PTR [edx+0x1b]
  4076ba:	aaa    
  4076bb:	adc    ch,BYTE PTR [ecx]
  4076bd:	in     al,0x75
  4076bf:	mov    ds:0x56f0001d,al
  4076c4:	ins    DWORD PTR es:[edi],dx
  4076c5:	inc    ebp
  4076c6:	pusha  
  4076c7:	dec    edx
  4076c8:	jbe    0x407658
  4076ca:	ss (bad) 
  4076cc:	shl    DWORD PTR [eax],1
  4076ce:	test   BYTE PTR [esi-0x4b45d692],cl
  4076d4:	inc    esi
  4076d5:	inc    ebx
  4076d6:	cmc    
  4076d7:	pop    ecx
  4076d8:	jns    0x4076af
  4076da:	fadd   DWORD PTR [ecx+0x5b]
  4076dd:	retf   
  4076de:	jmp    0xbb8ceb93
  4076e3:	out    0x86,al
  4076e5:	pop    ebx
  4076e6:	pop    ss
  4076e7:	leave  
  4076e8:	imul   esi,DWORD PTR [eax-0x1a2f2b6d],0x6f363c2a
  4076f2:	jmp    0x402055c9
  4076f7:	rcr    DWORD PTR [esi],0x85
  4076fa:	cdq    
  4076fb:	mov    BYTE PTR [ecx+0x19d9d4cf],ch
  407701:	adc    ebp,DWORD PTR [ebx]
  407703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407704:	xchg   esi,eax
  407705:	std    
  407706:	push   edi
  407707:	mov    dh,dh
  407709:	adc    ah,BYTE PTR [edi-0x1a]
  40770c:	inc    edi
  40770d:	and    eax,0x4512f678
  407712:	add    al,0x8d
  407714:	jno    0x407771
  407716:	imul   esi,DWORD PTR [ebx+0x460c2fec],0xffffff90
  40771d:	cmp    dl,BYTE PTR [eax+0x7e]
  407720:	sbb    bl,BYTE PTR [edi+0xe685494]
  407726:	call   0x798f:0x8fef681d
  40772d:	inc    edx
  40772e:	pusha  
  40772f:	pop    ss
  407730:	or     edx,DWORD PTR [ebx]
  407732:	mov    dl,0x8c
  407734:	sub    ecx,DWORD PTR [ebp-0x46edfda8]
  40773a:	ret    
  40773b:	cmp    eax,0xc06ad953
  407740:	jb     0x4076ee
  407742:	and    bl,BYTE PTR [eax+0x7f]
  407745:	xor    al,0x1f
  407747:	(bad)  
  407748:	sahf   
  407749:	inc    ebx
  40774a:	leave  
  40774b:	xor    dl,BYTE PTR [ebp-0x1c]
  40774e:	pop    ebx
  40774f:	fisttp WORD PTR [esi-0xa1bbb22]
  407755:	add    ebx,DWORD PTR [eax-0x6b25b105]
  40775b:	repz arpl WORD PTR [ecx],bx
  40775e:	shl    DWORD PTR [edx+0x76e23860],cl
  407764:	stos   BYTE PTR es:[edi],al
  407765:	pop    edx
  407766:	inc    ebp
  407767:	mov    eax,ds:0x5e9c17cf
  40776c:	leave  
  40776d:	inc    esp
  40776e:	mov    ebp,0xbed75182
  407773:	or     al,0x1c
  407775:	test   eax,0x5491b2e4
  40777a:	cdq    
  40777b:	out    0x88,eax
  40777d:	mov    al,ds:0xba3a3d90
  407782:	in     eax,dx
  407783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407784:	push   ebx
  407785:	mov    eax,0xc8b8ea74
  40778a:	repnz adc esp,DWORD PTR [ecx-0x110357cf]
  407791:	lods   eax,DWORD PTR ds:[esi]
  407792:	lods   al,BYTE PTR ds:[esi]
  407793:	mov    ah,0xa
  407795:	in     eax,0xf6
  407797:	or     eax,0xb6fc8fb
  40779c:	and    eax,0x8ed0f998
  4077a1:	mov    ?,WORD PTR [esi*1+0x459e2750]
  4077a8:	mov    al,0x95
  4077aa:	mov    eax,0x8c91ef35
  4077af:	lods   eax,DWORD PTR ds:[esi]
  4077b0:	push   es
  4077b1:	pop    ebx
  4077b2:	jbe    0x407752
  4077b4:	add    al,0xe9
  4077b6:	adc    al,0xa6
  4077b8:	daa    
  4077b9:	and    eax,DWORD PTR [ebp+0x1c39ad25]
  4077bf:	pop    ebp
  4077c0:	pop    ecx
  4077c1:	sbb    BYTE PTR [esi+0x6b],bl
  4077c4:	cmc    
  4077c5:	(bad)  
  4077c6:	cld    
  4077c7:	in     eax,dx
  4077c8:	xor    eax,0x6c655b18
  4077cd:	push   ecx
  4077ce:	inc    edx
  4077cf:	xor    esi,ecx
  4077d1:	fist   DWORD PTR [esi]
  4077d3:	cmc    
  4077d4:	in     al,0x94
  4077d6:	imul   esi,DWORD PTR [edi],0xb2520a3a
  4077dc:	push   ebx
  4077dd:	inc    esp
  4077de:	out    dx,al
  4077df:	add    eax,DWORD PTR [esi]
  4077e1:	push   ebp
  4077e2:	sbb    DWORD PTR [edx-0x65ae203],esi
  4077e8:	into   
  4077e9:	inc    esp
  4077ea:	push   0xffffffd5
  4077ec:	(bad)  
  4077ed:	adc    al,BYTE PTR [eax]
  4077ef:	pop    ebx
  4077f0:	push   edi
  4077f1:	hlt    
  4077f2:	cld    
  4077f3:	popf   
  4077f4:	in     al,dx
  4077f5:	mov    DWORD PTR [eax],ebp
  4077f7:	adc    cl,bl
  4077f9:	icebp  
  4077fa:	leave  
  4077fb:	into   
  4077fc:	rcr    BYTE PTR [edi-0x17],0x6b
  407800:	or     al,0xae
  407802:	data16 aam 0x91
  407805:	cmp    ah,ah
  407807:	xchg   DWORD PTR [ecx],ecx
  407809:	adc    ch,BYTE PTR [edx+0x7e111099]
  40780f:	mov    ds:0xf8b7ed1b,eax
  407814:	aas    
  407815:	in     eax,dx
  407816:	cdq    
  407817:	or     edi,DWORD PTR [esi+edi*8-0x58]
  40781b:	mov    ebp,0x35a3cd06
  407820:	in     eax,dx
  407821:	cld    
  407822:	sbb    ch,dl
  407824:	push   eax
  407825:	cmp    eax,0xf1dc2147
  40782a:	add    bl,bh
  40782c:	pop    ds
  40782d:	clc    
  40782e:	push   0xd19629e3
  407833:	add    bh,0x60
  407836:	fwait
  407837:	in     eax,0x84
  407839:	push   ebp
  40783a:	imul   edx,DWORD PTR [eax-0x51],0xa1f2fd8c
  407841:	shl    BYTE PTR [edx+edx*8+0x3d1f2071],0x58
  407849:	das    
  40784a:	sub    DWORD PTR [edi-0x10648ab6],esi
  407850:	xchg   ebp,eax
  407851:	sbb    eax,0x15be8da6
  407856:	mov    ecx,0xe0f253df
  40785b:	gs cs lea cx,ss:[esi+0x5b]
  407862:	fnstcw WORD PTR [esp+edi*1]
  407865:	push   edx
  407866:	das    
  407867:	repz test eax,0xc575ff01
  40786d:	mov    eax,ecx
  40786f:	mov    bl,0x5a
  407871:	rcr    BYTE PTR [ecx+ebx*2],0xec
  407875:	cmp    al,0x37
  407877:	cld    
  407878:	dec    ebp
  407879:	xor    DWORD PTR [eax+0x23663fc5],esp
  40787f:	cmc    
  407880:	and    al,0x2e
  407882:	pop    eax
  407883:	mov    edi,0x404c7ed4
  407888:	(bad)  
  407889:	mov    eax,0xbedb2054
  40788e:	arpl   WORD PTR ds:0x97fea170,bp
  407894:	adc    al,0x92
  407896:	mov    ?,WORD PTR [esi+ecx*4]
  407899:	es in  eax,0x1a
  40789c:	into   
  40789d:	popa   
  40789e:	jnp    0x4078f9
  4078a0:	sbb    eax,0x6fbfbde2
  4078a5:	jo     0x4078fe
  4078a7:	sub    eax,0x55f00d64
  4078ac:	mov    dh,0xc1
  4078ae:	(bad)  
  4078af:	cwde   
  4078b0:	adc    BYTE PTR [ebp-0x7f],ch
  4078b3:	jbe    0x4078d2
  4078b5:	out    0x2a,eax
  4078b7:	aad    0xd3
  4078b9:	fst    DWORD PTR [ebp-0x62]
  4078bc:	lods   eax,DWORD PTR ds:[esi]
  4078bd:	mov    esi,DWORD PTR [edi+0x5158dcfa]
  4078c3:	jmp    0x407897
  4078c5:	mov    al,0x8e
  4078c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c8:	stos   BYTE PTR es:[edi],al
  4078c9:	lahf   
  4078ca:	(bad)  
  4078cb:	mov    dl,0x82
  4078cd:	sar    DWORD PTR [ebp+0x7d],cl
  4078d0:	in     al,dx
  4078d1:	lea    edi,[esi+0x53]
  4078d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d5:	pop    esp
  4078d6:	jp     0x4078f7
  4078d8:	inc    ebp
  4078d9:	jne    0x40789e
  4078db:	sub    al,0xb
  4078dd:	mov    al,0xc0
  4078df:	xor    eax,0x12452e32
  4078e4:	dec    ecx
  4078e5:	push   edi
  4078e6:	mov    ch,0x75
  4078e8:	mov    edi,0xc719fb1c
  4078ed:	push   eax
  4078ee:	inc    bp
  4078f0:	outs   dx,DWORD PTR ds:[esi]
  4078f1:	nop
  4078f2:	arpl   dx,bp
  4078f4:	or     DWORD PTR [esi+0x3d],eax
  4078f7:	scas   eax,DWORD PTR es:[edi]
  4078f8:	retf   0xd90
  4078fb:	adc    al,0xe9
  4078fd:	inc    esi
  4078fe:	cwde   
  4078ff:	cmp    BYTE PTR [ebp+0x36],ah
  407902:	cmp    esi,DWORD PTR [eax-0x21]
  407905:	push   edx
  407906:	inc    ecx
  407907:	cmp    BYTE PTR [ebx+0x6f27cbde],bh
  40790d:	test   DWORD PTR [ebx+0x73],esp
  407910:	out    0x8e,eax
  407912:	adc    BYTE PTR [ecx+0x2b7d0a40],bl
  407918:	push   eax
  407919:	push   esp
  40791a:	test   DWORD PTR [edx],ebx
  40791c:	test   al,0x50
  40791e:	sub    eax,0x2ccbee4
  407923:	add    DWORD PTR [ebp-0x653eeffe],edi
  407929:	pop    ds
  40792a:	jmp    0x4078cb
  40792c:	aad    0xea
  40792e:	xor    eax,DWORD PTR [edi-0x3d97700e]
  407934:	xchg   edx,eax
  407935:	adc    DWORD PTR [edx+edx*1],esp
  407938:	loopne 0x407997
  40793a:	stc    
  40793b:	(bad)  
  40793c:	xlat   BYTE PTR ds:[ebx]
  40793d:	push   edi
  40793e:	push   0xf8f1e203
  407943:	dec    ebx
  407944:	scas   al,BYTE PTR es:[edi]
  407945:	data16 jb 0x407995
  407948:	push   ss
  407949:	sub    bh,BYTE PTR [ebx+0x4]
  40794c:	jo     0x407900
  40794e:	jle    0x407996
  407950:	test   eax,0xe6dc085c
  407955:	sbb    al,0xb
  407958:	and    BYTE PTR [eax],0x1f
  40795b:	xlat   BYTE PTR ds:[ebx]
  40795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795d:	test   bh,0xae
  407960:	(bad)  
  407962:	sbb    BYTE PTR [esi],cl
  407964:	xor    al,BYTE PTR [esi]
  407966:	inc    esp
  407967:	out    0xb7,eax
  407969:	jg     0x40790d
  40796b:	jmp    0x40790e
  40796d:	rcl    ah,cl
  40796f:	aam    0xe4
  407971:	dec    ecx
  407972:	or     edx,DWORD PTR [ebx+eax*2-0x6ff9373d]
  407979:	lds    ecx,FWORD PTR [ebx-0x39]
  40797c:	outs   dx,DWORD PTR ds:[esi]
  40797d:	jp     0x407939
  40797f:	sub    eax,DWORD PTR [edi+0x26ded329]
  407985:	call   0x85aa:0x8497e3b5
  40798c:	(bad)  
  40798e:	push   edi
  40798f:	adc    edx,DWORD PTR [edx]
  407991:	xchg   dh,cl
  407993:	rcr    DWORD PTR [ecx-0x35],1
  407996:	mov    ecx,0xa912c276
  40799c:	lds    ebp,FWORD PTR [ebp+0x11ac3f7c]
  4079a2:	fimul  WORD PTR [ebx+0x49e2c373]
  4079a8:	xor    bh,0x9
  4079ab:	loop   0x407a06
  4079ad:	dec    ebp
  4079ae:	dec    ebp
  4079af:	stc    
  4079b0:	jg     0x4079d0
  4079b2:	mov    ds:0x93321b9f,al
  4079b7:	call   0xef7da3d3
  4079bc:	inc    eax
  4079bd:	and    dh,BYTE PTR [ecx]
  4079bf:	adc    eax,0x30c8c05b
  4079c4:	push   edi
  4079c5:	repz pop esi
  4079c7:	pop    ss
  4079c8:	inc    ebp
  4079c9:	mov    cl,al
  4079cb:	sub    al,0xdf
  4079cd:	loop   0x407952
  4079cf:	cli    
  4079d0:	pop    es
  4079d1:	cmp    esi,DWORD PTR [ebp-0x18]
  4079d4:	(bad)  
  4079d5:	sbb    ah,bl
  4079d7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4079d9:	mov    ecx,0xe763906
  4079de:	dec    edx
  4079df:	sub    DWORD PTR ds:0x9bc98d6f,eax
  4079e5:	cmp    eax,0x293952bc
  4079ea:	pop    ebx
  4079eb:	xor    esp,DWORD PTR [edi+0x57a20e3]
  4079f1:	mov    ss,WORD PTR cs:[edx-0x39bf5b66]
  4079f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f9:	scas   al,BYTE PTR es:[edi]
  4079fa:	daa    
  4079fb:	leave  
  4079fc:	outs   dx,DWORD PTR ds:[esi]
  4079fd:	sub    al,0x22
  4079ff:	cmp    ah,BYTE PTR [esi+0x7ed7bced]
  407a05:	rol    DWORD PTR [edi+0x23ab3943],0x9c
  407a0c:	xchg   edi,eax
  407a0d:	jne    0x4079ce
  407a0f:	or     dh,BYTE PTR [ecx+0x36]
  407a12:	dec    edx
  407a13:	adc    eax,ecx
  407a15:	jb     0x407a06
  407a17:	push   ss
  407a18:	out    0xc3,al
  407a1a:	or     BYTE PTR [ecx],0x21
  407a1d:	sub    ch,BYTE PTR [esi+0x58940192]
  407a23:	xor    DWORD PTR [esi],edx
  407a25:	and    al,0xaf
  407a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a28:	test   al,0x84
  407a2a:	pop    ds
  407a2b:	(bad)  
  407a2d:	(bad)  
  407a2e:	int    0xc2
  407a30:	adc    eax,0x2ebe0f06
  407a35:	lds    ebx,FWORD PTR [edx]
  407a37:	push   cs
  407a38:	push   ss
  407a39:	test   eax,0xa04b561
  407a3e:	mov    eax,DWORD PTR [edx+0x4b]
  407a41:	fsub   DWORD PTR [ebp+edi*4-0x45]
  407a45:	ds pop eax
  407a47:	add    BYTE PTR [esp+esi*1-0x2f],ch
  407a4b:	test   BYTE PTR [ebx],0x7
  407a4e:	je     0x407a72
  407a50:	ins    BYTE PTR es:[edi],dx
  407a51:	xchg   esi,eax
  407a52:	test   eax,0xa0a6e7af
  407a57:	jnp    0x407ac3
  407a59:	test   eax,0xbd58a8b6
  407a5e:	pusha  
  407a5f:	and    bh,BYTE PTR [ebp+0x1d682745]
  407a65:	arpl   WORD PTR [edx+edi*8+0x23],bp
  407a69:	mov    al,ds:0xdf7e8386
  407a6e:	and    edi,DWORD PTR [ebx+0x75]
  407a71:	cmp    al,0x8a
  407a73:	shl    DWORD PTR ds:0x3df808a1,0x92
  407a7a:	mov    al,ds:0xc8d61e79
  407a7f:	repnz aas 
  407a81:	or     DWORD PTR [ecx],0xf9cd977
  407a87:	mov    ebp,0x15f13429
  407a8c:	or     ebp,esp
  407a8e:	sub    al,0x51
  407a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a91:	js     0x407aa0
  407a93:	mul    DWORD PTR [ebx+0x36]
  407a96:	jnp    0x407a2a
  407a98:	out    dx,al
  407a99:	int    0x76
  407a9b:	and    edx,esp
  407a9d:	je     0x407aa3
  407a9f:	sbb    al,0xae
  407aa1:	push   ebp
  407aa2:	stc    
  407aa3:	call   0xcebe001f
  407aa8:	fidivr WORD PTR [ebp-0x267f516]
  407aae:	fld    TBYTE PTR [edi+0x4d0f9ae4]
  407ab4:	jecxz  0x407ae9
  407ab6:	push   ecx
  407ab7:	pop    ebx
  407ab8:	add    ah,0x36
  407abb:	stos   BYTE PTR es:[edi],al
  407abc:	mov    esi,0xeb11a94e
  407ac1:	inc    edx
  407ac2:	(bad)  
  407ac3:	adc    ch,ah
  407ac5:	retf   
  407ac6:	fwait
  407ac7:	sahf   
  407ac8:	ret    0x72eb
  407acb:	sub    cl,ah
  407acd:	nop
  407ace:	dec    ecx
  407acf:	xor    eax,DWORD PTR [ecx-0x2f149e16]
  407ad5:	cmp    al,0x68
  407ad7:	es stc 
  407ad9:	daa    
  407ada:	mov    gs,WORD PTR [ebx+ebp*4-0x208663f6]
  407ae1:	idiv   BYTE PTR [ecx-0x5bf37978]
  407ae7:	xor    BYTE PTR [ecx+0x1ff13578],ah
  407aed:	dec    edx
  407aee:	add    al,0x9d
  407af0:	rcr    esp,1
  407af2:	xchg   BYTE PTR [esi+ebx*2+0x582d0ad6],bh
  407af9:	cdq    
  407afa:	xor    eax,0x51a3e8a9
  407aff:	repnz mov ecx,0xb7f163e1
  407b05:	push   ds
  407b06:	pop    ebx
  407b07:	shl    DWORD PTR [eax],1
  407b09:	dec    esp
  407b0a:	xor    bl,BYTE PTR [ecx]
  407b0c:	aam    0xef
  407b0e:	xchg   esp,eax
  407b0f:	jg     0x407ab4
  407b11:	sbb    eax,0x4906fbfa
  407b16:	out    dx,eax
  407b17:	pop    edi
  407b18:	mov    eax,ds:0x1d5089f4
  407b1d:	les    ecx,FWORD PTR [ebx-0x2f6377ac]
  407b23:	(bad)  
  407b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b25:	inc    eax
  407b26:	lods   eax,DWORD PTR ds:[esi]
  407b27:	repz cli 
  407b29:	dec    edx
  407b2a:	imul   esi,ecx,0xa129721a
  407b30:	pop    edi
  407b31:	ds std 
  407b33:	pop    ecx
  407b34:	repz fld QWORD PTR [ecx]
  407b37:	(bad)  
  407b38:	xor    al,0x52
  407b3a:	cdq    
  407b3b:	int3   
  407b3c:	popa   
  407b3d:	loopne 0x407b6e
  407b3f:	cmc    
  407b40:	jae    0x407b35
  407b42:	cdq    
  407b43:	adc    ebp,DWORD PTR [ebp-0x50]
  407b46:	and    ecx,DWORD PTR [esi+ebx*4-0x3def8130]
  407b4d:	sbb    BYTE PTR fs:[esi],bh
  407b50:	pop    es
  407b51:	fwait
  407b52:	retf   
  407b53:	mov    ecx,0xc2ee9882
  407b58:	fbstp  TBYTE PTR [ecx+0x57]
  407b5b:	stc    
  407b5c:	add    al,0xe1
  407b5e:	in     al,0x81
  407b60:	dec    esi
  407b61:	cld    
  407b62:	pusha  
  407b63:	mov    edx,0x542764e4
  407b68:	mov    bl,0xa6
  407b6a:	inc    ecx
  407b6b:	xor    ebp,ebp
  407b6d:	adc    dh,cl
  407b6f:	les    esp,FWORD PTR [ecx-0x65]
  407b72:	mov    ah,0x45
  407b74:	div    DWORD PTR [ebp+0x5b]
  407b77:	shl    BYTE PTR [edx+0x6c],cl
  407b7a:	push   es
  407b7b:	scas   al,BYTE PTR es:[edi]
  407b7c:	in     eax,0xd3
  407b7e:	xchg   ecx,eax
  407b7f:	push   ds
  407b80:	push   esi
  407b81:	dec    ebp
  407b82:	cmp    dh,BYTE PTR [edx+0x4b]
  407b85:	xchg   DWORD PTR [edi],esp
  407b87:	hlt    
  407b88:	cmp    eax,0x9a71880b
  407b8d:	or     BYTE PTR [ebp+0x48],cl
  407b90:	fs sbb eax,0x7f6036bd
  407b96:	cs in  eax,0x1f
  407b99:	xacquire xchg DWORD PTR [eax+edi*4-0x6a],ebp
  407b9e:	xor    DWORD PTR [ebx-0x75],0xc
  407ba2:	and    ch,BYTE PTR ds:0xca4e5fbc
  407ba8:	lea    esi,[esi-0x52cda832]
  407bae:	dec    esi
  407baf:	shl    BYTE PTR [ebx],0xc1
  407bb2:	dec    edx
  407bb3:	fbld   TBYTE PTR [edi]
  407bb5:	mov    edx,0x688f97f4
  407bba:	or     eax,0x2323044d
  407bbf:	int3   
  407bc0:	frstor [eax]
  407bc2:	adc    eax,0xea1956a2
  407bc7:	mov    bh,0x3d
  407bc9:	mov    ebp,DWORD PTR [ebp+0x2f49baed]
  407bcf:	adc    dl,bh
  407bd1:	neg    BYTE PTR [ebx-0x1f4e3f69]
  407bd7:	in     al,0xaa
  407bd9:	aas    
  407bda:	stos   DWORD PTR es:[edi],eax
  407bdb:	out    dx,al
  407bdc:	pop    eax
  407bdd:	ss xor al,0x7f
  407be0:	mov    ebp,0x38f5fe79
  407be5:	int3   
  407be6:	push   es
  407be7:	mov    edx,0x55222715
  407bec:	push   0xffffffac
  407bee:	(bad)
  407bf2:	scas   al,BYTE PTR es:[edi]
  407bf3:	inc    eax
  407bf4:	mov    al,ds:0xa0338272
  407bf9:	outs   dx,BYTE PTR ds:[esi]
  407bfa:	ins    BYTE PTR es:[edi],dx
  407bfb:	mov    al,0xc5
  407bfd:	mov    DWORD PTR ds:0x69b490bb,edx
  407c03:	rol    BYTE PTR [ecx+0xee37907],1
  407c09:	dec    ebx
  407c0a:	cs (bad) 
  407c0c:	std    
  407c0d:	aaa    
  407c0e:	cmc    
  407c0f:	adc    cl,BYTE PTR [edi]
  407c11:	loopne 0x407b9c
  407c13:	cmp    dl,al
  407c15:	and    eax,0x970e20eb
  407c1a:	dec    ebp
  407c1b:	xor    al,0x45
  407c1d:	call   0xd6f4c436
  407c22:	inc    esp
  407c23:	or     eax,0xa3897463
  407c28:	scas   eax,DWORD PTR es:[edi]
  407c29:	fldenv [ecx+edx*4]
  407c2c:	xlat   BYTE PTR ds:[ebx]
  407c2d:	pop    ss
  407c2e:	pop    eax
  407c2f:	mov    DWORD PTR [ebx-0x27df7311],esi
  407c35:	jg     0x407bd2
  407c37:	inc    ecx
  407c38:	cmp    BYTE PTR [esp+ebx*8-0x41],ch
  407c3c:	out    dx,eax
  407c3d:	mov    ?,WORD PTR [esi-0x73852e1]
  407c43:	sbb    eax,0x8c872637
  407c48:	or     ch,BYTE PTR [ecx-0x47]
  407c4b:	add    cl,bh
  407c4d:	pop    edi
  407c4e:	sub    edx,DWORD PTR [eax-0x75]
  407c51:	fs mov cl,bh
  407c54:	jge    0x407cc8
  407c56:	fwait
  407c57:	out    dx,eax
  407c58:	xchg   DWORD PTR [ecx+0xd],edi
  407c5b:	fcom   QWORD PTR [edi]
  407c5d:	loop   0x407c08
  407c5f:	or     ax,0xc706
  407c63:	add    bh,BYTE PTR [edi+0x74]
  407c66:	jecxz  0x407bfd
  407c68:	sbb    eax,0x7c652169
  407c6d:	les    ebx,FWORD PTR ds:0xb507ba48
  407c73:	bound  ebx,QWORD PTR [ebp+0x40c8deb9]
  407c79:	or     eax,0x77d7a14f
  407c7e:	adc    eax,0xab39d84a
  407c83:	popa   
  407c84:	push   ebx
  407c85:	shl    DWORD PTR [edi+0x66],1
  407c88:	or     ecx,esp
  407c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c8b:	in     eax,dx
  407c8c:	fs pop edx
  407c8f:	jns    0x407cae
  407c91:	push   ds
  407c92:	mov    BYTE PTR [ebx],cl
  407c94:	pop    ebx
  407c95:	jg     0x407cb9
  407c97:	xrelease mov BYTE PTR [ebp-0x216880a],al
  407c9e:	xchg   ecx,ebx
  407ca0:	leave  
  407ca1:	push   esi
  407ca2:	and    BYTE PTR [eax],bh
  407ca4:	mov    eax,0xf2b88d74
  407ca9:	push   ebx
  407caa:	dec    edi
  407cab:	or     bh,bl
  407cad:	and    al,0x54
  407caf:	call   0x111e:0x8e7550e7
  407cb6:	gs jbe 0x407c96
  407cb9:	leave  
  407cba:	arpl   WORD PTR ds:0x5039b333,ax
  407cc0:	push   cs
  407cc1:	aam    0xd
  407cc3:	test   al,0xbe
  407cc5:	sub    ecx,DWORD PTR [edx+0x39c7f53e]
  407ccb:	add    al,0xa8
  407ccd:	jmp    0x407d33
  407ccf:	push   esi
  407cd0:	pop    esi
  407cd1:	or     edi,DWORD PTR [edi-0x66]
  407cd4:	fcomi  st,st(4)
  407cd6:	or     DWORD PTR [esi],0x50
  407cd9:	and    BYTE PTR [edi+esi*1+0x1ea9b075],al
  407ce0:	cmc    
  407ce1:	ret    
  407ce2:	mov    ebx,0xf28a1d22
  407ce7:	jo     0x407d06
  407ce9:	dec    ebx
  407cea:	cdq    
  407ceb:	lods   eax,DWORD PTR ds:[esi]
  407cec:	pop    esp
  407ced:	and    bh,BYTE PTR [ebp+0x22]
  407cf0:	pop    ss
  407cf1:	cmp    BYTE PTR [ebx],al
  407cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf4:	mov    BYTE PTR [ecx+0x1cd1a439],ch
  407cfa:	repnz cmp ch,BYTE PTR [edi-0x4b]
  407cfe:	jbe    0x407d7a
  407d00:	push   eax
  407d01:	fnstsw WORD PTR [edi+0x6f]
  407d04:	fwait
  407d05:	sti    
  407d06:	sub    al,0xe8
  407d08:	dec    edi
  407d09:	fiadd  WORD PTR [ecx-0x1878596d]
  407d0f:	out    0xd3,eax
  407d11:	push   esi
  407d12:	rcr    DWORD PTR [ebx-0xe62d986],1
  407d18:	test   dl,ah
  407d1a:	mov    ch,0xd
  407d1c:	es push esi
  407d1e:	inc    eax
  407d1f:	out    dx,al
  407d20:	js     0x407d3c
  407d22:	sbb    eax,0x844947a5
  407d27:	lods   eax,DWORD PTR ds:[esi]
  407d28:	ds pop ebp
  407d2a:	loopne 0x407d2a
  407d2c:	adc    al,0x2b
  407d2e:	jecxz  0x407d4e
  407d30:	jg     0x407cfb
  407d32:	enter  0xbf46,0xc6
  407d36:	sbb    eax,0x836887bd
  407d3b:	les    ebx,FWORD PTR [ecx-0x12e0459f]
  407d41:	xor    eax,0x7b93b337
  407d46:	lahf   
  407d47:	dec    edi
  407d48:	and    BYTE PTR [edi+0x23],dh
  407d4b:	jae    0x407cf9
  407d4d:	sbb    al,0x41
  407d4f:	xchg   ebx,eax
  407d50:	daa    
  407d51:	cs ffree st(3)
  407d54:	das    
  407d55:	aas    
  407d56:	or     DWORD PTR [ecx],eax
  407d58:	rcl    bh,cl
  407d5a:	pushf  
  407d5b:	or     dl,BYTE PTR [ebp-0x7a21c49d]
  407d61:	fwait
  407d62:	xchg   ebp,esi
  407d64:	cmp    esi,ebp
  407d66:	add    al,0x8b
  407d68:	push   cs
  407d69:	and    al,0xa9
  407d6b:	sbb    cl,cl
  407d6d:	inc    edi
  407d6e:	test   eax,0xc5c236de
  407d73:	mov    cl,BYTE PTR [edx]
  407d75:	popa   
  407d76:	das    
  407d77:	sbb    al,0xf6
  407d79:	outs   dx,BYTE PTR ds:[esi]
  407d7a:	test   ch,dl
  407d7c:	mov    ebp,0x1869f09d
  407d81:	mov    ds:0x9c2c267e,eax
  407d86:	add    DWORD PTR [ebx-0x6aed4975],esp
  407d8c:	popa   
  407d8d:	xchg   ebp,eax
  407d8e:	stc    
  407d8f:	sbb    edi,ebx
  407d91:	jecxz  0x407e12
  407d93:	cmp    BYTE PTR [edx+0x613c5e8d],0x65
  407d9a:	scas   eax,DWORD PTR es:[edi]
  407d9b:	aaa    
  407d9c:	adc    BYTE PTR [eax+0x71],dh
  407d9f:	jbe    0x407d96
  407da1:	fstp   DWORD PTR [ebp-0x7b7a25fa]
  407da7:	inc    DWORD PTR [edx+edi*2+0x7ebc0b90]
  407dae:	inc    esi
  407daf:	fnstsw WORD PTR [eax-0x27]
  407db2:	sbb    eax,0xeafc502d
  407db7:	out    dx,eax
  407db8:	sbb    eax,DWORD PTR [ecx-0x25934a26]
  407dbe:	inc    edx
  407dbf:	call   0xcec3:0x9bd7d965
  407dc6:	ror    DWORD PTR [ecx+0x2514c99d],cl
  407dcc:	loope  0x407df1
  407dce:	dec    ebx
  407dcf:	rol    BYTE PTR [esi-0x68],0xf6
  407dd3:	mov    al,0x1e
  407dd5:	ret    0x5f49
  407dd8:	xor    bh,BYTE PTR [esi+0x4b]
  407ddb:	sbb    eax,0xaf002c9a
  407de0:	mul    esi
  407de2:	dec    esp
  407de3:	push   eax
  407de4:	add    DWORD PTR [ebx+edx*8],esp
  407de7:	xchg   ah,cl
  407de9:	iret   
  407dea:	dec    esp
  407deb:	neg    esp
  407ded:	pushf  
  407dee:	outs   dx,DWORD PTR ds:[esi]
  407def:	mov    ch,0xa8
  407df1:	cmp    ch,al
  407df3:	fs mov ch,0xc0
  407df6:	cmp    bh,BYTE PTR [ebx-0x4e]
  407df9:	sub    edi,DWORD PTR [ecx+ebx*8-0x7d6283c6]
  407e00:	pop    eax
  407e01:	ret    0x99f3
  407e04:	or     eax,0xd04c6758
  407e09:	arpl   WORD PTR [edi+0x470fac],sp
  407e0f:	mov    ch,0x2
  407e11:	sub    bl,BYTE PTR [ebx]
  407e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e14:	sbb    dl,cl
  407e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e17:	jae    0x407e43
  407e19:	aas    
  407e1a:	add    eax,0xc18b141f
  407e1f:	out    0xcf,al
  407e21:	(bad)  
  407e22:	(bad)  
  407e24:	mov    al,0xad
  407e27:	retf   
  407e28:	cmp    eax,0x236fa7c7
  407e2d:	inc    edi
  407e2e:	dec    eax
  407e2f:	mov    dh,BYTE PTR [ecx+ebx*2-0x3a]
  407e33:	jae    0x407dc2
  407e35:	jg     0x407dce
  407e37:	jo     0x407dbb
  407e39:	push   0x6e
  407e3b:	cmp    BYTE PTR [esi],bl
  407e3d:	data16 xor BYTE PTR [eax+0x77],cl
  407e41:	int3   
  407e42:	(bad)  
  407e43:	repnz fmul DWORD PTR [edx-0x77]
  407e47:	call   esi
  407e49:	jge    0x407e63
  407e4b:	mov    al,ds:0xb9d850aa
  407e50:	cmc    
  407e51:	mov    al,0xf1
  407e53:	mov    esp,0x33961c87
  407e58:	pusha  
  407e59:	scas   eax,DWORD PTR es:[edi]
  407e5a:	fwait
  407e5b:	and    eax,0xac6779b
  407e60:	stc    
  407e61:	ins    BYTE PTR es:[edi],dx
  407e62:	cwde   
  407e63:	adc    ch,bh
  407e65:	je     0x407e79
  407e67:	faddp  st(5),st
  407e69:	scas   al,BYTE PTR es:[edi]
  407e6a:	inc    edx
  407e6b:	sbb    al,0x7c
  407e6d:	push   es
  407e6e:	jl     0x407e2b
  407e70:	fidivr WORD PTR [ecx+eax*1]
  407e73:	das    
  407e74:	or     ebp,DWORD PTR [ecx]
  407e76:	push   ds
  407e77:	popf   
  407e78:	xchg   edi,eax
  407e79:	stc    
  407e7a:	int3   
  407e7b:	jnp    0x407e4e
  407e7d:	pop    ecx
  407e7e:	icebp  
  407e7f:	gs add eax,0x4ee24a88
  407e85:	nop
  407e86:	dec    ecx
  407e87:	xchg   edi,eax
  407e88:	push   edi
  407e89:	push   es
  407e8a:	inc    edi
  407e8b:	cmp    ch,bh
  407e8d:	repz scas al,BYTE PTR es:[edi]
  407e8f:	jne    0x407eb3
  407e91:	sbb    BYTE PTR [edi-0x756d73ef],dl
  407e97:	imul   ebp,eax,0x15fe5b2f
  407e9d:	inc    ebx
  407e9e:	inc    eax
  407e9f:	push   ss
  407ea0:	xchg   esi,eax
  407ea1:	inc    eax
  407ea2:	pop    esp
  407ea3:	int    0xcb
  407ea5:	mov    al,ds:0xb8f2190
  407eaa:	mov    ah,BYTE PTR [ecx]
  407eac:	mov    bh,0x39
  407eae:	or     dh,dl
  407eb0:	mov    al,0x4c
  407eb2:	and    eax,0xea5924c8
  407eb7:	adc    esp,0x32a375a1
  407ebd:	mov    ebp,0x17bdfaa
  407ec2:	std    
  407ec3:	and    dh,bh
  407ec5:	adc    DWORD PTR [ebx+0x39],edi
  407ec8:	inc    eax
  407ec9:	xchg   edi,eax
  407eca:	dec    eax
  407ecb:	dec    esp
  407ecc:	cmc    
  407ecd:	pop    ecx
  407ece:	cdq    
  407ecf:	pop    es
  407ed0:	repz push ecx
  407ed2:	inc    edi
  407ed3:	sbb    al,0xe3
  407ed5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407ed7:	xlat   BYTE PTR ds:[ebx]
  407ed8:	rol    BYTE PTR [edx+0x11],1
  407edb:	mov    eax,0xa25da4f2
  407ee0:	daa    
  407ee1:	outs   dx,BYTE PTR ds:[esi]
  407ee2:	xor    BYTE PTR [ecx+0x6ded2b93],0xcf
  407ee9:	or     esp,DWORD PTR [edi]
  407eeb:	push   esp
  407eec:	call   0x49c5:0x2abade60
  407ef3:	sti    
  407ef4:	xor    al,0x3d
  407ef6:	dec    esi
  407ef7:	dec    ecx
  407ef8:	cmp    BYTE PTR [edx+edx*4-0x5fe506c8],0x57
  407f00:	mov    gs,edi
  407f02:	xchg   edi,eax
  407f03:	ret    0x3381
  407f06:	(bad)  
  407f07:	pop    esi
  407f08:	mov    esp,?
  407f0a:	rol    BYTE PTR [eax],0x9
  407f0d:	iret   
  407f0e:	pop    esi
  407f0f:	ficom  DWORD PTR [esi+0x3b]
  407f12:	adc    DWORD PTR [ebx-0x7442b6e4],esp
  407f18:	jbe    0x407eff
  407f1a:	push   0x1c094094
  407f1f:	je     0x407f7c
  407f21:	addr16 inc esi
  407f23:	repz sub al,al
  407f26:	sbb    dl,BYTE PTR ds:0xf1a17dc1
  407f2c:	xchg   ecx,eax
  407f2d:	sub    BYTE PTR [ecx+eax*8+0x187c9088],bl
  407f34:	ret    0x4112
  407f37:	(bad)
  407f3a:	dec    eax
  407f3b:	test   DWORD PTR [edx],edx
  407f3d:	lea    esp,[edi]
  407f3f:	lahf   
  407f40:	nop
  407f41:	jno    0x407faa
  407f43:	mov    bl,0x5e
  407f45:	inc    edx
  407f46:	jnp    0x407f9b
  407f48:	adc    DWORD PTR [esi],ecx
  407f4a:	xor    edx,0x71
  407f4d:	jmp    0x71e82da8
  407f52:	dec    esi
  407f53:	fst    QWORD PTR [edx]
  407f55:	les    ebp,FWORD PTR [eax-0x5387346c]
  407f5b:	out    dx,eax
  407f5c:	xchg   ecx,eax
  407f5d:	call   0x62ba:0x38dff97c
  407f64:	xor    al,0x7a
  407f66:	adc    DWORD PTR [ebp-0x41],esp
  407f69:	inc    edi
  407f6a:	mov    cl,0x6c
  407f6c:	pop    ebp
  407f6d:	pop    esi
  407f6e:	pop    ecx
  407f70:	push   0x49
  407f72:	mov    bh,0xc
  407f74:	sbb    DWORD PTR [eax],esi
  407f76:	adc    al,0xa1
  407f78:	shr    BYTE PTR [edi],0xf0
  407f7b:	stos   BYTE PTR es:[edi],al
  407f7c:	(bad)
  407f7f:	retf   0xcccb
  407f82:	jb     0x407f25
  407f84:	and    BYTE PTR [ecx],dl
  407f86:	ins    DWORD PTR es:[edi],dx
  407f87:	stos   DWORD PTR es:[edi],eax
  407f88:	adc    al,0xca
  407f8a:	int    0xd5
  407f8c:	retf   
  407f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8e:	xor    DWORD PTR [ecx+0x5b],0xdc9b5afd
  407f95:	imul   ebp,DWORD PTR [edi+0x34],0x10404e90
  407f9c:	push   cs
  407f9d:	ins    BYTE PTR es:[edi],dx
  407f9e:	sar    DWORD PTR [eax+ebp*4],cl
  407fa1:	and    eax,0x1f18e8f9
  407fa6:	ins    BYTE PTR es:[edi],dx
  407fa7:	ins    BYTE PTR es:[edi],dx
  407fa8:	mov    ds:0x1b86121c,eax
  407fad:	int3   
  407fae:	push   0x985ca06b
  407fb3:	sub    dl,BYTE PTR [eax]
  407fb5:	ja     0x407fee
  407fb7:	mov    dh,0xe0
  407fb9:	pop    ebp
  407fba:	pop    ds
  407fbb:	(bad)  
  407fbd:	stos   DWORD PTR es:[edi],eax
  407fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbf:	or     BYTE PTR [edx-0x5218a57],al
  407fc5:	outs   dx,BYTE PTR ds:[esi]
  407fc6:	test   al,0xb4
  407fc8:	adc    BYTE PTR [edx],bh
  407fca:	pop    ss
  407fcb:	stc    
  407fcc:	bound  esp,QWORD PTR [eax+0x34]
  407fcf:	and    al,dl
  407fd1:	in     al,dx
  407fd2:	and    DWORD PTR [ecx+edx*1-0x22591d7e],eax
  407fd9:	cmp    BYTE PTR [ecx-0x19de1a4c],0xe7
  407fe0:	jb     0x407fdc
  407fe2:	scas   al,BYTE PTR es:[edi]
  407fe3:	xchg   BYTE PTR [ecx+0x2ed597dc],ch
  407fe9:	dec    edi
  407fea:	arpl   WORD PTR [esi],bx
  407fec:	ret    
  407fed:	pop    esi
  407fee:	jmp    0x408002
  407ff0:	sbb    ch,ah
  407ff2:	out    dx,al
  407ff3:	push   edx
  407ff4:	call   0x31379946
  407ff9:	mov    edx,0xddd9f24
  407ffe:	sub    BYTE PTR [eax+edi*8-0x7f7faa41],ch
  408005:	out    dx,al
  408006:	not    ch
  408008:	clc    
  408009:	aaa    
  40800a:	xor    cl,0x23
  40800d:	mov    ch,dl
  40800f:	push   ds
  408010:	pop    ss
  408011:	jg     0x40802e
  408013:	call   0x63c15361
  408018:	int    0x5f
  40801a:	dec    edx
  40801b:	lahf   
  40801c:	jnp    0x408010
  40801e:	sti    
  40801f:	push   ecx
  408020:	dec    ebx
  408021:	push   ss
  408022:	pop    ds
  408023:	cmp    BYTE PTR [ebp+eax*2-0x32],dh
  408027:	jmp    0xd05091c3
  40802c:	mov    gs,WORD PTR [edx+0x6b]
  40802f:	sub    eax,0xe8fa230f
  408034:	(bad)  
  408035:	out    dx,eax
  408036:	ins    BYTE PTR es:[edi],dx
  408037:	mov    dl,0xad
  408039:	push   edx
  40803a:	ins    DWORD PTR es:[edi],dx
  40803b:	mov    cl,al
  40803d:	inc    esi
  40803e:	add    BYTE PTR [edx*8-0x61dced50],al
  408045:	rep lods eax,DWORD PTR ds:[esi]
  408047:	loop   0x408099
  408049:	scas   al,BYTE PTR es:[edi]
  40804a:	popa   
  40804b:	icebp  
  40804c:	mov    ds:0x11040d83,eax
  408051:	mov    ebx,0xac8a369b
  408056:	call   0x6c343717
  40805b:	ins    BYTE PTR es:[edi],dx
  40805c:	stos   DWORD PTR es:[edi],eax
  40805d:	aas    
  40805e:	sub    BYTE PTR [ecx+0x3b01fd92],ch
  408064:	pop    ebp
  408065:	outs   dx,BYTE PTR ds:[esi]
  408066:	or     BYTE PTR [edx],bh
  408068:	rcr    DWORD PTR [ebx],cl
  40806a:	call   FWORD PTR [ebx]
  40806c:	in     al,dx
  40806d:	or     edi,esi
  40806f:	mov    cl,0xb1
  408071:	jbe    0x408005
  408073:	daa    
  408074:	repnz dec ecx
  408076:	(bad)  
  408077:	in     eax,0x3c
  408079:	aam    0x70
  40807b:	and    DWORD PTR [eax-0x174b16dd],0x21
  408082:	cmp    BYTE PTR ds:0x82c683e2,al
  408088:	retf   
  408089:	sub    BYTE PTR ss:[edi+esi*8-0x507e5ca7],cl
  408091:	hlt    
  408092:	sbb    esp,edx
  408094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408095:	xlat   BYTE PTR ds:[bx]
  408097:	std    
  408098:	fistp  WORD PTR [eax+0x6bd62650]
  40809e:	jmp    0x4a8b:0xc375f35c
  4080a5:	add    ebx,0x30a1f449
  4080ab:	mov    ecx,0x4dc24043
  4080b0:	jns    0x4080ef
  4080b2:	push   ebx
  4080b3:	arpl   WORD PTR cs:[ebp-0x25],dx
  4080b7:	loopne 0x408083
  4080b9:	repnz mov edi,0xe3872e56
  4080bf:	call   0x68cd:0x794682db
  4080c6:	aam    0x2b
  4080c8:	xchg   edi,eax
  4080c9:	jg     0x408056
  4080cb:	mov    al,ds:0xf11a9d
  4080d0:	gs (bad) 
  4080d2:	loope  0x4080ef
  4080d4:	(bad)  
  4080d5:	jmp    0xd3db1e9a
  4080da:	mov    eax,ds:0x1759dc79
  4080df:	inc    ebx
  4080e0:	cwde   
  4080e1:	jno    0x4080e3
  4080e3:	mov    bh,0x9d
  4080e5:	push   es
  4080e6:	(bad)  
  4080e7:	fisubr WORD PTR [edi]
  4080e9:	adc    ecx,DWORD PTR [ebp+0x12]
  4080ec:	fcom   QWORD PTR [ebp-0x3a14bfd6]
  4080f2:	xchg   ebx,eax
  4080f3:	dec    ebp
  4080f4:	mov    ebx,0x827a86c4
  4080f9:	mov    al,ds:0x7454fe4e
  4080fe:	jno    0x40817a
  408100:	dec    esi
  408101:	popa   
  408102:	iret   
  408103:	pop    es
  408104:	mov    WORD PTR ds:0x34ff9116,gs
  40810a:	xchg   esi,eax
  40810b:	jg     0x408184
  40810d:	push   0xffffffd6
  40810f:	nop
  408110:	lock or DWORD PTR [edx+eax*2],ebx
  408114:	adc    bh,BYTE PTR [ebx+ebp*2-0x2ebb4804]
  40811b:	sub    eax,0x99a9ad8
  408120:	pop    eax
  408121:	push   edi
  408122:	ret    
  408123:	rol    DWORD PTR [edi-0x6436aeaa],1
  408129:	jnp    0x408141
  40812b:	arpl   WORD PTR [ecx-0x5f16cf8c],cx
  408131:	sbb    eax,ebp
  408133:	rcr    DWORD PTR [edi-0x40],0x45
  408137:	div    DWORD PTR ds:0x4dfe360f
  40813d:	ror    BYTE PTR [edi-0x3c2f9a4a],0xe4
  408144:	inc    ecx
  408145:	push   cs
  408146:	push   ebx
  408147:	jae    0x40812d
  408149:	call   0x6b7a:0x6c3bca00
  408150:	mov    dl,0x65
  408152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408153:	sub    bl,ah
  408155:	(bad)  
  408156:	mov    bl,0xa
  408158:	jg     0x408110
  40815a:	dec    BYTE PTR [esi-0xa]
  40815d:	clc    
  40815e:	pop    esi
  40815f:	ret    0xb9c5
  408162:	mov    eax,0x2a02dfa0
  408167:	inc    ecx
  408168:	(bad)  
  40816a:	dec    esi
  40816b:	and    BYTE PTR [edi-0xe],0x7b
  40816f:	enter  0xb471,0xa2
  408173:	dec    edx
  408174:	push   edx
  408175:	dec    edi
  408176:	inc    edx
  408177:	pop    edi
  408178:	repz out 0xe2,eax
  40817b:	into   
  40817c:	addr16 icebp 
  40817e:	iret   
  40817f:	sub    edx,ebx
  408181:	sti    
  408182:	sub    BYTE PTR [eax],0x1f
  408185:	dec    ecx
  408186:	loopne 0x4081ba
  408188:	fs push edx
  40818a:	arpl   WORD PTR [edi-0x775e51ff],sp
  408190:	pushf  
  408191:	xlat   BYTE PTR ds:[ebx]
  408192:	pop    esp
  408193:	test   BYTE PTR [edi],0xf9
  408196:	mov    ecx,0x87963094
  40819b:	in     eax,dx
  40819c:	int3   
  40819d:	pop    es
  40819e:	cmp    dl,BYTE PTR [si]
  4081a1:	ret    
  4081a2:	data16 shr BYTE PTR [ebx-0x44],1
  4081a6:	stos   BYTE PTR es:[edi],al
  4081a7:	or     eax,0x5aabc874
  4081ac:	pop    eax
  4081ad:	pop    es
  4081ae:	pop    esi
  4081af:	out    0xd1,al
  4081b1:	mov    ah,BYTE PTR [ebx-0x47f72b44]
  4081b7:	jbe    0x4081b2
  4081b9:	jg     0x4081cd
  4081bb:	sbb    ecx,0xd
  4081be:	sub    eax,0x81bc0d21
  4081c3:	stos   BYTE PTR es:[edi],al
  4081c4:	sub    DWORD PTR [ebx-0xc39610c],edx
  4081ca:	pop    ds
  4081cb:	fsub   st(4),st
  4081cd:	push   es
  4081ce:	retf   
  4081cf:	dec    esi
  4081d0:	cmp    BYTE PTR [edx+edx*4],cl
  4081d3:	ins    BYTE PTR es:[edi],dx
  4081d4:	cdq    
  4081d5:	adc    dl,ah
  4081d7:	and    eax,0xb22fce5c
  4081dc:	push   ss
  4081dd:	stos   DWORD PTR es:[edi],eax
  4081de:	dec    edi
  4081df:	push   ebp
  4081e0:	lods   al,BYTE PTR ds:[esi]
  4081e1:	or     edi,ebx
  4081e3:	or     DWORD PTR [esi-0x31c13bde],ecx
  4081e9:	push   edx
  4081ea:	dec    eax
  4081eb:	dec    esp
  4081ec:	sub    bl,ah
  4081ee:	sbb    BYTE PTR [esi],al
  4081f0:	psubsb mm2,QWORD PTR [edx]
  4081f3:	int3   
  4081f4:	cli    
  4081f5:	sbb    DWORD PTR [edx-0x166263cb],esi
  4081fb:	sub    cl,dl
  4081fd:	xchg   ecx,eax
  4081fe:	fcomp  QWORD PTR ss:[esi-0x5e85481]
  408205:	int    0x10
  408207:	xchg   ebp,eax
  408208:	out    dx,eax
  408209:	fs jne 0x408275
  40820c:	data16 cmp bl,ch
  40820f:	loope  0x4081cc
  408211:	pop    edi
  408212:	scas   eax,DWORD PTR es:[edi]
  408213:	(bad)  
  408215:	mov    al,0xf6
  408217:	push   ss
  408218:	ja     0x4081d1
  40821a:	sub    eax,0xfa81da3e
  40821f:	loopne 0x408250
  408221:	and    ah,BYTE PTR [eax+0x1a8bca97]
  408227:	jg     0x408246
  408229:	sbb    DWORD PTR [ebx],edx
  40822b:	pop    esp
  40822c:	aas    
  40822d:	push   0xffffffa0
  40822f:	push   esi
  408230:	jns    0x4081e4
  408232:	pop    edi
  408233:	fwait
  408234:	push   cs
  408235:	push   ds
  408236:	cdq    
  408237:	scas   eax,DWORD PTR es:[edi]
  408238:	push   esp
  408239:	jne    0x4081cc
  40823b:	pushf  
  40823c:	inc    eax
  40823d:	adc    al,0x93
  40823f:	ffreep st(1)
  408241:	adc    BYTE PTR [eax],al
  408243:	pusha  
  408244:	sbb    bh,ah
  408246:	xor    edx,DWORD PTR [ebx-0x1f]
  408249:	ffree  st(7)
  40824b:	adc    al,0x7f
  40824d:	mul    DWORD PTR [ebx-0x5e41316a]
  408253:	popa   
  408254:	ins    BYTE PTR es:[edi],dx
  408255:	jg     0x4082d3
  408257:	test   DWORD PTR [edx-0x5e],0xee7fdb16
  40825e:	push   edi
  40825f:	cld    
  408260:	push   ebx
  408261:	add    al,0xc8
  408263:	mov    esp,0x14d8bc86
  408268:	add    esp,ebx
  40826a:	ins    DWORD PTR es:[edi],dx
  40826b:	iret   
  40826c:	rcl    DWORD PTR [eax+0x13],cl
  40826f:	js     0x40823f
  408271:	into   
  408272:	int    0x3c
  408274:	push   es
  408275:	sbb    dh,dh
  408277:	and    edi,DWORD PTR [edi-0x65]
  40827a:	inc    edi
  40827b:	cmp    bl,BYTE PTR [eax-0x13]
  40827e:	mov    ah,0x97
  408280:	dec    esp
  408281:	add    DWORD PTR [ecx+0x32],esi
  408284:	mov    cl,0x5a
  408286:	sub    DWORD PTR [esi-0x3d9c155],0x71
  40828d:	inc    esi
  40828e:	mov    ch,0x67
  408290:	bound  esi,QWORD PTR [ebp+0xb836269]
  408296:	js     0x4082fb
  408298:	in     eax,0xb5
  40829a:	lods   eax,DWORD PTR ds:[esi]
  40829b:	fs dec esi
  40829d:	ds sbb al,0xf4
  4082a0:	cmp    DWORD PTR [ecx+0xc],ecx
  4082a3:	pop    edx
  4082a4:	jle    0x408235
  4082a6:	sbb    DWORD PTR [edi+0x7f887e24],esi
  4082ac:	jbe    0x408314
  4082ae:	cdq    
  4082af:	mov    esp,0x26b21517
  4082b4:	ins    BYTE PTR es:[edi],dx
  4082b5:	test   eax,0xb0cbe93a
  4082ba:	xchg   esp,eax
  4082bb:	push   edx
  4082bc:	cmp    DWORD PTR [ebx-0x52],edi
  4082bf:	sub    DWORD PTR [esi+0x14df2ee3],ebx
  4082c5:	dec    BYTE PTR [ebx-0x7bc01560]
  4082cb:	test   DWORD PTR [ecx-0x1c],eax
  4082ce:	fdivr  QWORD PTR [edi-0x31]
  4082d1:	mov    dh,0xcc
  4082d3:	mov    dh,0xa9
  4082d5:	and    DWORD PTR [ebp+0x64],esp
  4082d8:	cmp    eax,0x8b160b94
  4082dd:	dec    ecx
  4082de:	shl    DWORD PTR [esi+0x75],1
  4082e1:	xchg   edx,eax
  4082e2:	sahf   
  4082e3:	imul   DWORD PTR [esi]
  4082e5:	pop    ss
  4082e6:	ret    
  4082e7:	(bad)  [ebx+0x45]
  4082ea:	popa   
  4082eb:	aas    
  4082ec:	mov    eax,0x8eebafec
  4082f1:	scas   eax,DWORD PTR es:[edi]
  4082f2:	sub    esi,0xffffffd5
  4082f5:	sahf   
  4082f6:	pop    esp
  4082f7:	jecxz  0x4082e2
  4082f9:	gs xor ch,cl
  4082fc:	dec    esp
  4082fd:	daa    
  4082fe:	sti    
  4082ff:	retf   
  408300:	scas   eax,DWORD PTR es:[edi]
  408301:	retf   0x5c16
  408304:	sbb    dl,0xb7
  408307:	enter  0x836,0xbb
  40830b:	xlat   BYTE PTR ds:[ebx]
  40830c:	or     BYTE PTR [ebx+0x2f27ac8b],bl
  408312:	sbb    dl,bl
  408314:	sbb    DWORD PTR [edi-0x29eedeb4],0xffffffc8
  40831b:	mov    esp,0xf5cd2e86
  408320:	jecxz  0x4082c4
  408322:	rol    BYTE PTR [ebp+0x5],0xcb
  408326:	mov    esi,0x525227de
  40832b:	das    
  40832c:	pop    esi
  40832d:	fisubr WORD PTR [eax]
  40832f:	bswap  ebx
  408331:	xchg   esp,eax
  408332:	mov    ecx,0x4e9e25ca
  408337:	xchg   edx,eax
  408338:	adc    esp,eax
  40833a:	(bad)  
  40833b:	jmp    0x4591:0x90baf7e4
  408342:	into   
  408343:	pop    esi
  408344:	pop    esi
  408345:	jmp    DWORD PTR [edi]
  408347:	jae    0x408385
  408349:	ins    DWORD PTR es:[edi],dx
  40834a:	add    ecx,DWORD PTR [esp+ecx*4]
  40834d:	stos   BYTE PTR es:[edi],al
  40834e:	inc    esi
  40834f:	clc    
  408350:	(bad)  
  408351:	std    
  408352:	xchg   BYTE PTR [ecx],ch
  408354:	fild   QWORD PTR [esi+0x35113bea]
  40835a:	pop    ebx
  40835b:	push   edx
  40835c:	jno    0x4082f0
  40835e:	aam    0xaa
  408360:	mov    ecx,0x3a306bb2
  408365:	jnp    0x408350
  408367:	aaa    
  408368:	mov    esp,0xb4a67a15
  40836d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40836e:	neg    DWORD PTR [esi+0x59732606]
  408374:	out    dx,eax
  408375:	and    BYTE PTR [ecx+ecx*4-0x7d15d254],dh
  40837c:	outs   dx,DWORD PTR ds:[esi]
  40837d:	ja     0x40839e
  40837f:	out    dx,eax
  408380:	test   eax,0xf22623df
  408385:	hlt    
  408386:	jnp    0x40833e
  408388:	inc    esi
  408389:	jg     0x40838d
  40838b:	fisub  DWORD PTR [eax]
  40838d:	leave  
  40838e:	push   ebx
  40838f:	inc    eax
  408390:	dec    esp
  408391:	inc    esp
  408392:	mov    al,ds:0x376a4ca3
  408397:	adc    ebx,DWORD PTR [edx+0x14]
  40839a:	jb     0x408394
  40839c:	or     BYTE PTR [esi],cl
  40839e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40839f:	push   eax
  4083a0:	lock jle 0x408414
  4083a3:	and    BYTE PTR [ecx+ebx*4-0x3],bh
  4083a7:	jge    0x4083a2
  4083a9:	iret   
  4083aa:	ficom  WORD PTR [esi+0x30]
  4083ad:	cdq    
  4083ae:	iret   
  4083af:	fmul   QWORD PTR [ecx+0x11]
  4083b2:	and    al,ah
  4083b4:	xor    al,0xee
  4083b6:	xor    ecx,DWORD PTR [ecx]
  4083b8:	jbe    0x408410
  4083ba:	fisubr DWORD PTR [edi]
  4083bc:	inc    eax
  4083bd:	xlat   BYTE PTR ds:[ebx]
  4083be:	loope  0x4083e4
  4083c0:	mov    eax,0x4c3f1681
  4083c5:	std    
  4083c6:	xchg   edx,eax
  4083c7:	cli    
  4083c8:	(bad)  
  4083c9:	pop    ebx
  4083ca:	or     al,BYTE PTR [eax+esi*2-0x21]
  4083ce:	ds call 0x5344b5e8
  4083d4:	dec    ecx
  4083d5:	jge    0x408386
  4083d7:	fisttp QWORD PTR [edi+ebx*1]
  4083da:	add    BYTE PTR [ebx-0x7d],0x28
  4083de:	push   esp
  4083df:	mov    eax,0x49b0ea5f
  4083e4:	sub    eax,0xbba6bcc0
  4083e9:	mov    ds:0x2de56c0b,al
  4083ee:	int3   
  4083ef:	rol    BYTE PTR [edx-0x6c18f5af],0xbf
  4083f6:	js     0x40839c
  4083f8:	jmp    0xd3a8:0x422a33d3
  4083ff:	cld    
  408400:	fs js  0x408482
  408403:	mov    eax,gs
  408405:	fsub   QWORD PTR [edx-0xa9cc6b4]
  40840b:	jmp    0x40841c
  40840d:	(bad)  
  40840e:	fstp   TBYTE PTR [ebx+0x6f]
  408411:	cmp    eax,0xf368afae
  408416:	cmp    ch,BYTE PTR [ebx+0x75]
  408419:	repz or al,0x11
  40841c:	inc    edi
  40841d:	xchg   edi,eax
  40841e:	jle    0x408488
  408420:	shl    DWORD PTR [ecx],1
  408422:	jbe    0x408453
  408424:	xor    al,0x5e
  408426:	ret    0xd171
  408429:	repnz cmp ebp,DWORD PTR [edi]
  40842c:	repz jbe 0x4083b9
  40842f:	and    BYTE PTR ds:0x7e7c0208,0xe5
  408436:	mov    eax,ds:0x9f4165d8
  40843b:	push   ecx
  40843c:	(bad)  
  40843d:	mov    ds:0x2e1a794f,al
  408442:	xlat   BYTE PTR ds:[ebx]
  408443:	lea    esp,[edi+0x99d4d59]
  408449:	dec    ebp
  40844a:	xor    ah,ch
  40844c:	test   BYTE PTR [edi+0x3949895b],dl
  408452:	or     esp,DWORD PTR [esp+eax*4+0x7d3dc81d]
  408459:	(bad)
  40845c:	jno    0x40844d
  40845e:	data16 int3 
  408460:	ss adc bl,dh
  408463:	xchg   DWORD PTR [ecx-0x66],ebp
  408466:	cdq    
  408467:	mov    WORD PTR [ebx-0x5b],es
  40846a:	pop    ecx
  40846b:	mov    BYTE PTR [esi],cl
  40846d:	cmp    dh,dh
  40846f:	add    BYTE PTR [eax+0x1c6c6b8a],0x84
  408476:	xor    BYTE PTR [edi],bh
  408478:	and    BYTE PTR [eax+0x1339b1b2],cl
  40847e:	jmp    esi
  408480:	pop    esi
  408481:	sbb    eax,0x3edd939a
  408486:	jecxz  0x408433
  408488:	jecxz  0x408471
  40848a:	adc    al,0xae
  40848c:	sbb    al,0x34
  40848e:	or     al,BYTE PTR [esi-0x6f1f6bd9]
  408494:	push   eax
  408495:	call   0x7429:0xea646e7c
  40849c:	and    bl,BYTE PTR [ebx+0x43]
  40849f:	dec    ebp
  4084a0:	pushf  
  4084a1:	cs cmp eax,0x9845b38d
  4084a7:	xchg   DWORD PTR [edi-0x10],eax
  4084aa:	jge    0x40851b
  4084ac:	std    
  4084ad:	lock (bad) 
  4084af:	sbb    edi,DWORD PTR [edx+0x4a]
  4084b2:	inc    ebp
  4084b3:	mov    ecx,0xe141c65
  4084b8:	push   ds
  4084b9:	xchg   ecx,eax
  4084ba:	sub    DWORD PTR cs:[edi],0xe71faca9
  4084c1:	add    al,0xaa
  4084c3:	inc    esi
  4084c4:	xlat   BYTE PTR ds:[ebx]
  4084c5:	push   edi
  4084c6:	adc    bl,BYTE PTR [ecx+ebp*8]
  4084c9:	inc    edi
  4084ca:	push   0x55
  4084cc:	and    eax,0x73659736
  4084d1:	jae    0x4084c4
  4084d3:	dec    esi
  4084d4:	cwde   
  4084d5:	or     edx,DWORD PTR [edi]
  4084d7:	ret    
  4084d8:	popf   
  4084d9:	cmp    ebx,DWORD PTR [edi+0x4e9022d9]
  4084df:	xor    edx,DWORD PTR ds:0xdd2534eb
  4084e5:	mov    ecx,0xfcc71dd6
  4084ea:	mov    dh,0x1c
  4084ec:	jae    0x408566
  4084ee:	inc    eax
  4084ef:	or     esp,ebp
  4084f1:	call   0x7dfe51a0
  4084f6:	aad    0xe7
  4084f8:	bound  edi,QWORD PTR [esi+0xb]
  4084fb:	jae    0x408520
  4084fd:	ins    DWORD PTR es:[edi],dx
  4084fe:	in     eax,0x51
  408500:	xchg   ebx,eax
  408501:	in     al,0x2d
  408503:	repz out dx,eax
  408505:	repz push es
  408507:	adc    ebp,edx
  408509:	mov    dl,0x13
  40850b:	popa   
  40850c:	add    DWORD PTR [esi+0x1249090],edi
  408512:	pop    ds
  408513:	or     DWORD PTR [esi],ebx
  408515:	or     al,0x15
  408517:	ss pop ds
  408519:	dec    ebp
  40851a:	push   edx
  40851b:	xchg   esp,eax
  40851c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40851d:	out    dx,al
  40851e:	xchg   ecx,eax
  40851f:	fcom   QWORD PTR [ecx+0x74484626]
  408525:	imul   ebp,DWORD PTR es:[ebx],0xe0767d82
  40852c:	dec    edx
  40852d:	ror    BYTE PTR [esi+ecx*4-0xbc803bb],cl
  408534:	dec    esi
  408535:	dec    edx
  408536:	adc    ecx,ebx
  408538:	mov    al,0xf7
  40853a:	sub    BYTE PTR [esi+0x11],al
  40853d:	cdq    
  40853e:	inc    ecx
  40853f:	pop    ebp
  408540:	xchg   esi,eax
  408541:	mov    dl,0x3
  408543:	ss jbe 0x4085c1
  408546:	pop    ebp
  408547:	jbe    0x4084db
  408549:	adc    bl,BYTE PTR [edi]
  40854b:	add    DWORD PTR [edx+edi*4+0x2b],edi
  40854f:	pop    ss
  408550:	in     eax,dx
  408551:	mov    cl,0xba
  408553:	mov    esi,edx
  408555:	je     0x408523
  408557:	cmp    al,0x79
  408559:	and    al,0x56
  40855b:	ins    DWORD PTR es:[edi],dx
  40855c:	mov    ds:0xdb200f8b,al
  408561:	(bad)  
  408562:	(bad)  
  408563:	push   0x39977808
  408568:	clc    
  408569:	jbe    0x4085e0
  40856b:	iret   
  40856c:	add    eax,0xdaebbbee
  408571:	dec    ebx
  408572:	mov    ch,0x4b
  408574:	sbb    eax,0xa9367f79
  408579:	ja     0x40857b
  40857b:	lods   eax,DWORD PTR ds:[esi]
  40857c:	std    
  40857d:	daa    
  40857e:	mov    edi,0x11b46f30
  408583:	ins    DWORD PTR es:[edi],dx
  408584:	adc    al,0x53
  408586:	mov    ds:0xf49e35d8,al
  40858b:	inc    eax
  40858c:	lds    esi,FWORD PTR [ecx-0x3f6e7206]
  408592:	and    al,0xf7
  408594:	cld    
  408595:	dec    BYTE PTR [esi-0x4b25a99e]
  40859b:	popf   
  40859c:	div    esp
  40859e:	lock fist DWORD PTR [ebp-0x7a7dd56b]
  4085a5:	stos   BYTE PTR es:[edi],al
  4085a6:	pop    ebp
  4085a7:	jbe    0x408562
  4085a9:	mov    eax,ds:0x26845d95
  4085ae:	mov    BYTE PTR [esi-0x3cbd27d1],cl
  4085b4:	jno    0x40858a
  4085b6:	jp     0x40859a
  4085b8:	adc    al,0xc
  4085ba:	les    edi,FWORD PTR [ebx+0x3c7e298f]
  4085c0:	xor    al,0x90
  4085c2:	pop    es
  4085c3:	js     0x408557
  4085c5:	sbb    al,0xf7
  4085c7:	sbb    BYTE PTR [eax-0x76],cl
  4085ca:	pushf  
  4085cb:	xor    DWORD PTR [edi-0x433a9bc4],edi
  4085d1:	push   esp
  4085d2:	jbe    0x40856b
  4085d4:	(bad)  [ecx]
  4085d6:	jmp    ebx
  4085d8:	mov    dh,BYTE PTR [ebx]
  4085da:	add    DWORD PTR [edi+0x60],edi
  4085dd:	inc    eax
  4085de:	inc    eax
  4085df:	sahf   
  4085e0:	adc    ecx,DWORD PTR [esi-0x5382cee2]
  4085e6:	push   edi
  4085e7:	mov    al,0xed
  4085e9:	aas    
  4085ea:	shl    al,cl
  4085ec:	jb     0x408610
  4085ee:	or     al,0x9
  4085f0:	lods   eax,DWORD PTR ds:[esi]
  4085f1:	pop    edx
  4085f2:	xchg   esi,eax
  4085f3:	cmp    BYTE PTR [eax],al
  4085f5:	jp     0x4085d8
  4085f7:	pop    esi
  4085f8:	cmp    ecx,esi
  4085fa:	add    ch,BYTE PTR [ecx+0x2720564d]
  408600:	pop    esi
  408601:	cdq    
  408602:	aad    0x53
  408604:	mov    bl,0x25
  408606:	int3   
  408607:	test   BYTE PTR [ecx+0x60],ah
  40860a:	sub    eax,0x1bf534e3
  40860f:	cli    
  408610:	push   esi
  408611:	add    BYTE PTR [eax-0xb6861d],cl
  408617:	nop
  408618:	(bad)  
  408619:	jle    0x4085e7
  40861b:	fsubr  st,st(3)
  40861d:	mov    ds:0x9cb78d7f,al
  408622:	mov    al,0x3a
  408624:	sbb    DWORD PTR [ebp+0x6e8d65eb],0x4d
  40862b:	std    
  40862c:	add    dl,al
  40862e:	ins    DWORD PTR es:[edi],dx
  40862f:	push   ecx
  408630:	or     DWORD PTR [ebp-0x72c48eda],esi
  408636:	lds    esp,FWORD PTR [edi]
  408638:	repnz mov dl,0x24
  40863b:	push   esp
  40863c:	out    0x74,al
  40863e:	retf   
  40863f:	fadd   st,st(4)
  408641:	in     al,0x57
  408643:	jl     0x408685
  408645:	ret    
  408646:	mov    ch,0xa6
  408648:	cmp    DWORD PTR [edi-0x6f],edi
  40864b:	scas   eax,DWORD PTR es:[edi]
  40864c:	adc    eax,0x464c3913
  408651:	or     bh,dl
  408653:	adc    dl,BYTE PTR [ecx-0x33]
  408656:	test   eax,0x71cd123e
  40865b:	jns    0x4086cc
  40865d:	imul   eax,edi,0x23d489c1
  408663:	ret    0xddba
  408666:	jbe    0x408606
  408668:	outs   dx,BYTE PTR ds:[esi]
  408669:	inc    ebx
  40866a:	dec    esi
  40866b:	popa   
  40866c:	mov    ds:0xb5da50e9,eax
  408671:	lds    edi,FWORD PTR [ebx]
  408673:	xchg   edi,eax
  408674:	imul   esp,DWORD PTR [edi+ebx*2-0x51fee7a4],0x13
  40867c:	fnstsw WORD PTR [ebp+0x346b4573]
  408682:	inc    eax
  408683:	add    DWORD PTR [edi+esi*8],eax
  408686:	jmp    FWORD PTR [ebx+0x7b]
  408689:	or     ah,ch
  40868b:	jnp    0x4086a4
  40868d:	inc    eax
  40868e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40868f:	cld    
  408690:	mov    ch,0x3c
  408692:	sub    edx,DWORD PTR [esi+ebp*4+0x22]
  408696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408697:	inc    esp
  408698:	into   
  408699:	scas   eax,DWORD PTR es:[edi]
  40869a:	cwde   
  40869b:	mov    cl,0xd6
  40869d:	xor    DWORD PTR [ecx-0x421bcd5b],0x846bfe4e
  4086a7:	jno    0x4086dd
  4086a9:	mov    ah,0xc8
  4086ab:	jp     0x408652
  4086ad:	sub    ch,BYTE PTR [ecx+0x7bf30f43]
  4086b3:	cmp    DWORD PTR [edx+0x64e7a606],esp
  4086b9:	jno    0x4086af
  4086bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086bc:	mov    BYTE PTR [ecx-0x6b],bl
  4086bf:	call   0xba095c3d
  4086c4:	xor    DWORD PTR [edi-0x53fa352c],0x28
  4086cb:	sti    
  4086cc:	add    BYTE PTR [ebx],0xf5
  4086cf:	hlt    
  4086d0:	mov    bh,0xb0
  4086d2:	mov    edx,0x27130cd4
  4086d7:	retf   0x2f79
  4086da:	sbb    ah,BYTE PTR [eax-0x93b60fa]
  4086e0:	pushf  
  4086e1:	ss daa 
  4086e3:	jae    0x408702
  4086e5:	(bad)  
  4086e6:	sbb    ebp,ebx
  4086e8:	scas   eax,DWORD PTR es:[edi]
  4086e9:	pop    DWORD PTR [ecx]
  4086eb:	outs   dx,DWORD PTR ds:[esi]
  4086ec:	sbb    DWORD PTR [edx+0x59],edx
  4086ef:	push   ss
  4086f0:	das    
  4086f1:	dec    ebp
  4086f2:	sbb    BYTE PTR [ecx+0x13],al
  4086f5:	pop    ecx
  4086f6:	xchg   BYTE PTR [edx],al
  4086f8:	test   al,0x35
  4086fa:	in     eax,dx
  4086fb:	rol    dh,cl
  4086fd:	stos   BYTE PTR es:[edi],al
  4086fe:	push   ss
  4086ff:	or     edi,eax
  408701:	mov    al,ds:0xc9e031d9
  408706:	(bad)  
  408707:	mul    bl
  408709:	les    ebp,FWORD PTR [edi]
  40870b:	sbb    cl,al
  40870d:	adc    ah,BYTE PTR [esi]
  40870f:	xor    BYTE PTR [ebp+0x5900b6f9],ch
  408715:	sbb    al,0xfe
  408717:	stos   DWORD PTR es:[edi],eax
  408718:	enter  0x3af,0x82
  40871c:	sbb    eax,0xe9e7328a
  408721:	inc    esi
  408722:	ds pextrw esi,(bad),0xc5
  408725:	xor    ah,BYTE PTR [edx+0x4b24d5ba]
  40872b:	leave  
  40872c:	inc    ebx
  40872d:	or     dh,al
  40872f:	icebp  
  408730:	pop    edx
  408731:	aas    
  408732:	pop    edi
  408733:	fs xor eax,0xa5597e1f
  408739:	test   al,0xd3
  40873b:	pop    edx
  40873c:	sbb    ch,BYTE PTR [ecx+0x6b]
  40873f:	arpl   WORD PTR [edi],di
  408741:	mov    esi,DWORD PTR [ecx-0xdacfda2]
  408747:	jae    0x40879a
  408749:	ret    
  40874a:	xor    eax,0xca3f1bc4
  40874f:	(bad)  [edx-0x8ab6fcf]
  408755:	sbb    esi,DWORD PTR [edi+0x5e]
  408758:	push   es
  408759:	mov    ds,WORD PTR [ebx-0x4c]
  40875c:	mov    al,ds:0x9bb26621
  408761:	dec    ecx
  408762:	inc    esp
  408763:	fucomi st,st(1)
  408765:	mov    cl,0x3c
  408767:	push   ecx
  408768:	or     ecx,DWORD PTR [ebx+edx*1+0x3c0b67dd]
  40876f:	ins    BYTE PTR es:[edi],dx
  408770:	add    BYTE PTR [eax+0x16ab7212],0x54
  408777:	or     eax,DWORD PTR [ebp-0xf3e43c1]
  40877d:	jns    0x4087b2
  40877f:	mov    bh,0x24
  408781:	in     al,dx
  408782:	sbb    DWORD PTR [ebp+ecx*4-0x12],esi
  408786:	adc    DWORD PTR [ebp-0x7e],ebp
  408789:	pushf  
  40878a:	pmuludq mm1,QWORD PTR [edi]
  40878d:	pop    esp
  40878e:	mov    edx,0x54cdcae8
  408793:	sub    eax,0xb18bf0b7
  408798:	(bad)  
  408799:	jbe    0x408752
  40879b:	cwde   
  40879c:	inc    ebp
  40879d:	pusha  
  40879e:	es cwde 
  4087a0:	outs   dx,DWORD PTR ds:[esi]
  4087a1:	mov    ch,0xd3
  4087a3:	jle    0x4087d4
  4087a5:	addr16 iret 
  4087a7:	push   edx
  4087a8:	and    ecx,DWORD PTR [esi-0x18]
  4087ab:	pop    esi
  4087ac:	fisttp QWORD PTR [ecx]
  4087ae:	in     al,dx
  4087af:	xor    DWORD PTR [edx],ebp
  4087b1:	push   ss
  4087b2:	fldl2e 
  4087b4:	mov    ebx,0x55091cb2
  4087b9:	and    DWORD PTR ds:0x4cbdaa89,esi
  4087bf:	sbb    bl,BYTE PTR [ebx-0x58]
  4087c2:	(bad)  
  4087c3:	scas   eax,DWORD PTR es:[edi]
  4087c4:	rep ins DWORD PTR es:[edi],dx
  4087c6:	scas   eax,DWORD PTR es:[edi]
  4087c7:	push   ss
  4087c8:	mov    edx,0x9148876d
  4087cd:	lock mov esi,0xc612d045
  4087d3:	ja     0x4087d0
  4087d5:	lods   eax,DWORD PTR ds:[esi]
  4087d6:	ss stos BYTE PTR es:[edi],al
  4087d8:	cmp    ebp,DWORD PTR [edi-0x24]
  4087db:	add    eax,0x1d8d0184
  4087e0:	ret    0x78a
  4087e3:	rcr    al,0x6b
  4087e6:	push   DWORD PTR [esi+0x48776b2b]
  4087ec:	retf   0x18be
  4087ef:	retf   0x5bec
  4087f2:	clc    
  4087f3:	imul   ebp,DWORD PTR [esi-0x53],0x2c19d4ca
  4087fa:	pop    es
  4087fb:	dec    esi
  4087fc:	jns    0x408846
  4087fe:	ret    
  4087ff:	fdivr  QWORD PTR [esi-0x169d015e]
  408805:	test   DWORD PTR [eax-0x104942ae],eax
  40880b:	xchg   esp,eax
  40880c:	popa   
  40880d:	adc    eax,0x43711b58
  408812:	xor    eax,0x977078e6
  408817:	std    
  408818:	and    cl,BYTE PTR [edi-0x5b]
  40881b:	and    al,0x6d
  40881d:	ret    0x947c
  408820:	and    al,0x63
  408822:	mov    DWORD PTR [ebx+0x67],esi
  408825:	push   ss
  408826:	fcmovbe st,st(0)
  408828:	ret    0x4d9b
  40882b:	push   es
  40882c:	shl    BYTE PTR [eax],1
  40882e:	mov    esi,0x61f48215
  408833:	cld    
  408834:	(bad)  
  408835:	out    0xa6,al
  408837:	pusha  
  408838:	xor    BYTE PTR [ebp+0x72],0x21
  40883c:	test   BYTE PTR [ecx+0x5],0x56
  408840:	aad    0x1
  408842:	enter  0xc78a,0x9c
  408846:	ror    cl,1
  408848:	repz adc al,0xf4
  40884b:	and    eax,0xb1ad6b8d
  408850:	enter  0x62e6,0xac
  408854:	mov    bh,0xd6
  408856:	nop
  408857:	xor    cl,BYTE PTR [edi+0x282ca1d5]
  40885d:	lods   eax,DWORD PTR ds:[esi]
  40885e:	ds and eax,0x9261e3b5
  408864:	fiadd  DWORD PTR [eax+0x21955465]
  40886a:	dec    edx
  40886b:	fdivr  DWORD PTR [eax+0x4ac13dd8]
  408871:	jmp    0x5f6511c6
  408876:	loopne 0x4087fb
  408878:	ffreep st(0)
  40887a:	adc    BYTE PTR [ecx-0x5a0c60ec],dl
  408880:	xchg   DWORD PTR [eax-0x64d9a47a],edi
  408886:	outs   dx,DWORD PTR ds:[esi]
  408887:	and    eax,0x630163e4
  40888c:	dec    eax
  40888d:	lock loopne 0x4088dd
  408890:	push   edi
  408891:	xor    BYTE PTR [esi+0x42],ch
  408894:	leave  
  408895:	and    al,0x2e
  408897:	ficomp DWORD PTR [esi-0x5f7ef298]
  40889d:	xchg   esi,eax
  40889e:	inc    ebp
  40889f:	pop    esi
  4088a0:	push   ebp
  4088a1:	push   edx
  4088a2:	adc    BYTE PTR [ebp+eiz*2+0x663f244c],bl
  4088a9:	pop    ebp
  4088aa:	and    edi,DWORD PTR [eax+0x13]
  4088ad:	retf   
  4088ae:	dec    eax
  4088af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b0:	xlat   BYTE PTR ds:[ebx]
  4088b1:	sahf   
  4088b2:	inc    edi
  4088b3:	jbe    0x4088b7
  4088b5:	scas   eax,DWORD PTR es:[edi]
  4088b6:	addr16 dec cx
  4088b9:	mov    esp,DWORD PTR [esi-0x63d445de]
  4088bf:	call   0x96c26794
  4088c4:	je     0x40890d
  4088c6:	push   ebp
  4088c7:	or     edx,DWORD PTR [esp+ecx*1]
  4088ca:	scas   al,BYTE PTR es:[edi]
  4088cb:	pop    edi
  4088cc:	pop    ecx
  4088cd:	test   bl,ah
  4088cf:	or     DWORD PTR ss:[eax+0x51],edx
  4088d3:	dec    eax
  4088d4:	pop    edi
  4088d5:	jle    0x408858
  4088d7:	lock jne 0x408879
  4088da:	test   al,0x18
  4088dc:	push   cs
  4088dd:	ins    DWORD PTR es:[edi],dx
  4088de:	clc    
  4088df:	or     al,0x5d
  4088e1:	xchg   esi,eax
  4088e2:	sti    
  4088e3:	mov    cl,0x3b
  4088e5:	pusha  
  4088e6:	push   ecx
  4088e7:	out    0x4a,al
  4088e9:	(bad)  
  4088ea:	sar    DWORD PTR [edi-0x5aca1a0b],1
  4088f0:	add    DWORD PTR [ebx-0x1e],0x468edc8c
  4088f7:	jbe    0x4088f4
  4088f9:	or     ebx,DWORD PTR [esi]
  4088fb:	retf   
  4088fc:	test   BYTE PTR [esi-0x75409b99],bl
  408902:	retf   
  408903:	jp     0x40892b
  408905:	jge    0x4088c9
  408907:	outs   dx,BYTE PTR ds:[esi]
  408908:	imul   edx,DWORD PTR [ebx],0xffffffb5
  40890b:	add    ch,BYTE PTR ds:0x8b9ed0b8
  408911:	idiv   BYTE PTR [edx+0x414a744b]
  408917:	retf   
  408918:	mov    al,0xf3
  40891a:	xchg   edx,eax
  40891c:	push   ebx
  40891d:	call   0xb8c7:0xfdaa5943
  408924:	les    edi,FWORD PTR [eax]
  408926:	add    eax,0x1e8a1a0
  40892b:	jae    0x4089a4
  40892d:	pop    edi
  40892e:	mov    DWORD PTR [edi],edx
  408930:	loope  0x408935
  408932:	mov    eax,ebp
  408934:	shl    ebp,0x88
  408937:	retf   0xbbf4
  40893a:	push   edi
  40893b:	aam    0x94
  40893d:	(bad)  
  40893f:	mov    al,ds:0xf5b8912b
  408944:	or     ebp,esi
  408946:	mov    dl,0xc8
  408948:	outs   dx,DWORD PTR ds:[esi]
  408949:	ja     0x4088e3
  40894b:	sar    edi,cl
  40894d:	je     0x4089c4
  40894f:	sub    DWORD PTR [edi+0xb4af631],ebx
  408955:	ins    DWORD PTR es:[edi],dx
  408956:	pusha  
  408957:	adc    eax,0x90318442
  40895c:	enter  0xc7ec,0x3c
  408960:	push   edi
  408961:	or     eax,DWORD PTR [ecx-0x51]
  408964:	data16 xor BYTE PTR [ecx+0x17],al
  408968:	sub    DWORD PTR [ecx],esi
  40896a:	call   0x48eff49b
  40896f:	loop   0x4088f1
  408971:	out    0xc6,al
  408973:	push   es
  408974:	inc    ebp
  408975:	push   eax
  408976:	sbb    eax,0xdeee922a
  40897b:	inc    eax
  40897c:	lds    ecx,FWORD PTR [esi-0x1f]
  40897f:	inc    ebx
  408980:	push   esp
  408981:	dec    esi
  408982:	dec    ebp
  408983:	es pop esp
  408985:	ss clc 
  408987:	add    DWORD PTR [edi+edx*2-0x73],ecx
  40898b:	int    0x13
  40898d:	loope  0x408963
  40898f:	dec    esp
  408990:	push   ebx
  408991:	inc    edi
  408992:	fs push 0xcfd12d17
  408998:	xchg   esi,eax
  408999:	loopne 0x40895f
  40899b:	std    
  40899c:	jo     0x408a11
  40899e:	adc    ebp,edx
  4089a0:	and    DWORD PTR [edx+0x2b],edi
  4089a3:	push   esp
  4089a4:	sbb    BYTE PTR [ecx+0x13],al
  4089a7:	dec    eax
  4089a8:	ror    bl,cl
  4089aa:	in     eax,dx
  4089ab:	mul    BYTE PTR [esp]
  4089ae:	xchg   BYTE PTR [ebx-0x16],dl
  4089b1:	pop    ebp
  4089b2:	rol    DWORD PTR [eax],1
  4089b4:	retf   0x388f
  4089b7:	loopne 0x408978
  4089b9:	sbb    DWORD PTR [eax-0x71],0x1b43d8a
  4089c0:	mov    BYTE PTR [edi-0x11f03774],ch
  4089c6:	jmp    0x378f09aa
  4089cb:	dec    ecx
  4089cc:	iret   
  4089cd:	in     eax,dx
  4089ce:	jl     0x4089be
  4089d0:	dec    edx
  4089d1:	lahf   
  4089d2:	pusha  
  4089d3:	sub    al,0x93
  4089d5:	shr    DWORD PTR [ebx+0x45],0xea
  4089d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089da:	loope  0x4089f6
  4089dc:	sub    al,0xc
  4089de:	aam    0xc7
  4089e0:	mov    bh,0x7c
  4089e2:	pop    ecx
  4089e3:	pop    eax
  4089e4:	and    al,0xb4
  4089e6:	cwde   
  4089e7:	sti    
  4089e8:	(bad)  
  4089e9:	cld    
  4089ea:	jb     0x408994
  4089ec:	repz scas al,BYTE PTR es:[edi]
  4089ee:	in     eax,dx
  4089ef:	and    ebx,DWORD PTR [ebx+0x1f6f7693]
  4089f5:	div    DWORD PTR [ebx-0x579c386]
  4089fb:	mov    al,0x5e
  4089fd:	push   es
  4089fe:	push   esi
  4089ff:	cwde   
  408a00:	rol    DWORD PTR [ecx+0x7e],0xc4
  408a04:	cmp    eax,DWORD PTR [ebx]
  408a06:	mov    dh,0x25
  408a08:	and    DWORD PTR [ebx-0x36],ebp
  408a0b:	comiss xmm3,DWORD PTR [edx-0xd]
  408a0f:	pop    edx
  408a10:	ins    BYTE PTR es:[edi],dx
  408a11:	cwde   
  408a12:	sub    eax,0xd99f87bc
  408a17:	cli    
  408a18:	(bad)  
  408a19:	cli    
  408a1a:	lock les ecx,FWORD PTR [eax-0x24]
  408a1e:	test   al,0xba
  408a20:	enter  0xdd41,0xef
  408a24:	mov    esi,0x89c1790a
  408a29:	jmp    0x408a4e
  408a2b:	lock ret 0x753d
  408a2f:	imul   edi,DWORD PTR [esi],0xfb002c9d
  408a35:	inc    ebp
  408a36:	sbb    DWORD PTR [esi+ebx*1],ecx
  408a39:	pop    edi
  408a3a:	cs repnz push esi
  408a3d:	xor    BYTE PTR [eax+0x8],ah
  408a40:	fmul   QWORD PTR [eax+ebp*2-0x623c144c]
  408a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a48:	pop    edx
  408a49:	jmp    0x408a7b
  408a4b:	pop    ds
  408a4c:	sar    DWORD PTR [eax-0x7865ec89],cl
  408a52:	sbb    BYTE PTR [edi-0x4a],dl
  408a55:	dec    ecx
  408a56:	push   ebp
  408a57:	inc    eax
  408a58:	adc    edx,DWORD PTR [esi]
  408a5a:	dec    eax
  408a5b:	jnp    0x408a51
  408a5d:	pushf  
  408a5e:	cmp    eax,DWORD PTR [esi+0x1b]
  408a61:	sbb    DWORD PTR [ecx+0x71356042],eax
  408a67:	inc    esp
  408a68:	fs push ebp
  408a6a:	fnsave [ecx+0x383046cc]
  408a70:	enter  0xebb,0x85
  408a74:	pop    esi
  408a75:	sbb    al,ah
  408a77:	sbb    esp,DWORD PTR [esi-0xa]
  408a7a:	retf   0x9291
  408a7d:	pop    edi
  408a7e:	cld    
  408a7f:	leave  
  408a80:	stos   DWORD PTR es:[edi],eax
  408a81:	(bad)  
  408a82:	je     0x408a40
  408a84:	retf   0x712c
  408a87:	mov    ebp,0x7cd5f29e
  408a8c:	push   esp
  408a8d:	daa    
  408a8e:	mov    ds:0xbdbed511,al
  408a93:	cmp    al,0x73
  408a95:	pop    edi
  408a96:	jo     0x408abb
  408a98:	adc    DWORD PTR [edx+ecx*8],esi
  408a9b:	pop    esp
  408a9c:	push   edx
  408a9d:	aad    0x92
  408a9f:	pusha  
  408aa0:	dec    ebx
  408aa1:	sub    al,0x67
  408aa3:	push   esp
  408aa4:	fst    QWORD PTR [ecx-0x4a20bb68]
  408aaa:	clc    
  408aab:	jbe    0x408a5f
  408aad:	mov    ebp,0x515dd7be
  408ab2:	add    edx,edi
  408ab4:	mov    esp,0x7779b4e8
  408ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aba:	mov    edx,0x9716618f
  408abf:	lahf   
  408ac0:	mov    ch,0xab
  408ac2:	inc    esp
  408ac3:	pop    ecx
  408ac4:	mov    cl,BYTE PTR [edx+ebx*2+0x5d]
  408ac8:	or     edx,DWORD PTR [ebx-0x4df8de74]
  408ace:	addr16 mov ds:0x2340,eax
  408ad2:	add    ah,BYTE PTR [esi]
  408ad4:	loopne 0x408b08
  408ad6:	adc    eax,0x3050bdae
  408adb:	das    
  408adc:	xchg   esi,eax
  408add:	mov    eax,0xe17f0c2e
  408ae2:	add    al,0xb6
  408ae4:	pop    esi
  408ae5:	jo     0x408aca
  408ae7:	pusha  
  408ae8:	push   edi
  408ae9:	cli    
  408aea:	ins    DWORD PTR es:[edi],dx
  408aeb:	pop    ss
  408aec:	or     ebx,ebx
  408aee:	in     eax,dx
  408aef:	and    al,BYTE PTR [ebx+0x1b00a76c]
  408af5:	loope  0x408a97
  408af7:	jne    0x408a93
  408af9:	pop    edi
  408afa:	adc    esp,DWORD PTR [esi]
  408afc:	push   cs
  408afd:	pushf  
  408afe:	nop
  408aff:	dec    esi
  408b00:	dec    edx
  408b01:	mov    eax,cs
  408b03:	xlat   BYTE PTR ds:[ebx]
  408b04:	out    0x15,eax
  408b06:	iret   
  408b07:	mov    ebx,0xe06b7f21
  408b0c:	out    0xf,eax
  408b0e:	test   eax,0x5aafae3e
  408b13:	lea    ebx,[eax+0x20]
  408b16:	lods   eax,DWORD PTR ds:[esi]
  408b17:	imul   edx,eax,0x28c4e500
  408b1d:	cmp    esi,DWORD PTR fs:[edi]
  408b20:	into   
  408b21:	dec    esi
  408b22:	lahf   
  408b23:	sbb    ch,BYTE PTR [esi+ecx*2]
  408b26:	push   ss
  408b27:	into   
  408b28:	mov    al,ds:0x6f01a83c
  408b2d:	cmp    bl,bh
  408b2f:	mov    ah,0x39
  408b31:	addr16 jmp 0x6a43:0xb0e17f3b
  408b39:	sti    
  408b3a:	test   DWORD PTR [ebx-0x74abfbd8],esi
  408b40:	ror    DWORD PTR [ebx],cl
  408b42:	cs out dx,al
  408b44:	mov    bl,0x9f
  408b46:	dec    esi
  408b47:	lods   al,BYTE PTR ds:[esi]
  408b48:	ds sbb esi,ebx
  408b4b:	add    eax,0x3c831dc3
  408b50:	(bad)  
  408b52:	pop    ebx
  408b53:	ror    BYTE PTR [edx],0x55
  408b56:	lods   al,BYTE PTR cs:[esi]
  408b58:	(bad)  [esp+ecx*8-0x63008d0]
  408b5f:	retf   
  408b60:	(bad)  
  408b62:	ret    
  408b63:	xor    edx,DWORD PTR [edi]
  408b65:	outs   dx,DWORD PTR ds:[esi]
  408b66:	aaa    
  408b67:	int    0x90
  408b69:	mov    edi,0xee69f66
  408b6e:	push   ebx
  408b6f:	(bad)  
  408b70:	out    dx,eax
  408b71:	mov    ebp,0xfbacf7c8
  408b76:	in     eax,0xd4
  408b78:	ror    BYTE PTR [ebp+0x729d1845],1
  408b7e:	xchg   ebp,eax
  408b7f:	pop    edx
  408b80:	leave  
  408b81:	inc    esp
  408b82:	into   
  408b83:	dec    ebx
  408b84:	fdivr  QWORD PTR [esi-0x6c]
  408b87:	pop    esp
  408b88:	mov    ah,0xd6
  408b8a:	mov    dh,0x8
  408b8c:	dec    ebp
  408b8d:	xchg   edx,eax
  408b8e:	add    al,0xea
  408b90:	outs   dx,BYTE PTR ds:[esi]
  408b91:	mov    ah,0x8d
  408b93:	jle    0x408bb6
  408b95:	pop    edi
  408b96:	test   DWORD PTR [eax-0x3b760257],0xa1e77dc0
  408ba0:	inc    edi
  408ba1:	pop    es
  408ba2:	popa   
  408ba3:	popa   
  408ba4:	ds xchg edx,eax
  408ba6:	mov    edx,0xd20a7bed
  408bab:	popf   
  408bac:	adc    ah,bh
  408bae:	cmp    BYTE PTR [ebx],0x33
  408bb1:	int    0xc7
  408bb3:	mov    cl,0xc5
  408bb5:	and    bh,BYTE PTR [ebp+0x68]
  408bb8:	jae    0x408bbc
  408bba:	scas   al,BYTE PTR es:[edi]
  408bbb:	ror    cl,cl
  408bbd:	fcmovnu st,st(4)
  408bbf:	inc    ecx
  408bc0:	or     eax,0xab79f7d7
  408bc5:	int3   
  408bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc7:	inc    ebp
  408bc8:	xchg   ebp,eax
  408bc9:	js     0x408c33
  408bcb:	mov    ds:0xa74bcb95,eax
  408bd0:	test   BYTE PTR [ecx],al
  408bd2:	mov    al,0xa6
  408bd4:	in     eax,0xff
  408bd6:	mov    eax,0xdd3bd6ff
  408bdb:	or     DWORD PTR [eax-0x70],ecx
  408bde:	push   ebx
  408bdf:	dec    ecx
  408be0:	dec    edi
  408be1:	shl    DWORD PTR [ebx-0x7dc7616c],1
  408be7:	mov    ebp,0x3d647939
  408bec:	push   cs
  408bed:	xor    DWORD PTR [ecx+0x78cb5e9d],ebp
  408bf3:	push   ebp
  408bf4:	adc    DWORD PTR [edx-0x32],ebp
  408bf7:	icebp  
  408bf8:	dec    ebx
  408bf9:	xor    dh,dl
  408bfb:	sub    eax,0xcb8e0f99
  408c00:	inc    ebx
  408c01:	sbb    eax,0x51f3f0d8
  408c06:	pop    ecx
  408c07:	fstp   DWORD PTR [ebx]
  408c09:	mov    ds:0xae15ca71,al
  408c0e:	xor    al,0x64
  408c10:	jne    0x408c26
  408c12:	jnp    0x408c52
  408c14:	inc    ebp
  408c15:	imul   ecx,ecx,0x2e8c4f22
  408c1b:	sub    BYTE PTR [esi+0x750bde72],cl
  408c21:	sbb    eax,0x9062bd
  408c26:	mov    eax,ds:0x9f748bdb
  408c2b:	and    BYTE PTR [ebp+0x1e17e048],0xb7
  408c32:	loope  0x408c62
  408c34:	xchg   ebp,eax
  408c35:	aas    
  408c36:	or     edi,ebp
  408c38:	lods   al,BYTE PTR ds:[esi]
  408c39:	or     BYTE PTR [ecx],dl
  408c3b:	std    
  408c3c:	out    dx,al
  408c3d:	push   edi
  408c3e:	add    esi,ebx
  408c40:	jl     0x408c44
  408c42:	enter  0x7470,0x95
  408c46:	ss int3 
  408c48:	sub    DWORD PTR [ebx],edx
  408c4a:	sar    DWORD PTR [ebx],1
  408c4c:	push   ebx
  408c4d:	pop    ecx
  408c4e:	sbb    ebx,DWORD PTR [ebp+0x70bbf845]
  408c54:	mov    dl,BYTE PTR [eax]
  408c56:	(bad)  
  408c57:	aas    
  408c58:	(bad)  
  408c59:	and    esi,ebp
  408c5b:	leave  
  408c5c:	loop   0x408bfb
  408c5e:	mov    bl,0xf0
  408c60:	stos   BYTE PTR es:[edi],al
  408c61:	dec    edx
  408c62:	out    dx,al
  408c63:	lods   eax,DWORD PTR ds:[esi]
  408c64:	jg     0x408c89
  408c66:	fwait
  408c67:	push   edx
  408c68:	test   dl,bl
  408c6a:	push   edi
  408c6b:	mov    ah,0x70
  408c6d:	stc    
  408c6e:	clc    
  408c6f:	push   edx
  408c70:	cmc    
  408c71:	push   esi
  408c72:	or     DWORD PTR [edi+esi*8-0x581e2f8e],0x788864a1
  408c7d:	ins    DWORD PTR es:[edi],dx
  408c7e:	stos   DWORD PTR es:[edi],eax
  408c7f:	mov    al,ds:0x9b7ab195
  408c84:	jno    0x408c6b
  408c86:	mov    ?,WORD PTR [esi-0x7c]
  408c89:	clc    
  408c8a:	leave  
  408c8b:	inc    esi
  408c8c:	dec    edx
  408c8d:	dec    ebp
  408c8e:	sub    BYTE PTR [ebp-0x75],cl
  408c91:	or     al,0x13
  408c93:	loop   0x408ca9
  408c95:	mov    al,0x9d
  408c97:	mov    ah,0x3d
  408c99:	ds aaa 
  408c9b:	ins    DWORD PTR es:[edi],dx
  408c9c:	sbb    ecx,esi
  408c9e:	jecxz  0x408c7a
  408ca0:	aam    0x14
  408ca2:	dec    ebp
  408ca3:	or     DWORD PTR [edi+0x11],eax
  408ca6:	inc    edi
  408ca7:	lods   al,BYTE PTR ds:[esi]
  408ca8:	dec    ecx
  408ca9:	pushf  
  408caa:	aaa    
  408cab:	cli    
  408cac:	push   ecx
  408cad:	pop    ss
  408cae:	retf   
  408caf:	out    0xd2,eax
  408cb1:	inc    esi
  408cb2:	add    eax,0x870d6d5f
  408cb7:	and    eax,0xdf51ae3f
  408cbc:	ret    0x1fa0
  408cbf:	test   bh,al
  408cc1:	mov    ecx,0xee350abd
  408cc6:	dec    edx
  408cc7:	fstp   st(0)
  408cc9:	ins    DWORD PTR es:[edi],dx
  408cca:	into   
  408ccb:	aas    
  408ccc:	div    BYTE PTR [edi-0x14]
  408ccf:	pop    esp
  408cd0:	loop   0x408cee
  408cd2:	jle    0x408d12
  408cd4:	pushf  
  408cd5:	and    dl,BYTE PTR [eax-0x3b]
  408cd8:	lock sub eax,0x50a84ec0
  408cde:	pop    ebp
  408cdf:	mov    cl,0x1d
  408ce1:	mov    ebp,DWORD PTR [edx-0x11]
  408ce4:	mov    eax,ds:0xdbeac28a
  408ce9:	fld1   
  408ceb:	cld    
  408cec:	mov    bl,BYTE PTR [ebx-0x22]
  408cef:	into   
  408cf0:	(bad)  
  408cf1:	cwde   
  408cf2:	xor    ch,cl
  408cf4:	lock (bad) 
  408cf6:	inc    ecx
  408cf7:	loope  0x408d25
  408cf9:	dec    eax
  408cfa:	jne    0x408cff
  408cfc:	je     0x408d3c
  408cfe:	pop    edx
  408cff:	jns    0x408cc8
  408d01:	call   0xcc1a7686
  408d06:	(bad)  
  408d07:	sub    eax,0x127c74f4
  408d0c:	and    bh,ah
  408d0e:	add    BYTE PTR [ecx-0x4e82e485],ah
  408d14:	out    0xba,al
  408d16:	nop
  408d17:	sbb    ecx,DWORD PTR [ebx]
  408d19:	sbb    edi,DWORD PTR [eax+0x6a]
  408d1c:	je     0x408d1d
  408d1e:	out    0x67,eax
  408d20:	push   ebx
  408d21:	inc    ebx
  408d22:	cld    
  408d23:	sar    BYTE PTR ds:0x152b3b22,1
  408d29:	sub    eax,0xf2c89f5a
  408d2e:	dec    ebx
  408d2f:	mov    ecx,0x3039ddd9
  408d34:	mov    ebx,DWORD PTR [edx+ecx*8]
  408d37:	addr16 push ss
  408d39:	mov    al,ds:0x162a83b3
  408d3e:	pop    ebp
  408d3f:	xchg   edx,eax
  408d40:	or     ah,BYTE PTR [ebx+0x2d]
  408d43:	imul   ebp,DWORD PTR [ebx],0xe383533b
  408d49:	and    eax,0x3f59e187
  408d4e:	jl     0x408d8c
  408d50:	mov    eax,ds:0x154638b8
  408d55:	inc    edi
  408d56:	xor    dh,BYTE PTR [edx+0xf45d404]
  408d5c:	push   cs
  408d5d:	hlt    
  408d5e:	jp     0x408d24
  408d60:	cmp    ah,BYTE PTR [edx+eax*1-0x567702c5]
  408d67:	pop    es
  408d68:	fwait
  408d69:	pop    ss
  408d6a:	popf   
  408d6b:	inc    ebx
  408d6c:	or     DWORD PTR [edi+0x8b280c9],edi
  408d72:	pop    ebp
  408d73:	xchg   ecx,eax
  408d74:	bound  ebx,QWORD PTR [ebx]
  408d76:	fsubr  DWORD PTR ds:0x7e31c217
  408d7c:	sub    al,BYTE PTR [ebp-0x976e818]
  408d82:	lahf   
  408d83:	jp     0x408d36
  408d85:	inc    ebx
  408d86:	shl    DWORD PTR ss:[eax-0x2fce26f9],0x3d
  408d8e:	outs   dx,BYTE PTR ds:[esi]
  408d8f:	popf   
  408d90:	out    0x23,eax
  408d92:	fwait
  408d93:	or     edx,edx
  408d95:	mov    ah,0x50
  408d97:	xchg   ebx,eax
  408d98:	pushf  
  408d99:	out    dx,al
  408d9a:	out    dx,al
  408d9b:	push   edi
  408d9c:	push   edx
  408d9d:	xchg   esi,eax
  408d9e:	sub    DWORD PTR [ebp+0x1929c41d],ebx
  408da4:	pop    edi
  408da5:	bound  edx,QWORD PTR [edx]
  408da7:	in     eax,dx
  408da8:	xor    eax,0xce5523c9
  408dad:	push   es
  408dae:	add    DWORD PTR [edi],eax
  408db0:	retf   
  408db1:	sub    dh,cl
  408db3:	mov    al,0xee
  408db5:	cmp    al,0xd4
  408db7:	xchg   ebp,eax
  408db8:	es ds dec ebp
  408dbb:	cwde   
  408dbc:	int    0x73
  408dbe:	fiadd  DWORD PTR [edi]
  408dc0:	mov    eax,ds:0x76f356e6
  408dc5:	or     BYTE PTR [esi-0x4ab99130],dh
  408dcb:	mov    eax,0x334966b7
  408dd0:	mov    DWORD PTR [eax],edi
  408dd2:	fwait
  408dd3:	popf   
  408dd4:	addr16 test eax,0x2f544895
  408dda:	repnz fldcw WORD PTR [ebx+eiz*8]
  408dde:	push   0xe4f886c6
  408de3:	shl    BYTE PTR [esp+ebp*4-0x30],1
  408de7:	mov    gs,eax
  408de9:	mov    eax,0x55955ccc
  408dee:	pushf  
  408def:	lahf   
  408df0:	sbb    ebp,DWORD PTR [ecx-0x44]
  408df3:	daa    
  408df4:	inc    esp
  408df5:	sub    BYTE PTR [ebx],al
  408df7:	popf   
  408df8:	loope  0x408d9b
  408dfa:	jmp    0x3d55:0xc910a748
  408e01:	jg     0x408d85
  408e03:	and    eax,0x6f497c79
  408e08:	enter  0xfba3,0xc8
  408e0c:	sbb    esp,DWORD PTR [ecx+0x2f]
  408e0f:	pop    edi
  408e10:	retf   0xc990
  408e13:	sub    eax,0x7f58b3cc
  408e18:	(bad)  ds:0xca6bb312
  408e1e:	cmp    edx,ebp
  408e20:	bndldx bnd1,[ebp-0x52c84246]
  408e27:	jg     0x408e84
  408e29:	call   FWORD PTR [ebp+0x60]
  408e2c:	stc    
  408e2d:	inc    edx
  408e2e:	(bad)  
  408e2f:	ins    BYTE PTR es:[edi],dx
  408e30:	xchg   BYTE PTR [ecx],al
  408e32:	into   
  408e33:	ror    eax,1
  408e35:	clc    
  408e36:	inc    esi
  408e37:	in     al,0x58
  408e39:	push   ss
  408e3a:	std    
  408e3b:	mov    esi,DWORD PTR [ecx+0x688d484]
  408e41:	sbb    DWORD PTR [edx+0x1c],ecx
  408e44:	xlat   BYTE PTR ds:[ebx]
  408e45:	inc    ecx
  408e46:	push   eax
  408e47:	loop   0x408e57
  408e49:	pop    eax
  408e4a:	adc    DWORD PTR [ecx],esi
  408e4c:	sbb    al,0x79
  408e4e:	in     al,dx
  408e4f:	fsubr  QWORD PTR [ecx-0xf0c5ba]
  408e55:	and    cl,BYTE PTR [edi]
  408e57:	mov    DWORD PTR [eax+0x63],0x9e059e59
  408e5e:	xchg   BYTE PTR [edx+0x69490af5],dl
  408e64:	call   0xd527d9bf
  408e69:	jo     0x408eb1
  408e6b:	sbb    al,0x82
  408e6d:	xchg   esi,eax
  408e6e:	fidiv  WORD PTR ds:[ecx-0x35]
  408e72:	sub    eax,DWORD PTR [edx-0x12]
  408e75:	daa    
  408e76:	in     al,0x43
  408e78:	xor    eax,0x6bb0e55c
  408e7d:	(bad)  
  408e7e:	data16 or al,0x2c
  408e81:	fistp  QWORD PTR [ecx+eax*2+0x10121324]
  408e88:	nop
  408e89:	dec    ebp
  408e8a:	dec    esi
  408e8b:	bound  ecx,QWORD PTR [esi+ecx*1+0x23]
  408e8f:	aad    0x34
  408e91:	cmp    cl,BYTE PTR [edx-0xa]
  408e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e95:	rcl    edi,cl
  408e97:	fstp   TBYTE PTR [eax-0x3a]
  408e9a:	mov    dl,0x10
  408e9c:	out    dx,al
  408e9d:	mov    ebx,0x864017d7
  408ea2:	rol    DWORD PTR [eax+0x1a493860],cl
  408ea8:	loop   0x408ea1
  408eaa:	inc    eax
  408eab:	ret    0x2e4a
  408eae:	aad    0x1e
  408eb0:	sbb    ah,cl
  408eb2:	into   
  408eb3:	das    
  408eb4:	pushf  
  408eb5:	sbb    al,0x97
  408eb7:	das    
  408eb8:	neg    DWORD PTR [esi]
  408eba:	mov    al,0xb7
  408ebc:	jb     0x408f21
  408ebe:	cmp    cl,BYTE PTR [edx+0x2e63b8c0]
  408ec4:	xor    al,0xe3
  408ec6:	lahf   
  408ec7:	jne    0x408ee3
  408ec9:	cmp    ebx,esp
  408ecb:	inc    esp
  408ecc:	lods   al,BYTE PTR ds:[esi]
  408ecd:	outs   dx,DWORD PTR ds:[esi]
  408ece:	aam    0x6f
  408ed0:	ja     0x408f1d
  408ed2:	jae    0x408ef3
  408ed4:	icebp  
  408ed5:	sti    
  408ed6:	into   
  408ed7:	repnz mov ds:0xe162044b,eax
  408edd:	pop    eax
  408ede:	sbb    ebp,eax
  408ee0:	or     DWORD PTR [ecx-0xe],0x48
  408ee4:	jne    0x408e77
  408ee6:	call   0xfa50:0x3d3107e1
  408eed:	int3   
  408eee:	frstor [edx+eax*1]
  408ef1:	adc    edi,DWORD PTR [ebx+0x21]
  408ef4:	pop    ds
  408ef5:	in     al,dx
  408ef6:	jl     0x408f20
  408ef8:	sbb    BYTE PTR [edx-0x23],bl
  408efb:	aam    0xf6
  408efd:	dec    BYTE PTR [edi]
  408eff:	sub    al,BYTE PTR [edi+0x565a9fc4]
  408f05:	das    
  408f06:	ins    DWORD PTR es:[edi],dx
  408f07:	popf   
  408f08:	pop    ebp
  408f09:	mov    edi,0xff3e4a7
  408f0e:	popa   
  408f0f:	inc    eax
  408f10:	test   eax,0x6d4e826e
  408f15:	xor    eax,0xfbd4b863
  408f1a:	sar    DWORD PTR [edx],cl
  408f1c:	sub    dh,BYTE PTR [edi+0x1c]
  408f1f:	or     al,BYTE PTR [ebp-0x5e]
  408f22:	pop    ebx
  408f23:	mov    BYTE PTR [esi-0x6be9a0b1],dh
  408f29:	mov    ds:0x5030d71e,al
  408f2e:	push   ds
  408f2f:	into   
  408f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f31:	scas   eax,DWORD PTR es:[edi]
  408f32:	imul   esi,DWORD PTR ds:0x2f9ae80a,0xd1281d5f
  408f3c:	stc    
  408f3d:	adc    DWORD PTR [edx],ebp
  408f3f:	push   esi
  408f40:	sti    
  408f41:	lods   eax,DWORD PTR ds:[esi]
  408f42:	pop    ds
  408f43:	jecxz  0x408f4f
  408f45:	ins    DWORD PTR es:[edi],dx
  408f46:	jmp    0xce8a5e55
  408f4b:	(bad)  
  408f4c:	call   DWORD PTR [ebx-0x37]
  408f4f:	pop    es
  408f50:	mov    ebp,0x3bfd70fa
  408f55:	or     eax,0x6a63b9db
  408f5a:	mov    edx,DWORD PTR [ebx-0x4d16c808]
  408f60:	out    dx,al
  408f61:	push   ebp
  408f62:	jge    0x408fac
  408f64:	je     0x408ee7
  408f66:	mov    ecx,0xa39edcaf
  408f6b:	call   0x36a5740c
  408f70:	(bad)  
  408f71:	shl    bh,1
  408f73:	adc    ch,cl
  408f75:	mov    edi,0x9fb20cd6
  408f7a:	popf   
  408f7b:	gs jns 0x408f70
  408f7e:	out    dx,al
  408f7f:	bound  eax,QWORD PTR [eax]
  408f81:	js     0x408f23
  408f83:	scas   al,BYTE PTR es:[edi]
  408f84:	dec    eax
  408f85:	fimul  DWORD PTR [esi]
  408f87:	xlat   BYTE PTR ds:[ebx]
  408f88:	jp     0x408fde
  408f8a:	int    0x4b
  408f8c:	jmp    0xe949:0xa9552044
  408f93:	daa    
  408f94:	nop
  408f95:	push   edi
  408f96:	in     eax,dx
  408f97:	rcr    BYTE PTR [eax-0x3a],cl
  408f9a:	pop    ecx
  408f9b:	jl     0x408f6f
  408f9d:	jmp    0x408fa3
  408f9f:	push   edi
  408fa0:	test   eax,0xd7b6ccc0
  408fa5:	jmp    0x4620110
  408faa:	or     al,0x93
  408fac:	repnz imul ebx,DWORD PTR [edi],0xd47ac1dd
  408fb3:	jne    0x408fce
  408fb5:	inc    esp
  408fb6:	jo     0x408fb4
  408fb8:	mov    DWORD PTR [edx-0x68],0x624d428a
  408fbf:	sbb    al,0xbf
  408fc1:	aaa    
  408fc2:	xchg   ebx,eax
  408fc3:	loopne 0x408f95
  408fc5:	and    al,0xde
  408fc7:	cs mov ch,0x52
  408fca:	mov    dh,0x6c
  408fcc:	or     bh,ch
  408fce:	stos   BYTE PTR es:[edi],al
  408fcf:	or     ecx,esi
  408fd1:	add    DWORD PTR [ecx],ebp
  408fd3:	xchg   dl,bl
  408fd5:	in     eax,dx
  408fd6:	push   ss
  408fd7:	xchg   esp,eax
  408fd8:	dec    edi
  408fd9:	(bad)  
  408fda:	icebp  
  408fdb:	(bad)  
  408fdc:	and    edi,DWORD PTR [ebp+0x33]
  408fdf:	mov    eax,ds:0x8bf004bc
  408fe4:	mov    dh,0xd5
  408fe6:	mov    es,WORD PTR [edi+0x4c]
  408fe9:	imul   esi,DWORD PTR [edi],0xffffff97
  408fec:	icebp  
  408fed:	xor    BYTE PTR [edx],0x6
  408ff0:	add    eax,0xdc99ec3a
  408ff5:	nop
  408ff6:	mov    ah,0x57
  408ff8:	xlat   BYTE PTR ds:[ebx]
  408ff9:	xor    eax,0x8c9be4af
  408ffe:	out    0x7d,eax
  409000:	in     eax,dx
  409001:	add    ebp,DWORD PTR [esi+0x1c]
  409004:	rol    BYTE PTR [ecx],cl
  409006:	call   0xaacd39db
  40900b:	xlat   BYTE PTR ds:[ebx]
  40900c:	jg     0x409057
  40900e:	xchg   BYTE PTR [edx-0x48410100],al
  409014:	ss mov dh,0xc9
  409017:	dec    ecx
  409018:	rcr    DWORD PTR [edi],0xf5
  40901b:	xor    DWORD PTR [edx],ecx
  40901d:	into   
  40901e:	dec    edi
  40901f:	and    eax,DWORD PTR [ebp+0x59e2a2d4]
  409025:	jmp    0x40de:0xe33d9f5e
  40902c:	(bad)  
  40902d:	out    0xac,al
  40902f:	ds cs jmp 0x29d7567d
  409036:	mov    dh,0xdb
  409038:	dec    DWORD PTR [ebp+0x690f1d86]
  40903e:	jmp    0x8dbc:0x7d310777
  409045:	inc    ebx
  409046:	je     0x409040
  409048:	add    cl,BYTE PTR [edi+eiz*4-0x5b]
  40904c:	pop    ecx
  40904d:	sbb    DWORD PTR [esi-0x47],0xffffffcc
  409051:	hlt    
  409052:	sub    dh,ah
  409054:	jmp    eax
  409056:	push   0x601b3980
  40905b:	loopne 0x408ff5
  40905d:	imul   esi,DWORD PTR [ebx+0x763c23fc],0xdfa8e068
  409067:	push   ebx
  409068:	jmp    0x1d0f:0xa879676e
  40906f:	xor    ecx,edx
  409071:	dec    edx
  409072:	dec    eax
  409073:	inc    esp
  409074:	std    
  409075:	mov    al,0x9a
  409077:	xor    eax,0x3fe5238a
  40907c:	repz inc esi
  40907e:	rol    DWORD PTR [ebp-0x6],cl
  409081:	inc    eax
  409082:	and    ecx,edi
  409084:	xchg   ecx,eax
  409085:	fs (bad) 
  409087:	test   DWORD PTR [esp+edi*4],0xa65540e5
  40908e:	sub    BYTE PTR [ebp+edi*8-0x4a],dl
  409092:	bound  eax,QWORD PTR [eax+0x4ae9607]
  409098:	xor    ah,BYTE PTR [ebx-0x3b499b96]
  40909e:	sub    al,0xa2
  4090a0:	adc    esp,DWORD PTR [eax+0x518f1900]
  4090a6:	xchg   DWORD PTR [edi+0x59],esp
  4090a9:	mov    dh,0xbf
  4090ab:	jnp    0x409104
  4090ad:	inc    eax
  4090ae:	dec    eax
  4090af:	pop    ds
  4090b0:	dec    edx
  4090b1:	mov    cl,BYTE PTR [eax+0x64002b41]
  4090b7:	xchg   ebx,eax
  4090b8:	mov    cl,0x2b
  4090ba:	lea    edi,[esi+eiz*2-0x5f]
  4090be:	or     al,0xd3
  4090c0:	in     eax,dx
  4090c1:	fist   WORD PTR [edx+0x68007c85]
  4090c7:	out    dx,al
  4090c8:	int    0x3f
  4090ca:	jecxz  0x409111
  4090cc:	ret    
  4090cd:	push   cs
  4090ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090cf:	in     al,0x2e
  4090d1:	xor    al,0xa5
  4090d3:	sbb    DWORD PTR [esp+eax*4],0xe22a5af3
  4090da:	(bad)  
  4090db:	int3   
  4090dc:	or     DWORD PTR [ebp+esi*4-0x24],0x56
  4090e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e2:	inc    eax
  4090e3:	ret    0x73cc
  4090e6:	icebp  
  4090e7:	ds pop edx
  4090e9:	shr    DWORD PTR [edi-0x28],cl
  4090ec:	retf   0xf5c2
  4090ef:	les    ecx,FWORD PTR [ecx-0x6e]
  4090f2:	mov    eax,0xe0361e
  4090f7:	mov    ds:0xf148c2a4,eax
  4090fc:	adc    eax,0x67d29a5f
  409101:	ret    
  409102:	xor    edx,esi
  409104:	leave  
  409105:	je     0x409114
  409107:	out    0x45,eax
  409109:	adc    al,BYTE PTR [eax+0x7e724986]
  40910f:	pop    eax
  409110:	jl     0x4090c2
  409112:	leave  
  409113:	xor    eax,edi
  409115:	jns    0x409184
  409117:	xchg   esp,eax
  409118:	call   0x80e312a4
  40911d:	or     eax,esp
  40911f:	popa   
  409120:	and    eax,0x1c42568
  409125:	jmp    0xf651d7e2
  40912a:	jae    0x40910b
  40912c:	push   ds
  40912d:	or     eax,0x657c75cc
  409132:	inc    esp
  409133:	sub    dl,bh
  409135:	jmp    0x4091a9
  409137:	pop    edi
  409138:	jge    0x4090f9
  40913a:	inc    eax
  40913b:	lds    ebx,FWORD PTR [edx+0x3e]
  40913e:	pop    ecx
  40913f:	and    DWORD PTR [ebx],ebp
  409141:	xchg   ebp,eax
  409142:	loopne 0x409118
  409144:	adc    eax,0x45e182c8
  409149:	lds    esi,FWORD PTR [ebx+0x5]
  40914c:	dec    ecx
  40914d:	pop    edx
  40914e:	mov    ebp,0xf848e6be
  409153:	in     al,dx
  409154:	pop    edi
  409155:	add    BYTE PTR [edi],bh
  409157:	sub    BYTE PTR [ebp-0x11],ah
  40915a:	loop   0x40912f
  40915c:	inc    ebp
  40915d:	imul   edi,DWORD PTR [ebp+0x13fb7f54],0x3b
  409164:	push   esp
  409165:	dec    eax
  409166:	pop    eax
  409167:	inc    esi
  409168:	sbb    al,0x90
  40916a:	and    DWORD PTR [edi-0x102c921d],eax
  409170:	fidivr DWORD PTR [edi-0x2074ceac]
  409176:	fistp  DWORD PTR [eax+0x41]
  409179:	(bad)  
  40917a:	out    0x47,al
  40917c:	mov    cl,0xf2
  40917e:	inc    ebp
  40917f:	lods   al,BYTE PTR ds:[esi]
  409180:	xlat   BYTE PTR ds:[ebx]
  409181:	sbb    BYTE PTR [ebx],dh
  409183:	sahf   
  409184:	xlat   BYTE PTR ds:[ebx]
  409185:	or     eax,0x13a5fff1
  40918a:	popf   
  40918b:	or     sp,WORD PTR [edx-0x39eb781c]
  409192:	xchg   ecx,eax
  409193:	enter  0x2d3b,0x21
  409197:	xchg   edi,eax
  409198:	xor    eax,0x287a8453
  40919d:	sub    BYTE PTR [esp+esi*2-0xd05ef3d],ch
  4091a4:	xchg   esp,eax
  4091a5:	push   ebx
  4091a6:	retf   
  4091a7:	into   
  4091a8:	div    BYTE PTR [eax-0x6840a016]
  4091ae:	sbb    BYTE PTR [esi],bh
  4091b0:	in     eax,0xb0
  4091b2:	out    dx,eax
  4091b3:	stc    
  4091b4:	adc    BYTE PTR ds:0x59cb5eea,dh
  4091ba:	retf   
  4091bb:	dec    ebp
  4091bc:	adc    BYTE PTR [edi-0x24],al
  4091bf:	jno    0x40921d
  4091c1:	sahf   
  4091c2:	fs in  al,0x4a
  4091c5:	or     dh,bh
  4091c7:	pop    esp
  4091c8:	sti    
  4091c9:	jp     0x409197
  4091cb:	scas   eax,DWORD PTR es:[edi]
  4091cc:	cwde   
  4091cd:	ds jg  0x4091de
  4091d0:	fwait
  4091d1:	xor    bl,BYTE PTR [esi-0x38]
  4091d4:	gs stos DWORD PTR es:[edi],eax
  4091d6:	test   ebx,ecx
  4091d8:	mov    bl,0x5d
  4091da:	aam    0x94
  4091dc:	clc    
  4091dd:	add    al,0x97
  4091df:	call   0x417f:0xacfc2094
  4091e6:	mov    eax,ds:0x156a2202
  4091eb:	add    DWORD PTR [ecx],eax
  4091ed:	(bad)  
  4091ee:	mov    ecx,0xc06f33ca
  4091f3:	sar    BYTE PTR [esp+edi*4+0x1fb47b70],1
  4091fa:	adc    edx,ebx
  4091fc:	mov    ah,0xe7
  4091fe:	cmc    
  4091ff:	int    0x30
  409201:	repnz add DWORD PTR [esi+0x5209b6a3],ecx
  409208:	push   eax
  409209:	add    eax,DWORD PTR [ecx-0x2b8cca82]
  40920f:	addr16 dec edx
  409211:	mov    ebx,0x25531f87
  409216:	fnstenv [ecx-0x1fb9a270]
  40921c:	dec    eax
  40921d:	aam    0xc3
  40921f:	fucomp st(4)
  409221:	pop    ebp
  409222:	xor    edx,ecx
  409224:	push   ebp
  409225:	(bad)  
  409226:	xor    bh,dl
  409228:	or     BYTE PTR [ebx],bh
  40922a:	push   esp
  40922b:	xor    al,0xfd
  40922d:	enter  0xa04d,0x40
  409231:	mov    dh,0x47
  409233:	or     ch,BYTE PTR [esi-0x6d]
  409236:	aaa    
  409237:	das    
  409238:	cwde   
  409239:	push   ds
  40923a:	ins    DWORD PTR es:[edi],dx
  40923b:	xchg   edi,eax
  40923c:	jb     0x409215
  40923e:	xor    esi,0x37d29940
  409244:	pop    ebp
  409245:	call   0xc49c:0xacd49684
  40924c:	push   edi
  40924d:	adc    DWORD PTR [ebx],edi
  40924f:	loope  0x4091f3
  409251:	pop    es
  409252:	out    dx,al
  409253:	pop    ebx
  409254:	jmp    0xb7492f84
  409259:	inc    ebx
  40925a:	inc    esp
  40925b:	add    eax,0xd667819e
  409260:	mov    dh,0x1
  409262:	jae    0x40929c
  409264:	(bad)  
  409265:	arpl   WORD PTR [ecx+eax*2-0x32],bx
  409269:	popf   
  40926a:	or     eax,0xd5830cd7
  40926f:	cwde   
  409270:	mov    esp,0xbe0987a4
  409275:	sbb    eax,0x313f629b
  40927a:	mov    esi,0x790469bf
  40927f:	hlt    
  409280:	push   0xadc7adb1
  409285:	int    0x10
  409287:	adc    al,0x2f
  409289:	cld    
  40928a:	rcr    BYTE PTR [esi+0x28],cl
  40928d:	xor    dl,BYTE PTR [ebx-0x4abd46ae]
  409293:	js     0x4092a1
  409295:	pop    ebx
  409296:	enter  0xa451,0x71
  40929a:	psubw  mm2,QWORD PTR [ebx-0x74160eeb]
  4092a1:	xchg   BYTE PTR [edx-0x51445c12],dh
  4092a7:	sbb    DWORD PTR [edi+0x35],esi
  4092aa:	or     al,0x1d
  4092ac:	mov    ecx,0xe0c31646
  4092b1:	(bad)  
  4092b2:	daa    
  4092b3:	sbb    eax,0xeb738ffa
  4092b8:	out    0xcd,al
  4092ba:	xchg   ebx,eax
  4092bb:	or     eax,0x8337ba45
  4092c0:	push   eax
  4092c1:	dec    ebp
  4092c2:	xadd   BYTE PTR [ebx],ch
  4092c5:	popa   
  4092c6:	(bad)  
  4092c8:	inc    edx
  4092c9:	mov    esp,0xf3ce5bc9
  4092ce:	lea    esi,[edi+edx*8]
  4092d1:	out    0x4e,al
  4092d3:	pop    ds
  4092d4:	bound  eax,QWORD PTR [edx+0x2d]
  4092d7:	call   0x324c4553
  4092dc:	ds and ebx,esi
  4092df:	lods   eax,DWORD PTR ds:[esi]
  4092e0:	xchg   ecx,eax
  4092e1:	int    0x4b
  4092e3:	in     eax,0x1f
  4092e5:	and    ah,BYTE PTR [ebp+0xf663ed5]
  4092eb:	cwde   
  4092ec:	les    esp,FWORD PTR [edi+edi*1+0x7f0d438f]
  4092f3:	push   0x12717d5a
  4092f8:	jg     0x409367
  4092fa:	mov    ebp,0xdc3535c2
  4092ff:	sub    al,BYTE PTR [edx+0x7bd922c5]
  409305:	cmovno edi,DWORD PTR ds:0x9c469bd5
  40930c:	into   
  40930d:	ins    BYTE PTR es:[edi],dx
  40930e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40930f:	bound  ebp,QWORD PTR [eax]
  409311:	pushf  
  409312:	add    DWORD PTR [ecx-0x1d],ecx
  409315:	jo     0x4092e0
  409317:	int3   
  409318:	(bad)  
  40931a:	int3   
  40931b:	inc    eax
  40931c:	shr    eax,0x56
  40931f:	lock push cs
  409321:	aad    0x52
  409323:	fwait
  409324:	ror    DWORD PTR [edx+esi*8-0x64],cl
  409328:	and    DWORD PTR [edi+edi*1+0x5b],esp
  40932c:	inc    eax
  40932d:	sahf   
  40932e:	jecxz  0x40935a
  409330:	xlat   BYTE PTR ds:[ebx]
  409331:	lods   al,BYTE PTR ds:[esi]
  409332:	push   edx
  409333:	stc    
  409334:	push   es
  409335:	cmp    eax,0xc3bc33a9
  40933a:	mov    ebx,0x81a77546
  40933f:	daa    
  409340:	mov    dl,0x63
  409342:	aas    
  409343:	add    al,al
  409345:	leave  
  409346:	(bad)  
  409347:	in     al,dx
  409348:	outs   dx,DWORD PTR ds:[esi]
  409349:	inc    ebx
  40934a:	aaa    
  40934b:	nop
  40934c:	lods   eax,DWORD PTR ds:[si]
  40934e:	xor    DWORD PTR [edx-0x52a03367],edx
  409354:	and    al,0x1e
  409356:	pop    esp
  409357:	pop    edi
  409358:	retf   0x529e
  40935b:	sbb    al,0x5a
  40935d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40935e:	inc    edi
  40935f:	outs   dx,BYTE PTR ds:[esi]
  409360:	scas   al,BYTE PTR es:[edi]
  409361:	dec    edx
  409362:	inc    ebx
  409363:	mov    cl,0xe5
  409365:	mov    ch,0xd4
  409367:	int    0x65
  409369:	mov    edi,0xcd6a74e
  40936e:	and    cl,BYTE PTR [esi+0x75c85526]
  409374:	(bad)
  409377:	ins    BYTE PTR es:[edi],dx
  409378:	mov    esi,0xa5c13604
  40937d:	aam    0x7d
  40937f:	(bad)  
  409381:	jmp    0xd5f8c13c
  409386:	jnp    0x4093e3
  409388:	dec    ebp
  409389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40938a:	push   eax
  40938b:	std    
  40938c:	nop
  40938d:	jmp    0xb18a:0x59b9f004
  409394:	cmp    ah,BYTE PTR [ebx]
  409396:	xor    ah,BYTE PTR ds:0x7e2bd70
  40939c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40939d:	xchg   edi,eax
  40939e:	or     al,0x7e
  4093a0:	rcl    esp,0xd4
  4093a3:	pop    ds
  4093a4:	xchg   ebp,eax
  4093a5:	scas   eax,DWORD PTR es:[edi]
  4093a6:	sbb    eax,0xe9d4d878
  4093ab:	xor    ah,ch
  4093ad:	jne    0x409376
  4093af:	in     al,dx
  4093b0:	sti    
  4093b1:	push   0x3efce6b0
  4093b6:	and    ch,BYTE PTR [esi+0x489fdce5]
  4093bc:	shr    DWORD PTR ds:0x841a3bd9,1
  4093c2:	push   esp
  4093c3:	mov    al,0xa6
  4093c5:	mov    edi,0xfe3ff1e5
  4093ca:	jne    0x409385
  4093cc:	popa   
  4093cd:	xchg   esi,eax
  4093ce:	jae    0x40936a
  4093d0:	push   edi
  4093d1:	dec    ebp
  4093d2:	jp     0x4093d3
  4093d4:	bound  ebx,QWORD PTR [esi]
  4093d6:	mov    esi,DWORD PTR [ebx+0x3434be97]
  4093dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093dd:	hlt    
  4093de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093df:	ror    DWORD PTR [edi+0x5d],cl
  4093e2:	cmp    eax,ebp
  4093e4:	adc    eax,DWORD PTR [ebx-0x2]
  4093e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e8:	stos   BYTE PTR es:[edi],al
  4093e9:	cmp    eax,0xff5d1d83
  4093ee:	mov    ch,0x26
  4093f0:	loop   0x409420
  4093f2:	mov    cl,0x37
  4093f4:	and    ah,BYTE PTR ds:0x70de36d8
  4093fa:	mov    dh,0x29
  4093fc:	fs inc ecx
  4093fe:	out    0x7d,al
  409400:	or     DWORD PTR [ebp+0x54613585],esi
  409406:	or     BYTE PTR [edx],dh
  409408:	mov    ecx,0x2149cfc9
  40940d:	xor    DWORD PTR [ebx+ebp*8-0x324d9a55],esi
  409414:	sub    ecx,ebp
  409416:	lods   al,BYTE PTR ds:[esi]
  409417:	pop    eax
  409418:	jmp    0x40943e
  40941a:	out    dx,al
  40941b:	pop    edx
  40941c:	mov    al,ds:0x74bdac67
  409421:	outs   dx,BYTE PTR ds:[esi]
  409422:	mov    cl,0xcf
  409424:	and    ecx,DWORD PTR [ecx+0x7bb3d286]
  40942a:	retf   
  40942b:	repnz shr ch,0x8d
  40942f:	or     DWORD PTR [esi+0x4078e8c0],esi
  409435:	inc    esp
  409436:	hlt    
  409437:	(bad)  
  409438:	ja     0x40942b
  40943a:	ret    
  40943b:	test   BYTE PTR [edi+ebx*8],cl
  40943e:	addr16 push cs
  409440:	sbb    BYTE PTR [edx+0x7a],dl
  409443:	jmp    0xa9f5:0x90780b3d
  40944a:	push   edx
  40944b:	mov    BYTE PTR [eax+0x72],bl
  40944e:	sahf   
  40944f:	push   ebp
  409450:	adc    bl,0x86
  409453:	mov    eax,DWORD PTR [eax]
  409455:	dec    edx
  409456:	xor    eax,0x9acbf3a6
  40945b:	ror    bl,0xe0
  40945e:	shl    DWORD PTR [edx-0x31acba5d],0xca
  409465:	jecxz  0x409483
  409467:	dec    edx
  409468:	int    0x68
  40946a:	aas    
  40946b:	jge    0x40943a
  40946d:	jno    0x40941f
  40946f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409470:	mov    al,0xea
  409472:	inc    ecx
  409473:	xor    DWORD PTR [ebp-0x64],esp
  409476:	jae    0x409464
  409478:	jmp    0x9176:0xd070c42
  40947f:	jbe    0x40941c
  409481:	fdivr  st(4),st
  409483:	mov    ds:0xcc8bee9f,eax
  409488:	popa   
  409489:	into   
  40948a:	sbb    ch,dh
  40948c:	push   esi
  40948d:	jae    0x40946a
  40948f:	mov    cl,BYTE PTR [edx]
  409491:	pushf  
  409492:	popf   
  409493:	jge    0x4094b8
  409495:	dec    ebx
  409496:	fbld   TBYTE PTR [ebx-0x61ef3241]
  40949c:	test   al,0x4a
  40949e:	adc    eax,0x7de41c2b
  4094a3:	lods   eax,DWORD PTR ds:[esi]
  4094a4:	test   DWORD PTR [eax],ebp
  4094a6:	and    eax,0x6abfb97e
  4094ab:	fdiv   DWORD PTR [ecx+eax*2+0x10]
  4094af:	mov    dh,0x4c
  4094b1:	idiv   BYTE PTR [eax-0x6dba970c]
  4094b7:	jo     0x4094d0
  4094b9:	sub    al,0xa0
  4094bb:	inc    esi
  4094bc:	sbb    DWORD PTR [ebp-0x635e8104],esi
  4094c2:	cdq    
  4094c3:	jg     0x409492
  4094c5:	inc    ebx
  4094c6:	pop    esi
  4094c7:	stc    
  4094c8:	clc    
  4094c9:	pusha  
  4094ca:	mov    edx,0x757da04f
  4094cf:	jnp    0x4094a7
  4094d1:	loopne 0x409499
  4094d3:	push   0x27316ca9
  4094d8:	dec    edx
  4094d9:	dec    ecx
  4094da:	jg     0x409460
  4094dc:	or     esi,DWORD PTR fs:[edi-0x49e0635d]
  4094e3:	or     ebp,esi
  4094e5:	pop    ecx
  4094e6:	adc    dl,al
  4094e8:	push   edi
  4094e9:	xor    BYTE PTR [edi-0x35],ch
  4094ec:	xchg   ebx,eax
  4094ed:	mul    ch
  4094ef:	dec    edx
  4094f0:	add    ecx,DWORD PTR ds:[ecx+edi*2-0x14b8e1d7]
  4094f8:	xchg   edx,eax
  4094f9:	push   edi
  4094fa:	iret   
  4094fb:	or     DWORD PTR [ecx+edi*1-0x58064ff2],ebp
  409502:	pop    ebx
  409503:	cmp    eax,0x6561413d
  409508:	sbb    eax,edi
  40950a:	jp     0x40952a
  40950c:	push   esp
  40950d:	xchg   ebx,eax
  40950e:	mov    eax,0xb8d6dc07
  409513:	sbb    al,0x56
  409515:	es xor eax,0x19736ac9
  40951b:	sar    DWORD PTR [ebp-0x24],cl
  40951e:	or     al,0xc0
  409520:	sbb    BYTE PTR ds:0xa935f5e,0xb7
  409527:	xor    BYTE PTR [ecx-0x24871645],dh
  40952d:	pop    es
  40952e:	xchg   BYTE PTR [ebx+0x7c],al
  409531:	cmp    edi,DWORD PTR [eax-0x6b16127]
  409537:	push   0x2b4572db
  40953c:	pop    esp
  40953d:	ds hlt 
  40953f:	aam    0x49
  409541:	jne    0x40950d
  409543:	and    ebp,DWORD PTR [ecx]
  409545:	pop    ecx
  409546:	mov    ebx,0x1bd029d
  40954b:	jae    0x4095ad
  40954d:	push   ebx
  40954e:	adc    ebx,DWORD PTR [ecx+0x6975c6fd]
  409554:	fisubr WORD PTR [esi]
  409556:	adc    DWORD PTR [ebx-0x77],ebp
  409559:	jle    0x409595
  40955b:	imul   di,WORD PTR [edx],0xdf40
  409560:	jmp    0x4094eb
  409562:	xlat   BYTE PTR ds:[ebx]
  409563:	xchg   esi,eax
  409564:	push   esp
  409565:	ret    
  409566:	pop    ecx
  409567:	or     eax,0xd38776f2
  40956c:	add    DWORD PTR [ecx+edx*1+0x528ee8df],eax
  409573:	mov    edi,0xc4d9ae0e
  409578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409579:	mov    cl,dl
  40957b:	ss mov eax,0x4c36fd68
  409581:	loop   0x4095ff
  409583:	jne    0x409558
  409585:	cld    
  409586:	jbe    0x409515
  409588:	outs   dx,BYTE PTR ds:[esi]
  409589:	test   DWORD PTR [esi],edx
  40958b:	cmp    BYTE PTR [eax-0x70],bl
  40958e:	add    al,0xc
  409590:	or     ah,BYTE PTR [ebx-0x3e]
  409593:	adc    al,0xd4
  409595:	loopne 0x4095b5
  409597:	pusha  
  409598:	in     eax,0x91
  40959a:	in     eax,dx
  40959b:	sahf   
  40959c:	jecxz  0x4095fe
  40959e:	add    ecx,ebp
  4095a0:	dec    eax
  4095a1:	cmp    eax,0xcfb0ef9d
  4095a6:	xor    al,0x21
  4095a8:	int    0x76
  4095aa:	in     al,0x9d
  4095ac:	das    
  4095ad:	clc    
  4095ae:	add    BYTE PTR [eax-0x26619a73],0x92
  4095b5:	(bad)  
  4095b6:	out    dx,eax
  4095b7:	inc    ecx
  4095b8:	dec    edx
  4095b9:	push   ss
  4095ba:	xor    al,0x9a
  4095bc:	pop    ebx
  4095bd:	mov    bl,0x3f
  4095bf:	pop    ss
  4095c0:	test   al,0xc9
  4095c2:	push   es
  4095c3:	and    eax,0x13596cc7
  4095c8:	lods   eax,DWORD PTR ds:[esi]
  4095c9:	cli    
  4095ca:	adc    BYTE PTR [esi-0x6],cl
  4095cd:	pop    edi
  4095ce:	std    
  4095cf:	mov    ch,0x50
  4095d1:	mov    ecx,DWORD PTR [edi+ebp*2+0x6c308cb1]
  4095d8:	dec    eax
  4095d9:	mov    bh,BYTE PTR fs:[ebx-0x67]
  4095dd:	lahf   
  4095de:	jnp    0x40963d
  4095e0:	fistp  WORD PTR [ecx-0x42f74d65]
  4095e6:	test   eax,0xfc6c1345
  4095eb:	xor    al,0x5c
  4095ed:	xor    al,0xdd
  4095ef:	scas   eax,DWORD PTR es:[edi]
  4095f0:	cmp    eax,0xcf33b57c
  4095f5:	fs scas al,BYTE PTR es:[edi]
  4095f7:	push   ss
  4095f8:	and    dl,BYTE PTR [edx]
  4095fa:	xor    eax,0x9232c95b
  4095ff:	push   ds
  409600:	in     al,0x83
  409602:	(bad)  
  409603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409604:	mov    ch,0xbd
  409606:	add    ecx,DWORD PTR [eax]
  409608:	out    0x53,al
  40960a:	sbb    al,0x8d
  40960c:	fdivr  DWORD PTR [ecx]
  40960e:	push   esp
  40960f:	popw   ss
  409611:	and    BYTE PTR [edx+edx*2],0xc9
  409615:	loop   0x409640
  409617:	in     al,dx
  409618:	in     al,0x3c
  40961a:	pop    esi
  40961b:	add    DWORD PTR ds:0xc113b11f,edx
  409621:	cmp    eax,0x95421513
  409626:	push   esi
  409627:	fucom  st(1)
  409629:	cmp    esi,DWORD PTR [ecx-0x27702586]
  40962f:	stc    
  409630:	or     eax,0x504962cf
  409635:	mov    al,ds:0x526016a2
  40963a:	mov    edx,0xb8b7440e
  40963f:	and    dh,BYTE PTR [eax+0x2d2c1422]
  409645:	int    0x67
  409647:	and    dl,BYTE PTR [ecx-0x9]
  40964a:	mov    al,0x54
  40964c:	jbe    0x40964b
  40964e:	pop    edx
  40964f:	xchg   BYTE PTR cs:[esi+eiz*8],al
  409653:	jbe    0x40963a
  409655:	ror    BYTE PTR [esi-0x6445ee55],1
  40965b:	sbb    BYTE PTR [ecx-0x54],dh
  40965e:	add    esi,DWORD PTR [esi]
  409660:	adc    eax,0x151fd917
  409665:	or     bh,BYTE PTR [esp+edi*4+0x17]
  409669:	or     al,0x95
  40966b:	sub    al,0xc
  40966d:	cmp    al,0xd5
  40966f:	repz mov cl,BYTE PTR [ebx+0x0]
  409673:	daa    
  409674:	scas   eax,DWORD PTR es:[edi]
  409675:	lds    ebx,FWORD PTR [ebp-0x6d]
  409678:	fdiv   QWORD PTR [ebx+0x3ad32a5d]
  40967e:	push   edi
  40967f:	xor    bh,BYTE PTR [edx+0x5a]
  409682:	push   ds
  409683:	aam    0x21
  409685:	dec    BYTE PTR [edi+eiz*4-0x5e862d3]
  40968c:	loope  0x4096a7
  40968e:	leave  
  40968f:	shl    BYTE PTR [ebp-0x17bd999b],0x1f
  409696:	push   ebx
  409697:	xchg   DWORD PTR [ebp-0x75a386ab],ebp
  40969d:	cmp    DWORD PTR [esi],edi
  40969f:	(bad)  
  4096a0:	hlt    
  4096a1:	addr16 xchg ebp,eax
  4096a3:	push   cs
  4096a4:	or     ecx,DWORD PTR [edx+edi*1-0x69]
  4096a8:	mov    al,ds:0xc8d6d3d6
  4096ad:	push   0xffffffa5
  4096af:	outs   dx,BYTE PTR ds:[esi]
  4096b0:	aam    0x82
  4096b2:	mov    ds:0xe9d3f640,al
  4096b7:	jle    0x40968a
  4096b9:	aaa    
  4096ba:	xchg   esi,eax
  4096bb:	xchg   esp,eax
  4096bc:	aaa    
  4096bd:	inc    ebx
  4096be:	jnp    0x409720
  4096c0:	(bad)  
  4096c2:	cdq    
  4096c3:	jbe    0x4096f4
  4096c5:	sbb    DWORD PTR [ecx-0x71],ebp
  4096c8:	hlt    
  4096c9:	mov    esp,0x7cde74be
  4096ce:	call   0xb9e2fab3
  4096d3:	push   0x45
  4096d5:	mov    edi,0xb6b25bff
  4096da:	sti    
  4096db:	mov    DWORD PTR [edi+0x5043fe5],ebx
  4096e1:	das    
  4096e2:	push   ebx
  4096e3:	test   al,0xde
  4096e5:	jecxz  0x4096c4
  4096e7:	push   edi
  4096e8:	int3   
  4096e9:	inc    esi
  4096ea:	leave  
  4096eb:	lds    ebp,FWORD PTR [esi+0xf]
  4096ee:	test   DWORD PTR [ebx],0x75a4c7bf
  4096f4:	jge    0x40976c
  4096f6:	rol    DWORD PTR [edx],cl
  4096f8:	jbe    0x4096e2
  4096fa:	daa    
  4096fb:	xchg   edi,eax
  4096fc:	sub    eax,esi
  4096fe:	dec    ecx
  4096ff:	mov    al,ds:0xda0fd472
  409704:	dec    ecx
  409705:	mov    DWORD PTR [esi-0x32902304],ebx
  40970b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40970c:	and    ah,BYTE PTR [ecx]
  40970e:	sbb    ecx,DWORD PTR [eax]
  409710:	sub    al,0x3c
  409712:	pop    edx
  409713:	fwait
  409714:	mov    cl,ah
  409716:	mov    edx,0xc4eb9b9b
  40971b:	jmp    0x409722
  40971d:	test   al,0xc1
  40971f:	les    ebx,FWORD PTR [edi+0x76]
  409722:	lock dec ebx
  409724:	xchg   esp,eax
  409725:	cmp    dl,BYTE PTR [ebx]
  409727:	es je  0x4096f1
  40972a:	adc    eax,0x6767d13
  40972f:	popf   
  409730:	mov    ebp,0xd8bdb535
  409735:	or     edi,ebp
  409737:	test   al,0xb
  409739:	outs   dx,BYTE PTR ds:[esi]
  40973a:	sbb    edi,esp
  40973c:	(bad)  
  40973d:	mov    cl,0x5
  40973f:	jns    0x409732
  409741:	in     eax,dx
  409742:	sub    BYTE PTR [eax],cl
  409744:	add    BYTE PTR [ecx],al
  409746:	pop    es
  409747:	dec    ebx
  409748:	ins    BYTE PTR es:[edi],dx
  409749:	mov    esi,0xcbf29b9d
  40974e:	out    0x7f,eax
  409750:	jne    0x4096e0
  409752:	dec    edi
  409753:	xchg   edi,eax
  409754:	mov    esp,0xbf239f8d
  409759:	ficom  DWORD PTR [ebx+0x15]
  40975c:	div    DWORD PTR [ebp-0x7d]
  40975f:	mov    edx,0xb9b8e7b2
  409764:	or     ebx,ebx
  409766:	sub    bl,al
  409768:	inc    ecx
  409769:	push   ebx
  40976a:	inc    edi
  40976b:	daa    
  40976c:	dec    ebp
  40976d:	outs   dx,DWORD PTR ds:[esi]
  40976e:	pop    ss
  40976f:	and    ebp,0x71ecc0e
  409775:	fistp  WORD PTR [ebp+esi*4+0x40]
  409779:	pop    es
  40977a:	jno    0x40975f
  40977c:	shr    dh,1
  40977e:	or     ah,BYTE PTR cs:[ebx-0x2c]
  409782:	(bad)  
  409783:	popf   
  409784:	add    al,BYTE PTR [edi+0xaa62539]
  40978a:	dec    esi
  40978b:	cmp    ebx,DWORD PTR [esi-0x3fdf33a1]
  409791:	cmp    DWORD PTR ds:0x2c21e828,esi
  409797:	dec    esp
  409798:	xchg   ebx,eax
  409799:	xor    al,0x8
  40979b:	ds popf 
  40979d:	cmp    esi,ebp
  40979f:	(bad)  
  4097a0:	(bad)  
  4097a1:	jmp    0xed5abbe2
  4097a6:	cmp    al,0x1e
  4097a8:	call   0x53a2762d
  4097ad:	arpl   WORD PTR [esi],ax
  4097af:	pop    esp
  4097b0:	jae    0x409773
  4097b2:	dec    ebp
  4097b3:	iret   
  4097b4:	mov    es,WORD PTR [ebx+eax*4-0xdff8b3f]
  4097bb:	push   0xffffffe6
  4097bd:	sub    dl,BYTE PTR [ebx]
  4097bf:	leave  
  4097c0:	adc    bl,dl
  4097c2:	xlat   BYTE PTR ds:[ebx]
  4097c3:	popa   
  4097c4:	pop    eax
  4097c5:	jp     0x40975c
  4097c7:	shr    DWORD PTR [esi-0x57],1
  4097ca:	jle    0x4097cb
  4097cc:	inc    ebx
  4097cd:	call   0x4fc5:0xa32de92f
  4097d4:	sub    ah,bh
  4097d6:	inc    ebp
  4097d7:	out    0xb,eax
  4097d9:	mov    bh,0xe9
  4097db:	xchg   edi,eax
  4097dc:	mov    dl,BYTE PTR [edi-0x5b0a799f]
  4097e2:	das    
  4097e3:	es (bad) 
  4097e5:	jg     0x4097d9
  4097e7:	leave  
  4097e8:	fisttp DWORD PTR [ebp+0x775a05e4]
  4097ee:	jp     0x409780
  4097f0:	stc    
  4097f1:	pop    esi
  4097f2:	adc    DWORD PTR [ecx],edi
  4097f4:	push   ebx
  4097f5:	jne    0x409815
  4097f7:	rcl    BYTE PTR [edi+eiz*4-0x1d],0xc3
  4097fc:	dec    esi
  4097fd:	ret    
  4097fe:	jmp    0x409843
  409800:	push   ds
  409801:	ins    BYTE PTR es:[edi],dx
  409802:	push   eax
  409803:	mov    dl,0x4d
  409805:	int3   
  409806:	sbb    eax,0xbf117098
  40980b:	xchg   ecx,eax
  40980c:	ret    0x815e
  40980f:	jecxz  0x4097ab
  409811:	sti    
  409812:	fdivr  DWORD PTR [edi]
  409814:	in     eax,0x80
  409816:	xchg   DWORD PTR [ebp-0x1f230c5e],eax
  40981c:	push   es
  40981d:	xor    DWORD PTR [ebx+ebx*2+0x307cf764],eax
  409824:	cmp    DWORD PTR [ecx-0x39],ebp
  409827:	sub    ebp,DWORD PTR [ebx]
  409829:	xchg   edi,eax
  40982a:	imul   edi,DWORD PTR [edx],0xffffffef
  40982d:	or     BYTE PTR [esi-0x74],bl
  409830:	and    BYTE PTR [edi],al
  409832:	add    dl,cl
  409834:	stos   DWORD PTR es:[edi],eax
  409835:	aad    0x1b
  409837:	mov    ch,0xaf
  409839:	pop    ecx
  40983a:	jae    0x4097c7
  40983c:	mov    dh,0x5
  40983e:	xor    edx,eax
  409840:	fistp  QWORD PTR [ebp-0x15]
  409843:	shl    al,0x81
  409846:	(bad)  
  409847:	int    0xac
  409849:	sbb    eax,0x4e8a5464
  40984e:	ds sub eax,0xca4cb1e9
  409854:	jnp    0x40983c
  409856:	out    0xd7,al
  409858:	jns    0x409846
  40985a:	cmp    ah,BYTE PTR [edx-0x32418eea]
  409860:	aaa    
  409861:	enter  0x9098,0xaf
  409865:	popf   
  409866:	outs   dx,BYTE PTR ds:[esi]
  409867:	jbe    0x409834
  409869:	inc    ebx
  40986a:	jg     0x409825
  40986c:	ret    
  40986d:	fnstsw WORD PTR [ebx+eiz*8+0x1b]
  409871:	ja     0x40987e
  409873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409875:	fwait
  409876:	(bad)  
  409877:	test   dl,ch
  409879:	lds    eax,FWORD PTR [esi-0x49f2612]
  40987f:	test   al,ah
  409881:	test   DWORD PTR [edx-0x2263f0a5],ebp
  409887:	xor    eax,0x80564e4e
  40988c:	push   edi
  40988d:	iret   
  40988e:	in     eax,dx
  40988f:	and    bl,BYTE PTR [ebp+0x60]
  409892:	pop    esp
  409893:	cmp    al,0xbe
  409895:	stos   BYTE PTR es:[edi],al
  409896:	mov    al,ds:0x59e7aa7b
  40989b:	jl     0x40983f
  40989d:	cmp    bh,BYTE PTR [eax-0x7d]
  4098a0:	test   BYTE PTR [ebp-0x1a],bl
  4098a3:	dec    esp
  4098a4:	xchg   esp,eax
  4098a5:	test   BYTE PTR [ecx-0x72],dl
  4098a8:	loopne 0x409900
  4098aa:	or     al,0x3
  4098ac:	pop    ebx
  4098ad:	retf   
  4098ae:	push   edx
  4098af:	dec    ebp
  4098b0:	xor    ebp,0xc7b0b5da
  4098b6:	cmp    eax,0x8bafdc11
  4098bb:	mov    dh,0x32
  4098bd:	xchg   DWORD PTR [ebx-0x79],eax
  4098c0:	sbb    eax,0xc8e7e24e
  4098c5:	xchg   ebx,eax
  4098c6:	sbb    eax,0xd511b92e
  4098cb:	neg    bl
  4098cd:	dec    BYTE PTR [esi]
  4098cf:	loopne 0x409896
  4098d1:	jecxz  0x4098f5
  4098d3:	sti    
  4098d4:	in     eax,dx
  4098d5:	repz jmp 0xbd19bca2
  4098db:	(bad)  
  4098dc:	aas    
  4098dd:	push   eax
  4098de:	cmp    bh,dh
  4098e0:	dec    ebx
  4098e1:	sbb    edx,DWORD PTR [esi-0x3d]
  4098e4:	pop    es
  4098e5:	mov    esp,0xcd564bfd
  4098ea:	mov    bl,0x2e
  4098ec:	std    
  4098ed:	in     eax,0xc3
  4098ef:	sub    ebp,0xa3f0a396
  4098f5:	clc    
  4098f6:	cdq    
  4098f7:	pushf  
  4098f8:	jne    0x4098fb
  4098fa:	iret   
  4098fb:	mov    dh,0x4
  4098fd:	mov    bh,bl
  4098ff:	scas   al,BYTE PTR es:[edi]
  409900:	pop    ebp
  409901:	mov    cl,0x24
  409903:	sti    
  409904:	cli    
  409905:	test   DWORD PTR [eax],ecx
  409907:	push   edx
  409908:	je     0x4098b2
  40990a:	or     BYTE PTR ds:0xe3a90a59,ah
  409910:	ds loope 0x409905
  409913:	jo     0x409911
  409915:	jmp    0xfa35a2db
  40991a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40991b:	fiadd  WORD PTR [esi-0x3676c6a0]
  409921:	(bad)  
  409922:	mov    ds:0x24597c93,al
  409927:	shr    ebx,cl
  409929:	mov    ecx,0x84559643
  40992e:	cs aas 
  409930:	jns    0x409955
  409932:	pop    ss
  409933:	sbb    ebp,DWORD PTR [eax+eax*1+0x4]
  409937:	push   0xffffffc1
  409939:	pop    esi
  40993a:	cmp    esi,DWORD PTR [eax+eiz*8]
  40993d:	jbe    0x4098ed
  40993f:	xchg   ecx,eax
  409940:	sbb    eax,0xb04f788d
  409945:	jno    0x409923
  409947:	mov    bl,0x86
  409949:	inc    DWORD PTR [edx]
  40994b:	ins    DWORD PTR es:[edi],dx
  40994c:	shr    BYTE PTR [eax+0x5e12309c],cl
  409952:	stc    
  409953:	adc    bl,BYTE PTR [edx-0x16f59e0a]
  409959:	cmp    eax,0x5ded770b
  40995e:	sar    DWORD PTR [ecx+0x7ffd267f],cl
  409964:	and    DWORD PTR [edx],0x4e
  409967:	bound  eax,QWORD PTR [ecx+0x5a13e02c]
  40996d:	jb     0x4098f9
  40996f:	sbb    eax,0x7f63ea57
  409974:	jge    0x40999c
  409976:	mov    ah,cl
  409978:	les    eax,FWORD PTR [ebp+0x78]
  40997b:	shl    bl,0x2b
  40997e:	icebp  
  40997f:	iret   
  409980:	mov    ebx,0xeb95bd05
  409985:	xchg   ebp,eax
  409986:	xor    BYTE PTR [edx+ebp*2-0x62],dl
  40998a:	hlt    
  40998b:	mov    esp,0x81bd4027
  409990:	ret    0xf96b
  409993:	xor    ah,ah
  409995:	ins    DWORD PTR es:[edi],dx
  409996:	mov    DWORD PTR [ebp-0x2b],ebx
  409999:	test   eax,0x591ca6c0
  40999e:	ror    DWORD PTR [ebx],cl
  4099a0:	dec    esp
  4099a1:	cmp    ah,BYTE PTR [eax-0x21]
  4099a4:	pop    eax
  4099a5:	fldenv [ebx+eax*8-0x108c4873]
  4099ac:	js     0x40999c
  4099ae:	jo     0x409979
  4099b0:	sbb    ecx,DWORD PTR [edx+eax*2-0x6da8b26e]
  4099b7:	int3   
  4099b8:	call   0x4acf:0xaf00eef4
  4099bf:	rcl    BYTE PTR [esi+0x4c],1
  4099c2:	popf   
  4099c3:	dec    eax
  4099c4:	popa   
  4099c5:	mov    cl,BYTE PTR [edi-0x32]
  4099c8:	mov    cl,0xb9
  4099ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099cb:	pop    DWORD PTR [edi+eiz*4+0x31]
  4099cf:	in     eax,0xbc
  4099d1:	bound  eax,QWORD PTR [edi-0x66ca65]
  4099d7:	mul    BYTE PTR [edi-0x1799881d]
  4099dd:	and    edi,0x24df20f1
  4099e3:	lods   eax,DWORD PTR ds:[esi]
  4099e4:	push   ebp
  4099e5:	or     al,0x96
  4099e7:	call   0xbf08e3ae
  4099ec:	mov    al,0xf8
  4099ee:	test   eax,0x4b0b8494
  4099f3:	popa   
  4099f4:	pop    ecx
  4099f5:	cmc    
  4099f6:	imul   DWORD PTR [esi+0x5f]
  4099f9:	pmuludq mm2,mm0
  4099fc:	fisubr WORD PTR [edi+0x37d24e8a]
  409a02:	push   ss
  409a03:	fwait
  409a04:	mov    dl,0xd3
  409a06:	pusha  
  409a07:	push   edx
  409a08:	jns    0x409a42
  409a0a:	mov    ds:0xfda15d78,al
  409a0f:	push   cs
  409a10:	cmp    cl,BYTE PTR [edx-0x6ea6b1b2]
  409a16:	das    
  409a17:	cmp    al,0xd
  409a19:	ret    0xc19f
  409a1c:	fistp  WORD PTR [edx+ebx*8-0x1a13f009]
  409a23:	outs   dx,DWORD PTR ds:[esi]
  409a24:	push   DWORD PTR [edx-0x56ba7cdd]
  409a2a:	cmp    dl,bh
  409a2c:	mov    eax,ds:0x1249ad8e
  409a31:	push   ds
  409a32:	loope  0x409a88
  409a34:	(bad)  
  409a35:	pop    ecx
  409a36:	fwait
  409a37:	jl     0x409a8f
  409a39:	iret   
  409a3a:	scas   al,BYTE PTR es:[edi]
  409a3b:	or     al,0x9b
  409a3d:	ret    
  409a3e:	mov    bh,0x3a
  409a40:	(bad)  
  409a41:	cmc    
  409a42:	cmp    DWORD PTR [edx-0x5a6954de],0x97e22cfd
  409a4c:	sbb    dl,BYTE PTR [eax+esi*8]
  409a4f:	jne    0x409aca
  409a51:	sub    ebp,edx
  409a53:	(bad)  
  409a54:	sub    BYTE PTR [edi+0x2a],bh
  409a57:	ficom  WORD PTR [esi-0x11]
  409a5a:	mov    ebx,0x3f94d883
  409a5f:	cld    
  409a60:	and    dh,bh
  409a62:	inc    esi
  409a63:	inc    eax
  409a64:	cmp    DWORD PTR [ebx+ebp*8-0x256f2dc],0x76
  409a6c:	dec    esp
  409a6d:	inc    esi
  409a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a6f:	mov    WORD PTR [ebx+0xd],?
  409a72:	sub    bl,BYTE PTR [eax-0x6a]
  409a75:	mov    eax,ds:0xdaa3eb57
  409a7a:	fs and ebx,eax
  409a7d:	mov    dl,0x67
  409a7f:	push   0xffffffcc
  409a81:	sub    eax,0xaa6a79e6
  409a86:	aad    0xc0
  409a88:	cli    
  409a89:	sbb    al,0xd4
  409a8b:	dec    esp
  409a8c:	jge    0x409a99
  409a8e:	xchg   ebx,eax
  409a8f:	into   
  409a90:	loope  0x409a4b
  409a92:	(bad)  
  409a93:	mov    al,0x48
  409a95:	repz push ebp
  409a97:	and    BYTE PTR [edi+0x76],dl
  409a9a:	sbb    al,0xa
  409a9c:	fwait
  409a9d:	not    DWORD PTR [esi-0x38]
  409aa0:	inc    edi
  409aa1:	je     0x409a52
  409aa3:	adc    bl,BYTE PTR [edi]
  409aa5:	push   esi
  409aa6:	ins    DWORD PTR es:[edi],dx
  409aa7:	lds    ebx,FWORD PTR [edx-0x7eeff21]
  409aad:	repnz faddp st(3),st
  409ab0:	mov    eax,0x57a84da9
  409ab5:	or     DWORD PTR [ecx],edx
  409ab7:	inc    esp
  409ab8:	xchg   esp,eax
  409ab9:	clc    
  409aba:	mov    eax,0x7d07f04a
  409abf:	pop    edi
  409ac0:	adc    al,0xb9
  409ac2:	ins    BYTE PTR es:[edi],dx
  409ac3:	scas   eax,DWORD PTR es:[edi]
  409ac4:	mov    al,0x97
  409ac6:	pop    ebp
  409ac7:	jecxz  0x409acd
  409ac9:	xor    ch,bh
  409acb:	jbe    0x409b12
  409acd:	cmp    eax,0x74cc0968
  409ad2:	and    eax,0x140bc6c3
  409ad7:	push   0x63b1168f
  409adc:	add    eax,0x69853c84
  409ae1:	bound  edx,QWORD PTR [ebp-0x642a4a23]
  409ae7:	popa   
  409ae8:	add    al,0x5f
  409aea:	scas   al,BYTE PTR es:[edi]
  409aeb:	and    bl,BYTE PTR [esi-0xfe5ca54]
  409af1:	mov    cl,0xaa
  409af3:	adc    BYTE PTR [ecx+0x6bb63504],0x8
  409afa:	jmp    0x1baf:0xd595c14f
  409b01:	mov    bh,BYTE PTR [esi]
  409b03:	iret   
  409b04:	xor    al,0xb8
  409b06:	pop    es
  409b07:	repnz add ebp,ebp
  409b0a:	pop    esi
  409b0b:	rcl    DWORD PTR [edi],cl
  409b0d:	je     0x409b49
  409b0f:	(bad)  
  409b10:	or     esi,0xffffffe6
  409b13:	es fcom st(1)
  409b16:	mov    WORD PTR ds:0xb533ec12,ss
  409b1c:	fadd   st,st(5)
  409b1e:	sub    BYTE PTR [ebp+0x45c00892],dh
  409b24:	sar    BYTE PTR [esi+0xf],0x56
  409b28:	data16 inc BYTE PTR [eax]
  409b2b:	test   al,0x90
  409b2d:	cmp    ecx,DWORD PTR [esi+0x38]
  409b30:	stos   DWORD PTR es:[edi],eax
  409b31:	or     BYTE PTR [ebx],0x30
  409b34:	cs hlt 
  409b36:	sbb    DWORD PTR [edx+ebp*2],ebp
  409b39:	int3   
  409b3a:	std    
  409b3b:	mov    bh,0xdb
  409b3d:	cwde   
  409b3e:	sbb    ebx,ecx
  409b40:	in     eax,0x4d
  409b42:	in     al,dx
  409b43:	out    0x90,al
  409b45:	cmp    DWORD PTR [ebx+0x73],0x22
  409b49:	outs   dx,BYTE PTR ds:[esi]
  409b4a:	add    ah,al
  409b4c:	ret    0xde4a
  409b4f:	dec    eax
  409b50:	and    ch,al
  409b52:	and    eax,0x853f59db
  409b57:	fistp  WORD PTR [ebp-0x45]
  409b5a:	cmp    DWORD PTR [esi],eax
  409b5c:	ret    0x940c
  409b5f:	in     al,0x63
  409b61:	fisubr DWORD PTR [ebx]
  409b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b64:	pop    ss
  409b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b66:	sub    BYTE PTR [ebp+eiz*1+0x49ef257f],dh
  409b6d:	and    BYTE PTR [eax+0x5b],bl
  409b70:	hlt    
  409b71:	pop    DWORD PTR [esi]
  409b73:	push   esp
  409b74:	dec    ebx
  409b75:	scas   ax,WORD PTR es:[edi]
  409b77:	inc    esp
  409b78:	jb     0x409b15
  409b7a:	mov    ecx,0xcf9d82bf
  409b7f:	lock and al,0x3e
  409b82:	mov    ebx,0x152922d4
  409b87:	out    dx,al
  409b88:	(bad)  
  409b89:	pushf  
  409b8a:	jmp    FWORD PTR fs:[edi+0x1d040106]
  409b91:	(bad)  
  409b92:	jl     0x409b9e
  409b94:	sbb    BYTE PTR ds:0x25ed77f3,ah
  409b9a:	push   esp
  409b9b:	jg     0x409b8b
  409b9d:	push   ebp
  409b9e:	sub    ebp,DWORD PTR [ebx+0x7c]
  409ba1:	test   BYTE PTR [ebp+0x83c2ee8],bl
  409ba7:	in     eax,0x6c
  409ba9:	ins    DWORD PTR es:[edi],dx
  409baa:	ficom  WORD PTR [esi]
  409bac:	mov    al,0x1e
  409bae:	gs jo  0x409bf3
  409bb1:	ret    0xe70a
  409bb4:	xchg   esi,eax
  409bb5:	fst    QWORD PTR [ebx-0x67]
  409bb8:	mov    bl,0x62
  409bba:	in     al,dx
  409bbb:	ret    0x22cb
  409bbe:	push   ebx
  409bbf:	inc    ebp
  409bc0:	shl    BYTE PTR [edx+0x28],1
  409bc3:	outs   dx,DWORD PTR ds:[esi]
  409bc4:	call   0xc28f28ac
  409bc9:	pop    es
  409bca:	int    0xc2
  409bcc:	icebp  
  409bcd:	int3   
  409bce:	sub    al,0x4c
  409bd0:	or     eax,0x137ac602
  409bd5:	mov    ecx,0xdd3ad7f8
  409bda:	ret    0xed89
  409bdd:	add    ch,BYTE PTR [ebp-0x7acd8e9b]
  409be3:	xor    DWORD PTR [ecx+0x6c],edx
  409be6:	cmp    al,0x83
  409be8:	stos   DWORD PTR es:[edi],eax
  409be9:	lahf   
  409bea:	pusha  
  409beb:	sub    ch,BYTE PTR [ecx-0x17e63e98]
  409bf1:	xor    DWORD PTR [edi+ebx*1-0x6a774cf7],0xf776a496
  409bfc:	loope  0x409c2f
  409bfe:	jp     0x409b93
  409c00:	retf   
  409c01:	adc    eax,0x4751253e
  409c06:	mov    dh,0x8d
  409c08:	push   es
  409c09:	or     esp,esi
  409c0b:	cmp    al,0x22
  409c0d:	rol    dh,1
  409c0f:	sub    ch,BYTE PTR [edi+0x1e]
  409c12:	fimul  DWORD PTR [ebx+0x10d23f17]
  409c18:	hlt    
  409c19:	mov    cs,ebx
  409c1b:	les    cx,DWORD PTR [edi-0x3e]
  409c1f:	pop    ebx
  409c20:	mov    cl,0xd8
  409c22:	pusha  
  409c23:	inc    ecx
  409c24:	pop    eax
  409c25:	sub    ecx,DWORD PTR [edx-0x28]
  409c28:	add    BYTE PTR [edi],ah
  409c2a:	hlt    
  409c2b:	cdq    
  409c2c:	mov    dh,0x0
  409c2e:	adc    BYTE PTR [ebp-0x6f],al
  409c31:	repnz sbb BYTE PTR ds:0xb6522f7f,dl
  409c38:	inc    esi
  409c39:	mov    esi,0x3db0072a
  409c3e:	in     al,dx
  409c3f:	shl    DWORD PTR [ebp-0x58143bd4],cl
  409c45:	sub    eax,0xddec52c6
  409c4a:	jmp    0x5b72:0x837c1727
  409c51:	mov    edi,0x8fe0d825
  409c56:	lds    edx,FWORD PTR [edi+0x81937dc]
  409c5c:	pop    esi
  409c5d:	adc    dl,BYTE PTR [edx+0x63b94cce]
  409c63:	mov    esi,0x17b22719
  409c68:	sub    DWORD PTR [ebx],ebx
  409c6a:	cmp    BYTE PTR [edi],0x52
  409c6d:	cmp    BYTE PTR [ebx-0x16],dh
  409c70:	xchg   esi,eax
  409c71:	jo     0x409c8e
  409c73:	sahf   
  409c74:	mov    BYTE PTR [esp+esi*2],dl
  409c77:	repnz pop ecx
  409c79:	sub    DWORD PTR [eax+0x7e],0x58
  409c7d:	call   0x1e77:0x295a1ae1
  409c84:	cmp    al,BYTE PTR [esi+ebx*4+0x74b1a7b7]
  409c8b:	push   esi
  409c8c:	call   0xc193:0x1f923d17
  409c93:	int3   
  409c94:	addr16 sahf 
  409c96:	rol    bl,cl
  409c98:	inc    ecx
  409c99:	cs aad 0x43
  409c9c:	lock hlt 
  409c9e:	(bad)  
  409c9f:	dec    esi
  409ca0:	pop    esi
  409ca1:	add    al,0x3b
  409ca3:	loopne 0x409cf8
  409ca5:	inc    ebp
  409ca6:	inc    esi
  409ca7:	push   ds
  409ca8:	mov    eax,ecx
  409caa:	push   ebx
  409cab:	retf   0x2e0a
  409cae:	loope  0x409d1a
  409cb0:	pushfw 
  409cb2:	cli    
  409cb3:	sbb    cl,BYTE PTR ss:[edi]
  409cb6:	dec    ebp
  409cb7:	pop    ss
  409cb8:	aaa    
  409cb9:	into   
  409cba:	out    0xb2,eax
  409cbc:	in     eax,dx
  409cbd:	sbb    bl,BYTE PTR ds:0x5aafea17
  409cc3:	push   ebx
  409cc4:	sahf   
  409cc5:	cwde   
  409cc6:	lahf   
  409cc7:	lods   eax,DWORD PTR ds:[esi]
  409cc8:	aas    
  409cc9:	cs sahf 
  409ccb:	xor    eax,0x7d067fa
  409cd0:	lods   eax,DWORD PTR ds:[esi]
  409cd1:	outs   dx,DWORD PTR ds:[esi]
  409cd2:	dec    ecx
  409cd3:	pop    ebp
  409cd4:	jae    0x409c98
  409cd6:	mov    ebx,0xac48b07a
  409cdb:	lds    ecx,FWORD PTR [ecx+0x76]
  409cde:	mov    ch,0xdb
  409ce0:	retf   0x1fc5
  409ce3:	sbb    BYTE PTR [ecx+0x60],dh
  409ce6:	jmp    0x643f:0x87a9c049
  409ced:	mov    dl,0xff
  409cef:	icebp  
  409cf0:	sbb    esi,DWORD PTR ds:0x27cc561b
  409cf6:	jl     0x409c8d
  409cf8:	mov    edx,0x68043ac9
  409cfd:	cmp    bh,BYTE PTR [eax]
  409cff:	push   ss
  409d00:	xchg   ebp,eax
  409d01:	mov    ebx,ebx
  409d03:	shl    BYTE PTR [edi+0x338979d9],cl
  409d09:	cmp    ecx,DWORD PTR ds:0x40480572
  409d0f:	mov    dl,BYTE PTR [ebx-0x3d8c3da8]
  409d15:	adc    al,BYTE PTR [eax]
  409d17:	mov    eax,0xc4ab87db
  409d1c:	xchg   ebx,eax
  409d1d:	ss nop
  409d1f:	popf   
  409d20:	call   0x611bf0a4
  409d25:	in     al,0xea
  409d27:	pop    ebx
  409d28:	nop
  409d29:	sbb    eax,0x162ab219
  409d2e:	data16 lods al,BYTE PTR ds:[esi]
  409d30:	cdq    
  409d31:	xor    eax,0x1c32a27
  409d36:	xchg   ebp,eax
  409d37:	mov    bl,0x23
  409d39:	std    
  409d3a:	not    DWORD PTR [ecx+0x58]
  409d3d:	mov    al,ds:0x19f49958
  409d42:	les    ebx,FWORD PTR [esi-0x2e826ea6]
  409d48:	data16 scas al,BYTE PTR es:[edi]
  409d4a:	in     eax,0x9e
  409d4c:	push   ebx
  409d4d:	jecxz  0x409d5b
  409d4f:	shl    DWORD PTR [edi],1
  409d51:	cli    
  409d52:	andps  xmm2,XMMWORD PTR [esi]
  409d55:	cmp    al,0xd3
  409d57:	xchg   edx,eax
  409d58:	cmc    
  409d59:	xchg   BYTE PTR [esp+ebp*4-0x4a5dd0e0],al
  409d60:	push   ecx
  409d61:	mov    al,0x31
  409d63:	jge    0x409d61
  409d65:	cmp    dh,BYTE PTR [ecx+eiz*8]
  409d68:	aas    
  409d69:	pop    ds
  409d6a:	retf   
  409d6b:	pop    ebp
  409d6c:	popa   
  409d6d:	leave  
  409d6e:	into   
  409d6f:	adc    al,0xea
  409d71:	not    DWORD PTR [esi-0x46e22cbf]
  409d77:	cmp    al,BYTE PTR [edi+eax*2]
  409d7a:	stos   BYTE PTR es:[edi],al
  409d7b:	mov    al,BYTE PTR [edi]
  409d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d7e:	jp     0x409d45
  409d80:	jae    0x409d25
  409d82:	push   ebp
  409d83:	inc    edx
  409d84:	pop    esi
  409d85:	or     DWORD PTR [ebx],0x3c
  409d88:	sbb    eax,0x69da4
  409d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8e:	jmp    0x409dcb
  409d90:	and    al,0xf5
  409d92:	in     al,0xf6
  409d94:	jno    0x409d74
  409d96:	add    ah,ch
  409d98:	out    0x3c,al
  409d9a:	cli    
  409d9b:	sahf   
  409d9c:	dec    edi
  409d9d:	jmp    0xc3bb:0xb106cbc8
  409da4:	mov    cl,0x4d
  409da6:	addr16 sub al,0xe
  409da9:	fnstsw WORD PTR [ebp+0x2d]
  409dac:	retf   
  409dad:	loop   0x409d63
  409daf:	shr    dh,1
  409db1:	push   ds
  409db2:	cmc    
  409db3:	retf   
  409db4:	cmp    dh,0xc3
  409db7:	pop    edx
  409db8:	stc    
  409db9:	and    DWORD PTR [edx-0x18],ebp
  409dbc:	mov    cl,0x67
  409dbe:	imul   edx,ebp,0xffffffb9
  409dc1:	pop    edi
  409dc2:	mov    ch,0x74
  409dc4:	ins    DWORD PTR es:[edi],dx
  409dc5:	ret    
  409dc6:	sbb    dh,BYTE PTR ds:0x7e701ae3
  409dcc:	pop    ss
  409dcd:	jmp    FWORD PTR [ebx-0x5a]
  409dd0:	sub    ebp,DWORD PTR [edx]
  409dd2:	jbe    0x409d80
  409dd4:	inc    edx
  409dd5:	(bad)  
  409dd6:	xor    edx,DWORD PTR [ebp-0xe]
  409dd9:	inc    edi
  409dda:	mov    al,0xd0
  409ddc:	rol    DWORD PTR [edi+0xfcac0dc],1
  409de2:	xchg   ecx,eax
  409de3:	adc    DWORD PTR [esi-0x23e3bca8],ebx
  409de9:	popa   
  409dea:	popa   
  409deb:	cld    
  409dec:	cmp    ebp,DWORD PTR [esi]
  409dee:	(bad)  
  409def:	push   0xffffffee
  409df1:	in     ax,0xc9
  409df4:	adc    DWORD PTR [ecx],ebx
  409df6:	(bad)  
  409df7:	mov    gs,WORD PTR [ebp-0x59]
  409dfa:	imul   DWORD PTR [edx-0x7b]
  409dfd:	retf   
  409dfe:	(bad)  [esi]
  409e00:	and    ebx,esi
  409e02:	add    al,dl
  409e04:	call   0xdd13:0x2f5c5b28
  409e0b:	inc    DWORD PTR [ecx-0x1e]
  409e0e:	js     0x409e75
  409e10:	push   eax
  409e11:	cli    
  409e12:	rol    DWORD PTR [ecx-0x2bd1a1eb],0x65
  409e19:	jae    0x409da1
  409e1b:	pop    es
  409e1c:	and    al,0x14
  409e1e:	data16 lahf 
  409e20:	inc    esp
  409e21:	cmp    DWORD PTR [ebx-0x53ae1cd1],ebx
  409e27:	jnp    0x409dda
  409e29:	push   ecx
  409e2a:	icebp  
  409e2b:	mov    cl,0x5
  409e2d:	pop    ss
  409e2e:	cmp    DWORD PTR [eax+0x41],esp
  409e31:	xor    DWORD PTR [edx+eiz*8+0x18],0xc75b70ce
  409e39:	in     al,dx
  409e3a:	push   ecx
  409e3b:	mov    ebp,0xcf0d37bc
  409e40:	or     BYTE PTR [ebx+0x3e],0x37
  409e44:	arpl   WORD PTR [esi-0x60eacb95],bx
  409e4a:	inc    esp
  409e4b:	inc    ecx
  409e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e4d:	mov    dh,0x4a
  409e4f:	pop    ecx
  409e50:	and    BYTE PTR [edx-0x1c],cl
  409e53:	inc    ecx
  409e54:	inc    edi
  409e55:	or     bl,ch
  409e57:	jecxz  0x409deb
  409e59:	sbb    BYTE PTR [ebp-0x64],ah
  409e5c:	add    al,0x8e
  409e5e:	sbb    BYTE PTR [ebx-0x26],cl
  409e61:	sbb    DWORD PTR [ebx+0x1a],eax
  409e64:	outs   dx,DWORD PTR ds:[esi]
  409e65:	cmp    BYTE PTR [ecx+ebx*8-0x14],al
  409e69:	mov    ah,0xd
  409e6b:	dec    edx
  409e6c:	jg     0x409e58
  409e6e:	pushf  
  409e6f:	arpl   WORD PTR [edi-0x19d69613],dx
  409e75:	leave  
  409e76:	icebp  
  409e77:	pextrw ebx,mm1,0x8d
  409e7b:	mov    edi,0x40185e83
  409e80:	fdivrp st(7),st
  409e82:	push   ecx
  409e83:	jmp    0x409eda
  409e85:	dec    esp
  409e86:	lods   al,BYTE PTR ds:[esi]
  409e87:	setp   BYTE PTR [eax+0x5deb6b3a]
  409e8e:	xchg   ecx,eax
  409e8f:	icebp  
  409e90:	ins    BYTE PTR es:[edi],dx
  409e91:	jns    0x409ed1
  409e93:	cld    
  409e94:	sub    DWORD PTR [esi-0x45],eax
  409e97:	cmp    BYTE PTR [ebp+edi*1-0x4a],al
  409e9b:	fisttp WORD PTR [edi+0x154d038]
  409ea1:	jl     0x409e87
  409ea3:	jmp    0xc275:0x8e79376e
  409eaa:	jno    0x409ee5
  409eac:	xchg   esi,eax
  409ead:	xor    DWORD PTR [eax+edx*1],0xffffffc8
  409eb1:	test   eax,0x51e66898
  409eb6:	nop
  409eb7:	push   0xffffffc9
  409eb9:	int3   
  409eba:	scas   eax,DWORD PTR es:[edi]
  409ebb:	cld    
  409ebc:	div    bl
  409ebe:	lds    ebp,FWORD PTR [eax-0x27dd6024]
  409ec4:	shl    edx,1
  409ec6:	cmp    al,0xe7
  409ec8:	inc    edi
  409ec9:	mov    esi,DWORD PTR [ecx+0x2c]
  409ecc:	add    bh,dh
  409ece:	push   cs
  409ecf:	ja     0x409e90
  409ed1:	jle    0x409ee4
  409ed3:	or     DWORD PTR ds:0xf30a3d20,ebx
  409ed9:	pop    es
  409eda:	test   BYTE PTR [ebx],bl
  409edc:	mov    ebp,0xb957f249
  409ee1:	xchg   ebx,eax
  409ee2:	pop    ecx
  409ee3:	jecxz  0x409e95
  409ee5:	and    DWORD PTR [eax-0x17679119],ecx
  409eeb:	je     0x409f08
  409eed:	imul   DWORD PTR [edx+0x46ec7d2e]
  409ef3:	clc    
  409ef4:	loop   0x409e81
  409ef6:	mov    al,ds:0x2107edb1
  409efb:	push   esi
  409efc:	or     edx,DWORD PTR [esi-0x27]
  409eff:	push   ss
  409f00:	mov    eax,ds:0xd461353a
  409f05:	call   0xc426da99
  409f0a:	ret    0xda24
  409f0d:	mov    ch,0xe9
  409f0f:	xchg   edi,eax
  409f10:	or     DWORD PTR [esi-0x7b],0x2c79ddc
  409f17:	jb     0x409f17
  409f19:	inc    edx
  409f1a:	cwde   
  409f1b:	jle    0x409ece
  409f1d:	jmp    0xe571:0xdb010ccf
  409f24:	adc    eax,0x16cefde3
  409f29:	add    al,0x1e
  409f2b:	(bad)  
  409f2c:	mov    ebp,0x7ecdad4
  409f31:	int3   
  409f32:	pop    esp
  409f33:	je     0x409f59
  409f35:	mov    ebx,0xbf6604c9
  409f3a:	push   eax
  409f3b:	aas    
  409f3c:	add    ebx,esp
  409f3e:	sub    BYTE PTR [ebx+edx*1+0x76],dl
  409f42:	mov    ebp,0x5110678c
  409f47:	pop    ebp
  409f48:	mov    ?,WORD PTR ds:0x18968cb0
  409f4e:	xchg   DWORD PTR [edx],eax
  409f50:	iret   
  409f51:	xchg   ecx,eax
  409f52:	test   al,0x19
  409f54:	aad    0x21
  409f56:	or     eax,edi
  409f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f59:	add    BYTE PTR [edi+0x16],dl
  409f5c:	call   0xfdc5:0x8ab72731
  409f63:	imul   BYTE PTR [edi-0x2e]
  409f66:	xor    al,0xfe
  409f68:	mov    eax,ds:0xb0257685
  409f6d:	push   edx
  409f6e:	retf   
  409f6f:	jmp    0x4885db88
  409f74:	inc    esp
  409f75:	jmp    0xb65e:0x2975b496
  409f7c:	aam    0xc4
  409f7e:	mov    esp,0x4109f33b
  409f83:	lahf   
  409f84:	cmp    BYTE PTR [eax-0x7add56e1],cl
  409f8a:	imul   ebp,DWORD PTR [esi+0x6e],0xffffffe8
  409f8e:	or     esi,eax
  409f90:	stos   BYTE PTR es:[edi],al
  409f91:	loop   0x409f9d
  409f93:	mov    edx,0xb0c1bfb9
  409f98:	pop    eax
  409f99:	retf   
  409f9a:	mov    ch,0x37
  409f9c:	adc    al,0x1
  409f9e:	jmp    0xbfb852aa
  409fa3:	aad    0xd8
  409fa5:	mov    bl,BYTE PTR [edi+0x79]
  409fa8:	dec    edi
  409fa9:	loop   0x409fd4
  409fab:	retf   0x9cc7
  409fae:	xor    al,0xed
  409fb0:	adc    eax,0x72a19798
  409fb5:	aad    0xfe
  409fb7:	mov    esi,0x6e58e24e
  409fbc:	xchg   dl,bh
  409fbe:	jb     0x409fa6
  409fc0:	call   0x3f811507
  409fc5:	outs   dx,BYTE PTR ds:[esi]
  409fc6:	fdiv   QWORD PTR [ebx+esi*4+0x67]
  409fca:	pusha  
  409fcb:	jne    0x40a02d
  409fcd:	and    ebx,edi
  409fcf:	rcr    BYTE PTR [ecx],1
  409fd1:	xchg   BYTE PTR [edx],dh
  409fd3:	iret   
  409fd4:	in     eax,0x60
  409fd6:	popa   
  409fd7:	je     0x409fc6
  409fd9:	jp     0x40a052
  409fdb:	mov    al,ds:0x7120fe0a
  409fe0:	dec    ebp
  409fe1:	cmp    BYTE PTR [ecx],0x92
  409fe4:	sub    bl,BYTE PTR [eax+0x769bcd4b]
  409fea:	and    edi,DWORD PTR [ebp-0xb5a0f7c]
  409ff0:	das    
  409ff1:	sbb    al,0xbc
  409ff3:	cld    
  409ff4:	inc    esp
  409ff5:	(bad)  
  409ff6:	pop    ecx
  409ff7:	dec    edx
  409ff8:	xchg   edi,eax
  409ff9:	push   edi
  409ffa:	xor    cl,BYTE PTR [esi+0x377dce60]
  40a000:	xor    ch,BYTE PTR [ebx]
  40a002:	loop   0x409f87
  40a004:	sub    dl,BYTE PTR [eax]
  40a006:	cmp    edx,DWORD PTR [esi-0x69]
  40a009:	cli    
  40a00a:	pop    edi
  40a00b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a00d:	mov    al,ds:0xcfc2b77c
  40a012:	sbb    al,0xc
  40a014:	and    esi,esp
  40a016:	or     edx,DWORD PTR [edx]
  40a018:	jl     0x40a071
  40a01a:	jmp    0x40a05d
  40a01c:	pop    DWORD PTR [edx+eiz*1-0x12331ab2]
  40a023:	into   
  40a024:	inc    ecx
  40a025:	add    BYTE PTR [esi*1-0x24e30010],bh
  40a02c:	call   0x1389:0x65e0972b
  40a033:	mov    ebx,0x33e5c50f
  40a038:	xchg   esi,eax
  40a039:	sub    ch,ah
  40a03b:	jae    0x40a063
  40a03d:	ret    0x4617
  40a040:	pop    eax
  40a041:	scas   eax,DWORD PTR es:[edi]
  40a042:	rol    ah,1
  40a044:	call   0xbc93a76b
  40a049:	mov    ds:0xbbdfe80c,al
  40a04e:	xchg   ebp,eax
  40a04f:	out    0xac,eax
  40a051:	sar    DWORD PTR [ebx+0x440484a6],0x16
  40a058:	jecxz  0x40a054
  40a05a:	mov    esp,edi
  40a05c:	jmp    0x40a075
  40a05e:	jb     0x40a05a
  40a060:	push   esp
  40a061:	ret    
  40a062:	neg    edx
  40a064:	jbe    0x40a0d2
  40a066:	cs push ax
  40a069:	adc    eax,0x19a49e9a
  40a06e:	pop    eax
  40a06f:	jns    0x40a094
  40a071:	hlt    
  40a072:	mov    ah,0x34
  40a074:	inc    ebp
  40a075:	xchg   ecx,eax
  40a076:	adc    al,0x86
  40a078:	(bad)  
  40a079:	cmp    al,0x86
  40a07b:	mov    ecx,DWORD PTR [ebx]
  40a07d:	pushf  
  40a07e:	sub    eax,0x1ec940e3
  40a083:	(bad)  
  40a084:	nop
  40a085:	mov    ds:0xa7d1bc66,eax
  40a08a:	add    eax,0x38a709a2
  40a08f:	test   eax,0xfa7ae456
  40a094:	rcl    DWORD PTR [esi],0x3c
  40a097:	sar    edi,0xe8
  40a09a:	imul   ecx,DWORD PTR [ebp+0x21],0x10
  40a09e:	inc    eax
  40a09f:	cmc    
  40a0a0:	adc    eax,DWORD PTR [edx-0x46]
  40a0a3:	pop    esp
  40a0a4:	jle    0x40a048
  40a0a6:	jb     0x40a088
  40a0a8:	loop   0x40a110
  40a0aa:	xor    BYTE PTR [edi-0x77],0xf
  40a0ae:	(bad)  
  40a0af:	push   ecx
  40a0b0:	mov    ah,0x21
  40a0b2:	jle    0x40a121
  40a0b4:	mov    dh,0x65
  40a0b6:	sahf   
  40a0b7:	daa    
  40a0b8:	ret    0xd1d2
  40a0bb:	in     eax,dx
  40a0bc:	hlt    
  40a0bd:	inc    esp
  40a0be:	xor    BYTE PTR [edi],dl
  40a0c0:	mov    esp,DWORD PTR [edx]
  40a0c2:	inc    esp
  40a0c3:	push   ss
  40a0c4:	inc    eax
  40a0c5:	aas    
  40a0c6:	xlat   BYTE PTR ds:[ebx]
  40a0c7:	and    BYTE PTR [bx+di-0x18],bl
  40a0cb:	fucomip st,st(4)
  40a0cd:	shl    ch,0x63
  40a0d0:	and    BYTE PTR [edx+0x2f5aa450],cl
  40a0d6:	imul   eax,DWORD PTR [ecx-0x6dd22720],0x2dcc4c6e
  40a0e0:	or     esi,ebp
  40a0e2:	iret   
  40a0e3:	std    
  40a0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0e5:	xchg   ecx,eax
  40a0e6:	and    dh,BYTE PTR [ebx-0x2f]
  40a0e9:	ss pop eax
  40a0eb:	cmp    eax,DWORD PTR [ebx]
  40a0ed:	fild   QWORD PTR [edx+eax*1]
  40a0f0:	pusha  
  40a0f1:	jge    0x40a115
  40a0f3:	dec    ebx
  40a0f4:	jle    0x40a094
  40a0f6:	add    DWORD PTR [edx-0xb9f55ff],ecx
  40a0fc:	jbe    0x40a130
  40a0fe:	or     BYTE PTR [esi],ah
  40a100:	arpl   WORD PTR [eax-0x32],bp
  40a103:	pop    esp
  40a104:	mov    al,0x6d
  40a106:	and    BYTE PTR [ecx+0x704035e8],0x77
  40a10d:	cmp    al,0x4f
  40a10f:	sbb    ecx,ecx
  40a111:	push   0x9acfc49d
  40a116:	xor    al,0x39
  40a118:	mov    al,ds:0x200d6815
  40a11d:	mov    edx,0x10d58ac7
  40a122:	or     bl,dl
  40a124:	fwait
  40a125:	popf   
  40a126:	or     dl,ch
  40a128:	fwait
  40a129:	xchg   BYTE PTR [ebx+0x938e292],dl
  40a12f:	test   eax,0xd023c4af
  40a134:	inc    ebx
  40a135:	inc    edx
  40a136:	cli    
  40a137:	xchg   esp,eax
  40a138:	jl     0x40a0ef
  40a13a:	shl    BYTE PTR [ecx+0x2f60bcba],0x22
  40a141:	and    BYTE PTR [eax+0x51],ch
  40a144:	imul   esi,DWORD PTR [ecx+0x4ce0bcaf],0xe6209cea
  40a14e:	jae    0x40a145
  40a150:	or     ebx,ebp
  40a152:	rcr    DWORD PTR [edx*2-0x1d68c98e],cl
  40a159:	xchg   esp,eax
  40a15a:	(bad)  
  40a15b:	xchg   esi,eax
  40a15c:	mov    BYTE PTR [ecx],0x52
  40a15f:	sbb    al,0xe0
  40a161:	xchg   ebx,eax
  40a162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a163:	jnp    0x40a128
  40a165:	push   esi
  40a166:	mov    eax,ds:0x7d2a5ff4
  40a16b:	and    edi,DWORD PTR [ecx+0x25918bf0]
  40a171:	add    bl,al
  40a173:	pop    ds
  40a174:	sbb    DWORD PTR [esi+0x36],esp
  40a177:	bound  esp,QWORD PTR [edx+0x75]
  40a17a:	jbe    0x40a183
  40a17c:	xchg   esi,eax
  40a17d:	imul   edx,DWORD PTR [ecx],0x3193a832
  40a183:	push   0xdb0a3008
  40a188:	repz out 0xd3,eax
  40a18b:	test   eax,0x51bd4cc5
  40a190:	loop   0x40a1a7
  40a192:	jl     0x40a1df
  40a194:	push   es
  40a195:	inc    edx
  40a196:	in     al,dx
  40a197:	or     bp,WORD PTR [ebx-0x36]
  40a19b:	cmp    ebp,0x89b559ee
  40a1a1:	push   edi
  40a1a2:	push   ecx
  40a1a3:	mov    edx,0xa0e38bab
  40a1a8:	xchg   esp,eax
  40a1a9:	push   ecx
  40a1aa:	rcl    BYTE PTR [edx-0x44],1
  40a1ad:	sub    al,0xfd
  40a1af:	shl    DWORD PTR [edi+0x3d6f83de],0xd5
  40a1b6:	icebp  
  40a1b7:	arpl   WORD PTR [esi-0x6f],sp
  40a1ba:	dec    eax
  40a1bb:	pop    ebx
  40a1bc:	mov    ah,0x6a
  40a1be:	push   0x712192ef
  40a1c3:	sbb    eax,DWORD PTR [edi+0x3b]
  40a1c6:	push   es
  40a1c7:	mov    eax,0xad1011a8
  40a1cc:	push   ebp
  40a1cd:	add    eax,0x6fef8100
  40a1d2:	mov    ds:0x97b062b,eax
  40a1d7:	(bad)  
  40a1d8:	call   0xd8995b10
  40a1dd:	sbb    eax,0xcf0b5203
  40a1e2:	inc    esi
  40a1e3:	lds    ebp,FWORD PTR [edx+0x7fbc2347]
  40a1e9:	push   ebx
  40a1ea:	mov    bl,0x53
  40a1ec:	xchg   edi,eax
  40a1ed:	xchg   ebx,eax
  40a1ee:	push   0x66383a64
  40a1f3:	xchg   dl,bh
  40a1f5:	inc    ebx
  40a1f6:	clc    
  40a1f7:	adc    al,BYTE PTR [eax]
  40a1f9:	add    DWORD PTR [ecx-0x34dd0a37],ebp
  40a1ff:	pushf  
  40a200:	or     ch,al
  40a202:	push   es
  40a203:	stos   BYTE PTR es:[di],al
  40a205:	(bad)  
  40a207:	push   es
  40a208:	cmp    DWORD PTR [ecx+0x2bfe142b],ecx
  40a20e:	mov    al,ds:0x8acf34ac
  40a213:	pop    edi
  40a214:	mov    bl,0xb2
  40a216:	lahf   
  40a217:	sbb    DWORD PTR [edx-0x34],edx
  40a21a:	jge    0x40a1e4
  40a21c:	aam    0x65
  40a21e:	test   DWORD PTR ds:0xd6475be,esp
  40a224:	dec    ebx
  40a225:	sub    bh,dl
  40a227:	or     BYTE PTR [eax+0x1a],bh
  40a22a:	sbb    BYTE PTR [edx],bh
  40a22c:	xor    eax,0xf34387b7
  40a231:	jae    0x40a29f
  40a233:	aas    
  40a234:	mov    dl,0xda
  40a236:	sub    al,0xa0
  40a238:	sbb    al,al
  40a23a:	imul   esp,DWORD PTR [eax-0x6d417851],0x778c4bce
  40a244:	es aaa 
  40a246:	sub    bl,BYTE PTR [ebx]
  40a248:	jp     0x40a236
  40a24a:	rcr    BYTE PTR [ecx],0xd1
  40a24d:	sbb    ebp,DWORD PTR [ecx+0x21]
  40a250:	pop    es
  40a251:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a253:	retf   
  40a254:	or     al,0x0
  40a256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a257:	jg     0x40a2cb
  40a259:	pusha  
  40a25a:	push   ecx
  40a25b:	lahf   
  40a25c:	mov    bl,0xcb
  40a25e:	push   ecx
  40a25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a260:	ret    
  40a261:	mov    BYTE PTR [ebp+0x605997b1],al
  40a267:	jg     0x40a202
  40a269:	sbb    DWORD PTR [ecx-0x4c],eax
  40a26c:	mov    eax,DWORD PTR [ebp-0x3f]
  40a26f:	daa    
  40a270:	jle    0x40a2b2
  40a272:	daa    
  40a273:	xchg   esp,eax
  40a274:	push   esp
  40a275:	call   0xab0b2a0e
  40a27a:	dec    edi
  40a27b:	out    0x6b,eax
  40a27d:	aam    0xa8
  40a27f:	pop    eax
  40a280:	(bad)  
  40a281:	cli    
  40a282:	or     BYTE PTR [ebx+0x36],ah
  40a285:	les    ebp,FWORD PTR [ecx+0x43]
  40a288:	adc    BYTE PTR [esi-0x1],ah
  40a28b:	mov    al,ds:0x1a36d1
  40a290:	push   esi
  40a291:	stc    
  40a292:	add    dl,BYTE PTR [ebx]
  40a294:	mov    esi,ebp
  40a296:	mov    bl,0xcb
  40a298:	je     0x40a245
  40a29a:	push   eax
  40a29b:	stc    
  40a29c:	lock inc eax
  40a29e:	lods   al,BYTE PTR ds:[esi]
  40a29f:	(bad)  
  40a2a0:	jp     0x40a269
  40a2a2:	xor    edi,eax
  40a2a4:	lods   eax,DWORD PTR ds:[esi]
  40a2a5:	sub    eax,0xe2fbbf3
  40a2aa:	out    dx,eax
  40a2ab:	xor    dh,BYTE PTR [ebx-0x69]
  40a2ae:	add    cl,ah
  40a2b0:	stos   DWORD PTR es:[edi],eax
  40a2b1:	xchg   ebp,eax
  40a2b2:	in     al,0x1e
  40a2b4:	cld    
  40a2b5:	repz lock mov bl,BYTE PTR [esi+0x11101e5a]
  40a2bd:	popa   
  40a2be:	or     eax,0x1906809b
  40a2c3:	ds dec esp
  40a2c5:	jle    0x40a336
  40a2c7:	xchg   esi,eax
  40a2c8:	fisttp DWORD PTR [ebp+0x6a]
  40a2cb:	dec    edx
  40a2cc:	shl    BYTE PTR [esp+ebx*2-0x78406729],1
  40a2d3:	in     al,0xa6
  40a2d5:	fcom   QWORD PTR [esi]
  40a2d7:	push   esi
  40a2d8:	and    BYTE PTR [ecx+0x4d],dh
  40a2db:	mov    ds:0xf197b256,eax
  40a2e0:	lods   eax,DWORD PTR ds:[esi]
  40a2e1:	lahf   
  40a2e2:	lods   al,BYTE PTR ds:[esi]
  40a2e3:	xchg   edx,eax
  40a2e4:	scas   eax,DWORD PTR es:[edi]
  40a2e5:	fwait
  40a2e6:	test   eax,0x2e692d04
  40a2eb:	dec    esi
  40a2ec:	mov    ds:0x21fa2523,eax
  40a2f1:	xor    al,0x9
  40a2f3:	jmp    0x40a286
  40a2f5:	and    edx,DWORD PTR [edi]
  40a2f7:	jg     0x40a35f
  40a2f9:	pop    ss
  40a2fa:	jl     0x40a2e7
  40a2fc:	mov    al,0xdb
  40a2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ff:	(bad)  
  40a300:	xor    DWORD PTR ds:0x4fa0c057,edi
  40a306:	push   esi
  40a307:	(bad)  
  40a308:	dec    ebx
  40a309:	pusha  
  40a30a:	sbb    bl,dl
  40a30c:	mov    al,0x92
  40a30e:	ret    
  40a30f:	sub    DWORD PTR [ebp+0x452c7ab8],0x471cb804
  40a319:	lods   al,BYTE PTR ds:[esi]
  40a31a:	jecxz  0x40a2dc
  40a31c:	push   ebp
  40a31d:	dec    esp
  40a31e:	dec    esp
  40a31f:	dec    ebp
  40a320:	mov    esi,0x2b8d5a50
  40a325:	adc    eax,DWORD PTR [esi]
  40a327:	ins    DWORD PTR es:[edi],dx
  40a328:	fstp   TBYTE PTR [ecx-0xe]
  40a32b:	xchg   bh,bl
  40a32d:	sbb    dl,BYTE PTR [edi+ebp*4+0x23]
  40a331:	mov    dh,0x3d
  40a333:	xchg   ecx,eax
  40a334:	xchg   edx,eax
  40a335:	je     0x40a34f
  40a337:	adc    eax,0x201ab75c
  40a33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a33d:	dec    esp
  40a33e:	push   eax
  40a33f:	pop    ss
  40a340:	pop    edx
  40a341:	enter  0x423,0xfd
  40a345:	das    
  40a346:	adc    DWORD PTR [edi-0x1f],ebp
  40a349:	mov    ch,0xe3
  40a34b:	jmp    0x40a33a
  40a34d:	push   eax
  40a34e:	jl     0x40a3c2
  40a350:	push   ebp
  40a351:	ret    
  40a352:	popf   
  40a353:	mov    edi,0xcecf6673
  40a358:	push   cs
  40a359:	sbb    BYTE PTR [ebp+0x7e],dh
  40a35c:	cdq    
  40a35d:	sbb    dh,BYTE PTR [ebx+0x3b12ad42]
  40a363:	pop    edx
  40a364:	int3   
  40a365:	sub    al,0xae
  40a367:	push   edi
  40a368:	fild   DWORD PTR es:[edi+0x56298fe4]
  40a36f:	and    esp,DWORD PTR [ebp+0x37faf15e]
  40a375:	stos   BYTE PTR es:[edi],al
  40a376:	inc    edx
  40a377:	xchg   DWORD PTR [esi],esi
  40a379:	cmc    
  40a37a:	push   es
  40a37b:	outs   dx,BYTE PTR ds:[esi]
  40a37c:	bound  edi,QWORD PTR [edx]
  40a37e:	test   eax,edi
  40a380:	sbb    eax,edx
  40a382:	sbb    DWORD PTR [eax+0x46],esi
  40a385:	add    al,0x1a
  40a387:	icebp  
  40a388:	mov    ah,0xa5
  40a38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a38b:	dec    bl
  40a38d:	xchg   ebp,eax
  40a38e:	push   cs
  40a38f:	jmp    0x8cdb:0x6611be97
  40a396:	sub    bl,BYTE PTR [ebp-0x5e]
  40a399:	cmp    eax,0x724023e7
  40a39e:	mov    ds:0xfe0bff0b,eax
  40a3a3:	adc    eax,0x435a18e1
  40a3a8:	retf   
  40a3a9:	jb     0x40a39c
  40a3ab:	ins    BYTE PTR es:[edi],dx
  40a3ac:	les    edi,FWORD PTR [edx]
  40a3ae:	lock lea edi,[edi+0x13b3d997]
  40a3b5:	shld   DWORD PTR [ebx],esp,cl
  40a3b8:	add    eax,0x1c7e4162
  40a3bd:	xchg   ebx,eax
  40a3be:	out    0x41,eax
  40a3c0:	jle    0x40a35b
  40a3c2:	push   ds
  40a3c3:	xor    DWORD PTR [ecx-0x5123c658],edi
  40a3c9:	imul   ecx,DWORD PTR [ebx-0x257ae502],0x18d2e8ea
  40a3d3:	dec    edx
  40a3d4:	mov    ch,dh
  40a3d6:	sub    ebp,DWORD PTR [edi-0x2e27295e]
  40a3dc:	pop    edx
  40a3dd:	int    0xdb
  40a3df:	out    0x69,eax
  40a3e1:	outs   dx,BYTE PTR ds:[esi]
  40a3e2:	(bad)  
  40a3e3:	nop
  40a3e4:	and    ebx,DWORD PTR [esi+0x56]
  40a3e7:	add    eax,0xf6800785
  40a3ec:	lds    ebx,FWORD PTR [edx+0x35]
  40a3ef:	inc    edx
  40a3f0:	and    DWORD PTR [eax+0x1c3331e0],ecx
  40a3f6:	adc    eax,0x9947eb96
  40a3fb:	out    0x68,al
  40a3fd:	jns    0x40a449
  40a3ff:	aas    
  40a400:	(bad)  
  40a401:	jg     0x40a464
  40a403:	mov    esp,DWORD PTR [ebp+0x56]
  40a406:	outs   dx,BYTE PTR ds:[esi]
  40a407:	cwde   
  40a408:	outs   dx,DWORD PTR ds:[esi]
  40a409:	push   cs
  40a40a:	xchg   esp,eax
  40a40b:	jbe    0x40a3f4
  40a40d:	jns    0x40a401
  40a40f:	xchg   DWORD PTR [esi+esi*1-0x22ae19b5],ebp
  40a416:	dec    esi
  40a417:	repnz dec ebx
  40a419:	idiv   esp
  40a41b:	test   al,0x30
  40a41d:	loop   0x40a426
  40a41f:	sub    bh,cl
  40a421:	sub    BYTE PTR [eax+0x11],ch
  40a424:	sbb    dl,bl
  40a426:	out    0x30,al
  40a428:	inc    esi
  40a429:	inc    eax
  40a42a:	inc    ecx
  40a42b:	jp     0x40a48b
  40a42d:	pop    esp
  40a42e:	xor    al,BYTE PTR [ebp-0x1a]
  40a431:	pop    ecx
  40a432:	mov    cl,0xb
  40a434:	test   bl,ah
  40a436:	add    BYTE PTR [ebx+0x6fada99a],bl
  40a43c:	ins    BYTE PTR es:[edi],dx
  40a43d:	cld    
  40a43e:	mov    bl,0x1f
  40a440:	inc    esp
  40a441:	push   ds
  40a442:	in     al,0xc5
  40a444:	or     al,0xe5
  40a446:	in     al,dx
  40a447:	mov    ecx,0xd9f76fae
  40a44c:	add    edx,ebp
  40a44e:	sbb    ch,al
  40a450:	push   ds
  40a451:	inc    eax
  40a452:	in     eax,0x52
  40a454:	outs   dx,BYTE PTR ds:[esi]
  40a455:	inc    edi
  40a456:	jmp    0x3e7e:0xdbdfd222
  40a45d:	rol    DWORD PTR [edx-0x3364eb84],1
  40a463:	pop    edi
  40a464:	in     al,0x85
  40a466:	repz and eax,0x471ad908
  40a46c:	icebp  
  40a46d:	jne    0x40a423
  40a46f:	jge    0x40a409
  40a471:	mov    ds:0x6d1ae598,eax
  40a476:	lds    esp,FWORD PTR [eax+0x2f14a5eb]
  40a47c:	dec    edi
  40a47d:	dec    edi
  40a47e:	push   ecx
  40a47f:	push   0x44
  40a481:	mov    eax,ds:0x98d95212
  40a486:	out    0x36,eax
  40a488:	cmp    BYTE PTR [edx],ah
  40a48a:	test   al,0xd2
  40a48c:	mov    eax,0x97c29ec7
  40a491:	push   eax
  40a492:	adc    DWORD PTR [ecx-0x7503e5ee],eax
  40a498:	ja     0x40a48d
  40a49a:	cmp    al,0x85
  40a49c:	and    al,al
  40a49e:	xchg   esi,eax
  40a49f:	cdq    
  40a4a0:	push   ds
  40a4a1:	mov    bh,0x36
  40a4a3:	ret    
  40a4a4:	dec    esp
  40a4a5:	lods   eax,DWORD PTR ds:[esi]
  40a4a6:	mov    BYTE PTR [ebx+0xf],al
  40a4a9:	pop    ds
  40a4aa:	mov    ebp,DWORD PTR [edi]
  40a4ac:	inc    ebx
  40a4ad:	fiadd  WORD PTR [eax+ebp*2-0x78]
  40a4b1:	or     al,0xfc
  40a4b3:	cmp    edi,DWORD PTR [ecx+edx*2]
  40a4b6:	mov    edx,0xf26e85cf
  40a4bb:	pop    ebp
  40a4bc:	into   
  40a4bd:	sub    eax,0x35d8b52d
  40a4c2:	scas   al,BYTE PTR es:[edi]
  40a4c3:	xchg   esi,eax
  40a4c4:	mov    ds:0xbbfa43cc,al
  40a4c9:	sbb    ebp,DWORD PTR [edx+0x4f]
  40a4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4cd:	pop    esi
  40a4ce:	pusha  
  40a4cf:	retf   0xf524
  40a4d2:	add    BYTE PTR [edi-0x145a2550],ah
  40a4d8:	(bad)  
  40a4da:	aad    0xf7
  40a4dc:	sub    DWORD PTR [eax-0x4a],ebx
  40a4df:	jmp    0xcf536e79
  40a4e4:	in     eax,0x8
  40a4e6:	pusha  
  40a4e7:	jne    0x40a4a5
  40a4e9:	fcom   DWORD PTR [eax]
  40a4eb:	and    eax,0x9b48fb69
  40a4f0:	aad    0xd4
  40a4f2:	sar    DWORD PTR [eax+0x41],0xe4
  40a4f6:	cmp    al,0xad
  40a4f8:	xchg   esi,eax
  40a4f9:	inc    edi
  40a4fa:	mov    bl,BYTE PTR [esi+edi*4]
  40a4fd:	dec    esi
  40a4fe:	retf   
  40a4ff:	imul   edi,esi,0x4eced37
  40a505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a506:	jg     0x40a4e4
  40a508:	test   al,0x1
  40a50a:	shl    esp,cl
  40a50c:	js     0x40a57b
  40a50e:	pusha  
  40a50f:	inc    edx
  40a510:	aas    
  40a511:	sub    BYTE PTR [edx-0x47557822],bh
  40a517:	sbb    BYTE PTR [eax+0x72bd1985],bl
  40a51d:	icebp  
  40a51e:	adc    edx,DWORD PTR [edx-0x4ff2ee5a]
  40a524:	mov    edi,esp
  40a526:	sub    eax,0x6a269860
  40a52b:	push   es
  40a52c:	jp     0x40a55e
  40a52e:	lock loop 0x40a512
  40a531:	sar    BYTE PTR [esi-0x4bf57dfe],0xc3
  40a538:	pop    ds
  40a539:	test   eax,0xae498db9
  40a53e:	jge    0x40a4e3
  40a540:	mov    ch,0x1a
  40a542:	pop    esp
  40a543:	push   ebx
  40a544:	scas   eax,DWORD PTR es:[edi]
  40a545:	arpl   WORD PTR [ebx-0x60d7f3b8],sp
  40a54b:	in     al,dx
  40a54c:	and    edi,DWORD PTR [edi]
  40a54e:	mov    esi,0x4f61de2a
  40a553:	jns    0x40a577
  40a555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a556:	sbb    ax,0xbc1f
  40a55a:	sbb    DWORD PTR [edx],ecx
  40a55c:	sar    DWORD PTR [esi-0x667d9176],cl
  40a562:	adc    al,0xb9
  40a564:	mov    esi,0x5eeb477
  40a569:	inc    edx
  40a56a:	mov    cl,0xc6
  40a56c:	xor    eax,0x547219f5
  40a571:	push   0x45
  40a573:	inc    eax
  40a574:	xor    al,0x7a
  40a576:	out    0xa6,eax
  40a578:	test   dl,0x8a
  40a57b:	frstor [edi-0x1]
  40a57e:	inc    esi
  40a57f:	stc    
  40a580:	mov    edx,0x200fcd3f
  40a585:	dec    ebp
  40a586:	mov    edi,0x2f5b5931
  40a58b:	pop    eax
  40a58c:	sbb    ebx,0xbb8bda14
  40a592:	iret   
  40a593:	adc    edx,DWORD PTR [eax+0x7d53cbc3]
  40a599:	add    eax,0x54176f1c
  40a59e:	cmp    dl,al
  40a5a0:	adc    BYTE PTR [eax],bl
  40a5a2:	rcr    BYTE PTR [esi],0x59
  40a5a5:	mov    ebx,0x602107ec
  40a5aa:	mov    ecx,0xb4f3243
  40a5af:	pop    ebp
  40a5b0:	sub    al,0x51
  40a5b2:	push   es
  40a5b3:	clc    
  40a5b4:	pop    edx
  40a5b5:	in     eax,dx
  40a5b6:	xchg   ebp,eax
  40a5b7:	add    al,BYTE PTR [ebx]
  40a5b9:	push   esp
  40a5ba:	mov    BYTE PTR [esi+0x54cbcccf],ch
  40a5c0:	mov    ?,esp
  40a5c2:	xchg   edx,eax
  40a5c3:	lds    edi,FWORD PTR [ecx-0x3edd3db6]
  40a5c9:	xchg   edi,eax
  40a5ca:	fild   DWORD PTR [edi-0x16]
  40a5cd:	scas   eax,DWORD PTR es:[edi]
  40a5ce:	idiv   DWORD PTR [eax+0x60431f]
  40a5d4:	mov    eax,0x2996d7e4
  40a5d9:	(bad)  
  40a5da:	fmul   st,st(0)
  40a5dc:	xor    DWORD PTR [ecx-0x4e],ecx
  40a5df:	mov    eax,ds:0x2977b715
  40a5e4:	outs   dx,BYTE PTR ds:[esi]
  40a5e5:	xchg   edx,eax
  40a5e6:	pop    ss
  40a5e7:	or     BYTE PTR [ecx-0x74549c46],0x3c
  40a5ee:	push   ecx
  40a5ef:	mov    dh,0x2a
  40a5f1:	pop    es
  40a5f2:	jmp    DWORD PTR [edi+ebx*4-0x5]
  40a5f6:	mov    edx,0x7572de14
  40a5fb:	fmul   DWORD PTR [ebp-0x33a99b91]
  40a601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a602:	scas   eax,DWORD PTR es:[edi]
  40a603:	fucomp st(1)
  40a605:	es push esi
  40a607:	mov    esp,0x48fc5633
  40a60c:	sahf   
  40a60d:	xlat   BYTE PTR ds:[ebx]
  40a60e:	ficomp WORD PTR [eax+0x7b]
  40a611:	xchg   edi,eax
  40a612:	inc    edi
  40a613:	sar    DWORD PTR [ecx-0x1410e7b1],1
  40a619:	jmp    0x40a690
  40a61b:	add    BYTE PTR [ebp-0x5c],cl
  40a61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61f:	test   BYTE PTR [ebx-0x659b4a6d],ch
  40a625:	jo     0x40a5ef
  40a627:	cmp    al,0x7f
  40a629:	mov    esp,0x507e8880
  40a62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a62f:	(bad)  
  40a630:	or     al,0xf1
  40a632:	push   ebx
  40a633:	iret   
  40a634:	cwde   
  40a635:	dec    ebp
  40a636:	and    esp,DWORD PTR [edx-0x7f80b3f1]
  40a63c:	xchg   edi,eax
  40a63d:	in     al,dx
  40a63e:	js     0x40a631
  40a640:	mov    ds:0xe455d586,eax
  40a645:	cmc    
  40a646:	pop    edx
  40a647:	fcmovb st,st(4)
  40a649:	cmc    
  40a64a:	in     eax,0x91
  40a64c:	lods   eax,DWORD PTR ds:[esi]
  40a64d:	loope  0x40a5cf
  40a64f:	mov    BYTE PTR [ebp+0x75dabe4d],cl
  40a655:	rol    DWORD PTR [ebx-0x21],0x1b
  40a659:	xchg   ebx,eax
  40a65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65b:	mov    dl,0xbf
  40a65d:	cld    
  40a65e:	mov    dx,0xdfc
  40a662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a663:	mov    esp,0xee2299d8
  40a668:	dec    esp
  40a669:	and    edi,DWORD PTR [edi-0x59f23d75]
  40a66f:	push   DWORD PTR [esp+ebp*4+0x53589d89]
  40a676:	push   esi
  40a677:	xchg   bh,dh
  40a679:	ss push esp
  40a67b:	sbb    al,0x1a
  40a67d:	pop    ebp
  40a67e:	jg     0x40a698
  40a680:	cld    
  40a681:	js     0x40a6ca
  40a683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a684:	jg     0x40a6b1
  40a686:	push   0x5dfa700
  40a68b:	dec    eax
  40a68c:	lds    ebp,FWORD PTR [edx]
  40a68e:	sbb    eax,0x7231b547
  40a693:	sar    DWORD PTR [ecx+0xe],cl
  40a696:	adc    BYTE PTR [ebp+eiz*1+0x37bf1907],dl
  40a69d:	sub    eax,0x7c42b367
  40a6a2:	dec    edx
  40a6a3:	test   BYTE PTR [ebx-0x6b],ah
  40a6a6:	sbb    al,0xc8
  40a6a8:	and    cl,BYTE PTR [esi-0x4ffe9b19]
  40a6ae:	js     0x40a633
  40a6b0:	inc    esi
  40a6b1:	push   eax
  40a6b2:	pop    esp
  40a6b3:	stos   BYTE PTR es:[edi],al
  40a6b4:	add    edi,DWORD PTR [ebx-0x6ef8518b]
  40a6ba:	mov    WORD PTR [ebx],gs
  40a6bc:	push   cs
  40a6bd:	imul   ebx,DWORD PTR [esi-0x3cb50001],0x60
  40a6c4:	out    dx,eax
  40a6c5:	cmc    
  40a6c6:	out    0xd2,eax
  40a6c8:	cmp    al,0xc1
  40a6ca:	mov    al,0x76
  40a6cc:	out    0x93,al
  40a6ce:	xor    eax,0x7383bfde
  40a6d3:	jb     0x40a750
  40a6d5:	aas    
  40a6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d7:	pop    esp
  40a6d8:	jae    0x40a6e9
  40a6da:	sahf   
  40a6db:	stc    
  40a6dc:	mov    bh,0x54
  40a6de:	and    ecx,DWORD PTR [ebp+0x6aee61ac]
  40a6e4:	loope  0x40a721
  40a6e6:	inc    ebp
  40a6e8:	imul   edi,DWORD PTR [eax+0x3d],0x41
  40a6ec:	mov    DWORD PTR [eax+ebp*1-0x1],edx
  40a6f0:	(bad)  
  40a6f1:	adc    bh,BYTE PTR [ecx]
  40a6f3:	data16 mov ch,0x64
  40a6f6:	adc    ah,BYTE PTR [eax+0xf]
  40a6f9:	xor    al,0xcd
  40a6fb:	or     BYTE PTR [edi],0x13
  40a6fe:	inc    esp
  40a6ff:	fs ret 
  40a701:	scas   eax,DWORD PTR es:[edi]
  40a702:	sub    BYTE PTR [esi+0x2e],dh
  40a705:	daa    
  40a706:	test   DWORD PTR [esi],esi
  40a708:	mov    esi,0xecce11e2
  40a70d:	int    0xdf
  40a70f:	call   0x7262:0x9def55cc
  40a716:	push   ebp
  40a717:	adc    BYTE PTR [ebp+0x5b],ah
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	scas   eax,DWORD PTR es:[edi]
  40a71c:	sbb    ebx,ebp
  40a71e:	repz sub edi,ebx
  40a721:	xchg   esi,eax
  40a722:	cmp    DWORD PTR [ecx-0x4],edi
  40a725:	scas   al,BYTE PTR es:[edi]
  40a726:	xor    ah,BYTE PTR [ebp+edx*2+0x740d441a]
  40a72d:	push   ds
  40a72e:	and    BYTE PTR [esp+ebp*8-0x5e],0x28
  40a733:	imul   edi,DWORD PTR [eax+0x8],0xa1d72b5a
  40a73a:	inc    ebp
  40a73b:	cld    
  40a73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a73d:	pop    ebp
  40a73e:	jae    0x40a7a9
  40a740:	pop    es
  40a741:	and    esi,DWORD PTR [eax-0x13]
  40a744:	sti    
  40a745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a746:	adc    eax,0xb503613d
  40a74b:	pop    ecx
  40a74c:	jmp    0x9babd362
  40a751:	jmp    0xa299:0xda53
  40a757:	loopne 0x40a793
  40a759:	sub    BYTE PTR [esi-0x1e],0xe3
  40a75d:	ds push eax
  40a75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a760:	dec    esi
  40a761:	mov    DWORD PTR [edi+edi*4],edi
  40a764:	cmp    eax,0x7ac0691
  40a769:	or     DWORD PTR [ecx],ebx
  40a76b:	pop    ds
  40a76c:	mov    eax,0xfa9b3241
  40a771:	mov    ebp,0xfaebc44
  40a776:	adc    eax,DWORD PTR [eax+ebp*1]
  40a779:	mov    ss,WORD PTR [esi+0x69]
  40a77c:	pop    eax
  40a77d:	aaa    
  40a77e:	stc    
  40a77f:	sbb    DWORD PTR [ecx-0x61],edi
  40a782:	mov    edi,0xc8e5d1de
  40a787:	push   edi
  40a788:	arpl   bp,si
  40a78a:	sbb    DWORD PTR [eax+0x8],0x30
  40a78e:	mov    cl,0x3a
  40a790:	out    0x46,al
  40a792:	dec    DWORD PTR [ebx+eiz*2+0x4a]
  40a796:	cdq    
  40a797:	aaa    
  40a798:	iret   
  40a799:	xchg   esp,eax
  40a79a:	bound  eax,QWORD PTR [esi]
  40a79c:	mov    bl,0x6
  40a79e:	pop    esi
  40a79f:	rcr    edi,1
  40a7a1:	fs jg  0x40a732
  40a7a4:	pop    edi
  40a7a5:	xor    DWORD PTR ds:0xb10d3db5,eax
  40a7ab:	inc    esp
  40a7ac:	mov    ebx,0x4ca0838a
  40a7b1:	cwde   
  40a7b2:	mov    eax,0x649adf04
  40a7b7:	fistp  DWORD PTR [eax+edx*2+0x4a]
  40a7bb:	jp     0x40a753
  40a7bd:	push   edi
  40a7be:	popf   
  40a7bf:	adc    BYTE PTR ds:0x5d897b16,bh
  40a7c5:	scas   eax,DWORD PTR es:[edi]
  40a7c6:	test   al,0x55
  40a7c8:	in     eax,dx
  40a7c9:	dec    ebx
  40a7ca:	shr    dh,1
  40a7cc:	jns    0x40a767
  40a7ce:	in     al,dx
  40a7cf:	pop    ebp
  40a7d0:	inc    esi
  40a7d1:	fist   DWORD PTR [ecx+0x5dad302e]
  40a7d7:	sahf   
  40a7d8:	mov    ebx,0xf12474b9
  40a7dd:	gs (bad) 
  40a7df:	cdq    
  40a7e0:	repz (bad) [esp+edi*1+0x3d]
  40a7e5:	lds    edx,FWORD PTR [eax+0x59842e43]
  40a7eb:	mov    cl,0x7b
  40a7ed:	sbb    al,0x48
  40a7ef:	push   esp
  40a7f0:	xchg   DWORD PTR [eax-0x65],eax
  40a7f3:	mov    DWORD PTR [ecx],ebx
  40a7f5:	inc    ecx
  40a7f6:	scas   eax,DWORD PTR es:[edi]
  40a7f7:	add    DWORD PTR [esi-0x3b],eax
  40a7fa:	lahf   
  40a7fb:	lods   eax,DWORD PTR ds:[esi]
  40a7fc:	inc    ecx
  40a7fd:	lods   al,BYTE PTR ds:[esi]
  40a7fe:	pop    edi
  40a7ff:	jl     0x40a7c5
  40a801:	mov    al,0xdd
  40a803:	lock pop esp
  40a805:	xchg   DWORD PTR [ecx+0x46],esi
  40a808:	mov    bh,0x6b
  40a80a:	mov    edi,0x2d9122a0
  40a80f:	add    eax,0xa91947a
  40a814:	xchg   ecx,eax
  40a815:	out    0xe,al
  40a817:	test   al,0xff
  40a819:	cmp    BYTE PTR [eax+esi*4-0x5063def0],0x67
  40a821:	call   0x5e2a:0x9470aaa4
  40a828:	stc    
  40a829:	icebp  
  40a82a:	push   ebx
  40a82b:	and    BYTE PTR [edi],dh
  40a82d:	cld    
  40a82e:	ds or  esp,edx
  40a831:	add    esp,eax
  40a833:	mov    ebp,eax
  40a835:	sahf   
  40a836:	gs mov esi,0xd4d7318c
  40a83c:	cs jmp 0x40a86d
  40a83f:	pop    es
  40a840:	adc    DWORD PTR [ebx],ecx
  40a842:	xor    BYTE PTR [ebp+0x579c512a],bh
  40a848:	adc    BYTE PTR [eax+edi*4+0x4cd5b034],dl
  40a84f:	icebp  
  40a850:	aas    
  40a851:	call   0x3da3:0x1aa369ac
  40a858:	mov    edx,DWORD PTR [ecx]
  40a85a:	rcr    ch,1
  40a85c:	jge    0x40a844
  40a85e:	add    ecx,eax
  40a860:	mov    eax,DWORD PTR [edi]
  40a862:	sahf   
  40a863:	adc    cl,BYTE PTR [edx]
  40a865:	cld    
  40a866:	adc    DWORD PTR [ebp-0x7c],ebx
  40a869:	push   cs
  40a86a:	(bad)  
  40a86c:	and    BYTE PTR ds:0x29b9597b,cl
  40a872:	(bad)  
  40a874:	bound  eax,QWORD PTR [eax+0xa]
  40a877:	push   0xffffffce
  40a879:	mov    cl,0xb7
  40a87b:	nop
  40a87c:	ss aad 0x62
  40a87f:	retf   0x4fd1
  40a882:	xchg   esp,eax
  40a883:	into   
  40a884:	adc    bl,BYTE PTR [edx-0x32]
  40a887:	je     0x40a8d3
  40a889:	retf   
  40a88a:	xor    eax,0x4a42988e
  40a88f:	call   0xaad2:0x8df42b79
  40a896:	int    0x94
  40a898:	push   esp
  40a899:	data16 cld 
  40a89b:	ins    DWORD PTR es:[edi],dx
  40a89c:	jbe    0x40a851
  40a89e:	mov    ebp,0xbb7bb37
  40a8a3:	jg     0x40a867
  40a8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a6:	in     al,dx
  40a8a7:	ret    0x4d22
  40a8aa:	dec    edx
  40a8ab:	leave  
  40a8ac:	dec    ebp
  40a8ad:	xlat   BYTE PTR ds:[ebx]
  40a8ae:	aas    
  40a8af:	xchg   ebx,eax
  40a8b0:	dec    ebp
  40a8b1:	cld    
  40a8b2:	nop
  40a8b3:	ds cli 
  40a8b5:	jnp    0x40a8f6
  40a8b7:	clc    
  40a8b8:	mov    bl,0xc4
  40a8ba:	rol    BYTE PTR [edi],cl
  40a8bc:	inc    edx
  40a8bd:	daa    
  40a8be:	daa    
  40a8bf:	mov    al,ds:0xe3cde482
  40a8c4:	loopne 0x40a934
  40a8c6:	jg     0x40a85b
  40a8c8:	jecxz  0x40a87b
  40a8ca:	jle    0x40a946
  40a8cc:	stc    
  40a8cd:	inc    edi
  40a8ce:	jge    0x40a8f4
  40a8d0:	lods   al,BYTE PTR ds:[esi]
  40a8d1:	popa   
  40a8d2:	(bad)
  40a8d5:	ja     0x40a8a7
  40a8d7:	pop    ebx
  40a8d8:	dec    esi
  40a8d9:	jl     0x40a86c
  40a8db:	fisub  WORD PTR [ecx+0x7712c433]
  40a8e1:	ror    bl,cl
  40a8e3:	mov    ebx,0x7d04d7b1
  40a8e8:	pop    esi
  40a8e9:	aaa    
  40a8ea:	jge    0x40a8f4
  40a8ec:	shl    BYTE PTR [eax+0x73],0xb7
  40a8f0:	mov    esp,0x8ada6500
  40a8f5:	dec    ebx
  40a8f6:	sbb    esi,eax
  40a8f8:	mul    ah
  40a8fa:	push   esi
  40a8fb:	and    esi,ecx
  40a8fd:	addr16 cmc 
  40a8ff:	loop   0x40a8cb
  40a901:	inc    esp
  40a902:	or     al,0xd3
  40a904:	daa    
  40a905:	test   DWORD PTR [ebp+0x7d616da9],ecx
  40a90b:	rep lods al,BYTE PTR ds:[esi]
  40a90d:	es loope 0x40a8e1
  40a910:	div    DWORD PTR [ecx+0x4d]
  40a913:	pop    ebp
  40a914:	ins    DWORD PTR es:[edi],dx
  40a915:	pop    esi
  40a916:	mov    edi,0xa8f0aabf
  40a91b:	mov    ebx,0x4dd47d6a
  40a920:	lock fwait
  40a922:	and    eax,0x11228ea1
  40a927:	jns    0x40a9a4
  40a929:	fild   WORD PTR [eax+0x46]
  40a92c:	das    
  40a92d:	mov    dl,0x39
  40a92f:	out    dx,eax
  40a930:	push   0x2be46d0a
  40a935:	add    al,0x9d
  40a937:	mov    ebp,0xf369ece1
  40a93c:	or     al,0xfc
  40a93e:	in     al,dx
  40a93f:	jl     0x40a91a
  40a941:	xchg   ebx,eax
  40a942:	sub    dl,al
  40a944:	or     eax,0x12cd6d1b
  40a949:	lea    edi,[ebp+0x23]
  40a94c:	popf   
  40a94d:	mov    bl,BYTE PTR [ebx]
  40a94f:	add    eax,esp
  40a951:	(bad)  
  40a952:	jecxz  0x40a9c6
  40a954:	shl    DWORD PTR [ebx-0x52],0x19
  40a958:	xor    DWORD PTR [edx+0x68],ecx
  40a95b:	xor    BYTE PTR [edi+0x2bca9e54],dh
  40a961:	or     al,0x96
  40a963:	fisubr DWORD PTR [edx-0x5029bdcc]
  40a969:	ret    
  40a96a:	bt     edi,esp
  40a96d:	imul   eax,DWORD PTR [ecx-0x5d],0x9b32b391
  40a974:	pop    es
  40a975:	mov    cl,0xc4
  40a977:	mov    eax,ds:0x1495fbb7
  40a97c:	add    eax,0xc6622b67
  40a981:	or     eax,0x2b188b0c
  40a986:	fst    st(6)
  40a988:	in     al,0xb
  40a98a:	into   
  40a98b:	(bad)  
  40a98c:	cmp    BYTE PTR [ebx-0x6626fe10],ah
  40a992:	(bad)  
  40a994:	push   0xfffffffd
  40a996:	xchg   edx,eax
  40a997:	and    ebp,esp
  40a999:	ret    
  40a99a:	std    
  40a99b:	adc    eax,0x36d5dbd6
  40a9a0:	into   
  40a9a1:	ror    BYTE PTR es:[eax],cl
  40a9a4:	int    0x8
  40a9a6:	mov    dh,0xec
  40a9a8:	push   ebp
  40a9a9:	add    ebp,DWORD PTR [ecx+eiz*2]
  40a9ac:	iret   
  40a9ad:	sbb    dh,al
  40a9af:	dec    esp
  40a9b0:	xor    al,BYTE PTR fs:[ebx]
  40a9b3:	cdq    
  40a9b4:	bnd jg 0x40a970
  40a9b7:	cmp    al,0x7f
  40a9b9:	mov    dl,0x4f
  40a9bb:	mov    ch,al
  40a9bd:	out    dx,eax
  40a9be:	mov    ah,0x25
  40a9c0:	stos   BYTE PTR es:[edi],al
  40a9c1:	(bad)  
  40a9c2:	push   ebx
  40a9c3:	jne    0x40aa0e
  40a9c5:	fild   QWORD PTR ds:0x984a54db
  40a9cb:	adc    edx,DWORD PTR [edi]
  40a9cd:	xchg   edx,eax
  40a9ce:	fcomip st,st(3)
  40a9d0:	rol    ebp,1
  40a9d2:	shl    DWORD PTR [edi],0x33
  40a9d5:	or     esp,DWORD PTR [ebx]
  40a9d7:	rcr    BYTE PTR [esi+eax*8+0x78],cl
  40a9db:	adc    ch,BYTE PTR [eax]
  40a9dd:	pushf  
  40a9de:	iret   
  40a9df:	retf   
  40a9e0:	test   DWORD PTR [edi],esi
  40a9e2:	sbb    ebx,esi
  40a9e4:	dec    eax
  40a9e5:	pop    ebx
  40a9e6:	ins    DWORD PTR es:[edi],dx
  40a9e7:	inc    eax
  40a9e8:	cmp    eax,0x3152fd06
  40a9ed:	mov    eax,ds:0xd2560278
  40a9f2:	xchg   edx,eax
  40a9f3:	mov    esp,0x67203f0
  40a9f8:	les    ebp,FWORD PTR [eax-0x24fa3e7]
  40a9fe:	push   0x43
  40aa00:	add    esp,DWORD PTR [eax]
  40aa02:	imul   edi,DWORD PTR [ecx],0xd8a7f52f
  40aa08:	fcompp 
  40aa0a:	ss test al,0xe5
  40aa0d:	daa    
  40aa0e:	sub    ah,BYTE PTR [ecx+0x27bc8507]
  40aa14:	(bad)  
  40aa15:	cmc    
  40aa16:	cmp    eax,0xfb7a1a2a
  40aa1b:	pop    DWORD PTR [ecx]
  40aa1d:	cmp    eax,0x9b2f187
  40aa22:	addr16 push eax
  40aa24:	imul   esp,DWORD PTR [edi+0x21fa8447],0x656e5e2d
  40aa2e:	inc    ecx
  40aa2f:	inc    edx
  40aa30:	fild   WORD PTR [ebx]
  40aa32:	ins    BYTE PTR es:[edi],dx
  40aa33:	mov    ebx,0x2761c8c4
  40aa38:	stos   DWORD PTR es:[edi],eax
  40aa39:	xchg   esp,eax
  40aa3a:	push   cs
  40aa3b:	leave  
  40aa3c:	movq   QWORD PTR [edx-0x4a263856],mm4
  40aa43:	clc    
  40aa44:	or     edx,DWORD PTR [ebx+0x78]
  40aa47:	out    dx,eax
  40aa48:	jl     0x40aa2e
  40aa4a:	pop    esi
  40aa4b:	dec    ebp
  40aa4c:	fdivrp st(1),st
  40aa4e:	inc    ebp
  40aa4f:	sbb    ebp,ebp
  40aa51:	loope  0x40aa70
  40aa53:	push   edx
  40aa54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa55:	push   esp
  40aa57:	cwde   
  40aa58:	pusha  
  40aa59:	dec    esi
  40aa5a:	pop    esp
  40aa5b:	imul   eax,esi,0x20
  40aa5e:	mov    dh,0x2d
  40aa60:	lahf   
  40aa61:	push   edx
  40aa62:	sub    eax,0x567304fe
  40aa67:	scas   eax,DWORD PTR es:[edi]
  40aa68:	outs   dx,DWORD PTR ds:[esi]
  40aa69:	push   0xadf5a637
  40aa6e:	mov    dl,ch
  40aa70:	or     eax,0xc98ab38
  40aa75:	dec    esp
  40aa76:	cli    
  40aa77:	xor    BYTE PTR [edx],cl
  40aa79:	jne    0x40aa0c
  40aa7b:	pop    ecx
  40aa7c:	ins    BYTE PTR es:[edi],dx
  40aa7d:	sub    esi,DWORD PTR [edi-0x7]
  40aa80:	fild   WORD PTR [eax]
  40aa82:	push   cs
  40aa83:	cmp    dh,BYTE PTR [eax-0x25]
  40aa86:	out    dx,eax
  40aa87:	mov    dl,BYTE PTR [esi]
  40aa89:	(bad)  
  40aa8a:	xlat   BYTE PTR ds:[ebx]
  40aa8b:	sub    dl,BYTE PTR [edi+0x10]
  40aa8e:	mov    cl,0x9d
  40aa90:	jecxz  0x40aa3e
  40aa92:	xor    esi,DWORD PTR [edx]
  40aa94:	outs   dx,BYTE PTR fs:[esi]
  40aa96:	inc    eax
  40aa97:	repz imul edi,DWORD PTR [eax],0xceb42eba
  40aa9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa9f:	jnp    0x40aa32
  40aaa1:	mov    edi,0x271981cc
  40aaa6:	bound  esi,QWORD PTR ds:0x1077a0b3
  40aaac:	retf   
  40aaad:	loop   0x40ab28
  40aaaf:	gs fcomp st(3)
  40aab2:	push   ecx
  40aab3:	pop    edx
  40aab4:	std    
  40aab5:	xchg   edi,eax
  40aab6:	pop    edi
  40aab7:	outs   dx,BYTE PTR ds:[esi]
  40aab8:	je     0x40aa5a
  40aaba:	inc    eax
  40aabb:	inc    esi
  40aabc:	ja     0x40aa50
  40aabe:	not    DWORD PTR [ecx-0x1f0b4c5a]
  40aac4:	sub    al,0x2f
  40aac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aac7:	sbb    DWORD PTR [edx+0x218804ae],ebx
  40aacd:	adc    BYTE PTR [esp+ebx*8+0x68],ch
  40aad1:	xor    eax,0xe8eaa080
  40aad6:	adc    edi,edi
  40aad8:	cmp    BYTE PTR [esi],0x57
  40aadb:	sub    DWORD PTR ds:0xf987ff9d,ebp
  40aae1:	and    bl,cl
  40aae3:	mov    dl,0xef
  40aae5:	sti    
  40aae6:	enter  0x722a,0xa8
  40aaea:	ret    
  40aaeb:	jb     0x40ab03
  40aaed:	xchg   ebx,eax
  40aaee:	dec    esi
  40aaef:	and    esp,ebx
  40aaf1:	inc    edx
  40aaf2:	outs   dx,DWORD PTR ds:[esi]
  40aaf3:	pop    ss
  40aaf4:	into   
  40aaf5:	mov    ebp,0x2f85a3c5
  40aafa:	mov    cl,0x97
  40aafc:	es sahf 
  40aafe:	popf   
  40aaff:	mov    bh,BYTE PTR cs:[ebp+0x6c24ad8d]
  40ab06:	out    0x97,eax
  40ab08:	push   eax
  40ab09:	sub    al,0x81
  40ab0b:	jl     0x40ab64
  40ab0d:	jmp    0xac61:0x874720e7
  40ab14:	mov    esi,0x2cccd80b
  40ab19:	ret    
  40ab1a:	inc    esi
  40ab1b:	mov    cl,0xba
  40ab1d:	mov    edx,0xb11d840e
  40ab22:	mov    cl,0xab
  40ab24:	push   cs
  40ab25:	push   ebx
  40ab26:	es inc ecx
  40ab28:	xor    ebx,DWORD PTR [ecx]
  40ab2a:	sub    ebp,DWORD PTR [edi-0x7f131e40]
  40ab30:	push   edi
  40ab31:	or     BYTE PTR [edi-0x15],0x10
  40ab35:	sbb    eax,0x433b7b60
  40ab3a:	add    BYTE PTR [ebx+eiz*1],bl
  40ab3d:	or     DWORD PTR [ebx+0x793e6d2f],esi
  40ab43:	push   edi
  40ab44:	fisub  DWORD PTR ss:[ecx+ebx*1-0x34525fd2]
  40ab4c:	mov    dl,0x36
  40ab4e:	hlt    
  40ab4f:	mov    bh,0x79
  40ab51:	or     ecx,DWORD PTR [edx]
  40ab53:	lods   al,BYTE PTR ds:[esi]
  40ab54:	adc    ebx,esi
  40ab56:	mov    ecx,0xb6bde79c
  40ab5b:	ret    0xd562
  40ab5e:	inc    ecx
  40ab5f:	jb     0x40abc3
  40ab61:	gs lahf 
  40ab63:	push   eax
  40ab64:	int    0x4a
  40ab66:	push   ebp
  40ab67:	push   esi
  40ab68:	mov    eax,ds:0x4dd65f42
  40ab6d:	cs rcl edi,1
  40ab70:	add    edi,DWORD PTR gs:0x6f59c172
  40ab77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab78:	mov    dl,0xb6
  40ab7a:	jmp    0x40ab54
  40ab7c:	xchg   DWORD PTR [edx+0x71],ecx
  40ab7f:	adc    DWORD PTR [edx+0x167a3517],ecx
  40ab85:	xchg   ebp,eax
  40ab86:	sbb    al,BYTE PTR [edx]
  40ab88:	fcmovbe st,st(6)
  40ab8a:	push   es
  40ab8b:	inc    esp
  40ab8d:	int3   
  40ab8e:	pushf  
  40ab8f:	cli    
  40ab90:	mov    ecx,DWORD PTR [eax-0x52]
  40ab93:	(bad)  
  40ab94:	sub    ah,BYTE PTR [ecx+0x3ea3d8da]
  40ab9a:	in     eax,dx
  40ab9b:	mov    ah,0x9c
  40ab9d:	out    0xd5,al
  40ab9f:	mov    dh,0xc7
  40aba1:	sbb    edx,DWORD PTR [eax]
  40aba3:	fwait
  40aba4:	pop    ebp
  40aba5:	jp     0x40ac05
  40aba7:	and    edi,DWORD PTR [ebx-0x80]
  40abaa:	sub    eax,0xccc6d8bb
  40abaf:	(bad)  
  40abb0:	and    edi,DWORD PTR [esi+0x1890ee7]
  40abb6:	loopne 0x40ab63
  40abb8:	into   
  40abb9:	push   eax
  40abba:	adc    DWORD PTR [eax+0x649d9046],esi
  40abc0:	fmul   QWORD PTR [esi]
  40abc2:	fnstsw WORD PTR fs:[edi]
  40abc5:	stos   BYTE PTR es:[edi],al
  40abc6:	and    eax,0x7ad59394
  40abcb:	xchg   DWORD PTR [edi],ebp
  40abcd:	repz push ebp
  40abcf:	sbb    al,0x55
  40abd1:	xchg   esi,eax
  40abd2:	aas    
  40abd3:	xchg   DWORD PTR [ecx],ecx
  40abd5:	xchg   ecx,eax
  40abd6:	cld    
  40abd7:	imul   esp,edx,0x42
  40abda:	in     eax,0xd
  40abdc:	mov    eax,ds:0x219b7d8e
  40abe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe2:	xchg   BYTE PTR [ebx-0x45fbde6a],al
  40abe8:	or     eax,0x19a49679
  40abed:	dec    ecx
  40abee:	rcr    BYTE PTR [esi],cl
  40abf0:	dec    edx
  40abf1:	ret    
  40abf2:	sbb    eax,0xac16b52c
  40abf7:	mov    dl,0xdd
  40abf9:	pop    esi
  40abfa:	push   0xffffffa2
  40abfc:	loope  0x40ac0c
  40abfe:	mov    edi,0xd34bbf28
  40ac03:	fistp  WORD PTR [edi-0x21eb89eb]
  40ac09:	inc    ecx
  40ac0a:	xchg   ecx,eax
  40ac0b:	add    bh,BYTE PTR [eax+0x6bd38dac]
  40ac11:	sbb    BYTE PTR ds:0x58ebc0e3,dh
  40ac17:	lods   al,BYTE PTR ds:[esi]
  40ac18:	jle    0x40ac01
  40ac1a:	push   es
  40ac1b:	test   al,0x74
  40ac1d:	out    0xc5,al
  40ac1f:	push   ds
  40ac20:	jg     0x40abe4
  40ac22:	xchg   BYTE PTR [edi+0x6a],bh
  40ac25:	lea    esp,[edx-0x18d83fdc]
  40ac2b:	jb     0x40ac44
  40ac2d:	or     bh,BYTE PTR [edi-0x35]
  40ac30:	jae    0x40ac49
  40ac32:	push   es
  40ac33:	or     esi,DWORD PTR ds:[ebx-0x45]
  40ac37:	lods   eax,DWORD PTR ds:[esi]
  40ac38:	data16 jno 0x40abe4
  40ac3b:	jae    0x40ac17
  40ac3d:	xchg   esi,eax
  40ac3e:	xchg   edi,eax
  40ac3f:	xlat   BYTE PTR ds:[ebx]
  40ac40:	jg     0x40aca7
  40ac42:	pop    ss
  40ac43:	out    0x23,eax
  40ac45:	inc    ebp
  40ac46:	adc    edi,DWORD PTR [ebx+0x2fb5251f]
  40ac4c:	mov    esi,0x5f24d1e2
  40ac51:	dec    esi
  40ac52:	aam    0x15
  40ac54:	and    BYTE PTR [eax-0x7c],cl
  40ac57:	hlt    
  40ac58:	lgs    bx,DWORD PTR [esi-0x2b]
  40ac5d:	fs xchg edx,eax
  40ac5f:	push   esi
  40ac60:	iret   
  40ac61:	mov    ?,WORD PTR [edi-0x1c]
  40ac64:	js     0x40aca1
  40ac66:	inc    esi
  40ac67:	sub    edi,esp
  40ac69:	mov    ebx,0x95f0142
  40ac6e:	or     eax,0x25474acf
  40ac73:	jl     0x40ace2
  40ac75:	les    ecx,FWORD PTR [eax]
  40ac77:	add    al,0xa8
  40ac79:	test   BYTE PTR [ebx+0x36],bh
  40ac7c:	sar    DWORD PTR [eax],cl
  40ac7e:	mov    edx,0xfa6e7da9
  40ac83:	dec    ebx
  40ac84:	mov    al,0x18
  40ac86:	inc    esp
  40ac87:	out    0xc3,eax
  40ac89:	ins    BYTE PTR es:[edi],dx
  40ac8a:	imul   edi,DWORD PTR [ebx],0xe85f4df2
  40ac90:	or     DWORD PTR [ecx+eiz*2+0x16],ebx
  40ac94:	in     eax,0xd9
  40ac96:	daa    
  40ac97:	(bad)  
  40ac98:	mov    es,WORD PTR [ebx+0x24]
  40ac9b:	into   
  40ac9c:	sbb    al,0x26
  40ac9e:	outs   dx,DWORD PTR ds:[esi]
  40ac9f:	ret    0x67b1
  40aca2:	adc    esi,DWORD PTR [edi+0x46]
  40aca5:	stc    
  40aca6:	int    0xe9
  40aca8:	add    DWORD PTR [ecx],esi
  40acaa:	pop    ebp
  40acab:	mov    DWORD PTR [eax-0x13],ebp
  40acae:	dec    edx
  40acaf:	inc    esp
  40acb0:	(bad)  
  40acb1:	enter  0x280a,0x53
  40acb5:	jae    0x40ad30
  40acb7:	js     0x40ad36
  40acb9:	mov    ah,0x5a
  40acbb:	in     eax,dx
  40acbc:	gs xor eax,0xb334276a
  40acc2:	les    esp,FWORD PTR [eax+ebx*4-0x585646c8]
  40acc9:	mov    bh,BYTE PTR [eax-0x27bbbf7b]
  40accf:	(bad)  
  40acd1:	call   0x726f:0x252d5791
  40acd8:	mov    ecx,0x44363f33
  40acdd:	cmp    al,dl
  40acdf:	test   al,0xf5
  40ace1:	fsubr  DWORD PTR [edi-0x73]
  40ace4:	mov    ds:0xa26f09c5,al
  40ace9:	(bad)  
  40acea:	mov    eax,0x4ac0a9f7
  40acef:	inc    eax
  40acf0:	sub    dh,al
  40acf2:	jns    0x40acee
  40acf4:	bound  ebp,QWORD PTR ss:[edi]
  40acf7:	pop    edx
  40acf8:	enter  0xbdc5,0x1b
  40acfc:	enter  0x9a1f,0xd
  40ad00:	mov    cl,0x85
  40ad02:	jne    0x40ad42
  40ad04:	push   0x2415998e
  40ad09:	pop    ss
  40ad0a:	lods   al,BYTE PTR ds:[esi]
  40ad0b:	mov    edx,0xc40f9919
  40ad10:	fwait
  40ad11:	xchg   esp,eax
  40ad12:	xor    al,0x5b
  40ad14:	bound  edi,QWORD PTR [edi]
  40ad16:	push   ds
  40ad17:	out    0xca,al
  40ad19:	enter  0x7a2e,0x28
  40ad1d:	or     eax,DWORD PTR [ebx]
  40ad1f:	sbb    al,BYTE PTR [eax]
  40ad21:	fldenv [edx-0x641be60a]
  40ad27:	sub    DWORD PTR [esi+0x3f],esp
  40ad2a:	es push esp
  40ad2c:	pusha  
  40ad2d:	bound  esi,QWORD PTR [esi+0x1259f16c]
  40ad33:	xlat   BYTE PTR ds:[ebx]
  40ad34:	ret    
  40ad35:	jmp    DWORD PTR [ecx]
  40ad37:	xor    edx,DWORD PTR [edi]
  40ad39:	inc    eax
  40ad3a:	sub    al,0x4a
  40ad3c:	and    al,0x84
  40ad3e:	or     DWORD PTR [esi+eax*2],esi
  40ad41:	fisubr DWORD PTR [edi-0x3203702b]
  40ad47:	xchg   edx,eax
  40ad48:	mov    eax,ds:0x7bc4a1d3
  40ad4d:	fmul   QWORD PTR [ebx-0x4ebde29e]
  40ad53:	cmp    ah,dl
  40ad55:	mov    edx,edx
  40ad57:	out    0x1,al
  40ad59:	pusha  
  40ad5a:	inc    edx
  40ad5b:	adc    DWORD PTR [ecx+0x71f40580],edi
  40ad61:	pusha  
  40ad62:	inc    esi
  40ad63:	mov    al,ds:0x3dce4156
  40ad68:	arpl   WORD PTR [esi-0x5ab76a20],bx
  40ad6e:	pusha  
  40ad6f:	and    DWORD PTR ds:0xeaa7d217,ebx
  40ad75:	aam    0xcb
  40ad77:	in     eax,dx
  40ad78:	gs in  al,0xfd
  40ad7b:	sbb    al,0x54
  40ad7d:	test   eax,0x7701dbde
  40ad82:	shl    DWORD PTR [ecx+ebp*2+0x600847fb],1
  40ad89:	imul   ecx,DWORD PTR [edx],0x1877840
  40ad8f:	dec    esi
  40ad90:	cwde   
  40ad91:	in     al,dx
  40ad92:	pop    ds
  40ad93:	push   eax
  40ad94:	jo     0x40ad50
  40ad96:	arpl   bx,dx
  40ad98:	ins    BYTE PTR es:[edi],dx
  40ad99:	mov    WORD PTR [eax-0xe],ds
  40ad9c:	pop    ss
  40ad9d:	(bad)  
  40ad9e:	rcl    DWORD PTR [edi-0x1e9d4c9a],cl
  40ada4:	ja     0x40ae16
  40ada6:	fcomp  DWORD PTR [edi+0x3b]
  40ada9:	dec    edi
  40adaa:	mov    ah,ch
  40adac:	mov    ebx,0xd4cc0698
  40adb1:	adc    al,0x2c
  40adb3:	or     BYTE PTR [ebx],ah
  40adb5:	xor    eax,0xfd979e05
  40adba:	aad    0xdf
  40adbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adbd:	sub    eax,0x5956a366
  40adc2:	jecxz  0x40ade2
  40adc4:	push   ss
  40adc5:	or     DWORD PTR [ebx-0x22c348ab],ebx
  40adcb:	mov    edx,0x44deb976
  40add0:	and    al,ch
  40add2:	in     al,0xd3
  40add4:	mov    cl,0x2d
  40add6:	test   DWORD PTR [ebp+0x5c],ecx
  40add9:	push   eax
  40adda:	leave  
  40addb:	outs   dx,DWORD PTR ds:[esi]
  40addc:	out    0x2a,al
  40adde:	lods   al,BYTE PTR ds:[esi]
  40addf:	(bad)  
  40ade1:	shl    edi,0xa7
  40ade4:	pop    ebp
  40ade5:	enter  0x5dc9,0x6e
  40ade9:	cmp    BYTE PTR [edx+0x1a],0xff
  40aded:	xor    BYTE PTR [ebx],cl
  40adef:	pop    ebx
  40adf0:	outs   dx,BYTE PTR ds:[esi]
  40adf1:	jp     0x40add0
  40adf3:	push   ss
  40adf4:	mov    bh,0x24
  40adf6:	fsub   DWORD PTR [edi+0x1b]
  40adf9:	sahf   
  40adfa:	add    BYTE PTR [esi],bl
  40adfc:	hlt    
  40adfd:	test   al,0xe7
  40adff:	shl    dh,1
  40ae01:	xchg   BYTE PTR [edi],al
  40ae03:	stos   DWORD PTR es:[edi],eax
  40ae04:	and    al,0x48
  40ae06:	mov    ss,esp
  40ae08:	sti    
  40ae09:	aam    0x9c
  40ae0b:	inc    ecx
  40ae0c:	xchg   ebx,eax
  40ae0d:	mov    ch,0xa0
  40ae0f:	adc    ebx,esp
  40ae11:	mov    eax,0xd608c5d7
  40ae16:	(bad)  
  40ae17:	rol    BYTE PTR [ecx-0x3d],1
  40ae1a:	shr    DWORD PTR [esp+eiz*8+0x6a],1
  40ae1e:	mov    al,0x87
  40ae20:	sub    BYTE PTR [edi],0x30
  40ae23:	mov    dh,0xa0
  40ae25:	and    BYTE PTR [eax+0x1f246da5],ah
  40ae2b:	iret   
  40ae2c:	cmc    
  40ae2d:	xchg   edx,eax
  40ae2e:	cmp    eax,edi
  40ae30:	lods   eax,DWORD PTR ds:[esi]
  40ae31:	ins    DWORD PTR es:[edi],dx
  40ae32:	cmc    
  40ae33:	icebp  
  40ae34:	or     DWORD PTR [edi+0x8],ebx
  40ae37:	cmp    esp,DWORD PTR ds:0xe308f0ab
  40ae3d:	adc    BYTE PTR [edx-0x2c],dh
  40ae40:	and    BYTE PTR ss:[eax+edi*1+0x0],ah
  40ae45:	ror    ah,cl
  40ae47:	push   0xffffff9e
  40ae49:	push   es
  40ae4a:	and    esp,ecx
  40ae4c:	out    0x7a,eax
  40ae4e:	xor    DWORD PTR [esp+edx*8],esi
  40ae51:	loop   0x40ae85
  40ae53:	sub    al,bh
  40ae55:	and    al,0xb2
  40ae57:	jmp    FWORD PTR ds:0xb1b9cb18
  40ae5d:	mov    BYTE PTR [eax+0x1afb35dd],cl
  40ae63:	sub    DWORD PTR [edx+eiz*4],0xfc4057f2
  40ae6a:	pop    edi
  40ae6b:	std    
  40ae6c:	jmp    0x40ae93
  40ae6e:	cld    
  40ae6f:	shl    BYTE PTR [edi+0x64],1
  40ae72:	or     DWORD PTR [ebx-0x3f],ebx
  40ae75:	and    ah,BYTE PTR ds:[ebx-0x7c]
  40ae79:	fisub  DWORD PTR ds:0x61a89af
  40ae7f:	add    eax,0x2217b35f
  40ae84:	lods   eax,DWORD PTR ds:[esi]
  40ae85:	push   eax
  40ae86:	xchg   ebp,eax
  40ae87:	(bad)  
  40ae88:	shl    DWORD PTR [ecx+0x48],0xd
  40ae8c:	or     DWORD PTR [edx],ebp
  40ae8e:	add    dh,BYTE PTR [edx-0x4523751c]
  40ae94:	(bad)  
  40ae95:	aaa    
  40ae96:	xchg   esp,eax
  40ae97:	outs   dx,DWORD PTR ds:[esi]
  40ae98:	cs stos BYTE PTR es:[edi],al
  40ae9a:	add    BYTE PTR [ecx],0x6a
  40ae9d:	pop    ecx
  40ae9e:	ror    BYTE PTR [edx+0x4a],cl
  40aea1:	pusha  
  40aea2:	sahf   
  40aea3:	mov    ebx,0x2eaee65e
  40aea8:	sub    dh,BYTE PTR [eax-0x79]
  40aeab:	int    0xc1
  40aead:	jbe    0x40aeb6
  40aeaf:	gs pop ss
  40aeb1:	cld    
  40aeb2:	test   eax,0x157616f2
  40aeb7:	push   ecx
  40aeb8:	lahf   
  40aeb9:	mov    ebp,esi
  40aebb:	lods   eax,DWORD PTR ds:[esi]
  40aebc:	xor    eax,0xaaab788d
  40aec1:	inc    edx
  40aec2:	mov    esi,DWORD PTR [edx]
  40aec4:	pop    eax
  40aec5:	xchg   ebp,eax
  40aec6:	pop    edi
  40aec7:	adc    DWORD PTR ds:0x2e9d,esi
  40aecc:	and    BYTE PTR [eax+0x2e],0xd1
  40aed0:	cmp    BYTE PTR [ebp+0x4d2ba635],0x2b
  40aed7:	jge    0x40ae79
  40aed9:	pop    esp
  40aeda:	lock sbb eax,0xfe27c853
  40aee0:	(bad)  
  40aee2:	in     eax,dx
  40aee3:	cdq    
  40aee4:	jbe    0x40aed6
  40aee6:	ret    0xcad9
  40aee9:	das    
  40aeea:	push   0x5b074a53
  40aeef:	mov    BYTE PTR ss:[eax-0x57],ch
  40aef3:	mov    es,WORD PTR [edi+0x21c341b6]
  40aef9:	push   edi
  40aefa:	pop    edi
  40aefc:	and    DWORD PTR [eax+0x1],ebx
  40aeff:	cdq    
  40af00:	push   esp
  40af01:	sub    edx,DWORD PTR [edi+0x4d]
  40af04:	ja     0x40af52
  40af06:	pop    eax
  40af07:	dec    esp
  40af08:	aam    0x2a
  40af0a:	rcr    DWORD PTR [edx-0x46],1
  40af0d:	jns    0x40af8c
  40af0f:	inc    edi
  40af10:	and    BYTE PTR [eax+0x778d5488],cl
  40af16:	push   ss
  40af17:	mov    BYTE PTR [esi],dh
  40af19:	cli    
  40af1a:	int    0xba
  40af1c:	xchg   DWORD PTR [ebp+0x64],ebx
  40af1f:	pop    edx
  40af20:	popf   
  40af21:	mov    dh,0x15
  40af23:	fs ret 
  40af25:	mov    esi,ebp
  40af27:	(bad)  
  40af28:	and    DWORD PTR [ebx],eax
  40af2a:	dec    esp
  40af2b:	cdq    
  40af2c:	test   al,0x6
  40af2e:	xor    bl,BYTE PTR [edi+0x6c]
  40af31:	mov    fs,WORD PTR [eax-0x2f]
  40af34:	and    esp,DWORD PTR [edx+0x72ef33f3]
  40af3a:	add    ecx,DWORD PTR [ecx+eax*2]
  40af3d:	xchg   edx,eax
  40af3e:	sahf   
  40af3f:	mov    esp,esi
  40af41:	cmp    eax,0x65e9bed0
  40af46:	push   ecx
  40af47:	(bad)  [eax+0x4bf378d8]
  40af4d:	jp     0x40afb0
  40af4f:	or     ecx,esi
  40af51:	pop    eax
  40af52:	xchg   ebx,eax
  40af53:	adc    ebx,ecx
  40af55:	(bad)  
  40af57:	rcr    DWORD PTR [edi-0x16],0x22
  40af5b:	daa    
  40af5c:	push   eax
  40af5d:	ja     0x40af82
  40af5f:	outs   dx,BYTE PTR ds:[esi]
  40af60:	sub    al,BYTE PTR [esi-0x26da5974]
  40af66:	mul    BYTE PTR [esi-0x4845166e]
  40af6c:	int3   
  40af6d:	jae    0x40afaa
  40af6f:	xchg   ebx,edi
  40af71:	push   ss
  40af72:	mov    esi,0xc015cc49
  40af77:	(bad)  
  40af78:	jmp    0xf9ad:0xed09c72f
  40af7f:	and    BYTE PTR [ecx-0x62],0x8
  40af83:	push   0xffffffcf
  40af85:	inc    BYTE PTR [esi+0x2a7bff91]
  40af8b:	inc    ecx
  40af8c:	(bad)  
  40af8d:	dec    ebp
  40af8e:	dec    ebp
  40af8f:	int    0x58
  40af91:	pusha  
  40af92:	stos   BYTE PTR es:[edi],al
  40af93:	inc    ecx
  40af94:	add    cl,BYTE PTR [ebp+0x12cd7cc8]
  40af9a:	push   ds
  40af9b:	scas   eax,DWORD PTR es:[edi]
  40af9c:	adc    al,0x80
  40af9e:	xor    DWORD PTR [esi],edx
  40afa0:	mov    esp,esi
  40afa2:	xlat   BYTE PTR ds:[ebx]
  40afa3:	xor    DWORD PTR [esi],ebx
  40afa5:	lds    ecx,FWORD PTR [eax]
  40afa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa8:	addr16 adc al,0x23
  40afab:	inc    ecx
  40afac:	jne    0x40af42
  40afae:	pop    ds
  40afaf:	inc    esi
  40afb0:	stos   DWORD PTR es:[edi],eax
  40afb1:	mov    cl,BYTE PTR [esi-0x45]
  40afb4:	cmp    DWORD PTR [eax],ebx
  40afb6:	jno    0x40b00d
  40afb8:	jl     0x40afb2
  40afba:	xor    DWORD PTR [edx],ebx
  40afbc:	push   ds
  40afbd:	shl    DWORD PTR [ebp-0x48],1
  40afc0:	(bad)  
  40afc2:	aas    
  40afc3:	dec    esp
  40afc4:	mov    ds:0x33b80542,al
  40afc9:	enter  0x730e,0xe5
  40afcd:	or     esp,ebx
  40afcf:	data16 xlat BYTE PTR ds:[ebx]
  40afd1:	push   esi
  40afd2:	or     bl,dl
  40afd4:	cdq    
  40afd5:	loop   0x40b01d
  40afd7:	(bad)  
  40afd8:	cli    
  40afd9:	(bad)  
  40afdb:	sti    
  40afdc:	mov    esp,0xbd32c621
  40afe1:	adc    al,0x12
  40afe3:	and    DWORD PTR [ecx+0x25],esi
  40afe6:	pop    ebx
  40afe7:	fs dec esi
  40afe9:	or     esi,ebx
  40afeb:	jp     0x40af81
  40afed:	lahf   
  40afee:	jmp    0xc2f8c5b4
  40aff3:	jo     0x40b058
  40aff5:	fptan  
  40aff7:	xor    eax,0x8d7ba75a
  40affc:	ins    BYTE PTR es:[edi],dx
  40affd:	pop    ebp
  40affe:	cmp    DWORD PTR [ecx-0x5],esi
  40b001:	sub    esi,esp
  40b003:	xor    DWORD PTR [ebx+0x6cb53c72],esi
  40b009:	cli    
  40b00a:	test   BYTE PTR [edx],bl
  40b00c:	and    ah,BYTE PTR [ebx]
  40b00e:	adc    eax,0x4775950
  40b013:	jae    0x40afe9
  40b015:	test   al,0xc1
  40b017:	pop    ss
  40b018:	sub    al,0x2d
  40b01a:	ja     0x40b039
  40b01c:	dec    edi
  40b01d:	mov    cl,0xaa
  40b01f:	mov    ebp,esp
  40b021:	stos   DWORD PTR es:[edi],eax
  40b022:	add    BYTE PTR [ebp+edi*4+0x1cef4afe],bh
  40b029:	mov    bl,0xf2
  40b02b:	in     al,dx
  40b02c:	push   eax
  40b02d:	cld    
  40b02e:	outs   dx,DWORD PTR ds:[esi]
  40b02f:	pop    edx
  40b030:	sub    BYTE PTR [ecx+ebx*8+0x2dfc4c63],ah
  40b037:	mov    ebp,0x62aaebfd
  40b03c:	mov    esi,0x9dbb4f4a
  40b041:	push   ebp
  40b042:	mov    ch,0xa2
  40b044:	lock mov dh,0x92
  40b047:	inc    edi
  40b048:	pop    eax
  40b049:	dec    ecx
  40b04a:	and    eax,0xe1bdf78c
  40b04f:	call   0xc76e:0xe7c760e8
  40b056:	lock lea ebp,[ebp+0x65]
  40b05a:	jne    0x40b016
  40b05c:	cld    
  40b05d:	mov    cl,0xf
  40b05f:	idiv   DWORD PTR [edx+edi*2+0x4990fd10]
  40b066:	fstp   QWORD PTR [edi-0x1ea08c27]
  40b06c:	add    BYTE PTR [edi-0x7f],ah
  40b06f:	jmp    0x9399:0xbd1c8870
  40b076:	adc    al,0x33
  40b078:	in     eax,dx
  40b079:	cwde   
  40b07a:	pop    edx
  40b07b:	repz sbb BYTE PTR [esi-0x1f],0xec
  40b080:	inc    edi
  40b081:	sub    dl,dl
  40b083:	add    DWORD PTR [edi-0x75],ebp
  40b086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b087:	dec    DWORD PTR [edi+0x49]
  40b08a:	or     ch,0x7d
  40b08d:	jbe    0x40b06e
  40b08f:	mov    bh,0xfc
  40b091:	xchg   ebx,eax
  40b092:	push   eax
  40b093:	ret    
  40b094:	cmpxchg DWORD PTR [edx+ebp*1+0x1a0aacf2],ebx
  40b09c:	fcmovnu st,st(4)
  40b09e:	mov    esi,fs
  40b0a0:	sub    bh,BYTE PTR gs:[ebp+0x75]
  40b0a4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40b0a6:	mov    esi,0xa1ee95cd
  40b0ab:	cmc    
  40b0ac:	fsubr  DWORD PTR [ebp-0x52]
  40b0af:	outs   dx,BYTE PTR ds:[esi]
  40b0b0:	into   
  40b0b1:	in     eax,dx
  40b0b2:	sbb    al,0xf4
  40b0b4:	into   
  40b0b5:	sub    eax,0x1d26b778
  40b0ba:	sub    al,0x25
  40b0bc:	arpl   WORD PTR [esp+edx*8+0x22597bbb],di
  40b0c3:	ja     0x40b04e
  40b0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c6:	fdivr  QWORD PTR [ebx+ecx*8-0x44]
  40b0ca:	cdq    
  40b0cb:	stos   BYTE PTR es:[edi],al
  40b0cc:	(bad)  
  40b0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0cf:	cwde   
  40b0d0:	or     DWORD PTR [esi],esp
  40b0d2:	sub    al,0x5d
  40b0d4:	jmp    0x972ca487
  40b0d9:	stc    
  40b0da:	retf   
  40b0db:	test   BYTE PTR [edx-0x2fb0a85f],0x93
  40b0e2:	sti    
  40b0e3:	and    BYTE PTR [eax-0x2a],cl
  40b0e6:	jno    0x40b097
  40b0e8:	cmp    dl,BYTE PTR [edi]
  40b0ea:	xchg   ebx,eax
  40b0eb:	push   ebp
  40b0ec:	cmp    DWORD PTR [esi+esi*2+0x4e],ebx
  40b0f0:	das    
  40b0f1:	gs pop eax
  40b0f3:	mov    bl,0xf8
  40b0f5:	or     DWORD PTR [ecx-0x52],eax
  40b0f8:	cmp    esp,DWORD PTR [ebx]
  40b0fa:	dec    ebp
  40b0fb:	popf   
  40b0fc:	sar    dl,0x92
  40b0ff:	mov    ch,0x6d
  40b101:	pop    edx
  40b102:	xor    BYTE PTR [ebp+0x47],bl
  40b105:	mov    edi,0x822dc52b
  40b10a:	call   ebp
  40b10c:	fild   QWORD PTR [esi+0x72446f6f]
  40b112:	adc    ecx,DWORD PTR [ecx+0x47]
  40b115:	adc    al,0x3c
  40b117:	add    BYTE PTR [ecx-0x2a],dh
  40b11a:	les    edx,FWORD PTR ds:0x3fb47861
  40b120:	dec    ebp
  40b121:	call   DWORD PTR [ecx]
  40b123:	aad    0xbe
  40b125:	mov    bh,0x4c
  40b127:	xchg   ecx,eax
  40b128:	sub    edi,0x11
  40b12b:	inc    edi
  40b12c:	or     eax,0x7967d293
  40b131:	test   DWORD PTR [esi+0x76c30463],ebp
  40b137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b138:	dec    ecx
  40b139:	loope  0x40b171
  40b13b:	cdq    
  40b13c:	sub    eax,0x47e824cb
  40b141:	inc    eax
  40b142:	ds repnz jecxz 0x40b1ae
  40b146:	or     al,0xd8
  40b148:	shl    BYTE PTR [ebx+0x1],0x7d
  40b14c:	je     0x40b1b7
  40b14e:	xchg   edi,eax
  40b14f:	sbb    BYTE PTR [edx],al
  40b151:	sti    
  40b152:	aad    0x99
  40b154:	mov    esp,0xe674f227
  40b159:	retf   0x4461
  40b15c:	popa   
  40b15d:	inc    esi
  40b15e:	int    0xc7
  40b160:	jbe    0x40b179
  40b162:	cdq    
  40b163:	pop    esp
  40b164:	fs or  al,0x27
  40b167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b168:	xlat   BYTE PTR ds:[ebx]
  40b169:	cli    
  40b16a:	and    esp,DWORD PTR [ebp+0x37]
  40b16d:	outs   dx,DWORD PTR ds:[esi]
  40b16e:	repnz pop eax
  40b170:	pop    ebx
  40b171:	push   cs
  40b172:	cmp    BYTE PTR [ecx+0x6619fd1d],0x57
  40b179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b17a:	push   edx
  40b17b:	lock int 0xe9
  40b17e:	(bad)  
  40b17f:	fistp  DWORD PTR [eax-0x49]
  40b182:	enter  0x628d,0xa6
  40b186:	push   eax
  40b187:	jg     0x40b194
  40b189:	push   ecx
  40b18a:	in     eax,0x41
  40b18c:	mov    dl,dh
  40b18e:	fwait
  40b18f:	sub    BYTE PTR [ecx*4-0x127edc73],0xc3
  40b197:	(bad)  
  40b198:	bound  ebp,QWORD PTR [esi-0x71]
  40b19b:	loop   0x40b16f
  40b19d:	inc    ecx
  40b19e:	dec    edi
  40b19f:	push   0x7
  40b1a1:	div    DWORD PTR [ebx+0xc627828]
  40b1a7:	mov    ds:0xab11ca2b,al
  40b1ac:	dec    esi
  40b1ad:	neg    DWORD PTR [edx]
  40b1af:	sbb    eax,0xb381d424
  40b1b4:	mov    al,ds:0xb068b690
  40b1b9:	add    al,0x5d
  40b1bb:	call   0x3b212ebb
  40b1c0:	xor    DWORD PTR [ebp+0x1bf9904b],edi
  40b1c6:	jge    0x40b197
  40b1c8:	loop   0x40b227
  40b1ca:	xor    dh,BYTE PTR ds:0x772295fa
  40b1d0:	inc    ebx
  40b1d1:	sub    al,0x12
  40b1d3:	push   ebp
  40b1d4:	and    al,0xbc
  40b1d6:	scas   eax,DWORD PTR es:[edi]
  40b1d7:	sbb    ch,ah
  40b1d9:	outs   dx,DWORD PTR ds:[esi]
  40b1da:	push   es
  40b1db:	and    edx,ecx
  40b1dd:	lock aam 0x79
  40b1e0:	inc    edx
  40b1e1:	jmp    0xebdffd3a
  40b1e6:	xchg   esp,eax
  40b1e7:	icebp  
  40b1e8:	ftst   
  40b1ea:	sbb    BYTE PTR es:[edx+0x18],0x1b
  40b1ef:	std    
  40b1f0:	call   0xe5d010a5
  40b1f5:	shl    DWORD PTR [esi],0xee
  40b1f8:	mov    edi,DWORD PTR [ecx-0x5b2cf026]
  40b1fe:	test   BYTE PTR [edi-0x205adc50],ah
  40b204:	js     0x40b22b
  40b206:	cmp    dh,BYTE PTR [ebx]
  40b208:	iret   
  40b209:	mov    eax,ds:0x25201984
  40b20e:	mov    esi,0xa432b750
  40b213:	leave  
  40b214:	retf   
  40b215:	ss dec edx
  40b217:	add    edx,DWORD PTR [ebx-0x7e]
  40b21a:	adc    eax,0xd607cfa7
  40b21f:	xchg   ecx,eax
  40b220:	in     eax,dx
  40b221:	stos   BYTE PTR es:[edi],al
  40b222:	jge    0x40b1cf
  40b224:	scas   al,BYTE PTR es:[edi]
  40b225:	arpl   WORD PTR [ecx],cx
  40b227:	call   0x919211a3
  40b22c:	loop   0x40b1ef
  40b22e:	sub    edx,DWORD PTR [ecx-0xe]
  40b231:	leave  
  40b232:	sub    dh,ah
  40b234:	xchg   ebp,eax
  40b235:	adc    al,0x6a
  40b237:	jecxz  0x40b1c5
  40b239:	adc    al,BYTE PTR [edx]
  40b23b:	loope  0x40b272
  40b23d:	ins    BYTE PTR es:[edi],dx
  40b23e:	or     ah,bl
  40b240:	ret    0x8c2d
  40b243:	outs   dx,BYTE PTR ds:[esi]
  40b244:	xchg   ebp,eax
  40b245:	sti    
  40b246:	cmc    
  40b247:	jbe    0x40b1de
  40b249:	mov    ds:0x3ea9d872,al
  40b24e:	fbld   TBYTE PTR [esi]
  40b250:	fdiv   DWORD PTR [ebx+0x35ceb4d]
  40b256:	mov    ds:0x90c95cd5,eax
  40b25b:	aam    0x6e
  40b25d:	cli    
  40b25e:	mov    esp,0x632c434c
  40b263:	jmp    0xff3fc204
  40b268:	cs xchg edx,eax
  40b26a:	mov    ebx,0x88568ecc
  40b26f:	adc    ch,ah
  40b271:	je     0x40b225
  40b273:	jae    0x40b231
  40b275:	ret    
  40b276:	pop    ss
  40b277:	sub    BYTE PTR [edi+0x3b613a1f],dh
  40b27d:	inc    esi
  40b27e:	xor    ecx,DWORD PTR [esi+eiz*2+0x7b0f6850]
  40b285:	xchg   edx,eax
  40b286:	cdq    
  40b287:	inc    esp
  40b288:	add    bh,BYTE PTR [ebx-0x1a17198f]
  40b28e:	dec    edx
  40b28f:	mov    ebx,0x5c4c4dcc
  40b294:	push   0xffffffbb
  40b296:	fadd   QWORD PTR [edx]
  40b298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b299:	xlat   BYTE PTR ds:[ebx]
  40b29a:	call   0x60d86a20
  40b29f:	push   edi
  40b2a0:	jle    0x40b22e
  40b2a2:	and    eax,0x6d230401
  40b2a7:	fwait
  40b2a8:	pop    esp
  40b2a9:	xor    esp,ebp
  40b2ab:	inc    si
  40b2ad:	lea    edi,[edx+eax*8+0x3bef7ab3]
  40b2b4:	(bad)  
  40b2b5:	(bad)  
  40b2b6:	aad    0xe3
  40b2b8:	ret    
  40b2b9:	fdiv   DWORD PTR ds:0xe428029a
  40b2bf:	push   edx
  40b2c0:	dec    esp
  40b2c1:	int    0x7f
  40b2c3:	xlat   BYTE PTR ds:[ebx]
  40b2c4:	fdivr  DWORD PTR [esi]
  40b2c6:	mov    al,0xa3
  40b2c8:	cmp    DWORD PTR [edx],ecx
  40b2ca:	inc    esp
  40b2cb:	mov    cl,cl
  40b2cd:	aad    0xd1
  40b2cf:	and    DWORD PTR [eax-0x7935ebbb],esp
  40b2d5:	pop    ebp
  40b2d6:	call   0x23ed01e7
  40b2db:	shl    ebp,1
  40b2dd:	push   esi
  40b2de:	and    dh,ch
  40b2e0:	mov    dl,al
  40b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e3:	test   eax,0x84a3cf0
  40b2e8:	xor    bl,BYTE PTR [edi]
  40b2ea:	mov    bh,0xb4
  40b2ec:	popf   
  40b2ed:	adc    ecx,DWORD PTR [esi+edi*1]
  40b2f0:	cmp    eax,0xca3f436f
  40b2f5:	adc    al,BYTE PTR ds:0xd12c33bb
  40b2fb:	inc    eax
  40b2fc:	shr    ecx,0x69
  40b2ff:	not    BYTE PTR [esi-0x19]
  40b302:	sub    al,0xd8
  40b304:	aaa    
  40b305:	nop
  40b306:	fcomp  QWORD PTR [ecx-0xf0c398f]
  40b30c:	dec    ebp
  40b30d:	jmp    0x3bf6:0x9dab495b
  40b314:	dec    esi
  40b315:	cdq    
  40b316:	adc    edi,DWORD PTR [edx]
  40b318:	adc    eax,0xa20a8204
  40b31d:	pop    ss
  40b31e:	adc    al,0x44
  40b320:	outs   dx,DWORD PTR ds:[esi]
  40b321:	push   esi
  40b322:	pop    ecx
  40b323:	xchg   esi,eax
  40b324:	jl     0x40b2de
  40b326:	loop   0x40b389
  40b328:	fstp   DWORD PTR [ebx-0x55]
  40b32b:	push   0xffffffaa
  40b32d:	fistp  QWORD PTR [ebx-0x42]
  40b330:	cmp    BYTE PTR [ecx+0x1a],al
  40b333:	jo     0x40b2e8
  40b335:	fwait
  40b336:	into   
  40b337:	push   edi
  40b338:	sbb    ch,cl
  40b33a:	mov    dh,0xdd
  40b33c:	ins    DWORD PTR es:[edi],dx
  40b33d:	in     al,dx
  40b33e:	or     BYTE PTR [ecx-0x34cc1215],dh
  40b344:	inc    edi
  40b345:	jnp    0x40b340
  40b347:	mov    ?,WORD PTR [esi]
  40b349:	cdq    
  40b34a:	xlat   BYTE PTR ds:[ebx]
  40b34b:	aam    0x3d
  40b34d:	mov    ecx,0x5fd34760
  40b352:	jno    0x40b356
  40b354:	inc    esp
  40b355:	xor    al,0xa0
  40b357:	scas   al,BYTE PTR es:[edi]
  40b358:	fld    QWORD PTR [bx-0x7c58]
  40b35d:	and    BYTE PTR [ebx-0x251badf],bl
  40b363:	sub    ebx,DWORD PTR [eax]
  40b365:	sbb    dh,dl
  40b367:	inc    eax
  40b368:	nop
  40b369:	scas   eax,DWORD PTR es:[edi]
  40b36a:	cmp    bl,dl
  40b36c:	jo     0x40b2f0
  40b36e:	iret   
  40b36f:	xchg   DWORD PTR [edx],edx
  40b371:	mov    gs,ecx
  40b373:	jbe    0x40b363
  40b375:	mov    ch,0xd1
  40b377:	or     DWORD PTR [ecx+ecx*4-0x479cea8a],eax
  40b37e:	dec    esp
  40b37f:	inc    ecx
  40b380:	je     0x40b3aa
  40b382:	int    0x71
  40b384:	test   DWORD PTR [edx-0x6f],ebx
  40b387:	or     al,BYTE PTR [esi-0x4c]
  40b38a:	popf   
  40b38b:	xlat   BYTE PTR ds:[ebx]
  40b38c:	loopne 0x40b312
  40b38e:	js     0x40b398
  40b390:	inc    ebx
  40b391:	ins    DWORD PTR es:[edi],dx
  40b392:	in     eax,dx
  40b393:	mov    al,0x1
  40b395:	dec    edi
  40b396:	(bad)  
  40b398:	repz xor al,0x33
  40b39b:	mov    edi,0x84887143
  40b3a0:	push   ds
  40b3a1:	jp     0x40b357
  40b3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a4:	rol    esp,1
  40b3a6:	adc    eax,0x408d6465
  40b3ab:	aaa    
  40b3ac:	and    BYTE PTR [eax],dl
  40b3ae:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b3b0:	fnsave [edx+esi*1]
  40b3b3:	leave  
  40b3b4:	mov    dh,0xb7
  40b3b6:	or     eax,0x9d18c2e7
  40b3bb:	and    al,0x53
  40b3bd:	push   edi
  40b3be:	or     DWORD PTR [bx+di+0x25cd],0xffffffef
  40b3c4:	cmp    eax,0xb9b8b46d
  40b3c9:	lods   eax,DWORD PTR ds:[esi]
  40b3ca:	(bad)  
  40b3cb:	jno    0x40b3cb
  40b3cd:	or     al,0x43
  40b3cf:	test   al,0x6d
  40b3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d2:	mov    edx,0x3fc6267
  40b3d7:	push   ecx
  40b3d8:	or     DWORD PTR [ecx],esp
  40b3da:	je     0x40b383
  40b3dc:	mov    es,ebx
  40b3de:	and    ecx,esi
  40b3e0:	or     ebx,DWORD PTR [ebx+esi*8+0xe73ee0a]
  40b3e7:	rcl    DWORD PTR [ecx*8-0x64d97213],1
  40b3ee:	push   edx
  40b3ef:	and    ebp,0xfffffff9
  40b3f2:	push   ebx
  40b3f3:	push   0xffffffd8
  40b3f5:	and    eax,0x62fa375f
  40b3fa:	das    
  40b3fb:	retf   0xfb86
  40b3fe:	int3   
  40b3ff:	js     0x40b406
  40b401:	into   
  40b402:	cmp    edi,ebx
  40b404:	pop    ecx
  40b405:	cmp    BYTE PTR [ecx+0x45],ah
  40b408:	jmp    0x40b459
  40b40a:	mov    cl,0xe8
  40b40c:	(bad)  
  40b40d:	rcr    BYTE PTR [eax],cl
  40b40f:	fmul   QWORD PTR [eax+edi*2-0x4d89889]
  40b416:	jmp    0x850f:0xfe3dc69
  40b41d:	or     DWORD PTR [edi],edi
  40b41f:	popf   
  40b420:	sub    esp,edx
  40b422:	ds jp  0x40b46b
  40b425:	inc    edi
  40b426:	adc    eax,0xbad32d5b
  40b42b:	iret   
  40b42c:	jae    0x40b3d7
  40b42e:	fild   WORD PTR [edi]
  40b430:	and    ecx,DWORD PTR [esi-0x55]
  40b433:	data16 je 0x40b3bc
  40b436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b437:	jne    0x40b478
  40b439:	repnz in eax,0x29
  40b43c:	ret    0xb8f9
  40b43f:	fwait
  40b440:	arpl   WORD PTR [esi],bp
  40b442:	and    DWORD PTR [ebx+0x319f52a1],0x5a
  40b449:	sbb    ah,dl
  40b44b:	mov    esi,0x3519a0e6
  40b450:	lods   eax,DWORD PTR ds:[esi]
  40b451:	mov    ds:0x71b9de26,eax
  40b456:	and    bh,BYTE PTR [ecx+0x7]
  40b459:	mov    dh,0xcc
  40b45b:	adc    al,0xc5
  40b45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b45e:	test   edi,0x1b1c9383
  40b464:	and    BYTE PTR [ebx-0x6c],bh
  40b467:	(bad)  
  40b468:	repnz pop ss
  40b46a:	sahf   
  40b46b:	xchg   BYTE PTR [ebp+0x4],bl
  40b46e:	dec    eax
  40b46f:	fbstp  TBYTE PTR cs:[ebp*1+0x65e727d9]
  40b477:	ins    DWORD PTR es:[edi],dx
  40b478:	fist   DWORD PTR [esi+0x1b]
  40b47b:	jo     0x40b49c
  40b47d:	push   0x33
  40b47f:	repnz pop esi
  40b481:	push   esi
  40b482:	add    BYTE PTR [edi-0x29],0xc2
  40b486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b487:	inc    ebx
  40b488:	in     eax,dx
  40b489:	arpl   WORD PTR ds:0xfe3d953e,cx
  40b48f:	inc    edi
  40b490:	(bad)  
  40b491:	scas   al,BYTE PTR es:[edi]
  40b492:	push   ds
  40b493:	ror    BYTE PTR [ecx+esi*4+0x2a],1
  40b497:	adc    eax,0x755e1f17
  40b49c:	scas   al,BYTE PTR es:[edi]
  40b49d:	retf   0x8ce9
  40b4a0:	or     BYTE PTR [eax],ch
  40b4a2:	cmp    al,0xe0
  40b4a4:	inc    ecx
  40b4a5:	in     al,dx
  40b4a6:	shl    ebp,cl
  40b4a8:	ss pop ebp
  40b4aa:	lea    ebx,[edx]
  40b4ac:	xor    BYTE PTR [edx+ecx*2-0x626020af],bl
  40b4b3:	push   cs
  40b4b4:	int    0xf5
  40b4b6:	cmp    eax,0x5fcf1074
  40b4bb:	xchg   BYTE PTR [ecx+0x30],al
  40b4be:	adc    esp,esi
  40b4c0:	inc    esi
  40b4c1:	and    DWORD PTR [esi+0x7a20b67d],edx
  40b4c7:	inc    edi
  40b4c8:	xlat   BYTE PTR ds:[ebx]
  40b4c9:	pop    ebx
  40b4ca:	push   edx
  40b4cb:	icebp  
  40b4cc:	sub    ah,ah
  40b4ce:	aaa    
  40b4cf:	mov    edi,0x7811b30a
  40b4d4:	jb     0x40b4bf
  40b4d6:	pop    ebp
  40b4d7:	fnsave [ebx-0x5e0d4399]
  40b4dd:	mov    edi,0xbf55631d
  40b4e2:	fwait
  40b4e3:	xchg   ecx,eax
  40b4e4:	inc    esp
  40b4e5:	mov    ecx,0x4c6292fa
  40b4ea:	test   eax,0x6f83a653
  40b4ef:	jo     0x40b4e7
  40b4f1:	jg     0x40b48e
  40b4f3:	add    DWORD PTR [edi-0x46f58439],eax
  40b4f9:	pop    esp
  40b4fa:	aam    0xf0
  40b4fc:	add    DWORD PTR [ebx+0x5fadfc72],0xffffff81
  40b503:	gs jns 0x40b4e6
  40b506:	stos   DWORD PTR es:[edi],eax
  40b507:	xchg   esi,eax
  40b508:	outs   dx,DWORD PTR ds:[esi]
  40b509:	pop    ebx
  40b50a:	add    edi,DWORD PTR [esp+esi*1-0x7b]
  40b50e:	dec    esi
  40b50f:	in     al,0x52
  40b511:	clc    
  40b512:	aam    0x3b
  40b514:	jb     0x40b49e
  40b516:	cmp    eax,0xb0a3bdb2
  40b51b:	cdq    
  40b51c:	outs   dx,BYTE PTR ds:[esi]
  40b51d:	es inc ebx
  40b51f:	int    0x3b
  40b521:	pop    es
  40b522:	mov    ecx,0x3839d89d
  40b527:	dec    esi
  40b528:	xchg   ebp,eax
  40b529:	inc    edi
  40b52a:	and    ah,BYTE PTR [eax-0x660b7520]
  40b530:	push   ebp
  40b531:	xor    BYTE PTR [esp+edx*8-0x2d13ad44],cl
  40b538:	scas   al,BYTE PTR es:[edi]
  40b539:	repz jge 0x40b54e
  40b53c:	pusha  
  40b53d:	sub    BYTE PTR [ecx],bl
  40b53f:	jns    0x40b532
  40b541:	mov    ecx,0x1a9eab06
  40b546:	popa   
  40b547:	sti    
  40b548:	pop    ebp
  40b549:	dec    edx
  40b54a:	inc    eax
  40b54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b54c:	test   eax,0xfa3e3d40
  40b551:	mov    edx,0x4f138527
  40b556:	pop    es
  40b557:	jmp    0xa650f545
  40b55c:	sar    BYTE PTR [edx+eiz*8+0x30],cl
  40b560:	mov    cl,0xa8
  40b562:	fwait
  40b563:	jns    0x40b580
  40b565:	adc    bl,dh
  40b567:	sbb    eax,esi
  40b569:	das    
  40b56a:	jle    0x40b58f
  40b56c:	or     eax,0x11748117
  40b571:	repnz iret 
  40b573:	inc    ecx
  40b574:	jmp    0x40b5a6
  40b576:	sbb    eax,0x21669d9b
  40b57b:	jg     0x40b597
  40b57d:	ror    BYTE PTR [ebx+edx*4+0x5011e9ff],cl
  40b584:	xchg   DWORD PTR [edi],ebp
  40b586:	les    ebp,FWORD PTR [edx+0x29560bc4]
  40b58c:	data16 xor al,0xbe
  40b58f:	pop    ds
  40b590:	jl     0x40b5fc
  40b592:	and    DWORD PTR [ebx],0x914cde74
  40b598:	mov    eax,ds:0xf642b59e
  40b59d:	gs test eax,0x7d063449
  40b5a3:	lods   al,BYTE PTR ds:[esi]
  40b5a4:	push   0x6a
  40b5a6:	je     0x40b5f8
  40b5a8:	scas   al,BYTE PTR es:[edi]
  40b5a9:	in     al,0x7b
  40b5ab:	adc    eax,0x2f07945b
  40b5b0:	pop    esi
  40b5b1:	out    dx,eax
  40b5b2:	mov    edi,eax
  40b5b4:	dec    edi
  40b5b5:	push   ebp
  40b5b6:	push   es
  40b5b7:	gs into 
  40b5b9:	clc    
  40b5ba:	in     eax,0xc8
  40b5bc:	cmp    al,0xcc
  40b5be:	aaa    
  40b5bf:	xlat   BYTE PTR ds:[ebx]
  40b5c0:	mov    dl,0x9e
  40b5c2:	jb     0x40b572
  40b5c4:	push   esp
  40b5c5:	jmp    0x40b582
  40b5c7:	cs pop esi
  40b5c9:	jo     0x40b63c
  40b5cb:	rcr    dh,cl
  40b5cd:	sar    DWORD PTR [esi+ebp*1],cl
  40b5d0:	xchg   BYTE PTR [edx],dl
  40b5d2:	xor    BYTE PTR [ebp+0x0],dh
  40b5d5:	mov    eax,ds:0x8e869b5a
  40b5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5db:	mov    eax,ds:0x50c18219
  40b5e0:	jmp    0xf7999319
  40b5e5:	or     BYTE PTR [eax],0x5c
  40b5e8:	xchg   edx,eax
  40b5e9:	das    
  40b5ea:	xor    al,0xd6
  40b5ec:	jge    0x40b5ad
  40b5ee:	pop    edi
  40b5ef:	fldenv [bp+di+0x4325]
  40b5f4:	cmp    ch,BYTE PTR [eax-0x59]
  40b5f7:	addr16 mov al,0x43
  40b5fa:	fnstenv [ebx+0x17]
  40b5fd:	mov    ebx,0xb70290a3
  40b602:	fmul   DWORD PTR [edx-0x5a0c2cb6]
  40b608:	int    0xf4
  40b60a:	cmp    dh,BYTE PTR [ebx-0x5a]
  40b60d:	in     al,0x3e
  40b60f:	mov    bh,0x47
  40b611:	js     0x40b5fd
  40b613:	pop    edi
  40b614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b615:	sub    al,0x96
  40b617:	loop   0x40b5d7
  40b619:	sub    ch,BYTE PTR [esi-0x112c567f]
  40b61f:	out    dx,eax
  40b620:	int    0x49
  40b622:	in     eax,dx
  40b623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b624:	mov    ebp,0x486e1d68
  40b629:	jmp    0x40b68c
  40b62b:	pop    ebp
  40b62c:	jnp    0x40b5b9
  40b62e:	add    BYTE PTR [eax],bh
  40b630:	ror    BYTE PTR [edi+0x5c],1
  40b633:	mov    ch,0x7f
  40b635:	cmp    DWORD PTR [ebp+0x1a815dee],esp
  40b63b:	or     eax,0xef8c0825
  40b640:	loopne 0x40b6b5
  40b642:	lods   al,BYTE PTR ds:[esi]
  40b643:	xchg   edx,eax
  40b644:	cmp    eax,0xd71ae28d
  40b649:	(bad)  
  40b64a:	pop    ebx
  40b64b:	scas   al,BYTE PTR es:[edi]
  40b64c:	ret    
  40b64d:	shl    cl,1
  40b64f:	retf   
  40b650:	retf   
  40b651:	loop   0x40b644
  40b653:	push   esi
  40b654:	add    al,ah
  40b656:	dec    sp
  40b658:	mov    eax,0x2dd3b5f2
  40b65d:	sub    edx,DWORD PTR [ebx-0x2f03c360]
  40b663:	cmp    BYTE PTR [eax],ah
  40b665:	mov    eax,ds:0x6dd9003
  40b66a:	mov    dl,0x14
  40b66c:	fimul  WORD PTR [edi]
  40b66e:	in     eax,dx
  40b66f:	mov    bl,BYTE PTR [esp+ecx*8-0x437e9527]
  40b676:	push   edi
  40b677:	dec    edi
  40b678:	lock jbe 0x40b6ca
  40b67b:	pop    ebp
  40b67c:	fld    TBYTE PTR [edi]
  40b67e:	xor    al,0x47
  40b680:	or     BYTE PTR [esi+0x6e],cl
  40b683:	sub    BYTE PTR [ecx+0x4e],cl
  40b686:	inc    edx
  40b687:	sub    al,0x51
  40b689:	mov    esi,0x9ef61f29
  40b68e:	mov    ecx,0xd469d5ee
  40b693:	cmc    
  40b694:	mov    edx,0x453913d2
  40b699:	daa    
  40b69a:	add    al,0x6b
  40b69c:	fist   WORD PTR [edi-0xb]
  40b69f:	mov    dh,0xb
  40b6a1:	adc    eax,0xb1579d63
  40b6a6:	cmp    dl,BYTE PTR [edx+0x60]
  40b6a9:	sbb    al,0x36
  40b6ab:	and    edx,DWORD PTR [edi+0x1c]
  40b6ae:	inc    esi
  40b6af:	inc    esi
  40b6b0:	sbb    ebx,DWORD PTR [ebx]
  40b6b2:	jns    0x40b66e
  40b6b4:	pusha  
  40b6b5:	mov    WORD PTR [esi],gs
  40b6b7:	rcl    BYTE PTR [ecx+0x48],cl
  40b6ba:	push   edi
  40b6bb:	sbb    DWORD PTR [esi],ecx
  40b6bd:	out    dx,eax
  40b6be:	pop    esi
  40b6bf:	dec    edx
  40b6c0:	jmp    0x40b72d
  40b6c2:	outs   dx,BYTE PTR ds:[esi]
  40b6c3:	(bad)  
  40b6c4:	push   edx
  40b6c5:	ja     0x40b684
  40b6c7:	xor    esi,ebp
  40b6c9:	nop
  40b6ca:	ins    BYTE PTR es:[edi],dx
  40b6cb:	rcr    BYTE PTR [ecx-0x12],1
  40b6ce:	jl     0x40b6f7
  40b6d0:	in     al,0x82
  40b6d2:	aas    
  40b6d3:	xchg   edx,eax
  40b6d4:	cmp    dh,BYTE PTR [esi+0x2108fedc]
  40b6da:	cli    
  40b6db:	popf   
  40b6dc:	dec    edi
  40b6dd:	cmp    edi,0x2dbdebb8
  40b6e3:	or     al,0x2e
  40b6e5:	mov    edx,0x15828f84
  40b6ea:	inc    eax
  40b6eb:	or     eax,0x6165a079
  40b6f0:	stc    
  40b6f1:	pop    esi
  40b6f2:	cmp    BYTE PTR [esi-0x87a2af0],0xa
  40b6f9:	mov    bl,0x3d
  40b6fb:	cmp    ecx,DWORD PTR [edi+0x2f]
  40b6fe:	dec    esi
  40b6ff:	aas    
  40b700:	cld    
  40b701:	ja     0x40b768
  40b703:	xchg   esi,eax
  40b704:	pop    ebp
  40b705:	mov    WORD PTR [edx],ds
  40b707:	xor    DWORD PTR [eax],0xc7da062b
  40b70d:	adc    BYTE PTR [edx+0x60],ah
  40b710:	dec    ebp
  40b711:	ins    DWORD PTR es:[edi],dx
  40b712:	fistp  QWORD PTR [ebx+0x5e]
  40b715:	or     BYTE PTR [edi+esi*4-0x17d1ae9b],ah
  40b71c:	xchg   edi,eax
  40b71d:	cmc    
  40b71e:	and    dl,ah
  40b720:	mov    WORD PTR [esi+eax*8],?
  40b723:	(bad)  
  40b724:	ret    0xcf1e
  40b727:	adc    BYTE PTR ds:0xb185cdf3,dh
  40b72d:	sahf   
  40b72e:	xor    bh,BYTE PTR [esi+ebp*8]
  40b731:	xchg   ebp,eax
  40b732:	or     esp,esi
  40b734:	push   es
  40b735:	call   0x410a6a9f
  40b73a:	call   0xf6aa:0xf9547b94
  40b741:	add    BYTE PTR [ebp+0x2f3e93c0],al
  40b747:	pop    ebx
  40b748:	push   ss
  40b749:	rol    edx,1
  40b74b:	sbb    eax,DWORD PTR [eax-0x1b]
  40b74e:	jmp    0xc9df:0x14f9b274
  40b755:	xchg   DWORD PTR [ecx-0x68],ebx
  40b758:	bnd jo 0x40b7d2
  40b75b:	std    
  40b75c:	xchg   ebp,eax
  40b75d:	mov    ds:0x838e6916,eax
  40b762:	int    0x0
  40b764:	or     DWORD PTR [ebx*1-0x149304cd],ebp
  40b76b:	popf   
  40b76c:	mov    edx,0xcf47d56c
  40b771:	ss and al,0x63
  40b774:	int3   
  40b775:	call   0x5383747f
  40b77a:	jno    0x40b7bb
  40b77c:	mov    BYTE PTR [ecx+0x5e1640d5],cl
  40b782:	inc    ebp
  40b783:	xchg   DWORD PTR [edi-0x2f],eax
  40b786:	xchg   edx,eax
  40b787:	add    BYTE PTR [esi],0x4e
  40b78a:	add    ebp,ebp
  40b78c:	jbe    0x40b7ec
  40b78e:	loopne 0x40b7a4
  40b790:	popf   
  40b791:	adc    DWORD PTR [ebx],0xffffffdd
  40b794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b795:	in     eax,dx
  40b796:	mov    ds:0xd53125da,al
  40b79b:	and    DWORD PTR [edx-0x6acf7039],esi
  40b7a1:	mov    edx,0x383c92a9
  40b7a6:	pop    edi
  40b7a7:	mov    ebx,0x3a61d17
  40b7ac:	rcl    ah,cl
  40b7ae:	sbb    BYTE PTR es:[ecx],dl
  40b7b1:	push   ecx
  40b7b2:	jae    0x40b757
  40b7b4:	sahf   
  40b7b5:	icebp  
  40b7b6:	mov    cl,0x2d
  40b7b8:	dec    edi
  40b7b9:	lods   al,BYTE PTR ds:[esi]
  40b7ba:	retf   0x4886
  40b7bd:	add    al,0x1
  40b7bf:	inc    edx
  40b7c0:	adc    esp,edi
  40b7c2:	scas   al,BYTE PTR es:[edi]
  40b7c3:	jbe    0x40b82e
  40b7c5:	ret    
  40b7c6:	sbb    DWORD PTR [edi],0x4f982532
  40b7cc:	loope  0x40b7b6
  40b7ce:	bound  ebp,QWORD PTR [ebx-0x78]
  40b7d1:	mov    bl,0x82
  40b7d3:	xchg   DWORD PTR [edi+ebp*4],ebp
  40b7d6:	test   eax,0xc227023d
  40b7db:	dec    edx
  40b7dc:	scas   al,BYTE PTR es:[edi]
  40b7dd:	xchg   ecx,eax
  40b7de:	bound  ebp,QWORD PTR [ebx+0x484d50f9]
  40b7e4:	jecxz  0x40b7a9
  40b7e6:	mov    dh,0xaa
  40b7e8:	fsubp  st(3),st
  40b7ea:	ds test dl,cl
  40b7ed:	retf   
  40b7ee:	push   0x6a
  40b7f0:	aas    
  40b7f1:	lods   eax,DWORD PTR ds:[esi]
  40b7f2:	mov    eax,ds:0xb66eb9ce
  40b7f7:	push   edx
  40b7f8:	gs je  0x40b790
  40b7fb:	cli    
  40b7fc:	sbb    eax,0xbe2308e4
  40b801:	push   ebp
  40b802:	fs cmp eax,0xfba576b6
  40b808:	stc    
  40b809:	cs ret 0xa9e7
  40b80d:	dec    edx
  40b80e:	aam    0x1e
  40b810:	outs   dx,BYTE PTR ds:[esi]
  40b811:	and    esi,DWORD PTR [edx-0x1017f59a]
  40b817:	(bad)
  40b81a:	neg    dl
  40b81c:	ss ins BYTE PTR es:[edi],dx
  40b81e:	inc    ecx
  40b81f:	ficom  DWORD PTR [ecx]
  40b821:	hlt    
  40b822:	lods   al,BYTE PTR ds:[esi]
  40b823:	loopne 0x40b859
  40b825:	cdq    
  40b826:	cdq    
  40b827:	ins    BYTE PTR es:[edi],dx
  40b828:	loop   0x40b840
  40b82a:	push   eax
  40b82b:	sub    BYTE PTR [eax-0x45],al
  40b82e:	es push esp
  40b830:	jmp    0x40b819
  40b832:	jmp    0xd405:0x1530a890
  40b839:	pop    ebp
  40b83a:	mov    dh,0xb9
  40b83c:	add    ch,BYTE PTR [eax-0xb]
  40b83f:	push   edi
  40b840:	xchg   edx,eax
  40b841:	add    BYTE PTR [edx+0x71],ch
  40b844:	mov    ss,WORD PTR [ebp+0x63]
  40b847:	xchg   BYTE PTR [ebx],ch
  40b849:	cwde   
  40b84a:	cld    
  40b84b:	cwde   
  40b84c:	push   0x7c63930c
  40b851:	test   eax,0x93ee98e0
  40b856:	xor    BYTE PTR [ebx-0x3975b4a1],0x9d
  40b85d:	sbb    DWORD PTR ss:0x165c8a25,edx
  40b864:	outs   dx,BYTE PTR ds:[esi]
  40b865:	mov    ch,0xe5
  40b867:	outs   dx,BYTE PTR ds:[esi]
  40b868:	fsub   QWORD PTR [edi+0x1ea1e086]
  40b86e:	outs   dx,BYTE PTR ds:[esi]
  40b86f:	sub    DWORD PTR [ecx+0x62375c2c],esi
  40b875:	dec    eax
  40b876:	jae    0x40b8cb
  40b878:	add    ah,BYTE PTR [ebx]
  40b87a:	xchg   esp,eax
  40b87b:	lahf   
  40b87c:	sub    al,BYTE PTR [ecx-0x4eb89e18]
  40b882:	inc    eax
  40b883:	mov    al,0xb
  40b885:	inc    DWORD PTR [esi+edi*1]
  40b888:	ins    DWORD PTR es:[edi],dx
  40b889:	shr    DWORD PTR [edi+0xe],1
  40b88c:	(bad)  
  40b88d:	push   esp
  40b88e:	call   0xd8b:0x8c15d6d7
  40b895:	mov    ds:0x4daaaddb,al
  40b89a:	add    bh,0xcb
  40b89d:	sub    edx,DWORD PTR [edi+0x43]
  40b8a0:	or     eax,0x7bdb4e94
  40b8a5:	into   
  40b8a6:	hlt    
  40b8a7:	xor    DWORD PTR [ecx+0x13],0xfffffff6
  40b8ab:	push   eax
  40b8ac:	ds ins DWORD PTR es:[edi],dx
  40b8ae:	rol    BYTE PTR [edi-0x5426e3c5],cl
  40b8b4:	mov    esi,DWORD PTR [ebp+0x76eb35b]
  40b8ba:	pop    es
  40b8bb:	sbb    cl,BYTE PTR [edi-0x5c214b24]
  40b8c1:	sub    DWORD PTR [ecx],ebx
  40b8c3:	mov    WORD PTR [eax+0x4c],gs
  40b8c6:	inc    esi
  40b8c7:	jecxz  0x40b908
  40b8c9:	arpl   WORD PTR [edi-0x63],bp
  40b8cc:	adc    al,0x11
  40b8ce:	mov    ebp,0xdd5c1bbb
  40b8d3:	adc    ebp,esi
  40b8d5:	push   ss
  40b8d6:	cmp    ch,BYTE PTR [eax-0x4e]
  40b8d9:	rdtsc  
  40b8db:	mov    ebp,0x9e598e61
  40b8e0:	cli    
  40b8e1:	xchg   edx,eax
  40b8e2:	mov    ds:0xe2dbde49,al
  40b8e7:	adc    DWORD PTR [ecx],ebp
  40b8e9:	loope  0x40b8f0
  40b8eb:	fcmovnu st,st(3)
  40b8ed:	(bad)  
  40b8ee:	lds    esp,FWORD PTR [eax]
  40b8f0:	add    DWORD PTR [esi],ecx
  40b8f2:	jge    0x40b91a
  40b8f4:	out    0x78,al
  40b8f6:	and    al,0x1e
  40b8f8:	les    ecx,FWORD PTR [edi+0x57ae64c4]
  40b8fe:	loopne 0x40b961
  40b900:	ror    BYTE PTR [esi+0x479593d2],0x43
  40b907:	inc    ecx
  40b908:	dec    edi
  40b909:	hlt    
  40b90a:	and    eax,0x7ecdefdf
  40b90f:	cmp    al,0x6a
  40b911:	push   0xffffffe6
  40b913:	loopne 0x40b8b4
  40b915:	mul    BYTE PTR ds:0x96f76d9c
  40b91b:	or     BYTE PTR [edi],al
  40b91d:	xchg   edx,eax
  40b91e:	adc    al,0x34
  40b920:	shl    BYTE PTR [ecx],1
  40b922:	mov    ebp,0x1ca2cc78
  40b927:	jl     0x40b969
  40b929:	xor    DWORD PTR [ebx],0xffffffb7
  40b92c:	sub    esp,esi
  40b92e:	xchg   ebp,eax
  40b92f:	jg     0x40b928
  40b931:	out    0xf0,eax
  40b933:	mov    dh,0x72
  40b935:	iret   
  40b936:	fnstenv [esi]
  40b938:	mov    WORD PTR ds:0x844058cd,es
  40b93e:	sbb    eax,0x69b3fa7a
  40b943:	and    ch,al
  40b945:	cmp    dh,bl
  40b947:	jle    0x40b971
  40b949:	mov    edi,0x8a23aaf5
  40b94e:	test   DWORD PTR [eax],ebx
  40b950:	xor    ebx,DWORD PTR [ecx+edi*8]
  40b953:	push   cs
  40b954:	add    eax,0x515802e2
  40b959:	shr    DWORD PTR [ecx*1-0xb921e7f],0x67
  40b961:	fucom  st(6)
  40b963:	loope  0x40b919
  40b965:	hlt    
  40b966:	add    DWORD PTR [edi],ebp
  40b968:	push   ebp
  40b969:	mov    esi,0xee58f078
  40b96e:	cmp    bl,ch
  40b970:	bound  edx,QWORD PTR [edx-0x74]
  40b973:	add    eax,0x183c8ca7
  40b978:	sbb    BYTE PTR [ebp-0x26],0xb
  40b97c:	or     ebx,DWORD PTR ds:0x90d5af3f
  40b982:	inc    esp
  40b983:	aad    0xb1
  40b985:	xchg   ebx,eax
  40b986:	lods   eax,DWORD PTR ds:[esi]
  40b987:	aaa    
  40b988:	mov    edi,0x29c456d6
  40b98d:	sub    esi,DWORD PTR [esi+0x286f2e40]
  40b993:	adc    al,0xe4
  40b995:	aaa    
  40b996:	jle    0x40b9a1
  40b998:	jno    0x40b93e
  40b99a:	sub    DWORD PTR [eax],ebx
  40b99c:	cmp    edx,DWORD PTR [ebp+esi*2-0x33]
  40b9a0:	fsub   st,st(7)
  40b9a2:	fstp   TBYTE PTR [eax]
  40b9a4:	stos   BYTE PTR es:[edi],al
  40b9a5:	test   BYTE PTR [edx+0x25ed01b7],ch
  40b9ab:	fldenv ds:[edx+0x6ce87ef7]
  40b9b2:	shl    BYTE PTR [eax+0x27],cl
  40b9b5:	xchg   edx,eax
  40b9b6:	popa   
  40b9b7:	ja     0x40b9e0
  40b9b9:	sub    eax,0xc61db705
  40b9be:	ja     0x40b9b9
  40b9c0:	add    al,BYTE PTR [esi+0x7c]
  40b9c3:	jmp    0x54aa35cb
  40b9c8:	mov    bh,0xd5
  40b9ca:	in     eax,0x0
  40b9cc:	cmp    ecx,eax
  40b9ce:	popf   
  40b9cf:	in     al,0x71
  40b9d1:	in     eax,0x20
  40b9d3:	xchg   ecx,eax
  40b9d4:	jno    0x40b968
  40b9d6:	fild   WORD PTR [ebp-0x7d]
  40b9d9:	adc    DWORD PTR [ebx-0x2bfb03af],eax
  40b9df:	das    
  40b9e0:	fiadd  DWORD PTR [ebp+0x58]
  40b9e3:	push   eax
  40b9e4:	les    edi,FWORD PTR [edi+0x59]
  40b9e7:	fadd   DWORD PTR [esi+0x57]
  40b9ea:	jmp    0xbe82:0xb2e8d180
  40b9f1:	mov    cl,0xc6
  40b9f3:	adc    DWORD PTR [edx+0x542608fc],ebp
  40b9f9:	mov    dh,0xf5
  40b9fb:	ins    BYTE PTR es:[edi],dx
  40b9fc:	rcl    DWORD PTR [ebx+0x27],cl
  40b9ff:	out    dx,al
  40ba00:	mov    ecx,0x5cb55bc1
  40ba05:	daa    
  40ba06:	js     0x40ba73
  40ba08:	fidiv  WORD PTR [edi]
  40ba0a:	mov    eax,ds:0x414a3e5d
  40ba0f:	xor    eax,0xbf725fe8
  40ba14:	cmp    bh,al
  40ba16:	push   esi
  40ba17:	pop    esp
  40ba18:	or     edx,DWORD PTR [edi+0x18f617b1]
  40ba1e:	int    0x80
  40ba20:	add    ah,BYTE PTR [eax+edi*2-0x31175b05]
  40ba27:	dec    eax
  40ba28:	mov    bh,0xa4
  40ba2a:	jo     0x40b9b4
  40ba2c:	push   cs
  40ba2d:	xchg   ebp,eax
  40ba2e:	data16 out 0x3d,al
  40ba31:	call   DWORD PTR [edx]
  40ba33:	dec    edx
  40ba34:	arpl   WORD PTR [ebx+0x7b],bx
  40ba37:	out    0x2a,al
  40ba39:	mov    bh,bh
  40ba3b:	add    al,0xf
  40ba3d:	hlt    
  40ba3e:	inc    ecx
  40ba3f:	xchg   edi,eax
  40ba40:	(bad)  
  40ba41:	clc    
  40ba42:	std    
  40ba43:	dec    edi
  40ba44:	mov    dl,0x34
  40ba46:	inc    esp
  40ba47:	cmp    BYTE PTR [eax+edi*4-0x4fabff36],ah
  40ba4e:	test   BYTE PTR [esi+edi*8-0x39a7eace],0xbf
  40ba56:	test   BYTE PTR [eax+0x1c6107d7],0xb2
  40ba5d:	sti    
  40ba5e:	pusha  
  40ba5f:	lods   eax,DWORD PTR ds:[esi]
  40ba60:	cmp    al,0x54
  40ba62:	retf   0x2e9a
  40ba65:	sti    
  40ba66:	xor    BYTE PTR [esi-0x3d],cl
  40ba69:	cwde   
  40ba6a:	xor    ebp,DWORD PTR [ebx+0x5b58c28a]
  40ba70:	dec    ecx
  40ba71:	mov    fs,esi
  40ba73:	(bad)  
  40ba74:	mov    DWORD PTR [ebx],edi
  40ba76:	ss and ebx,esp
  40ba79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7a:	add    al,0xb0
  40ba7c:	sub    dh,al
  40ba7e:	loop   0x40ba75
  40ba80:	cmp    BYTE PTR [ebp-0x4f0ce90e],0xc4
  40ba87:	mov    ecx,0x27577f35
  40ba8c:	sub    al,0x98
  40ba8e:	cmp    al,0xdd
  40ba90:	push   esp
  40ba91:	mov    ebp,0x1cbe6825
  40ba96:	pop    eax
  40ba97:	das    
  40ba98:	inc    ecx
  40ba99:	xor    DWORD PTR [esi-0x40e60e68],0x49e5dd89
  40baa3:	int3   
  40baa4:	dec    esi
  40baa5:	add    DWORD PTR [edx],eax
  40baa7:	cmp    eax,0x50a63db4
  40baac:	or     BYTE PTR [edi+0x51],ah
  40baaf:	adc    cl,cl
  40bab1:	xchg   ecx,eax
  40bab2:	dec    ebx
  40bab3:	jns    0x40ba42
  40bab5:	xchg   ecx,eax
  40bab6:	(bad)  
  40bab7:	cmp    eax,DWORD PTR [eax-0x1305c93a]
  40babd:	test   BYTE PTR [ebx+0x38],ah
  40bac0:	inc    ecx
  40bac1:	xor    ah,bh
  40bac3:	es jno 0x40bb42
  40bac6:	jb     0x40ba58
  40bac8:	xor    cl,dh
  40baca:	aam    0xce
  40bacc:	scas   eax,DWORD PTR es:[edi]
  40bacd:	push   edi
  40bace:	das    
  40bacf:	mov    ebx,0x98510fe5
  40bad4:	sub    BYTE PTR [eax+eiz*1-0x7],bl
  40bad8:	mov    ds:0x6550d7ea,al
  40badd:	mov    esp,0x34eb3c7a
  40bae2:	out    dx,al
  40bae3:	push   edi
  40bae5:	aam    0xee
  40bae7:	push   es
  40bae8:	sbb    al,BYTE PTR [ebx]
  40baea:	or     DWORD PTR [ecx],ebp
  40baec:	adc    al,0x7b
  40baee:	aad    0x7e
  40baf0:	add    esp,esi
  40baf2:	adc    eax,0x194881ef
  40baf7:	fistp  QWORD PTR [edi+0x43e3b6e6]
  40bafd:	adc    eax,0xbc2237af
  40bb02:	test   eax,0xb2acd95a
  40bb07:	mov    al,0x4c
  40bb09:	sub    esi,DWORD PTR [eax]
  40bb0b:	and    dh,BYTE PTR [edi+0x6389400f]
  40bb11:	mov    ?,WORD PTR [esi+ecx*2-0x5efcf761]
  40bb18:	xchg   ebp,eax
  40bb19:	call   FWORD PTR [ebp+0x28]
  40bb1c:	sub    al,dh
  40bb1e:	mul    DWORD PTR [edi-0x3d]
  40bb21:	xor    bl,al
  40bb23:	adc    al,0x2
  40bb25:	cmp    eax,0x65967bed
  40bb2a:	push   esi
  40bb2b:	test   al,0xdc
  40bb2d:	pop    edi
  40bb2e:	sub    al,0xcf
  40bb30:	lea    ebx,[eax]
  40bb32:	cwde   
  40bb33:	push   esp
  40bb34:	rcl    BYTE PTR [ebx+eax*4],1
  40bb37:	xchg   edi,eax
  40bb38:	loope  0x40bb4d
  40bb3a:	mov    ch,0x69
  40bb3c:	arpl   WORD PTR [edi],ax
  40bb3e:	clc    
  40bb3f:	xor    eax,0xb537c83d
  40bb44:	into   
  40bb45:	ds (bad) 
  40bb47:	sar    DWORD PTR [ebx],cl
  40bb49:	imul   ecx,DWORD PTR [ebx-0x7e0ebff8],0xffffffc0
  40bb50:	and    cl,BYTE PTR [edi]
  40bb52:	mov    ds:0x564b6f44,eax
  40bb57:	mov    ds:0xc6a7dfc2,eax
  40bb5c:	xchg   esp,eax
  40bb5d:	adc    al,0x6a
  40bb5f:	sub    esi,esp
  40bb61:	rdmsr  
  40bb63:	(bad)  
  40bb64:	cmp    BYTE PTR [ecx+0x2ec5c5b9],ah
  40bb6a:	cmc    
  40bb6b:	jmp    0x40bba3
  40bb6d:	aad    0x0
  40bb6f:	mov    dl,0xb1
  40bb71:	gs loope 0x40bb85
  40bb74:	pop    ebp
  40bb75:	pop    edx
  40bb76:	into   
  40bb77:	mov    dl,0x1e
  40bb79:	shl    DWORD PTR [esi-0x3c],1
  40bb7c:	jbe    0x40bb74
  40bb7e:	pop    ecx
  40bb7f:	inc    eax
  40bb80:	cmp    bl,cl
  40bb82:	pop    ebp
  40bb83:	(bad)  
  40bb84:	aad    0x3
  40bb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb87:	push   edx
  40bb88:	xchg   edx,eax
  40bb89:	or     esp,DWORD PTR [esi-0x51]
  40bb8c:	test   DWORD PTR [edx-0x6a3c2e6f],ebx
  40bb92:	hlt    
  40bb93:	jb     0x40bb9e
  40bb95:	dec    esp
  40bb96:	retf   0x6bd0
  40bb99:	add    DWORD PTR [edx+0x3a],edi
  40bb9c:	lods   al,BYTE PTR ds:[esi]
  40bb9d:	lods   eax,DWORD PTR ds:[esi]
  40bb9e:	add    dl,BYTE PTR [edx-0x5e7df945]
  40bba4:	ss jmp 0x4d1e3143
  40bbaa:	add    BYTE PTR [eax-0x31],0xf9
  40bbae:	aam    0xa8
  40bbb0:	mov    al,ds:0x6366ed90
  40bbb5:	mov    ds:0x5bcfc08a,eax
  40bbba:	sbb    DWORD PTR [ebx+eiz*2],esi
  40bbbd:	xor    al,0xb7
  40bbbf:	inc    ecx
  40bbc0:	out    dx,eax
  40bbc1:	add    esi,DWORD PTR [edi-0x6b5d419]
  40bbc7:	clc    
  40bbc8:	mov    DWORD PTR [esi],ecx
  40bbca:	out    0x55,al
  40bbcc:	mov    cl,0x12
  40bbce:	add    al,0x50
  40bbd0:	sub    al,0xdf
  40bbd2:	add    al,0xd
  40bbd4:	aas    
  40bbd5:	xchg   BYTE PTR [ebp-0x37],ah
  40bbd8:	popa   
  40bbd9:	dec    ebp
  40bbda:	into   
  40bbdb:	bound  ebp,QWORD PTR [edx]
  40bbdd:	loop   0x40bb7a
  40bbdf:	mov    dh,BYTE PTR gs:[edx]
  40bbe2:	pop    edi
  40bbe3:	out    dx,al
  40bbe4:	sti    
  40bbe5:	leave  
  40bbe6:	les    ebp,FWORD PTR [edx-0x32ecd276]
  40bbec:	mov    ds:0xfbebf62e,al
  40bbf1:	pop    ds
  40bbf2:	adc    esi,DWORD PTR [esi]
  40bbf4:	clc    
  40bbf5:	retf   
  40bbf6:	xor    al,0x7f
  40bbf8:	pop    ss
  40bbf9:	fidivr WORD PTR ds:0x7f3c231b
  40bbff:	shl    DWORD PTR [edx-0x65],0x4
  40bc03:	jp     0x40bc5f
  40bc05:	dec    edi
  40bc06:	mov    cl,0x32
  40bc08:	mov    al,0x7d
  40bc0a:	xor    ebx,ebp
  40bc0c:	or     bl,bh
  40bc0e:	add    ebx,DWORD PTR [edi]
  40bc10:	cs cli 
  40bc12:	xor    bl,BYTE PTR [ecx+0x7c]
  40bc15:	cli    
  40bc16:	inc    eax
  40bc17:	jmp    0x4b7cff9b
  40bc1c:	rcr    edx,1
  40bc1e:	loopne 0x40bbf1
  40bc20:	mov    edx,0xa499a461
  40bc25:	mov    ecx,0x5309a81
  40bc2a:	(bad)  
  40bc2b:	nop
  40bc2c:	(bad)  
  40bc2d:	fsubr  DWORD PTR [edx-0x6a]
  40bc30:	fidivr DWORD PTR [eax+ecx*8-0x9]
  40bc34:	mov    DWORD PTR [esi+0x52752b09],ebx
  40bc3a:	dec    edx
  40bc3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc3c:	imul   eax,DWORD PTR [edx-0x6d2d8a5c],0xc587db4d
  40bc46:	pop    ebp
  40bc47:	cmp    BYTE PTR [ecx-0x1e230772],0xf4
  40bc4e:	adc    DWORD PTR fs:[ecx],edi
  40bc51:	(bad)  
  40bc52:	addr16 lock retf 0x625a
  40bc57:	mov    esi,0xc30f4753
  40bc5c:	add    al,0xac
  40bc5e:	sub    al,0xc7
  40bc60:	stos   BYTE PTR es:[edi],al
  40bc61:	or     BYTE PTR [eax-0x7c],bl
  40bc64:	scas   al,BYTE PTR es:[edi]
  40bc65:	loopne 0x40bce4
  40bc67:	dec    edi
  40bc68:	and    ebp,DWORD PTR [esi-0x7c4ae2a9]
  40bc6e:	adc    al,0x74
  40bc70:	dec    eax
  40bc71:	call   0xbe7356e1
  40bc76:	test   al,0x3a
  40bc78:	or     BYTE PTR [edi-0x662cfc29],dh
  40bc7e:	and    bh,BYTE PTR [edx-0x2a]
  40bc81:	fst    DWORD PTR [ebx+edx*2+0x615f6e46]
  40bc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc89:	sub    DWORD PTR [ebx-0x2fca88ec],edx
  40bc8f:	loopne 0x40bc29
  40bc91:	mov    BYTE PTR [ebp+0x73b47221],dl
  40bc97:	jp     0x40bc89
  40bc99:	fistp  WORD PTR [edx]
  40bc9b:	in     eax,0xfa
  40bc9d:	mov    esi,0xe73e4a76
  40bca2:	lahf   
  40bca3:	pop    edi
  40bca4:	and    BYTE PTR [ecx+0x16206012],ah
  40bcaa:	imul   ebx,DWORD PTR [esi+0x5f25a36d],0x57be595b
  40bcb4:	xor    DWORD PTR [eax+0x74],0xc6804334
  40bcbb:	lock into 
  40bcbd:	call   FWORD PTR [esi+0x77]
  40bcc0:	stos   DWORD PTR es:[edi],eax
  40bcc1:	jmp    0xc776011d
  40bcc6:	jmp    0xc35f034
  40bccb:	and    DWORD PTR [esi],edi
  40bccd:	add    ebp,esi
  40bccf:	sub    esp,DWORD PTR [edx-0x6]
  40bcd2:	fisttp QWORD PTR cs:[esi*2-0x723c5198]
  40bcda:	dec    esi
  40bcdb:	jae    0x40bd32
  40bcdd:	into   
  40bcde:	mov    dl,BYTE PTR [ecx+0x6bdbab21]
  40bce4:	mov    DWORD PTR [edi+0x28],esi
  40bce7:	mov    bl,0x30
  40bce9:	xchg   ebx,eax
  40bcea:	xchg   BYTE PTR ss:[esi-0x75f968e2],al
  40bcf1:	fmul   DWORD PTR [esi]
  40bcf3:	sub    DWORD PTR [ecx-0x5c25ec9a],ebp
  40bcf9:	add    bh,bl
  40bcfb:	and    eax,0x70b6bb98
  40bd00:	call   FWORD PTR [ebp+0x8cef3e9]
  40bd06:	sbb    al,0x5a
  40bd08:	mov    ah,0xb2
  40bd0a:	pushf  
  40bd0b:	adc    DWORD PTR [eax],esi
  40bd0d:	xor    ecx,DWORD PTR [esi+0x2e]
  40bd10:	cmc    
  40bd11:	ds or  eax,0x726b06bf
  40bd17:	sub    al,0x63
  40bd19:	xchg   esi,eax
  40bd1a:	dec    edx
  40bd1b:	sub    BYTE PTR [ecx-0x45c07845],dl
  40bd21:	stos   BYTE PTR es:[edi],al
  40bd22:	push   esp
  40bd23:	cs pop ebx
  40bd25:	es jmp 0xe5ef:0xd4f4ca4
  40bd2d:	pop    edx
  40bd2e:	mov    dh,0xb9
  40bd30:	push   0xffffffee
  40bd32:	dec    eax
  40bd33:	adc    eax,0x23428679
  40bd38:	pop    ds
  40bd39:	sub    DWORD PTR [ecx-0x39],ebp
  40bd3c:	lahf   
  40bd3d:	xor    DWORD PTR ds:0x6b0f86,edi
  40bd43:	pop    ds
  40bd44:	pop    ecx
  40bd45:	fdiv   DWORD PTR [edx+0x50f08938]
  40bd4b:	div    BYTE PTR [esi]
  40bd4d:	mov    al,dl
  40bd4f:	mov    ch,0xa7
  40bd51:	mov    ecx,0xbc782c26
  40bd56:	xchg   ebx,eax
  40bd57:	nop
  40bd58:	loop   0x40bd3a
  40bd5a:	or     eax,0x1fcc3f4e
  40bd5f:	push   esp
  40bd60:	stos   DWORD PTR es:[edi],eax
  40bd61:	mov    eax,0x6e1f4c49
  40bd66:	sbb    ebp,DWORD PTR [eax+0x2b84861e]
  40bd6c:	mov    BYTE PTR [ebx-0x5876892f],ch
  40bd72:	xchg   ecx,eax
  40bd73:	shr    BYTE PTR [esi+edi*1-0x5b63e46a],0xd8
  40bd7b:	mov    BYTE PTR [ebx-0x66327df8],ch
  40bd81:	andps  xmm4,XMMWORD PTR [ebp-0x1b]
  40bd85:	lea    eax,[eax]
  40bd87:	test   ebp,edx
  40bd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd8a:	push   cs
  40bd8b:	and    bh,0x56
  40bd8e:	outs   dx,DWORD PTR ds:[esi]
  40bd8f:	lods   eax,DWORD PTR ds:[esi]
  40bd90:	or     ebx,DWORD PTR [ebp-0x53]
  40bd93:	xchg   ecx,eax
  40bd94:	or     bh,0xf2
  40bd97:	test   eax,0x6e5acd3a
  40bd9c:	xchg   DWORD PTR [edi],ecx
  40bd9e:	enter  0xd0eb,0x19
  40bda2:	bound  esp,QWORD PTR [esi-0x60]
  40bda5:	sahf   
  40bda6:	leave  
  40bda7:	stos   BYTE PTR es:[edi],al
  40bda8:	arpl   WORD PTR [edi+edx*1],cx
  40bdab:	rol    DWORD PTR [edi+ecx*4-0x43],cl
  40bdaf:	jnp    0x40bdb9
  40bdb1:	or     eax,DWORD PTR [ebp+eiz*4+0x10b5579b]
  40bdb8:	jg     0x40be06
  40bdba:	push   ebp
  40bdbb:	fsubr  DWORD PTR [ebp+edx*1-0x49]
  40bdbf:	or     DWORD PTR [edx+edi*4-0x7b],edx
  40bdc3:	rcr    BYTE PTR [edi],1
  40bdc5:	pop    ss
  40bdc6:	cmp    esi,edi
  40bdc8:	inc    edi
  40bdc9:	pop    ds
  40bdca:	popf   
  40bdcb:	adc    BYTE PTR [ecx+0x48],al
  40bdce:	sub    dl,BYTE PTR [ecx]
  40bdd0:	out    0xfc,al
  40bdd2:	add    eax,0xb49c4c3e
  40bdd7:	retf   
  40bdd8:	aad    0x60
  40bdda:	jp     0x40bdf7
  40bddc:	sbb    eax,0x2ea18dc1
  40bde1:	pop    esp
  40bde2:	out    dx,al
  40bde3:	dec    esi
  40bde4:	mov    al,0xe8
  40bde6:	or     dl,BYTE PTR [eax]
  40bde8:	mov    cl,0x56
  40bdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdeb:	mov    edx,0x8b4cc701
  40bdf0:	pop    ss
  40bdf1:	sahf   
  40bdf2:	adc    BYTE PTR [eax-0x482a8a3d],ch
  40bdf8:	add    dl,BYTE PTR [edx-0x505da4fe]
  40bdfe:	cs dec eax
  40be00:	pusha  
  40be01:	nop
  40be02:	psubw  mm6,QWORD PTR [edi-0x621de2eb]
  40be09:	jl     0x40be32
  40be0b:	adc    ebp,DWORD PTR ds:0xb902af6d
  40be11:	mov    bh,0x75
  40be13:	dec    ecx
  40be14:	jae    0x40be4a
  40be16:	mov    al,0x1f
  40be18:	cdq    
  40be19:	arpl   sp,di
  40be1b:	fnstsw WORD PTR [esi+0x1d]
  40be1e:	or     eax,0x7853f38e
  40be23:	cmp    al,0x54
  40be25:	jmp    0x40be95
  40be27:	xchg   ebp,eax
  40be28:	out    dx,al
  40be29:	xchg   ecx,eax
  40be2a:	es ds xchg edi,eax
  40be2d:	outs   dx,BYTE PTR ds:[esi]
  40be2e:	cwde   
  40be2f:	pop    edx
  40be30:	jle    0x40be93
  40be32:	push   0xffffff87
  40be34:	jae    0x40be71
  40be36:	sub    DWORD PTR [edx+esi*8+0x6b],0xaa212dad
  40be3e:	mov    bh,0x50
  40be40:	pop    edx
  40be41:	add    bh,BYTE PTR [eax]
  40be43:	imul   ebx,DWORD PTR [esi-0x3e],0xffffffb4
  40be47:	in     al,dx
  40be48:	mov    BYTE PTR [edx+0x27],bl
  40be4b:	mov    esp,0x18aa0d7d
  40be50:	test   al,0x55
  40be52:	mov    al,BYTE PTR [eax]
  40be54:	loopne 0x40be60
  40be56:	pop    ebx
  40be57:	add    BYTE PTR [edx+0x74],cl
  40be5a:	jp     0x40beb2
  40be5c:	div    ecx
  40be5e:	aas    
  40be5f:	sbb    eax,0x558617e4
  40be64:	push   esp
  40be65:	mov    al,ds:0x355585a6
  40be6a:	retf   0x9427
  40be6d:	(bad)  
  40be6e:	sar    edi,cl
  40be70:	cmp    DWORD PTR [esi],0x45
  40be73:	scas   eax,DWORD PTR es:[edi]
  40be74:	leave  
  40be75:	sbb    eax,0xd6525b7
  40be7a:	nop
  40be7b:	sbb    al,0x95
  40be7d:	sub    al,0x4a
  40be7f:	(bad)  
  40be80:	push   ecx
  40be81:	in     al,0x46
  40be83:	sar    BYTE PTR [edx+0x24cb31ce],0x82
  40be8a:	mov    ds:0xd59a07ff,eax
  40be8f:	and    al,0x7b
  40be91:	add    DWORD PTR [esi+0x594620ec],edi
  40be97:	inc    edi
  40be98:	js     0x40be2c
  40be9a:	jle    0x40bec9
  40be9c:	jne    0x40be8f
  40be9e:	dec    edi
  40be9f:	outs   dx,DWORD PTR ds:[esi]
  40bea0:	or     dl,BYTE PTR [esi]
  40bea2:	push   ss
  40bea3:	push   ebx
  40bea4:	lahf   
  40bea5:	mov    esp,0x33456a5f
  40beaa:	jne    0x40bf0f
  40beac:	or     BYTE PTR ds:0x7b40c489,dl
  40beb2:	fcmovnbe st,st(7)
  40beb4:	mov    ch,0xda
  40beb6:	cmp    ah,0xdc
  40beb9:	daa    
  40beba:	jmp    DWORD PTR [edi]
  40bebc:	add    DWORD PTR ds:0x21a83cf7,ecx
  40bec2:	mov    ebx,0xdd5cf083
  40bec7:	ins    DWORD PTR es:[edi],dx
  40bec8:	test   DWORD PTR [edx+0x17],ecx
  40becb:	fcmovbe st,st(0)
  40becd:	xchg   ebx,eax
  40bece:	sub    edx,DWORD PTR ds:0x834c1b96
  40bed4:	cmp    BYTE PTR [ebx],dh
  40bed6:	xor    dl,BYTE PTR [eax+0x19b055a6]
  40bedc:	jmp    0xf82abcb4
  40bee1:	xor    eax,0xf705d943
  40bee6:	mov    bl,0xdd
  40bee8:	jge    0x40bee0
  40beea:	in     al,dx
  40beeb:	ret    
  40beec:	mov    cl,0x53
  40beee:	mov    ds:0xa969c54,eax
  40bef3:	aad    0x7d
  40bef5:	or     eax,0x3d045ebf
  40befa:	test   DWORD PTR [ecx-0xb],eax
  40befd:	inc    ecx
  40befe:	pop    esi
  40beff:	add    DWORD PTR [edx],esp
  40bf01:	int3   
  40bf02:	jno    0x40bf05
  40bf04:	or     DWORD PTR [edx+0x102037d7],0xa98fe248
  40bf0e:	sub    ah,ah
  40bf10:	or     DWORD PTR [ecx+0x6f],ecx
  40bf13:	sbb    al,0x33
  40bf15:	inc    edx
  40bf16:	imul   ebp,DWORD PTR [edx+0x4292f93d],0x76
  40bf1d:	sbb    eax,0xeed0d786
  40bf22:	fdivr  QWORD PTR [ecx+0x19a63096]
  40bf28:	aaa    
  40bf29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf2a:	push   ebx
  40bf2b:	xchg   DWORD PTR [eax],eax
  40bf2d:	pop    es
  40bf2e:	xor    dh,BYTE PTR [ebp-0x51]
  40bf31:	sbb    eax,eax
  40bf33:	rol    ecx,1
  40bf35:	inc    ebx
  40bf36:	pop    esi
  40bf37:	sbb    eax,0x90957d09
  40bf3c:	call   0x17db86c9
  40bf41:	adc    al,0xd3
  40bf43:	(bad)  
  40bf44:	sbb    DWORD PTR [edi+edi*8-0x48d71123],ecx
  40bf4b:	and    eax,0xee9fa60b
  40bf50:	shl    esi,cl
  40bf52:	cmp    dl,BYTE PTR [edi+esi*4-0x712bccad]
  40bf59:	sahf   
  40bf5a:	inc    eax
  40bf5b:	(bad)  
  40bf5c:	pop    ebx
  40bf5d:	jns    0x40bf8d
  40bf5f:	xchg   ecx,eax
  40bf60:	scas   eax,DWORD PTR es:[edi]
  40bf61:	or     eax,0xf1f195c0
  40bf66:	pop    ecx
  40bf67:	mov    dh,BYTE PTR [eax-0x6e]
  40bf6a:	jecxz  0x40bfdc
  40bf6c:	nop
  40bf6d:	mov    DWORD PTR [ecx],edi
  40bf6f:	fild   WORD PTR [esi+edi*2]
  40bf72:	cdq    
  40bf73:	fcom   st(0)
  40bf75:	dec    edi
  40bf76:	sbb    eax,0xf7c22fb3
  40bf7b:	sahf   
  40bf7c:	sub    BYTE PTR [ebp+0x39ba8ddb],bh
  40bf82:	push   0xe0c6b940
  40bf87:	cmp    al,0xa9
  40bf89:	rdmsr  
  40bf8b:	xchg   ebp,eax
  40bf8c:	cmp    esp,DWORD PTR [ebp-0x618aaeb0]
  40bf92:	cmp    ebx,DWORD PTR [ebx+0x454f7373]
  40bf98:	or     eax,0x6d48c85a
  40bf9d:	unpcklpd xmm2,XMMWORD PTR [ebx-0x49]
  40bfa2:	aaa    
  40bfa3:	sbb    eax,0x8321bcca
  40bfa8:	aam    0x8a
  40bfaa:	push   es
  40bfab:	je     0x40bfcf
  40bfad:	mov    al,BYTE PTR [ebx+0x50ebd632]
  40bfb3:	sub    al,0x97
  40bfb5:	xchg   esp,eax
  40bfb6:	sbb    ebp,DWORD PTR [edx]
  40bfb8:	repnz rol DWORD PTR [ebx],1
  40bfbb:	stos   BYTE PTR es:[edi],al
  40bfbc:	iret   
  40bfbd:	mov    esp,0xbc2d17b3
  40bfc2:	jmpw   0x8104
  40bfc6:	push   ds
  40bfc7:	aam    0x88
  40bfc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfca:	mov    ds:0x2ec0cccd,al
  40bfcf:	daa    
  40bfd0:	sub    dl,bh
  40bfd2:	mov    edx,ebx
  40bfd4:	int3   
  40bfd5:	jmp    0x40bf83
  40bfd7:	jb     0x40c029
  40bfd9:	xchg   esi,eax
  40bfda:	imul   ecx,DWORD PTR [esi],0x55
  40bfdd:	add    edi,DWORD PTR [edx-0x2f72c6dc]
  40bfe3:	stos   BYTE PTR es:[edi],al
  40bfe4:	popf   
  40bfe5:	pop    ecx
  40bfe6:	mov    esi,0x2a9e60e9
  40bfeb:	and    al,0xc1
  40bfed:	or     ecx,ebp
  40bfef:	in     al,0x1c
  40bff1:	jl     0x40c015
  40bff3:	push   ss
  40bff4:	test   al,0xf5
  40bff6:	sbb    edx,ebp
  40bff8:	inc    esp
  40bff9:	dec    eax
  40bffa:	inc    esi
  40bffb:	ret    
  40bffc:	test   al,0xf4
  40bffe:	nop
  40bfff:	mov    eax,0xc85bc782
  40c004:	outs   dx,BYTE PTR ds:[esi]
  40c005:	imul   edi,DWORD PTR [edi-0x4e],0xc255cb23
  40c00c:	not    DWORD PTR [edx-0x6d2530cb]
  40c012:	je     0x40c083
  40c014:	imul   ebx,esp,0x4a8cf9fa
  40c01a:	cli    
  40c01b:	mov    dl,dl
  40c01d:	data16 rcr BYTE PTR [edi+eax*4-0x1d7a1b71],1
  40c025:	call   0xe5be:0x281daa85
  40c02c:	(bad)  
  40c02d:	sub    ch,bl
  40c02f:	iret   
  40c030:	adc    ch,bl
  40c032:	das    
  40c033:	in     eax,0xb9
  40c035:	rol    ah,0x25
  40c038:	retf   0x1df4
  40c03b:	sbb    dl,bh
  40c03d:	pop    eax
  40c03e:	mov    al,ds:0xc9ca2d82
  40c043:	loope  0x40bfef
  40c045:	jecxz  0x40bfd8
  40c047:	loopne 0x40c03e
  40c049:	fsub   QWORD PTR [ecx+0x7e]
  40c04c:	xchg   ecx,eax
  40c04d:	and    al,0xa0
  40c04f:	jne    0x40c028
  40c051:	test   DWORD PTR [edi-0x2d9ce26e],esp
  40c057:	mov    ah,0xc6
  40c059:	aad    0xd7
  40c05b:	hlt    
  40c05c:	das    
  40c05d:	adc    ecx,DWORD PTR [esi]
  40c05f:	mov    eax,0xc9065395
  40c064:	inc    esp
  40c065:	popf   
  40c066:	repnz (bad) 
  40c068:	push   cs
  40c069:	xor    eax,0x9773e722
  40c06e:	push   ds
  40c06f:	aad    0xce
  40c071:	add    edi,ebx
  40c073:	cmp    DWORD PTR [esi],edx
  40c075:	shl    bh,0xc4
  40c078:	mov    esi,0xa8b5722
  40c07d:	push   esp
  40c07e:	xchg   ebp,eax
  40c07f:	adc    eax,0xf290786b
  40c084:	mov    BYTE PTR [eax],bl
  40c086:	pop    esi
  40c087:	cmp    BYTE PTR [eax+0x79],cl
  40c08a:	call   DWORD PTR [ebx+0x7f935c88]
  40c090:	adc    dh,BYTE PTR [ecx-0xe366de6]
  40c096:	enter  0x6461,0x2b
  40c09a:	xchg   BYTE PTR [eax-0x4e],ch
  40c09d:	cmp    edi,eax
  40c09f:	int    0x46
  40c0a1:	gs aaa 
  40c0a3:	mov    ds:0xc8a38c0d,al
  40c0a8:	add    al,0x79
  40c0aa:	dec    eax
  40c0ab:	call   0x17f2:0x55f27a41
  40c0b2:	xchg   ebx,eax
  40c0b3:	dec    eax
  40c0b4:	mov    al,ds:0x1dd384fa
  40c0b9:	mov    edx,0x9419a5fe
  40c0be:	mov    ebx,0x150c32b7
  40c0c3:	inc    esi
  40c0c4:	ja     0x40c0c2
  40c0c6:	xchg   edx,eax
  40c0c7:	xchg   ebx,eax
  40c0c8:	(bad)  
  40c0ca:	test   BYTE PTR [ebp-0x4e53a3ff],dh
  40c0d0:	inc    esp
  40c0d1:	nop
  40c0d2:	fsubr  st(3),st
  40c0d4:	out    dx,al
  40c0d5:	jns    0x40c0a0
  40c0d7:	jecxz  0x40c082
  40c0d9:	inc    edx
  40c0da:	xor    dl,al
  40c0dc:	pop    esp
  40c0dd:	fdiv   DWORD PTR es:[ebp-0x2ccabf]
  40c0e4:	idiv   al
  40c0e6:	popa   
  40c0e7:	xor    DWORD PTR ds:0xc7970ab,edi
  40c0ed:	jle    0x40c169
  40c0ef:	and    bl,BYTE PTR [edx]
  40c0f1:	inc    edx
  40c0f2:	adc    bh,BYTE PTR [edi]
  40c0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0f5:	aam    0xf
  40c0f7:	fcom   DWORD PTR [edx+0x49]
  40c0fa:	mov    DWORD PTR [ebx],0x1544de13
  40c100:	add    dl,BYTE PTR [ebx+0x4d]
  40c103:	push   esi
  40c104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c105:	pop    esp
  40c106:	sub    bh,dl
  40c108:	scas   eax,DWORD PTR es:[edi]
  40c109:	dec    ebx
  40c10a:	shl    BYTE PTR [eax-0x73a0d9bb],1
  40c110:	ja     0x40c18a
  40c112:	inc    edi
  40c113:	out    dx,al
  40c114:	mov    esi,0xb36dcbe3
  40c119:	cs adc ebx,ebx
  40c11c:	adc    DWORD PTR [edi],eax
  40c11e:	(bad)  
  40c11f:	mov    dl,0xdf
  40c121:	xchg   edi,eax
  40c122:	mov    dh,bh
  40c124:	aad    0x9b
  40c126:	scas   eax,DWORD PTR es:[edi]
  40c127:	xchg   edx,eax
  40c128:	fwait
  40c129:	cmp    eax,eax
  40c12b:	and    eax,0x9a7c4f09
  40c130:	gs mov dh,0x9b
  40c133:	mov    eax,ds:0x5e22cf09
  40c138:	xchg   ebx,eax
  40c139:	pusha  
  40c13a:	popf   
  40c13b:	pusha  
  40c13c:	sub    esp,DWORD PTR [ebx-0x22eaca38]
  40c142:	add    BYTE PTR ds:0x539731de,cl
  40c148:	jbe    0x40c15f
  40c14a:	jmp    0x1dca:0x81b5a62e
  40c151:	push   ebp
  40c152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c153:	enter  0x2052,0xae
  40c157:	inc    esp
  40c158:	mov    bl,0xb2
  40c15a:	cmp    al,0xd0
  40c15c:	jmp    0x40c1d3
  40c15e:	test   BYTE PTR [eax],dh
  40c160:	imul   ebp,DWORD PTR [eax+ecx*4+0x58946ee9],0x59
  40c168:	(bad)  
  40c169:	fwait
  40c16a:	gs inc esi
  40c16c:	push   edx
  40c16d:	in     al,dx
  40c16e:	cmp    al,0xfe
  40c170:	lods   eax,DWORD PTR ds:[esi]
  40c171:	jo     0x40c1b6
  40c173:	mov    esp,0x6029ff1d
  40c178:	ret    
  40c179:	xchg   edx,eax
  40c17a:	ss lock pop eax
  40c17d:	sbb    ebx,DWORD PTR gs:[esi]
  40c180:	rol    al,1
  40c182:	mov    al,0xe6
  40c184:	test   BYTE PTR [edx+0x7],bh
  40c187:	dec    ch
  40c189:	and    bh,BYTE PTR [edi-0x32]
  40c18c:	dec    esp
  40c18d:	sbb    eax,0x5e171d63
  40c192:	dec    ecx
  40c193:	dec    esp
  40c194:	fwait
  40c195:	or     al,0x7c
  40c197:	dec    ecx
  40c198:	call   0xed30:0x78fd35fe
  40c19f:	repz jecxz 0x40c129
  40c1a2:	in     al,0xa0
  40c1a4:	mov    dl,BYTE PTR ds:0x661fcd12
  40c1aa:	xchg   esi,eax
  40c1ab:	xchg   esp,eax
  40c1ac:	cli    
  40c1ad:	adc    dl,dl
  40c1af:	jl     0x40c1eb
  40c1b1:	add    al,0x83
  40c1b3:	fild   QWORD PTR [esi-0x24f3a0cb]
  40c1b9:	sbb    ecx,DWORD PTR [eax]
  40c1bb:	je     0x40c200
  40c1bd:	mov    eax,0x8974b947
  40c1c2:	mov    dh,cl
  40c1c4:	jle    0x40c209
  40c1c6:	fwait
  40c1c7:	jno    0x40c15f
  40c1c9:	imul   DWORD PTR [ebx]
  40c1cb:	mov    bh,0x53
  40c1cd:	and    DWORD PTR [ecx+0x25d7831b],edi
  40c1d3:	(bad)  
  40c1d4:	push   ds
  40c1d5:	jge    0x40c1d9
  40c1d7:	out    dx,eax
  40c1d8:	and    eax,0x68d3a1f2
  40c1dd:	pusha  
  40c1de:	dec    esi
  40c1df:	pop    eax
  40c1e0:	nop
  40c1e1:	cmp    dh,ah
  40c1e3:	call   FWORD PTR [esi-0x6f36e2c4]
  40c1e9:	sar    cl,1
  40c1eb:	adc    ebx,DWORD PTR [eax-0x6a1bc31]
  40c1f1:	sub    DWORD PTR [esi-0x23],ebp
  40c1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f5:	and    DWORD PTR [ecx-0x24],0x6e
  40c1f9:	ja     0x40c27a
  40c1fb:	stos   BYTE PTR es:[edi],al
  40c1fc:	int    0x21
  40c1fe:	adc    BYTE PTR [edi],bl
  40c200:	(bad)  
  40c202:	mov    bl,0xf
  40c204:	xchg   ecx,eax
  40c205:	mov    eax,ds:0x74b0b38e
  40c20a:	fdivr  QWORD PTR [eax+0x54]
  40c20d:	scas   al,BYTE PTR es:[edi]
  40c20e:	xor    dl,BYTE PTR [edi-0x67]
  40c211:	fs xor al,bh
  40c214:	out    0x7d,al
  40c216:	lahf   
  40c217:	gs push ecx
  40c219:	sub    BYTE PTR [edx+0x61b5ed27],bh
  40c21f:	add    eax,0x86024548
  40c224:	es out dx,al
  40c226:	add    ch,BYTE PTR [ecx]
  40c228:	mov    ebp,0x21b72c05
  40c22d:	aam    0xfd
  40c22f:	stos   BYTE PTR es:[edi],al
  40c230:	mov    DWORD PTR [eax+0x95fdfd2],ecx
  40c236:	sub    dl,BYTE PTR [ecx]
  40c238:	mov    esp,0x3b4f76af
  40c23d:	in     eax,0xec
  40c23f:	sbb    al,bh
  40c241:	jge    0x40c285
  40c243:	pop    esp
  40c244:	cld    
  40c245:	aaa    
  40c246:	test   al,0x2b
  40c248:	inc    BYTE PTR gs:[ebx]
  40c24b:	or     BYTE PTR [esi-0x6d00446c],0xc9
  40c252:	pop    ebx
  40c253:	sahf   
  40c254:	leave  
  40c255:	fwait
  40c256:	cmc    
  40c257:	and    eax,0x92cde803
  40c25c:	adc    eax,DWORD PTR [ebx+0x3b]
  40c25f:	lds    esi,FWORD PTR [eax+0x7c]
  40c262:	iret   
  40c263:	loop   0x40c278
  40c265:	mov    es,WORD PTR [eax]
  40c267:	cmp    DWORD PTR [ebp-0x61],eax
  40c26a:	test   eax,0xc02152e0
  40c26f:	nop    ebx
  40c272:	xor    al,0x9c
  40c274:	add    edx,ebx
  40c276:	out    dx,eax
  40c277:	sbb    dl,BYTE PTR [ecx+0x3b]
  40c27a:	pushf  
  40c27b:	imul   esi,DWORD PTR [ecx-0x33c588e3],0xabd9a4e3
  40c285:	push   ebp
  40c286:	mov    cl,0xde
  40c288:	dec    edi
  40c289:	dec    DWORD PTR [edi+0xc323a1f]
  40c28f:	add    al,0x56
  40c291:	mov    al,ds:0x197d838c
  40c296:	cld    
  40c297:	out    dx,al
  40c298:	cmp    dh,BYTE PTR [eax]
  40c29a:	shl    BYTE PTR [esi],cl
  40c29c:	lods   al,BYTE PTR ds:[esi]
  40c29d:	mov    WORD PTR ds:0x38182536,ss
  40c2a3:	xor    eax,0xe3b97ac4
  40c2a8:	mov    bl,0x89
  40c2aa:	loopne 0x40c27a
  40c2ac:	xchg   esp,eax
  40c2ad:	mov    bh,0x7a
  40c2af:	aas    
  40c2b0:	ja     0x40c296
  40c2b2:	sbb    al,0x2f
  40c2b4:	mov    cl,0x2f
  40c2b6:	hlt    
  40c2b7:	jmp    0x8a2d8121
  40c2bc:	xor    BYTE PTR [edx-0x39],dh
  40c2bf:	pop    esp
  40c2c0:	xchg   esp,eax
  40c2c1:	test   ah,bh
  40c2c3:	push   ss
  40c2c4:	sar    BYTE PTR [eax+0x34],cl
  40c2c7:	sti    
  40c2c8:	int    0x49
  40c2ca:	xchg   DWORD PTR [edx],esi
  40c2cc:	sbb    eax,0x6de4f73e
  40c2d1:	pop    ss
  40c2d2:	(bad)
  40c2d6:	mov    al,0x74
  40c2d8:	cwde   
  40c2d9:	cmpxchg BYTE PTR [esi+0x55b9a0f2],al
  40c2e0:	hlt    
  40c2e1:	(bad)  
  40c2e2:	jo     0x40c32e
  40c2e4:	repz lds eax,FWORD PTR [eax]
  40c2e7:	sti    
  40c2e8:	jae    0x40c34f
  40c2ea:	outs   dx,DWORD PTR ds:[esi]
  40c2eb:	mov    al,ah
  40c2ed:	aam    0xa3
  40c2ef:	cwde   
  40c2f0:	rol    DWORD PTR [edx+0x3],0x77
  40c2f4:	jmp    0x7795:0xe6a90a49
  40c2fb:	aam    0x14
  40c2fd:	mov    edx,0x11e4a688
  40c302:	gs out 0x43,al
  40c305:	fs popf 
  40c307:	push   eax
  40c308:	lods   al,BYTE PTR ds:[esi]
  40c309:	jl     0x40c29d
  40c30b:	(bad)  [ebp-0x5a293c2e]
  40c311:	jp     0x40c383
  40c313:	clc    
  40c314:	sahf   
  40c315:	rol    DWORD PTR [edi],cl
  40c317:	and    bh,dl
  40c319:	icebp  
  40c31a:	(bad)  
  40c31b:	cmc    
  40c31c:	mov    DWORD PTR [edi+eax*1+0x1d],ebx
  40c320:	lods   al,BYTE PTR ds:[esi]
  40c321:	dec    esp
  40c322:	dec    ecx
  40c323:	add    ebp,ebx
  40c325:	dec    edx
  40c326:	(bad)  
  40c327:	sbb    eax,0xfc1d1840
  40c32c:	jp     0x40c2c5
  40c32e:	rcr    BYTE PTR [ebp-0x7afd250c],cl
  40c334:	and    al,0x2
  40c336:	sub    eax,0xb258cbee
  40c33b:	xchg   esp,eax
  40c33c:	std    
  40c33d:	imul   DWORD PTR [edx+0x2a85b78d]
  40c343:	xlat   BYTE PTR ds:[ebx]
  40c344:	in     al,0xb2
  40c346:	sbb    edi,DWORD PTR [esi+0x37]
  40c349:	dec    esp
  40c34a:	(bad)  
  40c34b:	jne    0x40c2f1
  40c34d:	enter  0xe8de,0x8f
  40c351:	out    dx,al
  40c352:	(bad)  
  40c353:	icebp  
  40c354:	outs   dx,BYTE PTR ds:[esi]
  40c355:	nop
  40c356:	loop   0x40c363
  40c358:	fcomp  st(4)
  40c35a:	inc    edx
  40c35b:	cli    
  40c35c:	pop    ds
  40c35d:	mov    dh,0x44
  40c35f:	aad    0xe6
  40c361:	xchg   edx,eax
  40c362:	adc    eax,0x1517a39f
  40c367:	in     eax,0x2d
  40c369:	and    DWORD PTR [eax+0x4b463f38],ebx
  40c36f:	ds mov fs,ecx
  40c372:	jne    0x40c2f4
  40c374:	shl    DWORD PTR [edi+0x7d],0x8d
  40c378:	lea    ebp,[ebx-0x4b15ae81]
  40c37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37f:	pop    eax
  40c380:	and    ebx,esp
  40c382:	mov    edi,DWORD PTR [ebp+0x4364d8c5]
  40c388:	das    
  40c389:	(bad)
  40c38d:	test   DWORD PTR [ebx-0x66],0xe72f0757
  40c394:	mov    esp,0x204d618b
  40c399:	jb     0x40c343
  40c39b:	mov    esp,0xf8267902
  40c3a0:	cmc    
  40c3a1:	inc    edx
  40c3a2:	jecxz  0x40c324
  40c3a4:	scas   eax,DWORD PTR es:[edi]
  40c3a5:	jle    0x40c397
  40c3a7:	das    
  40c3a8:	rcr    DWORD PTR [eax],0xe6
  40c3ab:	sbb    cl,BYTE PTR [ecx+0x30]
  40c3ae:	int    0x3f
  40c3b0:	loop   0x40c3fd
  40c3b2:	pop    edx
  40c3b3:	sub    DWORD PTR [ebp-0x4f],esi
  40c3b6:	arpl   WORD PTR [ecx+0x4bc9876b],bx
  40c3bc:	jnp    0x40c421
  40c3be:	mov    ?,edi
  40c3c0:	es in  al,dx
  40c3c2:	fstp   QWORD PTR [ebp-0x3b459a54]
  40c3c8:	arpl   WORD PTR [ebx],bp
  40c3ca:	inc    edx
  40c3cb:	std    
  40c3cc:	hlt    
  40c3cd:	add    esp,edi
  40c3cf:	js     0x40c44e
  40c3d1:	clc    
  40c3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d3:	adc    al,0xee
  40c3d5:	mov    WORD PTR [edx-0x6f279510],fs
  40c3db:	inc    ecx
  40c3dc:	mov    esp,DWORD PTR ds:0x1aa1b2a
  40c3e2:	pop    es
  40c3e3:	and    ah,BYTE PTR [edx]
  40c3e5:	popa   
  40c3e6:	(bad)  [ebp+0x4c]
  40c3e9:	popf   
  40c3ea:	lock std 
  40c3ec:	addr16 mov esp,0x8c2f10d6
  40c3f2:	shl    BYTE PTR [edi-0x380a275c],cl
  40c3f8:	aaa    
  40c3f9:	pop    es
  40c3fa:	push   ebx
  40c3fb:	in     eax,0xa9
  40c3fd:	push   edx
  40c3fe:	hlt    
  40c3ff:	aas    
  40c400:	call   0xca27:0xeb588530
  40c407:	push   ecx
  40c408:	or     BYTE PTR [esi-0x7d6667d6],dh
  40c40e:	mov    ch,0x61
  40c410:	retf   
  40c411:	out    dx,al
  40c412:	in     al,dx
  40c413:	shl    dl,0xfc
  40c416:	add    al,0x93
  40c418:	into   
  40c419:	retf   
  40c41a:	pop    edi
  40c41b:	xchg   ecx,eax
  40c41c:	lods   eax,DWORD PTR ds:[esi]
  40c41d:	cld    
  40c41e:	and    DWORD PTR [edi+0x1e],ebp
  40c421:	mov    ecx,0x90c1bc22
  40c426:	repz sub eax,0xc4c382b7
  40c42c:	adc    BYTE PTR [esi+ebx*8],al
  40c42f:	enter  0x20d3,0xb1
  40c433:	xor    DWORD PTR [edi],ecx
  40c435:	xor    al,0xfc
  40c437:	test   dh,ah
  40c439:	mov    BYTE PTR [ebx+esi*1+0xf],al
  40c43d:	sysexit 
  40c43f:	lock into 
  40c441:	aas    
  40c442:	into   
  40c443:	add    BYTE PTR [ebp-0xf72ef5a],ch
  40c449:	fwait
  40c44a:	dec    esp
  40c44b:	into   
  40c44c:	pusha  
  40c44d:	mov    fs,WORD PTR [eax+0x26d5aa61]
  40c453:	xor    al,0x6b
  40c455:	cmp    al,0xe9
  40c457:	push   edi
  40c458:	mov    edx,0x68482a57
  40c45d:	push   ebp
  40c45e:	cmp    al,0x7b
  40c460:	add    eax,0xf3a59f61
  40c465:	ja     0x40c4b6
  40c467:	imul   ecx,DWORD PTR [eax-0x2e9a37bd],0x66
  40c46e:	arpl   WORD PTR [eax-0x42],bx
  40c471:	enterw 0xb3c1,0x2c
  40c476:	mov    bl,0x31
  40c478:	lea    ebp,[ecx-0x6e]
  40c47b:	ror    BYTE PTR [ebp+0x44f2e95e],0xa2
  40c482:	cmp    BYTE PTR [edi],al
  40c484:	mov    bl,0xdc
  40c486:	pop    eax
  40c487:	cmp    edx,DWORD PTR [esi+0xd]
  40c48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c48b:	stos   DWORD PTR es:[edi],eax
  40c48c:	or     al,0x1a
  40c48e:	mov    ebp,ecx
  40c490:	jmp    0xe6f748be
  40c495:	(bad)  
  40c496:	clc    
  40c497:	fcmovnbe st,st(6)
  40c499:	out    dx,al
  40c49a:	fnstsw WORD PTR [edi]
  40c49c:	rol    BYTE PTR [eax+0x10],0x17
  40c4a0:	stos   DWORD PTR es:[edi],eax
  40c4a1:	xchg   edi,eax
  40c4a2:	jb     0x40c4f1
  40c4a4:	xchg   ebx,eax
  40c4a5:	sub    DWORD PTR [ebp+0x78919264],ebp
  40c4ab:	(bad)  
  40c4ac:	(bad)  
  40c4ad:	mov    cl,0xde
  40c4af:	mov    cl,0x38
  40c4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b2:	mov    dh,0x5b
  40c4b4:	dec    edi
  40c4b5:	ror    BYTE PTR [ecx+edx*8-0x79a55c64],cl
  40c4bc:	ins    BYTE PTR es:[edi],dx
  40c4bd:	push   cs
  40c4be:	ja     0x40c4c1
  40c4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4c1:	clc    
  40c4c2:	pop    ecx
  40c4c3:	push   esi
  40c4c4:	jnp    0x40c527
  40c4c6:	inc    edx
  40c4c7:	jne    0x40c49d
  40c4c9:	lods   eax,DWORD PTR ds:[esi]
  40c4ca:	push   eax
  40c4cb:	cmp    al,0xd9
  40c4cd:	or     al,0xf
  40c4cf:	shl    DWORD PTR [edx+ebp*1+0x6beba93d],cl
  40c4d6:	rcr    DWORD PTR [ebp-0x4a88dafa],0xdd
  40c4dd:	push   ebp
  40c4de:	add    edi,DWORD PTR [ebp-0x66]
  40c4e1:	and    BYTE PTR [ecx],dl
  40c4e3:	sbb    ebx,DWORD PTR [eax-0x42ea62b2]
  40c4e9:	push   ecx
  40c4ea:	test   eax,0xe87e6675
  40c4ef:	test   al,0xa4
  40c4f1:	aad    0x22
  40c4f3:	iret   
  40c4f4:	bound  edx,QWORD PTR [edx+0x9]
  40c4f7:	pop    edi
  40c4f8:	dec    esp
  40c4f9:	push   esi
  40c4fa:	pop    ebp
  40c4fb:	mov    edi,DWORD PTR [eax]
  40c4fd:	add    eax,0xb6bef030
  40c502:	(bad)  
  40c503:	jmp    0xaafc0dc8
  40c508:	xchg   BYTE PTR [ebp-0x22],ah
  40c50b:	jnp    0x40c48d
  40c50d:	call   0xd27f:0xce2f918
  40c514:	fld    st(4)
  40c516:	add    eax,0x1a860b06
  40c51b:	sbb    dh,al
  40c51d:	xchg   ebp,eax
  40c51e:	test   eax,0xe228c177
  40c523:	stos   BYTE PTR es:[edi],al
  40c524:	retf   0xe1b5
  40c527:	adc    ch,dl
  40c529:	outs   dx,DWORD PTR ds:[esi]
  40c52a:	arpl   cx,bp
  40c52c:	pop    ebx
  40c52d:	fsubr  st(1),st
  40c52f:	xor    DWORD PTR [ebx],0x90d405c9
  40c535:	and    eax,0xda0c8441
  40c53a:	stos   DWORD PTR es:[edi],eax
  40c53b:	pop    es
  40c53c:	xchg   ecx,eax
  40c53d:	xchg   edi,eax
  40c53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c53f:	cmc    
  40c540:	popf   
  40c541:	aam    0x6d
  40c543:	aam    0x8a
  40c545:	std    
  40c546:	xor    al,0x65
  40c548:	jge    0x40c5a0
  40c54a:	imul   ebx,DWORD PTR [edi+0x60],0x9b552272
  40c551:	push   edi
  40c552:	jl     0x40c541
  40c554:	rcl    esp,cl
  40c556:	jecxz  0x40c4f1
  40c558:	scas   al,BYTE PTR es:[edi]
  40c559:	loope  0x40c518
  40c55b:	and    al,0xb4
  40c55d:	sbb    DWORD PTR [ebp+0x58],ebp
  40c560:	inc    edx
  40c561:	fistp  WORD PTR [edi-0x42133970]
  40c567:	cmp    bl,ch
  40c569:	cld    
  40c56a:	lods   al,BYTE PTR ds:[esi]
  40c56b:	mov    ebx,0x5d8b5d1d
  40c570:	bound  ebp,QWORD PTR [edx+0x1d68a72f]
  40c576:	adc    ecx,DWORD PTR [esp+esi*1]
  40c579:	loopne 0x40c5b7
  40c57b:	stos   BYTE PTR es:[edi],al
  40c57c:	inc    ecx
  40c57d:	dec    ebx
  40c57e:	mov    cl,0x36
  40c580:	mov    ecx,0xfe4434f8
  40c585:	push   ebp
  40c586:	jge    0x40c52d
  40c588:	jne    0x40c559
  40c58a:	or     BYTE PTR [esi],0x24
  40c58d:	adc    DWORD PTR [esp+edx*4+0xa],ebx
  40c591:	icebp  
  40c592:	xchg   edi,eax
  40c593:	jle    0x40c51a
  40c595:	lods   eax,DWORD PTR ds:[esi]
  40c596:	jp     0x40c55a
  40c598:	cwde   
  40c599:	adc    bl,dl
  40c59b:	out    dx,eax
  40c59c:	(bad)  
  40c59d:	mov    esi,0x17ed7e2e
  40c5a2:	mov    ds:0x99daece3,eax
  40c5a7:	mov    bh,0x6e
  40c5a9:	ror    bh,0xf0
  40c5ac:	mov    DWORD PTR [ebx-0x54ef4975],esi
  40c5b2:	jo     0x40c5b4
  40c5b4:	push   es
  40c5b5:	pop    esp
  40c5b6:	imul   eax
  40c5b8:	mov    BYTE PTR [ecx+0x782b0e21],cl
  40c5be:	jmp    DWORD PTR [eax]
  40c5c0:	xlat   BYTE PTR ds:[ebx]
  40c5c1:	push   es
  40c5c2:	jnp    0x40c57b
  40c5c4:	mov    dh,0xb4
  40c5c6:	xchg   edx,eax
  40c5c7:	xchg   ebp,eax
  40c5c8:	in     eax,0xa0
  40c5ca:	out    dx,al
  40c5cb:	mov    al,ds:0xc77ea0d5
  40c5d0:	out    0xfd,eax
  40c5d2:	sub    bh,cl
  40c5d4:	arpl   di,si
  40c5d6:	ja     0x40c579
  40c5d8:	aaa    
  40c5d9:	or     dh,BYTE PTR [esi-0x11]
  40c5dc:	push   0xf8bac282
  40c5e1:	sub    BYTE PTR ds:0x9ea691c5,0x12
  40c5e8:	xor    cl,al
  40c5ea:	or     dl,bl
  40c5ec:	cmp    al,0xad
  40c5ee:	das    
  40c5ef:	lods   al,BYTE PTR ds:[esi]
  40c5f0:	enter  0x4cf9,0x0
  40c5f4:	aaa    
  40c5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f6:	push   ss
  40c5f7:	jno    0x40c620
  40c5f9:	ss stos BYTE PTR es:[edi],al
  40c5fb:	fidivr WORD PTR [ecx+0x3e11ddd5]
  40c601:	or     dl,BYTE PTR [eax+0x26e71e18]
  40c607:	clc    
  40c608:	jge    0x40c5cc
  40c60a:	cmp    ch,dh
  40c60c:	inc    ebx
  40c60d:	pop    ebp
  40c60e:	popa   
  40c60f:	xchg   edi,eax
  40c610:	aad    0x38
  40c612:	std    
  40c613:	pop    ecx
  40c614:	jmp    0x40c66b
  40c616:	xor    BYTE PTR [edx+0x20dbed5b],ah
  40c61c:	mul    BYTE PTR [esi-0xb]
  40c61f:	in     al,0x2f
  40c621:	sub    ebx,0xb
  40c624:	fs pop es
  40c626:	add    BYTE PTR [ecx+0x4a],bl
  40c629:	gs cwde 
  40c62b:	inc    ebp
  40c62c:	or     edx,ebp
  40c62e:	test   al,0xae
  40c630:	sub    cl,BYTE PTR [ebx+0xe61a532]
  40c636:	jae    0x40c63d
  40c638:	aad    0x5e
  40c63a:	lahf   
  40c63b:	xchg   DWORD PTR [edx-0x1f],edi
  40c63e:	(bad)  
  40c63f:	xor    dh,BYTE PTR [edx]
  40c641:	ins    DWORD PTR es:[edi],dx
  40c642:	jno    0x40c5e4
  40c644:	(bad)  
  40c645:	arpl   di,bx
  40c647:	mov    WORD PTR [edi-0x73],ds
  40c64a:	push   cs
  40c64b:	or     al,0xda
  40c64d:	out    0x9d,al
  40c64f:	pop    ebx
  40c650:	push   esp
  40c651:	hlt    
  40c652:	imul   ebp,DWORD PTR [eax+0x3f0b2d3],0xffffffe5
  40c659:	or     ebx,edi
  40c65b:	mov    bl,0x71
  40c65d:	repnz mov cl,0x6f
  40c660:	ret    
  40c661:	mov    ecx,0x8c347664
  40c666:	fcmove st,st(5)
  40c668:	jmp    0x7a40:0xea01d9f7
  40c66f:	fwait
  40c670:	shl    DWORD PTR [edx+0x3b1f17ee],cl
  40c676:	fwait
  40c677:	adc    eax,0xe3651b3c
  40c67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c67d:	pop    ecx
  40c67e:	xchg   edx,eax
  40c67f:	and    BYTE PTR [eax-0x37],dl
  40c682:	dec    esp
  40c683:	ret    
  40c684:	js     0x40c6fe
  40c686:	or     DWORD PTR ds:0xb69edbaa,0xd594cdd4
  40c690:	mov    dh,BYTE PTR [eax+0x8]
  40c693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c694:	push   eax
  40c695:	sbb    al,0x40
  40c697:	inc    esp
  40c698:	ins    BYTE PTR es:[edi],dx
  40c699:	sbb    cl,dl
  40c69b:	lea    eax,[ecx]
  40c69d:	out    dx,al
  40c69e:	sar    BYTE PTR [di],0x24
  40c6a2:	or     DWORD PTR [ebp-0x1],ebp
  40c6a5:	xlat   BYTE PTR ds:[ebx]
  40c6a6:	lods   eax,DWORD PTR ds:[esi]
  40c6a7:	sub    DWORD PTR [ebx-0x6b],ebx
  40c6aa:	or     BYTE PTR [ebp+0x56],ah
  40c6ad:	sbb    al,0x34
  40c6af:	aad    0xb5
  40c6b1:	sti    
  40c6b2:	adc    BYTE PTR ds:0x3b739c99,0xc5
  40c6b9:	mov    DWORD PTR ds:0x352ac09e,edi
  40c6c0:	xchg   ebx,eax
  40c6c2:	lods   eax,DWORD PTR ds:[esi]
  40c6c3:	ror    BYTE PTR [edx+0x3089b116],1
  40c6c9:	mov    ah,0xc2
  40c6cb:	mov    ah,0x85
  40c6cd:	sbb    eax,DWORD PTR [esi+eax*1]
  40c6d0:	ret    0x4281
  40c6d3:	mov    bh,0xfa
  40c6d5:	fs jecxz 0x40c6aa
  40c6d8:	shl    BYTE PTR [eax+0x1a7c351a],cl
  40c6de:	and    al,0x94
  40c6e0:	jle    0x40c70b
  40c6e2:	(bad)  
  40c6e3:	fisttp DWORD PTR [esi-0x6b]
  40c6e6:	xor    bh,ah
  40c6e8:	iret   
  40c6e9:	test   al,0x5b
  40c6eb:	xchg   edx,eax
  40c6ec:	and    esp,DWORD PTR es:0x8a6b9ba4
  40c6f3:	mov    ebp,0xdb6c5115
  40c6f8:	or     DWORD PTR [ecx+esi*8],ebx
  40c6fb:	shl    BYTE PTR [edi-0x5e],0x55
  40c6ff:	jl     0x40c6f0
  40c701:	mov    eax,DWORD PTR [eax-0x1cf103b0]
  40c707:	add    dl,cl
  40c709:	push   edx
  40c70a:	call   0x6246:0x92afc6b2
  40c711:	and    eax,0xc5b71ede
  40c716:	test   DWORD PTR [esi+0x5e8b79b9],edx
  40c71c:	int    0x56
  40c71e:	xchg   ecx,eax
  40c71f:	call   0x53586e43
  40c724:	mov    al,ds:0x54967a1f
  40c729:	popf   
  40c72a:	cld    
  40c72b:	or     BYTE PTR [ebp+0x62],0xf0
  40c72f:	xchg   esp,eax
  40c730:	stos   BYTE PTR es:[edi],al
  40c731:	(bad)  
  40c732:	adc    BYTE PTR [esi-0x7dc0bf58],al
  40c738:	mov    eax,ds:0x2a4bdd6f
  40c73d:	shr    DWORD PTR [eax+0x3fc380d2],cl
  40c743:	xor    eax,0x2517b9fa
  40c748:	cwde   
  40c749:	ret    0xa1d1
  40c74c:	jno    0x40c73f
  40c74e:	lea    ebp,[esi+ebx*8-0x4c63b7ea]
  40c755:	xchg   ebx,eax
  40c756:	cwde   
  40c757:	fwait
  40c758:	stos   DWORD PTR es:[edi],eax
  40c759:	sub    BYTE PTR [eax+0xbc77ff3],0x90
  40c760:	lds    esi,FWORD PTR [eax-0x2d]
  40c763:	add    al,0x5f
  40c765:	xchg   BYTE PTR [esi],al
  40c767:	push   0x637611db
  40c76c:	or     DWORD PTR es:[ecx+ebx*4],esi
  40c770:	xchg   ebx,eax
  40c771:	add    BYTE PTR [edi],bh
  40c773:	or     ebp,edx
  40c775:	sbb    BYTE PTR [edi-0x4e],ah
  40c778:	xchg   ebx,eax
  40c779:	(bad)  [ebp+0x4e]
  40c77c:	or     eax,0x9e905881
  40c781:	sub    BYTE PTR ds:0xb20dad75,ch
  40c787:	cmp    BYTE PTR [eax+edx*2+0x0],0xd5
  40c78c:	push   es
  40c78d:	mov    ecx,0xd9125a9e
  40c792:	sub    DWORD PTR [edi],ebx
  40c794:	pop    edx
  40c795:	jg     0x40c7cc
  40c797:	fdivr  DWORD PTR [eax-0x6b]
  40c79a:	mov    edi,ecx
  40c79c:	push   esp
  40c79d:	rcr    DWORD PTR [eax],1
  40c79f:	imul   ecx,DWORD PTR [esi+0x6f852e1a],0xffffffb0
  40c7a6:	mov    dl,0xc8
  40c7a8:	daa    
  40c7a9:	arpl   WORD PTR [ecx+eax*4-0x5e],bp
  40c7ad:	mov    ecx,0x6161ad57
  40c7b2:	les    esi,FWORD PTR [ebp+0x5c]
  40c7b5:	cmp    ebp,ebx
  40c7b7:	sbb    BYTE PTR ds:0x8aad03cc,bh
  40c7bd:	mov    dh,0x58
  40c7bf:	pop    esi
  40c7c0:	inc    ebx
  40c7c1:	nop
  40c7c2:	inc    edi
  40c7c3:	pop    eax
  40c7c4:	jmp    0x1230:0x2a494b96
  40c7cb:	add    BYTE PTR [ebp-0x36],ah
  40c7ce:	push   edx
  40c7cf:	(bad)  
  40c7d0:	or     cl,BYTE PTR [edi-0x25f3bce8]
  40c7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d7:	and    BYTE PTR [eax],dl
  40c7d9:	(bad)  
  40c7da:	gs jg  0x40c816
  40c7dd:	retf   0x3cf6
  40c7e0:	cli    
  40c7e1:	xchg   esi,eax
  40c7e2:	xlat   BYTE PTR ds:[ebx]
  40c7e3:	mov    ebx,ebp
  40c7e5:	daa    
  40c7e6:	xor    DWORD PTR [ebp+0x5f],esi
  40c7e9:	xchg   esp,eax
  40c7ea:	or     eax,0x492b54b8
  40c7ef:	mov    ecx,esi
  40c7f1:	cmc    
  40c7f2:	imul   ecx,esp,0xfffffff5
  40c7f5:	jle    0x40c807
  40c7f7:	jmp    0x40c7eb
  40c7f9:	loop   0x40c78e
  40c7fb:	xor    BYTE PTR [eax],bh
  40c7fd:	mov    al,ds:0xf8dfa665
  40c802:	mov    al,ds:0x8994f0fa
  40c807:	sub    edi,esi
  40c809:	xchg   esp,eax
  40c80a:	imul   edi,DWORD PTR [ebp-0x2cdba916],0x2f
  40c811:	mov    bh,0x7d
  40c813:	and    BYTE PTR [edx+0x43],0xfe
  40c817:	or     BYTE PTR [ebx+0xf],bh
  40c81a:	(bad)  
  40c81c:	sbb    eax,edx
  40c81e:	push   0x7f
  40c820:	and    bh,bl
  40c822:	stos   BYTE PTR es:[edi],al
  40c823:	mov    esp,0xe4be6424
  40c828:	jl     0x40c806
  40c82a:	or     ebp,DWORD PTR [edi]
  40c82c:	out    0x22,eax
  40c82e:	ror    BYTE PTR [esi+0x4bc29544],0x2c
  40c835:	xchg   BYTE PTR [esi],al
  40c837:	sar    DWORD PTR [ecx-0x2b301041],0x77
  40c83e:	(bad)  
  40c83f:	fisttp WORD PTR [ecx+0x19f86f82]
  40c845:	arpl   bp,cx
  40c847:	and    al,dh
  40c849:	cmp    DWORD PTR [eax],edx
  40c84b:	in     al,0x4c
  40c84d:	push   ebx
  40c84e:	retf   0xb076
  40c851:	aaa    
  40c852:	mov    ecx,0x89153f3e
  40c857:	nop
  40c858:	mov    edi,esi
  40c85a:	fdiv   st,st(4)
  40c85c:	sbb    dl,BYTE PTR [ebp+0x33c536f]
  40c862:	stos   DWORD PTR es:[edi],eax
  40c863:	jmp    0x655:0x247a87b7
  40c86a:	or     DWORD PTR ds:0x2a5d49d9,ecx
  40c870:	xchg   bl,dh
  40c872:	out    dx,al
  40c873:	mov    WORD PTR [edi+0x7e],es
  40c876:	or     BYTE PTR [esi+ecx*1+0x261a3b1f],dh
  40c87d:	fld    DWORD PTR [ebx]
  40c87f:	pop    eax
  40c880:	out    0xa3,al
  40c882:	cli    
  40c883:	mov    ss,WORD PTR [ebx]
  40c885:	mov    bl,0x9e
  40c887:	inc    ebx
  40c888:	fwait
  40c889:	push   ebp
  40c88a:	pop    esp
  40c88b:	dec    ebx
  40c88c:	mov    ebx,0xd3b9716d
  40c891:	inc    BYTE PTR [eax+0x75b221f5]
  40c897:	fstp   DWORD PTR [ebx-0x2b]
  40c89a:	fisubr DWORD PTR [esi+0x42]
  40c89d:	xlat   BYTE PTR ds:[ebx]
  40c89e:	ja     0x40c8c0
  40c8a0:	or     al,BYTE PTR [esi]
  40c8a2:	daa    
  40c8a3:	mov    ebp,0xcca1b6d0
  40c8a8:	lea    ecx,[bx+di-0x36]
  40c8ac:	div    BYTE PTR [eax-0x46]
  40c8af:	sahf   
  40c8b0:	jne    0x40c87b
  40c8b2:	and    DWORD PTR [eax+0x4d],edi
  40c8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b6:	cmp    eax,0xa48a2a06
  40c8bb:	mov    ds,WORD PTR [ebx+ecx*1-0x54]
  40c8bf:	rol    bh,1
  40c8c1:	sahf   
  40c8c2:	xchg   ebp,eax
  40c8c3:	mov    ch,0xfc
  40c8c5:	dec    edi
  40c8c6:	scas   eax,DWORD PTR es:[edi]
  40c8c7:	(bad)  
  40c8c8:	jnp    0x40c84c
  40c8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8cb:	adc    al,0x7b
  40c8cd:	shl    DWORD PTR [edi],cl
  40c8cf:	mov    ch,dl
  40c8d1:	shr    DWORD PTR [edi+0x55],cl
  40c8d4:	bnd jmp 0x91de0026
  40c8da:	xchg   ebx,eax
  40c8db:	mov    cl,0xc
  40c8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8de:	mov    ebp,0xe8b28844
  40c8e3:	push   esi
  40c8e4:	adc    eax,0x3c2b9682
  40c8e9:	mov    eax,ds:0xeea515a3
  40c8ee:	xor    DWORD PTR [ebx+0x3b],ebp
  40c8f1:	sbb    eax,0x9ab9732a
  40c8f6:	sahf   
  40c8f7:	aaa    
  40c8f8:	imul   DWORD PTR [eax+0x55]
  40c8fb:	sub    al,BYTE PTR [esi+0x4d]
  40c8fe:	das    
  40c8ff:	sbb    eax,edx
  40c901:	inc    ecx
  40c902:	std    
  40c903:	xchg   esi,eax
  40c904:	mov    al,0x7b
  40c906:	mov    ds:0x4fee3dc6,al
  40c90b:	adc    eax,0xbb1babec
  40c910:	and    cl,BYTE PTR [ecx+eax*4-0x11]
  40c914:	push   edi
  40c915:	in     eax,dx
  40c916:	int    0xc
  40c918:	push   ebp
  40c919:	pop    esi
  40c91a:	icebp  
  40c91b:	sub    eax,0xf449ab2d
  40c920:	bound  esi,QWORD PTR [ebx-0x5c]
  40c923:	not    ebx
  40c925:	loopne 0x40c914
  40c927:	mov    ebx,DWORD PTR [esi-0x50]
  40c92a:	cmc    
  40c92b:	mov    ebx,0xa94635c1
  40c930:	sbb    ecx,DWORD PTR [ebp-0x71341a1e]
  40c936:	xlat   BYTE PTR ds:[ebx]
  40c937:	daa    
  40c938:	cmp    ah,BYTE PTR [eax]
  40c93a:	sahf   
  40c93b:	shl    dh,1
  40c93d:	jmp    0xcc02178e
  40c942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c943:	test   eax,0xbe36dd
  40c948:	fadd   QWORD PTR [ebx+0x5b31b39c]
  40c94e:	push   ebp
  40c94f:	es mov ch,0xf6
  40c952:	in     al,dx
  40c953:	(bad)  
  40c954:	ror    BYTE PTR [edx-0x3b],cl
  40c957:	add    DWORD PTR [edx],esi
  40c959:	xor    eax,0xd83a40ba
  40c95e:	ja     0x40c951
  40c960:	jl     0x40c96e
  40c962:	call   0x40be:0x22e49ead
  40c969:	inc    edi
  40c96a:	cmp    eax,ebx
  40c96c:	ins    DWORD PTR es:[edi],dx
  40c96d:	add    DWORD PTR [edx*4-0x3a3f5df],ebp
  40c974:	ret    0x983d
  40c977:	inc    esp
  40c978:	dec    edx
  40c979:	cli    
  40c97a:	mov    al,0x82
  40c97c:	(bad)  
  40c97d:	test   al,0x99
  40c97f:	mov    esp,DWORD PTR [eax-0x56cc577e]
  40c985:	push   es
  40c986:	jae    0x40c955
  40c988:	sub    DWORD PTR [edi-0x3fbcf8b7],ecx
  40c98e:	and    esp,DWORD PTR [eax-0x69f36cb7]
  40c994:	outs   dx,DWORD PTR ds:[esi]
  40c995:	cmp    DWORD PTR [edi-0x68808536],esp
  40c99b:	xchg   ebx,eax
  40c99c:	mov    ecx,0x55771615
  40c9a1:	adc    cl,BYTE PTR ds:0xdf5f44a2
  40c9a7:	jo     0x40c9ba
  40c9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9aa:	es std 
  40c9ac:	ins    DWORD PTR es:[edi],dx
  40c9ad:	in     al,0x4c
  40c9af:	scas   al,BYTE PTR es:[edi]
  40c9b0:	mov    edx,0x896cbb3
  40c9b5:	pushf  
  40c9b6:	fstp   TBYTE PTR [eax+0x33567de5]
  40c9bc:	sti    
  40c9bd:	fimul  WORD PTR [ecx-0x6dda80d1]
  40c9c3:	rcl    DWORD PTR [edx-0xf],cl
  40c9c6:	or     esp,DWORD PTR [edx-0x5d30f59]
  40c9cc:	pop    ds
  40c9cd:	push   ss
  40c9ce:	mov    bl,0x54
  40c9d0:	cwde   
  40c9d1:	icebp  
  40c9d2:	out    0x7f,eax
  40c9d4:	or     eax,0x4dd1bc51
  40c9d9:	loope  0x40c9eb
  40c9db:	fwait
  40c9dc:	js     0x40c993
  40c9de:	cmp    DWORD PTR [ecx+0x38],esi
  40c9e1:	fiadd  WORD PTR [ebx-0x51]
  40c9e4:	jbe    0x40c9ba
  40c9e6:	bound  eax,QWORD PTR [ebx-0x1235bc30]
  40c9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ed:	xchg   esp,eax
  40c9ee:	lea    ebp,[ecx-0x7cdd517f]
  40c9f4:	stos   BYTE PTR es:[edi],al
  40c9f5:	sub    edx,ebp
  40c9f7:	(bad)  
  40c9f8:	jnp    0x40c9cb
  40c9fa:	in     eax,0x31
  40c9fc:	xlat   BYTE PTR ds:[ebx]
  40c9fd:	fwait
  40c9fe:	jnp    0x40ca19
  40ca00:	cmp    edx,0xa6bfa54b
  40ca06:	into   
  40ca07:	jmp    0xe1bcd2c4
  40ca0c:	cmp    eax,0x45b7742a
  40ca11:	jo     0x40c995
  40ca13:	mov    DWORD PTR [esi-0x64],esi
  40ca16:	retf   
  40ca17:	cdq    
  40ca18:	mov    es,WORD PTR [ebx-0x4d]
  40ca1b:	ds inc edx
  40ca1d:	cdq    
  40ca1e:	xchg   ebp,eax
  40ca1f:	and    DWORD PTR [ebx-0x55baa3e0],esi
  40ca25:	icebp  
  40ca26:	dec    ebp
  40ca27:	xchg   esi,eax
  40ca28:	mov    bl,0x63
  40ca2a:	aas    
  40ca2b:	pop    ebp
  40ca2c:	lea    edx,[ebp+0x23]
  40ca2f:	out    0xd2,al
  40ca31:	js     0x40caad
  40ca33:	div    BYTE PTR [eax+0x27]
  40ca36:	add    DWORD PTR [edi],ecx
  40ca38:	es push edi
  40ca3a:	sbb    ah,ah
  40ca3c:	out    dx,al
  40ca3d:	xchg   edi,eax
  40ca3e:	xor    al,0x2a
  40ca40:	xchg   ebx,eax
  40ca41:	inc    eax
  40ca42:	outs   dx,DWORD PTR ds:[esi]
  40ca43:	fsub   DWORD PTR ds:[eax+edx*4-0x44745b55]
  40ca4b:	(bad)  
  40ca4c:	outs   dx,DWORD PTR ds:[esi]
  40ca4d:	(bad)  
  40ca4e:	push   ecx
  40ca4f:	add    DWORD PTR [eax],esi
  40ca51:	dec    edx
  40ca52:	xor    BYTE PTR [ecx],ah
  40ca54:	(bad)  
  40ca55:	nop
  40ca56:	(bad)  
  40ca57:	shl    BYTE PTR [esi-0x3c],cl
  40ca5a:	ss push esp
  40ca5c:	ss jmp 0x514d8e9
  40ca62:	clc    
  40ca63:	xchg   edx,eax
  40ca64:	fs call 0x119d:0x1cde56b3
  40ca6c:	and    ch,bl
  40ca6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca6f:	ds test DWORD PTR fs:[ecx+eax*2-0x6fab4dc6],ecx
  40ca78:	imul   ebx,DWORD PTR [ecx],0x79
  40ca7b:	jno    0x40ca4f
  40ca7d:	mov    fs,WORD PTR [eax-0xf]
  40ca80:	jmp    0x7c0b8f9b
  40ca85:	pop    edi
  40ca86:	pop    edx
  40ca87:	jp     0x40caa2
  40ca89:	sub    DWORD PTR [eax+0x54],ebx
  40ca8c:	mov    ebx,0xb5ac4b49
  40ca91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca92:	pop    edx
  40ca93:	and    BYTE PTR [edx-0x25],0x90
  40ca97:	test   eax,0x73b70b4d
  40ca9c:	jmp    0x40ca39
  40ca9e:	adc    eax,0x12a33270
  40caa3:	or     al,0x9b
  40caa5:	iret   
  40caa6:	adc    DWORD PTR [esi],esp
  40caa8:	xor    esi,esi
  40caaa:	inc    eax
  40caab:	(bad)  
  40caad:	retf   
  40caae:	push   ebp
  40caaf:	sbb    BYTE PTR [edx-0x46795f1a],0x69
  40cab6:	xchg   dl,al
  40cab8:	mov    eax,ds:0x2fbc86b3
  40cabd:	scas   eax,DWORD PTR es:[edi]
  40cabe:	retf   
  40cabf:	cs sub al,0x95
  40cac2:	or     ecx,DWORD PTR cs:[edx-0x52]
  40cac6:	push   edx
  40cac7:	loope  0x40ca49
  40cac9:	(bad)  
  40caca:	iret   
  40cacb:	call   0x5fce525c
  40cad0:	das    
  40cad1:	inc    esi
  40cad2:	jae    0x40cb03
  40cad4:	not    BYTE PTR [esp+esi*8-0x72]
  40cad8:	repz mov cs,WORD PTR [ebp+0x15e56487]
  40cadf:	pop    ss
  40cae0:	cmp    al,0x69
  40cae2:	repnz cmp eax,0x8c05c63d
  40cae8:	or     BYTE PTR [edi-0x638299de],0x98
  40caef:	pop    ds
  40caf0:	cdq    
  40caf1:	cmp    BYTE PTR [edx+0x2d77584b],ah
  40caf7:	mov    ds:0xf6c2e7ef,eax
  40cafc:	stos   DWORD PTR es:[edi],eax
  40cafd:	lods   al,BYTE PTR ds:[esi]
  40cafe:	sbb    DWORD PTR [ecx-0x41],ebp
  40cb01:	imul   edx,edi,0xffffffa7
  40cb04:	cmp    al,0x60
  40cb06:	mul    BYTE PTR [esi+0x67]
  40cb09:	dec    DWORD PTR [esi]
  40cb0b:	sbb    eax,0xa96232ea
  40cb10:	pop    ss
  40cb11:	es dec ebp
  40cb13:	and    BYTE PTR [bx+si+0x5b],dh
  40cb17:	dec    ecx
  40cb18:	sbb    al,0xe7
  40cb1a:	mov    ah,0xa2
  40cb1c:	sub    al,0xf7
  40cb1e:	repz mov ch,0xf0
  40cb21:	mov    cl,0xdc
  40cb23:	xchg   edi,eax
  40cb24:	call   0xb863bb55
  40cb29:	and    al,dl
  40cb2b:	xor    DWORD PTR [eax-0x5ba0ebd6],esp
  40cb31:	mov    ds:0xa900882b,al
  40cb36:	stos   DWORD PTR es:[edi],eax
  40cb37:	inc    esp
  40cb38:	xor    BYTE PTR [ebp+0x51],0xad
  40cb3c:	std    
  40cb3d:	and    ecx,DWORD PTR [esi+ebx*8+0x32]
  40cb41:	repnz sub eax,0x9ab3c895
  40cb47:	(bad)  
  40cb48:	cmp    DWORD PTR [edi+0x3edef22],eax
  40cb4e:	test   DWORD PTR [ebp-0x5cbfc021],0x8d527e12
  40cb58:	push   ebx
  40cb59:	ficom  WORD PTR [esi-0x67]
  40cb5c:	lea    eax,[ebx]
  40cb5e:	test   DWORD PTR [ebx+0x4],ebx
  40cb61:	push   0x3f2e1285
  40cb66:	fsub   DWORD PTR [edx+0x59]
  40cb69:	shr    ch,1
  40cb6b:	cmp    DWORD PTR [edi-0xb],0x460e3e8b
  40cb72:	inc    ebp
  40cb73:	or     DWORD PTR [ecx+0x20e427d],ebp
  40cb79:	clc    
  40cb7a:	lods   eax,DWORD PTR ds:[esi]
  40cb7b:	push   eax
  40cb7c:	push   edi
  40cb7d:	scas   eax,DWORD PTR es:[edi]
  40cb7e:	dec    esi
  40cb7f:	mul    DWORD PTR [eax-0x5e]
  40cb82:	cmp    eax,0x9ec4ca20
  40cb87:	pop    ss
  40cb88:	clc    
  40cb89:	dec    eax
  40cb8a:	mov    esp,0xb090231
  40cb8f:	cdq    
  40cb90:	add    DWORD PTR [edx+ebp*2-0x6],esp
  40cb94:	call   DWORD PTR [ebx+0x52]
  40cb97:	sbb    al,0x5
  40cb99:	dec    edx
  40cb9a:	aam    0x1c
  40cb9c:	dec    ecx
  40cb9d:	sbb    ebp,eax
  40cb9f:	and    DWORD PTR [edi-0x5860717c],ebx
  40cba5:	sti    
  40cba6:	xchg   esi,eax
  40cba7:	xchg   ecx,eax
  40cba8:	sbb    al,0x5e
  40cbaa:	jns    0x6a8ca303
  40cbb0:	mov    edi,0x3d76e4af
  40cbb5:	xor    BYTE PTR [ecx+esi*2-0x6929afde],0x87
  40cbbd:	psrld  xmm0,xmm3
  40cbc1:	adc    DWORD PTR [esi+0x53258af6],ebx
  40cbc7:	or     BYTE PTR [edx],bh
  40cbc9:	sbb    esp,DWORD PTR [esi+0x9]
  40cbcc:	fcmovb st,st(0)
  40cbce:	add    bl,cl
  40cbd0:	mov    ebp,0xbb2b6fa3
  40cbd5:	imul   ebx,DWORD PTR [edi+0x3548d4a2],0x565ea644
  40cbdf:	pop    edi
  40cbe0:	shr    BYTE PTR [esi+0x5e],0xc8
  40cbe4:	dec    esi
  40cbe5:	lahf   
  40cbe6:	mov    bh,0xe2
  40cbe8:	pop    eax
  40cbe9:	adc    ah,0xed
  40cbec:	add    al,0x1e
  40cbee:	and    DWORD PTR [ebx+0x296f4d29],0xedde704d
  40cbf8:	or     DWORD PTR [esi],0xffffff8f
  40cbfb:	mov    fs,WORD PTR [edx-0x6d]
  40cbfe:	in     eax,0xee
  40cc00:	pop    esi
  40cc01:	aas    
  40cc02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc03:	or     edi,ebp
  40cc05:	stos   DWORD PTR es:[edi],eax
  40cc06:	dec    edx
  40cc07:	imul   ecx,DWORD PTR ds:0xd3feb300,0xeed7e469
  40cc11:	test   eax,0x491d189d
  40cc16:	add    ecx,esi
  40cc18:	aam    0x60
  40cc1a:	outs   dx,BYTE PTR ds:[esi]
  40cc1b:	xchg   ebx,eax
  40cc1c:	and    esp,eax
  40cc1e:	inc    eax
  40cc1f:	xchg   ecx,eax
  40cc20:	ds push ecx
  40cc22:	(bad)  
  40cc23:	cmp    DWORD PTR [esi],edi
  40cc25:	sbb    DWORD PTR [edi+ecx*1+0x6c06c4f8],ecx
  40cc2c:	push   edx
  40cc2d:	pushf  
  40cc2e:	js     0x40cc81
  40cc30:	xchg   bh,dh
  40cc32:	popf   
  40cc33:	dec    edx
  40cc34:	(bad)  
  40cc35:	jmp    0xd3b7:0xc7aa69c7
  40cc3c:	xor    BYTE PTR [edi-0x77],dl
  40cc3f:	cmp    BYTE PTR [ecx+0xd273e20],bh
  40cc45:	inc    edx
  40cc46:	call   DWORD PTR ds:0xb74b1615
  40cc4c:	mov    dl,0xd
  40cc4e:	out    0xac,eax
  40cc50:	inc    ebx
  40cc51:	test   al,0x63
  40cc53:	xchg   ebx,eax
  40cc54:	jne    0x40cc5b
  40cc56:	test   al,0xf4
  40cc58:	loopne 0x40cc94
  40cc5a:	mov    dl,0x25
  40cc5c:	cld    
  40cc5d:	popa   
  40cc5e:	inc    eax
  40cc5f:	dec    edx
  40cc60:	add    BYTE PTR [ecx],bl
  40cc62:	imul   ebp,ebx,0x57b839c
  40cc68:	cmp    DWORD PTR [edx-0xb],esi
  40cc6b:	(bad)  
  40cc6c:	outs   dx,BYTE PTR ds:[esi]
  40cc6d:	or     esp,DWORD PTR [edi+0x7f]
  40cc70:	mov    dh,0x6e
  40cc72:	aaa    
  40cc73:	dec    esi
  40cc74:	test   dh,bl
  40cc76:	inc    esp
  40cc77:	imul   edi,DWORD PTR [eax],0xffffff9b
  40cc7a:	mov    ecx,0x267a1b0e
  40cc7f:	inc    ebx
  40cc80:	out    dx,al
  40cc81:	xor    cl,0x16
  40cc84:	daa    
  40cc85:	dec    edx
  40cc86:	sub    ah,BYTE PTR [edi-0x3f]
  40cc89:	lods   al,BYTE PTR ds:[esi]
  40cc8a:	dec    esp
  40cc8b:	mov    bh,0x4f
  40cc8d:	ins    BYTE PTR es:[edi],dx
  40cc8e:	cdq    
  40cc8f:	popa   
  40cc90:	lods   eax,DWORD PTR ds:[esi]
  40cc91:	retf   
  40cc92:	nop
  40cc93:	or     bl,ah
  40cc95:	jmp    0x3745:0xf985b94e
  40cc9c:	cmc    
  40cc9d:	das    
  40cc9e:	stos   BYTE PTR es:[edi],al
  40cc9f:	jecxz  0x40cc87
  40cca1:	fwait
  40cca2:	sbb    DWORD PTR [edi],eax
  40cca4:	pop    edx
  40cca5:	pop    esi
  40cca6:	nop
  40cca7:	fist   DWORD PTR [ecx+ebx*4]
  40ccaa:	fnstenv [ecx+0x6048b7b]
  40ccb0:	retf   
  40ccb1:	adc    BYTE PTR [esp+ebp*4+0x52206b0b],ch
  40ccb8:	lods   eax,DWORD PTR ds:[esi]
  40ccb9:	push   ss
  40ccba:	cs int 0x23
  40ccbd:	xchg   BYTE PTR ds:0xfba01dbe,al
  40ccc3:	out    dx,eax
  40ccc4:	xchg   ebp,eax
  40ccc5:	mov    cl,0xa6
  40ccc7:	cmp    al,0x1a
  40ccc9:	cli    
  40ccca:	add    BYTE PTR [edx-0x70],0xe9
  40ccce:	pop    ebx
  40cccf:	icebp  
  40ccd0:	fmul   st,st(7)
  40ccd2:	call   0x3248:0x7fbe9d86
  40ccd9:	fsubr  DWORD PTR [ebp-0x52305f9b]
  40ccdf:	loopne 0x40ccd1
  40cce1:	jnp    0x40cc77
  40cce3:	imul   eax,DWORD PTR ds:0x52f7ebd3,0xffffff90
  40ccea:	test   BYTE PTR [esi],0xb6
  40cced:	imul   ebx,edx,0x48
  40ccf0:	cmp    DWORD PTR ds:0x1d209216,ebx
  40ccf6:	pop    esi
  40ccf7:	sbb    ah,bh
  40ccf9:	adc    edi,DWORD PTR ds:0x53ae3cf7
  40ccff:	mov    edi,0x62463917
  40cd04:	pop    eax
  40cd05:	adc    dl,cl
  40cd07:	add    al,0x87
  40cd09:	pop    edx
  40cd0a:	je     0x40cccb
  40cd0c:	and    esp,DWORD PTR [ebx]
  40cd0e:	inc    ebx
  40cd0f:	in     al,dx
  40cd10:	jl     0x40ccfe
  40cd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd13:	cmp    dl,BYTE PTR [eax-0x548d8471]
  40cd19:	push   ebx
  40cd1a:	inc    edx
  40cd1b:	jnp    0x40cd25
  40cd1d:	sahf   
  40cd1e:	jae    0x40cd82
  40cd20:	les    ebx,FWORD PTR [edx+eiz*8+0x28]
  40cd24:	ins    DWORD PTR es:[edi],dx
  40cd25:	pop    edx
  40cd26:	inc    eax
  40cd27:	mov    ebp,0xd01fabaa
  40cd2c:	mov    esi,DWORD PTR [ecx+0x66d92af]
  40cd32:	xor    eax,0xa6fdbc10
  40cd37:	or     BYTE PTR [esi-0x1e],ch
  40cd3a:	stc    
  40cd3b:	shl    DWORD PTR es:[edx],1
  40cd3e:	cmc    
  40cd3f:	cdq    
  40cd40:	popa   
  40cd41:	add    eax,0xf487d397
  40cd46:	mov    BYTE PTR [ebx-0x2cb79f54],cl
  40cd4c:	js     0x40cdc4
  40cd4e:	mov    al,0x88
  40cd50:	add    eax,0x85f74aea
  40cd55:	ins    DWORD PTR es:[edi],dx
  40cd56:	jnp    0x40cd65
  40cd58:	arpl   WORD PTR [edi+0x10],ax
  40cd5b:	call   0x91c6:0xd1097df7
  40cd62:	xchg   esp,eax
  40cd63:	sbb    eax,0xdbeae931
  40cd68:	rcl    dh,1
  40cd6a:	in     eax,dx
  40cd6b:	mov    bl,0x46
  40cd6d:	sub    DWORD PTR [ecx],ebp
  40cd6f:	cmp    al,0x4
  40cd71:	test   DWORD PTR ds:0x49433439,edx
  40cd77:	inc    eax
  40cd78:	xor    al,0x6e
  40cd7a:	mov    al,0x71
  40cd7c:	jg     0x40cdab
  40cd7e:	mov    ebp,0x9b5a2c11
  40cd83:	mov    eax,ds:0x13d3e907
  40cd88:	pusha  
  40cd89:	(bad)  
  40cd8a:	fcomip st,st(3)
  40cd8c:	pop    es
  40cd8d:	js     0x40ce04
  40cd8f:	and    ebp,edi
  40cd91:	sbb    DWORD PTR [eax],esi
  40cd93:	jp     0x40cd66
  40cd95:	lods   al,BYTE PTR ds:[esi]
  40cd96:	(bad)  
  40cd97:	(bad)  
  40cd98:	mov    edi,0x46c1c68e
  40cd9d:	adc    BYTE PTR [bp+di+0x68ba],dl
  40cda2:	rol    BYTE PTR [ebp+0x24],cl
  40cda5:	jb     0x40cd59
  40cda7:	inc    esi
  40cda8:	fcmove st,st(3)
  40cdaa:	ret    0x5fe1
  40cdad:	dec    ecx
  40cdae:	jmp    0x40cdde
  40cdb0:	xchg   esp,eax
  40cdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdb2:	das    
  40cdb3:	arpl   WORD PTR [esi-0x5c],dx
  40cdb6:	loopne 0x40cd77
  40cdb8:	ins    DWORD PTR es:[edi],dx
  40cdb9:	sbb    al,0x3b
  40cdbb:	xor    eax,0x1871e36a
  40cdc0:	mov    ch,0x46
  40cdc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc3:	xlat   BYTE PTR ds:[ebx]
  40cdc4:	sbb    BYTE PTR [ebp-0xe],0x33
  40cdc8:	loopne 0x40cdc3
  40cdca:	or     BYTE PTR [edx+esi*4],ch
  40cdcd:	das    
  40cdce:	les    esi,FWORD PTR [edi+0x4]
  40cdd1:	sbb    dl,BYTE PTR [edx+ebp*1]
  40cdd4:	sbb    DWORD PTR [ecx+ebx*8],eax
  40cdd7:	lahf   
  40cdd8:	jnp    0x40ce3c
  40cdda:	jecxz  0x40ce08
  40cddc:	(bad)  
  40cddd:	cdq    
  40cdde:	fistp  DWORD PTR [edi+0x15]
  40cde1:	pop    esi
  40cde2:	enter  0x66d0,0xfe
  40cde6:	call   0xfd1e:0xac631865
  40cded:	inc    ebp
  40cdee:	cli    
  40cdef:	ins    BYTE PTR es:[edi],dx
  40cdf0:	in     al,dx
  40cdf1:	in     eax,0x44
  40cdf3:	cmp    al,0x1e
  40cdf5:	push   ecx
  40cdf6:	fstp   QWORD PTR [esi]
  40cdf8:	(bad)  
  40cdf9:	mov    al,BYTE PTR [ebx+0x52ab00c9]
  40cdff:	push   ebx
  40ce00:	in     eax,0xa3
  40ce02:	outs   dx,DWORD PTR ds:[esi]
  40ce03:	dec    edi
  40ce04:	scas   al,BYTE PTR es:[edi]
  40ce05:	mov    ebx,DWORD PTR [eax-0x35c4690f]
  40ce0b:	shr    dl,1
  40ce0d:	mov    eax,ds:0x762da77f
  40ce12:	ficomp DWORD PTR [ecx]
  40ce14:	pusha  
  40ce15:	mov    al,ds:0x308ddaf2
  40ce1a:	push   cs
  40ce1b:	rcr    BYTE PTR [ebp-0x32caea9a],0x1e
  40ce22:	dec    edx
  40ce23:	gs sahf 
  40ce25:	icebp  
  40ce26:	adc    eax,0xee90eb23
  40ce2b:	cld    
  40ce2c:	data16 xor BYTE PTR [edx+0x7292065c],cl
  40ce33:	sbb    al,0xfc
  40ce35:	sbb    ebp,DWORD PTR [edx+edi*8]
  40ce38:	leave  
  40ce39:	std    
  40ce3a:	(bad)  
  40ce3b:	stos   BYTE PTR es:[edi],al
  40ce3c:	mov    ds:0x37f92fac,al
  40ce41:	scas   eax,DWORD PTR es:[edi]
  40ce42:	and    eax,0x7e9404d3
  40ce47:	or     edi,DWORD PTR [ecx+0x6]
  40ce4a:	jg     0x40ce59
  40ce4c:	lods   eax,DWORD PTR ds:[esi]
  40ce4d:	sub    eax,0xe8a5a4f
  40ce52:	pop    ebp
  40ce53:	mov    bl,BYTE PTR [esi-0x9]
  40ce56:	mov    DWORD PTR [ecx],0xe6eea6f1
  40ce5c:	addr16 daa 
  40ce5e:	mov    ds:0x310c7a2e,eax
  40ce63:	test   eax,0xa0b29324
  40ce68:	hlt    
  40ce69:	dec    ebx
  40ce6a:	push   ss
  40ce6b:	repz test dl,0x74
  40ce6f:	scas   al,BYTE PTR es:[edi]
  40ce70:	pusha  
  40ce71:	push   cs
  40ce72:	mov    al,0x14
  40ce74:	lds    edi,FWORD PTR [ebx]
  40ce76:	add    ecx,DWORD PTR ds:0x1fc2046a
  40ce7c:	(bad)  
  40ce7d:	int    0x79
  40ce7f:	cdq    
  40ce80:	sub    al,0x40
  40ce82:	mov    ch,0x22
  40ce84:	adc    al,0xbf
  40ce86:	aad    0x31
  40ce88:	ror    DWORD PTR [esi-0x37b23f0a],0x2f
  40ce8f:	iret   
  40ce90:	cmp    ah,BYTE PTR [ebx]
  40ce92:	(bad)  
  40ce93:	clc    
  40ce94:	sti    
  40ce95:	push   ecx
  40ce96:	aas    
  40ce97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce98:	or     eax,0xa7c421e7
  40ce9d:	xor    BYTE PTR gs:[esi-0x6b2ca8d2],ch
  40cea4:	xchg   BYTE PTR cs:[eax],al
  40cea7:	xor    DWORD PTR [ebx+0x1c],esp
  40ceaa:	xor    eax,0xd0725276
  40ceaf:	fs jle 0x40cf03
  40ceb2:	out    0x40,eax
  40ceb4:	cmp    ecx,DWORD PTR [edx+0x19]
  40ceb7:	cmp    eax,0x8c712e3
  40cebc:	pushf  
  40cebd:	fdivr  DWORD PTR [ebp+0x7de74d5]
  40cec3:	rol    dh,1
  40cec5:	nop
  40cec6:	out    0x76,al
  40cec8:	push   ebx
  40cec9:	stos   DWORD PTR es:[edi],eax
  40ceca:	inc    esp
  40cecb:	out    dx,eax
  40cecc:	mov    ebx,0x47c244f7
  40ced1:	(bad)  
  40ced2:	push   edx
  40ced3:	push   edx
  40ced4:	xor    BYTE PTR [esi+edi*8-0x1b7e7c86],al
  40cedb:	(bad)  
  40cedc:	mov    esp,0x27381fd9
  40cee1:	dec    esi
  40cee2:	mov    ebx,0x53591184
  40cee7:	lods   al,BYTE PTR ds:[esi]
  40cee8:	call   0xc1e7ceb6
  40ceed:	and    eax,0xae5b0869
  40cef2:	out    dx,al
  40cef3:	xchg   esp,eax
  40cef4:	in     al,dx
  40cef5:	clc    
  40cef6:	jp     0x40ce83
  40cef8:	xchg   ecx,eax
  40cef9:	mov    ebx,0xc96bebf9
  40cefe:	sbb    DWORD PTR [ebx+0x7761b85d],esi
  40cf04:	pop    ebx
  40cf05:	sub    eax,0xf781535f
  40cf0a:	mov    ch,0xbc
  40cf0c:	clc    
  40cf0d:	mov    al,ds:0x37e89e15
  40cf12:	push   edi
  40cf13:	cmp    ch,bh
  40cf15:	int3   
  40cf16:	inc    eax
  40cf17:	lods   al,BYTE PTR ds:[esi]
  40cf18:	push   eax
  40cf19:	arpl   WORD PTR [eax-0x57],cx
  40cf1c:	push   cs
  40cf1d:	bound  eax,QWORD PTR ds:0x90ec39f8
  40cf23:	add    al,0x61
  40cf25:	jl     0x40cf44
  40cf27:	dec    esi
  40cf28:	arpl   WORD PTR [edi-0x54],si
  40cf2b:	call   0x360:0x3762cb7a
  40cf32:	add    ah,0xd
  40cf35:	push   esp
  40cf36:	inc    ebp
  40cf37:	sbb    BYTE PTR [eax],bl
  40cf39:	xchg   esp,eax
  40cf3a:	sub    al,0x32
  40cf3c:	pop    ebx
  40cf3d:	cwde   
  40cf3e:	aam    0x42
  40cf40:	popa   
  40cf41:	jnp    0xe8c8d2d7
  40cf47:	repz les eax,FWORD PTR ds:[eax-0x4249d4b5]
  40cf4f:	int3   
  40cf50:	cdq    
  40cf51:	mov    edx,0xed17ab1f
  40cf56:	push   esi
  40cf57:	dec    ebx
  40cf58:	mov    dl,0xd6
  40cf5a:	outs   dx,BYTE PTR ds:[esi]
  40cf5b:	jg     0x40cf3a
  40cf5d:	cmp    DWORD PTR [ecx+ebx*1],esi
  40cf60:	lds    ecx,FWORD PTR [esi-0x5d7eae13]
  40cf66:	inc    edx
  40cf67:	retf   0xf0ba
  40cf6a:	int3   
  40cf6b:	loop   0x40ceed
  40cf6d:	test   BYTE PTR [ecx+esi*4],cl
  40cf70:	test   DWORD PTR [esi],esp
  40cf72:	scas   eax,DWORD PTR es:[edi]
  40cf73:	es and eax,0x5e1ca9d
  40cf79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7a:	mov    ds:0xbebf8134,al
  40cf7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf80:	jno    0x40cfcd
  40cf82:	(bad)  
  40cf84:	bound  edx,QWORD PTR [edx+esi*1-0x62e1db0d]
  40cf8b:	fidivr DWORD PTR [esi]
  40cf8d:	jp     0x40d00c
  40cf8f:	int    0xe2
  40cf91:	repnz (bad) 
  40cf93:	cmp    DWORD PTR [ebp+0x3f],esp
  40cf96:	pop    edx
  40cf97:	ja     0x40cf91
  40cf99:	inc    eax
  40cf9a:	fnstsw WORD PTR [ecx-0x6f]
  40cf9d:	sub    al,0x43
  40cf9f:	lock adc al,0xa0
  40cfa2:	jl     0x40cfa0
  40cfa4:	or     dl,cl
  40cfa6:	jge    0x40cfcd
  40cfa8:	adc    bh,dl
  40cfaa:	icebp  
  40cfab:	push   ss
  40cfac:	jns    0x40cf7a
  40cfae:	ds sti 
  40cfb0:	mov    bl,bh
  40cfb2:	add    bl,BYTE PTR [edi]
  40cfb4:	and    ecx,DWORD PTR [esi+0x11]
  40cfb7:	mov    dl,0x5
  40cfb9:	rcl    DWORD PTR [ebx-0x61656fa7],1
  40cfbf:	ja     0x40cfc9
  40cfc1:	ret    
  40cfc2:	xchg   ebp,eax
  40cfc3:	add    ch,ch
  40cfc5:	mov    dh,0x51
  40cfc7:	aam    0xed
  40cfc9:	cmp    BYTE PTR [edx],0x13
  40cfcc:	and    cl,bl
  40cfce:	adc    BYTE PTR [esi+0x440a40d8],dh
  40cfd4:	xchg   DWORD PTR [ebx-0x10],edi
  40cfd7:	push   ebp
  40cfd8:	add    edi,DWORD PTR [edi+0x5d]
  40cfdb:	mov    ch,0x5d
  40cfdd:	test   edi,ebp
  40cfdf:	mov    eax,gs:0x549c78ab
  40cfe5:	mov    esp,0xad08d5e2
  40cfea:	pop    esp
  40cfeb:	es push edi
  40cfed:	lods   eax,DWORD PTR ds:[esi]
  40cfee:	cmp    dh,cl
  40cff0:	pop    edi
  40cff1:	pop    ebx
  40cff2:	push   0xbf3aa65f
  40cff7:	mov    dh,0xfd
  40cff9:	aad    0xbd
  40cffb:	inc    ebx
  40cffc:	jle    0x40d01f
  40cffe:	push   0xb5f127fb
  40d003:	fst    st(6)
  40d005:	pusha  
  40d006:	sub    DWORD PTR [ebx+0x332a2638],edx
  40d00c:	inc    ebx
  40d00d:	iret   
  40d00e:	sbb    DWORD PTR [edx+0x49639e02],esi
  40d014:	or     ecx,DWORD PTR ds:0x5c6c3d75
  40d01a:	mov    al,ds:0xe2be66de
  40d01f:	pop    eax
  40d020:	adc    DWORD PTR [esi+0x3103ab09],ebx
  40d026:	inc    ebx
  40d027:	add    ecx,edx
  40d029:	pop    esp
  40d02a:	sbb    ebp,DWORD PTR [ebx]
  40d02c:	(bad)  
  40d02d:	(bad)  
  40d02e:	daa    
  40d02f:	lods   eax,DWORD PTR ds:[esi]
  40d030:	ror    dl,cl
  40d032:	fnsave [esi+0x16a849ec]
  40d038:	ss jns 0x40d068
  40d03b:	sbb    cl,BYTE PTR [edi]
  40d03d:	jno    0x40d051
  40d03f:	nop
  40d040:	aam    0xca
  40d042:	mov    dl,0x99
  40d044:	je     0x40d01c
  40d046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d047:	mov    dh,0x1f
  40d049:	nop
  40d04a:	scas   al,BYTE PTR es:[edi]
  40d04b:	test   al,0xa1
  40d04d:	fwait
  40d04e:	cmp    DWORD PTR [eax+0x7d],esp
  40d051:	leave  
  40d052:	xor    eax,DWORD PTR [esi+0x15c31c1e]
  40d058:	xor    DWORD PTR [ebp-0x2f83ca42],edx
  40d05e:	fcmovnbe st,st(2)
  40d060:	in     al,dx
  40d061:	scas   al,BYTE PTR es:[edi]
  40d062:	xor    DWORD PTR [ebp+0x54],ebx
  40d065:	dec    ebp
  40d066:	(bad)  
  40d067:	cld    
  40d068:	mov    eax,0x26a81f16
  40d06d:	push   ebx
  40d06e:	outs   dx,DWORD PTR ds:[esi]
  40d06f:	sti    
  40d070:	push   eax
  40d071:	xor    ecx,DWORD PTR [edi+0x642cafee]
  40d077:	inc    esi
  40d078:	mov    ebp,0x14e31b81
  40d07d:	sbb    al,al
  40d07f:	mov    BYTE PTR [eax],0x9e
  40d082:	adc    al,0x25
  40d084:	mov    ebp,0xc4154894
  40d089:	jo     0x40d05d
  40d08b:	xor    bh,BYTE PTR ss:[ebp+0x5d33facd]
  40d092:	add    BYTE PTR [eax+0x7976ef25],cl
  40d098:	jmp    0x40d0e6
  40d09a:	test   BYTE PTR [ebp+0x62],cl
  40d09d:	pop    esp
  40d09e:	jbe    0x40d06b
  40d0a0:	pop    eax
  40d0a1:	shl    al,1
  40d0a3:	add    edi,DWORD PTR [ebx-0x5cd5aa10]
  40d0a9:	jmp    DWORD PTR [esi]
  40d0ab:	mov    esi,0x2219d8d0
  40d0b0:	push   0x5b
  40d0b2:	xchg   ecx,eax
  40d0b3:	fwait
  40d0b4:	dec    ecx
  40d0b5:	loope  0x40d059
  40d0b7:	add    eax,0x48f9edeb
  40d0bc:	xor    edx,DWORD PTR [ecx-0x4a]
  40d0bf:	dec    eax
  40d0c0:	test   BYTE PTR [ebx],dh
  40d0c2:	mov    es,edi
  40d0c4:	ins    DWORD PTR es:[edi],dx
  40d0c5:	out    dx,eax
  40d0c6:	pusha  
  40d0c7:	xchg   ebx,eax
  40d0c8:	and    cl,ah
  40d0ca:	cs jae 0x40d0e8
  40d0cd:	inc    esi
  40d0ce:	xor    DWORD PTR [edx-0x43],0x72
  40d0d2:	and    al,0xb9
  40d0d4:	nop
  40d0d5:	repnz fild DWORD PTR [esi+eiz*1+0x37c8f04b]
  40d0dd:	ret    0xcbbf
  40d0e0:	jne    0x40d0ba
  40d0e2:	cmc    
  40d0e3:	jbe    0x40d0b5
  40d0e5:	jl     0x40d118
  40d0e7:	and    DWORD PTR [eax],ecx
  40d0e9:	pop    edi
  40d0ea:	mov    ebp,0x204c8d9e
  40d0ef:	xchg   edi,eax
  40d0f0:	adc    DWORD PTR [esi+ebp*1],eax
  40d0f3:	loop   0x40d134
  40d0f5:	pop    edi
  40d0f6:	sub    al,0x5c
  40d0f8:	adc    BYTE PTR [ecx-0x27],0xfa
  40d0fc:	addr16 ret 
  40d0fe:	xchg   ecx,eax
  40d0ff:	push   ecx
  40d100:	fcmovb st,st(3)
  40d102:	out    dx,eax
  40d103:	retf   
  40d104:	iret   
  40d105:	stos   BYTE PTR es:[edi],al
  40d106:	fsub   QWORD PTR [eax]
  40d108:	data16 jno 0x40d114
  40d10b:	xchg   ebp,eax
  40d10c:	dec    ebp
  40d10d:	xor    BYTE PTR [eax+0x5a],ah
  40d110:	loop   0x40d0af
  40d112:	pop    es
  40d113:	and    DWORD PTR [eax-0x72],esp
  40d116:	sahf   
  40d117:	adc    eax,0x446e2e39
  40d11c:	and    DWORD PTR [edx-0x29],esp
  40d11f:	add    ebp,DWORD PTR [ebx]
  40d121:	lds    ebp,FWORD PTR [ecx-0x4df71e2c]
  40d127:	xchg   ecx,eax
  40d128:	add    DWORD PTR [edi],eax
  40d12a:	mov    edi,0x30e8c393
  40d12f:	pop    ss
  40d130:	cmp    ecx,DWORD PTR [ecx-0x9b69b53]
  40d136:	xor    al,0xc4
  40d138:	mov    dh,0x65
  40d13a:	ret    
  40d13b:	mul    BYTE PTR [ebp-0x50]
  40d13e:	in     eax,0x5c
  40d140:	imul   edx,DWORD PTR [esi+ebp*4],0xd766c157
  40d147:	dec    eax
  40d148:	dec    esi
  40d149:	xchg   edi,eax
  40d14a:	jecxz  0x40d1b6
  40d14c:	out    0xe,al
  40d14e:	ds jb  0x40d159
  40d151:	(bad)  
  40d152:	fisttp QWORD PTR [ebp-0x5f929b30]
  40d158:	daa    
  40d159:	add    al,0x76
  40d15b:	pushf  
  40d15c:	lods   eax,DWORD PTR ds:[esi]
  40d15d:	dec    edi
  40d15e:	ret    0xfddc
  40d161:	(bad)  
  40d163:	mov    ecx,0x613dbe88
  40d168:	jg     0x40d1e4
  40d16a:	imul   edi,DWORD PTR [edx],0x64
  40d16d:	aaa    
  40d16e:	mov    ah,0x49
  40d170:	pop    ebx
  40d171:	adc    ah,BYTE PTR es:[edi]
  40d174:	xchg   edx,eax
  40d175:	mov    eax,ds:0xc4df7435
  40d17a:	jp     0x40d1a6
  40d17c:	std    
  40d17d:	jno    0x40d123
  40d17f:	test   DWORD PTR [ebx+eax*1+0x21],ecx
  40d183:	ins    BYTE PTR es:[edi],dx
  40d184:	test   esi,ebx
  40d186:	inc    ebp
  40d187:	xor    dl,BYTE PTR [eax]
  40d189:	xor    DWORD PTR [esp+edx*1+0x487b5141],edi
  40d190:	inc    ebp
  40d191:	pop    ss
  40d192:	lock scas eax,DWORD PTR es:[edi]
  40d194:	xlat   BYTE PTR ds:[ebx]
  40d195:	push   0x52
  40d197:	inc    eax
  40d198:	mov    bh,0xcc
  40d19a:	xor    DWORD PTR [ebp-0x40],0x78
  40d19e:	xor    dl,BYTE PTR [edi+0x6d]
  40d1a1:	fldcw  WORD PTR ds:0xde551547
  40d1a7:	pop    esp
  40d1a8:	loopne 0x40d18a
  40d1aa:	mov    eax,0x9b3e443c
  40d1af:	push   ebp
  40d1b0:	into   
  40d1b1:	in     eax,0x4a
  40d1b3:	nop
  40d1b4:	stos   BYTE PTR es:[edi],al
  40d1b5:	cmp    cl,BYTE PTR [edi+0x75]
  40d1b8:	dec    eax
  40d1b9:	xchg   BYTE PTR [eax-0x33],al
  40d1bc:	add    BYTE PTR [ebx-0x2dbf0688],ah
  40d1c2:	add    edx,DWORD PTR [ecx+0x67]
  40d1c5:	dec    edx
  40d1c6:	lea    ebx,[ebp-0x2c]
  40d1c9:	push   es
  40d1ca:	push   esi
  40d1cb:	fwait
  40d1cc:	dec    ecx
  40d1cd:	stos   BYTE PTR es:[edi],al
  40d1ce:	and    DWORD PTR [ecx+0x612a3b9d],esp
  40d1d4:	(bad)
  40d1d7:	loopne 0x40d193
  40d1d9:	in     al,0x35
  40d1db:	and    al,0x38
  40d1dd:	fsave  [ebx-0x3c]
  40d1e1:	inc    esi
  40d1e2:	pop    ecx
  40d1e3:	fist   DWORD PTR [ecx+esi*2-0x4741499a]
  40d1ea:	into   
  40d1eb:	xor    eax,0xd67c67f5
  40d1f0:	jo     0x40d215
  40d1f2:	nop
  40d1f3:	or     al,0x6f
  40d1f5:	mov    ecx,0x7bcbce25
  40d1fa:	daa    
  40d1fb:	pop    ecx
  40d1fc:	(bad)  
  40d1fd:	retf   0x9db0
  40d200:	mov    ch,0x49
  40d202:	popa   
  40d203:	neg    BYTE PTR [esi+0x5710ff10]
  40d209:	in     al,0x2a
  40d20b:	popa   
  40d20c:	and    ecx,DWORD PTR [ecx+eiz*2-0x22207326]
  40d213:	mov    ch,0x9e
  40d215:	out    dx,eax
  40d216:	rcr    BYTE PTR [eiz*4+0x2a398820],0xac
  40d21e:	sbb    eax,0x110d7d8d
  40d223:	or     al,dl
  40d225:	ficomp WORD PTR [ecx-0x3cabf2b1]
  40d22b:	dec    ebx
  40d22c:	cld    
  40d22d:	sub    BYTE PTR [edi+ebp*2-0x5c5d70e1],bh
  40d234:	xor    ch,cl
  40d236:	fnstsw WORD PTR [ebx-0x214e9e45]
  40d23c:	mov    esi,0xe0022fdf
  40d241:	xor    DWORD PTR [edi+0x2e6a7975],ebp
  40d247:	xchg   ebp,eax
  40d248:	bnd ret 0x6779
  40d24c:	in     al,0xbd
  40d24e:	sub    dl,BYTE PTR [eax+0x261cb96a]
  40d254:	or     al,BYTE PTR [esi+ecx*2-0x13]
  40d258:	in     al,dx
  40d259:	jns    0x40d227
  40d25b:	test   al,0xa1
  40d25d:	mov    al,0xa0
  40d25f:	jnp    0x40d229
  40d261:	push   edi
  40d262:	mov    ah,0x90
  40d264:	add    bh,BYTE PTR [esi-0x75467376]
  40d26a:	cmp    ch,0x52
  40d26d:	sar    BYTE PTR [edx],0x79
  40d270:	jl     0x40d1f3
  40d272:	push   edi
  40d273:	inc    edx
  40d274:	xor    BYTE PTR ss:[eax+0x34a82984],0xe8
  40d27c:	cmp    eax,edx
  40d27e:	idiv   DWORD PTR [eax-0x13df3938]
  40d284:	lods   eax,DWORD PTR ds:[esi]
  40d285:	retf   0xbd3a
  40d288:	es add al,0x31
  40d28c:	lahf   
  40d28d:	or     BYTE PTR [eax],bh
  40d28f:	and    BYTE PTR [ebx-0x19],dl
  40d292:	pop    eax
  40d293:	(bad)  
  40d294:	fdivr  st(3),st
  40d296:	test   ecx,esp
  40d298:	dec    edi
  40d299:	dec    eax
  40d29a:	arpl   di,si
  40d29c:	mov    bh,0x78
  40d29e:	inc    edi
  40d29f:	or     eax,0x3960b1aa
  40d2a4:	jmp    0x6d18:0x3fcea90c
  40d2ab:	push   esi
  40d2ac:	rcr    DWORD PTR [eax+edx*8],0x2f
  40d2b0:	jp     0x40d2d6
  40d2b2:	loop   0x40d2af
  40d2b4:	push   esi
  40d2b5:	aas    
  40d2b6:	and    esp,edi
  40d2b8:	fsub   QWORD PTR [edx+0xdf637a2]
  40d2be:	add    BYTE PTR [ebx],0xc5
  40d2c1:	push   ebx
  40d2c2:	mov    ecx,0xd25932a9
  40d2c7:	std    
  40d2c8:	retf   
  40d2c9:	push   ecx
  40d2ca:	mov    eax,0x723ed8c7
  40d2cf:	inc    esp
  40d2d1:	inc    ebx
  40d2d2:	ss mov ch,0x3d
  40d2d5:	push   ebp
  40d2d6:	pushf  
  40d2d7:	scas   al,BYTE PTR es:[edi]
  40d2d8:	js     0x40d2a0
  40d2da:	inc    ebp
  40d2db:	imul   edx,DWORD PTR [edx-0x17],0x20
  40d2df:	mov    edx,0xb24fc127
  40d2e4:	xchg   esp,eax
  40d2e5:	sahf   
  40d2e6:	(bad)  
  40d2e7:	xor    dl,BYTE PTR [eax+0x2eff3257]
  40d2ed:	call   0xadef:0x4ece2ee4
  40d2f4:	adc    dl,al
  40d2f6:	ret    0x99b5
  40d2f9:	shl    BYTE PTR [ecx],1
  40d2fb:	push   ss
  40d2fc:	imul   esi,DWORD PTR ss:[edi+edi*2+0x5a5232a2],0xe0658659
  40d308:	xlat   BYTE PTR ds:[ebx]
  40d309:	jmp    0xc79e:0x2b962a0a
  40d310:	ror    DWORD PTR [edx+0x1e],0x20
  40d314:	mov    BYTE PTR [ecx-0x5d],0x8e
  40d318:	fcomp  st(0)
  40d31a:	retf   
  40d31b:	xchg   edi,eax
  40d31c:	out    dx,al
  40d31d:	push   esp
  40d31e:	call   0x3f996ed
  40d323:	cs fcomi st,st(1)
  40d326:	frstor [edi+0x4e]
  40d329:	ss ins DWORD PTR es:[edi],dx
  40d32b:	lock nop
  40d32d:	hlt    
  40d32e:	repz iret 
  40d330:	int    0xcf
  40d332:	dec    edi
  40d333:	push   ds
  40d334:	push   ecx
  40d335:	cmp    eax,DWORD PTR [edi-0x69]
  40d338:	add    esp,edx
  40d33a:	inc    ebx
  40d33b:	inc    ebp
  40d33c:	push   es
  40d33d:	test   eax,0x7b98a27
  40d342:	and    al,BYTE PTR [edx-0x486ca9f9]
  40d348:	ret    
  40d349:	mov    dh,BYTE PTR [ebp+0x1b4920cb]
  40d34f:	dec    ebp
  40d350:	sar    ecx,cl
  40d352:	jae    0x40d3bd
  40d354:	jns    0x40d2ef
  40d356:	mov    esp,0x92a3bf00
  40d35b:	jb     0x40d2e0
  40d35d:	lock mov ah,0xb0
  40d360:	mov    ebx,DWORD PTR [ebx-0x4b]
  40d363:	shr    DWORD PTR [ebx-0x48],0xbf
  40d367:	rcr    DWORD PTR [esi],cl
  40d369:	jb     0x40d382
  40d36b:	outs   dx,BYTE PTR ds:[esi]
  40d36c:	jo     0x40d34e
  40d36e:	pop    ss
  40d36f:	and    DWORD PTR [ebx+0x6bfb7cf7],edi
  40d375:	or     BYTE PTR [ecx],al
  40d377:	js     0x40d30a
  40d379:	fidiv  WORD PTR [eax-0x6ff59006]
  40d37f:	stc    
  40d380:	dec    ebx
  40d381:	(bad)  
  40d382:	xor    eax,0xf82a75b9
  40d387:	(bad)
  40d38a:	les    eax,FWORD PTR [ebp*2+0x37335fb0]
  40d391:	dec    ecx
  40d392:	jo     0x40d35d
  40d394:	scas   al,BYTE PTR es:[edi]
  40d395:	fwait
  40d396:	inc    ebx
  40d398:	cli    
  40d399:	sbb    edx,ecx
  40d39b:	sti    
  40d39c:	cmp    dl,ch
  40d39e:	xor    BYTE PTR [esi-0x7d25250],ah
  40d3a4:	push   DWORD PTR [edi+0x6802da1a]
  40d3aa:	mov    eax,ds:0xab2d1d97
  40d3af:	inc    edx
  40d3b0:	arpl   WORD PTR [ebx],ax
  40d3b2:	xchg   eax,ecx
  40d3b4:	stos   DWORD PTR es:[edi],eax
  40d3b5:	xchg   ebx,eax
  40d3b6:	lods   al,BYTE PTR ds:[esi]
  40d3b7:	pop    eax
  40d3b8:	arpl   WORD PTR [edx+0x3367be2d],bp
  40d3be:	aad    0xa8
  40d3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3c1:	xor    al,0xa7
  40d3c3:	mov    dh,0xcd
  40d3c5:	imul   eax,DWORD PTR [esi-0x6750bccd],0x58
  40d3cc:	fwait
  40d3cd:	xor    BYTE PTR [ecx],bh
  40d3cf:	jns    0x40d375
  40d3d1:	lods   al,BYTE PTR ds:[esi]
  40d3d2:	ja     0x40d3ae
  40d3d4:	jnp    0x40d42d
  40d3d6:	mov    esp,0x8b4e4735
  40d3db:	loop   0x40d37b
  40d3dd:	mov    eax,ds:0x5979a41
  40d3e2:	sub    ah,dl
  40d3e4:	stos   BYTE PTR es:[edi],al
  40d3e5:	mov    al,0x55
  40d3e7:	mov    ch,0xfd
  40d3e9:	aaa    
  40d3ea:	push   eax
  40d3eb:	cmp    BYTE PTR [ebx-0x488f8b90],dh
  40d3f1:	or     BYTE PTR [ecx-0x724bbce4],dh
  40d3f7:	lds    esp,FWORD PTR [eax-0x45b496a3]
  40d3fd:	xor    ah,BYTE PTR [eax+0x7df9d322]
  40d403:	inc    eax
  40d404:	push   edi
  40d405:	dec    ebp
  40d406:	pop    edi
  40d407:	sahf   
  40d408:	add    eax,0x2c7c8a99
  40d40d:	inc    ecx
  40d40e:	aas    
  40d40f:	add    al,0x42
  40d411:	aas    
  40d412:	mov    ds:0x48fdb827,al
  40d417:	jbe    0x40d3aa
  40d419:	mov    dl,0x4a
  40d41b:	mov    bl,0x5a
  40d41d:	inc    ecx
  40d41e:	mov    ds:0xffe4aec4,al
  40d423:	out    0x10,al
  40d425:	mov    ebp,0x845804c7
  40d42a:	dec    edx
  40d42b:	adc    BYTE PTR ds:0xba553d18,0xbb
  40d432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d433:	ins    BYTE PTR es:[edi],dx
  40d434:	(bad)  
  40d435:	pop    esp
  40d436:	pop    edx
  40d437:	scas   al,BYTE PTR es:[edi]
  40d438:	jecxz  0x40d43e
  40d43a:	ficom  WORD PTR [edi+eax*2]
  40d43d:	and    al,0x78
  40d43f:	mov    esp,0xd29c48da
  40d444:	fdivp  st(1),st
  40d446:	(bad)  
  40d448:	icebp  
  40d449:	mov    bl,0x8
  40d44b:	sbb    BYTE PTR [ebx],bh
  40d44d:	imul   ebp,DWORD PTR [ebx+0x16],0xffffffb7
  40d451:	xchg   BYTE PTR [edi+0x14],ah
  40d454:	aad    0xd1
  40d456:	xor    eax,0x28c99f9d
  40d45b:	repz leave 
  40d45d:	rcl    BYTE PTR [edi-0x76],0xb0
  40d461:	mov    DWORD PTR [edx],edi
  40d463:	lods   eax,DWORD PTR ds:[esi]
  40d464:	loopne 0x40d46e
  40d466:	stos   BYTE PTR es:[edi],al
  40d467:	mov    al,0xad
  40d469:	inc    esi
  40d46a:	ds xchg edx,eax
  40d46c:	fwait
  40d46d:	sub    bh,BYTE PTR [edi]
  40d46f:	mov    BYTE PTR [edi],bl
  40d471:	js     0x40d4ca
  40d473:	cmp    eax,0xa70f5216
  40d478:	(bad)
  40d47b:	xchg   edi,eax
  40d47c:	or     eax,0xd7ecc7ae
  40d481:	xor    eax,0x1049f939
  40d486:	jo     0x40d42c
  40d488:	push   es
  40d489:	sbb    edi,DWORD PTR [edi+edi*4-0x6140a2e9]
  40d490:	(bad)  
  40d492:	jmp    0xaa5d6a22
  40d497:	mov    bh,0x5
  40d499:	xchg   ebp,eax
  40d49a:	clc    
  40d49b:	fisub  DWORD PTR [ebx+0x56]
  40d49e:	out    dx,eax
  40d49f:	(bad)  
  40d4a0:	xchg   edx,eax
  40d4a1:	dec    ebx
  40d4a2:	js     0x40d436
  40d4a4:	fadd   QWORD PTR [di+0x37]
  40d4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a9:	sbb    bl,dh
  40d4ab:	inc    eax
  40d4ac:	xchg   esp,eax
  40d4ad:	inc    esp
  40d4ae:	cmp    al,ch
  40d4b0:	not    BYTE PTR [esi+0x7a]
  40d4b3:	(bad)  
  40d4b4:	fwait
  40d4b5:	xor    ebx,esp
  40d4b7:	mov    bl,0xec
  40d4b9:	jp     0x40d4a3
  40d4bb:	out    0x47,eax
  40d4bd:	fwait
  40d4be:	out    0x83,eax
  40d4c0:	(bad)  ds:0x5c8323b1
  40d4c6:	add    dl,BYTE PTR [ebp-0x47]
  40d4c9:	cs pop ss
  40d4cb:	int3   
  40d4cc:	cmc    
  40d4cd:	test   eax,0x108ecd1f
  40d4d2:	push   ds
  40d4d3:	imul   ebp,DWORD PTR [esp+edx*2],0x16
  40d4d7:	lds    ebp,FWORD PTR [eax+0x27]
  40d4da:	div    dh
  40d4dc:	loop   0x40d4d1
  40d4de:	fstp   QWORD PTR [ebx+edi*4-0xa]
  40d4e2:	mov    dh,0x11
  40d4e4:	sub    DWORD PTR [ebx+ecx*1],0xf
  40d4e8:	push   0xfa2ede
  40d4ed:	imul   esp,DWORD PTR [edx-0x50],0x97c4d2f6
  40d4f4:	pop    esi
  40d4f5:	cmp    ebx,DWORD PTR [edi+0x7d]
  40d4f8:	mov    ah,0x9f
  40d4fa:	dec    ebx
  40d4fb:	mov    DWORD PTR [ecx],ebp
  40d4fd:	icebp  
  40d4fe:	ins    DWORD PTR es:[edi],dx
  40d4ff:	sti    
  40d500:	jne    0x40d518
  40d502:	pop    esi
  40d503:	pop    DWORD PTR [ecx-0x35]
  40d506:	cmp    eax,0xe5788b1
  40d50b:	stc    
  40d50c:	pop    es
  40d50d:	call   0x68e9:0x5c8aa38e
  40d514:	adc    al,0x16
  40d516:	add    eax,ecx
  40d518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d519:	leave  
  40d51a:	cs mov edi,?
  40d51d:	scas   eax,DWORD PTR es:[edi]
  40d51e:	sbb    esi,ebx
  40d520:	sub    eax,0x17feba9b
  40d525:	and    esp,DWORD PTR [edi+0x3b]
  40d528:	jo     0x40d4d4
  40d52a:	mov    al,al
  40d52c:	pop    ebx
  40d52d:	or     eax,esi
  40d52f:	loop   0x40d5aa
  40d531:	cmp    eax,0x5d651ecf
  40d536:	int3   
  40d537:	lds    edi,FWORD PTR [ebx+eax*4]
  40d53a:	pop    esi
  40d53b:	mov    cl,BYTE PTR [edx]
  40d53d:	rol    DWORD PTR [esi+eiz*2+0xc5c5ff6],0x2a
  40d545:	adc    BYTE PTR ds:0x2419a937,bh
  40d54b:	jo     0x40d4fa
  40d54d:	call   0x1bc47438
  40d552:	push   edi
  40d553:	shl    DWORD PTR [eax-0x75],cl
  40d556:	fdivr  st(1),st
  40d558:	cli    
  40d559:	rcl    ebp,1
  40d55b:	inc    eax
  40d55c:	imul   ecx,DWORD PTR [edi+ebp*8],0xb937875
  40d563:	out    0x9c,eax
  40d565:	add    eax,0x72e080bd
  40d56a:	cli    
  40d56b:	jb     0x40d5dd
  40d56d:	ins    DWORD PTR es:[edi],dx
  40d56e:	cmp    ah,BYTE PTR [edx+0x3f]
  40d571:	out    dx,eax
  40d572:	sbb    ecx,ebp
  40d574:	aad    0x92
  40d576:	int3   
  40d577:	lods   eax,DWORD PTR ds:[esi]
  40d578:	loop   0x40d4fa
  40d57a:	or     BYTE PTR [eax],cl
  40d57c:	add    al,0xbc
  40d57e:	je     0x40d567
  40d580:	xchg   ecx,eax
  40d581:	and    DWORD PTR [ecx+0x330c1355],ebp
  40d587:	xchg   edx,eax
  40d588:	dec    edx
  40d589:	cs sahf 
  40d58b:	out    dx,eax
  40d58c:	imul   edi,DWORD PTR [edx],0x85667bf6
  40d592:	xor    al,0x77
  40d594:	inc    eax
  40d595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d596:	aad    0xdb
  40d598:	icebp  
  40d599:	fcomip st,st(5)
  40d59b:	mov    eax,ds:0x74447a9
  40d5a0:	ret    
  40d5a1:	(bad)  
  40d5a2:	rcr    BYTE PTR [eax+ecx*8-0x61],1
  40d5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a7:	in     eax,dx
  40d5a8:	dec    esi
  40d5a9:	lods   eax,DWORD PTR ds:[esi]
  40d5aa:	push   ecx
  40d5ab:	ja     0x40d627
  40d5ad:	sbb    eax,0x2667a465
  40d5b2:	cmc    
  40d5b3:	in     eax,0xee
  40d5b5:	push   ss
  40d5b6:	ror    BYTE PTR [ecx],cl
  40d5b8:	cmc    
  40d5b9:	fadd   DWORD PTR [ebx+0x5a]
  40d5bc:	xchg   DWORD PTR [ecx-0x32266ffb],esp
  40d5c2:	repz mov bl,0x39
  40d5c5:	lods   eax,DWORD PTR ds:[esi]
  40d5c6:	inc    esi
  40d5c7:	mov    cl,dl
  40d5c9:	aas    
  40d5ca:	xchg   ebp,eax
  40d5cb:	dec    eax
  40d5cc:	ret    0x23c8
  40d5cf:	sbb    al,0xca
  40d5d1:	add    al,0xed
  40d5d3:	mov    BYTE PTR [edi-0x7c],cl
  40d5d6:	es sbb ch,bl
  40d5d9:	sbb    dh,0x16
  40d5dc:	pop    esp
  40d5dd:	mov    ah,0x2a
  40d5df:	fimul  DWORD PTR [ebp-0x7d6101cc]
  40d5e5:	pop    esi
  40d5e6:	test   BYTE PTR es:[ecx],bl
  40d5e9:	add    BYTE PTR [ebx+ebx*1-0x73867ec3],bh
  40d5f0:	cmp    bl,0xa
  40d5f3:	pop    esi
  40d5f4:	xchg   esp,eax
  40d5f5:	inc    ecx
  40d5f6:	(bad)
  40d5f9:	xor    BYTE PTR [ecx+0x27],dh
  40d5fc:	fisubr DWORD PTR [ebx]
  40d5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ff:	cmc    
  40d600:	rcr    DWORD PTR [edi+0x7ea324da],cl
  40d606:	xchg   DWORD PTR [edi+ebp*4-0x67],ebp
  40d60a:	jl     0x40d659
  40d60c:	sbb    BYTE PTR [eax+0x3d74335f],0x42
  40d613:	rep ins DWORD PTR es:[edi],dx
  40d615:	add    BYTE PTR [edi],ah
  40d617:	and    al,dh
  40d619:	idiv   BYTE PTR [ebp-0x7712de0e]
  40d61f:	push   es
  40d620:	xchg   DWORD PTR [edi],esp
  40d622:	fnsave [edi-0x58]
  40d625:	shr    ch,cl
  40d627:	popa   
  40d628:	push   ds
  40d629:	std    
  40d62a:	dec    ebp
  40d62b:	push   es
  40d62c:	(bad)  
  40d62d:	or     BYTE PTR [eax+edi*8-0x2ae31583],bl
  40d634:	(bad)  [ecx]
  40d636:	pop    ebp
  40d637:	push   0xffffffc8
  40d639:	(bad)  
  40d63a:	jg     0x40d5c5
  40d63c:	ins    DWORD PTR es:[edi],dx
  40d63d:	jbe    0x40d63b
  40d63f:	(bad)  
  40d641:	das    
  40d642:	aaa    
  40d643:	jmp    0x40d5e9
  40d645:	addr16 inc edi
  40d647:	add    eax,0xeeeb1a13
  40d64c:	adc    DWORD PTR [ecx],ecx
  40d64e:	mov    bh,0xf7
  40d650:	(bad)  
  40d651:	xor    BYTE PTR [edi+0x10b0e3e7],bl
  40d657:	push   cs
  40d658:	xor    DWORD PTR [ecx-0x17e2dc3e],0x1
  40d65f:	push   edx
  40d660:	ins    DWORD PTR es:[edi],dx
  40d661:	sbb    eax,DWORD PTR [eax-0x4a97c5d9]
  40d667:	mov    dl,0xed
  40d669:	inc    esi
  40d66a:	jno    0x40d60b
  40d66c:	pushf  
  40d66d:	sar    edx,cl
  40d66f:	cmp    DWORD PTR [edx-0xbd1cf57],esi
  40d675:	les    ecx,FWORD PTR [edi+eax*2+0x25c5a8b]
  40d67c:	pop    ebx
  40d67d:	sbb    al,0x8
  40d67f:	pushf  
  40d680:	cmp    eax,0x949eae0a
  40d685:	test   al,0x3e
  40d687:	das    
  40d688:	sbb    WORD PTR [ebx-0x59],di
  40d68c:	jae    0x40d65a
  40d68e:	int3   
  40d68f:	pop    ebx
  40d690:	test   BYTE PTR [edx+0x5e],ah
  40d693:	or     ecx,esp
  40d695:	xchg   ecx,eax
  40d696:	sti    
  40d697:	mov    eax,ds:0x363bd42a
  40d69c:	jnp    0x40d6b8
  40d69e:	push   0xa8600b4c
  40d6a3:	ss call 0x10f58823
  40d6a9:	fistp  WORD PTR [eax+0x1]
  40d6ac:	add    DWORD PTR [ebx+0x46b6cef3],ecx
  40d6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b3:	mov    dh,0x88
  40d6b5:	jge    0x40d714
  40d6b7:	mov    ah,0xb0
  40d6b9:	fistp  QWORD PTR [eax+ebx*8+0x2e]
  40d6bd:	ret    
  40d6be:	xchg   DWORD PTR [eax+0x5c],ebp
  40d6c1:	aas    
  40d6c2:	test   al,0xaf
  40d6c4:	push   ebx
  40d6c5:	(bad)  
  40d6c6:	or     esi,DWORD PTR [esi+esi*4-0xa]
  40d6ca:	or     cl,0x5f
  40d6cd:	fwait
  40d6ce:	sbb    edi,DWORD PTR [ebp-0x6c]
  40d6d1:	outs   dx,DWORD PTR ds:[esi]
  40d6d2:	and    dh,BYTE PTR [eax+ebp*1]
  40d6d5:	std    
  40d6d6:	and    eax,0x653e6f74
  40d6db:	mov    dl,0xba
  40d6dd:	fwait
  40d6de:	int    0x2f
  40d6e0:	push   ds
  40d6e1:	xchg   esp,eax
  40d6e2:	jo     0x40d745
  40d6e4:	cs dec edx
  40d6e6:	(bad)  
  40d6e7:	sub    esp,DWORD PTR [ebp+esi*1-0x3a53db03]
  40d6ee:	add    bh,BYTE PTR [edx+0x7a]
  40d6f1:	leave  
  40d6f2:	fdivr  DWORD PTR [ebx]
  40d6f4:	mov    edi,0xf7587851
  40d6f9:	aam    0x54
  40d6fb:	sbb    BYTE PTR [eax+0x39bebaac],ch
  40d701:	and    BYTE PTR [edi-0x21],0x40
  40d705:	(bad)  
  40d706:	and    BYTE PTR [edi],dh
  40d708:	mov    BYTE PTR [esi-0x69],0xb7
  40d70c:	(bad)  
  40d70d:	jle    0x40d72a
  40d70f:	jbe    0x40d740
  40d711:	or     bh,BYTE PTR [ecx+edx*2]
  40d714:	xchg   esp,eax
  40d715:	out    0x2,al
  40d717:	pop    eax
  40d718:	push   eax
  40d719:	fdivr  QWORD PTR [eax-0x6f92784e]
  40d71f:	popa   
  40d720:	cld    
  40d721:	sar    BYTE PTR [esi],1
  40d723:	adc    eax,0x725d9c5
  40d728:	repz add cl,0x22
  40d72c:	xchg   esi,eax
  40d72d:	dec    esi
  40d72e:	cs aad 0x2c
  40d731:	nop
  40d732:	cmp    BYTE PTR [edi],dh
  40d734:	out    dx,eax
  40d735:	das    
  40d736:	dec    BYTE PTR [esi+0x32]
  40d739:	test   eax,0xdcd3f71
  40d73e:	and    DWORD PTR [eax+eax*8+0x16a994fa],edi
  40d745:	adc    BYTE PTR fs:[ebp+0x5d28a9ba],al
  40d74c:	mov    eax,ds:0x59c08399
  40d751:	arpl   WORD PTR [edx+0x0],cx
  40d754:	shl    DWORD PTR [esi-0x9],1
  40d757:	aaa    
  40d758:	loope  0x40d7cc
  40d75a:	mov    esp,0xa2d67e5
  40d75f:	add    BYTE PTR [ebx-0x38],al
  40d762:	mov    eax,?
  40d764:	push   es
  40d765:	(bad)  
  40d766:	pop    eax
  40d767:	rcr    BYTE PTR [edi],0x71
  40d76a:	bound  edi,QWORD PTR [eax-0x43633adc]
  40d770:	lea    eax,[edi]
  40d772:	dec    esp
  40d773:	les    ebx,FWORD PTR ds:0x334259ee
  40d779:	add    dl,al
  40d77b:	rcl    BYTE PTR [edi-0x660800f8],cl
  40d781:	arpl   WORD PTR [ebx-0x15],bp
  40d784:	das    
  40d785:	aas    
  40d786:	pusha  
  40d787:	and    eax,DWORD PTR [ebx+0x5790cab6]
  40d78d:	callw  0xf5a2
  40d791:	and    eax,0xea2ad1f7
  40d796:	mov    ebx,0xd23f34eb
  40d79b:	inc    ebp
  40d79c:	lods   al,BYTE PTR ds:[esi]
  40d79d:	test   eax,0xd8d5087b
  40d7a2:	ds push ds
  40d7a4:	js     0x40d736
  40d7a6:	pop    es
  40d7a7:	fstp   TBYTE PTR [ebx]
  40d7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7aa:	sub    esp,DWORD PTR [ebp+0x311e22b2]
  40d7b0:	test   BYTE PTR [edx-0x29],bh
  40d7b3:	out    0x6a,al
  40d7b5:	out    dx,eax
  40d7b6:	outs   dx,DWORD PTR ds:[esi]
  40d7b7:	js     0x40d7c2
  40d7b9:	add    ecx,DWORD PTR [eax+eax*4+0x2b]
  40d7bd:	es sahf 
  40d7bf:	sbb    ebx,DWORD PTR [eax-0x2b]
  40d7c2:	push   0xffffff92
  40d7c4:	xor    al,0x8e
  40d7c6:	shr    BYTE PTR [esp+esi*8],cl
  40d7c9:	add    BYTE PTR [eax],al
  40d7cb:	stos   BYTE PTR es:[edi],al
  40d7cc:	repnz mov edi,0x563dbc7b
  40d7d2:	cld    
  40d7d3:	xchg   ebx,eax
  40d7d4:	or     DWORD PTR [esi+0x41],0x3a
  40d7d8:	xchg   DWORD PTR [edi],ebx
  40d7da:	jmp    0x9e66:0x792af650
  40d7e1:	sahf   
  40d7e2:	jecxz  0x40d82c
  40d7e4:	xchg   esp,eax
  40d7e5:	dec    ebp
  40d7e6:	jae    0x40d794
  40d7e8:	ret    
  40d7e9:	pop    es
  40d7ea:	sbb    ah,BYTE PTR [edi+0x29]
  40d7ed:	stos   DWORD PTR es:[edi],eax
  40d7ee:	mov    bh,0x23
  40d7f0:	jecxz  0x40d803
  40d7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f3:	pop    ss
  40d7f4:	iret   
  40d7f5:	shl    ecx,1
  40d7f7:	addr16 push ebp
  40d7f9:	jp     0x40d7d7
  40d7fb:	add    DWORD PTR [edi],0x12e0cad3
  40d801:	int3   
  40d802:	mov    esp,0xea5ea891
  40d807:	jb     0x40d7e6
  40d809:	cmp    DWORD PTR [edx+0x36],esi
  40d80c:	out    dx,eax
  40d80d:	cmp    DWORD PTR [ecx+0x50acbf91],0x14
  40d814:	jo     0x40d800
  40d816:	scas   al,BYTE PTR es:[edi]
  40d817:	xlat   BYTE PTR ds:[ebx]
  40d818:	icebp  
  40d819:	(bad)  
  40d81a:	ss sti 
  40d81c:	mov    esp,0xc289963e
  40d821:	xor    bl,0xb3
  40d824:	mov    bh,0x55
  40d826:	cmp    al,0xc3
  40d828:	loope  0x40d886
  40d82a:	int3   
  40d82b:	inc    eax
  40d82c:	mov    ch,0x74
  40d82e:	xor    BYTE PTR [esi+0x67],bh
  40d831:	xchg   edx,eax
  40d832:	or     BYTE PTR [ecx],ah
  40d834:	gs pop esi
  40d836:	xor    DWORD PTR [esi+0x2c723107],0xffffff85
  40d83d:	int    0xe2
  40d83f:	jmp    0x4a125fdc
  40d844:	xchg   ebx,eax
  40d845:	rol    DWORD PTR [esi],1
  40d847:	cmp    al,0x11
  40d849:	fwait
  40d84a:	lds    edx,FWORD PTR [esi+0x53fd15be]
  40d850:	ja     0x40d86b
  40d852:	repz add BYTE PTR fs:[eax],ch
  40d856:	mov    WORD PTR [eax+0x3b885a30],?
  40d85c:	mov    ecx,0xb5f3a18e
  40d861:	pop    eax
  40d862:	imul   edx,DWORD PTR [esi-0x43778744],0x17
  40d869:	xchg   DWORD PTR [edx+esi*8-0x44b0a549],esp
  40d870:	jne    0x40d8ab
  40d872:	mov    bh,0x6f
  40d874:	popf   
  40d875:	jle    0x40d8d4
  40d877:	push   edi
  40d878:	push   ebp
  40d879:	mov    ah,0x5f
  40d87b:	mov    esi,0xe7e43d41
  40d880:	in     al,0x57
  40d882:	mov    cl,0xaf
  40d884:	sub    BYTE PTR [edi],bh
  40d886:	nop
  40d887:	or     DWORD PTR [ebp-0x1],esi
  40d88a:	mov    esp,0xa7b98d02
  40d88f:	sub    al,0x68
  40d891:	jns    0x40d90a
  40d893:	push   ss
  40d894:	dec    ebp
  40d895:	jp     0x40d8d5
  40d897:	cwde   
  40d898:	jne    0x40d8b9
  40d89a:	(bad)  
  40d89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d89c:	cmp    al,0x81
  40d89e:	and    BYTE PTR [esi],bl
  40d8a0:	pop    ebp
  40d8a1:	xchg   DWORD PTR [eax-0x1e142420],esi
  40d8a7:	push   0x7e23550a
  40d8ac:	pop    ss
  40d8ad:	add    ebp,ebp
  40d8af:	xor    eax,0xe29bd9a5
  40d8b4:	(bad)  
  40d8b5:	jp     0x40d906
  40d8b7:	aaa    
  40d8b8:	jne    0x40d855
  40d8ba:	addr16 jno 0x40d8d8
  40d8bd:	call   0x25f4d978
  40d8c2:	mov    ebp,0x8732f733
  40d8c7:	(bad)  
  40d8c8:	imul   ebp,DWORD PTR [ebx+0x7a],0xfffffffd
  40d8cc:	in     al,dx
  40d8cd:	and    al,0xde
  40d8cf:	int    0xa8
  40d8d1:	nop
  40d8d2:	inc    ebp
  40d8d3:	adc    BYTE PTR [ebp-0x740d7966],ch
  40d8d9:	mov    edi,0x832e723e
  40d8de:	inc    ecx
  40d8df:	cdq    
  40d8e0:	xchg   ecx,eax
  40d8e1:	shr    dh,cl
  40d8e3:	pushf  
  40d8e4:	or     bh,dl
  40d8e6:	in     al,dx
  40d8e7:	montmul (bad)
  40d8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e9:	push   es
  40d8ea:	mov    DWORD PTR [edi],0x8f8e96fd
  40d8f0:	pusha  
  40d8f1:	adc    eax,0xc7292b1f
  40d8f6:	cmp    al,0xc
  40d8f8:	push   cs
  40d8f9:	pop    edi
  40d8fa:	std    
  40d8fb:	inc    esi
  40d8fc:	dec    ecx
  40d8fd:	outs   dx,DWORD PTR ds:[esi]
  40d8fe:	(bad)  
  40d8ff:	mov    ch,0x9f
  40d901:	retf   
  40d902:	jne    0x40d911
  40d904:	fistp  DWORD PTR [esi+0x72]
  40d907:	iret   
  40d908:	lahf   
  40d909:	adc    edx,DWORD PTR [esi]
  40d90b:	(bad)  
  40d90c:	cdq    
  40d90d:	scas   eax,DWORD PTR es:[edi]
  40d90e:	test   al,0x84
  40d910:	add    BYTE PTR [edx-0x58],dh
  40d913:	push   eax
  40d914:	sbb    BYTE PTR [esi],0xe4
  40d917:	xor    al,0x6e
  40d919:	jp     0x40d95c
  40d91b:	push   edi
  40d91c:	sub    BYTE PTR [esi],al
  40d91e:	lock push ss
  40d920:	xchg   BYTE PTR [esp+eax*4+0x4fe41abb],bl
  40d927:	pop    ds
  40d928:	sbb    eax,0x1dad5e1e
  40d92d:	mov    ah,BYTE PTR [ebx-0x4c]
  40d930:	mov    esi,0x9079c7bc
  40d935:	ja     0x40d93c
  40d937:	in     eax,dx
  40d938:	add    ebp,edi
  40d93a:	mov    esi,0xaaa2b459
  40d93f:	mov    esi,0x99b9c289
  40d944:	or     eax,0xeee97d4f
  40d949:	frstor [esi-0xe]
  40d94c:	outs   dx,DWORD PTR ds:[esi]
  40d94d:	mov    fs,WORD PTR [edx+0x7a2462f3]
  40d953:	sub    ah,ah
  40d955:	sub    eax,0x9381d147
  40d95a:	or     al,0x6
  40d95c:	sbb    eax,0x3ca99dfd
  40d961:	dec    edi
  40d962:	xchg   esp,eax
  40d963:	or     eax,0x488d2599
  40d968:	jo     0x40d901
  40d96a:	jns    0x40d9d4
  40d96c:	lock and BYTE PTR ds:0x299c8de6,bh
  40d973:	loopne 0x40d97f
  40d975:	ins    DWORD PTR es:[edi],dx
  40d976:	jg     0x40d91f
  40d978:	mov    ah,0xed
  40d97a:	test   BYTE PTR [edx+0x10],dh
  40d97d:	ins    BYTE PTR es:[edi],dx
  40d97e:	dec    ebx
  40d97f:	push   cs
  40d980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d981:	xchg   esi,eax
  40d982:	adc    eax,0x22221e65
  40d987:	mov    esi,DWORD PTR [edi]
  40d989:	clc    
  40d98a:	test   al,0xe6
  40d98c:	lods   eax,DWORD PTR ds:[esi]
  40d98d:	push   ebp
  40d98e:	ret    
  40d98f:	lea    ebx,[edx+0x6e]
  40d992:	push   edx
  40d993:	nop
  40d994:	clc    
  40d995:	cli    
  40d996:	(bad)  
  40d997:	mov    dh,0x16
  40d999:	inc    ecx
  40d99a:	jae    0x40d9bf
  40d99c:	mov    bl,0xea
  40d99e:	adc    DWORD PTR [edx],ebx
  40d9a0:	push   0x5e670bec
  40d9a5:	rcl    ebx,cl
  40d9a7:	jl     0x40d9d9
  40d9a9:	or     ebx,DWORD PTR [ebx]
  40d9ab:	sub    BYTE PTR [ecx+0x1742059f],0xe8
  40d9b2:	mov    ah,0x6a
  40d9b4:	pop    ds
  40d9b5:	fild   DWORD PTR [edx+0x47]
  40d9b8:	fisubr DWORD PTR [ebx+eiz*2]
  40d9bb:	popw   ss
  40d9bd:	xchg   ecx,eax
  40d9be:	mov    edi,0x681984b7
  40d9c3:	adc    al,BYTE PTR [edi-0x60c80635]
  40d9c9:	add    DWORD PTR [ebp+edi*1+0x3],ebp
  40d9cd:	xor    BYTE PTR [esi],bl
  40d9cf:	(bad)  
  40d9d1:	add    edi,ebp
  40d9d3:	pop    ebp
  40d9d4:	mov    ds:0x4a46b515,al
  40d9d9:	mov    esi,0x1ce86702
  40d9de:	mov    esi,0x915c26d4
  40d9e3:	aas    
  40d9e4:	add    DWORD PTR ds:0x35dd67d4,0xbb4b854e
  40d9ee:	and    al,bl
  40d9f0:	cmp    eax,0x60b3ac3e
  40d9f6:	or     al,0x7b
  40d9f8:	jbe    0x40da4f
  40d9fa:	enter  0x698c,0x97
  40d9fe:	push   eax
  40d9ff:	rcr    DWORD PTR [ebx],cl
  40da01:	(bad)  
  40da03:	test   BYTE PTR [ebp+0x3f],dl
  40da06:	test   BYTE PTR ds:0x628ac6d2,ch
  40da0c:	add    esp,DWORD PTR [esi+0x46]
  40da0f:	test   DWORD PTR [ebx],edx
  40da11:	xor    cl,BYTE PTR [edx+0xc]
  40da14:	xchg   ebp,eax
  40da15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da16:	pop    ebx
  40da17:	mov    ah,0x1
  40da19:	js     0x40da21
  40da1b:	jb     0x40d9bf
  40da1d:	ins    BYTE PTR es:[edi],dx
  40da1e:	sbb    eax,0x6f431aae
  40da23:	mov    bl,0x60
  40da25:	sub    eax,0xc2784c10
  40da2a:	mov    al,ds:0xd89ee131
  40da2f:	mov    cl,0x63
  40da31:	sbb    esi,DWORD PTR [ebx+0x7696b2b]
  40da37:	sbb    BYTE PTR ds:0x6a6e15c3,0x72
  40da3e:	retf   
  40da3f:	in     eax,dx
  40da40:	inc    esp
  40da41:	or     al,0xe8
  40da43:	xlat   BYTE PTR gs:[ebx]
  40da45:	les    esp,FWORD PTR ds:0x8e0941b5
  40da4b:	mov    eax,ds:0xedfcb12d
  40da50:	iret   
  40da51:	fs dec esp
  40da53:	mov    ebp,0x6b9d62b8
  40da58:	cdq    
  40da59:	xchg   ebx,eax
  40da5a:	jo     0x40daaa
  40da5c:	cmp    eax,0x77b0d070
  40da61:	(bad)  
  40da62:	(bad)
  40da65:	push   ecx
  40da66:	sub    ebx,ebp
  40da68:	jae    0x40da51
  40da6a:	lods   eax,DWORD PTR ds:[esi]
  40da6b:	inc    edx
  40da6c:	push   eax
  40da6d:	pop    esi
  40da6e:	in     eax,0xba
  40da70:	in     al,0x39
  40da72:	and    BYTE PTR [ebp-0x35],bl
  40da75:	mov    bl,0x3a
  40da77:	jne    0x40da7c
  40da79:	push   edx
  40da7a:	ss in  eax,0x73
  40da7d:	out    0xbb,eax
  40da7f:	das    
  40da80:	xchg   edi,eax
  40da81:	out    0x2d,eax
  40da83:	test   al,0xfb
  40da85:	mov    cl,0x2e
  40da87:	dec    edx
  40da88:	fild   WORD PTR [esi]
  40da8a:	aas    
  40da8b:	(bad)  
  40da8c:	sar    DWORD PTR [edi],0xed
  40da8f:	nop
  40da90:	pop    ebx
  40da91:	in     al,dx
  40da92:	pop    ds
  40da93:	retf   
  40da94:	pop    es
  40da95:	shr    DWORD PTR [ebx],cl
  40da97:	and    DWORD PTR [edx+eax*2-0x55],0x535394fd
  40da9f:	(bad)  
  40daa0:	jmp    0x332c9127
  40daa5:	dec    edx
  40daa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa7:	fldenv [esi+0x6e]
  40daaa:	fild   DWORD PTR [eax]
  40daac:	push   eax
  40daad:	and    DWORD PTR [ebx],0x430c3049
  40dab3:	xor    dh,cl
  40dab5:	idiv   BYTE PTR [edi-0x7d]
  40dab8:	dec    edx
  40dab9:	ja     0x40da78
  40dabb:	(bad)  es:[esp+eiz*8-0x1b7c3422]
  40dac3:	hlt    
  40dac4:	jnp    0x40db06
  40dac6:	lea    edi,[esi-0x33f21236]
  40dacc:	jg     0x40db34
  40dace:	mov    WORD PTR [eax-0x74],es
  40dad1:	sbb    BYTE PTR [edx*8-0x6fa7fcab],bh
  40dad8:	sti    
  40dad9:	ins    DWORD PTR es:[edi],dx
  40dada:	cmc    
  40dadb:	out    0x9,al
  40dadd:	inc    edi
  40dade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dadf:	rol    BYTE PTR [esi+ebx*2+0x14],1
  40dae3:	and    eax,0x14bc4c9d
  40dae8:	or     dl,BYTE PTR [esi]
  40daea:	cmc    
  40daeb:	mov    al,ds:0x37b03046
  40daf0:	mov    ebp,0x1b96cf4a
  40daf5:	mov    eax,ds:0xb0cb60a9
  40dafa:	pop    ebx
  40dafb:	sub    DWORD PTR ds:[edx+0x5d719b9a],edx
  40db02:	ret    
  40db03:	fcom   st(4)
  40db05:	ds dec eax
  40db07:	ins    BYTE PTR es:[edi],dx
  40db08:	jne    0x40db38
  40db0a:	adc    dh,BYTE PTR [eax]
  40db0c:	jp     0x40dad0
  40db0e:	xchg   esi,eax
  40db0f:	ret    0xc8e3
  40db12:	mov    edx,0xb0fcc63d
  40db17:	jb     0x40db81
  40db19:	sub    DWORD PTR [ebx-0x458ad501],ebp
  40db1f:	ror    BYTE PTR [ebx],cl
  40db21:	popa   
  40db22:	cmc    
  40db23:	xchg   ebp,eax
  40db24:	sahf   
  40db25:	int3   
  40db26:	mov    eax,fs:0x142b39f1
  40db2c:	scas   eax,DWORD PTR es:[edi]
  40db2d:	(bad)
  40db30:	jmp    0xaeff199c
  40db35:	push   ds
  40db36:	inc    eax
  40db37:	iret   
  40db38:	xor    DWORD PTR [esi+0x3dc37ac3],0x60
  40db3f:	in     al,dx
  40db40:	mov    bh,0x3c
  40db42:	mov    ds:0x632ad096,al
  40db47:	jle    0x40dbc0
  40db49:	and    BYTE PTR [edi],dl
  40db4b:	or     BYTE PTR [esi*1+0x4c6ac0aa],bl
  40db52:	ins    DWORD PTR es:[edi],dx
  40db53:	retf   0xf88b
  40db56:	fimul  DWORD PTR [edi-0x747e0d33]
  40db5c:	cli    
  40db5d:	mov    ecx,0xd35e0395
  40db62:	mov    WORD PTR [ebx+0x5a],ss
  40db65:	pop    edi
  40db66:	xor    esp,DWORD PTR [ebx-0x59f3e16f]
  40db6c:	adc    BYTE PTR [edx-0x95c3029],0xe3
  40db73:	xchg   edx,eax
  40db74:	xor    eax,0xd454dd08
  40db79:	xchg   esi,eax
  40db7a:	call   ebx
  40db7c:	cmp    al,0x94
  40db7e:	and    al,0x76
  40db80:	bound  ecx,QWORD PTR [esi]
  40db82:	dec    ecx
  40db83:	imul   ebx,DWORD PTR [ebx],0x1c0abd91
  40db89:	fdivr  DWORD PTR [edx-0x49]
  40db8c:	aas    
  40db8d:	push   es
  40db8e:	adc    DWORD PTR [ecx-0x40],esi
  40db91:	sbb    ah,bh
  40db93:	ds push cs
  40db95:	mul    BYTE PTR [ecx-0x5703830a]
  40db9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db9c:	dec    edx
  40db9d:	call   0x29e1e0af
  40dba2:	in     eax,dx
  40dba3:	ror    BYTE PTR [edx+0x64],cl
  40dba6:	or     ch,cl
  40dba8:	xchg   esi,eax
  40dba9:	test   al,0x29
  40dbab:	stos   BYTE PTR es:[edi],al
  40dbac:	cs out dx,eax
  40dbae:	xor    BYTE PTR [ecx-0x3a91e972],cl
  40dbb4:	and    eax,0x9314763c
  40dbb9:	sub    DWORD PTR [esi],edx
  40dbbb:	ins    DWORD PTR es:[edi],dx
  40dbbc:	mov    ah,0x6d
  40dbbe:	outs   dx,BYTE PTR ds:[esi]
  40dbbf:	mov    dh,0xdc
  40dbc1:	jmp    0x1e7a:0x4ed7a91b
  40dbc8:	test   edi,ecx
  40dbca:	cmp    BYTE PTR [ebp+eiz*4+0x55],cl
  40dbce:	mov    esp,0xb6882b10
  40dbd3:	pop    es
  40dbd4:	mov    ah,0x42
  40dbd6:	mov    bl,ah
  40dbd8:	inc    ecx
  40dbd9:	ror    BYTE PTR [ecx],cl
  40dbdb:	mov    esp,0xddc80aab
  40dbe0:	jmp    0x9f60:0x6d9d63
  40dbe7:	es sbb edi,ebx
  40dbea:	frstor [edx]
  40dbec:	sar    BYTE PTR [ecx+ebx*4-0x3b92a02a],1
  40dbf3:	scas   eax,DWORD PTR es:[edi]
  40dbf4:	jl     0x40db8d
  40dbf6:	add    DWORD PTR [esi+0x53ccfc80],0xf7740e51
  40dc00:	xor    BYTE PTR [ebx+0x5f819a7e],dh
  40dc06:	push   ebx
  40dc07:	jo     0x40dbe2
  40dc09:	cmp    DWORD PTR [edx-0x80],esi
  40dc0c:	(bad)  
  40dc0d:	push   ecx
  40dc0e:	daa    
  40dc0f:	push   0x75
  40dc11:	in     eax,dx
  40dc12:	jns    0x40dc86
  40dc14:	loopne 0x40dc80
  40dc16:	inc    esi
  40dc17:	nop
  40dc18:	and    eax,0x88efff88
  40dc1d:	daa    
  40dc1e:	clc    
  40dc1f:	xchg   BYTE PTR [esi+edx*8],cl
  40dc22:	retf   0xa2e7
  40dc25:	cmp    al,0x88
  40dc27:	sub    dl,cl
  40dc29:	cmp    bh,BYTE PTR [edi]
  40dc2b:	xchg   esp,eax
  40dc2c:	pop    es
  40dc2d:	es sahf 
  40dc2f:	push   es
  40dc30:	gs inc ebp
  40dc32:	outs   dx,DWORD PTR ds:[esi]
  40dc33:	sub    al,0x65
  40dc35:	add    cl,BYTE PTR [ebx]
  40dc37:	sbb    BYTE PTR [edx],bh
  40dc39:	add    ah,cl
  40dc3b:	mov    esp,0x3ca74e2d
  40dc40:	loope  0x40dc0e
  40dc42:	pop    ebx
  40dc43:	mov    eax,0x5d49da0e
  40dc48:	and    DWORD PTR [ecx+0x75],edx
  40dc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc4c:	jmp    0x2a0cb5a7
  40dc51:	jo     0x40dcca
  40dc53:	out    dx,eax
  40dc54:	mov    esp,0xdd30200a
  40dc59:	loop   0x40dcc3
  40dc5b:	rol    BYTE PTR [edx-0x76],1
  40dc5e:	(bad)  
  40dc5f:	stos   BYTE PTR es:[edi],al
  40dc60:	inc    ebx
  40dc61:	mov    edi,0x21a3d86e
  40dc66:	push   eax
  40dc67:	pop    edx
  40dc68:	cli    
  40dc69:	mov    al,0xe4
  40dc6b:	lods   eax,DWORD PTR ds:[esi]
  40dc6c:	sbb    ch,BYTE PTR [ebx-0x48e42b21]
  40dc72:	pop    es
  40dc73:	mov    ecx,0x1c3e5807
  40dc78:	adc    ah,dh
  40dc7a:	mov    dh,BYTE PTR [eax+0x854bf34]
  40dc80:	mov    ebx,DWORD PTR [edx+0x13df4f7c]
  40dc86:	mov    ebx,DWORD PTR [esi]
  40dc88:	or     DWORD PTR [edi+0x3f3c5f04],eax
  40dc8e:	fstp   TBYTE PTR [eax+0x5d]
  40dc91:	mov    edx,0xe449d1ab
  40dc96:	leave  
  40dc97:	out    0x2,eax
  40dc99:	pop    edi
  40dc9a:	out    0x7d,eax
  40dc9c:	jne    0x40dc5f
  40dc9e:	into   
  40dc9f:	jmp    0x1e259fc3
  40dca4:	lahf   
  40dca5:	or     bl,BYTE PTR [eax+0x654e3bac]
  40dcab:	inc    edi
  40dcac:	mov    ah,dl
  40dcae:	sbb    DWORD PTR [ebx+0x30084fb7],edx
  40dcb4:	or     al,0xb8
  40dcb6:	popa   
  40dcb7:	sbb    DWORD PTR [ebx-0x5a6e110],0xe1177775
  40dcc1:	pop    edi
  40dcc2:	lods   al,BYTE PTR ds:[esi]
  40dcc3:	mov    ch,0x9c
  40dcc5:	jne    0x40dc6d
  40dcc7:	cmp    BYTE PTR [edi-0x24],bl
  40dcca:	aam    0x52
  40dccc:	jo     0x40dd10
  40dcce:	dec    edi
  40dccf:	(bad)  
  40dcd1:	xchg   BYTE PTR [esi+0xbb98311],bh
  40dcd7:	shr    DWORD PTR [ebp+0x75],cl
  40dcda:	les    eax,FWORD PTR ds:0x75b84f45
  40dce0:	les    ebp,FWORD PTR [edi+0x6f]
  40dce3:	lock ins BYTE PTR es:[edi],dx
  40dce5:	mov    ebp,0x1f23ce1b
  40dcea:	xor    esp,DWORD PTR [edx+0x348a7845]
  40dcf0:	fcmovnb st,st(4)
  40dcf2:	loop   0x40dc7d
  40dcf4:	mov    ss:0x9bc2339f,al
  40dcfa:	(bad)  
  40dcfb:	popa   
  40dcfc:	or     eax,DWORD PTR [ebx+0x55231176]
  40dd02:	mov    dl,0xda
  40dd04:	inc    eax
  40dd05:	jo     0x40dd5e
  40dd07:	iret   
  40dd08:	cdq    
  40dd09:	pushf  
  40dd0a:	or     al,0x54
  40dd0c:	adc    cl,BYTE PTR [esi]
  40dd0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd0f:	lock repz mov esp,DWORD PTR [esi]
  40dd13:	ret    
  40dd14:	je     0x40dd10
  40dd16:	or     cl,BYTE PTR [esi]
  40dd18:	mov    eax,ds:0x9c61a86d
  40dd1d:	pop    es
  40dd1e:	push   ss
  40dd1f:	mov    dl,0x8a
  40dd21:	sbb    al,0xe4
  40dd23:	pop    ecx
  40dd24:	and    DWORD PTR [edx+0x35],esp
  40dd27:	sbb    DWORD PTR [edi-0x74e06e23],eax
  40dd2d:	mov    eax,ds:0xec7ede9
  40dd32:	data16 sub al,0x14
  40dd35:	cmp    esp,DWORD PTR [ecx+ebp*4]
  40dd38:	std    
  40dd39:	or     eax,0x2b33d998
  40dd3e:	sti    
  40dd3f:	imul   esi,DWORD PTR [edi-0x2c3bfac4],0x13160e2
  40dd49:	jno    0x40dd7c
  40dd4b:	loope  0x40dd58
  40dd4d:	push   ebp
  40dd4e:	nop
  40dd4f:	fidiv  WORD PTR [esi]
  40dd51:	push   eax
  40dd52:	xor    BYTE PTR [edx+0x1b08bc66],0xcd
  40dd59:	data16 mov dl,ch
  40dd5c:	fdivr  st(1),st
  40dd5e:	pop    ecx
  40dd5f:	sbb    DWORD PTR [eax-0x11e3150],eax
  40dd65:	imul   DWORD PTR [ebx+0x50]
  40dd68:	pop    ds
  40dd69:	xchg   ebp,eax
  40dd6a:	mov    dl,0xb
  40dd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6d:	push   esi
  40dd6e:	jns    0x40dd34
  40dd70:	adc    eax,0xbac2670f
  40dd75:	or     BYTE PTR [edx-0x75],ah
  40dd78:	outs   dx,DWORD PTR ds:[esi]
  40dd79:	ds push ss
  40dd7b:	ret    
  40dd7c:	dec    edi
  40dd7d:	dec    esp
  40dd7e:	jecxz  0x40dd61
  40dd80:	push   0xc01b8759
  40dd85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd86:	mov    dh,0x82
  40dd88:	jb     0x40de02
  40dd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd8b:	add    dh,BYTE PTR [ebx+0x3b]
  40dd8e:	pop    es
  40dd8f:	std    
  40dd90:	mov    bl,0xb4
  40dd92:	idiv   DWORD PTR [edx+0x4d]
  40dd95:	int    0x52
  40dd97:	aas    
  40dd98:	jbe    0x40dd6a
  40dd9a:	dec    ebx
  40dd9b:	cmp    ebp,esp
  40dd9d:	and    edi,edx
  40dd9f:	dec    ebp
  40dda0:	sti    
  40dda1:	in     eax,0x8e
  40dda3:	dec    eax
  40dda4:	sbb    cl,BYTE PTR [eax+ecx*1+0x14]
  40dda8:	cmp    al,0x37
  40ddaa:	fcom   DWORD PTR [edx+0x27195e9f]
  40ddb0:	shl    DWORD PTR [ebx],0x99
  40ddb3:	ss test al,0xd9
  40ddb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb7:	adc    al,0x6b
  40ddb9:	loope  0x40de19
  40ddbb:	scas   eax,DWORD PTR es:[edi]
  40ddbc:	dec    ebx
  40ddbd:	cmp    eax,0x58b844dc
  40ddc2:	lods   eax,DWORD PTR ds:[esi]
  40ddc3:	jne    0x40ddea
  40ddc5:	inc    esi
  40ddc6:	mov    ecx,0xae091267
  40ddcb:	dec    edx
  40ddcc:	pop    es
  40ddcd:	mov    eax,ds:0x7222f40a
  40ddd2:	cmp    al,0x97
  40ddd4:	mov    ebp,0x17114b68
  40ddd9:	mov    dh,0xa1
  40dddb:	lods   ax,WORD PTR ds:[esi]
  40dddd:	rol    dh,1
  40dddf:	inc    ebp
  40dde0:	or     al,0xa4
  40dde2:	mov    al,ds:0x40d41c93
  40dde7:	adc    BYTE PTR [ebx+0x20d9b1c7],al
  40dded:	scas   al,BYTE PTR es:[edi]
  40ddee:	not    DWORD PTR [eax]
  40ddf0:	ror    edx,cl
  40ddf2:	es dec esi
  40ddf4:	add    ebx,esp
  40ddf6:	xchg   DWORD PTR [eax],eax
  40ddf8:	sbb    eax,ecx
  40ddfa:	or     dh,BYTE PTR [ebx-0x13660112]
  40de00:	sbb    bh,BYTE PTR [edx]
  40de02:	jne    0x40ddbf
  40de04:	loope  0x40dde2
  40de06:	loop   0x40ddbd
  40de08:	js     0x40de3f
  40de0a:	mov    cl,0x5f
  40de0c:	mov    dh,0xf
  40de0e:	ss (bad) 
  40de11:	addr16 mov al,0xc9
  40de14:	pop    ecx
  40de15:	mov    ecx,DWORD PTR [eax+eax*1+0xca4e920]
  40de1c:	inc    esp
  40de1d:	lock adc dl,BYTE PTR [edx-0x54ec4fb4]
  40de24:	lahf   
  40de25:	pop    ebx
  40de26:	xor    al,0xec
  40de28:	push   eax
  40de29:	push   esi
  40de2a:	lahf   
  40de2b:	ds push esp
  40de2d:	arpl   WORD PTR [edx-0x7238d476],bp
  40de33:	test   eax,0x84ab2ea4
  40de38:	imul   edx,ecx,0xffffffe1
  40de3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de3c:	imul   ebp,DWORD PTR [ebp+0x66],0x33
  40de40:	in     al,dx
  40de41:	jp     0x40de1e
  40de43:	adc    DWORD PTR ds:0x7f925f34,edi
  40de49:	imul   ebp,DWORD PTR [ecx-0x49],0xd1e0ad89
  40de50:	test   bl,ah
  40de52:	sbb    ax,0x5fed
  40de56:	sub    ebp,DWORD PTR [esi-0x74]
  40de59:	sbb    eax,0x550621e6
  40de5e:	xchg   esp,eax
  40de5f:	daa    
  40de60:	or     al,0xd7
  40de62:	inc    edi
  40de63:	loope  0x40dde7
  40de65:	inc    edi
  40de66:	cwde   
  40de67:	lods   eax,DWORD PTR ds:[esi]
  40de68:	push   0x2a
  40de6a:	(bad)  
  40de6b:	mov    ebp,edi
  40de6d:	or     dl,ch
  40de6f:	xor    ch,al
  40de71:	lods   eax,DWORD PTR ds:[esi]
  40de72:	jbe    0x40decc
  40de74:	sti    
  40de75:	jecxz  0x40dee5
  40de77:	cld    
  40de78:	mov    BYTE PTR [eax+eax*1-0x68],bh
  40de7c:	lea    esi,[esi+0x48]
  40de7f:	jne    0x40de6c
  40de81:	imul   edx,DWORD PTR [edi+0x28be203],0xffffffb2
  40de88:	call   0x5673c2bd
  40de8d:	add    al,bl
  40de8f:	mov    al,ds:0x41fbcb9b
  40de94:	adc    bl,BYTE PTR [esi]
  40de96:	retf   
  40de97:	sbb    DWORD PTR [esi+0x48],esp
  40de9a:	sub    ah,BYTE PTR [esi]
  40de9c:	mov    eax,ds:0xd88c322f
  40dea1:	mov    bl,0x91
  40dea3:	inc    esp
  40dea4:	fwait
  40dea5:	sbb    al,0xa5
  40dea7:	push   ds
  40dea8:	jle    0x40dede
  40deaa:	int3   
  40deab:	fsub   QWORD PTR [ecx+edx*2]
  40deae:	(bad)  
  40deaf:	pause  
  40deb1:	or     al,0x1f
  40deb3:	xlat   BYTE PTR ds:[ebx]
  40deb4:	or     eax,DWORD PTR [esi-0x6af9fdd2]
  40deba:	sahf   
  40debb:	adc    eax,0xfad73aa4
  40dec0:	dec    ebx
  40dec1:	pop    eax
  40dec2:	rcr    dh,0xae
  40dec5:	fwait
  40dec6:	loop   0x40de65
  40dec8:	icebp  
  40dec9:	dec    edi
  40deca:	cmp    esi,DWORD PTR [edx]
  40decc:	jp     0x40df0c
  40dece:	enter  0xa78c,0xeb
  40ded2:	mov    al,ds:0x6155ec8
  40ded7:	mov    al,ds:0x83fe3275
  40dedc:	xchg   esp,eax
  40dedd:	jmp    0x40de70
  40dedf:	adc    ebp,DWORD PTR es:[edx+ebp*4-0x63]
  40dee4:	ins    DWORD PTR es:[edi],dx
  40dee5:	push   ebp
  40dee6:	test   eax,0xb281d427
  40deeb:	sahf   
  40deec:	xchg   ecx,eax
  40deed:	sbb    eax,0x9521b4e9
  40def2:	ds push ds
  40def4:	loope  0x40df15
  40def6:	sub    al,0xb5
  40def8:	stos   BYTE PTR es:[edi],al
  40def9:	or     eax,0x540a4d17
  40defe:	scas   al,BYTE PTR es:[edi]
  40deff:	add    bh,BYTE PTR [ecx-0x3d]
  40df02:	mov    ds:0x302368c8,al
  40df07:	xor    BYTE PTR [edx],ah
  40df09:	pop    ebp
  40df0a:	shr    BYTE PTR [ecx+0x4f],1
  40df0d:	fxam   
  40df0f:	pushf  
  40df10:	fld    DWORD PTR [eax+0x59]
  40df13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df14:	mov    eax,edi
  40df16:	call   0x56f5:0x82f27d3f
  40df1d:	addr16 jne 0x40df4f
  40df20:	dec    esi
  40df21:	mul    DWORD PTR [eax-0xdc97283]
  40df27:	adc    al,0x82
  40df29:	sub    dh,BYTE PTR [edi-0x42833e5f]
  40df2f:	rcr    ah,0x1f
  40df32:	test   DWORD PTR [ecx-0x1e],ebp
  40df35:	fnstsw WORD PTR [ecx]
  40df37:	sbb    BYTE PTR [ecx-0x132b54f9],bl
  40df3d:	imul   ebx,DWORD PTR [ebp-0x54a7a38d],0x74dbefd1
  40df47:	add    ch,BYTE PTR ds:0xfc308439
  40df4d:	cld    
  40df4e:	faddp  st(7),st
  40df50:	imul   eax,ebx,0x6f65c94a
  40df56:	jae    0x40dfa8
  40df58:	pop    es
  40df59:	jmp    0x7bc1:0xfa1c81b6
  40df60:	jno    0x40dfaf
  40df62:	add    BYTE PTR [ebx-0x2906205e],dh
  40df68:	lahf   
  40df69:	mov    esi,0xdf167f05
  40df6e:	jmp    0x8cdb14f7
  40df73:	dec    BYTE PTR [ebx-0xb]
  40df76:	fidivr DWORD PTR [ebx]
  40df78:	lea    esp,[esi-0x5e]
  40df7b:	outs   dx,BYTE PTR ds:[esi]
  40df7c:	mov    cl,0x98
  40df7e:	dec    edi
  40df7f:	es xchg ebx,eax
  40df81:	cmp    al,0x4d
  40df83:	pop    ds
  40df84:	mov    ds:0xca0c2365,eax
  40df89:	mov    al,0xad
  40df8b:	inc    ecx
  40df8c:	push   edi
  40df8d:	and    eax,0xe315ecc0
  40df92:	iret   
  40df93:	cmp    ah,BYTE PTR ds:0xbb6fa348
  40df99:	test   bh,dh
  40df9b:	clc    
  40df9c:	push   esp
  40df9d:	test   ah,ah
  40df9f:	test   eax,0x61940f
  40dfa4:	dec    eax
  40dfa5:	dec    esp
  40dfa6:	fdivr  QWORD PTR [edx]
  40dfa8:	das    
  40dfa9:	pop    esp
  40dfaa:	dec    esp
  40dfab:	lods   eax,DWORD PTR ds:[esi]
  40dfac:	dec    esp
  40dfad:	sbb    BYTE PTR [eax-0x60],al
  40dfb0:	cmp    esp,DWORD PTR [ecx]
  40dfb2:	js     0x40df94
  40dfb4:	xlat   BYTE PTR ds:[ebx]
  40dfb5:	rol    BYTE PTR [esi+0x23e76e1d],1
  40dfbb:	fnstcw WORD PTR [esi+0x2b]
  40dfbe:	cdq    
  40dfbf:	call   0xc1c6:0x597c6dac
  40dfc6:	or     al,0x2f
  40dfc8:	nop    esi
  40dfcb:	cmp    al,0xe9
  40dfcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfce:	cdq    
  40dfcf:	fist   WORD PTR [edi-0x35]
  40dfd2:	lock cmc 
  40dfd4:	call   0x37c3d23
  40dfd9:	jnp    0x40df74
  40dfdb:	dec    ebp
  40dfdc:	rcr    DWORD PTR [esi+0x10],1
  40dfdf:	dec    edx
  40dfe0:	xchg   esi,eax
  40dfe1:	fst    QWORD PTR [edi]
  40dfe3:	mov    bh,0xb4
  40dfe5:	fstp   DWORD PTR [esi+0xf]
  40dfe8:	pop    esi
  40dfe9:	push   ecx
  40dfea:	lahf   
  40dfeb:	ss dec esp
  40dfed:	mov    ch,0xa2
  40dfef:	and    al,0x69
  40dff1:	adc    eax,0xdb45f6bc
  40dff6:	cmp    ebp,DWORD PTR [ecx]
  40dff8:	mov    dl,0xaa
  40dffa:	inc    ebx
  40dffb:	jle    0x40dfe5
  40dffd:	jmp    0x8916d53d
  40e002:	div    BYTE PTR [eax+0x33]
  40e005:	out    0x4c,eax
  40e007:	int    0x7c
  40e009:	lods   al,BYTE PTR ds:[esi]
  40e00a:	jbe    0x40dfe7
  40e00c:	retf   
  40e00d:	arpl   WORD PTR [esi+0x2d88b986],bp
  40e013:	inc    eax
  40e014:	repz mov cs,WORD PTR [esp+edx*8]
  40e018:	jl     0x40dfc7
  40e01a:	ret    0x105c
  40e01d:	popf   
  40e01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01f:	xchg   DWORD PTR [edx+0x5589332e],esp
  40e025:	rcr    BYTE PTR [eax],cl
  40e027:	shr    DWORD PTR [ebp+0x6c46621c],1
  40e02d:	das    
  40e02e:	loop   0x40e0a9
  40e030:	mov    edi,DWORD PTR [esi+ebp*8+0x1f]
  40e034:	mov    esi,0xc6886de
  40e039:	stos   BYTE PTR es:[edi],al
  40e03a:	(bad)  
  40e03b:	out    dx,al
  40e03c:	or     DWORD PTR [edi],edx
  40e03e:	jl     0x40dff2
  40e040:	adc    BYTE PTR ds:0x2b89b2d5,dl
  40e046:	push   es
  40e047:	sbb    ah,BYTE PTR [eax+esi*8-0xd]
  40e04b:	adc    cl,dh
  40e04d:	adc    DWORD PTR [esi],esp
  40e04f:	jbe    0x40e0cd
  40e051:	or     eax,0x63c0cc2f
  40e056:	outs   dx,BYTE PTR ds:[esi]
  40e057:	mov    ecx,0xc890c51
  40e05c:	out    0xdb,eax
  40e05e:	sti    
  40e05f:	out    dx,eax
  40e060:	sub    eax,0xeaeb6118
  40e065:	scas   eax,DWORD PTR es:[edi]
  40e066:	xchg   esi,eax
  40e067:	enter  0x94f0,0xa1
  40e06b:	xlat   BYTE PTR ds:[ebx]
  40e06c:	or     al,0xd2
  40e06e:	or     al,0x7f
  40e070:	push   edi
  40e071:	add    eax,0xdef6b1fd
  40e076:	shl    BYTE PTR [eax],0x8d
  40e079:	inc    esp
  40e07a:	out    dx,al
  40e07b:	mov    BYTE PTR [esi+0x27d9b14d],cl
  40e081:	sbb    edx,DWORD PTR [ebp+0x21]
  40e084:	dec    ecx
  40e085:	mov    bl,0x52
  40e087:	into   
  40e088:	addr16 jg 0x40e0e4
  40e08b:	pop    eax
  40e08c:	mov    ds:0x72d98d28,eax
  40e091:	jbe    0x40e106
  40e093:	repz mov edi,0xe8acb327
  40e099:	cmp    BYTE PTR [ebx+0x3455ccd8],cl
  40e09f:	aaa    
  40e0a0:	add    edi,DWORD PTR ds:0xd11de66b
  40e0a6:	and    BYTE PTR [edi+ecx*2-0x7ba8f016],bl
  40e0ad:	sbb    edi,edx
  40e0af:	xchg   ecx,eax
  40e0b0:	out    0x86,eax
  40e0b2:	mov    ds:0xfea74e1d,eax
  40e0b7:	jg     0x40e078
  40e0b9:	inc    edi
  40e0ba:	dec    DWORD PTR [ecx+edi*8-0x7d7b0753]
  40e0c1:	cmp    al,0x37
  40e0c3:	lahf   
  40e0c4:	nop
  40e0c5:	iret   
  40e0c6:	add    al,0xe1
  40e0c8:	aaa    
  40e0c9:	in     eax,0xe0
  40e0cb:	ret    0x4cf5
  40e0ce:	dec    edi
  40e0cf:	inc    edx
  40e0d0:	test   BYTE PTR [edx-0x136b3496],al
  40e0d6:	std    
  40e0d7:	bound  ebx,QWORD PTR [esi]
  40e0d9:	adc    DWORD PTR [edx-0x920ecba],eax
  40e0df:	clc    
  40e0e0:	xchg   ebx,eax
  40e0e1:	cwde   
  40e0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0e3:	dec    edx
  40e0e4:	fiadd  WORD PTR [eax+0x330e55f]
  40e0ea:	pop    ds
  40e0eb:	xchg   esp,eax
  40e0ec:	jnp    0x40e07c
  40e0ee:	xlat   BYTE PTR ds:[ebx]
  40e0ef:	mov    ch,0x6
  40e0f1:	push   edi
  40e0f2:	nop
  40e0f3:	pusha  
  40e0f4:	dec    edx
  40e0f5:	sbb    DWORD PTR [edi+0x52],ebx
  40e0f8:	fwait
  40e0f9:	and    BYTE PTR [eax+0x7531f2b4],ch
  40e0ff:	fisttp WORD PTR [eax]
  40e101:	rol    DWORD PTR [edi-0x6f],0x9f
  40e105:	data16 lahf 
  40e107:	repnz mov esp,esp
  40e10a:	out    0x23,al
  40e10c:	sbb    edi,ecx
  40e10e:	mov    ah,0x1f
  40e110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e111:	xor    ah,0xc0
  40e114:	push   ss
  40e115:	mov    al,ds:0xcbd4c4ec
  40e11a:	jp     0x40e0a0
  40e11c:	in     al,dx
  40e11d:	loope  0x40e182
  40e11f:	dec    ebp
  40e120:	dec    edx
  40e121:	ins    DWORD PTR es:[edi],dx
  40e122:	pop    eax
  40e123:	sub    BYTE PTR [ecx+0x79423cd2],ah
  40e129:	adc    eax,DWORD PTR [esi]
  40e12b:	repz pop edx
  40e12d:	test   BYTE PTR [eax-0x20003968],bh
  40e133:	enter  0x9c20,0xc9
  40e137:	aas    
  40e138:	cmp    bl,BYTE PTR [edi+0x7b520c0c]
  40e13e:	mov    esp,0xf97fb059
  40e143:	scas   eax,DWORD PTR es:[edi]
  40e144:	mov    ebx,0xacc4a759
  40e149:	and    eax,0x21b7c511
  40e14e:	int3   
  40e14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e150:	push   es
  40e151:	(bad)  
  40e152:	in     al,0xb1
  40e154:	addr16 inc edi
  40e156:	je     0x40e0e6
  40e158:	and    DWORD PTR [eax],ebx
  40e15a:	fldenv [ebp-0x7b]
  40e15d:	mov    dh,0x7c
  40e15f:	add    DWORD PTR [edi],edx
  40e161:	jl     0x40e1b5
  40e163:	mov    ebx,0xb85f7861
  40e168:	fisubr WORD PTR [ebx+ebx*4-0x5caad89d]
  40e16f:	and    eax,0xed4d47d9
  40e174:	test   al,0x29
  40e176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e177:	inc    esi
  40e178:	mov    ch,0xb2
  40e17a:	test   al,0xb8
  40e17c:	enter  0x9290,0x26
  40e180:	hlt    
  40e181:	(bad)  
  40e182:	mov    al,ds:0x16efaaf4
  40e187:	stos   DWORD PTR es:[edi],eax
  40e188:	mov    ds:0x8ab3303d,eax
  40e18d:	jmp    0xacc7:0xe4afee9c
  40e194:	inc    edi
  40e195:	data16 jl 0x40e150
  40e198:	adc    BYTE PTR [esi-0x74c53f00],0x72
  40e19f:	aad    0x8c
  40e1a1:	in     al,dx
  40e1a2:	xor    bh,ah
  40e1a4:	jecxz  0x40e210
  40e1a6:	mov    al,es:0x8878e617
  40e1ac:	xchg   edx,eax
  40e1ad:	lods   al,BYTE PTR ds:[esi]
  40e1ae:	out    dx,al
  40e1af:	bound  esp,QWORD PTR [edx+0x433d2b7f]
  40e1b5:	ja     0x40e1fc
  40e1b7:	out    dx,eax
  40e1b8:	test   eax,0x3e55be94
  40e1bd:	jmp    0xe538c25a
  40e1c2:	gs inc edi
  40e1c4:	xlat   BYTE PTR ds:[ebx]
  40e1c5:	leave  
  40e1c6:	lods   al,BYTE PTR gs:[esi]
  40e1c8:	imul   ebp,DWORD PTR [esi-0x2c],0xd
  40e1cc:	adc    eax,0x2e73bbd0
  40e1d1:	xor    DWORD PTR [eax-0x52],ecx
  40e1d4:	mov    bl,0x98
  40e1d6:	adc    eax,0xf7c38800
  40e1db:	pop    ebx
  40e1dc:	sbb    DWORD PTR [ecx+0x54],eax
  40e1df:	pop    eax
  40e1e0:	popa   
  40e1e1:	int    0xb8
  40e1e3:	stos   DWORD PTR es:[edi],eax
  40e1e4:	and    ah,BYTE PTR [eax-0x64]
  40e1e7:	push   0xffffffe5
  40e1e9:	push   ecx
  40e1ea:	stos   BYTE PTR es:[edi],al
  40e1eb:	repnz or DWORD PTR [ebx+0x61e8aa48],ecx
  40e1f2:	loope  0x40e1d9
  40e1f4:	pop    ebp
  40e1f5:	mov    eax,0x6558b472
  40e1fa:	adc    cl,BYTE PTR [eax-0x51]
  40e1fd:	aas    
  40e1fe:	fdiv   QWORD PTR [edi+0x655863a8]
  40e204:	loope  0x40e24f
  40e206:	loop   0x40e1b0
  40e208:	pop    edx
  40e209:	add    eax,0xf96c395f
  40e20e:	add    eax,0x2a75ddda
  40e213:	into   
  40e214:	rcl    DWORD PTR [esi],1
  40e216:	retf   0xae45
  40e219:	ins    BYTE PTR es:[edi],dx
  40e21a:	mov    WORD PTR [edx-0x74],es
  40e21d:	call   DWORD PTR [ebx]
  40e21f:	sbb    cl,BYTE PTR [edx]
  40e221:	push   0xd118d514
  40e226:	test   al,0xf7
  40e228:	loope  0x40e2a5
  40e22a:	push   ebx
  40e22b:	jnp    0x40e291
  40e22d:	lods   eax,DWORD PTR ds:[esi]
  40e22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e22f:	push   cs
  40e230:	cmp    BYTE PTR [esi+eiz*4],ch
  40e233:	sub    ecx,DWORD PTR [eax+eiz*4+0x1c7ee9f4]
  40e23a:	jo     0x40e26c
  40e23c:	fs stos DWORD PTR es:[edi],eax
  40e23e:	aas    
  40e23f:	push   0x8
  40e241:	push   DWORD PTR [eax+0x291800e6]
  40e247:	inc    esp
  40e248:	mov    BYTE PTR [esi-0x5f44b96f],al
  40e24e:	push   esp
  40e24f:	fnclex 
  40e251:	sub    BYTE PTR [ecx-0x40],al
  40e254:	cwde   
  40e255:	push   es
  40e256:	fild   DWORD PTR [eax-0x1c]
  40e259:	jbe    0x40e2bc
  40e25b:	push   ebx
  40e25c:	test   DWORD PTR [eax+0xc78a85f],edi
  40e262:	and    edx,DWORD PTR [ebx+0x60]
  40e265:	xchg   ebx,eax
  40e266:	add    al,BYTE PTR [ecx]
  40e268:	jnp    0x40e23b
  40e26a:	sbb    DWORD PTR [eax-0x175bd6fa],0xe
  40e271:	imul   esi,DWORD PTR [esp+edi*1-0x59],0xffffff9c
  40e276:	xchg   DWORD PTR [eax-0x717d261a],edi
  40e27c:	retf   0x1a95
  40e27f:	inc    esp
  40e280:	xor    esp,eax
  40e282:	dec    esp
  40e283:	icebp  
  40e284:	pop    ss
  40e285:	frstor [ecx+0x2b4b5d94]
  40e28b:	in     eax,dx
  40e28c:	imul   BYTE PTR [ebp-0x3d]
  40e28f:	jbe    0x40e23e
  40e291:	std    
  40e292:	mov    ecx,0x9e6f147b
  40e297:	inc    DWORD PTR [esi]
  40e299:	jne    0x40e274
  40e29b:	shr    DWORD PTR [ecx+0x64ab82e2],0xc3
  40e2a2:	lds    esp,FWORD PTR [eax]
  40e2a4:	jno    0x40e2ab
  40e2a6:	and    BYTE PTR [ecx],bh
  40e2a8:	mov    DWORD PTR [ecx-0x12],esi
  40e2ab:	sub    eax,0x9beaedc3
  40e2b0:	dec    esp
  40e2b1:	xor    BYTE PTR [eax-0x26f3fd24],0x9c
  40e2b8:	inc    ebp
  40e2b9:	inc    ebx
  40e2ba:	sub    edx,DWORD PTR ss:[esi-0x32334264]
  40e2c1:	inc    edi
  40e2c2:	das    
  40e2c3:	add    al,0x54
  40e2c5:	xor    al,0x6e
  40e2c7:	mov    bh,0xe2
  40e2c9:	xor    BYTE PTR [ebx],0x4d
  40e2cc:	sbb    ebp,DWORD PTR [esi-0x6829713d]
  40e2d2:	aas    
  40e2d3:	xchg   ebx,eax
  40e2d4:	dec    edx
  40e2d5:	imul   ebp,DWORD PTR [ebx],0xffffffee
  40e2d8:	ror    ecx,cl
  40e2da:	or     BYTE PTR [edi-0x1e],bh
  40e2dd:	rcr    BYTE PTR [esi+0x215302a],cl
  40e2e3:	jle    0x40e2bc
  40e2e5:	fmul   QWORD PTR [ebx+edi*2-0x23]
  40e2e9:	ret    0x46ec
  40e2ec:	mov    dh,bh
  40e2ee:	mov    eax,0xcfb5a5d5
  40e2f3:	jle    0x40e36e
  40e2f5:	cwde   
  40e2f6:	mov    ch,0xba
  40e2f8:	sbb    bl,bh
  40e2fa:	jecxz  0x40e288
  40e2fc:	and    dh,bh
  40e2fe:	inc    ecx
  40e2ff:	xor    BYTE PTR [ebp-0x2d5c0dd8],bh
  40e305:	test   BYTE PTR [ecx],0x91
  40e308:	(bad)  
  40e309:	sbb    eax,0x3dac31fa
  40e30e:	sbb    BYTE PTR [ebx],dl
  40e310:	pusha  
  40e311:	xchg   esi,eax
  40e312:	sahf   
  40e313:	mov    bh,0xbe
  40e315:	sar    dl,1
  40e317:	push   ebx
  40e318:	push   ds
  40e319:	pop    ebp
  40e31a:	jge    0x40e2c3
  40e31c:	(bad)  
  40e31d:	push   esi
  40e31e:	and    bl,BYTE PTR [ebp-0x4862a568]
  40e324:	sbb    dl,BYTE PTR [esi]
  40e326:	xchg   edi,eax
  40e327:	imul   edx,DWORD PTR ds:0x817174df,0x30
  40e32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e32f:	in     eax,0x2b
  40e331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e332:	iret   
  40e333:	dec    edi
  40e334:	pop    ebp
  40e335:	add    al,0x26
  40e337:	out    0xbb,ax
  40e33a:	pop    ecx
  40e33b:	xchg   ebx,eax
  40e33c:	mov    ebp,0xb0b41781
  40e341:	mov    ah,0xe1
  40e343:	bound  eax,QWORD PTR [edx-0x6f2e604d]
  40e349:	clc    
  40e34a:	outs   dx,BYTE PTR ds:[esi]
  40e34b:	xchg   BYTE PTR [edi+0x9],cl
  40e34e:	jge    0x40e344
  40e350:	mov    ecx,0xcaafca59
  40e355:	test   al,0x56
  40e357:	add    esi,DWORD PTR [eax+0xf]
  40e35a:	pop    esi
  40e35b:	jl     0x40e372
  40e35d:	popf   
  40e35e:	and    BYTE PTR [eax],0x95
  40e361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e362:	fstp   QWORD PTR [edx-0x80]
  40e365:	push   ecx
  40e366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e367:	adc    al,0x6e
  40e369:	stc    
  40e36a:	mov    ebx,0x140ae707
  40e36f:	icebp  
  40e370:	and    BYTE PTR [ebx+0x49555abb],bl
  40e376:	or     DWORD PTR [ebx+edi*8+0x14173501],ebx
  40e37d:	jmp    0x48f75275
  40e382:	inc    bl
  40e384:	push   es
  40e385:	xor    BYTE PTR [edi-0x1d2c2cc],0x50
  40e38c:	dec    esp
  40e38d:	mov    ebx,0x84d9eee1
  40e392:	ins    DWORD PTR es:[edi],dx
  40e393:	into   
  40e394:	cld    
  40e395:	lds    esi,FWORD PTR [ebx-0x4d]
  40e398:	ret    0xd2bf
  40e39b:	jle    0x40e3ee
  40e39d:	dec    edx
  40e39e:	stos   DWORD PTR es:[edi],eax
  40e39f:	adc    BYTE PTR ds:0xcec1d750,ah
  40e3a5:	sbb    DWORD PTR [eax],edi
  40e3a7:	retf   0x7345
  40e3aa:	sbb    al,0x76
  40e3ac:	jns    0x40e370
  40e3ae:	mov    cl,0x11
  40e3b0:	not    DWORD PTR ds:0x5273b7a
  40e3b6:	mov    ds:0xd4efb7fc,al
  40e3bb:	nop
  40e3bc:	dec    ebx
  40e3bd:	aam    0xf
  40e3bf:	jp     0x40e3ee
  40e3c1:	adc    eax,0x5f899dec
  40e3c6:	out    0x37,al
  40e3c8:	jmp    0xb4e62622
  40e3cd:	mov    eax,ds:0x6d3d931e
  40e3d2:	mov    cl,0xfe
  40e3d4:	daa    
  40e3d5:	push   es
  40e3d6:	and    al,0x2e
  40e3d8:	add    DWORD PTR [ecx],edi
  40e3da:	mov    ch,0x78
  40e3dc:	mov    DWORD PTR [edi+edi*1-0x16],ecx
  40e3e0:	add    dl,BYTE PTR [ecx+ecx*8]
  40e3e3:	push   0xcd7440fc
  40e3e8:	arpl   si,dx
  40e3ea:	mov    DWORD PTR [esi+0x47],edi
  40e3ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ee:	loopne 0x40e37f
  40e3f0:	cmp    DWORD PTR [ebx],ecx
  40e3f2:	dec    esi
  40e3f3:	cmp    al,0x8c
  40e3f5:	dec    esp
  40e3f6:	pop    ecx
  40e3f7:	adc    DWORD PTR [ebp+esi*2-0x7f],ebp
  40e3fb:	jo     0x40e403
  40e3fd:	cld    
  40e3fe:	and    edx,DWORD PTR [ebp-0xe]
  40e401:	sbb    dl,BYTE PTR [edx+0x41]
  40e404:	sbb    dh,BYTE PTR [esi]
  40e406:	mov    DWORD PTR [edi],esp
  40e408:	cmp    ah,dl
  40e40a:	push   edi
  40e40b:	dec    edi
  40e40c:	pop    ds
  40e40d:	push   esp
  40e40e:	jb     0x40e435
  40e410:	int3   
  40e411:	clc    
  40e412:	(bad)  
  40e413:	jmp    0x40e413
  40e415:	shl    BYTE PTR ds:[ecx+0x7aa21887],1
  40e41c:	sbb    cl,bl
  40e41e:	sbb    BYTE PTR [esp+ebp*2],ah
  40e421:	sbb    eax,0x7df9273
  40e426:	jecxz  0x40e42d
  40e428:	pop    es
  40e429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42a:	adc    bh,BYTE PTR [ebx+0x2c8f8dd1]
  40e430:	fwait
  40e431:	push   0xe
  40e433:	xchg   esp,eax
  40e434:	push   ss
  40e435:	(bad)  
  40e436:	and    edi,DWORD PTR [ebx-0x1]
  40e439:	in     eax,0x1c
  40e43b:	adc    BYTE PTR [esi+0x23],bh
  40e43e:	popa   
  40e43f:	mov    bl,0x24
  40e441:	icebp  
  40e442:	test   BYTE PTR ds:0x1a781e70,0xc6
  40e449:	sbb    edx,DWORD PTR [eax-0x307d428c]
  40e44f:	pop    ebp
  40e450:	adc    eax,0x8dfa6e52
  40e455:	sub    eax,0x532a0d48
  40e45a:	scas   eax,DWORD PTR es:[edi]
  40e45b:	addr16 mov bh,0x8c
  40e45e:	stos   BYTE PTR es:[edi],al
  40e45f:	(bad)  
  40e460:	xchg   esi,eax
  40e461:	out    dx,eax
  40e462:	mov    DWORD PTR [esi+0x23],esi
  40e465:	jnp    0x40e48a
  40e467:	or     eax,0x2eff4f11
  40e46c:	aas    
  40e46d:	mov    gs,WORD PTR [eax+ecx*1-0x3bc178a4]
  40e474:	cmp    bh,0x4f
  40e477:	xchg   edx,eax
  40e478:	push   ebx
  40e479:	(bad)  
  40e47a:	arpl   WORD PTR [edi+0x9],dx
  40e47d:	test   al,0xae
  40e47f:	repnz inc ebp
  40e481:	in     al,0xd9
  40e483:	ja     0x40e4d8
  40e485:	mov    ch,0x86
  40e487:	sub    al,0x32
  40e489:	clc    
  40e48a:	and    BYTE PTR [ebx+ecx*8-0x5],ah
  40e48e:	js     0x40e4c3
  40e490:	jge    0x40e41b
  40e492:	popf   
  40e493:	inc    ecx
  40e494:	sbb    DWORD PTR [edi+0x4c],edi
  40e497:	in     al,dx
  40e498:	into   
  40e499:	push   esi
  40e49a:	jno    0x40e473
  40e49c:	in     eax,0x9a
  40e49e:	sbb    BYTE PTR [edx-0x6f672ac5],0x45
  40e4a5:	mov    ebp,0x1f875649
  40e4aa:	lds    ebx,FWORD PTR [edi-0x13]
  40e4ad:	fsub   DWORD PTR [edi+0x2e]
  40e4b0:	pop    DWORD PTR [eax-0x3da95d92]
  40e4b6:	or     DWORD PTR [esi],0xc4a56b75
  40e4bc:	mov    ebx,0xda79ea9c
  40e4c1:	mov    ds:0xe62840e7,eax
  40e4c6:	xor    al,0xf7
  40e4c8:	cdq    
  40e4c9:	(bad)  
  40e4ca:	mov    ds:0xa1112c95,al
  40e4cf:	test   eax,0x74fcefe8
  40e4d4:	xchg   edx,eax
  40e4d5:	ss stos BYTE PTR es:[edi],al
  40e4d7:	push   0x906295bd
  40e4dc:	mov    ebp,0x65f8f762
  40e4e1:	aaa    
  40e4e2:	or     BYTE PTR [eax-0x2],0x88
  40e4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4e7:	out    dx,eax
  40e4e8:	jecxz  0x40e50c
  40e4ea:	adc    ah,BYTE PTR [edx-0x5f]
  40e4ed:	(bad)  
  40e4ee:	stc    
  40e4ef:	push   eax
  40e4f0:	dec    esi
  40e4f1:	mov    dh,0x18
  40e4f3:	fs cdq 
  40e4f5:	sub    eax,0x86f76bae
  40e4fa:	aas    
  40e4fb:	add    eax,DWORD PTR [edi-0x19]
  40e4fe:	repz mov ah,0x98
  40e501:	enter  0x5643,0xbf
  40e505:	pop    edi
  40e506:	aas    
  40e507:	add    al,0x67
  40e509:	ins    BYTE PTR es:[edi],dx
  40e50a:	or     ecx,ecx
  40e50c:	add    al,cl
  40e50e:	mov    bh,0xe
  40e510:	scas   al,BYTE PTR es:[edi]
  40e511:	add    DWORD PTR [esi-0x389716e9],ebp
  40e517:	sbb    BYTE PTR [ebx-0x1e9015cc],bl
  40e51d:	in     al,dx
  40e51e:	(bad)  
  40e51f:	push   cs
  40e520:	push   ss
  40e521:	push   ebx
  40e522:	iret   
  40e523:	ret    
  40e524:	mov    es,WORD PTR [edx]
  40e526:	call   0x78ec21cd
  40e52b:	jl     0x40e51a
  40e52d:	jmp    0x40e4e2
  40e52f:	pop    ss
  40e530:	and    BYTE PTR [ebx+0x1da4cb3d],dl
  40e536:	loope  0x40e560
  40e538:	and    bh,BYTE PTR [esi]
  40e53a:	pusha  
  40e53b:	jmp    0xb6b:0xdfedffb5
  40e542:	mov    al,0xe6
  40e544:	test   BYTE PTR [ecx-0x7935ad01],0xec
  40e54b:	jnp    0x40e53c
  40e54d:	test   esi,edi
  40e54f:	bound  esp,QWORD PTR [esp+ebx*1+0x12]
  40e553:	pop    es
  40e554:	shl    BYTE PTR [ebp-0x421e4eb6],1
  40e55a:	clc    
  40e55b:	popa   
  40e55c:	aad    0x4a
  40e55e:	daa    
  40e55f:	stos   DWORD PTR es:[edi],eax
  40e560:	xlat   BYTE PTR ds:[ebx]
  40e561:	retf   0x8a8
  40e564:	mov    bh,0x94
  40e566:	fwait
  40e567:	and    DWORD PTR [edi],esi
  40e569:	lahf   
  40e56a:	and    eax,0xdcc8be07
  40e56f:	cmp    ch,BYTE PTR [edx]
  40e571:	sti    
  40e572:	popf   
  40e573:	mov    cl,0x86
  40e575:	add    ch,BYTE PTR [esi-0x2]
  40e578:	adc    DWORD PTR [ebx-0x5170fc04],eax
  40e57e:	adc    BYTE PTR [edi],cl
  40e580:	ja     0x40e581
  40e582:	push   edi
  40e583:	add    esi,DWORD PTR [ebp+0x68f80a06]
  40e589:	cmp    eax,0xff2c3c12
  40e58e:	pop    es
  40e58f:	add    esp,DWORD PTR [ebx+ebp*4+0x26c8b927]
  40e596:	mov    ah,0x18
  40e598:	sub    ah,BYTE PTR [edi]
  40e59a:	out    dx,eax
  40e59b:	inc    ebp
  40e59c:	dec    esp
  40e59d:	dec    ebp
  40e59e:	mov    esp,esp
  40e5a0:	scas   eax,DWORD PTR es:[edi]
  40e5a1:	mov    ds:0x118a30ee,al
  40e5a6:	out    dx,eax
  40e5a7:	mov    eax,0xe6246de9
  40e5ac:	mov    ah,0x8c
  40e5ae:	jmp    0x5830716d
  40e5b3:	dec    edi
  40e5b4:	fld    DWORD PTR [edi+0x70]
  40e5b7:	fs push edx
  40e5b9:	or     ah,BYTE PTR [ebx+0x4e]
  40e5bc:	stos   DWORD PTR es:[edi],eax
  40e5bd:	sti    
  40e5be:	mov    ah,0x7e
  40e5c0:	out    dx,eax
  40e5c1:	mov    ecx,0xba49ede5
  40e5c6:	cmp    eax,0xc086447d
  40e5cb:	(bad)  
  40e5cc:	or     al,0x1a
  40e5ce:	out    0x84,eax
  40e5d0:	mov    eax,ds:0x94add25a
  40e5d5:	add    eax,0xf800531c
  40e5da:	xchg   ebp,eax
  40e5db:	cmp    BYTE PTR [edx],dh
  40e5dd:	ret    
  40e5de:	jne    0x40e5ee
  40e5e0:	gs (bad) 
  40e5e2:	cld    
  40e5e3:	xor    al,0xa1
  40e5e5:	out    dx,eax
  40e5e6:	(bad)  
  40e5e7:	jmp    0x6197:0x16b25d5a
  40e5ee:	idiv   BYTE PTR [edx+0x22]
  40e5f1:	outs   dx,BYTE PTR ds:[esi]
  40e5f2:	fisub  WORD PTR [edx+0x31]
  40e5f5:	daa    
  40e5f6:	not    ch
  40e5f8:	popa   
  40e5f9:	xchg   BYTE PTR [edi+0xf],ch
  40e5fc:	xor    ebp,DWORD PTR [ebx-0x61]
  40e5ff:	mov    edx,DWORD PTR [ebx+0x50]
  40e602:	sbb    al,0xf3
  40e604:	add    esi,ebx
  40e606:	xor    eax,0x144b8521
  40e60b:	jnp    0x40e5b4
  40e60d:	push   ebx
  40e60e:	test   DWORD PTR [edi],ebp
  40e610:	jmp    0x39ec:0xf4b7ff80
  40e617:	fisubr WORD PTR [ecx]
  40e619:	sub    ecx,ebp
  40e61b:	out    dx,al
  40e61c:	inc    ebp
  40e61d:	jnp    0x40e673
  40e61f:	adc    al,0x5a
  40e621:	std    
  40e622:	xchg   esp,eax
  40e623:	dec    ebx
  40e624:	adc    eax,0x5ec6e720
  40e629:	mov    eax,ds:0x9390fd42
  40e62e:	and    bh,ch
  40e630:	fwait
  40e631:	xchg   ebp,eax
  40e632:	pop    ecx
  40e633:	sbb    dl,BYTE PTR [ebx]
  40e635:	lahf   
  40e636:	ds mov ah,0x90
  40e639:	mov    eax,0x4511f57a
  40e63e:	add    DWORD PTR [ecx+ebx*1-0x48],edi
  40e642:	lds    esi,FWORD PTR [esi-0x48c8ac50]
  40e648:	popa   
  40e649:	cmp    cl,BYTE PTR [esi+0x40]
  40e64c:	and    DWORD PTR [edi+edi*2-0x4178c9ee],esi
  40e653:	mov    esp,DWORD PTR [esi]
  40e655:	xchg   ebx,eax
  40e656:	fsubr  QWORD PTR [edx-0x1afa2a39]
  40e65c:	mov    esp,0xb30d0ba8
  40e661:	pop    esp
  40e662:	std    
  40e663:	mov    esi,0xca29d1e3
  40e668:	mov    dh,0x8c
  40e66a:	mov    ecx,0x86de25c8
  40e66f:	lea    eax,[eax+0x41c02905]
  40e675:	inc    ecx
  40e676:	dec    edx
  40e677:	mov    BYTE PTR [edi],bl
  40e679:	add    dl,BYTE PTR [esi+0x34]
  40e67c:	in     al,dx
  40e67d:	jnp    0x40e6a5
  40e67f:	push   ds
  40e680:	mov    DWORD PTR [ecx+0x10e7ad37],esp
  40e686:	jb     0x40e6a3
  40e688:	aas    
  40e689:	mov    cl,0x2e
  40e68b:	sub    ebx,DWORD PTR [edi+0x443eb53e]
  40e691:	daa    
  40e692:	sti    
  40e693:	inc    edi
  40e694:	addr16 jg 0x40e689
  40e697:	cmp    DWORD PTR [esi-0x26],ebx
  40e69a:	in     eax,dx
  40e69b:	jg     0x40e6a3
  40e69d:	jnp    0x40e6a3
  40e69f:	(bad)
  40e6a2:	push   es
  40e6a3:	push   esp
  40e6a4:	lods   al,BYTE PTR ds:[esi]
  40e6a5:	sti    
  40e6a6:	inc    edi
  40e6a7:	cmc    
  40e6a8:	mov    eax,DWORD PTR [ebx+0xb113d57]
  40e6ae:	dec    eax
  40e6af:	sbb    edx,DWORD PTR gs:[ebp-0x70]
  40e6b3:	scas   eax,DWORD PTR es:[edi]
  40e6b4:	dec    eax
  40e6b5:	push   0x25
  40e6b7:	xchg   DWORD PTR [eax-0x20d5d2d4],eax
  40e6bd:	stc    
  40e6be:	dec    edi
  40e6bf:	fld    TBYTE PTR [ebx+edx*8-0x4cdbe164]
  40e6c6:	fist   WORD PTR [ebx+0x16]
  40e6c9:	dec    edx
  40e6ca:	push   edi
  40e6cb:	pusha  
  40e6cc:	das    
  40e6cd:	std    
  40e6ce:	(bad)  
  40e6cf:	jmp    0x40e6cb
  40e6d1:	inc    esp
  40e6d2:	mov    ds:0x50100cec,eax
  40e6d7:	imul   ebp,DWORD PTR [ecx-0x3d],0xffffff9f
  40e6db:	sbb    eax,0x630cea91
  40e6e0:	mov    ds:0xada6ce27,eax
  40e6e5:	loope  0x40e6a5
  40e6e7:	and    esi,ebp
  40e6e9:	push   es
  40e6ea:	push   esp
  40e6eb:	jno    0x40e6ea
  40e6ed:	ror    BYTE PTR [edx],1
  40e6ef:	dec    ecx
  40e6f0:	adc    BYTE PTR [esi],ch
  40e6f2:	addr16 enter 0x94a9,0x4d
  40e6f7:	imul   esi,DWORD PTR [ebx],0x887f220e
  40e6fd:	rcr    dl,0x4b
  40e700:	inc    ebp
  40e701:	les    esp,FWORD PTR [edi+edi*4-0x64ffb7f1]
  40e708:	ja     0x40e753
  40e70a:	cmp    BYTE PTR [edi+0x1c],0xd0
  40e70e:	inc    edx
  40e70f:	add    eax,0x19b0d16e
  40e714:	cmp    eax,0xe9d155c
  40e719:	sbb    esi,DWORD PTR [bp+si-0x28]
  40e71d:	test   DWORD PTR [eax+esi*1-0x6e],ebp
  40e721:	dec    esp
  40e722:	data16 xchg bh,al
  40e725:	fs push cs
  40e727:	icebp  
  40e728:	out    0xc,eax
  40e72a:	fs fs pop eax
  40e72d:	jne    0x40e788
  40e72f:	push   cs
  40e730:	mov    BYTE PTR [edx],cl
  40e732:	sbb    DWORD PTR [esp+ebx*1],ebp
  40e735:	xor    al,0x57
  40e737:	jnp    0x40e79b
  40e739:	dec    edi
  40e73a:	cld    
  40e73b:	or     BYTE PTR [ebp-0x1845ecc9],dh
  40e741:	stc    
  40e742:	jmp    0x17c0b85e
  40e747:	mov    esi,0xb332ca0b
  40e74c:	cmp    BYTE PTR [ecx-0x30],dh
  40e74f:	ficom  WORD PTR [edx]
  40e751:	rol    BYTE PTR [esi-0x25671ed3],0xb4
  40e758:	neg    DWORD PTR [ecx-0xa]
  40e75b:	adc    eax,0xe19c9dd3
  40e760:	shl    DWORD PTR [eax-0x327a1ed3],cl
  40e766:	xchg   esi,eax
  40e767:	test   BYTE PTR [eax+0xf1cb0f8],dh
  40e76d:	aam    0x7d
  40e76f:	mov    al,ds:0xd211421c
  40e774:	(bad)  
  40e775:	(bad)  
  40e776:	push   edx
  40e777:	inc    esp
  40e778:	inc    ebx
  40e779:	sbb    DWORD PTR [edi-0x2d8898f6],edx
  40e77f:	or     ch,dh
  40e781:	fst    QWORD PTR ds:0xc62843ae
  40e787:	mov    DWORD PTR [ecx+edi*4-0x303ea86e],edx
  40e78e:	xlat   BYTE PTR ds:[ebx]
  40e78f:	icebp  
  40e790:	daa    
  40e791:	pcmpeqw mm2,QWORD PTR es:[edi+0xd]
  40e796:	shr    BYTE PTR [eax],0xb8
  40e799:	bound  eax,QWORD PTR [edi]
  40e79b:	cli    
  40e79c:	inc    ebx
  40e79d:	hlt    
  40e79e:	lds    esp,FWORD PTR [ebx-0x2eced9e1]
  40e7a4:	or     BYTE PTR [edi+0x68],ah
  40e7a7:	gs mov eax,0x1d9045a1
  40e7ad:	js     0x40e7d0
  40e7af:	add    ebp,ecx
  40e7b1:	leave  
  40e7b2:	cwde   
  40e7b3:	push   ecx
  40e7b4:	sub    DWORD PTR [ecx-0x37444d76],eax
  40e7ba:	pop    ss
  40e7bb:	icebp  
  40e7bc:	out    0x5d,eax
  40e7be:	dec    edx
  40e7bf:	int3   
  40e7c0:	call   FWORD PTR [ebx]
  40e7c2:	jle    0x40e748
  40e7c4:	sub    dh,BYTE PTR [esi+0x1bac8c63]
  40e7ca:	mov    cl,0xb7
  40e7cc:	adc    BYTE PTR [esi-0x3c5a276c],ah
  40e7d2:	mov    ebx,0x5ba961ac
  40e7d7:	mov    BYTE PTR ds:0x2c9de954,0x1d
  40e7de:	cmp    eax,0xd35ba135
  40e7e3:	test   DWORD PTR [ebx],edi
  40e7e5:	fld    DWORD PTR [edi]
  40e7e7:	loopne 0x40e792
  40e7e9:	pop    ebp
  40e7ea:	out    dx,al
  40e7eb:	jl     0x40e83e
  40e7ed:	xchg   ebx,eax
  40e7ee:	(bad)  
  40e7ef:	mov    ah,BYTE PTR [ecx-0xd]
  40e7f2:	je     0x40e810
  40e7f4:	inc    ebx
  40e7f5:	add    cl,BYTE PTR [edi+ebp*8]
  40e7f8:	add    al,0x66
  40e7fa:	repz pushf 
  40e7fc:	test   eax,0x5484f940
  40e801:	pop    esp
  40e802:	punpcklbw mm5,DWORD PTR [ecx+0x7c0a4ed]
  40e809:	retf   
  40e80a:	pop    ebx
  40e80b:	aad    0xc9
  40e80d:	add    BYTE PTR [ebp+0x64],bh
  40e810:	push   edx
  40e811:	sbb    DWORD PTR [ebp+0x36],edx
  40e814:	xchg   ecx,eax
  40e815:	dec    eax
  40e816:	in     al,0x31
  40e818:	add    ebx,0x60d2cbfa
  40e81e:	and    edi,ebp
  40e820:	sbb    al,0xb
  40e822:	dec    eax
  40e823:	gs mov esi,0xb99e82a0
  40e829:	mov    esi,DWORD PTR [edx+0x7ce4ce3b]
  40e82f:	imul   esp,ebp,0xffffffc6
  40e832:	shl    dh,0x58
  40e835:	jns    0x40e8b4
  40e837:	imul   esp,ecx,0xffffffca
  40e83a:	ja     0x40e863
  40e83c:	pushf  
  40e83d:	jnp    0x40e847
  40e83f:	int    0x4b
  40e841:	(bad)
  40e845:	xchg   DWORD PTR ds:0x6c059cd7,eax
  40e84b:	or     eax,0x6415edfc
  40e850:	xor    dh,bl
  40e852:	jp     0x40e844
  40e854:	jl     0x40e7f3
  40e856:	popa   
  40e857:	pop    ds
  40e858:	sbb    DWORD PTR [esi],0xbd47c729
  40e85e:	test   eax,0x1243c26c
  40e863:	rcl    DWORD PTR [edi-0x1960c0da],1
  40e869:	shl    DWORD PTR [eax-0x78],0x67
  40e86d:	mov    BYTE PTR [eax+0x4efe644b],dh
  40e873:	ja     0x40e846
  40e875:	or     esi,ebp
  40e877:	xchg   edi,eax
  40e878:	aas    
  40e879:	xchg   DWORD PTR [edx+0x2ca14854],ecx
  40e87f:	mov    dl,BYTE PTR [edx-0x747e1d09]
  40e885:	es dec ebp
  40e887:	push   ss
  40e888:	pop    esi
  40e889:	loopne 0x40e85f
  40e88b:	rcl    DWORD PTR ds:0x332fd476,1
  40e891:	push   ebp
  40e892:	in     al,0x97
  40e894:	pop    es
  40e895:	mov    cl,0xdc
  40e897:	dec    eax
  40e898:	push   ecx
  40e899:	ins    BYTE PTR es:[edi],dx
  40e89a:	out    0x18,eax
  40e89c:	push   ebx
  40e89d:	sub    BYTE PTR [ebp-0x5d],dl
  40e8a0:	jle    0x40e82e
  40e8a2:	test   eax,0xe079e3e7
  40e8a7:	and    BYTE PTR [eax-0x22],bl
  40e8aa:	ds push edi
  40e8ac:	int3   
  40e8ad:	inc    ebx
  40e8ae:	add    al,0x62
  40e8b0:	aam    0x6b
  40e8b2:	pop    ebx
  40e8b3:	icebp  
  40e8b4:	cmp    ch,BYTE PTR [eax+edx*4-0x5000b8f9]
  40e8bb:	ins    DWORD PTR es:[edi],dx
  40e8bc:	inc    eax
  40e8bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8be:	dec    DWORD PTR [ebx-0x77]
  40e8c1:	jae    0x40e8e6
  40e8c3:	cld    
  40e8c4:	push   esp
  40e8c5:	mov    eax,ds:0x3a0b48cd
  40e8ca:	repz pop ebx
  40e8cc:	inc    ebx
  40e8cd:	not    BYTE PTR [ebx+0x49]
  40e8d0:	mov    ecx,0x851eb620
  40e8d5:	push   0xf61d3d61
  40e8da:	cmp    al,0xd6
  40e8dc:	jmp    0x2704:0xc7887dc7
  40e8e3:	push   cs
  40e8e4:	pop    ecx
  40e8e5:	rcl    DWORD PTR [ebx+0x1f],1
  40e8e8:	div    DWORD PTR [esi+0x6d]
  40e8eb:	cmp    dl,BYTE PTR [ebx+0x40d9d6d3]
  40e8f1:	sbb    BYTE PTR [ebx],bh
  40e8f3:	mov    edi,0x3ed245a4
  40e8f8:	popa   
  40e8f9:	and    DWORD PTR ds:0x2abb9058,esp
  40e8ff:	(bad)  
  40e900:	xor    ah,BYTE PTR [edi+ebx*4]
  40e903:	pushf  
  40e904:	add    eax,0xe985a49e
  40e909:	push   ebx
  40e90a:	push   eax
  40e90b:	out    dx,al
  40e90c:	jns    0x40e982
  40e90e:	fisub  WORD PTR [esi-0x4]
  40e911:	pop    edi
  40e912:	pop    ebp
  40e913:	cs fmulp st(5),st
  40e916:	or     DWORD PTR [ecx-0x11],ebx
  40e919:	cmc    
  40e91a:	bound  edx,QWORD PTR [edx]
  40e91c:	or     eax,0xab0db503
  40e921:	jl     0x40e901
  40e923:	repz lahf 
  40e925:	rcr    BYTE PTR [ebp+ecx*8+0x486c34f7],0x92
  40e92d:	ja     0x40e8fb
  40e92f:	pop    edx
  40e930:	or     eax,0xd6c0230c
  40e935:	fwait
  40e936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e937:	add    eax,0x94d3ada1
  40e93c:	adc    esp,ebx
  40e93e:	and    al,0xaf
  40e940:	ins    DWORD PTR es:[edi],dx
  40e941:	xlat   BYTE PTR ds:[ebx]
  40e942:	lahf   
  40e943:	repz mov ah,0x29
  40e946:	ins    BYTE PTR es:[edi],dx
  40e947:	xor    al,0xc0
  40e949:	repz jge 0x40e95b
  40e94c:	push   ss
  40e94d:	out    0x5b,eax
  40e94f:	lock jbe 0x40e980
  40e952:	cmp    edx,DWORD PTR [edx+ebp*4]
  40e955:	out    dx,al
  40e956:	jb     0x40e8fb
  40e958:	out    dx,eax
  40e959:	test   ecx,ebx
  40e95b:	popf   
  40e95c:	mov    eax,DWORD PTR [esi]
  40e95e:	mov    al,0x0
  40e960:	push   0xffffffa1
  40e962:	dec    ecx
  40e963:	cs inc edx
  40e965:	mov    al,BYTE PTR ss:[esi]
  40e968:	mov    ds:0x44c42526,al
  40e96d:	neg    dh
  40e96f:	mov    eax,ds:0xa55f1ab7
  40e974:	sbb    bl,dl
  40e976:	adc    al,0x2f
  40e978:	push   es
  40e979:	xor    al,0x8a
  40e97b:	dec    ecx
  40e97c:	pand   mm2,QWORD PTR [ecx-0x27e51947]
  40e983:	test   eax,0xa33c137d
  40e988:	inc    edi
  40e989:	lods   al,BYTE PTR ds:[esi]
  40e98a:	add    edx,0xf953e571
  40e990:	hlt    
  40e991:	add    ah,ah
  40e993:	cmp    DWORD PTR [ecx-0x5f790c8b],ecx
  40e999:	pop    esi
  40e99a:	outs   dx,DWORD PTR ds:[esi]
  40e99b:	xor    dl,BYTE PTR [ebx]
  40e99d:	imul   edx,DWORD PTR [eax-0x7ee5388d],0xffffffee
  40e9a4:	jg     0x40e957
  40e9a6:	mov    ebx,0xc9aa619f
  40e9ab:	mov    eax,DWORD PTR [esi+0x591e32aa]
  40e9b1:	push   eax
  40e9b2:	or     edx,esp
  40e9b4:	(bad)  
  40e9b5:	call   0x20cf:0x3f0bd8d0
  40e9bc:	dec    eax
  40e9bd:	shr    BYTE PTR [eax+esi*4],1
  40e9c0:	sbb    al,0x23
  40e9c2:	mov    dx,0x933c
  40e9c6:	aas    
  40e9c7:	pop    edx
  40e9c8:	jns    0x40e9a7
  40e9ca:	repnz add esi,DWORD PTR [esi]
  40e9cd:	in     al,dx
  40e9ce:	in     al,0x15
  40e9d0:	mov    edx,0x1ccd025c
  40e9d5:	cdq    
  40e9d6:	icebp  
  40e9d7:	in     eax,dx
  40e9d8:	sub    al,0x12
  40e9da:	pop    edx
  40e9db:	cdq    
  40e9dc:	or     DWORD PTR [edi+0x5c],ebx
  40e9df:	iret   
  40e9e0:	pop    ebp
  40e9e1:	ret    
  40e9e2:	scas   eax,DWORD PTR es:[edi]
  40e9e3:	bound  edx,QWORD PTR [edx]
  40e9e5:	ret    0x7ff6
  40e9e8:	imul   ebx,ebp,0xffffffeb
  40e9eb:	and    BYTE PTR [ebx-0x44],0x4a
  40e9ef:	push   ebp
  40e9f0:	fdivr  DWORD PTR [esi-0x7d2e555b]
  40e9f6:	call   0x8dbb0c7
  40e9fb:	xor    cl,BYTE PTR es:[eax]
  40e9fe:	into   
  40e9ff:	sahf   
  40ea00:	ror    BYTE PTR [edx+ebx*2],0x25
  40ea04:	jecxz  0x40ea62
  40ea06:	js     0x40ea2e
  40ea08:	and    BYTE PTR [esi-0x3d28ae34],0x28
  40ea0f:	call   0xab361e9f
  40ea14:	mov    ebp,0x6836979d
  40ea19:	jnp    0x40ea05
  40ea1b:	test   eax,0x53926655
  40ea20:	setg   BYTE PTR [ebp+0x28981cdf]
  40ea27:	popa   
  40ea28:	xor    DWORD PTR ss:[edx+0x282ef486],edx
  40ea2f:	pop    ds
  40ea30:	push   esp
  40ea31:	daa    
  40ea32:	or     eax,0x92af7ad1
  40ea37:	(bad)  
  40ea38:	aas    
  40ea39:	cmc    
  40ea3a:	mov    edi,0xb806ebe4
  40ea3f:	call   0x21a738c8
  40ea44:	sub    al,0xd2
  40ea46:	inc    ecx
  40ea47:	sbb    BYTE PTR ds:0x878394d5,ah
  40ea4d:	lock lods eax,DWORD PTR ds:[esi]
  40ea4f:	jo     0x40ea1c
  40ea51:	push   eax
  40ea52:	cli    
  40ea53:	sub    eax,0xc47e1b21
  40ea58:	call   0x80d56efc
  40ea5d:	dec    ecx
  40ea5e:	loop   0x40eaa8
  40ea60:	push   0x2781e5a2
  40ea65:	lahf   
  40ea66:	nop
  40ea67:	push   ebx
  40ea68:	inc    ecx
  40ea69:	fsincos 
  40ea6b:	mov    bl,0xc5
  40ea6d:	stc    
  40ea6e:	aaa    
  40ea6f:	outs   dx,DWORD PTR ds:[esi]
  40ea70:	mov    ecx,0xba75216a
  40ea75:	sub    ah,al
  40ea77:	and    edi,ebp
  40ea79:	push   esi
  40ea7a:	shl    BYTE PTR [ebp+0x21],cl
  40ea7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7e:	add    edi,edx
  40ea80:	call   0x733d:0x2ead5a2d
  40ea87:	bound  ebp,QWORD PTR [ebx+0x766568a1]
  40ea8d:	ins    BYTE PTR es:[edi],dx
  40ea8e:	dec    eax
  40ea8f:	mov    ds:0xf18c0de,eax
  40ea94:	lea    ebp,[edx-0x69e9d98b]
  40ea9a:	std    
  40ea9b:	adc    bh,al
  40ea9d:	shl    BYTE PTR [esi],cl
  40ea9f:	js     0x40ea41
  40eaa1:	dec    ebp
  40eaa2:	pushf  
  40eaa3:	mov    esi,0xda16a22f
  40eaa8:	adc    DWORD PTR [ebx+0x695b6590],0xde61b3d3
  40eab2:	pop    ebx
  40eab3:	xor    al,0x7c
  40eab5:	sbb    ecx,DWORD PTR [edi-0x3fb1b32e]
  40eabb:	inc    esi
  40eabc:	and    DWORD PTR [ebx-0x62ed7c6],esi
  40eac2:	xchg   DWORD PTR [ebx+0x47],ebp
  40eac5:	sbb    cl,bh
  40eac7:	mov    edi,0x4bf882b9
  40eacc:	and    DWORD PTR [ebp+0x1],edi
  40eacf:	rol    DWORD PTR ds:0x3aa6fdf0,0xdf
  40ead6:	mov    BYTE PTR [edi-0x23729b89],dh
  40eadc:	sub    BYTE PTR [edx-0x34],cl
  40eadf:	out    0x43,eax
  40eae1:	pop    esp
  40eae2:	fnstcw WORD PTR [ecx]
  40eae4:	test   DWORD PTR [eax-0x61b675db],edi
  40eaea:	jbe    0x40eae8
  40eaec:	and    al,0x1f
  40eaee:	js     0x40eb10
  40eaf0:	stos   BYTE PTR es:[edi],al
  40eaf1:	pop    esp
  40eaf2:	xchg   edx,eax
  40eaf3:	mov    ah,0x58
  40eaf5:	rcr    esp,0xd3
  40eaf8:	adc    dh,BYTE PTR [edx]
  40eafa:	jae    0x40eade
  40eafc:	adc    eax,0x23ffd16
  40eb01:	dec    edi
  40eb02:	xchg   ecx,eax
  40eb03:	mov    DWORD PTR [edi+edx*1+0x3e0600ff],ebp
  40eb0a:	(bad)  
  40eb0b:	out    0x5a,al
  40eb0d:	pop    esp
  40eb0e:	call   0xcca92777
  40eb13:	inc    edx
  40eb14:	xchg   DWORD PTR [esi],eax
  40eb16:	(bad)  
  40eb17:	sbb    al,0x38
  40eb19:	hlt    
  40eb1a:	push   ds
  40eb1b:	jmp    0x432339d3
  40eb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb21:	xchg   ebx,eax
  40eb22:	dec    eax
  40eb24:	shl    DWORD PTR [esi-0x66],0xbc
  40eb28:	fdiv   DWORD PTR [esi+0x50]
  40eb2b:	mov    esp,0xf2813934
  40eb30:	(bad)  
  40eb32:	leave  
  40eb33:	push   cs
  40eb34:	out    0x8c,al
  40eb36:	addr16 adc al,0x9a
  40eb39:	jno    0x40eb16
  40eb3b:	jbe    0x40eb01
  40eb3d:	dec    ebp
  40eb3e:	loop   0x40ebb7
  40eb40:	hlt    
  40eb41:	sub    eax,0xb5b0d4be
  40eb46:	aas    
  40eb47:	les    esp,FWORD PTR [esi]
  40eb49:	xchg   ecx,eax
  40eb4a:	rcl    DWORD PTR [ebx-0x2d],0xd8
  40eb4e:	ret    
  40eb4f:	inc    ebp
  40eb50:	sbb    esi,DWORD PTR [edx-0x5f]
  40eb53:	aam    0x65
  40eb55:	ins    DWORD PTR es:[edi],dx
  40eb56:	sahf   
  40eb57:	loopne 0x40eba6
  40eb59:	jg     0x40ebb6
  40eb5b:	data16 stc 
  40eb5d:	out    dx,al
  40eb5e:	add    al,0x40
  40eb60:	not    DWORD PTR [edx]
  40eb62:	call   0xff86ff7b
  40eb67:	nop
  40eb68:	mov    WORD PTR [esi+edi*1],es
  40eb6b:	pop    ebp
  40eb6c:	and    ah,dh
  40eb6e:	jae    0x40eb49
  40eb70:	or     al,al
  40eb72:	idiv   BYTE PTR [eax-0x4d]
  40eb75:	push   es
  40eb76:	aam    0x63
  40eb78:	jmp    0x40ebd6
  40eb7a:	mov    ds:0x8351ad8c,eax
  40eb7f:	daa    
  40eb80:	js     0x40eb05
  40eb82:	outs   dx,DWORD PTR ds:[esi]
  40eb83:	and    ah,dh
  40eb85:	daa    
  40eb86:	xchg   edx,eax
  40eb87:	ss xchg edx,eax
  40eb89:	aaa    
  40eb8a:	cmp    BYTE PTR ds:0xf90545e7,dh
  40eb90:	mov    dl,0x8b
  40eb92:	cmp    eax,0xcc5346b3
  40eb97:	mov    ds:0x2b9b4dfc,eax
  40eb9c:	push   eax
  40eb9d:	outs   dx,BYTE PTR ds:[esi]
  40eb9e:	sub    ebp,edx
  40eba0:	dec    ebx
  40eba1:	retf   0x17c8
  40eba4:	mov    DWORD PTR [ebx],edi
  40eba6:	ror    edi,1
  40eba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eba9:	setle  cl
  40ebac:	js     0x40ebb0
  40ebae:	xor    eax,0x9fbd5779
  40ebb3:	xor    BYTE PTR [esi-0x2f7f6d60],al
  40ebb9:	sti    
  40ebba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbb:	imul   esp,DWORD PTR [esi-0x3073dc22],0xffffff92
  40ebc2:	dec    ebx
  40ebc3:	cmp    edi,ebx
  40ebc5:	fisttp WORD PTR [edx-0x63]
  40ebc8:	jno    0x40ebf0
  40ebca:	das    
  40ebcb:	shl    BYTE PTR [ebx-0xf],cl
  40ebce:	pop    ss
  40ebcf:	lods   eax,DWORD PTR ds:[esi]
  40ebd0:	add    dl,ch
  40ebd2:	mov    ebp,0x203e6990
  40ebd7:	data16 outs dx,BYTE PTR ds:[esi]
  40ebd9:	js     0x40eb70
  40ebdb:	xchg   edi,eax
  40ebdc:	aas    
  40ebdd:	xor    DWORD PTR [edx],edi
  40ebdf:	pop    ss
  40ebe0:	int    0x21
  40ebe2:	shr    eax,cl
  40ebe4:	inc    ecx
  40ebe5:	rcl    BYTE PTR [ebx+ecx*2],1
  40ebe8:	mov    DWORD PTR [esi-0x585e5cbb],esi
  40ebee:	js     0x40ebd3
  40ebf0:	pop    ebx
  40ebf1:	addr16 ror edi,1
  40ebf4:	stc    
  40ebf5:	enter  0x6caf,0xc5
  40ebf9:	xor    al,0x1
  40ebfb:	call   0x8f02936
  40ec00:	iret   
  40ec01:	inc    edi
  40ec02:	jg     0x40ec65
  40ec04:	lock mov ebp,0xd8d5a0cd
  40ec0a:	inc    ebp
  40ec0b:	push   ebp
  40ec0c:	lahf   
  40ec0d:	mov    ebx,DWORD PTR [ebx-0x58ffdb2c]
  40ec13:	inc    ebp
  40ec14:	add    ecx,ebp
  40ec16:	inc    esi
  40ec17:	(bad)  
  40ec18:	hlt    
  40ec19:	imul   eax,DWORD PTR [ecx+edx*4-0x75],0xc05d87ab
  40ec21:	bnd jo 0x40eba4
  40ec24:	sbb    al,BYTE PTR [edx+ebx*2-0x2e]
  40ec28:	mov    edi,0x4eb86261
  40ec2d:	xor    edx,ebp
  40ec2f:	test   DWORD PTR [bp+si],edx
  40ec32:	sub    BYTE PTR [edi+0x410c160d],bl
  40ec38:	add    eax,0x7d6a778d
  40ec3e:	inc    ebx
  40ec3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec40:	(bad)  
  40ec41:	mov    eax,0xb2692cae
  40ec46:	jmp    0x389a0ec7
  40ec4b:	jnp    0x40ec4a
  40ec4d:	push   ebp
  40ec4e:	inc    esi
  40ec4f:	js     0x40ec3c
  40ec51:	loope  0x40ec06
  40ec53:	sub    eax,0xe9c8ecca
  40ec58:	mov    ch,0x73
  40ec5a:	in     al,dx
  40ec5b:	and    eax,0x9ff58fa7
  40ec60:	mov    bl,0x7e
  40ec62:	daa    
  40ec63:	imul   ecx,DWORD PTR [edx+0x16d0847d],0xdbe3c9cd
  40ec6d:	jmp    0x9350:0x123ed88c
  40ec74:	or     bh,bh
  40ec76:	jmp    0x42ac:0xd5ccbcf
  40ec7d:	and    dh,BYTE PTR [edx+eiz*4+0x1abd8004]
  40ec84:	push   es
  40ec85:	add    ebp,DWORD PTR [edx-0x3161b092]
  40ec8b:	in     al,dx
  40ec8c:	std    
  40ec8d:	dec    ebx
  40ec8e:	push   cs
  40ec8f:	cmp    al,0x37
  40ec91:	shl    BYTE PTR [ebx],cl
  40ec93:	leave  
  40ec94:	xchg   esi,eax
  40ec95:	in     eax,dx
  40ec96:	dec    eax
  40ec97:	ds jnp 0x40ec87
  40ec9a:	mov    BYTE PTR [ebx+eiz*4+0x1c077db7],cl
  40eca1:	and    bl,BYTE PTR [edi+0x3a27114e]
  40eca7:	xchg   edi,eax
  40eca8:	js     0x40ed02
  40ecaa:	dec    ebx
  40ecab:	xchg   ecx,eax
  40ecac:	dec    eax
  40ecad:	pop    ebp
  40ecae:	lahf   
  40ecaf:	test   DWORD PTR [esi+edx*1-0x53],edx
  40ecb3:	popa   
  40ecb4:	and    BYTE PTR [edx+0x3f],ah
  40ecb7:	xchg   BYTE PTR [esi+0x45],al
  40ecba:	xchg   DWORD PTR [edi+0x68],edx
  40ecbd:	stos   BYTE PTR es:[edi],al
  40ecbe:	jb     0x40ec7b
  40ecc0:	mov    ebx,DWORD PTR [edx+0x14]
  40ecc3:	pop    edx
  40ecc4:	inc    ebx
  40ecc5:	mov    cl,0x5a
  40ecc7:	xchg   si,ax
  40ecc9:	cld    
  40ecca:	sub    al,BYTE PTR [ebp+eiz*2-0x486d24c1]
  40ecd1:	push   edx
  40ecd2:	jge    0x40ecaf
  40ecd4:	adc    BYTE PTR ds:0xf396210d,ah
  40ecda:	push   ebx
  40ecdb:	repz out 0x55,al
  40ecde:	enter  0xd396,0xe4
  40ece2:	sbb    BYTE PTR ds:0xdd347d26,0x4d
  40ece9:	push   edx
  40ecea:	ret    0x6874
  40eced:	in     eax,0xd6
  40ecef:	sbb    BYTE PTR [eax-0x7c],al
  40ecf2:	es xchg esp,eax
  40ecf4:	push   es
  40ecf5:	sub    BYTE PTR [edi-0x2f166f27],0x7d
  40ecfc:	push   ebp
  40ecfd:	push   ebp
  40ecfe:	scas   al,BYTE PTR es:[edi]
  40ecff:	dec    ebx
  40ed00:	and    eax,0x95fb596e
  40ed05:	push   esi
  40ed06:	adc    edi,ebx
  40ed08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed09:	and    ch,ch
  40ed0b:	scas   al,BYTE PTR es:[edi]
  40ed0c:	sti    
  40ed0d:	imul   ebx,DWORD PTR [ecx+ecx*1],0xd1434ece
  40ed14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed15:	cmp    bl,BYTE PTR [esi+ecx*4-0x2a]
  40ed19:	jp     0x40ed25
  40ed1b:	cmp    al,0xd9
  40ed1d:	test   DWORD PTR ds:0x96d30778,ebp
  40ed23:	arpl   bx,bx
  40ed25:	(bad)  
  40ed26:	fsub   QWORD PTR [esi-0x767e7199]
  40ed2c:	sbb    al,0xd8
  40ed2e:	adc    bl,bl
  40ed30:	or     BYTE PTR [ecx+0x55],0xf6
  40ed34:	jnp    0x40ed05
  40ed36:	test   esp,esp
  40ed38:	jno    0x40ed73
  40ed3a:	out    dx,al
  40ed3b:	mov    eax,0xba638199
  40ed40:	mov    cl,0xb0
  40ed42:	jo     0x40ed8e
  40ed44:	jecxz  0x40edc5
  40ed46:	adc    DWORD PTR [ebp+0x77],0x5ac727aa
  40ed4d:	in     eax,0x17
  40ed4f:	cmp    al,0xf1
  40ed51:	sar    BYTE PTR [edx+0x7d264be8],cl
  40ed57:	stos   BYTE PTR es:[edi],al
  40ed58:	add    BYTE PTR [ebp-0x1b],al
  40ed5b:	inc    eax
  40ed5c:	shl    dh,0xf0
  40ed5f:	cld    
  40ed60:	jbe    0x40ed25
  40ed62:	test   eax,0x89a1496c
  40ed67:	inc    ebx
  40ed68:	mov    al,ds:0x6d0d32f8
  40ed6d:	sub    al,0xc0
  40ed6f:	(bad)  
  40ed70:	xchg   esi,eax
  40ed71:	mov    ebp,0xbbe2ecfb
  40ed76:	jp     0x40edc1
  40ed78:	es icebp 
  40ed7a:	scas   al,BYTE PTR es:[edi]
  40ed7b:	shl    DWORD PTR [edi],0x61
  40ed7e:	mov    ecx,0xb45d0f8a
  40ed83:	mov    eax,0xca04ea3c
  40ed88:	push   edi
  40ed89:	sti    
  40ed8a:	and    ebp,DWORD PTR [ecx+0x2e]
  40ed8d:	fisubr DWORD PTR [esi+ecx*2]
  40ed90:	hlt    
  40ed91:	mov    ah,0xf4
  40ed93:	loop   0x40ed24
  40ed95:	mov    bh,0x19
  40ed97:	dec    esp
  40ed98:	or     al,cl
  40ed9a:	add    eax,0x81ebc583
  40ed9f:	mov    dl,0xe4
  40eda1:	outs   dx,BYTE PTR ds:[esi]
  40eda2:	stos   BYTE PTR es:[edi],al
  40eda3:	out    dx,eax
  40eda4:	mov    ebp,0x404d334
  40eda9:	test   eax,0x61bfe1d3
  40edae:	fs fwait
  40edb0:	int3   
  40edb1:	cmp    ebx,DWORD PTR [edx]
  40edb3:	int    0x10
  40edb5:	repnz test DWORD PTR [ebp-0x1f],ecx
  40edb9:	movups XMMWORD PTR [edi-0xa],xmm4
  40edbd:	jns    0x40edbc
  40edbf:	xlat   BYTE PTR ds:[ebx]
  40edc0:	in     al,0x90
  40edc2:	mov    esp,0x65095339
  40edc7:	jb     0x40ed96
  40edc9:	fld    QWORD PTR [ecx+esi*1]
  40edcc:	dec    ecx
  40edcd:	cdq    
  40edce:	(bad)  
  40edcf:	push   esi
  40edd0:	outs   dx,BYTE PTR ds:[esi]
  40edd1:	sub    DWORD PTR [ebp+0x301e9123],eax
  40edd7:	inc    ebp
  40edd8:	or     ebx,DWORD PTR [ebp+0x44f3e7b]
  40edde:	mov    es:0x23e22143,eax
  40ede4:	fld    TBYTE PTR [eax+ecx*8+0x68]
  40ede8:	data16 fidiv DWORD PTR [ecx+0x60]
  40edec:	cdq    
  40eded:	sub    esp,eax
  40edef:	scas   eax,DWORD PTR es:[edi]
  40edf0:	sbb    DWORD PTR [eax-0x324656b],edx
  40edf6:	jo     0x40ee08
  40edf8:	cs xor eax,0xbc1fb2cb
  40edfe:	sbb    DWORD PTR [eax+0x70],edx
  40ee01:	cmp    DWORD PTR [edi],edx
  40ee03:	into   
  40ee04:	ja     0x40edd4
  40ee06:	sbb    esi,ebx
  40ee08:	and    bl,BYTE PTR [esi-0x54a34331]
  40ee0e:	jg     0x40edb4
  40ee10:	icebp  
  40ee11:	pop    eax
  40ee12:	imul   ecx,DWORD PTR [edx-0x29f3ee8e],0x8f7a5e8c
  40ee1c:	je     0x40ee94
  40ee1e:	add    DWORD PTR [eax+ecx*2+0x2e],0x1f266b03
  40ee26:	pop    es
  40ee27:	and    ebp,esi
  40ee29:	inc    eax
  40ee2a:	nop
  40ee2b:	mov    al,BYTE PTR [ebx+0x1a0db9b3]
  40ee31:	mov    ch,0x99
  40ee33:	outs   dx,BYTE PTR ds:[esi]
  40ee34:	outs   dx,BYTE PTR ds:[esi]
  40ee35:	xor    BYTE PTR [ebx-0x79],bl
  40ee38:	scas   al,BYTE PTR es:[edi]
  40ee39:	push   ds
  40ee3a:	sbb    DWORD PTR ds:0x5fba7de0,0x5c
  40ee41:	add    ah,BYTE PTR [esi]
  40ee43:	pop    ss
  40ee44:	(bad)  
  40ee45:	mov    edi,DWORD PTR [eax]
  40ee47:	enter  0xc3fc,0xbe
  40ee4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee4c:	rol    DWORD PTR [ecx-0x80],cl
  40ee4f:	sahf   
  40ee50:	ror    dh,0xde
  40ee53:	int3   
  40ee54:	jecxz  0x40ee9d
  40ee56:	cmp    BYTE PTR [edi],bl
  40ee58:	mov    ebp,0xd30f1c15
  40ee5d:	(bad)  
  40ee5e:	nop
  40ee5f:	in     al,dx
  40ee60:	xchg   edi,eax
  40ee61:	push   0x6898047d
  40ee66:	inc    esp
  40ee67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee68:	inc    esi
  40ee69:	mov    DWORD PTR [esi],eax
  40ee6b:	cmp    al,BYTE PTR [ecx-0x1e7c9cb5]
  40ee71:	in     al,dx
  40ee72:	cmp    DWORD PTR [eax+0x1e],ebp
  40ee75:	pop    esi
  40ee76:	mov    cl,0xed
  40ee78:	(bad)  
  40ee79:	leave  
  40ee7a:	xchg   edi,eax
  40ee7b:	dec    cx
  40ee7d:	add    ecx,DWORD PTR [eax+0x48]
  40ee80:	loopne 0x40eedc
  40ee82:	data16 arpl ax,di
  40ee85:	fwait
  40ee86:	outs   dx,DWORD PTR ds:[esi]
  40ee87:	mov    bl,0x93
  40ee89:	sub    eax,0xa0ef6772
  40ee8e:	jns    0x40ee59
  40ee90:	jle    0x40ee59
  40ee92:	push   ecx
  40ee93:	inc    ecx
  40ee94:	jnp    0x40ee90
  40ee96:	mov    al,ds:0x8c8cdf41
  40ee9b:	mov    esi,0x3ec97e8b
  40eea0:	pop    ebp
  40eea1:	scas   eax,DWORD PTR es:[edi]
  40eea2:	xchg   ebp,eax
  40eea3:	call   0xcdcc8d1a
  40eea8:	mov    bl,0xd5
  40eeaa:	cmp    eax,0x19e37323
  40eeaf:	stos   BYTE PTR es:[edi],al
  40eeb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeb1:	inc    ecx
  40eeb2:	push   edx
  40eeb3:	call   0x34d1:0xd82cfea3
  40eeba:	mov    al,ds:0xd6150f08
  40eebf:	ret    
  40eec0:	xchg   ebp,eax
  40eec1:	add    al,0xb2
  40eec3:	ja     0x40eecb
  40eec5:	push   eax
  40eec6:	mov    bh,0x70
  40eec8:	test   al,0x3d
  40eeca:	test   BYTE PTR [esi-0x2],0xa1
  40eece:	mov    BYTE PTR [eax],ch
  40eed0:	mov    edx,0x1570efa4
  40eed5:	xchg   esi,eax
  40eed6:	mov    gs:0x633fa2df,eax
  40eedc:	gs and cl,dh
  40eedf:	mov    bh,0x32
  40eee1:	cmp    eax,0xf59429a0
  40eee6:	mov    ebp,0x41899591
  40eeeb:	inc    edx
  40eeec:	aam    0xfb
  40eeee:	and    DWORD PTR [eax+0x70],esp
  40eef1:	inc    eax
  40eef2:	imul   esp,DWORD PTR [eax+0x54],0xe9297575
  40eef9:	aas    
  40eefa:	pop    ds
  40eefb:	xchg   ebx,eax
  40eefc:	stos   BYTE PTR es:[edi],al
  40eefd:	pop    eax
  40eefe:	mov    eax,0x8fb234d5
  40ef03:	xor    DWORD PTR [ebx-0x2a3bc5cb],ebx
  40ef09:	lods   eax,DWORD PTR ds:[esi]
  40ef0a:	push   ebx
  40ef0b:	ds test al,0x67
  40ef0e:	outs   dx,BYTE PTR ds:[esi]
  40ef0f:	pop    edi
  40ef10:	ror    DWORD PTR [ecx],1
  40ef12:	ficom  DWORD PTR [edi]
  40ef14:	iret   
  40ef15:	stos   BYTE PTR es:[edi],al
  40ef16:	adc    ah,dh
  40ef18:	gs ss ret 
  40ef1b:	ret    0x90e1
  40ef1e:	bound  ecx,QWORD PTR [ebx+edi*1+0x4c46c6a5]
  40ef25:	gs push edx
  40ef27:	xchg   BYTE PTR [ecx],ch
  40ef29:	(bad)  
  40ef2a:	mov    ch,0x6b
  40ef2c:	loopne 0x40eee6
  40ef2e:	les    eax,FWORD PTR [ebp+ecx*4-0xf]
  40ef32:	(bad)  
  40ef33:	stos   DWORD PTR es:[edi],eax
  40ef34:	in     eax,0x43
  40ef36:	cs jae 0x40eecd
  40ef39:	xlat   BYTE PTR ds:[ebx]
  40ef3a:	enter  0x4202,0x18
  40ef3e:	add    edi,edx
  40ef40:	stos   BYTE PTR es:[edi],al
  40ef41:	rcl    DWORD PTR [esi-0x2e5eb473],cl
  40ef47:	mov    bh,0xa1
  40ef49:	inc    ebp
  40ef4a:	mov    ds:0xeea11fde,al
  40ef4f:	and    ebp,DWORD PTR [ebp-0x14840a5]
  40ef55:	bound  esi,QWORD PTR [ebx]
  40ef57:	iret   
  40ef58:	push   ecx
  40ef59:	push   ds
  40ef5a:	dec    ebx
  40ef5b:	les    ebp,FWORD PTR [ebp-0x3f89b8a2]
  40ef61:	arpl   di,sp
  40ef63:	jle    0x40ef3e
  40ef65:	mov    DWORD PTR [edx],0x7845be87
  40ef6b:	gs call 0x61e9bc5
  40ef71:	adc    al,0x3f
  40ef73:	xor    cl,BYTE PTR [ebp-0x66]
  40ef76:	retf   
  40ef77:	sahf   
  40ef78:	dec    ebp
  40ef79:	inc    esp
  40ef7a:	arpl   cx,sp
  40ef7c:	call   0xd736:0xd9ceef93
  40ef83:	ins    DWORD PTR es:[edi],dx
  40ef84:	mov    ds:0xec47a0aa,al
  40ef89:	sub    eax,DWORD PTR es:[eax+ecx*1-0x364660d6]
  40ef91:	sar    bh,0xd1
  40ef94:	jb     0x40f010
  40ef96:	adc    ebp,DWORD PTR ds:0x73cc2cba
  40ef9c:	dec    edi
  40ef9d:	push   es
  40ef9e:	mov    ecx,esi
  40efa0:	dec    edx
  40efa1:	mov    ds:0x272e6753,al
  40efa6:	lods   al,BYTE PTR ds:[esi]
  40efa7:	test   al,0x75
  40efa9:	push   cs
  40efaa:	cli    
  40efab:	fmul   st,st(2)
  40efad:	add    al,0xcd
  40efaf:	push   ebx
  40efb0:	xchg   ebx,eax
  40efb1:	data16 mov ds:0x8af3fa49,al
  40efb7:	dec    ebx
  40efb8:	jmp    0x27e4:0x2d17a3c8
  40efbf:	shr    bh,0x3c
  40efc2:	sbb    DWORD PTR [edi+0x3ef43a0a],edi
  40efc8:	retf   
  40efc9:	inc    ebx
  40efca:	sti    
  40efcb:	xor    eax,0xcd28874
  40efd0:	in     eax,0xe9
  40efd2:	stos   BYTE PTR es:[edi],al
  40efd3:	fsubr  DWORD PTR [eax-0x2d]
  40efd6:	mov    bl,0x5a
  40efd8:	ret    
  40efd9:	xor    dl,dl
  40efdb:	mov    esi,0x4abd4e76
  40efe0:	add    eax,0xee616e9b
  40efe5:	retf   
  40efe6:	cld    
  40efe7:	mov    al,ds:0x47105a4e
  40efec:	icebp  
  40efed:	adc    BYTE PTR [ebx-0x62],0x81
  40eff1:	pop    ebx
  40eff2:	mov    ecx,0xc956b610
  40eff7:	xor    al,ah
  40eff9:	sbb    eax,0x33ddd5f4
  40effe:	cmp    DWORD PTR [ebp+0x7f5ade6e],esp
  40f004:	shl    DWORD PTR [esp+ebx*1+0x23a1df62],1
  40f00b:	lahf   
  40f00c:	fild   DWORD PTR [eax-0x5c]
  40f00f:	xor    al,0xca
  40f011:	xlat   BYTE PTR ds:[ebx]
  40f012:	(bad)  
  40f013:	or     DWORD PTR [edx],ebx
  40f015:	outs   dx,BYTE PTR ds:[esi]
  40f016:	jnp    0x40f01b
  40f018:	mov    edi,DWORD PTR [esi+0x4f]
  40f01b:	dec    edx
  40f01c:	mov    DWORD PTR [esi+0x6fb8a76a],edx
  40f022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f023:	ss aaa 
  40f025:	fs wrmsr 
  40f028:	or     DWORD PTR [ebp+esi*8-0x30],ebp
  40f02c:	jmp    0x40f03c
  40f02e:	int3   
  40f02f:	add    esi,ecx
  40f031:	lds    esi,FWORD PTR [ebx+eiz*8-0x7c75b1a1]
  40f038:	ja     0x40f069
  40f03a:	xchg   bl,bl
  40f03c:	jl     0x40f088
  40f03e:	shl    BYTE PTR [ebx+eiz*8],1
  40f041:	adc    DWORD PTR [ebx+0x2afbe998],eax
  40f047:	jmp    0x40f00c
  40f049:	test   DWORD PTR [ebp+0x5a],ecx
  40f04c:	mov    al,ds:0x6ed01b06
  40f051:	repnz and eax,ebp
  40f054:	mov    ah,0xec
  40f056:	ds stc 
  40f058:	into   
  40f059:	sub    esp,esi
  40f05b:	sub    DWORD PTR [edx],0x5a
  40f05e:	cld    
  40f05f:	dec    ebx
  40f060:	inc    esi
  40f061:	xor    eax,0x31bf72a0
  40f066:	sahf   
  40f067:	jl     0x40f09d
  40f069:	mov    ah,0x31
  40f06b:	mov    esp,0x9c98082c
  40f070:	mov    ebx,0xa935ebe
  40f075:	loop   0x40f020
  40f077:	inc    edx
  40f078:	(bad)  [ecx]
  40f07a:	jae    0x40f013
  40f07c:	sbb    bh,BYTE PTR [eax]
  40f07e:	pop    ss
  40f07f:	pop    ebp
  40f080:	mov    ds:0xa2e8d806,al
  40f085:	mov    ah,0xac
  40f087:	xchg   ebx,eax
  40f088:	pop    ecx
  40f089:	mov    ecx,0x9c95c753
  40f08e:	test   esi,esi
  40f090:	mov    edx,0xe617cc
  40f095:	in     eax,dx
  40f096:	mov    dl,0xab
  40f098:	test   eax,0x61cb05f4
  40f09d:	test   DWORD PTR [eax-0x5f],0xa5167eeb
  40f0a4:	jp     0x40f09a
  40f0a6:	jns    0x40f097
  40f0a8:	lods   eax,DWORD PTR ds:[esi]
  40f0a9:	sub    ah,BYTE PTR [ecx+eax*8]
  40f0ac:	(bad)  
  40f0ad:	lea    ecx,[esi+0x1d5db938]
  40f0b3:	(bad)  
  40f0b4:	frstor [edi]
  40f0b6:	shl    BYTE PTR [ebp+esi*1-0x7a],1
  40f0ba:	dec    ebp
  40f0bb:	dec    eax
  40f0bc:	xchg   ecx,eax
  40f0bd:	retf   0x7cfe
  40f0c0:	add    BYTE PTR [edx+0x16],ch
  40f0c3:	iret   
  40f0c4:	sar    eax,1
  40f0c6:	pop    esp
  40f0c7:	mov    edx,0xf165c67f
  40f0cc:	lods   eax,DWORD PTR ds:[esi]
  40f0cd:	xchg   ecx,eax
  40f0ce:	(bad)  
  40f0cf:	push   esi
  40f0d0:	int3   
  40f0d1:	adc    ecx,DWORD PTR [ebp-0x5792d9a3]
  40f0d7:	add    bh,BYTE PTR [ecx+ecx*1+0x30]
  40f0db:	in     eax,0x72
  40f0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0de:	pusha  
  40f0df:	iret   
  40f0e0:	scas   al,BYTE PTR es:[edi]
  40f0e1:	outs   dx,DWORD PTR ds:[esi]
  40f0e2:	scas   eax,DWORD PTR es:[edi]
  40f0e3:	enter  0xd2f1,0xdb
  40f0e7:	inc    ebp
  40f0e8:	sbb    DWORD PTR ds:0x62412048,ecx
  40f0ee:	sub    edx,DWORD PTR [eax+0x4e]
  40f0f1:	push   cs
  40f0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f3:	mov    edi,0x7c78289a
  40f0f8:	sar    BYTE PTR [ebx-0x2de9a2bf],cl
  40f0fe:	fmul   st,st(7)
  40f100:	mov    al,0xdf
  40f102:	pop    ecx
  40f103:	cmp    BYTE PTR [edi-0x5c3de1d1],0x3e
  40f10a:	ror    BYTE PTR [ecx+0x72],0xf9
  40f10e:	sub    ch,BYTE PTR [ecx-0x60]
  40f111:	cmp    DWORD PTR [edi-0x4],ebp
  40f114:	js     0x40f0a8
  40f116:	pusha  
  40f117:	fstp   TBYTE PTR [ecx-0x7d05c11e]
  40f11d:	dec    edx
  40f11e:	adc    eax,0xb942d3aa
  40f123:	mov    esi,0xef3d47a2
  40f128:	call   0x73dfd946
  40f12d:	push   edx
  40f12e:	sbb    al,0xf1
  40f130:	xor    cl,BYTE PTR [esi-0x65d80f15]
  40f136:	or     al,0x22
  40f138:	dec    esp
  40f139:	jge    0x40f0d4
  40f13b:	sub    ecx,DWORD PTR [esi+eiz*8+0xb]
  40f13f:	test   DWORD PTR [ecx+0x76],eax
  40f142:	mov    cl,al
  40f144:	(bad)  [ebx]
  40f146:	scas   al,BYTE PTR es:[edi]
  40f147:	les    edx,FWORD PTR [ebx+0x2e551d96]
  40f14d:	xchg   esp,eax
  40f14e:	in     eax,0x1d
  40f150:	pop    es
  40f151:	inc    esp
  40f152:	mov    WORD PTR [ecx],?
  40f154:	push   0x8893ede1
  40f159:	pushf  
  40f15a:	cmp    edi,DWORD PTR [ebx*1-0x2190bc72]
  40f161:	and    al,0x78
  40f163:	mov    ecx,0xf24f017d
  40f168:	inc    ebx
  40f169:	loope  0x40f1e3
  40f16b:	sbb    DWORD PTR [edi+0x26f7e142],ebx
  40f171:	pop    edi
  40f172:	loope  0x40f169
  40f174:	add    bh,BYTE PTR [ebx-0x2a]
  40f177:	cli    
  40f178:	data16 jno 0x40f185
  40f17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f17c:	les    eax,FWORD PTR [edx]
  40f17e:	(bad)  
  40f17f:	inc    ecx
  40f180:	mov    dh,0x11
  40f182:	daa    
  40f183:	dec    edx
  40f184:	xor    ch,BYTE PTR [esi-0x27aa3338]
  40f18a:	scas   al,BYTE PTR es:[edi]
  40f18b:	pop    ebx
  40f18c:	cli    
  40f18d:	out    dx,eax
  40f18e:	aam    0x5
  40f190:	cmp    BYTE PTR [esi-0xb639e5a],ch
  40f196:	aad    0xe9
  40f198:	stos   DWORD PTR es:[edi],eax
  40f199:	push   0xcdc62024
  40f19e:	(bad)  
  40f19f:	jo     0x40f153
  40f1a1:	pop    es
  40f1a2:	sti    
  40f1a3:	mov    bl,0x31
  40f1a5:	and    eax,0x3f7ac066
  40f1aa:	div    BYTE PTR [esi+0x78042794]
  40f1b0:	push   0x9d713f9f
  40f1b5:	mov    dh,BYTE PTR [edx]
  40f1b7:	test   eax,0xd2235677
  40f1bc:	sti    
  40f1bd:	(bad)  
  40f1be:	int    0xd7
  40f1c0:	fwait
  40f1c1:	xchg   edx,eax
  40f1c2:	push   es
  40f1c3:	es jp  0x40f1bf
  40f1c6:	xchg   edi,eax
  40f1c7:	pop    es
  40f1c8:	pop    ebp
  40f1c9:	xor    eax,0xaed10deb
  40f1ce:	push   es
  40f1cf:	xlat   BYTE PTR ds:[ebx]
  40f1d0:	test   eax,0x839ea790
  40f1d5:	imul   BYTE PTR [eax+ecx*4+0x7b68b4d]
  40f1dc:	es gs je 0x40f1c0
  40f1e0:	clc    
  40f1e1:	(bad)  
  40f1e2:	push   ds
  40f1e3:	icebp  
  40f1e4:	mov    edx,0x922bb03c
  40f1e9:	dec    esi
  40f1ea:	icebp  
  40f1eb:	add    ecx,DWORD PTR [eax-0x77]
  40f1ee:	jp     0x40f229
  40f1f0:	xor    bl,bl
  40f1f2:	adc    eax,0x8a3c15d0
  40f1f7:	xlat   BYTE PTR ds:[ebx]
  40f1f8:	cmp    al,0x72
  40f1fa:	lds    ecx,FWORD PTR [eax]
  40f1fc:	test   ch,ch
  40f1fe:	and    eax,0xccb36e63
  40f203:	or     BYTE PTR [edi+0x52],dl
  40f206:	mov    ebp,0x59232572
  40f20b:	je     0x40f259
  40f20d:	dec    ebp
  40f20e:	adc    eax,0x9648055
  40f213:	ficomp WORD PTR [ebx]
  40f215:	cmc    
  40f216:	push   0xa26397d0
  40f21b:	stos   DWORD PTR es:[edi],eax
  40f21c:	xor    BYTE PTR [eax],ch
  40f21e:	shl    DWORD PTR [ebx-0x73706cc6],0xc9
  40f225:	sub    al,0x9
  40f227:	jnp    0x40f23b
  40f229:	sar    DWORD PTR [edi+0x3a],cl
  40f22c:	sahf   
  40f22d:	addr16 jbe 0x40f24f
  40f230:	xlat   BYTE PTR ds:[ebx]
  40f231:	jbe    0x40f223
  40f233:	popf   
  40f234:	jne    0x40f272
  40f236:	mov    dl,bl
  40f238:	test   al,0xe9
  40f23a:	repz rcl DWORD PTR [ebp-0x6],cl
  40f23e:	in     al,dx
  40f23f:	pusha  
  40f240:	arpl   WORD PTR [ecx-0x46],cx
  40f243:	dec    ebp
  40f244:	les    ebp,FWORD PTR [ebp-0x57]
  40f247:	retf   
  40f248:	pop    es
  40f249:	xor    BYTE PTR [edi-0x4f],al
  40f24c:	push   ecx
  40f24d:	jne    0x40f1ed
  40f24f:	popa   
  40f250:	jns    0x40f285
  40f252:	hlt    
  40f253:	(bad)  
  40f254:	xor    al,0x1f
  40f256:	leave  
  40f257:	call   0xf785:0xa6574f2c
  40f25e:	adc    DWORD PTR ds:0x2f097d4a,esp
  40f264:	lahf   
  40f265:	leave  
  40f266:	jae    0x40f24a
  40f268:	cs ja  0x40f28f
  40f26b:	dec    BYTE PTR [ecx]
  40f26d:	outs   dx,DWORD PTR ds:[esi]
  40f26e:	mov    ds:0xc6f615fa,eax
  40f273:	xor    eax,edi
  40f275:	jo     0x40f223
  40f277:	js     0x40f2e5
  40f279:	sar    BYTE PTR [eax],0x53
  40f27c:	push   ss
  40f27d:	ss sbb ebx,edx
  40f280:	sbb    eax,0x6ba45b1c
  40f286:	pop    es
  40f287:	scas   al,BYTE PTR es:[edi]
  40f288:	loope  0x40f243
  40f28a:	jne    0x40f275
  40f28c:	sbb    ch,BYTE PTR ds:[ebp+0x39aebba0]
  40f293:	adc    BYTE PTR [edx+0x51eea4ff],dl
  40f299:	and    ebx,DWORD PTR [ecx-0x66c5df71]
  40f29f:	loop   0x40f2e5
  40f2a1:	test   al,0x4e
  40f2a3:	aad    0x31
  40f2a5:	or     al,0x5b
  40f2a7:	neg    BYTE PTR [ebx-0x24722f6a]
  40f2ad:	xchg   BYTE PTR es:[eax],bl
  40f2b0:	jl     0x40f2cb
  40f2b2:	inc    ebx
  40f2b3:	in     al,dx
  40f2b4:	cmp    bh,bh
  40f2b6:	mov    esi,DWORD PTR [esi]
  40f2b8:	sub    bh,bl
  40f2ba:	ja     0x40f256
  40f2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2bd:	imul   edi,DWORD PTR [edx+eax*2+0x170573c7],0x973d4b8b
  40f2c8:	sbb    eax,0xbb8a816
  40f2cd:	shl    DWORD PTR es:[ebx-0x47ddd49b],1
  40f2d4:	retf   0xba6f
  40f2d7:	loop   0x40f2ec
  40f2d9:	ds aam 0xab
  40f2dc:	jmp    0x8c27:0x978279fd
  40f2e3:	cmp    ch,bl
  40f2e5:	push   0x7e
  40f2e7:	mov    ecx,0xa6454128
  40f2ec:	popa   
  40f2ed:	pop    ebp
  40f2ee:	push   esi
  40f2ef:	inc    edi
  40f2f0:	fimul  WORD PTR [edx+0x489c38a0]
  40f2f6:	in     al,dx
  40f2f7:	daa    
  40f2f8:	imul   esp,DWORD PTR [esp+edi*1-0x52dd88df],0xfffffff6
  40f300:	cmc    
  40f301:	stos   DWORD PTR es:[edi],eax
  40f302:	sub    eax,0x52d2da9d
  40f307:	adc    ch,BYTE PTR [edx+0x52]
  40f30a:	sbb    ecx,DWORD PTR [edx+0x5d780658]
  40f310:	mov    edi,0x8c060781
  40f315:	xchg   edx,eax
  40f316:	in     al,0x2d
  40f318:	and    BYTE PTR [edi-0x20],dl
  40f31b:	or     esp,DWORD PTR [eax-0x53]
  40f31e:	dec    eax
  40f31f:	jmp    0x40f300
  40f321:	adc    al,0x60
  40f323:	xchg   edx,eax
  40f324:	or     DWORD PTR [ecx],ebp
  40f326:	sti    
  40f327:	sub    DWORD PTR [eax-0x3f],eax
  40f32a:	lahf   
  40f32b:	sbb    eax,0x1c4de066
  40f330:	xchg   edi,eax
  40f331:	mov    BYTE PTR ds:[eax],dh
  40f334:	fstp   TBYTE PTR [ebx+0xa]
  40f337:	sbb    esp,esp
  40f339:	js     0x40f33d
  40f33b:	aaa    
  40f33c:	xchg   ebx,eax
  40f33d:	pop    ebx
  40f33e:	inc    ebp
  40f33f:	cmp    ah,al
  40f341:	dec    edi
  40f342:	out    dx,al
  40f343:	test   al,0x57
  40f345:	pusha  
  40f346:	adc    cl,BYTE PTR [edi]
  40f348:	imul   edx,DWORD PTR [ebx-0x47],0x54ba0d10
  40f34f:	mov    ah,0x74
  40f351:	xchg   edx,eax
  40f352:	add    BYTE PTR [esp+edx*8],dh
  40f355:	mov    edx,0x6c7ecec3
  40f35a:	rol    bl,0x4d
  40f35d:	jo     0x40f320
  40f35f:	or     eax,0xeb72d310
  40f364:	inc    eax
  40f365:	imul   eax,DWORD PTR [edx+0x3b],0xffffffbc
  40f369:	push   ebp
  40f36a:	in     al,dx
  40f36b:	inc    esi
  40f36c:	loope  0x40f346
  40f36e:	retf   
  40f36f:	jecxz  0x40f379
  40f371:	mov    eax,ds:0x642e3881
  40f376:	lock xchg ebx,eax
  40f378:	idiv   BYTE PTR [eax+0x7fe60524]
  40f37e:	cmp    DWORD PTR [eax-0x4f],0x415ea554
  40f385:	gs xchg ebp,eax
  40f387:	hlt    
  40f388:	adc    ebp,ebp
  40f38a:	shr    BYTE PTR [edi],1
  40f38c:	xor    ebx,esi
  40f38e:	push   es
  40f38f:	sub    al,0x43
  40f391:	mov    eax,esi
  40f393:	cdq    
  40f394:	xchg   ebp,eax
  40f395:	pushf  
  40f396:	sar    BYTE PTR [esi-0x6c9c4b1c],cl
  40f39c:	mov    edx,0xdefa608a
  40f3a1:	xlat   BYTE PTR ds:[ebx]
  40f3a2:	and    al,ch
  40f3a4:	sbb    DWORD PTR [ecx+0x4307b88c],ecx
  40f3aa:	sub    cl,BYTE PTR [edi+edi*8+0x19]
  40f3ae:	jae    0x40f34a
  40f3b0:	shr    eax,1
  40f3b2:	sub    edx,ebp
  40f3b4:	adc    al,0x53
  40f3b6:	inc    ecx
  40f3b7:	pushf  
  40f3b8:	push   es
  40f3b9:	dec    ebp
  40f3ba:	cli    
  40f3bb:	mov    eax,0x576a1d1f
  40f3c0:	(bad)  
  40f3c1:	cmp    cl,BYTE PTR [ebx]
  40f3c3:	mov    dl,0xd
  40f3c5:	aam    0x6
  40f3c7:	gs cmp eax,0x87b6d2ca
  40f3cd:	sbb    eax,0xd2f02331
  40f3d2:	sysret 
  40f3d4:	add    esi,DWORD PTR [ebp+0x26]
  40f3d7:	xchg   ecx,eax
  40f3d8:	or     eax,0x3f2a2e99
  40f3dd:	push   edi
  40f3de:	in     al,0xe4
  40f3e0:	out    dx,al
  40f3e1:	adc    edi,eax
  40f3e3:	push   es
  40f3e4:	ror    DWORD PTR [ebp+0x22018ac1],0x71
  40f3eb:	sub    DWORD PTR [edi-0x1d],esi
  40f3ee:	leave  
  40f3ef:	pop    ecx
  40f3f0:	or     DWORD PTR [ebx],0x8debf249
  40f3f6:	comiss xmm7,DWORD PTR [edi]
  40f3f9:	and    eax,0x27d1572
  40f3fe:	ins    DWORD PTR es:[edi],dx
  40f3ff:	cmp    eax,0xb43c0fa3
  40f404:	xor    DWORD PTR [ebp+0x400f0921],ebp
  40f40a:	mov    esp,0x5bb49fed
  40f40f:	adc    ebx,ecx
  40f411:	ret    
  40f412:	(bad)  
  40f413:	add    eax,0x23ca8095
  40f418:	pop    ds
  40f419:	push   ebp
  40f41a:	sub    eax,0x791ebfc
  40f41f:	mov    dh,0x5e
  40f421:	aas    
  40f422:	dec    edx
  40f423:	cmp    DWORD PTR [edx-0x3efd0058],esp
  40f429:	jge    0x40f42c
  40f42b:	or     ebp,eax
  40f42d:	push   edx
  40f42e:	push   0x3607f7e4
  40f433:	sub    ebp,ecx
  40f435:	fucom  st(0)
  40f437:	xor    al,0x35
  40f439:	mov    edi,fs
  40f43b:	je     0x40f3c7
  40f43d:	add    BYTE PTR [edi],bl
  40f43f:	adc    al,0xa7
  40f441:	test   BYTE PTR [edx],dh
  40f443:	add    eax,0x94135aa9
  40f448:	push   esp
  40f449:	out    dx,al
  40f44a:	dec    ecx
  40f44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44c:	(bad)  
  40f44d:	mov    eax,ebp
  40f44f:	or     DWORD PTR [edx+0x20dd68c0],0xa71dd40a
  40f459:	mov    DWORD PTR [ebp-0x1556cac4],esi
  40f45f:	mov    cl,0xbc
  40f461:	aas    
  40f462:	mov    edx,0x2c04b4c5
  40f467:	iret   
  40f468:	pop    edi
  40f469:	outs   dx,BYTE PTR ds:[esi]
  40f46a:	or     al,0xa7
  40f46c:	push   ss
  40f46d:	jle    0x40f474
  40f46f:	fadd   QWORD PTR [ecx+0x31]
  40f472:	or     eax,DWORD PTR [edx]
  40f474:	idiv   dh
  40f476:	pop    esi
  40f477:	and    al,BYTE PTR [esp+eax*4-0x4016a45]
  40f47e:	add    BYTE PTR [ebp-0x7209cb32],bl
  40f484:	pop    edi
  40f485:	sbb    eax,DWORD PTR [ebx+0x47df8aa0]
  40f48b:	mov    al,0x6e
  40f48d:	out    0xb3,eax
  40f48f:	sbb    eax,0x2f0928b9
  40f494:	cmp    BYTE PTR [esi+0x1cce00ab],al
  40f49a:	jle    0x40f46d
  40f49c:	mov    edx,0x93181730
  40f4a1:	xor    bh,BYTE PTR [esi-0x2dcc475b]
  40f4a7:	repnz mov ebp,0x1400745f
  40f4ad:	out    0x28,al
  40f4af:	jb     0x40f48b
  40f4b1:	test   DWORD PTR [ebx],ebp
  40f4b3:	mov    ds:0x951698a6,eax
  40f4b8:	push   ds
  40f4b9:	xor    eax,DWORD PTR [ecx+0x68]
  40f4bc:	fdiv   QWORD PTR [ebp+0xc]
  40f4bf:	pop    ds
  40f4c0:	jmp    0x40f4aa
  40f4c2:	dec    edi
  40f4c3:	into   
  40f4c4:	je     0xbd9add63
  40f4ca:	adc    bh,BYTE PTR ds:0x78a6a9c8
  40f4d0:	adc    esp,DWORD PTR [edi]
  40f4d2:	and    al,BYTE PTR [edi]
  40f4d4:	jb     0x40f52a
  40f4d6:	iret   
  40f4d7:	cdq    
  40f4d8:	dec    ebp
  40f4d9:	mov    BYTE PTR [ebx-0x13e40f8a],ah
  40f4df:	push   eax
  40f4e0:	mov    WORD PTR [ebp-0x51],ds
  40f4e3:	fisub  DWORD PTR [edx]
  40f4e5:	test   eax,0xfbdb089a
  40f4ea:	scas   eax,DWORD PTR es:[edi]
  40f4eb:	ins    DWORD PTR es:[edi],dx
  40f4ec:	lods   eax,DWORD PTR gs:[esi]
  40f4ee:	int    0x71
  40f4f0:	(bad)  
  40f4f1:	mov    ebx,0x63bf5710
  40f4f6:	aam    0xd6
  40f4f8:	rcr    ebx,cl
  40f4fa:	or     BYTE PTR [esi-0x25],ch
  40f4fd:	xchg   edx,eax
  40f4fe:	das    
  40f4ff:	mov    ds:0x2fed62be,al
  40f504:	xchg   DWORD PTR [edi-0x18e0a646],ecx
  40f50a:	cmp    edx,0x29
  40f50d:	pop    ss
  40f50e:	je     0x40f58d
  40f510:	xchg   esi,eax
  40f511:	mov    eax,ds:0x2ac8ff14
  40f516:	(bad)  
  40f517:	sbb    esp,DWORD PTR [ecx]
  40f519:	jmp    0xea12:0xec09b41b
  40f520:	sbb    eax,0x15f15a66
  40f525:	out    dx,al
  40f526:	jmp    0x6f5f:0xd6fa8e97
  40f52d:	mov    cl,0x84
  40f52f:	icebp  
  40f530:	ret    0xb289
  40f533:	int3   
  40f534:	xor    al,0x6
  40f536:	fdivrp st(4),st
  40f538:	retf   0xd7a2
  40f53b:	hlt    
  40f53c:	cmp    ecx,DWORD PTR [esi]
  40f53e:	stc    
  40f53f:	leave  
  40f540:	sbb    BYTE PTR [esi],dl
  40f542:	mov    dl,0xd8
  40f544:	pop    ds
  40f545:	xor    ch,al
  40f547:	inc    ecx
  40f548:	push   edx
  40f549:	mov    bl,0xef
  40f54b:	ds jbe 0x40f58c
  40f54e:	dec    esi
  40f54f:	ret    
  40f550:	out    0x72,eax
  40f552:	inc    ebx
  40f553:	idiv   DWORD PTR [ebx+0x3e]
  40f556:	dec    ebp
  40f557:	test   eax,0x4a7b1a35
  40f55c:	dec    edx
  40f55d:	push   ds
  40f55e:	inc    edx
  40f55f:	fs mov cl,0xa9
  40f562:	aam    0x15
  40f564:	xor    ebp,ebp
  40f566:	dec    edi
  40f567:	push   eax
  40f568:	into   
  40f569:	js     0x40f59a
  40f56b:	daa    
  40f56c:	cs push ss
  40f56e:	mul    BYTE PTR [edi+ebx*8]
  40f571:	push   edx
  40f572:	mov    gs,WORD PTR [edx+0x22257d44]
  40f578:	test   DWORD PTR [edx],edx
  40f57a:	lock sub DWORD PTR [ecx-0x23],eax
  40f57e:	dec    edx
  40f57f:	push   edx
  40f580:	ins    BYTE PTR es:[edi],dx
  40f581:	fsub   DWORD PTR [ecx-0x4]
  40f584:	icebp  
  40f585:	adc    bl,BYTE PTR [ecx+0x17]
  40f588:	loop   0x40f551
  40f58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f58b:	cld    
  40f58c:	sbb    ebp,DWORD PTR [eax+0x31]
  40f58f:	shl    dh,cl
  40f591:	mov    bh,0xba
  40f593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f594:	add    DWORD PTR [ecx-0xa6de869],esi
  40f59a:	pusha  
  40f59b:	push   ebp
  40f59c:	xchg   edx,eax
  40f59d:	and    esp,DWORD PTR ds:0x7ebae2f6
  40f5a3:	add    eax,0x7d563d2f
  40f5a8:	mov    BYTE PTR [eax-0x781f54e8],dh
  40f5ae:	push   ecx
  40f5af:	mov    edi,0x8771fc37
  40f5b4:	stos   DWORD PTR es:[edi],eax
  40f5b5:	mov    ds:0x3a46bfa2,eax
  40f5ba:	mov    al,0x56
  40f5bc:	xor    al,0x35
  40f5be:	inc    eax
  40f5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5c0:	stos   DWORD PTR es:[edi],eax
  40f5c1:	mov    ah,0x1e
  40f5c3:	sub    eax,DWORD PTR [esi]
  40f5c5:	pop    ebx
  40f5c6:	scas   al,BYTE PTR es:[edi]
  40f5c7:	icebp  
  40f5c8:	ss std 
  40f5ca:	int    0xc5
  40f5cc:	call   0x1106db34
  40f5d1:	sbb    ecx,ebp
  40f5d3:	xchg   DWORD PTR [edi],edi
  40f5d5:	dec    esi
  40f5d6:	mov    ebx,0x7e3dc176
  40f5db:	cs loopne 0x40f5e7
  40f5de:	add    edi,DWORD PTR [ebx+0x21045a]
  40f5e4:	adc    al,0xb8
  40f5e6:	aam    0x67
  40f5e8:	dec    ecx
  40f5e9:	cs nop
  40f5eb:	dec    ebx
  40f5ec:	enter  0xb31b,0x61
  40f5f0:	fadd   QWORD PTR [ecx+0x68]
  40f5f3:	aam    0x62
  40f5f5:	xchg   edx,eax
  40f5f6:	sbb    dh,BYTE PTR [ebp-0x71]
  40f5f9:	sub    ecx,DWORD PTR [ebx+esi*2+0x69e4bde4]
  40f600:	test   DWORD PTR [edx+0x22],edi
  40f603:	pop    edx
  40f604:	(bad)  
  40f606:	imul   ecx,DWORD PTR [esi+0x5f1b822e],0x40
  40f60d:	inc    ebx
  40f60e:	loopne 0x40f669
  40f610:	stos   DWORD PTR es:[edi],eax
  40f611:	mov    ecx,0x3ef6649a
  40f616:	lds    ebp,FWORD PTR es:[esi]
  40f619:	test   eax,0xb6e71d46
  40f61e:	(bad)  
  40f61f:	(bad)  
  40f620:	aam    0x33
  40f622:	fst    DWORD PTR ds:0x19eebf
  40f628:	ds pop eax
  40f62a:	pusha  
  40f62b:	pop    edi
  40f62c:	cld    
  40f62d:	mov    ds:0x99e7089c,eax
  40f632:	sbb    ecx,edx
  40f634:	or     edi,DWORD PTR ds:0xfc21970d
  40f63a:	xchg   DWORD PTR [edi],esp
  40f63c:	fwait
  40f63d:	(bad)  
  40f63e:	add    DWORD PTR [edi],0x9929e3d4
  40f644:	dec    esi
  40f645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f646:	cli    
  40f647:	jnp    0x40f6ad
  40f649:	push   ecx
  40f64a:	mov    dh,0x76
  40f64c:	jp     0x40f61e
  40f64e:	nop
  40f64f:	enter  0xc662,0xc5
  40f653:	ins    DWORD PTR es:[edi],dx
  40f654:	push   ds
  40f655:	clc    
  40f656:	(bad)  
  40f657:	jno    0x40f5df
  40f659:	icebp  
  40f65a:	cmp    BYTE PTR ds:0x9c82e1f7,bh
  40f660:	jl     0x40f6e0
  40f662:	enter  0x710,0xb6
  40f666:	dec    ebx
  40f667:	push   edi
  40f668:	inc    eax
  40f669:	dec    esp
  40f66a:	out    dx,al
  40f66b:	leave  
  40f66c:	call   0xcf098f71
  40f671:	mov    al,bh
  40f673:	in     al,0x84
  40f675:	jmp    0xe5f3:0x3d2d5a
  40f67c:	and    dl,BYTE PTR [ebx-0x170d9bc3]
  40f682:	stos   BYTE PTR es:[edi],al
  40f683:	fidivr DWORD PTR [eax+eiz*8]
  40f686:	or     al,0xb2
  40f688:	pusha  
  40f689:	or     edi,DWORD PTR [eax+0x23b7ab8c]
  40f68f:	bound  ecx,QWORD PTR [ecx-0x32]
  40f692:	(bad)  
  40f693:	addr16 fs xor eax,0xbb539292
  40f69a:	push   eax
  40f69b:	das    
  40f69c:	cmp    edi,DWORD PTR [edi]
  40f69e:	(bad)  
  40f69f:	push   esp
  40f6a0:	mov    dh,BYTE PTR [edi+0x1d17615d]
  40f6a6:	inc    ecx
  40f6a7:	sbb    dh,al
  40f6a9:	sbb    al,BYTE PTR [edi+0x1ef28772]
  40f6af:	ret    0xf5fc
  40f6b2:	push   ebp
  40f6b3:	rcr    ecx,cl
  40f6b5:	imul   edi,ebp,0x28e7c3e8
  40f6bb:	mov    ah,0x69
  40f6bd:	repnz adc edi,ebx
  40f6c0:	das    
  40f6c1:	cmp    ah,BYTE PTR [esi-0x6b9a9b22]
  40f6c7:	jmp    0x40f702
  40f6c9:	out    0x2d,al
  40f6cb:	add    eax,0xc46d0f15
  40f6d0:	mov    bl,0x75
  40f6d2:	aam    0x31
  40f6d4:	aad    0x59
  40f6d6:	outs   dx,DWORD PTR ds:[esi]
  40f6d7:	ins    BYTE PTR es:[edi],dx
  40f6d8:	jno    0x40f748
  40f6da:	or     eax,edi
  40f6dc:	mov    edx,0x78748305
  40f6e1:	scas   eax,DWORD PTR es:[edi]
  40f6e2:	push   es
  40f6e3:	cld    
  40f6e4:	cli    
  40f6e5:	jg     0x40f6ab
  40f6e7:	data16 (bad) 
  40f6e9:	mov    dl,0x3b
  40f6eb:	ret    0x1928
  40f6ee:	jno    0x40f6a0
  40f6f0:	outs   dx,DWORD PTR ds:[esi]
  40f6f1:	jno    0x40f6ee
  40f6f3:	sub    dl,BYTE PTR [edx]
  40f6f5:	mov    ds:0x568691ab,al
  40f6fa:	jnp    0x40f6ac
  40f6fc:	fsubr  DWORD PTR [edx+0xf]
  40f6ff:	loope  0x40f6f6
  40f701:	xchg   ebp,eax
  40f702:	test   al,0x90
  40f704:	hlt    
  40f705:	mov    esp,0x8d2b4fe
  40f70a:	imul   edx,DWORD PTR [eax],0xa00be2c3
  40f710:	call   FWORD PTR [edx-0x5b50510b]
  40f716:	jb     0x40f788
  40f718:	daa    
  40f719:	cmp    edx,DWORD PTR [ecx+esi*4+0x63fe0a3]
  40f720:	inc    esi
  40f721:	add    al,0x12
  40f723:	mov    esp,0xf251d16b
  40f728:	int    0x72
  40f72a:	imul   eax,eax,0xffffffbe
  40f72d:	adc    BYTE PTR [edi+edx*1],cl
  40f730:	push   edx
  40f731:	aaa    
  40f732:	lods   eax,DWORD PTR ds:[esi]
  40f733:	jl     0x40f6f1
  40f735:	jo     0x40f79c
  40f737:	scas   eax,DWORD PTR es:[edi]
  40f738:	cmp    eax,edi
  40f73a:	mov    DWORD PTR [edi-0x4fbbd14f],ebx
  40f740:	rol    bl,1
  40f742:	or     BYTE PTR [ebp+0x57],0xac
  40f746:	ins    BYTE PTR es:[edi],dx
  40f747:	imul   eax,eax,0x94fa5a95
  40f74d:	(bad)
  40f750:	repnz and edx,DWORD PTR [esi-0x144d4f4]
  40f757:	rol    dl,cl
  40f759:	jb     0x40f7a9
  40f75b:	pop    ebp
  40f75c:	jno    0x40f77b
  40f75e:	dec    esp
  40f75f:	xor    cl,0xa8
  40f762:	int3   
  40f763:	in     eax,dx
  40f764:	sub    DWORD PTR [ecx+0x450ac516],eax
  40f76a:	sbb    eax,0xe70ea1ab
  40f76f:	and    ah,0xc2
  40f772:	scas   eax,DWORD PTR es:[edi]
  40f773:	add    eax,0x635889e5
  40f778:	iret   
  40f779:	sar    ecx,1
  40f77b:	add    BYTE PTR [edx+0x4f],al
  40f77e:	mov    ds:0x58aa84a0,eax
  40f783:	push   es
  40f784:	sbb    eax,0xed1574a3
  40f789:	inc    esi
  40f78a:	xor    al,0x15
  40f78c:	mov    WORD PTR [esi+0x66c08a02],cs
  40f792:	or     dh,BYTE PTR [ebx+0x7c]
  40f795:	in     eax,0xe9
  40f797:	fisub  DWORD PTR [ebx-0x778894bc]
  40f79d:	cmp    BYTE PTR [ecx+0x780a3b1b],bl
  40f7a3:	aad    0x28
  40f7a5:	cmc    
  40f7a6:	mov    dh,0xea
  40f7a8:	sub    al,0x4d
  40f7aa:	jo     0x40f7ab
  40f7ac:	xchg   ecx,eax
  40f7ad:	mov    ecx,es
  40f7af:	mov    ecx,0x1dd5e941
  40f7b4:	jecxz  0x40f7e0
  40f7b6:	push   edx
  40f7b7:	or     al,0xd4
  40f7b9:	test   al,bh
  40f7bb:	or     BYTE PTR [edi+0x404d2158],bl
  40f7c1:	mov    bh,0xd2
  40f7c3:	push   cs
  40f7c4:	lock (bad) 
  40f7c6:	pop    edx
  40f7c7:	dec    ecx
  40f7c9:	retf   0x1d2d
  40f7cc:	in     al,0x6c
  40f7ce:	aad    0x6a
  40f7d0:	cmp    BYTE PTR [edx-0x16],al
  40f7d3:	mov    cl,0x7d
  40f7d5:	sbb    cl,dh
  40f7d7:	inc    edx
  40f7d8:	fistp  QWORD PTR fs:[ebx]
  40f7db:	clc    
  40f7dc:	mov    ah,0xd5
  40f7de:	lahf   
  40f7df:	add    DWORD PTR [eax-0x5],ebx
  40f7e2:	stc    
  40f7e3:	(bad)  [edx+0x621b653c]
  40f7e9:	jmp    0xdf6284eb
  40f7ee:	jecxz  0x40f806
  40f7f0:	mov    eax,ds:0xe8b4756c
  40f7f5:	add    edx,ecx
  40f7f7:	xchg   BYTE PTR [esi+0x5b51e2a],bh
  40f7fd:	pop    ds
  40f7fe:	retf   
  40f7ff:	mov    edx,0x6d2c305
  40f804:	sbb    ah,al
  40f806:	shl    BYTE PTR [edx-0x61a5bdd0],0xaa
  40f80d:	cdq    
  40f80e:	sbb    BYTE PTR [ebp+0x2f],0x48
  40f812:	fs xchg edi,eax
  40f814:	lods   al,BYTE PTR ds:[esi]
  40f815:	mov    dl,0xdb
  40f817:	movnti DWORD PTR [ebx+0x6e546528],edx
  40f81e:	in     al,dx
  40f81f:	push   esp
  40f820:	xor    edx,DWORD PTR [edx-0x74ac2686]
  40f826:	and    bh,BYTE PTR [esp+ecx*2+0x19641565]
  40f82d:	add    ecx,edx
  40f82f:	mov    dh,0x85
  40f831:	add    BYTE PTR [ecx],dh
  40f833:	ret    0x1055
  40f836:	imul   ecx,esp,0x3d
  40f839:	int    0x8c
  40f83b:	or     esi,ebx
  40f83d:	push   0x62d512ec
  40f842:	push   ecx
  40f843:	call   0x64c7988c
  40f848:	call   0x95ef:0xce23f1e1
  40f84f:	mov    ds:0x5cef0c1a,eax
  40f854:	ret    0x2f54
  40f857:	mov    al,ds:0x199a8219
  40f85c:	sub    al,0x5
  40f85e:	out    dx,eax
  40f85f:	xchg   ebx,eax
  40f860:	(bad)  
  40f861:	mov    dl,0xa
  40f863:	scas   eax,DWORD PTR es:[edi]
  40f864:	mov    ebp,0x76f2f30
  40f869:	or     al,ah
  40f86b:	pop    ebp
  40f86c:	pop    esp
  40f86d:	add    al,0x64
  40f86f:	jl     0x40f8cd
  40f871:	mov    ebx,0x10fd359f
  40f876:	fidivr WORD PTR [edx+edx*1+0x598a3f06]
  40f87d:	shl    BYTE PTR [esi+0x40],1
  40f880:	xor    edx,DWORD PTR [esi-0x185779da]
  40f886:	push   eax
  40f887:	mov    al,BYTE PTR ds:0xdb784278
  40f88d:	jmp    0x540be945
  40f892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f893:	or     al,BYTE PTR [edx+0x734557dd]
  40f899:	mov    ds:0x72cbf6bc,al
  40f89e:	lea    ebp,[eax-0x27]
  40f8a1:	dec    edi
  40f8a2:	sti    
  40f8a3:	jo     0x40f885
  40f8a5:	and    bh,BYTE PTR [ebx+0x35d54ba9]
  40f8ab:	dec    esi
  40f8ac:	and    DWORD PTR [esi],0xbc340eb
  40f8b2:	jmp    0x90396e0c
  40f8b7:	les    ebx,FWORD PTR [ebx-0x3691b6af]
  40f8bd:	pop    ecx
  40f8be:	pop    eax
  40f8bf:	fbld   TBYTE PTR [ebx]
  40f8c1:	mov    ds:0x49d12f09,eax
  40f8c6:	das    
  40f8c7:	fmul   QWORD PTR [edx-0x2f1e3d7e]
  40f8cd:	adc    al,0xc0
  40f8cf:	and    eax,0xd85316c1
  40f8d4:	test   al,0xce
  40f8d6:	hlt    
  40f8d7:	fidivr DWORD PTR [edi]
  40f8d9:	mov    eax,?
  40f8db:	dec    esi
  40f8dc:	rol    BYTE PTR [edx+edi*8+0x1268caca],1
  40f8e3:	ret    
  40f8e4:	into   
  40f8e5:	sbb    dl,BYTE PTR [edi-0x6b]
  40f8e8:	in     al,0xc8
  40f8ea:	mov    bh,0x33
  40f8ec:	xchg   edi,eax
  40f8ed:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40f8ef:	fldenv [ebp+0x4c]
  40f8f2:	xor    ah,BYTE PTR [ebx+eiz*1+0x63]
  40f8f6:	imul   eax,DWORD PTR [esi-0x4fe08a15],0x27
  40f8fd:	imul   BYTE PTR [ebx]
  40f8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f900:	jno    0x40f927
  40f902:	sub    eax,0x8ade4d9d
  40f907:	shl    DWORD PTR [ecx-0x507f208d],cl
  40f90d:	push   ss
  40f90e:	mov    dh,0xe8
  40f910:	(bad)  
  40f912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f913:	inc    ecx
  40f914:	loopne 0x40f8ae
  40f916:	adc    BYTE PTR [ebx-0x47308d5a],0x91
  40f91d:	and    eax,0x8bda3bed
  40f922:	xchg   edx,eax
  40f923:	int3   
  40f924:	bound  edx,QWORD PTR [esi+edx*1]
  40f927:	addr16 lahf 
  40f929:	lods   al,BYTE PTR ds:[esi]
  40f92a:	add    BYTE PTR [edx+0x71],ch
  40f92d:	push   cs
  40f92e:	sbb    DWORD PTR [eax],esp
  40f930:	jp     0x40f90d
  40f932:	adc    edx,DWORD PTR [edi]
  40f934:	mov    ch,0xf1
  40f936:	sub    ch,BYTE PTR [eax]
  40f938:	mov    ds:0x43c97782,eax
  40f93d:	pop    ebx
  40f93e:	(bad)  
  40f93f:	xlat   BYTE PTR ds:[ebx]
  40f940:	sti    
  40f941:	test   ch,cl
  40f943:	jg     0x40f91c
  40f945:	xor    eax,ecx
  40f947:	inc    eax
  40f948:	call   0x21bd:0x1456fad0
  40f94f:	hlt    
  40f950:	in     al,dx
  40f951:	xchg   esp,eax
  40f952:	pusha  
  40f953:	imul   ebp,DWORD PTR [ebx],0xffffffe0
  40f956:	(bad)  
  40f957:	mov    dh,0x7f
  40f959:	sahf   
  40f95a:	mov    al,ds:0xc725f9b1
  40f95f:	mov    ds:0x544b9041,al
  40f964:	sbb    ah,BYTE PTR [eax-0x7627362]
  40f96a:	sub    eax,esp
  40f96c:	adc    DWORD PTR [ebx+ebx*4+0xb],ebx
  40f970:	in     al,0xcb
  40f972:	repnz mov ebp,0xc7d4c366
  40f978:	lea    ebp,[edx-0x2f]
  40f97b:	lahf   
  40f97c:	pop    ecx
  40f97d:	mov    al,ds:0x7da5afdf
  40f982:	mov    bl,0xeb
  40f984:	or     al,0xea
  40f986:	(bad)  
  40f987:	push   0x30
  40f989:	dec    edi
  40f98a:	in     al,dx
  40f98b:	xor    bh,BYTE PTR [edx+0x13f64c79]
  40f991:	pop    ss
  40f992:	out    dx,al
  40f993:	inc    ebp
  40f994:	dec    ecx
  40f995:	jne    0x40f969
  40f997:	or     eax,0x7e50d564
  40f99c:	jno    0x40f985
  40f99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f99f:	xor    ebx,DWORD PTR [edi+eax*2+0xd055f43]
  40f9a6:	dec    edi
  40f9a7:	ret    0x7a46
  40f9aa:	and    eax,0x91f3785a
  40f9af:	out    0xf9,eax
  40f9b1:	test   eax,0x1b16ca2a
  40f9b6:	call   0x3e24:0xa19e0eb3
  40f9bd:	les    esi,FWORD PTR [ecx-0x2e]
  40f9c0:	mov    eax,ds:0xd162beb6
  40f9c5:	jp     0x40fa3b
  40f9c7:	xor    esi,edi
  40f9c9:	je     0x40f956
  40f9cb:	cmp    al,0xdc
  40f9cd:	arpl   WORD PTR [eax-0x13],di
  40f9d0:	adc    al,0x12
  40f9d2:	push   ecx
  40f9d3:	clc    
  40f9d4:	jb     0x40fa26
  40f9d6:	or     DWORD PTR [esp+ebp*1+0x6463ad80],edx
  40f9dd:	pushf  
  40f9de:	cs popa 
  40f9e0:	gs sti 
  40f9e2:	(bad)  
  40f9e4:	call   0xf9e1:0x942035d6
  40f9eb:	leave  
  40f9ec:	xchg   esp,eax
  40f9ed:	jle    0x40f9f4
  40f9ef:	cwde   
  40f9f0:	das    
  40f9f1:	shr    esi,0xd8
  40f9f4:	sub    DWORD PTR [edx-0x4d],edi
  40f9f7:	rcr    BYTE PTR [esi],cl
  40f9f9:	addr16 inc esp
  40f9fb:	jl     0x40fa4b
  40f9fd:	dec    esi
  40f9fe:	fisttp WORD PTR [edx-0x707b4c82]
  40fa04:	fwait
  40fa05:	add    eax,0x4665297b
  40fa0a:	(bad)  
  40fa0c:	push   0x3e
  40fa0e:	sbb    bl,dl
  40fa10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa11:	add    ebx,DWORD PTR [edx+eiz*2]
  40fa14:	neg    ebp
  40fa16:	popf   
  40fa17:	in     eax,0xb6
  40fa19:	outs   dx,BYTE PTR ds:[esi]
  40fa1a:	or     eax,0x87ec1d0f
  40fa1f:	push   ebx
  40fa20:	jle    0x40f9f3
  40fa22:	cmp    DWORD PTR [edx-0x6e09b369],edi
  40fa28:	dec    DWORD PTR [ebp-0x7d668601]
  40fa2e:	popa   
  40fa2f:	sbb    al,0x7f
  40fa31:	sbb    bl,ah
  40fa33:	cwde   
  40fa34:	mov    fs,WORD PTR ds:0xfec8f33b
  40fa3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa3b:	(bad)  
  40fa3c:	mul    BYTE PTR ds:[ebp+0x993d4c5]
  40fa43:	test   al,dh
  40fa45:	inc    eax
  40fa46:	pop    edx
  40fa47:	fldcw  WORD PTR [edx+0x1ebe7dad]
  40fa4d:	ins    DWORD PTR es:[edi],dx
  40fa4e:	arpl   WORD PTR [edi-0x66f8b0a9],dx
  40fa54:	lds    edx,FWORD PTR [eax-0x1b]
  40fa57:	or     esp,edx
  40fa59:	test   eax,0x7e583315
  40fa5e:	mov    bh,0xc7
  40fa60:	xchg   esi,eax
  40fa61:	adc    eax,0xfb9740a2
  40fa66:	popa   
  40fa67:	push   bp
  40fa69:	xchg   ebp,eax
  40fa6a:	repz (bad) 
  40fa6c:	hlt    
  40fa6d:	aaa    
  40fa6e:	cwde   
  40fa6f:	or     ah,BYTE PTR [eax+0x20]
  40fa72:	sbb    esi,ebx
  40fa74:	inc    ebx
  40fa75:	push   cs
  40fa76:	sub    DWORD PTR [esi+0x7665b02c],ebx
  40fa7c:	scas   al,BYTE PTR es:[edi]
  40fa7d:	adc    eax,ebp
  40fa7f:	adc    BYTE PTR [esi+0x42],bh
  40fa82:	inc    edx
  40fa83:	mov    al,0x20
  40fa85:	xchg   ebp,eax
  40fa86:	push   ds
  40fa87:	stos   DWORD PTR es:[edi],eax
  40fa88:	push   esi
  40fa89:	and    al,al
  40fa8b:	fucom  st(1)
  40fa8d:	mov    ebx,0xb57a1b6c
  40fa92:	xchg   edi,eax
  40fa93:	lods   al,BYTE PTR ds:[esi]
  40fa94:	push   esi
  40fa95:	lahf   
  40fa96:	cmp    al,0xc0
  40fa98:	xchg   edx,eax
  40fa99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa9a:	mov    ebx,0x63c3b74c
  40fa9f:	mov    DWORD PTR [ebp+0x24],ebx
  40faa2:	call   FWORD PTR es:[ebp-0x71]
  40faa6:	push   ss
  40faa7:	or     edi,esp
  40faa9:	mov    ds,WORD PTR [esi+ecx*8-0x4101777]
  40fab0:	mov    al,0xc7
  40fab2:	push   es
  40fab3:	call   0xc1b3:0x84564ff5
  40faba:	push   edx
  40fabb:	dec    esi
  40fabc:	fwait
  40fabd:	in     al,0xa8
  40fabf:	cwde   
  40fac0:	retf   0x8b33
  40fac3:	jne    0x40fadf
  40fac5:	inc    ebp
  40fac6:	or     al,0x4f
  40fac8:	pop    ebx
  40fac9:	aas    
  40faca:	in     al,0x0
  40facc:	das    
  40facd:	sub    DWORD PTR [eax-0x58ea1a4e],edx
  40fad3:	(bad)  
  40fad4:	xor    BYTE PTR [eax],al
  40fad6:	mov    ebx,0xbd8a53eb
  40fadb:	into   
  40fadc:	das    
  40fadd:	adc    BYTE PTR [edi-0xcb3c43f],ch
  40fae3:	inc    esi
  40fae4:	jo     0x40fa7c
  40fae6:	mov    edx,?
  40fae8:	dec    eax
  40fae9:	shl    BYTE PTR [eax+0x34],0x1f
  40faed:	outs   dx,DWORD PTR ds:[esi]
  40faee:	outs   dx,BYTE PTR ds:[esi]
  40faef:	xor    DWORD PTR ds:0xd1f10ebf,edx
  40faf5:	aas    
  40faf6:	sbb    BYTE PTR [ebp+0x55],bl
  40faf9:	jb     0x40fb74
  40fafb:	rcr    BYTE PTR [esi-0x1c],1
  40fafe:	xchg   ebx,eax
  40faff:	ret    
  40fb00:	jno    0x40fb20
  40fb02:	fsubr  DWORD PTR [ebx-0x2c55a75c]
  40fb08:	popa   
  40fb09:	(bad)  
  40fb0a:	mov    DWORD PTR [esi],esi
  40fb0c:	jg     0x40fb04
  40fb0e:	scas   al,BYTE PTR es:[edi]
  40fb0f:	and    al,BYTE PTR [edi+0x70639498]
  40fb15:	pop    es
  40fb16:	addr16 int3 
  40fb18:	outs   dx,DWORD PTR ds:[esi]
  40fb19:	rol    BYTE PTR [eax],1
  40fb1b:	ret    0xea60
  40fb1e:	jns    0x40fb66
  40fb20:	popf   
  40fb21:	inc    esi
  40fb22:	and    eax,0x3ee66300
  40fb27:	adc    bh,dh
  40fb29:	xor    bh,BYTE PTR [edi+0x34]
  40fb2c:	fisubr WORD PTR [edi+ecx*8-0x1e08fdfe]
  40fb34:	add    al,0x3c
  40fb36:	add    eax,0x8e444ec4
  40fb3b:	mov    edx,0xcf82ea6
  40fb40:	(bad)  
  40fb41:	xchg   ecx,eax
  40fb42:	test   BYTE PTR [edi-0x1faa7a08],al
  40fb48:	bound  ebp,QWORD PTR [eax]
  40fb4a:	addr16 dec ebp
  40fb4c:	mov    esi,0x38e71d4f
  40fb51:	mov    al,ds:0xe9aa871d
  40fb56:	add    al,0xd7
  40fb58:	push   ebp
  40fb59:	aad    0xe7
  40fb5b:	daa    
  40fb5c:	sbb    al,0x5f
  40fb5e:	cdq    
  40fb5f:	jp     0x40faee
  40fb61:	aas    
  40fb62:	xor    DWORD PTR [eax+0x68],ebp
  40fb65:	test   al,0xfa
  40fb67:	inc    eax
  40fb68:	(bad)  
  40fb6b:	pop    ebx
  40fb6c:	cmp    DWORD PTR ds:0x97896194,ebx
  40fb72:	lahf   
  40fb73:	mov    ah,0xb8
  40fb75:	sub    cl,al
  40fb77:	arpl   WORD PTR [eax-0x47],di
  40fb7a:	jecxz  0x40fba7
  40fb7c:	addr16 mov ebp,0x9cc321fb
  40fb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb83:	ss shl esp,0xf3
  40fb87:	jnp    0x40fba2
  40fb89:	shl    DWORD PTR [edx-0x100bdae7],cl
  40fb8f:	xor    al,BYTE PTR [esp+eax*8]
  40fb92:	mov    al,ch
  40fb94:	aaa    
  40fb95:	sbb    ch,dh
  40fb97:	pop    esp
  40fb98:	fnstsw WORD PTR [edi+0x72e71243]
  40fb9e:	ror    BYTE PTR [eax+0x23434209],0x8e
  40fba5:	jge    0x40fb62
  40fba7:	xchg   edi,eax
  40fba8:	xchg   BYTE PTR [ecx],ah
  40fbaa:	frstor [esp+edx*1]
  40fbad:	xor    al,0x65
  40fbaf:	jbe    0x40fb4c
  40fbb1:	add    eax,0x4714f13a
  40fbb6:	sub    ebx,DWORD PTR [ebp-0x4d]
  40fbb9:	jge    0x40fc2c
  40fbbb:	arpl   WORD PTR [ebx-0x3f],bx
  40fbbe:	or     bl,ch
  40fbc0:	mov    ds:0xcfc92c23,al
  40fbc5:	push   ebp
  40fbc6:	call   0xf293:0x579039b2
  40fbcd:	xchg   edi,eax
  40fbce:	mul    BYTE PTR [ecx-0x16e9ccef]
  40fbd4:	bound  eax,QWORD PTR [eax]
  40fbd6:	dec    edi
  40fbd7:	sub    ebp,DWORD PTR [ebp+eax*4-0xf]
  40fbdb:	ror    DWORD PTR [ecx],cl
  40fbdd:	test   eax,0xb8bd7390
  40fbe2:	cmp    ch,BYTE PTR [edi]
  40fbe4:	push   esp
  40fbe5:	fs enter 0x299,0xc8
  40fbea:	sub    eax,0xdf5ae4fc
  40fbef:	mov    al,BYTE PTR [esi]
  40fbf1:	repz pop edx
  40fbf3:	sbb    BYTE PTR [eax+0x6ba0d706],bh
  40fbf9:	shr    DWORD PTR [ebp-0x2],cl
  40fbfc:	iret   
  40fbfd:	pop    ds
  40fbfe:	or     eax,0x6e5ce98e
  40fc03:	dec    esp
  40fc04:	stos   BYTE PTR es:[edi],al
  40fc05:	ret    0xf0dd
  40fc08:	int3   
  40fc09:	sbb    edx,DWORD PTR [esi+0x60]
  40fc0c:	pop    esp
  40fc0d:	out    dx,al
  40fc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc0f:	out    0x12,eax
  40fc11:	push   esi
  40fc12:	mov    DWORD PTR [ecx],ebp
  40fc14:	or     esi,ecx
  40fc16:	push   0xc61b4809
  40fc1b:	xchg   BYTE PTR [edi+0x2d867e38],cl
  40fc21:	loop   0x40fbaa
  40fc23:	in     eax,0x32
  40fc25:	xor    eax,DWORD PTR [edi+edi*2+0x4f10b634]
  40fc2c:	inc    edi
  40fc2d:	inc    ebx
  40fc2e:	mov    al,ds:0x56c25801
  40fc33:	cmp    al,0x3a
  40fc35:	hlt    
  40fc36:	xor    al,0x4f
  40fc38:	out    0x69,eax
  40fc3a:	add    eax,0xb5b68b31
  40fc3f:	inc    esp
  40fc40:	pop    ds
  40fc41:	arpl   WORD PTR [esi+ecx*4+0x3b],si
  40fc45:	into   
  40fc46:	mov    cl,0xe0
  40fc48:	mov    ds:0xf76b3435,eax
  40fc4d:	xchg   edx,eax
  40fc4e:	(bad)  
  40fc4f:	pusha  
  40fc50:	inc    BYTE PTR [edx+0x3dd4e921]
  40fc56:	fs xchg ebp,eax
  40fc58:	sahf   
  40fc59:	clc    
  40fc5a:	mov    ebx,ebp
  40fc5c:	jl     0x40fbe9
  40fc5e:	mov    dl,0xcf
  40fc60:	bound  esi,QWORD PTR [eax-0x1b46c384]
  40fc66:	push   esi
  40fc67:	sub    al,0x2d
  40fc69:	lock repnz and esi,ebp
  40fc6d:	add    al,0x73
  40fc6f:	cmp    DWORD PTR [ecx+0x62],esi
  40fc72:	jno    0x40fc99
  40fc74:	jae    0x40fcdd
  40fc76:	pop    ss
  40fc77:	xchg   DWORD PTR [eax-0x6235a47],edi
  40fc7d:	sbb    DWORD PTR [edx],ebx
  40fc7f:	gs fs inc ebp
  40fc82:	(bad)  
  40fc83:	icebp  
  40fc84:	push   edi
  40fc85:	mul    ebx
  40fc87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc88:	jl     0x40fc4d
  40fc8a:	pop    ebx
  40fc8b:	out    dx,eax
  40fc8c:	jb     0x40fcd0
  40fc8e:	xchg   edx,eax
  40fc8f:	push   eax
  40fc90:	inc    eax
  40fc91:	pop    esi
  40fc92:	fcmove st,st(3)
  40fc94:	jp     0x40fd0c
  40fc96:	fnstsw WORD PTR [esi-0x26]
  40fc99:	cmp    al,0x47
  40fc9b:	popf   
  40fc9c:	adc    al,0xe8
  40fc9e:	or     edx,DWORD PTR [ebp-0x79]
  40fca1:	and    DWORD PTR [ecx],ecx
  40fca3:	les    esi,FWORD PTR [ecx+0x63]
  40fca6:	push   cs
  40fca7:	cwde   
  40fca8:	push   ss
  40fca9:	pop    edx
  40fcaa:	push   eax
  40fcab:	aas    
  40fcac:	dec    esp
  40fcad:	pop    edi
  40fcae:	or     al,0x1c
  40fcb0:	jg     0x40fcfc
  40fcb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb3:	sti    
  40fcb4:	mov    ebx,0x63d58e26
  40fcb9:	ss icebp 
  40fcbb:	or     DWORD PTR [esp+edx*2+0x40],esi
  40fcbf:	xor    BYTE PTR [edx-0x2c],bh
  40fcc2:	ins    BYTE PTR es:[edi],dx
  40fcc3:	outs   dx,BYTE PTR ds:[esi]
  40fcc4:	adc    ch,BYTE PTR ds:0xbe620050
  40fcca:	sar    ebx,1
  40fccc:	add    BYTE PTR [ecx],bl
  40fcce:	lahf   
  40fccf:	icebp  
  40fcd0:	jnp    0x40fc6a
  40fcd2:	jmp    0x197e:0x7fcbeb2a
  40fcd9:	ds pop ds
  40fcdb:	pusha  
  40fcdc:	adc    eax,0xaa6351e7
  40fce1:	push   esi
  40fce2:	mov    dl,0x6f
  40fce4:	lock lods eax,DWORD PTR ds:[si]
  40fce7:	out    0x7a,eax
  40fce9:	xchg   ecx,eax
  40fcea:	push   esp
  40fceb:	sbb    dl,BYTE PTR [edi-0x6a]
  40fcee:	das    
  40fcef:	add    DWORD PTR [ebp-0x3a],edx
  40fcf2:	mov    ds:0xb143537e,al
  40fcf7:	add    eax,0xe58dddae
  40fcfc:	enter  0x72cd,0x47
  40fd00:	scas   eax,DWORD PTR es:[edi]
  40fd01:	call   0x86894ec
  40fd06:	into   
  40fd07:	xor    al,0x2f
  40fd09:	aaa    
  40fd0a:	push   0xffffffb7
  40fd0c:	retf   0xba84
  40fd0f:	cli    
  40fd10:	or     BYTE PTR [ebx],ch
  40fd12:	lods   eax,DWORD PTR ds:[esi]
  40fd13:	mov    esp,0xc06abb32
  40fd18:	jle    0x40fcdb
  40fd1a:	xchg   esi,eax
  40fd1b:	sahf   
  40fd1c:	rcl    dl,cl
  40fd1e:	lods   al,BYTE PTR ds:[esi]
  40fd1f:	fnstsw WORD PTR [esp+ebp*8-0x18791e64]
  40fd26:	loop   0x40fd35
  40fd28:	inc    edx
  40fd29:	pop    es
  40fd2a:	popf   
  40fd2b:	ret    
  40fd2c:	pusha  
  40fd2d:	es arpl dx,bp
  40fd30:	sbb    ebp,DWORD PTR [ecx+0x51]
  40fd33:	(bad)  
  40fd34:	ds dec edx
  40fd36:	inc    eax
  40fd37:	sbb    BYTE PTR [edi],dl
  40fd39:	jle    0x40fcef
  40fd3b:	out    0x52,eax
  40fd3d:	or     DWORD PTR [ebp+0x6b6cf3cf],edx
  40fd43:	xor    dh,BYTE PTR [ebx-0x5ff1d5c7]
  40fd49:	mov    bh,0x41
  40fd4b:	jne    0x40fd74
  40fd4d:	pop    ds
  40fd4e:	iret   
  40fd4f:	mov    fs,WORD PTR [ebx+0x52]
  40fd52:	cmp    ecx,ebx
  40fd54:	cmp    BYTE PTR [ecx+ecx*8],0x81
  40fd58:	mov    bl,0x9d
  40fd5a:	and    DWORD PTR [ebp-0x7fec9f79],ecx
  40fd60:	jns    0x40fdae
  40fd62:	(bad)  
  40fd63:	jbe    0x40fd18
  40fd65:	pop    ebx
  40fd66:	int    0x52
  40fd68:	pop    edi
  40fd69:	test   BYTE PTR [ecx-0x27],dh
  40fd6c:	and    BYTE PTR [bp+di-0x4a],al
  40fd70:	and    ah,BYTE PTR [edi+0x36]
  40fd73:	mov    dl,BYTE PTR [ebx-0x31]
  40fd76:	pop    eax
  40fd77:	js     0x40fd3a
  40fd79:	cs pop eax
  40fd7b:	pop    eax
  40fd7c:	daa    
  40fd7d:	jmp    0x40fdce
  40fd7f:	fidiv  WORD PTR [edx]
  40fd81:	es mov ah,0x21
  40fd84:	inc    ebx
  40fd85:	push   ecx
  40fd86:	jo     0x40fd13
  40fd88:	or     al,0x76
  40fd8a:	in     eax,0x8f
  40fd8c:	or     al,0x5d
  40fd8e:	fisttp WORD PTR [edx+0x7d]
  40fd91:	in     eax,dx
  40fd92:	sub    esi,0xffffffd2
  40fd95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd97:	cmp    bl,BYTE PTR [ecx]
  40fd99:	and    edi,DWORD PTR [ecx+0x731bbff0]
  40fd9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda0:	(bad)  
  40fda1:	std    
  40fda2:	nop
  40fda3:	pop    esi
  40fda4:	es cdq 
  40fda6:	adc    dh,BYTE PTR [esi+0x1eb6f246]
  40fdac:	add    dl,BYTE PTR [eax+0x713de540]
  40fdb2:	add    DWORD PTR [edx-0x7f],0xd7fdbd67
  40fdb9:	ds ja  0x40fd7a
  40fdbc:	mov    DWORD PTR [ebx-0x5d],ebx
  40fdbf:	in     eax,dx
  40fdc0:	jae    0x40fd46
  40fdc2:	(bad)  
  40fdc3:	ss cli 
  40fdc5:	and    esp,DWORD PTR ds:0xea7cb3ab
  40fdcb:	sub    DWORD PTR [edi-0x5ba1898],ecx
  40fdd1:	push   ds
  40fdd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdd3:	dec    ebp
  40fdd4:	sub    esi,DWORD PTR ds:0xbe0b5e5d
  40fdda:	add    BYTE PTR [ebx-0x1e761bee],bh
  40fde0:	pop    ecx
  40fde1:	shl    DWORD PTR [ecx+0x73],0x81
  40fde5:	add    eax,DWORD PTR ds:0x93282522
  40fdeb:	pop    eax
  40fdec:	scas   eax,DWORD PTR es:[edi]
  40fded:	jl     0x40fe5d
  40fdef:	xor    eax,0x2cb75dad
  40fdf4:	icebp  
  40fdf5:	add    BYTE PTR [edi-0x70],bl
  40fdf8:	fcmovne st,st(4)
  40fdfa:	faddp  st(4),st
  40fdfc:	dec    edi
  40fdfd:	pop    ss
  40fdfe:	pop    edi
  40fdff:	jbe    0x40fe6c
  40fe01:	mov    BYTE PTR [esi],dh
  40fe03:	rcr    DWORD PTR [ebx],0x21
  40fe06:	inc    ecx
  40fe07:	cmp    ch,BYTE PTR ds:0x50570486
  40fe0d:	(bad)  
  40fe0e:	pop    edx
  40fe0f:	mov    esp,0xf3252fdb
  40fe14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe15:	lods   eax,DWORD PTR ds:[esi]
  40fe16:	jg     0x40fe37
  40fe18:	dec    ecx
  40fe19:	cdq    
  40fe1a:	ret    0x73e3
  40fe1d:	and    dh,ch
  40fe1f:	and    ebp,DWORD PTR [edx+0x6495cd9f]
  40fe25:	adc    ch,dh
  40fe27:	mov    dl,0x2e
  40fe29:	adc    edi,esp
  40fe2b:	inc    edi
  40fe2c:	test   eax,0x6ebeda73
  40fe31:	mov    edx,0x623ad96e
  40fe36:	cdq    
  40fe37:	xchg   BYTE PTR [esi+0x4f],bh
  40fe3a:	xchg   edi,eax
  40fe3b:	sbb    esp,esp
  40fe3d:	enter  0x3d3f,0x57
  40fe41:	adc    BYTE PTR [edx+eax*4],0xd0
  40fe45:	std    
  40fe46:	cmc    
  40fe47:	and    bl,BYTE PTR [ebp-0x6f]
  40fe4a:	sahf   
  40fe4b:	push   cs
  40fe4c:	mov    esi,0xf81131cd
  40fe51:	push   0x6
  40fe53:	les    ebx,FWORD PTR ds:0x32c71a10
  40fe59:	push   esi
  40fe5a:	pop    ecx
  40fe5b:	inc    ecx
  40fe5c:	in     eax,0x3d
  40fe5e:	arpl   WORD PTR [edx-0x18735747],si
  40fe64:	into   
  40fe65:	push   ss
  40fe66:	xor    ecx,eax
  40fe68:	jge    0x40fe33
  40fe6a:	pop    ss
  40fe6b:	int    0x2b
  40fe6d:	loop   0x40fec9
  40fe6f:	mov    eax,ds:0xef2e9f2c
  40fe74:	cmp    ch,bl
  40fe76:	or     DWORD PTR [ebx+0x5862f5eb],eax
  40fe7c:	out    0x91,al
  40fe7e:	data16 jb 0x40fe7d
  40fe81:	out    0x50,eax
  40fe83:	xchg   ebx,eax
  40fe84:	jmp    0x1f40ce18
  40fe89:	pop    edi
  40fe8a:	inc    ebp
  40fe8b:	add    bl,BYTE PTR [edi+eax*8]
  40fe8e:	call   0xf2d0:0x362ccd8d
  40fe95:	scas   eax,DWORD PTR es:[edi]
  40fe96:	sub    al,0xf
  40fe98:	pop    esi
  40fe99:	stos   DWORD PTR es:[edi],eax
  40fe9a:	adc    eax,0x6fc77772
  40fe9f:	jnp    0x40fe70
  40fea1:	cmp    DWORD PTR [edi-0x296d3aff],0x4f
  40fea8:	jae    0x40fe2c
  40feaa:	add    eax,0x47769867
  40feaf:	mov    al,BYTE PTR [esi+0x4b]
  40feb2:	in     eax,0x5e
  40feb4:	fimul  WORD PTR [edi-0x5d80a51]
  40feba:	fnsave [ebx+0x4e07ea15]
  40fec0:	dec    edi
  40fec1:	lds    esi,FWORD PTR [ebx]
  40fec3:	(bad)  
  40fec4:	aam    0xd
  40fec6:	mov    WORD PTR [edx-0xe2a7f9],fs
  40fecc:	mov    edx,0x4950f15e
  40fed1:	push   esi
  40fed2:	mov    ebx,DWORD PTR [ebx-0x2]
  40fed5:	int    0x1
  40fed7:	lock dec ecx
  40fed9:	jmp    0xca543776
  40fede:	and    al,0x6b
  40fee0:	aam    0xc3
  40fee2:	mov    ebx,esi
  40fee4:	ss nop
  40fee6:	repz addr16 inc ebx
  40fee9:	jae    0x40ff1e
  40feeb:	lods   eax,DWORD PTR ds:[esi]
  40feec:	and    eax,0xfa2ed274
  40fef1:	clc    
  40fef2:	cdq    
  40fef3:	adc    ecx,DWORD PTR ds:[ecx-0xc3588ac]
  40fefa:	cmp    eax,0x99586971
  40feff:	mov    ecx,0x3c395c7e
  40ff04:	sub    DWORD PTR [ecx-0x31],eax
  40ff07:	hlt    
  40ff08:	sahf   
  40ff09:	sub    ecx,0x31
  40ff0c:	ret    
  40ff0d:	sub    esi,ebx
  40ff0f:	data16 sbb ch,dl
  40ff12:	outs   dx,BYTE PTR ds:[esi]
  40ff13:	mov    ebx,0xde581e85
  40ff18:	push   ebp
  40ff19:	hlt    
  40ff1a:	push   edx
  40ff1b:	mov    al,ds:0x6af84ebf
  40ff20:	out    0x9,al
  40ff22:	push   esi
  40ff23:	sbb    edi,DWORD PTR [ebp-0x549c3769]
  40ff29:	out    dx,al
  40ff2a:	xchg   ebx,eax
  40ff2b:	retf   0x69ae
  40ff2e:	repnz or ecx,edx
  40ff31:	mov    bl,0x34
  40ff33:	push   esi
  40ff34:	pop    es
  40ff35:	adc    al,0x6e
  40ff37:	jbe    0x40ffb3
  40ff39:	mov    al,ds:0x47bb0367
  40ff3e:	cmp    ah,BYTE PTR [edi+ebp*8]
  40ff41:	push   ebx
  40ff43:	sub    DWORD PTR [edx],ecx
  40ff45:	int    0xc5
  40ff47:	mov    ecx,0xff83bf8e
  40ff4c:	or     bh,BYTE PTR [eax]
  40ff4e:	adc    eax,0xb47e8b3e
  40ff53:	sbb    BYTE PTR [edi],dl
  40ff55:	fadd   QWORD PTR [ecx]
  40ff57:	add    DWORD PTR [edx],esp
  40ff59:	adc    DWORD PTR [ebp+0x73],0xffffffaf
  40ff5d:	mov    BYTE PTR [ebx-0x8],ch
  40ff60:	jnp    0x40ffdf
  40ff62:	pop    eax
  40ff63:	(bad)  
  40ff64:	div    DWORD PTR ds:0x16f8c320
  40ff6a:	xchg   esp,eax
  40ff6b:	ret    
  40ff6c:	lea    edi,[edx+0x24]
  40ff6f:	je     0x40ff9b
  40ff71:	add    DWORD PTR [ebx],ecx
  40ff73:	pop    esi
  40ff74:	int3   
  40ff75:	push   esp
  40ff76:	mov    ch,BYTE PTR [esi+0x51]
  40ff79:	or     al,0x9c
  40ff7b:	push   edx
  40ff7c:	pop    es
  40ff7d:	js     0x40ff24
  40ff7f:	enter  0x38ee,0x97
  40ff83:	mov    ?,WORD PTR [ebp-0x66]
  40ff86:	fld    DWORD PTR [ebx-0x10135485]
  40ff8c:	icebp  
  40ff8d:	and    BYTE PTR gs:[ebx+0x1c],ah
  40ff91:	rcl    DWORD PTR ds:0x7a1f48da,1
  40ff97:	push   esp
  40ff98:	fdiv   DWORD PTR [ecx-0x343ec9da]
  40ff9e:	push   DWORD PTR [edi]
  40ffa0:	nop
  40ffa1:	mov    ds:0xdf7ed5a8,eax
  40ffa6:	ret    0xee43
  40ffa9:	sub    ch,ch
  40ffab:	adc    bl,BYTE PTR [eax]
  40ffad:	cld    
  40ffae:	add    DWORD PTR [eax+0x6259497e],0x67
  40ffb5:	pop    ds
  40ffb6:	ja     0x40ff9e
  40ffb8:	push   ds
  40ffb9:	lea    edi,[edx]
  40ffbb:	xchg   edx,eax
  40ffbc:	pop    esp
  40ffbd:	fiadd  DWORD PTR [ebp+0x23139f78]
  40ffc3:	(bad)  
  40ffc4:	mov    ebx,0xd9a617cb
  40ffc9:	mov    bl,0xee
  40ffcb:	jae    0x40ffa6
  40ffcd:	in     al,0x6d
  40ffcf:	(bad)  [ebx-0x39]
  40ffd2:	push   ebp
  40ffd3:	and    al,0xf2
  40ffd5:	dec    edx
  40ffd6:	ins    DWORD PTR es:[edi],dx
  40ffd7:	int3   
  40ffd8:	je     0x410010
  40ffda:	sub    DWORD PTR [eax-0x31a0e0d7],esi
  40ffe0:	das    
  40ffe1:	and    eax,0x1d6c3c2b
  40ffe6:	sbb    al,0x84
  40ffe8:	xor    eax,0x5ac9824c
  40ffed:	stos   BYTE PTR es:[edi],al
  40ffee:	call   DWORD PTR [ebx+0x4b]
  40fff1:	pop    ebp
  40fff2:	xchg   esi,eax
  40fff3:	stos   BYTE PTR es:[edi],al
  40fff4:	mov    ch,0xa6
  40fff6:	lea    eax,[edx]
  40fff8:	hlt    
  40fff9:	jle    0x40ff97
  40fffb:	(bad)  
  40fffc:	mov    eax,ds:0xead7ce58
  410001:	jb     0x41007e
  410003:	push   ebp
  410004:	add    BYTE PTR [edx-0x67095989],dl
  41000a:	inc    edx
  41000b:	xor    ebp,DWORD PTR [esi-0x5f3e8795]
  410011:	aam    0x10
  410013:	pop    esi
  410014:	sub    cl,BYTE PTR [ebp-0x772eb207]
  41001a:	or     al,0x45
  41001c:	test   BYTE PTR [edi-0xbb5df4e],al
  410022:	mov    al,0x70
  410024:	std    
  410025:	outs   dx,DWORD PTR ds:[esi]
  410026:	je     0x40ffc8
  410028:	in     al,0x12
  41002a:	jns    0x41002f
  41002c:	xchg   esp,eax
  41002d:	ret    
  41002e:	in     eax,0x48
  410030:	cmp    ah,ch
  410032:	scas   eax,DWORD PTR es:[edi]
  410033:	daa    
  410034:	and    BYTE PTR [ebx+0x679bb205],0xed
  41003b:	add    BYTE PTR [edi+0x3f38dd1],0x47
  410042:	mov    DWORD PTR [esp+ecx*2+0x6e],ebp
  410046:	jno    0x410016
  410048:	jno    0x41007e
  41004a:	mov    ecx,0x24a5153b
  41004f:	jp     0x41009b
  410051:	test   BYTE PTR [ebx],ch
  410053:	inc    ecx
  410054:	add    al,0xc8
  410056:	mov    dh,0x9
  410058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410059:	stos   BYTE PTR es:[edi],al
  41005a:	push   0x1c
  41005c:	stos   DWORD PTR es:[edi],eax
  41005d:	or     cl,BYTE PTR [ecx+0x43]
  410060:	and    BYTE PTR [edx+0xab87b4e],cl
  410066:	mov    ebp,0x556aeddc
  41006b:	mov    ds:0x1fa207e4,eax
  410070:	fsubr  QWORD PTR [esp-0x28]
  410074:	pop    ecx
  410075:	xchg   ebx,eax
  410076:	mov    ecx,0xf16eca8e
  41007b:	jge    0x410031
  41007d:	imul   ecx,DWORD PTR [edx+0x4b5d0f99],0xffffffcb
  410084:	leave  
  410085:	call   0xa755e8b6
  41008a:	push   esp
  41008b:	push   es
  41008c:	push   eax
  41008d:	pop    ebx
  41008e:	push   ecx
  41008f:	hlt    
  410090:	cmp    eax,0x70625091
  410095:	add    BYTE PTR [esi-0x2a],bh
  410098:	rol    edi,0xbe
  41009b:	mov    bh,ah
  41009d:	test   al,0x28
  41009f:	mov    cl,0x28
  4100a1:	lods   eax,DWORD PTR ds:[esi]
  4100a2:	mov    dh,0x96
  4100a4:	cmp    eax,0xf7a37bf6
  4100a9:	(bad)  
  4100aa:	(bad)  
  4100ac:	pushf  
  4100ad:	aad    0x35
  4100af:	sub    eax,0x39fb0068
  4100b4:	mov    bl,0x8
  4100b6:	add    DWORD PTR [ebx+0x428e279c],0x7d7c2ccb
  4100c0:	fwait
  4100c1:	or     al,0x26
  4100c3:	cmp    cl,BYTE PTR [ebp-0x363aa0df]
  4100c9:	pop    edi
  4100ca:	cmp    ebp,DWORD PTR [edx]
  4100cc:	(bad)  [ebx+0x12]
  4100cf:	add    BYTE PTR [ecx],ch
  4100d1:	adc    cl,BYTE PTR [edx+ebx*2]
  4100d4:	adc    BYTE PTR [ebx+0x3fe1ebba],0x9f
  4100db:	mov    DWORD PTR [edx+0x32],esp
  4100de:	bswap  ebx
  4100e0:	xchg   DWORD PTR ds:0xe98ec9dd,ecx
  4100e6:	xor    al,0x0
  4100e8:	push   cs
  4100e9:	mov    dh,0xd0
  4100eb:	push   ebp
  4100ec:	outs   dx,DWORD PTR ds:[esi]
  4100ed:	sbb    cl,dl
  4100ef:	add    ebp,edi
  4100f1:	rol    DWORD PTR [ebx],0x55
  4100f4:	aam    0x11
  4100f6:	ud1    ecx,DWORD PTR [eax+edx*4+0x5801c246]
  4100fe:	sub    dl,BYTE PTR ds:0x376cb346
  410104:	clc    
  410105:	(bad)  
  410106:	retf   0x5b03
  410109:	xchg   BYTE PTR [ebx+ecx*4],al
  41010c:	cwde   
  41010d:	imul   ebx,edi,0xdd31e1bd
  410113:	jne    0x4100fc
  410115:	sahf   
  410116:	inc    ebp
  410117:	pop    ebp
  410118:	push   eax
  410119:	test   eax,0xfde748c9
  41011e:	jns    0x4100c0
  410120:	rcr    edx,1
  410122:	loop   0x41013b
  410124:	pop    eax
  410125:	pop    edi
  410126:	jns    0x4100ee
  410128:	inc    edx
  410129:	mov    ebx,DWORD PTR [ecx+0x3b]
  41012c:	test   al,0xa1
  41012e:	data16 mov al,ds:0x50bfe300
  410134:	inc    edi
  410135:	fucomi st,st(2)
  410137:	imul   ebx,DWORD PTR [eax],0x2c
  41013a:	jno    0x410121
  41013c:	xor    ebx,DWORD PTR [ecx-0x10ee4a4]
  410142:	(bad)  
  410143:	in     al,0xd7
  410145:	lds    edi,FWORD PTR fs:[ebx-0x4a308ba8]
  41014c:	cld    
  41014d:	inc    ebx
  41014e:	div    BYTE PTR [eax+0x4ce5d4a8]
  410154:	cld    
  410155:	sub    BYTE PTR [ebp-0x4e68a5f7],ch
  41015b:	inc    esi
  41015c:	fmul   QWORD PTR [esi-0x1d]
  41015f:	or     ch,BYTE PTR [esi]
  410161:	fwait
  410162:	sar    BYTE PTR [edi+0x7b25e2d7],0x97
  410169:	aaa    
  41016a:	and    ebx,DWORD PTR [ecx+0x13]
  41016d:	inc    esi
  41016e:	push   edi
  41016f:	push   ebx
  410170:	call   0x931436d5
  410175:	xchg   ebp,eax
  410176:	mov    eax,ds:0x466de304
  41017b:	inc    eax
  41017c:	or     al,0xae
  41017e:	es idiv bh
  410181:	inc    edx
  410182:	paddsw mm5,QWORD PTR [eax]
  410185:	fistp  QWORD PTR [edx+0x44d5272e]
  41018b:	xchg   BYTE PTR [edx+0x27],ch
  41018e:	xchg   edx,eax
  41018f:	popf   
  410190:	daa    
  410191:	(bad)  
  410192:	cld    
  410193:	mov    ch,0xa3
  410195:	xchg   BYTE PTR [edi+esi*2-0x7ff9303d],al
  41019c:	push   cs
  41019d:	push   ss
  41019e:	pop    ss
  41019f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101a0:	mov    bl,0x7a
  4101a2:	fcmovb st,st(2)
  4101a4:	rcl    DWORD PTR ds:0x8c239194,1
  4101ab:	xor    BYTE PTR [ebp+0x46ab5516],al
  4101b1:	sub    BYTE PTR [esp+edx*2-0x125cdc93],al
  4101b8:	leave  
  4101b9:	xor    al,0x8a
  4101bb:	push   ebx
  4101bc:	jg     0x410211
  4101be:	ds mov edi,0x7f8cbe51
  4101c4:	in     eax,dx
  4101c5:	addr16 loope 0x410208
  4101c8:	adc    cl,ch
  4101ca:	push   ebp
  4101cb:	xor    eax,0xf85f1b75
  4101d0:	repz pop es
  4101d2:	hlt    
  4101d3:	mov    gs,WORD PTR [ecx]
  4101d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d6:	cdq    
  4101d7:	push   edi
  4101d8:	and    eax,0x5dc4a2f7
  4101dd:	cmp    BYTE PTR [eax-0x299fa307],bh
  4101e3:	dec    ebp
  4101e4:	mov    edi,0xb7f34232
  4101e9:	mov    esi,0x4764bccf
  4101ee:	hlt    
  4101ef:	in     al,dx
  4101f0:	stos   DWORD PTR es:[edi],eax
  4101f1:	dec    ebp
  4101f2:	mov    ebx,0xc1b56ec6
  4101f7:	test   al,0x3f
  4101f9:	aaa    
  4101fa:	sti    
  4101fb:	aaa    
  4101fc:	cwde   
  4101fd:	mov    esp,0x76e59c2a
  410202:	call   0x7d41f1d6
  410207:	sub    eax,0x99842fc4
  41020c:	dec    edx
  41020d:	push   esp
  41020e:	xchg   esi,eax
  41020f:	push   edx
  410210:	popa   
  410211:	pop    ds
  410212:	or     dh,al
  410214:	sbb    eax,0x66a5b28f
  410219:	adc    al,0xfe
  41021b:	dec    ebx
  41021c:	inc    esp
  41021d:	dec    esi
  41021e:	jmp    0x1673:0x99e732e8
  410225:	inc    eax
  410226:	xchg   ebp,eax
  410227:	shl    DWORD PTR [ecx],0x2f
  41022a:	sahf   
  41022b:	retf   0xa6e2
  41022e:	fwait
  41022f:	jmp    0x7c20:0xfff7aea3
  410236:	dec    esp
  410237:	push   ebp
  410238:	jge    0x410289
  41023a:	(bad)  
  41023b:	fdivr  DWORD PTR [ebx-0x30095c8]
  410241:	retf   
  410242:	jmp    0xdbd49fb8
  410247:	xor    esi,ebx
  410249:	pop    edi
  41024a:	mov    ds:0x644c49c7,eax
  41024f:	jmp    0x71255d0e
  410254:	adc    ch,BYTE PTR [eax+esi*4]
  410257:	inc    edx
  410258:	xchg   esi,eax
  410259:	inc    eax
  41025a:	cmp    BYTE PTR [edx+edx*2],0xe8
  41025e:	nop
  41025f:	(bad)  
  410260:	cdq    
  410261:	mov    esi,0x98225def
  410266:	addr16 inc ecx
  410268:	call   0x90c3b348
  41026d:	push   cs
  41026e:	sahf   
  41026f:	push   edx
  410270:	and    cl,0xbd
  410273:	xchg   esp,eax
  410274:	push   ds
  410275:	jno    0x4102c8
  410277:	mov    esp,0x5c898b51
  41027c:	dec    ebp
  41027d:	and    ebp,DWORD PTR ds:0x9a1e2aed
  410283:	int    0x90
  410285:	sbb    DWORD PTR [edx+0x2d4f1be5],edx
  41028b:	mov    WORD PTR [esi+0x72942874],?
  410291:	jmp    0x2d3f:0x1a4e07f
  410298:	mov    eax,0xb4b8fb1b
  41029d:	fldcw  WORD PTR [ebx]
  41029f:	mov    dh,0xe5
  4102a1:	sbb    bh,dl
  4102a3:	adc    al,0xd1
  4102a5:	inc    edx
  4102a6:	out    0x3f,al
  4102a8:	xchg   ebx,eax
  4102a9:	ror    BYTE PTR [edx-0x60],cl
  4102ac:	es (bad) 
  4102ae:	lahf   
  4102af:	pop    esi
  4102b0:	xor    DWORD PTR [ecx-0x44ca2144],ebx
  4102b6:	pop    edi
  4102b7:	cmp    DWORD PTR [eax+0x418bf16b],ebp
  4102bd:	push   eax
  4102be:	inc    ecx
  4102bf:	or     eax,0x7618f273
  4102c4:	setge  cl
  4102c7:	xchg   ebx,eax
  4102c8:	sub    BYTE PTR [ebx],bl
  4102ca:	ret    0xc3bc
  4102cd:	push   ebx
  4102ce:	mov    ds:0x952ce869,al
  4102d3:	add    esp,esi
  4102d5:	sbb    BYTE PTR [ebx+ebp*2+0x42a2c832],bl
  4102dc:	loope  0x4102fa
  4102de:	in     al,0xef
  4102e0:	outs   dx,BYTE PTR ds:[esi]
  4102e1:	add    bh,BYTE PTR [esi-0x37c9c2c]
  4102e7:	push   edx
  4102e8:	add    bh,0xbd
  4102eb:	loopne 0x410367
  4102ed:	or     al,BYTE PTR [esi]
  4102ef:	(bad)  
  4102f0:	mov    bh,0x6c
  4102f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f3:	pop    esp
  4102f4:	cmp    eax,0x5f0f1530
  4102f9:	fld    st(0)
  4102fb:	iret   
  4102fc:	sti    
  4102fd:	xor    al,0x88
  4102ff:	pusha  
  410300:	cmc    
  410301:	or     DWORD PTR [ecx-0xdbdf902],edx
  410307:	lahf   
  410308:	test   eax,0x852865d6
  41030d:	loope  0x4102a8
  41030f:	lods   al,BYTE PTR ds:[esi]
  410310:	jnp    0x41033b
  410312:	mov    al,0xd6
  410314:	inc    esi
  410315:	int    0xc7
  410317:	(bad)  
  410318:	in     al,0x8b
  41031a:	das    
  41031b:	dec    eax
  41031c:	and    eax,DWORD PTR [eax]
  41031e:	js     0x4102e3
  410320:	mov    edx,eax
  410322:	push   es
  410323:	fsubr  DWORD PTR [edi+edi*1]
  410326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410327:	lahf   
  410328:	push   eax
  410329:	aaa    
  41032a:	mov    ecx,0xf1b8cb49
  41032f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410330:	add    al,0x14
  410332:	call   0xac20:0xf4976a6a
  410339:	cli    
  41033a:	loopne 0x410361
  41033c:	pop    esp
  41033d:	daa    
  41033e:	pop    DWORD PTR [esi]
  410340:	jl     0x4103bb
  410342:	mov    esp,0x86cf531d
  410347:	cmp    eax,0x424f97b8
  41034c:	sub    BYTE PTR [ecx+eax*2-0x40],0xbb
  410351:	hlt    
  410352:	xchg   ecx,eax
  410353:	push   es
  410354:	fadd   DWORD PTR [edx]
  410356:	xor    eax,0x9e99577
  41035b:	popa   
  41035c:	pop    ebx
  41035d:	xor    eax,0xc3021183
  410362:	cmp    ch,cl
  410364:	out    dx,al
  410365:	xchg   ebx,eax
  410366:	or     esi,ebx
  410368:	inc    ecx
  410369:	sbb    al,0x3a
  41036b:	sub    DWORD PTR [ebx+0x3],edi
  41036e:	sbb    DWORD PTR [esi],ebp
  410370:	lods   al,BYTE PTR gs:[esi]
  410372:	xor    DWORD PTR [ebx-0x27],edi
  410375:	dec    ebp
  410376:	(bad)  
  410378:	fimul  WORD PTR [eax-0x397d1691]
  41037e:	jl     0x4103b7
  410380:	add    ah,BYTE PTR [edx+ebx*2]
  410383:	cli    
  410384:	jmp    0x410308
  410386:	push   eax
  410387:	and    al,dh
  410389:	les    edx,FWORD PTR [esi+0x5b538b50]
  41038f:	aad    0xc3
  410391:	add    BYTE PTR [ebp+ebp*4+0x26],0x4f
  410396:	ins    DWORD PTR es:[edi],dx
  410397:	mov    ebp,0x25867210
  41039c:	mov    al,ds:0xc7cf1cbf
  4103a1:	xchg   edx,eax
  4103a2:	jo     0x4103c3
  4103a4:	mov    eax,ds:0x9ccc5ee
  4103a9:	icebp  
  4103aa:	inc    ecx
  4103ab:	mov    eax,0xf42cd347
  4103b0:	adc    ah,BYTE PTR [ebx]
  4103b2:	mov    esp,0x64fc282
  4103b7:	(bad)  
  4103b8:	out    dx,al
  4103b9:	pop    edx
  4103ba:	enter  0x38bc,0x6
  4103be:	xchg   esi,eax
  4103bf:	imul   esi,DWORD PTR [eax+0x318f9b3b],0xffffffad
  4103c6:	and    DWORD PTR [eax+0x7f7f0460],esp
  4103cc:	data16 jnp 0x410410
  4103cf:	dec    ebx
  4103d0:	or     ecx,esp
  4103d2:	mov    DWORD PTR [edx+0xc],ebp
  4103d5:	push   edi
  4103d6:	sub    DWORD PTR [ebx],ebp
  4103d8:	or     BYTE PTR [ebx+0x79d190c5],0x75
  4103df:	or     BYTE PTR [ebx],bl
  4103e1:	jmp    0xc1a8:0x6c0ac36c
  4103e8:	loop   0x410444
  4103ea:	test   DWORD PTR [ecx+ebx*8-0x3c],eax
  4103ee:	mov    cl,BYTE PTR [ebx+0x2bc8b91a]
  4103f4:	fdivr  QWORD PTR [ebx+eiz*4-0x2]
  4103f8:	inc    ebx
  4103f9:	daa    
  4103fa:	cmc    
  4103fb:	pop    ebp
  4103fc:	xor    eax,0x4f286d7b
  410401:	sbb    BYTE PTR [edi-0x21175259],dh
  410407:	mov    dh,0xac
  410409:	adc    ebp,DWORD PTR [esi-0x45]
  41040c:	jmp    0x46c:0x9f9348a7
  410413:	push   ebx
  410414:	je     0x4103e0
  410416:	push   eax
  410417:	call   0x10d7e690
  41041c:	test   DWORD PTR [edi],edx
  41041e:	inc    esi
  41041f:	fiadd  WORD PTR [ecx+0x54]
  410422:	out    0x41,eax
  410424:	sbb    ecx,DWORD PTR [esi+0x611ecdd2]
  41042a:	int    0x9b
  41042c:	into   
  41042d:	adc    al,0x50
  41042f:	sahf   
  410430:	mov    ds:0x7f04d444,eax
  410435:	adc    DWORD PTR [edx],eax
  410437:	push   cs
  410438:	int3   
  410439:	mov    ch,0x86
  41043c:	dec    esp
  41043d:	xchg   edi,eax
  41043e:	out    0xcd,eax
  410440:	cmp    BYTE PTR [ebx],0xd2
  410443:	test   BYTE PTR [esi],ah
  410445:	xchg   edi,eax
  410446:	out    0xcf,eax
  410448:	pop    ds
  410449:	shl    BYTE PTR [edi-0x815238c],1
  41044f:	pop    ecx
  410450:	push   ss
  410451:	(bad)  
  410452:	nop
  410453:	enter  0xa79f,0xe
  410457:	out    dx,eax
  410458:	imul   edi,DWORD PTR ds:0x7619a4fe,0xe4ee805e
  410462:	lea    edx,ds:0x7cd0ce3c
  410468:	mov    edi,0x37666bc5
  41046d:	xor    dh,BYTE PTR [ecx-0x512a7404]
  410473:	stos   DWORD PTR es:[edi],eax
  410474:	dec    ecx
  410475:	jl     0x410429
  410477:	mov    ah,BYTE PTR [esi]
  410479:	pop    ds
  41047a:	scas   al,BYTE PTR es:[edi]
  41047b:	(bad)  
  41047c:	in     al,0x1e
  41047e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41047f:	in     al,dx
  410480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410481:	xor    edi,DWORD PTR [ecx]
  410483:	mov    ch,0xbc
  410485:	or     al,0x6f
  410487:	pop    ebp
  410488:	xchg   esp,eax
  410489:	cdq    
  41048a:	les    edi,FWORD PTR [esi]
  41048c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41048d:	inc    esp
  41048e:	pop    eax
  41048f:	or     ch,bl
  410491:	cmp    ebp,DWORD PTR [edi-0x37]
  410494:	adc    DWORD PTR [edx],ecx
  410496:	aas    
  410497:	pop    esp
  410498:	pop    ebp
  410499:	dec    edx
  41049a:	add    eax,0x9b808158
  41049f:	fcom   DWORD PTR [esi-0x61]
  4104a2:	dec    ebp
  4104a3:	dec    edi
  4104a4:	mov    dh,0x63
  4104a6:	(bad)  
  4104a7:	xlat   BYTE PTR ds:[ebx]
  4104a8:	ret    
  4104a9:	push   edi
  4104aa:	fwait
  4104ab:	iret   
  4104ac:	inc    esi
  4104ad:	sbb    al,0xc5
  4104af:	inc    BYTE PTR fs:[eax+0x780f8e33]
  4104b6:	daa    
  4104b7:	mov    al,ds:0xbeab644a
  4104bc:	mov    esi,0xec6f4c4a
  4104c1:	dec    edx
  4104c2:	mov    dl,0x2f
  4104c4:	gs retf 0x3e8
  4104c8:	cmp    eax,0xe5ee2a7f
  4104cd:	out    0xab,al
  4104cf:	fimul  WORD PTR ds:[ebx+ebx*2-0x2d]
  4104d4:	mov    dl,0xa
  4104d6:	mov    WORD PTR [eax],ss
  4104d8:	jbe    0x4104b2
  4104da:	cmp    ebp,DWORD PTR [edi+0x68]
  4104dd:	jmp    0xd4dd:0x38718822
  4104e4:	mov    ds:0x309a2489,al
  4104e9:	xchg   ecx,eax
  4104ea:	ins    BYTE PTR es:[edi],dx
  4104eb:	adc    edx,DWORD PTR [esi+0x42]
  4104ee:	and    al,0xa7
  4104f0:	scas   eax,DWORD PTR es:[edi]
  4104f1:	sbb    eax,0x1b82dff1
  4104f6:	mov    fs,WORD PTR [ebx+0x7660ad3e]
  4104fc:	inc    ebp
  4104fd:	pop    ss
  4104fe:	dec    ebp
  4104ff:	cmp    ebp,DWORD PTR [ecx]
  410501:	adc    ebx,DWORD PTR [edx]
  410503:	inc    eax
  410504:	or     eax,0x22d90185
  410509:	fbstp  TBYTE PTR [esi+0x9]
  41050c:	inc    edi
  41050d:	pop    ds
  41050e:	cmc    
  41050f:	(bad)  
  410510:	cmp    al,0x76
  410512:	rol    DWORD PTR [ecx-0x4395ef1e],0xa1
  410519:	cmp    al,0x43
  41051b:	ret    
  41051c:	add    DWORD PTR [edi],edx
  41051e:	mov    ch,BYTE PTR [edi+0x4d]
  410521:	xor    eax,DWORD PTR [esi-0x3ddaa9a8]
  410527:	jmp    0xa3da:0xec619326
  41052e:	shl    DWORD PTR [edi-0x16],cl
  410531:	xor    dl,BYTE PTR [esi-0x7c]
  410534:	rcr    bl,cl
  410536:	js     0x410591
  410538:	and    eax,DWORD PTR [esi-0x5d9913fd]
  41053e:	sahf   
  41053f:	aam    0xf0
  410541:	mov    ds:0x635968c8,eax
  410546:	loopne 0x410552
  410548:	pop    es
  410549:	popa   
  41054a:	mov    al,0x73
  41054c:	mov    esp,0x10a3d76d
  410551:	sti    
  410552:	in     al,0x1e
  410554:	int    0x31
  410556:	popf   
  410557:	mul    BYTE PTR [edx]
  410559:	or     DWORD PTR [ecx],esp
  41055b:	add    ch,0xb6
  41055e:	in     al,0xcf
  410560:	mov    cl,0xd4
  410562:	adc    eax,0xeff0eaef
  410567:	inc    edi
  410568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410569:	fdiv   QWORD PTR [ebx+0x10]
  41056c:	test   al,0xab
  41056e:	sbb    eax,0x6b74dd58
  410573:	xor    al,0x1
  410575:	mul    BYTE PTR [eax-0x7fc646a8]
  41057b:	gs popa 
  41057d:	xchg   ecx,eax
  41057e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057f:	rcl    DWORD PTR [esi],1
  410581:	ds inc ebx
  410583:	push   ss
  410584:	lods   eax,DWORD PTR ds:[esi]
  410585:	ja     0x4105f4
  410587:	mov    ah,0x73
  410589:	aad    0x36
  41058b:	ins    BYTE PTR es:[edi],dx
  41058c:	jg     0x41052e
  41058e:	in     eax,dx
  41058f:	jg     0x41053d
  410591:	push   0xffffff91
  410593:	les    ecx,FWORD PTR [ebp-0x29e575bc]
  410599:	adc    eax,0x26fdccf4
  41059e:	int3   
  41059f:	push   0x7efbd760
  4105a4:	fadd   st(2),st
  4105a6:	neg    DWORD PTR [ebp+0x5a]
  4105a9:	adc    al,0x5c
  4105ab:	sti    
  4105ac:	mov    DWORD PTR [esi+0x3531adfc],edi
  4105b2:	jle    0x41058b
  4105b4:	or     eax,0x43e6c627
  4105b9:	cmp    al,BYTE PTR [ebx+0x7a11a7d9]
  4105bf:	jge    0x41063f
  4105c1:	shr    DWORD PTR [esi],0x79
  4105c4:	ss dec edx
  4105c6:	rcr    BYTE PTR [eax-0x1223899b],1
  4105cc:	add    edi,ebp
  4105ce:	sbb    edx,0xffffffdd
  4105d1:	add    esi,DWORD PTR [edx+0x573bf090]
  4105d7:	into   
  4105d8:	retf   0xd29a
  4105db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105dc:	addr16 dec eax
  4105de:	ficomp DWORD PTR [eax-0x41721474]
  4105e4:	call   0x9b2bbfc5
  4105e9:	(bad)  
  4105eb:	call   0x1061:0xcee25af7
  4105f2:	jp     0x410659
  4105f4:	inc    ebp
  4105f5:	outs   dx,DWORD PTR ds:[esi]
  4105f6:	or     eax,0x9e6113f0
  4105fb:	rol    edx,cl
  4105fd:	sub    bl,BYTE PTR [eax+0x6645aa4c]
  410603:	xchg   esp,eax
  410604:	nop
  410605:	cmp    DWORD PTR [esi-0x57],ebx
  410608:	jnp    0x41067c
  41060a:	loop   0x4105b2
  41060c:	neg    DWORD PTR [eax+0x2a]
  41060f:	outs   dx,DWORD PTR ds:[esi]
  410610:	clc    
  410611:	jbe    0x4105ac
  410613:	loope  0x4105a1
  410615:	vpcmpeqw ymm6,ymm1,YMMWORD PTR [ebx*4+0x15bc1c29]
  41061e:	xor    BYTE PTR [esi+0x3b],dl
  410621:	hlt    
  410622:	ror    BYTE PTR [ebx],cl
  410624:	or     DWORD PTR [esi+ecx*2+0x40],ebp
  410628:	and    BYTE PTR [ebx],dl
  41062a:	sbb    BYTE PTR [ecx+eiz*2-0x12],0x5f
  41062f:	mov    bl,0xc9
  410631:	inc    esi
  410632:	jns    0x410646
  410634:	icebp  
  410635:	in     eax,0x54
  410637:	add    BYTE PTR [ebx+edx*2-0x31099d12],ah
  41063e:	out    dx,eax
  41063f:	icebp  
  410640:	imul   eax,edi,0xa2b75533
  410646:	sub    ch,BYTE PTR [ecx-0x39]
  410649:	sub    BYTE PTR [edi-0x66],bh
  41064c:	pop    es
  41064d:	jge    0x410621
  41064f:	dec    ecx
  410650:	aaa    
  410651:	inc    ebp
  410652:	xor    bh,BYTE PTR [edi-0x32ec6319]
  410658:	jp     0x410631
  41065a:	jns    0x410628
  41065c:	push   edi
  41065d:	jecxz  0x4105ed
  41065f:	jne    0x41060e
  410661:	cmp    al,0x8e
  410663:	mov    edi,?
  410665:	jns    0x41069f
  410667:	clc    
  410668:	dec    eax
  410669:	leave  
  41066a:	sub    esi,eax
  41066c:	cmp    BYTE PTR [ebp+0x2c],0xd4
  410670:	add    ah,dl
  410672:	repnz mov bh,0x7b
  410675:	fst    DWORD PTR [ebp+ecx*1+0x1cd870b8]
  41067c:	add    dl,dl
  41067e:	fs xor al,0xd9
  410681:	lahf   
  410682:	add    edx,ecx
  410684:	(bad)  
  410685:	cmp    DWORD PTR [esi],ebp
  410687:	or     ebx,DWORD PTR [esp+ecx*1]
  41068a:	pop    ecx
  41068b:	sub    al,0x1
  41068d:	dec    DWORD PTR [esi]
  41068f:	dec    ebp
  410690:	mov    eax,ds:0xba257f05
  410695:	outs   dx,BYTE PTR ds:[esi]
  410696:	pop    ecx
  410697:	sub    BYTE PTR [edi-0x5409348b],cl
  41069d:	inc    edi
  41069e:	push   eax
  41069f:	inc    ebp
  4106a0:	push   esi
  4106a1:	fnsave [edi+0x44eb9866]
  4106a7:	repnz push esp
  4106a9:	fldcw  WORD PTR [edi]
  4106ab:	sub    BYTE PTR [edx-0x32],bh
  4106ae:	ficom  WORD PTR [edx+eiz*4]
  4106b1:	xchg   ecx,eax
  4106b2:	xor    dh,bl
  4106b4:	loope  0x410668
  4106b6:	dec    ebp
  4106b7:	push   edx
  4106b8:	scas   al,BYTE PTR es:[edi]
  4106b9:	int    0x8d
  4106bb:	jno    0x410719
  4106bd:	arpl   WORD PTR [edi+0x3c],di
  4106c0:	addr16 repnz dec ecx
  4106c3:	or     BYTE PTR [ebp-0x6e],dh
  4106c6:	daa    
  4106c7:	xchg   esi,eax
  4106c8:	cmp    dh,BYTE PTR ds:0x1186536f
  4106ce:	imul   DWORD PTR [ebp+0x682a99f0]
  4106d4:	xor    al,0xef
  4106d6:	sbb    al,BYTE PTR [ebp+0x6abcbb5b]
  4106dc:	inc    ebp
  4106dd:	sub    esp,DWORD PTR [ecx+eiz*1-0x2f]
  4106e1:	ss idiv esp
  4106e4:	jmp    0x5adc:0xbb769273
  4106eb:	push   es
  4106ec:	(bad)  
  4106ed:	adc    dl,cl
  4106ef:	dec    edx
  4106f0:	es in  eax,0xd3
  4106f3:	out    dx,al
  4106f4:	cmp    cl,BYTE PTR [edi-0x2ed48aec]
  4106fa:	xchg   edx,eax
  4106fb:	fistp  QWORD PTR [esp+edx*8-0x4f]
  4106ff:	sbb    DWORD PTR [eax-0x77],ebx
  410702:	add    eax,0x8b3cff30
  410707:	cmp    DWORD PTR [ebx],edx
  410709:	ins    BYTE PTR es:[edi],dx
  41070a:	jae    0x41072d
  41070c:	dec    eax
  41070d:	sub    dl,bh
  41070f:	sbb    dh,BYTE PTR [edi+0x43c35a9f]
  410715:	sub    BYTE PTR [eax-0x757b8044],ah
  41071b:	mov    al,0xa
  41071d:	not    DWORD PTR [eax]
  41071f:	sub    DWORD PTR ds:0x3d9afa97,0xffffff9c
  410726:	xchg   esp,eax
  410727:	jae    0x4106ba
  410729:	xchg   ebp,eax
  41072a:	dec    edi
  41072b:	fneni(8087 only) 
  41072d:	jnp    0x4106ec
  41072f:	xchg   ebp,eax
  410730:	fidivr DWORD PTR [esi+0x704a80d4]
  410736:	jp     0x41077f
  410738:	dec    esp
  410739:	jo     0x41076f
  41073b:	(bad)  
  41073c:	xor    eax,0x154ddb5c
  410741:	xor    eax,0xdfced7a1
  410746:	jecxz  0x41077b
  410748:	in     al,dx
  410749:	mov    BYTE PTR [esi+0x7b572068],bl
  41074f:	xor    cl,bh
  410751:	mov    esi,0x9b387745
  410756:	mov    edi,0x16fa16ae
  41075b:	pop    ecx
  41075c:	push   0x738a1caa
  410761:	sbb    al,0xb6
  410763:	loopne 0x41078f
  410765:	call   0x9d15:0x7ab3804
  41076c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41076d:	dec    DWORD PTR [eax+edi*4-0x77ea2495]
  410774:	inc    ebp
  410775:	cmp    eax,0x8c9b11c8
  41077a:	fcom   QWORD PTR [ebp+eax*1+0x59723223]
  410781:	and    BYTE PTR ds:0xb20e3d83,dh
  410787:	sbb    al,0x9d
  410789:	aas    
  41078a:	les    edi,FWORD PTR [esi+0x31a2051e]
  410790:	sbb    BYTE PTR [edx-0x4614cbd8],dl
  410796:	inc    ebp
  410797:	inc    eax
  410798:	bound  edx,QWORD PTR [ebp-0x38]
  41079b:	inc    ebx
  41079c:	jne    0x4107fb
  41079e:	and    esi,DWORD PTR [eax]
  4107a0:	jmp    0xdaf8:0x1f4a1d51
  4107a7:	pushf  
  4107a8:	je     0x410785
  4107aa:	scas   eax,DWORD PTR es:[edi]
  4107ab:	or     BYTE PTR [ebp-0x1bfcbadb],cl
  4107b1:	mov    edx,0xc82470ba
  4107b6:	xchg   ebp,eax
  4107b7:	(bad)  
  4107b8:	jno    0x4107c2
  4107ba:	mov    si,0xf070
  4107be:	pop    ebp
  4107bf:	lods   eax,DWORD PTR ds:[esi]
  4107c0:	cmp    eax,0x78360949
  4107c5:	aad    0x50
  4107c7:	sbb    esp,DWORD PTR [eax+0x68]
  4107ca:	ins    BYTE PTR es:[edi],dx
  4107cb:	pusha  
  4107cc:	test   DWORD PTR [edx+0x1e02efe4],edi
  4107d2:	xchg   ebp,eax
  4107d3:	in     al,dx
  4107d4:	mov    al,ds:0xe255ab80
  4107d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107db:	gs rcr edx,1
  4107de:	add    DWORD PTR [ebp+0x3b],ebx
  4107e1:	push   ds
  4107e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e3:	leave  
  4107e4:	adc    DWORD PTR [eax-0xa2b3d97],0x7f4b3ed3
  4107ee:	inc    bl
  4107f0:	xor    BYTE PTR [eax],cl
  4107f2:	adc    al,0xdb
  4107f4:	and    bl,bh
  4107f6:	pop    esp
  4107f7:	test   eax,0x44ce431d
  4107fc:	ins    DWORD PTR es:[edi],dx
  4107fd:	dec    esi
  4107fe:	xchg   ecx,eax
  4107ff:	mov    edi,DWORD PTR [ecx]
  410801:	lock js 0x410860
  410804:	out    dx,al
  410805:	(bad)  
  410806:	xor    al,0xff
  410808:	and    BYTE PTR [edx-0x2d],dh
  41080b:	repz shr cl,1
  41080e:	hlt    
  41080f:	mov    bl,dh
  410811:	loopne 0x4107de
  410813:	push   ebp
  410814:	jp     0x410800
  410816:	jno    0x41079a
  410818:	inc    ebp
  410819:	push   ds
  41081a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41081b:	xor    BYTE PTR [esp+edx*8-0x1d1fd3bc],dh
  410822:	bound  edx,QWORD PTR [edx+0x60]
  410825:	in     eax,0x3d
  410827:	les    ebx,FWORD PTR [eax+0x73]
  41082a:	popa   
  41082b:	mov    ebp,0x36b339d6
  410830:	mov    cl,0xe7
  410832:	(bad)  
  410833:	add    dl,BYTE PTR [esi+0x4f9dd656]
  410839:	adc    al,0xd9
  41083b:	aas    
  41083c:	les    ecx,FWORD PTR [edi]
  41083e:	js     0x410820
  410840:	mov    ebx,0xeafe3ff0
  410845:	scas   eax,DWORD PTR es:[edi]
  410846:	pop    esi
  410847:	xchg   esp,eax
  410848:	xlat   BYTE PTR ds:[ebx]
  410849:	jns    0x41084f
  41084b:	jns    0x410889
  41084d:	(bad)  
  41084f:	push   esp
  410850:	(bad)  
  410852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410853:	loope  0x410845
  410855:	mov    DWORD PTR [ebx-0x25],ecx
  410858:	addr16 xchg ebp,eax
  41085a:	mov    ds:0x123110f7,eax
  41085f:	popf   
  410860:	fmul   st(5),st
  410862:	test   DWORD PTR [esi-0x24],edx
  410865:	out    dx,eax
  410866:	test   BYTE PTR [ebp-0x20],dl
  410869:	lds    esp,FWORD PTR [ebx-0x47]
  41086c:	loopne 0x4108b5
  41086e:	pop    ss
  41086f:	add    eax,0x9c08148e
  410874:	mov    dh,0xee
  410876:	std    
  410877:	mov    bl,0x77
  410879:	push   eax
  41087a:	sar    DWORD PTR [edx-0x4c],0x99
  41087e:	inc    esp
  41087f:	icebp  
  410880:	lock dec edx
  410882:	sub    al,BYTE PTR [ebx-0x2d]
  410885:	mov    ecx,0xd8f01d64
  41088a:	push   ebx
  41088b:	ins    DWORD PTR es:[edi],dx
  41088c:	fiadd  DWORD PTR [edi+ecx*1]
  41088f:	ja     0x410899
  410891:	push   edi
  410892:	shr    DWORD PTR [edx],cl
  410894:	iret   
  410895:	push   cs
  410896:	dec    eax
  410897:	sbb    DWORD PTR es:[ebx-0x40],esi
  41089b:	sbb    DWORD PTR [esi-0xd],edi
  41089e:	call   0xaff4:0x270ad41e
  4108a5:	push   esp
  4108a6:	popf   
  4108a7:	sbb    al,0xdb
  4108aa:	sub    al,0xa7
  4108ac:	mov    DWORD PTR [esi-0x45],esp
  4108af:	cld    
  4108b0:	ret    
  4108b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108b2:	sbb    al,0x4
  4108b4:	xor    esp,ebx
  4108b6:	icebp  
  4108b7:	mov    ecx,0xd4c0a459
  4108bc:	test   al,0xa
  4108be:	jae    0x4108d2
  4108c0:	xchg   BYTE PTR [edx-0x77],dl
  4108c3:	mov    ebp,0x6d0f212d
  4108c8:	mov    al,ds:0x1e1ccacb
  4108cd:	aas    
  4108ce:	rol    esi,cl
  4108d0:	test   al,0x76
  4108d2:	into   
  4108d3:	xlat   BYTE PTR ds:[ebx]
  4108d4:	pop    ss
  4108d5:	xor    DWORD PTR [ebx+0x2b],edx
  4108d8:	mov    bl,0x83
  4108da:	push   ecx
  4108db:	fist   DWORD PTR [edx+eiz*4]
  4108de:	rcr    DWORD PTR [edi],0xeb
  4108e1:	bound  ebx,QWORD PTR [edx*2+0x252f3c79]
  4108e8:	out    0xe6,eax
  4108ea:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4108ec:	adc    DWORD PTR [edi+0x14],eax
  4108ef:	push   0xbb286260
  4108f4:	or     al,0xf7
  4108f6:	xor    BYTE PTR [ebx-0x4e394aa7],ah
  4108fc:	ret    0x7675
  4108ff:	inc    ebx
  410900:	xchg   edx,eax
  410901:	push   esp
  410902:	jbe    0x410940
  410904:	lea    ebx,[esi+0x4c6b1a4]
  41090a:	cmp    eax,DWORD PTR [esi]
  41090c:	test   al,0x70
  41090e:	add    eax,0x205b937
  410913:	lock xchg esi,eax
  410915:	cmp    al,0x37
  410917:	xor    al,BYTE PTR [bx+si-0x19]
  41091b:	fcmovnu st,st(3)
  41091d:	sub    esp,esi
  41091f:	fs and eax,0xa1507e3f
  410925:	push   ebp
  410926:	pop    ecx
  410927:	cmp    ecx,DWORD PTR [ecx]
  410929:	(bad)  
  41092a:	pop    es
  41092b:	mov    ds:0xf03701c8,eax
  410930:	stos   BYTE PTR es:[edi],al
  410931:	test   eax,0x1326efd5
  410936:	(bad)  
  410938:	fsubr  st,st(4)
  41093a:	out    0x92,eax
  41093c:	mov    ebp,0x3af4c821
  410941:	div    DWORD PTR [edi]
  410943:	scas   eax,DWORD PTR es:[edi]
  410944:	cmp    esi,DWORD PTR [edx]
  410946:	fcom   st(4)
  410948:	scas   eax,DWORD PTR es:[edi]
  410949:	push   esi
  41094a:	xchg   ecx,eax
  41094b:	mov    ebx,0x720e2fa9
  410950:	and    BYTE PTR [eax+0x28],dh
  410953:	pusha  
  410954:	mov    ds:0x48834f0a,eax
  410959:	and    al,BYTE PTR [edi]
  41095b:	jae    0x4109a6
  41095d:	scas   eax,DWORD PTR es:[edi]
  41095e:	pop    ds
  41095f:	out    0xf6,eax
  410961:	hlt    
  410962:	aad    0x7d
  410964:	mov    bl,0xe3
  410966:	add    ebp,DWORD PTR [ecx+0x27]
  410969:	xacquire xchg DWORD PTR [esi-0x4f],ebp
  41096d:	in     eax,0x81
  41096f:	mov    dl,0xd2
  410971:	aam    0xc6
  410973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410974:	iret   
  410975:	pop    edi
  410976:	out    dx,al
  410977:	adc    BYTE PTR [esi-0x2f],al
  41097a:	push   0xffffffe8
  41097c:	mov    eax,0x1313d267
  410981:	add    ebp,DWORD PTR [edx-0x23]
  410984:	cmp    al,0xd6
  410986:	cmc    
  410987:	xor    dh,BYTE PTR [ebx]
  410989:	(bad)  
  41098a:	aad    0x47
  41098c:	xchg   ebx,eax
  41098d:	loop   0x410926
  41098f:	inc    eax
  410990:	test   BYTE PTR [ecx-0x4e],al
  410993:	test   al,0xf1
  410995:	and    ah,ch
  410997:	mov    BYTE PTR [edi-0x5f64dd94],ah
  41099d:	or     eax,0xc60e0c1b
  4109a2:	or     esi,DWORD PTR [ecx-0xc]
  4109a5:	aaa    
  4109a6:	or     ebp,DWORD PTR [edi+0x73]
  4109a9:	nop
  4109aa:	jbe    0x410997
  4109ac:	sti    
  4109ad:	arpl   WORD PTR [edi],bx
  4109af:	cmc    
  4109b0:	data16 aas 
  4109b2:	mov    BYTE PTR [eax-0x5820ace4],ah
  4109b8:	scas   eax,DWORD PTR es:[edi]
  4109b9:	jle    0x410982
  4109bb:	adc    cl,cl
  4109bd:	ror    BYTE PTR [edx-0x77],cl
  4109c0:	je     0x410a1f
  4109c2:	dec    sp
  4109c4:	test   DWORD PTR [edi+0x1617002c],ebp
  4109ca:	lock repnz dec ebp
  4109cd:	jl     0x410971
  4109cf:	push   ds
  4109d0:	cmp    dl,ch
  4109d2:	shl    DWORD PTR [esi-0x72f27634],cl
  4109d8:	nop
  4109d9:	xor    al,0x39
  4109db:	xchg   ebp,eax
  4109dc:	and    DWORD PTR ds:0x851e2506,ecx
  4109e2:	les    edx,FWORD PTR [esi+ecx*2-0x4e8cd13]
  4109e9:	aam    0xf6
  4109eb:	jo     0x410a32
  4109ed:	cmp    eax,0xbe3ae1dc
  4109f2:	test   al,0x31
  4109f4:	bound  esp,QWORD PTR [edx-0x44]
  4109f7:	jae    0x410a0c
  4109f9:	lahf   
  4109fa:	add    al,0x39
  4109fc:	cs push edi
  4109fe:	repz repnz (bad) 
  410a01:	adc    ebp,esp
  410a03:	push   0x8b5f8215
  410a08:	test   al,0xb9
  410a0a:	inc    edi
  410a0b:	or     edi,DWORD PTR [edx+0x4d]
  410a0e:	sub    edx,DWORD PTR [eax+0x50]
  410a11:	int    0x6a
  410a13:	dec    eax
  410a14:	mov    eax,DWORD PTR [eax]
  410a16:	sbb    ecx,eax
  410a18:	xor    edi,DWORD PTR [ebp+ebx*1+0x25e6aa0b]
  410a1f:	jbe    0x4109de
  410a21:	jmp    0xec63:0x1f2ae891
  410a28:	or     eax,0x47a3a3b5
  410a2d:	pop    ebp
  410a2e:	fwait
  410a2f:	retf   0x4647
  410a32:	cmc    
  410a33:	rcl    ebp,0x14
  410a36:	sub    eax,0xe950ef03
  410a3b:	adc    ebp,ebx
  410a3d:	jne    0x410ab2
  410a3f:	arpl   WORD PTR [eax-0x3d4bf734],bp
  410a45:	mov    al,0x5d
  410a47:	mov    al,0x50
  410a49:	xchg   ebx,eax
  410a4a:	daa    
  410a4b:	loope  0x410a9f
  410a4d:	and    bl,cl
  410a4f:	sar    ebx,0xe1
  410a52:	cmp    DWORD PTR [ecx-0x48ecfbc5],ebp
  410a58:	ss adc BYTE PTR es:[esi*2-0x6293ff59],bl
  410a61:	test   al,0x8a
  410a63:	sub    esi,DWORD PTR [ebx+0x54]
  410a66:	push   cs
  410a67:	scas   al,BYTE PTR es:[edi]
  410a68:	push   ds
  410a69:	dec    ecx
  410a6a:	sti    
  410a6b:	inc    esp
  410a6c:	(bad)  
  410a6e:	fcomp  DWORD PTR [ebp-0x66]
  410a71:	mov    bh,0xd9
  410a73:	jns    0x410ae6
  410a75:	cmp    al,BYTE PTR [edi-0x6a]
  410a78:	xchg   edx,eax
  410a79:	fst    DWORD PTR [edi-0x786b8a08]
  410a7f:	out    dx,al
  410a80:	cmp    DWORD PTR [ebx+edx*8-0x80],ebp
  410a84:	push   0xadb2332c
  410a89:	adc    al,0x2e
  410a8b:	int    0x8
  410a8d:	xchg   esi,ebx
  410a8f:	or     al,0x1b
  410a91:	mov    esi,0x94b1e9eb
  410a96:	addr16 xchg edi,eax
  410a98:	into   
  410a99:	add    cl,cl
  410a9b:	push   ss
  410a9c:	jne    0x410a2a
  410a9e:	test   al,0xff
  410aa0:	and    edx,ecx
  410aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aa3:	push   edx
  410aa4:	(bad)  
  410aa5:	sub    al,0x4a
  410aa7:	cmovns edx,DWORD PTR [ebx]
  410aaa:	pop    ss
  410aab:	inc    edx
  410aac:	cmp    al,BYTE PTR [ecx-0x7]
  410aaf:	mov    dh,0x6c
  410ab1:	ret    0xf056
  410ab4:	leave  
  410ab5:	ret    
  410ab6:	cwde   
  410ab7:	push   esi
  410ab8:	sbb    BYTE PTR [edx+0x24],0x57
  410abc:	aad    0xbe
  410abe:	pop    ss
  410abf:	mov    ebx,0xa95dd8e9
  410ac4:	cli    
  410ac5:	(bad)  
  410ac6:	sub    al,0x7f
  410ac8:	adc    al,0x41
  410aca:	fwait
  410acb:	inc    ebp
  410acc:	add    al,BYTE PTR [ecx-0x413bf347]
  410ad2:	inc    edx
  410ad3:	popf   
  410ad4:	mov    dl,0x81
  410ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad7:	lock sbb ecx,ebx
  410ada:	sub    al,bl
  410adc:	mov    ch,0xd5
  410ade:	jnp    0x410a86
  410ae0:	xchg   ebx,eax
  410ae1:	pusha  
  410ae2:	xor    eax,0xdf64c7fd
  410ae7:	pop    es
  410ae8:	pop    edx
  410ae9:	xchg   edi,eax
  410aea:	gs mov esp,0xe4212ab6
  410af0:	push   0xfffffff3
  410af2:	push   ebp
  410af3:	cmp    BYTE PTR [ebp+ebx*4-0x389018ed],cl
  410afa:	or     ch,BYTE PTR [ebp+0x56]
  410afd:	lea    ebx,[ecx+0x53]
  410b00:	mov    ah,0x30
  410b02:	or     bl,BYTE PTR [edx]
  410b04:	test   al,0x56
  410b06:	out    0x1f,al
  410b08:	ror    ecx,cl
  410b0a:	shr    BYTE PTR [ebx],1
  410b0c:	rcl    esp,1
  410b0e:	mov    dl,0x8c
  410b10:	(bad)  
  410b11:	fadd   DWORD PTR [esi-0x10a60559]
  410b17:	inc    esp
  410b18:	in     al,dx
  410b19:	adc    eax,0x5ab9cb1
  410b1e:	ss mov bh,0xa1
  410b21:	rcl    BYTE PTR [esi],0x2e
  410b24:	jb     0x410b44
  410b26:	and    eax,0x2cb0c705
  410b2b:	jno    0x410ad8
  410b2d:	or     edx,DWORD PTR [edx+0x7c]
  410b30:	pusha  
  410b31:	out    dx,eax
  410b32:	mov    ch,0x71
  410b34:	inc    edx
  410b35:	call   0x312241fa
  410b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b3b:	out    dx,al
  410b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b3d:	dec    ebp
  410b3e:	mov    esp,0x3edd216f
  410b43:	xlat   BYTE PTR ds:[ebx]
  410b44:	xor    ah,dl
  410b46:	lods   al,BYTE PTR ds:[esi]
  410b47:	popa   
  410b48:	sbb    BYTE PTR ds:0xdbed899e,0x4a
  410b4f:	(bad)  
  410b50:	pop    ecx
  410b51:	xor    eax,0x8185dbe6
  410b56:	cmc    
  410b57:	ror    cl,cl
  410b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b5a:	sbb    eax,0x2cd4eff4
  410b5f:	shl    BYTE PTR [ecx+0x6aa7bfc5],0xa3
  410b66:	xchg   esp,eax
  410b67:	xlat   BYTE PTR ds:[ebx]
  410b68:	adc    BYTE PTR ds:0xbb14d6b4,bl
  410b6e:	cld    
  410b6f:	mov    ebx,0x469e195e
  410b74:	icebp  
  410b75:	mov    ?,WORD PTR [ebx-0x30]
  410b78:	jle    0x410b91
  410b7a:	fidivr DWORD PTR [edx+0x25]
  410b7d:	xor    BYTE PTR [esi],dh
  410b7f:	std    
  410b80:	sub    eax,esp
  410b82:	mov    DWORD PTR [ebx+ebp*1-0x108604d9],ecx
  410b89:	push   cs
  410b8a:	xor    edi,DWORD PTR [ebx]
  410b8c:	and    dh,BYTE PTR [eax]
  410b8e:	cmp    al,0xa7
  410b90:	fnstsw WORD PTR [edi+eiz*2+0x51]
  410b94:	int    0x84
  410b96:	xchg   esp,eax
  410b97:	jno    0x410be5
  410b99:	xor    eax,0xab0d99a4
  410b9e:	cwde   
  410b9f:	sub    al,0xc3
  410ba1:	pop    ebx
  410ba2:	inc    ebp
  410ba3:	or     al,0xe3
  410ba5:	mov    edi,0xe267e1fe
  410baa:	pop    esi
  410bab:	cli    
  410bac:	and    esi,eax
  410bae:	adc    eax,0xb3afaad3
  410bb3:	sbb    eax,0x1d2b083
  410bb8:	inc    ebp
  410bb9:	fwait
  410bba:	xor    esp,DWORD PTR [ebx-0x774bf8c]
  410bc0:	scas   eax,DWORD PTR es:[edi]
  410bc1:	push   cs
  410bc2:	jns    0x410bc8
  410bc4:	outs   dx,DWORD PTR ds:[esi]
  410bc5:	mov    dh,0xef
  410bc7:	mov    esi,0x58bc0741
  410bcc:	cmp    dl,BYTE PTR [esi-0x7a]
  410bcf:	add    dl,BYTE PTR [esi+0x53]
  410bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd3:	aam    0xd0
  410bd5:	or     eax,0x962321bc
  410bda:	cmp    ebx,0x2db81095
  410be0:	loopne 0x410b91
  410be2:	xor    esi,DWORD PTR [edi+0x1ab98595]
  410be8:	mov    bl,0xb2
  410bea:	(bad)  
  410beb:	xlat   BYTE PTR ds:[ebx]
  410bec:	pop    ds
  410bed:	adc    al,0x73
  410bef:	rcl    BYTE PTR [eax+0x4e59c8d6],0x23
  410bf6:	add    al,0x44
  410bf8:	mov    gs,WORD PTR [ebx-0x68]
  410bfb:	ret    
  410bfc:	pop    es
  410bfd:	cmovae ebx,edi
  410c00:	dec    esi
  410c01:	hlt    
  410c02:	test   BYTE PTR [eax-0xd],bl
  410c05:	ins    DWORD PTR es:[edi],dx
  410c06:	mov    ah,cl
  410c08:	out    0x7f,al
  410c0a:	loop   0x410b8d
  410c0c:	repz aas 
  410c0e:	ja     0x410b97
  410c10:	fild   WORD PTR [ebp-0x2]
  410c13:	(bad)  
  410c14:	test   WORD PTR [ebx+0x2bd295d9],bp
  410c1b:	pop    ss
  410c1c:	dec    ebx
  410c1d:	xchg   esi,eax
  410c1e:	mov    bl,0x91
  410c20:	fs les esp,FWORD PTR cs:[ebx+0x25]
  410c25:	inc    edi
  410c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c27:	mov    ebx,0x4c160186
  410c2c:	mov    edx,0xc91a1f07
  410c31:	dec    esp
  410c32:	mov    ebp,0xed9e29a9
  410c37:	(bad)  
  410c38:	into   
  410c39:	rol    DWORD PTR [edx-0x20ea167d],cl
  410c3f:	in     al,0x1a
  410c41:	xlat   BYTE PTR ds:[ebx]
  410c42:	popa   
  410c43:	lea    eax,ds:0x1b7046c0
  410c49:	xchg   DWORD PTR [ebp+0x10af1c97],ecx
  410c4f:	outs   dx,DWORD PTR ds:[si]
  410c51:	cld    
  410c52:	xchg   esi,eax
  410c53:	mov    dh,0x30
  410c55:	out    0x3d,eax
  410c57:	or     eax,0x44d4761
  410c5c:	(bad)  
  410c5d:	(bad)  
  410c5f:	(bad)  
  410c60:	int    0x33
  410c62:	fmul   QWORD PTR [edi]
  410c64:	aas    
  410c65:	inc    ebx
  410c66:	mov    ds:0x1aa00d3e,al
  410c6b:	sbb    eax,0xca81430c
  410c70:	cmp    al,0x77
  410c72:	sbb    dh,BYTE PTR [esp+eiz*8-0x1497452a]
  410c79:	lds    eax,FWORD PTR [eax-0x12]
  410c7c:	fsub   DWORD PTR [esi]
  410c7e:	les    edx,FWORD PTR [edi]
  410c80:	dec    ecx
  410c81:	push   eax
  410c82:	outs   dx,DWORD PTR ds:[esi]
  410c83:	jg     0x410c26
  410c85:	sbb    DWORD PTR [ecx+eax*4],0xffffffc9
  410c89:	jmp    0xd574759d
  410c8e:	shld   edx,ecx,0x5b
  410c92:	cmp    DWORD PTR [ebx-0x24],ecx
  410c95:	push   0x7ebe8f12
  410c9a:	pop    ebx
  410c9b:	call   0x2c3f0cd7
  410ca0:	ret    
  410ca1:	lods   al,BYTE PTR ds:[esi]
  410ca2:	popf   
  410ca3:	repz jns 0x410c55
  410ca6:	ja     0x410cff
  410ca8:	iret   
  410ca9:	jne    0x410c57
  410cab:	push   ebp
  410cac:	cs xchg ebp,eax
  410cae:	sbb    cl,bl
  410cb0:	(bad)  
  410cb1:	sar    DWORD PTR [esi+0x7da2ac88],0x46
  410cb8:	repz inc ebp
  410cba:	jle    0x410d07
  410cbc:	pop    ss
  410cbd:	add    al,0xf1
  410cbf:	div    BYTE PTR [eax]
  410cc1:	inc    eax
  410cc2:	push   0xd9c717c1
  410cc7:	jecxz  0x410c78
  410cc9:	jmp    0x2b049a64
  410cce:	push   ds
  410ccf:	mov    cs,WORD PTR ds:0x428ef3a7
  410cd5:	add    eax,0x2b4d0aa
  410cda:	push   ss
  410cdb:	ret    
  410cdc:	cmp    al,0xa3
  410cde:	pop    ds
  410cdf:	retf   
  410ce0:	dec    esi
  410ce1:	ja     0x410d5a
  410ce3:	les    esp,FWORD PTR [ecx]
  410ce5:	inc    eax
  410ce6:	das    
  410ce7:	jns    0x410cc3
  410ce9:	pushf  
  410cea:	cdq    
  410ceb:	scas   al,BYTE PTR es:[edi]
  410cec:	xlat   BYTE PTR ds:[ebx]
  410ced:	cs and ah,bl
  410cf0:	cmp    eax,0x1e57139f
  410cf5:	pop    ebp
  410cf6:	cmp    eax,0x59636470
  410cfb:	dec    eax
  410cfc:	cmp    ah,dl
  410cfe:	jge    0x410d7d
  410d00:	and    eax,0x319d4afe
  410d05:	cli    
  410d06:	(bad)  
  410d07:	ror    BYTE PTR [ebp-0x52f297db],1
  410d0d:	and    eax,0x477964f8
  410d12:	pop    esi
  410d13:	fistp  QWORD PTR [ebx]
  410d15:	ins    DWORD PTR es:[edi],dx
  410d16:	push   ss
  410d17:	mov    eax,0x4caf3ad7
  410d1c:	lea    ecx,[esi+esi*1]
  410d1f:	pop    ebx
  410d20:	rol    BYTE PTR [ecx+0x53],1
  410d23:	pop    esp
  410d24:	mov    bl,0x2
  410d26:	fld    TBYTE PTR ds:0xb2ce3c69
  410d2c:	adc    BYTE PTR [esi-0x78],dh
  410d2f:	adc    DWORD PTR ds:0xbc78b0ab,edi
  410d35:	mov    ch,0xb4
  410d37:	lea    ebp,[ebx]
  410d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d3a:	push   sp
  410d3c:	cld    
  410d3d:	rcr    BYTE PTR [ebx+0x26],cl
  410d40:	and    dh,cl
  410d42:	xor    eax,DWORD PTR [ecx+0x6e]
  410d45:	lds    esp,FWORD PTR [ebp-0x7a]
  410d48:	sub    DWORD PTR [edi-0x3d],edi
  410d4b:	mov    esi,0xcf20706d
  410d50:	cmp    ah,dl
  410d52:	imul   eax,DWORD PTR [eax+edi*2],0x7394e7f7
  410d59:	inc    esp
  410d5a:	(bad)  
  410d5b:	es jnp 0x410cfe
  410d5e:	mov    esi,edx
  410d60:	dec    ebp
  410d61:	idiv   DWORD PTR [esi+edx*8]
  410d64:	and    eax,DWORD PTR [ebx]
  410d66:	outs   dx,DWORD PTR ds:[esi]
  410d67:	push   edx
  410d68:	sub    DWORD PTR [eax],esp
  410d6a:	cld    
  410d6b:	dec    ecx
  410d6c:	sbb    al,0x4d
  410d6e:	out    0xf4,al
  410d70:	lods   al,BYTE PTR ds:[esi]
  410d71:	in     eax,0xe0
  410d73:	xchg   esi,eax
  410d74:	retf   
  410d75:	jnp    0x410df5
  410d77:	inc    esp
  410d78:	push   ds
  410d79:	sbb    ebx,ebp
  410d7b:	ret    0x4990
  410d7e:	cmp    eax,0x5e6b56ea
  410d83:	sub    al,0x19
  410d85:	mov    eax,0x90dd4dec
  410d8a:	inc    esi
  410d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d8c:	nop
  410d8d:	lock outs dx,BYTE PTR ds:[esi]
  410d8f:	mov    dh,0xef
  410d91:	jg     0x410d6d
  410d93:	scas   al,BYTE PTR es:[edi]
  410d94:	ret    
  410d95:	xchg   DWORD PTR [eax],ecx
  410d97:	fs add eax,0x7225058c
  410d9d:	outs   dx,BYTE PTR ds:[esi]
  410d9e:	fidivr WORD PTR ds:0xd198df39
  410da4:	(bad)  
  410da5:	repnz fild WORD PTR [eax-0x63c1dd91]
  410dac:	jl     0x410d46
  410dae:	mov    ecx,0x73aa4cb9
  410db3:	jmp    0xa950:0x2f6bbc59
  410dba:	call   0xa78a:0x66d8a19c
  410dc1:	popa   
  410dc2:	es mov ah,0x4e
  410dc5:	jae    0x410e40
  410dc7:	cdq    
  410dc8:	push   0x4851f939
  410dcd:	inc    ecx
  410dce:	inc    esp
  410dcf:	xchg   esi,eax
  410dd0:	mov    al,0x16
  410dd2:	sub    DWORD PTR [ebx+ebp*1+0x148f798b],ebx
  410dd9:	mov    cl,0x7f
  410ddb:	pop    ds
  410ddc:	jmp    0x410d7d
  410dde:	pop    ds
  410ddf:	inc    edx
  410de0:	jne    0x410e15
  410de2:	or     DWORD PTR [esi],edx
  410de4:	in     eax,dx
  410de5:	lahf   
  410de6:	cmp    eax,esi
  410de8:	sub    DWORD PTR [esi-0x35db28a],edx
  410dee:	jmp    0x410e33
  410df0:	mov    dl,ch
  410df2:	cmp    dl,dl
  410df4:	sub    eax,0xbeb9a3a6
  410df9:	fwait
  410dfa:	inc    esi
  410dfb:	bound  ebp,QWORD PTR [edx]
  410dfd:	add    al,0xaa
  410dff:	push   ds
  410e00:	retf   0x9b6e
  410e03:	jb     0x410de7
  410e05:	and    bl,dl
  410e07:	mov    BYTE PTR [edi],bh
  410e09:	mov    esp,0xf6aef847
  410e0e:	mov    ch,cl
  410e10:	xchg   esp,eax
  410e11:	sub    esp,DWORD PTR [ebx+0x5d4c9dcb]
  410e17:	cmp    ch,ch
  410e19:	cwde   
  410e1a:	fdiv   st(0),st
  410e1c:	repnz pop ebx
  410e1e:	sbb    al,0xae
  410e21:	xlat   BYTE PTR ds:[ebx]
  410e22:	xor    bh,BYTE PTR [ebp-0x98408d9]
  410e28:	jnp    0x410dd6
  410e2a:	pop    ss
  410e2b:	pop    ss
  410e2c:	imul   ebx,DWORD PTR [ebx-0x4c6d50ac],0xb4103b15
  410e36:	mov    bl,0xe8
  410e38:	adc    DWORD PTR [esi],edx
  410e3a:	cmp    DWORD PTR [ebx-0x26],ecx
  410e3d:	dec    ecx
  410e3e:	fsubr  QWORD PTR [edi+0x0]
  410e41:	jge    0x410e21
  410e43:	loopne 0x410e10
  410e45:	cwde   
  410e46:	dec    ecx
  410e47:	sub    DWORD PTR [esi-0x10],esi
  410e4a:	xchg   dh,dh
  410e4c:	push   ebp
  410e4d:	sub    esi,0x59837214
  410e53:	xchg   edx,eax
  410e54:	pop    ds
  410e55:	in     eax,dx
  410e56:	shl    BYTE PTR [esi-0x2c],cl
  410e59:	jbe    0x410e12
  410e5b:	push   ss
  410e5c:	in     al,dx
  410e5d:	(bad)  
  410e5e:	or     BYTE PTR [esi+0x8b3ac2d],cl
  410e64:	or     BYTE PTR [edi],cl
  410e66:	cdq    
  410e67:	ja     0x410e35
  410e69:	cs int 0x36
  410e6c:	add    ecx,DWORD PTR [ecx-0x77]
  410e6f:	pop    ebx
  410e70:	sbb    eax,0x17ce93c2
  410e75:	lds    edi,FWORD PTR [edi]
  410e77:	sbb    al,0x5d
  410e79:	ror    DWORD PTR [esi+edx*4],0x31
  410e7d:	fnstenv [esi+0x18239732]
  410e83:	icebp  
  410e84:	mov    ebp,0xb22e388
  410e89:	sub    ah,BYTE PTR [edi+0x3]
  410e8c:	push   edi
  410e8d:	jmp    0x410e1e
  410e8f:	ins    DWORD PTR es:[edi],dx
  410e90:	jns    0x410eb0
  410e92:	aam    0x59
  410e94:	push   ebx
  410e95:	jmp    0x410ed7
  410e97:	pop    ecx
  410e98:	fimul  DWORD PTR [esi-0x71532785]
  410e9e:	adc    DWORD PTR [eax-0x4d],edx
  410ea1:	sub    ecx,DWORD PTR [ecx-0x30]
  410ea4:	das    
  410ea5:	dec    ecx
  410ea6:	xlat   BYTE PTR ds:[ebx]
  410ea7:	sbb    BYTE PTR [ebp+0x4053ddf],dl
  410ead:	int    0xea
  410eaf:	cmp    eax,0xa58cbbd1
  410eb4:	mov    eax,ds:0xe0740d77
  410eb9:	aad    0x33
  410ebb:	(bad)  
  410ebc:	xchg   ecx,eax
  410ebd:	clc    
  410ebe:	push   ds
  410ebf:	mov    edx,0xaef402a0
  410ec4:	inc    esp
  410ec5:	mov    dh,0x8d
  410ec7:	(bad)  
  410ec8:	pusha  
  410ec9:	test   BYTE PTR [edi+0x385d1c6a],ah
  410ecf:	inc    ecx
  410ed0:	dec    ebp
  410ed1:	scas   al,BYTE PTR es:[edi]
  410ed2:	sar    edx,0x5c
  410ed5:	mov    al,0xa5
  410ed7:	xchg   ebx,esp
  410ed9:	(bad)  
  410eda:	shr    BYTE PTR [ebx-0x39],cl
  410edd:	jp     0x410efb
  410edf:	loopne 0x410eed
  410ee1:	jo     0x410e99
  410ee3:	sti    
  410ee4:	adc    DWORD PTR [eax-0x110060a6],ebp
  410eea:	test   BYTE PTR [edi+edi*4+0x48],bl
  410eee:	call   0xbe30:0x263b4656
  410ef5:	fldenv [ecx-0x3e6587f]
  410efb:	xchg   edx,eax
  410efc:	gs out 0xc9,al
  410eff:	inc    edx
  410f00:	adc    al,0xc3
  410f02:	and    edi,DWORD PTR [eax]
  410f04:	dec    edx
  410f05:	mov    esi,0x65741ef5
  410f0a:	push   eax
  410f0b:	mov    cl,0xa
  410f0d:	cmp    dh,BYTE PTR [ecx+ecx*4]
  410f10:	cli    
  410f11:	jl     0x410eda
  410f13:	sbb    al,0x51
  410f15:	xor    BYTE PTR fs:[edi],dl
  410f18:	dec    edi
  410f19:	imul   ecx,DWORD PTR [edi+0x7fbe6011],0xffffffb9
  410f20:	add    al,0x34
  410f22:	das    
  410f23:	int3   
  410f24:	ins    DWORD PTR es:[edi],dx
  410f25:	pop    esi
  410f26:	push   edx
  410f27:	and    ebp,DWORD PTR [edi+0x65]
  410f2a:	sbb    ebp,DWORD PTR [ebx]
  410f2c:	call   0xf034d0cb
  410f31:	test   al,0xcf
  410f33:	xchg   DWORD PTR [ebp-0x6ee5ba45],ebx
  410f39:	rcr    BYTE PTR [eax+ebx*1+0x3782b688],cl
  410f40:	shl    DWORD PTR [eax],cl
  410f42:	fbld   TBYTE PTR [edi+0x52531615]
  410f48:	cli    
  410f49:	rcr    esi,0xd6
  410f4c:	add    bh,BYTE PTR [eax+0x6b3daa57]
  410f52:	leave  
  410f53:	das    
  410f54:	add    eax,0x8d45be23
  410f59:	out    0x41,al
  410f5b:	addr16 (bad) 
  410f5d:	rol    ebx,cl
  410f5f:	mov    bl,0xf7
  410f61:	dec    ebx
  410f62:	cmp    eax,0xa9c4bae9
  410f67:	cmc    
  410f68:	push   ds
  410f69:	jns    0x410f99
  410f6b:	pop    edx
  410f6c:	pop    es
  410f6d:	lods   eax,DWORD PTR ds:[esi]
  410f6e:	mov    WORD PTR [eax],fs
  410f70:	aaa    
  410f71:	stc    
  410f72:	push   edi
  410f73:	dec    edx
  410f74:	icebp  
  410f75:	jle    0x410f97
  410f77:	sbb    al,BYTE PTR [ecx]
  410f79:	(bad)  
  410f7a:	mov    WORD PTR [edi-0x41],ds
  410f7d:	call   0xe69ca760
  410f82:	adc    esi,0xffffffed
  410f85:	mov    bl,ch
  410f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f88:	mov    al,ds:0x973302d1
  410f8d:	push   edi
  410f8e:	push   edi
  410f8f:	or     DWORD PTR [ebx+ecx*4-0x39],ecx
  410f93:	xchg   ebx,eax
  410f94:	mov    edi,DWORD PTR [di+0x54]
  410f98:	sbb    ah,bl
  410f9a:	sahf   
  410f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f9c:	and    al,0x27
  410f9e:	push   0x62e187c3
  410fa3:	mov    WORD PTR [esi+ebx*1],?
  410fa6:	push   eax
  410fa7:	(bad)  
  410fa8:	or     eax,0x5bf9cc0b
  410fad:	bound  ebp,QWORD PTR ss:[eax-0x10]
  410fb1:	adc    DWORD PTR [ebp+0x53],ebx
  410fb4:	add    al,0xc3
  410fb6:	int    0x87
  410fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb9:	push   cs
  410fba:	mov    edx,fs
  410fbc:	pop    esi
  410fbd:	add    DWORD PTR [eax+0x6],edi
  410fc0:	cmp    ch,BYTE PTR [ecx+0x5a]
  410fc3:	and    DWORD PTR [eax+ebx*8],eax
  410fc6:	inc    edi
  410fc7:	repz fwait
  410fc9:	pusha  
  410fca:	stc    
  410fcb:	or     dl,BYTE PTR [edx-0xc]
  410fce:	mov    edx,0x844461ac
  410fd3:	or     BYTE PTR [edi+0x1a],dl
  410fd6:	mov    ah,0xdf
  410fd8:	xchg   bl,ch
  410fda:	gs xchg edi,eax
  410fdc:	mov    ds:0x908bbf4c,eax
  410fe1:	fld    QWORD PTR [ebp-0x1c]
  410fe4:	adc    al,0xa2
  410fe6:	dec    eax
  410fe7:	xlat   BYTE PTR ds:[ebx]
  410fe8:	or     BYTE PTR [esi+0x6b3fb439],bh
  410fee:	add    al,0x1c
  410ff0:	repnz les ebx,FWORD PTR [ebx-0x211aeae7]
  410ff7:	inc    eax
  410ff8:	xchg   edx,eax
  410ff9:	and    esp,edx
  410ffb:	mov    al,0x87
  410ffd:	mov    edx,0x98509a49
  411002:	sbb    dl,BYTE PTR [esi-0xd1a3d8e]
  411008:	push   0xa0794460
  41100d:	fsubr  st(3),st
  41100f:	dec    edx
  411010:	stos   BYTE PTR es:[edi],al
  411011:	add    DWORD PTR [ecx-0xd4e2e5b],edi
  411017:	adc    ah,cl
  411019:	jb     0x411009
  41101b:	dec    esi
  41101c:	and    DWORD PTR [edx],esp
  41101e:	mov    bh,0x6
  411020:	and    BYTE PTR [edi+eax*4],ch
  411023:	sub    eax,0x7beda848
  411028:	pop    ds
  411029:	ftst   
  41102b:	cmp    al,0xe9
  41102d:	ins    BYTE PTR es:[edi],dx
  41102e:	jle    0x410fe8
  411030:	fistp  QWORD PTR [ecx+edx*8-0x42dadee1]
  411037:	aam    0x47
  411039:	push   cs
  41103a:	arpl   cx,si
  41103c:	push   es
  41103d:	mov    BYTE PTR [esi],ch
  41103f:	rol    BYTE PTR [ecx],1
  411041:	test   DWORD PTR [ebx+0x7a],0x27e4e10e
  411048:	sub    edx,eax
  41104a:	sar    BYTE PTR [esi+0x2340abaf],0x58
  411051:	call   0xffb4dc14
  411056:	mov    ds:0x876b6f87,eax
  41105b:	ds inc edx
  41105d:	out    0x3f,eax
  41105f:	push   cs
  411060:	repz mov eax,ds:0x331388d
  411066:	in     eax,0x89
  411068:	jg     0x411092
  41106a:	inc    ebp
  41106b:	inc    edx
  41106c:	adc    DWORD PTR [esi+0x29],edx
  41106f:	pop    ecx
  411070:	adc    eax,0xc17ecf85
  411075:	(bad)  
  411076:	pop    ebp
  411077:	xlat   BYTE PTR ds:[ebx]
  411078:	shl    DWORD PTR [esi+0x50],1
  41107b:	adc    BYTE PTR [eax-0x27],dh
  41107e:	dec    esp
  41107f:	gs cs call 0x28020ba5
  411086:	ss mov bl,0x63
  411089:	(bad)  
  41108a:	sti    
  41108b:	pcmpgtb mm3,QWORD PTR [eax+edx*2-0x1b]
  411090:	jmp    0x2dd4fcd6
  411095:	enter  0x9ce9,0x8b
  411099:	(bad)  
  41109a:	in     eax,dx
  41109b:	mov    cl,0x6d
  41109d:	mov    ah,0x20
  41109f:	outs   dx,DWORD PTR ds:[esi]
  4110a0:	loopne 0x411028
  4110a2:	mov    ah,0x7d
  4110a4:	loope  0x41110a
  4110a6:	cmp    edx,ebp
  4110a8:	(bad)  
  4110a9:	addr16 dec edx
  4110ab:	mov    eax,ds:0xfb019aac
  4110b0:	sub    eax,0xa57c0d81
  4110b5:	rcr    DWORD PTR [edx-0x6deb9bb9],cl
  4110bb:	lea    eax,[edi-0x4d8c81d2]
  4110c1:	vpunpcklwd zmm4{k2}{z},zmm7,zmm1
  4110c7:	or     ebx,DWORD PTR [ebx+0x1872a21a]
  4110cd:	test   BYTE PTR [edx],0x69
  4110d0:	(bad)  
  4110d1:	sti    
  4110d2:	(bad)  
  4110d3:	push   ebp
  4110d4:	mov    eax,ds:0x6791be34
  4110d9:	fcomip st,st(7)
  4110db:	cmp    ch,BYTE PTR [edi+0x33]
  4110de:	lahf   
  4110df:	mov    edx,DWORD PTR [ebx]
  4110e1:	add    eax,0x5106c7e0
  4110e6:	jo     0x4110a9
  4110e8:	push   ebx
  4110e9:	mov    ch,0xe1
  4110eb:	or     dl,bh
  4110ed:	scas   eax,DWORD PTR es:[edi]
  4110ee:	call   0x4c1b:0x5398e69f
  4110f5:	mov    DWORD PTR [edx-0x1c],esi
  4110f8:	cmp    eax,0xd5f518cf
  4110fd:	(bad)  
  411101:	arpl   WORD PTR [edi-0x385f27b],sp
  411107:	mov    ds:0x93802757,eax
  41110c:	aad    0x5b
  41110e:	mov    es,eax
  411110:	dec    edx
  411111:	xlat   BYTE PTR ds:[ebx]
  411112:	ins    BYTE PTR es:[edi],dx
  411113:	jb     0x41109e
  411115:	dec    eax
  411116:	pop    ss
  411117:	xor    al,0x49
  411119:	inc    esi
  41111a:	xchg   ebp,eax
  41111b:	in     al,0xd1
  41111d:	inc    esp
  41111e:	bound  eax,QWORD PTR [edx-0x6b]
  411121:	scas   al,BYTE PTR es:[edi]
  411122:	mov    ah,0xb8
  411124:	mov    ds:0x994c03cf,eax
  411129:	(bad)  
  41112a:	xchg   ecx,eax
  41112b:	jb     0x4111a6
  41112d:	imul   edx,DWORD PTR [ebp-0x625279b1],0xed24e272
  411137:	ffreep st(7)
  411139:	adc    eax,0x43adb1e8
  41113e:	mov    edx,0xabcc5893
  411143:	add    DWORD PTR [edi],eax
  411145:	cmp    BYTE PTR [edi+ecx*1],ah
  411148:	int    0x44
  41114a:	(bad)  
  41114b:	inc    ebp
  41114c:	and    al,0xa1
  41114e:	or     eax,0xafa76dec
  411153:	dec    ecx
  411154:	mov    ds:0x8e5e393c,eax
  411159:	mov    WORD PTR [ebx+0x109d7740],ds
  41115f:	or     ebp,DWORD PTR [edx+0x104cdafd]
  411165:	push   0xdb4c6b9
  41116a:	inc    edx
  41116b:	jbe    0x41113a
  41116d:	in     eax,dx
  41116e:	pop    ds
  41116f:	add    eax,0x6bb79c09
  411174:	xor    dl,bl
  411176:	fnstsw WORD PTR [edx]
  411178:	addr16 mov ebx,0x4a9556a2
  41117e:	xchg   di,ax
  411180:	fisttp QWORD PTR ds:0xd5012c74
  411186:	pop    edi
  411187:	sub    edx,ecx
  411189:	add    DWORD PTR [ebp-0x28744194],0x3f4f2e99
  411193:	scas   al,BYTE PTR es:[edi]
  411194:	dec    ebx
  411195:	sub    al,0x9e
  411197:	jp     0x4111fc
  411199:	cmp    edx,ebx
  41119b:	dec    esi
  41119c:	jbe    0x411195
  41119e:	loopne 0x4111ef
  4111a0:	mov    eax,0x2569ab79
  4111a5:	je     0x411172
  4111a7:	addr16 into 
  4111a9:	sbb    ebx,edx
  4111ab:	xor    esi,DWORD PTR [esi+esi*8]
  4111ae:	jb     0x4111b3
  4111b0:	push   ebx
  4111b1:	push   esp
  4111b2:	jmp    DWORD PTR [eax]
  4111b4:	jnp    0x41114c
  4111b6:	in     eax,dx
  4111b7:	sbb    DWORD PTR [ecx-0x4b],esp
  4111ba:	add    DWORD PTR [edi+0xc],esp
  4111bd:	das    
  4111be:	loop   0x41115c
  4111c0:	popa   
  4111c1:	adc    eax,0x95f1e801
  4111c6:	hlt    
  4111c7:	(bad)  
  4111c8:	aaa    
  4111c9:	dec    ebp
  4111ca:	sub    eax,0xda321fae
  4111cf:	fnstcw WORD PTR [ecx+edx*4-0x65]
  4111d3:	imul   ecx,DWORD PTR [edi-0x394d962d],0x2
  4111da:	and    eax,0xb8f9e401
  4111df:	cmp    BYTE PTR [ebx-0x408c5176],dh
  4111e5:	das    
  4111e6:	adc    al,0x26
  4111e8:	retf   0xb2f0
  4111eb:	xor    al,0x93
  4111ed:	push   esp
  4111ee:	mov    dl,0xb3
  4111f0:	inc    edx
  4111f1:	xchg   edx,eax
  4111f2:	cmc    
  4111f3:	jg     0x41126b
  4111f5:	ror    esi,cl
  4111f7:	bound  ebp,QWORD PTR [edx]
  4111f9:	int    0xe4
  4111fb:	push   edx
  4111fc:	cdq    
  4111fd:	cld    
  4111fe:	push   edi
  4111ff:	(bad)  
  411200:	mov    eax,ds:0x7b33065a
  411205:	jno    0x411203
  411207:	inc    esp
  411208:	stc    
  411209:	ror    DWORD PTR [eax+0x4],cl
  41120c:	inc    edi
  41120d:	fld    QWORD PTR [ecx]
  41120f:	es popf 
  411211:	imul   edi,DWORD PTR [esi-0x3183aa4a],0x60
  411218:	add    eax,0xad05fb05
  41121d:	mov    eax,ds:0x74891cce
  411222:	sbb    bl,BYTE PTR [edi-0x511d97ae]
  411228:	stos   BYTE PTR es:[edi],al
  411229:	inc    edx
  41122a:	imul   esp,esi,0x3fe0f7c
  411230:	call   0x50cfd51
  411235:	pop    ebx
  411236:	and    al,0x7a
  411238:	fs scas al,BYTE PTR es:[edi]
  41123a:	(bad)  
  41123b:	and    eax,0x5f1efa26
  411240:	or     ecx,edi
  411242:	rcl    ebx,1
  411244:	adc    al,0xa
  411247:	leave  
  411248:	xor    eax,0xe8cb3217
  41124d:	data16 fild DWORD PTR [esi]
  411250:	mov    WORD PTR [ebp-0x667325fd],?
  411256:	call   0x52b8f7f2
  41125b:	daa    
  41125c:	ret    
  41125d:	int3   
  41125e:	xlat   BYTE PTR ds:[ebx]
  41125f:	pop    esi
  411260:	mov    ss,WORD PTR [edx-0x5cf143c6]
  411266:	add    BYTE PTR [ecx-0xa1fe172],dh
  41126c:	pop    es
  41126d:	int3   
  41126e:	nop
  41126f:	int    0xff
  411271:	mov    DWORD PTR [esi-0x7a],0x215c6d39
  411278:	pop    ecx
  411279:	push   ds
  41127a:	or     BYTE PTR [ecx+0x77],dh
  41127d:	call   ebp
  41127f:	push   esi
  411280:	(bad)  
  411281:	jg     0x4112fc
  411283:	cs cmp ch,ch
  411286:	test   BYTE PTR [edx+0x2e94b285],dl
  41128c:	lds    ebp,FWORD PTR cs:[ecx-0x7b51b118]
  411293:	retf   
  411294:	ins    BYTE PTR es:[edi],dx
  411295:	push   ss
  411296:	xor    DWORD PTR [ebp-0x1f61e7b7],0xffffffa3
  41129d:	popf   
  41129e:	xor    edx,DWORD PTR [ebx+ebx*2-0x51]
  4112a2:	or     esi,eax
  4112a4:	cld    
  4112a5:	pop    esi
  4112a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a7:	daa    
  4112a8:	lahf   
  4112a9:	out    dx,eax
  4112aa:	clc    
  4112ab:	sub    eax,0xbe198eb
  4112b0:	ja     0x4112ab
  4112b2:	mov    BYTE PTR [edi],al
  4112b4:	lock ss dec esi
  4112b7:	sbb    dl,dh
  4112b9:	push   ebx
  4112ba:	pop    ecx
  4112bb:	fdiv   QWORD PTR [ebx+0x4d6cb1dd]
  4112c1:	into   
  4112c2:	lds    ebx,FWORD PTR [ebx]
  4112c4:	add    ebp,DWORD PTR [eax+0x38061fcf]
  4112ca:	xchg   ebp,eax
  4112cb:	jae    0x41128b
  4112cd:	mov    ch,0xfb
  4112cf:	push   0x1389c349
  4112d4:	xor    al,BYTE PTR [ecx-0x1c98bb1b]
  4112da:	sbb    bl,BYTE PTR [ecx-0x62]
  4112dd:	mov    ecx,0x18498fb1
  4112e2:	sbb    edi,0x45eee283
  4112e8:	add    DWORD PTR [ebx],0xffffff88
  4112eb:	pop    esi
  4112ec:	fcmovne st,st(6)
  4112ee:	dec    edx
  4112ef:	push   ebx
  4112f0:	(bad)  
  4112f2:	shr    eax,0xb8
  4112f5:	mov    ds:0x492c72a3,al
  4112fa:	call   FWORD PTR [ebx-0x22]
  4112fd:	sbb    eax,0x499bb214
  411302:	inc    esp
  411303:	(bad)  
  411304:	xchg   edi,eax
  411305:	ror    DWORD PTR [edx+edx*4-0x2f],cl
  411309:	je     0x411387
  41130b:	inc    ebp
  41130c:	adc    eax,0xe16d3f0f
  411311:	nop
  411312:	popa   
  411313:	retf   0x3f10
  411316:	clc    
  411317:	pop    esp
  411318:	bound  edx,QWORD PTR [ecx+0xf]
  41131b:	call   0xa1aae209
  411320:	inc    ebx
  411321:	jecxz  0x41137e
  411323:	sbb    BYTE PTR [edx],dl
  411325:	retf   0x7fec
  411328:	xor    BYTE PTR [esi-0x3e],cl
  41132b:	mov    ds:0x34189eec,eax
  411330:	jp     0x411362
  411332:	mov    esi,0x4bf9549f
  411337:	xor    DWORD PTR [ebx-0x205b82f6],ebx
  41133d:	cdq    
  41133e:	(bad)  
  41133f:	add    WORD PTR [ebp+0x7d2747da],dx
  411346:	mov    ch,0x20
  411348:	lods   eax,DWORD PTR ds:[esi]
  411349:	push   ebp
  41134a:	pop    ds
  41134b:	cld    
  41134c:	jmp    0xec1b:0x3f89d2cc
  411353:	mov    ebp,esi
  411355:	lock cmp eax,0x5e589e97
  41135b:	in     eax,dx
  41135c:	js     0x4112e9
  41135e:	mov    edx,0xbd5c57d
  411363:	cwde   
  411364:	stc    
  411365:	loope  0x411356
  411367:	push   esp
  411368:	pop    edx
  41136a:	lahf   
  41136b:	fwait
  41136c:	push   eax
  41136d:	popf   
  41136e:	dec    esi
  41136f:	or     bl,BYTE PTR [ebx]
  411371:	push   ss
  411372:	push   ebp
  411373:	gs inc esi
  411375:	push   ss
  411376:	pop    esp
  411377:	pop    ds
  411378:	xchg   ecx,eax
  411379:	adc    DWORD PTR [ebp+0x21f1c25a],0x57cff5ef
  411383:	dec    esi
  411384:	nop
  411385:	loop   0x411338
  411387:	or     dl,bl
  411389:	push   ebx
  41138a:	addr16 push 0x6692e80a
  411390:	in     al,dx
  411391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411392:	sti    
  411393:	int3   
  411394:	outs   dx,DWORD PTR ds:[esi]
  411395:	and    al,0x31
  411397:	and    bh,BYTE PTR [edi+ecx*4+0x29d6a0f4]
  41139e:	popa   
  41139f:	push   es
  4113a0:	mov    al,ds:0x3ea2ce04
  4113a5:	loop   0x4113dd
  4113a7:	outs   dx,DWORD PTR ds:[esi]
  4113a8:	out    0xaf,al
  4113aa:	sbb    eax,0x7a5822c
  4113af:	mov    esp,0xeeb003f8
  4113b4:	and    DWORD PTR [edi+0x36948857],0xc03c9bc0
  4113be:	xor    DWORD PTR [esi],0xfffffff6
  4113c1:	mov    dh,0xa5
  4113c3:	mov    ecx,0x3690ff5
  4113c8:	out    dx,eax
  4113c9:	imul   esi,edi,0x4d
  4113cc:	mov    bl,0x5c
  4113ce:	pushf  
  4113cf:	repz test eax,0x29a2edf5
  4113d5:	adc    al,BYTE PTR ds:0x28d84197
  4113db:	in     al,0xee
  4113dd:	pop    ebp
  4113de:	cmp    eax,0x8bf5d173
  4113e3:	fcom   QWORD PTR [esi+0x1d]
  4113e6:	fisub  WORD PTR [edi-0x7b71147c]
  4113ec:	in     al,0x7d
  4113ee:	push   edx
  4113ef:	push   0xffffffd8
  4113f1:	pop    ss
  4113f2:	mov    DWORD PTR [edx+0x9],edx
  4113f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f6:	rol    DWORD PTR ds:0x494f65fe,cl
  4113fc:	aad    0x64
  4113fe:	jge    0x4113d0
  411400:	adc    eax,0xc6242984
  411405:	call   0x6c4536f9
  41140a:	ds or  dh,0xc4
  41140e:	push   0x40
  411410:	dec    esi
  411411:	cmp    dl,BYTE PTR [edx]
  411413:	out    dx,eax
  411414:	inc    esi
  411415:	sub    ah,BYTE PTR [ebx+eiz*2-0xecfe412]
  41141c:	jp     0x4113f1
  41141e:	aas    
  41141f:	cdq    
  411420:	pop    ebp
  411421:	or     dl,BYTE PTR [esi-0x49f29deb]
  411427:	icebp  
  411428:	inc    eax
  411429:	leave  
  41142a:	(bad)  
  41142b:	std    
  41142c:	int    0xc5
  41142e:	int3   
  41142f:	shr    esp,cl
  411431:	jbe    0x4113d7
  411433:	jmp    0xed240f4c
  411438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411439:	imul   BYTE PTR [ebx]
  41143b:	lock jg 0x411469
  41143e:	dec    edx
  41143f:	push   ds
  411440:	not    BYTE PTR [edx-0x39]
  411443:	push   ss
  411444:	(bad)  
  411445:	jmp    0x53ed:0xf3c0ccfc
  41144c:	loop   0x41144b
  41144e:	xchg   edi,eax
  41144f:	jmp    0x3fb2:0xb34a56aa
  411456:	or     esi,edi
  411458:	in     eax,0xd5
  41145a:	jp     0x411494
  41145c:	call   0xf539d7b6
  411461:	in     eax,0x2a
  411463:	mov    ebp,0x43ab98d9
  411468:	inc    edi
  411469:	dec    eax
  41146a:	xchg   ecx,eax
  41146b:	in     al,0xb2
  41146d:	inc    eax
  41146e:	in     eax,0xa8
  411470:	and    ah,ch
  411472:	ins    DWORD PTR es:[edi],dx
  411473:	mov    esp,0x3e8d1f0a
  411478:	xlat   BYTE PTR ds:[ebx]
  411479:	add    BYTE PTR [ebx+0x5ac3618d],dh
  41147f:	xor    al,0x6f
  411481:	(bad)  
  411483:	int    0x1
  411485:	ins    BYTE PTR es:[edi],dx
  411486:	cmc    
  411487:	test   DWORD PTR [edx],esi
  411489:	mov    BYTE PTR [edx],al
  41148b:	mov    DWORD PTR [eax],ecx
  41148d:	jg     0x4114d9
  41148f:	mov    esp,0x2f4e316c
  411494:	js     0x411476
  411496:	sub    dl,BYTE PTR [ecx+0x25679fcd]
  41149c:	push   ebp
  41149d:	aas    
  41149e:	or     eax,0x9ea96851
  4114a3:	push   esi
  4114a4:	test   edi,ebp
  4114a6:	add    DWORD PTR [edi],ebx
  4114a8:	jne    0x411499
  4114aa:	mov    ebp,0x6e2533db
  4114af:	scas   eax,DWORD PTR es:[edi]
  4114b0:	or     BYTE PTR [eax-0x6f6eae24],bh
  4114b6:	fs mov dl,dl
  4114b9:	inc    ecx
  4114ba:	imul   DWORD PTR [esi-0x9]
  4114bd:	gs dec ecx
  4114bf:	mov    bh,0xd6
  4114c1:	add    dl,BYTE PTR [esi+0x48bacc4]
  4114c7:	(bad)  
  4114c8:	repz xchg edx,eax
  4114ca:	repnz aas 
  4114cc:	repnz int3 
  4114ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114cf:	adc    al,0x73
  4114d1:	adc    eax,DWORD PTR [esi-0x30b7773a]
  4114d7:	stos   BYTE PTR es:[edi],al
  4114d8:	out    0xde,eax
  4114da:	das    
  4114db:	(bad)  
  4114dc:	fimul  DWORD PTR [edi]
  4114de:	push   es
  4114df:	pop    es
  4114e0:	inc    edx
  4114e1:	int3   
  4114e2:	lods   al,BYTE PTR ds:[esi]
  4114e3:	loope  0x4114f6
  4114e5:	cmp    eax,0x122b4e3
  4114ea:	push   ebx
  4114eb:	push   esp
  4114ec:	les    ebx,FWORD PTR ds:0xf489ca9c
  4114f2:	retf   0x7c42
  4114f5:	jb     0x411547
  4114f7:	arpl   dx,cx
  4114f9:	or     esi,DWORD PTR [edx-0x2a]
  4114fc:	sbb    eax,0xa1511c0d
  411501:	xchg   edi,eax
  411502:	pop    eax
  411503:	add    ch,BYTE PTR [esi-0x2]
  411506:	test   BYTE PTR [ebx+0x6bdb92b2],bl
  41150c:	pop    es
  41150d:	push   ecx
  41150e:	mov    al,0x30
  411510:	shr    DWORD PTR [esi+0x2f],0x91
  411514:	lods   al,BYTE PTR ds:[esi]
  411515:	(bad)  
  411516:	out    0x97,al
  411518:	push   0x6a
  41151a:	adc    ebx,DWORD PTR [edi]
  41151c:	mov    ah,BYTE PTR [ebx+0x4caef8dd]
  411522:	fld    DWORD PTR [ecx+0x6c640c69]
  411529:	mov    al,0xa8
  41152b:	inc    eax
  41152c:	jmp    0x411513
  41152e:	inc    ebp
  41152f:	pusha  
  411530:	loope  0x41152d
  411532:	icebp  
  411533:	mov    dl,0x47
  411535:	add    BYTE PTR [ebx+edi*4+0x646f922],0xf8
  41153d:	ja     0x411573
  41153f:	out    0xa,eax
  411541:	mov    ds:0x97fdd31e,al
  411546:	imul   eax,DWORD PTR [ebx-0x7b],0xffffffc6
  41154a:	jae    0x411530
  41154c:	stos   BYTE PTR es:[edi],al
  41154d:	cmc    
  41154e:	cmp    BYTE PTR [edx+0x30],dh
  411551:	add    ch,BYTE PTR [esi+0x6d2e5790]
  411557:	add    eax,0xb0c59ea5
  41155c:	push   ss
  41155d:	push   ss
  41155e:	or     ebx,DWORD PTR [esi-0x7d52e4cd]
  411564:	mov    esp,0xb17700e1
  411569:	inc    eax
  41156a:	out    dx,al
  41156b:	dec    eax
  41156c:	sub    cl,bh
  41156e:	and    DWORD PTR [edi-0x59bfa0c4],edi
  411574:	or     BYTE PTR [esi-0x6f],bh
  411577:	mov    al,ds:0x6e8a5feb
  41157c:	and    bh,BYTE PTR [eax+0x3a92bb61]
  411582:	xor    eax,0x701e5fe
  411587:	mov    fs,WORD PTR [ebx-0x69]
  41158a:	int3   
  41158b:	mov    WORD PTR [eax],ss
  41158d:	bswap  eax
  41158f:	adc    DWORD PTR [ecx+0x5e9d41ff],ecx
  411595:	cmp    al,0x5a
  411597:	xor    edi,DWORD PTR [edx-0x22]
  41159a:	fimul  DWORD PTR [eax]
  41159c:	inc    esi
  41159d:	ins    DWORD PTR es:[edi],dx
  41159e:	outs   dx,DWORD PTR ds:[esi]
  41159f:	std    
  4115a0:	push   cs
  4115a1:	or     edi,DWORD PTR [ebx+eiz*4-0x1265bdcb]
  4115a8:	jne    0x4115a9
  4115aa:	in     al,0xe5
  4115ac:	das    
  4115ad:	ds dec ecx
  4115af:	cmp    BYTE PTR [eax-0x5f966b07],bl
  4115b5:	out    dx,eax
  4115b6:	sub    DWORD PTR [eax],ecx
  4115b8:	sub    DWORD PTR [edi-0x480679c3],edi
  4115be:	stos   DWORD PTR es:[edi],eax
  4115bf:	mov    edi,0x6990e427
  4115c4:	mov    esp,0x19e2719c
  4115c9:	into   
  4115ca:	sub    BYTE PTR ds:0xd8fddfb1,ch
  4115d0:	in     al,0xc
  4115d2:	pop    esi
  4115d3:	mov    eax,0xe9be2e88
  4115d8:	add    DWORD PTR [edx+0x4d],edi
  4115db:	jmp    0x9a43b7ad
  4115e0:	adc    al,0xb0
  4115e2:	in     eax,0x1b
  4115e4:	xchg   ecx,eax
  4115e5:	mov    WORD PTR [ecx-0x59],es
  4115e8:	inc    esi
  4115e9:	inc    edx
  4115ea:	shl    bh,cl
  4115ec:	xor    edi,edx
  4115ee:	sbb    edi,edi
  4115f0:	mov    ecx,0xc7189ecd
  4115f5:	sahf   
  4115f6:	sbb    al,0xc0
  4115f8:	jnp    0x41160e
  4115fa:	pusha  
  4115fb:	in     eax,0x40
  4115fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115fe:	seta   BYTE PTR [ecx]
  411601:	adc    eax,0x26897954
  411606:	mov    DWORD PTR [esp+eiz*2-0x6c],eax
  41160a:	push   eax
  41160b:	mov    eax,ds:0x47d3a55b
  411610:	mov    esi,0x84ff14aa
  411615:	inc    ebx
  411616:	push   0xc097c45
  41161b:	shl    BYTE PTR [esi+edx*2-0xc],cl
  41161f:	inc    ebp
  411620:	jmp    0xe73b84a8
  411625:	mov    ecx,0xc50c34b
  41162a:	or     al,0xfd
  41162c:	push   ebp
  41162d:	add    esp,DWORD PTR [esi]
  41162f:	ja     0x41167e
  411631:	sub    edx,DWORD PTR [ecx-0xc09b574]
  411637:	pop    ebx
  411638:	jo     0x41169e
  41163a:	push   eax
  41163b:	push   0x40ceae57
  411640:	jns    0x41167a
  411642:	mov    BYTE PTR [eax+0x37],dh
  411645:	je     0x411679
  411647:	loopne 0x411689
  411649:	and    al,0x50
  41164b:	xor    eax,0x2ab8b12a
  411650:	je     0x4115fb
  411652:	sub    al,0x2c
  411654:	pop    ebx
  411655:	nop    ebp
  411658:	ja     0x4115ed
  41165a:	add    al,0xe6
  41165c:	and    edx,edi
  41165e:	adc    al,ch
  411660:	jns    0x411694
  411662:	imul   esp,esi,0xc6d7e74d
  411668:	mov    al,ds:0x28dbdc4c
  41166d:	rol    BYTE PTR [ebp-0x68],0x9
  411671:	sub    dl,BYTE PTR [ebx+0x43803d51]
  411677:	mov    eax,ds:0x5dd3a866
  41167c:	pop    esp
  41167d:	sbb    dl,al
  41167f:	popa   
  411680:	jmp    FWORD PTR [edx+0x7a6eed54]
  411686:	add    edi,DWORD PTR [ebx+0x5ffae8e2]
  41168c:	dec    edx
  41168d:	push   edx
  41168e:	(bad)  
  41168f:	mov    bl,0xfa
  411691:	and    eax,0x71c97fec
  411696:	hlt    
  411697:	mov    WORD PTR [edi-0x74],fs
  41169a:	adc    eax,0xb02750a9
  4116a0:	xchg   ebx,eax
  4116a1:	out    0xc4,eax
  4116a3:	or     dh,ah
  4116a5:	imul   ebp,DWORD PTR [ebp+0x65],0xffffffdf
  4116a9:	icebp  
  4116aa:	push   esp
  4116ab:	dec    edi
  4116ac:	out    0xfe,eax
  4116ae:	sbb    al,0xd6
  4116b0:	shr    BYTE PTR [edx+0x1f],cl
  4116b3:	pop    ss
  4116b4:	ins    DWORD PTR es:[edi],dx
  4116b5:	inc    edx
  4116b6:	popa   
  4116b7:	rol    DWORD PTR [ebx-0x4c],0x33
  4116bb:	int    0x28
  4116bd:	dec    esp
  4116be:	imul   edx,DWORD PTR [ebx-0x6e],0xffffffe9
  4116c2:	mov    bh,0x95
  4116c4:	pop    ebp
  4116c5:	ret    0xa2e7
  4116c8:	int    0x91
  4116ca:	sub    ebx,DWORD PTR [ebx]
  4116cc:	mov    ebp,0x6ca62a6f
  4116d1:	adc    DWORD PTR [ebp+0x1cd48703],edi
  4116d7:	and    dh,BYTE PTR [ecx]
  4116d9:	sbb    BYTE PTR [edi-0x69],bh
  4116dc:	pop    ebx
  4116dd:	es add dh,bl
  4116e0:	xchg   edi,eax
  4116e1:	mov    eax,ds:0xa650f558
  4116e6:	jno    0x4116d6
  4116e8:	(bad)  
  4116e9:	dec    ecx
  4116ea:	jl     0x41174d
  4116ec:	xor    al,0x6a
  4116ee:	dec    ebx
  4116ef:	pop    edx
  4116f0:	icebp  
  4116f1:	and    dl,BYTE PTR [edx-0x73]
  4116f4:	test   dh,0xb9
  4116f7:	jae    0x411690
  4116f9:	mov    bl,0x45
  4116fb:	lock js 0x3941f82e
  411702:	jae    0x4116f0
  411704:	icebp  
  411705:	jns    0x411774
  411707:	inc    esi
  411708:	jne    0x41171b
  41170a:	(bad)  
  41170b:	cld    
  41170c:	sbb    BYTE PTR [ebp-0x3b],al
  41170f:	pop    esp
  411710:	xor    al,0xea
  411712:	mov    ebp,0xb10b57d9
  411717:	and    esi,DWORD PTR [eax]
  411719:	test   DWORD PTR [ecx],eax
  41171b:	cmp    esi,0x85bde7ee
  411721:	or     DWORD PTR [edi+ecx*4+0x587fc98b],0xbb960e37
  41172c:	mov    dl,0xeb
  41172e:	ins    BYTE PTR es:[edi],dx
  41172f:	lea    esi,[esi+0xf]
  411732:	push   ebp
  411733:	fst    DWORD PTR [eax+0x42eae478]
  411739:	and    bh,BYTE PTR [edx]
  41173b:	out    dx,al
  41173c:	out    dx,eax
  41173d:	nop
  41173e:	and    DWORD PTR [edi-0x24],0x5e69e440
  411745:	mov    dl,0x96
  411747:	js     0x41175c
  411749:	cmp    eax,DWORD PTR [edi]
  41174b:	adc    DWORD PTR [ebx],ecx
  41174d:	adc    eax,0xe58d0b88
  411752:	lock leave 
  411754:	jo     0x4117a8
  411756:	les    ebp,FWORD PTR [ebp+0x3da6df10]
  41175c:	mov    dh,0x8
  41175e:	adc    al,0x88
  411760:	mov    DWORD PTR [edi],0xe272262e
  411766:	or     ah,dl
  411768:	in     al,0x83
  41176a:	int3   
  41176b:	nop
  41176c:	dec    ebp
  41176d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176e:	fild   DWORD PTR [ecx]
  411770:	cmp    dl,0x4b
  411773:	mov    dh,0x72
  411775:	add    bh,BYTE PTR [ecx]
  411777:	jl     0x411702
  411779:	div    DWORD PTR [edx+0x7a]
  41177c:	sar    edi,cl
  41177e:	jb     0x411769
  411780:	rcr    DWORD PTR [ebp-0x2e],cl
  411783:	lods   al,BYTE PTR ds:[esi]
  411784:	push   eax
  411785:	cdq    
  411786:	retw   0xe44c
  41178a:	fs dec ebx
  41178c:	jmp    DWORD PTR [edx+0x6fcef39d]
  411792:	mov    ch,0x5d
  411794:	jmp    0xd567ad7a
  411799:	pusha  
  41179a:	arpl   si,sp
  41179c:	aad    0x25
  41179e:	cs jnp 0x41179a
  4117a1:	inc    edx
  4117a2:	push   ds
  4117a3:	std    
  4117a4:	lods   eax,DWORD PTR ds:[esi]
  4117a5:	inc    esp
  4117a6:	push   ds
  4117a7:	pop    esp
  4117a8:	call   0x9e33f062
  4117ad:	aas    
  4117ae:	mov    bl,0xd4
  4117b0:	or     BYTE PTR [ecx-0x2],ah
  4117b3:	js     0x41173c
  4117b5:	mov    ah,0xf7
  4117b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b8:	bound  ebx,QWORD PTR [esp+eiz*4+0x3d39c80b]
  4117bf:	xchg   ebp,eax
  4117c0:	xor    dh,dl
  4117c2:	pop    edx
  4117c3:	fwait
  4117c4:	outs   dx,DWORD PTR ds:[esi]
  4117c5:	test   DWORD PTR [ecx+edx*8],esp
  4117c8:	xlat   BYTE PTR ds:[ebx]
  4117c9:	pushf  
  4117ca:	test   bl,dh
  4117cc:	cdq    
  4117cd:	fadd   QWORD PTR ds:[edi-0x26c1e6d6]
  4117d4:	cwde   
  4117d5:	mov    ds:0x7d7b8a66,al
  4117da:	jbe    0x411839
  4117dc:	push   edx
  4117dd:	out    dx,eax
  4117de:	cli    
  4117df:	pop    esp
  4117e0:	xchg   BYTE PTR [esi+0x42],bl
  4117e3:	in     eax,0x67
  4117e5:	mov    esp,0xd3a49bf6
  4117ea:	fisttp WORD PTR [ecx-0x6fbc447f]
  4117f0:	cmp    eax,DWORD PTR [esi]
  4117f2:	inc    edx
  4117f3:	rol    bh,cl
  4117f5:	dec    ecx
  4117f6:	test   cl,dl
  4117f8:	ss jle 0x411816
  4117fb:	and    dh,ch
  4117fd:	sbb    eax,0x12a71995
  411802:	iret   
  411803:	xchg   DWORD PTR ds:0xa078a4a1,esp
  411809:	scas   al,BYTE PTR es:[edi]
  41180a:	outs   dx,BYTE PTR ds:[esi]
  41180b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41180c:	mov    cl,0x6c
  41180e:	cmp    eax,0x33a40bf4
  411813:	cmc    
  411814:	xor    BYTE PTR [esi],cl
  411816:	push   esp
  411817:	fiadd  WORD PTR [edi]
  411819:	xchg   edi,eax
  41181a:	jmp    0x411891
  41181c:	ja     0x4117c8
  41181e:	clc    
  41181f:	mov    ah,0x7f
  411821:	pop    edx
  411822:	mov    dh,0xfd
  411824:	pop    ss
  411825:	lds    edx,FWORD PTR [ebx]
  411827:	gs and al,0x5a
  41182a:	lods   eax,DWORD PTR ds:[esi]
  41182b:	daa    
  41182c:	fisub  WORD PTR [ecx+0x29]
  41182f:	add    BYTE PTR [edi],dh
  411831:	das    
  411832:	xor    eax,0xb0ddf4
  411837:	or     eax,0xc9524c2
  41183c:	xor    BYTE PTR [edi],0x23
  41183f:	push   cs
  411840:	(bad)  
  411841:	mov    al,ds:0xe4c247bd
  411846:	imul   ebx,DWORD PTR [esi-0x5e7d54ca],0x5c3b5df
  411850:	jge    0x411842
  411852:	and    DWORD PTR [ebp-0x608e5bfe],ecx
  411858:	(bad)  
  411859:	jecxz  0x4118d5
  41185b:	pop    ss
  41185c:	scas   eax,DWORD PTR es:[edi]
  41185d:	pushf  
  41185e:	pop    edi
  41185f:	pushf  
  411860:	push   ebp
  411861:	inc    eax
  411862:	std    
  411863:	inc    edi
  411864:	mov    ?,WORD PTR [edx-0x25]
  411867:	and    al,0x7b
  411869:	cs pop ebp
  41186b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41186c:	sbb    al,0x6b
  41186e:	mov    ds,WORD PTR [ebx]
  411870:	outs   dx,BYTE PTR ds:[esi]
  411871:	xchg   esi,eax
  411872:	sar    dh,1
  411874:	and    DWORD PTR gs:[ecx+0x1f9ec4b4],ebx
  41187b:	add    DWORD PTR [ebp+0x6e],0xca616113
  411882:	mov    esi,0x553c9609
  411887:	mov    ss,WORD PTR [ebp+0x13db7f02]
  41188d:	pop    ebp
  41188e:	stc    
  41188f:	fadd   QWORD PTR [ebx]
  411891:	(bad)  [esi+0x74f30e70]
  411897:	add    eax,0x72cb1a10
  41189c:	sbb    DWORD PTR [esp+eiz*4],0xaf412d05
  4118a3:	idiv   eax
  4118a5:	pop    esp
  4118a6:	add    BYTE PTR [edi],ah
  4118a8:	jne    0x411873
  4118aa:	rcl    DWORD PTR [edx-0x12250a36],0xc1
  4118b1:	dec    edx
  4118b2:	inc    ecx
  4118b3:	sahf   
  4118b4:	shl    BYTE PTR [edi+0x38],0x21
  4118b8:	push   0x4c
  4118ba:	and    DWORD PTR [ebx+0x4aa71014],esi
  4118c0:	(bad)  
  4118c1:	adc    al,0xbc
  4118c3:	xchg   BYTE PTR fs:[ebx+edi*4-0x5d8b3f41],dh
  4118cb:	pop    ebp
  4118cc:	inc    DWORD PTR [ebx-0x3c]
  4118cf:	xor    eax,0xef5d202d
  4118d4:	loop   0x41190f
  4118d6:	xlat   BYTE PTR ds:[ebx]
  4118d7:	jp     0x4118cd
  4118d9:	dec    ebp
  4118da:	mov    edx,edi
  4118dc:	adc    al,0xbc
  4118de:	mov    esi,0xb79ffbc2
  4118e3:	das    
  4118e4:	fldcw  WORD PTR [esi+ebx*4+0x71b1cd55]
  4118eb:	hlt    
  4118ec:	pushf  
  4118ed:	cwde   
  4118ee:	mov    al,0xda
  4118f0:	inc    esp
  4118f1:	pop    ecx
  4118f2:	dec    DWORD PTR [ebp-0x429cdc90]
  4118f8:	xlat   BYTE PTR ds:[ebx]
  4118f9:	or     edx,DWORD PTR [ebx+ebp*2+0x6adbec67]
  411900:	adc    al,0xbc
  411903:	jne    0x41197c
  411905:	sbb    BYTE PTR [esi+edx*4],dl
  411908:	test   al,0xb2
  41190a:	dec    ebp
  41190b:	xchg   esp,eax
  41190c:	pop    ecx
  41190d:	inc    edi
  41190e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190f:	lahf   
  411910:	aaa    
  411911:	push   es
  411912:	xor    cl,BYTE PTR [ebx-0x1ebf8f4c]
  411918:	and    BYTE PTR [edi-0x5b],ah
  41191b:	jbe    0x411907
  41191d:	into   
  41191e:	ja     0x41191e
  411920:	xchg   DWORD PTR [ebx+0x690e28a0],ecx
  411926:	pushf  
  411927:	push   eax
  411928:	(bad)  
  411929:	jae    0x4118b2
  41192b:	in     eax,dx
  41192c:	mov    edx,0x6d947527
  411931:	mov    cs,ebx
  411933:	cmp    bl,BYTE PTR [edx-0x2c]
  411936:	es ins BYTE PTR es:[edi],dx
  411938:	in     eax,0xf3
  41193a:	popa   
  41193b:	mov    edi,0xe9a04cbe
  411940:	sbb    edx,DWORD PTR [eax+0x1f]
  411943:	in     eax,0xbc
  411945:	pop    edx
  411946:	jns    0x41194a
  411948:	xchg   BYTE PTR [ebp+0x63],dl
  41194b:	cmp    eax,0x2b84d76a
  411950:	ins    BYTE PTR es:[edi],dx
  411951:	dec    edx
  411952:	out    0x7b,eax
  411954:	mov    edx,0xee286399
  411959:	xor    DWORD PTR [edx],0x3694c84b
  41195f:	mov    ds:0xcc1174c2,al
  411964:	lock cmp DWORD PTR [eax],edi
  411967:	dec    BYTE PTR ds:0x463b02be
  41196d:	(bad)  
  41196e:	fmul   DWORD PTR [edi]
  411970:	mov    al,0x89
  411972:	(bad)  
  411973:	in     eax,dx
  411974:	dec    edi
  411975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411976:	addr16 es pop ecx
  411979:	in     eax,dx
  41197a:	push   esi
  41197b:	mov    ebp,0xe0ec5ee2
  411980:	test   BYTE PTR [eax+ebx*8],ah
  411983:	inc    ecx
  411984:	sbb    al,0xe0
  411986:	dec    esi
  411987:	and    DWORD PTR [ebx],0x56
  41198a:	lods   eax,DWORD PTR ds:[esi]
  41198b:	inc    esi
  41198c:	mov    ecx,0x199b20cf
  411991:	test   al,0x37
  411993:	icebp  
  411994:	cwde   
  411995:	mov    dh,0x94
  411997:	and    BYTE PTR [eax],al
  411999:	int3   
  41199a:	fcmovu st,st(0)
  41199c:	(bad)  
  41199d:	outs   dx,DWORD PTR ds:[esi]
  41199e:	ret    
  41199f:	xchg   edi,eax
  4119a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a1:	add    eax,0x3f6d78de
  4119a6:	fild   QWORD PTR [esi]
  4119a8:	bound  esp,QWORD PTR [esi]
  4119aa:	add    DWORD PTR [esi-0x14d3f649],edi
  4119b0:	jmp    0x36dbd26
  4119b5:	cmp    DWORD PTR [edx],ebx
  4119b7:	rol    DWORD PTR [eax+0x716d0423],cl
  4119bd:	outs   dx,DWORD PTR ds:[esi]
  4119be:	lahf   
  4119bf:	adc    DWORD PTR [eax-0x6bc46862],edi
  4119c5:	lds    ecx,FWORD PTR [ecx+0x3]
  4119c8:	and    DWORD PTR [ebx+0x61aa2405],0x33
  4119cf:	inc    edi
  4119d0:	jae    0x4119d7
  4119d2:	add    DWORD PTR [edx+0x56c00800],0x5e277c50
  4119dc:	cmp    BYTE PTR [ebx-0x8f0703],dl
  4119e2:	inc    edi
  4119e3:	jno    0x4119a7
  4119e5:	sub    ebp,DWORD PTR [ebp+0x7480d445]
  4119eb:	cld    
  4119ec:	lahf   
  4119ed:	fwait
  4119ee:	push   ebp
  4119ef:	shl    DWORD PTR [edx+0x2d],0x8e
  4119f3:	or     ebp,DWORD PTR [edx]
  4119f5:	repnz fucomi st,st(4)
  4119f8:	adc    edx,esi
  4119fa:	dec    edx
  4119fb:	fst    QWORD PTR [esi-0x59db39a]
  411a01:	(bad)  
  411a02:	mov    ecx,0xbca45a89
  411a07:	stos   BYTE PTR es:[edi],al
  411a08:	outs   dx,BYTE PTR ds:[esi]
  411a09:	jmp    0x4119e2
  411a0b:	ins    BYTE PTR es:[edi],dx
  411a0c:	inc    edx
  411a0d:	stos   DWORD PTR es:[edi],eax
  411a0e:	ins    DWORD PTR es:[edi],dx
  411a0f:	cmp    bh,BYTE PTR [eax+edi*2+0x1ad0b809]
  411a16:	es stos BYTE PTR es:[edi],al
  411a18:	adc    ah,al
  411a1a:	loop   0x411a49
  411a1c:	mov    DWORD PTR [eax+0x20af936c],edi
  411a22:	(bad)  
  411a23:	mov    ds:0xbacbee95,eax
  411a28:	adc    eax,DWORD PTR [ebx+0x2922ff9f]
  411a2e:	call   0xd7ee75b5
  411a33:	sbb    bh,BYTE PTR ds:0xb0444225
  411a39:	pusha  
  411a3a:	mov    ebp,ss
  411a3c:	aas    
  411a3d:	xor    BYTE PTR [ebx],bl
  411a3f:	jb     0x411a6c
  411a41:	xchg   BYTE PTR [edi],dh
  411a43:	dec    esi
  411a44:	sbb    DWORD PTR ds:0x8d2567ab,edx
  411a4a:	mov    ecx,0x6234d653
  411a4f:	outs   dx,DWORD PTR ds:[esi]
  411a50:	test   BYTE PTR [ecx+0x58],ch
  411a53:	xchg   ecx,eax
  411a54:	sub    eax,0x3968bfe0
  411a59:	pusha  
  411a5a:	push   ecx
  411a5b:	or     eax,0xdd618be5
  411a60:	repz mov edx,0x834bba18
  411a66:	or     ah,BYTE PTR [eax+0x7c8b2414]
  411a6c:	mov    ch,bl
  411a6e:	call   0xdec6d640
  411a73:	cmp    ch,BYTE PTR [eax-0x5b]
  411a76:	mov    bh,0xf3
  411a78:	mov    edx,DWORD PTR [eax]
  411a7a:	arpl   sp,di
  411a7c:	mov    esi,0x6d404533
  411a81:	(bad)  
  411a82:	dec    esp
  411a83:	xchg   edx,eax
  411a84:	ds mov edx,0x4259e17c
  411a8a:	stos   BYTE PTR es:[edi],al
  411a8b:	pushf  
  411a8c:	dec    DWORD PTR es:[ebx+0x424d1cb4]
  411a93:	push   esi
  411a94:	pop    esp
  411a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a96:	mov    ecx,0x66e138df
  411a9b:	outs   dx,DWORD PTR ds:[esi]
  411a9c:	sub    BYTE PTR [edi-0x44],dh
  411a9f:	and    DWORD PTR [ebp+0x6d],edi
  411aa2:	cdq    
  411aa3:	dec    eax
  411aa4:	xor    ebp,DWORD PTR ds:0x90ef94a3
  411aaa:	lahf   
  411aab:	je     0x411abd
  411aad:	cmp    ebp,DWORD PTR [ebx+eiz*1-0x1b]
  411ab1:	add    bl,al
  411ab3:	and    eax,0x7ca2130
  411ab8:	enter  0xe168,0x68
  411abc:	and    DWORD PTR [eax+0x15738f45],edx
  411ac2:	fs call 0x770b:0xe667
  411ac9:	ins    DWORD PTR es:[edi],dx
  411aca:	cwde   
  411acb:	xor    DWORD PTR [edi-0x38308683],ebx
  411ad1:	jg     0x411a5b
  411ad3:	gs xchg esp,eax
  411ad5:	ficom  DWORD PTR [esi]
  411ad7:	push   ebp
  411ad8:	and    DWORD PTR [esi+0xf5ba95c],esi
  411ade:	inc    edx
  411adf:	hlt    
  411ae0:	sub    DWORD PTR [ebp+0xe],ebp
  411ae3:	mov    edi,0xfb5b20c5
  411ae8:	add    BYTE PTR [esi+0x38980ac6],bl
  411aee:	out    dx,al
  411aef:	and    cl,BYTE PTR [eax-0x15c6c822]
  411af5:	nop
  411af6:	fild   QWORD PTR [edi]
  411af8:	test   al,0x78
  411afa:	lock out 0x1e,eax
  411afd:	daa    
  411afe:	clc    
  411aff:	stos   DWORD PTR es:[edi],eax
  411b00:	sub    eax,0xe568849
  411b05:	leave  
  411b06:	xchg   ebp,eax
  411b07:	dec    BYTE PTR [esi-0x1e3b3fc8]
  411b0d:	(bad)  
  411b0e:	test   al,0x37
  411b10:	xor    bh,bh
  411b12:	add    ch,BYTE PTR [ecx]
  411b14:	rcl    DWORD PTR [esi],1
  411b16:	cmc    
  411b17:	repnz rcl DWORD PTR [edx+0x26],cl
  411b1b:	push   0xd96f3530
  411b20:	pop    edx
  411b21:	in     eax,0x56
  411b23:	enter  0x71d,0x41
  411b27:	lds    ecx,FWORD PTR [eax]
  411b29:	push   ecx
  411b2a:	push   esp
  411b2b:	push   ebp
  411b2c:	push   ebp
  411b2d:	xchg   ebp,eax
  411b2e:	sbb    al,0x4a
  411b30:	xchg   esp,eax
  411b31:	cmp    BYTE PTR [ebx+eiz*1-0x27],cl
  411b35:	cli    
  411b36:	lahf   
  411b37:	cmp    al,0x2b
  411b39:	sub    al,0x7a
  411b3b:	std    
  411b3c:	hlt    
  411b3d:	jl     0x411aeb
  411b3f:	stos   BYTE PTR es:[edi],al
  411b40:	push   ebp
  411b41:	stc    
  411b42:	fs mov cl,0x2c
  411b45:	mov    ebp,0x2b5381bd
  411b4a:	jne    0x411b01
  411b4c:	mov    si,0xc771
  411b50:	push   esi
  411b51:	addr16 xchg edx,ebp
  411b54:	adc    BYTE PTR [ebx],al
  411b56:	mov    cl,0xab
  411b58:	xchg   edx,eax
  411b59:	xchg   ecx,eax
  411b5a:	and    ebp,DWORD PTR [edx]
  411b5c:	jno    0x411af4
  411b5e:	test   BYTE PTR [ebp+0x41],bh
  411b61:	bound  edi,QWORD PTR [ebp-0x5e]
  411b64:	mov    cs,WORD PTR [edx-0x4c82776c]
  411b6a:	mov    bl,0x18
  411b6c:	leave  
  411b6d:	inc    ecx
  411b6e:	in     al,dx
  411b6f:	sbb    bl,BYTE PTR [ecx+edi*2]
  411b72:	push   ds
  411b73:	jp     0x411ba0
  411b75:	push   esi
  411b76:	retf   
  411b77:	sbb    al,0x54
  411b79:	add    ah,BYTE PTR [edi+edx*2]
  411b7c:	ja     0x411bce
  411b7e:	or     DWORD PTR [esi+0x420f299d],0xffffff81
  411b85:	cld    
  411b86:	xchg   edi,eax
  411b87:	retf   0x262f
  411b8a:	rcl    BYTE PTR [ebx],0xca
  411b8d:	dec    ecx
  411b8e:	rol    BYTE PTR [ebx+0x14],0x63
  411b92:	cmp    DWORD PTR [eax-0x72],esi
  411b95:	fstp   DWORD PTR [ebp+0x1a]
  411b98:	test   al,0xac
  411b9a:	ret    
  411b9b:	and    eax,0x76bd12b7
  411ba0:	fwait
  411ba1:	(bad)  
  411ba2:	lds    ecx,FWORD PTR [edi-0x497555d]
  411ba8:	aam    0x26
  411baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bab:	pop    esi
  411bac:	and    cl,BYTE PTR [ecx]
  411bae:	and    eax,0x29ef1a2f
  411bb3:	or     DWORD PTR [ecx-0x2919fe1c],esi
  411bb9:	imul   ecx,DWORD PTR [ecx],0x73
  411bbc:	sbb    BYTE PTR [esi-0x5161f56b],ah
  411bc2:	xor    BYTE PTR [ebx],al
  411bc4:	sahf   
  411bc5:	jg     0x411c0b
  411bc7:	pop    esi
  411bc8:	adc    edx,DWORD PTR [ebx+0x34]
  411bcb:	inc    ebp
  411bcc:	loop   0x411c33
  411bce:	or     DWORD PTR [ecx-0x1],edi
  411bd1:	xor    eax,0xe29d5fa9
  411bd6:	clc    
  411bd7:	sub    BYTE PTR [esi+0x67],ch
  411bda:	or     ah,BYTE PTR [ecx-0x6f36bb20]
  411be0:	sti    
  411be1:	test   eax,0x26451efe
  411be6:	sub    ah,ah
  411be8:	inc    edi
  411be9:	icebp  
  411bea:	or     BYTE PTR [ecx],al
  411bec:	or     ch,BYTE PTR [edi+ebx*8]
  411bef:	xor    BYTE PTR ds:0x6a182808,bl
  411bf5:	push   edx
  411bf6:	jnp    0x411bd3
  411bf8:	cmp    al,0xa4
  411bfa:	loope  0x411c43
  411bfc:	rol    BYTE PTR [ebp+ecx*4+0x47ffe517],0xa8
  411c04:	jae    0x411c27
  411c06:	adc    bp,dx
  411c09:	xor    ecx,ebp
  411c0b:	add    bp,WORD PTR [ebp+0x55]
  411c0f:	ret    0x7de0
  411c12:	sbb    BYTE PTR ds:0x2df2f45a,al
  411c18:	add    edi,DWORD PTR [esi+0x16]
  411c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c1c:	push   cs
  411c1d:	inc    esi
  411c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c1f:	ds ret 0xf1ac
  411c23:	sar    DWORD PTR [ecx+0x15],cl
  411c26:	add    esi,edi
  411c28:	call   0x71442c16
  411c2d:	popf   
  411c2e:	xchg   esi,eax
  411c2f:	enter  0x5c06,0x2
  411c33:	leave  
  411c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c35:	outs   dx,BYTE PTR ds:[esi]
  411c36:	outs   dx,DWORD PTR ds:[esi]
  411c37:	xchg   ebp,eax
  411c38:	sub    edx,DWORD PTR [edx+0x24]
  411c3b:	lahf   
  411c3c:	and    eax,0xda86f9a8
  411c41:	and    DWORD PTR [ecx-0x610a8657],ecx
  411c47:	gs hlt 
  411c49:	or     eax,0x70b2dd80
  411c4e:	pusha  
  411c4f:	out    dx,al
  411c50:	or     eax,0x3e18e08c
  411c55:	jo     0x411c1c
  411c57:	repz push eax
  411c59:	inc    esi
  411c5a:	xor    BYTE PTR [esi],dh
  411c5c:	sbb    ebx,DWORD PTR [eax-0x15]
  411c5f:	icebp  
  411c60:	mov    edi,0x2754475d
  411c65:	ret    0xa9f1
  411c68:	mov    ebx,0x40535d88
  411c6d:	pushf  
  411c6e:	test   DWORD PTR [esp+eiz*8+0x5f],esi
  411c72:	inc    ebp
  411c73:	je     0x411c36
  411c75:	es mov edi,0x24ab4cd2
  411c7b:	inc    esp
  411c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7d:	sub    BYTE PTR [ebx+ecx*8+0x74],bl
  411c81:	xor    bp,WORD PTR [eax-0x70]
  411c85:	aas    
  411c86:	iret   
  411c87:	test   BYTE PTR [ebx+0x4d3696f],ch
  411c8d:	jp     0x411cbd
  411c8f:	cmp    cl,BYTE PTR [edx]
  411c91:	or     edi,DWORD PTR [edi]
  411c93:	pop    eax
  411c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c95:	xor    DWORD PTR [ecx+0x32448db9],eax
  411c9b:	push   0xfffffffe
  411c9d:	aaa    
  411c9e:	imul   edx,edi,0x9cdd05c2
  411ca4:	mul    BYTE PTR [esi]
  411ca6:	adc    eax,0x158ccf08
  411cab:	shl    DWORD PTR [edx+0x4c],cl
  411cae:	mov    dh,0x66
  411cb0:	lahf   
  411cb1:	jecxz  0x411cd0
  411cb3:	xor    eax,0x9e4e2fdd
  411cb8:	push   esi
  411cb9:	dec    edx
  411cba:	cmc    
  411cbb:	inc    eax
  411cbc:	fsubr  DWORD PTR [esi-0x5b]
  411cbf:	rcr    ah,0xd0
  411cc2:	inc    ebx
  411cc3:	out    dx,al
  411cc4:	add    DWORD PTR [edx+0x43a7b7a2],eax
  411cca:	and    ah,BYTE PTR [eax+esi*1]
  411ccd:	cwde   
  411cce:	lahf   
  411ccf:	sub    eax,0xe8048478
  411cd4:	mov    edi,0x7d327853
  411cd9:	adc    ecx,DWORD PTR [edx]
  411cdb:	repz push esp
  411cdd:	add    al,0x8
  411cdf:	enter  0x7abf,0x57
  411ce3:	lock jle 0x411d10
  411ce6:	xchg   edi,eax
  411ce7:	call   0xb5e9:0x52123766
  411cee:	shr    al,0x4b
  411cf1:	mov    dh,BYTE PTR [edi-0x2a]
  411cf4:	loopne 0x411d29
  411cf6:	aas    
  411cf7:	inc    ebp
  411cf8:	mov    edi,0x71a4de6b
  411cfd:	inc    eax
  411cfe:	lods   eax,DWORD PTR ds:[esi]
  411cff:	xchg   ecx,eax
  411d00:	ret    0x431
  411d03:	in     eax,0x46
  411d05:	lahf   
  411d06:	mov    BYTE PTR [ecx+0x3af238bb],dh
  411d0c:	inc    esp
  411d0d:	jg     0x411d57
  411d0f:	sbb    esp,DWORD PTR ss:[edx]
  411d12:	fild   WORD PTR [eax-0x2d]
  411d15:	mov    edi,DWORD PTR ds:0x5a6b2011
  411d1b:	mov    esi,0x34c1cdc8
  411d20:	test   BYTE PTR [ecx],al
  411d22:	jb     0x411d82
  411d24:	xlat   BYTE PTR ds:[ebx]
  411d25:	test   al,0x81
  411d27:	mov    esp,DWORD PTR [ebp-0x4f]
  411d2a:	and    edx,DWORD PTR [ebx+0x42]
  411d2d:	sub    eax,0xa2be92cc
  411d32:	pop    edi
  411d33:	cmp    eax,0xea7ae56b
  411d38:	mov    ds,WORD PTR [edi-0x285e03a9]
  411d3e:	pop    eax
  411d3f:	into   
  411d40:	xlat   BYTE PTR ds:[ebx]
  411d41:	fadd   QWORD PTR [eax+0x32df0247]
  411d47:	ss inc edi
  411d49:	test   bl,bh
  411d4b:	and    cl,BYTE PTR [edx-0x2aa00ad3]
  411d51:	jmp    0xb131695e
  411d56:	and    BYTE PTR ds:0x1d2fefff,cl
  411d5c:	or     ebp,DWORD PTR [esi-0xee84ae9]
  411d62:	and    eax,0xbc6debde
  411d67:	arpl   WORD PTR [eax],di
  411d69:	push   ebx
  411d6a:	mov    cl,0xa8
  411d6c:	inc    esp
  411d6d:	stos   DWORD PTR es:[edi],eax
  411d6e:	int    0x2d
  411d70:	jge    0x411db0
  411d72:	rcr    DWORD PTR [ebp+0x38],0x6c
  411d76:	call   0x9360:0xa6e731d9
  411d7d:	(bad)  
  411d7e:	jo     0x411de1
  411d80:	cmp    BYTE PTR [ebp-0x9],bh
  411d83:	test   al,0xb
  411d85:	call   0xd176:0xb2ceafe8
  411d8c:	adc    eax,0xaacf8c86
  411d91:	pop    ss
  411d92:	bound  esp,QWORD PTR [edx-0x784d5f33]
  411d98:	jp     0x411dd9
  411d9a:	(bad)
  411d9d:	outs   dx,DWORD PTR ds:[esi]
  411d9e:	push   ebx
  411d9f:	cmp    al,0xb6
  411da1:	sahf   
  411da2:	dec    ecx
  411da3:	pop    esi
  411da4:	or     eax,DWORD PTR [ebx]
  411da6:	jl     0x411d45
  411da8:	in     al,0x71
  411daa:	dec    esp
  411dab:	inc    edx
  411dac:	or     BYTE PTR [eax],dl
  411dae:	sub    al,ch
  411db0:	mov    dh,0x5a
  411db2:	cmc    
  411db3:	clc    
  411db4:	jbe    0x411d7e
  411db6:	fcmovnb st,st(6)
  411db8:	clc    
  411db9:	push   esi
  411dba:	push   ebp
  411dbb:	push   eax
  411dbc:	adc    dl,dh
  411dbe:	push   ecx
  411dbf:	retf   0x4429
  411dc2:	pop    ecx
  411dc3:	int    0xfd
  411dc5:	(bad)  
  411dc6:	icebp  
  411dc7:	mov    ebx,0x91b03fbb
  411dcc:	push   es
  411dcd:	mov    ah,0x97
  411dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd0:	sub    dh,BYTE PTR [edi-0x6b205262]
  411dd6:	or     BYTE PTR [esp+ebp*2-0x75022610],al
  411ddd:	add    esp,DWORD PTR [edx-0x52]
  411de0:	sub    ah,BYTE PTR [ebp+0x45]
  411de3:	add    BYTE PTR [ebp-0x38],ch
  411de6:	mov    ds:0x1abdb826,al
  411deb:	dec    edi
  411dec:	jl     0x411d8c
  411dee:	or     al,0xc5
  411df0:	dec    esi
  411df1:	inc    edi
  411df2:	test   ebp,edx
  411df4:	adc    ch,dl
  411df6:	sub    ah,ch
  411df8:	add    BYTE PTR [edx-0x36bb19af],cl
  411dfe:	and    BYTE PTR [edi+0x4af5878d],0xf6
  411e05:	mov    ecx,0x2862507f
  411e0a:	and    al,0x7e
  411e0c:	push   ecx
  411e0d:	pop    es
  411e0e:	ret    
  411e0f:	mov    eax,ds:0x17561e32
  411e14:	cmc    
  411e15:	pop    eax
  411e16:	pop    edi
  411e17:	xor    esi,edi
  411e19:	stos   BYTE PTR es:[edi],al
  411e1a:	add    DWORD PTR [esi+0x5],ecx
  411e1d:	mov    edi,0x1689784f
  411e22:	dec    edx
  411e23:	ins    DWORD PTR es:[edi],dx
  411e24:	xlat   BYTE PTR ds:[ebx]
  411e25:	or     ch,bh
  411e27:	or     eax,0xd21a04a5
  411e2c:	sahf   
  411e2d:	add    DWORD PTR ss:[esi],edi
  411e30:	icebp  
  411e31:	dec    ebx
  411e32:	jecxz  0x411e68
  411e34:	int3   
  411e35:	rcl    BYTE PTR [ecx+0x40e21ab3],1
  411e3b:	push   0x45
  411e3d:	push   esi
  411e3e:	into   
  411e3f:	or     al,0x68
  411e41:	ins    BYTE PTR es:[edi],dx
  411e42:	aaa    
  411e43:	pop    ebp
  411e44:	pop    edx
  411e45:	sub    edx,DWORD PTR [edx-0x47]
  411e48:	dec    ecx
  411e49:	mov    esi,0xe80c36c8
  411e4f:	lods   al,BYTE PTR ds:[esi]
  411e50:	pusha  
  411e51:	push   ebp
  411e52:	loop   0x411ecf
  411e54:	jo     0x411e2d
  411e56:	ret    
  411e57:	and    BYTE PTR [eax],cl
  411e59:	(bad)  
  411e5a:	pop    edx
  411e5b:	cld    
  411e5c:	lds    edi,FWORD PTR es:[ecx+0x13]
  411e60:	inc    esi
  411e61:	ja     0x411ea8
  411e63:	fs in  eax,0xdd
  411e66:	add    eax,0xe9ef2215
  411e6b:	mov    eax,0x5b069ea1
  411e70:	add    bl,dl
  411e72:	pop    edx
  411e73:	outs   dx,BYTE PTR ds:[esi]
  411e74:	outs   dx,DWORD PTR ds:[esi]
  411e75:	gs fwait
  411e77:	pushf  
  411e78:	int    0x86
  411e7a:	cmp    BYTE PTR [esi-0x2819bf2a],bh
  411e80:	and    cl,ah
  411e82:	push   0xad30df24
  411e87:	dec    ebx
  411e88:	xchg   edx,eax
  411e89:	loope  0x411ef8
  411e8b:	inc    esp
  411e8c:	inc    esi
  411e8d:	mov    edi,0xcf248ca1
  411e92:	adc    al,0x7f
  411e94:	nop
  411e95:	pushf  
  411e96:	out    dx,ax
  411e98:	xchg   ebx,eax
  411e99:	icebp  
  411e9a:	sub    ebp,esi
  411e9c:	dec    ebp
  411e9d:	imul   edx,DWORD PTR [edx],0x52c7c1a4
  411ea3:	sbb    al,0x6e
  411ea5:	cmc    
  411ea6:	stos   DWORD PTR es:[edi],eax
  411ea7:	cmp    BYTE PTR [esi],0xdb
  411eaa:	pop    es
  411eab:	jl     0x411f0d
  411ead:	out    dx,eax
  411eae:	outs   dx,DWORD PTR ds:[esi]
  411eaf:	sub    cl,BYTE PTR [ecx-0x3d]
  411eb2:	pop    esi
  411eb3:	shl    BYTE PTR [ebp+0x5b3edbcf],cl
  411eb9:	shl    cl,1
  411ebb:	mov    dh,0xb
  411ebd:	or     ebp,DWORD PTR [edi]
  411ebf:	pop    ecx
  411ec0:	sub    eax,0xa639c81d
  411ec5:	fwait
  411ec6:	mov    dl,0x11
  411ec8:	dec    ebx
  411ec9:	xchg   esi,eax
  411eca:	cmp    esi,DWORD PTR [ecx-0x515cad4b]
  411ed0:	sub    al,0xbf
  411ed2:	nop
  411ed3:	aaa    
  411ed4:	inc    esp
  411ed5:	mov    al,0x1a
  411ed7:	into   
  411ed8:	mov    ds:0x7069573d,al
  411edd:	push   eax
  411ede:	call   0xefd911d7
  411ee3:	mov    ebp,DWORD PTR [ecx+0x1457d2a9]
  411ee9:	cmp    bl,BYTE PTR [esp+edi*1]
  411eec:	dec    esp
  411eed:	mov    ecx,0xa0334f65
  411ef2:	or     esp,esp
  411ef4:	or     ebp,0xffffffa1
  411ef7:	sbb    al,0x9a
  411ef9:	lods   eax,DWORD PTR ds:[esi]
  411efa:	dec    ebp
  411efb:	inc    edx
  411efc:	cmc    
  411efd:	aas    
  411efe:	imul   BYTE PTR [edi]
  411f00:	gs xchg edx,eax
  411f02:	out    dx,al
  411f03:	fcom   QWORD PTR [edx-0x4fe37e61]
  411f09:	adc    ecx,esi
  411f0b:	call   0xe3b78e12
  411f10:	xchg   DWORD PTR [esi+0x75],ecx
  411f13:	fisubr WORD PTR [eax-0x1]
  411f16:	inc    ebx
  411f17:	fld    TBYTE PTR [esi]
  411f19:	mov    ebx,0x4165e027
  411f1e:	mov    esp,DWORD PTR [eax+0x13]
  411f21:	and    esi,DWORD PTR [ebx-0x46]
  411f24:	cmp    ch,BYTE PTR [eax]
  411f26:	iret   
  411f27:	inc    eax
  411f28:	ins    BYTE PTR es:[edi],dx
  411f29:	imul   eax,DWORD PTR [edi+0x420afd7a],0x1c
  411f30:	not    cl
  411f32:	or     esi,edx
  411f34:	(bad)  
  411f36:	sub    al,0xf6
  411f38:	jle    0x411ebe
  411f3a:	test   eax,0xd206777f
  411f3f:	sub    ch,dh
  411f41:	jmp    0x411ee6
  411f43:	dec    edx
  411f44:	aas    
  411f45:	sub    bl,dh
  411f47:	out    dx,ax
  411f49:	xor    DWORD PTR [edi],edx
  411f4b:	shl    DWORD PTR [edx-0x7b07db76],0xb2
  411f52:	fisub  WORD PTR [esi+0x1]
  411f55:	push   0xbf9afff6
  411f5a:	xchg   ebp,eax
  411f5b:	add    eax,edi
  411f5d:	add    al,0x8f
  411f5f:	dec    ebp
  411f60:	jmp    esp
  411f62:	cmp    bh,al
  411f64:	add    eax,eax
  411f66:	ins    DWORD PTR es:[edi],dx
  411f67:	pop    esp
  411f68:	gs jl  0x411fd0
  411f6b:	popf   
  411f6c:	dec    ecx
  411f6d:	cmp    DWORD PTR [ecx+ebp*8],ecx
  411f70:	mov    ?,WORD PTR [edx+0x7]
  411f73:	jbe    0x411f2f
  411f75:	pushf  
  411f76:	add    dl,cl
  411f78:	retf   
  411f79:	(bad)  
  411f7a:	ret    
  411f7b:	lea    eax,[esi]
  411f7d:	dec    esi
  411f7e:	dec    edx
  411f7f:	mov    eax,0x5621c395
  411f84:	jecxz  0x411f25
  411f86:	hlt    
  411f87:	shr    DWORD PTR [edx+0x1607c0a5],1
  411f8d:	(bad)  
  411f8e:	aad    0xa8
  411f90:	out    0x48,al
  411f92:	dec    ebx
  411f93:	sbb    DWORD PTR [ebp+0x794a628e],eax
  411f99:	sahf   
  411f9a:	sub    BYTE PTR [ebp+0x76],ah
  411f9d:	out    0x7f,eax
  411f9f:	sahf   
  411fa0:	bound  eax,QWORD PTR [ebp+edx*1-0x67]
  411fa4:	jbe    0x411fa2
  411fa6:	inc    edx
  411fa7:	sbb    cl,BYTE PTR [edx+0x24b6e9b8]
  411fad:	rcl    DWORD PTR [esi+eiz*8-0x9],0x3d
  411fb2:	cmp    al,0x51
  411fb4:	sbb    eax,0x1b05b84b
  411fb9:	mov    al,0xfa
  411fbb:	xchg   edi,eax
  411fbc:	imul   BYTE PTR [eax]
  411fbe:	je     0x411fb7
  411fc0:	xchg   esi,eax
  411fc1:	cld    
  411fc2:	(bad)  
  411fc3:	mov    dl,0x4a
  411fc5:	dec    eax
  411fc6:	and    DWORD PTR [esi-0x546f9412],ecx
  411fcc:	dec    ecx
  411fcd:	sbb    ecx,DWORD PTR [ebx+0x35182903]
  411fd3:	lahf   
  411fd4:	(bad)  
  411fd5:	sub    DWORD PTR [ebx-0x1ba938d5],ebx
  411fdb:	dec    ebx
  411fdc:	cmp    edi,ebx
  411fde:	dec    esi
  411fdf:	jmp    0x58c367ed
  411fe4:	loopne 0x411fb1
  411fe6:	arpl   bx,sp
  411fe8:	(bad)  
  411fe9:	mov    gs,WORD PTR [ecx+ebp*8]
  411fec:	hlt    
  411fed:	icebp  
  411fee:	mov    edi,0xa87d717e
  411ff3:	xchg   edi,eax
  411ff4:	call   0xb66cdada
  411ff9:	je     0x411ffd
  411ffb:	test   eax,0x5b1b21e7
  412000:	jo     0x412034
  412002:	jg     0x411f9c
  412004:	dec    edx
  412005:	shr    DWORD PTR [esi+0x45],0x74
  412009:	outs   dx,BYTE PTR ds:[esi]
  41200a:	mov    edi,0x51406c02
  41200f:	test   BYTE PTR [eax],ch
  412011:	in     eax,0x1e
  412013:	in     eax,dx
  412014:	hlt    
  412015:	jp     0x412042
  412017:	cmp    eax,0xc557a61d
  41201c:	bound  edi,QWORD PTR [ecx-0x14]
  41201f:	shl    BYTE PTR [ebp+0x6a0ef0cb],cl
  412025:	sbb    dl,BYTE PTR [edx+0x3]
  412028:	fsub   DWORD PTR [esi+0x12207a78]
  41202e:	xchg   esi,eax
  41202f:	cmc    
  412030:	jo     0x412017
  412032:	hlt    
  412033:	inc    eax
  412034:	or     DWORD PTR [ebx],esp
  412036:	fstp   TBYTE PTR [ebp+0x20edbfb7]
  41203c:	sahf   
  41203d:	cwde   
  41203e:	cmp    al,0xec
  412040:	loopne 0x4120ac
  412042:	shl    BYTE PTR [edi-0x2a8f3ef],1
  412048:	mov    eax,ds:0x434d3ccd
  41204d:	dec    ecx
  41204e:	jl     0x412034
  412050:	inc    eax
  412051:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412053:	jle    0x412080
  412055:	scas   al,BYTE PTR es:[edi]
  412056:	aas    
  412057:	out    dx,eax
  412058:	adc    eax,0x91398bc5
  41205d:	shl    ah,cl
  41205f:	mov    eax,ds:0x49baee96
  412064:	mov    bh,0x57
  412066:	xchg   esi,eax
  412067:	dec    ebx
  412068:	mov    al,0x11
  41206a:	mov    al,ds:0xe1c0ff93
  41206f:	mov    bh,0xc5
  412071:	mov    ds:0xefa906fa,eax
  412076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412077:	inc    ebp
  412078:	imul   ecx,DWORD PTR [edi-0x2a],0x7221d0f0
  41207f:	sahf   
  412080:	and    dh,BYTE PTR [edi+0x7e9b95d0]
  412086:	or     dl,dh
  412088:	lds    esi,FWORD PTR [eax-0x3]
  41208b:	(bad)  
  41208c:	xchg   edi,eax
  41208d:	jp     0x4120ad
  41208f:	sti    
  412090:	enter  0x9025,0xf9
  412094:	(bad)  
  412095:	xchg   ebx,eax
  412096:	call   0x3fea:0x288f4f0a
  41209d:	leave  
  41209e:	push   edi
  41209f:	pop    esi
  4120a0:	hlt    
  4120a1:	int3   
  4120a2:	mov    eax,0x2d1988ed
  4120a7:	cmc    
  4120a8:	pop    esi
  4120a9:	shr    BYTE PTR [esi+0x9],0xd4
  4120ad:	mov    WORD PTR [ecx+0x75e2ad61],gs
  4120b3:	sbb    al,0x11
  4120b5:	add    al,0x8
  4120b7:	sbb    dl,BYTE PTR [esi-0x4]
  4120ba:	sub    dh,ah
  4120bc:	std    
  4120bd:	clc    
  4120be:	(bad)  
  4120c0:	ror    DWORD PTR [ecx+ebp*4],1
  4120c3:	xchg   BYTE PTR [eax-0x6b],dh
  4120c6:	cmp    esi,edi
  4120c8:	enter  0x30fc,0x7
  4120cc:	dec    ecx
  4120cd:	pause  
  4120cf:	add    al,0xdd
  4120d1:	jle    0x412066
  4120d3:	leave  
  4120d4:	inc    esi
  4120d5:	jno    0x412113
  4120d7:	adc    al,0x3f
  4120d9:	je     0x4120dd
  4120db:	xchg   esi,eax
  4120dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120dd:	hlt    
  4120de:	aaa    
  4120df:	outs   dx,DWORD PTR ds:[esi]
  4120e0:	xlat   BYTE PTR ds:[ebx]
  4120e1:	jecxz  0x412130
  4120e3:	std    
  4120e4:	test   BYTE PTR [esi+0x6],bh
  4120e7:	push   0xf8aa719d
  4120ec:	mov    ebp,0x31269b9b
  4120f1:	pusha  
  4120f2:	xchg   ebp,eax
  4120f3:	inc    ebx
  4120f4:	sub    eax,0xa2eed1cc
  4120f9:	adc    al,BYTE PTR [ebp-0x2f758202]
  4120ff:	nop
  412100:	mov    dh,0xed
  412102:	mov    al,0x56
  412104:	mov    bl,0xa0
  412106:	outs   dx,BYTE PTR ds:[esi]
  412107:	dec    esi
  412108:	pop    ecx
  412109:	mov    dl,0x55
  41210b:	push   ebx
  41210c:	inc    edx
  41210d:	repnz sub bh,BYTE PTR [eax]
  412110:	aam    0x9c
  412112:	pop    esp
  412113:	inc    esp
  412114:	inc    esp
  412115:	cmp    ebp,DWORD PTR [edx+0x21]
  412118:	jb     0x4120b9
  41211a:	dec    ebp
  41211b:	cmp    ebp,esp
  41211d:	cli    
  41211e:	push   edi
  41211f:	fdiv   DWORD PTR [ecx-0x1]
  412122:	dec    ah
  412124:	xor    eax,0x2350be7d
  412129:	pop    ebp
  41212a:	push   ebx
  41212b:	outs   dx,DWORD PTR ds:[esi]
  41212c:	int3   
  41212d:	xchg   ebp,eax
  41212e:	mov    ebp,0xc837d73
  412133:	into   
  412134:	add    cl,0x72
  412137:	fcomi  st,st(4)
  412139:	sbb    DWORD PTR [ebx+0x79],esi
  41213c:	ret    
  41213d:	push   esp
  41213e:	mov    edi,0xbee5e5bb
  412143:	sub    esi,esi
  412145:	pop    edx
  412146:	icebp  
  412147:	retf   0xcb44
  41214a:	inc    esi
  41214b:	jl     0x41215f
  41214d:	cmp    DWORD PTR [ecx-0x5c6a1acf],0xffffffab
  412154:	(bad)  
  412156:	int    0xf5
  412158:	pushf  
  412159:	mov    eax,ds:0x6d944401
  41215e:	lods   eax,DWORD PTR ds:[esi]
  41215f:	pop    es
  412160:	jmp    0x2779:0x688efb9
  412167:	mov    edi,0x70a948bd
  41216c:	mov    eax,0xd57f76e2
  412171:	mov    eax,0x9a3a5d85
  412176:	add    eax,0x4b21b5cf
  41217b:	das    
  41217c:	sti    
  41217d:	add    al,0x6c
  41217f:	jbe    0x412104
  412181:	mov    dl,0x63
  412183:	inc    eax
  412184:	fucomp st(1)
  412186:	mov    ds:0x2426fbab,al
  41218b:	add    al,0xf1
  41218d:	mov    cs,WORD PTR [esi+0x2a]
  412190:	in     eax,0xda
  412192:	inc    eax
  412193:	aad    0xca
  412195:	xchg   esi,eax
  412196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412197:	adc    DWORD PTR [eiz*2-0x265ffbff],ebx
  41219e:	popf   
  41219f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a0:	sbb    BYTE PTR [edi-0xe21f659],0x8d
  4121a7:	jmp    FWORD PTR [eax]
  4121a9:	scas   al,BYTE PTR es:[edi]
  4121aa:	fild   QWORD PTR [ebx*2+0x448d3d76]
  4121b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121b2:	ins    DWORD PTR es:[edi],dx
  4121b3:	jmp    0xf8b5:0x963d4b2b
  4121ba:	sar    BYTE PTR ds:0xa86634d9,cl
  4121c0:	push   sp
  4121c2:	mov    bh,0xdd
  4121c4:	mov    ebx,0x96caf7af
  4121c9:	popf   
  4121ca:	or     eax,0xd872e537
  4121cf:	mov    dl,0x67
  4121d1:	cmp    dh,BYTE PTR [ecx+0xeee84b]
  4121d7:	aad    0xfa
  4121d9:	inc    edx
  4121da:	inc    esi
  4121db:	mov    edi,0xe76ed78a
  4121e0:	pushf  
  4121e1:	in     al,dx
  4121e2:	xchg   DWORD PTR [eax+0x2e],edx
  4121e5:	div    edi
  4121e7:	push   0xffffffaf
  4121e9:	mov    ch,0xff
  4121eb:	out    dx,eax
  4121ec:	dec    edx
  4121ed:	push   ebx
  4121ee:	(bad)  
  4121f0:	xor    eax,0xa996396c
  4121f5:	in     eax,dx
  4121f6:	pop    ds
  4121f7:	xor    edx,DWORD PTR [ebp-0x1]
  4121fa:	in     ax,0xd4
  4121fd:	scas   eax,DWORD PTR es:[edi]
  4121fe:	push   0xffffffc4
  412200:	test   al,0xf2
  412202:	mov    al,0x69
  412204:	jae    0x41226b
  412206:	xchg   ebx,eax
  412207:	dec    BYTE PTR [edx+0x49fae1d6]
  41220d:	(bad)  
  41220e:	and    eax,0x113ee4af
  412213:	jg     0x4121ba
  412215:	lds    esp,FWORD PTR ds:0xcca18731
  41221b:	es mov cl,0xc6
  41221e:	cdq    
  41221f:	pushf  
  412220:	push   es
  412221:	pop    eax
  412222:	and    eax,0x9794ec44
  412227:	rcr    BYTE PTR [edx+0x4c],cl
  41222a:	outs   dx,BYTE PTR ds:[esi]
  41222b:	mov    esi,0xc6240936
  412230:	je     0x4121f7
  412232:	dec    ebp
  412233:	adc    BYTE PTR [eax-0x62],0x29
  412237:	pop    ebp
  412238:	mov    esi,0x24cd5905
  41223d:	jne    0x41224a
  41223f:	ud0    ebx,DWORD PTR [ebx+0x4403bdf6]
  412246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412247:	stos   BYTE PTR es:[edi],al
  412248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412249:	cld    
  41224a:	bound  edx,QWORD PTR [eax]
  41224c:	or     BYTE PTR [ecx+0xd],0x88
  412250:	jbe    0x4122c6
  412252:	inc    edx
  412253:	pop    ebx
  412254:	jg     0x41222f
  412256:	and    BYTE PTR [eax],ah
  412258:	leave  
  412259:	adc    eax,0x994f3c73
  41225e:	fist   DWORD PTR [eax]
  412260:	mov    cl,0x4
  412262:	ins    DWORD PTR es:[edi],dx
  412263:	add    esi,DWORD PTR [edi+esi*4+0x6e]
  412267:	lea    ebp,[esp+esi*1-0x51411dab]
  41226e:	pop    eax
  41226f:	mov    ds:0xfd3f18bf,al
  412274:	mov    eax,0x9fa3b036
  412279:	aas    
  41227a:	inc    ecx
  41227b:	test   al,0x72
  41227d:	popf   
  41227e:	aad    0xc8
  412280:	jnp    0x412261
  412282:	add    eax,0x4e59e995
  412287:	mov    esp,0xa2f44b95
  41228c:	pop    ebx
  41228d:	mov    al,ds:0xe061ccf
  412292:	call   0x1b07fbb3
  412297:	mov    ebp,0x5476f7c1
  41229c:	and    DWORD PTR [esi],ebx
  41229e:	sbb    eax,DWORD PTR [edi+0x66]
  4122a1:	test   ebx,edx
  4122a3:	xor    al,0xf4
  4122a5:	cmp    al,0x94
  4122a7:	push   cs
  4122a8:	jmp    0x2f76:0x2ad2a6d1
  4122af:	jnp    0x4122c7
  4122b1:	xor    al,0xb7
  4122b3:	push   esp
  4122b4:	mov    ebx,0xfd6d41c8
  4122b9:	int3   
  4122ba:	mov    al,0x49
  4122bc:	xchg   esp,eax
  4122bd:	ja     0x4122c2
  4122bf:	push   DWORD PTR [esi]
  4122c1:	ficomp WORD PTR [edi]
  4122c3:	inc    ebx
  4122c4:	push   ecx
  4122c5:	stos   BYTE PTR es:[edi],al
  4122c6:	sbb    bl,dh
  4122c8:	in     eax,0xee
  4122ca:	dec    esi
  4122cb:	mov    WORD PTR [esi-0x2fc2ee73],ss
  4122d1:	ss fnstsw WORD PTR ss:[eax-0x3811b017]
  4122d9:	cmp    ecx,DWORD PTR [ecx-0x35]
  4122dc:	xchg   ecx,eax
  4122dd:	retf   0xee24
  4122e0:	dec    ecx
  4122e1:	outs   dx,DWORD PTR ds:[esi]
  4122e2:	mov    al,ds:0xc2eaf577
  4122e7:	pop    edi
  4122e8:	ja     0x41228c
  4122ea:	retf   
  4122eb:	aaa    
  4122ec:	push   cs
  4122ed:	test   al,0x3f
  4122ef:	jnp    0x4122d1
  4122f1:	loopne 0x4122ad
  4122f3:	or     DWORD PTR [ecx+eiz*2-0x76],0xc7bdcbe7
  4122fb:	fisub  DWORD PTR [edx+0x6aa856ec]
  412301:	xchg   esi,eax
  412302:	jns    0x41233d
  412304:	jne    0x4122f2
  412306:	mov    esp,esp
  412308:	fdivr  DWORD PTR [edx+0x26]
  41230b:	shl    BYTE PTR [ebx],1
  41230d:	ficom  WORD PTR [ebx-0x5d4ac440]
  412313:	xlat   BYTE PTR ds:[ebx]
  412314:	and    edi,DWORD PTR [eax-0x24c0cf4b]
  41231a:	mov    esi,0x3697ae3c
  412320:	mov    ch,0xaa
  412322:	fdiv   QWORD PTR [edi-0x40b1d1b5]
  412328:	int    0x80
  41232a:	int    0x31
  41232c:	pop    es
  41232d:	inc    edx
  41232e:	mov    dh,0x8b
  412330:	push   ds
  412331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412332:	cs jge 0x41230c
  412335:	shl    DWORD PTR [ecx-0x1f],cl
  412338:	sbb    edi,DWORD PTR [edi+0x37a01f69]
  41233e:	out    0x15,al
  412340:	sub    eax,0xae1e7a9
  412345:	cs dec eax
  412347:	xor    esi,DWORD PTR [edi]
  412349:	pusha  
  41234a:	iret   
  41234b:	js     0x41230c
  41234d:	ins    BYTE PTR es:[edi],dx
  41234e:	xor    al,0xce
  412350:	test   BYTE PTR [edi-0x68d189e1],ch
  412356:	xor    dh,ch
  412358:	xchg   edx,eax
  412359:	adc    eax,0x2a504ca4
  41235e:	mov    ds:0xf70f89c7,eax
  412364:	sub    eax,DWORD PTR [edx-0x3e]
  412367:	inc    eax
  412368:	pop    es
  412369:	add    DWORD PTR [edx-0x27],eax
  41236c:	outs   dx,BYTE PTR ds:[esi]
  41236d:	shl    DWORD PTR [esi+ebp*8-0x4c38f0f6],0x4d
  412375:	xchg   edi,eax
  412376:	in     al,dx
  412377:	ja     0x41234e
  412379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237a:	dec    ebp
  41237b:	add    al,0x43
  41237d:	mov    eax,0x24505e6a
  412382:	mov    eax,ds:0xd29c9b2f
  412387:	and    cl,BYTE PTR ds:0xbfb8a377
  41238d:	push   0x85a2786b
  412392:	mov    ch,0x9b
  412394:	or     DWORD PTR ds:0x8ae306fb,eax
  41239a:	adc    al,0x58
  41239c:	and    DWORD PTR [eax-0x5c],ebp
  41239f:	std    
  4123a0:	repz or esi,DWORD PTR [eax+0xcae204]
  4123a7:	je     0x412375
  4123a9:	push   ds
  4123aa:	cdq    
  4123ab:	inc    edi
  4123ac:	mov    ecx,0x52db7172
  4123b1:	dec    esi
  4123b2:	push   edi
  4123b3:	mov    ?,WORD PTR [eax+0x6b]
  4123b6:	(bad)  
  4123b8:	xchg   BYTE PTR [edi],ah
  4123ba:	mov    dl,0xc3
  4123bc:	test   DWORD PTR [esi-0x7f314d5f],0xfa457933
  4123c6:	push   edi
  4123c7:	stos   DWORD PTR es:[edi],eax
  4123c8:	popf   
  4123c9:	push   ecx
  4123ca:	lahf   
  4123cb:	jecxz  0x4123da
  4123cd:	ficom  DWORD PTR [eax]
  4123cf:	int    0xd3
  4123d1:	xchg   esi,eax
  4123d2:	and    esp,0xfffffff8
  4123d5:	imul   ecx,ebx,0xffffff98
  4123d8:	cdq    
  4123d9:	sub    al,cl
  4123db:	mov    eax,0x23baf9f1
  4123e0:	adc    al,0xc4
  4123e2:	ret    
  4123e3:	pop    ss
  4123e4:	mov    eax,0x124dd7a7
  4123e9:	dec    edi
  4123ea:	fst    st(3)
  4123ec:	aaa    
  4123ed:	cmp    ecx,esi
  4123ef:	ds jmp 0x41243e
  4123f2:	fdivp  st(7),st
  4123f4:	call   0x72bd:0xb6b5eff4
  4123fb:	xor    DWORD PTR [edx+eiz*8+0x6dfeac],esp
  412402:	pop    ds
  412403:	aam    0x32
  412405:	int3   
  412406:	xchg   ebx,ecx
  412408:	pushf  
  412409:	lods   ax,WORD PTR ds:[esi]
  41240b:	sub    al,BYTE PTR [esi]
  41240d:	cmp    DWORD PTR gs:[ecx-0x62],0x13
  412412:	fucomp st(1)
  412414:	xor    esp,DWORD PTR [esi+0x30]
  412417:	or     al,0xf
  412419:	jecxz  0x41245c
  41241b:	jae    0x412499
  41241d:	loopne 0x412487
  41241f:	push   esp
  412420:	mov    ecx,0x83250afc
  412425:	dec    edi
  412426:	fst    DWORD PTR [ecx]
  412428:	fldcw  WORD PTR [eax-0x1d]
  41242b:	retf   0xec9c
  41242e:	ret    0xc85e
  412431:	jg     0x412493
  412433:	dec    ebx
  412434:	cmc    
  412435:	sar    BYTE PTR [edx+0x27],cl
  412438:	ins    DWORD PTR es:[edi],dx
  412439:	icebp  
  41243a:	jge    0x412490
  41243c:	jmp    0xc99c8f8b
  412441:	mov    bl,0xe7
  412443:	push   edx
  412444:	xchg   ecx,eax
  412445:	icebp  
  412446:	pop    esp
  412447:	mov    bl,0x3f
  412449:	sub    al,bh
  41244b:	(bad)  
  41244d:	push   ss
  41244e:	cmp    BYTE PTR [edx+0x6ecf77f9],al
  412454:	mov    al,ds:0xb2be57e3
  412459:	xchg   ebx,eax
  41245a:	popf   
  41245b:	fcmovnb st,st(2)
  41245d:	lods   al,BYTE PTR ds:[esi]
  41245e:	lahf   
  41245f:	in     eax,0x13
  412461:	cmp    BYTE PTR gs:[edx-0xb],bh
  412465:	inc    esi
  412466:	imul   esp,ebp,0xffffff9d
  412469:	sahf   
  41246a:	push   ebx
  41246b:	(bad)  
  41246c:	or     dh,BYTE PTR [esi-0x20a5e89e]
  412472:	fs jmp 0x1148bfd7
  412478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412479:	adc    ecx,esp
  41247b:	or     ch,ah
  41247d:	bound  esi,QWORD PTR [edx+0x36c5fa52]
  412483:	mov    esp,0xb7ff09e3
  412488:	dec    edi
  412489:	pop    edx
  41248a:	pop    ebx
  41248b:	(bad)  
  41248c:	xchg   ebp,eax
  41248d:	xchg   ebx,eax
  41248e:	mov    ecx,0x9b3cf10d
  412493:	or     WORD PTR [edx+0x3c13c5ed],bp
  41249a:	jae    0x4124d2
  41249c:	test   al,0x50
  41249e:	aas    
  41249f:	or     ebx,edi
  4124a1:	or     BYTE PTR [edx],al
  4124a3:	addr16 inc ebp
  4124a5:	pushf  
  4124a6:	jle    0x41250a
  4124a8:	inc    ecx
  4124a9:	test   BYTE PTR [eax],0xa4
  4124ac:	pusha  
  4124ad:	mov    ss,WORD PTR [ebx]
  4124af:	lock stc 
  4124b1:	or     al,BYTE PTR [eax-0x42]
  4124b4:	repz int 0x5b
  4124b7:	or     cl,BYTE PTR [ecx-0x3c61671f]
  4124bd:	addr16 push edx
  4124bf:	retf   
  4124c0:	jns    0x412541
  4124c2:	jb     0x4124bd
  4124c4:	not    ah
  4124c6:	in     eax,dx
  4124c7:	ja     0x412516
  4124c9:	dec    ecx
  4124ca:	mov    DWORD PTR ds:0xbac5d547,0x121cd5ae
  4124d4:	cwde   
  4124d5:	retf   0xb9cf
  4124d8:	xor    dh,ch
  4124da:	mov    esi,0x51aae2be
  4124df:	sub    ebp,edx
  4124e1:	aad    0xdf
  4124e3:	stc    
  4124e4:	jge    0x4124f5
  4124e6:	push   es
  4124e7:	lahf   
  4124e8:	mov    bh,0x40
  4124ea:	add    cl,bh
  4124ec:	outs   dx,DWORD PTR cs:[esi]
  4124ee:	mov    al,bl
  4124f0:	jns    0x41249e
  4124f2:	xlat   BYTE PTR ds:[ebx]
  4124f3:	jmp    0xc53e5ed6
  4124f8:	cmp    DWORD PTR [ebp+eax*8-0x26],0xffffffbe
  4124fd:	inc    ecx
  4124fe:	inc    esi
  4124ff:	inc    edx
  412500:	pop    ds
  412501:	and    edx,edi
  412503:	es dec ebp
  412505:	mov    dl,BYTE PTR [esi+0x6b619693]
  41250b:	jne    0x41250a
  41250d:	stos   BYTE PTR es:[edi],al
  41250e:	jns    0x412541
  412510:	jne    0x412507
  412512:	test   DWORD PTR [ebp+0x53],edi
  412515:	aad    0x38
  412517:	addr16 (bad) 
  412519:	test   BYTE PTR [edx+0x9cfc513],ch
  41251f:	add    al,0xb
  412521:	push   edx
  412522:	outs   dx,BYTE PTR ds:[esi]
  412523:	into   
  412524:	mul    BYTE PTR [ebp+ebp*8-0x62]
  412528:	and    eax,0xd56b679c
  41252d:	icebp  
  41252e:	into   
  41252f:	xor    al,0x8c
  412531:	fwait
  412532:	mov    ch,0xfd
  412534:	sub    bh,BYTE PTR [eax-0x28f60fc]
  41253a:	gs ret 
  41253c:	leave  
  41253d:	xor    edi,esp
  41253f:	push   es
  412540:	int3   
  412541:	push   ds
  412542:	cwde   
  412543:	dec    esp
  412544:	mov    ebp,0xaa009f49
  412549:	cmp    edx,DWORD PTR [ebx+ecx*2]
  41254c:	les    eax,FWORD PTR [esi-0x5f]
  41254f:	retf   
  412550:	cmp    eax,0x93aa6db9
  412555:	sub    edi,edi
  412557:	jae    0x41259e
  412559:	je     0x41252a
  41255b:	fild   WORD PTR ds:[edi]
  41255e:	mov    ch,0x8f
  412560:	and    BYTE PTR [ebx-0x2f],0x12
  412564:	fnstsw WORD PTR [edi]
  412566:	test   ax,0xeb0c
  41256a:	sub    ecx,DWORD PTR [ebp+0x6b]
  41256d:	mov    ah,0x80
  41256f:	add    ah,BYTE PTR [ebx-0x58]
  412572:	call   0x433d:0x9546115d
  412579:	jns    0x4125ef
  41257b:	or     bl,BYTE PTR [ebp-0x24]
  41257e:	ret    0x22f5
  412581:	mov    ch,0xc5
  412583:	outs   dx,BYTE PTR ds:[esi]
  412584:	in     eax,dx
  412585:	gs repnz es cdq 
  412589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41258a:	adc    ch,cl
  41258c:	out    0xa4,eax
  41258e:	cwde   
  41258f:	lods   eax,DWORD PTR ds:[esi]
  412590:	call   0xbd57b69e
  412595:	mov    cl,0x53
  412597:	pop    eax
  412598:	sub    DWORD PTR gs:[ebx],ecx
  41259b:	(bad)  
  41259c:	inc    edx
  41259d:	inc    edi
  41259e:	mov    cl,0xf
  4125a0:	xchg   DWORD PTR [ebp+0x36],edx
  4125a3:	mov    dh,0xeb
  4125a5:	das    
  4125a6:	mov    ebx,fs
  4125a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a9:	outs   dx,DWORD PTR ds:[esi]
  4125aa:	or     BYTE PTR [ecx-0x21],0x63
  4125ae:	jecxz  0x412532
  4125b0:	loope  0x41253c
  4125b2:	mov    dh,0xf8
  4125b4:	mov    edx,0x4b3dff3b
  4125b9:	leave  
  4125ba:	loopne 0x41255e
  4125bc:	push   ecx
  4125bd:	sub    al,0x7
  4125bf:	push   es
  4125c0:	std    
  4125c1:	sbb    eax,0x78e71665
  4125c6:	dec    edx
  4125c7:	jo     0x412554
  4125c9:	xchg   esp,eax
  4125ca:	fsub   QWORD PTR [ebx]
  4125cc:	pop    ds
  4125cd:	lock out 0xb8,eax
  4125d0:	xor    ebx,ecx
  4125d2:	adc    cl,BYTE PTR [esi+0x73]
  4125d5:	js     0x4125a0
  4125d7:	enter  0x84d6,0xb3
  4125db:	push   edi
  4125dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125dd:	fwait
  4125de:	xor    bl,BYTE PTR [ebx]
  4125e0:	outs   dx,DWORD PTR ds:[esi]
  4125e1:	pop    edi
  4125e2:	js     0x412663
  4125e4:	pop    edi
  4125e5:	retf   
  4125e6:	dec    ebx
  4125e7:	loop   0x4125f1
  4125e9:	shufps xmm2,xmm6,0x71
  4125ed:	bound  esp,QWORD PTR [edx]
  4125ef:	mov    eax,ds:0x42b97455
  4125f4:	add    al,0xb7
  4125f6:	retf   0xf8da
  4125f9:	ret    0xa0ea
  4125fc:	mov    edi,0x97ae329a
  412601:	retf   0xb6f8
  412604:	mov    ah,0x9
  412606:	inc    edx
  412607:	sub    edi,DWORD PTR [edx+0x5b11be9a]
  41260d:	in     eax,0x7d
  41260f:	sbb    edi,DWORD PTR [edx+0x57]
  412612:	dec    ebp
  412613:	clc    
  412614:	bound  ecx,QWORD PTR [edx]
  412616:	inc    ebp
  412617:	inc    ebx
  412618:	std    
  412619:	push   ebx
  41261a:	xchg   esi,eax
  41261b:	popa   
  41261c:	outs   dx,BYTE PTR ds:[esi]
  41261d:	push   ebp
  41261e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41261f:	ds mov ecx,0x23d8ad07
  412625:	mov    esp,0x3616621a
  41262a:	outs   dx,DWORD PTR ds:[esi]
  41262b:	(bad)  
  41262c:	sub    edx,DWORD PTR [ecx]
  41262e:	adc    eax,0x20371564
  412633:	sub    al,0x5c
  412635:	pop    DWORD PTR [esi+0x52]
  412638:	mov    ch,0xc8
  41263a:	in     al,0x15
  41263c:	pop    ebx
  41263d:	pop    ebp
  41263e:	mov    ebx,0x10afdbf5
  412643:	popa   
  412644:	stos   DWORD PTR es:[edi],eax
  412645:	inc    ecx
  412646:	inc    esi
  412647:	xchg   ebp,eax
  412648:	mov    cl,0x36
  41264a:	push   ebp
  41264b:	push   ebx
  41264c:	repnz mov dh,0xef
  41264f:	daa    
  412650:	or     esp,ebx
  412652:	test   BYTE PTR [bp+si+0x2a17],dl
  412657:	loope  0x41260c
  412659:	jno    0x4125fa
  41265b:	push   cs
  41265c:	dec    esp
  41265d:	or     cl,al
  41265f:	in     eax,0x18
  412661:	in     eax,dx
  412662:	push   es
  412663:	add    ecx,esi
  412665:	sbb    ch,cl
  412667:	jp     0x412605
  412669:	dec    ebp
  41266a:	pop    edx
  41266b:	xchg   esi,eax
  41266c:	add    al,bl
  41266e:	cmp    bl,BYTE PTR [ebp+0x2d]
  412671:	vorps  xmm7,xmm3,XMMWORD PTR [edx-0x630127c7]
  412679:	in     eax,0xfc
  41267b:	pop    esi
  41267c:	pop    edx
  41267d:	jecxz  0x412637
  41267f:	popa   
  412680:	out    dx,al
  412681:	(bad)  
  412683:	test   BYTE PTR [ebx+0x1fbc1f94],cl
  412689:	adc    eax,0x2952fd24
  41268e:	hlt    
  41268f:	mov    ah,0x6c
  412691:	(bad)  
  412692:	not    DWORD PTR [ecx+0x1f]
  412695:	jge    0x4126d6
  412697:	mov    al,ds:0x7e54fc20
  41269c:	test   esi,ebp
  41269e:	stc    
  41269f:	mov    bl,0x10
  4126a1:	ficomp DWORD PTR [edi]
  4126a3:	lea    esi,[edx]
  4126a5:	out    0x21,al
  4126a7:	movlps QWORD PTR [eax],xmm1
  4126aa:	ja     0x412696
  4126ac:	retf   
  4126ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ae:	scas   al,BYTE PTR es:[edi]
  4126af:	and    ebp,DWORD PTR [edx-0x5ed0de87]
  4126b5:	(bad)  
  4126b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b7:	clc    
  4126b8:	in     eax,dx
  4126b9:	xchg   edi,eax
  4126ba:	mov    dl,0xec
  4126bc:	int    0x58
  4126be:	cs pop ebp
  4126c0:	lods   al,BYTE PTR ds:[esi]
  4126c1:	mov    esp,0x7b468cc
  4126c6:	sbb    al,0x88
  4126c8:	std    
  4126c9:	lock das 
  4126cb:	fdiv   DWORD PTR [esi+0x64]
  4126ce:	jno    0x41269f
  4126d0:	adc    DWORD PTR [edi-0x6c303262],ebp
  4126d6:	lds    ebp,FWORD PTR [edi+0x148f1a24]
  4126dc:	repnz push edi
  4126de:	jge    0x4126e9
  4126e0:	push   eax
  4126e1:	mov    fs,WORD PTR [esi+ecx*8]
  4126e4:	lahf   
  4126e5:	fist   DWORD PTR [edi-0x31744651]
  4126eb:	in     eax,dx
  4126ec:	sub    BYTE PTR [ebx+0x6c],cl
  4126ef:	pop    ds
  4126f0:	cwde   
  4126f1:	sbb    eax,DWORD PTR [esi]
  4126f3:	out    0xaa,al
  4126f5:	bnd je 0x4126e9
  4126f8:	test   eax,0x788f5fc2
  4126fd:	pushf  
  4126fe:	or     al,0xf0
  412700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412701:	push   ebp
  412702:	mov    al,ds:0x7afeef96
  412707:	loopne 0x41277a
  412709:	push   ebx
  41270a:	cdq    
  41270b:	mov    ds:0xf831cc4a,al
  412710:	leave  
  412711:	mov    ah,0xbd
  412713:	xchg   esi,eax
  412714:	push   edx
  412715:	and    DWORD PTR [eax],esp
  412717:	add    ch,cl
  412719:	push   0xbe96afdf
  41271e:	dec    ebx
  41271f:	push   eax
  412720:	sbb    BYTE PTR [edi+0x56106cc1],cl
  412726:	mov    al,0x60
  412728:	mov    cl,0x25
  41272a:	mov    edx,0x66dcc460
  41272f:	(bad)  
  412730:	int3   
  412731:	std    
  412732:	pusha  
  412733:	aas    
  412734:	cwde   
  412735:	in     al,0x52
  412737:	adc    eax,0xed11afcd
  41273c:	gs sbb al,0xd
  41273f:	add    BYTE PTR ss:[ebx+eiz*2-0x1e],dl
  412744:	jae    0x412701
  412746:	xchg   esp,eax
  412747:	xor    eax,0x119e91dd
  41274c:	sbb    edx,DWORD PTR [ecx]
  41274e:	fnsave [ebx-0x2b]
  412751:	bound  edi,QWORD PTR [edx]
  412753:	mov    edi,DWORD PTR [edx+0x22]
  412756:	jl     0x41279a
  412758:	stos   BYTE PTR es:[edi],al
  412759:	ret    0x57e7
  41275c:	jno    0x41279e
  41275e:	mov    bl,0xa2
  412760:	mov    ds:0x639c897a,eax
  412765:	mov    ebp,0x667b068e
  41276a:	push   eax
  41276b:	popa   
  41276c:	sbb    esp,DWORD PTR ds:0x3626622b
  412772:	(bad)  
  412774:	test   al,0x5
  412776:	xchg   ebp,eax
  412777:	jbe    0x4127b6
  412779:	push   0x1fbd6472
  41277e:	jmp    0x412712
  412780:	push   esi
  412781:	aad    0x14
  412783:	cmp    edi,ebx
  412785:	test   eax,0xe56f3a5f
  41278a:	icebp  
  41278b:	cmc    
  41278c:	xchg   ecx,eax
  41278d:	jle    0x4127c0
  41278f:	rcr    BYTE PTR [ebx+0x7a2fbf08],0x4b
  412796:	jecxz  0x4127d9
  412798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412799:	(bad)  
  41279b:	and    ch,al
  41279d:	ds dec esp
  41279f:	in     al,0x17
  4127a1:	push   0x79
  4127a3:	mov    al,0x79
  4127a5:	cmp    ebp,eax
  4127a7:	or     ch,BYTE PTR [esi+0x29]
  4127aa:	jmp    0xa7d8:0x3cfb00e2
  4127b1:	mov    ecx,0xcdd30710
  4127b6:	mov    DWORD PTR [eax+eax*8-0x28],esi
  4127ba:	push   es
  4127bb:	jae    0x4127f6
  4127bd:	(bad)  
  4127be:	das    
  4127bf:	add    esp,edi
  4127c1:	adc    BYTE PTR [edx],bl
  4127c3:	push   edi
  4127c4:	daa    
  4127c5:	xchg   esp,eax
  4127c6:	mov    esp,DWORD PTR [ebp+0x41]
  4127c9:	xor    DWORD PTR [ecx-0x63],esi
  4127cc:	les    edx,FWORD PTR [ebx-0x33]
  4127cf:	push   esi
  4127d0:	mov    esi,0xc4994bf2
  4127d5:	jge    0x412779
  4127d7:	lahf   
  4127d8:	stos   BYTE PTR es:[edi],al
  4127d9:	mov    ebp,0x677f0b23
  4127de:	sbb    edx,DWORD PTR [edx+ebx*1-0x2661ffee]
  4127e5:	sbb    BYTE PTR [edx],dh
  4127e7:	mov    edi,0x1b87063
  4127ec:	push   ecx
  4127ed:	jnp    0x412816
  4127ef:	call   0xfce:0x5bf5ad83
  4127f6:	clc    
  4127f7:	hlt    
  4127f8:	jp     0x41281a
  4127fa:	lods   al,BYTE PTR ds:[esi]
  4127fb:	enter  0xbc29,0x6a
  4127ff:	push   ss
  412800:	sbb    BYTE PTR [eax],ah
  412802:	push   edi
  412803:	das    
  412804:	rcr    DWORD PTR [ecx+eax*8+0x3ff2b546],cl
  41280b:	add    DWORD PTR [edx-0x58],edx
  41280e:	sbb    DWORD PTR [ebp+0x44],ebp
  412811:	lds    ebp,FWORD PTR [ebp+0x69]
  412814:	out    0x35,eax
  412816:	mov    dl,0x70
  412818:	ror    DWORD PTR [edi],1
  41281a:	push   edi
  41281b:	sub    dh,dh
  41281d:	pushf  
  41281e:	push   edx
  41281f:	inc    esp
  412820:	adc    al,0x23
  412822:	xor    DWORD PTR [ebp+0x33],ebp
  412825:	out    0x27,al
  412827:	jns    0x412863
  412829:	ret    
  41282a:	adc    eax,0xf3d1997c
  41282f:	lock jo 0x4128b0
  412832:	outs   dx,DWORD PTR ds:[esi]
  412833:	fimul  WORD PTR [eax+0x40]
  412836:	lods   eax,DWORD PTR ds:[esi]
  412837:	xor    dh,al
  412839:	gs push cs
  41283b:	adc    eax,0xfce2195c
  412840:	push   ebp
  412841:	adc    al,bh
  412843:	push   eax
  412844:	sub    DWORD PTR [eax+0x36479323],ebp
  41284a:	jl     0x41281e
  41284c:	cmp    BYTE PTR [eax+0x20435931],bl
  412852:	shr    DWORD PTR [edx-0x4e204f58],cl
  412858:	es sbb al,0x64
  41285b:	and    ebx,eax
  41285d:	test   BYTE PTR [ebp-0x15176e05],ch
  412863:	rcl    BYTE PTR [ecx],0x22
  412866:	enter  0x4be,0xcc
  41286a:	call   0x9ac086d
  41286f:	repnz cmp eax,0x5b2f4f27
  412875:	loope  0x41286c
  412877:	ds cwde 
  412879:	adc    ebp,eax
  41287b:	lods   al,BYTE PTR ds:[esi]
  41287c:	mov    bl,0x8a
  41287e:	xor    dl,dh
  412880:	lods   al,BYTE PTR ds:[esi]
  412881:	je     0x412860
  412883:	mov    eax,0x91ecbd95
  412888:	call   ecx
  41288a:	sub    ah,BYTE PTR [edi-0x6641af6b]
  412890:	das    
  412891:	mov    DWORD PTR [eax-0x55],ecx
  412894:	clc    
  412895:	scas   al,BYTE PTR es:[edi]
  412896:	fucom  st(1)
  412898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412899:	rcl    DWORD PTR [ecx-0x7e892b57],cl
  41289f:	jp     0x41289b
  4128a1:	aas    
  4128a2:	xor    eax,0x636f352d
  4128a7:	nop
  4128a8:	leave  
  4128a9:	call   0x556:0x73d01f7b
  4128b0:	retf   0x6916
  4128b3:	inc    eax
  4128b4:	nop
  4128b5:	mov    edx,0x50e18773
  4128ba:	sub    ebx,DWORD PTR [esi]
  4128bc:	cmp    ebx,ecx
  4128be:	sti    
  4128bf:	repnz mov al,0x25
  4128c2:	rcr    DWORD PTR [ecx-0x2b],1
  4128c5:	popf   
  4128c6:	call   0x7b1b4bf1
  4128cb:	mov    ch,0x2b
  4128cd:	xchg   ecx,eax
  4128ce:	push   ds
  4128cf:	xchg   esi,eax
  4128d0:	in     al,dx
  4128d1:	inc    esi
  4128d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d3:	mov    al,ds:0x7f20e107
  4128d8:	mov    ds:0x363ebe31,eax
  4128dd:	out    dx,eax
  4128de:	stc    
  4128df:	test   BYTE PTR [esi+esi*4],al
  4128e2:	cmp    al,0x56
  4128e4:	lds    eax,FWORD PTR [ecx+0x6d2a54c3]
  4128ea:	mov    ebx,0xde97afa6
  4128ef:	out    0xd2,al
  4128f1:	hlt    
  4128f2:	jl     0x4128fc
  4128f4:	push   ebx
  4128f5:	(bad)  
  4128f7:	mov    ebp,ebx
  4128f9:	fisttp QWORD PTR [eax-0x23eb4f49]
  4128ff:	out    0xd5,eax
  412901:	sub    DWORD PTR [edx],0x73e6900d
  412907:	call   0xe6db:0xaabae32f
  41290e:	data16 jne 0x412933
  412911:	jge    0x4128a5
  412913:	mov    al,ds:0xebf94c08
  412918:	or     ah,BYTE PTR [eax]
  41291a:	fcmovne st,st(4)
  41291c:	jmp    0x412996
  41291e:	jo     0x4128b6
  412920:	cvtps2pi mm3,QWORD PTR [ebp+edi*4+0x30]
  412925:	dec    esi
  412926:	js     0x41290a
  412928:	mov    edi,0xeeca2b7c
  41292d:	mov    bh,0xf7
  41292f:	jne    0x4128c1
  412931:	xchg   esp,eax
  412932:	fldcw  WORD PTR [edx-0x69]
  412935:	xlat   BYTE PTR ds:[ebx]
  412936:	dec    ebp
  412937:	or     al,0x7d
  412939:	ins    DWORD PTR es:[edi],dx
  41293a:	mov    bl,0x66
  41293c:	xor    ch,dl
  41293e:	sbb    ch,BYTE PTR [ebx+0x238c009]
  412944:	cld    
  412945:	ja     0x4128f1
  412947:	test   DWORD PTR [ebp-0x4663337c],esp
  41294d:	aad    0x5b
  41294f:	push   0x3252a4f5
  412954:	nop
  412955:	pop    edi
  412956:	lods   al,BYTE PTR ds:[esi]
  412957:	xor    DWORD PTR [edx+0x33a373ef],eax
  41295d:	rcl    BYTE PTR [esi],cl
  41295f:	xchg   BYTE PTR [edi],cl
  412961:	add    dh,al
  412963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412964:	test   eax,0x26df40d0
  412969:	sub    BYTE PTR [ebp-0x31630317],cl
  41296f:	xchg   ebx,eax
  412970:	repnz fidiv DWORD PTR [ecx]
  412973:	adc    ebp,ebx
  412975:	cmc    
  412976:	push   0x72d5762b
  41297b:	pop    ebp
  41297c:	mov    cl,0x32
  41297e:	imul   ebx,DWORD PTR gs:[eax-0x205af327],0x8b4b6b3d
  412989:	or     eax,0xcf1d3abc
  41298e:	lea    eax,[ebp+ebx*2-0x6b]
  412992:	sub    bl,BYTE PTR [ecx+0x58]
  412995:	xchg   esp,eax
  412996:	mov    eax,0xf78f3996
  41299b:	push   0xffffffda
  41299d:	mov    esp,0x11af10c9
  4129a2:	dec    eax
  4129a3:	xor    BYTE PTR [ebp-0x6031d28b],al
  4129a9:	mov    ch,0x25
  4129ab:	inc    esi
  4129ac:	dec    edx
  4129ad:	cmp    al,BYTE PTR [ebx+0x6d]
  4129b0:	fidivr DWORD PTR ds:0xb7b5f048
  4129b6:	call   0x579934fa
  4129bb:	xor    dl,BYTE PTR [ecx]
  4129bd:	xor    edi,DWORD PTR [eax+edx*8]
  4129c0:	sbb    ebp,DWORD PTR [esp+ebp*2]
  4129c3:	mov    ss,WORD PTR [eax-0x5]
  4129c6:	mov    eax,0xf9bfc83b
  4129cb:	sbb    ebp,ecx
  4129cd:	(bad)  [ecx+0x19]
  4129d0:	adc    al,0xba
  4129d2:	adc    eax,DWORD PTR [eax-0x7f4ea2ff]
  4129d8:	test   DWORD PTR [edi],edx
  4129da:	pop    edx
  4129db:	inc    ebx
  4129dc:	sbb    BYTE PTR [edi-0x55a0f30f],cl
  4129e2:	cld    
  4129e3:	out    dx,al
  4129e4:	inc    esp
  4129e5:	mov    al,0xe2
  4129e7:	call   0x214e:0x1aa37fa
  4129ee:	push   cs
  4129ef:	mov    ah,0xa0
  4129f1:	sbb    dl,BYTE PTR [edx-0x1]
  4129f4:	cli    
  4129f5:	mov    eax,0xa3d2d857
  4129fa:	and    esp,esp
  4129fc:	outs   dx,DWORD PTR ds:[esi]
  4129fd:	cmp    al,0xd9
  4129ff:	inc    esi
  412a00:	rcl    bl,0x4a
  412a03:	std    
  412a04:	jp     0x412a2f
  412a06:	pushf  
  412a07:	jae    0x412a58
  412a09:	fwait
  412a0a:	addr16 std 
  412a0c:	(bad)  
  412a0d:	mov    dh,0x2f
  412a0f:	sbb    eax,0xade0a182
  412a14:	int3   
  412a15:	bound  eax,QWORD PTR [ebx+0x29]
  412a18:	std    
  412a19:	stc    
  412a1a:	inc    ecx
  412a1b:	adc    dl,bh
  412a1d:	sti    
  412a1e:	pop    di
  412a20:	or     DWORD PTR [ebx],0xea364b6e
  412a26:	inc    esi
  412a27:	inc    ecx
  412a28:	shl    BYTE PTR [eax-0x5],1
  412a2b:	sbb    ah,BYTE PTR [edi]
  412a2d:	cmc    
  412a2e:	clc    
  412a2f:	adc    eax,0x793c276d
  412a34:	ins    BYTE PTR es:[edi],dx
  412a35:	hlt    
  412a36:	adc    BYTE PTR ds:0xb19f5dde,ah
  412a3c:	hlt    
  412a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a3e:	jle    0x4129e3
  412a40:	(bad)  
  412a41:	or     al,dl
  412a43:	jns    0x412a80
  412a45:	(bad)  
  412a46:	jmp    DWORD PTR [ebp+0x49]
  412a49:	mov    dh,0x9a
  412a4b:	(bad)  
  412a4c:	and    dh,BYTE PTR [edi+0x5e]
  412a4f:	repnz and esp,0xf136d663
  412a56:	mov    eax,ds:0xd86af428
  412a5b:	ret    
  412a5c:	mov    al,ds:0x157aa65
  412a61:	xor    esi,DWORD PTR [ebx-0x5fd149ce]
  412a67:	shl    DWORD PTR [edx-0x3e],cl
  412a6a:	scas   eax,DWORD PTR es:[edi]
  412a6b:	cli    
  412a6c:	enter  0x33ae,0xc5
  412a70:	mov    ds:0x5f2f81e9,al
  412a75:	xlat   BYTE PTR ds:[ebx]
  412a76:	gs (bad) 
  412a78:	xor    eax,0x32f531dc
  412a7d:	push   es
  412a7e:	outs   dx,DWORD PTR ds:[esi]
  412a7f:	loop   0x412a6f
  412a81:	inc    edx
  412a82:	and    al,0x86
  412a84:	or     DWORD PTR [edx-0x1245779e],ecx
  412a8a:	sbb    edx,DWORD PTR [ecx-0x6c]
  412a8d:	aaa    
  412a8e:	mov    ah,0xe5
  412a90:	sub    ebp,DWORD PTR [esi-0x6b]
  412a93:	jns    0x412af4
  412a95:	cmp    ch,BYTE PTR [esp+ebp*4+0x2e]
  412a99:	xchg   ebp,eax
  412a9a:	cld    
  412a9b:	in     eax,0xfe
  412a9d:	and    al,bl
  412a9f:	out    dx,eax
  412aa0:	(bad)  
  412aa1:	cld    
  412aa2:	sub    dh,ah
  412aa4:	lods   al,BYTE PTR ds:[esi]
  412aa5:	push   eax
  412aa6:	mov    ebx,0x64419321
  412aab:	repnz adc al,0x89
  412aae:	loopne 0x412ab8
  412ab0:	into   
  412ab1:	test   BYTE PTR [edx+edi*4-0x4b61e73d],ch
  412ab8:	inc    ebp
  412ab9:	mov    al,ds:0x7ad90be6
  412abe:	fwait
  412abf:	loopne 0x412a6e
  412ac1:	inc    ecx
  412ac2:	xchg   DWORD PTR [ecx+0x60],esi
  412ac5:	es (bad) 
  412ac8:	sbb    DWORD PTR [ecx],0x2e
  412acb:	sub    BYTE PTR [edx-0x453c2b52],0x25
  412ad2:	push   eax
  412ad3:	jp     0x412a7e
  412ad5:	les    ebx,FWORD PTR [ebx]
  412ad7:	xor    ecx,DWORD PTR [edi]
  412ad9:	jbe    0x412b3f
  412adb:	mov    eax,DWORD PTR [ebx+ecx*1+0x5ab5bfc0]
  412ae2:	jae    0x412aa1
  412ae4:	dec    ecx
  412ae5:	jp     0x412aef
  412ae7:	(bad)  
  412ae8:	adc    dl,BYTE PTR [eax]
  412aea:	cmp    eax,0x59fd2280
  412aef:	dec    esp
  412af0:	ret    
  412af1:	mov    esi,DWORD PTR [ebx-0x25999374]
  412af7:	cmp    cl,BYTE PTR [ecx]
  412af9:	out    0x5a,al
  412afb:	shl    BYTE PTR [eax-0x68a2ced3],cl
  412b01:	or     bl,BYTE PTR [edx+0x6d30138f]
  412b07:	scas   al,BYTE PTR es:[edi]
  412b08:	sbb    bh,BYTE PTR [ecx-0x51]
  412b0b:	sub    edi,DWORD PTR [edx-0x6e]
  412b0e:	push   ecx
  412b0f:	mov    BYTE PTR [edx+0x29],cl
  412b12:	leave  
  412b13:	push   0xd7d2a273
  412b18:	in     al,dx
  412b19:	pop    eax
  412b1a:	and    DWORD PTR [esi-0x70216749],esp
  412b20:	imul   esp,DWORD PTR [ebp+0x277a201b],0xffffffd4
  412b27:	push   ebp
  412b28:	push   esp
  412b29:	jle    0x412abe
  412b2b:	inc    esp
  412b2c:	scas   al,BYTE PTR es:[edi]
  412b2d:	icebp  
  412b2e:	data16 mov ds:0x1bd4bf00,al
  412b34:	ins    DWORD PTR es:[edi],dx
  412b35:	aaa    
  412b36:	in     al,0x80
  412b38:	mov    ch,0x1b
  412b3a:	adc    al,0xcc
  412b3c:	lods   al,BYTE PTR ds:[esi]
  412b3d:	xchg   edx,eax
  412b3e:	pop    esp
  412b3f:	shl    DWORD PTR ds:0xb74aacb6,1
  412b45:	outs   dx,DWORD PTR ds:[esi]
  412b46:	jbe    0x412b51
  412b48:	rol    BYTE PTR [ecx+0x6a],cl
  412b4b:	adc    DWORD PTR [esi+0x167dc346],esp
  412b51:	fisttp WORD PTR [ecx]
  412b53:	ror    DWORD PTR [edx],cl
  412b55:	lods   eax,DWORD PTR ds:[esi]
  412b56:	cmp    al,0xd0
  412b58:	lds    edx,FWORD PTR [ecx]
  412b5a:	loopne 0x412ba8
  412b5c:	mov    BYTE PTR [eax+0x1d],al
  412b5f:	xchg   edx,eax
  412b60:	rdtsc  
  412b62:	arpl   WORD PTR [ebx+0x4a],sp
  412b65:	inc    esi
  412b66:	scas   al,BYTE PTR es:[edi]
  412b67:	ds push edi
  412b69:	pop    es
  412b6a:	inc    esp
  412b6b:	sub    BYTE PTR [edi],0x6d
  412b6e:	std    
  412b6f:	cs jecxz 0x412b52
  412b72:	inc    esp
  412b73:	mov    eax,DWORD PTR [ebp+edx*4-0xd5d365f]
  412b7a:	jecxz  0x412b8e
  412b7c:	push   edi
  412b7d:	jg     0x412bb8
  412b7f:	rol    DWORD PTR [edx-0x4ca68d81],1
  412b85:	fadd   QWORD PTR [edx+eiz*8+0xd]
  412b89:	adc    BYTE PTR [esi-0xc],bh
  412b8c:	fsub   DWORD PTR [eax-0x5a]
  412b8f:	in     al,dx
  412b90:	adc    ecx,edx
  412b92:	(bad)  
  412b93:	daa    
  412b94:	das    
  412b95:	mov    esp,0xffa71d26
  412b9a:	push   0xffffffbc
  412b9c:	ror    esi,1
  412b9e:	xchg   edi,eax
  412b9f:	ins    DWORD PTR es:[edi],dx
  412ba0:	cmp    DWORD PTR [edx-0x4ef0331b],ecx
  412ba6:	mov    edi,0xf6aa2de5
  412bab:	pop    es
  412bac:	clc    
  412bad:	push   ebx
  412bae:	xchg   edi,eax
  412baf:	and    cl,BYTE PTR [ebp-0x19]
  412bb2:	fnsave [esi-0x330fcca4]
  412bb8:	or     BYTE PTR [edi+eiz*2],bl
  412bbb:	inc    esp
  412bbc:	add    ebx,DWORD PTR [ebx]
  412bbe:	xchg   ebp,eax
  412bbf:	int    0x6b
  412bc1:	call   0x406a:0x4b9d98cf
  412bc8:	mov    al,ds:0x1582d0ec
  412bcd:	xchg   ecx,eax
  412bce:	sbb    eax,0x5cea52e9
  412bd3:	int3   
  412bd4:	scas   eax,DWORD PTR es:[edi]
  412bd5:	imul   ecx,ebx,0xffffffec
  412bd8:	ins    BYTE PTR es:[edi],dx
  412bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bda:	es fdivr st(1),st
  412bdd:	dec    eax
  412bde:	(bad)  
  412bdf:	test   eax,0x35e315e4
  412be4:	sub    esp,DWORD PTR [ebp-0x25fc3a5d]
  412bea:	pop    ebx
  412beb:	popf   
  412bec:	xchg   edx,ecx
  412bee:	jp     0x412c32
  412bf0:	repnz sub dl,BYTE PTR [edi+esi*1-0x76]
  412bf5:	fs scas eax,DWORD PTR es:[edi]
  412bf7:	jge    0x412b86
  412bf9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412bfb:	jo     0x412c08
  412bfd:	add    edx,DWORD PTR [ecx-0x1]
  412c00:	cmp    DWORD PTR [edx],eax
  412c02:	sbb    ecx,0x1b
  412c05:	jge    0x412bb6
  412c07:	ja     0x412b9b
  412c09:	imul   eax,DWORD PTR [edx],0x7e
  412c0c:	repz mov ebp,0x3639ff69
  412c12:	daa    
  412c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c14:	add    BYTE PTR [esi],al
  412c16:	stc    
  412c17:	into   
  412c18:	hlt    
  412c19:	xor    eax,0x801f207f
  412c1e:	fnstenv [edx+0x4f4494de]
  412c24:	jp     0x412bff
  412c26:	ficom  WORD PTR [ebp-0x2561463c]
  412c2c:	mov    gs,WORD PTR [edx-0x27e35192]
  412c32:	cmp    esi,edx
  412c34:	push   ebx
  412c35:	outs   dx,DWORD PTR ds:[esi]
  412c36:	fstp   TBYTE PTR [eax+0x3f6b1fcd]
  412c3c:	dec    ebx
  412c3d:	add    al,0xc2
  412c3f:	and    DWORD PTR [ebp-0x10f92fd1],0x61d2181d
  412c49:	inc    esi
  412c4a:	mov    WORD PTR [edx],ds
  412c4c:	addr16 mov cl,0x5f
  412c4f:	std    
  412c50:	stc    
  412c51:	add    ch,BYTE PTR [ebx+0x1f253bf6]
  412c57:	xchg   DWORD PTR [edi+0x7a141530],ecx
  412c5d:	lahf   
  412c5e:	cs in  eax,0x74
  412c61:	aas    
  412c62:	es gs jae 0x412ca8
  412c66:	mov    eax,0xcad2bec8
  412c6b:	or     ebp,edi
  412c6d:	js     0x412c9c
  412c6f:	push   0xffffffe7
  412c71:	fs dec edx
  412c73:	les    ebx,FWORD PTR [ecx-0x6da09d2c]
  412c79:	inc    edi
  412c7a:	arpl   WORD PTR [eax+edx*1],sp
  412c7d:	cmp    bh,BYTE PTR [ecx+0xa36427]
  412c83:	pop    eax
  412c84:	out    0x1d,al
  412c86:	dec    esp
  412c87:	dec    ecx
  412c88:	retf   
  412c89:	xchg   esp,eax
  412c8a:	shl    BYTE PTR [ecx+eax*8],1
  412c8d:	jmp    0x412c7f
  412c8f:	leave  
  412c90:	adc    eax,0xec073da9
  412c95:	nop
  412c96:	pop    edx
  412c97:	ficomp WORD PTR [edx-0x65bfd918]
  412c9d:	jb     0x412c42
  412c9f:	scas   al,BYTE PTR es:[edi]
  412ca0:	sub    DWORD PTR [eax+0x960e91f],0xffffffdb
  412ca7:	shl    DWORD PTR [esi-0x78],1
  412caa:	sub    DWORD PTR [edi+0x57],esp
  412cad:	mov    esp,0x378e60ca
  412cb2:	(bad)  
  412cb3:	cmp    eax,0x5ce12203
  412cb8:	and    cl,BYTE PTR [eax]
  412cba:	sbb    eax,0xcab3226b
  412cbf:	(bad)  
  412cc0:	loop   0x412ca8
  412cc2:	xor    eax,0xc31bd289
  412cc7:	cmp    BYTE PTR [esi-0x32d2e44c],al
  412ccd:	lea    esi,[edi-0x78]
  412cd0:	pop    ecx
  412cd1:	aad    0xa9
  412cd3:	dec    esi
  412cd4:	cmp    edx,DWORD PTR [ebp+ecx*1-0x75]
  412cd8:	jp     0x412d40
  412cda:	adc    DWORD PTR ds:0x18b7f132,ecx
  412ce0:	fimul  WORD PTR [eax+0x54e8ddf3]
  412ce6:	inc    esi
  412ce7:	xchg   DWORD PTR [edx+0x4c],ebp
  412cea:	xlat   BYTE PTR ds:[ebx]
  412ceb:	mov    dh,0x98
  412ced:	xchg   ebx,eax
  412cee:	jge    0x412d09
  412cf0:	push   esi
  412cf1:	mov    eax,0x9dacd0bb
  412cf6:	imul   edi,ecx,0x1c
  412cf9:	mov    BYTE PTR [esi],al
  412cfb:	dec    ebp
  412cfc:	imul   ebx,ebx,0x4a
  412cff:	xor    al,0x35
  412d01:	ds jmp 0x6821fb6
  412d07:	mov    DWORD PTR [ebp+0x1b],ecx
  412d0a:	push   es
  412d0b:	pop    eax
  412d0c:	mov    eax,ds:0xafdf5636
  412d11:	loopne 0x412d26
  412d13:	sub    BYTE PTR [esi-0x76a2e5b3],cl
  412d19:	test   ecx,esi
  412d1b:	xchg   edi,eax
  412d1c:	pop    edx
  412d1d:	shl    BYTE PTR [eax+0x42],cl
  412d20:	push   esi
  412d21:	and    ebp,ebx
  412d23:	inc    edi
  412d24:	iret   
  412d25:	adc    BYTE PTR [ebp-0x5c],bl
  412d28:	mov    cl,0xc4
  412d2a:	jae    0x412d21
  412d2c:	cwde   
  412d2d:	sbb    al,0xff
  412d2f:	call   0xcc57:0x35066f6e
  412d36:	jl     0x412d5c
  412d38:	mov    edx,0x5d8b12b6
  412d3d:	lea    esi,[edx+0x50cbad2]
  412d43:	xchg   ebp,eax
  412d44:	ret    0x40cc
  412d47:	mov    dh,0x37
  412d49:	out    dx,eax
  412d4a:	in     al,dx
  412d4b:	and    ebp,DWORD PTR [eax-0x7b581bfb]
  412d51:	xor    BYTE PTR [edx+eiz*2+0x13],ch
  412d55:	mov    ebx,0x7b39da2b
  412d5a:	cmp    DWORD PTR [esi-0x4d],ebx
  412d5d:	cld    
  412d5e:	inc    edx
  412d5f:	lea    edx,[ebx+ebx*1+0x6d]
  412d63:	stc    
  412d64:	ja     0x412d65
  412d66:	xchg   ebp,eax
  412d67:	mov    al,ds:0xa4678549
  412d6c:	adc    eax,0x1992082c
  412d71:	and    al,0xb0
  412d73:	xchg   DWORD PTR ds:0xf8a93f5a,edx
  412d79:	arpl   WORD PTR [eax-0x7ca427ec],dx
  412d7f:	loop   0x412d9b
  412d81:	loopne 0x412dff
  412d83:	cld    
  412d84:	mov    esi,0x7952f7b1
  412d89:	inc    ebx
  412d8a:	pusha  
  412d8b:	inc    edi
  412d8c:	lea    eax,[ebp+0x4f]
  412d8f:	jno    0x412db4
  412d91:	mov    ah,cl
  412d93:	sub    DWORD PTR [ebp+0xc],edi
  412d96:	dec    ebp
  412d97:	in     al,dx
  412d98:	in     al,0x6c
  412d9a:	sub    al,0x25
  412d9c:	daa    
  412d9d:	mov    dh,0x1c
  412d9f:	mov    cl,ah
  412da1:	inc    eax
  412da2:	cmp    BYTE PTR [ebx],ah
  412da4:	xchg   edi,eax
  412da5:	shl    DWORD PTR [edi-0x72aa04fe],cl
  412dab:	iret   
  412dac:	add    DWORD PTR [ecx],ecx
  412dae:	xchg   ebp,eax
  412daf:	jmp    0x66c01ad8
  412db4:	mov    ebp,0xc80fe878
  412db9:	mov    al,ds:0x9cec351d
  412dbe:	jne    0x412db2
  412dc0:	aad    0xd7
  412dc2:	cmp    DWORD PTR [ebx+0x7],ebp
  412dc5:	int3   
  412dc6:	add    ecx,DWORD PTR ds:0xa15c5027
  412dcc:	icebp  
  412dcd:	add    al,0x3d
  412dcf:	adc    al,0x69
  412dd1:	in     al,dx
  412dd2:	loopne 0x412e09
  412dd4:	mov    edi,0xbb476481
  412dd9:	mov    dh,0x63
  412ddb:	pop    ecx
  412ddc:	and    al,0xc7
  412dde:	lds    edi,FWORD PTR [ecx+0x22]
  412de1:	lea    ebx,[esi+0x2247800e]
  412de7:	mov    ds:0x1c045753,al
  412dec:	jbe    0x412de4
  412dee:	mov    dl,0xbb
  412df0:	fcom   DWORD PTR [esi]
  412df2:	ret    
  412df3:	jb     0x412d85
  412df5:	rol    DWORD PTR [esi],0x9e
  412df8:	hlt    
  412df9:	cwde   
  412dfa:	ror    DWORD PTR ds:0xb6287407,cl
  412e00:	push   esi
  412e01:	mov    edi,0xedb74b2c
  412e06:	pop    esp
  412e07:	imul   esp,esp,0x144fc6d3
  412e0d:	pop    ds
  412e0e:	lahf   
  412e0f:	pop    ds
  412e10:	pop    esp
  412e11:	pop    ecx
  412e12:	lock fs (bad) 
  412e15:	or     BYTE PTR [esi+0x1a],bh
  412e18:	sbb    BYTE PTR [edi+esi*8+0x30],al
  412e1c:	pop    ss
  412e1d:	ins    DWORD PTR es:[edi],dx
  412e1e:	loop   0x412e93
  412e20:	ss xchg ebx,eax
  412e22:	jg     0x412dd1
  412e24:	jno    0x412ddf
  412e26:	sbb    DWORD PTR [eax+0x34],ebx
  412e29:	stos   DWORD PTR es:[edi],eax
  412e2a:	aaa    
  412e2b:	inc    esi
  412e2c:	or     BYTE PTR [ecx+eiz*1-0x30ec1ee6],bh
  412e33:	fcomp  QWORD PTR [edx-0x2f]
  412e36:	mov    DWORD PTR [ecx],ecx
  412e38:	arpl   WORD PTR [eax-0x70],dx
  412e3b:	dec    edi
  412e3c:	pop    ss
  412e3d:	dec    ebp
  412e3e:	cld    
  412e3f:	inc    esi
  412e40:	es pushf 
  412e42:	sub    esi,DWORD PTR [eax+ebx*2-0x6aecbbba]
  412e49:	(bad)
  412e4c:	adc    BYTE PTR [edx-0x4a],ch
  412e4f:	pop    esi
  412e50:	pop    DWORD PTR [eax+0x26]
  412e53:	inc    ebp
  412e54:	cs push 0x5bac2fa0
  412e5a:	rol    esi,0xcd
  412e5d:	inc    edi
  412e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e5f:	cmp    BYTE PTR [edi-0x67],cl
  412e62:	in     eax,dx
  412e63:	or     BYTE PTR [ebx+eiz*2+0x4c],bl
  412e67:	out    dx,al
  412e68:	inc    eax
  412e69:	inc    ebx
  412e6a:	pusha  
  412e6b:	mov    bl,0xd
  412e6d:	mov    edi,0xb2f40edb
  412e72:	mov    ebp,0xcf58d1da
  412e77:	mov    eax,0x1050fe4e
  412e7c:	ror    DWORD PTR [edi+0x7663b145],0xba
  412e83:	cwde   
  412e84:	fstp   QWORD PTR [ebx+0x3f65b3a3]
  412e8a:	adc    edx,ecx
  412e8c:	inc    ebp
  412e8d:	jle    0x412ee7
  412e8f:	push   esi
  412e90:	cmp    bl,BYTE PTR [esi]
  412e92:	jp     0x412e33
  412e94:	test   eax,0x2114cb4
  412e99:	mov    eax,0xcf8846e4
  412e9e:	dec    edx
  412e9f:	pop    esi
  412ea0:	cs jb  0x412ec5
  412ea3:	ret    
  412ea4:	aam    0x5e
  412ea6:	xor    BYTE PTR [edi],al
  412ea8:	pushf  
  412ea9:	mov    eax,ds:0xf8afc388
  412eae:	or     eax,0xc461337c
  412eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eb4:	sbb    ah,BYTE PTR [edx]
  412eb6:	and    edi,DWORD PTR [eax-0x5e]
  412eb9:	adc    DWORD PTR [ebp+0x2b227a9a],eax
  412ebf:	xor    al,0xdb
  412ec2:	arpl   WORD PTR [ecx+0x31eccf5c],cx
  412ec8:	jne    0x412f40
  412eca:	adc    al,0x2a
  412ecc:	pop    esi
  412ecd:	pop    edx
  412ece:	in     eax,0x88
  412ed0:	sbb    al,0x56
  412ed2:	push   0xffffffa4
  412ed4:	cmp    DWORD PTR [edi-0x7d26b77d],ecx
  412eda:	inc    esi
  412edb:	jl     0x412ea7
  412edd:	fwait
  412ede:	test   eax,0x2c4e647e
  412ee3:	sbb    ebx,esi
  412ee5:	fdiv   DWORD PTR [ecx+0x43]
  412ee8:	jl     0x412f13
  412eea:	xor    eax,0x88fe3e93
  412eef:	imul   ebx,DWORD PTR [edi],0xffffff84
  412ef2:	add    al,0x66
  412ef4:	les    ecx,FWORD PTR [ebp+edi*2+0x2fa16e5d]
  412efb:	pusha  
  412efc:	mov    eax,0x3a0a1e78
  412f01:	into   
  412f02:	or     BYTE PTR [ecx+0x436b4a10],al
  412f08:	add    eax,0x36b7df1a
  412f0d:	and    DWORD PTR [ecx],esp
  412f0f:	inc    edi
  412f10:	(bad)  
  412f11:	scas   eax,DWORD PTR es:[edi]
  412f12:	loope  0x412f07
  412f14:	xchg   edx,eax
  412f15:	inc    eax
  412f16:	jmp    DWORD PTR [edx+0x789f3e4e]
  412f1c:	mov    bh,0xb5
  412f1e:	sub    DWORD PTR [ebx],ebx
  412f20:	js     0x412efc
  412f22:	mov    eax,0x462f051c
  412f27:	(bad)  
  412f29:	jl     0x412ec5
  412f2b:	add    al,0x9
  412f2d:	je     0x412f57
  412f2f:	push   ecx
  412f30:	mov    cl,0x8d
  412f32:	es call 0x362f:0xa9cb78ca
  412f3a:	mov    ebp,0x74e0d3c9
  412f3f:	adc    DWORD PTR [edi+0x67],0x935f2ecf
  412f46:	mov    ds:0x9f7cc2c,al
  412f4b:	clc    
  412f4c:	int    0xf7
  412f4e:	enter  0x73f5,0xc9
  412f52:	adc    eax,0x4e7e806b
  412f57:	jno    0x412fb0
  412f59:	mov    esi,0x8817ef81
  412f5e:	adc    eax,0x6b8c013d
  412f63:	adc    esp,DWORD PTR [eax]
  412f65:	sar    ebx,cl
  412f67:	stos   DWORD PTR es:[edi],eax
  412f68:	xchg   ebp,eax
  412f69:	jmp    0x437e5d6f
  412f6e:	(bad)  [esi+0x1b]
  412f71:	adc    BYTE PTR [eax],bl
  412f73:	mov    edi,0x59f10ae4
  412f78:	pop    ds
  412f79:	mov    al,ds:0xb053ff3
  412f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f7f:	ds mov ebx,0xe0383c89
  412f85:	enter  0x840a,0x9c
  412f89:	or     dl,BYTE PTR ds:0x3411cb37
  412f8f:	inc    edi
  412f90:	sbb    BYTE PTR [edx+ebx*1+0x616367b3],0xe1
  412f98:	xor    eax,0xdbc5b22b
  412f9d:	mov    WORD PTR [esi+0x1865f668],gs
  412fa3:	xchg   bh,al
  412fa5:	and    al,0x1d
  412fa7:	mov    ecx,0x8bd7aa3d
  412fac:	mov    esi,0x1349a667
  412fb1:	dec    ebp
  412fb2:	dec    esp
  412fb3:	fldcw  WORD PTR [ebp-0x11]
  412fb6:	sub    dl,BYTE PTR [edi+0x7dd72426]
  412fbc:	pop    ebx
  412fbd:	xchg   BYTE PTR [edx+esi*1],dh
  412fc0:	lahf   
  412fc1:	jmp    0x7f62:0xc8f83ec1
  412fc8:	and    eax,0x9a38fb67
  412fcd:	shl    DWORD PTR [eax+0x1a],cl
  412fd0:	pop    edx
  412fd1:	fisttp DWORD PTR [ecx-0xe]
  412fd4:	cwde   
  412fd5:	mov    al,ds:0xa74fbee5
  412fda:	inc    eax
  412fdb:	dec    eax
  412fdc:	mov    ds:0x284e0e42,eax
  412fe1:	mov    ebx,0xa3d2b2b9
  412fe6:	jbe    0x41300d
  412fe8:	loopne 0x413029
  412fea:	mov    edx,0xb0fe5ef4
  412fef:	daa    
  412ff0:	mul    ebx
  412ff2:	and    DWORD PTR [ebx-0x2d],edi
  412ff5:	jbe    0x412fd4
  412ff7:	or     eax,0x6245bda3
  412ffc:	jno    0x412f80
  412ffe:	stos   BYTE PTR es:[edi],al
  412fff:	enter  0x5cd,0xae
  413003:	or     al,0xc8
  413005:	adc    dh,BYTE PTR [ecx-0x43fddea8]
  41300b:	shl    DWORD PTR [edx+ebp*8],cl
  41300e:	xlat   BYTE PTR ds:[ebx]
  41300f:	jecxz  0x412f9a
  413011:	js     0x41306b
  413013:	in     al,0xe4
  413015:	sbb    esp,edi
  413017:	inc    edi
  413018:	sub    esi,DWORD PTR [edx-0x5b]
  41301b:	test   al,0x38
  41301d:	and    al,0xb4
  41301f:	scas   al,BYTE PTR es:[edi]
  413020:	retf   0x2d5e
  413023:	mov    esp,DWORD PTR [esi+ebx*2+0x44633600]
  41302a:	ins    DWORD PTR es:[edi],dx
  41302b:	out    dx,al
  41302c:	pop    edi
  41302d:	pop    edx
  41302e:	mov    edi,0x802707e0
  413033:	sbb    bl,BYTE PTR [eax+0x4]
  413036:	fwait
  413037:	and    ah,BYTE PTR [ebx+0x4f28c052]
  41303d:	cdq    
  41303e:	mov    bh,0xd3
  413040:	pop    ss
  413041:	stos   BYTE PTR es:[edi],al
  413042:	iret   
  413043:	lods   al,BYTE PTR ds:[esi]
  413044:	ret    0x9787
  413047:	sbb    ebp,DWORD PTR [edi-0x7e]
  41304a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304b:	mov    ebx,0x7d402ef6
  413050:	pop    esp
  413051:	sar    DWORD PTR [ebx-0x686b83c4],1
  413057:	ret    
  413058:	mov    ebx,0xd7781a6
  41305d:	aaa    
  41305e:	shl    dh,cl
  413060:	pop    es
  413061:	mov    bl,BYTE PTR [ecx]
  413063:	dec    esp
  413064:	fist   WORD PTR [esi-0x7a3adde3]
  41306a:	sbb    ah,BYTE PTR [edx-0x6eb9e101]
  413070:	push   ebx
  413071:	or     eax,0xd2c16af1
  413076:	jmp    0x34d45f8e
  41307b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307c:	das    
  41307d:	pop    es
  41307e:	or     al,0x40
  413080:	fcomp  DWORD PTR [edx+0x6b]
  413083:	aas    
  413084:	leave  
  413085:	dec    ebp
  413086:	push   edx
  413087:	sbb    DWORD PTR [esi-0x615cfae7],ecx
  41308d:	xor    esp,eax
  41308f:	rcr    BYTE PTR [edx],cl
  413091:	sbb    BYTE PTR [edx+0x263861a4],0x2b
  413098:	test   eax,0xbd3ccd0e
  41309d:	xor    dh,BYTE PTR [eax]
  41309f:	(bad)  
  4130a0:	mov    ebp,0x7b97072b
  4130a5:	and    edi,DWORD PTR [ecx+0x62]
  4130a8:	(bad)  
  4130a9:	clc    
  4130aa:	rcl    BYTE PTR [edx+0x79],cl
  4130ad:	mov    edi,0x5b3135dc
  4130b2:	add    al,0x8
  4130b4:	fwait
  4130b5:	pop    eax
  4130b6:	pop    eax
  4130b7:	push   esp
  4130b8:	xor    DWORD PTR [esi+ebx*2-0x1b],eax
  4130bc:	std    
  4130bd:	sti    
  4130be:	dec    eax
  4130bf:	(bad)  
  4130c0:	enter  0x6921,0x45
  4130c4:	inc    ebx
  4130c5:	xchg   edx,eax
  4130c6:	lds    esi,FWORD PTR [ebp+0x5f]
  4130c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ca:	cdq    
  4130cb:	fadd   DWORD PTR [ebx]
  4130cd:	and    esi,DWORD PTR [esi+0x6876271]
  4130d3:	xchg   DWORD PTR [ecx],eax
  4130d5:	stos   BYTE PTR es:[edi],al
  4130d6:	adc    eax,0xa9505aee
  4130db:	retf   0x46bf
  4130de:	add    eax,0xd90fb9af
  4130e3:	inc    ecx
  4130e4:	repz add dl,dh
  4130e7:	fsub   QWORD PTR [ebx-0x41817ca6]
  4130ed:	rol    DWORD PTR [ebx+0x5c],cl
  4130f0:	sub    al,0x89
  4130f2:	inc    DWORD PTR [edi]
  4130f4:	dec    esp
  4130f5:	mov    ds:0xa752e7b6,al
  4130fa:	sub    al,0x7b
  4130fc:	adc    al,0x82
  4130fe:	adc    ebp,DWORD PTR [ebp-0x28]
  413101:	fimul  DWORD PTR [edx-0x19]
  413104:	sbb    al,0x7c
  413106:	pushf  
  413107:	fwait
  413108:	outs   dx,BYTE PTR ds:[esi]
  413109:	repnz pop edx
  41310b:	jmp    0xc321:0xb037f0a0
  413112:	jecxz  0x4130fe
  413114:	or     al,0x81
  413116:	test   BYTE PTR [eax+edi*2+0x67],ah
  41311a:	into   
  41311b:	retf   
  41311c:	jo     0x41311a
  41311e:	adc    BYTE PTR [edx+0x4a],dh
  413121:	pop    edi
  413122:	jmp    0x413109
  413124:	ret    0x1e50
  413127:	lds    eax,FWORD PTR [eax-0x70]
  41312a:	adc    DWORD PTR [edi],ecx
  41312c:	sbb    al,0x75
  41312e:	pop    edi
  41312f:	sub    edi,ecx
  413131:	jmp    0x4130c2
  413133:	inc    edi
  413134:	xor    dl,BYTE PTR [ecx]
  413136:	mov    ds:0xe6ae68ed,eax
  41313b:	in     eax,dx
  41313c:	jle    0x41316e
  41313e:	push   0xc5fa6f5a
  413143:	ret    0xcfda
  413146:	and    BYTE PTR [ecx],ah
  413148:	mov    es,WORD PTR [eax+0x36e833cd]
  41314e:	sub    ebp,edx
  413150:	or     BYTE PTR [ecx+0x73],bh
  413153:	div    BYTE PTR [esi+0x28]
  413156:	pop    ss
  413157:	add    al,BYTE PTR [ebx+ebp*1]
  41315a:	lahf   
  41315b:	mov    al,ds:0xb2197c4d
  413160:	pop    ss
  413161:	adc    edx,DWORD PTR ds:0x26e6c3f7
  413167:	int    0xaf
  413169:	popf   
  41316a:	jae    0x4131bb
  41316c:	xor    BYTE PTR [edx+0x5f1412bf],al
  413172:	es repnz pop esp
  413175:	bnd jle 0x413174
  413178:	fstp   TBYTE PTR [edx+ebx*1]
  41317b:	lock and ebp,DWORD PTR [esi+0x6d]
  41317f:	sahf   
  413180:	jg     0x41319f
  413182:	ror    DWORD PTR ds:[esp+edx*4+0x3bdc90e4],1
  41318a:	cmp    DWORD PTR [esi+0x5f1090a7],esp
  413190:	mov    eax,0x21414e2c
  413195:	mov    ?,edx
  413197:	(bad)  
  413198:	mul    bl
  41319a:	jg     0x4131dc
  41319c:	std    
  41319d:	xchg   ebx,eax
  41319e:	mov    esi,DWORD PTR [eax]
  4131a0:	sahf   
  4131a1:	in     eax,dx
  4131a2:	xor    edx,DWORD PTR [ebx+esi*8]
  4131a5:	stos   BYTE PTR es:[edi],al
  4131a6:	inc    ebp
  4131a7:	mov    ebx,0xe53a6b10
  4131ac:	dec    ecx
  4131ad:	sub    al,0x31
  4131af:	sti    
  4131b0:	pop    ebx
  4131b1:	sub    ecx,DWORD PTR [esi+0x16fc1b89]
  4131b7:	mov    ebp,0xea2e26a6
  4131bc:	sahf   
  4131bd:	push   ebx
  4131be:	xchg   edx,eax
  4131bf:	stos   DWORD PTR es:[edi],eax
  4131c0:	(bad)  
  4131c2:	imul   ebp,DWORD PTR ds:0x57fea138,0x4a
  4131c9:	idiv   BYTE PTR [esi+0x18]
  4131cc:	imul   esi,edi,0x8c447547
  4131d2:	lds    esi,FWORD PTR [edx+0x6a]
  4131d5:	shl    BYTE PTR [ebp+0xa4c60d1],cl
  4131db:	push   ss
  4131dc:	(bad)  
  4131dd:	(bad)  
  4131df:	rcr    BYTE PTR [edx+0x3b6f3090],1
  4131e5:	mov    eax,ds:0x786090df
  4131ea:	sbb    ebp,DWORD PTR [edx+0x160a4220]
  4131f0:	sub    eax,0x5636ce16
  4131f5:	push   ebp
  4131f6:	sbb    esp,DWORD PTR [ebx]
  4131f8:	pushf  
  4131f9:	outs   dx,DWORD PTR ds:[esi]
  4131fa:	out    dx,al
  4131fb:	dec    edi
  4131fc:	retf   0x8023
  4131ff:	dec    edi
  413200:	mov    al,0x99
  413202:	cmp    eax,0xa8823d6f
  413207:	push   ds
  413208:	cmp    eax,0xfd9f8cb2
  41320d:	lods   eax,DWORD PTR ds:[esi]
  41320e:	pop    ebp
  41320f:	dec    edx
  413210:	lds    esp,FWORD PTR [edi+0x74]
  413213:	mov    esi,0x2a93778d
  413218:	cmp    BYTE PTR [eax],ah
  41321a:	and    eax,0xa64a4f6b
  41321f:	lea    ecx,[esi]
  413221:	inc    ebp
  413222:	push   cs
  413223:	jns    0x413294
  413225:	lea    ebp,[ebp-0x1a]
  413228:	jb     0x4131fa
  41322a:	add    ebp,DWORD PTR [esi+0x16425999]
  413230:	mov    ds:0x95f621f2,eax
  413235:	sbb    cl,BYTE PTR [ebx+0x12ed00b2]
  41323b:	cmp    eax,0x98c4f93c
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	in     al,0xe5
  413243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413244:	aad    0x33
  413246:	lods   eax,DWORD PTR ds:[esi]
  413247:	es out 0xb8,eax
  41324a:	rol    edi,1
  41324c:	xor    BYTE PTR [edx+eiz*2-0xa],0x23
  413251:	je     0x4132c2
  413253:	xor    al,0xf5
  413255:	push   edx
  413256:	in     al,0x2a
  413258:	dec    ebp
  413259:	add    cl,BYTE PTR [edx-0x1a01fe4c]
  41325f:	cmp    BYTE PTR [ecx],ch
  413261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413262:	scas   eax,DWORD PTR es:[edi]
  413263:	(bad)  
  413264:	cmp    DWORD PTR [eax],ebx
  413266:	in     al,dx
  413267:	jmp    0xe39e:0x5d1ffdd9
  41326e:	xchg   BYTE PTR [edi+0x3b],bl
  413271:	dec    edx
  413272:	jle    0x413223
  413274:	sub    al,0x99
  413276:	lahf   
  413277:	mov    ds:0xed0e8a35,eax
  41327c:	xchg   ebp,eax
  41327d:	push   edi
  41327e:	jns    0x4132c8
  413280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413281:	and    edi,DWORD PTR [ebx]
  413283:	inc    esp
  413284:	inc    eax
  413285:	scas   al,BYTE PTR es:[edi]
  413286:	(bad)
  413289:	fimul  WORD PTR ds:0xdb1d5ac8
  41328f:	mov    al,0x1d
  413291:	adc    eax,0x240bd811
  413296:	or     BYTE PTR [eax+0x758315],dh
  41329c:	loopne 0x41329d
  41329e:	jno    0x4132ad
  4132a0:	jge    0x413292
  4132a2:	jmp    0x413234
  4132a4:	bound  esp,QWORD PTR [ebp-0x23cdb50a]
  4132aa:	xor    eax,0x252c455e
  4132af:	xchg   esp,eax
  4132b0:	fst    st(1)
  4132b2:	and    al,0x62
  4132b4:	imul   esi,ebx,0x18
  4132b7:	lods   ax,WORD PTR ds:[esi]
  4132b9:	inc    esi
  4132ba:	adc    DWORD PTR [ebp+0x4656b094],ebp
  4132c0:	jl     0x4132c6
  4132c2:	les    esp,FWORD PTR [ecx+0x16922388]
  4132c8:	and    al,0x6c
  4132ca:	sub    al,BYTE PTR [ebx]
  4132cc:	bound  edi,QWORD PTR [edi+0x7e435d8b]
  4132d2:	mov    cl,BYTE PTR [eax-0x10176fd4]
  4132d8:	mov    ebp,0xdfe5a776
  4132dd:	xor    al,0x4f
  4132df:	int    0x2e
  4132e1:	aad    0xc9
  4132e3:	mov    ds:0xe2a10e45,al
  4132e8:	leave  
  4132e9:	cmp    al,0xb9
  4132eb:	inc    esi
  4132ec:	add    BYTE PTR [esi+eiz*2+0x831dd96],0x83
  4132f4:	jns    0x413359
  4132f6:	inc    edx
  4132f7:	scas   eax,DWORD PTR es:[edi]
  4132f8:	icebp  
  4132f9:	push   edi
  4132fa:	scas   eax,DWORD PTR es:[edi]
  4132fb:	jb     0x4132aa
  4132fd:	test   al,0x1f
  4132ff:	lahf   
  413300:	fbstp  TBYTE PTR [edx]
  413302:	or     DWORD PTR [esi-0x68],edx
  413305:	jns    0x4132db
  413307:	jle    0x4132d5
  413309:	xor    al,0xcc
  41330b:	mov    ah,0x71
  41330d:	jbe    0x41333d
  41330f:	jno    0x4132cf
  413311:	mov    eax,ds:0xdae6d102
  413316:	(bad)  
  413319:	fdivr  QWORD PTR [ebx+0x40546a85]
  41331f:	imul   edx,DWORD PTR [edx-0xd],0x8358a71c
  413326:	fidivr WORD PTR [edx+0x257b40bb]
  41332c:	cld    
  41332d:	and    ebp,DWORD PTR [ebx+0x5b19230f]
  413333:	pop    ss
  413334:	cmp    BYTE PTR [ebx+0x57cf7840],al
  41333a:	cmc    
  41333b:	mov    ecx,0xc24995bb
  413340:	mov    dl,0x18
  413342:	push   es
  413343:	lea    esi,[eax]
  413345:	adc    eax,0x746047f7
  41334a:	aaa    
  41334b:	popa   
  41334c:	inc    edi
  41334d:	jno    0x4132e7
  41334f:	dec    esp
  413350:	adc    DWORD PTR [eax],0xc16aefdd
  413356:	shr    ebp,0xaf
  413359:	leave  
  41335a:	rcr    BYTE PTR [esi-0x5b],0x49
  41335e:	pop    esp
  41335f:	data16 sbb BYTE PTR [esi-0x30b320f7],bl
  413366:	scas   al,BYTE PTR es:[edi]
  413367:	cmp    DWORD PTR [edi],0x52
  41336a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336b:	and    al,0x40
  41336d:	ffreep st(0)
  41336f:	sbb    eax,0xbacbc8c6
  413374:	sbb    BYTE PTR [edi+0x68708e6c],ah
  41337a:	jnp    0x41331d
  41337c:	aaa    
  41337d:	in     eax,0xae
  41337f:	daa    
  413380:	xchg   ecx,eax
  413381:	add    BYTE PTR [ecx+0x12],bh
  413384:	add    edx,esi
  413386:	bound  edi,QWORD PTR [edi+0xacae5c5]
  41338c:	frstpm(287 only) 
  41338e:	lock xor eax,DWORD PTR [esi-0x4edec0a3]
  413395:	rcr    WORD PTR [esi-0x6b],1
  413399:	dec    edi
  41339a:	js     0x413338
  41339c:	jg     0x41335b
  41339e:	adc    al,0xbb
  4133a0:	cmp    ah,BYTE PTR [ecx]
  4133a2:	jb     0x41332d
  4133a4:	call   0xa4f56fc
  4133a9:	in     eax,0xe2
  4133ab:	jmp    0xc92a81fd
  4133b0:	push   esi
  4133b1:	jmp    0x41333a
  4133b3:	and    al,0xcd
  4133b5:	adc    cl,BYTE PTR [eax-0x57f2ebcf]
  4133bb:	aaa    
  4133bc:	loope  0x413411
  4133be:	daa    
  4133bf:	in     eax,dx
  4133c0:	daa    
  4133c1:	sub    DWORD PTR [ebp+eiz*2+0x3cd6c560],ebp
  4133c8:	outs   dx,DWORD PTR ds:[esi]
  4133c9:	das    
  4133ca:	adc    eax,0xe1ed6f09
  4133cf:	dec    esi
  4133d0:	ret    0x20e0
  4133d3:	les    ebp,FWORD PTR ss:[esi+ebx*1-0x36]
  4133d8:	inc    ebx
  4133d9:	sub    BYTE PTR [edi+esi*8],0x23
  4133dd:	stc    
  4133de:	mov    ebx,0x3a4a3085
  4133e3:	mov    al,0x23
  4133e5:	dec    esi
  4133e6:	ja     0x41345e
  4133e8:	(bad)  
  4133eb:	and    al,0x3d
  4133ed:	or     al,BYTE PTR [esi+ecx*4-0x208d2390]
  4133f4:	ins    DWORD PTR es:[edi],dx
  4133f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f6:	je     0x4133fb
  4133f8:	sbb    ebp,DWORD PTR [ecx+0x7286b7d7]
  4133fe:	fwait
  4133ff:	dec    edi
  413400:	jne    0x41344c
  413402:	cmp    BYTE PTR [ecx-0x67],ch
  413405:	in     al,dx
  413406:	ret    0xf3fc
  413409:	outs   dx,DWORD PTR ds:[esi]
  41340a:	add    eax,0xc6760d30
  41340f:	sti    
  413410:	or     esp,DWORD PTR [esi+eiz*4]
  413413:	mov    ecx,0x5c5dfecb
  413418:	int    0xb1
  41341a:	(bad)  
  41341b:	stc    
  41341c:	jae    0x4133a3
  41341e:	xrstors [ebp+0x7e961484]
  413425:	add    esp,DWORD PTR [edi]
  413427:	jmp    0x461a:0x295e49ab
  41342e:	xchg   ebx,eax
  41342f:	and    ah,BYTE PTR [edx+edi*8]
  413432:	and    al,0x1b
  413434:	or     BYTE PTR [ebx+0x8],ah
  413437:	scas   eax,DWORD PTR es:[edi]
  413438:	in     eax,0xa3
  41343a:	xchg   BYTE PTR [edx-0x14faeeb5],dl
  413440:	add    ebp,DWORD PTR [edx]
  413442:	inc    edi
  413443:	les    esp,FWORD PTR [ebp+0x44]
  413446:	lods   al,BYTE PTR ds:[esi]
  413447:	xchg   ebx,eax
  413448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413449:	adc    BYTE PTR [esi+0x6ebb6006],dl
  41344f:	mov    edx,0xd5b8d62
  413454:	loop   0x413442
  413456:	repz and DWORD PTR [ebx+0x1c6e763a],eax
  41345d:	pop    es
  41345e:	adc    ebp,DWORD PTR [ebx]
  413460:	dec    eax
  413461:	fadd   st(7),st
  413463:	scas   eax,DWORD PTR es:[edi]
  413464:	clc    
  413465:	(bad)  
  413466:	mov    ebp,0xe391205b
  41346b:	jl     0x4134c1
  41346d:	leave  
  41346e:	rol    esp,cl
  413470:	mov    edi,DWORD PTR [eax]
  413472:	repnz sbb cl,cl
  413475:	nop
  413476:	ja     0x413448
  413478:	(bad)  
  413479:	mov    esi,0x5547392
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	mov    bl,0x3e
  413481:	mov    bh,0x6f
  413483:	rcl    BYTE PTR [esp+ebx*8-0x70502bfa],cl
  41348a:	jne    0x413486
  41348c:	jno    0x4134b3
  41348e:	pop    ebx
  41348f:	inc    edx
  413490:	inc    ebp
  413491:	imul   DWORD PTR [eax-0x173372d5]
  413497:	cdq    
  413498:	bnd jge 0x413434
  41349b:	aas    
  41349c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41349d:	mov    ebp,ds
  41349f:	inc    esi
  4134a0:	stos   BYTE PTR es:[edi],al
  4134a1:	push   ecx
  4134a2:	push   ecx
  4134a3:	mov    dl,0xfc
  4134a5:	popf   
  4134a6:	and    esp,esp
  4134a8:	push   eax
  4134a9:	(bad)  
  4134aa:	outs   dx,DWORD PTR ds:[esi]
  4134ab:	fs vfnmadd213ss xmm2{k5}{z},xmm5,xmm7
  4134b2:	or     DWORD PTR [eax-0x1f0c61f4],ecx
  4134b8:	mov    edx,0x2c7dd944
  4134bd:	xor    ch,cl
  4134bf:	mov    ah,0x6d
  4134c1:	mov    cs,WORD PTR [esi+0x5f9b2da3]
  4134c7:	mov    dh,0xe3
  4134c9:	imul   edx,DWORD PTR [edi+esi*4],0xffffffbf
  4134cd:	popa   
  4134ce:	adc    al,0x8e
  4134d0:	xor    ah,bl
  4134d2:	int    0x3a
  4134d4:	and    DWORD PTR [ebp+0x1d],ebx
  4134d7:	sbb    al,BYTE PTR [ebp-0x2037cdbd]
  4134dd:	sub    al,0xf0
  4134df:	mov    ?,WORD PTR [eax-0x78c5f93a]
  4134e5:	jae    0x41350e
  4134e7:	add    DWORD PTR ds:0x396b0597,ebx
  4134ed:	sbb    BYTE PTR [ebx],ch
  4134ef:	add    eax,0xddf3ec54
  4134f4:	int3   
  4134f5:	test   BYTE PTR [ebp+0x6c],0xa
  4134f9:	xor    DWORD PTR [edi-0x48],ebp
  4134fc:	xor    edx,eax
  4134fe:	in     eax,dx
  4134ff:	fs test eax,0xd6d9643a
  413505:	sar    dh,1
  413507:	sbb    bh,ch
  413509:	es push ss
  41350b:	shl    DWORD PTR [ebx],cl
  41350d:	int    0x42
  41350f:	inc    ebx
  413510:	mov    edi,0x1d45f769
  413515:	or     edi,DWORD PTR ds:0xea5c5661
  41351b:	cmp    edi,DWORD PTR [ecx-0x29]
  41351e:	jge    0x413555
  413520:	adc    DWORD PTR [esp+edx*4],ebp
  413523:	lahf   
  413524:	fdivrp st(7),st
  413526:	dec    edi
  413527:	xchg   BYTE PTR [edi-0x6bdc840b],al
  41352d:	xchg   DWORD PTR [esi],edi
  41352f:	das    
  413530:	dec    ebp
  413531:	push   ebx
  413532:	xchg   ebp,eax
  413533:	bnd jge 0x4135af
  413536:	jge    0x413513
  413538:	push   esi
  413539:	xchg   edi,eax
  41353a:	pop    ecx
  41353b:	mov    BYTE PTR [eax+edi*1],dh
  41353e:	fimul  WORD PTR [edx]
  413540:	jnp    0x4135ba
  413542:	cmp    al,0xc5
  413544:	mov    eax,ds:0x9ca0a4d3
  413549:	sbb    al,0x63
  41354b:	cmc    
  41354c:	add    bh,bl
  41354e:	mov    ds:0xab286e5c,eax
  413553:	popf   
  413554:	jne    0x41353b
  413556:	retf   0x7a23
  413559:	mov    dl,0x8
  41355b:	fcomp  QWORD PTR [edx-0x21e86343]
  413561:	inc    ebp
  413562:	push   0x455e8a7c
  413567:	inc    ebx
  413568:	in     eax,dx
  413569:	pop    ebx
  41356a:	jle    0x4135b8
  41356c:	adc    BYTE PTR [ebp+0x24],ch
  41356f:	loope  0x413521
  413571:	sahf   
  413572:	addr16 das 
  413574:	push   ecx
  413575:	dec    esp
  413576:	fstp   st(1)
  413578:	xor    ch,BYTE PTR [ebx+0x7af8f40e]
  41357e:	push   cs
  41357f:	ins    BYTE PTR es:[edi],dx
  413580:	(bad)  
  413581:	loopne 0x4135a9
  413583:	sub    DWORD PTR [eax-0x6120a098],0x4e
  41358a:	and    esp,edi
  41358c:	fidivr WORD PTR [esi-0x392ce37a]
  413592:	cs rol BYTE PTR gs:[ebp-0x8c02fde],0x83
  41359b:	repnz adc al,0xff
  41359e:	(bad)  
  41359f:	enter  0x75f4,0x27
  4135a3:	ins    DWORD PTR es:[edi],dx
  4135a4:	repz xchg edx,eax
  4135a6:	push   ecx
  4135a7:	mov    bh,BYTE PTR [ecx+0x43]
  4135aa:	mov    bl,0x34
  4135ac:	aaa    
  4135ad:	jp     0x413532
  4135af:	rcr    DWORD PTR [esi],cl
  4135b1:	mov    eax,ds:0x162d4713
  4135b6:	dec    ebp
  4135b7:	mov    ebp,0x18897d63
  4135bc:	jmp    0xfa63:0x4c5e5be4
  4135c3:	add    DWORD PTR [esi],ecx
  4135c5:	pop    DWORD PTR es:[ecx+0x2d10e983]
  4135cc:	lods   al,BYTE PTR ds:[esi]
  4135cd:	test   eax,0xe4d81c58
  4135d2:	data16 in al,0x29
  4135d5:	mov    fs,WORD PTR [ecx]
  4135d7:	ins    DWORD PTR es:[edi],dx
  4135d8:	add    ch,BYTE PTR [eax+esi*1-0x80]
  4135dc:	jl     0x413617
  4135de:	xchg   ecx,eax
  4135df:	push   edx
  4135e0:	sti    
  4135e1:	xchg   DWORD PTR [esp+eax*8+0x1e],edx
  4135e5:	stc    
  4135e6:	dec    ebp
  4135e7:	jo     0x4135bb
  4135e9:	adc    al,0xbd
  4135eb:	xchg   ebx,eax
  4135ec:	pop    esp
  4135ed:	inc    esi
  4135ee:	or     bh,0x27
  4135f1:	fcomi  st,st(2)
  4135f3:	mov    edx,0x3e631d71
  4135f8:	jae    0x41364c
  4135fa:	push   ds
  4135fb:	push   ebp
  4135fc:	fs iret 
  4135fe:	mov    ecx,0x9146f9e3
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	push   ebp
  413605:	jnp    0x41362b
  413607:	ds (bad) 
  413609:	mov    dl,0xfd
  41360b:	xchg   ecx,eax
  41360c:	mov    al,0x2a
  41360e:	jmp    0x94172bae
  413613:	fst    DWORD PTR [eax+0x36]
  413616:	scas   eax,DWORD PTR es:[edi]
  413617:	jmp    0x7e129dda
  41361c:	dec    ebp
  41361d:	hlt    
  41361e:	lea    edi,[ebp-0x1277d0d3]
  413624:	ins    BYTE PTR es:[edi],dx
  413625:	into   
  413626:	mov    bl,0xdf
  413628:	(bad)  
  41362a:	and    al,0x6b
  41362c:	sbb    DWORD PTR [eax+0x5f],edx
  41362f:	outs   dx,BYTE PTR ds:[esi]
  413630:	jo     0x4135d8
  413632:	xor    DWORD PTR [ebp-0x40113182],esp
  413638:	retf   
  413639:	lds    eax,FWORD PTR [eax]
  41363b:	popf   
  41363c:	jge    0x41368b
  41363e:	jae    0x41366d
  413640:	push   ebp
  413641:	stc    
  413642:	or     dl,dh
  413644:	mov    ebx,0xf1dca8b0
  413649:	lock cmc 
  41364b:	sub    al,0x63
  41364d:	mov    ds:0x183a1281,al
  413652:	xlat   BYTE PTR ds:[ebx]
  413653:	mov    bh,0xb4
  413655:	pusha  
  413656:	out    0xca,al
  413658:	fimul  WORD PTR [edx+0xa]
  41365b:	and    BYTE PTR [esi-0x57c0316],bl
  413661:	leave  
  413662:	or     DWORD PTR [ebx+0x12],0x99188778
  413669:	adc    al,0xc7
  41366b:	mov    BYTE PTR [ecx-0x4],cl
  41366e:	cmp    ch,BYTE PTR [ecx]
  413670:	mov    edi,0x1f7362cb
  413675:	mov    edi,0x7b2c7490
  41367a:	sti    
  41367b:	test   DWORD PTR [eax],eax
  41367d:	pusha  
  41367e:	ins    BYTE PTR es:[edi],dx
  41367f:	mov    ecx,0x8c64f3c1
  413684:	int    0xa0
  413686:	fcmove st,st(3)
  413688:	(bad)  
  413689:	in     eax,dx
  41368a:	push   es
  41368b:	sub    eax,0x85fb196d
  413690:	scas   al,BYTE PTR es:[edi]
  413691:	mov    ah,0x2d
  413693:	xor    al,0x20
  413695:	jmp    0x413648
  413697:	aaa    
  413698:	add    al,BYTE PTR [esi]
  41369a:	add    esi,0x113922a3
  4136a0:	mov    bl,0xfb
  4136a2:	inc    ebx
  4136a3:	jl     0x4136c4
  4136a5:	push   ebx
  4136a6:	cdq    
  4136a7:	lea    ebx,[ebp+0x6d5a3b0d]
  4136ad:	pop    ebx
  4136ae:	mov    ds:0x1f5c7347,eax
  4136b3:	nop
  4136b4:	jns    0x4136bf
  4136b6:	add    al,0xbd
  4136b8:	pop    DWORD PTR [edi+0xc]
  4136bb:	push   0x4158502a
  4136c0:	cmp    edx,DWORD PTR [ebx]
  4136c2:	jecxz  0x413668
  4136c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c5:	push   ds
  4136c6:	jbe    0x41372d
  4136c8:	icebp  
  4136c9:	nop
  4136ca:	imul   edx,DWORD PTR ds:0xc5cb214b,0x86778c95
  4136d4:	inc    ebx
  4136d5:	mov    bl,0xb8
  4136d7:	ret    0x9190
  4136da:	and    al,0x8b
  4136dc:	xchg   DWORD PTR [ebx],ebp
  4136de:	push   ebp
  4136df:	ret    0xd319
  4136e2:	xchg   esi,eax
  4136e3:	out    0x7a,eax
  4136e5:	mov    cl,BYTE PTR [edi+0x67]
  4136e8:	popa   
  4136e9:	dec    esp
  4136ea:	scas   eax,DWORD PTR es:[edi]
  4136eb:	inc    edx
  4136ec:	fbld   TBYTE PTR [ebx]
  4136ee:	ins    DWORD PTR es:[edi],dx
  4136ef:	mov    ah,0x6
  4136f1:	scas   eax,DWORD PTR es:[edi]
  4136f2:	dec    ebp
  4136f3:	jo     0x413696
  4136f5:	sbb    bl,BYTE PTR [eax+0x2815928b]
  4136fb:	lods   al,BYTE PTR ds:[esi]
  4136fc:	ins    DWORD PTR es:[edi],dx
  4136fd:	mov    eax,0x35ed5f7b
  413702:	mov    ch,bl
  413704:	jl     0x413700
  413706:	inc    eax
  413707:	sub    ebp,eax
  413709:	inc    edi
  41370a:	xchg   BYTE PTR [ecx+ebp*8],al
  41370d:	pushf  
  41370e:	dec    ecx
  41370f:	inc    edx
  413710:	lods   al,BYTE PTR ds:[esi]
  413711:	fwait
  413712:	xor    cl,BYTE PTR [edx-0x6620cf19]
  413718:	fimul  WORD PTR [edx]
  41371a:	(bad)  
  41371b:	(bad)  
  41371c:	push   ds
  41371d:	adc    eax,0x7ffc8c05
  413722:	rol    eax,0x39
  413725:	lea    ecx,[ebx]
  413727:	add    eax,DWORD PTR [ecx-0x255af382]
  41372d:	jmp    0x259ddcf4
  413732:	mov    eax,ds:0x4572e8c3
  413737:	push   ecx
  413738:	lods   eax,DWORD PTR ds:[esi]
  413739:	in     eax,dx
  41373a:	mov    ah,0x4e
  41373c:	push   eax
  41373d:	daa    
  41373e:	dec    esi
  41373f:	fmul   DWORD PTR [edx+0x360aa532]
  413745:	mov    ebx,0x493cbec
  41374a:	cmp    bl,BYTE PTR [ebx-0xd]
  41374d:	sbb    BYTE PTR [ebx+ebp*1-0x1e65c368],ch
  413754:	cmp    eax,ecx
  413756:	xor    eax,0xafc3ee03
  41375b:	inc    eax
  41375c:	adc    DWORD PTR [edi+eiz*4],0xf
  413760:	dec    eax
  413761:	adc    eax,esi
  413763:	mov    bh,0xbc
  413765:	mov    edi,DWORD PTR [eax]
  413767:	and    BYTE PTR [ecx],ah
  413769:	pop    ecx
  41376a:	addr16 iret 
  41376c:	(bad)  [edi+0x71ac47c8]
  413772:	imul   ebx,DWORD PTR [eax-0x29],0x1d26c30f
  413779:	mov    dh,0xc5
  41377b:	mov    cl,BYTE PTR [ebx-0x5d]
  41377e:	push   0xddbd80b
  413783:	dec    eax
  413784:	push   ebx
  413785:	mov    eax,ds:0xbd1eb011
  41378a:	add    bh,BYTE PTR [ebp+0x9]
  41378d:	adc    DWORD PTR [edi+esi*4],ecx
  413790:	les    edx,FWORD PTR [esi+esi*4+0x73039b3d]
  413797:	in     al,dx
  413798:	mov    ah,0xfd
  41379a:	ret    0x6b2d
  41379d:	cs xchg ecx,eax
  41379f:	and    ebx,DWORD PTR [eax-0x7ed5ea18]
  4137a5:	call   0x4ebf:0x752868ed
  4137ac:	test   al,0x9
  4137ae:	cli    
  4137af:	jnp    0x41381f
  4137b1:	and    DWORD PTR [eax-0x26],edx
  4137b4:	les    ebp,FWORD PTR [ecx-0x6e58d304]
  4137ba:	push   ds
  4137bb:	xchg   BYTE PTR [edi+0x5cbc27f1],bl
  4137c1:	ficomp WORD PTR [edi+0x5]
  4137c4:	cmp    dh,BYTE PTR [edi]
  4137c6:	sbb    BYTE PTR [ebx+ecx*1+0x1f],cl
  4137ca:	jg     0x41377d
  4137cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137cd:	add    ebp,ecx
  4137cf:	xchg   DWORD PTR [edx-0x16c5c675],esi
  4137d5:	push   ebx
  4137d6:	adc    BYTE PTR [ecx+eiz*2],ch
  4137d9:	fsub   DWORD PTR [ebx]
  4137db:	jo     0x413858
  4137dd:	push   cs
  4137de:	popa   
  4137df:	loop   0x4137ee
  4137e1:	mov    dh,0xcf
  4137e3:	fnstenv [esi-0x73c62236]
  4137e9:	mov    ch,0x18
  4137eb:	sbb    DWORD PTR [esi+0x79eb6a71],0xffffffcc
  4137f2:	mov    al,ds:0x8144ed22
  4137f7:	mov    dl,0x64
  4137f9:	adc    DWORD PTR [eax-0x4671d4fd],esi
  4137ff:	and    bl,BYTE PTR [ecx-0x384e49f6]
  413805:	call   0xc2228691
  41380a:	and    al,0xc1
  41380c:	lods   al,BYTE PTR ds:[esi]
  41380d:	test   ah,bl
  41380f:	stos   DWORD PTR es:[edi],eax
  413810:	add    bh,BYTE PTR [ebx+ebx*8-0x5a3bfa76]
  413817:	dec    ebp
  413818:	fadd   DWORD PTR [edx+0x59]
  41381b:	(bad)  
  41381c:	dec    edi
  41381d:	sbb    eax,0x4197eb58
  413822:	in     eax,dx
  413823:	add    dl,BYTE PTR [edi+0x4f9cafc5]
  413829:	and    bl,BYTE PTR [edx]
  41382b:	int    0x50
  41382d:	test   BYTE PTR [edi+0xe],cl
  413830:	retf   0xf066
  413833:	leave  
  413834:	popf   
  413835:	push   esp
  413836:	sti    
  413837:	js     0x4137df
  413839:	pop    ss
  41383a:	xchg   DWORD PTR [ebp-0x1d],ecx
  41383d:	cmp    ebp,ecx
  41383f:	push   esp
  413840:	xchg   edx,eax
  413841:	mov    edi,DWORD PTR [esi-0x76]
  413844:	ins    BYTE PTR es:[edi],dx
  413845:	dec    ebx
  413846:	lea    esi,[esi+0x55e96e18]
  41384c:	and    BYTE PTR [esi],0x8e
  41384f:	sbb    ebx,DWORD PTR [edi+edx*1+0x37804626]
  413856:	lea    eax,[edx]
  413858:	push   cs
  413859:	dec    ecx
  41385a:	jo     0x4138c1
  41385c:	aas    
  41385d:	rol    bl,cl
  41385f:	inc    eax
  413860:	or     DWORD PTR [ecx],ecx
  413862:	and    eax,0x167a065f
  413867:	aam    0x1c
  413869:	dec    ebp
  41386a:	pop    es
  41386b:	mov    dl,0x52
  41386d:	loop   0x413856
  41386f:	mov    ebx,0xa69576b6
  413874:	out    dx,al
  413875:	dec    esp
  413876:	adc    DWORD PTR [ebx-0x37ef307],edi
  41387c:	add    al,0xe6
  41387e:	jmp    0x413804
  413880:	clc    
  413881:	adc    ebx,esi
  413883:	aaa    
  413884:	inc    ecx
  413885:	iret   
  413886:	jbe    0x413887
  413888:	adc    eax,0xd9c0738f
  41388d:	sti    
  41388e:	pop    es
  41388f:	push   esi
  413890:	jno    0x41384c
  413892:	xchg   ebx,eax
  413893:	sub    al,0xf2
  413895:	hlt    
  413896:	mov    al,0x77
  413898:	out    dx,eax
  413899:	loopne 0x4138c7
  41389b:	dec    esp
  41389c:	xor    DWORD PTR [ecx],eax
  41389e:	int3   
  41389f:	jle    0x4138d1
  4138a1:	dec    edx
  4138a2:	pushf  
  4138a3:	shl    DWORD PTR [edi-0x4c],1
  4138a6:	sub    eax,0x55efbeb
  4138ab:	shl    DWORD PTR [eax+0x467fea3d],0x4f
  4138b2:	lea    esp,[ecx-0x6c]
  4138b5:	(bad)  
  4138b6:	shl    dh,1
  4138b8:	call   FWORD PTR [ebx-0x19]
  4138bb:	scas   eax,DWORD PTR es:[edi]
  4138bc:	and    edx,DWORD PTR [esi-0x2b]
  4138bf:	pushf  
  4138c0:	pusha  
  4138c1:	outs   dx,BYTE PTR ds:[esi]
  4138c2:	sub    al,0x7a
  4138c4:	xchg   ebp,eax
  4138c5:	push   ds
  4138c6:	and    DWORD PTR [ebx],edi
  4138c8:	ffree  st(1)
  4138ca:	fist   WORD PTR ds:0xb9989f8c
  4138d0:	aad    0xcc
  4138d2:	mov    ds,WORD PTR [ebp-0x23fd2c4b]
  4138d8:	and    al,0xd4
  4138da:	adc    edx,DWORD PTR ds:[esi+0x6b69d900]
  4138e1:	mov    ss,WORD PTR [ebp-0x69]
  4138e4:	ficomp WORD PTR [esp+eax*8+0x4addecc1]
  4138eb:	repz cmp esp,DWORD PTR [esi]
  4138ee:	mov    dh,0xb9
  4138f0:	stc    
  4138f1:	jle    0x413906
  4138f3:	(bad)  
  4138f4:	inc    esp
  4138f5:	mov    ebp,0x65e82417
  4138fa:	jo     0x413913
  4138fc:	add    ah,ch
  4138fe:	xchg   esi,esi
  413900:	iret   
  413901:	sub    bh,BYTE PTR [edi-0x1b]
  413904:	push   0x5a
  413906:	lea    ebx,[eax-0x4e]
  413909:	inc    ecx
  41390a:	les    esi,FWORD PTR [ecx+0x17]
  41390d:	cmc    
  41390e:	and    al,0x66
  413910:	pop    es
  413911:	sub    eax,0x3d3a8563
  413916:	sahf   
  413917:	(bad)  
  413918:	mov    edi,0x6611ff38
  41391d:	or     eax,DWORD PTR [ebx]
  41391f:	in     eax,dx
  413920:	mov    dh,0x22
  413922:	add    bl,BYTE PTR [edx+ebx*4]
  413925:	and    BYTE PTR [ecx+0x62],cl
  413928:	sar    BYTE PTR [ebp-0x9e95282],1
  41392e:	sub    eax,0x276c018c
  413933:	dec    ebp
  413934:	adc    eax,0xcf54cb4
  413939:	jl     0x4138c4
  41393b:	sbb    BYTE PTR [ecx],0x68
  41393e:	and    al,0xc6
  413940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413941:	mov    esi,0xb87411bf
  413946:	push   ebp
  413947:	cmp    eax,0xbd224203
  41394c:	(bad)  
  41394d:	sbb    eax,0xf645457d
  413952:	add    esi,eax
  413954:	pop    edi
  413955:	aas    
  413956:	jno    0x413996
  413958:	sbb    BYTE PTR [esi+0xf],dl
  41395b:	mov    cl,0x26
  41395d:	inc    esp
  41395e:	rcl    DWORD PTR [eax-0xa],0x1
  413962:	jge    0x4139e1
  413964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413965:	cmp    BYTE PTR [ebx],0x9f
  413968:	and    eax,0x7416679f
  41396d:	ret    
  41396e:	es push ebx
  413970:	lods   eax,DWORD PTR ds:[esi]
  413971:	mov    esp,0xbe011c29
  413976:	mov    edi,0xf4d24a99
  41397b:	test   DWORD PTR [edi+0x6f63e59b],eax
  413981:	or     DWORD PTR [ecx+0x48],ebx
  413984:	or     eax,0xa1aebf0
  413989:	jmp    0xcc5556bb
  41398e:	jmp    0x1ad7:0xc112ba5d
  413995:	sbb    BYTE PTR [edi-0x6b994844],dl
  41399b:	sbb    BYTE PTR [esi+eax*1+0x3f],ah
  41399f:	not    BYTE PTR [eax+0x4a]
  4139a2:	rol    BYTE PTR [ecx+edi*8],cl
  4139a5:	jnp    0x41399f
  4139a7:	sbb    eax,0x1699b88d
  4139ac:	push   0x1dd0190d
  4139b1:	mov    WORD PTR [ebx+0x32],es
  4139b4:	mov    cl,0xc
  4139b6:	test   dh,dh
  4139b8:	ja     0x4139b2
  4139ba:	push   ebp
  4139bb:	outs   dx,BYTE PTR ds:[esi]
  4139bc:	sbb    al,0xd9
  4139be:	mov    gs,WORD PTR ds:[esi+0x484f6184]
  4139c5:	dec    ecx
  4139c6:	push   eax
  4139c7:	dec    eax
  4139c8:	or     al,0x5e
  4139ca:	add    ah,al
  4139cc:	xchg   esp,eax
  4139cd:	inc    ebx
  4139ce:	in     eax,0x67
  4139d0:	daa    
  4139d1:	adc    DWORD PTR [esi],ecx
  4139d3:	mov    cl,0xa8
  4139d5:	clc    
  4139d6:	push   ds
  4139d7:	bound  eax,QWORD PTR [ecx-0x41bd5948]
  4139dd:	fld    QWORD PTR [edi]
  4139df:	mov    al,0xdc
  4139e1:	in     al,0x70
  4139e3:	ja     0x4139e6
  4139e5:	dec    ebx
  4139e6:	arpl   WORD PTR [eax-0x15726667],cx
  4139ec:	mov    eax,ds:0x619b60c3
  4139f1:	outs   dx,BYTE PTR ds:[esi]
  4139f2:	or     ecx,esp
  4139f4:	(bad)  
  4139f5:	jbe    0x4139b5
  4139f7:	inc    ebp
  4139f8:	outs   dx,BYTE PTR ds:[esi]
  4139f9:	add    al,0x82
  4139fb:	jbe    0x4139a9
  4139fd:	mov    edi,?
  4139ff:	and    bh,BYTE PTR [ebx+0x7e]
  413a02:	daa    
  413a03:	xor    BYTE PTR [eax],bh
  413a05:	call   DWORD PTR [ebp-0xe]
  413a08:	push   ebp
  413a09:	pop    esi
  413a0a:	add    esi,0x43
  413a0d:	out    dx,al
  413a0e:	jecxz  0x413a71
  413a10:	push   0x43
  413a12:	or     BYTE PTR [ebp+0x50f04eec],al
  413a18:	ds jp  0x4139a3
  413a1b:	repz mov al,ds:0x411ec5d2
  413a21:	in     eax,dx
  413a22:	or     DWORD PTR [edi-0x4a],ebp
  413a25:	in     al,0xc4
  413a27:	push   eax
  413a28:	sub    bl,dh
  413a2a:	inc    ebx
  413a2b:	xor    BYTE PTR [eax],bh
  413a2d:	idiv   BYTE PTR [ecx]
  413a2f:	mov    ebp,0x2af48072
  413a34:	push   DWORD PTR [edx]
  413a36:	push   esi
  413a37:	xchg   ebx,eax
  413a38:	push   ebx
  413a39:	jno    0x413aa0
  413a3b:	mov    DWORD PTR [esi],0xc9a4bf50
  413a41:	dec    esi
  413a42:	sbb    DWORD PTR [esi],ecx
  413a44:	mov    dh,0xc0
  413a46:	inc    ebx
  413a47:	mov    dl,0x91
  413a49:	ficomp WORD PTR [ecx-0x1d820691]
  413a4f:	imul   ebx,DWORD PTR [ebx-0x15],0xfa45f0a4
  413a56:	ins    DWORD PTR es:[edi],dx
  413a57:	sbb    ebx,0xd78122c3
  413a5d:	cmp    DWORD PTR [esi],esp
  413a5f:	mov    ecx,0xcaaf855a
  413a64:	xchg   ebx,eax
  413a65:	mov    BYTE PTR ds:0x1492df1a,dh
  413a6b:	mov    edx,0x5250f487
  413a70:	mov    bh,0x78
  413a72:	ins    DWORD PTR es:[edi],dx
  413a73:	cmp    BYTE PTR [edi-0x2d8e2f51],0x71
  413a7a:	push   cs
  413a7b:	fs inc ecx
  413a7d:	add    al,0x5
  413a7f:	mov    esp,0xc2c41a27
  413a84:	cmp    DWORD PTR [eax],0x2a
  413a87:	out    dx,eax
  413a88:	sti    
  413a89:	xchg   ebp,eax
  413a8a:	std    
  413a8b:	fs push ebx
  413a8d:	push   esi
  413a8e:	sti    
  413a8f:	es cli 
  413a91:	cmp    BYTE PTR [esi+0x44],ch
  413a94:	repz jg 0x413ad5
  413a97:	lea    eax,[ebx+0x3120274a]
  413a9d:	cmp    eax,0x388f280c
  413aa2:	in     al,0x4a
  413aa4:	mov    al,0xac
  413aa6:	mov    esi,0x34da45d7
  413aab:	and    BYTE PTR [edx+ecx*4],ch
  413aae:	ror    BYTE PTR [edx-0x52],cl
  413ab1:	mov    dl,0xe5
  413ab3:	mov    eax,ds:0xc71a5f75
  413ab8:	jne    0x413aed
  413aba:	in     eax,0x48
  413abc:	and    al,0xbe
  413abe:	mov    esp,0xc1ddcead
  413ac3:	push   edx
  413ac4:	pop    es
  413ac5:	lock xlat BYTE PTR ds:[ebx]
  413ac7:	test   eax,0xac484c9f
  413acc:	push   esp
  413acd:	out    dx,eax
  413ace:	add    BYTE PTR [esi-0x13],ch
  413ad1:	or     DWORD PTR [eax],ecx
  413ad3:	jne    0x413b0a
  413ad5:	ins    DWORD PTR es:[edi],dx
  413ad6:	inc    eax
  413ad7:	retf   0x3c64
  413ada:	imul   esp,DWORD PTR [ecx+0x4a938028],0x22
  413ae1:	loop   0x413b23
  413ae3:	test   eax,0xa285cc8
  413ae8:	jmp    0xaf8a8c26
  413aed:	jmp    0x5d56f11d
  413af2:	gs push ss
  413af4:	data16 adc bh,BYTE PTR [esi-0x3b367a2c]
  413afb:	adc    al,0xfd
  413afd:	xor    dl,BYTE PTR [edi]
  413aff:	adc    ebp,DWORD PTR [esi+0xa304c3c]
  413b05:	imul   esp,eax,0xca651167
  413b0b:	cld    
  413b0c:	add    BYTE PTR [ebp+0x48],dl
  413b0f:	dec    eax
  413b10:	fild   QWORD PTR [edi]
  413b12:	and    eax,0xda22136e
  413b17:	call   0x159a:0x18966fb8
  413b1e:	imul   esi,esp,0x48
  413b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b22:	std    
  413b23:	(bad)  
  413b24:	dec    edx
  413b25:	push   edx
  413b26:	adc    eax,0xb3174eea
  413b2b:	mov    ch,0x30
  413b2d:	mov    ecx,0x46adbe6a
  413b32:	retf   0x13b5
  413b35:	(bad)  [edi-0x7ee0faab]
  413b3b:	icebp  
  413b3c:	and    edx,esi
  413b3e:	sbb    al,0xe7
  413b40:	pop    esp
  413b41:	or     eax,DWORD PTR ds:0x68c1213b
  413b47:	jo     0x413b44
  413b49:	in     al,0x29
  413b4b:	inc    esp
  413b4c:	push   cs
  413b4d:	cmp    edx,DWORD PTR [eax+0x5813158c]
  413b53:	inc    sp
  413b55:	mov    ds:0x60d4685e,al
  413b5a:	or     cl,dh
  413b5c:	inc    ebx
  413b5d:	neg    DWORD PTR [edx]
  413b5f:	push   es
  413b60:	mov    al,BYTE PTR [esi]
  413b62:	lahf   
  413b63:	stos   DWORD PTR es:[edi],eax
  413b64:	jns    0x413b29
  413b66:	daa    
  413b67:	aam    0xfe
  413b69:	sbb    edi,DWORD PTR [ecx]
  413b6b:	adc    DWORD PTR [edx],esp
  413b6d:	(bad)  
  413b6e:	hlt    
  413b6f:	lds    ebx,FWORD PTR [esi-0x3e49a07a]
  413b75:	sbb    BYTE PTR [ecx-0x1c7a0d3e],dl
  413b7b:	and    DWORD PTR [eax],edx
  413b7d:	test   DWORD PTR [edi],ebp
  413b7f:	mov    bl,0xc3
  413b81:	sub    DWORD PTR [edi+0x5f],ebp
  413b84:	repz mov ds:0x4991c84,eax
  413b8a:	bound  ecx,QWORD PTR [ebx]
  413b8c:	push   ecx
  413b8d:	rol    DWORD PTR [edx-0x4ee61155],1
  413b93:	push   es
  413b94:	pop    ds
  413b95:	cmp    DWORD PTR [edx+0x344ee803],edi
  413b9b:	and    eax,0x5baefb6f
  413ba0:	push   cs
  413ba1:	and    ebx,DWORD PTR [edi-0x7e]
  413ba4:	(bad)
  413ba7:	(bad)  
  413ba8:	add    al,ch
  413baa:	mov    al,ds:0x83e9dc7c
  413baf:	imul   ch
  413bb1:	bound  ecx,QWORD PTR [ebp-0x80]
  413bb4:	adc    DWORD PTR [edx],esi
  413bb6:	sbb    eax,0x37b2cc9d
  413bbb:	add    DWORD PTR [esi],ebp
  413bbd:	repnz scas al,BYTE PTR es:[edi]
  413bbf:	outs   dx,DWORD PTR ds:[esi]
  413bc0:	sub    edx,eax
  413bc2:	add    esp,DWORD PTR ds:0x208942fc
  413bc8:	jle    0x413c17
  413bca:	or     WORD PTR [ebx+0x3a],bp
  413bce:	arpl   si,sp
  413bd0:	mov    al,ds:0xe444cb39
  413bd5:	push   esi
  413bd6:	push   ecx
  413bd7:	imul   ebp,DWORD PTR [edx+ecx*8+0x223c6f0e],0xffffffa4
  413bdf:	cli    
  413be0:	loop   0x413b80
  413be2:	retf   
  413be3:	xor    ah,BYTE PTR [edx]
  413be5:	lahf   
  413be6:	shl    BYTE PTR [edx+0x2819e24c],cl
  413bec:	(bad)  
  413bed:	dec    ebp
  413bee:	jmp    0x413ba6
  413bf0:	sahf   
  413bf1:	(bad)  
  413bf2:	dec    edi
  413bf3:	(bad)  
  413bf4:	cmp    bh,BYTE PTR [ebx-0x61acc801]
  413bfa:	inc    ebp
  413bfb:	add    dl,ah
  413bfd:	sbb    DWORD PTR [eax],edi
  413bff:	push   esp
  413c00:	(bad)  
  413c02:	mov    bl,0x1a
  413c04:	(bad)  
  413c05:	fwait
  413c06:	xchg   DWORD PTR [esi+0x2c],edi
  413c09:	jb     0x413bcf
  413c0b:	and    ah,BYTE PTR [ebp+0x4e]
  413c0e:	sub    DWORD PTR [ecx+0x71a08b65],esi
  413c14:	cli    
  413c15:	test   eax,0xe7c1fb25
  413c1a:	xor    DWORD PTR [ecx-0x3a],edx
  413c1d:	aaa    
  413c1e:	sbb    BYTE PTR [eax+0x593e5f5f],dh
  413c24:	xchg   ebp,eax
  413c25:	mov    ebp,0x49e54835
  413c2a:	jb     0x413c09
  413c2c:	pop    es
  413c2d:	fcomp  DWORD PTR [ebp+0x3211fff4]
  413c33:	retf   0xb40d
  413c36:	xor    al,0x6b
  413c38:	mov    edi,0xb02f109d
  413c3d:	into   
  413c3e:	and    edx,eax
  413c40:	xchg   edi,eax
  413c41:	outs   dx,DWORD PTR ds:[esi]
  413c42:	cwde   
  413c43:	js     0x413c21
  413c45:	add    al,0x1a
  413c47:	jmp    0x413c4b
  413c49:	adc    BYTE PTR [ebp-0x429ea57e],bl
  413c4f:	clc    
  413c50:	imul   eax,DWORD PTR [ebx],0xba226966
  413c56:	and    al,0x49
  413c58:	xor    ecx,ebp
  413c5a:	and    BYTE PTR [esi-0xa],dl
  413c5d:	mov    ds:0x12180203,al
  413c62:	xor    al,0xb8
  413c64:	stc    
  413c65:	mov    BYTE PTR [edx+0x67],0xec
  413c69:	sbb    al,0x1a
  413c6b:	xor    al,0xc3
  413c6d:	aas    
  413c6e:	xchg   BYTE PTR ds:0x8669535a,dl
  413c74:	inc    esi
  413c75:	mov    ebx,0xc0dcc6c7
  413c7a:	mov    dh,0x61
  413c7c:	out    0xca,eax
  413c7e:	aaa    
  413c7f:	or     al,0x4c
  413c81:	mov    ds:0x5fbf0eaa,eax
  413c86:	sbb    BYTE PTR [bx+0x5ecd],al
  413c8b:	pusha  
  413c8c:	es cwde 
  413c8e:	sbb    al,0xfe
  413c91:	aaa    
  413c92:	mov    DWORD PTR [edx-0x70],edi
  413c95:	and    al,0x2f
  413c97:	ficomp WORD PTR [ebp-0x29c9d794]
  413c9d:	mov    cl,0x4a
  413c9f:	xchg   esi,eax
  413ca0:	push   ebx
  413ca1:	daa    
  413ca2:	mov    WORD PTR [ecx],fs
  413ca4:	and    DWORD PTR [ebx],eax
  413ca6:	stc    
  413ca7:	push   ds
  413ca8:	call   0x19e6:0x4beccf9b
  413caf:	test   al,0xa9
  413cb1:	or     DWORD PTR [esi+esi*1+0xa8da87b],eax
  413cb8:	cs pop edi
  413cba:	mov    ch,0x49
  413cbc:	sbb    al,0x11
  413cbe:	cmp    al,0x45
  413cc0:	loope  0x413c55
  413cc2:	punpckhdq mm4,QWORD PTR [ecx]
  413cc5:	adc    edx,DWORD PTR [ebx]
  413cc7:	inc    eax
  413cc8:	les    eax,FWORD PTR [ebp+0x26]
  413ccb:	mov    ebx,0x9eb5750d
  413cd0:	add    DWORD PTR [ebx-0x30d5c32e],0xc1eb7c97
  413cda:	(bad)  
  413cdb:	push   ebx
  413cdc:	mov    gs:0x74049fb5,eax
  413ce2:	bound  esp,QWORD PTR [esi]
  413ce4:	xor    bh,0x61
  413ce7:	push   0xf37f34b
  413cec:	add    eax,0x1c4fef80
  413cf1:	sub    al,0x17
  413cf3:	data16 scas al,BYTE PTR es:[edi]
  413cf5:	into   
  413cf6:	or     ah,BYTE PTR [edi-0x2c]
  413cf9:	dec    esi
  413cfa:	dec    eax
  413cfb:	loopne 0x413d15
  413cfd:	inc    ecx
  413cfe:	sub    ah,0x8b
  413d01:	(bad)  
  413d02:	js     0x413c99
  413d04:	dec    esp
  413d05:	xor    al,0xb8
  413d07:	ss adc al,0x2c
  413d0a:	arpl   WORD PTR [ebp+0x5a764dbd],ax
  413d10:	mov    al,ds:0x48789bea
  413d15:	lea    edi,[esi+eiz*1-0x2b]
  413d19:	gs jmp 0x6e4332b6
  413d1f:	lea    ebp,[edx+0x61]
  413d22:	mov    ?,WORD PTR [eax+0x56]
  413d25:	pop    edx
  413d26:	push   edi
  413d27:	jo     0x413d7f
  413d29:	fsubr  st,st(7)
  413d2b:	or     esi,DWORD PTR [ebp+0x3ba63561]
  413d31:	sahf   
  413d32:	sbb    eax,0x475a803d
  413d37:	inc    esp
  413d38:	xchg   BYTE PTR ds:0x81415ccc,ch
  413d3e:	add    esi,ecx
  413d40:	mov    ds:0xaac8df10,eax
  413d45:	mov    BYTE PTR [eax],bl
  413d47:	sahf   
  413d48:	or     BYTE PTR [edi+0xe5878a7],dl
  413d4e:	pop    esi
  413d4f:	push   ds
  413d50:	xlat   BYTE PTR ds:[ebx]
  413d51:	jle    0x413d99
  413d53:	sbb    bh,BYTE PTR [ebx+0x71]
  413d56:	sbb    bl,dh
  413d58:	jne    0x413db7
  413d5a:	or     cl,bh
  413d5c:	fld    DWORD PTR [ebp+0x7a]
  413d5f:	ja     0x413dac
  413d61:	lods   eax,DWORD PTR ds:[esi]
  413d62:	sub    ecx,0x968c3a62
  413d68:	or     eax,0xf20fd3fd
  413d6d:	neg    eax
  413d6f:	inc    edx
  413d70:	or     dl,dh
  413d72:	sahf   
  413d73:	(bad)  
  413d75:	sub    al,0x86
  413d77:	mov    ebx,0x64dcae4
  413d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d7d:	lahf   
  413d7e:	js     0x413de1
  413d80:	xchg   esp,eax
  413d81:	push   ecx
  413d82:	fcom   DWORD PTR [edi]
  413d84:	not    BYTE PTR [ebp-0x2f]
  413d87:	fsubrp st(3),st
  413d89:	adc    bl,ah
  413d8b:	fmul   QWORD PTR [esi-0x36a4d2f2]
  413d91:	mov    bh,0x22
  413d93:	sbb    bl,ah
  413d95:	das    
  413d96:	and    eax,0x25eb2dbb
  413d9b:	xor    esi,eax
  413d9d:	mov    esp,0x654e30a7
  413da2:	ins    DWORD PTR es:[edi],dx
  413da3:	dec    eax
  413da4:	and    BYTE PTR ds:0xa3b18b76,ah
  413daa:	and    dl,BYTE PTR [ebx+ecx*1]
  413dad:	retf   0xb032
  413db0:	xchg   ebx,eax
  413db1:	xor    DWORD PTR [edx-0x5901db06],eax
  413db7:	enter  0x4b71,0x3d
  413dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dbc:	sbb    eax,0x1acae56d
  413dc1:	add    al,0x50
  413dc3:	jg     0x413d97
  413dc5:	adc    BYTE PTR [edi+0x593dda91],ch
  413dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dcc:	xor    DWORD PTR [esi-0x57],0xffffffc3
  413dd0:	xchg   BYTE PTR [esi-0x39],bh
  413dd3:	ins    DWORD PTR es:[edi],dx
  413dd4:	xchg   ebp,eax
  413dd5:	jmp    0x46a0:0xf1a53631
  413ddc:	ins    DWORD PTR es:[edi],dx
  413ddd:	mov    eax,0xbb702197
  413de2:	dec    esi
  413de3:	cli    
  413de4:	cdq    
  413de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de6:	sub    eax,0xc27865d
  413deb:	mov    ebx,0x356bab57
  413df0:	stos   BYTE PTR es:[edi],al
  413df1:	xchg   edx,eax
  413df2:	test   eax,0x906748f
  413df7:	pusha  
  413df8:	sub    ecx,esp
  413dfa:	stos   BYTE PTR es:[edi],al
  413dfb:	xchg   edx,eax
  413dfc:	(bad)  
  413dfd:	aam    0xed
  413dff:	shl    DWORD PTR [eax+0x32],cl
  413e02:	add    al,BYTE PTR [eax+0x22]
  413e05:	imul   ebx,ecx,0x69
  413e08:	fimul  WORD PTR [edx]
  413e0a:	ja     0x413e19
  413e0c:	lahf   
  413e0d:	inc    esp
  413e0e:	adc    DWORD PTR [ebx+edx*8],0xffffffc4
  413e12:	add    eax,esi
  413e14:	jge    0x413dee
  413e16:	cmc    
  413e17:	add    BYTE PTR [esi-0x6ce90e62],bh
  413e1d:	cmp    ecx,edx
  413e1f:	scas   al,BYTE PTR es:[edi]
  413e20:	fucom  st(5)
  413e22:	mov    cl,0xf4
  413e24:	fnstsw WORD PTR [esi+0x7a5c41fa]
  413e2a:	mov    eax,ds:0x5394f66c
  413e2f:	test   BYTE PTR [eax-0x27],dh
  413e32:	jg     0x413e57
  413e34:	adc    eax,0x41da5f6d
  413e39:	jmp    0x1574:0x1eac65b
  413e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e41:	enter  0x4399,0x88
  413e45:	and    bl,dh
  413e47:	(bad)  
  413e48:	lea    esp,[ecx+0xe1d63e9]
  413e4e:	mov    al,ds:0x69d04c5d
  413e53:	pop    edi
  413e54:	push   edx
  413e55:	cmp    DWORD PTR [edi-0x10],edx
  413e58:	mov    esp,0x9c8dc740
  413e5d:	pop    esp
  413e5e:	dec    edx
  413e5f:	sub    esi,DWORD PTR [eax]
  413e61:	fsub   st(7),st
  413e63:	mov    esp,0xc324cbd5
  413e68:	pop    esp
  413e69:	push   cs
  413e6a:	fdivr  st,st(2)
  413e6c:	mov    al,ds:0xffe5d1b2
  413e71:	xor    eax,0x98340541
  413e76:	pop    esp
  413e77:	call   0x9e646154
  413e7c:	sahf   
  413e7d:	pop    ebp
  413e7e:	xchg   BYTE PTR ds:0xc5055175,cl
  413e84:	sbb    eax,0x2dc8fb4c
  413e89:	mov    al,0x99
  413e8b:	fdivr  QWORD PTR [esi-0x552f1ef3]
  413e91:	fwait
  413e92:	xor    eax,0x7b15a85f
  413e97:	aam    0x84
  413e99:	jbe    0x413eda
  413e9b:	cdq    
  413e9c:	xchg   ebp,eax
  413e9d:	lock jno 0x413e31
  413ea0:	mov    ecx,0xf9d0b7e
  413ea5:	shl    DWORD PTR [ebp-0x52],1
  413ea8:	ja     0x413ebc
  413eaa:	icebp  
  413eab:	xchg   esp,eax
  413eac:	xchg   BYTE PTR [ecx-0x75],dl
  413eaf:	jns    0x413e8f
  413eb1:	stos   DWORD PTR es:[edi],eax
  413eb2:	cwde   
  413eb3:	arpl   WORD PTR [ebp+0x44],cx
  413eb6:	mov    esi,ecx
  413eb8:	sbb    cl,BYTE PTR [eax]
  413eba:	push   edi
  413ebb:	ins    DWORD PTR es:[edi],dx
  413ebc:	jmp    FWORD PTR [ebx]
  413ebe:	jecxz  0x413e7d
  413ec0:	(bad)  [ecx+0x78d4c442]
  413ec6:	pop    ebp
  413ec7:	pop    edi
  413ec8:	repz jmp 0xc7df:0xd28159c5
  413ed0:	call   0x470c:0xbefc529c
  413ed7:	in     eax,dx
  413ed8:	icebp  
  413ed9:	jp     0x413e96
  413edb:	pop    ebx
  413edc:	das    
  413edd:	js     0x413f0a
  413edf:	(bad)  
  413ee0:	(bad)  
  413ee1:	ja     0x413e87
  413ee3:	aaa    
  413ee4:	call   0x75e03999
  413ee9:	aad    0xb7
  413eeb:	jp     0x413ec0
  413eed:	dec    ecx
  413eee:	ror    BYTE PTR [ecx+edi*4],cl
  413ef1:	xchg   edx,eax
  413ef2:	repz mov edx,DWORD PTR [edx]
  413ef5:	test   eax,0xdef025e0
  413efa:	dec    esp
  413efb:	xlat   BYTE PTR ds:[ebx]
  413efc:	jle    0x413f4d
  413efe:	into   
  413eff:	and    al,0x43
  413f01:	xchg   esp,eax
  413f02:	jp     0x413f38
  413f04:	leave  
  413f05:	test   dl,bl
  413f07:	jne    0x413f18
  413f09:	dec    eax
  413f0a:	shr    DWORD PTR ds:0xe617449d,cl
  413f10:	call   0x3374:0x505ca39d
  413f17:	ffreep st(2)
  413f19:	mov    al,0x92
  413f1b:	in     al,dx
  413f1c:	in     eax,dx
  413f1d:	mov    esp,0x28c6a040
  413f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f23:	jmp    0x8f95a99b
  413f28:	xchg   ecx,eax
  413f29:	cmp    eax,esi
  413f2b:	or     DWORD PTR [esi-0x6ac1b26f],edx
  413f31:	push   ebp
  413f32:	xchg   BYTE PTR [ebp-0x406772f1],dh
  413f38:	shr    BYTE PTR [eax-0x23],1
  413f3b:	xchg   dl,cl
  413f3d:	nop
  413f3e:	mov    ch,0xb4
  413f40:	mov    ecx,0x5c36052d
  413f45:	jle    0x413f76
  413f47:	int3   
  413f48:	mov    ebp,0xc442ba99
  413f4d:	div    edx
  413f4f:	push   ss
  413f50:	add    esi,DWORD PTR [edx+0x7ba0dc1d]
  413f56:	ins    DWORD PTR es:[edi],dx
  413f57:	jge    0x413f44
  413f59:	test   bh,ch
  413f5b:	add    eax,DWORD PTR [edi-0x6c1f7b80]
  413f61:	clc    
  413f62:	imul   esi,ebp,0xffffffe3
  413f65:	(bad)  
  413f67:	je     0x413eea
  413f69:	xchg   edx,eax
  413f6a:	mov    ds:0x2d6ab4d5,al
  413f6f:	jno    0x413fbe
  413f71:	push   ebx
  413f72:	push   ecx
  413f73:	call   0x7f15c298
  413f78:	and    BYTE PTR [ebp+0x3f],dh
  413f7b:	cmp    BYTE PTR [edi+0x484d1211],dl
  413f81:	stc    
  413f82:	cld    
  413f83:	push   ecx
  413f84:	inc    ebp
  413f85:	lahf   
  413f86:	inc    esi
  413f87:	cmp    bh,ch
  413f89:	lds    ebp,FWORD PTR [esi]
  413f8b:	add    BYTE PTR [ecx+0x726b089d],bl
  413f91:	xchg   ebx,eax
  413f92:	gs stos BYTE PTR es:[edi],al
  413f94:	or     eax,0x35000691
  413f99:	lahf   
  413f9a:	sbb    esi,edx
  413f9c:	jl     0x413f3c
  413f9e:	jae    0x413f29
  413fa0:	push   0x16
  413fa2:	jne    0x413f24
  413fa4:	repnz pusha 
  413fa6:	dec    ecx
  413fa7:	pop    es
  413fa8:	push   es
  413fa9:	out    0x7c,eax
  413fab:	xchg   esp,eax
  413fac:	mov    ds:0xc246cb40,al
  413fb1:	ins    BYTE PTR es:[edi],dx
  413fb2:	loopne 0x413f8d
  413fb4:	cmc    
  413fb5:	cld    
  413fb6:	in     al,0x9f
  413fb8:	cdq    
  413fb9:	int3   
  413fba:	addr16 std 
  413fbc:	mov    ds:0x4ef016a9,al
  413fc1:	daa    
  413fc2:	test   BYTE PTR ds:[ebp-0x34400506],ah
  413fc9:	adc    BYTE PTR [esi+edx*4+0x6fa1abdd],cl
  413fd0:	sahf   
  413fd1:	shl    BYTE PTR [ecx-0x6],1
  413fd4:	repz xlat BYTE PTR ds:[ebx]
  413fd6:	sub    dh,0xee
  413fd9:	iret   
  413fda:	jmp    0x413fe5
  413fdc:	fisubr WORD PTR [edi+ecx*4]
  413fdf:	(bad)  
  413fe1:	div    BYTE PTR ds:0xe237764b
  413fe7:	xlat   BYTE PTR ds:[ebx]
  413fe8:	dec    esi
  413fe9:	mov    ah,0xf3
  413feb:	popf   
  413fec:	daa    
  413fed:	jmp    0xe908:0x92a79b31
  413ff4:	mov    ds:0x3f7f40ba,eax
  413ff9:	xor    al,0x18
  413ffb:	add    edi,DWORD PTR [ebp-0x21c8fbf5]
  414001:	js     0x413fc1
  414003:	popf   
  414004:	shl    ebx,0xb6
  414007:	xchg   edx,eax
  414008:	fwait
  414009:	sub    cl,al
  41400b:	or     ebp,ebx
  41400d:	out    0xf9,eax
  41400f:	ds mov bh,0x3c
  414012:	retf   
  414013:	in     eax,dx
  414014:	lock push eax
  414016:	pop    esp
  414017:	mov    esp,?
  414019:	mov    ah,0x7a
  41401b:	mov    cl,0x18
  41401d:	inc    eax
  41401e:	outs   dx,DWORD PTR es:[esi]
  414020:	(bad)  
  414021:	daa    
  414022:	mov    ecx,0x9285ed43
  414027:	dec    ebx
  414028:	mov    esi,0x2301a0bb
  41402d:	mov    dl,BYTE PTR [ebx-0x6f]
  414030:	add    dh,cl
  414032:	mov    ebx,0x9bf298b
  414037:	add    bl,ch
  414039:	in     al,dx
  41403a:	xchg   edi,eax
  41403b:	push   0x17
  41403d:	pop    ecx
  41403e:	cld    
  41403f:	stos   BYTE PTR es:[edi],al
  414040:	leave  
  414041:	pop    ss
  414042:	push   0xffffffe8
  414044:	ins    BYTE PTR es:[edi],dx
  414045:	test   edx,ebp
  414047:	jmp    0x650d9dc8
  41404c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404d:	jne    0x41409e
  41404f:	mov    ah,0xf5
  414051:	jb     0x413ff8
  414053:	(bad)  
  414054:	or     eax,0x637d1516
  414059:	pop    ebp
  41405a:	and    bl,BYTE PTR [edi+esi*1]
  41405d:	sbb    esp,DWORD PTR [ebp-0x4354f5b0]
  414063:	in     al,0x59
  414065:	add    DWORD PTR [edi-0x5f1873e6],eax
  41406b:	cmp    BYTE PTR [ebp+0x68],ah
  41406e:	aam    0xe1
  414070:	adc    edi,DWORD PTR [ebp-0x2a3bb684]
  414076:	jmp    0x2e0c:0x23c2ceb3
  41407d:	pop    ebp
  41407e:	jl     0x4140d3
  414080:	xchg   ebp,eax
  414081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414082:	fmul   st(5),st
  414084:	cmp    dh,0xa1
  414087:	inc    ebp
  414088:	inc    edx
  414089:	jae    0x41408b
  41408b:	mov    al,ds:0xe8e1203a
  414090:	mov    ds:0xbf0de2de,eax
  414095:	out    0x27,al
  414097:	cmp    DWORD PTR [ebx-0x61],esp
  41409a:	or     eax,DWORD PTR [edx+0x22e517e]
  4140a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a1:	inc    esi
  4140a2:	mov    esi,0x7e30052
  4140a7:	sbb    BYTE PTR [ecx],cl
  4140a9:	adc    al,0x1f
  4140ab:	xor    DWORD PTR [eax+0x22c33f9e],esi
  4140b1:	xor    ebp,DWORD PTR [esi+eiz*8+0x2e]
  4140b5:	dec    ebx
  4140b6:	dec    ecx
  4140b7:	popf   
  4140b8:	jecxz  0x414048
  4140ba:	hlt    
  4140bb:	inc    edi
  4140bc:	imul   ecx,DWORD PTR [eax],0xa826b5be
  4140c2:	fadd   DWORD PTR [ebx]
  4140c4:	mov    cl,0x15
  4140c6:	push   cs
  4140c7:	cwde   
  4140c8:	out    dx,al
  4140c9:	int3   
  4140ca:	xchg   edx,edi
  4140cc:	sub    ecx,edi
  4140ce:	mov    bl,0xd5
  4140d0:	pop    ds
  4140d1:	icebp  
  4140d2:	pop    eax
  4140d3:	xor    DWORD PTR [ebx+0x46d04f30],esi
  4140d9:	aas    
  4140da:	xchg   ebx,eax
  4140db:	mov    BYTE PTR [esi+0x1a7e5f04],dh
  4140e1:	mov    al,BYTE PTR ds:0x302512cb
  4140e7:	aam    0x59
  4140e9:	xchg   esp,ebp
  4140eb:	pop    edi
  4140ec:	cmp    eax,0xfefdbed2
  4140f1:	dec    edi
  4140f2:	sub    eax,DWORD PTR ds:0x2b06ed24
  4140f8:	xor    BYTE PTR [ecx-0x6d],bl
  4140fb:	xchg   ecx,eax
  4140fc:	mov    ds:0x7938370f,eax
  414101:	test   DWORD PTR [edx-0x3ff8fd3f],edx
  414107:	mov    ds:0xcc416fd,al
  41410c:	int    0x57
  41410e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414110:	sub    DWORD PTR [ebp+0x2005e5ee],ebp
  414116:	adc    al,0x24
  414118:	sahf   
  414119:	pop    esp
  41411a:	mov    dh,0x4
  41411c:	neg    BYTE PTR [ebp-0x33753393]
  414122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414123:	jo     0x414169
  414125:	lods   al,BYTE PTR ds:[esi]
  414126:	xor    BYTE PTR [ebx+0x5682f957],ah
  41412c:	sbb    edx,0x31eab6b1
  414132:	pop    edi
  414133:	jle    0x414142
  414135:	and    DWORD PTR [esi-0x34],eax
  414138:	ret    
  414139:	loope  0x4140ed
  41413b:	aad    0x41
  41413d:	adc    BYTE PTR [ebp+0x679e5ed5],al
  414143:	lea    ebx,[ebx+edi*4+0x1f]
  414147:	mov    WORD PTR [ebp+0x4f],es
  41414a:	ins    BYTE PTR es:[edi],dx
  41414b:	fisttp DWORD PTR [edx+edi*1]
  41414e:	mov    bh,0xe7
  414150:	mov    edi,0xfd04e4e
  414155:	xor    al,al
  414157:	or     edx,eax
  414159:	shr    DWORD PTR [edi-0x4b3a3342],1
  41415f:	dec    eax
  414160:	in     al,0x6a
  414162:	xor    esi,ecx
  414164:	cmp    eax,0x6a931536
  414169:	add    esi,DWORD PTR [ebx]
  41416b:	jo     0x4141d7
  41416d:	in     eax,dx
  41416e:	push   edi
  41416f:	fdivr  st,st(2)
  414171:	outs   dx,BYTE PTR ds:[esi]
  414172:	mov    ebx,0xbdea3b8c
  414177:	ror    edx,1
  414179:	mov    DWORD PTR [eax],eax
  41417b:	stos   DWORD PTR es:[edi],eax
  41417c:	add    dl,cl
  41417e:	xchg   esi,eax
  41417f:	ins    BYTE PTR es:[edi],dx
  414180:	jle    0x414152
  414182:	xor    eax,0x5956e2d1
  414187:	mov    ch,BYTE PTR [esi-0x42ed311b]
  41418d:	fldcw  WORD PTR [ebp-0x70]
  414190:	std    
  414191:	push   esi
  414192:	sub    DWORD PTR [edx],ebx
  414194:	clc    
  414195:	sbb    eax,0x563dcda8
  41419a:	icebp  
  41419b:	or     BYTE PTR [edx+0x79b7191f],dl
  4141a1:	sub    ecx,DWORD PTR [edi-0x4faf8acf]
  4141a7:	shl    DWORD PTR [edx],cl
  4141a9:	cmp    BYTE PTR ds:0xa2a24b8d,ah
  4141af:	xor    BYTE PTR [esi],cl
  4141b1:	(bad)  
  4141b2:	mov    edi,0xfaf9bf5b
  4141b7:	aas    
  4141b8:	or     DWORD PTR ds:0xa8295cbc,edx
  4141be:	lock inc ebp
  4141c0:	dec    eax
  4141c1:	add    eax,0xa18c00de
  4141c6:	xor    esi,DWORD PTR [edi-0x6e37ff82]
  4141cc:	adc    al,0x95
  4141ce:	sub    eax,0xa9f08bd6
  4141d3:	adc    ecx,DWORD PTR [ebx]
  4141d5:	inc    edi
  4141d6:	rcl    DWORD PTR [esi+0xb],1
  4141d9:	xor    eax,0xf35aeba0
  4141de:	push   edx
  4141df:	icebp  
  4141e0:	dec    edi
  4141e1:	dec    ebp
  4141e2:	loope  0x414184
  4141e4:	jl     0x41425e
  4141e6:	inc    esi
  4141e7:	pop    esp
  4141e8:	mov    ch,0x9b
  4141ea:	fwait
  4141eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ec:	scas   eax,DWORD PTR es:[edi]
  4141ed:	test   ah,ah
  4141ef:	mov    dh,BYTE PTR ds:0xd98f28ea
  4141f5:	int    0x57
  4141f7:	adc    BYTE PTR [eax],cl
  4141f9:	xchg   BYTE PTR [edx+eax*8+0x2bf96e49],bh
  414200:	call   0x98f9:0x65c42c48
  414207:	mov    dl,0x65
  414209:	(bad)  
  41420a:	fisttp DWORD PTR [ecx+edx*4-0x66]
  41420e:	sub    BYTE PTR [ebp+0x20],0xeb
  414212:	jg     0x41422e
  414214:	popa   
  414215:	adc    dh,BYTE PTR [esi+0x46c7abfc]
  41421b:	mov    al,ds:0x3aea94ec
  414220:	mov    ss,WORD PTR [esi]
  414222:	adc    dl,BYTE PTR [eax]
  414224:	in     eax,0xba
  414226:	or     BYTE PTR [edi+0x61dcca07],al
  41422c:	inc    edx
  41422d:	adc    al,0x45
  41422f:	mov    bp,WORD PTR [edx]
  414232:	push   es
  414233:	in     eax,dx
  414234:	fsubr  st(0),st
  414236:	ja     0x4142ae
  414238:	idiv   BYTE PTR [edx+0x55a19d55]
  41423e:	xor    dl,BYTE PTR [esp+ebp*2+0x72984a84]
  414245:	cs mov ah,0x6e
  414248:	pop    edi
  414249:	jne    0x414242
  41424b:	imul   ebx,DWORD PTR [ebp+0x4a],0x1568d6da
  414252:	mov    bh,BYTE PTR [eax]
  414254:	pop    ss
  414255:	add    edx,DWORD PTR [ebp+0x22e353d4]
  41425b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41425c:	inc    edi
  41425d:	ror    ah,cl
  41425f:	aad    0x4a
  414261:	sub    esp,DWORD PTR [ecx+0x57b083c7]
  414267:	jo     0x4142c0
  414269:	jecxz  0x4142ac
  41426b:	sbb    BYTE PTR [ecx-0x23],0xe6
  41426f:	loopne 0x41421c
  414271:	sub    DWORD PTR [esi+0x1a],edi
  414274:	push   0x16
  414276:	and    DWORD PTR [eax-0x4d71c048],0xffffffd8
  41427d:	or     DWORD PTR [ebp-0x47ec8b63],esi
  414283:	(bad)  
  414284:	jmp    0x5961a7bf
  414289:	add    eax,0x1eb92704
  41428e:	ins    BYTE PTR es:[edi],dx
  41428f:	mov    al,BYTE PTR [ebx+0x2678b894]
  414295:	mov    DWORD PTR [ebx],ebx
  414297:	ret    0xcb8d
  41429a:	adc    eax,0xa9341740
  41429f:	sahf   
  4142a0:	mov    ecx,0xb66651cc
  4142a5:	shl    DWORD PTR [edi+0x5d6d042d],cl
  4142ab:	jg     0x4142a0
  4142ad:	(bad)  
  4142ae:	arpl   WORD PTR [eax+0x17bfd787],sp
  4142b4:	inc    edx
  4142b5:	int    0xf1
  4142b7:	jne    0x414265
  4142b9:	test   al,0x14
  4142bb:	(bad)  
  4142bc:	mov    esp,0x5854e3ac
  4142c1:	xor    edx,DWORD PTR [ecx-0x6501159c]
  4142c7:	push   0x3b
  4142c9:	mov    edx,0x5f91dfa
  4142ce:	fistp  WORD PTR [ebx-0xa]
  4142d1:	inc    edi
  4142d2:	pushf  
  4142d3:	add    eax,0x8a6c8497
  4142d8:	add    BYTE PTR [esi],al
  4142da:	in     eax,dx
  4142db:	and    edx,DWORD PTR [eax-0x788e532d]
  4142e1:	dec    esp
  4142e2:	xchg   DWORD PTR [eax-0x760d1073],ebp
  4142e8:	mov    dl,0x9f
  4142ea:	test   eax,0x8219381c
  4142ef:	push   0xffffffb8
  4142f1:	lods   al,BYTE PTR ds:[esi]
  4142f2:	pop    ds
  4142f3:	mov    esi,esp
  4142f5:	ret    
  4142f6:	pusha  
  4142f7:	adc    al,0xc3
  4142f9:	pusha  
  4142fa:	in     al,dx
  4142fb:	jle    0x41437c
  4142fd:	pop    edx
  4142fe:	sbb    dl,al
  414300:	sub    dh,BYTE PTR [edx-0x1f]
  414303:	int3   
  414304:	jge    0x414321
  414306:	cli    
  414307:	in     al,0x5b
  414309:	fwait
  41430a:	sub    ebx,DWORD PTR [edx+0x67aa2a9f]
  414310:	popa   
  414311:	lahf   
  414312:	jns    0x414340
  414314:	mov    ds:0x57ef6368,eax
  414319:	bound  edx,QWORD PTR [edi+edx*1-0x2f]
  41431d:	(bad)  
  41431e:	hlt    
  41431f:	xchg   ecx,eax
  414320:	in     eax,dx
  414321:	sbb    ch,BYTE PTR es:[ebx]
  414324:	dec    ebp
  414325:	stos   DWORD PTR es:[edi],eax
  414326:	jae    0x414386
  414328:	xor    al,0x75
  41432a:	cmp    eax,0x8c622ed5
  41432f:	cdq    
  414330:	sbb    eax,0x18725edb
  414335:	pusha  
  414336:	cmp    ah,BYTE PTR [edi+0x4f]
  414339:	add    ebx,DWORD PTR [edi+eax*2+0x7d92aa68]
  414340:	cmp    al,0xca
  414342:	inc    edi
  414343:	retf   0xdbc3
  414346:	sub    BYTE PTR [eax],ch
  414348:	retf   0x4662
  41434b:	mov    DWORD PTR [edi],esp
  41434d:	sahf   
  41434e:	sbb    al,0xd
  414350:	rcr    ebp,cl
  414352:	add    ebx,DWORD PTR [eax+0x1cd5ddaf]
  414358:	test   al,0xbc
  41435a:	push   eax
  41435b:	rol    dl,1
  41435d:	xor    BYTE PTR [edi],al
  41435f:	(bad)  
  414361:	add    eax,0x104f791b
  414366:	sub    DWORD PTR [edi+0x3c076c4c],ebx
  41436c:	imul   ebx,ebp,0xbc23e64a
  414372:	retf   
  414373:	pop    eax
  414374:	sahf   
  414375:	imul   ecx,DWORD PTR [edi],0x56
  414378:	icebp  
  414379:	shr    esp,1
  41437b:	hlt    
  41437c:	xchg   edx,edx
  41437e:	or     al,0x6a
  414380:	mov    cl,0xb5
  414382:	(bad)  
  414383:	mov    bh,0x56
  414385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414386:	ror    BYTE PTR [eax-0x5aa73200],1
  41438c:	push   cs
  41438d:	dec    esp
  41438e:	aam    0x27
  414390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414391:	xchg   ebp,eax
  414392:	adc    al,0xe5
  414394:	push   eax
  414395:	popa   
  414396:	sbb    ecx,eax
  414398:	mov    DWORD PTR [eax],0x82e950a6
  41439e:	fdivr  st,st(1)
  4143a0:	mov    BYTE PTR [eax+eiz*4+0x10],dl
  4143a4:	inc    eax
  4143a5:	loope  0x4143ba
  4143a7:	out    dx,eax
  4143a8:	or     al,0xfd
  4143aa:	pop    ss
  4143ab:	int3   
  4143ac:	sbb    al,0xbf
  4143ae:	loope  0x4143ea
  4143b0:	jecxz  0x4143e6
  4143b2:	jg     0x414383
  4143b4:	scas   eax,DWORD PTR es:[edi]
  4143b5:	std    
  4143b6:	in     al,dx
  4143b7:	mov    ebx,0x6b4593a1
  4143bc:	shl    dl,1
  4143be:	push   ecx
  4143bf:	pop    ebp
  4143c0:	mov    dh,0xc4
  4143c2:	mov    edi,0xc3d71c13
  4143c7:	xchg   esp,eax
  4143c8:	jae    0x4143ba
  4143ca:	add    al,0x86
  4143cc:	and    al,0xaf
  4143ce:	fcomp  DWORD PTR [ecx+0x32725fc9]
  4143d4:	cmp    BYTE PTR [ebp-0x8],al
  4143d7:	loop   0x414416
  4143d9:	sbb    ecx,DWORD PTR [edi]
  4143db:	(bad)  
  4143dd:	addr16 xchg esi,eax
  4143df:	inc    eax
  4143e0:	(bad)  
  4143e2:	or     ch,dl
  4143e4:	outs   dx,BYTE PTR ds:[esi]
  4143e5:	out    dx,al
  4143e6:	dec    ebp
  4143e7:	lods   al,BYTE PTR ds:[esi]
  4143e8:	aas    
  4143e9:	mov    gs,WORD PTR [ebx-0x1897c608]
  4143ef:	mov    es,WORD PTR [ebx-0x1d]
  4143f2:	in     eax,dx
  4143f3:	jmp    0x2fc2:0xc4e5ed23
  4143fa:	daa    
  4143fb:	lods   eax,DWORD PTR ds:[esi]
  4143fc:	aam    0x61
  4143fe:	stos   DWORD PTR es:[edi],eax
  4143ff:	inc    ebx
  414400:	sbb    dh,al
  414402:	cpuid  
  414404:	out    dx,al
  414405:	call   FWORD PTR [edi+eiz*4+0x74645f7a]
  41440c:	mov    ah,0xf0
  41440e:	rcl    DWORD PTR [ebp+0x20],0x43
  414412:	push   ecx
  414413:	or     esi,eax
  414415:	add    al,0x81
  414417:	xchg   ebp,eax
  414418:	test   eax,0xe2d76503
  41441d:	or     ebp,DWORD PTR [ecx+0x14]
  414420:	ret    0x8ece
  414423:	stos   BYTE PTR es:[edi],al
  414424:	sbb    edi,ebp
  414426:	mov    edi,0x1d27c0f2
  41442b:	pop    ss
  41442c:	fstp   TBYTE PTR [ecx+0x46e03ac1]
  414432:	xchg   ebp,eax
  414433:	cmp    DWORD PTR ds:0xa4a5cfc6,ebx
  414439:	mov    dh,BYTE PTR [ecx-0x15042127]
  41443f:	jmp    0x24ca:0xbfbdff89
  414446:	inc    ebp
  414447:	add    eax,0x97f3a57b
  41444c:	cmp    BYTE PTR [esi],al
  41444e:	adc    DWORD PTR [edi+0x509a8ea7],0xffffff99
  414455:	jo     0x4144d3
  414457:	sub    eax,0xca0fa57a
  41445c:	inc    esi
  41445d:	add    eax,0x1e605523
  414462:	imul   ecx,ecx,0x2a
  414465:	xchg   edi,eax
  414466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414467:	dec    edi
  414468:	into   
  414469:	mov    bl,BYTE PTR [edi]
  41446b:	bound  ebp,QWORD PTR [eax+eax*8]
  41446e:	dec    esp
  41446f:	fwait
  414470:	in     eax,dx
  414471:	std    
  414472:	xlat   BYTE PTR ds:[ebx]
  414473:	setns  ah
  414476:	data16 mov dh,0x6a
  414479:	push   ecx
  41447a:	fcmovbe st,st(4)
  41447c:	xchg   ebp,eax
  41447d:	add    eax,0xab649a3b
  414482:	icebp  
  414483:	cmovo  esi,DWORD PTR [eax+0x1f]
  414487:	xor    eax,0x28e53af
  41448c:	das    
  41448d:	nop
  41448e:	fnsave [ebx+0x746859a4]
  414494:	adc    al,0xa5
  414496:	xchg   ebp,eax
  414497:	mov    esp,0xd00a25a3
  41449c:	ins    DWORD PTR es:[edi],dx
  41449d:	or     DWORD PTR [ebp-0x567c5889],ebx
  4144a3:	cwde   
  4144a4:	jg     0x4144c9
  4144a6:	xor    edx,ecx
  4144a8:	mov    ds:0x6d957cd0,al
  4144ad:	pop    edx
  4144ae:	cld    
  4144af:	push   ds
  4144b0:	pushf  
  4144b1:	cld    
  4144b2:	fcom   DWORD PTR [ebp+0x10]
  4144b5:	mov    ebx,0xc43dca13
  4144ba:	push   ebx
  4144bb:	repz xchg edx,eax
  4144bd:	mov    edx,0x3ed13bcf
  4144c2:	add    al,0xdd
  4144c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144c5:	sbb    cl,ah
  4144c7:	call   0x8d56:0x439378bd
  4144ce:	loope  0x414510
  4144d0:	xchg   ebp,eax
  4144d1:	mov    WORD PTR [edx+0x62273dec],gs
  4144d7:	lock rcr ebx,1
  4144da:	shl    DWORD PTR [eax+esi*8+0x6228ac1a],0x70
  4144e2:	push   ss
  4144e3:	or     eax,0x5d3e0d27
  4144e8:	outs   dx,DWORD PTR ds:[esi]
  4144e9:	loop   0x4144e2
  4144eb:	fisubr DWORD PTR [edi-0x3ba8766d]
  4144f1:	aas    
  4144f2:	fcomp  QWORD PTR [eax-0xa45dfcc]
  4144f8:	mov    cl,0xfa
  4144fa:	bnd js 0x414549
  4144fd:	(bad)  [ebx]
  4144ff:	sub    al,0x95
  414501:	test   BYTE PTR [ebp-0x6475d92a],dl
  414507:	jmp    0x746a4d5e
  41450c:	aaa    
  41450d:	das    
  41450e:	jge    0x414514
  414510:	and    al,0x5e
  414512:	push   ecx
  414513:	hlt    
  414514:	push   edx
  414515:	or     edi,ebp
  414517:	and    eax,0x94af9ea4
  41451c:	sub    BYTE PTR [ecx-0x3626206f],0x1b
  414523:	(bad)  
  414524:	(bad)  
  414525:	dec    esp
  414526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414527:	push   ebx
  414528:	ret    0x1139
  41452b:	push   cs
  41452c:	into   
  41452d:	std    
  41452e:	push   cs
  41452f:	xchg   edx,edx
  414531:	dec    ecx
  414532:	shl    DWORD PTR ds:0xba566628,cl
  414538:	int3   
  414539:	add    DWORD PTR [ebx-0x61330e99],esi
  41453f:	outs   dx,DWORD PTR ds:[esi]
  414540:	dec    ecx
  414541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414542:	dec    ebp
  414543:	push   es
  414544:	or     al,0xd2
  414546:	dec    edx
  414547:	xchg   edi,eax
  414548:	mul    DWORD PTR [edi+eiz*4]
  41454b:	pusha  
  41454c:	in     al,dx
  41454d:	clc    
  41454e:	inc    ebp
  41454f:	retf   
  414550:	fwait
  414551:	rol    DWORD PTR [ecx-0x582c2027],1
  414557:	mov    edx,0x90ac6a3e
  41455c:	ficom  WORD PTR [edi+esi*4+0x7e]
  414560:	add    eax,0xb7c01cc1
  414565:	ret    0x9116
  414568:	sbb    DWORD PTR [ecx],ecx
  41456a:	adc    al,0x56
  41456c:	sbb    DWORD PTR [eax+edx*4-0xe],0x4a
  414571:	cli    
  414572:	sub    esp,DWORD PTR [esi+ebp*8-0x4]
  414576:	in     al,dx
  414577:	pop    edi
  414578:	ds and eax,0xf862d735
  41457e:	xor    DWORD PTR [ebx+edi*1-0x41],edi
  414582:	push   0xd
  414584:	jns    0x41452c
  414586:	xor    edx,esp
  414588:	jge    0x414574
  41458a:	sub    BYTE PTR [esi],cl
  41458c:	ficomp WORD PTR [ecx+0x43]
  41458f:	ss sub eax,0x1297ff59
  414595:	(bad)  
  414596:	xchg   ebx,eax
  414597:	aam    0x28
  414599:	(bad)  
  41459a:	je     0x4145cc
  41459c:	sar    ebx,cl
  41459e:	push   esp
  41459f:	add    DWORD PTR [edi-0x473de20f],0x9df76fbf
  4145a9:	es stos DWORD PTR es:[edi],eax
  4145ab:	cmp    BYTE PTR [ecx],ah
  4145ad:	stos   BYTE PTR es:[edi],al
  4145ae:	fcomp  QWORD PTR [edi]
  4145b0:	mov    BYTE PTR [edi],dh
  4145b2:	jecxz  0x414626
  4145b4:	sbb    ecx,edi
  4145b6:	push   0x5682d1a4
  4145bb:	add    eax,0x38641a10
  4145c0:	push   ebp
  4145c1:	or     eax,0x76279e06
  4145c6:	imul   ecx,DWORD PTR [ecx+0x63bdec02],0x70
  4145cd:	lea    esi,[ecx]
  4145cf:	dec    esi
  4145d0:	fsubrp st(1),st
  4145d2:	jb     0x414647
  4145d4:	sub    edx,DWORD PTR [esi+ecx*8-0x1cc1ee4f]
  4145db:	mov    edx,0x2962a428
  4145e0:	ins    DWORD PTR es:[edi],dx
  4145e1:	sbb    eax,0x44781ac1
  4145e6:	jge    0x414630
  4145e8:	call   0x3ebb7c6e
  4145ed:	sub    BYTE PTR [edi+0x231761e5],bl
  4145f3:	(bad)  
  4145f4:	je     0x4145e5
  4145f6:	xchg   esi,eax
  4145f7:	xchg   ecx,eax
  4145f8:	js     0x4145e0
  4145fa:	mov    eax,ds:0x5270b722
  4145ff:	cmp    eax,0xa8f91946
  414604:	jns    0x41465e
  414606:	cld    
  414607:	outs   dx,BYTE PTR ds:[esi]
  414608:	add    al,0x6c
  41460a:	mov    dl,0x5f
  41460c:	fidiv  DWORD PTR [ebx-0xcab08de]
  414612:	mov    eax,0xfe513538
  414617:	hlt    
  414618:	add    al,0xda
  41461a:	xlat   BYTE PTR ds:[ebx]
  41461b:	push   cs
  41461c:	jp     0x4145e5
  41461e:	push   ds
  41461f:	arpl   WORD PTR ds:0xf2351d21,cx
  414625:	xchg   esi,eax
  414626:	fdivr  st,st(4)
  414628:	xlat   BYTE PTR ds:[ebx]
  414629:	jge    0x414660
  41462b:	(bad)  
  41462c:	loopne 0x414664
  41462e:	mov    ds:0xbbe7b71,eax
  414633:	mov    esi,0x904e6f
  414638:	dec    esi
  414639:	mov    dh,0x92
  41463b:	inc    ebx
  41463c:	jns    0x4145d3
  41463e:	fist   WORD PTR ds:0xd1064147
  414644:	sahf   
  414645:	sub    bh,BYTE PTR [edi+0x4a87613c]
  41464b:	fidivr DWORD PTR [eax-0x5a]
  41464e:	mov    eax,cs:0xd2d7f69
  414654:	sbb    DWORD PTR [esi+0x5703adef],ebp
  41465a:	push   edx
  41465b:	jmp    0x414677
  41465d:	cwde   
  41465e:	or     eax,0x87fa37e5
  414663:	jns    0x414628
  414665:	or     BYTE PTR [eax-0x7cc5918b],0xef
  41466c:	mov    edx,0x2ea94373
  414671:	xchg   eax,ecx
  414673:	inc    ebp
  414674:	push   eax
  414675:	inc    edi
  414676:	addr16 or eax,0x29a63327
  41467c:	mov    cl,0x1f
  41467e:	mov    ebx,ecx
  414680:	jl     0x4146c9
  414682:	inc    edx
  414683:	and    cl,bh
  414685:	inc    edi
  414686:	in     eax,dx
  414687:	adc    edx,DWORD PTR [esi]
  414689:	or     esp,edx
  41468b:	push   0x3fe1f976
  414690:	pop    es
  414691:	jecxz  0x414642
  414693:	mov    al,ds:0x78e59b3b
  414698:	dec    eax
  414699:	jo     0x414681
  41469b:	fwait
  41469c:	daa    
  41469d:	out    dx,eax
  41469e:	call   0x9a5b9b69
  4146a3:	int    0xc5
  4146a5:	or     eax,0xa4814d26
  4146aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ab:	jge    0x414642
  4146ad:	xchg   edi,eax
  4146ae:	shr    BYTE PTR [eax-0x5b],0x4
  4146b2:	adc    ebp,DWORD PTR [eax+esi*8-0x7a4a93ea]
  4146b9:	(bad)  
  4146ba:	inc    edx
  4146bb:	mov    al,ds:0x1896a270
  4146c0:	lea    eax,es:[esi-0x55]
  4146c4:	leave  
  4146c5:	jmp    0x965a:0xd24097c4
  4146cc:	jbe    0x4146f6
  4146ce:	retf   0x2212
  4146d1:	(bad)  
  4146d2:	push   esp
  4146d3:	jb     0x414662
  4146d5:	cdq    
  4146d6:	sbb    DWORD PTR [ebx],esp
  4146d8:	push   ebp
  4146d9:	push   edi
  4146da:	outs   dx,DWORD PTR ds:[esi]
  4146db:	sub    al,0xd3
  4146dd:	inc    esp
  4146de:	and    al,bh
  4146e0:	pop    edi
  4146e1:	rcpps  xmm6,xmm1
  4146e4:	std    
  4146e5:	or     eax,0x853e3a62
  4146ea:	int    0x51
  4146ec:	mov    ebx,0xc67a1f59
  4146f1:	pop    eax
  4146f2:	es adc al,0xc6
  4146f5:	jmp    0x7556116a
  4146fa:	ror    DWORD PTR [esi],0x4a
  4146fd:	mov    dh,0xd0
  4146ff:	add    eax,0xc955bdab
  414704:	lods   al,BYTE PTR ds:[esi]
  414705:	ret    
  414706:	pushf  
  414707:	xor    al,0x6f
  414709:	push   ebp
  41470a:	pop    ebp
  41470b:	ins    BYTE PTR es:[edi],dx
  41470c:	ins    BYTE PTR es:[edi],dx
  41470d:	ret    0x83cf
  414710:	mov    BYTE PTR [esi],dh
  414712:	mov    ebx,0x9568dece
  414717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414718:	bound  eax,QWORD PTR [edi+ebx*8+0x2d93ad38]
  41471f:	cmc    
  414720:	add    DWORD PTR [edx],eax
  414722:	test   al,0xf0
  414724:	xor    dh,BYTE PTR [ebp-0x62]
  414727:	loop   0x4147a1
  414729:	mov    ecx,0xdfc6a82a
  41472e:	iret   
  41472f:	mov    bl,0x3
  414731:	mov    esi,fs
  414733:	call   0xb780:0x3b62e4fb
  41473a:	clc    
  41473b:	out    0x56,eax
  41473d:	js     0x414742
  41473f:	fcmovb st,st(7)
  414741:	or     al,0xd4
  414743:	sub    ebp,DWORD PTR [esi+0x57d120a4]
  414749:	jnp    0x41477d
  41474b:	in     eax,0xea
  41474d:	push   ss
  41474e:	add    al,0xa5
  414750:	rcl    DWORD PTR [ebp-0x46],1
  414753:	(bad)  
  414754:	(bad)  
  414756:	pop    ds
  414757:	mov    DWORD PTR [edx],eax
  414759:	push   ds
  41475a:	mov    gs,WORD PTR [ebp+esi*4+0x7c0645d6]
  414761:	inc    ebx
  414762:	add    BYTE PTR [ebx+0x45],dh
  414765:	test   cl,al
  414767:	pop    ecx
  414768:	pop    ebp
  414769:	pop    ecx
  41476a:	jo     0x4147af
  41476c:	hlt    
  41476d:	mov    dl,0x11
  41476f:	cwde   
  414770:	dec    ebp
  414771:	mov    edi,0x3bfd256
  414776:	add    al,0xe1
  414778:	push   es
  414779:	pop    ebx
  41477a:	and    al,0xd7
  41477c:	loop   0x414772
  41477e:	sub    DWORD PTR [edi+ebx*1+0x40],ebp
  414782:	ficom  DWORD PTR [ebp+0x73]
  414785:	inc    ebp
  414786:	cli    
  414787:	sub    al,0x3f
  414789:	add    BYTE PTR [edi],al
  41478b:	xor    eax,0xf84fb6a3
  414790:	mov    WORD PTR [edx+0x75],es
  414793:	xor    dh,bh
  414795:	clc    
  414796:	xor    eax,0x20d7e29d
  41479b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41479c:	imul   edi,esi,0xfffffffa
  41479f:	icebp  
  4147a0:	out    0x97,al
  4147a2:	push   eax
  4147a3:	out    0xe3,al
  4147a5:	push   eax
  4147a6:	pushf  
  4147a7:	cdq    
  4147a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a9:	fadd   QWORD PTR [esi-0xb]
  4147ac:	int    0x2c
  4147ae:	xor    DWORD PTR [eax],esp
  4147b0:	dec    edi
  4147b1:	dec    ecx
  4147b2:	dec    edi
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	pop    ebx
  4147b5:	aas    
  4147b6:	shl    BYTE PTR ds:0x86ce80ed,0xce
  4147bd:	push   ds
  4147be:	or     BYTE PTR [ebx+0x6130e4a8],bh
  4147c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c5:	mov    ebx,0x2519258f
  4147ca:	test   eax,0x6fa27dc7
  4147cf:	nop
  4147d0:	jp     0x41477f
  4147d2:	sbb    esp,ebx
  4147d4:	mov    cl,0x5f
  4147d6:	mov    al,0xee
  4147d8:	idiv   ebx
  4147da:	or     esp,DWORD PTR [eax]
  4147dc:	outs   dx,BYTE PTR ds:[esi]
  4147dd:	push   esp
  4147de:	clc    
  4147df:	jecxz  0x41477e
  4147e1:	in     eax,dx
  4147e2:	retf   0x981
  4147e5:	test   bl,dl
  4147e7:	call   0x871f:0x23e996be
  4147ee:	jno    0x4147d8
  4147f0:	(bad)  
  4147f1:	mov    al,0x41
  4147f3:	or     BYTE PTR [ecx+0x3e],bl
  4147f6:	mov    ecx,0x62f56193
  4147fb:	inc    esi
  4147fc:	inc    edi
  4147fd:	sti    
  4147fe:	push   ds
  4147ff:	ret    
  414800:	sbb    DWORD PTR [edi],edx
  414802:	and    BYTE PTR [ebp+0x41],al
  414805:	fs pop ebx
  414807:	dec    esi
  414808:	jbe    0x414863
  41480a:	int3   
  41480b:	icebp  
  41480c:	call   0x5a9288d3
  414811:	dec    edx
  414812:	mov    bh,0xf9
  414814:	enter  0x4d0d,0x65
  414818:	loope  0x414833
  41481a:	inc    eax
  41481b:	test   al,0x72
  41481d:	in     eax,dx
  41481e:	(bad)  
  41481f:	mov    ebp,0xfcaf32ae
  414824:	out    dx,eax
  414825:	enter  0xe0a0,0xca
  414829:	or     DWORD PTR [edx-0x24],edx
  41482c:	pushf  
  41482d:	push   edx
  41482e:	inc    ebp
  41482f:	fidiv  DWORD PTR [edx]
  414831:	rcr    al,cl
  414833:	aam    0x8f
  414835:	cli    
  414836:	cmp    eax,0xbebdc987
  41483b:	or     al,0xd3
  41483e:	lds    esi,FWORD PTR [ebp-0x33]
  414841:	and    DWORD PTR [ebp-0x7f30d2c8],edx
  414847:	pop    ss
  414848:	xchg   edi,eax
  414849:	dec    esi
  41484a:	mov    BYTE PTR ds:0xbfd39f29,ah
  414850:	mov    ebx,0x99aee047
  414855:	mov    al,0x91
  414857:	inc    ebp
  414858:	dec    edx
  414859:	call   0x351f:0x1bb94d8d
  414860:	mov    esi,0x2fccd4b4
  414865:	mov    al,0x95
  414867:	add    BYTE PTR [eax+0x63],bl
  41486a:	jmp    0x1b63d911
  41486f:	push   edx
  414871:	jbe    0x4148ce
  414873:	jg     0x4147f8
  414875:	in     eax,0xf0
  414877:	sub    al,0x8f
  414879:	pushf  
  41487a:	inc    ebx
  41487b:	mov    ecx,0xf0b4d4a9
  414880:	(bad)  [edx+0x57]
  414883:	mov    cl,0x60
  414885:	push   cs
  414886:	jnp    0x4148bd
  414888:	dec    eax
  414889:	pop    edi
  41488b:	mov    esp,0xd9e62e93
  414890:	cmc    
  414891:	imul   edi,DWORD PTR [esi+0xc62bb11],0x36
  414898:	or     DWORD PTR [ecx+0x678479ca],esp
  41489e:	(bad)  
  41489f:	aam    0x48
  4148a1:	aaa    
  4148a2:	mov    gs,WORD PTR [edx-0x5]
  4148a5:	ins    BYTE PTR es:[edi],dx
  4148a6:	mov    al,0xba
  4148a8:	data16 cmp BYTE PTR [edi+0xa],ah
  4148ac:	sahf   
  4148ad:	xchg   edx,eax
  4148ae:	test   eax,0xebf92b73
  4148b3:	sbb    ecx,DWORD PTR [ebp+0x60]
  4148b6:	sbb    BYTE PTR [edi+0x5876baeb],bh
  4148bc:	inc    edx
  4148bd:	jb     0x41488a
  4148bf:	push   edi
  4148c0:	daa    
  4148c1:	gs jmp 0x35d061e6
  4148c7:	add    esi,edi
  4148c9:	out    0x4c,al
  4148cb:	out    0x23,eax
  4148cd:	xchg   ebp,eax
  4148ce:	lock add al,0x9a
  4148d1:	xlat   BYTE PTR ds:[ebx]
  4148d2:	popf   
  4148d3:	push   ss
  4148d4:	imul   ecx,DWORD PTR [edx-0x3ecdaae7],0x49
  4148db:	vmwrite edi,DWORD PTR [ebx]
  4148de:	imul   esp,ebp,0xffffffc6
  4148e1:	inc    esi
  4148e2:	inc    ebp
  4148e3:	inc    ebx
  4148e4:	(bad)  
  4148e5:	xor    esi,ecx
  4148e7:	add    BYTE PTR [eax],bh
  4148e9:	(bad)  
  4148ea:	aaa    
  4148eb:	out    0x54,eax
  4148ed:	mov    edx,0x60966cc2
  4148f2:	out    dx,eax
  4148f3:	mov    edx,0x892cd08
  4148f8:	fcmovnb st,st(2)
  4148fa:	aam    0x65
  4148fc:	call   FWORD PTR [edi]
  4148fe:	les    ebp,FWORD PTR [ebx+ecx*8-0x50]
  414902:	push   eax
  414903:	int    0xdb
  414905:	push   eax
  414906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414907:	pop    ebx
  414908:	adc    BYTE PTR ds:[ebp-0x78],bh
  41490c:	pusha  
  41490d:	xor    eax,0x7449fd9c
  414912:	lahf   
  414913:	pop    ss
  414914:	and    eax,0xcc2e1600
  414919:	pop    esi
  41491a:	js     0x4148d7
  41491c:	stos   DWORD PTR es:[edi],eax
  41491d:	xchg   ebp,eax
  41491e:	adc    cl,BYTE PTR [edx-0x19]
  414921:	mov    eax,0xe4f931e0
  414926:	hlt    
  414927:	push   ss
  414928:	sbb    DWORD PTR gs:[eax-0x64759593],ebx
  41492f:	enter  0xbe45,0x30
  414933:	lea    edx,[ecx-0x24]
  414936:	outs   dx,DWORD PTR ds:[esi]
  414937:	add    edx,edx
  414939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493a:	ja     0x414920
  41493c:	cmp    al,BYTE PTR [ecx]
  41493e:	out    0x2b,al
  414940:	inc    ebp
  414941:	dec    ecx
  414942:	pop    edx
  414943:	lods   al,BYTE PTR ds:[esi]
  414944:	jp     0x414935
  414946:	mov    ecx,0xd068ea35
  41494b:	popf   
  41494c:	mov    ds,ebx
  41494e:	add    DWORD PTR [edi+0x36011f48],esp
  414954:	and    eax,0xe8c5bf6f
  414959:	mov    cl,0xf6
  41495b:	out    0xe5,eax
  41495d:	jmp    0xc8fddee2
  414962:	sbb    eax,0x617787f3
  414967:	cli    
  414968:	js     0x4149d2
  41496a:	nop
  41496b:	test   al,0x69
  41496d:	into   
  41496e:	out    0xf2,al
  414970:	cli    
  414971:	or     dl,BYTE PTR [ebx]
  414973:	xor    bl,BYTE PTR [esi-0x23]
  414976:	adc    al,0xf6
  414978:	mov    BYTE PTR [ecx+0x2bb400ee],cl
  41497e:	int    0xd6
  414980:	out    0x37,al
  414982:	xor    BYTE PTR [ebx+eax*1+0x13a8be72],ch
  414989:	rcl    BYTE PTR [ebp+0x2b7a2074],1
  41498f:	mov    eax,DWORD PTR [eax+eiz*2-0x2e5d81db]
  414996:	loop   0x414a0b
  414998:	ins    BYTE PTR es:[edi],dx
  414999:	jnp    0x414953
  41499b:	loope  0x414947
  41499d:	(bad)  
  41499e:	popf   
  41499f:	(bad)  
  4149a0:	fnstenv [ecx-0x51]
  4149a3:	(bad)  
  4149a4:	cwde   
  4149a5:	add    BYTE PTR [ecx+0x63b04209],dh
  4149ab:	ins    DWORD PTR es:[edi],dx
  4149ac:	push   0x75
  4149ae:	(bad)  
  4149af:	(bad)  
  4149b0:	mov    ecx,0x2c8373ef
  4149b5:	pop    edi
  4149b6:	addr16 dec esp
  4149b8:	inc    eax
  4149b9:	sbb    DWORD PTR [ebp-0xa],esp
  4149bc:	sub    al,0xb9
  4149be:	and    al,0xa5
  4149c0:	mov    edi,0x23f86cb8
  4149c5:	push   0xffffffa7
  4149c7:	ret    0xc1db
  4149ca:	dec    eax
  4149cb:	mov    DWORD PTR [eax+0x76],eax
  4149ce:	or     bl,BYTE PTR [ecx+ecx*4-0x56]
  4149d2:	xor    bl,BYTE PTR [esi]
  4149d4:	mov    esp,0x62bbb18d
  4149d9:	sub    al,0xd9
  4149db:	ret    
  4149dc:	gs cld 
  4149de:	or     dl,0x90
  4149e1:	fs ret 
  4149e3:	jl     0x414a26
  4149e5:	and    DWORD PTR [edi-0x24],eax
  4149e8:	cmp    eax,0xbbd4bc5c
  4149ed:	and    DWORD PTR [eax],ebp
  4149ef:	inc    ecx
  4149f0:	test   eax,0xee051f87
  4149f5:	ror    DWORD PTR [edx-0x47d9b973],cl
  4149fb:	sub    dh,al
  4149fd:	(bad)  
  4149fe:	jmp    0xa940:0x974ca7be
  414a05:	sub    BYTE PTR ds:0x61a1d025,cl
  414a0b:	out    dx,al
  414a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0d:	call   DWORD PTR [edi-0x1ac372f5]
  414a13:	dec    esp
  414a14:	sbb    al,0xc7
  414a16:	adc    edi,DWORD PTR [eax+0x228bea67]
  414a1c:	hlt    
  414a1d:	ret    0x2930
  414a20:	fmul   DWORD PTR [ecx+esi*4-0x51aa10a5]
  414a27:	jne    0x414a7a
  414a29:	in     al,0x43
  414a2b:	xor    BYTE PTR [edx+0xd],cl
  414a2e:	nop
  414a2f:	fisttp DWORD PTR [edi+edx*4]
  414a32:	pop    ebp
  414a33:	fwait
  414a34:	pop    ebx
  414a35:	pop    ds
  414a36:	out    0x8c,al
  414a38:	je     0x414a3b
  414a3a:	scas   al,BYTE PTR es:[edi]
  414a3b:	jne    0x4149ec
  414a3d:	sub    al,cl
  414a3f:	xor    esp,0xffffffa1
  414a42:	stos   DWORD PTR es:[edi],eax
  414a43:	mov    eax,DWORD PTR [edx-0x80]
  414a46:	aad    0x1f
  414a48:	pop    eax
  414a49:	fiadd  WORD PTR [ebx-0x14424785]
  414a4f:	add    dl,al
  414a51:	hlt    
  414a52:	jp     0x414a37
  414a54:	dec    edx
  414a55:	or     eax,0x427f8748
  414a5a:	das    
  414a5b:	cmc    
  414a5c:	or     eax,DWORD PTR [edx]
  414a5e:	xchg   DWORD PTR [esi-0x7896bf5a],ebp
  414a64:	and    BYTE PTR [edx-0x22],al
  414a67:	aad    0xa3
  414a69:	iret   
  414a6a:	and    eax,0x27d3abf7
  414a6f:	adc    edx,DWORD PTR [ecx-0xb]
  414a72:	out    dx,al
  414a73:	int    0x32
  414a75:	mov    cl,0xcd
  414a77:	(bad)  
  414a78:	shr    BYTE PTR [ebx-0x6f],1
  414a7b:	or     BYTE PTR [edi-0x73],dl
  414a7e:	aaa    
  414a7f:	ja     0x414a8a
  414a81:	xor    eax,0x102f9f0
  414a86:	sbb    al,BYTE PTR [ebx]
  414a88:	enter  0xd4df,0xae
  414a8c:	out    0x3e,eax
  414a8e:	push   ebx
  414a8f:	test   eax,0x9a9a475f
  414a94:	pop    ebx
  414a95:	ret    
  414a96:	and    DWORD PTR [eax-0x9],ebx
  414a99:	jecxz  0x414a90
  414a9b:	xor    eax,0x67b90ef
  414aa0:	popf   
  414aa1:	add    ah,bl
  414aa3:	adc    DWORD PTR [ecx+0x5a],0x7dbc7bdc
  414aaa:	pop    ss
  414aab:	dec    eax
  414aac:	aaa    
  414aad:	jecxz  0x414ae9
  414aaf:	mov    dh,0x13
  414ab1:	mov    eax,0x15d4d771
  414ab6:	fmul   QWORD PTR ds:0xddc2fb6f
  414abc:	out    0xb2,eax
  414abe:	arpl   WORD PTR [ebp-0x56],si
  414ac1:	mov    DWORD PTR [esi-0x76],ebx
  414ac4:	pop    ebx
  414ac5:	bound  edi,QWORD PTR [eax-0x5d]
  414ac8:	fidiv  WORD PTR [ebp-0xe]
  414acb:	lods   eax,DWORD PTR ds:[esi]
  414acc:	pop    edi
  414acd:	sbb    ecx,DWORD PTR [ecx+edi*8-0x46]
  414ad1:	inc    ebp
  414ad2:	std    
  414ad3:	in     al,dx
  414ad4:	mov    cl,cl
  414ad6:	(bad)  
  414ad7:	in     al,dx
  414ad8:	jbe    0x414a7a
  414ada:	bound  edx,QWORD PTR [esp+eax*2+0x7c930281]
  414ae1:	xchg   esi,eax
  414ae2:	sbb    BYTE PTR [ebp-0x14efea91],0xf0
  414ae9:	(bad)  
  414aea:	cdq    
  414aeb:	mov    eax,0xa6be4f14
  414af0:	add    BYTE PTR [ebx],0xb8
  414af3:	mov    esp,0xc8055c6d
  414af8:	sbb    BYTE PTR [eax],cl
  414afa:	mov    esi,0x4f45130e
  414aff:	es cli 
  414b01:	loop   0x414b5a
  414b03:	daa    
  414b04:	xor    ch,cl
  414b06:	mov    bh,0x7c
  414b08:	add    al,BYTE PTR [esi+eiz*1]
  414b0b:	mov    cl,0x89
  414b0d:	dec    esi
  414b0e:	adc    DWORD PTR [edx],eax
  414b10:	mov    bh,dl
  414b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b13:	into   
  414b14:	sbb    DWORD PTR [edi-0x36d318ef],edi
  414b1a:	pop    edx
  414b1b:	stc    
  414b1c:	loopne 0x414b07
  414b1e:	stos   BYTE PTR es:[edi],al
  414b1f:	leave  
  414b20:	sub    dh,BYTE PTR [ebx+eiz*2]
  414b23:	aam    0x39
  414b25:	retf   
  414b26:	mov    eax,0x3723a9d7
  414b2b:	inc    eax
  414b2c:	or     BYTE PTR [edx],ch
  414b2e:	lds    esp,FWORD PTR cs:[edi-0x6d]
  414b32:	sbb    esp,ebp
  414b34:	mov    eax,0x3c421170
  414b39:	enter  0x2557,0x70
  414b3d:	cmc    
  414b3e:	stc    
  414b3f:	mov    ds:0xefdb2b56,eax
  414b44:	mov    ds:0xa94179ac,al
  414b49:	inc    eax
  414b4a:	add    esp,DWORD PTR gs:[ebx]
  414b4d:	or     BYTE PTR ds:0x8d0709ae,ch
  414b53:	dec    ebx
  414b54:	sbb    ebp,eax
  414b56:	push   eax
  414b57:	loopne 0x414b15
  414b59:	push   edx
  414b5a:	jno    0x414b91
  414b5c:	inc    esi
  414b5d:	push   ecx
  414b5e:	sbb    eax,0xc43d635d
  414b63:	xchg   ebx,eax
  414b64:	or     BYTE PTR [ebx+0x2c548b08],0xbb
  414b6b:	(bad)  
  414b6c:	js     0x414afc
  414b6e:	lods   al,BYTE PTR ds:[esi]
  414b6f:	jmp    0x60101c72
  414b74:	and    DWORD PTR [ebx-0x22c24e28],0x48b24ae5
  414b7e:	frstor [ecx+0x45b80dc]
  414b84:	inc    ecx
  414b85:	dec    esp
  414b86:	xchg   esi,eax
  414b87:	daa    
  414b88:	mov    ecx,esi
  414b8a:	sbb    edi,DWORD PTR [edx-0x78]
  414b8d:	xor    ah,BYTE PTR [esi-0x9041d65]
  414b93:	xor    al,0xa0
  414b95:	add    eax,0xaf7f3b12
  414b9a:	repz test edx,0x444bd337
  414ba1:	mov    dh,0xbf
  414ba3:	sub    eax,0x84ad137d
  414ba8:	icebp  
  414ba9:	adc    al,0x31
  414bab:	pop    ebx
  414bac:	data16 es int3 
  414baf:	stos   DWORD PTR es:[edi],eax
  414bb0:	stos   DWORD PTR es:[edi],eax
  414bb1:	cmp    al,0x32
  414bb3:	mov    bh,0xde
  414bb5:	jnp    0x414b71
  414bb7:	xor    al,0xd2
  414bb9:	aad    0xb
  414bbb:	jno    0x414bb4
  414bbd:	adc    edi,DWORD PTR [esi+0x6c42f95e]
  414bc3:	xchg   ebx,eax
  414bc4:	mov    bl,0x8c
  414bc6:	mov    cs,WORD PTR [edx-0x7e]
  414bc9:	shl    BYTE PTR [esi+0x2359fe32],1
  414bcf:	dec    esi
  414bd0:	rcl    DWORD PTR [ecx+0x71],cl
  414bd3:	mov    DWORD PTR [ebx-0x25],0x30c9e38d
  414bda:	xor    esi,ecx
  414bdc:	jne    0x414c16
  414bde:	int    0x26
  414be0:	xor    ah,0xb9
  414be3:	jmp    0x8ebed994
  414be8:	inc    eax
  414be9:	mov    al,0x93
  414beb:	or     bl,BYTE PTR [ecx-0x6a]
  414bee:	add    BYTE PTR [edi],0xb8
  414bf1:	pop    eax
  414bf2:	in     al,0xc0
  414bf4:	sub    eax,0xae789b92
  414bf9:	arpl   WORD PTR [ebx],sp
  414bfb:	mov    eax,0xb393923f
  414c00:	mov    bl,0x1a
  414c02:	xchg   edi,eax
  414c03:	lods   eax,DWORD PTR ds:[esi]
  414c04:	jo     0x414bb6
  414c06:	xor    bh,BYTE PTR [eax-0x69]
  414c09:	xor    al,0x5e
  414c0b:	pop    esi
  414c0c:	icebp  
  414c0d:	push   esi
  414c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c0f:	in     eax,dx
  414c10:	mov    BYTE PTR [esi-0x5487fda0],dl
  414c16:	or     al,0x2
  414c18:	pop    esi
  414c19:	mov    cl,0xd2
  414c1b:	mov    ch,0x6b
  414c1d:	mov    al,0x1c
  414c1f:	(bad)  
  414c20:	sub    eax,0xa6d494c7
  414c25:	(bad)  
  414c26:	mov    cl,0x97
  414c28:	adc    ch,ah
  414c2a:	push   es
  414c2b:	out    0xc9,eax
  414c2d:	fmul   DWORD PTR [edi]
  414c2f:	call   0x66b57c74
  414c34:	ds jno 0x414c5d
  414c37:	mov    eax,ds:0x80e80c3e
  414c3c:	xor    BYTE PTR [eax+0x35ded085],dh
  414c42:	and    DWORD PTR [edx+esi*2-0x6c510528],ebx
  414c49:	sub    eax,0x5e6a883a
  414c4e:	jecxz  0x414c74
  414c50:	push   ebx
  414c51:	sbb    BYTE PTR [ecx],ah
  414c53:	shr    dh,0x73
  414c56:	pop    ebx
  414c57:	pushf  
  414c58:	jle    0x414c50
  414c5a:	sbb    al,0xd8
  414c5c:	dec    edi
  414c5d:	js     0x414cc2
  414c5f:	cmc    
  414c60:	fnsave [ebx-0x5e2318b5]
  414c66:	in     eax,0x18
  414c68:	cli    
  414c69:	add    dl,BYTE PTR [ebp-0x743d4413]
  414c6f:	jo     0x414cc1
  414c71:	inc    eax
  414c72:	das    
  414c73:	clc    
  414c74:	dec    esi
  414c75:	mov    edi,0xe5498b1b
  414c7a:	xor    BYTE PTR [esi],bl
  414c7c:	out    dx,eax
  414c7d:	outs   dx,BYTE PTR ds:[esi]
  414c7e:	inc    ebp
  414c7f:	lods   al,BYTE PTR ds:[esi]
  414c80:	xor    edx,DWORD PTR [esi]
  414c82:	loopne 0x414ccd
  414c84:	mov    dl,0xd6
  414c86:	out    0xb0,al
  414c88:	jmp    0x4c5f:0x99b4ff60
  414c8f:	ret    
  414c90:	jmp    0x7ba1:0x1895b09d
  414c97:	arpl   WORD PTR [eax-0x1f],cx
  414c9a:	mov    bh,0x6f
  414c9c:	mov    WORD PTR [edi-0x7c],?
  414c9f:	adc    cl,dh
  414ca1:	adc    BYTE PTR [eax-0x6e4460bd],cl
  414ca7:	iret   
  414ca8:	mov    DWORD PTR [ecx-0x4d1a1cbd],esi
  414cae:	add    eax,0x90719e6c
  414cb3:	lds    ecx,FWORD PTR [edx]
  414cb5:	jecxz  0x414cc0
  414cb7:	jnp    0x414c99
  414cb9:	mov    BYTE PTR [edi-0x442e2fb3],cl
  414cbf:	dec    ecx
  414cc0:	sub    DWORD PTR [ebx+0x224f566f],eax
  414cc6:	xlat   BYTE PTR ds:[ebx]
  414cc7:	jg     0x414c8c
  414cc9:	inc    ebx
  414cca:	xor    edi,DWORD PTR [edx-0x2f12c582]
  414cd0:	hlt    
  414cd1:	xor    eax,0x520bf391
  414cd6:	sub    al,0x5a
  414cd8:	lea    ecx,[edx]
  414cda:	or     edx,DWORD PTR [ebx+0x75aef84f]
  414ce0:	das    
  414ce1:	xor    al,0xed
  414ce3:	adc    bl,ch
  414ce5:	fwait
  414ce6:	mov    edi,0x8d055990
  414ceb:	push   edx
  414cec:	pop    edx
  414ced:	dec    eax
  414cee:	nop
  414cef:	dec    ebp
  414cf0:	ret    0x6ade
  414cf3:	or     dh,BYTE PTR [ecx+0x2207d9fb]
  414cf9:	cmp    DWORD PTR [eax],ebx
  414cfb:	mov    ebp,0xb0615569
  414d00:	pop    ecx
  414d01:	sbb    BYTE PTR [edx+0x45],cl
  414d04:	xor    DWORD PTR [edx+0x5822a499],0x23c5e690
  414d0e:	loop   0x414ca5
  414d10:	xor    DWORD PTR [eax+0x76],eax
  414d13:	xchg   ebp,eax
  414d14:	js     0x414d1a
  414d16:	mov    edi,0x1ae6530
  414d1b:	jp     0x414ca9
  414d1d:	repz (bad) 
  414d1f:	(bad)  
  414d20:	addr16 adc bl,dh
  414d23:	arpl   WORD PTR gs:[edx+0x75260607],cx
  414d2a:	aas    
  414d2b:	push   eax
  414d2c:	scas   al,BYTE PTR es:[edi]
  414d2d:	inc    ebp
  414d2e:	pop    ss
  414d2f:	xchg   edi,eax
  414d30:	and    ch,BYTE PTR [edi+edx*4+0x57d81574]
  414d37:	cld    
  414d38:	cmp    ebp,DWORD PTR [esi+0x5a]
  414d3b:	out    dx,al
  414d3c:	aas    
  414d3d:	jmp    0x414d1e
  414d3f:	push   ds
  414d40:	ss sahf 
  414d42:	mov    bh,0x8a
  414d44:	out    0xf3,eax
  414d46:	dec    eax
  414d47:	enter  0xf991,0xd6
  414d4b:	push   0x6eda1dd2
  414d50:	add    BYTE PTR [ecx],0xf1
  414d53:	inc    ecx
  414d54:	add    edx,0xffffff86
  414d57:	test   BYTE PTR [esi],ch
  414d59:	cdq    
  414d5a:	mov    edx,0x5e727e66
  414d5f:	jle    0x414d33
  414d61:	ss push es
  414d63:	push   edx
  414d64:	push   ecx
  414d65:	sbb    al,0xff
  414d67:	sbb    al,0x23
  414d69:	scas   eax,DWORD PTR es:[edi]
  414d6a:	xchg   ebx,eax
  414d6b:	cmc    
  414d6c:	xchg   ebp,eax
  414d6d:	add    DWORD PTR [ebx+eiz*1-0x79],ecx
  414d71:	jmp    0xf366:0x91f2f41a
  414d78:	outs   dx,BYTE PTR ds:[esi]
  414d79:	add    edx,DWORD PTR [esi+0x20]
  414d7c:	push   0x5bebe7b3
  414d81:	iret   
  414d82:	xchg   esp,eax
  414d83:	sbb    BYTE PTR [esi+0x3ce6f0b0],cl
  414d89:	mov    al,0x78
  414d8b:	push   esi
  414d8c:	jnp    0x414d72
  414d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8f:	mul    BYTE PTR [ebp-0x54]
  414d92:	mov    ch,0x2
  414d94:	dec    ebx
  414d95:	in     eax,dx
  414d96:	jnp    0x414e04
  414d98:	and    dl,BYTE PTR [ecx+0x4b440480]
  414d9e:	imul   ebx,DWORD PTR [edx+0x21],0x27
  414da2:	pop    esp
  414da3:	cld    
  414da4:	dec    ebp
  414da5:	cwde   
  414da6:	xchg   BYTE PTR [eax+0x737e735d],cl
  414dac:	rol    BYTE PTR [eax+0x15],0x7b
  414db0:	cmc    
  414db1:	sub    DWORD PTR [edx+0x63],esp
  414db4:	call   0x25b16795
  414db9:	inc    eax
  414dba:	cwde   
  414dbb:	add    DWORD PTR [eax+edi*1+0x35ad0a0e],esp
  414dc2:	or     DWORD PTR [ecx-0x65],esi
  414dc5:	xchg   DWORD PTR [esi+0x45],ebp
  414dc8:	stos   DWORD PTR es:[edi],eax
  414dc9:	ja     0x414d4f
  414dcb:	inc    ebp
  414dcc:	xchg   ebp,eax
  414dcd:	rcl    al,0x3e
  414dd0:	cs push esp
  414dd2:	add    eax,0xac92c750
  414dd7:	dec    ebx
  414dd8:	shl    al,cl
  414dda:	fist   WORD PTR [edx+0x397e82d0]
  414de0:	jmp    0x9f62:0xc2037e9d
  414de7:	cmp    al,0x42
  414de9:	(bad)  
  414dea:	stos   DWORD PTR es:[edi],eax
  414deb:	mov    ch,0x7b
  414ded:	pop    es
  414dee:	in     eax,dx
  414def:	inc    edi
  414df0:	jecxz  0x414e6e
  414df2:	add    edi,DWORD PTR [ebp+0x42873bc6]
  414df8:	dec    ecx
  414df9:	inc    ecx
  414dfa:	nop
  414dfb:	pop    eax
  414dfc:	lds    esp,FWORD PTR [edx+0x6]
  414dff:	xchg   esp,eax
  414e00:	jge    0x414e76
  414e02:	out    dx,eax
  414e03:	ret    0x1712
  414e06:	adc    edx,DWORD PTR [edx+0x2ec34d68]
  414e0c:	inc    esi
  414e0d:	push   0x76970c96
  414e12:	fdivr  DWORD PTR [eax-0x19]
  414e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e17:	cmp    BYTE PTR [esi-0x1f33cfcf],0x53
  414e1e:	mov    ch,0x20
  414e20:	fcmovu st,st(1)
  414e22:	sti    
  414e23:	shl    BYTE PTR [ecx],cl
  414e25:	push   cs
  414e26:	fwait
  414e27:	or     edx,DWORD PTR [ebx+eax*4+0x40]
  414e2b:	stos   DWORD PTR es:[edi],eax
  414e2c:	sbb    DWORD PTR [esi],ebx
  414e2e:	into   
  414e2f:	push   DWORD PTR [edi-0x4b]
  414e32:	adc    eax,0x109e6968
  414e38:	and    al,dl
  414e3a:	adc    eax,0xf9378a0b
  414e3f:	jecxz  0x414eab
  414e41:	call   0xd54f:0x656a2c35
  414e48:	stos   BYTE PTR es:[edi],al
  414e49:	or     al,0x79
  414e4b:	in     al,dx
  414e4c:	daa    
  414e4d:	sbb    DWORD PTR [edx+0x5e4ae204],eax
  414e53:	mov    DWORD PTR [edi],ebp
  414e55:	test   DWORD PTR [edx+0x5de2a443],ebx
  414e5b:	push   ds
  414e5c:	mov    esi,DWORD PTR [ebx+0x12913668]
  414e62:	outs   dx,BYTE PTR ds:[esi]
  414e63:	out    0x92,eax
  414e65:	xor    al,0x95
  414e67:	sti    
  414e68:	mov    ds:0x1105e41,eax
  414e6d:	push   0xf3ca59a8
  414e72:	inc    eax
  414e73:	jge    0x414e19
  414e75:	stos   DWORD PTR es:[edi],eax
  414e76:	push   ds
  414e77:	xor    DWORD PTR [ebx],ebp
  414e79:	xchg   BYTE PTR [ebx+0x6],al
  414e7c:	inc    ebx
  414e7d:	add    eax,DWORD PTR [edi]
  414e7f:	sub    al,0x8
  414e81:	mov    al,0x6e
  414e83:	jnp    0x414e46
  414e85:	leave  
  414e86:	mov    ch,0x5d
  414e88:	repnz or al,0xa8
  414e8b:	iret   
  414e8c:	nop
  414e8d:	sar    BYTE PTR [eax-0x4ffb33ac],0xa0
  414e94:	xchg   ebp,eax
  414e95:	add    al,0xc4
  414e97:	dec    esi
  414e98:	push   0x3f
  414e9a:	xor    eax,0x2bd8f703
  414e9f:	dec    edx
  414ea0:	dec    eax
  414ea1:	xchg   DWORD PTR [ebx+0x2c846ff6],esp
  414ea7:	mov    eax,ds:0x535ce973
  414eac:	and    al,0xd4
  414eae:	sub    esp,esi
  414eb0:	pop    ebx
  414eb1:	ins    DWORD PTR es:[edi],dx
  414eb2:	mov    al,ds:0xdc7d7a1c
  414eb7:	aaa    
  414eb8:	aas    
  414eb9:	out    0xc4,al
  414ebb:	and    eax,0x9c09fd28
  414ec0:	push   esp
  414ec1:	dec    ebx
  414ec2:	jge    0x414ee6
  414ec4:	push   edi
  414ec5:	int    0x19
  414ec7:	icebp  
  414ec8:	sbb    edx,DWORD PTR [ebp+edx*1+0xd]
  414ecc:	jmp    0xff322402
  414ed1:	inc    esp
  414ed2:	lock or bl,BYTE PTR [edx]
  414ed5:	int3   
  414ed6:	fwait
  414ed7:	mov    ah,0x15
  414ed9:	cli    
  414eda:	int    0x27
  414edc:	outs   dx,DWORD PTR ds:[esi]
  414edd:	jge    0x414f49
  414edf:	mov    bh,0x1e
  414ee1:	pop    ebp
  414ee2:	inc    ebx
  414ee3:	xchg   esp,eax
  414ee4:	dec    esi
  414ee5:	xchg   esp,eax
  414ee6:	jne    0x414f2b
  414ee8:	xchg   esi,eax
  414ee9:	ins    DWORD PTR es:[edi],dx
  414eea:	shl    eax,cl
  414eec:	and    BYTE PTR [edx],dl
  414eee:	mov    esp,0xff8c0349
  414ef3:	retf   0xb5d1
  414ef6:	stos   DWORD PTR es:[edi],eax
  414ef7:	and    DWORD PTR [edi],ebx
  414ef9:	dec    esi
  414efa:	fmul   DWORD PTR [ebx+0x6130b8bf]
  414f00:	mov    edx,0xc786b8bc
  414f05:	sbb    eax,0x43e43e95
  414f0a:	add    dl,BYTE PTR [edi]
  414f0c:	xchg   esp,eax
  414f0d:	ret    0x358
  414f10:	dec    DWORD PTR [ecx-0x79]
  414f13:	fwait
  414f14:	call   0x5da17035
  414f19:	ss es add ebx,0x43664ebc
  414f21:	inc    edx
  414f22:	jbe    0x414f53
  414f24:	into   
  414f25:	pop    esp
  414f26:	jno    0x414f57
  414f28:	lods   al,BYTE PTR ds:[esi]
  414f29:	xchg   edi,eax
  414f2a:	cwde   
  414f2b:	into   
  414f2c:	in     eax,0x0
  414f2e:	aam    0xc1
  414f30:	jb     0x414f72
  414f32:	(bad)  
  414f33:	lods   eax,DWORD PTR ds:[esi]
  414f34:	inc    esp
  414f35:	cdq    
  414f36:	inc    ecx
  414f37:	daa    
  414f38:	inc    esp
  414f39:	adc    ecx,ebx
  414f3b:	pop    DWORD PTR [ecx]
  414f3d:	fdivr  QWORD PTR ds:0x1580ccdf
  414f43:	retf   
  414f44:	shl    DWORD PTR [ebx-0x4f],cl
  414f47:	xchg   BYTE PTR [ecx+0x1a],ch
  414f4a:	lds    esi,FWORD PTR [ecx-0x8660ba8]
  414f50:	int    0x53
  414f52:	jns    0x414f94
  414f54:	iret   
  414f55:	std    
  414f56:	and    eax,0x79614d8c
  414f5b:	ds inc ebx
  414f5d:	xchg   ebx,eax
  414f5e:	lea    eax,[ecx]
  414f60:	in     al,dx
  414f61:	mov    ebx,0x7718f39b
  414f66:	jp     0x414f86
  414f68:	xor    BYTE PTR [eax],al
  414f6a:	nop
  414f6b:	bound  esi,QWORD PTR [ecx+0x74c33c8c]
  414f71:	mov    eax,ds:0xb97803fc
  414f76:	sub    al,0x86
  414f78:	sbb    al,0x57
  414f7a:	jg     0x414f10
  414f7c:	pop    ss
  414f7d:	pop    eax
  414f7e:	pop    esp
  414f7f:	sti    
  414f80:	sub    bl,BYTE PTR [esi+0x30]
  414f83:	fnstenv [eax+0x6f169c6a]
  414f89:	rol    DWORD PTR [edi+0x79968870],1
  414f8f:	repz aad 0xfd
  414f92:	cmp    eax,0x987c6a48
  414f97:	mov    cs,WORD PTR [eax-0x18]
  414f9a:	(bad)  
  414f9b:	mov    ds:0x539c96c,eax
  414fa0:	xor    al,0x12
  414fa2:	shr    DWORD PTR [eax-0x28],cl
  414fa5:	sahf   
  414fa6:	dec    ebp
  414fa7:	pop    ecx
  414fa8:	ss xchg ebp,eax
  414faa:	ins    DWORD PTR es:[edi],dx
  414fab:	rcr    DWORD PTR [ecx],1
  414fad:	(bad)  
  414fae:	icebp  
  414faf:	push   0xa
  414fb1:	jae    0x414f6f
  414fb3:	jp     0x414fe2
  414fb5:	loope  0x414f67
  414fb7:	adc    ecx,DWORD PTR [edx-0x3613efc3]
  414fbd:	pop    ss
  414fbe:	call   0x1b7:0xddc37f8c
  414fc5:	(bad)  
  414fc6:	call   0x936:0x4371bc10
  414fcd:	xor    ecx,DWORD PTR [ecx+edi*2]
  414fd0:	push   0xffffffb7
  414fd2:	pop    edx
  414fd3:	jg     0x414f63
  414fd5:	inc    edx
  414fd6:	ret    
  414fd7:	arpl   di,bx
  414fd9:	cmp    bh,dl
  414fdb:	push   ebp
  414fdc:	aas    
  414fdd:	hlt    
  414fde:	scas   eax,DWORD PTR es:[edi]
  414fdf:	and    eax,0x5fc633d0
  414fe4:	mov    al,0x4c
  414fe6:	mov    ebp,0xd30befa9
  414feb:	add    al,0xbf
  414fed:	cld    
  414fee:	ret    
  414fef:	vpaddusb xmm1,xmm0,XMMWORD PTR [edi]
  414ff3:	inc    ebx
  414ff4:	push   esi
  414ff5:	bound  eax,QWORD PTR [edx-0x229eb817]
  414ffb:	sahf   
  414ffc:	cdq    
  414ffd:	out    0xf0,al
  414fff:	or     al,0x83
  415001:	ds jb  0x414fcc
  415004:	pushf  
  415005:	sahf   
  415006:	cld    
  415007:	(bad)  
  415008:	pop    eax
  415009:	adc    bl,ch
  41500b:	sbb    BYTE PTR [edx+0x7b56cbdf],bl
  415011:	mov    ah,0x35
  415013:	jae    0x415024
  415015:	jmp    0x414fb6
  415017:	jge    0x414fdc
  415019:	mov    cl,BYTE PTR [eax-0xb]
  41501c:	jmp    0x415089
  41501e:	scas   eax,DWORD PTR es:[edi]
  41501f:	test   al,0xb9
  415021:	dec    ebp
  415022:	repz hlt 
  415024:	call   0xc181:0x1151853a
  41502b:	addr16 lock xchg edi,eax
  41502e:	lods   eax,DWORD PTR ds:[esi]
  41502f:	les    esp,FWORD PTR [ebx]
  415031:	jmp    0x38c1:0xf00e7b65
  415038:	ret    0x8b09
  41503b:	jle    0x415053
  41503d:	sbb    al,0x8b
  41503f:	jge    0x415056
  415041:	push   ds
  415042:	stc    
  415043:	fisub  WORD PTR ds:0x170ee5c1
  415049:	inc    edi
  41504a:	fnstenv [edx-0x69]
  41504d:	aas    
  41504e:	cwde   
  41504f:	nop
  415050:	inc    ebx
  415051:	in     al,0x79
  415053:	aad    0x49
  415055:	mov    dl,BYTE PTR [edi+eax*4-0x5f]
  415059:	bound  esi,QWORD PTR ds:0x6d30bd55
  41505f:	sbb    BYTE PTR [ebx+0x71],dl
  415062:	out    0x6d,al
  415064:	mov    ebx,0xb4beeed8
  415069:	aaa    
  41506a:	or     al,BYTE PTR [eax-0x11705bd8]
  415070:	push   ecx
  415071:	fld    QWORD PTR [ecx-0x16304966]
  415077:	aam    0xfb
  415079:	sbb    DWORD PTR [esp+ebp*2],edx
  41507c:	mov    dl,0x53
  41507e:	lock inc esi
  415080:	pop    esp
  415081:	call   DWORD PTR [ebx+0x6c]
  415084:	nop    eax
  415087:	repnz (bad) 
  415089:	xor    BYTE PTR [ebp-0x3150f32f],0xcd
  415090:	jns    0x4150af
  415092:	push   ebx
  415093:	xchg   edi,eax
  415094:	mov    WORD PTR [eax-0x8804cbf],fs
  41509a:	mov    bl,0xf7
  41509c:	inc    eax
  41509d:	pushf  
  41509e:	jb     0x415102
  4150a0:	mov    edi,0x5697803b
  4150a5:	into   
  4150a6:	frstor [esi]
  4150a8:	shr    BYTE PTR [ebx+0x273c2deb],1
  4150ae:	nop
  4150af:	dec    esi
  4150b0:	sbb    eax,0x870fbf9f
  4150b5:	out    0x81,eax
  4150b7:	xor    al,0x70
  4150b9:	retf   
  4150ba:	dec    edi
  4150bb:	lods   eax,DWORD PTR ds:[esi]
  4150bc:	push   ecx
  4150bd:	pop    eax
  4150be:	(bad)  
  4150bf:	jno    0x415102
  4150c1:	lahf   
  4150c2:	adc    bh,BYTE PTR [esi+0x6a]
  4150c5:	fild   QWORD PTR [edx+0x69]
  4150c8:	les    edi,FWORD PTR [ebx+0x2c25fb5d]
  4150ce:	inc    ebx
  4150cf:	push   ss
  4150d0:	mov    eax,0x3641741c
  4150d5:	(bad)
  4150da:	xor    BYTE PTR [ecx+0x25],ch
  4150dd:	sbb    DWORD PTR [edx],ebp
  4150df:	adc    bl,BYTE PTR [ebx-0x13067b]
  4150e5:	hlt    
  4150e6:	idiv   DWORD PTR [edi+ebp*2-0x4e351f3e]
  4150ed:	add    ch,BYTE PTR ds:0x6cb7c30b
  4150f3:	xor    eax,0xc463a550
  4150f8:	pop    esp
  4150f9:	add    ch,BYTE PTR [ecx]
  4150fb:	jp     0x4150ee
  4150fd:	outs   dx,DWORD PTR ds:[esi]
  4150fe:	(bad)  
  4150ff:	xor    ah,dh
  415101:	sub    dl,BYTE PTR [eax+0x5]
  415104:	push   ss
  415105:	iret   
  415106:	jns    0x4150e4
  415108:	in     eax,0xb2
  41510a:	out    dx,eax
  41510b:	std    
  41510c:	push   0x26f2642f
  415111:	popa   
  415112:	retf   0x2b59
  415115:	repnz xchg edx,eax
  415117:	stos   BYTE PTR es:[edi],al
  415118:	shl    al,1
  41511a:	daa    
  41511b:	in     eax,0x2e
  41511d:	adc    BYTE PTR [esi-0x6d2626a2],dl
  415123:	dec    esi
  415124:	js     0x4150b6
  415126:	dec    ebp
  415128:	cmc    
  415129:	and    DWORD PTR [edi-0x3e],0xffffff96
  41512d:	ret    
  41512e:	retf   
  41512f:	push   edx
  415130:	sar    BYTE PTR [ebx+ecx*1],0x4f
  415134:	push   edx
  415135:	ins    DWORD PTR es:[edi],dx
  415136:	hlt    
  415137:	outs   dx,BYTE PTR ds:[esi]
  415138:	sbb    BYTE PTR [eax-0x14718a53],dl
  41513e:	mov    ecx,0x346b6fef
  415143:	mov    eax,0xf4bb981c
  415148:	in     al,0xf3
  41514a:	mov    dl,dh
  41514c:	mov    eax,ds:0x475205e7
  415151:	xchg   edi,eax
  415152:	fcmovnbe st,st(6)
  415154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415155:	mov    eax,DWORD PTR [eax-0x6cf13e44]
  41515b:	jns    0x415100
  41515d:	push   edi
  41515e:	mov    al,0xf0
  415160:	cmp    edx,DWORD PTR [ebx+0x53f02be3]
  415166:	loope  0x4151e4
  415168:	add    DWORD PTR [ebx-0x7e],ebx
  41516b:	pop    edx
  41516c:	mov    ds:0x7c3df6b9,al
  415171:	retf   0x553d
  415174:	jo     0x41515e
  415176:	fild   WORD PTR [edi]
  415178:	les    esp,FWORD PTR [eax-0x1a]
  41517b:	xchg   DWORD PTR [edx-0x322ca8c5],eax
  415181:	sub    eax,0x436c3d66
  415186:	jbe    0x41510a
  415188:	jmp    0x415186
  41518a:	dec    ecx
  41518b:	popf   
  41518c:	sbb    al,0x8f
  41518e:	mov    ah,al
  415190:	mov    esi,edi
  415192:	mov    ds:0xfa73d458,eax
  415197:	pop    eax
  415198:	mov    bh,0x2c
  41519a:	scas   al,BYTE PTR es:[edi]
  41519b:	fcom   QWORD PTR [ecx+0xca00ea2]
  4151a1:	shr    esp,1
  4151a3:	clc    
  4151a4:	or     BYTE PTR [ebx-0x1f],al
  4151a7:	xchg   esi,eax
  4151a8:	mov    edx,0xbd8ad1cf
  4151ad:	pop    eax
  4151ae:	ret    
  4151af:	popf   
  4151b0:	outs   dx,BYTE PTR ds:[esi]
  4151b1:	pop    ds
  4151b2:	cli    
  4151b3:	xor    dl,al
  4151b5:	xchg   esp,eax
  4151b6:	in     al,dx
  4151b7:	mov    BYTE PTR [ebx+0x55ba2d63],dl
  4151bd:	js     0x41520b
  4151bf:	inc    edx
  4151c0:	call   FWORD PTR [ecx+0x603451ff]
  4151c6:	and    BYTE PTR [ebx-0xb],ah
  4151c9:	xor    bh,BYTE PTR [edx+0x19]
  4151cc:	xchg   ecx,eax
  4151cd:	pop    ds
  4151ce:	dec    esi
  4151cf:	sbb    ch,dl
  4151d1:	jecxz  0x415245
  4151d3:	loope  0x415240
  4151d5:	(bad)  
  4151d6:	cli    
  4151d7:	push   0xd79610b8
  4151dc:	fsubr  DWORD PTR [esi+0x789c09dc]
  4151e2:	adc    al,BYTE PTR ds:[esi]
  4151e5:	add    DWORD PTR [edi-0x3ac149e6],ebx
  4151eb:	add    esp,esp
  4151ed:	int3   
  4151ee:	xor    bl,BYTE PTR [eax+0x5687de4e]
  4151f4:	mov    WORD PTR [ebp-0x2f4921c8],?
  4151fa:	lahf   
  4151fb:	ss add al,0xf4
  4151fe:	aam    0xce
  415200:	stc    
  415201:	mov    ds:0x2d10e2d0,al
  415206:	test   eax,0x2c9cace9
  41520b:	lahf   
  41520c:	aaa    
  41520d:	pop    ecx
  41520e:	(bad)  [edi-0x50]
  415211:	bound  edi,QWORD PTR [eax+0x17]
  415214:	mov    ch,0x50
  415216:	jno    0x415259
  415218:	ret    
  415219:	mov    al,0xd1
  41521b:	fisttp DWORD PTR [edx+0x20]
  41521e:	xor    eax,0x22e78816
  415223:	adc    DWORD PTR [ebx],0x47
  415226:	aas    
  415227:	dec    edi
  415228:	jne    0x41520d
  41522a:	jbe    0x4151d6
  41522c:	sbb    DWORD PTR [esi],edi
  41522e:	mov    dh,0x3f
  415230:	inc    esi
  415231:	(bad)  
  415232:	rcr    DWORD PTR [edi-0xe21a077],cl
  415238:	neg    WORD PTR [eax+0x59]
  41523c:	clc    
  41523d:	repz mov edx,0x8994090e
  415243:	jne    0x415259
  415245:	call   FWORD PTR [ecx+0x1f]
  415248:	adc    al,0x88
  41524a:	and    al,0x43
  41524c:	outs   dx,BYTE PTR ds:[esi]
  41524d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524e:	jmp    0x3448:0x5485082f
  415255:	arpl   WORD PTR [ecx+0x4e],cx
  415258:	sub    al,0xec
  41525a:	fidiv  WORD PTR [esp+eax*4-0x60c8ae7a]
  415261:	ja     0x4152d4
  415263:	cmc    
  415264:	push   esi
  415265:	out    0x73,eax
  415267:	jae    0x41521a
  415269:	in     eax,0xf0
  41526b:	and    al,0xbf
  41526d:	inc    ebp
  41526e:	mov    esi,0x222d6850
  415273:	(bad)  
  415274:	pop    esp
  415275:	call   0x7810:0x19091cff
  41527c:	mov    WORD PTR [eax+0x1c2ee583],ss
  415282:	lahf   
  415283:	fsub   st,st(4)
  415285:	xor    DWORD PTR [edi+0x7e],ecx
  415288:	or     DWORD PTR [esi-0x61],edx
  41528b:	out    0x4b,al
  41528d:	mov    BYTE PTR [ebp-0x1],dh
  415290:	inc    eax
  415291:	jbe    0x4152bb
  415293:	aam    0xda
  415295:	pop    esp
  415296:	mov    bl,0xb5
  415298:	es int3 
  41529a:	mov    esi,0x2abccc5c
  41529f:	and    ebx,esi
  4152a1:	add    al,0x69
  4152a3:	adc    edi,DWORD PTR [eax+0x4c]
  4152a6:	xchg   edi,eax
  4152a7:	pop    ss
  4152a8:	gs cmp al,0x72
  4152ab:	ds jns 0x415267
  4152ae:	jmp    0x4152c6
  4152b0:	fsub   QWORD PTR [eax-0x12]
  4152b3:	ss cmp bl,dl
  4152b6:	mov    ds:0x42676c4e,al
  4152bb:	adc    edx,0x17ffaf7d
  4152c1:	(bad)  
  4152c2:	jp     0x41524b
  4152c4:	jmp    0xa951:0x2fc2b4ca
  4152cb:	mov    BYTE PTR [esi+0x184a3d7f],0xf9
  4152d2:	xchg   ebp,eax
  4152d3:	in     eax,dx
  4152d4:	cmp    eax,0xb9dffdff
  4152d9:	bound  edx,QWORD PTR [ecx+0x37]
  4152dc:	or     eax,DWORD PTR [eax+0x56]
  4152df:	loop   0x4152c9
  4152e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152e2:	test   al,0x2b
  4152e4:	fcmovbe st,st(1)
  4152e6:	cld    
  4152e7:	icebp  
  4152e8:	loopne 0x415312
  4152ea:	lds    ebp,FWORD PTR [ebx+0x59]
  4152ed:	ret    
  4152ee:	cmp    DWORD PTR [edi+ebx*8],0xffffffb5
  4152f2:	push   ecx
  4152f3:	and    eax,0xa2aa5068
  4152f8:	jmp    0x415325
  4152fa:	xchg   ebp,eax
  4152fb:	push   edx
  4152fc:	inc    esp
  4152fd:	adc    edx,eax
  4152ff:	xchg   edi,eax
  415300:	jle    0x4152d5
  415302:	sar    BYTE PTR ds:[edi],cl
  415305:	rcl    BYTE PTR [ebp+0x2d],0xad
  415309:	les    eax,FWORD PTR ds:0x45c03e7a
  41530f:	mov    ecx,0xf589ee7c
  415314:	push   esi
  415315:	(bad)  
  415316:	and    DWORD PTR [ecx-0x7f],ebx
  415319:	enter  0xc1c3,0x62
  41531d:	imul   edx,edx,0xffffffe7
  415320:	xchg   edi,eax
  415321:	pop    ss
  415322:	sbb    BYTE PTR [esi-0x63],cl
  415325:	ret    
  415326:	mul    BYTE PTR [ecx]
  415328:	in     al,0x10
  41532a:	imul   eax,esp,0x28
  41532d:	mov    ecx,0x96a41ac9
  415332:	(bad)  
  415333:	and    edi,DWORD PTR ds:0xa19e5dd7
  415339:	mov    al,0x5
  41533b:	and    bh,BYTE PTR [ebx+0x3d4d6b72]
  415341:	cmp    DWORD PTR [ebx+eiz*1],0xffffffbf
  415345:	xor    esi,DWORD PTR [esi-0x6ee709d7]
  41534b:	mov    WORD PTR [ebx+edx*1+0x36e67190],?
  415352:	adc    DWORD PTR ds:0xd229486a,esi
  415358:	cld    
  415359:	and    eax,DWORD PTR [esp+esi*8-0x5f]
  41535d:	stos   DWORD PTR es:[edi],eax
  41535e:	push   esi
  41535f:	xchg   edi,eax
  415360:	add    al,BYTE PTR [esi-0xcbd2e9e]
  415366:	xchg   BYTE PTR [edi-0x69c8eedd],dh
  41536c:	iret   
  41536d:	or     BYTE PTR [ebp+ecx*8-0xf],al
  415371:	mov    ds:0x98a858e4,al
  415376:	call   FWORD PTR [ebp+ebx*2+0x10]
  41537a:	pop    eax
  41537b:	or     dh,BYTE PTR [eax-0x6c]
  41537e:	ja     0x4153e8
  415380:	jmp    0xffc9:0x96f78058
  415387:	out    dx,al
  415388:	adc    BYTE PTR [ecx+0x6b5ffc63],ch
  41538e:	scas   eax,DWORD PTR es:[edi]
  41538f:	je     0x4153e3
  415391:	mov    edx,0xd1cfb8c7
  415396:	mov    ebp,0x7a2b8e64
  41539b:	sub    al,0xad
  41539d:	aas    
  41539e:	loop   0x41541f
  4153a0:	das    
  4153a1:	jle    0x4153c2
  4153a3:	fmul   st,st(1)
  4153a5:	push   edi
  4153a6:	mov    dh,BYTE PTR [edi-0x53]
  4153a9:	inc    ecx
  4153aa:	sahf   
  4153ab:	adc    dl,ch
  4153ad:	xor    DWORD PTR [edi+0x53],esi
  4153b0:	and    DWORD PTR [esi-0x1d],edi
  4153b3:	dec    ebx
  4153b4:	imul   esp,DWORD PTR [edx+0x28],0x4f
  4153b8:	xchg   ebp,eax
  4153b9:	je     0x41543a
  4153bb:	xor    al,0xf6
  4153bd:	mov    DWORD PTR [edx+0x1495541a],eax
  4153c3:	pop    ss
  4153c4:	bound  edx,QWORD PTR [eax+0xb8e8102]
  4153ca:	outs   dx,BYTE PTR ds:[esi]
  4153cb:	clc    
  4153cc:	pop    edx
  4153cd:	fimul  DWORD PTR es:[ebx+0x51382170]
  4153d4:	mov    ch,0xc2
  4153d6:	mov    ecx,0x45ed3394
  4153db:	aaa    
  4153dc:	lea    ebx,[ebp+0x20]
  4153df:	add    al,BYTE PTR [edx-0x338d7d8c]
  4153e5:	mov    al,ds:0x63af301a
  4153ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153eb:	jle    0x415454
  4153ed:	mov    ebx,0x1dc70746
  4153f2:	sub    bh,0x1f
  4153f5:	xchg   esp,eax
  4153f6:	test   DWORD PTR [edi+0x3e],esi
  4153f9:	das    
  4153fa:	das    
  4153fb:	int3   
  4153fc:	lea    ecx,[esi+0x15]
  4153ff:	and    dh,BYTE PTR [edi+0x23]
  415402:	lods   al,BYTE PTR ds:[esi]
  415403:	add    eax,0x99734be3
  415408:	test   BYTE PTR [ebx-0x3c],cl
  41540b:	inc    ebp
  41540c:	xchg   cl,ch
  41540e:	je     0x415485
  415410:	xor    BYTE PTR [edi-0x35b8a213],dh
  415416:	pop    edx
  415417:	enter  0xa76e,0xbb
  41541b:	pop    edi
  41541c:	pop    esp
  41541d:	fcom   DWORD PTR [edx]
  41541f:	div    edi
  415421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415422:	dec    ecx
  415423:	mov    dh,0xc6
  415425:	add    DWORD PTR [eax+0x2b],ebx
  415428:	sub    edi,ecx
  41542a:	xchg   edx,eax
  41542b:	fistp  DWORD PTR [edi+0x6dffcb45]
  415431:	xchg   ecx,eax
  415432:	je     0x415455
  415434:	pop    ebp
  415435:	pop    ebp
  415436:	and    al,0x2e
  415438:	das    
  415439:	sti    
  41543a:	push   esi
  41543b:	imul   ecx,DWORD PTR [edx-0x53],0x1ab0ad82
  415442:	push   0x9fc71fe5
  415447:	lods   eax,DWORD PTR ds:[esi]
  415448:	sub    esp,0xffffff9a
  41544b:	scas   al,BYTE PTR es:[edi]
  41544c:	adc    DWORD PTR [edi-0x6],ecx
  41544f:	and    eax,0x56cec1b9
  415454:	sbb    bl,BYTE PTR ds:0x80a386f4
  41545a:	cmc    
  41545b:	pop    ebp
  41545c:	inc    esi
  41545d:	xchg   esi,eax
  41545e:	push   0x626d3003
  415463:	jno    0x415490
  415465:	push   cs
  415466:	dec    ebp
  415467:	xchg   ecx,eax
  415468:	push   edx
  415469:	call   0x570e:0x7cf5f3fd
  415470:	idiv   DWORD PTR [ebx+eiz*2+0x38c9c51e]
  415477:	adc    DWORD PTR [edx+0x557a1fa],edx
  41547d:	xchg   ch,ch
  41547f:	iret   
  415480:	jg     0x4154c1
  415482:	dec    ebp
  415483:	arpl   WORD PTR [edx+0x336c1f7b],bx
  415489:	(bad)  
  41548b:	xor    al,al
  41548d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41548e:	sbb    BYTE PTR [ebp+0x1ea3cb61],bl
  415494:	aaa    
  415495:	popa   
  415496:	add    eax,0x1d9e75a8
  41549b:	adc    esp,DWORD PTR [edi+eax*1+0x41]
  41549f:	into   
  4154a0:	fsub   DWORD PTR [ecx+eiz*1]
  4154a3:	cmp    dl,dl
  4154a5:	add    BYTE PTR [ecx+0x319d35b6],ah
  4154ab:	rcl    edx,1
  4154ad:	xlat   BYTE PTR ds:[ebx]
  4154ae:	mov    eax,0x112c41af
  4154b3:	lods   eax,DWORD PTR ds:[esi]
  4154b4:	xchg   ebp,eax
  4154b5:	clc    
  4154b6:	jb     0x415490
  4154b8:	and    ebx,ebx
  4154ba:	mov    al,0xb4
  4154bc:	shl    DWORD PTR [edx+0x2e],0x9e
  4154c0:	lods   al,BYTE PTR ds:[esi]
  4154c1:	lock mov bh,0xcd
  4154c4:	sar    DWORD PTR fs:[eax-0x7a0336a9],cl
  4154cb:	push   cs
  4154cc:	xor    al,0x60
  4154ce:	inc    ebp
  4154cf:	popf   
  4154d0:	mov    ds:0xcfa846bb,al
  4154d5:	or     ebp,ebp
  4154d7:	popa   
  4154d8:	and    dl,BYTE PTR ds:0x5684419a
  4154de:	test   al,0xb8
  4154e0:	adc    DWORD PTR [eax],edx
  4154e2:	mov    DWORD PTR [esp+edi*2-0x7],esp
  4154e6:	jbe    0x41555a
  4154e8:	fs out dx,eax
  4154ea:	cli    
  4154eb:	into   
  4154ec:	repz lock xor esp,DWORD PTR [edx-0x73]
  4154f1:	ss adc eax,0xe1e05de5
  4154f7:	mov    al,bl
  4154f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154fb:	push   ebx
  4154fc:	scas   eax,DWORD PTR es:[edi]
  4154fd:	retf   
  4154fe:	sbb    dl,dh
  415500:	cmp    BYTE PTR [edx+eiz*4+0x3aa82bd2],al
  415507:	push   edx
  415508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415509:	xlat   BYTE PTR ds:[ebx]
  41550a:	mov    edi,0x6e8cf07b
  41550f:	mov    edx,0x1a18a4fc
  415514:	sti    
  415515:	aam    0xd3
  415517:	sti    
  415518:	data16 jo 0x415509
  41551b:	loopne 0x415571
  41551d:	test   al,0x20
  41551f:	cmp    eax,0x270f1bd7
  415524:	or     esi,ebx
  415526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415527:	and    al,0x7
  415529:	sub    eax,0xd4bec8a4
  41552e:	sahf   
  41552f:	aad    0xbd
  415531:	icebp  
  415532:	sti    
  415533:	fmul   QWORD PTR [edx+0x1]
  415536:	add    BYTE PTR [edx+0x14cd475f],0x7c
  41553d:	mov    cl,0x65
  41553f:	out    0xa0,al
  415541:	push   cs
  415542:	sbb    ecx,ecx
  415544:	jbe    0x4154fe
  415546:	das    
  415547:	jmp    0x7082:0x9e4e4d49
  41554e:	dec    eax
  41554f:	mov    ?,WORD PTR [eax]
  415551:	inc    eax
  415552:	mov    eax,0xab57216b
  415557:	xchg   esp,eax
  415558:	enter  0x1868,0x90
  41555c:	mov    bl,bh
  41555e:	dec    ebx
  41555f:	jecxz  0x4154ed
  415561:	test   BYTE PTR [edi],bh
  415563:	push   0x8264112f
  415568:	sbb    ebp,ebp
  41556a:	bound  ebp,QWORD PTR [ecx-0x57e30fc0]
  415570:	or     al,0xe7
  415572:	aas    
  415573:	push   ebx
  415574:	aas    
  415575:	lock pop ds
  415577:	out    dx,eax
  415578:	cli    
  415579:	test   al,0xae
  41557b:	cld    
  41557c:	sbb    BYTE PTR es:[ebp-0x7d],al
  415580:	lock jne 0x4155f1
  415583:	out    0xc8,eax
  415585:	inc    eax
  415586:	mov    ds:0xbf6f02a6,al
  41558b:	jmp    0x758f:0x996312ff
  415592:	aas    
  415593:	adc    ebp,esi
  415595:	push   0xffffffc3
  415597:	mov    edi,0x4e8bc573
  41559c:	int    0x6e
  41559e:	mov    ch,0x93
  4155a0:	lahf   
  4155a1:	pop    ecx
  4155a2:	or     eax,0x20350660
  4155a7:	(bad)  
  4155a8:	cwde   
  4155a9:	add    DWORD PTR [edi],0x6b
  4155ac:	or     eax,0xf2a1931f
  4155b1:	push   0x274af663
  4155b6:	mov    eax,DWORD PTR [edi+0x7c53f51b]
  4155bc:	push   ebx
  4155bd:	leave  
  4155be:	mov    eax,0x23e7d3ef
  4155c3:	and    eax,0x5a587ba9
  4155c8:	ret    0xf18d
  4155cb:	into   
  4155cc:	jnp    0x41563c
  4155ce:	xor    ecx,DWORD PTR [edx+0x15]
  4155d1:	dec    eax
  4155d2:	jp     0x4155bd
  4155d4:	jl     0x41563f
  4155d6:	ja     0x41563e
  4155d8:	inc    eax
  4155da:	fmul   st(1),st
  4155dc:	cwde   
  4155dd:	(bad)  
  4155de:	jb     0x415614
  4155e0:	mov    ds:0xa3937857,al
  4155e5:	xchg   edi,eax
  4155e6:	int3   
  4155e7:	and    al,0x4f
  4155e9:	outs   dx,BYTE PTR ds:[esi]
  4155ea:	jmp    0x9b2d46c0
  4155ef:	pop    ebp
  4155f0:	xor    al,BYTE PTR [esi-0x71]
  4155f3:	jns    0x415641
  4155f5:	int    0x63
  4155f7:	or     ebp,ecx
  4155f9:	inc    esi
  4155fa:	adc    eax,0x92d3b966
  4155ff:	hlt    
  415600:	push   edx
  415601:	mov    ch,bh
  415603:	or     al,0xe5
  415605:	and    eax,0x46d63257
  41560a:	bound  esp,QWORD PTR [eax+0x57]
  41560d:	sbb    DWORD PTR [esi-0x4b19bff5],esi
  415613:	(bad)
  415617:	jbe    0x415664
  415619:	loop   0x41562b
  41561b:	xchg   BYTE PTR [edi+0x591f0e4d],dh
  415621:	out    0xfe,eax
  415623:	nop
  415624:	add    DWORD PTR [esi],ebp
  415626:	stos   BYTE PTR es:[edi],al
  415627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415628:	push   esi
  415629:	bound  edi,QWORD PTR [edi+ecx*1]
  41562c:	loopne 0x4155e0
  41562e:	mov    esi,0xee33019f
  415633:	and    ebp,DWORD PTR [ebx-0x6304fd59]
  415639:	and    bh,dl
  41563b:	les    ecx,FWORD PTR [esi+0x366e2b56]
  415641:	ins    BYTE PTR es:[edi],dx
  415642:	push   di
  415644:	fsubr  QWORD PTR [ebp-0x1b]
  415647:	push   ecx
  415648:	lds    edx,FWORD PTR [esi]
  41564a:	cld    
  41564b:	in     al,0x53
  41564d:	ror    ecx,0xc7
  415650:	xor    edx,DWORD PTR ds:0xf6f4a660
  415656:	cmp    al,BYTE PTR [edx-0xe]
  415659:	pop    ebp
  41565a:	call   0xdb6ac48d
  41565f:	lock pop edx
  415661:	das    
  415662:	adc    eax,0x6dab657
  415667:	xchg   ebx,eax
  415668:	jge    0x4156cd
  41566a:	sahf   
  41566b:	pushw  es
  41566d:	xchg   ecx,eax
  41566e:	fwait
  41566f:	leave  
  415670:	das    
  415671:	test   BYTE PTR [ebp-0x1c],0x9
  415675:	int3   
  415676:	jbe    0x415617
  415678:	dec    ecx
  415679:	dec    edi
  41567a:	pop    edx
  41567b:	cmc    
  41567c:	pop    edi
  41567d:	dec    esp
  41567e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567f:	push   ebx
  415680:	mov    BYTE PTR [edx+0xa],bl
  415683:	scas   eax,DWORD PTR es:[edi]
  415684:	push   0xb90e4b31
  415689:	rol    BYTE PTR [ebx+ebx*8+0x37c2dc10],0x34
  415691:	pop    edx
  415692:	dec    edx
  415693:	add    DWORD PTR [edi+esi*4],edx
  415696:	das    
  415697:	pop    ecx
  415698:	mov    cl,0x50
  41569a:	add    BYTE PTR [edi+0x34],0xb8
  41569e:	lock call 0x98cd4375
  4156a4:	xor    BYTE PTR [ebp+0x7af695ee],ch
  4156aa:	jbe    0x4156cb
  4156ac:	xor    eax,0xcd825b1f
  4156b1:	or     ecx,DWORD PTR [edx+edx*1-0x5a]
  4156b5:	mov    ebx,0x38556f62
  4156ba:	test   DWORD PTR [eax-0x15],edi
  4156bd:	dec    eax
  4156be:	adc    al,0x8b
  4156c0:	loope  0x4156a5
  4156c2:	test   DWORD PTR [esi+eiz*8],0x350f9784
  4156c9:	mov    ah,0x25
  4156cb:	imul   al
  4156cd:	and    cl,BYTE PTR [ebx]
  4156cf:	scas   al,BYTE PTR es:[edi]
  4156d0:	jp     0x415687
  4156d2:	loop   0x41570f
  4156d4:	out    dx,eax
  4156d5:	cmc    
  4156d6:	sbb    cl,BYTE PTR [eax+0x63]
  4156d9:	std    
  4156da:	push   esp
  4156db:	aas    
  4156dc:	mov    ebp,0xdd84f395
  4156e1:	and    DWORD PTR [edx-0x4ada7103],ecx
  4156e7:	mov    ebx,0x91f6e13b
  4156ec:	or     DWORD PTR [edi+esi*2],edi
  4156ef:	sar    DWORD PTR [esi-0x33db781b],cl
  4156f5:	push   ecx
  4156f6:	xor    esi,esi
  4156f8:	test   al,0x42
  4156fa:	mov    esp,0xfde8e64
  4156ff:	stos   DWORD PTR es:[edi],eax
  415700:	adc    eax,0x87b7b0c0
  415705:	call   0xacb0:0x377fee2c
  41570c:	mov    eax,ds:0x5e213410
  415711:	fnstcw WORD PTR [edi]
  415713:	sar    DWORD PTR [ecx],cl
  415715:	xchg   edx,eax
  415716:	das    
  415717:	arpl   WORD PTR [ecx+0x7b],bx
  41571a:	jecxz  0x415748
  41571c:	ins    BYTE PTR es:[edi],dx
  41571d:	popf   
  41571e:	jb     0x41579c
  415720:	or     DWORD PTR [edx],ebp
  415722:	mov    al,ds:0x84074736
  415727:	(bad)  [ebx-0x37]
  41572a:	jl     0x415756
  41572c:	push   cs
  41572d:	sbb    al,0x6
  41572f:	stos   DWORD PTR es:[edi],eax
  415730:	dec    esp
  415731:	or     cl,bl
  415733:	gs fs or eax,0x96f93ba1
  41573a:	add    eax,0x8aceac36
  41573f:	fild   QWORD PTR [edx+0x8]
  415742:	dec    ebx
  415743:	inc    edi
  415744:	inc    edx
  415745:	ins    BYTE PTR es:[edi],dx
  415746:	pop    esi
  415747:	js     0x415726
  415749:	push   cs
  41574a:	ja     0x415746
  41574c:	retf   
  41574d:	jo     0x41574c
  41574f:	cmp    eax,0x1d61439a
  415754:	add    cl,BYTE PTR ds:0xc0f7622c
  41575a:	push   0x96cab37d
  41575f:	jmp    0xfe62:0x785ee115
  415766:	jbe    0x415737
  415768:	aad    0x8b
  41576a:	les    edi,FWORD PTR [ecx+0x4a]
  41576d:	fdiv   st,st(3)
  41576f:	adc    BYTE PTR [ecx+0x5],bl
  415772:	dec    edi
  415773:	js     0x4157c0
  415775:	test   al,0x56
  415777:	sbb    al,0xc
  415779:	xor    ebx,DWORD PTR [edi-0x232deb11]
  41577f:	ret    
  415780:	adc    eax,0x35809817
  415785:	mov    al,0x1f
  415787:	sbb    ch,BYTE PTR [ebp-0x22]
  41578a:	gs call 0x2251e6ea
  415790:	loope  0x4157a7
  415792:	and    eax,0xb915f6b6
  415797:	nop
  415798:	dec    edi
  415799:	or     ebp,DWORD PTR [edi-0x69]
  41579c:	mov    edx,0xcecf5bc1
  4157a1:	lea    eax,[ebx-0x4d]
  4157a4:	icebp  
  4157a5:	fs daa 
  4157a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a8:	fwait
  4157a9:	and    ebx,DWORD PTR [ecx-0x267609b]
  4157af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b0:	in     eax,dx
  4157b1:	push   esp
  4157b2:	into   
  4157b3:	lds    edi,FWORD PTR [ecx]
  4157b5:	leave  
  4157b6:	int    0xe9
  4157b8:	and    eax,0xed18189b
  4157bd:	inc    ecx
  4157be:	cmp    DWORD PTR [edx-0x2c0605a5],esp
  4157c4:	or     al,BYTE PTR [edx]
  4157c6:	sbb    esp,DWORD PTR gs:[edx]
  4157c9:	fnstsw WORD PTR [edx-0x63]
  4157cc:	and    al,0xc
  4157ce:	jg     0x415763
  4157d0:	pop    esi
  4157d1:	fisttp QWORD PTR [esi-0x28]
  4157d4:	sub    DWORD PTR ss:[ebp+0x6d],eax
  4157d8:	and    dh,BYTE PTR [ecx]
  4157da:	cdq    
  4157db:	or     eax,DWORD PTR [ecx]
  4157dd:	(bad)  
  4157de:	mov    WORD PTR [ecx],?
  4157e0:	sbb    ch,BYTE PTR [ebx+0x2e]
  4157e3:	xchg   ebp,eax
  4157e4:	cmp    bl,BYTE PTR [esi-0x35feb5fb]
  4157ea:	in     eax,0x93
  4157ec:	adc    dl,dl
  4157ee:	pop    edi
  4157ef:	push   edi
  4157f0:	lock mov ebp,0x1998bfdf
  4157f6:	jnp    0x415840
  4157f8:	ret    0xe00d
  4157fb:	shl    ebx,cl
  4157fd:	stos   DWORD PTR es:[edi],eax
  4157fe:	mov    dl,0x42
  415800:	int3   
  415801:	jo     0x41584d
  415803:	xor    cl,BYTE PTR [esi-0x4e45ceeb]
  415809:	xor    bl,BYTE PTR [ebx+0x62]
  41580c:	add    BYTE PTR [ebx-0x4863a04d],dh
  415812:	(bad)  
  415814:	in     eax,dx
  415815:	mov    edx,0x5f85fa30
  41581a:	mov    esi,0x5b3fdd36
  41581f:	add    eax,0x59fcc2b6
  415824:	adc    BYTE PTR [eax+0x40],ch
  415827:	push   esp
  415828:	das    
  415829:	stc    
  41582a:	cs iret 
  41582c:	shl    BYTE PTR [ecx],0x5c
  41582f:	ds out 0xc1,al
  415832:	(bad)  
  415833:	retf   0x510d
  415836:	xor    edx,DWORD PTR [ecx-0x7ccf56ec]
  41583c:	pop    ebx
  41583d:	and    cl,al
  41583f:	sti    
  415840:	sub    bl,BYTE PTR [edx+ecx*8]
  415843:	cmp    ebp,DWORD PTR [edx-0x2a6e41d9]
  415849:	sub    eax,0xe97c0c98
  41584e:	xchg   esp,eax
  41584f:	cmc    
  415850:	aad    0x78
  415852:	cwde   
  415853:	inc    esi
  415854:	and    edx,DWORD PTR [ebx-0x650a0bea]
  41585a:	pop    es
  41585b:	jns    0x415851
  41585d:	or     esi,eax
  41585f:	inc    esi
  415860:	loope  0x41586f
  415862:	pop    ss
  415863:	je     0x4157fa
  415865:	call   0x15b8e961
  41586a:	popf   
  41586b:	xchg   edi,eax
  41586c:	push   edx
  41586d:	arpl   WORD PTR [esi+eiz*1-0x6c0664b6],dx
  415874:	mov    esi,0xc3ce4727
  415879:	cli    
  41587a:	xchg   BYTE PTR [ebx+0x41],dh
  41587d:	mov    ecx,0xf15fcd51
  415882:	sub    BYTE PTR [ebx],0x4f
  415885:	fwait
  415886:	popf   
  415887:	pop    edi
  415888:	add    bl,BYTE PTR [ecx-0x304c5b2d]
  41588e:	in     eax,0x7a
  415890:	retf   
  415891:	cwde   
  415892:	in     eax,dx
  415893:	mov    al,0x94
  415895:	inc    edi
  415896:	pop    edi
  415897:	cmp    al,0x18
  415899:	xchg   esp,eax
  41589a:	out    dx,eax
  41589b:	test   eax,0xffe615b7
  4158a0:	jg     0x4158c7
  4158a2:	lods   eax,DWORD PTR ds:[esi]
  4158a3:	stos   BYTE PTR es:[edi],al
  4158a4:	test   BYTE PTR [edi-0x54],ah
  4158a7:	xchg   BYTE PTR [ecx+0x90bf9a9],al
  4158ad:	mov    ebx,0xa138a0be
  4158b2:	cdq    
  4158b3:	mov    esp,esi
  4158b5:	icebp  
  4158b6:	sbb    eax,0xc1753294
  4158bb:	fidiv  WORD PTR [esi]
  4158bd:	popa   
  4158be:	repz pop dx
  4158c1:	cwde   
  4158c2:	imul   DWORD PTR [edx-0x14be1832]
  4158c8:	fcmovu st,st(3)
  4158ca:	loope  0x4158ee
  4158cc:	(bad)  
  4158cd:	xchg   edx,eax
  4158ce:	movsx  ebp,BYTE PTR [eax+0x1]
  4158d2:	sbb    ecx,DWORD PTR [edi-0x69edbb87]
  4158d8:	pop    eax
  4158d9:	jo     0x41587c
  4158db:	cmp    dl,BYTE PTR [edx-0x4f]
  4158de:	hlt    
  4158df:	xchg   edx,eax
  4158e0:	fnsave [ebx-0x2b]
  4158e3:	jb     0x41587a
  4158e5:	loopne 0x4158cf
  4158e7:	ror    DWORD PTR [ebp-0x7f],1
  4158ea:	sub    eax,DWORD PTR [edx-0x3f]
  4158ed:	dec    eax
  4158ee:	xchg   DWORD PTR [ebp+0x3a],edi
  4158f1:	ins    DWORD PTR es:[edi],dx
  4158f2:	scas   eax,DWORD PTR es:[edi]
  4158f3:	mov    cl,0xe0
  4158f5:	arpl   cx,di
  4158f7:	or     eax,0x97a3ce32
  4158fc:	lea    ecx,[ebx+edx*2+0x215defe5]
  415903:	cmp    al,0x27
  415905:	add    BYTE PTR [bp+0xc5e],dl
  41590a:	scas   al,BYTE PTR es:[edi]
  41590b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41590c:	mov    BYTE PTR [esi-0x5fa033ea],cl
  415912:	sti    
  415913:	enter  0x2c2b,0xed
  415917:	sbb    DWORD PTR [ecx+0x7f5be8fb],ebx
  41591d:	scas   eax,DWORD PTR es:[edi]
  41591e:	out    dx,al
  41591f:	stos   DWORD PTR es:[edi],eax
  415920:	dec    ebp
  415921:	loopne 0x415943
  415923:	std    
  415924:	inc    esi
  415925:	hlt    
  415926:	fnstcw WORD PTR [edx-0x5c]
  415929:	shr    ch,0xde
  41592c:	or     BYTE PTR [eax*8+0xe715f72],al
  415933:	jo     0x415998
  415935:	sbb    ah,ch
  415937:	mov    eax,ds:0x1ac4f8aa
  41593c:	shl    DWORD PTR [ebx+0x3b],cl
  41593f:	and    DWORD PTR [esp+esi*4],ebx
  415942:	or     BYTE PTR [esi+eax*4+0x73a5ff5c],al
  415949:	imul   esp,DWORD PTR [ecx],0x9
  41594c:	repnz and eax,0x40b57c94
  415952:	ins    BYTE PTR es:[edi],dx
  415953:	sub    dl,BYTE PTR ds:0x18655dcc
  415959:	adc    eax,esp
  41595b:	fbld   TBYTE PTR [ebp+0x72d63bc3]
  415961:	stos   BYTE PTR es:[edi],al
  415962:	popa   
  415963:	leave  
  415964:	jl     0x4159b4
  415966:	sbb    eax,0x3fd62d5d
  41596b:	xor    al,0xa6
  41596d:	xchg   BYTE PTR [eax+ebx*8+0x41],cl
  415971:	mov    BYTE PTR [ebx+eiz*8+0x61],al
  415975:	mov    WORD PTR [eax-0x117a21da],?
  41597b:	dec    BYTE PTR [eax+0x32]
  41597e:	xor    BYTE PTR [ecx-0x5abf25b0],bl
  415984:	mov    ebp,0x903ca1aa
  415989:	mov    cs,WORD PTR [ecx]
  41598b:	daa    
  41598c:	or     dl,BYTE PTR [eax]
  41598e:	or     bh,bh
  415990:	retf   0x268f
  415993:	mov    ebp,0xc8860636
  415998:	lock xchg esp,eax
  41599a:	adc    al,0x2f
  41599c:	outs   dx,BYTE PTR ds:[esi]
  41599d:	int    0xc4
  41599f:	cmp    al,0x7a
  4159a1:	add    al,0xe5
  4159a3:	dec    esi
  4159a4:	adc    eax,0xc5dc5394
  4159a9:	and    BYTE PTR [ecx],0xfa
  4159ac:	aad    0x9
  4159ae:	inc    ebx
  4159af:	aad    0x89
  4159b1:	mov    ss,WORD PTR [ecx-0x671c1f2d]
  4159b7:	call   DWORD PTR [ecx+0x1b]
  4159ba:	push   ebp
  4159bb:	ret    
  4159bc:	sbb    BYTE PTR [edi+0x2e],ah
  4159bf:	cmc    
  4159c0:	aas    
  4159c1:	push   0x29a3a399
  4159c6:	out    dx,al
  4159c7:	mov    ds,WORD PTR gs:[esi]
  4159ca:	test   al,0x49
  4159cc:	scas   eax,DWORD PTR es:[edi]
  4159cd:	stos   DWORD PTR es:[edi],eax
  4159ce:	pusha  
  4159cf:	jg     0x415a19
  4159d1:	mov    bl,0x56
  4159d3:	scas   eax,DWORD PTR es:[edi]
  4159d4:	(bad)  
  4159d5:	cmp    eax,0xd8d58916
  4159da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159db:	std    
  4159dc:	mov    esi,0x5ff08f7c
  4159e1:	sub    DWORD PTR [ecx+0x41baa3f9],0xa1f74181
  4159eb:	inc    esi
  4159ec:	cmp    bl,BYTE PTR [edi+0x42]
  4159ef:	xchg   esi,eax
  4159f0:	pop    ecx
  4159f1:	jo     0x415a50
  4159f3:	lods   eax,DWORD PTR ds:[esi]
  4159f4:	jb     0x4159b5
  4159f6:	xor    DWORD PTR [ebp+eax*2-0x69],ebp
  4159fa:	fsubr  st(2),st
  4159fc:	in     eax,0xb8
  4159fe:	mov    al,ds:0xb9af04fd
  415a03:	add    eax,DWORD PTR [ebx-0x66]
  415a06:	mov    dl,0x26
  415a08:	push   ecx
  415a09:	pop    ss
  415a0a:	test   eax,0xfc606dc1
  415a0f:	dec    esi
  415a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a11:	dec    edx
  415a12:	outs   dx,DWORD PTR cs:[esi]
  415a14:	repz pop es
  415a16:	out    dx,eax
  415a17:	inc    eax
  415a18:	jle    0x415a50
  415a1a:	inc    edx
  415a1b:	jecxz  0x415a1d
  415a1d:	sub    al,BYTE PTR [esi+0x77]
  415a20:	xor    BYTE PTR [esi-0xa],ch
  415a23:	jmp    0x415aa3
  415a25:	test   al,0x6c
  415a27:	add    DWORD PTR [esp+ebp*1],0x8eef7e57
  415a2e:	shl    DWORD PTR [eax],0xd0
  415a31:	jbe    0x4159bf
  415a33:	mov    esp,0x2f28a55e
  415a38:	and    DWORD PTR [ebp+0x39],ebx
  415a3b:	dec    esi
  415a3c:	mov    eax,ds:0x84551555
  415a41:	(bad)  
  415a43:	xor    bl,dl
  415a45:	jmp    0x43ce:0x736fe5ab
  415a4c:	cld    
  415a4d:	pop    esi
  415a4e:	ds leave 
  415a50:	xor    ecx,DWORD PTR [esi]
  415a52:	jbe    0x415ab9
  415a54:	mov    bh,0x9d
  415a56:	xor    eax,ecx
  415a58:	fucomip st,st(1)
  415a5a:	xchg   ebx,eax
  415a5b:	xor    ebp,DWORD PTR [ebx+0x2b1138c2]
  415a61:	shr    DWORD PTR [eax],0xa5
  415a64:	adc    eax,0xb6a20860
  415a69:	or     BYTE PTR ds:0xca9105e,ch
  415a6f:	mov    eax,fs
  415a71:	popf   
  415a72:	(bad)  
  415a73:	jno    0x415aab
  415a75:	jg     0x415a79
  415a77:	dec    ebp
  415a78:	sahf   
  415a79:	ror    BYTE PTR [edi+0x2509a0f5],1
  415a7f:	fst    st(0)
  415a81:	jge    0x415a25
  415a83:	mov    edi,DWORD PTR [ebx-0x1d]
  415a86:	repz bound ebp,QWORD PTR [eax]
  415a89:	xchg   ebx,eax
  415a8a:	fisub  WORD PTR [eax]
  415a8c:	aas    
  415a8d:	jbe    0x415a6a
  415a8f:	retf   0xe731
  415a92:	hlt    
  415a93:	pop    es
  415a94:	lahf   
  415a95:	push   edx
  415a96:	xor    al,0x4d
  415a98:	push   es
  415a99:	cmp    ah,BYTE PTR ds:0x5bea9e72
  415a9f:	pop    ebx
  415aa0:	(bad)  
  415aa2:	mov    esi,0xf514a3dd
  415aa7:	or     ebp,edi
  415aa9:	lods   al,BYTE PTR ds:[esi]
  415aaa:	cmp    al,0x4d
  415aac:	in     al,0x3
  415aae:	push   esp
  415aaf:	mov    esp,0xce2dc098
  415ab4:	push   0x5aa17fe0
  415ab9:	mov    edi,0x359e7422
  415abe:	out    dx,eax
  415abf:	push   es
  415ac0:	ficomp WORD PTR [ebp-0x54]
  415ac3:	bound  edi,QWORD PTR [ebp+0xf]
  415ac6:	shr    dh,0xb7
  415ac9:	xor    al,0xaf
  415acb:	(bad)  
  415acc:	xor    ebx,DWORD PTR [edx-0x23]
  415acf:	and    al,0x63
  415ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ad2:	fisubr DWORD PTR [ebx-0x6fe2f120]
  415ad8:	pop    edx
  415ad9:	out    0xca,eax
  415adb:	xchg   edx,eax
  415adc:	lods   al,BYTE PTR ds:[esi]
  415add:	inc    eax
  415ade:	mov    esp,0x4e7357c3
  415ae3:	dec    esi
  415ae4:	fwait
  415ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ae6:	or     edi,ebx
  415ae8:	mov    al,0xbc
  415aea:	xchg   esi,eax
  415aeb:	mov    al,0x32
  415aed:	shr    DWORD PTR [eax+esi*4+0x5aa95f3b],cl
  415af4:	mov    edi,0x5e56d8be
  415af9:	cmp    esp,DWORD PTR [edi+0x1e]
  415afc:	int    0x6a
  415afe:	dec    ebx
  415aff:	jmp    0xf17c3a44
  415b04:	sbb    bh,BYTE PTR [ebp+0x4d]
  415b07:	push   cs
  415b08:	call   0x5c5fc037
  415b0d:	push   edx
  415b0e:	xchg   ebx,eax
  415b0f:	mov    ds:0x73bdaad1,eax
  415b14:	sub    DWORD PTR [eax-0x78a86725],esp
  415b1a:	and    BYTE PTR [esi+0x297ed333],bh
  415b20:	jne    0x415b95
  415b22:	jb     0x415afc
  415b24:	xor    al,0xf5
  415b26:	cdq    
  415b27:	in     eax,dx
  415b28:	pop    esp
  415b29:	fcmovnb st,st(0)
  415b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b2c:	cmp    BYTE PTR [edx],0xf4
  415b2f:	inc    esp
  415b30:	loopne 0x415af6
  415b32:	ret    0x8749
  415b35:	sti    
  415b36:	cmp    edi,esp
  415b38:	div    ch
  415b3a:	fs cld 
  415b3c:	or     ebx,edx
  415b3e:	inc    edi
  415b3f:	jne    0x415b5c
  415b41:	test   eax,0xc51ede47
  415b46:	sub    eax,DWORD PTR [ebp-0x37191dfe]
  415b4c:	lock sar bx,0xc9
  415b51:	inc    esp
  415b52:	mov    edx,0x2ae0f8db
  415b57:	cmp    DWORD PTR [ecx-0x9f71946],0xffffffde
  415b5e:	cmp    al,0xc4
  415b60:	sub    ch,BYTE PTR [ebp+0x1a]
  415b63:	mov    al,0x5b
  415b65:	imul   ebx,esi,0xfffffff7
  415b68:	jge    0x415b23
  415b6a:	xchg   DWORD PTR [eax],esi
  415b6c:	inc    esi
  415b6d:	inc    esp
  415b6e:	ret    0x2cf1
  415b71:	adc    BYTE PTR ss:[ebx],dl
  415b74:	in     al,dx
  415b75:	cld    
  415b76:	and    cl,al
  415b78:	and    eax,edi
  415b7a:	and    BYTE PTR [edx-0x5d],0x47
  415b7e:	pop    esi
  415b7f:	(bad)  
  415b80:	pop    ebp
  415b81:	mov    al,ds:0x4cf60a5
  415b86:	popfw  
  415b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b89:	test   al,0xef
  415b8b:	lds    esp,FWORD PTR [edx-0x26]
  415b8e:	popa   
  415b8f:	and    al,0x8f
  415b91:	(bad)  
  415b92:	out    dx,ax
  415b94:	enter  0xa10d,0x45
  415b98:	push   ss
  415b99:	cmp    eax,0x5dabc6e7
  415b9e:	fisttp QWORD PTR [eax+0x10]
  415ba1:	(bad)  
  415ba2:	scas   al,BYTE PTR es:[edi]
  415ba3:	xchg   ebp,eax
  415ba4:	mov    edx,0x38d0778a
  415ba9:	jae    0x415b53
  415bab:	sub    DWORD PTR [edx+0x2507d195],esp
  415bb1:	out    0xda,al
  415bb3:	xor    DWORD PTR [edi+esi*2+0x5c821952],esi
  415bba:	hlt    
  415bbb:	mov    ecx,0x3b1f268f
  415bc0:	lahf   
  415bc1:	inc    edi
  415bc2:	fisttp DWORD PTR [ebx-0x264db61d]
  415bc8:	xor    BYTE PTR [ebx+0x3d291c1a],dh
  415bce:	xor    ebp,DWORD PTR [ebp-0x5b]
  415bd1:	xchg   ebx,eax
  415bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd3:	pop    ebx
  415bd4:	loop   0x415b81
  415bd6:	(bad)  
  415bd7:	mov    ch,0x95
  415bd9:	test   BYTE PTR [ebx+0x1b73a1be],cl
  415bdf:	adc    eax,DWORD PTR [ebx+0x4afcb76c]
  415be5:	ins    BYTE PTR es:[edi],dx
  415be6:	dec    edx
  415be7:	jp     0x415c34
  415be9:	fmul   QWORD PTR [ecx]
  415beb:	push   eax
  415bec:	xchg   ecx,eax
  415bed:	sbb    eax,0x251bf8e2
  415bf2:	add    DWORD PTR [esi],esp
  415bf4:	mov    al,ds:0x4133af33
  415bf9:	sub    ah,BYTE PTR [ebp+0x32]
  415bfc:	mov    cl,0x22
  415bfe:	les    ecx,FWORD PTR [edx+0x593ca090]
  415c04:	jns    0x415c25
  415c06:	outs   dx,BYTE PTR ds:[esi]
  415c07:	stos   BYTE PTR es:[edi],al
  415c08:	scas   eax,DWORD PTR es:[edi]
  415c09:	push   0xf53009c1
  415c0e:	jns    0x415c2f
  415c10:	add    BYTE PTR [esi+eax*4-0x212d223c],al
  415c17:	cmp    eax,0xdff8336d
  415c1c:	mov    fs,WORD PTR [edx+0x6a763e99]
  415c22:	mov    cl,0x7a
  415c24:	pop    ds
  415c25:	std    
  415c26:	imul   ecx,ecx,0xffffff8d
  415c29:	cmp    al,0xab
  415c2b:	shl    ebp,cl
  415c2d:	push   edx
  415c2e:	cli    
  415c2f:	outs   dx,DWORD PTR ds:[esi]
  415c30:	leave  
  415c31:	mov    esi,0x3ffd0a2f
  415c36:	cmp    DWORD PTR [ecx-0x3a],eax
  415c39:	jl     0x415cb8
  415c3b:	cld    
  415c3c:	inc    edx
  415c3d:	outs   dx,BYTE PTR ds:[esi]
  415c3e:	jns    0x415c2a
  415c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c41:	inc    esp
  415c42:	xor    al,0xb
  415c44:	fsubr  DWORD PTR [eax+0x7ef937b5]
  415c4a:	or     bl,BYTE PTR [ecx]
  415c4c:	adc    edi,ebx
  415c4e:	call   0xb27e:0x6fc29ac2
  415c55:	lds    eax,FWORD PTR [ecx]
  415c57:	jbe    0x415c59
  415c59:	mov    ds:0x49da7ff3,eax
  415c5e:	enter  0x9181,0x27
  415c62:	das    
  415c63:	stos   DWORD PTR es:[edi],eax
  415c64:	xor    eax,0x1e4a9fdb
  415c69:	ret    
  415c6a:	jge    0x415ce8
  415c6c:	xor    al,0x31
  415c6e:	add    eax,DWORD PTR [ecx+ebp*2]
  415c71:	sbb    edx,DWORD PTR ds:0xed4d5f40
  415c77:	cld    
  415c78:	loope  0x415c04
  415c7a:	(bad)  
  415c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7c:	pop    ebp
  415c7d:	jg     0x415c2f
  415c7f:	add    al,0xb0
  415c81:	stos   DWORD PTR es:[edi],eax
  415c82:	mov    ds:0xdc2cf3cf,al
  415c87:	out    0xfc,eax
  415c89:	popa   
  415c8a:	stos   BYTE PTR es:[edi],al
  415c8b:	pop    es
  415c8c:	cmp    BYTE PTR [ebx+ebp*2],cl
  415c8f:	cmp    BYTE PTR [ecx-0x58],dh
  415c92:	sbb    al,0x60
  415c94:	jno    0x415c70
  415c96:	js     0x415c94
  415c98:	mov    ah,0xf3
  415c9a:	scas   al,BYTE PTR es:[edi]
  415c9b:	mov    ecx,0x7dc05bd8
  415ca0:	out    0x3e,eax
  415ca2:	icebp  
  415ca3:	clc    
  415ca4:	xchg   edi,eax
  415ca5:	mov    al,ds:0xeed8c93a
  415caa:	xchg   esp,eax
  415cab:	mov    edi,0x17f7d96a
  415cb0:	adc    edx,DWORD PTR [esi]
  415cb2:	xchg   edi,eax
  415cb3:	imul   edx,DWORD PTR [edi+0x1bf85b4b],0xe263550c
  415cbd:	mov    WORD PTR [ebp+eiz*8+0x2f815fb6],?
  415cc4:	imul   ecx,DWORD PTR ds:0x4687aa90,0xa506b7f2
  415cce:	das    
  415ccf:	stos   BYTE PTR es:[edi],al
  415cd0:	lahf   
  415cd1:	adc    BYTE PTR [edx-0x60899dd2],bh
  415cd7:	jno    0x415cb5
  415cd9:	out    0xaa,al
  415cdb:	add    bl,BYTE PTR [ecx+0x3dd7a9c9]
  415ce1:	fdiv   QWORD PTR [eax-0x54]
  415ce4:	sub    al,0x9c
  415ce6:	cld    
  415ce7:	fisub  WORD PTR [edx+0x49]
  415cea:	sub    BYTE PTR [ecx+ecx*1],bh
  415ced:	fcmovne st,st(5)
  415cef:	dec    edx
  415cf0:	(bad)  
  415cf1:	xchg   BYTE PTR [ecx],bh
  415cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf4:	mov    esp,0xfdcc5b6b
  415cf9:	sub    eax,0x5a279284
  415cfe:	pop    ecx
  415cff:	sub    DWORD PTR [ecx-0x26],esp
  415d02:	adc    edi,DWORD PTR [eax-0x4d]
  415d05:	aad    0x7c
  415d07:	xor    DWORD PTR [edx+0x253a73d9],ebx
  415d0d:	xchg   ebx,eax
  415d0e:	pop    ss
  415d0f:	inc    eax
  415d10:	pop    edx
  415d11:	(bad)  
  415d12:	retf   
  415d13:	and    BYTE PTR [ecx],ah
  415d15:	pop    ecx
  415d16:	sar    DWORD PTR [edx-0x6a032cce],cl
  415d1c:	(bad)
  415d20:	jno    0x415d75
  415d22:	jbe    0x415d4a
  415d24:	cmp    BYTE PTR [ebp+0x7e3173fb],cl
  415d2a:	jle    0x415cf4
  415d2c:	repz xchg esi,eax
  415d2e:	fisub  WORD PTR [edi-0x54c5c83e]
  415d34:	cmp    dh,bl
  415d36:	popf   
  415d37:	mov    bh,0xd6
  415d39:	push   ebp
  415d3a:	jnp    0x415cc8
  415d3c:	mov    bh,0xf2
  415d3e:	out    0x2d,eax
  415d40:	xchg   edx,eax
  415d41:	gs push cs
  415d43:	iret   
  415d44:	jno    0x415d7c
  415d46:	dec    edx
  415d47:	pop    edx
  415d48:	outs   dx,DWORD PTR ds:[esi]
  415d49:	cmp    eax,ecx
  415d4b:	cmp    DWORD PTR [eax-0x4e60c7a0],edi
  415d51:	lahf   
  415d52:	stc    
  415d53:	bound  ebx,QWORD PTR [eax+eiz*4-0x15698784]
  415d5a:	popa   
  415d5b:	retf   
  415d5c:	ds push ebp
  415d5e:	pop    ebp
  415d5f:	dec    esp
  415d60:	cmp    eax,0x28ab9029
  415d65:	or     BYTE PTR [edi],ah
  415d67:	imul   esp,DWORD PTR [eax],0xffffffb1
  415d6a:	loope  0x415cf9
  415d6c:	daa    
  415d6d:	adc    al,0xcd
  415d6f:	cdq    
  415d70:	bound  ecx,QWORD PTR [ebp+0x7ab32fcc]
  415d76:	xchg   ecx,eax
  415d77:	lds    esp,FWORD PTR [ecx-0x57]
  415d7a:	xchg   ebp,eax
  415d7b:	ret    0x5b8b
  415d7e:	push   esi
  415d7f:	lock (bad) 
  415d81:	mov    bh,al
  415d83:	or     al,BYTE PTR ds:0xabad3e6a
  415d89:	add    DWORD PTR [esi-0x5f21831],ebx
  415d8f:	fdiv   QWORD PTR [ecx-0x8]
  415d92:	addr16 aam 0x61
  415d95:	adc    dl,cl
  415d97:	shl    bh,0xd5
  415d9a:	sub    BYTE PTR [ecx+0x18],ch
  415d9d:	pop    ds
  415d9e:	ins    DWORD PTR es:[edi],dx
  415d9f:	ret    0xfc3
  415da2:	jmp    0x415d89
  415da4:	mov    al,ds:0xf686c68
  415da9:	pop    edi
  415daa:	icebp  
  415dab:	shr    BYTE PTR [edx],0x25
  415dae:	sbb    al,0xb7
  415db0:	into   
  415db1:	mov    ch,cl
  415db3:	adc    cl,BYTE PTR [ecx+eax*1-0x40a69f05]
  415dba:	ins    BYTE PTR es:[edi],dx
  415dbb:	imul   edx,DWORD PTR [eax+0x4d676f91],0x69
  415dc2:	add    DWORD PTR [esi],ebx
  415dc4:	les    ecx,FWORD PTR [edx]
  415dc6:	les    esi,FWORD PTR [edx-0x311993a9]
  415dcc:	xlat   BYTE PTR ds:[ebx]
  415dcd:	imul   esi,ebx,0x11
  415dd0:	sub    BYTE PTR gs:[esp+edx*2-0xf12cde],bl
  415dd8:	mov    dl,0x2
  415dda:	dec    edi
  415ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ddc:	fbstp  TBYTE PTR ds:0x9b70b12a
  415de2:	xchg   ebp,eax
  415de3:	sbb    BYTE PTR [ecx+0x6d85c4b7],al
  415de9:	ret    
  415dea:	mov    esi,0x9431c1ee
  415def:	sbb    eax,DWORD PTR [bx+di+0x3631]
  415df4:	data16 sbb BYTE PTR [eax-0x6e],0x4a
  415df9:	mov    ds:0x59762343,al
  415dfe:	in     eax,dx
  415dff:	sub    bh,al
  415e01:	imul   ebp,DWORD PTR [ebx-0x6c9fe6f],0x19
  415e08:	in     al,0x5b
  415e0a:	dec    ecx
  415e0b:	sbb    al,0x31
  415e0d:	cmp    esp,ecx
  415e0f:	(bad)  
  415e11:	mov    ebx,DWORD PTR [ebx]
  415e13:	xchg   esi,eax
  415e14:	nop
  415e15:	int3   
  415e16:	mov    edi,0x5086a458
  415e1b:	fs sahf 
  415e1d:	mov    eax,ds:0xe40c0f1
  415e22:	mov    ebx,0x259b237
  415e27:	and    esp,DWORD PTR [esi+edi*8-0xf6ef9a]
  415e2e:	sti    
  415e2f:	retf   
  415e30:	fidiv  WORD PTR [ebp-0x7a]
  415e33:	scas   al,BYTE PTR es:[edi]
  415e34:	mov    edx,0x38948d56
  415e39:	mov    ds:0x132b538c,eax
  415e3e:	fist   DWORD PTR [edi+0x3b9c2a14]
  415e44:	clc    
  415e45:	xchg   ebx,eax
  415e46:	std    
  415e47:	rcl    BYTE PTR [eax],1
  415e49:	sub    eax,0x9bf490f9
  415e4e:	mov    ah,0x9
  415e50:	ret    
  415e51:	mov    BYTE PTR [edi+0x56187912],dl
  415e57:	out    0x7a,eax
  415e59:	jno    0x415e1c
  415e5b:	jb     0x415de8
  415e5d:	and    edi,ebp
  415e5f:	mov    al,al
  415e61:	lahf   
  415e62:	pusha  
  415e63:	in     eax,dx
  415e64:	mov    eax,0xff4ddad9
  415e69:	or     esp,DWORD PTR [esi-0x4c2aa77e]
  415e6f:	add    al,0xcd
  415e71:	cdq    
  415e72:	push   ss
  415e73:	and    eax,0xd40ec3a7
  415e78:	into   
  415e79:	aaa    
  415e7a:	pop    edx
  415e7b:	arpl   WORD PTR [ecx],si
  415e7d:	mov    ebx,0x288cf9c2
  415e82:	sbb    bl,BYTE PTR [ecx+0x27]
  415e85:	aaa    
  415e86:	or     al,0x1c
  415e88:	fwait
  415e89:	mov    bl,0xd8
  415e8b:	in     al,dx
  415e8c:	lods   al,BYTE PTR ds:[esi]
  415e8d:	pop    edx
  415e8e:	jecxz  0x415e9e
  415e90:	mov    edx,0x435e4aeb
  415e95:	push   es
  415e96:	dec    edx
  415e97:	test   ebx,edi
  415e99:	xchg   ah,ch
  415e9b:	pop    esi
  415e9c:	cmp    al,0xe7
  415e9e:	rcr    BYTE PTR [edi-0x47],1
  415ea1:	imul   ebx,DWORD PTR [esi],0x6f2aa4ff
  415ea7:	ins    DWORD PTR es:[edi],dx
  415ea8:	adc    bh,BYTE PTR [ecx]
  415eaa:	hlt    
  415eab:	cld    
  415eac:	(bad)  
  415ead:	adc    DWORD PTR [ebx-0x66725d24],ebx
  415eb3:	jecxz  0x415ea5
  415eb5:	mov    esi,0x3a573243
  415eba:	xor    edx,eax
  415ebc:	dec    edx
  415ebd:	imul   eax,ebp,0xd4ce90eb
  415ec3:	popa   
  415ec4:	and    BYTE PTR [ebx-0x4a79d8f1],cl
  415eca:	cmp    DWORD PTR [edx+eiz*2+0x3aef4136],0x1
  415ed2:	ret    
  415ed3:	daa    
  415ed4:	sub    ebx,DWORD PTR [ebp-0x22]
  415ed7:	enter  0xe195,0x98
  415edb:	xrelease xchg BYTE PTR [ebp-0x6d869383],ah
  415ee2:	xor    BYTE PTR [eax+0xf],dl
  415ee5:	inc    ecx
  415ee6:	sub    eax,0xcaac6e1f
  415eeb:	sbb    eax,0xf36ee724
  415ef0:	sub    ecx,DWORD PTR ds:0x35fec2d1
  415ef6:	retf   0x71c3
  415ef9:	div    DWORD PTR [edx]
  415efb:	mov    ch,0x90
  415efd:	add    esi,DWORD PTR [esi+0xe598759]
  415f03:	cs jnp 0x415f2f
  415f06:	fcomp  DWORD PTR [esp-0x40]
  415f0a:	xor    DWORD PTR [edi],ebp
  415f0c:	add    cl,dh
  415f0e:	cli    
  415f0f:	jnp    0x415f70
  415f11:	adc    eax,0x36770a10
  415f16:	add    ebx,edx
  415f18:	push   edx
  415f19:	dec    esp
  415f1a:	mov    dh,BYTE PTR [esi+0x5955c36]
  415f20:	mov    ebx,0x167bf694
  415f25:	mov    edx,DWORD PTR [ecx-0x3db499a8]
  415f2b:	or     esp,DWORD PTR ds:0x5b794cf5
  415f31:	jecxz  0x415f31
  415f33:	clc    
  415f34:	call   DWORD PTR [esi+0x41]
  415f37:	and    edi,DWORD PTR [esi]
  415f39:	cli    
  415f3a:	pop    ss
  415f3b:	sub    esi,DWORD PTR [esi]
  415f3d:	jnp    0x415f64
  415f3f:	fstp   QWORD PTR [edi]
  415f41:	sub    DWORD PTR [edx+0x47c79d6a],eax
  415f47:	inc    eax
  415f48:	mov    eax,ds:0xd49432e6
  415f4d:	(bad)  
  415f4e:	jnp    0x415f6f
  415f50:	sub    eax,0x222e7220
  415f55:	fdivp  st(7),st
  415f57:	push   es
  415f58:	push   cs
  415f59:	es fprem 
  415f5c:	mov    esi,0x3ee5c77d
  415f61:	xor    BYTE PTR [eax-0x626c9bcd],dh
  415f67:	(bad)  
  415f68:	xor    al,0x27
  415f6a:	cmp    dl,dh
  415f6c:	dec    esp
  415f6d:	jecxz  0x415f08
  415f6f:	(bad)  [edx-0x28325366]
  415f75:	xchg   ebp,eax
  415f76:	adc    DWORD PTR [edx+edi*2],esi
  415f79:	mov    ecx,0x2640c469
  415f7e:	mov    eax,0xc85d0048
  415f83:	inc    ebx
  415f84:	rol    DWORD PTR [esp+ebx*1+0x48dfa030],1
  415f8b:	aas    
  415f8c:	pop    ss
  415f8d:	or     DWORD PTR [eax],0x19
  415f90:	sbb    BYTE PTR [eax],ah
  415f92:	cdq    
  415f93:	es test al,0x9c
  415f96:	dec    ebp
  415f97:	sahf   
  415f98:	mov    ebp,0xb4b29ea3
  415f9d:	fisub  DWORD PTR ds:0xc1c7f6be
  415fa3:	cld    
  415fa4:	and    BYTE PTR [ecx+0x19],ch
  415fa7:	cld    
  415fa8:	lds    edx,FWORD PTR [ecx+ecx*1-0x63]
  415fac:	sub    bl,dl
  415fae:	in     al,0x9a
  415fb0:	int3   
  415fb1:	call   0x8b376d31
  415fb6:	loopne 0x415fba
  415fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb9:	mov    BYTE PTR [ebp-0x29],ah
  415fbc:	push   esp
  415fbd:	mov    WORD PTR [ebx+eiz*2+0x3b],cs
  415fc1:	cld    
  415fc2:	add    DWORD PTR [ebx-0x3],edx
  415fc5:	or     bl,0x50
  415fc8:	mov    cl,0x54
  415fca:	mov    ds:0xfe16cf02,eax
  415fcf:	ror    BYTE PTR [esi-0xe1e84f],cl
  415fd5:	cwde   
  415fd6:	sysexit 
  415fd8:	pop    eax
  415fd9:	into   
  415fda:	dec    eax
  415fdb:	lahf   
  415fdc:	xor    DWORD PTR ds:0x7b211f9,ebx
  415fe2:	dec    eax
  415fe3:	push   edi
  415fe4:	ss jmp 0x416021
  415fe7:	add    BYTE PTR [eax-0x1e],bl
  415fea:	es or  eax,0x37812095
  415ff0:	mov    WORD PTR [ecx-0x5],ss
  415ff3:	sub    DWORD PTR [edi+0x57],0xdf3f774a
  415ffa:	sub    DWORD PTR ss:[ebx+eiz*4],edi
  415ffe:	cmp    edx,DWORD PTR [esi]
  416000:	cmp    al,0x48
  416002:	ins    DWORD PTR es:[edi],dx
  416003:	push   ecx
  416004:	inc    eax
  416005:	aaa    
  416006:	jno    0x416013
  416008:	stos   DWORD PTR es:[edi],eax
  416009:	scas   al,BYTE PTR es:[edi]
  41600a:	mov    eax,ds:0xc7c13795
  41600f:	cdq    
  416010:	pop    ebx
  416011:	lea    ebp,[eax+0x8d91871]
  416017:	lea    edi,[bp+0x5d0e]
  41601c:	cs pop ecx
  41601e:	(bad)  [edx]
  416020:	cmp    esi,ebx
  416022:	out    0xa3,eax
  416024:	daa    
  416025:	jmp    0xadf1db50
  41602a:	mov    ?,WORD PTR [ebp+0x69]
  41602d:	repz xor eax,0xd893bdf
  416033:	mov    BYTE PTR [eax-0x2c722d66],dh
  416039:	mov    ds:0x1445f701,al
  41603e:	lods   al,BYTE PTR ds:[esi]
  41603f:	(bad)  
  416040:	jle    0x41608c
  416042:	fisub  DWORD PTR [eax+0x62]
  416045:	retf   0xa0cf
  416048:	jnp    0x415fe6
  41604a:	loope  0x415fd2
  41604c:	stc    
  41604d:	dec    ecx
  41604e:	add    al,0x0
  416050:	je     0x416041
  416052:	ins    DWORD PTR es:[edi],dx
  416053:	jo     0x416067
  416055:	adc    BYTE PTR [esi-0x7e],cl
  416058:	test   bh,dl
  41605a:	jnp    0x415fe2
  41605c:	fcom   QWORD PTR [edx+edx*4]
  41605f:	cdq    
  416060:	inc    ebx
  416061:	sbb    eax,0x6412c32d
  416066:	jl     0x41606e
  416068:	and    eax,0xba4cd2e0
  41606d:	sbb    DWORD PTR [ebx+ebp*2-0x7c4b480f],edx
  416074:	dec    esi
  416075:	cmp    eax,0x55adf156
  41607a:	mov    ?,WORD PTR [esi]
  41607c:	or     BYTE PTR [edx+0x65287bb],al
  416082:	mov    al,ds:0x23183388
  416087:	pop    edx
  416088:	dec    esp
  416089:	cdq    
  41608a:	outs   dx,DWORD PTR ds:[esi]
  41608b:	add    DWORD PTR [edi],ebx
  41608d:	xchg   esi,eax
  41608e:	(bad)  
  41608f:	push   cs
  416090:	in     eax,dx
  416091:	push   es
  416092:	sub    ch,0x8f
  416095:	cld    
  416096:	repnz popa 
  416098:	iret   
  416099:	jae    0x4160f9
  41609b:	loope  0x4160ee
  41609d:	std    
  41609e:	packsswb mm2,QWORD PTR es:0xeb37b660
  4160a6:	mov    dh,0x7a
  4160a8:	popf   
  4160a9:	mov    al,ds:0xa6b153e3
  4160ae:	ss (bad) 
  4160b0:	test   al,0x9a
  4160b2:	addr16 mov ecx,0xf2b1ffec
  4160b8:	mov    ch,0xdf
  4160bb:	icebp  
  4160bc:	shr    dh,0xf0
  4160bf:	adc    al,0x64
  4160c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c2:	cmp    al,0x42
  4160c5:	cli    
  4160c6:	add    al,0x2a
  4160c8:	das    
  4160c9:	hlt    
  4160ca:	dec    eax
  4160cb:	mov    ebp,0x41737205
  4160d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d1:	adc    ebp,esi
  4160d3:	stos   BYTE PTR es:[edi],al
  4160d4:	jmp    0xbf2d5d4c
  4160d9:	ret    
  4160da:	fbstp  TBYTE PTR [edx]
  4160dc:	mov    esp,DWORD PTR [ebp+ebx*4-0x9]
  4160e0:	fisttp WORD PTR [edx+0x15]
  4160e3:	sbb    dl,BYTE PTR [ebx+ecx*2]
  4160e6:	sar    DWORD PTR [edi],0x3c
  4160e9:	stos   DWORD PTR es:[edi],eax
  4160ea:	rol    bl,cl
  4160ec:	test   al,0x88
  4160ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ef:	sub    eax,0x1e4df713
  4160f4:	or     ebx,DWORD PTR [ebp+0x3cd46eb]
  4160fa:	jle    0x416115
  4160fc:	adc    DWORD PTR [edx+0x2e3f2965],esi
  416102:	jge    0x41614a
  416104:	dec    eax
  416105:	cmc    
  416106:	and    ch,al
  416108:	sbb    eax,DWORD PTR [esi]
  41610a:	cmp    al,0xc8
  41610c:	jae    0x4160ff
  41610e:	aas    
  41610f:	aaa    
  416110:	mov    edx,edx
  416112:	pop    ecx
  416113:	sub    ebx,DWORD PTR [esi+ebp*4]
  416116:	into   
  416117:	add    al,0x15
  416119:	xor    esi,edi
  41611b:	sbb    eax,0x4eb71645
  416120:	fsub   QWORD PTR [ecx]
  416122:	js     0x4160a9
  416124:	aaa    
  416125:	xchg   bl,dh
  416127:	fisubr DWORD PTR [edx-0x68]
  41612a:	mov    esp,0x93334a1d
  41612f:	adc    bh,BYTE PTR [edx+0x2ffa822a]
  416135:	mov    ?,WORD PTR [esi+edx*2-0xda3dddd]
  41613c:	enter  0xa0eb,0xc3
  416140:	pop    esp
  416141:	cmp    WORD PTR [ebx+0x73018263],0x15
  416149:	sub    al,0x43
  41614b:	mov    ds:0xcbad6e25,eax
  416150:	lds    edx,FWORD PTR [esi+edx*2-0x569e202f]
  416157:	jmp    0x7f1c184f
  41615c:	rcr    WORD PTR [edx+0x4e],0x5f
  416161:	stc    
  416162:	add    BYTE PTR [eax],ah
  416164:	mov    ebp,0x5d4e3066
  416169:	mov    cl,0x71
  41616b:	mov    esi,0xfc1a38c5
  416170:	into   
  416171:	fisttp QWORD PTR [ecx-0x2682e473]
  416177:	fdivr  DWORD PTR [ebx-0x75eda44a]
  41617d:	lods   eax,DWORD PTR ds:[esi]
  41617e:	mov    ebx,0x997083f2
  416183:	fbstp  TBYTE PTR [esp+eax*8+0x67]
  416187:	sbb    eax,0xc142f97e
  41618c:	push   eax
  41618d:	mov    bl,BYTE PTR [eax-0x4e]
  416190:	iret   
  416191:	mul    DWORD PTR [ebx+0x55]
  416194:	push   0x18
  416196:	stos   DWORD PTR es:[edi],eax
  416197:	out    dx,eax
  416198:	or     DWORD PTR [esi-0x769c6499],edx
  41619e:	push   esp
  41619f:	jmp    0x2da:0x48ad0eed
  4161a6:	in     al,0x15
  4161a8:	xchg   ebx,eax
  4161a9:	pop    edi
  4161aa:	sub    ah,BYTE PTR [ebx]
  4161ac:	and    BYTE PTR [esi+0x1c],bh
  4161af:	mov    ?,WORD PTR [edx+edx*4+0x614a6196]
  4161b6:	pusha  
  4161b7:	fidivr DWORD PTR [esi+0x44]
  4161ba:	mov    esi,0x6969bc23
  4161bf:	and    BYTE PTR [edx+0x27425bb6],cl
  4161c5:	dec    ebx
  4161c6:	(bad)  
  4161c7:	out    0xd8,eax
  4161c9:	sub    eax,0x13ae1aab
  4161ce:	es push ds
  4161d0:	test   edx,ebp
  4161d2:	or     BYTE PTR [edi+eax*1+0x34],0xd1
  4161d7:	pushf  
  4161d8:	(bad)  
  4161da:	xchg   esi,eax
  4161db:	dec    esi
  4161dc:	sub    ebp,ecx
  4161de:	cmp    BYTE PTR [eax-0x56],0xde
  4161e2:	sbb    DWORD PTR [esi-0x72],esi
  4161e5:	jl     0x4161de
  4161e7:	into   
  4161e8:	lods   al,BYTE PTR ds:[esi]
  4161e9:	cmp    eax,0x326d781c
  4161ee:	outs   dx,DWORD PTR ds:[esi]
  4161ef:	dec    ecx
  4161f0:	aas    
  4161f1:	lahf   
  4161f2:	dec    edi
  4161f3:	jl     0x416265
  4161f5:	pop    es
  4161f6:	jp     0x4161f8
  4161f8:	ret    
  4161f9:	jae    0x41619f
  4161fb:	mov    edx,0xc5521ab8
  416200:	xor    dl,BYTE PTR [edx-0x7dd3db01]
  416206:	adc    al,0xf5
  416208:	(bad)  
  416209:	icebp  
  41620a:	scas   al,BYTE PTR es:[edi]
  41620b:	call   0x3daf:0xc649eabd
  416212:	int    0x5b
  416214:	jmp    0x416292
  416216:	add    eax,0xd3a712ba
  41621b:	imul   ecx,DWORD PTR [esi-0x18],0x4e
  41621f:	mov    ah,0x2a
  416221:	mov    al,0x3f
  416223:	test   eax,0x66cb9466
  416228:	mov    ebx,0xb1de920f
  41622d:	call   0x6fc2e3f3
  416232:	retf   0xcefd
  416235:	out    dx,eax
  416236:	sbb    al,0x59
  416238:	cmp    BYTE PTR [edx],dl
  41623a:	ret    0xa138
  41623d:	adc    ah,al
  41623f:	loop   0x416257
  416241:	inc    esp
  416242:	cwde   
  416243:	and    BYTE PTR [ecx],0xa8
  416246:	and    bl,BYTE PTR [eax]
  416248:	mov    ah,0x91
  41624a:	cli    
  41624b:	mov    ah,0xd9
  41624d:	mov    gs,WORD PTR [edx]
  41624f:	repz push ecx
  416251:	or     DWORD PTR [edx-0x62],esi
  416254:	mov    BYTE PTR [edx-0x2],bl
  416257:	pop    ds
  416258:	iret   
  416259:	mov    ah,0x12
  41625b:	xchg   ecx,eax
  41625c:	hlt    
  41625d:	icebp  
  41625e:	add    al,0x53
  416260:	dec    eax
  416261:	fcom   DWORD PTR [ecx+edx*8]
  416264:	fimul  WORD PTR [esi]
  416266:	fs mov bl,0x8b
  416269:	gs sbb al,0x49
  41626c:	cmp    BYTE PTR [esi+0x7770c75],al
  416272:	lock adc al,0x60
  416275:	imul   edi,ebp,0x670bd9d5
  41627b:	ret    0x1474
  41627e:	lahf   
  41627f:	std    
  416280:	inc    ecx
  416281:	and    dh,dh
  416283:	retf   
  416284:	add    BYTE PTR [ecx-0x1e1b45d4],bh
  41628a:	bound  esi,QWORD PTR [edi+edx*4-0x508de3f8]
  416291:	pop    edx
  416292:	push   ecx
  416293:	add    dh,BYTE PTR [esi]
  416295:	sti    
  416296:	aad    0x1e
  416298:	(bad)  
  416299:	fimul  DWORD PTR [eax+ebx*1+0x76]
  41629d:	push   esi
  41629e:	in     al,0x9d
  4162a0:	adc    eax,0x5c2ca56b
  4162a5:	outs   dx,BYTE PTR ds:[esi]
  4162a6:	pop    esp
  4162a7:	cmp    esi,DWORD PTR [esi]
  4162a9:	(bad)  gs:[esi-0x7c]
  4162ad:	or     al,0xaa
  4162af:	lock mov DWORD PTR [ebx-0x61601352],0x3f475fb9
  4162ba:	add    cl,BYTE PTR [eax+0x8]
  4162bd:	mov    ecx,cs
  4162bf:	add    al,dh
  4162c1:	adc    dh,al
  4162c3:	mov    al,0xb9
  4162c5:	imul   edi,DWORD PTR [ecx-0x4],0x76
  4162c9:	mov    edi,0x660f12f7
  4162ce:	ror    BYTE PTR [edx+0x35e71625],cl
  4162d4:	add    ch,BYTE PTR [edx+0x340f1e59]
  4162da:	imul   edi,DWORD PTR [edx+esi*2-0x76],0xba6b93f5
  4162e2:	cmp    eax,0x38cc3c51
  4162e7:	or     eax,0x6e106ab3
  4162ec:	fs mov cl,0x7a
  4162ef:	mov    bl,0x24
  4162f1:	arpl   WORD PTR [esi-0x2b],di
  4162f4:	test   ebx,edx
  4162f6:	cli    
  4162f7:	pusha  
  4162f8:	inc    ecx
  4162f9:	ins    BYTE PTR es:[edi],dx
  4162fa:	scas   eax,DWORD PTR es:[edi]
  4162fb:	in     al,0x5c
  4162fd:	push   ebp
  4162fe:	mov    al,0x4b
  416300:	sub    BYTE PTR [eax+0x5eb8f7d8],ah
  416306:	inc    edx
  416307:	mov    cl,0x2c
  416309:	pop    ebx
  41630a:	dec    eax
  41630b:	xor    ebx,0x2b
  41630e:	fnstcw WORD PTR [eax-0x5e87362f]
  416314:	pop    ebx
  416315:	xlat   BYTE PTR ds:[ebx]
  416316:	xchg   ebx,eax
  416317:	dec    edi
  416318:	jb     0x416379
  41631a:	je     0x41634d
  41631c:	mov    ah,0x35
  41631e:	jno    0x4162fc
  416320:	xchg   esi,eax
  416321:	sub    DWORD PTR [ecx-0x538eb3d0],esp
  416327:	push   edx
  416328:	mov    ah,BYTE PTR ss:[esp+ebx*4+0x15]
  41632d:	(bad)
  416331:	arpl   WORD PTR [edi],sp
  416333:	(bad)  
  416334:	mov    bh,0x7a
  416336:	ror    BYTE PTR [edi+edi*8],cl
  416339:	jl     0x416377
  41633b:	sbb    ecx,esp
  41633d:	jl     0x416340
  41633f:	mov    DWORD PTR [esi*2-0x7ac503c2],esp
  416346:	xchg   edi,eax
  416347:	dec    ebp
  416348:	out    dx,eax
  416349:	inc    esi
  41634a:	scas   al,BYTE PTR es:[edi]
  41634b:	dec    ebp
  41634c:	jb     0x41632b
  41634e:	jo     0x4162fd
  416350:	pusha  
  416351:	cwde   
  416352:	mov    dh,BYTE PTR [edx+ebp*1+0x6cf6ddea]
  416359:	add    edi,eax
  41635b:	inc    ebx
  41635c:	xchg   edx,eax
  41635d:	iret   
  41635e:	xor    ebp,DWORD PTR [eax-0x12d49227]
  416364:	or     esi,edx
  416366:	loopne 0x416320
  416368:	or     ebx,ebp
  41636a:	(bad)  
  41636b:	add    al,0xe6
  41636d:	xchg   DWORD PTR [edx],edx
  41636f:	or     eax,0x44483edf
  416374:	jne    0x416394
  416376:	push   es
  416377:	(bad)  
  416378:	mov    bh,0xe6
  41637a:	jb     0x4163fa
  41637c:	mov    ah,0xbb
  41637e:	pusha  
  41637f:	push   eax
  416380:	and    BYTE PTR ds:0xb3b17b92,cl
  416386:	xor    ebp,DWORD PTR [ebx]
  416388:	nop
  416389:	cmp    al,0x66
  41638b:	fisttp WORD PTR [esi+esi*2+0x41]
  41638f:	rcl    BYTE PTR [ebx],0x19
  416392:	(bad)  [eax+0x5a]
  416395:	xchg   BYTE PTR [eax],ah
  416397:	loope  0x416398
  416399:	push   ss
  41639a:	aam    0xdc
  41639c:	adc    esp,edi
  41639e:	pop    edi
  41639f:	sbb    eax,0x54e2903f
  4163a4:	repz mov edx,0xd521908c
  4163aa:	jecxz  0x416336
  4163ac:	neg    BYTE PTR [edx]
  4163ae:	xchg   ebp,eax
  4163af:	xor    BYTE PTR [edx-0x7a],0x56
  4163b3:	adc    eax,0xe6f67372
  4163b8:	xor    BYTE PTR [edx-0x3c],0x33
  4163bc:	mov    cl,0x17
  4163be:	or     DWORD PTR [esp+edi*1+0x5ceb2666],esi
  4163c5:	adc    al,0xc
  4163c7:	push   esi
  4163c8:	xchg   edi,eax
  4163c9:	cmp    eax,0xed057e12
  4163ce:	jg     0x41641b
  4163d0:	aam    0x5a
  4163d2:	sbb    BYTE PTR [eax+edi*2],0x1c
  4163d6:	mov    ah,0xf
  4163d8:	sub    eax,0xe5b704d5
  4163dd:	push   edi
  4163de:	loope  0x416459
  4163e0:	ja     0x416412
  4163e2:	inc    eax
  4163e3:	mov    esi,0x5f87a174
  4163e8:	dec    edi
  4163e9:	push   eax
  4163ea:	pop    ecx
  4163eb:	mov    ebp,0xe2c098de
  4163f0:	xchg   esp,eax
  4163f1:	xchg   esi,eax
  4163f2:	fs cli 
  4163f4:	jge    0x416441
  4163f6:	xor    al,0x8
  4163f8:	inc    esi
  4163f9:	nop
  4163fa:	jo     0x4163e8
  4163fc:	xor    DWORD PTR es:[esi],0xffffffac
  416400:	dec    edi
  416401:	mov    esi,0x6712de01
  416406:	enter  0x490a,0x9f
  41640a:	mov    eax,ds:0x27cc2e6f
  41640f:	mul    BYTE PTR [eax-0x5c]
  416412:	in     eax,dx
  416413:	mov    ah,0xb5
  416416:	sahf   
  416417:	cmc    
  416418:	jno    0x4163c9
  41641a:	pusha  
  41641b:	cs (bad) 
  41641d:	out    0xe,al
  41641f:	lods   al,BYTE PTR ds:[esi]
  416420:	es (bad) 
  416422:	cli    
  416423:	xor    al,0xaa
  416425:	inc    eax
  416426:	fldl2e 
  416428:	push   esp
  416429:	outs   dx,BYTE PTR ds:[esi]
  41642a:	fucomip st,st(4)
  41642c:	jb     0x416425
  41642e:	mov    BYTE PTR [ebp+0x4895028e],cl
  416434:	data16 (bad) 
  416436:	bound  ebp,QWORD PTR [eax-0x73ee21ff]
  41643c:	mov    DWORD PTR [ebp+0x49824476],ecx
  416442:	(bad)  
  416443:	push   edx
  416444:	xor    DWORD PTR [eax+0x4d],esi
  416447:	pop    ds
  416448:	test   al,0xb7
  41644a:	call   0x7a2cd0d5
  41644f:	leave  
  416450:	cmp    bh,BYTE PTR [eax+ebx*4]
  416453:	loop   0x416438
  416455:	push   es
  416456:	stos   BYTE PTR es:[edi],al
  416457:	leave  
  416458:	stos   DWORD PTR es:[edi],eax
  416459:	inc    esi
  41645a:	(bad)  
  41645b:	and    ah,BYTE PTR [edx]
  41645d:	call   DWORD PTR [esi-0x6937404a]
  416463:	rcr    BYTE PTR [ecx],0xfc
  416466:	rcl    DWORD PTR [esi-0x2a],1
  416469:	xor    eax,0xa75a2b00
  41646e:	cmp    DWORD PTR [esi],esp
  416470:	idiv   ch
  416472:	jp     0x4163fb
  416474:	push   esp
  416475:	dec    eax
  416476:	jge    0x416407
  416478:	bnd jns 0x416446
  41647b:	repz (bad) 
  41647d:	mov    esi,0x8ef64ef3
  416482:	fldcw  WORD PTR [edx+0x38]
  416485:	in     al,dx
  416486:	out    0x15,eax
  416488:	mov    BYTE PTR [ecx-0x77],ah
  41648b:	xchg   ebx,eax
  41648c:	lods   eax,DWORD PTR ds:[esi]
  41648d:	jno    0x416453
  41648f:	jp     0x41643b
  416491:	and    DWORD PTR ds:0x676b6e9f,ecx
  416497:	xor    ebx,DWORD PTR [ecx-0x25]
  41649a:	cmp    cl,bl
  41649c:	pop    es
  41649d:	stc    
  41649e:	cmc    
  41649f:	or     bh,0x31
  4164a2:	aaa    
  4164a3:	loope  0x41642a
  4164a5:	push   edx
  4164a6:	imul   ecx,esi,0x39
  4164a9:	adc    eax,0xc05db0ce
  4164ae:	into   
  4164af:	pop    esi
  4164b0:	ins    DWORD PTR es:[edi],dx
  4164b1:	sbb    al,0xb1
  4164b3:	retf   
  4164b4:	add    eax,DWORD PTR [ecx-0x559f5e72]
  4164ba:	mov    WORD PTR [ecx],ss
  4164bc:	data16 (bad) 
  4164be:	pushf  
  4164bf:	xchg   DWORD PTR [ecx],esi
  4164c1:	mov    ebx,0xfc66efb1
  4164c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c7:	adc    eax,DWORD PTR [edx]
  4164c9:	aaa    
  4164ca:	lea    eax,[edi-0x18]
  4164cd:	sub    al,0x63
  4164cf:	xchg   esi,eax
  4164d0:	inc    eax
  4164d1:	jb     0x416456
  4164d3:	xchg   ebp,eax
  4164d4:	adc    al,0xed
  4164d6:	stc    
  4164d7:	or     BYTE PTR [edx],ch
  4164d9:	add    edx,esp
  4164db:	out    0xa8,al
  4164dd:	loop   0x41650a
  4164df:	push   0xa4a73c41
  4164e4:	push   ds
  4164e5:	enter  0xe88c,0xa0
  4164e9:	mov    bl,0x96
  4164eb:	mov    ?,WORD PTR [edx+0xe]
  4164ee:	mov    ?,ecx
  4164f0:	push   esp
  4164f1:	aad    0x10
  4164f3:	fcom   DWORD PTR [ebp+0x68fe10d9]
  4164f9:	push   cs
  4164fa:	cdq    
  4164fb:	out    dx,al
  4164fc:	mov    WORD PTR [ecx+0x1d],ss
  4164ff:	jmp    0x9445:0x6cad2fda
  416506:	ins    DWORD PTR es:[edi],dx
  416507:	retf   
  416508:	sub    dl,BYTE PTR ds:0x8c6f3f7c
  41650e:	mov    ebp,0x811c6e46
  416513:	sub    BYTE PTR [esi-0x75],cl
  416516:	outs   dx,DWORD PTR ds:[esi]
  416517:	clc    
  416518:	mov    ah,BYTE PTR [edi+ebp*1+0x6f]
  41651c:	add    DWORD PTR [edi],ebx
  41651e:	out    0xb3,al
  416520:	mov    ebp,0x39b0af16
  416525:	push   ecx
  416526:	adc    al,0x2a
  416528:	fisttp QWORD PTR [edi-0x37]
  41652b:	mov    esi,0xe71abf1e
  416530:	mov    ah,0x95
  416532:	ins    BYTE PTR es:[edi],dx
  416533:	dec    ebx
  416534:	ds mov ch,0xab
  416537:	mov    DWORD PTR ds:0x33712de6,edx
  41653d:	mov    eax,ds:0x9589c409
  416542:	mov    al,ds:0xf25736a8
  416547:	lods   al,BYTE PTR ds:[esi]
  416548:	lods   al,BYTE PTR ds:[esi]
  416549:	mov    bl,0x10
  41654b:	and    eax,DWORD PTR [ebx]
  41654d:	mov    esi,0xd36c96cd
  416552:	add    eax,0x818305a1
  416557:	or     ah,BYTE PTR [edx+0xa]
  41655a:	lahf   
  41655b:	lds    esp,FWORD PTR [edx-0x37]
  41655e:	mov    esp,0x68eb27c6
  416563:	sbb    DWORD PTR [ebx],0x226043f6
  416569:	pop    es
  41656a:	cmc    
  41656b:	daa    
  41656c:	pusha  
  41656d:	adc    edx,ecx
  41656f:	mov    bh,0xc7
  416571:	addr16 push esi
  416573:	cmp    esi,DWORD PTR [eax+0x7c]
  416576:	pop    esi
  416577:	lahf   
  416578:	mov    bh,0xc6
  41657a:	call   DWORD PTR [ecx]
  41657c:	sub    eax,0x9518157c
  416581:	jne    0x41659f
  416583:	dec    ebp
  416584:	lock aaa 
  416586:	cs es mov esi,0x3f1523b9
  41658d:	jbe    0x41652a
  41658f:	out    dx,eax
  416590:	pandn  mm2,QWORD PTR [ebp-0x73490b14]
  416597:	pop    ds
  416598:	das    
  416599:	add    esi,DWORD PTR [esi-0x27]
  41659c:	(bad)  
  41659d:	adc    eax,0xf5ef5b24
  4165a2:	mov    BYTE PTR [ebx],0x19
  4165a5:	xor    ch,BYTE PTR [ecx-0x42]
  4165a8:	adc    al,0x32
  4165aa:	test   eax,0x6c85eafd
  4165af:	inc    edx
  4165b0:	pop    ebx
  4165b1:	fcomp  QWORD PTR [edx+0x7f4a60f2]
  4165b7:	nop
  4165b8:	push   eax
  4165b9:	mov    WORD PTR [esi-0x15dd6ebb],ds
  4165bf:	adc    al,0xdc
  4165c1:	xchg   ebp,eax
  4165c2:	shr    BYTE PTR [eax+esi*2-0x3aa0ef10],1
  4165c9:	sbb    eax,0xf136b205
  4165ce:	xchg   ecx,eax
  4165cf:	loop   0x416592
  4165d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d2:	clc    
  4165d3:	mov    ebp,0x576b8426
  4165d8:	test   BYTE PTR ds:0x3905fc7,bl
  4165de:	dec    edi
  4165df:	shl    DWORD PTR [eax-0x5f],1
  4165e2:	rcr    BYTE PTR [esi+0x37],0x1
  4165e6:	jle    0x416648
  4165e8:	ins    BYTE PTR es:[edi],dx
  4165e9:	adc    edx,DWORD PTR [edi-0x46af1a3a]
  4165ef:	ret    
  4165f0:	popf   
  4165f1:	xchg   ecx,eax
  4165f2:	mov    ch,0xe1
  4165f4:	inc    esi
  4165f5:	(bad)  
  4165f6:	cmp    eax,0xabce88f4
  4165fb:	iret   
  4165fc:	push   ds
  4165fd:	popf   
  4165fe:	(bad)  [ebx-0x40]
  416601:	or     ch,bl
  416603:	or     ebx,eax
  416605:	jmp    0xfe18:0x23d7b73
  41660c:	sbb    DWORD PTR [ebp*1+0x362e446a],0x50f159f5
  416617:	and    eax,0x39
  41661a:	xor    dl,dl
  41661c:	jge    0x41662f
  41661e:	pop    esp
  41661f:	out    0x39,al
  416621:	pop    edi
  416622:	inc    eax
  416623:	xchg   edi,ebp
  416625:	sub    eax,0x73ca5f1
  41662a:	dec    ebx
  41662b:	mov    bl,0xee
  41662d:	cmp    eax,0x509ed353
  416632:	xchg   DWORD PTR [ebx],eax
  416634:	clc    
  416635:	sar    DWORD PTR [eax-0x75ab0fb4],1
  41663b:	mov    edx,0x71af1c93
  416640:	mov    edx,0xf4ff4276
  416645:	in     al,0x83
  416647:	pusha  
  416648:	cli    
  416649:	jg     0x416659
  41664b:	add    BYTE PTR [esi+0x643660db],0x36
  416652:	fwait
  416653:	pop    ss
  416654:	adc    DWORD PTR [ebx-0x65],edx
  416657:	push   0xbd8de007
  41665c:	sti    
  41665d:	dec    edx
  41665e:	test   BYTE PTR [esi-0x57e9a23],bl
  416664:	(bad)  
  416665:	mov    dh,0xef
  416667:	ss push cs
  416669:	sbb    BYTE PTR [ebp+0x13],bh
  41666c:	idiv   ebp
  41666e:	loope  0x416607
  416670:	leave  
  416671:	iret   
  416672:	sti    
  416673:	mov    ecx,0xecdd60a9
  416678:	mov    eax,ds:0x444677fb
  41667d:	leave  
  41667e:	mov    edx,DWORD PTR [esi+0x51]
  416681:	(bad)  
  416682:	sbb    BYTE PTR [ebx+eax*2],al
  416685:	xor    cl,BYTE PTR [ecx-0x12]
  416688:	dec    edi
  416689:	add    dh,ch
  41668b:	mov    ebp,esi
  41668d:	test   BYTE PTR [ebx-0x72352773],bl
  416693:	pop    edx
  416694:	add    DWORD PTR [ebx],edx
  416696:	out    0xd2,al
  416698:	rcr    ch,1
  41669a:	add    al,0xd7
  41669c:	dec    eax
  41669d:	add    ah,BYTE PTR [ebx+ebp*1]
  4166a0:	fmulp  st(6),st
  4166a2:	xchg   edi,eax
  4166a3:	shl    DWORD PTR es:[esi+edx*8],0xf3
  4166a8:	mov    ds:0xdd68b78d,eax
  4166ad:	daa    
  4166ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166af:	push   edx
  4166b0:	cmc    
  4166b1:	xor    al,0xb
  4166b3:	mov    edi,0x7f9a904e
  4166b8:	xchg   ebp,eax
  4166b9:	inc    edi
  4166ba:	jmp    0x416660
  4166bc:	push   ds
  4166bd:	fs push ebx
  4166bf:	clc    
  4166c0:	inc    edx
  4166c1:	cmp    ebp,esp
  4166c3:	les    esi,FWORD PTR [ebp+ebx*8-0x1]
  4166c7:	pop    esi
  4166c8:	bound  edi,QWORD PTR [edx+eax*4]
  4166cb:	cmp    dl,BYTE PTR [esi+0x4f718e8]
  4166d1:	pop    esp
  4166d2:	stos   DWORD PTR es:[edi],eax
  4166d3:	sub    ebx,eax
  4166d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d6:	outs   dx,DWORD PTR ds:[esi]
  4166d7:	mov    ecx,0x5ba7f6eb
  4166dc:	jecxz  0x4166f1
  4166de:	push   0x48
  4166e0:	push   0xf03fefb6
  4166e5:	mov    bl,0xcb
  4166e7:	mov    ds:0x3bda9f27,eax
  4166ec:	mov    ss,WORD PTR [esi]
  4166ee:	dec    ebx
  4166ef:	lds    ebx,FWORD PTR [edi]
  4166f1:	test   BYTE PTR [ebx+0x1260faac],al
  4166f7:	mov    ah,0xff
  4166f9:	js     0x4166b5
  4166fb:	pop    esp
  4166fc:	xor    al,0xb5
  4166fe:	mov    eax,ds:0x4fc62227
  416703:	push   0x940b6b45
  416708:	pop    ebx
  416709:	shl    DWORD PTR [ebp+0x3a],0xb6
  41670d:	(bad)  
  41670f:	xchg   ebx,eax
  416710:	in     al,0xb6
  416712:	(bad)  
  416713:	fldcw  WORD PTR [edx-0x1930b0d8]
  416719:	mov    ecx,0xecef6f5d
  41671e:	in     al,dx
  41671f:	jns    0x41677c
  416721:	adc    BYTE PTR [ebx+0x38],cl
  416724:	inc    ecx
  416725:	mov    WORD PTR [esi+0x52d7e169],?
  41672b:	dec    esi
  41672c:	pusha  
  41672d:	jmp    0x549b0ef0
  416732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416733:	mov    ch,0x75
  416735:	pop    es
  416736:	push   ds
  416737:	pop    es
  416738:	mov    bh,0x37
  41673a:	call   0x5813:0x1e192aac
  416741:	call   0xb195:0x821f62f2
  416748:	jbe    0x41671c
  41674a:	imul   ebx,DWORD PTR [eax-0x40],0x73848e41
  416751:	nop    edi
  416754:	mov    eax,0x212456b5
  416759:	pop    ebx
  41675a:	shl    BYTE PTR [ebp+0x46fd03a3],1
  416760:	jae    0x41679c
  416762:	xchg   ecx,eax
  416763:	mov    ecx,0x64902494
  416768:	popf   
  416769:	fistp  QWORD PTR [edi-0x4ab91a6b]
  41676f:	out    0x2f,al
  416771:	xor    DWORD PTR [ecx-0x16],esi
  416774:	ds pop es
  416776:	jmp    0xebe8:0x571bf5eb
  41677d:	pop    ebp
  41677e:	or     bh,bh
  416780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416781:	sbb    cl,al
  416783:	jge    0x416744
  416785:	jnp    0x416776
  416787:	jl     0x4167ca
  416789:	ds mov ch,0xe
  41678c:	sbb    BYTE PTR ds:0x3a701da9,bh
  416792:	xor    eax,0x5e86aad
  416797:	hlt    
  416798:	and    esi,DWORD PTR [eax-0x3b]
  41679b:	mov    eax,0x308b807e
  4167a0:	paddusb mm7,QWORD PTR [ebp-0x7d91b460]
  4167a7:	(bad)  
  4167a8:	sbb    dh,al
  4167aa:	dec    ebp
  4167ab:	test   BYTE PTR [esi+0x41],dl
  4167ae:	ins    DWORD PTR es:[edi],dx
  4167af:	dec    eax
  4167b0:	call   0xbfacbfa6
  4167b5:	call   DWORD PTR ds:0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x28275306
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xc9baa6e0
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	or     al,0x99
  4169cf:	inc    ecx
  4169d0:	pop    edi
  4169d1:	daa    
  4169d2:	jecxz  0x41698c
  4169d4:	xlat   BYTE PTR ds:[ebx]
  4169d5:	shr    DWORD PTR [edi+ebx*2-0x25],0x2f
  4169da:	mov    esi,0x24e7d1c3
  4169df:	jecxz  0x416999
  4169e1:	xlat   BYTE PTR ds:[ebx]
  4169e2:	lds    ebp,FWORD PTR [edi+ebx*2-0x65]
  4169e6:	rol    BYTE PTR [ecx-0x3d],1
  4169e9:	rcr    DWORD PTR [edi+0x24],1
  4169ec:	jecxz  0x4169a6
  4169ee:	xlat   BYTE PTR ds:[ebx]
  4169ef:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  4169f3:	rol    BYTE PTR [ecx-0x3d],1
  4169f6:	rcr    DWORD PTR [edi+0x24],1
  4169f9:	jecxz  0x4169b3
  4169fb:	xlat   BYTE PTR ds:[ebx]
  4169fc:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416a00:	rol    BYTE PTR [ecx-0x3d],1
  416a03:	rcr    DWORD PTR [edi+0x24],1
  416a06:	jecxz  0x4169c0
  416a08:	xlat   BYTE PTR ds:[ebx]
  416a09:	int    0x6d
  416a0b:	pop    edi
  416a0c:	fcmovnu st,st(6)
  416a0e:	pop    esi
  416a0f:	jns    0x4169f0
  416a11:	pop    edi
  416a12:	nop
  416a13:	jmp    0x1613:0x6d7df675
  416a1a:	icebp  
  416a1b:	adc    eax,0x42cb8ab
  416a20:	xchg   ebx,eax
  416a21:	retf   0xa2b8
  416a24:	push   ds
  416a25:	ds mov dh,0xf0
  416a28:	and    ah,BYTE PTR [edx-0x68b4ce41]
  416a2e:	cwde   
  416a2f:	mov    ch,0xa0
  416a31:	dec    esp
  416a32:	sub    eax,0xaa61beae
  416a37:	mov    edi,0xebac607f
  416a3c:	imul   DWORD PTR [eax-0x141c4fd]
  416a42:	dec    esp
  416a43:	into   
  416a44:	fstp   TBYTE PTR [ebx+0x24]
  416a47:	jecxz  0x416a01
  416a49:	xlat   BYTE PTR ds:[ebx]
  416a4a:	lds    ebp,FWORD PTR [edi+ebx*2-0x5f]
  416a4e:	pop    ds
  416a4f:	push   edi
  416a50:	dec    ebp
  416a51:	out    dx,eax
  416a52:	icebp  
  416a53:	pop    esp
  416a54:	xchg   BYTE PTR ds:[ecx-0x43],bh
  416a58:	mov    cl,0x61
  416a5a:	jne    0x416a04
  416a5c:	pushf  
  416a5d:	out    0xe2,al
  416a5f:	mov    ecx,0xaf16c1f9
  416a64:	sbb    BYTE PTR [ecx+0x6c],cl
  416a67:	or     DWORD PTR ds:0x82a96dfe,ecx
  416a6d:	add    eax,edx
  416a6f:	imul   ecx,DWORD PTR [edx],0xffffffd0
  416a72:	ret    0x627
  416a75:	sbb    DWORD PTR [ecx-0x759bf3f0],0x13e0659b
  416a7f:	xchg   edi,eax
  416a80:	sub    ah,0x7e
  416a83:	cmp    DWORD PTR [esi],ebx
  416a85:	out    0x89,al
  416a87:	iret   
  416a88:	ds popf 
  416a8a:	jns    0x416a49
  416a8c:	mov    cl,0x61
  416a8e:	jne    0x416a39
  416a90:	pushf  
  416a91:	mov    bh,BYTE PTR [esi+0x27]
  416a94:	stc    
  416a95:	and    DWORD PTR [esi],esi
  416a97:	mov    ebp,0xa3f15c18
  416a9c:	or     eax,0x8206f064
  416aa1:	pop    ebp
  416aa2:	dec    ebp
  416aa3:	ror    BYTE PTR [edx],0xe0
  416aa6:	pop    edi
  416aa7:	mov    ebp,0xbbefef06
  416aac:	or     al,0x7a
  416aae:	pop    ss
  416aaf:	push   es
  416ab0:	gs call 0x89c37f21
  416ab6:	mov    ecx,0xf1efab22
  416abb:	pop    esp
  416abc:	ds mov eax,0x5f6cc5d7
  416ac2:	fcmovnbe st,st(0)
  416ac4:	inc    ecx
  416ac5:	ret    
  416ac6:	rcr    DWORD PTR [edi+0x24],1
  416ac9:	jecxz  0x416a83
  416acb:	xlat   BYTE PTR ds:[ebx]
  416acc:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416ad0:	rol    BYTE PTR [ecx-0x3d],1
  416ad3:	rcr    DWORD PTR [edi+0x74],1
  416ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ad7:	mov    eax,0x5c6d89d7
  416adc:	(bad)  [esi+0x5f9e8e0f]
  416ae2:	and    al,0xe3
  416ae4:	mov    eax,0x5f6cc5d7
  416ae9:	cmp    edx,eax
  416aeb:	inc    ebx
  416aec:	ret    0x5eda
  416aef:	cs jecxz 0x416aaa
  416af2:	xor    eax,0x5f5f6cc1
  416af7:	(bad)  
  416af8:	inc    ecx
  416af9:	ret    
  416afa:	rcr    DWORD PTR [edi+0x24],1
  416afd:	mov    al,ds:0x6cc5d705
  416b02:	dec    edi
  416b03:	fcmovnbe st,st(0)
  416b05:	inc    ecx
  416b06:	ret    
  416b07:	aam    0x5f
  416b09:	and    al,0xe3
  416b0b:	clc    
  416b0c:	xlat   BYTE PTR ds:[ebx]
  416b0d:	lds    edi,FWORD PTR [edi+ebx*2-0x25]
  416b11:	rol    BYTE PTR [ebx-0x3d],1
  416b14:	rcr    DWORD PTR [edx+0x24],1
  416b17:	loop   0x416ad1
  416b19:	xlat   BYTE PTR ds:[ebx]
  416b1a:	lds    ebp,FWORD PTR [edi+ebx*2-0x22]
  416b1e:	rol    BYTE PTR [eax-0x3d],1
  416b21:	rcr    DWORD PTR [edi+0x24],1
  416b24:	jecxz  0x416ade
  416b26:	out    0xc9,eax
  416b28:	ins    BYTE PTR es:[edi],dx
  416b29:	pop    edi
  416b2a:	(bad)  
  416b2c:	inc    ecx
  416b2d:	leave  
  416b2e:	das    
  416b2f:	pop    ebx
  416b30:	and    al,0xe1
  416b32:	mov    eax,0x5f6c4497
  416b37:	retf   
  416b38:	rol    BYTE PTR [ecx-0x2d],1
  416b3b:	rcr    DWORD PTR [edi+0x24],1
  416b3e:	jecxz  0x416ae8
  416b40:	xlat   BYTE PTR ds:[ebx]
  416b41:	lds    edi,FWORD PTR [edi+ebx*2-0x25]
  416b45:	rol    BYTE PTR [ecx-0x3d],1
  416b48:	ror    DWORD PTR [edi+0x24],1
  416b4b:	jecxz  0x416b05
  416b4d:	xlat   BYTE PTR ds:[ebx]
  416b4e:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416b52:	rol    BYTE PTR [ecx-0x3d],1
  416b55:	aad    0x5f
  416b57:	sub    bl,ah
  416b59:	loope  0x416b2f
  416b5b:	lds    ebp,FWORD PTR [edi+ebx*2+0x1b]
  416b5f:	fild   DWORD PTR [ecx-0x6a]
  416b62:	out    dx,al
  416b63:	pop    edi
  416b64:	and    al,0xe3
  416b66:	mov    eax,0x5f6cc5d7
  416b6b:	fcmovnbe st,st(0)
  416b6d:	inc    ecx
  416b6e:	ret    
  416b6f:	rcr    DWORD PTR [edi+0x24],1
  416b72:	jecxz  0x416b2c
  416b74:	xlat   BYTE PTR ds:[ebx]
  416b75:	lds    ecx,FWORD PTR [ebx+edx*2-0x25]
  416b79:	enter  0xc341,0xd1
  416b7d:	pop    edi
  416b7e:	and    al,0xe3
  416b80:	mov    eax,0x5f6cc5d7
  416b85:	fcmovnbe st,st(0)
  416b87:	inc    ecx
  416b88:	ret    
  416b89:	rcr    DWORD PTR [edi+0x24],1
  416b8c:	jecxz  0x416b46
  416b8e:	xlat   BYTE PTR ds:[ebx]
  416b8f:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416b93:	rol    BYTE PTR [ecx-0x3d],1
  416b96:	rcr    DWORD PTR [edi+0x24],1
  416b99:	jecxz  0x416b53
  416b9b:	xlat   BYTE PTR ds:[ebx]
  416b9c:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416ba0:	rol    BYTE PTR [ecx-0x3d],1
  416ba3:	rcr    DWORD PTR [edi+0x24],1
  416ba6:	jecxz  0x416b60
  416ba8:	xlat   BYTE PTR ds:[ebx]
  416ba9:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416bad:	rol    BYTE PTR [ecx-0x3d],1
  416bb0:	rcr    DWORD PTR [edi+0x24],1
  416bb3:	jecxz  0x416b6d
  416bb5:	xlat   BYTE PTR ds:[ebx]
  416bb6:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416bba:	rol    BYTE PTR [ecx-0x3d],1
  416bbd:	rcr    DWORD PTR [edi+0x24],1
  416bc0:	jecxz  0x416b7a
  416bc2:	xlat   BYTE PTR ds:[ebx]
  416bc3:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416bc7:	rol    BYTE PTR [ecx-0x3d],1
  416bca:	rcr    DWORD PTR [edi+0x24],1
  416bcd:	int    0xcc
  416bcf:	mov    dl,0xbd
  416bd1:	sbb    BYTE PTR [edi-0x25],bl
  416bd4:	rol    BYTE PTR [ecx+0x73],1
  416bd7:	ficomp DWORD PTR [edi+0x24]
  416bda:	repz mov eax,0x5b0ac5d7
  416be0:	fcmovnbe st,st(0)
  416be2:	inc    ebp
  416be3:	ret    
  416be4:	ror    DWORD PTR [edi],1
  416be6:	popa   
  416be7:	mov    al,ds:0x6c8a838a
  416bec:	pop    edi
  416bed:	fcmovnbe st,st(0)
  416bef:	inc    ecx
  416bf0:	ret    
  416bf1:	icebp  
  416bf2:	pop    edi
  416bf3:	and    al,0x3
  416bf5:	xchg   esi,eax
  416bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf7:	mov    dh,0x1e
  416bf9:	cmp    al,0xdb
  416bfb:	rol    BYTE PTR [ecx-0x3d],1
  416bfe:	mov    cl,0x5f
  416c00:	and    al,0xe3
  416c02:	js     0x416be0
  416c04:	lds    ebp,FWORD PTR [ebp+ecx*1-0x25]
  416c08:	rol    BYTE PTR [ecx-0x57],1
  416c0b:	aad    0x5f
  416c0d:	and    al,0xe3
  416c0f:	mov    eax,0x5f6cc5d7
  416c14:	fcmovnbe st,st(0)
  416c16:	inc    ecx
  416c17:	ret    
  416c18:	sar    DWORD PTR [edi+0x24],1
  416c1b:	jecxz  0x416c75
  416c1d:	stc    
  416c1e:	mov    bh,0x9
  416c20:	xor    esi,DWORD PTR [ebx+esi*4+0x5dd1c341]
  416c27:	and    al,0xe3
  416c29:	mov    eax,0x5f6cc9f7
  416c2e:	fnop   
  416c30:	inc    ecx
  416c31:	ret    
  416c32:	ins    DWORD PTR es:[edi],dx
  416c33:	pop    ebx
  416c34:	and    al,0xe3
  416c36:	mov    eax,0x5f6cc5d7
  416c3b:	fcmovnbe st,st(0)
  416c3d:	inc    ecx
  416c3e:	ret    
  416c3f:	rcr    DWORD PTR [edi+0x64],1
  416c42:	jecxz  0x416bfc
  416c44:	pop    ss
  416c45:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c49:	rol    BYTE PTR [ecx-0x3d],1
  416c4c:	rcr    DWORD PTR [edi+0x24],1
  416c4f:	jecxz  0x416c09
  416c51:	xlat   BYTE PTR ds:[ebx]
  416c52:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c56:	rol    BYTE PTR [ecx-0x3d],1
  416c59:	rcr    DWORD PTR [edi+0x24],1
  416c5c:	jecxz  0x416c16
  416c5e:	xlat   BYTE PTR ds:[ebx]
  416c5f:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c63:	rol    BYTE PTR [ecx-0x3d],1
  416c66:	rcr    DWORD PTR [edi+0x24],1
  416c69:	jecxz  0x416c23
  416c6b:	xlat   BYTE PTR ds:[ebx]
  416c6c:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c70:	rol    BYTE PTR [ecx-0x3d],1
  416c73:	rcr    DWORD PTR [edi+0x24],1
  416c76:	jecxz  0x416c30
  416c78:	xlat   BYTE PTR ds:[ebx]
  416c79:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c7d:	rol    BYTE PTR [ecx-0x3d],1
  416c80:	rcr    DWORD PTR [edi+0x24],1
  416c83:	jecxz  0x416c3d
  416c85:	xlat   BYTE PTR ds:[ebx]
  416c86:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c8a:	rol    BYTE PTR [ecx-0x3d],1
  416c8d:	rcr    DWORD PTR [edi+0x24],1
  416c90:	jecxz  0x416c4a
  416c92:	xlat   BYTE PTR ds:[ebx]
  416c93:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416c97:	rol    BYTE PTR [ecx-0x3d],1
  416c9a:	rcr    DWORD PTR [edi+0x24],1
  416c9d:	jecxz  0x416c57
  416c9f:	xlat   BYTE PTR ds:[ebx]
  416ca0:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416ca4:	rol    BYTE PTR [ecx-0x3d],1
  416ca7:	rcr    DWORD PTR [edi+0x24],1
  416caa:	jecxz  0x416c64
  416cac:	xlat   BYTE PTR ds:[ebx]
  416cad:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416cb1:	rol    BYTE PTR [ecx-0x3d],1
  416cb4:	rcr    DWORD PTR [edi+0x24],1
  416cb7:	jecxz  0x416c71
  416cb9:	xlat   BYTE PTR ds:[ebx]
  416cba:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416cbe:	rol    BYTE PTR [ecx-0x3d],1
  416cc1:	rcr    DWORD PTR [edi+0x24],1
  416cc4:	jecxz  0x416c7e
  416cc6:	xlat   BYTE PTR ds:[ebx]
  416cc7:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416ccb:	rol    BYTE PTR [ecx-0x3d],1
  416cce:	rcr    DWORD PTR [edi+0x24],1
  416cd1:	jecxz  0x416c8b
  416cd3:	xlat   BYTE PTR ds:[ebx]
  416cd4:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416cd8:	rol    BYTE PTR [ecx-0x3d],1
  416cdb:	rcr    DWORD PTR [edi+0x24],1
  416cde:	jecxz  0x416c98
  416ce0:	xlat   BYTE PTR ds:[ebx]
  416ce1:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416ce5:	rol    BYTE PTR [ecx-0x3d],1
  416ce8:	rcr    DWORD PTR [edi+0x24],1
  416ceb:	jecxz  0x416ca5
  416ced:	xlat   BYTE PTR ds:[ebx]
  416cee:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416cf2:	rol    BYTE PTR [ecx-0x3d],1
  416cf5:	rcr    DWORD PTR [edi+0x24],1
  416cf8:	jecxz  0x416cb2
  416cfa:	xlat   BYTE PTR ds:[ebx]
  416cfb:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416cff:	rol    BYTE PTR [ecx-0x3d],1
  416d02:	rcr    DWORD PTR [edi+0x24],1
  416d05:	jecxz  0x416cbf
  416d07:	xlat   BYTE PTR ds:[ebx]
  416d08:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d0c:	rol    BYTE PTR [ecx-0x3d],1
  416d0f:	rcr    DWORD PTR [edi+0x24],1
  416d12:	jecxz  0x416ccc
  416d14:	xlat   BYTE PTR ds:[ebx]
  416d15:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d19:	rol    BYTE PTR [ecx-0x3d],1
  416d1c:	rcr    DWORD PTR [edi+0x24],1
  416d1f:	jecxz  0x416cd9
  416d21:	xlat   BYTE PTR ds:[ebx]
  416d22:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d26:	rol    BYTE PTR [ecx-0x3d],1
  416d29:	rcr    DWORD PTR [edi+0x24],1
  416d2c:	jecxz  0x416ce6
  416d2e:	xlat   BYTE PTR ds:[ebx]
  416d2f:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d33:	rol    BYTE PTR [ecx-0x3d],1
  416d36:	rcr    DWORD PTR [edi+0x24],1
  416d39:	jecxz  0x416cf3
  416d3b:	xlat   BYTE PTR ds:[ebx]
  416d3c:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d40:	rol    BYTE PTR [ecx-0x3d],1
  416d43:	rcr    DWORD PTR [edi+0x24],1
  416d46:	jecxz  0x416d00
  416d48:	xlat   BYTE PTR ds:[ebx]
  416d49:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d4d:	rol    BYTE PTR [ecx-0x3d],1
  416d50:	rcr    DWORD PTR [edi+0x24],1
  416d53:	jecxz  0x416d0d
  416d55:	xlat   BYTE PTR ds:[ebx]
  416d56:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d5a:	rol    BYTE PTR [ecx-0x3d],1
  416d5d:	rcr    DWORD PTR [edi+0x24],1
  416d60:	jecxz  0x416d1a
  416d62:	xlat   BYTE PTR ds:[ebx]
  416d63:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d67:	rol    BYTE PTR [ecx-0x3d],1
  416d6a:	rcr    DWORD PTR [edi+0x24],1
  416d6d:	jecxz  0x416d27
  416d6f:	xlat   BYTE PTR ds:[ebx]
  416d70:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d74:	rol    BYTE PTR [ecx-0x3d],1
  416d77:	rcr    DWORD PTR [edi+0x24],1
  416d7a:	jecxz  0x416d34
  416d7c:	xlat   BYTE PTR ds:[ebx]
  416d7d:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d81:	rol    BYTE PTR [ecx-0x3d],1
  416d84:	rcr    DWORD PTR [edi+0x24],1
  416d87:	jecxz  0x416d41
  416d89:	xlat   BYTE PTR ds:[ebx]
  416d8a:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d8e:	rol    BYTE PTR [ecx-0x3d],1
  416d91:	rcr    DWORD PTR [edi+0x24],1
  416d94:	jecxz  0x416d4e
  416d96:	xlat   BYTE PTR ds:[ebx]
  416d97:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416d9b:	rol    BYTE PTR [ecx-0x3d],1
  416d9e:	rcr    DWORD PTR [edi+0x24],1
  416da1:	jecxz  0x416d5b
  416da3:	xlat   BYTE PTR ds:[ebx]
  416da4:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416da8:	rol    BYTE PTR [ecx-0x3d],1
  416dab:	rcr    DWORD PTR [edi+0x24],1
  416dae:	jecxz  0x416d68
  416db0:	xlat   BYTE PTR ds:[ebx]
  416db1:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416db5:	rol    BYTE PTR [ecx-0x3d],1
  416db8:	rcr    DWORD PTR [edi+0x24],1
  416dbb:	jecxz  0x416d75
  416dbd:	xlat   BYTE PTR ds:[ebx]
  416dbe:	lds    ebp,FWORD PTR [edi+ebx*2-0x25]
  416dc2:	rol    BYTE PTR [ecx-0x3d],1
  416dc5:	rcr    DWORD PTR [edi+0x24],1
  416dc8:	jecxz  0x416d82
  416dca:	xlat   BYTE PTR ds:[ebx]
  416dcb:	lds    ebp,FWORD PTR [esp+esi*8-0x6b]
  416dcf:	fild   DWORD PTR [ecx-0x14]
  416dd2:	rcr    DWORD PTR [edi+0x34],1
  416dd5:	jecxz  0x416d8f
  416dd7:	std    
  416dd8:	addr16 mov dh,0x2b
  416ddb:	data16 lahf 
  416ddd:	jb     0x416db0
  416ddf:	cli    
  416de0:	sbb    DWORD PTR fs:[ecx*1+0x625c345],ecx
  416de8:	sub    cl,BYTE PTR [edx+esi*8]
  416deb:	rcl    BYTE PTR [esi+0x333bcd64],1
  416df1:	xchg   ebp,eax
  416df2:	mov    ah,0xae
  416df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416df5:	xchg   esp,eax
  416df6:	inc    edi
  416df7:	pop    ds
  416df8:	sbb    al,0x5
  416dfa:	pop    ds
  416dfb:	inc    edi
  416dfc:	mov    ds,WORD PTR [ebx+0x6c]
  416dff:	adc    al,0x49
  416e01:	sbb    al,0xd2
  416e03:	pop    eax
  416e04:	rcl    esp,0x2c
  416e07:	jg     0x416e26
  416e09:	(bad)  
  416e0b:	aad    0x89
  416e0d:	sub    eax,DWORD PTR [edi-0x2f1f8b9]
  416e13:	bound  ebp,QWORD PTR [ecx-0x66500530]
  416e19:	xor    al,0x3e
  416e1b:	xor    BYTE PTR [edi+0x37],al
  416e1e:	push   ecx
  416e1f:	pop    esp
  416e20:	and    ebp,esi
  416e22:	push   ds
  416e23:	dec    esi
  416e24:	cmp    eax,0xb0c6399c
  416e29:	cmp    eax,0x301fd6f1
  416e2e:	les    eax,FWORD PTR [ebx]
  416e30:	mov    cl,0x8d
  416e32:	rol    DWORD PTR [ebp+0x6dbf7999],cl
  416e38:	scas   al,BYTE PTR es:[edi]
  416e39:	mov    esi,0x17930ae9
  416e3e:	les    eax,FWORD PTR [esi-0x41b58b23]
  416e44:	jb     0x416e11
  416e46:	out    0xf2,eax
  416e48:	int    0xc0
  416e4a:	js     0x416e26
  416e4c:	lods   al,BYTE PTR ds:[esi]
  416e4d:	fmul   QWORD PTR [edi-0x2e7a0038]
  416e53:	push   0x8556c223
  416e58:	sahf   
  416e59:	sbb    DWORD PTR [ebx-0x18],0xb8599cca
  416e60:	imul   esi
  416e62:	jg     0x416e22
  416e64:	xchg   ebp,eax
  416e65:	xchg   esp,eax
  416e66:	les    esi,FWORD PTR [esi]
  416e68:	mov    ebx,0x7caf56a
  416e6d:	loope  0x416e99
  416e6f:	pop    es
  416e70:	out    dx,al
  416e71:	sub    dh,BYTE PTR [edi+0x24]
  416e74:	outs   dx,DWORD PTR ds:[esi]
  416e75:	mov    ds:0x1de40eb3,al
  416e7a:	mov    bh,0x10
  416e7c:	inc    edx
  416e7d:	sbb    DWORD PTR [edi],esp
  416e7f:	xchg   ebx,eax
  416e80:	jle    0x416e2f
  416e82:	fdiv   DWORD PTR [edi+0x14845856]
  416e88:	repnz xor edx,DWORD PTR [esp+eax*2]
  416e8c:	adc    BYTE PTR [esi+0x36cc8b66],cl
  416e92:	pusha  
  416e93:	push   ds
  416e94:	rcr    BYTE PTR [edx+0x74],1
  416e97:	stc    
  416e98:	dec    ebx
  416e99:	popa   
  416e9a:	mov    al,ds:0x4ae53c0c
  416e9f:	ror    DWORD PTR [ecx+0x29db71a0],1
  416ea5:	mov    BYTE PTR [edx-0x2e],cl
  416ea8:	out    0x3,eax
  416eaa:	stos   DWORD PTR es:[edi],eax
  416eab:	inc    ecx
  416eac:	cmp    esi,DWORD PTR [esi-0x60]
  416eaf:	or     BYTE PTR [esi],bl
  416eb1:	int    0x6b
  416eb3:	push   eax
  416eb4:	sbb    ebp,DWORD PTR [ecx+0x73]
  416eb7:	fist   WORD PTR [ebp+0x48]
  416eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ebb:	jmp    0x416f14
  416ebd:	sbb    DWORD PTR [ecx],0xffffffa5
  416ec0:	leave  
  416ec1:	sbb    DWORD PTR [edi-0x35],edi
  416ec4:	xor    al,0x77
  416ec6:	sbb    ah,BYTE PTR [edi-0xf90f112]
  416ecc:	(bad)  
  416ecd:	jl     0x416f4a
  416ecf:	sub    esi,esi
  416ed1:	mov    eax,ds:0xd0eee534
  416ed6:	shl    BYTE PTR [ebp+0x691d2326],1
  416edc:	pop    es
  416edd:	mov    edi,edi
  416edf:	fistp  DWORD PTR [edx]
  416ee1:	imul   ecx,DWORD PTR [edi],0xffffffc2
  416ee4:	popa   
  416ee5:	push   ebx
  416ee6:	stos   BYTE PTR es:[edi],al
  416ee7:	bound  edi,QWORD PTR [eax+ecx*4+0x5b]
  416eeb:	xor    ah,BYTE PTR [esi+ebp*2-0x6e]
  416eef:	sbb    eax,0xe2448a44
  416ef4:	inc    ecx
  416ef5:	pop    esi
  416ef6:	add    al,0xac
  416ef8:	out    dx,eax
  416ef9:	mov    dl,0x75
  416efb:	or     eax,0xf9180ba7
  416f00:	jmp    0x416ef0
  416f02:	and    DWORD PTR [edi+0x40072c6a],esp
  416f08:	add    eax,0xc8ae2320
  416f0d:	mov    bh,0xce
  416f0f:	sbb    bh,BYTE PTR [ecx-0x23]
  416f12:	(bad)  
  416f13:	lods   al,BYTE PTR ds:[esi]
  416f14:	rcl    BYTE PTR [edi+0x4e],0x2
  416f18:	out    0xc4,eax
  416f1a:	xlat   BYTE PTR ds:[ebx]
  416f1b:	and    eax,0xb4ae819c
  416f20:	jne    0x416ec9
  416f22:	xor    al,0x21
  416f24:	xor    al,BYTE PTR [edi]
  416f26:	loop   0x416f65
  416f28:	loopne 0x416f22
  416f2a:	dec    eax
  416f2b:	loop   0x416f8e
  416f2d:	scas   al,BYTE PTR es:[edi]
  416f2e:	jge    0x416ec9
  416f30:	pop    ebx
  416f31:	dec    ebx
  416f32:	or     esp,DWORD PTR [eax+0x5]
  416f35:	push   esp
  416f36:	mov    ds:0xb378e24a,eax
  416f3b:	cdq    
  416f3c:	ficom  DWORD PTR [ebx]
  416f3e:	pop    edx
  416f3f:	adc    ah,bl
  416f41:	push   ebp
  416f42:	shr    dl,0xfa
  416f45:	ss (bad) 
  416f47:	jnp    0x416f00
  416f49:	test   eax,0x2222832d
  416f4e:	or     eax,0xbc27a3e9
  416f53:	les    eax,FWORD PTR [esi]
  416f55:	(bad)  
  416f56:	fsubr  QWORD PTR [esi]
  416f58:	and    esi,ecx
  416f5a:	imul   ebx,DWORD PTR [esi],0xffffffce
  416f5d:	sbb    dh,BYTE PTR [esi]
  416f5f:	cmp    al,0x6f
  416f61:	add    dh,BYTE PTR [edx+ecx*4]
  416f64:	in     al,dx
  416f65:	cmp    eax,0xc305dbc6
  416f6a:	add    edi,DWORD PTR [ebp+0x6f]
  416f6d:	sbb    eax,0x8a90ae11
  416f72:	adc    bl,bl
  416f74:	jecxz  0x416fe7
  416f76:	jne    0x416fc8
  416f78:	inc    ecx
  416f79:	jne    0x416f7e
  416f7b:	mov    edi,0x7932257a
  416f80:	in     eax,dx
  416f81:	out    0x9d,eax
  416f83:	cmp    ebp,DWORD PTR [ecx]
  416f85:	das    
  416f86:	out    dx,al
  416f87:	add    ah,BYTE PTR ds:0x89674376
  416f8d:	sub    al,BYTE PTR [ebx+eiz*8]
  416f90:	ins    DWORD PTR es:[edi],dx
  416f91:	cmp    eax,0xc5440b92
  416f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f97:	cmc    
  416f98:	pushf  
  416f99:	stos   DWORD PTR es:[edi],eax
  416f9a:	add    cl,BYTE PTR [eax+0x126b913d]
  416fa0:	ins    DWORD PTR es:[edi],dx
  416fa1:	or     ax,0x13e
  416fa5:	fdivr  DWORD PTR [esi-0x6be20fb5]
  416fab:	cmp    DWORD PTR [ebx],0x4ed3515b
  416fb1:	fstp   TBYTE PTR [ebx-0x2d9200b]
  416fb7:	jbe    0x416fba
  416fb9:	inc    ecx
  416fba:	jns    0x416f46
  416fbc:	cmp    BYTE PTR [edx+0x76],0xd1
  416fc0:	push   ds
  416fc1:	pop    eax
  416fc2:	pop    esi
  416fc3:	or     DWORD PTR [eax-0x3ce16ee],edi
  416fc9:	(bad)
  416fcc:	push   esp
  416fcd:	lods   eax,DWORD PTR ds:[esi]
  416fce:	(bad)  
  416fcf:	push   ds
  416fd0:	pushf  
  416fd1:	jge    0x416ff8
  416fd3:	es (bad) 
  416fd6:	push   ds
  416fd7:	icebp  
  416fd8:	adc    dh,BYTE PTR [ebx]
  416fda:	or     edx,esp
  416fdc:	leave  
  416fdd:	add    bl,al
  416fdf:	sub    BYTE PTR [ebx],dl
  416fe1:	mov    bl,0x5a
  416fe3:	addr16 cmp ecx,0xffffffbe
  416fe7:	pop    edx
  416fe8:	cmp    eax,0x6db1d71e
  416fed:	push   eax
  416fee:	(bad)  [ecx+edx*2-0x43eb672b]
  416ff5:	inc    esp
  416ff6:	jg     0x417001
  416ff8:	mov    bh,0x33
  416ffa:	xchg   bl,dl
  416ffc:	jp     0x417005
  416ffe:	xor    al,dl
  417000:	add    BYTE PTR [ecx],bl
  417002:	pop    ds
  417003:	xor    BYTE PTR gs:[eax-0x5c],bh
  417007:	cdq    
  417008:	fisttp WORD PTR [edx+esi*2+0x6a]
  41700c:	jmp    0x41704d
  41700e:	sub    bh,BYTE PTR [esi-0x4e]
  417011:	cmp    eax,0x4846a0b8
  417016:	push   esi
  417017:	xor    dl,BYTE PTR [ebp-0x389d9a96]
  41701d:	lahf   
  41701e:	jle    0x416fbf
  417020:	inc    eax
  417021:	or     BYTE PTR [ebx],al
  417023:	out    0x28,eax
  417025:	mov    ds:0x2f972aa4,eax
  41702a:	jbe    0x417041
  41702c:	fmul   QWORD PTR [esi]
  41702e:	mov    cl,0x5e
  417030:	pushf  
  417031:	div    BYTE PTR [eax-0x5dbd11f1]
  417037:	fcomp  DWORD PTR [edx+0x4]
  41703a:	ret    0xaf71
  41703d:	rol    DWORD PTR [edx],0xa6
  417040:	cmc    
  417041:	mov    DWORD PTR [ebx-0xf50a991],edi
  417047:	data16 jo 0x417033
  41704a:	cmp    al,0x1a
  41704c:	cld    
  41704d:	adc    DWORD PTR [edx-0x46],0x50
  417051:	inc    ecx
  417052:	inc    edx
  417053:	fst    QWORD PTR [ebx-0x53e0bf67]
  417059:	mov    bl,0x7a
  41705b:	inc    esp
  41705c:	icebp  
  41705d:	sbb    DWORD PTR [ecx+eiz*1+0x65cf16],0x83ab358b
  417068:	in     al,dx
  417069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41706a:	mov    edx,edx
  41706c:	jmp    0x417050
  41706e:	and    cl,dh
  417070:	pop    edi
  417071:	scas   eax,DWORD PTR es:[edi]
  417072:	xor    eax,0xda6e8bc3
  417077:	pop    esi
  417078:	inc    esp
  417079:	dec    ecx
  41707a:	sbb    ch,0xe2
  41707d:	mov    ebx,DWORD PTR [ebx-0x36]
  417080:	pop    ebx
  417081:	loop   0x41701c
  417083:	xchg   eax,esp
  417085:	bound  esi,QWORD PTR [ebx-0x62]
  417088:	bound  ecx,QWORD PTR [esp+esi*8]
  41708b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41708c:	xor    edi,DWORD PTR [ebp+0x1cf79fdc]
  417092:	pop    ebx
  417093:	xor    edx,edx
  417095:	add    eax,0xa29dc1d2
  41709a:	and    BYTE PTR [ecx+0x5555fe68],dl
  4170a0:	pop    ss
  4170a1:	xlat   BYTE PTR ds:[ebx]
  4170a2:	push   ecx
  4170a3:	cmc    
  4170a4:	ja     0x4170ce
  4170a6:	xchg   ebx,eax
  4170a7:	cmp    DWORD PTR [ebx+edi*8],ebp
  4170aa:	and    DWORD PTR [edi+0x3bec0ad2],esp
  4170b0:	lods   eax,DWORD PTR ds:[esi]
  4170b1:	xchg   ebx,eax
  4170b2:	aas    
  4170b3:	cmp    bh,BYTE PTR [ecx+0x69]
  4170b6:	and    ch,BYTE PTR [esi-0x69]
  4170b9:	cwde   
  4170ba:	xor    al,ch
  4170bc:	and    BYTE PTR [edx+0x42a43832],ah
  4170c2:	mov    al,0xcc
  4170c4:	push   esp
  4170c5:	adc    bl,BYTE PTR [ecx+0xcfa0f70]
  4170cb:	xchg   ebp,eax
  4170cc:	out    0x6e,al
  4170ce:	pop    es
  4170cf:	imul   eax,DWORD PTR [edx+0x66],0xf41d0350
  4170d6:	pop    esi
  4170d7:	es inc ebx
  4170d9:	push   ds
  4170da:	fisubr DWORD PTR [eax+0x5d168ea8]
  4170e0:	mov    al,0xca
  4170e2:	cli    
  4170e3:	or     ch,cl
  4170e5:	out    0x74,eax
  4170e7:	mov    bl,0x1f
  4170e9:	sar    edx,1
  4170eb:	jl     0x41709e
  4170ed:	jo     0x417077
  4170ef:	shl    ecx,1
  4170f1:	xor    eax,0xa2910775
  4170f6:	data16 fisub WORD PTR cs:[edx+edi*8]
  4170fb:	sbb    dl,BYTE PTR [ecx+0x25]
  4170fe:	retf   
  4170ff:	addr16 fneni(8087 only) 
  417102:	in     eax,dx
  417103:	retf   0x1b6
  417106:	aaa    
  417107:	add    dh,BYTE PTR [eax+ecx*8+0x73549500]
  41710e:	ins    BYTE PTR es:[edi],dx
  41710f:	popa   
  417110:	invd   
  417112:	pextrw edx,(bad),0xc5
  417114:	xchg   esp,eax
  417115:	lods   eax,DWORD PTR ds:[esi]
  417116:	inc    edx
  417117:	mov    cl,0x50
  417119:	jae    0x417175
  41711b:	mov    esi,0x4a02dedf
  417120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417121:	ret    
  417122:	and    al,0xb2
  417124:	dec    edi
  417125:	sbb    bh,0xc1
  417128:	xor    BYTE PTR [esp+ebp*4+0x1b082747],bh
  41712f:	xchg   edi,eax
  417130:	ret    
  417131:	pop    esi
  417132:	adc    dl,dl
  417134:	jmp    0xcb31:0xa0610511
  41713b:	mov    dl,0xe7
  41713d:	fisub  DWORD PTR [edx+0x79bf210f]
  417143:	dec    ebx
  417144:	xchg   ebx,edi
  417146:	dec    edi
  417147:	jmp    0x2139705f
  41714c:	mov    ebp,DWORD PTR [ecx]
  41714e:	or     eax,DWORD PTR [esi+0x21a1393]
  417154:	stos   BYTE PTR es:[edi],al
  417155:	or     al,0xa2
  417158:	addr16 push eax
  41715a:	pop    eax
  41715b:	aad    0x33
  41715d:	repnz mov edx,0xf288df65
  417163:	stos   DWORD PTR es:[edi],eax
  417164:	test   al,0x62
  417166:	sub    DWORD PTR [ebx-0x2b8570d5],ebp
  41716c:	ds or  eax,0x90fc8dbc
  417172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417173:	aam    0x92
  417175:	dec    ebp
  417176:	dec    eax
  417177:	test   al,0x4d
  417179:	xchg   BYTE PTR [esi-0x7],cl
  41717c:	mov    BYTE PTR [edi-0x15],0xca
  417180:	push   es
  417181:	or     BYTE PTR ds:0x1e35828a,0x52
  417188:	js     0x4171da
  41718a:	or     sp,0x41
  41718e:	mov    dh,0x95
  417190:	xor    ah,BYTE PTR [ebx]
  417192:	xor    al,0x76
  417194:	sub    al,0xa2
  417196:	leave  
  417197:	pop    esi
  417198:	stos   DWORD PTR es:[edi],eax
  417199:	inc    ebp
  41719a:	mov    dh,0xa4
  41719c:	cld    
  41719d:	divps  xmm6,XMMWORD PTR ds:0x3a7d3a55
  4171a4:	mov    eax,DWORD PTR [edx]
  4171a6:	mov    WORD PTR [ecx],?
  4171a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a9:	or     al,0x15
  4171ab:	jg     0x4171db
  4171ad:	cmp    BYTE PTR [edi-0x20],0x83
  4171b1:	call   0x4857e9fd
  4171b6:	xlat   BYTE PTR ds:[ebx]
  4171b7:	pusha  
  4171b8:	push   ebx
  4171b9:	lods   eax,DWORD PTR ds:[esi]
  4171ba:	jmp    0x3e5b:0xc9799775
  4171c1:	test   BYTE PTR [ebp-0x7055dd76],dl
  4171c7:	(bad)  
  4171c8:	div    BYTE PTR [ebx+0x33791369]
  4171ce:	xchg   ebp,eax
  4171cf:	inc    ecx
  4171d0:	push   ebp
  4171d1:	xor    ebx,edx
  4171d3:	stos   DWORD PTR es:[edi],eax
  4171d4:	sbb    al,0x74
  4171d6:	sbb    ah,BYTE PTR [ebp+0x6a]
  4171d9:	mov    bh,0xc5
  4171db:	cmp    ah,cl
  4171dd:	mov    bh,cl
  4171df:	retf   
  4171e0:	mov    bl,dh
  4171e2:	retf   
  4171e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e4:	pop    edx
  4171e5:	cmp    ah,ah
  4171e7:	pusha  
  4171e8:	or     BYTE PTR [eax],bl
  4171ea:	push   ecx
  4171eb:	add    eax,0x12841fe0
  4171f0:	ja     0x41725b
  4171f2:	sub    ah,BYTE PTR [esi]
  4171f4:	mov    esp,0x8cc24208
  4171f9:	inc    edx
  4171fa:	add    cl,ah
  4171fc:	ins    BYTE PTR es:[edi],dx
  4171fd:	or     esp,DWORD PTR [edi+0x429c1d0f]
  417203:	into   
  417204:	stos   BYTE PTR es:[edi],al
  417205:	enter  0xdbad,0x34
  417209:	xchg   ecx,eax
  41720a:	bound  eax,QWORD PTR [ebx]
  41720c:	adc    eax,0xfad2809a
  417211:	and    bh,al
  417213:	repz jge 0x417232
  417216:	push   ebx
  417217:	sbb    al,0x53
  417219:	cs jle 0x41719c
  41721c:	pusha  
  41721d:	inc    eax
  41721e:	add    ch,bh
  417220:	xor    ch,BYTE PTR [edi-0x6f197635]
  417226:	add    dh,BYTE PTR [edi]
  417228:	out    dx,eax
  417229:	and    al,0x98
  41722b:	xor    esi,ecx
  41722d:	jmp    0x9c98ecbe
  417232:	rol    DWORD PTR [ecx],0x79
  417235:	or     al,0xa6
  417237:	clc    
  417238:	fld    QWORD PTR [ebx-0x2d77816d]
  41723e:	fst    st(3)
  417240:	clc    
  417241:	in     eax,0xcf
  417243:	lds    ebx,FWORD PTR [esi+0x7a171b4b]
  417249:	mov    esi,0x281e5665
  41724e:	push   eax
  41724f:	xchg   DWORD PTR [ebp+0x4f38b7c4],ebp
  417255:	add    DWORD PTR [ebx+0xb],0x9a635e10
  41725c:	pop    esi
  41725d:	fbstp  TBYTE PTR [esi]
  41725f:	mov    esp,0xd7f11620
  417264:	mov    ch,0x45
  417266:	sbb    al,0x68
  417268:	adc    BYTE PTR [ecx-0x40],al
  41726b:	ror    ebx,0x84
  41726e:	or     edi,DWORD PTR [ecx]
  417270:	pop    edx
  417271:	repz cmp dl,0x73
  417275:	jb     0x4172c3
  417277:	leave  
  417278:	mov    ch,0xed
  41727a:	cmp    DWORD PTR [eax],esi
  41727c:	xor    esi,DWORD PTR [edx-0x694967cd]
  417282:	dec    edx
  417283:	pop    esp
  417284:	sub    edx,edi
  417286:	mov    al,ds:0x1a5d357
  41728b:	pop    ebx
  41728c:	shl    edx,cl
  41728e:	retf   
  41728f:	and    bh,BYTE PTR [ebx]
  417291:	mov    eax,ds:0x4b918133
  417296:	push   esi
  417297:	jp     0x41724a
  417299:	ret    
  41729a:	jb     0x417225
  41729c:	dec    ecx
  41729d:	pusha  
  41729e:	outs   dx,DWORD PTR ds:[esi]
  41729f:	bound  eax,QWORD PTR [edi+0x6]
  4172a2:	jmp    0xd65:0xc1191012
  4172a9:	jno    0x417273
  4172ab:	pop    edi
  4172ac:	fisub  WORD PTR [ebx+ebx*2+0x258078d]
  4172b3:	dec    esi
  4172b4:	adc    BYTE PTR [eax],0x7e
  4172b7:	xor    eax,0xbb07e78f
  4172bc:	sub    al,0xae
  4172be:	fwait
  4172bf:	int3   
  4172c0:	add    al,0xff
  4172c2:	leave  
  4172c3:	and    eax,0x21bbd8cf
  4172c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c9:	sbb    eax,0x27546241
  4172ce:	mov    BYTE PTR [ebx-0x23],0xd3
  4172d2:	xchg   DWORD PTR [esi+0x3055e8d0],eax
  4172d8:	add    BYTE PTR [eax],dh
  4172da:	bound  eax,QWORD PTR [ebp-0x679a4d41]
  4172e0:	jb     0x4172a3
  4172e2:	fcomp  QWORD PTR [edx+0x51]
  4172e5:	imul   ecx,ebx,0xb5e82194
  4172eb:	mov    ah,0x2a
  4172ed:	jno    0x4172b0
  4172ef:	outs   dx,DWORD PTR ds:[esi]
  4172f0:	(bad)  
  4172f2:	xchg   ecx,eax
  4172f3:	jne    0x4172b3
  4172f5:	xchg   ebx,esi
  4172f7:	mov    ebp,0x44255d10
  4172fc:	xchg   ecx,eax
  4172fd:	pop    eax
  4172fe:	xor    al,0x36
  417300:	rcl    DWORD PTR [esi],1
  417302:	jbe    0x41733c
  417304:	ss data16 aaa 
  417307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417308:	adc    al,0x91
  41730a:	mov    dh,0x2f
  41730c:	xor    dh,BYTE PTR [eax]
  41730e:	lock and DWORD PTR [edi-0x45],edx
  417312:	jnp    0x417315
  417314:	push   esp
  417315:	push   cs
  417316:	fsubr  st,st(5)
  417318:	fisttp QWORD PTR [ebx]
  41731a:	(bad)  
  41731b:	adc    bl,ah
  41731d:	and    eax,0x3c51ab59
  417322:	and    BYTE PTR [ebx-0x7],bl
  417325:	cmp    edi,DWORD PTR [ecx+0x4d7dcf1c]
  41732b:	or     ah,BYTE PTR [edi+0x2941edf5]
  417331:	nop
  417332:	pop    esi
  417333:	retf   
  417334:	stos   DWORD PTR es:[edi],eax
  417335:	jne    0x4172d2
  417337:	test   edi,ecx
  417339:	dec    ecx
  41733a:	pop    eax
  41733b:	and    BYTE PTR [ebp+0x2fc27978],0xf1
  417342:	and    DWORD PTR [eax+eax*4+0x1d],edx
  417346:	sahf   
  417347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417348:	mov    eax,edx
  41734a:	add    bl,0x19
  41734d:	mov    ds:0xf3994b69,eax
  417352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417353:	ror    DWORD PTR [eax+0x5cad9179],1
  417359:	in     eax,dx
  41735a:	call   DWORD PTR [eax]
  41735c:	pop    edx
  41735d:	push   ecx
  41735e:	mov    dl,0x7b
  417360:	aad    0x8a
  417362:	push   ds
  417363:	lock mov gs,WORD PTR [esi]
  417366:	mov    WORD PTR [ecx-0x52],?
  417369:	mov    bl,BYTE PTR [edx-0x6]
  41736c:	jbe    0x4172f3
  41736e:	cmc    
  41736f:	dec    eax
  417370:	fwait
  417371:	popa   
  417372:	pop    esp
  417373:	call   0xb2c83fb1
  417378:	and    eax,0x3981fcd3
  41737d:	or     eax,DWORD PTR [edx+0x74292ae9]
  417383:	gs shl ch,0xd3
  417387:	cdq    
  417388:	cmp    BYTE PTR [esi],dh
  41738a:	lahf   
  41738b:	call   0xca32:0x96c67601
  417392:	jb     0x4173ae
  417394:	shl    BYTE PTR ds:0xac0372a,cl
  41739a:	adc    al,0x74
  41739c:	ror    DWORD PTR [eax-0x24],cl
  41739f:	outs   dx,BYTE PTR ds:[esi]
  4173a0:	pop    DWORD PTR [ebx+0x44]
  4173a3:	push   cs
  4173a4:	or     eax,0x248ebb18
  4173a9:	and    eax,0x6cb6db9f
  4173ae:	xor    DWORD PTR [ebp+0x72fb2e99],ebp
  4173b4:	imul   eax,DWORD PTR [esi],0xffffff9b
  4173b7:	out    dx,eax
  4173b8:	inc    esp
  4173b9:	(bad)  
  4173bb:	xchg   ebp,eax
  4173bc:	adc    ebp,ebp
  4173be:	inc    edi
  4173bf:	dec    ebp
  4173c0:	sahf   
  4173c1:	xor    al,0x54
  4173c3:	sbb    ebx,DWORD PTR ds:0xf83bf2ee
  4173c9:	and    edi,esi
  4173cb:	sbb    dh,BYTE PTR [ebx+0x1e428ca6]
  4173d1:	and    BYTE PTR [ebx+eax*1-0x50c10f9a],dl
  4173d8:	les    esp,FWORD PTR [edx]
  4173da:	jae    0x41744f
  4173dc:	inc    eax
  4173dd:	jns    0x417398
  4173df:	(bad)  
  4173e0:	jmp    0xfe62:0x86f7d228
  4173e7:	loopne 0x4173fe
  4173e9:	mov    bl,0x83
  4173eb:	mov    eax,ds:0x28120d55
  4173f0:	dec    esi
  4173f1:	or     BYTE PTR [eax-0x46112aa6],dh
  4173f7:	sub    dh,dh
  4173f9:	add    eax,0x4a01fc79
  4173fe:	(bad)  
  4173ff:	sub    ecx,DWORD PTR [ecx-0x248fd22d]
  417405:	dec    esi
  417406:	adc    BYTE PTR [eax-0xf],0x23
  41740a:	int3   
  41740b:	fisttp QWORD PTR ds:0x1906ea97
  417411:	dec    esp
  417412:	popf   
  417413:	push   es
  417414:	push   edi
  417415:	sbb    bl,ah
  417417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417418:	pop    edx
  417419:	das    
  41741a:	jb     0x417428
  41741c:	lds    edi,FWORD PTR [esi-0x31684b71]
  417422:	xchg   bx,ax
  417424:	inc    ecx
  417425:	push   edi
  417426:	cmc    
  417427:	xchg   esi,eax
  417428:	dec    esp
  417429:	mov    ah,0x14
  41742b:	xor    DWORD PTR [ebx-0x4c],ecx
  41742e:	xor    ebp,esp
  417430:	ds aam 0xbe
  417433:	mov    dh,0x98
  417435:	(bad)  
  417436:	fcomp  st(1)
  417438:	dec    ecx
  417439:	not    DWORD PTR [edx+edx*1+0x319d9de8]
  417440:	jl     0x417466
  417442:	push   esi
  417443:	dec    ebp
  417444:	push   esi
  417445:	gs std 
  417447:	jno    0x41746d
  417449:	push   ds
  41744a:	cwde   
  41744b:	mov    eax,ds:0x6bb47afa
  417450:	ret    
  417451:	xchg   ebp,ebp
  417453:	pop    ebp
  417454:	push   ecx
  417455:	sbb    eax,0xfa04b471
  41745a:	les    esp,FWORD PTR [edi-0x3bedd7a9]
  417460:	sub    esi,esi
  417462:	cmp    cl,bl
  417464:	pop    DWORD PTR [ebx+edi*4+0x15d48eea]
  41746b:	loope  0x4174e3
  41746d:	jp     0x41749d
  41746f:	and    DWORD PTR [ebx-0x31],0x40c592c5
  417476:	push   ss
  417477:	adc    DWORD PTR [eax+0x53],edx
  41747a:	sub    bl,dh
  41747c:	jg     0x41748a
  41747e:	(bad)  
  41747f:	(bad)  
  417482:	jo     0x41741d
  417484:	sbb    BYTE PTR ds:0x8b790eea,al
  41748a:	xchg   esi,eax
  41748b:	pop    ebp
  41748c:	push   edx
  41748d:	dec    ecx
  41748e:	test   ah,0x2f
  417491:	jl     0x417455
  417493:	jl     0x41743b
  417495:	sbb    al,0xb1
  417497:	xor    ch,BYTE PTR [eax]
  417499:	pop    edx
  41749a:	in     eax,0xfd
  41749c:	je     0x417481
  41749e:	add    eax,0x769a796
  4174a3:	sub    al,0xd1
  4174a5:	int3   
  4174a6:	std    
  4174a7:	xor    ch,dl
  4174a9:	fcom   DWORD PTR [edi+0x3ad324a8]
  4174af:	les    eax,FWORD PTR [edi+0x61fe143b]
  4174b5:	mov    ecx,0xb5582f92
  4174ba:	sbb    al,bl
  4174bc:	jb     0x41744f
  4174be:	sti    
  4174bf:	ds das 
  4174c1:	xlat   BYTE PTR ds:[ebx]
  4174c2:	and    edx,ecx
  4174c4:	push   es
  4174c5:	lods   eax,DWORD PTR ds:[esi]
  4174c6:	and    BYTE PTR [edx+0x4a67eb06],ch
  4174cc:	fwait
  4174cd:	mov    edx,0x487dd4a
  4174d2:	mov    ah,0x2d
  4174d4:	mov    eax,ds:0x68891e39
  4174d9:	nop
  4174da:	ficom  DWORD PTR [ebp-0x645fe79]
  4174e0:	stos   BYTE PTR es:[edi],al
  4174e1:	and    edx,DWORD PTR ds:0x21a3a352
  4174e7:	adc    al,0x6b
  4174e9:	xor    eax,0xfd15550b
  4174ee:	xchg   ebx,eax
  4174ef:	shr    DWORD PTR [esi-0x28],cl
  4174f2:	mov    ebp,0xdc3c2ae1
  4174f7:	rcr    BYTE PTR ds:0x1057df6,0xbc
  4174fe:	in     al,0xf8
  417500:	call   0x497a3892
  417505:	int    0x5a
  417507:	daa    
  417508:	fs sub ebx,esi
  41750b:	inc    edi
  41750c:	mov    ah,0x51
  41750e:	push   edx
  41750f:	add    DWORD PTR [edx+0x1fde9942],0xfffffff3
  417516:	pop    esi
  417517:	div    BYTE PTR [esi-0x5fa8d703]
  41751d:	jns    0x417512
  41751f:	fldenv [esp+ebp*1]
  417522:	test   BYTE PTR [edi],ah
  417524:	push   0xffffff97
  417526:	cdq    
  417527:	push   ss
  417528:	inc    edi
  417529:	fldlg2 
  41752b:	or     BYTE PTR [edi],dl
  41752d:	mov    esp,0x347780fd
  417532:	xchg   BYTE PTR [ebx-0x3e],dh
  417535:	mov    al,ds:0xc7829c9f
  41753a:	aaa    
  41753b:	cmp    ch,BYTE PTR [ecx+edi*1+0x2f]
  41753f:	mov    al,ds:0x26d51e41
  417544:	lods   eax,DWORD PTR ds:[esi]
  417545:	sbb    eax,DWORD PTR [ecx-0x6d]
  417548:	iret   
  417549:	call   0xb6f1:0x913b0f7d
  417550:	xor    al,0x20
  417552:	xchg   ebx,eax
  417553:	mov    ebx,0x90edb7ff
  417558:	mov    edx,0xaecde4b4
  41755d:	xlat   BYTE PTR ds:[ebx]
  41755e:	xchg   ebp,eax
  41755f:	aaa    
  417560:	ja     0x4175b6
  417562:	bound  ebx,QWORD PTR [eax]
  417564:	aaa    
  417565:	aas    
  417566:	das    
  417567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417568:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41756a:	shl    BYTE PTR [eax],1
  41756c:	sti    
  41756d:	mov    ds:0x401f1c77,al
  417572:	jns    0x4175b2
  417574:	addr16 push esi
  417576:	cmp    eax,0x42d24996
  41757b:	dec    eax
  41757c:	sti    
  41757d:	sti    
  41757e:	sbb    eax,0xec287148
  417583:	out    dx,al
  417584:	je     0x417547
  417586:	sbb    dh,BYTE PTR [ecx]
  417588:	inc    ebp
  417589:	sub    BYTE PTR ds:0xf9de05c,bh
  41758f:	imul   eax,ebx,0xa
  417592:	sbb    dl,BYTE PTR [ebp-0x25]
  417595:	(bad)  
  417596:	out    dx,eax
  417597:	rcr    BYTE PTR [ecx+0x188c29e4],1
  41759d:	mov    ebp,0x35991c3a
  4175a2:	add    eax,0xd4ea1c70
  4175a7:	mov    bh,0x4d
  4175a9:	xor    eax,0xc9ccdddf
  4175ae:	cmp    ch,BYTE PTR [esi]
  4175b0:	add    ebx,ecx
  4175b2:	pop    esp
  4175b3:	mov    esp,0xa804d621
  4175b8:	fild   DWORD PTR [eax+0x7d]
  4175bb:	test   BYTE PTR [ebx],ch
  4175bd:	mov    dh,0xa4
  4175bf:	das    
  4175c0:	out    0xbd,eax
  4175c2:	popf   
  4175c3:	cmc    
  4175c4:	fmul   QWORD PTR [edi]
  4175c6:	dec    eax
  4175c7:	popf   
  4175c8:	push   esp
  4175c9:	test   al,0x92
  4175cb:	mov    ch,0xf8
  4175cd:	fistp  DWORD PTR [edx+ebp*8-0x67]
  4175d1:	mov    dh,0xe9
  4175d3:	sbb    DWORD PTR [edx],0xf321389f
  4175d9:	pop    ecx
  4175da:	dec    ecx
  4175db:	(bad)  
  4175dc:	jnp    0x41764a
  4175de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175df:	add    BYTE PTR [edi],al
  4175e1:	xchg   BYTE PTR [ebp+ecx*4+0x6d],dl
  4175e5:	sar    DWORD PTR [eax+0x766d0f47],1
  4175eb:	data16 or BYTE PTR [ebp+0x7d],dl
  4175ef:	fstp   TBYTE PTR [edi]
  4175f1:	and    BYTE PTR [esi],0x1b
  4175f4:	mov    BYTE PTR [ecx+ebp*2],bh
  4175f7:	mov    edx,0x751fa902
  4175fc:	pop    ebx
  4175fd:	pop    ecx
  4175fe:	pop    es
  4175ff:	stc    
  417600:	adc    al,0xbd
  417602:	pop    es
  417603:	jge    0x41767c
  417605:	jb     0x4175f6
  417607:	xor    ecx,ecx
  417609:	(bad)  
  41760a:	lds    eax,FWORD PTR [ecx-0x237f6505]
  417610:	xchg   ch,al
  417612:	mov    WORD PTR [ebx],cs
  417614:	lea    esp,[eax+ebx*2+0x3b]
  417618:	ret    
  417619:	jle    0x4175ae
  41761b:	(bad)  
  41761c:	imul   eax,DWORD PTR [ebx+0x15],0xffffffd4
  417620:	mov    DWORD PTR [esi],ebp
  417622:	sub    DWORD PTR [edx-0x3b],0xffffffb9
  417626:	xlat   BYTE PTR ds:[ebx]
  417627:	cwde   
  417628:	imul   eax
  41762a:	dec    edi
  41762b:	pop    ebp
  41762c:	loopne 0x417690
  41762e:	and    eax,0x7e9bdb49
  417633:	mov    ch,0xdf
  417635:	cmp    dl,BYTE PTR [ecx-0x3e]
  417638:	mov    ebx,edi
  41763a:	xchg   edi,eax
  41763b:	stos   BYTE PTR es:[edi],al
  41763c:	mov    esi,0x516f78a2
  417641:	xor    bl,BYTE PTR [edi]
  417643:	and    eax,0xa1bba9a
  417648:	setns  BYTE PTR [ecx+0x7b]
  41764c:	call   0x67e79262
  417651:	cmp    dl,bh
  417653:	pop    ecx
  417654:	mov    al,0x85
  417656:	hlt    
  417657:	rcr    BYTE PTR [eax-0x41],cl
  41765a:	add    ah,dh
  41765c:	scas   al,BYTE PTR es:[edi]
  41765d:	fisub  WORD PTR [ecx]
  41765f:	pop    esi
  417660:	mov    esi,0xddafa5df
  417665:	(bad)
  417668:	xor    BYTE PTR [esi+0x4c],ah
  41766b:	enter  0x405d,0xc3
  41766f:	add    eax,0x1b765454
  417674:	rcr    DWORD PTR [ebx+ebx*1],1
  417677:	cli    
  417678:	daa    
  417679:	in     eax,dx
  41767a:	adc    BYTE PTR [edx],al
  41767c:	dec    esi
  41767d:	mov    eax,0xa5d48e4e
  417682:	sub    eax,0x70b4ce76
  417687:	add    BYTE PTR [ebp+0x27963b37],ah
  41768d:	mov    ebx,0x1ac184bd
  417692:	adc    eax,0x323f2494
  417697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417698:	inc    esi
  417699:	jecxz  0x4176b0
  41769b:	(bad)  
  41769c:	sahf   
  41769d:	jl     0x417639
  41769f:	lock sti 
  4176a1:	shl    dl,cl
  4176a3:	leave  
  4176a4:	fsub   st,st(7)
  4176a6:	mov    dh,0xf0
  4176a8:	sti    
  4176a9:	clc    
  4176aa:	jnp    0x41764a
  4176ac:	mov    ?,WORD PTR [ecx-0x56]
  4176af:	pop    edx
  4176b0:	mov    edi,DWORD PTR [ecx-0x25]
  4176b3:	aam    0x42
  4176b5:	stos   BYTE PTR es:[edi],al
  4176b6:	sbb    BYTE PTR [ebp+0x41ed2133],0x4a
  4176bd:	adc    ah,bl
  4176bf:	pop    esi
  4176c0:	and    al,BYTE PTR [edx-0x10]
  4176c3:	mov    DWORD PTR [ebx],ebx
  4176c5:	xchg   DWORD PTR [ebx],ebx
  4176c7:	push   esi
  4176c8:	xor    al,0x8f
  4176ca:	shl    BYTE PTR ds:[ebx+0x53a2f153],0x4c
  4176d2:	div    eax
  4176d4:	popf   
  4176d5:	jecxz  0x417700
  4176d7:	add    ebx,edx
  4176d9:	not    DWORD PTR [ebp-0x746a9d44]
  4176df:	and    ecx,eax
  4176e1:	inc    esi
  4176e2:	jo     0x4176bb
  4176e4:	and    dl,dh
  4176e6:	adc    esi,ebp
  4176e8:	(bad)  
  4176e9:	jmp    FWORD PTR ds:0xe5d308ac
  4176ef:	lds    esi,FWORD PTR [esi]
  4176f1:	shl    DWORD PTR [esi],0x80
  4176f4:	push   ecx
  4176f5:	loopne 0x41768e
  4176f7:	vmread ebp,eax
  4176fa:	jge    0x417766
  4176fc:	and    DWORD PTR [ebx-0x2a961768],edi
  417702:	pop    ecx
  417703:	cmp    bl,BYTE PTR [ebx+ebx*2-0x70]
  417707:	xchg   ebp,eax
  417708:	mov    ds:0xf56181f5,eax
  41770d:	sbb    cl,dl
  41770f:	(bad)  
  417710:	iret   
  417711:	icebp  
  417712:	rol    DWORD PTR [edi+0x789b0cfe],cl
  417718:	mov    dl,0x48
  41771a:	mov    ds:0xd55711,al
  41771f:	frstor fs:[eax]
  417722:	popa   
  417723:	retf   
  417724:	xchg   ch,al
  417726:	(bad)  
  417727:	xor    bl,BYTE PTR [ecx]
  417729:	into   
  41772a:	xor    DWORD PTR ds:0xea629b32,ecx
  417730:	js     0x41774d
  417732:	xchg   ecx,eax
  417733:	adc    edx,edx
  417735:	add    al,0xa5
  417737:	push   ebx
  417738:	fs mov ah,0xc2
  41773b:	lahf   
  41773c:	fstp   st(3)
  41773e:	jbe    0x41772d
  417740:	sbb    al,BYTE PTR [edi+eax*4+0xfadce6f]
  417747:	xor    cl,BYTE PTR [eax+0x65]
  41774a:	mov    ebx,0x1244fb09
  41774f:	scas   al,BYTE PTR es:[edi]
  417750:	xor    ecx,ebp
  417752:	sub    al,0x98
  417754:	xchg   BYTE PTR [ebx+edi*2-0x38],dh
  417758:	add    al,0x84
  41775a:	cmp    ebp,DWORD PTR [esp+ebp*2-0x1a7ffa1c]
  417761:	xor    esi,DWORD PTR [esi+0x6b62ec57]
  417767:	dec    edx
  417768:	add    BYTE PTR [ebx+edx*4],dl
  41776b:	aad    0x4
  41776d:	add    BYTE PTR [edx],bl
  41776f:	mov    edi,0xd7dca17f
  417774:	push   edi
  417775:	mov    ?,ebx
  417777:	cwde   
  417778:	fadd   DWORD PTR [edi]
  41777a:	or     BYTE PTR [edx-0x14605cd9],0x59
  417781:	repz jmp 0x4177bf
  417784:	pop    ebp
  417785:	jmp    0x7130df45
  41778a:	int3   
  41778b:	xchg   ebp,eax
  41778c:	xchg   esi,eax
  41778d:	adc    eax,0x3bde5880
  417792:	xchg   ebp,eax
  417793:	cmp    BYTE PTR [eax-0x1cc33792],bl
  417799:	mov    edx,0x143c5744
  41779e:	aas    
  41779f:	dec    edx
  4177a0:	imul   ecx,DWORD PTR [edi],0x218884a9
  4177a6:	sub    BYTE PTR [ebp-0x55de5995],bh
  4177ac:	push   ecx
  4177ad:	xor    eax,0x65cf283
  4177b2:	(bad)  
  4177b3:	adc    esp,DWORD PTR [ebx+0x7b]
  4177b6:	mov    ch,0x71
  4177b8:	add    ch,bh
  4177ba:	sub    ebx,edi
  4177bc:	inc    esp
  4177bd:	imul   esp,DWORD PTR [esi+0x10982835],0x63299280
  4177c7:	xchg   edx,eax
  4177c8:	mov    edi,0xaa5575b3
  4177cd:	test   DWORD PTR [ecx+0x14],ebx
  4177d0:	mov    esp,0xf523c4eb
  4177d5:	add    eax,0x86aad28f
  4177da:	(bad)  
  4177db:	push   ecx
  4177dc:	test   al,0x64
  4177de:	add    esp,DWORD PTR [ebp+0x35]
  4177e1:	(bad)  
  4177e2:	rcl    bh,1
  4177e4:	dec    eax
  4177e5:	adc    ecx,edi
  4177e7:	pop    ds
  4177e8:	mov    ebp,0x242d1fac
  4177ed:	add    BYTE PTR [ebx-0xa88a853],ch
  4177f3:	shl    BYTE PTR [ebx],1
  4177f5:	(bad)  
  4177f6:	and    al,0xd1
  4177f8:	mov    eax,0x8403eaba
  4177fd:	(bad)  
  4177fe:	(bad)  
  4177ff:	jo     0x417807
  417801:	call   0xa0ee14fc
  417806:	push   es
  417807:	push   esp
  417808:	xchg   esi,eax
  417809:	fidiv  DWORD PTR [ecx+0xe2da6af]
  41780f:	push   0xffffffbc
  417811:	xchg   ebx,esi
  417813:	pop    ebx
  417814:	daa    
  417815:	adc    eax,0xaf0c6120
  41781a:	mov    ecx,0xdff777ee
  41781f:	(bad)  
  417820:	(bad)  
  417821:	rcl    BYTE PTR [eax],cl
  417823:	push   ebp
  417824:	xor    eax,0x61b33177
  417829:	aaa    
  41782a:	imul   edx,DWORD PTR [ebx+0x55],0xc9e4325f
  417831:	clc    
  417832:	xor    al,0xf1
  417834:	add    eax,0xc14b7e72
  417839:	fcomp  QWORD PTR [eax+0xe0305b7]
  41783f:	jbe    0x417825
  417841:	fimul  WORD PTR [edi+0xc73e405]
  417847:	inc    ebp
  417848:	mov    ?,WORD PTR [ebp-0x3d4be160]
  41784e:	push   edx
  41784f:	fimul  DWORD PTR [ecx+0x34]
  417852:	push   ds
  417853:	in     eax,0xd8
  417855:	cdq    
  417856:	jmp    0x4178b4
  417858:	dec    ecx
  417859:	dec    esp
  41785a:	repnz popf 
  41785c:	dec    esi
  41785d:	or     al,0x72
  41785f:	jb     0x417804
  417861:	add    al,0xf
  417863:	ss inc eax
  417865:	jae    0x4178ae
  417867:	or     eax,0xfc48f351
  41786c:	mov    BYTE PTR [edi+0x7b71f0ae],dl
  417872:	and    al,0x5f
  417874:	jmp    0x41785e
  417876:	mov    bl,0x9d
  417878:	nop
  417879:	xor    eax,0xf2706459
  41787e:	xchg   ebx,eax
  41787f:	in     al,dx
  417880:	add    ch,BYTE PTR [esp+edi*1+0x2b]
  417884:	(bad)
  417887:	sbb    al,BYTE PTR [esi+0x4f]
  41788a:	in     eax,0x46
  41788c:	scas   al,BYTE PTR es:[edi]
  41788d:	(bad)  
  41788e:	xchg   ebx,eax
  41788f:	jns    0x417849
  417891:	fwait
  417892:	jbe    0x41788b
  417894:	pop    ds
  417895:	mov    eax,ds:0xd41d3caf
  41789a:	popf   
  41789b:	test   DWORD PTR [ebp+ebx*2+0x68c7e05d],edi
  4178a2:	adc    bl,BYTE PTR [ecx]
  4178a4:	jge    0x41782a
  4178a6:	scas   al,BYTE PTR es:[edi]
  4178a7:	pop    edx
  4178a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a9:	scas   eax,DWORD PTR es:[edi]
  4178aa:	(bad)  
  4178ab:	xchg   ebp,eax
  4178ac:	mov    edx,0xa9708536
  4178b1:	cmp    eax,0xbba38214
  4178b6:	aad    0xa7
  4178b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b9:	mov    dl,0x7
  4178bb:	mov    BYTE PTR [ebp-0x3],cl
  4178be:	das    
  4178bf:	mov    esp,0x52721298
  4178c4:	(bad)  
  4178c6:	cmp    ch,BYTE PTR [ebx+eax*2-0x1dda35e5]
  4178cd:	(bad)  
  4178ce:	je     0x417856
  4178d0:	adc    edx,DWORD PTR [esi-0x28]
  4178d3:	sub    al,0x7b
  4178d5:	mov    al,ds:0x7c0a33db
  4178da:	nop
  4178db:	nop
  4178dc:	sbb    eax,0x1b2d76e4
  4178e1:	dec    esp
  4178e2:	ja     0x41786d
  4178e4:	jmp    0x4178db
  4178e6:	mov    edi,0xe4d19b57
  4178eb:	and    al,0x1d
  4178ed:	add    eax,0x60990faa
  4178f2:	shl    BYTE PTR [ecx],1
  4178f4:	stos   BYTE PTR es:[edi],al
  4178f5:	test   al,0x2a
  4178f7:	lahf   
  4178f8:	push   esp
  4178f9:	scas   al,BYTE PTR es:[edi]
  4178fa:	inc    ecx
  4178fb:	inc    ebp
  4178fc:	pop    bp
  4178fe:	loop   0x4178be
  417900:	mov    ebp,0x665339eb
  417905:	mov    ah,0xb4
  417907:	adc    al,0x96
  417909:	cwde   
  41790a:	sbb    ah,BYTE PTR [edi+0x5c]
  41790d:	call   0x27f5:0xde0f2a35
  417914:	hlt    
  417915:	mov    al,ds:0x88fcb338
  41791a:	jnp    0x41797e
  41791c:	cmp    eax,0xe8f72e20
  417921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417922:	xchg   ecx,eax
  417923:	or     bh,cl
  417925:	loopne 0x417952
  417927:	mov    ds:0x22d669a0,al
  41792c:	std    
  41792d:	cmp    al,0x4
  41792f:	clc    
  417930:	daa    
  417931:	out    dx,eax
  417932:	xchg   edi,eax
  417933:	cmp    eax,0x244c70e4
  417938:	lea    esp,[eax-0xfc72607]
  41793e:	call   0x6fe4e4da
  417943:	mov    al,0xc4
  417945:	jno    0x4178f0
  417947:	push   eax
  417948:	ficomp DWORD PTR [eax-0x775fe576]
  41794e:	and    ch,BYTE PTR [esi+0x3381e463]
  417954:	push   esp
  417955:	je     0x417988
  417957:	xor    ch,BYTE PTR gs:[edx-0x27]
  41795b:	sbb    DWORD PTR [edi],esi
  41795d:	ds (bad) 
  417960:	jmp    FWORD PTR [esi]
  417962:	lds    ecx,FWORD PTR [ebx-0x3e]
  417965:	dec    esp
  417966:	jbe    0x4178ef
  417968:	popa   
  417969:	sub    esi,DWORD PTR [ebp-0x19]
  41796c:	xor    DWORD PTR [ebx],ebx
  41796e:	jmp    0x258566d9
  417973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417974:	pusha  
  417975:	cmp    al,0xc1
  417977:	outs   dx,DWORD PTR ds:[esi]
  417978:	jno    0x417967
  41797a:	mov    esi,0xb24c8afd
  41797f:	ss xor eax,0x395072d1
  417985:	hlt    
  417986:	and    DWORD PTR [ebx],ecx
  417988:	addr16 hlt 
  41798a:	sbb    al,0x87
  41798c:	pop    ss
  41798d:	jns    0x417961
  41798f:	lock xchg ah,ah
  417992:	rcr    BYTE PTR [ebp+0x2a49c48e],cl
  417998:	add    al,0x3a
  41799a:	adc    esi,DWORD PTR [esi]
  41799c:	data16 mov ?,WORD PTR [esi+0x5c]
  4179a0:	dec    eax
  4179a1:	cld    
  4179a2:	scas   al,BYTE PTR es:[edi]
  4179a3:	in     al,0x21
  4179a5:	inc    esp
  4179a6:	cmc    
  4179a7:	xchg   ebx,eax
  4179a8:	pop    edi
  4179a9:	sbb    cl,dl
  4179ab:	sbb    esp,edx
  4179ad:	mov    edi,ecx
  4179af:	or     al,0x94
  4179b1:	icebp  
  4179b2:	dec    eax
  4179b3:	dec    ebp
  4179b4:	mov    ah,0xad
  4179b6:	xor    al,0x8f
  4179b8:	shr    DWORD PTR [ecx+0x24],1
  4179bb:	mov    ds:0x8a02a52b,eax
  4179c0:	dec    ebx
  4179c1:	push   esp
  4179c2:	jg     0x4179b1
  4179c4:	aaa    
  4179c5:	shl    dl,cl
  4179c7:	fs pop es
  4179c9:	test   BYTE PTR [edi],al
  4179cb:	sbb    DWORD PTR [ecx-0x7f91d8e3],esi
  4179d1:	adc    ecx,edx
  4179d3:	test   eax,0xf85dfa1d
  4179d8:	dec    edx
  4179d9:	test   DWORD PTR [edx-0x10],esp
  4179dc:	fcmovnu st,st(6)
  4179de:	push   0x6e559f61
  4179e3:	out    0x5d,al
  4179e5:	out    0x55,eax
  4179e7:	xchg   edx,eax
  4179e8:	(bad)  
  4179ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ec:	test   DWORD PTR es:[eax+0x2a],esp
  4179f0:	pusha  
  4179f1:	sub    bl,BYTE PTR [ecx-0x11f87ffb]
  4179f7:	ror    BYTE PTR [ecx],1
  4179f9:	iret   
  4179fa:	jmp    0x9c340f70
  4179ff:	out    0x85,eax
  417a01:	dec    esp
  417a02:	pop    ss
  417a03:	fnstsw WORD PTR [ebx-0x8]
  417a06:	xchg   esp,eax
  417a07:	sub    BYTE PTR [edi],bl
  417a09:	jge    0x4179af
  417a0b:	les    esi,FWORD PTR [edi]
  417a0d:	or     bh,dh
  417a0f:	xchg   BYTE PTR [ebp+0x2cae2f5c],bl
  417a15:	aad    0xaf
  417a17:	sbb    eax,0x6f0a083c
  417a1c:	or     cl,BYTE PTR [edi]
  417a1e:	push   eax
  417a1f:	cld    
  417a20:	mov    dl,0x1b
  417a23:	mov    esi,0x9819815c
  417a28:	outs   dx,DWORD PTR ds:[esi]
  417a29:	add    ecx,DWORD PTR [ecx+edi*1-0x26]
  417a2d:	xor    dl,BYTE PTR [bx+si]
  417a30:	ds inc esp
  417a32:	cmp    al,0xc8
  417a34:	push   ss
  417a35:	sbb    edi,DWORD PTR [ebp-0x53]
  417a38:	test   BYTE PTR [edi-0x67f560af],0x2c
  417a3f:	shl    DWORD PTR [eax+0x1f],1
  417a42:	cwde   
  417a43:	(bad)  [edx+ecx*2+0x1b60744a]
  417a4a:	jae    0x4179e7
  417a4c:	pusha  
  417a4d:	sbb    DWORD PTR [edi+0x5b],esi
  417a50:	jne    0x417abb
  417a52:	push   ss
  417a53:	fld    QWORD PTR [edx+ecx*2+0x53ce6cd9]
  417a5a:	xor    eax,DWORD PTR [eax-0x78]
  417a5d:	or     DWORD PTR [ebp+0x29],esi
  417a60:	ret    0xe93d
  417a63:	(bad)  
  417a64:	(bad)  
  417a65:	sbb    edi,ecx
  417a67:	bound  ebp,QWORD PTR [ecx+0x64]
  417a6a:	xchg   edi,eax
  417a6b:	les    esi,FWORD PTR [ebx-0x65]
  417a6e:	in     al,0xad
  417a70:	pop    ss
  417a71:	lea    ebp,[edi-0x55]
  417a74:	sbb    DWORD PTR [edi+0x74],ecx
  417a77:	add    ah,BYTE PTR [ecx+0x4e6f5d09]
  417a7d:	ror    cl,1
  417a7f:	pushf  
  417a80:	push   esp
  417a81:	add    BYTE PTR [ebp-0x4c4a840b],0xfc
  417a88:	sahf   
  417a89:	das    
  417a8a:	push   eax
  417a8b:	xor    al,0x5
  417a8d:	jmp    0x417ada
  417a8f:	inc    esp
  417a90:	fnsave [eax+0x109dbd50]
  417a96:	imul   ebp,DWORD PTR [eax+0x20],0x699d4397
  417a9d:	test   DWORD PTR [esi],0x696acc84
  417aa3:	inc    esp
  417aa4:	loop   0x417ab8
  417aa6:	and    eax,0xa870b8d4
  417aab:	daa    
  417aac:	iret   
  417aad:	cdq    
  417aae:	sar    bh,cl
  417ab0:	add    BYTE PTR [esi-0x240a84fb],dh
  417ab6:	inc    edi
  417ab7:	dec    ecx
  417ab8:	daa    
  417ab9:	fnstcw WORD PTR [esp+eax*4]
  417abc:	xlat   BYTE PTR ds:[ebx]
  417abd:	cmp    al,0x69
  417abf:	mov    al,ds:0xca1838f4
  417ac4:	inc    ebx
  417ac5:	dec    ebx
  417ac6:	add    DWORD PTR [ebx+0x7e],edx
  417ac9:	sahf   
  417aca:	jmp    DWORD PTR [edi+0x347abe96]
  417ad0:	fs mov bl,0x80
  417ad3:	ffree  st(1)
  417ad5:	cmp    ebp,ebp
  417ad7:	clc    
  417ad8:	adc    eax,0x7cd051e
  417add:	in     eax,0xef
  417adf:	xor    al,0x5e
  417ae1:	dec    ecx
  417ae2:	mov    edi,0x908963e4
  417ae7:	fistp  WORD PTR [esi-0x62b52bff]
  417aed:	stos   DWORD PTR es:[edi],eax
  417aee:	adc    ah,BYTE PTR [ebx-0x448b6fd4]
  417af4:	push   edx
  417af5:	mov    ds:0x2e64ff63,al
  417afa:	pop    esi
  417afb:	sub    ah,dh
  417afd:	fs xchg ebp,eax
  417aff:	adc    BYTE PTR [ebx-0x10],bh
  417b02:	(bad)  
  417b03:	or     al,0x4b
  417b05:	clc    
  417b06:	xchg   edi,eax
  417b07:	xchg   ebx,eax
  417b08:	push   es
  417b09:	cdq    
  417b0a:	inc    eax
  417b0b:	shl    BYTE PTR [eax],1
  417b0d:	(bad)  
  417b0e:	fstp   QWORD PTR [eax+0x45]
  417b11:	pop    ebx
  417b12:	hlt    
  417b13:	cli    
  417b14:	cdq    
  417b15:	push   ebx
  417b16:	inc    esp
  417b17:	scas   al,BYTE PTR es:[edi]
  417b18:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  417b1a:	cmp    bh,ah
  417b1c:	mov    ebp,0x8e578ac
  417b21:	in     eax,0xe0
  417b23:	sbb    BYTE PTR [edi+0x56],al
  417b26:	sbb    ch,BYTE PTR [esi+0x35ba4361]
  417b2c:	pop    edi
  417b2d:	mov    cs,WORD PTR [edx+ebp*8]
  417b30:	xlat   BYTE PTR ds:[ebx]
  417b31:	mov    ah,0xf2
  417b33:	cwde   
  417b34:	ins    DWORD PTR es:[edi],dx
  417b35:	icebp  
  417b36:	mov    al,0x9c
  417b38:	(bad)  
  417b39:	and    al,0x9
  417b3b:	test   BYTE PTR [eax+0x5f],bl
  417b3e:	dec    ebp
  417b3f:	pushf  
  417b40:	es stos BYTE PTR es:[edi],al
  417b42:	jmp    FWORD PTR [eiz*4+0xde94767]
  417b49:	xchg   edi,eax
  417b4a:	inc    BYTE PTR [edi-0x1dad5f89]
  417b50:	lahf   
  417b51:	scas   eax,DWORD PTR es:[edi]
  417b52:	repnz jecxz 0x417b84
  417b55:	push   edi
  417b56:	retf   
  417b57:	je     0x417b7a
  417b59:	or     dl,BYTE PTR [edi+0x47d554dc]
  417b5f:	aam    0x70
  417b61:	aam    0xca
  417b63:	in     al,0x4f
  417b65:	cmp    ebp,esp
  417b67:	inc    esi
  417b68:	std    
  417b69:	fsubr  QWORD PTR [ecx-0x11]
  417b6c:	add    eax,0x5e95eb73
  417b71:	outs   dx,BYTE PTR ds:[esi]
  417b72:	test   eax,0x2e4f78dd
  417b77:	sub    BYTE PTR [edi+0x6a227c67],dl
  417b7d:	enter  0x89ac,0xe4
  417b81:	cmp    al,0xe5
  417b83:	jbe    0x417bac
  417b85:	add    eax,0x436bb32
  417b8a:	and    edx,DWORD PTR [esi+0x3e95cdba]
  417b90:	push   esi
  417b91:	ds jae 0x417b15
  417b94:	jbe    0x417bff
  417b96:	std    
  417b97:	mov    ds:0xa52cf75d,eax
  417b9c:	sub    DWORD PTR [ecx-0x2f],ebp
  417b9f:	sub    BYTE PTR cs:[eax-0x75465843],ah
  417ba6:	sahf   
  417ba7:	int3   
  417ba8:	push   ecx
  417ba9:	adc    eax,esp
  417bab:	pushf  
  417bac:	lods   al,BYTE PTR ds:[esi]
  417bad:	rcl    BYTE PTR [eax-0x61d2aa89],1
  417bb3:	dec    esp
  417bb4:	xor    bl,dh
  417bb6:	sub    eax,0x9ac7b878
  417bbb:	repnz jmp 0xcac2:0xbc2c8c9c
  417bc3:	ror    BYTE PTR ds:0xf93c4d4c,1
  417bc9:	mov    ds:0xead783af,al
  417bce:	dec    eax
  417bcf:	push   ebx
  417bd0:	cdq    
  417bd1:	fwait
  417bd2:	stos   DWORD PTR es:[edi],eax
  417bd3:	inc    esp
  417bd4:	sbb    ecx,esp
  417bd6:	cmp    ch,bl
  417bd8:	std    
  417bd9:	adc    eax,0x22177cb1
  417bde:	pop    ss
  417bdf:	push   ss
  417be0:	mov    edx,0x407c6b4d
  417be5:	icebp  
  417be6:	jo     0x417c67
  417be8:	fist   WORD PTR [edx+0x44d7609a]
  417bee:	sub    eax,0x3676290
  417bf3:	and    DWORD PTR [esp+ebp*8],esp
  417bf6:	lods   eax,DWORD PTR ds:[esi]
  417bf7:	(bad)  [ebx+ecx*2+0x1c]
  417bfb:	mov    al,ds:0xb9640a86
  417c00:	mov    ch,0xe5
  417c02:	push   0xffffff96
  417c04:	arpl   WORD PTR [edx+eiz*4-0x2ae8b4fb],si
  417c0b:	ficomp DWORD PTR [ebx-0x1a311bec]
  417c11:	sub    cl,BYTE PTR [ebp+0x2eb58550]
  417c17:	ja     0x417bf4
  417c19:	xchg   BYTE PTR [ecx],bl
  417c1b:	jp     0x417c0e
  417c1d:	cmc    
  417c1e:	xchg   edx,eax
  417c1f:	mov    ebp,0x84a64404
  417c24:	sub    ebx,DWORD PTR [ebx]
  417c26:	and    ch,cl
  417c28:	out    0x4f,al
  417c2a:	and    BYTE PTR [eax],dl
  417c2c:	cli    
  417c2d:	gs ret 0xe9ff
  417c31:	cld    
  417c32:	in     eax,dx
  417c33:	into   
  417c34:	mov    al,ds:0x5d6a37ef
  417c39:	out    0xc0,al
  417c3b:	jae    0x417bdb
  417c3d:	or     al,0xe0
  417c3f:	inc    ebx
  417c40:	mov    cl,0x1e
  417c42:	scas   eax,DWORD PTR es:[edi]
  417c43:	sbb    BYTE PTR [ecx-0x23],dl
  417c46:	adc    edx,edx
  417c48:	push   ds
  417c49:	jecxz  0x417c2c
  417c4b:	cmp    bl,ah
  417c4d:	imul   esp,DWORD PTR [ebx+0x75af051c],0xfffffff5
  417c54:	in     al,0x80
  417c56:	loope  0x417c10
  417c58:	fs dec esi
  417c5a:	hlt    
  417c5b:	inc    edx
  417c5c:	jp     0x417cda
  417c5e:	mov    WORD PTR [ecx],es
  417c60:	arpl   WORD PTR [ebx-0x65],dx
  417c63:	enter  0x40b0,0xab
  417c67:	cld    
  417c68:	jns    0x417cc7
  417c6a:	rol    DWORD PTR [edi+0x11990b],0xe6
  417c71:	inc    esp
  417c72:	(bad)  
  417c73:	adc    DWORD PTR [edx+0x79],ebx
  417c76:	jg     0x417c40
  417c78:	scas   eax,DWORD PTR es:[edi]
  417c79:	sub    eax,0xd3aa63d4
  417c7e:	mov    ebx,0x65fa2b0d
  417c83:	sbb    BYTE PTR [ecx+0x3a1fe061],ah
  417c89:	loopne 0x417c6f
  417c8b:	pop    esp
  417c8c:	sbb    BYTE PTR [ebx-0x39565f41],dl
  417c92:	clc    
  417c93:	jo     0x417c45
  417c95:	xor    edi,DWORD PTR [ebp-0x45]
  417c98:	scas   al,BYTE PTR es:[edi]
  417c99:	mov    ecx,0x1a6a2e39
  417c9e:	or     BYTE PTR [ebp+0x3bff5d8d],dh
  417ca4:	cmp    DWORD PTR [bp+di+0x2061],edi
  417ca9:	imul   ebx,DWORD PTR [edx+edi*8],0x21
  417cad:	pushf  
  417cae:	xchg   edx,eax
  417caf:	rcr    BYTE PTR [ebx+0x66],1
  417cb2:	rep stos DWORD PTR es:[edi],eax
  417cb4:	push   0xe56d8a79
  417cb9:	sub    BYTE PTR [ebp-0x70],bh
  417cbc:	nop
  417cbd:	test   BYTE PTR [edi+0x67f83fec],0x7f
  417cc4:	cs mov ch,0x1c
  417cc7:	(bad)  
  417cc8:	xchg   esi,eax
  417cc9:	(bad)  
  417cca:	icebp  
  417ccb:	mov    al,ds:0x5a674ef
  417cd0:	sub    DWORD PTR [esi-0x76],esi
  417cd3:	je     0x417c8a
  417cd5:	jae    0x417d3b
  417cd7:	xchg   esi,eax
  417cd8:	outs   dx,DWORD PTR ds:[esi]
  417cd9:	dec    esi
  417cda:	inc    edi
  417cdb:	dec    esi
  417cdc:	mov    esi,0x54633c72
  417ce1:	cmp    eax,0xcc4c4335
  417ce6:	repz js 0x417cb2
  417ce9:	loopne 0x417ce1
  417ceb:	jl     0x417ce5
  417ced:	outs   dx,BYTE PTR ds:[esi]
  417cee:	push   es
  417cef:	out    dx,eax
  417cf0:	xor    BYTE PTR [edx],al
  417cf2:	les    ebp,FWORD PTR [eax+eiz*1]
  417cf5:	pop    eax
  417cf6:	in     al,dx
  417cf7:	push   0xffffffc0
  417cf9:	ja     0x417d0d
  417cfb:	push   ss
  417cfc:	xchg   edx,eax
  417cfd:	mov    ebp,0x30e80004
  417d02:	rcl    DWORD PTR [edi+esi*1+0x35],0x93
  417d07:	sub    BYTE PTR [ebx-0x65],bh
  417d0a:	mov    edx,0xf0c762a4
  417d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d10:	xchg   esi,eax
  417d11:	mov    ebp,0xb1050157
  417d16:	push   0x119b1719
  417d1b:	jmp    0x417d15
  417d1d:	mov    esi,0xfd18d288
  417d22:	sbb    ebx,DWORD PTR [esi-0x471da00]
  417d28:	xor    eax,0xcf5e4023
  417d2d:	ss call 0xe32f9dbc
  417d33:	cmp    ah,bh
  417d35:	lods   eax,DWORD PTR ds:[esi]
  417d36:	in     eax,dx
  417d37:	push   eax
  417d38:	or     eax,0xcb6184cb
  417d3d:	fucomip st,st(5)
  417d3f:	mov    al,ds:0x142bd4e2
  417d44:	jmp    0x7b17c61d
  417d49:	mul    BYTE PTR [ebx+esi*8]
  417d4c:	into   
  417d4d:	xchg   ebp,eax
  417d4e:	cs test al,0x35
  417d51:	ss xchg ebp,eax
  417d53:	mov    eax,ds:0x91b388d
  417d58:	cmp    DWORD PTR [ecx+0x78],edi
  417d5b:	and    DWORD PTR [edx-0x7b241319],ecx
  417d61:	lods   eax,DWORD PTR ds:[esi]
  417d62:	(bad)  
  417d63:	cmc    
  417d64:	aad    0x16
  417d66:	icebp  
  417d67:	addr16 into 
  417d69:	(bad)  
  417d6b:	mov    ?,esp
  417d6d:	ja     0x417d0d
  417d6f:	add    edi,DWORD PTR [ecx+eax*4-0x7fe6df96]
  417d76:	ds jl  0x417de5
  417d79:	out    0xcf,eax
  417d7b:	les    esp,FWORD PTR gs:[ecx+0x37]
  417d7f:	into   
  417d80:	loope  0x417db0
  417d82:	add    bh,dl
  417d84:	adc    al,0x22
  417d86:	les    ebp,FWORD PTR [esi]
  417d88:	xor    BYTE PTR [ecx+ecx*1],cl
  417d8b:	pop    ss
  417d8c:	xchg   ebx,eax
  417d8d:	or     DWORD PTR [ebp+0x5],0x42004a38
  417d94:	jae    0x417d4d
  417d96:	xchg   ebx,eax
  417d97:	push   esi
  417d98:	mov    dl,0x78
  417d9a:	cmc    
  417d9b:	or     DWORD PTR [edx+0x2faec1f1],ebp
  417da1:	cmp    dh,ah
  417da3:	ja     0x417dde
  417da5:	call   FWORD PTR [ecx]
  417da7:	cwde   
  417da8:	shr    BYTE PTR [esi+0x6a93df99],1
  417dae:	inc    ecx
  417daf:	jbe    0x417d5d
  417db1:	mov    dl,0xeb
  417db3:	xor    eax,0x27b0bc32
  417db8:	and    al,0xc
  417dbb:	sub    al,0x57
  417dbd:	retf   
  417dbe:	jp     0x417d61
  417dc0:	mov    esp,0xb954099e
  417dc5:	adc    DWORD PTR [edi],esp
  417dc7:	and    ebp,DWORD PTR [ebx+0x62]
  417dca:	mov    ch,0xf5
  417dcc:	stc    
  417dcd:	ret    
  417dce:	cmp    al,0x6
  417dd0:	in     al,dx
  417dd1:	imul   edi,DWORD PTR [edi],0x54
  417dd4:	and    edi,DWORD PTR [edi+0x7bdba06]
  417dda:	dec    ebp
  417ddb:	in     eax,0x3c
  417ddd:	add    eax,0xd550215a
  417de2:	fmul   DWORD PTR [edi+0x1213012a]
  417de8:	sar    BYTE PTR [ecx],cl
  417dea:	push   0x87c638d3
  417def:	sbb    al,cl
  417df1:	pop    es
  417df2:	rol    DWORD PTR [eax],0x6d
  417df5:	pop    es
  417df6:	inc    esp
  417df7:	mov    es,WORD PTR [esi+0x70]
  417dfa:	jmp    0xe06f440c
  417dff:	retf   0x6e85
  417e02:	and    bl,BYTE PTR [edi-0x38a75]
  417e08:	(bad)  
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
